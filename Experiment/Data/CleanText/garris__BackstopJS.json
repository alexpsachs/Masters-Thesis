{
    "garris": "Thanks Harold, this looks great.  I will merge this today and follow up with a validation request.  -GS\n. Sorry, closed too soon.  Would be great to get a validation on this one...\n. It looks like there is a missing file.   what is the path of your backstop.json file?  What platform are you on?  and can you post your config file contents?\n. Hi,  Thanks,  I meant this file -->    myproject/backstop.json\nThis one will be hard for me to troubleshoot since I don't have a proper win8 machine.   There must be an issue with installation.  Admittedly, the process is not as straightforward as I would like.\n. oh,  that is interesting...   Couple of things.\nCan you cd to here myCoolProject/bower_components/backstopjs and run gulp genConfig\nThen run gulp echo   -- you should get http://getBootstrap.com/ homepage in the console...\nPlease let me know how it goes...  thanks!\n. Alrighty then, That looks broken.  :(   \nCould you try running this... sudo npm install -g phantomjs \nYou can run that from any location -- it should install phantomjs globally.  Someone recently commented they needed to do this -- but I haven't had a chance to verify it.  Please do this and then cd back to myCoolProject/bower_components/backstopjs and run gulp echo again...\nalso, just to confirm, your config file now looks like this...   yes?\n```\n{\n    \"viewports\" : [\n        {\n         \"name\": \"phone\",\n         \"viewport\": {\"width\": 320, \"height\": 480}\n        }\n        ,{\n         \"name\": \"tablet_v\",\n         \"viewport\": {\"width\": 568, \"height\": 1024}\n        }\n        ,{\n         \"name\": \"tablet_h\",\n         \"viewport\": {\"width\": 1024, \"height\": 768}\n        }\n    ]\n    ,\"grabConfigs\" : [\n        {\n            \"testName\":\"http://getbootstrap.com\"\n            ,\"url\":\"http://getbootstrap.com\"\n            ,\"hideSelectors\": [\n            ]\n            ,\"removeSelectors\": [\n                \"#carbonads-container\"\n            ]\n            ,\"selectors\":[\n                \"header\"\n                ,\"main\"\n                ,\"body .bs-docs-featurette:nth-of-type(1)\"\n                ,\"body .bs-docs-featurette:nth-of-type(2)\"\n                ,\"footer\"\n                ,\"body\"\n            ]\n        }\n    ]\n}\n```\n. @coljung @Jenkosama  Just checking in, were you able to resolve the issue?\n. Many thanks to @brutaldev for the bug fix!  \nAlso, I think these comments will help a lot of win users who have not already loaded phantomjs, casperjs & python.  \n14 has been merged in and will be released in v0.2.5.\n. @matt-newman, thanks for posting this. \n. Hey,  thanks for the heads up on this!   Apparently this is not something that I can manually set.  Seems Github has a bot that makes an educated guess about this.   Any advice on this from the hive would be greatly appreciated. \n. Done!\nsee... https://github.com/github/linguist/issues/1826\n. Looks like this is fix'd on GH's end.  I will followup and see if the category changed in production.   -GS\n. Yup.  It's now officially a JS project.  :)       Thanks @DimaVartanian !\n. FIX'D.   Thank you very much for catching this!    Cheers,  GS\n. Brilliant -- thanks so much!\n@proll -- I've just merged and pushed to master.  Maybe you'd like to validate and I will bump the release number?\n. Yup, nailed it.    Thank you very much!\n. Hi Lewis, these are great great ideas!  Yes, I totally agree -- any software should be tolerant of (and have intuitive fallbacks for) missing parameters.  So I will absolutely pull your changes in asap.  I'm probably not going to be able to get to it this weekend so please bear with me -- more likely Monday.  \nOnly comment on testing the body tag is that this is only effective to a point.  For simple pages it's great.   In practice, on more complex pages, I've found that a trivial regression may cause too many false positives.   That said, if a user doesn't include any selectors at all, it would make perfect sense to fall back to the body tag. So, yes.\nI'll follow up with you soon.   Cheers!  -GS\n. closed by #9 \n. Yup, this is pretty straight forward.\n. thanks @lewisnyman !\n. closes #8 \n. Ok, some thoughts on this...\n1) I think static reports are \"out of scope\" for BackstopJS -- The philosophy is more to enable automated testing and to run that testing very often, so I don't see effort put into persisting a particular test's results as particularly valuable.   For times where someone would want to share a particular result it is easy enough to just print to PDF or screenshot then email or upload to the process management app of your choice. \n2) It does make a certain amount of sense to load it onto a build machine such that others could use a live shared configuration.  This implementation would be better supported with some way to manage multiple configs and reference files.\n3) Better yet -- the ideal implementation is when your proactive team members are simply running this (or any other regression tests) locally to reduce regressions on their own.\n. Yes,  that would be very appreciated!   I very much would like to add some mocha tests to this also.  It is really terrible to not have any coverage at this point.  Any help in this area would be incredible.\nCheers, \nGarris\n. @felquis Thank you very much for this -- it is a lot of work!   My only concern is that many scripts were modified and I don't yet have any tests to make sure the changes wont cause regressions.  Therefore I think I will need some time before I can fully test this change.   Please give me a few days.   Again, thank you very much.   GS\n. @YuliaTsareva That would be great!\nBTW: I am bumping the version number tomorrow and your PR will be in there.\n. @YuliaTsareva  I originally wrote the core of the app as an internal tool in a few hours and made it as simple as possible -- so there are a lot of things that really should be there that still aren't so I am more than happy to pull in your improvements!  Please go ahead and send a PR -- I would like to see it with the zoom also so please keep it in if you think it is an improvement.   Thank you very much for your help!  It is great to know we are directly contributing to developer happiness :) \n. oh crap.  forgot about that.   good call.  thanks.\n. @marcosteybe Looks great,  thank you very much for the contribution!  -GS\n. Hi, in BackstopJS/bower.json -- what is the version number? \n. Hmm Ubuntu...  Just checking, have you confirmed that casperjs & phantomjs are running on the machine?  E.g. Enter phantomjs on console...\n. Yes.  That looks good.   The hanging thing is really throwing me.  How about running gulp echo?   Does it hang on that too?\n. Please let me know how gulp echo goes for you -- if it hangs there also I might need to see the console output...  \n. ok doctor.  I think we need to operate...\nCan you open BackstopJS/capture/echoFiles.js \naround line 68 please change...\ncasper.thenOpen(grabConfig.url, function() {\n    casper.wait(500);\n});\nto...\nconsole.log(' echoFiles> CASPER IS RUNNING')\ncasper.thenOpen(grabConfig.url, function() {\n    console.log(' echoFiles> PHANTOM IS RUNNING')\n    casper.wait(500);\n});\nThe first log confirms that casper is running ok.\nThe second confirms that phantom is ok.\nThanks for hanging in there!  Please let me know how it goes.\nAlso -- have you already successfully fun BackstopJS on WIN or OSX?  Is your Ubuntu instance like a staging env?\n. Could you try a simple Casper script also -- just to make sure they are talking to each other?\n. ...Preferably something that grabs a web page.\n. Hey that's great -- I love hollywood endings! \nThank you very much for sticking with it and documenting the resolution. \nI will add version notes to the troubleshooting section to make it easier for others. Mine are...\n$ phantomjs -v \n\n1.9.7\n\n$ casperjs --version \n\n1.1.0-beta3\n\nCheers!\n. Hi fvena,   This error is usually caused by a dependency issue.   Can you verify that Phantom and Casper are installed correctly?\n```\n$ phantomjs -v\n\n1.9.8\n```\n\nand\n```\n$ casperjs --version\n\n1.1.0-beta3\n```\n. Ok.  3 requests...\n\nCan you try running gulp genConfig and post the full output.\nCan you post the <root>/backstop.json file as well.\nAnd also, please post the full output for gulp reference.\n. Thanks for that.  It looks like node is not able to spawn out Casper or Phantom.  What OS are you on?   \nJust to test this, you could add this log stmt at line 199 of gulpfile.js...\nconsole.log( 'Ready to run ' + tests + ' with ' + casperProcess + '.' )\n\n. So far, all the points look good.  I wonder if it's permissions? Can you try running sudo gulp test   If that doesn't work, please try reinstalling in a test directory right on your desktop.  Please send the terminal output.  Also, what version is your node.js version?\n. I can tell from your wish list that we are on the same page.  All this stuff makes total sense. Even without tests I am really happy to pull this stuff in -- it's worth the short term regression risk.   I would also add that I've gotten a lot of feedback on adding a ready event listener to the config -- e.g. a developer could emit a 'myAppIsReady' event on the body or in the console and BackstopJS would wait to test until that event is fired.  This would really be easy to implement in Casper.\nFrom the feedback I am getting I know the changes you're proposing, in addition to the ready event would create a lot of happiness.   \nPlease do it and request the pull -- let me know if you need any support!\n. if you do go ahead with the changes -- I would just suggest you set the default reference directory location to be in parallel with the backstop.json file.  It would simplify the on-boarding process for new users.\n. Hey Peter,  I just wanted to check in with you.  There has been considerable work done on BackstopJS: updating to an all-NPM install, simplifying the config files, adding custom screenshot events and cleaning up some of the underlying Gulp code.   One of the next items would be the customizable screenshot location -- this is one of the items you had proposed above.   \nI wanted to see if you had gotten anywhere with that or if you still had any intentions of doing so.   Please let me know.   Best regards.  GS\n. Looks like it's all server side -- that's cool.  Alright then, best of luck with it.    Take care.   GS\n. I think this is great.  And I don't think this requires breaking changes...\n1. We could detect a viewport object in the config file and map that to root-level properties.  Then we could throw a warning: e.g. 'viewport' object is deprecated. Please see documentation for updated config properties.   This is a trivial addition which can be phased out and it will make life easier for early adopters.\n2. ok, so yes, \"grabConfigs\" is pretty weak.  tests or even scenarios is a big improvement.  Same as above, I think this could be made to be backward compatible too.  note: I really want to add a waitUntilEvent property to this section ASAP -- so apps waiting for AJAX calls can tell BackstopJS when they are ready\nWould love it if you wanted to send a pull request for any and all of this stuff.\n-GS\n. That is fantastic.  Best of luck with the presentation!  \n\nSent from my mobile device.\n\nOn Jan 16, 2015, at 3:33 AM, Lewis Nyman notifications@github.com wrote:\nI'll send a pull request next week. I've been concentrating on the presentation. It should be recorded so I'll send you the video once it's up :)\n\u2014\nReply to this email directly or view it on GitHub.\n. @lewisnyman -- just a heads up, new release today. You might want to do a pull.  Take care.  GS\n. Hi @lewisnyman -- I pulled this into master but don't have time to test today.  Please take a look if you get a chance.   In particular, try gulp echo.  (BTW: gulp echo is in a separate file There is probably a better way to manage that feature but for now it's there.)\n\nAlso. Thank you very much!\n. Just a followup.  The changes here check out on my end.   There was an issue with gulp echo but I have fixed that and pushed it to master.\n. Hi @sergesemashko, Thanks for posting.  Not sure what the use case would be for changing the bower_components path inside the BackstopJS directory.  Could you let me know?  Thanks -GS\n. oh... Got it!   Looks like Bower is behaving just as Bower should.  I just added a local .bowerrc to backstopjs/ root and all is well.   I will push this update out momentarily.   Thank you very much for reporting this bug!\nCheers,\nGarris\n. @sergesemashko -- new release pushed out.  It would be great if you had a minute to validate the fix.\nhttps://github.com/garris/BackstopJS/releases/tag/0.2.6\nRegards!\nGarris \n. Yes, great suggestion, I will work on that and also add a global sensitivity setting.\nBTW: Thank you very much for validating the release!  I really appreciate the help. :)\n. moving to feature request.\nClosed by #24\n. Yes, I started seeing this recently also.  See line 34 of compare/index.html.   \nvar misMatchThresh = 1;\nThis setting allows you to give some range of acceptable deviation.  In your examples it is a very small difference -- in the 0.17 range.   I set the threshold high, to avoid false positives on rounding errors.\nThis really should be able to be a user setting -- and also, probably set much lower.\nI think your suggestion to move delay & readyEvent to a global block makes sense also.  I will work on that.\n. I will move this feature to an enhancement request.\n. Closed by #24\n. Works for me.   \n@lewisnyman Maybe since you put in the last change on the config file (already merged to master) you can make this update to the config and update the readme doc?   I would pull that right away and push a new release.\n. Closed by #29 \nthanks @jehoshua02 !\n. This is a very popular enhancement.  Do you care to make a pull request?\nAlso, is it possible to implement this install without breaking the old install option.  There may be users who don't necessarily want their existing phantomjs & casperjs versions bumped.\nWhat do you think?\n. Done.  Closed with release https://github.com/garris/BackstopJS/releases/tag/1.2.0\n. Closes #21\n. Closes #20\n. Hi Lewis, this is great work.   I see on Line 273 & line 309 of the Travis log that there is an error reported by BackstopJS.  That error is thrown when backstopjs first runs and finds missing dependencies (this is after backstopjs attempts to spawn a bower process to install dependencies for the reporting module).   I think this is easily fixable by simply adding those dependencies to the build repo instead of omitting them like they are now.   \nIn any case this Travis stuff is useful and I will merge that in.   Would love to clean up this install.   @jehoshua02 suggested some nice improvements in #23 -- How do those look to you?\n. Yes.  Totally makes sense.\n. Done and done!\n\n. Yes, let's do this.  We'll need to remember to include the compare/bower_components/...  assets when creating the NPM entry.  I will need to update various documentation as well.\n. ok.  I have created an NPM branch with necessary bower dependencies already added in github and I have also instantiated npmjs.com/package/backstopjs.\nLet me know if you are ok for creating a pull request with the changes you're proposing.   I think it's best to simply start with a moving to an npm-only install.  After making sure that is solid we can do another release where we add hooks to installing phantom & casper etc.\nJust let me know if you'll have time/interest to create the pull request.  \nI very much appreciate the help!\nThanks!\n. No problem at all!  I really appreciate your interest in the project!   \nYou can post here if you decide to pick up the task to let anyone else who is working know. \nBest regards!\n. @jehoshua02 There is an article here which we should really update prior to releasing this change.\n. I don't think so.   Great progress!\n. Boom. Please verify!\n. Much Gratitue. \n. So much nicer.  Thanks.\n. @jehoshua02 What are you picturing for a command line tool?\n. Yup.  All sounds good to me.  \nLet's release this as 0.4.0 then.   I can create another branch to merge master and npm_install.   We can test that -- then move that back to master & release.\nI think 0.4.0 will open BackstopJS up to more developers who have some async client side stuff they need to test, and the improved config and gulp implementations will make it easier to extend and encourage more contribution.\nThe CLI is a nice touch because it gives the app a little more conventional feel -- and that will appeal to some developers as well.\nSomething to consider...  I've gotten some feedback from several engineers who wanted to use a central  BackstopJS instance to work across multiple projects.  I think this is a very valid use case and again, would likely widen the user base in a significant way.   Obviously, there are a lot of ways to implement this -- one, simple way would be to allow for custom screenshot file locations relative to the top level project directory (above /node_modules/).  If that were the case it would open the door for saving screenshots to say, backstopFiles/projectName/   It would then be straightforward matter to build configuration swapping.  This also fixes the huge transgression of saving user data in node_modules.\nJust an idea there.\nI am writing a guest blog tutorial where I'll announce this release -- my guess is that will go live in approx 3 weeks.  I'd like to give you guys credit on the backstopjs homepage for your contributions -- that sound ok?  Let me know if you want me to link your names to any particular URL.\nAlright.  Awesome.\nGS\n. I had an hour so I pulled the trigger today.   The contributions widget used an outdated api so that did not make it into this version.   Thanks for your help guys!   Follow up on other topics later.   Cheers.  GS\n. Hey @jehoshua02 thanks so much for all the effort you're putting into it.  Ill be out of the loop for a few days -- I am completely slammed with obligations for the rest of the week maybe longer.   \nQuickly tho: there are missing commands. 'gulp echo', 'gulp bless', 'gulp genConfig' and stuff to manually run the server.  Also, there is no need for a report directory.  The only file that changes is report.json.\nI have some questions too.  Will follow up as soon as my queue get manageable.  Best.  GS\n. @willsb3   Hey, good news -- you already have the option to require() a BackstopJS config.    See the readme file...  https://github.com/garris/BackstopJS/blob/master/README.md#using-a-js-based-config-file-version-100\nIt would be great if you could post your site map.xml > BackstopJS-config solution -- I'm sure there are others who would benefit from that example!\nAlso, FYI, that refactoring effort is in progress here... https://github.com/garris/BackstopJS/issues/164\n. I think your best bet is to break out your config generation from the rest of your app and use that standalone as your BackstopJS config.   Then you can kick off BackstopJS as you like from your existing build flow.  \nI think your comment about Gulp making things \"complicated\" is a bit too easy for you to make in hindsight.  The reason the tool is built on Gulp is because it allowed us to work very quickly and validate the usefulness of our direction in the beginning -- and by beginning I mean the first 2 years.   So I consider the decision to use Gulp as critical to having created something useful that thousands of users can benefit from.   And Yes, you have to cd node_modules/backstop -- but after that it's total utility for free.\nIn any case, as I already mentioned there is an effort to refactor BackstopJS into a more mature package -- threads here #232 and here #162.   @JulienPradet and @levithomason are leading this so please coordinate with them if you would like to contribute to that process.   Any help in this area would be greatly appreciated.\n. Hey Awesome!  What's a docker image?\n. Hi @dendril, thanks for filing this.  The config files are slightly different from version 0.3.0 & 0.4.0 and this could cause the issue.\nIf you run gulp genConfig the app will write a default configuration file at the root of your project.  (Please be careful,  this will overwrite any config existing at that location.)\nThen you can try running gulp reference and gulp test.  It should work then.  Please let me know if that fixes the issue.   \nThanks!   GS\n. Yes.  Messaging would be the right way to go.  Just a 'No paramName value found.'  should do it.\n. I just patched this in 0.4.1.  Old config parameters are now mapped to the new ones internally.   This is lowest friction for users.  The old format is deprecated, but on reflection, I think we should go a few releases before breaking everyones tests.\nExtra credit is to still add the warning on the console on detection of old configs.\nCheers GS\n. @dendril   Please verify the fix if you get a minute.   Regards.  GS\n. Hi @f4bien,  sorry for the delay following up on this -- hella busy...   This change looks good.  Can you post a config example to test this with?  Thanks.\n. This looks good.  This viewport node needs to be added to the config file in the ./test/ directory -- and simple.html should be updated to display the value onscreen for positive verification.   I will try to do that this week.  You are more than welcome to add it yourself if you can -- it would be a big help.  Either way, thank you. \n. Hi @f4bien,  there was a problem with this.   With multiple viewports, setting userAgent on one viewport has the unexpected effect of setting all subsequent viewport settings.  Therefore I am rolling this back.   This would be improved by only effecting the current viewport or by moving that config parameter to the root node of the config file.  Either would be fine for me if you can implement it.  Please let me know how you want to handle it.\nthanks!  GS\n. ```\n{\n    \"viewports\" : [\n        {\n            \"name\": \"phone\",\n            \"width\": 320,\n            \"height\": 480\n        },\n        {\n            \"name\": \"Apple iPhone 6 Plus\",\n            \"width\": 414,\n            \"height\": 736,\n            \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.3 (KHTML, like Gecko) Version/8.0 Mobile/12A4345d Safari/600.1.4\"\n        },\n        {\n            \"name\": \"tablet_v\",\n            \"width\": 568,\n            \"height\": 1024,\n            \"userAgent\":\"\"\n        },\n        {\n            \"name\": \"tablet_h\",\n            \"width\": 1024,\n            \"height\": 768\n        }\n    ],\n    \"scenarios\" : [\n        {\n            \"testName\":\"simple\",\n            \"url\":\"test/simple.html\",\n            \"hideSelectors\": [\n            ],\n            \"removeSelectors\": [\n            ],\n            \"selectors\":[\n                \"body\"\n            ],\n            \"readyEvent\":\"backstop.ready\",\n            \"delay\":0\n        }\n    ]\n}\n```\n\n. Hi @dendril, sorry for the delay.  \nThe first item has already been discussed and may happen at some point -- but this is not something currently planned.\nThe second item could be added as a property in any active config file at some point \u2013 again, this is something that is not currently planned.\nYou are more than welcome to add these enhancements and make a pull request.\nRegards,\nGS\n. Wow, nice catch -- will take that straight away!\n. Hi @Chapabu  thank you for filing this and researching the issue!   This suggestion makes sense.  Question tho --  is there any case where we'd need to set ssl-protocol if the url didn't contian \"https://\"?  My guess is no -- and if that guess is correct then my instinct is to handle this internally with a switch on if (/^https:\\/\\//.test(url)) {...}  just prior to the spawn block.   Maybe this is a nice convienience for nearly every (if not all) use cases?   What do you think?\n. That sounds great.  Go ahead and add that parameter if you get a chance.  I'm happy to pull that in.  Thanks.\n. This was resolved.  Issue only effects older phantom installs.\n. Super!  Thank you for the pull request.  Will pull later today.  Best GS\n. Looks good!    @Chapabu do you have a backstop.json config you used to test this?\n. So, here is something interesting.   I used your test file on the previous backstopjs version 0.4.1 and it seems to have rendered everything fine.  See attached.   \nMaybe this issue only applies to certain versions of Phantom?   \nWhat version of Phantom are you running?  And what OS?\ngarriss-macbook:backstopjs gshipon$ phantomjs -v\n1.9.8\n\n. Cool.  Mystery solved!    I am still tempted to keep the change in however -- I don't mind being a little bit more compatible with older versions.   My only concern would be that adding this flag could somehow break the current or future versions of Phantom. \nOr, I can just as easily back out the change.\nAny thoughts there?\n. Thanks so much for your input on this thing.   I think that if that flag does not break Phantom 1.9.8 then we can just go forward with that.   I don't think we need to add the travis complexity.   If you get around to verifying with phantom 1.9.8 then that is great.   If not, I will try to get to it in a few days.   Thanks again!\n. Your hunch is right. You can learn how to do these kinds of tests in the Casper docs. \n. @malcomio @lewisnyman Totally completely agree with Lewis on this.  I even mention PhantomCSS as a great tool for that kind of thing in this article... http://davidwalsh.name/visual-regression-testing-angular-applications\nThat said, I think the interactivity makes sense in some limited contexts -- like where you might want to wait-for-and-then-dismiss (e.g. click 'cancel') an email signup popup that overlays every single page (or app state) for all first time visitors.   This is not so much because I want to test the interaction -- but the interaction is a dependency of the tests I want to do.  Hope that makes sense...\nFor that reason it might be very helpful to be able to somehow include-or-require arbitrary casper code -- but I'd really want to draw the line at duplicating PhantomCSS functionality or use cases.\n. Yup,  totally totally agree with you.  This is probably number one on my wish list at the moment!\nCurrently screenshots are saved to node_modules -- but it would be way way better to not write anything there at all (obviously).  The reason for that is really about how the tool evolved.  This project wants a proper CLI and assignable resource locations for sure.\nBut hey, it's completely free -- and I have a day job.   So there's that.  ;-)\nThere have been some great great contributions lately -- if you're so inclined, I'd be happy to pull in any improvements you submitted!\nCheers,\nGarris\n. I think it would be more straightforward to add a global top-level node to the backstop.json config where any of the internal paths could be overwritten.   That way you simply swap out different config files depending on which project you want to test and resources are managed in one place.\n. @ddluc thats fabulous!  Let me know if I can help out in any way.   I'd love to add a link to your repo on the github page -- do you feel like it's solid enough?\n. Hi @ddluc,  I'm not going to have as much time as I'd like to give this a good test today.  But I've added the link anyway.   Hopefully I can give it a run next week --  anycase, I think it's great that you contributed. Thanks for the effort!\n. Hi @ibineau,  this is a nice feature.\nI recommend creating a separate Casper project and get this concept running there first.  Once you have a Casper script evaluating an external JS file in the Casper context you'll be in business.  It should be easy to integrate from there.\nHope that helps -- keep me posted!\nBest GS\n. request moved to feature RFC #94 \n. Hi @Shashikant86,  Thank you very much for your pull request!   Couple of thoughts here...\n1) The version of BackstopJS you're using is out of date.   Since that version we moved to a much simpler NPM install version which installs everything in one go.  The bower install version still works, but is now deprecated. \n2) I like what you did with the gulp-chug module -- but I am concerned that this would conflict with any preexisting gulp configs in a developer's working project directory.   I think it could be disruptive to developers to require this file at the root of their projects.  Also, gulp-chug seems to be blacklisted https://github.com/gulpjs/plugins/issues/93 -- On first glance it seems due to some philosophical differences.\n. Thanks for your effort, but at this point I am having trouble making sense of this Demo at a high level.  I don't think this adds much value since BackstopJS documentation already walks users through set up.\n. Hi @kyanny,  can you send me an example cookies.js file with a sample config file so I can see how they work together?  Thank you.\n. Hi @kyanny, yes I can see that this is very useful in certain cases.  One thing, could you add a config property ('cookiesJsonFile') to the scenario node to point to the cookies file?  Then use that value internally instead of hard coding the filename.  This way users can choose where to place their files and BackstopJS won't even try to load a cookies file unless it is specified in the config.    It would also be great if you can document this feature in the readme file.   How does that sound?\n. Sorry this is taking so long.   Will absolutely try to get this in this weekend!   Thanks for your patience.\n. @kyanny, Please take a look at the cookies branch.  I've added your code and it looks like there is an issue saving the cookies -- the cookie string does not appear in the page.   Please let me know what you come up with.  Thank you.\n. Hi @kyanny,  did you have a chance to test the cookies feature?   Is it working for you?\n. Thank you @kyanny -- it's no problem.  I have a break coming up in a week -- I will write instructions for running the tests.  I will get back to you as soon as I can.   :)\n. This functionality can be supported with custom CasperJS scripts.  see https://github.com/garris/BackstopJS#running-custom-casperjs-scripts-version-080\n. @sveetch Thank you for documenting your cookie code here.  Much appreciated!  Cheers.\n. @TimPerry thank you very much for documenting!  Do you mind if I add this snippet to the help files? \n. @kyanny, looks good.  One more thing.  Please add a way for us to verify that our cookie values are working.  See /test/simple.html line 76 -- we need to add a similar display and $scope property for the cookie string here.  And also add the cookies file and another scenario block to our /test/backstop.json file.   Great work so far!\n. Sorry this is taking so long.   Will absolutely try to get this in this weekend!   Thanks for your patience.\n. @kyanny, this looks great!   You did it perfectly.   No need for assertion -- this is simply a visual test.   I will try to test this myself hopefully tomorrow.   Thank you very much for your effort!\n. @kyanny   Almost there -- I found some issues when I tested the patch.  Please see issue #44 for an update.  Thank you.\n. addressed by enhancement RFC #94 \n. Yowsa!  That's a hell of a catch!  That needs a fix immeadiately.    I should be fired for that one...\nThank you very much for catching this @lewisnyman!\n. Ok.  Fixed!    (From my iPad).  Will proofread later...\n. @anselmbradford  -- Awesome fix!  Thank you very much.   Garris\n. This would be fabulous.  Yes, please send a PR!\n. This was added in 0.6.2.  Cheers.\n. Hi @rslid, currently no.  But @lewisnyman has wanted this feature forever and I've just pledged to get it out in the next few weeks.   See #52 .   Thanks.\n. I know, this is totally worth doing.  I have some time coming up where I could get it done. Will do a pass ping you when I have something to test.   GS\n. Files merged and bugs fixed. \n. What version are you on?\n. @MatteoWebDesigner \nthis line \nhttps://github.com/MatteoWebDesigner/CSS-Architecture/blob/master/backstop.json#L54\nshould be\n\"misMatchThreshold\": 0.1,\n(you have \"misMatchThresh\": 0.1,)\n. Cheers.  :+1: \n. I think it's pretty good.  The only thing I would consider is moving that parameter to the scenario node so that with a selector like body one could use a higher number and with a selector like footer one could use a lower value.  I think these are relevant cases.  What do you think?\n. Hey Lewis -- awesome work!   There was one funny namespace bug in there which I fixed.   I didn't have a chance to test the final -- will do tonight or tomorrow AM.   Just wanted to thank you for the update!   \nYou can install from here to test...\nnpm install garris/backstopjs#master\n. Thanks!\n. Hi, please see this CasperJS ticket -- https://github.com/n1k0/casperjs/issues/1150\nThere is a fix but it's not immediately apparent if the fix is in the latest CasperJS release...\nWhat CasperJS version are you running?\n. No problem.  Cheers.   GS\n. Hi @dfcarpenter,  This looks like an issue with dtrace which I think is part of the Bunyan install which isn't even needed (just an old package from a previous project).   Does BackstopJS work anyway?  I think it should.   Please let me know -- if it does we should just pull out that package.   thanks for posting the issue!  Garris\nPS Sorry for the delayed response -- been traveling.  :)\n. Thanks for following up!   I will pull out that library.   Cheers,  Garris\n. Will close issue after bunyan is removed.\n. BunyanJS was removed.\n. Hi @MaikelGG, If it is simply a timing issue where the images have not loaded yet you can use the delay property.  This is the simplest way to provide extra time for your images to load.   There is also a readyEvent you could use to be absolutely sure images are loaded.   There is an article here which goes into some detail on usage ... http://davidwalsh.name/visual-regression-testing-angular-applications \nPlease let me know if that solves your issue.  cheers.  GS\n. Oh right, sorry, I forgot to address the font icon issue.  That is probably an issue with PhantomJS (which BackstopJS is built on).  PhantomJS has had a well known web-font rendering issue forever. Installing that font on your local machine's OS may solve the issue.  I know that's not ideal, but that is just a limitation at the moment.  There is a new version of phantomjs which I think resolves the issue but it's not compatible with some other dependencies at the moment.   Perhaps everything will fix it's self in the next half year or so.   Till then, try installing the font locally and let me know if that fixes it.\nThe loading issue may be another thing.  You said you're calling readyEvent when your document.ready has returned -- but this is not actually when your images have loaded (it is likely before your images have had a chance to load).  If you want to be sure your images have loaded you need to listen to the load events on your image DOM.\n. BackstopJS now supports SlimerJS so webfonts can be more reliably rendered.\n. I am waiting for someone to verify #60.  Once that is done I will bring in your PR.   Thanks for your patience!\n. I have manually merged this.  Thank you!\n. Hi,  this is merged onto master.   Can you pull this and verify?  Please let me know if it is working on windows.  Also, are you able to test this on OS X?\n. @YuliaTsareva Thanks Yulia!   It will go out in the next release.   Cheers, Garris\n. Sorry for the delay in responding -- this issue somehow fell through the cracks.  Yes, this would probably be a useful feature.  We don't have the ability to do this with the current implementation but it would be fairly easy to do.  Please let me know if you'd like to contribute a PR.  Regards.\n. Hi Yulia, yes sure, if you want to have the image open in a new tab I'd be happy to pull that in.  What is your idea? \n. Hi Yulia, sorry for the delay.  For you, what is the benefit of the pop-up as opposed to a new tab?   Also, I don't think we included jquery in this project.\n. This should be very easy to build.\n1) Create a div  for the pop up.  Give class with Position: fixed, centered on screen (e.g. bottom:100px;top:100px;left:100px;right:100px, display:none, background-size:contain. \n2)  add click handler for report images and set the background-image source to the selected image src value.   Also add a 'show' class which will set display:block on the popup div.\n3) when the user clicks anywhere you can remove the 'show' class.\nI think this is most of what you need to implement in NG's jqLite version.\nYou should try it -- it is very simple stuff once you adjust to html5/angular.  Then you can provide a much better experience and you would improve your skills!\n. Yes, that is correct. background-size:contain will only scale down images which are too big to fit.  We would not want images scaled up beyond their native resolution.   All the data you need for display titles and paging through result rows is already available via angular.\nIf you don't already work with angular you will be glad you took the time to learn it.   Or you could do it jQuery style and just use jQLite or html5 methods.  But I encourage you to learn new things -- there are no deadlines or hovering project managers here!  ;)\n. Ok.  Sounds good.  :+1: \n. Are you having a problem with backstopjs taking the screenshot too early?  Please let me know.  Thanks.\n. Just to confirm, Do you want the screenshot to capture at a specific time -- when your carousel gets to some point ?\n. Read this article -- it is a tutorial for BackstopJS testing on client side apps with async behaviors.  The example is an Angular app but the principle is the same...\nhttp://davidwalsh.name/visual-regression-testing-angular-applications\n. Great.  Most plugins have some kind of callback for that kind of thing.   (E.g. carousel.onNext( yourFn(nextObjData ) )\nFWIW: This slider probably won't suit your needs -- but it is cool... TremulaJS.org \n. There is currently a pull request for this feature (adding a flag at the command line).  Just curious, what is your use case for increasing that timeout?\n. 1) After the report runs you should just save the webpage as a PDF.\n2) so, it sounds like you don't have a use case for changing server timeout.\n. @YuliaTsareva  Thanks for answering this!\nAlso FWIW:  When I work with a team my workflow is usually to: \n1) run the report\n2) print to PDF then make notes on that PDF file  (sometimes I just cut and paste a particular image)\n3) email the marked up file ... repeat back to 1 as much as necessary.\n4) file a clean report with my release notes.\nThis is pretty good for small teams because I usually have notes in addition to simply showing a developer that something is not passing.\n. Timeout setting was added in latest release.\n. Merged.\n. Merged.\n. Merged.  Thanks!\n. This depends on phantomJS.  See http://phantomjs.org/\n. Hi @relhtml -- this is a nice feature idea!  I recently received another request where a developer was hoping to assign a RexEx value to the url property -- which is also a good way to implement this.  Sadly, neither would work at the moment.  But... I think this would be an easy enough feature to create -- and the good news is that one would need very little knowledge of BackstopJS internals -- it can be done all through the config API.  \nE.G.  Imagine a new module written in CasperJS which opens a root URL and walks all the links found on the returned HTML document.  Each link which changes a state or leads to a new URL is thrown into a follow array.  Then the process is started again for each url in the follow array until you have a humongous array containing all the child states and/or pages of a root URL.  (let's assume you can also add your own regEx or other filtering jig so only the urls you care about are kept).   The final step would be to generate and save a new backstop.json config file (built from your follow array).   You could either kick off a BackstopJS process right there or allow editing/fine tuning of the new JSON config document.   Extra points for saving that document to mongoDB or writing a UI around maintaining config files.\nSo, yes. Awesome idea. I am happy to support you or anyone interested in building such a thing!   If you built it standalone (e.g. output different config formats for various other testing or utility apps), it might be useful to others in completely different contexts.  \nPlease let me know how I can help.\n. closed by #94 \n. This is a common issue with phantomJS.  Please see https://github.com/ariya/phantomjs/issues/10592 for possible workarounds / status of fixes / new version release.\n. SlimerJS support added in latest release. \n. In theory, yes. It would take some effort -- but it can probably be done.\n. Sure.   My first question would be, have you already successfully prototyped taking a simple screenshot with a plain implementation of casper.js using slimerjs?      (i.e. as a separate POC -- not using backstopjs)\n. Hey Nice.  Will give this a shot.  Thanks!\n. Wooyeah, that was pretty nice.  \nDoes anyone know how slimerjs is with web fonts?   That's a pretty big issue with phantomjs ATM.\nAlso, any opinions on an { \"engine\": \"slimerjs\" } switch in the backstop.json config?  Seems that and some documentation would be a nice feature.  Yes?\n. Slimerjs support is added in version 0.6.2 now in master along with updated documentation.   \nCould someone please verify that this is working?  \nMuch appreciated!\n. @sillylogger  Thanks for the confirmation!\n. @aaronjorbin  Nice attention to detail!  Thanks.  GS\n. There have been a few requests to make the location of bitmaps_reference configurable -- however it is only hardwired at the moment.   In this case you could copy that directory somewhere it would be picked up by your versioning system after running gulp reference.\n. Hi @vitto, thanks for posting, and yes, this is a good place to ask questions.\nThere is a feature in development which will save the reference images in parallel with the backstop.json file or allow you to specify where you want the files saved.  When this is completed, you would be able to easily commit those images with the rest of your source files and not have to worry about clobbering the reference files when re-installing. \nThis will be in the next release. In the meantime, after running gulp reference, you can manually export the files out of bitmaps_reference into some other (safe) location for your project.   Then can re-import back if you reinstall BackstopJS.\nThe change I mentioned above will be in the next release.\nHope that helps answer your question.\nCheers, GS\n. Hi Oliver, sorry for the delayed response.  I appreciate the suggestion, but I would rather see effort put into some rudimentary config manager (web UI to select named config) or config editor (web UI to parse and edit config file in place) as opposed going the yaml route.  The config file is touched in a few places and adding yaml support might be more time consuming than you and I would hope.\n. @aixellent Thank you for posting.  I will be adding the ability to change the location of the reference and test files within the next week.   Would you be interested in beta testing the new version?\n. The new version: 0.6.0 Beta is available.  \nGo here to install...\nhttps://github.com/garris/BackstopJS#version-060-beta-available-now\n. Agree.  Are you using slimerjs?\n. In the first post you have an issue with an existing but display: none DOM element. I guess in a perfect world I would want a png file with zero pixels as the output from the rendering engine.  And I would expect BackstopJS to tell me that this element exists but is not in the layout flow.\nI think there is a difference between how PhantomJS and SlimerJS handle these conditions.  It would be nice to know if this is true.  Regardless, it sounds like we may need to test all elements for a display:none condition and correctly report this to the user.  (Perhaps we actually create an image file with zero pixels to represent this condition in all cases).\nBefore taking a screenshot (line 161 in genBitmaps.js) we would get the display:none state of the element if true write our own file which would evaluate correctly in the test.\nI think the same would go for your second issue.\n. More thoughts here:\nFor display:none cases we should write a PNG file with a no-display icon.  e.g. Glasses with diagonal line / strike through.\nFor missing element, maybe a droptag with a horizontal line / strike through icon.\nThis will keep output in sync with the config files and correctly report on visual state changes with No changes to our report code.\n. moved to #97 \n. What version are you running?\n. Ok. Then you have found a bug.  I added a compatibility feature.  Config files without a paths node are handled differently.  Sounds like the cp function is failing.  Perhaps missing an overwrite flag.   I will take a look at this now.   Thank you for finding this!\n. fix pushed to master.  Please verify...  thanks!\n. ok, found another issue.   still working on it.\n. Ok.  Please verify.   Thank you.   -GS\n. I just retested the patch and it seems to work over here -- both with and without a path node.   This is the latest 8de6847 -- could you maybe pull into a fresh repo and see if you can duplicate the issue?\n. @yargalot Are you certain that the elements exist at the time of the screen grab? Another issue could be the style properties, e.g. display:none, opacity:0?\n. Yup, they may be set as display:none (or something like that) at certain screen sizes.  Let me know.\n. Great to hear!  Best.  -GS\n. Can you try switching to the puppeteer engine?  It runs much more consistently.. @axe312ger Thanks for answering that.  Was traveling today. :+1: \n@Archiolidius, we will release v0.6.+ soon. Thanks for posting.\n. here \"misMatchPercentage\": \"1.78\"  is greater than Threshold: 1.5.   Increase the threshold value in your backstop.json file and the difference will be ignored.\n. Sorry, closed by accident.  Please let me know if that fixes your issue.\n. Thanks for posting -- this feature is in development for a future release.\nThere is a pretty simple workaround though. After running a test you can literally drag any test image from the report into the actual reference image folder.  This will replace the reference version for subsequent tests.\nLet me know if that works for you.\n. Apologies, I just realized I misunderstood your question.   \nIn the case of adding new tests or selectors the workaround is a little less elegant but is still simple and effective.  Here goes...\n1.  Locate your reference files directory and copy it to a temporary location.\n2. Update your config file appending any new tests or selectors to the end of their respective branch arrays.\n3. Run gulp reference -- this generates all new references.\n4. Move the contents of the temp directory (created in step 1) back into their original location (overwriting any existing files).\nLet me know if that works for you.\n. The short answer is no.  You can specify locations of the screenshots (as of v6.0) but that's about it.  If this were to be enabled how would you expect it to be implemented?\n. Oh right, that would be pretty useful.  I owe the project a new roadmap.  I will add this feature to it.\n. That would be fabulous.   \nI like command line approach because it provides a very universal API -- without any specialized knowledge about how gulp works.\nI think you would only need to modify paths.js to make this work...\nhttps://github.com/garris/BackstopJS/blob/master/gulp/util/paths.js\nYou would want to check for a supplied path parameter, if one exists check for a valid file, and if that exists, set paths.activeCaptureConfigPath With the supplied path.\nShould not be too difficult.\n. Ok.  just tested this.  Works beautifully!   It's merged to master.   Release forthcoming!\n. the file names are required. If you need to rename these for a different purpose you should just create a different gulp task which renames as needed.\n. Fabulous!   Will work on this next week!\n. @ay13 -- so sorry for the delay!  It's really my fault -- @klausbatrhammer put up a beautiful looking PR but I have been mired in a platform migration for my day job.    \nBecause this is such a high-impact change I really need to be careful. I will merge as soon as I can.   Thank you for your patience.\n. @klausbayrhammer this looks like a great solution/feature.  Would this behavior be compatible with the SlimerJS engine option?  Would this be an option that runs in addition to / independent of the in-browser reporting process?\n. Yes, that would open the entire project up to devs needing a server centric solution.  I think it's all a great idea.  It doesn't seem all that hard to implement at this point either.\nI completely support it -- let me know how I can help!\n. Merged to master.\n. Yes -- was thinking the same thing.\nMaybe this line would do what you need...\nhttps://github.com/garris/BackstopJS/blob/master/gulp/tasks/compare.js#L28\nYou could try uncommenting that and see if it fails in the right way.  If it does, I propose we add a switch to the config to enable/disable fail passing back up to Gulp. \nLet me know what you think.\n. Great -- glad that works! \nI am inclined to adding that flag to the config file as opposed to passing on the command line.  (Although I would be totally fine with a command-line override) Does that pose any problems for your use-case?\nAlso I am a inclined to cast the feature as an opt-in (not default behavior).  E.g. Flag name: cliExitOnFail or cliThrowOnFail or cliHardFail\nThe reason for both of these is to reduce complexity for users who are new to the app.\nBut again -- I would really want to know if this approach would work ok for you.  I would not want this to create unnecessary work to integrate.  Please let me know.\n. Awesome.  I am trying to get the next release out this week so I can take care of this at the same time -- it's a pretty easy one.\n. Ok.  This is on master.  Please give this a test when you get a chance.   Thanks!\n. You are not missing anything.  I was switching branches a lot yesterday and merged the wrong one.\nAll fixed now.  Many apologies for this! \n. Super!  \nAnd yes you're right, those timeouts can probably be tuned or removed entirely.\n. @pelllich Thanks for the pull request.  But I could not reproduce that error.CasperJS error: unknown option --ssl-protocol=any  What version are you using?\nI am on OSX 10.10.5\n$ casperjs --version\n1.1.0-beta3\n. Ok.  I will merge this.  Thank you.\n. @klausbayrhammer short answer is no.  To add this I would add the flags as an arbitrary set of properties on a new node in the config, e.g. casperFlags: {engine: \"slimerjs\", proxyType: \"http\", ... }\nThese can be pushed onto the argument stack in the same way that the engine property is currently implemented.  The existing engine property would need to be deprecated (or perhaps just be overridden if a casperFlags is specified).\nIt would be pretty simple to add here...\nhttps://github.com/garris/BackstopJS/blob/master/gulp/tasks/test.js#L46-L51\n. @klausbayrhammer, @paweltin \nI just looked at this.   It looks like the approach, which I suggested originally, may be un-necessarily over-built.\nAsking the user to split the property and value out is probably unnecessary.   All we are doing is reassembling the data (adding unnecessary complexity) -- unless we are going to actually use this data internally we are probably better off simply asking the user to add a simple array of string-formatted properties.  e.g.   casperFlags: [\"--engine=slimerjs\", \"proxy-type=http\", ...]\nI think this updated approach is maybe better.  It gives the user more control and reduces our code complexity.  We then simply do if (paths.casperFlags) {args = paths.casperFlags} on line 52.   This would also conveniently over-ride the paths.engine line that comes before.   Additionally, we could merge the paths.engine values (with the casperFlags array taking precedence for better compatibility/predictability.)\nPlease send some feedback, what do you guys think?  Is there any benefit to the original suggestion over this one?   \nThanks.\n. @paweltin  Thank you for taking a second look and thank you for contributing!   Cheers.\n. @klausbayrhammer @paweltin  This feature has been pushed to master.   There is no documentation yet -- but any help validating that this works with both Phantom and Slimer would be greatly appreciated.   Thanks!\nsee... https://github.com/garris/BackstopJS/blob/master/capture/config.default.json#L50\ncasperFlags takes an array of argument strings which are passed to PhantomJS or SlimerJS on invocation. e.g. \n\"casperFlags\": [\n  \"--engine=slimerjs\", \n  \"--proxy-type=http\",\n  \"--proxy=proxyIp:port\", \n  \"--proxy-auth=user:pass\"\n]\n. Merged and documented.\n. @klausbayrhammer, I merged the PR added config flags and cleaned up the workflow.  I think this is a great feature.  Thank you for your help!\n. Selector check and reference substitutions can be made here... https://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L142\n. @limptwiglet   Thanks for this!  I will test it tomorrow.  Regards.\n. Gulp hangs when I run gulp reference and add a missing selector on your branch.  What use case are you working towards?\n. Ok. I got it.  Update forthcoming.  Thanks for the contribution -- this turned out to be a very nice fix! \n. Would pull that.  Should be placed after the ordering indexes but before the selector string.  Maybe need to guard filename length.\n. Done.\n. yup. would pull that too.   \"unicode \u2665 is \u2622\"\n. The Label was added to the CLI reports to make it clear what scenario a given selector is for.\nexample...\n\nHope this helps.\n. @Primajin That would be a great addition -- happy to help in any way.   thanks!\n. I think right after scenarioIndexhere...\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L183\n. Hi @sanchothefat.  Thanks for looking into this.  This is a feature that has been requested before.   Here are some comments/ideas...\n- maybe change onReadyEvent to onReadyScript -- just to make it clear that we are linking to a file.\n- the ready event handler you are looking for is here...\n  https://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L97\n- in that spot you would probably want to do something like this...\nif (scenario.onReadyScript && fs.isFile(scenario.onReadyScript)) {\n      var executableJsAsString = fs.read(scenario.onReadyScript);\n      // execute that code here\n      // or you may be able to import the file in some other way -- just a suggestion\n    }\n- please contemplate this feature and how the two features might interact or support each other...\n  https://github.com/garris/BackstopJS/issues/94\nLet me know if I can help.\nCheers.\n. @sanchothefat this is nice work!  But I am a little concerned that an array of scripts is overcomplicated.  I think the use case is likely to be more simple for most users.   For the minority of users who need multiple file support they can always concat those things in gulp or grunt exactly how they like.   This would reduce complexity on the BackstopJS side -- reading files and handling errors will be an unnecessary pain...\nIn relation to https://github.com/garris/BackstopJS/issues/94   -- I only mention this because I imagine it makes sense that an onReadyScript would run on each of those sub-scenarios -- and that may or may not be a good thing.\nIn any case, I apologize for possibly distracting you.  I really think you should focus more on your feature... \n- import a casper script and get it to run\n- handle any errors gracefully\n- provide a test scenario\n- document it\n- and not worry about #94 because it doesn't even exist yet ;-)\nCarry on -- this feature will create a lot of developer happiness!\n. yup.  great!  for the test it is very informal.  just create a directory in the test folder (maybe call it onReadyScript) and drop anything in there that we would need to test this feature -- that would include a backstop.json file and your casper script (and any test html file if you are not using something at a live URL). create any scenarios in there that would test your feature.   Just some basic check.\nAnd yes, also append the config.default.json with a onReadyScript: null.  That will let anyone working with the config files know about the option/feature. The readme should probably describe how to point to a file in the ../../backstop_data/ directory with a content snippet of a simple file.\n. @sanchothefat  Beautiful!  Very well done -- thank you.  I haven't had a chance to run the code yet but it looks solid.  I will make some minor tweaks and feature this in the next release. It could take a week or so.  Have you attempted to use this for log-in anywhere?  I think that will be a popular use-case.\n. @bradwade Thanks for the PR!   Will include in next release.  Cheers.\n. What OS are you on?  :nth-child(n) has workd pretty reliably in the past.  Please let me know.  Thanks!\n. Sorry, I should say, which version are you on.  I haven't gotten this bug from other Windows in the past -- but it's never to late!   Do you know which character breaks the file write?  We can escape that internally.  Again, please let me know.\n. One question. Can you try deleting your backstop.json file and running the default test?   Please let me know if the default configuration is also broken on your windows machine. \n. Perfect, thanks.  I will see if I can get a patch for this tomorrow.\n. I just added a stronger regex to only pass characters and number and dashes.  Install it with this...\n$ npm install garris/backstopjs#master\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx\n```\n...reserved characters:\n< (less than)\n\n(greater than)\n: (colon)\n\" (double quote)\n/ (forward slash)\n\\ (backslash)\n| (vertical bar or pipe)\n? (question mark)\n* (asterisk)\n\n```\n. Awesome.\n. ^^^ I am so psyched for that feature!  \n. @jkopcsek so sorry about this.  The beta went out a little too early.  I will try to patch this today.   Thanks for the bug report!\n. Ok -- I think we're doing better.  Please give it another try and let me know how it went.  Thanks!\n. Remember to pull from master.\n. Thank you @paweltin!   Will review this week.   Best, GS\n. Can you please provide your test case and console output.   Thank you for filing the bug!\n. Thank you for tracking this down -- this is very helpful!   Before closing, we should probably do two things...\n1)  Update readme documentation in the onReadyScript and casper_scripts notifying users that absolute paths are required when using the slimer engine.\n2) maybe wrapping the require() in a try block.  On error we could notify the user to check the notes in the documentation -- or give some other useful next step.\nThank you.\n. I have just pushed item 1 above to master. \n. Looks good to me.\n. Have you tried the suggestion above?\n\nAdd the module path to slimerjs' require.path require.paths see the Docs\n\nAnother approach is to use a .js based config and make those paths a computed property.\n. What is a specific use case for this?\n. Sure, that makes sense.  Would totally appreciate the pull request.   Please create a script that we could run to test the feature (at minimum it should just log viewport data to the console to prove that everything is in sync).  Also, please add a note in the documentation.\n. Yes, #113 did it.  It's merged to master.   Please review.  It would be great to see a test (switching on 2 vp cases) for it in the tests folder. If it's otherwise working the ticket can be closed.\n. Thanks everyone.\n. Looks like phantom is tossing out the filter calls.  Have you tried using the SlimerJS engine option?\n. Wat?\n. @brunowego can you include your console output?\n. @brunowego It looks like your test is running and passing.  Not sure what the issue is?\n. oh ok, sure. What is your OS?  and can you send your console output result for this... \n$ slimerjs -version\n. nice screen grab :wink: \nI think that is probably the issue.   Here is what I get...\n$ slimerjs -version\nInnophi SlimerJS 0.9.6, Copyright 2012-2015 Laurent Jouanneau & Innophi\nCould you maybe try to reinstall slimerjs?   \nFWIW: I haven't moved to El Capitan yet.  Could be a thing...\n. Nice!  That is a no-brainer!   \nI am trying to get another nice feature out the door next week.  If I can manage it this will go out with it.\nCheers!\n. Super!   Thank you.   Cheers.  :+1: \n. @MondeSameWave please provide your config file, console output and screenshots.  Thanks.\n. Closed due to inactivity.\n. @superKalo Sorry for the delay getting to this.  Seems there are some issues with loading YouTube iFrames in Phantom...\nhttp://stackoverflow.com/questions/30146353/phantomjs-not-mimicking-browser-behavior-when-looking-at-youtube-videos\nMaybe it would work using the SlimerJS option?\nHope that helps!   Cheers.\n. Yes!\nI just merged a configuration for setting the location of backstop.json.   I think there is plenty of room for this feature to live in harmony with that one. \nIf *.js returns a promise you could easily hit an endpoint -- I think that might be the way to go.\nAny case -- sounds great.  If you write it, I'll pull it.  Fine to do in small steps too.  Let me know how I can help.\nAwesome.\n. Almost closed by PR #125 merged to master.  See documentation.  \nWould like to look at enabling backstop.js or backstop.json by default by removing .json from the default config filename here https://github.com/garris/BackstopJS/blob/master/gulp/util/paths.js#L19\n. just looked at removing .json from default file -- unfortunately too many dependencies on a file extension ATM.   \nAnycase,  tweaked the documentation -- pretty nice feature as is.  closing issue.  Thanks.\n. Thanks Benedikt!\n. Hmm. That's a puzzler... Can you include the console output -- that might help narrow things down...  And also, is it possible to exclude onReady.js just to help with troubleshooting?\n. Which logs?  Do you mean console output?\n. Great.  So it sounds like the problem resolved when you used NPM.   I will look at the bower version when we do our next release.  Please let me know if you run into any other problems.  Thanks for posting the issue!\n. @gregsqueeb Hi, #87 was already merged to master.   Was this not working for you?\n. UPDATE:   I just installed from master.  I followed the documentation and #87 worked for me...\n\nThe location of the backstop.json file can be specified by passing a backstopConfigFilePath argument to the backstop tasks. E.g. by passing --backstopConfigFilePath=../../src/test/\n\nSo, you should be able to install from master and do...\nnpm install garris/backstopjs#master\ngulp test --backstopConfigFilePath=[PATH TO YOUR FILE]\n. I'm glad you filed the bug -- I will update the docs to make it more obvious.   Cheers!\n. That makes total sense.  One nice thing about the existing CLI flow is its speed -- so for that reason it might be best to save only the failed diffs?    I like your idea of saving those in the paths.bitmaps_test/[timestamp] directory.   Maybe with a prefix (e.g. diff_failed_) so it is easy for a human to find when looking at the directory.   A PR is totally appreciated!   Thanks @klausbayrhammer !\n. merged\n. Looks great!   Merged.\n. closes #121 \n. @kateivamarmalade I haven't tested this use case myself -- but you should be able to add a simple CasperJS script to do that for you.  See these two links...\nexample of CasperJS script with httpAuth...\nhttp://stackoverflow.com/questions/24842762/casperjs-http-auth\nrunning CasperJS scripts in BackstopJS...\nhttps://github.com/garris/BackstopJS#running-custom-casperjs-scripts-version-080\nHope that helps!\n. @ay13  Nice!  :+1: \n. I think that should do it -- closing.   @kateivamarmalade Please reopen if for some reason @ay13's answer doesn't solve the issue.  Cheers\n. EDITED:   OMG reading-with-comprehension has become a big challenge for me.  Please see proper response below... \n~~I understand.  I guess the two options would be 1) move the location of the cache file to the bitmaps_reference path (or an explicitly specified path in the config)\nOR\n2) just add a config disableConfigCheck  which turns off saving/checking etc..  (This is probably easiest and maybe more useful for your case)~~\n. I totally take back my last response.  Reading this on my phone on the train, I didn't see the text after the bullets.  So sorry about that!\nI like your current workaround calling bless like that.  Totally what I would have done.\nI think your first solution is the way to go.  Super straight forward.\nThat said,  the other suggestion, hash or checksum idea is very cool.  I guess that could actually be saved in the compare_data file in it's own top level node along-side the test data.   It makes sense to keep that data together.   Bless would need to be changed to simply update that top level node (if it existed) and not clobber the compareConfig node.  And the compareConfig data would need to be made into a branch here...  https://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L248\ncompareConfigDecorated: {\n    compareConfig: compareConfig,\n    lastConfigHash: turnIntoSomeKindOfHashOrChechsum(config)\n}\nvar configData = JSON.stringify(compareConfigDecorated, null, 2);\nAnd the other scripts that read compareConfigFileName would need to look for compareConfigFileName.compareConfig to get the data they need.   \nAnd here... https://github.com/garris/BackstopJS/blob/master/gulp/tasks/test.js#L31\nYou'd want to get the cache from compareConfigFileName.lastConfigHash.  If none existed you would not return.  If one did exist, you'd want to do a compare or deepEquals of turnIntoSomeKindOfHashOrChechsum(config) against whatever is appropriate for cache -- and return false if false.\nI hope that helps -- its probably 80% of what you'd need to implement your \"computed hash\" idea.   I am happy to support you if you want to implement this. And again,  so sorry for missing your thoughtful suggestions the first time around.   My day job is great but I do get pretty frantic managing everything and sometimes miss the good stuff.\nok.  Awesome!\n. Ok.  The PR looks great.  Merged.  \nNotes:\n- After merging I cleaned up echoFiles.js so no other tasks are needed there.\n- I have not tested anything yet -- but all the code changes look really good.  Will test either tonight or tomorrow AM.  \n:+1: \n. Ok.   Just tested this -- works great --  Thanks for the contribution!\n. This looks good.  Can you...\n1) add an example .js config file e.g. Add test/configExample.js \n2) briefly document for the people e.g. Add https://github.com/garris/BackstopJS#using-a-js-based-config-file\nThank you!\n. Come to think of it, we probably don't really need the file type check as I think require would look for either .js or .json If the suffix was left off.  I guess you can remove that check if you want.  Up to you.   Thanks again. \n. Oh crap, and then there is the issue of the test fails...\nhttps://travis-ci.org/garris/BackstopJS/builds/97408007\n. Nailed it.  This is great -- thank you very much for the contribution!  If I get around to it I will drop the .json from the fallback filename to enable users to use a .js or .json file without having to specify a CLI path.   This will go out with the next release.   Cheers! :+1: \n. Hi, thanks for reporting this.   The vp argument was actually added after the 0.8.0 release and I have just pushed release 1.0.0 to NPM.   I expect everything will work if you update to the latest version.  Please let me know if that doesn't fix it for you.  Cheers,  GS\n. Yes, this should not be difficult to add.\nI would not add the defaultProperties branch. Instead I would probably just keep the parameters (e.g. misMatchThreshold etc...) at the config root.   (It's ok with me if it makes more sense for your use case to group them together.)\nfirst, add the variables internally\nafter this line...\nhttps://github.com/garris/BackstopJS/blob/master/gulp/util/paths.js#L71\nadd...\npaths.misMatchThreshold = config.misMatchThreshold || null;\npaths.readyEvent = config.readyEvent || null;\nthen, add these parameters in the app in the capture flow\nreplace this line...\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L208\nwith...\nmisMatchThreshold: scenario.misMatchThreshold || config.misMatchThreshold\nreplace these lines...\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L88-L89\nwith...\nvar readyEvent = scenario.readyEvent || config.readyEvent;\nif (!readyEvent) return true;\nvar regExReadyFlag = new RegExp(readyEvent,'i');\nHopefully this is everything you'd need (and hopefully I didn't miss anything important).  Please let me know if this works for you.  Cheers!\n. Merged.  This should work now.  Please test for your use case and close if all good.  Cheers!\n. 0 is considered invalid -- you can try a very small fraction but I don't know if that would work.  .00000001\n. Great!   Cheers. \n. Now that you have me thinking about it -- I can understand why you wanted to exclude the test directory.  test is not really a helpful name -- it is probably better named examples and for it to be truly helpful it should be better organized.  That would be more consistent with my comment about useful boilerplate.   If you feel it is sloppy/confusing I would agree with this and be happy to simply delete it until it can be brought back in a more organized/useful form.\n. Yes, so in that case, it totally ok with me if you prefer leaving tests out of distribution and want to bring back the .npmignore.   Again, up to you.   Sorry for the winding road on this one.\n. Hi,  thanks for posting.  I will put up a fix for this.   Will let you know when it's up so you can test it out.  Best, GS\n. I added a property in the default config to assign a port number.  Please do a fresh install from master and let me know if that works for you.   Cheers.\n. Thanks for testing this.  I am seeing very weird argv behavior that was not there when adding the -t parameter.  Perhaps this is an issue with argv & spawn together?  Will follow up very soon as this is something I think we should have.  Please let me know if you gain any insight in the meantime.  Thank you.\n. Nice,  Thank you!   Merged and tested.   This is now available on master and will go out in the next release.    Cheers.\n. Thanks for this!  Will respond to your other issues this weekend. \n. @klausbayrhammer Great work!   \nechoFiles.js is simply there as a sanity check when troubleshooting and should not need to write any data at all.   The fact that is still does is an oversight.  I would simply delete lines 181 & 182 from the original and leave it at that.   The file should really be cleaned up at some point.\n. I think we still need to add lines here-ish...\nhttps://github.com/garris/BackstopJS/blob/master/gulp/util/paths.js#L75\nadding...\npaths.misMatchThreshold = config.misMatchThreshold || null;\npaths.readyEvent = config.readyEvent || null;\n. Merged.  I added the paths parameters -- so I expect this to work.  Please test.  Thanks!\n. You are correct.   I removed the lines.   Thanks!\n. Done!\n. Merged and published 1.0.2 to npm.    Thanks for jumping on this one so quickly!\n. This sounds like a great article idea!   Unfortunately I have very little experience with Travis so I'd have to dig into it more myself.   Please let me know if you come up with something good.  Maybe someone else will have some ideas...   GS\n. :+1: on both.  Seems there is some interest in CI -- we could make this use case more workable out of the box.\nWe should probably just eliminate the cliExitOnFail property (always throw on error) and clean up the error trace that's logged to the console when there is a fail.\n. ok -- thank you for filing the issue!  \nThe casper docs specify the script path as the first argument (which is different from your example).  But then perhaps something \"interesting\" is happening in that spawn call?   I would like to see what is in that casperArgs and compare that with what casper.js is seeing.   The docs also demonstrate how to echo the CLI params when inside of casper.  see here...  http://docs.casperjs.org/en/latest/cli.html\nThis feature was developed without any tests so it would be nice to get some confidence around it.\nI will try to test it out -- please let me know if you find anything in the meantime.\n. Ok, found the bug and pushed a fix. \nYou were correct -- there was a missing assignment that dropped paths.casperFlags. \nCould you verify that it is working for you now? \nPlease pull from master to install... npm install garris/backstopjs#master\nIf it's working for you I will push a patch asap.\nThank you!\n. Great!\n. Closed by patch 1.0.3\n. Ok. I've thought about this a bit.  I do think it's legitimate to allow the user to reformat the filename.   But I would suggest implementing it a little differently inside the app.  Here are my thoughts...\n- do it globally in the config, add a property fileNameTemplate\n- do it as an ES6 or a mustache template e.g. {scenarioIndex}_{scenarioLabel}_{selectorIndex}_{selectorLabel}_{viewportIndex}_{viewportLabel}\n- add this as a default property to gulp/paths.js and allow the initial value to be overridden.\n- the default property should retain the current format because changing it now would break existing tests for existing users.\n- I'd do all the chaining and clean for all file systems last e.g. \nvar fileName = paths.fileNameTemplate.replace(/{key}/, value)\n  .replace(/{key}/, value)\n  .replace(/{key}/, value)\n  .replace(/{key}/, value)\n  .replace(/{key}/, value)\n  .replace(/{key}/, value)\n  .replace(/[^a-z0-9_\\-]/gi,'')\n. I'd also check for a .png suffix and just add it for the user if they leave it off.\n. @Primajin Thanks for getting this topic going.  I also wanted to check in and see if you were making any progress or wanted some assistance.  We all have day jobs so -- no pressure!  Just please let us know when you get a chance.  Thanks!\n. Additional note: we will likely also need a representation of the config file path to ensure different configs that point to the same resource directories do not clobber existing same-name files.\n. Hi @Primajin, thanks for following up.   \nI realized there is a currently a potential for file corruption/clobbering if a user creates multiple config files that share the same resource directories.\nHere's an example:\nImagine two config files named config1.json and config2.json.\n- config1.json has a single scenario labeled \"FEED\" and a single viewport named \"PHONE\". It points to a local instance of a user's feed.\n- config2.json is identical except the scenario's URL points to a staging instance.\nIf your file naming template string was {scenarioIndex}_{scenarioLabel}_{selectorIndex}_{selectorLabel}_{viewportIndex}_{viewportLabel} and you were to do a gulp reference --backstopConfigFilePath=./config1.json you'd create a reference screen capture named 0_FEED_0_body_0_PHONE.png.  At this point running gulp test --backstopConfigFilePath=./config1.json works fine.\nThe issue is created when running gulp reference --backstopConfigFilePath=./config2.json.  Doing that would clobber  0_FEED_0_body_0_PHONE.png with the staging bitmap.  Running gulp test --backstopConfigFilePath=./config1.json after that point would give false results.\nI think this is a significant enough issue that it needs to be addressed in the default configuration.\nTo prevent the issue you would need to add a config identifier... {configFile}_{scenarioIndex}_{scenarioLabel}_{selectorIndex}_{selectorLabel}_{viewportIndex}_{viewportLabel}\nThe configFile could probably be hashed (and/or shortened and/or explicitly labeled) so that files are still human browsable.\nHope this helps!  Please let me know if you have any better solutions or other ideas.  Thanks!\n. @Primajin Many apologies.  There were a few commits to master which should have gone to a different branch.  These have been reverted.  Master should now be working. \nNot necessary to make single commit -- but brevity helps.   \nThank you.\n. Thank you @primajin.  I am on holiday.  Will review later this week and follow up. Cheers.\n. ok @Primajin, good work!  \nHeres comments -- please forgive me if there are errors or miscommunications in this review.  Just ask any questions if I'm being unclear or confusing.  I wanted to get back to you as soon as possible...\n\non this line...\nhttps://github.com/Primajin/BackstopJS/commit/f6de346ec5d6b3b1cf9f4e358a231c7865af4590#diff-8854ff0ca17d960be935d14ef5decc3fR31\ngenConfigPath is almost right.  genConfigPath is an internal pointer to a cached version of the current config file.  We want the path of the actual currently selected config file used to run the tests. That path is not currently available to genConfig And needs to be added to the cached copy.  Here is where we make the cached copy...\n     https://github.com/Primajin/BackstopJS/blob/master/gulp/tasks/init.js#L6\nAbove that line do this...\n    config.configFilePath = paths.activeCaptureConfigPath || '';\nThen here...\nhttps://github.com/Primajin/BackstopJS/blob/master/capture/genBitmaps.js#L31\nyou can...\nvar config_name = config.name || config.configFilePath.hashCode();\nI think that gets us going.   Here are more notes...\nIs it necessary to echo out every time we write a file? \nI don't think users need to know this.  FWIW: I also have a task to clean the other unnecessary stuff being spit out on the CLI (so, don't feel bad)\nMight want to tweak .hashCode() so that it never generates a leading \u2018minus\u2019 sign character \u2014 the dash could complicate things considering that it will be used for naming files and will be seen in reports.\nBefore the next release I am planning on pruning/simplifying the config boilerplate config file and I am inclined to remove fileNameTemplate from the boilerplate -- I only want stuff in there that most users will need.   In any case, we are going to want some decent documentation around this.\nWe also need clear upgrade documentation around this feature and possibly a compatibility utility \u2014 e.g. a gulp task which will take a file (or directory) path and add a fileNameTemplate node to any JSON file containing a scenarios node (to ensure we are modifying a backstopjs file).  The added node should explicitly set the file naming to {scenarioIndex}_{selectorIndex}_{selectorLabel}_{viewportIndex}_{viewportLabel}  so that newly created test samples are compatible with the older format.\nThere you have it. Great job so far!\n. thanks @Primajin!   No worries.\n. @primajin I am having some trouble following this thread.  Could you recap your status. \n- what has been completed\n- what is left to do \n- are there any issues blocking you?\n. That's great. I will try to take a look this weekend.  I am getting a little backed up on my BackstopJS todo's.\n. So sorry,  I've been renovating my house and had very little time this month.  I will review this soon.  Thanks for your patience.  \nRegards.\n. Hi @primajin,  I need to take another review pass -- but in general, this is looking good!  \nI just created branch set_filename.   Would you please squash your commits and PR to the new branch when you get a chance?\n. This was manually moved into version 2 and released. Thank you for the contribution!\n. Thanks for posting but unfortunately the short answer is: I don't know...   You may be able to use a custom casper script to set this and then re-open the URL -- but that is just a guess.  \nInfo on adding custom scripts is here...\nhttps://github.com/garris/BackstopJS#running-custom-casperjs-scripts-version-080\nPlease post back if you solve this -- there may be others with this issue.   Cheers!\n. I think you should be able to do this using a custom script.  @timperry used this technique for a similar case...\nCreate a setUA.js file in the /scripts directory:\nmodule.exports = function(casper, scenario, vp) {\n  casper.echo(\"Setting UA\");\n  casper.then(function(){\n    casper.userAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X)');\n  });\n  casper.thenOpen(scenario.url);\n}\nThen in the scenario add this:\n\"onReadyScript\": \"setUA.js\"\nHope this helps...\n. I am wondering if it may make more sense for you to split up your scenarios into different config files grouped by viewports you're looking to test.  It's very easy to call different config files and reports may look cleaner.   Have you considered that approach?\n. Nice.  Glad that works!\n. @DaPo   BackstopJS allows you to specify viewports at the scenario level.  See the docs... \nhttps://github.com/garris/BackstopJS#working-with-your-config-file. @chipcullen hi, thanks for posting!  I have not considered that use case before --  it sounds like something that should be added.   Currently, BackstopJS is built around a single developer on a single URL model.   \nThat said, the workaround would be pretty easy.   Just set up your scenarios pointing the URLs to your reference and then run  $ gulp reference     Then when you want to test, just copy your config file and transform your URLs as needed (in your case, adding :8000) and run $ gulp bless  then $ gulp test \n( $ gulp bless  is to let BackstopJS know that you you've deliberately changed your config)\nThere are more integrated options as well.  You could make your config a node module and enable a dynamic URL based on some enviornment var.  see the docs for more info...\nHope that helps!\n. Sure, I am trying to be disciplined about adding properties to the config at this point -- keep the complexity low while the project is still manageable.  That said,  I think it's a legitimate feature request.   If you wanted to do a PR I'd support it.  Should be pretty easy to add a referenceUrl property to a config scenario and then switch on if we are running a reference or test pass.\nReplace this line...\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L84\nwith...\nvar url = scenario.url;\nif (isReference && scenario.referenceUrl) {\n  url = scenario.referenceUrl;\n}\nthis.thenOpen(url, function() {\n...\n. this is merged to master.  Would appreciate if someone could verify that the feature is working.   Thanks!\n. @laubsauger Great catches -- thanks for testing!\n@frob Looks like the change is also needed in capture/echoFiles.js.  And also here... https://github.com/laubsauger/BackstopJS/commit/4b263009ece76eed5a0e17fe357aa668afec9439\n. @chipcullen No problem at all -- thanks for the PR.  Cheers\n. Thanks for this!  I updated gh-pages.\n. This has been updated as well.  Thank you!\n. Nice,  thanks!\n. Hi -- thanks for posting!  \nYes, BackstopJS is indeed intended for a developer working on features -- to catch obvious bugs before shipping to QA.  So while the hope is that it makes life easier for QA engineers (because developers are shipping better code), BackstopJS wasn't explicitly designed to be a comprehensive QA app.  For the intended audience, phantom and slimer have been sufficient and the install process for those has been fairly painless.\nAll that said, since hitting v1.0 I've been open to new ideas e.g. an extended BackstopJS Pro version, potentially focused on QA needs.   I'm happy to chat about it if you have some specific ideas.\nCheers!\n. That library is maintained by Joe and I don't have enough context on it to give you a good answer.  Might help to look at his repo.  Please post here if you find a good solution -- I am sure others would be interested in how to do this.  Thank you.\n. Sorry, I'm not familiar with bxslider.  Here is an article that looks at testing web apps with BackstopJS.  Maybe it will help.\nhttp://davidwalsh.name/visual-regression-testing-angular-applications\n. Hi @laubsauger -- thanks for posting!   \nIt would help me to understand why using hideSelectors doesn't work for you in this case.\n. Also, There is already a global onReadyScript script option. see ==> https://github.com/garris/BackstopJS/pull/133\n. Hi @laubsauger -- sorry for the delay getting back, I have been on on-call duty at work which has made it hard to respond to people.   Anycase, in your first point, I am pretty sure you can require() a global file in your scenario-level onReadyScript() files.  The current behavior is more of a override/fallback orientation, so assuming that require() will work for you, I don't think we have a strong case for making changes there.\nI do think there is a good case for your onBeforeStartScript -- with these remarks:\n- it should be implemented similar to onReadyScript() running the scenario-level script (if available) and falling back to running any available root level onReadyScript if no scenario-level script is found.\n- it probably should be able to override any aspect of the environment prior to loading the root resource --  putting it before this line should enable that... https://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L80\n- a name like onBeforeEachScript() might be more appropriate given this location in the flow\nAlso,  I am still curious...\n- hideSelectors doesn't work for your use case because of the performance issue or because of some other on-screen side-effects?\n- what is the actual performance gain (in milliseconds) you get by canceling your requests -- IOW: how much sooner can you generate screenshots compared to non-canceled approach?  \nPlease let me know your thoughts -- it always helps me to understand the motivation of creative users such as yourself.\nThanks!\n. FWIW: the above comment does not represent my attitude at all. \ud83d\udc77\n. That's what I was guessing but I wanted to make sure.  I can see a benefit to shunting all that ad code so you can work faster.   I can also a benefit to testing with the ad code to make sure it doesn't break what you just worked on.   So, glad this change would enable both cases.  thanks!\n. Thanks! Merged to master.   Could use a little documentation.   I will update the readme as soon as I can.  Feel free to take a stab at it if you're inclined.  \ud83d\udea2   Cheers\n. Nice.  Thanks!\n. Hi @bronzehedwick.  Thanks for the PR!   Looks like there were a few of updates that clobbered some of your changes. Other than that everything looks good.  I don't know if you'll want to resolve those on your end.  Please let me know.   Thanks again.\n. Beautiful -- thank you!   Cheers\n. For that you need to edit your hosts file.   Here is a article on how to do that...\nhttp://www.tekrevue.com/tip/edit-hosts-file-mac-os-x/\n. hi,  first, label is just for display purposes in your reports so the value would probably be something like \"homepage\".   The url property is where you'd add the actual URL.\nSecond,  try increasing the delay parameter.  Your CSS may not be loaded when the snapshot is taken.  See... https://github.com/garris/BackstopJS#testing-spas-and-ajax-content\n. It's very easy. Try this... https://github.com/garris/BackstopJS/issues/123#issuecomment-166804008\n\nWhen you add the URL to the scenerios you can include the http basic auth username and password in the URL and it will log you in.\nexample: http://username:password@www.website.com\n. I see.  In that case you can totally use a global onReadyScript.  See the documentation on how to implement this.\n\nYour script would probably look like this...\nmodule.exports = function(casper, scenario, vp) {\n  casper.setHttpAuth([yourUserName], [yourPassword]);\n  casper.thenOpen(scenario.url);\n}\nPlease let me know if that does the trick. \n. Also FYI:  we are discussing a onBeforeEachScript in another thread.  Please feel free to add any comments...  ==>  https://github.com/garris/BackstopJS/issues/147\n. This looks beautiful!  Thank you so much -- I think this is going to be a really useful feature. \n. It would be awesome -- but no plans as of yet!   It would need to be done in CasperJS.  Marking as enhancement.   Cheers\n. nice. thanks!\n. This is by design.  File resources are cached locally so that the report host has guranteed access to the files when tests are run.\n. Looks good -- merged -- thanks!\n. Nice work!  I'm going on holiday -- i can give this a proper review in a few days.  will follow up soon.  Cheers.\n. Closed by #259 \n. Could you let me know what browsers have you tested this with?\n. Great.  Merged.   ~~So,  Chrome + Safari + FF should be good now?~~   Never mind.   Just saw the other comment.  Thanks!\n. @YuliaTsareva -- I think you have a good point.   What framework or library (if any) would you use if you were to refactor? \n. Maybe this... https://github.com/remy/clite\n. @klausbayrhammer     Yes, Totally. I really like the bring-your-own-wrapper direction.\n. Ok.  FWIW:  I have just simplified installation by removing all global NPM dependencies and migrated the Gulp <command> idiom to the more compatible npm run <command>  idiom.  So, all that is now needed for installation is npm install backstopjs no more npm install <package> -g required.\nEverything is backward compatible. Gulp <command> will actually still work -- so long as the additional global gulp installation is performed.\nThis update was really inspired by @YuliaTsareva -- I have always found the installation process to be too clunky -- and I think this change makes BackstopJS feel more agnostic and familiar to non-gulp users.  So, thanks for the comments!\nTo be sure, I still wholly support any backstop-core effort.  Just wanted to see if I could move that notion forward with the time I had.   Carry on people.\n. @JulienPradet Yup, that would be great.  I would love to see the refactoring happen and I am very happy to see BackstopJS get bundled into your testing app.   @levithomason had looked at this but I don't think he is actively working on it.  I will just ping him to make sure.  Otherwise you're welcome to have-at-it!   Please let me know how I can help. \n. @JulienPradet @levithomason Thanks guys. \ud83d\udc4d \n. Closed by #259 \n. Yes, absolutely!  A real CLI would be great.  Here are some top level requirements for that...\n- maintain backward compatibility with existing npm run <command> API\n- keep the new API clean\n- keep the bar low for other contributions with a textbook implementation (something along these lines... http://blog.npmjs.org/post/118810260230/building-a-simple-command-line-tool-with-npm)\nThat's about it.  I guess users would choose between a global install of BackstopCLI or a local BackstopJS npm run <command>-style depending on their needs?\n. Sounds great!  \ud83d\udc4d \n. @joemaller sorry about this.  Yes the CLI output was already cleaned up.   In fact many of these bugs have been fixed by version 2 -- I have a list I need to review and close...   I just created an issue to close all the issues that version 2 fixes...\nhttps://github.com/garris/BackstopJS/issues/283\nFeel free to review the list and close them out.   My big focus is currently the documentation and blog posts that all need updating.\nCheers!\n. Closed by #259 \n. I'd suggest doing something like:\nSet up your viewports with each of your window sizes and then, create 1.1.1, 1.1.2 &  1.1.3 as separate scenarios.   for each scenario, use a custom script to click your element.  You can even use the same script for all scenarios and just trigger different button click behavior based on the scenario names.  There is probably then no need to hide your elements since the next scenario will reload and start fresh.\nPlease let me know if that works for you.  I am curious to see how you solve this.\nThanks\n. I am curious why a page refresh is an issue for your use case?  Are there side-effects from your element clicks that you are trying to capture? \n. It appears your use case has changed from your initial example to your last example.  Is this deliberate or is this a typo?   If you only want 3 comparisons which all use different viewports then you must use 3 different config files. \n. Please post examples of your BackstopJS config files and output.  Thanks.\n. @joaoffalcao  Glad you were able to figure it out!   Cheers.\n. @wjramos -- thank you for this PR!   I have been wanting to upgrade the PhantomJS references.\nCouple of things though...\n- this PR breaks the build -- please review https://travis-ci.org/garris/BackstopJS/builds/114450618\n- I don't believe that adding phantom as a local dependency will necessarily work.   For example, imagine you do a global install of phantom 1.9.8 and then install BackstopJS with your modified package.json.  You'll have 2 versions of phantom on your machine.  Which one will casperjs use?  I am pretty sure it will use the global one.  You can test this by adding a custom backstop script that logs out the phantom version when run.  To ensure the local version is run, I believe you'll need to add a line like this...\nprocess.env[\"PHANTOMJS_EXECUTABLE\"] =\"./node_modules/phantomjs/bin/phantomjs\"\nbefore this line...\n   https://github.com/garris/BackstopJS/blob/master/gulp/tasks/test.js#L66\n- the same is also probably true for casperjs.   I am pretty sure you'll need to import('./node_modules/casperjs/bin/casperjs') anywhere casperjs is imported.\nIt would be AWESOME if you could get all of this to come together.   I simply don't have the time to implement and test this.   Most of what you'll need to make everything work is in the post -- but feel free to reach out with questions.\nBest,\nGarris\n. @wjramos I was working on migrating from gulp <command> to npm run <command> today -- which allows us to eliminate the global Gulp reference -- while I was at it I tested out your scenarios above and confirmed you were completely correct!   So, I want to thank you for your PR -- it gave me good perspective and enabled me to completely eliminate all globally installed dependencies.\nI didn't check if the versions I used were as up to date as yours so please feel free to pull from master, take a look again at package.json and update where necessary. \n. Hi @wjramos.  Gulp is still used locally.  The last update eliminates the need for the additional global install of gulp.  \nEventually, we'd probably remove gulp altogether.\n. Also thanks for the update on phantomjs2 -- I had been waiting so long for that to come out that I pretty much decided it would never happen. ;)\n. @axe312ger   Yup -- that's the PhantomJS version we are on.  Install is much easier now!\n. BackstopJS is using Phantom 2  -- we didn't use this pull request verbatim but did update the reference.   We still need to update the documentation -- so thanks for letting us know!\n. This would almost certainly break some existing tests so I'd rather not spring this on users in quite this way. Why not switch on a reserved value that is unlikely to be used in the wild -- like \"body:noclip\" or similar?   Also, please update the documentation to let others know about the feature.\n. Looking good.  will test soon.  Thanks!\n. Many apologies for the delay getting this in.   And many many thanks for the contribution! @medovob @fillerwriter \n. @benjaminfisher thanks for posting.  Just earlier today I resubmitted a long-overdue update to that article -- which is woefully out-of-date.  My guess is that the new article will be live in a week or so.  \nIn any case, Just to make sure that your install is ok I would suggest just running this...\n$ gulp genConfig\n$ gulp reference\n$ gulp test\nYour browser should open with a clean report after the last command.\nIf that doesn't work you could try to reinstall using the newer method here https://github.com/garris/BackstopJS#installation.\nThen run the above lines to make sure the install worked. \nIf all that is working then there maybe an issue that just affects windows -- which I'd be happy to look at.\nCheers.\n. Ok. I am pretty sure this is an environment issue i.e. a Windows issue.  So it would be really helpful if we could track this down. \nWhat version of BackstopJS are you using?   There was a new version released today 1.2.1.   It eliminates the global dependency requirements.   Running npm install backstopjs installs the whole thing.   That is the one I'd like you to try (if you haven't already).\nThen...\n$ npm run genConfig\n$ npm run reference\n$ npm run test\nNotice we no longer use $ Gulp <command>.  They are now npm run <command>\n. Thanks for updating the issue and thanks for pulling down the most recent version.\nThe most suspicious line in your log is the one that says:  the system can not find the path specified.   Seeing as you're on windows and paths are specified differently across platforms, I'm suspecting there is something internal or even in the config which is confounding the write to disk operation. \nI will review that flow and see if I can find anything obvious.   Will follow up soon.\n. Are you able to create a file in node?  Could permissions be an issue?\n. Wow. Thanks for sharing this.  I have updated the title with  the system can not find the path specified to hopefully help other windows users who have this issue.   I will reopen your other bug.\n. @paweltin I just tried this myself and got some unexpected results.  It may be related to this... https://github.com/n1k0/casperjs/issues/468\n. @opub what version of backstopjs are you using?  (If you are not using the latest -- then please update.)\nI also experienced this bug with Phantom during a test -- I don't know if they have fixed it in more recent versions. If not, there is a plausible-looking workaround here... https://github.com/casperjs/casperjs/issues/468  (Tho I haven't tried it.)\nMaybe the best way to workaround is to use the BackstopJS Slimer option...\nhttps://github.com/garris/BackstopJS#changing-the-rendering-engine-version-060\nHope this helps.  Please let me know how you end up resolving the issue.  Cheers.\n. @benjaminfisher I think this is related to your other issue -- maybe we can work on this issue one at a time... https://github.com/garris/BackstopJS/issues/171\nMarking as duplicate.\n. Not a duplicate.\n. Sorry @benjaminfisher,  I can't reproduce this.   Can you confirm there are no files saved in the bitmap_reference folders?  Could you maybe try this on a different machine? \nIn trying to reproduce, I did find a bug with the browser report not running properly in some cases -- but I think this is unrelated.\n. Thanks.\n. Thanks for the post.  Feel free to put up a PR for this.  I am happy to pull that in.  Cheers.\n. Closed by #259 \n. We're already using node-resemble for the CLI reporting option.   No plans for changes in the browser version -- but feel free to send a PR if you have a good optimization.\n. Yes, you will need to compile your app components together first -- then test.\n. Oh, I understand now.  Maybe you could just create an \"index_casperScripts.js\" and in that file just import your various scripts that way?   I think this would eliminate the need to concat them together -- perhaps it would let you use logic to import the correct scripts based on the scenario.   Hope that helps!\n. Glad it worked out.  Thanks for posting!\n. For this, I would create a simple harness in CasperJS to run your application.  From the error message, it looks like the twilio script is unhappy.  I would use an un-minified version of that to get closer to the root of the issue.  Good luck!\n. This is a great point -- many thanks for the PR! \n. I think you probably need to import gulp into the config file.   Have you tried that?\n. Sorry, I don't quite understand your issue. Please post an example of what you're trying to do.\n. Ok. I see what you want to do.\nUnfortunately, that approach is not really supported at this point.  It's probably possible to do this tho -- but you'd need to troubleshoot it.  You could also try the gulp-chug plugin, maybe it will help...\nhttps://www.npmjs.com/package/gulp-chug\nHope that helps.  Please post back if you figure it out.  Thanks.\n. Thank you for posting the resolution. \ud83d\udc4d Cheers.\n. Thank you for posting the solution to this!  I'd like to add this note to the documentation.  Would you mind telling me what resource you used to install python? e.g. the command, version, repo, etc.\n. Thanks!\n. It's hard to figure out what's going on by looking at your output.   Looks like there is an error in your app -- you might look there.   BackstopJS works with react just the same as any other app.  Here is a simple react app example (follow the readme to install) https://github.com/garris/BackstopJS/blob/master/test/simpleReactApp.zip\nHope this helps.\n. @alololox  Thanks for posting.   It could be that you are using CSS that hasn't been implemented in PhantomJS yet (It's significantly behind the latest -webkit).   You might want to try using the SlimerJS engine option and see if the problem fixes.  https://github.com/garris/BackstopJS#changing-the-rendering-engine-version-060\nOtherwise, you would debug it by commenting markup until the problem goes away -- or specifying different selectors.\nHope that helps.\n. Thanks for posting.  I will add this example to the boilerplate file to help other with the same issue.  Cheers.\n. @sturobson Thanks for posting!   I'm sorry but I am not sure I understand your question -- could you maybe post an example?\n. Ok. I understand.  Yes.  You can do this using a module based config file.\nInstead of hard-coding your config, you would create a three step process. \n-- Step 1: use node FS to look inside a target directory to programmatically create an array of file paths you want tested.  (e.g. add any file ending in .html)\n-- Step 2: create a new scenarios array by cloning a base scenario object for each file path you created in step 1, remember to replace the url property in each newly cloned scenario object.\n-- Step 3: return (export) a full config object which includes the scenarios array you created in step 2.\nJust remember to run npm run reference when you create new files to keep everything in sync.\nHope this helps.  Please post back if you complete this script -- I have had requests for this kind of thing before so, I know others would appreciate the example.\nCheers.\n. @sturobson @mathesond2 Thanks for your interest in BackstopJS.  I wanted to let you know there are some recent examples which might help you guys move forward...\n\n\nSimple JS based config...\nhttps://github.com/garris/BackstopJS/tree/master/examples/jsBasedConfig\n\n\nA node app which imports BackstopJS and executes everything programmatically...\nhttps://github.com/garris/BackstopJS/tree/master/examples/nodeIntegration\n\n\nAlso, there is a cool project by @danreeves that may be a good starting point as well. This app crawls your site and generates a config file for urls x-links deep.   I think this one is great work -- it would be even cooler to extend this by importing BackstopJS (vis-a-vis example 2 above) and then execute BackstopJS directly by injecting newly-crawled or cached scenarios.  (If that makes sense.)\nhttps://github.com/fffunction/backstop-crawl\n. Wow - what a beautiful implementation!  Please send a link when you write it up -- I'd be happy to promote it in the docs!  Cheers!. @nobso apologies for the delay!  \n\n\nSo, here is the loop where server side comparison reports are generated... \nhttps://github.com/garris/BackstopJS/blob/master/gulp/tasks/compare.js#L37\nI think you could potentially build up the kind of report you'd want inside this loop.   You could potentially add that as an option flag or as a configurable plugin.  It sounds like the kind of thing that others may also find useful -- so, if you do go ahead and create something, please create a PR. \n. Closed by https://github.com/garris/BackstopJS/pull/629. @nobso Thank you very much for the PR and apologies for not having reviewed yet!  The day job is quite hectic at the moment.   I think I will have some time on Monday to review please bear with me!\nAlso, @klausbayrhammer created this file -- I would really like him to take a look and see if he has any feedback.  Klaus -- If you have a few minutes I would really appreciate a look!  \nThanks!\n. Merged!   @nobso please add some feature notes to the readme file.  Doesn't have to be perfect -- just get the point across and I can help edit.  Thanks!\n. @klausbayrhammer   Thanks for the comments!  +1 on the plug-in idea.\n. Some other windows users had a similar issue.  Does this issue address your problem?   https://github.com/garris/BackstopJS/issues/185\n. Sorry for the delay replying -- I see where you're going with this.   The Bless you're referring to should maybe be called BlessConfig -- because that is really it's purpose.   \nAs far as images go -- there is already feature request to enable \"promoting\" a test image (or all images) to a reference image.   If you have created that, please feel free to submit a PR -- it would be super useful. \nCheers.\n. Accidentally closed.\n. @nobso Could you kindly take a look at this PR when you have a moment.  Since this is your feature I would like you to review.   Thank you!\n. Closed by #259 \n. Hmm,  could you maybe provide a gist of your setup?  That sounds like something to look into...  Thanks!\n. The config would be a good start.  Please add any other relevant files e.g. the onBeforeScript.\n. So, Are you saying that when you run the 3 login scenarios on their own they complete without any errors?\n. Can you please make a new simple config file just for troubleshooting with 3 scenarios?   Please keep it to a bare minimum and exclude onBeforeScript.  Then run that.\nThen duplicate that file and add the onBeforeScript.  Do you have any issues in this case?\n. Yup. Just want to rule out a missing comma etc. \ud83d\ude09\n. @angelariggs So, I am concerned there is a bug in here somewhere.  I need to leave for the day.  If it's possible you could maybe try experimenting with your login script.   Perhaps try to confirm that the login is really successful before the rest of the test executes. \n. If you commented all the before scripts except in the first scenario, what happens? \n. Ok.  So IOW any scenario running the before script dies?  What if you simplify the before script?  Can you track down which command is hosing execution?\n. Could you try changing your script a little bit -- pattern it this way...\ncasper.start();\nthis.thenOpen('https://schrodinger-staging.metaltoad-sites.com/knownissues', function() {\n  this.echo('thenOpen succeeded.');\n}\n. can you run npm run echo instead of npm run reference.   echo outputs debug info.  Please see if that sheds any light.  At this point I am not sure it is a Backstop issue -- but if possible, I'd still like to know what the issue is...   Thanks for your help troubleshooting!\n. @vflirt -- thank you very much for troubleshooting the issue!   \nonBeforeScript runs before page request for every viewport.  \nWould something like only running on the first viewport this fix your issue? \nmodule.exports = function(casper, scenario, vp) {\n  if (vp.name === 'phone') {\n    console.log('logging in only on the first breakpoint');\n    casper.start('<website>', function() {\n      this.fill('form#user-login', {\n        'name': '<name>',\n        'pass': '<password>'\n      }, true);\n    });\n  }\n};\nAnother approach might be to only log in if there is a form present...\nmodule.exports = function(casper, scenario, vp) {\n  casper.start('<website>', function() {\n    if (casper.exists('form#user-login')) {\n      console.log('logging in if the form exists');\n      this.fill('form#user-login', {\n        'name': '<name>',\n        'pass': '<password>'\n      }, true);\n    }  \n  });\n};\nI think the second version is probably more solid (but maybe less efficient).\nPlease let me know if either or both of these work!  Thank you.\n. Would you mind posting your workaround code so I can update the example?\n. @vflirt Thank you for sharing!   Cheers,  Garris\n. Awesome, thank you!\n. If you don't need a lot of reporting detail, you could just capture the enclosing parent element (e.g. '.exampleContainer').   \nOtherwise, you'll need to be explicit and tack on something like ':nth-of-type(n)' to your selectors. \n. Just a thought,  if you need something more dynamic you could switch to a js based config.   In that case, in your config, you would add a script to read in your page, count the '.example' references then map that count to a selector array of n selectors.  You'd return that as the value for the 'selectors' property and boom.\nPlease post your solution back here if you manage to do it -- it would be a cool feature and I am sure others would want to use it as a starting point for other custom configs.\nCheers.\n. Which feature(s) are you interested in?\n. Ahh yes, I really like this group of features-- but before publishing that I wanted to give plenty of time for others to test out the various features.   I would love to hear how you have integrated BackstopJS into your CI.   How easy or hard it was and how you manage workflow/validation of UI changes.\n. Sorry, accidentally hit close button...\n. Thank you for the feedback.  That is very helpful!\nAlso, some good news -- we shipped version 1.3.1 today.  I very much appreciate your patience -- this is a labor of love so sometimes it takes longer than we'd like to ship.   \nCheers.\n. Closed by #259 \n. Boom!   1.3.1 has shipped. \ud83d\udea2 \nThank you for your help on this one!\n. @rjokelai @Steven-Pingel there is a commit of BackstopJS which allows you to specify \"viewport\" as a selector.  I haven't been able to test it yet -- but I will merge it to master and you can give it a try.  I will let you know when it's up -- pls give me 15 mins...\n. ok.  the update is in master.\n install with npm install garris/backstopjs#master\nfor instructions, please see...\n https://github.com/garris/BackstopJS/blob/master/README.md#capturing-the-entire-document\nPlease let me know if it works -- I haven't had time to test it myself!\nThanks!\n. @rjokelai @Steven-Pingel @kamlesh-astech Document capture feature is ready to test.  Thank you.\n. Thanks for verifying!   This is in the latest release 1.3.2.   Cheers.\n. You can use as many selectors as you like. \n. Thanks @imclapton and @levithomason.   The readme is updated.\n. LGTM.\n. I just put an untested feature on master.   I've asked the requesters to verify.  If they can do it in the next few hours we can release the whole thing tonight.\n. What version are you using?\n. @mousemke could you please post your config file and any other info here. \n@nobso Since this is your feature, would you mind taking a quick look? \n. @mousemke Thank you for reporting the issue and helping us to troubleshoot!\n@nobso Thanks!  Will merge now...\n. @mousemke did that take care of your issue?\n. Thanks guys!  \ud83d\udc4d \n. Thank you very much for addressing this so quickly -- much appreciated! \ud83d\udc4d\n. Done.\n. Done.  Sorry for the delay -- I didn't have my computer with me.  Thanks so much for taking care of the bugs.\n. @vflirt thank you for posting this issue -- Suresh worked on that feature so I'd like to have him comment on the PR.\n@nobso Could you please comment on this -- thanks!\n. Looks good -- thank you!\n. Yes.  this was totally released -- in fact, I got an issue (#219)  from another user that the extended error that NPM now throws is distracting.   can't please everyone all the time  \ud83d\ude1b\n. Sure,  let me know if there is something missing or broken or whatever.\n. Awesome.  Cheers.\n. This looks good to me -- thanks @nobso!\nI'm going to go ahead and merge but would love to hear from @vflirt to validate if possible.\nCheers!\n. Hi @levithomason!  Thank you for PR #215 -- I've just merged that in. \nI am very happy to have you contributing anything else you're interested in. \nI'll be out of town for a week -- but lets follow up after that.\nAgain, thanks for your contributions!\n. To date all contributors are just posting PR's.  Seems to work pretty good that way.\n. @levithomason Just wanted to check in with you.  There is another contributor who wanted to take a look at the CLI-related effort.  I am assuming you aren't actively working on this at the moment -- is that correct.   I just wanted to make sure not to step on any of your effort.   Please let me know.   Thanks!\n. @hamzazaidi -- are you still having this issue?  This is working for me.   Please LMK.  Thank you.\n. @stephenbe does the NPM error go away when there are no mismatches found?\n. ok, then this is behaving as designed.   BackstopJS is reporting the failure back to NPM and NPM is letting you know.   We used to have a parameter to enable more friendly feedback -- but it was removed because it conflicted with a major CI use case.   There is probably a light-touch way to prevent this without breaking CI integration (maybe by adding a command or modifier).   Hopefully someone can contribute a solution for straight ahead CLI users. \n. Probably not.  It would be more like adding a config prop e.g. suppressCliErrorMsg: true in the BackstopJS config file.  Then returning a 1 if suppressCliErrorMsg is true at this spot... https://github.com/garris/BackstopJS/blob/master/gulp/tasks/compare.js#L37\n. Closed by #259 \n. @rickyfullbottle thank you very much for posting this issue.  I think you are on the right track with this however,  I am not sure that it's a good idea to clobber a config parameter -- as there may be a process downstream that is dependent on the intrinsic scenario.url value.    Instead of modifying the url parameter, would you consider adding a scenario.isReference so that a user script could be programmed to behave as desired?   Alternatively, you could add a scenario.currentUrl which would return the correct url.\nWhat are your thoughts?\n. Glad it's working for you.  Thanks for posting!\n. Sorry,  I am in meetings the rest of the day.  Will review later today.  Thanks.\n. @nobso thanks for the PR -- sorry the review took so long!   It looks good.  I just had a comment/request -- please see the note.   If you could address that I'd pull it all in and release asap. \n. Hi @nobso,   I had some time so I just merged this in and tweaked the name enforcement.  I hope that's ok with you.   I hadn't heard back so I assume you just got busy.  Please let me know if you run into any issues with the change.   Thanks!\n. I think that sounds great!\n. No problem @nobso -- thanks again for your help on other features!  They really had a positive impact.\nSauce labs integration would be great if someone wants to start looking into it.. Not that I know of.. I am pretty sure this is not being worked on by anyone at the moment.  At least nothing I am aware of.  I am happy to support anyone who wants to work on it.   Cheers.. @Craignewkirk  I am very curious  -- how do you use Sauce for your FE framework?   What is your workflow?   And what are you testing for?   Are you just visual diffing -- or are you also testing that your JS is running everywhere etc?. @IoT-master This is a great question.  Unfortunately, it is not implemented yet.   This could be done by explicitly pointing to different phantom installs in each node.span() closure here. \nCall this in your shell prior to running casper.js scripts.\n$ export PHANTOMJS_EXECUTABLE=./node_modules/phantomjs/bin/phantomjs\nThen you would write some logic around firing off different scenarios with each assigned an available phantom instance.   It's a bit complicated but I'd be happy to help anyone who has interest working on it.\nCheers.\n. This looks like an environment issue.  What version of npm and node are you using?\n. oh no...  that sounds bad.   :(\nLooks like an issue with npm & gulp.  My versions are working...\n```\n$ node -v\nv4.4.0\n$ npm -v\n2.14.20\n```\nAnd I have another instance running some version of 'npm 5.x.x' which also works.\nLooks like this is an intermediate version issue...  http://stackoverflow.com/questions/36936815/graceful-fs-warning-when-running-grunt-task\nThere are some other ideas on stackoverflow.\n@brianyang @patriciamarchand thank you very much for reporting!  Please let me know if you are able to resolve the issue (and what method you used) and I'll add that to the readme.   \nCheers!\n. Nice.  Thanks @patriciamarchand! \n. sorry.  sounds like you meant this comment for a different project.\n. sorry.  sounds like you meant this comment for a different project.\n. sorry.  sounds like you meant this comment for a different project.\n. BackstopJS is for testing lots of pages.  If you want to test lots of interactions than you may be better off using phantomCSS or just CasperJS on its own.\n. Closed by #259 \n. @sjorsjes thank you for posting!  I looked at your travis log and it is indeed puzzling what the issue could be.  Question, are the compare files getting written to the travis container? i.e. does this file exist See: /home/travis/build/vicompany/ezpz-flexbox-grid/test/backstop_data/bitmaps_test/20160726-113335/failed_diff_0_0_chapternth-of-type1_0_tiny.png?    \nI have a meeting I need to jump into and then I have a busy day.   I suspect the same thing you do -- somehow file references are wonky in the travis environment -- so perhaps it may take a little more trial and error.  But don't give up -- it looks like you are really close!\nI will try to recreate the issue on my end when I get a chance.  In the mean time -- if you do solve it, please post back -- I'm sure this could help others...\nCheers.\n-GS\n. This is outstanding work.  Please carry on!\nI've pushed a new branch -- this one is for you...\nhttps://github.com/garris/BackstopJS/tree/version_2_0\n. Hi,  was reviewing early this morning but didn't get a chance to finish -- but looked pretty good in general!   Great work!   \nPlease change the PR to the version 2 branch when you get a chance.   I'll pull that in so we can start hitting the actual code. \n. Merged to version_2_0!   I will try to review the commits on my way home today.  Thank you!\n. @julienPradet  just wanted to let you know, the PR is great -- there are already new PR's against it.  See branch 2_0_onigotez\n. @JulienPradet  I think the most recent contributions are incredible and I'd like to release as soon as everyone has their fixes in and the docs are accurate.  \nI am also considering changing the name to BackstopCLI.   thoughts anyone?\nAlso I think the web page backstopjs.com branding is lacking.   I'd like to do add real screen shots (maybe video) and also I'd really really like a mascot or logo.   EmberJS is a good example of an open sourced framework with a great branding mascot.  I really think Backstop needs something like that! \n. I like gulp-shell too.\nOptionally, There is a nice tutorial for this exact use case using gulp-chug -- you might want to look at that as well...\nhttp://blog.bartos.me/css-regression-testing/\n\nIf you want to control backstop's gulp within your own project's gulpfile.js, there is an easy way out using gulp-chug package.\n\nHope that helps!\n. I agree with you -- the install path is very unusual.   I have never seen this issue.\nMaybe you could try installing again in another location -- just for a sanity check.\nWhat version of mom & node are you on?\n. Closed by #259 \n. @mathesond2 Thank you so much for posting.    I took a look at your example repo and it looks like your documentation is a little bit out of date.   The BackstopJS install now installs everything you need with npm install backstopjs.  Global Gulp, CasperJS and PhantomJS installs have been unnecessary since version 1.2.0.   \nAlso, the supported commands have all been moved to npm:  npm run test, npm run reference, npm run genConfig.   The Gulp commands still work for backward compatibility -- but Gulp is being phased out.  The only quirk left is having to cd node_modules/backstopjs to run commands -- this will also be phased out with Gulp.  Note: We are planning to add a gulp shim so that prior integrations will still continue to work.\nIn any case, it would be great if you could validate all of this in your environment -- maybe just try to install in a different location.  Please let me know if you run into any issues and it would be great if you could update your documentation to reflect the recent contributions when you get a chance.   \nCheers! \n. @svwu thanks for posting.  I haven't seen that issue and the current version has been out for weeks.  What version NPM and node are you using?\n. :+1:\n. @melissamcewen thanks for posting.   You can use a JS based config... \nhttps://github.com/garris/BackstopJS#using-a-js-based-config-file-version-100\nIs that what you mean?\n. Please post your console output... \n. The link I posted above describes how to call a js based config -- you simply add a flag to your command e.g. npm run reference -- --configPath=~/absolutePathTo/yourTestConfig.js.     There are multiple examples in the read me.   Is the documentation confusing or did you just miss that?\n. Ah ha.  Now it all makes sense.  Thanks for explaining.  I've never tried to do that -- but this looks like something to try... https://www.npmjs.com/package/gulp-chug#options    Please post back if you can figure it out!  Cheers.\n. Closed by #259 \n. +1\n. This sounds like a big.  I don't think the server should start if only CLI is selected.\n. This of course is not ideal and should be fixed -- but the server will auto shut down and should not impact your CI.  Is that true for your use case?\n. Marked as bug.\n. Closed by #259 \n. Maybe they have a user-agent rule?   PhantomJS looks like this...\nMozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34\nI just quickly googled this article -- wpengine may be using some of these techniques...\nhttp://engineering.shapesecurity.com/2015/01/detecting-phantomjs-based-visitors.html\nPlease post back if you resolve the issue.  I am curious to see how it works out. \nCheers.\n. @nobso Thanks for following up on this!   \nYes. It is intentional. But I'm regretting this change because of all the confusion it is creating \ud83d\ude1e .\nIt was changed because of CLI users who need the error to propagate all the way back to the original invocation so that the calling process can report a failure.  Some of these users were confused that they needed to add an extra step to enable error bubbling.\nAnd of course, web developers are getting confused by all the npm messages.   At this point I prefer to add a new config CLI_SILENT and make that the default.   I think this may be more intuitive for regular users who will just use the default setting and users who will be integrating into a larger process will see the _SILENT and get a hint that there is a non-silent option.  \nOr something like that...\nComments welcome!\n. They all do the same thing.  The only difference is how users learn to use BackstopJS.   I thought originally that users would quickly see cliExitOnFail and think to switch it's state.  But there were multiple users who were didn't understand this.  My thinking is that someone setting up backstop for the first time is less likely to read the documentation and just want it to work how they expect.  So,  my thinking is that eliminating the need to learn another parameter and putting the behavior into the name of the config flag would help.   \u00af_(\u30c4)_/\u00af\n. Well, debug adds a lot more detail the CLI window.  It's purpose is to help figure out why BackstopJS isn't working.  So, it shouldn't change behavior for an CI implementation detail.\n. Closed by #259 \n. Merged to version_2_0! I will try to review the commits on my way home today. Thank you!\n. @JulienPradet  Just wanted to let you know I am in the process of reviewing this.  Still working through it but just an early comment: this is spectacular work.   \nThanks for your patience-- will follow up as soon as I can.  \nCheers,\nGarris\n. Closed by #259 \n. No, sorry.  there is no abstraction for that sort of thing.   You currently need 1:1 image captures for each test.   Are you attempting to test hundreds of instances or just a few?\n. I see -- like if you wanted to test a logo on a web app with 1000 instances -- might make sense to abstract that.  I guess you could add a config setting for library of single instances that are captured to e.g. backstop_data/bitmaps_library, and write an exception to test against the matching selector name whenever a scenario selector matches.  \nSomething like that...\n. I'm sorry.  I am not sure I get your meaning?  Maybe you could describe the scenario in more detail?     I am about to become available for the rest of the day.  I will reply as soon as I can.  Take care!\n. Ah,  I think I am getting your point now -- I don't think I understood before.   \nSo, if I am understanding correctly now, this change will enable me to check all .logo elements on a page without having to specifically identify each one with an nth-child selector.  This change handles that for me automatically.   And it looks like it will simply append an _n to the file name.\nSorry for the slow responses.   Am I understanding correctly now? \n. That makes total sense -- very easy to grok!      \nMerged.   Thank you!\n. I forgot about that squish feature -- thanks!  Will try to run this today.\n. @Primajin thanks so much for the feature work!  I had just one comment which I left on the PR.   please just address that and this feature will be merged for the next release.  \nFYI: there is another feature #249 (selector expansion) which would effect behavior of the filenaming (downstream of your naming template).   Please feel free to make any comments, suggestions etc as this would dynamically add selector names for selectors with multiple instances.\nCheers.\n. @Primajin sorry, the comment is here ^^^\n. Just an update.  I am going to merge this into the version_2_0_RC branch.  Version 2 is a huge refactor (completely removed gulp) and this feature is required for that one.   I'll ping everyone when it's in to give people a chance to test.   Thank you very much for this feature work  -- I appreciate your persistence.   Cheers.\n. It is quite easy \u2014 however \u2014 not recommended since backstop requires enough unique information in the filename to manage everything.    That said, if you\u2019re careful you can probably get it to work just fine.\nAny case, check the readme here... https://github.com/garris/BackstopJS/blob/master/README.md#if-you-just-upgraded-to-2x-or-3x. Makes sense.  Merged.  Thanks!\n. Apologies, I have been traveling.  Will try to review this today -- but may not have a chance till I return on Thursday.   Thank you for your patience.\n. @nobso   I have reviewed the changes and have some thoughts and suggestions.\nFirst, I really like this feature.  Thank you for your inspired contribution here.\nI think an appropriate name for this would be something like \"selector expansion\".  I think this feature should also be switchable, e.g. enableSelectorExpansion: true as a scenario-level config.  And this should default to true.    \nThe current implementation has some issues.  It appears the the (new) \"expanded\" instances would not handle missing or invisible element test cases in the same way that the (current implementation's) \"first-of-type\" or 1:1 selectors do.  E.g. See the following two lines for examples of missing/hidden case handlers outside the scope of the new expanded selectors...\nhttps://github.com/nobso/BackstopJS/blob/c1b00863f8e2509544a380ed49c90e6d6ca7892f/capture/genBitmaps.js#L231\nhttps://github.com/nobso/BackstopJS/blob/c1b00863f8e2509544a380ed49c90e6d6ca7892f/capture/genBitmaps.js#L235\nI think this implementation may be cleaner if inserted before the existing flow such that no changes to the existing selector loop would be needed.  Have you considered something like flat-mapping the selectors into a new array?\nReplace this line...\nhttps://github.com/garris/BackstopJS/pull/249/files#diff-8854ff0ca17d960be935d14ef5decc3fR163\nWith something like this...\n```\nif (scenario.enableSelectorExpansion === undefined || scenario.enableSelectorExpansion) {\nscenario.expandedSelectors = scenario.selectors.reduce(function(acc, selector){ \n  var expandedSelectorArray = // awesome selector finding and naming code here...\n  return acc.concat(expandedSelectorArray);\n}, []);\nelse {\n  scenario.expandedSelectors = scenario.selectors\n}\nscenario.expandedSelectors.forEach(function(o,i,a){\n```\nWith this approach, I think you could avoid the need to decorate the DOM with ignore meta-classes.\nWhat do you think?\n. Also, to be backward compatible from a behavior standpoint, the first of all expanded selectors found should have no name extension e.g. .myLogo.  But subsequent similar elements should be decorated with an additional selector class myLogo_n1, myLogo_n2.\n. @nobso I think this line from your post above may be confusing to some other contributors...\n\nThis PR will add the capability to run tests on many similar selectors against one reference screenshot.\n\nI think what you mean is this...\nThis PR will add the capability to run tests on many instances of a single selector.\nJust wanted to confirm this and be certain that is your intent...  Is that true?\n. Ok good.  Thank you for the clarification-- I think there was just some confusion with the language of that line.   \nPlease carry on.  \ud83d\ude42\n. @nobso I just wanted to alert you to a very positive development happening on the version_2_0_onigotez branch.   The BackstopJS core has been rewritten and Gulp has been completely removed.   Your change (which will be a great feature!) would still move forward and remain the same -- it would just be happening in a different file and slightly different context.   \nI wanted to make you aware of the forthcoming work in progress please feel free to make comments and suggestions etc.\nHope you are having a good weekend.\nCheers.\n. No worries at all!  Thank you.\n. Hi @nobso,  Great to see that you are still working on this when you can!   \nI am very excited because the new version 2.0 is feature complete and it is a huge huge improvement!   I am working on the documentation and hope to finish within 2 weeks.  \nIf this feature is finished in that time I would gladly include it -- but no worries at all if not -- just take your time.\nI'll reply to your comments below... Hope all is well!\n. > > Replace this line... https://github.com/garris/BackstopJS/pull/249/files#diff...\n\nWe cannot use reduce on scenario.selectors because this will not have any of the identical elements. We don't want to ask the developer to mention these similar selectors in there.\n\nSo, below is an example of what selector expansion would do -- and at the end is a code example of how it could probably be implemented.\nWhen doing a reference run, if you have a DOM layout like this...\n...\n<body>\n  <div class=\"logo\">\n  <div class=\"logo\">\n  <div class=\"logo\">\n</body>\nand a config with this\n...\n\"selectors\": [\n  \".logo\"\n],\nthen the expansion script would decorate the DOM like so...\n...\n<body>\n  <div class=\"logo\">\n  <div class=\"logo __n_1\">\n  <div class=\"logo __n_2\">\n </body>\nand the internal property expandedSelectors would look like this...\n\"expandedSelectors\": [\n  \".logo\"\n  \".logo.__n_1\"\n  \".logo.__n_2\"\n]\nso below, this \"reduce\" actually \"expands\" single entities by doing a DOM query on each one. As a side effect, it also does the DOM decoration.  At least that's the idea.   If it's done in this way, the footprint for this feature is actually very very small.\nscenario.expandedSelectors = scenario.selectors.reduce(function(acc, selector){ \n  var expandedSelectorArray = [].slice.call(document.body.querySelectorAll(selector)).map(function(element, i) {\n    var nPart = i ? '__n_' + i : '';\n    element.classlist.add(nPart);\n    return selector + '.' + nPart;\n});\n  return acc.concat(expandedSelectorArray);\n}, []);\nI think this is really the heart of the feature.  There are probably a few edge cases (missing selectors across runs?) that will need some sorting out -- but most of it is right here.\n. That's great to hear!  I will review as soon as I can.   If possible, could you add a test example to the examples directory.   \nCheers!\n. this is super!  Here's comments...\nCan you checkout version_2.0 and PR against that?   You will need to copy by hand since file structure is a little different (/test was moved to /example )\nAlso, you will see that file name generation has changed -- you'll need to do some modifications there.\nMaybe use __n1 as the filename & CSS extension? It needs to be reasonably small and unique since it will occur on reports.  I have high confidence benefits of brevity outway uniqueness.\nI think you don't need to exclude the hidden selections from reports -- if someone includes the selector then we should not override their config -- it's not clear to me that this override is going to be obvious in practice.\nThank you!\n. Ok.  I understand what the issue is now.   \nSo, here... https://github.com/garris/BackstopJS/pull/249/commits/6e0496d65841ab88e8a66ecb8cbbb9417dd88583#diff-8854ff0ca17d960be935d14ef5decc3fR152\ninstead of display:none, maybe we should simply remove the selector.  I think \"removeSelectors\" should actually do what it says.     i.e. s.parentNode.removeChild( s ); \nThat eliminates the need for filtering later on.   Is that more intuitive for you as well?\n. Me too.  But I feel like the purpose of a major revision is to add big new features and also to fix errors made before -- even if that breaks some functionality/edge cases.   In this case, I have been regretting that I used the name \"removeSelectors\" without actually removing the DOM node.  That was a little bit silly.  \ud83d\ude1d    I will add that note to the documentation -- it probably wont be too bad for most every case.\n. Closing -- moved to new PR.\n. @svwu I apologize for the delay following up -- I have been preoccupied trying to get 2.0 out.   Yes. It is reasonable to add this feature.   And yes, I think it would be great for you to add it.  However, if possible, I would like it added as an onBefore script module.   In this case, you could create a cliArgs object and pass it as a parameter to the onBefore & onReady hook.  Your module can parse for the relevant key values.   The reason for this is because auth can be very complex.  There are many who will need some basic examples they can modify for thier requirements.  I myself am going to publish a gmail login module and a cookie parser module.\nIf you implement a clean way to do this then it would be easy for any developer to pull arguments into his/her plugin.\nWhat do you think?\n. @tommyno actually, I think #249 is exactly related to your issue.  There was an initial misunderstanding earlier in the conversation.   @nobso is currently working on it and doing a great job.  Feel free to review the thread and add color or comments if you have any.   I hope this can go out in the next release.   Cheers.\n. I totally agree with this.  It would be much better to spawn a paged, filterable browser report from an existing CLI result.   If you'd like to contribute this I'm sure there would be lots of happy developers as a result!\nCheers.\n. \ud83d\ude2e Holy crap!  Sounds incredible.  I'll give this a review today.\n. There is an enhancement request for this.  see #95    I would really like to see that one implemented.\n. You might also consider breaking your config file up into a few smaller ones and selecting the scenario group you want on the CLI.\n. Closed by #259 \n. Hmm. 404?  I don't think you would see that if it was just a matter of having too many test cases -- but I don't have much context here.   Have you tried the CLI option?  Does that work?\nAlso, would it work if you were to just run one of the scenarios?\n. Ok.  Good to hear.  Our next step is to refactor the web report to handle very large sets.\n. Closed by #259 \n. @SKOLZ There is a feature enhancement request for this... See #95\n. Closed by #259 \n. see: https://github.com/garris/BackstopJS/tree/version_2_0_onigotez\n. Ok.  It's merged now.   \nThis is an epic PR!  This is an overwhelmingly positive direction for BackstopJS.  Thank you for the contribution!\nThanks for clarifying re: #241 -- Sorry I was having trouble deciding how to manage the PR.  I guess I will leave 2_0 as is and wait till you are ready to have me pull the PR.  In the meantime I am also tracking your public changes so I can test them locally. Sound good?\nI am intrigued by scenario.variants.   \nIs it your intention to abandon change detection of the config?\nI am already thinking about the various online resources and tutorials that need to be rewritten with this new, much cleaner interface.\n. The openReport command isn't working for me.  Maybe this isn't completely implemented yet? \nError: Command failed: /bin/sh -c open -a \"Google Chrome\" \"/Users/gshipon/Desktop/myCoolProject/html_report/index.html\"\n. It looks like the open chrome command is working fine.  I think the index.html isn't getting written. \n. Anyway,  Great work! \n. I think semi-standard will create the most happiness among most contributors -- so let's please use that one.   \n. I just want to double check on this one.  I am not aware of any way to put the backstop command on a users path by doing a local install.   \nHowever, your changes to the readme read such that one could successfully run...\nnpm install backstopjs --save-dev\nand then from the project directory run...\nbackstop genConfig\nI understand you can do that in the context of a package.json > script property -- but this is not the case if one is simply using the command line.  If left as-is, this documentation disconnect would definitely confuse users -- especially new ones.  \nTo be sure: This (non-PATH-ified) local-install orientation is really not a bad thing given that older implementations (the ones using npm run <command> from node_modules/backstopjs/) will continue to work as before.  \nPlease let me know if I missing something here.   If not -- I would propose that the readme is written in the context of a global cli install.  ie. npm install backstopjs -g   This would be in-line with other npm based CLI tools like gulp & ember-cli without breaking older implementations.\nAgain, please let me know if you have any thoughts or info contrary to this.\nBest, Garris\n. @onigoetz   I've just tested the global and local install.   The browser report is not getting generated in either.   Please take a look at that when you get the chance.\nAlso, when browser is one of the options selected can we run the browser report (with browser self-opening) after testing is done?   I don't know if MacOS and Win need different spawn commands.\n. Looks like the browser report issue is coming from makeConfig.js  It doesn't appear that config.report is getting set properly there.   That's all I got for now. \n. Getting closer.  I just observed everything works (i.e. makeConfig.js generates the correct config props) when explicitly setting the config file path.  \n. Ok. Just made pull request to onigotez/2_0_0 with fixes...\nhttps://github.com/onigoetz/BackstopJS/pull/1\n...and it looks like I broke the tests...   \ud83d\ude15\nIn this case -- I think the tests need to be rewritten.\n. Fixes are in https://github.com/onigoetz/BackstopJS/pull/2\nI left your fs.exists() condition in the config reading block.  But it just occurred to me that it is actually useful for users to know if there was a missing file error.   If you get to it it would be great to pull that back out.  Otherwise I can do another PR.    Thanks!\n. Super. I will check this out tonight.  Thank you!\n. Awesome -- thank you!   I will be adding some readme info about the 2.0 version soon.\n. Closed by #259 \n. Currently there is no ignore.\n. That is the intention of hideSelector -- if you use that the area will be ignored and have no effect on your test.   Why is this not sufficient?\n. How about a lemur with giant eyes holding a baseballbat?\n. \ud83d\ude38 it's great!  I really like it!  But I'm not sure how a rat works into the \"backstop\" theme\ud83d\ude06.   Maybe it doesn't matter that it makes no sense \ud83e\udd14.  I need to think about it...     To be sure though: A+ on execution and cuteness!!!  Thank you very much for submitting it!\n. @kporras07 Thanks so much for the suggestion.  This is an interesting idea -- I appreciate the red shadow.  But, maybe not quite streamlined enough for a mascot.  \ud83d\ude38. fixed by https://github.com/garris/BackstopJS/commit/06153b76541d49f418d5d91effa152f719ba98a8\n. The setup sounds correct.   What are the OS, node, npm versions?\n. Are the npm and node versions in sync on all machines?\nAnd do plain vanilla backstop installs work independently on the other machines?\n. i am suspecting it is an issue with either phantom (or slimmer -- if you're using that).   Have you tried a simple install on your other machine?  Just install the app.  Do genConfig then reference then test.  Does that work?\n. If you are on Windows then this might help...  https://github.com/garris/BackstopJS/issues/185\n. @danwellman thanks for the update!  Cheers.  Garris\n. This is a guess but -- if it's OS X you can try changing your default browser to a native version of chrome.\n. Maybe you could try BackstopJS version 2?  It's in beta mode here... https://github.com/garris/BackstopJS/blob/version_2_0/README.md\nIt opens the browser using a completely different method.  Would be interesting to see if it fixes your issue.\n. Great to hear!   Cheers.\n. Can you post the terminal output?\n. Ok.  I appreciate that you followed up -- I am sorry I wasn't more of a help.   But I am glad it's working for your other project!  Cheers.\n. Yup.  It's on the list.   I could really use help on the feature if you have any free cycles.\n. \ud83d\udce2 This was included in 2.0 released yesterday.\nSee... https://github.com/garris/BackstopJS#updating-or-testing-just-one-scenario-filtering\nIt's a new feature so please post an issue if you run into problems.\nCheers!\n. Should be resolved by #259 .  Please reopen if that is not the case. \n. @abangser thanks for posting and thanks for investigating this weird behavior.  Can you post your config and maybe a snapshot of your DOM?   I think to narrow things down, we probably want to make sure there is no .js interference.   Maybe you could create a static .html doc with your generated DOM and CSS.   Then see if backstop can just hit that page and give you the screenshot you expected.\nAlso,  just wondering what would happen if you added a few index selectors e.g. :nth-of-type(1), :nth-of-type(2) etc.  Maybe you have temporal duplicates? \nalso,  @valerie-roske,  many apologies for not replying to your original post almost a month ago.   This is still just a side project and sometimes I get totally overwhelmed and things can fall through the cracks.   Please feel free to add to this thread if you have resolved or worked around your issue.\nCheers!\n. @abangser @YoungElPaso if you post your config file here I can help troubleshot. \n. Is your code dependent on a .resize() or hashchange event?   I think phantomjs is a little inconsistent with events.\n. @robertmazzo   thanks for being so active about finding a solution.   I don't have easy access to a win box so it's a little hard for me to help.  But my question is this:   Can phantomjs save a screenshot in the directory you are intending to use for reference.   We really should know this first -- from your response above it appears that you are only testing for the existance of phantomjs.   Please just quickly test it phantom can vist Google and take a screenshot.   You can easily find an example online.   Please test that and let me know -- it will lead to an answer.\n. If the issue is backstop then you might try to install backstop version 2.   It is a global install now with a brand new core -- Gulp has been removed.\n. But first test phantomjs ;)\n. I have just verified that a fresh install of BackstopJS version 2.0 on win10 is working.  Please reopen if you have any other issues.  Cheers.  Garris\n. @robertmazzo Just checking in here.  Did you test PhantomJS on your machine?  I suspect that is the issue.   Also,  We're about to release version 2.0.  You could try that -- check the documentation here https://github.com/garris/BackstopJS/blob/version_2_0/README.md for install and config changes. \n. are you using version 1.x or 2 beta?   If you're on 1.x please try version 2 (and please note the install and config changes in the version 2 branch of the docs). \n. I think you probably wouldn't want to use lossy compression (.jpg) on your images since dithering noise could cause false positives.    Maybe cleaning out your test_bitmaps directory on a daily basis might help?\n. @ahoopen this looks great at first glance -- thank you very much for this important feature contribution!   This is a pretty big review so I will need a little time.   Will get back to you as soon as I can.  Cheers!\n. @ahoopen thank you for your patience!  2.0 is finally in soft release mode and I can finally start devoting energy to new PRs.   Unfortunately my projects at work have been freely ramped up so it could still be a few more weeks before I can do a proper review.  But it will happen!   Please know that I really appreciate your effort and will follow up as soon as I can.   Best regards,  Garris\n. The feature was added to the cli.  (We ended up not going forward with this GUI PR)\nbackstop approve will promote the latest test run screenshots to reference.  You can add --filter=<scenarioId> to approve specific images (this is a regex string against filenames so it's very flexible). Are you using version 1.x or 2beta?\n. If you're using 1.x -- please try upgrading to the 2 Beta.   (please not subtle install and config changes in the version 2 documentation).  Please let me know how that goes for you.\n. Ok then.   I am pretty sure that all scenarios are processed in parallel inside of casper -- so it's not a big surprise things are bottoming out. \nIdeally we could implement some kind of async limit like this... http://caolan.github.io/async/docs.html#.everyLimit\nBut as an incremental step we could try to integrate a casper.eachThen() here.  I think this would serialize the processes... https://github.com/garris/BackstopJS/blob/version_2_0/capture/genBitmaps.js#L63\nAnd as a quick fix you could break your tests up into separate files and run them serially on your command line.   Pull down the latest version 2 and you can use the same data paths for your resources.  I am still working on the documentation so feel free to ping with questions -- I'll answer as many as I can after hours.\nPlease let me know how this works out.\n. Can you restate your question about file names? I am not sure what your question is.   You can change the file naming format -- see the readme under \"Migrating to 2.0\"\n. @mirzazeyrek limiting simultaneous comparisons was already implemented in master -- unfortunately this by itself is not enough.  The resemble object also needs to be cleaned up after each individual comparison is completed -- one more step is needed.   Please check this issue for details https://github.com/garris/BackstopJS/issues/329 -- and by all means, please do contribute a PR if you are so inspired!  \ud83d\ude3a\n. Fixed! \nCurrently in Beta:   npm install -g backstopjs@beta\nsee https://github.com/garris/BackstopJS/releases/tag/v2.3.4. it can also fail if the image size is different.   Please post example.\n. Thank you for posting the example.   Yes, this is behaving correctly.   If the size of the element changes it will trigger a \"fail\".  In your example the height shows a 4px difference -- that is what is causing the condition.  The threshold setting does not apply to height or width differences.\n. Just scrubbed the list. Fixed. \n. Thanks for the post.  Will try to get to this.\n. Done!   Use npm install backstopjs@beta\n. Not sure what \"mess up\" means in this context.  Could you please add detail.\n. Also FYI, you don't need to add referenceUrl if it is the same as url.\n. Sorry guys.   I am completely maxed with a giant project -- may not be able to reply for a long while.  I encourage you guys to dig deeper into what the issue may be. Sorry I can't be more help at the moment.  Best,  garris . Hi -- thanks for letting me know!  Very glad it's working for you.   I am not sure there was any fix that I made which would have fixed this.   I have not been great about documenting everything always  apologies for that!  \nThere is a lot of work happening at the moment however.   I am integrating chrome-headless into backstop.   And also enabling parallel screen capture.  These two changes are making the whole experience much faster and way more stable!  . @stephenbe thanks for your kind words and positive energy!   Keep up with the bitemogi!. @nobso Can you also target the PR against version 2.0 as well.   Master has not been migrated to 2.0 yet.\n. Feature is in master.   Please review/comment as needed.   Thank you!\n. @nobso This feature is now in master with very positive feedback from beta testers.   It will be released soon.  Please reopen and/or let me know if you think it needs anything else.   And thank you very much for the contribution -- it's already creating developer happiness!\n. Hello,  very sorry,  i was cleaning up yesterday and deleted the 2.0 branch since we have already done the release. I guess this got closed automatically since it was targeting that deleted  branch.   Please do not be concerned about not completing yet -- I totally understand we are all very busy!   I myself have so much guilt not testing PRs sooner.\nI had some time yesterday and patched this to a local branch -- I wanted to see if I could release it but I didn't get a chance to complete testing.  But I really love this feature and want to get it in as soon as possible.   \nI will push that branch next time I am on my laptop and we can continue work there -- this feature is really really close.   I'll let you know when I push the new branch you are more than welcome to continue working on it if you get the time.\n. And thanks for all your effort!   Hope all is going well.\n. @nobso the feature is in master.  Please take a look when you get a chance.  I tested it today and I thought it behaved well.   I updated the documentation as well.\nLet me know if the behaivior is acceptable.   I removed some of the display & filename mutations because I didn't think they were needed.   \nThe only thing I am not happy with is that the current filenaming doesn't always play nicely when updating removeSelectors because the selector.index In the file name template is dependent on always having the same number of selectors.   I am still considering going back to a hidden class.   But maybe I am over thinking it.   I do like the current feature footprint is small tho.\nCheers.\n. Thanks!\n. Please provide screenshot and any other examples.\n. Hi @patdavid,  thanks for posting!    \nThis line is kind of bothering me... \nCasperJS:  Fatal: The specified executable is not a valid application for this OS platform.; did you install phantomjs?\nI also see that phantomjs is responding the correct version so that is confusing.\nJust for sanity, are you able to create a directory somewhere, cd into it and run...\nbackstop genConfig && backstop reference && backstop test\nThat would verify the install.  \nPlease let me know.  Thanks! \n. @patdavid you may be one of the first win10 users were hearing from so I appreciate the report. :)\n@onigoetz could you take a quick look at this?  Any thoughts?\n. Ok.  From your console output, I am pretty sure it's this...\ngenConfig | Copying 'C:\\Users\\patdavid\\AppData\\Roaming\\npm\\node_modules\\backstopjs/capture/casper_scripts' to 'C:\\Users\\patdavid\\backstop-test/backstop_data/casper_scripts\nI don't think Windows likes its path separators going all over the place...\n@patdavid I will try to patch this tomorrow and hopefully you can give it a go on your end.\nThanks.\n. @onigoetz yes, you are totally right about return string.  I updated that.  I will also update makeConfig.js to use path.join() on all paths.   \nI haven't looked at findExecutable.js yet -- I'll work on makeConfig.js first.\nThank you!\n. @patdavid I'll let you know when the fixes are in.  For now -- as a workaround, the app is very solid on *nix boxes if that's an option for you.    Thanks again.\n. Ok.  I pushed a patch which resolves the path issues.  I have also been able to reproduce this error on Win10... \nCasperJS:  Fatal: The specified executable is not a valid application for this OS platform.; did you install phantomjs?\nI'm concerned the phantom install version may be macOS only.  Will look at that as soon as I can.  \nWould totally appreciate comments/ideas if anyone else has insight on the correct phantom install for universal behaivior. \n. @patdavid Thanks for your patience!  I was able to repo the problem and I have pushed a fix.  \nPlease update your install with...\nnpm install backstopjs@beta -g\nThen create a directory, cd into it and run...\nbackstop genConfig && backstop reference && backstop test\nThat is the 3 minute test.   I am pretty confident this will resolve your issue.   Please let me know!\nThanks!\n. Hmm.  I think this is unrelated to the first issue -- but probably also due to the refactor.   Would you mind creating a new ticket?  Please include your config.  Thank you.\n. Thanks for figuring that out!   I'll add a ticket to look at the html_report default value.  Cheers!\n. BackstopJS 2.0 was soft launched yesterday.  It is a complete rewrite and will probably address your issue.   \nThe difference for your existing scripts is that BackstopJS is now a global install and paths are relative to your current working directory.  E.G. you just run backstop <command> from your project directory. And config paths would look like backstop_data/casper_scripts not ../../backstop_data/casper_scripts.  \nFor more info see...  https://github.com/garris/BackstopJS#version-20-is-released\n. Thanks for following up!\n. @godban Thanks for posting.  The hash was added because we anticipate users with many config files may run into name conflicts with matching scenario names from different configs.  Therefore BackstopJS attempts to create a unique ID for each un-named config.   This does present an issue when sharing files.\nTo avoid this conflict you can simply name your scenarios by using the ID property. Please see the docs here... https://github.com/garris/BackstopJS/tree/version_2_0#required-config-properties\nPlease let me know if this solves your issue -- I don't want this new feature to overly complicate the app.\nThanks!\n. Glad it worked out.  Cheers!\n. Just checked this.  Works for me.\n. Just to be sure, are you on 2.0 or 1.x?\n. Can you go into the use-case for these ideas?\n. Thanks for the post.  There is a lot in there and I am not sure I follow all of it.   \nIn any case, I don't see the performance issue as being related to code organization.   I think the answer is more around throttling the number of internal async processes allowed to run at a given time. \n. If the performance and other options are ok you could write a node script to require() all of your configs and just concatenate scenarios...\nyou could create a file called allMyBackstopTests.js ...\n```\nvar myButtonScenarios = require('buttons').scenarios;\nvar myFormScenarios = require('buttons').scenarios;\nvar allScenarios = [].concat(myButtonScenarios, myFormScenarios);\nmodule.exports = {\n  scenarios: allScenarios\n  ... all other backstopjs required props here ... \n};\n```\nYou of course could jazz this up in a lot of ways -- but that's one way to do it.\nIs this kind of what you mean?\n. Oh and thanks for the kind 2.0 words.   It was a huge effort  but I am really happy with it.   \ud83d\ude0a\n. Is this an SPA?    Please include a screenshot of body so we can confirm pages state.\n. I don't think this is related to the script your wrote.   The part you are talking about is called a fragment -- its the part after the # symbol.  \nTo test this, please create a new single config with two scenarios.  Make sure the scenarios are the same ones from your previous example.   Take two full screen captures of your SPA with different fragments and I expect it will behave the same.  This should take 2 mins.   Can you try that and let me know how it goes?   The issue is likely with phantom -- I don't think your app router is getting the hashchange event that it expects. \n. yes.   Just to confirm it is not your fine concat script.\n. PROGRESS!  \ud83c\udfc7\n. ok. So actually, this closes your original issue.   would you mind opening another issue -- we can work on this fagment thing over there.   Please just state the behaivior and I will follow up when I can -- gotta do real work now.    (In the meantime, you can probably fix it with an onReady script -- by adding an initial (throwaway) viewport for all scenarios)\n. That's wonderful!   Yes, this is a really powerful feature that I think a lot of users probably don't know about -- so it would be great to do an article on the topic!  Please let me know if you want any assistance -- I'd be happy to help.  \ud83d\ude0a\n. Merged.   Thank you so much for this!!!   I really appreciate when devs help support great documentation.   Cheers!\n. Sure,  this has come up before.   Couple of questions...\nI guess a property which accepts pixels is sufficient?\nDoes the 'removeSelectors' not suffice in this context?  \nIs there a reason why do don't us stubs or replace content in the element you're concerned about? \nDid you know you could use a BackstopJS onReady script to change content such that you would always test the expected behavior?\n. Just curious, if you get a minute, what is the case where removeSelectors doesn't work?\n. My guess is that phantomjs does not issue the hashchange event your app is looking for.   Does your app rely on that event to do route switching?   Here is someone else with that issue...  https://github.com/Medium/phantomjs/issues/621   It makes sense because by adding a query param you force a window reload and therefore you get the result you expect.   \nYou can test this by doing the same thing, write to the console in your hashchange handler -- see it work in chrome and then see if you can get it to happen in a vanilla phantom script.   you may want to bump https://github.com/Medium/phantomjs/issues/621  -- or look for workarounds on the phantomjs repo etc.\nAlso, have you tried using backstopjs with the slimerjs option?   Is the behavior the same?\n. If this is what you want you'll need to run multiple configs. \nYou can try this with node...\ne.g.  create a script backstop_batch.js at the root of your project...   Then run.   The scrips will be run sequentially and output will be put to the console after each has run.\n```\nvar execSync = require('child_process').execSync;\nvar currentProcessStdout = '';\ncurrentProcessStdout = execSync('backstop test --config=', {encoding: 'utf8'});\nconsole.log('currentProcessStdout >', currentProcessStdout);\ncurrentProcessStdout = execSync('backstop test --config=', {encoding: 'utf8'});\nconsole.log('currentProcessStdout >', currentProcessStdout);\n```\nthen \n$ node ./backstop_batch.js\nThere are lots of examples for doing this and handling errors (which the above example doesn't do).   You should google around for some ideas.   Please let me know if you put together a nice multiple script runner -- I'd be happy to post that to the examples directory.\nHope this helps.\n. Please post a screenshot of your browser report.\n. Please provide terminal log including the command you used to launch the process.\n. Also,  what version of backstop are you on?  Please make sure you are on 2.0.2.\n. Ok. I think you found a real live bug!  I will try to look at this on the train home.  Thank you for reporting.\n. Is everyone on windows?\n. Ok.  Sorry guys.  I am fairly certain this is a win only issue.   My guess is that somewhere in the codebase we may be looking for a (string[0] === '/') to test for relative paths -- or something like that.   Any help on this would be greatly appreciated as I am totally slammed today!  Thanks!  GS\n. Boom!  Found it...\nhttps://github.com/garris/BackstopJS/blob/master/core/command/report.js#L24\n. Patched here...\nhttps://github.com/garris/BackstopJS/commit/e59728ad15e5f79571ffbc7ae777376f5d2fb70f\nI just pushed it to master -- from my iPad -- on the subway.  Can someone verify?\n. Well, I guess it's pretty good for free software!  \ud83d\ude06\n. @Spydr331 @stephenbe @fabioduque Brilliant teamwork!!!   You guys rock -- thank you for the help!    I will push a revision after I get out of my AM meetings.\n. Version 2.0.3 published to NPM.   Closes #300.\n. This is related to what PhantomJS supports.   You could try the slimerjs option -- that sometimes performs a little better with edge case CSS.\n. You could look at the resemble.js library for those parameters.\n. This is in @latest.\n. Thank you -- much appreciated!\n. When you npm install backstopjs It should install everything you need.  \nFrom your description it sounds as though you don't have reference files?   If you simply npm run test, and there are no references found -- it will instead behave as if you run npm run reference  and generate reference files without running a report.   You would need to run npm run test a second time to generate a report.   I am not sure from your description if this is your scenario.\nCan you include the full output of your terminal? \n. You are using version 2 -- which recommends a global install.   Please check the readme for installation notes for upgrading from 1.x  and using backstop test.   Please let me know if that works better for you.\n. ok.  I see this is a pretty big issue.  there is a duplicate bug...\n. duplicate #305 \n. Please share your config file.\n. Need to look into this.\n. \ud83d\udc40\n. Yup.  it's a bug alright.  This happens when any of the comparisons fail.   Looking at this now.\n. hmm.  then maybe it's not related to pass/fail.   I just used the genConfig template.  Does that work for you?\n. It looks like there is an error when opening the report.  Are you on macOS?\n. Yup confirmed.  not related to pass/fail.\n. Ok.  I can't reproduce this issue...\n\n. Ok.  I can reproduce it.\nDoes your config have an empty report prop?  e.g. \n{\n...\n  \"report\": []\n}\nIf that is true then an html report won't be generated!  So even running \n$ backstop openReport\nwon't open anything because nothing was generated!\n. Does it work for you if you change it to \"report\": [\"browser\"]?\n. WOOHOO! \nAnd yes, Version2 is a proper CLI now -- it's always on so you don't need that bit.\n. @angelariggs So glad we got that before the weekend! \ud83d\ude04   Thank you for helping me troubleshoot  -- much appreciated!\n. @Primajin does this solve your issue also?\n. I will take a look at that logic -- it should have been backward compatible...   and perhaps we should always generate the HTML report and just use the \"browser\" flag to auto-open the browser (because that can be annoying when you don't want it.)\n. @Primajin thanks for looking at this -- I think what you find will probably help other users who are migrating!\nAlso, FWIW:  please note the documentation for migrating to 2.x -- I.e. different way to call backstop <command> and different path references.\nAwesome.\n. I am thinking it's better to just generate the HTML report regardless.  Yes it's more work -- but it is a very very small amount of work.  Then use the \"browser\" value to run the openBrowser segment.  This way I think it will behave in an intuitive way for most users. \n. If you can figure out why your v2 is failing that would be great as I will not have any time this week.  When troubleshooting pay special attention to your config paths node (paths should not use the old ../../ pattern) and make sure you are running from your project root -- not the /node_modules/backstopjs directory.   \nThank you!\n. @Primajin so is it safe to say that the openReport issue is resolved for you by updating the config to include \"browser\"?  I think we might create a separate ticket for your other issue.\n. @Primajin thanks!   I made a change to implement always generating html reports -- with only opening on report: [\"browser\"] value.   Will push that soon.\n. @Primajin -- I pushed the html report enhancement yesterday to master \nnpm install -g garris/backstopjs#master\nyou should now be able to openReport regardless of the report config setting.   Feel free to check it.   Thanks.\n. I just tested this.  Working as expected.  Closing.\n. Sorry about that.   We were trying to make as few changes as possible while migrating to 2.0.   Will put this in the backlog.   Thanks.\n. Thank you!\n. If you are using BackstopJS 2.x that should be deleted.   Was only applicable for 1.x.   The new reports just open from your file system.\n. Please provide some code samples including backstopjs config.\n. And a terminal log.\n. @grayloon  Hi,  thanks for posting.  I have gotten a lot of requests for this -- it's a good question.\nThe raw value comes from here:\nhttps://github.com/Huddle/Resemble.js/blob/af57cb2f4edfbe718d24b350b2be1d956b764298/resemble.js#L495\n(mismatchCount / (height*width) * 100)\nHope that helps!\n. @robertloo hi, thanks for posting.  It looks like you have a size = \"isDifferent\" in your result.\nThis will cause a fail regardless of your threshold.\nPlease check the browser report -- you will probably see a very distorted diff image.   the test may be revealing an unintended size change?. Yes,  you're doing everything right.  That feature, requireSameDimentions was just added and in fact, is not yet in @latest.   \nTry installing canary...\nnpm install -g backstopjs@canary\nSorry in advance if canary has any issues.  I didn't have a chance to check on the last push.  \nThat feature was added for exactly this situation.  Please let me know if it addresses your issue.\nThanks!\n. Are you saying you get different results when running backstop test multiple times without making changes?. Try testing smaller regions using selectors. Also,  check for Ajax content and or animations that are still running during your test.  That is usually the issue.. @robertloo I am concerned because it sounds like \"isSameDimensions\": false is still triggering a false negative?   I am not clear if this is true or if installing @canary fixed this issue?  Could you let me know?   Thanks!. Thank you for working on this!. @fmmricardo Thanks for reporting this.   I just tested this with the puppeteer engine and everything is working as designed.   For completeness here are my results...\nWith a threshold of 1 -- a scenario result of 2.55 fails as expected...\n\nWith a threshold of 5 -- a scenario result of 2.55 passes as expected...\n\nAnd finally, with a threshold of 5 AND 'requireSameDimentions' flag = ture -- a scenario result of 2.55 fails as expected...\n\nSo, this appears to be working.   I will close this issue -- but if you are running into some other edge case please post back and we can reopen the ticket and investigate.\nThanks!\n. One thing you can try as a sanity check is to do a separate install of Casper.js and slimer.js to make sure the will work together in your environment.   If you can get that to work then we can rule out any dependency issue.\n. Thanks. Please post your terminal output.\n. Thanks -- sorry, I forgot to also ask you to post the config file.\n. Ok.  Everything looks fine with your paperwork.  Does it work if you just use phantomjs?\n. Yes.  Phantom doesn't always do what it should do.   I'll need to test it locally -- but I won't be able to get to it for a bit.   The next thing I'd do is release a patch with casper verbose/debug mode enabled.   If you can manage that on your own it would be a big help.  We need to see if slimer.js is complaining about anything. \n. There was a bug where the config.debug parameter was not getting written-- I believe it's fixed in trunk -- you can try installing this version...\n$ npm install -g garris/backstopjs#master\n. config.debug option is fixed in latest release.  Please install npm install backstopjs -g and post console output -- there should be more information to look at.  Thanks.\n. oh sorry guys.  \ud83d\ude14   I don't have a windows box and sadly can't put any effort here.  Someone in the community will need to take this cause up.   \ud83d\udce2 Help wanted!\nAs a consolation, I can tell you that I am in the process of integrating chrome-headless into backstop using chromy.js as the driver.  It is already in beta (still buggy -- but mostly working).  Feel free to try this out -- It's waaaay better than having to deal with phantom or slimer since all modern JS & CSS are handled.  Also, performance is way better (screenshots are taken in parallel).\nhttps://github.com/garris/BackstopJS/tree/backstop-chromy\nnpm install -g backstopjs@beta. I think maybe you should see which element is causing your issue.   Other things to consider: Are you sharing with different machines?  Are there any animations?   Is your CSS math producing half pixel values?   Is content changing from test to test?\nThere are plans to incorporate a control for this:  but you want to be sure this error isn't exposing a performance issue.  This behavior usually means there is some unknown thing moving your CSS around.\n. Currently -- if isSameDimentions === false then tests will fail.\n. Considering the existing config options, how would you specify the ranges?  What seems intuitive?\n. That is why there hasn't been anything implemented yet.  Please post here if you come up with something good.   \ud83d\udc4d \n. I agree with this.  Do we just want to add a binary switch to disable testing for size.\n. \ud83d\udc4d \n. I changed this just a little bit since a test could have one or both failing at the same.   Thanks for the PR!\n. In the browser report you can see the mismatch percentage and the image diff.  Please take a screenshot of the report and post here.\n. Anti-aliasing variance between different OSs are very very common.   \nOne thing you could try (I have not tested it) -- on your test machine, make sure you have the latest version...\nIn your global install find this block:\n  https://github.com/garris/BackstopJS/blob/master/core/util/compare.js#L37-L40\nand change that block to this...\nresemble(referencePath)\n      .compareTo(testPath)\n      .ignoreAntialiasing()\n      .onComplete(function (data) {\n        resolve(data);\n      });\nThis may reduce the antialiasing noise picked up by resemble.js.\nPlease let me know if it works for you!  And please send another screenshot if possible -- I have been curious about this config option.\nThanks!\n. Hmm,  Very interesting.  Thank you for trying that!   \nSo, another user recently mentioned they were able to get around some cross platform rendering issues by using slimer instead of phantom.  Have you tried that?\n. If your config looks something like:   \n{\nscenarios: [\n    label: \"landing-page\", \n    ...\n  ],\n... \n}\nthen you would want to invoke that like this  backstop reference --filter=landing-page\n. A for effort!\n. \ud83d\udc25  Hey great!   Thanks for the feedback -- so glad it's useful for you!\nCheers.\n. @timperry PR's welcome.  Cheers.\n. @natalan -- Thank you for your PR!   I am super sorry about that!   I think that file got a massive rewrite just before your contribution -- so I think it was just an unfortunate oversight.  \nMerging in now! \n. OK.  I just went ahead and pushed the patch to NPM. Could you please just install the latest version and confirm that it's working as expected?   Thanks!\n. @natalan ^^^\n. Boom.   Thanks! \n. Version 2 doesn't use a server.   I recommend upgrading so you could just serve from your file system or with an express solution.\n. Great idea -- and probably an easy rb!   I'd gladly pull that in.\n. Does this still happen if you just cd into a test directory and run backstop genConfig  then run the reference and test commands?\n. Yes.  You are totally right.   For a while I was considering changing the command name to bless because it's shorter and more poetic.   What do you think?\n. Alright then.  Let's fix it.\n. Thank you!\n. Have you tried calling Casper.off() prior to calling on?  To ensure no mem leaks?\n. @ioneyed does onBefore work for your use case if you only use one onBefore per config and set up multiple configs for each user permission?. Thank you @svwu.  Apologies for the delay.   Will try to push this to NPN today.  Best,  Garris. @svwu this is now at npm install -g backstopjs@beta  Please verify when you get a chance.  Thanks for your patience.  Garris. @mirzazeyrek If you get a chance, I am curious how you solved the issue.  It may be something we could add to the documentation to help other users.\n. Wow -- yes, very very nice!   Thanks for sharing -- I will add this to the documentation.  \ud83d\udc4d\n. @rasenplanscher FWIW:  There are two options for handling new changes.\n1) if you run backstop test [--filter=<someScenarioLabel>] for an existing scenario and you want to keep those changes you can immediately run backstop approve.  This will promote all your previously-failed screenshot(s) to be the new reference.  \n2) if you have not already created a reference for a new scenario you can run backstop reference --filter=<someScenarioLabel>.  This will create a reference for that scenario only.\nUsing these two approaches you can help you update your references incrementally without concern for other unchecked scenario issues. . @rasenplanscher Oh right, I see what you are saying.   It was the || (double pipe) that I thought was cool there.   I think he was just looking for a way to not break CI just because Backstop found an error -- which seems like a reasonable option (e.g. a quick way for a report-only integration).   \nFWIW:  I don't know exactly how running reference and then test would be useful IRL -- but @mirzazeyrek has done some really great work for BackstopJS so I just kind of assumed it was a quick example. . oof.  hmm.  \ud83d\ude15\nThere is no business logic (that I know of) which would cause that.\nThere are other reports of issues with a lot of tests running in general however.   e.g. #281 \nDo you have a publicly available version of your app that I could run your tests against?   I would like to take a look at it.\nA work around would probably be to break up your tests into multiple configs and batch them on the command line...\n$ backstop test --path=./myAdminFeatures && backstop test --path=./mySearchFeatures && backstop test --path=./myFeedFeatures\n. It could be a memory problem -- your colleague might have more of it.   It would be interesting to see if any of the suggestions in #281 fix the issue.\n. @PhilippeVay whoops!  you are right!   What I meant was sperating commands by semicolon (not ampersands)\n$ backstop test --path=./myAdminFeatures ; backstop test --path=./mySearchFeatures ; backstop test --path=./myFeedFeatures\n. @stephenbe sorry for the delay with your response.   I have some time booked on he 4th specifically to work on this one.  Thanks for your patience!\n. @stephenbe got it \u2705\n. Ok.  I was able to run the app.  After bitmaps were generated the comparison process ran and grew steadily to 5+Gig.  Still investigating.\n. @stephenbe I just wanted to follow up.   I attempted to throttle concurrent comparisons but the memory leak persisted.  I committed this code here https://github.com/garris/BackstopJS/commit/adc2ae2373bdeb99fea6bb0f678da8c044127330 even though this approach did not immediately solve the issue.  What I believe is that each resemble object is generating and caching a comparison image -- holding that in RAM while all comparisons are running.   I think the next thing to try is to refactor this flow such that references to each resemble object are completely cleaned up once a write to fs is complete.   I am hoping that would make backstop MUCH more RAM efficient.  The good news is that once map is complete all instances are cleaned up and memory is completely returned.   So I am confident that this issue is addressable.  Will just take a little effort to get the sequencing right.\nWould appreciate any help here from anyone who is interested.   Otherwise I will try to get to this in January.\n. @stephenbe looks like @paradizex posted a fix!   \nI am about to travel for a week and won't have time to review -- would help if you have some time to apply the patch and test.   If not -- I will review when I get back.\nCheers!. @stephenbe Thanks for your patience -- this is fixed!\nThank you very much for sharing your massive test project -- It was very helpful in ensuring that this issue is in-fact settled.\nIt's currently in beta -- please give this a try and let me know if this fixes your memory issue.\nnpm install -g backstopjs@beta\nMore info... https://github.com/garris/BackstopJS/releases/tag/v2.3.4. Cheers! \ud83d\ude00. @onigoetz thanks for checking in!  I pushed version 2 to master and then NPM@latest weeks ago.   Since then I've had to work out a few critical windows issues, try to catch up on PRs (which I am still very behind on) and also help some users who were a little confused by the upgrade.  All and all tho, the response has been great!   I am really grateful to see the upgrade.\nYou are right however-- I haven't gotten to updating GH release notes.  I will do that this week.   \nThere is also a performance bug I am concerned about -- #281.   A few people have hit this issue.   I made some suggestions in the issue but haven't had a chance to investigate further.  \nI also wanted to update the brochure with screens from my presentation at LinkedIn-- which went very well.\nHope that answers your questions-- let me know if you'd like more detail or have any specific requests.   \nNote:  wife is out of town so I have kids and work to manage alone -- may be a little slow to respond.  \nCheers!\n. @onigoetz Tags are updated!\n. Omg \u2014 panting \u2014 out of breath \u2014 so busy...   you guys know I this for free right?   halp!    \ud83e\udd2a\ud83d\udc9c\u2728. FWIW \u2014 I usually do a LinkedIn article when we do something cool...\nEg.\nhttps://www.linkedin.com/pulse/backstopjs-version-30-chrome-headless-support-has-landed-shipon\nhttps://www.linkedin.com/pulse/backstopjs-version-31-new-ui-usability-features-docker-garris-shipon\nhttps://www.linkedin.com/pulse/backstopjs-v32-has-arrived-puppeteer-support-garris-shipon\nThese are also tweeted out etc.\n. Thank you for contributing!   A lot of developers have requested this -- I know it will be a popular feature \ud83d\udc4d.    Please take a look at the comments and follow up.  Cheers!\n. @jtuds thanks!\n@cheapaschips just curious, are you able to just remove the elements that are causing the issue?  Or use content stubs so that you will know the correct height in advance?\n. @jtuds thank you very much for your patience on this one!!!   It's on canary.  I hand merged this with a performance upgrade.  Hopefully I didn't screw anything up.  \nnpm install backstopjs@canary -g\nPlease let me know if everything is working ok.\nThanks again for all your help!. One way to think of it is that you actually do want to test that element.  You want to ensure that it's not there when it's supposed to not be there.     But if you are absolutely sure you don't want to test it when it's not supposed to be there, then, you should create a multiple config files with the exact viewport scenarios you want.\n. Classy cli usage response.  \ud83d\udc4d\n. \ud83d\udc4b\ud83c\udffc Hi @klausbayrhammer -- Great to hear from you!   I have booked some time this Friday to look at PR's   -- will review then.   Hope all is going well for you.  I'll be in touch soon!\n. @obecker   It's available via...\nnpm install backstopjs@alpha\n. Just bumped.  thanks!\n. ~~@maban Thanks for posting.  I just tested v2.1.3 -- it worked with this test config...~~\n~~https://gist.github.com/garris/4bcb529433f16aa89681ecb559929b66~~\nI just reread your post.  Sorry about that!   Yes, the feature is not yet published -- so the documentation is out of sync.   We should update that!\n. ^^^ yes.\n. @nobso  It works with this config... https://gist.github.com/garris/4bcb529433f16aa89681ecb559929b66\n. @maban the version you're using should be working.   Yes, please do test it with the config above.  The config above should expand all three \".firstPanel .col-sm-4\" selectors.   If that DOES work for you there may be a bug we should look at or there may be a bug in your test file.  Please let me know how it goes.\nTo be sure:  \"selctorExpansion\": true  is the correct syntax.  (it was shortened after the PR was created.)\nThanks!\n. Wow -- great find!!! I will patch this as soon as I can -- hopefully today!   Thanks for doing that detective work!\n. Please let me know if you find any other issues -- I'd like to push this feature soon!\n. Really glad it's working out for you!   \nI'd like to try to understand your use case a little bit to see if it's  something that could be addressed in the scope of this feature.   I'm not sure I grasp fully what it is from your brief description tho -- so please feel free to expand on that.   And if not, that's ok too.   I very much appreciate your feedback to this point!  \ud83d\udca1\n. I see.  So, if you add a new component -- you don't want to test the new component per se, just if the new component's css is having unintended side effects?  Yes?\nSo then I assume there is a development period where your test and reference cache are out of sync.   During that period you'd want to run one or more BackstopJS tests but ignore that one component.   Depending on how long that period is you could do this...\n\"scenarios\": [\n  {\n    \"label\": \"Base styles\",\n    \"url\": \"https://snyk.io/styleguide/\",\n    \"referenceUrl\": \"http://localhost:8000/styleguide/\",\n    \"selctorExpansion\": true,\n    \"selectors\": [\n      \".kss-modifier__example\"\n    ],\n    \"removeSelectors\": [\n      \"#myNewComponentUniqueId\"\n    ]\n  },\n  \u2026\n]\nDoes that make sense for your usecase?  You could probably automate the value inserted into removeSelectors somewhat too.\n. Nice!   Thanks for beta-using -- really helps to get that insight.   Cheers.\nClosing ticket -- feel free to reopen if needed.\n. What are the os differences?\n. Those elements are being generated by the OS.  So in a sense -- the test is working!   That bit will always display differently based on the OS.  One thing you could try is to style those elements with specific sizes and colors etc.  That will make it display more uniformly.   Otherwise you can use remove or hide selectors to duck the test.    Please let me know how you resolve the issue!\n. If you are getting a missing fs method I am guessing its the node version -- could you maybe try a different version?\n. These are the versions we test for...\n- \"0.12\"\n- \"4\"\n- \"5\"\n- \"6\"\n. I'm on my phone -- but if I was at a laptop I'd google for fs.absolute() and see what I could find.\n. It's your node install &/or your MBP permissions...\nhttps://github.com/npm/npm/issues/13918\n. This is great!   I love being able to require into a gulp task or other process! \ud83c\udf08\n. If I am understanding your question -- yes, if two people run backstop reference the ACTUAL FILES will have different metadata even if the image data itself is the same.\nThere is an incremental feature which may help you.   It allows you to update a single scenario in case someone adds or updates a single component.   That way you don't have to update ALL references if only one component changes.\nsee here... https://github.com/garris/BackstopJS#incremental-scenario-referencetesting-filtering\nPlease let me know if that solves your issue.\n. Yes, you are correct on the first.  Currently we only can only select by scenario.    Currently @ahoopen has developed a way to promote test images on a per-image basis here... https://github.com/ahoopen/BackstopJS/tree/feature/approve-test-as-new-reference\nI have not yet had a chance to merge and test the changes.    That is the very next feature I will be trying to review -- but I still have no timetable on when it will be finished.\n. @michalkvasnicak  I see your point there.   I totally agree there should be a straightforward way to deal with this.   \nOne way might just be to update package.json for the phantom dependency?\nIdeally I'd ideally like to see the config engine property optionally take a path instead of just a keyword.  I'd be happy to pull that PR in.   \nAlternatively, I would also pull a request that cases for an existing env value as you suggested.\n. I think this is what you need...\nSee: workflow tips on the readme\n\nUse the report property in backstop.json enable or disable browser (opening)\n. @gael-boyenval   ^^^\n. @jedybeavis thank you for posting -- looks like you found a bug!   Seems the missing selectors prop is causing an issue.   As a workaround, you can add back the selectors property inside scenarios.   e.g. selectors: [\"body\"].    Will fix soon.\n\nAlso,  It looks like that web page is sometimes crashing PhantomJS.  That is a separate issue -- maybe clean up some of the errors the page is throwing and see if that helps.\n\n. This is fixed in backstopjs@2.3.2.\nnpm install backstopjs@2.3.2\n. The error is coming from the pngjs package.   Looks like it cant write to the destination.\nStupid question -- You don't literally use * in your filenames right?  You're just redacting manually for demo purposes -- correct? \nDoes this fix itself if you blow away the backstopjs directory and start over?\n. Please include your full terminal log.\n. Can you try running the sanity check?\nhttps://github.com/garris/BackstopJS#sanity-test-does-backstop-work-in-my-enviornment. This sounds awesome!  I am traveling in Asia until next week.   Can't wait to test it.\nAlso +1 on the config.concurrency parameter!   . @paradizex Thanks for this fix!!!\nI also implemented a config parameter asyncCompareLimit to adjust concurrent comparisons.\nhttps://github.com/garris/BackstopJS/releases/tag/v2.3.4\nHere is peak memory usage for various values of asyncCompareLimit:\n1  126mb\n 10  165mb\n100  507mb\nThis will make users very happy -- Cheers!  \ud83c\udfc6\n. thanks @mirzazeyrek !. Hi all.  There are no plans currently for integrating electron or headless chrome.   These are both very cool implantations/projects which I respect a lot -- unfortunately their APIs are not compatible with Casper.js and hence BackstopJS.    \nFWIW: With the apps I work on the flex prefixes are not a big deal, we include them as part of our build and the cost is negligible -- whereas being able to automatically check our entire app for visual regressions is a very big benefit -- so it is a pretty easy calculation for us.\nGood luck with your project.   Please let me know what you guys end up doing -- even if you decide to move to another solution --  it would be valuable feedback to me.   Cheers!\n. Just an update here.  Chrome headless support has been added.  Now all your designs should render without any extra effort for tests.\nPlease reopen if you still have any issue using chrome headless.  \nEnjoy.  . Not really sure what's going on there.  You might just want to save a copy of your references then run backstop init which will blow away all of your existing data.  Then add back the references and try backstop test.   Also, maybe just try running pkill -f \"(chrome)?(--headless)\" to make sure you don't have any zombie chrome processes running.   If that doesn't work you'll need to post your config.   \nIn general backstop is great for keeping things under control when refactoring CSS. . UPDATE:  So, yesterday I saw this problem for the first time in v3.0.38.   \nIt happened when running backstop_features.js -- backstop would hang when the test was completed and the HTML report was not created.   I was able to reproduce this multiple times.\nAt first I thought this may have been caused by recent changes so I rolled back to 3.0.37.  When I ran the test again, everything passed.   So to confirm, I attempted to try the test again by rolling forward to 3.0.38.  After doing so, the test passed again.  \ud83d\ude1c\nHere is a log of the session...\nhttps://gist.github.com/garris/8ade3fe3e6b2eef5e3ab5d8f59d6051c\nand below is what NPM logged.  It looks like in this case that chrome may have crashed here?\n13 verbose stack     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js:55:14)\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/local/bin/node',\n1 verbose cli   '/usr/local/bin/npm',\n1 verbose cli   '--always-auth',\n1 verbose cli   'false',\n1 verbose cli   '--registry',\n1 verbose cli   'http://registry.npmjs.org',\n1 verbose cli   'run',\n1 verbose cli   'smoke-test' ]\n2 info using npm@5.6.0\n3 info using node@v8.9.4\n4 verbose run-script [ 'presmoke-test', 'smoke-test', 'postsmoke-test' ]\n5 info lifecycle backstopjs@3.0.38~presmoke-test: backstopjs@3.0.38\n6 info lifecycle backstopjs@3.0.38~smoke-test: backstopjs@3.0.38\n7 verbose lifecycle backstopjs@3.0.38~smoke-test: unsafe-perm in lifecycle true\n8 verbose lifecycle backstopjs@3.0.38~smoke-test: PATH: /usr/local/lib/node_modules/npm/node_modules/npm-lifecycle/node-gyp-bin:/Users/gshipon/Development/BackstopJS/node_modules/.bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/Users/gshipon/.nvm/versions/node/v8.1.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/linkedin/bin:/usr/local/share/dotnet:/export/content/linkedin/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/usr/local/bin/\n9 verbose lifecycle backstopjs@3.0.38~smoke-test: CWD: /Users/gshipon/Development/BackstopJS\n10 silly lifecycle backstopjs@3.0.38~smoke-test: Args: [ '-c',\n10 silly lifecycle   'cd test/configs/; node ../../cli/index.js test --config=backstop_features' ]\n11 silly lifecycle backstopjs@3.0.38~smoke-test: Returned: code: 1  signal: null\n12 info lifecycle backstopjs@3.0.38~smoke-test: Failed to exec smoke-test script\n13 verbose stack Error: backstopjs@3.0.38 smoke-test: `cd test/configs/; node ../../cli/index.js test --config=backstop_features`\n13 verbose stack Exit status 1\n13 verbose stack     at EventEmitter.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-lifecycle/index.js:285:16)\n13 verbose stack     at emitTwo (events.js:126:13)\n13 verbose stack     at EventEmitter.emit (events.js:214:7)\n13 verbose stack     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js:55:14)\n13 verbose stack     at emitTwo (events.js:126:13)\n13 verbose stack     at ChildProcess.emit (events.js:214:7)\n13 verbose stack     at maybeClose (internal/child_process.js:925:16)\n13 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)\n14 verbose pkgid backstopjs@3.0.38\n15 verbose cwd /Users/gshipon/Development/BackstopJS\n16 verbose Darwin 16.7.0\n17 verbose argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"--always-auth\" \"false\" \"--registry\" \"http://registry.npmjs.org\" \"run\" \"smoke-test\"\n18 verbose node v8.9.4\n19 verbose npm  v5.6.0\n20 error code ELIFECYCLE\n21 error errno 1\n22 error backstopjs@3.0.38 smoke-test: `cd test/configs/; node ../../cli/index.js test --config=backstop_features`\n22 error Exit status 1\n23 error Failed at the backstopjs@3.0.38 smoke-test script.\n23 error This is probably not a problem with npm. There is likely additional logging output above.\n24 verbose exit [ 1, true ]\n. No.  That would be ridiculous.   I was just documenting what happened.  The root cause is still unknown.. At this point I am recommending that everyone migrate to the latest release with the puppeteer engine.   Puppeteer is much more stable for heavier workloads.   At work we have very very thick clients and prior were running small config batches -- which actually worked fine in most cases.   But the puppeteer engine runs way faster and is much better about error handling.\nPlease give it a try.\n. Here is a sanity test you can run to test if the docker implementation is working in your environment...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#sanity-test-does-backstop-work-in-my-environment\nDoes this work?. +1. @n1313 Yup, I totally get it.  That feature is not in BackstopJS yet -- but it probably should be.  It would be straightforward for you to implement.\nThe main switch would be here...\nhttps://github.com/garris/BackstopJS/blob/master/core/command/report.js#L105\nYou'd change the above line to something like this...\nif (failed || (report.failed() + report.passed() != config.expect)) {\nAnd also insert passing of the expect parameter to the config here...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/extendConfig.js#L12\nconfig.expect = userConfig.scenarios.reduce(function(acc, val) {\n  return acc + val.expect\n}, 0);\nscenario[n].expect would be an integer representing how many tests are required to run.  Then your test would fail if your total count of passed & failed tests was not equal to your expect value in your test scenarios.   \nYou'd have to guard against undefined expect values.  And you'd want to document the feature. And write a test for it.   \nWe may want to consider reporting results grouped by scenario at some point -- but I think this would get things moving in the right direction with minimal effort.\nSo, there you go.  If you post a PR I'd gladly pull it in.  \nCheers!. @n1313 Thank you so much for the PR.  I will be hosting visitors till the end of the year and I may not be able to give this a proper review till next month.   Many apologies.  Will review as soon as I can.  Best regards.. @sbeator yes, ok to pick this up.  However the app architecture has changed significantly since the last PR.  The heavy lifting would need to be addressed somewhere in core/command or core/utils.. @mrjamesriley Thanks for posting this in detail!  I know this is a non-trivial issue for a few developers who have also posted similar questions here from time to time.   \nSo, you've probably tried the following already but -- just a few suggestions incase you haven't...\nHave you tried disabling anti-aliasing during testing?   e.g. \n// file backstop_data/casper_scripts/myBeforeScript.js\nmodule.exports = function(casper, scenario, vp) {\n  document.getElementsByTagName('body')[0].style['-webkit-font-smoothing'] = 'none';\n}\nDoes that normalize the font such that your differentials are eliminated? (I haven't tried it myself so I really don't know)   If it works though, I would think you could have confidence that your app behaves the same across environments.  Which I think is what I think you're after.\nAnother approach would be to take multiple screen shots so vertical noize doesn't pile up.  IOW instead of snapping the whole document you could capture say .row1, .row2, '.row3'.  You would still have to fudge the mismatch number -- but only by a little bit since error noise wouldn't accumulate as page depth increases.   \nPlease post back here when you decide which way to go!   Thanks!\n. Hi @richhiggins.  This is actually a big problem for us now as well.  We have multiple deployment environments and are wanting a way to test our deploys from one stage to the next.  The problem is obviously, different environments have different rendering characteristics.   \nFor instance, a retina laptop will actually render differently when attached to standard resolution monitors.  And then moving to different platforms/configurations complictes things more.\nI really don't want to have to resort to a VM either.  \nSo, still working on a real fix.   There is now a chrome-headless branch of backstop -- which is awesome (but still not ready for GM) -- I am hoping to find a way to address the issue there.\nWill keep you posted.\n. @mirzazeyrek thanks for keeping an eye on this!   In my case it's really just a convenience issue.   We wanted any developer to be able to run locally.   And also it would be great to avoid having to put in the effort to create/distribute/maintain a VM or backstop server.   That said -- we will totally go that route if we can't get a reliable solution.. @jtuds  yes -- your solution is very close to what we are more or less doing in some cases.\nI'm also hoping we can find a magic switch in chrome! \ud83d\ude09. I have no idea at the moment.  I will attempt to reach out to someone on the chrome tools team to see if I can get some guidance.   \nI have also seen related issues posted to Gemini and Casper boards.   I know we are not he only ones with this issue.. No objections here.   I won't be available to review till at least January -- that would the only issue potentially on your end.   But sounds like something others would like also.   Cheers.. +1 ^^^. This is by design.  BackstopJS runs comparisons in parallel and displays the results in the order they are finished.   Are you referring to the browser report or cli report?  It would be straightforward to add sorting back.. +1.  Totally agree.  Filtering also.. This looks great!  I think this would enable multiple instances to run in parallel -- yes?. @klausbayrhammer, @jtuds, @svwu,\nPlease take a look if anyone has a few minutes.   \nCheers.\nGarris. I think the use case for running the same config twice is when using the --filter argument.\n```\nbackstop test --filter=^loginFlow$ //runs for 5 mins\n// 2 mins later\nbackstop test --filter=^userWidgets\n```\nUsing timestamp is just a little fragile.  Best case is to maybe to check for an existing hash and increment an index.\n. @mirzazeyrek  could you add mocha tests for this feature to the tests directory?  Please include any other tests which demonstrate the behavior.  Looks like we still need to track down why some cases fail.  Looking forward to it -- this is a cool feature!. Thank you very much guys for working on this cool feature.\n@mirzazeyrek after we get a good review, we'll put it on a new canary branch and you can start using that in your organization.   I'll notify others at LinkedIn to update as well.  After a bit we'll promote it to master.\n. @mirzazeyrek I know you've been very patient while waiting for a full review.    I just created a beta branch -- please feel free to go ahead and create a PR to that branch.  I will pull that in and push it out to NPM @beta and we can start asking others to test.. The xunit file names looks good.  Please add that also.    \nI am confused a little by the JPEG support PR.  The logic for parsing the extension with a default is a little clunky.   But mainly Indont know why the two formats require two different write methods.\nPlease let me know about that  thanks.. I believe you need a global install of slimerjs.  . Yup, totally understand.  I'm pretty sure it's possible, you'd probably need to do a little research on how to specify the path of the slimer executable.  Try looking at slimerjs documentation-- you may be able to specify it using the casperFlags property in BackstopJS.. No plans ATM.  If CasperJS decides to implement this then BackstopJS will inherit the feature.. Closing. Both Chromy and puppeteer chrome headless options are available.. Did you run backstop genConfig  inside your project's working directory?\nhttps://github.com/garris/BackstopJS#generating-your-configuration-file. BackstopJS generates a bitmaps_test directory after running backstop test -- so please try that.\n\ninstall goes correctly but when I run backstop reference I cannot find a bitmaps_test folder or the images anywhere. The dubug looks clean... Why can't I find the correct folder for the bitmaps?\n\n. Please rebase.. Pushed to NPM!. @svwu I just wanted to make sure you were able to validate your change in NPM?  Thanks.. Great!  Yes, I skipped @beta because in this case I was vert certain that it worked.  Cheers!. \ud83c\udf08. \ud83c\udf89. Thanks guys!  Much appreciated!. @svwu This is perfectly fine by me as I think slack is very good.  That said, I think we should try to keep most comments in github so other users can see important dialogue without needing another client.. Thanks man!. @svwu I tried to get on the slack channel but got an uninvited error.  Is there an option to just allow all registered slack users?\n. @stevecfischer I think this would be a good conversation for the slack channel -- but I think we are still working on getting that working.   In the meantime -- any PRs by anyone from this thread should get priority.   Other than that, I think this feature should be next... https://github.com/garris/BackstopJS/pull/377\nIt is also up to you -- if there is a PR you prefer to see promoted you can work on that.   Just one thing to keep in mind.  Not all PRs are intended for promotion.  I will go through and tag the ones that are preferred.   Hope this helps.. @jtuds done!. If anyone wants a slack invite you can post here or email me garris@me.com . @stevecfischer done!. You are understanding the intended functionality correctly.  However, I have seen behavior like this before.  As far as I know, tests are async but it is possible that multiple instances of Phantom or Casper share the same session (which would be consistent with multiple browser windows sharing the same session).\nA lot of assumptions here.  This is definitely worth understanding better.. This is GREAT!  Will review this week.. +1 on the config.js example.. @skip405 It would be very very cool if you could add a super simple project in the examples directory.  E.g. backstopjs/node_integration/ and you could have an index that maybe prints hello world after checking google.com or something.   I think something like that would really help other developers.   Would be great to see if it's not too big of an ask.   \nEither way -- thanks for the contribution and please do a pull request to the beta branch and I will get that pushed to npm@beta asap.\nThanks!. @stevecfischer \nWhat I'd prefer is to just add an example e.g. backstopjs/examples/js_based_config and just show a simple example.  It could even just import a backstop.json file and mutate one of the props. We can point to the example in the readme.\nAnd in any case, I totally agree with you on the second bit.  Sometimes I just want to generate the scaffolding but not clobber the existing config.   I was thinking it would be nice for backstop to simply check for a backstop.json and prompt to overwrite (with the default being no).   I would pull that in right away.\n. @skip405 Please disregard my comment to @stevecfischer.   It probably belongs in it's own thread.   \n@stevecfischer  I like this line of thought but you should probably open a new thread if you want to pursue this very good suggestion.   thanks!. Thank you very much for the kind words!   It would be great to see a logLevel parameter added to the config.  Values could be none, default, debug.   The existing debug config prop could be deprecated.   \nThose are my thoughts.   Would love to see a PR if you're so inclined.  We are a little backed up with reviews at the moment -- but we will get to it.  (FYI: we're also looking for testers/reviewers to try and get some of these out the door quicker if you're interested \ud83d\ude42)\nCheers.\n. NICE!   Pushed to NPM @beta.. Will push this to npm today.. Hi @Mikuu.  I think I understand your question.   I think you should be able to do this -- but it is a little advanced.   There are three ways to approach it.  I will first explain what I recommend -- it is easier to implement and has way better performance but it may not work for your security config.   Then I will explain the other slower way.  There is a third option which I'll explain last...\napproach 1\nIn most cases page B & C actually can be accessed directly -- but there is a cookie requirement that is fulfilled on a subsequent page.   The absolute BEST to go here is to manually (in a real browser) log in on page A, then, go to page B.  Once at page B (use a chrome extension to) export your cookies to a cookie file in your backstop folder.   Then use an onBefore script to load the required cookie file before backstopjs actually requests your page.  The script would look like this...\n```\nvar fs = require('fs'),\n    cookiePath = \"backstop_data/cookies.json\";\nmodule.exports = function(casper, scenario, vp) {\n  if (fs.exists(cookiePath)) {\n    casper.page.cookies = JSON.parse(fs.read(cookiePath));\n    console.log('Cookie state restored.');\n  }\ncasper.echo('setting user agent', 'INFO');\n  casper.userAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36');\ncasper.page.settings.webSecurityEnabled = false;\n  casper.page.settings.localToRemoteUrlAccessEnabled = true;\n};\n```\nYou can repeat for page C.  If this is something you are not familiar with I encourage you to discuss this with a backend developer who understands your system's auth process -- they may even be able to give you a cookie which will always be valid for your testing/dev environment.\napproach 2\nThis is very straight forward but less performant and likely to break occasionally.  The approach here is to just simulate what a user would do.   When testing page B your scenario would define a URL for page A, but then use an onReady script to perform the interactions required to view page B.\nIt might look something like this.\n```\nvar  cookiePath = \"backstop_data/cookies.json\";\nvar auth = {\n       user: \"xyz\",\n       pass: \"xyz\"\n     };\nmodule.exports = function(casper, scenario, vp) {\n  casper.echo('Setting up test...', 'INFO');\n// LOG IN\n  // ===================\n  function doLogin() {\n    casper.waitForSelector('input[name=\"Email\"]', function() {\n      this.sendKeys('input[name=\"Email\"]', auth.user);\n    });\ncasper.then(function() {\n  casper.mouseEvent('click', 'input#next');\n});\n\ncasper.then(function() {\n  casper.waitForSelector('input#Passwd', function() {\n    this.sendKeys('input#Passwd', auth.pass);\n    this.mouseEvent('click', 'input#signIn'); //This should take you to page B\n  });\n});\n\n}\ndoLogin();\n//this block is optional. see approach 3 below for info on why this is here...\n  casper.then(function() {\n    console.log(\"Saving cookies.\")\n    var cookies = JSON.stringify(casper.page.cookies, null, 2);\n    fs.write(cookiePath, cookies, 'w');\n  });\n```\nThis will take some time to create.  It will run relatively slowly, and troubleshooting will require trial and error.  So, I don't really recommend it -- that said, sometimes this is the best/only way.\nA slightly different approach would be to combine the above examples.\napproach 3\nYou could create a separate backstop config file which uses the approach 2 to occasionally generate and cache your cookie file.  Then in your regular backstop.json file use approach 1 for all of your testing.  Simply run approach 2 if a cookie or URL goes stale.\nHope this helps!   Please let me know how you end up addressing the issue.   I want to write a blog article for this so your feedback will help a lot.\nCheers! . @zorgleh hi,  thanks for the kind words!   BackstopJS will do this for you.   There is a property called selectorExpansion.  Set that to true in your scenario.\nSee   https://github.com/garris/BackstopJS/blob/master/README.md#selectorexpansion\nPlease let me know if that solves your issue.\nCheers.. Also, that is a recent feature so please make sure you have the latest version of BackstopJS.. Ok. That makes total sense -- and it's a really good idea.  And I think that is pretty easy to do.\ncheck out here...\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L189\nThis is where we generate that name...\nvar indexPartial = '__n' + expandedIndex;\n... I think you should be able to do this...\nvar dataBackstopName = element.getAttribute(\"data-backstop-name\"); \nvar indexPartial = dataBackstopName ? dataBackstopName : '__n' + expandedIndex;\nTry it!  Submit a PR if it works -- that would be a cool feature!  Let me know how it goes.\nCheers.. Was just thinking a little more about this.  If I had your problem I might prefer not having to manage a testing-specific property vis-a-vis my production code.  Perhaps there is another more common or potentially useful property which makes sense? Maybe id -- that would also align with a unique identifier.  Or maybe accept both, falling back to id if data-backstop-name is not present.. @skip405 -- I resolved a conflict, merged, and pushed to backstopjs@beta. \nthanks @stevecfischer for the review!\n. I only had time to skim it.  It is a little more complex than I would have shown.  The thinking here is that the added complexity (files etc...) makes it less obvious what feature you are demonstrating -- that said, a more invested user may potentially learn a little more from all that added complexity. \nWith documentation it can be hard to get the right amount of detail -- as feature creators there is often so much we want to show, the subtleties etc... At the same time users who have resorted to looking at the example are often skimming, looking for a specific hint which will get them over the particular learning curve they are in.  So sometimes these two intentions things can be at odds.\nIn any case -- the feature is really smart and it's awesome you took the time to add the example -- so lets just go with it!\nCheers!. @lounikffm @jritterbush Just a thought, I am pretty sure you need to install BackstopJS locally as part of your project to run it like that.  You may want to make sure that BackstopJS is an npm dependency in your  local package.json file in that case.  . Wouldn't that stuff break in older versions of Node?   We currently test these versions...\n  - \"0.12\"\n  - \"4\"\n  - \"5\"\n  - \"6\"\n . @skip405 sure -- no worries.    My only concern is there may potentially be users using older versions of node and I don't want to harsh their mellow.   And now, we interrupt this thread for a pie chart...\n\n. Totally not worth it.. I really don't have a strong opinion here.  I think it's perfectly fine to drop anything below v4.\nMy bigger concern is support for headless chrome or webdriver -- I would like to know what the casperjs guys are planning to do -- but phantomjs, as awesome as it's been, is running out of useful life.  I would be happy to see backstop in node v6 implementation with support for headless chrome or webdriver.  Would totally trade that any day.   So yes -- let's close the ticket.   All devs should feel free to go ahead with es6 style.. OMG Thank you!. Wow -- great!   If you get a minute it would be helpful if you could add a little bit of info to the readme so that others will know about this cool feature.  Maybe just add a heading -- \"Custom-naming for expanded elements\" and just describe the various fallback naming behavior.\nOk.  Awesome!. One more thing -- could you please create a pull request against the beta branch?   Thanks!. I have seen this kind of thing with elements that are invisible.. do npm view backstopjs to find published versions...\n```\n$ npm view backstopjs\n{ name: 'backstopjs',\n  description: 'BackstopJS: Catch CSS curveballs.',\n  'dist-tags': { latest: '2.5.1', beta: '2.5.0', canary: '2.3.8' },\n...\n```. Kind of a broad question there...  what do you have in mind -- hopefully I can point you in the right direction.. Not currently.   There are a lot of potential improvements that could be made in the reports.  Maybe add a themes file path.  If it's just general improvements like sorting/filtering tests or other UX improvements you could just post them and I would pull them in.. @onigoetz thank you so much for the fixes!   I will review this week (I will hopefully have some time Friday). Sorry,  I was doing some house cleaning and blew away the canary branch which accidentally closed this PR.   I will try to generate a patch from this commit and reinstate canary.. Boom.  Ok.  there we go!\nLooks like the node v1.x test may have failed.   I am going to push this out anyway.. ok. I am going to go ahead and push this to @canary.  There is a broken test on node v0.12.18.   If you get a chance it would be great if you take a look and see if anything jumps out at you.  I'll try to address it if I get some time.   Thank you so much for the bug fixes! . Travis log here... https://travis-ci.org/garris/BackstopJS/jobs/204804551. Now available via npm install backstopjs@canary -g. I know.  I really don't think it's necessary to support.  I have no problem dropping that test.. FYI: I just removed the v0.12 test.  Everything is passing now.  \ud83d\ude09. Looks like you have a permissions issue.  see the last line of your console output.\nWe released a new version today.   2.5.1, which happens to address issues like this.  It may resolve your issue.  Would you mind doing a new install npm install -g backstopjs and please let me know if that resolves your issue?\n. Great!  Thank you!. Ok.  It's published.  Go ahead and update with npm install backstopjs -g. What version of BackstopJS are you running?. We released an update yesterday which may address this.  Could you make sure you're on the latest version?  npm install backstopjs -g. Ok. could you post some examples of what you're trying to do?. You need to run backstop reference --filter=Dashboard to initialize the new Dashboard scenario prior to comparison. Otherwise the comparison function will fail.. Thanks for letting me know!  Cheers.. I have no idea what this is. . Thanks for reporting this!   I thought we already handled this condition.   I will look into this and follow up with you.. @klausbayrhammer  Awesome!  me too -- I really like this feature.\nThank so much for the review!. @robertmaier @klausbayrhammer  Thank you for the improvement and the review!. Yes.   A scenario represents a single state for your app.  Given that state, a screenshot will be generated for each DOM selector you specify.  So, if you tell BackstopJS to capture all \\<li> elements and you have a list of say, 100 items in your layout, you will get 100 screenshots.. Sure. close away.. Closed due to inactivity.  Feel free to reopen.. I'd love to see this too.   I don't think it's being worked on now.   The codebase has changed a bit since this PR -- if someone can rebase against master and validate that it still works on osx we should cut a branch for it. . Dude, you are the best.  This sounds like a great idea -- I will try to review as soon as I can.  Maybe some of the other guys can give it a look.   Thanks!. This was merged into @canary.    \nThanks @klausbayrhammer!. Sounds interesting.  How much disk space are we talking about for your use case?  \nBut also, if you are concerned about using too much space, why not just backstop test --config=foo && rm -r path_to_test_bitmaps    IOW: deleting test bitmaps after a successful report.   Would that serve your purpose?\n. @mirzazeyrek   I guess the thing that is bugging me is the conditional stuff we'd have to put on the main codepath to make that surgical approach work.   I would prefer something less complex.   Something like a config option maxTestHistory -- you could say, set this to 10 and backstop would delete any test directories beyond that limit (starting with the oldest ones.)  \nIn your case you could set that to 100 and know your usage wont really go beyond say 50Gig -- which is probably not horrible?    The upside is that it would be something that's easy to configure & understand for users and even easier to implement for us? \nWhat do you think?\n. Sorry.  You can't do that.   I think casper.test will probably bork everything.  But it could probably be integrated in some way.  Would take a lot of thought.. I am so sorry for not getting through this yet.   It really looks good.   Should we try merging it to the canary branch?. I'll have some time to merge this tomorrow.  Thanks!. Ok man -- it's in!   There was another feature that went in today so I merged this one in by hand.  \nPlease let me know if it works!   And apologies in advance if I screwed anything up in the manual merge.   This is awesome.   Cheers.\nnpm install backstopjs@canary -g\n. Hi @attiks, I I personally have not gotten this feature to work.  What happens when you specify the full absolute path for ./ffprofile?   . Glad you were able to get it working -- thanks for following up!  \nIn the past I have had a lot of trouble trying to get FF profiles to work -- if you get a minute -- I'd really like to know how you save your profiles.\nBest,\nGarris. Wow -- that's great -- quick question...  is it -profile or --profile (Is one of those a typo?)\n Thanks!. @Enchiridion Thanks for reporting!   Sorry bout that. \n@skip405 -- I think this was your feature.  Could you maybe take a look?   \nThanks guys!\n. Pull was here..  https://github.com/garris/BackstopJS/pull/386. Oh crap.  Did I hose the merge?  Sorry!   Yes please add that pull request against canary.  I will get that out today!  (or when ever you get to it). @skip405 Also,  Thanks for the quick response!  . Sorry man,  the branches got out of sync last week.   I just brought them all to parity so you may have to rebase what you can and just add the edit as a new commit.   You can put the patch wherever you like.  I will publish it and push it to the other branches.. I published this out.  You can install via npm install -g backstopjs@canary\nIf anyone wants to validate that would be great.   I'll push this out to @latest later today.\nThanks @skip405 and @Enchiridion -- really appreciate the report and quick turnaround!  \ud83d\udc4d. Great.  Pushed to @latest.    Thanks!. @skip405 thanks for patching so quickly!   Will publish this out now.. @skip405 ^^^\n. @skip405 I took a closer look at this.  I am going to roll this back -- you can leave this line as is and are probably going to have to test for an object assignment prior to this line and handle the logic as needed.\n. Thanks.  I'll do that right now.\n. @skip405    On second thought.  Could you take another pass and maybe try to simplify it?  The logic here is a little clunky.    \nI think you have two paths right?  One where you get an object -- the other when you get a string?\nCant we just leave that single assignment and just test weather we got a string or an object?\nThen just fork the logic right there?\n. Probably also a good idea to have some tests around that one.. Just curious, what is wrong with this?  it seems more explicit...\n```\nvar customConfigPath = options && (options.backstopConfigFilePath || options.configPath || options.config);\nif (typeof customConfigPath === \"object\") {\n   //do the passed config object case\n} else {\n   //assume we need to do the passed config string case\n}. Yes.  will do.. No worries!. @skip405 I went with your solution because I don't have enough time to rewrite.  (and it looks like your fix will fix it).\n@pgn-vole @skip405   can you guys both npm install backstopjs -g  and let me know if this works for both of you now?. That part of the message should be disabled when debug is true.. Setting the directory happens only at the config level.   So multiple configs are necessary for multiple directories.   \nThat said,  there is a lot of file naming flexibility.   Files include scenario name as well.  So if you name those consistently you could easily ask gulp to find all files that have say \"checkoutFlow\" in them.  Does that make sense?\nThere is more info on file naming in the docs.. I just re-read your question.  I think I misunderstood.   Sounds more like you want to publish references with your components (or something like that).\nIf that's the case you may just want to include a config file with each component and you can then set the reference directory to be relative to each component directory.  (That would be like storing tests locally which makes a lot of sense if you're packaging these things up.\nPlease let me know what you end up doing -- I like to know how devs are using the app :)\nCheers.. Cheers!. Thanks for the update.  Makes sense.. Not clearing cookies is a bug. \nAre you able to set the cookie to another value?  . Yes,  I think the work-around is to use one config per onBefore script.   Please let me know if that works for you.. We should probably explicitly declare that as a known issue.. closed by #442 . Thank you!. To do that you just need to use a js based config (instead of a json based one)\nHere is an example -- the big difference is that you can use javascript in place of string literals...\nhttps://github.com/garris/BackstopJS/tree/master/examples/jsBasedConfig\nIn the above example -- you can replace the scenarios array value with a function which takes an array of urls and returns an array of scenarios.\n. This is a great point.  We really need this.  I have some time tomorrow and will try to add some useful contribution steps.. Yup.  Totally agree.   I really want to fix it.   The fix is to detect a missing reference and substitute the file here... backstopjs/capture/resources/selectorNotFound_noun_164558_cc.png as the reference and the compare instead of running the regular compare.  If we do that the approve will work.   If you look at what approve actually does you will see why that works.   \nWe just happen to be in the middle of a big compare.js refactor at the moment so it is hard to make changes there until that code stabilizes.\nI'd also like to see the approve get built out a little bit.  Show you which files it will copy.  enable it to accept a filter arg etc.  That stuff would be great.\n. Fixed in v2.6.14 https://github.com/garris/BackstopJS/commit/f52d89db155d4f4d8f833926518077e7e7e265cc. Thanks guys for resolving this.   Doc update is merged.  Yes,  those other two params are legacy.   There was a bug preventing those from working -- this was since fixed also... https://github.com/garris/BackstopJS/commit/08cb7e9fde3118aff41100e8a3c563ae6678bc04. have you tried this approach?\nhttps://github.com/garris/BackstopJS#you-can-pass-a-config-object-directly. So sorry, I am not seeing anything obviously wrong.   Maybe an error getting swallowed.   Are you able to just run the simple jsBasedConfig by importing from the /examples directory?  . Hmmm.  Sorry -- no clue what's going on there.   Are you able to run with slimer using the default config?  It may be a BackstopJS/slimer bug when imported.. You might have to hack that one yourself.   BackstopJS doesn't talk directly to slimer -- it's all going through casperjs.   Sorry I can't help beyond this.   Please post back here if you can figure it out -- might be useful for others. \nBest, Garris. Looks great.  Thanks for the contribution!. Yes.  It is very easy.  You can set the paths to anything you want.  See the readme here...\nhttps://github.com/garris/BackstopJS#setting-the-bitmap-and-script-directory-paths. @zcchew1202 Thanks for posting -- I just tried this on my machine and it worked.   To be sure, please make sure your backstopjs version is up to date.   \nPlease try this test:   Create a test directory and run backstop genConfg Then manually update the default config with your new paths as above.  Also rename the auto-generated backstop_data to results.   Then go ahead and run backstop reference and then backstop test.   That should work for you.   . @bryant1410 Thank you!. @fabm22 Thanks for posting!   You are correct.  Currently, BackstopJS is only integrated with CasperJS.   But there is a web-driver implementation in progress here... https://github.com/garris/BackstopJS/pull/409 \nI don't know how well that version is working at the moment -- but you are of-course welcome to pull the PR and see if you can get it to do what you need.\nThere is no timeline for this feature but we all agree it would be great to have this capability.\nCheers.. This is an issue with slimerjs.  The fix increment maxversion value in the init file.   See here...   https://github.com/laurentj/slimerjs/issues/579. I recently had to set up tests for exactly this scenario.   I will try to post that onBefore script later today.\n. This is what I used to allow cross domain access for two domains online services.  In my case I was testing a webExtension widget on Gmail -- where the user needs to be logged in on both domains.  Before running tests, I save my cookie files locally in JSON format using this chrome plugin -- http://www.bigbadgoose.com/cookie-inspector.\n```\nvar fs = require('fs'),\n    LI_cookies = \"backstop_data/LI_cookies.json\",\n    GMAIL_cookies = \"backstop_data/GMAIL_cookies.json\";\nmodule.exports = function(casper, scenario, vp) {\n  if (fs.exists(LI_cookies) && fs.exists(GMAIL_cookies)) {\n    var c1 = JSON.parse(fs.read(LI_cookies)); //sync method\n    var c2 = JSON.parse(fs.read(GMAIL_cookies)); //sync method\n    casper.page.cookies = c1.concat(c2);\n  }\ncasper.echo('setting user agent', 'INFO');\n  casper.userAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36');\ncasper.page.settings.webSecurityEnabled = false;\n  casper.page.settings.localToRemoteUrlAccessEnabled = true;\n};\n``. I noticed there is a fragment in your URL.  Is it possible you are having an issue related to this?\nhttps://github.com/garris/BackstopJS/issues/172\n. Great to hear you figured it out!  Thanks for posting.  Cheers.. Nice -- thanks for posting the solution!   \ud83d\udcaf \n. Great Catch -- feel free to create PR.   Thanks!. closes #442 \ncloses #443 \ncloses #421 . closed by #442 . That openReport command is very very osx-centric.  It probably doesn't work in most other environments.  We should probably guard against that command and warn the user if the guard throws.   . We aim to please!   Reopen if that didn't fix your issue.  Cheers.. That is the \"tag-not-found\" icon.  Are you sure the selectors you're specifying exist when the screenshot is taken?  Maybe try an empty selectors value to see what your whole page looks like e.g.selectors: []`. Please post the config file you're using.. @naorhai many apologies-- I am swamped at work.   I didn't notice any issues with your config -- so I am concerned that the tutorial may be broken.   The tutorial is old now and there may have been a breaking change since then.\nThe instructions on the readme are up to date however -- so it might help to read the new usage document to see what the issue is.\nAlso, what happens if you just leave the selectors array empty?  It should default to a single whole-page screenshot.. Just follow the readme instructions for a global install.  After that, use the myCoolProject from the examples folder -- do what the readme in the example says. Then  cd into that directory and run backstop test.   You should see stuff work.   I just tried this and everything ran as expected.. This article demonstrates how to scroll a div.   https://stackoverflow.com/questions/635706/how-to-scroll-to-an-element-inside-a-div\nTake that concept and put it in an onReady script inside of a casper.evaluate() function.\nHope that helps!. Sure, good luck!    At linkedin we have many helper scripts that we use with our backstop tests.  This technique should work very well for you.   cheers.. @stephenbe \ud83d\ude04 It's hard to say -- they already give me some time each month to work on the project -- so, you could say that they already underwrite the effort.  Thank you for being very positive about the project -- I am glad it can help developers do better work!. Are you able to add filter as another property in the config object?. Actually,  I am not sure -- you may need to look at how the code is written there.. Reference has been deprecated and is only supported as a utility function.   It will clean the directory and start fresh.  \nThe recommended flow is backstop test backstop approve  Repeat.. Just out of curiosity,  are you using an onBefore script?  We did fix a bug related to setting cookies which sometimes caused multiple tests to fail.  In any case,  I am glad it's working for you!. Thank you for keeping us posted!  Would be interested to know how many tests/selectors you are running and what your RAM requirements are.. Thanks.  Please let us know if increasing RAM fixes your issue. . Thanks @khalistan!\nYes,  there is a setting which allows you to ignore dimensions.  Please check the readme for \"requireSameDimensions\" : true\nHope that helps.. Thanks for the PR.  could you add this... https://github.com/ktsn/backstop-compare-test  to the examples directory.  Maybe name it absolute-paths.. Thank you for posting this.  I am planning to promote the current canary to @latest this week.  I will merge this into canary after promoting the current so we can test it out.   I am just a little concerned this could break existing implementations so I want others to test it for a while.  Cheers.. The files have changed significantly so I will merge this by hand.  I will close the ticket when complete.. ^^^ @klausbayrhammer, @jtuds, @svwu, @mirzazeyrek, @primajin, @stevecfischer. ^^^ @onigoetz. Yes -- totally agree.  Maybe start a v3 branch or even fork and rename backstop-chromy and maintain feature parity for a good long time.   \nIt's also totally possible the Casper guys will end up implementing headless chrome -- if they do then it's totally possible that we might drop the chromy implementation and go back to the Casper implementation.   . @Primajin  totally agree -- thanks for helping with that!. @mirzazeyrek yes -- the Casper guys are a great bunch and they are also already looking into headless.   I think they will eventually support it -- but I think it could take a very long time.  My concern is around relevance.  1) There is a lot of community interest in headless chrome.  2) phantom is frustrating because support for new features is weak.  So I think if given the chance, the community would gladly move to a solution where there is no requirement for special shims or polyfills or weird implementations just for testing.\nThe upside of a chromy version is that chromy is written in JS which makes contributions to that project much easier for our community.  The bar for contributing to Casper is much higher -- so that makes a project like chromy much more compatible with backstop.\nYou do bring up a very good point about the onBefore, onReady scripts.   But I think the goal would be to continue to also offer BOTH versions for the foreseeable future.   That said, at LinkedIn we are using a lot of helper scripts to set cookies and manipulate the UI, but, even though we have many scripts, its only a handful of methods that we are actually using.  So, potentially, stubbing the Casper object with a handful of \"most common\" calls would enable most scripts to work without the need for refactoring. \nIf that's the case we could potentially decouple from Casper all together.   OTOH -- if they catch up and eventually release a headless option we could make a decision about dropping support for one or the other.   \nPhantom was a groundbreaking app (much respect!) -- but it will inevitably be go the way of YUI and mootools \ud83d\ude1b.   So it's good to be having this conversation now.\n. @svwu Yes, I like the webdriver option a lot -- but it appears that a chromy implementation would be a relatively easy switch.  Relatively \ud83d\ude09.\n. @klausbayrhammer Good point.  I am totally open to the following (in current order of preference)\n- supporting just 7+ (simplest)\n- polyfilling for a few methods (more complex but not a big deal)\n- setting up transpiler  (more trouble than it's worth?  I currently like that current codebase needs no build.  But then, I think some devs would like this option -- so I am open to it if others really like this approach)\n. Alrighty then -- The people have spoken!  \nhttps://developers.google.com/web/updates/2017/04/headless-chrome\nhttps://github.com/OnetapInc/chromy\n\n\nI will start a branch: backstop-chromy\n\n\nif it's possible -- maybe we only need to swap out the capture module?  If so, this could make maintaining feature parity easier.\n\n\n. @davidjgoss   Thanks, will do! . +1. Update.   I am about half-way to having chromy integrated.\nhttps://github.com/garris/BackstopJS/pull/461\nCreated a file called runChromy.js -- this is called by createBitmaps (which currently only calls runCasper.js)\nrunChromy.js follows the same format as genConfig.js -- but since it runs in node-world it can be broken down into separate files eventually.   You can see the basic existing structure can be used by applying chromy syntax where casper currently is.\nIt's not producing output yet.  . One more thing.  This version will be able to capture screen shots in parallel -- which could be a huge perf win.. Good news.  Simple integration is completed!\nTo use, set \nengine: `chromy`\nYou can Install here... \nnpm install backstopjs@beta\nbranch is here... \nhttps://github.com/garris/BackstopJS/tree/backstop-chromy\nPlease note, this is only a simple implementation -- this will capture selectors and run a comparison. Reference, test, approve, genConfig are all working but some of the advanced features have not been added back yet.\nHere is a list of config features not yet wired up...\n- ~debug~ (logging errors, resources, markup to CLI)\n- ~readyEvent~\n- ~onBeforeScript~\n- Auth User via CLI  -- this is supported via onBefore (has not been tested)\n- ~onReadyScript~\n- ~hideSelectors~\n- ~removeSelectors~\n- ~selectorExpansion~\n- ~capturing the whole document~ \n- also, Travis seems very pissed off at me for making these changes -- so that needs to be fixed.\nThere are some expected differences between chromy and casper screenshots as well.  These will also need to be dealt with.  I will post those issues in chromy issues.\nI am more than happy if anyone wants to work on adding any of the above features back.  We might need to break those into different files to make merging less challenging.\nCheers. \ud83d\ude38\n. I am developing using node version 8.   It works with that version.  Please go ahead and add a transpile script issue to chromy if you'd like to use it with earlier versions.. @primajin thanks for testing!   \n1) yes -- the intention is for chrome headless -- there is a config which allows for enable/disable of the window (see runChromy.js line 6).   I think this should be made available in the user config for troubleshooting. (With default = false)\n2) I just want to make sure I understand your comment regarding double encoding.  It looks like you need to specify the selector without inner quotes -- which to me is expected behavior as far as chrome is concerned.    Am I understanding this correctly or is this an issue and I am I missing your point?\n. Ok -- thanks for the clarification.  Sounds like quotes (which are otherwise legal) cause an error.   Do you know if this an issue with chromy or backstop?. That's a big help -- thanks.   \nI spoke a little bit with the chromy project owner.  He is a very cool guy \ud83d\ude0e.    If you discover it is a chromy issue you can go ahead and file it on that repo (and reference it here)\nCheers!. Great!  And yes, this window feature should always default to false and can be set to true by user in backstop config. . @Primajin sorry -- that one is done.  completed yesterday... https://github.com/garris/BackstopJS/commit/5da367b5d57b871bc0df1a3c8ee87dd0f2bc209b. I am currently attempting to get scripts to work.. onBefore scripts are now working.\nbackstopjs@beta\nAlso added a debugWindow property to the backstopjs config -- for enabling chrome window during rendering.  Check readme for info.\nPlease note: onBefore scripts are now passed the chromy library instead of the casper library.. @Primajin Thanks for actively testing on this branch!   At the moment I think we want to still support casper/phantom/slimer -- there are (estimated) thousands of users still relying on that implementation.   \nAlso,  I think NPM should cache most of the dependencies so that subsequent builds don't take quite as long?  But maybe this is not true for your use case?\n. Apologies for the .innerText reference.  I will fix this.. Oh yeah -- thank you for pointing this out!   When I first created this issue I was considering a swap.   But I got some feedback that removing the casper would be disruptive to a lot of users -- so it seems the best route is to just add chrome at this point.   I will change the title -- I don't want to confuse others!. Issues with onBefore and onReady scrips have been resolved.   Also that .innnerText has been fixed.. Hmm,  I haven't seen that.  Are you using the default config?   Checking for isVisible is not implemented yet.. Just curious what happens if you create a fresh directory, do backstop genConfig then backstop test.   Will that work?  If that works it might be a selector issue.   I am working on the exists guardrail now -- which would prevent a screenshot if the element is not there.. +1 on the self-healing code! \ud83d\ude04  Glad that worked out.\nHmm I don't know anything about those files you mentioned.  My guess is that it is something generated by chrome and implemented in chromy.   See...  https://www.npmjs.com/package/v8-compile-cache\n. closed by #479 . @aboutandre thanks for the kind words!   \nThere's no ready way to run arbitrary comparisons.   \nIf you wanted to build it yourself you would need to make modifications by generating your own intermediate comparison manifest (the metafile included with each test bitmap directory)   Then you'd have to add a custom command.  It's doable -- not totally easy -- but doable.\nCheers!\n. Fixed in 3.x.x. fixed!. That does not sound good.  I will take a look.  Thanks for reporting.. @cdesautels Just took a look at this.  It worked for me using the default config.  Adding selectors to removeSelectors & hideSelectors worked as expected.  If you're still having troubles I can take a look at your config file.. @aisensiy  thank you for posting.  Yes -- you are correct.  There are a few issues with that feature which I would love to see fixed.   In addition to your issue -- there is also an alignment issue which happens at certain aspect ratios which breaks the display.  Please feel free to post a PR.  Thank you.. Thanks for asking.  Please PR to the canary branch. \nFWIW:  There isn't much development going on in the \"browser\" part of the app -- I really appreciate you flagging the issue.   Take your time -- thank you for your effort!. Looks great.  Will merge soon.. Thank you for this PR -- Apologies for the delay!   This is merged in the backstop-chromy branch which will be released hopefully by september.  This will be bundled with our headless-chrome feature in version 3.\nfixed by https://github.com/garris/BackstopJS/commit/d7e242abd77912abfcde87bdac5efa63c3520e69. Thank you for posting!     Did you try adjusting the concurrency parameter here...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#tuning-backstopjs-performance\nDoes that help?. @patriciamarchand Thank you for your post.  I am sorry but I don't have good advice for you at the moment :(.     I think this is one of he most difficult aspects to manage for visual regression tests.    Where I work we all have nearly identical environments (macOS  and same everything else).  \nHowever -- I have seen an issue where fonts that are loaded on one developer's machine can be used by phantom (or any browser) if the name is similar.   I was able to fix this by force-loading a specific font file in an onBeforeScript.   Maybe this helps?  \nThat is the only advice I have at the moment.  Please post back when you find a solution -- I am sure others would like to know how you solve it!. Did you try setting 'asyncCompareLimit' to 1?\nAlso, you can use a utility to monitor ram usage.  Perhaps there is not enough ram on your Linux box?  . Also,  please make sure you are using the latest install.. Can you send screenshots from the report?  Including console output?. Hi @NimaSoroush,  Sorry, but it is a little hard for me to figure out what is going on by just looking at this logout.   I am not seeing any red flags.   But if backstop is working for you using the default config it is possible that the issue may be caused by interaction with your app.. closed by https://github.com/garris/BackstopJS/commit/d7e242abd77912abfcde87bdac5efa63c3520e69. im sorry -- it is hard for me to see what's going on.  It looks like it is reporting the error correctly.. That looks valid.  Is that an onBeforeScript?  Does your login work if you just create it outside of backstop using casper scripts?\n. Also, you could probably replace this with casper.\n. If it's not running at all there could be something wrong with your syntax.  If it is mainly acquiring credentials you may be better off simply setting cookies.  Here is an example script you could try for that.    https://github.com/garris/BackstopJS/tree/master/examples/set%20cookies%20onBefore. 2.8 is the beta version -- please use the @latest (2.7.x) for any production needs.  \nFYI:  We are integrating headless-chrome as an engine option on the beta tag.  The chromy library will resolve this issue soon...  https://github.com/OnetapInc/chromy/pull/19. @pgn-vole what version of node are you running?\n. Just to close the loop on this one.  In the course of implementing chrome headless option it looks like there will be one significant breaking change after all (even though I expect this to affect very few users).  Therefore I have bumped the new version to 3.x.x\nThat said, I do not intend to release anything which would break a supported node version.  So, no worries there. \ud83d\ude09. Thanks very much for your comments!. I see where you're going with this but I am concerned about this change.  I think this could cause a regression with getFilename() in genBitmaps.js.   There was a lot of effort put into ensuring there could not be any filename collisions -- I am not sure this change is compatible with that.\nUnfortunately there are no tests around that yet.  If you wanted to pursue this change you'd need to create some tests to ensure both these two issues are ok.   Also,  there is a lot of work going into the chrome-headless branch.  You would need to add this change there also.\nIn the past, for cases like this I usually recommend just creating multiple configs and running them from the command line or a runner script -- just create a config for each viewport.   \n. Many apologies to everyone on this thread.  This change was posted when I was overwhelmed with other work.  If anyone wants to pick this up and test it we could work to bring it in. \n. Ok.  It has come to my attention that people really really want this update. Backstop has changed very significantly since the original pr for this.   For anyone willing to refactor this for puppeteer I would gladly bring this in.  We just need to have sufficient tests around it.   Just to be clear about the api \u2014  if backstop finds a viewports array inside a scenario, that one would be used instead of the one at the root of the config.   Does that work?   . That\u2019s great!\n1) ideally it is the same implementation for Chromy and puppeteer.  I haven\u2019t been in there for a bit so I am not sure if they need different implementation.\n2) please add to the smoke tests\u2014 we want to see that those are working as expected.. Yes. There totally is.  Set the report property to report: [].  It will still create the html report but won't try to open the browser.. no. the report is still generated.  Just doesn't try to open the browser.. Wow -- that is humongous!  In fact, i think headless-chrome (which we are moving to in the near future) tops out in the neighborhood of 16,000px.  \nIn any case, Backstop was never intended for that kind of use case.  What you should do in this case is use the selectors: [] option and take much smaller shots of various sections of our layout.  I think the neighborhood of 1000x1000 would be much more in the sweet spot.  Your milage may vary. \nIn your case you might have say, 23 separate diffs.   Depending on how your DOM is patterned you may be able to use selectorExpansion to automatically target your smaller areas.\nPlease let me know how it works out!\n. I think if you just use backstop to take all the screenshots and test you should be fine.  Otherwise you are better off just writing your own Casper scripts.. @klausbayrhammer That is interesting.  Doing so would break quite a few tests -- unless we gated it with a config property.   \nFWIW: I never had a good feel for the current misMatch metric -- I am open to adding the raw version.  . You can do this very easily in an onReadyScript handler.  I will try post an example soon.. This was addressed by addition of click and hover helpers.  See docs...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#testing-click-and-hover-interactions. @daveaspinall  I am surprised to hear that -- in my environment, running the backstop-feature-tests it is the opposite...  could you open a ticket and include console output for both the chrome and the phantom versions? \nThanks!\n. @mirzazeyrek  -- yes,  as I mentioned -- the scripts are totally different and I don't know yet if there is an easy way to automatically convert or polyfill.    That said,  please check out this test repo https://github.com/garris/backstop-feature-tests/ for examples of setting cookies and manipulating DOM.   We have already converted some complex scripts at work and did not find it to be too difficult.  @dotneet has been very helpful with questions and feature tweaks as well. I am working on documentation now and will probably help with chromy documentation where I can.. @daveaspinall  I see.  please post your example -- I think there is a selector expansion feature optimization I can add which would significantly improve performance for that many selectors in one scenario.. @laubsauger thanks for testing this version!   Yes.  Totally noticed.  At least some of it is related to #480.  Working on it.\nAlso, please file a ticket for the flags -- probably a bug in there.  \nCheers!\n. Just to be clear -- it looks like the slowdown is 1) chrome launch time, and 2) per selector capturing.    \nThe chrome option is faster if you have a test with many scenarios each having one selector.   Because, even though boot time is slower, they happen in parallel.     But, obviously, I am hoping we can do much better.\n. @laubsauger #480 has been fixed and @daveaspinall has reported a very significant speed increase.  Please retest at your earliest convenience -- would like to know if your issue is addressed also.  Thanks!. Note: please install the latest backstopjs 3.0.6+ and the latest chrome canary 60+.   The hostFlags issue is also fixed.. AS OF 3.0.7 ALL FEATURES ARE SUPPORTED WHEN USING CHROMY OPTION.. Next steps: \n1) update travis test #485 \n2) merge to master #486 \nHELP WANTED!  ^^^\n. @josh-wilson-sociomantic @laubsauger @djskinner \nThanks for the bug reports everyone!   Would you guys please create new issues for these?\nAlso, please download and run the backstop test here... https://github.com/garris/backstop-feature-tests  -- please include the summary at the end. (with the perf times) e.g. ...\n``\n      compare | OK: requireSameDimensions sanity_test_requireSameDimensions_0_body_1_square.png\n       report | Test completed...\n       report | 92 Passed\n       report | 10 Failed\n       report | Writing browser report\n       report | Browser reported copied\n       report | Copied configuration to: /Users/gshipon/Desktop/backstop test/backstop_data/html_report/config.js\n      COMMAND | Executing core foropenReportopenReport | Opening report.\n      COMMAND | CommandopenReportsucessfully executed in [0.077s]\n       report | *** Mismatch errors found ***\n       report | For a detailed report runbackstop openReport`\n  COMMAND | Command `report` ended with an error after [10.25s]\n  COMMAND | Error: Mismatch errors found.\n                at /usr/local/lib/node_modules/backstopjs/core/command/report.js:113:17\n                at <anonymous>\n                at process._tickCallback (internal/process/next_tick.js:169:7)\n  COMMAND | Command `test` ended with an error after [53.673s]\n  COMMAND | Error: Mismatch errors found.\n                at /usr/local/lib/node_modules/backstopjs/core/command/report.js:113:17\n                at <anonymous>\n                at process._tickCallback (internal/process/next_tick.js:169:7)\n\n```\n. @laubsauger \n\nsetting browser === \"chrom\" || \"chromy\" || \"chrome\" will all fire up chromy.\nI have also noticed that using debugWindow: true messes everything up -- would you mind filing a ticket for that?\nnvm is great -- but sometimes causes unexplained weird things to happen.  Don't know what to tell you there. . @josh-wilson-sociomantic the file where the magic happens is runChromy.js  Perhaps try running smaller sets/combinations of your scenarios until you find the one guy that's crashing the system.  Perhaps some async process is failing and that one chrome instance is preventing the backstop from continuing?. @josh-wilson-sociomantic  thanks for taking a look at it.   Just for a sanity check -- if you get a chance -- please download and run the test in this project.  Please let me know if it runs as expected.   And also -- if you're able to share your scenarios and project I would take a look at that.  Please open a new ticket for this if you find more info.. @mirzazeyrek thank you for testing!   please feel free to open a new ticket for your previous tests.   I would like to understand where we need improvements.  Cheers.. @josh-wilson-sociomantic \n\nHey great -- thanks for following up and letting me know!  cheers, GS. Thanks @kensoh! . @lancetharper Thanks for testing!   So, attribute selectors still work using the engine: \"phantom\" option correct?  Just not with chrome option?. @lancetharper Great to hear!!!   Yes, some of my tests are running at double speed...\nSo, please file this over on the Chromy repo.  @dotneet is really amazing with fixes like these.\nCheers!. CLOSED BY 0535303326e658e69d78f6405aac390b620ff222. Chrome headless support is now on master.  \nTHANK YOU EVERYONE FOR YOUR SUPPORT!. @dotneet Updated!. @daveaspinall Sorry to take so long to reply.   Can you pull down this file and run the main backstop test in there?   Then include the console output.  At the end of the log you'll find a line that looks like this... COMMAND | Command test sucessfully executed in [35.681s]   That timestamp is what I am after.  Thanks!. @daveaspinall almost forgot to add the repo...\nhttps://github.com/garris/backstop-feature-tests\n^^^ please let me know the test time for this  thanks!. I assume the same thing happens if you run test instead of reference?  Also, how many selectors is backstop capturing.  \nThere is an optimization planned where multiple selectors would only require much less rendering work -- this would probably make a very big difference in your case.. Ok.  I think this is going to be important.  I will refactor our isExpanded code path.   It could be some time -- but it is the next thing on my list.  Thanks for your patience.. @daveaspinall are you able to provide me access to the web app which causes the issue.  I would like to benchmark the issue.. Great.  Thank you!. It is looking like it may be a flaw with the expandedSelectors feature and not necessarily with the count of selectors.   This issue is now my top priority.\nChromy has native support for this feature-- I will attempt to use that.. @dotneet  that is excellent!   Can't wait to try it out!   \n(I am still working to refactor the multiple selector code path). @dotneet Just tested this.  \nYes speed is much better...  (Even before my refactor work)  But I think there is a chromy regression -- images are double resolution.\nprevious version\nCommand test sucessfully executed in [19.099s]\n\n0.4.0 version\nCommand test sucessfully executed in [12.424s]\n\n. @dotneet this is a big improvement-- thank you!    I hope to finish my refactor in the next day or so also.. UPDATE: This is almost fixed -- I just need to do some cleanup work before pushing a new version.  Early indication is that speed way better!\n. Ok.  New version.  Hopefully this issue is sufficiently fixed...\nold perf\nCommand test successfully executed in [19.099s]\nnew perf\nCommand test successfully executed in [11.762s]\ntested on isExpanded scenario in backstop test repo.. @daveaspinall Please retest to see if that addresses the issue.  Thanks!\nremember to npm install -g backstopjs@beta. @kiran-redhat \ud83d\ude2e Yes!  Great catch!  I fixed the line above.\nAnd yes.  Local install should still work fine.\nThank you for posting!. Ok. I think this is addressed for now.   \nClosing -- but please reopen if your problem is not resolved.\nCheers.. Hi @justin-parker -- I am planning on eliminating legacy mode very soon.   I looked at this PR and I am pretty sure of two things...\n- any use-case which currently relies on legacy mode can be very easily migrated\n- without legacy mode -- the changes in this PR may not be necessary\nBefore I remove legacy mode I wanted to contact you to try to make sure it won't be disruptive to you.  Can you please comment on your use case -- I'd like to see if it would be possible for you to migrate.. Thanks for following up.  Cheers.. Merged!  Thanks for the commit!. ^^ may be a chromy regression.  Just posted issue to chromy repo.. @josh-wilson-sociomantic this was caused by a chromy regression.  \nThe issue is fixed on the chromy branch so a new backstop install should fix the error.  \nThank you for working on this issue!. CLOSED BY 0535303326e658e69d78f6405aac390b620ff222. CLOSED BY 0535303326e658e69d78f6405aac390b620ff222. @patriciamarchand    Thank you for testing the new version!   Yes -- chrome renders differently than phantom so you can expect that you will need to update your references.\nJust a note:  I remember that you had issues before with text rendering across platforms.   Were you able to address that?. \nJust a suggestion-- use  backstop approve  Instead of backstop reference.\nWhen running backstop approve command, all images (with changes) from your most recent test run will be promoted to your reference collection.   This way you know exactly what changes will be kept.\nSEE: \"filtering tests and references by scenario\" for a note on approving changes after running backstop test using the --filter argument.. ^^ there is no fix necessary when the app is just redirecting willy-nilly to another URL.  Closing.. Here is an example script.  Does this help?\nhttps://github.com/garris/backstop-feature-tests/blob/master/backstop_data/engine_scripts/onReady.js\nSee the same repo for onBefore script too.. Great to hear -- thanks for the feedback!. At the moment -- chrome canary latest is required for tests.  Opening chrome canary during testing is not supported.   But I have had multiple regular chrome windows open during tests (while canary is used by backstop-chromy) with no issues.  So maybe that approach will work for you better?. Sure.  Actually -- this is really an important post.  It made me realize that we really need to help existing users to understand the chrome canary requirement.  (It wasn't a requirement before so users may assume that backstopjs will install it for them)  Maybe we need to check the users env and throw a warning at the end of the CLI log if we don't detect it?   Or maybe we can make it easier to run this as an install option brew install Caskroom/versions/google-chrome-canary. Run backstopjs in debug mode.  see if you have any interesting errors.   I bet your image calls are all 404-ing.    Domain issue?  Relative path issue?. what version of backstop are you using?   You could try using chrome headless maybe your problem will just go away. \nnpm install backstopjs@beta\nhttps://github.com/garris/BackstopJS/blob/backstop-chromy/README.md. @boriskaiser thanks for the post.  I am very excited about chrome headless and will in-fact be merging a ChromyJS-based implementation into BackstopJS today!\nWe are actively discussing the Puppeteer integration strategy at the moment and I will update this post when we have settled on a plan.\nIn the meantime -- you can start using chrome-headless with backstop & ChromyJS today!  npm install -g backstop@beta and check out the backstop-chromy branch for documentation.\nCheers!. Chromy is awesome and Shinji (the author) is fantastic with support \u2014 he really helped us make the jump to headless chrome.\nThat said, puppeteer is clearly the de-facto standard and i am happy if you want to do the work to explore it.  \nFeel free to start a new feature Branch if you want to experiment \u2014 but make sure to rebase off of UIV3 Branch \u2014 that will soon be merged into master.\nCheers!. aaaaand...\nPuppeteer is in development.\nhttps://github.com/garris/BackstopJS/tree/puppeteer\ncloned from...\nkrisdigital/BackstopJS@b4213d9. I work at a very large global social media company.  We build and manage multiple web apps for our members.  We also have the same company-issued MacBooks with nearly identical environments.   We have an implementation of BackstopJS on a single machine testing prod and another \"shared\" implementation in which the same set of BackstopJS reference files are shared via git alongside our development src.   \nIn the first instance, the workflow is straightforward.  On each canary deploy, a BackstopJS process checks for changes against our last canary deploy.   The release engineer gets an email when any changes are found -- which, during the day, is expected.  The release engineer will review and generally backstop approve any plausible changes.   Any non-plausible changes are escalated up the chain.\nIn the second instance, each dev is responsible for running BackstopJS and attaching to their RB ticket.  In that case ACL's are able to review all display changes (intended and in-intended) that are submitted with the RB code changes.\nIt is not a perfect system. There are still too many false positives in both cases stemming from known issues like asset latency and other environmental flux.   That said,  it catches a lot of real errors too.  And overall it definitely improves quality.  Like our other test systems -- we intend to improve it over time.\n. Thanks!. Thank you!. @bb-ceccles Thanks for posting!  I think @patriciamarchand had a very similar issue.  It required two fixes...\nhttps://github.com/garris/BackstopJS/issues/479#issuecomment-319745257\nPlease let me know if this addresses your issue.   I should probably add this to the readme for windows users.  \nFWIW:  sharp won't be required after the next release of chrome.. Update: @dotneet has updated chromy and removed the sharp dependency.  I will post back to this thread when I have update backstopjs with the new build.   Thanks for your patience. . Great to hear!   I just pushed up a new version with the sharp library removed. Please try it again and let me know if it's working for you again.\nnpm install -g backstopjs\nThanks!. FYI:  I have filed this...  https://github.com/OnetapInc/chromy/issues/61. Hi @EricBou -- the latest version of BackstopJS is 3.0.18.\n~ @gshipon-mn1(gshipon)\n$ npm view backstopjs | grep latest\n   { latest: '3.0.18',\nThe latest version has support for chrome headless and addresses the sharp issue that some people were reporting.\n. Closing because this should have been addressed in prior release.  Please reopen if the issue is not resolved.. Can you try downloading this test repo https://github.com/garris/backstop-feature-tests and backstop test in there.\nThe tests are not up to date so you might get a lot of individual false positives-- but this tests most all BackstopJS features.  Selectors should work.. Great to hear!   Cheers. @willenium -- thanks for posting!   I just pushed up a new version with the sharp library removed.   Please try it again and let me know if it's working for you again. \nnpm install -g backstopjs\n Thanks!. Here is an article which covers capturing after an animation.   The example shows an angular app but the principle applies to any JavaScript or CSS animation.   https://davidwalsh.name/visual-regression-testing-angular-applications. I see.  That's different.  If it were me I would just hide the element -- continuous animation is not something you can test.. Looks great -- thanks for posting your solution!. This looks great!  Thanks!. Merged.. FIXED BY https://github.com/OnetapInc/chromy/issues/61. Please try downloading and installing Chrome Canary from Google...\nhere ===> https://www.google.com/chrome/browser/canary.html. You can just use the phantomjs option until chrome is released for your platform.  They are at parity in terms of BackstopJS features.. @trevobr  please make sure you have latest supported versions of node, npm, backstop, chrome.. Chrome 62 (now in beta is the recommended version)  Thanks.. Thanks for posting.  Closing ticket.  Please reopen if needed.. @karueglazki  this is an example project with a similar use case.  This project reads in a data file and converts this to a configuration file.   Hopefully this will give you a template to solve your problem.  Cheers.. Yup.  Please take a look at the backstop-feature-tests repo.   Take a look at the onReady script in there.   Do it like that \ud83d\udc4d\nPing pack if you have any issues!\nFWIW:  I have a task to add new examples for chromy.\n. This is doable now.   Just fire off your chromy script in the ENV and set the chrome flag in your backstop config (use engineFlags prop)\n. Sorry -- I was on my phone ^^^\nMore specifically -- you could create an npm script which would first run this...\nnew Chromy({\n  launchBrowser: false\n})\nthen in the backstop config and in runChromy.js you'll need to add the chromePath property which you can set in the config -- (my suggestion to use engineFlags above was wrong).\nAnd your config would have...\nchromePath: '/path_to/headless_shell_executable'\nThis makes me think we need to rethink the engineFlags property here.  I'd prefer just one top level property that extends the default chromy config object.    But don't worry about this yet.  Just see if your main idea works first.\n. @kiran-redhat I just saw @dotneet's post.  Yes, that property will send the flag values to chrome.   If it works with chromy it should work with BackstopJS.. Will the test work if you remove the last scenario?. No, number of viewports should not be an issue.   Have you tried removing viewports?. Just to be sure, can you try 1 viewport and 6 or 7 scenarios?\nMight also be instructive to try setting asyncCaptureLimit to 1.. Maybe you could open activity monitor and see what your CPU/RAM usage is like?   It could just be that if the goto timeout was increased the whole thing would just work -- however slowly.   Perhaps 10 concurrent is too aggressive-- my laptop does seem to get unhappy after attempting to drive 10 chrome instances at the same time.   . When backstop completes it displays a summary of tasks with duration times for each.   It would be helpful if you wanted to list times in relation to various concurrency settings.. Thanks.  I did not check this myself -- so I don't know.. You will need 1 scenario per -- if you do a lot of this kind of testing you might want to create a js-based config file to generate this for you.  If it's just 10 or less buttons then just specify the scenarios.. Yes.  I think this is totally doable.   There is already a clickAndHoverHelper here...\nhttps://github.com/garris/BackstopJS/blob/master/capture/engine_scripts/clickAndHoverHelper.js\nI have been meaning to create an example for it.  \nYou might be able to create something which works similarly but does it at the config or beforeScript level and works similarly to the selctorExpansion feature.\nPlease ping me with some ideas if you have any.. @AlfredoMoretta if you are using backstop with phantom (not chrome-headless) then you can use this...\n```\nvar fs = require('fs'),\n    cookiePath = \"backstop_data/cookies.json\";\nmodule.exports = function(casper, scenario, vp) {\n  var cookies = [];\nif (fs.exists(cookiePath)) {\n    cookies = JSON.parse(fs.read(cookiePath));\n  }\ncasper.page.cookies = cookies;\n  console.log('Cookie state restored with cookies:', JSON.stringify(cookies));\n  casper.echo('setting user agent', 'INFO');\n  casper.userAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36');\n};\n```\nand your cookie file should look like this -- (one object per cookie name)...\n[\n  {\n    \"domain\": \"<.www.yourDomainHere.com>\",\n    \"expirationDate\": 1798790400,\n    \"hostOnly\": false,\n    \"httpOnly\": false,\n    \"name\": \"<COOKIE NAME HERE>\",\n    \"path\": \"/\",\n    \"sameSite\": \"no_restriction\",\n    \"secure\": false,\n    \"session\": false,\n    \"storeId\": \"0\",\n    \"value\": \"<COOKIE VALUES HERE>\",\n    \"id\": 1000\n  },\n  {\n    \"domain\": \"<.www.yourDomainHere.com>\",\n    \"expirationDate\": 1798790400,\n    \"hostOnly\": false,\n    \"httpOnly\": false,\n    \"name\": \"<OTHER COOKIE NAME HERE>\",\n    \"path\": \"/\",\n    \"sameSite\": \"no_restriction\",\n    \"secure\": false,\n    \"session\": false,\n    \"storeId\": \"0\",\n    \"value\": \"<OTHER COOKIE VALUES HERE>\",\n    \"id\": 1001\n  }\n]. Please upgrade to chrome-canary and backstop 3.0.19 -- I think this should fix the issue...\nhttps://www.google.com/chrome/browser/canary.html\nnpm install -g backstopjs. Also,  set asyncCaptureLimit & asyncCompareLimit both to 1.   Increasing those thinks increases memory usage -- you are probably just out of RAM.   Please let me know if that works.   . Thanks for the feedback -- cheers!. @sephenbe are you saying that backstop can not find/open chrome?. Also, in general the puppeteer version of backstop is far more stable than the Chromy version that we will probably start going into a maintenance-only mode with that soon.\nI defiantly recommend upgrading for new tests going forward.. Sorry, I don't remember why it was necessary to generate this file.  This is likely old code which can be removed.. fixed by https://github.com/OnetapInc/chromy/issues/65. Hi @nurovi Thank you for posting!  We just released version 3.0 which has breaking changes.  The CSS-Tricks article is out of date. Please check the instructions here for set up and usage...  https://github.com/garris/BackstopJS/\nPlease note -- the new set up does not want you to cd into the node_modules directory.  Easiest way to use is just do a global install and cd to your project to run the config from there.  \nI will be rewriting that CSS-TRICKS article soon.  Sorry for any confusion!. Hi @mirzazeyrek!   Yes.   I just tested it.   It is definitely working.   Could something in the onReady script be failing?. @hbrannan what version of chrome are you using? I recommend installing the latest chrome canary.   https://www.google.com/chrome/browser/canary.html. @hbrannan does it work when you run the vanilla backstop init?    If so, there is a test which covers nearly all BackstopJS faetures.   Please install backstop locally into any folder and follow the instructions here...   https://github.com/garris/BackstopJS/blob/master/README.md#testing-backstopjs-locally\nThe whole process should take 2 mins and will tell us if it\u2019s an issue with BackstopJS or an issue with your specific test.   \nPlease let me know how it goes!. @hbrannan Could you create a PDF of that report and drop it in here.   Then,  Please run again -- but first run..\nbackstop reference --config=backstop_features \nthen \nbackstop test  --config=backstop_features\nThanks.. @hbrannan I know what (at least part of) the issue is...\n\n*You're using an ancient version of BackstopJS.   Current version is 3.0.26.\nInstead of doing a local install -- just reinstall your global -- that will be easier...\nnpm install -g backstopjs\nThen rerun your the feature tests.  Let me know how it goes.\nCheers.\n* and by ancient I mean -- a couple of weeks ago \ud83d\ude1b\n. @mirzazeyrek Yes,  I am on latest canary also.\n```\n$ node -v\nv8.5.0\n$ backstop -v\nBackstopJS v3.0.26\n```\n. @mirzazeyrek   -- readyEvent is working for me.   I am testing with backstop feature tests located at... BackstopJS/test/configs/backstop_features\nBut first, please note -- chrome canary recently broke.  Please use chrome beta instead. (v 62).\nBelow is my session log + system info.   Can you...\n1) cd to BackstopJS/test/configs\nand run\n2) ../../cli/index.js test --config=backstop_features --filter=readyEvent\nPlease let me know if this is working for you.\nI am just thinking about this for a minute.  There is one case where readyEvent will not work -- and this is where Javascript is executing prior to backstopTools loading.  backstopTools are required in order to listen to console events (I believe this loads synchronous with onReady).   See line 15 of the log -- backstopTools loads and is listening to log events.   Later on line 17 you can see that the event is emitted by the page and on line 18 backstop detects the event -- then takes the screenshot.\nIf you have a console.log('something') call in a script that runs prior to onReady (or potentially synchronous with onReady it is possible that backstop will not have yet installed the listener).  The intention with readyEvent is that it will fire after some async process (and after backstopTools) are loaded.   If this is what is happening, there is probably a much more reliable way for us to implement this feature -- but for the immediate time it may be better to use a class on the body tag (or something of that nature) to detect ready state in a more reliable manner.   \n~/Development/BackstopJS/test/configs\n$ node -v; sw_vers;\nv8.5.0\nProductName:    Mac OS X\nProductVersion: 10.12.6\nBuildVersion:   16G29\n\n. If the console event fires before backstop tools have loaded then it will not be detected.  You may want to see if that is the case.. Moved to #530 \nAny help on this greatly appreciated.. Sorry forgot to comment on CI reports.  There is only one at the moment.  Feel free to contribute new ones!  Cheers.. Can we make a change?  How about changing hostFlags to hostConfig, then directly extend the chromy options object.   We should also make hostFlags backward compatible and have it extend chromeFlags if specified separately.   I think this keeps the api footprint small and flexible as new requirements are added.   What do you think?. @kiran-redhat  I'm sorry.   I didn't see your update!   I just pushed a commit that might clobber some of your changes.\nI have some feedback on your PR.   I will follow up as soon as I can.  Thanks so much.. @kiran-redhat  here is a more detailed acceptance criteria.  Sorry for not being clearer before.   Hope this helps.\nBehavior\nThe engineConfig property will accept an object and be used as the chromy options argument.  (Line 164)\nIf no engineConfig property is set then a default configuration will be used.  \nIf engineConfig is provided then all property values supplied will be appended, or override, any default chromy option values that would otherwise be used.   The one exception to this is the chromeFlags property.\nThe chromeFlags property, will always be overwritten by the internally generated flags variable (see line 159).  However, engineConfig.chromeFlags will override engineFlags is both are present.   engineFlags should still work for backward compatibility.   If found -- please add a console log warning users that engineFlags is deprecated. \nthe debugWindow flag should behave the same way as chromeFlags.  It will not be depricated. \nImplementation\nCreate an internal default property and use object.assign() to extend the property-- which will be used as an input to new Chromy().. And thank you adding the extra flags -- I have added the ability to directly set any properties in chromy with an engineOptions property -- so now all options are available.\nPlease see and comment on https://github.com/garris/BackstopJS/pull/569/files#diff-04c6e90faac2675aa89e2176d2eec7d8\nthank you!. Please post config sample.. try removing all the unnecessary scenario properties (they are only there as an example).\nlike this...\n\"scenarios\": [\n{\n\"label\": \"local homepage\",\n\"url\": \"http://localhost:8080/checkout/cadastro\"\n}. I see you have \"hoverSelector\": \".chromy\" in your config.  This is the issue as you probably don't have this selector in your layout.. Thank you!. I would expect this too.  Inthink the workaround would be to set threshold to 0.001. There is probably a guard in there intended to set the threshold to a default level if threshold is undefined.  But it's probably doing that in the case of zero also.   Would love a PR if you can resolve it.. Yes, looks good.  Thank you!. very soon -- will go out with next release.. npm published @v3.0.32 . See PR #534. closed by #534    Thank you!. I totally agree with this!  I would gladly pull in this change!\nThere are many things I would like to see on this report -- filtering by label is another thing too.\n. Hmmm.  This is something that I never tested for.   Obviously, the different engines handle this differently.   Did you try using the 'document' selector?   Is this an actual problem -- or just a difference you wanted to account for?  \nIt may be a question for @dotneet.. Can you paste the entire log output?. @ocetnik  Unfortunately this may be a bug in BackstopJS or it may be something that can be addressed in the config.   In the past -- some users had issues using slimer and they solved their issue by using absolute paths in their config file.  Maybe you can search past issues for this.  I am sorry I can't be more of a help here.  I imagine this issue would not be too hard to track down.   (The issue is originating from genBitmaps.js and this is usually easy to fix)  Please post back if you are able to resolve it.  I'm sure other users would appreciate it.   Thank you.. @anton-kulagin I just took your diff and made changes by hand.   It is on master.  Would you mind testing it?  Please let me know if it is working as expected.   Thanks!\n. If it is working -- it would be great if you could update the readme as well -- thank you for the help!. Verified.. Just pushed a fix for both of these to master.. @josephmcasey the reason for disabling gpu is so that diffs from different machines can be compared.  When hardware acceleration is enabled, text anti-ailasing happens on the hardware -- using hardware algorithms -- which result in anti-alias diffs across machines.  This is a primary use case -- that is why it is baked in like this.\nI am open to allowing overriding this behavior.  Just needs to make sense for the primary use case.\nWhat are you running into?. ^^^ Now THAT is a professional ticket!   \ud83d\ude0e. ok.  then how about this.  If someone overrides engineFlags it will be a true override -- not an extension.   Except for maybe the --window-size=x,y case.  In that case we can peek the array -- if found, we override.  If not, we go ahead and append?\nHow do we like that?\n. Ok.  It is in the queue.   I would gladly merge a PR if anyone can get to it before me. . In a todo app on my laptop \ud83d\ude04     this is a scrappy operation. Sure -- that's a great idea.. @josephmcasey I just implemented this for you.  Please update to @latest and validate if you get a chance.  Cheers.. Did you try to reduce to 1?. I have just verified that asyncCaptureLimit and asyncCompareLimit are working as designed.  At this point I think you need to look at why your particular test is failing.. What version of chrome and backstop are you using?. Hello all.  Thank you very much for posting.  \nIt may be possible that #561 (running out of memory) is related to this issue \u2014 which only seems to happen on Linux.  \n@vdekov posted a fix for #561 here...   https://github.com/garris/BackstopJS/pull/571\nWould it be possible for someone to pull this PR and see if the problem resolves?. Oh.  Crap.  You\u2019re right.  Ok \u2014 scratch that.  \ud83d\ude15. @kevineye Nice debugging \u2014 thanks for posting!. cross referencing this issue... https://github.com/garris/BackstopJS/issues/603#issuecomment-346478523. Thanks for posting!  So sorry about the regression.  Would be great if someone can look into it.. Done.    NPM @3.0.24\nCheers!. I think this is going to come down to a RAM issue. Would be helpful to know how much RAM each chrome instance is using.   Please try setting your limit to something safe like 5 for a while and see if that consistently addresses your issue.  If it does I may set the default to 5.. \ud83d\ude2eWow!  Much heavier than I thought. Thank you for sharing this.  What is your hardware profile?. @laubsauger Thanks for posting this!   Yes.  This is something that I really want to fix.   I started reorganizing the code to make this happen -- but havent been able to finish it.\nIf you pull the new version you will see that file has been jammed into runChromy.js\nhttps://github.com/garris/BackstopJS/blob/bc4dfc598bd3e9a40530713a845e820127bfdf5b/core/util/runChromy.js#L251-L258\nHere the methods are all injected manually after page load. ^^^\nBut of course -- in your case -- loading another page happens AFTER this runs.   \nI think the fix is to bundle all these injects into a single method and then listen for page load/unload events so any time a new URL is loaded, we can then immediately after, run the new single method -- so that calls to those methods always work.\nAny help with this is greatly appreciated!  . Thank you both for looking into this.  Have you tried conditionally reinjecting these methods after the onReady script runs?  \nI am on my phone so apologies if I misunderstood anything.. Ok great.  I will try to look at this today.. I assume this was fixed by #550 \n@laubsauger if you see any regressions please feel free to reopen.  Thank you very much for your help on this!. Hmmm, Your logs look correct. But my tests here are passing here.  Are you on the latest version of BackstopJS?\nMaybe try changing things up?  Try a different value for readyEvent like hello?    You could also maybe try using readySelector.   \nOh, and if possible, can you put a delay, say 100ms, on your readyEvent?  Maybe BackstopJS has a race condition issue?   Please let me know if that is the case!  . This happened to me last week.  I think I fixed it by uninstalling, cleaning cache and re-installing.\nsomething like this...\nnpm uninstall -g backstopjs\nnpm cache clean\nnpm install -g backstopjs\nPlease let me know if that fixes your issue!\n. Hmmm.  No idea.  This is not an issue for most users so I am guessing it\u2019s an env issue.\nMaybe you could try doing a verbose install of phantom-prebuilt by its self \u2014 maybe that would turn up some clues?. What version are you running?. Chrome and Phantom options have different behaviors -- is that what you're referring to?\nMaybe your issue is related to this?  https://github.com/garris/BackstopJS/issues/532\n. Please post your config.\n. My guess is that you have 2 configs?  Is one local to your mac and the other local to your container?    . Ah ha -- That docker image is totally bootleg! \ud83d\ude04\nYou may want to request the maintainer update his container.   It's probably running an old version.   . @dodozhang21 Unfortunately I don't have much docker experience -- But I know other contributors are using backstop in this way.  If you can solve your problem please post back here -- I am sure there are others who are trying to figure this one out.\n@swese44 -- did you ever post your docker/backstop project?\n@mirzazeyrek -- maybe you know someone using a container to run a backstopjs app?\n. @swese44 Fantastic -- thank you for sharing all this work!   \nFun fact: we both work for Microsoft \ud83d\ude04.  Nice to meet you!. Please post your config.. @mirec810   Thank you for posting this!  I just noticed an error in the sample phantom test.  It is pointing to the wrong onBefore and onReady directories.   I will post a fix for this.. Sorry.  I take that back.  I just checked that again.  The example is correct.  Phew. \ud83d\ude05\nIf you want to use phantom you are using the wrong config properties.  \nThis example works...\nBackstopJS/test/configs/phantom_smoke.json\nUsing that test you can modify the following with your .echo() test and it will work...\nBackstopJS/test/configs/backstop_data/engine_scripts/casper/onReady.js\nCheers.. @mirec810 This could be done -- but it would require that you understand backstopjs internals/dependencies.  And probably, once you understood the internals, you would probably end up using backstopjs for the end to end process anyway.. Thank you for looking into this.  Yes, this a really annoying behavior!   It should really respond with a failed test icon \u2014 but not break existing tests still in flight.   \nI think this should not be too hard to fix \u2014 it would be great if you could post your current PR.  We could improve it here.   \n. @mirovelk totally agree -- this is the most annoying thing about backstopjs!  I would merge any PR that fixes this so fast it'd make your socks fly off! . Ok backstoppers!   This problem is about to go away.   I have a fix \u2014 need a few days to validate it.   Will update soon!\nCheers.. fixed by 8e0074f8fd6366f87d4743099735e79ddcc40b1f. This is awesome.  Thank you!. This would of course be awesome.  There is already a partial m BackstopJS-webdriver implementation here... https://github.com/garris/BackstopJS/pull/409\nWould love to see how close to feature parity we can get with this.. Still open.  Would love to have either web driver support or Firefox headless.   Feel free to pick it up.. I am not sure of the issue here.  BackstopJS normal behavior is to echo all console output into the console.   If you were to modify this behavior (perhaps to log some other way) you would use an onBeforeScript and follow instructions for CasperJS logging.   \nYour scripts look correct to me...  But one idea may be to try using casper.echo or console.log instead of this.echo (maybe this is not working as expected in this context -- just a guess.)\nmodule.exports = function(casper, scenario, vp) {\n    casper.on('remote.message', function(message) {\n        this.echo(\"--------> \" + message);\n    });\n    casper.on('remote.error', function(message) {\n        this.echo(\"--------> \" + message);\n    });\n};\n. Please check the examples folder.  Some of these may be outdated.  But probably a good starting point.. @anton-kulagin   Yes,  your approach looks very good.  Please go ahead and submit a PR!\nAlso your project looks VERY COOL.   I love that you are integrating into express like that -- great idea!   It would be wonderful if you have a small example you would like to post to the <backstopjs>/examples directory -- I am sure other developers would benefit from seeing the example.  Cheers!. This must be from your script yeah?. On your web page.\n. I don't get the error with the following.  BackstopJS is behaving as designed for me.   There must be something going on with your environment.  Maybe you could try bumping your node version?  I don't expect that would change behaivior tho.\nWe have a new Docker image in our repo.  Maybe you will have more luck working in a container env?\n{\n  \"id\": \"chrome_smoke\",\n  \"viewports\": [\n    {\n      \"label\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"label\": \"tablet\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"onBeforeScript\": \"chromy/onBefore.js\",\n  \"onReadyScript\": \"chromy/onReady.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"BackstopJS Homepage\",\n      \"cookiePath\": \"backstop_data/engine_scripts/cookies.json\",\n      \"url\": \"https://google.com\",\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 0,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \"\",\n      \"clickSelector\": \"\",\n      \"postInteractionWait\": \"\",\n      \"selectors\": [\"[class^=\\\"rsg--preview-\\\"]\", \"viewport\"],\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\n$ node -v; npm -v; sw_vers\nv8.5.0\n5.3.0\nProductName:    Mac OS X\nProductVersion: 10.12.6\nBuildVersion:   16G29. @anton-kulagin Hello -- thank you for posting!   Yes I am very familiar with this issue.  This is a well known phantom bug.   PhantomJS uses an older implementation of flexbox and requires -webkit prefixes for ALL flexbox props and values.   The new BackstopJS splash page uses bootstrap4 which is built without support for older webkit browsers like phantom.  \nTo fix this issue either ...\n1) pull down bootstrap 4 git repo and update /build/postcss.config.js per this suggestion >> https://github.com/garris/BackstopJS/issues/358#issuecomment-277992041.    then Rebuild bootstrap 4 and add to backstopjs splash page.   This would probably be very useful to any other developers who test bootstrap based projects in phantomjs.\nOR (maybe easier depending on your experience)\n2)  just inspect the current backstop splash page and figure out which properties require shimming (i.e. any selectors with flex props) -- then update <backstopjs>/assets/styles.css with the needed -webkit prefixes where needed\nI would love to see a PR for this.\nThanks! . This is merged and published.  @3.0.30. There is already a config for this.  See the report property.. Cheers!. @vdekov Thank you for posting and thank you for taking the time to detail the issue.   Unfortunately, the Phantom option probably requires more RAM (I think Phantom alone uses  \u22481.5G -- the comparison may also need >.5G) -- maybe doubling to 4G+ will work better?  Also, BackstopJS v3 is has a chrome headless option which I think requires less resources -- maybe this will work better for you?\n. There was a point where the memory leak on compare was very bad.  This was fixed many versions ago.   Since then here have been some speed optimization in that area \u2014 but perhaps they may have introduced a memory leak?  It would definitely be great is someone could take a look.   I mostly use it on MacOS and have never run into a RAM issue (most of my team is on macOS with 16g and our Linux boxes are very powerful \u2014 so even with large tests we have not run into an issue)\nWhat screen sizes are you using?. Thank you for looking into this.  Very interesting.   So, yes \u2014 resemble is used for comparisons \u2014 however I am confident the leak is not from resemble (we fixed a leak there before).   However,  there is an optimization step that was added in front of the resemble step \u2014 it quickly creates hashes of the reference and test images to determine if the files are the same.  Files which are the same are not compared bit-by-bit in the resemble process.   I suspect that images are getting cached in this hash process and not getting cleaned up after the hash evaluation is performed.   . Some ideas..\nThis file here:\nhttps://github.com/garris/BackstopJS/blob/master/core/util/compare/compare-hash.js\nTry...\n- setting the hashes arr to null after comparison.\n- cleaning up the stream var after returning\n- the .on() closures could also be an issue \u2014 probably need a .off() in there after evaluating.. @vdekov can you share a config + link to a project which demonstrates the memory leak?  I think I make a fix -- but I want to make sure I can repro first.. This sounds absolutely great!  Yes, please post PR and we can try to get this in today.  Thanks for your effort!. fixed by #571 . What do you recommend?  Let\u2019s do it.   Also,  that container is new,  I don\u2019t remember what version of chrome it\u2019s using \u2014 but we should set it to >=v62 to be compatible with the flags we\u2019re using.. FWIW: I don\u2019t have much experience with containers\u2014 Would be super helpful if someone wants to take the lead to manage this. . Sounds like a sensible idea.    \nI'm sorry but I am not sure I understand the question -- but I'll try to explain.  The container rebuild is triggered on every github push -- regardless of package version.   I only bump the package version value before releasing a new NPM build.   Hope that helps.. Closed by https://github.com/garris/BackstopJS/pull/668. @anton-kulagin To do what you are talking about you would have to save a unique snapshot of the reference files along with all the test files for each test.   If that change were made then test runs would truly be independent.   I know that some users would not want this behavior -- but also, I know that some would.  I would consider adding a config parameter enabling this as an option if you wanted to propose an implementation path.   It would be very complex and time consuming though.   It would require an expert rewriting core functionality.. @anton-kulagin There is already a parameter for formatting filenames.  You can use this to simplify targeting files with a server script.   As for the approve feature -- it would be better to simply enhance the approve feature such that previous test runs could be targeted and merged in an intuitive way. . @anton-kulagin   Thanks for your ideas for backstop -- I very much appreciate it.   The information you're looking for is in the readme.  Search for fileNameTemplate.   \nAnd yes -- to be clear -- I don't think this is a good case for adding a new property setting. . There you go.. Thanks!. Thanks for reviewing!. @VladimirPittner I am pretty sure this is a chromy question.  Please try asking there.   But please post back here if it turns out to be a backstop issue.. Yes.  sorry guys -- I just got a chance to test.  Something is broken in there.   If you have time to take a look it would be a big help.  Otherwise I will get to it as soon as I can.. Can you post the commands you\u2019re using?. I am not sure I understand your usecase?  \nFWIW: backstop reference has been depricated.  The recommended workflow is now backstop test, then backstop approve (for any images which you want to promote to reference).  Check the docs for more info.. Thanks for the note -- it sounds like a pretty common use case.   (You probably don't need the -i flag for that.)  \nThe new workflow will probably work much better for you.  It was changed so that you would be able to see exactly what your reference files would look like for subsequent tests.   (where as backstop reference would just blindly create new reference files -- which may have failed without your knowledge)\nCheers.. This looks GREAT!   Will test now.. published v 3.0.31 \nThank you!. closes #561 . I am pretty sure that all filenames are scrubbed for whitespace when internally generated \u2014 with the exception of changing the filename template which is not supported.. @zmoki thank you for posting!  Please take a look and comment on PR #569.  This enables the user to override the default chromeFlags config.  I think this might address one of your suggestions?   As for viewports, I am happy to look at a PR for that as well.\nCheers!. This is merged!  Super amazing -- thank you for all the effort here!. Phantomjs is still supported.  There are still many users with phantom based tests.  I intend to maintain the current feature set until such time that most users have migrated away.. Thanks @asimpson.   See #772. @mwmaleks Hi -- thanks for posting!    Is this something you intend to package for the storybook project?  This is something I have wanted to do for a year (  but of course -- I have not had time \ud83d\ude04  )\nTo answer your question... There is currently no clean way to do this with backstop because for each config -- viewports and scenario collections are explicitly tied together.   I have looked at potentially adding an exception property in the past -- (as a filter -- or just re-specifying new viewports etc.) but so far, none of the solutions have felt clean.    I think maybe the best way to implement what you want to do is to create a few configs for testing your components -- Here are some examples of what I mean...\n- config 1: mobile_only_components   (this would have one viewport at your mobile setting etc)\n- config 2: desktop_only_components   (this would have one viewport at your desktop setting etc)\n- config 3: responsive_components (this would have multiple viewports)\nThen you simply test the right component in the right config.  Also, you would probably need to create a test runner which would run at the right time and specify (or discover) which configs to run.   You could probably make creative use of the --filter argument to potentially only test files which are changed.\nThis is obviously just an idea -- I am sure your use-case is more complicated. \nDoes this help?  Is that workable for your use case?\n. Ok.  The people have spoken.  I guess we should do it.  \nProp name: \n  viewportsWhitelist\nType:\n  Array? RegexString?\nBehavior:\n  - all viewports are used if prop is not specified\n  - if prop is specified then only matches are used\nComments please...\n. Ok.  Sounds good.  PR is welcome.. @kiran-redhat I think if we are to pass an array of allowed viewports with each scenario we would want to implement a switch near here...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/createBitmaps.js#L113\nThis would also need to happen for phantom tests.. Merged.. Thanks for posting!  In fact there is a pr for this very feature.  I am just waiting for someone to validate it.  \nCould you pull this and let me know if it works.  (I have not tested it yet \u2014 so there could be a bug there)  https://github.com/garris/BackstopJS/pull/569\nCheck the readme for usage notes.. @VladimirPittner, @kiran-redhat -- many apologies for the last version.  I fixed all the issues -- could you give it another try?\nhttps://github.com/garris/BackstopJS/pull/584. @lancetharper  can you post a gist config and session log?   Also,  what version of everything are you running.   BackstopJS should be 3.0.31 or greater.. @lancetharper Glad you were able to get it working!  Yes, it's totally possible a zombie chrome process can be the issue.  Most unhandled error states that could lead to this issue were fixed in 3.0.27... \n https://github.com/garris/BackstopJS/commit/8e0074f8fd6366f87d4743099735e79ddcc40b1f#diff-9e67e5c53c6a24f5b7f26f857fff03eaR174\nAfter that fix I haven't seen the issue again -- even when killing the process manually.   That said, you could probably still get a zombie if a bad enough error occurs (like if chrome itself freezes).   To double make sure this doesn't happen at work, I've added a chrome-headless forced kill command in front of the npm script which calls various backstop tests e.g. pkill -f '(chrome)?(--headless)'; backstop test\nThanks for posting!\n. published to npm 3.0.32. Can you post a log?. Also \u2014 please make sure you have chrome 62 installed.. Wait..  I see this... SCENARIO > <Scenario_Name>    Looks like a config issue?...  Can you post an example of your config and the exact commands you're using to launch backstop?\n. Ok Thanks.  In version 3 there were a lot of changes to make backstop behave like a normal node module.  \nIt's now not advised to cd into the backstop directory and write files there.  You can move your config file out to a more conventional workspace.  This may be causing your issue.\nAlso, could this be an issue?  \"url\": \"My_URL\",. Sure,  Please post back if you find a resolution -- it will probably help others.\nAlso, I believe @mirzazeyrek is an expert with backstop+jenkins integration.  Possibly he can advise if you cant figure it out.. Boom!  Nice!  Thanks for your patience.   Will try to merge this today.. Awesome.  Thank you for testing!   I didn\u2019t get to merge it today.  But will do it very soon.  . These changes were merged manually.  Please see branch UIV2.. Hi there @chaffneue.   Please bear with me \u2014 I\u2019m not totally sure I understand the question \u2014 but is this what you need to do?\nFor each button variation, you want to create a scenario with a selector like this...\n...\nselectors: [\u2019li.iteratedContainer:nth-of-type(<index>) div[data-preview=Button]\u2019],\nselectorExansion: false,\n...\nWhere index is incremented on each scenario.\nYou could also create a js-based config for backstop \u2014 this approach might be to parse react-styleguidist config files and map that to a backstop config template.. @chaffneue  you can check the backstop docs for integrating backstop into other apps.  If you can extract styleguidest data then you should be able to map component data into a scenario template and directly pass this into backstop.  . Glad you found the issue.  Thanks for following up!. Did either of you attempt to consistently run pkill -f \"(chrome)?(--headless)\"  before running your tests?  Does that make a difference?. @kiran-redhat oh.  yeah.  good point.   Hmmm.   Intermittent?   \nAnd BTW:  That diff is what happens when images of different sizes are compared.   In this case I think it's comparing against no image (in which case I think the default for that case is a 1x1 png.)\n. Some things I have seen that can cause intermittent errors...\n- cookies\n- zombie chrome-headless instances\n- server returns error\n- some other app using chromy ports\n. @joseph-stano \nHere is where we handle chromy errors...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L319\nMaybe you can console.log('e>>', e)  right there -- or earlier in the chain to see what might be going on?. Thanks guys for working on this!  Something else just came to mind \u2014 multiple concurrent instances of backstop running chromy won\u2019t work because of likely chrome-headless port collisions.    Just wanted to rule out multiple async backstop test calls.. @VladimirPittner Just to be clear -- I don't have this issue -- asyncCaptureLimit is a control provided for performance -- it will not really be effective for compatibility.  Backstop using chrome is very stable for me other than the known instances above.   I think the issue you have is related to environment.  Once you find the issue you will probably get consistent behavior.   \nI am suspecting there may be a port issue.  Chromy instances start using port 9222 and increment for each scenario.  so if you have 50 tests and 2 viewports you will need ports 9222-9322 to be available.  This is not a problem in my workgroup -- but may be an issue for you?\nAlso, could this be a server error or throttling?\nJust some ideas.  good luck!\n. Hmmm  -- I think the default waitTimeout is 30 secs?  Are you saying you need more time than that to get a successful app load?. @kiran-redhat -- thank you for tracking this down!   I completely agree with your idea.  We should add a log.error at line 319 which also includes the scenario label+viewport.  This would make debugging MUCH easier for engineers!. From the HTML report \u2014 click on either the test or reference image.  Does that work for you?. Great idea \u2014 thanks.   Glad it\u2019s working for you.  Cheers.. @kenith asyncCaptureLimit is only for chrome engine.   Capture is synchronous with phantom option.   This is as designed.. @L0wry Thanks for pointing this out.  Sorry about that.  I have a todo to put the error back.  . Thank you for posting this!   Yes we are working on a new UI but it is totally not ready yet  \u2014  it\u2019s intended to be @beta not @latest.   I will fix this ASAP!. Hi there.  I just checked this and backstopjs worked as expected.  I suspect you probably have a dirty directory or maybe there was some confusion?\nPlease try just creating a temp directory somewhere, cd into that directory and ...\nnpm install backstopjs\nThen you can \n./node_modules/backstopjs/cli/index.js init\nand then \n./node_modules/backstopjs/cli/index.js test\nThat should install BackstopJS v3.0.32 and work as designed.  Please let me know if you still have an issue.. @mantovanig    Oh yes -- I think prepublish is a great idea!  . @questionmarc Thanks for posting.   Backstop currently does not do any port testing -- so, if a port is already in use, there will certainly be an issue.   Backstop currently starts at port 9223 and increments for each scenario.   The code for this is here...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L62\nInstead of blindly incrementing, it would be much better if Backstop would always start at port 9223 and check if the port is already in use -- if it is, then it should increment until an open port is found.  This way there would be no more than say, 8 ports in use at one time (based on asyncCaptureLimit value).   Currently a user with hundreds of tests would be using hundreds of ports.  This of course is not the best approach so it would be wonderful if someone would add a port testing module and implemented this pattern.\nIn your case, yes, you would want to either limit your tests-per-run or implement the above.\nCheers.\n. @questionmarc \ud83d\ude04  Thanks Marc!  Feel free to ping if you have any questions -- I'll do my best to answer.  . I can revert \u2014 but those are just warnings \u2014 the app should still work as it did before.  Chrome V62 will behave more consistently across environments.. I still don't know what I'm doing with docker. \ud83d\ude14   \nwhat needs to happen?   Can you give me the steps?   It's probably pretty easy right?. Oh I just saw your latest post.  This makes sense.   Let me try to get this going.  I can probably do this on Friday.  Thanks!. @samuelhwilliams thank you for the tips -- that made it super easy!   Ok.  So now there is a latest and a tags build.   I think maybe I should delete the latest rule -- I can't imagine anyone would want to pull from that.\nI just pushed a new tag and docker started building...\nPlease let me know if that is working for you!\n\n. @samuelhwilliams Ahh -- I see the fail too.   So I guess that means I need to publish the new tagged version to NPM before pushing my tag to github.  That makes sense.  One question though...\nIn the ./docker file there is a BACKSTOPJS_VERSION property.  Does this version need to match the tagged version -- IOW does this file need to be updated with the current tag each time I publish?  Or can this value just be a semver? E.G. ^3.0.34\n\n. Thank you @Baltazardoung and @samuelhwilliams!   And many apologies for the late response Samuel!\nI have an hour tomorrow to try to implement this.  I would totally appreciate if either of you would be able to do a Skype call to make sure I don\u2019t screw this up.\ud83d\ude04   No worries either way\u2014I\u2019ll give it my best shot.  Cheers!. What does the report look like?. @questionmarc Great -- thank you for posting a fix!\nsee also... https://github.com/garris/BackstopJS/issues/537#issuecomment-339710797. I just added a link to this issue in the Docs.. @trungdq88   Chrome-headless has a screen capture limitation -- https://groups.google.com/a/chromium.org/forum/#!msg/headless-dev/DqaAEXyzvR0/P9zmTLMvDQAJ\nYou may find better overall performance by capturing smaller areas of your layout.. Merged!   Thanks for your patience!   . Sorry for the delay.  Yes, I am happy to upgrade.  I am just very very short on time.   To upgrade we need to ensure that the new version behaves as expected when running test/configs/backstop_features.js   . @ackmanx Yes, @VladimirPittner is correct ^^^   You can change the chromy version number in package.json then run npm install from your backstop directory.. Oh bummer.  Really?   Is there a Chromy changelog?. @kiran-redhat   Just to be sure, when you test, please also run the sanity check here...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#there-is-a-backstopjs-sanity-check. That\u2019s great \u2014 thank you very much for testing!. Merged #615. I should be able to push to npm on Friday.. Hi @ackmanx -- many apologies.  No -- I had to help with another project with a year-end deadline -- so I did not get to review.  I will update this thread when I finally get to test and push.\nIn the meantime -- your project is probably installing 0.5.5 because you updated your package.json file?   . Please take a look at the example scripts.  You don\u2019t need to \u201crequire\u201d Chromy.  It\u2019s passed as an argument to the callback closure which your script runs in.. Oh, didn\u2019t notice that. If it\u2019s a static method you can just import it.  But you might need to alias it to avoid collisions.  Does that work?. @deap82  would this have worked if you attempted to implement inside onBefore as opposed to onReady?  I think by the time onReady is running it would be too late.. @kiran-redhat correct,  backstop does not currently support this. . Hi @deap82 sorry for the delayed responses.  I am actually on vacation now \u2014 but I wanted to at least give you a reply because I appreciate the thought and effort you are putting into improving backstop for yourself and likely others.  \nI don\u2019t have time to review backstop internals at the moment \u2014 but at a high level I can probably give some comments to unblock your effort.\nMaybe the best option is to simply use the same Chromy singleton that is internal to backstop and make this accessible as an argument in both the onBefore and onReady scripts.   \nThis way as features are needed, users have complete access to the all object props.\nWould this enable you to move forward?\nAlso, as a matter of the api\u2014 I think it\u2019s a bit cleaner to flatten your viewports example \u2014 to not add that emulate property and instead extend the viewports property that already exists there.  Then in the onBefore script you can write your own emulation property handler with the Chromy class object methods you added to the onBefore argument list.\nHow does that sound \u2014 is that a sensible approach and does it get you to a useful place?\n. See #772. Please see this troubleshooting tip \u2014 I am pretty sure it will resolve your issue...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#error-failed-to-launch-a-browser\nAlso, backstop reference has been deprecated as a primary workflow.  Please consider using backstop test  then backstop approve  instead.   This is the recommended workflow for version 3.x and will give you much better feedback for cases where there are unexpected failures.\n. This should help... https://github.com/garris/BackstopJS/issues/518. @kiran-redhat You are correct -- these errors are not sent to the web UI -- however -- these errors are surfaced in the CLI report.   There is a new web UI in development on another branch.  We can look at adding the existing CLI errors/warnings to the new UI as well.. @alexus2005  I just merged this feature yesterday.  I haven\u2019t published this to npm yet \u2014 will probably do this on Friday.. Feature has landed.  See docs.  Reopen if there is an issue.  Thanks.. Thanks @timrnz. @alexus2005 Cheers!. Beautiful\u2014 thank you.. Yes \u2014 that would be great!  Thank you!. @ackmanx thank you for posting your question and your solution!  That is exactly what I was going to suggest \u2014 glad it\u2019s working for you! \ud83d\ude0a\nCheers.. Thank you for the PR.  It\u2019s merged!. Merged! Thanks for your patience! . @joelgrimberg thank you for posting!   So, there probably is a way to make that happen \u2014 but it would take some effort learning the internals of both.  I wasn\u2019t familiar with cypress\u2014 it looks very cool \u2014 I reached out to them to see if they might want to collaborate.    In the meantime, it\u2019s probably easiest for you just write separate tests.  . I am assuming your app uses cookies to maintain state?  If so, just save those cookies and load them into backstop with an onBefore script.  There are examples in the docs.. I thought chromy was able to do this.  Maybe you could post a Chromy issue to verify?\nPhantom can definitely do this.  At work I used to have a backstop scenario (phantom option) that I'd run once before running all other tests.  It would log-in to gmail then grab and save cookies to a local cookie file.   Then I run all my real tests in backstop (using chomy) pulling from that local cookie file before each test runs.\nSo I think this should be possible one way or another.  . Hi @dennis-best,  there were a few proposals but nothing baked-in.   I think a lot of users just run something to clean-up any files older than n-days (or whatever).    . @mig-25   Thanks for posting!  Please see this ticket \u2014 https://github.com/garris/BackstopJS/issues/518\nIt should resolve you\u2019re issue.\nSorry for the inconvenience!. @mig-25 sorry to hear it's not working.  It's hard to guess just from the information your provided.  Maybe you can look at the logs more closely for clues.   Try adding debug=true.  And try updating your version of backstop (there is a new version which provides more explicit errors). I just had a thought.   Did you try running pkill -f \"(chrome)?(--headless)\"\nThat would insure there are no zombie versions of chrome running (which can sometimes happen and cause weird failures).   Maybe that helps?. @ackmanx great solution\u2014 thanks for posting!. I think it\u2019s perfect for the examples directory.  You could name it handleBlinkingCursor or something like that.. How about right now -- does that work?  \ud83d\ude09\nJust published backstopjs@3.0.38\nThank you for your PR!. Can you please post a gist of your terminal session log?. @aliu145 it looks like you are importing backstopjs into your own script?  Would it work if you were to create a test directory and run backstop as a stand-alone app using the default config?. Please try the suggestion here...\nhttps://github.com/garris/BackstopJS#chromy-error-error-see-scenario-\npkill -f \"(chrome)?(--headless)\"\ndid that fix it?. Are your references and tests running in the same environment?  \nPlease post your config file.. @stephan-a   3.0.38 is the latest published version.  Just updated the Tag log.\nv3.1.2 is a beta version -- with a new UI.  (intended for comments -- not for prime time)\n```\n$ npm view backstopjs\n{ name: 'backstopjs',\n  description: 'BackstopJS: Catch CSS curveballs.',\n  'dist-tags': { latest: '3.0.38', beta: '3.1.2'\n```. One befefit of the current approach is that there is no chance of state bleeding from scenario to scenario.  (FWIW: Multiple selectors are captured without reloading \u2014 that op is very fast)  \nBut anyway, if you want to do some experiments to see if you can make the magic happen then you\u2019ll want to take a look at /core/util/createBitmaps.js as a starting point.  \ud83d\udc4d. Yes you can add --filter=replaceThisWithScenarioLabel\nCheck the docs.  It\u2019s there.. The filter parameter takes a regex string.  So it is possible to generate a string which would run all previously failing tests.  This is similar to how backstop approve works (only approves failing screenshots).   Take a look at the backstop approve module \u2014 you could use that as a starting point to create a new command named backstop retest.   But keep in mind \u2014 when changing css\u2014 part of what you want to do is ensure your fixes don\u2019t create new regressions in previously passing tests.  So eventually you\u2019d want to run backstop test one more time.. I am not suggesting that you manually execute this flow as an end user.  I am suggesting that you build the feature and create a pull request so everyone can benefit from your effort.. I don\u2019t know how to do that on windows\u2014 but I would gladly publish that in the docs if someone could validate the way to do it.\nIn the meantime, will installing chrome canary help at all?  If you install chrome canary on macOS it will coexist with your regular chrome and backstopjs will use canary by default.   You may be able to more easily create a windows command to close chrome canary?  Please post back your solution if you can make progress.  Cheers!. That looks great \u2014 thank you!  Feel free to PR if you get the chance.  Cheers.. Uh oh.  @anton-kulagin could you please reach out to @liamaharon for this?. This was fixed in https://github.com/garris/BackstopJS/commit/8dde56d5545df37f66225bba0680edc15d0df068\nPorts are polled when tests are started \u2014 creating a whitelist.  unused ports are explicitly assigned to each Chromy instance.\nDid not implement reuse of released ports \u2014 so port usage will map 1:1 with scenarios x viewports per test execution.   But this is fine for now.. Thank you for your PR.. You should be able to wait for any long running process -- simply use a chromy.wait() inside your onReadyScript and onBeforeScript.  \nSimple example here... \n https://github.com/garris/BackstopJS/blob/master/test/configs/backstop_data/engine_scripts/chromy/clickAndHoverHelper.js\n...and more advanced examples in the chromy readme.   https://github.com/OnetapInc/chromy. I am not sure what you mean exactly -- can you post an example of your use-case?. @djskinner You would not use the interface this way.  You would use chromy.wait().\n1)  Is chromy.emulate(\"iPhone6\") not synchronous?  I suspect you do not need to explicitly wait for this. \n2) On chromy.click I am guessing that you want to wait for some asynchronous API call or animation?  If this is the case then you will want to do a chromy.wait(functionWhichTestsForSomeWindowOrAppStateChange) e.g...\nchromy\n   .click(\"button.makeApiCallThenShowSuccessDiv\")\n   .wait(\"div.successDiv.show\"). Great \u2014 thank you!. Awesome!. What version chrome and backstop are you using.  And what version OS are you using?. Also please post gist of your config.. Going between environments is one of the hardest things to manage.  In many cases, antialiasing happens at a hardware level \u2014 and different hardware creates different dithering.  On Mac we mostly solved the issue \u2014 and going between environments is pretty seamless.   I don\u2019t know windows so well.  You might need to look into Turin off antialiasing in windows and see if you can make it work.  Another approach is to use a docker container.  Backstop finally has one \u2014 you might want to give it a try.  Please post back if you can get it figured out!. Pushed it Tuesday \u2014 it\u2019s at latest now! \nnpm install backstopjs\nThanks for posting!   I guess I can close this ticket now. \ud83d\ude04. Thanks everybody!  Yes and I have received a lot of direct messages as well. Cheers!. Ah, yeah.   Sounds like a zombie process.\nAre you on OS X?  If so, try running this...\npkill -f \"(chrome)?(--headless)\"\nHow\u2019s that?. I haven't done it -- but I don't see why you couldn't.  Try using the regular localStorage api in an onReady script. . Yes.  Check the documentation.  You can create a global onReady / onBefore that runs on every test.   Save your state to a file then import that and restore your state using the onBefore/onReady scripts.. I believe if a 404 is returned and you do not have any selectors in your scenario then the 404 page will be captured.  This should happen organically.  Did you try this?. The above code won\u2019t work.   Chromy is a chain.   It is evaluated before the try/catch runs.\nYou may be able to do an async/await \u2014 but I am not sure... please check Chromy documentation.\nBut also, I am not sure why you want a 404 screen capture.  That test fails correctly \u2014 is that true?\nWhy do you need a screen capture?. Interesting -- I did not know about this feature.  Did you find some documentation?  . Sorry for issue guys \u2014 this may be a Chromy issue.   You may want to try to repro in a Chromy-only test to rule out backstop first.. Are you saying the second page removeSelectors does not work?. I see.  What you probably want to do is not click but just create a new scenario with a unique URL for each page (state) you want to go to.   That is really the intended usage pattern.\n. The clickSelector feature is a convenience to simulate interactions usually associated with popups or other same-page state changes which are not reflected in window.location.href.  If you instantiate a new top level state (via click or other interaction) then everything about the scenario you just left are pretty much out of scope.  . LOL -- if you really want all features to be available on new pages you can inject this file...\nhttps://github.com/garris/BackstopJS/blob/master/capture/backstopTools.js\nsee example here...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L194. I had similar symptoms\u2014 I found there was an unnecessary process (I don\u2019t remember which it was) using ports that backstop used by default.\nTry setting config startingPort to 9300 to see if that might solve the issue.. Also, addressing #641 would also likely fix this issue.. This issue should be fixed in latest.   Can someone please validate.. @mike-malandra can you please confirm if asyncCaptureLimit: 1 enables you to run without exceptions?. I totally understand.  Are you testing a local app?. I am asking because I want to rule out the possibility that the application environment you are hitting is not dropping because of a burst of hits from backstop tests.  I want to be sure to rule this out \u2014 possibly by just creating a simple HTML test page and hitting that 1000 times with a backstop test.\nThere is also a potential memory issue we may need to consider.. Please do not test google.  Test a local simple html page.\nAnd you can test with debugging on \u2014 and also just check your local sever logs for 500 errors etc.. @mike-malandra  please see this post -- I believe it is the same issue you are having... \n https://github.com/garris/BackstopJS/issues/696#issuecomment-372815724\nIf possible, please serve a simple HTML page locally (no images - just some text)  -- you can just repeat the same scenario a hundred times using asyncCaptureLimit: 10. The idea is to stress backstop with many concurrent scenarios without stressing your server env.   This would enable us to validate that it is environmental.   You know, science.  \nYou can monitor memory usage with the activity monitor utility.. The recommended asyncCaptureLimit is 5.  Is it successful with that value?. Ok,  great.  Thank you for the data point!   Beyond 5 it starts to become diminishing returns.\n. Now that Backstop detects busy ports and we have established that backstop can run hundreds of tests with a asyncCaptureLimit of 5  \u2014 are we able to mark this ticket as closed?\nAny remaining concerns here?. @kenith That\u2019s great!  Thank you for testing and for documenting!  Cheers . Does your container work with a default backstop config?  What backstop version is your container running?. Thank you for figuring it out and posting back!. @Kenith how much RAM do you have on your machine?   Backstop tests will require a lot of memory -- especially if you have a lot of tests running concurrently.   Does the problem disappear or diminish if you set asyncCaptureLimit to 1?   Other users have addressed this problem by ensuring there is 4-8 gig of RAM on their test machine.  Please let me know if any of these suggestions help.. This is like caused by a process existing on one of the ports.  Resolving issue #641 would likely resolve your issue.\nYou can also check the docs \u2014 see troubleshooting for zombie-chrome instances.. Also see #659. Thank you for the feedback.   I also started working on a port check feature \u2014 hopefully this will significantly increase stability.. @kenith I completed the port checking feature last night and pushed the update to canary.   Would you please update your current version with npm install backstopj@canary and see if this solves the issue for you (with the async capture limit set back to 5)?    Please let me know if you can get a chance.  Cheers.. sure no problem -- enjoy the festival! . Thank you for posting your solution.  Cheers!. Unfortunately it\u2019s going to be a bit of work to do that.  You\u2019d probably be better off to generate a backstop config object as an output of your protractor flow \u2014 then just require(\u2018backstop\u2019)(\u2018test\u2019, yourgeneratedconfig).  Something like that. \nThis approach would repeat the screen capture step \u2014 but it would be a straightforward exercise.     Backstop tracks all the assets in a particular way,  it\u2019s fairly complex \u2014 so you\u2019d have to learn a lot of backstop internals to skip the screen capture step.. Please check the docs -- there is a sanity test that can help you figure out if your ENV/OS can run backstop...\nhttps://github.com/garris/BackstopJS#sanity-test-does-backstop-work-in-my-enviornment\n. Hi @lmakarov!   Would you mind PR-ing?. Oh crap!  Thank you for reporting!   I forgot to change this.\nI think twenty-twenty updated my pull request and their NPM package should work now.   Are you able to update the backstop package.json and test this?  . FIXED.  \nPlease verify.\nThanks.. Also, please update your backstop \u2014 we released a new version (3.1.15) yesterday that should address this bug.   . @kevinmpowell  thanks for reporting!   The Docker tags are supposed to generate on each GH commit.  I just checked the docker log and there saw that the last few builds broke.  I don\u2019t know if I will have time to fix this today, but if you can troubleshoot and PR I would totally pull it in.  No problem if you can\u2019t \u2014 I\u2019ll try to get to it as soon as possible.  Cheers.. Hmmm,  Just took a look -- Maybe related to this...  https://github.com/garris/BackstopJS/issues/669. BOOM.  FIXED!\nv3.1.17 just built itself.   \nThanks again for reporting!\n. \ud83d\udc4d. I think this is possible but you may need to post an issue on the chromy repo for support.   https://github.com/OnetapInc/chromy   \nPlease post back here if you can figure it out!\nCheers.. Backstop waits for the load event to add event listeners.   So if you want to trigger at onLoad then you don\u2019t need anything else. . Backstop will wait for the selector.  If the selector is not found an error will be thrown.  Is that what is happening?. I see.  So, this is a grey area for BackstopJS.  Page redirects like this aren't really supported.  The main use-case is testing UI states -- changing the URL is essentially invalidating your current state and loading a new app state from scratch -- which is out of scope. If you want to visually test the next page then simply create a new scenario with the correct URL and just test it.  . This is not how it should work.  It should work the way you expect \u2014 only failed images are copied.  Crap.   Really?   Can you double check with a super simple example?. ok -- phew!   Good to hear.   Thanks for checking.   Cheers.\n. ^^^ there also may be some information about cert handling on the chromy repo https://github.com/OnetapInc/chromy. Hmmm.  as far as I know this should not be a limitation of using docker.   Are you sure your JS config is formatted correctly?   Does that file work locally?. Thank you for posting your findings!   Unfortunately -- I am not an expert in the docker implementation -- so hopefully someone else can advise.   One thing I can recommend -- please make sure you are running v3.1.17 or latest -- as those have important bug fixes.  (if backstop still displays the wrong version number then you probably need to update your container). No.   My instance says v3.1.17. 1.  Backstop expects an object back.  Can you do this?\nmodule.exports = function (options) { return 'the options are ' + options } ('some options');\nThe other way to go about this is to include backstop into whatever script you're generating your data with.   Please see https://github.com/garris/BackstopJS#integration-options-local-install\n\nPlease check Docker docs to find out how to pass parameters. My guess is that anything you pass with the --argument=value pattern will be parsable by minimist inside your backstop.config.js file.. holy crap.  false alarm.\n\nI think I need a vacation.. @cactusa I am sorry -- I don't really know enough about the docker environment to help you here.  If chrome processes close right away it could be a network or authentication problem or there could be an exception which causes chrome to actually crash (and become a zombie).    Other users have discovered lack of ENV memory causes unexpected behavior as well.  see https://github.com/garris/BackstopJS#issues-with-chrome-headless-in-docker\nIf it were me -- I would try to simplify as much as possible to troubleshoot.   Use a default configuration (using backstop init), make sure that works first.   Then modify backstop.json  change name to backstop.js and add the necessary export declaration to ensure that simple .js files are working.   (here is an example of a working .js file https://github.com/garris/BackstopJS/blob/master/test/configs/backstop_features.js -- for example only -- yours should be much simpler).  \nIf you can get to this point successfully it means that there could be something wrong with your configuration script.\nIf you can figure it out please post back here.  \nBest wishes.\n. Yes.  these are good points.   One thing I am suspecting, there are some relative paths in your config -- could there be a directory mapping issue there?   Again, my docker experience is very limited -- so I don't really know if this is an issue -- just a guess.   Good luck!. Webpack is required as a runtime dependency.  Would be nice to know if webpack 4 is compatible with our implementation.. Sounds good!. I think your issue is related to this... https://github.com/garris/BackstopJS/issues/518. Set \"debugWindow\": true in your config and you can watch chrome run the test.   Maybe you need to add a postInteractionDelay if your element has some transition time?   You can also create a test project somewhere and install backstop locally to play with this --> /test/configs/backstop_features.js    That test covers most backstop features and includes hover tests.  Follow the suggestion here if you want to try that...  https://github.com/garris/BackstopJS#smoke-test-are-backstop-features-working-ok . @jalbr74  Thank you for this observation!   For things like hovers we generally like to see the whole layout -- this will help you find things like z-index or overflow hidden issues.  I believe that it is not necessary to capture the whole document -- but one would want a large enough area such that conflicts would be found.\nAlso, some hover techniques (e.g. hover on focus) may conflict with some backstop/puppeteer feature internals (I have seen a few rare cases -- usually not a big deal). So generally, if you are depending on quirks or some less common behavior you may want to use as many defaults as possible when setting up your scenarios -- to rule out some subtle issue.   \nCheers!\n. There is a height limitation set by chrome-headless.   Please check Chromy lib \u2014 I think there is a tread about this.. Post interaction wait needs to be a number (remove quotes). @matthiaskomarek Thank you for your patience and thank you for your PR.\nPlease take a look at this mock. I would like you to add the test url (and the optional ref url) laid out in the following way.   Below is the CURRENT design.  Above is the proposed NEW change.  Please shorten the links so that the link text can flow onto the same line as the optional DIFF results.  They should be styled such that the url heading should be grey (like the other headings) and the two links can inherit your existing link style...\n\n. In backstop \u2014 react is bundled by webpack during development.  Afterward, it is not used.   It seems unnecessary to cause global conflicts for a library we use locally this way.\nQuestions:\nDo we gain anything by calling it a devdependency?\nAlso, why should backstop cause an issue for other apps?  If backstop were listed after react in a package.json wouldn\u2019t its version of react be included locally (and not be used by the parent app?)   \nReferencing by order method should totally work for us since react is only referenced at build during backstop dev.\nAlso, I  am probably wrong about something.  \nComments?. @longstaff    I just discovered that #748 breaks local development on the web report.   I decided to revert because it seems that this solution needs just a little bit more work.   Would love it if you or someone else could take another stab at it. . Please try a test with asyncCaptureLimit: 1\nDoes that run without errors?. Does #670 relate to your issue?. Also, I noticed above you set asyncCaptureLimit: 0.  What are your results for asyncCaptureLimit: 1?\nAlso,  do not attempt to test google.  Please troubleshoot with a simple local html page to start.. @krisdigital HOLY CRAP -- that is awesome!  Thank you for starting a puppeteer fork!  I have cloned your fork and added it to MY BackstopJS repo so others can collaborate.   I have not tried it out yet but I am happy it's working for you.\nDo you plan to do more work on this integration or should I solicit help from the community to bring it up to feature par with chromy?\n. @krisdigital that all sounds great.  We most definitely want to ADD Puppeteer not replace Chromy.  so we'll want to create a unique code path for Puppeteer starting with...\n\nI'll continue to track your fork on the puppeteer branch and let others know they should coordinate with you.  And please don't feel the need to contribute anything if you get too busy with other projects.  We don't want to deprive the world of great open source AU plugins! \ud83d\ude38\nPlease let me know if I can help in any way.  Cheers.\n. Just bumped to 3.2.0 and pushed to NPM!\nYou can...\nnpm install backstopjs@beta. I am going to close this ticket and move to #704 . Thanks!. I am totally supportive of adding a puppeteer engine option!  If you want to create a PR I would gladly review it.\nThat said, if you have any near term questions regarding Chromy -- you can post issues on the chromy page.  Shinji is a great contributor.  \nCheers.. boom!   Puppeteer is in development...\nhttps://github.com/garris/BackstopJS/tree/puppeteer\ncloned from...\nhttps://github.com/krisdigital/BackstopJS/commit/b4213d93cc482cd6789f341445571359ef177046\n. Please run the sanity test here to establish that there are no environmental issues...\nhttps://github.com/garris/BackstopJS/blob/master/README.md#sanity-test-does-backstop-work-in-my-enviornment. Hi Jamie,  someone created a similar project...\nhttps://github.com/anton-kulagin/Backstop-Remote/blob/master/README.MD\nMaybe that is a good starting point for what you\u2019re trying to do?. Thank you.. Just bumped to 3.2.0 and pushed to NPM @beta!\nTESTERS & COMMENTS! \ud83d\ude4f\nnpm install backstopjs@beta. @krisdigital  this issue will probably be addressed by the work happening in #712.. @aka84 we are still working on the migration\u2014 once all of our feature tests pass we\u2019ll be looking at why some parallel cases seem to work fine but others have issues.   This could be a performance issue in backstop\u2014 but it could also be on the network, the server or something else in the environment.. \ud83d\udce3 Puppeteer branch is merged to master and pushed to npm @canary! \ud83c\udf86 \nnpm install backstopjs@canary. @krisdigital or @here Anybody know how to handle CSP issues with puppeteer?  I am getting errors like...\n```\n## Error running Puppeteer ######### Error: Evaluation failed: EvalError: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive ...\n```. @VesterDe unfortunately no.  same exact behavior.  \ud83d\ude22  \nThis is weird -- I didn't have this problem with the Chromy engine. \ud83e\udd14. Thanks guys!  Fixed by adding this onBefore script \ud83d\udc49 https://github.com/garris/BackstopJS/commit/67801c259f340c986bd0c25281a7eb5a79c7bc25. I am hoping this will be a much better fix in the near future! https://github.com/GoogleChrome/puppeteer/pull/2324. @vesterDe   Thank you for taking time to investigate this!. Looks like puppeteer is at 1.4.0.  Yes, we definitely want to bump this.. Is this fixable by adding a Math.floor() to our capture flow?. Here is where selector screenshots are called by backstop...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/runPuppet.js#L365\nYou could look into changing this to a different puppeteer call where you specify the screen coordinates explicitly using rounded boundingBox values.\n. You using latest or a particular tagged version?\n. hmmm.  No idea here.  Especially because it started happening on an unchanged version.  How is the environment -- any changes?  Did chrome just update?   Maybe post your log file?. Also,  this could happen if your app is hanging.  Network?. Yes.  In my experience setting asyncCaptureLimit > 5 does not run well \u2014 I am pretty sure this is a memory issue \u2014 but it may also be dependent on other environment limitations like network.  So 5 is max in most cases. \nAlso, at work, when we run our server locally we find that our dev environment will drop too many request bursts.  So for some apps we need to use asyncCaptureLimit: 1. I have seen some evidence that puppeteer may address this issue.  It is definitely faster.. Scrubber bug is fixed with v3.1.21\n. @matthiaskomarek   Yes -- sounds great!  \nPlease note:   Currently, if you are in the list view and click a test image, the item view opens with test selected.  If you click a reference image then the item view opens with reference.  Would be great to keep this behavior consistent with the DIFF as well. . :+1:. @mikkelrom    Dude,  it\u2019s in @latest!   Great feature.  Thank you!  \ud83d\ude3a. Fixed by https://github.com/garris/BackstopJS/commit/1b571c35575943cba4332115650dac3fce5c5000. Ok.  Just tested this.  Almost there!\nThere are a few subtle cases which need handling.\n1) selectors which exist but are hidden\n2) selectors which don't exist\nThese are handled the same in phantom and chromy options.  Here is an example of the chromy handling...\n\nThis copies stub icons representing those states so that changes in selector visual states can be detected.  E.G.  reports look like this...\n\nand...\n\nIt would be great to add a third handler which would display an icon for any other error.   Currently our reports show nothing if some other unexpected error is thrown while attempting a capture. \n. Yeah.  I think the fix is pretty easy too.  Feel free to ping if you run into any difficulties \u2014 Cheers!. Just FYI -- I updated the errorState graphics here... https://github.com/garris/BackstopJS/issues/716\nShould not affect the fix here -- just changing the way it will look.. Great Job!   Puppeteer branch is merged to master.\nhttps://github.com/garris/BackstopJS/commit/72d0b0534927e8b4143991b4a2c7b11932833c8c. Thank you!  I am traveling at the moment \u2014 will test this as soon as I get a chance.. @rbayliss hi there.   This is actually working as designed.  There is no global option for those props.  . closed by https://github.com/garris/BackstopJS/commit/a2fc2d6a4ffa893115a5ca0f62fad160462451e8. Fixed by https://github.com/garris/BackstopJS/commit/72d0b0534927e8b4143991b4a2c7b11932833c8c. Great work!  Big big thanks! \ud83d\ude4f . Thank you ever so! \ud83d\ude3a. I don\u2019t remember the original reason for using that temp file \u2014 but I suspect it\u2019s no longer necessary\u2014 or it can be saved with the generated test files and would not have to be cleaned up.. I think this may have been required for the Casper implementation\u2014 which i think can be removed at this point anyway.  \nIt would be great if you want to take a stab at refactoring here.. Can you post a gist of your config verbatim?    Also, that error usually means that the selector backstop is waiting for was not found \u2014 have you tried (just for troubleshooting) using a long delay with no selectors?  For that matter \u2014 have you tried just a simple static html page with no JS or iFrames?  This kind of thing would rule out if it\u2019s actually heroku or maybe something related to your webapp.. Yup.  The config looks good too.   \nJust a suggestion \u2014 you might be able to grab some valid cookies, stash them in a file and use those instead.  That method tends to be reliable as long as they are valid for a reasonable duration.   There are some tips for this in the docs.  . Thank you for reporting.  I think you we can leave this open for a bit.  Cheers.. @cactusa Yes, this is an important feature that should be added.  . @vesterde  yes.  I think so.  I assume you tested and everything worked as expected?\nIt would still be nice to add notes to the documentation \u2014 if no one has time I will get to it when I can.  \nThank you!. Oh \u2014 you don\u2019t have to write the entire puppet documentation.  Maybe just a note related to your PR that engineOptions can also be used to send a custom config object to puppeteer.  A short config object example would be helpful too.  Thanks!. ... and yes,  in the readme \u2014 just to let others know that the feature is there.. Hi @deap82 \ud83d\udc4b -- Thank you for posting!   \nThis error indicates that Chromy most likely unexpectedly failed.  When this happens with engine: 'chromy' the error handling in this case is not great and the web report does not get correct data. \nSo, yes, I know, this is a frustrating behavior \u2014 this was not the case with phantom/casper which of-course had other limitations \u2014 but rarely crashed in such a way.   There are a few threads here around troubleshooting these kinds of errors -- but instead of referring you to those I would like to ask if you have you tried the new engine: \u2018puppeteer\u2019 option?   this is in canary now and very very close to release.   see here...  https://github.com/garris/BackstopJS/issues/704  \nnpm install backstopjs@canary\nIt would be very valuable for me and probably many other users to know if switching to the puppeteer engine would improve reliability in real-world cases (other engineers have said it is much more stable).  So,  if it is possible for you, I would kindly ask you to please consider trying this out and reporting back your results.   I am happy to walk you through making config changes if that will help.\nObviously, backstopjs is completely free -- so your contributions are greatly appreciated! \ud83d\ude4f\n. Hi Guys,  thank you for testing this out \u2014 I am glad to hear that the worst problem we have is overly verbose output! \ud83d\ude04\nAs a matter of formatting, logs should probably be spit out on one line starting with the classifier then the string on the same line.   Also as a default, I think backstop should only pass ERROR and INFO.  If the config has debug: true then I think it\u2019s sensible we pass all log messages.\nHow does that sound? . Let\u2019s also add this to the backstop_feature test.. Thank you for documenting the issue.  I would gladly pull in a fix if someone were to submit it.. Thank you @kennith for posting the solution.  We have pushed an update in the latest version with puppeteer option.  Errors are now correctly handled and surfaced in the reports.. Uh oh.   I pushed a canary version out yesterday.   What version did you install?. Thanks for reporting!   I just updated the readme.   \nThis worked for me in Powershell...\nmkdir backstopSanityTest; cd backstopSanityTest; npm install backstopjs; node ./node_modules/backstopjs/cli/index.js test --config=node_modules/backstopjs/test/configs/backstop\n. Please let me know if you have a better (more win-centric) suggestion.   Cheers.\n. And also -- you'll want node LTS.  >=8.11.1. Thanks for the follow up.  Cheers!. @aka84 thank you very much for doing this comparison!   The current intended puppeteer behavior is supposed to throw an unexpected error if a case like this happens.   So,  this is definitely a bug.   I would definitely love to see this fixed and I have been putting off closing #704 and announcing an official release of puppeteer until this is addressed.\n@krisdigital \u2014 \ud83d\udc46 any ideas here?\n. @krisdigital \u2014 thank you so much!   Will follow up soon.. The puppeteer version is now fixed on @latest.  The error messages are also being sent to the front end -- now I just need to add this information to the layout.   \nnpm install -g backstopjs@3.2.11. Hello All, Puppeteer errors are now correctly surfaced in the web report...\n\n. Thank you for finding this!  I will fix this ASAP.. @aka84 ah, so did you approve that error state?  That is actually legal! \ud83d\ude04  \nYou are allowed to check for (and approve) selectors not being available.. Did you run reference at any point?    You had to run reference or approve for that reference image to get there.   If you did not do either of those things then there is an error.  Otherwise this is working as designed. \n. I understand your thinking \u2014 however, this has not been a primary use case as of yet.\nThat said \u2014 i think this is a useful feature and it would be very easy to add.   How about, at the end of a backstop reference flow, we look though the results collection to see if there were any client errors \u2014 if there were any errors we exit with a 1.  Or,  you could add this behavior to reference and test commands behind a config flag (e.g. failOnException).  I think that would be cool.\nOr maybe simpler for you on the CI side, you could just grep for error messages that pop up during the run and decide specifically what kinds of things you want to check for.\nDo any of these sound good for you?. @igorpavlov Sure, So then you would want failOnException: true to fail an individual scenario if there were any exceptions.  (even if the comparison passes)   Right?   This seems like a useful feature.  What do you guys think?. Yes.  That is very specifically exactly what I was thinking. . Thanks for posting.  Hopefully someone can follow up with some insight.   Cheers.. @silentHoo glad it\u2019s working for you.  Thanks for posting your solution!. @krisdigital This is super -- thank you for fixing!   I just added some more error handling so that if any of the scenario interactions fail we will see the correct error graphic.  I've also added any engine errors to the report data -- so now the exception data is actually making it to the browser report.  \nNext is to add the exception data to the layout.   I will try to get to that soon.   Thanks again for all your help.  Cheers!. Sorry about that -- but thank you very much for the PR. . Thank you for submitting \u2014 I think this feature was already added here... https://github.com/garris/BackstopJS/commit/5cd0f4e6533113abb49a337ff239f6798cf3957b. Hi all, we are seeing some issues with some chromy instances failing (often when a selector is missing or there is some other unexpected condition) \u2014 I would recommend ensuring you have at least backstopjs@3.2.12 use the engine: puppeteer option.  See the docs for more info \u2014 this version is much more stable.. Also see here \u2014 https://github.com/garris/BackstopJS/blob/master/README.md#chrome-zombies. This problem should be completely resolved using puppeteer engine with backstopjs@3.2.15.   Please reopen if there are still issues.. Hi @KenCoder -- thank you for the report.  I am recommending that chromy users switch to puppeteer if they run into issues like this.  Also, There were some improvements pushed to NPM today -- AFAIK puppeteer should now be at parity with chromy (with many perf improvements)\nPlease LMK if you see any missing features.  Thanks!. Yes.  this is totally possible.   There are many many many ways to do this -- here's an example of an onReady script you could add using the puppeteer engine:\nmodule.exports = async (page, scenario) => {\n    await page.waitFor(<your first selector>);\n    await page.waitFor(<your second selector>);\n    await page.waitFor(<your nth selector etc...>);\n};\nYou can check this directory for other example files depending on your engine https://github.com/garris/BackstopJS/tree/master/test/configs/backstop_data/engine_scripts\n. This has been merged to master.  Please reopen if there are any issues.. This is a very nice improvement.  This was overlooked when we migrated from chromy to puppeteer.  Thank you!. Yes, would be great to fix the garbage and also to add the command to the documentation -- these two issues are probably the main reason that no one is using it.\nI would hold off on failing travis since it will end up being unplanned work for me. \nOn that note however, I would really love to run the sanity-test and the smoke-test on travis -- that is something that I would really want to know is working when we push to GH.. Sure, so the unplanned bit will be me having to fix Travis reports if someone forgets a semicolon somewhere.  It\u2019s not a big deal \u2014 but it would be adding complexity for a problem that really isn\u2019t a problem.   On the other hand,  if the feature tests fail I really do want Travis to complain about it \ud83d\ude04\nThe current master branch should have a fix for the failing feature tests you mentioned.  I was using that to test that error reporting was actually fixed and I forgot to roll the config back before bumping versions. \nBy the way, thank you very much for the PRs!. The internals work like this /puppet/i.test(config.engine) \nSo puppeteer is valid.. I am not sure I understand the issue.  Capturing very very long pages like this one  is not really supported.. This should be pretty easy.  Please see here... \n  https://github.com/garris/BackstopJS/blob/master/test/configs/backstop_features.js\nThis this what we use to test that our major features are working in puppeteer.  The current version includes all the interaction helpers etc.  \nDocumentation here https://github.com/garris/BackstopJS/#smoke-test-are-backstop-features-working-ok\nHope this helps!. \ud83d\ude04 ok thank you.\nBTW:  if you are running into rendering differences you could try adding this to the settings...\n\"args\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"--no-sandbox\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"--disable-setuid-sandbox\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"--disable-gpu\", \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"--force-device-scale-factor=1\", \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"--disable-infobars=true\"\n\u00a0\u00a0\u00a0\u00a0]\nIn particular, \u2014disable-gpu when used on Mac and Linux may fix the font rendering issues.   It does seem to work across macOS boxes and may work across Linux and Mac.\nIt would be good to know if this in fact can solve the issue.  I am happy to rerender the images using that setting if you don\u2019t have a Mac handy.\nAnd again, thanks so much for your effort \ud83d\ude0a.. Oh crap \u2014 sorry man.   So busy...   \ud83d\ude3f\nI have a day to work on the library on 5/18 \u2014 but hopefully I can this  before that.\nThanks for your patience!. Thanks for this!. At the beginning of each scenario you will need to set up/restore state.  There are many ways to do this \u2014 you can check the docs & examples for suggestions on how to capture/set cookies \u2014 this is probably what you\u2019ll need to do.   \nPlease post back here with your solution \u2014 I am sure others would like to know how you solve it.\nCheers.. Yes.  That is correct.   But in this case, you will have to ensure your tests are running sequentially (not in parallel for this to work consistently e.g. asyncCaptureLimit: 1).   \nIt may be best to pre-save your cookie state(s) and load them as needed as opposed to generating them during testing -- which is totally possible -- but can slow down the tests and add some uncertainty.. Hi @kencoder,  thank you for the suggestion \u2014 I didn\u2019t implement those particular tests, but I\u2019ve worked with mocha a long time and would rather not switch at this time.  You can skip the test if that makes it easier. Potentially we are not even using that code anymore (the project is moving very very fast and things go out-of-date very quickly).  \nThat\u2019s why I am more focused on e2e testing \u2014 the stuff you\u2019re working on is much more important than unit tests.\nSo, yes, feel free to skip that failing one.\nThanks!. Hi,  I have seen this before.  I am pretty sure this is a puppeteer issue \u2014 also it is not consistent.  In some cases capturing will fail with headless option = false \u2014 but not always.   You can peruse their GH issues \u2014 find an issue that matches this symptom and you can add a +1 or commit a fix.. maybe try this way?\n\"hideSelectors\":[\"button[title=\\\"Greyhound\\\"]\",\"div.cb-carousel\"],\n. Hmmm.  That may be an implementation bug in runPuppet.js -- might want to check here...\nhttps://github.com/garris/BackstopJS/blob/master/core/util/runPuppet.js#L179-L197. Ok, yes.  I just looked at this.   It\u2019s a bug.   The assignment of the selector to window._backstopSelector Is out of sync with the operation.  This should be refactored.   Maybe added to backstop tools and run synchronous on the client (which would be faster) \u2014 or just sequenced correctly in this block.\nVery good catch!  Thank you!. Also this case should be added to backstop_feature tests.. Is your issue testing a reference screenshot going from linux to mac?   \nI have found that ignoreAntialiasing only works in some situations.. Hi Stephenbe!   Hope you are well.\nAre you overriding the engine flags?   --disable-gpu is the one which has the most effectiveness in my experience -- but I am on a Mac environment.   Another thing you can try is to use the Docker version.   My understanding of the issue is that anti-aliasing uses a random number generator to create a dither pattern for text.  This happens on the OS level and if a GPU is available it will also be used -- and add complexity to the dither pattern (each OS uses a different random seed).  Disabling the GPU will simplify this pattern across similar environments.   Using this in conjunction with the docker version in theory will eliminate the issue since all testing will be done on the same OS.   But I also have limited experience with the Docker version so I cant advise you as to weather it will work for your situation.\nAll this aside, I guess I didn't really answer your question about ignoreAntialiasing.   There have been many changes in the past 6 months but I don't think anything changed with this property.   And this process should be the same for all engine settings.  So, \ud83e\udd14...\nI am sorry if I am not helping here.  \ud83d\ude1e  \n. Yes.  This is discussed in the docs.. Looks like in your example there is an element which triggers a sibling DOM element to be generated directly below.   So you could probably do...\nselectors: [\"#monTooltipLink + .popover.tooltips\"]\nsee here... https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_selectors. I see \u2014 you may need to wait for it to generate.  . Many apologies.   I will publish this batch to NPM on (or before) 5/18. . Vivek, I have just pushed a new build to NPM. backstopjs@3.2.16\nPlease pull that and validate that it is working.\nCheers.. This is likely a rounding error \u2014 perhaps changing width by a few pixels will improve the issue?. Interesting.  What does this setting do?. What would the retry feature do?  How would it work?. FWIW:  the current version using the puppeteer engine resolves the parallel capture issue.   That is available now.. @AkA84 -- Just to sure, can you confirm you have set \"engine\": \"puppeteer\" in your config?   At work we have an overly thick web client and middle tier which we run locally while developing.  When I run the chromy engine \"engine\": \"chromy\" in parallel on a test file with say 100 tests I would consistently see a few dropped scenarios.   However, I can run a similar workload on a very thin client and get no dropped scenarios.    When we moved to puppeteer this problem disappeared entirely -- we are now set \"asyncCaptureLimit\": 20.   We found this to be the case across multiple testing environments here.   So, this obviously points me back to the BackstopJS/Chromy integration -- or possibly backstopTools.js which runs in the client.  Or maybe we have either a memory issue or a networking issue which occurs when the client is stressed.\nI completely understand this retry request from a practical view.  But I am also conflicted about this feature -- I feel it would be better/correct to put energy into understanding why parallel capture fails but sequential capture doesn't.  Is it a state contamination issue?  Is it a memory leak?  Is it an OS resource?  Is it network or server throttling?     I would rather put the energy into understanding the root cause and create a more stable system.   \nI really don't want to add a feature to compensate for the fact that the backstop is broken.\nOTOH -- If the retry feature was purely a request to compensate for a client app deficiency that would feel a little bit better -- especially for prod testing where we actually are do have legit variance.   In our case we have backstop on a cronjob which runs tests every 5 minutes.   If three in a row fail then our release engineer gets a notification.\n. Ok.  The crowd has spoken.   I am happy to bring in the PR if someone puts one up.\nCheers.. @aka84  \u2014 what happens when you test a simple local page?   (no JS)\nWhat is your os & & node versions?. Also, what is your hardware profile?\nhttps://github.com/garris/BackstopJS/issues/770#issuecomment-390197942. this works for me using the puppeteer engine.\n```\n// onReady script vvv\nmodule.exports = async (page, scenario, vp) => {\n    console.log(\"SCENARIO > \" + scenario.label);\n    await require(\"./clickAndHoverHelper\")(page, scenario);\nconst selector = \"#someElementInAScrollableDiv\";\nawait page.waitFor(selector);\nawait page.evaluate(selector => {\n    document.querySelector(selector).scrollIntoView();\n}, selector);\n\n};\n. Oh -- it's pretty similar -- the main bit is\ndocument.querySelector(\"#someElementInAScrollableDiv\").scrollIntoView();\n```\nso just do that in an evaluate.\n. You can also add a waitFor also to ensure the element is there before you attempt the scroll.. Oh, sure. That might be nice.  You could build it into the helper that ships by default. \nAre you familiar with this file...\nhttps://github.com/garris/BackstopJS/blob/master/capture/engine_scripts/chromy/clickAndHoverHelper.js\nYou could add a new prop called scrollToSelector  and then add the wait and scroll bit before the hover and click blocks.\nWe would want that for puppeteer as well.\nAnd you could add the new prop to the docs.\nWould be great if you can get to it.  Cheers\n. Yes.. Can you share your config file and some screenshots of what you are running into?   I would need to understand your use case better to give you a good answer.\n. For this scenario, what is your selectors value?   Is it the parent element?  Or the child (offscreen) element?. What happens if you don\u2019t scroll in this case?  Do you get a completely blank screenshot?  An error?  An all white screenshot?  \n. Ok.  Thank you for testing that.   \nI do see that it makes sense to auto-scroll in your case \u2014 but,  I don\u2019t think this makes sense in all cases.  So, I don\u2019t think we should \u201cauto-scroll\u201d child elements as a default.  However, adding a convienience method for this behavior makes it very easy for anyone who needs it.   If you can do it I am sure it would create developer happiness\u2014 so I hope you will consider adding the feature.. That\u2019s great \u2014 thanks for implementing!   So, please make a pull request.  Go to the \u201ccode\u201d tab on your github repository for your backstop fork.\nJust above the repo contents list on the left you\u2019ll find the create pull request button.   Click that and follow the instructions.  Then we\u2019ll start the review process. Cheers. \ud83d\ude42. @mirzazeyrek may be able to point you to some documentation.. This is all we have so far.  Would be great if someone could create a step by step tutorial.\nhttps://github.com/garris/BackstopJS/blob/master/docker/README.md. Is this an issue for all windows users?. Is this an issue with puppeteer\u2019s install or with backstop?. Ok let me try.. Ok.   I just successfully ran the backstopjs sanity test from scratch on windows 10...\nFrom the docs...\n\nIt installed backstop on the desktop and ran in win10 without issues...\n\nQUESTION:   Are you guys on node version 8 or above?. Did you try running the backstop sanity test script from the troubleshooting section of the docs? . @tyler36 Ok -- got it -- thank you for following up!   \nFWIW: this looks like an unusual condition...\n\nError: self signed certificate in certificate chain. Thanks!\n. Can you just require/import your config at this point?. What npm/node versions are you on?. Upgrading to node 8+ will fix the issue.. If your tests are crashing then you may want to try using the puppeteer engine instead of Chromy.  It is much more stable.. Can you post a screenshot of all three images in the report?. Here you can see that the images are different sizes.  The distortion comes from the comparison algorithm not knowing what to do with that.. Yes.  Totally known.  Backstop doesn\u2019t support comparing tests where images are different sizes.. Please follow the instructions below to do a clean install of a reference implementation that runs puppeteer.   Modify the config from there to suit your needs.\n\nhttps://github.com/garris/BackstopJS/blob/master/README.md#troubleshooting. No problem \u2014 will do this tomorrow.\nQuestion\u2014 does puppeteer install on windows correctly if you just install with npm install puppeteer into some directory?  I am not clear if there is a problem with puppeteer or the backstop installation.. Hi @aliu145 -- very sorry -- I had actually started a review but ran out of time and never submitted the comments.   The review is up.  Please take a look and feel free to reach out if you have questions.\nAlso -- did you finally resolve your installation issue?   Generally we like to test our work before posting a PR.\nThanks!. See my comment for the Chromy script issue.. Ok Ms Anna,  Fixed and Merged!\nFinal changes here \ud83d\udc49 https://github.com/garris/BackstopJS/commit/128c64721257cd95206aa5041bceff7a13798984\nPlease test & validate.. If you get an environment that can run node apps then yes \u2014 e.g.  it runs in Travis.   I am not familiar with Browserstack though.. Yes. You would need to integrate webdriver.   It\u2019s doable.  There is an older PR for this but it\u2019s been abandoned.   Feel free to pick it up.. @ataylorme Oh man -- this looks great.  Thanks for the PR.   Cheers!. I had to revert this because opn was hanging -- see screenshot.   Did this work on your machine?\n\n. Hi there,  thanks for the screencast \u2014 but this doesn\u2019t show the CLI issue.  The browser opens for me \u2014 but the CLI doesn\u2019t return \u2014 it just hangs and needs to be exited manually with ctrl+c.   Can you take a look?. Ah ha!  \ud83d\udc4d\ud83d\udc4d   Two thumbs up.   Will pull this in as soon as I can.\nAlso \u2014 would love to hear about your use cases \u2014 or see presentations.  I\u2019ve been wanting to get more of his stuff out there.. can you please post your config file?\n. Boom -- you got it.  \ud83d\udc4d . Hi There Angela!   Looks like your engine is set to Chrome?\n\nAlso, FWIW: The scripts were reorganized in the latest version (to better organize for multiple engines).  \n\nDoes this help?. Yes -- and set engine: 'casper' too.  That will fix the issue.. Ah.   Phantom is quite old.   I highly recommend starting any new projects using the latest version of backstop with engine puppeteer.   That is going to give you super consistent results and double the speed.. What happens if your selectors prop is set to body?. please post your config.  and version info.. Has anyone tried bumping the puppeteer version in backstop?  Perhaps there will be some improvements?. \ud83c\ude01. \ud83d\ude06. I think someone is reporting a large pole stuck in the ground somewhere?  . @rickdroce great to hear that you've integrated backstop+docker+jenkins!   We used to have a config property for silentOnFail but it was removed in Version 2.  I don't know Jenkins well -- but I thought you could ignore the result of any process?  I would try to check again and make sure you cant do this in your Jenkins config (or if your running a bash script you should be able to do this).\nAlternatively you could add a --silent flag to backstop and switch the return value here...\nhttps://github.com/garris/BackstopJS/blob/master/cli/index.js#L46 .\n. Hi @kenith,  this looks good \u2014 but maybe this belongs in the examples directory \u2014 instead of under ./docker/?. I am not sure that users will think the same way.  A Jenkins user may actually expect to see the Docker config inside a top-level Jenkins directory (e.g. ./jenkins/docker/ or even ./jenkins-docker/).  \nBut maybe more important, this Jenkins/DooD approach is a (very useful but) very opinionated implementation -- which seems to be very good as an example but perhaps not ready for production use because of the security concerns (e.g. giving Jenkins sudo permissions and docker-outside-of-docker) -- whereas the existing Docker implementation is intended for general use and therefore given 1st class status inside the repo.\nI think this implementation serves as an excellent example -- it could probably be a very useful blog post as well.   I would gladly highlight this in the documentation -- I think it would be very very appreciated by Jenkins users.\n. They are examples.  Intercept images can potentially allow image stubbing.  Csp can potentially allow restricted assets.   I had some trouble using these however because of a bug in puppeteer\u2014 I don\u2019t know if this has been fixed.. Can you try upgrading to the latest version of backstopjs?   Is that an option?\nAlso please share your config.. Not sure if this is a backstop issue or a puppeteer issue.   Can you try this with a vanilla puppeteer script?. Oh ok.  Then what I mean is to..\n1 make a temp directory somewhere. \n2 Install chromy into that directory.\n3 Creat a script that should open a few pages (as opposed to tabs) and see if it works as expected (when setting a chrome path.)\nThat should tell you if it's a chromy behavior or it's something that backstop is doing.\nYou could also just go to the chromy repo and pose the question there.   See what they say.\n. @kyleoliveiro Thanks for posting!   I just tested this and realized that there were issues running docker with the default config -- I don't know if your question was related to this but I have just pushed a fix for that anyway.  So thanks for the report.  \nTo directly answer your question -- running in docker is pretty easy.  Here is a super fast super simple tutorial...\nFYI: Here is where the official image lives...\nhttps://hub.docker.com/r/backstopjs/backstopjs/\n1) Make sure docker loaded and running in your env.  On Mac I've enabled the menubar option and it looks like this...\n\n2) Make sure you have the latest backstop image...\ndocker pull backstopjs/backstopjs\n3) Create a test directory on your desktop (or wherever).  cd into there and initialize backstop...\ndocker run --rm -it -v $(pwd):/src backstopjs/backstopjs init\nNow your directory should look like this...\n\n4) If that last step worked out you are on your way!  Now run the default test...\ndocker run --rm -it -v $(pwd):/src backstopjs/backstopjs test\nThe expected behavior is a test failure (since this is the first time you are running BackstopJS in this directory)...\n\n...but your directory should now have legit test data...\n\nIf you open backstop_data/html_report/index.html it should look like this...\n\n5) so far so good?  Approve the current results and test again...\ndocker run --rm -it -v $(pwd):/src backstopjs/backstopjs approve\nthen \ndocker run --rm -it -v $(pwd):/src backstopjs/backstopjs test\nYour tests should pass...\n\nAnd opening the html report should look like this...\n\nIf you noticed that docker run --rm -it -v $(pwd):/src backstopjs/backstopjs <command> is what you are calling instead of backstop <command> you are completely correct.  You can turn that into a BASH shortcut if you like.  But it might be nice to build a docker option directly into the backstop command runner -- so we could say run, backstop test --docker-img=backstop/backstopjs or something like that.  \nYou may have also noticed that your browser doesn't automatically open when the backstop test command completes.   You can address that issue by appending backstop openReport to your docker-backstop test command. Like so...\n`docker run --rm -it -v $(pwd):/src backstopjs/backstopjs test; backstop openReport`\nHow's that?   Is it working?  Please validate!\nThanks!\n\u262e\ufe0f\n. If you are just using docker out of the box on windows or mac you can use either of these two approaches...\n1) http://host.docker.internal:3000 .    \n\u261d\ufe0fdocker maps this to your local machine.   see... https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds\n2) http://:3000 \n. That\u2019s the correct way.  \ud83d\udc4d. Not sure what you mean.  Can you give an example?\nAlso \u2014 I wanted to confirm that the docker approach fixed the cross platform rendering issue?. Sorry,  I still don\u2019t understand the issue.  \ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f. There you go!   Now I haz understanding.\nWhy don't you just use an active config?\nSee this config file...\nhttps://github.com/garris/BackstopJS/blob/master/examples/jsBasedConfig/backstopConfig.js\nNotice how that is a JS file -- not a JSON file?\nSo in your case you can add something like this before line 1...\nconst origin = <some environmental test to detect if you're on your CI> ? \"http://localhost:3000/\" : \"http://host.docker.internal:3000/\";\nthen, add your properties where they belong and -- wherever you're specifying your url you can do it like this...\n\"scenarios\": [\n    {\n      \"label\": \"Button\",\n      \"url\": origin + \"item-components-button\",\n      ...\n    }\n  ]\nsee the readme here... https://github.com/garris/BackstopJS/tree/master/examples/jsBasedConfig\ncapisce?. 1) no -- although it would be very cool if the external script returned an error message then the corresponding scenario would fail.   Would be happy to approve that PR.\n2) Why not just take a screenshot of your table.  If the number of rows and columns change the test would fail.   Right?. Backstop is a screenshot capturing and comparing machine.  So, you are a lil' bit barking up the wrong tree with this puppeteer-dom-selecting business.    But... thinking visually it is very easy to do -- and there are a few way to do it.  One way would be to just use the selectors property to scope down your screenshot like so.\nselectors: [\"tbody tr:nth-child(18)\"],\nThat would tell backstop to take a screenshot of just the 18th row.  So if your reference run has some content in there and your test run doesn't even have the selector your test will fail.\nIs that workable for your use case?. Hmmm.  Don\u2019t know.   Have you tried setting browserDebug=true to see how it\u2019s getting rendered at test time?. Is it possible to migrate to the puppeteer engine?  I highly recommend it if you can.   The implantation is more stable.   \nIf you can\u2019t migrate you could try adding more memory to your container.\n. There are no switches for this\u2014 but you can probably unbind the handler for log events in an onBefore script.  Implementation would depend on the engine option. . Ok.  I just looked at this for you.\nHere is the puppeteer documentation which shows how to do it... https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#class-page\nso the ideal way to address this would be for you to add this in the onBefore script...\n```\nmodule.exports = async (page, scenario, vp) => {\n  page.removeListener('console', refactoredConsoleMethodHere)\n  await require('./loadCookies')(page, scenario);\n};\n```\nUnfortunately --this wont work.  The inline anonymous function would need to be slightly refactored per the puppeteer docs for it to correctly work.   It would be awesome if you could do this an submit a PR.   \n^  If that is not something you're comfortable with you could probably solve your problem with something totally crude like this...\n\nIt would be way way better to do the first suggestion.  Don't tell anybody I told you to kill the console like this.  It's utter trash -- but it will kill your output. \ud83d\ude09. Looks good.  Thanks for following up.\nIf you did do any work on a PR then it would be sufficient to just refactor that listener to use refactoredConsoleMethodHere above -- instead of the inline fn.\nOtherwise, taking a flag approach would need to be somehow unified with the existing debug property.   e.g. change from bool to str and create groups like \"silent\", \"error\", \"log\", \"debug\" \"verbose\" etc.\nOk.  cheers. Thank you!. Backstop cli returns a 1 if tests fail -- like any other standard process.  Does that not work for you?   (I don't know Jenkins well -- but I think this is how other users are integrating?)   \nThere is also an option for backstop to generate a junit report which may be more reliable to parse.\nhttps://github.com/garris/BackstopJS#reporting-workflow-tips\nI don't really mind your approach tho if you are setting things up for the first time and just getting things running.   But I do recommend trying one of the options above or maybe googling for backstop+jenkins ideas.  If someone changes the \"intended-for-humans\" output in the future it could break your CI -- and that would be a bummer.\nGood luck!\n. Hi. In the very latest version of backstop with puppeteer engine clickSelector  takes a string or an array of strings...\nlike this\n\"clickSelector\": [\"[class^=Checkbox_label_]\", \u201c[class*=SubmitReturnPage__actionButton_]\u201c],\nnot like this\n\"clickSelector\": \"[class^=Checkbox_label_]\", \"clickSelector\" : [class*=SubmitReturnPage__actionButton_],. I will test this ASAP.  And yes, I would expect some difference between the existing screenshots and the new ones.  Could you please run that report and then save the result as a pdf in this PR so we can see the differences?. @matthew-dean  do you mind trying this on you project where you specify vh units?. Hi,  can you please post a simple app in the example directory which demonstrates this issue?  It is hard to tell from your screenshots what is really happening \u2014 so just a simple page where you an produce the broken behavior and then show how your change fixes the behavior would help.\nPlease check that into the examples directory.\nI personally have not experienced this issue so I need to understand better what this is fixing.\nThank you!. Also,  when you generate pdf files \u2014 if you are on a Mac you should be able to \u201cprint to pdf\u201d this way you are not generating huge bitmaps \u2014 only genuine source images are saved and placed inside the pdf documents.  . @matthew-dean please check the report summary for a test duration.  Would be great if you could post 1) the duration of your test in chromy  2) the duration of your test in puppeteer  3) the duration of your test in this new version of puppeteer.. I will do testing of this one.  Will update you when this is published to NPM.  Thanks!!!. ok -- published to backstop@beta!\nvalidate here...\nnpm install -g backstopjs@beta. @cactusa Thank you for this PR -- it is clearly creating developer happiness already -- however -- I think I have been having the opposite problem.   After applying your patch my screenshots are capturing unexpected screen areas.\nhere is an example -- item on left is beofre -- center item is with your PR...\n\nSo,  I am curious why some engineers clearly have this issue where others dont.\nWhat is your environment?  OS, RAM, NPM, NODE versions?   And if possible could you please post a scenario which would enable me to reproduce?   thank you!. Which glitches?   Can you be specific and post examples?  I am trying to understand the root cause of the issue.   As you can imagine -- it would be silly to release a version which is guaranteed to break most users' tests. \nOn a separate note:  Are the blank screenshots because you have an element below a scroll -- IOW they are not visible on the screen?   Did you try viewing the screenshot process using \"debugWindow\": true  to observe the visual state when the screenshot is taken?. @cactusa -- ok -- this helps a lot -- thank you very much for that detail.\nI have to apologize -- that screen shot from last night had some genuine differences which made it confusing.   Here is a new screenshot comparing previous reference with your patch.  (PLEASE NOTE: GREY AREAS REMOVED FOR COMPLIANCE -- PLEASE IGNORE THAT)\n\nAnd here is a test I just ran without your patch...\n\nChrome obviously does not render items that are offscreen.   This would explain why some of your images render correctly, some are cut off (presumably where the scroll border intersects the images), and the rest don't render at all.    This would explain why your solution fixes the issue -- because you force a fullscreen render then scope down by cropping.\nThere is infact another user who has run into this issue and is looking to fix the problem by scrolling.\nhttps://github.com/garris/BackstopJS/issues/765\nDoes this approach also fix your issue.\nThe issue for me is that both fixes have side effects which need to be addressed before we can release.   I like your approach because it does not change state.  But there is clearly an unexpected geometry issue -- and -- there is a report that we may also have a perf issue.\nConversely I like the scrolling because it is lightweight -- but it changes state in the client app -- which will likely have other side-effects.   Also,  the scrolling approach alone will not work in cases where the target element does not completely fit within the bounds of the enclosing element.\nThere are a few things to consider here so we should think about what solution or combination of solutions will truly address the issue.\nThank you for all your help here -- I am sure we can come up with a good solution!. I have just created branch v3_3-overflow_fix so we can work on this fix there.\nAlso -- perhaps the vertical offset I am seeing is due to box-model -- i.e. I suspect there are inner element margin overflows etc. which are affecting the boundingBox values.   I will check this later today. . @cactusa   Thank you for looking at the perf times.  That looks totally fine.   And also -- thank you for looking at setting the VP height.\nI looked at the element for margin or other positioning offset and didn't find anything other than box-shadow -- which I set to none and still got the same result.\nThis looks like it is not an issue with Backstop per-se.  I am assuming if you just attempted to take snapshots of your selectors with a vanilla puppeteer script you would get the same issue?   If this is true then the problem should really be addressed in Puppeteer.  Have you searched the puppeteer repo for similar issues?  Are there maybe flags that could potentially solve the issue?   \nYour solution looks like it should work -- but as you can imagine -- we cant just publish the change knowing it will break existing tests.   I think before we go beyond here we need to understand what the true issue is.   \nI appreciate you working on this issue -- and I want to give you the time you need to address the root cause.  At the moment, your patch is published to backstopjs@beta.   For your purpose you should be able to point your build scripts there and get your CI pipeline stabilized.  Does it work for you to use @beta for now while we continue to research the root cause?   \nI am about to go on holiday.  I'll follow up when I can.  Thank you!. I see.  The other option would be to put it behind a flag in the config.  E.G adding puppeteerOffscreenCaptureFix: true in the config root would use your code path.    This may be the best way since we can use this flag to allow users to test and provide feedback.\nIf you add this flag I would merge this right away.  I appreciate the time you have invested \u2014 so I hope we\u2019re moving to a workable intermediate resolution for your day job.\nThanks!. Wow \u2014 super exciting\u2014 I have wanted to see this feature for a long time!\nI will review as soon as I can \u2014 but please bear with me \u2014 I am preparing to go on holiday EOW.. I will test this before publishing to NPM.  Will update this PR when pushed to NPM.  Thanks!. ok -- published to backstop@beta!\ninstall here...\nnpm install -g backstopjs@beta. Can you post your config + a link to the app you're trying to test?  \nAnd also, what's your environment?  Ram, os, node version, npm version.   \nFWIW:  A fix went in today to resolve the blank puppeteer snapshots.  You can this version by installing...\nnpm install -g backstopjs@beta\nPuppeteer is much faster and requires less RAM in all circumstances I have seen.   Might be worth it to try the @beta version to see if your issue is resolved.\n. Sorry, I just reviewed this.  I believe this would break existing desired behavior.   Not sure what this fixes.   Thanks.. Oh shit.  You're right.  I am a jet-lagged idiot.  What a diabolical little bug you found there.   Merged.   Thank you.. I will add that test to the feature_test script.   Thank you for demonstrating.. @visionmonster Thanks for this.   I think there have been a few past iterations of this \u2014 with various users running into issues.   Can you explain in detail what problem this should fix and what you\u2019ve done to fix it?  Please site npm docs where necessary and please also detail scenarios where this change may cause different behavior from what we currently see?. Hey Matt \u2014 so sorry for the delay!  I\u2019ve been traveling and got really behind on reviews.  Any case,  this is a great write-up!   You should consider making it a blog post!\nThank you very much for the PR and the detailed documentation here.   I am planning the next release for next Friday and this will go out with that.  \nCheers!. Running backstop reference cleans out the reference directory and then creates brand new references.   Is that what you mean?\nhttps://github.com/garris/BackstopJS#creating-reference-files. Oh sure.  Yes,  from time to time someone brings this up and everyone agrees it would be awesome to have but so far no one has implemented it.\nOne idea I like is to pass an argument like - -purgeTestsAfterNDays=<n> On the CLI.  Or maybe add this to the config.  Etc.   adding a purge command would also be cool.. A value of zero would delete everything.  An undefined would keep everything.   That doesn\u2019t work?. see this example -- you get the scenario object while your onReadyScript is running.\nhttps://github.com/garris/BackstopJS/blob/master/capture/engine_scripts/puppet/onReady.js. Yes, you can do this.  Your script does actually get more parameters -- here is the signature...\n(page, scenario, viewport, isReference, browser )\nThe 4th parameter is a Boolean -- true if the current run is a reference.. I am pretty sure screenshots only work with DOM elements.. > Is SVG icon not a DOM element? \nSimilar but no, it's an SVG element.  Behaves differently.\n\nThe selector to take a screenshot of is a normal DOM element though.\n\nThen that should work.  Do you need to wait for the element to load?. Sure -- good point -- but does backstop fail to run under chromy or phantom? . oh, well then yeah, you're totally right.  Sorry bout that.. Thank you!. @verbruggenalex thank you very much for posting this proposal!   \nI think I maybe did not give a clear direction before so please allow me to clarify.  The intention here is to continue to use console.log exclusively as an output channel.  (FWIW: In node, console.debug is just an alias for console.log).   Instead of mapping to different console methods/aliases I think it is more our job 1) to determine the nature of the output (I appreciate and very much agree with your proposed classifications) and 2) map that to a logging level so that the logging points you have identified can be gated per a global logLevel threshold property in the config or overridden by a --logLevel=<logLevel> flag on the command line.\nlogLevel should be something like this -- implemented in an enum-like interface\n0 OFF (or if `logLevel  === FALSE`)\n1 DEBUG (or if  `logLevel | debug  === true`)\n2 INFO (or if  `debug  === FALSE` for backward compatibility)\n3 WARN\n4 ERROR\n5 FATAL\n6 OFF\nWe should also create chalk styles similar to the approach below and map these names to our logging level constants...\n\nCurrently in our configs we have a debug property.  This should be deprecated (and removed from the docs).  This should be replaced with something like, logLevel (implemented as an alias of debug for permanent backward compatibility.  This log level should take either the integer or string values from logLevel above.\nAdditionally, and most importantly... we absolutely should refactor our puppeteer logging per this post as it gives the developer the most flexibility (e.g. the ability to filter their app's logs).  This is actually the lowest hanging fruit here with the most end user benefit... https://github.com/garris/BackstopJS/issues/802#issuecomment-405405041  \nAgain,  I know this is a lot of work -- so no worries if this is too much to implement (but of course I gladly take a PR if you are so inclined \u263a\ufe0f).   I felt that I should at least be specific as to the ideal place we'd like to be with the logging feature. I think the above spec is closer to what developers would expect from a mature application. \nCheers.. @verbruggenalex Thank you for the input.   I am not familiar with behat -- it seems like a generally good idea, but it would need to be something I'd need to learn more about.   I am not clear how that would integrate from an API standpoint.. You can\u2019t point to a web file like that \u2014 but... you could write a simple node app that would grab and parse the file, then pass that into backstop.   See this section in the docs for some hits.  https://github.com/garris/BackstopJS/blob/master/README.md#integration-options-local-install\n. Are you sure they are both running 3.5.2?   You can try deleting your html_report directory and rerunning the test.  \nAnd no,  the config would not cause this.   The index_bundle is copied when tests are run.. @justinph     Thanks for the PR -- I have been wanting to see this for a long time!   Finally! \ud83d\ude04    I will check this before pushing to NPM -- but before I do I just want to make sure you checked this against npm run smoke-test.  And also did you happen to test this with different display states? (eg... \n viewing all pass, all fail, changing search criteria and excluding diff, and/or reference images in report via the control to the right of the search window)    Please let me know.    Thanks super a lot!. Ok,  after googling for a while I am confident that this library doesn't exist publicly, in javascript.   That said, the sheer number of computer vision related hits in regards to this topic are stunning.   I will start with edge detection and head to the basement.  Cheers.. Fresh from the basement...\nhttps://github.com/garris/diverged\n. Thank you very much for posting this.   It would be helpful to know if a vanilla config works on your machine.   Can you try creating a test directory somewhere,  cd into it and run backstop init?  Then try backstop test.  Then if that works try backstop test --docker?   If that works it may be something else in your config set up that might be causing an issue.   Please let me know if you discover anything \u2014 this feature is totally new so I am happy to help troubleshoot.   Cheers.. Ok cool \u2014 thanks for he update.  I\u2019m assuming the backstop tests for the website your trying to test works locally \u2014 just not with docker?  Please post back if you find the cause \u2014 I\u2019m sure it would help others with the docker implementation.  Cheers.. Working as designed! \ud83d\ude04. Please feel free to reopen if anything else come up.. Sorry -- don't know why docker failing on this -- very weird.   I will look into it.  Thanks!. @pstephenwille You are experiencing expected behavior.   Here is the workflow...  https://github.com/garris/BackstopJS#the-backstopjs-workflow\n1) Per the workflow... If you initialize a new backstop instance you will not have any reference files. The following command starts you off fresh...\nbackstop init\n2) Running a test without any reference files will test your current configuration scenarios against nothing.   The expected behavior is that a report will show all the files you just generated but all the scenarios will \"fail\" because you haven't yet told backstop what files should be considered correct.  The idea here is you can see all the reference candidates before approving them \nbackstop test\n3) If you are satisfied with the test images in the report after running backstop test you can go ahead and approve them.  Doing this will create the backstop_reference directory with the correct files in there...\nbackstop approve\nSubsequent tests will compare against your now-approved screenshots. The workflow from here is more subsequent backstop test-ing, finding changes, backstop approve-ing the wanted changes and fixing the unwanted changes.   And so on...\nDoes that make sense?  Is there maybe a better way to communicate this?  Please let me know.\nIt would be great if someone could make a 2 minute video to get this point across and help to onboard new users.\n. Yes,  it should use the firefox from the container.  I personally haven't tested the docker image with slimer.  You may need to confirm that the versions are compatible.  . @BBlackwo Just occurred to me -- you're adding quotes to docker args in this PR...   What happens if the user included these quotes in the original argument?  \ud83d\udc49 e.g. --filter=\"myScenarioName\"\nhttps://github.com/garris/BackstopJS/pull/831/files#diff-0745f5ef38ef41d5c870fa5515ddfd83R7. Hi there.  Sorry about that \u2014 I think that was replaced by the keyword document\nCan you give that a try?. Bummer \u2014 ok.  FWIW: If I remember correctly, the underlying code is exactly the same.   Does your css reference vh units?. Ah, yes.  There is another issue with the vh unit.   https://github.com/garris/BackstopJS/issues/820   \nI would encourage you to try to work around the issue with puppeteer (and potentially file the issue there).  The Puppeteer project will continue to get better whereas he phantom will continue to get less useful.\nPlease post back here if you figure out a good resolution.  Good luck either way!. Does it work when you pass \n{docker: true, ... } \n in the config?. Hmmm,  I thought the docker argument would have been passed from the config obj...   anyway, i am happy to review a PR if you want to add this.   Cheers.. I looked at this and I think I see where the issue is.  I pushed some changes for you...\nPlease npm install backstopjs@beta\nthen check this example of using backstop locally with docker...\nhttps://github.com/garris/BackstopJS/blob/master/test/configs/runFromNode.js\nTested good here -- please let me know if it works for you.. Thanks for reporting! \ud83d\udc4d. This looks very promising!. NICE!!  Thanks for sharing in this thread!. Super \u2014 thanks!. Maybe you can try to set \"debugWindow\": true and watch as chrome runs the test.  You may see what the issue is?. @gabegorelick I think your suggestion would enable \"local\" usecases -- correct?  E.g. when URL prop points to a file.\nI guess downside is if there is a ridiculous number of files in there it would be pretty clunky to cp everything all the time.. That sounds terrible.  Sorry everyone.   Will look into it.. UPDATE: I could not reproduce the issue.   However,  there were a few commits not yet published to NPM.  These did include some tweaks to the docker implementation for when you are using backstop inside a node script.   I don't think this was causing your issue -- but I pushed this to NPM anyway.\nSo please try pulling down the lastest backstop locally and also from docker and please let me know if the problem is still there.   And please provide logs and scenarios if your install is still broken.  I really want to make sure the docker version is stable for everyone.\nAlright. Thanks.\n\u262e\ufe0f\n\n. Does this happen for puppeteer?  Or just Chromy?    I suspect this problem can be solved by adding portfinder to package.json as a hard dependency.   This dependency was probably included in one of the react packages that was recently moved to dev-dependency.   \nHere \ud83d\udc49  https://github.com/garris/BackstopJS/pull/813\n. fixed by a82cff2. Ok, apologies. My bad. Please validate using v3.5.9.  Thanks!. Epic fail.  \ud83e\udd26\u200d\u2642\ufe0f   \nOk -- just republished.  Please try again!  v3.5.10. Yes.  This is a real-life use case.  One can't just change product design because it's inconvenient to test.   There are plenty of ways to approach this. . At very least one could use hideSelector to have backstop ignore the image.   What would be better is to add a class after the transition is complete and just use that as the ready trigger.. Thanks for this PR!   I don't have enough time to publish this today but this will definitely go out in the next release.. Pushed to NPM.  V3.5.8. \ud83e\udd14 \nOk,  I\u2019ll try to check this today.  . Ok, apologies. My bad. Please validate using v3.5.9.  Thanks!. I believe that host.docker.internal should resolve on Mac.  On Linux they have some other way to do it.  Either way \u2014 check the docker docs for this one.. Anything you put on the command line will get passed through as parameters.  Good luck.\ud83c\udf40 . Thanks for posting the resolution\u2014 cheers!. I am sorry \u2014 I have not had a chance to look at this.   If chrome is an option I recommend using the puppeteer option.  Otherwise\u2014 it would be great if it is possible for you to dig deeper into the issue.. \"selectorExpansion\": true,   <== are you actively using this feature?\nI wonder if setting to false would avoid the issue?. @n1313 Thanks for the bug report!   Just to be sure there are no environmental issues, could you run this sanity check?  (You can run from your Desktop directory or wherever you like.)\nmkdir backstopSanityTest; cd backstopSanityTest; npm install backstopjs; node ./node_modules/backstopjs/cli/ init; node ./node_modules/backstopjs/cli/ test --docker\nThis will create a directory called backstopSanityTest, do a fresh install of backstopjs, initialize the test directory and then run a simple config using docker.\nThe log will be somewhat long -- but you should find these lines in there somewhere...\n```\n...\nBackstopJS v3.5.10\nCOMMAND | Executing core for \"genConfig\"\ngenConfig | Copying '/Users/gshipon/Desktop/test3/backstopSanityTest/node_modules/backstopjs/capture/engine_scripts' to '/Users/gshipon/Desktop/test3/backstopSanityTest/backstop_data/engine_scripts'\ngenConfig | Configuration file written at '/Users/gshipon/Desktop/test3/backstopSanityTest/backstop.json'\n  COMMAND | Command \"genConfig\" successfully executed in [0.028s]\nBackstopJS v3.5.10\nLoading config:  /Users/gshipon/Desktop/test3/backstopSanityTest/backstop.json\nCOMMAND | Executing core for \"test\"\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/Users/gshipon/Desktop/test3/backstopSanityTest\",target=/src backstopjs/backstopjs test \"--_=test\" \"--h=false\" \"--help=false\" \"--v=false\" \"--version=false\" \"--i=false\" \"--moby=true\" \"--config=backstop.json\" \"--moby\"\nBackstopJS v3.5.10\nLoading config:  /src/backstop.json\nCOMMAND | Executing core for \"test\"\ncreateBitmaps | Selected 1 of 1 scenarios.\n...\n```\nPlease let me know if this works for you.   If it runs ok then work backwards from there to try to figure out what the issue may be.\nPlease let me know how that sanity check goes!. Thank you for catching this issue!   \nA known issue also exists where config parameters are duplicated in the docker command. \nI would like to address this as soon as possible.  Until then are you able to simply change your config name to the default backstop.json As a workaround?. fixed with v3.5.14. can you please post a gist of your terminal output?. Woah, stop the presses.\nI just tested the current version and had no problem running it...\n```\n$ node ../../cli test --docker --config=backstop_alt.js\nBackstopJS v3.7.0\nLoading config:  /Users/gshipon/Development/BackstopJS/test/configs/backstop_alt.js\nCOMMAND | Executing core for \"test\"\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/Users/gshipon/Development/BackstopJS/test/configs\",target=/src backstopjs/backstopjs:3.7.0 test \"--moby\" \"--config=backstop_alt.js\"\nBackstopJS v3.7.0\nLoading config:  /src/backstop_alt.js\nCOMMAND | Executing core for \"test\"\ncreateBitmaps | Selected 1 of 1 scenarios.\nCookie state restored with: []\nCookie state restored with: []\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nSCENARIO > Simple\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nSCENARIO > Simple\nx Close Browser\nx Close Browser\n      COMMAND | Executing core for \"report\"\n      compare | Reference image not found backstop_alt_Simple_0_document_0_phone.png\n      compare | Reference image not found backstop_alt_Simple_0_document_1_tablet.png\n       report | Test completed...\n       report | 0 Passed\n       report | 2 Failed\n       report | Writing browser report\n       report | Resources copied\n       report | Copied configuration to: /src/backstop_data/html_report/config.js\n      COMMAND | Executing core for \"openReport\"\n   openReport | Attempting to ping\n   openReport | Remote not found. Opening backstop_data/html_report/index.html\n       report |  Mismatch errors found \n      COMMAND | Command \"report\" ended with an error after [0.163s]\n      COMMAND | Error: Mismatch errors found.\n``. Hey!  Before running, pleasecdto the root where your config is (or move your config to your current root.  Does that fix it?. Hmmmm, Does it work if you copy the alt file with a different name?  If so,  maybe just use that and change props in place until it breaks or works.. Actually, I have wanted the config interface to accept promises for a long time.  (If implemented I'd expect it to work in docker as well).   Would love it if someone added that feature.  But until that time -- you are absolutely correct.   Acceptsjsonorpojoonly.   If you have a complex and or async operation (other than arequire(xyz)`) you could consider the node module option https://github.com/garris/BackstopJS#pass-a-config-object-to-the-command\ncheers!. Oh, sorry.  There is an unintuitive quirk with zero for that parameter.  We are currently re-factoring this section and will fix this in a future release.   In the meantime you can just set it to .001 or even smaller.  Hope that works!. Very much appreciate your interest in helping.   I have been looking at this library... https://github.com/mapbox/pixelmatch\nWhat do you think?\n. Great -- It would be very cool to integrate this!   I personally don't care about resembleOutputOptions -- but we could see if the pixelmatch guys would accept a PR (looks trivial).  If we do still keep this functionality, it should be remapped to diffOptions.  \nAlso, I have developed an experimental image diffing algorithm which detects and handles layout movement changes.  See below -- Note the change was to add a line of text in the second card.   Pixelmatch (second from the right) behaves as you expect.  The new diff (last on the right) aims to only flag the changed pixels...\n\nIf you have some interest to also add this after working on pixelmatch integration it would be great.   But it's totally optional.\nCheers!\n. @brendonbaretto \n\n@garris Do you intend to merge #852 in a future major release? I thought that diverged would somehow replace the resemble and so my PR would not be needed anymore\n\nMany apologies!  I got very busy at work and didn't see your changes!   Please give me some time to rereview-- obviously this is a big changes so we need to make sure it will not disrupt current users.  Also, diverged is experimental-- it will not replace conventional diff for some time.\nAlso, @zigotica has a very good point -- we should investigate this!   Perhaps all that is broken is the threshold evaluation?. Just quickly posting a reference to a resolved issue here as it's a bit related.  https://github.com/garris/BackstopJS/issues/310#issuecomment-433967093\nGotta run.  Thanks!. Sure.  Please send PR.. Neither have I so... eh, I guess we\u2019ll find out!. Can you please validate this?. @brendonbarreto \nresponses to questions\n\n\ncompare-hash will throw exception if image data is not exact -- this is an optimisation that saves time if most tests are passing.\n\n\nyes. please use docker for smoke-tests (the reference files that currently exist do not use docker so they will fail.  This means you will be creating the first docker files for the smoke test.  If I run your smoke test (also with docker) I expect it to pass with a very low threshold.\n\n\nplease create a simple test which uses the .jpg option so we can be sure that this feature is still working.\n\n\nGreat work -- cheers!. This is looking good.  I fixed issue #849 so please rebase off of master to make sure you\u2019re up to date.  I also realized the docker option won\u2019t work with the current smoke test because the smoke test is run off of the file system.  So please just rebase and then I can pull in the changes.. If it\u2019s failing because of minor rendering issues (because of hardware)  then you are done!  Just let me know if thats the case.. Ok. Great.   I will take another look soon.. I just wanted to bump this -- I am sorry I have not taken another look -- I have been completely slammed at work.  I have booked some time on Friday to catch up with BackstopJS work and will review then.. merged!. Please run the sanity-check test outlined in the the docs and work backwards from there.. Use an onBeforeScript.  Check the docs for usage and do something like this...\n```\nmodule.exports = async (page, scenario, vp) => {\n  await require('./loadCookies')(page, scenario);\n// Example: set user agent\n  await page.setUserAgent('some user agent string here');\n};\n```. @gabegorelick yup.  I don\u2019t remember why we switched it \u2014 but I suspect that reason is probably not necessary anymore.   I would pull your change if you want to refactor that line so it would work in CI env.   I would just ask that you document the change in the PR and just explain a little bit about circle CI requirements and why your change fixes it.\nCheers!. Couldn't you just pipe it to a file at the command line?\n. Not quite sure what this change does?. Can\u2019t you simply specify a tagged docker image?. I will pull this because this probably should not have been pushed in the first place.. Thanks for this!. Do you prefer that I push a release before merging?. Will do.  Thanks.. Done!  Thanks for catching this issue and for submitting the PR.\nPlease validate backstopjs@3.5.16 when you get a chance.\nCheers.. @gabegorelick  -- would you please take a look at this when you get a chance.  I have fixed all the linting issues.   I would like to push this to master to resolve some UI issues.   I will bump the version prior.   Thank you.. merged offline. 1) If possible, please use puppeteer engine.\n2) set token cookies instead of logging in  \u2014 there are some tips in the readme.. then use an onBeforeScript to make an authentication call, parse the returned payload for your token then set cookies with your parsed token.   You can optionally cache your cookie to a local json file and use the cached value until your TTL has passed.  Etc.. Thanks for the report!  Would be great if Someone could create a local test  for the junit writer feature and then upgrade our library.   Cheers. Feel free to propose a better way.  Thanks.. Docker build failed tho \u2014 looks like maybe due to a weird network or service issue.  Retrying.. Cool. Unit test would be great.  I think you\u2019d want to stub the spawn method with a sinon wrapper and just test that various inputs produce the correct arguments.\nI think the hard part would be to understand how the various sets of cli arguments and method configs behave.  As a starting point you can use the runFromNode harness above to capture what that looks like in practice.. Sinon has a sandbox feature which should help with pollution.   All tests would need to run cleanup too.   . Thanks for all your help here Gabe\u2014 I really appreciate it.   I like that you split up your changes into small bite sized enhancements.  Much easier to review and push out.  \nUnit test are currently disabled / ignored in Travis so it\u2019s fine with me to skip that.  \nMostly, I run the sanity-test, the backstop_featues test and the run from node test to determine if it\u2019s safe enough to publish.   I have a super challenging day job and don\u2019t have a lot of time to put into enhancements \u2014 but if you want to keep improving the test coverage with very small PRs I am happy to support that.  It will just take some time \u2014 most of my reviews are done on the train to work via iPhone \ud83d\ude09.   Cheers!\n. @gabegorelick     Boom!  https://github.com/garris/BackstopJS/releases/tag/v3.7.0. Please validate when you get a chance!. When this goes green we will have reached an interesting point!  \ud83d\ude00. \ud83d\udc46those are very good ideas.  At LinkedIn we are using ember which has a very nice stubbing framework called mirage.  Mirage listens to all calls to the store and replaces the normal API calls with mock data.  I am pretty sure there are projects in react which do the same.  This is nice as a framework level option.  \n. Sorry -- I accidentally closed issue!\nI wanted to also comment --  I have been considering an integration to add API response recording into backstop.\nI think it would be fairly easy to integrate this cool API recorder...  https://github.com/flickr/yakbak  and then enabling proxying to that local instance (adding a flag to the config to proxy as described here... https://github.com/flickr/yakbak)\nI have already added a local server to backstopjs for a different reason -- but it could also be used for this purpose.  \nI am getting pretty excited thinking about this idea.........    I wish someone would build it!\n. I preferred the less verbose error message -- but I guess ending the process abruptly there can be problematic.  Alrighty.  . Thank you!. @brendonbarreto   Sorry -- I had to revert your bump.   Please take a look at the attached backstop_features test.   This version of puppeteer is clearly rendering differently.   Can you please review (you can run tests locally using the previous version and the latest version and you will likely see the same difference)\nI do think it is a good idea to bump puppeteer -- but we need to notify other developers what changes (failures) they should expect.\n\nCan you please describe the differences in rendering behavior and what situations cause the differences?\nWhat should other users do if they upgrade backstop and their tests have broken?  \nAre we totally sure this version of puppeteer is the most stable version to use?\n\nThank you!\n\nthis file shows rendering differences. These diffs go away after reverting puppeteer version...\nfailing tests after puppeteer bump.pdf\nSome cases are background rendering -- others seem to be positioning differences.. I suspect these are not \"problems\".   Perhaps puppeteer has settled on a new expected behavior for capturing \"selectors\"?   I think we just want to understand this change and then make backstop users aware of the change by pointing them to the correct documentation.   It would be great if you could investigate this -- maybe just look at puppeteer revision history and find where they made the change?   We can add a link to this in our documentation and then reapply your PR.   I am happy to do this quickly since I expect puppeteer has added many improvements since 1.2.x.. Ok.  it sounds like you did good research -- perhaps it is actually chrome tools that made the change.  In any case yes, lets bump to the latest version.   How should we notify users that we expect some of their tests will break?   Maybe in troubleshooting section of readme?   Any other ideas?. We should definitely at least bump our minor version.. And what about Slimer support?   Comments please.  Thanks!. Yes please.   This would be v4.0\nMinor note: We'd have to delete references to v3 in docs and ui.. WOW -- thank you @brendonbarreto for all your hard work on this!!!   Just one p3 left.  Cheers! \ud83c\udf08\n\n. boom!\n. Please post your config.... Can you confirm your script files are actually found \u2014 also if you change to puppeteer (which is recommended)  you need to use puppeteer compatible scripts.  (Check the puppeteer script directory for templates). I think you just need to look at each file in your scripting flow -- add break points and console logs until you find the point where your the ./clickAndHoverHelper is not getting called.  You can use a clean backstop implementation (via backstop init) on your machine somewhere as a template.  Good luck.. What is deficient about the current scrolling report for this functionality?   Seems maybe we could improve that view with a justify-w option and even a justify-h option (I.e. justify-viewport-h)?\n. Umm, ok. You might want to work on that delivery a bit.  \nAnycase.  Isn't this view nearly what you are talking about? \ud83d\udc47 \n\nIf the ref & test images were both fully 50% width and justified to the top of the scroll?  You could prev/next yourself through all scenarios with the exact view you are describing.  Right?\n. Good.\nTo develop on the front end you can clone the project, cd into the root and run npm run sanity-test.   Then after you make changes to the UI code run  npm run build-and-copy-report-bundle and simply refresh the browser.   That should enable you to see your changes.   . If you move forward, please first write up some notes on how you plan to implement it \u2014 so we can work through potential issues before implementation.\nIt would be great to see this happen \u2014 Thanks!. @ackmanx +1   That is exactly what I am talking about.  Just need to add a toggleable option in the drop down -- maybe called \"justify\".  It would be nice.. Looks good!  \u2b50\ufe0f. Do we actually have any of those files?. Oh yeah,  look at that.  We do!  We can totally delete those!  :). \ud83d\ude06\nbut also \n\ud83d\ude3f\nThanks!. \ud83d\udc4d. I think we can just ignore compare/output/index_bundle.js since this is a generated (not-guaranteed-to-be-readable-by-humans) kind of file.\nAlso, I thought we were already ignoring this here... https://github.com/garris/BackstopJS/blob/master/.eslintignore. I just want to make sure you are finished with the files -- please let me know if this is good to merge.  Cheers!. @brendonbarreto   We actually need compare/output in git as it is generated.  This resource is copied into html_report during runtime.  Is it good enough to simply whitelist index_bundle.js anywhere in the repo?. Merged!. Gulp is not needed.   Can remove!. \ud83e\udd26\u200d\u2642\ufe0f  It looks like Travis found an issue \u2014 maybe removing gulp broke eslint?  Or was that just bumping eslint that broke eslint?  I hope I did not give you bad information regarding gulp.. Looks good!. boom! \n. Perhaps backstop is using an older version of Chromy?  You could try updating to the latest version to see if that fixes your issue?. Please post example.. Use onReadyScript instead.\nThe DOM does not yet exist when onBeforeScript runs.. this needs to run in a page.evaluate()\nlet elementList = document.querySelectorAll('.picture-class');\n  elementList.forEach((pic)=>{ pic.src = 'my-pic.jpg'})\nThere will be lots of documentation of this in the puppeteer docs.. Please check the read me -- there is a sanity check section. Cut and paste that in your terminal.  See if that works.. Will push this to canary soon.. Thanks!. @andyrichardson Would you mind documenting what this change does & how it works?\n-link to docker api doc for this flag\n-summarize the change\n-what use-cases will this affect?\n-do we expect this change have a negative impact on existing implementations?  Please consider for Win/OS X/Linux \nThanks!. Yes -- they are tied.  Backstop calls the docker image that matches the currently running version when you use the docker flag.\nAlso, If you run npm view backstopjs you will see that 3.8.2 is the current beta version.. If you are running 500 tests you may be having an issue with a single test or subset of tests which hang.  Have you tried isolating your scenarios to see which may be failing?. Did you try using \"debug\": true in the config?   If a test fails it should time out after 30 secs.     If 100 tests fail it could hold up processing for 5 mins (with an async limit of 10).   Still sounds like you just have a bunch of \"waits\" happening at the same time.. Thank you for the commit!   I will attempt to push this today.. This is published to npm with the @beta tag.   This branch also has some refactored code on it.  Please validate when you get a chance -- if it's working for you I can push to latest.  Cheers!\nnpm install backstopjs@beta  (with optional -g flag). I expect it would work.\n. Hi guys -- I think I know the issue.   I just pushed the tag with your fix to github.  I had forgotten to do that before.   \nWhen BackstopJS is run with the --docker flag, backstop should ask docker to pull down the docker image corresponding to the same BackstopJS version that is running locally.   This should be the case even when running @beta.   Unfortunately-- I forgot to publish the tag with your fix before.   Please give it another try and please send terminal output if it still doesn't work.  Cheers!. Fantastic!  I will do ASAP.  Hopefully today or tomorrow AM.. Hi, thanks for posting!   Would you mind documenting specific steps to reproduce?   I don\u2019t quite understand the issue.  . Reference and Test file names must be the same during comparison.  By default, selectors are included as part of the filename and that is your primary blocker to comparing the same corresponding elements with different selector paths.\nHere is documentation covering the filename template --https://github.com/garris/BackstopJS/blob/master/README.md#projects-dont-work-when-i-share-with-other-users-or-run-in-different-environments.    If you remove the selectorLabel From that example you will be able to compare on scenario id and selector order.  Then simply manipulate your config targets as suggested above.\n. It means that backstop listeners have been installed in your web app.. Thanks!. Hi @deap82.   Yes. I have seen this kind of behavior before.  There are some differences in how capture is done between engines so, while this is an edge case, it's not that unusual.    I would recommend waiting for that fixed header dom to exist and then set to display: none or maybe even set horizontal offset (eg using opacity or transform: translate())  such that it's totally off the page regardless of vertical state -- just watch for triggered re-renders blowing away your overrides etc \ud83d\ude09.\nCheers!. Thanks for posting.  Have you tried scoping your screenshot to a particular dom element?  This may help get around the window size issue.. I am not sure what is causing your screen size change but there are probably many many ways to address this.  Maybe you could set an absolute width on your container when onReady runs?  There is often no \"right\" way to address this kind of thing -- allow yourself to be creative.   Good luck. . readySelector accepts any string which document.querySelector(string) accepts.. Yes. You could propose and build some way to conditionally include/exclude phantom and chromy module dependencies.   That would be a huge help.. Hi Marc, sure, looks good and to me.   I'm happy to pull that in if you create a PR.  Please just include a test & document it.\nCheers!. Looks good -- thank you!. @RedHatter -- thanks for posting this example.   I checked our feature tests and indeed, hover is working.  I pulled down your repo and saw there was no onReadyScript defined.  Please make sure to run backstop init in your project root -- and also you'll need this line in your config...\n\"onReadyScript\": \"puppet/onReady.js\",\nI did that and your example worked.\n\nYou can always refer to the backstop config boilerplate as well as the backstop tests for other reference patterns...\nbackstop/test/configs/backstop_features.js\nCheers.\n. Your URL looks like it's missing .com.   \nBut also, please do not use a google url, use your own (unless you are working for google).   . We will keep engine scripts because we will likely add new engines at some point -- e.g. maybe selenium driver.. Ok.  I merged this locally first and have pushed the changes to master.  \nThis is published to npm @canary\nnpm install backstopjs@canary\nThank you @brendonbarreto for your hard work on this!!!. @lpeabody -- great work!   Thanks for the insight.   If someone can PR the docker file change I would be happy to pull that in!. Sorry -- not quite sure I understand what you're trying to test.   Configs can be json or JS files that are executed at runtime.  Configs can also be dynamically generated when running backstop as a module  https://github.com/garris/BackstopJS/blob/master/README.md#integration-options-local-install\nHope that helps.. Ah, good.  actually, you probably don't even need to use an active script.   Just include the --filter=<scenarioForComponentName> argument  when invoking backstop.  Way easier.. Also, CSS is global scope -- so if your touching css you probably do want to test everything else -- at least at commit time.  Food for thought there.. Are you testing an app in production -- or locally?   Can you use fixtures for the data your app uses when testing?   That is a much better approach then replacing after the fact. . I totally agree.  Would be great if you could submit a PR for this.. This is probably a timing issue.   You may need to look into ensuring your app's state is and display cycle is locked down before manipulation.  . This is a nice feature -- however, since this kind of feature can be fairly easily added to a precommit script I think it is not necessary to add this complexity to the code base. . There is no onAfter.  Backstop scenarios are stateless.  Each scenario calls your web app in a new browser.  It's up to you what cookies and interactions you use to create a state.. @nsp27  I believe your question is different from @tonyxu-io.   If you have a flow with 3 clicks and you want to take a screenshot after each click then this means you want to test 3 states.  A scenario basically maps to a state so that means you'll need 3 scenarios. \nIn this case I would simply copy your scenario three times.   The clickSelectors helper takes an arbitrary array of selectors so your three scenarios would maybe be identical except for the clickSelectors property which might be...\n[\"selectorOne\"] On the first scenario \n[\"selectorOne\", \"selectorTwo\"] on the second\n[\"selectorOne\", \"selectorTwo\", \"selectorThree\"] on the third\nHope that helps!\n. @chrisalexander55   Sorry for the delays, it's been a busy month. . Thanks for the PR.  What's the use case for this one?. That sounds like a pretty big deal -- the load event not firing etc...  \nAre you not in a position to stabilize that?. Does this issue happen using puppeteer engine?. @BBlackwo  thank you for the PR!   You are correct, this is actually true.   The only comment I have here is that I think it would help others significantly if we told them where they can find the filenames, which (by default, include scenario and viewport names and) are displayed in the visual and cli reports.. Unfortunately Docker networking is very complex.  BackstopJS only supports a basic usecase.  Anything more fancy I won't be able to help.   Please feel\nFree to post your solution here for others if you can figure it out.\nCheers!. Nice!  Thanks for sharing your config.. Articles are totally cool -- thanks for posting!    Do you mind if I link to them from the doc?\nAlso, quick notes:  I am pretty sure that approve can be used with --filter and a viewport label e.g. approve --filter=<scenaroName>.*<viewportName>  because it is grepping on filename.\nAnd second:  in some cases you may be able to avoid writing a config file by using the node invocation e.g. https://github.com/garris/BackstopJS/blob/master/README.md#pass-a-config-object-to-the-command\nJust some suggested options.\nCheers \n. Ooof-- you got me there.   Not sure I understand the question.  This sounds more like a straight up docker question.   Feel free to fork the backstop one and use that if it helps.. Sorry.  I don't understand this question.\nBut also,  I recommend using puppeteer engine.. Please post some more info.  maybe screenshot of reports.. Thanks for this.   Could you include a screenshot?. This is a classy update.  Thanks guys!   Will publish as soon as I can.. Oh, one more request.  Sorry.   Looks like you have an older version of compare/output/diverged.js.   I think if you rebase the issue should go away.   \nThanks!\n . @BBlackwo ah,  you are correct!   My bad.  I'll deal with it.   You are cleared for takeoff. \ud83d\ude09. @BBlackwo Would love it if you want to take a crack at it!\nLet me know how I can help.   Feel free to ping me offline -- I am happy to work with you on permissions.  garris@me.com \nCheers.. Hi @Fandekasp Thanks for posting!\nIf I needed to authenticate before running a scenario I would use some offline process to get the required token, store that token in a JSON file and restore that state with a cookie in an onBefore script.\nIf I needed to test a pop up then I would restore whatever state I needed and then hit the pop up url and test what that returned.\n. Yes.  I think we can remove.   Although, It's nice having a copy around for sentimental reasons -- but maybe this is not a good enough reason not to kill it.   Up to you.  Cheers.\n. WOW.  I have never seen that before.   Could this be coming from your app?\n. Is this only in the diff?   Please post a screenshot of the report and please post your config.. Thank you!. Hi @brendonbarreto  -- Just fyi -- I had to revert this PR.  Somehow -- this config broke the scrubber \ud83d\ude1e.\nIt's probably something easy to fix -- I just ran out of time to track it down.  Feel free to put up an update.   \nThanks for all your help -- I finally published your version without PhantomJS today \ud83d\ude00.\nCheers.\n. Thanks for posting.   Here's my guess -- the cursor has to go somewhere -- it's probably placed in the upper left corner -- right where your button is.   You could probably add an onReadyScript to simply move the cursor really far away before taking your screenshot.   Please see puppeteer docs for setting position on the cursor.. Thanks for posting.  Backstop does not have an edge or ie engine.. Unfortunately no -- I don't know what the issue is there.  Perhaps there is more info in docker documentation.  . > Is there a particular reason for using -it ondocker run ?\nHmm, I don't remember what the reason was -- we have been through some different versions.  Docker is kind of great -- but it is also kind of a pain.  Different pipelines have different requirements.  One size definitely does not fit all cases.  . This is a very tricky thing to do since there is an existing default set of arguments.   What would be your proposal for managing this?   Another approach to consider is a documented template approach similar to what we did here... https://github.com/garris/BackstopJS#if-you-just-upgraded-to-2x-or-3x   \nI am open to suggestions.. Hi.  This is puppeteer behavior-- not BackstopJS behavior.  This might not happen if you specify a selector that is in the viewport.. Ah great!   Nice problem solving there \ud83d\udc4d . Currently, for image diffing to make any sense you need to compare renderings of the same size.. BackstopJS is about workflow whereas resemble is about diffing images.  so, handling of different sized images is probably something that should be addressed from the resemble side.   Perhaps you can take a look at the resemble code and submit a PR which would handle this condition in an intuitive and less noizy way.   Or better yet, you could contribute to the Diverged library project -- I am happy to support that if you'd like to get involved.  \nCheers!. @kumarpatel  Hi there.  Yes -- there is a simple integration in backstopjs now.  I haven't had a chance to do any documentation but let me see if I can just add the basics here.   I will try to get this done later today.   Thanks for your interest -- happy to hear feedback!\n. @aczekajski Great idea.  Yes.  Will do.   I will link it from here!. OK -- here you go!   Gotta get back to the day job!!!  \ud83c\udfc3 \nDemo instructions here \ud83d\udc49   https://github.com/garris/BackstopJS/issues/974. Have you tried the puppeteer documentation or issues?   If it can be done the solution would probably be there.. Backstop uses chrome to simulate sizes but not really environments.  So no other browsers/phones are directly supported at this time.. @beto-aveiga Thank you for posting!   These features are part of a plug-in architecture.  These are intended to enable you to customize for your own project.  After running backstop init you will find these here... backstop_data/engine_scripts/puppet/  (for puppeteer)\nI hope this answers your question.. At this point we are softly deprecating chromy.   If possible -- please try this in puppeteer.   But in either engine -- if the documentation is off or clickSelector is not working it is a bug.   Please verify using a clean install and start here for troubleshooting... https://github.com/garris/BackstopJS#troubleshooting. The tests render differently on different machines.  Can you just \"print\" to a pdf and attach the file here.  I can take a look and validate that the differences are \"safe\".   (At some point we will move to a docker version which will not have this issue). Hi @pixilz.   Thank you for posting!    It would be great if you could document this feature in the troubleshooting section of the readme.  I would gladly pull in that PR.  Cheers.  \ud83d\ude3a. I had to back that change out because that commit broke the scrubber feature.  I'm happy to reapply you want to pull that diff and troubleshoot/fix the issue.. Sure,  Just run a test on something that will produce a diff -- then click on the diff in the web report.   If the scrubber is grabbable/useable then everything is good.  If it doesn't work -- then you'll need to figure out which dependency caused the issue.\nCheers.\n. @aw-davidson sorry,  I had to revert this.  The report on your PR was broken.   Also,  the new puppeteer has a different rendering behavior -- because of this some of the tests were running inconsistently.\nIf you'd like to give this another try would you please make sure you can get consistent results when running this \ud83d\udc49 https://github.com/garris/BackstopJS/blob/master/test/configs/backstop_features.js\nThanks!. Does this work if you were to run backstop locally -- without the docker flag?\nI have a feeling that the docker implementation (in backstop) is not compatible with this approach.  My guess is that this fixable if you have the time to look into it.. Yup,  thanks for confirming that.  I guess to enable this the right way we would execute the config locally and pass a rendered config string/file to the docker instance?  Might be a bit of work.. Sounds good to me.  Maybe create a temp file with common prefix and unique suffix name in parallel with working config file.  Something like that?\n. Just so happens there is a PR for a JSON report here https://github.com/garris/BackstopJS/pull/897\nI haven't had a chance to review it.  Would be great if you could pull this down and let me know if it works. . Is it just one scenario out of 232 that fails?. Would you please add to documentation?. They may need to be in the viewport.. Well, it's a guess.  Would it work if you set the viewport really tall?  To at least understand the issue if not as a workaround.. The feature tests include some selectorExpansion coverage.   You could try to see if that still passes...\nhttps://github.com/garris/BackstopJS/blob/master/test/configs/backstop_features.js. Here is an example of using an JS config file.  You can import your scenarios into this at runtime...\nhttps://github.com/garris/BackstopJS/tree/master/examples/jsBasedConfig\nThere are many more customization options if you invoke backstop as an npm module.  More info in the docs.. Glad it worked or you.  Thanks for following up. . Thank you for the follow up post!. 3 things...\n1)  thank you for this post.  You are awesome for putting in this effort\n2)  there is already an internal parameter you can use to detect or set remote mode.   Search for the switch case that parses for \"moby\"  -- it's around there.\n3)  what are potential regressions for existing users?   How should this be rilled out?  There is currently a request to add a dockerArgs to the config.  Should this be part of the same release?. Wow.  That just made my head explode. \ud83e\udd2f\n\n\nThe --moby/--docker arg seems to create a backstop container and run the tests in that. In contrast, my proposal is only about where chrome runs (and only for puppeteer, although chromy might also support such a thing, I didn't check), be it docker or some remote server. They can be used together and would make the --moby (and regular runs) less resource intensive (given there's a remote chrome instance which is set up to accept connections).. Very cool idea.  Would be fantastic if someone wants to build it.  . This is cool -- thank you!  I have some changes on the npm canary branch that need to be released.   I will try to get those out next week, then we can merge these and put it out on the canary branch.   More later.   Cheers!. @jehoshua02     Please go ahead and format this file.   I will pull your changes.\n. Please check for property value here eg., if(scenario.cookiesJsonFile && fs.isFile(...\n. As long as we're at it, maybe the text should be shortened to: \n\"       See: \"   // 7 space characters before and one space char after\n\n\nEssentially indent the file info to start with the error data value.\n. I'm inclined to just let the user name it whatever they want or if you really want to enforce/signal file type, just append an .xml extension if one doesn't exist.  (As opposed to clobbering the user's input)\n. There is another feature branch where someone is working on a custom filename #197.  If we move forward with this we would need to keep that other feature in mind -- maybe by extending the custom filename feature OR by ignoring it.  Would be worth a quick discussion. \n. Maybe use a shorter delim here?   Maybe just an _n?\n. What is the reason for adding this to the string prototype as opposed to just a local method? \n. Can we default to backstop_data/html_report?\n. Does this work?  I think we need to use removeChild().   Something like -- s.parentNode.removeChild( s );. Is that true -- or am I confused?\n. Can you explain what case we need to guard against here?  I don't see it.\n. Instead of modifying i - why not  add a new template key expandedIndex and add that to the default template?  We should also make sure this works with the new and currently  undocumented -- filter=scenarioId feature.   Will using a filter put our expanded elements out of sync with their index?\n. Again, this should probably be done using the template feature.\n. See filenameTemplate string declared earlier in the script.  \nI think we should try to not modify name segments named by other features.  This keeps features isolated.  The new filename template should look like this...\n{configId}_{scenarioLabel}_{selectorIndex}_{selectorLabel}_{viewportIndex}_{viewportLabel}{expansionIndex};\n...and for an element which repeats 3 times expansionIndex should equal '', '__n1', '__n2'.\nE.G.\nmyConfig_myScenario_0_div_0_phoneView.png\nmyConfig_myScenario_0_div_0_phoneView__n1.png\nmyConfig_myScenario_0_div_0_phoneView__n2.png\nDoes that help?\n. This will only work if jQuery or similar is included in the target page.  I don't think we are injecting that.  Please review.\n. Would you consider changing property name to requireSameDimentions?\n. This will always resolve to true.   Try userConfig.isSameDimensions === false ? false : true\n. fyi: you solved the issue so you can remove the todo here.. I think this is a little cleaner?\nvar outputFormat = \".\" + (config.outputFormat && config.outputFormat.match(/jpg|jpeg/) || 'png');. Yes that is totally the pattern I wanted -- but map here is actually p-map (line 3) which wraps a generic map fn in a Promise.all().  So, not chainable here etc.. Wouldn't the option be 'webdriver' or 'webdriver:browserArg' here?. Functions like these should probably be broken out into separate util files with tests to make this refactor cleaner.. Please move these functions into the new file verbatim -- these have been tested.  Let's not use the original backstopTools methods.  Thanks.. injectBackstopTools() should probably be moved to line 211 -- and only run if !window.exists.   Does that work?. injectBackstopTools() probably also unconditionally needs to run on line 151.. Thanks for looking at this.  Yes, That is the request.   I think there may have been tweaks to the methods inside of runChromy.js  -- That code has been working in prod -- so I'd like to ensure there are as few changes as possible.    I think there may be some minimal inline documentation added as well.   Simply copying the whole thing may be easier than attempting to diff.. We may also want to extend the names to avoid any collisions.  I never liked the name .exists -- it's way too common.  maybe window._backstopTools.exists() would be better.. @anton-kulagin Sorry for the delay.  Very very busy at work.   I am not very familiar with this section of code and I am not sure what the side-effects will be.   Can you give me some context?. hmmm.  I like this but what if this is a totally huge config?  That could get annoying -- maybe wrap this in an if(config.debug){} condition?  Also, if you're going to do something like this I would prefer it formatted via JSON.stringify(config, null, 2)\notherwise looks good.\n. Should this be a const?  It looks like this result is not the same result used above?  Or did I maybe read this wrong?   . Holy crap -- I just found a bug that I introduced a few days ago!   This value should also be wrapped in a translateUrl   -- would you mind adding that?\nurl = translateUrl(scenario.referenceUrl);. In this case we resolve either way.   The intention is to pass the error up as a result.. Cool.  Thanks!. I guess we are just adding this to ensure any existing dependencies are supported?  We probably don't need this.  \nAs a bonus I think it would also be nice to only enable the backstopTools log tracking if the engine is set to chromy.   Not necessary to implement that bit though.. Very nice harness you built there!  \nA suggestion: would you consider leaving the smoke-test command the same (so it executes the backstop_features test like before) -- and add a new command for your new harness.  Maybe call it like, travis-test or git-commit-test or deploy-test? \nI am totally open to suggestions -- my instinct is to keep it convenient for devs to still be able to run the raw smoke-test and see results (passing or non-passing). \nDoes this make sense?\n. Sounds good!\nI honestly am not an expert in docker -- I just know enough to get me into trouble.  I am happy to share the configs with you -- they should all be in the /docker directory.\nAlso -- just so I am understanding correctly -- when you say...\n\nIt seems like launching in travis doesn't really work\n\n...are you saying you cant run backstop tests in travis?\n. Of course in real life -- our designer would not let us remove a style because it was inconvenient to test \ud83d\ude04.   Can we modify the test if this is causing a failure? . The ID property is appended to all test images -- so adding your platform parameter there enables backstop to track these resources at file level.\nLine 8 can be\nid: `${PLATFORM}_${ENGINE}_backstop_features`,\n. I noticed that you are not using cookies -- so in this case it seems unnecessary to customize the cookie path.   And even if we did have cookies -- it's likely these would share the same file so the original (default) value does not need to be changed here.. Reference and test scripts can all remain using their default values.. Engine scripts should stay in the backstop_data directory.  (keep default value). Both reports can remain at thier default location. (keep default value). I would love to know what each of these lines did.  I find it hard to parse docker configs.   Particularly lines 5 & 6.   I guess I expect we would cd to a workspace, install backstop locally to that space and use the feature tests runner.   I don't understand why /test/configs/linux/node_modules is called out in there.. This sort of thing should be placed at the top of this script with explicit comments around how to use this array to handle different test scenarios.\nIn this case we should name it something very clear.. same comment as above for this array.. Please use named functions for clarity.. would prefer if these were encapsulated a bit by functions so that the overall flow of this script can be easily grasped in a few lines.. yes that works.  We can just comment the flaky test now and create an issue.\nThere is actually an article on dwb  which discusses exactly your idea \u2014 using the transition event.  The onReady test script can attach a listener and just emit a console log which triggers the shot.. what does this line do?. I dont think you need this line.. I think you want this...\n.evaluate(function(scrollToSelector){\n  document.querySelector(scrollToSelector).scrollIntoView();\n}, scrollToSelector);. You probably also need to guard against scrollToSelector not being found.. Do you intend scrollToSelector to take an array value?  or just a string? Array feels like it would produce some noisy results.. Is this going to show up on the backstop brochure page?   It's a bit of a sequitur \ud83e\udd14. I thought this feature was intended to test a child-element inside a scrollable div?   I thought the below-the-fold elements that were direct children of the body tag already worked correctly?   Am I missing something here?. Should also be under backstop data.. In this case \u2014 I think it\u2019s best that you create a folder in the test directory, maybe call it \u201cspecial_cases\u201d or something like that.  And in there you can add an html file which easily simulates the issue.  For that scenario you can point to that file.  Does that make sense?. I just thought \u2014 what might be better instead is to add a folder to the examples directory and call it \u201cscrolling_cases\u201d.  In there you can add an html file which simulated the issue and a backstop config which demonstrates how to test the case.  You can add a short readme with a sentence which explains the issue and how to resolve it so other users can learn from your example.. Correct. I don't think so.  Looks like a typo. \ud83d\ude44. suggestion\nkeyPressSelectors        // Takes array of selector and string values -- simulates multiple sequential keypress interactions.. suggestion\n        \"keyPress\": \"1234\". Please model this after the load cookies feature.   Please note the cookie param name cookiePath.   This should be localStoragePath (or something to that effect). Please model this after the capture/engine_scripts/puppet/loadCookies.js file.   Guard against bad file paths etc.   \nPlease implement as an add in -- like loadCookies -- see: capture/engine_scripts/puppet/onBefore.js\nDo not implement this on the main codepath.. Please implement as an add in -- like loadCookies -- see: capture/engine_scripts/puppet/onBefore.js\nDo not implement this on the main codepath.\n. In this file -- please take the newer changes (on the left).  The file on the right is old.  Thanks.. I think this whole file can be removed?. Hi,  I am not sure this is clear -- the example you give is not comma separated.  Where would a user check this value?  \n\nheight or width that is a comma-separated value (i.e. 804.25px). \n",
    "tomheller": "Works splendidly. Thanks for the quick fix.\n. ",
    "Jenkosama": "I have the same problem on windows 8.\n. ",
    "coljung": "Path for the backstop.js file:\n/myproject/backstop.json\nIm on Win8 \nAlso, by config file you mean my gulpfile.js?\n. Sure, here is the code:\n{\n    \"viewports\" : [\n        {\n         \"name\": \"phone\",\n         \"viewport\": {\"width\": 320, \"height\": 480}\n        }\n        ,{\n         \"name\": \"tablet_v\",\n         \"viewport\": {\"width\": 568, \"height\": 1024}\n        }\n        ,{\n         \"name\": \"tablet_h\",\n         \"viewport\": {\"width\": 1024, \"height\": 768}\n        }\n    ]\n    ,\"grabConfigs\" : [\n      {\n        \"testName\":\"name\"\n        ,\"url\":\"../../index.html\"\n        ,\"hideSelectors\": [\n        ]\n        ,\"removeSelectors\": [\n        ]\n        ,\"selectors\":[\n          \"nav\"\n          ,\".jumbotron\"\n          ,\"body .col-md-4:nth-of-type(1)\"\n          ,\"body .col-md-4:nth-of-type(2)\"\n          ,\"body .col-md-4:nth-of-type(3)\"\n          ,\"footer\"\n        ]\n      }\n    ]\n}\n. Nope..\nC:\\Users\\Pablo\\Projects\\git\\myCoolProject\\bower_components\\backstopjs\n\u03bb gulp genConfig\n[16:10:46] Using gulpfile ~\\Projects\\git\\myCoolProject\\bower_components\\backstopjs\\gulpfile.js\n[16:10:46] Starting 'genConfig'...\n[16:10:46] Finished 'genConfig' after 25 ms\nbut then i tried gulp echo:\nC:\\Users\\Pablo\\Projects\\git\\myCoolProject\\bower_components\\backstopjs\n\u03bb gulp echo\n[16:12:26] Using gulpfile ~\\Projects\\git\\myCoolProject\\bower_components\\backstopjs\\gulpfile.js\n[16:12:26] Starting 'echo'...\n[16:12:26] Finished 'echo' after 3.15 ms\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: spawn ENOENT\n    at errnoException (child_process.js:1001:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:792:34)\n. ",
    "lewisnyman": "I also had this issue, I found that I had to run:\nnpm install phantomjsnpm install -g casperjs\nShouldn't these be included in the package.json?\n. Great, I think simply printing a PDF of the page was the obvious answer I missed. Thanks!\n. Maybe split up the changes into separate pull requests? The editor config one is simply removing white space.\nIf we commit the Travis CI file first, then we can set up the automated tests to ensure the code improvements don't break anything.\n. @felquis Would you be happy to close this pull request and submit separate pull requests for the .editorconfig and JSHint?\n. I'll send a pull request next week. I've been concentrating on the presentation. It should be recorded so I'll send you the video once it's up :)\n. I needed to use this feature today as it happens. I needed to add the delay setting to every page, which was a little tiresome. Maybe allowing a global configuration that can be overridden per page might be better? I guess you could do the same for the event option\n. No problem! This is how open source works :) Thanks for working on it\n. Sounds good, the only thing I would change is to move the opening brackets of an object to a new line, eg:\n}, \n    {\n      \"name\": \"tablet_v\",\n      \"viewport\": {\n        \"width\": 568,\n        \"height\": 1024\n      }\n    }\n. Yes, it would be great if the only command users had to run was npm install. I'd rather stick with the Travis config that maintains the status quo, and then make changes that affect everyone in dedicated issues. How does that sound?\n. The only thing left to do here is for you to do here is to head to https://travis-ci.org and login, then enable your repository for testing.\nYou can also add status images to the Readme so it's easy to tell if the latest changes broke the script http://docs.travis-ci.com/user/status-images/\n. Looks good to me, this pull request also removes whitespace\n. Sounds really nice, this would bring it inline with the conventions of a lot of npm-managed tools.\n. Maybe we could add more useful error messages for people who are caught by\nthe upgrade?\nOn Monday, 9 February 2015, Garris notifications@github.com wrote:\n\nHi @dendril https://github.com/dendril, thanks for filing this. The\nconfig files are slightly different from version 0.3.0 & 0.4.0 and this\ncould cause the issue.\nIf you run gulp genConfig the app will write a default configuration file\nat the root of your project. (Please be careful, this will overwrite any\nconfig existing at that location.)\nThen you can try running gulp reference and gulp test. It should work\nthen. Please let me know if that fixes the issue.\nThanks! GS\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/34#issuecomment-73567676.\n\n\nLewis Nyman\n+447753103690\nlewisnyman.co.uk http://www.lewisnyman.co.uk\n@lewisnyman http://twitter.com/lewisnyman\n. I wonder if this moves beyond the config-only simplicity of BackstopJS. If you want to test interactions, you need to write scripts, I think a much better tool would be PhantomCSS.\n. Nice! Thanks :) I got a little stuck when working on it\n. ",
    "brutaldev": "Had the same problem when required libraries where missing for the dependency projects (namely PhantomJS and CasperJS).\nIn your console, execute the command phantomjs to see if it starts properly. Then also try casperjs to ensure that starts properly as well. (Ctrl+C to exit)\nWhen executing casperjs I got an error stating that 'python' is not recognized as an internal or external command so I had to install Python, add it to the PATH, and restart the console.\nThis fixes the normal executing but still fails to perform the echo in Windows because the CasperJS process name is not correct,\n. ",
    "matt-newman": "I know this is a closed issue, but I had this problem and the above steps didn't quite work for me, I had everything installed and running independently, but as I'd installed casperjs a long time ago independently it existed elsewhere on my PATH:\nYou can work out if you're having the same problem by using:\nOn windows cmd:\n\nwhere phantomjs\nwhere casperjs\n\nOn windows 'bash' (mysys, gitbash, etc):\n\nwhich phantomjs\nwhich casperjs\n\nIt's easiest if they're all in the same location, for me I made that npm global installs, e.g: /c/Users/{USERNAME}/AppData/Roaming/npm/\ncasperjs was in a different location so I had to remove that reference (environment variables) and install it via:\nnpm install -g casperjs\nhope that helps someone\n. ",
    "DimaVartanian": "According to this you can submit a support request which doesn't seem like too much trouble: https://help.github.com/articles/my-repository-is-marked-as-the-wrong-language/\nDefinitely seems like a bug in the Linguist bot.\n. ",
    "proll": "Oh, you're welcome\n. ",
    "felquis": "@garris So, than more close you are in a component (like a button), more accurate is the test between images right? This is pretty interesting :)\n. I tested here and it's working fine! I think this is really useful :)\n. I haven't fixed the warnings, run gulp jscs to see them :) \n. ",
    "xavhan": "try JSCS for consistency ;)\n. ",
    "YuliaTsareva": "Any news on this pull request?\nI think it would be useful to merge at least .editorconfig and then little by little update scripts. If you don't mind I can make separate pull request.\n. @garris  great news!\n. @garris A little bit offtopic, but I wonder if you have any reason not to separate compare/index.html into index.html + js file + css file like I did there https://github.com/garris/BackstopJS/compare/master...YuliaTsareva:zoom-images\nI think it would make life much easier :) I can pull request it without my zoom.\n. @garris You know my zoom needs jquery, so let's for now leave it without zoom.\n. +1\n. Thank you, I will test it on Windows and OS X today at night.\n. @garris It works both on OS X and Windows.\n. My idea was to open modal dialog with image. Something similar to this: http://dimsemenov.com/plugins/magnific-popup/\n. Pop-ups provide smoother user experience because they do not make user to switch between tabs. I also would prefer not to add jquery, but I don't know any library which could do such zooming without jquery.\n. Actually, I've already solved it for myself using lightbox2. It looks exactly as I wanted and solved the problem (well, I need to test it with larger screenshots, but for now it looks quite good).\n\nIn my opinion there are some advantages over new tab:\n- user stays in current tab and can open and close image quickly;\n- it is possible to navigate from zoomed reference image to zoomed test image and then to zoomed diff with just one click on image;\n- it shows small description under the image so I always understand which exactly image I see now (is it reference or is it test).\nBut also there are disadvantages:\n- it needs jquery;\n- it use compileProvider.aHrefSanitizationWhitelist to whitelist data:image in a href (which I consider a bad practice but can't avoid it for now).\nIt is just my opinion, may be you can offer better solution :)\n. Of course, if it as easy as you say, it makes sense.\nBut won't it stretch images to all available place? I suppose that screenshot should be centered if it is smaller than screen size (not stretched) and should be adjusted to available place if it is larger.\n. Actually I work with angular every day :) One more reason why I prefer third-party library is that its quality is more or less guaranteed, no need to test it (by the way, would be great to have more tests).\nWell, I understand your point of view and probably will try to do it. Although for now my solution solves my problem.\n. Hi @kamlesh-astech,\nShort answer is no.\nAnd long answer:\nI implemented it using lightbox2 script in my fork and it satisfied my needs completely. But my solution needed jQuery to be included. As BackstopJS itself doesn't need jQuery (at least, it didn't need it 6 months ago), we decided that this improvement should be implemented in other way.\nAs I stopped working on a project where I needed BackstopJS, I haven't returned to this issue.\n. @kamlesh-astech\nTry to inject $compileProvider to compareApp.config and add a line:\n$compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|file):|data:image\\//);\nIt should help.\n. You can open the same report with gulp report command.\n. @awongCM @garris Actually, such selectors should work. I tried to add p.version+div, div>p.version and p~p to example backstop.json and everything was OK.\n@awongCM Can you show example of selector which doesn't work for you?\n. In my opinion it would be great if BackstopJS wasn't built on top of Gulp at all :)\nIt is an extra dependency for projects that does not use Gulp. And can stop developers from adopting BackstopJS.\n. @garris Sorry, I am not familiar with such frameworks... if I were to refactor, I definitely would investigate this question :)\nI haven't tried clite, may be it is a good tool. But I would suggest to check if there is any well-known project (and with more stars).\n. ",
    "caseycobb": "@garris - here's what I'm seeing:\n{\n  \"name\": \"BackstopJS\",\n  \"version\": \"0.2.4\",\n  \"main\": \"/\",\n  \"ignore\": [\n    \"node_modules\",\n    \"bitmaps_test\",\n    \".sublime\",\n    \"capture/config.json\",\n    \"compare/config.json\"\n  ],\n  \"dependencies\": {\n  },\n  \"devDependencies\": {\n  }\n}\n. @garris - does this output seem right? \n$ casperjs\nCasperJS version 1.1.0-beta3 at /usr/local/lib/node_modules/casperjs, using phantomjs version 1.9.0\nUsage: casperjs [options] script.[js|coffee] [script argument [script argument ...]]\n       casperjs [options] test [test path [test path ...]]\n       casperjs [options] selftest\n       casperjs [options] __selfcommandtest\nOptions:\n--verbose   Prints log messages to the console\n--log-level Sets logging level\n--help      Prints this help\n--version   Prints out CasperJS version\n--engine=name Use the given engine. Current supported engine: phantomjs and slimerjs\nRead the docs http://docs.casperjs.org/\n$ phantomjs\nphantomjs> \n. @garris - gulp echo does the same thing. \n$ gulp echo\n[20:54:00] Using gulpfile /vhosts/site_files/bower_components/backstopjs/gulpfile.js\n[20:54:00] Starting 'echo'...\n[20:54:00] Finished 'echo' after 4.38 ms\nCasperJS: CREATING NEW REFERENCE FILES\n^C^C\nOne thing I did notice is that gulp reference gives me a warning. \"gulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead\". Is that maybe relevant?\n$ gulp reference\n[20:55:07] Using gulpfile /vhosts/site_files/bower_components/backstopjs/gulpfile.js\n[20:55:07] Starting 'clean'...\nbitmaps_reference was cleaned.\n[20:55:07] Starting 'bless'...\n[20:55:07] Finished 'clean' after 17 ms\n[20:55:07] Finished 'bless' after 26 ms\n[20:55:07] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[20:55:07] Starting 'init'...\n[20:55:07] Finished 'init' after 64 \u03bcs\n[20:55:07] Starting 'test'...\nGenerating reference files.\n[20:55:07] Finished 'test' after 8.4 ms\nreference has run.\n[20:55:07] Finished 'reference' after 10 ms\nCasperJS: CREATING NEW REFERENCE FILES\n. @garris - I haven't tried to get it working on my mac. I just spun up a Digital Ocean instance to play around with Backstop today. So we can do whatever we want with this instance as I can always just spin up another.\nBut I think we're zeroing in on the issue. Looks like phantom is the issue:\n$ gulp echo\n[21:43:58] Using gulpfile /vhosts/site_files/bower_components/backstopjs/gulpfile.js\n[21:43:58] Starting 'echo'...\n[21:43:58] Finished 'echo' after 4.3 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS:  echoFiles> CASPER IS RUNNING\n^C\n. Just tested some quickstart examples for phantomjs here: http://phantomjs.org/quick-start.html and they all seem to work, so phantomjs seems okay. \n. Weird...I did the first example here: http://casperjs.readthedocs.org/en/latest/quickstart.html\nIt seems to hang. I can console.log debug code and it outputs after every command. So something seems to be messed up with casperjs, I guess? \n. @garris - I figured it out. I must have at some point installed phantomjs with apt-get which installed 1.9.0. When I tried to install 1.9.8 with npm, it wasn't completing because the ubuntu version was taking precedence. Once I got 1.9.8 installed, everything is working.\nThanks for your help on this wild goose chase. I really appreciate the quick response. Man, this app is really cool!\nMarking as resolved.\n. ",
    "fvena": "Yes, I have those versions, but get the following message:\n$ phantomjs -v\n\n1.9.8\n\n$ casperjs --version\n\n1.1.0-beta3\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file:///Users/fvena/.node/lib/node_modules/casperjs/bin/bootstrap.js. Domains, protocols and ports must match.\n. $ gulp genConfig\nUsing gulpfile ~/Sites/temp/myCoolProject/bower_components/backstopjs/gulpfile.js\nStarting 'genConfig'...\nFinished 'genConfig' after 16 ms\n\nbackstop.json\n```\n{\n    \"viewports\" : [\n        {\n         \"name\": \"phone\",\n         \"viewport\": {\"width\": 320, \"height\": 480}\n        }\n        ,{\n         \"name\": \"tablet_v\",\n         \"viewport\": {\"width\": 568, \"height\": 1024}\n        }\n        ,{\n         \"name\": \"tablet_h\",\n         \"viewport\": {\"width\": 1024, \"height\": 768}\n        }\n    ]\n    ,\"grabConfigs\" : [\n        {\n            \"testName\":\"http://getbootstrap.com\"\n            ,\"url\":\"http://getbootstrap.com\"\n            ,\"hideSelectors\": [\n            ]\n            ,\"removeSelectors\": [\n                \"#carbonads-container\"\n            ]\n            ,\"selectors\":[\n                \"header\"\n                ,\"main\"\n                ,\"body .bs-docs-featurette:nth-of-type(1)\"\n                ,\"body .bs-docs-featurette:nth-of-type(2)\"\n                ,\"footer\"\n                ,\"body\"\n            ]\n        }\n    ]\n}\n$ gulp reference\n```\nUsing gulpfile ~/Sites/temp/myCoolProject/bower_components/backstopjs/gulpfile.js\nStarting 'clean'...\nbitmaps_reference was cleaned.\nStarting 'bless'...\nFinished 'clean' after 12 ms\nFinished 'bless' after 17 ms\nStarting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\nStarting 'init'...\nBackstopJS needs to update bower_components, please hang on...\nFinished 'init' after 4.56 ms\nStarting 'test'...\nGenerating reference files.\nFinished 'test' after 2.24 ms\nreference has run.\nFinished 'reference' after 8.12 ms\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: spawn ENOENT\n    at errnoException (child_process.js:1001:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:792:34)\n. Thank you very much for your help, my OS is OSX Yosemite 10.10.1, this is what I get:\nReady to run capture/genBitmaps.js with casperjs.\n. ",
    "peter-mouland": "I went a slightly different direction and built this: https://github.com/skyglobal/Sheut\nrelies on node-canvas and is pain having to install cario...\n. ",
    "sergesemashko": "Yeah, I don't know either :) That structure is automatically generated after, I guess, npm install. I was running commands in order according to CSS-tricks manual. \n. @garris it works, \nthanks for quick reply and fix\n. ",
    "jehoshua02": "@lewisnyman I can live with that! In fact, that's typically what I do when working in json.\n. Maybe looking at how I've done things here will help: https://github.com/jehoshua02/backstopjs-example\n. You would bump your version number and they could stay on an older version of backstop.\n. I've forked it and will submit a pull request sometime.\n. See backstopjs-example. Also see related, but independent issue CasperJS and PhantomJS are BackstopJS Dependencies.\n. @garris I'm excited to see activity in this project. I may or may not have time to submit a pull request this weekend. I will try but I don't want to hold back progress if I can't find the time.\n. @garris For npm install, is there anything else to do other than updating the README.md?\n. Related issue: https://github.com/garris/BackstopJS/issues/26\n. @garris I'll let you handle that one. But there's nothing else in the repository?\n. @garris I'm on it. Don't freak out. I'll fix it :)\n. @garris That's better. All done. Merry Christmas.\n. @lewisnyman Ah, yeah I have my editor set to remove trailing whitespace on save. We do that at work to eliminate problems with whitespace differences.\n. Before calling it 1.0 I might refactor from a set of gulp tasks into a command line tool.\n. But I'm all for releasing a new version for the npm install.\n. Start simple with something like this ...\nshell\ncd ~/projects/myCoolProject\nnpm install --save-dev backstop #[1]\n./node_modules/.bin/backstop init #[2]\n./node_modules/.bin/backstop reference #[3]\n./node_modules/.bin/backstop test #[4]\ngit add backstop_files backstop.json; git commit #[5]\n1. Install backstop and dependencies via npm. I'd like this to install casperjs and phantomjs as well. We'd have to do some kind of magic to make these versions visible within backstop code.\n2. Run command to generate backstop.json config file in the current directory (~/projects/myCoolProject).\n3. Run command to capture reference screenshots based on backstop.json found in current directory.\n4. Run command to capture test screenshots based on backstop.json found in current directory.\n5. Track backstop generated files. This would contain reference and test screenshots and report formats for human or automated machine consumption (html, json). Backstop can create a .gitignore in this directory for test screenshots and reports so only reference screenshots are tracked. I'd like to run backstop in a continuous integration environment and cause the build to fail if the differences cross some threshold.\nAlternatively, backstop could be installed globally, but it would only act as a wrapper and run the local version if installed, in effect, the same commands as above, much like bower or gulp ...\nshell\nnpm install -g backstop #[1]\ncd ~/projects/myCoolProject\nbackstop init #[2]\nbackstop reference #[2]\nbackstop test #[2]\ngit add backstop_files backstop.json; git commit #[3]\n1. Install with npm globally.\n2. Commands do exactly the same thing as before. The command is just nicer.\n3. All the same files are generated in the current directory.\nEven when installing globally, I'd still recommend installing locally as well. The only reason for the global install is to make the command nicer.\n. So I'd release the npm only install. Then I'd release the command line interface as 1.0.\n. @garris \n\n... a central BackstopJS instance to work across multiple projects.\n... custom screenshot file locations relative to the top level project directory ...\n... fixes the huge transgression of saving user data in node_modules.\n\nI like to keep everything specific to a project with that project so they can be updated and committed together so I have a hard time grasping why anyone would want a central backstop instance. I'm open to it, but I think some healthy scrutiny won't hurt anything.\nBackstop could be installed globally, I could create a centralized backstop project somewhere on the system, and configure backstop.json however I needed to to run against multiple projects.\nSo for the 1.0 I'd just put the backstop_files (following the format of <tool>_<what> as in bower_components or node_modules) in the current directory, where the command is run. Then, perhaps in a minor release, add a configuration option to put them in a custom location. This could be anywhere on the system.\nAlso, I was thinking that 1.0 would install casperjs and phantomjs, and even slimerjs, as dependencies via npm and do some \"magic\" to ensure that those versions are used by default when running backstop commands (probably by adding ./node_modules/.bin to the path or something). Then see if that doesn't meet all use cases. If there is a truly compelling use case that can't be accommodated in a pleasing way with what is already available, then expose a configuration option, probably a boolean, to opt out of the \"magic\" and use global casperjs, phantomjs, and slimerjs executables. Something like \"use_local_bin\" with a default true.\n<aside class=\"philosophy\">\nIn all things I'm a fan of keeping the \"public interface\" (the parts we intend for use, and intended usage of those parts) lean, simple, and sensical so that it's easier for users to learn and use, and easier for us to maintain. So I resist expanding the public interface without first observing and feeling a real need to, and try to shrink and simplify the public interface whenever possible. I keep everything else private, or at least quiet, only documenting the public interface.\n</aside>\n\n... credit on the backstopjs homepage for your contributions \n... any particular URL.\n\nHow about a widget for that?\n. My lean public interface philosophy is influenced by \"Getting Real\".\n. @garris Tell me what you think about this ...\nCommands\n- ./node_modules/.bin/backstop init (previously known as genConfig)\n- ./node_modules/.bin/backstop reference\n- ./node_modules/.bin/backstop test\n- ./node_modules/.bin/backstop echo\n- ./node_modules/.bin/backstop bless\n- ./node_modules/.bin/backstop start\n- ./node_modules/.bin/backstop stop\n(I'd like to tackle the global install in the next release, which would sweeten up this command syntax.)\nFiles\ntree\n+ ./ (current directory where command is run)\n| + backstop_files/ (contains all backstop generated files, other than config)\n| | + reference/ (generated by reference command)\n| | + test/ (generated by test command)\n| | + report/ (generated by test command)\n| | | + html/ (probably just the compare app)\n| | | + report.json (format for programmatic consumption)\n| | + .gitignore (ignores test and report but not reference)\n| + backstop.json\nConfigurations\n- Freeze until after command line refactor is done.\n. @garris No worries. I'm juggling quite a bit myself. Respond when, and only when, you can.\nI've updated my spec to include echo, bless, start, stop. Though I was thinking that the html report could be a static app that could be opened in file protocol without the server. Each project would have their own copy of the html report (I'm coming from PHPUnit). We can talk more about it. We can preserve current functionality while we think about it.\nWe'll pick up when you have time.\n. Inconsistent indentation. I don't know about you guys, but I use 2 spaces instead of a tab for all javascript. Configured my editor to do it that way when I hit the tab key, and to auto indent on new line.\n. ",
    "ArmorDarks": "+1 for such refactoring.\nI really hope that Gulp or Grunt versions would be implemented by independent tasks instead of being build on top of Gulp.\n. ",
    "WillsB3": "Would this refactor allow me to use Backstop without having to write to a config file? I'm generating my config object in Node (dynamically, as it parses URLs from a sitemap.xml and then creates a scenario for each) and, as far as I can tell, currently I have to write the resulting config object to disk before calling npm test -- --configPath=....\nIf this issue is describing what I think it is, it'd allow developers to require() the Backstop module and use it's API from within their own Node scripts right? If this is the case I assume it also means we won't need to build on top of Gulp anymore?\nOr did I completely misunderstand this suggestion :D\n. @garris I had seen that documentation, but that still doesn't do what I need. As explained, I need to call Backstop from within my own Node script, because we are generating the JSON on the fly as a result of scraping our sitemap. Hence currently we are generating the JSON, and then trying to run backstop by doing something like this:\n``` js\n// Have to run the bless task because I generate the \"reference\" screenshots by using the live sites sitemap.xml, while the \"test\" screenshots are generated using a sitemap on a local development build of the site.\nexecSync('gulp bless --configPath=../../backstop/config.js', {\n  cwd: 'node_modules/backstopjs',\n});\nvar bs = spawn('npm', ['run', 'test', '--', '--configPath=../../backstop/config.js'], {\n  cwd: 'node_modules/backstopjs',\n});\nbs.stdout.on('data', function(data) {\n  console.log(data.toString());\n});\nbs.stderr.on('data', function(data) {\n  console.log(data.toString());\n});\nbs.on('close', function(code) {\n  console.log('Exiting with code: ' + code);\n});\nbs.on('error', function(error) {\n  console.log('Error: ', error);\n});\n```\nThis is pretty nasty (and doesn't even fully work yet (as I'm battling another error Backstop is throwing during the npm test), but surely there should be no reason I have to write any sort of config to disk. Ideally, I could do something like this:\n``` js\nvar backstop = require('backstop');\nvar config = generateMyConfigDynamically();\nbackstop.go(config);\n```\nHere I'm just requiring Backstop and using an API like other normal node libraries. The current behaviour means I have to write a config to disk, and then do nasty things with exec/execSync to call npm scripts from within my own script.\nI don't really see why this tool is all built on top of Gulp, it seems to just make things more complicated, and means that users can't do much customisation if they have a slightly different workflow to that which the tool expects? Seems to me that Backstop could be a standalone node package, with a separate gulp wrapper that users can use if they want to integrate it into their own gulp workflow. The whole \"cd into node_modules/backstop and then run it's gulp things\" just adds confusion and extra dependencies in my eyes, and limits how it can be integrated into larger systems.\nHaving said all that, Backstop looks like an great tool, and I'd love to hear your thoughts on if you think there's room for improvement in this area, and if so how I might be able to help?\nP.S Let me know if you think this would be better discussed in a separate issue.\nMany thanks for the time and effort you've put into this tool so far \ud83d\udc4d \n. ",
    "facundocabrera": "I can't describe it in only one paragraph, please check https://www.docker.com/whatisdocker/\nI'll let you know when I finish with the documentation so you can try this by yourself and give me your feedback :smile: \n. Hey @garris,\nI finally get it working with an small example, please check https://github.com/dendril/docker\nComments are welcome!\n. @garris I was having 2 problems:\n1- I'm building a docker image with this project, this means I'm installing everything in a minimal box, and phantomjs depends on libraries which must be present in the system before start using it.\n2- The configuration file was slightly different because of the version change.\nThanks for you help!\n. ",
    "f4bien": "No trouble @garris! You can test with this kind of config:\njson\n{\n  \"viewports\": [\n    {\n      \"name\": \"Apple iPhone 6 Plus\",\n      \"width\": 414,\n      \"height\": 736,\n      \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.3 (KHTML, like Gecko) Version/8.0 Mobile/12A4345d Safari/600.1.4\"\n    }\n  ]\n}\n. ",
    "Chapabu": "Good call. My only concern with that would be that PhantomJS defaults to SSLv3 (which POODLE kinda borked), so we'd need to allow people to pass in the protocol that should be used. PhantomJS can take one of four arguments for ssl-protocol (namely sslv3, sslv2, tlsv1, any - source), so if we were to guess then there's a 75% chance we'd be wrong (I've not had success with any when using CasperJS for tests, but it my be OK in this case). So I think either way we'd need to add a configuration option somewhere.\n. Actually, I've just checked against Twitter and Facebook, and it appears that passing any works fine. So yeah, perhaps checking for https:// in the url to be tested and just pushing --ssl-protocol=any onto the Casper arguments would work fine. That kinda makes things a LOT easier.\n. One last thing (sorry, I keep thinking just after posting my comments - this'll be the last one, I promise). If a site doesn't use HTTPS, then it doesn't even matter what option we pass to Casper/Phantom. We should just be able to always pass ssl-protocol=any, and it should work across the board.\n. This should fix #38. I've added another array so as not to confuse the tests array. I've then concatenated this array with the previous tests array.\n. Sure, I've added a gist here: https://gist.github.com/Chapabu/787ddfebd5cf6d751278\nI tested against 3 HTTPS pages and 3 non-HTTPS pages to ensure nothing was broken.\n. I'm running the following:\nOSX Yosemite\nPhantomJS 1.9.7\nCasperJS 1.1.0-beta3\nAlthough I have just noticed that PhantomJS 1.9.8 has changed the default ssl protocol to TSLv1 instead of SSLv3 (release notes), so this looks like the main problem was me being on the previous release of PhantomJS. That makes me feel slightly silly as it's the first thing I should have checked!\nSo yeah, this issue is/was only apparent on PhantomJS < 1.9.8.\n. I think it's useful for now, as it allows Backstop to work for HTTPS pages in all available versions of PhantomJS. However, I see the concern with potential future breakage. I guess the only real failsafe would be to tweak the .travis.yml file and add matrix variables for different versions. So you could explicitly run travis against 1.9.7, 1.9.8, and whichever is the latest version from npm. \nI think it'd probably look a little like this:\nyaml\nlanguage: node_js\nnode_js:\n  - \"0.10\"\nenv:\n - PHANTOM_VERSION='1.9.7'\n - PHANTOM_VERSION='1.9.8'\n - PHANTOM_VERSION='latest'\ninstall:\n  - npm install gulp -g\n  - npm install phantomjs@PHANTOMJS_VERSION -g\n  - npm install casperjs -g\n  - npm install\nscript:\n  - gulp reference\n  - gulp test\nThat way travis would run against the older, SSLv3 default argument, the newer TSLv1 default argument, as well as checking it still works against the latest PhantomJS from NPM.\nI can try a pull request for this as well if you'd like, but it'd have to wait until tomorrow as it's 12:30am where I am now :sleeping: \n. ",
    "malcomio": "This article might be useful: https://helloanselm.com/2014/testing-css-states-with-phantomcss/\nIdeally there'd be some documentation on setting up these tests within the backstop.json file.\n. ",
    "joe-watkins": "Thanks @garris I appreciate the work you've done here.  Do you feel like this might possible?\n1. Create a template paths.js file that has owns project specific paths assigned and house that in the root of the project. This file could be checked into the repo.\n2. Have team member copy that file to /node_modules/backstopjs/gulp/utils/paths.js on setup?\nI may try something like that... are there any limitations that spring to mind with an approach like that?\n. :thumbsup: on @ddluc 's grunt-backstop works like a charm!\n. ",
    "ddluc": "@garris  I created grunt-backstop which provides a work around for this issue. \n. @garris I'm not a regular grunt user, so I'm still learning proper conventions for building grunt plugins. I think I need to fix some issues regarding the options. Let me fix that first and then I'll give you the green light. \n. @garris I pushed version  0.1.3 to npm which should properly configure the target options and provide defaults. Give it a test run and provide any feedback if things aren't working. If it all checks out with you, feel free to list it on the page. \n. ",
    "Shashikant86": "@garris Thanks for your feedback. I have removed bower and gulp_chug dependency also updated README file accordingly. Let me know what you think ?\n. ",
    "kyanny": "Hi @garris \nCookie (secure values are masked): https://gist.github.com/kyanny/4feeb13d450f76a49f49\nbackstop.json: https://github.com/kyanny/BackstopJS-sample/blob/master/backstop.json\n. Hi @garris, sounds very good and all makes sense! I will try and open Pull Request.\n. Hi @garris, sorry for delay.\nCould you show me the exact command line to run test suite?\nI read files in test directory carefully, but I'm still not sure how to integrate them to BackstopJS.\n. Hi @garris sorry taking long time.\nI've pushed property check code.\nI'm not good at angularjs, and I'm not sure how to run test and assertion.\nDoes this diff look good to you?\n``` diff\ndiff --git a/test/backstop.json b/test/backstop.json\nindex 614ed86..ddce34b 100644\n--- a/test/backstop.json\n+++ b/test/backstop.json\n@@ -29,6 +29,20 @@\n            ],\n            \"readyEvent\":\"backstop.ready\",\n            \"delay\":0\n+       },\n+       {\n+           \"testName\":\"simple\",\n+           \"url\":\"test/simple.html\",\n+           \"hideSelectors\": [\n+           ],\n+           \"removeSelectors\": [\n+           ],\n+           \"selectors\":[\n+               \"body\"\n+           ],\n+           \"readyEvent\":\"backstop.ready\",\n+         \"delay\":0,\n+                  \"cookiesJsonFile\":\"cookies.json\"\n        }\n    ]\n }\ndiff --git a/test/cookies.json b/test/cookies.json\nnew file mode 100644\nindex 0000000..4a5e26e\n--- /dev/null\n+++ b/test/cookies.json\n@@ -0,0 +1,5 @@\n+{\n+  \"name\": \"mycookie\",\n+  \"value\": \"1\",\n+  \"path\": \"/\"\n+}\ndiff --git a/test/simple.html b/test/simple.html\nindex 2b8672f..a755bd7 100644\n--- a/test/simple.html\n+++ b/test/simple.html\n@@ -73,7 +73,8 @@\n        \n        <div class=\"col-sm-12\">\n\n\nUser agent: {{userAgentStr}}\nUser agent: {{userAgentStr}}\nCookie: {{cookieStr}}\n</div>\n\n@@ -96,7 +97,8 @@\n    }\n$scope.userAgentStr = navigator.userAgent;\n\n-\n+       $scope.cookieStr = document.cookie;\n+   \n}]);\n\n\n```\n. @garris You're welcome! Thank you! :smile: \n. @garris oh I will have a look #44 later. sorry my bad!\n. ",
    "jontonsoup": "+1 cookies would be awesome \n. ",
    "kxpvcr": "+1\n. @kyanny This is brilliant!\n. ",
    "sveetch": "Is there some sample to achieve this with CasperJS ? I'm a little bit lost with casper as i need some session cookie to be set before the page is rendered, else i won't have the \"authenticated only\" content.\nAnd from what i understood from the documentation, it seems the page is already rendered when onReadyScript is executed, did i miss something ?\n. @TimPerry thank you\nI'm trying to achieve my problem with a CasperJS script to launch before just for login and using persistent cookie. I will try your code if i don't succeed.\n. @TimPerry  @garris here it is: https://gist.github.com/sveetch/4a20793b77f2a8b5c045\nIt works well, it's little bit verbose and maybe messy, but it just works.\n. ",
    "TimPerry": "I've got this working in my capser tests by first loading the inital homepage or somerthing, then calling \ncasper.page.addCookie({some: 'cookie'});\nHowever it seems that the implementation for backstop is to use phantom.addCookie, which means you have to know the domain up front, which isnt ideal. I've tried explicitly stating the domain in my cookies.json file but that doesn't seem to work either?\nI have noticed that this section about this functionality in the readme is commented out? Are cookies no longer supported?\n. @sveetch Got something working by creating a set_cookies.js file in the /scripts directory:\n```\nmodule.exports = function(casper, scenario, vp) {\n  casper.echo(\"Setting cookies\");\n  casper.then(function(){\n    casper.page.addCookie({some: 'cookie'});\n  });\ncasper.thenOpen(scenario.url);\n}\n```\nThen in my scenario I have added this:\n\"onReadyScript\": \"set_cookies.js\"\n. @garris Of course not, go for it and thank you for creating such a great tool.\n. That would be the cookie hash. I believe it is a call to this method in phantomJS: http://phantomjs.org/api/webpage/method/add-cookie.html\n. Was just having a read through the packages readme on npm and it appears that they should be clearing that file up :/\n. Looks like there are a lot of open issues on that project. Might be a good idea to swap to an alternate package? If you are busy I might be able to get a PR sorted.\n. Yeah I think this was a permission issue. Was a weird docker setup I think, will close.. +1. ",
    "qileilove": "@TimPerry @kyanny hi  Tim and kyanny, I used the demo for cookies,but it didn't work. \n```\nmodule.exports = function(casper, scenario, vp) {\n  casper.echo(\"Setting cookies\");\n  casper.then(function(){\n    casper.page.addCookie({some: 'cookie'});\n  });\ncasper.thenOpen(scenario.url);\n}\n```\n```\n    casper.page.addCookie({some: 'cookie'});\n```\nwhat's the meaning of  this piece of code ?\n({some:'cookie'}) is cookie file or the cookie hash?\n. ",
    "marciovicente": ":+1: +1 \n. @garris could you take a quick look here? Pls! \ud83d\ude2c \ud83d\ude4f . Yep @garris, as I've mentioned before. The code below generates the same output.\njavascript\n  backstop('reference', { config: newConfig })\n    .catch(err => console.error(err))\n    .then(ok => console.log('>>>>>>', ok));\n``bash\nBackstopJS uses a passed object as config\nCOMMAND | Executing core forreference`\n  clean | /tmp/references was cleaned.\nRunning CasperJS with:  [ '/Users/marciovicente/git/dali/node_modules/backstopjs/capture/genBitmaps.js',\n  '--engine=slimerjs',\n  '--captureConfigFileName=/var/folders/m_/ydbqsgh94vlf0dwk_n1cfhv40000gn/T/capture/6b1961b5474ed3ab4d38a58d00847ea84af8f478.json' ]\nCasperJS:  Debug is enabled!\nCasperJS:\nCasperJS:  CREATING NEW REFERENCE FILES\nCasperJS:\nTesting script failed with code: 1\nAn unexpected error occured. You may want to try setting the debug option to true in your config file.\nCOMMAND | Command reference ended with an error\nCOMMAND | Error: An unexpected error occured. You may want to try setting the debug option to true in your config file.\n              at ChildProcess. (/Users/marciovicente/git/dali/node_modules/backstopjs/core/util/createBitmaps.js:70:18)\n              at emitTwo (events.js:106:13)\n              at ChildProcess.emit (events.js:194:7)\n              at maybeClose (internal/child_process.js:899:16)\n              at Socket. (internal/child_process.js:342:11)\n              at emitOne (events.js:96:13)\n              at Socket.emit (events.js:191:7)\n              at Pipe._handle.close [as _onclose] (net.js:513:12)\nError: An unexpected error occured. You may want to try setting the debug option to true in your config file.\n    at ChildProcess. (/Users/marciovicente/git/dali/node_modules/backstopjs/core/util/createBitmaps.js:70:18)\n    at emitTwo (events.js:106:13)\n    at ChildProcess.emit (events.js:194:7)\n    at maybeClose (internal/child_process.js:899:16)\n    at Socket. (internal/child_process.js:342:11)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    at Pipe._handle.close [as _onclose] (net.js:513:12)\n\n\n\n\n\n\nundefined\n```\n\n\n\n\n\n\nPS: If this method returns a promise and (probably) the process rejects it, why .ok => console.log('>>>>>', ok) code is being executed?. Ok guys, I figured out what's happening.. I don't know the reason, but the problem is when I'm running with slimerjs.\nI chose slimer to support all new frameworks (React client side render, for example). So, I'll close this issue, and thank you for your attention @klausbayrhammer @garris :). ",
    "anselmbradford": "@garris You bet, I slaved away all day on it!\n. ",
    "bassettsj": "If you think this is a good idea, I would be happy to provide a PR.\n. ",
    "boriskaiser": "+1\n. After fix:\n\n. @garris \nThx!\n. @garris \nThanks for your quick reply.\nI look forward to use the third version.. @garris I get this error:\n\nHere is the whole output:\n```\nBackstopJS v3.0.14\nLoading config:  /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop.json\nCOMMAND | Executing core for test\ncreateBitmaps | Selcted 16 of 16 scenarios.\nStarting Chromy: port:9222 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9223 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9224 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9225 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9226 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9227 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9228 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9229 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9230 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9231 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9232 --window-size=600,600,--ignore-certificate-errors\n(node:24649) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit\n9223 LOG >  _READY\n9224 LOG >  _READY\n9222 LOG >  _READY\n9230 LOG >  _READY\n9227 LOG >  _READY\nStarting Chromy: port:9233 --window-size=1024,768,--ignore-certificate-errors\n9229 LOG >  _READY\n9231 LOG >  _READY\n9226 LOG >  _READY\n9228 LOG >  _READY\nStarting Chromy: port:9234 --window-size=320,480,--ignore-certificate-errors\n9230 INFO >  readyEvent ok\n9229 INFO >  readyEvent ok\n9228 INFO >  readyEvent ok\nStarting Chromy: port:9235 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9236 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9237 --window-size=320,480,--ignore-certificate-errors\n9232 LOG >  _READY\n9233 LOG >  _READY\nStarting Chromy: port:9238 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9239 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9240 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9241 --window-size=600,600,--ignore-certificate-errors\n9234 LOG >  _READY\nStarting Chromy: port:9242 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9243 --window-size=320,480,--ignore-certificate-errors\n9239 LOG >  _READY\n9235 LOG >  _READY\n9238 LOG >  _READY\n9237 LOG >  _READY\n9236 LOG >  _READY\n9240 LOG >  _READY\n9241 LOG >  _READY\nStarting Chromy: port:9244 --window-size=600,600,--ignore-certificate-errors\n9242 LOG >  _READY\n9243 LOG >  _READY\nStarting Chromy: port:9245 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9246 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9247 --window-size=600,600,--ignore-certificate-errors\n9244 LOG >  _READY\nStarting Chromy: port:9248 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9249 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9250 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9251 --window-size=1024,768,--ignore-certificate-errors\n9245 LOG >  _READY\nStarting Chromy: port:9252 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9253 --window-size=600,600,--ignore-certificate-errors\n9246 LOG >  _READY\n9247 LOG >  _READY\n9248 LOG >  _READY\nStarting Chromy: port:9254 --window-size=1024,768,--ignore-certificate-errors\n9249 LOG >  _READY\nStarting Chromy: port:9255 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9256 --window-size=600,600,--ignore-certificate-errors\n9250 LOG >  _READY\n9251 LOG >  _READY\n9252 LOG >  _READY\nStarting Chromy: port:9257 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9258 --window-size=320,480,--ignore-certificate-errors\n\n\n\n[Function]\n9253 LOG >  _READY\nStarting Chromy: port:9259 --window-size=600,600,--ignore-certificate-errors\n[Function]\nStarting Chromy: port:9260 --window-size=1024,768,--ignore-certificate-errors\n[Function]\n9254 LOG >  _READY\n9255 LOG >  _READY\nStarting Chromy: port:9261 --window-size=320,480,--ignore-certificate-errors\nonBefore.js is running for:  phone\nStarting Chromy: port:9262 --window-size=600,600,--ignore-certificate-errors\nonBefore.js is running for:  square\n9256 LOG >  _READY\nStarting Chromy: port:9263 --window-size=1024,768,--ignore-certificate-errors\nonBefore.js is running for:  tablet_h\n9257 LOG >  _READY\n9258 LOG >  _READY\n9259 LOG >  _READY\nStarting Chromy: port:9264 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9265 --window-size=600,600,--ignore-certificate-errors\n9258 LOG >  Testing viewport: phone\n9259 LOG >  Testing viewport: square\nStarting Chromy: port:9266 --window-size=1024,768,--ignore-certificate-errors\n9260 LOG >  _READY\n9260 LOG >  Testing viewport: tablet_h\nStarting Chromy: port:9267 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9268 --window-size=600,600,--ignore-certificate-errors\n9262 LOG >  _READY\n9261 LOG >  _READY\nStarting Chromy: port:9269 --window-size=1024,768,--ignore-certificate-errors\n9263 LOG >  _READY\n9264 LOG >  _READY\n9265 LOG >  _READY\n9264 INFO >  readyEvent ok\n9265 INFO >  readyEvent ok\n9266 LOG >  _READY\n9266 INFO >  readyEvent ok\n9267 LOG >  _READY\n9268 LOG >  _READY\n9267 INFO >  readyEvent ok\n9268 INFO >  readyEvent ok\n9269 LOG >  _READY\n9269 INFO >  readyEvent ok\n      COMMAND | Executing core for report\nUncaught exception: Stream not writable Error: Stream not writable\n    at module.exports.ChunkStream.write (/Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at exports.PNG.PNG.write (/Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:628:20)\n    at emitOne (events.js:115:13)\n    at ReadStream.emit (events.js:210:7)\n    at addChunk (_stream_readable.js:252:12)\n    at readableAddChunk (_stream_readable.js:239:11)\n    at ReadStream.Readable.push (_stream_readable.js:197:10)\n    at onread (fs.js:2003:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:664:17)\n/Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/cli/index.js:57\n    throw err;\n    ^\n\n\n\nError: Stream not writable\n    at module.exports.ChunkStream.write (/Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at exports.PNG.PNG.write (/Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:628:20)\n    at emitOne (events.js:115:13)\n    at ReadStream.emit (events.js:210:7)\n    at addChunk (_stream_readable.js:252:12)\n    at readableAddChunk (_stream_readable.js:239:11)\n    at ReadStream.Readable.push (_stream_readable.js:197:10)\n    at onread (fs.js:2003:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:664:17)\n```\n. Hmm, I have disabled the retina mode on my mac and get the following result:\n\nI use:\n- BackstopJS v3.0.14\n- Node v8.3.0 (via nvm)\n\nHere is the \"backstop_data\" folder as .zip:\nbackstop_data.zip\n\n```\nBackstopJS v3.0.14\nLoading config:  /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop.json\nCOMMAND | Executing core for test\ncreateBitmaps | Selcted 16 of 16 scenarios.\nStarting Chromy: port:9222 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9223 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9224 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9225 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9226 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9227 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9228 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9229 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9230 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9231 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9232 --window-size=600,600,--ignore-certificate-errors\n(node:27095) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit\nStarting Chromy: port:9233 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9234 --window-size=320,480,--ignore-certificate-errors\n9229 LOG >  _READY\n9222 LOG >  _READY\n9231 LOG >  _READY\n9228 LOG >  _READY\n9223 LOG >  _READY\n9224 LOG >  _READY\n9229 INFO >  readyEvent ok\n9228 INFO >  readyEvent ok\n9230 LOG >  _READY\n9230 INFO >  readyEvent ok\nStarting Chromy: port:9235 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9236 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9237 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9238 --window-size=600,600,--ignore-certificate-errors\n9232 LOG >  _READY\n9234 LOG >  _READY\nStarting Chromy: port:9239 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9240 --window-size=320,480,--ignore-certificate-errors\n9233 LOG >  _READY\nStarting Chromy: port:9241 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9242 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9243 --window-size=320,480,--ignore-certificate-errors\n9236 LOG >  _READY\n9237 LOG >  _READY\n9235 LOG >  _READY\n9238 LOG >  _READY\n9239 LOG >  _READY\n9240 LOG >  _READY\n9241 LOG >  _READY\nStarting Chromy: port:9244 --window-size=600,600,--ignore-certificate-errors\n9242 LOG >  _READY\n9243 LOG >  _READY\nStarting Chromy: port:9245 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9246 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9247 --window-size=600,600,--ignore-certificate-errors\n9244 LOG >  _READY\nStarting Chromy: port:9248 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9249 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9250 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9251 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9252 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9253 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9254 --window-size=1024,768,--ignore-certificate-errors\n9245 LOG >  _READY\n9247 LOG >  _READY\n9246 LOG >  _READY\n9248 LOG >  _READY\n9251 LOG >  _READY\n9249 LOG >  _READY\n9250 LOG >  _READY\n9252 LOG >  _READY\nStarting Chromy: port:9255 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9256 --window-size=600,600,--ignore-certificate-errors\nStarting Chromy: port:9257 --window-size=1024,768,--ignore-certificate-errors\n9253 LOG >  _READY\nStarting Chromy: port:9258 --window-size=320,480,--ignore-certificate-errors\n\n\n\n[Function]\nStarting Chromy: port:9259 --window-size=600,600,--ignore-certificate-errors\n[Function]\n9254 LOG >  _READY\nStarting Chromy: port:9260 --window-size=1024,768,--ignore-certificate-errors\n[Function]\nStarting Chromy: port:9261 --window-size=320,480,--ignore-certificate-errors\nonBefore.js is running for:  phone\nStarting Chromy: port:9262 --window-size=600,600,--ignore-certificate-errors\nonBefore.js is running for:  square\nStarting Chromy: port:9263 --window-size=1024,768,--ignore-certificate-errors\nonBefore.js is running for:  tablet_h\n9255 LOG >  _READY\nStarting Chromy: port:9264 --window-size=320,480,--ignore-certificate-errors\nStarting Chromy: port:9265 --window-size=600,600,--ignore-certificate-errors\n9259 LOG >  _READY\n9256 LOG >  _READY\n9258 LOG >  _READY\n9257 LOG >  _READY\n9260 LOG >  _READY\n9259 LOG >  Testing viewport: square\n9258 LOG >  Testing viewport: phone\n9260 LOG >  Testing viewport: tablet_h\nStarting Chromy: port:9266 --window-size=1024,768,--ignore-certificate-errors\nStarting Chromy: port:9267 --window-size=320,480,--ignore-certificate-errors\n9261 LOG >  _READY\n9262 LOG >  _READY\nStarting Chromy: port:9268 --window-size=600,600,--ignore-certificate-errors\n9264 LOG >  _READY\n9263 LOG >  _READY\nStarting Chromy: port:9269 --window-size=1024,768,--ignore-certificate-errors\n9264 INFO >  readyEvent ok\n9265 LOG >  _READY\n9265 INFO >  readyEvent ok\n9267 LOG >  _READY\n9266 LOG >  _READY\n9268 LOG >  _READY\n9267 INFO >  readyEvent ok\n9266 INFO >  readyEvent ok\n9269 LOG >  _READY\n9268 INFO >  readyEvent ok\n9269 INFO >  readyEvent ok\n      COMMAND | Executing core for report\n      compare | ERROR { requireSameDimensions: false size: ok, content: 11.68%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.11%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_1_pagination_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_1_pagination_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_4_page-itemnth-child3page-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_4_page-itemnth-child3page-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.77%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_2_page-itemnth-child1page-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_2_page-itemnth-child1page-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.24%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_6_page-itemnth-child5page-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_6_page-itemnth-child5page-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_5_page-itemnth-child4page-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_5_page-itemnth-child4page-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_3_page-itemnth-child2page-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_3_page-itemnth-child2page-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 8.05%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.10%, threshold: 0.1% }: noSelectors sanity_test_noSelectors_0_document_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_0_document_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.15%, threshold: 0.1% }: noSelectors_noReadyOrDelayProps sanity_test_noSelectors_noReadyOrDelayProps_0_document_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_noReadyOrDelayProps_0_document_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.10%, threshold: 0.1% }: noSelectors_readyEvent sanity_test_noSelectors_readyEvent_0_document_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_readyEvent_0_document_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.10%, threshold: 0.1% }: noSelectors_delay sanity_test_noSelectors_delay_0_document_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_delay_0_document_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 2.19%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_1_pagination_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_1_pagination_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.76%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_2_page-itemnth-child1page-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_2_page-itemnth-child1page-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_3_page-itemnth-child2page-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_3_page-itemnth-child2page-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_5_page-itemnth-child4page-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_5_page-itemnth-child4page-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_4_page-itemnth-child3page-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_4_page-itemnth-child3page-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.53%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_6_page-itemnth-child5page-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_6_page-itemnth-child5page-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.43%, threshold: 0.1% }: noSelectors sanity_test_noSelectors_0_document_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_0_document_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.55%, threshold: 0.1% }: noSelectors_noReadyOrDelayProps sanity_test_noSelectors_noReadyOrDelayProps_0_document_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_noReadyOrDelayProps_0_document_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.43%, threshold: 0.1% }: noSelectors_readyEvent sanity_test_noSelectors_readyEvent_0_document_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_readyEvent_0_document_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 3.43%, threshold: 0.1% }: noSelectors_delay sanity_test_noSelectors_delay_0_document_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_delay_0_document_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.11%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_1_pagination_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_1_pagination_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.77%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_2_page-itempage-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_2_page-itempage-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 11.68%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_3_page-itempage-link__n1_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_3_page-itempage-link__n1_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_4_page-itempage-link__n2_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_4_page-itempage-link__n2_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.05%, threshold: 0.1% }: noSelectors sanity_test_noSelectors_0_document_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_0_document_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.07%, threshold: 0.1% }: noSelectors_noReadyOrDelayProps sanity_test_noSelectors_noReadyOrDelayProps_0_document_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_noReadyOrDelayProps_0_document_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.05%, threshold: 0.1% }: noSelectors_readyEvent sanity_test_noSelectors_readyEvent_0_document_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_readyEvent_0_document_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.05%, threshold: 0.1% }: noSelectors_delay sanity_test_noSelectors_delay_0_document_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_noSelectors_delay_0_document_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_5_page-itempage-link__n3_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_5_page-itempage-link__n3_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.24%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_6_page-itempage-link__n4_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_6_page-itempage-link__n4_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.44%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 2.19%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_1_pagination_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_1_pagination_1_square.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.96%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.76%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_2_page-itempage-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_2_page-itempage-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_3_page-itempage-link__n1_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_3_page-itempage-link__n1_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_4_page-itempage-link__n2_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_4_page-itempage-link__n2_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_5_page-itempage-link__n3_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_5_page-itempage-link__n3_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.53%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_6_page-itempage-link__n4_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_6_page-itempage-link__n4_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.00%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_1_pagination_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_1_pagination_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 11.68%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_0_viewport_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_0_viewport_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.35%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_2_page-itemnth-child1page-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_2_page-itemnth-child1page-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_3_page-itemnth-child2page-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_3_page-itemnth-child2page-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_4_page-itemnth-child3page-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_4_page-itemnth-child3page-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_5_page-itemnth-child4page-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_5_page-itemnth-child4page-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 5.11%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_1_pagination_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_1_pagination_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_3_page-itempage-link__n1_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_3_page-itempage-link__n1_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_4_page-itempage-link__n2_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_4_page-itempage-link__n2_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.77%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_2_page-itempage-link_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_2_page-itempage-link_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.75%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_5_page-itempage-link__n3_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_5_page-itempage-link__n3_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.24%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_6_page-itempage-link__n4_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_6_page-itempage-link__n4_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.24%, threshold: 0.1% }: notExpanded sanity_test_notExpanded_6_page-itemnth-child5page-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_notExpanded_6_page-itemnth-child5page-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.96%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_0_viewport_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_0_viewport_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 2.19%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_1_pagination_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_1_pagination_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.76%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_2_page-itempage-link_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_2_page-itempage-link_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_3_page-itempage-link__n1_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_3_page-itempage-link__n1_1_square.png\n      compare | OK: notVisible sanity_test_notVisible_0_displayNone_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_4_page-itempage-link__n2_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_4_page-itempage-link__n2_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.32%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_5_page-itempage-link__n3_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_5_page-itempage-link__n3_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.00%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_1_pagination_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_1_pagination_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.53%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_6_page-itempage-link__n4_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_6_page-itempage-link__n4_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.35%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_2_page-itempage-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_2_page-itempage-link_2_tablet_h.png\n      compare | OK: notVisible sanity_test_notVisible_0_displayNone_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_3_page-itempage-link__n1_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_3_page-itempage-link__n1_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_4_page-itempage-link__n2_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_4_page-itempage-link__n2_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_5_page-itempage-link__n3_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_5_page-itempage-link__n3_2_tablet_h.png\n      compare | OK: notVisible sanity_test_notVisible_0_displayNone_2_tablet_h.png\n      compare | OK: notFound sanity_test_notFound_0_monkey_0_phone.png\n      compare | OK: notFound sanity_test_notFound_0_monkey_1_square.png\n      compare | OK: notFound sanity_test_notFound_0_monkey_2_tablet_h.png\n      compare | OK: notFound_expanded sanity_test_notFound_expanded_0_monkey_0_phone.png\n      compare | OK: notFound_expanded sanity_test_notFound_expanded_0_monkey_1_square.png\n      compare | OK: notFound_expanded sanity_test_notFound_expanded_0_monkey_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.29%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.24%, threshold: 0.1% }: isExpanded sanity_test_isExpanded_6_page-itempage-link__n4_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_6_page-itempage-link__n4_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 0.74%, threshold: 0.1% }: hideSelectors sanity_test_hideSelectors_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_hideSelectors_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 10.19%, threshold: 0.1% }: onReadyScript sanity_test_onReadyScript_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onReadyScript_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 15.28%, threshold: 0.1% }: removeSelectors sanity_test_removeSelectors_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_removeSelectors_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 29.29%, threshold: 0.1% }: onBeforeScript sanity_test_onBeforeScript_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onBeforeScript_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 18.86%, threshold: 10% }: misMatchThreshold sanity_test_misMatchThreshold_0_body_0_phone.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_misMatchThreshold_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 6.42%, threshold: 0.1% }: hideSelectors sanity_test_hideSelectors_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_hideSelectors_0_body_1_square.png\n      compare | OK: requireSameDimensions sanity_test_requireSameDimensions_0_body_0_phone.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 10.13%, threshold: 0.1% }: onReadyScript sanity_test_onReadyScript_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onReadyScript_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 10.24%, threshold: 0.1% }: removeSelectors sanity_test_removeSelectors_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_removeSelectors_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 13.04%, threshold: 0.1% }: onBeforeScript sanity_test_onBeforeScript_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onBeforeScript_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.00%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_1_pagination_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_1_pagination_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.35%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_2_page-itempage-link_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_2_page-itempage-link_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_3_page-itempage-link__n1_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_3_page-itempage-link__n1_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_4_page-itempage-link__n2_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_4_page-itempage-link__n2_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.15%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_5_page-itempage-link__n3_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_5_page-itempage-link__n3_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.29%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_0_viewport_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_0_viewport_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 14.51%, threshold: 10% }: misMatchThreshold sanity_test_misMatchThreshold_0_body_1_square.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_misMatchThreshold_0_body_1_square.png\n      compare | ERROR { requireSameDimensions: false size: isDifferent, content: 0.24%, threshold: 0.1% }: isExpanded_viewport sanity_test_isExpanded_viewport_6_page-itempage-link__n4_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_isExpanded_viewport_6_page-itempage-link__n4_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 10.33%, threshold: 0.1% }: hideSelectors sanity_test_hideSelectors_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_hideSelectors_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 5.09%, threshold: 0.1% }: removeSelectors sanity_test_removeSelectors_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_removeSelectors_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 12.38%, threshold: 0.1% }: onReadyScript sanity_test_onReadyScript_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onReadyScript_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 7.86%, threshold: 0.1% }: onBeforeScript sanity_test_onBeforeScript_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_onBeforeScript_0_body_2_tablet_h.png\n      compare | ERROR { requireSameDimensions: false size: ok, content: 15.96%, threshold: 10% }: misMatchThreshold sanity_test_misMatchThreshold_0_body_2_tablet_h.png\n   See: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/bitmaps_test/20170821-200619/failed_diff_sanity_test_misMatchThreshold_0_body_2_tablet_h.png\n      compare | OK: requireSameDimensions sanity_test_requireSameDimensions_0_body_2_tablet_h.png\n      compare | OK: requireSameDimensions sanity_test_requireSameDimensions_0_body_1_square.png\n       report | Test completed...\n       report | 12 Passed\n       report | 90 Failed\n       report | Writing browser report\n       report | Browser reported copied\n       report | Copied configuration to: /Users/boriskaiser/Sites/tests/backstop-feature-tests/backstop_data/html_report/config.js\n      COMMAND | Executing core for openReport\n   openReport | Opening report.\n      COMMAND | Command openReport sucessfully executed in [0.077s]\n       report |  Mismatch errors found \n       report | For a detailed report run backstop openReport\n\n\n\n  COMMAND | Command `report` ended with an error after [13.861s]\n  COMMAND | Error: Mismatch errors found.\n                at /Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/core/command/report.js:113:17\n                at <anonymous>\n                at process._tickCallback (internal/process/next_tick.js:188:7)\n  COMMAND | Command `test` ended with an error after [45.502s]\n  COMMAND | Error: Mismatch errors found.\n                at /Users/boriskaiser/.nvm/versions/node/v8.3.0/lib/node_modules/backstopjs/core/command/report.js:113:17\n                at <anonymous>\n                at process._tickCallback (internal/process/next_tick.js:188:7)\n\n```\n. Eureka! \ud83d\ude80 \ud83d\ude80 \ud83d\ude80 \nAfter uninstalling Chrome Canary, it works as expected, see here:\n\nFYI\n\nChrome v60.0.3112.101\nChrome Canary v61.0.3143.0\n\n\n@garris \nThanks for your support! \ud83d\ude47 \n. FYI#2\nIt works well with the current version of Chrome Canary (v62.0.3192.0):\n\n. ",
    "JohnnyEvo": ":+1: \n. ",
    "asilvadelpozo": "+1\n. ",
    "MatteoWebDesigner": "Hi I guess something has changed even if I set mismatch 0.1, the value is not used. Is there an example showing the correct way to config this setting. Thanks\n. backstopjs 1.1.0\npackage.json: https://github.com/MatteoWebDesigner/CSS-Architecture/blob/master/package.json\nbackstopjs config: https://github.com/MatteoWebDesigner/CSS-Architecture/blob/master/backstop.json\n. I see :O https://github.com/lewisnyman/BackstopJS/blob/f6d2a09d8556294f85fce1ee1bfa625143ce5db0/capture/echoFiles.js#L19\nthank you now works fine.\n. ",
    "ugogo": "Hi, thanks for your answer.\nOups, my bad!\n```\ncasperjs -v\nCasperJS needs PhantomJS v1.x\n/usr/local/lib/node_modules/casperjs/bin/bootstrap.js:91 in __die\n```\n. ",
    "dfcarpenter": "Thanks a bunch. Also, it does work seem to work.\n. ",
    "MaikelGG": "Hi @garris, thanks for your reply. I have already implemented the delay and readyEvent. The ready event is set to the moment the last JS function has executed on document.ready. However I think the problem might be caused by the fact the the image source is replaced with the srcset attribute, depending on the fact if the image is in the viewport. I think the test cannot determine the image is actually in the viewport? \nThe problem of the font icons is something different I think, have you already seen a project where font-icons are included in the test? \n. ",
    "axe312ger": "Nice idea. I'd prefer https://github.com/dimsemenov/photoswipe instead of magnific popup since it provides better options in zooming into the picture. Also the touch support is way better.\nThe api is good and it is from the same guys as magnific popup.\n@YuliaTsareva let me know is you need any help or discussion about this :)\n. Just tested it also. It works sooo nice! I love slimerjs!\nUpdate your global casperjs and install slimerjs. Add --engine=slimerjs like @sillylogger mentioned and see it running :)\n. Casperjs falls back to phantomjs when slimerjs is not available. So you might just add the parameter and tell the user in the readme that it is his decision which one to use.\nI had a lot of troubles with flexbox. Slimerjs was a relief. Since slimerjs uses a more up to date gecko engine, there should be no problems with webfonts :)\n. Yes I am :)\n. When the element does not exist at all, backstopjs takes (correctly) no screenshot of it. But this breaks the report server, it does not run through. (In a old version of the project a field does not exist, in the new one it does. I want to compare those versions. Thats how I found that issue)\nCan you catch that case?\nWhen one or more files for the comparision are not available, set test to a new \"error\" mode and display some kind of message: \"files missing\". Also a timeout would be nice, 30 sec for example. Even the possibility to run 2 or more tests parallel would help here (at least a bit) :)\n. Sounds like a good plan. Also keeps the changes minimal. Everything else might end up in a (in)complete rewrite of a lot of code :+1: \n. I am currently on 8a40bdadaf3631fc86c6d623bc0ed7c82cd42b86 but have to admit that my backstop.json is lacking the config.paths array\n. :+1: \n. Nope sorry, still looks like the server is not serving the correct files.\nWhat i found also:\nIt looks like the slugging for the filenames does not work as expected. Selectors like \u201cbody > div.foo\u201d do not work. The files are not slugged correctly and angular requests wrong urls.\nI\u2019d go for the slug node lib, otherwise these regex help for me at the moment: https://github.com/axe312ger/BackstopJS/commit/ecb57a5b0dc0186d3f6e9509d7253f29551271fd https://github.com/axe312ger/BackstopJS/commit/ecb57a5b0dc0186d3f6e9509d7253f29551271fd\n\nOn 19 Aug 2015, at 21:55, Garris notifications@github.com wrote:\nOk. Please verify. Thank you. -GS\n\u2014\nReply to this email directly or view it on GitHub https://github.com/garris/BackstopJS/issues/82#issuecomment-132759744.\n. Nice! Somehow I was on the wrong commit after merging yesterday night. It works. Thx!\n. I think its not enough tested yet. You can just do:\n\nnpm install --save-dev git://git@github.com:garris/BackstopJS.git#3c81dfdb20352483a7b7fa7f47d7b08debe245de\n. Its the decision of @garris and I know that he is pretty busy with customer projects. Just use that pinned commit as your npm dependency. You can easily change that back to \"~0.6.0\" later on ;)\n. \ud83d\ude0d\n. Also added a check to remove - on the first position of the filename\nhttps://github.com/axe312ger/BackstopJS/blob/master/capture/genBitmaps.js#L178\n. :+1: \n. :+1: :+1: :+1: \n. @garris i would propose to use https://github.com/dodo/node-slug to ensure valid file names. We got some very good experiences with slug in a bigger project.\n. :hover is a pseudo class and no selector. You can not select by :hover, :focus and :active \n. No worries. But i see what feature you are looking for and I hope I may get some time in november to support garris with backstopjs \ud83d\udcaa\n. Lol, seems like i missed a version. @CreativPixel you may create a custom casperjs script for testing the hover state -> https://github.com/garris/BackstopJS#version-080-beta-available-now\n. We use headless browser implementations. You currently can decide if you wanna test with phantomjs (webkit => Chrome) or slimerjs (Gecko => Firefox)\nOther browser are currently not implemented, it might be possible to integrate with Selenium to support almost any browser but this is very complex and often very buggy. People who worked with Behat & Silenium know what I mean :see_no_evil: \n. Haha yes, garris, i had the same tough back then when we added slimerjs.\nYou guys should consider using this NPM wrapper for phantomjs. This will a lot of time while preparing the tests, especially now when using test runners is starting to get really useful here :)\n--> https://www.npmjs.com/package/phantomjs-prebuilt\n. okay sweet, was just checking the change in this PR, thats why i came up with prebuild :)\n. @garris thats a quick win :). Also related to Travis CI:\nChrome 61 was released to Debian on 2017-09-05 20:08:56 UTC. So you can even skip the Chrome beta now:\naddons:\n  chrome: stable. Turning it down to \nasyncCaptureLimit: 1,\nasyncCompareLimit: 1\nworked for me on travis :). ",
    "finis-intrinsic": "Hi @YuliaTsareva ,\nIs your lightbox for images is done completely???\n. Hi, @YuliaTsareva \nCan u help to solve error upon \"a href unsafe base 64 url\" that we get for the diff / mismatch image.\nBecause the lightbox for the reference and test image is working fine, only error is with the lightbox for the diff image section.\nBelow are the screenshots, for ref:\nhttp://grab.by/Oo5m\nhttp://grab.by/Oo5w\n. Hi, @YuliaTsareva \nthanks for ur help. It sorted my issue\n. An additional further point to this conversation.\nHow can we check bootstrap modal, alerts, tabs or an item in an bxslider.\nusing backstop. \nIt would be very helpful if you explain with an example related to any of the tags that i have added\n. Sir, Now does this beta version works in archieving the references, or is still under development.\n. HI, @garris \nTemperorily this is an good solution.\nBut, this wont be helpful while working on bigger projects.\nHope u soon may find an automated process for this functionality also.\nThank You !!!!\n. Thanks for your response. Presently I'm working on it. Will surely update if find any solution for this\n. It is linked with VCS .( on bitbucket and deploybot for repository) but our requirement is to set the automated test runner for CLI reporter(i.e backstpjs) which must run in the background after we push a commit. and check for results getting failed or pass and than it must proceed for deployments as per the results.\n. Since deploybot provides support for working with grunt commands in their backend. We tried to implement it with a trial.\n\nPlz check the screen shots that we have configured to run the backstop setup and than run the test at puch commits intervals.\nNow,\nhttp://grab.by/NYRU\nThis is the log result which shows that on 3rd line \"grunt backstop:test\" command runs successfully, but it fails to retrieve the results according to the tests.\nWhy we are so confirmed about this is because we deliberately made changes which will fail the result and consequently it must fail the deployment too... but the conclusion was that it deployed succesfully. which should not happen.\n. No there is no specific reason of using bower, it was just due to the step that were mentioned in the setup wizard.\nI did changed the configs to \"cliExitOnFail\": true but still same thing happens, it doesnt get exited after failing test, and the commit gets deployed.\n. Not sure about runnable tests. \nRead many articles on \"Error: spawn /bin/sh ENOENT\" but didnt understood much into it. \n. @klausbayrhammer \n@garris \nI was casually comparing and was checking for error\nThis is what i found\n\nwhile comparing with the #numbers it states that\n1) the grunt commands are running succesfully\n2) the configs are unable to locate for the paths for backstop.json , which outputs for an command error \n3) this image atleast concludes that the test ends successfully without raising any error. \n\nTo bit extent atleast this concludes that the the error \"Error: spawn /bin/sh ENOENT\" would be because of not getting paths\n. Does any one have an reference regarding this issue\n. Hi, @garris \nThe above reference is not helpful up to the mark.\nIs here anyone who has knowledge in loading an slider content on intervals so that the backstop may be able to capture screenshots at its particular time intervals with respective to its content\nThank you in advance\n. Hi @kabadesu did you find solution on the suggestion provided by @garris \n. in such case u can use body to capture screen\n. Hello @garris, You mean to say we just have the call document within selectors and no need of any other elements..\nAm I right ?\n. ok thanks\n. ",
    "awongCM": "Hi @garris - somewhat \"yes\".\nI explain to you a scenario.\nI have a site that has an animated carousel image gallery on the page.  Let's say I have the following markup:\n<div id=\"some-carousel\" class=\"carousel slide\" >\n  <div class=\"carousel-inner\">\n     <div class=\"item\">\n        <img src=\"carousel_pic_1.jpg\" class=\"visible-xs\" alt=\"\">\n     </div>\n     <div class=\"item active left\">\n        <img src=\"carousel_pic_2.jpg\" class=\"visible-xs\" alt=\"\">\n     </div>\n     <div class=\"item next left\">\n        <img src=\"carousel_pic_3.jpg\" class=\"visible-xs\" alt=\"\">\n     </div>\n     <div class=\"item\">\n        <img src=\"carousel_pic_4.jpg\" class=\"visible-xs\" alt=\"\">\n     </div>\n  </div>\n\nAs this is a typical markup setup for carousel gallery, the item tags will toggle to scrollswap images (due to some fancy jquery animation library obviously) at some regular interval.\nBut what I would like to achieve is I'm interested to capture a screenshot for pic item carousel_pic_3.jpg.  And I can only have that the 3rd <div class=\"item\"> tag would set to active.\nBut there's nothing in backstop.json file to offer a variable or parameter to select that particular DOM selector, captured as a screenshot while the carousel is being animated.\nI tried setting in the selectors param something like .carousel-inner.item:nth-child(3).  But I don't think that works??\n. Precisely.\n. Thanks @garris - Makes sense.  I get the point.\nWonder how I should incorporate this principle into vendor's complex animation jquery plugin...\nBut it's doable.\nCheers for that.\n. I haven't actually thought of one till you raised that question in this thread.\nI'm just curious to find out is this part of the setup configurable via json file at all? I'm just keen to understand what goes under hood - that's all.\nHowever, I just had a brainstorm about this while we're in discussion.  I want to find out if it is possible to output/download the entire compare report into a spreadsheet/doc/pdf.  That way I can share, not only with my development team to discuss the impact of such changes, but also to our client as well.  This would aid to gauge open dialogues on the UI/UX of web apps/websites with all stakeholders and illustrate greater visibility of the overall user look and feel across monolithic sites.\nHope this makes sense to you.\nLet me know if you need to clarify my point further, I'm not clear with the above statement.\n. 1. Okay.\n2. No.  However, I would like to know is it possible to re-access the same report (after it auto-shutdown)  by not having to run grunt backstop:test again?\n. Thanks guys.\n@YuliaTsareva - Though you could also technically write a wrapper function for grunt to execute gulp report as well.  \nThat would be nice. \nCause I don't have to navigate the bower components folder every time to do this.  Can stay within the root folder.\n. Hi @YuliaTsareva,\nSorry for late reply.\nThere's a client site at work that I'm working on, and I'm struggling to get the correct css selector to get  screenshot by backstopjs cause it's html markup content looks unusual.  Due to the type of nature of work I'm doing, I rather not have this discussed this on a public forum such as this.  Can I send you a PM to discuss further?\n. ",
    "jghazally": "Yea thought it would be easy (I was trying to add --engine=slimerjs to the casperArgs variable in test.js but that didnt seem to work. If you have suggestions / can point me in the right directions I may have another crack at a pull request..\n. ",
    "sillylogger": "I have, screenshots w/casper using slimerjs work fine.. If you have slimerjs installed on your system and in the path you can add '--engine=slimerjs' to https://github.com/garris/BackstopJS/blob/master/gulp/tasks/test.js#L48\nand it'll run with slimerjs.  Works fine for me.  Would be nice for this to be an argument / option to backstop... when I get sometime :-)\n. Working just fine.. would be nice to get a test suite running for this project... maybe sometime this weekend.\n. ",
    "iamskok": "Gotcha, thanks \n. ",
    "vitto": "Thank you for the reply!\nbye\n. ",
    "oadam": "Hi @garris,\nWhat is your opinion on this ?\nDo you think it's worth integrating YAML parsing into backstop or should I keep the YAML -> JSON conversion as a separate step in my build process ?\nThanks,\nOlivier\n. Sorry I was in vacation.\nYour answer makes sense. I'll close this\nCheers,\n. ",
    "aixellent": "For sure I am, as I said I am just trying to automatically test new\nimplementations of our gui and verify them to different resolutions.\nTracking would be very great benefit.\nThanks for this tool\nGarris notifications@github.com schrieb am Do., 30. Juli 2015 18:51:\n\n@aixellent https://github.com/aixellent Thank you for posting. I will\nbe adding the ability to change the location of the reference and test\nfiles within the next week. Would you be interested in beta testing the new\nversion?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/80#issuecomment-126400059.\n. Hi and thanks i will have a look on this, i totally missed it up to now because i had to handle a lot of CasperJS tests in our company.\nThanks in advice\n. \n",
    "yargalot": "Yeh absolutely sure they exist since its getting the first few\n. But let me double check, might be a viewport thing\n. Hah, yep your right, some Nufftie put overflow:hidden on the html element.  Thanks for the help! Much Appreciated!\n. Oh thanks the library btw, works like a charm :+1: \n. ",
    "code-mattclaffey": "I am getting the same issue but I am using backstop@latest. \n\nHere is my config:\n```\n{\n  \"id\": \"prod_test\",\n  \"viewports\": [\n    {\n      \"name\": \"small\",\n      \"width\": 375,\n      \"height\": 564\n    },\n    {\n      \"name\": \"tablet\",\n      \"width\": 768,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"desktop\",\n      \"width\": 1240,\n      \"height\": 1024\n    }\n  ],\n  \"fileNameTemplate\": \"{selectorLabel} - {viewportLabel}\",\n  \"scenarios\": [\n    {\n      \"label\": \"Hillarys Styleguide\",\n      \"url\": \"https://hillarys.local.codecomputerlove.com/styleguide-new/\",\n      \"referenceUrl\": \"https://www.dev.hillarys.hblonline.co.uk/styleguide-new/\",\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \".gallery-grid\",\n        \".hero-text-strip\",\n        \".porthole-strip\",\n        \".hero-carousel\",\n        \".filter\",\n        \".cta-text-and-image-strip\",\n        \".multiple-article-picker\",\n        \".logo-strip\",\n        \".browse-by-colour\",\n        \".service-strip\",\n        \".product-listing\",\n        \".campaign-carousel\",\n        \".appointment-cta-strip\",\n        \".coloured-banner-strip\",\n        \".internal-page-cta-strip\",\n        \".sub-product-content-list\",\n        \".single-video\"\n      ],\n      \"delay\": 6000,\n      \"misMatchThreshold\": 6\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [\n    \"--ignore-ssl-errors=true\",\n    \"--ssl-protocol=any\"\n  ],\n  \"engine\": \"puppeteer\",\n  \"report\": [\"browser\", \"cli\"]\n}\n```\nI tried to set the delay to be longer but it didn't work. Is there a way to run tests when the url has fully loaded?\n. Tested again with less selectors and some show, some don't.\n\n. When I set debugWindow: true and then I run reference. ( get this error when the browser closes: \nERROR: The process with PID 15532 (child process of PID 18756) could not be terminated.\nReason: There is no running instance of the task.. Thanks ill try that but if my misMatchThreshold is set to 5 shouldn't the test be ignored then because the misMatchPercentage was under that. Is it the isSameDimensions thats throwing it off? \n. Awesome! Please update the issue when you have made the PR.\nThank you :)\n. ",
    "lflpowell": "Getting a similar issue. Large number of blank references. Using puppeteer, my config is:\n```\n{\n  \"id\": \"Framework\",\n  \"viewports\": [\n    {\n      \"label\": \"320x568\",\n      \"width\": 320,\n      \"height\": 568\n    },\n    {\n      \"label\": \"768x1024\",\n      \"width\": 768,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"1024x768\",\n      \"width\": 1024,\n      \"height\": 768\n    },\n    {\n      \"name\": \"1280x1024\",\n      \"width\": 1280,\n      \"height\": 1024\n    }\n  ],\n\"scenarios\": [\n    {\n      \"label\": \"Framework Buttons\",\n      \"url\": \"https://standards.aviva.com/framework/element-library/v3/page-components/button/\",\n      \"referenceUrl\": \"https://standards.aviva.com/framework/element-library/v3/page-components/button/\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 1000,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [\"#tab-2 .awf-example\"],\n      \"hoverSelectors\": [],\n      \"clickSelectors\": \"\",\n      \"postInteractionWait\": 5000,\n      \"selectors\": [\".awf-example\"],\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\": 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"ignoreHTTPSErrors\": true,\n    \"slowMo\": 500,\n    \"args\": [\n      \"--no-sandbox\",\n      \"--disable-setuid-sandbox\",\n      \"--disable-gpu\",\n      \"--force-device-scale-factor=1\",\n      \"--disable-infobars=true\",\n      \"--hide-scrollbars\"\n    ]\n  },\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\n```\nEndpoint is publicly available, so wonder if anyone else can reproduce the issue I'm getting.. @elisexu Thanks for confirming, and thanks for the hint on the asyncCompareLimit. . ",
    "elisexu": "@lflpowell I can reproduce this issue, and I get many more references when I decrease asyncCompareLimit.(In terms of this specific config file, the first time with asyncCompareLimit set to 50 I was able to generate 14/56 reference images, while the second time with asyncCompareLimit set to 5 I was able to generate 46/56 reference images.)\nI know a team that is experiencing the same issue, and they limited their asyncCompareLimit to 2, but sometimes there are still blank references generated.. ",
    "Archiolidius": "Ok, what do you think, when you will be able to publish 0.6.0 version? \n. ok, thanks!\n. ",
    "klausbayrhammer": "+1\n. Thanks for the fast response! Probably as parameter you pass to the gulp tasks? Or even better as a property in the package.json?\n. If you let me know which way you prefer I'd be happy to contribute a PR\n. Yes everything's finished!\n. The following snippet could probably solve the problem. @garris if you think this is going in the right direction I'd clean the things up and provide a PR.\n``` javascript\nconst gulp = require('gulp');\nconst resemble = require('node-resemble-js');\nconst _ = require('underscore');\ngulp.task('compare_backstop_images', function () {\n    var compareData = getCorrectRelativePath(require('./backstop.json').paths.compare_data);\n    var testPairs = require(compareData).testPairs;\n_.each(testPairs, function (pair) {\n    console.log('testing', pair.fileName);\n    var referencePath = getCorrectRelativePath(pair.reference);\n    var testPath = getCorrectRelativePath(pair.test);\n\n    resemble(referencePath).compareTo(testPath).onComplete(function(data) {\n        if (data.misMatchPercentage > pair.misMatchThreshold) {\n            console.log(data);\n            console.log('Mismatch exceeded threshold for image', pair.fileName);\n            process.exit(1);\n        }\n    });\n});\n\n...\n```\n. I'm not sure if this works in all environments but we are running the backstop tests/image comparisons in a centos container with slimer installed and it works for us.\nFor now I'd rather provide this task as an independent addition, so we don't have any trouble when it comes to backwards compability.\nAnother idea came across my mind lately. With this feature we don't have to rely on any canvas/binaries in place so we could consider reworking the workflow when it comes to comparing test results. Currently the test images are created, stored and compared on the fly when the report is shown. What could probably be useful is, when the image comparison is done right after the test screenshots are made. The result of the test/comparison could be stored in a json file next to the test screenshots. So if you would like to know the results of a test you would only have to check the json instead of running the whole comparsion again.\n. Thanks for merging the PR. As of yet the gulp task doesn't fail when comparing the images fail. Since we execute our tests on a CI server we'd really appreciate if the gulp task would fail as a default. @garris what do you think about it?\n. Yes that's exactly what I was looking for! Probably we could add a --dry-run flag which supports the current (non failing) behaviour? If that's ok for you I'd send you a PR.\n. I really like specifying a cliExitOnFail in the config file. That's the best approach by far and would work perfect for me!\n. Awesome, I'll look into it tomorrow!\n. Probably I'm missing something, but how can you set the cliExitOnFail flag? It is called on the path module - shouldn't it be called on the paths object which encapsulates the config? Although the cliExitOnFail isn't set in paths.js.\n. I've tried it with the  \"cliExitOnFail\": true and \"report\": \"CLI\" and everything works like a charm! Thanks @garris a lot for your support!\nAs a sidenote: probably we could remove the setTimeout when using the CLI-compare?\n. The proposed solution looks pretty simple, but quite powerful! If you like I'd prepare a PR this week\n. I just ran into the same issue. What about either:\n- Add the module path to slimerjs' require.path require.paths see the Docs\n- When loading casper scripts we could check if engine is slimer and the path is absolute and stop the test if not.\n. Ah nice you removed the copying of the compareConfig entirely - I was wondering why that was needed :+1: \n. Good point. We could separate the mocha-specs from the example code and just publish the examples.\n. I hope I have tested all the different scenarios that can occur and so far everything seems to work as expected. But there are a few things with the current solution I'm not really satisified with:\n- The changes in echoFiles.js and genBitmaps.js are nearly identical, but I'm not sure how or if you want to share code for the casper-scripts\n. Thanks for merging. I tested it without adding the two properties to paths and it worked quite fine. genBitmaps.js just reads the capture/config.json which is a copy of the current backstop config - or am I missing something?\n. Is there a chance that you could release the last couple of changes in a version 1.0.1?\n. Awesome! Thanks!\n. Basically the only change is the fs.existsSync(paths.compareConfigFileName) before reading the config. The problem is that without this check it tries to read the paths.compareConfigFileName and throw an error if it doesn't exist - so the tests don't work on a fresh checkout where you have never executed a bless before. Sorry for the inconvenience, I was pretty sure I checked that case but it must have slipped through.\nI think we should get this out in a 1.0.2 so it doesn't cause too many troubles\n. We are using Backstop heavily with Jenkins and so far it works out really well. Currently we commit the reference images into our VCS and use backstop's CLI reporter to verify our pull requests. To guarantee reproducible results we also use a separat jenkins job to create the reference images because the different rendering processes on different operating systems and rendering engines are quite hard to deal with. In fact the {\"report\": \"CLI\"} was created to address exactly the issue of running backstop in a CI-environment. This would probably be the best hint for you.\nHTH Klaus\n. @lmakarov you should try the option cliExitOnFail:true which returns 0 if a cli-test succeeded and 1 if it failed. @garris we should probably think about making this the default for the CLI-Reporter.\nWe could also think about adding the actual test-run (like dimensions or misMatchPercentage) to the compare.json so it would be machine-readable\n. Awesome idea! Really looking forward to this! Just let me know if there is anything I can help you with!\n. I think this has more to do with your VCS strategy and the way you set up your CI. Assumed you have something in place like gerrit or you use github-flow with githubs pull requests or gitlab's merge requests and you use a CI like jenkins/travis, backstop can be integrated easily into the verification process of you commits/merge requests (using the CLI-reporter). So Backstops's CLI reporter is probably the best place to start your reserach/investigation.\nHTH Klaus\n. Hm have you set the \"cliExitOnFail\": true, in your backstop config? That could probably help you. I've never worked with deploybot but the dropdown menu says that it can work with gulp as well.\nOut of curiosity - is there a special reason why you use bower instead of npm to install backstop?\n. Does it even test anything? Normally there should be something in the logs like\nTest completed...\n60 Passed\n0 Failed\nThere are also two errors in the log Error: spawn /bin/sh ENOENT. Do you know what caused them?\n. I'm really looking forward to this feature! Thanks a lot @bradwade. I'd love to use the prepare-report it in combination with the CLI-Report., so in the end I think it's quite a cool feature to support multiple reports for the same test run.\nI think it would be a good idea to just specify a single report as default (probably browser). We could also try to catch conflicting configurations (like prepare and browser) and stop the test or just execute browser if both are specified since it is a superset of prepare. I like the second option better.\nIn addition: What do you think about another name for the new report: something like html\n. @YuliaTsareva @garris I thought about this a couple of weeks ago as well. What I would love to do is to extract something like a backstop-core module. This backstop-core would basically consist of all components which are needed in order to run backstop and expose the needed functions as plain javascript-functions. Then we could do something like gulp-backstop (or just call it backstop to make it backwards compatible) which is a gulp-wrapper for the functions (and dependencies) exposed by backstop-core. If we would need a CLI-runner we could create something like backstop-cli or backstop-clite\nI think this could also greatly benefit CI integration #135 and tools like grunt-backstop because they can just use the backstop-core part. And furthermore we would also avoid exposing internal tasks (like the jscs-task to our api (which are all tasks in the gulpfile).\n. @garris this is a great first step! As a second step we could try to have those npm run scripts call plain javascript functions (which can be used by the gulp-tasks as well). This would be a pretty neat improvement if you want to use backstop in an existing gulp-build, because you can get rid of gulp-chug. Although there are a couple of things to consider, I think this refactoring has a digestible size\n. @peteraverianov @garris  I'm not sure if I understand you correctly. You could either use the browser reporter (with resemble.js) or the CLI-Reporter (which uses node-resemble.js). But neither wouldn't change the size of the screenshots. \n. This looks really great! I really like the idea of using the CLI-compare to report testresults in different formats! In the long run I would also like to split the functionalities for testing and reporting (with a simple plugin mechanism, which would allow us to easily add new reporting formats) - but this is another task.\nOne last thing. Could we add a few lines in the readme on how to use the junit-reporter?\n. You could optimize your reference pngs with e.g. optipng so you use less disk space\n. I really like the idea - I'll take a shot at it when I have time!\n. Should be available with version 2.3.1 (fixed in #345)\n. A couple of days ago #336 was merged which is a new way of integrating backstopjs in your build system. It should be available with the latest version of Backstopjs. See the installing backstopjs locally section of the readme for more infos\n. I can see the same issue - I'll dig into it when I have time\n. It seems like yarn and npm store a dependencies package.json-file quite differently.\nWhile npm uses the following structure for the bin section (which is the relevant part for this issue)\njson\n{\n  \"bin\": {\n    \"casperjs\": \"./bin/casperjs\"\n  },\n}\nYarn uses the another structure\njson\n{\n  \"bin\": \"./bin/casperjs\"\n}\n. Closed with #342 \n. @patriciamarchand you could also try to use a virtual machine (or some kind of container) which you  distribute within your team to generate the screenshots. That's something we do with docker containers (at least more or less). It solves the metadata-problem as well as the every-OS-and-Browser-does-font-rendering-differently problem\n. Can it be an x-server problem? Are you able to start firefox on your server?\nbtw: cool grunt integration :)\n. Can you try to change the debug:false to debug:true. It may give you a hint.. Could we make MAX_COMPARISONS_CONCURRENCY configurable in the config (since I think that's a cool feature)? If we set it to 1 we could remove the whole concurrency block. I think we need to do the same check in the CLI-reporter (core/util/compare.js). @garris thanks for all the effort you've put into this awesome tool! I'll keep an eye on issues and PRs whenever I can spare some time \ud83d\udc4d . If we want to keep the support for 0.12 we could transpile everything with babel (like yarn does it) - but since it's adding more complexity I'm not sure if it's worth it.. Should we close the issue then?. Np, we're using my branch in our CI-System for the last week and it worked miracles for us.. If you don't want to duplicate readyEvent and misMatchThreshold but still want to keep the json-config you can specify them as top-level config elements\njs\n{\n//...\n  \"readyEvent\": \"backstop_ready\",\n  \"misMatchThreshold\": 0,\n  \"scenarios\": [\n    {\"url\": \"http://localhost:3000/test1\"},\n    {\"url\": \"http://localhost:3000/test2\"},\n    {\"url\": \"http://localhost:3000/test3\"},\n    {\"url\": \"http://localhost:3000/test4\"},\n    {\"url\": \"http://localhost:3000/test5\"},\n  //  ...\n}. Probably it's the child process' changed cwd? Or any ENVs changed?. Did you try to set \"report\": [\"CI\"] in your backstop.json file? Otherwise it will try to open the report with a browser which will not be terminated and could prevent your container from terminating. I really like the idea to support headless chrome. Chromy looks promising although it's using async/await quite heavily so we would either have to transpile it or drop support for node<7. But when we start things of a new branch then moving to node7+ could also be an option. We could also try to slim down the capture-module to the essentials only (so e.g. removing config default values, computation of scenario names, ..). This would make the api we need to implement for headless chrome much clearer.. I like @mikenz's suggestion - I think we should use the more accurate rawMisMatchPercentage. @garris this is amazing news! We'll give it a try tomorrow!. I'm not sure why we need the timeouts for the CLI/prepare reporters. I'm pretty sure we can run them without delay.\n. Probably using filter.map would be more expressive:\nreturn files.filter(file => FAILED_DIFF_RE.test(file))\n        .map(files, file => {\n           console.log('> ', file);\n           return fs.copy(path.join(src, file), path.join(config.bitmaps_reference, file));\n         }). ",
    "jkopcsek": ":+1: Looking forward to this!\n. Hi! \nThanks dudes for this great and simple regression testing suite. I really like this new feature, but i wonder: is it possible to wait for some time before returning and making the screenshot? There's no callback in the onReadyScript-function, so casper.wait isn't very useful. Or am I missing something?\n. Thanks a lot. Looking forward to build some more sophisticated tests! \n. No problem :-) \nAlso, while you are at it, i'm getting \nCasperJS: TypeError: 'undefined' is not a function (evaluating 'this.echo('Debug\n is enabled!', \"WARNING\")')\nCasperJS:   D:/Test/node_modules/backstopjs/capture/genBitmaps.js:30\nwhen using the debug option. Had to change 'this.echo' to 'casper.echo'.\n. Awesome, works like a charm! :-) Thank you!\n. ",
    "ay13": "Hi everyone. Been almost 3 weaks and just wanted to check on progress.\n. @kateivamarmalade @garris When you add the URL to the scenerios you can include the http basic auth username and password in the URL and it will log you in.\nexample: http://username:password@www.website.com\n. ",
    "stuguzov": "Error occurs on Windows 7 x64\nCasperJS 1.1.0-beta3\n. ",
    "paweltin": "If it's the only place these props are used, it's unnecesarily complicated indeed. I've fixed my mind on config consistency and I missed it. Simplicity over consistency is justified here. I can commit a fix tomorrow.\n. Tried my best with if-elses...\n. Sure, sorry. This is my Grunt config:\nbackstop: {\n      setup: {\n        options: {\n          backstop_path: './bower_components/backstopjs',\n          test_path: './tests',\n          setup: false,\n          configure: true\n        }\n      },\n      test: {\n        options: {\n          backstop_path: './bower_components/backstopjs',\n          test_path: './tests',\n          create_references: false,\n          run_tests: true\n        }\n      },\n      reference: {\n        options: {\n          backstop_path: './bower_components/backstopjs',\n          test_path: './tests',\n          create_references: true,\n          run_tests: false\n        }\n      }\n    },\nThis is backstop.json\n{\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 4000\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"Home page\",\n      \"url\": \"http://www.google.com\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"onReadyScript\": \"homepage.js\",\n      \"misMatchThreshold\" : 0.1\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"../../backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"../../backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"../../backstop_data/casper_scripts\",\n    \"compare_data\": \"../../backstop_data/bitmaps_test/compare.json\"\n  },\n  \"engine\": \"slimerjs\",\n  \"report\": [\"CLI\", \"browser\"]\n}\nThis is my custom script:\nmodule.exports = function(casper, scenario) {\n    casper.echo(\"Testing\");\n};\nAnd this is console output for grunt backstop:reference:\n```\nRunning \"backstop:reference\" (backstop) task\n[15:24:18] Using gulpfile /var/www/przesylarka.local/bower_components/backstopjs/gulpfile.js\n[15:24:18] Starting 'clean'...\nbitmaps_reference was cleaned.\n[15:24:18] Starting 'bless'...\n[15:24:18] Finished 'clean' after 23 ms\n[15:24:18] Finished 'bless' after 22 ms\n[15:24:18] Starting 'reference'...\n[15:24:18] Starting 'init'...\n[15:24:18] Finished 'init' after 3.8 \u03bcs\n[15:24:18] Starting 'test'...\nGenerating reference files.\n[15:24:18] Finished 'test' after 3.94 ms\nreference has run.\n[15:24:18] Finished 'reference' after 4.99 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS: Ready event received.\nCasperJS: Current location is http://www.google.com\nCasperJS: Running custom scripts.\nCasperJS: Screenshots for phone (320x4000)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\nRun $ gulp test to generate diff report.\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\nDone, without errors.\n```\nIf I switch engine for phantomjs I get an extra line in output:\nCasperJS: Testing\nAfter CasperJS: Running custom scripts.\n. Do you have any clue what can be wrong? I would gladly try to fix it, as I prefer to use SlimerJS, but I don't know where to start.\n. It seems that this require() goes wrong:\nhttps://github.com/garris/BackstopJS/blob/master/capture/genBitmaps.js#L141\n. It looks like SlimerJS issue. If I use absolute path for my custom scripts directory in backstop.json everything works fine. Issue probably can be closed.\n. You may want to do different actions for different devices (e.g. click different button on mobile than on desktop).\n. I'm gonna push it as soon as i can. Please leave this open.\n. ",
    "angrymrt": "It would be a great feature to have the URL's visible and clickable in the report. Right now you only have test and reference, but it's not always clear what test and reference means, especially if you use Backstop on a lot of environments (like, test, staging and production).\nThe same goes for viewport, but that's allready in the name, so it's less of an issue right now.\n. ",
    "webhamm": "How do you make the url and reference url show up on the html report?\nI see what fields out should be in config.js.. @garris is there a command or hack to run only the comparisons so I don't have to regenerate the test images. That is 90% of the processing time.. Looks like that will work fine \nvar config = require('../../../mini-sanity-backstop.json');\nif (config.setExtraHTTPHeaders) {\nawait page.setExtraHTTPHeaders(config.setExtraHTTPHeaders);\n} \nThanks... ",
    "limptwiglet": "I added a selector \".missing-selector\" to the test/backstop.json file but this threw a casper error and stopped the gulp task continuing. Using this in my project the error failed silently.\n. No worries! Thanks for the project its proving to be very useful.\nExpect more contributions from me soon.\n. ",
    "ivanmayes": "Thanks!\n. ",
    "Primajin": "Hey guys, so I understand you put this functionality in? I can't find it documented nor generated by genConfig. How can I use the label for the filename?\n. I see, I thought this issue was about using the label for the filenames generated for reference/test. But anyhow if there is no such function yet, I'm gonna do a PR soon :wink: \n. #137 Might fix #101 :wink: \n. #137 Might fix #101 :wink: \n. We are using BackstopJS in Jenkins CI for regression testing, everytime someone fiddles around with the styles to ensure nothing breaks somewhere else you're not thinking about.\nFurthermore we use it for automated screenshotting to get a feeling for the \"evolution\" of our pages over the feature iterations.\nHaving filenames that correspond to the nice named scenarios rather than sometimes very weird (or duplicated) css selectors helps us to identify the screenshots more easily and clearly.\nThe possibility to have clearer names will greatly decrease effort as we also have people looking at the files, that are technically less into selectors and coding :wink: \nAlso it could be very nice to be able to just swap tokens or use hyphenation instead of underscore.\nI ran various tests with it and reports were fine as long as filenames stayed unique.\nSure you can mess it up, but thats the same thing as messing up selectors or the paths. \n. Allright cool!\n. Sorry guys, I was not around for some time. I will have a look into it on the weekend.\n@garris could you rephrase / specify your last post, I didn't quite understood it.\n. Allright I'm on it. Currently there is still a bug in there that I try to squash - I keep you posted\n. BTW: Do you prefer to have just a single commit in the PR when all is done?\n. OK I might need some help here, because my JavaScript Knowledge is limited.\nSo I though I broke something with my changes in my branch / PR - but when I check out your master I can't generate files either..\nCasperJS: TypeError: 'undefined' is not a function (evaluating 'this.evaluate(function() {return document.querySelector(o).outerHTML;})')\nCan you verify this?\n. Allright rebased my fork.\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Using filename pattern: Default_0_MyHomepage_0_header_2_tablet_h.png\nCasperJS: Using filename pattern: Default_0_MyHomepage_1_main_2_tablet_h.png\nCasperJS: Using filename pattern: Default_0_MyHomepage_2_bodybs-docs-featurettenth-of-type1_2_tablet_h.png\nCasperJS: Using filename pattern: Default_0_MyHomepage_3_bodybs-docs-featurettenth-of-type2_2_tablet_h.png\nCasperJS: Using filename pattern: Default_0_MyHomepage_4_footer_2_tablet_h.png\nCasperJS: Using filename pattern: Default_0_MyHomepage_5_body_2_tablet_h.png\nCasperJS: Comparison config file updated.\n. Sorry guys I will continue on this asap, had so much stuff to do in the last weeks ;)\n. I will try to work more on this in the next days, but I've seen that @Pofigizm already sorted some things out in #197 ... maybe we can join forces?\n. Allright cool, then I will pull in your changes.\n. @Pofigizm I added your changes. I'm currenlty running into an issue that CLI exits with 0 (green) although there are errors and \"cliExitOnFail\": true is set in backstop.json.\n. So @garris Is there anything else we can do to get this PR done?\n. @garris So I tested everything thoroughly but I'm still facing the problem that the build exits with 0 although there were mismatches. I need to check if this is also on the master or other branches to see where this comes from. Everything else should work as expected.\nSo this can't be merged into master right now, as it would \"not crash as expected\" \ud83d\ude09 \n. Finally! I rebased my fork to the latest upstream version and now it is finally \"failing as desired\" (so no more false positive builds).\nI also added a hint to the error message, so that the CLI user can see the same as the browser compare user: How far the resemblance was according to the set threshold:\nERROR (1.81% / 0.06%): Molecules - Header (Page) Molecules-HeaderPage_0_test-standardheader_2_tablet_h.png\nSo the user knows that the threshold was 0.06% but the test rendering was 1.81% different to the reference. If the complete dimensions fail, there is also a hint for that.\nHope now everything is in order @garris , looking forward to your comments and or pull ;)\nBest!\n. So @garris Could you look at this?\n. No worries, and be careful with the fuses :zap: \ud83d\ude09 \n. Allright I opened #247 \n. Wohoo \ud83c\udf89 \n. \ud83c\udf89  Great!\n. Thanks @pofigizm for the reminder....actually I lost  a bit track of the version counting...maybe @garris can help out here and say when its time to go for major, minor or patch.\n\ud83d\ude09 \n. Hey @garris , great! Just one thing\n\nI had just one comment which I left on the PR. please just address that [...]\n\nSorry I don't get what you mean. Where is this comment? Can you point me there. Is it in #137 or in here? Is it a line comment or a PR note? I will work on that asap and will also have a look at #249 !\nBest\nJannis / @Primajin\n. I also ran into that, and also my Travis CI. Would be great if we could find a nice tweak that balances speed and memory usage.\n. Allright guys, will give it a try when I'm back in the office on Monday. I too had CLI / CI in reporters, since I only need it on command line in Travis.\nAlso all my images fail on Travis in v2x while working in v1x - will dig deeper into that and open an Issue when I'm sure it's not on my side ;)\nThanks so far in advance!\n. Ahh now I get it! The Report in V2 is now just a plain static file that shows what the CLI did, just a bit nicer - it is not doing the actual comparison anymore like in v1!\n. ok then it's clear now: without \"browser\" in reporters no file gets generated and so no report can be opened. Solutions:\n- have a setting like \"html\" where html report is generated but openReport (eg. firing up the browser) is not invoked\n- have a better error handling: When openReport is used but no file was found, tell the user that report file is missing / was not generated.\n\nI still have not found out why v2 comparison is failing in travis while working fine on my local machine. Also it's behaving really weird, it checks all images, fails, then starts over again then hangs up the process.... \ud83e\udd14  Will dig a little more....else I need to file a new issue \ud83d\ude09 \n. Configuration seems \"fine\" as I found out that some files pass but most don't (with the same script locally all pass). I'm currently struggling to get the generated files from the short living Travis VM to my local machine to actually have a look at the files to figure out why they might fail. I can ssh into a Travis VM when it runs in debug mode, but it won't let me scp files. With Backstop V1 when the build failed I could order Travis to upload the files to Amazon S3 - where I could have a look at the images. But in v2 it seems to fail... differently so Travis hangs up the process and does not upload the failed files...\nSo if anyone has an idea how I can get the generated images down from Travis - would be great!\n. Yes! Let's resolve this and move the discussion to a new issue #312\n. Great! :tada:\n. Running on 2.06 I finally got it to work now.\nI compile my css in gulp and open a browsersync server to serve the tests.\nIn v1 I used gulp-chug to run the gulp based v1 BackstopJS test in CLI mode.\nNow in v2 and CI mode (notice the missing L) there is no gulp at all. While npm test is still hard wired to firing up the server I added a second npm script, because somehow running backstop test directly via gulp-shell did not work.\nNow gulp shell runs npm run testBackstop which itself runs backstop test - which then tests correctly. BUT then hanging up the process - so I needed to pipe the shell command and then terminate it with gulp-exit.\nIt's working now but in a totally weird way - if anyone has a better solution, I'm happy to hear.\n. I'll try to PR my stuff from #306 soon, then you can at least see in the output that it fails because of different dimensions and not because of missmatch errors.\n. See #314 :)\n. I could only imagine it was faster to test for dimension mismatch before going in deep with resembleJS. But @jtuds has a valid point, I think.\n. Yes I think this would be good. But it should be on the same level as the misMatchThreshold, so I can set it to true for one test, and false for another.\n. Do you see the output of the console in the CI Server? Just search for 'ERROR', can you post the line where it fails here?. size: isDifferent ;). Sorry guys, what is the problem? So backstop finds mismatch errors - that means you changed something according to the last reference file.\n{ size: isDifferent, content: 3.35%, threshold: 1% }\nMeans: The Size of the Screenshots is already different plus the content is off by 3,35% - where 1% off was the threshold under it would have passed.\n. But that is what it's meant for! It must break your CI process, since evidently your style is wrong. If you changed the style on purpose you need to check in new references into your repo.\n. Ahhh! I was also on the wrong track like @rasenplanscher . Thanks @mirzazeyrek for clearing that!. other workaround could be adding input, textarea and select to hidden selectors - but that might let errors slip through\n. I see thanks I'll try that out - but I'm afraid I'm limited using the same node version as my collegues...\n. Just to keep track: https://github.com/casperjs/casperjs/issues/1825. I'm also in for reviewing whenever I can spare some time! BackstopJS@eyesbound.com. to check if backstop can actually see your page just pass in document as a selector. That way you will get the whole page. If you dont see anything then you know it is nor your selector that is wrong but maybe your server is not running or the path is wrong. Then try to enable \"debug\": true in your backstop.json. To me your problem looks like backstop does not find body .col-md-4:nth-of-type(1) - so maybe you could give the thing a better name, let's say class=\"col-md-4 naorhai\" and then use .naorhai as a selector and check if a \"real\" image comes out ;). 1) So you run backstop locally to generate reference files. Then you commit them and the jenkins will do backstop test to test against these commited reference files. In the console output you can see in detail which files went through and which files not.\n2) Backstop generates a JUnit report, more about JUnit in Jenkins can be found here: https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin\n3) We configured to run backstop tests always on Merge Requests, so we know that the merge will not introduce any new ui bugs.. thanks @stevector . Could you repost you error message or screenshot directly into here? With drag & drop you can add it directly into this textbox. OK, so it says it doesn't find slimerjs. Can you verify that the command works flawlessly outside of backstop on the normal command line? Also you can set the last property debug in your backstop config to true, to see more details. Furthermore I suggest using the \"Ubuntu in Windows\" - Commandline / Shell as it works much smoother with scripts - but you'll have to reinstall node and stuff there again.. I meant to try to run slimerjs command right from your console. Maybe there is a path variable missing and your system does not recognize the command. So as soon as CasperJS runs slimerjs command, it fails.. Absolutely! We need to do it right now or never to get the word out there to our user base. We also need to improve the documentation further because I found many of the issues are related to unclear docs. For example many people confuse CLI and CI and so on. I'll jump in this week and try to come up with a more \"eli5\" documentation and play around with chrome headless.. Cool! So I also played around a little bit, here are my findings:\nIt spawned a couple of real browser windows, I thought we are going for chrome --headless \ud83e\udd14 ?\n\nI got Failed to execute 'querySelector' on 'Document': '[class^=&quot;preview&quot;] button' is not a valid selector.\nfor having \"[class^=\\\"preview\\\"] button\" as a selector, that was valid before.\nUsing \"[class^='preview'] button\" gives me [class^=&#x27;preview&#x27;] button as an error, so this seems to be a problem with (double) encoding. [class^=preview] button works.\nNow finally the buttons get rendered how they should!\n\n. 2. I checked out the beta an hour ago, so I think I got the latest version. \n3. Well actually the correct CSS selector is with quotes so you can specify if you want the selector to be case sensitive or not: https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors (check line 30) but apart from that chrome is smart enough to guess what is meant, if you leave them out. So to stay uber-correct with quotes would be better \ud83d\ude04 . It worked before without problem with backstop and phantom but I'll dig into it tomorrow morning (CEST) to see if it is a chromy issue or came with the beta branch.. Great @dotneet , I'm currently setting up a docker image to run backstop via chromy in our CI \ud83c\udf89 .\n@garris runChromy.js line 6 did the trick. Maybe we can set it to false when report is set to CI and true when set to browser? Or we introduce a new backstop.js config property?\nOtherwise it's hard for me to test it right now, since it lives inside node_modules.. @garris you said \"capturing the whole document\" is not yet implemented -\nI read here that headless chrome now directly has a screenshot feature. Maybe that --screenshot flag could come in handy there.. cool! Since we are now on chromy in beta - can we remove casper and phantom from the package.json? I am experiencing a very long build sometimes, because it tries to get all of the dependencies, but most of them are now not needed anymore because of chromy \ud83c\udf89 . Also @garris the recent change with adding the .innerText; fails my builds \ud83d\ude09 . @garris Well I just thought as the headline states \"swap out Casper for chromy\" that those aren't needed anymore :wink:\nAnd don't worry about the reference: It's not called a beta branch for no reason :wink:. Allright I retest, somehow my pngs are corrupted, but maybe it's a different issue \ud83e\udd14 \n\n. No, actually it's the same config as five days ago - just a newer checkout of the npm module.. Hmm seem to resolved itself - strange. But furthermore I found that there are some weird files getting created in my project root folder: /capture/ /v8-compile-cache-0/ and a json file with a gibberish name. \ud83e\udd14  Any ideas on that?. \n. @kiran-redhat I also experienced that from time to time on mac. The problem here is from time to time - so sometimes after rerunning it it went through. Very weird behaviour.. According to http://www.codingdefined.com/2015/06/nodejs-error-errno-eaiagain.html this is a problem with your internet connection or proxy setting. I am using the Microsoft Ubuntu Shell on Windows and not node on Windows directly. Does it work when you install other nom modules or is it really only that single one?. @devm87 Please open an issue ticket here as this conversation will ping all the 15 participants in this thread.\nSo far I don't have a ready-to-use solution yet but we can discuss better on your new ticket than creating noise in here.. Well it was \"borrowed\" from here: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/ (http://stackoverflow.com/a/7616484/2594907) \ud83d\ude09 \nSo there was no real consideration to do it this or the other way, I actually just took it from there and used it.\n. ",
    "roborourke": "Awesome, thanks @garris - this is a great place to start. Agreed on your first point, the naming is much clearer, I momentarily forgot it was a json file, no functions :)\n94 looks interesting too. Perhaps a prepackaged script and scenario.onReadyScript can be an array. Something along those lines. I'll have a play.\n. @garris thanks! Re. the array part I see your point - the scripts themselves can do any requiring of other scripts if necessary.\nFor the test scenario can you point me in the right direction where to add that? Add an example to the test folder code or just to the config.default.json?\nI'll update the readme too.\n. @garris think that's it, let me know if there's anything else you need. Took me a while to figure out jquery doesn't load on the bootstrap page so there's a debug option now to optionally enable the casper.on('page.error') stuff.\n. And it's merged! Thanks :)\n. @garris cool, yeah I thought you'd want to make some version number tweaks etc. I haven't tried using it to log in yet but having it running against a local WP site. I'll try it out.\n. @jkopcsek in my tests casper.wait() does indeed work within the external casper script so you should be able to pretty much any additional casper code you want before it continues to the screenshot stage.\n. ",
    "MaartenvanSpil": "I am using Windows 10 pro, 64 bit version.\nOther than this issue the rest is working flawlessly.\nOp 19 okt. 2015 16:51 schreef \"Garris\" notifications@github.com:\n\nWhat OS are you on? :nth-child(n) has workd pretty reliably in the past.\nPlease let me know. Thanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/105#issuecomment-149238243.\n. The default config is also broken. This is my output in the console:\n\nD:\\php\\insyde\\einstein\\bower_components\\BackstopJS>gulp reference\nCould not find a valid config file.\nTo run your own tests create a config here...\n ==> D:\\php\\insyde\\einstein\\backstop.json\nRun $ gulp genConfig to generate a config template file in this location.\n[08:30:58] Using gulpfile D:\\php\\insyde\\einstein\\bower_components\\BackstopJS\\gulpfile.js\n[08:30:58] Starting 'clean'...\nbitmaps_reference was cleaned.\n[08:30:58] Starting 'bless'...\n[08:30:58] Finished 'clean' after 25 ms\n[08:30:58] Finished 'bless' after 28 ms\n[08:30:58] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[08:30:58] Starting 'init'...\n[08:30:58] Finished 'init' after 7.82 \u03bcs\n[08:30:58] Starting 'test'...\nGenerating reference files.\n[08:30:58] Finished 'test' after 12 ms\nreference has run.\n[08:30:58] Finished 'reference' after 18 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: Screenshots for phone (320x480)\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: Screenshots for tablet_v (568x1024)\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\nRun $ gulp test to generate diff report.\nAfter this I check the files to see if it could write the \"body .bs-docs-featurette:nth-of-type(1)\" test related images. But it couldn't write them correctly. The filenames are:\n- 0_2_body.bs-docs-featurette (whithout extention)\n- 0_3_body.bs-docs-featurette (whithout extention)\nAlso the report that opens in the browser hangs and stops checking after the second test.\n. Superb, thanks for the quick reply!\nOn Tue, Oct 20, 2015 at 8:51 AM, Garris notifications@github.com wrote:\n\nPerfect, thanks. I will see if I can get a patch for this tomorrow.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/105#issuecomment-149453141.\n. Woohoo, that fixed it for me. Many thanks!\n. Sorry to bug you one more time. Though :nth-child and :first-child selectors are working beautifully, using the :hover selector returns a gray image with an arrow in it. Is this expected behaviour?\n. Thanks for clearing that up.\n\nOn Wed, Oct 21, 2015 at 5:10 PM, Benedikt R\u00f6tsch notifications@github.com\nwrote:\n\n:hover is a pseudo class and no selector. You can not select by :hover,\n:focus and :active\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/105#issuecomment-149927162.\n. \n",
    "Brykou": "Are seriously use absolute paths when you use SlimerJS ? This is a crazy process when your backstop.json file is versionned and used by diff\u00e9rents peoples to run tests.\nI have this problem and can't find a good workaround.\n. > Another approach is to use a .js based config and make those paths a computed property\nI did this (jsx files used to generate backstop.json file)\n. I have the same problem. Did you solve this ?\n. My problem was related to https://github.com/garris/BackstopJS/issues/108#issuecomment-151756055\n. ",
    "EvanLovely": "+1\n. @garris @paweltin I might of just taken care of this in #113 - did I?\n. Got some tests up in #114 \n. You're welcome; glad to help! :) \n. ",
    "G07cha": "SlimerJS have same result. But now I see that is totally not a Backstop issue, closing.\n. ",
    "brunowego": "Thanks @garris :+1: \n``` bash\n$ grunt test                                                                                                                                          \nRunning \"backstop:setup\" (backstop) task\nRunning \"backstop:reference\" (backstop) task\n[20:40:47] Using gulpfile ~/Machines/UngryFox/Socialite/html/bower_components/BackstopJS/gulpfile.js\n[20:40:47] Starting 'clean'...\nbitmaps_reference was cleaned.\n[20:40:47] Starting 'bless'...\n[20:40:47] Finished 'clean' after 38 ms\n[20:40:47] Finished 'bless' after 37 ms\n[20:40:47] Starting 'reference'...\n[20:40:47] Starting 'init'...\n[20:40:47] Finished 'init' after 3.22 \u03bcs\n[20:40:47] Starting 'test'...\nGenerating reference files.\n[20:40:47] Finished 'test' after 3.77 ms\nreference has run.\n[20:40:47] Finished 'reference' after 4.64 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS: Ready event received.\nCasperJS: Current location is http://localhost:9000/events/index.html\nCasperJS: Running custom scripts.\nCasperJS: FYI: onReadyScript was not found.\nCasperJS: Screenshots for desktop (1366x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\nRun $ gulp test to generate diff report.\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\nRunning \"backstop:test\" (backstop) task\n[20:40:52] Using gulpfile ~/Machines/UngryFox/Socialite/html/bower_components/BackstopJS/gulpfile.js\n[20:40:52] Starting 'init'...\n[20:40:52] Finished 'init' after 58 \u03bcs\n[20:40:52] Starting 'test'...\n[20:40:52] Finished 'test' after 4.51 ms\nCasperJS: Ready event received.\nCasperJS: Current location is http://localhost:9000/events/index.html\nCasperJS: Running custom scripts.\nCasperJS: FYI: onReadyScript was not found.\nCasperJS: Screenshots for desktop (1366x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\n[20:40:56] Starting 'start'...\n[20:40:56] Finished 'start' after 327 \u03bcs\n[20:40:56] Starting 'report'...\n[20:40:56] Finished 'report' after 662 \u03bcs\n[20:40:57] Starting 'openReport'...\nTesting with  ../../tmp/backstop_data/bitmaps_test/compare.json\nOpening report ->  http://localhost:3001/compare/\n[20:40:57] Finished 'openReport' after 13 ms\n[20:40:57] Starting 'compare'...\nOK: Events - Home 0_0_c-header_0_desktop.png\nTest completed...\n1 Passed\n0 Failed\n[20:40:57] Finished 'compare' after 44 ms\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n```\n. Is not running with slimerjs, is running with phantomjs. I use flexbox and need slimerjs. Thanks again @garris !\n. This is very strange, output nothing:\n\nOS X El Captain\nbash\n$ node -v                                                                                                                                              \nv0.12.7\n$ uname -a                                                                                                                                            \nDarwin macbook 15.0.0 Darwin Kernel Version 15.0.0: Wed Aug 26 19:41:34 PDT 2015; root:xnu-3247.1.106~5/RELEASE_X86_64 x86_64\n. The problem is with firefox version. See https://github.com/laurentj/slimerjs/issues/398#issuecomment-155064865\nThanks @garris :+1: \n. ",
    "superKalo": "Thank you @garris ! Yes, changing the engine to SlimerJs did the trick even without my \"wait-iframe-to-load.js\" script. Great :+1: \n. ",
    "rimi-itk": "I would like this as well and I have created a pull request: https://github.com/garris/BackstopJS/pull/125\n. ",
    "gregsqueeb": "Hmm, I re-installed everything a different way and I am no longer having this issue. Originally I installed everything following these instructions: https://css-tricks.com/automating-css-regression-testing/ and had to install casper from github.\nThe onReady.js file had this in it:\nmodule.exports = function (casper, scenario) {\n  var email = 'alsdjkfkasjdfkj' + Math.floor((Math.random() * 100000) + 1) + '@gmail.com'\n  casper.fillSelectors('.right-content > form', {\n    'input[placeholder= \"First Name\"]': 'Greg',\n    'input[placeholder= \"Last Name\"]': 'Mathews',\n    'input[placeholder= \"Email Address\"]': email,\n    'input[placeholder= \"Password\"]': 'Testing@123'\n  }, true)\n}\nCan't seem to get the logs anymore\n. Sorry, I meant the console output. I can't reproduce this when I installed Backstopjs with NPM instead of bower.\n. Lol, sorry about that! From the readme it looked like that flag only worked when generating a documentation file not all the time! Thanks for the helpful comments and your quick responses! Been loving backstopjs\n. ",
    "torounit": "Chromy sample.\nhttps://gist.github.com/torounit/33cdc09cbb698f4b4287085da23c7fe5. ",
    "joaoffalcao": "Hi, \nI want to set my misMatchThreshold to 0% in all scenarios, how can I do it?\nI've set it on each scenario with \"misMatchThreshold\" : 0.0, but when the report opens, the setted value of misMatchThreshold is 1. \nMy backstop.json is something like \njavascript\n    {\n      \"label\": \"List Component\",\n      \"url\": \"http://localhost:5000/#/component/list\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"html\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.0,\n      \"onBeforeScript\": null,\n      \"onReadyScript\": \"onReadytoPhone.js\"\n    },\n    {\n      \"label\": \"EMS Footer\",\n      \"url\": \"http://localhost:5000/#/home/highlights\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \".mod-footer\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.0,\n      \"onBeforeScript\": null,\n      \"onReadyScript\": \"onReadytoPhone.js\"\n    }\nWhat am I doing wrong?\nRegards, \nJo\u00e3o Falc\u00e3o\n. Hi @garris, I tried the \"misMatchThreshold\" : 0.0000000001, and it worked. \nMany thanks!\nJo\u00e3o Falc\u00e3o\n. I'm still trying to fix this problem. \nAfter some tests, I'm thinking that the issue isn't the retina display because my app uses a different view for tablet and phone and my saved screenshots are from tablet, so maybe that's the problem. Maybe I will need to change the user agent for both cases.\n. After tries, I figured out that the problem was, in fact, the user agent and not the retina. So, I will close this issue.\n. @raypatterson actually, I'm not setting the user agent, on my app I have to set a class on the html, so on onReady.js I did something like \ncasper.then(function(){\n        if (viewport.name.indexOf('phone') != -1) {\n            casper.evaluate(function () {\n                angular.element(document.getElementsByTagName('body')).addClass('phone');\n            });\n        };\n    });\nI'd tried to set the user agent onBefore.js but it didn't worked.\n. ",
    "vaidotas-adf": "I've set \"port\": 3002 in config. When starting console shows \"Listening on port: 3002\". Task manager shows that server.js process was started with -p 3002 parameter. But trying to open http://localhost:3002/compare/ shows error: page is not available. Server is still started on 3001 port and I can access compare app there.\nStating server.js manually with \"node server.js -t 5 -p 3002\" from console starts server on correct port.\nTested on Windows 7 64-bit, node v5.3.0. Same issue occurs on Ubuntu 15.10 with node v0.10.25 .\n. Looks like that separate arguments need to be passed as separate array elements to spawn function. Starting server on custom port works correctly after modifying line 33 in /gulp/tasks/start.js file:\nvar serverHook = spawn('node', ['server.js', '-t', time, '-p', port],  {detached: true, stdio:'ignore'});\n. MobileDetect uses user agent to detect if device is mobile or not. CasperJS has function to set user agent (e.g. https://gist.github.com/iwek/3124720), but it has to be executed before opening URL.\nI'd like to suggest adding optional user agent parameter to viewport options. That way we could set mobile UA for small viewports.\n. ",
    "frob": "Right now the tool is geared around a manual review of the diff results. What would be needed for this is a threshold of failure. In wraith/imagemagick terms this is the fuzz and/or some type of CL only way to checking this. \nThe best way to do this would be to give this tool a CLI command that can be able to report back a json object with the results.\nA quick and dirty way to do this is to have a CLI command report back with a return !0 for fail and return 0 for success.\n. ++ making this the default\n. ",
    "lmakarov": "\nIn fact the {\"report\": \"CLI\"} was created to address exactly the issue of running backstop in a CI-environment.\n\nThe current CLI report is human and not machine oriented.\nIt is useful for a high level manual review of test results in a terminal, but not so much for CI.\nIn a CI environment scripts are expected to return a correct status code at the very minimum (0 - pass, 1- something failed).\nIdeally, a machine-readable report should be generated, which the CI server can parse and analyze (e.g. a junit XML report).\n. @dodozhang21 https://github.com/docksal/backstopjs is built with BackstopJS v2.6.9, PhantomJS, SlimerJS and Firefox ESR. It does not support the new 3.x version and the added chrome driver (yet). You will have to stick with BackstopJS 2.x and phantomjs/slimerjs engines if you want to use that container image.\nI'm looking into upgrading the image to use Backstop3 and support chrome engine, but it does not seem to be a simple version bump upgrade.. docksal/backstopjs has been upgraded to BackstopJS v3 with Headless Chrome support.\n@dodozhang21 do a docker pull docksal/backstopjs to get the latest image version.\nI wrote an article on how to use BackstopJS in a Docker container:\nhttps://blog.docksal.io/visual-regression-testing-with-backstopjs-in-a-docker-container-dfd1b9ae8582. The switch to the default (non-alpine) flavor of the base nodejs docker image inflated the resulting (compressed) image size from 303 MB to 653 MB - http://take.ms/9XvDE\nLooks like Alpine Edge now has Chromium v64 available:\nhttps://pkgs.alpinelinux.org/package/edge/community/x86_64/chromium\nFor a smaller image size either alpine or the slim flavor of the node image should be used.\nSee https://hub.docker.com/r/library/node/tags/\n\n8 - Compressed size: 270 MB\n8-slim - Compressed size: 92 MB\n8-alpine - Compressed size: 23 MB\n. Hey @garris! I believe rolling back to Alpine would be the easiest. I do, however, like how much simpler the Dockerfile is with Debian. Alpine is the goto distribution for Docker images, however it does make things more complex, as weird workarounds have to be used quite often.\n\nUsing 8-slim (a stripped down version of Debian) may be a good middle ground so long as it actually works without introducing workarounds of its own.\n@iain17 would you be interested in trying 8-slim as the base image? If not, I'll try to find some time this week for that.. ",
    "levithomason": "\nWe should probably just eliminate the cliExitOnFail property (always throw on error)\n\nYes please!\n. See PR #215 for the fix.\n. I'll be on vacation this week through next Monday. We've just finished incorporating backstop into our stack to prove it out. Now that this is done, the cli is on my list. My first step here was going to be  pulling all the gulp tasks into plain functions, then bootstrapping a cli with the same commands. \nFeel free to get started on of this and I'll follow up behind. \n. How about adding an actual CLI?  It is strange to have to cd into the node_modules directory and run npm scripts on a dependency like this.   Usually, the package.json defines a bin property. This bin property is what links your dependency into the node_modules/.bin directory, then, users can simply run backstop (or whatever you name it) from their own package.json.\nWe're testing Backstop right now @TechnologyAdvice.  The initial demo went well.  If we stick with this, I'd be willing to contribute to an actual CLI if you're game.\n. Great.  I'll start a PR and spec out the CLI there in markdown before getting too far in the code.\n. I think this is already in the README.md:\n\nChanging test sensitivity\n\"misMatchThreshold\" will change the amount of difference BackstopJS will tollerate before marking a test screenshot as \"failed\". The default setting is 0.1, this may need to be increased as the dimentions of your screenshot increases.\n\nhttps://github.com/garris/BackstopJS#changing-test-sensitivity\n. /cc @garris \n. Is this released yet?\n. Thanks for the rapid response.  I'll double check my build then!\n. Confirmed, I had wrapped a callback and didn't pass the error.  I should have checked the backstop source before posting!  Thanks again.\n. If you update this PR description just a tad, you can close the related issue when this pr is merged.\n. Indeed, missed that!\n. Awesome.  Could you add me to the repo as a collaborator so I can contribute directly?\n. I should clarify, nothing will get merged without your sign off of course.\n. Sounds good.  Let's start it that way.\n. Thanks, I replied on the other issue for now.\nOn Tue, Jul 26, 2016, 8:28 AM Garris notifications@github.com wrote:\n\n@levithomason https://github.com/levithomason Just wanted to check in\nwith you. There is another contributor who wanted to take a look at the\nCLI-related effort. I am assuming you aren't actively working on this at\nthe moment -- is that correct. I just wanted to make sure not to step on\nany of your effort. Please let me know. Thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/217#issuecomment-235360890,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE1TdhOakMqb2VQLHmfbo3ttJMsNuQS-ks5qZlHCgaJpZM4JDgpA\n.\n. High level scan looks good to me.  I'll test this out more in depth as soon as I can and offer more insightful feedback.\n\nNot sure your preference @garris, but I'd like to have used yargs and liftoff for the CLI.  These two packages make for very robust CLIs in regard to arg parsing, help, and config file naming, syntax, and pre-compiling.\nEDIT\nFixed typo\n. You can an example implementation of Liftoff in the gulp-cli here.\n. Man, I wish :/\nhttps://github.com/isaacs/github/issues/18\n. ### Why Error Codes?\n\n@garris @levithomason could you please let us know the rationale behind this change?\n\nIt is standard practice for  CLIs to return a non 0 code on failure.  It is considered a bug to return a 0 when the process encountered an error.  Exit codes are used by downstream processes to determine if some command completed successfully or not.  \nThe reason this came up mostly from users using Backstop in CI/CD systems, and not with other users, is because CI/CD systems rely on the CLIs returning proper error codes.  If exit code 0 (pass) is returned when tests failed, then the CI/CD service will ship your app with failing tests.\nAny respectable CLI will exit with proper codes, like git:\n```\nin levithomason/\n\u203a git status\nfatal: Not a git repository (or any of the parent directories): .git\nin levithomason/\n\u203a echo $?\n128\n```\n```\nin stardust/ on feature/message-no-jquery \n\u203a git branch -d feature/message-no-jquery\nerror: Cannot delete the branch 'feature/message-no-jquery' which you are currently on.\nin stardust/ on feature/message-no-jquery \n\u203a echo $?\n1\n```\nNPM itself:\n```\nin levithomason/\n\u203a npm run not-a-script --silent\nin levithomason/\n\u203a echo $?\n254\n```\nThis is also why the default NPM package.json test script exits 1:\n\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\nGulp example:\n```\nin BackstopJS/\n\u203a $(npm bin)/gulp foo\n[13:18:59] Using gulpfile ~/src/BackstopJS/gulpfile.js\n[13:18:59] Task 'foo' is not in your gulpfile\n[13:18:59] Please check the documentation for proper gulpfile formatting\nin BackstopJS/\n\u203a echo $?\n1\n```\nFWIW, all test frameworks and runners, like mocha, ava, jasmine, etc. will also exit with proper codes.  0 on success, and something else for failures.\nWhat's with all the error output?\n\nBut after the Finished 'openReport' after 12 ms lot of errors are reported as included in this message.\n\nIn short, there are 3 tools outputting errors.  Backstop, Gulp, NPM, in that order.  Once the CLI work is merged Gulp errors will no longer be a factor.\nThe lines starting with npm ERR! are standard NPM errors. They are unrelated to Backstop, gulp, and any other tool at play.  Since NPM is process being executed (npm test), NPM logs its own error on failure (exit non 0) as well.\nAny NPM command that fails gets this output.  If you'd like to hide those errors, you need to run npm test --silent, see npm config.  You can see more on NPM making this better in this issue https://github.com/npm/npm/issues/8821.  But again, this is completely unrelated to Backstop or any other tool in the chain.  It is just the way NPM works.\nThe stack trace error beginning with:\n[17:23:16] Error: Mismatch errors found.\nCan be removed since Backstop reports its own errors regarding the comparison failure.  This will likely be handled in the CLI work going on.  This error is reported twice because Backstop writes to the output, then gulp reports the error since the error is passed to the gulp callback:\n// compare.js\ndone(new Error('Mismatch errors found.'));\nOnce the CLI work is done, the whole experience will be fantastically improved.  There will be proper exit codes, a top level backstop CLI (instead of nested gulp), and clean output reporting.\nHope I didn't come across and haughty here, but I really think the CLI work (and dropping gulp) is the key to polishing off this already great project.\n. If the page is not served at http://localhost:3001/compare/, then it is likely that the test server is not running.  This might make sense if the gulp process stops due the error before it can start the server for you.\nDid you try running the report server before opening the report?\n$ npm start\n$ npm run openReport\nThis will start the report server, then open the report page.\n. ",
    "fixfoxi3": "Ps: our Version\n\"name\": \"backstopjs\",\n  \"version\": \"1.0.2\",\n. i pulled your latest changes:\nIt`s working now fine ! \nThank you very much !\n. ",
    "pofigizm": "Feature \"set filename\" is very useful for me and my project. I'm ready to help.\nIn my PR I only revert default settings, as @garris asks.\n. I haven't problem in my fork which i use everyday. \nMaybe because https://github.com/garris/BackstopJS/commit/b78be9ba707d2820abc86bf6b1767c4587d52f77 doesn't exist there?\n. @garris, is PR helpful?\n. It was added in https://github.com/garris/BackstopJS/pull/247\n. Don't forget change to correct version here.\n. ",
    "markanthonyuy": "Alright, no problem. I'll post it here once I figure it out. Thanks! \n. @garris @vaidotas-adf Awesome! Works like a charm. \nThank you for helping guys. \n. ",
    "lukasziegler": "That's a good idea! Thanks for the feedback. I will go with that approach for now.\n. ",
    "DaPo": "Hi @lukasziegler,\nSorry to come to that issue that was closed nearly 3 years ago but I have the same problem as you. I want to test a scenario with limited viewports but not viewports with scenarios.\nHow did you manage to get through with it? Do you have, by any chance, a gist file or something that could help me with that?\nThank you very much! \u270c\ufe0f. @garris wow, thank you for your answer. Sorry, I didn't catch this. That's perfect for me. Thank you again.\nAnd thank you for this awesome testing tool. You made it very easy to use. \u270c\ufe0f. ",
    "chipcullen": "@garris wow - thank you for the very fast response! \nYour work around works for now - I'll see if I can make it more dynamic.\nAs for the use case - I originally had seen it on Wraith - http://bbc-news.github.io/wraith/index.html#Capturemode\nBUT, I'm digging an npm based project, which is why I'm trying out backstop. So far it's working great!\nIs there anything I could do to help? Would a different, more \"feature request\" type ticket help?\n. @garris sorry for radio silence for a few days. Still digging out from under the snow on the east coast. \nThe reference/test scheme worked very well for me as well. I had a similar experience as @laubsauger in terms of the echos spouting out the scenario.url.\nThanks for adding this feature so quickly! It's a great enhancement!\n. @michael-tung each scenario needs a reference and a test url. So, mine look like this:\n\"scenarios\": [\n    {\n      \"label\": \"Home\",\n      \"url\": \"https://testurlhere/\",\n      \"referenceUrl\": \"http://referenceurlhere/\",\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.1,\n      \"onReadyScript\": \"onReady.js\"\n    },\n    {\n      \"label\": \"Foo Page\",\n      \"url\": \"https://testurlhere/foo\",\n      \"referenceUrl\": \"http://referenceurlhere/foo\",\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 3000,\n      \"misMatchThreshold\" : 0.1,\n      \"onReadyScript\": \"onReady.js\"\n    },\n   ...\nDoes that make sense?\n. I don't know if this will help matters or not, but I was running into this same issue.\n1. I was running backstop locally, not globally\n2. I was having to run backstop with sudo\nRe: 2 - I was having to run in sudo because when I didn't, I got the following error:\nCOMMAND | Error: EACCES: permission denied, open '/Users/user/project/node_modules/backstopjs/capture/config.json'\n                    at Error (native)\nI'm on a mac. When I tracked that particular file in the Finder, the system had read/write access, but not my user. I manually added myself to the file's permissions, and then suddenly I didn't need to run the commands with sudo. And after that point,  I was no longer getting the random .json file.\n. ",
    "laubsauger": "Seems to work (only tested 1 case). Noticed that the scenario.url is used for a few echo calls where the referenceUrl should now be used, e.g. https://github.com/laubsauger/BackstopJS/commit/4b263009ece76eed5a0e17fe357aa668afec9439\n. Since i was at it, i also added an onBeforeStartScript. This can be used for registering event listeners for e.g. cancelling requests or other things that have to be setup before casper starts to load the first page.\n. Hi @garris, thanks for the hint - didn't see that. Unfortunately, the solution from #133 only allows the scenario-based onReady or the global onReady to run. I need both in my use case. \nThe global one is used for generic scripting (e.g. replace all dynamic images, texts, etc.) while the local one caters to page specific things.\nAs for the onBeforeStartScript: At the moment im specifically using this to cancel requests to ads, trackers and the like. Hiding via selectors won't work here. This is done to speed up things and to make tests more stable. But i'm sure there are other possible use cases.\nYou can see an example of this here.\nI'm definitely open to discussing theses approaches. Maybe there already is a better way to do this, but i can't see it.\n. Hi y'all,\n@garris You're right require()'ing common scripts is the sane thing to do here. Infact i'm doing it already for stuff like login scripts. Just didn't think about using it for this aswell. Case closed :)\nRegarding my onBeforeScriptuse case: I'm working on a site that's drenched in retargeting/marketing/analytics tags. Some of these will screw with caspers detection of the finished page load. This leads to timeouts or delays depending on the type of script and their response times. So instead of bothering with any third-party scripts (which shouldn't affect the on-screen layout anyway fingerscrossed) i'm just killing them as soon as the outgoing request is detected by casper. \nUsing hideSelectors won't help here since i can't really target these things with css-selectors.\nPlease ask for further details if it's still not clear.\nAs for the performance gain: It's timeout/failed test vs. we're golden. No need to measure in milliseconds. It should boost performance anyway, though.\n@mayacode I'll revisit my changes and provide a clean PR also incorporating @garris' suggestions asap.\n. @garris Bit of documentation: https://github.com/garris/BackstopJS/pull/156\n. I guess the travis check is lying: https://travis-ci.org/garris/BackstopJS/builds/104846599\n. Uh, guess that makes sense. Thanks for clearing it up.\n. Whoops. This was not supposed to be a PR to your base repo but rather to my fork.\nWas just playing around with a specific use case where it's not feasible to use the domain name in the URL. \nSorry for bothering you :roll_eyes: . You could use the mouse module - assuming casperjs:\nPut this in a onReadyScript.js which you reference in your backstop.json. See the readme for details on that.\njavascript\nmodule.export = function(casper) {\n    casper.then(function() {\n        this.mouse.move(\"#my-link\"); // moves cursor over <a id=\"my-link\">hey</a>\n    });\n};\nwith chromy you would do almost the same. . Has anybody noticed that backstop using chromy is taking about 40% longer to execute than the exact same config using phantomjs?\nThis is the case for me with a single scenario and a single viewport but also with multiple scenarios on multiple viewports. Since chrome-headless can work on the different viewports in parallel i was hoping for quite the performance boost.\nNo selector or selectorexpansion was used.\nAlso passing of flags to chromy does not seem to work properly - or i'm doing something wrong :smile: \nI tried passing engineFlags: [\"--ignore-certificate-errors\"] and hostFlags: [\"--ignore-certificate-errors\"]as global config and as scenario-specific config. But neither didn't seem to work.  (one of these should be the replacement for casperFlags or not?)\nNot sure if chromy or backstop related. As a workaround i'm calling chromy.ignoreCertificateErrors(); in a global onBefore-script.\nbtw @garris thank's a lot for pushing the chrome-headless integration  :+1: \nI was close to rolling my own and am really glad i didn't start yet . @garris Nice. \nUnfortunately, since updating (backstop307, chromy403, chrome60) i can't seem to get a clean test run with my scenarios anymore. I can see in the remote debug window that there is nothing really rendered. I'm on CentOS 7.\n~A clean backstop init config seems to work though. So i guess it's something with my environment, chromy scripts or config that broke due to the update~ - need to look into it later.\nupdate: The default scenario created by backstop init uses browser: [\"chrome\"] that's why it worked earlier. if i change it to browser: [\"chromy\"] it won't work either (blank/white page being rendered)\nupdate 2: only seems to happen when debugWindow: true\nupdate 3: nvm. seems somewhat random and i strongly suggest it's something with my machine / os setup\n\nedit: opened Issue with Chromy regarding debugWindow https://github.com/OnetapInc/chromy/issues/53. @jourdanrodrigues Try to use a newer version of backstop and if that doesn't work try the chrome engine. You're possibly stumbling over phantomjs compatiblity issues if the layout works in other \"real\" browsers.\nJust a wild guess though.\n. Just want to chime in here:\nI get the same SIGINT Listeners error output as soon as i have more than five scenarios defined.\nBackstopJS 3.0.19\nChrome 61.0.3163.79 64-bit\nNode 8.4.0\nCentOS7\nNo scripts are used.\nno SIGINT Error:\njson\n\"scenarios\": [\n    {\n      \"label\": \"1\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"2\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"3\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"4\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"5\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    }\n  ]\nSIGINT Error:\njson\n  \"scenarios\": [\n    {\n      \"label\": \"1\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"2\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"3\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"4\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"5\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    },\n    {\n      \"label\": \"6\",\n      \"url\": \"https://www.google.com\",\n      \"referenceUrl\": \"https://www.google.com\"\n    }\n  ]. @garris i'm already on the new version with this code in runChromy.js and that's why i came to my hacky solution rather quickly :) \nI've tried to setup a ready listener via chromy.on(\"ready\") .... with my hack in a global beforeScript but this fired at rather odd moments and i was not able to get it to work properly. Didn't have much time to fiddle further though (i.e. look into the chromy code to see what is what). \nedit: now that i've read your post again, i think the problem was that i never removed the listener. will see if i can try it tomorrow. @Dbuggerx at a quick glance i would say this does a bit of a cleanup and moves the \"injection\" to another place but it doesn't change the underlying issue. \nYour function defineBackstopFunctions will get executed only once per scenario (more or or less at the start of each scenario). If you happen do to a second page load (apart from the initial one), e.g. for following an internal link in a non-SPA these methods will still be undefined because they were not injected to the new page. \nThat's why we need to hook into a page load event to know when to reinject.\nI was playing with this in the morning and came up with a solution similar to yours with the added load event listener. Unfortunately i'm either missing something or it's just not my day but it's not working for me as of now.\nI've put this before the  return new Promise... part and uncommented the BACKSTOP_TOOLS_PATH variable:\njavascript\nchromy.on('Page.loadEventFired', () => {\n      console.log('Page.loadEventFired');\n      chromy.inject('js', config.env.backstop + BACKSTOP_TOOLS_PATH)\n});\nThis event fires but the methods are still undefined. I'm not sure if it's an issue of timing.. @Dbuggerx Sorry for only judging by the looks of it. Went to try it just now and you're absolutely right.\nscript below executed as onReady script works now\njavscript\nmodule.exports = (chromy, scenario, vp) => {\n    chromy.goto('https://github.com/garris/BackstopJS/issues');\n};\nI would really like to understand why though.. I'm in the middle of preparing one, don't worry.. @garris I think there is no need for that. Even though i still don't get why xD\nWe will see. I've issued a PR.. @garris You assume correctly :)\nI've just tested 3.0.26 with my earlier hacks removed and it works flawlessly. . @mirec810 You are using chrome as the browser engine but you are trying to use casper in your script.\ncasper will only work if your browser engine is phantomjs. You have to use chromy syntax for the chrome engine.\nSee here for example https://github.com/garris/BackstopJS/blob/master/test/configs/backstop_data/engine_scripts/chromy/overrideCSS.js. You're right. This kills readyEvent/readySelector. Slight oversight on my part.. I've moved the injection to the suggested places, moved backstopTools method as is to a new property to avoid conflicts.\nYour test config is working now. \nI would suggest extending the test config with a goto script so we cover this case\n\nIs the injectCSS method still actively needed? I got rid of it for now because \"old method\". . I'm not sure i understand your request. You want those methods from runChromy.js to be moved to backstopTools.js as is? Isn't that the case? I saw no difference aside from the usage of constants in the original methods in backstopTools.js.\n. I've tried to do it conditionally but it failed then.\njavascript\nchromy.evaluate(() => {\n    return !window._backstopTools;\n}).result(_result => {\n    if (_result) {\n      injectBackstopTools(chromy)\n    }\n});\nI don't have time left today to figure this out. . ",
    "michael-tung": "could you share an scenario example of how to setup the referenceURL vs staging URL in the JSON file with this new feature? (sorry for noob question) \nWhat are the steps involved?\n- setup referenceURL in backstop.json file\n- run gulp reference\n- run gulp test\nobj: compare a page on prod vs staging and find the diff \nI tired setting it up like this but it does not seem to work.\nPlease help.\n\"scenarios\": [\n      \"label\": \"Reference Page\",\n      \"referenceUrl\": \"https://referenceurlhere/\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"header\",\n        \"main\",\n        \"footer\",\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.1,\n      \"onBeforeScript\": \"onBefore.js\",\n      \"onReadyScript\": \"onReady.js\"\n    },\n      \"label\": \"Test Page\",\n      \"referenceUrl\": \"https://testurlhere/\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"header\",\n        \"main\",\n        \"footer\",\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.1,\n      \"onBeforeScript\": \"onBefore.js\",\n      \"onReadyScript\": \"onReady.js\"\n    }\n]....\n. Absolutely!! Thanks a bunch! \n\nOn Mar 22, 2016, at 6:06 PM, Chip Cullen notifications@github.com wrote:\n@michael-tung each scenario needs a reference and a test url. So, mine look like this:\n\"scenarios\": [\n    {\n      \"label\": \"Home\",\n      \"url\": \"https://testurlhere/\",\n      \"referenceUrl\": \"http://referenceurlhere/\",\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.1,\n      \"onReadyScript\": \"onReady.js\"\n    },\n    {\n      \"label\": \"Foo Page\",\n      \"url\": \"https://testurlhere/foo\",\n      \"referenceUrl\": \"http://referenceurlhere/foo\",\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 3000,\n      \"misMatchThreshold\" : 0.1,\n      \"onReadyScript\": \"onReady.js\"\n    },\n   ...\nDoes that make sense?\n\u2015\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. \n",
    "cilefen": "This is a great feature. Sorry for the noise.\n. +1 I have the same thing. @keithjgrant Did you ever find the solution? I think the amount of tests is involved because if I use --filter to run fewer, the report is created.. For me, this turned out to be one problematic image compare, which was the last one listed in the command output before it silently dies.. @aperkaz Right now make sure you haven\u2019t accidentally installed a pre release. There\u2019s a problem with that I recall. . Good to hear. I vote we close this issue as outdated.. This is a good idea for a future major version. However, Chromy, in fact, is not rendering pages well in existing test suites we have so until that is sorted out, we should not remove PhantomJS.. For what it's worth, our little problem turned out to be caused by bad markup.. Yes it is a duplicate.. ",
    "jasonhick": "Hi,\nYou'll need to use CasperJS to simulate actions in your browser. There are instructions on using this in the Backstop readme ;)\n. ",
    "mayacode": "Hi there,\n@laubsauger please clear your PR from code adjustments - it is very hard to read what exactly was changed.\nI like idea of both global scripts (there is always something what is needed in global scope). I think there also would be useful possibility to call beforeScript for single test (somewhere inside casper.each(scenarios but before this.thenOpen)\n. True, but if I have more pages and if credential change I will have to change it in all links... so I would like to keep it in one file.\n. onReadyScript is launched AFTER thenOpen in genBitmaps.js, setting auth should be before it. I cannot see any point of opening the same page again.\nThanks for the link to other issue, will read.\nAnd I would suggest to use casper.getCurrentUrl(), not scenario.url, especially if 'referenceUrl' property is defined.\n. ",
    "bronzehedwick": "Hey @garris, thanks for the quick review! I fixed the merge conflicts, so hopefully that all checks out.\n. :+1: \n. ",
    "Farnoosh63": "@mayacode How do you define getCurrentUrl()??. ",
    "mirzazeyrek": "It was because of the pages it self. Issue is solved now.\n. @ryami333 as far as I remember it was adding body tag to the selectors.\n. Okey, it was because of the page itself, which I want to interact with it.\n. Thank you that's really nice Idea. But what's up with the dog and bone :). Actually I have made an improvement for limiting simultaneous comparisons with 10 images but it was pretty ugly workaround may be I can try to implement more advanced version in 2.0 and submit a PR. What do you think @garris  ? Would it be helpful ?\n. same here \nCOMMAND | Error: Mismatch errors found.\n              at /usr/local/lib/node_modules/backstopjs/core/command/report.js:108:17\n. Throwing an error breaks CI process but I have found a workaround. That's okey.\n. okey np. it is solved. \n. Dear @garris ,\nWith Jenkins what I needed to do is this:\nbackstop reference --configPath=chrome_blog_portfolio_15_08_2016_08_43_14.json || true\nbackstop test --configPath=chrome_blog_portfolio_15_08_2016_08_43_14.json || true\nEven there are errors it won't break the entire job or chained jobs.\n\n. @rasenplanscher I am not sure if I followed. What makes you think tests will always pass ? We are still using this approach and just yesterday we had 131 failed tests.\n\nOnly scenario that I think tests will always pass is using same URL both for reference and for test web site. And that makes no sense for CI and Jenkins integration.\nWhat I am doing is for example:\nReference URL: reference.yourdomain.com\nTest URL: jenkins-build-id.yourdomain.com\nMay be don't need to mention but of course it will fail if you do:\nReference URL: reference.yourdomain.com\nTest URL: reference.yourdomain.com. can you try it with phantomjs ?. I suggest you to use same dev env for tests. It could be because of font rendering differences. Were you using same OS and same Firefox version while executing tests on different machines ?. Hello @richhiggins ,\nJust out of curiosity. Why not working on a live / same dev environment for keeping reference images and test images both ?. @richhiggins Is your ubuntu server live ? Why not using it for creating reference images ? Are you keeping reference images on git repo ?. @garris If you have a moment I would like to discuss about this issue by showing actual use case. Please add me on skype mirza.zeyrek\n. Does chrome has same font rendering for mac os and ubuntu and windows ?. I strongly agree with this.  \nAnother important issue is that while trying to execute concurrent backstop tasks, wrong config.js files are being used because right config.js file would be overwritten... \nThat config file name should be unique for avoiding such conflicts. May be sha1 similar function can be used for creating unique ids. Any suggestions ? . old PR closed. New PR merged with custom xunit filename PR:\nhttps://github.com/garris/BackstopJS/pull/380. Please let me know if there is anything needs to be done. If you think that's okey for merge I can create another PR with one single commit :)\nhttps://github.com/garris/BackstopJS/pull/365/files. Hi @garris,\nI would be very happy if you can spare some time for this.. Default output quality was 50 now increased it to 85. it should help with noise. I'm sending it to beta branch. Thank you for review.. merged with https://github.com/garris/BackstopJS/pull/380. Yes actually main benefit is being able to run multiple instances.. @svwu no, it works. this is an expected behavior. if hash is same it means backstop.json file is the same. why need create different hash ? \nyes there is no delete afterwards. it can be improved. any contribution is welcome.. Could you please share your files and commands which you were using for test. I can't reproduce the error. @svwu. @garris different filters are working without an issue for same backstop. Json file. Actually we are using it that way in our ci process. Issue is for exact same test case on Windows as far as I can confirm so far. \nworks:\n```\nbackstop test --filter=^loginFlow$ //runs for 5 mins\n// 2 mins later\nbackstop test --filter=^userWidgets\n```\nbackstop test --filter=^loginFlow$ & backstop test --filter=^userWidgets\n// start at the same time\nnot working:\nbackstop test --filter=widget & backstop test --filter=widget\n// start at the same time\nbackstop test --configPath=widgets.json & backstop test --configPath=widgets.json\n// start at the same time. I have tested on windows and ubuntu. Can we confirm that issue is resolved with new commit ? @svwu  @garris . btw, I have noticed backstopjs is already creating temp files and not deleting it. It can be improved with a clean up task... \n\n. @svwu were you able to check it ? please let me know. . Thank you @garris . I'll create that PR and send to beta branch. About using this feature in our CI process, Unfortunately it's not possible without two other PR's that I've sent.\nWe are using custom xunit file names, which is being passed from cli. That way it won't be overwritten by every different filter executing at the same time.\nAnd also JPEG support due to huge number of tests, png images are contains huge space.\n. I have combined two PR's into one for beta branch. Please let me know if anything else is needed.\nAbout the jpeg output support we provided a different method for JPEG because these two formats uses different libraries for encode/decode in node-resemble-js. \nI would be more than happy if we can put this into beta branch or if you can redirect me we can try to improve existing methods but those are working fine for us and tested on ubuntu 16.04 and windows 10. So far we have made more than 100.000 image comparison. \n@garris . merged with https://github.com/garris/BackstopJS/pull/380. count me in \ud83d\udc4d . garris could you please add me too ? \nmirzazeyrek@gmail.com. If you are using a linux integration may be you can try:\nbackstop command > /dev/null. @svwu please review this too when you have time.. chrome is not supported and not mentioned in anywhere in the repo.\nhttps://github.com/garris/BackstopJS/issues/370. Hi @marc0n3 ,\nYes but not via config file unfortunately. There are some changes since my jpeg PR but changing 85 in getDiffImageAsJPEG method should work:\nhttps://github.com/garris/BackstopJS/blob/master/core/util/compare/store-failed-diff.js#L20. Could it be this issue ?\nhttps://github.com/casperjs/casperjs/pull/1695\nwhich casperjs* version are you using ?\n*I think this issue is not related with backstopjs. . Can you check related files has changes from that pr in your casperjs installation?\nhttps://github.com/casperjs/casperjs/pull/1695/files . I didn't checked the codes but something came in my mind just asking. \nIf md5 hash is same; Do you think is it make sense to delete taken test image and using the reference image link in html report section ? \nI believe it will save a lot of space. What do you think @garris  ?. For 1 test what we have is 490 MB of reference and 514 MB of test images:\nTOTAL   PASS    FAIL     HEALTH\n1398    1335    63   95.7%\nI think we might assume test case folder will be around 50 mb if we don't create duplicate images. Assuming those tests will be run around 20 times for a typical work day.  What we are looking is 185.6 GB of data saving in a month. \n@garris . Your suggestion sounds good but unfortunately almost none of our tests has 100% success ratio.. Hello @YogevMagal,\nIt's pretty straightforward.  Just set a xml output file location in backstop config file and make sure to configure Jenkins to check this report.\n\n. @garris I was also thinking about this. If we start an open source project implementing headless chrome into CasperJS, I am sure there will be a lot of contributions.\nCasperJS maintainers are very nice people and they are always open for such contributions.\nOn the other hand, implementing Chromy looks more easier but how this will effect backwards compatibility with CasperJS scripts ? . Are you sure this is a width issue ? Could it be font rendering difference ? \n@NimaSoroush . That's really great news.  But about onReady.js and onBefore.js files I'm not sure if it's possible to convert those or how :)\nBTW, I noticed beta branch on github doesn't have chromy updates. . On ubuntu 16.04 with node 7.2 latest released chrome default tests are working fine. \nBut my previous tests have some issues.. @boriskaiser I think it would work fine with different versions if you try \"backstop reference && backstop test\"\nThere could be font rendering differences between different chrome versions. \nAnd is footer selector works fine with different chrome versions ? . Unfortunately it still does not work. However when I tried to activate debug mode and manually enter console.log('ready for rock'); it does work... @garris  @hbrannan . I'm using latest version of canary and node v6.10.0 macos siearra 10.12.6. Are you using mac os and what is your node version ? @garris . same issue https://github.com/garris/BackstopJS/issues/520. @vdekov  node-resemble-js maintainer here! Could you please share the changes you have made ? \nAnd Can you confirm when you've changed the comparison method the memory issue is gone ? . Sure. Could you please add me on skype may be I can take a look at what's going with screen sharing ? @nikhilwarang \nid mirza.zeyrek. Oh, sorry didn't saw those messages before. Very busy and rough last few weeks for me. It would be nice if github has notification feature like in linkedin or facebook. \nBasically what you need to is execute your tests and publish junit test reports as a post build job.  @mdiha \n\nI do agree a tutorial might be useful. No deadline promises but I'm planning to work on a simple one \ud83d\udc4d @garris \nYou can search junit on readme.md for the other details:\n\"paths\": {\n  \"ci_report\" :  \"backstop_data/ci_report\"\n},\n\"ci\": {\n  \"format\" :  \"junit\" ,\n  \"testReportFileName\": \"myproject-xunit\", // in case if you want to override the default filename (xunit.xml)\n  \"testSuiteName\" :  \"backstopJS\"\n},\n. ?. @garris I never thought about the image comparison part but it's strange that I had a repository a bit similar to what you shared as javascript-diff-alghoritm. \nhttps://github.com/mirzazeyrek/php-get-string-similarities. Looks like a folder permission issue. Could you please try it by setting chmod permissions as 777 to quickly discard this possibility ?. Could you please try to connect server and switch to Jenkins user and test commands are working there or not ?. There could be an additional parameter for optimization and image quality. Back then we were using jpg output format for smaller images.. Would you consider creating a test case for each row separately ? May be you can add id's or classes and use smaller units for testing ? \nHmm after a 2nd look I think I understand the difference. Is this change consistent ? May be you can try to make failed tests again automatically ?. makes sense. I'll update it.. Okey, I have checked this and remembered why I do like this.\nThis is an intended behavior for preventing different hashes because of a dynamic temp value. \nThe hash value only needs to be change when you make a change in your backstop.json file. \nIf we do this as your suggestion every time we are going to get different hash name and it will create a lot of tmp files (even backstop.json file is same) for each execution.. I am able to reproduce the error on my windows machine. I'll take a look tomorrow. Thank you for noticing this. I couldn't thought about a scenario for execution of same test at the same time. (still I can't :) ). makes sense \ud83d\udc4d . ",
    "ryami333": "Hey @mirzazeyrek I'm interested in hearing how you achieved this?\n. ",
    "bradwade": "I indented the label three spaces which is sufficient to show hierarchy, economizes space (I have some looong file names), lines up the colons, and places the file paths at the beginning of the error message. \n. Good idea. Will update PR.\nOn Feb 12, 2016 6:39 PM, \"Garris\" notifications@github.com wrote:\n\nIn gulp/tasks/compare.js\nhttps://github.com/garris/BackstopJS/pull/161#discussion_r52813491:\n\n@@ -59,7 +59,7 @@ gulp.task('compare', function (done) {\nfunction storeFailedDiffImage(testPath, data) {\n     var failedDiffFilename = getFailedDiffFilename(testPath);\n-    console.log('Storing diff image in ', failedDiffFilename);\n-    console.log('Storing diff image in', failedDiffFilename);\n\nAs long as we're at it, maybe the text should be shortened to:\n\" See: \"\nEssentially indent the file info to start with the error data value.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/pull/161/files#r52813491.\n. \n",
    "jcdarwin": "Yep, but found one small problem with Firefox -- have rectified in the\nlatest PR:\nhttps://github.com/garris/BackstopJS/pull/166\nNote that Flexbox support is pretty good these days, but IE9 and before are\nnot supported:\nhttp://caniuse.com/#feat=flexbox\nCheers,\nJason\nOn 20 February 2016 at 13:40, Garris notifications@github.com wrote:\n\nMerged #163 https://github.com/garris/BackstopJS/pull/163.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/pull/163#event-557299279.\n. Yep, and also Edge and IE10+\n\nJason\nOn 20 February 2016 at 17:52, Garris notifications@github.com wrote:\n\nGreat. Merged. So, Chrome + Safari + FF should be good now?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/garris/BackstopJS/pull/163#issuecomment-186509325.\n. \n",
    "wjramos": "+1 on @klausbayrhammer's suggestion of a more agnostic core package\n. Thanks @garris for the prompt response.\nI will need to look into how we are referencing phantom and casper, but it should always pick up the local or whatever is in the closest parent directory. If the same version is installed globally npm install should just link it.\nThese dependencies wouldn't need to be globally installed (but it is preferred since they provide bin executables), and this would ensure that a single npm install would provide all necessary packages, and the packages themselves will alert the user that it is recommended to have them installed globally.\nIt looks like I added an extra comma by mistake -- it's rebuilding now, we'll see how it goes without a syntax error.\nEdit: Build looks good\n. @garris So, just to clarify, gulp is no longer going to be a dependency at all?\nAlso worth mentioning -- phantomjs2 does support flexbox\n\n. ",
    "JulienPradet": "Hi!\nI was wondering if I could be of any help here and which task I could do. Is there anyone actively working on the core thing ?\nI'm working on a project (Pigment-Store) that's supposed to come as a all-in-one Documentation + Automated Visual Testing for React Apps. (I don't want to do my advertising here, it's just to explain why I'm willing to help :)) And BackstopJS seems to suit my needs for the Automated Testing part. However, if a core existed it would be much easier for me to interact with the library.\nMoreover, once you've got a clear core, it's quite easy to come up with a CLI. minimist is great for parsing arguments. You just need to map them to your functions later on.\nI won't be of much help for another 10 days. But if by any change, help is still needed by then, I'll be glad to help.\n. Ok, so I've updated it with the Promise system.\nI've assumed that it would be better to have before (or after) scripts to run concurrently.  (cf. 117f513)\nThe reason I often start the Promises with\njs\nPromise.resolve()\n  .then(/*actual work here*/)\nis because it allows the execute command to be synchrone and to not care about the Promise system at all.\nI guess I can now start to do the main refactoring and move parts one by one.\n. Thanks, I will!\nThis week end, my brother is getting married so it's a bit tough to find some time to work on it ^^ But I'll find some time next week.\n. Just to keep some updates here, I have done some refactoring in order to promisify every tasks. However 0 tests are run now \ud83d\ude02 (but that's a clean way to keep them all green !)\nAnyhow, I should push the updates with actual code tomorrow.\n. Ok so the basics seems to be working right now.\nI still need to make a pass and read every details I've done since I had a few problems and things didn't go as smoothly as before.\nOnce it's done, I'll need some help to identify features that I didn't forgot. I'll also try to add some automated testing in order to ease future refactoring.\nDoes it seem good to you ? @garris / @levithomason \n. For the branch, is there any way to change this PR, or do I have to create a new one ?\n. Alright! Thanks for letting me know. I'll look at what are the differencies for keeping myself up to date.\nDo you have any plans for what's needed before launching 2.0 ? How can I help ?\n. @garris thanks a lot :)\nDon't worry and take your time. I don't have much free time until two weeks anyway.\n. ",
    "joemaller": "@garris Where's this one at? I started with v2.0 and mostly using browser reporting, but the output seems pretty good to me. \nIf you could post something like a marked up screenshot, it would be easier to jump in and help.\n. @chrneumann Is this still happening with version_2_0?\nIf so, can you post the scripts block from your package.json file?\n. ",
    "Grafs": "I understand, but it is not convenient.\nFor every action you need to reload the page.\nI have tried to do so:\nmodule.exports = function(casper, scenario, vp) {\n      casper.click('#elem1_show');\n          casper.wait(2000);\n          casper.captureSelector('../../backstop_data/bitmaps_reference/elem1.png', '#elem1_show');\n         casper.click('#elem1_hide');\n      casper.click('#elem2_show');\n          casper.wait(2000);\n          casper.captureSelector('../../backstop_data/bitmaps_reference/elem2.png', '#elem2_show');\n         casper.click('#elem2_hide');\n}\nBut the result is not written in the compare.json\nYou can make a recording function in compare.json from the casper scenario?\n. For example:\nviewport w-320\n    click>show and captur hidden element 1 only\nviewport w-768\n    click>show and captur hidden element 2 only\nviewport w-1024\n    click>show and captur hidden element 3 only\n\n```\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 12000\n    },\n    {\n      \"name\": \"tablet\",\n      \"width\": 768,\n      \"height\": 8000\n    },\n    {\n      \"name\": \"desctop\",\n      \"width\": 1280,\n      \"height\": 6000\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"http://example.com\",\n      \"url\": \"http://example.com\",\n      \"selectors\": [\"#element1\",\"#element2\",\"#element3\"],\n      \"readyEvent\": null,\n      \"delay\": 1000,\n      \"misMatchThreshold\" : 0.001,\n      \"onReadyScript\": \"elementTest.js\"\n    },\n\nelementTest.js:\nmodule.exports = function(casper, scenario, vp) {\n  if (vp.name === 'phone') {\n      casper.click( '#element1' );\n  }else if(vp.name === 'tablet'){\n      casper.click( '#element2' );\n  }else if(vp.name === 'desctop'){\n      casper.click( '#element3' );\n  }\n}\n```\n\nHow many images? = 9, of these 6 empty and 9 page refresh\nThere should be only 3\nIt is better to make a function in scenario for module.exports to capture intermediate images\n. ",
    "raypatterson": "Hi,\nCurious about this issue before I start troubleshooting. \nIs the expectation that the images would match the screen pixel density? \nI am wondering if this is related to: \nhttps://github.com/ariya/phantomjs/issues/10964\nThanks\n. Hope I'm not hijacking your issue @joaoffalcao, but would you mind sharing your solution for generating retina images? I don't understand how you are changing the user agent to generate retina images.\nThanks\n. @joaoffalcao ok thanks for explaining!\n. ",
    "jebenois": "What is the status with using Phantomjs2? \nThe docs seems to indicate Phantomjs2 is not being used: \n\"PhantomJS, the default rendering engine, does not correctly interpret flexbox and web fonts -- so if you are using those things in your app you will be way more happy using SlimerJS. Here is how to do that...\"\n. ",
    "medovob": "Actually, I think this might only occur if the document body is set to height:100%\nIn any case, I think it would be good to have this as an option at least\n. ",
    "fillerwriter": "FWIW, I was able to use the code from this PR against lastest master without issue. Thanks @medovob!\n. ",
    "benjaminfisher": "npm install of BackstopJS results in the same error with both gulp reference, and gulp test. \n. I've updated to the latest version of Backstop (1.2.1). npm run genConfig runs with no errors. Both npm run reference and npm run test give the same error previously mentioned.\nnpm run test doesn't automatically open the browser, but npm run openReport does. \n. Closed accidentally. Sorry.\n. That error seems to be specific to my machine, and I get it no matter what I try to run in the command line. I don't think it's related, since it hasn't actually stopped me from doing anything else. I really should track that down, and fix it :)\n. @gerbilsinspace I have been using git bash for the unix support, but I've seen the system can not find the path specified error when using the vanilla Windows cmd prompt.\n. 1. Yes\n2. Doesn't seem to be.\n```\n$ node\n\nfs.appendFile('aNewFile.txt', '1234')\nundefined\n/c/Rhythm/rhythm-testing (master)\n$ ls\naNewFile.txt   backstop_data/  package.json\n``\n. Resolved issues withthe system can not find the path specified.error, and that does seem to have resolved this particular issue. I'm not getting theTesting script failed with code: 1error anymore, and thenpm run test` is auto-opening the browser now. However changing the engine to SlimerJS is still not generating reference screen shots. Do you want to keep working off of this issue, or reopen the other one?\n. @gerbilsinspace By the way I resolved the path issue in cmd by following the steps in the first answer on http://superuser.com/questions/727316/error-in-command-line-the-system-cannot-find-the-path-specified\n\nTry the following.\n1. Open the Registry Editor(press  + R, type regedit and hit Enter) .\n2. Navigate to HKCU\\Software\\Microsoft\\Command Processor\\AutoRun and clear the values.\n3. Also check HKLM\\Software\\Microsoft\\Command Processor\\AutoRun.\nMake sure you back up your registry first though :-)\n. With the engine set to slimerjs in the backstop.json config fie I get the following output to the console:\n```\n$ npm run reference\n\nrhythm-testing@1.0.0 reference C:\\Rhythm\\rhythm-testing\ncd node_modules\\backstopjs & npm run reference\nbackstopjs@1.2.1 reference C:\\Rhythm\\rhythm-testing\\node_modules\\backst\nopjs\ngulp reference\n\nBackstopJS Config loaded at location C:\\Rhythm\\rhythm-testing\\backstop.json\n[09:46:16] Using gulpfile C:\\Rhythm\\rhythm-testing\\node_modules\\backstopjs\\gulpfile.js\n[09:46:16] Starting 'clean'...\nbitmaps_reference was cleaned.\n[09:46:16] Starting 'bless'...\n[09:46:16] Finished 'bless' after 6.82 ms\n[09:46:16] Finished 'clean' after 89 ms\n[09:46:16] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[09:46:16] Starting 'init'...\n[09:46:16] Finished 'init' after 4.91 \u00b5s\n[09:46:16] Starting 'test'...\nGenerating reference files.\nRunning CasperJS with:  [ 'capture/genBitmaps.js', '--engine=slimerjs' ]\n[09:46:16] Finished 'test' after 14 ms\nreference has run.\n[09:46:16] Finished 'reference' after 17 ms\nBitmap file generation completed.\nRun $ npm run test to generate diff report.\n```\nHowever no images are created in bitmaps_reference.\n. ",
    "gerbilsinspace": "@benjaminfisher are you using the default command prompt, or something else? I've noticed this issue when using git bash. I can't test any more until I get back in the office tomorrow, but I'll try to do my part debugging this.\n. ",
    "robertmazzo": "@benjaminfisher - i understand you resolved the path issue, but what about your original post regarding the gulp process not completing and also not opening the browser ?\nFrom the OP:\n            \"the test gulp task are throwing Testing script failed with code: 1 and the test page is not launching in the browser.\"\n. I have the same problem, with the same exact output as the OP, and the bitmaps_reference folder is not getting created under ..\\myCoolProject\\backstop_data\\.\nI have already l installed python as per @firmlybelieve , but to no avail. I still get the same errors when running npm run reference\nAnd btw, I am troubleshooting based on your previous suggestion on March 10th (https://github.com/garris/BackstopJS/issues/171 ):\n    $ npm run genConfig\n   $ npm run reference\n   $ npm run test\nIs there an issue with my gulp version, as per this error ?\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\nC:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProject\\node_modules\\backstopjs>npm\n run reference\nC:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProject\\node_modules\\backstopjs>npm\n run reference\nbackstopjs@1.3.5 reference C:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProjec\nt\\node_modules\\backstopjs\n gulp reference\nBackstopJS Config loaded at location C:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCo\nolProject\\backstop.json\n[09:38:40] Using gulpfile C:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProject\\n\node_modules\\backstopjs\\gulpfile.js\n[09:38:40] Starting 'clean'...\nbitmaps_reference was cleaned.\n[09:38:40] Starting 'bless'...\n[09:38:40] Finished 'bless' after 7.98 ms\n[09:38:40] Finished 'clean' after 20 ms\n[09:38:40] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task trigger\ning instead.\n[09:38:40] Starting 'init'...\n[09:38:40] Finished 'init' after 8.08 \u00b5s\n[09:38:40] Starting 'test'...\nGenerating reference files.\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[09:38:40] Finished 'test' after 12 ms\nreference has run.\n[09:38:40] Finished 'reference' after 18 ms\nTesting script failed with code: 1\nLooks like an error occured. You may want to try running $ npm run echo. This\nwill echo the requested test URL output to the console. You can check this outpu\nt to verify that the file requested is indeed being received in the expected for\nmat.\nC:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProject\\node_modules\\backstopjs>\n. @danemacaulay - I've tested phantonjs independently ? It works.\nC:\\..\\myCoolProject>phantomjs test-ph.js\n Hello, world!\nAfter running another npm install for both phantomjs and phantonjs-prebuilt :\n\nnpm list phantomjs\n..\\backstopjs-test\\myCoolProject\n`-- phantomjs@2.1.7\nnpm list phantomjs-prebuil\n\nC:\\Bob\\dev\\pluralsight\\backstopjs-test\\myCoolProject\n+-- backstopjs@1.3.5\n| -- phantomjs-prebuilt@2.1.12-- phantomjs-prebuilt@2.1.12\n. @danemacaulay I've already tested phantom as I briefly stated above. At this point I'm stuck with the same error after running npm run reference . I'm not sure where to go at this point. Thank you.\n. Even with debug: true in backstop.json, I'm getting the same output.\nThe closest I can get to an exception in the code is this casperChild.on event in test.js :\n```\n  casperChild.on('close', function (code) {\n  var success = code === 0; // Will be 1 in the event of failure\n  var result = (success)?'Bitmap file generation completed.':'Testing script failed with code: '+code;\nconsole.log('\\n'+result);\n//exit if there was some kind of failure in the casperChild process\nif(code!=0){\n  console.log('\\nLooks like an error occured. You may want to try running $ npm run echo. This will echo the requested test URL output to the console. You can check this output to verify that the file requested is indeed being received in the expected format.');\n  return false;\n}\nif(genReferenceMode){\n  console.log('\\nRun $ npm run test to generate diff report.\\n')\n}else{\n  gulp.run('report');\n}\n```\n});\n. @garris Thanks for following up. I'll try and find time to test the phantomjs screenshot today.\n. @garris thank you for following up. I wasn't able to spend time on this, so I'll def try to get back on version 2.0 on my home machine pretty soon. \n@agentdylan thank you for your feedback on install Python.\n. @garris should I'll this until I resolve my issues ? I don't want to clutter up your github issues section. regards...Bob.\n. ",
    "christianhaller": "I had the same problem.\nWith slimerjs, the reference image was not saved.\nIf you run backstopjs with debug: true, you can see the casperjs error:\n\nFailed to save screenshot to ...;\n please check permissions...\n\nI changed my selector body to the  with the id page (luckily I have this on every page).\nAfter that, it references for all urls are generated.\nps: selector 'html' was also failing for some urls.\nIt's not happend with phantomjs.\n. I have the same problem. Works with slimersjs, fails with phantomjs\n. ",
    "opub": "I believe I am running into this using PhantomJS. I only get empty (3.58 KB PNG) screenshots when loading URLs with a hash fragment. Are there any potential workarounds?\nI'm not sure if it is related but the other resources from the page don't appear to load either when using the hash fragment. That might be something I'm doing wrong though. I've just started looking into this.\n. My apologies. While searching for solutions to this I hadn't realized that I had jumped from CasperJS GitHub issues to BackstopJS.  I'm not using BackstopJS, just the vanilla CasperJS and PhantomJS.  I think my problem is https://github.com/ariya/phantomjs/issues/13652.\n. ",
    "rapidfixer": "No, not app components. of course my app is already bundled at the moment of testing :)\nI mean separated casper test script files. And all i've found was --includes option in CasperJS CLI, but that is unuseable in our case.\nWill try to bundle tests together. \n. Combining tests via webpack with output.libraryTarget set to 'commonjs2' . Works as expected.\nThanks for answering!\n. ",
    "bogatyrjov": "What do you mean and how would that work? I don't get it.\nMy goal is to just use 'gulp test' but make it load config from js, not the default json.\n. npm run test takes conf from backstop.json\nnpm run test -- --configPath=config.js takes conf from config.js\ngulp test takes conf from backstop.json\nQuestion is how to run gulp test with conf from config.js ?\nSorry if I'm still not being clear enough :)\n. Ok, gulp-chug actually has an option to include arguments, so this task in my project's gulpfile solved my case:\ngulp.task( 'test', function () {\n    gulp.src( './node_modules/backstopjs/gulpfile.js' )\n        .pipe( chug({\n            tasks:  [ 'test' ],\n            args: [ '--configPath=../../config.js' ]\n        }));\n});\n. ",
    "LukasLt": "You can select engine to use. PhantomJS uses webkit (more or less Chrome),  SlimerJS uses Gecko (more or less Firefox). \n. All can be worked around using JS config version. \n. ",
    "NataG": "Anything for IE at all?\n. ",
    "danwellman": "http://triflejs.org/ could work for IE, would be great to be able to pass that to the engine property in backstop.json\n. I did consider breaking up the config, we do have clear lines of division between the components so it would be relatively easy to do. Thanks\n. Hello, yes, I'm using the CLI option now, it's working very well with no issues at all. Also, yes, if I run a small selection of scenarios, up to about 20 or so, the HTML page loads fine without any issues \n. I'm going to have to get back to you with more information in a couple of weeks as I'll be away from the office (and my colleague) for a short while. I'll get this info back to you as soon as I can, thanks.\n. I'm suspecting Phantom also, we aren't using slimer. I'm out of the country at present, will confirm in a week or so.\nGet Outlook for iOS\nOn Fri, Sep 2, 2016 at 9:16 PM +0200, \"Garris\" notifications@github.com wrote:\ni am suspecting it is an issue with either phantom (or slimmer -- if you're using that).   Have you tried a simple install on your other machine?  Just install the app.  Do genConfig then reference then test.  Does that work?\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/garris/BackstopJS/issues/268#issuecomment-244464187\n. We are on Windows, but I'm not sure this is the answer - we have Phython 2.x for Karma\nGet Outlook for iOS\nOn Fri, Sep 2, 2016 at 10:13 PM +0200, \"Garris\" notifications@github.com wrote:\nIf you are on Windows then this might help...  https://github.com/garris/BackstopJS/issues/185\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/garris/BackstopJS/issues/268#issuecomment-244476708\n. ",
    "Spydr331": "Im looking for the same thing.  I have a PC with firefox, chrome, and IE installed so I would like to run tests in each if possible\n. I get the same issue as stephenbe, right down to the url.  I copied the two urls that the code is pointing to from the inspector tool to see how the browser is trying to translate the link:\nfile:///C:/Users/mfeola/Desktop/backstop%20tests/C:/Users/mfeola/Desktop/backstop%20tests/backstop_data/bitmaps_test/20161005-113215/failed_diff_prod_test_Local_StyleGuide_0_doc-colors_0_phone.png\nfile:///C:/Users/mfeola/Desktop/backstop%20tests/backstop_data/bitmaps_test/20161005-113215/prod_test_Local_StyleGuide_0_doc-colors_0_phone.png\nThe ../../ seems to be adding in the base url of C:/Users/mfeola/Desktop/backstop%20tests/ twice\nand the URL thats being called for the images comes from thisTestPair.c.src but i dont know enough about npm to edit this :(\n. also in the config.js files in the html_report folder, the reference and test images both start at the folders starting with \"bitmaps_\" but the diffImage starts at C:\n\"reference\": \"..\\\\bitmaps_reference\\\\prod_test_Local_StyleGuide_0_doc-colors_2_tablet_h.png\"\n\"test\": \"..\\\\bitmaps_test\\\\20161005-113215\\\\prod_test_Local_StyleGuide_0_doc-colors_2_tablet_h.png\"\n\"diffImage\": \"..\\\\..\\\\C:\\\\Users\\\\mfeola\\\\Desktop\\\\backstop tests\\\\backstop_data\\\\bitmaps_test\\\\20161005-113215\\\\failed_diff_prod_test_Local_StyleGuide_0_doc-colors_2_tablet_h.png\"\n. thanks garris, ill look into it :)\n. I was able to get a transparency to show up.  in the node package for backstop I had to go into:\nbackstopjs\\core\\util\\compare.js\nand on line 37 I added this:\nresemble.outputSettings({\n  transparency: 0.3\n});\n. So there is no border option, the changed areas were only squares because the changed areas were square.  \nDon't suppose adding options to control the color or opacity of the result image is in the timeline for improvements is it?\n. ",
    "chrneumann": "No, seems to be fine, thanks.\n. ",
    "racer2207": "I installed the latest version of Python from www.python.org. The direct link is Download Python 3.5.1\nFrom there I just installed their software suite and made sure my PATH variable included python.exe. Someone could do a custom install and only add python.exe.\n. ",
    "denis-zavgorodny": "merged with the main branch, conflict resolved\nThis pull request is not interesting? \n. ",
    "jtuds": "Hey @denis-zavgorodny I just started reviewing this. Can you fix the merge conflicts please?. Agreed @stevecfischer . Please fix @ashokkumar . There's a push to get these PRs reviewed so if you can get it fixed someone can take a look soon! :). It'd be useful to get an output log for a successful test and then one for a failing test. Also, a couple of screenshots from each test. @robertloo . If possible. I would try run some tests on an isolated, very small and single scenario. Then repeat it a few times and see if you get any false negatives. If you are getting false negatives on a very small, simple HTML page with no Javascript or styling then this could be an issue with the functionality rather than your use case. @robertloo . Your mismatch is over the threshold in this instance though, requireSameDimensions won't stop a test that is over the mismatch threshold from failing. What happens if you make it under the mismatch, say 14%, and then run the tests?. Hm, this looks like it may be a bug. I see you are setting your options with variables, e.g. var misMatchThreshold = 23. How are you passing these to the Backstop config file/s?. Ok, this sounds like it is a bug and needs looking at. @garris If you agree, can you reopen this issue?. Why does isSameDimensions need to be true when you can set a mismatch threshold? A mismatch can cause a change in dimensions, so they naturally don't go together. I have a scenario where my font rendering is slightly off which causes the height of my test to be slightly different to my reference, as the font renders slightly larger, this is an acceptable mismatch but because it changes the height, the test fails.\nWhy is isSameDimensions a thing alongside the mismatch?\n. Yep I agree with @Primajin. \n. This is most probably because of the mismatch in height. If there is a height mismatch the tests fail. This is fixed in my pull request number #331 . The bump in versions done yesterday should fix this CI build\n. I'm going to work on the requested changes soon. Hopefully get this merged in soon after that :)\n. @cheapaschips I haven't yet had a chance to properly implement the changes. It's on my list to do, perhaps might get chance tomorrow!. Requested changes done and pull request updated @garris . Sorry about that. I think the dependencies have changed since I did the work. I've merged master in to the branch. @stevecfischer . Master merged again after conflicts found. @cdaringe I'll hopefully get round to it sooner rather than later (I don't know when!) but anyone is more than welcome to help push this over the line sooner :). @cdaringe As far as I'm aware, the issue you raised in capture/genBitmaps.js has not been fixed. Check for falsy values needs to be implemented. Thanks for helping by the way!. At the moment, generate our reference screenshots on the CI server and then download them and put them in source control. We then know when CI does a test, the same environment that generated the references is being used. Not ideal but holding out for Chromy support \ud83d\ude04 \n. @garris Happy to help with this whenever I get bits of time :). Can I have a Slack invite please? james.tudsbury1@gmail.com. So are you saying that because the mismatch is 0 the check for requireSameDimensions never takes place? And that if the mismatch is >0 it works ok? It would make sense.. @khalistan I haven't got around to duplicating this but are you expecting to find logic in Resemble.js? The logic is in Backstop itself not Resemble. Backstop reports a width and height difference under the property \"dimensionDifference\". So if the mismatch threshold is below the set number, there is a dimension difference, and requireSameDimensions is set to false, the test should still pass.\nE.g.\nConfig:\nmisMatchThreshold = 10\nrequireSameDimensions = false\nTest:\nmisMatchPercentage = 5\nisSameDimensions = false\ndimensionDifference = { width:10, height:10}\nTest should pass in this scenario.. You can find logic for this in core/util/compare.js (among other files). What command are you running?. Shouldn't this be pointing to the Backstop build i.e. \"garris/BackstopJS\"?. Shouldn't this be pointing to the Backstop build i.e. \"garris/BackstopJS\"? @denis-zavgorodny . ",
    "JayGray": "If I look at JavaScript Error: \"ReferenceError: Symbol is not defined\" I would guess the bundle.js has ES6 syntax. AFAIK neither slimerjs nor PhantomJS supports ES6. You might need to transpile it down to ES5.\nSymbol\n. ",
    "cehter": "Thank you @garris and @JayGray. I didn't think about the ES6 support, we use the ES6 syntax. Will test it with ES5. \n. ",
    "mrdevin": "onBeforeEach.js\n``` javascript\ncasper.start('http://127.0.0.1:8000/accounts/login/', function(){\n        this.fill('form#loginForm',{\n            'username': 'name',\n            'password': 'pass'\n        }, true);\n    });\n```\nthat causes my issue. So I changed it to: \n``` javascript\ncasper.thenOpen('http://127.0.0.1:8000/accounts/login/', function(){\n        this.fill('form#loginForm',{\n            'username': 'name',\n            'password': 'pass'\n        }, true);\n    });\n```\n. ",
    "dixit4patel": "Can you give code sample here. I am also facing same issue. Its urgent. \n. ",
    "rbayliss": "Yeah, I'm experiencing a similar thing.  If it helps in tracing it back, here's a build that's getting hung during a Backstop test: https://circleci.com/gh/LastCallMedia/Drupal-Scaffold/62\nAnd the code: https://github.com/LastCallMedia/Drupal-Scaffold/tree/c21dd658354179e4f86b5b114600a2e839e25f19/backstop. ",
    "sturobson": "@garris sorry, let me try again :) \nIs it possible to use this on multiple pages at once, or is it restricted to one .html file at a time? I've a large pattern library and was wondering if it was possible to point BackstopJS at the folder of patterns for it run through. Does that make better sense? Thanks for replying :)\n. @mathesond2 @garris I'm looking at this again - I'll try and work out how to grab scenarios per pattern with the ideas above - I'll add the code here if I work it out.. Thanks for your pointers @garris - I've managed to get it working in my starter project that uses Fractal ... https://github.com/sturobson/SCL\nThe config file is here - https://github.com/sturobson/SCL/blob/master/backstopConfig.js and I'm running all the things via gulp - https://github.com/sturobson/SCL/blob/master/gulpfile.js\nI'm going to close this now - I'm hoping to do a quick write-up about this too.. Sorry, to be a little more clearer -- if I wanted to edit the UI of the HTML report - to 'theme' it somehow -- is that possible?. I see @pkra has already raised a PR for this (#43) ... closing this one :). ",
    "mathesond2": "@sturobson did you complete this script? Would love to take a look..thanks!\n. Awesome!! Thanks so much, I've been scratching my head for a while this morning so that is great. Also, I'll be updating ASAP. \ud83d\udc4d\n. ",
    "nobso": "@garris do you have any comment on this requirement?\n. @garris Cool, i'll raise a PR for the same.\n. @garris I've raised a https://github.com/garris/BackstopJS/pull/194 for the same, please review and let me know if you have any comments\n. @garris can you please review this?\n. @garris i would like to use this ASAP \ud83d\ude03  could you please review?\n. @garris Not a problem, Thank you!\n. @garris @klausbayrhammer, Thanks for merging the other PR.  In this PR, i've just updated the readme file. Please review the same. \n. @garris sure, i will do it tonight. \n. @prevostc what are the changes you have had? could you please list the steps here?\n. @prevostc can you please provide me the steps to reproduce?\n. @prevostc Ok, no problem. You may follow these instructions https://github.com/garris/BackstopJS#test-report-integration-with-a-build-system-like-jenkinstravis \n. @prevostc https://github.com/garris/BackstopJS/pull/211 fix might have fixed your issue too. Please check and confirm!\n. @garris Thanks \ud83d\ude04 \n. @garris could you please review this?\n. Thanks! @garris \n. @mousemke, Where have you been looking for a generated file? The report will be generated when you run 'npm run test'.\nCan you please add the path for CI report and look at the path?\n\"paths\": {\n       \"ci_report\" :  \"../../backstop_data/ci_report\"\n},\n. @mousemke From this log, i don't see the 'compare' task running. Can you confirm that ? \n. @mousemke I think, i got the issue and it seems like there is a bug. Let me fix and raise a PR.\n. @mousemke can you apply https://github.com/garris/BackstopJS/pull/211/files change and test ?\n. Cool! Thanks for verifying the changes and sorry for the inconvenience! If @garris merges https://github.com/garris/BackstopJS/pull/211, we all would have that issue fixed in the next version.\n. @mousemke Thanks for reporting it.\n. @mousemke  npm run test should take care of that comparison.\n. @mousemke Good to hear that! \ud83d\ude04  @garris lets close this issue.\n. I did one round of testing and it works fine for me. It would be great if @mousemke confirms that this change fixes the issue. So that @garris would be able to merge it.\n. @garris Thanks! \ud83d\ude04 \n. @garris can you please review this?\n. @garris sorry to bother you, it would be great if it gets merged soon :) my build is broken and waiting for this fix\n. @garris Thank you! can you please update the npm package as well?\n. Its my pleasure!  Yes, i see the upgraded version now, thanks.\n. @vflirt Thanks for raising this issue \ud83d\ude03.  I got your point. Please raise the PR if you can or let me know i can do that right away.\n. @garris I did one round of testing in my local system, it seems to be working fine. Can you please review this?\n@vflirt please confirm if that works for you too.\n. @levithomason commit message would also do the same\n. @garris @vflirt  Thank you for making it better!\n. @garris Sorry i was caught up other things, i've just addressed your concerns, can you please review again?\n. It would be good if you have a look at it again. Thanks. \n. @garris Not a problem. \n. @garris Not a problem. Yes i was busy with regular stuffs. Thanks.\n. Cool, i will work on it soon!\n. Can you please change the issue label to enhancement ?\n. Hi @garris I'm sorry that i couldn't do that as i'm tied up with other things now. I'm ready to help if someone starts it. . @melissamcewen You may try to use https://www.npmjs.com/package/gulp-shell with CWD option. I've used grunt-shell that is similar to this package.\n. I also faced this issue before, @mig-25 Can you check those \"failed_diff*\" files to see if those failures are genuine? \n. It seems to be, the error reporting is intentional, I can see that the change was made by https://github.com/garris/BackstopJS/pull/215 \n@garris @levithomason could you please let us know the rationale behind this change?\n. @garris Thanks for the quick response.\nHow would this 'CLI_SILENT\" be different from 'cliExitOnFail:true'?\nIMHO, can't we just use the same \"debug: true\" flag to report the error stack back? in this way, we may not need to introduce an another config into the system. \n. Yes, i agree with you.\nBut to do so, why can't we use the existing flag called 'debug'? \n. I see. Thanks for the clarification.\n. My web application would have only a few similar components on the same page, but i'm actually making something generic that can be used by other teams in my org. So the number can be any. \n. > like if you wanted to test a logo on a web app with 1000 instances \nI think, something like the comments section where you might see more than one logo.\n\nwhenever a scenario selector matches write an exception to test against the matching selector name.\n\nIn BackstopJS, the selector matches only once, so do you think, it would be better to add the exception script in the BackstopJS?\n. Not a problem @garris I will give you more info\n. Yes, you got it :)\nWe will insert (not appending) a '_n[the order of that class occurrence on the give page]' string in the filename while taking the screenshots, then finally we compare them against the actual reference file and report.\n. @garris May i know if you had a chance to look at this requirement?\n. @garris i think, you might be busy with other stuffs, but it would be great if if you take re-look at it\n. @garris No problem. Thanks for the update\n. @garris thanks for your comments. I will look into it this weekend. \n\nThis PR will add the capability to run tests on many instances of a single selector.\n\nwhat do you mean by 'many instances'? I meant 'many occurrences' of a same element on the given page.\nFor example,\nIf we have a reference screenshot for .author-profile-image , we should be able to compare all the elements (You may not know how many of them beforehand) that have 'author-profile-image' class against the reference screenshot. Right now, its compares only the first one.\nHTML\n<div class=\"author-profile-image\">IMAGE</div>\n<div class=\"author-profile-image\">IMAGE</div>\n<div class=\"author-profile-image\">IMAGE</div>\n. @garris sorry for delaying this. This week, i will try to work on it. \n. > The current implementation has some issues. It appears the the (new) \"expanded\" instances would not handle missing or invisible element test cases in the same way that the (current implementation's) \"fir ....\nI think, we may not need to worry about the hidden/invisible elements because it seems like we are using the static images as screenshots. So it does not matter if those elements are duplicated on the page.\n. > Replace this line...\n\nhttps://github.com/garris/BackstopJS/pull/249/files#diff...\n\nWe cannot use reduce on scenario.selectors because this will not have any of the identical elements. We don't want to ask the developer to mention these similar selectors in there. \n. I can work on making this 'selectorExpansion' as configurable. \n. @garris i've incorporated the suggestion you gave. Actually that's neat and clean! Please let me know if you think that i've miss understood anything. BTW i've tested this feature with single element, multiple similar elements and with ignored elements. Things look fine too me.\n. Yes, sure. I will add that.\n. @garris i've added a simple example folder.\n. \n. @garris If you have any more comments i can take those up in this weekend as i'm free on Sunday.\n. Hi @garris ,\n\nI think you don't need to exclude the hidden selections from reports\n\nWe need this because ..\nhtml\n<div class=\"container\">\n    <input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n    <input class=\"btn btn-primary disabled\" type=\"submit\" value=\"Submit\">\n</div>\nIn this case, there are multiple btn-primary elements, but If i don't want to test the disabled elements on the page, then i would do something like the below in backstop config,\njson\n\"removeSelectors\": [\n     \".container .btn.btn-primary.disabled\"\n],\n\"selectors\": [\n    \".container  .btn.btn-primary\"\n],\nThis 'disabled' elements should not be part of the expanded selector. That's why i need that.\n. Yes, you are absolutely right. \nBut i didn't want to remove as this version is being used by many and it may break.\n. I totally agree that we can add it to this major version\n. @garris Please review https://github.com/garris/BackstopJS/pull/287\n. @tommyno  Is #249 related to your requirement?\n. @tommyno i see. Thanks.\n. Hey @garris my colleague made this, but its a rat! \ud83d\ude04 I've already requested her to make a few more when she gets time.\nYour comments please ... \n\n. Thanks for your quick comments! I will convey the same comments to her \ud83d\ude04 . \n. Ok. \n. @garris sorry i was not available to finish this PR. May i know, why is it closed without any comments, BTW do we have this feature in version 2 already?\n. Thanks for the details, @garris  Yes, i see that you are really really busy!\nDefinitely i would like to work on this and add this feature to our upstream. Yes, please let me know when can i take that up from your new branch. \nYes, all is well! Thanks for asking :)\n. @garris Thanks!  Sure, I will pull in and check that this evening.\n. @garris upgrading to 2.1.3 on node@6.6.0 does break the tests (tests are running fine in backstopjs v1 on node@6.6.0). For now, it seems to be a relative path issue. I will look into it and give you more details\n. @maban Yes, that was the idea. I also could not get this working as of now. \n. Sure. I will take a look at #197 and come back, so that the discussion would make sense.\n. These new filenames are auto generated and users should not get confused with their names, so wanted to let them know explicitly that they are created by backstopJS.\nBut i can change to '_n' and update the README accordingly.\n. @garris I've covered your concern about #197 in this PR. Please review \n. https://dom.spec.whatwg.org/#dom-childnode-remove - i tested this with Backstop v2. it seems to be working\n. This is used to identify the reference image, assume the reference image file name is something like\n..btn-primary_0_desktop.png\nAfter the expansion, it would look like\n..btn-primary__n0__0_0_desktop.png\n..btn-primary__n0__1_0_desktop.png\nOn line number 196, i reset the index to the actual reference file's. So that the script would compare the expanded selectors  against  ..btn-primary_0_desktop.png.\n. Im not sure, how is that -- filter=scenarioId going to work. But if its just used to change the filename like 'configId', 'scenarioLabel' etc, then this selector expansion feature should work just fine.\n. Please explain, what do you mean by template feature?\n. I see, i'll check that\n. ",
    "stevecfischer": "I think the first step is for @ashokkumar to resolve merge conflicts. this pull is behind considerably. What do the rest of you think?. @jtuds - I'm reviewing your pull request. I get the error \nThe package eslint-plugin-promise@2.0.1 does not satisfy its siblings' peerDependencies requirements!\nnpm ERR! peerinvalid Peer eslint-config-standard@6.2.1 wants eslint-plugin-promise@>=3.3.0\nI think you just need to pull from master to fix it?!?. I'd be happy to help. Its the least I could to return the favor.. Is there a thread for priorities or are those discussions going on in Slack. I'm only asking because I have sometime to help out but I'm not sure where to start with sooooooo many PRs ;).. @garris - would you mind adding me to slack channel stevecfischer@gmail.com.. I have a suggestion but it comes with a caveat. Since there already is the capture/config.default.json create a capture/config.default.js and update method to copy the js just like the json file.\nThe caveat is I'm not particularly fond of those \"defaults\" automatically being created as a result of genConfig(). What I'm trying to say is genConfig() is necessary to create the folder structure, but I don't necessarily want these default files when I create new projects. Maybe add a flag to copy examples or some other way to decouple what is required from genConfig() vs what is optional.. @garris - yea your right. I'll run with the idea.. what are the last 5 - 10 lines in the console?. Thanks for that, now can you explain these \"weird js errors\". @jadekler - sorry I just caught the first part of your reply. So that is a screenshot of the console when running your app? Maybe I'm missing something but what do those errors have to do with backstop? . ",
    "prevostc": "@nobso Sure, but I'm leaving on vacation today, I will provide more details by July, sorry for the delay :s\nFrom what I remembered, the report simply did not get generated with the version I'm using, I only added \"CLI\" to the report list.\nI did not fully understand the code either but I needed a quick fix for a work-related project and this test seemed to block the report generation.\nNow that the report is generated on my side, I will have more time to craft you a more detailed scenario, independent from the project that i'm working on.\n. Ok, I'll check that this week, thanks!\n. ",
    "angelariggs": "@garris Yes! Can you clarify what you'd like me to provide? E.g., my config file, or the process I used to set up, or...? \n. I've added .txt versions of my config file (backstopJsConfig.txt) and my Casper file (userLogin.txt). In the config file, I use the userLogin.js in 3 scenarios, as \"onBeforeScript\": \"userLogin.js\". \nbackstopJsConfig.txt\nuserLogin.txt\n. When my config file includes scenarios with custom Casper scripts, and I run the reference or test commands, Backstop starts the screenshots at the second scenario with the Casper script (line 710, \"label\": \"Schrod Downloads Landing Page (TODO: CASPER: LOGIN)\"), and proceeds through the rest of the scenarios to the end of the config file. It skips all of the tests above line 710. When I comment out all of the lines for the Casper script (\"onBeforeScript\" : \"userLogin.js\"), all scenarios run as expected.\nWhen I comment out all scenarios except those with a Casper script (e.g., run references for only the 3 scenarios that use the userLogin.js file), and then run the reference command, Backstop creates only a desktop reference for the 3rd scenario; it doesn't do a mobile reference for that scenario, and it ignores the other two active scenarios.\nWhen I comment out all scenarios except just one scenario with a Casper script, and then run the reference command, Backstop takes only a desktop reference screenshot of that scenario; it does not take the mobile reference screenshot.\n. Ack, yes! Sorry I didn't do that sooner :) New config / comments coming in just a minute!\n. Here's the pared-down, Casper-only version of the config file :) I'm seeing the same issue. When the Casper files are commented out for the scenarios, Backstop works as expected. When the Casper file is included for each scenario, the only reference screenshot is a desktop screenshot for the last scenario. \nI've included a screenshot of my Terminal window, after running the reference command with the Casper files included (top screenshot). The casper.echo code ran 6 times, which is what I would expect for 3 scenarios with 2 viewports each, but that is at odds with the single reference screenshot that actually happened. (I also added a screenshot of my Terminal after running the reference without the Casper script, for comparison; the second screenshot.)\n\n\nbackstop_beta.txt\n. (I'm replying now, but I definitely understand it's the end of your day, and won't expect an answer back tonight \ud83d\ude04  ) The login interaction is successful with the userLogin.js. When I run each scenario separately to test that, the reference screenshot does show the logged-in screen.\n. When I comment out all before scripts except the first scenario, the reference command results in 5 screenshots (not 6 as expected - it skipped the phone viewport for the first scenario). The test command was 'successful' - it also skipped the first scenario's phone viewport screenshot. \nNone of the before scripts worked - all of the screenshots, both reference and test, were of the various page's login screens. I've attached the report summary here. \n\n. (Assuming IOW = in other words) Yes. For instance, when I comment out all before scripts except in the second scenario: the reference command skips both screenshots in the first scenario, does a desktop-only screenshot in the second scenario, and does both screenshots in the last scenario. (EDITED login info: Login is spotty, and can vary between reference and test, and from ref to ref and test to test.) \nI'll work with the lines of code in the before script to see if I can track it down.\n. It's definitely something in the casper.start or casper.fill code. If I just have an echo or a wait, all six scenarios are referenced and tested as expected. If I comment out the casper.wait and casper.echo's, and just have\nmodule.exports = function(casper, scenario, vp) {\n  casper.start('https://schrodinger-staging.metaltoad-sites.com/knownissues', function() {\n    this.fill('form#user-login', {\n      'name': '',\n      'pass': ''\n    }, true);\n  });\n};\nthe issues are still happening. I don't think I can really pare it down further than that. \n. Actually, I did a bit more paring down, to remove the login portion and just have the casper.start, and got the same errors as previously.\nmodule.exports = function(casper, scenario, vp) {\n  casper.start('https://schrodinger-staging.metaltoad-sites.com/knownissues', function() {\n    this.echo('bananas');\n  });\n};\n. I tried that script, and got in Terminal Testing script failed with code: 1. I tried adding a casper.echo before the casper.start, and it didn't get even to that point - just exited with the same Terminal message.\nmodule.exports = function(casper, scenario, vp) {\n  casper.start();\n  casper.thenOpen('https://schrodinger-staging.metaltoad-sites.com/knownissues', function() {\n    this.echo('thenOpen succeeded.');\n  }\n};\nI've attached a screenshot of the Terminal output after running the reference command, in case that helps shed any light. \n\n. I'm having the same issue as @Primajin. Additional info in case it's related: when I run my backstop test command, a config.js file is not getting generated in the backstop_data folder.\n. I had all passing tests, according to the CLI report. \n\n. My report property is \"report\": [\"browser, CLI\"]. The genConfig command did generate the config template, but then I changed the name to prod_backstop.json (and allowed for that when running subsequent commands). \n. Yes! \ud83c\udf89  Was the CLI option just part of 1.x?\n. Woohoo! \ud83d\ude04  Thanks for being so responsive! Enjoy your weekend!\n. Oh okay! Thank you :) I'll close this out.\n. My config file is this (with just a couple of scenarios for a shorter example): \n{\n  \"id\": \"meyer_prod_config\",\n  \"viewports\": [\n    {\n      \"name\": \"desktop\",\n      \"width\": 1200,\n      \"height\": 3000\n    },\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"Item 0: Meyer > Homepage\",\n      \"url\": \"https://mmt.pantheonsite.io/\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1\n    },\n    {\n      \"label\": \"Item 1: Meyer > Trustee Landing Page\",\n      \"url\": \"https://mmt.pantheonsite.io/about/trustees\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1\n    },\n    {\n      \"label\": \"Item 2: Meyer > Trustee: Toya Fick\",\n      \"url\": \"https://mmt.pantheonsite.io/about/trustees/toya-fick\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/prod_reference\",\n    \"bitmaps_test\": \"backstop_data/prod_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/prod_html_report\",\n    \"ci_report\": \"backstop_data/prod_ci_report\"\n  },\n  \"casperFlags\": [\n    \"--ignore-ssl-errors=true\",\n    \"--ssl-protocol=any\"\n  ],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\nSo if I wanted to re-do the references for Item 1, would I technically run backstop reference --configPath=prod_backstop.json --filter=Item 1: Meyer > Trustee Landing Page? (Which would mean I picked terrible labels :) )\n. (Also, I realize that I titled this issue \"... Isn't Working\", but it should really say \"... Isn't Working For Me Yet\" \ud83d\ude04 \n. Success! Thank you \ud83d\ude04  Also, I LOVE the 2.x updates to BackstopJS! It's really helpful for our projects.\n. I like reference over bless; it's more self-explanatory in the context of what the user is doing - running tests, or running references :) \n. I've also run into this issue. I was reading through some issues here, as well as info from the chromy repo. I tried adding some parameters to my config based on the BackstopJS docs, but it's still capturing blank screenshots:\n\"engine\": \"chromy\",\n  \"engineOptions\": {\n    chromeFlags: [\"--ignore-certificate-errors\"]\n  },\nI'm on BackstopJS v3.1.19; Chrome v66.0.3359.139; chromedriver v2.35\nUPDATE: I added \"--allow-insecure-localhost\" to the chromeFlags array per this comment and it worked!. Aha! Ok, let me try putting the script there, and updating the config to \"onBeforeScript\": \"./casper/onBefore.js\".. I'm diving into this a little more. When I change the engine value in config to casper, I'm getting blank screenshots (with or without the onBefore script). I'm seeing Remote Error >    ReferenceError: Can't find variable: Set in terminal, and I think it's referencing a js file (https://dev.site/static/js/main.7c10b502.js).. I see this issue that may be the thing: https://github.com/garris/BackstopJS/issues/187. ",
    "vflirt": "I have very similar issue with pretty much the same casper script for logged in user. My use case is as follows:\n1) I have 2 scenarios \n- Homepage : testing 5 different elements \n- Search box: testing search form only visible for logged in users\n2) I have 3 different viewports\nIf I have only search box scenario with 1 viewport and run the reference I can see the screenshot of the search box.\nIf I have only search box scenario with 3 viewports and run the reference then I get only 1 screenshot for the last viewport instead of all 3.\nIf I have Homepage only scenario and run reference then I get 15 screenshots as expected.\nIf I have Homepage and Search box (in that order) scenarios with 3 viewports and run the reference then I get only 1 screenshot for the search box for the last viewport.\nIf I have Search box and Homepage (in that order) scenarios with 3 viewports and run the reference then I get 16 screenshots : 15 for Homepage and only 1 for Search box for last viewport\nIf I set onBeforeScript for the Searchbox to null then I get 18 screenshots as expected but the screenshots that require login are empty files cause no search box is available for anonymous users.\nIf you want I can send over the config file and the casper script though its code is already posted in the thread above.\nFrom what I can tell it using casper.start kills it but I cannot find any other way to login.\n. I think I found the issue:\n- using phantomjs\n- for every viewport the same onbefore javascript is executed but it keeps the  info form the previous one so for the 2nd viewport it is already logged in which leads to casper failing to fill and submit the form and breaking the whole process.\nAs per my understanding onBeforeScript should run only once no matter the amount of viewports and onReadyScript should run for each viewport but I might have got it wrong.\n. Hi, thank you for the fast response. Running onBeforeScript on every page for every viewport totally makes sense. If we use slimerjs then we have no issues and for every page request for every viewport we have the login form but if we use phantomjs then after the first request we are still logged in on the second viewport so for a workaround we used the casper.exists to check for the form and that made it. \nI don't have the knowledge to say if the session should get passed after the login in the first viewport to the second because that is not the case with slimerjs so might be a bug when dealing with phantomjs or might be how phantomjs is working.\nAgain thanks for the fast response and for finding workaround.\n. Yep, here is my code:\nmodule.exports = function(casper, scenario, vp) {\n  casper.thenOpen(scenario.url, function() {\n    if (this.exists('form#user-login-form')) {\n      casper.fill('form#loginForm', {\n        'name': \"\",\n        'pass': \"\"\n      }, true);\n    }\n  });\n};\n. ",
    "shihao92": "@garris Hi garris. i found that this is not really because of the case of session still login. I did a small experiment which utilize the casper.start on the onBefore.js and the scripts are running fine. (but viewports are required to be defined well at the onReady.js script) \nits just that at the end after the test session, the report module seems to not able to find the image to be compared and it will generate error.. ",
    "kabadesu": "I see. Yeah, it's probably better to get the reporting per example. Perhaps it would be better to split the examples into their own pages for testing and then stitch them all together for viewing on the site anyway.\nThanks very much. You can close this now.\n. The is a good idea. I'll have a go and report back. It may take a wee while.\n. ",
    "dummdidumm": "Mainly the test report integration through \"CI\" .\n. We use backstopJS as a regression / integration test tool for our angular web application. \n- Build showcase for a component\n- Write backstopJS test for that showcase\n- Periodically run tests\nThe last part is integrated with a jenkins-job that is run after a new build of the project. The job is already up and running using the CLI function, but the feedback loop is a bit cumbersome without the CI option: If the job failed, look into the console, identify failures, get failing screenshots, run \"openReport\" on own computer, see diff. The CI option would greatly improve this feedback flow. We also would use the github version of backstopJS but due to limitations we cannot integrate it into our jenkins and therefore have to rely on the npm installation. So unfortunately I cannot give you feedback on the CI option so far.\nRest of the workflow: Easy and intuitive, no errors experienced so far.\n. ",
    "Steven-Pingel": "At least in my case selecting body does not capture the entire page, it cuts off the bottom of the page.\n. ",
    "rjokelai": "Thanks! The document selector indeed works better\n. Oops, accidental close. Probably want to do this in a commit...\n. ",
    "mousemke": "^1.3.2\n. mostly default https://gist.github.com/mousemke/77e08417d3c6b3852481b75d51e89a3c\nbut i've toyed with plenty of options (setting the directories, doing [\"CI\"] only, etc)\n. still the same result.  no ci_report anything (searched whole drive, for the sake of it)\nalso for the sake of it, my package.json script\n\"test:visual:cli\": \"npm run test:visual:clean && cd node_modules/backstopjs/ && npm run test\"\n(clean just removes the archived tests)\n. output (report changed to just \"CI\" for brevity.  no mention of ci, no errors)\n```\n\u279c  backoffice git:(master) \u2717 npm run test:visual:cli\n\nbackoffice@0.0.1 test:visual:cli /Library/WebServer/Documents/backoffice\nnpm run test:visual:clean && cd node_modules/backstopjs/ && npm run test\nbackoffice@0.0.1 test:visual:clean /Library/WebServer/Documents/backoffice\ncd node_modules/backstopjs/ && rm -rf bitmaps_test\nbackstopjs@1.3.2 test /Library/WebServer/Documents/backoffice/node_modules/backstopjs\ngulp test\n\nBackstopJS Config loaded at location /Library/WebServer/Documents/backoffice/backstop.json\n(node:4503) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.\n[18:23:44] Using gulpfile /Library/WebServer/Documents/backoffice/node_modules/backstopjs/gulpfile.js\n[18:23:44] Starting 'init'...\n[18:23:44] Finished 'init' after 90 \u03bcs\n[18:23:44] Starting 'test'...\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[18:23:44] Finished 'test' after 10 ms\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for desktop (1920x1080)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for phone (320x480)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for tablet_v (568x1024)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[18:23:54] Starting 'start'...\n[18:23:55] Finished 'start' after 1 s\n[18:23:55] Starting 'report'...\n[18:23:55] Finished 'report' after 22 \u03bcs\n```\n. seems confirmed\n\n```\n\nbackoffice@0.0.1 test:visual:cli /Library/WebServer/Documents/backoffice\nnpm run test:visual:clean && cd node_modules/backstopjs/ && npm run test\nbackoffice@0.0.1 test:visual:clean /Library/WebServer/Documents/backoffice\ncd node_modules/backstopjs/ && rm -rf bitmaps_test\nbackstopjs@1.3.2 test /Library/WebServer/Documents/backoffice/node_modules/backstopjs\ngulp test\n\nBackstopJS Config loaded at location /Library/WebServer/Documents/backoffice/backstop.json\n(node:5141) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.\n[20:15:06] Using gulpfile /Library/WebServer/Documents/backoffice/node_modules/backstopjs/gulpfile.js\n[20:15:06] Starting 'init'...\n[20:15:06] Finished 'init' after 92 \u03bcs\n[20:15:06] Starting 'test'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[20:15:06] Starting 'bless'...\n[20:15:06] Finished 'bless' after 4.03 ms\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[20:15:06] Finished 'test' after 13 ms\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for desktop (1920x1080)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for phone (320x480)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for tablet_v (568x1024)\nCasperJS: Ready event received.\nCasperJS: Current location is ../../dist/index.html\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\n[20:15:16] Starting 'start'...\n[20:15:17] Finished 'start' after 1.01 s\n[20:15:17] Starting 'report'...\n[20:15:17] Finished 'report' after 12 \u03bcs\n```\ni ran cd node_modules/backstopjs/ && node node_modules/.bin/gulp compare and it seemed to run the task\n```\nBackstopJS Config loaded at location /Library/WebServer/Documents/backoffice/backstop.json\n(node:5847) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.\n[20:32:49] Using gulpfile /Library/WebServer/Documents/backoffice/node_modules/backstopjs/gulpfile.js\n[20:32:49] Starting 'compare'...\n** compare **\n OK: Styla Backoffice 0_0_backoffice_1_phone.png\n OK: Styla Backoffice 0_0_backoffice_2_tablet_v.png\n OK: Styla Backoffice 0_0_backoffice_3_tablet_h.png\n OK: Styla Backoffice 0_0_backoffice_0_desktop.png\n OK: Styla Backoffice 0_1_body_1_phone.png\n OK: Styla Backoffice 0_1_body_2_tablet_v.png\n OK: Styla Backoffice 0_1_body_3_tablet_h.png\n OK: Styla Backoffice 0_1_body_0_desktop.png\nTest completed...\n 8 Passed\n 0 Failed\n```\nthat said, i still dont see the file.  but it might be just using a default config or something\n. that does the trick.  thanks!\n. @nobso @garris no worries!  love to help. \n. just a heads up.  file writing works, but it's still not running the compare task.  as a stop gap measure i'm just using \n\"test:visual:cli\": \"npm run test:visual:clean && cd node_modules/backstopjs/ && npm run test && ../.bin/gulp compare\"\n. Yup. Sorry for no reply. All better! \n. ",
    "stephenbe": "Additional points: the local server runs and it does discover errors when I add CSS.\n. @garris yes, the npm error goes away when there are no mismatches \n\n. Would there a way to create a gulp / grunt plugin to handle the errors more gracefully?\n. That would be perfect, anything to make it seem like it isn't a bug would help the product in my opinion\n. @garris did you have a chance to look at this?\nThanks!\n. Thanks for the replies @garris. I will give you more details soonish! I appreciate it\nOh okay for the referenceUrl, good to know, thank you! :)\n. Hey @garris , \nbackstop_test.zip\nYou can test with this zip.\nIf you do : \nbackstop reference\nThis is what you get : \n\n\n\nThen comment line 2 and 3 of the onReady.js, this is what you get\n\n\n\nI hope this helps, let me know if you need additional info\n. @garris any update on this...? It still doesn't work for me. @garris Thank you for the heads up! Because this is open source, I really don't take your help for granted. I hope there could be a paid version with dedicated support one day! . Update : this seems fixed in the latest version of backstop : 2.7.5\n\n@garris did you do anything to fix this? I checked the changelog and could not see anything mentionning fixing this\n. @garris you do all this for free and I could not thank you enough. \nWe saw the headless Chrome update coming up and we are all very excited! I think it will fix few problems once and for all! Cannot wait! \n\n(I think i'm having too much fun with the bitemogi hahaha). Anyone else in this thread could confirm it's working now so we can close this issue. Okay great, I'll look into it and tell you if it works! \ud83d\ude00 \n. Hey @garris ,\nSo I figured it out, it seems to be working correctly, but once it goes on the second js file, it doesn't switch the url correctly, it stays on the same page.\nHere is my setup : \nMain backstopjs file :\nvar myButtonScenarios = require('./buttons').scenarios;\nvar myFormScenarios = require('./headings').scenarios;\nvar allScenarios = [].concat(myButtonScenarios, myFormScenarios);\n//console.log(allScenarios);\nmodule.exports = {\n  \"viewports\": [\n    {\n      \"name\": \"tablet_h\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  scenarios: allScenarios,\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"compare_data\": \"backstop_data/bitmaps_test/compare.json\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\"\n  },\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\", \"CLI\"],\n  \"debug\": false,\n  \"port\": 3001\n};\nButtons :\n```\nexports.scenarios  = {\n  \"label\": \"Tous les boutons\",\n  \"url\": \"http://localhost:4000/documentation/3.3/composantes.html#boutons\",\n  \"referenceUrl\": \"http://localhost:4000/documentation/3.3/composantes.html#boutons\",\n  \"selectors\": [\n    \"#n3-doc-btn-a .btn-default\",\n    \"#n3-doc-btn-a .btn-primary\",\n    \"#n3-doc-btn-a .btn-primary.btn-block\",\n    \"#n3-doc-btn-a .btn-danger\",\n    \"#n3-doc-btn-a .btn-primary.crochet\",\n    \"#n3-doc-btn-a .btn-primary.cadenas\",\n    \"#n3-doc-btn-a .btn-default.precedent\",\n    \"#n3-doc-btn-a .btn-default.suivant\"\n  ],\n  \"misMatchThreshold\" : 1,\n}\n```\nHeadings\nexports.scenarios  = {\n  \"label\": \"Tous les headings\",\n  \"url\": \"http://localhost:4000/documentation/3.3/composantes.html#typographie\",\n  \"referenceUrl\": \"http://localhost:4000/documentation/3.3/composantes.html#typographie\",\n  \"selectors\": [\n    \"#n3-doc-heading\"\n  ],\n  \"misMatchThreshold\" : 1,\n}\nSo buttons work correctly, but once it switches to headings it stays on the buttons url...\nI tried switched headings and buttons. Headings then worked and then the buttons didn't work anymore so I know it's the url.\nWould you know why this is happening?\n. Yes this is a handbuilt SPA with jQuery, I will take the screenshots won't be long\n. [image redacted]\n[image redacted]\nBoth are exactly the same even though I have two different urls. So when I try to get #n3-doc-heading, it doesn't find it and generates the gray picture.\n. To make sure we are on the same page : \n```\nexports.scenarios1  = {\n  \"label\": \"Tous les boutons\",\n  \"url\": \"http://localhost:4000/documentation/3.3/composantes.html#boutons\",\n  \"referenceUrl\": \"http://localhost:4000/documentation/3.3/composantes.html#boutons\",\n  \"selectors\": [\n    \"body\"\n  ],\n  \"misMatchThreshold\" : 1,\n}\nexports.scenarios2  = {\n  \"label\": \"Tous les headings\",\n  \"url\": \"http://localhost:4000/documentation/3.3/composantes.html#typographie\",\n  \"referenceUrl\": \"http://localhost:4000/documentation/3.3/composantes.html#typographie\",\n  \"selectors\": [\n    \"body\"\n  ],\n  \"misMatchThreshold\" : 1,\n}\n```\nThe result is the same\n. Do you mean a single json config file without the requires?\n. Okay something interesting happened...In the one json config I had two more viewports and on the first one for typographie I got the gray icone and on the second and third it worked. I don't know what this means though.\nI applied the two other viewports to my original backstop.js and it had the exact same behavior. So it seems that it doesn't change at first, but the second and third viewport it works.\n. hahaha yes I agree! so what is the next steps that we need to take? \ud83d\udc4a\n(I appreciate your help very much)\n. Alright sounds good, hey by the way I was thinking of writing up a quick medium post to sum up what I learned on working with multiple config files. I think this could benefit a lot of people that aren't familiar with scripting with node\n. Additionally, I added further tests before switching pages to typographie with a parameter\nhttp://localhost:4000/documentation/3.3/composantes.html?wl=bleh#boutons\nThen typographie first screencapture works for some reason.\n. For my project, now that I use parameters, it works. Anyone that reads this issue could put some ?foobar=true in the url to force the change...I think no further testing is needed...hopefully phantomjs will resolve the problem in the future!\nThanks @garris !\n. I didn't know you could do that with node, thank you I will check it out!\n. For now our team wont explore this option. I will close it, but anyone with the same idea could test this out and re-open the issue\n. I am on the version 2.0.2 on windows 7\nThanks!\n```\nC:\\Projets\\N3\\fwd-webapp-overlay-skin>backstop test --configPath=backstop_data/backstopTests/backstop-light.js\nBackstopJS CWD:  C:\\Projets\\N3\\fwd-webapp-overlay-skin\nBackstopJS loading config:  C:\\Projets\\N3\\fwd-webapp-overlay-skin\\backstop_data\\backstopTests\\backstop-light.js\nCOMMAND | Executing core for test\nRunning CasperJS with:  [ 'C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\capture\\genBitmaps.js' ]\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#boutons\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#typographie\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#typographie\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html#typographie\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#typographie\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#typographie\nCasperJS:  Capturing screenshots for tablet_v (568x1024)\nCasperJS:  Ready event received.\nCasperJS:  Current location is http://localhost:4000/documentation/3.3/composantes.html?touch=true#typographie\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  Comparison config file updated.\nBitmap file generation completed.\nCOMMAND | Executing core for report\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_0_n3-doc-btn-abtn-default_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_0_n3-doc-btn-abtn-default_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_0_n3-doc-btn-abtn-default_2_tablet_h.png\ncompare | OK: Bouton divis\u00e9 01046322484_Bouton_divis_0_dropdown-divise_1_tablet_v.png\ncompare | OK: Bouton divis\u00e9 01046322484_Bouton_divis_0_dropdown-divise_2_tablet_h.png\ncompare | OK: Bouton divis\u00e9 01046322484_Bouton_divis_0_dropdown-divise_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_0_n3-doc-btn-abtn-default_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_0_n3-doc-btn-abtn-default_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_0_n3-doc-btn-abtn-default_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_3_n3-doc-btn-abtn-danger_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_1_n3-doc-btn-abtn-primary_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_2_n3-doc-btn-abtn-primarybtn-block_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_5_n3-doc-btn-abtn-primarycadenas_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_4_n3-doc-btn-abtn-primarycrochet_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_6_n3-doc-btn-abtn-defaultprecedent_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_7_n3-doc-btn-abtn-defaultsuivant_0_phone.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_1_n3-doc-btn-abtn-primary_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_2_n3-doc-btn-abtn-primarybtn-block_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_3_n3-doc-btn-abtn-danger_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_4_n3-doc-btn-abtn-primarycrochet_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_5_n3-doc-btn-abtn-primarycadenas_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_6_n3-doc-btn-abtn-defaultprecedent_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_7_n3-doc-btn-abtn-defaultsuivant_1_tablet_v.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_2_n3-doc-btn-abtn-primarybtn-block_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_1_n3-doc-btn-abtn-primary_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_5_n3-doc-btn-abtn-primarycadenas_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_4_n3-doc-btn-abtn-primarycrochet_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_6_n3-doc-btn-abtn-defaultprecedent_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_7_n3-doc-btn-abtn-defaultsuivant_2_tablet_h.png\ncompare | OK: Tous les boutons 01046322484_Tous_les_boutons_3_n3-doc-btn-abtn-danger_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_1_n3-doc-btn-abtn-primary_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_4_n3-doc-btn-abtn-primarycrochet_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_5_n3-doc-btn-abtn-primarycadenas_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_3_n3-doc-btn-abtn-danger_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_6_n3-doc-btn-abtn-defaultprecedent_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_7_n3-doc-btn-abtn-defaultsuivant_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_1_n3-doc-btn-abtn-primary_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_3_n3-doc-btn-abtn-danger_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_4_n3-doc-btn-abtn-primarycrochet_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_5_n3-doc-btn-abtn-primarycadenas_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_7_n3-doc-btn-abtn-defaultsuivant_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_6_n3-doc-btn-abtn-defaultprecedent_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_1_n3-doc-btn-abtn-primary_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_3_n3-doc-btn-abtn-danger_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_4_n3-doc-btn-abtn-primarycrochet_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_5_n3-doc-btn-abtn-primarycadenas_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_6_n3-doc-btn-abtn-defaultprecedent_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_7_n3-doc-btn-abtn-defaultsuivant_2_tablet_h.png\ncompare | OK: Bouton divis\u00e9 touch 01046322484_Bouton_divis_touch_0_dropdown-divise_0_phone.png\ncompare | OK: Bouton divis\u00e9 touch 01046322484_Bouton_divis_touch_0_dropdown-divise_1_tablet_v.png\ncompare | OK: Bouton divis\u00e9 touch 01046322484_Bouton_divis_touch_0_dropdown-divise_2_tablet_h.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_2_n3-doc-btn-abtn-primarybtn-block_0_phone.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_2_n3-doc-btn-abtn-primarybtn-block_1_tablet_v.png\ncompare | OK: Tous les boutons touch 01046322484_Tous_les_boutons_touch_2_n3-doc-btn-abtn-primarybtn-block_2_tablet_h.png\ncompare | OK: Groupe de boutons 01046322484_Groupe_de_boutons_0_n3-group-vertical_0_phone.png\ncompare | OK: Groupe de boutons 01046322484_Groupe_de_boutons_0_n3-group-vertical_1_tablet_v.png\ncompare | OK: Groupe de boutons 01046322484_Groupe_de_boutons_0_n3-group-vertical_2_tablet_h.png\ncompare | OK: Groupe de boutons touch 01046322484_Groupe_de_boutons_touch_0_n3-group-vertical_0_phone.png\ncompare | OK: Groupe de boutons touch 01046322484_Groupe_de_boutons_touch_0_n3-group-vertical_1_tablet_v.png\ncompare | OK: Groupe de boutons touch 01046322484_Groupe_de_boutons_touch_0_n3-group-vertical_2_tablet_h.png\ncompare | ERROR: Tous les headings 01046322484_Tous_les_headings_0_n3-doc-heading_0_phone.png\n   See: C:\\Projets\\N3\\fwd-webapp-overlay-skin\\backstop_data\\bitmaps_test\\light\\20161004-135045\\failed_diff_01046322484_Tous_les_headings_0_n3-doc-heading_0_phone.png\ncompare | OK: Tous les headings touch 01046322484_Tous_les_headings_touch_0_n3-doc-heading_0_phone.png\ncompare | ERROR: Tous les headings 01046322484_Tous_les_headings_0_n3-doc-heading_1_tablet_v.png\n   See: C:\\Projets\\N3\\fwd-webapp-overlay-skin\\backstop_data\\bitmaps_test\\light\\20161004-135045\\failed_diff_01046322484_Tous_les_headings_0_n3-doc-heading_1_tablet_v.png\ncompare | OK: Tous les headings touch 01046322484_Tous_les_headings_touch_0_n3-doc-heading_1_tablet_v.png\ncompare | ERROR: Tous les headings 01046322484_Tous_les_headings_0_n3-doc-heading_2_tablet_h.png\n   See: C:\\Projets\\N3\\fwd-webapp-overlay-skin\\backstop_data\\bitmaps_test\\light\\20161004-135045\\failed_diff_01046322484_Tous_les_headings_0_n3-doc-heading_2_tablet_h.png\ncompare | OK: Tous les headings touch 01046322484_Tous_les_headings_touch_0_n3-doc-heading_2_tablet_h.png\n report |\n          Test completed...\n report | 63 Passed\n report | 3 Failed\nreport | Writing browser report\n report | Browser reported copied\n report | Copied configuration to: C:\\Projets\\N3\\fwd-webapp-overlay-skin\\backstop_data\\html_report\\config.js\nCOMMAND | Executing core for openReport\nopenReport | Opening report.\n   COMMAND | Command openReport sucessfully executed\n    report |  Mismatch errors found \n    report | For a detailed report run backstop openReport\nCOMMAND | Command report ended with an error\n   COMMAND | Error: Mismatch errors found.\n                 at C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\report.js:110:17\n                 at lib$es6$promise$$internal$$tryCatch (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:362:1\n6)\n                 at lib$es6$promise$$internal$$invokeCallback (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js\n:374:17)\n                 at lib$es6$promise$$internal$$publish (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:345:11\n)\n                 at lib$es6$promise$asap$$flush (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:119:9)\n                 at doNTCallback0 (node.js:417:9)\n                 at process._tickCallback (node.js:346:13)\n   COMMAND | Command test ended with an error\n   COMMAND | Error: Mismatch errors found.\n                 at C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\report.js:110:17\n                 at lib$es6$promise$$internal$$tryCatch (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:362:1\n6)\n                 at lib$es6$promise$$internal$$invokeCallback (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js\n:374:17)\n                 at lib$es6$promise$$internal$$publish (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:345:11\n)\n                 at lib$es6$promise$asap$$flush (C:\\Users\\ddu2949\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\phantomjs-prebuilt\\node_modules\\es6-promise\\dist\\es6-promise.js:119:9)\n                 at doNTCallback0 (node.js:417:9)\n                 at process._tickCallback (node.js:346:13)\nC:\\Projets\\N3\\fwd-webapp-overlay-skin>\n```\n. Will do, give me 5-10 minutes\nAmazing support, thanks @garris I really don't take it for granted!!\n. @garris  I just tested by changing it by hand, and it stills comes with two ../../ extra\n. @fabioduque oh right good point let me try that!. @garris don<t worry, it might be my fault\n. @garris @fabioduque it works!!! Thank you so much! Good teamwork, I agree!\n. Is this issue still relevant?\nI keep getting \nCasperJS:  Fatal: The system cannot find the file specified; did you install slimerjs?\nI installed it with npm install -g slimerjs\n@garris . @garris hmm interestingly, my colleague doesn't have the problem. I will report back with more insight, it might be my computer.\nThanks for the quick reply\n. Hey Garris,\nI sent you an email with the app. My colleague has the same problem, but it takes a bit more than a 1000...I think you might be right about memory...For now we will separate the tasks. \nThank you for your help! Once 281 is fixed, I will be able to give it a shot once more.\n. by the way, I still think this is hands down the best regression tester on the market by far! Thank you for giving us this awesome tool.\n. @garris another idea is instead of chaining commands in the CMD, make it that backstop can  run multiple tasks with a command backstop like gulp.\nWhat do you think?\n. @garris Thanks garris, I never take your help for granted, take all the time you need, but I appreciate that you booked some time just for this one.\nCan you check your mail and download my app, the wetransfer link will expire in 24 hours haha.\n. Thanks @garris ! If you need anything, let me know!! \n. Hey @garris !\nI am so sorry, I did not see your comment above posted 7 days ago. I will test this today and let you know!\nThank you so much!!! BackstopJS is getting better and better, it's exciting! :+1: . @garris I just tested it and it works now!\nThank you so much from the bottom of my heart for this amazing tool and support! I really appreciate and I think I can speak for this community that we all appreciate your hard work. \nThank you! :). Thanks garris, I never thought of using JS for this!\n. @garris holy crap, you use this in LinkedIn??? Do you know if LinkedIn will appropriate the project? Would be awesome having more budget put I to this awesome tool honestly.. let me know please!. @garris thats awesome, I remember they hired the creator of sass to work on sass on LinkedIn, such a great company, congrats !! Them giving you time on this project is the dream of many and it could happen to a better programmer in my opinion, keep working hard!! I believe in backstop..all it needs is a logo haha\ud83d\ude07\ud83d\ude04. Hey @garris  we are having the same error. We are tried installing chrome canary but backstop doesn't seem to find chrome. \nNow we didn't upgrade our backstop yet, but wondering if their is anything we can do for canary\nThanks!. Thanks for the quick reply!\nNo it's going from windows 7 to another windows machine with a different theme. The option actually works when i'm using the phantom, but seems to not work with chrome...could there be any relation with the engine at all?. Okay thank you so much for the detailed answer, i really appreciate it. I'll try stuff on end of things and maybe get back to you with a test case which would be easy for you to test if it's really has to do with engines. \nI'll keep you posted!. ",
    "RickyFullBottle": "@garris If there is a referenceUrl, then shouldn't all the url be set to referenceUrl downstream anyway? Isn't it the same as changing the url to another link that used for running reference?\n. @garris actually maybe a better question would be, is there a case which url should not equal to referenceUrl in referenceUrl is present while generating the reference images? \n. ",
    "cosm1c": "I was wrong - error was in my setup. \n. ",
    "NimaSoroush": "@nobso : What is the status on this issue?. Hi @garris,\nMy first attempt to run this with chromy didn't succeed. Should be node babel issue!\n```x:simpleReactApp daphnebogosian$ npm run build\n\nfirst-webapp-react@1.0.0 build /Users/x/components/y/node_modules/backstopjs/examples/simpleReactApp\nNODE_ENV=production browserify -t [ reactify --es6 ] main.js | uglifyjs > compiled.js && backstop test\n\n/Users/x/components/y/node_modules/chromy/src/index.js:73\n  async start (startingUrl = null) {\n        ^^^^^\nSyntaxError: Unexpected identifier\n    at Object.exports.runInThisContext (vm.js:76:16)\n    at Module._compile (module.js:542:28)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n    at Module.require (module.js:497:17)\n    at require (internal/module.js:20:19)\n    at Object. (/Users/x/components/y/node_modules/backstopjs/core/util/runChromy.js:1:78)\n    at Module._compile (module.js:570:32)\n```\nshould this be fixed by default?. It is in CI mode, so no screenshots on Drone pipeline, but here is the report:\n``\nconsole.log node_modules/backstopjs/core/util/makeConfig.js:39\n      BackstopJS uses a passed object as config\n    console.log node_modules/backstopjs/core/util/logger.js:63\n      COMMAND | Executing core fortest`\n    console.log node_modules/backstopjs/core/util/runCasper.js:31\n  Running CasperJS with:  [ '/drone/src/git.prod.website.local/web-platform/header/node_modules/backstopjs/capture/genBitmaps.js',\n    '--captureConfigFileName=/drone/src/git.prod.website.local/web-platform/header/capture/9b41f8fd00904b1da5077b2502bad7bddd5a07c9.json' ]\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Warning: Accessing PropTypes via the main React package is deprecated, and will be removed in  React v16.0. Use the latest available v15.* prop-types package from npm instead. For info on usage, compatibility, migration and more, see https://fb.me/prop-types-docs\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Ready event received.\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Current location is http://localhost:3000/\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Capturing screenshots for phone (320x480)\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Warning: Accessing PropTypes via the main React package is deprecated, and will be removed in  React v16.0. Use the latest available v15.* prop-types package from npm instead. For info on usage, compatibility, migration and more, see https://fb.me/prop-types-docs\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Ready event received.\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Current location is http://localhost:3000/\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Capturing screenshots for browser (1366x768)\nconsole.log node_modules/backstopjs/core/util/runCasper.js:40\n  CasperJS:  Comparison config file updated.\nconsole.log node_modules/backstopjs/core/util/createBitmaps.js:66\n\n  Bitmap file generation completed.\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  COMMAND | Executing core for `report`\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  compare | OK: Header with default configs prod_test_Header_with_default_configs_0_header-root_0_phone.png\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  compare | ERROR { requireSameDimensions: false size: ok, content: 3.33%, threshold: 0.1% }: Header with default configs prod_test_Header_with_default_configs_0_header-root_1_browser.png\nconsole.log node_modules/backstopjs/core/util/compare/store-failed-diff.js:7\n     See: /drone/src/git.prod.website.local/web-platform/backstop_data/bitmaps_test/20170622-101230/failed_diff_prod_test_Header_with_default_configs_0_header-root_1_browser.png\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | Test completed...\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | 1 Passed\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | 1 Failed\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | Writing jUnit Report\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | Writing browser report\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | jUnit report written to: ../backstop_data/ci_report/xunit.xml\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | Browser reported copied\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n   report | Copied configuration to: /drone/src/git.prod.website.local/web-platform/backstop_data/html_report/config.js\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  COMMAND | Executing core for `openReport`\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  openReport | Opening report.\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n  openReport | An error occured while opening report in the default browser.\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n     COMMAND | Command `openReport` sucessfully executed\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n      report | *** Mismatch errors found ***\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n      report | For a detailed report run `backstop openReport`\n\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n     COMMAND | Command `report` ended with an error\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n     COMMAND | Error: Mismatch errors found.\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/backstopjs/core/command/report.js:113:17\n                   at propagateAslWrapper (/drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:468:23)\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:505:70\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/glue.js:188:31\n                   at propagateAslWrapper (/drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:468:23)\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:505:70\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/glue.js:188:31\n                   at process._tickDomainCallback (internal/process/next_tick.js:129:7)\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n     COMMAND | Command `test` ended with an error\nconsole.log node_modules/backstopjs/core/util/logger.js:63\n     COMMAND | Error: Mismatch errors found.\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/backstopjs/core/command/report.js:113:17\n                   at propagateAslWrapper (/drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:468:23)\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:505:70\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/glue.js:188:31\n                   at propagateAslWrapper (/drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:468:23)\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/index.js:505:70\n                   at /drone/src/git.prod.website.local/web-platform/header/node_modules/async-listener/glue.js:188:31\n                   at process._tickDomainCallback (internal/process/next_tick.js:129:7)\n\n```\nthis exact same test will pass with 800*600 dimentions. Hi @garris: Sorry for not providing enough info, unfortunately, this is all I get from Drone logs!\nI don't think that the problem is the connection to my app as I can increase the width size to a certain amount. The latest one that passed was \n...\nviewports: [\n    {\n      name: 'browser',\n      width: 800,\n      height: 1240,\n    },\n  ],\n...\nI am planning to debug this in local Drone and collect more logs/screenshots. Will update this issue when I have more info. ",
    "adamorlowskipoland": "@nobso I follow up the @NimaSoroush  question.\nCan we count on it?. ",
    "greaveselliott": "Did work on this integration ever start?. ",
    "nsp27": "Is this being worked on? connecting backstopjs with saucelabs. I am using backstop version 3.8.5 and running with puppeteer headless in my enterprise docker. Test runs absolutely fine and also create difference in backstop_data with the time stamp also prints the difference in the console however html report dont get generated.  Any thought would really be appreciated? Thanks. Thanks for your response. I figured out the reason. I am using puppeteer and i wrote custom scripts in Onready. I put additional wrapper of exporting engine and it worked for me. Now I am able to generate the html  report and custom junit report in each run.\nmodule.exports = function (engine, scenario, vp) {\n  module.exports = async (page, scenario, vp) => {\n  console.log('SCENARIO > ' + scenario.label);\n  await require('./puppet/clickAndHoverHelper')(page, scenario);\n// Example: changing behavior based on config values\n  page.evaluate(() => {\n    document.querySelector(\"button[onclick='themeClickSkyBlue()']\").click();\n  });\n};\n// add more stuff here...\n};. Here is the structure:-\n\nDefault\nGray Theme\nSky-Blue Theme\nBlue Theme\nNavy Theme\n\n. Hi Garris,\njust to update on this,\nI am able to target the element with below expression correctly\n\"Selectors\":[\n        '.row mt-4 mb-4 div:nth-of-type(2)',\n        '.col-sm-12 button:nth-of-type(3)']\nBut when I am writing below expression in order to click:-\n\"clickSelectors\":[\n        '.row mt-4 mb-4 div:nth-of-type(2)',\n        '.col-sm-12 button:nth-of-type(3)'],\nthen it does not work.\n\"label\": \"accordion sky blue\",\n      \"url\": \"\",\n  \"selectorExpansion\": true,\n\n  \"clickSelectors\":[\n    '.row mt-4 mb-4 div:nth-of-type(2)',\n    '.col-sm-12 button:nth-of-type(3)'],\n  \"delay\": 3000,\n  \"postInteractionWait\": 200,\n\n  \"misMatchThreshold\": 5,\n  \"onBeforeScript\": \"onBefore.js\",\n  \"onReadyScript\": \"onReady.js\". Same question I have, I wrote custom script in onReady script and it is doing multiple clicks on different element. It is taking screenshot for the last action. I want to take screenshot after each click.. Just wanted to update that I got that issue while launching a physical browser and launched it headlessly, using browser-sync and then was able to run backstop test. Here are my parameters for backstop json.\n\n\"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"slowMo\": 500,\n    \"args\": [\n      \"--no-sandbox\",\n      \"--disable-setuid-sandbox\",\n      \"--disable-gpu\",\n      \"--force-device-scale-factor=1\",\n      \"--disable-infobars=true\",\n      \"--hide-scrollbars\",\n      \"--disable-dev-shm-usage\",\n      \"--shm-size 512mb\",\n      \"--cap-add=SYS_ADMIN\"\n    ]\n  },\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false. Below is my custom scripts for On Ready. I am taking screenshot iterating multiple themes. However, my screenshots are getting captured in \"Screenshots\" folder in the root of the workspace and I am not able to merge it with backstop_data. I want to save screenshots for different themes in backstop_data folder :-\nmodule.exports = function (engine, scenarios, themes, vp) {\n themes = [\n\n  {\n    'name' : 'Gray theme',\n    'theme' : \"button[onclick='themeClickGray()']\"\n\n  },\n  {\n    'name' : 'Skyblue theme',\n    'theme' : \"button[onclick='themeClickSkyBlue()']\"\n\n  },\n  {\n    'name' : 'Blue theme',\n    'theme' : \"button[onclick='themeClickBlue()']\"\n\n  },\n  {\n    'name' : 'Navy theme',\n    'theme' : \"button[onclick='themeClickNavy()']\"\n\n  },\n\n];\n\n\n\ncasper.each(themes,function(casper,theme){\n  this.then(function(){\n\n\n    this.echo ('screenshot for '+ theme.name + scenarios.label + vp.label);\n    this.click(theme.theme);\n\n    this.captureSelector('Screenshots/' + scenarios.label + vp.label +theme.name + '.png','#themePage');\n\n\n  })\n\n\n})\n\n. ",
    "Craignewkirk": "Hopefully saving some headaches here.\nWe were using Backstop for visual regression testing and then moved to Gemini for testing in Sauce Labs.  \nIt wasn\u2019t great.  \nDue to being in the cloud, there was no guarantee that the hardware the images were rendered on initially would be the same hardware that the tests would be run on.\nAs a result, our tests would never pass.  Turns out different graphics cards render fonts differently.\nThis rendering caused a ton of small shifts in the testing screenshot.  \nWe tried lowering the threshhold, however to get it low enough that the tests passed made visual regression testing almost pointless for our purposes (developing a front end framework).\nThis was last year, so maybe Sauce now has developed a way (or already had a way I didn\u2019t find) to guarantee your tests run on the same hardware config if not the same machine.\nJust putting this out there if someone takes this up.  We loved Backstop.  The only reason we switched was for the Sauce Labs integration.\nBonus info:  apparently advertisers have used the minute changes in font renderings to detect people\u2019s machine specs.. ",
    "brianyang": "npm version 3.9.3\nnode version 6.2.1\n. ",
    "patriciamarchand": "I have the same issue. \nnpm version 3.9.5\nnode version 6.2.2\n. It seems that it was a problem with my development environment because I already had the fs module loaded (\"fs\": \"0.0.2\"). Once I removed that module, everything was working again.\n. I think you can modify in the backstop.json file, line \"report\": [\"browser\", \"CLI\"]  to  \"report\": [\"CLI\"]\n. Him : windows 7 6.1, \nMe : windows server 2008 R2 6.1, primary (i am on the windows classic theme)\nI dont know if it could have an impact but my primary browser is Firefox and his primary browser is Chrome...\n. Ok, I was thinking the native element were generated by the browser and with phantomJs it will be agnostic. \n. We will definitively try that, but at short term we add a specific css add only when I run Backstop Test to \"hide\" and colorize these native component. \n. I try backstop reference --configPath=backstop_data/backstopTests/backstop-light.js --filter=Boutons. The filter allows me to run only the scenario Buttons (primary, defalut, disabled, danger, etc...). But all the references of this scenario changes even if only one component button change.\nI try also backstop reference --configPath=backstop_data/backstopTests/backstop-light.js --i and all the references are recreated. It just doesn't empty the folder first. Is it supposed to keep all the references and add an increment at the end of the file name?\n. Thanks for the suggestion@klausbayrhamme, I will try with a shared virtual machine. \n. Thank, I will let you know the solution if I find one. Maybe add in the documentation a note about the  difference (apparence windows setting, radio button, scrollbar...) if we use different environnement. I'm sure it could be usefull for other in a situation like mine.. Super I realy need to migrate to Chrome my tests in the near future. I finally managed to install version 3.0.7 but I hit some problems during the process.\nThe Sharp module does not want to install properly. The first error was related to SDK windows version. So I installed the required version 8.1 . https://developer.microsoft.com/en-us/windows/downloads/windows-8-1-sdk\nAfter that,  I still had an issue with the same module Sharp :\nTRACKER : error TRK0005: Failed to locate: \"CL.exe\". The system cannot find the file specified. ...\\sharp\\build\\libvips-cpp.vcxproj. \nI found this issue (https://github.com/lovell/sharp/issues/341) and follow the solution \"\u2026manually installed Visual C++.  https://msdn.microsoft.com/en-IN/library/60k1461a.aspx\"\nI post it if it could help someone. . @garris Ok then, I will be carefull when I will update the reference. I'm also migrate to Bootstrap 4 so I dont have the choice to pass to Chrome engine who support flexBox grid. \nThe other issue, still on it. Takes longer due to holidays...\nThanks . @bb-ceccles I had the same problem due to minimal change differences in the comparisons. I think is browser rendering related #487.\nI will try also to install again Backstop on a new machine as soon as I can. . I can access other selector with that technique but not this tooltip. maybe It's because it doesn't exist in the dom before hover?. I try  my test in a very light template with just Jquery and Bootstrap. https://codepen.io/simplementpatricia/pen/NMvZyW \nI add in my test wait('SELECTORNAME'). I reach the timeout. \nThanks for your input. I will just postphone this test.\nif (clickSelector) {\n    chromy\n      .wait(clickSelector)\n      .click(clickSelector)\n      .wait('#monTooltipLink + .tooltip');\n  }. Hello, \njust an update on this one. I try the basic Bootstrap outline button and I think it's related with the width of the element. These elements have width with decimal. Ex : 79.65px \nI dont know how to resolve this. I try different value for Chrome flag '--force-device-scale-factor=1' \nelement in browser\n\nCapture element with Backstop\n\n. I found the problem. This was related to puppeter version. In my package.json lock I had the version 1.11.0 of puppeteer. I remove the package.json.lock and the most recent version of puppeteer (v.1.13) is now install.. Hello,\nI would like to try this to fix a problem i have. But i dont understand where use the \"puppeteerOffscreenCaptureFix\". ",
    "melissamcewen": "Gulp chug worked great! Thanks everyone!\n. Thanks yes, I set one up, but when I run gulp reference it looks for a .json one\n. ```\nadmins-mbp:backstopjs mmcewen$ gulp reference\nConfig file not found.\n$ npm run genConfig generates a handy configuration boilerplate file at: /Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/backstop.json. (Will overwrite existing files.)\n[14:03:36] Using gulpfile ~/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/node_modules/backstopjs/gulpfile.js\n[14:03:36] Starting 'clean'...\nbitmaps_reference was cleaned.\n[14:03:36] Starting 'bless'...\n[14:03:36] Finished 'bless' after 2.83 ms\n[14:03:36] Finished 'clean' after 24 ms\n[14:03:36] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[14:03:36] Starting 'init'...\n[14:03:36] Finished 'init' after 8.08 \u03bcs\n[14:03:36] Starting 'test'...\nGenerating reference files.\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[14:03:36] Finished 'test' after 8.17 ms\nreference has run.\n[14:03:36] Finished 'reference' after 9.96 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS: Clicking button\nCasperJS: Clicking button\nCasperJS: Clicking button\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: onReady.js\nCasperJS: remote console > This custom script is running inside your web app!\nCasperJS: This custom script is running inside your web app!\nremote console > Add your own casper commands here to simulate user interacions or logging in.\nAdd your own casper commands here to simulate user interacions or logging in.\nCasperJS: Screenshots for phone (320x480)\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: onReady.js\nCasperJS: remote console > This custom script is running inside your web app!\nCasperJS: This custom script is running inside your web app!\nremote console > Add your own casper commands here to simulate user interacions or logging in.\nAdd your own casper commands here to simulate user interacions or logging in.\nCasperJS: Screenshots for tablet_v (568x1024)\nCasperJS: Ready event received.\nCasperJS: Current location is http://getbootstrap.com\nCasperJS: onReady.js\nCasperJS: remote console > This custom script is running inside your web app!\nCasperJS: This custom script is running inside your web app!\nremote console > Add your own casper commands here to simulate user interacions or logging in.\nCasperJS: Add your own casper commands here to simulate user interacions or logging in.\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Comparison config file updated.\nBitmap file generation completed.\nRun $ npm run test to generate diff report.\n```\n. I don't see anything looking for a js config file in gulp or a way to pipe in that\n. Thanks, when I run on the command line I don't have a problem, it's running through gulp where the flag doesn't seem recognized or available.\ngulp reference --configPath=/Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/test.js\n[14:39:39] Using gulpfile ~/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/gulpfile.js\n[14:39:39] Starting 'reference'...\n[14:39:39] Finished 'reference' after 7.55 ms\n[gulp-chug] File is a buffer. Need to write buffer to temp file...\n[gulp-chug] Writing buffer to node_modules/backstopjs/gulpfile.tmp.1470166779904.js...\n[gulp-chug] Spawning process /Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/node_modules/backstopjs/node_modules/gulp/bin/gulp.js with args /Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/node_modules/backstopjs/node_modules/gulp/bin/gulp.js --gulpfile gulpfile.tmp.1470166779904.js reference from directory /Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/node_modules/backstopjs...\n[gulp-chug] (node_modules/backstopjs/gulpfile.tmp.1470166779904.js) \nConfig file not found.\n[gulp-chug] (node_modules/backstopjs/gulpfile.tmp.1470166779904.js) \n`$ npm run genConfig` generates a handy configuration boilerplate file at: `/Users/mmcewen/Sites/AMA-Corporate-site/docroot/sites/all/themes/ama_theme/backstop.json`. (Will overwrite existing files.)\n. I'll try that, thanks!\n. ",
    "JackZhang1988": "@garris my node is 4.0.0 and npm is 3.8.8\n. ",
    "svwu": "I guess you brought problems with this update...\nWhen I install BackstopJS, I get the following error:\n/backstop/node_modules/backstopjs/node_modules/gulp/node_modules/gulp-util/node_modules/array-differ/index.js:2\nmodule.exports = (arr, ...values) => {\n^\nSyntaxError: Unexpected token .\nat Module._compile (module.js:439:25)\nat Object.Module._extensions..js (module.js:474:10)\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\nat Module.require (module.js:364:17)\nat require (module.js:380:17)\n. Oh yeah...\nThe new version of BackstopJS also required an update for my NodeJS and NPM version.\nSorry for this issues, my bad...\n. I changed my config file to \"CLI\" only and still get this message:\nServer launched in background with PID: 22030\nListening on port: 3001\nNOTE: Sever will auto-shutdown in 15 mins.\n. Well it's not a big impact, but it's unnecessary to start a process, when it's not needed...\n. I've made an Pull Request for this Issue:\n[(https://github.com/garris/BackstopJS/pull/252)]\n@garris can you please review? I may need this feature pretty quick...\nSorry for the inconvenience ...\n. Did you check the paths in your config file?\nThey're relative and may used dirs?\n. There is some output missing like:\nCasperJS: Ready event received.\nCasperJS: Current location is http://google.de\nCasperJS: Screenshots for phone (480x480)\nCasperJS: Ready event received.\nCasperJS: Current location is http://google.de\nCasperJS: Screenshots for tablet_v (768x1024)\nCasperJS: Ready event received.\nCasperJS: Current location is http://google.de\nCasperJS: Screenshots for tablet_h (1024x768)\nCasperJS: Ready event received.\nCasperJS: Current location is http://google.de\nCasperJS: Screenshots for desktop (1280x768)\nCasperJS: Comparison config file updated.\n. Can you try to use the gulp task and check if there is any difference in behaviour?\nJust use\ngulp reference\ninstead of \nnpm run reference\n. I used your config and test it on my own.\nIt works fine...\nSo it's the baddest answer I can give is \"It works for me!\"\nI would like to debug with you, as I did it many times to find errors.\n. Do you have gitter?\n. It seems to be a general problem...\nI'll try with a vanilla install at home to reproduce the error.\nWhen I get it reproduced, I can find my own way to debug it. \nI guess I will recall on you when it's not reproduced at my vanilla install.\nI'll let you know when I found out something!\n. @garris \nHow do you think about Auth via command line?\nI've seen that gulp isn't supported anymore. \nI would rewrite auth via command line for npm, if you're interested. \nWe need this feature and waiting for an \"official\" Solution, which is supported, not to code it everytime new...\nBest, \nSven\n. It sounds great! As my answer comes a bit late, I'm busy atm and guess I'll have time about beginning next month..\n. This is an old version, please have a look to this pullrequest:\nhttps://github.com/garris/BackstopJS/pull/327\n. Hello @garris,\nCan you please have a short review?\nThanks!. Hello @garris ,\nwe really strongly do need this authentification for our development, as we aim for tests on different servers with different authentifications.\nCan you please find some minutes to review?\nThanks!. Hello @garris ,\nI had to do a change, because of the usage of the backstop command instead of npm run [task]\nMy Pull Request can be found at: https://github.com/garris/BackstopJS/pull/373\nBest,\nSven. That would be awesome, cause I don't know how parallel tests on the same machine would behaviour . The idea behind parallel processes doesn't work 100%, cause I'll get same hashes on two different processes (with the same config, which would be a use-case, too). Maybe you add a timestamp to hash?\nAnd also the new config remains in the temp folder. It would be better if it will be deleted afterwards.. I've updated my comment, some minutes before you submitted your comment. \nYes, you're definatly right, that it works. But It's not working if you run the same config. \nBut the situation could be, that we have a onBeforeScript, multiple viewports and multiple scenarios. If the test lasts longer but another user wants to run the same config on the same server, it wouldn't work.\nSo maybe we simple add a timestamp to the value which will be hashed?. backstop genConfig\nbefore I start the test.\nbackstop test --user=\"test\" --password=\"test\"\nof two different cmds. The Error I get (in Windows) on the second process:\nCOMMAND | Error: Cannot find module 'C:\\Users\\sven\\AppData\\Local\\Temp\\117018-11436-ayglre.json'\n              at Function.Module._resolveFilename (module.js:336:15)\n              at Function.Module._load (module.js:278:25)\n              at Module.require (module.js:365:17)\n              at require (module.js:384:17)\n              at module.exports (C:\\Users\\sven\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\util\\compare.js:48:23)\n              at Object.module.exports.execute (C:\\Users\\sven\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\report.js:97:12)\n              at Object.execute [as report] (C:\\Users\\sven\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\index.js:49:49)\n              at execute (C:\\Users\\sven\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\index.js:94:31)\n              at C:\\Users\\sven\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\test.js:9:14\n              at runMicrotasksCallback (node.js:337:7)\n              at process._tickCallback (node.js:355:11)\nIf I restart the process without any other process, there is no error shown.\nI check Ubuntu, too. . I can't guarantee that I'm the only one who executes tests on our server or maybe the same test. As I built a webinterface, I would like that it won't affect other people running on the same server tests. \nThis is my use case starting these tests during development before any commit or for users who just test without doing any code changes, to check that we won't have any regression.\nYou're completly right that in CI this is not an use case.. Yes, will do!\nThese are the actual files which caused the problems!\nIf you check my error message there was an error because of the file \"117018-11436-ayglre.json\".\nit wasn't the actual hashed file, it was the temp file you've found. Sorry for the delay, had personal issues to sort.\nI reviewed the new change and it works fine, I get differente hashes for the two processes and they won't throw any error.\n. Forget it!\nI didn't knew it's allready supported! :)\nNot as I expected, but I can work with the current state. There is nothing to rebase as I forked and checked out vanilla.. I rebased my old fork. and solved all conflicts.. Hello @garris ,\nYes, it works great now! \nSomehow I won't get the update on backstop@beta, I had to install backstop@2.3.7.\nBut it works! :)\nThank you!. @garris \nyou've created an awesome tool, which provides a great service!\nI would like to help, too!. What do you think about Slack?\nWe could open a chat to make communication better :). I was free to create a Team Channel.\nCan invite and also set permission.\nYou're right to keep the comments (or at least the main interesting facts in conversations related to PR or Issues) in here, but for conversation it's a very good use :)\nbackstopjs.slack.com\n. The only Option I can choose are:\n - Invitation only\n - Any email address from these domains. I'm totaly up for chromy!\nIt seems to be not too hard to change to it.\nWould also go for WebDriver, but that's a far away vision, isn't it?. From the line 75 to 78, I don't know why you save config.tempCompareConfigFileName in a var, set the config.tempCompareConfigFileName to '' and set it back to the var?. It's now my own opinion speaking (you may see it in a different way):\nbut why do we need the temporary config after the test? Cause we allready got the config file. It's not a great deal to generate a temporary file again. \nIt's just a waste of space, if we're about to run multiple tests as we got many different settings, we get a huge load of files. So why we won't keep it really temporary, as the filename intends and delete after the execution? With the hashed value the timestamp and the config, we guarantee that we only use the temporary file as long as the test will be executed and it won't remains dead on our temp directory. \nAn automatically garbage collection of our temporary testfiles would be nice.. ",
    "jairusnativecommerce": "Hey garris,\nThanks for the fast response, yes they are using user-agent rule i think.\nthey said they just added \" if code\" on their end to make the tool work.\nif ($http_user_agent ~* \"PhantomJS\" ) {\nbreak;\n}\nThank you very much\n. this is already solved sir, yes using version 2 beta.. it was the disk space in server that was full and it would hang up.. is there a way we can change png into jpg? png takes a lot of space specially we have a lot of site tested using backstopjs with multiple screen resolution configuration. thank you\n. ",
    "mig-25": "The test failures are genuine as they are supposed to after altering the css. But I am wondering, why is not launching the browser in my mac but spins upp the Windows virtual machine and starts chrome there but fails to load the page of course. Typing in the url on mac in safari doesn't load the page either. \nBut if I manually launch file:///Users/sohail/GitHub/test/node_modules/backstopjs/compare/index.html\nthe report shows up with the proper tests failing.\n. The strange thing is that it used to at least run the page if I did npm start and npm run openReport, but npm run test would also launch the windows virtual machine on my mac.\nThen I checked and found out that Browsersync is already running on http://localhost:3001\n. I restarted my machine, now at least http://localhost:3001/compare/ is launching.\nBut both the commands:\nnom run test\nand\nnpm run openReport\nlaunches the windows virtual machine on my mac\n. But I have exactly the same code in my openReport.js file. I still starts the windows VM when executing npm run test\n\n31 aug. 2016 kl. 00:34 skrev Nathan Mynarcik notifications@github.com:\n@mig-25 https://github.com/mig-25 I had this issue too, where Parallels would launch. To fix this, I pasted the full path to Google Chrome here: https://github.com/garris/BackstopJS/blob/master/gulp/tasks/openReport.js#L18 https://github.com/garris/BackstopJS/blob/master/gulp/tasks/openReport.js#L18\nI don't think this is a backstop issue as much as a OSX/VM issue.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/273#issuecomment-243603199, or mute the thread https://github.com/notifications/unsubscribe-auth/AGyTLImGYVEgaC4JEPyUW91wgc-BCCVXks5qlK_4gaJpZM4JuvVX.\n. Sure:\n\nvar options = {\n    url: paths.compareReportURL\n    ,app: isWin ? \"chrome\" : \"Google Chrome\"\n  };\n\n31 aug. 2016 kl. 21:48 skrev Nathan Mynarcik notifications@github.com:\n@mig-25 https://github.com/mig-25 can you paste your line 18 of openReport.js?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/273#issuecomment-243879262, or mute the thread https://github.com/notifications/unsubscribe-auth/AGyTLCYr2dfiBlNEeOuKUxBco26D4FY0ks5qldqXgaJpZM4JuvVX.\n. That worked out fine, even though the Google Chrome.app is located in Program folder but could because I am running a Swedish OS maybe. \n\nThanks a lot :)\n\n31 aug. 2016 kl. 21:56 skrev Nathan Mynarcik notifications@github.com:\nCan you try:\nvar options = {\n    url: paths.compareReportURL\n    ,app: isWin ? \"chrome\" : \"/Applications/Google Chrome.app\"\n  };\nChange the path of Google Chrome if it is different.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/273#issuecomment-243881439, or mute the thread https://github.com/notifications/unsubscribe-auth/AGyTLJHgGG5GX88CHyaXdvZKKk_qKnsJks5qldx_gaJpZM4JuvVX.\n. Even though the test is running fine and the page launches in OS X I get an error in my terminal after the following:\n\nTesting with  ../../backstop_data/bitmaps_test/compare.json\nOpening report ->  http://localhost:3001/compare/\n[22:47:07] Finished 'openReport' after 13 ms\nnpm ERR! Darwin 15.6.0\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"run\" \"test\"\nnpm ERR! node v6.4.0\nnpm ERR! npm  v3.10.3\nnpm ERR! code ELIFECYCLE\nnpm ERR! backstopjs@1.3.5 test: gulp test\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the backstopjs@1.3.5 test script 'gulp test'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the backstopjs package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp test\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs backstopjs\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls backstopjs\nnpm ERR! There is likely additional logging output above.\nnpm WARN Local package.json exists, but node_modules missing, did you mean to install?\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/sohail/GitHub/myCoolProject/node_modules/backstopjs/npm-debug.log\n\n31 aug. 2016 kl. 22:36 skrev Nathan Mynarcik notifications@github.com:\n\ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/273#issuecomment-243892878, or mute the thread https://github.com/notifications/unsubscribe-auth/AGyTLAtMAv4bMiLQfjpWHO-4omPZaRH9ks5qleXCgaJpZM4JuvVX.\n. I do understand that the css-tricks-article is outdated, but I have followed the instructions on the github page and used the new commands and got the missmatch errors. \nAnd I also installed backstopjs globally and tested in two different projects with folder structures.\nAnd I really do appreciate all the effort you have  put into this project.. I followed the same project structure as the one suggested the CSS-Tricks article https://css-tricks.com/automating-css-regression-testing/ site, even though I used the backstop init command directly from root.\nThose settings:\n\npkill -f \"(chrome)?(--headless)\"\ncan I directly run them from the command line? I did a new a global install again and got the following when I run backstop test:\n5cg7095d27:myCoolProject sohail$ npm install -g backstopjs\n/usr/local/bin/backstop -> /usr/local/lib/node_modules/backstopjs/cli/index.js\n+ backstopjs@3.0.37\nadded 1 package and updated 3 packages in 9.869s\n5cg7095d27:myCoolProject sohail$ backstop test\nBackstopJS v3.0.37\nLoading config:  /Users/sohail/Desktop/myCoolProject/backstop.json\nCOMMAND | Executing core for test\ncreateBitmaps | Selected 1 of 1 scenarios.\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disa\nble-infobars=true\",\"--window-size=320,480\"],\"port\":9222,\"waitTimeout\":30000,\"visible\":fa\nlse}Cookie state restored with: []\nSCENARIO > My Local Test\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disa\nble-infobars=true\",\"--window-size=1024,768\"],\"port\":9223,\"waitTimeout\":30000,\"visible\":false}\nCookie state restored with: []\nSCENARIO > My Local Test\n9222 Chrome v63 detected.\n9223 Chrome v63 detected.\n      COMMAND | Executing core for report\n      compare | Chromy error: GotoTimeoutError. See scenario \u2013 My Local Test (phone)\n      compare | Chromy error: GotoTimeoutError. See scenario \u2013 My Local Test (tablet)\n       report | Test completed...\n       report | 0 Passed\n       report | 2 Failed\n       report | Writing browser report\n       report | Browser reported copied\n       report | Copied configuration to: /Users/sohail/Desktop/myCoolProject/backstop_data/html_report/config.js\n      COMMAND | Executing core for openReport\n   openReport | Opening report.\n       report |  Mismatch errors found \n      COMMAND | Command report ended with an error after [0.088s]\n      COMMAND | Error: Mismatch errors found.\n                    at /usr/local/lib/node_modules/backstopjs/core/command/report.js:113:17\n                    at \n      COMMAND | Command test ended with an error after [31.619s]\n      COMMAND | Error: Mismatch errors found.\n                    at /usr/local/lib/node_modules/backstopjs/core/command/report.js:113:17\n                    at \n\n4 jan. 2018 kl. 18:10 skrev Garris notifications@github.com:\npkill -f \"(chrome)?(--headless)\"\n\n. Sorry, Nothing wrong on your side, my bad, it was a path error in the url setting. I tested it out on the same project as on the CSS-Tricks article https://css-tricks.com/automating-css-regression-testing/ page. But I changed the url path, as this time I ran the backstop init on the root and the index.html is on the root of that project.\nThanks for your help :)\n\n4 jan. 2018 kl. 18:10 skrev Garris notifications@github.com:\nI just had a thought. Did you try running pkill -f \"(chrome)?(--headless)\"\nThat would insure there are no zombie versions of chrome running (which can sometimes happen and cause weird failures). Maybe that helps?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/626#issuecomment-355340766, or mute the thread https://github.com/notifications/unsubscribe-auth/AGyTLHa44SO_0TkvSczOTbces8RAUl4Kks5tHQYigaJpZM4RSuD_.\n\n\n. ",
    "disophisis": "I am having this same problem on Windows 8.  Any updates on this?\n. Ah You reminded me.  Yesterday I did manage to write a simple script using slimerjs and casperjs separate from this.  It seemed to work just fine (and slimerjs rendered my web app nicely which is why I'm trying to stick with it;  otherwise I'd just use phantomjs)\n. ```\nC:\\backstop>backstop reference\nBackstopJS CWD:  C:\\backstop\nBackstopJS loading config:  C:\\backstop\\backstop.json\nCOMMAND | Executing core for reference\n  clean | bitmaps_reference was cleaned.\nRunning CasperJS with:  [ 'C:\\Users\\i65414\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\capture\\genBitmaps.js',\n  '--engine=slimerjs' ]\nBitmap file generation completed.\nRun $ backstop test to generate diff report.\nCOMMAND | Command reference sucessfully executed\nC:\\backstop>\n```\nIt will stop at the \"Running CasperJS\" step and open the slimerjs window I pasted in the OP.  Once that is closed the rest of the console output is displayed, stating it's successful, but there are no screenshots taken.  (It completes very quickly)\n. No prob thank you for taking the time to look at this.\n{\n  \"id\": \"dev\",\n  \"viewports\": [\n    {\n      \"name\": \"desktop\",\n      \"width\": 1920,\n      \"height\": 1080\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"Dev Create User\",\n      \"url\": \"http://localhost:8000/src\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\"document\"],\n      \"readyEvent\": null,\n      \"delay\": 10000,\n      \"misMatchThreshold\" : 0.1,\n      \"onBeforeScript\": \"C:/backstop/backstop_data/casper_scripts/onBefore.js\",\n      \"onReadyScript\": \"C:/backstop/backstop_data/casper_scripts/onReady.js\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"C:/backstop/backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"C:/backstop/backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"C:/backstop/backstop_data/casper_scripts\",\n    \"html_report\": \"C:/backstop/backstop_data/html_report\",\n    \"ci_report\": \"C:/backstop/backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"slimerjs\",\n  \"report\": [\"browser\"],\n  \"debug\": true\n}\nAs you can see I just went ahead and made all paths absolute.\n. Yeah and that's what's kind of annoying... Phantom works great, but phantom has major issues rendering our web app for some reason.\n. I've been running it with the debug property set to true in the config, which if I'm reading genBitmaps.js correctly, should be setting casper's verbose mode to true as well.  Is there another place I can get access to more logging?  Because even with verbose on what I've pasted above is all I get. (or maybe there's a log somewhere?)\n. Hmm yeah I updated to 2.05 (hopefully that is the latest version) and it doesn't seem to have changed my output at all.  The original terminal output above is still what I'm seeing. \n. ",
    "natalan": "Closing this PR to reopen on a different branch\n. Thanks @garris all set here. It is working as expected.\n. ",
    "onigoetz": "By the way, we already changed the default file name in this new branch : https://github.com/onigoetz/BackstopJS/blob/1f8d7a6c95264dbf5f95fbf5d37c6bacf5405413/capture/genBitmaps.js#L173\nWe use the label of a scenario to generate the name and not the scenario's index.\n. Well, this is great because I opened a pull request that does this : #259 An offline report and some other improvements.\nThis is currently work in Progress, but works well already.\n. Closed as the pull request will be merged soon :D \n. I'm not sure that closing the pull request was you goal, or was it ? :)\n. Oh great, I didn't see that one.\nBut how will I be able to push more changes to it ? I have still some changes to make before this PR is completely ready for merge.\nAnd what is your intention with the three branches version_2_0,  version_2_0_onigoetz and version_2_0_pradet ? \nMy work being based on what Julien Pradet made in #241 I don't think this should be reviewed separately.\n. It's not mandatory to make a global install, you can add it as a dependency in a project, then then the backstop command is linked in node_modules/.bin/backstop\nBut if you use an npm script in your project, you refer to it simply by writing \"backstop reference\"\nFor the configuration modification, we can re-add it I guess, but it didn't integrate well with the changes we made to the structure.\nWe made a few modifications that can bypass the need for a configuration change detection:- the name of the images is no longer related to the position in the scenarii list but inferred from the label- if a reference image is missing when executing the tests, we fail the test in question.\nFor the variants, our use case is quite particular but i guess not entirely unique. We applied Backstop to a component library we created, this library has a reference (html + css) and multiple implementations (React and a java taglib) and we want to ensure that no matter what library we use, we always get the same visual\n. The report is generated in the report command, there is one function for the junit report and one for the browser report, all it does for the browser report is basically take the Reporter class and serialize to json in compare/config.js\n. And the report opening should work, i tested it on my mac before commiting.I'll see if I can find out why it does this\n. Oh and by the way, because we will make a final pass at linting the code, should we use a specific standard ? Something like standard or semi-standard ?\n. You're right, it's easier to explain to install globally and use the command this way.\nWith a paragraph explaining how to use the command in npm scripts when installing locally.\n. Hi,\nso, I merged your pull request and linted all the code according to eslint-semistandard.\nThe tests failed on npm run genConfig because it couldn't find the config file ... which genConfig was supposed to create :D \nSo for the moment, I wrapped the loading of the user configuration in a fs.existsSync to test if it exists before trying to load it. \nMaybe we can do that in a cleaner way, I don't know.\nIt seems that the Travis tests don't run because Travis can't open a browser ...\nMaybe we should set the openReport option to false by default, this will make the tests pass, and allow users to decide by themselves if they want a browser to be opened automatically ?\n. I made a quick check to see if this PR fixes any issues that are already referenced here is the result:\n- #164 : Added CLI\n- #165 : Done, one part by removing gulp, the other part by cleaning some messages\n- #176 : No server anymore\n- #205 : this should be fixed \n- #219 : As it is a CLI tool, it's not mandatory to run inside NPM run\n- #234 : Using CWD now\n- #236 : Removed Gulp, so not needed anymore \n- #237 : Removed Server, so not needed anymore\n- #240 : As it is a CLI tool, it's not mandatory to run inside NPM run\n- #243 : using CWD, so it's easy to generate a configuration anywhere\n- #255 : Added filter for reference creation\n- #256 : The pre-made report will prevent crashes\n- #269 : Done now\n- #273 : no server anymore\nSome PR's as well \n- #162 : Server removed\n- #199 : Extracted the junit report generation\n- #230 : Using a CLI now, probably not needed anymore\n- #261 : Failures no longer prevent report opening\nAnd bonus ones\n- #137 : Can be closed as #247 was merged\n- #257 : Can be closed as duplicated\n. By the way, the other people to credit for this work are : @borys-rudenko, @ksushik and @dmitriyilchgmailcom\n. Sooo, it seems we're finally there :D \nWe made all the changes we wanted and feel confident this pull request is robust and good to merge :D \nHere is a small screenshot of the comparison modal: \n\n. Hello, \nI think that the first error @patdavid gets is The specified executable is not a valid application for this OS platform.; did you install phantomjs?\" and is due to the fact that we don't find the windows executable correctly:\n- https://github.com/garris/BackstopJS/blob/version_2_0/core/util/runCasper.js#L28\n- https://github.com/garris/BackstopJS/blob/version_2_0/core/util/findExecutable.js\nIt's probably right that windows doesn't like paths with slashes in both directions. but it seems our default configuration has paths specific to *nix.\nThen for string.split is not a function it seems to come from : https://github.com/garris/BackstopJS/blob/version_2_0/core/util/logger.js#L37\nMaybe we should change https://github.com/garris/BackstopJS/blob/version_2_0/core/util/logger.js#L33 from \nif (typeof string !== 'string') {\n    return '';\n}\nto  \nif (!string.split) {\n    return string;\n}\n. Hi, sure I can have a look.\nThe support fort node 0.10 and 0.12 has ended recently, do you really want ton continue supporting it ?. I agree with this, but I would also encourage to support both implementations for a time. \nPhantomjs currently has the advantage of being packaged as an npm module and easy to install.\nChrome currently has to be installed separately, and it can go against the ease of use of backstop.\nWhat do you think ?. Yes I think we can change that\n. ",
    "matthew-dean": "How do you actually change the reference file name using this feature? o_O I can't find any existing documentation to do so.. Yep, I figured it out but forgot to find this thread to update you, sorry about that.. Bump. Would love to test to see if Puppeteer is faster than Chromy, which some say it might be.. I have a similar situation where the first scenario for Backstop always fails, no matter what the first scenario is. (If I change the order, it will succeed, it just fails if it's the first one in the scenario array.)  :/. @garris \nIt improves it, but doesn't fix it. What that seems to do is let one of the viewports run for the first scenario. So Viewport #2 of Scenario #1 runs. I ran that command twice and tried again.\nInterestingly, this wasn't an issue until I reduced the number of scenarios. If I have 20 scenarios with 5 viewports, this doesn't happen. If I have one scenario (5 viewports), it fails. Although after running one scenario with 5 viewports and pkill -f \"(chrome)?(--headless)\" means that the viewport #2 test works.\n. @garris \nI've changed which viewports run in the array, and only the second item in the viewport array is currently executing (no matter which one is the second item). I'm so confused. \ud83d\ude15 . Why would it need to boot up a new instance? Couldn't it just reload a page to create a fresh state? Seems like booting a plethora of new instances / ports would be wasteful.. I tried switching the engine to puppeteer and it had a LOT of weird, glitchy failures. In some cases, it took screenshots of the wrong locations of the page (not matching the selector at all). Other cases, the sizing was wrong. I think Puppeteer should be marked as \"alpha\" support based on the results IMHO.. There are probably 2 solutions:\n\nOne solution is to add this to whatever you're screenshotting. For example, we have a style guide for our app, and each component has a \"wrapper\" with a background color with padding.\nI think you can modify the CSS of the report (not sure how though). And then you can just style each screenshot how you like. That's probably a better approach than adding unnecessary pixels to your screenshots.. Getting the same issue. Viewport units (maybe just vh) are (more than?) twice what they should be.. As far as I can tell this may be a Chromy issue: https://github.com/OnetapInc/chromy/issues/117\n\n@justlevine are you also using Chromy?\nI'd love to just switch to Puppeteer, but it causes a host of other capturing issues that the Chromy plugin doesn't have. (Puppeteer captures incorrect section of the page, rendering the correct dimensions of the element but for the completely wrong coordinates.). @JamieMcNaught Why doesn't Puppeteer have this issue? Only Chromy does, but I can't use the Puppeteer Backstop engine because it has other bugs.. We're using Chromy. What do you mean by vanilla script?. Looks like this is a duplicate of #785. Closing this in favor of that one.. Since this PR is similar to Chromy's implementation, does it suffer from the Chromy vh bug? (#785) Can that be part of tests?. @garris Oh, sure, I'll pull this branch and run right now.. Hmm \ud83e\udd14 this branch seems to run slower than Chromy on the same project. Have you done performance timing comparisons between Chromy / Puppeteer as engines? Maybe I'm wrong. I haven't run a stopwatch and my Backstop tests already take forever. It could be Puppeteer is just less verbose in the output.\nIt doesn't have the vh bug! That's fantastic. ^_^ I do have some failures in my tests from switching engines, but I think some of those are my fault. Will have to investigate.\n. I am getting a number of 1-pixel diffs for some components (~80 out of 400), BUT they aren't significant, and everything else is now capturing correctly. It's more just an FYI - Chromy / Puppeteer tests are not 1-to-1 in terms of pixel precision. But normally, one would just choose one engine.. @garris \n\nplease check the report summary for a test duration. \n\n\u00af\\_(\u30c4)_/\u00af\nI've looked around in the generated html_report and I can't find anything that says anything about test duration. (Looked manually, did a search for duration in the generated folders.) So if you're surfacing stats about tests, you're keeping them really well-hidden.. @JamieMcNaught If this is an issue with Chrome, then why doesn't Puppeteer have this problem and Chromy does? They're both using the Chromium dev tools API.. @JamieMcNaught Are you planning to do a PR of your changed code into Backstop?. ",
    "jon64digital": "They are generated for me by genConfig. They both start with \"../../\" which is surely correct becaue we're starting in /node_modules/baskstopJS which is two levels down from the root folder.\n. First of all, I really appreciate your effort to help me get this running. I know you do this for free so if there is any way I can donate to the cause then please let me know.\nOK, so I ran it using gulp instead of npm run and got the following output, but still no folders or screenshots.\nC:\\Dropbox\\Git\\portal-test\\node_modules\\backstopjs (master) (garris@1.3.5)\n\u03bb gulp reference\nBackstopJS Config loaded at location C:\\Dropbox\\Git\\portal-test\\backstop.json\n[16:01:15] Using gulpfile C:\\Dropbox\\Git\\portal-test\\node_modules\\backstopjs\\gulpfile.js\n[16:01:15] Starting 'clean'...\nbitmaps_reference was cleaned.\n[16:01:15] Starting 'bless'...\n[16:01:15] Finished 'bless' after 4.16 ms\n[16:01:15] Finished 'clean' after 14 ms\n[16:01:15] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[16:01:15] Starting 'init'...\n[16:01:15] Finished 'init' after 4.1 \u03bcs\n[16:01:15] Starting 'test'...\nGenerating reference files.\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[16:01:15] Finished 'test' after 13 ms\nreference has run.\n[16:01:15] Finished 'reference' after 17 ms\nBitmap file generation completed.\nRun $ npm run test to generate diff report.\n\nSo, slightly different towards the end but the same result.\nFor reference here is the config file that was generated.\n\n{\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"name\": \"tablet_v\",\n      \"width\": 568,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"tablet_h\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"My Homepage\",\n      \"url\": \"http://getbootstrap.com\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [\n        \"#carbonads\"\n      ],\n      \"selectors\": [\n        \"header\",\n        \"main\",\n        \"body .bs-docs-featurette:nth-of-type(1)\",\n        \"body .bs-docs-featurette:nth-of-type(2)\",\n        \"footer\",\n        \"body\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1,\n      \"onBeforeScript\": \"onBefore.js\",\n      \"onReadyScript\": \"onReady.js\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"../../backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"../../backstop_data/bitmaps_test\",\n    \"compare_data\": \"../../backstop_data/bitmaps_test/compare.json\",\n    \"casper_scripts\": \"../../backstop_data/casper_scripts\"\n  },\n  \"engine\": \"phantomjs\",\n  \"report\": [\"CLI\", \"browser\"],\n  \"casperFlags\": [],\n  \"debug\": false,\n  \"port\": 3001\n}\n. I would be happy to skype with you or something similar.\n. No, but I just had a look and it looks a bit like Slack I'm guessing. \nHappy to get an account if you tell me how I can connect to you on it. You can email me at jon(@)64digital.co.uk and let me know a good time if you want.\n. OK cool. Just so you know, it's a windows 10 machine without any of this previous stuff installed except node/npm/gulp. My process was...\n- npm install backstopJS - didn't work\n- npm install -g phantomjs (which actually installed as phantomjs-prebuilt) - didn't work\n- npm install -g casperjs - didn't work\n- Ran phantomJS on it's own - got python not found error\n- Installed python which added itself to PATH environment variable\n- Ran it and got no errors but no output, then created this issue.\nMy colleague next to me then went through the identical process on his machine and got the same error, which is not surprising as our dev environments are deliberately similar.\n. Two possible solutions but unfortunately neither of them worked for me.\n@mreall - I tried adding my global phantomjs location to the PATH but it made no difference.\n@Serhansolo - I tried removing the ../../ from the directory paths but that also didn't work. It's strange bacause if the script is being run from 2 directories down and needs to travers up 2 before going into the screenshots folder then it definitely needs the ../../ so I have no idea how that worked for you.\nInterestingly, when I tried switching to slimerjs I got basically the same CLI output but also no screenshots so that's telling me that it's not a phantomjs problem.\n. There is indeed a space in one of my folder names but it's my Dropbox folder so I can't easily change it :(\nI'll see if I can and report back.\n. It's time to party @serhansolo because guess what? It worked!\nI moved my project to the root of the c:\\ drive and Yep, it produced the screenshots. I also need to work out how to remove spaces from a Dropbox folder (when you have work and business accounts it puts a space in automatically)\nI also have a problem with slimerJS now that it is running because it seems incompatible with my Firefox version.\n\nBut that seems like a Slimer problem, not a Backstop problem. \nI cna't thank everybody enough for helping me sort this out. If Backstop is as useful as I think it's going to be then I'm going to save myself hours of torturous CSS debugging.\n. ",
    "Serhansolo": "Hi guys ... just picked up your convo ... I am having exactly the same problem as @jon64digital is having. I am losing it! I don't know what is wrong with it. could you guys please post a solution after you have finished your debugging session ?\nPS. I am not going to bother you guys with screenshots and code excerpts as it is exactly the same info jon gets.\n. Okay you guys! I seem to have found the problem on windows! \nI noticed that I was running with SlimerJS where you guys were running PhantonJS. When I changed my engine to PhantomJS everything worked just fine on my vanilla installation. BUT now I wondered why my SlimerJS was not working!.... \nApparently it had something to do with my relative paths ... in the default backstop.js file there are some paths defined to some folders where backstop puts test output after it has run. \n\"paths\": {\n    \"bitmaps_reference\": \"../../backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"../../backstop_data/bitmaps_test\",\n    \"compare_data\": \"../../backstop_data/bitmaps_test/compare.json\",\n    \"casper_scripts\": \"../../backstop_data/casper_scripts\"\n  }\nnotice the relative way of referencing paths. Once I removed the '../../' part it all worked! Strange... I think this is a SlimerJS bug. Anyway ... This worked for me, I hope I can help anyone with this information!\nEDIT: I am sorry, because I am new to posting on GitHub ( I usually only read) I can't get met code indentation correct for some reason copy > paste does not work. YOLO.\n. @jon64digital  after I posted I went on from my vanilla setup to my working project setup and guess what ... removing the ../../ did not work there! :cry: ...\nHere is what I discovered after countless hours of Googe'in without any result. I moved my whole project to the root of my directory. I figured could it be .... just ... could it be that my relative path might be affected by the root dir it is in (which had a space in it, my complete project folder was D:/AZ Projects/platform-templates/node_modules/backstopjs/)... AND IT WORKED!.... The problem I found now was that backstop converts your relative paths to absolute paths ... and if there is even 1 space in that whole path name .... it won't work! ...\nDo you have a space in the complete path of you folders? This might help! I hope :laughing:  ...\n. I am definitely having a party if you will fix it! because it was the most stupid bugfix of mu life .. I have spent so many precious hours together with some other developers @ work...\n. @jon64digital YAAAY! :tada: \nBackstop is very awesome! We use it olmost daily within out development team. When you make changes you just run the regression and it will show you if it broke something else besides what you fixed!\nAbout you slimer porblem, I know this is not the right thread but if you go to your slimer installation folder (for me it is in /node_modules/slimerjs/lib/slimer/ ) there is a file called application.ini you can change the maxversion value there to an higher version so it will run with your version. so for you I would set it to 50. \nOR\nYou can just go to https://ftp.mozilla.org/pub/firefox/releases/ and doenload version 38 or somthing, that is what I did. Because SlimerJS only support until version 39.* at the moment. I wish you good luck in your life! Live prosper and may the force be with you and such and so on and what have you! :+1:  you can mark the issue as fixed I think we are done here! \ndrops mic, and walks out with an attitude\n. ",
    "mreall": "I had the exact same issue on Windows 10.  Based on what @jon64digital posted above I got the idea to add the full path to phantomjs.exe (\"C:...\\node_modules\\phantomjs-prebuilt\\lib\\phantom\\bin\") to the PATH environment variable.  I did that, relaunched the command prompt, and finally it worked!  My process was:\n- Install python (make sure its folder is added to the PATH)\n- npm install backstopjs\n- Add the folder with phantomjs.exe to the PATH\nI hope this works for you.\n. ",
    "tommyno": "No, I don't think so. All of the .container wrapper divs has different content and need to create different reference screenshots. \nThe linked issue (#249) is quite different: \"to run tests on many similar selectors against one reference screenshot.\"\n. ",
    "machowski": "same issue here - generating report in the browser takes ages. Would it be possible to make report generation in CLI/Browser configuration option?\n. this looks like duplicated code from 'echoFiles.js', maybe extract it to separate helper file?\n. ",
    "SKOLZ": "@garris thank you! I'll check it out\n. ",
    "girishbhamare": "Guys , Do we have any workaround for it? . i mean ignoring particular selector or layout from comparison.\nPlease suggest\n. Nope .. Actually we have web page which having different layout and it contains dynamic images which keep on changing.\nIf we use hide selector then images gets disappeared and it shows only layout.That doesn't ensure whether images are getting load or display on it.\nOur aim is ,image should display in layout but it should ignore while comparing.\nor only layout should be compare rather than image.\nI have tried a lot but no luck :)\n. ",
    "kporras07": "Hi, a friend made this one for a blog post and I immediately loved it and wanted to propose it in this issue. Let me know your thougths.\n \n. ",
    "DigitalKrony": "I'm haveing the exact same issue. \nOS: Win10(ent)\nNode: v4.4.3\nNPM: v3.10.7 \nNPM -list:\n\u2514\u2500\u2500 backstopjs@1.3.5\nBackstop -list:\n\u251c\u2500\u2500 casperjs@1.1.3\n\u251c\u2500\u2500 checksum@0.1.1\n\u251c\u2500\u2500 del@0.1.3\n\u251c\u2500\u2500 express@3.21.2\n\u251c\u2500\u2500 fs-extra@0.12.0\n\u251c\u2500\u2500 gulp@3.9.1\n\u251c\u2500\u2500 gulp-jscs@1.6.0\n\u251c\u2500\u2500 gulp-jscs-stylish@1.4.0\n\u251c\u2500\u2500 gulp-jshint@1.12.0\n\u251c\u2500\u2500 gulp-json-editor@2.2.1\n\u251c\u2500\u2500 gulp-open@0.3.2\n\u251c\u2500\u2500 gulp-rename@1.2.2\n\u251c\u2500\u2500 http-proxy@1.1.6\n\u251c\u2500\u2500 is-running@1.0.5\n\u251c\u2500\u2500 junitwriter@0.3.1\n\u251c\u2500\u2500 node-resemble-js@0.0.4\n\u251c\u2500\u2500 phantomjs-prebuilt@2.1.12\n\u251c\u2500\u2500 require-dir@0.1.0\n\u251c\u2500\u2500 underscore@1.6.0\n\u2514\u2500\u2500 yargs@3.9.1\n. As of right now, I'm just trying to get this to run on one machine. But I've attempted it on three machines and have and the same result on all three. Versions are kept up-to-date from machine to machine. \n. So far I've been just trying to get just the basic NPM install working. So that comes with PhantomJS.\ngenConfig: Works\nreference: fails\ntest: fails\n. EDIT\nBase python install was crap. Adding it into the PATH variables did the trick.\n. ",
    "rhacker": "I'm not sure about this, Mac Chrome is being set as default browser in my mac and it works fine with another app except backstopjs. \n. ",
    "dirkloose": "Yes, it's the same here. OS X with Parallels tries to open report in IE on Win10? Default browser on Mac is Safari. Of course I can open it manually in any Browser after test is done, but it opens Parallels and tries to reach localhost on Default Windows Browser (which is pretty annoying).\nDefault browser from my terminal opens correctly in safari (as any other click to any link does):\n\nopen http://localhost:3333/compare\n\nMust be something else... I thought I might edit it like browser in \"browersync\" and use \"google chrome\" instead of \"browser\", but it didn't work (https://browsersync.io/docs/options#option-browser). Maybe this is some kind of default behavior by some used components? \nNeeds to be tracked down, I guess... any ideas?\n. I gave the 2.0 Beta a try today. It opens the file in the local default browser via direct file reference (file:///Volumes/server/.../backstop_data/html_report/index.html). That works fine for me, since the reporting does not try to open the browser on parallels/windows anymore.\nVery good job on the new version with a lot of great improvements. I like the global installation, since we use it on several projects. And making the browser-reports better accessible makes it easier to share them. Thanks a lot.\n. ",
    "nmynarcik": "When running npm run reference in node_modules/backstopjs:\n```\n\nbackstopjs@1.3.5 reference /myproject/path/node_modules/backstopjs\ngulp reference\n\nBackstopJS Config loaded at location /myproject/path/backstop.json\n[15:22:05] Using gulpfile ~/myproject/path/node_modules/backstopjs/gulpfile.js\n[15:22:05] Starting 'clean'...\nbitmaps_reference was cleaned.\n[15:22:05] Starting 'bless'...\n[15:22:05] Finished 'bless' after 2.87 ms\n[15:22:05] Finished 'clean' after 18 ms\n[15:22:05] Starting 'reference'...\ngulp.run() has been deprecated. Use task dependencies or gulp.watch task triggering instead.\n[15:22:05] Starting 'init'...\n[15:22:05] Finished 'init' after 4.17 \u03bcs\n[15:22:05] Starting 'test'...\nGenerating reference files.\nRunning CasperJS with:  [ 'capture/genBitmaps.js' ]\n[15:22:05] Finished 'test' after 6.93 ms\nreference has run.\n[15:22:05] Finished 'reference' after 7.84 ms\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS: remote console > [HMR] Waiting for update signal from WDS...\nCasperJS: [HMR] Waiting for update signal from WDS...\nBitmap file generation completed.\nRun $ npm run test to generate diff report.\n```\n. It didn't even make a the screenshots folder. Is there other settings that I am missing to have it see the webapp on that url?\nEdit* Looking at this more, the [HMR] Waiting for update signal from WDS... is a console log from my webapp, so maybe we are not waiting long enough? The readyEvent gets fired after that and is set in the backstop.json\n. @garris still not being able to make headway on this. Tried running gulp reference and that errors out with spawn casperjs ENOENT.\n. @garris I just added backstop to a different project and it is working as intended. Even hitting a localhost:9000 url. Im going to close this since the issue I am getting seems to be specific to the other project.\n. @mig-25 I had this issue too, where Parallels would launch. To fix this, I pasted the full path to Google Chrome here: https://github.com/garris/BackstopJS/blob/master/gulp/tasks/openReport.js#L18\nI don't think this is a backstop issue as much as a OSX/VM issue.\n. @mig-25 can you paste your line 18 of openReport.js?\n. Can you try:\nvar options = {\n    url: paths.compareReportURL\n    ,app: isWin ? \"chrome\" : \"/Applications/Google Chrome.app\"\n  };\nChange the path of Google Chrome if it is different.\n. \ud83d\udc4d \n. I get that too. Haven't been able to troubleshoot it yet. There might be another issue for that. \n. ",
    "abangser": ":+1:  on this. I am seeing similar behaviour.\nAs a hack solution, when I add the selector for a second time, the 2nd check for the element passes.\nThis made me think it was timing even more, yet if I just add a wait before looking for the selector the test goes back to failing.\n. Just a :+1: to this. Would love to upgrade since we are finding flaky failures on the older version that we think are fixed in the new one! Thanks!\n. ",
    "YoungElPaso": "Also having weirdness. It all looks like desktop no matter what I do.  There is a js warning on the pages I'm testing. Could that be it?\n. Ok, but the config is super straightforward:\n`{\n  \"id\": \"prod_test\",\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"name\": \"tablet_v\",\n      \"width\": 568,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"tablet_h\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"McGill Homepage\",\n      \"url\": \"https://www.mcgill.ca\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\"body\", \"html\"],\n      \"readyEvent\": null,\n      \"delay\": 100,\n      \"misMatchThreshold\" : 0.4,\n      \"onBeforeScript\": \"onBefore.js\",\n      \"onReadyScript\": \"onReady.js\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\n. I should note, that in an attempt to get around this, I added a user agent string to Casper in onBefore.js, but it didn't help.  Its maddening.\n. Man, you know it might just be the site.  Phantomjs (by itself) gives similar results on that url.\n. Seems odd that dimensions should be required to be exactly the same.  I guess its fine, but it might be better if there was a fuzziness applied to that no?  A height/width dimension threshold maybe?  I suppose this might just be a matter of opinion.\n. I dunno. That's a tough one.  I guess it'd be a differential that you could plug in per viewport?  This is a tough subject :)\n. ",
    "PhilippeVay": "My first attempt at using Backstopjs was with a page relying on resize\n$(window).resize(\n  $.debounce( 250, calcSomething )\n);\nand I encountered the same problem: it looks like my CSS media queries are ignored (or the mobile viewports).\nTesting with another site gave expected results: desktop CSS at desktop resolution and mobile CSS at mobile resolution.\n. You can have different JSON files https://github.com/garris/BackstopJS#setting-the-config-file-path (and reference+test directories). 1 per viewport maybe? That'd allow you to launch multiple commands like b1 & b2 & b3 & in Bash or start cmd /k call yourcommand in Windows cmd.exe. Problem is you'll run out of memory even faster so some of your commands should be faster to run than others :)\nNot sure if Filip Barto\u0161 use of gulp-chug is still relevant?\n. Hi,\nrelevant comment in PhantomCSS readme.\nYou could replace (via onBeforeScript) each select (and file input) by a text input of the same width, maybe with a value=\"fake select\" ^_^ , that'd keep the layout of your components.\nSame with radio, a ~16-20px text input?\nAs for scrollbar, you want to know if one is present or not so modifying overflow property to avoid it would be a bad idea...\n. Are you using default PhantomJS engine or chromy or slimerjs?\nI tested http://fontawesome.io/icons/ directly with backstopJS (installed 1 month ago), either chromy engine or phantom and icons are successfully displayed in a screenshot of #new element. It's grayish because there's an overlay (capturing body will show that. My Firefox profile shows no modal and overlay probably because I'm using an adblocker) but otherwise icons are fine on Windows 10 x64 / either Chromium 61 (Chromy) or Phantom / backstopJS 3.0.1\n. With option 2, Autoprefixer with a browserslist containing an old browser which only understood the oldest flexbox syntax (edit: Android 4.3, etc) should do the trick and add those prefixes, isn't it? I'll work on it this week. Hi, this seems to be a duplicate of #576. ",
    "egorlitvinenko": "the same problem. ",
    "marlin307": "It worked after i ran a clean install by deleting all existing older versions of phantomjs,npm,nodejs.\nthanks. Thanks @garris, @skip405  and @klausbayrhammer for your responses. Both solutions worked. Following is my backstop.json file.  Pulled all the constant elements out of the array and made them globals and left the URLs in scenarios along with labels. \n{\n  \"id\": \"www\",\n  \"hideSelectors\": [],\n  \"removeSelectors\": [],\n  \"selectorExpansion\": true,\n  \"selectors\": [\"document\"],\n  \"readyEvent\": null,\n  \"delay\": 500,\n  \"misMatchThreshold\" : 0.1,\n  \"onBeforeScript\": \"onBefore.js\",\n  \"onReadyScript\": \"onReady.js\",\n\"viewports\": [\n    {\n      \"name\": \"phone_portrait\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"name\": \"tablet_portrait\",\n      \"width\": 568,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"desktop\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"scenarios\": [\n        {\"label\": \"home\", \"url\": \"https://www.google.com\"},\n    {\"label\": \"home\", \"url\": \"https://www.yahoo.com\"},\n    {\"label\": \"home\", \"url\": \"https://www.msn.com\"},\n    {\"label\": \"home\", \"url\": \"https://www.espn.com\"},\n    {\"label\": \"home\", \"url\": \"https://www.cnn.com\"}\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\n. ",
    "danemacaulay": "try setting debug to true\nhttps://github.com/garris/BackstopJS#debugging\nyou may get more info about your problem\n. You can also check that phantomjs runs as expected apart from backdrop, you may get more useful error messages\n. The getting started page can get you there:\nhttp://phantomjs.org/quick-start.html\nBear in mind that backstop installs the phantomjs binary as a node module and it can be run from there after an npm install with ./node_modules/.bin/phantomjs\nIn Windows I guess the /s are \\\n. oh sry misread that, ive experienced this generic message before Testing script failed with code: 1 but was able to get more info with the debug property set to true\nfeel like error handling could be improved to give more specific failure messages\n. that error code value may be useful\n. ",
    "firmlybelieve": "I have the same problem.when I install python, it's all right.\n. ",
    "agentdylan": "Hey I was getting the same error, I fixed it by installing Python - as recommended here https://github.com/garris/BackstopJS/issues/185\n. ",
    "MoezDiha": "Hi am new to Backstopjs, would like ur help to configure Backstopjs on Jenkins and run tests. If anyone can help that would be great, Thanks in advance . ",
    "ahoopen": "@garris No problem! Take your time\n. ",
    "mikkelrom": "Hi @garris. This is probably just me, but I'm not sure where to find the \"set as new reference\" button that is mentioned in this PR. Was that feature abandoned, or is it just me that is having trouble finding it? \ud83d\ude42 . @garris Jep, I'm aware of that feature (which is awesome by the way!). \ud83d\ude42 \nThanks for the info, good to know it just wasn't me \ud83d\ude00 . Hi @matthiaskomarek - did you find time to look at this feature? I would love to have that as well :). Hey @matthiaskomarek and @garris - okay, I will try and see if I can find the time soon :). This is now published in beta \ud83c\udf89 . Awesome @garris. \nI guess this issue can be closed, right?. Thanks! Just tested the beta, and it seems to work \ud83d\udc4d . ",
    "ggiacomo": "Hi @garris,\nI've already switched to 2beta, as  I had the same issue wth 1.x.\nNote: in util/compare.js is used a deprecated function fs.existsSync\nthank you!\n. Thank you for your suggestion. With more than 100 url for each test, the result is still the same, freezing the machine.\nI had to split every 50 url in order to do the test completely.\nAt this point, is there a way to have different html/config file names for each test in browser format? like html_1.html/config_1.js and so on? Right now I'm using the config path with a dynamic suffix for the html folder, like\n\"html_report\": \"backstop_data/html_report_\"+INCREMENT_TEST_COUNT\nbut with this solution I've a lot of duplicated folders/files(for bower_components,css,js)\nThank you!\nofftopic: My final purpose is to run tests with a cron job every x days, and send the test response via email. Any suggestion to accomplish this task?\n. As a temporary workarond, I'm using the ci_report, in this way a can set the name for the xml report file. Than using a junit viewer to preview all test results.\n. ",
    "Patabugen": "I'm also running out of memory (I have 4GB and nothing else running) with 29 URLs and 5 screen sizes.\nI can grab everything just fine - after comparing my process gets killed for using up all the memory.\nI'm increasing the memory to 6GB - but it would be great if there was some way to clear out the used memory between comparisons to effectively remove the limit on number of URLs.\n. My use-case for this is:\nRight now I'm setting up Backstop and trying to get my report settings/locations correct. It'd be handy to be able to regenerate the report without waiting for the sites to load. As a workaround, I've reduced the backstop.json to just one site on one browser - but I would benefit from being able to do backstop report which does all the local/offline stuff usually performed after generating the test screenshots.\n. ",
    "zcchew1202": "\nHere I changed the padding of the jumbotron from 0px to 2px and set the threshold to 15. I used the example on csstricks.\n. \"paths\": {\n    \"bitmaps_reference\": \"results/bitmaps_reference\",\n    \"bitmaps_test\": \"results/bitmaps_test\",\n    \"casper_scripts\": \"results/casper_scripts\",\n    \"html_report\": \"results/html_report\",\n    \"ci_report\": \"results/ci_report\"\n  }\nI've tried doing this, but BackstopJS still does backstop_data/bitmaps_reference. Am I missing anything?. Thank you!. ",
    "ThibautAlgrin": "I have the same problem in my project. I noticed that BackstopJS was running the action twice. Have you any idea?. ",
    "mchepyala": "@stephenbe  I am new to backstop and trying to integrate with Casper, Can you provide me an example of your integration using the latest backstop version as a zip file.. @azeez03 Is it working for you now. I have a similar issue. If its working, can you please share the entire folder as ZIP.. Thank you @anton-kulagin and @garris  for your prompt reply. Now I understood writing casper files but confused as I see onReady.js in couple of places in the folder.\n/engine_scripts\n/engine_scripts/chromy\n/engine_scripts/casper\nIn which onbefore.js shall i write the click events so the screen shots are taken after click.\nAn example(zipped folder) with latest backstop would be highly beneficial.. @kiran-redhat Sure, that would be of great help. as long as i can perform user actions like 'Click' Thank you!\nCan some one provide project template using casper.. @kiran-redhat Can you please provide me a ready to use project.. Hi @kiran-redhat, I saw that but its using very old backstop version. can you put up something with latest version. I was able to capture screenshots with latest but couldn't perform click operations and then take screen shots. Ex: https://collegereadiness.collegeboard.org/\nI want to click on 'sat' from main menu and then take a screenshot of the drop down.. @kiran-redhat can you provide me the Chromy or Casper template project to use?. @kiran-redhat  the read me is empty at the link you mentioned. i dont see any project there.. @kiran-redhat  Thank you so much. I will try it tomorrow and let you know how it goes.. ",
    "patdavid": "```\n$ backstop genConfig\nBackstopJS CWD:  C:\\Users\\patdavid\\backstop-test\nCOMMAND | Executing core for genConfig\ngenConfig | Copying 'C:\\Users\\patdavid\\AppData\\Roaming\\npm\\node_modules\\backstopjs/capture/casper_scripts' to 'C:\\Users\\patdavid\\backstop-test/backstop_data/casper_scripts'\n  COMMAND | Command genConfig ended with an error\nTypeError: string.split is not a function\n    at paddedString (C:\\Users\\patdavid\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\util\\logger.js:33:22)\n    at message (C:\\Users\\patdavid\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\util\\logger.js:59:62)\n    at C:\\Users\\patdavid\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\core\\command\\index.js:63:18\ngenConfig | Configuration file written at 'C:\\Users\\patdavid\\backstop-test\\backstop.json'\n```\nFresh directory kicks this string.split error... :(\nAlso, thank you for taking the time to look into this! :D \n. Thank you all so much for taking the time to help and possibly get a fix!  Much appreciated!\nJust an FYI: I've also tried this in a Cygwin environment and unfortunately it still kicks the same errors there as well. :(  I'll try it out from an ubuntu partition!\n. Awesome! I'll pull it later today, test, and report back. \n. Followed your instructions and everything appears to be running again!  Thank you so much for your time taking care of this (and creating such a handy project)!\n. Not sure if this should be a separate issue, or if it's related to this one, but the report command errors:\n```\n report |\n          Test completed...\n report | 17 Passed\n report | 7 Failed\nreport | Writing browser report\nCOMMAND | Command report ended with an error\nCOMMAND | Error: C:\\Users\\patrickd\\Personal\\github\\pixlsus\\website\\C:\\Users\\patrickd\\Personal\\github\\pixlsus\\webste\\backstop_data contains invalid WIN32 path characters.\n              at Object.mkdirs (C:\\Users\\patrickd\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\fs-exta\\lib\\mkdirs\\mkdirs.js:16:20)\n              at C:\\Users\\patrickd\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\fs-extra\\lib\\copy\\cop.js:36:13\n              at FSReqWrap.cb [as oncomplete] (fs.js:212:19)\nCOMMAND | Command test ended with an error\nCOMMAND | Error: C:\\Users\\patrickd\\Personal\\github\\pixlsus\\website\\C:\\Users\\patrickd\\Personal\\github\\pixlsus\\webste\\backstop_data contains invalid WIN32 path characters.\n              at Object.mkdirs (C:\\Users\\patrickd\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\fs-exta\\lib\\mkdirs\\mkdirs.js:16:20)\n              at C:\\Users\\patrickd\\AppData\\Roaming\\npm\\node_modules\\backstopjs\\node_modules\\fs-extra\\lib\\copy\\cop.js:36:13\n              at FSReqWrap.cb [as oncomplete] (fs.js:212:19)\n```\nIt's not a showstopper for me, as I can just pull up the failed*.png referenced in the output, but wanted to be thorough... :D \n. Turns out I was simply missing \"html_report\" from the \"paths\".  All set now - thanks!\n. ",
    "rajesh825": "Issue resolved after using BackstopJS 2.0\n. ",
    "godban": "@garris thx for quick response\nSetting id resolves this issue.\n. ",
    "mhavelant": "A several-weeks-old 2.0@beta version (yes, I should update it, I know :) ).\n. Yeah, sure.\nFirstly, decoupling the commands will probably result in more maintainable and reusable code.\nSecondly, the current way how \"backstop test\" works is this:\n- The command creates a timestamped subfolder in the tests directory and dumps the scraped screenshots there\n- Then it calls the report subcommand, which runs the comparisons, creates the reports folder with that pretty angular front end, and dumps the compare config there.\n(This might be an oversimplification of the process, but this is what I see when I use the tool.)\nSo all this stuff is done in a single run. As stated in #281 , when you have a lot of scenarios and not that much RAM, you'll eventually run out of memory. I already encountered this, and just for fun, I monitored it wiht htop: The backstop process running 85 scenarios with 2 viewport sizes each used\n- 2-300 MB of memory at the CasperJS stage\n- Increased from the previous amount to 4.8 GB of usage before Linux killed it on its own.\nThis meant that although the screenshots remained, to comparison results were lost. Since I can't use compare on its own, I don't have a choice but to rerun test, which creates a new batch of screenshots, wasting some time.\n(Note: After this little test I chopped the config up into smaller parts so at least there is this as a workaround for the memory problem.)\nTLDR: If \"backstop test\" fails after taking the screenshots for some reason, you have to start again from scratch.\nAnd thirdly, there is also what I wrote in my original post. Being able to run the compare/report part on its own would make revisiting previous test runs easier, since as far as I know, the config in the html report folder gets overwritten after each test run.\nContinuing this line of thought, I think doing these following chang ideas would improve the report part of this tool:\n- The decoupled test command could create a pairings.json in the current test's folder (the current timestamped folder), so this compare-older-test-runs thing would be easier.\n- The new \"compare\" command could take these pairings.json files as arguments, and the output would be a results.json in that same (timestamped) test folder\n- And to answer the \"ok, but what's the point of all of this?\" question: The current reports app only reads data from the config.json located in its folder. By modifying the compare command to this \"output json config as result (while obviously keeping the \"create diff files\" functionality)\", we could just tell the angular app to look through the test folder, parse the results.json files, and display these in a select field. \nThis would result in an html results page which is not limited to a single config.json in its root folder, but instead, it could display every previous test run as well, making the previously mentioned revisiting of older test runs a piece of cake.\nWhew, this turned out longer than originally planned. I hope everything is clear and I didn't leave out essential details needed for understanding what I meant. \nAnd to finish off this wall of text, I'd like to say thank you (and everyone involved) for creating this tool! My company and I are very satisfied with this tool! :)\n. Huh, I didn't even consider that omitting the values from \"reports\" will only skip opening them, but won't skip generating them. I can work with this, thanks!. I have the same problem. Version 2.6.13.\nSetting the async compare limit to 1 instead of my default 30 does not make a difference, it only makes the app reach the 'Killed' status somewhat later. The backstop process hangs around 500-600 megabytes, then when it goes into the 'compare' phase, it shoots up to 2.8GB. \nThe environment is a docker version Ubuntu 16.04.\nAbout the json: 6 viewports, 5 scenarios, every scenario has a 0 for mismatch error, document selector, resemble error type is movement, largeImageThreshold is at 1200.\nUsed viewport sizes are 1366x595, 1280x851, 1024x768, 1920x907, 540x360, 480x360 (but again, heights can be dismissed as I use the document magic selector for the scenarios).\nKilled after the 23rd compare.. Hi!\nI got the same error. The async limits at 1 did not help, however setting \"selectors\" to \"viewport\" from \"document\" did. So it might be something with chromy with 'document' as the selector.\nEdit: Setting asyncCaptureLimit to 1 AND not using \"document\" together worked. Setting the capture limit to something higher broke it.. The newest ones:\n- Google Chrome 62.0.3202.52 beta\n- BackstopJS v3.0.29\nNote: I'm running under a dockerized Ubuntu 16.04 . For me, the error\n\nChromyJS returned an unexpected error while attempting to capture a selector. { WaitTimeoutError: evaluate() timeout...\n\nis thrown before the 'BackstopTools have been installed.' step in chromy. So long before comparisons are even considered, in the reference command.\nSo the PR, although sounding insanely good overall, I don't think will help here.\nAt least for me, it seems that the 'document' selector is not working with Chromy.. @anton-kulagin If you keep the report parameter empty you'll get the HTML one, but no CI report will be generated. You need to add CI to report to get both the HTML and CI reports without the browser opening.. I can use slimerjs only if I run backstop with xvfb (either with node fs.spawn or directly from the CLI), but when I want to use it as \"backstop = require('backstopjs')\", I get the same issue. \nEither way, debugging doesn't work, some \"this.filter\" function is undefined.\nEdit: I'm not on windows, but linux (running in docker).. Hi!\nAs phantom/slimer/casper were removed (See https://github.com/garris/BackstopJS/commit/9805cad7d7844c6225963b0c7700dcd1e890f084 ), Firefox is no longer supported, right?\nThen https://github.com/garris/BackstopJS/blob/fd1af2262e057c1568cdd937adf40b9c6eac1997/docker/Dockerfile#L23 can (and should) be removed as well, to keep the docker image slim and the build faster.\nAlso a reminder, that Foxr (See https://github.com/garris/BackstopJS/issues/835) is going strong and it could re-add Firefox support. :). I tried document, but it didn't really work for me for some reason (maybe I should set more wait time, or puppeteer is a bit buggy), that's why I wanted to try \"body:noclip\". But if that's deprecated, then it's fine, we can close this issue.. Yep, it does at a few places.. I tested with PhantomJS as well, the same issue when using document. Weird.. Currently, my workaround is using SlimerJS + Firefox, even if this adds the need for xvfb (headless doesn't work for some reason). So until the issues are resolved, or I have the time to go native puppeteer, this will have to do.\nThanks for the help! :)\n. Just an update, I looked at the puppeteer repo and they have an experimental puppeteer-firefox package.\nSee: Puppeteer for Firefox\nAlthough unlike Foxr, which uses standard Firefox, this uses a custom/forked version.. I could and do when using BackstopJS on its own, but when it's embedded into custom code as a node module which also logs to the console, then this becomes problematic (I run BackstopJS embedded into a web service).\nOf course, I could use something like fork/spawn/whatnot so I can separate the logs, but it would be a nice feature to have.. I'm getting this a lot, too. I recommend checking resource usage and making sure you are not running out of memory, CPU is not pushed to 100% on all cores, etc.\nIf that's the case, you might want to try messing around with args, e.g --process-per-site, --disable-accelerated-2d-canvas, --disable-gpu and the likes of these.. I tried tweaking it and got from \"frequent timeouts\" to \"sometimes it times out\", so that's progress, but not a fully working solution, sadly. \nI'm working on ironing it out in my projects, though, hopefully with success.. 1. This is a great project, even if I don't contribute code I hope I can add value with these feature ideas. :)\n\n\nThe --moby/--docker arg seems to create a backstop container and run the tests in that. In contrast, my proposal is only about where chrome runs (and only for puppeteer, although chromy might also support such a thing, I didn't check), be it docker or some remote server. They can be used together and would make the --moby (and regular runs) less resource intensive (given there's a remote chrome instance which is set up to accept connections).\n\n\nI don't really see any potential regressions. According to the docs, connect()\u02d9 returns the same Browser instance as launch(), everything else should be handled by puppeteer internally, so the only 3 things that need to be changed (pseudocode alert):\n\nAdd a new function e.g getBrowser(options) that should be something like if (isRemote) { return await puppeteer.connect(...)) } else { return await puppeteer.launch(...); } and replace current p.launch() usages with it\nAdd a new function e.g releaseBrowser(options, browser) that could be something like if (isRemote) { return await browser.disconnect(...); } else { return await browser.close() } and replace current browser.close() usages with it\nAdd new parameters (which, when omitted, default to the current functionality)\n\nDisclaimer: this is just headcanon, an actual implementation might be more difficult. :). Thinking of it, another use case would be scalability (e.g in CI/CD when having lots of tests). Backstop on its own doesn't really use a lot of resources, the main hogs are the browsers. Having the ability to move the resource-intensive stuff to a different machine should help with this.. ",
    "rickschubert": "@garris I would also like to be able to do this as I would want to take the screenshots with another tool but want to use backstopJS to compare them. Could you perhaps just hint me to a place in the code which I would have to comment out in order to do this? Would it be that easy? . ",
    "aboutandre": "Hey @stephenbe did you come around writing that article?\nI have the same question now and would love to take a look at how you fixed this. If no article, a gist or some commit should be fine to set me on the right track ;-)\nCheers!. Hi @garris ,\nthanks for the quick answer.\nI will take a look at it and see if it's worth using the BSJS report for this task. If yes, I might come with a PR ;-)\nFor the meanwhile I will close this ticket.\nCheerio. Thanks guys! I'll take a look at the links you've send!\nBtw...\n@garris you're amazing. Did I ever tell you that?\nBackstop is my favourite project in Github. You have saved me countless hours of pure PITA of bug hunting. I tell about this project to virtually everyone I know that has ever touched a computer to code front-end.\nI guess what I'm trying to say is: thanks, like a lot!\nKeep on rockin' mate!\nLove from Hamburg. ",
    "alucardu": "Any updates on the batch feature? I can't find any documentation beyond this thread.. Hey @garris I've setup my Backstop using backstop init to create the needed files in my application. Could you explain how the hoverSelector should work? I'm probably misunderstanding it.\nWhen I add UI elements to the selectors array they are added in the bitmaps_reference folder. When I add an element to the hoverSelector like so \"hoverSelector\": \".btn-default\", nothing happens. I guess what happens is that the mouse does hover over the element but the hover is removed at the moment the screenshot is taken. \nI would really like to use and understand BackstopJS because it seems what we need for our application, but I'm having trouble understanding the documentation and implementing the features. . I think I have located the problem. It seems the CSS of bootstrap is causing a conflict. If I run backstop reference with the bootstrap.min.css file referenced in my index.html the hover scenario doesn't work (although I can hover the selected element in the browser). When I remove the reference to the bootstrap.min.css file then I do see the hover state in the debugWindow and also in the reference. I'm going to try and find out what CSS is exactly causing the problem.. I still had some issues with being redirected to the API adres instead of the localhost:8080 adres, not sure if the problem is within Chromy, Chrome or Webpack. I hacked a fix together. \nI've created a goToPage.js file:\nmodule.exports = function (chromy, scenario, vp) {\n  console.log('GO TO PAGE');\n  require('./postInteractionWait.js')(chromy, scenario);\n  chromy\n    .wait(2500)\n    .goto(scenario.url);\n};\n\nAnd from a scenario file I call it:\nexports.scenarios  = {\n  \"label\": \"***** Beheer Systeem\",\n  \"url\": \"http://localhost:8080/#/beheer/systeem/koppelingen\",\n  \"misMatchThreshold\" : 0,\n  \"onReadyScript\": \"../../scenarios/goToPage.js\",\n}\n\nSo what happens now is that Chrome is opened with the url. Than it's redirected to the microsoft login page, than another redirect to the API server and than finally it goes back to the url in the scenario file by using .goto().. You could ignore everything except the reference files and let the other people run the tests against that. That way everyone also runs against the same reference files. Maybe you could make a batch file that first pulls the latest commits from Git (grab latest reference) and then run the test.. ",
    "BdNp": "Yeah, a pixel acceptance property would be enough. 'removeSelectors' works in some cases but not all. And yes, my next step would be to replace and normalize the content in an onReady script. A height property threshold would be more of a time-saver; it's not a blocker per se.\n. Well I wasn't sure until this morning. Turns out one of our developers had applied padding-top to the body tag, which is what is throwing everything off. Of course. removing the body selector renders the entire test empty. \nThe truth is, this would be a perfect case of the tests failing regression. I still think a pixel height threshold would be useful, especially if the entire team is expecting a global change like this. But in this case, I should be able to remove the offending class for the sake of testing smaller elements.\n. ",
    "ricardosimoes": "I'm also experiencing this issue. \n. I'm also using Windows\n. You rock! \ud83d\ude80 \n. ",
    "fabioduque": "Same here! \n. @garris Yes, I'm using it on Windows\n. @Spydr331 The config.js file is created dynamically, so although the browser is feeding from those values (specifically the wrong \"diffImage\" value), the problem comes from the file which generates config.js.\nI will try also to take a look at the source code.\n. @garris Nice!!!\n. Already getting latest version and testing...I'll get back to you! Thanks for the quick fix! \n. It works!!! :D\nAwesome!\n@stephenbe Make sure you're changing the right file. I changed report.js from my main Node installation path, not from the node_modules inside my project.\nJust to clarify, I changed it here (please note that I'm using Nodist):\nC:\\Nodist\\bin\\node_modules\\backstopjs\\core\\command\\report.js\n. \n. @garris @stephenbe  Awesome fix and more points for you, for fixing it on the move!! I agree also with the teamwork! That's why open source will ALWAYS be better! :D Cheers for all!\n. ",
    "ChrisZie": "My output (i just changed the current location always to google)\n\ncd node_modules/backstopjs/ && npm run test\n\nnpm info it worked if it ends with ok\nnpm info using npm@3.8.9\nnpm info using node@v6.2.0\nnpm info lifecycle backstopjs@2.0.3~pretest: backstopjs@2.0.3\nnpm\n\nbackstopjs@2.0.3 test /src/node_modules/backstopjs\nnode ./cli/index.js test\n\ninfo lifecycle backstopjs@2.0.3~test: backstopjs@2.0.3\nBackstopJS is running in legacy mode.\nBackstopJS CWD:  /src\nBackstopJS loading config:  /src/backstop.json \nCOMMAND | Executing core for test\nRunning CasperJS with:  [ '/src/node_modules/backstopjs/capture/genBitmaps.js' ]\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Username is visible\nCasperJS:  EULA\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  DropDown is visible\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Ready event received.\nCasperJS:  Current location is google\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  Comparison config file updated.\nBitmap file generation completed.\nCOMMAND | Executing core for report\nnpm info lifecycle backstopjs@2.0.3~posttest: backstopjs@2.0.3\nnpm info ok \n. i also had this setting\n  \"report\": [\"CLI\"],\nnow i changed it to:\n\"report\": [\"browser\"],\nBut still i have the same problem that the comparison don't start with the command 'report'.\nSideNote:\nI use docker so every new jenkins build builds also a new container and installs a new backstopJS package in the conatiner\n. i also changed the commands to the new command backstop reference and backstop test...but still it is not wokring in the jenkins build.\nAlso tried it with global installation...not worked either\n. I also tried this scenario with your basic Example when you run genConfig, but this also did not worked on the Jenkins\nthis is my config file (just change the scenario URL):\n{\n  \"id\": \"prod_test\",\n  \"viewports\": [\n    {\n      \"name\": \"computer\",\n      \"width\": 1920,\n      \"height\": 1200\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"LoginForm\",\n      \"url\": \"https://google.com/\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectors\": [\n        \"document\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1,\n      \"onReadyScript\": null,\n      \"onBeforeScript\": null\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"./backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"./backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"./backstop_data/casper_scripts\",\n    \"html_report\": \"./backstop_data/html_report\",\n    \"ci_report\": \"./backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\n. ",
    "robertloo": "Hi @garris \nIn my config file I have misMatchThreshold = 15.00\nA URL that failed shows this in the log: \ncompare | ERROR { size: isDifferent, content: 3.97%, threshold: 15% }\nThe HTML report shows this for that page: \nmisMatchPercentage\": \"3.97\"\nThe way I interpret this is that the page had a 3.97% difference. But shouldn't the difference be 15%+ before it fails?\n. @garris the DIFF image shows the footer slighting distorted. Everything else looks fine. \nIn my config file I set requireSameDimensions = false.  Should that not have made it to ignore the dimension difference?  \nHere is another failed test with the HTML error report:\nReport: {\n  \"isSameDimensions\": false,\n  \"dimensionDifference\": {\n    \"width\": 0,\n    \"height\": -33\n  },\n  \"misMatchPercentage\": \"6.58\",\n  \"getDiffImage\": null\n}\nThreshold: 1\nI still have my misMatchThreshold at 15.00 in the config file.  Here it says it is 1.  Maybe my threshold value is not being passed? . I installed canary.  I think this is working better.  I constantly get good test runs (12 pages/test). But every so often I get one with a failing page, like this:\nReport: {\n  \"isSameDimensions\": false,\n  \"dimensionDifference\": {\n    \"width\": 0,\n    \"height\": -6\n  },\n  \"misMatchPercentage\": \"1.83\",\n  \"getDiffImage\": null\n}\nThreshold: 1\nLog\ncompare | ERROR { requireSameDimensions: false size: isDifferent, content: 1.83%, threshold: 15% }. Correct.  I'm using a decent connection.  Here are more of my settings:\nvar selectors = [\"document\"];\nvar delay = 3000;\nvar misMatchThreshold = 15.00;\nvar requireSameDimensions = false;\nviewports: [\n      {\n        name: \"desktop\",\n        width: 1500,\n        height: 1200\n      }\n    ],\n    engine: \"phantomjs\",\nMy guess is phantomjs does not handle large displays well consistently. I was hoping to mitigate that inconstancy with a high misMatchThreshold.  I could raise it higher. But fear that might start giving me false negatives.. @jtuds the console log of a successful test of that failing test mentioned above shows this:\ncompare | OK: <url...>\n@garris I think Ajax might be the cause. Putting that aside though, I would expect the misMatchPercentage to be over 15% on a failing test.  I don't mind getting fail tests like this every so often.  I'm going to try 20% threshold and see if that helps. \nThanks for the awesome project! :) \n. I created two empty tables\nTable A (reference)\nheight: 50%;\nwidth: 50%;\nTable B (test)\nheight: 80%;\nwidth: 80%;\nConfig settings\nvar misMatchThreshold = 15.00;\nvar requireSameDimensions = false;\nLog report\ncompare | ERROR { requireSameDimensions: false size: isDifferent, content: 22.44%, threshold: 15% }:\nHTML report\n\nTable B (TEST) is proportionally bigger even though you can't see it here.  So the dimension is different. But it is the same thing.  . @jtuds Good point!\nHere is another test. Same settings as before, except\nvar misMatchThreshold = 23.00;\nLog report\ncompare | ERROR { requireSameDimensions: false size: isDifferent, content: 22.44%, threshold: 23% }:\nHTML report\n\n. I'm running my config as a node module using --configPath. ",
    "fmmricardo": "Hi, @garris this issue is still open.  I'm having the same problems. \nThere's something new  about this? . Thanks @garris I will try to get this working.\n. ",
    "paradizex": "Try using relative path for casper_scripts and absolute path for the rest\n. I didn't get time to do through testing but I can provide you with some statistics.\nBefore this fix the memory usage for 6 url's with 2 viewports (1024x768 and 1920x1080) used to be approx. 2.5GB \nAfter this fix memory consumption now varies between 200 and 800MB.\nI wont be able to post my config's as it points to our local intranet sites which is not accessible from outside the network.\nHere are some of the links which I referred to come up with this fix\n1.  https://www.toptal.com/javascript/10-most-common-javascript-mistakes#common-mistake-3-creating-memory-leaks\n2.  http://info.meteor.com/blog/an-interesting-kind-of-javascript-memory-leak\n. That can be a cool feature, but from some of the resources that I have read says that nodejs is a single threaded and that promises do not leave their resources until all of the promises in queue are resolved. So, I assume that, even if we increase concurrency, it will still use single thread and at the same time keep on consuming more memory resource. I have not thoroughly tested my above assumptions but I think that there might be some minor gains in processing of the promises but with higher memory usage.\nOne other thing I noticed with my fix and setting concurrency as 1, is that after every promise gets resolved, nodejs runs its Garbage Collection routine which in turn increases the total execution time. So, option to configure MAX_COMPARISONS_CONCURRENCY can be useful then. So, in case some one has enough memory then they can increase this value so that GC is deferred till that set of promise queue is resolved, and may get performance gain as a result.\n. That's awesome. \nI respect all the dedication and hard work you have been committing to this project.\nCheers and keep up the good work.\n. ",
    "olee": "Same problem here..... ",
    "justin-parker": "same issue here.... I was able to add BacktopJS as a node module in my app.  I no longer require legacy support.. ",
    "Kenith": "same issue here. Hello All,\nSame here.\nBut I have already install the phantomJS, the backstopJS will failed to write location.js file.\nSystem Info:\nnode version: v8.9.1\nnpm version: 5.5.1\nLinux: Centos 7 with https://rpm.nodesource.com/pub_8.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm\nWould you please take time to see it?\nThank you,\nKen\n`Installing BackstopJS v3.0.25...\n/usr/bin/backstop -> /usr/lib/node_modules/backstopjs/cli/index.js\n\nphantomjs-prebuilt@2.1.16 install /usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt\nnode install.js\n\nConsidering PhantomJS found at /usr/bin/phantomjs\nFound PhantomJS at /usr/bin/phantomjs ...verifying\nWriting location.js file\nError checking path, continuing { Error: EACCES: permission denied, open '/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/location.js'\n    at Object.fs.openSync (fs.js:646:18)\n    at Object.fs.writeFileSync (fs.js:1291:33)\n    at writeLocationFile (/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/util.js:84:6)\n    at Promise._successFn (/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/install.js:375:11)\n    at nextTickCallback (/usr/lib/node_modules/backstopjs/node_modules/kew/kew.js:47:28)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\n  errno: -13,\n  code: 'EACCES',\n  syscall: 'open',\n  path: '/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/location.js' }\nDownloading https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2\nSaving to /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2\nReceiving...\nReceived 22866K total.\nExtracting tar contents (via spawned process)\nRemoving /usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/phantom\nCopying extracted folder /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1510129726637/phantomjs-2.1.1-linux-x86_64 -> /usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/phantom\nPhantom installation failed { Error: EACCES: permission denied, link '/tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1510129726637/phantomjs-2.1.1-linux-x86_64' -> '/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/phantom'\n  errno: -13,\n  code: 'EACCES',\n  syscall: 'link',\n  path: '/tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1510129726637/phantomjs-2.1.1-linux-x86_64',\n  dest: '/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/phantom' } Error: EACCES: permission denied, link '/tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1510129726637/phantomjs-2.1.1-linux-x86_64' -> '/usr/lib/node_modules/backstopjs/node_modules/phantomjs-prebuilt/lib/phantom'\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! phantomjs-prebuilt@2.1.16 install: node install.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the phantomjs-prebuilt@2.1.16 install script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /headless/.npm/_logs/2017-11-08T08_28_52_880Z-debug.log\nThe command '/bin/sh -c echo \"Installing BackstopJS v${BACKSTOPJS_VERSION}...\"     && npm config set registry http://registry.npmjs.org/     && chmod -R 777 /usr/lib/node_modules/     && npm install -g backstopjs@${BACKSTOPJS_VERSION}  && ln -s /usr/lib/node_modules /usr/bin/' returned a non-zero code: 1`. I found the followings: \nhttps://docs.npmjs.com/getting-started/fixing-npm-permissions\nhttps://github.com/npm/npm/issues/8165\nHope could help others.\nFor mine, I use the node6.x, and npm3.x to install the backstopjs v3.0.25 on centos7 (yum install nodejs).\nThen update the node6.x -> 8.9.1, npm3.x -> npm 5.5.1\nTested, it is okay. \n. @tbal Thank you, it works if not installing as root! Thank you!. Try the following.\nFor more info, please refer to: https://github.com/npm/npm/issues/17851#issuecomment-343666114\n```\nnpm config set user 0\nnpm config set unsafe-perm true\nnpm install\n```. Hello @VladimirPittner & @joseph-stano:\nNeed to bother you a question.\nSometimes chromy fails to capture the screenshot, because the selector in chromy.wait(selector) is not in the web page, and then chromy will wait until timeout occurs. For this case, unlike phantomjs, the chromy won't capture the screen.\nTherefore, my question is: Is there any solution to capture the sreen even the timeout or the selector not there? \nI tried the following code in chromy/onReady.js, seems wrong.\nchromy.wait(\"selector\");\nchromy.then(() => {console.log(\"Timeout occurs waiting the locator\")});\nThank you,\nKen. @garris Really appreciate for the help.\nI tried, but seems Capture is not working either. The config is as bellow.\nWould you please explain more about the how to use the Capture?\nAlso, I found an same question raised on Jul 19, 2016:\n https://github.com/garris/BackstopJS/issues/224\nNote: Sorry to tell you that we use the phantomjs as our engine, because the engine - chrome (v62) is not stable in Linux (Centos7), sometimes, for example, it should capture 4 screenshots, but with some possibilities, not all screenshots are captured. Later, we will raise a detail issue to you. Really appreciate for your help in advance.\n{\"viewports\": [\n        {\n            \"label\": \"phone\", \n            \"width\": 320, \n            \"height\": 480\n        }, \n        {\n            \"label\": \"tablet\", \n            \"width\": 1024, \n            \"height\": 768\n        }\n    ], \n    \"onBeforeScript\": \"casper/onBefore.js\", \n    \"onReadyScript\": \"casper/onReady.js\", \n    \"scenarios\": [\n        {\n            \"label\": \"Test1\", \n            \"cookiePath\": \"\", \n            \"url\": \"https://garris.github.io/BackstopJS/\", \n            \"referenceUrl\": \"\", \n            \"readyEvent\": \"\", \n            \"readySelector\": \"\", \n            \"delay\": 10000, \n            \"hideSelectors\": [], \n            \"removeSelectors\": [], \n            \"hoverSelector\": \"\", \n            \"clickSelector\": \"\", \n            \"postInteractionWait\": \"\", \n            \"selectors\": [], \n            \"selectorExpansion\": true, \n            \"misMatchThreshold\": 0.1, \n            \"requireSameDimensions\": true\n        }, \n        {\n            \"label\": \"Test2\", \n            \"cookiePath\": \"\", \n            \"url\": \"https://garris.github.io/BackstopJS/\", \n            \"referenceUrl\": \"\", \n            \"readyEvent\": \"\", \n            \"readySelector\": \"\", \n            \"delay\": 10000, \n            \"hideSelectors\": [], \n            \"removeSelectors\": [], \n            \"hoverSelector\": \"\", \n            \"clickSelector\": \"\", \n            \"postInteractionWait\": \"\", \n            \"selectors\": [], \n            \"selectorExpansion\": true, \n            \"misMatchThreshold\": 0.1, \n            \"requireSameDimensions\": true\n        }\n    ], \n    \"paths\": {\n        \"bitmaps_reference\": \"backstop_data/bitmaps_reference\", \n        \"bitmaps_test\": \"backstop_data/bitmaps_test\", \n        \"engine_scripts\": \"backstop_data/engine_scripts\", \n        \"html_report\": \"backstop_data/html_report\", \n        \"ci_report\": \"backstop_data/ci_report\"\n    }, \n    \"report\": [\n        \"browser\"\n    ], \n    \"engine\": \"phantomjs\", \n    \"casperFlags\": [\n        \"--ignore-ssl-errors=yes\", \n        \"--engine=phantomjs\", \n        \"--proxy=10.74.66.43:3128\"\n    ], \n    \"Capture\": 3, \n    \"asyncCompareLimit\": 50, \n    \"debug\": true, \n    \"debugWindow\": false\n}\nLog\n```Ken-MacBook-Pro:Institutional ken$ backstop reference\nBackstopJS v3.0.32\nLoading config:  /Users/ken/Docker/test-automation/VisualRegression/Institutional/backstop.json\nCOMMAND | Executing core for reference\n  clean | backstop_data/bitmaps_reference was cleaned.\ncreateBitmaps | Selected 2 of 2 scenarios.\nRunning CasperJS with:  [ '/usr/local/lib/node_modules/backstopjs/capture/genBitmaps.js',\n  '--ignore-ssl-errors=yes',\n  '--engine=phantomjs',\n  '--proxy=10.74.66.43:3128',\n  '--captureConfigFileName=/var/folders/sx/81945gm9197gbnxx5snbl54c0000gn/T/capture/20a06bb00fceeedb0c83fa61cd0c080a3c7e518f.json' ]\nCasperJS:  CREATING NEW REFERENCE FILES\nCasperJS:  Cookie state restored with cookies: []\nCasperJS:  Ready event received.\nCasperJS:  Current location is https://garris.github.io/BackstopJS/\nCasperJS:  SCENARIO> Test1\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Cookie state restored with cookies: []\nCasperJS:  Ready event received.\nCasperJS:  Current location is https://garris.github.io/BackstopJS/\nCasperJS:  SCENARIO> Test1\nCasperJS:  Capturing screenshots for tablet (1024x768)\nCasperJS:  Cookie state restored with cookies: []\nCasperJS:  Ready event received.\nCasperJS:  Current location is https://garris.github.io/BackstopJS/\nCasperJS:  SCENARIO> Test2\nCasperJS:  Capturing screenshots for phone (320x480)\nCasperJS:  Cookie state restored with cookies: []\nCasperJS:  Ready event received.\nCasperJS:  Current location is https://garris.github.io/BackstopJS/\nCasperJS:  SCENARIO> Test2\nCasperJS:  Capturing screenshots for tablet (1024x768)\nCasperJS:  Comparison config file updated.\nBitmap file generation completed.\nRun $ backstop test to generate diff report.\n  COMMAND | Command `reference` successfully executed in [48.435s]\n\nKen-MacBook-Pro:Institutional ken$\n```. @VladimirPittner Great post! Thank you! We will take time to try it.. @garris If we only can run 1 capture at the time for phantom, you could close ticket.\nReally appreciate for your help.. closed as PhantomJS does not have parallel feature. If you are using the docket, try: --shm-size 512m, which was posted here: https://github.com/garris/BackstopJS/issues/537. Hello @VladimirPittner : \nReally appreciate for the quick hot help.\nTo use the timeout, we would like to avoid the phantom hang issue. Sometimes, during the test, the phantom will hang there, and block the whole test. We need to stop the test manually.\nAfter searching the google, the resourceTimeout could solve the issue. So we were wondering where we need to set the config in backstops?\nWe will try with your solution, and will update to you timely.\nThank you,\nKen. Hello @VladimirPittner:\nI found that it our side issue.  We have tested, works fine now.\nHere are the configures for those who use the phantom as the engine.\nNote: Capture is not working as expected for run multiple captures. Seems with phantom, only 1 capture could be run at the time. If anyone has the solution, please let us know.\nbackstop.json:\nFor more phantomjs command lines in the CasperFlags, please refer to: http://phantomjs.org/api/command-line.html.\n{\n  \"id\": \"Demo\", \n  \"viewports\": [\n    {\n      \"label\": \"phone\", \n      \"width\": 320, \n      \"height\": 480\n    }, \n    {\n      \"label\": \"tablet\", \n      \"width\": 1024, \n      \"height\": 768\n    }\n  ], \n  \"onBeforeScript\": \"casper/onBefore.js\", \n  \"onReadyScript\": \"casper/onReady.js\", \n  \"scenarios\": [\n    {\n      \"label\": \"Demo\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0.1, \n      \"requireSameDimensions\": true\n    }\n  ], \n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\", \n    \"bitmaps_test\": \"backstop_data/bitmaps_test\", \n    \"engine_scripts\": \"backstop_data/engine_scripts\", \n    \"html_report\": \"backstop_data/html_report\", \n    \"ci_report\": \"backstop_data/ci_report\"\n  }, \n  \"report\": [], \n  \"engine\": \"phantomjs\", \n  \"casperFlags\": [\n    \"--ignore-ssl-errors=true\", \n    \"--ssl-protocol=any\",\n    \"--engine=phantomjs\", \n    \"--proxy=10.74.66.43:3128\"\n  ], \n  \"Capture\": 2, \n  \"asyncCompareLimit\": 20, \n  \"debug\": false, \n  \"debugWindow\": false\n}\ncasper/onBefore.js: Wait the page full loaded and add the timeout for wait to deal with the phantom hang issue by set the resourceTimeout & onResourceTimeout\nmodule.exports = function (casper, scenario, vp) {\n  require('./loadCookies')(casper, scenario);\n  casper.userAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36');\n  casper.page.settings.resourceTimeout = 300000;\n  casper.options.waitTimeout = 300000;\n  casper.page.onResourceTimeout = function() {\n    console.log(\"Phantomjs failed to donwload the resource in 5 minutes...\"); \n    casper.bypass(1);\n  };\n};\ncasper/onReady.js: Wait the page full loaded and add the timeout for wait to deal with the phantom hang issue\nmodule.exports = function(casper, scenario, vp) {\n    console.log('SCENARIO> ' + scenario.label);\n    require('./clickAndHoverHelper')(casper, scenario);\n    console.log(\"Wait page loaded...\");\n    // Wait page finish load\n    casper.waitFor(function check() {\n      return this.evaluate(function(status) {\n          console.log(\"Page load status: \", document.readyState);\n          return document.readyState == \"complete\";\n      });\n    }, function then() {\n      console.log(\"backstopjs_ready\");\n      var html = this.evaluate(function() {\n        return document.documentElement.outerHTML;\n      });\n      console.log(html.substring(0,50), \"...\");\n    }, function timeout() { // step to execute if check has failed\n      console.log(\"backstopjs_ready\");\n      console.log(\"timeout occured\");\n      console.log(\"exit phantomjs...\");\n      this.bypass(1);\n    });\n    // For more casper info, please refer to: http://docs.casperjs.org/en/latest/modules/casper.html\n};\nThank you,\nKen. closed as solution found. What I can think for a temp walkaround is adding the following code into onReady.js.\nBut the script is not working. And where to get the fileName. Maybe scenario.fileName? Is the parameter is open to public? \n```\nmodule.exports = function (chromy, scenario, vp) {\n  console.log('SCENARIO > ' + scenario.label);\n  require('./clickAndHoverHelper')(chromy, scenario);\n  // add more ready handlers here...\nconst fs = require('fs');\n\ntry {\n    chromy.wait(\"#SELECTOR\");\n} catch (e) {\n    if (e instanceof WaitTimeoutError) {\n        console.log(\"Wait time out occurs\");\n        chromy.screenshot();\n        chromy.result((png) => {\n            fs.writeFileSync(scenario.fileName, png);\n        });\n    } else {\n        throw e;\n    };\n};\n\n};\n```\n. @garris Yes, the 404 pages works. Sorry for that.. @garris: for the capture after timeout, could you please give me a advise. The above script is not working. I am still debugging.\nAnd we really suggest to add this feature, it could make Backstopjs more \"stable\". . @garris Thank you for the feedback. We will check the Chromy documentation.\nFor the 404, because some links are removed continuously during the CI, if 404 pages are captured, it could be a great help for us during the test. We found a improper setting in our backstop.json, and fix it. Thank you for the support for this.. @garris: Really appreciate for your help.\nWith the following onReady.js, the chrome could capture the screen if timeout.\nNot sure why we need to use: chromy.chromy\nI am totally new fresh for JS, and really appreciate for your time for the help.\nCheers.\nmodule.exports = function (chromy, scenario, vp) {\n  console.log('SCENARIO > ' + scenario.label);\n  require('./clickAndHoverHelper')(chromy, scenario);\n  // add more ready handlers here...\n    chromy.chromy\n    .wait(\"LOCATOR\")\n    .catch((e) => {\n        if (e.name == 'WaitTimeoutError') {\n                console.log(\"Wait time out occurs, screenshot is already captured...\");\n            } else {\n                throw e;\n            }\n    });\n};. @garris Sorry, no documentation, I just tried with this. And working with luck. . Final solution for capturing page if no network, or the wait timeout, and walk around the issue from https://github.com/garris/BackstopJS/issues/658 that the chrome stays in backend.\nFor the issue https://github.com/garris/BackstopJS/issues/658, make sure your locator is right if your set the locator in your backstop.json, if not right, the chrome stays in the backend, and choke your memory. And use the following solution instead.\nonReady.js\n```\nmodule.exports = function (chromy, scenario, vp) {\n  console.log('SCENARIO > ' + scenario.label);\n  require('./clickAndHoverHelper')(chromy, scenario);\n  // add more ready handlers here...\n// If no network, use the following code to close the chromy, and capture the page\n  // Bug: https://github.com/garris/BackstopJS/issues/658\n  chromy.chromy\n    .wait(() => {\n        console.log(\"Page load status: \");\n        console.log(document.readyState);\n        console.log(document.body.innerHTML);\n        return  document.readyState==\"complete\" && (document.body.innerHTML!=\"\" || document.body.innerHTML.indexOf(\"\")==-1);\n    })\n    .catch((e) => {\n        if (e.name == \"WaitTimeoutError\" || e.name == \"TimeoutError\") {\n                console.log(\"Internet is broken...\");\n                console.log(\"Blank page is captured by default...\");\n            } else {\n                throw e;\n            }\n    })\n    // Wait the locator, if the locator not found, capture the page\n    // Bug: https://github.com/garris/BackstopJS/issues/655\n//  .wait(\"LOCATOR\")\n//  .catch((e) => {\n//      if (e.name == \"WaitTimeoutError\" || e.name == \"TimeoutError\") {\n//              console.log(\"Cannot found the locator...\");\n//              console.log(\"Page is still captured by default...\");\n//          } else {\n//              throw e;\n//          }\n//  })\n};\n```\nbackstop.json\nThe timeout in the following is necessary.\nSometimes our tests are not stable, because the timeout is too shot\n{\n  \"id\": \"Institutional_PreProd\", \n  \"viewports\": [\n    {\n      \"label\": \"iPhone6,6s,7,8\", \n      \"width\": 750, \n      \"height\": 1334\n    },\n    {\n      \"label\": \"PC\", \n      \"width\": 1920, \n      \"height\": 1080\n    }\n  ], \n  \"onBeforeScript\": \"chromy/onBefore.js\", \n  \"onReadyScript\": \"chromy/onReady.js\", \n  \"scenarios\": [\n    {\n      \"label\": \"1\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0.1, \n      \"requireSameDimensions\": true\n    },\n    {\n      \"label\": \"2\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0.1, \n      \"requireSameDimensions\": true\n    }\n  ], \n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\", \n    \"bitmaps_test\": \"backstop_data/bitmaps_test\", \n    \"engine_scripts\": \"backstop_data/engine_scripts\", \n    \"html_report\": \"backstop_data/html_report\", \n    \"ci_report\": \"backstop_data/ci_report\"\n  }, \n  \"report\": [], \n  \"engine\": \"chrome\", \n  \"engineOptions\": {\n    \"waitTimeout\": 120000, \n    \"gotoTimeout\": 120000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\", \n      \"--proxy-server=10.74.66.29:3128\"\n    ]\n  }, \n  \"asyncCaptureLimit\": 4, \n  \"asyncCompareLimit\": 20, \n  \"debug\": false, \n  \"debugWindow\": false\n}\n. closed as not a issue. same issue here ;(\n```\n9223 INFO >  BackstopTools have been installed.\nChromyJS returned an unexpected error while attempting to capture a selector. TypeError: Cannot read property 'length' of null\n    at Chromy._screenshotMultipleSelectors$ (/usr/local/lib/node_modules/backstopjs/node_modules/chromy/dist/index.js:1388:27)\n    at tryCatch (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:62:40)\n    at Generator.invoke [as _invoke] (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:296:22)\n    at Generator.prototype.(anonymous function) [as next] (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:114:21)\n    at tryCatch (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:62:40)\n    at invoke (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:152:20)\n    at /usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:162:13\n    at \nChromyJS returned an unexpected error while attempting to capture a selector. TypeError: Cannot read property 'length' of null\n    at Chromy._screenshotMultipleSelectors$ (/usr/local/lib/node_modules/backstopjs/node_modules/chromy/dist/index.js:1388:27)\n    at tryCatch (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:62:40)\n    at Generator.invoke [as _invoke] (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:296:22)\n    at Generator.prototype.(anonymous function) [as next] (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:114:21)\n    at tryCatch (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:62:40)\n    at invoke (/usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:152:20)\n    at /usr/local/lib/node_modules/backstopjs/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:162:13\n    at \nRun $ backstop test to generate diff report.\n  COMMAND | Command `reference` successfully executed in [5.41s]\n\nken-JSS572:Adam ken$\n. @garris I tried to find general reproduce steps to you. Failed, seems only happens with certain situation. @andrepm06 \nFound a walkaround, set the:\"selectors\": [\"body\"]```\nThe issue gone. are there any kinds of walk-around?\nWe tried add the: chromy.close() in the onReady.js, not working.. Found the root cause: \nIf the network is break during the test, or the locator cannot be found (which is set in \"readySelector\"). These chromes will stays in the backed.\nWe suggest to fix the issue. Because for most users, they are behind the proxy, and sometimes the proxies is not stable, and the issue could appear.\nif the locator cannot be found till the timeout, no screenshot will be captured. For more info, please refer to: https://github.com/garris/BackstopJS/issues/655. Closed. I have the same issue, and found out it is because some \"dead chrome\" still in the backend.\nTry to: pgrep -c chrome to see how many chrome stays in backend.\nIf true, go to here to check solution: https://github.com/garris/BackstopJS/issues/658. @garris I am testing your latest release: 3.1.19.\nAnd will let you know the result asap.. @garris I confirmed the unstable issue is fixed.\nSo, I run the same test at home without proxy for serval times with asyncCaptureLimit=5 to capture 600 pages, all good.\nYou could close the ticket: https://github.com/garris/BackstopJS/issues/663\nI have created my own repository for Visual regression test: https://github.com/Kenith/ta-visual-lib\nHope could be the help for the community.\n. @garris we tried set startingPort to 9300. Not working.\nAnd sometimes with high possibility, the zombie chrome will prevent backstop finish test. \nHere we use docker + jenkins for run test. The test run 1 day + 10 hours. ;(\nWe strongly suggest to fix the zombie chrome as highest priority.\n\n. Finally, find a stable way for Chrome: only set the asyncCaptureLimit = 2... we have run several tests, works fine.... @garris Really appreciate for your help. For now, we all in the sprint festival. And we will get it tested on 2016.02.26. And will let you know the status on that day.\nSorry for the inconvenience.. @garris Sorry for the delay.\nToday we tested with the BackstopJS V3.1.17. \nWe have 598 images need to be captured. But still some images failed to be captured.\nWe have tested several times, here is a result for you for debug.\nExpected: 598 Images\nCaptured: 596 Images, miss 199 PC, 207 PC\n\n\nBackstopJS: Encounter warning during the installation\n\nbackstopjs.json: Here is the sample for you for re-produce purpose\n{\n  \"id\": \"Institutional_PreProd\", \n  \"viewports\": [\n    {\n      \"label\": \"iPhone6,6s,7,8\", \n      \"width\": 375, \n      \"height\": 667\n    }, \n    {\n      \"label\": \"PC\", \n      \"width\": 1920, \n      \"height\": 1080\n    }\n  ], \n  \"onBeforeScript\": \"chromy/onBefore.js\", \n  \"onReadyScript\": \"chromy/onReady.js\", \n  \"scenarios\": [\n    {\n      \"label\": \"1\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"2\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"3\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"4\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"5\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"6\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"7\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"8\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"9\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"10\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"11\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"12\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"13\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"14\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"15\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"16\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"17\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"18\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"19\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"20\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"21\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"22\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"23\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"24\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"25\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"26\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"27\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"28\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"29\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"30\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"31\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"32\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"33\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"34\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"35\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"36\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"37\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"38\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"39\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"40\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"41\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"42\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"43\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"44\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"45\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"46\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"47\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"48\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"49\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"50\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"51\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"52\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"53\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"54\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"55\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"56\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"57\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"58\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"59\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"60\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"61\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"62\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"63\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"64\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"65\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"66\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"67\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"68\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"69\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"70\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"71\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"72\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"73\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"74\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"75\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"76\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"77\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"78\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"79\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"80\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"81\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"82\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"83\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"84\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"85\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"86\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"87\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"88\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"89\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"90\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"91\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"92\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"93\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"94\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"95\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"96\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"97\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"98\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"99\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"100\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"101\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"102\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"103\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"104\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"105\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"106\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"107\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"108\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"109\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"110\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"111\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"112\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"113\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"114\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"115\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"116\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"117\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"118\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"119\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"120\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"121\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"122\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"123\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"124\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"125\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"126\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"127\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"128\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"129\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"130\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"131\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"132\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"133\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"134\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"135\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"136\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"137\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"138\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"139\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"140\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"141\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"142\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"143\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"144\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"145\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"146\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"147\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"148\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"149\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"150\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"151\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"152\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"153\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"154\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"155\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"156\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"157\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"158\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"159\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"160\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"161\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"162\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"163\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"164\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"165\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"166\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"167\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"168\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"169\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"170\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"171\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"172\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"173\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"174\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"175\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"176\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"177\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"178\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"179\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"180\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"181\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"182\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"183\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"184\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"185\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"186\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"187\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"188\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"189\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"190\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"191\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"192\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"193\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"194\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"195\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"196\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"197\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"198\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"199\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"200\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"201\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"202\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"203\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"204\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"205\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"206\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"207\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"208\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"209\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"210\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"211\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"212\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"213\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"214\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"215\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"216\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"217\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"218\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"219\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"220\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"221\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"222\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"223\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"224\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"225\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"226\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"227\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"228\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"229\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"230\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"231\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"232\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"233\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"234\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"235\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"236\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"237\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"238\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"239\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"240\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"241\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"242\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"243\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"244\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"245\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"246\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"247\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"248\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"249\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"250\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"251\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"252\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"253\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"254\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"255\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"256\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"257\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"258\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"259\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"260\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"261\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"262\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"263\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"264\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"265\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"266\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"267\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"268\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"269\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"270\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"271\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"272\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"273\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"274\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"275\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"276\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"277\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"278\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"279\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"280\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"281\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"282\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"283\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"284\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"285\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"286\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"287\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"288\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"289\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"290\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"291\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"292\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"293\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"294\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"295\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"296\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"297\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"298\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }, \n    {\n      \"label\": \"299\", \n      \"cookiePath\": \"\", \n      \"url\": \"https://garris.github.io/BackstopJS/\", \n      \"referenceUrl\": \"\", \n      \"readyEvent\": \"\", \n      \"readySelector\": \"\", \n      \"delay\": 1000, \n      \"hideSelectors\": [], \n      \"removeSelectors\": [], \n      \"hoverSelector\": \"\", \n      \"clickSelector\": \"\", \n      \"postInteractionWait\": \"\", \n      \"selectors\": [], \n      \"selectorExpansion\": true, \n      \"misMatchThreshold\": 0, \n      \"requireSameDimensions\": true\n    }\n  ], \n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\", \n    \"bitmaps_test\": \"backstop_data/bitmaps_test\", \n    \"engine_scripts\": \"backstop_data/engine_scripts\", \n    \"html_report\": \"backstop_data/html_report\", \n    \"ci_report\": \"backstop_data/ci_report\"\n  }, \n  \"report\": [], \n  \"engine\": \"chrome\", \n  \"engineOptions\": {\n    \"waitTimeout\": 120000, \n    \"gotoTimeout\": 120000, \n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\", \n      \"--proxy-server=172.17.0.1:3128\"\n    ]\n  }, \n  \"asyncCaptureLimit\": 4, \n  \"asyncCompareLimit\": 20, \n  \"debug\": false, \n  \"debugWindow\": false\n}. @garris \nGenerally speaking, it is much stable than before. And no more zombie chromes are found during the test.\nBut why we set \"asyncCaptureLimit\": 4, there is 16 chromes open during the test. You could try: pgrep -c chrome for verify. It should be 4. Maybe solve the issue, the backstop could be more stable. Correct me if I understand wrong.\nI have reported the issue previously: https://github.com/garris/BackstopJS/issues/658\nThank you,\nKen. close as fixed.\nIf still issue, try to increase the wait time out as following:\n\"engine\": \"chromy\", \n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\"\n    ]\n  },\n. Hello @joshsmith01 \nTry increase the timeout to 300000, it should solve the issue.\n\"engine\": \"chromy\", \n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\"\n    ]\n  },\nOr use Puppetter for chrome engine, sample here: https://github.com/Kenith/ta-visual-lib/tree/master/Sample/Backstop, and please set the timeout in onReady.js\n// Custom Timeout\n  await page.setDefaultNavigationTimeout(300000);\n. @heaven1025 your cookies is right.\nIf you use chrome, try to find the backstop_data/chromy/loadCookies.js, replace the\ncookie.url = 'https://' + cookie.domain; => cookie.url = 'http://' + cookie.domain;\nHere is the full sample:\n```\nvar fs = require('fs');\nmodule.exports = function (chromy, scenario) {\n  var cookies = [];\n  var cookiePath = scenario.cookiePath;\n// READ COOKIES FROM FILE IF EXISTS\n  if (fs.existsSync(cookiePath)) {\n    cookies = JSON.parse(fs.readFileSync(cookiePath));\n  }\n// MUNGE COOKIE DOMAIN FOR CHROMY USAGE\n  cookies = cookies.map(cookie => {\n    cookie.url = 'http://' + cookie.domain;\n    delete cookie.domain;\n    return cookie;\n  });\n// SET COOKIES VIA CHROMY\n  chromy.setCookie(cookies);\n  console.log('Cookie state restored with:', JSON.stringify(cookies, null, 2));\n};\n```\n. thank you! It works!!. Yes, pass the cookie should fix the redirection.\nBut please note that your local page is http protocol, not https (default).\ngo to loadCookies.js, update the https to http as following:\n// MUNGE COOKIE DOMAIN FOR CHROMY USAGE\n  cookies = cookies.map(cookie => {\n    cookie.url = 'http://' + cookie.domain;\n    delete cookie.domain;\n    return cookie;\n  });. you could refer to: https://github.com/garris/BackstopJS/issues/663\nbased on my expertise, set the asyncCaptureLimit=2 should be stable. . @krisdigital @garris Really good news!!!!!. Thank you Garris.\nWe found the issue, because we are in China and behind GFW. \nWhen trying to demo backstopjs for teammates by testing https://garris.github.io/BackstopJS/, however, the popper.min.js is failed to load, and the capture won't work because GoToTimeout error occurs.\nWait for your fix. Appreciate for your hot help in advance.\n\n. Found a walk-around, increase the timeout to 300000 as bellow.\n\"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\"\n    ]\n  },. Thank you Garris.\nWe are using puppeteer as our engine now. Thank you for the GREATTTT JOB.\nYou may close this ticket.. Closed as walk-around found.. you may try the docker image here: https://github.com/Kenith/ta-visual-lib\nHope could be the help. Thank you Garris for the comment.\nWe are trying find the walk-around, and will keep you posted. Update the centos and the issue is gone.\nNot know why. And close the issue.. try the following step by step:\n1. Run bash session via\ndocker run --rm -v $(pwd):/src -it --entrypoint=bash backstopjs/backstopjs\n\n\nThen: cd /src\n\n\nThen backstop reference to see the what happens\n\n\nAlso, you could try this docker image which is with noVNC support, easier to debug...\nHope could be the help \n. Maybe privilege issue?\ntry run with root: docker run --rm -v $(pwd):/src -u root backstopjs/backstopjs reference\nOr do you behind the proxy and slow network?\nTry to set the proxy and increase the timeout to 300000:\nBased on my experience, if timeout occurs, no references could be captured. With setting timeout is 300000, the capture works.\n\"engine\": \"chromy\", \n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\",\n      \"--proxy-server=172.17.0.1:3128\"\n    ]\n  },. You could get sample here: https://github.com/Kenith/ta-visual-lib/tree/master/Sample/Backstop. @cristissouza Backstop not support firefox well, see the bug here: https://github.com/garris/BackstopJS/issues/311. Note: For puppeteer, we could increase \"slowMo\" to decrease the mismatch. But not totally working... . @garris Sorry to tell you that, we tried to changing the width by a few pixels, not helped.. @garris we suspect it is the Chrome/Chromium side issue with 66.x\nWe are trying to revert back to Chrome/Chromium to 65.x.\nWill let you know if any news.. @garris Reverted to chrome/chromium to 65.x, still not helping.\nWould you please make this as a high priority must-fix issue for next release?\nReally appreciate for your help in advance.. @garris We found the walk-around. It is caused by the too heavy js.\nFix by adding the args to the engine options as following.\n--blink-settings=scriptEnabled=false\nWe consider this issue priority could set to low as we found the walk-around.\nThank you,\nKen. disable the javascript, because some certain sites use heavy js, and could cause the displacement issue.\nWe consider it is issue from chrome/chromium side, not backstop side.\nAnd @garris Really appreciate for this cool tool - backstop!. +1. Here are the stories.\nReally appreciate for your HOT help in advance.\nAC-1\nGIVEN I am backstop customer\nTHEN I could be able to set the retry times in backstop.json\nAND Default retry times is 1\nAC-2\nGIVEN I am backstop customer\nWHEN I have set the retry times in backstop \nAND  Some scenarios encounter errors (such as timeout error) during \"backstop reference\", \nTHEN Backstop will re-capture the pages for these scenarios based on the retry numbers\nAC-3\nGIVEN I am backstop customer\nWHEN I have set the retry times in backstop \nAND Some scenarios encounter errors (such as timeout error) during \"backstop test\", \nTHEN Backstop will re-capture the pages for these scenarios based on the retry numbers\nAC-4\nGIVEN I am backstop customer\nWHEN I have set the retry times in backstop \nAND Some scenarios encounter mis-match error during the comparing process of \"backstop test\"\nTHEN Backstop will re-capture and re-compare the pages for these scenarios based on the retry numbers. Here is my expertise to stable the backstop.\nHope could be the help to you all. \nFor more full samples, please refer to: https://github.com/Kenith/ta-visual-lib/tree/master/Sample/Backstop\n- Chromy Engine\n1. The engineOptions in backstop.json should like this, especially the timeout, which should set to 300000 (if not, when any timeout, the backstop won't capture image). Set asyncCaptureLimit to 2 if still not stable\n\"engine\": \"chromy\", \n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\",\n      \"--hide-scrollbars\"\n    ]\n  }, \n  \"asyncCaptureLimit\": 2,\n- Puppeteer Engine\n1. Suggest the following settings in backstop.json. \n\"engine\": \"puppeteer\", \n  \"engineOptions\": {\n    \"ignoreHTTPSErrors\": true,\n    \"slowMo\": 500,\n    \"args\": [\n      \"--no-sandbox\",\n      \"--disable-setuid-sandbox\",\n      \"--disable-gpu\", \n      \"--force-device-scale-factor=1\", \n      \"--disable-infobars=true\",\n      \"--hide-scrollbars\"\n    ]\n  },\n\nAdd the timeout in puppet/onBefore.js to make sure Puppeteer has enough time to wait the page finish load.\n\nawait page.setDefaultNavigationTimeout(300000);\n- PhantomJS\n1. Set the following settings in backstop.json\n\"engine\": \"phantomjs\",\n  \"casperFlags\": [\n    \"--ignore-ssl-errors=true\", \n    \"--ssl-protocol=any\",\n    \"--engine=phantomjs\"\n  ],\n\nAdd following settings in casper/onBefore.js to avoid the PhantomJS hang issue. If not set this, the phantomjs has high possibilities to hang there forever.\n\ncasper.page.settings.resourceTimeout = 300000;\n  casper.options.waitTimeout = 300000;\n  casper.page.onResourceTimeout = function() {\n    console.log(\"Phantomjs failed to donwload the resource in 5 minutes...\"); \n    casper.bypass(1);\n  };\n. Try to use docker to run. @mdiha Sorry for the delay.\nI have made a jenkins integration here: https://github.com/Kenith/ta-visual-lib/tree/master/Jenkins\n@garris \nI am working on pulling a request about Jenkins Integration to https://github.com/garris/BackstopJS/blob/master/docker/README.md.\nAny news will let you know asap. \n. @garris @mirzazeyrek @mdiha Pull request for Jenkins Guide is here: https://github.com/garris/BackstopJS/pull/790\nYou are very welcome if you have any comments.. Hello @garris, we suggest to put it in ./docker/, since the jenkins guide is based on the docker image backstopjs/backstopjs:latest. \nAlso, I have added .dockerignore to make sure the Jenkins folder won't be added to docker image.\nYou are very welcome if you have any questions.\nThank you,\nKen. Hello @garris,\nReally apologies for delay. These days are lots of drama things.\nI have moved the jenkins guide to examples.\nAnd I fully agree with your opinions about the security issue. In the coming days, I will seek help from our dev ops team for more professional jenkins settings.\nCheers,\nKen . Which engine you used for test?\nIf phantomjs, yes, the phantomjs has the hang issue... dam...\nSolve the hang issue by following:\n\nSet the following settings in backstop.json\n\n\"engine\": \"phantomjs\",\n  \"casperFlags\": [\n    \"--ignore-ssl-errors=true\", \n    \"--ssl-protocol=any\",\n    \"--engine=phantomjs\"\n  ],\n2.Add following settings in casper/onBefore.js to avoid the PhantomJS hang issue. If not set this, the phantomjs has high possibilities to hang there forever.\ncasper.page.settings.resourceTimeout = 300000;\n  casper.options.waitTimeout = 300000;\n  casper.page.onResourceTimeout = function() {\n    console.log(\"Phantomjs failed to donwload the resource in 5 minutes...\"); \n    casper.bypass(1);\n  };\nIf other engines, you could get the stable expertise here: https://github.com/garris/BackstopJS/issues/761#issuecomment-390492390\nFor docker use, you may add --privileged -v /dev/shm:/dev/shm to docker run \n. Try the following...\nPlease go to your backstopjs install path, and find your puppeteer for example, /usr/local/lib/node_modules/backstopjs/node_modules/puppeteer\n\n\nEdit the package.json, and replace the following version number to your number, assume your version is 999999\n\"chromium_revision\": \"999999\"\n\n\nCreate your own chromium to /usr/local/lib/node_modules/backstopjs/node_modules/puppeteer:\n   mkdir -p /usr/local/lib/node_modules/backstopjs/node_modules/puppeteer/.local-chromium/linux-999999/chrome-linux\n\n\nCopy your chrome to: /usr/local/lib/node_modules/backstopjs/node_modules/puppeteer/.local-chromium/linux-999999/chrome-linux\n\n\nTry to run test again....\n. ",
    "ghost": "Great program by the way @garris, I too agree with @Primajin this functionality would be perfect. I'm guessing this functionality might take some time to put into a build?\n. Can't wait for this addition to be merged, I'm currently stuck with my project until this has the green light due to soooo many failures due to the height being flagged.\n. @garris I'm not entirely sure which element is causing the height to change. Looking at the diff it's as if the initial screenshot is sharp and the test screenshot is fuzzy which sometime moves the height randomly from -1 to -22. I'm not able to use content stubs as we need a tool to run in the production environment.\n. Hey @jtuds @garris have you managed to look into this fix by any chance?\nMany thanks. @jtuds that's would be amazing! . I have google-chrome-stable v62 installed on my CI server. The reference run logs don't show any error, but bitmaps_reference folder is not created under backstop_data.\n``\n...\nStarting Chromy: port:9432 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=1366,738\nCREATING NEW REFERENCE FILES\nCookie state restored with: []\nSCENARIO > <Scenario_Name>\nRun$ backstop test` to generate diff report.\n  COMMAND | Command `reference` sucessfully executed in [221.072s]\n\n```\nHere's the test run:\nStarting Chromy: port:9432 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=1366,738\nCookie state restored with: []\nSCENARIO > <Scenario_Name>\n       COMMAND | Executing core for `report`\n       compare | Chromy error: Error. See scenario \u2013 <Scenario_Name>\n...\n       report | Test completed...\n       report | 0 Passed\n       report | 211 Failed\n       report | Writing jUnit Report\n       report | Writing browser report\n       report | jUnit report written to: backstop_data/ci_report/report.xml\n       report | Browser reported copied\n       report | Copied configuration to: /var/lib/jenkins/jobs/VisualRegressionTests/workspace/node_modules/backstopjs/backstop_data/html_report/config.js\n      COMMAND | Executing core for `openReport`\n   openReport | Opening report.\n       report | *** Mismatch errors found ***\n      COMMAND | Command `report` ended with an error after [0.37s]\n      COMMAND | Command `test` ended with an error after [214.946s]\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! backstopjs@3.0.31 test: `node ./cli/index.js test`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the backstopjs@3.0.31 test script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nHave attached the log of the Jenkins job.\nlog.txt. I replaced the actual scenario name with a placeholder - . Didn't think it would matter. I haven't changed the scenario names from when I was on version 2 using phantomJS.\nHere's how I initialised my Jenkins job:\nnpm install backstopjs\ncd node_modules/backstopjs\nnpm i chromy\nnpm run genConfig\nReplaced the backstop.json file with my own. Except that, I have kept all other files untouched.\nMy reference build:\ncd node_modules/backstopjs\nnpm run reference\nMy test build:\ncd node_modules/backstopjs\nnpm run test. Here's a snippet of my config file:\n{\n  \"id\": \"My_ID\",\n  \"viewports\": [\n    {\n      \"name\": \"desktop\",\n      \"width\": 1366,\n      \"height\": 738\n    }\n  ],\n  \"onBeforeScript\": \"chromy/onBefore.js\",\n  \"onReadyScript\": \"chromy/onReady.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"My_Label\",\n      \"url\": \"My_URL\",\n      \"selectors\": [],\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 0,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \"\",\n      \"clickSelector\": \"\",\n      \"postInteractionWait\": \"\",\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\" : 0.3,\n      \"requireSameDimensions\": false\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\", \"CLI\", \"CI\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false,\n  \"ci\": {\n    \"format\" :  \"junit\" ,\n    \"testReportFileName\": \"report\",\n    \"testSuiteName\" :  \"backstopJS\"\n  }\n}. > It's now not advised to cd into the backstop directory and write files there. You can move your config file out to a more conventional workspace. This may be causing your issue.\nSure. I'll try doing that. Thanks.\n\nAlso, could this be an issue? \"url\": \"My_URL\",\n\nAgain, just replaced the actual test environment URL with a place holder.. I removed my config file from backstopjs folder and ditched the local installation for global. Still no reference bitmaps created on Jenkins. On the bright side, my git repo and Jenkins workspace look much leaner now. :D\nHere's my new Jenkins configuration now:\nNodeJS v8.8.1\ncd ui_testing\nbackstop $runType\nrunType is parametrised with \"init\", \"reference\" and \"test\" as required.\n@mirzazeyrek - Any help would be appreciated. Thanks.. Not an issue with backstopjs. Looks like a connection error, either on my server or on chromy, that is resulting in screenshots not getting generated. Will add more details once I find the exact issue. Closing this.\n@mirzazeyrek @garris - Thanks again for your time.. Looks like the starting port feature was landed so you should probably close this now.\nhttps://github.com/garris/BackstopJS/releases/tag/v3.0.37. Share your config file.\nI had the same problem before... maybe I can try to help.. > {\n  \"id\": \"backstop_ui\",\n  \"viewports\": [\n    {\n      \"label\": \"MobileS\",\n      \"width\": 320,\n      \"height\": 984\n    },\n    {\n      \"label\": \"MobileM\",\n      \"width\": 375,\n      \"height\": 984\n    },\n    {\n      \"label\": \"MobileL\",\n      \"width\": 425,\n      \"height\": 984\n    },\n    {\n      \"label\": \"Tablet\",\n      \"width\": 768,\n      \"height\": 984\n    },\n    {\n      \"label\": \"Laptop\",\n      \"width\": 1024,\n      \"height\": 984\n    },\n    {\n      \"label\": \"LaptopL\",\n      \"width\": 1440,\n      \"height\": 984\n    },\n    {\n      \"label\": \"4K\",\n      \"width\": 2560,\n      \"height\": 984\n    }\n  ],\n  \"onBeforeScript\": null,\n  \"onReadyScript\": null,\n  \"scenarios\": [\n    {\n      \"label\": \"UI Library - Test Results\",\n      \"cookiePath\": \"\",\n      \"url\": \"http://localhost:6767/\",\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 500,\n      \"selectors\": [\".rsg--preview-63\"],\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \"\",\n      \"clickSelector\": \"\",\n      \"postInteractionWait\": \"\",\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\": 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\", \"CLI\"],\n  \"engine\": \"chrome\",\n  \"port\": 3001,\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\n. Thanks for quick update.. Can anyone has the solution for Control + Click OR drag drop in iframes using puppeteer ? Please help. ",
    "cdaringe": "im not sure i'm following this thread full well, but i have a similar problem.\nthe phantomjs on my ci server behaves differently than on my MBP.\n\nReport: {\n  \"isSameDimensions\": false,\n  \"dimensionDifference\": {\n    \"width\": 0,\n    \"height\": 1\n  },\n  \"misMatchPercentage\": \"0.00\",\n  \"getDiffImage\": null\n}\nThreshold: 1\neven w/ a mistmatch of 50, this still tanks.  im going for a rough pass here, so im willing to be a little sloppy.  does someone see what im missing?\nThx!. @Primajin, thx!\n\ncompare | ERROR { size: isDifferent, content: 0.00%, threshold: 50% }: Octagon \\.png\n   See: /\\/\\.png\n\n@jtuds, looks cool, and close to being merged :)\n. @jtuds, if you need help finishing up the addition change requests, let me know.. pulling this now to finish the work. i pulled it, only to find that it looks like the follow ups were already addressed. are we g2g on this?. sh\nbackstop_1      | BackstopJS v3.0.26\nbackstop_1      | Loading config:  /src/backstop.json\nbackstop_1      |\nbackstop_1      | COMMAND | Executing core for `test`\nbackstop_1      | createBitmaps | Selected 1 of 1 scenarios.\nbackstop_1      |\nbackstop_1      | Running CasperJS with:  [ '/usr/local/lib/node_modules/backstopjs/capture/genBitmaps.js',\nbackstop_1      |   '--engine=slimerjs',\nbackstop_1      |   '--captureConfigFileName=/tmp/capture/8b6d155b141e131ced4ccb87e68a5a44bc7dbfdd.json' ]\nbackstop_1      | CasperJS:  Using screen size 1920x1080\nbackstop_1      | CasperJS:  Ready event received.\nbackstop_1      | CasperJS:  Current location is http://staticserver:3333\nbackstop_1      | CasperJS:  SCENARIO > Octagon\nbackstop_1      | CasperJS:  Capturing screenshots for desktop (1600x900)\nbackstop_1      | CasperJS:  Comparison config file updated.\nbackstop_1      |\n^ it says it has a big screen... but all my images have a clear, truncated width. hmmm. it looks like casper/ff is not rendering my app (react-styleguidist) properly.  heres a snap using selector document: https://static.cdaringe.com/img/casper-truncated-view.png\nit doesn't render for me in all my versions of FF otherwise.  it is precisely this web-app: https://tripwire.github.io/octagon/. i find requireSameDimentions more clear as well.  thx!. do these need to be checking for falsly values? for example, if the scenario says false, but the config says true, the higher precedence scenario will be trumped. ",
    "ianunay": "@garris \n\n. Hi, I've changed and tested it, the result is better but there is still considerable difference\n\n. ",
    "tyler36": "OK ... did some more testing. Seems there an issue if I install via YARN.\nOn top of a fresh copy of Laravel, it works via NPM.\nOn top of a fresh copy of Lavavel, it fails via YARN.\nSeems YARN is screwing something up somewhere, so no need to do anything. Feel free to close the ticket.\n. Seems there are issue with YARN and phantomJS that may be related:\nyarn/issues/987, yarn/issues/1015, yarn/issues/1016, \n. Hi Garris,\nThe example scripts helped me understand better. Really loving the Chromy version. It feels faster and unlike PhantomJS, I don't have to use old CSS (old flexbox style) or polyfill JS (no es6-promise) to make sure the site works properly in the tests.\nCan't wait for the final release.\nFYI, I ended up with the simple item below.\nreturn chromy\n        .goto( 'https://demo.dev/login' );. Resolved by installing Chrome Canary. Resolved by installing 'Chrome Canary'\nShame the latest versions require a pre-release Chrome :(. OK ... seems binaries can be manually downloaded here\nhttps://storage.googleapis.com/chromium-browser-snapshots/Win_x64/%VERSION%/chrome-win32.zip \nwhere %VERSION% => 555668. Managed to get it upgrade with a workaround script\ncross-env NODE_TLS_REJECT_UNAUTHORIZED=0 yarn upgrade backstopjs\nNot really a solution but .... @aliu145, no. I wasn't sure what to do it with. \nI went with temporarily adding a new script command in my package.json\n\"scripts\": {\n...\n        \"bypass\": \"cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 yarn upgrade backstopjs\",\n...\n}\nRunning this command ( yarn bypass), allowed me to install it. Then I removed the command since NODE_TLS_REJECT_UNAUTHORIZED=0 basically turns off protection.\n\nNote, I have cross-env installed globally, so you will need to install it if you don't have it already.. node -v\nv9.11.1. Just ran sanity check in PowerShell (5.1.17134.48)\n```\n...\nWriting location.js file\nDone. Phantomjs binary available at I:\\temp\\backstopSanityTest\\node_modules\\phantomjs-prebuilt\\lib\\phantom\\bin\\phantomjs.exe\n\n\npuppeteer@1.4.0 install I:\\temp\\backstopSanityTest\\node_modules\\puppeteer\nnode install.js\n\nERROR: Failed to download Chromium r555668! Set \"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" env variable to skip download.\n{ Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1046:34)\n    at TLSSocket.emit (events.js:180:13)\n    at TLSSocket._finishInit (_tls_wrap.js:633:8) code: 'SELF_SIGNED_CERT_IN_CHAIN' }\nnpm WARN enoent ENOENT: no such file or directory, open 'I:\\temp\\backstopSanityTest\\package.json'\nnpm WARN ajv-keywords@3.2.0 requires a peer of ajv@^6.0.0 but none is installed. You must install peer dependencies yourself.\nnpm WARN backstopSanityTest No description\nnpm WARN backstopSanityTest No repository field.\nnpm WARN backstopSanityTest No README data\nnpm WARN backstopSanityTest No license field.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\\fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! puppeteer@1.4.0 install: node install.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the puppeteer@1.4.0 install script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\testuser\\AppData\\Roaming\\npm-cache_logs\\2018-05-21T00_22_36_708Z-debug.log\ninternal/modules/cjs/loader.js:550\n    throw err;\n    ^\nError: Cannot find module 'I:\\temp\\backstopSanityTest\\node_modules\\backstopjs\\cli\\index.js'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:548:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:475:25)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:695:10)\n    at startup (internal/bootstrap/node.js:201:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:516:3)\n. In my case, I am unable install puppeteer via npm. So for me, it seems to be a _puppeteer issue_ and NOT a backstopjs issue.\n\u03bb  npm install puppeteer\n\npuppeteer@1.4.0 install I:\\temp\\pup\\node_modules\\puppeteer\nnode install.js\n\nERROR: Failed to download Chromium r555668! Set \"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" env variable to skip download.\n{ Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1046:34)\n    at TLSSocket.emit (events.js:180:13)\n    at TLSSocket._finishInit (_tls_wrap.js:633:8) code: 'SELF_SIGNED_CERT_IN_CHAIN' }\nnpm WARN enoent ENOENT: no such file or directory, open 'I:\\temp\\pup\\package.json'\n```. @garris, no problems :)\nThanks for the great software!. @cesar-bedoya\nThanks. With Kaspersky protection running, it fails. Disabled the software and it worked. \nI still think disabling security is not a solution but since the problem is with an external package ( Puppeteer) and the installed security suite, I suspect there's nothing @garris can do.\nThank you both for your time and help!. ",
    "Ruskyj": "@tyler36 I can confirm, having the same issue (with the same error output) when installed via Yarn. Works fine with regular NPM install. \nOSX 10.11.6\nNODE: 4.2.1\nNPM: 2.14.7\n. ",
    "joaocunha": "FYI this fix already hit backstop@beta.\n. ",
    "AngeIII": "It seems this typo persist in system in mroe files: https://github.com/garris/BackstopJS/search?utf8=%E2%9C%93&q=selctorExpansion\n. ",
    "ioneyed": "I have the same issue and Casper.off() doesn't exist in 1.1.0-5-beta. I am currently using the latest BackstopJS and have phantomJS 2.1.1.\nIf I remove any of the customized casper scripts it works just fine but that doesn't allow me to authenticate in my flow to ensure I get different user perspectives. Any thoughts?. ",
    "rasenplanscher": "I'm basically with @Primajin here. What's the value of running reference before test? That way you will always have passes.... You could just as well remove backstop from your build and be done a lot faster... What am I missing?. @garris I do understand that. What I don't get is the value of what @mirzazeyrek does:\nbackstop reference --configPath=chrome_blog_portfolio_15_08_2016_08_43_14.json || true\nbackstop test --configPath=chrome_blog_portfolio_15_08_2016_08_43_14.json || true\nHe uses the same config file for both reference and test, in that order. That means, no matter what happens during his test session, he will always receive the same images as are already in his references. Therefore he can never have failing tests. And that means his tests are fully moot.. OK, I see \ud83e\udd14 \n@mirzazeyrek Care to elaborate?. @mirzazeyrek \nAh, yes. I thought you were pointing the tests to the same URLs as the reference since you use the same config file for both reference and test. I didn't think of the referenceUrl setting. Now, it gels \ud83d\udc4d thank you!. @gael-boyenval \nI can not confirm your assertion. Using phantomjs-prebuilt@2.1.14, the sample from http://codepen.io/team/css-tricks/pen/EKEYob?editors=1000 works. What am I missing?. And what is the issue with that? Your issue description was that phantomJS would not support flex-box, not that you would need prefixes.. @gael-boyenval \nSorry, I somehow didn't catch that \ud83d\ude2c . I do second the point that the testing setup should ideally be as close to production as possible without sacrificing speed, which nightmare may accomplish very well.. Close this?. ",
    "10kc-zack": "@garris Great work on the project. Are there any plans to keep an updated changelog and tags for the project? I'd love to be able to see what new features have been added to each release!. ",
    "BBlackwo": "Would also love to see a changelog @garris . A readme update definitely shouldn't fail the docker cloud build. Can't see the details to fix it though.. Any chance you can merge this one in @garris? It's been sitting around for almost a week now.. @brendonbarreto being able to set it on the config file sounds reasonable. Maybe you can submit a PR for that :)\n@garris thanks for the merge. Sorry I didn't see that section in the readme.\nAlso with the quotes, before my change if you ran --filter=\"My Scenario Name\" the quotes would be stripped off when running the docker command. My change always puts them in case of spaces. The process.argv array didn't include the quotes in the arg, but just treated each arg as a string.. Added it also to the table of contents in #838. @garris any update on this?. Good suggestion @garris. I made that change. Also my editor removed all the trailing spaces \ud83e\udd37\u200d\u2642\ufe0f. . @garris sure thing. Below is a screenshot and also a recording:\n\n. Hey @garris we tried rebasing, and still have the same issue. I believe the issue is the script that copies the diverged script from the npm module:\njson\n\"build-compare\": \"cp ./node_modules/diverged/src/diverged.js ./compare/output/ ...\"\nMight have something to do with commit 6e6b839 and/or commit d8a930a where you updated the diverged dependency and the output/diverged.js file.\nSo as far as I can tell, there's a difference between ./node_modules/diverged/src/diverged.js and what was checked in under ./compare/output/ -- and we've just done a fresh npm install, so it seems the issue is the version of diverged in the package-lock.json. \nSo we can revert our changed files, but the next time someone does an npm install and then runs build-compare the change will come back.. ",
    "tk8817": "@garris appreciate the viewpoint - I can get behind that :) \n. @joelgrimberg - Not to condescend, but to ensure you know, backstopjs is a node application and cypress.io is javascript running within the actual browser. The two libraries are largely incompatible, without a fair bit of elbow grease.\nhttps://docs.cypress.io/guides/references/trade-offs.html#Inside-the-browser \n. ",
    "obecker": "This is a great enhancement. Thanks! It would be great if the latest backstopjs version is also available via npm. Currently I get only 2.0.6 and it took me a while to figure out why require('backstopjs') didn't work.\n. Thanks for your input.\nI just figured out how to get more information about problems with casper and/or slimer:\nadd the following casper flags:\n\"casperFlags\": [\n    \"--verbose\",\n    \"--debug=true\"\n  ]\nIt turned out that it is indeed a display problem.\nI will close this issue - perhaps a note in the documentation about these flags might be useful for other users with similar problems.. ",
    "maban": "Hmmm, I must be doing something wrong then. Thanks so much for the quick response!\nJust to check I'm not misunderstanding the feature though, if I had multiple elements with a class of jumbotron on the page, should it capture a screenshot and do a comparison for each?\n. Ok, I'm definitely doing something wrong then. Thanks again!\n. ahhhhh that's why it's not working! I would love this feature, could you let me know when it's released, or if there's anything I can do to help, such as testing?\n. @garris I know what it is now! It's a typo in your code \u2013 selctorExpansion instead of selectorExpansion. I'm not sure if that was an intentional shortening or not.\n. I'm guessing this is an unintentional typo because the documentation spells it correctly. I can confirm the code works with selctorExpansion.\n. I've been having quite a bit of fun with this feature today, haven't come across any issues. Works really well, and I've been trying it out with 300+ selectors in total. I'm using it to do comparisons of all the components in a style guide locally vs production.\nThe only problem with this is that when I add a new component, Backstop compares it with what was previously that number. But that's a limitation with what I'm doing, not a bug with the feature. So I'm trying to think of a way to compare things with the same id that I've given it without typing all 300 ids in the JSON file!\nStill, being able to automatically take screenshots of all selectors is great. \ud83d\udc4d \n. It's very kind of you to look into it, as it probably is a little out of scope.\nI'm using BackstopJS to take a screenshot of each component (pattern/module/design) in this styleguide: https://snyk.io/styleguide/section-base and I'm comparing it with a local version of the styleguide. This is so that, when I'm making changes to a component's CSS, I can run a test to see if any other components have unintentionally changed (leaking CSS styles).\nMy styleguide is a list of components generated using KSS, and when I add a new component, that gets inserted into the styleguide in alphabetical order.\nWhat that means is, on the production environment, and my local environment, my list looks like this:\napple\nbanana\norange\npear\nand running a comparison does this:\n1. apple = 1. apple \ud83d\udc4d\n2. banana = 2. banana \ud83d\udc4d\n3. orange = 3. orange \ud83d\udc4d\n4. pear = 4. pear \ud83d\udc4d\nbut when I add a component, my local environment looks like this:\n1. apple\n2. banana\n3. pineapple < let's say this is the one I've just added\n4. orange\n5. pear\nbut the list of components in my production environment hasn't changed, so this is how Backstop compares it:\n1. apple = 1. apple \ud83d\udc4d\n2. banana = 2. banana \ud83d\udc4d\n3. orange = 3. pineapple \ud83d\udc4e\n4. pear = 4. orange \ud83d\udc4e\nHere's how I'm writing the scenarios (shortened for brevity):\n\"scenarios\": [\n  {\n    \"label\": \"Base styles\",\n    \"url\": \"https://snyk.io/styleguide/\",\n    \"referenceUrl\": \"http://localhost:8000/styleguide/\",\n    \"selctorExpansion\": true,\n    \"selectors\": [\n      \".kss-modifier__example\"\n    ],\n  },\n  \u2026\n]\nAnd I get lovely reports like this:\n\nBut, If I add another component to my styleguide, that'll fail all the components in the list that come after it, because it's now comparing 2 completely different components, like this:\n\nAll my components have unique id attributes. The way I'd love this to work is for Backstop to compare ids (or even data- attributes) across 2 environments, but in a way where I don't have to explicitly say what those ids are. But it feels like a big ask.\nDoes this make sense? I can probably elaborate more, but it does feel out of scope for this feature.\n. Hah! Yes, that would definitely work! I hadn't thought of using removeSelectors, such a simple solution. Thank you so much for considering my use case. \ud83d\ude00\n. @patriciamarchand I got round this by using Slimer as the rendering engine instead of the default Phantom. You'll need to install Slimer and then add this to the JSON file:\n\"engine\": \"slimerjs\"\n. ",
    "johannesjo": "Same error with 7.0.0 and 6.9.1. I'm on Ubuntu 16.10.\n. ",
    "joschka": "I had the same issue on Mac OSX 10.11 with different node versions. Removing local fake fs did the trick:\nhttps://github.com/casperjs/casperjs/issues/1608#issuecomment-223821760\n. ",
    "michalkvasnicak": "Try to add \"openReport\": false to backstop.json.\n. ",
    "gael-boyenval": "@garris @michalkvasnicak thanks ! didn't see that one\u2026 sorry \n. Edit : use nightmare => https://github.com/segmentio/nightmare#api\nsimple API, under the hood it's electron.\nsomeone dev that, if that can be of any help : https://github.com/MisumiRize/nightmare-screenshot. @carryonZhang : no this will not work. \nIf the Backstop team choose to implement nightmare, they will have to write compatibility code.\nThat is not the case at the moment. \nif your problem is relative to flex layout, I worked around it by setting the autoprefixer's browser-list with iOS 8.1 to get the -webkit-flex... prefixes. \njson\n\"browserslist\": [\n      \"> 1%\",\n      \"last 2 versions\",\n      \"iOS 8.1\"\n  ],\nIt doesn't feel right to have to generate more code than necessary in order to get backstop to display properly. :(\n. @garris, thank's for the reply. I understand your position. \nYet I think that the headless browser you use for regression tests should not be the one you write compatibility CSS for. It should (ideally) being the reflect of the modern browser you target. \nAnd Phantomjs has been very very slow at implementing new features, and seeing the number of non-solved issues, it seem that they will not catch up soon.\nIn the other hand electron is maintained by GitHub, very modern and known to be 2 times faster (in some cases).\nI wrote a little test, using nightmarejs, nightmare-screenshot and blink-diff, and it seem promising. I'll show you the result if I go further. \n. @rasenplanscher : your sample is using bullet-proof vendor prefixes.\n```css\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n-webkit-flex-flow: row wrap;\n```. @rasenplanscher flex-box is prefix free, like every CSS supported properties. Vendor prefixes are specific vendors implementations of flex-box, not flex-box.\nSo yes phantomJS not supporting flex box is an absolutely valid issue description.\nThe problem, has I mentioned it in a previous message, is that I add auto prefixers to my build process. (like in any good css workflow). In order to make PhantomJS display flex correctly, I have to add old browser support to my autoprefixer, or manually add vendors prefixs (like in the Stone Age)\n. It's obviously more code or more work than required.\nBut I already said all that\u2026 ;-)\n   . ",
    "jedybeavis": "thanks = backstop reference is working\nNow backstop test not working\n. ",
    "radicalbender": "Yes, the *** is meant to anonymize the client that I'm working on. :)\nI deleted the backstop_data directory. I also tried removing it from package.json, running npm prune and then installing everything from scratch, and I'm still getting the exact same error.\nI also tried chmod 777 backstop_data just to see if that was the problem. Still nothing.\n. Here's what I am getting (I'm leaving out the full source code because it's extensive):\n````\nCasperJS: \nCasperJS: [info] [phantom] Step anonymous 88/90: done in 5640ms.\nCasperJS:  [info] [phantom] Step anonymous 89/90: done in 5658ms.\nCasperJS:  Capturing screenshots for tablet_h (1024x768)\nCasperJS:  [debug] [phantom] Capturing page to /Users/*/Sites//backstop_data/bitmaps_test/20161128-140232/_0_document_2_tablet_h.png\nCasperJS:  [info] [phantom] Capture saved to /Users/*/Sites//backstop_data/bitmaps_test/20161128-140232/_0_document_2_tablet_h.png\nCasperJS:  [info] [phantom] Step anonymous 90/90: done in 5856ms.\nCasperJS: [info] [phantom] Done 90 steps in 5857ms\nCasperJS:  Comparison config file updated.\nCasperJS:  [debug] [phantom] Navigation requested: url=about:blank, type=Other, willNavigate=true, isMainFrame=true\nCasperJS:  [debug] [phantom] url changed to \"about:blank\"\nBitmap file generation completed.\nCOMMAND | Executing core for report\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError: Stream not writable\n    at ChunkStream.write (/Users/*/Sites//node_modules/pngjs/lib/chunkstream.js:46:24)\n    at PNG.write (/Users//Sites/***/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:525:20)\n    at emitOne (events.js:77:13)\n    at ReadStream.emit (events.js:169:7)\n    at readableAddChunk (_stream_readable.js:146:16)\n    at ReadStream.Readable.push (_stream_readable.js:110:10)\n    at onread (fs.js:1738:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:576:17)\n````. ",
    "verpixelt": "Same here\n``\n      COMMAND | Executing core forreport`\nUncaught exception: Stream not writable Error: Stream not writable\n    at ChunkStream.write (/usr/local/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at PNG.write (/usr/local/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:555:20)\n    at emitOne (events.js:96:13)\n    at ReadStream.emit (events.js:188:7)\n    at readableAddChunk (_stream_readable.js:176:18)\n    at ReadStream.Readable.push (_stream_readable.js:134:10)\n    at onread (fs.js:2004:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:681:17)\n/usr/local/lib/node_modules/backstopjs/cli/index.js:57\n    throw err;\n    ^\nError: Stream not writable\n    at ChunkStream.write (/usr/local/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at PNG.write (/usr/local/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:555:20)\n    at emitOne (events.js:96:13)\n    at ReadStream.emit (events.js:188:7)\n    at readableAddChunk (_stream_readable.js:176:18)\n    at ReadStream.Readable.push (_stream_readable.js:134:10)\n    at onread (fs.js:2004:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:681:17)\n```. ",
    "web-bert": "Same here on Node v8.9.3 and Backstop v3.0.37\n```bash\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\nError: Stream not writable\n    at module.exports.ChunkStream.write (/Users/xxx/node_modules/node-resemble-js/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at exports.PNG.PNG.write (/Users/xxx/node_modules/node-resemble-js/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:639:20)\n    at emitOne (events.js:116:13)\n    at ReadStream.emit (events.js:211:7)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at ReadStream.Readable.push (_stream_readable.js:208:10)\n    at onread (fs.js:2050:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:658:17)\n```. ",
    "dellabravo": "Same here. Any update on this? \nNode v9.6.1 backstop v3.1.19\n~~~~\ncompare | OK: About jcsi_test_About_0_document_2_tablet_h.png\nevents.js:112\n      throw er; // Unhandled 'error' event\n      ^\nError: Stream not writable\n    at module.exports.ChunkStream.write (/Users/dellabaines/.nvm/versions/node/v9.6.1/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/chunkstream.js:46:24)\n    at exports.PNG.PNG.write (/Users/dellabaines/.nvm/versions/node/v9.6.1/lib/node_modules/backstopjs/node_modules/node-resemble-js/node_modules/pngjs/lib/png.js:92:16)\n    at ReadStream.ondata (_stream_readable.js:646:20)\n    at ReadStream.emit (events.js:127:13)\n    at addChunk (_stream_readable.js:269:12)\n    at readableAddChunk (_stream_readable.js:256:11)\n    at ReadStream.Readable.push (_stream_readable.js:213:10)\n    at fs.read (fs.js:2123:12)\n    at FSReqWrap.wrapper [as oncomplete] (fs.js:680:17)\n      compare | OK: News jcsi_test_News_0_document_0_phone.png\n~~~~. Yeah, sanity check worked and after running it I'm no longer seeing the 'Stream not writable error' when running from my project.\nThanks!\n. ",
    "rafalbromirski": "Same OS (OS X 10.11.6), same firefox (50), same node (7.1.0) & same npm (3.10.9/8) - so it's still a mystery. ",
    "n1313": "This could be happening for a multitude of reasons. Most probably something has changed in the way you present this document to backstop. I had a similar issue when one of my dependencies (not backstop) has updated and brought some new styles with it, which looked nice but produced a 10px narrower boxes for my components. Which resulted in all my tests failing in a similarly stripey way. . I finally sat down to implement this, but the initial setup is... confusing. I've forked the repo and cloned it to my local machine, but the app complains about running in \"legacy mode\" and insists on writing stuff to ~/ for some reason. Am I missing something? Is there a contributing guide? If I comment this bit out then things work but I'm not sure if this is a correct approach :) Please advise.\nP.S. Some of the tests are failing because the badge now says \"BETA available now\". Is this intentional? . I have made an attempt at fixing this, please see the PR. I am not familiar with the codebase so I didn't try to do grouping tests by scenario, and so there is a requirement to have expect in every scenario block if you decide to use it. There are some lint errors and failing tests in the repo, they are there before my PR, I could fix them but I don't think it should be done in this PR. . Any updates?. I think you have a few options on top of what you've already mentioned. Unfortunately, all of them are compromises of some kind or other, and you'll have to find the combination that works best for you and your project.\n\nYou could raise misMatchThreshold to make your tests ignore small differences in font rendering.\nYou could add a little bit of extra styling to make your layout move around less, or change your testing selectors to test parts that change the most separately from parts that change the least.\nYou could change your font to one that produces less rendering differences (maybe just for testing), or hide elements that produce rendering differences.\nYou could generate two sets of reference screenshots, one for each env.\n. I did that, npm show is an alias of npm view. . https://github.com/garris/BackstopJS/issues/679 references the same error message, but I don't think it is relevant as I'm using a plain JSON file as my config.. @garris Thank you for your response! The sanity check works, here's the output (I ran reference first to generate test images):\n\n```\n$ node ./node_modules/backstopjs/cli/ init; node ./node_modules/backstopjs/cli/ test --docker\nBackstopJS v3.5.10\nCOMMAND | Executing core for \"genConfig\"\ngenConfig | Copying '/[path]/backstopSanityTest/node_modules/backstopjs/capture/engine_scripts' to '/[path]/backstopSanityTest/backstop_data/engine_scripts'\ngenConfig | Configuration file written at '/[path]/backstopSanityTest/backstop.json'\n  COMMAND | Command \"genConfig\" successfully executed in [0.019s]\nBackstopJS v3.5.10\nLoading config:  /[path]/backstopSanityTest/backstop.json\nCOMMAND | Executing core for \"test\"\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/[path]/backstopSanityTest\",target=/src backstopjs/backstopjs test \"--_=test\" \"--h=false\" \"--help=false\" \"--v=false\" \"--version=false\" \"--i=false\" \"--moby=true\" \"--config=backstop.json\" \"--moby\"\nBackstopJS v3.5.10\nLoading config:  /src/backstop.json\nCOMMAND | Executing core for \"test\"\ncreateBitmaps | Selected 1 of 1 scenarios.\nCookie state restored with: [\n  {\n    \"path\": \"/\",\n    \"name\": \"yourCookieName\",\n    \"value\": \"yourCookieValue\",\n    \"expirationDate\": 1798790400,\n    \"hostOnly\": false,\n    \"httpOnly\": false,\n    \"secure\": false,\n    \"session\": false,\n    \"sameSite\": \"no_restriction\",\n    \"url\": \"https://.www.yourdomain.com\"\n  }\n]\nCookie state restored with: [\n  {\n    \"path\": \"/\",\n    \"name\": \"yourCookieName\",\n    \"value\": \"yourCookieValue\",\n    \"expirationDate\": 1798790400,\n    \"hostOnly\": false,\n    \"httpOnly\": false,\n    \"secure\": false,\n    \"session\": false,\n    \"sameSite\": \"no_restriction\",\n    \"url\": \"https://.www.yourdomain.com\"\n  }\n]\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nSCENARIO > BackstopJS Homepage\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nSCENARIO > BackstopJS Homepage\nx Close Browser\nx Close Browser\n      COMMAND | Executing core for \"report\"\n      compare | OK: BackstopJS Homepage backstop_default_BackstopJS_Homepage_0_document_0_phone.png\n      compare | OK: BackstopJS Homepage backstop_default_BackstopJS_Homepage_0_document_1_tablet.png\n       report | Test completed...\n       report | 2 Passed\n       report | 0 Failed\n       report | Writing browser report\n       report | Resources copied\n       report | Copied configuration to: /src/backstop_data/html_report/config.js\n      COMMAND | Executing core for \"openReport\"\n   openReport | Opening report.\n      COMMAND | Command \"report\" successfully executed in [0.143s]\n      COMMAND | Command \"test\" successfully executed in [2.12s]\nCOMMAND | Executing core for \"openReport\"\nopenReport | Opening report.\n   COMMAND | Command \"test\" successfully executed in [3.701s]\n$\n```\nDoes this mean the problem is in my config?. After comparing the outputs I have noticed that docker is called differently in my code and in sanity check repo:\nSanity check:\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/[path]\",target=/src backstopjs/backstopjs test \"--_=test\" \"--h=false\" \"--help=false\" \"--v=false\" \"--version=false\" \"--i=false\" \"--moby=true\" \"--config=backstop.json\" \"--moby\"\nMine (note the second \"--config=backstop.config.json\" in the end of arguments list):\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/[path]\",target=/src backstopjs/backstopjs test \"--_=test\" \"--h=false\" \"--help=false\" \"--v=false\" \"--version=false\" \"--i=false\" \"--moby=true\" \"--config=backstop.config.json\" \"--moby\" \"--config=backstop.config.json\"\nThis led me to the source of the problem: --config together with --docker fails. If I run sanity check with --config=backstop.json, it fails with the same Cannot set property 'tempCompareConfigFileName' of undefined error. . @garris yep, I'll do that. Thanks for confirming the issue!. ",
    "carryonZhang": "Hi! Do you konw how to put nightmare into backstop, I mean make nightmare to be a part of config of backstopjs.. just install nightmare in local path, and change the property of \"engine\" to be nightmare?. Thank you for your reply! It helps me to put my focus on another test, karma for Unit test with mocha. I thought I can complete the whole test system for my company though I haven't any actual experiences on automation testing before.  I think the whole test system includes CSS test, JS test, and CI. For now, I'd better focus on how to complete JS test.. ",
    "aperkaz": "Hello @cilefen,\nAny solutions for this yet? I am facing the same issue as the tests pass but the report is not being generated.\nThanks. Thanks for the fast response @garris and taking the time to dig into the issue. \nThe hack-solution then is to roll back and forth with the versions \ud83d\ude2c . Hopefully there is a clear root cause. \nThanks \ud83d\ude42 . ",
    "SBeator": "@garris Does this issue still valuable? \nI am interested with this issue and want to make some contribution on this. \nIs it OK for me to pick this issue?. OK, thanks for your information, I will send my PR when my change is ready. . PR #783 is sent for this issue.\n@garris please help review it. Thanks. ",
    "aisensiy": "Any news about this? I still have this problem.. Is there some instruction for PR? Or I just PR to master?. #467 I created a PR.. Any update?. ",
    "richhiggins": "I am currently doing battle with this issue. References generated on OSX fail on Jenkins/CI Ubuntu, in my case raising the threshold to 6.45 and setting requireSameDimensions to false gets the test passing, but this doesn't seem ideal. \nRemoving -webkit-font-smoothing (as suggested above) changes the reference grabs but doesn't affect the outcome, the fonts are still rendered differently (just different differently).\nI want to avoid having to run a local VM to generate the references, but struggling to find an alternative & acceptable configuration based workaround.\n@garris any further ideas welcome!. @mirzazeyrek our team work on OSX locally and that's not something up for grabs. Likewise, the server is Ubuntu and cannot be OSX.\nWhilst installing, configuring and maintaining a second local dev environment is certainly technically possible it's also undesirable. Trying hard to keep things simple :). I've not got this 100% up and running yet, but the approach I've settled on is keeping 2 lots of references, production (linux) & development (OSX), branching the configuration and using a Jenkins task to update the production references as required. \nIdeally the production references update will be triggered by committing updated development references, via a dedicated branch or a commit message if possible... TBC\nThought it might be worth sharing the approach at least.. ",
    "asci": "Hey! We had the same problem. \nHow we solve it:\n- using snapshots as HTML pages and re-render them each time\nAnother option:\n- using docker to run visual tests. the only workaround is to set the height to a high number, but then I got big blank margin at the bottom.. \"version\": \"3.0.25\". Actually, I didn't do any adjustments, I guess I used phantomjs. I changed the selector to 'document' and it helps. Thanks @kiran-redhat . ",
    "7R5N": "I am looking at the HTML-Report in the Browser. \n'Added sorting' would be nice \u2026 ;-)\nThank you. . ",
    "amigolargo": "Hey @garris, thanks for your reply. I'm trying to avoid a global install of SlimerJs in order to keep all dependencies localised for CI integration, is this likely to be possible? . Awesome, thanks. Will investigate & post back. ",
    "bpatram": "For those finding this thread in the future, here are the related issues for implementing this: \nhttps://github.com/casperjs/casperjs/issues/1813\nhttps://github.com/ariya/phantomjs/issues/14954\nAs many of you may already know, the maintainer of PhantomJS has stepped down which may affect continued development for that project: https://groups.google.com/forum/#!msg/phantomjs/9aI5d-LDuNE/5Z3SMZrqAQAJ. ",
    "mcontos": "yes sir.. ",
    "ToreyStapleton": "Thanks for the quick response, that's good to know.  I'm also not used to headless browsers, so I find it a little difficult to debug cause I usually have no idea where I am \ud83d\ude06 \nI'll just have to read up some more on the docs!  Thanks again, awesome tool by the way.. ",
    "skip405": "Hi guys. Thanks for accepting this PR. How shall I give an example? A more detailed README.md description? I have it there, but it's kind of small, yes. Closing this PR in favour of the new one into another branch.. @garris Fantastic :) Everything's OK with my example, I presume?. OK, I see. Yes, I quite agree with you that it's hard to find this balance. I first tried a simpler example, but it ended up being super simple, like - using your config from the JSON file directly as a JS object and that's it )) But thought it would not have been much of a NodeJS integration then, that indeed resulted in some complexity. Hope users will understand it. Anyways, it was a pleasure to contribute. Cheers!. Hey @garris . Sure, it will break. That's why I'm asking if there are plans to drop the support of older versions of Node. As when I look at the official NodeJS LTS Schedule I see that even they stopped maintaining node v. 0.12, so should BackstopJS, don't you think?\nWhen I look at the ES6 compatibility table for NodeJS v. 4, it's more or less ok, especially in strict mode. Anyways, my nodeIntegration example (#386) would definitely break in 0.12 =) I didn't know I should have done it with version 0.12 in mind.... @maghrout a question - does increasing the delay amount in the settings change the output?. That's a cool thing :). @garris some parts were lost in resolving the conflicts. In my PR the options.config is removed from the check and added later. Shall I create another PR?. @Enchiridion sorry to hear it, my PR was partly merged and I failed to notice the missing bit :(\nA quick fix for you will be to grab lines 14-18 of this diff and patch your makeConfig... I know it's not ideal, but maybe you'll be able to get by until a new patch version is released.. @garris no worries ;) A question though, is it best to PR from canary to canary or from master to canary? I first tried master, but there's a lot to merge then (with conflicts )) ). Are you OK with canary to canary?. @garris please take a look - #416 - made it from canary. @garris sorry to hear that my PR is causing troubles... again. The change that needs to be applied is this\nif( options && typeof options.config === \"string\" && ! customConfigPath ). the options && check is a bit misleading. If there's always a value for options.config we may shorten it to\n```\nvar customConfigPath = options.backstopConfigFilePath || options.configPath;\nif(typeof options.config === \"string\" && ! customConfigPath){\n    customConfigPath = options.config;\n}\n``. seems fine) Are you OK to make the change yourself?. Thanks. Sorry for being a pain ). @marlin307 Besides @garris's suggestion you may also look into the [Node.js Integration example](https://github.com/garris/BackstopJS/tree/master/examples/nodeIntegration) where thescenariosare generated and then passed to BackstopJS as a plain JS object. @bmds npm scripts receive parameters after the [double hyphen](https://docs.npmjs.com/cli/run-script). Can you try to run\"vreg:test\": \"backstop test -- --configPath=backstop.config.js\"` to see if it works for you. Ah, sorry. Please ignore my previous. Completely wrong ) Hyphens are about cli params. ",
    "jadekler": "Thanks @mirzazeyrek . Edit: And, I have debug: true in my backstop.json. @stevecfischer \nConsole when I open the page in my browser:\n\nTerminal when I run backstop reference in which I expect to see the above errors:\n```\n\u00b1  |styleguide_new U:2 ?:2 \u2717| \u2192 ./node_modules/.bin/backstop reference\nBackstopJS loading config:  /Users/pivotal/workspace/pivotal-ui/styleguide_new/backstop.json\nCOMMAND | Executing core for reference\n  clean | backstop_data/bitmaps_reference was cleaned.\nRunning CasperJS with:  [ '/Users/pivotal/workspace/pivotal-ui/styleguide_new/node_modules/backstopjs/capture/genBitmaps.js' ]\nCasperJS:  Debug is enabled!\nCasperJS: CREATING NEW REFERENCE FILES\nCasperJS:  [info] [phantom] Starting...\nCasperJS:  onBefore.js starting\nCasperJS:  onBefore.js has run for computer.\nCasperJS:  [info] [phantom] Running suite: 7 steps\nCasperJS:  [debug] [phantom] Successfully injected Casper client-side utilities\nCasperJS:  [info] [phantom] Step anonymous 1/7: done in 35ms.\nCasperJS:  [info] [phantom] Step _step 2/8: done in 52ms.\nCasperJS:  [info] [phantom] Step _step 3/8: done in 160ms.\nCasperJS:  [info] [phantom] wait() finished waiting for 1000ms.\nCasperJS:  [debug] [phantom] opening url: http://localhost:8000/buttons, HTTP GET\nCasperJS:  [debug] [phantom] Navigation requested: url=http://localhost:8000/buttons, type=Other, willNavigate=true, isMainFrame=true\nCasperJS:  [debug] [phantom] url changed to \"http://localhost:8000/buttons\"\nCasperJS:  [debug] [phantom] Successfully injected Casper client-side utilities\nCasperJS:  [info] [phantom] Step anonymous 5/8 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  [info] [phantom] Step anonymous 5/8: done in 1567ms.\nCasperJS:  [info] [phantom] Step _step 6/10 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  [info] [phantom] Step _step 6/10: done in 1589ms.\nCasperJS:  [info] [phantom] waitFor() finished in 42ms.\nCasperJS:  [info] [phantom] Step anonymous 7/11 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  Ready event received.\nCasperJS: [info] [phantom] Step anonymous 7/11: done in 1651ms.\nCasperJS:  [info] [phantom] Step _step 8/11 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  [info] [phantom] Step _step 8/11: done in 1673ms.\nCasperJS:  [info] [phantom] wait() finished waiting for 500ms.\nCasperJS:  [info] [phantom] Step anonymous 9/11 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  Current location is http://localhost:8000/buttons\nCasperJS:  \nCasperJS: StylesIconsColorsGridComponentsAlertsAlignmentAutocompleteButtonsCollapseCopy To ClipboardDividersDropdownsEllipsisExpanderFormsGridsHoverableImagesLabelsListsMediaModalsNotificationsPaginationPanelsPanesPortalsRibbonsSelectSvgTablesTabsTooltipsButtons\nCasperJS: \nCasperJS: a\nCasperJS: b\nCasperJS: c\nCasperJS: \nCasperJS: console.error('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');\nCasperJS: console.error('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');\nCasperJS: console.error('hello world!!!');\nCasperJS: console.error('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');\nCasperJS: console.error('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');\nCasperJS:\nCasperJS: <DefaultButton>\nCasperJS:   yo\nCasperJS: </DefaultButton>\nCasperJS: \nCasperJS: \nCasperJS: c\nCasperJS: d\nCasperJS: e\nCasperJS: \nCasperJS: <PrimaryButton>\nCasperJS:   hello world\nCasperJS: </PrimaryButton>\nCasperJS: \nCasperJS: \nCasperJS: \nCasperJS:\nCasperJS: \nCasperJS:  [info] [phantom] Step anonymous 9/11: done in 2195ms.\nCasperJS:  [info] [phantom] Step anonymous 10/11 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  onReady.js has run for:  computer\nCasperJS:  [info] [phantom] Step anonymous 10/11: done in 2216ms.\nCasperJS:  [info] [phantom] Step anonymous 11/11 http://localhost:8000/buttons (HTTP 200)\nCasperJS:  Capturing screenshots for computer (1920x1200)\nCasperJS:  [debug] [phantom] Capturing page to /Users/pivotal/workspace/pivotal-ui/styleguide_new/backstop_data/bitmaps_reference/css_test_Buttons_0_html_0_computer.png with clipRect {\"height\":1200,\"left\":0,\"top\":0,\"width\":1920}\nCasperJS:  [info] [phantom] Capture saved to /Users/pivotal/workspace/pivotal-ui/styleguide_new/backstop_data/bitmaps_reference/css_test_Buttons_0_html_0_computer.png\nCasperJS:  [info] [phantom] Step anonymous 11/11: done in 2426ms.\nCasperJS:  [info] [phantom] Done 11 steps in 2426ms\nCasperJS:  Comparison config file updated.\nCasperJS:  [debug] [phantom] Navigation requested: url=about:blank, type=Other, willNavigate=true, isMainFrame=true\nCasperJS:  [debug] [phantom] url changed to \"about:blank\"\nBitmap file generation completed.\nRun $ backstop test to generate diff report.\nCOMMAND | Command reference sucessfully executed\n```. Sidenote: this is a react.js app that is transpiled to ES5 with babel before load. Half the page (the 'sidebar', which is a react element) loads but the other half does not (the 'content' react element).\nNot sure if any of that information is helpful, thought I'd mention though.. Also, this is an open source project for which I can create a branch if you'd like to see it live on your own computer.. ",
    "marc0n3": "Is jpg compression level selectable somewhere?\nThanks in advance. ",
    "ZorGleH": "Yes, I know selectorExpansion and I use it a lot, but when several screenshots are generated, they are named like {scenarioLabel}-{selectorLabel}__n{x}, with x being the number of the discovered selector, based on the order on the page. If you are testing icons, for example, and you insert a new icon before existing ones, the following will be shifted, then running the test would give an error on every following icons, because their names have changed.\nWhat I would like is a way to name the screenshots based on an optional html attribute for example:\nhtml: <div class=\"icon buddy\" data-backstop-name=\"buddy\"></div>\nfileNameTemplate: '{scenarioLabel}-{selectorLabel}__{data-backstop-name}'\nselectors: ['.icon']\ngenerated screenshot name: Atoms-Icons__buddy\nIs there a way to do this?. ",
    "jritterbush": "I also was able to run backstop directly fine, but not as an npm script. I fixed it by running the extra step that I found in phantomjs-prebuilt info. Namely I cded into the node_modules/phantomjs-prebuilt directory and ran node install.js step.\nWould love to know if there is a better way since phantomjs is not a direct dependency to my application and only installed by backstopjs. ",
    "mantovanig": "Yes i think is this issue!\nI use casper 1.1.3, the last...\nSomeone fix it?. In my casperjs installation there isn't this fix.\nSo i've copied it, and now the clipRect.top is different but the screenshot is wrong.. Ok.\nAnd there is another solution for have a new session in each scenario?\nOr i must lunch backstop('test') with one scenario at once?\nThanks. Solved with catch the promise that return backstop \ud83d\udc4d . Thanks @laubsauger \nI had tried this solution but it did not work.\nI will try again! . Hi @garris \nI saw you put the output webpack index_bundle.js in the .gitignore in this commit\nSo there is not even in the @beta version of the package.\nIf you want we can run the task build-compare in prepublish or install npm hook. \nWhat do you think?\nThanks\n. Hi @screendriver ,\nyes the issue is that react dependencies should be declared as \"Peer Dependencies\" in package.json\nhttps://nodejs.org/en/blog/npm/peer-dependencies/\nWe will do it as soon as possible.\nThanks. It's right @matthiaskomarek ,\nbut when you use backstopJs inside a react project there are react dependencies conflicts, because in backstopjs react is not declared as peerDependencies.\nOn the other hand if we declared react as peerDependencies, react become a requirement for every project.\nIt would serve something like optionalPeerDependencies, but it doesn't exist :)\nI think about it\n. Yes @matthiaskomarek , probably this is the best solution at the moment.\nIf it's right even for @garris, I can do this fix tomorrow.. ",
    "maghrout": "Unfortunately no it doesn't I have changed the delay to up to a minute and still no avail!. what would you suggest to fixing it then?. ",
    "mheesters": "We've installed the 2.5.1 version and it's running without any problems now. Thank you!\n. ",
    "pgn-vole": "@garris sure. I made the change.. @garris do you mind making a patch release for this change? We would like to start using it :). Version 6.10.0. Looking at the PR on chromy this issue should be fixed quite soon I hope.. version 6.10.0, which is the current LTS version.. @garris sorry with the late reply. Cleaning my cache solved the issue. Thanks !\nBackstop3 is working really well! Thanks for your work.. ",
    "sashamorozov": "Yeah, I'm on the latest version 2.5.1 and I use backstop locally.\nUnfortunately, it does not work :(. I test about 35 html files. the configuration is almost the same for everyone, so I reduced the sample. I use this configuration before work and run backstop reference command. \n{\n  \"id\": \"test\",\n  \"asyncCompareLimit\": 200,\n  \"viewports\": [\n    {\n      \"name\": \"1280\",\n      \"width\": 1280,\n      \"height\": 2000\n    },\n    {\n      \"name\": \"1920\",\n      \"width\": 1920,\n      \"height\": 2000\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"Examples: Scaffolding\",\n      \"url\": \"build/prototypes/examples-scaffolding.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \"section\"\n      ],\n      \"delay\": 100\n    },\n    {\n      \"label\": \"Examples: Popovers\",\n      \"url\": \"build/prototypes/examples-popovers.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \"section\"\n      ],\n      \"delay\": 100\n    },\n    {\n      \"label\": \"Examples: Modals\",\n      \"url\": \"build/prototypes/examples-modals.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \".modal\"\n      ],\n      \"delay\": 100\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\nAfter work and if I created a new prototype, I add it to the configuration, then I run backstop test.\n{\n  \"id\": \"test\",\n  \"asyncCompareLimit\": 200,\n  \"viewports\": [\n    {\n      \"name\": \"1280\",\n      \"width\": 1280,\n      \"height\": 2000\n    },\n    {\n      \"name\": \"1920\",\n      \"width\": 1920,\n      \"height\": 2000\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"Examples: Scaffolding\",\n      \"url\": \"build/prototypes/examples-scaffolding.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \"section\"\n      ],\n      \"delay\": 100\n    },\n    {\n      \"label\": \"Examples: Popovers\",\n      \"url\": \"build/prototypes/examples-popovers.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \"section\"\n      ],\n      \"delay\": 100\n    },\n    {\n      \"label\": \"Examples: Modals\",\n      \"url\": \"build/prototypes/examples-modals.html\",\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \".modal\"\n      ],\n      \"delay\": 100\n    },\n    {\n      \"label\": \"Dashboard\",\n      \"url\": \"build/prototypes/dashboard.html\",\n      \"selectors\": [\n        \".main-container\"\n      ],\n      \"delay\": 100\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\nTest screenshots are created, but the comparison does not start. And if I remove the new file from the configuration, the comparison starts and shows that I had changed.. I came up with a small workaround: before testing I create a blank page with which I will work, and add it to the test. After that everything is working as expected.\nBut I want a normal way, if possible... :). I apologize for responding so long.\nSo, my steps:\n1. Before I start creating a new prototype, I run the command backstop reference --filter=scenarioLabel\n2. After I finish creating the prototype, I run the commandbackstop test`.\n\u0421orrectly?\nBut I need to test all the prototypes, because the changes can affect them. And the filter does not check the prototypes that do not fall under the conditions.\nMy work steps:\n1. I run the command backstop reference\n2. I change styles and sometimes I create new prototypes\n3. If I create a new prototype I add it to the configuration.\n3. I run the command backstop test\nExpected Result: The test will check the existing prototypes. The new prototype does not compare with anything and the test will miss it.\nActual Result: Test screenshots are created, but the comparison does not start = Test failed. Apparently the problem was fixed in the latest versions. Now when I add new scenarios for new files, the comparison starts correctly.\nTHANK YOU!. This is margin, not padding.\nProbably margin should not be captured.. ",
    "fincha": "@garris Is there a pull request from @beta or how you mean this? Right now I am a bit off the master, you did some changes I have to rebase.. @uglow I have tested this on ubuntu and OSX, this worked fine. No idea about windows. . I had to stop working on this for now, the company I was working with chosen different way... so sorry guys, maybe some one can pick this up.. sure, makes sence.. ",
    "uglow": "@fincha @garris Will this PR lead to consistency in font-rendering across OSes when using Chrome via WebDriver?. ",
    "chrishelgert": "@fincha tried it on windows, but the selenium/webdriver didn\u00b4t start -  i only saw\n```\n\nvisual-regression@1.0.0 test D:\\workspace\\visual-regression\nbackstop test\n\nBackstopJS loading config:  D:\\workspace\\visual-regression\\backstop.json\nCOMMAND | Executing core for test\n```\nand then the process ended. ",
    "bitjson": "I'd love to see this feature completed \u2013\u00a0is anyone working on it right now?. @adiherzog thanks for the info, looks great.\nIf anyone is curious, here's the solution I eventually came to: Copay/BitPay Visual Regression Testing\nIt's fully documented there, but basically we run our E2E tests in Docker to get consistent rendering on all machines, then we take screenshots at specific important points. Then we use another tool called reg-cli to do the comparison. This works well because we can do it both in development and in CI.\nHere's the docker package script, and here's the visual-diffing package script.. ",
    "kyleoliveiro": "What will it take to merge this?. Thanks for the detailed reply and for the awesome tool called BackstopJS!\nI've managed to successfully pull the docker image locally and run the tests. Can confirm that the instance of Backstop inside the Docker container is reading my project's backstop.json and writing bitmaps to my project's local backstop_data folder.\nHowever, with the current setup, Backstop inside Docker does not seem to be able to see the static pages which I am serving locally at http://localhost:3000. It was working before with my local instance of Backstop which I installed through npm.. Thanks, works like a charm! Now the only issue is that http://host.docker.internal:3000 does not resolve on my CI environment as expected. I'm just working around this by using absolute URLs instead. Although if you have a solution for this, that would be great :). Cool, but what about cases where a static server is required? I.e. can't use absolute url?. Yes, the Docker approach fixed the cross platform discrepancies. Thanks!\nRegarding static servers vs absolute urls: I'm currently using Backstop to perform snapshot testing on individual components in a design system. To do this, I have \"kitchen sink\" pages (.html) that I'm generating with KSS and they look something like this:\n\nThe kitchen sink pages showcase each component's different variations and states.\nNow heres the issue; In order to display the pseudo-states (:hover, :focus, etc.), KSS includes some javascript on the kitchen sink pages that reads document.styleSheets[i].cssRules. To do this, the document needs to be served via a server (in this case, it's a static html file, so its served over a static file server). If I simply open the html pages via Finder, the browser throws an exception due to CORS rules:\nUncaught DOMException: Failed to read the 'cssRules' property from 'CSSStyleSheet': Cannot access rules\nIn a more general situation, a Backstop user could be simply testing an Express or React app, so the Backstop scenario urls have to be something like http://localhost:3000/app; It wouldn't be possible to use absolute urls.\n. Hmm which part is confusing to you? Essentially, I'm testing a project that needs to be served. Therefore, I can't use absolute URL's in my backstop.json config.\nThis works in my local dev environment, but not in CI:\n\"scenarios\": [\n    {\n      \"label\": \"Button\",\n      \"url\": \"http://host.docker.internal:3000/item-components-button\",\n      ...\n    }\n  ]\nThis works in CI, but not in my local dev environment:\n\"scenarios\": [\n    {\n      \"label\": \"Button\",\n      \"url\": \"http://localhost:3000/item-components-button\",\n      ...\n    }\n  ]\nI am using the backstopjs/backstopjs image during the testing stage on my CI.. Brilliant! That will solve my problem. I missed out that section in the docs \ud83d\ude05. That's all for this issue. Thanks again!. @airtonix are you referring to the docker image or snapshot images?. @airtonix The reference snapshots are supposed to be committed to your Git repo (this is how they are persisted across runs). Then, the test snapshots are generated each time the CI pipeline is run, and compared against the reference snapshots.. Here's my config.js file:\n```\nconst isCI = require(\"is-ci\");\nconst baseUrl = isCI\n  ? \"http://localhost:3000\"\n  : \"http://host.docker.internal:3000\";\nmodule.exports = {\n  id: \"components\",\n  viewports: [\n    {\n      label: \"phone\",\n      width: 320,\n      height: 480\n    },\n    {\n      label: \"desktop\",\n      width: 1280,\n      height: 720\n    }\n  ],\n  defaultMisMatchThreshold: 0.1,\n  scenarios: [\n    {\n      label: \"button\",\n      url: ${baseUrl}/item-components-button.html,\n      selectors: [\"._snapshot\"],\n      selectorExpansion: true\n    }\n  ],\n  paths: {\n    bitmaps_reference: \"tests/backstop/backstop_data/bitmaps_reference\",\n    bitmaps_test: \"tests/backstop/backstop_data/bitmaps_test\",\n    engine_scripts: \"tests/backstop/backstop_data/engine_scripts\",\n    html_report: \"tests/backstop/backstop_data/html_report\",\n    ci_report: \"tests/backstop/backstop_data/ci_report\"\n  },\n  report: [\"CI\"],\n  engine: \"chromy\",\n  engineOptions: {\n    waitTimeout: 300000,\n    gotoTimeout: 300000,\n    chromeFlags: [\n      \"--disable-gpu\",\n      \"--force-device-scale-factor=1\",\n      \"--disable-infobars=true\",\n      \"--hide-scrollbars\"\n    ],\n    args: [\"--no-sandbox\"]\n  },\n  asyncCaptureLimit: 1,\n  asyncCompareLimit: 1,\n  debug: false,\n  debugWindow: false\n};\n```\nUnfortunately I can't provide a link to the app as it's a private project. I'm running Backstop through local Docker, using the official backstopjs/backstopjs image. In this case, does the environment of the host machine matter? I'm running a Macbook Pro with 16gb RAM.. Try using the chromy engine :). Hi @garris, I've pulled the latest Docker image, but unfortunately still having the same issue. Here's the log:\n\n. I don't think installing portfinder globally would help in cases where Backstop is being run from the Docker container; It would need to be installed inside the container instead of the host machine for it to work.\n@garris Puppeteer doesn't work for me, so I'm forced to use Chromy.\nFor now, I'm getting around this issue by using v3.2.17. Just tried v3.5.10. It works, thanks!. Doesn't the transitionend event belong to a specific element? Afaik, there isn't a page-level event that we can hook on to to detect when all transitions have ended. I think the right way to handle this is to add a special class to the html or body element once the page is ready to be tested (i.e. when all the \"transition dust\" has settled), then make use of Backstop's readySelector option.. Will do. Is it as simple as bumping the version in the Dockerfile or are there some additional steps? I've not created a Docker image before.. @garris Works like a charm. Thanks! . ",
    "Enchiridion": "I've gotten it to work (on Win10) by specifying the full absolute path.\nIn fact this was the only way I could specify a profile, -P  wouldn't work for me.. Sure.  These are the steps on Windows, but they should work for any OS, just the keyboard shortcut and paths are different.\nHere's what I do.  I press Win + R, then run firefox -P to bring up the Profile Manager.  If it doesn't appear, make sure all instances of Firefox are closed first.  Then I created a new profile (I named mine SlimerJS).  Now in backstopjs I set my Firefox profile path:\n'casperFlags' : [\n  '-profile C:/Users/<username>/AppData/Roaming/Mozilla/Firefox/Profiles/<profile_folder_name>',\n],\nThat's it.\nI originally looked into this because slimerjs doesn't support the option --ignore-ssl-errors=true and I needed to test against sites with test certs.  So to fix that, after creating the new profile, I opened Firefox to the sites I was having SSL issues with and created exceptions for the certs it didn't like on each site.\nIf you need to do the same thing, make sure '--ignore-ssl-errors=true' is NOT present in the list of casperFlags, slimerjs will error out with an unknown arg message.\n. Just 1 dash, which is weird as almost all the other options requires 2 dashes.. @skip405 Np. Patching those lines fixed the issue.  Really appreciate the fast response on this!. Working for me using canary. ",
    "kalebhermes": "@AkA84 I'm not sure if it can be done in the casperFlags, but you can add the following line to the top of your casperjs files, and it will extend the default timeout. \ncasper.options.waitTimeout = 10000;. ",
    "rsimsek": "I have been getting the same error as well even though i have the \"debug\": true in my backstop.json file and it does not create any bitmaps/references as well. What would be the solution for this issue? I have been trying to use v3.0.32 of backstopjs. Any help would be really appreciated.. ",
    "gavmck": "Maybe I need a separate config file for each component? And then use gulp to search for them and run the tests.... Yeah sounds like it's a config file per component :)\nI have a folder per component generated by a yeoman script that contains:\n- Angular component js file\n- Module export\n- Scss file\n- Unit tests script\n- JSON schema for props\n- Readme.md for documentation\nSounds like I should add the backstop config generator to yeoman and then automate the test running with gulp, much like we do with the unit tests. Then each component will have reference images to go with the other bits. Keeps it all nice and self contained.\nThanks for the assistance! Awesome service you've got here, super useful. Not reopening, but I had a bunch of trouble getting this working so I think I'm gonna go back to single files. \nUsing separate configs meant I had to have separate reports so my file structure had ~100 copies of the report (one for each component) which seemed a bit messy.. ",
    "pkra": "Thank you for BackstopJS!. FYI Shinji is interested in switching Chromy over to puppeteer, see https://github.com/OnetapInc/chromy/issues/64.. I gave this a quick spin and it worked wonders for me. For example, in one project I would only get blank screenshots, now all screenshots capture correctly  -- very cool! \nThanks @cactusa (and @garris, as usual). @garris FWIW I have seen similar glitches on my end -- but I admit they beat having only blank screenshots :man_shrugging: . > Which glitches?\nSorry. I didn't look at your screenshot carefully enough and perhaps it's different.\nI have seen glitches where screenshots are vertically slightly off, i.e., they show some of the area above the selector target. These glitches seem stable/reproducible so that tests will pass if I make it a reference; in the project where I was only getting blanks, that's still an improvement.. @cactusa @garris has there been any progress on making this behavior available via a flag?. @cactusa thanks for the response. No worries. If there's a way to help, I should have some spare time coming up in a week or so.. Here's a minimal exampel using the backstop init defaults.\njson\n{\n  \"id\": \"backstop_default\",\n  \"viewports\": [\n    {\n      \"label\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"label\": \"tablet\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"onBeforeScript\": \"puppet/onBefore.js\",\n  \"onReadyScript\": \"puppet/onReady.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"BackstopJS Homepage\",\n      \"cookiePath\": \"backstop_data/engine_scripts/cookies.json\",\n      \"url\": \"https://garris.github.io/BackstopJS/\",\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 0,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \"\",\n      \"clickSelector\": \"\",\n      \"postInteractionWait\": 0,\n      \"selectors\": [\"#pkratest\", \".logoBlock\"],\n      \"selectorExpansion\": true,\n      \"expect\": 0,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"args\": [\"--no-sandbox\"]\n  },\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\nThe order of the selectors is important since the failing selector must still have a passing selector later for the race condition to have impact.. Test results are attached.\nbackstop_data.zip\n. >  I believe this would break existing desired behavior> \nHm, that's odd. My impression was that selectorShot gets passed a path during selectorsShot (which uses filePath as variable name). If the element exists, selectorShot uses that path variable, but when it fails, it uses filePath -- which given the Promise.all in selectorsShot will be the last value of filePath. \n\nNot sure what this fixes. \n\nI was trying to fix #810. I regularly have the same configuration applied to several URLs, some of which will not have particular elements. The current code will fail to generate fallback images in that case because generally filePath !== path.. Minor edits and to add: the current code leads to false negatives in test results since no images are found (instead of both ref and test having the fallback image which are identical).. @garris I've added a minimal example to #810. PTAL?. Thanks so much for taking another look, @garris. I'm glad I could contribute something back.\nAnd my apologies for not providing a minimal example in the first place; I know how annoying half-baked reports are.. ",
    "p-clem": "I think the documentation is wrong. Try --config\nbackstop test --config=backstop.config.js\nhttps://github.com/garris/BackstopJS/blob/f2a1e9fd170c3e2af5591d750eba527a6aa5afba/core/util/makeConfig.js#L22. ",
    "bmds": "That does look to be the issue. I'm assuming that configPath and backstopConfigFilePath are legacy commands. I've created a pull request to resolve this. ",
    "AndrewLeedham": "Tried it with a completely stripped down version, didn't change anything. \nHowever I've tried to run this through a vagrant box running linux, but I'm running in to a different issue that seems more fixable. \nError: GDK_BACKEND does not match available displays\nThis makes sense since it is a virtual machine with no displays, the fix on SlimerJS's end is to run the command with xvbf, BackstopJS doesn't seem to be doing this, is this a bug, or is there some config option I'm missing?. ",
    "fabm22": "Thanks for quick answer and pointing me out to the branch. \nFrom what I'm seeing over the internet I will give a try to that branch, check if it would cover my use case since it looks like the alternative would be to basically staple something myself which would do the same thing anyway (which would be less functional VERY probably haha).\nI'll update around here or on the issue if I see useful info, thanks. Closing.. ",
    "lounikffm": "im running slimerjs with firefox 50.1 so it should work fine without changing the init file correct?. ",
    "patrick-vieira": "Hi garris, thank you for the response, but that is not related, I read all the issue and the issues linked too.\nAfter some more research at various issues i found one way to fill the form and submit it without mess up.\nclicking manually on the button or using the fill() function throw the same error as before, but if i use fillSelectors() it works.\nmy code is now.\n```\nmodule.exports = function(casper, scenario, vp) {\ncasper.start(\"http://localhost:3000/#/\",function(){\n    casper.waitForSelector(\"form input[id = inputUsername ]\", function() {\n  this.fillSelectors('form.form-signin', {\n      'input[id = inputUsername ]' : 'user',\n      'input[id = inputPassword ]' : \"pass!\"\n  }, true);\n\n  casper.waitWhileSelector(\"form input[id = inputUsername ]\", function(){\n      this.echo('form's gone!');\n  });\n\n  casper.then(function(){\n      this.echo(\"Page title:\" + this.getTitle());\n  });\n});\n\n}); \n};\n```\nsorry for that.. ",
    "zubhav": "To ensure the CI build fails if Backstop fails - you can do the following:\nbackstop( 'test' )\n    .then( () => {\n        console.log( 'Passed' );\n        process.exit( 0 );\n    })\n    .catch( () => {\n        console.log( 'Failed' );\n        process.exit( 1 );\n    });. ",
    "NaorHai": "I've followed your guide on https://css-tricks.com/automating-css-regression-testing\nand used your demo project.\nI've performed same actions following your guide on several machines and got the same screenshots. {\n  \"id\": \"prod_test\",\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"name\": \"tablet_v\",\n      \"width\": 568,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"tablet_h\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"scenarios\": [\n  {\n    \"label\": \"My Local Test\",\n    \"url\": \"../../index.html\",\n    \"hideSelectors\": [],\n    \"removeSelectors\": [\n    ],\n    \"selectors\": [\n      \"nav\",\n      \".jumbotron\",\n      \"body .col-md-4:nth-of-type(1)\",\n      \"body .col-md-4:nth-of-type(2)\",\n      \"body .col-md-4:nth-of-type(3)\",\n      \"footer\"\n    ],\n    \"readyEvent\": null,\n    \"delay\": 0,\n    \"onReadyScript\": null,\n    \"onBeforeScript\": null\n  }\n],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"phantomjs\",\n  \"report\": [\"browser\"],\n  \"debug\": false\n}\n. its the same config file you asked to use in your tutorial :) . @garris did you see something unusual in my config file?. \u05f4 what happens if you just leave the selectors array empty? It should default to a single whole-page screenshot.\u05f4\nit's not working as well.\ndo you have a demo project that is up-to-date and uses the framework and works?. I'll try later and update you accordingly \ud83d\udc4d \n10x. ",
    "YogevMagal": "Can you please elaborate on what xml are you referring to? And what is the type of the report that you are using in the backstop.json? Is it CLI? CI? . ",
    "mrSingh007": "Its not a issue/bug related to BackStopJS. Please go through stackoverflow about such kinda help. @garris I think you can close this issue.. I changed version to 2.4.6. I am not facing this Problem. But Please don't close this issue. I will do more tests. Thanks. till now I am not facing this error, so for now I am closing this issue. @garris . I am still facing this Problem. @garris No I am not using onBefore script but I do use onReadyScript. But this error happen on comparing screenshots not while taking reference or test-screenshots. Just one question, do I need to install separately CasperJS?\nI do have backstopjs --version \"2.6.4\" but not casperjs . As this error comes sometime, so I think it could be because of memory/bug/fileSize not b.c.z CasperJS? Is this issue #281 memory problem was solved (i did npm install -g backstopjs@beta and get 2.6.4. Is it right version?).\nThanks. Still facing this problem.\n5:28:56 [BackstopJS - Website: exampleDE, Mode: test, Device: web] compare | ERROR { size: ok, content: 0.98%, threshold: 0.1% }: web: Homepage test_web_web_Homepage_0_document_0_web_1280.png\n05:28:56 [BackstopJS - Website:  exampleDE, Mode: test, Device: web]    See: /root/workspace/job-webtest/bitmaps_test/20170607-052243/failed_diff_test_web_web_Homepage_0_document_0_web_1280.png\n05:28:58 [BackstopJS - Website:  exampleDE, Mode: test, Device: web] Killed. We have increased RAM, as we saw on Development environment mem. was being used till 6.GB. I will write again if we are facing same problem even after increasing RAM and Shared Memory.\n\n. I am have 13 Tests (each test with separate URL/Selector) pro device and pro website. I have three devices and 9 websites. which mean total 351 Tests. But the memory you are seeing above on image was for just 13 Tests.. Ja. Increasing RAM solved our Problem. Thanks.. @garris  I have one question, I know its not related to this issue but would be nice if you could help a bit.\nReport: {\n  \"isSameDimensions\": false,\n  \"dimensionDifference\": {\n    \"width\": 0,\n    \"height\": -91\n  },\n  \"misMatchPercentage\": \"0.00\",\n  \"getDiffImage\": null\n}\nThreshold: 1\nMy some tests are failing just because of height. Is there anyway to let test pass if height/width difference is given somewhere in setting. Or any other way around? \n(in setting I have  \"requireSameDimensions\" : false and \"misMatchThreshold\" : 0.1 )\nAs if requiredSameDimensions is false it should not be failed. Is it bug? Should I write this as a issue?\nIf this feature is not yet that we can still let the tests pass even though height is different then I would create new logic for myself. For that can you please tell me which file (JS) generates CI report (xunit.xml file)? \nThanks. In resemble.js there is no such a logic which let test pass if height/width are not same.\nSo I added manually this code (on resemble.js , inside of compare method after condition images.length ===2 ):\n//@khalistan\n//remove difference of height and width if requireSameDimensions=false. \n//Note if content is different i.e RGBS then test will fail as it should do so\nif(!requireSameDimensions){\n         if(images[0].height!=images[1].height)\n         {\n          var difference=images[0].height-images[1].height;\n            images[1].height=images[1].height+(difference);\n        }\n         if(images[0].width!=images[1].width)\n        {\n         var difference=images[0].width-images[1].width;\n            images[1].width=images[1].width+(difference);\n        }\n    }\n@garris  This code let test pass if there is just height/width difference. Here just one thing is missing thats \"requireSameDimensions\" variable. If we can access this variable then this code works perfect. . @jtuds If mismatch is 0, then requireSameDimensions never takes place, on otherside if there is mismatch then test should fail but as wrote its still fails on 0 mismatch. With my solution if content itself have changes (i mean rgb or rgbs) then test will fail but if there is just padding on bottom after content and content is same then test will pass. Which mean if mismatch is 0 and only dimensions are different. As Garry told me \"requireSameDimensions\" should works fine but I don't see any logic on-it inside of resemble.js . resemble.js on Comapre method should tickle this.\nI have referenced this issue to resemble https://github.com/Huddle/Resemble.js/issues/99. @jtuds  have you test it? Why its not working for me? Can you test it while taking above config? Just take any page and let it fail with \"isSameDimensions = true\" and same to pass with \"isSameDimensions = false\".\n(please take padding at bottom of body). ",
    "joyarzun": "@garris filter and incremental are part of config.args look here but the makeConfig.js only merge args from command params. So I'm pretty sure that there is no way to add config.args.[filter | incremental] in config file. It's right? Is there any way to do it?. ",
    "ksmahesh": "@joyarzun were you able to find out how to work around this? \n@garris would appreciate your input here. Is @joyarzun right? is there no way to achieve this currently?. Thanks for your quick reply Garris. Makes sense! \nThanks for puppeteer integration. Definitely seeing some significant performance improvement there. . ",
    "stevector": "There is an issue for Chrome support here: https://github.com/garris/BackstopJS/issues/370. ",
    "davegahn": "NO problem :)\n\nThere's also genConfig File\n{\n  \"id\": \"prod_test\",\n  \"viewports\": [\n    {\n      \"name\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"name\": \"tablet_v\",\n      \"width\": 768,\n      \"height\": 1024\n    },\n    {\n      \"name\": \"tablet_h\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"subtitle\",\n      \"url\": \"http://localhost:3000/\",\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \".subtitle\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\" : true,\n      \"onBeforeScript\": \"onBefore.js\",\n      \"onReadyScript\": \"onReady.js\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"casper_scripts\": \"backstop_data/casper_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"casperFlags\": [],\n  \"engine\": \"slimerjs\",\n  \"report\": [\"CLI\", \"browser\"],\n  \"debug\": false,\n}\n. I reinstalled Node to newest 6.10.3 version. Property debug is set to true. \nUnfortumately I use Windows7 - it doesn't supports Ubuntu shell. Alternatively I use cmder command line emulator - the screenshot has been made from this program.\nSo the error stays the same... and debug option doesn't shows anything new...\n\nI didn't unerstand what you mean telling me\n\nCan you verify that the command works flawlessly outside of backstop \n\nwhich command? \nI feel that advice would be to use UbuntuOS...\n . I found out that my Firefox was 53th. I reinstalled and downgraded to 50th version. \nThis is Hello world code, it has some errors with driver but anyway it works.\n\nInspite slimerjs can work  - it didn't help to solve launching by CasperJS. It asks me if I installed slimerjs.. ",
    "ktsn": "@garris Added it into the examples directory with some tweaks.. ",
    "davidjgoss": "@garris that sounds fantastic. I've oddly enough only come to this in the last couple of days and found it much nicer to use than the alternatives. The only problem is PhantomJS' non-support of web fonts, and this would certainly solve that.\nHit me up if you need any testing done on Windows!. ",
    "dotneet": "@garris Thank you for introducing me!\n@Primajin I'm owner of chromy. The css selector problem you found was chromy's issue.\nI've fixed that problem and published new version. If it is reproduced yet after update chromy, please open an issue in chromy repo. Thank you for reporting.. @patriciamarchand \nChromy uses sharp to resize or clip an image but Chrome61 has a feature to achieve it without sharp. So the dependency will be removed after Chrome61 is released.\n. Hi @daveaspinall, \nI'm owner of chromy.\nCould you tell me your chrome version?\nIf you use canary version, please update it to latest version and try out again.\n. @daveaspinall Thanks! I found the cause of this problem.\n@garris Please update chromy version. chromy ver.0.3.3 doesn't work with chrome61 (canary).\n0.3.4 or later works.\n. @garris Thank you for updating.\n@daveaspinall \nIn my environment, I've confirmed that the problem that I found in BackstopJS 3.0.4 is fixed.\nBut your problem seems to be different with the problem I found.\nAs @garris mentioned in #479, the optimization for selector expansion might be the solution.\n. @garris \nI've published chromy v0.4.0 that includes some performance improvements that can be used with chrome61 or later.\nAnd I confirmed that this improvements soften this problem.\nNOTE: this version requires chrome60 or later. to get performance improvements using chrome canary is recommended.\n. In addition, new .screenshotSelector and .screenshotMultipleSelectors can get around the problem that be caused on very long page. . Sorry, I've update chromy to v0.4.2 because of a regression bug.. Hi @pgn-vole, what is your node version? that error is caused by old node.. I've tried to reproduce this problem with same node version but I couldn't.\nnode_modules/babel-runtime/helpers/typeof.js is installed correctly.\nIs your OS Mac or Win?\nWhat if clean and install node_modules?\n. ",
    "cdesautels": "Thanks for your offer. Attached is the settings file. Everything works fine except the one issue. Pay no mind to lines 50 to 60, that's just alters how inclusive the \"removeSelectors\" is. It doesn't work either way. If I put that array of selectors in \"hideSelectors\", it works just fine.\nbackstop-settings.zip\n. ",
    "sebastianekstrom": "Setting \"asyncCompareLimit\": 100 in the config helped, the memory usage drops down to ~350MB. Thanks a lot!. ",
    "unindented": "@swese44 solved this by running all visual regression tests in a Docker container.. ",
    "swese44": "We run tests locally on our Mac laptops and in Travis CI under a linux container. Visual tests were not possible between the different operating systems (probably font-aliasing) so we set up Docker to locally run the same container as Travis. We plan to open source this project in the near future so you could see the setup then.\nYour flow sounds a bit simpler if can always run visual diffs on the same machine. Maybe you could create a shared user account just for visual testing?. yes! we run visual diffs as part of our full test run. locally this needs to happen in docker so when Travis CI runs get triggered by PRs and merges they are running in the same environment. note that we've had a few issues keeping Docker and Travis environments identical, and we might consider Screener.io as a remote visual diff runner rather than Docker + Backstop.\nHere's the project:\nhttps://github.com/Microsoft/YamUI/\nInteresting bits are our npm scripts, Dockerfile, docker-compose.yml for setting up the container to play nice with our file structure, yarn-docker for piping yarn commands under alias y into the Docker container, this terrible script to collect our list of Storybook stories, and our backstop config.. my team develops on Macbooks (yes we work at Microsoft) so your mileage may vary if you're on Windows, haven't tested there. We're not using Chrome/Chromy, just PhantomJS. looks like this is newly-supported, we're still on BackstopJS 2.x. If you want to use PhantomJS instead then our config setup should help you, but keep in mind it's basically an old version of Firefox so you'll need autoprefixer if you need to support flexbox or other modern CSS rules.. ",
    "mgtalasila": "I am not too familiar with casper and didn't try that outside backstop. I changed this with casper, still no luck, test reports pass but not logged in.\nOther thing I observed is onbefore.js is not being called or executed at all, am I missing anything basic?. Thanks Garris,\nI managed to get my login called but seeing 'CasperJS:  [warning] [remote] unable to submit form' warning, though it is not throwing any error, it is not capturing the screenshots, have you come across any such issue?\nbelow is my log..\nCasperJS:  [debug] [phantom] Successfully injected Casper client-side utilities\nCasperJS:  [info] [phantom] Step anonymous 2/3 https://XXXXXXX (HTTP 200)\nCasperJS:  [info] [phantom] Step anonymous 2/3: done in 4286ms.\nCasperJS:  [info] [phantom] Step _step 3/4 https://XXXXXXX (HTTP 200)\nCasperJS:  [info] [phantom] Step _step 3/4: done in 4307ms.\nCasperJS:  [info] [phantom] waitFor() finished in 40ms.\nCasperJS:  [info] [phantom] Step anonymous 4/5 https://XXXXXXX (HTTP 200)\nCasperJS:  .....Trying to login......\nCasperJS:  [info] [remote] attempting to fetch form element from selector: '#ius-form-sign-in'\nCasperJS:  [debug] [remote] Set \"Email\" field value to XXXXX@gmail.com\nCasperJS:  [debug] [remote] Set \"Password\" field value to **\nCasperJS:  [info] [remote] submitting form to #, HTTP POST\nCasperJS:  [warning] [remote] unable to submit form\n. @kiran-redhat \nI did not have explicit considering the fill/fillselectors takes care of submitting form base don casperjs documentation. here is my latest login script..\nmodule.exports = function (casper, scenario, vp) {\n  // This script runs before your app loads. Edit here to log-in, load cookies or set other states required for your test.\n  console.log('onBefore.js has run for ' + vp.name + '.');\n  casper.options.waitTimeout = 20000;\n  casper.start(scenario.url, function() {\n     casper.waitForSelector('#ius-form-sign-in', function() {\n       console.log('.....Trying to login......');\n       this.fillSelectors('#ius-form-sign-in', {\n          'input[id = ius-userid]' : 'XXXXXXX',\n          'input[id = ius-password]' : 'XXXXXXX'\n       }, true);\n       casper.open(scenario.urlCheckout);\n    });\n  });\n};. thanks Kiran, \nLogin is working with the above approach rather than optional submit comes with fillSelectors.\nhere comes the new issue..\nAfter Login, I don't have anything in onBefore.js and onReady.js , it should start capturing screenshots.. but ending there without doing so.\nUpdated Login Script:\nmodule.exports = function (casper, scenario, vp) {\n  console.log('onBefore.js has run for ' + vp.name + '.');\n  casper.options.waitTimeout = 40000;\n  casper.start(scenario.url, function() {\n    casper.waitUntilVisible('#ius-form-sign-in', function (){\n       console.log('.....Trying to login......');\n       this.fillSelectors('#ius-form-sign-in', {\n          'input[id = ius-userid]' : 'XXXXX@gmail.com',\n          'input[id = ius-password]' : 'XXXXX'\n       });\n       this.click('#ius-sign-in-submit-btn-text');\n     });\n    casper.waitUntilVisible('#ius-user-id-manager-content-label', function() {\n      console.log('.....logged in......');\n      console.log('current url....' + this.getCurrentUrl());\n    });\n  });\n};\ndebug log:\nCasperJS:  [info] [phantom] waitFor() finished in 3942ms.\nCasperJS:  [info] [phantom] Step anonymous 6/7 https://accounts-e2e.intuit.com/account-manager.html (HTTP 200)\nCasperJS:  .....logged in......\nCasperJS:  current url....https://accounts-e2e.XXXXX.com/account-manager.html\nCasperJS:  [info] [phantom] Step anonymous 6/7: done in 5089ms.\nCasperJS:  [info] [phantom] Step _step 7/7 https://accounts-e2e.XXXXX.com/account-manager.html (HTTP 200)\nCasperJS:  [info] [phantom] Step _step 7/7: done in 5109ms.\nCasperJS:  linked-identities-manager-lookup-success\nCasperJS:  [info] [phantom] Done 7 steps in 5213ms\nCasperJS:  Comparison config file updated.\nCasperJS:  [debug] [phantom] Navigation requested: url=about:blank, type=Other, willNavigate=true, isMainFrame=true\nCasperJS:  [debug] [phantom] url changed to \"about:blank\"\nBitmap file generation completed.\n. ",
    "kiran-redhat": "@mgtalasila I don't see click/submit action in your first casper script. Do you have it else where?, can you try clicking submit button with a script?. Go you still see the issue? If so this:\ncasper.waitUntilVisible('#ius-form-sign-in', function (){\n// Here fill user name, password and click on //Submit. Then wait for some locator displayed //once logged in\n}). @mgtalasila , try adding onReady script and put a step to wait for one of the selector on page(once you successfully logged in. default it should take document screenshot if you don't specify any locators.\ncasper.waitUntilVisibile(\"selector\", function() {\n});. @garris , would you like to have a look at this PR?. I see the need to add tests for getFilename() in genBitmaps.js.\nUsing different config files for different view ports is good, however the challenge with that is maintaining two sets, and some times selector may be same for these different view ports in which case we will end up repeating same scenario.. Closing as related issue in casperjs got fixed and merged.. @joseph-stano , What I also observed is when screen size gets bigger misMatchThreshold doesn't seems to work effectively (of course may be because this is the percentage of change).\n. I also like what @mikenz suggested as that will clearly tell the actual mismatch otherwise we are ending up getting false positives.. Sharp dependency issue for BackstopJS. I've raised this issue with Sharp https://github.com/lovell/sharp/issues/879 but mentioning here too.\nUnable to install sharp on Amazon Linux AMI (4.9.17-8.31.amzn1.x86_64) related release notes:\nhttps://aws.amazon.com/amazon-linux-ami/2017.03-release-notes/.\nSteps to reproduce:\n1. Be on Amazon Linux AMI\n2. git clone https://github.com/garris/BackstopJS.git\n3. cd BackstopJS\n4. git checkout backstop-chromy\n5. npm install\nMore info:\n4497 verbose about to build /home/myusername/BackstopJS/node_modules/sharp\n4498 info build /home/myusername/BackstopJS/node_modules/sharp\n4499 info linkStuff sharp@0.18.2\n4500 silly linkStuff sharp@0.18.2 has /home/myusername/BackstopJS/node_modules as its parent node_modules\n4501 verbose linkBins sharp@0.18.2\n4502 verbose linkMans sharp@0.18.2\n4503 verbose rebuildBundles sharp@0.18.2\n4504 verbose rebuildBundles [ '.bin', 'caw', 'color', 'got', 'nan', 'semver', 'tar' ]\n4505 info install sharp@0.18.2\n4506 verbose unsafe-perm in lifecycle true\n4507 info sharp@0.18.2 Failed to exec install script\n4508 verbose unlock done using /home/myusername/.npm/_locks/sharp-724c992e50a0ae1d.lock for /home/myusername/BackstopJS/node_modules/sharp\n4509 verbose stack Error: sharp@0.18.2 install: node-gyp rebuild\n4509 verbose stack Exit status 1\n4509 verbose stack     at EventEmitter. (/usr/lib/node_modules/npm/lib/utils/lifecycle.js:217:16)\n4509 verbose stack     at emitTwo (events.js:87:13)\n4509 verbose stack     at EventEmitter.emit (events.js:172:7)\n4509 verbose stack     at ChildProcess. (/usr/lib/node_modules/npm/lib/utils/spawn.js:24:14)\n4509 verbose stack     at emitTwo (events.js:87:13)\n4509 verbose stack     at ChildProcess.emit (events.js:172:7)\n4509 verbose stack     at maybeClose (internal/child_process.js:862:16)\n4509 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:222:5)\n4510 verbose pkgid sharp@0.18.2\n4511 verbose cwd /home/myusername/BackstopJS\n4512 error Linux 4.9.17-8.31.amzn1.x86_64\n4513 error argv \"/usr/bin/node\" \"/usr/bin/npm\" \"install\"\n4514 error node v4.8.4\n4515 error npm  v2.15.11\n4516 error code ELIFECYCLE\n4517 error sharp@0.18.2 install: node-gyp rebuild\n4517 error Exit status 1\n4518 error Failed at the sharp@0.18.2 install script 'node-gyp rebuild'.\n4518 error This is most likely a problem with the sharp package,\n4518 error not with npm itself.\n4518 error Tell the author that this fails on your system:. Looks like Amazon Linux AMI doesn't have gcc-c++, sharp install fine after 'sudo yum install gcc-c++'.. shouldn't it be 'npm install backstop@beta' ? and\ncan't we run using locally installed backstop( without -g)?\nOn Aug 1, 2017 4:01 PM, \"Garris\" notifications@github.com wrote:\n\n@daveaspinall https://github.com/daveaspinall Please retest to see if\nthat addresses the issue. Thanks!\nremember to npm install -g backstopjs\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/480#issuecomment-319261412,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIyoHttFEeY86cwdn4zu45GX8mYK0ks5sTqL-gaJpZM4OfGwV\n.\n. \"Just fire off your chromy script in the ENV \"  you mean onReady and\nonBefore scripts?\n\nOn Aug 24, 2017 5:10 AM, \"Garris\" notifications@github.com wrote:\n\nThis is doable now. Just fire off your chromy script in the ENV and set\nthe chrome flag in your backstop config (use engineFlags prop)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/510#issuecomment-324401445,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI5XKywvuWohQ6Y_WZTZTiICmzCGQks5sbF0cgaJpZM4PASFY\n.\n. Thanks @garris , managed to run chrome headless-shell, however not able to use proxy with following flag in backstop config file, where should I be mentioning it?\n\n\"hostFlags\": [\n    \"--proxy-type=http\",\n    \"--proxy=127.0.0.1:4496\"\n  ],. Hey @garris \"hostFlags\": [\n'--proxy-server=127.0.0.1:**port**'\n  ], fixed the issue, however, where there are more than 6 viewports am getting \"GotoTimeoutError: goto() timeout\" error\nhttps://github.com/OnetapInc/chromy/blob/8e46818c723c04f09428df7636f1a85df766d934/src/error.js here is where it is coming from. I guess, one of the chromy got timed out ?\nfollowing is the log, it hangs after last line:\nCOMMAND | Executing core fortestcreateBitmaps | Selcted 1 of 1 scenarios.\nStarting Chromy: port:9222 --window-size=1366,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9223 --window-size=1920,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9224 --window-size=375,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9225 --window-size=320,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9226 --window-size=667,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9227 --window-size=360,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9228 --window-size=414,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9229 --window-size=768,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\nStarting Chromy: port:9230 --window-size=1024,3000,--proxy-server=127.0.0.1:4496\nChromy: onBefore.js\nChromy: onReady.js\n      COMMAND | Commandtestended with an error after [30.712s]\n      COMMAND | BackstopExcpetion: <<scenario name>> on <<viewport>>: GotoTimeoutError: goto() timeout\n. Sorry, I meant it hangs after following line of log:\nBackstopExcpetion: <<scenario name>> on <<viewport>>: GotoTimeoutError: goto() timeout\nDo you see any issues when 9 viewports are used?. Yes, I don't see this issue up to 6 viewports.. it definitely not because\nof increase in viewports but I think wait time for one of the ports getting\nover once it is over 6 viewports..\nOn Aug 25, 2017 8:32 AM, \"Garris\" notifications@github.com wrote:\n\nNo, number of viewports should not be an issue. Have you tried removing\nviewports?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/510#issuecomment-324749086,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI8uPoA5KF9m_pDxBngWVxpxse3znks5sbd3hgaJpZM4PASFY\n.\n. Here is the issue: When there are more than 6 view ports, backstop throwing error before actually running scenarios:\n\n\n. Hey @garris I see no issues when asyncCaptureLimit is set to 1. So, I dug deeper and:\n9 view ports ran successfully when CONCURRENCY_DEFAULT = 7;\n9 view ports gave the following error when CONCURRENCY_DEFAULT >=8\n\nSo, number of view ports not a problem, but when concurrency is >= 8 is a problem. I think one of the chrome's port probably not behaving as expected because of which chromy throwing the above-attached error?. I will check this tomorrow. @garris, how much RAM each instance of chrome\n roughly takes?( I understand that we are running 10 of them by default)\nOn Aug 27, 2017 3:33 PM, \"Garris\" notifications@github.com wrote:\n\nWhen backstop completes it displays a summary of tasks with duration times\nfor each. It would be helpful if you wanted to list times in relation to\nvarious concurrency settings.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/510#issuecomment-325174991,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI8O8FxBIG45VXS3WZO1qBh1sN_7aks5scOOCgaJpZM4PASFY\n.\n. @garris, this does looks like a memory issue on surface (didn't get chance to did deeper). However, am able to run with 7 concurrent chrome ports using asyncCaptureLimit  in config file.\n\nI have added chromePath and configured to accept path from config file, here is the PR https://github.com/garris/BackstopJS/pull/525 . . @LanceTurri , in /core/util/runChromy.js at 165th line insert below and try:\nchromePath: \"path\\to\\chromecanary.exe\",\nThis way you are telling Chromy about chrome canary location. If this works, see if chome canary.exe is at the location where chromey is expecting to be. \n. BackstopJS now have latest version with Chrome it's on before scripts are\nhere:\nhttps://github.com/garris/backstop-feature-tests/blob/master/backstop_data/engine_scripts/onBefore.js\nprobably you wants to use latest (npm install -g backstop)?\nOn Fri, Aug 25, 2017 at 9:59 PM, Alfredo Moretta notifications@github.com\nwrote:\n\nHI,\nfor auotatic logging i need to have two different cookie .I tried this\nsolution wrote in onBefore.js :\nmodule.exports = function(casper, scenario, vp) {\ncasper.echo('Setting cookies');\ncasper.then(function(){\ncasper.page.addCookie({name : 'cookie1', value: 'valueofcookie1'});\ncasper.page.addCookie({name : 'cookie2', value: 'valueofcookie2'});\n});\ncasper.thenOpen(scenario.url);\n};\ni noticed that only the last cookie added (in this case cookie2). I need\nboth of them for logging into mywebsite.Do you have a solution?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/513, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIxroKXN2NDgQKtC2P677cgm_-9-nks5sbpr0gaJpZM4PCdYp\n.\n\n\n-- \nThanks & Regards,\nKiran.\n. This really will be a good feature to add... Sounds good..I will work on that... is this what you mean @garris ?\n. Hey @garris, I've tested, this accepts chromePath, hostFlags and newly added engineConfig(happy to change it to hostConfig). I am happy to add engineConfig for Casper as well, your thoughts ?. @garris , I tried testing this branch with following configs:\nConfig1: \n    \"engineOptions\": {\n        \"engine\": \"chrome\",\n        \"waitTimeout\": 90000,\n        \"chromePath\": \"path/to/chrome\"\n    }\nConfig2: \n        \"engine\": \"chrome\",\n    \"engineOptions\": {\n        \"waitTimeout\": 90000,\n        \"chromePath\": \"path/to/chrome\"\n    }\nIn both cases I got this issue:\n\n. This change is been done and merged to master from https://github.com/garris/BackstopJS/pull/569, so closing this.. are you behind proxy? if so, please use casperFlags(if Casper)/hostFlags(if\nchromy).\nOn Sep 1, 2017 2:36 AM, \"reynaldoapb\" notifications@github.com wrote:\n\nThe default config works properly. I mean the file generated with backstop\ninit. But when I change URL for example , I allways got time out error.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/526#issuecomment-326315497,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIwklJcdvsol5-DQw_FSUxtsVGpCIks5sdsT2gaJpZM4PGomm\n.\n. Yes, I've tried document, body & body:noclip. \n\nLooks like Chromy is expecting to use .screenshotDocument (https://github.com/OnetapInc/chromy#screenshotdocumentoptions--)  to capture entire page however we are using .screenshot(), is that the reason? . chrome 61 built with latest chrome code is working as expected.. Try changing your config to\nmodule.exports = {\n    id: 'test',\n    viewports: [\n        {\n            name: 'phone',\n            width: 320,\n            height: 480\n        },\n        {\n            name: 'tablet_v',\n            width: 568,\n            height: 1024\n        },\n        {\n            name: 'tablet_h',\n            width: 1024,\n            height: 768\n        }\n    ],\n    scenarios: [\n        {\n            label: 'My Homepage',\n            url: 'https://garris.github.io/BackstopJS/',\n            hideSelectors: [],\n            removeSelectors: [],\n            selectorExpansion: true,\n            selectors: [\n                'body',\n                '.jumbotron',\n                '.firstPanel > div',\n                '.secondPanel'\n            ],\n            readyEvent: null,\n            delay: 500,\n            misMatchThreshold: 0.1\n        }\n    ],\n    paths: {\n        bitmaps_reference: 'backstop_data/bitmaps_reference',\n        bitmaps_test: 'backstop_data/bitmaps_test',\n        casper_scripts: 'backstop_data/casper_scripts',\n        html_report: 'backstop_data/html_report',\n        ci_report: 'backstop_data/ci_report'\n    },\n    engine: 'slimerjs',\n    \"casperFlags\": [\n        \"--engine=slimerjs\",\n        \"--proxy-type=http\",\n        \"--proxy=ip:PORT\",\n    ],\n    report: ['browser'],\n    debug: true\n};\nAlthough code doesn't require us to specify engine twice - give it a try (this works for me). Please replace proxy-type & proxy if you are using one.\nAre you able to run backstop test ?. @ryuran 1. are you about to find that in chrome console ? \n\nDo you see sale error with asyncCaptureLimit: 1,?\n\nIf 1 &2 are yes, clone  latest master and test. asyncCaptureLimit and asyncCompareLimit we're working fine for me. for number 1: open your app in Chrome browser press f12 then click on\nconsole then copy and paste your selector and hit enter. if you find element\nwait for your selector to be visible (probably chromy.visible() )\nOn Sep 5, 2017 9:24 PM, \"Yvain Liechti\" notifications@github.com wrote:\n\n@kiran-redhat https://github.com/kiran-redhat\n\nI don\u2019t know how to return more info from browser from travis-CI\nThis travis build is running with asyncCaptureLimit: 1\n   https://travis-ci.org/20minutes/colette/builds/271948792\n   https://travis-ci.org/20minutes/colette/builds/271948792 I have the\n   error\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/537#issuecomment-327121456,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIz_uD5ROOyWVDt21w2YFEBIEIiIwks5sfRNCgaJpZM4PK4Y4\n.\n. Each instance of chrome port seems to be using around 920MB . As you mentioned this probably could be because of memory, so closing.\n\n\n. Architecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                4\nOn-line CPU(s) list:   0-3\nThread(s) per core:    1\nCore(s) per socket:    4\nSocket(s):             1\nNUMA node(s):          1\nVendor ID:             GenuineIntel\nCPU family:            6\nModel:                 58\nModel name:            Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz\nStepping:              9\nCPU MHz:               3192.826\nBogoMIPS:              6388.72\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              256K\nL3 cache:              6144K\nNUMA node0 CPU(s):     0-3\n. @asci, I found the simplest way to solve this if you are using chrome is to change selector to \"document\". Are you using chrome or Firefox?. Would you like to use chrome with Chromy? If so I can put one ready to use\nproject template (just clone start working)?\nOn Oct 6, 2017 8:52 AM, \"mchepyala\" notifications@github.com wrote:\nThank you @anton-kulagin https://github.com/anton-kulagin and @garris\nhttps://github.com/garris for your prompt reply. Now I understood writing\ncasper files but confused as I see onReady.js in couple of places in the\nfolder.\n/engine_scripts\n/engine_scripts/chromy\n/engine_scripts/casper\nIn which onbefore.js shall i write the click events so the screen shots are\ntaken after click.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/554#issuecomment-334573705,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI8KY2AW0aNrKXKwknTFV9lUuTO3dks5spTN-gaJpZM4Pq4_e\n.\n. Hey @mchepyala , looks like there is already one here https://github.com/garris/BackstopJS/tree/786078a5caa3008fedf4e664e6f85121345eec19/examples/simpleReactApp is this helpful? let me know if not I will put one for you.. Hey @mchepyala , this is no different to instruction here in backstop js but I've put https://github.com/kiran-redhat/automated-visual-testing see if this may help you.. @mchepyala , sorry, pls see now.. something like this?\nhttps://github.com/garris/BackstopJS/pull/472\nOn Nov 2, 2017 4:09 AM, \"Garris\" notifications@github.com wrote:\n\nOk. Sounds good. PR is welcome.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/577#issuecomment-341134730,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI7kOdbrK2B1eUrxZOUAccskt7fvyks5syIm5gaJpZM4QDLWw\n.\n. created PR, @garris , please can you have a look ? https://github.com/garris/BackstopJS/pull/472. @garris , yup, double yes \ud83d\udc4d works fine (I've tested with chromePath in addition) and below is the log:\n\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=1920,4600\"],\"port\":9223,\"waitTimeout\":90000,\"visible\":false,\"chromePath\":\"path/to/chrome\",\"gotoTimeout\":360000}\n. Backstop chromy can't find it If selectors not locatable in chrome console.\nCan you try finding correct locator for this and try again?\nOn Nov 4, 2017 1:46 PM, \"Rich\" notifications@github.com wrote:\n\nSo even iterating the parent container, I still get \"not found\" for the\nsecond case. Maybe CSS selectors can't be used in this way? event when I\nrun it in the browser I get \"null\"\n[image: backstop-targeting-by-css]\nhttps://user-images.githubusercontent.com/399764/32400506-4aa07672-c0be-11e7-8225-dd3cf157e55d.jpg\n'\ndocument.querySelector('article[class^=root]:nth-of-type(2)\ndiv[data-preview=Button]')\nnull\n'\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/587#issuecomment-341859292,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI3rYCQyR08zbotf5ozhrKi-Jtdybks5sy7PvgaJpZM4QQYAp\n.\n. +1.\nI've see this issue intermittently, tried running on windows (in addition to amazon linux AMI) still I could see above issue. As you mentioned, I think chromy may not be able to close connections. @joseph-stano did you see this issue happening when asyncCaptureLimit is set to 1 ? (I am going to try this now)\n\nIn addition to above issue, I see following issue happening (which looks similar but mentioning): Note: Reference has a expected image (which is not here in this screenshot):\n\n. @garris , thanks for quick response. These tests are running in AWS code build, also I've tried in bamboo agent - every time test runs there shouldn't be any hanging processes as systems freshly gets created every time. \nWould you like me to try killing and see ?. My observations:\ncookies  - In my case, we can eliminate, as am not using cookies\nzombie chrome-headless instances - I see same issue on Amazon Linux AMI, Mac & Windows 10, so not sure if this might be a issue\nserver returns error  -  Not sure about this, 3-4 times out of 10 times these tests fails and they are not same tests.\nsome other app using chromy ports - Got the issue on bamboo so other no chance for other apps to use.. I ran my tests with asyncCaptureLimit as 1 and I see no problem. do you see any issues with  asyncCaptureLimit as 1 @joseph-stano ?\n@garris , this looks like an issue when triggering more than one instance of chrome.. @VladimirPittner are you thinking the issue happening as server not responding in 30 seconds ?\nFollowing are my scenarios:\nI ran below  Project 1 & 2 for 13 times with asyncCaptureLimit 1 all good all pass - no issues\nProject 1: 3 viewports - total of  117 tests (using specific selectors/components of page). It just runs backstop test (reference images are taken and stored previously)\nProject 2: 9 viewports - total of  126 tests (Using 'viewport' and 'document' as selectors). It just runs backstop test (reference images are taken and stored previously)\nEdit: My understanding is, the blank screens are randomly coming only when asyncCaptureLimit is set to >1.. @VladimirPittner , try using this and see if it helps?\n.chromy\n        .click('some-selector', true)\n        .evaluate(_scenarioResult = ${scenartioResult})\n        .evaluate(() => {\n            // ... some code ...${_scenarioResult}=${_scenarioResult}? result : false;\n            return result;\n        }). I think this was the issue:\nSince the error is being resolved by BackstopJS (https://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L319), tests are continuing even though there are some errors in onReady scripts where are before they were failing abruptly before. Because of which I think it is having blank screen.\nSolution:\nIn onBefore or onReady scripts: \n1. see if there are any selectors that are not present in DOM are being waited for(using chromey.wait or postInteractionWait) \n2. see if there are any functions that can't be resolved (This way you can be sure if they are being correctly resolved: module.exports = function (chromy, scenario, vp) {\n  let path = require('path');\n  let absolutePath = path.resolve(path.basename(__filename));\n  console.log('${absolutePath}' is running for: '${scenario.label}' on viewport:  '${vp.label}'`);\nreturn chromy\n    .evaluate(_absolutePath = '${absolutePath}', _scenario = '${scenario.label}', _vpLabel = '${vp.label}')\n    .evaluate(function () {\n      console.log('${_absolutePath}' successful for : '${_scenario}' on viewport: '${_vpLabel}');\n    });\n};)\nYou can figure out 1 & 2 by changing https://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L319 to .catch(e => console.log(e));\nStill open question:\nNot sure why this issue not happening when asyncCaptureLimit to 1.\n. @VladimirPittner , please see if point 2 above can help you.\n@joseph-stano please try point 1 above with following change which should tell you what exactly the problem is: https://github.com/garris/BackstopJS/blob/master/core/util/runChromy.js#L319 to .catch(e => console.log(e));. @ackmanx & @joseph-stano, \nQuick way: Once your backstop test is completed: look for COMMAND | Executing core forreport`` just after that you will be able to see which scenario with which viewport has issue.\nOR\ndo you guys use onReady.js (either global or local)? if you use paste below code into it (if not, please create one global onReady.js and paste below code) this will tell you exactly which scenario with which viewport having issue. Once you have onReady.js, please use \"onReadyScript\": \"onReady.js\" in your backstop config file.\nmodule.exports = function (chromy, scenario, vp) { let path = require('path'); let absolutePath = path.resolve(path.basename(__filename)); console.log('${absolutePath}' is running for: '${scenario.label}' on viewport: '${vp.label}'`);\nreturn chromy\n.evaluate(_absolutePath = '${absolutePath}', _scenario = '${scenario.label}', _vpLabel = '${vp.label}')\n.evaluate(function () {\nconsole.log('${_absolutePath}' successful for : '${_scenario}' on viewport: '${_vpLabel}');\n});\n};\n. Hey guys, found better way to debug,, do these 3 steps which will tell you where the problem is:\nStep 1 should tell you which scenario has the problem, step 2 will print BackstopJS error and step 3 will tell you exactly which selector not present in DOM.\n``javascript <\nStep 1. Add a onReady.js for your test and place this code in it \n let path = require('path');\n  require('../../../../helpers/clickAndHoverHelper')(chromy, scenario);\n  let absolutePath = path.resolve(path.basename(__filename));\n  console.log('${absolutePath}' is running for: '${scenario.label}' on viewport:  '${vp.label}'`);  \nStep 2:  Replace line 294 with  .catch(e => console.log('e: ', e)); in file node_modules\\backstopjs\\core\\util\\runChromy.js line 294 in \nStep 3:  Add console.log(Selector '${selector}' not present in DOM`); in Line 702 in node_modules\\chromy\\dist\\document.js >```. Hey @VladimirPittner , not sure why it isn't working for you (this is working perfectly fine for me).\nHow are you getting _scenarioResult into chromy ?. @ackmanx thanks for that,  have changed it.\nHey what you pointed exactly right,  getting that black screen eventhough all set up is correct when asyncCaptureLimit is > 1 where all good if asyncCaptureLimit is 1.. Change GoToTimeout to 360000 and see if still coming? \n@garris,  There seems to be some issue with gototimeout which is fixed in chromy .5.6 can we upgraded Backstop chromy dependency?  I have done that in my fork and all seems to work fine . @questionmarc @kevineye @garris  I am still randomly getting GotoTimeoutError: goto() timeout when I used asyncCaptureLimit 10 (all my tests have lots of content similar to www.amazon.com) but I don't see issue when only selectors or pages with small content is tested. Is this same with you guys? . Hey @kevineye thanks for you analysis.  I also observed that it is not working even with gotToTimeOut of 7 mins, as @questionmarc mentioned above in 'Edit' section, it is just silently failing by throwing GotoTimeoutError: goto() timeout when it can't open given url.\n. I had no problems using 0.5.6. But 0.5.7 getting hanged soon after logging 9224 Chrome v64 detected.. I had no problems using 0.5.6. \nBut chromy 0.5.7 failing with compare | Chromy error: GotoTimeoutError. See scenario \u2013  <scenario name> and not creating test screenshots. Chromy 0.5.7 accepting arguments in evaluate function as per below:\n. Update: Created a clean branch with BS 3.0.36 and Chromy 0.5.7(https://github.com/kiran-redhat/BackstopJS/tree/bs36-chromy57) \nI've tested following these steps all steps passed:\n1. Clone: https://github.com/kiran-redhat/BackstopJS/tree/bs36-chromy57\n2. npm i\n3. cli/index.js init\n4. cli/index.js test\n5. cli/index.js approve\n6. cli/index.js test\n@VladimirPittner , I haven't changed anything from chromy 0.5.5 to 0.5.7 in evaluate. I used in following way:\nmodule.exports = function (chromy, scenario, vp) {\n  let path = require('path');\n  let absolutePath = path.resolve(path.basename(__filename));\nreturn chromy\n    .evaluate(`_absolutePath = '${absolutePath}', _scenario = '${scenario.label}', _vpLabel = '${vp.label}'`)\n    .evaluate(function () {\n      console.log(`'${_absolutePath}' successful for : '${_scenario}' on viewport: '${_vpLabel}'`);\n    });\n}. @garris sanity tests passed as well, here is the PR: https://github.com/garris/BackstopJS/pull/615. I don't think backstop is supporting following.  Is it?\nemulate\": {\n                    \"name\": \"phone\",\n                    \"width\": 375,\n                    \"height\": 667,\n                    \"deviceScaleFactor\": 2.0,\n                    \"pageScaleFactor\": 1.0,\n                    \"mobile\": true,\n                    \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS\n9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko)\nVersion/9.0 Mobile/13B143 Safari/601.1\"\n                }\nOn Dec 7, 2017 9:34 PM, \"deap82\" notifications@github.com wrote:\n\nHello again @garris https://github.com/garris,\nTo solve my problem for the moment I made a fork:\nhttps://github.com/deap82/BackstopJS\nIt makes it possible to define my viewports like this;\n    \"viewports\": [\n        {\n            \"label\": \"phone\",\n            \"width\": 375,\n            \"height\": 667,\n  \"emulate\": {\n                \"name\": \"phone\",\n                \"width\": 375,\n                \"height\": 667,\n                \"deviceScaleFactor\": 2.0,\n                \"pageScaleFactor\": 1.0,\n                \"mobile\": true,\n                \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"\n            }\n        },\n        {\n            \"label\": \"desktop\",\n            \"width\": 1920,\n            \"height\": 1080\n        }\n    ]\n\nThere are two parts of my problem, the commit I've done to my fork (\ndeap82/BackstopJS@0205f7d\nhttps://github.com/deap82/BackstopJS/commit/0205f7db533888dc4a3e6b3aca6392d974486018)\nsolves the problem of defining my own custom devices for emulation.\nThe other problem is that when I used the \"iPhone6\" emulation device\nincluded in Chromy (defined here: https://github.com/OnetapInc/\nchromy/blob/master/src/devices.js), the width/height is configured as\ntwice as what it actually should be. Running backstopjs with that emulation\ngives me screenshots of the tablet design of my application. I suppose it\nhas to do with Retina and it seems to me that the \"deviceScaleFactor\" of\nthe emulate object isn't taken into account when chromy and/or backstop is\ndoing its' work.\nAlso, I tried to get rid of specifying the width/height both in the\nviewport and the emulate object above, but when they're not in the viewport\nobject backstop fails.\nIf you have any pointers about these things and what I've done in my fork,\nI'd be happy to rework this into an acceptable PR.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/608#issuecomment-349898586,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI7A1fJXmYKbWnsngzojqHxqHpvd7ks5s96MWgaJpZM4QyTJR\n.\n. hey thanks, yep I saw that, also the easy way to figure out its at report\ngeneration where to know for sure what failed.  I created this just\nspecific to html report\n\nOn Dec 13, 2017 9:50 AM, \"Vladimir Pittner\" notifications@github.com\nwrote:\n\n@kiran-redhat https://github.com/kiran-redhat meanwhile the new web UI\nis in developement (kudos @garris https://github.com/garris) you can\nclick on expand the list of scenarios and from that you might guess which\nscenarios didnt run probably (if you have them indexed it will be even\neasier)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/612#issuecomment-351190014,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIylAQTfStUf_Ap0SHrwzVtPZn_L1ks5s_ucsgaJpZM4Q4kdC\n.\n. Yup, we can close. I've tested 3.1.17 with my app all good.. I found setting asyncCaptureLimit 1 helped but otherwise isuue is\nintermittent\n\nOn Mar 14, 2018 6:28 AM, \"mike-malandra\" notifications@github.com wrote:\n\nI'm still getting this issue with BackstopJS v3.1.19 on Windows 10. After\nrunning backstop, there are several instances of chrome still open.\nI agree that lowering the async capture limit seems to help, but any ideas\nas to why higher limits are causing these failures?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/659#issuecomment-372750054,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI3T3yYkBp0EWdwXKPPNpuaCyscTzks5teAHBgaJpZM4R8vs6\n.\n. This will increase the speed exponentially. having browser opened and keep\nusing same instance\n\nOn Tue, Mar 27, 2018, 9:45 PM Iain Munro notifications@github.com wrote:\n\nHey @krisdigital https://github.com/krisdigital We're super excited for\npuppeteer. I'm currently trying to get it to run in Docker with the latest\nchanges from https://github.com/garris/BackstopJS/tree/puppeteer.\nOne thing I noticed is that we seem to create a new browser instance for\neach test case. We're currently experimenting with just having one browser\ninstance and creating only new page objects (tabs) for each test. Let me\nknow what you think.\nMy repo is at: https://github.com/iain17/BackstopJS/tree/puppeteer\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/704#issuecomment-376445216,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI1R8a6oVu4fYTqyOwiE05fU7IR0rks5tifwvgaJpZM4SuC7d\n.\n. I've seen the same. Only  asyncCaptureLimit: 1 seems to be reliable. Anything\nover - 2 or 3 times out of 10 fails\n\nOn Wed, Mar 21, 2018 at 8:31 AM, Garris notifications@github.com wrote:\n\n^^^ I have seen similar issues with testem.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/707#issuecomment-374727828,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrIzencqPfNLV3gkjrVY2QP4ZCT6oFks5tgVkegaJpZM4SyL57\n.\n\n\n-- \nThanks & Regards,\nKiran.\n. this is true, seeing this from the time we got nw react component to show\nthe difference, It was very clear before\nOn Fri, Mar 23, 2018, 1:53 PM Garris notifications@github.com wrote:\n\nA large page is hard to see -- would be nice to see that in item view.\nAlso, somehow the ref/test/scrubber radio buttons got borked. Please fix!\n\ud83d\udd49\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/710, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQUrI1HGBJapaqX6NPrXCE5L9UlW9iZxks5thEdxgaJpZM4S4AvC\n.\n. \n",
    "AlfredoMoretta": "i've the same issue, this is the script i put on OnBefore.js but didn't work for me:\nmodule.exports = function (casper, scenario, vp) {\n    console.log('onBefore.js has run for ' + vp.name + '.');\n    casper.then(function() {\n        casper.waitUntilVisible('#frm_login', function () {\n            casper.fillSelectors('#frm_login', {\n                '#Email': 'xxxxxxxxx',\n                '#Password': 'xxxxxxxx'\n            });\n            casper.click('#js-lite-login-submit');\n        });\n    })\n    casper.thenOpen(scenario.url);\n}\nanyone can help me?. hi Kiran,\nfirst of all thankyou for your answer.I've the latest version of backstopjs and i've tried the example you linked me but the error now is :\nCasperJS:  [info] [phantom] Starting...\nCasperJS:  [info] [phantom] Running suite: 6 steps\nCasperJS:  [debug] [phantom] Successfully injected Casper client-side utilities\nCasperJS:  SyntaxError: Expected an identifier but found 'cookiePath' instead\nCasperJS:    C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/loginCookie.js:2 in loadModule\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/bootstrap.js:282 in _compile\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/bootstrap.js:126 in .js\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/bootstrap.js:278 in _load\nCasperJS:    C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/bootstrap.js:311 in require\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/bootstrap.js:263 in require\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/code/bootstrap.js:302 in patchedRequire\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/code/genBitmaps.js:128\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/casper.js:1685 in runStep\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/casper.js:414 in checkStep\nCasperJS: TypeError: Object is not a constructor (evaluating 'require(getScriptPath(onBeforeScript))(casper, scenario, vp, isReference)')\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/code/genBitmaps.js:128\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/casper.js:1685 in runStep\nCasperJS:   C:/Users/Documents/Git/ta-yoox-fe/phantomjs:/platform/casper.js:414 in checkStep. @garris  thank you very much for your help.It's usefull! Thank you for the great work with backstopjs!\nAlfredo\n. ",
    "djskinner": "I believe I have a requirement for this functionality too. I'm working with display screens (think advertising display boards) and the URL parameters are actually tied to the possible viewport sizes.. I'm still wondering how best to approach this.\n\nIn the past, for cases like this I usually recommend just creating multiple configs and running them from the command line or a runner script -- just create a config for each viewport.\n\nFor my current requirement this would be say 10 different configs, each with one scenario. This is because the URL and the viewport are coupled. \nIs it possible to combine the backstop results into a single report or would I have to work with 10 separate reports?\nCan you point to any example code where multiple configs have been employed?. Just tried this out and can report everything is working as expected. My config is very simple but the visual output is better (Phantom seemed to struggled with some bits). Anecdotally I would say it runs faster too. Thanks for the effort, you managed to turn this around very quickly!. I'd love to be able to use the async Chromy API in these scripts as per the second example in the usage section here: https://github.com/OnetapInc/chromy\nMy use case is quite simple:\nif(vp.label === \"phone\") {\n  await chromy.emulate(\"iPhone6\");\n}\nawait chromy.click(\"button.loadingProgress\")\nIt's not clear to me how to achieve that conditional logic with the chaining interface without duplicating code.. Thanks for the explanation @garris - that worked for me.. Good spot - thanks for this. The error information can sometimes offer very little help.. ",
    "AkA84": "is there any update on this? This is something that in our project could really be useful. Hey @krisdigital , thanks a lot for doing this! I'm testing it out and I saw that when I set debugWindow: true, there is no chrome windows opened when I run the tests. Has the param name changed?\nEDIT: I also see no difference between debug: false and debug: true. @krisdigital thanks a lot again, and yeah I agree I didn't find the debug option useful unless i wanted to stare at a big dump of html for some reason!. anyone has any problems with running captures in parallel (say, 5 at a time)? I have random errors (puppeteer that can't find an element, for example) for scenarios with onReady scripts that run just fine when doing one capture at a time.\nI'm still not sure if this is something wrong with my setup/scripts, but just wanted to bring it up in case someone encountered the same issue. At the moment I can rely on the results only if i don't do parallel capturing, which really is a shame :(. @garris @krisdigital i installed the latest version (v3.2.12) and run those 3 scenarios again, and now backstop (with puppeteer) exits as soon as an error is encountered\nbash\nCOMMAND | Executing core for `reference`\ncreateBitmaps | Selected 3 of 3 scenarios.\nCREATING NEW REFERENCE FILE\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nx Close Browser\nCREATING NEW REFERENCE FILE\nBrowser Console Log 0: JSHandle:BackstopTools have been installed.\nPuppeteer encountered an error while running scenario \"Google / Wait for wrong selector\"\nError: waiting for selector \".does-not-exist\" failed: timeout 1000ms exceeded\n      COMMAND | Command `reference` ended with an error after [3.799s]\n      COMMAND | TypeError: Cannot read property 'join' of undefined\n                    at processScenarioView (node_modules/backstopjs/core/util/runPuppet.js:252:151)\n                    at <anonymous>\nI noticed that the line referenced in the error is this one\njs\nconst testPair = engineTools.generateTestPair(config, scenario, viewport, variantOrScenarioLabelSafe, scenarioLabelSafe, 0, `${scenario.selectors.join('__')}`);\nscenario.selectors in my case is undefined. This is the scenario object for me:\njs\n{\n  label: 'Google / Wait for wrong selector',\n  url: 'https://google.com',\n  onReadyScript: 'wait-for-wrong-selector.js',\n  sIndex: 1\n}. @garris (and @krisdigital ) everything works great now, thanks!. I'm sorry @garris i just noticed now that it still doesn't work as expected, the missing screenshots are marked as green, as if Backstop compared the two error images\n\nThis wasn't the case from what i see here, so something must've gotten broken after that. @garris no i've never approved any report in any of the tests i did as part of this issue, that's why i'm reporting this as a bug. I think the behaviour should be the one displayed in your screenshot\n\nand the one that Chromy has (with the due differences)\n\nRunning test gives the same output, but it's marked as failed. [...]\nNow report reports on the WaitTimeoutError and it fails, showing in the html report the missing screenshot for \"Google / Wait for wrong selector\"\n\notherwise imho this could be even worse than it was before: if before you knew the total number of scenarios you could quickly see that the number reported on was not right, now you can't even do that  ! You basically have to scroll down yourself and see if there are any errors reported (= you can't trust the report)\nAnd I'm not even considering the scenario where you are running backstop as part of a CI process where none of the two options are even possible :/. @garris I think I understand where we are diverging with our opinions on how things should work.\nThe way we use backstop (the first time, at least) in our project is to first run directly backstop reference so that we automatically get the baseline screenshots, and then to run backstop test to catch any diffs. In this case if a screenshot had a script error, backstop would not report it after running test, on the assumption that if the same error appeared on the reference screenshot then the dev must have approved it and therefore must be fine with it.\nInstead, if I understand correctly, the way you expect it to be used is to run directly test even the first time, then manually check if all the screenshots look ok and finally accept them so they can get promoted to original set of baseline screenshots. By checking manually the would-be baseline screenshots, the dev is sure to be aware of any screenshot with script errors and so if he's fine with having a that as a reference, then Backstop will be fine with it as well\nI see two possible problems with the latter approach (on the assumption that I got you right)\n1. It requires a manual check to approve the first set of baseline screenshots. This is fine if you have a small set of scenarios, but if you have a considerable amount (we have more than 120 scenarios at the moment), this step could not only become an annoyance but also be prone to human error\n2. It might not work well with CI. We intend to use backstop at some point in Jenkins, but in order to do that we need to create the reference screenshots automatically and thus to trust that backstop reports  any script errors that it might find, however consistent they might be\nLast point I though worth discussing was\n\nYou are allowed to check for (and approve) selectors not being available.\n\nBut wouldn't it be odd to rely on a scenario with a failing script to check whether a selector is available or not? Shouldn't backstop encourage devs, in that case, to write a successful script that check if a selector doesn't exist, instead of using a failing script that expect a selector to exist?\nAlso please note that this is not simply about a selector existing or not, it's about any script error. For example in changed my type.js script to call non existing method, and backstop still passed the comparison despite it\njs\nmodule.exports = async engine => {\n  // ...\n  await engine.nonExistingMethod('.does-not-exist', { timeout: 1000 }); // <---\n}\n\nAnd I tried one last thing: to have, for the same scenario, one error thrown for reference, and a different error thrown for test\n```js\n// when running \"reference\"\nmodule.exports = async engine => {\n  // ...\n  await engine.nonExistingMethod('.does-not-exist', { timeout: 1000 });\n}\n// when running \"test\"\nmodule.exports = async engine => {\n  // ...\n  await engine.waitFor('.does-not-exist', { timeout: 1000 });\n}\n```\nand backstop still passed the comparison, reporting only on the second error\n\nbut this means that then a scenario with a failing script will always be pass comparison as long as the script keeps failing, no matter what the reason for the failure is (could be a non-existent selector, a wrong method, internal engine error, etc). Thanks @garris for your reply!\nIf by adding that failOnException flag (or flags, one for reference and one for test) we can achieve the following, it sounds great to me!\n\nreference can be successful (exit code = 0) even if there are script errors. Basically as it is now. If someone wants the command to end with exit code 1, they can simply set failOnException: true on it\ntest, and by extent report, should fail (exit code = 1) if there are script errors. And by fail I don't mean \"exit immediately\" but i mean \"finish the whole run and then report the error\". The report should then mark as failed any scenario with both screenshots missing due to script errors, and that scenario should be counted in the \"failed\" total. This of course only if failOnException: true\n\nDoes that match what you had in mind for the failOnException flag?. +1 i think this would be really great for improving backstop's reliability @garris , especially because right now the parallel capturing for us simply doesn't work as it throws errors for scenarios that do not give any problem when single-capturing (see here).\nI would say that having backstopjs retry-ing on error to make sure that those failures are really there would be a great fallback mechanism that could allow us to hopefully finally make use of parallel capturing. @garris unfortunately it doesn't seem to be the case for me (backstopjs@3.2.16, puppeteer@1.4.0), not sure what others are reporting (was thinking about opening a separate issue about it)\nI get random timeout and script errors whenever i switch to parallel capture on scripts that have a 99% success rate when doing single capture. The other 1% is again random errors that seem happen for no discernible reason even on single capture (talking about even scenarios that just require to go to a url without having to run any script on them).\nThat's why I would consider this a huge improvement, it would provide a safety mechanism to avoid very annoying false positives whenever you get these errors that seems you have really no control over. > @AkA84 -- Just to sure, can you confirm you have set \"engine\": \"puppeteer\" in your config?\n@garris Yes absolutely, we've been using Puppeteer for a while now. Although I think it's important to point out that these reliability issues begun after we switched to Headless Chrome (first with Chromy and now with Puppeteer), while with PhantomJS we never encountered them.\n\nI completely understand this retry request from a practical view. But I am also conflicted about this feature\n[...]\nI really don't want to add a feature to compensate for the fact that the backstop is broken.\n\nYes I completely understand you. I'm far from wanting to promote a hit-it-with-a-wrench-until-it-works kind of approach!\nThis to me isn't to be intended as a way to dismiss performance/reliability issues with the tool itself, but as i said it's a fallback mechanism stemmed from a pragmatic approach: with a tool that depends on so many different variables, things can go wrong for many different reasons, some of which can be outside of the user's control. It is pretty bad to see a ~20min test run fail because of some random timeout error that never happened before and that doesn't seem to be due to problems in the script or the app/site being tested, especially if this is done in the context of CI.\nJust to be sure I tried parallel capturing again after your reply, and unfortunately I still see random errors popping up here and there, in every run :( Also I want to stress again that we see these random errors also in single capture, although much more rarely than when using parallel capture.\nFinally I thought that maybe this is a problem that we have only with our app, so i set up a simple test with these scenarios\njson\n{\n  \"label\": \"Google 1\",\n  \"url\": \"https://google.com\"\n},\n{\n  \"label\": \"Google / Type 1\",\n  \"url\": \"https://google.com\",\n  \"onReadyScript\": \"type.js\"\n},\n// ...\n{\n  \"label\": \"Google 99\",\n  \"url\": \"https://google.com\"\n},\n{\n  \"label\": \"Google / Type 99\",\n  \"url\": \"https://google.com\",\n  \"onReadyScript\": \"type.js\"\n}\nand first ran reference with no parallel capturing, then ran test with \"asyncCaptureLimit\": 7. In the first case it all went smoothly, in the second case I got errors on dozens of scenarios. I got errors also with \"asyncCaptureLimit\": 2,, although not as many (please let me know if you need some details about my set up)\nThanks as usual!. > Furthermore, if you are using deployment tools such a Jenkins you can set up your retry functionality there.\n@cactusa Unfortunately it's not really the same: you would end up retrying an entire 20-mins test suite just because of a single scenario that randomly errored out. This feature instead would retry only that scenario for an X (configurable) amount of times before declaring that there are indeed errors and failing the run. @garris following this conversation i did yet again more troubleshooting and it seems (but i'm not 100% sure yet) that most (i'm not sure yet if it's all) of these random errors stem from two reasons (one is very specific to our app, the other might be of interest to you)\n\nin some scenarios the browser is being redirected to the dashboard of the CMS that our app is based on, which is fetching a remote feed to display in one of the widgets. By using debugWindow: true i could see that randomly that remote request fails (probably because of the parallel requests?) and the CMS displays a JS alerts which prevents the browser to go further, thus timing out\nwe are relying heavily on page objects in our engine scripts: the page objects are simple Objects, not Classes that get instantiated. For that reason it seems that then all the multiple parallel Chromium instances end up using, at the same time, the same page object when running their scenarios, which leads to all sorts of random errors. When I trimmed our test suite down to only scenarios that used different page objects (basically one page object would be used only once in the entire suite), the random errors disappeared.\n\nI'm still investigating it, but thought fair to let you know what I got so far!\n(btw: I'm on macOs High Sierra 10.13.4, node v8.9.4). ",
    "SengitU": "I also need this feature, how can I help this PR?. Hello,\nI've created a PR for this feature, feel free to share your comments. See #844 .. @garris Hello, thanks for merging and releasing this so fast! . Hello again @garris ,\nI tried to use the changes today, but I couldn't find the changes in the code. I can't see changes also in unpkg; https://unpkg.com/backstopjs@3.5.8/core/util/createBitmaps.js\nAm I doing something wrong?. It's working now, thanks for your help all along! \ud83c\udf8a . ",
    "kiraarghy": "As with @SengitU this would be incredibly useful for me too. Can I help at all?. @garris I've written a rough new implementation of this, will submit it shortly.\nCould I ask:\n\n\nWhy would this need different behaviour for Puppeteer, Chromy and Puppeteer seem to use the scenarioViews which include a viewport size?\n\n\nRegarding tests, can't see it in the contributions guidelines but would you like unit tests to cover the changed functionality too, or just smoke tests?. \n\n",
    "seanfoo": "Thank you.  Does running CLI suppress the generation of teh html report?\n\nSean Forman\nSports Reference LLC, President, http://www.sports-reference.com/\nhttps://twitter.com/sean_forman     https://www.linkedin.com/in/seanforman\nOn Tue, Jul 11, 2017 at 9:55 PM, Garris notifications@github.com wrote:\n\nYes. There totally is. Set the report property to report: []. It will\nstill create the html report but wont try to open the browser.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/475#issuecomment-314622034,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAV6poW4rx2UZJaKAsBqDP4B7jjlrLXkks5sNCeWgaJpZM4OU7VC\n.\n. Thank you.\n\n\nSean Forman\nSports Reference LLC, President, http://www.sports-reference.com/\nhttps://twitter.com/sean_forman     https://www.linkedin.com/in/seanforman\nOn Tue, Jul 11, 2017 at 10:54 PM, Garris notifications@github.com wrote:\n\nno. the report is still generated. Just doesn't try to open the browser.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/475#issuecomment-314630255,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAV6ptEP6PO4LwliCAwseyim_lyl_TY7ks5sNDVggaJpZM4OU7VC\n.\n. \n",
    "azeez03": "Thank you.\nI assumed that when I actually tell it to click a button usong the casper\nscript it will click then take the screnshot and continue execution till\nthe end.\nPlease correct me if this assumption is wrong.\nAlso where should the execution script be onReady or the onBefore.\nThank you\nOn 13 Jul 2017 4:16 p.m., \"James Tudsbury\" notifications@github.com wrote:\n\nWhat command are you running?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/476#issuecomment-315090862,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AcjlVZ59zU_TBh0zxzkLnVKzf8w2AZ1wks5sNiaXgaJpZM4OXABu\n.\n. Hi,\n\nIts still not working for me.\nThank you.\nWarm Regards\nSalawu Azeez\n\nOn Oct 5, 2017, at 10:02 PM, mchepyala notifications@github.com wrote:\n@azeez03 https://github.com/azeez03 Is it working for you now. I have a similar issue. If its working, can you please share the entire folder as ZIP.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/garris/BackstopJS/issues/476#issuecomment-334576263, or mute the thread https://github.com/notifications/unsubscribe-auth/AcjlVQyiHQEw9rt8-qk96imebUxMAwUZks5spTXWgaJpZM4OXABu.\n\n\n. ",
    "joseph-stano": "Got it, I'll take a look at selectors.\nTo explain our use case a bit further - we're using a casper script (pretty slick!) to load multiple pages of our app before taking a full-height shot of it. So I might try to see if we can take a shot of each page.. I think this is a duplicate of https://github.com/garris/BackstopJS/issues/477.\n@luujam1 - would you agree?. Thanks @garris and @kiran-redhat.\nI've been pounding on our test suite this morning and seemed to slim down our issues with @garris pkill -f \"(chrome)?(--headless)\" before each backstop instantiation, but even still I saw occasional failures.\n@kiran-redhat - I'll try \"asyncCaptureLimit\": 1 and let that bake for a bit.  When refactoring our backstop suite awhile back to leverage async more effectively, I thought I had seen some correlation between the asyncCaptureLimit and intermittent failures. But now I can't seem to reliably reproduce the issue regardless of the limit.. Good find, @ackmanx. To summarize, we're thinking our DOM changes slow down in an async runtime, and chromy is attempting to interact with an element before it's available.\nWe will try leveraging chromy's wait(<selector>) on all of our DOM interactions (mostly just click() and type()).\nWe'll update this thread with our findings.. Alright, good news guys. That seemed to be our issue. We added wait(<selector>) to all of our DOM interactions and we've run our suite 15+ times with \"asyncCaptureLimit\": 20. All clear!\nHere are the guts of our solution if you're interested.\nWe have a helper script in which we introduced two functions for click() and type():\nlet chromy\nexports.init = (chromyReference) => {\n    chromy = chromyReference\n    return this\n}\nexports.click = (selector) => {\n    chromy.wait(selector).click(selector)\n    return this\n}\nexports.type = (selector, text) => {\n    chromy.wait(selector).type(selector, text)\n    return this\n}\nAnd then in our onReadyScript:\nconst interactions = require('../interactions.js')\nmodule.exports = function (chromy, scenario, vp) {\n    interactions\n        .init(chromy, vp)\n        .click('.some-selector')\n        .type('.another-selector', 'text to type')\n}\nA few chromy/backstop tweaks helped us debug this work:\n  - backstop: index.js:65  - log uncaught errors (this is generally helpful to catch errors in onReadyScript too)\n  - chromy: document.js - in reject(new WaitTimeoutError('...')) - we added the selector on which we were waiting. In a few of our scenarios we discovered we had bogus selectors that were never working in the first place, so our test was timing out.\nHope this helps others with the same issue!\n. @Kenith - Sorry for the delay. I'm not quite sure, but I wonder if you could do something like this:\ntry {\n    chromy.wait(\"selector\")\n} catch (e) {\n    if (e instanceof WaitTimeoutError) {\n        console.log('all good')\n    } else {\n        throw e\n    }\n}\nOnly problem is that test may take awhile as it reaches the timeout (20sec I think). You may want to play with those timeouts if this is a common use case.. ",
    "mikenz": "resemble.js:427:                  data.misMatchPercentage = (mismatchCount / (height*width) * 100).toFixed(2);\nIt's always rounded to two decimals places.. Probably should move to data.rawMisMatchPercentage\nhttps://github.com/Huddle/Resemble.js/blob/master/resemble.js#L469\ndata.rawMisMatchPercentage = (mismatchCount / (height*width) * 100);\n            data.misMatchPercentage = data.rawMisMatchPercentage.toFixed(2);. ",
    "daveaspinall": "Hi Garris,\nSo happy to see Chromy support! Thanks for making this happen \ud83d\ude4c\ud83c\udffb\nI've just grabbed backstopjs@beta to try it out and it runs much slower than the slimerjs/phantomjs engines? Running backstop reference on a single scenario in three viewports, and I must get a screenshot every 10-15 seconds. Scenario config is below (everything else is from backstop genConfig) :\n{\n      \"label\": \"Chromy\",\n      \"url\": \"/styleguide.html\",\n      \"hideSelectors\": [\n        \"[data-shop-map]\",\n        \"[data-search-map]\"\n      ],\n      \"removeSelectors\": [\n        \".sg-pattern-head\",\n        \".sg-pattern-extra\"\n      ],\n      \"selectorExpansion\": true,\n      \"selectors\": [\n        \".sg-pattern\"\n      ],\n      \"readyEvent\": null,\n      \"delay\": 500,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\" : true\n    }\n\"engine\": \"chromy\",\n\"report\": [\"browser\"]\nAny specific config that would be slowing this down?. @garris sure no problem \ud83d\ude42\nThe page it's testing does have quite a few selectors (~52 elements), but there must be something with my setup as it took over 20mins and still hadn't finished \ud83d\ude48. Hey @dotneet!\nSure, versions for both stable Chrome and Canary below:\nChrome: Version 59.0.3071.115\nCanary: Version 61.0.3163.0\nJust wanted to say I'm actually really enjoying Chromy (we use it on some other tests) and thanks for the brilliant work \ud83d\ude07 . Update: Backstop is using Canary (which is apparently up to date) but it's still very slow. @dotneet Thanks for the speedy solution!. @dotneet @garris: Updated the dependencies and tried the reference again but it's no faster I'm afraid \ud83d\ude15\n```\nnpm view backstopjs@3.0.5 dependencies\n{ casperjs: '^1.1.0-beta5',\n  chalk: '^1.1.3',\n  chromy: '^0.3.6',\n  'fs-extra': '^0.30.0',\n  junitwriter: '~0.3.1',\n  minimist: '^1.2.0',\n  'node-resemble-js': '^0.2.0',\n  'object-hash': '1.1.5',\n  open: '0.0.5',\n  os: '^0.1.1',\n  'p-map': '^1.1.1',\n  'phantomjs-prebuilt': '^2.1.7',\n  sharp: '^0.18.1',\n  sinon: '^1.17.7',\n  temp: '^0.8.3' }\n```. @garris no problem! Appreciate the help from both of you on this.\nRan the test and it looks much faster (although still nowhere near the 15s of phantomjs)! Console output below:\nCOMMAND | Command `reference` sucessfully executed in [43.171s]\nCOMMAND | Command `openReport` sucessfully executed in [0.063s]\nCOMMAND | Command `report` sucessfully executed in [0.175s]\nCOMMAND | Command `test` sucessfully executed in [42.062s]\nThere must be an issue with my specific config. Going to copy the backstop.json over from these tests and see if that helps.\nUpdate: copied the config over to my project and removed all but the isExpanded scenario:\nCOMMAND | Command `reference` sucessfully executed in [443.649s]. @garris apologies for the late reply!\n\nThere is an optimization planned where multiple selectors would only require much less rendering work -- this would probably make a very big difference in your case.\n\nThis may help, but I've also tried the reference on only 3 selectors and it still ran slow?\n\n@daveaspinall are you able to provide me access to the web app which causes the issue. I would like to benchmark the issue.\n\nHappy to set up my project for you to test! You may inadvertently find a problem with the setup. I'll send you a link shortly \ud83d\ude42. @garris test project setup for you:\nhttps://github.com/daveaspinall/backstop-patternlab-test\nRunning backstop reference on in this test on my machine takes [428.798s]. @garris as I've said before, I really appreciate you putting this issue high priority! \ud83d\ude07. @garris @dotneet great! I'll have a play tomorrow!. @garris Can confirm the reference task is much much faster!\nWas:\nCOMMAND | Command `reference` sucessfully executed in [2143.046s]\nNow:\nCOMMAND | Command `reference` sucessfully executed in [35.389s]\nSeriously great work!! \ud83d\ude4c\ud83c\udffc    Going to mark this issue as complete \ud83c\udf89\nNow to fix our issue with Chromy in my Docker container and our setup with be sweet. ",
    "josh-wilson-sociomantic": "Hmm, I have a set of scenarios that pass individually, but when I run them together (even just 9 scenarios), backstop hangs (two chrome instances never close when I run all tests). So tests/comparison etc is never run. I haven't been able to pin this down to anything specific. (There's some Chromy selector errors, but it still takes shots and these scenarios pass when run on their own...).\nAnyone else come up against this?\nIm on macosx, node 8.1.4, chrome 60, backstopjs 3.0.7.\nHappy to debug if anyone has any pointers as to where to start.\n. Okay, left it running even longer:\n(node:74325) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: connect ETIMEDOUT 127.0.0.1:9228 So the browser instance is timing out, but backstop isn't picking it up (I think)\n\nSetting chromy to be viewable I can see the last windows don't progress to a url at all...  (digging). Doesn't seem t be any specific test, sadly. Just 10-12+ tests running and it happens. \n\nPerhaps some async process is failing and that one chrome instance is preventing the backstop from continuing?\n\n@garris yeh,that's what I was thinking. Digging in runChromy now  and it seems like one or two instances of Chromy open, but maybe after goto has already been called on it? \nI started digging up in createBitmaps, and the only thing there could be p-map passing them on before they're ready, though I doubt that.\nI wont be back on this machine for a few days, but I'll be digging in more when I can. Thanks, @garris \ud83d\udc4d . @garris I'm happy to say, I found a Chrome instance that was lurking and seemed to be blocking a port. Once I killed the process, everything has been running smoothly. \nI've no idea what caused it to block/hang or if it was my normal chrome having done something there...\nFor now seems good, and I'm keeping an eye for the problem, if it happens again I should be able to glean something more useful. \ud83d\udc4d  (but i hope it doesn't :P ). https://github.com/garris/BackstopJS/pull/484. In backstop-feature-tests on osx, node 8.1.4  / backstop 3.0.7,  I'm getting   Error: Cannot navigate to invalid URL errors on each test.\nSimilarly if I try and run tests in the examples folder in the chromy branch.. > chrome canary latest is required for tests\nAha. I missed that somewhere. Maybe that's why. I'll try more with canaries and if it's not a problem, close this \ud83d\udc4d . no problems in canary thus far. Cloooosing. Thanks for your patience @garris !. I think if it is required, we shouldn't run the tests at all and just throw a warning / note on install? Probably pointing to brew as you noted. I think that'd make the most sense/be simplest if it's easily detectable.. ",
    "sattaman": "I've got an error running tests, I've added here , although maybe it should have been in this repo ? https://github.com/OnetapInc/chromy/issues/45\n. i was missing the ,\n      \"misMatchThreshold\" : 0.1 \nin the config doh! . ",
    "kensoh": "@garris , @dotneet and guys, just dropping by to say a huge CONGRATS on bringing headless chrome to production! I think this is the first project I see moving from older frameworks to headless chrome, and successfully :smile:\nI don't use BackstopJS but is an active user of CasperJS for couple of years. Had previously spoken to Chromy creator Shinji and I really second what Garris said. I especially like the clean and rapidly extending API and his fast rate of iteration putting features into prod so fast.\nSorry for posting and not really adding any contribution to this thread. Just can't contain my excitement that Garris and Shinji pulled this off so fast.. ",
    "lancetharper": "Looks like attribute selectors no longer work? Not sure if this belongs here or in chromy though.\nworks:\nselectors: [\n  '.test'\n]\ndoesn't work:\nselectors: [\n  \"[data-backstop='test']\"\n]. @garris correct. \nchrome runs MUCH faster though so I'm very excited to see this version released!\nedit:\nIssue for chromy (https://github.com/OnetapInc/chromy/issues/60). Ok. I have a js config so I'll do it that way. Just wanted to make sure there wasn't another way to do it with the scripts.. @garris Do you think this would be a difficult feature to add? I can probably help out if you think it's reasonable.. I have a similar problem in both reference and test file generation.\nI have 4 breakpoints specified --> phone, tablet_v, tablet_h, desktop. So every selector should get 4 screenshots.\n2 of my selectors only get 3 screenshots. One is missing \"phone\" the other is missing \"tablet_h\". \nThey are missing in both reference and test, but it knows that they should be compared because it fails when it tries to do the diff.\nThis just started failing after I updated from 3.0.25. Node: 8.8.1\nnpm: 5.5.1\nchrome: 62\nbackstop: 3.0.31\nI updated my node/npm in case that was the issue and now it's even more inconsistent. Sometimes it's missing 6 or 7 screenshots now. \nconfig (generated) and output gist here\nEDIT:\n@garris  I just had a clean run of everything. The only thing I did was restart chrome and close any instances that may have been hanging from previous attempts, regenerate reference and run a test against those.. @garris After I had a clean run, I made a change just to double check that it was working. It failed where it should have but also 1 place it shouldn't have (didn't have a test screenshot but it did have a reference).\nI checked activity monitor to see if there were any chrome processes that weren't exited -- there was one. I killed it and ran again and everything worked as expected.\nSo it seems the issue I'm seeing is chromy/backstop not killing chrome processes sometimes...?. ",
    "devm87": "HI guys, I was wondering if someone could help me with the error I am facing below. I've tried updating my Backstop JS to Chrome headless but can't seem to install using the command below, is this correct?\nMany thanks,\nD:\\AEM_BACKSTOPJS_SMOKE_TESTS>npm install -g backstopjs@beta\nnpm ERR! Windows_NT 6.1.7601\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\\nnode_modules\\npm\\bin\\npm-cli.js\" \"install\" \"-g\" \"backstopjs@beta\"\nnpm ERR! node v6.9.5\nnpm ERR! npm  v3.10.10\nnpm ERR! code EAI_AGAIN\nnpm ERR! errno EAI_AGAIN\nnpm ERR! syscall getaddrinfo\nnpm ERR! getaddrinfo EAI_AGAIN registry.npmjs.org:443\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     https://github.com/npm/npm/issues\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     D:\\AEM_BACKSTOPJS_SMOKE_TESTS\\npm-debug.log\nD:\\AEM_BACKSTOPJS_SMOKE_TESTS>. Thanks for replying so quickly @Primajin I have installed npm modules before which has worked okay. In this case, I also logged into cmd using an admin user but to no avail. I'll check out on the proxy settings though and rule out the fact that the proxy is an issue :). Hi @Primajin I spoke to our Network team who said there may not be able to enable/modify our proxy settings in order to run the test below. I tried running the tests from home (using home Wifi) instead of work and came up with a separate error. Any ideas what might be causing this?\nMany thanks,\nD:\\AEM_BACKSTOPJS_SMOKE_TESTS\\backstopjs-smoke-tests>npm install -g backstopjs\nnpm ERR! registry error parsing json\nnpm ERR! registry error parsing json\nnpm ERR! registry error parsing json\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: @types/node@6.0.66 (node_modules\\backstopjs\\node_modules\\chrome-launcher\\node_modules\\@types\\node):\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: Unexpected token < in JSON at position 0\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     [if IE]>\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     <link rel=\"SHORTCUT ICON\" href=\"https://nexus.aem.avivaaws.com/nexus/favicon.ico\"/>\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     <![endif]\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: @types/mkdirp@^0.3.29 (node_modules\\backstopjs\\node_modules\\chrome-launcher\\node_modules\\@types\\mkdirp):\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: Unexpected token < in JSON at position 0\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     [if IE]>\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     <link rel=\"SHORTCUT ICON\" href=\"https://nexus.aem.avivaaws.com/nexus/favicon.ico\"/>\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     <![endif]\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:     Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:   \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY:\nnpm ERR! Windows_NT 6.1.7601\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"-g\" \"backstopjs\"\nnpm ERR! node v6.9.5\nnpm ERR! npm  v3.10.10\nnpm ERR! Unexpected token < in JSON at position 0\nnpm ERR! \nnpm ERR!   \nnpm ERR!     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm ERR!     \nnpm ERR!\nnpm ERR!     \nnpm ERR!     [if IE]>\nnpm ERR!     <link rel=\"SHORTCUT ICON\" href=\"https://nexus.aem.avivaaws.com/nexus/favicon.ico\"/>\nnpm ERR!     <![endif]\nnpm ERR!\nnpm ERR!     \nnpm ERR!   \nnpm ERR!   \nnpm ERR!     404 - Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm ERR!     Request is serviced by NPM metadata service, remote access not needed from DefaultNpmProxyRepository(id=npmjs)\nnpm ERR!   \nnpm ERR! \nnpm ERR!\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     https://github.com/npm/npm/issues\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     D:\\AEM_BACKSTOPJS_SMOKE_TESTS\\backstopjs-smoke-tests\\npm-debug.log\nD:\\AEM_BACKSTOPJS_SMOKE_TESTS\\backstopjs-smoke-tests>\n. Anyone who can help with the above? :(. Wow! So backstop test --filter=ScenarioLabel?. ",
    "eugenefedoto": "@garris Bunch of remote errors such as [error] [phantom] remote error > http://localhost:3001/images/esfiddle.png failed to load (404). I'm able to access that esfiddle.png URL through my browser, but apparently not through phantom.. I re-installed the non-beta backdropjs and restarted the computer. Now the image is showing up. I'm still getting some remote errors reported by Casper, but I'll figure that out later.. ",
    "bb-ceccles": "Thanks for the update, I have tried to install the \"Windows Software Development Kit (SDK) for Windows 8.1\"\nThis didn't help but would be great if sharp is removed as a dependency as that is where the install is tripping up.\nThanks again for the quick response.  We have backstop running on mac and it is amazing and a big help especially with the new Chrome integration so thanks.. Hi @garris \nThanks for the speedy response again. \nThe install works correctly and did not throw any errors. On initial run it was throwing errors reporting the chromy expected chrome version 61 (current live version is 60 sitll)\nI have had to install chrome canary (v61) but this has then resolved the issues and allowed me to run the tests.\nThe tests are not passing due to minimal change differences in the comparisons. I am not sure if this is a chrome version difference or the chromy plugin or just difference in font rendering between mac and PC. Website is still in development :-)\nSee fail example.\n\nI will look in to the issues and try and report back if there is anything found related to the library. I have a feeling it is just font related.\n. ",
    "EricBou": "Hi @garris \nI work with Patricia and I just discovered the cause of his error\nWhen I look at the list of versions in github, I find version 2.7.3 to be the most recent. However, NPM finds versions 2.7.5 and 2.8.4. Is it voluntary or is an error.  Just run \"npm show backstopjs@* version\"\nIn addition, in version 2.8.4, the dependency chromy has been added. This causes problems with the installation of sharp on several computers that I use. Is that chromy is mandatory with this version or it is going to be a new dependency only with version 3.x.\nCurrently I have freeze backstop to version 2.7.5 to fix the problem.\nRegards\nEric\n. ",
    "willenium": "Nice it works now! Thanks @garris . Yes I just wanted to ask this as well. +1. ",
    "ryuran": "@garris, good information but for a looping animation (loader) I can\u2019t wait the end.\nSo, I should disable the css animation rules? In the \u201con ready\u201d script?. I use this on my project and it seems working as I would. Thanks\n```javascript\nmodule.exports = function (casper, scenario, vp) {\n    casper.evaluate(function () {\n        var styleEl = document.createElement('style');\n    // Append style element to head\n    document.head.appendChild(styleEl);\n\n    // Grab style sheet\n    var styleSheet = styleEl.sheet;\n\n    // Insert CSS Rule\n    styleSheet.insertRule('*, *:before, *:after { -webkit-animation-delay: 0s !important; -webkit-animation-duration: 0s !important; animation-delay: 0s !important; animation-duration: 0s !important; }', styleSheet.cssRules.length);\n});\nconsole.log('onReady.js has run for ' + vp.label + '.');\n\n};\n. @garris yes, my second try is at 1:1\nIt\u2019s better but travis return positive whereas backstop was not able to finish test and I have some errors in logs.\nChromyJS returned an unexpected error while attempting to capture a selector. { WaitTimeoutError: evaluate() timeout\n    at EvaluateTimeoutError.ExtendableBuiltin (/home/travis/build/20minutes/colette/node_modules/chromy/dist/error.js:44:28)\n    at EvaluateTimeoutError.TimeoutError (/home/travis/build/20minutes/colette/node_modules/chromy/dist/error.js:73:128)\n    at new EvaluateTimeoutError (/home/travis/build/20minutes/colette/node_modules/chromy/dist/error.js:118:145)\n    at Chromy._evaluateWithReplaces$ (/home/travis/build/20minutes/colette/node_modules/chromy/dist/document.js:484:21)\n    at tryCatch (/home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:65:40)\n    at Generator.invoke [as _invoke] (/home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:299:22)\n    at Generator.prototype.(anonymous function) [as throw] (/home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:117:21)\n    at tryCatch (/home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:65:40)\n    at invoke (/home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:155:20)\n    at /home/travis/build/20minutes/colette/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js:167:13\n    at  name: 'WaitTimeoutError' }\n``\n. I add log for test scenario label.\nIt seems fail on./docs/item-theme-skins.htmlor the next one./docs/item-theme-styles.html.\nI check this files with html validator, they are valid.\nSo I\u2019m blocked. All is fine in local environment.. @kiran-redhat \n1. I don\u2019t know how to return more info from browser in travis-CI logs\n2. This travis build is running withasyncCaptureLimit: 1` https://travis-ci.org/20minutes/colette/builds/271948792 I have the error\n. No error in my local chrome.\nBackstop.js run fine in local environment with all test to green.\nI update backstopjs:\n\u2514\u2500\u252c backstopjs@3.0.24\n  \u2514\u2500\u2500 chromy@0.5.2\nAnd I try to change delay to 200 (it was 100), but it stops always on the same test.\nWithout error this time but with travis timeout:\nhttps://travis-ci.org/20minutes/colette/builds/271982035. It seems fail most often on test with <img>. ",
    "YStrauch": "Yay!. Indeed it is, thank you for noticing!. ",
    "fede-green": "Sad! there's not a version for ubuntu yet :(.\nIs there a way to downgrade? I'm exploring backstop, seems interesting! :). ",
    "trevobr": "I've installed Canary at my Mac but still doesn't work. :(. ",
    "peterhry": "If you see that message in your travis log, you\u2019ll need to load the chrome beta addon and set CHROME_PATH so chrome-launcher knows where to find the beta.\naddons:\n  chrome: beta\nenv:\n  - CHROME_PATH=/usr/bin/google-chrome-beta. ",
    "digitalpencil": "@garris that's great thanks, working fine now.. Thanks @garris , problem persists though and has gotten worse.\nInstalled Chrome Canary Version 62.0.3199.0 (Official Build) canary (64-bit)\nbackstop -v BackstopJS v3.0.22 BackstopJS 3.0.22\nReference/test fails on fifth scenario, regardless of what scenario that is (i can shuffle the order around and will always fail on fifth). Each reference/test will again complete, if run individually, through filter.\n```\nbackstop test\nBackstopJS v3.0.22\nLoading config:  /Users/davegrant/Sites/scratch/html/backstop.json\nCOMMAND | Executing core for test\ncreateBitmaps | Selcted 13 of 13 scenarios.\nStarting Chromy: port:9222 --disable-gpu,--force-device-scale-factor=1,--window-size=320,1024\nStarting Chromy: port:9223 --disable-gpu,--force-device-scale-factor=1,--window-size=768,1024\nStarting Chromy: port:9224 --disable-gpu,--force-device-scale-factor=1,--window-size=1268,1024\nStarting Chromy: port:9225 --disable-gpu,--force-device-scale-factor=1,--window-size=320,1024\n\n\n\n[Function]\nStarting Chromy: port:9226 --disable-gpu,--force-device-scale-factor=1,--window-size=768,1024\n[Function]\nStarting Chromy: port:9227 --disable-gpu,--force-device-scale-factor=1,--window-size=1268,1024\n[Function]\nStarting Chromy: port:9228 --disable-gpu,--force-device-scale-factor=1,--window-size=320,1024\nStarting Chromy: port:9229 --disable-gpu,--force-device-scale-factor=1,--window-size=768,1024\nStarting Chromy: port:9230 --disable-gpu,--force-device-scale-factor=1,--window-size=1268,1024\nStarting Chromy: port:9231 --disable-gpu,--force-device-scale-factor=1,--window-size=320,1024\n9227 LOG >  Testing viewport: desktop\n9225 LOG >  Testing viewport: phone\nStarting Chromy: port:9232 --disable-gpu,--force-device-scale-factor=1,--window-size=768,1024\nStarting Chromy: port:9233 --disable-gpu,--force-device-scale-factor=1,--window-size=1268,1024\nStarting Chromy: port:9234 --disable-gpu,--force-device-scale-factor=1,--window-size=320,1024\n      COMMAND | Command test ended with an error after [12.003s]\n      COMMAND | BackstopExcpetion: ctaPrompt on undefined: Error: Failed to launch a browser.\n9226 LOG >  Testing viewport: tablet\n```\n\n\n\nIncreasing asyncCompareLimit from 200 to 400 additionally outputs the aforementioned 11 SIGINIT listeners added error.. @garris i think it might have been a timeout error.. i'm not too sure. it seems to be more reliable now.\nI've been monitoring memory usage but machine has 16GB so shouldn't be overrunning and barely scrapes 4GB used while tests are running.\nI've just run a test with \"asyncCaptureLimit\": 20,  \"asyncCompareLimit\": 400 and despite output of SIGINT error, all tests completed successfully.\nRunning with 1 for both completes as well, albeit much slower.\nClosing as I believe this has resolved it however i'll keep an eye on it and let you know of any changes.\nThanks. ",
    "LanceTurri": "The path was correct when I went to debug, but upgrading to backstopjs 3.0.20 seems to have solved the issue. Thank you for all of the hard work!. ",
    "jimmaaay": "Edit: james-tannwestlake is my work github account by the way\nFurther update on this. I believe the test command requires the temp file with the code at the bottom of the file core/util/compare/index.js\n```javascript\nmodule.exports = function (config) {\n  var compareConfig = require(config.tempCompareConfigFileName).compareConfig;\n  var report = new Reporter(config.ciReport.testSuiteName);\n  var asyncCompareLimit = config.asyncCompareLimit || ASYNC_COMPARE_LIMIT;\nreturn map(compareConfig.testPairs, pair => comparePair(pair, report, config), {concurrency: asyncCompareLimit})\n    .then(\n      () => report,\n      e => logger.error('The comparison failed with error: ' + e)\n    );\n};\n```. ",
    "seanr": "@garris I ran into this too - at the least, can we make the location configurable (or is it?)? Or clean them up after they're no longer needed? Right now, it's polluting a directory that is in git leading to the possibility of someone inadvertently adding these temp files to our repo.. ",
    "nurovi": "Thank you for the speedy reply! I'll go through those instructions.. ",
    "hbrannan": "I am having a similar issues trying to use readyEvent w/ a chrome engine. TimeoutError every time  (though does work with PhantomJS). Did you resolve this @mirzazeyrek? . @garris -- Thanks for the response. was using Chrome@61.0.3163.91, just downloaded & used Canary@63.0.3222.0 and reverted to the near- out of the box backstop init \nThe error: https://cl.ly/0j1t0e3g2y0K. Let me know if anything seems out of place, or it would be helpful to see the functioning phantomjs/ casper version. \nThe near out of the box config adds w/ readyEvent  :\n\"readyEvent\": \"_READY\",\nwhich is logged in the final script tag before body close in the html \n<script type=\"text/javascript\">\n      console.log('_READY')</script>\nThe goal is to screenshot content contained w/in the scrollr container, after React renders & additional JS loads. I've tried variants with ready selectors, delays, or just using attempting to chain chromy methods  like .wait, but am not having success.\nThe following has had success in a non-backstop node environment and : \nchromy.chain()\n      .goto('https://local.umt.io/')\n      .wait(5000)\n      .scroll(0, 500)\n      .evaluate(() => {\n        return window.pageYOffset\n      })\n      .result(function(length){\n        console.log(length)\n      })\n      .screenshot() // take screenshot of whole document\n      .result((png) => {\n        fs.writeFileSync('out_doc.png', png)\n      })\n      .pdf()\n      .result((pdf) => {\n        fs.writeFileSync('out.pdf', pdf)\n      })\n      .end()\n      .then(() => chromy.close())\n      .catch(_ => { console.log(_); chromy.close() })\n. Yes, vanilla backstop init runs just fine.  \nFrom the local install (versions), many of the backstop feature tests are failing, for the most part, positioning seems to be just off enough to register as a fail.\nHere is the output config:\nreport({\n  \"testSuite\": \"BackstopJS\",\n  \"tests\": [\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_Simple_0_document_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_Simple_0_document_0_phone.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_Simple_0_document_0_phone.png\",\n        \"label\": \"Simple\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.87\",\n          \"analysisTime\": 100,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_Simple_0_document_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_Simple_0_document_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_Simple_0_document_1_tablet.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_Simple_0_document_1_tablet.png\",\n        \"label\": \"Simple\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.83\",\n          \"analysisTime\": 207,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_Simple_0_document_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_delay_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_delay_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_delay_0_moneyshot_0_phone.png\",\n        \"label\": \"delay\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.44\",\n          \"analysisTime\": 17,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_delay_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_delay_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_delay_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_delay_0_moneyshot_1_tablet.png\",\n        \"label\": \"delay\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.70\",\n          \"analysisTime\": 147,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_delay_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_readyEvent_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_readyEvent_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_readyEvent_0_moneyshot_0_phone.png\",\n        \"label\": \"readyEvent\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 1\n          },\n          \"misMatchPercentage\": \"3.44\",\n          \"analysisTime\": 16,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_readyEvent_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_readyEvent_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_readyEvent_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_readyEvent_0_moneyshot_1_tablet.png\",\n        \"label\": \"readyEvent\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.70\",\n          \"analysisTime\": 142,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_readyEvent_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_readySelector_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_readySelector_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_readySelector_0_moneyshot_0_phone.png\",\n        \"label\": \"readySelector\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.44\",\n          \"analysisTime\": 16,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_readySelector_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_readySelector_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_readySelector_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_readySelector_0_moneyshot_1_tablet.png\",\n        \"label\": \"readySelector\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.70\",\n          \"analysisTime\": 145,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_readySelector_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_noDelay_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_noDelay_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_noDelay_0_moneyshot_0_phone.png\",\n        \"label\": \"noDelay\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.32\",\n          \"analysisTime\": 17,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_noDelay_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_noDelay_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_noDelay_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_noDelay_0_moneyshot_1_tablet.png\",\n        \"label\": \"noDelay\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.49\",\n          \"analysisTime\": 112,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_noDelay_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_0_p_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_0_p_0_phone.png\",\n        \"selector\": \"p\",\n        \"fileName\": \"backstop_features_expanded_0_p_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.13\",\n          \"analysisTime\": 7,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_0_p_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_1_p__n1_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_1_p__n1_0_phone.png\",\n        \"selector\": \"p.__n1\",\n        \"fileName\": \"backstop_features_expanded_1_p__n1_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"19.20\",\n          \"analysisTime\": 2,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_1_p__n1_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_2_p__n2_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_2_p__n2_0_phone.png\",\n        \"selector\": \"p.__n2\",\n        \"fileName\": \"backstop_features_expanded_2_p__n2_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.89\",\n          \"analysisTime\": 7,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_2_p__n2_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_3_p__n3_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_3_p__n3_0_phone.png\",\n        \"selector\": \"p.__n3\",\n        \"fileName\": \"backstop_features_expanded_3_p__n3_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.81\",\n          \"analysisTime\": 7,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_3_p__n3_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_4_p__n4_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_4_p__n4_0_phone.png\",\n        \"selector\": \"p.__n4\",\n        \"fileName\": \"backstop_features_expanded_4_p__n4_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.37\",\n          \"analysisTime\": 13,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_4_p__n4_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_5_p__n5_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_5_p__n5_0_phone.png\",\n        \"selector\": \"p.__n5\",\n        \"fileName\": \"backstop_features_expanded_5_p__n5_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.26\",\n          \"analysisTime\": 7,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_5_p__n5_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_6_p__n6_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_6_p__n6_0_phone.png\",\n        \"selector\": \"p.__n6\",\n        \"fileName\": \"backstop_features_expanded_6_p__n6_0_phone.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_0_p_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_0_p_1_tablet.png\",\n        \"selector\": \"p\",\n        \"fileName\": \"backstop_features_expanded_0_p_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.46\",\n          \"analysisTime\": 89,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_0_p_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_1_p__n1_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_1_p__n1_1_tablet.png\",\n        \"selector\": \"p.__n1\",\n        \"fileName\": \"backstop_features_expanded_1_p__n1_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"analysisTime\": 30,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_1_p__n1_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_2_p__n2_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_2_p__n2_1_tablet.png\",\n        \"selector\": \"p.__n2\",\n        \"fileName\": \"backstop_features_expanded_2_p__n2_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"5.38\",\n          \"analysisTime\": 53,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_2_p__n2_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_3_p__n3_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_3_p__n3_1_tablet.png\",\n        \"selector\": \"p.__n3\",\n        \"fileName\": \"backstop_features_expanded_3_p__n3_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"4.65\",\n          \"analysisTime\": 59,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_3_p__n3_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_4_p__n4_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_4_p__n4_1_tablet.png\",\n        \"selector\": \"p.__n4\",\n        \"fileName\": \"backstop_features_expanded_4_p__n4_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"2.42\",\n          \"analysisTime\": 31,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_4_p__n4_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_5_p__n5_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_5_p__n5_1_tablet.png\",\n        \"selector\": \"p.__n5\",\n        \"fileName\": \"backstop_features_expanded_5_p__n5_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.06\",\n          \"analysisTime\": 41,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_expanded_5_p__n5_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_expanded_6_p__n6_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_expanded_6_p__n6_1_tablet.png\",\n        \"selector\": \"p.__n6\",\n        \"fileName\": \"backstop_features_expanded_6_p__n6_1_tablet.png\",\n        \"label\": \"expanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notExpanded_0_p_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notExpanded_0_p_0_phone.png\",\n        \"selector\": \"p\",\n        \"fileName\": \"backstop_features_notExpanded_0_p_0_phone.png\",\n        \"label\": \"notExpanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.13\",\n          \"analysisTime\": 3,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_notExpanded_0_p_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notExpanded_0_p_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notExpanded_0_p_1_tablet.png\",\n        \"selector\": \"p\",\n        \"fileName\": \"backstop_features_notExpanded_0_p_1_tablet.png\",\n        \"label\": \"notExpanded\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.46\",\n          \"analysisTime\": 57,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_notExpanded_0_p_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_magicSelectors_0_document_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_magicSelectors_0_document_0_phone.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_magicSelectors_0_document_0_phone.png\",\n        \"label\": \"magicSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.87\",\n          \"analysisTime\": 72,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_magicSelectors_0_document_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_magicSelectors_1_viewport_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_magicSelectors_1_viewport_0_phone.png\",\n        \"selector\": \"viewport\",\n        \"fileName\": \"backstop_features_magicSelectors_1_viewport_0_phone.png\",\n        \"label\": \"magicSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"4.66\",\n          \"analysisTime\": 39,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_magicSelectors_1_viewport_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_magicSelectors_0_document_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_magicSelectors_0_document_1_tablet.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_magicSelectors_0_document_1_tablet.png\",\n        \"label\": \"magicSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.83\",\n          \"analysisTime\": 204,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_magicSelectors_0_document_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_magicSelectors_1_viewport_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_magicSelectors_1_viewport_1_tablet.png\",\n        \"selector\": \"viewport\",\n        \"fileName\": \"backstop_features_magicSelectors_1_viewport_1_tablet.png\",\n        \"label\": \"magicSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.80\",\n          \"analysisTime\": 165,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_magicSelectors_1_viewport_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_hideSelectors_0_document_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_hideSelectors_0_document_0_phone.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_hideSelectors_0_document_0_phone.png\",\n        \"label\": \"hideSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.01\",\n          \"analysisTime\": 101,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_hideSelectors_0_document_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_hideSelectors_0_document_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_hideSelectors_0_document_1_tablet.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_hideSelectors_0_document_1_tablet.png\",\n        \"label\": \"hideSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"1.56\",\n          \"analysisTime\": 206,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_hideSelectors_0_document_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_removeSelectors_0_document_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_removeSelectors_0_document_0_phone.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_removeSelectors_0_document_0_phone.png\",\n        \"label\": \"removeSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.46\",\n          \"analysisTime\": 52,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_removeSelectors_0_document_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_removeSelectors_0_document_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_removeSelectors_0_document_1_tablet.png\",\n        \"selector\": \"document\",\n        \"fileName\": \"backstop_features_removeSelectors_0_document_1_tablet.png\",\n        \"label\": \"removeSelectors\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.53\",\n          \"analysisTime\": 144,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_removeSelectors_0_document_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notFound_0_monkey_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notFound_0_monkey_0_phone.png\",\n        \"selector\": \".monkey\",\n        \"fileName\": \"backstop_features_notFound_0_monkey_0_phone.png\",\n        \"label\": \"notFound\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notFound_0_monkey_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notFound_0_monkey_1_tablet.png\",\n        \"selector\": \".monkey\",\n        \"fileName\": \"backstop_features_notFound_0_monkey_1_tablet.png\",\n        \"label\": \"notFound\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notVisible_0_noShow_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notVisible_0_noShow_0_phone.png\",\n        \"selector\": \"#noShow\",\n        \"fileName\": \"backstop_features_notVisible_0_noShow_0_phone.png\",\n        \"label\": \"notVisible\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_notVisible_0_noShow_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_notVisible_0_noShow_1_tablet.png\",\n        \"selector\": \"#noShow\",\n        \"fileName\": \"backstop_features_notVisible_0_noShow_1_tablet.png\",\n        \"label\": \"notVisible\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.00\",\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_cookies_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_cookies_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_cookies_0_moneyshot_0_phone.png\",\n        \"label\": \"cookies\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 1\n          },\n          \"misMatchPercentage\": \"0.10\",\n          \"analysisTime\": 27,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_cookies_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_cookies_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_cookies_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_cookies_0_moneyshot_1_tablet.png\",\n        \"label\": \"cookies\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.24\",\n          \"analysisTime\": 106,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_cookies_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_customReadyScript_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_customReadyScript_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_customReadyScript_0_moneyshot_0_phone.png\",\n        \"label\": \"customReadyScript\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 1\n          },\n          \"misMatchPercentage\": \"91.59\",\n          \"analysisTime\": 12,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_customReadyScript_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_customReadyScript_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_customReadyScript_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_customReadyScript_0_moneyshot_1_tablet.png\",\n        \"label\": \"customReadyScript\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"64.03\",\n          \"analysisTime\": 155,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_customReadyScript_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_redirect_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_redirect_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_redirect_0_moneyshot_0_phone.png\",\n        \"label\": \"redirect\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -1\n          },\n          \"misMatchPercentage\": \"3.32\",\n          \"analysisTime\": 18,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_redirect_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_redirect_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_redirect_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_redirect_0_moneyshot_1_tablet.png\",\n        \"label\": \"redirect\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.49\",\n          \"analysisTime\": 141,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_redirect_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_hover_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_hover_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_hover_0_moneyshot_0_phone.png\",\n        \"label\": \"hover\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 1\n          },\n          \"misMatchPercentage\": \"3.49\",\n          \"analysisTime\": 16,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_hover_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_hover_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_hover_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_hover_0_moneyshot_1_tablet.png\",\n        \"label\": \"hover\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.75\",\n          \"analysisTime\": 115,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_hover_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_click_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_click_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_click_0_moneyshot_0_phone.png\",\n        \"label\": \"click\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 1\n          },\n          \"misMatchPercentage\": \"3.32\",\n          \"analysisTime\": 30,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_click_0_moneyshot_0_phone.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_click_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_click_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_click_0_moneyshot_1_tablet.png\",\n        \"label\": \"click\",\n        \"misMatchThreshold\": 0.1,\n        \"diff\": {\n          \"isSameDimensions\": true,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": 0\n          },\n          \"misMatchPercentage\": \"0.49\",\n          \"analysisTime\": 141,\n          \"getDiffImage\": null\n        },\n        \"diffImage\": \"../bitmaps_test/20170925-083509/failed_diff_backstop_features_click_0_moneyshot_1_tablet.png\"\n      },\n      \"status\": \"fail\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_0_phone.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_0_phone.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_0_phone.png\",\n        \"label\": \"misMatchThreshold_requireSameDimensions\",\n        \"requireSameDimensions\": false,\n        \"misMatchThreshold\": 5,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -3\n          },\n          \"misMatchPercentage\": \"4.31\",\n          \"analysisTime\": 16,\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    },\n    {\n      \"pair\": {\n        \"reference\": \"../bitmaps_reference/backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_1_tablet.png\",\n        \"test\": \"../bitmaps_test/20170925-083509/backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_1_tablet.png\",\n        \"selector\": \".moneyshot\",\n        \"fileName\": \"backstop_features_misMatchThreshold_requireSameDimensions_0_moneyshot_1_tablet.png\",\n        \"label\": \"misMatchThreshold_requireSameDimensions\",\n        \"requireSameDimensions\": false,\n        \"misMatchThreshold\": 5,\n        \"diff\": {\n          \"isSameDimensions\": false,\n          \"dimensionDifference\": {\n            \"width\": 0,\n            \"height\": -54\n          },\n          \"misMatchPercentage\": \"3.63\",\n          \"analysisTime\": 139,\n          \"getDiffImage\": null\n        }\n      },\n      \"status\": \"pass\"\n    }\n  ]\n});\n. The first command backstop reference --config=backstop_features does not work for me-- https://cl.ly/2e0G3z1E2b3i\nI did cut a new branch & retry, and now all tests pass. I suspect that the the first test may have run in a Chrome instead of Canary context. Perhaps that accounts for the difference. The backstop reference command, however, still fails.\nconfig.pdf\nI'm going to try to do a bit of debugging in through runChromy file to see if I can trace delays and ready events as they are called. If you have suggestions about what may be going wrong, I'd love your thoughts.\n. ",
    "pniederlag": "While the test suite works without problems (with pupeteer and even with chromy engine) I can't get the readyEvent to work with my config(using chromy engine), also I can see the string being printed on console.. thx for your advice. So, how would I detect loading of backstop tools? As I have experimented with the delay a little bit and feeling bad about having to balance between execution time and reliability of the tests I thought the readyEvent would be a safer/better approach. But, it terribly failed so far. thx for your help/advice, greatly appreciated.. ",
    "josephmcasey": "Hi @anton-kulagin ! Could you provide the reproduction steps necessary for me to replicate this issue, and I could help you resolve this?. As an additional note, I believe --disable-infobars=true should be added to the default hostFlags constant to prevent false negatives from cropping up when using debugWindow:true. Thanks @garris !. Relevant thread regarding these chromium flags, https://bugs.chromium.org/p/chromium/issues/detail?id=477779. Steps to reproduce the problem:\n1. npm install -g backstopjs\n2. Change directory to desired project\n2. backstop init\n3. Change \"debugWindow\": false to \"debugWindow\": true in backstop.json \n3. backstop test\n4. Open Chrome Canary console\n5. type document.createElement('canvas').getContext('experimental-webgl')\n6. returns null\nWhat is the expected behavior?\nreturns WebGLRenderingContext\nWhat went wrong?\nreturns null\nRoot Cause?\nChrome flags should include --use-gl=any and not include --disable-gpu. I like that solution very much @garris . Where do you post your priority queue?. Could you post it under the project/wiki tab in Github so others, like myself, can help address issues at the top of the priority queue?. Thanks for doing that @garris!. ",
    "anton-kulagin": "Steps to reproduce : \n1. Create html markup and put on page one of the icons of font awesome (here a link to icons http://fontawesome.io/icons/  )  . \n2. Create reference and run backstop test. \n3. You will see that this icon is broken.. @garris , @josephmcasey , @PhilippeVay  Thanks for helping, i dont know what i do wrong first time, but now it works.. @garris Hi, i do this stuff but cant create a branch. So here you can see my commit https://github.com/garris/BackstopJS/compare/master...anton-kulagin:approve-filter?diff=split&expand=1&name=approve-filter. The same situation for phantomjs\n```\n module.exports = function(engine, scenario, vp) {\n    engine.evaluate(function() {\n        document.querySelector('body').style.background = 'red';  //<-this works\n    });\n    console.log('onReady.js has run for: ', vp.label);  //<--- this works\n    engine.onError = function(msg, trace) {\n        var msgStack = ['ERROR: ' + msg];\n    if (trace && trace.length) {\n        msgStack.push('TRACE:');\n        trace.forEach(function(t) {\n            msgStack.push(' -> ' + t.file + ': ' + t.line + (t.function ? ' (in function \"' + t.function+'\")' : ''));\n        });\n    }\n\n    console.error(msgStack.join('\\n'));   <--- this not\n\n};\nengine.onConsoleMessage = function(msg) {\n    console.log('---------<' + msg);  //<----this not\n}\n\n};\n```\n\nConsole of my page\n. @mchepyala  Here you have small hello world examples https://github.com/garris/BackstopJS/tree/master/capture/engine_scripts/casper. Hi @garris, could you look into it. . @garris Hi, could you look into pull request for this issue?. @garris Hi,could you look into it when you be able. Without this update work with expressjs has an issue. Will it generate html and CI report if i just keep report parameter empty?. @garris I read Readme one more time and didnt see anything about formatting filenames.  In code i see some parameter `captureConfigFileName`, is it this one you mentioned? If yes i think it will be great to add information about it to Readme.\nAnd as i understood you think that this is not good idea to add property for setting generation name rules for folder where test result screenshots will be placed?. @garris , thank you for you patient and answering for my questions. . @garris I have same idea, to specify viewport. But i think that the easiest way is add into scenario option \"viewports\" where default value 'all' but user can specify just names of viewports as array.\n```\nscenarios: [\n  {\n    \"selectors\": [\n      \".aListOfStuff li\"\n    ],\n    \"selectorExpansion\": false\n    \"viewports\":[\"tablet\",\"mobile\"]\n  },\n  {\n    \"selectors\": [\n      \".aListOfStuff a\"\n    ],\n    \"selectorExpansion\": false\n    \"viewports\":[\"desktop\"]\n  }\n]\n```. I also think that array preferable . @praful-dhabekar Hi, try do this 2 steps\n1. You need to install latest version of nodejs(at least 6version but i\\`m working on 8) and npm (i\\`m using 4.1.2)\n2. Try to install it with globally flagnpm install -g backstopjs. Or if you have project based on node modules just add to your package.json to dependencies backstop\n``` \n\"dependencies\": {\n        \"backstopjs\": \"^3.0.31\"\n}\n```\nand after that just runnpm install. Hi @garris . Could you look into it?. @garris Thank you. Could you close this issue.. This script doesn`t work for me. Windows Server 2008\n\nGet-CimInstance Win32_Process -Filter \"Name = 'chrome.exe' AND Com\nmandLine LIKE '%--headless%'\" | %{Stop-Process $_.ProcessId}\n'Get-CimInstance' is not recognized as an internal or external command,\noperable program or batch file.\n`. @liamaharon, @garris Sorry guys, looks like my fault. Im try to start script in cmd, but should in Power-Shell. . 1. Chrome V63\n2. CI1 - Windows Server 2008 , CI2 - Windows Server 2012, Local env - Win10. So reference screenshot from CI1 is different for CI2 either local env.\n3. \n{\n      \"id\": \"backstop_default\",\n      \"viewports\": [\n            {\n                  \"label\": \"tablet\",\n                  \"width\": 1024,\n                  \"height\": 768\n            },\n            {\n                  \"label\": \"desktop\",\n                  \"width\": 1920,\n                  \"height\": 1080\n            }\n      ],\n      \"scenarios\": [\n            {\n                  \"label\": \"Tabs_Horizontal_On_Top__AWESOME__Tab_selected\",\n                  \"url\": \"http://site-adress/tab\",\n                  \"selectors\": [\n                        \".column-splitter .col-xs-6 .tabs\"\n                  ],\n                  \"misMatchThreshold\": \"0.1\",\n                  \"onBeforeScript\": \"\",\n                  \"cookiePath\": \"\",\n                  \"referenceUrl\": \"\",\n                  \"readyEvent\": \"\",\n                  \"readySelector\": \"\",\n                  \"delay\": \"\",\n                  \"hideSelectors\": [],\n                  \"removeSelectors\": [],\n                  \"onReadyScript\": \"chromy/clickAndHoverHelper.js\",\n                  \"hoverSelector\": \"\",\n                  \"clickSelector\": \".col-xs-12 .component .col-xs-12.col-xs-6 .col-xs-12.tabs .component-content .tabs-heading li\\\\:nth-child(3)\",\n                  \"postInteractionWait\": \"\",\n                  \"selectorExpansion\": \"\",\n                  \"requireSameDimensions\": \"\"\n            }\n      ],\n      \"paths\": {\n            \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n            \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n            \"engine_scripts\": \"backstop_data/engine_scripts\",\n            \"html_report\": \"backstop_data/html_report\",\n            \"ci_report\": \"backstop_data/ci_report\"\n      },\n      \"report\": [\n            \"CI\"\n      ],\n      \"engine\": \"chrome\",\n      \"engineFlags\": [],\n      \"asyncCaptureLimit\": 2,\n      \"asyncCompareLimit\": 2,\n      \"debug\": false,\n      \"debugWindow\": false\n}. And what the logic will be if I create global onReady script and another script to onReady of scenario. Did they both will be applied?. @garris Sure, so my idea is to provide possibility to write test scenarios from browser. I use angular + express. So i send to express server new scenario and it should update backstop.json file. And everything fine with this. But after this update backstop still see outdated list of test and this list will be updated just after restarting express server because of when you use require inside makeConfig.js it create cache for config file. \nBy adding this one line of code i will just say for require method to take backstop.json file each time by reading it from drive but not from cache. \n",
    "reynaldoapb": "Facing this problem I can see that the default example (reference and test)  after I ran $backstop init works! But if I change any parameter and run it again (reference or test) I got timeout error. Even if I try a small site like http://google.com.. first try on my localhost.:\n{\n  \"id\": \"backstop_default\",\n  \"viewports\": [\n    {\n      \"label\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"label\": \"tablet\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"onBeforeScript\": \"chromy/onBefore.js\",\n  \"onReadyScript\": \"chromy/onReady.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"local homepage\",\n      \"cookiePath\": \"backstop_data/engine_scripts/cookies.json\",\n      \"url\": \"http://localhost:8080/checkout/cadastro\",\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 0,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \".chromy\",\n      \"clickSelector\": \"\",\n      \"postInteractionWait\": \"\",\n      \"selectors\": [],\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"debug\": false,\n  \"debugWindow\": false\n}\n. The default config works properly. I mean the file generated with backstop init. But when I change URL for example , I allways got time out error. . @garris I've did what you say. Reinstalled and update everything (Node,NPM) and it works. Thks. p.s.: And removed additional parameters on bakcstop.json. . Try to kill chrome with shell command  taskkill /F /IM chrome.exe  and run everything again.. ",
    "luujam1": "@joseph-stano yeah that looks like the same issue.. ",
    "reneolivo": "Hello @garris, I amended my PR to add the || '' code. Is this ok now? . :+1: for the feature request. ",
    "adbutterfield": "Hello! Any idea when this will get released? I just hit this issue today too. . Awesome! Thanks!!!. ",
    "ocetnik": "```\nBackstopJS v3.0.22\nLoading config:  /myProject/index.js \nCOMMAND | Executing core for reference\n  clean | backstop_data/bitmaps_reference was cleaned.\ncreateBitmaps | Selcted 1 of 1 scenarios.\nRunning CasperJS with:  [ '/myProject/node_modules/backstopjs/capture/genBitmaps.js',\n  '--engine=slimerjs',\n  '--captureConfigFileName=/var/folders/__/c9cfdph90939p5_m2w47nngc0000gn/T/capture/32f9dcae709d8450519960f4d7f04064d6756e52.json' ]\nCasperJS:  Debug is enabled! \nCasperJS:  CREATING NEW REFERENCE FILES \nCasperJS:  this.filter is not a function                                                  \nCasperJS:    /myProject/file:/myProject/node_modules/casperjs/modules/casper.js:1449 \nCasperJS:    /myProject/file:/myProject/node_modules/casperjs/modules/casper.js:1449 in log \nCasperJS:    /myProject/file:/myProject/node_modules/casperjs/modules/casper.js:1881 in start \nCasperJS:    /myProject/file:/myProject/node_modules/backstopjs/capture/genBitmaps.js:82 in capturePageSelectors \nCasperJS:    /myProject/file:/myProject/node_modules/backstopjs/capture/genBitmaps.js:345 \nTesting script failed with code: 1\nAn unexpected error occured. You may want to try setting the debug option to true in your config file.\n      COMMAND | Command reference ended with an error after [1.712s]\n      COMMAND | Error: An unexpected error occured. You may want to try setting the debug option to true in your config file.\n                    at ChildProcess. (/myProject/node_modules/backstopjs/core/util/createBitmaps.js:161:18)\n                    at emitTwo (events.js:125:13)\n                    at ChildProcess.emit (events.js:213:7)\n                    at maybeClose (internal/child_process.js:927:16)\n                    at Socket.stream.socket.on (internal/child_process.js:348:11)\n                    at emitOne (events.js:115:13)\n                    at Socket.emit (events.js:210:7)\n                    at Pipe._handle.close [as _onclose] (net.js:545:12)\n```. @garris Thank you so much. It is probably caused by my other dependencies, because when I create new project which contains only BackstopJS dependency, everything works well. But when I add BackstopJS dependency into my project, the above error will occur. So in the second case BackstopJS uses different dependency/dependencies (installed by my project dependencies) caused by carets in package.json.\n@kiran-redhat backstop test throws the same error and your config doesn't fix this error. But thank you for your time and willingness.. You're welcome. Could you release new patch version, please?. ",
    "tfrijsewijk": "I'm experiencing the same issue, with the same versions as mhavelent. My generated configuration right before it's passed to backstopjs:\n{ id: 'dso',\n  viewports:\n   [ { label: 'phone', width: 320, height: 480 },\n     { label: 'tablet', width: 1024, height: 768 } ],\n  onBeforeScript: 'chromy/onBefore.js',\n  onReadyScript: 'chromy/onReady.js',\n  scenarios:\n   [ { label: 'aanvragen.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\aanvragen.html' },\n     { label: 'accordion.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\accordion.html' },\n     { label: 'alert.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\alert.html' },\n     { label: 'anchor.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\anchor.html' },\n     { label: 'badge.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\badge.html' },\n     { label: 'breadcrumbs.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\breadcrumbs.html' },\n     { label: 'button-group.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\button-group.html' },\n     { label: 'button.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\button.html' },\n     { label: 'carousel.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\carousel.html' },\n     { label: 'checken.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\checken.html' },\n     { label: 'dropdown-button.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\dropdown-button.html' },\n     { label: 'dso-select.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\dso-select.html' },\n     { label: 'footer.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\footer.html' },\n     { label: 'form-horizontal.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\form-horizontal.html' },\n     { label: 'form-inline.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\form-inline.html' },\n     { label: 'form-vertical.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\form-vertical.html' },\n     { label: 'grid.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\grid.html' },\n     { label: 'header.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\header.html' },\n     { label: 'help-block.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\help-block.html' },\n     { label: 'highlight-box.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\highlight-box.html' },\n     { label: 'horizontal-group-checkboxes.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-checkboxes.html' },\n     { label: 'horizontal-group-confirm.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-confirm.html' },\n     { label: 'horizontal-group-input.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-input.html' },\n     { label: 'horizontal-group-radios.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-radios.html' },\n     { label: 'horizontal-group-select.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-select.html' },\n     { label: 'horizontal-group-static.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-static.html' },\n     { label: 'horizontal-group-textarea.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\horizontal-group-textarea.html' },\n     { label: 'icon.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\icon.html' },\n     { label: 'image.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\image.html' },\n     { label: 'inline-group-input.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\inline-group-input.html' },\n     { label: 'inline-group-static.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\inline-group-static.html' },\n     { label: 'input-group.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\input-group.html' },\n     { label: 'jumbotron.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\jumbotron.html' },\n     { label: 'label.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\label.html' },\n     { label: 'lists.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\lists.html' },\n     { label: 'logo.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\logo.html' },\n     { label: 'menu.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\menu.html' },\n     { label: 'navs-item.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\navs-item.html' },\n     { label: 'navs.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\navs.html' },\n     { label: 'pager.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\pager.html' },\n     { label: 'pagination.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\pagination.html' },\n     { label: 'panel.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\panel.html' },\n     { label: 'paragraph.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\paragraph.html' },\n     { label: 'progress-bar.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\progress-bar.html' },\n     { label: 'progress-block.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\progress-block.html' },\n     { label: 'split-button-dropdown.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\split-button-dropdown.html' },\n     { label: 'streamer.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\streamer.html' },\n     { label: 'table.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\table.html' },\n     { label: 'vertical-group-checkboxes.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-checkboxes.html' },\n     { label: 'vertical-group-confirm.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-confirm.html' },\n     { label: 'vertical-group-input.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-input.html' },\n     { label: 'vertical-group-radios.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-radios.html' },\n     { label: 'vertical-group-select.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-select.html' },\n     { label: 'vertical-group-static.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-static.html' },\n     { label: 'vertical-group-textarea.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\vertical-group-textarea.html' },\n     { label: 'wizard.html',\n       url: 'build\\\\library\\\\components\\\\preview\\\\wizard.html' } ],\n  paths:\n   { bitmaps_reference: 'backstop_data/bitmaps_reference',\n     bitmaps_test: 'backstop_data/bitmaps_test',\n     engine_scripts: 'backstop_data/engine_scripts',\n     html_report: 'backstop_data/html_report',\n     ci_report: 'backstop_data/ci_report' },\n  report: [],\n  engine: 'chrome',\n  engineFlags: [],\n  asyncCaptureLimit: 1,\n  asyncCompareLimit: 50,\n  debug: true,\n  debugWindow: true }\n@VladimirPittner Which files would you like to have? The screenshots or the source HTML files?\nedit: What's weird is that backstop accepts my configuration and generates the reference files without a problem, but as soon as it needs to generate the test files it breaks down. It appears the new version resolved my problems as well, thanks @garris !. ",
    "kevineye": "I was getting this WaitTimeoutError, too, not running natively, but when switching to run in docker. Happened more often with higher asyncCaptureLimit and more complex pages, but even sometimes with asyncCaptureLimit: 1.\nEventually tracked the problem down to chrome dying with a bus error, and finally tracked this down to running out of space in /dev/shm. Docker allocates 64MB to /dev/shm by default.\nRunning docker with --shm-size 512m fixed the issue for me. Lets me run with default asyncCaptureLimit: 10.. @kiran-redhat When I saw this issue, either larger pages or large screencap sizes seemed to require more shared memory -- I don't remember which or if I ever tried to figure out the difference. Obviously more running at once (higher asyncCaptureLimit) also made it happen more often, but I remember I would have the problems with some pages/captures even with asyncCaptureLimite = 1 until I raised the docker shared memory available.\nI did not need 2gb for my tests to run at asyncCaptureLimit=10, just 512mb, but if your pages/captures are large enough maybe you need even more, or maybe there's another problem.\nI don't believe the actual error I got involved \"GotoTimeoutError\". I think it was WaitTimeoutError: evaluate(). I could be wrong -- I no longer have the error in front of me, but I remember it matching #537 pretty closely.\nWhen debugging, I was able to run df and see the usage of /dev/shm going up and run ps to see chrome processes running and then getting killed (all in the backstop container while backstop was running). I also turned on enough logging (some by tweaking the src of installed js libs -- again, in the container) to actually see chrome being killed with a bus error trying to address invalid or out of bounds memory addresses.\nGood luck!. ",
    "Dbuggerx": "Hey guys, I'm having the same issue as @laubsauger.\nI believe the following patch should fix the issue. @garris  could you please confirm?\n```\ndiff --git a/core/util/runChromy.js b/core/util/runChromy.js\nindex ac6dded..94465fa 100644\n--- a/core/util/runChromy.js\n+++ b/core/util/runChromy.js\n@@ -247,20 +247,7 @@ function processScenarioView (scenario, variantOrScenarioLabelSafe, scenarioLabe\n   }\n   chromy.goto(url);\n-// =================UPDATE vvvv ==================\n-  // --- load in backstopTools into client app ---\n-  // chromy.inject('js', config.env.backstop + BACKSTOP_TOOLS_PATH);\n-  chromy.defineFunction(exists);\n-  chromy.defineFunction(isVisible);\n-  chromy.defineFunction(expandSelectors);\n-  chromy.defineFunction(startConsoleLogger);\n-  chromy.defineFunction(hasLogged);\n-  chromy.evaluate(_ => startConsoleLogger());\n-  // console.log('Loading >>>' + config.env.backstop + BACKSTOP_TOOLS_PATH);\n-  // chromy.inject('js', config.env.backstop + BACKSTOP_TOOLS_PATH);\n-\n-  // chromy.evaluate(() => console.log(exists))\n-  // chromy.evaluate(() => console.log(\"window.exists ^^^^\"))\n+  defineBackstopFunctions(chromy);\n// =================UPDATE ^^^^^^^^^ ==================\n@@ -347,6 +334,7 @@ function processScenarioView (scenario, variantOrScenarioLabelSafe, scenarioLabe\n   }\nreturn new Promise((resolve, reject) => {\n+    defineBackstopFunctions(chromy);\n     chromy\n       .evaluate(window._selectorExpansion = '${scenario.selectorExpansion}')\n       .evaluate(window._backstopSelectors = '${scenario.selectors}')\n@@ -386,6 +374,15 @@ function processScenarioView (scenario, variantOrScenarioLabelSafe, scenarioLabe\n       .end()\n       .catch(e => reject(new BackstopException('Chromy error', scenario, viewport, e)))\n   });\n+\n+  function defineBackstopFunctions(chromy) {\n+      chromy.defineFunction(exists);\n+      chromy.defineFunction(isVisible);\n+      chromy.defineFunction(expandSelectors);\n+      chromy.defineFunction(startConsoleLogger);\n+      chromy.defineFunction(hasLogged);\n+      chromy.evaluate(_ => startConsoleLogger());\n+  }\n }\n// vvv HELPERS vvv\n```\n. @laubsauger I've tried similar approaches as well, but those didn't work. So just to try a quick thing, I've changed the runChromy.js file, and ran backstop again.\nThe errors are gone. Can you please try that?. Np @laubsauger , I'm glad it works! \nLater on I'll try to send a PR (very busy right now).. ",
    "gd-jroberts": "My python scenario creator that scrapes the Yoast SEO sitemap added a delay of 500ms by default. I tested with 1000ms and it still failed. Changing the readyEvent also resulted in the same failure. Having that functionality breaking is a blocker for us as we otherwise receive a lot of false positives because of various javascript resources not loading, and we test several hundred staging sites with each release using an EC2 host and 10 docker backstopjs containers at a time. That's a lot of noise for QA.. $ backstop --version\nBackstopJS v3.0.24\nBackstopJS 3.0.24\nI should add that the original scenarios work perfectly when the engine is phantomjs.\nHere's what our front-end developer added: window.onload=function(){console.log(\"hello\")}\nI tried a fresh install of node v6.11.3 and backstopjs, still timing out.. ",
    "nongnoochr": "I also saw the timeout failure when running my tests in Chrome (the same test is working fine with phantomjs)\nRemoving the readyEvent solves this timeout failure but it would be nice if we could have it working.\nNote that I also tried in the debug mode and saw the page gets rendered fine but the snapshots are not taken when the readyEvent is used in the test (and the console message shows up fine)\n. ",
    "tbal": "Same here on Ubuntu 17.04 with node v8.9.0 and npm 5.5.1 trying to install BackstopJS v3.0.32.. I fixed it by setting user/group of /usr/lib/node_modules/ (OS: Ubuntu 17.04) to my user and install BackstopJS globally without sudo:\n$ sudo chown -R $(id -u):$(id -g) /usr/lib/node_modules/\n$ npm install -g backstopjs\nNo BackstopJS problem, but a npm/phantomJS one... @garris That works! I remember that i clicked several times on the diff image, but never thought about clicking on the others.. :see_no_evil:\nMaybe that could be visually improved with a \"cursor: pointer\" css property on both images, so that one knows they are clickable.\nI love this feature, thanks for all the work!. The package-lock.json should be updated too, no?. ",
    "Camru": "Using the same example as @tbal on OSX, I had to use:\n$ sudo chown -R $(id -u):$(id -g) /usr/local/lib/node_modules/\n$ npm install -g backstopjs. ",
    "Kpizzle": "I followed the instructions set out by @Kenith and this did the trick. . ",
    "dodozhang21": "I mounted my pwd to the container, shouldn't it be using the same file? My config file is at $(pwd)/backstop.json\nAnd as you see in the log, it's loading the correct url\nCasperJS:  [info] [phantom] Step anonymous 9/28 http://www.familycircle.com/family-fun/10-books-to-read-now/ (HTTP 200)\nI copied the command directly from https://github.com/docksal/backstopjs/. If I were to build one from scratch is my understanding correct that https://gist.github.com/dodozhang21/11a91452d9a1afd6133775d96e2b8266 should work for me?\nBTW I'm running backstop via npm run backstop:test\npackage.json\n{\n  \"name\": \"mdp.node.tests\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"test\": \"npm run backstop:test && npm run selenium:test\",\n    \"selenium:test\": \"mocha $(find tests -name *Test.js ! -name _*) --timeout 25000 -R spec\",\n    \"selenium:test:docker\": \"env SELENIUM_REMOTE_URL=http://chrome:4444/wd/hub npm run selenium:test\",\n    \"backstop:reference\": \"backstop reference\",\n    \"backstop:test\": \"backstop test\",\n    \"backstop:approve\": \"backstop approve\"\n  },\n  \"devDependencies\": {\n    \"backstopjs\": \"^3.0.20\",\n    \"chai\": \"^4.1.0\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"chromedriver\": \"^2.31.0\",\n    \"mocha\": \"^3.5.0\",\n    \"selenium-webdriver\": \"^3.5.0\"\n  }\n}\nWhen I tried to run those tests inside my custom container, it times out :(\nCOMMAND | Executing core for `test`\ncreateBitmaps | Selected 1 of 1 scenarios.\nStarting Chromy: port:9222 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=320,480\nStarting Chromy: port:9223 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=568,1024\nStarting Chromy: port:9224 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=1024,768\nStarting Chromy: port:9225 --disable-gpu,--force-device-scale-factor=1,--disable-infobars=true,--window-size=1291,768\nCOMMAND | Command `test` ended with an error after [31.086s]\nCOMMAND | BackstopException: Family Circle Story on undefined: GotoTimeoutError: goto() timeout. @swese44 I'm not sure how your project helps me. Does your docker container only pull down node and yarn? Doesn't backstop need chromy to run? My docker container contains node, chrome and when I run backstop test under it, it just hangs. What exactly do you do?\nBasically I just need a docker container that will successfully run backstop test via node/package.json. @lmakarov Thank you so much! I will definitely try it out!. ",
    "mirec810": "`{\n\"id\": \"backstop_default\",\n  \"viewports\": [\n    {\n      \"label\": \"phone\",\n      \"width\": 320,\n      \"height\": 480\n    },\n    {\n      \"label\": \"tablet\",\n      \"width\": 1024,\n      \"height\": 768\n    }\n  ],\n  \"onBeforeScript\": \"chromy/onBefore.js\",\n  \"onReadyScript\": \"chromy/onReady.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"Test Page\",\n      \"cookiePath\": \"backstop_data/engine_scripts/cookies.json\",\n      \"url\": \"http://www.google.com\",\n      \"referenceUrl\": \"\",\n      \"readyEvent\": \"\",\n      \"readySelector\": \"\",\n      \"delay\": 0,\n      \"hideSelectors\": [],\n      \"removeSelectors\": [],\n      \"hoverSelector\": \"\",\n      \"clickSelector\": \"\",\n      \"onReadyScript\": \"sample.js\",\n      \"postInteractionWait\": \"\",\n      \"selectors\": [\n        \"body\"\n      ],\n      \"selectorExpansion\": true,\n      \"misMatchThreshold\" : 0.1,\n      \"requireSameDimensions\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}`. @laubsauger thank you very much.\n@garris I would like to ask if it's possible to create reference screenshots with chrmyJS script and test these screenshots by running backstop test ?. @garris thank you. But I'm still having a trouble with it. Can you give me same hints or example how can I do that ?\nI just want to create reference and test screens e.g. \"body\" on www.example.com/home => create screen, then goto /about => create screen, then goto /contact => create screen,... using just one scenario with chromy script.. ",
    "mirovelk": "Same problem here. Wouldn't it be enough to continue as usual even when chromy script crashes? There's no need to throw exceptions or fail tests. Tests should fail naturally after screenshot comparison (if user interaction simulation failed, application will be in a different state than expected). Maybe just log that the script failed so we can see that there's something wrong.... ",
    "monkpit": "Any updates on this?. ",
    "adamchenwei": "oh yea, otherwise we have to switch back to selenium.... lol. ",
    "cameron-martin": "Which script?. I don't think so, I tried it with a variety of URLs including Google and it still gets that error. It gets that error before it tries to visibly load the page too.. ",
    "kevinmpowell": "@garris I've just tested this with both 3.8.8 and the Canary 3.9.4 releases and no matter what I put for my \"report\" settings in my config file, the browser always opens the html report.\nI've tried:\n\"report\": [\"html\"]\n\"report\": [\"CI\"]\n\"report\": []\"\nAny thoughts?. [Edit:] - This happens when docker: true is passed in node:\nbackstop('test', {\n  config: '/my-path/to/backstop.js',\n  docker: true\n}\nIf I remove docker: true and run locally, then the opening of the report seems to respect my \"report\" config as described in the README.. Here's the log from my last run if it's helpful, you can see where openReport is being executed:\n```\n[Browsersync] Serving files from: demo\nLoading config:  /path/to/my/config\nCOMMAND | Executing core for \"test\"\nDelegating command to Docker... docker run --rm -it --mount type=bind,source=\"/path/to/my/project\",target=/src backstopjs/backstopjs:3.8.8 test \"--moby=true\" \"--config=./backstop.js\" \"\"\nBackstopJS v3.8.8\nLoading config:  /src/backstop.js\nCOMMAND | Executing core for \"test\"\ncreateBitmaps | Selected 1 of 1 scenarios.\nsearching for 2 available ports.\nThese ports will be used: [9222,9223]\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=320,480\"],\"port\":9222,\"waitTimeout\":30000,\"visible\":false}\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=1024,768\"],\"port\":9223,\"waitTimeout\":30000,\"visible\":false}\n9222 Chrome v71 detected.\n9223 Chrome v71 detected.\n9222 INFO >  BackstopTools have been installed.\n9223 INFO >  BackstopTools have been installed.\n      COMMAND | Executing core for \"report\"\n      compare | OK: Testing backstop_default_Testing_0_document_0_phone.png\n      compare | OK: Testing backstop_default_Testing_0_document_1_tablet.png\n       report | Test completed...\n       report | 2 Passed\n       report | 0 Failed\n       report | Writing browser report\n       report | Resources copied\n       report | Copied configuration to: /src/backstop_data/html_report/config.js\n      COMMAND | Command \"report\" successfully executed in [0.232s]\n      COMMAND | Command \"test\" successfully executed in [2.625s]\nCOMMAND | Executing core for \"openReport\"\nopenReport | Attempting to ping\nopenReport | Remote not detected. Opening backstop_data/html_report/index.html\n. This may be the culprit:\nhttps://github.com/garris/BackstopJS/blob/master/core/command/test.js#L11. Changing the docker branch of the code in `test.js` to this:\n        .finally(() => {\n            if (config.openReport && config.report && config.report.indexOf('browser') > -1) {\n                executeCommand('_openReport', config);\n            }\n        });\n```\nSeems to do the trick. If I have time I'll get a PR together.. PR is here: https://github.com/garris/BackstopJS/pull/1007. ",
    "vdekov": "Thank you for the fast answer @garris.\nI applied your suggestions - to increase the resources (to 4GBs of RAM) and to activate the Chromy engine.\nDefinitely the headless Chrome browser is much faster than the PhantomJS. This is a great improvement!\nI've successfully executed the batch of 37 scenarios on the top of the new environment. But I noticed that at the comparison phase the memory is still increasing progressively.\nI did a screen record during the backstop test execution (you can track the memory at the top): https://drive.google.com/open?id=0B8h5lUofXpg5ajNxOTkzLVkyRjA\nIn my opinion if the batch is larger the process again will force running out of memory as the memory never be released during the comparison.\nHere are my values using in the setup about the count of the parallel tasks:\njson\n  \"asyncCompareLimit\": 1,\n  \"asyncCaptureLimit\": 5\nIn my experience such issue can be observed if there are a big mismatch of the content of the reference and test screenshots (e.g. see in the video content: 33.30%)\nNow I'll try to update the NodeJS to the latest version as an attempt to get the things better but I'm not sure this will fix the increasing memory.\nIs this normal or is it possible to be related with the VM OS (Ubuntu 16.04) or something else in my environment?\nThank you!. Yes, I read the topics about the memory leak in the older versions.\nThe only used viewport is 1280x1024:\njson\n  \"viewports\": [\n    {\n      \"name\": \"laptop\",\n      \"width\": 1280,\n      \"height\": 1024\n    }\n  ]\nI also run the same configuration on my Mac but I think that the memory behavior was better than the Ubuntu VM (still it was high on the comparison phase but not enough to kill the process).. Hi @garris,\nI run a few more tests on different environments to prove myself the memory leak.\nI executed the tests on two different Linux distributions - Ubuntu and CentOS with 16GBs of RAM both.\nThe tests are including 110 scenarios executed of 3 different screen sizes (330 screenshots in total).\nBoth of them are running out of memory around the 85-90th scenario on the comparison process. AFAIK BackstopJS is using Resemble.js for the comparison. Is it possible the issues to be coming from there?\nAt last I tried to run the same configuration on my Mac (8GBs of RAM). This time successfully. I made a small research and the reason is the \"compressed memory\" in the OSX (it is some kind of memory optimization of the oldest data stored in the memory). But this doesn't prevent the constantly increasing memory...\n\nI have another question - is there a way to skip the comparison process between the \"reference\" and \"test\" screenshots but to keep the report generation (the DIFF column will be excluded)?. Hi @garris,\nThank you for the quick response and the time you've spent.\nI share with you a link to my \"reference\" and \"test\" configurations (they differ only by the scenario URLs):\n\nreference: https://drive.google.com/open?id=0B8h5lUofXpg5My1jSE5SM2RyVEE\ntest: https://drive.google.com/open?id=0B8h5lUofXpg5OE01bm5CSHRsRFU\n\nI tried yesterday the proposed by you ideas but they didn't solve the issue on my end.\nBut I do some tests and I'm sure the reason for the leak is from the comparing of the images when their hash sums are different i.e. from the resemble comparison process.\nI start an implementation with a child processes which will be spawned for each pair comparison. I think in this way the garbage collector will have the time to release the already used resources.\nToday I'll try to finish and to check the memory behavior.\nDo you think this will be an appropriate solution?\nAlso I've another question related with the used Resemble.js module. I saw that BackstopJS relies on node-resemble.js - a project forked by the Resemble.js repository.\nAlso I noticed that they have differences in the image comparison algorithm - node-resemble-js compares the images as a pictures (pixel by pixel) whilst the Resemble.js draw canvas elements and compares them (in this line of thinking you have to install the canvas package as a dependency).\nAlso the node-resemble-js project is looking for a maintainer at the moment.\nIs the node-resemble-js used with a purpose (Resemble.js also supports Node.js image comparison)?\nI did an experiment to replace the node-resemble-js with Resemble.js package and with a few changes I successfully executed the comparison (there are a few differences in the interface between both of them).\nThank you!. @garris in continuation of my previous comment.\nI think I solved the memory leak issue which I have following the described above algorithm.\nI created a child process which compares each pair. This process is killed after the comparison and for the next pair a new process is spawned and etc. Meanwhile the garbage collector does its job.\nI made some before and after performance tests executed over 37 scenarios on 1 screen size with the following configuration:\njson\n  \"asyncCompareLimit\": 5,\n  \"asyncCaptureLimit\": 3\nHere are the average times needed for the comparison phase:\nNow | Forked processes\n---- | -----------------\n134.449s | 64.008s\n134.345s | 63.411s\n135.271s | 62.067s\n133.92s | 62.636s\nThe maximum used memory per a subprocess is around 140-160MB. I'm happy also because the memory of the VM never exceeds over 1.3GB for my configuration.\nThe BackstopJS sanity check was executed successfully so I can prepare a PR if you are agree to review the code.\nP.S. I forgot to mention in my previous comment - if you want to be able to reproduce the issue you have to use a Linux based VM. OSXs have a \"compressed memory\" but their memory also is increasing to infinity.. ",
    "rupamsaha": "+1. ",
    "fusionfox": "I think the Docker container should have the same semver as the version of BackstopJS it's using, then we can lock down that dependancy.\nDo you ever rebuild the container for the same version of Backstop?. Sorry, I got busy after raising #562 - happy to see that this got picked up \ud83d\ude04 . ",
    "daveross": "Fixed in #573 , commit ffb8ee9a8e2d82978586ba175e41d273f9f7c222\nThis can probably be closed.. ",
    "VladimirPittner": "Hi,\nthanks and sorry for late response. I created issue there https://github.com/OnetapInc/chromy/issues/82, will see.\nPS: Thanks for the great job with BackstopJS. I have got same error as @kiran-redhat. \nConfig:\n...\nengine: \"chrome\",\nengineOptions: {\n    waitTimeout: 10000,\n},\n.... @garris no need for apologies at all ;) ... I have tested your latest update, seems working.\nThanks for the great job!. I guess this can be closed, functionality added in 3.0.32 https://github.com/garris/BackstopJS/issues/584. Hi,\ncan you provide the files with scenarios?\nAre you sure each scenario have unique label?\n/V. Seems to work now for me. WaitTimeout altered successfully from config.\nConfig:\nengine: \"chrome\",\nengineOptions: {\n    waitTimeout: 120000,\n    chromeFlags: ['--disable-gpu', '--force-device-scale-factor=1', '--disable-infobars=true']\n},\nConsole output:\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=1024,1000\"],\"port\":9222,\"waitTimeout\":120000,\"visible\":true}. Thanks a lot, got new update works fine :). As @garris said, you can use js-based config where you can write some function to generate scenario and parse your styleguide.\nJust an idea explanation example for generating scenario could be something like this:\n```\nlet scenarios = [];\narrayOfElements.forEach((element, index) => {\n    scenarios.push(makeScenario(element, index));\n});\nlet config = {\n...\n    scenarios: scenarios,\n...\n};\nmodule.exports = config;\n```\nWhere arroyOfElements is scraped data in array from you styleguide and makeScenario is function to generate scenario - could be something like this:\nfunction makeScenario(element, index){\n    return {\n        label: `${element.label}-${index}`,\n        ...\n        selectors, and other config for scenarios\n        ...\n    }\n})\nIts pretty much up to you then how much of the scenario config you with to have generated dynamically and how much you want hard-coded. I personally have default settings which then for each scenario I can overwrite with options.\nI hope you get the idea behind the concept.\n    . Hmmm I am not sure if this could be the issue but did you try to use \"\" for the strings? like this ->\ndocument.querySelector('article[class^=\"root\"]:nth-of-type(2) div[data-preview=\"Button\"]')\n... maybe try also querySelectorAll (could be issue, I don't know). But as Kiran said, make sure first that the selector exists :).. Hi, \nwhat do you mean by page won't load? It won't load before click or after click? And what kind of popup you mean?\nTry run in debugWindow: true mode, so you can observe what exactly is happening in the browser.. In that case if I am not wrong it is the postInteractionWait parameter you want to use to setup wait time.. Oh so I tought it is just some problem in my over-complicated code but now I see we all face this ... hmm.\nFrom my observations its not cookies, I do kill all before, I do run asyncCaptureLimit: 1, and I even run chrome in incognito mode and still get the issue mentioned in the first post. Its absolutely random, I watched it happen several times with debugWindow turned on and I could not find why it happens :(. Sometimes Chromy wouldnt even open the url, somtimes it would miss the load event and get stuck on waitLoadEvent ... It seems like sometime the chain broke and things start to run async.\nEdit:\nThe chance that this happens is almost 0 if I filter out just 3tests, but then when I run all 50test it always fails somewhere, then when I run those failed tests one by one all is fine. Really might be some issue with closing and opening chrome. \nPS: If I run test with async 1 only, then I have to wait 30 minutes to go through all things so its pretty bad :( . @garris yes I know that those 30 minutes are caused by slow server response in my case (that is why I had to change waitTimeout time :D) and thats why I prefer to run async 3 which fits my 3 viewports ... \nAnyway If I run async 1 and just few tests it works, however if I run more tests it seems to get troubles ... maybe it really is some issue with ports hmm or really some leak in my code ... will see ... and also will see if guys keep having issues if they run async 1 . @garris yeah unfortunately it sometimes takes longer than 30secs to get respond from test server when executing some things and navigating through app ... and I cannot do anything about it, so you can imagine the pain ;). @kiran-redhat and those with blank screen have the same error message as described in first post? Is your chromy code correct?\nIn previous version of backstop it used to happen to me that a variable passed through evauluate would sometimes cause error that it is undefined, however I thought that was fixed already.\nCode like this would give me error from time to time:\nchromy\n        .evaluate(`_url = ${url}`)\n        .evaluate(() => {\n            let result = document.baseURI.match(_url) !== null;\n            return result;\n        })\nAs if second evaluate would run before the first, which shouldn't be possible. In my case I get this:\ne>> { Error: An error has occurred evaluating the script in the browser.ReferenceError: _scenarioResult is not defined\n    at result (<anonymous>:4:13)\n    at <anonymous>:6:11\n    at EvaluateError.ExtendableBuiltin (path\\node_modules\\backstopjs\\node_modules\\chromy\\dist\\error.js:19:28)\n    at new EvaluateError (path\\node_modules\\backstopjs\\node_modules\\chromy\\dist\\error.js:133:131)\n    at Chromy._evaluateWithReplaces$ (path\\node_modules\\backstopjs\\node_modules\\chromy\\dist\\document.js:448:21)\n    at tryCatch (path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:299:22)\n    at Generator.prototype.(anonymous function) [as next] (path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at tryCatch (path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at invoke (path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:155:20)\n    at path\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:165:13\n  object:\n   { type: 'object',\n     subtype: 'error',\n     className: 'ReferenceError',\n     description: 'ReferenceError: _scenarioResult is not defined\\n    at result (<anonymous>:4:13)\\n    at <anonymous>:6:11',\n     objectId: '{\"injectedScriptId\":6,\"id\":1}' } }\nWhere basically something like this is exectuted:\n.chromy\n        .click('some-selector', true)\n        .evaluate(`_scenarioResult = ${scenartioResult}`)\n        .evaluate(() => {\n            // ... some code ...\n            _scenarioResult = _scenarioResult ? result : false;\n            return result;\n        })\nThe _scenarioResult is just variable I am passing during tests in chrome.\nAs I mentioned in previous post I use to get this error also with _url variable.\nI am thinking maybe the click event does not successfully wait for the load event, then the evaluate is triggered before the browser reloads, and after reload the variables are lost and that creates error undefined. But why is the evaluate executed before click is finished I have no idea.\nIs there any way to get return from evaluate be returned out of chromy?\nSomething like this:\nlet result = chromy.evaluate(() => { \n    // some code\n    return result;\n});. Hi @kiran-redhat as for the suggested:\n.evaluate(() => {\n    // ... some code ...\n    ${_scenarioResult} = ${_scenarioResult} ? result : false; \n    return result; \n})\nIs not valid code ;)\nAs for suggested finding where the chromy scripts fail in point 2. I know where it fails as I posted previously, the problem is I do not know why it happens. Why is the variable which is passed through evaluate undefined in the next evaluate. However I suspect it happens because of click not waiting to reload (waitLoadEvent = true) and variable passed by evaluate is being removed by reload of browser as described in previous post.\nForm my observation with debugWindow = true, it seems that waitLoadEvent sometimes don't catch the load event.\nAt this point I find Chromy not very relevant for things I need to do with scripts, so maybe I will have to switch back to CasperJS and SlimerJS or look at Puppeteer.. Latest update from my experiments:\n I have removed all .waitLoadEvent functions and now use .wait(selector) instead (it gives less flexibility unfortunately, but its much more stable and reliable)\n I make sure in code that every time I am passing some variable with .evaluate() page is fully loaded and ready (so I do not get variable removed by browser reload)\nResult is for now that I am able to run even asyncCaptureLimit: 3 without problem so far\nI will test later on other machines and will give update.\nThanks all for the ideas, inspirations and help.. @Kenith I guess @garris meant that with PhantomJS you can only run 1 capture at the time (therefore synchronous), that means asyncCapture is setting only for case when you use Chrome. There is not such setting for PhantomJS.\nAs for not capturing all screenshots with Chrome engine maybe you will find some helpful answer here https://github.com/garris/BackstopJS/issues/589 ... although I still get empty screenshots even with asyncCapture set to 1 :/. Hi @dbazuin ,\nI got this message today too.\nWhen I was looking for what was happening with debugWindow: true, I found out it was because the browser was trying to open url undefined (I had typo in code).\nSo please check if your code is accessing reachable url. Probably good way to test it, is spactate with debugWindow: true. You might be getting this message if the url is unreachable.\n/V. Hi @questionmarc,\nyou can try use different port number if you have collision with ports being used somewhere else.\nUse https://github.com/garris/BackstopJS#setting-chromy-option-flags and set port https://github.com/OnetapInc/chromy#chromyoptions.\n/V. Hi @Kenith,\nwhat exactly are you trying to solve with this resourceTimeout, or what do you expect should happen when you change it? To me it seems more like issue with proxy or SSL protocol.\nPlease make sure you use this flags:\ncasperFlags: [\n   '--ignore-ssl-errors=true',\n   '--ssl-protocol=any'\n],\nNote: I have spot you have --ignore-ssl-errors=yes, I am not sure yes is correct value ;)\nWhen it comes to Chromy missing scenarios capture, you might find answer and solution at the end of conversation here https://github.com/garris/BackstopJS/issues/589\nGood luck.\n/V. Hi,\nthis is duplicate of this -> https://github.com/garris/BackstopJS/issues/597. @garris sorry for the respond, been busy too. Unfortunately I was experiencing some funny unwanted console outputs with BackstopJS 3.0.32 and ChromyJS 0.5.7, so I cant say its working as expected 100% :/, and did not really had time to look into what might be the cause. \n@ackmanx yes I guess you can manually install newer version of ChromyJS, either with command or changing the package.json of your project and run npm install.. @ackmanx actually to be more specific you will have to do it in the nodemodules/backstopjs folder, because backstopjs have its own nodemodules and package.json. @kiran-redhat how do you pass the arguments to evaluate now? Maybe there might be some backward compatibility issue.\nThis is example of how I pass the arguments before and now:\n0.5.5\n.chromy\n        .evaluate(`\n            _url = '${url}'\n        `)\n        .evaluate(() => {\n            return document.baseURI.match(new RegExp(_url)) !== null;\n        })\n0.5.7\n.chromy\n        .evaluate((_url) => {\n            return document.baseURI.match(new RegExp(_url)) !== null;\n        }, [url])\nI am not getting any errors in scenarios but it does output the function call to console for some reason.\n```\n9222 INFO >  BackstopTools have been installed.\nfunction anonymous() {\n    return ((_url) => {\n        return document.baseURI.match(new RegExp(_url)) !== null;\n    }).apply(this, Array.from(arguments).concat([\"censored\"].map(function (parameter) {\n      return JSON.parse(parameter)\n    })))\n\n}\n```. @kiran-redhat meanwhile the new web UI is in developement (kudos @garris) you can click on expand the list of scenarios and from that you might guess which scenarios didnt run probably (if you have them indexed it will be even easier). ",
    "ackmanx": "I have a shell script that loops through a folder with configs and creates the below commands.\nnpm run start-background; backstop test --config=backstop/store-selector/store-selector-large-view.json -i\nnpm run start-background; backstop reference --config=backstop/store-selector/store-selector-large-view.json -i\n\n. I just found out using ImageMagick compare that there is a spinner behind an overlay so I don't see it when inspecting images side-by-side. That explains the store-selector config I posted above. I've seen this with several other images so I will check to see if they have hidden spinners too.. My team uses backstop to attempt pixel-perfect testing. When we saw multiple changes to reference images but no test failures even at 0 for the threshold it confused us. It appears that there are crazy subtle differences causing image updates so maybe pixel-perfect is a bad approach.\n\nI'll update our flow to use backstop approve instead of backstop reference as it seems this may help too. \nThanks for the help!. @garris Regarding @joseph-stano OP, I modified backstop source in node_modules like you mentioned and received the following error for every one of our tests that result in the white diff for all 3 images as in the OP screenshot.\n{ Error: An error has occurred evaluating the script in the browser.TypeError: Cannot read property 'focus' of null\n    at <anonymous>:2:102\n    at <anonymous>:2:112\n    at EvaluateError.ExtendableBuiltin (/Users/*****/code/*****/node_modules/backstopjs/node_modules/chromy/dist/error.js:19:28)\n    at new EvaluateError (/Users/*****/code/*****/node_modules/backstopjs/node_modules/chromy/dist/error.js:133:131)\n    at Chromy._evaluateWithReplaces$ (/Users/*****/code/*****/node_modules/backstopjs/node_modules/chromy/dist/document.js:448:21)\n    at tryCatch (/Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:65:40)\n    at GeneratorFunctionPrototype.invoke [as _invoke] (/Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:299:22)\n    at GeneratorFunctionPrototype.prototype.(anonymous function) [as next] (/Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:117:21)\n    at tryCatch (/Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:65:40)\n    at invoke (/Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:155:20)\n    at /Users/*****/code/*****/node_modules/backstopjs/node_modules/regenerator-runtime/runtime.js:165:13\n  object:\n   { type: 'object',\n     subtype: 'error',\n     className: 'TypeError',\n     description: 'TypeError: Cannot read property \\'focus\\' of null\\n    at <anonymous>:2:102\\n    at <anonymous>:2:112',\n     objectId: '{\"injectedScriptId\":2,\"id\":1}'\n   } \n}\n\nDo you have any tips on how we can learn more about what file anonymous is, or perhaps what injectedScriptId is pointing to? I've removed all instances of focus from our code base and still receive the errors consistently.\nAlso, I set asyncCaptureLimit to 1. Instead of getting a third of the tests erroring, I only got one that errored. It errored with the same error message directly above.. @kiran-redhat The error @joseph-stano and I are getting is in my post above. It unfortunately does not tell us much, other than somewhere some unknown file is hitting an undefined.. @kiran-redhat Thanks for the tips. It would be helpful if you could utilize multi-line code blocks when posting code in here, because the github formatting and markdown interpretation of your code makes your code samples syntactically invalid.. I think that @joseph-stano and I issue is related to chromy.type() trying to query a non-existent element. Looking at chromy source code, the chromy.type() function calls focus() on a DOM element. For whatever reason, running multiple scenarios concurrently seems to slow down Chrome (even on brand new Macbook Pros) to the point of chromy being faster than React to create new elements. \nChromy doesn't say what selectors were tried when it fails but I was able to put logs in the chromy source (node_modules/backstopjs/node_modules/chromy/dist/document.js) and it helped, some. When running many scenarios you get console output for all scenarios simultaneously and the asynchronicity means they aren't always in order either.\nUnless I can find more failures related to this in our code, I'm thinking the OP issue is closed and will update him.\nFor others' reference to help debugging:\nChromy's document.js contains objects of the format {key: 'functionname', value: actualfunction}. The function names are the ones in the public API and you can put your own logging inside the function you need to investigate.\nDon't forget to \"enable\" Backstop logging of chromy errors by adding log statements to runChromy.js as @garris described at the top of the thread. Scenario and viewport are also available in that same location.. Is there a way for us to manually upgrade chromy ourselves and then run backstop_features.js to see if it works? Could I do this within my node_modules/backstopjs?. Did this get pushed to npm? npm says the current version is 3.0.36, which the same as package.json here on GitHub. When I npm install the 3.0.36 though, Chromy is using 0.5.5 according to the backstopjs package.json in my node_modules.. My package.json is \"backstopjs\": \"3.0.36\" but I haven't edited any chromy versions manually so it is still 0.5.5 and not 0.5.7 (I wiped node_modules and did a fresh install). I could update it as described above, but for the time being I put that ticket on hold. I don't want to cause other devs' tests from failing. No rush on my end with the update :). You'll also want to check in any scripts you create that are used with onReadyScript in the configs and so on.\nMy team's .gitignore only has two entries for BackstopJS:\nbackstop/*/images/test/\nbackstop/*/reports/. > or perhaps group the reports by test suits?\nMy team's solution to this part was to create a different config for separation. So, we have a \"large view\" config and a \"small view\" config. Every config gets its own report. Combined with a JavaScript module approach to generating the configs, it's pretty clean.. I'd be interested in a Chrome flag fix if one ever came up, but for now I solved this by using CSS to hide the cursor before the test ends and screenshot is taken.\nI have an external helper module so I can use it in many tests. The solution is the chromy.evaluate bit.\nexports.hideBlinkingCursor = () => {\n    chromy.evaluate(() => {\n        //This will hide the cursor but also the input value\n        document.activeElement.style.color = 'transparent'\n\n        //If there is a value, create a \"shadow\" so it shows up. Shadows do not affect the cursor so it stays transparent\n        //Shadows DO affect placeholder text and will bold it so only apply if we have a value\n        if (document.activeElement.value) {\n            document.activeElement.style.textShadow = '0 0 0 #000'\n        }\n    })\n    return this\n}\n\nIf we write a test that I know will end on an input being focused, then I call this function to apply the styles.. If I understand correctly, a DIFF button would open up just the diff image at full size (or fit-to-window)? Using 3.0.37 it's very easy to skim the report to see the differences on a large page, but with 3.1.21 the images appear to be zoomed out so it's impossible to see the diff on a scan down the report.. Pointing puppeteer to a different Chromium installation produced the same error, unfortunately. \nI've narrowed the issue down to using the --user-data-dir switch below in the engineOptions property of my backstop config. If I specify a data directory source, then having more than one scenario fails entirely. If I don't specify a user directory, then I can run multiple scenarios. \nengineOptions: {\n    //These args are for Chrome/Chromium, which puppeteer uses, and are not backstop args\n    args: [\n        //Tell Chromium where to get its user data for each start. We need to explicitly set this so Chromium does not start with a clean (bookmarkless) profile each run\n        '--user-data-dir=/Users/varr/Library/Application Support/Chromium',\n    ]\n}\n\n. I might go the route of simply creating a suite of test data automatically with Chrome APIs at the start of each scenario, which should get rid of this problem. It could be a concurrency issue with multiple Chromium instances all sharing the same user data. . I took a read of puppeteer's source code. It's clear this issue is not related to backstopjs, being puppeteer creates a unique profile for each instance, and I was pointing to the same one for all instances.. > What is deficient about the current scrolling report for this functionality? Seems maybe we could improve that view with a justify-w option and even a justify-h option (I.e. justify-viewport-h)?\nI quite like the current UI, but if I understand what you mean by justify-w it would be filling each column to their maximum width, regardless of the vertical scrolling this causes? For the case where your images are very tall (common use case at my company), this would be great (and be sorta like how the UI operated pre-redone UI).. It's just the name he called it, describing the behavior in my previous post. I've been using backstop for little over a year, and it used look like the below screenshot. Earlier this year a completely new UI was created.\nNote in the screenshot that the width of the images are maximum allowed. The heights of those images are like 1200px. In the current backstop version images with large heights are zoomed out.\n\n. Thanks for the npm view backstopjs tip! I've been wondering about this for a while.. @andrepm06 If your solution above solved this, I suggest closing the issue.. ",
    "sbaechler": "Could you at least move it to peerDependencies? The module is 62MB.. closes #576 . ",
    "asimpson": "Coming at this from another angle, phantom isn't an actively maintained project anymore. It'd probably be wise to start a deprecation / removal plan.. You can probably start by throwing a deprecation warning somewhere e.g. what Selenium did.\nI have no clue how long to keep it around but deprecated \ud83d\ude1e You could just ride Selenium's coat tails? When they finally kill it so does Backstop?. > This may be a noob question, but does this mean backstop's \n\ncasperjs support will also go away?\nYep, though \nPupeeteer could \nreplace the functionality of casperjs.\n. \n",
    "dbazuin": "The suggestion above would be a great addition.\nIdeal if you for example only want to test something like a mobilemenu with a clickSelector. I think a array is fine.. I was using BackstopJS v3.0.30 at the time.. No we are using a vragant box.. Hi Vladimir,\nI will check it.\nThanks.. ",
    "chaffneue": "Thanks for your replies - I'll schedule some time to try this out and get back to you. Previously when I tried:\nselectors: ['div[data-preview=Button]:nth-of-type($index)'],\nselectorExansion: false\nI got 'not found' for any index over 1. I think iterating on the container may be the part I was missing.\n. So even iterating the parent container, I still get \"not found\" for the second case. Maybe CSS selectors can't be used in this way? Even when I run it in the browser, I get \"null\"\n\n'\n\ndocument.querySelector('article[class^=root]:nth-of-type(2) div[data-preview=Button]')\nnull\n'. Updating this comment - The selector I was using was wrong. While the article is the parent container, the iterated container is actually on the nested div one level down.\n\ndocument.querySelector('div[class^=\"root\"]:nth-of-type(2) div[data-preview=\"Button\"]')\nI've got this working now, so we can close it off. Thanks for all your help, everyone! . json\n{\n  \"id\": \"My Test Scenarios\",\n  \"cookiePath\": \"backstop_data/engine_scripts/cookies.json\",\n  \"report\": [\n    \"browser\",\n    \"CI\"\n  ],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 15,\n  \"asyncCompareLimit\": 75,\n  \"debug\": false,\n  \"debugWindow\": false,\n  \"scenarios\": [\n    {\n      \"label\": \"MyComponent\",\n      \"url\": \"http://127.0.0.1:6060/#!/MyComponent\",\n      \"misMatchThreshold\": 0.1,\n      \"selectors\": [\n        \"div[data-preview=MyComponent]\"\n      ],\n      \"selectorExpansion\": true\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"viewports\": [\n    {\n      \"label\": \"desktop\",\n      \"width\": 1920,\n      \"height\": 1080\n    }\n  ]\n}\nTo start both the docs portal and backstop locally you can make a little npm script.\nYou'll need the concurrently and sleepms npm packages. It'll allow the doc portal to build and then run the tests 25 seconds later - should be enough to stop chromy from timing out. \njson\n\"my-test-runner\": \"concurrently --kill-others-on-fail --kill-others \\\"styleguidist server --config config/styleguide.config.js\\\" \\\"sleepms 25000 && backstop test\\\"\",\nThis ended up being the most performant so far. If you need to change the parameters of each scenario, you can use the alternate query selector above, but it's quite a bit slower to run. I've had to play with tuning the \"asyncCaptureLimit\" and \"asyncCompareLimit\" quite a bit. This program uses a huge amount of memory, so if it starts glitching out, reduce the capture limit. \nGood luck!\n. ",
    "bluetidepro": "@chaffneue I'm trying to actually integrate backstop with my styleguidist project, as well. Would you mind sharing your backstop configs and such in full, by any chance? I'm having a little trouble with it, and it seems like you got it all sorted out!. @chaffneue Ahh okay. So you have to manually input all the components in the scenarios array? There isn't a way for it to detect all the components from Styleguidist itself?. ",
    "iKick": "Hi,\nI'm sorry, I did not correctly explain. \nI mean, when I make a clickSelector, pop-up opens. Locally my computer sees pop-up, but on the server it is missing. So I want a delay after a clickSelector.. Oh ... I figured out what the problem was. After when backstop.json is created, variable \"postInteractionWait\": \"\". When I try to change the value, I entered it like string. And it is don't work.\nin file clickAndHoverHelper.js i find this var postInteractionWait = scenario.postInteractionWait; // selector [str] | ms [int]. I change in [int] and now it work, thnks. \nI apologize for the distraction.\nPS: \"Maybe change descriptons Advanced Scenarios in https://github.com/garris/BackstopJS, and  write there variable can have two values \". ",
    "Bronovitskiy": "does not work clickSelectors please help. ",
    "nzufall": "@garris I am seeing the same thing as the OP. When I run my tests with 10 asyncCaptureLimit I am encountering (node:27500) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit\nIs this a hint as to the root cause perhaps?. Ours seems to have been user error in scenario configuration. Some user was passing: \nJSON      \n\"hideSelectors\": [\n        \"\"\n],. ",
    "L0wry": "this is also really sad \npromise.catch(function (error) {\n          var perf = (new Date() - config.perf[command.name].started) / 1000;\n          logger.error('Command `' + command.name + '` ended with an error after [' + perf + 's]');\n          // logger.error(error);\n        });\n8e0074f8Garris Shipon, a month ago   (October 13th, 2017 9:10am)\nfix 549 \u2014 backstop hangs on error. okay figured it out after uncommenting the swallowed error. \nFor reference - the application exited correctly!. ",
    "questionmarc": "It seems that it is highly recommended to not change the port number. I would also be hesitant to try and change it since, how is the behavior? Do I have to reduce my number of chrome processes to 1 to make that work?. Welp. I guess I have a good weekend project. \ud83d\ude04 I was thinking about implementing a solution myself this morning.. Probably should've just started there and threw a pull request. \ud83e\udd14 . This change breaks the dockerfile. Currently alpine doesn't have access to chromium v62 which causes the container to just have output like: \nbash\n9222 Chrome v61 detected.\n9222 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\n9223 Chrome v61 detected.\n9223 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\n9224 Chrome v61 detected.\n9224 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***. Ah ok. Nvm then. Personal issues with my docker container. \ud83d\ude05 . New Development: with debug on and setting the asyncCaptureLimit to 1, I got one of the scenarios to complete. But then the other two time out.. output for that run was something like\nbash\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--no-sandbox\",\"--window-size=320,480\"],\"port\":9222,\"waitTimeout\":30000,\"visible\":false}\n9222 Chrome v61 detected.\n9222 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\n9222 INFO >  BackstopTools have been installed.\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--no-sandbox\",\"--window-size=1024,768\"],\"port\":9223,\"waitTimeout\":30000,\"visible\":false}\n9223 Chrome v61 detected.\n9223 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--no-sandbox\",\"--window-size=1600,900\"],\"port\":9224,\"waitTimeout\":30000,\"visible\":false}\n9224 Chrome v61 detected.\n9224 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\nSo it looks like the BackstopTools finished on the first one, but then timed out on the other two?. bash\n      COMMAND | Executing core for `report`\n      compare | Chromy error: GotoTimeoutError. See scenario \u2013 scenario 1 (tablet)\n      compare | Chromy error: GotoTimeoutError. See scenario \u2013 scenario 1 (desktop)\n   See: /usr/src/app/backstop_data/bitmaps_test/20171121-215652/failed_diff_test_scenario_1_0_document_0_phone.png\n      compare | ERROR { requireSameDimensions: false, size: isDifferent, content: undefined%, threshold: 0.1% }: scenario 1 test_scenario_1_0_document_0_phone.png\n       report | Test completed...\n       report | 0 Passed\n       report | 3 Failed\n       report | Writing jUnit Report\n       report | Writing browser report\n       report | jUnit report written to: backstop_data/ci_report/xunit.xml\n       report | Browser reported copied\n       report | Copied configuration to: /usr/src/app/backstop_data/html_report/config.js\n       report | *** Mismatch errors found ***\n      COMMAND | Command `report` ended with an error after [0.731s]\n      COMMAND | Command `test` ended with an error after [66.935s]\nOne of the failures was a correct failure (the ui did infact change so I was expecting that) but the other two compares end in GotoTimeoutError.\nThe html report just has blank spaces where the tests failed.. I think the issue is because I'm trying to do too much at once. I have a 8gb backstop_data folder with the complete set of reference images I want to use for my.. 3000 some odd test cases. \ud83d\ude05 I tried it out locally with just the sample init file using a fork. Sure enough it didn't implode like my previous test case had. \ud83d\ude03 \nNow the real question is how I can reduce what I'm doing or break up the backstop_data into different containers.. \ud83e\udd14 . Hm.. I think I'm wrong again about that.. seems it's just my scenarios that are failing somehow. I don't get this failure when I run locally, just in the docker container. So strange.... Looks like there's an internal timer that after a certain number of seconds pass the application quits? Is this different from waitTimeout ? Can that be edited with an option?. So.. After some debug statementing.. I can confirm that it is reaching the process.on('exit') event when it exits the application. Even though the headless chrome hasn't returned from my scenario. \ud83e\udd14 \nEdit: Maybe there's something wrong with my scenario? I'll add it below.\njson\n{\n  \"label\": \"en-us WoW Homepage Full Page check\",\n  \"url\": \"https://worldofwarcraft.com/en-us/\",\n  \"hideSelectors\": [\n    \"body > div.body > div > div.page-Home > div.page-Home-masthead > div > div.VideoPane-bg > video\",\n    \"body > div.body > div > div.page-Home > div.page-Home-masthead > div > div.VideoPane-content > div:nth-child(7)\"\n  ]\n}. It seems that setting the timer on Chromy has no effect. No matter what value I set it to the scenario always ends at ~30s.\nEdit: Didn't realize gotoTimeout and waitTimeout were 2 different timeout settings in chromy. \ud83d\ude1e . Even with a gotoTimeout of 5min+ the process silently fails and eventually receives the exit signal with code 0.\nAdded to cli/index.js:50:\njavascript\n  process.on('exit', function (code) {\n    console.log(`Exit signal recieved: ${code}`);\n    process.exit(exitCode);\n  });\nAnd then in my docker container's bash:\nbash\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=1024,768\"],\"port\":9226,\"waitTimeout\":120000,\"visible\":false,\"gotoTimeout\":300000}\nCookie state restored with: []\nSCENARIO > en-us WoW Homepage Full Page check\n9226 Chrome v61 detected.\n9226 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=1600,900\"],\"port\":9227,\"waitTimeout\":120000,\"visible\":false,\"gotoTimeout\":300000}\nCookie state restored with: []\nSCENARIO > en-us WoW Homepage Full Page check\n9227 Chrome v61 detected.\n9227 ***WARNING! CHROME VERSION 62 OR GREATER IS REQUIRED. PLEASE UPDATE YOUR CHROME APP!***\nExit signal recieved: 0\nNote that the process doesn't even enter the report portion.\nEdit: Kept tracking all the way down into Chromy itself. I'm not sure why but the process just hangs on the this.client.Page.navigate({url: url}) call. That's controlled by the chrome-remote-interface which just fails after the timeout and causes chromy to throw GotoTimeoutError. But it still ends the process, which is annoying. :/. Ok.. I solved the issue. It was a docker issue all along. \ud83d\ude13 Linking the reference material that got me to solving the problem (which was ironically because I was doing research into alternatives to chromy and found puppeteer): https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#tips\nessentially adding --shm-size=2gb and --cap-add=SYS_ADMIN to my docker run command let chrome have enough shared memory to finish running the test. \nWhat was probably happening was that the chrome process was running out of shared memory and couldn't finish loading the page (huge page, lots of assets, etc...) So then when that occurred, it was being treated as a gotoTimeout because it couldn't load the page with the shared space provided by docker by default (which is 64mb by default).\nAfter increasing the shared memory size to 2gbs the process completed successfully. \ud83d\ude04 . I'm seeing a similar issue to this inside of my docker container. It doesn't appear to be ram related (doubled the ram in the container and was still experience this issue). It does however appear to be random. I had a couple runs where this -didn't- happen.\nAs a note: delay does not seem to fix the issue, even though I would've expected it to, as then the page would have time to fully load.. Is there perhaps a means of saying something in the onReadyScript? Perhaps something to the effect of: \njavascript\n$(window).bind(\"load\", function() { \n    // take screencap after this point\n});. @samuelhwilliams What are specs for your container? What os? Node version? Can you give me any details as to how your accomplishing this?. ",
    "lsuchanek": "I prepare PR with configuration for starting port https://github.com/garris/BackstopJS/pull/613. ",
    "samuelhwilliams": "What do you currently do to build and push a new docker image? ~~I don't see the Dockerfile in this repo; do you have it somewhere else in source control?~~ I see it now.\nI presume you run something like docker build -t backstopjs/backstopjs .. This will default to building an image tagged as latest, and when you push this up, it'll overwrite the previous image tagged as latest.\nThe simplest thing to do is start explicitly including tags when you build and push your docker images. You can do this like so: docker build -t backstopjs/backstopjs:3.0.32 .. This will create an image tagged as 3.0.32 (the BackstopJS version used in the latest Docker image, which is probably a reasonable place to start, unless you expect to do ever update the dockerfile without updating the Backstop version). You can then push it up with docker push backstopjs/backstopjs:3.0.32.\nThe latest tag doesn't necessarily do what you expect, insofar as it doesn't track the latest image you've pushed. It's just another tag name. So if you also want to update latest, you could instead run docker build -t backstopjs/backstopjs:3.0.32 -t backstopjs/backstopjs:latest . and then push up both tags (separately as you can't push multiple tags at once).\nThis would help people integrate a specific version of Backstop rather than having to track latest or copy your Dockerfile and build the image locally.. Apologies, just noticed this is already open in https://github.com/garris/BackstopJS/issues/562.\nI will have a think about how to tie this into your existing hook so that it can be handled automatically.. @garris Ok, so I assume you're using Docker Hub's automated builds, configured at https://hub.docker.com/r/backstopjs/backstopjs/~/settings/automated-builds.\nHere you can add a tag rule (see below) which will automatically build Docker images with the same tag. All you'd need to do is start tagging your commits when you bump the version number. Once you push these tags up to GitHub, DockerHub will trigger the build and you'll have this problem neatly solved. \ud83d\udc4d\nYou could potentially use a post-commit hook or a webhook to automatically create git tags when the version of BackstopJS is updated, in which case you wouldn't have to take any manual action. But that would be a bit more work up front. :)\n\n(Edit: looks like your release tags have a 'v' prefix, so you'd need to change the pattern above to include a 'v' after the caret.). Nice, this looks like a good set up. I'd probably keep latest even though people are unlikely to rely on it, as it makes it easy for people who are pulling the image and just want to play around before pinning the version.\nIt looks like the latest few builds in Docker Hub have failed due to being unable to pull BackstopJS through NPM. I can only think that maybe the latest versions aren't published yet?\nWeirdly enough, I could also see the cancel button on the Docker Hub build. Haven't tried clicking it, but wonder if the settings are too permissive and maybe the public can cancel builds?\n\n. Probably best to have the tag on the docker image match that of the BackstopJS version inside it, as that's what most people would expect to be the case.\nIt looks like the Dockerfile only uses BACKSTOPJS_VERSION with npm install, which only seems to accept specific version numbers, so it looks like we'll need to update Dockerfile BACKSTOPJS_VERSION in line with version in package.json.\nMight be I can throw something together to automate/simplify some of these release processes/artifacts, if you would like. Not sure what you do at the moment for releasing to npm/docker/anywhere else. Is it all manual at the moment?. Sounds pretty good to me.. I'm running BackstopJS inside a docker container to capture some very long pages too (20k+ px). It works fine for me - don't have this issue, so that would tend to suggest it may be something to do with your setup.. I'm using the official docker image for BackstopJS available here: https://hub.docker.com/r/backstopjs/backstopjs/~/dockerfile/. ",
    "Baltazardoung": "You can probably use a hook to automatically publish a tag using the version declared in your Dockerfile\nIt is then enough to add a sub folder \"hooks\" containing a file \"post_push\":\n```shell\n!/bin/bash\neval $(grep -o 'BACKSTOPJS_VERSION=[^ ]*' $(dirname \"$0\")/../Dockerfile)\ndocker tag $IMAGE_NAME $DOCKER_REPO:$BACKSTOPJS_VERSION\ndocker push $DOCKER_REPO:$BACKSTOPJS_VERSION\n```\nEdit : See an example :\n eedb45928d7e53e4042ed639379c2977183bd1bc\n https://hub.docker.com/r/hchristophe/backstopjs/tags/\n. In addition, if you want to use the version number referenced in the \"package.json\" file directly within the Dockerfile, you can use the build hook to retrieve this information and pass it as an argument to the build.\nSee 2931a593dc9bd487fdac0f96a5a94f94ff1f70e5. The best solution was probably a mix of previous proposals.\n1. Implementation of a single DockerHub rule based on a tag.\n\n1. Updating Dockerfile and adding the build hook to pass the version as argument (extracted from the package.json file).\n```Shell\nFROM node:8.5.0-alpine\nARG BACKSTOPJS_VERSION\nENV \\\n    PHANTOMJS_VERSION=2.1.1 \\\n    CASPERJS_VERSION=1.1.4 \\\n    SLIMERJS_VERSION=0.10.3 \\\n    BACKSTOPJS_VERSION=$BACKSTOPJS_VERSION \\\n...\nShell\n!/bin/bash\nBACKSTOPJS_VERSION=$(grep -Po '(?<=\"version\": \")[^\"]*' $(dirname \"$0\")/../../package.json)\ndocker build --build-arg BACKSTOPJS_VERSION=$BACKSTOPJS_VERSION -t $IMAGE_NAME .\n3. Adding the \"`post_push`\" hook (to generate the \"`latest`\" image)Shell\n!/bin/bash\ndocker tag $IMAGE_NAME $DOCKER_REPO:latest\ndocker push $DOCKER_REPO:latest\n```\nWhat do you think ?\n. @garris see  pl #617 :smile:. ",
    "trungdq88": "@questionmarc I have 100% reproduce rate for long pages. The broken fragments in the captured image are random so my best guess is RAM issue.\n@garris sorry for tagging you, have any idea?. @garris my page wasn't that long, the longest is only about 9000px. My last setup on a macOS works fine, when I try to set up the project again on an Ubuntu (with lower specs), this happen.\nI'll try to add some more RAM.. That's reasonable. Will fix.. ",
    "vfhrr": "I had the same problem and it looks like enabling GPU, so removing --disable-gpu flag helps with the issue.. @ducle91 it's described here So you can set the flag explicitly in the chromeFlags option if you use chromy. Just to clarify: height of my page was below the limit of 16384px.. ",
    "ducle91": "@vfhrr where do you go to remove the --disable-gpu ?. @vfhrr my page was well over the limit so I wasn't able to use chromy. I decided to use casper and that works for me.. The selector is there. After further inspection, I noticed on the modal (there are 2 buttons) one button is using the \"button \" element. The other button uses an \"a\" tag. If I used the \"button\" element for clickSelector in my backstop then it works, but if I tried and use \"a\" in the clickSelector then it doesn't. Both buttons function like it supposed to, except the button with \"a\" will redirect the user to another URL instead.. Thanks for the prompt reply Garris! I have created a new scenario like you've mentioned above. . I found the same issue posted previously #604. someone suggested removing disable-gpu , but I'm not sure where to find the config for that.. Even after I disabled the flag for gpu, it still wasn't able to capture the entire document and instead split it in two. Chromy limitation?. I found a work around, by switching to \"engine\": \"casper\" config it was able to capture the entire webpage. I found out the entire page is about 27k pixel in height , yikes! I wonder what is the height limits for chromy.. ",
    "deap82": "@garris I did have a look at the example scripts but can't find an example for this. This specific method - addCustomDevice - is not available on the chromy instance, it's static on the type.\nIf I want to use\nchromy.emulate('myCustomDeviceConfig');\nI need to first call\nChromy.addCustomDevice({ name: 'myCustomDeviceConfig', /.../ });\nNotice chromy vs Chromy.\nIf I do\nconsole.log('chromy.emulate', chromy.emulate);\nI can see the body of the emulate function logged out to console.\nIf I do\nconsole.log('chromy.addCustomDevice', chromy.addCustomDevice);\nI get an exception.. I created a small gulp task and when I run this I get the function logged out:\ngulp.task('backstop-foo', function (cb) {\n    var ChromyStatic = require('chromy');\n    console.log('ChromyStatic.addCustomDevice', ChromyStatic.addCustomDevice);\n    cb();\n});\nBut when I try this in my onReady.js for backstop:\nmodule.exports = function (chromy, scenario, vp) {\n    var ChromyStatic = require('chromy');\n    console.log('ChromyStatic', ChromyStatic);\n};\nI get an error when I run \"backstop reference\", this is the output I get in console:\n\nBackstopJS v3.0.32\nLoading config:  C:\\[SOME-PATH]\\backstop-settings.js\nCOMMAND | Executing core for reference\ncreateBitmaps | Selected 1 of 1 scenarios.\nStarting Chromy: {\"chromeFlags\":[\"--disable-gpu\",\"--force-device-scale-factor=1\",\"--disable-infobars=true\",\"--window-size=375,667\"],\"port\":9222,\"waitTimeout\":30000,\"visible\":false}\nCREATING NEW REFERENCE FILES\n      COMMAND | Command reference ended with an error after [0.572s]\n\nI'm running \"backstop reference\" with the --configPath flag, so I tried to access it from that .js file like this:\nvar ChromyStatic = require('chromy');\nconsole.log('ChromyStatic.addCustomDevice', ChromyStatic.addCustomDevice);\nWhen I run that I get this log:\n\nBackstopJS v3.0.32\nLoading config:  C:\\[SOME-PATH]\\backstop-settings.js\nError NestedError: Could not require module 'chromy'\n\n. Hello again @garris,\nTo solve my problem for the moment I made a fork: https://github.com/deap82/BackstopJS\nIt makes it possible to define my viewports like this;\n\"viewports\": [\n            {\n                \"label\": \"phone\",\n                \"width\": 375,\n                \"height\": 667,\n        \"emulate\": {\n                    \"name\": \"phone\",\n                    \"width\": 375,\n                    \"height\": 667,\n                    \"deviceScaleFactor\": 2.0,\n                    \"pageScaleFactor\": 1.0,\n                    \"mobile\": true,\n                    \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"\n                }\n            },\n            {\n                \"label\": \"desktop\",\n                \"width\": 1920,\n                \"height\": 1080\n            }\n        ]\nThere are two parts of my problem, the commit I've done to my fork (https://github.com/deap82/BackstopJS/commit/0205f7db533888dc4a3e6b3aca6392d974486018) solves the problem of defining my own custom devices for emulation.\nThe other problem is that when I used the \"iPhone6\" emulation device included in Chromy (defined here: https://github.com/OnetapInc/chromy/blob/master/src/devices.js), the width/height is configured as twice as what it actually should be. Running backstopjs with that emulation gives me screenshots of the tablet design of my application. I suppose it has to do with Retina and it seems to me that the \"deviceScaleFactor\" of the emulate object isn't taken into account when chromy and/or backstop is doing its' work.\nAlso, I tried to get rid of specifying the width/height both in the viewport and the emulate object above, but when they're not in the viewport object backstop fails.\nIf you have any pointers about these things and what I've done in my fork, I'd be happy to rework this into an acceptable PR.. Exactly @kiran-redhat, that's what I've enabled in my fork of backstop as I couldn't find any other way to access Chromy.addCustomDevice. . @garris \nWhen I try this in onBefore:\nvar ChromyStatic = require('chromy');\nconsole.log('ChromyStatic', ChromyStatic);\nconsole.log('ChromyStatic.addCustomDevice', ChromyStatic.addCustomDevice);\nI now get an error output that might explain the problem:\n\nCOMMAND | Command reference ended with an error after [0.568s]\nCOMMAND | Error: only one instance of babel-polyfill is allowed\n\n(To get it I uncommented \" // logger.error(error);\" in backstop core/command/index.js. I would suggest this log to always be output, as it gives a lot more meaningful error messages when something goes wrong and it could even be about something the user did in his onBefore/onReady scripts.) \nI'm not sure but also it seems to me that even if it worked requiring in chromy myself, it would lead my code to go against a different installation of chromy then the one that backstop uses;\n```\nnode_modules\n   |- backstopjs\n   |   |- node_modules\n   |       |- chromy (1)\n   |- chromy (2)\n1 backstop uses this chromy and I use this chromy when calling .emulate(/.../) in onReady.js.\n2 My code in onBefore.js tries to use this chromy.\n```\nBut again, I say this with reservation as I'm not sure at all how Node handles this kind of situation. But it seems to me the babel-polyfill package includes a warning about this kind of scenario, and chromy does not. Maybe this is something that could be solved with \"npm link\" but if that's the case, wouldn't it be easier/better if the backstop configuration either had some kind of support for this through the config object OR at least expand parameters sent to onBefore/onReady to also include the static Chromy reference? To me it makes a lot of sense to associate the emulation info with the viewport definitions, but I can of course understand if you don't want backstop to have too many dependencies on the internals of Chromy.  \nWhat's your thoughts about my other issue with using the chromy built in emulation for iPhone6?. Hi @garris, any new thoughts on this? I'm open to any approach that enables use of addCustomDevice (and benefit from future updates) and could put some time into a PR over the holidays. Just need some input from you as I feel you might not agree with the above approach. . @garris \nI've made a pull request now; https://github.com/garris/BackstopJS/pull/621\nHappy Holidays! :-). Before I try, does puppeteer include an equivalence to chromys addCustomDevice (that we discussed previously)? It is crucial that my tests for phone+tablet viewports runs with touch events emulated. . Found it. Will look into it. https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pageemulateoptions. Hi @garris,\nI'm trying now and it seems to be working better. However, compared to chromy I'm getting a lot more console output from the application than I did before. I've tried searching the puppeteer api docs for some way to change the log level when the app runs, but failed to find it. All this logging makes it a bit difficult to follow a long in what backstop is doing and my own logging in onReady script.\nThe logging I'd like to exclude looks like this;\n\n. @krisdigital \nAre you saying I should make changes to the runPuppet.js file or that I could unsubscribe to listening to the console event in my own onReady scripts? (I'm not even sure why I get these logs, they are not visible in console when I run the app normally). Hello again.\n\n\nIt seems puppeteer does not have a mechanism for unsubscribing events. @garris suggestions sounds good, but I can not find any documentation of achieving this (related links: https://github.com/GoogleChrome/puppeteer/issues/744, https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md)\n\n\nI've now noticed issues with the screenshots taken by puppeteer, here is one example;\n\n\nWith chromy I got this screenshot (black frame added for clarity):\n\nWith puppeteer I get this screenshot (black frame added for clarity):\n\nHere is the full view for reference (with element selected to screenshot highlighted by dev tools):\n\nAs you can see part of the top bar and left side menu becomes part of the screenshot with puppeteer. In the puppeteer version the right part of the dropdown element is cut off due to this.\n. @ApplePP I suppose I did because the reference images I have now look ok. But I have no memory of what I did. I'll be working more with my backstop setup in the upcoming weeks (setting up tests for new views), so I'll let you know if that work jogs my memory in any way.. It was actually rerenders of the page that was my other problem. Got that sorted out and now the hideSelectors approach works fine. Closing the issue.. Aha, I see... They are not... No way around that?\nIt's a bit odd because the one that always is captured is far down the page. . 1. Setting the viewport really tall works \ud83d\udc4d  and is a good enough workaround for now.\n\nTrying to run npm run smoke-test gives me this error:\n\n\nIt seems the smoke-test script has --config instead of --configPath.\nI ran the tests by moving in to the /test/configs folder and run\nnode ../../cli/index.js test --configPath=backstop_features\n66 failed, but mostly due to text anti-aliasing diffs, There are a few where the image is missing:\n\n===\nThanks for the brain storming, I'll go with the tall viewport setting for now. :-)\n. ",
    "alexus2005": "Not exactly on topic, but hope to help a bit. When this happened to me, I was Chromy error in CLI. Then I checked ports, and 9222, 9223 etc were used by another application on my machine. So after changing ports, it all works again.. Thank you @garris! This is one of the best visual comparison tools I have seen :). ",
    "grafbumsdi": "I would also need this fix, please!. ",
    "ipwa": "For the latest version I use:\nbackstop_data/bitmaps_test/*\nbackstop_data/html_report/*. ",
    "anandsourabh": "Thanks @ackmanx  and @garris. I was asked to have a seperate report for each scenario, I managed to get this done by creating separate jsons based on test data that I was provided. I am encountering a unique problem though, that I will pose as another issue. Thanks again!. ",
    "joelgrimberg": "@tk8817 no condenscend taken ;) thanx for the link. \n@garris great! thanx for the response.. ",
    "martijnv": "Thanks for the quick reply (and all your work on BackstopJS). I wanted to use chromy.getCookies() to get the cookies after logging in and then use the loadCookies like the example, but that is not possible with version 0.5.5 of chromy. Is there an alternative way to get the cookies? Or is the only way to log in outside of backstop/chromy, get the relevant session cookies and then use those within Backstop?. ",
    "dennis-best": "Good to know. Thanks!. ",
    "screendriver": "Cool. Should this maybe be added to the docs or to the generated backstop init template?. Hi @mantovanig,\nok, cool. But why do you have a dependency to React in general? If you made it as a peerDependency you are assuming / forcing the consuming project to use React. What if you want to use BackstopJS but don't have nothing to do with React? For example if your project uses Angular or Vue. These projects are now forced to install React just for BackstopJS? \ud83e\udd14 . ",
    "jgbernalp": "A slightly improved solution would be to use the same color of the text to keep your test similar to the real page.\n      const inputElememt = document.querySelector(selector);\n      style = window.getComputedStyle(inputElememt);\n      const initialColor = style.color || 'black';\n\n      document.activeElement.style.color = 'transparent';\n\n      // If there is a value, create a \"shadow\" so it shows up. Shadows do not affect the cursor so it stays transparent\n      // Shadows DO affect placeholder text and will bold it so only apply if we have a value\n      if (document.activeElement.value) {\n        document.activeElement.style.textShadow = `0 0 0 ${initialColor}`;\n      }\n\n. ",
    "zbycz": "Cheers! Any idea on when could be the next release? :-). So cool \ud83d\udc4d . ",
    "eddyloewen": "@jedateach You can enable the print mode in chrome with a flag.\n\"engine\": \"chrome\",\n  \"engineFlags\": [\"--enable-print-browser\"],. I would like to vote for this one!\nThe perfect workflow would be:\n Run tests\n See failing tests and look at the diffs\n Iterate on the failing things, fix something\n Re-run only failing tests to see if the fixes changed them\nIf I only filter the tests to a specific scenario I loose all the other failing tests. Therefore I have to run all the tests again to see which are still failing. That takes a long time and could be avoided by running or filtering to only run previously failing tests.. I know - I will have to re-run all tests at the end. But during development or while fixing errors I would like to run as few tests as possible - but still get all failing tests. \nI could create a regex pattern (that would match all failing tests - but that would be a lot of extra work that I would have to do after every test run right? Or is there some pattern that would match those already? I cant' find one in the docs.\n. I just wanted to make sure that it really is not possible to currently achieve this :)\nI will try to build it and create a PR.. ",
    "aliu145": "\nSeems like the backstop test comparison run successfully, but just the html_report did not generate properly.. hmm do you know of any way using chromy? . Thank you, that worked! :)\nFor others - this is what I did in chromy:\nchromy\n    .wait(element)\n    .evaluate(`_element = '${element}'`)\n    .evaluate(function() {\n        document.querySelector(_element).scrollIntoView();\n    }, element);. @garris is there a way to integrate this into the backstop framework so that it will always scroll to element before taking screenshot, without having to use onReady script?. Just want to make sure I'm understanding it correctly, since I am not familiar with that file. So will that file work in that if I include a clickSelector, scrollToSelector, etc, it will carry out the actions in that file without having to define a separate onReady script?. Is there any way to do it so that it doesn't require defining a separate selector at all, but that it will always scroll to the selector it's taking screenshot of before taking screenshot (i.e. using that same defined selector for screenshot as the one for scrolling to). Or would it not be preferable to do that way?. ![image](https://user-images.githubusercontent.com/11867181/39937485-c2d737ea-5504-11e8-85d8-842a6bab1379.png)\n\nSo here is what the situation kind of looks like. There is a \"frozen\" div at top and bottom of page, and an inner scroll-able div. Anything which you have to scroll down to see gets cut off right now when selector provided for screenshot because it doesn't scroll the inner div to make it in view first. One way to do it would be to provide a scrollToSelector for any elements \"below the line\", but it would be nice to be able to just have backstop always first scroll to the provided screenshot selector before taking image of it.\n. Well, I guess that would require modifying Backstop framework, can't just implement in my own config/framework, so let me know what you think. If you think it's better to just implement in clickAndHoverHelper, I could do that too! Thanks. In this case, the selectors value is a div that's \"below the line\" i.e. that needs to be scrolled into view. So, for a selector which is partially visible it looks like this (the black part is from the \"frozen\" bottom div):\n\nFor a selector which is even lower down the page it just shows all white screenshot:\n\n. @garris, that makes sense! I cloned this backstopjs repo, created a local branch and made the changes, but running into issues when trying to push... should I be doing something differently? this is my first time trying to make changes on a github repo\n\n. @garris No problem! Pull request has been opened here: https://github.com/garris/BackstopJS/pull/774. Closing this issue, thanks for all your help!. I am running into this issue too (on windows).. @tyler36 , I downloaded the file you linked and copied into node_modules folder but I'm still running into same error. was there something else you had to do?. Hmm I am able to directly install puppeteer into a different directory:\n\nSo perhaps it's an issue with backstop?. @garris I'm not sure why the update to README.md failed Docker Cloud. I added a test, but wasn't able to run it since I'm running into issues installing BackstopJS dependencies (puppeteer)... would you be able to help pull my branch and run it?. @garris - Hello! any update on this? When will it be able to be merged in? Thanks.. Hmm, as I'm testing this, it's working for puppeteer:\n\nBut not for chromy:\n\nDo you have any idea why that might be?. @garris , I am still seeing issue where the same code is able to scroll container with puppeteer, but doesn't work with chromy :/ \nHere is the chromy script:\n`  if (scrollToSelector) {\nchromy\n\n  .wait(scrollToSelector)\n\n  .evaluate(function () {\n\n    document.querySelector(scrollToSelector).scrollIntoView();\n\n  }, scrollToSelector);\n\n}`\nDo you have any suggestions?. Is SVG icon not a DOM element? The selector to take a screenshot of is a normal DOM element though.. Config posted, thanks!. Hi, yes. Sorry to give more information, my script files are running, and my own custom onReady scripts run as well, but the params used in clickAndHoverHelper do not work, and also I see in onReady.js it has this code:\nmodule.exports = async (page, scenario, vp) => {\n  console.log('SCENARIO > ' + scenario.label);\n  await require('./clickAndHoverHelper')(page, scenario);\nbut I'm not seeing that logging in my console (i.e. the SCENARIO > scenario.label part). It is... how can I write a backstop_features test that can imitate this? Do I need to add a scrollable div to index.html?. ohhhh gotcha! OK I will work on adding that. Hi @garris, I made these updates but it's still not working (ie the screenshot shows that it did not properly scroll the container). ",
    "MindaugasVaitkus": "@DuarteAppical here it is :)\n{\n  \"id\": \"SPORTMASTER\",\n    \"delay\": 10000,\n    \"hoverSelector\": \"\",\n    \"clickSelector\": \"\",\n    \"postInteractionWait\": \"\",\n    \"selectors\": [],\n    \"selectorExpansion\": true,\n    \"misMatchThreshold\" : 3,\n    \"requireSameDimensions\": true,\n\"viewports\": [\n    {\n      \"label\": \"phone\",\n      \"width\": 375,\n      \"height\": 670\n    }\n  ],\n\"onBeforeScript\": \"chromy/onBefore.js\",\n  \"onReadyScript\": \"chromy/onReady.js\",\n  \"scenarios\": [\n{\"label\": \"Home Page\", \"url\": \"https://sportmaster.dk/\",\n \"removeSelectors\": []\n},\n\n\n{\"label\": \"Varer\", \"url\": \"https://sportmaster.dk/varer/\",\n \"removeSelectors\": [],\n \"hideSelectors\": [\n     \".product-teaser\",\n     \".product-counter__number\",\n     \".pager__visible\"\n ]\n},\n\n\n{\"label\": \"Club Sportmaster\", \"url\": \"https://staging.sportmaster.dk/user\",\n \"removeSelectors\": []\n},\n\n\n{\"label\": \"Univers Sportsale\", \"url\": \"https://sportmaster.dk/univers/sportsale/\",\n \"removeSelectors\": [\n    \".product-list.clerk__product-list\"\n ]\n},\n\n{\"label\": \"Powerstep\", \"url\": \"https://sportmaster.dk/powerstep\",\n \"removeSelectors\": [\n     \".product-list.clerk__product-list\"\n ]\n}\n\n],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 1,\n  \"asyncCompareLimit\": 1,\n  \"debug\": false,\n  \"debugWindow\": false\n}. @garris \nSolution you posted seems to solve it for now, but I have very simple scenarios. If the problem will rise again after I further expand my backstop.json file I will post here.\n@matthew-dean \nHope you will find solution for your problem. If so, post it here :). ",
    "liamaharon": "It looks like you have'zombie' headless Chrome instances blocking ports Backstop is trying to run on. \nHave a look at the solution posted for Windows users in issue https://github.com/garris/BackstopJS/issues/640. @garris Had a play with Canary but sadly was not able to find an obvious solution. \nFeeling clueless as ever, I reached out to the kind community over at Superuser who provided a solution that runs in PowerShell! \nHere's the command, which I've verified working on my W10 64bit setup\nGet-CimInstance Win32_Process -Filter \"Name = 'chrome.exe' AND CommandLine LIKE '%--headless%'\" | %{Stop-Process $_.ProcessId}\nIf somebody else doesn't get around to it first, I'll submit a PR over the weekend. \ud83d\udc4d . @anton-kulagin That looks like a Command Prompt error. The script only runs inside PowerShell, please try that and let me know how you go.. No worries, good to hear it's working for you now @anton-kulagin. \nThe command was added to the README in https://github.com/garris/BackstopJS/pull/645, closing this issue :+1: . ",
    "eenagy": "I have already looked the docs before coming here.\nThere are 3 possibilities:\n.wait(msec)\nalias for .sleep(msec)  <=== Not good, async function can be slow or very quick, don't want to delay the tests more than needed. Neither want to deal with exception cases by setting it too low. But currently, that's how we wait for async functions.\n.wait(selector)\nwait until selector you specified appear in a DOM tree. <=== Not applicable.\n.wait(func)\nwait until function you supplied is evaluated as true. func() executes in browser window context.\nThe last one would be ideal, but the code should not be running in window context, as has nothing to do with the window context. Of course, I can wait for an HTTP call to server side which deals with the code, but that is unneeded complication itself.\n. ",
    "andrepm06": "Turns out react needed some time to renderize those components.\nI got it working with this:\n\"readySelector\": \"[data-test-id]\"\n\"selectors\": [\"[data-test-id=SummaryCardContentOverview]\"]. Sure, here is:\n\n. Is this a known issue? If so, do you know in which cases this occurs?. Ok then, thank you :-). I'm facing this problem too. \nI have an array capturing several elements (around 30), some times it works, some times it doesn't.. Great! \nI was also looking for a way to define wether the execution is generating references or actually testing.\nTo do something like:\nif (RUN_MODE == 'reference') {\n        let url = scenario.referenceUrl\n} else {\n       let url = scenario.url\nIt is possible to do something similar currently?. This shocked to me: \nI've changed the order of the selectors on the array backwards, and suddenly everything works!\n```\n{\n    \"label\": \"Corporate Foreign Exchange - One group with one pending signer\",\n    \"url\": \"http://40.121.58.75/exchanges/unsigned\",\n    \"selectors\": [\"[data-test=ContractSummary-017]\", \"[data-test=ContractSummary-014]\", \"[data-test=ContractSummary-013]\", \"[data-test=ContractSummary-012]\",  \"[data-test=ContractSummary-011]\", \"[data-test=ContractSummary-010]\", \"[data-test=ContractSummary-008]\", \"[data-test=ContractSummary-009]\", \"[data-test=ContractSummary-007]\", \"[data-test=ContractSummary-006]\", \"[data-test=ContractSummary-003]\", \"[data-test=ContractSummary-002]\", \"[data-test=ContractSummary-001]\"],\n    \"selectorExpansion\": true,\n    \"misMatchThreshold\": 1.0,\n    \"requireSameDimensions\": true\n  }\n```. Actually, i'm not. I accidentally copied this from somewhere. But i really did not understood this tag.\nBut removing, didn't solved the original problem =(. I actually did this yesterday. Forgot to post the solution here.\nInstead of using evaulate, I've used evaluateOnNewDocument and it worked fine with onBeforeScript :-). I'll dig out the documentation.\nIs there a particular reason for using -it ondocker run ?. Yes, definitely.\nI actually was thinking in trying something like this:\n\"dockerOptions\": {\n    \"args\": [\"-it\"]\n}. ",
    "matthiaskomarek": "Hello @garris i have tested it with our current setup and i'am impressed by the new ui. Is there any ETA when this will land on master?\n. Hey @garris i would kindly follow up on this issue. I have already created a PR, would be nice if you could take a look on this.. Hey @garris thanks for your feedback. I have updated the PR accordingly.\nI have also created a new Component for the UrlDetails and had to do some minor changes to the DiffDetails markup so that both components can be in the same Row\nPlease let me know what you think! Thanks\n\n. Hey @screendriver,\nthe html report page, which gets generated to show your test results, uses React. Thats the reason why BackstopJS has this dependency.\n. @mantovanig i would like to have react as peerDep.\nMaybe it would be good to upgrade to React 16.x and also make it a peerDep. What do you think?\nI am curious what @garris thinks about this.. I use the reference urls for our test suite with the following command:\nbackstop reference && backstop test\nAnd it looks like that the test suite hangs up when an error occurs. In the console i get\nCOMMAND | Command `reference` ended with an error after [95.102s]\nCOMMAND | Error: Navigation Timeout Exceeded: 60000ms exceeded\n                    at Promise.then (/Users/matthiaskomarek/Documents/Projects/zurich/visual-regression/node_modules/puppeteer/lib/NavigatorWatcher.js:71:21)\n                    at <anonymous>\n(node:35439) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: Navigation Timeout Exceeded: 60000ms exceeded\n(node:35439) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\nAfter this, it just stops running. But doesn't terminate the terminal process.\nIf no error occurs, everything is running fine!. Hey @krisdigital i have tried the same with the current 3.1.21 branch and if something fails with the chrome engine. The script goes on and just shows an empty entry in the report.\nSo this is an issue (the hung up script) with the puppeteer engine.. @garris I would like to have the diff image in item view. What do you think about an extra button to show just the diff image? Scrubber will still switch between reference and test\n\n. @garris Good to know, thanks.\nI will create a PR for this.. @ackmanx It will open up the \"detail view\" (that thing when you now click on the test or reference image, images are full-size) and will show the Diff image\nSo after my PR, you still need to click on the diff image to see it in full-size.. Hey @mikkelrom i currently don't have any free time to solve this issue. You can work on this, if you want.. Is there a reason for using var?. This could also be Array.from(document.querySelectorAll(...).forEach() its easier to understand.\nj is also unused. Shouldn't this be reject instead of resolve? Because now, the promise resolves with an error, which should be a reject or?. ",
    "vtombesi": "Sorry for late replying, but I have been away from the project. Everything works after the command, thank you. . ",
    "eguitarz": "Thanks! But seems every scenario starts with a fresh environment, all local storage will be cleared out? If that's true, then I'll have to log in on every scenario, which is a bit slow and not ideal.\nIs there a way not to clear out the localStorage once a scenario is done? (or pass to the next test). @anton-kulagin Nope. According to the doc (https://github.com/garris/BackstopJS#running-custom-scripts) If you defined local onReady/onBefore script, backstop will run them instead the global ones.. ",
    "yxb941006": "sorry, my english is ugly.\nI recently had this problem, when i use the regular localStorage api in an onReady script, it will tip me \"localStorage is not defined\".\n. ",
    "smirfolio": "Yep, that'S what i mean, in addition I managed to perform scenario with multiple clicks : \n\n{ label: 'Click To Page', \nurl: 'http://test.site', \ndelay: 6000, \nmisMatchThreshold: 0.001, \nrequireSameDimensions: true,\nreferenceUrl: 'http://reference.site',\nclicksSelectors: \n     [ '.taxo-element > li:nth-child(1) > span > ul:nth-child(1)',\n       '.taxo-element > li:nth-child(1) > span > ul:nth-child(2) > li:nth-child(2) > a',\n       '.search-browser > .panel-body  ul.nav-pills > li:nth-child(1) > a',\n       '.search-browser > .panel-body  a.btn-xs',\n       'ul[test-ref=search-counts] > li:nth-child(2) > a',\n       'tr:nth-of-type(2) td:nth-of-type(4) a' ],\n onReadyScript: 'helperClickSelectorScript.js' ,\n removeSelectors: [ '.HideMe1', '#HideMe2', 'footer.HideMe' ]}`\n\nand in my helperClickSelectorScript.js i have something like : \n\n var slectorsClicks = scenario.clicksSelectors\n  slectorsClicks.forEach(function(selectorClick){\n    chromy\n      .sleep(1000)\n      .wait(selectorClick)\n      .click(selectorClick)\n      .sleep(500);\n  });\n\nso in a given page i can click multiple button to build a request then go to a new page (Search result)\nBut i have the same issue with removeSelectors\n. Well you're probably right regarding what i try to do with multiple click scenario, but may be the 'clickSelector' basic usage, have to be consistent with other parameters especially the 'removeSelectors', so in my opinion if 'clickSelector' perform a redirect to new page the  'removeSelectors' must take effect, but for now screenshot of new page may contain the  'removeSelectors' elements. @garris \nWell, i never give Up ;) , so i I have solved the issue using some of your code that i used on the  \"onReadyScript\": \"chromy/onReady.js\" : \nOnce the click actions performed i do some thing like : \nif (scenario.hasOwnProperty('removeSelectors')) {\n    scenario.removeSelectors.forEach(function (selector) {\n      chromy\n      .evaluate(window._backstopSelector = '${selector}')\n      .evaluate(\n        () => {\n          Array.prototype.forEach.call(document.querySelectorAll(window._backstopSelector), function (s, j) {\n            s.style.display = 'none';\n            s.classList.add('__86d');\n          });\n        }\n      );\n    });\n  }\n\nIt may help someone. ",
    "krzksz": "Hey!\nThis usually means that there are some zombie Chrome processes left from previous tests. Check https://github.com/garris/BackstopJS#error-failed-to-launch-a-browser for possible fixes.. ",
    "mike-malandra": "I'm still getting this issue with BackstopJS v3.1.19 on Windows 10. After running backstop, there are several instances of chrome still open.\nI agree that lowering the async capture limit seems to help, but any ideas as to why higher limits are causing these failures?. @garris yes, running with 1 or 2 runs without exceptions.\nHowever there are almost 1000 pages/scenarios i am trying to verify, so obviously the more I can run in parallel the better :). . this is actually a wordpress app (building a POC for our site). I could attempt to test something like google.com to see if I get similar results with a higher async limit.\nAlso, are there any logs I can view to see if something is dropping?. @garris stability is about the same between local and wordpress site. after playing around with the numbers, performance/stability starts to drop off after 5 async captures. I'm leaning toward thinking this is a memory issue of some sort.\nIs it possible to alert if there is insufficient memory for the image capture?. @garris the issue does indeed seem to be environmental, as I get the same results on a local HTML page as i do on the wordpress site. Not sure if it's coincidence or not yet, but if i set the number of concurrent tests to the amount of cores my CPU has (8), I get stable results. As soon as I go over that amount, stability begins to deteriorate.  Memory consumption never peaked above 70% while I was running the tests, but there were occasional some spikes in hard faults. \nAlso, when running with more than 9 async captures, i got the following message in the console:\n(node:11624) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit. yes it is successful with that value.. I have also found Chromy to be unreliable when being ran in docker, even running with asyncCaptureLimit set to 1. I simply made the switch to puppeteer and so far have had much better results.\nFor whoever is building this PR, can we have it default to not retrying? I'm actually against using the retry option since there is potential for it to mask legitimate issues (webserver, js issues, etc).. ",
    "vininaag": "@garris \nI am facing a strange behaviour. The docker Image says \"A self-contained Docker image with no external dependency\"\nI am running the docker image in my machine (mac), it runs the scripts and able to take the screenshots.\nWhen i ran the same docker image in another machine(mac), it runs the scripts but screenshots not created.\nWhen i ran the same docker image in aonther machine (Linux), again it runs the scripts but screenshots not created.\nBelow are more details:\nBackstopjs version i am using BackstopJS 3.x  (from the docker image only. Not installing externally)\nmy dockerfile\n```\nFROM dockertr.xxx.xxx/backstopjs\nUSER root\nCOPY package.json /src\nmy `docker-compose.yml`\nversion: \"2.3\"\nservices:\n  test:\n    build:\n      context: .\n      dockerfile: dockerfile\n    cap_add:\n      - SYS_ADMIN\n    volumes:\n      - .:/src\n      - /dev/shm:/dev/shm\n    shm_size: 1024M\nHow i am starting \"`run_tests.sh`\"\ndocker-compose build test\ndocker-compose run --entrypoint 'sh abc.sh' test\nresult=$?\ndocker-compose stop\ndocker-compose rm -f\nexit $result\n```\nThe abc.sh file\n```\nBelow will generate and update the cookie.json available in engine_scripts\nnode src/gencookie.js\npkill -f \"(chrome)?(--headless)\"\nbackstop test\n```\nNOTE: \n1. The current directory (mapped in docker-compose) is having the below folder structure.\n |_docker-compose\n |_abc.sh\n |_run_tests.sh\n |_src\n |    |_engine_scripts\n |_backstop.json \n |_package.json\n\n\nI am using the chromy (again provided inside the docker image)\n\n\nrunning the run_tests.sh in my machine working fine. Failing in another.  The only difference between mymachine run and other machine runs console is\n9222 INFO > BackstopTools have been installed.\n  both are mac. See the attached image of consoles\n\n\n\n. Found the issue, When run inside docker it was requiring a proxy and waiting and getting timed out. . My issue resolved with disabling the some external cdns from the site i am testing.  The Resolutions for other if they want to deal with the change proxy. They can try below two ways.\n1. \n\"chromeFlags\": [\"--no-check-certificate\",\"--disable-dev-shm-usage\",\"--proxy-server=http://proxy.ab.abc.com:8080\"]\n2. use docker HTTP_PROXY & HTTPS_PROXY in docker-compose.yml. ",
    "FireGhost": "Hey,\nI just had the same issue than @Kenith using the Chromy engine.\nI was able to remove the issue by changing the default \"waitTimeout\" value. In my case, I had to change the value to \"300000\" in order to remove completely the errors.\nHere is my config:\n\"engine\": \"chromy\",\n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"gotoTimeout\": 300000,\n    \"evaluateTimeout\": 300000,\n    \"chromeFlags\": [\"--disable-gpu\", \"--no-sandbox\", \"--force-device-scale-factor=1\"]\n  },\nHope this helps someone one day ;). ",
    "listepo": "BackstopJS + Protractor, it would be great\n. ",
    "adiherzog": "@bitjson @listepo You might want to have a look at http://scenarioo.org (sorry for advertising a different tool, but this might fit your needs).\nIt integrates with Jasmine + Protractor (or Java / C# Selenium tests). You can browse the screens of each test run and also create and browse the visual diff of two builds.\nExample from the demo:\n\nBrowse demo:\nhttp://demo.scenarioo.org/scenarioo-master/#/step/Donate/find_donate_page/searchResults.jsp/0/0?branch=wikipedia-docu-example&build=last%20successful&comparison=To%20Projectstart. ",
    "creaux": "Still have that issue there is no one dealing with this?\nAfter update even with Backstop: v3.1.21!. ",
    "iain17": "Seems like a reasonable error. Could you give us any specifics of what page you're trying to load? Is it a page that loads normally outside backstopJS? We need some kind of way to replicate the issue :). Which version of chrome are you running? I've seen this before and fixed it by updating chrome. If you're running backstop in Docker than just update to the latest image recently pushed.. Try updating to chrome build version 64, I think in Chromium might've fixed this issue.. Let us close this issue @garris :-). I'm using docker and using a config file like that which is working fine. The way your passing is correct aswell. Please post the .js file, by reading the first post it seems to be an error in that file.. That's very odd. Could you give us some more details on how you're calling the backstop test? Are you running it through npm, tell us what's inside ur package.json etc.\nCuz it exits out fine for me. If there is a error exit code 1 is used.. Hey @krisdigital We're super excited for puppeteer. I'm currently trying to get it to run in Docker with the latest changes from https://github.com/garris/BackstopJS/tree/puppeteer.\nOne thing I noticed is that we seem to create a new browser instance for each test case. We're currently experimenting with just having one browser instance and creating only new page objects (tabs) for each test. Let me know what you think.\nMy repo is at: https://github.com/iain17/BackstopJS/tree/puppeteer. ",
    "FabienDeshayes": "Looking good, thanks!. ",
    "SheffBRC": "Thank you!\nI'll try. I had 3.0.38. Hello! I've updated backstopjs version. But problem didn't disappear\nMy Chrome Version 63.0.3239.132 (Official Build) (64-bit)\n. Hello!\nI found the same problem - https://bugs.chromium.org/p/chromedriver/issues/detail?id=1699\nand its solution \n\nI added the definition of this environment variable in the script, like this:\n    def setUp(self):\n        os.environ[\"DBUS_SESSION_BUS_ADDRESS\"] = '/dev/null'\n        chrome_options = Options()\nAnd it really helped.\nBuild was launched about 20 times, and all were successfully passed, although before that, chrome hung on 3-5 launch for sure.\n\n\nCan you try this, please?. Bug depend on hardware. Bug was at mac mini 2014 with HDD\n\nThere are no problems at MacBook with I5 2.3 Ghz, 8 Gb RAM and SSD. npm v6.0.1\nnode v6.10.3. @garris Thank you for help! I have updated backstopjs successfully.\nBut I've problem with working of application. I had similar problem in past - https://github.com/garris/BackstopJS/issues/670\nAdding of this parameter - \"asyncCaptureLimit\": 2, to json file helped me. This did not fully resolved the problem. But tests worked really more stable.\nI have similar problem now. \n\nI try run test. Test goes to \"9223 INFO >  BackstopTools have been installed.\" and stop his work. Nothing happens after this. And Google Chrome stays in system processes.\nMaybe you can help me. I would be very grateful!. Thank's. I'll try. Bug depend on hardware. Bug was at mac mini 2014 with HDD\n\nThere are no problems at MacBook with I5 2.3 Ghz, 8 Gb RAM and SSD. ",
    "orangegloves": "So, I just tried it again where I just changed one page, and it did work correctly - I'm not sure why I have been having this problem on other changes. I'm going to keep my eye on this, but it is probably safe to remove this issue for now.. ",
    "cactusa": "Which version of backstop are you using? There was a fix for self-signed sertificates at some point which made chrome ignore any certificate by default.. Yes it works as expected locally.. Just noticed that when I updated my npm package file to backstop v3.1.17 when I run the docker instance it still runs at v3.1.15 could that be a problem?. I tried to make this work by using by using a backstop.json file and run just a fraction of the scenarios from the backstop.config.js file, just to see if that way it would just work, but unfortunately I experienced a different issue. When I run reference or test it only captures \"not found\" images for some reason. Why would this happen? Could it be because or certificate prompt, in which case is there a way to circumvent that with a flag or something?\nI am at a loss here not sure what to do. Any suggestions @garris ?. OK, it was not a certificate issue. The \"not found\" images were caused because chrome could not go to the address I was sending it to, because the address was actually to a local instance of my webapp which was also running in another docker container, so I had to add this option to the run command e.g. --add-host 'address:1.2.3.4' in order for the backstop container to be aware of my webapp.\nHowever another issue uncovered - now that I can actually do the \"reference\" and \"test\" commands I have observed that not every command run completes successfully. Roughly half of the command executions just hang and never complete. Any idea why? I did restart my docker just in case, but that did not help. How can I get some debug output from this?. @garris well as I was saying earlier the local backstop installation is v3.1.17 but when I run the docker commands it displays that it's running v3.1.15 and this is on a fresh install,  npm cache cleared. I'd guess it will happen for you as well.\nI am installing backstop by default from npm, should I switch to using a direct github build address?. Just tried reinstalling backstop from git+ssh://git@github.com:garris/BackstopJS.git#v3.1.17 , but yet again the docker backstop instance runs in v3.1.15\nDoes that happen for you as well @garris ?. Sorry the version of backstop in the docker instance was not changing because of my own lack of knowledge in docker. That has been sorted now, I just need to delete the existing container when I update backstop from npm. I am now running v3.1.19 consistently.\nHowever the hanging issue persists. Even if I log into the container with the provided debugging command and run the \"reference\" command its will intermittently just hang and not complete. I monitored the processes in that docker instance then I ran backstop and as expected a bunch of chrome processes appeared and most of them closed again almost immediately, but a few just remained open forever. This is what I get:\nPID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND     \n    1 root      20   0   20248   3212   2732 S   0.0  0.2   0:00.04 bash        \n 1117 root      20   0   20248   2988   2696 S   0.0  0.1   0:00.02 bash        \n 1122 root      20   0   21920   2320   1992 R   0.0  0.1   0:00.18 top         \n 1687 root      20   0 1226124  51448  24688 S   0.0  2.5   0:00.92 node        \n 1862 root      20   0  597420  82508  58824 S   0.0  4.0   0:00.27 chrome      \n 1884 root      20   0    4392    704    620 S   0.0  0.0   0:00.00 cat         \n 1885 root      20   0    4392    720    636 S   0.0  0.0   0:00.00 cat         \n 1887 root      20   0  350692  40076  31860 S   0.0  2.0   0:00.01 chrome      \n 1934 root      20   0  403824  46936  37968 S   0.0  2.3   0:00.03 chrome\nShall I open up a new issue for this one @garris ?\nAny ideas anyone?\n\nEdit:\nOpened up a new issue for the hanging as it is separate from the original issue topic of this thread.\nNew issue: https://github.com/garris/BackstopJS/issues/682. @iain17 Here it is:\n```\nmodule.exports = function (options) {\n    'use strict';\nvar styleguideFiles = [\n    'patterns/section-1.html',\n    'patterns/section-2.html',\n    'patterns/section-3.html',\n    'patterns/section-4.html',\n    'patterns/section-5.html',\n    'patterns/section-6.html',\n    'patterns/section-7.html',\n    'patterns/section-8.html',\n    'patterns/section-9.html',\n    'patterns/section-10.html',\n    'patterns/section-11.html',\n    'patterns/section-12.html',\n    'patterns/section-13.html',\n    'patterns/section-14.html',\n    'patterns/section-15.html',\n    'patterns/section-16.html',\n    'patterns/section-17.html',\n    'patterns/section-18.html',\n    'patterns/section-100.html',\n\n    'modules/section-1.html',\n    'modules/section-2.html',\n    'modules/section-3.html',\n    'modules/section-4.html',\n    'modules/section-5.html',\n    'modules/section-6.html',\n    'modules/section-7.html',\n    'modules/section-8.html',\n    'modules/section-9.html',\n    'modules/section-10.html',\n    'modules/section-11.html',\n    'modules/section-12.html',\n    'modules/section-13.html',\n    'modules/section-14.html',\n    'modules/section-15.html',\n    'modules/section-16.html',\n    'modules/section-17.html',\n    'modules/section-18.html',\n    'modules/section-19.html',\n    'modules/section-20.html',\n    'modules/section-21.html',\n    'modules/section-22.html',\n    'modules/section-23.html',\n    'modules/section-24.html',\n\n    'themes/section-1.html',\n    'themes/section-2.html'\n];\n\nvar scenariosArray = [];\n\nfor (var i=0; i<styleguideFiles.length; ++i) {\n    scenariosArray.push(\n        {\n            'label': styleguideFiles[i].slice(0, -5).replace('/', '_'),\n            'cookiePath': 'backstop_data/engine_scripts/cookies.json',\n            'url': options.url + styleguideFiles[i],\n            'referenceUrl': '',\n            'readyEvent': '',\n            'readySelector': '',\n            'delay': 0,\n            'hideSelectors': ['.js-phantomcss-hide'],\n            'removeSelectors': [],\n            'hoverSelector': '',\n            'clickSelector': '',\n            'postInteractionWait': '',\n            'selectors': ['.js-phantomcss-capture'],\n            'selectorExpansion': true,\n            'misMatchThreshold': 0.1,\n            'requireSameDimensions': true\n        }\n    );\n}\n\nvar report = [];\n\nswitch (options.env) {\n    case 'development':\n        report = ['browser'];\n        break;\n    case 'sit':\n        report = ['CI'];\n        break;\n    default:\n        report = [];\n        break;\n}\n\nreturn {\n    'id': 'Styleguide',\n    'viewports': [\n        {\n            'label': 'jelly',\n            'width': 320,\n            'height': 480\n        },\n        {\n            'label': 'custard',\n            'width': 600,\n            'height': 960\n        },\n        {\n            'label': 'cream',\n            'width': 1008,\n            'height': 1920\n        },\n        {\n            'label': 'sprinkles',\n            'width': 1366,\n            'height': 2048\n        }\n    ],\n    'onBeforeScript': 'chromy/onBefore.js',\n    'onReadyScript': 'chromy/onReady.js',\n    'scenarios': scenariosArray,\n    'paths': {\n        'bitmaps_reference': 'tests/visual/backstop_data/bitmaps_reference',\n        'bitmaps_test': 'tests/visual/backstop_data/bitmaps_test',\n        'engine_scripts': 'tests/visual/backstop_data/engine_scripts',\n        'html_report': 'tests/visual/backstop_data/html_report',\n        'ci_report': 'tests/visual/backstop_data/ci_report'\n    },\n    'report': report,\n    'engine': 'chrome',\n    'engineFlags': [],\n    'asyncCaptureLimit': 10,\n    'asyncCompareLimit': 100,\n    'debug': false,\n    'debugWindow': false\n};\n\n};\nYes it is parametarised, but even if I hardcode the \"options\" values it still does not work with docker, but works on the locally installed backstop .... @garris and @iain17 so I have been doing step by step changes to the default config to bring it closer to the config I want to use. I have managed to pinpoint the error happening when I changemodule.exports = {...};tomodule.exports = function (options) { return {...}; }``` which is something similar to what is done here: https://github.com/garris/BackstopJS/blob/master/examples/nodeIntegration/backstop.config.js\nIs this not the right way to devine it if I want it to take argument (options)?\nAnother question - if I want to pass arguments to the config like I have done in the example in the previous post, how do I express that in a docker command (docker run --rm -v $(pwd):/src backstopjs/backstopjs test --config=backstop.config.js). Would it be something like: docker run --rm -v $(pwd):/src backstopjs/backstopjs test --config=backstop.config.js -options={...}.\nIs this at all possible?. I have parked this one for a while, now getting back to it.\nCouldn't make any of these options work. I am basically trying to make the config file take as value (option) the environment it's in so it can run the tests against the correct URL. Only feasible solution I can come up with is creating separate config files for the different environments and then use --config= to specify the config.\nOh I am also working with Grunt task runner. So I will have to use something like grunt-exec to execute the docker run command with all its options together with the config file name.\nDoes that seem like a sensible solution? It's not ideal, but I can't think of a better way. I don't know much about docker.. I have finally managed to string things together from your last message. It does work as you have suggested. Thank you very much for your help @garris :D. @garris @iain17 sorry to be such an annoyance, but do you guys have any input into this?\nHave been trying to make this work for weeks now and I am on my way to give up.. @garris Thanks for your response.\nI think I might have explained it in an ambiguous way. When backstop is executed we do expect chrome processes to be started when a snapshot of the page is taken very quickly and then the chrome process is closed - all this should happen within a second and this is the expected behaviour. The odd behaviour is that some of the chrome processes just stay on forever. This issue happens intermittently, so it could be a memory thing - will investigate that.\nConcerning the other issue #679 I have posted my config.js file in the other issue for you guys to have a look. I have already been trying what you suggested with the config file, that is how I discovered the issue of hanging in docker. Will continue on this path as you suggested to find out what I've done wrong. But I'm still dubious how would my config file work without a problem on locally installed bacstop, but not work with docker... will try again tomorrow.\nThanks again.. Yup the hang was totally cause by this memory issue, thanks for that. I guess it's my fault for not reading the readme properly .... @krisdigital great many thanks for your contribution kind sir. Can't wait to try it out myself!. Just trying puppeteer out in v3.2.3 on a docker setup and got an error:\n```\nBackstopJS v3.2.3\nLoading config:  /src/backstop.config.js \nCOMMAND | Executing core for test\ncreateBitmaps | Selected 45 of 45 scenarios.\n      COMMAND | Command test ended with an error after [0.06s]\n      COMMAND | Error: Failed to launch chrome!\n                [0406/123126.823853:ERROR:zygote_host_impl_linux.cc(88)] Running as root without --no-sandbox is not supported. See https://crbug.com/638180.\n            TROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\n\n                at onClose (/usr/local/lib/node_modules/backstopjs/node_modules/puppeteer/lib/Launcher.js:246:14)\n                at Interface.helper.addEventListener (/usr/local/lib/node_modules/backstopjs/node_modules/puppeteer/lib/Launcher.js:235:50)\n                at emitNone (events.js:110:20)\n                at Interface.emit (events.js:207:7)\n                at Interface.close (readline.js:367:8)\n                at Socket.onend (readline.js:147:10)\n                at emitNone (events.js:110:20)\n                at Socket.emit (events.js:207:7)\n                at endReadableNT (_stream_readable.js:1059:12)\n                at _combinedTickCallback (internal/process/next_tick.js:138:11)\n\n\n\nExited with code: 1.\nError executing child process: Error: Process exited with code 1.\n\n\n```\nAnyone experiencing the same?. @krisdigital Just pulled the latest commit to try out the PR you linked above, but it didn't work for me, absolutely no change at all. I still get that same error. And I rebuild the docker image as well and followed the documentation from the readme.\nFYI @VesterDe. @VesterDe Yes I did indeed include that exact line in my config. \ud83d\ude1e . Cool.\nUpdate from me - I finally had time to make backstop run with puppeteer, but most of my scenarios now fail for two reasons.\nFor some reason the font renders differently now, which shouldn't be possible if I am running a docker container with consistent versions.\n\nThe second and bigger issue us that for most scenarios the captured test image is just grey, nothing else on it. Naturally it detects close to 100% difference.\n\nSo far I have tried adding a delay to each scenario also tried with 'asyncCaptureLimit': 1\nCouldn't see any other issues posted with this same problem.\nAny suggestions?. Not sure, but I think it's just grey image of the same size as the reference. I have spotted some of the tests images are half captured and half grey. I have one example where the test capture is of an area slightly above the intended selector...\nI am also getting this error at the very start:\n```\n\n\n(node:1) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 exit listeners added. Use emitter.setMaxListeners() to increase limit\n```\n\n\nAnd this error on a couple scenarios where the test image is completely missing:\nENGINE ERROR: Navigation Timeout Exceeded: 60000ms exceeded\nI guess am not switching to puppeteer just yet. I was really hoping this to work because it doesn't randomly hang executions as chromy does and is faster \ud83d\ude22 . @garris is it OK to move puppeteer to 1.1.1  as it is more stable? I can test and make a pull request.. @garris Sadly version 1.4.0 still exhibits the same bug. Some test images are blank some are partially captured. Will try with 1.1.1 next\nUpdate: Weirdly v1.1.1 has the exact same problem. Maybe puppeteer is not the problem here \ud83d\ude2d . @garris could you point me to the file I need to the change in and I'll try to tests this as soon as I have some spare time.. @VesterDe I have been doing some debugging of my own and I managed to reproduce the same results as you, but in my case I get the empty screenshots even for entries that do not have the decimals in their boundingBox object. I think the issue is caused by something else.\n@garris I am testing a bug fix for this and will be making a pull request shortly. I have basically done what you suggested, but without rounding the numbers and it worked.. My pull request https://github.com/garris/BackstopJS/pull/808. Update:\nRunning backstop outside of docker with the same version of Chrome seem to work apart from all the test failing because I am running them in a different OS (rendering discrepancies).\n@garris running version 3.1.19. I have been playing with settings for docker and backstop and managed to get the tests working if I lower the asyncCaptureLimit. For some reason when I set it to 10 it hangs the executions in docker, but if I set it to 5 it runs fine... Any clue why? could be the docker container lacking resources to run at a higher asyncCaptureLimit, maybe?. @garris do you think this issue will improve with a move to puppeteer or is not related?. @garris would this be considered as part of the puppeteer integration that was recently done?. My personal opinion is that this feature might be useful, but it's trying to solve a problem by avoiding it. Furthermore, if you are using deployment tools such a Jenkins you can set up your retry functionality there.. Have a look at https://github.com/garris/BackstopJS/issues/704. @garris Here is a PDF only containing the failed tests, because the full output of the tests was producing a 30MB PDF which github didn't like.\nscreencapture-file-Users-vladaltanov-Projects-BackstopJS-test-configs-backstop_data-html_report-index-html-2018-06-21-10_16_14.pdf\n@matthew-dean I haven't tested it with vh, sorry.\nGood to hear positive feedback guys. I am happy it worked for others as well.. @garris thoughts about the test results? Do you need the complete test results? I can try to divide them into 3 parts to be able to attach them here.. @garris I will try to address all of you requests today.. I will try to explain in detail what the issue us and what this PR is trying to fix:\nMy backstopjs tests run against a styleguide of the site I am working on. The styleguide contains multiple pages and on each page there are multiple sections that contain modules or patterns used in the site. When I run backstopjs I am providing the selector for those sections. Which means that backstopjs will have to make separate screenshots for each of the sections on a page in 4 different breakpoints this means that backstop can produce 30 screenshots per page.\nIf I run backstopjs without this fix it usually starts off with creating correct screenshots for the first 6 or 7ish sections then there is a single screenshot which only partially captures the section then every screenshot onwards is just a grey box (which is the background colour of body of the page). Here is the example I posted in #704 : \nhttps://user-images.githubusercontent.com/1981415/38935817-31655dc2-4317-11e8-82ce-c9b6d3c51123.png\nHere is another example of a complete test of one of the pages in out styleguide:\nBackstopJS Report2.pdf\nWRT to your \"I have been having the opposite problem\" issue from your screenshot I can see that the TEST image is taken from a page that is slightly different than what the REFERENCE. Looks like the \"Reports to\" section is new and that has not been captured in the original REFERENCE image. And the blue label at the top of the TEST image seems to be a \"debug panel\" which might have been mistakenly enabled when you were running the tests.\nHere is a printed PDF of the full smoke tests as you requested:\nBackstopJS Report.pdf\nnpm - v4.2.0\nnode - v7.8.0\nThis issue happened both on OSX and in docker as well - exactly the same broken results.\nRam on my mac is 16GB on the docker instance is automatic I think so it takes whatever it needs from the host system.\n@garris have I cover everything? Let me know if you need anything else.. @garris \n\nChrome obviously does not render items that are offscreen. This would explain why some of your images render correctly, some are cut off (presumably where the scroll border intersects the images), and the rest don't render at all. This would explain why your solution fixes the issue -- because you force a fullscreen render then scope down by cropping.\n\nTo your comment - I am not convinced that this is what is causing it. My tests start off from a mobile sized screen and then get to tablet and desktop sizes. For the mobile screen size which I have defined width and height in the backstop config, the size of the screen is tiny the height of the rendered screen would simply not fit all of the screenshots that are taken correctly. If your theory was correct it should have started failing after the first two successful screenshots, in the mobile instance of the test run.\nI will try changing the size of the viewport and see if that affects the results.\n\nThe issue for me is that both fixes have side effects which need to be addressed before we can release. I like your approach because it does not change state. But there is clearly an unexpected geometry issue -- and -- there is a report that we may also have a perf issue.\n\nThe only issue I can see from your tests results is that your TEST image contains a blue button/label that you can see in the original REFERENCE image. I am assuming that this is not expected. \n\nAlso -- perhaps the vertical offset I am seeing is due to box-model -- i.e. I suspect there are inner element margin overflows etc. which are affecting the boundingBox values. I will check this later today.\n\nThe selector class that you have used to target that specific section of the page, does it have any positioning or negative margins that might have resulted in this cropped image?\nIn terms of performance I don't really know if it would be a problem. Only thing I know is that the el.screenshot() uses page.screenshot() underneath as well. I can run the tests with and without my fix to compare run times and will update this post when I'm done.. @garris \nFeels like it's best to loop in the creator of the puppeteer runner as well - @krisdigital \nSo following your comments, I have tested a few things and here are my findings:\n- (without my fix) If I increase the viewport height to something ridiculous like 9600 in the backstopjs config the issue of blank screenshots disappears. (this must be forcing more of the page to render in one go, before having to scroll to an element)\n- I have compared the run times for with and without the fix to see if there are any performance issues - I have found no significant change in speed. Both methods finish in about the same time.\n  - with the fix - Command test ended with an error after [25.998s], [26.839s] , [23.348s]\n  - without the fix - Command test ended with an error after [26.31s] , [26.967s], [27.185s]\nBased on the above I can say that there definitely is something weird with element.screenshot(). From its official documentation element.screenshot() is supposed to scroll to the element and then take a screenshot. This however does not happen as you would expect. It may be the case that the element is not yet rendered at the location where it scrolls to and takes screenshot of a blank space and then the element is rendered.\npage.screenshot() probably (as you've suggested) forces rendering - I am not sure if it's for the entire page or just the clip section of the page, the documentation is not clear on that.\nI have also tried to incorporate the solution for scrolling (#765) before element.screenshot(). It made the results a bit worse actually. I still get the blank screenshots, but now some of the once that were successful are weirdly cropped. BackstopJS Report3.pdf\nAny thoughts @garris ? I am really trying to get this fix or any fix through so I can return my visual tests to their place in the deployment pipeline. Cromy just doesn't cut it anymore.\nAny updates about:\n\nAlso -- perhaps the vertical offset I am seeing is due to box-model -- i.e. I suspect there are inner element margin overflows etc. which are affecting the boundingBox values. I will check this later today.. @garris I am not sure if it's an issue with puppeteer or we are not using the function in it's intended way. Either way I can try and post an issue of this in puppeteer, if I get any spare time. I have already put in too much time into this.\n\nI can work with it from a beta version sure, but the problem is that the docker image is pointing to the latest version, so even if I pull the beta version and build the docker image, it will still pull the latest backstopjs version instead of the beta version. If you can help with that it would be great. Otherwise I will have somehow edit where the docker image is pulling from and commit it into my own fork and work from that.. @garris that sounds like a plan. I greatly appreciate your flexibility and willingness to help. I will get on it as soon as I can. Thanks again!. @pkra no, sorry. I have been crazy busy at work. I can guarantee when I will be doing it, but I am definitely doing it.. For anyone interested in this solution. There is a new PR here: https://github.com/garris/BackstopJS/pull/901. I have just tested this and had no luck. Here is what I get:\n```\nBackstopJS v3.5.9\nLoading config:  /Users/vladaltanov/Projects/itvplayer-browser/backstopJS.config.js \nCOMMAND | Executing core for \"test\"\ncreateBitmaps | Selected 45 of 45 scenarios.\nmodule.js:491\n    throw err;\n    ^\nError: Cannot find module 'portfinder'\n    at Function.Module._resolveFilename (module.js:489:15)\n    at Function.Module._load (module.js:439:25)\n    at Module.require (module.js:517:17)\n    at require (internal/module.js:11:18)\n    at Object. (/Users/vladaltanov/Projects/itvplayer-browser/node_modules/backstopjs/core/util/getFreePorts.js:1:82)\n    at Module._compile (module.js:573:30)\n    at Object.Module._extensions..js (module.js:584:10)\n    at Module.load (module.js:507:32)\n    at tryModuleLoad (module.js:470:12)\n    at Function.Module._load (module.js:462:3)\n```\nThis is not even using docker.. Will try that first thing tomorrow when I'm back at the office. . HI @garris this is one of my colleagues finishing the PR I started months ago. As previously discussed this wraps the fix in a feature flag so it doesn't break any of you existing tests until you have the time to look into it in depth. This should enable us to run backstop in our CI pipeline in the meantime. Thank you again! Let us know if you's like us to make any changes to the PR.. Thank you very much! . Ok would that beta version also work for Docker? Would Docker be pointed to that beta version specifically or would it only work with the latest backstop version?. We have tested this and it doesn't work in docker. It works just fine when it's not run in docker. I suspect that the docker image still pulls the latest version of backstop and ignores the beta branch.. Thanks for that, will get back to you tomorrow!. Everything has been tested and works as expected on the beta version with or without docker. Would you be able to give us an estimate of when you'll be able to make an official release of this?. ",
    "Prady200": "Still dint work out for me but able to manage the cert issues resolved with:\n\"engine\": \"puppeteer\". ",
    "cmachemer73": "Interestingly, it hangs locally, but I pushed the branch with the upgrade on it to our git, and bamboo built it, and it didn't hang.  So the fact that it hangs on my Mac laptop is mildly annoying, what's really important is that the builds finish, which they do.  So I'll close this ticket.  Thanks for responding.  Also we're running it using yarn, just fyi.. ",
    "joshsmith01": "Lowering the \"asyncCaptureLimit\" from the default 10 to 2 seems to help. ",
    "wojtekmaj": "@garris,\nin your case update should be pretty quick. Adding mode in Webpack config should be enough for you to make use of Webpack 4.x.. ",
    "acchou": "Here's an example backstop.json demonstrating the problem. This references an SVG on wikipedia commons:\n{\n    \"id\": \"backstop_default\",\n    \"viewports\": [\n        {\n            \"label\": \"tablet\",\n            \"width\": 1024,\n            \"height\": 768\n        }\n    ],\n    \"onBeforeScript\": \"chromy/onBefore.js\",\n    \"onReadyScript\": \"chromy/onReady.js\",\n    \"scenarios\": [\n        {\n            \"label\": \"text-1\",\n            \"url\": \"https://upload.wikimedia.org/wikipedia/commons/8/89/Dog.svg\",\n            \"referenceUrl\": \"\",\n            \"readyEvent\": \"\",\n            \"readySelector\": \"svg\",\n            \"delay\": 0,\n            \"hideSelectors\": [],\n            \"removeSelectors\": [],\n            \"hoverSelector\": \"\",\n            \"clickSelector\": \"\",\n            \"postInteractionWait\": \"\",\n            \"selectors\": [\"svg\"],\n            \"selectorExpansion\": false,\n            \"misMatchThreshold\": 0.1,\n            \"requireSameDimensions\": true\n        }\n    ],\n    \"paths\": {\n        \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n        \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n        \"engine_scripts\": \"backstop_data/engine_scripts\",\n        \"html_report\": \"backstop_data/html_report\",\n        \"ci_report\": \"backstop_data/ci_report\"\n    },\n    \"report\": [\"browser\"],\n    \"engine\": \"chrome\",\n    \"engineFlags\": [],\n    \"asyncCaptureLimit\": 5,\n    \"asyncCompareLimit\": 50,\n    \"debug\": false,\n    \"debugWindow\": true\n}\n . ",
    "heaven1025": "today, I download the chrome-plugin recommended by author , Export cookie data from chrome and paste to cookie.json. \n\n[\n  {\n    \"domain\": \"127.0.0.1\",\n    \"hostOnly\": true,\n    \"httpOnly\": true,\n    \"name\": \"JSESSIONID\",\n    \"path\": \"/manager\",\n    \"sameSite\": \"no_restriction\",\n    \"secure\": false,\n    \"session\": true,\n    \"storeId\": \"0\",\n    \"value\": \"6F20B6A9DE53526B32DC20A5AAB90277\",\n    \"id\": 1\n  }\n]\n\nthen, execute \"backstop reference\" to generate reference bitmap, but it still notice to input username and password.....\nplease help me~\n. @Kenith  thanks for help at first!! And it works successfully after changing \"https\" to \"http\" protocol.\nThanks very much~\nBut I want to know reasons, is user authentication specified by the Chrome browser?.  thanks @Kenith  again~, close question. ",
    "silentHoo": "@alucardu Is your CSS really making you problems? I've a similar issue with hovering and can't figure out if there's any strange bug in my codebase or Chromy is the problem here.\nPS: I use Stencil components (https://github.com/ionic-team/stencil) which are lazy loaded after page load. But any change in postInteractionWait or delay doesn't change anything here. Do you have a solution now?. Ah snap! I removed accidentally\n\"onBeforeScript\": \"chromy/onBefore.js\",\n\"onReadyScript\": \"chromy/onReady.js\",\nSorry, my fault. Now it works \ud83d\udc4d . I've added the implementation for casper and puppet but it's not yet tested because lack of time atm. Could anyone test the code? Best regards.. The problem was, that I ran the command \ndocker run --rm -v ${PWD}/backstop.json:/src/backstop.json -v ${PWD}/backstop_data/:/src/backstop_data/ backstopjs/backstopjs:v3.1.21 test\nwithin the script: section of the .gitlab-ci.yml.\nThis doesn't work in Gitlab CI. Instead I switched to use backstopjs/backstopjs as the base image for my stage and overwrite the entrypoint to start backstop in script::\ntest-visual:\n  stage: test\n  image:\n    name: backstopjs/backstopjs:v3.1.21\n    entrypoint: [\"\"]\n  script:\n    - backstop test\nSo this was not an issue with your docker image, rather than how I configured my .gitlab-ci.yml.. I've already run that backstop reference command over interactive move (-it) in Docker. The output is the same as if I run that command on my host. Nothing special except that files are not written.. @Kenith Thanks for your suggestions. The problem in my config is related to my backstop.json. I defined localhost which obviously doesn't work in the container. So the image were deleted, but never re-created again. So I close this issue.. ",
    "vivekbwaj": "@alucardu Did you come across a solution? I can see the hover text in debugWindow, however screenshots do not capture it. @garris Would you be able to have a look into this one too?. Sure,I will give it a go.But any insight on the second part\n\"hideSelectors\":[\"div.cb-carousel\",\"#logo\"],\njust hides the second selector\nMultiple selectors not getting hidden.From the array, just the last one gets hidden. yeah looks like it. Thanks @garris \nwaiting for an update ;). I am sure you wouldn't need but these might help\nhttps://stackoverflow.com/questions/15368072/why-is-last-element-of-an-array-only-being-populated-for-onclick-in-javascript\nhttps://stackoverflow.com/questions/7004619/javascript-only-sets-attribute-for-last-item-in-array. maybe try this way?\n\"hideSelectors\":[\"button[title=\\\"Greyhound\\\"]\",\"div.cb-carousel\"],\nit works but I think it should be in sync with the syntax when casperjs/phantomjs is used.For me it works fine without the . Awesome, thanks @garris . Hi @garris just wondering if this can be done sooner. Many of our test fail due to this one. Thanks @garris .Works fine on update. Yes\nYou can refer to this https://www.metaltoad.com/blog/backstopjs-part-deux-javascript-config-and-makefile\nHowever, I did it a bit differently by using npm scripts instead of makefile.But this blog can give you a good idea.. ",
    "jalbr74": "I just barely found this thread, so I thought I'd add my observations.\nI've been having this issue as well.  No matter what delays I put in, the hover behavior for my components never get captured in the screenshot.  So I did as @garris suggested, and set \"debugWindow\": true, and added delays wherever I could.\nThe behavior I observed was the page would come up in the browser as expected, and then wait 2 seconds.  Then my element received the hover action, and that looked the way I wanted.  Then two seconds later, everything except for the element I specified in the \"selectors\" array disappeared, and in that same instant the hover action reverted back and the screenshot was taken.  This leads me to believe the problem has something to do with using the \"selectors\" setting with the \"hoverSelector\" setting in my scenario.\nI've verified that if I stop using the \"selectors\" setting, and always take snapshots of the entire document, I don't have any problems with capturing the hover behavior of any of my components.\nI just wanted to pass this along, in case anyone else is having similar problems and comes across this thread.\n. ",
    "testingplusme": "I think you should add  \"referenceUrl\": \"referenceUrl\", in each scenario where you want to compare in different env :). It can be after \"url\":\"url\".. SlimerJS works when I ran it with a script. It looks like that BackStopJS has a problem with the run when SlimerJS is chosen as the engine.\n\nDo you have any idea? How to resolve it? . @garris Did you have time to look at?. ",
    "longstaff": "Dev dependency will make sure that there isnt more than one version of react being passed around, as currently it is installing multiple as they are hard dependencies, then getting confused when it isnt the version that its expecting.\nCurrent problem: Backstop is installing locally (node_modules/backstopjs/node_modules) v15 of react. after its init is complete with global bools of 'is this react16 = false' we are then passing react16 at runtime, so it is calling an old function which breaks.\nMaking this a peerDependency means that backstopjs will respect the version already installed and wont install its own version, therefore consistency is maintained.\nAdded pull request for this issue here: #748 . @garris peerDependency is expected to be installed separately (you should have gotten an error in your npm install that you have a missing peerDependency on react) which will mean that for people using your plugin their local system should have a dependency on react. When you are runnning local dev you would have to install it separately, or we can add it to devDependencies as well. \nFor simplicities sake ive opened #768 that adds both the peer dependency and the dev dependency which should support both modes of working (local dev and compiled without react bundled). ",
    "visionmonster": "I think you would want all of the react / webpack code as a devDependencies sections. I think this would hold for any dependency that only applies to generating the compare/output code.\nfrom the npm docs:\nhttps://docs.npmjs.com/files/package.json#devdependencies\n\nIf someone is planning on downloading and using your module in their program, then they probably don't want or need to download and build the external test or documentation framework that you use\nIn this case, it's best to map these additional items in a devDependencies object.\n\nIt's fine to have it as a dependency if it's an application, but I think the trouble comes from using it as a Module especially with react.\nfantastic library by the way.\nI think this is the dependency structure you are looking for\nhttps://github.com/garris/BackstopJS/pull/813. Does this structure for dependencies work for you? If it does, do you know when it might be pulled in? Just looking for a time frame to tell my people. Let me know if you have questions. This is a great package.. sure, so what I was running into is I am trying to run BackstopJS as a gulp task, however, in the project I am working on I can't be sure other developers will have BackstopJS installed globally. So when you do an npm install backstopjs --save-dev this makes BackstopJS a dev dependency. Our project won't ship with Backstop, just like it won't ship with our unit tests.\nFor example in BackstopJS in order to get the console to log out in color, Chalk is required.  If Chalk wasn't in the \"dependencies\" list Backstop wouldn't be able to run because the package  would be missing. \nIf you want to run just the testing portion of Backstop you don't need React, since React has already been flattened and is hanging out, bundled by web pack, in the backstopjs/compare/src folder\na quick example of the two different package.json files:\nmkdir test-current\ncd test-current\nnpm init\njust hit enter until it's done creating a new project.\nnpm install backstopjs --save-dev\nnpm will do it's thing and let you know a few things as well and should finish with something like:\nnpm notice created a lockfile as package-lock.json. You should commit this file.\nnpm WARN backstopjs@3.5.2 requires a peer of react-dom@^15.6.1 but none is installed. You must install peer dependencies yourself.\nnpm WARN react-modal@3.5.1 requires a peer of react-dom@^0.14.0 || ^15.0.0 || ^16 but none is installed. You must install peer dependencies yourself.\nnpm WARN react-sticky@6.0.3 requires a peer of react-dom@>=15 but none is installed. You must install peer dependencies yourself.\nnpm WARN ajv-keywords@3.2.0 requires a peer of ajv@^6.0.0 but none is installed. You must install peer dependencies yourself.\nnpm WARN test@1.0.0 No repository field.\nif you checkout your test-install/node_modules folder, you would see something like react , react-lifecycles-compat, etc\nbut you would still be able to run Backstop as a visual regression testing tool. \nfrom your test-current folder:\nnode ./node_modules/backstopjs/cli/index.js reference --config=node_modules/backstopjs/test/configs/backstop\nnode ./node_modules/backstopjs/cli/index.js test --config=node_modules/backstopjs/test/configs/backstop\nNow lets try out the proposed configuration:\nmkdir test-proposed\ncd test-proposed\nnpm init\nagain, just hit enter until it's done creating a new project.\nnpm install git+https://github.com/visionmonster/BackstopJS.git --save-dev\nagain npm will do it's thing and let you know a few things as well but this time finishes with something like:\n```\nnpm WARN test-proposed@1.0.0 No description\nnpm WARN test-proposed@1.0.0 No repository field.\n\nbackstopjs@3.5.2\n```\nThis time if you look at your test-proposed/node_modules you won't have any react packages.\n\nyou can still run backstop from your test-proposed directory:\nnode ./node_modules/backstopjs/cli/index.js reference --config=node_modules/backstopjs/test/configs/backstop\nnode ./node_modules/backstopjs/cli/index.js test --config=node_modules/backstopjs/test/configs/backstop\nThe difference being if I now run npm install react --save-dev from my test-proposed directory I can successfully install + react@16.4.1 with no conflicts with BackstopJS, since those files are already bundled.\nbut if try that on test-install I get a warning that says: backstopjs@3.5.2 requires a peer of react@^15.6.1 even though i have react@16.4.1 installed.\nFor this scenario I'm not doing development work on BackstopJS, so i don't need the React libraries, but I am trying to use as part of my suite of testing tools, like eslint and Tape tests.\nThe proposed package.json would still allow you to develop BackboneJS, you can clone the repo and run npm install and all the react packages will be included, since they are required to run the \"build-and-copy-report-bundle\" task\nfrom the npm docs:\nhttps://docs.npmjs.com/files/package.json#devdependencies\n\nIf someone is planning on downloading and using your module in their program, then they probably don't want or need to download and build the external test or documentation framework that you use\nIn this case, it's best to map these additional items in a devDependencies object.\n\nsome more good reading:\nhttps://stackoverflow.com/questions/22891211/what-is-the-difference-between-save-and-save-dev\nIt wasn't until I ran into this with an electron project I was working on that I started to understand what was going on.  But I had it in reverse, where everything I had was in devDependencies and those packages don't get bundled in the electron application.\nI think the project like https://github.com/jparkerweb/bivariate doesn't have any need for React, since it's entirely command line driven. \nLet me know if you would like any more detail or have any more questions. \nI appreciate you taking the time to follow up.\n--Matt\n. @garris How do these examples work for you? Do you have any more questions about what is trying to be solved? Thanks!. ",
    "krisdigital": "@garris Thank's for the tip.  Already did the test with asyncCaptureLimit: 0 and wondered, but it worked \ud83d\ude2c Got 100/105 screens, one waitTimeout and 4 goto timeout errors, all happening in the second half. I also noticed that with my port fix from above, different ports are used after a crash.\nI will try to rule out my scenarios by screenshotting a different webpage.\nSo you say it is working reliable for you?. Update: With a concurrency of 10 and shooting google.com 105 times I still got 100/105 without any error messages. Not sure if chromy is not reporting the errors or there is just no BackstopException fired.. Thank's @Kenith and @garris! I did some more testing and noticed that for some sites it works flawlessly even with ten concurrent workers. With the setting asyncCaptureLimit: 1 it works for all environments. So now I think that it does not have anything to do with backstop itself but maybe it is some flood/dos protection kicking in. I cannot say that the sites that are working with more processes are less complex and resources cannot be the issue. Will have to look deeper into it.... @garris I tried really hard but had all kinds of trouble, wrong window size, missing screenshots and what not. I integrated Puppeteer just to see if it improves things and it  [worked flawlessly right of the bat] (https://github.com/krisdigital/BackstopJS/commit/b4213d93cc482cd6789f341445571359ef177046) \ud83d\udcaf It is also much faster.. @garris \ud83d\ude05Actually it was really easy so far and I could reuse many things, the only feature that is missing is screenshotting a selector different from viewport or document. As we are using it now I will make it stable so that it is a solid base for others to improve on. Do you think chromy and puppeteer should co-exist? Would be no big deal technically.... @garris All right, I will try to get the selector screenshots running and to make Puppeteer and Chromy coexist to get it to a 'near release' status! Thank's for the coordination and if you need a AU Plugin let me know \ud83d\ude1c. @cactusa actually you can already try it, checkout the branch \"puppeteer\" in this repository... Hello to all potential puppet players!\nHere is a little road map for all who want to try it out or even contribute. In general, for me it works much more reliable and it is also faster.\n\n[x] Screnshots for viewport and document\n[x] Engine scripts onBefore and onReady, loadCookies and clickAndHover\n[x] ReadyEvent, readySelector, hide- and removeSelectors\n[x] Screenshots of selectors, selectorExpansion\n[x] let Puppeteer and Chromy coexist\n[x] start clean up by pulling common functions between Chromy and Puppeteer in a separate module\n[ ] more cleanup and testing\n\nTake it for a spin an let me know what you think \ud83d\ude80. @matthiaskomarek do you get a different behavior using Chromy in the stable branch? Not sure if it has something to do with Puppeteer... @AkA84 Both true, did not implement the debugWindow option, but it is not a problem to do... I never could find any use for the debug option though, as it throws just too much text out, I think it only makes sense if you have no debugWindow option like phantomJS.. https://github.com/garris/BackstopJS/pull/713. @matthiaskomarek Thank's for checking, I will look into it!. @iain17 The current behaviour with new browser instances mirrors the behaviour of Chromy. Opening a tab is probably more ressource friendly, see this discussion: https://github.com/GoogleChrome/puppeteer/issues/85\nMaybe it could be provided as an option for users who do not need a new session for each scenario, afaik this would be also possible with Chromy.. @garris @matthiaskomarek Just made a pull request that should handle that problem https://github.com/garris/BackstopJS/pull/718. \ud83c\udf89\ud83c\udf7e\ud83c\udf7b. @cactusa see the link in the error: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md, especially the sandbox section, also this PR https://github.com/garris/BackstopJS/pull/722. @garris This seems to be a known issue https://github.com/GoogleChrome/puppeteer/issues/1814 .... @VesterDe Great debugging! Maybe the Puppeteer version should be locked to 1.1.1 until the bug is fixed then... @JamyGolden Maybe this helps: https://github.com/GoogleChrome/puppeteer/issues/316. @garris I think I fixed them? https://github.com/garris/BackstopJS/pull/713. @garris Aahhhh, now I remember seeing these images! Should be a small fix!. @garris It should work now! The new images are way cooler \ud83d\ude0e https://github.com/garris/BackstopJS/pull/718. Wohoooooo!!. @deap82 You can setup device emulation in your before script, there you get the page object. Did not try but should work... @deap82 Has nothing to do with Puppeteer itself, you can add an option for it if you like: https://github.com/garris/BackstopJS/blob/master/core/util/runPuppet.js#L73. @deap82 Thinking about it again I am not sure if it makes sense as an option, and you would have to add it to the other engines, too.. You also could remove all 'console' listeners in your before script and add your own version for it... @deap82 I think the page inherits from https://nodejs.org/api/events.html so you should be able to use the functions listed there to unsubscribe from all 'console' events.\nScreenshots from selectors is a core puppeteer function so I wonder why it could go wrong. Maybe try some delay?\n. @garris With this PR it should behave like Chromy + the error messages... @AkA84 @garris I think that error was introduced here https://github.com/garris/BackstopJS/commit/ddce7a5b23e2ace7d8d06c412a88ae889e7c50b5#diff-2b0d3e4bf62b40b86f9b984a5f9003ecR252. it is actually the same result.. If the puppeteer commands fail the result is empty and this was the best I could come up with without refactoring too much.. \ud83d\udee0. done!. the reason is that I copy pasted it from the chromy script \ud83d\ude1c. Looks counterintuitive, but reject won't work here because then p-map will stop immediately.. ",
    "jamiesanger": "Thanks @garris - Apologies, I didn't see the Sanity test in the README.\nI can get backstopjs to run perfectly fine via Command line/Terminal - all works as prescribed (and very very well indeed).  My issue is now with webpack and backstopjs is when I try and 'require' it. I am essentially trying to build a rudimentary HTML interface for collecting variables like paths, viewports and other configuration options to initialise the references, tests etc.\nWhen I use .require('backstopjs') it seems as though the 'fs' is no longer optional and is throwing errors when trying to build.\nAny ideas? Is there a substitute for 'fs' I can try and implement that you are aware of? Im feeling stuck and do not have access to linux/Mac at present (which I assume 'fs' is used for)\nThanks for your help!\nEDIT: Digging through, it seems that when using require('backstopjs') , /node_modules/backstopjs/core/command/index.js is trying to access __dirname but it is undefined. Specifying it to __dirname = path.resolve() (or __dirname = path.dirname()) results in a relative reference (__dirname = \"/\") which then cant locate the other commands (in ~/command). Does this resolve differently on Mac/Linux?\ntldr: Why am I trying to run this on local host? I want to eventually host this on a server for me to access from any environment via http(s) and run, rather than having to be installed locally/offline - keeping the storage server side rather than local machine. I understand the bandwidth issues with a large compare but will be doing it frequently enough to not want it stored locally.\n. Thanks @garris - this is very much the way I want to go with it. Thanks for your help!!. ",
    "Aeotrin": "Works for me :) NOTE: the engine needs to be puppet\nNode version requirement of > v8 as well.\nThis also fixed the issue of a white screenshot  I was having when running against a local (.local or .dev) domain #706 .\n. I updated to the puppeteer release (beta release) and used puppet as my engine. It is working for me (i was previously having this problem) NOTE: you need to have a node version > 8.\nMight want to check if node version is a culprit of this issue.. ",
    "VesterDe": "@cactusa Hey, did you also include the engineOptions to your config file?\nSpecifically, this line:\n\"engineOptions\": {\"args\": [\"--no-sandbox\", \"--disable-setuid-sandbox\"]}\nThat solved your exact problem for me. I'm not sure how to help if that doesn't change the error, at least.... I can confirm that I get both of those errors intermittently as well, even if running reference and test one after another on the same machine.\nAre your test images gray or empty? Mine are actually just WIDTHxHEIGHT of empty pixels, maybe the gray is just the css on the diffing tool?\nDo any of your reference images appear empty as well? I also get empty references sometimes...\nAlthough, as far as I can tell, this never happens if there are no selectors present for the run. So, if I'm just capturing the entire website in one image. In that case, it's never empty.... Ok, I've found a bit of a curve ball here... I'd be really grateful if someone can confirm this for me.\nI've isolated the failing cases on one of my projects, and it seems that the screenshot will be empty if any of the numbers pertaining to the bounding box of the selected element have decimals. So, if I log the bounding boxes these values produce a screenshot:\nScreenshoting header:\n{\"x\":0,\"y\":0,\"width\":800,\"height\":66}\nScreenshoting footer:\n{\"x\":0,\"y\":948,\"width\":800,\"height\":703}\nAnd these produce an empty file:\nScreenshoting #testimonials:\n{\"x\":0,\"y\":3475.296875,\"width\":800,\"height\":140}\nScreenshoting #cta1:\n{\"x\":0,\"y\":421.203125,\"width\":800,\"height\":918.109375}\nThis is... unusual... But seems consistent on my machine. What also happens is that as soon as one selector in an array fails because of this reason, all the remaining selector in the scenario fail.\nIt does provide an insight into the randomness we've been seeing, because while width and height are constant, X and Y are relative to the current viewport, and may have different values on different runs.\nI've tested this out on a standalone puppeteer run and it seems to happen as well. If someone could reproduce these findings we can make an issue with the puppeteer team.\nEdit: Perhaps this issue will lead to a good outcome.\nEdit2: Indeed, as per the above issue, Puppeteer@1.1.1 doesn't have this problem, it seems to start with 1.2.0.. Cool, can't wait to test it out.\nEdit: At first glance, your pull request seems to fix it for me! Great job @cactusa :). Yeah sure, here it is:\nhttps://gist.github.com/VesterDe/8fd7e8152e7330802b32c30f75c42945\nI've looked at it more now and the problem is completely different than I thought. It's a credentials issue. Is seems that basic auth isn't being resolved properly from the data provided by Heroku Config vars. I'm still debugging it and trying to find out what's going on, but running it on a different site without basic auth works normally with casper (and probably chromy too, I guess).. I am stumped by this error still, but implementing Backstop was more of a hobby thing for me I can't spend more time looking for the cause here.\nThe authentication error went away when I started using the (deprecated) user:pass@domain.com scheme for authentication, instead of the \"proper\" auth methods.\nIn case someone sees this issue in the future here is where I'm at:\n\nThe casper engine works on Heroku and locally, but gives different results (fonts are at fault, as far as I can tell), and it also gives different results than the other engines. Although it works most consistently with concurrency set to 1.\nChromy and Puppeteer work intermittently on Heroku for me, but fail for different reasons. Chromy doesn't work because I've not figured out Basic Auth for it outside of visiting the page with user:pass@domain.com, which I want to avoid. Pupeteer and Chromy both sometimes fail with an \"Unhandled promise rejection handler error\", which I've not been able to track down within my code but does appear less on sites without basic auth...\nPuppeteer does not generate some images. It just makes empty files. It doesn't say the selector wasn't found, or wasn't visible, it just makes an empty file. The pattern of empty files is consistent though... It's always about the same 15% of all cases (of my 230 images across 8 pages and several selectors) and seems independent of concurrency.\n\nI have not ruled out the following:\n\nHeroku is running out of resources as puppeteer runs (although, it should complain in the console if memory use goes above 500MB).\nThe problems are limited in large part to pages behind basic auth.\n\nI don't know if closing this issue is the best idea now?. Did I understand this correctly?. Yeah, I was already using my branch to work with puppet, now I can change to the official repo again :)\nDo you mean docs in readme.md? I can write a few sentences about these flags, but not the whole puppet guide, which I suppose would still need to be written.. ",
    "jsmecham": "I am also experiencing this issue with the latest BackstopJS and Puppeteer. Sometimes the images will be blank, sometimes they will be cropped incorrectly and sometimes they will display part of the content and white for the rest of it. Have not been able to find a workaround, yet (tried delays, etc).. ",
    "julmot": "I've found the issue myself using:\njavascript\n  \"debug\": true,\n  \"debugWindow\": true,\nThe server just took to long to respond. I've solved the issue with:\njavascript\n  \"engineOptions\": {\n    \"waitTimeout\": 300000,\n    \"chromeFlags\": [\n      \"--ignore-certificate-errors\",\n      \"--ignore-ssl-errors=true\"\n    ]\n  }\nPlease note: This is not valid JSON:\nhttps://github.com/garris/BackstopJS#setting-chromy-option-flags. Was to fast closing this issue. It's only solved as long as debugWindow: true is set. Otherwise it'll fail as before.. ",
    "JamyGolden": "Thanks!. ",
    "aczekajski": "I wanted to achieve something similar, but even simpler. I wanted to re-generate report after approving some of the screenshots, to see what's still not approved without rerunning tests. Unfortunately report command is not exposed. When I forced to run the commend anyway, it crashed because it tries to read some temporary file which is no longer present after test command is over.\nIt would be nice if there was some more granularity to the backstop commands, to allow more integration options.. I checked it briefly and basically this temporary file contains nearly the same data as is later written to html_report/config.js, although it's the data from before running images comparison. It means they doesn't contain any tests results, just the test definitions with paths to generated screenshots. If this was saved together with images, it's the perfect opportunity to be able to run comparison manually between previously saved images without taking screenshots again ;). If they differ only in height, the result doesn't look so miserably.\nSo, while I can't wait for Diverged, maybe it's worth fixing anyway?. @garris Since the discussion about Diverged emerged here anyway, I'd suggest to create an umbrella issue to keep anything about integration with Diverged in one place.. ",
    "ApplePP": "@deap82 Hi, have you fix the issue of differences in Puppeteer?\nI meet the same issues when I take a screenshot of a big area, the result my wrong include other parts, but if I change the area to a smaller one, the result is correct.. ",
    "pbb72": "My fault, I was using an outdated Node. Updated Node, and everything seems to be running smooth now :-). You are completely correct. I was using regular Command Prompt, and I was using a very old version of Node!\nBy the way, the test does work fine also in Command Prompt if using &. My main mistake was the outdated Node.. I have similar problems. I do get a report, but the script hangs at the end. One thing I noticed was the messages before the \"Test completed\" message:\ncompare | Chromy error: Error. See scenario \u2013 xxx (mobile)\n      compare | Chromy error: Error. See scenario \u2013 xxx (desktop)\n      compare | Chromy error: Error. See scenario \u2013 yyy (mobile)\n      compare | Chromy error: Error. See scenario \u2013 yyy (desktop)\nFor the scenarios that errored, no screenshots are generated.. This is my problem with hanging: #737 . Thanks, the problem is solved, both with chromy and puppeteer. \ud83d\ude03 . ",
    "mariovalney": "It's happening here too [BackstopJS 3.2.16].. ",
    "steigenTI": "I'm also having this issue.\nWindows 10\nBackstopJS v3.5.10\nNPM v6.4.1\nNode v6.1.0. Updated to node v8.11.4 and now it'w working.. ",
    "igorpavlov": "@garris Does this mean that I would need to check all my screenshots manually? We are a relatively large project and currently having 100+ scenarios to run, we cannot really afford checking each reference screenshot to be valid.\nI think it would make sense to just show the scenario fail if:\n1) there are errors in script / selector errors\n2) screenshot could not be taken by any reason\nPlease let us know what do you think.. @garris Thanks a lot for the reply, I think we should still allow reference to continue running, even if there are errors. These errors at the end are actually very handy. Imagine we have 2 errors, this would allow to see them all by running BS once, not twice.\nThe issue is that the test remains to be considered as passed, while there are errors - it failed, test is not working.. +1 I think this is a great feature!. ",
    "joejoseph00": "@silentHoo YES, this totally was my issue as well, I also had to substitute the 'backstopjs' command I was previously using with the 'backstop' command as backstopjs does not exist on that docker image but the backstop command does exist.\nHere's a snippet of my .gitlab-ci.yml in case it helps others.\n```\nbackstopjs-beta:1.0:\n  image:\n    name: backstopjs/backstopjs:v3.1.21\n    entrypoint: [\"\"]\nbefore_script:\ncurrent folder is /builds/group/myproject\nmake sure /builds/group/myproject/public folder exists\n- mkdir public\n- cp /builds/group/myproject/backstopjs_beta /src -pr\n- ls -al /src\n\nscript:\n    - pwd\n    - cd /src\n    - cd backstopjs_beta\n    - backstop reference\n    - backstop test\n- cd .. should be the last step here\n- cd ..\n\nafter_script:\ncopy data into the public folder for artifacts\n- cp -pr /src/backstopjs_beta/backstop_data /builds/group/myproject/public\n\nartifacts:\n    paths:\n    - public\n    expire_in: 1 week\n```\nThanks @silentHoo \n. ",
    "KenCoder": "Fixed by PR #722 - I didn't realize puppeteer branch is now obsolete. . Oh, great. I didn't realize you were no longer on the puppeteer branch. I'll close it and switch to master. . This looks like #724. I had the same problem and switching to puppeteer resolved it, though puppeteer is still missing some features. . Of course, it's up to you, but if I actually clean up all the linted items and add the code to fail in Travis if lint fails, why is it extra (unplanned) work for you?\nMaybe I will look at the smoke test for you. Note that the current smoke test fails on my mac - times out on the 'click' test.. Don't merge yet! I'm still working on it - unfortunately chrome in Linux produces image mismatch with chrome on the mac, so likely the mac version will have to use a docker container to generate the reference bitmaps. I will let you know when it's ready, and no worries about work - I know how it is. . Ok I'm ready! Here's what I did:\n\nI created two folders: linux and osx, each with a backstop_data folder under it\nI moved the current backstop_data/bitmaps_reference to osx/backstop_data\nWhen you run a regular smoke test, it figures out which machine type you are on and uses that folder. For most people, doing this locally means running on a mac\nIf you run \"npm smoke-test -- ci\" on the mac, after it runs the mac smoke tests, it will build and run a docker image to check / update the smoke tests that will run in travis. This is how I populated linux/backstop_data/bitmaps_reference\nIn travis, it uses the linux backstop data images\nThe container mounts the current folder to /host-backstop inside docker. There is some magic to isolate the node_modules container inside the container from the one on the mac, since they load different stuff (e.g., the binary version of chrome)\nthe first time you use the container on the mac, it takes a while to build the container. After that it mostly reuses stuff.\n\n. Hey - any luck reviewing this? Any concerns?. No worries, not in any big hurry, I just wanted to make sure it was in the queue. . We need to address #842 for the smoke tests to pass consistently. Then it needs to rebase. . Here's an example:\n\n. To clarify, the transition means that any change to the lemur face happens over 750ms. So any test that changes the face could be flaky because that change happens over 750ms. For example, the reference images currently on master for the hide selectors test always have the face in the image, even though the face is in a <p> element which should be hidden by the test.. Right, I'm not sure it makes sense to try to support this in backstop directly. It's not hard the user to add specific javascript, then fire something that BS picks up with readySelector or readyEvent. \nI'm not really sure why we need to do transitions in the smoke test, though. If it's not something supported directly by backstop, doesn't it just add confusion to include it in the smoke tests? Especially when the  transition is unpredictably part of several of the tests (e.g., the hide selectors test), so now the tests are harder to understand, and will make it harder to debug if a dev breaks something and finds it in the smoke test.\nI'm trying to do something completely unrelated to this problem - run the smoke tests in docker. I don't have any transitions in my app. . Yeah I wasn't sure why it was there in the first place, if it's not necessary they by all means delete. \nI believe the PR does as you say - since I only changed puppet, the chromy path is now the only path using backstopTools. . I think the harness works well for devs too because it tells them if it succeeds at the end. Right now it's hard to notice if something breaks (e.g., incorrect # of comparison failures or that a timeout). There are some scary looking messages in the output that I don't know if they mean somethings wrong or not (selector not found, etc).\nThe only difference is that the CI test doesn't pop up the browser report at the end. \nBut I will add an argument so if you do\nnpm run smoke-test \nIt will behave just like today with additional niceness and popup the browser, and \nnpm run smoke-test -- ci\nWill do it without the browser report.\nQuestion for you: Will this have to run in Docker? It seems like launching in travis doesn't really work. If so I can't currently see the docker cloud config - maybe you can share it with me?\n. > It seems like launching in travis doesn't really work\nWell that's the way it is now - you can click below and see the error. I wasn't sure if you already knew this. If not - no worries I think I can fix this problem. So expect an updated PR shortly.. This line was cuasing intermittent failures in the backstop tests. Since the lemurInYourFace is part of the initial styling with the index.html, the fade-in would happen on page load and therefore you'd occasionally get lemurs partially loaded especially in the noDelay scenario. The way to do this is with the transitionend event. This could be a new backstop feature, or one can write custom Javascript to detect the transition and use the readyEvent feature of Backstop. There is already a test of readyEvent - this 'lemurInYourFace' is supposed to be the 'Simple' test case. Demonstrating CSS  transition in the \"Simple\" case seems wrong. \nHow about we add another issue \"demo CSS transition handling\" that can be done in a separate PR? I didn't introduce this problem - I'm just cleaning up something that was already flaky.\n. Yes this is much nicer - I changed it to this.. Fixed. Done. ",
    "yuriydalekyy": "I haven't such problem in my logs @pbb72 . ",
    "gabegorelick": "Is there anything preventing this from being merged, aside from needing a rebase? More tests would give contributors a lot of confidence their changes won't break things.. This is still an issue, albeit different tests fail now (https://github.com/garris/BackstopJS/pull/872). \nThe issue is the following code that causes the process to exit with code 0:\nhttps://github.com/garris/BackstopJS/blob/6634b13bd7b0aa9a61697d410f3aa9b3ae96c740/cli/index.js#L37-L48. While this is somewhat better than using bind mounts, it still won't work when docker is running on a remote host (https://github.com/garris/BackstopJS/issues/858). I think an even better, albeit more complicated solution, would be to manually docker cp into the volume.. > I guess downside is if there is a ridiculous number of files in there it would be pretty clunky to cp everything all the time.\nYes, that is a very good point. On my code base docker cp does take a long time. So it may not be worth it if you're running Docker locally and thus don't need it.\nMaybe we could only fallback to the docker cp method if process.env.DOCKER_HOST is set?. @garris Any reason not to merge this?. I'm not sure I follow? Is the CSS transition on the lemur that integral that's it's worth not having smoke tests?\nI agree that it would be nice to get smoke tests working with transitions, but if the alternative is no smoke tests, to me the choice is obvious.\nPerhaps we can merge this, get smoke tests working, then work on bringing the transition back?. @KenCoder Is that something you'd be able to do?. This can be worked around by running docker directly, for example:\nbash\ndocker create -v /src --name alpine:3.8 /bin/true\ndocker cp . src:/src\ndocker run --rm --volumes-from src backstopjs/backstopjs test --config ./backstop.js\nHowever, this is still less convenient than being able to run backstop --docker.\nInterestingly, the usage docs in https://github.com/garris/BackstopJS/tree/master/docker do use volumes instead of bind mounts.. @garris Thanks. I can confirm the backstopjs/backstopjs:latest image works now.. @garris Any plans to cut a new release with this? Or are you waiting to merge https://github.com/garris/BackstopJS/pull/864 first?. > Do you prefer that I push a release before merging?\n@garris Yes, if you could cut a new release that would be helpful.\nThanks.. @garris Looks fine to me.. I've tested this locally, but not sure how to construct a unit test for this.. Here's a working test:\njs\nit('should allow passing --config before command when passing --docker', function (done) {\n    const config = path.resolve(__dirname, '../configs/backstop.json');\n    process.argv = ['node', 'backstop', '--config', config, 'test', '--docker'];\n    sinon.stub(childProcess, 'spawn').callsFake(function (command, options) {\n      assert.equal(command, `docker run --rm -it --mount type=bind,source=\"${process.cwd()}\",target=/src backstopjs/backstopjs:${version} test \"--config\" \"${config}\" \"--moby\"`);\n      process.nextTick(done);\n      return new EventEmitter();\n    });\n    require('../../cli/index');\n  });\nThe only problem is that it doesn't work when added to index_spec.js and run after the existing test. Running it with it.only works fine though. Not totally sure why, but the existing test may need some cleanup. Is it OK to merge as is without the test and try cleaning up the test suite later?. I\u2019m familIar with sandboxes and am using them. I think the issue is that\nbackstop calls process.exit thereby killing mocha. Ideally the tests would\nfork a subprocess and run backstop in that. But that\u2019s a larger change.\nOn Wed, Sep 26, 2018 at 5:59 PM Garris notifications@github.com wrote:\n\nSinon has a sandbox feature which should help with pollution. All tests\nwould need to run cleanup too.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/pull/871#issuecomment-424896388,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAlPUQ9TeQAmQKqwdj5CRpHvmR0Izfoaks5ufAa3gaJpZM4W7DUc\n.\n. > Just want to make sure this was tested with runFromNode\n\nNot sure I follow how to test with runFromNode. Do you mean just verifying that the following works?\njs\nbackstop('test', {\n  docker: true,\n  config: 'backstop_alt'\n});\nIf so, it does :)\nAlso, I appreciate all your work! My hope with a lot of the CI changes is to make it easier for you to review changes, which would allow more outside contributions and be more confidence in new features (I don't want my build to fail again from upstream changes \ud83d\ude09). \nThanks again.. @garris Thanks for merging this. Any plans on cutting a new release any time soon?. Yep. Want to land https://github.com/garris/BackstopJS/pull/873 first so mocha will actually fail. Then I'll try to figure out the test failures.. Sorry, I realize there may have been some confusion here. By returning 1 on tests failures, I meant mocha tests, not backstop test tests. Only mocha test failures will return 1. backstop test will still return 0, unless there's some catastrophic error, even if there are scenarios that did not match the references.\nIn summary, this change is about backstop's test suite returning an error code when it fails. Nothing else should be affected.. Will need to remove this from PR if these versions were already published.. Moving this up since requiring a module is sync the first time it's called... This isn't used since an explicit list of files to lint is passed to the lint npm script.. This function is unused but I assume it will be used as part of the new diverged work.. There's a no-useless-constructor rule that flags this.. Combining all these scripts into one since what env to use is controlled by .eslintrc files.. After this is merged we should probably enabled linting for test directory too.. Does the + before delete do anything?. BTW, better way to log an error is console.error(e.stack). Since the stack is already preceded by the error's name, you don't want to print Error Error: ..... ",
    "TKlement": "Then is my assumption correct that each scenario has its own cookie/session?\nAs for Magento a guest/visitor will get an unique session cookie named \"frontend\". With this cookie the guest can navigate on the shop without loosing any configuration.\nIf I understand you then I have to save/catch this session cookie in the first scenario and restore it on the following scenarios.. ",
    "deb1990": "+1 this would improve the reliability given the parallel capturing throws random errors.. ",
    "moltar": "I also learned that there is this: https://git-lfs.github.com/\nThanks!. ",
    "mdiha": "@garris yeah thats what i actually need, some documentation that would help me alot.. @Kenith is there any documentation on running backstop via docker ?!. Yeah thats what we need tutorials for BackstopJS :). Is it possible to integrate BackstopJS via a Maven project with Gulp which would be in github and runin build tests in jenkins ?\nIs this the appropriate integration ?. @klausbayrhammer Hello i saw that you talked about using backstopjs in jenkins, can u please help me to do so, i mean to integrate backstopjs in jenkins ?! and thx in advance :). ",
    "ataylorme": "I use BackstopJS to run a visual regression report with CircleCI on every GitHub pull request to post the results back to the PR. This is the bash script. \nI can't help with Jenkins as I don't have experience with it but it shouldn't be too hard to adapt it to other CI services, like Jenkins.. @garris I didn't see a contributor guide or anything so I hope this PR is okay. Let me know if you need more details or would like to chat.. Thanks for the quick merge! Once a new release of BackstopJS comes out I'll start using it rather than my fork. It's been an awesome tool. It's been the base for a lot of our automation and I've done some talks/workshops that use it heavily. If you ever want to see our use cases just let me know.. @garris sorry for the delay. I have been away from the computer for the weekend. opn is working fine for me with Backstop on my branch.\n\n. > Also \u2014 would love to hear about your use cases \u2014 or see presentations. I\u2019ve been wanting to get more of his stuff out there.\nSure thing, I'll block off time to send you an email with my use cases. ",
    "rickdroce": "You could take the existing docker image of backstopjs and adapt it a little bit for Jenkins.\nRight now that image is just used to run the tests, but with little modifications, you can turn it into a container where Jenkins can run backstopjs commands.\nOnce you have adapted the image you just have to create a pipeline which agent is docker, with uses the backstopjs image.\nAfter that, it's pretty much done, just run some steps where you take references and so on.\nN.B. I've integrated my backstopjs tests on Jenkins and in this issue I'm pointing a little improvement to make this integration worth full. I'll definitely give it a try, I also saw the Jenkins guide you were working on, that will come handy!\nI'll let you know how it goes,\nthanks!. As you imagined I handled everything through Jenkins.\nHere's what I've done:\n- I run my tests script in a catchError so that I can keep the build result without blocking the build\n- Then I run my other steps (like the rsync to my web server)\n- At last, I echo the build result, so that it stays red when tests fail\nHere's a code sample\nstage('run css regression tests') {\n    steps {\n        catchError {\n            sh 'npm run regression'\n        }\n    }\n}\nstage('after test steps') {\n    steps {\n        ...\n    }\n}\nstage('build result') {\n    steps {\n        echo currentBuild.result\n    }\n}\nThank you for the support :). Right now I already set a --shm-size=2gb so I don't think it would need more.\nI was considering the migration to CasperJs because I need to login to the website in order to make a couple of tests.\nBy the way, for now, I'm not really satisfied with the results, the time needed for the full test went to 10mins from 4 mins\nAnd there are actually some layouts that break down\nGonna make some more tries . I took a look at the issue you linked and the only flag I was missing was \"--hide-scrollbars\"\nI'm using chromy\nI also added the \"--privileged\" arg to my docker run\nI'll make some tests.\nN.B. I also noticed that the 'hang' happens the most when the job is triggered by another build. So maybe it could really be a memory issue.\nHere are my args for the container: --shm-size=2gb --cap-add=SYS_ADMIN --privileged\n. ",
    "cesar-bedoya": "Close your antivirus. ",
    "cptwonton": "This may be a noob question, but does this mean backstop's casperjs support will also go away?. the table is in a modal. and although i've scoped the screenshot to just that modal's CSS selector using selectors:... since there are scrollbars to scroll thru the table, I've found one extra row won't cause backstop to pick up a diff. even if I included the scrollwheel in the screenshot (it's not included currently), i'm not sure even a 0.1% threshold will pick up on that.\nusing puppeteer to grab the number of rows and columns, though, is easy. I can clearly see that one has 17 rows and one has 18 rows, and that's why I was hoping for a way to have puppeteer detect this and throw an error. it's beyond my abilities to pull request this though, i'm a total java script noob :(. aha! yes, that will do. . well it would help if i used the proper capitalization. referenceUrl rather than referenceURL. ",
    "amitpbbc": "Backstop is not picking up puppeteer engine and defaults to Casper engine\nI'm trying to move my snapshot tests from Chromy to Puppeteer. But after updating the backstop.json, it has started defaulting to Casper.\nCan anyone help me find out if I have configured it correctly. \nFollowing is my backstop.json :\n{\n  'viewports': [\n    {\n      'name': 'group_1',\n      'width': 320,\n      'height': 568\n    },\n    {\n      'name': 'group_2',\n      'width': 599,\n      'height': 899\n    },\n    {\n      'name': 'group_3',\n      'width': 768,\n      'height': 1024\n    },\n    {\n      'name': 'group_4',\n      'width': 1440,\n      'height': 2568\n    }\n  ],\n  'scenarios': scenarios.map(require),\n  'paths': {\n    'bitmaps_reference': 'bitmaps_reference',\n    'bitmaps_test': 'bitmaps_test',\n    'engine_scripts': 'scripts',\n    'html_report': 'html_report',\n    'ci_report': 'ci_report'\n  },\n  'openReport': false,\n  'casperFlags': [],\n  'engine': 'puppeteer',\n  'engineOptions': {\n    'ignoreHTTPSErrors': true,\n    'slowMo': 500,\n    'args': [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-gpu',\n      '--force-device-scale-factor=1',\n      '--disable-infobars=true',\n      '--hide-scrollbars'\n    ],\n    'waitTimeout': 120000\n  },\n  'report': process.env.UI_TEST_ENV === 'ci' ? ['ci'] : ['browser'],\n  'debug': true,\n  'asyncCaptureLimit': 2,\n  'asyncCompareLimit': 2\n}\nConsole logs : \n\nThanks.\n. ",
    "justin271190": "Browserstack is all about cross browser testing and since backstopjs tests can only be executed on Chrome Headless, Phantom and Slimer, I am not sure if it would make any sense to run backstop tests on browserstack unless you just want to run it on their cloud agents.. ",
    "nutdesign": "Thanks. I'm fairly new to visual regression tools. I guess you already answered this in https://github.com/garris/BackstopJS/issues/144\nBrowserstack has an API and a Selenium service. Webdriver.io and WebdriverCSS can tap into it, for example. \nhttp://webdriver.io/guide/services/browserstack.html\nhttps://www.browserstack.com/automate/webdriverio\nI really like the Backstop interface for viewing screen diffs! Would be nice to set up tests and then use the same ones for more comprehensive cross-browser testing. . ",
    "carlosesilva": "Here is the config:\n{\n  \"id\": \"backstop_default\",\n  \"viewports\": [\n    {\n      \"label\": \"laptop\",\n      \"width\": 1440,\n      \"height\": 900\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/ba-in-biology-with-a-specialization-in-behavioral-biology-assessment-annual-report/\",\n      \"url\": \"http://www.bu.edu/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/ba-in-biology-with-a-specialization-in-behavioral-biology-assessment-annual-report/\"\n    },\n    {\n      \"label\": \"/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/assessment-annual-report-ms-in-administrative-studies-concentration-in-financial-economics/\",\n      \"url\": \"http://www.bu.edu/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/assessment-annual-report-ms-in-administrative-studies-concentration-in-financial-economics/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/raspallo-abby-2016-professional-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/raspallo-abby-2016-professional-academic-advisor-award-candidate/\"\n    },\n    {\n      \"label\": \"/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/assessment-annual-report-graduate-certificate-in-financial-markets-institutions/\",\n      \"url\": \"http://www.bu.edu/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/assessment-annual-report-graduate-certificate-in-financial-markets-institutions/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/taylor-bill-2016-professional-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/taylor-bill-2016-professional-academic-advisor-award-candidate/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2017-undergraduate-academic-advising-awards-committee-intranet/ryan-thurston-2017-faculty-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2017-undergraduate-academic-advising-awards-committee-intranet/ryan-thurston-2017-faculty-academic-advisor-award-candidate/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2017-undergraduate-academic-advising-awards-committee-intranet/dana-clancy-2017-faculty-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2017-undergraduate-academic-advising-awards-committee-intranet/dana-clancy-2017-faculty-academic-advisor-award-candidate/\"\n    },\n    {\n      \"label\": \"/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/ba-in-biology-with-a-specialization-in-cell-biology-molecular-biology-and-genetics-assessment-annual-report/\",\n      \"url\": \"http://www.bu.edu/provost/planning/program-learning-outcomes-assessment/assessment-intranet/program-learning-assessment-annual-reports/ba-in-biology-with-a-specialization-in-cell-biology-molecular-biology-and-genetics-assessment-annual-report/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/smith-michael-2016-faculty-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/smith-michael-2016-faculty-academic-advisor-award-candidate/\"\n    },\n    {\n      \"label\": \"/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/lysy-catherine-2016-professional-academic-advisor-award-candidate/\",\n      \"url\": \"http://www.bu.edu/provost/undergraduate-affairs/advising-network/undergraduate-academic-advising-awards/2016-undergraduate-academic-advising-awards-committee-intranet/lysy-catherine-2016-professional-academic-advisor-award-candidate/\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"chrome\",\n  \"engineFlags\": [],\n  \"asyncCaptureLimit\": 5,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\nI did just realize that the label is what dictates the file name and that I can set the label to whatever I want so it doesn't matter if the url is too long.\nI am dynamically generating those scenarios so that is why I was using the url path as the label for ease of recognition later when reading the report. I guess I can just find a way to truncate the label when generating the scenarios.. ",
    "justlevine": "@garris  then I just get the viewport instead of the fullPage..... ",
    "JamieMcNaught": "See my bug #820 - this seems to be an issue with the way Chrome(y) takes the screenshot by resizing the page - you can reproduce the issue in desktop Chrome by using \"Capture Full size screenshot\" in the \"Developer Tools + mobile view\". What I think we need to do is screenshot, scroll, screenshot, scroll and then stitch together.\nI've no idea of any current + working workaround, but without a work around unfortunately I can't use backstep :( :( :(. Unfortunately using the beta descrived in #785 doesn't seem to be fixing this.. The problem is really due to the way Chrome tries to take fullscreen screenshots by resizing the browser window.\nHere's some code that works around the issue by taking multiple screenshots and stitching together. It also can give you borders around each image which I think may be helpful for determining if the site is fitting correctly to the device screensizes (one of the big issues we'd been having which made us look at some sort of auto testing).\n```\nconst puppeteer = require('puppeteer');\nconst merge = require('merge-img');\n(async () => {\n    const vpw = 1024;\n    const vph = 768;\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\nawait page.goto('https://demos.creative-tim.com/now-ui-kit/index.html');\nawait page.setViewport({width: vpw, height: vph});\n\nconst $ele = await page.$('body');\nconst { width, height } = await $ele.boundingBox();\nconsole.log(\"W=\"+width+\" H=\"+height);\n\n//    await page.waitForNavigation({'waitUntil' : 'networkidle'});\nawait page.screenshot({path: 'fullscreen.png', fullPage: true});\n\nvar screens = [];\nfor(var i = 0; (i*vph) < height; i=i+1) {\n    console.log(\"Screen \"+i);\n    var screen = await page.screenshot({path: 'screen-'+i+'.png', fullPage: false, clip: {x: 0, y:i*vph, width: vpw, height: vph}});\n    screens.push(screen);\n}\n\nimg = await merge(screens, {direction: true, offset: 20, margin: 10, color: 0xFF0000FF});\nimg.write('out.png');\n\nawait browser.close();\n\n})();\n```\nObviously this needs to somehow be inserted nicely into BackstopJS or more preferably Puppeteer, but I'd stress that both of these libs would only be working around a bug in Chrome - but given the Chrome team still haven't fixed the bug with 1px wide lines rendering incorrectly on non-retina screens, I hold little hope for this getting any attention.\n. @matthew-dean sorry about the slow response - not sure if github doesn't mail me or I just missed it.\nMy backstop knowledge (and the distinctions between Puppeteer / Chromy) is very low but this issue seems to happen in Puppeteer - but it's very specific to certain websites, such as the NowUI site (https://demos.creative-tim.com/now-ui-kit/index.html) which will resize the layout based on the screen height to make the 'opening view' 100% of the browser viewport size. This is fine until you try and take a fullsixe screen shot in Chrome, at which point it seems to momentarily resize the browser window to the full height of the length of the page (which causes the page to re-layout and the screenshot to be way to long).\nSo my issue is \"solved\" by a custom version of runPuppet.js which ensures that rather than doing a Chrome Fullsize Screenshot (which you can emulate in Chome itself by doing Developer Tools -> Toggle Device Toolbar (CTRL-SHIFT+M) -> \"...\" menu (top right) ->Capture Fullsize Screenshot - try it on the NowUI page) it instead takes individual screenshots all the way down the page and stiches them together.\nIt's not ideal, but the result is something like the screen below - and sorry about the previous screenshots - should have resized them down.\n\n. Actually, I can answer this myself, simply add in (or change if it's already there) the \"fileNameTemplate\" in your config.json from the default:\n      \"fileNameTemplate\": \"{configId}{scenarioLabel}{selectorIndex}{selectorLabel}{viewportIndex}{viewportLabel}\",\nto something like below:\n      \"fileNameTemplate\": \"{configId}{scenarioLabel}{selectorLabel}{viewportLabel}\",\nObviously you need to make sure you have unique scenarioLables and selectorLabels and viewportLabels, but you do right? right?  oh....\nAnyway, solved.\nNow if only I could get it to let me put tests in sub directories cause our Mac users here will soon shortly not be able to cope with the number of files in the reference_images directory.....\n. ",
    "Fandekasp": "I have the same issue, using latest versions of BackstopJS and Puppeteer.\nBackstopJS v3.8.5 with dependency puppeteer ^1.2.0-next.1523485686787\njson\n  \"viewports\": [\n    {\n      \"label\": \"mobile\",\n      \"width\": 320,\n      \"height\": 480\n    },\n  ],\n  \"engine\": \"puppeteer\",\n  \"onBeforeScript\": \"puppet/onBefore.js\",\n  \"onReadyScript\": \"puppet/onReady.js\"\n\nstyle.less\ncss\n    @media @xs-only, @sm-only {\n      margin: 0 -1rem;\n      height: 61.5vh;\n      border-radius: 0;\n      \u2026\n    }\n. I'm also interested by an answer to this question.\nPuppeteer has tips on how to use breakpoints here: https://github.com/GoogleChrome/puppeteer#debugging-tips\nBut I'm not sure how this should be translated in backstop.json.. @garris it doesn't work for me:\nselector works in my local env\n\nBut it's never found by backstop\n\njson\n{\n  \"viewports\": [\n    {\n      \"label\": \"MacBook Pro 15\",\n      \"width\": 1440,\n      \"height\": 900\n    }\n  ],\n  \"scenarios\": [\n    {\n      \"label\": \"host-basic\",\n      \"url\": \"https://project.local/host/backstop-basic\",\n      \"referenceUrl\": \"https://project.com/host/backstop-basic\",\n      \"removeSelectors\": [\n        \"#djDebug\"\n      ],\n      \"scrollToSelector\": \"#sticky-end\",\n      \"postInteractionWait\": 3000,\n      \"readySelector\": \".card-image\"\n    }\n  ],\n  \"onBeforeScript\": \"puppet/onBefore.js\",\n  \"onReadyScript\": \"puppet/onReady.js\",\n  \"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"args\": [\n      \"--no-sandbox\"\n    ]\n  }\n}\nUsing backstopjs 3.8.5\nIs that a bug specific to using the puppet engine ? Might it be that readySelector cannot be used from all engines ?. As a developer, if I modify a component related to the contact page, I only want to have backstop test that page, not the whole application. Only the CI should be running the full css regression test suite.\nI will try to write a js script by importing backstop and giving it an object built.  thanks for pointing to the right documentation :+1: . Got it, thanks. Closing since this looks resolved, and will reopen if I don't manage to implement it correctly :). We use cssInJs, and although we do have global css, we're trying to regulate it through material-ui themes. We also don't want to wait minutes before we can git push something, and pull requests cannot be merged until the CI check has passed, so it's fine in our case. Thanks for the heads up ! . @garris I use a reference from production and am testing against a local environment to make sure it matches the production reference.\nI could use fake data on staging and ask the team not to touch the data related to backstop and use the same one locally, but that wouldn't be very robust (too easy for data to change locally or on staging, creating an error).. I explained how I dealt with backstop fixtures in this article.\nAnother trick is to duplicate data on the fly with an onReadyScript, eg if you have a list of 1 element and want to test the layout with 6 elements, your script would look like:\n```js\n/ eslint-disable /\nmodule.exports = async (page, scenario, vp) => {\n  await require(\"./onReady\")(page, scenario, vp);\nconst readySelector = \"#my-list-id\";\n  await page.evaluate(readySelector => {\n    const container = document.querySelector(readySelector);\n    const user = container.firstChild;\n    for (i = 0; i < 5; i++) {\n      container.append(user.cloneNode(true));\n    }\n  }, readySelector);\n};\n``\n. I suppose I'll need to use--config=. good idea, thanks. Shared the tip in [this article](https://medium.com/@Fandekasp/overview-of-backstopjs-a-tool-to-test-a-web-applications-ui-99234dc6c4f2), closing. Thanks @garris for rectifying me on this in #946! \nThere's no need to discard unwanted references with git, since backstop approve has the--filter= ` option. No idea how I could miss this one :laughing: . Sorry, I was using a yaml config file, and I wrongly translated the paths part into a list when it's an object.. After investigation, the unreliable behavior might or might not be related to using react-lazyload elements\njsx\n  <Link to={to} className={className}>\n    <Card className=\"card-wrap\">\n      <LazyLoad height={200} once offset={300}>\n        <CardMedia className=\"card-image\" image={image}>\n          \u2026\n        </CardMedia>\n      </LazyLoad>\n      <CardHeader\n        className={`card-header${subtitle ? \"\" : \" more-margin\"}`}\n        title={title}\n        subheader={subtitle}\n      />\n    </Card>\n  </Link>\n\nmaterial-ui 3.6.0\nreact-lazyload 2.3.0\nreact 16.6.3\n\nreact-lazyload uses the offset property to take action depending on the position from the viewport. \nTherefore, I tried to remove the .card-wrap selectors instead of just hiding them, but I still experience unreliable screenshots with differing page height . Even removeSelector will sometimes be ignored and cards be displayed on the screenshot...\n. timing is really delicate and takes us a lot of time to fine-tune until we get stable screenshots.\nHopefully something can be done in the future to improve this and reduce the time spent writing and verifying scenarios. Closing since these issues have been solved. \nFyi, I talk about BackstopJS, the issues I faced and how I resolved them in 2 articles:\n- Overview of BackstopJS, a tool to test a web application\u2019s UI\n- A journey in Continuous Integration Testing. Sure, thank you for linking them!\nAnd many thanks for the review, I'll go and update the post right away :). @garris please let me know if you share the links, thanks !. @garris I asked facebook for an alternative solution, but they closed the issue answering that the integration testing framework should handle the job.\nhttps://github.com/facebook/react-devtools/issues/1274\nHow would you go about interacting with popup windows from a scenario ?. Alright, we'll try to figure this out, thanks for the advice.. ",
    "martyfmelb": "I've made a just-good-enough fix for this so that I can snapshot toyota.com.au, which has CSS that heavily uses VH units:\nhttps://github.com/ie/snapsite-vrt/blob/feature/client-agnostic-replace-toyota-com-au/engine_scripts/chromy/onReady.js\n(See fixVhHeights for the vh unit fix, and fixPercentageHeights for the % height unit fix.)\nUnfortunately this fix crashes on some other sites like lexus.com.au (i.e. no screenshot taken), so your mileage may vary.. ",
    "carlvdm": "Updating to the latest version (BackstopJS v3.8.8) and adding the \"requireSameDimensions\": false \noption where applicable resolved the issue.\nMany thanks for the help.. ",
    "airtonix": "@kyleoliveiro In your CI environment how are you persisting the images between each run?. @kyleoliveiro the snapshot images.. ",
    "x1c0": "Hi @garris this is maybe a stupid question, but when I run the tests like you did above:\n\nI don't have the terminal colours.. do you may have an Idea why? I have colours for other commands but not for when running the tests in docker..\nI'm using mac os\n. This was happening because I had an issue on the build server, causing BackstopJS to run a not proper build that caused a white page.. so no related with  BackstopJS. Sorry for the issue!. I managed to have it working, is very simple to be honest somehow I was not selecting an agent that already contains Docker installed and that is a linux based agent. So basically make sure that Docker is running on that agent, and you can check this running this npm script command:\n\"docker:helloworld\": \"docker  run hello-world\"\nIf that runs then backstopjs container will also work ;)\n. ",
    "verbruggenalex": "This is the only reference I can find for puppet:\nhttps://github.com/garris/BackstopJS/blob/269c9f649fa48f4bdbb95a3fab02092a718156b6/core/util/runPuppet.js#L82-L90\nI'm not very proficient at javascript. Could someone help me with a small implementation to unbind these log messages? Eventually I think that there should be some sort of log level setting made available. The messages \"Browser Console Log 0: JSHandle:BackstopTools have been installed.\" and \"x Close Browser\" feel like pollution to me.\n. Thank you for the swift answer. I created something similar but still nasty:\nonBefore.js\n\n```javascript\n(function (original) {\n    console.enableLogging = function () {\n        console.log = original;\n    };\n    console.disableLogging = function () {\n        console.log = function () {};\n    };\n})(console.log);\n\nmodule.exports = async (page, scenario, vp) => {\n  await require('./loadCookies')(page, scenario);\n  console.disableLogging();\n};\n```\n\n\nonReady.js\n\n```javascript\nmodule.exports = async (page, scenario, vp) => {\n  console.enableLogging();\n  console.log('SCENARIO > ' + scenario.label + ' (' + vp.label + ')');\n  await require('./clickAndHoverHelper')(page, scenario);\n  console.disableLogging();\n  // Hardcoded to my example.\n  if ((scenario.sIndex == 27) && (vp.vIndex == 2)) {\n    console.enableLogging();\n  }\n};\n```\n\n\noutput\n\n```shell\n docker-compose run --rm backstopjs test\nBackstopJS v3.5.0\nLoading config:  /src/backstop.json \n\nCOMMAND | Executing core for `test`\ncreateBitmaps | Selected 28 of 28 scenarios.\nSCENARIO > Configuration (desktop)\nSCENARIO > Configuration (tablet)\nSCENARIO > Configuration (phone)\nSCENARIO > /content/global-editorial-team_en (phone)\nSCENARIO > /content/global-editorial-team_en (tablet)\nSCENARIO > /content/global-editorial-team_en (desktop)\nSCENARIO > /classification/01000_en (phone)\nSCENARIO > /classification/01000_en (tablet)\nSCENARIO > /classification/01000_en (desktop)\nSCENARIO > /tags/economic_en (phone)\nSCENARIO > /tags/economic_en (tablet)\nSCENARIO > People (phone)\nSCENARIO > /tags/economic_en (desktop)\nSCENARIO > People (tablet)\nSCENARIO > People (desktop)\nSCENARIO > Administration (phone)\nSCENARIO > Administration (tablet)\nSCENARIO > Administration (desktop)\nSCENARIO > Reports (phone)\nSCENARIO > Reports (tablet)\nSCENARIO > Translation (phone)\nSCENARIO > Reports (desktop)\nSCENARIO > Translation (tablet)\nSCENARIO > Translation (desktop)\nSCENARIO > /taxonomy-browser-header_en (phone)\nSCENARIO > /taxonomy-browser-header_en (tablet)\nSCENARIO > /taxonomy-browser-header_en (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > Manage translation tasks (phone)\nSCENARIO > Manage translation tasks (tablet)\nSCENARIO > Manage translation tasks (desktop)\nSCENARIO > /translate/default_en (phone)\nSCENARIO > /translate/default_en (tablet)\nSCENARIO > /translate/default_en (desktop)\nSCENARIO > /translate/elegible_en (phone)\nSCENARIO > /translate/elegible_en (tablet)\nSCENARIO > /translate/elegible_en (desktop)\nSCENARIO > /translate/mine_en (phone)\nSCENARIO > /translate/mine_en (tablet)\nSCENARIO > /translate/mine_en (desktop)\nSCENARIO > /translate/pending_en (phone)\nSCENARIO > /translate/pending_en (tablet)\nSCENARIO > /translate/pending_en (desktop)\nSCENARIO > /translate/completed_en (phone)\nSCENARIO > /translate/completed_en (tablet)\nSCENARIO > /translate/rejected_en (phone)\nSCENARIO > /translate/completed_en (desktop)\nSCENARIO > /translate/rejected_en (tablet)\nSCENARIO > /translate/rejected_en (desktop)\nSCENARIO > /translate/closed_en (phone)\nSCENARIO > /translate/closed_en (tablet)\nSCENARIO > /translate/closed_en (desktop)\nSCENARIO > Translation (phone)\nSCENARIO > Translation (tablet)\nSCENARIO > Translation (desktop)\nSCENARIO > My content (phone)\nSCENARIO > My content (tablet)\nSCENARIO > My content (desktop)\nSCENARIO > My Workbench (phone)\nSCENARIO > My Workbench (tablet)\nSCENARIO > My Workbench (desktop)\nSCENARIO > My Workbench (phone)\nSCENARIO > My Workbench (tablet)\nSCENARIO > My Workbench (desktop)\nSCENARIO > My Workbench (phone)\nSCENARIO > My Workbench (tablet)\nSCENARIO > My Workbench (desktop)\nSCENARIO > My content (phone)\nSCENARIO > My content (tablet)\nSCENARIO > My content (desktop)\nx Close Browser\nx Close Browser\n      COMMAND | Executing core for `report`\n      compare | OK: Configuration backstop_smoketest_Configuration_0_document_0_phone.png\n      compare | OK: Configuration backstop_smoketest_Configuration_0_document_1_tablet.png\n      compare | OK: Configuration backstop_smoketest_Configuration_0_document_2_desktop.png\n      compare | OK: /content/global-editorial-team_en backstop_smoketest__content_global-editorial-team_en_0_document_0_phone.png\n      compare | OK: /content/global-editorial-team_en backstop_smoketest__content_global-editorial-team_en_0_document_1_tablet.png\n      compare | OK: /content/global-editorial-team_en backstop_smoketest__content_global-editorial-team_en_0_document_2_desktop.png\n      compare | OK: /classification/01000_en backstop_smoketest__classification_01000_en_0_document_0_phone.png\n      compare | OK: /classification/01000_en backstop_smoketest__classification_01000_en_0_document_1_tablet.png\n      compare | OK: /classification/01000_en backstop_smoketest__classification_01000_en_0_document_2_desktop.png\n      compare | OK: /tags/economic_en backstop_smoketest__tags_economic_en_0_document_0_phone.png\n      compare | OK: /tags/economic_en backstop_smoketest__tags_economic_en_0_document_1_tablet.png\n      compare | OK: /tags/economic_en backstop_smoketest__tags_economic_en_0_document_2_desktop.png\n      compare | OK: People backstop_smoketest_People_0_document_1_tablet.png\n      compare | OK: Administration backstop_smoketest_Administration_0_document_0_phone.png\n      compare | OK: People backstop_smoketest_People_0_document_0_phone.png\n      compare | OK: People backstop_smoketest_People_0_document_2_desktop.png\n      compare | OK: Reports backstop_smoketest_Reports_0_document_2_desktop.png\n      compare | OK: Administration backstop_smoketest_Administration_0_document_1_tablet.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_0_phone.png\n      compare | OK: Administration backstop_smoketest_Administration_0_document_2_desktop.png\n      compare | OK: Reports backstop_smoketest_Reports_0_document_0_phone.png\n      compare | OK: Reports backstop_smoketest_Reports_0_document_1_tablet.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_2_desktop.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_1_tablet.png\n      compare | OK: /taxonomy-browser-header_en backstop_smoketest__taxonomy-browser-header_en_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: /taxonomy-browser-header_en backstop_smoketest__taxonomy-browser-header_en_0_document_1_tablet.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: /taxonomy-browser-header_en backstop_smoketest__taxonomy-browser-header_en_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_0_phone.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_1_tablet.png\n      compare | OK: /translate/default_en backstop_smoketest__translate_default_en_0_document_0_phone.png\n      compare | OK: /translate/default_en backstop_smoketest__translate_default_en_0_document_2_desktop.png\n      compare | OK: Manage translation tasks backstop_smoketest_Manage_translation_tasks_0_document_2_desktop.png\n      compare | OK: /translate/elegible_en backstop_smoketest__translate_elegible_en_0_document_1_tablet.png\n      compare | OK: /translate/default_en backstop_smoketest__translate_default_en_0_document_1_tablet.png\n      compare | OK: /translate/elegible_en backstop_smoketest__translate_elegible_en_0_document_2_desktop.png\n      compare | OK: /translate/elegible_en backstop_smoketest__translate_elegible_en_0_document_0_phone.png\n      compare | OK: /translate/pending_en backstop_smoketest__translate_pending_en_0_document_0_phone.png\n      compare | OK: /translate/mine_en backstop_smoketest__translate_mine_en_0_document_0_phone.png\n      compare | OK: /translate/mine_en backstop_smoketest__translate_mine_en_0_document_1_tablet.png\n      compare | OK: /translate/mine_en backstop_smoketest__translate_mine_en_0_document_2_desktop.png\n      compare | OK: /translate/pending_en backstop_smoketest__translate_pending_en_0_document_1_tablet.png\n      compare | OK: /translate/pending_en backstop_smoketest__translate_pending_en_0_document_2_desktop.png\n      compare | OK: /translate/completed_en backstop_smoketest__translate_completed_en_0_document_0_phone.png\n      compare | OK: /translate/completed_en backstop_smoketest__translate_completed_en_0_document_1_tablet.png\n      compare | OK: /translate/completed_en backstop_smoketest__translate_completed_en_0_document_2_desktop.png\n      compare | OK: /translate/rejected_en backstop_smoketest__translate_rejected_en_0_document_1_tablet.png\n      compare | OK: /translate/rejected_en backstop_smoketest__translate_rejected_en_0_document_0_phone.png\n      compare | OK: /translate/closed_en backstop_smoketest__translate_closed_en_0_document_0_phone.png\n      compare | OK: /translate/rejected_en backstop_smoketest__translate_rejected_en_0_document_2_desktop.png\n      compare | OK: /translate/closed_en backstop_smoketest__translate_closed_en_0_document_1_tablet.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_2_desktop.png\n      compare | OK: /translate/closed_en backstop_smoketest__translate_closed_en_0_document_2_desktop.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_0_phone.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_1_tablet.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_0_phone.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_1_tablet.png\n      compare | OK: Translation backstop_smoketest_Translation_0_document_1_tablet.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_1_tablet.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_2_desktop.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_1_tablet.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_0_phone.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_0_phone.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_1_tablet.png\n      compare | OK: My content backstop_smoketest_My_content_0_document_2_desktop.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_2_desktop.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_0_phone.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_0_phone.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_2_desktop.png\n      compare | OK: My Workbench backstop_smoketest_My_Workbench_0_document_2_desktop.png\n       report | Test completed...\n       report | 84 Passed\n       report | 0 Failed\n       report | Writing browser report\n       report | Resources copied\n       report | Copied configuration to: /src/backstop_data/html_report/config.js\n      COMMAND | Command `report` successfully executed in [4.551s]\n      COMMAND | Command `test` successfully executed in [40.311s]\n```\n\n\n\nSince it looks like it's indeed hard to control the output. I'll try to create a pull request that lets people use a flag and/or level setting. But might take a while to get there.\nAnyway much thanks for taking the time to propose a possible solution.  I'll do my best to get something done for this later on.\nI think it may be a good idea to provide some output formatters like behat does (progress vs pretty).. Hi @garris , thanks again for the detailed explanation. I don't see many projects giving such great support.\nI fully agree that good logging is essential for developers. Especially when they are using CI. I will do my best to put some efforts into following your directions. But I might make a pull request first for a simplified \"progress\" formatter like behat is providing. So essentially all you do is output a single character per scenario executed.\n[behat] Executing command: /test/toolkit/tests/vendor/behat/behat/bin/behat --config=\"/test/toolkit/tests/behat.cwt.yml\" --strict\n...................................................................... 70\n...................................................................... 140\n.F----F-.F----......F-----......F-----......F-----......F-----......F- 210\n----......F-----......F-----...F----.........F--------------.........F 280\nAfter that it will be much easier to categorize and format the pretty output of the logs. My thinking is to backengineer that output from the generated data set in config.json to output the data in a way that will become \"templatable\". Any output not related to the result set itself should then be considered debug output.\nI'm more proficient at PHP and at symfony/console. So I will probably do the backengineering of the result set into console output in that. With this it will become much easier to analyse what needs to be done to refactor the logger system to become more configurable by having all the possible raw data properties sent to the logger to be formatted only before outputting.\nBut like you said. This may be a lot of work. A progress formatter will probably have less impact on the current structure. If you agree with this approach I'd be more than happy to create a pull request for the progress formatter.. ",
    "MartijnVanRiele": "Hi,\n\"clickSelector\": [\"[class^=Checkbox_label_]\", \u201c[class=SubmitReturnPage__actionButton_]\u201c], gives an error \u2018Error: Unsupported target type: object\u2019.\nDo you mean \"clickSelectors\": [\"[class^=Checkbox_label_]\", \u201c[class=SubmitReturnPage__actionButton_]\u201c],? This doesn\u2019t do the clicks.\nI\u2019m running BackstopJS v3.2.18. I did some more research. The problem i encounter is that the clicks must be in a certain order. So first click on checkbox and then the button. When i do it like this:\n\n\"clickSelector\" : \"[class^=Checkbox_label_]\",\n  \"clickSelector\" : \"[class*=SubmitReturnPage__actionButton_]\",\n\nthe checkbox doesn't get clicked but button does.\nWhen i do it like this:\n\n\"clickSelectors\" : [\"[class^=Checkbox_label_]\", \"[class*=SubmitReturnPage__actionButton_]\"],\n\nnone get clicked.\nI also tried:\n\n\"clickSelector\" : \"[class^=Checkbox_label_]\",\n  \"postInteractionWait\" : 10000,\n  \"clickSelector\" : \"[class*=SubmitReturnPage__actionButton_]\",\n\nbut also then only the click on the button gets done.\n. @wlsf82 , do they get clicked simultaneously? Or in the order they are defined?\nthis works (checkbox gets clicked):\n\n\"clickSelector\" : \"[class^=Checkbox_label_]\",\n\nthis doesn't (checkbox doesn't get clicked)\n\n\"clickSelectors\" : [\n    \"[class^=Checkbox_label_]\",\n    \"[class*=SubmitReturnPage__actionButton_]\"\n  ]. \n",
    "wlsf82": "@MartijnVanRiele, seems that you're still using it incorrectly.\nI'm able to click on multiple elements (using Puppeteer) by doing something like this:\njs\n\"clickSelectors\": [\n    \".filter-button\",\n    \".open-dropdown-button\",\n    \".dropdown-item\"\n],. @MartijnVanRiele, in my case they are clicked in the right order. But notice I'm using a different way of locating my elements, with simple CSS selectors. I don't know if this may be related.. Sorry, @garris, I wrote it wrong and have updated it now. I meant the bitmaps_test directory.. I'd prefer some configuration like cleanupBitmapsTestDir that would receive a boolean.. Yeah, that would work for me.. Well, I think the issue is on the website that I'm trying to run the tests because I tried on my website and it worked well, with and without docker. I think you can close the issue then.. The problem seems to be due to the application blocking access to itself when it identifies that the browser is headless. :/. ",
    "babielmam": "The problem occurs during npm install, because the Puppeteer installation fails on Node versions < 6.4.0. So it doesn't even come to running any of the available options. . ",
    "Jamiewarb": "I'm also experiencing this problem - a fix or workaround would be great!. ",
    "hugopeek": "Thanks, that looks useful. Also the part of running it with gulp. Not so familiar yet with node, but I'll probably be able to figure this out.\nGreat project btw. Incredibly useful. Thanks a bunch! :). ",
    "justinph": "@garris: Yup, it looked all good from the smoke tests. Also ran it against our own configs and it works well, no discernible issues.. ",
    "pstephenwille": "Perfect!  Works like a charm.  I wasn't expecting test failures, but now that I understand the purpose of a reference image, the docs make sense.  \nA video is great idea.  If I can finagle it, I will.\n. ",
    "edlefebvre": "OK, thank you for your answer. I think it is a little bit misleading then in the readme, \"Integrated Docker rendering -- to eliminate cross-platform rendering shenanigans\" if it is not expected to work with every supported engines?\nAnyway, the docker image seems to have an \"old\" version of slimerjs (0.10.3) that doesn't support headless mode I think. \nI'll try to switch to peppeteer. Thanks for the support!\n. ",
    "brendonbarreto": "@BBlackwo I'm having some trouble running with docker. \njs\nif (config.args.docker) {\n    const passAlongArgs = process.argv\n                  .slice(3)\n                  .join('\" \"') // in case of spaces in a command\n                  .replace(/--docker/, '--moby');\nAnd in my case, i don't want to use --docker, i want set this on my configuration file.\nI know that this have nothing to do with your code, but maybe you could give the user the choice of running with --docker or set it on configuration file.\nWhat do you think?. No, I tried docker: true and args: { docker: true }.\nAnd I don't know if this was supposed to work, because of this part of the core/command/test.js\njs\nconst passAlongArgs = process.argv\n                    .slice(3)\n                    .join(' ')\n                    .replace(/--docker/, '--moby')\n. Yes, that worked for me. Thanks!. Implemented by @garris in https://github.com/garris/BackstopJS/commit/af804531c2208359dd071f13e1f7b9348ee3e9c9. ### The issue\nAfter some time of debugging, this seems to be the real issue:\nIn compare-resemble.js, the data.misMatchPercentage returned is 0.00. Then I read this useful links: \n- https://github.com/garris/BackstopJS#modifying-output-settings-of-image-diffs\n- https://github.com/HuddleEng/Resemble.js/blob/master/README.md\nI though that this could be the problem:\n\nBy default, the comparison algorithm skips pixels when the image width or height is larger than 1200 pixels. This is there to mitigate performance issues\n\nSetting largeImageThreshold to 0 didn't solve the problem as well\nThen I start to look at node-resemble-js package, and find some interesting code...This package uses some default tolerance:\njs\nvar tolerance = { // between 0 and 255\n   red: 16,\n   green: 16,\n   blue: 16,\n   alpha: 16,\n   minBrightness: 16,\n   maxBrightness: 240\n};\nIf I change this tolerance, then the tests start to fail (as expected). I didn't find a way to set this configuration with backstopjs.\nConclusion\nI would like to help by fixing this problem, and I found two possible solutions:\n- Implement some configuration for this tolerance\n- Remove node-resemble-js dependency and use https://github.com/HuddleEng/Resemble.js directly. This repository is 'LOOKING FOR MAINTAINER' and have not been updated recently.. Pixelmatch looks awesome. \nThis weekend, I'll be working on this.\nIf we decide to use pixelmatch, resembleOutputOptions will not be available anymore. \n\nThere's an issue for setting color output\nhttps://github.com/mapbox/pixelmatch/issues/36\n\n@garris Do you think that this is an issue?. This algorithm seems really good!\nI was comparing Pixelmatch and Resemble, and I think that the second is a better choice for us. There's why:\n\nResemble has a lot of cool diff settings:\nSee the demo page: http://huddleeng.github.io/Resemble.js/\nWe could change resembleOutputOptions to something like diffOptions or resembleOptions, and this setting would allow the user to change not only the output, but the diff algorithm as well. See below: \njs\nconst options = {\n        output: {\n            errorColor: {\n                red: 255,\n                green: 0,\n                blue: 255\n            },\n            errorType: \"movement\",\n            transparency: 0.3,\n            largeImageThreshold: 1200,\n            useCrossOrigin: false,\n            outputDiff: true\n        },\n        scaleToSameSize: true,\n        ignore: \"antialiasing\"\n    };\nIn our case, by default, we should use ignore: 'nothing'\nDon't need pngjs dependency\nResemble looks more stable\n\nWhat do you think?. I Open a PR, there still a lot of work to do. With Resemble, the comparison part looks cleaner.. > More weird to that, when you click the reference image, which on the preview has a grey tick, it shows the pink tick as we have on the test image!\nI noticed this when I created this issue. If you inspect the image, both the test and the reference points to the test folder.\n@zigotica If you send me both images, I can test this in my branch, and try to understand better what's going on.\n@garris  Do you intend to merge #852 in a future major release? I thought that diverged would somehow replace the resemble and so my PR would not be needed anymore.. @zigotica @garris Tomorrow I'll investigate this, and fix conflicts as well. Thanks you all!. @zigotica Can you test your scenario in my branch? I made some changes today.\nyarn add backstopjs@brendonbarreto/BackstopJS#replacing-node-resemble-js or npm install --save backstopjs@brendonbarreto/BackstopJS#replacing-node-resemble-js\nOr give me you configuration file, so I can test myself.. Can't you install backstopjs locally and run it by using npx backstop? . Hey @zigotica, sorry for the delay in answering (got busy at work). I didn't manage to reproduce your issue.  Can you somehow share your scenario (config and public url)?. Nice @zigotica, happy to hear that you find the issue.. @kbo4sho In #852 I am using ignoreNothing as default.. ### Pushed changes\n- Enable resembleOptions. Here's an example: \njs\nresembleOptions : {\n  output: {\n    errorColor: {\n      red: 255,\n      green: 0,\n      blue: 255\n    },\n    errorType: \"movement\",\n    transparency: 0.3,\n    largeImageThreshold: 1200,\n    useCrossOrigin: false,\n    outputDiff: true\n  },\n  scaleToSameSize: true,\n  ignore: \"antialiasing\"\n};\n- Default options: \njs\nresembleOptions : {\n  output: {\n    transparency: 0.3,\n    largeImageThreshold: 0\n  },\n  ignore: \"nothing\"\n};\nTo Do\n\nUpdate DOCS\nUpdate Tests\nRemove node-resemble-js from dependencies\n\nQuestions\n\nWhat's the purpose of compare-hash.js? I made some tests on master, and this module always throw an exception.\nAfter this changes, the default ignore option will be nothing.\nsmoke-test is failing (this was expected). https://drive.google.com/file/d/16T7CSoYC7q2Of49POq3HSPirHzh-_BzM/view?usp=sharing\nI an running on Mac, should I run this test on Docker to approve? \nShould I increase misMatchThreshold?\nWhat do you mean by add back jpeg support?\nfs.writeFileSync(failedDiffFilename, data.getBuffer()) will save the file, no matter the extension\nSeems like all engines saves screenshots as png\n\n@garris Sorry for all this questions.. - I wrote a simple test for jpg support\n  - outputFormat.js\n- Updated DOCS\n- removed node-resemble-js dependency\nsmoke-test with docker\nThere's an issue with running --docker and --config together (https://github.com/garris/BackstopJS/issues/849#issuecomment-420143278). Because of that, i can't run smoke-test with docker.\ndocker run --rm -it --mount type=bind,source=\"/Users/brendonbarreto/Projetos/BackstopJS/test/configs\",target=/src backstopjs/backstopjs test \"--_=test\" \"--h=false\" \"--help=false\" \"--v=false\" \"--version=false\" \"--i=false\" \"--config=backstop_features\" \"--moby=true\" \"--config=backstop_features\" \"--moby\"\nSince bitmaps_reference are not affected with this changes, I think that in another PR we can:\n- Fix duplicated docker arguments\n- Update smoke-test to use docker\n@garris Is there something else that I should do in this PR?. Rebase done. smoke-test is failing, can I approve it on Mac (since docker isn't an option)? . Please have a look at this report: https://drive.google.com/file/d/16T7CSoYC7q2Of49POq3HSPirHzh-_BzM/view?usp=sharing\nMost of then are small differences, but in some cases they look a lot different. \n| Reference             |  Test |\n:-------------------------:|:-------------------------:\n  |  \n | \nAt some point the images were changed, but smoke-test could not find the differences or changes were not approved. Thats my theory. But in general, most of the tests that are failing, have just small font issues. @garris I fix all conflicts. The issue that @zigotica reported was a miss configuration. So when you have time, this is ready to review.\nThanks!. No problem, thank you for letting me know.. This is how I avoid problems with dynamic data:\n\nTests are not run in production code\nI run the tests using localhost\nFor a consistent database, there are two easy ways to do it:\nHave a specific test database\nBefore run the test, create a new database with a script to populate it. Sorry about that.\n\nThese positioning differences are happening in tests that have selectors. They are happening because in the version that was, the puppeteer forced a scroll until near the element. In the new version, this scroll does not happen. This way the content is in a different position compared to the background. I have not gone too far on how to circumvent this behavior of the puppeteer.\nI could only check the real problem by starting the browser in slowMo\nhttps://github.com/GoogleChrome/puppeteer/blob/v1.8.0/docs/api.md#puppeteerlaunchoptions. I think you're right. I'll be working on this later today. We are currently using 1.2.0-next.1523485686787. The next version is 1.2.0-next.1523546977615. This next version, as the last one 1.8.0, does not scroll to print selector.\nThis scroll was never a stable behavior. 1.2.0 and 1.3.0 works like 1.8.0. \nJust wanted to share some discoveries.. I could not find the exact PR or commit that bring this scroll behavior. It could also be a chromium revision.\nAnd puppeteer just release 1.9\nhttps://github.com/GoogleChrome/puppeteer/releases/tag/v1.9.0. As you suggested, I think we could use troubleshooting section. Maybe something like this?\nPuppeteer bump\nIn the version we were in, puppeteer forced a scroll to take screenshot, when running a scenario with selectors defined. This can cause difference in the images captured before and after the bump. This issue will probably happen if in your site the backgroud is fixed to the viewport, or it uses the parallax effect.\nIn this case simply approve the changes, since now puppeteer takes screenshot without scrolling.\nNOTE: english is not my primary language, so sorry for grammar issues.. I was think exactly the same thing today. I think we have a few reasons to do that:\n\nRepository is archived\nThe last stable release is from almost 3 years ago\n\nDoing this, maybe we can start thinking about remove casperjs as well (CasperJS is no longer actively maintained).\n. I'm going to have some free time on Friday. Can I start taking a look at this?. So can I delete compare/output from git, since It's generated?\nAnd then add compare/output/* to gitignore?. Since ESLint as you said, is already ignoring index_bundle.js, this is ready to merge. I just got confused about what to do with this file \ud83d\ude04 . I'll be looking at this tomorrow. Thank you for letting me know!. https://github.com/garris/BackstopJS#approving-changes\nYou can use --filter=<scenarioLabelRegex>. You could use .js config file instead of json. Then create a file viewports.js\njs\nmodule.exports = [\n    {\n      label: 'phone',\n      width: 320,\n      height: 480\n    },\n    {\n      label: 'tablet',\n      width: 1024,\n      height: 768\n    }\n  ]\nAnd then, in your config.js files:\n```js\nconst viewports = require('./viewports');\nmodule.exports = {\n   id: 'config_id',\n   viewports: viewports\n   ...\n}\n``. There's an PR for this already (https://github.com/garris/BackstopJS/pull/747), my bad.. @garris Will we continue with this configuration of engine_scripts? For me it makes sense to remove, because after this PR we will only have the Puppeteer option available.. Only now that I realized that on issue you did not mention chromy. Are we going to stay with chromy support?. @garris I made the changes you suggested. Thanks!. If you use git, you can approve all, and then discard the wrong ones. . You should usepage.evaluateHandleto execute browser code. The problem with your code is thatrequireis fromnode`.. https://github.com/garris/BackstopJS#generating-test-bitmaps\n\nPass a\u00a0--filter=\u00a0argument to just run scenarios matching your scenario label.. Try something like this:\n\njavascript\npage.evaluate((valueToBeStoraged) => {\n    localStorage.setItem(\"xd\", valueToBeStoraged);\n}, \"foo\");\nI don't know if setting sessionStorage is possible in onBeforeScript. In this moment your DOM is not loaded yet, so maybe you got an exception like this: \nEvaluation failed: DOMException: Failed to read the 'localStorage' property from 'Window': Access is denied for this document\nIf that is your case, you can try to put this code on onReadyScript. Try changing hide_selectors to hideSelectors\nhttps://github.com/garris/BackstopJS#hiding-selectors. eslint throw an error, when no matching file exists on path. Since I removed gulpfile.js, there are no remaining .js files, in the root directory.. ",
    "movie4": "in chromium \u2014 page look fine.\nand if i don't use selector, all page render right\n\"scenarios\": [\n    {\n      \"label\": \"Site\",\n      \"url\": \"http://localhost:8000/\"\n    }\n  ],. I guess this happened before taking a screenshot there is a loss of hover, in debug i see hover...\n```\n  let item = '.grid.grid_type_order-detail .grid-content__item-selector > .grid-content__item-selector-current'\nawait page.waitFor(item)\n  await page.hover(item)\n  await page.waitFor(1000)\n```. ",
    "caiofbpa": "I'll close this as I assume the issue will be resolved in another fashion. ",
    "ExelleR": "I have the same exact issue. . Installing portfinder did not work for me only rolling back to the v3.2.17 of backstopjs container solved the issue. . @kyleoliveiro @garris I have the same issue. . ",
    "zapatoche": "Hi there, \nI have the same issue.\nIt's working again after installing portfinder globally.. I have the issue with the local backstop version by the way, not the docker one. I will try again in a when I'm back at work, but my issue was fixed when I installed port finder manually.. ",
    "thijsvdanker": "Installing portfinder globally fixed the issue for me.\nbash\nnpm install portfinder -g\n(Running locally with chromy).\n. ",
    "seleckis": "Hi, I have fresh install of backstopJS 3.5.8. Worked well until I changed engine to \"chromy\". Now I have the same error.. The code you mentioned is for puppeteer. For chromy I do it like this:\nchromy/onBefore.js:\njs\nmodule.exports = function (chromy, scenario, vp, isReference, chromyStatic) {\n  const {label, ...restVP} = vp;\n  chromyStatic.addCustomDevice({\n    \"name\": label,\n    ...restVP\n  });\n  chromy.emulate(label);\n}\nin backstop.json:\njson\n\"viewports\": [\n    {\n      \"label\": \"iPhone_v\",\n      \"width\": 375,\n      \"height\": 667,\n      \"deviceScaleFactor\": 2.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": true,\n      \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\"\n    },\n    {\n      \"label\": \"iPhone_h\",\n      \"width\": 667,\n      \"height\": 375,\n      \"deviceScaleFactor\": 2.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": true,\n      \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\"\n    },\n    {\n      \"label\": \"iPad_v\",\n      \"width\": 768,\n      \"height\": 1024,\n      \"deviceScaleFactor\": 1.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": true,\n      \"userAgent\": \"Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1\"\n    },\n    {\n      \"label\": \"iPad_h\",\n      \"width\": 1024,\n      \"height\": 768,\n      \"deviceScaleFactor\": 1.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": true,\n      \"userAgent\": \"Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1\"\n    },\n    {\n      \"label\": \"desktop\",\n      \"width\": 1440,\n      \"height\": 900,\n      \"deviceScaleFactor\": 1.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": false,\n      \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36\"\n    }\n],. No, this is not enough. Take a look at my code. I'm passing all params from viewports to chromyStatic.addCustomDevice() function.. No, Backstopjs uses chromy 0.5.11, this is actual version.. ",
    "yebrahim": "It's not working on my Mac. :(\nIs there a way to pass arguments to the Docker command? Maybe sharing the host network (--net=host) would help?. In case anyone else hits this, this worked for me on my Mac: http://docker.for.mac.host.internal, although I'll have to detect the OS in the script so I can switch between this and something that works on Ubuntu.\nClosing this since no action required.. ",
    "andyrichardson": "I've had a similar issue on Linux when using 127.0.0.1 as the hostname. \nExposing the container to the host network has resolved the issue. PR incoming.. Hey @garris, sorry for not checking this earlier.\nThe justification for using host networking was so that the ports mapped to the host would be accessible to the container at IP 127.0.0.1 (currently, trying to access a host port from the container in Linux is not possible). \nAfter double checking the documentation, it looks as though host networking is not supported on macOS/Windows. Whether the addition of this argument will break functionality outside of Linux environments is something I am unsure about. I'll have to experiment more on this but for the time being, I'll close this request.\n. ",
    "lo1tuma": "I\u2019ve stumbled upon the same problem. Additionally when creating the report fails the process exits with 0, which made our CI pipeline silently pass, even though the tests were actually failing.. This might be an issue of fs-extra which preservers the permissions of copied files.. ",
    "spacecowboyian": "My config file is generated by a node script (backstop.config.js) and I'm still seeing this error with 3.7.0. https://gist.github.com/spacecowboyian/e8dac9c6371e0d8c0239a4d2e8709893. The sanity test worked for me btw.. I was in the folder where the config lives. It ran with the alt config. I'll have to figure out what it doesn't like about my config.. Can you tell me what's wrong with this config? I've compared it to the alt and see no difference except values.\nhttps://gist.github.com/spacecowboyian/b8c21f0a3e966fb31b61027f9e59de76. I figured it out. My export was a promise. I assume once I resolve that all will be well :) It would be nice if the config param, when used with docker, could accept an object like it does otherwise but I think I understand why it needs a file for docker.. I ended up just having it write out the backstop.json first with every run and pointing to that. It'll be good to have that as a record of the last run anyway. We're using it in a UI Component monorepo and we wanted the ability to test a single package or the whole repo. Thanks so much for your help.. ",
    "zigotica": "Hi, I'm very interested in the status of this PR, any ETA? Thank you. I think the problem might have a different root. Please have a look at the following image: \n\nAs you can see, in this case is not just a grey on white kind of subtle difference, but more importantly, the script returns a diff of 0.4 and still do not detect the change while misMatchThreshold: 0.01 (or even smaller).  If we're capable of assigning diff a value of 0.4 we shuld be able to match that against misMatchThreshold to accept/reject the test.\nMore weird to that, when you click the reference image, which on the preview has a grey tick, it shows the pink tick as we have on the test image!\nPlease let me know if you need further info or test images.\nThank you @brendonbarreto for #852 PR (hey it has some conflicts) and @garris for creating backstop!. > > More weird to that, when you click the reference image, which on the preview has a grey tick, it shows the pink tick as we have on the test image!\n\nI noticed this when I created this issue. If you inspect the image, both the test and the reference points to the test folder.\n\nGood, then that's just another issue, unrelated to the diff we're talking about.  Sorry I hadn't looked at the page source.\n\n@zigotica If you send me both images, I can test this in my branch, and try to understand better what's going on.\n\nGreat! Let me prepare them. Thank you so much!. Hey @brendonbarreto here the images: \n\n\n\n\n\n\nI compared all of them to the one without the tick, with these results:\ngrey  diff%: 0.02\nblue  diff%: 0.04\nblack diff%: 0.04\npink  diff%: 0.04\ngreen diff%: 0.04\nDespite my settings include misMatchThreshold: 0.001 and diffs are greater than that, none of the tests would  fail. \nThank you again for any help. \n. > \n\nAlso, @zigotica has a very good point -- we should investigate this! Perhaps all that is broken is the threshold evaluation?\n\nThat's my main suspect, yes, but would need to dig into the code. Probably the threshold is doing something like \"if diff x and diff y are smaller than threshold, pass\", instead of comparing diff% to the threshold. . no man, thank you both, again. I don't really know about the details, and as such I might be wrong, but I'd swear the suspect is https://github.com/garris/BackstopJS/blob/f9070c5c388bb3c173ea1370cce7bfa33215de84/core/util/compare/compare-hash.js#L23. Sorry @brendonbarreto I cannot run your script, npm dependencies system is a complete mess (not your fault) :)\nIf I install it in package.json, it would run the global backstopjs. If then I remove the global instance to use the one in my node_modules there's not way the script can run. I'm missing smth, any help appreciated.. No because somehow it breaks my yarn dev (smth webpack related). I will isolate this in a barebones folder, will keep you posted. Sorry @brendonbarreto a bit embarrassed but there's no way I can run the local backstopjs, only the 3.7.0, any step-by-step help would be appreciated. . OK got it! took me longer than expected, sorry. \n@brendonbarreto \nSame problem with your branch, diff% 0.04, misMatchThreshold: 0.01, and test passes. I used the no-tick image as reference, then the blue tick. Hope that helps.. hi @brendonbarreto sorry for the delay. \nyou mean you cannot reproduce the \"false pass\" using my images from https://github.com/garris/BackstopJS/issues/850#issuecomment-433117854 ? Not in your branch and not even in master? Weird, then must be something in my side then, but we're not using anything special and it certainly works except for the issue described above. Here's my config for the record:\nconst config = {\n  id: 'backstop_default',\n  viewports,\n  onReadyScript: 'onReady.js',\n  scenarios: createScenarios(),\n  paths: {\n    bitmaps_reference: 'backstop_data/bitmaps_reference',\n    bitmaps_test: 'backstop_data/bitmaps_test',\n    engine_scripts: 'backstop_data/engine_scripts',\n    html_report: 'backstop_data/html_report',\n    ci_report: 'backstop_data/ci_report',\n  },\n  report: ['CLI', 'browser'],\n  engine: 'puppeteer',\n  engineFlags: [],\n  asyncCaptureLimit: 1,\n  asyncCompareLimit: 50,\n  debug: false,\n  debugWindow: false,\n  misMatchThreshold: 0.01,\n  resembleOutputOptions: {\n    errorColor: {\n      red: 255,\n      green: 0,\n      blue: 150,\n    },\n    transparency: 0.3,\n  },\n};\nThis is executed from a ES script that creates the scenarios in createScenarios(). This shouldn't affect, since it works for everything except this. Cannot provide a public URL, sorry, but I run the tests to these images alone, nothing else.\nThank you again for all.. For the record, still pretty sure the problem is the threshold evaluation. Been doing quite a lot of small changes, all using misMatchThreshold: 0.01, and I'm consistently getting wrong PASSED up until diff%: 0.10 diff-x: 0 diff-y: 0. When changes are slightly bigger, from diff%: 0.11 diff-x: 0 diff-y: 0 onwards, they're correctly evaluated as a FAILED.. OK I found the problem @brendonbarreto  \nNot sure how it might happened though. Whatever I set for misMatchThreshold as seen above is neglected, it still uses the default misMatchThreshold: 0.1. I added a console.log on compare-resemble.js and is is comparing the data.misMatchPercentage <= misMatchThreshold but misMatchThreshold \"is\" 0.1 at that point.. BINGO, sorry all the noise, I was setting the misMatchThreshold on two places, the only valid being inside the scenario. Please excuse my stupidity... . Yup, sorry let me rephrase @garris  \nIn the report page, the reference images preview look fine. But if you click on a reference image preview you get the \"big\" test image, not the \"big\" reference one. \nI found this on #850 where we have a reference and test that look different but not detected as such, causing the diffImage to not exist. In that situation, apparently, the system tries to build the slider comparator (but does not show the vertical red line), causing the overlay to only show the test image.. ",
    "kbo4sho": "In working with Resemble JS on a previous project I discovered that they use an 'ignoreNothing' function when they truly want to catch all diffs. Here's the implementation. Maybe doing something similar here is needed. Thoughts?\n. The changes here will result in a new release?. Whats your environment?. ",
    "Yarmolaev": "Update:\nWith the casper engine the pictures will be rendered fine, but not with puppeteer.\nIs this something which is in the scope of BackstopJS?. First a big thank you for the quick reply. \nI ran the sanity-check. This worked like expected with 2 compare errors. I also tried to do the smoke test but I got npm ERR! missing script: smoke-test and also didn't get what you mean with work backwards from there. \nI got my problem solved by switching my render engine to casper. This has another drawbacks like I need browser prefixes for flexbox but now I can run tests in my project. If this is nothing you can do about it, maybe this should be just pointed out in the description or be caught in the runtime somehow. \nSo far thank you a lot for your help and this project and keep the great work up!. After a while I have just tested if this works by now and yes it does.. ",
    "ICame4You": "Here's my backstop.json file\n{\n  \"id\": \"testingMobile\",\n  \"viewports\": [\n    {\n      \"label\": \"iPhone_v\",\n      \"width\": 375,\n      \"height\": 667,\n      \"deviceScaleFactor\": 2.0,\n      \"pageScaleFactor\": 1.0,\n      \"mobile\": true,\n      \"userAgent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\"\n    },\n    {\n      \"label\": \"PC full HD\",\n      \"width\": 1920,\n      \"height\": 1080\n    }\n  ],\n  \"onBeforeScript\": \"puppet/testingMobile.js\",\n  \"onReadyScript\": \"puppet/testingMobile.js\",\n  \"scenarios\": [\n    {\n      \"label\": \"Google\",\n      \"url\": \"https://www.google.com/?hl=en\"\n    }\n  ],\n  \"paths\": {\n    \"bitmaps_reference\": \"backstop_data/bitmaps_reference\",\n    \"bitmaps_test\": \"backstop_data/bitmaps_test\",\n    \"engine_scripts\": \"backstop_data/engine_scripts\",\n    \"html_report\": \"backstop_data/html_report\",\n    \"ci_report\": \"backstop_data/ci_report\"\n  },\n  \"report\": [\"browser\"],\n  \"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"args\": [\"--no-sandbox\"]\n  },\n  \"asyncCaptureLimit\": 2,\n  \"asyncCompareLimit\": 50,\n  \"debug\": false,\n  \"debugWindow\": false\n}\nAnd here's testingMobile.js\n```\n// onBefore (puppeteer engine)\nmodule.exports = async (page, scenario, vp) => {\n    await require('./loadCookies')(page, scenario);\nawait page.setUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1');\n\n};\n// onReady (puppeteer engine)\nmodule.exports = async (page, scenario, vp) => {\n    console.log('SCENARIO > ' + scenario.label);\n    await require('./clickAndHoverHelper')(page, scenario);\n};\n```\nI'm still getting only desktop version of the vebsite\n\n. ",
    "yogishmt726": "Hello Garris,\nThe above solution will work only if the session is not changing every time,but in our web sites the sessions are keep changing when we load the pages. So we are unable to use cookies in this case.\nPlease provide the solution for logging in.\nThanks in advance.\n. ",
    "vulkanosaure": "That would be indeed a killer option. I don't have the knowledge to\nimplement that myself though.\nThanks for your indications :)\n2018-09-27 20:30 GMT+02:00 Garris notifications@github.com:\n\nSorry -- I accidentally closed issue!\nI wanted to also comment -- I have been considering an integration to add\nAPI response recording into backstop.\nI think it would be fairly easy to integrate this cool API recorder...\nhttps://github.com/flickr/yakbak and then enabling proxying to that local\ninstance (adding a flag to the config to proxy as described here...\nhttps://github.com/flickr/yakbak)\nI have already added a local server to backstopjs for a different reason\n-- but it could also be used for this purpose.\nI am getting pretty excited thinking about this idea......... I wish\nsomeone would build it!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/garris/BackstopJS/issues/874#issuecomment-425197167,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEydXF_j4fWm9z5IABwgio9dbffH_kemks5ufRlRgaJpZM4W858z\n.\n\n\n-- \nVincent Huss\nD\u00e9veloppeur Fullstack  |  Symfony - Angular - Ionic\n(+33)6 76 67 53 37  |  skype : vincent.huss * | * website : \nwww.appinstrasbourg.com http://appinstrasbourg.com/\n. ",
    "colorful-tones": "Thought about this a little more. Perhaps adding a button in between \"Diff\" and \"Scrubber\" in the existing modal would be easiest approach. \n\nWhen the \"Side-by-side\" button is clicked it would open an additional modal with the \"Reference\" and \"Test\" shown side by side.\nWith this being the ultimate result of the new modal:\n\nUsing the scrubber requires too much cognitive load for me. Is it just me? When I scrub left am I seeing the \"Test\" on the right side, or am I seeing the \"Reference\"? When I scrub right am I seeing the \"Test\"? This is why I'm proposing the side-by-side (alternative) view.\n. > What is deficient about the current scrolling report for this functionality?\nThe ability to see both \"Reference\" and \"Test\" at the same time (Side by side and top aligned). So user can scroll through the screenshots and visually scan the diffs. Right now, one has to click the \"Reference\" or \"Test\" buttons to see each one (uniquely and separately). I'm just proposing a new, additional view where they're side by side.. Honestly, all one would ever really need is the \"Side-by-Side\" and \"Diff\". The \"Reference\", \"Test\" and \"Scrubber\" views are not useful in themselves.. Yes, using the initial report state and making them larger and with Previous/Next is a neat solution which I had not thought of \ud83d\udc4f\ud83c\udffb\nI would be happy to try and work up a PR to try and get some code in motion. And, I did initially try to, but it wasn\u2019t entirely obvious to me the quickest means to get up and running with a dev scenario to start customizing the report React app.\nI did read through the \u201cHTML Report Development\u201d section and still wasn\u2019t obvious to me.. @garris I put together a prototype in Sketch of what I believe would improve overall experience of navigating and comparing Baseline, New and Diff.\nhttps://sketch.cloud/s/3x3ow/4jWQ9A/play\nPlease note this is an interactive Sketch Prototype and there are some items you can click on (and even click \"X\" to close, etc.).\nThe biggest notable change is putting the \"Diff\" as a sticky scrolling element. Scroll down in prototype and see what I mean please. This sticky \"Diff\" could be toggled (Opened/Closed) from the side of screen and would only be sticky scrolled within the bounds of the test that it is associated with.\nThe prototype uses mobile screenshots. For desktop (wide) screenshots they would take up 50/50 of the width of the container.\nOne idea I also had would be to allow for passing of a few configuration options in the form of an object in backstop.json for items like:\n\"report_output\": {\n    \"expandAll\": true, // Expand ALL tests by default\n    \"collapsedPassing\": true, // Collapse all 'Passing' tests by default\n    \"expandDiff\": true, // Expand 'Diff' sticky scroller by default\n}\nPlease let me know if you have any questions. Looking forward to your feedback. Thanks!. Curious, what is this mysterious justify-w that keeps getting mentioned? I Google'd it, and even search this repo for \"justify-w\". \ud83e\udd14\n@garris \n\nJust need to add a toggleable option in the drop down -- maybe called \"justify\". It would be nice.\n\nI'm having a hard time visualizing this, but would be happy to take a stab at mocking a UI change if I understood the details a bit better.\n@ackmanx \n\nthis would be great (and be sorta like how the UI operated pre-redone UI).\n\nThis makes me think there is some arcane, historical context that is assumed, but I have not been using BackstopJS since the first commit. I'm interested to learn more though.. ",
    "Kinglet1": "Thank you for immediate answer!. ",
    "kvkulish": "\nUse onReadyScript instead.\nThe DOM does not yet exist when onBeforeScript runs.\n\nsame error, added sleep before console.log but it didn't help. > \n\nthis needs to run in a page.evaluate()\nlet elementList = document.querySelectorAll('.picture-class');\n  elementList.forEach((pic)=>{ pic.src = 'my-pic.jpg'})\n\nyep. it works. thank you for help!. ",
    "mrmgreen": "Hey @garris, I added a unit test to ensure the fs.writeFile was being invoked for the json and browser reports if json is added to the config. Have rebased are force pushed. \nHopefully this is what you had in mind with your comment.. Hi @garris was this PR ok? Thanks, Martin. ",
    "LeeDownshift": "Following on from this frustration, I decided to try running backstop using Chromy instead. So far I'm pleased to report that there doesn't appear to be the same halting behaviour without any warning. Chromy also seems to give a lot more in the way of debugging, however it runs much slower than puppeteer.  . Yeah I thought that too, so I tried running just the test that it seemed to be halting on and it ran fine, I even tried running a subset that included the previously failing test and it still worked. \nVery strange, I definitely need to dig into this further but first I need to find a way of getting some debugging output from the tests.... Yes I tried using \"debug\": true but when using it with puppeteer there was no debugging being output. When using the debug option with chromy I can see the HTML for the pages in question.. Apoligies I found the answer two seconds after writing this.... ",
    "thumpmaster": "@garris Running the tests outside of the docker works fine. . ",
    "MalcolmDwyer": "https://github.com/garris/BackstopJS#integration-options-local-install\nYou might want to set up a small backstop runner script as described above... then you can optionally configure the selectors.\n```javascript\nlet config = require('my.base.config.js')\nif (targetVersion >= 4.0) {\n  config.selector = \".foo > div > .bar\"\n}\nelse {\n  config.selector = \".foo > span > .bar\"\n}\nbackstop.test({\n  config: config\n})\n. ",
    "patnaik-harikrishna": "Thanks for the great info Malcom and Garris. Was able to implement the provided suggestions. Thanks again !!. ",
    "steveycee": "\nYou could use .js config file instead of json. Then create a file viewports.js\njs\nmodule.exports = [\n    {\n      label: 'phone',\n      width: 320,\n      height: 480\n    },\n    {\n      label: 'tablet',\n      width: 1024,\n      height: 768\n    }\n  ]\nAnd then, in your config.js files:\n```js\nconst viewports = require('./viewports');\nmodule.exports = {\n   id: 'config_id',\n   viewports: viewports\n   ...\n}\n```\n\nThis method solved the problem for me. . ",
    "kud": "Okay. It seems weird at first because it's not directly said by backstop. But I'll ignore it them. :) Thank you.. Fixed by https://github.com/wlsf82/backstop-config. Hahaha, yes, sorry. I was too lazy there. :p. ",
    "danielbater247": "Okay, should have held fire on this a little longer but, resolved with help.\nhttps://github.com/docker/for-mac/issues/2640#issuecomment-370149492. ",
    "VinnyIla": "Yes, but i need to compare the screen as a whole. There are more than 50 screens like that we use for testing. . ",
    "marcdacz": "Ok cool. On it!. fix for #921 . @garris I've updated the documentation. Please have a look. Cheers!. ",
    "Chankami": "Hello\nThanks you for your quick response \nActually this is a test url  as we cannot share the correct URL.\nOur url is something slimier to \n\"url\": \"https://local-www-test-com/bsjs/test\",\nPls note that we are using  \"backstopjs\": \"3.2.19\". Pls let me know any other information that i should share to resolve this . ",
    "tkkumaravel": "@mirzazeyrek Thanks, but this doesn't look like permission issue, as the script removed the bitmap_reference folder and the html_report folder was created when we run test.. ",
    "lpeabody": "I also just ran into this. Big +1 from me. Our biggest projects are all multilingual right now and we can't test these characters.. The StandaloneChrome Docker image at one point has this in it's inheritance:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/cab7e4b0a2357ae36902ff47bcd827ed96f95c32/NodeBase/Dockerfile#L59-L71\nRUN apt-get -qqy update \\\n  && apt-get -qqy --no-install-recommends install \\\n    libfontconfig \\\n    libfreetype6 \\\n    xfonts-cyrillic \\\n    xfonts-scalable \\\n    fonts-liberation \\\n    fonts-ipafont-gothic \\\n    fonts-wqy-zenhei \\\n    fonts-tlwg-loma-otf \\\n    ttf-ubuntu-font-family \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get -qyy clean\nI have to wonder if that is what installs the library.. I bashed into the running container and installed all libraries listed above except for fonts-tlwg-loma-otf and ttf-ubuntu-font-family because they were not available in an existing apt list.\nI can confirm that this allowed the Japanese language to render as expected.\n@ptmkenny if you extend the Dockerfile to include that RUN command (minus the above mentioned font packages) you should be good to go.. @garris PR opened.. ",
    "Phelilix": "I am still working on it. Currently figuring out how to run the smoke-test in docker.\nIf I run the test outside docker, I get 68 mismatches, maybe 38 that were exactly the same. . I renamed scenarios[0].localStorageData to scenarios[0].localStoragePath, I removed config.localStorageData. ",
    "BijayaBasnet": "You could use the following as the clickSelector:\n\"button[label='what ever the label name us']\"or\n\"button[type='submit']\"\nif this is the only  button is available in the DOM\nBut your button has a class name, so why don't you use the class name by itself as follow within clickselector\n\"#whatever the button class name is\".\nAlso be aware that I have realized the the clickSelector function is not included in the puppet/clickAndHoverHelper.js. so you will have to create a if statement for the clickselectors in it like this https://github.com/garris/BackstopJS/pull/923/files/ea5682febf962c249b648be01fab76076882eadf. ",
    "ahmadalfy": "@mirzazeyrek definitely not by default as it takes significant amount of time to optimize the images. I am currently using a precommit hook that only optimize the added files. If there is plans to add that feature I can work on it.. ",
    "chrisalexander55": "Is anyone home???. ",
    "tonyxu-io": "Garris reminded another way to solve my problem. Instead of running script to do clean up job after screenshots, I can however move the clean up job before running next screenshots.\nFor other use cases, feel free to open separate issue, closing this one now.. ",
    "mnemolyst": "Hi -\nSome websites hang on loading and never fire their \"load\" event, so chromy.goto() blocks until the script times out. Setting {\"waitLoadEvent\": false} in goto() prevents it from blocking.\nNow that I think about it, given the multiple options Backstop provides for delaying screenshots, it might be okay to set waitLoadEvent: false by default.. No, it's a Mindtouch site that I am only providing styling for, but have no access to content, backend, etc. There is one cross-origin asset load that hangs and prevents the site from finishing.. It appears so. With Puppeteer I get the following:\n\nPuppeteer encountered an error while running scenario \"...\"\nTimeoutError: Navigation Timeout Exceeded: 30000ms exceeded\n\nIt's running headless so I can't see just what it's doing, but I believe it's the same error.\nIf I point it to another url, eventually I see in the console \"Browser Console Log 0: JSHandle:BackstopTools have been installed.\", which is generated by runPuppet.js on the line after \"await page.goto()\"\nBut running against the page that never emits the \"load\" event, I never see that line in the console.. It does succeed with puppeteer if I add { waitUntil: 'networkidle2' } to the page.goto() call. ",
    "LyleLaii": "Maybe I find the reason. If viewports smaller than really view(usually height), the page(or viewports) will reload to suit really page  when take screenshots. . ",
    "multivoltage": "I tried with https://www.armani.com/Styleguide/. ",
    "aw-davidson": "@garris Haha, this is weird. I don't think its coming from my app because neither the reference or the test image have these grids. All the other screenshots look normal -- just the diffs have grids. This has been happening ever since I made the changes I mentioned above. Was using chromy before and just switched to puppeteer.. @kbo4sho I've observed this while running tests locally on my mac and in docker. . \n\nvar config = {\n  id: 'myId',\n  viewports: [\n    {\n      label: 'desktop',\n      width: env_config.viewport.width,\n      height: env_config.viewport.height\n    }\n  ],\n  onBeforeScript: 'puppet/onBefore.js',\n  onReadyScript: 'puppet/onReady.js',\n  scenarios: [...myScenarios],\n  paths: {\n    bitmaps_reference: 'src/bitmaps_reference',\n    bitmaps_test: 'report/bitmaps_test',\n    engine_scripts: 'src/engine_scripts',\n    html_report: 'report/html_report',\n    ci_report: 'report/ci_report'\n  },\n  report: ['browser', 'CI'],\n  engine: 'puppeteer',\n  engineOptions: {\n    waitTimeout: 90000,\n    gotoTimeout: 300000,\n    headless: true,\n    args: ['--no-check-certificate', '--disable-dev-shm-usage', '--no-sandbox']\n  },\n  resembleOutputOptions: {\n    ignoreAntialiasing: true\n  },\n  asyncCaptureLimit: env_config.baseURL.includes('http:') ? 1 : 3,\n  asyncCompareLimit: 50\n};\nExample scenario:\n{\n        \"label\": \"Typography\",\n        \"cookiePath\": \"src/engine_scripts/cookies.json\",\n        \"url\": \"myUrl\",\n        \"referenceUrl\": \"\",\n        \"readyEvent\": \"\",\n        \"readySelector\": \"mySelector\",\n        \"delay\": 5000,\n        \"hideSelectors\": [],\n        \"removeSelectors\": [],\n        \"hoverSelector\": \"\",\n        \"clickSelector\": \"\",\n        \"postInteractionWait\": \"\",\n        \"selectors\": [\n          \"mySelector\"\n        ],\n        \"selectorExpansion\": false,\n        \"misMatchThreshold\": 0.05,\n        \"requireSameDimensions\": true\n}. Figured out the issue. Apparently, resemble skips pixels if the height or width of an image is above 1200 pixels. Setting largeImageThresh: 0 in resembleOutputOptions fixed this. See: https://github.com/rsmbl/Resemble.js/issues/52. @garris Thanks for the reply. I'll try that.. I was still seeing this behavior if I specified selectors that were within the viewport. My solution was to increase the viewport size and select the document instead. This seems to have stabilized my tests.. @garris sounds good. How do I check the scrubber feature?. ",
    "elizabethsjudd": "@garris when there isnt' a hover selector I move it to the bottom right corner of the viewport.  This seems to be doing the trick.  Thanks!. ",
    "gyanta": "I have the same issue.\nAccording to the Docker docs:\n\nSpecifying -t is forbidden when the client standard output is redirected or piped, such as in: echo test | docker run -i busybox cat. \n\nI sent a PR earlier to make docker run more customizable:  #925\nI fixed this particular issue by adding \"-t=false\" to dockerRunExtraArgs. (which is the same as using -i instead of -it)\n-t seems to be necessary only if we want to handle keyboard input while running in the container. Is there a use case for that?\nIf anyone comes up with a cleaner design, I'm more than happy to put together another pull request. . ",
    "josephthomashines": "\nI have the same issue.\nAccording to the Docker docs:\n\nSpecifying -t is forbidden when the client standard output is redirected or piped, such as in: echo test | docker run -i busybox cat.\n\nI sent a PR earlier to make docker run more customizable:  #925\nI fixed this particular issue by adding \"-t=false\" to dockerRunExtraArgs. (which is the same as using -i instead of -it)\n-t seems to be necessary only if we want to handle keyboard input while running in the container. Is there a use case for that?\nIf anyone comes up with a cleaner design, I'm more than happy to put together another pull request.\n\nThe solution in #925 worked for me. Working both locally and on our build machines.\nIt seems as though the only change after passing \"-t=false\" is that the output of puppeteer is no longer colorized. \nBefore:\n\nAfter:\n\n. ",
    "kumarpatel": "@garris is diverged integrated on a branch? I'd love to give it a try.. ",
    "beto-aveiga": "Thanks for answering so quick @garris, but I still think something is not right. Parameters listed on documentation are not working as expected, only a few of them. As I said, clickSelector for chromy is not working. Also, those params are not processed sequentially as the docs state, for example, removeSelector is processed before hideSelector... Or there is something that I'm not getting yet, sorry if so.. Thanks @garris. I'm pretty sure this is happening on Puppeteer. I will check this twice and PR if I found something :+1: . ",
    "engelfrost": "Hi, \nCorrect me if I'm wrong (I might have misunderstood), but you seem to have two different problems: \n\nneed to have same results in local and docker\n\nFonts are rendered differently by different systems, even if both systems have the same fonts installed. This, as well as other rendering differences, is why rendering everything in a shared Docker system is so useful. \nIf you are using Docker you should run EVERYTHING in the Docker system, ALWAYS. That is the point of using Docker. Just like you don't want to mix local systems, you don't want to mix the Docker system with the local system.\nTo switch from local rendering to Docker, I would do this in three steps: \n1. Run the tests locally (like before) and make sure that everything looks good. \n2. With no changes made, run the tests in Docker. Approve the tests so they become the new reference points. \n3. Run ALL the tests in Docker from now on. \nNow, regarding the fonts...\nYou also seem to have an issue with missing fonts on the Docker system. I looked at the fonts in your CSS import and the fonts you install locally. You are @import-ing \"Noto Sans Japanese\", but installing \"Noto Sans CJK JP\". You need to @import \"Noto Sans CJK JP\" if you want that font to work without installing it locally. \n. If I'm right, this is the TL;DR:\nNoto Guidelines name | Google Fonts name  | CSS\n---------------------- | -------------------- | -------------\nNoto Sans CJK JP       | Noto Sans JP             | @import url('https://fonts.googleapis.com/css?family=Noto+Sans+JP');\nNoto Sans JP               | Noto Sans Japanese | @import url(\"https://fonts.googleapis.com/earlyaccess/notosansjapanese.css\");\nSo, what does the table above mean? From what I have learned, Noto is a project to make a global, unified font for all alphabets. Pretty cool. Also HUGE, so when it comes to the web, it's critical to only download the stuff you need, and no more. Japanese is one of those languages with a very large number of glyphs (\"letters\"). From what I've understood of the Noto project there are (at least) two Japanese subsets. In the Noto guidelines they call the large and complete subset Noto Sans CJK JP. The incomplete but much smaller (and therefore quicker to load) subset is referred to as simply Noto Sans JP. \nThe font you @import from Google Web Fonts Early Access is a small subset: \n\nNote: Noto Sans Japanese has been subsetted to 6,934 characters and contains most of the characters defined by JIS X 0208. This includes 6,355 Kanji as well as 579 non Kanji characters. (https://fonts.google.com/earlyaccess#Noto+Sans+Japanese)\n\nAs far as I can tell, this is the font they called Noto Sans JP in the Noto guidelines. \nHowever, in the \"regular\" Google Fonts archive there is a similar font called Noto Sans JP. The documentation for this font says: \n\nIt has Thin, Light, Demi Light, Regular, Medium, Bold and Black styles and is hinted. \n\n...and...\n\nNoto Sans JP has been subsetted to all of the kanji in JIS X 0208, JIS X 0213, and JIS X 0212, including all kanji in Adobe-Japan1-6. (https://fonts.google.com/specimen/Noto+Sans+JP)\n\nPlease let me know if this explanation seems to make sense.\n. Locally it works just fine, it's only when I add the Docker flag it fails. It's the combination of config object literal + Docker that causes the issue. . Yes, would it be acceptable to generate a temporary config file and delete it once the test is complete? . ",
    "oladhari": "@engelfrost \nthank you very much for your detailed answer and big help\nas you described I am planning to do so, but unfortunately the difference between local tests and docker tests(which we are planning to use as the unique way to run tests and use them as references) is so big due to difference of font-family\nI followed this guideline about how to import Noto Sans CJK JP\ndo you mean that I should change the order of importing the font family?\n*:not(.fa) {\n  font-family: \"Noto Sans CJK JP\", \"Noto Sans\", \"Noto Sans Japanese\", \"\u30e1\u30a4\u30ea\u30aa\",\n    meiryo, \"\uff2d\uff33 \uff30\u30b4\u30b7\u30c3\u30af\", \"ms pgothic\", sans-serif;\n}\nthe only way to import the Noto Sans CJK JP are by importing\n@import url(\"https://fonts.googleapis.com/earlyaccess/notosansjapanese.css\");\naccording to this guideline\n. @engelfrost \nthank you very much for your detailed explanation and your precious time\nI tried it with\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans+JP');\nI got error in css-loader-plugin\nafter some searches I used this syntax to import the correct font-family\n*:not(.fa) {\n  font-family: \"Noto Sans\", \"Noto Sans CJK JP\", \"Noto Sans Japanese\", \"\u30e1\u30a4\u30ea\u30aa\",     font-family: \"Noto Sans\", \"Noto Sans CJK JP\", \"Noto Sans Japanese\", \"\u30e1\u30a4\u30ea\u30aa\",\n    meiryo, \"\uff2d\uff33 \uff30\u30b4\u30b7\u30c3\u30af\", \"ms pgothic\", sans-serif;       meiryo, \"\uff2d\uff33 \uff30\u30b4\u30b7\u30c3\u30af\", \"ms pgothic\", sans-serif;\n  src: url(\"https://fonts.googleapis.com/css?family=Noto+Sans+JP\");\n}   }\nnow without importing the font-family from dockerfile I am having the same result\nwhich means that this is the right font-family that I should import to begin with\nwithout your explanation, I would not understand the problem clearly\nI am very thankful. ",
    "brownbl1": "We're running into this issue as well. Any chance this can be merged soon?. We've tested this locally and in our CI environment and it's working well for us, so I definitely vote on merging! Thanks @engelfrost!\nEDIT\nActually I apologize. This is the PR that we tested: https://github.com/garris/BackstopJS/pull/925. ",
    "feerglas": "@garris Thanks very much. Sorry, did not know about the PR. I'll have a look at it and i'll be glad to give you feedback.. @garris I did checkout the PR. It looks good to me. But I only can judge the functionality, I'm sure you have the much better view on the code side :) So any idea as of when this can be merged?. ",
    "stephanfriedrich": "my backstop config:\nbackstop.json:\n```\n{\n  \"id\": \"testing_ui\",\n\"viewports\": [\n    {\n      \"label\": \"desktop\",\n      \"width\": 1920,\n      \"height\": 1080\n    }\n  ],\n\"scenarios\": [\n    {\n      \"label\": \"newproject - Testing UI\",\n      \"url\": \"http://localhost.hob:8105/newproject.html\",\n      \"referenceUrl\": \"\",\n  \"selectors\": [\n    \"document\",\n    \"viewport\",\n    \".data-testui\"\n  ],\n  \"hoverSelector\": [\n\n  ],\n  \"clickSelector\": [\n\n  ],\n  \"hideSelectors\": [\n\n  ],\n  \"removeSelectors\": [\n  ],\n\n  \"cookiePath\": \"test_ui/scripts/cookies.json\",\n\n  \"readyEvent\": \"test_ui-ready\",\n  \"readySelector\": \"html.js\",\n\n  \"delay\": 100,\n  \"postInteractionWait\": 0,\n  \"selectorExpansion\": true,\n  \"expect\": 0,\n  \"misMatchThreshold\" : 0.1,\n  \"requireSameDimensions\": true\n}\n\n],\n\"onBeforeScript\": \"puppet/onBefore.js\",\n  \"onReadyScript\": \"puppet/onReady.js\",\n\"paths\": {\n    \"bitmaps_reference\": \"test_ui/images/reference\",\n    \"bitmaps_test\": \"test_ui/images/test\",\n    \"engine_scripts\": \"test_ui/scripts\",\n    \"html_report\": \"test_ui/report/html\",\n    \"ci_report\": \"test_ui/report/ci\"\n  },\n\"report\": [\n    \"browser\",\n    \"CI\"\n  ],\n  \"engine\": \"puppeteer\",\n  \"engineOptions\": {\n    \"args\": [\n      \"--no-sandbox\"\n    ]\n  },\n  \"asyncCaptureLimit\": 10,\n  \"asyncCompareLimit\": 100,\n  \"debug\": true,\n  \"debugWindow\": false\n}\n```. ",
    "Bhav1907": "@garris  Need your help on this. I am running 242 scenarios and on 32nd scenario i m getting some locator not found error ( i try to click on it where locator is not present). So that particular scenario should fail. My execution is getting halted and doesn't run for remaining scenarios. Any solution to this will be really appreciated.. Is anyone can help me with this ?. I mean this is 32nd scenario..first 31 are getting passed/executes properly..on 32nd locator not found issue due so it dint executed rest of the scenarios and it stopped.\nERROR: The process with PID 15720 (child process of PID 24848) could not be terminated.\nReason: There is no running instance of the task.\nBrowser Console Log 0: JSHandle:[HMR] connected\nBrowser Console Log 0: JSHandle:[HMR] connected\nCOMMAND | Command \"test\" ended with an error after [142.714s]\nCOMMAND | TypeError: scenario.selectors.join is not a function\nSample JSON file for scenarios : \n{\n        \"label\": \"DataPaginator-LinkSize\",\n        \"referenceUrl\": \"http://localhost:6007/?selectedKind=Data%7CPaginator&selectedStory=Link%20Size&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-No%20of%20rows=5&knob-Total%20records=300&knob-Append%20panel%20to=&knob-Rows%20Per%20Page%5B0%5D=5&knob-Rows%20Per%20Page%5B1%5D=10&knob-Rows%20Per%20Page%5B2%5D=15&knob-Rows%20Per%20Page%5B3%5D=20&knob-Rows%20Per%20Page%5B4%5D=25&knob-Page%20Link%20Size=5&knob-Page%20link%20size=3\",\n        \"testUrl\": \"http://localhost:6007/?selectedKind=Data%7CPaginator&selectedStory=Link%20Size&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-No%20of%20rows=5&knob-Total%20records=300&knob-Append%20panel%20to=&knob-Rows%20Per%20Page%5B0%5D=5&knob-Rows%20Per%20Page%5B1%5D=10&knob-Rows%20Per%20Page%5B2%5D=15&knob-Rows%20Per%20Page%5B3%5D=20&knob-Rows%20Per%20Page%5B4%5D=25&knob-Page%20Link%20Size=5&knob-Page%20link%20size=3\"\n    },\n    {\n        \"label\": \"AutoCompleteDefault-SendKey\",\n        \"referenceUrl\": \"http://localhost:6007/?selectedKind=Components%7CAutocomplete&selectedStory=Default&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-Placeholder=Automobile&knob-Field%20Size=30&knob-Append%20panel%20to=&knob-Disabled=&knob-Required=true&knob-Force%20Selection=\",\n        \"testUrl\": \"http://localhost:6007/?selectedKind=Components%7CAutocomplete&selectedStory=Default&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-Placeholder=Automobile&knob-Field%20Size=30&knob-Append%20panel%20to=&knob-Disabled=&knob-Required=true&knob-Force%20Selection=\",\n        \"actionsWorkflow\": [\n            \"type#.ui-autocomplete-input#a\"  //consider this locator not found then all further are not executing.\n        ],\n        \"actionDelay\": 2000\n    },\n    {\n        \"label\": \"AutoCompleteDefault-Hover\",\n        \"referenceUrl\": \"http://localhost:6007/?selectedKind=Components%7CAutocomplete&selectedStory=Default&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-Placeholder=Automobile&knob-Field%20Size=30&knob-Append%20panel%20to=&knob-Disabled=&knob-Required=true&knob-Force%20Selection=\",\n        \"testUrl\": \"http://localhost:6007/?selectedKind=Components%7CAutocomplete&selectedStory=Default&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs&knob-Placeholder=Automobile&knob-Field%20Size=30&knob-Append%20panel%20to=&knob-Disabled=&knob-Required=true&knob-Force%20Selection=\",\n        \"actionsWorkflow\": [\n            \"hover#.ui-autocomplete-input\"\n        ]\n    },\n=================================\nJS file  : \n\"onBeforeScript\": \"puppet/onBefore.js\",\n    \"onReadyScript\": \"puppet/onReady.js\",\n    \"scenarios\":\n      scenarios,  /// Array of scenarios comes from JSON file\n    \"paths\":\n      saveDirectories,\n    \"engine\": \"puppeteer\", \n    \"report\": [\"browser\"],\n    \"debug\": false,\n    \"engineOptions\": {\n      \"args\": [\"--no-sandbox\"],\n        },\n    \"asyncCaptureLimit\": 5,\n    \"asyncCompareLimit\": 50,\n    \"debugWindow\": false\n  };\nHelper JS file : \nif (actionsWorkflow) {\n    const frames = await page.frames();\n    const tryItFrame = frames.find(f => f.name() === 'storybook-preview-iframe');\n    for (var i = 0; i < actionsWorkflow.length; i++) {\n      var action = actionsWorkflow[i].split(\"#\")[0];\n      var locatorID = actionsWorkflow[i].split(\"#\")[1];\n      var parameters = actionsWorkflow[i].split(\"#\")[2];\n      const locator = await tryItFrame.$(locatorID);\n................................\n................................\n..............................\n}\n. Anyone has any solution for me ?. @garris  I think i made this complicated. My question is simple-\nIf i have hover and click selectors in my scenario. First is click and then hover. I have added in that sequence . It clicked on element but the hover element dint come up (application issue) then its throwing error and no further scenarios are running.execution stops and no report generated.\nIs there any thing i can put to handle hovering on null /clicking on null a fail and continue further.\n\"clickSelector\": \".ui-dropdown\",\n\"hoverSelector\": \".ui-dropdown .ui-dropdown-item:nth-child(1)\", // due to issue in application this locator dint come up/present.\n. ",
    "jprado": "Updated.. Good call. Updated.. ",
    "rudda": "thanks. this work for me. ",
    "jasonlimantoro": "Did you try to get it work? @mhavelant. ",
    "foresightyj": "I also encountered the same problem. Running with browser showing is smooth but running with headless is not working.\nIt is very likely a puppeteer issue, not backstop's problem. Its headless mode in windows has many problems. Here is one I encountered quite a while ago GoogleChrome/puppeteer#1718 where headless mode is extremely slow.\n. ",
    "hamtaai": "Created a PR for it (note, I'm mhavelant, this is only my personal account, the other one is my work account). :). "
}