{
    "ruflin": "Thanks for the code cleanup.\n. Thanks for the update. Pulled to master.\n. I assume that is the change I discussed with Shay here?  http://groups.google.com/a/elasticsearch.com/group/users/browse_frm/thread/45e6f2eadf8e0f43/bf979ae65425f303?lnk=gst&q=ruflin#bf979ae65425f303\nBackward-compatibility is nice, but I think we should look forward ;-)\n. I just merged it. We can check later if we want to make it an additional optional parameter.\n. Thanks for your updates. I just merged it into the master branch.\n. Looks good. I just added it to the trunk. Thanks.\n. Perfect. I just merged it. Thx.\n. Thanks. I merged into the master. I also added a getHit() method to better support not implemented fields.\n. Very interesting. If you need some more patches, let me know (or just make a pull request).\n. Hi Tim\nThanks for fixing my typos. I will merge it into master with my next push.\nNicolas\n. I just pushed it to the master\n. Please make sure that all your queries and filters are still working with the newest version. Because there are a lot of changes ...\n. Thanks for your help. I merged it into. What you think about the comment above?\n. Nice addition. I'm not sure about the naming. I see two more options:\n1.  Elastica_Searchable\n2.  Elastica_Interface_Searchable\nAt the moment I think option one would make sense as we do not have any other similar interfaces. But I think in the future we could have some more interfaces like Elastica_Interface_Indexable for all Entities that can be index and should have for example a function getElasticaDocument(). So option 2 would be better. What do you think?\n. I'm not sure which version of ZF2 you checked, but in the current version of zf2 are a lot of interfaces (>50). I did not find one where Interface was appended to the name. I don't like adding Interface to a the file name, as we also don't add Class to the file name. But as always, naming is a really personal issue.\nFor me the folder would be an organization unit to group together all interfaces that are not directly related to any other classes / folder structure. I think this is the case for Searchable as it can be added to different classes like type or index. \nBut as long, as there is only 1 interface, it does not make sense to create a folder. I looks like we could both agree on Elastica_Searchable. Is it ok for you if I rename it like this?\n. Ok, perfect. Thank you.\n. Ok, it's in the master now. Hardtabs should be the standard. Looks like this was not the case for all files yet. Thanks for the refactoring.\n. Is it necessary that every searchable object also has to support count? Like this every time I use searchable for an object, I also have to implement count. \nRefactoring/enhancing of the function is a good idea. It's probably Elastica_Type::count(Elastica_Query_Abstract $query = null) \nIf the query is not set, a match all query should be created.\n. I somehow like the idea of splitting up searchable and countable, as I did not use count yet and would like to keep it separate. But it is also ok for me to \"merge\" it at the moment. Interesting is that PHP also has a countable interface (without parameters): http://php.net/manual/en/class.countable.php\nTo be honest, I do not like my implementation of the query processing inside the search function, especially because the same processing has to be done for every search function. I already thought about introducing a search object that would be passed to the search function. But I'm not sure if this would make everything more complicated because I like to just pass a string to the search function. Or the other option could be to use the search/count object inside the search function. But I have to think more about this first.\nSo I think at the moment it's best to move it to a protected method.\n. Good idea. I do not really like that we have to use a static function for this one, but at the moment it looks like the best solution.\n. Let me know as soon as I should merge it into master.\n. Looks good, some small comments are directly inside the source code.\n. Merged. I will probably write some tests for the count function in the next days.\n. Thanks for your addition. As far as I can see the changes are setOrder and a lot of documentations. Did the API change in any way?\n. Perfect. Thanks for your code and documentation.\n. I just merged it into the master. Thanks for your addition.\n. The new 1-click merge button helps :-)\n. Hm, now in your commit it's not a function all anymore. Does it have to be one or not? :-)\n. I had to merge a conflict. Now it seems like the system did not realize, that I merged theses changes. The commit is here:\nhttps://github.com/ruflin/Elastica/commit/8dac46f36e6729999004b4f56c6634e6fc4dd1d2\n. Their is already an escape function in Elastica_Query_QueryString. I don't think Elastica is responsible to escape the queries, but it should offer the possibility to do it. I had it integrated directly but then realized that this prevents to use the full functionality of query strings.\nSo my approach is, that Elastica has a function that makes the escaping, but the user has to use it where he needs it. Perhaps it would be better move the escapeTerm function to Elastica_Helper or something like this, because it could be used in much more other queries and filters than just QueryString.\nWhat do you think?\n. Good idea with Elastica_Util. Probably we can use this class for other functions in the future too.\nThx\n. Hi gibrown\nThanks for reporting this issue. I think the problem is, that it is not an empty array, but an empty object. Can you try the following for me:\n... array('content' => new stdClass()) ...\nInstead of using an empty array? This should work.\n. The problem is, that {} is an empty object in json. An empty array would be []. There is some confusion because there are two different types of arrays in PHP. The standard arrays with number as indices that start from 0:\narrray('test', 'hello', 'world')\nThis is converted to JSON:\n['test', 'hello', 'world]\nOn the other side their are arrays with special keys:\narray('my' => 'test', 'yes' => 'hello', 'from' => 'world');\nThis array has the same values, but different keys and is converted to JSON:\n{'my':'test', 'yes':'hello', 'from':'world'}\nThis makes sense, as in JSON as soon as special keys are used, an object is necessary. You could use stdClass objects instead of arrays for all params that are described with {}, but it is just convenient to use arrays.\n. Thx for your addition.\n. Thx. I merged it and I will add the return with my next commit.\n. Thanks for your addition.\n. I merged it into master. Thx.\n. Hi Shumkov\nCan you be a little more specific? I assume you would like to see some commands in Elastica to handle the memcached plugin?\nNicolas\n. I took a closer look at this memcache transport layer. I'm not sure if I'm completely understanding how this would enhance the current client or better how this should work. Can you give me an example?\n. Thanks for the detailed description. I think I understand how I could implemenet it etc. and I also see where the usage is for example for the thrift interface. But I'm not sure why I should use the memcache instead of the HTTP interface. What is the advantage? Is there any speed improvement using the binary protocol? Other reasons? \nPS: I agree that it can and should be added.\n. Good to know. I will look into this after the implementation of searching on multiple indices and types.\n. Interesting numbers. I assume you used the php memcache extension to create this comparison.\nProbably there will be some changes needed because the GET request do not support a body, so it has to be placed as source. But this shouldn't be a big problem if (as you described) _callService is moved to the request object.\n. In the last commit I seperated the transport layer from the client and request objects. I also started to implement the Memcache transport. But I'm having some troubles. It does not work yet. Can you post some code of your memcache client implementation (for example the code for the benchmark above)? This would help.\nHow do you handle PUT request? Do you use set for that?\nHere you can find the current implementation (not working): https://github.com/ruflin/Elastica/blob/39934d9f08bc30c00dc5ce97a664f1a6ff6e0408/lib/Elastica/Transport/Memcache.php\n. Interesting remark. So do you use the memcache transport with elasticsearch in combination with php? If yes, can you post a code example?\nIt's not really nice that we have to patch the pecl memcache lib to get this running, but I assume someone that needs this additional performance is willing to do it.\n. :+1: \n. Thanks for pointing this out. I just fixed it:\nhttps://github.com/ruflin/Elastica/commit/af122667b0b3e368956066fcb512e93a88102da3\n. Thanks for your additions. useDisMax looks good.\nI'm not sure about the second search argument. Can you give me an example where it makes sense to set the query params as an additional parameter instead of directly set it to the query before passing the query to the search function?\n. If I understand you right, your goal is to be able to reuse the same query several times. So the following is not an option for you, because later and you want to use the same query with size => 20?\n$index = new Elastica_Index($client, 'something'); \n  $query->setParam('size', 10);\n  $index->search($query);\nIt somehow seems to me like you try to improve the query factory method (create) to pass additional params? So it would be perhaps better to change something over there?\nI don't think that it is a good idea to move these params (if necessary) to the index, as they clearly belong the query.\n. I think this goes in the right direction. But I think this is not going to work as it is at the moment. If the given object is already a Elastica_Query object, the same object will be returned. So you would modify the original. It seems like here we have to add a clone method.\n. I assume you are going to do the changes. Is that ok?\n. As far as I know it should be possible to add more commits to a pull request. But because the code is pretty different from the last one, it could make sense to create a new one. Make sure to merge all commits from yesterday.\n. Did you already have some time to change it or do you still have some issues with the repos?\n. Done\n. Is that an urgent request?\n. I would keep it open as I still think it could be a good idea to implement this at a later stage.\n. Closing as a very old issue and so far was not requested again and PR was provided. Please reopen if needed.\n. I think this is a feature that is really needed. As far as I remember, someone started to work on that some time ago, or at least we were discussing it. But I haven't received any pull request for this yet.\nProbably this refactoring could be done in combination with the refactoring for adding different transportations (see issue #33) as it needs some additions to the client.\n. I added support for multiple servers in my last commit (see link above). Currently just a round robin is made. You can use it by just passing an array of servers with hostname and port to the client:\n$client = new Elastica_Client(array('servers' => array(array('host' => 'localhost', 'port' => 9200))));\n. Can you do some testing on it? Probably there are still some issues I haven't thought of yet.\n. There is now also a blog entry about it. I hope to improve it in the near future. I will close this issue now.\nhttp://ruflin.com/en/elastica/165-using-elastica-with-multiple-elasticsearch-nodes\n. Thanks for this very nice addition. I just merged it into the master branch. It would be nice to have multiple ids also in the filters :-)\n. Perfect. Thank you.\n. Thx for the addition. If you have some time, some tests to verify the function would be nice.\n. Thx. I just merged into the master. Would be nice if you could add some documentation and tests to verify the code.\n. I didn't even know that the text query exist. Until yet I have built this myself. This should definitively be added to Elastica.\n. @biswajitdas Should be fixed now. Was probably too early today in the morning. But I haven't tested it yet with ES. So please report any additional errors/problems.\n. It should already be fixed: https://github.com/ruflin/Elastica/commit/25ae19ffc90ef0b5a171684207831a5b3c823beb\n. Does it work as expected?\n. I will close this issue as it is resolved now. The code will be in the next release.\n. No problem. I know the RLS pretty good ;-)\n. Very nice. Thank you.\n. I really like your pull requests. They are always well documented and tested. This makes it really easy to just merge them. Thank you.\n. I just run the tests on my machine an the following problem appeared:\nxodoa:Query ruflin$ phpunit FuzzyLikeThisTest.php \nPHPUnit 3.5.14 by Sebastian Bergmann.\nF\nTime: 0 seconds, Memory: 6.00Mb\nThere was 1 failure:\n1) Elastica_Query_FuzzyLikeThisTest::testSearch\nFailed asserting that integer:0 matches expected integer:1.\n./Elastica/test/lib/Elastica/Query/FuzzyLikeThisTest.php:35\n. One reasons is probably because you don't have installed the mapper attachment plugin which handles files:\n./bin/plugin install mapper-attachments\nWhich version of ES do you use?\n. You also have to update to 0.16.2\n. I fixed (or better skiped) now one test and the results should be the following with the newest version:\nPHPUnit 3.5.14 by Sebastian Bergmann.\n.................................I............................... 65 / 87 ( 74%)\n............I.........\nTime: 35 seconds, Memory: 11.00Mb\n. One small addition: I just did the codesniffer tests on the new code. It seems like you are using spaces instead of tabs. It would be nice if you could switch to tabs next time. I will change it.\nHere are some notes on the coding guidelines:\nhttps://github.com/ruflin/Elastica/wiki/Coding-guidelines\nThanks for all your additions.\n. You mean you use spaces instead of tabs? I decided to go with tabs with this project and I would like to keep it this way. I know there are a lot of discussions for and against spaces/tabs and I don't want to start this discussion here because I think both options are good decisions. I went with tabs because like this every coder can choose how much indentation he likes in his code. And if some code is indented by spaces in the project, that is ok for me, because it is easy to change. \n. Sounds good (except that you wrote tabs to spaces :-D). Interesting script. And if some parts still have spaces, don't worry. For me it's much more important to have good contributors (like you) then to follow 100% the coding guidelines.\n. Looks good. Thx.\n. Thx\n. Interesting link. So you are getting this string from the query builder? Why are you not just passing the array directly to Elastica query before converting it to a string. As far as I can see, you also store it as an array internally, or at least can convert it to an array. \nI think the query builder is an interesting idea as I already realized that some people that do not understand the whole complexity of queries, filter, facets etc. find it hard to build queries. What do you think of the idea of building the query builder into Elastica? What is the main goal of the query builder you are writing at the moment? Can you give me a code example of the query above?\n. Including it in Elastica wouldn't mean you can't build a submodule based on it. I assume you have an Elastica version on every client anyway, right? You your submodule would extend Elastica_Query_Builder.\nIs it an option for you to convert the string you have first to an array with json_encode($query, true)? Because I think this is not part of elastica and should be handled outside if possible.\nI think the naming you have chosen for the query builder is already perfect, as it would also extend Elastica_Query_Abstract and has a toArray function. So a query built by the query builder could just be passed to Elastica_query or Elastica_Search as an object. Everything else happens automatically.\n. Ok. But it would be ok for you that you have to convert the query string to an array before passing it to Elastica? This is just one command (on the server side).\nIt looks like for you it would not be perfect to have it directly in Elastica as you don't want to have Elastica on every client. In general you would need only two files: Elastica_Query_Abstract and Elastica_Query_Builder. Then you could create a branch of the builder, that does not depend en Elastica_Query_Abstract for your use.\nAnyway, I think this query builder is a great idea and it would be worth to add it to Elastica to help others. Probably it would be possible to just take your code, do some renaming to meet the naming conventions and put it into Elastica. Perhaps someone is interested to do that?\n. My coding guidelines are here https://github.com/ruflin/Elastica/wiki/Coding-guidelines\nIn general they are 90% the same as Zend coding conventions. The main difference in your case is get_class to getClass (CamelCase).\nProbably the best option would be if you create a branch from the master and add your Builder into the query folder and then I can merge it. As far as I can see, it already should just work :-)\n. I will close this issue as I think it has moved to the discussion about the query builder if this is ok for you.\n. Very nice. I think we should later add some tests and also add it to the (still) empty documentation pages.\n. This should not be the case, as Elastica_Query is the object that can handle all the Elastica_Query_Objects, but also Elastica_Filter_Abstract and Elastica_Facet_Abstract objects. All together is one query. It is perhaps not the best naming. \nIf you take a look at the toArray functions, you will see that they are different. In Elastica_Query to 'query' index is included, in all Elastica_Query_Abstract it is not, as this is added by Elastica_Query. I hope this makes sense.\n. Thanks for the addition. I haven't worked with childs and parents yet. But it looks good :-)\n. Thx, merged.\nFor a better query builder, check out issue #53 and pull request #55\nhttps://github.com/ruflin/Elastica/issues/53\nhttps://github.com/ruflin/Elastica/pull/55\n. Sidenote: Here you can check the coding standards: https://github.com/ruflin/Elastica/wiki/Coding-guidelines\n. Kei Problem. Gruess us 5417 ;-)\n. Interesting idea. I have to think about the naming. Will wait form some feedback from @ChrisGedrim before merging.\n. What do you think of the naming Elastica_Query_Builder_*. For example Elastica_Query_Builder_Facet extends Elastica_Query_Builder_Abstract (or implements interface).\nThe functions in Index I would move to Elastica_Query_Builder or Elastica_Search.\nJust an idea.\n. Perhaps some ideas can also be borrowed from here: http://www.elasticsearch.org/guide/reference/java-api/query-dsl.html\n. Looks interesting. What I don't like is that we have to redefine all query and range objects. shouldn't be their a way to do this automatically use the existing objects. I mean from would always map to setFrom or setValue('from', $value) and so on.\nSo that EQB->query()->bool(...) would load the bool Elastica_Query_Bool in the background etc.\nThe main disadvantage for you (@chrisdegrim) is that then you have to deploy the whole Elastica to build queries.\n. I think it should be the other way around, that builder uses the query, facet and filter objects to build queries. I see the query builder as a simplified way to build queries in a shorter and more \"appealing\" syntax. But simplified also means, that the query builder will not have all the features that the Objects have. I think it's not possible to combine both (as simple as possible and enable all possibilities). So I would not change the current query, facet, filter structure as I think this structure works pretty well. It is easy to extend and has a basic structure that works.\nI would not extend Elastica_Builder_Query_Bool by Elastica_Query_Bool. I think there could be three EBQ objects: Query, Filter, Facet. These have some __call functions and there would be some logic to automatically load the specific query objects based on this functions. Perhaps I should create an example with that to show what I mean.\nFor me that is exactly the nice thing about an open source project. There is not just one person that says in which direction it should go ;-) Elastica without all its commiters wouldn't be that powerful.\n. I think the example from @fabian already goes into a good direction, except that instead of manually adding all functions, it should be recognized automatically. I will try to create an example :-)\n. In the following I made a short draft. It is in general the same that fabian wrote, just shorter (all in one file). To work properly we would probably need to extend Elastica_Query_Abstract, Elastica_Filter_Abstract and Elastica_Facet_Abstract. But that is something I already want to do for a long time to better unify the queries. Here is the example:\n``` php\nclass Elastica_Builder\n{\n    protected $_active = '';\n    protected $_object = null;  \npublic function query(array $params) {\n    $_active = 'Query';\n    return $this;\n}\n\npublic function filter() {\n    $_active = 'Filter';\n    return $this;\n}\n\npublic function __call($name, $args) {\n    $objectName = 'Elastica_' . $this->_active . '_' . $name;\n    $this->_object = new $objectName($args);\n    return $this->_object;\n}\n\n}\nclass Elastica_Query_Abstract\n{\n// One of both options. Either setParam is always available or call for all setters\n// Same for filters and facets\npublic function setParam($key, $value) {\n    ...\n}\n\n// Or we use __call for add* or set* or find a combination?\npublic function __call($name, $args) {\n    $functionName = 'set' . ucfirst($name);\n    $this->$functionName($args);\n}\n\n}\n$builder = new Elastica_Builder();\n$builder->filter()->range()->addField('..')->addField();\n```\nThe main disadvantage of this method is, we can always create only 1 query, 1 filter or 1 facet object. Also if we want to add a filter to a filtered query, we have to create a new object. This is probably the simpler solution.\nI can also think of a more complex solution that looks more similar to the queries shown in issue 53 https://github.com/ruflin/Elastica/issues/53\nFor this it would be necessary to always return the $this object in __call and store the current active node and its parent node. Then a function end() would be needed, that closes this object and moves to the level before. In a way I like this idea because it would allow pretty nice queries but it would lead to a complex __call function.\nWhich one do you prefer? Both would use the already existing objects what I think is good.\n. @ornicar I think preventing static functions is a good thing. But sometimes factory methods are just handy ;-)\n@fabian I'm also not a big fan of the magic methods, but sometimes they are really useful. I see the huge disadvantage of not having code completion. But what I dislike even more is duplicated code :-) And using the __call function here could prevent us from having lots of duplicated code. And it would allows us to use all the new functions in the query objects without having to modify the builder.\nI'm hesitating a little bit to merge the PR as this would mean we already have two different query builders in the project, and a third one would follow. Perhaps we should create a branch to develop on these query builders, so we can try out all three methods without having it already in the master?\n@both I would say I can already predict that the code of this builder will not be the \"nicest\" code in Elastica. But I think that is somehow acceptable as the query builder will not be a core part of Elastica as it will not be used by other objects (or at least that is what I expect). I should be shortcut-mapper to build queries with less code.\n. I created a new branch and merged the code from fabian into it:\nhttps://github.com/ruflin/Elastica/tree/query-builder\n. I'm not sure what is the best way to do it. I would like to have a repository where all can commit without having to merge it all the time. Should we do that in your repository, or should everyone work on its own idea in a branch and then we check which one(s) work best?\n. BTW: I'm just checking your code. Looks promising :-)\n. Probably you are right. And everyone should develop his solution and then we can check. I hope to have some more time next week (wednesday) to take a closer look at the different solutions.\n. Interesting. I we would use namespaces in Elastica, we wouldn't even have to define the aliases, right?\nThe code is really clean like this, but I'm not sure if it eliminates the need for a query builder. Let's see with what @chrisgedrim came up in the last weeks. \nThx for showing this solution to us.\n. I still see big potential in a query builder, but lets wait until someone has time for it ;-)\n. Thx for your addition.\n. Looks good, thx. The hasFacet is not yet revert, right?\n. Thx. I just merged it.\n. Hm, tests are also failing with ES 0.17.2 :-(\n. Ah, you wrote 0.16.2 :-) not 0.17.2\n. I hope shay or someone of the other guys can help:\nhttps://groups.google.com/forum/#!topic/elasticsearch/oXCTNrZx99s\n. I waiting with committins this pull request until we have the problem with ES 0.17.4 fixed. I made some comments into the code to remember the refactoring ...\n. I just merged the pull request. Tests are working now as I replaced fields through mlt_fields. But I'm not sure if the MLT Query is now working like expected (see forum post above). \n. I just did some pretty heavy refactoring of the MoreLikeThis query in combination with the new introduced Elastica_Param object:\nhttps://github.com/ruflin/Elastica/commit/9973c8f2d6daadf0a250a1ef5f03bde707c48621\nI plan to refactor all filter, queries and facets like this.\nOn main change I did is that if an invalid value is set (< 0) it is not reset to default. I think then an exception should be throw or at the moment it is up to the user to create valid queries. ES will throw and error as soon as the querie executes.\n. Hi\nLooks good. I just merged it. Will check it later today.\n. I finally got some time to check the tests. They normally failed. I made some changes to the tests:\nhttps://github.com/ruflin/Elastica/commit/e2111d8c7089ff844f495686e8180e03d39e3fef\nCan you please check if that makes sense? Before normally I had already 2 matches for the first query (which makes sense I think).\n. Sometimes the tests also passed on my machine. But I'm not sure why they passed some times :-)\n. Sounds good. Looking forward to the pull request :-)\n. Actually this was the right command. Both exist. If you use ant codesniffer, human output is created. ant phpcs will generate computer readable output ...\n. Did you pull the most recent changes from the master? Can you check your build.xml file if it is the same as this one? https://github.com/ruflin/Elastica/blob/master/build.xml\n. I added it some days ago (probably thursday or friday) and also updated the wiki at the same time. Good that it is working now.\n. Thx for all the cleanup. This is very useful.\n. That is a pretty fast adoption of the new Elastica_Param code. Thx.\n. Was probably too early in the morning ;-)\n. Or trying to implement new features: https://github.com/ruflin/Elastica/issues/46#issuecomment-1752459\n. I implemented it now as described above\n. Thx. I just merged it into master.\n. I just fixed it with the most recent commit (and added a test so it doesn't happen again): https://github.com/ruflin/Elastica/commit/1061678622da51a94221eee90cac90e9295d018d\n. I hope this helps. I added a test for setSort in Elastica_QueryTest\nhttps://github.com/ruflin/Elastica/commit/87e744d8204bd9caed561a5eb7ddb05be9eaf5de\n. Thanks for describing the problem in such details. I did not have the possibiltiy yet to check the docu. Here my thoughts:\nIf I understand you right, the difference between the short any long notation is the addition of the filters array inside the filter name. If this works for all filters, it should be pretty easy to implement on the level of Elastica_Filter_Abstract.\nRenaming setCached to setCache(bool) makes sense. This function would also be on the level of Elastica_Filter_Abstract I assume. As far as I understand, all filters can be cached, but some are cached automatically, others are not. If not, it would be good to know the exceptions. Implementing caching for every single filter does not seem to be that nice ...\nOn 25.08.2011, at 10:32, jappievw wrote:\n\nFilters can become cacheable by setting the _cache parameter to true.\nSome filters require a different format for the filter in order to supply the _cache attribute. Shay just updated the documentation about the longer format for the and-filter. Copied below as an example:\nShort notation\njavascript\n{\n   \"filtered\" : {\n       \"query\" : {\n           \"term\" : { \"name.first\" : \"shay\" }\n       },\n       \"filter\" : {\n           \"and\" : [\n               {\n                   \"range\" : { \n                       \"postDate\" : { \n                           \"from\" : \"2010-03-01\",\n                           \"to\" : \"2010-04-01\"\n                       }\n                   }\n               },\n               {\n                   \"prefix\" : { \"name.second\" : \"ba\" }\n               }\n           ]\n       }\n   }\n}\nLong notation\njavascript\n{\n   \"filtered\" : {\n       \"query\" : {\n           \"term\" : { \"name.first\" : \"shay\" }\n       },\n       \"filter\" : {\n           \"and\" : \n               \"filters\": [\n                   {\n                       \"range\" : { \n                           \"postDate\" : { \n                               \"from\" : \"2010-03-01\",\n                               \"to\" : \"2010-04-01\"\n                           }\n                       }\n                   },\n                   {\n                       \"prefix\" : { \"name.second\" : \"ba\" }\n                   }\n               ],\n               \"_cache\" : true\n           }\n       }\n   }\n}\nShay advised to use the longer format for use in libraries on the mailing list.\nProposed changes\n1. Use the long notation for all filters.\n2. Rename the current setCached function to setCache(bool).\n3. Only implement the setCache on those filters which support caching.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/76\n. Any updates?\n. I'm not sure if this makes sense. If you want to use the default, why do you set it?\n. Is it possible to always use the cache structure? If yes, we should always create this one also if no filter is set. This will simplify the code.\n. Ok, so we should extend Elastica_Param with hasParam, right?\n. hasParam is probably simpler, right? And it will be available for all other places where Elastica_Param is used.\n. I don't think so, but we never know. I would implement it when we need it (as you did it for hasParam()).\n. Or BooleanAbstract? Are there other similar ones?\n. In general I think it is a good idea, but I don't want to mess up the Elastica_Filter_* namespace with abstract filters :-( Any idea how we could solve this? Traits? ;-)\n. What do you think about Elastica_Filter_Abstract_Multi? Like this we do not clutter up the Filter namespace and leave the option open for other abstract classes (perhaps Geo*?).\n\nSide note: I plan to upgrade Elastica to PHP 5.3 with namespaces etc. I even would prefer PHP 5.4, but I think most users are not ready for that yet. With this step we will have an issue with Abstract.php files. I not 100% in favor of the Hungarian Notation. So the solution here would be for example Elastica_Filter_Abstract_Base for the current Elastica_Filter_Abstract. But probably we should move this discussion to an other thread.\n. Finally :-)\n@jappievw I hope you agree\n. Looks good. I merged it into the master. I will check it in more detail an other day.\n. I think PHP notice should never happen if possible. Somehow I agree that an exception is hard to throw. But if someone calls getFacets, he expects at least one facet. If a facet query is made, is facets set or not, also if it is empty?\n. I merged your commit. Still better then the current version. Were you able to do some investigation into my last question?\n. Finally I get back to you. Good to see. Somehow it looks like in the future we should implement a special object for facets results as a lot of additional information is sent.\n. Merge to master. I assume there is no test for the scripts field ;-)\n. Ok, let me know if you have some more details.\n. Perhaps getError should also be changed, that it throws an exception if no error exists. An instead of using isset(...) it should use the function hasError. \nWhat you think?\n. Probably you are right, an throwing an exception here is not the best idea.\nCalling getData() twice with the current implementation is a problem because the processing is done twice. Probably it would make to place the data processing (now in getData()) in an _init() function and call it in the constructor only once. Like this getData() would only return a variable and it wouldn't be a problem to call it twice. Also to \"reinit\" the data, the protected function _init could be called (as it is done in other Elastica objects).\n. As far as I can see, there are no blockers at the moment. The main problem is, that I'm traveling at the moment and don't have an internet connection too often. I will try to merge it ASAP.\nOn 02.09.2011, at 08:04, caphrim007 wrote:\n\nI changed the assertion to use the fail method.\nI think we should consider the hasData changes (hasError and refactor) for a different set of pull requests. I'm a little bit swamped right now, but I can do them based off of what you outlined earlier.\nAre there any blockers that would prevent the current changes from going through?\nIf so, let me know and I'll fix them. Otherwise, I can send another pull request with the changes to the test suite.\nThanks,\nTim\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/84#issuecomment-1979806\n. I just merged it. Thx.\n. I merged it into master. We can check for my last comment later.\n. I think we should go for option 2. Because if someone requests a specific document, he normally expects it to exist (I assume). So an Elastica Exception should be thrown. \n\nI will implement this. Thx for pointing it out.\n. Now it throws a Elastica_Exception_NotFound\n. Issue is resolved in the last commit\n. Thx for the update\n. I think the Memcache transport is not working yet. There are still some issues with the php memcache extension. \nhttps://github.com/ruflin/Elastica/issues/33\nPerhaps you can help us out here?\n. I close this issue as it is related to #33 (not implemented yet)\n. I use it exactly the same way in one of our setups. The problem is probably, that you use the same alias object. So the question is how this object know, that something on the server side changed. One option could be that a refresh is done every time you update something or always store/use the \"original\" index name (like you described above). I try to look into this issue next week. \n. Ok, good to know. Is the documentation wrong or what should I change?\n. Merged. Thx :-)\n. Very nice. Thx.\n. I did not make any tests if it works, but it looks good. Thx.\n. I had to make a small change, as the default optype was not set and because of this, tests were not running anymore. Now the default optype is set to an empty string? is that as expected?\nhttps://github.com/ruflin/Elastica/commit/c0b34089a3ee5a8612e6f3973861fcdf31dee5b1\n. Where is this exception thrown?\n. By the way: It would be nice if could add some unit tests.\n. What should exactly happen if this exception is thrown? Should it convert to a Elastica_Exception_AlreadyExists?\n. Assuming you are using the QueryString query, you can set the default Operator to AND:\nElastica_Query_QueryString::setDefaultOperator('AND');\nIf you use the Terms query, you have to set the minimal match to the same number as terms.\n. You're welcome. I would recommend to ask similar questions in the future in the Elastica Google Group as the issue tracker is more related to bugs or features requests for Elastica.\nhttps://groups.google.com/forum/#!forum/elastica-php-client\n. This means adding some of your documents in your bulk requests is failing. There are different reasons for that.\nYou should make a try catch block around the bulk request call and catch Elastica_Exception_BulkResponse. Than you can use getFailures on the exception object to get more information on which documents failed, which probably gives you more details to find the \"invalid\" documents.\n. Hi\nI assume you are using addDocuments somewhere. You should create a try / catch block around it (as described above).\n. I closed this as I didn't get any message back in the last two days. So I assume it worked. If not, please reopen the issue.\n. This seems to be a problem of elasticsearch or the way you add the content. Elasticsearch does not seem to be able to define the content type: https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java\nCan you please post the code you use to add content?\n@kimchy Perhaps you can help here?\nThis was also posted here. @thujeevan Please do not double post in the future.\nhttps://groups.google.com/forum/?fromgroups=#!topic/elastica-php-client/UBncytAS3mM\n. As elasticsearch is in a way a document store, I would not think too much of denormalization. The goal of a search engine is to find your data as fast and as simple as possible. So it can also happen, that you store the same data twice in a different (preprocessed) format optimized for retrieval.\nWhat are your queries going to look like? This is going to define, how you store the data. One option is to store all data twice.\n. I merged and fixed the test name (copy / paste error)\n. This was a typo. Thx.\n. Thx as always ;-)\n. The reason on of the tests fail is that the file plugin has to be installed in elasticsearch:\n./bin/plugin install mapper-attachments\nNice idea by the way.\n. Can you also update changes.txt file?\n. Is it with travis also possible to run things like code sniffer?\n. Merged. Thx :-) \nHow do I start a build?\n. What is really nice about this travis is, that I planned to publish my own jenkins setup in read only mode for everyone to make this available. The only thing I'm missing at is the codesniffer and some nicer stats. But I'm almost sure theser are coming :-)\nAre you one of the creator of this project or \"only\" a contributor?\n. Thx for the update guys. If one of travis-ci guys is around Basel (Switzerland) one day, let me know. I would like to invite him to one of the webilea events as a speaker: http://webilea.ch/\n. @rayward: You are right. This is quite a security issue. We should set it to true by default\n@maeti: In general, good idea with the flag. But is it a good idea in general to allow not verified? I see the usecase more in a testing environment.\nThere are additional flag we should take into account:\ncurl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);\nBut than we have to use CURLOPT_CAPATH option to add certs:\ncurl_setopt($curl, CURLOPT_CAPATH, 'cert.pem');\nWhat you think is best?\n. Very good idea. Does anyone have time to implement that? That also fits the general Elastica approach. Allow \"everything\" through a general API, but also implement some often used features more specific.\n. Now it is possible to set curl params in the config (see commit https://github.com/ruflin/Elastica/commit/ba88bd0f7408fa39c656a99b2d6648b92025e9a0)\nhttps://github.com/ruflin/Elastica/pull/107\n. Closed\n. Perhaps we should create a complete array for transport options, because I'm sure more will follow. For example:\ntransport => arrray(\n    'type' => 'https',\n    'verifySsl' => '...'\n).\nTo make it backward compatible, the option of only a string for transport should be allowed.\n. I added to possibility to set the curl params in the config (see commit) to solve this problem.\n. Thx for your addition. We should probably define if we go with indexes or indices. As far as I know, both are perfectly fine in english. I would prefer indices (addIndices(...)) as the local variable is already indices.\n. Thx for your addition\n. Sometimes production is quite a good test. And I'm sure if something goes wrong, it will be fixed ;-)\nthx\n. I'm loving it :-) Perfect. I had to merge it right now :-)\n. The most important link in the README.markdown should now be to this help page. You can also remove most of the other stuff in there that is not needed anymore.\n. I don't really know why it failed. I had similar unexpected issues some time ago, but I never figured out what the issue was, because I wasn't able to reproduce it.\n. I just realized the the travis icon somehow disappeared. Can you readd that?\n. Strange :-) Thx for adding it.\n. Perhaps it would make sense to add the specific Elastica bootloader to the documentation so it doesn't conflict with other autoloaders. An example can be found in the tests:\nhttps://github.com/ruflin/Elastica/blob/master/test/bootstrap.php\n. Seems to work. Thx. \nAt the moment you start 1 or 2 nodes?\n. Yeah, because the cluster tests need two nodes before the tests are started, otherwise the tests are skipped. I just checked your files and as far as I can see, only 1 node is started. It would probably quite more complex to start two nodes and still make sure, that they don't discover other nodes. Probably it could be done with some elasticsearch startup variables or a yml file.\n. I have never used percolate until yet. So I have to check it a little bit more in detail to be able to implement:\nhttp://www.elasticsearch.org/guide/reference/api/percolate.html\nHow would you expect the implementation? You have a percolate object and pass a query or a document to it? Or should it be part of the query and the document?\n. I just commited a first version of the percolator as described above. Can you please try it out. You can find some examples in the test (see link below):\nhttps://github.com/ruflin/Elastica/commit/612cc8218a50747bbc56815fb288d0a7b732640c\n. The type part is exactly the part I didn't really understand. Perhaps you can explain this to me.\nhttps://groups.google.com/forum/#!searchin/elasticsearch/percolator/elasticsearch/1n4GaUHxrEk/bgBAsTGtN14J\nThe percolate part for the document looks good. Can you create a pull request out of this including tests if possible?\n. I close this issue as this is implemented as far as I can see.\n. Thx. Did you do any manual or automated tests on this?\n. Very nice. It will be in the next Elastica release.\n. Can you provide your code as a Gist or directly here in the issue?\n. I'm not sure if this problem is related to Elastica. Since quite some time Elastica_Client uses an array as parameter for host, port and other options. So the question is how this config file you added here is inserted into the Elastica_Client. Is this a Symphony project? I would assume it makes Elastica_Client($host, $port) instead of Elastica_Client(array('host' => $host, 'port' => $port)).\nPerhaps you can check this with the guys from FOQElasticaBundle\nhttps://github.com/Exercise/FOQElasticaBundle\n. Interesting idea. Is it possible to configure elasticsearch like this or are you using a proxy or something similar?\nI see two options:\n- url: like you propose it\n- path: A third path variable that is added in front to every request\nIn a way I think best would be to implement both. If url is set, all the others are overwritten, if not, the option set or the default is set. Both should also be possible in the server array for multiple server. What do you think?\n. I added some code the to the master repository. Now it should be possible to set path or url. As I don't have a proxy setup here, can you try this out?\n. Ok, good two know. So there are two options:\n- write a good documentation\n- or we add it automatically\nIt looks like you prefer point 2. The issue I see here, that perhaps we need it one day with /, and than we have some backward compatiblity.\nOne more suggestion: if / is missing, we throw an exception. Instead of \"fixing\" the code we point out the errors from the beginning. What do you think?\n. I just don't like that I have to fix in my code the code from someone else ;-) Do you think throwing exception is a good idea?\n. Sorry to go on with the arguing ;-) I'm not sure with we talk about the same use case. My assumption is: The path is set in a config file or hardcoded into the code. So it is nothing dynamic that changes too often, right? So the developer (not the user) has to add the path. Or how does your usecase look like?\n. I probably go with the option, that the Drupal module has to fix this issue ;-) I hope this is ok for you.\n. Closed\n. Thx.\n. thx :-)\n. I is actually worse: The Elastica documentation is outdated. Multiple indices and types is supported now by\nElastica_Search\nElasticsearch itself supported it from the beginning, but Elastica was not able to handle it. Now you can do it. I should really update this part of the documentation. Thanks for point that out.\n. If you have some time: Can you update the doc that everyone understands it and make a pull request out of it?\n. Actually, the first part is already implement in Elastica as Elastica_Log. You can set this during creating an Elastica_Client. Here are some examples how to use it:\nhttps://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/LogTest.php\nThis works for all Transport and not only Http and can be enabled and disabled.\nIf I understand you right, your second script reads out the log and resends all commands. I think it would be necessary to add the log file path as a params, as not everyone wants to store the file under /tmp/elastica.log\n. Ah ok, a lot of things happened since september. I also plan to \"enhance\" the logging so that Log adapters can be added. For example if someone wants to write the log to a database or similar.\n. Yeah, MLT is under quite heavy discussion:\nhttps://groups.google.com/forum/#!topic/elastica-php-client/ASwnWP_0iMo\nhttps://groups.google.com/forum/#!topic/elastica-php-client/1l9s80v0KMo\nFeel free to add your ideas.\n. What is the current state of this pull request? As far as I can see, most of it is already in our code?\n. Ok, thanks for the update.\n. Ok, I see. So the old part didn't work? Based on what I see, it seems like the old version was just wrong :-)\nProbably we should write some tests to make sure it works. I never used nested filters until yet.\n. Thx. Seems to work as expected.\n. Some tests for this would be nice. Do you use it in your project?\n. Do you have any updates here?\n. Ok, I will close this pull request.\n. Sorry about not responding to your comment. Somehow I haven't received the notifications from github in the last days.\nActually I really think a test is necessary. If we have one, things like in the first commit wouldn't happen. Or how do you know that it will work this time?\n. This would be nice.\n. Any updates on this?\n. Let me know as soon as it is ready. Thx.\n. Resolved in pull request #160 https://github.com/ruflin/Elastica/pull/160\n. Thanks. See my comments to the commit. I think we should not limit by default. Also like this we would break backward compatibility quite hard.\nIf you have some time: Can you ask on the ES group if there is still some possibility to return all results without setting limit to a high value?\n. Thx. Keep me posted.\n. I think we fixed this issue. I will close it, ok?\n. Sorry, I haven't seen your update. So is there any solution to return all results with an other param? Or is it always necessary to set the limit.\n. Ok, so that means we can go with your new solution, right? \n. thx\n. Thx\n. This is already implemented. The variable name is 'url' => getenv('ELASTICSEARCH_URL')\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php\nProbably I should improve the documentation of Elastica_Client\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php\nI'm looking forward to the Heroku implementation. Perhaps you can also link it in the Wiki pages.\n. Ok, thx. I will close this issue.\n. This makes 100% sense. Thx for fixing it.\n. done. thx ;-)\n. In general I don't like the output buffer. But in this case it is a lot better than the other solution where we would probably loose some of the performance. So in a way, all the changes that are necessary to fix the bug is to remove the RETURNTRANSFER and all other changes can be reverted, right? If yes, I think we should go with this solution.\nThe question is probably if it is really a memory leak or if curl \"should\" store the return values ... But that doesn't matter for us as long as your solution works.\n. All tests run as expected.\n. This is not in Elastica yet. But the implementation should be quite easy and can be done similar do delete and Index. Interested to code it an make a pull request. I would really like to have it in Elastica.\n. Interesting. I expect the types to be in index stats, but I also couldn't find it. The best way I found until now is to read out the mapping of the index. Assuming the index name is elastica_test, it looks like this. I would suggest to add a method Elastica_Index::getMapping()\ncurl -XGET 'http://localhost:9200/elastica_test/_mapping?pretty=true' \n. So we have the getMapping function now. What is still missing is the exists method. Or how should we go on with this?\n. I would call it exists, as it only checks if the type exists. If this is inside the mapping or somewhere else doesn't matter, right? I think it would be nice to have and could be used in the delete test.\n. @farrelley @lavoiesl Any updates here?\n. Closing this one as the delete type part was implemented and exist does not seem to be necessary.\n. Very nice\n. Can you add the link the error that you posted in the FOQElasticaBundle?\nWhen exactly does this error happen? Can you provide some more code (perhaps a working one and a not working one)?\n. thx\n. Thx. I'm looking forward to your pull requests. Let me know if you have some questions / issues.\n. Thanks for the addition. It would be nice if you could add some tests for it. I haven't checked the code in detail.\n. Perfect. I think there is also space missing in the file header.\n. First, thx for the commit. I will try to check it this weekend in detail. One remark: Please no code \"branding\". We have the version system to see who changed what. You can add yourself in the header of the file if you like and update the changes.txt file.\n. I thought a little bit more about your code and had an idea. Instead of just adding more and more params to search and create, we cloud make the second param an array. Like this we can add more params in the future without changing the API. For backward compatibility there should be a check is_int or is_bool. What do you think?\n. Yes, this goes exactly in the right direction. I would probably go with multiple if clauses instead of foreach but both is ok. Perhaps foreach has the advantage to throw an exception if a param is set that does not exist?\n. Ok, I think you are right. We should go with the foreach option but also add a default switch which throws an exception? Can you update the code and also add some tests? We have to make sure, it is also backward compatible. We can remove this part at a later stage.\n. Ok, then it is the best time to start. If you need some help, let me know. Probably it's best to copy an existing test and modify it.\nOn 25.03.2012, at 19:46, comulinux wrote:\n\nOk Ruflin, I will update the code in few days, but this will be the first\ntime I work with PHPUnit so may be it take me some time (or not, I don't\nknow :-) )\n2012/3/25 Nicolas Ruflin <\nreply@reply.github.com\n\nOk, I think you are right. We should go with the foreach option but also\nadd a default switch which throws an exception? Can you update the code and\nalso add some tests? We have to make sure, it is also backward compatible.\nWe can remove this part at a later stage.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/144#issuecomment-4680931\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/144#issuecomment-4683111\n. I would recommend you not to depend on the raw query. What is probably important for you is if the php structure that should be created by your new create function looks ok. You can trust that the creating of the raw query etc. works as expected. Probably also relevant is, if the response contains the answers you expect.\n. I did a small review. probably I also have to read a little bit more about the routing to understand if the tests make sense. I would recommend to also write some tests that fail (or in other words, test you check to fail).\n. Don't worry, I'm patient. I actually really appreciate that you get into unit tests for this. I hope this learning will also help you in other areas.\n\nLet me know as soon as you have some updates.\n. Please check this pull request. I looks like there are going to be some conflicts:\nhttps://github.com/ruflin/Elastica/pull/149\n. So this is ready to merge? And if it is merged, I can also close pull request #149, right?\n. Thank you very much for your code. I'm looking forward to more commits from your side. If you have questions concerning test, let me know.\n. Thank's for pointing that out. To save me some work, can you directly open a pull request with this? The pages are just a Elastica branch:\nhttps://github.com/ruflin/Elastica/tree/gh-pages\n. Perfect, thank you.\n. Actually, this is exactly what I wanted to suggest you. If you have some more issues, let me know.\n. This pull request was done in Pull Request #149\n. No option to delete issues, but closed is good as well ;-)\n. Hm, this is strange. My first thought was doing a frefresh. But this is already done. Can you try to do a second refresh on line 240\n. Can you try the \"this is a really ugly code\" solution? This means, add a sleep of about 5 seconds.\n. Is it possible reproduce it on the command line? I assume it is related to elasticsearch and not directly Elastica. If you enable logging in Elastica, it will print you out the exact commands to reproduce it. Like this, you could post it in the elasticsearch group.\n. I'm surprise that elasticsearch is not returning any answer, not even success or something like this. Is this as expected?\n. Very interesting. And if you execute the same commands with curl, no error 500 is returnet?\n. Ok, so which line did you exactly modify that it worked?\n. Ok, I think the second one is probably a general issue and this should be fixed. Did you run all the command at once and it worked? Or you paste one after the other? I still have somehow the feeling it is a time based issue :-)\n. I would suggest the following: You add the test like it \"should\" work, but add a $this->marktTestIncomplete() at the top with a message why it is not complete yet. Then I merge it. There are some other tests with similar issues that fail sometimes but I haven't figured out why yet.\n. Merged. I wouldn't be surprised if the failing tests are somehow related ...\n. I was able to resolve the issue. It was related to a persistent connection. But I still haven't figured out, why this is the case. At least, it is working now.\n. BTW: I just release Elastica v0.19.3.0. Can you update the documentation / api?\n. thx. I'm not sure if you realized it, but I made some refactoring to the request function. Now you can pass query params directly as fourth param.\n. Hi Alex\nThank you for you addition. I will take a close look at your pull request next week.\n. Sorry for the delay. I'm still not 100% sure about the naming and the construct, but as I don't have a better solution, we should move forward. I wouldn't create the abstract class yet. But I agree with all the other points. \nAre all the discussed points already in the pull request or you have to update some more things?\n. Sorry, but just one more thought came to my mind. I didn't check it in detail. As far as I know, there are other things that can be done with scripts. How similar are these scripts to the one here? \nSo perhaps it would make sense to create Elastica_Script for all general script things, and make the following function:\nElastica_Type::updateDocument(Elastica_Document $doc, Elastica_Script $script, array $params = array())\nPerhaps this doesn't make sense at all :-)\n. I wouldn't call it premature optimization in this case. I only want to make sure that we are not going to completly change the API in two months.\n. Looks very interesting. What type is $script in Elastica_Script? Backward compatibility is not a must, but for all the user of Elastica we should keep it the changes to a minimum.\nI'm not sure if in your example the type is missing if you only pass the document $id and not the full Elastica_Document object.\n. I think this goes in the right direction. Did you work with scripts also in other places? As I never worked with scripts until yet it is hard to say if this string as contructor makes sense.\nYou are right about passing only the id. We can have a proxy functions in type, index and document where we need less params.\n. Looking forward to it. Thx\n. I added one more small comment. After this, I think we can merge it.\n. Merged :-)\n. thx\n. Probably we should add a test in Elastica_IndexTest to figure out. Can you do that?\n. Take your time. I think it is a good idea to update the documentation and make sure what happens. But a wrong documentation is worse than no documentation.\n. Thx for the update. I will check if I can fix it myself.\n. I will close this as create index will be refactored anywaty\n. I just realized that probable the naming of the function addField is wrong. It should be setField or is it possible to set more then one field?\n. Ok, but then we shouldn't use setParam inside addField I assume :-)\nhttps://github.com/tole42/Elastica/blob/d40e94ba239e519fb642a4dba50aad25d3b22523/lib/Elastica/Query/Range.php\n. Can you update it and also add it to changes.txt because it breaks backward compatibility? Perhaps we should leave the old function in for the next release as a proxy but mark it as deprecated in the documentation (@deprecated)\n. Perhaps you can add a small test to figure it out :-)\n. So it should be setField?\n. Hm, but if we can set multiple ranges, it should addRange. I'm confused.\n. Which one is correct? To both work?\n. Ok, so let's go with set* :-)\n. Let me know, as soon as it is ready to merge.\n. If we have a better solution than before, breaking backward compatibility is ok. Otherwise we have to do it at a later stage.\n. This code came in through an other change, so I will close this pull request.\n. This means, I can close the other pull request, right?\n. @comulinux @kmc Sorry, somehow I lost track here. How are your pull request / changes going to conflict? Can of you two guys merge these to pull requests to make sure they work together? Probably it is simpler to merge #172 into #161.\n. @comulinux At the moment I'm refactoring Elastica. I also took again a closer look at this pull request. I have the following suggestion. I would add an object Elastica_Alias which handles all the complexity. and is also responsible to create and remove the alias. addAlias in Elastica_Index would only be a proxy. Like this it would also be possible to add multiple Indices to an Alias etc. in one call.\n. I will close this pull request as these changes partially did already go into the code and will be completely resolved by issue #297\n. Right :-) Can you fix this with a pull request?\n. thx, merged.\n. There is a fourth param in $this->getClient()->request(...) where you can add query params. The query is build automatically. I would recommend to use this instead of creating the query on your own.\n. Shouldn't we name the function unregister because it is register to add the query? Also in the ES doc it is called unregister.\n. Thx. Perhaps you can add a unit test later.\n. I would go with the plural naming to be consistent with ES. I assume that on index has multiple blocks which are affected by this setting.\n. Nice, thx.\n. Storing nodes which could not be reached is still not supported. Here you can find more details:\nhttps://groups.google.com/forum/?fromgroups#!searchin/elastica-php-client/round/elastica-php-client/DCtUG7Np0vg/4EBXcDpuqogJ\nIf you have some time to implement it, let me know. I have a lot of ideas how we could do it :-)\n. This should now be implemented in master with the new Elastica_Connection object. So I will close the issue.\n. Probably the best option would be to implement it which isn't that hard :-)\n. Sure. Is the NumericRange exactly the same as the Range filter?\n. So someone else could implement it later in more detail, right? As long as it works, I'm ok with that.\n. Even better :-)\n. I assume this example will also help others. Can you \"contribute\" this one to Elastica.io?\nhttps://github.com/ruflin/Elastica.io\n. Elastica.io is based on octopress. So you only have to open a pull request.\n. thx\n. Interesting addition. The only problem I see is that this is going to conflict with this pull request: https://github.com/ruflin/Elastica/pull/161\nPerhaps you can add your thoughts to the discussion.\n. Seems like these changes are already in the repo. I'm not sure any more when they were merged :-) I will close this pull request.\n. Thx\n. Hi rexxars\nI agree that the documentation should be heavily improved. I'm still looking for help here, perhaps you can help?\nAs Elastica is a client to elasticsearch, the best point to start is reading about the queries in elasticsearch itself:\nhttp://www.elasticsearch.org/\nTo figure out how the code exactly works, the tests are always a good point to start:\nhttps://github.com/ruflin/Elastica/tree/master/test/lib\nProbably it would be really useful if someone starts the documentation that is not too deep in the code yet and like this the documentation will be on and understandable level.\n. @christeredvartsen Very nice. This will be very helpful for other. I will check it in details next week and will send you some feedback. At the moment I'm still traveling...\n. @christeredvartsen I added your blog post to the Elastica link list: https://github.com/ruflin/Elastica/wiki/Links\nHere is my short review. I added also some notes that just cam to my mind\n- Perhaps you can mention, that in the tests are use cases for most of the queries\n- Instead of using Elastica_Search, it is also possible to instantiate the type/index object and call ->search on it. Like this you don't have to add the type and index manually. But the result is the same, it's only a proxy.\n- Instead of calling toArray() by passing the query to Elastica_Query, you can directly pass the object\nIn general it is interesting to see, that you always used Elastica_Search for all search. It looks like that is the simplest way to query Elastica. Based on this, our discussion to move all the parts to Elastica_Search makes even more sense.\nThank you for your blog post. If you have time to add parts / all of it to the Elastica page, this would be greate. This is just a branch of Elastica: https://github.com/ruflin/Elastica/tree/gh-pages\n. Ah, I see the problem: You should use the Query factory: Elastica_Query::create($query).\n. Ok, I see. But not Elastica_Query is here the issue, but your query or the query Builder, I didn't check it in detail. All classes that inherit from Elastica_Query_Abstract should not include the 'query' part of the request as this is not part of their \"responsiblity\".\n. That is the question :-) We had a extensive Discussion for the query builder. Somehow I could not find the full discussion anymore. @fabian @chrisgedrim Does one of you two guys remember where we had the full discussion including code examples?\nhttps://github.com/ruflin/Elastica/issues/53\nThere were a lot of different ideas. If the query builder includes the query, it should not inherit form Elastica_Query_Abstract. One option would be, to add it in the json array, but remove in the toArray function. I'm not 100% what the best solution is.\n. The documentation is now on http://elastica.io/en \nI will close this issue as it is an ongoing task even though I agree that there should be still more documentation added. I'm still looking for contributions ...\n. Thx. Some additional tests would be nice.\n. Right. Can you update it?\n. Resolved.\n. :-)\n. True, looks like there is no test for that :-( Perhaps we can define in more detail what the structure is this call should return. what is your usecase? \nLooks in general like this function was never finished (no return).\n. but we should fix it :-)\n. Should work now.\n. I think we already had this in other places and it should be fixed. What I'm curious is: When is it exactly the case that the parent id is 0?\n. This would mean \nprotected $_parent = '';\nShould be\nprotected $_parent = null;\nSo we can compare it with null. I hope this does not have any side effects :-)\n. Yes, but then we do not catch null itself. In general I think it is a good standard to set variables to null if they are not set.\n. Should be fixed now.\n. I did not have the time yet to create a solution for that, but I think it is an issue we should look into\n. @kimchy Is it allowed to use # inside and id?\n. Yes, sounds like. I was hoping that it is not supported so I don't have to take care of it ;-)\n. Issue is resolved through encoding the id.\n. It is used, but the line you are looking for is in Elastica_Transport_Http::54\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php\nIt could be, that the query param is not properly implemented in all objects yet. What is the class of $this->_elasticaTypeAvailability ?\n. Ok, but now the question is, why does the delete operation not work?\n. Ok, probably the best option to debug it is to create a small test ;-)\n. In general setParam should work. Most of the other functions are only proxies for setParam(. If you think scope is a necessary function, you could add it.\n. I never worked with the scope yet but I'm quite sure it makes sense to add it. Go for it.\n. A small test to validate the functionality would be nice.\n. Probably a good time to start :-) I already merged it, but I would recommend you to try writing some unit tests. If you need some help, let me know.\n. Thx for the addition. I would assume there is something wrong if your boss doesn't care about unit tests ;-)\n. That is probably the excuse I hear most. The question probably is, if you have more time after the release to fix the bugs that could have been prevented with unit tests. The goal of unit tests is to save you time in the long term.\n. Ok, I see the problem. Do we have the same params in both functions? In a way I don't like that a function does something different in one of the facets, but probably you are right and the filter is not needed in the Facet_Filter. If the params are the same, I think we can leave it for the moment.\n. What if we add setFacetFilter and leave setFilter as proxy for it, but set the @deprecated flag? So we can remove it int two or three releases. This is probably the best option.\n. Looking forward to it ;-)\n. The reason is, that nobody did it so far :-)\n. Did you test this (automated or not automated)?\n. Ok, thx.\n. I agree that there are still tons of options to add to Elastica_Script, as Elastica_Script was just added recently. Feel free to extend it.\n. Interesting. There is a test in Elastica_TypeTest which uses Elastica_Script. This is working => why?\n. Is there a way to combine Elastica_Script for updateDocument and Elastica_Query? This was initially the goal, but I'm not the expert on the Script implementation as I never used it so far.\n. Agree. But what would toArray exactly return? Would it be the same like getScript? Because I don't think it should include the parent key of the array (script) as it could be different in other places.\nThere is one more usage of script in pull request #203 The goal is to make it universal and usable in all places. Would this be the case with your solution?\nSorry that I can't help you at the moment to think it trough in detail.\n. The main reason for this is, that I'm lazy quite often and run the tests from any directory (not only the test directory ...). For example the following code does not work without this inclusion:\nphpunit test/lib/Elastica/ClientTest.php\n. I agree that it is easy to cd to the right directory to run the tests. But I'm quite often in an other directory and just want to run a test without changing the directory. So this would not be possible anymore. Because of this, I would like to keep this code in the files.\n. Yes.\n. Thank you very much for all the tests. I really appreciate that.\n. http://www.phpunit.de/manual/current/en/test-doubles.html#test-doubles.stubs\nCheck getMockForAbstractClass()\n. Sounds like 1 possibility, yes :-)\n. I would refactor the search function in general, so that the we don't have a second and a third and and a fourth param. THe second param would be an array where all possible params can be set. An implementation of this on is already in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Search.php \nWe should use this one also in the other search functions.\n. Thx. An additional test for this would be nice, so we know next time when it is broken. I assume you tested your code on your side.\n. Hi Mathew\nI think you misunderstod the Array query. There is no array query in elasticsearch, it is only a mapper to create every non existing query as it reads in the source code documentation:\n- Pure php array query. Can be used to create any not existing type of query.\nSo what you are looking for is probably the Term query. If you want to do it directly with the array query, you have to add the query type and all necessary fields for the specific query to your array.\nOn 21.06.2012, at 14:39, Mathew Davies wrote:\n\nHi, I'm using the latest version of Elastica with ElasticSearch 0.19.4. Sample code:\n``` php\n<?php \n$search = new Elastic_Search;\n   ->addIndex('index')\n   ->addType('type')\n$search->search(\n   new Elastica_Query(\n       new Elastica_Query_Array(array('name' => 'kimchy'))\n   )\n);\n```\nwhich when executed gives me this error:\nElastica_Exception_Response [ 0 ]: SearchPhaseExecutionException[Failed to execute phase [query], total failure; shardFailures {[Ey0AKaB3Qp-AmvDAEbkL9A][default_index][1]: SearchParseException[[default_index][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"name\":\"kimchy\"},\"size\":1}]]]; nested: QueryParsingException[[default_index] [_na] query malformed, no field after start_object]; }{[Ey0AKaB3Qp-AmvDAEbkL9A][default_index][2]: SearchParseException[[default_index][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"name\":\"kimchy\"},\"size\":1}]]]; nested: QueryParsingException[[default_index] [_na] query malformed, no field after start_object]; }]\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/194\n. Ok, haven't seen your update. I'm glad it works now :-) I would recommend you to use Elastica_Query_Term directly\n. Thx, didn't know that. \n. Do you see this error every time you run the tests or only sometimes? I saw this error before but I wasn't able to reproduce it.\n. I will check this one in detail as soon as we have all other issues resolved ;-)\n. Sometimes I can reproduce this bug, sometimes not. So I would be really interested in a solution here. Perhaps we should contact @kimchy about this?\n. The main questions is probably, when does this NoShardAvailableActionException occur related to Percolator?\n\nElastica_Exception_Response: NoShardAvailableActionException[[_na][_na] No shard available for [org.elasticsearch.action.percolate.PercolateRequest@1b8f162c]]\n. Using only 1 shard was done to actually prevent this problem because I thought it could be that a percolator query is not available on all shards directly.\n. I did not have this issues in the recent months and the current versions of elasticsearch, so I will close this issue. In case someone is still having issues, let me know.\n. Thx. I assume this is going to close Ticket #76 https://github.com/ruflin/Elastica/issues/76\n. Ok, good to know.\n. As far as I know, these cache params changed somehow from older elasticsearch releases. And I also think it is somehow related to #76.\nOr do we now have here the exception with or and and? What are the different levels we can set a cache? I'm quite sure, there should be a general solution.\n. I looks like your new code is the expected one. Can you create a pull request out of this?\n. Why did you close it?\n. Ok, got it. I would say the interface is confusing ;_)\n. Missing options: I think here we can use some constants.\nConcerning setParam(): Yes, we should to that. I already did it for most of the queries and filters, but not all.\nBackward compatitbility: Question is, what has first priority. Probably all params in the constructor should be optimal. What would be your suggestion?\nPHP: Every language has advantages and disadvantages ;-)\n. I agree on that, but what would be the solution to allow both? Because of PHP, we cannot have two different constructors except in the case that we use two different class which inherit from an abstract class ...\nBTW: I'm currently on holiday, so I'm probably going to respond less frequently ;-)\n. Ugh, I don't like the func_get_args function at all. I agree on breaking BC, but I don't know yet how the new implementation would work? Example?\n. I quite like this solution. We could add a \"deprecated\" for the next to releases where we check if there are 4 params and then would convert the old params to the new version bit a function that is deprecated. Like this, people that use the never version should realize.\nPlease make sure to always update changes.txt with your changes because I use this file for the release notes and it makes it easy for people to look up relevant changes.\n. Hm, somehow my e-mail answer did not make it into github. \nThere would be only 1 constructor, be we would use the ugly func_get_args function to check for a fourth param. If we have a fourth param, we call a function (which is deprecated) to remodel the arguments to the new structure. This code will only exist for 1-2 releases, after that we are going to remove it.\n. no, there would be an if clause inside the constructor\nOn 26.06.2012, at 00:28, Pierre Durand reply@reply.github.com wrote:\n\nHmmm, there would be 2 constructors :P\nIt's not possible in PHP, right?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/200#issuecomment-6553942\n. right. even better\n. Finally, my feedback:\n- Is is possible to use both, raw distance and distance_unit, so the user can choose?\n- I think it is good to have the setters available, as it should also possible to modify the values after the object has been instantiated\n- See comments int he pull request ;-)\n. Ah, this strange thing named BC again ;-) \n\nA suggestion from my side: We keep the old constructor, but split up the distance and the unit (regexp, ...). We then store it seperate in the object, which also allows the setter.\nFro the setLatitude(): I would argue, nothing happens until toArray() is called, where an exception is thrown. Either the geohash or the longitude AND latitude have to be set.\nI would suggest, that we have a seperate function setKey(...).\nPerhaps things get simpler, if we do not store latitude / longitude already in an array (even though it is passed in an array) and create the structure for the request in toArray().\nSomehow it doesn't feel 100% logical yet, also what I described above :-(\n. I would be nice ;-)\n. I like both :-) And if only a string is passed to setDistance? Will the function try to split it up?\n. Right, forgot that there were two structures. Sorry.\n. Any updates here?\n. @pierrre As you closed this, I assume this is not needed anymore or already implemented.\n. Ok, thx. Even though I would prefer that you would still use Elastica ;-)\n. I would suggest, we always use the extended filter structure even when the cache is not used.\nWhat does this have to do with Elastica_Param::toArray()\nWhy should we need the array support in Elastica_Filter_Query?\n. In general I think it should not matter for the user which structure is used. Or could there be any problem for the user with that? If we can solve the problem with the extended notation, I'm heavily in favor of this option.\nI don't think Elastica_Param is responsible for the fquery part. I think the right place for that is the Elastica_Filter_Abstract::toArray function.\n. I'm a little bit confused on what all the options are that we have to allow. Can you create a list with the options? What are the different trees? We also have filtered queries, is there anything special about it?\nThe simplest one is obviously\n\"filter\" : { \"filterName\" : {\nAs fquery is only for Elastica_Filter_Query it makes sense to the special options here. I would do it with call parent, but I'm not sure yet why we would have to mess with the filter name, it would only be necessary to add an additional level to the returned array. But I think I'm still missing an important point as I do not understand to 100% what all the trees are we have to support.\n. Ok, looks god. I think we have to write some more tests for Elastica in the next weeks to make sure, all these changes work as expected. But we already have quite a good base.\n. unit tests and functional tests\n. Interesting. Do you also plan to implement this fquery part?\n. Somehow all the tickets we discuss at the moment are related :-)\n. I agree that we should rename _getParam in Elastica_Param. But I'm not 100% happy with _getResultName but haven't found a better one yet. _getBaseName?\n. Yes, I meant _getName(...)\nLet's go with _getBaseName if we don't have a better idea.\n. Nice, thx. Did you test it or (even better) are there any unit tests?\n. I merged it. Thx.\nI think it is important to note that we are refactoring Elastica_Script at the moment to make it mire general and make it useable in different places. Keep an eye on the changes.txt of the next releases. If we have to break backward compatibility, it will be noted there and also in the release notes.\n. Please create a pull request out of this (if possible with a test) so I can merge it.\n. ok. Let me know if it is related to Elastica directly\n. I think we discuss here two different \"fields\" params. One is related to the query type QueryString which is used as it should and also the result is as expected. Check the last example here:\nhttp://www.elasticsearch.org/guide/reference/query-dsl/query-string-query.html\nWhat you are talking about is the general fields:\nhttp://www.elasticsearch.org/guide/reference/api/search/fields.html\nTo set the general fields, you have to set it on Elastica_Query object with setFields(\nSo this works as expected as far as I can see.\n. I assume you want the following:\n$qstring = new Elastica_Query_QueryString($query);\n$qstring->setDefaultOperator('AND');\n$query = new Elastica_Query::create($qstring);\n$query->setFields(array('field1','field2'));\n$result = $ElasticaSearch->search($query);\nThe setFields is not redefined, as all queries inherit from Elastica_Query_Abstract and not Elastica_Query.\n. I will close this issue as it was not updated for quite some time.\n. I like this implementation. I will merge it as soon as the function nsme is updated. Thx. \nSeems like github also works on the iPhone quite good :-)\n. merged :-)\n. See other comments\n. Sidenote: As I discussed in some google groups entries, I'm not 100% sure anymore if Elastica_Query and Elastica_Search make sense. Elastica_Query made sense in the beginning of Elasitca / elasticsearch. But since then, filter, facets and a lot more was added including search in multiple indices. So one of my ideas is, to merge Elastica_Query into Elastica_Search in the future (just an idea) and get rid of Elastica_Query (the name is somehow confusing). So in a way both of you are right :-)\n. Yes, we should keep this in mind. MSearch is still an open issue, right? Probably we should implement an intermedia solution first to merge it into one object with the next big release. There will be quite a few BC breaks :-(\n. Interesting :-) \nI would still recommend to do it in Elastica_Search::msearch where you pass probably an array. Perhaps in the array you always have a tuple of header and body, or you go with the same rule as the api does, that every second entry is a body/header.\nTake a look at the bulk upload of documents, I assume it can be done quite similar.\n. In general I think also the full low level functionality of elasticsearch should be available through Elastica. As far as I know this is so far the case, as everything can be accessed over the raw ->request(...) function.\nI think your toughts go in the right direction. If we look at the current objects, Elastica_Query is (more or less) this Elastica_Search_Abstract object. Reusing the same code for multi search and single search sounds like a good plan.\nWhat I'm not convinced yet is, if we release need Elastica_MultiSearch. I would like still to use ->search(...) but pass an array of these \"search objects\" instead of a single one. It will also have an affect on the Response object which at the moment only can contain 1 result. \n. This is still work in progress ... I assume all of us are happy if you have the time to take over this issue.\nI assume you mean size an from for each query, right? If yes, this should be possible.\n. Does this functionality exist in the elasticsearch api?\n. Ok, there are two solutions to this. Simple one, we ignore it. More complicated: We try to implement this on the Elastica client. A main question from my side is, if this is something also other developers use / need or is this a really specific use case?\n. If you have opened a feature request on elasticsearch, can you add the link here?\n. Ok, let me know if there is something going to be implemented into elasticsearch that would enable this functionality.\n. I don't think it is a good idea to give an estimate for new features. First because all are working on this project in there free time and on free will and secondly, because people will only be disappointed if the estimations are not correct.\n. I agree on most of your arguments. One main issue I have with Elastica_Query is that an Query exists out of Elastica_Query__, Elastica_Filter__ and Elastica_Facets__. A lot of people are confused by the naming fo Elastica_Query, or to what the difference between Elasitca_Query and Elastica_Query__ is. Perhaps we should find a better naming here.\nI somehow agree, that limit does not directly belong into Elastica_Search. This is only here for simplification to keep the code for the user simpler.\n. I think Request Body is even worse :-)\n. I will close this issue as multi search is now implemented. We should open a new issue for that to discuss.\n. We had a somehow similar discussion some time ago:\nhttps://groups.google.com/forum/?fromgroups#!searchin/elastica-php-client/GET/elastica-php-client/vW-LUoI7mq4/9waj11U2O4cJ\nI assume this is not only specific for Elastica_Search, but for all GET requests with a body (I'm not sure, if search are the only ones).\nA solution I can see would be, that there is a flag / option that can be set in Elastica_Client (for Elastica_Transport_*) which will convert all GET request which have a body to a post request. Would this make sense?\n. A PR sounds good. How should we call this config param?\n. I think we need a configuration option. The reason is simple. I assume that @kimchy had a specific reason (probably the semantics) to make GET requests with a body. So the goal of Elastica is not to fix / change elasticsearch, but to map it and allow \"fixes\" in an easy way. That is the reason (my personal opinion), the default Elastica option should always be the default behaviour elasticsearch expects. If you think the default behaviour should be changed in elasticsearch, I'm sure you can discuss this with @kimchy :-)\nNot 100% happy with the config options yet. I think it should be clear from the variable name, what the behaviour would be, something like \"convertGetToPost\" but shorter. One more thing I realized, it is a config for the Http / Https transport, but the transport config variable is a string at the moment. Perhaps we should also transport to be an array with the following options:\ntransport => array('type' => 'Http', 'convertGetPost' => true, ...). \nThis will allow us, to add more options in the future.\n. Check the second example ;-)\nhttp://www.elasticsearch.org/guide/reference/api/search/\nI agree to moving the discussion to the pull request. About transport to array => make sure it is BC.\n. @kimchy Thx for the update\n@christeredvartsen Looking forward to your PR :-)\n. @christeredvartsen Any updates here?\n. Sounds good. Be aware, that we are doing some heavy refactoring at the moment and will go with PHP 5.3\n. perfect. thx\n. I think this is closed with #320. In case not, please reopen.\n. Thx, merged it. As there are no tests yet for query builder, I not surprise there are not tests for this one.\nShort notice about the history of query builder: We have a few ideas and this was the first test implementation. Somehow all the other ideas never made it into the master branch. This is the reason, this (not really tested version) of the Query Builder is here :-) I'm glad it works ;-)\n. BTW: Is it also necessary to update the Bool query as you mentioned in the google groups, that there is also a problem?\n. It would be very helpful if you could write some test cases for the query builder.\nNow this is interesting. \nhttps://groups.google.com/forum/?fromgroups#!topic/elastica-php-client/XG1-SFaPiUQ\nWhen I answered I didn't check the names, because I assumed it was you in both cases because it was the exact same problem. But now I realized, this are two different guys ;-) Is this a just a coincidence?\n. It would be very helpful if you could write some test cases for the query builder.\nNow this is interesting. \nhttps://groups.google.com/forum/?fromgroups#!topic/elastica-php-client/XG1-SFaPiUQ\nWhen I answered I didn't check the names, because I assumed it was you in both cases because it was the exact same problem. But now I realized, this are two different guys ;-) Is this just a coincidence?\n. Ok, now it makes sense :-)\n. In general it looks good. I added some small comments.\n. BTW: Please also update the changes.txt file\n. Concerning the setDistance etc. function. It is important to not just remove them. We should keep them in the code for 2-3 versions and add an @deprecated in the code and probably throw an exception. But I still think, that we need at least some of the functions.\n. Any updates here?\n. Interesting. That is actually a function I never used before, I didn't even know that it exists :-) I will check it in detail.\n. I just merged the PSR-2 pull request. Because of this you have probably to do some merging. Sorry about that.\n. Thx. I merged it so we are not going to have problems the the code style again. But can you open a pull request with an updated changes.txt file? I think in this case it is more then important as it is a BC break.\n. Thx. Probably a test for this would be nice so we can make sure, it also works with future changes ;-)\n. Thx for the pull request. As we break BC, I have to think about what the best way is to merge this. We are refactoring Elastica_Script in general at the moment. Important for me is, that if we break BC, we try to do it only once :-)\n. Because of pull request #203 I would argue that name is an optional param. So name should not be the first in the constructor. So we could add it as fourth param to not break BC. As some were already using Elastica_Script like it is, I think we are definitively breaking BC. Probably addScriptField should support a second param name, but name should also be available in the constructor.\nI would suggest, that if name is set, it is also included in the toArray(...) function. Like this, we can support scripts with and without a name.\nDoes this make sense?\n. @mente What are your thoughts here as you made the first Elastica_Script implementation?\n. I think it can be mandatory, depending where you use it. \n@lavoiesl I think having it optional in the toArray is good because I don't think for example Elastica_Query should be responsible to add the name as the knowledge about how to create the right array structure for the script part does belong into the script. The question is: Is there a use case where we don't need the script name but it is set?\n. I like this idea. There would be also to directly use an Object ScriptFields which handles the list of scripts with a function addScript($name, Elastica_Script $script). Or is there an advantage of having also the single object Elastica_ScriptField?\n. Nice, so in the end, Elastica_Script almost looks exactly as before and we add Elastica_ScriptsFields. Can you please also update changes.txt?\n. Can you merge the changes already in master for me? There seem to be some conflicts (probably in changes.txt ;-) ) \n. MERGED :-D\n. BTW: I'm not even sure if we overengineered it a little bit by adding Elastica_ScriptFields. Is it common to add multiple script fields? :-)\n. I think this would be a nice addition to also accept an array but at the same I do not really like different types of params. Still, array can simplify the usage.\n. I think, first we should should start with PSR-1. As far as I can see, most of this is already in use.\nFor PSR-2: In general I like the idea, but I only agree 90% on the musts for the coding standard. \nConcerning namespace: There is also a ticket to move Elastica to PHP 5.3 where this will be part of.\n. I think the discussion already starts here :-) I'm really in favor of tabs for indentation (I know, there is a NOT for that in PSR-1) and I want to keep the the underscore in front of private / protected functions (here we only have a SHOULD NOT). As far as I know, all methods are in camelCase.\nThe current coding standards are listed here as code sniffer file:\nhttps://github.com/ruflin/Elastica/wiki/Coding-guidelines\n. Thx, I agree to most of the changes. I also found some interesting discussions to PDF / Pdf, TTL, Ttl and I think you are right that we should go with the your variantion because setPDFTTL looks really ugly compared to setPdfTtl(...\nhttp://stackoverflow.com/questions/486870/camel-case-names-how-strict\nCan you update also the changes.txt file to mention this function renaming even though it doesn't break BC?\n. Sorry for the delay, now I'm back in the office.\nI'm struggling a bit with merging this also because I also don't like the { on the new line of functions. But even though I do not agree to 100% with the PSR-2 coding standard I think it is best for the PHP community if more and more projects join the standard. Also these are refactoring which can be / are fully automated.\nProbably I should join the PSR Group so I can influence them to perhaps use my preferred standard ;-)\nCan you do me a favor and also merge the recent changes into this pull request?\n. Very nice (as always ;-)). Thx a lot.\n. Thx. I did not check it in detail but as you provided tests I'm quite sure it runs as expected ;-)\n. I think we all agree on this that we should upgrade to PHP 5.3 (at least ;-)). I would like to make the next Elastica release first by merging the open pull requests first. Can you update #219 so I can merge it?\nOne main question for me is: Do will still need a version for PHP 5.2?\n. In general an interesting idea, but I would decouple it from Elastica. It could be, that ElasticaODM uses Elastica to access /manage the data.\n. @lavoiesl I would make the move probably much more radical. Create a branch for 5.2. Master is directly PHP 5.3. I mean, the master already runs in PHP 5.3. So we can add more and more PHP 5.3 features with every release instead of having to switch everything at once.\n. Creating a branch for is for sure a good idea. But what I meant is, that as soon as it is running, I would merge it into master. This could already be in the release of the next one.\n. Before we start, I would like to close #161 and #172 as I think there was done quite some work and I would like to have it in the next release. Both are related but it seems like @comlinux and @kmc do not have the time at the moment to finish it. Can you take over?\n. @pierrre There are actually quite a few people to use it as storage server. But I'm not 100% convinced that this is what it was made for ;-)\n. @lsmith77 I also had this discussion with others (or did we meet? :-)) at BerlinBuzzword. My personal opinion is, that at the moment I would not use it as a permanent storage but I can see that it could be feasible and stable enough in the future to use it.\n. Since today, Elastica is only compatible with PHP 5.3. There are no namespaces yet, but closures are used. Is anyone having the time to update all the code with namespaces? I decided, that we will not support 5.2 anymore. I assume some people will not like the decision, but we have to move forward.\nThe main issue I see coming is with the classes named Abstract or Interface. @lavoiesl @lsmith77 What do you recommend here?\n. Just checked, but haven't found a definition.\nI would probably suggest to go with Elastica\\Type\\AbstractType for Elastica_Type_Abstract etc.\n. Ah, didn't know the \"bylaws\" part. Sounds like the same convention. Way to go.\n. Quite simple, xodoa is my old company under which I created it.\nhttp://xodoa.com/\n. What would you set as Category instead?\n. Symfony2 does not have any package / category tags, ZF2 uses both. I think it was really useful for phpdocumentor (back in the old times). How is phpDocs dealing with it?\n. Agree\n. Looks perfect so far (I haven't checked every single line ;-) ). We will see what the tests will say about it ...\n. @matthewpeach To be honest, I have never thought about this as it's quite a long time ago since I used PHP <5.3.3. The current one is already 5.3.21. But this is a good point. I will add it to the README.\n. https://github.com/ruflin/Elastica/issues/313\n. I will probably call it stable as soon as we release it as a tag. At the moment, there are still quite a few changes coming in. But I would more then happy if some more people start to test it and report bugs. Test coverage is not that bad, but real world implementations are always good.\n. I agree that it is a good time to remove depreacted methods. But we should add every single one to changes.txt.\n. As far as I know, the Term query works. The question is, what is this $finder->find(...) doing as this is part of the Symfony Elastica Bundle. Probably the guys over here could this answer in more detail:\nhttps://github.com/Exercise/FOQElasticaBundle/\n. Agree.\nWhat do you mean by phpcs new includes it?\n. If it is already included in the newest release (not only testing/master/*) we can remove it.\n. Probably a good idea. The solution here would be a pre-commit hook that runs all the tests ;-)\n. sorry to be picky, but some more details would be useful so the user knows how to migrate. something like befor -> after\n. Probably it would make sense to have it on multiple lines, but I think much more important will be, that we have some examples ready for the next release how to migrate.\n. Concerning release notes: I think it would make sense to add the release notes here:\nhttps://github.com/ruflin/Elastica/tree/gh-pages\nBTW: I just bought the domain Elastica.io. I was a fortune but I think it is the right way to push the documentation.\n. I get the same error. Seems like the tests should be updated or we should also make it possible to pass an array to setScriptFields. I'm not sure what we agreed on here ... \n. Interesting. What did your query look like? As far as I know hits should also be defined if there are 0 hits (not 100% sure). If not, we have to update the code.\n. Can you provide me with a code example to reproduce the error?\n. Thanks for the all the details. It would probably be quite a good idea to add this to the elastica documentation:\nhttps://github.com/ruflin/Elastica.io\nElastica.io is not online yet. But I try to put it online as soon as possible. Feel free to add your content\n. Side node: I would expect that an error is thrown before the 0 hits if you set the wrong port which means it cannot even create the connection to the es server, right?\n. Can you post the code where you make the call and build the query?\n. Did you create the index and add some data to the type? \n. I'm not sure if this issue is related to FOQElasticaBundle. Perhaps @jmikola knows more?\n. @informatic-revolution It is actually in the first step documentations for Elastica http://elastica.io/en#section-connect\n. I will close this issue as I think the problems are resolved.\n. @pierrre Yes it is ;-)\n. @rizkyabdilah At the moment the documentation is only a branch of the Elastica repo:\nhttps://github.com/ruflin/Elastica/tree/gh-pages\nAt the moment, please update these documentation pages.\nIn the next days, I'm going to move everything to Elastica.io. There is a special repo for that (not ready yet):\nhttps://github.com/ruflin/Elastica.io\n. thx\n. So I assume this issue is still open as it is not implemented, but you found the answer, right?\n. I assume you created your own fork on github and try to commit to this repository first, right? Here you find more details how to open a pull request.\nhttps://help.github.com/articles/using-pull-requests/\nIs your implementation with get/set Routing working? I'm looking forward to see the implementation.\n. Yes, seems to be an issue with your client. As you first push to your repo, it should not be related to mine. Are you using windows/linux/mac? There are different options how to authenticate with github. I never used the eclipse client so far, I'm always using the command line. As soon as it is in your repos, you can open a pull request to my repo directly in the github interface. Let me know if you need some more help.\n. @foufos Do you have any updates here? If the part with the repo does not work, can you provide the code here?\n. Ok, somehow forgot about it. Thx.\n. Elastica_Query_Builder does not support all queries and special options. If you have requirements that are not supported by the Query Builder, I would recommend to use the Query objects directly.\nSee my comments for the pull request.\n. Probably it is always good to have the support for these features. But the question is, how to implement it, if it is going to break BC and if it is going to make things more complicated. For me Elastica_Query_Builder is only a nice addition to have but the main development goes into supporting the native elasticsearch API. So feel free to suggest changes to Elastica_Query_Builder.\n. Good question. As I'm not using Query_Builder it is hard to say. What is the way you would expect it / more natural way?\n. That is one of the main reasons I don't like the query builder that much. I would choose the implementation that is most similar to the current concept.\n. @abxccd  Any updates here?\n. You can close it as in general I do not really intend to push the query builder forward at the moment.\n. Can you add some tests for this? And please also add the link to the prefix query in the class documentation.\n. Thx. Merged as expected ;-)\n. Nice change ;-)\n. Not yet, very interesting. \n. Good to know. I was still trying to figure out how this could be done :-)\n. Very interesting addition. What I don't really like is that all the thrift files (external libs) are now part of the repository. Is there any possibility to link these files with composer?\n. Ok, so I would suggest the following:\n- Include thrift library through composer (throw an error if lib does not exist and describe how to add)\n- elasticsearch thrift classes should be generated with the build script and be ignore in the repository?\nWhat do you think?\n. I will look into this in the next days. Thx\n. In a way I like the move from the client to the transport exception. What I worry about is most is the BC compatibility. All code that uses/catches the client exception will break, but I don't see how we could implement this without breaking BC. Any idea?\n. Perhaps a good idea :-)\n. To be honest, this pull request somehow got out of view in the last weeks. It looks like I should review it in detail. Do you see any conflicts with this discussion?\nhttps://github.com/ruflin/Elastica/pull/274\n. As we are already break BC, this pull request could also get interesting again :-)\n. Very nice addition. Now I like it much more. Two questions:\n- Can you update changes.txt?\n- Is there a possibility to have as \"optional\" dependency? I haven't found this option in composer, but perhaps is there something like that. If someone wants to use Thrift, this one is very easy. If someone doesn't want to use Thrift, he has quite a few additional libs installed that he doesn't need. Any ideas? If not possible, we leave it the way it is.\n. I would also prefer the suggest option. Is there something like require-tests? Like this we could only require it for tests.\nMost of the Thrift tests will anyway be in your library I assume. \n. Cool, I like that. But we should also add it to the build file somehow, so it also runs locally.\n. Yes to all the points :-) Any reason not to add it to the build file?\n. I use it locally to check if everything is working as expected. Is there an other option then to modify the composer file? Like a param to also install suggest packages?\nCan you merge master into your repo? I think there are some conflicts.\n. Ok.\nInteresting build exception from travis?!?\n. Somehow Thrift tests are failing :-( https://travis-ci.org/ruflin/Elastica/jobs/4300406\n. On my local machine, all test are running fine.\n. Good to know. Can you do a pull request with this with a small unit test?\n. You're on the right way as you already have an Elastica fork ;-) Let me know if you need some help.\n. Resolved.\n. This is merged, so I will close it.\n. Thx for the addition. Please update with the small comments so I can merge it.\n. Thx. \n. Looks like the tests are failing :-(\nhttp://travis-ci.org/#!/ruflin/Elastica/builds/2398603\n. It was related to the travis es version. I updated it. But now other things are failing:\nhttps://groups.google.com/forum/?fromgroups=#!topic/elasticsearch/BfY8FKMGo48\n. Interesting. What is the lint tool you are using? I would like to add it to the build script of Elastica.\n. Is it possible to only use the analyzer? \n@martin-naumann This could be interesting for us\n. Which version of elasticsearch are you using?\n. This resolves the issue, right? If yes, please close the issue.\n. perhaps you can also post the solution\n. Why is the path lowercase?\n. in your error message. it is Elastica/client.php instead of Elastica/Client.php\n. Can you please post your code where the error is thrown?\n. I'm sure the ElasticaBundle guys can help out here: @jmikola\n. @shevaton7 I'm responsible for the Elastica library, but I'm not responsible for the FOQElasticaBundle for Symfony which uses Elastica: https://github.com/Exercise/FOQElasticaBundle\n. @thiruvenkatam Please do not double post: https://github.com/ruflin/Elastica/issues/1463. I see two options: elasticsearch server is not running or curl is missing.\n. I think you are confusing, elasticsearch, Elastica and the ElasticaBundle.\nDid you install and run / start elasticsearch: http://www.elasticsearch.org/\nFor php_curl: you can not only enable it in your config, but also have to install it. If you run phpinfo(), does it show up?\n. Are you talking about Elastica or elasticsearch?\n. Elasticsearch can be installed where you want. It only needs to run as a server: http://www.elasticsearch.org/guide/reference/setup/installation/\n. That is quite strange, but I remember I had a similar issue when I had a mix of PHP versions installed on my computer. Which PHP version are you using? Could it be older then 5.3.9?\nAlso try to add a slash in front of curl: \\curl_init();\nDo you still get the error?\n. @Barralait Can you try it with Elastica directly, means not using the bundle?\n. Ah, now I remember. Somehow it is possible to install php_curl without having curl properly installed or linked. There are two options:\n- curl is not properly installed\n- curl is not properly linked\nSo I would probably recommend to uninstall and install curl again.\n. I'm glad it works now. Should we add something like an FAQ or known problems to Elastica.io with this kind of problems? I'm sure you are not the last person to experience this one.\n. Sounds good. Can you add a pull request for that on Elastica.io?\n. Merged and formatting a little bit updated ...\n. Where is your php server running? Virtual machine?\n. @wimvds Any updates on this? Did you figure out what the problem was. I'm especially surprised that it sometimes works and sometimes it doesn't.\n. http://www.elasticsearch.org/guide/reference/query-dsl/wildcard-query.html\n. Probably you can get some more information here: https://github.com/ruflin/Elastica/issues/33\n. If you could help to get this running, this would be awesome.\n. Can you implement it?\nI assume you mean this one:\nhttp://www.elasticsearch.org/guide/reference/query-dsl/geo-distance-range-filter.html\n. Cool\n. Did you have some time to implement it?\n. Closed as implemented in Pull Request #281 \n. Like you recognized yourself, this is something not related to Elastica. So please use the elasticsearch Google Group for this question:\nhttps://groups.google.com/forum/?fromgroups#!forum/elasticsearch\nAlso please don't open issues on Github for simple questions. The right place for this, is the Elastica Google Group (if it is related to Elastica).\nhttps://groups.google.com/forum/?fromgroups#!forum/elastica-php-client\n. I have to take a closer look at this this weekend as there are quite some changes inside. We already had quite some discussions where to put msearch. Perhaps Elastica_Search is the right place, or is there Elastica_MSearch needed? ...\n. There are already quite a few discussions on this topic here: https://github.com/ruflin/Elastica/issues/209\nI would also argue, that we should do a \"complete\" cleanup ...\n. @mente @rayward I would really like to push this forward. But I think first we have to agree on which is the right way to do it without breaking BC quite soon.\n. So we would go in the direction of Elastica_Search_Abstract as proposed in #209?\n. I merged to Multi Search implementation from @munkie. So I will close this pull request.\n. @rolfvandekrol I merged it, but the documentation in the future should be on http://elastica.io/en So perhaps you can also fix it for the Elastica.io repo?\n. Very nice addition. Did you run this in production? I'm just curious if you also tested it with a running elasticsearch server. \nCan you please also add some notes to the changes.txt file (including your other pull requests) and fix the issues mentioned above?\n. Finally I merged it. Sorry for the delay and thanks for the addition.\n. When will the text query removed? 0.20.*? Didn't have the time yet to take a look at the RC,\n. Are Match and Text query identical? If yes, we could remove all out of the text query and let it extend the match query. \n. Ok, good point\n. Looks good. Can you also add your changes to changes.txt?\n. Looks like we need a new transport :-)\n. So the question is, what would be the other options to implement this? I think the UDP transport has to be created anyway for this but that UDP is a param to choose for the bulk inserts and it will change the transport on the fly.\n. I assume that this more belongs into the elasticsearch Issue tracker instead of the Elastica issue tracker, right?\nhttps://github.com/elasticsearch/elasticsearch\n. Ah ok, I didn't realize that you talk about this file. I will reopen the issue to take a closer look at it.\n. I closed this issue with the most recent commit: https://github.com/ruflin/Elastica/commit/36021dfebf7089c94ed6c7c9ef3c9084dc97f235\n. Very interesting idea how to handle the multiple server problem. So far I tried to solve it inside Elastica in Elastica_Transport_Http. The idea was, because their is no consistency between request (which is needed to keep track of failed servers) to write a temp file with available servers.\nThe part I don't like that much yet about your approach is, that there are two different clients and request classes. I would assume we can merge it into one client. The question that is open is if the client or the transport layer should take care of the multiple servers.\n. I agree that we should move the server handling to the client or the request. It does not belong into the transport. So the question is, should it be inside the Request object or the client directly?\nDo you think it would be possible to add the callback without changing backward compatiblity?\n. Perhaps we should add an Elastica_Server Object to handle the state and data of a server?\n. So the server to talk to would be a required argument for the Elastica_Request::send(Elastica_Server) method? What I like about the approach is that it decouples Elastica_Request more from Elastica_Client, but as the Client object is passed anyway, probably we could also make a function getServer() on Elastica_Client which returns the specific Server object.\n. During creating Elastica_Server I realized that we already have an object which represents this: Elastica_Node. I'm not 100% sure how we should refactor it for the new use case. One suggestion would be a factory function with params where host, port, and path could be passed. \nOne other thing I stumbled over is transport. Transport could be different for every single node. So this would also belong it Elastica_Node?\nOn the other hand, there could be a difference between Elastica_Server and Elastica_Node as the same Server can exist multiple times (for example if you want 66% of the request go to one server, and 33% to an other, you add 1 server twice). Also there can be much more nodes and we only connect to a few of them ...\nWhat do you think? Should we mix these two?\n. Perhaps we should name it Elastica_Connection?\n. Please take a look at the connection-refactoring branch. I added Elastica_Connection and implemented the callback. What do you think?\nhttps://github.com/ruflin/Elastica/tree/connection-refactoring\n. I will close this pull request as the new connection object makes this possible.\n. The replication of data is done automatically by elasticsearch based on your number of shards and replicas: http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index.html\nSo what you have to do is connect these two elasticsearch instances. The Elastica server params is here to send requests to multiple servers.\n. I closed this issue as this is elasticsearch related. If something comes up related to Elastica, please reopen the issue.\n. I like the idea.\n. Thx\n. We already had quite a lof of discussions about that (as you probably know)\nhttps://github.com/ruflin/Elastica/pull/260\nhttps://github.com/ruflin/Elastica/issues/209\nThe only thing I don't like is that it is not accessible through Elastica_Search. I would like to have only 1 search \"object\" in the future. But at the same time I agree it the multiple Elastica_Search objects to not belong into Elastica_Search. Somehow this would belong into the Client but at the same time I want to keep the client as simple as possible. It is a little bit the same discussion with the bulk requests like addDocuments. Do these really belong into Elastica_Client? Not sure about that.\nSo basically I like the implementation but give me a little time to think about it once again. Because as soon as we have it in the code, there is no way back without breaking BC :-)\n. I finally found the time to think a little bit more about the implementation. \nI would also suggest, to use Elastica_Query as the second param in Elastica_Search. Also we could make the $query param in search optional. In case it is empty, takes the query from the constructor. This will make it possible (as you requested) to run search and count without params.\n. I merged it now into master. Thx\n. Thx for the cleanup.\n. The reason for this is quite simple. There is no specific constructor for Elastica_Query_Range (yet). If we create a specific constructor, the question is what the default should be? I'm not sure if it is possible to set multiple fields for a range query? In case this is possible, I would assume that the constructor would be setField(s)?\n. Based on what did you make the assumption that it should work?\n. Ok. @linusnorton or @munkie can you update the code like this?\n. Thx :-)\n. Thx. If you have time, can you add a test for it too?\n. Can you also update the changes.txt file?\n. I like the idea of the of the GeoPoint, the question is in which namespace. Elastica_Document_GeoPoint?\n. Thx for you contribution. I'm a little bit hesitating to merge your pull request. The reason is, that I don't think Elastica_Filter_Abstract should take care of stuff outside it's competencies. Elastica_Filter_Abstract now has a certain dependency on the _Or, _And and _MatchAll filter.\nI see how it could simplify the code, but it also breaks somehow the chaining. Instead of always returning the filter I'm working with it returns a new filter.\nPerhaps this is more something that could belong into Elastica_Util as a helper function?\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Util.php\n. I will close this based on the above comment.\n. I like the additions. Will this break BC?\n. Hm, it took me quite some time to get back to you. Sorry. One more thing: Can you please update the changes.txt file?\n. This pull request is getting bigger and bigger :-) Not sure how we should coordinate the merge as @lavoiesl is right now updating everything to PHP 5.3 with namespaces. \n@lavoiesl Is it ok that I merge this pull request now? \n. Damn, that was too fast. Sorry :-(\n. Yes, please open a new pull request. Please also add more details to changes.txt. This file should it make for people to see the BC breaks and now what to do ...\n. I think it is not a good idea to just catch the exception and try the next one. A client exception could also occur because of other reasons. The other problem is, that the decision is not persistend. See discussion here:\nhttps://github.com/ruflin/Elastica/pull/274\n. Check out this branch. Here I'm working exactly on this kind of improvement: \nhttps://github.com/ruflin/Elastica/tree/connection-refactoring\n. I will close this pull request as the new connection feature makes this possible.\n. This more sounds like a foq_elastica dependency (Symfony Elastica client) instead of Elastica. Please report this issue here: \nhttps://github.com/Exercise/FOQElasticaBundle\n. A test for the new search types would be nice. Somehow I don't like this switch / case construct too much as it has to be updated every time new params are added, but it would probably need some more refactoring to go an other way.\nThx\n. What you are probably looking for is Elastica_Index::refresh()\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Index.php\n. Yes, it should be done right after the delete action. \nAs the documentation describes, it will slow down your system. The question is probably, how often do you use the delete command? Once a minute, a second or several thousand times a second? Is performance already an issue?\n. The number of entries does not matter that much, it's more about the number of requests. I would recommend you to use the refresh command.\n. @cassianotartari The solution with refresh() as described above should work.\n. Is now in master.\n. Interesting. That was introduced with elasticsearch 0.20.0\nI'm not 100% sure how we should refactor Elastica_Client::updateDocument. Just make $data out of the second param and check inside if it is Elastica_Script or Elastica_Document?\n. @munkie How does that fit into your pull request #288 \n. Your description is a little bit more radical. I would suggest to go with\npublic function updateDocument($id, $data, $index, $type, array $options = array())\nIs it possible to mix script and document?\n. We should not think about BC too much at the moment, as we are going it to break it anyway in the next release with PHP 5.3 and lots of other changes. BTW: I forgot to update changes.txt with your multi search changes. Can you do that?\n. If we really use updateDocument as you described, the nice thing is that we also get rid of the type and index param. I like it, but I have somehow the feeling that we still need a little bit a \"raw\" function in addition which can be used for features not existing yet in Elastica.\nSo we would have\nElastica_Type::updateDocument(Elastica_Document, array $options = array())\nElastica_Type::updateRawDocument($id, $data, $index, $type, array $options = array())\nElastica_Type::updateDocumentByScript($id, Elastica_Script, ...)\nNot sure if it would make sense to add Script to Document. Upsert would be set through options? I have never used upsert so far :-)\n. But how do we now if the document already exists and which fields where add without making a get request?\n. Not sure if I fully understand the feature:\nIf a document is used in combination with a script, upsert is used, otherwise if no script is available, the doc param is used?\n. And if setScript is not used on the document, it would be 'doc' : { ... }, right?\n. Sounds good to me. Probably the updateRawDocument method should be in client. in request there is no UpdateDocument function as far as I know.\n. So we have two methods left:\nElastica_Type::updateDocument(\nElastica_Client::updateRawDocument( -> better name?\n. You mean for the Raw part or for all? \n. Looks good to me, except that I would use Elastica_Client::updateDocument inside Elastica_Type::updateDocument\n. Can you open a pull request with this change and please also add it to changes.txt.\n. @lsmith77 @leahaense Any updates here?\n. Looks good. Can you merge the changes from master into your changes? We moved all the code to namespaces in the recent week.\n. Thx, but I think you missed on file. Can you also update the changes.txt file with your changes?\n. Looks good, thx.\n. As always, an addition to Elastica.io would be helpful. But first we should also update all the documentation in Elastica.io to PHP 5.3\n. Good point. I completely forgot about this one. Probably if a Document is already an \"object\", it should throw an exception if someone tries to modify it.\n. There is unfortunately not ETA. You are more then welcome to contribute this. I will support you whereever I can.\n. Looks like I still have tab settings in some of my editors ... Thx\n. Wow. Thx. \n. I merged it into master, so we can also merge other open pull request and it is clear, we don't go back. It is still possible to create a branch from one of the old release tags.\n. Both options are ok for me. I'm curious what others are doing?\nI'm quite busy at the moment and will get back to you later about the naming. What I'm not too happy about is the \"duplication\" of names. Something in the namespace Query should not be postfixed by Query, that is the reason it is in query. I see the problem with reserved names and conflicts. Not sure what the best solution is here. Any suggestions?\n. Should it be BoolAnd or AndBool? \n. That is exactly what I'm not sure about. Which one is better and makes more sense. Why I thought it should perhaps be the other way around is because of autocompletion. People start to to Prefix for the prefix query and will start to type and for the Andquery. So autocomplete would work. On the other hand someone perhaps knows, he needs a bool query and starts to type.\n. Very helpful. At least that confirms again that PhpStorm is awesome :-)\nI personally prefer the OrBool option, but as I described above I'm undecided.\n. Looks like all these queries are quite different. This means, every query will have its own implementation?\n. I would do it one by one. Otherwise the issue is too big to be implemented at once and I also prefer small pull requests. \n. As far as I know, there is no progress here. It would be nice if you could push it forward so we have it in the next release.\n. Thx \n. Can you add a small unit test for this? So we now both cases are still working?\n. I would also prefer to work here with the Script as @munkie suggested. \n. Looks good. Can you also update the changes.txt file?\n. Looks like you still had quite an outdated changes.txt file. Can you please merge in changes from master? There are some merge conflicts.\n. Hm, there are still some conflicst. Can you merge all from master?\n. I added also some tests for hasId. Thx.\n. @munkie Waiting for your feedback here, but no hurry ...\n. LastRequest makes sense.\nThe question is how we should handle the log methods. Should the logger be passed as an argument through?\nI like the JSON one as it is readable an can be converted in almost any language (and could also be stored in elasticsearch ;-) ).\n. Looks good, seems like there are again some conflict changes in master (probably changes.txt)\n. I merged it even tough some travis tests failed again. It looks like travis has an outdated composer version\n. Perhaps an $index->refresh() could help here ...\n. The build worked but in the README it still shows failed. I'm not sure why:\nThis shows success:\nhttps://api.travis-ci.org/ruflin/Elastica.png\nThis shows fail -> why?\nhttps://api.travis-ci.org/ruflin/Elastica.png?branch=master\n. Builds seem to work at the moment (except image). So I will close this one.\n@munkie Please reopen if case error happens again\n. I would make it optional. There is a simple reason for that. All of my elasticsearch installations use the \"no source\" flag to have smaller indices.\n. Yes I know. As source is enabled by default and having the data in the document is very covenient, we should enable it by default. what happens if source is disabled but it tries to populate it? exception? \n. Ok, looks good. Can you merge the changes from master?\n. I like all the ideas. Let me know when the pull request is ready.\n. Merged. About the config: Probably a function has config would make sense?\n. Good point, we should probably find a better way here instead of \"only\" returning the connection in the callback.\n. Sounds good. Go for it. \n. @im-denisenko I suggest we also mark Thrift as deprecated already.\n. :+1: \n. Did you test this?\n. Any updates here?\n. @rezonanc-nfq Any updates here?\n. Implemented\n. Not sure why the binary files were modified?\n. Closed :-1: \n. It's very useful for people that like to work with objects. It can make the code much more readable (but doesn't have to). Also inside the objects you can add functionality which would need much more understanding of elasticsearch if the developer uses arrays directly. In case you are using arrays: How often did it already happen that you had one nesting level too much or too few for a query? How often do you have to look up how some queries nest into others? That is all done for you if you work with objects.\nBut of course sometimes also the raw array way is the right one. That's why you can always also pass arrays to the requests.\n. Ok, now I got it. Interesting point. I see pros and cons. An advantage of the current implementation is that the same query can be used multiple times and a param chan be changed without affecting all the other queries it used the query for. But at the same time it is very interesting to modify the queries later as it is only a reference.\n@munkie What is your opinion here?\n. One more question is: What would getQuery return in case the object is set with a raw array? It is important for me, that we keep the possibility to set \"raw\" queries with an array. Like this also features which have not made it into the Elastica objects can be used.\n. The createFromArray is a good idea but it is not that easy because of all the different queries which have additional and special params.\n. Yes, but this would mean if we convert an Bool Query to an array and back, it would end up as a Simple query. Is this as expected?\n. As I merged an other pull request, there seem to be some conflicts. Can you merge in the master again?\n. Good question about the config option in Connection or Transport. How would you implement it to set it on the transport?\n. Sounds like we need a factory class for transport which can be instantiated by an array, a string or the object itself. I like the idea\n. I would prefer to have the factory method inside the transport class which is then called.\nI'm thinking about merging the pull request and to these changes in a second step. Or what do you think?\nBTW: Don't forget to update the changes.txt file ;-)\n. I merged into master. Can you update the changes.txt and create the constant out of the string for the next pull request?\n. If it makes sense, yes :-)\n. Perfect\n. Thx. An additional unit test would be nice.\n. Are you sure that * for id delete should work?\n. What was that?\n. Merged. Thx.\n. Thx\n. Looks good and it seems that all test are still working (which is good). Can you update the changes.txt file?\n. The params is used in the Null transport as far as I know\n. Ok, have to look in detail into that. Ready to merge?\n. Thx, merged :-)\n. Looks good to me. You can merge it if you like.\n. This is a big one. Probably I need some time to go through it. It seems like it breaks some tests.\n. Ok, went through it and it looks quite good :-) What I really like is that it doesn't directly break BC. Also it simplifies the Client.\nWhat is missing is the update to the changes.txt file ;-)\n. Let me know when you had the time to fix the \"last\" issues.\n. Thx\n. Closing as this was merged.\n. Caching was refactored with elasticsearch 2.0. Closing as does not seem to be a required feature.\n. Good idea. Not sure how we should test this :-)\n. What would be helpful is to have a test, that at least set roundRobin to true to see if the array coming out of shuffle is still valid, means it still works.\n. This now goes directly into #356 \n. Closed through: https://github.com/ruflin/Elastica/pull/661/files#diff-a632e449e284b0c9245ce1fa4cfc8ebcR105\n. I also like the addition. \n@munkie Why is it green and the tests are failing?\n. Interesting, looks like most people that did pull requests so far had a Travis account :-)\n. I would suggest the following option: Closing the pull request but opening an issue with the description of the feature / change request and link to this pull request.\n. See #388 \n. Looks good. Can you add some tests?\n. @cpliakas Any updates here?\n. @cpliakas Thx for your feedback. \n@munkie I still like the addition, but I don't want to merge it without tests. So lets wait until one of us has time to add some tests :-)\n. Implemented in https://github.com/ruflin/Elastica/commit/5365894caaac8417ef2e5171bb92fb23ea4b37f0\n. This was not intended. Sorry about that. Can you add some tests so this will not happen again in the future?\n. Don't forget the changes.txt file ...\n. We should also move on here to get this into master. changes.txt is missing and there seem to be some conflicts.\n. @munkie Long time no see :-) Quite and old PR, pitty we didn't get it in on time. I should probably have merged it an modify the changefile myself.\n. Can you add the deprecated flag?\n. Thx\n. If I look at the Fuzzy query, I'm still not sure, if the implementation is correct, especially the naming of the functions.  An indicator for that is, that addField uses setParam, which is already a mix between set and add. Also at the moment, it would support to set multiple fields, but only one field with multiple values inside is supported, right?\n. Add some comments. Ready to move forward :-)\n. @eborden Any updates here?\n. Looks good. Can you update also the changes.txt file?\n. There was a conflict in the changes.txt file. I merged the changes and pushed them to master:\nhttps://github.com/ruflin/Elastica/commit/7e0f15c054707c6a13d2d4381a9577f09d3afebc\n. Servers is deprecated and should not be used any more. The reason it is still in is for BC.\n. @brettdanger Documentation is a little bit a problem at the moment. It is out of sync with the next release. We are working on it and every help is welcome.\n@munkie How should be continue here. I would like to keep servers inside for BC.\n. Closed as old documentation was removed and connections array should be used.\n. searchAnalyzer and indexAnalyzer are only a name for the analyzer like myAnalyzer1 in the elasticserach docu:\nhttp://www.elasticsearch.org/guide/reference/index-modules/analysis/\nPerhpas it should be described more clearly that this is just a random name. That is what you mean, right? Not sure what you mean with default_index / default_search?\n. I also didn't know about these default names. Thx for bringing this up. Perhaps you can add this to the documentation to improve it? https://github.com/ruflin/Elastica.io\n. Seems to work. Thx. Can I close this issue?\n. @munkie What was the purpose here?\nInstead of returning in the middle of the function, I would add a break and then keep the old code.\n. Ups :-)\nSo I would suggest, we merge this pull request and then start a discussion on more enhanced methods/strategies. There is one thing from my point of view that we should keep as it is: No state inside Elastica.\n. @webpatser Sorry that this was waiting for two weeks. I get notified about new comments but not about new commits :-(\n. I assume you did all the steps under http://elastica.io/en\nIf you want to run the tests, go to tests and run phpunit inside it (after you have started at least one elasticsearch instance).\n. Looks good. Now you should be able to follow the documentation and add documents and then search the documents: http://elastica.io/en/storing-and-indexing-documents\nYou can also try to adapt some tests: \nhttps://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/SearchTest.php\n. That is not the way it works. The test files have to be run on the command line. You have to run your index.php file. Did you follow all the documentation? If yes, you should have a running example.\n. I think you have a basic misunderstanding on how a php application is executed. The tests are run on the command line because they need phpunit. But this has nothing to do with Elastica itself. \nElastica can be part of just any php script. Once again: Follow the documentation here step by step: http://elastica.io/en\nDid you install elasticsearch on your host (the-irf.com)?\n. Normally a code 500 is an error thrown my Apache and only indirectly by PHP. Can you show what is in the apache log?\nAlso you create a very complicated example. I would recommend you to create a simpler one first. Some like:\n- create index and type\n- add document\n- search\n5 lines of code instead of 50 are much simpler to debug.\n. Good to hear that you are already one step further. What is a little bit ugly, that you develop on the remote server. \nNext step I would recommend you: Turn display_errors on so it will show you on which line the problem is. Instead of  echo you can use var_dump or print_r which will also show you some output even for an empty string.\nIf you don't have the 500 error anymore, apache log is not necessary.\n. I think your autoloader is wrong. It looks in your main directory instead of lib. Two options: Move the Elastica folder out of lib/ or add lib/ do your autoloader.\n. Hm, your path is completely wrong :-) As you pointed out, index.php is in \n  /webgit/webroot/home/irfan/www/elastica/\nSo Elastica is in\n/webgit/webroot/home/irfan/www/elastica/lib/\nWhere do you have this /var/www from? This does not apply to your setup.\n. You are trying funny stuff ;-) I think you never worked with namespaces before, right?\nTry the following:\n```\n<?php\n     ini_set('display_errors',1); \n     error_reporting(E_ALL);\n spl_autoload_register(function($class){\n\n    if (file_exists('/webgit/webroot/home/irfan/www/elastica/lib/' . $class . '.php')) {\n        echo \" found \\n \";\n        require_once('/webgit/webroot/home/irfan/www/elastica/lib/' . $class . '.php');\n    }\n    else {\n        echo \" not found! \";\n}\n\n});\n// echo \"Current Working Dir: \" . getcwd() . \"\\n\";\n$elasticaClient = new \\Elastica\\Client();\n```\n. Glad to here it finally worked. See my other comment to the issue ...\n. Elastica is only the client for elasticsearch. To use Elastica, elasticsearch has to be installed on the server and an instance of elasticsearch has to be running. So yes, elasticsearch.bat is needed.\n. So this would stream data to elasticsearch instead of sending everything in one request? Not sure how this is related to https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/common/Base64.java\nThere is a methode which does the Base64 encoding in Elastica for files, but I don't think this solves the memory issues.\nCan you give some more details how this implementation would exactly work? I am very interested in a solution as I know the issue quite well (I already put files larger then 500MB into elasticsearch ...).\n. Closing as no new information.\n. Hi @theirf \nCan you please move this discussion to the Elastica Google Group?\nhttps://groups.google.com/forum/?fromgroups=#!forum/elastica-php-client\nThe issue tracker is the wrong place to discuss implementation issues.\n. I think you misunderstood the QueryString query. This is the query_string query: http://www.elasticsearch.org/guide/reference/query-dsl/query-string-query.html\nSo in your case, just use Elastica_Query_MatchAll() and pass it to the filter instead.\nPlease use in the future the Elastica Google Groups for implementation related problems instead of the issue tracker:\nhttps://groups.google.com/forum/?fromgroups#!forum/elastica-php-client\n. There are \"examples\" inside the test cases, but not yet on Elastica.io. If you could add some, this would be great.\nhttps://github.com/ruflin/Elastica.io\n. Next tagged release should come soon ;-) It is always hard to tell, when we get the time for it. A final public release was planned already for quite some time, but there is still some documentation missing.\n. There are different types of count functions. Can you provide us with an example which specific function you mean and what was, that you expected and you got?\n. @munkie Do you have time to take a short look at this? It would probably make sense to create a test example for this.\n. Very interesting addition. I didn't thought that the solution is so simple. Cool.\n. Ready to be merged?\n. Done\n. This is not supported anymore? Can you share the \"link\" to that and also add it to changes.txt?\n. Good to know. Thx. Can you update the changes.txt file with your changes? \nhttps://github.com/ruflin/Elastica/blob/master/changes.txt\n. Merged, thx.\n. It would be nice to have an additional test to make sure it actually works with float and will not be changed in the future.\n. @munkie There could be an issue with socket_create in case it is not part of every default PHP installation. Somehow it worked before on my machine but now does not work anymore?\n. Not sure if we need the branch, as not that much should have changed from ES 0.20 and we haven't made a release yet. But branch is also ok for me.\n. I would say 5.3.22. But this is a good point. I have about 3 different PHP versions running on my machine, so it could be that PHPUnit picks up the wrong one. Have to check that.\n. What I still didn't figure out is, if socket_create is enabled by default in PHP and it is just disabled in my setup or if it is not enabled by default. Perhaps it makes sense, to add a check for it in bulk and throw an exception in case it does not exist and skip the tests if it does not exist. What do you think?\n. I will check on my side if it works :-)\n. Let me know as soon as you added some code, because normally I don't get an e-mail from github if code is added ...\n. @F21 Did you add a comment here and then removed it again? I got a notification but no comment here.\n. In the mean time it is compatible with 0.90.0. Test for 0.90.1 are work in progress. Will close this ticket now.\n. Ok, good to know. Because now I also upgraded to 0.90.1 ;-)\n. The question is, should it be an interface or even an abstract class? It also depends if we say, the Client has this interface too or only every \"Strategy\"?\n. Yeah, lets start with some code. Having a base to discuss on helps. \nAs in general we should move in the direction of the next release, we should check what we are going to do with all the other open pull requests.\n. Sorry that I didn't give a detailed feedback to this so far. My first impression so far: Wow, this is big :-) At the moment I'm not if this is positive or not. It looks quite powerful and I think it is. But at the same time, it adds quite some complexity. The good part is, that it simplifies the client and moves the complexity to the connection pool. It also looks like the complexity is \"hidden\" for most of the users using Elastica which is good.\n. Ok, lets move forward here and get it into master (means adding test and finalizing it ;-) ).\n. @munkie Do you have some time to finalize this?\n. @daFish @munkie Any updates here?\n. The reason I didn't close it because I'm quite sure there is a need for the connection pool strategy. I still hope someone picks it up and finishes it.\n. Closed because of  #661\n. Thx. Probably we should add these also somewhere to Elastica.io.\n. Do you have any idea why the tests failed under PHP 5.3?\nhttps://travis-ci.org/ruflin/Elastica/jobs/5984331\n. I have not tested it locally yet. The tests us ES 0.20.5 at the moment ... I would also not be surprise, if next time the tests passes. Sometimes there are some issues with Travis ...\n. Lets see if everything goes green :-)\n. No comment ... Thx\n. It happened again that the build failed :-( I just talked to @s1monw and he showed me the env.ES_WAIT_ON_MAPPING_CHANGE flag. We should try to use this for travis to make elasticsearch \"waiting\" after the mapping change.\nhttps://github.com/elasticsearch/elasticsearch/blob/master/pom.xml#L346\n. Let's see if it is going to fix the issue: https://github.com/ruflin/Elastica/commit/4a1217f3e93d786ab649a9b539ede9a58f99ef5a\n. Looks like it is not really fixing the issue. Or at least there now seem to be other issues. Would could try optimizing to fix it. I would assume it would also reload the mapping as it is doing quite a lot.\n. Can you open a pull request with this enhancement?\n. As Pull Request was merged, I will close this one.\n. @munkie @webpatser @christeredvartsen Can you check if this is actually a bug or if it should actually be able to handle an array?\n@mattwillo Can you post the structure of your servers array?\n. Ok. I think you are right and the issues is really the foreach. What is important to note is that servers is deprecated and connections should be used ...\n. Ok I think we have a small misunderstanding here. servers is deprecated, because it was replaced through the keyword connections (in the config option). The array structure etc. is still the same. If you look at this pull request from @munkie it will be even extended. https://github.com/ruflin/Elastica/pull/357 So don't worry, it is not planned to remove this feature.\n. Looks like all tests are still green. Thx for the addition.\n. @cisox Interestingly this is now some of the code that is not compatible with ES 0.90.*. The reason is, that filter_indices already throws an exception \"index not exist\" before it can even check the array (which probably makes sense). So the question is now, how do we update this to make it compatible with 0.90?\n. This is fixed now and was implemented with HEAD. Thx @jokkedk \n. Could it be, that you use the \"master\" but you don't use namespaces? Because it is looking for Elastica_Client but it should be just Client in the namespace Elastica.\n. Oh yes, using composer is much simpler. Good to hear that it worked.\n. Can you please add a test for that and also add it to the changes.txt file?\nhttps://github.com/ruflin/Elastica/blob/master/changes.txt\n. As you are right and there is no ResultSetTest yet, please create it. We should have it anyways :-)\n. Thx\n. I see two options\n- You clean up to the pull request so only the stuff that belongs here is inside\n- You close this pull request and open a new one with only the needed changes\n. It's interesting, that Github does not allow me to directly merge it. Have to check on the command line what the conflict is ...\n. Also pushed to master. Thx.\n. Can you show your code example?\n. Closing as no updated provided.\n. Thx\n. After a lot of thoughts I merged it. I'm still not sure if we should keep abstract in for BC, but at the same time, the path changed anyway when we moved to namespace. \n. What I just realized (of course after merging), that the changes.txt should be updated with this change. Can you do this?\n. Merged :-) Thx.\n. thx\n. Except the small comment I added, it looks good.\n. thx\n. Interesting idea. Probably then Elastica\\Document should also implement the interface?\n. I think I prefer the interface approach. It will probably have the consequence that the implemented function will be just a proxy for an other function. But that sounds ok for me.\nI would assume, that the config approach could get quite messy. Also why use the config approach if we already have the nice \"interface\" feature?\n. Ok. But shouldn't this configuration probably happen somewhere \"outside\" Elastica? Of course there a both options.\nI'm undecided :-) \n. Sounds a little bit overengineered. Do you have a specific usecase where you need this? I personally have a use case where I could have used the interface but mapped it manually instead of passing the object directly.\n. Probably a good idea. Extending it will be much easier then changing functions with BC breaks ...\n. Damn, you are right :-)\n. I somehow have the feeling that this is an interface that we are going to move around and refactor quite a bit in the next months. I would still like to have it in the release but somehow mark it as experimental. Have you done something like that in the past and a good idea how we could mark it like this?\n. Merged. Thx.\n. Damn. Also forgot about this one. Probably I will not manage it today. So in case you have some time ... ;-)\n. which query are you using exactly? Because it depends on the query which parts are passed inside the url. Can you provide an example?\n. Closing as no updated provided.\n. Very interesting. I didn't see this feature so far. So the question is, how we should treat \"suggest\". Should we handle it the same way as Query, Filter and Facets?\nIf I look at the documentation, it seems like a lot is still coming here (not only Term and Phrase). \nWhat do you think?\n. I'm not sure if it is necessary to support the _suggest API endpoint directly. I assume that the following two requests are the same:\n```\ncurl -s -XPOST 'localhost:9200/_search' -d '{\n  \"suggest\" : {\n    \"my-title-suggestions-1\" : {\n      \"text\" : \"devloping distibutd saerch engies\",\n      \"term\" : {\n        \"size\" : 3,\n        \"field\" : \"title\"\n      }\n    }\n  }\n}'\ncurl -s -XPOST 'localhost:9200/_suggest' -d '{\n    \"my-title-suggestions-1\" : {\n      \"text\" : \"devloping distibutd saerch engies\",\n      \"term\" : {\n        \"size\" : 3,\n        \"field\" : \"title\"\n      }\n  }\n}'\n```\nOr is there a specific reason you think the endpoint needs to be supported (except for shorter notation)?\n. Ok, so what you say is, that the two examples actually do not return the same result. I wasn't aware of that (and should test it ...). So this is different from filters or facets where we don't have this as far as I know.\nSo I agree (in case it is different), that we should offer this capability in Elastica. As Elastica always makes it possible to build your queries yourself, this is already now possible. But there should be a nicer way to do it.\nNot sure yet, where we should place this _suggest.\n. @damienalexandre Any updates here?\n. As a reminder for myself: https://github.com/ruflin/Elastica/pull/460\n. The main thing I would change is to call it:\nElastica\\Suggest\\Term\nElastica\\Suggest\\SimplePhrase\nSame naming convention as for query and filter.\nWhy is it necessary to set the \"simple\" suggest with text? Is that necessary (yet)?\n. Close as pull requests were merged.\n. Can you open a pull request with this fix?\n. Thx. Can you add a small unit test so we can make sure that it also works properly in the future?\n. I tried to reproduce this and also wrote a test for it, but was not able to get the same result:\nhttps://github.com/ruflin/Elastica/commit/6ffb8aaf0d859dc127dca6ac84381f52ca1862a5\nThe query is already passed to createSearch and because of this it should also work without passing the query to $count. Do you have an example where it doesn't work?\n. @CriztianiX I will close this ticket as I was not able to reproduce it and no feedback came so far, because of this I assume the problem is resolved. If this is no the case, please reopen it.\n. Probably not. Did you check if it could conflict with one of the existing implementations? Please also update the changes.txt file. Perhaps you can also a test with one of the implementations or a mock object.\n. Was added with this commit:\nhttps://github.com/ruflin/Elastica/commit/feb0d1670d87c1b8a0a033fbd91ab941e0709f39\n. Please also remove the DocumentObjectInterface as it is not needed anymore.\n. I would say here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Type/Mapping.php\n. Can you add a unit test for this one? And please also update the changes.txt file.\n. Merged into master. Thx.\n. The code you are looking for is probably in Elastica\\Client on line 526 and then you can go up to \"tree\" to Elastica\\Log. The logging is based on the Client param log.\nYes, it could be much nicer. So far it is only possible to log to a specific file or the default error_log path. It would be nice to be able to inject a \"Logger\".\n. Would be nice. Have not worked with it yet. I assume it is also used by Symfony?\n. Yes, working on it. Hope I will have the time to fix it this weekend. This can be merged anyway, right?\n. Thx for providing all details. So this is a similar case like bulk requests where part of it can fail. So you would expect and exception in the first two cases and a \"exception\" stack in the last case, right?\nTake a look at https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Bulk/ResponseSet.php -> hasError. \n. @odi86 Do you have some time for a pull request? O:-)\n. We should store the error but not throw an exception as long as some are successful. Can you open the pull request?\n. But if you throw an exception and already the first shard is failing, you don't get any results, right?\n. Yes. But isn't that the solution you proposed above? I'm not sure if we mean the same :-)\n. Exactly. Can you open a pull request with this one?\n. Yep\n. Thx for the addition. I have to take a closer look at the psr-3 logger. I worry a little bit as this is the first required external dependency without Elastica cannot be used at all as it is directly used for the client. This means, applications which do not user composer will have a hard time.\nCan you please also add some tests and update the changes.txt file? This will be a BC break.\n. Any idea how we could get around this dependency but still make use of PSR-3?\n. Sweet. I wasn't able to test it yet.\nWhen I use Elastica\\Client, wont it complain anyways because of:\nuse Psr\\Log\\LoggerInterface;\n. I added some more small comments. Really looking forward to merge this one. Thx.\n. Also already added an empty page for Elastica.io :-)\nhttps://github.com/ruflin/Elastica.io/commit/2b102d28950186473719c65907ac15b56f29d46d\nhttp://elastica.io/logging/\n. @andrey1s Almost there. Can you update the \"style\" issue @daFish mentioned? Please add a comment afterwards as I'm not notified about new commits. So I can directly merge it.\n. Thx @andrey1s for the contribution.\n. If you are looking for examples, please take a look at the tests:\nhttps://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/FilteredTest.php\nAlso please post questions which are not bug reports, issues or future requests in the Google Group: https://groups.google.com/forum/?fromgroups#!forum/elastica-php-client\nI will close this issue. In case the example does not help, please repost it in the Google Group.\n. Will this cause troubles for users that implement it at the moment with upper case? I think the reason that it is lower case on packagist is, that upper case back in the old times was not possible. \n. I would have expected, that this could have an effect on the guys using composer but not the ones including it manually. Why should it as your change is only on the composer side. The classes are still uppper case as before, so it should not have any impact?\n. Ok, I see. I also checked a few packages and they are lower case. Works for me. Can you please update the changes.txt file with this change and also add a note, how to fix it in case someone has trouble?\n. Thx\n. Nice. Can you add a note to the changes.txt file?\n. Looks like the changes.txt was just updated so we have a merge conflict. Can you merge in the changes from master into your pull request? Probably it is only 1 line in changes.txt. Please comment when this is done, as I don't get notified about new commits.\n. Merged. Thx.\n. Can you update the changes.txt file? Make sure you merged in the most recent changes from master.\n. Merged. Thx\n. I didn't merge it yet as travis is having troubles building the pull request. But I assume it is not related to the pull request as they have general problem with Github at the moment.\n. Can you update the changes.txt file about the renaming of the function? I hope this part will simplify as soon as we completely remove the support for the $servers array.\n. Connections is used the same way as servers. As you see, the exact same function is used. So it makes sense to switch in the bundle.\n. Merged into master. Had to resolve a small conflict in changes.txt\n. Thx\n. Merged and conflicts resolved. Thx.\n. Nice. Can you add a small test that makes sure this problem will not occur in the future. Probably it's best to implement the example from the google groups discussion.\n. It's this groups post here. I thought that is the reason you opened the pull request :-)\nhttps://groups.google.com/forum/#!topic/elastica-php-client/QqLIyIdUlMI\n. I think quite a few features were added since we implemented that. Perhaps we can directly discuss it in a pull request. I will try to get back to you this weekend.\n. I can spot a few problems. So far I kept Document completely independent of the client. So $document->update() will not work. I assume what you want to do with setDocument is adding / updating multiple values in a document object? So why not call it $doc->setValues(array(...)). Or is there a specific reason you want to put in a full object?\n. Can script and doc be used at the same time or is only one of the two possible?\nIf I look at the current implementation of updateDocument, it looks quite complexe. But when you look at Client:287 there is already an implementation for 'doc'. Can you try if this implementation already works?\n. Ok, now I got it. I somehow thought this is the same. Not sure yet, how we could clean this up a little bit and make it simpler. Any idea?\n. Ok, lets go with this option for the moment. It looks a little bit like argument hell but probably it would need some major refactoring to get a better solution. So for the moment I prefer to have the future in and simplify / refactor it later.\n. @Vrtak-CZ Somehow I completely missed this pull request :-( Can you add a small tests and update the changes.txt for this change?\nhttp://elastica.io/contribute/pull-request.html\n. Thx. Merged into master.\n. @sixteenstudio Which version of Elastica and elasticsearch are you using?\nAnd are you able to reproduce the problem with a simple example? Is it happening to every request? Or only from time to time?\n. Just took also a closer look at the exception. So 1 create and 3 index failed. How many docs did you put into it at once? All 4 seem to have a mapping problem. This sounds like some of the documents have an unexpected format ... (nested)\n. Thx for the update, but I think you misunderstood my question. What is the size of the array passed to add documents? \nMy assumption is, that the size of the array is larger then 4, but only 4 documents fail to add. This would mean, that 4 of all documents have an invalid format. An \\Elastica\\Document can have content inside which will not be compatible with elasticsearch. For example you could set in Elastica\\Document a value with / but you will have trouble to use this with elasticsearch. As you pass some quite large arrays, it could be that some of them are too large, have duplicated values inside (in case this should not be the case), invalid characters or something else that is not expected.\nWhen I look at the fields above you lised, I don't really see a field that should be an array? The error logs of elasticsearch would also be quite interesting.\n. Good to hear it works now. The easiest way to start contributing is adding some documentation to Elastica.io ;-)\n. Can you please update the changes.txt file?\n. Some tests to see if it actually works? :-)\n. Can you add a comment as soon as the open points are resolved? Because I don't get a notification for added commits ...\n. I assume you mean splitting up the large tests into multiple smaller tests. I like that.\nBTW: All other things look good. Tests are passing.\n. Perfect. Thx. I always prefer to have smaller and less complex code / tests.\n. Can you merge master. There seems to be a conflict. Probably changes.txt file ...\n. Would be nice if you could merge it. Like this I only have to press a button and the build can also turn green in the pull request :-)\n. I just realized it was my fault as I just merged an other pull request. Will merge it in a minute.\n. Merged and pushed: https://github.com/ruflin/Elastica/commit/3ac7be7847a49f2dc484259895099a57b8bf48a1\n. I have not released it yet because of the BC break of the change on 2013-06-30 so I should write some proper release notes ;-) But I agree, it make sense to do a release. How urgent is it?\n. I plan to do it this weekend.\n. @mrafalko http://elastica.io/2013/08/25/release-v0-dot-90-dot-2-0/\n. The execution mode could be used through setParam I think. The same is probably true for terms lookup. But to make it a little bit easier to use, it would be nice if you could open a pull request and add it as functions.\n. Closed based on https://github.com/ruflin/Elastica/pull/741#issuecomment-68550735\n. Can you add a unit test for this?\n. Merged. Thx.\n. Interesting. I didn't have the time so far to take a closer look at it. Did you change the Elastica or elasticsearch version?\n. There is sometimes an issue with dynamic mapping. So the failed tests are not related to your code. I added some comments to the code. Please add a comment when you added a commit as I don't get a notification about new commits.\n. BTW: Don't forget to also update the changes.txt file.\n. There is a stable tag and it is already v0.90.1.0 as elasticsearch made the jump from 0.20 to 0.90.\nhttps://github.com/ruflin/Elastica/tree/v0.90.1.0\n. I thought this already happened as we had a discussion about this in an other issue as far as I remember?\n. Can you also post the Elastica code you were using and you tried to read out the facets out of the result? Perhaps it makes more sense to discuss this directly in the google groups as I want to use the issues mainly for bugs / feature requests and less implementation question. Of course this could end in an issue ...\nhttps://groups.google.com/forum/#!forum/elastica-php-client\nThere seem to be some implementations where it at least works with facets: \nhttps://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Facet/FilterTest.php\n. There shouldn't be any limitations with this as the response object is independent of the query used. In the example we have a Term query. Perhaps it is a specific problem with the Fuzzy query. Can you create a gist with some code to reproduce it?\n. You can use the email address state in headers most of the source code files. Yes, it works ;-)\n. GeoShape Filters were added in the mean time. Queries are still missing.\n. @nicolassing Please open a pull request. Thx.\n. :+1: \n. Looks good. Could you please add a test to verify that this works and update the changes.txt file?\n. Merged, thx.\n. I see that there are quite a few differences between pre indexed and provided. But I'm not sure if we should really create two different objects for the geo_shape filter. I would suggest to implement it in a way that the same constructor can be used and base on the params that are set, the right geo_shape is selected. I could also see that only the basics which both filters have in common are provided in the constructor and the other params have to be set on the object. So I would merge these two objects. What do you think?\nPlease also add tests for this.\n. Ok, looking forward to it.\n. @quidage Any updates here?\n. Will close this one as changes were merged into #568 \n. I updated to es 0.90.2 so we can at least test these newest changes: https://github.com/ruflin/Elastica/commit/f54a864d47e9f5b36157de1cce9f32e03e941db1\n. Updating more params is definitively not the best option. I still haven't gotten my head completely around this feature to really come up with a great idea how to implement it in a simple way. It still feels like a hack.\n. Or we could have a function setDocument, setScript and setData. setData automatically recognizes what to do and call setDocument or setScript automatically.\nIf you acll setUpsert, is a call directly made? Or how is this going to work? \n. Quite a bit of code. I have to take a closer look at it this weekend. Thx.\n. Sorry, I was on the road the last two days. There seems to be a merge conflict. Can you merge in master again?\n. Merged. Lets see how many people will have troubles with the BC change. Keep an eye on the google group ;-)\n. Looks good. Can you add a test for this and update the changes.txt file?\n. @Vrtak-CZ Any updates here?\nhttp://elastica.io/contribute/pull-request.html\n. Thx. Merged into master.\n. Can you add a test for this and update the changes.txt file?\n. Thx. Merged.\n. In think we have here a combination of different issues. My plan is to sit down once half a day and really resolve them, but so far I didn't manage to. Here a list of issues I've come up with:\n- elasticsearch request issues: The tests are quite intense for elasticsearch as lots of indexes are created, removed etc. Since we have multiple instances running at the same time, this got bigger of an issue. What I'm not sure about is, if this is an elasticsearch, Elastica or travis issue. It could be related to Travis as perhaps packages are lots, not enough memory or something like that.\n- Travis issues: Sometimes builds take forever on travis and timeout. As we have quite a large set of tests I'm not sure if travis runs out of memory or sometimes is just under too much load with other builds to handle it. Not sure how we can fix it. These issues could also be responsible for some inconsistency in elasticsearch. I could also see, that there is an issue when about 18 instances of elasticsearch are running at the same time for different builds. Theoretically, this should not be an issue. But you never know.\n- Elastica issues: There could be some tests (percolator, dynamic mapping) that should be more persistent with optimize() or something else, to make sure before the test finishes, it was put on all nodes. Here we should probably put some brain power into it. \nMy main issue is, that sometimes all tests pass, sometimes one test fails etc. So it is very tedious to debug. An of course, most of the time locally it works but then fails on Travis. Interestingly, the last build passed except for PHP 5.5. But again here, I don't think it is a PHP version issue. \nSo it seems like we have to go on with try and fail a little bit longer. But I would really like to get this fixed as I think everyone that opens a pull request and does not see it going green is confused.\n. I restarted the build. Some of the builds passed, some hat problems with Alias and Percolator. We had these problems in the past and managed to fix it. So I'm surprised they show up again. Especially the Alias issue should be fixable through some refresh ....\n. I merged it for the moment, because I think it only helps and will not make it worse :-)\n. Lets move the discussion to Issue #422 \n. Can you please update the changes.txt file and add some tests?\n. Don't worry about this error. There are some problem with the Travis build #422 This is not related to your changes.\n. Can you add some tests?\n. Thx. Merged.\n. I will close this as with several improvements the build now normally pass.\n. There are some good and some bad news here. Good news: File path is fixed and should work again. Bad news: The version of elasticsearch installed on this vagrant box is completely oudated as the box is from 2012-05-28. It would be very nice if someone could create a vagrant box updated with the newest version of elasticsearch. Probably even better, setting it up with some puppet scripts, so we can install the newest version automatically in the future. I can host this image on my side. This is not a problem.\n. BTW: Good point about the getting started idiot guide. The Vagrant box would simplify this again. We have a getting started guide but it is not too complete yet:\nhttp://elastica.io/getting-started/\nIf you have some time to contribute to it, it would be great.\n. You're welcome. I would say we keep the issue open and see who is first in getting it fixed.\n. @newLoki No special requirements except the tools which are required for the testing the build like phpunit etc. The list of tools can be found here: https://github.com/ruflin/Elastica/blob/master/build.xml\nThe time I wrote the Vagrantfile there weren't all these services around Vagrant. I'm more then happy to use one of these boxes if it works. Feel free to open a pull request with the new file.\n. In general the error messages should be quite clear and tell you, if the problem is Elastica, es or your library. There are no such integration tests yet. Probably the most simple thing to do is, write a PHP file with an Elastica Client and then call a simple search on it. Like this you directly know, if it is connected. You can also use the node Info or Stats object: https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Node\n. Please reopen the issue in case the problem still exists.\n. Looks like your pull request is going to solve the problem for FOQElasticaBundle, right?\n. Hi @atsiddiqui \nUnfortunately the query Builder has not been updated in quite some time. In general I recommend to use and combine queries directly instead of using the query builder as quite often it leads to some problems when queries get more complicated. If there is an easy way to fix this, feel free to open a pull request.\n. :-)\n. The main question is here probably, what are the ids that are not allowed? Is it only an empty string? If yes, it should be $id == ''\n. So existing unit tests are probably wrong or at least, do not test the exception cases. The main problem is that I assumed that none sets the id as 0. But I was wrong here :-)\n. Agree. Can you update it?\nhttps://github.com/ruflin/Elastica.io\n. Pull request: https://github.com/ruflin/Elastica.io/pull/11\n. Shouldn't we add proxy as an official param to the connection also? Like this it is a really \"hidden\" feature.\nPlease also update changes.txt and if possible a unit test.\n. Exactly\n. I don't really see why it should not be possible to add tests? Get / Setproxy should be quite easy to test and I assume there is also a way to figure out if the proxy actually worked for a request. But I see that the second part could be quite tricky with travis. \n. ok, looking forward to it. Can you add the simple tests and the documentation and then we can merge. And for the more complicated tests I would suggest to open an issue, so someone can add it later.\n. About the documentation: I meant adding a link to the php documentation about HTTP_PROXY. \nThe tests look good. I would suggest on additional test. Add a proxy that doesn't exist and verify that the tests fail. Because the way the tests are so far, it could be that the proxies are never used and it would probably still work.\n. Please merge master into your changes as there seems to be a conflict.\n. I missed the test for 403, sorry. This is perfect..\n. Thx, merged.\n. thx\n. This is now in use: https://github.com/ruflin/Elastica/releases\n. The debian package was created by @mwiercinski. At the moment there is no specific plan from my side to create a debian package, but I would be glad if someone else provides one. I created some debian packages in the past and as far as I remember it wasn't that hard. Check here:\nhttps://wiki.debian.org/Packaging\n. There are probably also other places where this applies as this was not the standard when the development of Elastica started. Thx for fixing it.\n. Does not look successful yet. I restarted the build to see what is going to happen.\n. Memory issue. And I think we will get one this time as well: https://travis-ci.org/ruflin/Elastica/jobs/9807531\n. :+1: \n. There is most of the time one or two builds that take forever and fail. Normally if tests fail randomly I would blame the test setup or the way that tests are run. I would try to figure out, what the possibilities could be that one build influences the other one. Unfortunately I have no clue why this happens here. Interestingly it quite often starts with a bulk request that fails because of memory and then it goes crazy.\nBecause memory seems to be an issue, I assume there are some memory leaks in the tests or Elastica. A solution could be to find possiblities to keep the memory of the tests much lower which also could make them faster. Here we even have --process-isolation activated for phpunit which normally should solve that problems. Perhaps someone from @travis-ci has an idea how to solve this?\n. I like the idea. So in a way you want the exception class name of elasticsearch, right? $e->getElasticsearchExceptionName() (or something like that).\n. What you mean by fixed? Did you open a pull request for this I didn't see?\n. Looks good to me. Next steps? Pull request?\n. Don't worry about travis.ci. This one should just work when you open a pull request.\n. Closed through #526 \n. Don't see an advantage of the one over the other. Can you add a small test for this so we make sure someone does not change it back in the future again?\n. Agree, but it works :-) Probably it needs a short comment in the test, why this test is here ...\n. Thx merged.\n. I just had a quick look at the implementation. I would say it allows to omit the type and I could also see, that an array of types (in string form) could work. Did you try it out?\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/Ids.php\n. Ok.\n. I also agree to this. \n@xatoo or @predakanga : Can you open a pull request with this change?\n. @MrHash Looks good. Can you open a pull request with these change? Don't forget the changes.txt file and if possible a test:\nhttp://elastica.io/contribute/pull-request.html\n. @jpetitcolas Looking forward to the PR\n. Nice addition. Can you update the changes.txt file with your changes and fix the naming issues?\n. Looks good. I would like to see one addition. Can you also create a test where Elastica actually runs a query on elasticsearch to confirm, that also the specific elasticsearch version supports it? Like this we always know in case we upgrade to a new elasticsearch version, if the client is still compatible.\nBecause of an other update to changes.txt (because I was too slow) there is now a conflict in changes.txt. Can you merge master and resolve it?\n. BTW: Please add a comment when you updated it, as otherwise I don't get notified.\n. Somehow got an e-mail for your comment but couldn't find it anymore. One thing I just realized: Rescore is not a query type. So it should not be inside Elastica\\Query*. In a way in Elastica\\Search.php and Elastica\\Query.php there should be a function setRescore(Elastica\\Rescore) ...\n. There is a little bit a mix between Search and Query. From my point of view, Query only exists because of legacy. In the beginning there were not facets, filters etc. so query made totally sense. I think in the long term everything should be transferred to Search. So at the moment normally it is implemented in both ...\n. Somehow i miss the AbstractRescore.php file? Will there be one rescore per search or multiple?\n. @mjhu Any updates here? I think it would be very nice to have this in the code.\n. Yes, but I miss some files. Check my comment above (2 months ago)\n. @mjhu Any updates here. I would really like to have this in Elastica.\n. @mjhu Thx for the update. Can you add some tests that test Rescore directly with elasticsearch (integration tests). As far as I can see the current tests all check if the models are correctly built which is good. But to detect changes and implementation issues with elasticsearch itself making calls is very helpful.\n. Merged, and all is green. Thx.\n. Can you add a small test for this one and update the changes.txt file?\n. Thx, merged.\n. Elasticsearch is always evolving. So it looks like now also a filter in a nested query is supported. You are right and this should be added to Elastica. Can you open a pull request with your changes?\n. Introduced through #449\n. My suggestion would be:\n- Update percolatorTest\n- Add documentation on Elastica.io\n- Do we need a special function in the Result object to retrieve that?\n. @mrafalko Any udpates?\n. I think the issue here is not the missing documentation of elasticsearch, just that some engineers expect that Elastica exposes \"all\" functions as functions. In general I think we need to have a closer look at the Result object also together with Aggregations. More documentation is also never bad. But I agree that this specific issue can be closed especially as it is quite old.\n@borNfreee Please reopen it in case you still see it as relevant.\n. Looks good. Can you merge in changes.txt again. I assume it has changed during our discussion :-)\n. Thx. Errors in Travis are because of ES 0.19.3 ...\n. Can you add some unit tests for that and update the changes.txt file?\nhttp://elastica.io/contribute/pull-request.html\n. Sure. Merged.\n. Not sure how you got onto this page. The official documentation is under http://elastica.io/ and the links should be ok. Where did you find the link you used above?\n. Hi @Musiksammler \nThat is exactly what I was looking for. It should be fixed now: https://github.com/ruflin/Elastica/commit/1a0fc2a3471825f5fb33f1517446fa0120106a32\nDanke ;-)\n. @jappievw In case you have some to look at one of these?\n. I restarted the build again but same errors. The errors did not occure with 0.19.2. Not sure why it happens now. To be honest I didn't test it locally yet.\nI would probably go with option 3. \n. Assume we \"request\" too much of the boxes: Why did it work with 0.90.2?\n. Perhaps we should try to disable the nginx and to see what happens.\n. Interesting idea. Not sure how we do that on travis?\n. Looking forward to it as usual ;-)\n. Ok, so we have the logs now. Now we \"only\" have to figure out the issue :-)\n. @jappievw You can also use two instances. The 3 instances are used to make sure, it also works with 3 and some test shut down one instance so only 2 are left. BTW: This could be perhaps part of the problem that the shutting down does not happen properly? Tests with 1 instance should also work. Perhaps that's a good point to start.\n. Ok. Not sure if we use the travis recipes if we then can install the extensions and run multiple instances? I have to take a look at it in detail.\n. Almost. There are still some failing ...\n. Can you add a small test for this and update the changes.txt file?\nhttp://elastica.io/contribute/pull-request.html\n. Merged with quite some delay. Didn't see the update ...\n. Lets see where this is going ;-)\n. Looks like also some pdf tests are failing. Do we also have an update for the mapper?\n. I merged the other one.\n. Merged. I was just checking where the logs are. There is a Download log option and I checked the previous builds too. And it seems to have very similar content? So we already had that? Not sure :-D\n. @saudurrehman Sorry that this stayed open for so long. You can use the $options parameter for this. Here an example: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/TypeTest.php#L414\nPlease reopen the issue in case this doesn't help.\n. Is your elasticsearch server having a valid certificate?\n. This could be the problem as you also had to click once in your browser that you accept the \"non verified\" certificate. Curl needs some additional params here: http://stackoverflow.com/questions/316099/cant-connect-to-https-site-using-curl-returns-0-length-content-instead-what-c\nYou can disable the verification, but that can lead to security issues:\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\n   curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); \n. It would be very interesting to see what curl_error puts out. If we have the error message it should be very simple to debug (hopefully).\n. Can you post the composer file you used?\nDid you try to add curl_error?\n. To check out the master, can you try \n\"ruflin\"elastica\": \"dev-master\"\nLooking forward to see the curl_error output.\n. So it was in the peer verification problem as I mentioned in my first comment?\nAbout the logging: The question is what you want to log. If you want to log php errors, you should do that directly in php with a debugger (for example xdebug).\nAbout general logging for Elastica you can find some more details here: https://github.com/ruflin/Elastica/issues/385\nUnfortunately the problem your brought up with the curl error, this one is not logged yet. So something should be implemented to have this error also in the log.\n. Interesting. I would have expected that this works as the request is for the HEAD now (we modified that). Sounds like have to change that again. Do you have any suggestion how we can fix that?\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Index.php#L219\n. We had the request call before on _settings which lead to other issues. I think it was especially a problem when it was used very frequently because it consumed a lot more memory then this very simple call. \n@kimchy Is this as expected?\n. @paulrblakey thx\n. @konstantinmopals Can you please also add some unit tests for this?\n. Probably less ES instances has a bigger effect (see other comment)\n. jep\n. @konstantinmopals Can you merge this again with the master to see what the current build status is?\n. @konstantinmopals or @nurikabe  Can you please merge master in again and update the changes.txt file?\n. Can you push it into this pull request here? Or open a new one? Like this the build is automatically run on travis and we see what the problems could be.\n. @lonamiaec Finally I get back to you. I think it goes in the right direction. So far I have not used suggest myself but if I ready the elasticsearch docs this is the way to go. It seems like this is going to grow. Some additional tests would be nice.\n. As this is a completely new implementation I would suggest that we add some more tests, especially also test the calls to elasticsearch (not only the structure). Like this we are also aware in case the implementation changes.\n. Looks good. The only thing now missing is the update to the changes.txt file (make sure to merge the newest one from master).\n. @damienalexandre Unfortunately I already merged this pull request. @lonamiaec Can you open a second one with these fixes?\n. Agree. The suggest feature will be extended in the future step by step.\n. Agree. Can you open a pull request with this addition?\n. Thx for the addition. Before we merge it, we need some tests to make sure it works. Also see pull request guidelines:\nhttp://elastica.io/contribute/pull-request.html\n. @luiges90 Any updates here?\n. Ok, thx for the update.\n. @OwlyCode It is planned to merge this pull request but it still needs some additions (see comments above). I agree that we should introduce the constant. Perhaps you can take over the pull request and add the missing parts so we can merge it?\n. Ok, let me know when you pushed the changes as I somehow don't get notifications for new commits.\n. I agree that it make sense to directly update ot es 0.90.4. Unfortuantely we still have the same problems as with 0.90.3 \nFYI: @jappievw \n. Can you add your commits to this pull request so we can merge all together?\n. There seems still to be an issue with the Geo Cluster query? But it already looks much better.\nThere also seems to be a merge conflict. I assume it is related to a merge I made yesterday in the changes.txt file. Can you resolve this conflict?\n. I merged it as it solves quite a few other problems. Do you have any idea when the next version of the GeoCluster plugin is going to be released?\n. Perhaps it makes sense to directly to the the developers? Perhaps they are not even aware of that ...\n. @webpatser Any updates here?\n. Ok\n. @webpatser I would like to merge this if the tests pass and the changes.txt file is updated :-) Any updates here? http://elastica.io/contribute/pull-request.html\n. Fixed and closed through pull request #560 \n. Interesting. The only downside is that it adds dependencies to Elastica. So far the basic functions of Elastica can be used without the installation of any additional dependencies.\n. Interesting idea. So the default Http Transport uses the \"standard\" client and Guzzle can be used as an option.\n+1\n. @webpatser Any updates?\n. I close this one as Guzzle support is now part of the repository.\n. Thx. Can you also update the changes.txt file?\nhttp://elastica.io/contribute/pull-request.html\n. That was fast :-) And we have some green builds since quite some time ago. Thx a lot.\n. @jlinn Looks like we have some new Geo issues: https://travis-ci.org/ruflin/Elastica/jobs/14162673 It was introduced with ES 0.90.7 (or .6). Do you have any clue about that?\n. Nice. Green Builds. Way to go. We could now even try to go for 3 elasticsearch instances again.\n. @jappievw FYI\n. Resource problems as usual in one of the builds :-( I think we should merge it anyways.\n. Thx. Looks like a reasonable addition :-)\nCan you update the changes.txt file and add a small test? http://elastica.io/contribute/pull-request.html\n. Merged. Sorry for the delay. Unfortunately I don't get a notification when a new commit is added.\n. The problem is, that when we don't reuse the connection and close it every time, the calls will be much slower or we will have some memory leaks (as far as I remember that was the problem).\nMy suggestion would be, that we close the connection in case \"persistent\" is not set to true for the connection. Would that solve the problem to make it configurable?\n. @audriusb @saimaz Not sure how this would work as you rarely have the Transport object directly. As every client can have multiple connections, for which one you will get the transport and close it?\n. A static resource for all Transport in one request is created, right? Most of the time php scripts are not long running. So the question is, what happens in case the script ends and the connection was not closed?\nIn the code, a new connection is only opened in case no other already exists already in this request. Unfortunately we do not have any persistency between the calls (which probably also good).\nI agree on point two.\n. @audriusb @saimaz Any next steps here?\n. Ok. I hope the curl_close issue was not the main reason ;-)\n. Agree. I will keep the issue open.\n. Agree. Lets hope we get some updates from @webpatser\n. My suggestion is that this is something that should go into Elastica\\Util as it is not directly an \"index\" function that can be called in Elasticsearch but a specific implementation. You pass the old and new index name and the magic is going to happen. What do you think?\n. @russellseymour As far as I know it is not in Elastica yet. So it would be very nice if you could pick it up.\n. @Tobion Any updates?\n. @michellesanver Looking forward to it.\n. @xawiers Unfortunately you are right :-( Somehow this disappeared during the refactoring of Connections and Transport. Before it was directly in the transport, now it should be done in the client in Elastica\\Client::getConnection().\nCan anyone of you add it again?\n. @Altreus Back in 2012 this was the actually the effect. Since then the implementation on the side of elasticsearch has changed. The option to return all results was removed (I assume for performance reason). So this is not possible anymore.\n. Which version are you using?\n. @SimonSimCity Agree, this should be removed. Can you open an issue with that so we can directly close it with a pull request?\n. I agree that this should be supported. The simplest way is to open a pull request with the additional function.\nWhat do you mean by omit toArray()? toArray should always be executed by the query / search object. \n. Looking forward to it.\n. @Altreus Any update?\n. Closed based on https://github.com/ruflin/Elastica/pull/741#issuecomment-68550735\n. Thx for the addition. The documentation to run local tests is here:\nhttps://github.com/ruflin/Elastica/wiki/Run-tests\nhttps://github.com/ruflin/Elastica/wiki/Build-project\nBut to be honest, this should be transferred to Elastica.io and updated.\n. You mean for this changes? I would assume the next weekend :-)\n. I thought it was enabled, but it wasn't. Now it is. Can you check again?\n. @36degrees http://elastica.io/2013/10/27/release-v0-dot-90-dot-5-0/\n. Why should this support non integer? In which cases is it no an integer?\n. I assume you are talking about this part:\n\"The default match query is of type boolean. It means that the text provided is analyzed and the analysis process constructs a boolean query from the provided text. The operator flag can be set to or or and to control the boolean clauses (defaults to or). The minimum number of should clauses to match can be set using the minimum_should_match parameter.\"\nI can't find in here that the minimum_should_match can be a boolean operator. It says, that the default query is of type boolean.\n. @MrHash You are right. It helps to read both links posted. Sorry about that. I just fixed it here:\nhttps://github.com/ruflin/Elastica/commit/11b410ef437b84ea43c25b9e5e388b307e49ab36\nIt would be nice to have some validation for this, but it looks to complex to have an easy validator. So validation is now happening on elasticsearch directly.\n. @gromaco Which version of Elastica are you using? I remember that this was a bug but if I check now all the createSearch functions the query is set.\n. No problem :-)\n. Can you add a test an update the changes.txt file?\nhttp://elastica.io/contribute/pull-request.html\n. Looking forward to it. Please leave a comment when you added it as Github does not notify me about new commits ...\n. Looks like the tests failed under PHP 5.3. Not sure why. \nhttps://travis-ci.org/ruflin/Elastica/jobs/13218043\nPerhaps I could make sense to add a refresh before you check again after deletion.\n. I restarted the build and now everything seems to be fine. I will merge it.\n. Some comments from my side:\n1. As you mentioned correctly, it would require Psr/Log dependency. On the one hand I'm a big fan of composer and it makes dependency management quite simple. But not everyone is using it and if there are required dependencies in Elastica it will make it more complicated to just get started with it. So I would like to keep it optional. I prefer to fix the \"hacky\" fallback logging.\n2. Monolog is again a dependency. We should make it available as option to error_log\n3. Not sure why not. If a dependency is not met, I think an exception is quite a good option. What would you recommend?\n4. We had something very similar in the past. I actually prefer to have the full request in the log as it has more informations then just the data. The main problem here where I agree with you, is that it is not easily readable in the log. For this we have created this util function: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Util.php#L147\n5. Agree. @ChristianRiesen is taking care of this.\nMy suggestion would be, that we start fixing number 2 and 5, and start discussing on the other 3.\n. I like your suggestion for number 2 even though it will break BC. As long as not logger is set, logging doesn't happen. \nFor number 4 I agree that about 90% of the information is the same (connection object has some additional info). But in case we push the logging to an external library I would suggest we provide the library with the object and it is up to the log implementation how and what should be written to the log.\n. Thx. Can you also update the changes.txt file? I assume writing a test for it will be quite challenging :-) \nhttp://elastica.io/contribute/pull-request.html\n. Should I merge or wait for a test? I see some possibilities how to make it, but not sure if it is too much overhead.\n. Testing the protected method is one option. The other option could be to set the log location and make a call that should be log (set log level) and check if the file has the content inside. But this quite a bit of overhead.\nSomehow your tests fail. Can you double what is happening?\nhttps://travis-ci.org/ruflin/Elastica/jobs/13315840\n. Ok ,let me know when it is ready to merge. Otherwise I can also merge it without the tests as I assume it will work ;-)\n. @ChristianRiesen Any updates here?\n. Looks good, except that somehow there are problems with Travis. I don't think it is related to your pull request. The only option I could see, that now it is logging much more and is breaking because of this. But that would be good to know actually, because it would explain the problems Travis sometimes randomly has.\n. Yes, the interesting part. If you look at the past builds, there were normally 4 out of 6 that run in less then 10 minutes, and a few take forever. And of course not always the same once ...\nhttps://travis-ci.org/ruflin/Elastica/builds/15483995\nNow all take forever since the upgrade to 0.90.10, but not sure if it is related to that ...\n. I assume at the moment there is a problem with the extensions ...\n. Ok, seems like the problem was related to the thrift plugin.\n. One thing that just came to my mind is that we could actually make the log level part of the config and make it there default. So this could also be changed for production for example ... What do you think?\n. https://github.com/ruflin/Elastica/issues/482 :-)\n. Which PHP Version are you using?\n. Unfortunately I'm able to reproduce it. We had a similar issue before which was related to the connection pool. I will dig deeper her to figure out which objects are not removed properly. Unfortunately PHP is not the best language for long running processes :-(\n. Not yet, sorry :-( Can you do it in batches instead of 1 very long running script?\n. I also have it running in one projects with batches up to 10k. But I also assign quite a lot of memory ... On issue is that I index also large pdf files (up to 250MB). But the main issue that I had here is that sometimes batches started to overlap with updates etc. The problem was then not on the ES site, but actually in the db and starting new batches.\n. So also when you comment out the _log part in the original function, the memory leak still exists? What if you remove the old function and rename the new one to request(...)?\n. Ok, that is actually good to hear. So there is no \"magic\" going on. Logging in Elastica is planned to be refactored. If you disable the logging in the \"config\" for Elastica, you only have the FOSElasticaBundle memory leak, right?\n. @hmonglee Can you open an issue with the memory leak in logger? Because this ticket has initially quite a different description. \n. I will close this as the next steps are in #523 The memory leak is in the logger an not addDocuments.\n. This seems to be resolved thorugh #486. Please reopen if issue still exists.\n. With these changes, one of the HEAD tests fails which passed before. What are the next steps here?\n. So instead of setting the option to false if HEAD is not set, the option should be removed? Sounds like a bug :-) The bug you provided is quite old. Did you find some other information about it?\n. Thx for the extensive research and debugging. I'm sure you will not be the last one with this problem. I'm not even sure if we should put somewhere on Elastica.io a note for it in case others Google for the problem.\n. Interesting idea. I didn't know this is also possible for php \"core\" libraries. Can you do this?\n. Can you test / try it?\n. @Xylakant Thx a lot for reporting that. So I can just replace the \"boost\" param through the \"boost_factor\" param, right? Or is it more then just a renaming of the param? I have to check the documentation and the pull request in detail:\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html\nhttps://github.com/elasticsearch/elasticsearch/pull/3891\n. I assume this is fixed through https://github.com/ruflin/Elastica/pull/507?\n. Ok :)\n. Thx, will check how I can create a workaround in Elastica. Probably the best on at the moment is to follow your recommendation to tell developers to set it manually and wait for 0.90.6 to have it fixed.\n. Jep. I really appreciate that.\n. Agree.\n. Jep, is not implemented yet. Should be quite easy to add. \n. Fixed and issue opened to add a test: https://github.com/ruflin/Elastica/issues/493\n. Ok, I see. Looks like we have to do some refactoring of FunctionScore and especially add some tests.\n. I will close this one as the pull request is merged and I think it solves this problem.\n. Is there somewhere a list of things that were changed and removed in the final implementation?\n. As usual, the best spec is the elasticsearch source code itself :-)\n. @dwenaus Good to know. Thx for the update.\n. It looks like additional fields were added to the field query. I would actually expect, that both queries return the same result. So the first one didn't work?\nWhat also needs to be changes is that so far boost and enable_position_increments is not possible to set.\n. Ok, good to hear. \n. Thx for the addition. Can you please add a test and update the changes.txt file? http://elastica.io/contribute/pull-request.html\n. Ok, very nice. I merged it even though some tests are failing. These is not related to your changes.\n. Resolved.\n. @yvmarques I will check this in detail during the weekend. Do you have any chance to try it without https? Or all the other calls work the the same client?\n. Can you provide me with the exact code you used? \n. Which one of the tests? There is more then 1 test in the file :-)\n. @yvmarques Unfortunately didn't have the time yet to look into it. Were you able to solve the issue?\n. Ok, let me know when you need some help.\n. There is now also a new implementation of the suggest feature: https://github.com/ruflin/Elastica/pull/510\n. I assume this on is closed with #510 In case the issue still exists, please reopen.\n. Until a week ago it wasn't in Elastica. Now it is as @trash80 just implemented it :-)\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/Regexp.php\nIt will be part of the next release. I hope this helps.\n. Looks good. Can you also update the changes.txt file? We should probably also add some \"dependency\" requirements into the readme of every version ant the release notes?\n. I added it to the README: \nhttps://github.com/ruflin/Elastica/blob/master/README.markdown\nProbably it should also be added to Elastica.io and we should add one more column \"required\". Only the first one is required. All the others are optional based on the features that are used.\n. Ok, also added the column. I will also add it in the future to release pages.\n. You can get the full data with the function getData() and it will return and array where you can access _id. Response is a general object which is used just to store the data so it does not have functionally for specific responses like the one you have above. If you use the function addDocument (https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Type.php#L62) you will have the _id and _version afterwards directly stored in the document itself and you can use it.\n. There is a magic method I also forgot about that will solve this issue. Try:\n$doc->setAutopopulate(true);\n. Probably we should add some documentation about that on Elastica.io. If you have some time ... ;-)\n. Probably the best channel is e-mail. The one here on Github actually works ;-)\n. You can find it in the author tags ;-) https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php\n. I hope I could resolve the first issue with my last commit (see above)\n. About the error / exception. I agree that there should be an exception. I think the problem is, that the error is in the \"reponse\" and not in the \"bulkResponse\". And if there is already and error in the response occurs is in this case not checked. I have to take a close look into this.\n. It is not planned yet but I'm sure someone will implement it if there is a need. The good part is, it will be possible to use it already from day one with the raw queries:\nhttp://elastica.io/example/raw-array-query.html\n. @krzaczek Nice, looking forward to the pull request.\n. Very good question. I think so far we didn't have this problem yet. Something like\nGlobalAgg\nGlobalA\nGlobalAggregator\nI don't like all of them. What is your suggestion? I think it should start with Global to help with auto completion in IDE's. We could also ask elasticsearch to rename it ;-)\n. Lets go with this one. \nMake sure to merge the recent changes that were made for the compatibility with 1.0.0RC1 in master.\n. Closed through #555 \n. I would also expect the names. I just checked our tests to figure out why they don't fail. Unfortunately the tests only check if the right number of results is returned:\nhttps://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/ClusterTest.php#L21\nI assume something in the array structure of elasticsearch has changed:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Cluster.php#L107\nDo you already know how to fix it?\n. Ok, I will check in the next days if there is also a \"better\" call to make this directly. I hope there is one. Because otherwise the function does not really make sense, because it is very inefficient.\n. Looking forward to it :-)\n. @nickel715 Any updates here?\n. Thx. Can you update the changes.txt file?\n. In a second phase, it would also be nice to have tests which actually go to elasticsearch to do real queries, to make sure it works with the current elasticsearch version. Like this we are notified, in case it is broken in a specific version.\n. So boost can only be used for all functions and boost_factor per function? Right?\nIn case we described the same, I think we agree :-)\n. I merged it into master.\n. Ok, so boost does not work at all? Then I agree that we should remove it ASAP\n. Sounds good to me\n. There is no object mapping for this yet. I didn't even knew it exist :-) Of course it can always be used with the raw queries: http://elastica.io/example/raw-array-query.html\nThe implementation in Elastica should be quite simple I think.\n. I will look into this in more details later. In case someone can pick that up sooner then I do, I would be more then happy :-)\n. @kaiwa Didn't have time so far to check this in detail. Sorry. Any updates from your side?\n. Let me know if you have any update.\n. Looks like it doesn't break any tests (as there weren't any). Thx.\n. Probably you are looking for this: https://github.com/ruflin/Elastica/wiki/Run-tests\nant should do the trick, also installing PHPUnit.\n. @MrHash @jpetitcolas I assume others have the same problem. Can you add this to Elastica.io? https://github.com/ruflin/Elastica.io\n. Are all the params which are possible for Document also possible for Script?\n. So in a way we should mix the query params below line https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L316 because here we have Script and Document. Can you open a pull request with these changes and probably add some tests to make sure it works?\n. Wow, that is quite a bit of stuff you add here. Can you be a little bit more extensive in your change description? Looks like all builds are still green which is good :-)\n. Ok, that makes sense. As lots of users will ask how to migrate, it probably makes sense to give some migration help with the next release like we did in the past:\nhttp://elastica.io/migrations/\n. Looks like you have to merge master into your changes. Probably a conflict in changes.txt.\nYes, all is written in Markdown based on Octopress.\n. Thx, merged. Would be nice to have a pull request with the migration info on Elastica.io :-)\n. Can you open a pull request to fix this?\n. Pull request #520 resolves this issue.\n. Can you also update the changes.txt file?\n. Lol, no clue how I managed to not see this :-) Sorry. Merged it.\n. Can you update the changes.txt file and add some tests? http://elastica.io/contribute/pull-request.html\n. @MrHash Looks like the tests fail? https://travis-ci.org/ruflin/Elastica/jobs/15095491\n. Of course, that is what CI is here for :-D\n. 1) Elastica\\Test\\ResultTest::testHasFields\n'value set' does not match expected type \"array\".\nI'm not sure if the problem is on line 118 or 119. \n. Sorry, didn't see the commit. The failures are related to something else. Can you merge in master again so I can merge it?\n. The current suggestion implementation is completely updated at the moment. Will this already solve your problem?\nhttps://github.com/ruflin/Elastica/pull/510\n. I will close this issue because of #510. If the problem still exists, please reopen.\n. Good question. Was not aware of this feature yet. Looks like we have to set CURLOPT_ENCODING. You can do this by setting the curl config params for the connections in Elastica\\Client:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L40\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php#L157\n. Did you try it out and did it work?\n. Ok, keep me posted.\n. I will close this one as no feedback came in for 3 months. In case the issue is not resolved, please reopen.\n. So you say, optimize with the POST request does not work? In the documentation of elasticsearch it is POST: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-optimize.html\n. Ok, I see. So I would suggest instead of moving to get, that we use the request params (as it should be). Can you update this?\n. Nice. Only waiting for the build to finish.\n. Nope: https://travis-ci.org/ruflin/Elastica/builds/15328173\nInterestingly, all builds now take quite a bit longer.\n. To be honest it almost freaks me out a bit that it probably wasn't working for quite some time :-( Any idea how we could measure/test if optimize actually works. Something like how many parts of the index exist before and after the optimize? Not sure if that is somewhere in the status.\n. True. Can you add a test similar to that? I want to prevent that we have a similar issue with optimize in the future :-)\n. Do you have any idea how we could add some tests to verify this change? I know, this is probably a little bit tricky.\n. I would like to have both options but with option 1 we probably crash Travis CI :-) So lets go with the simple option to.\nCan you merge in also master again. I assume there is a conflict in changes.txt.\n. Thx. Merged.\n. It would be nice if you could also add a test with a call to elasticsearch itself to make sure, it is supported this way and then we also know in case it breaks with a new release of ES.\n. Merged. Thx.\n. More information can be found here: https://github.com/ruflin/Elastica/issues/484\n. @FredoVelcro Which Elastica Version are you using? Did you find which part in the logger caused the memory leak?\n. It seems like the tests fail on travis. Do you know why?\nCan you merge in master again as there is probably a conflict in changes.txt\n. Merged. I still have to figure out why sometimes tests take forever.\n. Very useful addition. Can you please update the changes.txt file and adapt the coding standard? http://elastica.io/contribute/pull-request.html\n. Some more comments about the coding convention. I didn't comment all before, sorry. Can you merge in master again as there is probably a merge conflict in changes.txt\n. Thx. merged.\n. As far as I can see, you don't have any \"use\" on top of Request. Try \\Elastica\\Request::GET\n. Will close this as I didn't get any feedback. Please reopen in case the issue still exists.\n. Hi @nik9000  \nThx for the addition. Looks like the tests you added fail on Travis. But I also have to think of how to test this properly.\nCan you also update the changes.txt file? http://elastica.io/contribute/pull-request.html\nI saw that CirrusSearch is using Elastica which is quite cool :-) Looks like it is not the newest version (yet). If I can help you guys here with something let me know.\nFor the coding standard we use PSR1 and PSR2: https://github.com/ruflin/Elastica/wiki/Coding-guidelines\nBut to be honest, I was not so strict recently. Probably I should clean it up again.\n. Ok, I merged it like that. Thx.\n. @peterfarsinsen Thx for the addition. Can you please add a small test for this new functionality and update the changes.txt file? http://elastica.io/contribute/pull-request.html\n. It would be nice to also have a short test for the other two updateDocuments functions that were added. I know that it is mostly a proxy, but you never know ..\n. Seems like 1 of the tests fails:\nThere was 1 failure:\n1) Elastica\\Test\\ClientTest::testUpdateType\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'StableCoin'\n+'NameCoin'\n/home/travis/build/ruflin/Elastica/test/lib/Elastica/Test/ClientTest.php:178\n. Everything looks fine now. Merged.\n. Can you update the changes.txt file so people know, that if they use the constant, they have to update it with the next release?\n. Thx\n. \\Elastica\\Search is probably the right place to add this. Can you open a pull request?\n. @nik9000 Any updates here?\n. Can you add a test for this and update the changes.txt? http://elastica.io/contribute/pull-request.html\n. Thx. Merged.\n. For consistency it would probably make sense to add the proxy functions.\n. Closed with #538 \n. You can directly use it with the Raw Query: http://elastica.io/example/raw-array-query.html\nTo use it as objects quite often the fastest way is to open a pull request. Adding new query types is normally quite simple. Just take a look at the other queries how they are done.\n. Thx. Now only the update to changes.txt is missing :-)\n. Merged. Thx\n. I'm not 109% sure but I think we hat some problems with this in the past so we moved away from the status code. But as all tests are green it looks good now.\nI would suggest that we already add the function found and keep exists as a proxy but markit as deprecated. Can you add this and update the changes.txt file. Probably you have to update also quite a few tests which uses exists.\n. Makes sense. I merged it.\n. Thanks for the addition. Looks good. The tests are failing because I switched to 1.0.0RC1.\nCan you add one more test that makes an actual call to elasticsearch. Like this we know in case it breaks with a certain version of elasticsearch.\n. Yes. Perfect. I will merge it in the hope that all the tests will go green again as soon as I fixed the RC1 issues. Thx.\n. Thx\n. Wow, nice change. That was my weekend plan :-)\nCan you use the _ notation for protected nethods? Abd there is still a print_r in the tests.\n. Probably we will need some migration guide for developers who switch from 0.90 to 1.0\n. This fixes issue #541 \n. @nik9000 Also never realized that this bug was in. I update the changes.txt for you ;-)\nhttps://github.com/ruflin/Elastica/commit/93df4b713fe958b3254739112e7a4d2a3db78928\n. What happens if you use ->setTerm('email', 'asd1@web1.de') instead of setRawTerm()?\n. Very strange. If you use matchall, the data is returned? \n. I just checked our test coverage for the Term query and it actually doesn't have any integration tests: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/TermTest.php\nTo verify this we should add here some tests.\n. It gets stranger :-) You are sure the query goes to the same host?\n. Good to hear it works now ;-)\n. @jlinn Did you ever create this tutorial? I was just looking for it on Elastica.io and couldn't find it. \n. :thumbsup: \n. Can you update the changes.txt file? Probably mention also directly the pull request\n. Thx. Merged. \nProbably we should add here some more tests so we can make sure it also works in the future and no other bugs are hidden.\n. :+1: \n. Good point. We should check in detail if there are some more issues arising because of this.\n. Merged. Thx.\n. Seems like this is one of the bc changes introduced in 1.0:\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/_return_values.html\nCan you open a pull request with this one?\n. BC = Backward compatible\nAnd I should have written not BC change :-)\nOk, I thought we have fixed this. But I think because you mentioned it, I found an other one which is not changed yet.\n. Fixed with pull request #558 \n. Can you update the changes.txt file and mention directly the issue?\n. And if possible, add a small test so we will spot this issue directly in the future?\n. Thx, merged.\n. Can you open a pull request with some tests and perhaps you can merge the changes from #464 in as well as they were never merged?\n. Ok. Let me know when you open the pull request.\n. Closed with merge of pull request #560 \n. Can you update the changes.txt file and mention the issue id inside?\n. thx\n. Did you try to turn off persistent? https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L38\nIt will make it slower, but perhaps it solves the problem.\nAn other good option is to us Bulk queries if you have a lot of requests.\n. What php and curl version do you use?\n. @Tomdarkness Can you check if this change resolves your problem? https://github.com/ruflin/Elastica/pull/567/files\n. This is now part of the v1.0.1.1 release: http://elastica.io/2014/03/08/release-v1-dot-0-1-dot-1/\n. Merged. Thx\n. Interesting point. I'm not 100% sure how we should handle it as if you use deleteById() it can only hit max 1 document, so 0 or 1 row is affected. What if it would return true/false instead?\n. I probably agree. I try to figure out the disadvantage with this. If you want to understand if a document was actually deleted, you check the response yourself.\n. @rayward What do you suggest as next step? Should we change it?\n. I'm ok with changing it, but I would like to have still a way to identify if the doc was actually deleted or not. This could be through a bool or an int that is returned couting how many docs were deleted. Feel free to open a PR for further discussions.. @tastendruecker You are probably right. I'm not sure what the exact response will be. Can you open a PR? Then we can directly check it in the tests :-). Good addition. I think quite a few people are looking for this.\n. Merged. Thx.\n. This is now part of the v1.0.1.1 release: http://elastica.io/2014/03/08/release-v1-dot-0-1-dot-1/\n. Merged. Thx.\n. Thanks for taking this over. Can you make sure to merge in the master again and update the changes.txt file? If possible, please also provide some integration tests which call directly elasticsearch. So it is easy to spot, in case it is not compatible with certain ES versions.\nLet me know when you added it as I don't get a notifications for new commits :-(\n. Merged. Thx.\n. Merged and all is green: https://travis-ci.org/ruflin/Elastica/builds/20852543 I'm not sure why travis was not run on the new commits. Thx\n. Can you please update the changes.txt file and add some tests to verify that the new functions are working?\n. Merged and all green https://travis-ci.org/ruflin/Elastica/builds/20873661\nThx\n. Online only the newest API documentation is available, but it is quite simple to generate the documentation locally with your version. Just run\nant phpdoc\nSee also:\nhttp://elastica.io/release/how-to-create-an-elastica-release.html\n. Please reopen the issue in case the problem still exists.\n. It was renamed to Match query:\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/0.90/query-dsl-text-query.html\n. Please reopen if the issue still exists\n. Thx\n. @pentarim Thx for the addition. Can you add a small unit test for this one and update the changes.txt file?\nhttp://elastica.io/contribute/pull-request.html\n. Only one very small detail (see comment above). Thx.\n. Merged. Thx.\n. http://elastica.io/2014/03/25/release-v1-dot-0-1-dot-2/\n. Can you update the changes.txt file and add a small test so that not someone is going to change this back in the near future ;-) http://elastica.io/contribute/pull-request.html\n. Merged. Thx.\n. @yellow1912 Good point. Can you add it?\n. I took a closer look at this one. The output for a mapping looks like this:\n```\nArray\n(\n    [elastica_index] => Array\n        (\n            [mappings] => Array\n                (\n                    [type1] => Array\n                        (\n                            [properties] => Array\n                                (\n                                    [id] => Array\n                                        (\n                                            [type] => integer\n                                            [store] => 1\n                                        )\n                                [username] => Array\n                                    (\n                                        [type] => string\n                                    )\n\n                            )\n\n                    )\n\n            )\n\n    )\n\n)\n```\nSo the mapping for a type is actually really inside the index name. After running the getMapping function over the raw data, the output is like this:\n```\nArray\n(\n    [type1] => Array\n        (\n            [properties] => Array\n                (\n                    [id] => Array\n                        (\n                            [type] => integer\n                            [store] => 1\n                        )\n                [username] => Array\n                    (\n                        [type] => string\n                    )\n\n            )\n\n    )\n\n)\n```\nSo it looks correct. The question is, if also the type hierarchy should already be removed from the array.\n. @comensee The way the mapping is returned changed with Elastica 1.0. But you should still not get an empty array in case a mapping is set.\n. Ok, goot to know it works now :-)\n. All issues fixed with recent commits.\n. It looks like the first 4 are mandatory, the additional ones are optional one. So instead of extending, I would suggest to replace $index with $options = array(). And to make it BW compatible, in case it isn't an array, $index is picked. Like this also params can be added in the future without having to change the function.\n. Yes, the failing is because of some issues with the newest ES version which we still have to look into. \n. Ok, good to know. Canyou update the changes.txt file?\n. Thx. Merged.\n. Can you also update the changes.txt file?\nLooks like one of the tests is also failing because of the Cardinality:\n1) Elastica\\Test\\Aggregation\\CardinalityTest::testCardinalityAggregation\nUndefined variable: result\n/home/travis/build/ruflin/Elastica/test/lib/Elastica/Test/Aggregation/CardinalityTest.php:35\n. Thx. Merged.\n. What is the exact structure which is returned by elasticsearch?\n. I started to look a little bit deeper into this one. What surprises me is that elasticsearch seems to return every field in a sub array as soon as fields are set, for example:\n```\n[fields] => Array\n        (\n            [firstname] => Array\n                (\n                    [0] => nicolas\n                )\n    )\n\n```\nIf options param is not set, it doesn't have the array inside firstname. I have to dig deeper here.\n. Thx. Two things:\n- Can you update the changes.txt file? http://elastica.io/contribute/pull-request.html\n- It would be nice to also have an integration test (calling elasticsearch itself) to make sure it works with the current elasticsearch version\n. Site note: The failing are not because of your pull request ...\n. @gcds Make sure to merge in master first\n. @gcds Any updates on this one?\n. Do you know when this change was introduced? It looks like a change coming directly from elasticsearch and not Elastica. \n. Hm. I says they are always returned as array, but doesn't seem to be the case. Any way to enforce returning and array always?\n. I doubt that it is a bug, probably the documentation and the code are not 100% in sync or I don't get the documentation to 100%. Perhaps @kimchy can help here?\n. Closing as no updates were provided. Please reopen if this is still an issue.\n. Agree, we should change the order. Can you open a pull request with this and also an integration test with the example in  elasticsearch/elasticsearch#5783. Like this we make sure it doesn't break again.\n. The current errors on master are because of #578, so nothing related to your changes. Can you add a small that shows the problem now does not work anymore because it is corrected?\n. Yes, thx. \n. Should be fixed with this commit: https://github.com/ruflin/Elastica/commit/0b410cdbfc952907b8d4367478c130115fd5dd2b\n. I assume you are right so I reopened the issue. Can you open a pull request with the above?\n. Hm, good point. Seems like I mixed up some stuff :-( It would be really nice if you could directly clean that up and rename / move the functions to the right place. Sorry about that.\n. Will close this one as the pull request is merged. Otherwise, please reopen it.\n. Isn't that already the case here?\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Util.php#L50\nWhich version of Elastica are you using?\n. Hm, so the right code would be: \\\\\\\\  ?\n. The newest version of Elastica only supports the newer version of elasticsearch, so it shouldn't be a problem. Can you open a pull request with it?\n. Closed as merged into maser\n. Can you update the changes.txt file?\n. Thx. Here is a checklist ;-) http://elastica.io/contribute/pull-request.html\n. I don't know why Travis is doing this some times. I didn't happen now for quite some time and now seems to be an issue again. I merged it anyways. Lets see how the next build is doing.\n. Already merged, but you forgot to update the changes.txt file Can you add that?\n. Where did you add it?\n. Yes :-) Merged.\n. The problem is that you push to the ruflin/Elastica instead of your own fork. You must push to your own fork and open an pull request from there.\n. Can you update the changes.txt file?\n. Thx. Can you add the pull request id to the end of the line ;-)\n. Merged :-)\n. Can you also update the changes.txt file and add an integration test to make sure it also works with elasticsearch directly?\n. About the integration tests: Take a look at all the other tests which start with $this->_createIndex();\nThere you have quite a few good examples.\n. Thx. Merged.\n. The missing use was a bug? Can you update the changes.txt file? Good to know there is a standard now ;-)\n. Thx. Merged.\n. http://elastica.io/2014/04/27/release-v1-dot-1-1-dot-1/ ;-)\n. Merged. Thx.\n. Good question. In the documentation there are 2 ways of doing it: Either through the model or through the type. So in case we do additional classes, I would suggest that it is only a mapper for the Match query which calls the functions. What is your take on this?\n. We should only choose the second one, in case it simplifies things. Can you open a pull request with one of the two?\n. @yellow1912 There is not pull request for it yet. Do you have time to contribute it?\n. Cool. Let me know if you need some help.\n. @Jmoati The main reason for the proxy method is probably as most engineers who use Elastica just expect it as there are objects for most of the queries. If you have time to open a pull request, that would be nice.\n. @yehosef @olee Does anyone of you have some spare time to open a pull request with the mentioned changes?\n. @yehosef Thx\n. Merged. Thx.\n. I think we actually had a discussion on this and named it like that on purpose. The main problem is that this would break backward compatibility.\n. Can you open a pull request with this addition?\n. There is not direct function implemented for that yet. You can use setParam on Elastica\\Query to set the param.\nWe should add this feature as a named function. Can you open a pull request with it?\n. Can you add a small unit and integration test to make sure it works as expected?\n. Merged. Would be nice if you could add some tests later.\n. Can you update the changes.txt file and add a small test?\n. Merged. Would be nice if you could later add some tests.\n. Will close this one as pull request is merged.\n. I'm not sure why the builds are so slow. I would assume it is not connected to your changes?!?\n. Hm, perhaps I know the issue. You didn't merge in the most recent changes I also made to the build file. There a specific version of phpunit is removed which was very slow.\n. Strange. I restarted the build again. Lets see what happens.\nAll you did is correct. I misread the date in the changes.txt file so I thought it is an old one. All ok.\n. Ok, as expected this seems to be a phpunit issue. All the old builds use phpunit 3.7.31, the ones that take forever phpunit 4.0.19. I had this before when I set phpunit as part of the dependency and the newest version was installed, so I moved back and assume it is a problem with travis and the newest version. Now they have the newest version and the problem occurs again. What are the configs that change between these phpunit versions that make the build so slow? I assume some default settings change. Anyone?\n. Locally I have phpunit 4.0.7 and everything seems to work as expected. Is anyone using 4.0.19 locally? I was looking for some issue with phpunit but couldn't find anything except fixed issues: https://github.com/sebastianbergmann/phpunit/issues/1187\n. @sebastianbergmann Any inputs on this one?\n. Merged. Thx. Will have to dig deeper to fix the problem. To see if the tests passed, I set the old phpunit version for the dev builds.\n. @mal The problem was with the processIsolation flag. It seems to be much slower in phpunit 4.0.19 then version 3.7.*. I now disabled it and so far there were not side effects except that the tests run of course much faster.\n. Agree. Pull request? :-)\n. Can you update the changes.txt file?\n. Chan you add also an integration test to make sure it works with the current ES version?\nBTW: That the builds fail is not because of your code, but because of a problem with phpunit 4.0.* which makes the builds really slow. Not sure why yet.\n. Merged. Thx.\n. I will close this one as the pull request was merged.\n. That is a nasty one. To be honest I don't like the the usage / overwriting of the globals at all, but I don't see a better way at the moment. So in general it looks good.\nSomehow it didn't trigger a travis build. Not sure why.\nI assume your last comment means, some more changes are coming?\n. I thought about a better implementation. Instead of using the ugly constants I would suggest to introduce two static functions in Elastica\\Util\nElastica\\Util::getJsonUnescapedSlashes()\nElastica\\Util::getJsonUnescapedUnicode()\nThese functions are called and deal with, if the constants are set or not. Like this we don't have duplicated code and no new global constants. What do you think?\n. I like that it is obvious in the code that it is stringified to a json. With your additional mapper, that would be hidden a little bit. Because of this I like the JSON idea. Here I worry that we could get in conflicts with other JSON objects / mapper which probably exist. Not sure if we add too much complexity with an additional object if it only does one thing and is not used everywhere else where we deal with JSON.\n@demon Your thoughts?\n. Yeah, Travis sometimes does that. Not sure why :-( I will restart the build.\nI also like this, especially because everything still seems to work :-)\n. Almost all builds went green. I merged it. Thx. Will be part of the next release.\n. If we make it optional, I still think the constructor is needed so the params can easily be set. \nI assume the intention is, that you create the object and assign query and filter at a later stage. If we do this, we need to check in the toArray function if both are actually set to throw an exception.\n. Yep, still here. Was just busy the last days. See comments. Can you also update the changes.txt file and add a test to make sure the changes work as expected?\n. @hugohenrique Can you confirm what @mal just wrote above? Is only one of the two necessary? Please also update the changes.txt file.\n. @hugohenrique Did you see my other two comments in the code?\n. @hugohenrique Will do on the weekend.\n. I would prefer to check for the specific objects instead of null to make sure, it only gets executed when the proper object is set (which should be always the case). This means set a whiteliste instead of blacklist for the params. The good part about your solution is, that we would discover potential problems, if somehow someone sets the value to something where toArray doesn't work.\nThe Invalid exception looks good. The part I don't like is that it mixes the two error messages: \"A query and/or filter is required\". I would like the developer that uses the API exactly what is missing and what he has to add. As mentioned before, this adds a little bit more complexity on the client side, but in the end it simplifies the developers life.\n. It was more of an input then a question. Instead of me changing it I think we should have a conversation on how to do it best.\nMy first comment is related to line number 102. \n. @hugohenrique There are 2 options. Either add a commit with the suggested changes or I will try to find some time this weekend to implement it :-)\n. @hugohenrique I implemented my changes here and also added some tests: https://github.com/ruflin/Elastica/pull/636\n. Hm, I just realized I made an error during the implementation. At the end, also parent::toArray() should be called to make sure ->setParam('strategy', $strategy); for example works (which is not the case at the moment) :-(\n. @webdevsHub Thank you for your contribution. I will take a closer look tomorrow. \n. I'm not sure if we should make it part of the Search object or if it makes sense to add a new object for it. I'm tempted to say it should be in Search as the scroll and scan option is already supported by it but I'm open to let me convince from the opposite.\n@webdevsHub What do you think?\n. I would say good argumentation :+1: Lets go this way. Can you also update the changes.txt file?\n. @webdevsHub Any updates?\n. Ok, merged in. I will update the documentation on elastica.io\n. http://elastica.io/api/classes/Elastica.ScanAndScroll.html\n. I restarted the build. Looks good, but will have a deeper look into it during the weekend.\n. What you added here is really nice. Can you also update the changes.txt file?\nThere is on thing that worries me. A lot of code in the http transport and the guzzle transport are the same. Shouldn't we either have a common base class or that Guzzle extends http and overwrites the functions needed? At the moment the problem is, if we fix something in one transport and forget also to copy it to the other, it will be broken.\n. Ok, I merged this one in. Lets discuss this refactoring directly on a new issue. My problem is that Http sounds like the perfect name for the base class. How should we call it? HttpBase?\n. Can you update the changes.txt file and add a small test to make sure, it works as expected also in the future?\n. Merged. Thx.\n. The way you approach it above looks good to me. We should probably call it AbstractHttp.\n. @milan I know, quite old. But are you still interested to push some changes here?\n. Thanks :+1: \n. Can you update the changes.txt and add a small test for this change?\n. Merged. Thx.\n. Thx, merged. Some travis builds sometimes randomly fail.\n. @Yitsushi Nice addition. Can we name it Boosting instead of BoostingQuery to be consistent with the other queries?\nI'm actually somehow surprised, that the toArray works as I think it will send boosting_query instead of boosting? Perhaps I missed something (on the mobile).\nThe build fails because of travis not because of your changes.\n. Thx, merged.\n. Any suggestions?\n. Do you already plan a pull request? :-)\n. This cuts out quite a bit of code. Nice. I'm also not a big fan of the name Updatable (sounds also like an interface). Should we call it Source (as you do in the code) or Object? Object is probably reserved... \nHow does elasticsearch treat a script? Same as a document? Means isn't a script extending a document? Are all the functions you put in Updatable supported by Script?\n. Can Updatable be used alone? Probably not, so we could make it an abstract object to make it clear, it should not be used directly. UpdateAbstract? UpdatableAbstract? I don't want to block this pull request because of a name discussion. If we don't come to a name conclusion fast, lets just pick one :-)\nCan you make the changes.txt update a little bit more extensive?\n. (+1) for AbstractUpdateAction. Lets go with this one. Can you update this also in the code?\n. I restarted the build manually. Lets see what the outcome will be :-)\n. @nik9000 Can you merge in master? Not sure if that is what makes Travis unhappy ...\n. It starts building again :-) Not sure what the merge conflict will be... So if you can do the merge for me, more then welcome :-)\n. The build doesn't look too good :-(\n. BTW: I just updated the build to es 1.2.1\n. I would assume that this \"test failure\" is based on your change:\n1) Elastica\\Test\\ClientTest::testDeleteIdsIdxStringTypeString\nBut you said, this is working locally?\n. Strange. Can you try optimize instead of refresh? Perhaps something changed to in the delete API?\n. Now we need to merge in the other changes.\n. Ok. Will run out of battery in a minute. Will merge it later.\n. Merged. Thx a lot for all the extra effort.\n. Thx for the addition. For the test changes, I would suggest to add new additional tests instead of changing the existing tests (if not needed). So we can make sure, the old behaviour still exists, but a new one was added. Also instead of having large tests, we can have very small unit tests that only test one thing (if possible).\n. @xyu Yes, it would be very nice if you could also update the tests and make an new pull request. I merged it yesterday as other pull requests came in an I wanted to make sure not to have any conflicts.\n. Looks promising. Now we need to figure out the random testOverride failure :-(\n. Merged this one so we can check this in a new pull request. I think this problem is solved. Thx a lot.\n. Sorry :-)\n. No, not necessary. Lets wait for the result :-)\n. Merged. Thx.\n. @nik9000 Side note here: All your changes are in the newest 1.2.1.0 release https://github.com/ruflin/Elastica/releases/tag/v1.2.1.0\n. Can you post the warning here?\n. @Sshuichi I would suggest we close this issue here and move it to https://github.com/FriendsOfSymfony/FOSElasticaBundle\nThe main question I would ask is, how to remove the invalid UTF-8 sequence. Because that sounds like trouble in any case.\n. In general, there should not be any problem with all utf-8 characters. My assumption is, that one part in your application is not UTF-8. Be it when you store the fields in the db, read it from it, connection, file encoding, ...\n. :+1: \n. @1337er Unfortunately the Query Builder is not really under active development anymore. I would suggest to either build the queries with the objects or use the raw query approach: http://elastica.io/example/raw-array-query.html\nOf course, the Query Builder development can also be reactived which would also be nice.\n. I assume you refer to https://github.com/elasticsearch/elasticsearch/pull/5519\nIt can already be used now by using the setParam method or raw queries. Also feel free to open a pull request to make it a \"native\" function. \nSo the answer is yes :-)\n. @yehosef Agree. I reopened it.\n. Implemented through https://github.com/ruflin/Elastica/pull/953\n. Ok. Somehow the solution looks quite \"complicated\", especially the code doesn't explain itself. Wouldn't it be better to check for 0?\n. What is the array() comparison needed? Is there a problem if it is an empty array()? Can you also add a brief test to make sure it works now also with a 0 values (as you describe above)?\n. The main reason I'm asking is not to block this pull request but to make sure, we have not only fixed the issue but also have better code afterwards. I also discovered my \"REFACTOR\" note in the code ;-)\n. Merged, thx.\n. @Tobion @leahaense The new test seems to fail \"randomly\" quite often on Travis. Do you have any idea why?\nhttps://travis-ci.org/ruflin/Elastica/jobs/29038665\n. I think I managed to fix it with a refresh command.\n. Strange. Not sure if this is related to Elastica or the bundle. If that is the JSON conversion, it should cause issues ...\n. I assume the logger didn't put the \"pure\" JSON into the log ...\n. @rayrigam The error you posted seems to be related to either a connection error or that some of your shards are not available. The important part of the log message is \"Failed to execute phase [query_fetch], all shards failed\". The question is why all your shards failed. Is it a specific moment that this happens? \n. Thx\n. Can you give me some details why this is needed? \n. Ok, sounds reasonable :-) Can you open a pull request with this?\n. @krzaczek Can you add a second \"integration\" test to make sure it also works directly with ES?\n. Merged. Thx.\n. As the function setFilter is used very often, I prefer the BC compatible option but we should have a way to tell the people that they are using a deprecated version (phpdoc @deprecated). Can you open a pull request with the suggestion? So we also se what kind of changes are needed on the Elastica side.\n. Unfortunately there was already a release in between so I would suggest to make it BC compatible for the moment but make it clear that this will not be the case in the long run and should be cleaned up later.\n. There are two things:\n- There are quite often two .ini files, one for the client and one for the web server. In your case it looks like you didn't change the one that affects the client as the limit is lower then expected\n- If elasticsearch cannot be reached, I wouldn't expect a memory issue but a response that the connection didn't work. Can you post the code that you are using?\n. So it looks like you have a different memory limit for the client. Is this as intended?\nOn which line above is the error thrown?\n. Closing as no new information.\n. Merged. Thx.\n. Does this only apply to Terms & Terms_stats facets or also to other?\nHere for more details on the size and shard_size for Terms Facet: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-facets-terms-facet.html\n. @darkwish121 Any time to open a pull request?\n. Good idea. Can you update the changes.txt?\n. BTW: There seems to be a problem with the hhvm builds:\nThe `phpize' command exists in these Ruby versions:\n  5.2\n  5.2.17\n  5.3\n  5.3.27\n  5.3.3\n  5.4\n  5.4.29\n  5.5\n  5.5.13\n  5.6\n  5.6.0beta4\nhttps://travis-ci.org/ruflin/Elastica/jobs/29490619\n. There seem to be problem with one of the Proxy tests:\nhttps://travis-ci.org/ruflin/Elastica/jobs/29506641\n. As it is only 1 test that fails, I would suggest we add a skip to this test in case it is hhvm.\nI had 5.6 still on the \"can fail\" list as the release is not final. But I agree to move it as the release candidates are out.\n. Merged in through #778 \n. Concerning your error: I would assume this is thrown on https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L332 and getName() is somehow not set? Or where is this exactly coming from?\nPlease add some more details so we can dig into the problem. I think this is an important one to get fixed and cleaned up as lots of projects will move to aggregations quite soon. We should also add more tests for aggregations to make the usage more clear (and have it documented).\n. Agree. I think the problem is a little bit deeper and has the addAggregation function has to be refactored to properly \"support\" filters in aggregations.\n. It \"should\" not be an issue. It would be interesting to see the query that is sent to elasticsearch itself to check if something is overwritten. Did you every try to send the query to elasticsearch via curl to if it then works?\n. @net8floz Here you have some good examples how to sent it via curl: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-body.html\n. BTW: The output of the query looks all good. So now the question is what happens if you send it to es directly to see if it is related to es and not Elastica.\n. Closing as no updates were provided. Please reopen if needed.\n. Can you update the changes.txt file?\n. Thx. Merged.\n. @krzaczek Looks good. Can you add an additional integration test to make sure it works with elasticsearch?\n. Merged. thx.\n. This sounds quite a bit like this bug: https://bugs.php.net/bug.php?id=44584\nHere we also had an extensive discussion on this one: https://github.com/ruflin/Elastica/pull/486\nInterestingly, you have a newer version?\n. It should have been fixed with curl v7.19.5 and you have 7.22. But it could be, that the curl version you have and php_curl are not the same? Can you check what the curl version listed in php is?\n. Closing as no updates provided Please reopen if needed.\n. Good to hear the issue resolved itself :-)\n. The first thing I wanted to write was that roundRobin has to be enabled. But now I realised that this part is missing in the code: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L41\nroundRobin is not implemented. It is still part of a pull request here: https://github.com/ruflin/Elastica/pull/333\nUnfortunately there are several pull request opened about the connection topic but none of them made it finally into the master: https://github.com/ruflin/Elastica/pulls\nAll of the pull request need some additional work but provide all the basic needed. I would me more then happy if someone can pick one of them up.\n. I like the starting point and we could directly make it part of the Multi folder as there are already approaches for Search and ResultSet: https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Multi\n. Jep, that helps. I don't have the time to implement it right now but I hope someone is going to pick it up ;-)\n. Here is the issues with pull request when we changed it: https://github.com/ruflin/Elastica/issues/589\n. @maxgalbu Can you take a look at this to see why this breaks again (or not)?\n. Unfortunately it seems that you are right. Can you create a test with an actual query and open a pull request?\n. :thumbsup:\n. This was the first thing that came to my mind but I think it is not related. http://php.net/manual/en/security.magicquotes.php\nPHP 5.3 is EOL ;-) \n. As I'm quite sure still a lot of users will keep using PHP 5.3 I will accept a patch as long as it doesn't break PHP 5.4 and following.\n. @kostiklv Thank your for the detailed analysis. I agree with all points you mentioned above. Can you open a pull request based on it?\n. Please coordinate with each other which is going to do which part. In any case, I'm looking forward to the pull request.\n. This is a very nice and long expected addition (also see #357 and #333). \nPlease adjust the code to the coding standards (see my comments). For the tests I would suggest some more extensive tests on also \"real\" failing connections or also adding connection to IP's which don't exist and see what happens.\n. Merged. Thanks a lot for this addition. I think this was long awaited :-)\n. As far as I can see, most of this pull request is covered by your contribution: https://github.com/ruflin/Elastica/pull/357/files Can I close this one or is anything missing?\n. Ok, will close it.\n. I assume you mean this one? https://github.com/ruflin/Elastica/wiki\nI keep it as there are still quite a lot direct links in the internet to this page so people know where to go.\n. Closing as I don't see it as an issue.\n. The reason for the Elastica versioning can be found here: http://elastica.io/ The Elastica versioning is attached to the elasticsearch versioning. If this should be detached nowadays, can be discussed.\nSo far there were no issues with the versioning and composer. Are there any others with a similar issue?\n. If there are BC breaks between the different elasticsearch 1.* version, there will also be a BC break in Elastica for this specific features. So no promise unfortunately.\n. This will be covered by #789\n. This took some time to answer. As usual you can of course achieve it with the raw query: http://elastica.io/example/raw-array-query.html\nOtherwise: I think it should be quite simple to extend the FunctionScore query to support it. There also always the setParam method which can be used.\n. Can you elaborate on the sub-class part and adding the field. Which one are you talking about?\n. Any suggestion on who we could nicely solve that in Elastica?\n. Are you using http or https to connect to elasticsearch? Because for https as you mentioned you must use the https transport: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Https.php\n. :thumbsup: \n. @cpmohit So most of the time it works and sometimes you get this error? I would assume that this should not be related to Elastica itself especially when it works most of the time.\n. @jdacjohn TBH a bit confused by your details above. I don't remember a version 0.0.9 of Elasticsearch and how does Concrete5 come into play here? What version of Elastica are you using? Can you connect to Elasticsearch via curl?. As I don't know anything about Concrete5 lets try to get this out of the equation.\nThere is Elastica as a client and Elasticsearch where the data is stored / processed etc. The above you posted is an error that happens if the client can't connect to the server. So it seems from the client view the Elasticsearch host is not reachable.\nFew questions which you should answer on your side:\n\nWhere is Elasticsearch running?\nWhere is Elastica running?\nAre these the same machines or different ones?\nWhat are the settings you have configured on the Elastica side to connect to ES\nWhat are the settings on the Elasticsearch\nWhich versions are you using for Elastica and which version of Elasticsearch?. @jdacjohn Glad I was helpful.. It is actually worse, and it should state 1.3.0 here and in the README.md. Can you update both? Thanks for notifying.\n. Thx\n. @kostiklv Thx, looks good. Can you update the changes.txt file?\n. Merged. Thx.\n. Merged. Thx.\n. Hm, I just realised you missed to update the changes.txt file. Can you open a new pull request? Sorry about that.\n. Good idea. It's a little bit messy in the code but the good thing is it will pop up also in the tests.\n. Ok, in case you think it should be supported \"natively\", just open a pull request ;-)\n. @nickfan I see the problem. The question is now if Elastica should take care of this cleanup for the engineer or of we expect the developer to hand in a clean array?\n. I prefer your suggestion. Can you open a pull request with this one?\n. Merged. Thx\n. Fine for me.\n. @im-denisenko As far as I know, this suggested change was never pushed?\n. Closing this issue as the \"core\" issue was address. For the suggestion of @im-denisenko please open a new issue or directly a PR.\n. @viilveer This is a problem of the implementation in Elastica: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/Bool.php \n\nWe should fix this with a pull request. Can you add open one with the needed change?\n. Ok, good to know. Thx for the feedback.\n. @piux This error seems to be related to Doctrine or foselasticabundle and not to Elastica. I assume there is some inconsistency with the caching of objects.\n. Good point. I also don't see any reason for having execution rights on the files. Can you update the changes.txt file?\n. Sorry, I think we had a misunderstanding here. I meant that you add your change to the changes.txt file. For every pull request there is normally a comment inside.\n. Merged. Thx.\n. Sort must be applied in the top search object. It actually exists in Elastica\\Query:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L163\nBut it doesn't exist in Elastica\\Search where it should be added.\nTo use it in your case, please map Elastica\\Query around your filtered query.\n. @twocngdagz Not sure what you are requesting. Can you provide some more details on what is not working?\n. Closing as issue is not clear.\n. Thx. Can you briefly update the changes.txt file?\n. Merged. Thx.\n. @tkaven Your change breaks all the mapping tests. So it seems it relates also to some other stuff.\nIs this the full error shown to you? \n. I closed this for the moment as no feedback was provided. In case the problem still exists, please reopen.\n. @stof Can you update the changes.txt file?\n. Yes, I think it is worth to mention as you rightly said, that it is not part of the release process yet. Probably this should be added here: http://elastica.io/release/how-to-create-an-elastica-release.html\n. @fprochazka My view on this:\n- Every pull request should be related to an issue. Every issue is hopefully relevant.\n- Every pull request consists of several commits.\n- Every issue / pull request should have a self explanatory title\n- The changelog should be generated of the issues with the titles (automated).\nWe are definitively missing the last points which would make to change the changes.txt file manually obsolete. That is where the project should be heading.\n. I fully agree on documentation typos.\n. @stof What is now the \"correct\" way of removing the highlighting?\n. There is a method: Try \n$query->setParam('highlight', null);\nThis should unset the param.\nI see that this is not the nicest method. What could be easily done is adding an \"unset\" method to Elastica\\Param.\n. There is actually a possibility, but I agree that it is not the nicest one. You can add username and password as part of the url: http://username:passwort@localhost/\nBut it should be quite easy to add this feature to the HTTP transport by using the Client config variables for transport or connection:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php\n. @merk Good point. \n@bigscratcher Did this solve your problem?\n. Closing as no updates provided. Please reopen if needed.\n. Makes sense. Can you update the changes.txt file with this change?\nStrange that it was already used in the tests. Do have an idea how we could write a specific test for this options?\n. Looks good. Can you add this to the pull request?\nI made a release yesterday, so make sure to merge in the master branch and please add the pull request id to the changes.txt\n. Looks good. Almost ready to merge. See my small comment above.\n. Merged.\n. Good point. Can you open a pull request with this change?\n. Ok, I now merged your pull request to have a first \"improved\" fix. I also went through your comments. What you say is:\nExceptions from the $request object should no be catched. If later it is not a 200 response code, the exception is thrown anyway, right?\n. Side note: If it makes sense, breaking BC is not a problem ;-)\n. Can we try that out in a new pull request and see what the \"consequences\" on the current tests are?\n. Sorry, for the late reply. About the 404: From a theoretical point of view you are probably right about the 404 not throwing an exception. But the main question I ask is what the engineer expects. If he uses Elastica, he doesn't care too much if it is http or thrift in the background. So is 404 for him something he would expect an exception because something went \"unexpected\"? Or what are the main reasons for 404? Here it is, because the document was not found. Why was the documented not found? Because it didn't exist or was not populated yet. I would assume, an engineer doesn't use this call when he does not expect the document to exist?\nWhat do you think?\n. I agree with both points. We should only trigger it if it is not found and outside the transport we should get rid of \"404\" checks etc. But we should treat these changes as two different pull requests, as the second one we should get in step by step.\nCan you open a pull request with your code above?\n. @rmruano Can you open an new \"Issue\" so we don't forget to change these at a later stage?\n. :+1: \n. Good to hear you were able to solve the problem.\n. @digitalkaoz Good to hear that you found a solution. Does this also mean the ticket can be closed or is there still an issue?\n. So the same query works with the head plugin but fails in Elastica, right?\n. Ok, that shouldn't be the case of course. Would be nice if you could put the full exception details here for a closer analysis.\n. Closing as no updates were provided in the last 5 months. Please reopen if new information comes up.\n. @merk I understand the reasoning behind the change but the part I don't like that more complexity in the code is added because of this. In case we use ResultSet at an other place in the code later where not client is available, this will break. Perhaps we can work on a solution where a ResultSet factory method can be used to pick the right \"object\" type. \nCan you paste the link to the code in FOSElasticaBundle here so I can have a look at it?\n. Ok. I like this solution much more as the previous one. It is still not the nicest one but perhaps we find a better solution at a later stage.\nSee my 2 comments above. Afterwards I think it is ready to be merged.\n. @fprochazka I see your point, but I still think this is better then add lots of dependencies (which are not needed) to ResultSet. I'm still convinced there must be a better solution. Any good ideas?\n. If you look at the design of ResultSet, Document, Result, Response etc. you will see that these were on purpose designed from the beginning to be independent of Client. One of the main reason here is testability without having to connect to elasticsearch.\n. @merk I merged in the pull request but I would suggest to open an Issue so we can look for a better solution here in the future as the global state part is really not too nice.\n. @rmruano I see your point. Is there an option we can actually make the difference between the two exceptions? Means, in case we get a response exception and it is a notfound, we throw this one, but in your case throw a response or a more specific exception. And if none both hits, we throw the general response exception.\n. Not sure if we are talking about the same field. The documentation states: The text to find documents like it, required.\n. Ok, got your point. So what you mean is that \"\" should be supported. Does seeting like_text to \"\" have any affect? If not I agree, we should just remove the if clause. If yes, we should set the variable $_likeText to null and check for isset(...).\nCan you open a pull request including the test above?\n. Can you check my comment on the pull request and have a look at the failing tests?\n. I will close this one as https://github.com/ruflin/Elastica/pull/701 was merged.\n. I assume you checked that the file /var/www/mine/app/config/synonym.txt exists?\n. Good to hear that you managed to fix the problem.\n. @nickel715 Good point, I switched it already for Travis. Until 2 days ago also all tests were still running with 5.3 and were green. I suggest we add 5.3 to travis again and see if it still builds and or what changes would be needed to make it build (I think it is only making some []\u00a0to array()). If it doesn't built anymore, we remove it.\n. Both are now enabled for the travis builds. HHVM was also added.\n. Nice feature. You could already use it through the raw query (http://elastica.io/example/raw-array-query.html) but I agree we should have it as a native feature implemented. Can you open a pull request with a suggested implementation?\n. That is what I call a good bug report. Thx.\nI'm not sure why 'ok' is not set in your item array. Perhaps this go replaced through status in es 1.3.4? \nYes, please open a pull request and we should also have a test to reproduce this bug.\n. Good point. Can you open a pull request with this change?\n. :+1: Let me know if you need some help.\n. The tests fail now. But it is not Elastica that complains but elasticsearch:\nQueryParsingException[[test] fuzzy_like_this requires 'like_text' to be specified\nIs the empty \"\" passed to elasticsearch or not because of the old code?\n. Merged. Thx.\n. The tests are ok and quite extensive, I like that :+1: Functional and integration tests are a big plus as it makes sure, it also works with the specific elasticsearch version. This makes it very easy to detect, in case some (return)parameters change. I you can add 1 or 2 integration tests, I'm more then happy.\n. I already merged as it doesn't break any of the existing tests. Of course I would still like to make it a higher priority on your side anyways ;-)\nThx for the addition.\n. :+1: \n. I assume there is nothing to be done for me here, right?\n. Ok, perfect. Check my comment in #713 \n. I see that the part Wikimedia is a bit confusing. Feel free to open a pull request: https://github.com/ruflin/Elastica.io\n. Thx, it is now also deployed: http://elastica.io/projects/\n. If you are unexperience with Elastica and elasticsearch I would recommend you to use the predefined objects to prevent formatting / nesting problems. Here are som examples for query string queries:\n- https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/QueryStringTest.php\nAnd here you find examples for the suggest queries:\n- https://github.com/ruflin/Elastica/tree/master/test/lib/Elastica/Test/Suggest\n. Closing as no updates provided. Please reopen if needed.\n. Good point, didn't know about this. I think we should refactor _status so it uses the indices recovery functions: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-recovery.html\nCan you open a pull request with this?\n. First note: As it is possible to call recovery for the full cluster, I would not use the index name space: http://localhost:9200/_recovery\n. Having lots of classes is probably closer to the way Elastica was handling this kind of stuff so far. It has the big advantage of auto-complete, but it also has the potential to break BC every time an object changes. At the same time this is nice for the engineer, so he does not have to figure it out in his own code.\nAs @webdevsHub mentioned there are other complex objects where it would be nice to have a similar treating. My favorite would be to find some general abstraction we can use to keep the lines of code low but still support the auto-complete. Any ideas? Other option is to have all the sub objects as described above and them something similar to the query builder that makes it more easy to call.\n. Thanks, pull request is merged. So I think we can close this one. Otherwise, please reopen.\n. Thx, merged. Good addition.\n. Thx.\n. @trsteel88 Can you post the full exception here?\n. Thanks for posting the full error. It seems this is directly related to elasticsearch and not Elastica itself. The question here is probably the the String Query is needed or if the query could also be split up in multiple Terms? The elasticsearch forum is probably also a good place to raise this question: https://groups.google.com/forum/#!forum/elasticsearch\n. Closing as issue is probably related to elasticsearch.\n. Which version of Elastica are you using? It is actually in the require-dev section of Elastica: https://github.com/ruflin/Elastica/blob/master/composer.json\nIt is not part of the \"require\" as it is only mandatory for the testing parts. If you use the Elastica test or mock a log object, I see the reason it will be used. What is the reason you mock the log object?\n. Ok, I fully understand the problem, but as you probably understand, I'm hesitant to put a package which is only needed for require-dev in require as I want to keep the dependencies to a minimum.\n@fprochazka @mikekamornikov Do you know if there is any nice solution for this? Means, that for example composer install --dev does also install the dev dependencies of the sub packages?\nI assume if you put psr/log in your require-dev in your project, there are no problems? (I know that this is not the solution you are looking for).\n. I agree that pushing #482 forward to solve this is the best solution.\n@skymeyer All the \"crap\" is in there as it was thought as a temporary solution. But you know how it is ...\n@fprochazka Good spot about the dependency in the client. This bugged me from the beginning and is hopefully removed through #482 \nAs a fast fix I'm also ok with moving psr/log to the required part as @fprochazka is right and it is \"loaded\" in the Client.php. We should only to do this in case no one has time to make the cleanup with #482.\n. @skymeyer @fprochazka What are your suggestions on moving forward?\n. I think already back then we came to the same conclusion. Now we need a pull request to make the change.\n. :+1: \n. Looks good. Please do me the favor an specify more in detail in the changes.txt that the exception type was changed as in some apps this could break BC (mention that this is a BC change).\n. Merged\n. @skymeyer I'm happy to have PSR-4 as a first step in place. As I'm not too familar with PSR-4 yet: Could there be any issues with projects that are still using PSR-0?\n. I merged the pull request and opened an issue here for further migration to PSR-4: https://github.com/ruflin/Elastica/issues/715\n. This will only have an affect on all the people using Elastica without composer, right?\n. I'm thinking about releasing it with elasticsearch 1.4.0 which is still in beta1. I assume there are going to be some other BC breaks. But I don't really know when the 1.4.0 release is planned.\n. @skymeyer I will let you know as soon as I find the time (hopefully at the end of this week).\n. @dbu Can you have a look at this. I assume there is no affect on the Symfony bundle, but lets better be sure then sorry.\n. @skymeyer Sorry that we didn't progress here yet. I would like to get some of the open pull requests in first. I hope this is ok for you.\n. After lots of internal changes I think Elastica is now finally ready to move the structure to PSR-4. @skymeyer I'm not sure if it makes sense to merge all changes or \"just\" to redo it from scratch?\n. :+1: \n. Closing this one as this is better done in a new PR.\n. @CrAzE124 So far I didn't know about this problem. But I assume you found also the solution here: https://github.com/remicollet/pecl-json-c/issues/13 ?\n. I'm not sure if we should handle this \"problem\" in Elastica itself or should leave it to the engineer to solve?\n. @CrAzE124 I think that would work and would prevent the problem. Pull request? ;-)\n. The solution could also have performance implication. The cleanest one would be the exception option mentioned by @damienalexandre. In the other issue there is also a mention of using JSON_BIGINT_AS_STRING. Does this work?\n. As Elastica \"officially\" only supports 5.4+ this wouldn't be an issue, right?\n. We could even introduce this as a \"Util\" method to keep it compatible with PHP 5.3 and remove it later.\n. Anyone time for a pull request? ;-)\n. @yellow1912 Where exactly did you put these lines in? Which PHP Version are you using?\n. Interesting solution. I actually think we could use exactly that code in Elastica. What do you think?\n. @mfn I understand the concern that Elastica should not \"overwrite\" potential php settings. At the same time we should allow the developer to also set a default without having to set it for every \"setSort\". So I would suggest to take the code suggested by @yellow1912 and make it available through a variable in the client which can be set to true. Something like bigintConversion. And of course, the documentation must be improved. \n. @oldskool Unfortunately so far there is no pull request open for this change. In case we get a pull request it will directly go into the next release. Feel free to open one with the code provided by @yellow1912.\n. @oldskool Cool, thanks. See my comments.\n. TopHits is unfortunately not implemented yet. But it can be easily added on top of the abstract aggregation: https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Aggregation\nAlso in case you urgently need a function which is not in the code yet you can always use raw query: http://elastica.io/example/raw-array-query.html\nFeel free to open a pull request with this addition.\n. I didn't test it yet, but I assume it will handle it quite well. But as it not \"natively\" supported yet there will be some traversing needed through the response object. In case it doesn't we will extend Elastica to make it work.\n. As far as I understand this was added in 1.4? This seems to be a very recent change. I'm more then happy to have it in Elastica. Can you open a pull request with the suggested changes?\n. Closing as I think this issue was resolved. Please reopen if needed.\n. Interesting, this should not be the case of course. I thought class_exists only returns true or false. Can you paste the exception you get here?\n. @merk @ilijastuden What is your suggestion on fixing it? To be honest I think it is a little bit ugly anyways to have something like an autoloader inside this class. Is there a better option?\n. Based on the comments above I suggest the two following changes:\n- As @merk suggested, we swap the order of the class_exists method\n- The text of the exception thrown by Elastica should be adapted to \"Object is not an instance of StrategyInterface\". This also makes it clear that it is not an autoloader exception.\n@ilijastuden In case the class does not exist, it will still bubble up to your autoloader but it will check the other methods first. The case that the class does not exist shouldn't happen anyways.\n@ilijastuden Can you open a pull request with these changes?\n. @jkbnerad Can you also update the changes.txt?\n. Merged, thx.\n. @zedfmario The only thing I'm not 100% happy about is the naming of the function. The name at the moment is not clear that it is about the timeout. I would suggest the following names:\n- millisecondTimeout (configuration variable)\n- getMillisecondTimeout\nWhat do you think?\n. @zedfmario @skymeyer Sorry for the late reply.\nIf I look at the long term, I fully agree with @skymeyer that we should remove all the legacy parameters and move it into the transport configuration. That the documentation must be improved is obvious. So my question is if one of you two would have the time to make these adjustments? In case yes, I would suggest to \"drop\" this pull request and go with the new solution. This will perhaps break some backward compatibility but makes more sense for the long term.\n@skymeyer @zedfmario Your thoughts?\n. @skymeyer Prefect. Thx.\n. @skymeyer Any update here?\n. Closing this one as no updates for more then a year.\n. Wow, that is very nice. I really need to take some time to check this in detail but I don't see anything major that could hold us back. I especially like that is easy extendable to new features. \nCan you also update the changes.txt file? And we should get your documentation above to Elastica.io as soon as it is merged.\n. @webdevsHub I finnaly found the time to review the pull request. I made a comment concerning the variable naming. Outside that, I would like to proceed with merging as soon as possible as I think this will bring enormous value to the project. As soon as this is in the project we should deprecate Elastica\\Query\\Builder. \nAbout geo_shape: I'm not 100% sure I understand the problem. Why don't you go just with geo_shape_provided as the function name?\nWe should increase the test set step by step, but have a basic test set ready.\nWhat I also would like to have as soon as we merged it a basic documentation with 2-3 examples on the usage of the query builder on Elastica.io.\n. Why did you choose geo_shape_preIndex and not goe_shape_pre_indexed?\n. I see your point as the QueryBuilder maps to the DSL. The main reason Elastica has two different classes is because the parameters are so different. The question is how you would handle this?\nThe main problem I see currently is that if someone uses geo_shape it throws an not implemented exception, which is not really true. \nFollowing suggestion:\n- We must find a solution to make geo_shape working\n- There is an \"Elastica\" extension to the DSL which includes for example geo_shape_provided\n. Ok, then I would suggest to rename it geo_shape_pre_indexed to have the naming consistent.\n. BTW: Can you add the pull request id to the changes.txt?\n. No worries about the documentation. Do you want to keep preIndexed or should we go with pre_indexed?\n. Merged. Let me know when you have time for some documentation on this new feature.\n@dbu @merk This could also be interesting for the FOSElasticaBundle.\n. Thanks for the details @webdevsHub @ewgRa . I would pose the question a little bit differently: Does it with Elastica 3.0.0 still make sense to keep the versions or is it just an overhead we have to maintain. My opinion is that we should have probably removed all the old versions with the release of 3.0.0 but unfortunately I missed it. As Elastica is decoupled from the elasticsearch versioning, major changes are minor or major version numbers. So when we break the QueryBuilder, there is probably also a new release out. And functions are mainly only added, rarely removed.\n@webdevsHub What is your opinion on the versions? Are they still needed?\n. @webdevsHub A PR would be great. I haven't seen a very simple comparison yet. Just go with what we have now. More functions can always be added.\n. Good addition and all green. Can you update the changes.txt file?\n. Merged. Thx.\n. Can you update the changes.txt?\n. Thx. Merged.\nInteresting that the coverage went down even though a test was added :-)\n. Does this actually mean we don't need the Guzzle Adapter anymore?\nCan you please make the protected methods starting with _ as this is the library convention?\n. @agallou I suggest we merge it as it is and do optimisation like removing Guzzle at a later stage.\nAbout the configuration: There will soon be some changes probably. Have a look at the last comments. https://github.com/ruflin/Elastica/pull/723\n. Ok, I merged it to master and also updated the changes.txt file.\n. @nurikabe Does this mean it doesn't work with the never versions?\n. Ok, lets wait for PSR-7 then.\n. @nurikabe Thanks for the update. \n@agallou Time for a Pull request? :-)\n. :+1: \n. I'm thinking if we should replace all three parameters through a $range array. Like this it is easy to add future params without having to change the code. We can keep BC compatibility for 2-3 version by checking if the first param is an array or not. If not, we can fetch a second param. This would make it more extensible. What do you think?\n. I decided to go with the third parameter even though my experience with elasticsearch tells me that there is probably a fourth parameter coming. But then we still have to opportunity to make the change. Thanks for the contribution.\n. Thx for fixing the typo. Unfortunately we didn't have a test for it.\n. @konformjs Thank you for the addition. Did you see the discussion here? https://github.com/ruflin/Elastica/issues/721\n. @konformjs As nobody opened the pull request yet for the other change, perhaps you can adapt yours so that it fits?\n. @waldemarnt If the index doesn't exist, elasticsearch should create it automatically. Do you have a different experience?\n. Merged. Thx.\n. @webdevsHub We could go a step by step approach. With the option proposed by @fprochazka we \"break\" BC but it throws a proper exception. For me both options are fine, important is that such breaks are mentioned in the release log (changes.txt). Can you update the changes.txt file?\n. Merged. Thx.\n. @TroodoNmike I understand the problem and I think it needs to be fixed. Because you brought up the issue I realised we use urlencode(...) for id's in quite a few other locations. The reason I don't like it is because I think the urlencoding is specific to the transport. \nI will merge the pull request for now as it is in line with most of the other code parts but I will create a ticket to find a general solution here.\n. @jdeniau Thx. Could you also add a test for it to make sure it works as expected?\n. It looks like the breaking tests are because of ES 1.4.2 and not your changes. I suggest we split up these two pull requests. First we \"upgrade\" to ES 1.4.2 and then we merge in your changes here. So we exactly now which changes are breaking the tests.\nI started a branch for 1.4.0 here but this can can be discarded: https://github.com/ruflin/Elastica/tree/elasticsearch-1.4.0\n. Merged. Thx :-)\n. I think this is currently the right implementation. See my comments on the pull request.\n. Thank you for the addition. Can you adjust the naming of the function and variable? I assume with the next commit the tests should pass as I'm not sure why some failed before.\n. @ck99 Sorry for the delay. Now it is finally merged. Thx.\n. I see about 85 tests failing: https://travis-ci.org/ruflin/Elastica/jobs/44939058\nOne of the problem seems to be the _createIndex function which is used by lots of tests: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Base.php#L23\nI assume some parameters with the shards or replicas have changed.\n. @jdeniau Did you have any luck yet in fixing the issues?\n. @jdeniau That looks really promising. Only 1 error left. Make sure to merge in master as there are also quite a few changes.\nI also started to work on it but you are already much farther: https://github.com/ruflin/Elastica/tree/elasticsearch-1.4.0\n. @jdeniau No problem. The main priority is getting 1.4.2 running. To make it then compatible again with 5.3 if necessary is an other thing. Lets not focus on this right now.\n. @jdeniau All green. Let me know when I can merge.\n. @jdeniau Can you please have a look at this?\n. @jdeniau I merged it in :-) That was a big pice of work. Thanks a lot.\nWill you keep an eye on https://github.com/elasticsearch/elasticsearch/pull/9203 ? I assume as soon as it is merged in and release, it will break again the implementation.\n. @jdeniau BTW: I think we forgot to update the README: https://github.com/ruflin/Elastica/blob/master/README.markdown\n. Thx. Merged.\n. Thx.\n. Thx a lot for this very nice additions and cleanup.\n. Agree. I closed both.\n. Merged. Is there an easy option to start multiple instances of ES that work in a cluster?\n. Sounds good. Actually that all the tests work properly at least 3 instances are needed, as one is shut down to test if shutting down works. \n. There are two reasons for the multiple instances:\n- Make sure that the tests also work properly with multiple instances (which was not the case in the beginning) to represent a real cluster\n- Testing the shutdown\nFor the first part we only need at least 3 instances. For the second part, in case we restart the service with the above command, I'm not sure how we handle the waiting for the starting of the service. Perhaps we should run the \"shutdown\" tests in a second independent test set, means in case something goes wrong it does not jeopardise the rest of the tests.\n. The multiple instances are needed for the tests. The cluster instances connect automatically to each other. That is one of my first concerns when I looked at #742 that I couldn't find the multiple instances.\nI will look at both of your pull requests as soon as possible. Thx for the contributions.\n. Merged.\n@im-denisenko Thx.\n. Thx\n. The reason I like to include the tests is because I often refer to the tests if someone looks for examples. This can be handy for the engineering. \nFor the other files: Is there any benefit not having them in the package?\n. If a build is created or it is deployed to production, tests etc. are not needed. But if someone works on the projects and the library is cloned with composer, test are part of the documentation. \nThe question I ask myself is what should be the default? If .gitattributes is not set, there is no way to exclude it for production packages as far as I know (please correct me here if I'm wrong). If the .gitattribute exists, at least the option to include it exist. The only problem I have here is that most engineers will never to that as they don't know about the flag.\n. This is already part of the ConnectionPool: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Connection/ConnectionPool.php#L104\nBut I have to be honest, I never tested it myself.\n. @rmruano Doesn't it throw an exception if all connections fail? If it gets into an infinite loop, we should definitively fix that.\nAbou the connection pool: All the existing methods are just proxy methods for the conenctionPool:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L477\nSo you would remove these proxy methods and just add the function getConnectionPool()?\nI agree that we at least should also expose the _connectionPool variable through a getConnectionPool, but should we remove the other methods?\n. @splitice Could you share some more details. This issue is already more then 2 years old and quite a lot of changes happened since then. Which Elastica version are you using? Which ES version?. Sure. Can you add a small integration test here?\n. Ok merged it. Travis seems to have some issues at the moment :-(\n. It is not only unit tests, but also integration test. In total they should not take more then about 7 minutes (per environment). I also just merged https://github.com/ruflin/Elastica/pull/742 and hope with this the tests work again.\n. Can you add a small test to make sure this problem does not occur again?\n. Thx, merged.\n. Thx. We should have spotted that much earlier.\n. Thx for the cleanups\n. @XWB I like almost all changes except the return null; and ' . ' without space. It also changes some of the standards we used before but I prefer to have an automatic script that fixes the coding issues and it aligned with a standard. We should include this in our build file if possible.\n. As the Symfony bundle is one of the biggest Elastica users, I don't think we need to revert anything. I prefer to have a reliable checker for the styles. What happens if you now apply only the first three? Would that lead to any changes?\n. Thx\n. Ok. Lets see if this works more stable.\n. If you want to add files with 25MB, I suggest you add more then 128MB. The reason is that the full file is read and then also hold in the cache so I assume at least double the memory size of the file is needed. The memory needed for Elastica heavily depends on the file size and how many documents you add at once. I suggest in your case at least 192MB files. If the process is long running, probably 256MB would make sense. Of course it always also depends on what other things are running the the same request.\nDoes this help?\n. Thx, merged.\n. Thx.\n. @CriztianiX Cool. Feel free to also put it under projects on Elastica.io http://elastica.io/projects/ If I can be of help in any way, let me know.\n. I added your library here: http://elastica.io/projects/ I will close this issue as I think it is not an \"issue\" we can fix.\n. I restarted the build. Lets see what the outcome will be.\n. At least most tests passed :+1: \n. I merged it and we can move forward from here.\n. It seems we are missing the memcache php library: https://travis-ci.org/ruflin/Elastica/jobs/48128202#L466\n. @im-denisenko I think here is a solution for the github rate limit problem: https://github.com/composer/composer/issues/1314\nSeems like @fprochazka is also aware of this one ;-)\n. I just checked what the FOSElastica Bundle is doing and they are also using lower case: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/composer.json#L20\n. I just fixed it: http://elastica.io/getting-started/installation.html\n. Thanks. Not sure why one of the builds failed. But it seems to solve the Github issue. Lets see what happens to the follow up builds.\n. @im-denisenko Currently the last build always fails because of memory issues. I remember you played around with the memory? https://travis-ci.org/ruflin/Elastica/jobs/48605333\n. So increasing the elasticsearch memory didn't help here? \n. But if you set it to 256, the hard limit is 256. Perhaps we should try 512? The strange thing is that always the last build fails. Either it is connected to the PHP version or the build VM's are somehow connected.\n. Nice list. The problem is that when the tests run too long, quite often there is not output / error messages that can be analysed. The best way would be to try to reproduce it locally. \nThe failed tests take really long, often exceed the maximum time. So this means indirectly, that the response is really slow which could mean es has problem on writing files. If I look at your list, ulimit jumps into my eyes. Perhaps we should try to set it at least to 65k or higher.\n. Merged. Of course some of the builds failed because of https://github.com/ruflin/Elastica/pull/759#issuecomment-71705711 ;-)\n. BTW: With your recent pull requests you increased the coverage from 81% to at least 83% = Awesome\n. Ok, as far as I understood the main problem is the flodding of deprected messages and I assume disable this in PHP is not an option (something like error_reporting(E_ALL ^ E_DEPRECATED); )?\nA more \"crazy\" method but probably also slow could be using the Reflection class and read out the function documentation as this one is quite different: \nhttp://php.net/manual/en/reflectionfunctionabstract.getdoccomment.php\n. @Nikerabbit Thanks for the update. I will close the issue in this case. Let me know in case it should be reopened.\n. My question for the old style is: In case we use the old style everywhere, will Elastica still run with PHP 5.3? PHP 5.3 still seems to be the most popular version: http://w3techs.com/technologies/details/pl-php/5/all\n. What I suggest is that we add PHP 5.3 to the build, but don't mark it as required (as we did before). I would not change the communication about the compatibility. It is still 5.4+, but it can work with 5.3. So as long as it is not an extra effort, we keep it compatible with PHP 5.3, but it can be that some of the features don't work.\n@merk @im-denisenko What do you think?\n. @jdeniau I suggest we try to readd it by removing the array syntax. Perhaps we realise then that with the recent refactoring also some other new \"things\" got introduced. Would be nice to discuss it directly with a pull request to see the potential issues.\n. Nice, all tests except the two incomplete ones are passing. And of course a random build is failing ...\n. Almost 84% ;-)\n. @im-denisenko Concerning the convention difference to PSR-2. I'm aware of that. That is the only thing I don't like about PSR-2. The good thing is it is only \"SHOULD NOT\" and not \"MUST\". In case we decide to change it, it would have to be changed across the whole library.\n. Sorry for the late answer. So if I understand the problem right: Guzzle is PHP 5.4 only, but there is an old version that isn't. The question is now on how to use Guzzle PHP 5.3 for one build, and 5.4 for all the other builds? What if we just say Guzzle Client is not supported for PHP 5.3, we don't include it and we skip the tests?\n. @jdeniau What I meant is more that\nif (php < 5.4) {\n   self::markTestSkipped\n}\nSo only for PHP 5.3 it is skipped.\n. @jdeniau @im-denisenko Any updates here?\n. Based on this pull request I opened a branch with the above script inside. Lets see if it passes: https://github.com/ruflin/Elastica/compare/jdeniau-php-53-es-142\n. @im-denisenko Doesn't seem to work as expected: https://travis-ci.org/ruflin/Elastica/jobs/50792723\n. Thanks @im-denisenko @jdeniau This is now in master.\n. @bakura10 Can you add a brief test for this to make sure it is never reverted back?\n. Merged. Thx.\n. Merged. Thx.\n. Can you open a pull request to fix this?\n. Should be fixed now. See commit https://github.com/ruflin/Elastica/commit/63548000a9d67763ab693d7442760eec23ef04bc\n. Thx. I will try to make a release this weekend.\n. I wasn't even aware that PHPStorm is now able to use static or $this for auto complete. I quite like \"$this\" as it describes very well what it actually is. In which IDE's is this going to work?\n. Merged. Thx.\n. Nice, thanks. What would be the consequence of still having 3 instances for testing? Would we run into any limitations because of the criterias you mentioned above?\n. Ok, good to know. So I assume the issues appear on travis and not on the local machine?\n. BTW: The only issue I have with the new tests is that they take quite a bit longer. I assume this is because of the removal of the indices. But here stability goes over speed.\n. I'm happy it works now ;-) Thx a lot.\n. @bakura10 Yes, it looks like we have to refactor this component to also make the new functionality available. As far as I understand it is still possible to pass dynamic scripts, but it has to be enabled first, right?\n. The alternative would be to move to Sandboxed languages: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html\nAs the vulnerability is also in 1.4.2 I assume the hosters will also disable it there ...\n. @bakura10 I don't use the scripting myself so I'm not an expert here :-(\n. @nicolassing recently refactored Script and implemented FileScript: https://github.com/ruflin/Elastica/pull/902 I assume implementing on top of AbstractScript the _script id index should be possible. Instead of the scriptFile, the script id would be passed to the constructor. Can one of you two have a look at this? It would be nice to have it in Elastica.\n. Merged. Would be nice if you could keep an eye on it in case some changes are made to the functionality.\n. @ewgRa I understand the issue. In case we change this, we would have to change this across the hole library I think. Because this \"issue\" exists for almost any object. Most of the time the objects are directly transformed to arrays to not have to deal with it at a later stage. I like the idea with ArrayAccess, but perhaps it could make even more sense to use ArrayObject as a foundation? \nWe should discuss the pros and cons of the different options we have in detail as this would mean quite a radical change to the library.\n. @ewgRa Sorry for the huge delay in answering. I think it is now time to pick this up again together with https://github.com/ruflin/Elastica/pull/878 I'm also in favor of method number 3. The main problem I see here is that no all toArray functions are the same and some need to raise exceptions etc. So the question is where and how this would be handled in the future?\n. @ewgRa What I was meaning by the different toArray functions is that some check if all the params are set and are in the right type. The function name and parameters are always the same.\n@im-denisenko So if \\Elastica\\Param would implement JsonSerialisable all objects would support it and it would replace the toArray function. The part I don't like about this, is that the library then is built on top of the solution that it always must end in JSON. I know that Thrift etc. are deprecated, but I still don't think we should link it to a certain format before the data is transferred.\n. I'm not sure if we mix here 3 problems:\n1. Working always with objects instead of converting to arrays\n2. Simplifying the conversion to an array\n3. Conversion to JSON\nFor the last one I don't really understand what the problem is having it in the transport layer. Conversion to JSON (or any non PHP format) should happen as late as possible, which is in the transport layer.\nThe first 2 are the ones we should focus on. My assumption in the beginning was that every object knows best how it is converted to an array, that is why the toArray function exists in every object.\nI really have to take a closer look again and think about it in more depth by going through all the comments above. Keep up the good discussion.\n. Looks promising. I like that most of the ->toArray() disappear. Make sure to use the $this->_convertArrayable() as it is a protected function. It's quite some time I have seen a recursive function :+1: \nDuring the brief review I got the felling that the following appeared multiple times (or similar functions):\nphp\n      if (isset($array[$this->_getBaseName()]['query'])) {\n           $array[$this->_getBaseName()]['query'] = $array[$this->_getBaseName()]['query']['query'];\n      }\nPerhaps this could also be packaged in a function in case it is \"really\" the same. Haven't checked in detail ;-)\n. I would suggest we merge it first and then see if we can find a better solution later.\n. Thanks\n. Thx\n. @im-denisenko Any idea? https://travis-ci.org/ruflin/Elastica/builds/51122292\nI just realised that this comment is going to be confusing as I restarted some of the jobs / builds. Some jobs started to fail randomly again in the setup phase ... Lets see if it happens again.\n. It was about 4 that failed and the logs were very similar.\n. Merged. It would probably make sense to have your comment above as documentation on Elastica.io.\n. @im-denisenko No worries about your english. We all make some mistakes.\n. To make sure it works with the current version, we should add an integration tests, which means we must add the plugin to our setup process. Like this we can also be sure it works with future versions.\nAlso we should add it then to the dependencies in the README file: https://github.com/ruflin/Elastica\n@Jmoati If you need some help to get the setup done etc. we are here to help.\n. Merged. Yes we can add it to the query builder in a second step.\n. @webdevsHub I like the \"plugin DSL\" idea.\n. All the plugins are listed here in the README: https://github.com/ruflin/Elastica\nGeocluster and attachment are the other two.\n. Awesome. Thanks.\n. @im-denisenko BTW: I think you will like this: https://scrutinizer-ci.com/g/ruflin/Elastica/?branch=master\n. :-)\n. If we go with independent versioning, should we go to 2.0.0 or directly jump to 3.0.0. 3.* would make sure there is no confusion with Elasticsearch, which could also go soon to 2.0.0.\n. Ok, based on the input of you guys I think the decision is obvious. I now created a 2.0.0 milestone (https://github.com/ruflin/Elastica/milestones/2.0.0) where we can move in all the issues that should go into version 2.0.0 and a 2.0.x branch (https://github.com/ruflin/Elastica/tree/2.0.x) to merge in all the changes.\nIf we already talk about version. What is your preferred way of calling branch and tag names? I checked several projects and it seems like every single on is different. \nFor the release tags I see two options:\n- v2.0.4\n- 2.0.4\nFor the branches there are also several options\n- 2.0.x\n- 2.0\n- v2.0.x\n- v2.0\nI'm sure I also missed some. Any thoughts on this?\n. @merk I was thinking again about the branches and I'm not even sure if it is needed. The branches are mainly needed if a long term release plan exists with specific features. This is less the case in Elastica as it is mainly driven by elasticsearch. So probably the branches are not even needed.\n. @dbu I was thinking about your input to introduce all BC changes with 2.0.0. I actually would suggest to go the other way around and don't introduce any major changes to make the migration as seamless as possible not to \"loose\" engineers on the old versions. After releasing 2.0.0 we have the possibility to use the semantic versioning to show the BC breaks and developers will get used to it.\n. @merk Ok, I see. So far I never pushed \"fixes\" into older version. But in case there are major BC breaks I see why this could make sense.\n. @dbu I also use git flow in larger projects but I think here it is overkill.\n. Implemented.\n. I restarted the build and it is green now :-)\n. Seems like you had before a case insensitive file system. I will close this. Please reopen if you need further help.\n. It makes sense to go with the elasticsearch reserved characters. I restarted the travis build as I'm not sure why it completely failed.\n. Merged. Thx.\n. @webdevsHub Can you have a look here?\n. Merged. Thx.\n. @webdevsHub As it never worked before, I don't think we should treat it as a BC break.\n. Agree, would be nice to have it directly changed everywhere. @borNfreee Can you add this change?\n. @gourlaa Without curl Elastica will not work, as Elastica must connect to the elasticsearch server and that happens through curl. I don't really see an alternative here. \n. Closing as unclear if further steps are needed.\n. The boost value \"should\" be automatically converted to a float if it is not the case. Check here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Match.php#L109\nCan you post some more of your code to see what kind of params you put in? I just checked the tests and unfortunately there is no implementation test for setFieldBoost, only a unit test.\n. I just added two tests to check for the setFieldBoost function with and without a float, both seems to work: https://github.com/ruflin/Elastica/commit/a163767b78052647a74afc187afb38e9fb60db60\nSeems like we need to hunt the error somewhere else.\n. setField is actually only a proxy for setParam as you can see here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Match.php#L26\nI can see that this could be confusion and I don't think the setField function is really needed, but removing it would now mean making some BC breaks.\n. @Defgenx Currently the implementations of aggregations in the result object is still very rudimentary. I agree that there should be a more sophisticated way to use it in the result object. But as far as I know nobody is working on this currently. Interested to pick it up?\n. @Defgenx Sounds good. Looking forward to it.\n. Merged. thx.\n. Nice. Thx.\n. Perfect as always ;-)\n. Merged. Thx a lot.\n. @merk Sorry that I never replied on this one. I think a good place for this would probably be Util functions or something similar in Elastica, so we don't mix \"core\" elasticsearch functionality with functionality on top. Did work on this progress?\n. I was thinking about this a little bit more. In the past I always mentioned that Elastica should \"only\" be a client. But with the introduction of the php client of elasticsearch I realise more and more, that Elastica itself is more then just a client.\nI started to use elasticsearch as a document store for some of my side project and I see the potential from the above mentioned functionality. I think it is more then worth to have an approach to implement this. What do you suggest under which namespace this should be implemented?\n. @merk Any updates here?\n. Does anyone have some time to open a pull request with the feature?\n. :+1: \n. Closing this one even though some points are still open. By now we support 2.0 and we implement the open features above when requested. Please reopen if you disagree.\n. @im-denisenko Let me know when this is ready to be merged, not that I merge it too early. \nBTW: Nice list https://github.com/ruflin/Elastica/issues/812\n. @im-denisenko I assume this pull request is ready to be merged?\n. Merged. Thx.\n. Thx. Merged.\n. Have a look into the tests below: \n- https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/HighlightTest.php#L28\n- https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Aggregation/TopHitsTest.php#L296\nElasticsearch expects an \"object\" and not an array. So if you need {} after content, use an empty stdClass() object. As soon as \"content\" is an object, it should also make an object out of fields instead of an array.\n. Thx\n. @tmatei Not sure what you mean. There were already 2 releases with the changes above.\n. Based on some tests I did and issue https://github.com/elastic/elasticsearch/issues/7240 an empty bool query should act like a match all query. I will add a fix for this issue.\n. See https://github.com/ruflin/Elastica/pull/822\n. Close ashttps://github.com/ruflin/Elastica/pull/822 is merged.\n. Close as fixed in https://github.com/ruflin/Elastica/pull/823\n. @ebuildy Could you add a brief integration test to make sure that it works as expected?\n. @ebuildy Thanks for the addition, but as far as I can see this query never runs on an elasticsearch instance. Or am I missing something?\n. Merged, thx.\n. @pborreli These files are automatically generated from the repo here: https://github.com/ruflin/Elastica.io Means the fix has to be pushed here. Are you going to open a pull request here or should I fix it? Thx for info about the typo anyways.\n. I just fixed it here and pushed it online: https://github.com/ruflin/Elastica.io/commit/c4bcb7d927d27962adca4cdedcf5e8cfccc2ae19\n. Second paragraph here? ;-) http://elastica.io/\n. @pborreli Nice, didn't know about this one. Do you have time to open a pull request with this one?\n. I think the reason we implemented it like this is that we wanted to allow to set \"all\" parameters directly with the constructor, that is why setRawTerm is called. Also as it happened in the past, lots of functions / constructor got more and more params which in the end leaded to the oposite to go back to passign an array to not change the API every time no params show up. \nBut I can see that both options would work if it is checked if a second param exist which then calls setTerm. Question is if we should also include boost then?\n. My suggestion is, that we support both as the option you mentioned is much more intuitive. We only support 1 or 2 arguments. If there is only 1 argument, it must be an array, if there are 2, it has the same params as setTerm. Can you open a pull request with that?\n. I also planned to look into this \"soonish\". Did you already try to run it with PHP 7? We should also create a list with the things that must be adjusted.\n. Thanks for the pull request. I wasn't aware that Travis already supports PHP 7.\n. It is probably best to follow the suggestion of @im-denisenko concerning the naming in #826. @stof Is Null also affected? \nWhat we could do to keep it BC is to set BoolFilter as the base class and use it across all the client library. But keep the Bool class which extends Bool*. So it will never actively used in the library itself but \"could\" be used before PHP 7. I'm not sure if PHP 7 will complain also if it is not called.\n. Pull request opened: https://github.com/ruflin/Elastica/pull/837\nFor my note: http://php.net/manual/en/reserved.other-reserved-words.php\n. @stof That is what I assume. It is time to get a local PHP 7 environment running for testing this stuff. Which docker or vagrant images are you using for php7?\n. @digitalkaoz Thx for the link. Will try it out.  There are also some Docker images available: https://registry.hub.docker.com/search?q=php7&searchfield=\n. @stof @im-denisenko I'm a little bit undecided if I should merge the pull request already as it will still fail for quite some time or if we should wait until there are also the changes for PHP 7 compatibility.\n@stof About the new travis infrastructure: I'm still hoping that they will support docker containers which would heavily speed up the builds.\n. I merged the pull request so we know what the status is. I suggest we move all further discussions to https://github.com/ruflin/Elastica/issues/825\n. Should we change to the es default and just make it an option? This would break BC but if it makes it more understandable, why not? What would the engineer expect? What do you think?\n. Next tag planned is 2.0.0. This will also be the move to \"proper\" semantic versioning. Currently Elastica has 4 digits and is linked to the es versioning.\n. :+1: I now closed this pull request. Looking forward to a new one ;-)\n. Thx. Merged.\n. @xwei3752 Can you give some insights here as you implemented this?\n. @virtuman That is why I mentioned @xwei3752 who implemented it in https://github.com/ruflin/Elastica/pull/829\n. I merged the changes. What I will change is the return type to bool and return true.\n. @virtuman @webdevsHub @xwei3752 What do you think about the order of the params? I would intuitively put the old index first and then the new index. The second thing is: Is this really reindex? Isn't this copy? \n. Suggestion: I switch the params and rename the function to copy. In a new issue we discuss what reindex actually is. \n@virtuman As you are using this in one of your applications I assume your input would be more then welcome here. And as you are based on master, you will have to rename your implementation. I will rename it before the next release so we wont have any BC breaks.\n. Pull request can be found here: https://github.com/ruflin/Elastica/pull/836\nSome more thoughts: I also changed the return to the new index. That is what I would expect in case I want to chain some commands together. Most of the time I probably want to work on the new index.\nFor the reindex functionality: The link provided by @xwei3752 describes very well what other functionality is needed. Copy is really taking a full index and copy the data to an other index. Reindexing can start at a certain criteria as it is mentioned in the documentation. I see copy as a sub function of reindexing as reindexing is more complex. \n. Looks good. For reindex I'm not sure if the third parameter should be an array that covers all the optional params. I'm quite sure more params will follow. Do you have some time today to open a pull request with this? Like this I could get it into the 2.0.0 release. The other option is I remove it again from the 2.0.0 release and we readd it afterwards.\n. I removed it for the 2.0.0 release as I really wanted to get this out the door. The \"old\" code can be found here: https://github.com/ruflin/Elastica/tree/reindex-and-copy\n. About the ignore_conflict: We should not ignore it as the copy assumes $newIndex is an index which does not exist yet and has not mapping / data yet. So a conflict should never happen. If one happens, it should raise an exception.\n. Looking forward to it :-)\n. @im-denisenko You were the one that implemented https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Base.php#L50 I see the reasoning behind it and it makes sense. There are two potential problems here and I would like to get your opinion on that. The first problem is that I \"assume\" that cleaning all indexes takes longer then just the ones that were created. On the other side, the same amount of indexes should exist as was created. The second problem is, that some let the tests run on the same cluster as their staging or even production environment (yes, they shouldn't). All these indexes would also be removed. The good thing here is they will learn not to do it. At the same time I think tests should only mess with the data / indexes they created. What are your thoughts here?\n. Good idea. I would probably not change the test trees as it will \"duplicate\" a lot of classes. About the speed gain / loss I agree. Currently the slowest past is probably the setup. Unfortunately there is no Docker support from Travis yet.\n. About clean es instance: Agree that we should expect that to have. So lets keep removing all indices and not lets add complexity here.\n. I like the group approach as it also makes it possible to \"tag\" one test with multiple groups.\nI would assume they don't have to run docker on top of docker, but spin it up similar to the rest of their infrasturcture. I'm quite sure they are working on that. Docker Swarm etc should help here.\n. Closing as https://github.com/ruflin/Elastica/pull/848 was merged.\n. I like the CHANGELOG.md and CONTRIBUTING.md suggestion. For the changelog itself, I think it should be \"revised\" by a human, but not necessarly created by a human. What I do in my projects where we use Jira is that we put a emphasize on writing go JIRA ticket titles which are then directly also the pull request titles. So part of the CONTRIBUTING.md should be to make sure good pull request / issue descriptions are given which directly can be used in the CHANGELOG.md. \nAs soon as the Release notes are created, do you have an idea how the same release notes could be used for the Github release and on Elastica.io?\n. For the Release notes: Is that what you were looking for? https://github.com/ruflin/Elastica/blob/changelog-standard/CHANGELOG.md#200---2015-05-11\nNot sure why ankers don't work in my file but they work here: https://github.com/olivierlacan/keep-a-changelog/blob/gh-pages/CHANGELOG.md\n. Closing this as we have now the CONTRIBUTING.md which I think is a very good idea.\n. So we agree to Stackoverflow. The question is now how to \"organise\" it. I haven't used Stackoverflow too much in the past. Does someone of you have a \"high\" reputation?\nAs Elastica is an open source project the question is how much \"tools\" should be used for organizing it. The less tools the better. So I'm not 100% sure if Trello would not just be a tool we use in the first 2-3 months and then is more or less dead. Should we use a good old IRC channel so also other people could ask questions directly there?\nOne thing I tried to for some time but never suceeded in the long run is the build a \"foundation\" team around Elastica. So we have several people that push it forward, can merge pull requests and also make releases. @webdevsHub @im-denisenko What do you think?\n. Here is an Elastica Chat Room: https://gitter.im/ruflin/Elastica I never used Gitter but lets try it out\n. @webdevsHub @im-denisenko I added you both as collaborators to the project. You should now also be able to merge pull requests. With power comes responsibility ;-)\n. The open point we still have is SO. It seems all three of us are not very active on SO means we have almost no reputation. The easiest one to gain reputation is answering old questions and especially the new ones. I will try to watch for questions on SO a little bit more so I get the chance to answer the new questions...\n. @im-denisenko Always was and will be ;-)\n. I started to answer some answers on SO and we use gitter. Closing as I think a larger changes is not feasible.\n. https://github.com/ruflin/Elastica/commit/49017b3060a3b14ab5767507969fa1ac5bff9441\n. Jep, working on this one. I want to first check if it builds with renamed classes as my PHP 7 setup is not ready yet.\n. @sten Jep. I already canceled most of the builds. It worked in the past as there were less jobs and it seems like travis gets more and more busy for open source projects: https://www.traviscistatus.com/ I'm also working on making the builds less heavy, especially the setup.\n. @stof There were some differences in the past where this was needed (and we had less PHP versions). But I will also look into this during checking for build process improvements.\n. Seems like there are some issue with phpunit and PHP 7. Not sure what causes the segmentation fault: https://travis-ci.org/ruflin/Elastica/builds/62187485 To debug it I must setup my local PHP 7 version.\n. @stof I disabled comments for the moment. What I like about the comments is that it shows the coverage and the coverage changes. I'm testing codecov at the moment as there seem to be some issues with coveralls. https://github.com/ruflin/Elastica/pull/850\n. Closing as all changes go into https://github.com/ruflin/Elastica/pull/852\n. Is getDocumentCount() required for the implementation or is it only good to have in the interface? \nI could actually see that we implement this one and the Util function copy just uses the popular and offers a simple \"mapper\" for the user (eat your own dog food)\n. I actually quite like the callback option. Suggestion:\n- If we add functionality where getDocumentCount is used, we should add it (I like onIterationCompletedCallback)\n- If we don't leave it out for this pull request, it should be removed to keep it to a minimum\n. @rmruano I think 5 seconds is totally reasonable. But we should not change the default behaviour. So my favorite options is option number 3. Set it to null so in case the default value is changed by curl, it will also change.\n. Merged\n. Does this break an BC or not?\n. Ok, I will wait with merging until @hasumedic put his feedback in.\n. Mention it in the CHANGELOG.md file\n. Merged. Thx.\n. @hasumedic I think @webdevsHub is on vacation and will only respond next week ...\n. See #856\n. @im-denisenko @webdevsHub Please merge if this goes in the right direction.\n. @webdevsHub I suggest we introduce the CONTRIBUTING.md in a second pull request. I would like to add there some more details / rules for contributors. \n. @agallou Thx. Let me know when it is ready to be merged.\n. @agallou What you suggest as a next step?\n. @sagikazarmark The curl adapter is the \"basic\" adapter we use. @im-denisenko I assume that is why you mentioned it specifically?\nI suggest we wait with this until everything around PSR-7 settles down.\n. @sagikazarmark Elastica has started because of Memcache and Thrift to have its own implementation of some adapters (including some Http Adapters): https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Transport. As you correctly mentioned, in the future Elastica should not rely on an implementation, especially as Thrift and Memcache as transport are deprecated. Since we have an implementation for the adapter, just removing it means a BC break. I think we should probably remove all adapters and only depend on the discovery, but this needs some refactoring on the Elastica side. To make sure we make BC breaking changes only once, I suggest to wait still a little bit with this one.\n. @joelwurtz I would be more then happy fi you could give it a try. I'm not sure on the schedule of https://github.com/ruflin/Elastica/pull/989 and it should not hold us back. About php-elasticsearch and support for PSR7 we should probably have a conversation with @polyfractal \n. @polyfractal Awesome. Lets see if I can expedite https://github.com/ruflin/Elastica/pull/989 somehow \n. @joelwurtz :+1: Can you link then the PR here for reference?\n. @joelwurtz Thanks for your work. I will have a closer look at https://github.com/elastic/elasticsearch-php/pull/383\n. - There will probably some conflicts as your changes will touch all the tests\n- The test which use a client, are normally the functional tests.\nUnfortunately my builds are not green yet.\n. Looks good to me. I see you also did some cleaning up. Thx.\nSee my comments above.\n. @im-denisenko I suggest to merge this and make improvements in a second step. About the speed up: The nice part is now that the tests can be split up and only parts can be run. For example for each commit unit tests could be run, but only pull requests all tests are run ... Unfortunately I don't know if such configuration is possible with travis.\n. Merged :-)\n. Interesting. We should then run the unit tests for every commit but functional and shutdown only for pull requests.\n. Looks good, see comment. Can you update the CHANGELOG.md file?\n. Merged. Thx.\n. @im-denisenko Can you please have a look at this and also try it out locally (see commands in Makefile). You need docker-compose installed.\nThere are still 2 tests failing and socket_create is missing. I will fix the failing test issue now.\n. @im-denisenko Having a build for every line is one of the reasons I love Docker. Merging the line as you mentioned above speeds up the installation but I would like to keep it one line for each command at the moment, because I still changing and playing around with the docker file. Having one line per command means I can leverage the cache much better. As soon as the Docker file is more stable, we should move to merging the lines as you mentioned above.\n. @webdevsHub Can you briefly elaborate on what belongs into Util and what into the Tool namespace? We should document this somewhere so we can use it for future features to decide where they belong. The part I don't like too much is that we have a class with only static functions. It feels a little bit \"wrong\" :-)\n. I added a note here and merged your pull request. https://github.com/ruflin/Elastica/commit/288a1ecea41cb35a133173d972e2d8637bc06fe6\n. Missed that one. Sorry.\n. - I suggest to add that also \"collaborators\" should never merge their own pull request\n- Links to Elastica.io must be provided on how to run docker-compose and builds\n. @im-denisenko I updated the file. I left out the parts with squashing commits and rebase. This can be dangerous especially for unexperienced users. So the experienced ones are going to do this anyways and know when to do it, but the less experience are going to \"save\" route. I added all the other points.\nI suggest we merge this to have a first version available and update it from there. I would like to add some more \"examples\" on how to setup the project and run the tests.\n@im-denisenko What is the current command you run to \"cleanup\" the code styles?\n. I tested it briefly and it looks like we used php-cs-fixer dir --level=psr2so far. If I call fix, it applies some more changes. I actually quite like the additional changes like making everything to single quotes. \n. Right, forgot about this one. It picks the config if no dir is defined as the dir is also in the config file. It removes all package comments and adds a dot at the end of all comments. This leads to changing almost all files. So either we haven't run it for a really long time or something in the \"default\" symfony config changed (which I assume is the case).\n. @webdevsHub Thanks for the notes. I made the changes to the file.\n. Merged. Thx.\n. Yes\n. I finally solved this issue by just ignoring dev for PHP 5.3. The part I don't get is:\ncomposer remove \"guzzlehttp/guzzel\"\nThis works as expected and removes the package after I reply yes.\nIf I use the -n option and set \"discard-changes\" config to true or false (I tried both ...). Nothing happens. Why is the correct parameter that it automatically answers yes during the removal without my interaction?\n@stof I'm sure there is a flag or config I just missed.\n. @stof Thx for the review. Will fix it. Any idea about the \"remove\" issue I mentioned above?\n. The problem is PHP 5.3. I still want to keep the builds alive but Guzzle is not compatible with PHP 5.3. Unfortunately only skipping the tests doesn't work as it already checks the libraries in the beginning and an exception is thrown. So my idea is that instead of making special cases for all others (means installing an extra package) I want to remove Guzzle for php including the libs in the vendor directory.\n. @im-denisenko In the long term I agree that we should think about that, but currently it is not a priority. I think dropping of memcache and especially Thrift will cause some uproar.\n. @3m0 I would assume json_encode returns a full string and doesn't have any line breaks inside. Could it be that you perhaps some special characters inside that have issues with encoding / decoding (I saw you use the portguese analyser). Can you try to reproduce it with a very simple example to better track the problem?\n. Closing as no updates provided. Please reopen when needed.\n. @webdevsHub @im-denisenko I need some fresh eyes here. Do you know about any \"know\" bug or issue why PHP 7 / phpunit and a constant \"DEBUG\" crashes everything?\n. I will try to get a minimal script together to reproduce this. \n. @im-denisenko Thanks for the detailed research. Can you open a pull request with the code above to see if it builds? The good news seems to be that it has nothing to do with phpunit, the bad news is that there seems to be an issue somewhere in curl in PHP 7.\n. Best would be to mentioned Sterling Hughes as he is the creator of curl, but I couldn't find his Github handle.\n. Cool. Will probably take some time to get the \"fix\" on travis.\n. Sounds good to. Are you able to \"push\" into my pull requests?\n. Merged.\n. @im-denisenko This documentation is quite good. We should probably also link it on Elastica.io\n. :+1: Can you update the CHANGELOG?\n. Thx. Nice one as complexity reduced. We could mention in the CHANGELOG more specific that the curl params now must be used.\n. @im-denisenko Probably it is best you have a look here as you know best on how you are using this. From my point of view it makes sense to remove it.\n. @im-denisenko If we exclude all files, I'm not even sure if we need all the .md and .txt files. My assumption is that if a release package is created, only the files are need which will be accessed by a computer.\n. @pborreli Your take on this?\n. I checked a few other php libraries and actually none of the libs are using it. I think we should go for the one of the two extremes: Either include everything (removing .gitattributes) or removing everything which is not needed to use it as a depndency, which is mainly the lib folder.\n@pborreli For development you can use --prefer-source and it will fetch the full library. I think the problem here is that most engineers don't know about this command, which would also explain why most projects don't use .gitattributes. As the size of the library with and without does not differ too much I tend to go in the direction of always including everything as I can't find an example at the moment where removing it would be a big advantage.\n. Merged.\n. I'm not aware of lots of other endpoints. I suggest instead of having a general \"endpoint\" support that we decided plugin by plugin if it should be supported (as we do several others).\n. Closing as no updates. Please reopen if needed.\n. Agree. Merged.\n. I had to rerun the build as PHP 7 and HHVM failed. But now everything is green.\n. I also like that query builder is only a proxy. Standardising the toArray is a good idea. Also check out the suggestions from @ewgRa here about the toArray functions: https://github.com/ruflin/Elastica/pull/878\nIf can make some changes here that make it even more \"standard\", that would be nice. Also working with objects most of the time could be help. For example every time I pass $type to an object, I have to check if it actually expects the string or the object.\n. One thing that is very nice right now is the autocomplete in the IDE. I assume this would not work anymore if we would work with Reflection magic.\n. Merged. Thx.\n. Sweet. Didn't expect it to happen so fast. Merged.\n. Was removed in 3.0.0-beta1\n. To fix the snapshot problems, the paths need to be added to the config:\npath.repo: [\"/tmp/test_register\", \"/tmp/test_repository\"]\nIn addition, the file systems above must be shared across the nodes: https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html\n. Bulk requests now throw exceptions for unrecognised parameters https://github.com/elastic/elasticsearch/pull/11331. _percolate seems to be unrecognised / unsupported. This param must be changed in the BulkTest::testSend\n. @im-denisenko FYI, in case you have some time to have a look at it.\n. @im-denisenko Thx for looking into it. If the image plugin doesn't work the moment, I suggest to disable the tests and check if the plugin will be compatible again soonish. For the percolate things: I didn't check it in detail, but if these are not supported anymore, we should remove it. \n. @im-denisenko For removing the percolate functions I opened a separate issue: https://github.com/ruflin/Elastica/issues/883\n. @kzwang Do you plan any updates to the elasticsearch image plugin to make it compatible with ES 1.6.0?\n. @im-denisenko I was thinking about a new category for \"plugin tests\". Like this we know when something breaks if it is internal or plugin related. What do you think? The main problem is how \"not\" to mix again functional tests and unit tests. I would be mainly for the functional plugin tests ...\n. Seems like the newest version of the attachment mapper (or es) introduces a flaky test in our test suite. So far I'm not sure what causes it. It happens after indexing a docx file and then searching it not always works. Perhaps @rmuir can help?\n. I merged this pull request for the next release. Issues were opened for the existing issues (see above).\n. There could be also unit tests for the plugin. So what you say is that these would stay in the unit test category and only the functional would be added to the new category. Sounds good to me.\n. @HarryWiseman Most interesting is probably the code where you add / edit the page. I'm curious if there is something that changes the host. Instead of commenting the code out above, can you post the full exception here? \n. @HarryWiseman Is the elasticsearch instance running on your local machine (localhost)?\n. Closing as no updated provided. Please reopen if needed.\n. What is the error you get? What is your config? Did you try add / remove http:// etc?. Merged, thx.\n. @pasdeloup Good point. We should change that. Can you open a pull request?\n. @pasdeloup I was having a second look at this. If you want not to overwrite the index, you have to use \\Elastica\\Client->addDocuments(). If you use addDocuments() on and index or even a type, it assumes you specifically want to add all documents to this index (which I think makes sense). addDocuments on Index and Type are only proxy functions.\nI will close this Issue as I don't think we should change this behaviour.\n. Merged, thanks. I would be not surprised if soonish query_cache is also supported for other search_types the way the doc is written. Lets see :-)\n. @JanJakes Just for my own feedback: Was there any issue in setting up the project to run the tests?\n. @JanJakes Thanks for the feedback. No setup (except boot2docker) is the beauty of it ;-) You mean I should emphasize that there is REALLY no other setup needed?\n. Not yet. Probably the CONTIRUBTING pages needs a tl;dr\n. It is quite strange that it didn't build, because the settings is actually enabled?!?\nTo create the coverage files locally is actually quite easy if you have boot2docker installed. Just run the command:\nmake run RUN=\"make phpunit\"\nThe first time will take some time to fetch the docker images. This will produce all three coverage files in build/coverage/. I will try to get you some more data tomorrow.\n. @yamilrevilla Sorry for the late answer. Both of these queries also heavily depend on the documents you put in. Can you create a gist that makes the above reproducable? Means it also adds documents and the shows what your expected outcome is?\n. Closing as no updates provided. Please reopen if needed.\n. @webdevsHub @im-denisenko I like the suggestion with the Latest.\n. I would not \"switch\" but also support it. The way I understand multi curl is that it allows to add multiple requests which are then handled asynchronously. This means multiple single \"requests\" could be sent even to different hosts and waiting for the responses would be done by curl_multi. This would bring an improvement in speed as multiple queries at once could be fired off. What kind of magic curl_multi does in the background I also don't know. Probably we should find out :-)\n. This would get obsolete with https://github.com/ruflin/Elastica/issues/944\n. Thx, merged.\n. An alternative suggestion. Percolate has two steps:\n- Register the query\n- Match documents\nIt could make sense to separate the two. The query is stored as document on top of an index. So it makes sense to haven index for the \"Percolator\" object. The percolate function itself is the same as a query or search.\nFor me the Search object should be the single point of access for all \"searchs\" in the future. As Percolate is very similar, perhaps we should add it to the Search object instead of creating a new one.\nSo what we would end up with would be: \n- Keep Percolator object but only to the registration of a query part\n- Move percolate queries to the Search objects\n. The two functions we are talking about are matchDoc and matchExistingDoc. The use a completely different path but don't have any \"real\" complexity. I see it more from a conceptual point where I would look for these too functions. I would probably search for matchDoc in the Search object.\nProbably the better option is to go with the Percolate object you suggested above and then either use a proxy inside search or go with traits. As so far with most of the time used proxy methods, I would suggest to use this.\n. I like the Latest as it always refers to the dependency in the README file. Hopefully the ES API does not change every time. This could even be mentioned in the doc block of Latest.\n. I would merged this pull request, if there are no objections.\n. That Latest references to the version mentioned in the README.md file. Like this it is always clear which one is meant as the README is also versioned and it is not confused with the latest version of elasticsearch.\n. See my comment in the code. I would leave out the comment that has to be changed every time.\n. Merged. Thx.\n. @webdevsHub If it is in 1.9 also the php-cs-fixer dependencies should be updated: https://github.com/ruflin/Elastica/blob/master/Dockerfile#L40\n. Yes, the image has to be rebuilt. The problem is, that by default it takes the remote image. As soon as we merge the pull request, it will build the new image. In the docker compose file a line is commented out. If you switch the comment, it will build it locally.\nI suggest you push it here and we merge it. There is nothing major that can break ;-)\n. Merged. Thx.\n. @webdevsHub Here you can see that it just created the newest build for the latest push: https://registry.hub.docker.com/u/ruflin/elasticsearch-elastica/builds_history/205891/\n. Merged. Thx.\n. I really have to figure out what the wordx test fails quite often.\n. There is no build available yet, but I hope that the first beta will be out very soon. I suggest to start as soon as the first build is available on the docker registry: https://registry.hub.docker.com/_/elasticsearch/ Alternatively we could create a docker build ourself.\n. :+1: We should get a build with it ASAP. Does anyone have time?\n. :+1: \n. @michaelfeinbier Good to hear. @im-denisenko is currently working on this branch here to implement the necessary changes: https://github.com/ruflin/Elastica/tree/elasticsearch-2.0 As you seen in the build (or you don't see it because it is green but actually isn't) a lot of things are broken in 2.0: https://travis-ci.org/ruflin/Elastica/builds/80773741\nYes we need a 2.0beta2 container and we need to refactor the code to work with 2.0. Best is you pull the elasticsearch-2.0 branch and start to open pull requests on this branch.\n. I now moved the CI build on travis to docker-compose which allowed me to remove ansible and vagrant files. The builds for ES2.0 look promising. \n. To track the changes I opened an issue here: https://github.com/ruflin/Elastica/issues/946\n. 3.0.0-beat1 was released with es 2.0 support\n. @webdevsHub @im-denisenko I suggest to have the docker environment as default for all make commands. This will simplify the setup even further and engineers will automatically use the docker setup. What do you think?\n. I currently still use vagrant to test if the ansible scripts work as expected as these are still used for travis. What I would like to do for travis is to switch to the container based architecture, which means removing sudo. Our main usage of sudo is here: https://github.com/ruflin/Elastica/blob/master/ansible/provision.sh#L5 So the question is if this could be replaced with the way travis installs the dependencies: http://docs.travis-ci.com/user/apt/ If we get this working, we don't the vagrant part anymore.\nThe best case would be if we could directly use our docker-compose setup. I still hope one of the CI/CD platforms is going to support this soon (@travis-ci @codeship ... ;-) ).\n. @im-denisenko I further worked on this. It is finally working also on remote machines with the Snapshots. I tried it on Google Cloud Engine. It still needs some cleanup and documentation needs to be added. If you have some time, have a first look at it to have a second thought on it.\n. @im-denisenko I merged it myself as this does not change any of the library functionality itself. I will add more documentation later.\n. @im-denisenko About the sudo and containers: Let me know when you have an update. I know quite a bit about the containers but I'm not at all an expert with ansible :-)\n. @nicolassing Any updates here? I plan to do a release today and would like to include this. Make sure merge master as quite a few changes went into master.\n. Thx, I will have a look.\n. @nicolassing After fighting a  little bit with ansible I got it running here: https://github.com/ruflin/Elastica/pull/914 I had to move the files from the data to the config/scripts directory as elasticsearch loads the files from there.\n. I merged my pull request with the changes. Thanks for the contribution.\n. You can directly jump to docker ;-)\n. We should add this as a function to the object. Can you open a pull request?\nUntil it is added, you should be able to use the Settings::get() function to retrieve the full data array and get the creation_date from it.\n. :+1: \n. @mkoula Any update here?\n. In general this looks good to me. It would be good to have 1-2 more functional tests. This would also discover in case the API changes in the future.\n. @torinaki I'm happy to merge the pull request if you adjust the coding styles above so https://github.com/FriendsOfSymfony/FOSElasticaBundle/issues/916 can be pushed forward.\n. @torinaki I made the adjustments here and merged it: https://github.com/ruflin/Elastica/commit/f64e8ae45de2467d99b223f165e6780d0cd8bb36 It would be nice if you could add some more integration tests later.\n. :+1: \n. @trueinviso What is the plugin you are talking about? Elastica is the client for elasticsearch and doesn't generate SQL queries. \n. Just adding the link to the repo in case someone is looking for it: https://github.com/parisholley/wordpress-fantastic-elasticsearch\nIn case there is an Elastica issue, let me know.\n. @Jmoati Thanks for the update. I merged it anyways as the errors are related to an other problem which is already fixed but not merged yet.\n. Merged, thx. We should get this probably as one of our build commands as typos are very common.\n. Closing as ansible files were removed.\n. @jippi Glad you found it :-) I assume this is a feature that will be used more in the future. Perhaps it still make sense to add a proxy function?\n. @jippi I reopened the issue. Do you have some time to open a pull request with it?\n. :+1: \n. @im-denisenko @ewgRa Looks good to me.\n@ewgRa Adding tests is almost always a good thing :-)\n. Looks like the next Elastica version will be 2.3.0 because of the BC changes. We should get this out of the door as soon as possible and mention the changes. @ewgRa did a good job in the pull request explaining it.\n. @ewgRa @im-denisenko There as an issue with the anonymous filters: https://github.com/ruflin/Elastica/commit/5a08b5f66b76f2f91ecba6213a7a6b9c9225326d I think it is fixed now. The main issue is actually that even though some tests fail on travis, it still reports green. I have to look into this.\n. @ewgRa It looks good now. I just checked the build and this pull request was the first time it was broken. But with the commit above it is fixed.\n. @stof Thanks for bringing up this discussion.\nA few notes/thoughts here:\n- The good news is that we marked this change as BC break. The bad news is that there are very few people like @stof that read code changes and on top of it even realise the consequences. The part I'm most worried about about is if it will have any consequences to the usage of the FOSElasticaBundle. @stof @XWB can probably help here.\n- We should try to actively inform people about this change. I suggest to create more \"explicit\" release notes explaining the consequences. @ewgRa Can you help here?\n- For an implementation of __clone I suggest we wait until a specific problem with a use case pops up. As always, software is used in many ways and best is to implement by solving a problem. Then we can also check if we reached the goal.\n- Changes on one query should not change an other \"independent\" query as we don't work with singletons. Of course as soon the same object is passed to multiple queries, changes will have affect on all queries, which I think is also partially intented. The question is if this the affect and consequences are understood. Lets see if the topic \"cloning\" will pop up here.\n. @stof Yep. If we are strict with semver ofr every BC break we must increase the full version. I normally sneak smaller BC breaks also into the MINOR releases. I think we should keep 3.0 for the changes to elasticsearch 2.0.\n. @ewgRa Don't worry, most of us are not native english writers. Let me know in case you have a draft and I can take a look at it. Otherwise just drop me a line and will check if I can do it.\n. @ewgRa That is exactly what we needed. That is where we can point people to in case questions pop up. I revised the article and published it here on Elastica.io: http://elastica.io/2015/09/22/elastica-2-dot-3-0-broken-backward-compatibility-explanation/\nIt is linked in the release notes so it is easy to find. @ewgRa Thanks a lot and enjoy your vacations.\n. The \"shorter\" version would be to leave out .PHONY for most commands where no file / folder exists, which is the case for about 95%. This is more a failure safe option. \n. Merged, thanks.\n. The changes look good. See my comments above. Can you also update the CHANGELOG.md file? \nI like that it seems to simplify the script part once again :+1: \n. @nicolassing Any updates here? Would love to get this into master soon.\n. There were quite a few discussions on PSR-7 in this pull request here: https://github.com/ruflin/Elastica/pull/845\nIt is probably time to revise this again. I'm not fully up-to-date about PSR-7. Perhaps have a look at the discussion and let us know what your thoughts are.\n. @jeskew Definitively open for a PR.\n. Merged. Thx.\n. Did you check if the hosts are reachable for example through curl?\n. Just some assumptions / ideas:\n- I'm not sure if the ClientBuilder actually tests the connection or only prepares everything. Did you also try to make some requests?\n- Second is that perhaps Elastica complains already when the first host is down. I have to check this. \n@frangeris Are you able to \"curl\" all three hosts from the machine the client runs? \n. @frangeris I assume that is the case for all 3? Which version of Elastica are you using?\n. Closing as no updates were provided. Please reopen in case the issue still exists.\n. @XWB Codecov fails because it is below 60%. They have a bug in the PHP coverage reporting, so it is not consistent. \nThe reason I would like to keep PHP 5.3 in allow failures is to make it obvious, that yes it still works but we could get rid of it at any time. There are already some hacks for PHP 5.3 that we need to cleanup earlier or later.\n. The title is a little bit wrong as it is more about \"Not allow\" PHP 7 failures ;-)\n. Merged anyways :-)\n. @bartclarkson This looks good. What I would probably add:\n- Directly use ScanAndScroll Implementation: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/ScanAndScroll.php\n- The $documents[] part could be made more lightweight in case you only want to delete docs from one type by using $type->deleteDocuments. Also the $doc->getData() can be left out I think. Like this we would have very lightweight docs with just the $id.\nShould we put up a test that shows this or put it on Elastica.io? What do you recommend?\n. @bartclarkson Ok I see, we could even at it as a function of Elastica. Good idea. We could replace the deleteByQuery function with the above code. As deleteByQuery is removed in 2.0 anyways, we could directly do that. @im-denisenko What do you think as you are currently working on 2.0?\n. I check with the devs what the current status is.\n. It's going to be a Plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/plugins-delete-by-query.html\n. @MrHash Thanks for pointing to the project, I wasn't aware of it. So far the goal of Elastica was to \"only\" provide base functionality, additional things went into Util. The question I would like to open is if we should integrate something like that to make elastica more powerful or if it is better to keep it separate.\nMy general approach is most of the time to have smaller modules which can also be used independent. The good thing is if someone is using elastica-manager is, he also gets Elastica itself. The same is true for the fos-bundle. I would like to invite also @darklow to this conversation.\n. @bartclarkson I agree with your statement. One topic that pops up frequently is that people even confuse Elastica with projects using Elastic. It could be helpful to more obviously linke these projects in the README or on Elastica.io. So if someone is looking for more then a client he finds these options also starting from Elastica.\nAbout the plugins: There are already quite a few plugins supported now (like attachment-mapper). I think Elastica should support at least the core plugins which are provided by elasticsearch itself. For third party plugins it would be good to have a general interface in case this is possible. DeleteByQuery seems for me quite a no brainer to have inside as these seems to be  a core functionality.\n. As an update here: Elastica 3.0.0 still supports deleteByQuery with the same implementation but requires the plugin now. \nI'm not sure what we should do about the docs updates. In case some has a solution or a suggestion, please directly open an issue or PR for it. I will close this issue as it was initially related to deleteByQuery. Please reopen if needed.\n. @im-denisenko Let me know when I should have a closer look.I think there is no travis build because the pull request is not to master.\n. @im-denisenko I merged it into the branch. Good idea to have an open elasticsearch-2.0 branch so everyone can contribute.\n. @yvann Would you suggest to have it enabled as default? Best would to have config option for the connection which is probably called \"compression\". Check this line here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L34\n. BTW: Can you also update the CHANGELOG.md?\n. Thx, merged.\n. Why not :-) But it would be 2.3.0 because of https://github.com/ruflin/Elastica/pull/916\n. @lenybernard Thanks for bringing this up.\n@yvann Can you have a look at this. I also just realised that the $compress config is at the wrong place. It should be noted as part of the $connections array here: https://github.com/yvann/Elastica/blob/11ec208cec201c8297570c2cdfe83608f0c713fb/lib/Elastica/Client.php#L34 If you want to set it as a global option, it must be fetched from the client. I suggest to add some tests to verify this.\n. @yvann Looks good. Can you add a brief test to check if it works as expected, at least the getters and setters? The real implementation is probably hard to test.\n. @yvann I merged it in and will add some tests myself as I plan to do a release :-)\n. @im-denisenko FYI\n. @im-denisenko Sounds good. I'm quite sure because I wanted that all build run also if one fails. Perhaps there is an other solution to have this result without using -.\n. @oldskool PHPunit keeps running, but as we run phpunit multiple time the Makefile stops executing commands after the first error.\n. @yvann Interesting. Can you please add at least one integration test with compression enabled so we can make sure this works as expected?\n. @yvann Any updates here?\n. @yvann I would love to get this into master. Any updates here?\n. @yvann :+1:  :-D\n. Merged, thx\n. @ewgRa @giorrrgio I think the simplest to debug and check the problem is to add here a small integration test: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/TermTest.php Like this we also see then directly what the issue is and know when its fixed. @giorrrgio Would you be able to open a pull request with this integration test?\n. @giorrrgio See my comment on the pull request as this is more a unit test. I think the tricky part here is to get the encoding and the communication right, so we should include this in the test.\n. @giorrrgio No problem, glad you found the problem. I still merged the pull request as it is always good to have an additional test inside.\n. @ewgRa I got a notification for a comment but can't see a comment here?!?\n. @ewgRa I merged it as you are right that it only tests the current state. \nWhen I see the code my initial gut feeling would tell me, that it would not be equal. That is why I think some people will stumble over this in the future. But lets wait until we have the first complain.\n. @ewgRa My question for the first one: I'm not even sure what the use case of cloning would be if all contained objects are the same anyways? \n. :+1: \n. @ewgRa Looks good. Can you update the CHANGELOG.md?\n. Merged, thx.\n. @ewgRa In case elasticsearch does not allow the mix, I suggest we also prevent it in Elastica and give the user an exception.\n. @ewgRa No I would not split the class, but throw an error before elasticsearch has to do it. This is more convenience for the person that implements it. Instead of getting a response exception and having to figure out what is going on, it is already thrown before the request is sent and is very specific.\n. @giorrrgio I would recommend to do an integration/functional test as the unit test will only check if Elastic itself works as expected but not if the communication with elasticsearch works. Here you can find some example on how to do the mapping: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Type/MappingTest.php\n. @im-denisenko I think this could also going to be quite useful for ES 2.0\n. @ewgRa The other option to run all tests locally without needing the setup is using the docker-compose setup. The only thing you need to do is run make tests and have docker installed.\n. @ewgRa The problem with just running phpunit is that a lot of things can be different on each machine and some issues can be hard to reproduce. If everyone is running make tests we all have the exact same environment.\n. @ewgRa Looks good. Can you adjust the variable name?\n. Merged, thx.\n. I like the addition, see my input above.\n. @JustinHook Any updates here?\n. @JustinHook Looks good. Can you also update the CHANGELOG.md? Afterwards I think we can merge it.\n. Thanks. Waiting for the build to get green :-)\n. Merged. Thx.\n. @oldskool See my comment in the issue concerning config. I would suggest instead of making it available by default we have a config variable. Can you also add a small test to confirm this works as expected?\n. Good question. It will be used in Result object, but I don't want to have there all the Config options. A more nasty but simpler way could be to set in the client and the assign it to some global variables which are read in JSON.\nAny better ideas?\n. LGTM. See my comment above. Please also update the CHANGELOG.md file.\n. @oldskool You would have to trigger the exception case somehow. I will merge it anyways for the moment as it will not break anything as long as it is not enabled :-)\n. @oldskool As was actually planning that the next release is 3.0 with elasticsearch 2.0 support, but will check what I can do as quite a few other things were sneaking in in the meantime.\n. @oldskool I released now 3.0.0-beta1 with this change. Is it for you already possible to upgrade to the newest version?\n. @oldskool :-( The problem for me is that it is quite an effort to keep multiple release branches and make sure all work as expected. That is why I took it directly into 3.0\n. @markeilander It should be quite easy to add it to: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Aggregation/DateHistogram.php Feel free to open a pull request.\nAs long as there is no proxy function, you can use it by calling setParam and passing the arguments directly.\n. @markeilander I think there went something wrong in your changes. See my comment in the pull request.\n. @markeilander I'm not sure if this change is as you intended it. You rewrote a test file and are overwriting the old test file with a specific implementation as far as I can see. I don't think that was your intention.\n. @markeilander There is no automatic code generation. It looks like you just changed the wrong file :-) See here: https://github.com/ruflin/Elastica/pull/943/files You added your new functions to test/lib/Elastica/Test/Aggregation/DateHistogramTest.php instead of lib/Elastica/lib/Elastica/Aggregation/DateHistogram.php\n. @xkidro Good to hear. First I was thinking about introducing this with the es 2.0, but there are still quite a few open changes, so perhaps I will even prioritise this one higher. If you have some to help with this migration, that would be cool.\n. @CrAzE124 My plan to implement this was as following, but because of 2.0 I didn't have the time yet to try it out.\n- Elastica\\Client should extend php-elasticsearch::Client\n- At first, the only method that uses php-elasticsearch::Client is Elastica\\Client::request(...). \nThe above would mean, php-elasticsearch has to be added to the composer file and the request method has to be adjusted so that it calls the php-elasticsearch client. At first, it doesn't even have to extend Elastica\\Client.\nThe best help would be to try this out an open a pull request with these changes so we can discuss it on actual code.\n. @merk This is definitively still on the radar. Unfortunately it seems like @CrAzE124 and @ewgRa both didn't find the time yet to progress on this one. Let me see if I find a way to push this change in faster.\nInteresting to hear about FOSEB. Is it something that changed in Elastica or on the elasticsearch side? Would be interesting to hear more.\n. @merk It would be great if we could discuss the above points in an audio / video chat to go into more details. Let me know if you would be interested in having this direct conversation. I just sent you an email with my email :-) In case someone else would like to join the conversation, drop a message here.\n. @ewgRa In case we have a chat, I will for sure put a summary / conclusion here.\n. @merk :+1: \n. @erichard That is the definitively still on the to do list. The main thing that is missing for the move is the time to do it :-) We had a few PR's in the past but they were never fully completed. So if someone else has time to put some brain power into how to do this best, that would be really helpful. . We now have Elastica depending on the official client: https://github.com/ruflin/Elastica/pull/1275 It is only a first step to make the functionality available but this will now allow us to iterate on top of it.. @akalongman As @ewgRa the foundation is there. Now the questions are which are the big next steps and how to get there in the least breaking way. \nOne thing I would really like to see is that long term the Connection and Transport package in Elastic compeltely disappear and it fully relies on the official client. \n@akalongman If you have time to work on it and think more about it I'm more then happy to discuss ideas and push this forward with you.. @liilo You can do this already now by using the setParam method directly (see https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/GeoBoundingBox.php#L42). I agree we should have an option to also pass top_right and bottom_left. Should we introduce a function setRawCoordinates? I would like to keep the change backward compatible if possible.\n. @snider Thanks for the contribution. I like the change as it adds some flexibility and we can keep it BC compatible. I don't think it fully replaces a potential setRawCoordinates function but it allows the options that were initially requested.\n@liilo Feel free to open a PR to also add setRawCoordinates.\n. @Lumbendil Thanks. That is what you get using the Union merge :-)\n. @Lumbendil Good question. Probably the easiest to start is get a clone from the elasticsearch-2.0 branch locally, install docker and docker-compose and run make tests. This will output quite a few failing tests. Pick one that you think is easy to fix. \nTake for example the Fuzzy queries which are failing: https://travis-ci.org/ruflin/Elastica/jobs/87636268 Haven't looked into it by I assume the syntax changed somehow.\n. Small update here: I now went through all the \"broken\" tests. The small ones I fixed directly, all the others I marked as skipped and tryed to add some details. Now it should be easier for everyone to pick a test and try to figure out what is broken: https://travis-ci.org/ruflin/Elastica/jobs/89254674\nIt would be nice if someone could tackle the delete by query issues. I will look into Status and potential remove it completely.\n. @ewgRa Agree. We should install the plugin as part of the setup and have a good exception in case it is no installed. Should also be part of the code docs.\nI'm actually not sure if something like attachment is used and an the plugin is not installed. Do we get a reasonable exception?\n@ewgRa Are you going to proceed here?\n. @ewgRa Let me have a brief look if I can get the plugin to install. Perhaps faster as I did it before.\n. Ok, thanks.\n. @Lumbendil Not from my point of view. But I want that at least some people test it to see if everything works as expected. I would probably give it 1-2 weeks. Your thoughts?\n. @Floyd25 Yes, Elastica 3.0.0 is compatible with elasticsearch 2.0. I highly recommend to directly start with 2.0. For your question on stability: It was released yesterday. Also check the comment above from @Lumbendil :-)\n. @Lumbendil There are too many \"shouldn't\" and \"might\" in the sentence. I basically agree with you but I'm always surprise how many actually directly use master for their apps :-)\n. @Lumbendil Lets give it at least a few days for my own sanity :-) Happy to then jump to 3.0.0 directly. The good news, no new issues popped up since yesterday. \n. @Lumbendil I do that whenever possible, in case just the method change. Make sure you don't use any deprecated methods as these I'm willing to remove in Minor versions. It was a bad habit to keep them around for too long in recent release and was a bit of an issue recently. \nIn case there are some heavy BC breaks, I make sure I let people now. @ewgRa is our champion here in making things easy for people to migrate to the next version.\nYou should be fine with ~3.0. I just hope you never going to refer to my post here in case your app breaks ;-)\n. Closing this issue as Elastica 3.0.0-beta1 was released\n. Merged, thx.\n. @CedCannes Good point. I forgot about this one. @markeilander Can you remove the duplicate or use it as proxy? Because I like the \"short\" version naming.\n. As a reference: http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\n. As discussed on Gitter: Lets do the Guzzle 6 implementation first and lets check what is needed on top.\n. @jeskew Any updates here?\n.  @jeskew did some cleanup and improvements to get the foundation for this. But not sure if anyone continued the actual implementation. @jeskew ?\n. Implemented in https://github.com/ruflin/Elastica/pull/1056 This will be part of the next release.\n. Merged.Thx.\n. @gbourgeat Thanks. Can you add a small tests?\n. Not sure what you mean by inspired. I merged it anyways as it should not break any existing functionality.\n. Merged. Thx\n. Merged, thx.\n. Very cool, thanks. Did you go through all of it manually or did you have a tool that helped?\n. Currently this is not directly supported by Elastica. It was requested several times in the past but nobody implemented it so far. It shouldn't be too hard to implement it on top of ResultSet or Result. It would required to create document objects based on the retrieved values.\n. :+1: Let me know if you need some help.\n. - As far as I know, version is only returned if version is set to true in the request. So you need to build in a check\n- DocAsUpsert means the values in the document are used to \"partially\" update a document. Assuming you get \"all\" data as a response, you don't need this. There are some additional cases with script, but I think this would complicate the code too much (keep it simple and cover 80% of the use cases).\n- You should also add index and type to the document\nThe line $version && $doc->setVersion($version); is quite hard to read. I would split it up to an if clause.\nGood point about the fields. I think the creation of the documents should be triggered by a separate function as not all cases will support this. In this case if no fields exist an exception can be thrown. Which cases it work should be part of the function doc header. Again, lets make baby step. Have a function that works in the standard cases but throw an exception if not all data we need exists.\nI think important will be to add some integration tests to see if it works as expected.\n. - About inline and not: You are right, this is very subject. Main reason is that so far it is never used (as far as I know) in the library.\n- For every _hit in results you have index and type. See also here: https://www.elastic.co/guide/en/elasticsearch/reference/1.7/_the_search_api.html\n- I was thinking of ResultSet->getDocuments() and/or Result->getDocument(). The outcome would be the same, but the function would be more where it's needed (I assume). So ->getDocuments() would iterate over results and use the getDocument() function.\n. @yehosef Any updates here?\n. @yehosef Do you have any plans to continue work on it?\n. For the Mapping, there is currently not proxy function for _timestamp. But using Mapping->setParam you can set all params by just passing an array to it: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Type/Mapping.php\nFor a later reference I put here also the es docs link: https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-timestamp-field.html\nIt would be nice to have a proxy function for this in Elastica. So feel free to also open a pull request with it.\nIn case the above doesn't work as expected, let me know.\n. Closing as https://github.com/ruflin/Elastica/pull/965 was merged.\n. @savdeep Thanks. Looks good to me. Do you plan to add some tests?\nI think a valid point you brought up in the other pull request is that it is a little bit unexpected that setMapping directly sends the mapping. But lets keep that for the moment.\n. For reference, here is the discussion in the old PR: https://github.com/ruflin/Elastica/pull/965\n@ewgRa FYI\n. After having a second look, I think I now understand the concern of @ewgRa . The function belongs in Mapping and not type so we always work with objects. @savdeep I'm sorry as you were right with your first implementation. I think the main concern there was if we need the enabled and store methods (@ewgRa)? \n@savdeep Can you update your first PR again, remove the code in Type and the two methods above? Sorry again for the extra rounds.\n. @ewgRa We are on the same page here. That is why I mentioned above remove the code in Type. I would probably not directly got with the TimestampMappingField object as I think it is a little bit overkill, having ->setTimestamp should be enough.\n@ewgRa Thanks for insisting on this one as otherwise I would not have spotted this.\n. @ewgRa Yep, the main thing I worry about is maintenance. I'm currently facing the challenge with the changes to es 2.0 :-)\n. @ewgRa I now added the plugin in the commits above. Clean up your environment by running docker-compose stop and docker-compose rm. Now if you run again make tests you should have the new setup.\nSome of the deleteByQuery tests now seem to work again, others return wrong results: https://travis-ci.org/ruflin/Elastica/jobs/90520618#L1660\nHave a look and let me know. \n. @ewgRa I would go step by step. Lets see if we can get the existing queries and tests running and then check if we can throw proper exceptions. I didn't check the delete-by-query plugin in detail, but I would expect your second line to work.\nAbout the tests I would suggest to add the same flag as we do for other plugins. So tests are only run, when plugin is installed.\n. @ewgRa #985 is now merged.\n. Merged. Thanks\n. @JunniH There are quite a lot of changes in 2.0, now exception format is only one. Waiting for 2.0 branch to be merged is a good idea. Help to get it in faster is always welcome.\n. Closing this as 3.0.0-beta1 was released.\n. @marguse This issue is already fixed. As you can see here, under PHP 7 you must use BoolQuery: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Bool.php#L7 Same for all other conflicting classes.\nClosing this issue. Please reopen if this is still an issue.\n. Can you update the Changelog?\n. Thanks. Somehow the downloads for the build are currently broken / down. Will wait until it builds again. Is this a recent change or something that was always broken?\n. Good to know. Merged. Thx.\n. @rarothedude @legendik Could these difference be related to elasticsearch versions? Which versions are you using?. @rarothedude Even though your elasticsearch version is pretty old and is not supported by Elastica 5.0, it seems you are right. The part that bugs me is that our tests do not seem to catch the error.\nCould you open a PR with the change and also add a test that currently fails and afterwards works? That would be great.. There are still some open issue with 2.0 For more details see here: https://github.com/ruflin/Elastica/issues/946 Help to get the last issues fixes is always welcome.\n. @Lakhman Thanks for linking the issue. I also commented there.\n. Please be aware that one more potential is pushed here: https://github.com/ruflin/Elastica/pull/1016 Closing this issue as fix was already merged. Please reopen if needed.\n. Can you update the CHANGELOG.md file?\n. Just put it here under Unrelease: https://github.com/ruflin/Elastica/blob/master/CHANGELOG.md Best is to add it to this PR.\n. @Raffaello I finally merged this. Sorry for the delay, somehow I was distracted by the 3.0.0 release :-)\n. Closing as already merged.\n. I'm actually thinking about introducing a more complex object for the Error as with 2.0 we can now get much more information out of it. It is good to have now the current version tested so any changes will be better documented.\n. Merged, thx.\n. @ewgRa The test failure is related to the Bool usage. I just realised we should probably mark https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/Bool.php deprecated (and the other which are not compatible with PHP 7)\n. LGTM now. Yes, the build process checking is somehow broken. I still have to fix that.\nSomehow the attachment mapper tests seem to fail now. Not sure why ...\n. @Seldaek Thanks. Failing tests don't seem to be related to this. I'm surprised this didn't pop up earlier :-)\n. @dbhattacharjee I would recommend to increase the memory size you assigned to PHP. As you send large batchs of documents it seems like 134MB is quite small. Any chance to change this in the php.ini?\n. Not sure what you mean by subcalls, but perhaps scan and scroll could help? https://www.elastic.co/guide/en/elasticsearch/guide/current/scan-scroll.html\nCan you elaborate on what exactly the issue is with making multiple calls to es?\n. @dbhattacharjee I would highly recommend to make some changes at the application level. Elastica does not provide any magic around splitting up requests etc. It mainly maps the elasticsearch API. I assume json_decode puts all data into memory for decoding. Based on the assumption that your data is going to grow over time, you will hit the memory limit again and again.\nFor the sorting: The bigger your data set gets, the more expensive the sorting in case you want to return all data. Have a look at scroll: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html\nI have the feeling that perhaps your problem could be handled in a different way. Retrieving large data sets at once from a search / storage system normally has its limitations. Can you describe a little bit the background of the application so we better understand what you are trying to do?\n. The question here is probably why they need the data in a csv file? Is it so they can go through the data themself in excel for visualisations? Here perhaps using Kibana on top of elasticsearch could help and give the customer direct access.\nAn alternative for the csv export could be to use Logstas csv plugin instead of feeding all the data through php: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-csv.html\n. I'm closing this issue as there were no updates recently. Please reopen if needed.\n. @fritzdacat Did you find a solution?\n. @mablae Best is to directly have the conversation here: https://github.com/ruflin/Elastica/issues/948\n. @ewgRa I merged this one as I want to move forward here as fast as possible. We can still take the inputs in in a next PR.\n. @ewgRa BTW: Nice work. Thanks.\n. Merged. Thx.\n. LGTM. Waiting for travis to complete.\n. Merged. Thx.\n. @CrAzE124 Very interesting. I wasn't even thinking of what you just did here but this is a very interesting approach. It makes it possible to first test if the integration works as expected and move in a second step.\nIn the long term my idea is that elasticsearch-php replaces to full transport and connection layer of Elastica. This is the part where the two libraries have a lot of code in common and improvements always have to be made on both sides. So elasticsearch-php is like the transport and connection library of Elastica :-)\n. The question is how much more work would it be to go the full way and extend Elastica\\Client by elasticsearch-php client and remove all Transport and connections on the Elastica side? With moving to elasticsearch 2.0 we will have lots of BC breaks, so it would also be a good timing to do the above. The reason I like to go the full way directly is because it will also remove a large portion of code on our side. The main method that would have to be changed is Elastica\\Client::request(...): https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L615 Inside it should do what you did in the change above. If this is the case, we could probably even change it without major BC breaks if someone doesn't have very special transport and connection configs.\nCurrently it sounds quite simple but I'm sure I forgot a lot of things. I'm happy to also jump on a call to have direct conversation which could be worth for the above case.\n. @CrAzE124 Any updates here. One thing that came to my mind which probably is going to be a challenge: Map the configuration options from Elastica\\Client to elasticsearch-php transport.\n. :+1: \n. For BC: If possible, but not required. I'm happy to get rid of the Connection and Transport layer as this would only be \"half\" a BC break, as I assume most of the people are not accessing it directly. The question here is more about the configuration options if we keep it or not.\nFor Elastica version: 3.0.*. Based on how fast we get this in we could even get it in for version 3 as we are still in beta, otherwise I would also be willing to go to 3.1 or even 4.0 quite soon.\n. @CrAzE124 Did you make any progress here?\n. @ewgRa @CrAzE124 Reviewing old PR's I was stumbling over this one. By now we have the official elasticsearch client for queries. I still really like this idea to also have it as an adapter. As soon as we have it as an adapter and it works well, it could also be enabled as default adapter in the long run. Anyone interested to push this one forward?. @ewgRa Fully agree. The end result will be what you described above. The part I'm hoping with first going with the adapter is that it allows us to learn on how it works and it splits up the work in smaller and more digestable pieces. If you want to go all in, also good for me :-D. @ewgRa Let me know when this is ready to be merged.\n. Thanks. Sorry for fixing some parts twice.\n. @Nihaux The indicies query is not implemented yet. You can always use not implemented queries by adding your raw array (see here for more details): http://elastica.io/example/raw-array-query.html\nOr the other method is opening a PR with the query inside. Have a look on how the existing queries are implemented.\n. @jdc18 18 out of about 900 tests still fail. Here are all listed: https://travis-ci.org/ruflin/Elastica/jobs/92800144#L1668. Most of the queries should work as expected by now. I would not recommend the branch for production as it is a development branch but running it with elasticsearch 2.0 and reporting problems (or success) is also of big help. Otherwise the fastest way to get it releaed and out is picking up one of the failing tests and opening a PR to fix it.\n. @jdc18 After a fixing spree yesterday night, only two are left. As soon as we get these fixed, I plan to do a beta1 release.\n. Closing this issue as Elastica 3.0.0-beta1 is now out: http://elastica.io/2015/11/26/release-3-dot-0-0-beta1/\n. @ewgRa Lol, I just made the same fix a few minutes ago. I think the reason that it worked before is that ES < 2.0 made some attempts to find fields when they were not defined correctly which is not the case anymore in 2.0\n. As it didn't conflict with my changes, I still merged it. \n. @ewgRa No change on our side needed. Lots of other BC changes exist that are related to ES 2.0 and users need to know about it.\n. Closing as attachment mapper not compatible with elasticsearch 2.1\n. @fubuki Thanks for the contribution. Could you add 2 things?\n- Update the CHANGELOG.md file\n- Add some tests? Best some integration tests if possible to make sure it works as expected.\n. @ewgRa Thanks for bringing this up. I'm a little bit unsure where to put it, as it seems like a filter on the search result. At the same time, it calls a different API on line 429 which is a little bit unexpected. \n. I think what is clearly missing at the moment is the API call for _suggest. Could we extend the Suggest object to also make API calls? https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Suggest.php\n@ewgRa About your suggestion: I have to think this through in more details also related to all the features and API's that exist now. Search for me is like a \"general\" object to do search queries. Is _suggest also a search? I would argue yes, but I agree it should always us _search and not _suggest.\n. @topak27 Thanks for the contribution. Can you the following two things?\n- Update CHANGELOG.md\n- Add a small test to test your change?\n. @topak27 Thanks. Merged. Only saw now that you added tests and CHANGELOG.\n. @kukulich Thanks for bringing this up. We should add setFilter in our BoolQuery and mark Filtered Query as deprected. Any chance you could open a PR with that?\n. No docker experience shouldn't be the issue as it should \"just\" work but I see the problem that you can't use the Makefile.\nAt the same time, you can also run tests without the hole docker setup, but need to have elasticsearch running locally. Have a look at this lines: https://github.com/ruflin/Elastica/blob/master/Makefile#L50\n. Cool, thanks.\n. @kukulich Good point. Would it be sufficient to just make setFilter accept also AbstractQuery? What do you mean by \"move all filters\" to Elastica\\Query? Removing filters completely?\n. @kukulich Side note here: I think the points you are bringing up are the last major changes which are not properly done yet in Elastica 3.0.0. So I'm glad you got this discussion started.\n. @kukulich That looks like the cleanest way to go. Mentioning @ewgRa here as he probably also has an opinion here.\nA shortcut I was thinking of (in case we don't find the time to do the full change) could be to make AbstractFilter extend AbstractQuery and make setFilter() accept only AbstractQuery.\n. Which one has less \"features\"? Query or Filter? The reason I ask is to decide which one should extend which one. It seems like every filter can also be used as a query but a query could have additional features?\n. @ewgRa That means we should probably also do that in our code. \nI would have to check if the setCached methods we have in here are still supported: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/AbstractFilter.php\n. @ewgRa @kukulich +1 on the suggestion. Now we \"only\" need a PR :-)\n. @kukulich @ewgRa Does anyone of you have a chance to work on this?\n. :+1: \n. Can you just readd the changes?\n. @kukulich You asked about reverting the commits. Instead of reverting them I suggest you just take the changes that were removed and readd them. Like this no changes of existing commits have to be made and you are not blocked by me.\n. @awdng I still hope 3.0 :-)\n. @kukulich Any updates here?\n. @kukulich Thanks for the heads up. @ewgRa Do you have any time to work on this earlier?\nI'm not sure if I should push 3.0.0 without this ...\n. @ewgRa Very nice. I was thinking to do the 3.0.0 release today without the change and release 3.1.0 as soon as we have it. I think it is good to get more people on 3.0.0 in case there are some more bugs. Would that be ok for you?\n. @kukulich I readded the files and tests, but somehow the tests fail. See https://github.com/ruflin/Elastica/pull/1020/files#diff-80be7592e890c5e74f56b6a643b4c98eR94 for example. Do you know why?\n. @kukulich Good to hear. Thanks.\n. @rparsi I don't hope there is an error in the tests because currently the tests are green :-) Which version of Elastica are you using?\n. That is 3.2.1 today: https://github.com/ruflin/Elastica/releases\n. @JustinHook The main reason we had the previous option was that first all unit tests run (which is fasted) and then the integrationt tests etc. So it was very easy to spot which parts were failing. But there is an issue with the above as it sometimes reports green when it should be red.\nHow does this change the codecov accuracy?\n. The best person to ask why this difference exist is probably @stevepeak (see comment above).\nI would still prefer to have all three builds separate if somehow possible. Of course, having it green here and the build failed is not an option. Do you see an option to keep the three builds but have these requirements met?\nAbout the flacky test: Yes we should look into this why the test is flaky. Not sure if it is related to the update to ES 2.0.0 as before I think we finally got the tests stable.\n. @stevepeak That means sending on report or multiple should not matter, right?\n. @stevepeak I take your answer as: It should work and we should resend the reports now to see if it works. If not, I will mention you again. Ok?\n. @JustinHook Sorry for closing, clicked the wrong button ... Reopened it again.\n. @JustinHook I just restarted to the master travis build which should send a new report to codecov: https://travis-ci.org/ruflin/Elastica/builds/94437264\n. Stopped and started it again. I assume it is related to the issues travis had in the last 24h\n. @JustinHook Seems like travis is messing with me today. Just sent them a message again to have a look.\n. @JustinHook @travis-ci is going to have a look. Lets see what magic they will come up with.\n. @JustinHook Builds should now be green again.\n. @JustinHook Any updates here? \n. @JustinHook @stevepeak Thanks for looking into this one.\n. @JustinHook @stevepeak Thanks for all the discussions and insights. I haven't checked in detail if the above is still an issue but I think for combining coverage report fixes should be done on the codecov side.\n@JustinHook You mentioned earlier about PR's which are green but failed. Is this still happening. I hoped we have solved this with the EXIT_STATUS variable.\nI'm closing this PR. That doesn't mean we can't reopen the PR and I'm happy to continue the discussion.\n. @theDisco Which PHP version are you using?\n. @theDisco Very interesting. I found some more information here which could be related: http://stackoverflow.com/questions/19520487/json-bigint-as-string-removed-in-php-5-5\n. @theDisco Sorry, missed that one. Currently busy with something else but will have a closer look later. Perhaps it makes sense to add @oldskool to the conversation?\n. @theDisco Here a more detailed answer:\n1) We initially thought it is only depending on the PHP version. But as you proofed above it isn't. The php-jwt implementation looks promising. At the same time this error only appears, if you enable JSON_BIGINT_AS_STRING right? So if you enable it, I assume they know quite well what they are doing and should use the appropriate versions of php and plugins.\n2) I tried to figure out why we set it here to false, but couldn't find a reason. It would be awesome if you could provide a PR with a fix and test.\n3) I'm not 100% sure what you mean by \"config\" key? Feel free to open also directly a PR for the suggested change as quite often code says more then a thousand words.\nThanks a lot for the detailed reporting and also the suggested solutions. Sorry again about my brief answer in the beginning.\n. The main reason I don't like the suggestion for 1) above is that the user doesn't get what he configured. Elastica as a library should make sure not to do magic and the the developer gets what he configured. If he doesn't he should get an exception.\nFor 2) Thanks @oldskool for bringing that about. I remember I strongly suggested this change to have the default behaviour. What I'm asking myself now is what exactly goes wrong in 2, as this then should be unrelated to 1). It would also fail without JSON_BIGING_*?\n. About 3, I think the confusing part is that the current implementation uses the transport(connection) object to set the variable for response object. This works but is ugly as it has to be set multiple times and is confusing as we see. The problem is: What is the better solution? I'm quite oposed to set global variables. So the question is how do we get it best from the client to the response object (which doesn't no about the client ...).\n. @theDisco You are correct, especially with your last statement. Going with #944 will move the problem one layer up. I'm sure @polyfractal likes that :-D\n. @polyfractal Yep, fun problem. Until yesterday I thought JSON_BIGINT_AS_STRING  is \"solved\" by going with PHP 5.4 but @theDisco proofed me wrong :-( \n. @theDisco Just commented on it. What are you referencing to in composer? Master?\n. @theDisco There is no predefined schedule. The main issue / pr I would like to get in before tagging 3.0.0 is this one: https://github.com/ruflin/Elastica/issues/1001 Unfortunately there is no PR yet.\n. The other thing I'm thinking about is actually going with 3.0.0 to bring the adoption to discover more bugs. I think currently lots of user stick with the old version. \n. @theDisco Unfortunately it is much worse then people just using Facets. It's also about the PHP version and some people use even older ES versions like 0.90.0 ...\nI'm closing this issue as the PR was merged. Thanks again also for bringing up all the points and take the time to discuss it.\n. @ebernhardson LGTM. Can you update the CHANGELOG.md?\n. @ebernhardson Thanks. Merged. It would be nice to have a small test in an other PR.\n. @theDisco Thanks. Can you also update the CHANGELOG.md?\n. @theDisco Thanks for the contribution. We should definitively discuss if we should use JSON::parse($response, true) for the non JSON_BIG_INT conversion case. But I'm not sure if that will have any other side affects.\n. @theDisco Ugh :-( Surprising that nobody of us spotted that in the past. But that is great news.\n. @ewgRa Please directly merge it as soon as you feel comfortable with the change. I'm mostly on my mobile this week ...\n. Thanks @kukulich and @ewgRa for the great work.\n. Thx\n. @JustinHook Nice. Lets hope it works as expected :-)\n. Thx. Probably not 100% reliable but better then before\n. I remember there was a reason we used PUT, but I think it was related to one of the deprecated transports. So +1 on this change.\n. Closing as https://github.com/ruflin/Elastica/pull/1011 was merged.\n. @hakman LGTM. Can you update the CHANGELOG.md?\n. @hakman Thanks for the contribution.\n. @mfn Thanks for the reporting. I opened https://github.com/ruflin/Elastica/pull/1015 to fix it. Side note here: It is always possible to pass a bool other other params by using setParam directly instead of setSource.\n. @rdohms It is PHP 7 ready. The Bool classes are deprecated and BoolQuery should be used instead. See also here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Bool.php#L4 As long as the Bool class is not used, there shouldn't be any problems with PHP 7.\n. @rdohms Just saw also your issue here. Let us know in case we missed something here.\n. @zoglun Sorry to ask, but what is MW?\n. Closing this issue. Please reopen if there is still an issue.\n. Already version prior to 3.0.0 are compatible with PHP 7 and the classes above exist. The only thing you have to do is to make sure to replace all Bool classes with the appropriate new classes in MediaWiki. As far as I remember there are a few classes more which are not compatible and deprecated but have a correspondig class. So no need to wait for 3.0.0\n. @reedy :+1: \n. @zoglun no problem ;-) Happy new year\n. @nickshanks I already merge this to prepare for the 3.0 release. But please still have a look and comment on it.\n. @nickshanks I pushed and updated and left some comments. Is there a reason you comment on commits and not the PR changes? Just curious.\n. @JarJak Isn't it only an issue if elasticsearch 2.0 is used?\n. @JarJak Normally I didn't provide fixes for past releases as maintaining it gets much harder. What we could do in case this is a bigger issue is that I create a 2.3 branch out of the most recent 2.3 tag. Then you could open a PR with the fix against this branch based on which I can create a tag and add a release. What do you think?\n. @nickshanks Good reason :-)\n. @nickshanks Morning is my \"e-mail catch-up time\", so the timing was right :-)\n. @JarJak With \"bigger issue\" I was referring to you side. Means, in case it is a blocker. The release management of Elastica is very simple and always based on master. So there is currently no 2.3 branch. Like described before, I could create the branch if necessary.\n. I created the branch release-2.3 from the tag 2.3.1 here: https://github.com/ruflin/elastica/tree/release-2.3 Please open a PR with your requested changes agains this branch so I can merge it and afterwards tag 2.3.2\n. @JarJak This PR is already merged and pointed against master so a new one must be created (with the same changes). Can you please do that?\n. @merk Thanks a lot for pushing this forward. I quite like the idea of the builder and transformer. So the first two commits look quite good to me (didn't check them in detail).\nFor the transformers itself I'm not 100% sure if they should be part of the Elastica repository or for example in ElasticaTransformers. Like this Elastica would provide interface and abstraction but not be cluttered with all the specific implementations. This especially relates to the dependencies which I try to keep as light as possible. Adding doctrine for everyone that uses Elastica is quite heavy. \nDo you think it would be possible to extract the transformers?\nAbout the event stuff I think I have to read up on the symfony part. Is this like PubSub?\n. @merk Sorry, took me some time to answer.\nAs far as I understand, Client requires Builder and Builder requires dispatcher, which indirectly means the dispatcher is required not only for dev? Not that this will be a blocker, just for understanding.\nThe thing I worry about the transformers is not only the dependencies but also the maintenance. As soon as a transformer is part of Elastica, people expect it to be maintained by Elastica. So the question comes up, which transformers are accepted and which ones are not. If there are only a handful of transformers to be expected, it should probably not be too big of a deal, but if there are lots of transformers coming up, it will become an issue. I could think of a ElasticaTransformers Github repo that has all the Transformers inside. Like this also Elastica could make changes to the transformer interface without directly having to update all transformers, as ElasticaTranformers depends on a predefined version.\nI think in general we are on the right track here. What do you suggest as next steps?\n. Perhaps some more background on why I would suggest to put it in a separate Github Repo. Having not mandatory dependencies is one of my concerns, but not the main concern (@Isinlor Thanks for sharing). If I want to release and tests are broken in one of the transformers and Transformers are part of Elastica, I would not release. If they are in a separate, I would release but would keep the dependency of the transformers to the older version of Elastica. This actually makes it possible to move forward Elastica with being blocked by for example the Transformers. In the past these issues existed with the Transport classes and to be honest, I'm quite happy we removed most of them.\n@ewgRa Unfortunately I disagree about the limited resources. Limited resources drives you to make very concious decision and often leads to simpler solutions. Three examples of Elastica here are fully automated builds, large test set and no release branches. I could not have maintained Elastica without all the build and test automation over time. I'm also aware that a lot of people would like to have release branches to backport fixes, but it would remove the focus from moving forward.\n@merk About moving forward: It would be great if we could find a way to move in the direction you mentioned above with small baby steps but having the overall goal in mind. So it is really great to have these large PR's to understand and discuss the general concept but then split it up into multiple smaller PR's (if possible). Not directly related to this change but probably good to know about is this change I want to make: https://github.com/ruflin/Elastica/issues/944 This will hopefully remove quite a bit of complexity and code from Elastica, so we can add it again at the other end :-)\nAbout the repositories: I'm quite convinced we should go with 2 repositories, especially as soon as we add dependencies. But I'm happy to have a first version in Elastica to make development easier.\n. @yehosef I just had a look at this PR and I don't think we throw an exception, only error. Could this be your error handling?\n. @yehosef Ah, just saw your comment a bit too late :+1: \n. @cameronmurphy Could you provide a PR for this fix?\n. @Tobion My idea here was, that getFullError does potentially not only return an array, but an object which can be further inspected.. I never dived into it to see if it is possible. Also not sure if there is a benefit .... @kukulich Because of the tests that are broken I actually prefer to keep this PR currently out of 3.0.0. It is easy to add a feature later but removing and changing BC is worse I think. As we plan to ship 3.1 as soon as this is fixed, I don't think it should be a big issue.\n. @kukulich Yes, I just did. The reason is that it is very easy to add code after a release but hard to remove it. The tests for nested didn't pass because some results were empty instead of results. So I prefer that people are aware of the issue instead of just using it and not getting results. I hope to ship either 3.0.1 or 3.1.0 in the next days with a fix.\n. @ewgRa Seems like @kukulich just provided a very simple way to fix this PR. I suggest to merge it and release 3.0.1 with it. What do you think?\n. @ewgRa Perfect. Lets wait for it to get green.\n. @kukulich Merged. Thanks a lot for the fast feedback for the fix.\n. Thanks for the addition. On the one hand I would really like to drop support for 5.4 as it is EOL (http://php.net/eol.php) but on the other hand I know that some larger projects struggle because we dropped support for 5.3 :-(\nBut as you mentioned, guzzle is an optional requirement. So it would be nice to instead drop the full build for 5.4, to only skip the guzzle tests in 5.4. Is that possible? Best would be probably to not even install guzzle for the 5.4 build. We had a similar hack for 5.3 in the past: https://github.com/ruflin/Elastica/blob/2.3.1/.travis.yml#L26\n. @jeskew A good timing to get this in could be with 3.1.0\n. LGTM. See my comment above and can you update the CHANGELOG.md file?\n. @jeskew I would classify it under BC because for the people using 5.4 it is a BC break.\n. @jeskew Let me know if you move the entry yourself or if I should do it for you? Also in case squashing is no problem for you, could you squash the commits?\n. @jeskew Merged. Thanks for the contribution.\n. Seems like a array instead of stdin object issue. Could you open a PR to fix this?\n. I assume Graylog is using an elasticsearch version previous to 2.0. All version of Elastica prior to 3.0 are compatible with elasticsearch 1.*\n. @lynx-ripe As @ewgRa pointed out, the master branch is the most recent version. In general I do not recommend to work based on master as it changes on a daily base. I'm closing this is issue as I think it is answered by the comment from @ewgRa above. Please reopen if this is not the case.\n. For elasticsearch below 2.0 Elastica 2.3.1 should be used. Elasticsearch 2.0 has many BC breaks, so has Elastica to accommodate for it. For elasticsearch >= 2.0 Elastica 3.0.1 must be used.\n. Closing this as I think the question was answered. Please reopen if needed.\n. @mortenhauberg Can you update the CHANGELOG.md?\n. LGTM. It would be nice to have at least a deprecated message in the docs in all classes which are deprecated.  Here is an example: https://github.com/ruflin/Elastica/blob/f124e598228a6b8a6c249fde6afc07ea7eb1a771/lib/Elastica/Query/Bool.php\n. @mortenhauberg Merged. Thanks. Perhaps in the future we can also trigger an error so it shows up in the logs: https://github.com/ruflin/Elastica/blob/f124e598228a6b8a6c249fde6afc07ea7eb1a771/lib/Elastica/Query/Bool.php#L4\n. :+1: \n. @ahungry The elasticsearch version mentioned in the release is the one it was tested with. As there were no major changes from 3.0.1 to 3.0.0 I would be surprised if it doesn't work anymore with elasticsearch 2.0. Can you provide some more details on what is not working anymore?\n. Yeah, it would probably need either an nginx setup or an elasticsearch node with shield. I'm fine with the current tests as long as you tested it manually?\n. Merged. Thanks.\n. Thanks a lot for your work. I added some notes to the code but would like to summarise it here again. Overall the changes look very good. Here some changes I would suggest:\n- DSL: I would ignore the DSL as far as possible at the moment. The main issue is that I assume in case we initiate the filter inside, it will always trigger an error even if filter is not used?\n- I suggest we use AbstractFilter extends AbstractQuery I'm aware that this is not 100% correct as I assume query has a little bit more functionality, but it will heavily simplify the code as we can define the type passed to the functions AbstractQuery which will remove all checks and deprecated messages. In case someone uses an AbstractFilter he already gets the deprecated message because of the object\n- For clarity we should probably rename all function params called $filter to $query when an AbstractQuery is passed\n- I didn't check the classes copied from filter to queries as I assume it is just a copy of the filter\n- I didn't check all test changes in detail\n. Good point, wasn't thinking of this one. I see that we could break some code here, but shouldn't we remove all usage of AbstractFilter in our code anyways? How would the above look like if there were no filters anymore?\n. @ewgRa I think I fully agree on what you stated above. I was referring to this line here (that you posted above): https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L74 That seems to be a \"usage\" of AbstractFilter in our code. Shouldn't we remove this and convert it to filters? \n. Based on the discussion in https://github.com/ruflin/Elastica/pull/724 I suggest to \"ignore\" the query part for the moment and wait for the PR. But we should still progress with this PR. @ewgRa See my comment above.\n. @ewgRa I agree to all your points above. I think we are good :-)\n. @Lumbendil Definitively. Idea would be 3.1\n. @ewgRa LGTM. Merging is next step. Do you feel comfortable to squash the commits or should we go with the current commits?\n. :+1: \n. @ewgRa Not sure if you meant that Symfony asks or doesn't? In any case, I think rebasing is great but also brings quite a few risks and can lead to a mess. That is why I normally ask if people feel comfortable with it, means did it in a past. \n. @ewgRa Interesting, didn't know about it. Would have to have a closer look. But it sounds like a little bit too much magic for me :-)\n. @ewgRa Merged. Thanks for all the work.\n. I remember there was a good reason for that but not sure which one it was. Best to answer is probably @webdevsHub\n. Thanks @webdevsHub for jumping in here. Makes sense. @designermonkey Closing this issue as I think the question was answered. In case the intention of the issue was to actually change the current implementation, please reopen for discussion.\n. @intech Thanks a lot for the contribution. Could you update the CHANGELOG.md file and add some basic tests?\n. The implementation looks good to me. Just to be one the same page: As far as I understand you didn't implement the full version we discussed here: https://github.com/ruflin/Elastica/issues/960 For example type and index or not set on the document, right? The current implementation is fine for me as it creates the base for future improvements. Just to clarify that this will not directly solve what @yehosef initially planned.\n. Looking at the implementation I have the gut feeling that there are quite a few edge cases which will break this implementation. But it is probably quite hard to cover all of them. To move forward I see two options:\n- Merge it as it is and wait for users to come up with the edge cases (by creating and issue)\n- Spend more time on the PR and improve the test set, to cover more edge cases.\nI'm tempted to go with approach one but would like to get the feedback from @ewgRa and @webdevsHub here.\n. Lets go forward with the current state and revisit it combined with https://github.com/ruflin/Elastica/pull/1017 I agree that some great new things are ahead of us here.\n@intech Could you squash your commits?\n. @intech If you are not familiar with git rebase and squashing it is probably better to merge it as it is. It is easy to get it wrong the first time :-)\n. @intech Merged. Thanks.\n. @intech no worries. Rebase / Squashing can be useful to have a clean history. Here some related search results in case you are interested: https://www.google.ch/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=squash%20commits%20rebase\n. @christiancannata Can you post what you have so far or which part exactly is not working?\n. For the multimatch queries, best have a look at the tests here as examples: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/MultiMatchTest.php\nFor the Bool Queries you can find examples here: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/BoolQueryTest.php\nThen it should be possible to combine it. In case some fields are missing, use setParam(...)\n. Closing based on the feedback from @Tobion . Please reopen if you think it is not solved.. See also https://github.com/ruflin/Elastica/issues/1014 and https://github.com/ruflin/Elastica/issues/918 Closing this issue as I think it is resolved. Please reopen if it is a different issue.\n. 3.1 is planned soonish with the most recent changes. Anything you need urgently since 3.0.1?\n. All 1.7 versions and even previous versions should not be a problem with 2.3.*. The version that is stated as compatible is the one that was tested. In general as long as there are no major changes on the elasticsearch side, Elastica releases are compatible with previous and later release. Best for 1.7.4 is definitively 2.3.1\n. @raphaelMalie Thanks for the fix. Can you please update the CHANGELOG.md? Can you add a small tests that would fail before and is not successful to make sure we don't break it again?\n. @raphaelMalie Any updates here?\n. @raphaelMalie Thanks for the heads up. Will try to take your commit and add tests (or someone else who has the time :-) ).\n@xjewer We should add a test and fix for that (if possible).\n. This was now fixed in https://github.com/ruflin/Elastica/pull/1049\n. @intech Thanks for the addition. Could you update the CHANGELOG.md file and add a small tests that would not have worked before and passes now?\n. @intech Seems like your change breaks an other test: https://travis-ci.org/ruflin/Elastica/jobs/102967963#L2086\n. This PR seems to overlap with: https://github.com/ruflin/Elastica/pull/1040\n. @intech @vinusebastian Any updates here? I would be nice to get at least one of the two PR's into Elastica.\n. I opened a new PR here based on this one as I would like to get these fixes in: https://github.com/ruflin/Elastica/pull/1164\n. I'm closing this one in favor of https://github.com/ruflin/Elastica/pull/1164 @intech Thanks a lot for your work. If you have some ideas why https://github.com/ruflin/Elastica/pull/1164 is failing, let me know.\n. @ewgRa @bourvill Thanks for the discussion. I had to read up on isset myself to see what it actually does in the above cases: http://php.net/manual/en/function.isset.php \nI think using isset() or empty() should always return what is somehow expected, so I would agree with @ewgRa that there shouldn't be any magic on the Elastica side. Based on the example of @yobrx we also see, that the above could be a breaking change.\nOn the one hand I'm not sure if it is the job of Elastica to make template handling easier, but at the same time the library is here to simplify engineers life. I don't think we should change the behaviour of isset but I'm happy to a function like hasSourceParam or perhaps a better name that does what you would expect from isset.\n@ewgRa Not sure why array_key_exists is used here, but I'm quite sure it isn't for performance reasons.\n. @vinusebastian Thanks for the PR. Looks good to me. Just one small question above. Can you also update the CHANGELOG.md?\n. I think this PR also overlaps with: https://github.com/ruflin/Elastica/pull/1038\n. Thanks @ewgRa and @greg0ire \n. The api docs are based on the phpdoc templates in a fully automate way based on the standard config. Do you know how this can be done with these templates?\n. Passing this params per query is default in elasticsarch as far as I know: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html#_parameters_3 Does Amazon have any recommendations what to do in these cases? This seems more to be an issue with the implementation of elasticsearch in AWS then Elastica. \nThe improvement that could be made probably on the Elastica side is trying to not set any default params if none set here: https://github.com/ruflin/Elastica/blob/f35835e8308ec9e0b62842155603c32118a2ffc6/lib/Elastica/Client.php#L337\n. @Tobion Didn't check this one in detail. If it looks good, feel free to merge. @olchick Can you potentially add an entry to the changelog?. @xjewer Thanks for the fix. What you mean by affected #1037 ?\n. Thanks for the fix. See also: https://github.com/ruflin/Elastica/pull/1037 Would you mind adding a test and updating CHANGELOG.md?\n. Thanks for adding the test and updating the README. It seems like the test is currently failing:\nhttps://travis-ci.org/ruflin/Elastica/jobs/111082687#L2178\n1) Elastica\\Test\\IndexTest::testDeleteByQueryWithArrayQuery\nElastica\\Exception\\InvalidException: Param query does not exist\n/elastica/lib/Elastica/Param.php:164\n/elastica/lib/Elastica/Query.php:131\n/elastica/lib/Elastica/Index.php:160\n/elastica/test/lib/Elastica/Test/IndexTest.php:446\n. I restarted the failing build and hope it will pass now. Would you feel comfortable to squash the 5 commits into one?\n. @dimvic All green. Let me know if you feel comfortable with squashing and rebasing into one commit or if I should merge as it is.\n. Merged. Thanks a lot for this fix @dimvic \n. For comparison I copy here the JSON that is part of the request you posted above:\n{  \n   \"more_like_this\":{  \n      \"fields\":[  \n         \"name.first\",\n         \"tweet\"\n      ],\n      \"like\":{  \n         \"_id\":\"\",\n         \"_type\":\"myTypeName\",\n         \"_index\":\"myIndexName\"\n      },\n      \"min_term_freq\":1,\n      \"min_doc_freq\":1,\n      \"minimum_should_match\":60\n   }\n}\n. In your code above you post an empty document to setLike(...). Can you instead put there a document with the content inside that you use under ->setData(...)?\n. @sebesvn Sorry, I missed one bracket in your code above. Now everything makes more sense :-) I was confused as you could set all this also directly with params in the constructor of Document() http://elastica.io/api/classes/Elastica.Document.html#method___construct\nSo what your trying should be supported and working. An example test can be found here: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/MoreLikeThisTest.php#L91\nThe difference is that this document is received from elasticsearch. So I'm curious if there are some fields missing. Could you post the result of print_r($moreLikesThis->toArray()) after you created the query?\n. I think the problem could be that there is no id. The toArray() function checks for an id: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/MoreLikeThis.php#L220 Can you add an id to your document and see if it works? TBH not 100% sure why we are checking for the _id.\n. @sebesvn It seems like you are right and MLT currently only works with existing ES objects :-( The code provided by you above looks good to me. Could you open a PR with this change and perhaps also add small test? I would probably add a comment line in the code above to explain what the two cases are.\n. @sebesvn Thanks. See comment.\n. Closing this one as #1051 got merged.\n. Thanks for the PR. Two things:\n- Could you update the CHANGELOG.md file?\n- Should we add an integration test to make sure it also works with elasticsearch? Like this we also no in case ES has a BC break.\n. Thanks for the Changelog. We already have quite a few functional (sorry, used integration before) tests which you can copy paste and adjust to your need: https://github.com/sebesvn/Elastica/blob/master/test/lib/Elastica/Test/Query/MoreLikeThisTest.php#L61 No magic needed. All connection stuff etc. is already done.\n. Merged. Thanks a lot for getting this in. I think I should a new release soonish :-)\n. Can you provide some code and examples?\n. I think you got the answer here: http://stackoverflow.com/questions/35769643/elasticsearch-query-by-array-of-id-result-returned-is-not-sorted-by-the-array-of  Please don't double post and for questions please use the elastica google group, not the Github issues: https://groups.google.com/forum/#!forum/elastica-php-client\n. I think that is a good high level summary. There is an additional part which is about providing access to elasticsearch stats and changing elasticsearch configuration. But these are less common use cases.\n. @merk We can try, but the next few days are a little bit unpredictable on my side as a new family member will join us ;-)\n. @merk That is quite nice and compact.\n. By lucene syntax you mean using it in query_string? Can you provide some examples that didn't work?\n. Can you try if that works in QueryString queries? It could be an escaping problem on the Elastica side. Please also provide a code example. That makes it easiest to reproduce and test.\n. I remember there were some changes to analyzer in elasticsearch but I would the example still expect to work. What did the creation of the index return?\n@twisted1919 Can you share the full code?\n@kersten What is the error message you get?\nDidn't have time yet to test the example myself.\n. @kersten I digged into the issue for the _boost field and mapping, and the answer is quite simple: It is not supported anymore in 2.x: https://www.elastic.co/guide/en/elasticsearch/reference/2.x/mapping-boost-field.html We need to remove that from the docs.\n. @twisted1919 Since elasticsearch 2.x it is not possible anymore to set default analyzer per type, only per index: https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-analyzers.html So also this example is unfortunately out of date :-(\n. @Numkil As far as I understand your comment, with the above changes it is working as expected?\n. @Numkil As a next step, do you suggest to \"only\" update the guide or additional changes?\n. I definitively it would not hurt to extend the Mapping with an Analysis object to make the handling easier. I haven't check in detail yet what the best way would be but it is definitively worth investigating.\nLooking forward to the docs PR. Thanks.\n. @jeskew The circleci issue definitively isn't related. I just tried out Circle-CI and forgot to disable it. Will have a look at the PR later.\n. LGTM. I like that it is completely decoupled and an optional dependency. Could you update the CHANGELOG.md and squash the commits afterwards if possible?\n. @jeskew Merged. Thanks a lot.\n. @HKandulla Unfortuntately your tests seems to fail: https://travis-ci.org/ruflin/Elastica/jobs/116853091#L2070\n1) Elastica\\Test\\Aggregation\\ChildrenTest::testChildrenAggregation\nElastica\\Exception\\ResponseException: can't add a _parent field that points to an already existing type\n/elastica/lib/Elastica/Transport/Http.php:171\n/elastica/lib/Elastica/Request.php:172\n/elastica/lib/Elastica/Client.php:627\n/elastica/lib/Elastica/Index.php:515\n/elastica/lib/Elastica/Type.php:520\n/elastica/lib/Elastica/Type/Mapping.php:273\n/elastica/lib/Elastica/Type.php:301\n/elastica/test/lib/Elastica/Test/Aggregation/ChildrenTest.php:33\n/elastica/test/lib/Elastica/Test/Aggregation/ChildrenTest.php:86\n. @HKandulla Please also update the CHANGELOG.md file.\n. @HKandulla Thanks a lot for digging into this. We should definitively have it also in master. Could you rebase on top of master and squash the commits (in case you feel comfortable with that).\n. It seems like this change somehow breaks the tests. Can you have a look?\nPlease also update the CHANGELOG.md file.\n. Please ignore CircleCI. I just restarted the tests for Travis CI.\n. @chuangbo Here is the error on Travis which is in Status.php, so I assume it is related: https://travis-ci.org/ruflin/Elastica/jobs/116031553#L2048\n. I agree it is currently far from clean, as we mix stats and status (which was not the same in the past). This came with the upgrade to elasticsearch 2.0 when we tried to keep it as BC compatible as possible. I'm good with this temporary hack for the moment but agree we should rethink the API here. I would even say Status should probably disappear as it does not exist anymore on the elasticsearch side.\n@chuangbo Do you want to open a Github Issue with a proposal how to proceed?\nCould you squash your commits into one before merging?\n. @chuangbo Thanks a lot for the contribution. No worries, I'm sure someone will pick it up.\n. This looks more like your php7 installation doesn't have curl installed.\n. How did you install Elastica? Composer? What does your autoloader look like?\n. @IgorDePaula In case some else finds this issue, perhaps you can post what the problem on your side was in the end and how you resolved it?\n. Travis did not run on this PR because of the following line :-( https://github.com/ruflin/Elastica/blob/master/.travis.yml#L8\nCould you add a line with the release-2.3 branch to the PR?\n. You have to rebase on top of release-2.3 branch, means your command would be git rebase -i release-2.3. I assume you have the most recent version of the release-2.3 branch checked out locally?\n. Thanks for adding travis to the branch. The build looks good.\n. @HKandulla That also works for me if you feel more comfortable in doing that.\n. @HKandulla LGTM. Waiting for travis to go green.\n. In case you planned to do this PR for master, it is not needed.\n. One PR can only be for one branch at a time. So this looks good for the master branch. As all is green, ok for you if I merge this one?\n. Merged. Thanks for the contribution.\n. Merged. Thanks.\n. As mentioned before I think this definitively goes in the right direction. I did quite a brief review but I saw that the changes to the public APIs and tests are minimal which is great to make it easier for people to migrate (which in most cases is not needed). Could you update the CHANGELOG.md with the BC breaks?\n. @merk That would be great, if we could deprecate it first. Like this we could do the release as following:\n- 3.x with new feature and deprecations\n- 4.x with feature removed\nThis gives people the opportunity to update the lib to the most recent version first without breaking their app but they already see what they have to change.\n. @merk Sorry, took me some time here to get back to this one. Could you rebase on top of master so I can merge this one in?\n. @merk BTW: ping when you rebase, as Github does not send notifications for this :-(\n. Argh, seems you have to rebase again as it conflicts with the logging PR :-(\n. Merged. Thanks.\n. Thanks for splitting this into 2 different PR's, makes it easier to review. Lets get https://github.com/ruflin/Elastica/pull/1065 in and then review this one. As far as I can see this one will be quite small with 5-6 files to change. Also don't forget to update the CHANGELOG.md with the changes in the second commit. \n. @merk Ignore @codecov-io , I just disabled it again. It seems they have a few issues in the recent days.\n. @merk I worry that we need to rebase again as soon as I merge one of the two PR. It seems Github started to ignore .gitattributes automatic merge for the changelog. Are you around the next hour to potentially rebase again?\n. @merk Ok, other one is merged. Let me know when you feel comfortable to move forward here. I plan to do a release today or tomorrow with the changes we have in so far. Any objections?\n. @merk In general looks good to me. I added some more notes. Two more questions to make sure I understand it to 100%:\n- Most of the users doing search and using ResultSet will keep working the same as the \"default\" builder is used and is an optional param.\n- All implementation which access _totalHits, _maxScore, _took, _timedOut will break and will have to use the getters.\n. @merk Release 3.2.1 with reverting the BC breaks sounds like a great idea. Wasn't aware we could do it without :-)\n. Can you rebase on top of master?\n. I think having it under FOS is a good option if possible as it is also close to where it is used initially. If other frameworks pick it up for use we can think about a different solution at a later stage.\nI don't know who the owners of FOS are and what the requirements are to get a repo inside, but it would be nice if we have strong contributors, that we could also give them write access to the repo.\n. Just run it again. Sometime the waiting period is too low ... I should increase it.\n. Can you try to run make tests ?\n. Ok, I think I need to update the docs here :-(\n. Argh, I still didn't update the CONTRIBUTING.md :-( @mtdavidson Could you open a PR with the change?. Generally +1 on removing logging functionality form Elastica as this is not the responsibility of Elastica and with Psr/Log now a reasonable standard exist. As I don't really have experience with Psr logger two questions:\n- What happens when no logger is passed? No logs are created?\n- The current logger provided some Elastica specific magic. Should we keep this around but somewhere else? Or is this something that is not needed anyways?\nIt is important for me to keep starting a project with Elastica stays as simple as creating a new Elastica\\Client with empty params for localhost (if possible).\n. LGTM. Can you rebase this on top of master again?\n. Merged. Thanks.\n. This also somehow overlaps with https://github.com/ruflin/Elastica/issues/944 In the end Elastica itself should not have to handle the complexity of connectors. I'm not even sure if it will need a connector interface, all it needs to do is the forward configuration options.\nThis PR seems to be from my point of view almost too radical as it seems to break even the simplest usage of Elastica\\Client as far as I understand. I would actually hope that the implementation of https://github.com/ruflin/Elastica/issues/944 makes it much more obvious how we could proceed here and remove all the connection dependencies.\n. Cool, I really like to discuss new ideas based on PR's as it often says more then describing it.\n. @merk At least not intentionally :-( I only made changes on codecov.io so it should not have any affects :-(\n. Yeah, not sure why :-( Just checked the configs on travis and all looks good.\n. I think we should proceed with these changes. I had a look again and I think it is partially going to overlap with #944 but at the same time it could actually simplify #944 . Not sure yet and also not sure when I get the time to do #944 so we should not be blocked by it. \nIs the CHANGELOG still up-to-date? Can you rebase on master? This should hopefully also solve the travis build issue and make starting ES more stable.\n. @merk Two notes:\n- About #1077: I'm not 100% sure what we should do here. Is that still possible through the Connection object?\n- How much additional work would it be to introduce the \"proxy\" functions with deprecated warnings?\n. @merk It seems one of the connection tests is broken.\n. @aguvillalba Have a look at the comments above, would be good to have you in this conversation.\n@merk An alternative idea here is that instead of having something like connect, is that it is possible to assign a new ConnectionPool to the client. So if someone wants to add / remove connections at a later stage, he has to exchange the complete Connection Pool.\n. As you know, I'm less hesitant to break BC then you are if it is the right way to go in the long run. So the question I ask myself, what is going to happen to Connection Pool and Transport when we get elasticsearch-php in? TBH I haven't thought this part through yet :-(\n. @aguvillalba Thanks a lot for your inputs. I think the client is currently under flux to make it more reusable for others to extend. To go the right path, it is important to gather together the different facts and opinions. I believe only in combining them we will find the best solution. Sometimes if we break stuff, we also have to go backwards and figure out new ways. Please keep pushing for your ideas. :-)\n. @merk I really like the addition of the LegacyConnectionPool. I enables us to do the restructuring withouth breaking BC and it shows and example how the ConnectionPool interface can be used. +1 on moving forward here.\n. @merk Not so sure about the settings removal. I see it reasonable to remove most of the options and move it to the connection pool. But for example passing an array of hosts would be really nice. The reason is mainly simplicity as it feels for me quite intuitive that you tell a client just to connect to a list of hosts and the rest happens magically.\nAn alternative could be to do some magic in the contstructor dependent on which types are passed, means allowing both.\n. @merk I think it is now also time to push this one forward again. How should we proceed? Perhaps it still makes sense to do a quick video call to discuss it all in person?\n. Merged. Thanks a lot for the contribution.\n. Closing as https://github.com/ruflin/Elastica/pull/1077 was merged.\n. LGTM. Could you update the CHANGELOG.md?\n. @aguvillalba Thanks, squashed and merged.\n. @aeytom Does this happen if you use an Alias name to create the index object and then use getAliases()?\n. Fixed in https://github.com/ruflin/Elastica/pull/1080\n. This more looks like an error related to the FOSElastica bundle: https://github.com/FriendsOfSymfony/FOSElasticaBundle Could it be that you use an Elastica version incompatible with FOSElastica? Closing this as I don't think it is related to Elastica itself.\n. @GuiminZHOU Do you know from where packagist takes this info? Where did you see this info?\n. @GuiminZHOU Yep, doesn't seem like I can do much about it. It takes the README from master independent on which version you click.\n. There are several BC breaks between ES 1.x and 2.x. The response error structure is just one major change. So finding a work around for the error will not solve your problem that the two versions are still not compatible with each other.\n. Thanks for the PR. I restarted the build as the travis failure is not related to your changes. Travis behaves strangely today :-(\n. @gbprod Merged. Thanks a lot for the fast fix.\n. @merk Looks like travis is still working here :-) Will be online again in a few hours.\n. Some these methods are just \"proxy\" methods, means the actual implementation is not in the Client itself (example addDocuments). I think these methods are here more for convenience and for historical reason. What seems to be important to me is removing the logic from the Client (not necessarly the method itself). updateDocument for example has logic in the client which should not be here.\nNot sure what the right place for these functions is but I would see Helper and Util more for \"additional\" functionality which does not tie to one of the existing objects. So Bulk could be the right place?\n. Agree on the above. It will always be possible to add \"shortcut/proxy\" methods in case it gets too complicated.\nFor updateDocuments: Not sure it makes sense to move it to bulk / updateDocuments as it is a different request. When I look at the updateDocument code it looks like it consists of three parts:\n- Creating the request object\n- The request itself\n- Processing the result\nPerhaps it makes sense to split these ups into different parts.\n. @mojzis Agree. Can you open a PR with the change?\n. I restarted the failing builds.\n. @s12v Could you update the CHANGELOG.md file?\n. @s12v Merged. Thanks.\n. @s12v Sure, will push 3.2.1\n. @s12v The release is currently somehow blocked because of this composer issue: https://github.com/ruflin/Elastica/pull/1096#issuecomment-221858795 any help is appreciated.\n. @s12v No release yet as the PHP 5.4 builds are still red. Somehow hesitant to release with these red.\n. @Antoniossss Which Elastica version and which Elasticsearch version are you using?\n. And which elasticsearch version are you using?\n. Hm, my first idea was that it is because of a new / old elasticsearch version, but not sure about this. Can you share a little bit more of your code?\n. @Antoniossss I didn't have the time yet to look into this in detail. You could do me a big favor if you could create an integration test in our test suite with this and open a PR. Like this we directly see if it is related to an elasticsearch version or something else.\n. We should definitively do some refactoring here as count and scan are deprecated and completely removed in 5.0. Did you push a PR with the changes?\n. BTW: What was the issue with the test env?\n. Oh, Windows :-) Feel free to open a PR without tests so someone else can potentially add them.\n. Which Elastica version and which Elasticsearch version are you using?\n. Lets ignore the FOS bundle for the moment, as it looks like it doesn't play any role in the above code (correct me if I'm wrong). Side note: As far as I remember there are some issues with FOS and ES 2.0. Could have changed in the meantime.\nCould you provide the following output here adding it after the lines above:\nprint_r($query->toArray());\nIt would be good to see how the structure generated by Elastica is different from the above.\n. There is a different in the price_amount. The from / to stuff is needed. Can you try:\nReplace\n$range->addField('price_amount', [$minPrice, $maxPrice]);\nwith\n$range->addField('price_amount', [\"from:\" $minPrice, \"to\": $maxPrice]);\n. Good to hear. Will close the issue.\n. @cameronmurphy Thanks for the contribution. Could you update the CHANGELOG.md file and add a small test to make sure the issue does not happen again in the future?\n. @cameronmurphy Right :-) Also forgot about this duplication :-D\n. @ReenExe Thanks a lot for the contribution. I like the changes to the short array notation as it makes the code more readable. We should probably have some conversation about the return changes :-)\n. @ReenExe I left some additional comments. Lets keep your return refactorings in.\n. @ReenExe Can you also add a line to the CHANGELOG.md. Even though this has no functional changes, it will finally and for all break compatibility with PHP 5.3.\n. @ReenExe I just restarted the build. TBH I don't think the failure is somehow related to your changes. Travis is sometimes flaky, but this more looks like a dependency got out of date?\n. It is somehow related to this error: \nThe command '/bin/sh -c if php -r 'exit(version_compare(PHP_VERSION, \"5.5.0\", \">=\") ? 0 : 1);'; then composer install; else composer install --no-dev; fi' returned a non-zero code: 2\nThe code for this can be found in the dockerfile here: https://github.com/ruflin/Elastica/blob/master/Dockerfile#L29\n. @ReenExe Yep, seems like that is the problem :-( We can wait on a fix release or alternatively, perhaps it is possible under PHP 5.4 to install an older version of composer like 1.0.3? https://github.com/ruflin/Elastica/blob/master/env/elastica/Docker54#L30\n. @ReenExe Not 100% sure I got your last comment?\n. @ReenExe Sounds good to me. No worries, just wanted to make sure as english is a second language for most of us ;-)\n. I assume a release is coming very soon, so lets wait and then roll back the change.\n. @ReenExe Composer 1.1.1 was released: https://github.com/composer/composer/releases/tag/1.1.1 I restarted the build. Can you rebase on top of master to get it in? It seems to have a conflict.\n@merk \ud83d\udc4d \n. Seems like the composer version release is still too fresh and it downloads the old version: https://travis-ci.org/ruflin/Elastica/jobs/129384382#L1211\n. Looking forward to thew PR. Lets hope then it fetches the newest composer version. Otherwise you could just rebase and squash this one?\n. Thanks. Failing test is because of a composer problem: https://github.com/composer/composer/issues/5308\n. I'm not sure if I see this as an issue. It should not be the responsibility of the client to verify that he talks to the correct service. If an other service has the same API as elasticsearch and the same responses, I would not see a problem that Elastica also works with this service. Also in case a proxy is used in front of elasticsearch, it should not matter for Elastica itself. My question would be, why apache responds with 200 under the index url? Coincidence?\nThe goal of the exist was to make it as efficient as possible, that is why only the head request is used and not content processed.\n. It actually checks if the index url exists. Translated to a bash script:\n```\n$ curl -i -XHEAD 'http://localhost:9200/twitter'\nHTTP/1.1 404 Not Found\nContent-Type: text/plain; charset=UTF-8\nContent-Length: 0\n$ curl -XPUT 'http://localhost:9200/twitter/' -d '{\n    \"settings\" : {\n        \"index\" : {\n            \"number_of_shards\" : 3,\n            \"number_of_replicas\" : 2\n        }\n    }\n}'\n{\"acknowledged\":true}\n$ curl -i -XHEAD 'http://localhost:9200/twitter'\nHTTP/1.1 200 OK\nContent-Type: text/plain; charset=UTF-8\nContent-Length: 0\n```\nSo if the index does not exist, it returns false. Or that is what it should at least.\n. LGTM. Can you rebase and ping me?\n. I suggest we do all our efforts currently in master, and I branch of 3.2 later from a tag if needed. There was only one request in the past to do an old branch (obviously because of the BC breaks with ES 2.0). I created the branch back then but never got the contributions that were promised. So as long as not request I suggest to keep the complexity to a minimum. \n. @merk What is your preferred way of pushing this one forward?\n. LGTM\n. @merk I just made you a contributor to the repository, so you can also merge PR's. In general I like when PR's are reviewed by a second person, but sometimes I skip it, especially for my own ones as they are not always reviewed :-) Feel free to merge PR's you think need merging. I trust in your judgement.\n. I recently split up the API docs by version. The url for the latest one is: http://elastica.io/api/latest/classes/Elastica.Transport.AwsAuthV4.html\nFrom where did you get the above link?\n. In general LGTM. I don't think something is wrong with the build as the error is consistent across all 4 builds: https://travis-ci.org/ruflin/Elastica/jobs/131748215#L4437\nCould it be related to the changes you made / commented out? There seems to be a true / false mix somewhere potentially. I didn't check in detail yet.\n. @ReenExe I like the suggestion from @merk Lets do in a first PR that array conversion. This is about 95% of the changes and should not change any logic. Then we can have a second PR with the other changes to discuss. This also prevents too many merge conflicts.\n. I tried to investigate further into the composer issue, and I'm not sure what happens. It uses now composer 1.1.1 but the 5.4 build still fails. See https://travis-ci.org/ruflin/Elastica/jobs/133096440#L1777 The strange part is that if I test it locally with PHP 5.6 the --no-dev works as expected, there on travis it seems it doesn't? I need to test it with 5.4 it seems. Any other ideas what the issue is?\n. @ReenExe Sorry for the late answer. Not sure what you try to say with the above? Any idea how we could fix it?\n. @ReenExe Yep, it seems like the version didn't change in the PR linked. I'm currently trying to find a work around for this issue (again) :-)\n. Ok, I think I managed to find a work around for the PHP 5.4 issue.\n@ReenExe I did also apply linting and interesting it converts all [] into array(...): See https://github.com/ruflin/Elastica/pull/1113 So I assume changing everything to the short syntax would only changing the entry here and apply linting? https://github.com/ruflin/Elastica/blob/master/.php_cs#L19 No manual work needed hopefully :-)\n. @ReenExe Ok, but try to make it the automated way (no manual work). Please push the array changes separate.\nThat means I can close this PR?\n. @ReenExe Yeah, for automation I was only referring to the array stuff.\n. LGTM. I'm ok with merging this one. PHP 5.4 failure is unrelated to this change (composer problem ...)\n@merk I assume the changes I see now were pushed after your comment.\n. @olehismaylov This looks more like an issue related to FOSElastica?\n. Which version of Elastica are you using? getErrorMessage should return always a string. See https://github.com/ruflin/Elastica/blob/f545465dd4d5acd020ebf1c1e7846fbefcc0f399/lib/Elastica/Response.php#L130\n. Version 2.3.2 of Elastica is not compatible with elasticsearch 2.x. Please update the version 3.x of Elastica.\n. Closing this issue as I think it is related to using incompatible version of Elastica and elasticsearch. Please reopen if that is not the case.\n. As these config files are not supported by Elastica I assume the above problem is not related to Elastica. Please open the issue in the relate project. Also provide there some more information if possible\n. Can you share some more details on the exact code you were using and what you tried?\n. Closing as https://github.com/ruflin/Elastica/pull/1499 was merged.\nThanks @mmoreram . @simon-n Would you mind opening a second PR with the changes in the CHANGELOG?\n. Thanks\n. LGTM. @hectorgimenez Could you update the CHANGELOG.md file with this change?\n. @hectorgimenez Thanks. Seems like it conflicts with one of the merges I just did before. Could you rebase on top of master?\n. @tiger-seo Thanks a lot for the contribution. Could you update the CHANGELOG with the change? Can you also share some details on what was broken? If we fix something, it is always good to have a small tests to confirm what was broken before and now is fixed. Could you also add a small test?\n. @tiger-seo Ah, perfect \ud83d\udc4d Could you update the PR with the above suggestions?\n. @tiger-seo Any updates here?\n. @tiger-seo Any updates on this one?\n. @tiger-seo Lets keep it open and see if I or someone else can take it over.. @samdjstevens Feel free to take over this PR. It would require an update to the CHANGELOG and a small test to confirm the changes.. @p365labs SGTM.. @tishma So if I understand it right this is to make 2.3 more compatible with 1.x. I'm happy to get this in as longs as it does not introduce and BC breaks.\n. The main thing I'm concerned here is not the PR itself, but the impression it will give. Also with this fix Elastica 2.x is not compatible with elasticsearch 2.x. I'm aware that in your case you know about that, but most users don't and then just expect it to work.\nWhat would the changelog state? Make errors messages compatible with elasticsearch 2.x? :-)\n. @tishma BTW: I have no issue in merging it into the 2.3 branch, I'm more concern about releasing it ...\n. @tishma Any thoughts on the comments above?\n. Elastica 2.x does support Elasticsearch 1.x, but not elasticsearch 2.x ;-) That is what I worry that people confuse :-D\n. @tishma Lets see if there is going to be some more interest in this one (means waiting for either +1 on this PR or issue participants).\n. Agree on closing this one as it is quite old and 5.0 happened in the meantime.. LGTM. I always left out the comments as Github does the linking here automatically: https://github.com/ruflin/Elastica/releases But if I copy it to elastica.io this make sense. Thanks.\n. LGTM. One minor comment about the naming. Could you please also update the CHANGELOG.md? And if possible, rebase it on master. That will fix the broken 5.4 build.\n. @maxgalbu Oh, Github started to send notifications for new commits. Not sure if this is complete yet, but you missed the CHANGELOG.md part ;-)\n. Merged. Thanks a lot for the improvement. Unfortunately I already made the 3.2.1 release today in the morning, so it will go into the next minor.\n. Currently not. There is a 2.3 branch in case someone wants to backport stuff to 2.3 but so far all \"promised\" contributions didn't happen. Any specific thing you are looking for?\n. @eit Rereading the post I realised you referred to elasticsearch and not Elastica. So all should be working with the most recent Elastica release. Great to hear it works.\n. I'm not expert on the FOS Elastic bundle and what the populate command does, but the above error looks like either the host is not configured correctly or elasticsearch cannot be reached. What have you put inside the configuration as host?\n. @ReenExe As mentioned earlier, these changes must be made in the linter to be automated: https://github.com/ruflin/Elastica/blob/master/.php_cs#L19 Otherwise every time I run make lint before a release, all your changes will be reverted.\n. Also as discussed before, separate the PR's for the changes from array to [] and the reordering of commands.\n. @ReenExe You have to check the phpcs docs what the available config options are. Probably [] is even default and this line could be removed? To test it just run make lint locally (can take some time).\n. @ReenExe \ud83d\udc4d  That is exactly what I mean by splitting up the PR in small parts. So we can merge one by one.\n. Thanks\n. I restarted the build. Travis does not have its best day today.\n. @ReenExe If you remove the TODO comment I think we are good to go and can merge this one.\n. Merged, thx.\n. Merged, thx. Can you try to cleanup the history for future PR's? Mean rebase on top of master to not have all previous commits in the PR.\n. @hectorgimenez Merged. Thanks for the contribution.\n. The part I'm not sure I understand to 100% is why headers can be empty. Which version of Elastica are you using? As in master line 152 seems to be a different line.\n. @ReenExe How should we proceed here? We \"solved\" the array to [] conversion but there is still good stuff in this PR, especially the bug you found. Should we open a separate PR for that?\n. It would be nice to have a PR with only the bug fix inside so we could add a potential test to make sure it doesn't happen again.\n. @ReenExe Would be nice if you could add a unit test. Otherwise perhaps remove the more critical change that was discussed.\n. @ReenExe It would be great if you could directly use this code to create a unit test out of it. Let me know if you have troubles setting up the test environment.\n. @ReenExe ok, ping me if something doesn't work as expected. In case you have docker and docker-compose installed, make tests should do the job.\n. @ReenExe Did you have a chance to add some unit tests here?\n. @ReenExe We can also keep it open if you think you will get to it some day. Otherwise feel free to close it yourself.\n. yeah, docker and windows :-) best is probably to try it inside a virtualbox. alternatively if you have phpunit and php locally, it should also work. If you test it just on your local PHP version and then travis tests all the other versions, that is fine for me.\n. @merk @ReenExe I think that is a general question and also often is personal taste. I support here the opinion of @merk. Code should be like a book to read.\n. @ReenExe Will close it. Thanks for looking into it anyways.\n. Thanks for spotting and fixing this.\n. Thanks a lot. That is quite nice, wasn't aware of this tool. We should add this to our make lint command.\n. Not sure how that sneaked in. Thanks for spotting and fixing.\n. Thanks for spotting this. Would be great to have a PR for this ;-)\n. @Antoniossss Is your question on how to do in elasticsearch directly or in Elastica? Also which ES version are you referring to?\n. Yeah, the naming there is for historical reasons not great.\n. LGTM. \n. @ReenExe Do you mind if I apply make lint on my side locally with this change just to make sure the same version is used for all the liniting, especially as this touches most of the files? Will open a PR for it.\n. Did you use make lint to create the result?\n. @ReenExe Thanks a lot for making this possible.\n. LGTM\n. Could you update the CHANGELOG.md file with these changes? It would also be nice to have at least 1 integration tests for each with elasticsearch to make sure it works as expected.\n3 \ud83d\udc4d  in an hour, not bad ;-)\n. @arkadiuszmalina Sorry, little bit late. But one thing I just realised is that AndQuery and OrQuery area already deprecated in elasticesarch 2.0 and will be removed in elasticsearch 5.0. It is replaced by the bool query: \n- 2.x: https://www.elastic.co/guide/en/elasticsearch/reference/2.0/query-dsl-and-query.html\n- 5.x: https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl-and-query.html\nAre there some limitations you have with the existing Bool query?\n. @arkadiuszmalina Merged. Thanks a lot for the contribution.\n. There seems to be an issue with your autoloader. Do you use composer to generate the autoloader? How exactly did you install Elastica?\n. Your above steps don't really look like you used composer. I would expect you to add elastica to you composer.json file and run something like composer update.\nI don't know about pydio. But to be honest I don't think it is an issue with pydio and version incompatibility but more related to you setup. Elastica\\Client exists since the first version of Elastica.\n. Glad you found a solution. Closing this issue.\nAbout the specs: That depends on lots of factors so there is no single simple answer. Best is you start wit the default config it an check if you hit any issue.\n. If I understand you right, this is what you are looking for on the elasticsearch side: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geocentroid-aggregation.html\nThis currently does not exist yet in Elastica. It would be great to have this added as a feature.\n. @coreation As a shortcut you can always use raw queries (http://elastica.io/example/raw-array-query.html) but it would be obviously much nicer to have it directly in Elastica.\n. Yes. The \"only\" thing you have to do is adding support for geocentroid aggregation. As each aggregation inherits AbstractAggregation, you will get the nesting part for free.\n. Best is to open a PR directly. I see PR's as a type of conversation and not something that is final and must be directly ready to be merged. Code often says more then lots of descriptions.\n. Thanks for the PR. Best is to add it under Added in the CHANGELOG.md\n. @ReenExe Merged. Thanks for the fix and the tests.\n. LGTM. Left one minor comment. Thanks for adding the tests.\n. Merged. Thanks.\n. You are definitively right and minimum_should_match should also support percentages: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html There are even multiple conditionals which I was not aware of, so going with string is a good idea.\n. As we will switch to string, the verification of the information will be much harder on the client side. But I hope in case invalid strings are provided, elasticsearch will return an error. For the testing I suggest we test all the valid values and check if they still work. We should still keep some tests where ints are passed to make sure we keep BC compatibility. Does this answer your question?\nThanks a lot for directly doing a PR.\nBTW: I reopend the issue as I think we should keep it open until the PR is merged.\n. Oh, just saw the message now. Sorry. What happens if you just run make tests ?\n. Great. We should about CONTRIBUTING.md :-( \nYou should definitively open a PR ;-)\n. LGTM. Would be nice to have at least one integration test added to confirm it works as expected. Best is having a look at the existing integration tests and then do mostly copy / paste :-)\n. Best is to rebase on top of master. Probably it is a conflict in CHANGELOG.md\n. Changes LGTM, only minor comment.\n. Yeah, if you work in master directly rebasing on master is hard ;-) Merging cause a small issue above.\n. Thanks for the contribution. I squashed to commits and put it into master.\n. No exact plans for the next as there are already a few changes in an no BC breaks I could do a release quite soonish.\nOne thing I wanted to fix is the httpproxy vulnerability before the next release: https://httpoxy.org/ Unfortunately Elastica is also affected here (in case you use HHVM_VERSION) and Guzzle Transport: https://github.com/ruflin/Elastica/blob/c01c929424c8efd48eca8f773feecd6902b36c6c/lib/Elastica/Transport/Guzzle.php#L68\n. LGTM. Can you also update the changelog?\n. I'm curious why Travis did not start on this PR?\n. Merged. Thanks\n. Thanks, definitively a useful addition. See my comments above.\n. @oleg-andreyev Thanks. Merged. This will be part of the next release.\n. It seems like this change breaks quite a few things in Elastica. Could you share some more details on what the intention of this change is and how it is supposed to work?\n. I'm not sure how your change should help with this? Based on the docs the second param should be an int: http://php.net/manual/en/function.curl-setopt.php\nI don't think it is up to the Elastica code to fix wrong usage of constants. Perhaps I'm missing something here?\n. @xulien Not sure if I'm missing here something, but in the end a constant it just a value and in this case an int. In case someone uses 'CURLOPT_SSL_VERIFYPEER' and passes a constant as a string instead of the CURLOPT_SSL_VERIFYPEER the constant itself, I would see this as something that should be fixed in the code of the implementation? \nThe code below is the one that works:\ncurl_setup($conn, CURLOPT_SSL_VERIFYHOST, $param);\nThe following code we should not allow I think and also not fix, as it is some magic but from my perspective it is a problem on the code side.\ncurl_setup($conn, 'CURLOPT_SSL_VERIFYHOST', $param);\nPlease tell me if I'm missing something here.\n. @xulien Sorry to be a little bit stubborn here, but if symfony returns constants as strings, that sounds more like an issue in Symfony. But TBH I'm also missing the context here.\nWouldn't this be easy fixable by using constan(...) around the variables where you set the curl options?\n. I'm closing this one as I really think this is not a Elastica Http output issue. But I'm more then happy to discuss further and let me convince from the opposite :-)\n. Best is to have a look at the tests that use the hightlight query: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/HighlightTest.php\n. Great that you found the solution and thanks for providing it here for others.\n. Glad you found a solution. Closing this issue.\n. I'm not aware of the details on how this works in Guzzle, but I assume it need would need some changes in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Guzzle.php \n. @ovr Sorry for the late reply. This definitively sounds interesting. I'm curious how well this will fit into the current way Elastica handles connection. +1 on discussing this one some code.\n. Cool, looking forward to it.\n. Thanks for the contribution. Could you update the CHANGELOG and potentially add a small integration test to make sure it works as expected?\n. Thanks, merged. Thanks a lot for the addition.\n. Not sure if you use the constant as expected. Here is an example: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/MatchTest.php#L175\n. Thanks for the contribution. I like the addition as it keeps it backward compatible and adds flexibility.\nCould you also add a small integration test to make sure it works as expected? Probably you can copy an existing one a change a few lines. Please also update the CHANGELOG.md file.\n. @snider Any updates on this one?\n. @snider Thanks for notifiying. Github changed it recently to also get notifications for commits. Merge conflicts should not be an issue for Travis normally, but I have seen it in the past that travis missed picking up a commit (or Github misses to notify Travis ...). Can you just push a new commit or even rebase to resolve the conflict?\n. Thanks for the PR to make the code faster. Can you please update the CHANGELOG.md file? Adding a test to confirm the optimization of this can is quite tricky, but it looks very reasonable :-)\nOne question that this raised on my side is, why do we have JSON_ELASTICSEARCH at all? I looks like we could replace it everywhere with JSON_UNESCAPED_UNICODE https://github.com/ruflin/Elastica/blob/master/lib/Elastica/JSON.php#L59 My assumption is we needed it for some historical reasons (PHP version compatibility).\n. The changed code is already covered by quite a few other integration tests I assume as it is such a central part. So I worry not too much that it breaks the code. No need to share the Backfire profile, the changes make a lot of sense. I fully trust you here :-)\nIn case you have an easy test to add feel free to add it, but not required. Only additional thing required is the update to the CHANGELOG.md\n. @romainneutron I merged this change as I plan to do a release. I will add the changelog entry.\n. @romainneutron No worries. Thanks a lot for the contribution.\n. Which Elastica version are you using? Which elasticsearch version are you using?\n. dev-maste is only compatible with elasticsearch 2.x. But I didn't test it this is actually the issue. I can't remember that we had to change things in the match_all query. Could you briefly test if you have the same problem with ES 2.x?\n. @olchick Not sure I fully get your comment. The result is as expected with elasticsearch 2.x? Or does it just not throw an error with elasticsearch 2.x but not work? Can you share your php code?\n. Ok, in this case I'm closing this issue. If you want it to work with elasticsearch 1.x, you need to use Elastica 2.x. Please reopen if that is not the case.\n. Some of the tests still seem to fail. Needs some additional work.\n. @arkadiuszmalina Thanks a lot for this addition. Very well done.\n. Best is to use the API as reference guide: http://elastica.io/api/latest/ In most cases if you know which query you want to use for elasticsearch, there will be a class with the same name in Elastica. An other great source for code examples is the test suite: https://github.com/ruflin/Elastica/tree/master/test/lib/Elastica/Test\nUnfortunately it is true that the Elastica docs are not very extensive. Contributions are always welcome. \n. Thanks for the addition. LGTM. Could you please also update the CHANGELOG.md?\n. @gibrown Thx. It seems your branch has a conflict with master. Probably there is a conflict in the Changelog. Could you rebase on top of master and resolve the conflict?\n. @gibrown Merged. Thanks a lot for the contribution.\n. I don't fully understand this change yet. Can you share some more details and example on this?\n. Nice, I was never thinking of this use case. I left some minor comments in the PR. Could you also update the CHANGELOG.md?\n. @Gasol Thanks, merged.\n. I assume this is the functionality you are referring to: https://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters-phrase.html\nThere is no specific plan yet to add it but I would be really nice to have it in. PR's are always welcome.\n. @vgaldikas There are already quite a few suggesters which can be found here: https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Suggest Have a look at these and especially the Phrase one. . I think what you need is to extend the Phrase suggester as you mentioned yourself: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Suggest/Phrase.php I haven't checked it in detail but it something like setCollate($query AbstractQuery) {\u00a0... } should get you started adding it to Elastica itself.\nCurious to see what you tried and which errors you got.. @vgaldikas I think it would definitively be nice to have something like setCollate to do this by passing a query to it. WDYT?. I edit the code directly on my machine and then run make test TEST=.... See https://github.com/ruflin/Elastica/blob/master/Makefile#L67 \nYou should first update the Phrase.php file and then add a test in the PhraseTest.php file. Best copy some code from existing functional tests.. @vgaldikas Could you open a PR? This makes it easier to review and comment. \nI think you will need AbstractQuery instead of Query and then you can use toArray() on it. But easier to discuss on the PR when I see all changes together.. It seems like currently Terms Query always assume that the value for the terms key is an array which is not the case in this lookup example. This would need some extension to the logic of the Terms query. What you can always to is using the raw query: http://elastica.io/example/raw-array-query.html\n. Very nice addition. Could you also update the CHANGELOG.md file with this?\n. LGTM. Only left one minor comment. Very nice functional tests you added. \n. @wamania Merged. Thanks a lot for the addition.\n. Help is always welcome :-) The biggest task ahead of Elastica currently from my perspective is: https://github.com/ruflin/Elastica/issues/944 Already several people played around with different approaches (including me) but I think we didn't get to a final conclusion yet. More then happy to hear your thoughts on this one.\n. ?\n. Closing as https://github.com/ruflin/Elastica/pull/1176 was merged. Thanks a lot to directly fix it.\n. Thanks for the update. LGTM\n. Here you go: http://elastica.io/2016/09/23/release-3-dot-2-3/\n. @ChristopheBoucaut Merged. Thanks for the addition.\n. @ChristopheBoucaut Merged. Thanks for fixing my copy / paste error :-(\n. @simaranjit Seems like Travis had some issues. Can you push a new commit and see if runs?. @simaranjit #1332 is merged. Can you rebase on top?. @ChristopheBoucaut As we already deprecated it, the next step is to remove it. We definitively should do this for the next major release.\n. @ChristopheBoucaut  Closing this PR. I need to go through all deprecation notices and remove these for these files for the next major release.\n. LGTM. I'm thinking if we should directly remove it as the next major release planned of Elastica is for 5.0\n. As the next major release will be based on master, it probably makes sense to directly change this PR and remove it here. \n. @ChristopheBoucaut Interesting error, was not thinking of this before. But this means we should remove all the older query builders completely as they will not work anymore (not only because of this change).\n. SGTM\n. @ChristopheBoucaut Closing this PR as in the meantime all filters were removed so I don't think this is still needed. Please reopen if you see it differently.\n. Wasn't aware that composer takes gitattributes into account. The biggest difference will make the test directory. Can you please update the CHANGELOG.md?\n. @willemstuursma Merged. Thanks for the contribution.\n. @Zyqsempai Great to hear. What I already did is removing all the filters and skip all the tests which do not pass at the moment. I added a message to each of this tests on why they don't pass (see https://travis-ci.org/ruflin/Elastica/jobs/167274669#L2135). We need to go through each of this test an figure out how it should be fixed. Most of them should be an easy fix.\nTo start simple: I think the image plugin is not under active development any more. So we should remove this one completely from the code and tests.\n. @Zyqsempai Sorry for the delay in answering, was on vacation last week. About the issues above: Didn't check them in detail yet. For some option it can be that they don't exist anymore and we have to remove them or rename them.\n. The above topics have been discussed here: https://gitter.im/ruflin/Elastica?at=580c7bc4305a10335db2114f\n. @Zyqsempai @p365labs About the PHP versions. I opened https://github.com/ruflin/Elastica/pull/1201 to check if everything is fine with PHP 7.1. To add it is a no brainer. More complex is the question about which PHP versions should we still support. Currently we support up to 5.4. 5.4 and 5.5 already reached EOL some time ago. The reason I kept it in is because I know of some larger projects that use Elastica and are still on PHP 5.4. I'm quite sure we should drop support for PHP 5.4, not 100% sure about 5.5. One reason I would also drop 5.5 is that I assume when people update from 5.4, the could directly go to 5.6 so 5.5 is not really needed. In addition, as we have quite a few breaking changes for elasticsearch 5.0, people using it will have to change their code anyways and \"potentially\" this are also more up-to-date projects.\nAt the same time, if we don't break any of the PHP version, why should we remove them? \nWhat are your thoughts?\n. @Zyqsempai The reason I mix the two is because this issue is for me also the only blocking thing for the next major release and I only want to drop support for PHP version in major release (if possible).\n. @p365labs @Zyqsempai Based on your inputs and the following additional reasons I decided to also remove PHP 5.5\n- https://github.com/ruflin/Elastica/issues/944 is not possible without 5.6\n- There are very few BC changes from 5.5 to 5.6. So I don't see any real reason people could not upgrade their PHP version\n- I want to use the most recent dependencies for testing, for example phpunit. I can't do that with 5.5.\nPR https://github.com/ruflin/Elastica/pull/1202 was updated accordingly.\n. @p365labs @Zyqsempai I was thinking of doing a 5.0.0-beta1 in the next days. I'm aware that there are still some open tasks but I think most of them seem to be related to tests which need to be updated an not Elastica itself. Having a beta will also get more feedback of what could be broken with 5.0. WDYT?\n. @Korikulum Merged. Thanks a lot for the contribution.\n. @ewgRa Most of the work was really simple based on the huge effort you made for the deprecation notices. \ud83d\udc4d \n. @Zyqsempai Thanks a lot. Merged.\n. @Zyqsempai Can you rebase this on one master. As it also includes the image plugin change it conflicts with master.\n. @Zyqsempai Merged. Thanks again :-)\n. @maxperrimond Thanks for the fix.\n. LGTM. Can you update the CHANGELOG.md with this change?\n. LGTM. Could you also update the CHANGELOG.md?\n. For the bool queries, have a look at the test cases here: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/Query/BoolQueryTest.php Let me know if this helps.\nFiltered query is deprecated because it is also deprecated in elasticsearch and should be replaced by a bool query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-filtered-query.html\n. @jimmykirk Glad you got it working. Will close this issue then. Please reopen if you think there is a potential bug in the library that must be fixed.\n. @p365labs You probably have to rebase this PR because of https://github.com/ruflin/Elastica/pull/1197 got merged. \n. Nice!!! Thanks a lot for implementing this. \n. LGTM\n. Nice, that means we are down to 44 skipped tests ...\n. @xavismeh Thanks for the contribution. LGTM. Could you update the CHANGELOG.md file?\n. @xavismeh Thanks. Merged.\n. LGTM\n. Nice. LGTM.\n. Using defaults SGTM\n. @Zyqsempai Did you see somewhere that text was removed / deprecated in the CHANGELOG?\n. @p365labs @Zyqsempai I suggest for the prefix part we will use the PR from @Zyqsempai . I left there a comment.\n. LGTM\n. @Zyqsempai Can you rebase your changes on top of master? I think currently i contains lots of changes from other PR's / commits. Best squash it into 1 commit.. @Zyqsempai Looks like you still have 11 commits instead of 1 and you did some merging. I was more thinking of rebasing and squashing.. My approach is normally:\ngit checkout master\ngit pull elastica-master\ngit checkout your-branch\ngit rebase -i master\nThe use s to squash all the commits into 1 except the first one. Afterwards you need git push --force. But as you already did some merging not sure if the above could become ugly because you will have quite a few conflicts during rebasing that you have to fix and then do git rebase --continue. \nOtherwise you create a new clean branch and just cherry pick the commits you want. But there also seems to be some mixing.\nSorry, not sure what the best to recommend is.. @Zyqsempai Didn't set it but I think we should use _setRawParam() which is part of Param for this. Hopefully this should solve it?. @daviddlv Thanks for the addition. Could you add an integration test for this to make sure it works as expected? Please also update the CHANGELOG.md.\n. @ssalat It still requires some tests and Changelog entry. Interested to take this one over?. @p365labs That would be great.. @p365labs This means we can close this one, right?. @zplzpl Can you share some more data? When did you see this error? What command did you run?\n. Also tried to reproduce this and couldn't. What do you exactly mean by \"not found test dir\"?\n. Closing this one based on the feedback from @Tobion . @axel-tietje Thanks for the contribution. Can you share where exactly you hit this issue? Because MatchAll does this already (just manually). The reason I would like to know more about this is change is to understand if there are some potential side affects.\n. @bitgandtter As @p365labs state, for Elasticsearch 5.0 you need to use Elastica 5.0. Going to close this issue. In case you have issues with Elastica 5.0 and elasticsearch 5.0 please let us know. In case there are still some questions, feel free to reopen the issue.. @oleg-andreyev Thanks for the addition. LGTM in general. I left you a few minor comments.. @oleg-andreyev Merged. Thanks for the contribution.. thx. merged. @nomoa It was a problem with our builds which is now fixed in master. Can you rebase on top of master?. @nomoa Thanks for the rebase. Could also add a CHANGELOG entry?. @nomoa Merged. Thanks for the contribution.. You can pass an array of connections to the clients: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L36 Like this you have multiple hosts. Closing this as I think the above answers the question. Please reopen if not the case.. Which PHP Version are you using? To be honest the best to figure out if the above works is to try it out. As you are still on Elastica 2.2 I assume you were using elasticsearch 1.x before? Especially for error formats you should already have more luck with using Elastica 3.x at least.. Elastica should be full compatible with PHP 5.5. We removed it because we don't test it anymore. All you have to do is to remove the PHP required version from the composer file. As far as I remember, there is even a param to overwrite it. This should work at the moment.. Elastica 5.0 works fine with Elasticsearch 5.0. And that is what I mean. You can use Elastica 5.0 if you do the above changes to the composer file even with PHP 5.5.. Have a look at --ignore-platform-reqs under https://getcomposer.org/doc/03-cli.md That \"should\" work.. @DBARUNNER I think yes, at least I'm not aware of one that doesn't work :-) Closing this issue as I think your initial issues is solved. For questions in the future best use the elastica google group: https://groups.google.com/forum/#!forum/elastica-php-client. Thanks for the feature request. It is definitively something we should add support for. I'm curious what happens if we escape the hole query, means if it will have some side effects. Did you already play around with it?\nFor reference, here the reference to date math in index: https://www.elastic.co/guide/en/elasticsearch/reference/current/date-math-index-names.html. @gskema Correct, sorry I meant URI, or better path instead of query. What I wanted to check is if we could escape the complete path or if there could be some side affects to this. We should probably just try it out.. @gskema Do you plan to open a PR for this change?. Oh, docker and windows ... Code looks good to me. I like that we don't use regexp as regexp can be become complex and inefficient. \nWas no thinking yet about the users that already escape it for reason X. You are right that this could breaking. To make it less intrusive perhaps we should also consider the idea to only apply it to the queries / places where date math can be used instead of the full url. So escaping is explicit to these parts. The main downside is that it requires implementation in lots of different places I assume.. SGTM. Lets try it out and see what effect it will have. Can you open a PR? That makes it easier to discuss the details.. @Zyqsempai There are still some tests which we skip on Travis, but I had a quick look at it and I think the issues is in the tests and no necessarly in Elastica itself. I was thinking to push the 5.0.0 release as we had no major bug reports in the last month and shipping 5.0.0 will also get more hands on the release. \n@Zyqsempai Anything from your side which you think could be an issue for the release?. LGTM. Could you update the CHANGELOG.md with this change?. @mtdavidson Merged. Thanks a lot for the contribution.. Merged. Thanks a lot for pushing an update for this. Should have done it for a long time :-(. Great you got one step further. In case your error is not Elastica related, please close the issue. If not, let us know how we can help.. SGTM. Can you open a PR with this change?. Instead of filters you have to pass queries objects to it. See http://elastica.io/api/latest/classes/Elastica.Query.BoolQuery.html#method_addFilter The effect will be the same. Closing this issue as I think this solves your question. Please reopen if not.. Or filter was replaced with Bool in 5.0: https://www.elastic.co/guide/en/elasticsearch/reference/5.0/query-dsl-or-filter.html\nI think what you are looking for is should and minimum_should_match: https://www.elastic.co/guide/en/elasticsearch/reference/5.0/query-dsl-bool-query.html\nSo if you are using elasticsearch 5.0 the above query should actually return an error. Which ES version are you on? Which Elastica version?. Glad you found a solution and thanks for posting it. Yeah, Elastica docs are not very extensive :-( . @gskema Change looks good to me. Do you plan to add some more code or is it ready to be merged from your perspective?. Oh, don't forget the CHANGELOG.md ;-). For the integration tests, I would put it in the IndexTest.php as I think that is where it is closest to (at least there I would search for it).\nFor the changelog, put it under Unreleased / Added.. @gskema Ping me if you think it is ready to be merged.. @gskema Merged as is. ES 5.x is more picky about nothing having double slashes etc. so I think if something is wrong in the above, we will know it quite soon.\nThanks a lot for this contribution.. @ebernhardson I was kind of waiting until this pops up :-) I think we should make a difference between what is tested and what works. I'm quite confident that Elastica works with PHP 5.4 and 5.5 as you also mentioned above. The only dependencies that require PHP 5.6 are in the dev (like phpunit). \nIf you want to install Elastica with PHP 5.4 or 5.5 you can do that quite easily with --ignore-platform-reqs. I think this should work in your case.\nRequiring 5.6 is not for the code that is already in, but the code and changes that could come. Assuming we can heavily simplify the code because of a library requiring 5.6 we can introduce it without having to wait for a major release. I agree it is unlikely that this happens, but I don't want to exclude it. Also supporting 5.5 prevents https://github.com/ruflin/Elastica/issues/944 from happening.\nHappy to discuss further, definitively worth a discussion. . Thanks everyone for chiming in here. I really appreciate all the comments and share thoughts above. \nInstead of having a very generic discussion where I'm quite confident we don't find a common ground lets focus on the specific project(s) that @ebernhardson faces the issue and lets see if there are solutions for this problem. Perhaps then we can find a more generic solution.\n@ebernhardson Are we talking about wikimedia installations here (just to be concrete about the project)? If yes, didn't know it is already at ES 5.x \ud83d\udc4d . Some ideas here:\n\nIt would be nice if we could define \"officially\" supported PHP versions and version which we know that work but have a * that says not tested. As far as I know, something like this is not supported at the moment in composer.\nInterestingly this seems all about composer, so potentially something that could be brought up with the composer guys as an enhancement. Because this problem is not going away (ever ...).\nIs it a good idea to switch on 5.5 again without testing it (phpunit require 5.6)?\n\nCould we have a special \"release branch\" that has the modified composer file inside? Something like 5.0.0-php55-use-at-your-own-risk or just 5.0.0-php55? If possible I kind of would like to prevent forks if not really needed.. My personal experience on \"release manager\". So far in the history of Elastica I think I created 2-3 times a branch for people to backport bug fixes to an older release. The only request I had is that they open PR's themself. The end result: Not a single PR was ever opened against one of these branches. So if someone is out there that will really take on responsibility of \"backporting/maintaining\", happy to provide such a branch.. Based on the discussions above I suggest to move forward as following:\n\n\nCreate a branch from 5.0.0 with the name 5.x-php55\n\n@ebernhardson will open the necessary PR's to this branch. \n\nThis has the following advantages:\n\nThis will move the burden of maintenance to @ebernhardson and hopefully other collaborators \nIt will not limit any development in master\nNo need to change the testing in master because the phpunit version used only supports 5.6\n\nQuestions\n* Do we need to tag releases or this the branch enough?\nI would like to hear some \ud83d\udc4d  or \ud83d\udc4e  to this.. @merk The reason I propose the above is that so I can use PHP 5.6 features also already in 5.1 or 5.2. This would not be the case if we keep a common 5.x branch. Also I want to make it \"obvious\" that it is a special version people are using based on the naming.\nAlternative suggestion could be to create a 5.0 branch, release 5.0.1 with 5.5 support but not have it in 5.1. Problem with this is, people will be confused when they try to upgrade form 5.0.1 to 5.1.\nIf we have a 5.x-php55 branch I'm also ok to do some release tagging on it in case someone would need it. But I think composer also allows to use branches?. @merk Yeah, it's fun versioning problem :-)\n@ebernhardson Would you need release tags or is a branch enough?. Lets continue in the following way:\n\nI will release 5.1.0 because it contains lots of cleanup which I think would be also nice to have for @ebernhardson \nI will create a branch 5.1-php55 from 5.1\n@ebernhardson Will open the needed PR's to make it compatible against this branch.\nIf needed, I will tag 5.1.0-php55\n\nThis will break semversioning, but I hope people using 5.5 will anyways tag a specific release. I hope it does not break composer .... @ebernhardson The 5.1-php55 branch is available here: https://github.com/ruflin/elastica/tree/5.1-php55 Please open PR's to bring back PHP 5.5 against this one.. @ebernhardson Thanks. I left some comments. I'm closing this thread as I think we managed to \"fix\" it.. @mweibel Thanks for the fix.. Yep, that one was definitively wrong :-( Thanks.. UPDATE: Passing it manually probably does not work because of the _validateOption ... https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Search.php#L278\nIt seems we don't have a constant for it yet, but should be able to pass any option to ->search(...) that you need. https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Search.php\nDo you want to open a PR with a const?. Thanks guys. @Tobion Thanks for taking this on. Can you ping me when I should have a look?. @Tobion Great work. Any chance you could update the CHANGELOG with some notes on the change? A summary as you have in the PR works for me.\n. Ok, let me try to review this PR in its entirety \ud83d\udc4d . Yes I try to reflect compatibility. Is there anything inside which breaks with 5.1? All seems to also work with 5.2: https://github.com/ruflin/Elastica/pull/1245 If we do 5.1 I agree we should have elasticsearch first set to 5.1.. @Tobion Merged \ud83c\udf89  THANKS. @ilanrivers Thanks for the contribution. Could you also add a quick integration test for this one?. I think it should be in https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/SearchTest.php There seem to be at least some tests which cover other constants.. I'm ok with merging it. But we need a CHANGELOG entry. Either @ilanrivers has time to do it or @Zyqsempai or @Tobion perhaps have the time to do a follow up PR with the CHANGELOG? Or I can do it next week ... @Tobion Feel free to merge it.. No ETA but definitively something I can push forward :-) Put it on my TODO list.. @XWB I assume you saw https://github.com/ruflin/Elastica/releases/tag/5.2.0. Could you share the CI error you get? What is resetter doing?. Could this be related to https://github.com/ruflin/Elastica/pull/1277 ? . I think the problem is that you check for request calls but now requestEndpoint is called. TBH this kind of test is quite new to me :-). @Tobion Merged. Thanks.. @iamfinky Which elasticsearch version are you using? Just want to make sure you use compatible versions.. Yes, these version are compatible. What you can do is just create Elastica/Query/BoolAnd() and pass it to setFilter method.. The problem is that currently there is not really pipeline support in Elastica and we should definitively add it.\nAs far as I can see, even though mapper attachment is deprecated, it should still work. At least it does in our tests: https://github.com/ruflin/Elastica/blob/4666078db27d2574171c9fe1bba5d7782b2ae7cf/test/lib/Elastica/Test/IndexTest.php#L215. @nomoa Thanks for the fix.. @Tobion Can you rebase?. That would be our first \"hard\" break with PHP 5.4, right? Not that we should not do it, more good to know.. @Tobion Did you do all this changes manually or is there a tool that does this automatically?. @Tobion Thanks for the cleanup. Merged.. @thePanz LGTM. Thanks. @ebernhardson Do you want to readd the 5.5 target in the .travis file so all PR's against this branch get also tested by travis?. @ebernhardson Thanks, merged. Not sure why these commits didn't trigger travis :-( I checked the travis config but it should build all branches :-( Lets see what happens with the next PR.. @ebernhardson Posted to early. I think I found the issue in the .travis.yml file: https://github.com/ruflin/Elastica/blob/master/.travis.yml#L6 Can you also update the branch here?. Which version of Elastica and Elasticsearch are you using? It seems more like you get an error from elasticsearch directly.. This PR should probably go against the php55 branch and not agains master?. Works. Thanks.. I pushed the 5.1.0-php55 tag here: https://github.com/ruflin/Elastica/tree/5.1.0-php55 I hope that works.. I think the idea here was to set a default. Will it have any affect on your querey? Does it also reset if you set a size before? . LGTM. Could you update the CHANGELOG?. @ebernhardson Thanks. Merged.. @XWB Thanks for the PR. I think I understand the problem now better. It becomes a problem if count is used as the query itself is modified. Shouldn't we use a count query (https://www.elastic.co/guide/en/elasticsearch/reference/current/search-count.html) here if fullResult is not set? I'm curious why we introduce fullResult here anyways.\nCurrently at Elastic{ON} so will not have time this week to dig into this. . @XWB Had a quick look at it, and it seems we should use a _count query if fullResult is false. Or do I miss something here?. @XWB Can you also update the CHANGELOG.md?. @Tobion Do you want to have a look before merging?. We should probably take a more general look at this problem as the query builder is kind of unmaintained. As Elastica and ES are now in sync again related to versions I'm not sure if it makes sense to keep the \"Version\" feature in place but only support the version it is for and remove all other methods. I remember @Tobion also had some thoughts about this.\nIf we need a quick solution, we should probably go for option 1. But if we have the time, lets take a step back and have a general look at the query builder future. More thoughts on this would be appreciated, especially as I never really use the query builder myself and I'm interested to hear more in the use cases around it.. Looking at your examples above I agree that we should keep the query builder, but clean it up. We must make sure it is also tested to if we change things they don't break.\n@Zyqsempai Will merge PR #1269 and looking forward to more contributions related to QB ;-). Let's make sure we do not discuss in this thread about good or bad coding practices because that is something which each engineer has its own perspective on. There are quite a few users out there which use the query build which is great. They way I personally position the query builder is for people that know the json representation in ES of a query and want to quickly write it in php (kind of).\nThe main thing I worry about query builder is the maintenance part. How much overhead is it to keep maintaining it? How can we assure it keeps working / is tested? Cleaning up the query builder code seems to me a good step in the right direction.. @Tobion Merged. Thanks.. Closing as https://github.com/ruflin/Elastica/pull/1271 was merged.. @cobak78 Could you update the changelog?. @cobak78 Merged. Thanks for the contribution.. :-( Missed that one. @cobak78 Could you open a follow up pr?. @cobak78 Correct.. @Tobion Thanks, merged.. This was solved in later versions by moving tests under autoload-dev: https://github.com/ruflin/Elastica/blob/2.3.1/composer.json#L33 2.1.0 is quite an old version. I would recommend you to update to a more recent 2.x version.. @ewgRa Could you also update the CHANGELOG?. Fully agree on your points. The one I was referring to was this one here: https://github.com/ruflin/Elastica/pull/1275/files#diff-b94c222b7bfe828e265627016909c3adR105 The reason is that it requires to add the index which happened before \"magically\" in the request. I'm thinking if we should add requestEndpoint method in all the places where we have a request method to do the same magic (not part of this PR). \nAn other good thing about using endpoints as you started to do in this PR is I think in the long run, we will not need our own request method anymore and will fully depend on the base client request layer.. @ewgRa +1 on everything you stated above. I also don't understand yet the long term implication on what we can do with all that in the long term, I only know it allows a lot of great things to happen.. My suggestion is to move forward with what we have currently in the PR as it is already a huge step forward. For the above I'm glad you opened the PR so we can discuss it further.\nOk for you if I merge it as is?. @ewgRa Merge. Looking forward to the follow up PR's and I'm especially interested to hear more about the transport layer.. @nomoa Merged. Thanks for the contribution.. @ewgRa Merged. Thanks.. TBH I haven't checked the code on the Elastica for quite some time as nowadays most people use composer to install the dependency which does the magic for you. One thing I spotted above, is that you have '/php_scripts/Elastica/' but I think this should be '/php_scripts/'?. Got it. I kind of blindly assumed it fails because it cannot find the file. But it failed because of missing dependency. We definitively must update our docs. If you have time for a PR https://github.com/ruflin/elastica.io ... ;-)\nGlad to hear you like the library.\nI'm going to close the issue as I think it was resolved.. We currently don't have the sum_bucket aggregation as an object. You can always create a query / aggreation with a raw array object: http://elastica.io/example/raw-array-query.html\nBTW: It is fairly easy to add a new aggregation. See https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Aggregation for examples. Interested in opening a PR? :-). You should be able to add raw parts by using setParams or / and setRawParams, but I never tried to for this use case.\nPR stands for Pull Request. You could fork the Elastica repository and open a Pull Request with this new feature.. Which version of Elastica and Elasticsearch are you using?. We have some tests for exists() here and they seem to be ok: https://github.com/ruflin/Elastica/blob/master/test/Elastica/TypeTest.php#L899 Can you be more precise which versions you are using. Latest changes on a daily base ;-). Thanks for the change. LGTM. Could you update the CHANGELOG.md?. @nicklaw5 Thanks, merged.. Thanks for the PR. This is getting interesting. I had a quick look to better understand how collate works and it requires a Template Query (https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-template-query.html) which is deprecated in 5.0 and replaced by a Search Template: https://www.elastic.co/guide/en/elasticsearch/reference/5.3/search-template.html\nThis makes the whole thing a little bit more complex then I expected as it is not just a standard query and we don't have support for template queries yet. Seems like we should add support for it first?. +1 on separating this out in a different Github issue / PR. I think the TemplateQuery would extend AbstractQuery. I'm not so sure about the Search Template as it seems to be separate request. \nThe easier path definitively seems to be going with TemplateQuery first for the 5.x releases and potentially change it for 6.0 in case it is removed.. @vgaldikas Keep me posted on this one. Best open a new github issue for it to have the discussions and questions directly there. Happy to help.. This is currently not supported in Elastica. The plan is that elastic will use php-elasticsearch on the transport layer, means as soon as this is the case this feature automatically is also available in Elastica.. For the _all it depends on your index mapping.\nFor the above you should probably set minimum_should_match: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html Does it work if you use must for only the content?. Yes, this query is currently missing. Interested to add is a contribution?. You can always use raw query for that in Elastica: http://elastica.io/example/raw-array-query.html\nBut we should definitively add support for this on an \"object\" level in Elastica. Interested in opening a PR for it?. I don't remember that someone opened a PR to add this feature, so it seems to be still not available.\n@elshobokshy If the above works for you, you can just use setParam on your query object and don't have to use raw queries.. * Which elasticsearch version are you using?\n* What is the content of your $row variable?\n. Glad you found a solution. Will close the issue. Please reopen if you think it is not closed.. It should be possible to add filter_path to the valid options here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Search.php#L280 This would allow to pass the filter_path through the options param in search(..., ...). Interested to open a PR for it?. @mhernik Awesome: https://github.com/ruflin/Elastica/pull/1292 Read the issue first before I saw the PR :-). LGTM. Could you update the CHANGELOG.md with this change? And any chance you could add an integration tests that covers the filter_path? Check out the file SearchTest.php for some examples.. @mhernik merged. Thanks a lot for the contribution.. @nickygerritsen Thanks for reporting. I think you are right. Could you open a PR with a bug fix?\n@ewgRa FYI. @nickygerritsen Could you put a note in the CHANGELOG.md file?. @nickygerritsen Thanks for the fix\n@nickygerritsen @ewgRa Do we need some follow up PR's to fix more stuff?. @Tobion Yes, that is possible. Put it on my TODO list for next week. Hope that works.. Here you go: https://github.com/ruflin/Elastica/releases/tag/5.2.1. Oh, good point :-( Should we add this to the CHANGELOG? Thanks for fixing it in the bundle.. Servers was removed / deprecated a long time ago (2012-12-23). It's still in the code for BC reasons but TBH should be removed in the next major release. Use connections instead.. Thanks a lot for this PR. I know it's quite a bit of work to get this all right and green.. Does this only apply to Search.php. Did you check if other files have the same issue?. Merged. Thanks for checking and fixing this.. @nomoa 200% agree. Could you open a PR for that?. @nomoa Merged. Thanks a lot for the fix.. Interesting. Thanks for the fix.. @mtdavidson Thanks, merged.. The alternative would be to enable it for all tests and use the default username / password. Like this we also test the authentication. This will probably work well in 5.x. But in 6.0 probably random passwords will be introduced which will make this much more complex.. @mtdavidson Can't think of anything holding us back going to 5.3 or event 5.4. Perhaps you can do 2 PR's. One updating the docker images to 5.4 and an other one with the Matrix part. Like this we know in case things break with 5.4.. @giovannialbero1992 Seems like you have changelog conflict :-(. @giovannialbero1992 Thanks. merged.. LGTM. Can you add a changelog entry?. thx. Which elasticsearch version do you use? Which Elastica version? If you use version 5, I strongly recommend you to use the reindex api instead: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html \nYou bring a good point, that now that we have reindex, this should be removed from Elastica.. Awesome, thanks.. Closing as https://github.com/ruflin/Elastica/pull/1315 was merged.. @pengyue Thanks for the fix.. @giovannialbero1992 Thanks for your contribution.. @alekitto Good point. Interested to do a contribution? :-D. I remember we discussed this in an other PR / Issue recently. Could you link to the issue?\nAlso this requires a CHANGELOG entry as it is a breaking change and probably you have to adjust the tests.. @tastendruecker Any update on this one?. Thanks for the fix. Could you add a changelog entry to the changelog file?. @francisbesset Merged. Thanks for the contribution.. https://github.com/ruflin/Elastica/pull/1320 is now merged. This probably needs rebase now.. @alekitto In the diff Builder.php shows up and I'm not sure why?. BTW: Could you also add an entry to the changelog?. Argh, it seems some things got mixed up in the Changelog :-( The reason an additional entry is needed because just yesterday happened a release. So this goes into the next release.. I just pushed a change to the CHANGELOG to bring it up-to-date. Make sure to get the most recent one in before updating it.. Wow, you not only added 1 span query but all of them. Something seems to fail with the tests.. @alekitto @mhernik Could it be that the two of you are working on the same thing at the same time? https://github.com/ruflin/Elastica/pull/1319. +1 on merging the work. PR to @mhernik branch sounds like a good idea to me.. @mhernik @alekitto Please ping me when you think this is ready for review.. @mhernik Could you check the review above and squash the commits into 1?. @mhernik You should be able to rebase. But if that becomes too messy, just open a new PR.. @mhernik It looks like the PR still only contains your changes, right? So if I squash it it will be only 1 commit afterwards. But you should be able to rebase too I think if you want to have it clean in the PR.. @mhernik I merged this as I really wanted to have it in as I plan a release the next hours / days. I hope this works for you.. @mhernik Do you know what is going to happen with https://github.com/ruflin/Elastica/pull/1319. @mtdavidson I restarted the build as the xdebug failures were not related to this change. But now there seem to be some other problems.. We introduced the content type here: https://github.com/ruflin/Elastica/pull/1302 Perhaps @nomoa can also comment here. Reverting this change will probably mean more deprecated errors logged on the elasticsearch 5.x side but will break it with 6.0\nAbout setBody: Can you link to some code where this causes issues? \n. @nomoa Thanks a lot for investigating this and sharing the details.\nOne thing that is not clear to me yet is how many place do we have where Elastica sends a string?. +1 on moving away on using strings in all places. I also assume endpoints so far are rarely used and the above is more a \"bug\" on our implementation side.\nAnyone wants to do a follow up PR to fix the other \"problems\"?. @mtdavidson Merged. Thanks a lot for the work on this one.. @mickaelandrieu Not sure what statement I should make here ;-) I do plan a release in the near future but obviously can't guarantee that it will not contain any breaking changes. As there will be some breaking changes for 6.0 I probably will branch off before we introduce the first breaking change. You should be save with master until a 5.3 or 5.4 release is out, but obviously at your own risk ;-). @mweibel Thanks for bring this up. I agree it's a bit bad that this will probably break BC. +1 on implementing it in a more \"flexible way\" and allowing setParam or _setRawParam to be used as for most other Elastica objects.\nI'm ok with breaking this in a minor release as think the benefit will outweight the pain we will cause. But we will have to add a bold \"remark\" about it.. @p365labs +1. @daviscaics Great to hear you are interested in contributing. For the examples best have a look at the Query objects: https://github.com/ruflin/Elastica/tree/master/lib/Elastica/Query They all indirectly extend Param: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Param.php. LGTM. Could you add a changelog entry?. Thanks, merged.. @nomoa LGTM. Could you add a changelog entry?. @nomoa Merged. Thanks.. The 5.3 release went out yesterday which should include this bugfix.. Each query type should have the method setParam(key, value). Could you try to use this?. @Nanocl Happy to accept a PR to add support for SetSlop. Most of these functions are only nicer proxies for setParam(...).. Elastica/Query::setSort should work for that. But you have to pass the full array to it. You could use some sub objects in your array for example for the line part I think. Haven't tried it.. I think you are looking for something like Fuzzy queries? https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html If oyu know what queries your looking for in elasticsearch, using it in Elastica should be quite forward. Closing this as I think it's not Elastica related, but please feel free to open.. Not sure I can add anything to the above message? Did you switch the method? Or perhaps I miss the point?. In the error you posted above it states:\n\nDeprecated: Elastica\\Query::setMinimumNumberShouldMatch() is deprecated and will be removed in further Elastica releases. Use Elastica\\Query::setMinimumShouldMatch() instead. \"\n\nSo you should replace setMinimumNumberShouldMatch with setMinimumShouldMatch. Ok, so you are using mediawiki. And mediawiki has Elastica as a dependency. It's up to mediawiki to switch to a newer dependency. The reason it is shown has to do with your error_reporting settings which you should adjust: http://php.net/manual/en/function.error-reporting.php Closing this as it is not an Elastica issue. But you can still continue the discussion if you have further questions.. Yes, we should remove this from the lib. PR's are welcome ;-). @thePanz I merged the above PR from @p365labs Could you rebase on top?. @thePanz Merged. Thanks for the ping.. @p365labs Thanks a lot for this intermediate fix. Didn't have the time yet to look into it.. This is great. Thanks a lot for taking care of this.. Could you please update the CHANGELOG.md file?. @metamaker Merged. Thanks for the contribution.. Which version of Elasitca are you using with which version of elasticsearch?. The reasons I'm asking is because this is a change which was made in ES. So if you use the wrong version of Elastica with elasticsearch, you will see the above error. I assume they are using an older version of Elastica.. Closing as not needed anymore. Work is already in progress.. Nice, see my comment.\nUnfortuantely travis did not build it as I told travis to only build master as it would otherwise build my branches always twice.. @p365labs Open a PR directly against master so we see the errors.. Seems like most breaking tests are type related as expected :-). Going to merge this as the two comments above can be still discussed / fixed in a follow up PR.. @p365labs Obviously thinking of this 10s after I merged, but we should update the CHANGELOG for this.. @p365labs Thanks. As these were removed in 6.0 I think we should remove them from the code base as the next release of master is probably going to be 6.0. WDYT?. Curious to see what you are up to. The part I worry is that this could make our test suite quite a bit more complex. It would mean you have to create 5.x indices and then upgrade to 6.0.. In general 5.x indices are compatible to be migrated to 6.x but all indices created on 6.x will only support 6.x feature for example like no types. Agree to move this discussion to #1340 and create a separate github issue on what needs to be done.. Closing this issue as I think this is answered. Please reopen if this is not the case.. LGTM \ud83d\udc4d \n. Done, see my comments there.. @p365labs Thanks for all the work on this so far. \n\nWe definitively have to update to the most recent version of elasticsearch-php as soon as the changes are in from @polyfractal I don't expect anything major to break on our side.\nWe should also drop support for 5.x especially as we rely on the official client. I see Elastic in the future mainly as a high level client which is on top of the official client, so it fully relies on it. We should follow the official client model. Not keeping it compatible will also simplify our code base. At least that is my point of view :-)\n. @p365labs Agree on working with dev-master. I was even thinking of making that default in the master branch. The only problem it will cause is that I will have to start with release branches. Nothing really bad but I like the lean release process I have now :-) In any case, that is a decision we can make later. Lets switch it to dev-master.. That is great. Really appreciate all the work you put in this so far and the very high quality of your PR's. My main job is hitting merge :-). Looking at the still skipped tests it seems that most of them are related to using more then 1 type in the tests: https://travis-ci.org/ruflin/Elastica/jobs/274954547 Based on this my assumption is that the code base itself is fully compatible with ES 6.0 but our tests are not fully up-to-date.. @p365labs With the last PR closed, it seems we can close this one?. @p365labs Was thinking the same. But I need to check with @polyfractal if he plans any prerelease like a beta1?. Ah yeah, missed that. I suggest we do then a 6.0.0-beta1 release? Any other PR's we should urgently get in?. Agree. The 7.2 would be nice to have in but before or after beta1 does not really matter. Will try to find some time to push a beta1 release today/tomorrow.. Closing this issue based on the above comments. Release is out: http://elastica.io/2017/10/05/release-6-dot-0-0-beta1/. Decided to already merge this as all of the comments we can fix in follow up comments.. @p365labs Sorry, next conflict :-(. @p365labs CI is green, but the usual changelog conflicts.. I like it the way we have it and not fixing things for the dev. The more magic we do, the more likely it is to break :-). For the PHP 5.6 issue. I agree that it is kind of incosistent, but I already see some push backs happening. In general my approach is to remove compatibility if a code changes require it. If there are things in elasticsearch-php that do not run under 5.6, I'm ok with dropping it. But if it's just the composer file that says it's not working, I would keep our tests around. Officially I would still say we only support 7.0 but we still test with 5.6 because we get it kind of for free. Like this we also immidiately know when we break it can can leave an additional note in the Changelog.\n\nThere is also a difference between the official client which is commercially supported, so stating there it works with 5.6 would mean it must be commercially supported. That is one of the nice things of Elastica as it is kind of a grey area at the moment and we can do these tricks as there is no commercial support.\nTo move forward I'm also ok to drop travis build for now for 5.6 and do a follow up PR to figure out what goes wrong, in this PR I would only not remove the Dockerfile needed for 5.6 and the tests.. Where did you find this link?. Ah, got it: The link has changed to: https://github.com/ruflin/Elastica/tree/master/test/Elastica\nThis is the file that would need fixing: https://github.com/ruflin/Elastica.io/blob/master/source/examples/index.markdown. Did you try to run the query manually against ES and check what the log output is?. Thanks for all the details. Will let you know if I find time to also dig into this.. Fully agree on the conclusion of this adventure that we should remove the detailed tests and let it to Lucene to make sure it works as expected.\nIt think it is a general problem we sometimes have that our tests are too detailed. On the one hand that is a very positive thing as it make sure things work exactly as they should and I often use for developing new features. But then if things change we need to update all the tests. Challenge is to find the right balance.. Nice fix. I'm kind of surprised that true and false are converted to just 1 and 0 by default.. :-(. @p365labs Usual rebase fun. Seems like one test contains more then one type:\n1) Elastica\\Test\\ClientTest::testEndpointParamsRequest\nElastica\\Exception\\ResponseException: Rejecting mapping update to [elastica_elasticatestclienttestabfd] as the final mapping would have more than 1 type: [foobar, test]. Yay, more code removed :-). Guest what ... ^. I like the strict typing of array. This will also show developers and error very quickly which hopefully pushes them to read the changelog :-). I like the idea as it will make devs detect problems much earlier. But it will definitively break all older versions (which is probably fine looking at http://php.net/supported-versions.php).. Which Elastica and Elasticsearch version are you using?. Using Params as you did in this PR LGTM. I initially created it to reduce code duplication in Queries/Filters but I think we can apply it to almost any Class which needs to be transformed from PHP Object to json at one point.\nPing me when you think it's ready to be merged.. @p365labs Will have a look pretty soon. A bit under water these days ;-). If we do BC breaks in Minors, there is normally a good reason for it. For example for #1334 this was deprecated since 0.90 in elasticsearch and removed in 5.0. As Elastica states it's only compatible with 5.0 it was more an oversight to have the function still in. So this only broke code if someone used Elastica with an unsupported version of Elasticsearch as with 5.x this would not work from the Elasticsearch side.\nIf I remember the BC break in 5.1.0 correctly it was needed to support some new features and only applied to users which used the AbstractScript type and extended it. As we tie Elastic release to the elasticsearch release, this was a trade off to way 12 month for the 6.0 release or do a small BC break. Did we break semantic versioning with this? Probably yes but I think here the benefits outweighted the potential downsides.. @merk For Elastica tying the ES version. I went forth and back on this. Initially Elastica was tied to it, then I decoupled it with 3.0 but then brought it in line again for 5.0. Having it in sync with the ES version makes explaining which versions are compatible, tested against etc. much simpler and I'm trying to keep the project as lightweight as possible. Having it in sync made my life easier :-)\n@1ed I'm happy to change the line on top of Changelog to \"tries to adhere\" to Semver.\nSo far I'm not aware that there are users which got affected by our breaking changes in minor. As this is popping up now I assume @1ed you were affected by one of these?\n. I think there are 3 discussions here:\n\nShould Elastica be tied to the Elasticsearch version and the elasticsearch-php client\nIf Elastica is tied to ES / ES-php, which versions is it tied to\nShould Elastica fully confirm to Semver.\n\nFor 1. the answer for me is yes, at least for the major versions. For minor / bugfixes happy to have a deeper discussion on what the implications are. \nFor 3. as stated before, I'm ok breaking semver in some cases if really needed. TBH as we follow Elasticsearch major versions, Elastica has become more stable and there are more Elasticsearch major releases now, I think it's becoming more and more unlikely that we actually have to break semver in the future. The comment here (https://github.com/ruflin/Elastica/pull/1432#discussion_r159565020) from @curry684 is interesting related to this. If I understand this correctly, removing features is ok if the method stays around but potentially throws an exception? For me so far I would have treated that as a breaking change.. There is definitively the chicken / egg problem about which you should update first, server or client. Unfortunately the past has shown each major had breaking changes which had do be fixed in Elastica to make it working. The nice part of Elastica that it has a proxy for most things in Elasticsearch is also the biggest problem, as every small breaking change in ES is a breaking change in Elastica. The elasticsearch-php client only provides the raw functionality and lets it up to the user to create for example all the queries. Like this the change on the user side is breaking but not on the library side which is nice, but the users will have to figure out himself that something broke in his query. So my past experience is that there are potentially more major Elastica releases then major elasticsearch releases. @greg0ire Still, it would be great if we could have this with a reasonable effort.\nThe reason I state very early in the discussion that I'm willing to break semver sometimes as I think the decisions we make must be on the one hand best for the user but also for the library and it's dev to make sure it stays maintainable long term. @curry684 I really appreciate your approach here and your suggestion on how we should have solved it better.\nMy suggestion to move forward on this that in case we have a future PR which would break BC without being a major again we come together and find a solution for this specific case.. @curry684 @greg0ire @1ed Looking at https://github.com/ruflin/Elastica/pull/1422 I was wondering what your take on this one is? It removes some code which was already deprecated in 5.x but we forgot to remove it for 6.0. I think most of it will not even work anymore with Elasticsearch 6.0. If we merge this into master does that mean it we could not make any 6.x release with it anymore?. We have now one of these issue where the question is if it's a break or not. Would be great to get some comments on it: https://github.com/ruflin/Elastica/pull/1506/files#r197741395. Thanks for doing the switch. This was actually one of the very early lines of code in Elastica :-). Changelog .... @kukulich Thanks for reporting. Always good to have people testing early with future versions.\nI'm ok with getting a fix in before GA is out as I assume it will not be a breaking change?\n@p365labs Thanks for starting the work on this.. @XWB Sound reasonable to me. Do you want to open a backport PR?. @richardfullmer Is this the same issue as in https://github.com/ruflin/Elastica/issues/1429 ?. @Joozty Docs are in this repo: https://github.com/ruflin/elastica.io. Wow, that PR is quite an effort on cleaning / fixing the tests. Thanks a lot.. @damienalexandre Thanks for the fix.. @p365labs Pretty strange for this error to show up on this PR TBH: https://travis-ci.org/ruflin/Elastica/jobs/283640094#L2018 Not sure if that is a flaky one? Will still move forward with merging.\n. Is that what you are looking for? http://elastica.io/api/latest/classes/Elastica.Search.html#method_count. @StefanGla You should be able to use setRawQuery to set the params: http://elastica.io/api/latest/classes/Elastica.Query.html#method_setRawQuery But it would be pretty nice to add support for it with functions. . How much memory do you have allocated for PHP? Could it be that you have some large queries you send to ES? Queries that grew over time or that you have some large responses with lots of entries? Allocating more memory should be a short term fix but you should have a closer look from your above error message to see if there  is a stack trace with more details on which line in your code causes it.. Which Elastica version are you using?. @mjanser Thanks for the PR. Any chance you could add a test for this?\nI'm ok with having this first in 5.x but would really appreciate if you could also open a follow up PR with this for 6.0.. I agree this is not optimal. If I remember correctly the history is that somehow there was a change on the ES side that required us to introduce a second method to not break BC. Any suggestion on how we should fix it? As 6.0 GA is not out yet, we can still do breaking changes ;-). I'm not sure if we can cover the different cases with one function. But perhaps we could improve the naming of the functions to make it more obvious what they do?. Thanks for the PR. Any chance you could move the innerHits change to an other PR?\nFor the xdebug part: How does it help that xdebug is already part of Travis as these tests run inside the docker containers?. PR merged. For the xdebug issue: As far as I remember xdebug is needed for the coverage report, so I think we still need it but we should fix the above issue. Perhaps it's just an old version? Haven't looked at xdebug in ages.. @mjanser Merged. Thanks for the 2 PR's.. @mjanser TBH so far I wasn't planning a release as I think that is the first PR agains the 5.x branch in quite some time :-) Do you need a release or could you also use 5.x directly? . Did you have a look at the existing Elastica test suite to compare on how it is handled there?. Thanks, merged.. Awesome. Could you add a line to the changelog.md file?. +1 on removing it. I was at first hesitant to remove it as Reindex in ES did not support reindex from Remote. But now it does so this functionality is much better to be used from ES directly. https://www.elastic.co/guide/en/elasticsearch/reference/6.0/docs-reindex.html#reindex-from-remote. @Koc Interested to open a PR with this addition?. @Koc I should known, sorry :-( Too many features :-D Thanks for the feedback on the issue.. I like option one as I prefer that CI runs today and in 2 months should be the same.. @p365labs Argh, sorry. Just saw this one too late after doing https://github.com/ruflin/Elastica/pull/1409. But I think yours is nicer, could you rebase?. Strangely I don't see a reopen button. Did you delete the branch? Just open a new PR :-). @p365labs Anything you can think of that we should get in before merging this one and do the release?. @p365labs Great. Lets wait for the CrossIndex removal PR then.. @p365labs That looks much better, but now you need to rebase :-). Thanks, left a minor comment on #1411 . @p365labs Could you add a CHANGELOG entry?. I'm really undecided on this one. I'm aware PHP 5.6 is EOL since quite some time, but that does not seem it's still heavy used (would be interesting to have some numbers on the usage). I really like all the improvements we can do with just supporting 7.x like type hinting or also move to more recent dependencies like in this PR. On the other hand I'm asking myself how many users do we leave behind? So far Elastica is not tested against 5.6 but I think it still works with 5.6. The moment we introduce the first type hinting it will not work anymore. \nHow many users will have PHP 5.6 and want to use Elasticsearch 6.x? Is there a correlation between users with old PHP version and not using the most recent version of Elasticsearch?\nFrom a sole development perspective I think we should do the step, remove the old methods, get new version of PHPUnit in and use type hinting and all the other shiny new things.\n@p365labs @gabriel-caruso Any thoughts from your side?. In general I agree that we as library / framework devs can also slightly push users to upgrade to new versions. A quick check on symfony showed the current version is still on 5.5.9: https://symfony.com/doc/current/reference/requirements.html Also there is a slight difference here between libraries which work on their own and libraries that have further external dependencies. In case of Symfony you can't use the most recent 4.0 features if you don't upgrade. In case of Elastica you can't use Elasticsearch 6.0.\nHaving said all that, upgrading to Elastica 6.0 requires to change your code in most cases, means deploying a new version, testing it and putting it then in production. In theory (which is never true) users should upgrade to PHP 7.0 in such cases as the old version only gets security fixes.\nEspecially as php-elasticsearch only supports 7.0 and we depend on it, +1 on going all in on 7.0. It helps us to improve the code base too which is good.\nAny other thoughts?. @gabriel-caruso I suggest we move forward was following\n\nOpen a PR which changes Travis and removes the PHP 5.x stuff with a title similar to \"Remove 5.6 PHP stuff and support\" and mention in the description above. Reason to have in a PR is that there we will get all the message from people which are not happy with it and people that keep an eye on the repo can comment there. I prefer not to hide it in \"PHPUnit update PR\". \nThen do follow up PR's to remove all the stuff. @gtavasoli Which version of Elastica does CakePHP use?. Thanks for the PR. I wonder if it had any side effects that we tried to escape it? All tests are still green ...\n\nCould you update the changelog?. @martin-georgiev Thanks a lot for the contribution.. What is the Elasticsearch version you are using? Looking at the PR I have the suspicion that you use incompatible versions and getting this in would break things with other versions. But need to have a closer look.\nFor the release-2.3 branch it's probably not a good idea to use this one. If we allow such backports we should create a 2.x branch from the most recent 2.x tag we have. The release-2.3 branch is more a left over from me. If we do a 2.x branch, would that be enough? If possible, I would prefer not to do a new release for such an old version as TBH I do not know what all the above could break.\n. I remember we were going forth and back on this. What I think was the conclusion:\n\n2.x of Elastica supports 1.x of ES\n3.x of Elastica supports 2.x of ES\n\nFor the exact versions its important to check what is stated in the README it \"should\" be correct or is at least the one it was tested with. \nES 1.x has a flat error string and ES 2.x has the nested object. So if we backport this to 2.x it MUST work with both and as getError calls here getFullError I think this is a breaking change. As it is not recommended/supported to use Elastica 2.x with ES 2.x I'm not sure we should make this change as other things will break. If we go down this route, we must get the for sure the CI running first and I think we should then only update the branch but not tag it.. @jenkoian If we can make it BC compatible, I think I'm ok in getting it into a branch. But I'm hesitant to do a release. It would be the last release in a major and potentially be the one most used. So far it seems the current release works well so I don't think I should change it. Would be a branch version enough for you?. Works for me. So what I plan is taking the 2.3.1 tag and push a 2.x branch against which you can open the PR. ok?. @jenkoian There should be a 2.x release branch now. Can you open the PR against this one? I think Github recently introduced to edit the base branch of a PR, but never tried it .... @jenkoian Better rebase and get rid of the commits. Not sure what exacty Github does in the background.. It would be great if you could add a title \"unreleased\" as I also have in master.. Merged, thanks for following through with this. Fingers crossed it does not break anything. My knowledge of the 2.x branch is a bit outdated ;-). Could you update the CHANGELOG and add a functional test if possible?. @fvilpoix Merged. Thanks a lot for the contribution.. I think there are 3 different things here:\n\nRemove of CI things which are required for 5.6\nImprove code because we don't have to support 5.6 anymore and can use 7.0 features\nRemove deprecated functions / methods\n\nI suggest we do not mix the 3 and do separate PR's for each. In case tests exist for 5.6 that are not needed / run on any platform, they should be removed when 5.6 docker images etc. are removed.. @carusogabriel Thanks a lot for splitting it up. Really appreciate it.\nBased on the comment\n\nIn case tests exist for 5.6 that are not needed / run on any platform, they should be removed when 5.6 docker images etc. are removed.\n\nwe should remove Null and Bool stuff in this PR instead of https://github.com/ruflin/Elastica/pull/1422. . @carusogabriel Thanks a lot. Merged. Could you rebase the other two PR's? Will probably only get to it next week.. @p365labs Feel free to have a look at the other 2 PR's and merge if looks good ;-). @p365labs Minor comment: squash / merge or whatever it's called in the future to not have the merge commit in the history: https://github.com/ruflin/Elastica/commits/master. @p365labs Nothing wrong happened here, it's only clicking a different button and personal preferences. Default on Github is with the merge commit. I normally use squash merge as I assume 1 PR = 1 commit in the end.. @carusogabriel Could you rebase on top of master? I just merged https://github.com/ruflin/Elastica/pull/1431. @carusogabriel Just saw now that you pushed a new commit. Could you also add a changelog? And it seems to break travis somehow.. @carusogabriel Can you have a look at the comment here https://github.com/ruflin/Elastica/issues/1374#issuecomment-366554090 from @greg0ire to check into which \"category\" your changes fall?. @carusogabriel Can you share some background on the closing of the PR? . @carusogabriel I see. I was happy that you took that one on :-) If you find time, perhaps you can split up the PR into the parts that you got working so we can get at least these in?. @franmomu Haven't checked the 5.x branch, but if it's not there, it should also be added there. Can you open a PR?. @mkosiedowski Thanks for the fix. Could you add an entry to the CHANGELOG.md file? . @mkosiedowski Merged, thanks.. @stof You mean something like 6.0.1 or 6.1? Yes, I just didn't get to it yet. Sorry about that :-(. @stof Elastica is not compatible with ES 5 (or at least not tested). There are quite a few things currently backported to 5.x, also the 7.2 part is already done: https://github.com/ruflin/Elastica/pull/1428. Thanks for the cleanup.. I wonder why in your case post_filter is set at all? I would expect the if statement to end after the first comparison because it is not set. Are you doing anything with PostFilter?. Oh, I thought you are using 7.1 as you mentioned in your initial PR description.\nWe removed compatibility for 5.6 recently. Seems like we forgot to update the Website with this. Sorry about that. \n@carusogabriel Interested to also take this one on? It's in the Elastica.io repo.. That should help: https://github.com/ruflin/elastica.io. For the API you can even put the version you are interested in into the URL: http://elastica.io/api/5.0.0/ . Could you add a line to the CHANGELOG? I restart travis as the failure seemed to be unrelated.. @p365labs Not sure if the failure here is a new issue we have on travis?. @akadko Could you rebase on top of master? I just merged https://github.com/ruflin/Elastica/pull/1431. @akadko Thanks, merged. Normally I would ask for some tests but I think here it's pretty straight forward as it uses existing methods. If you get some time to add tests in a follow up PR I definitively wont say no ;-). @akadko Great to hear, looking forward to it.. Thanks, merged.. @XWB So far I didn't plan a release at all as I assume people will just use the 5.x branch. Would a release be useful?. @XWB Added to my todo list. Will try to find time for it.. @XWB Release is finally out .... @rafaelschmitt Thanks for digging into this and provide all the details. I think I now fully understand why it happens but not 100% sure about the solution yet.\nIn Elastica in quite a few places we keep things as object until they they are converted to an array in the toArray functions.  That is also the case here with the post_filter as we set it here as an object: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L427 I even wonder if it worked previously? So perhaps this even fixed a bug :-D\nI understand the need for your request to set it \"manually\" as a pure array but I wonder how we should accomodate for it in a more general way because the same problem can arise with other toArray methods if params were set manually.\n@p365labs as you made the change, perhaps you can share some more thoughts?. @rafaelschmitt To move forward, I suggest you open a PR with the \"fix\" as the above is kind of a breaking change on our side we didn't intend to do. We can afterwards still figure out a more generic way on how we deal with these things.. Change LGTM. There seems to be an issue with our travis builds at the moment not related to this :-(\nDid you run make lint locally and there are 0 diffs at the moment?. @carusogabriel Could you rebase on top of master? I just merged https://github.com/ruflin/Elastica/pull/1431. Yeah, if you haven't setup docker yet, it will make your life harder, even though this was intended to make it easier for people to run to not have to install the libs etc. I will run it locally to see what the output will be.\nBTW: You can also run the command outside of docker if you have all the dependencies installed.. Merged it as there are only 2 very small diffs not related to this PR.. @p365labs I merged this one to get the builds back to green. I worry a bit about the side effects as I think the packages were need to build the docs. Perhaps they are now part of php7 as I couldn't find the dependency anymore. Will definitively figure it out with the next release in case the docs don't build anymore .... @greg0ire To move this forward, I suggest we first get the bugfix release in as I agree this is critical also to solve the issue that @curry684 has. Lets conitnue the minor / major discussion in a follow up?. @greg0ire Finally merged. Thanks for this an the follow up discussion.. @greg0ire Now that it took me so long to publish 6.0.1 I think you have proven a point and I would like to get back to your initial proposal to allow also future minor releases of php-elasticsearch. Should this break one day, we can still revert it but it's better that people get the newest features / bug fixes from php-elasticsearch without requiring and Elastica release. WDYT?. Any chance you could paste the error as text? It's pretty hard to search in images :-(\nDid you try to build the query for ES directly and see if it works? That would be great to see if there is an error with the Elastica query or in an issue with your query.. I'm thinking this one is the problem: [term] query malformed, no field. The reason is the empty 'term' => array()),. ES 1.x has been quite some time but it could be the difference between {} and []. Do you even need the empty term there?\nFor the second one which \"should\" work. What does your doc in ES looki like?. What I meant with ES documents is to use for example the Console in Kibana to build to the query in JSON or use curl to send the request. As soon as you have a working json, you can post it here and the \"translation\" to Elastica should be fairly straight forward.. What is the error that Elastica returns if you send a query? Which Elastica version are you using? It seems you are using and 6.0.0-rc2 cluster (best update it to 6.1).. TBH I don't think I fully understand (yet) what is going and if this is a Doctrine or an Elastica issue. Could you share some details on why you thinks it's an Elastica issue?. Thanks for spotting this one. Forgot to update this with the release.. I just realised travis is not running on this branch as we specified master only. Could you open a PR to change this?. @charleslxh Any update here? Would be nice to get this in.. I remember we fixed something in the past in travis probably related to the distro we use. Check the master travis file for the diff to find what we changed.. @XWB Thanks for going through all the hoops to get this in.. @XWB Thanks for your work on the 5.x branch. Finally 5.3.1 is out.. Can you share some details on why GET requests do not work with proxies? Because if that is the case, there are many other requests where this becomes an issue I would think.. Thanks for the details. I'm ok with adding this option. Can you open a PR?\nIn case the proxy is under your control, I think the proxy should be configured accordingly. But I can see the issue in case the proxy is not under your control.\nI wonder what the proxy is that does not support it?. @stefpe I just stumbled over this one: https://github.com/elastic/elasticsearch/pull/28342 It seems the official high level client moved to POST, so I wonder if we should make this even the default?. @silvioq Thanks for your PR. Could you add a test for this (if possible one that directly calls Elasticsearch to make sure we don't get an error back (anymore)) and add an entry to CHANGELOG.md?. There are some functional tests that you can find here as an example: https://github.com/ruflin/Elastica/blob/master/test/Elastica/BulkTest.php#L21 Looking at it I realised that there are no functional tests for the Bulk package yet :-( Let me know in case it's too tricky to implement then we can also merge the PR as is.. @silvioq It would be great if you could add this test method. Please ping me when done so I can merge the PR. Thanks for your work.. @silvioq Merged. Thanks for the contribution.. @alberttomasiak Happy to also get it into 5.x. Could you cherry pick the commit into 5.x and open a PR?. @josselinh Can you add some tests to this and a CHANGELOG?\nAlso it would be great to also have this in master. I suggest to have first a PR against master and then cherry pick it to 5.x.. @josselinh Thanks a lot for the contribution and also the tests. Can you directly open the PR against master to make sure we don't forget about it and have all the features from 5.x also in master?. I assume there was a breaking change here in 6.x. I couldn't spot it on the first look. Can you check if you find something in the breaking changes for elasticsearch?\nBTW: I'm glad we have the functional tests to discover this :-). @josselinh Thanks a lot for this change especially having it in both branches. You can ignore my comment in the other PR now :-). Any chance you could add a test like here https://github.com/ruflin/Elastica/blob/master/test/Elastica/Aggregation/TopHitsTest.php#L288 to the PR that tests setSource without an array?. @XWB Thanks for the fix.. @josselinh Thanks for the change. Will that fix the change in master?. TBH not sure what you are trying to do and what the problem is. Can you perhaps provide a bit more information what you are trying to do?. Let's start very simple:\n\nWhat are the versions you are using?\nWhat is it that you expect to happen?\nWhat happens?\n\nThe config you share above is from fos_elastica and not elastica. It would be great if you could focus on the part that you think does not work as expected in Elastica as I don't have much knowledge of fos_elastica. Not sure what I can do here to help as you keep sending the message (I think). See my questions above.. Could you share some code snippets from your code? I wonder how / why you access _params directly? Or is this within Elastica?. I tried to figure out what this check for the empty _params is there and the creation of the stdClass. Here is is: https://github.com/ruflin/Elastica/issues/817\n@xfoldvar Not sure I can follow your code above. So you get the error when you run addParam? Assuming $query is a BoolQuery object and toArray is not run yet, I would expect this to work?. I still don't understand why _params should be stdClass before toArray is called. In the above you seem to use a framework around Elastica. Does the getQuery() in there run toArray()?. There is a \"fix\" for this here: https://github.com/ruflin/Elastica/pull/1432 And I remember there was also a PR for 5.x to change this. The main issue here is that I didn't cut a release yet for these changes :-( On my list .... Closing as 6.0.1 is out with this fix.. Thanks for the contribution. Could you update the CHANGELOG file?. Thanks for the contribution.. I haven't checked the code yet but I don't think there is a better way. But we should definitively have one (in 5.x and master). Want to take a stab at it?. I suggest to open a PR against master and as soon as it's merged, cherry pick it into the 5.x branch and open a PR. . @stof Sorry for the late reply, only was partially online the last days.\nI think having it in Document as you made it make sense as the pipeline is set for each Document.\nThe testing here is a bit trickier as you have to create a pipeline first in Elasticsearch. I would probably do that through Elastica by using php-elasticsearch as ingest does not really exist yet in Elastica. Best go for a simple processor like rename inside the pipeline which then should also make it easy to test if the document was actually processed as expected.\nCleaning up the pipeline after the test would be great, but I'm also ok if it sticks around if this gets too complicated.. @stof Thanks for the details and changes. I will probably only have time to have a detailed look and think about it beginning next week. It's definitively on my todo list ;-). @stof I'm positively surprised that using a pipeline with the bulk API already works as you showed in your tests. I wonder if that is enough for now or if we need a deeper integration?\nFor your PR I'm good to merge as is if your are ok with it and would add a Changelog. We can perhaps have a follow up discussion in an issue about the bulk part.. @cfoehrdes Feel free to open a PR for further discussions. This should make it more obvious what the changes required would be.. Closing as https://github.com/ruflin/Elastica/pull/1457 was merged.. Ups, seems like I hit the wrong button. Thanks @aderuwe . PR looks good to me. Could you add a CHANGELOG entry and if possible a small tests?. @floriansemm Thanks, merged.. @spointecker Are you using Elastica 5 or 6? I probably will not make a difference here but probably worth checking.\nDid you find the notes for the breaking changes mentioned in the log file?. Can you share the exact JSON you use to for the call? We should then compare this to the request that Elastica sends. It could be that some conversion that Elastica does it not correct.. @spointecker Sorry for the late reply. One difference I spotted is that you have in the PHP code a - but use _ for s3_repository in your curl command. Also it seems the settings you pass are not identical?\nHere is BTW the code that makes the call happen\nhttps://github.com/ruflin/Elastica/blob/29857555bfb33e37973ca07699517afd993ca474/lib/Elastica/Snapshot.php#L29-L45. I just read through the issue again. Are you using Elastic 6.0.0 with Elasticsearch 5.3? Could you try if you see the error with Elasticearch 6.0?. Problem is that Elastica 6.0 is not compatible with Elasticsearch 5.x. For 5.x try Elastica 5.x (5.3.1 is the most recent one).. The part that does not make any sense to me at the moment is why the settings array looks to be correct (settings.access_key) but ES returns an error for index.access_key like something would go wrong during constructing / mapping the array. I'm pretty sure I currently miss something simple. Unfortunately don't have a setup ready at the moment to test this. Perhaps something goes wrong when creating the path?. What are you exactly trying to set with the _source -> param ... you have mentioned last? What do you get if you run $suggest->toArray() and print the output?. @dmitrijivanenko I'm more then happy about contributions to the test suite. What I would focus on is not pure coverage number but making sure we add tests for code that is complex and has potential to break. The part that is especially valuable are the functional tests as they tell us when something in Elasticsearch changed and we need to fix it in Elastica.. @dmitrijivanenko Thanks for the tests. As mentioned in https://github.com/ruflin/Elastica/issues/1461#issuecomment-366549703 I would suggest to focus on functional tests and unit tests on parts with complex code which is likely to break.. Which version of Elastica are you using? How exactly did you use composer to install Elastica? Normally I assume this is somehow related to your autoloader.. That seems to be a really old version of Elastica. What Elasticsearch version are you using? Can you try if installing a newer version of Elastica works?. If you use 6.2 you definitively have to install the most recent version.. Can you share the exact composer file you have?. * What version of PHP do you use?\n* Why do you stick to dev-master instead of a stable release?. Can you try to directly install 6.0.1? https://github.com/ruflin/Elastica/releases\n. By installing I meant to set the appropriate config in your composer file. What I would recommend you is to remove first all the other dependencies to see if you get the right result and if it works then add the other dependencies.. Can you try a completely empty composer file with only Elastica inside to see if you get it working?. Closing in favor of https://github.com/ruflin/Elastica/pull/1501. @greg0ire Thanks a lot for taking a stab at this and sorry for the slow response.\nI think there are 2 parts here:\n Desync minors / bufixes of the 2 clients\n Desync majors\nI'm on board now with the first one (minor decoupling) but feel uncomfortable with decoupling majors. The reasons I feel uncomfortable is less about the version of elasticsearch-php but the elasticsearch version itself. With the minor decoupling we already get few of the benefits above. Ok to go only the first step for now?\nFor the installation I would hope that users that get started with Elastica do not have to think about elasticsearch-php, not even know that it's a dependency. In each Elastica version we would set the minimum required elasticsearch-php version. So if Elastica 6.1 requires as a minimum elasticsearch-php 6.1 we can say elasticsearch-php >=6.1 in the composer file. Someone updating Elastica will automatically update the elasticsearch-php version potentially even to 6.2 if it's already around.. @greg0ire Thanks, merged.. @franmomu Thanks for the fix.. @d-claassen I initially didn't plan new 5.x releases and would recommend people to depend on the branch that need the fixes. But now that quite a few fixes have gone in perhaps I should rethink that. Is it an option for you to depend on the 5.x branch?. @stof Here you go: https://github.com/ruflin/Elastica/releases/tag/5.3.2. There seems to be an error on travis:\n```\n1) Elastica\\Test\\ClientTest::testAddDocumentsPipeline\nFailed asserting that an array has the key 'new'.\n```. Hm, I see. Would it make sense to also backport this feature?. My normally approach here is if someone asks for it, I'm +1 on it and ask for the contribution \ud83d\ude07 . Which version of Elastica are you using? Also the AWS version of Elasticsearch uses some special authentication in some cases. There is a special transport for that in Elastica: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/AwsAuthV4.php But TBH never tested to tried it on my end.. Elastica 6.0 is not compatible with ES 2.3. \nHaving said that I would at least the host resolving to still work. I'm wondering if there is something happening in the middle here? Do you see anything in the ES logs?. I had to look up the versions: 3.2.3 should be compatible with ES 2.x (for sure 2.4).. Let's ping @jeskew on this as he did the initial implementation. Perhaps he knows more?\n@IgorDePaula Can you double check for typos?. @IgorDePaula One of the last guesses I had is that there are some typos in the host config. Could you also try with and without a / at the end of the url?. @XWB Any chance you could add a test for this to make sure we do not reintroduce this?. @mmoreram Based on your change I assume this was mainly a docs issue but already worked before.. The NullTransport is only used for testing and responds with a hardcoded answer: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/NullTransport.php#L26 We can definitively extend the NullTransport for more tests if needed. Feel free to open a PR.. Thanks for doing the backport.. Definitively, we should support the above params. Do you want to open a PR with the change?. Could you add some tests to this PR and entry to the CHANGELOG?\nSo far it seems this change breaks the existing tests.. I haven't checked in detail yet. It could also be that we found an error in the test case that fails. \nIn any case it would be helpful to add tests for this that will also make it easier to tell if the implementation is correct.. You are right that there is not a named API function for this today but you can already make use of it by using setParam on your Terms object. All setOrder does is using setParam and setting one array:\nhttps://github.com/ruflin/Elastica/blob/9e840a1b9bc051baef16473c66a0084fc87cf091/lib/Elastica/Aggregation/Terms.php#L21\nOn your end you can pass an array with your values:\n$terms->setParam('order', [$order1 => $direction1, $order2 => $direction2]);\nI haven't tested it but that should work.\nInterested to contribute a setOrders or addOrder method?. SGTM. Looking forward to the PR.\nLet's skip addOrder until we see a use case for it.. Happy to add magical methods if it helps debugging and does not have side effects. Want to open a PR? I wonder if we should add this directly in the Param object so all other objects would inherit it.. I really like the idea to be able to paste it to the kibana dev tools. I remember we had in the past a logger that was writing almost that format.\nThe reason I suggest Param because having the raw object is not only useful for Query, but also for Search, Snapshot any many others I assume. But to make it useful for the Dev Tools, it needs to have a path too.\nLet's start experimenting with Query/Search first and have a __toString() method there. Could you modify your proposal above that it is indeed copy/paste to the dev tools including the path and method? Or do you think that is too much?. @cjost1988 Thank you for the high quality PR. Changelog, linting, tests - everything there \u2764\ufe0f . haha, missed that one. Feel free to open an other PR, otherwise will fix it on release day when going through the changelog.. @cjost1988 Thanks. @cjost1988 A PR would be more then welcome \ud83c\udf89 . This seems to be a question related to elasticsearch not Elastica. Best use the discuss form for this: https://discuss.elastic.co/. Could you share a bit more code and the full error message?. As this part of the code does not exist anymore in the most recent release, could you share which version of Elastica you are using?. @elshobokshy Glad you found a workaround. Have not really investigated it as it's unlikely that we will have an other release for 2.3. Hopefully you can also upgrade in the near future ;-). Nice improvement. Thank you.. If something is not directly supported by Elastica, you can always use raw queries: http://elastica.io/example/raw-array-query.html\nIn never versions (6.x) you can also use the underlying official client to create queries.. +1 on having support for the task API. Interested to contribute it?\nSide note: Elastica can be used the access any API endpoint but just using raw queries or the underlying php-elasticsearch client, it's just not with nice objects.. Great to hear. Feel free to open a PR early if you need some feedback.. @daviscaics I merged as is to keep the changes simple. We can still make changes in follow up PR's if we realise we need to change the structure a bit. Having it in will also give others the chance to try it out.\nThanks a lot for adding the functional tests. This is especially useful as the feature is not stable yet on the Elasticsearch side.. The default type will be _doc. You should be fine when you use this as your type. Let me know if this does not work.. Thanks for the fix. Code LGTM. Could you add a line to the changelog?. @andrejbaran Thanks, LGTM.. Now that I got 2 requests in 1 day, I should probably do one now. Will try to find some time today.. Here you go: http://elastica.io/2018/05/29/release-6-dot-0-2/. @waaghals Interested to open a PR for this?. @mmoreram Thanks a lot for the contribution.. Here you go: http://elastica.io/2018/05/29/release-6-dot-0-2/. If I understand this correctly, it's mainly a documentation issue? Do you want to open a PR with the change?. Resolved in https://github.com/ruflin/Elastica/pull/1534. Master is currently identical to 6.x so this is the most maintained version. But I recently published a version for the 5.x branch which especially the community still backport things. Does this answer your question?. @oleg-andreyev Happy to accept a PR here. In general it can be said that it mostly follows EOL dates from Elasticsearch: https://www.elastic.co/support/eol Main difference is that new features or mostly added only to new release and the previous major is only touched when really needed.\nFor 2.x/3.x: There weren't any PR's in quite some time. Probably also because there is no 3.x branch :-). @oleg-andreyev Thanks. Probably the part that we should specify is what \"maintained\" means.. @Tobion Thanks. Any suggestions on how to fix it?. @NathanBaulch What would the changes to Elastica be to support this?. As we started to do breaking changes in Elastica for 7.0 we can also tackled this with potential breaking changes. Should we move the discussion to https://github.com/ruflin/Elastica/issues/1396 ?. @oleg-andreyev SGTM. Merged.. @jmsche Thanks for the contribution. Haven't touched the 2.x branch in ages but happy to hear it still works :-). Please use the 2.x branch. If somehow possible I would not like to do an other 2.x release.. If I do a new release, you would also have to update all packages? Or what is your line looking like at the moment?\nThe reason I'm very hesitant to do a release because I worry I might break things that work at the moment. It's a long time ago since I touched the 2.x code base so it's hard to think through the problems that could happen.. The commit I'm much more worried is actually not yours but the other one as it adds error handling for I think Elasticsearch 5.x and I'm not sure about the side effects to 1.x installations here. I would appreciate if for now we could leave it as unreleased and reconsider if we get many request for it.\nPlease also keep in mind that 1.7 was EOL beginning of last year: https://www.elastic.co/support/eol. @jmsche Could you comment on this one. That is what I was worried about doing a release :-( @bdlabs What you can always do is going back one bugfix release to the one you had before.. Thanks for the cleanup.. Can you try:\n$range->addField('productCategory.category.left', ['gte' => $category->getRoot()->getLeft()]);\nHere in the tests you find some examples: https://github.com/ruflin/Elastica/blob/41dfa758f654fd4e138395fc4d023046e49c0178/test/Elastica/Query/RangeTest.php#L30. The default port for Elasticsearch is 9200 and is also what is used as a default if not set.\nI assume if you make a request with an invalid port you get an exception?. What is if you connect to a random address that does not exist. Do you get an exception?. @Destroy666x Glad to hear it works and only docs are out of sync. Want to open a PR to fix it?. Which version of Elasticsearch do you use?. @pashaBolshov Do you want to open a Pull request?. Don't think I get to it in the next days. Perhaps someone else wants to pick it up?. There are currently two commits difference: https://github.com/ruflin/Elastica/compare/2.3.1...2.x\nI'm actually a bit concerned about the first one not the PHP 7.2 one as I never really tested it and it could have some unwanted side effects. The reason of the 2.x branch was at the time it was created not to do release on it but have still a branch for people to do contributions if needed.\nWith the problem of PHP 7 popping up, it's not nice obviously.\nThe reason I'm very hesitant to do a release is because Elastica and Elasticsearch versions this is running against are highly likely already EOL. More importantly, I don't want to break anything for someone running the current 2.3.1. \nWhat Elasticsearch version are you running against? Could you run against the 2.x branch?. Could you just define the 2.x branch on your end to get the changes?. An alternativ we could do is creating a second 2.x branch, get the commit for PHP 7 in this branch and tag a release on top of it. Like this we would not have the risk of the other PR. Would you be interested to take on this work?. @maximenko Did not forget you here. We need to create a separate branch, cherry pick the commit and make a release based on it. I just realised writing this that I must do it because of access rights. Will try to get it done next week.. @maximenko Better late then never? So there is now a tag 2.3.2: Can you check if it is what you needed?. Default is 10: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-from-size.html If you need all results, you should look more at something like scroll: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html. Very clean PR, thanks.. @Persata Thank a lot for the contribution with the detailed PR description \ud83d\udc4d \nOverall the PR looks sane to me but as you mentioned a test would be nice. One way to tackle this could be using guzzle and do the two calls that returned an error before. So we would not check the headers directly but if the calls are executed correctly. There are quite a few examples for integration tests in the testsuite.. +1 on having support for it. Let me know when the PR is ready for review.. Thanks @thePanz . Will try to get some releases done next week \ud83e\udd1e . @thePanz Just looked into the diff. If I get this right for 5.3.3 only phpdoc changed, no code changes?. Not sure if that is really worth a release? :-). @thePanz I pushed a tag 5.3.3: https://github.com/ruflin/Elastica/tree/5.3.3 I didn't use the release thingy on Github for it. Is that enough?. @jandom Thanks for opening this, will try to have a look soon.\nCould you add a changelog entry and a bit more details to the PR description on why this is needed and how it works.. @p365labs Thanks :-). Would be nice if we could automate this. Also for linting, we should probably do it on each PR and not only on release time.. We use php-cs: https://github.com/ruflin/Elastica/blob/master/.php_cs It's just not run on build time (but we should). \nKeep us posted on your findings.. What are other projects doing?. If we need a newer version of php-cs fixer this should not be an issue, we can just update it here: https://github.com/ruflin/Elastica/blob/master/env/elastica/composer.json#L17. @massimilianobraglia Could you perhaps leave some comments in the diff on what the changes mean? I expect only 1-2 lines to be added but it seems most things changed. Is that because of the version change?. We should add to this PR running make lint to see the actual changes (it's not run by CI). What I worry is that the change will be massive.\nIt would be nice if we perhaps can split this up into 2 PR's:\n\nMigrate CS fixer to version 2 with as little changes as possible and run make lint\nAdd new features to CS fixer 2 and run make lint\n\nLike this we see what is actually new.. If nothing really changed, why would then there be a massive PR? We can try with 1 and then see what happens :-). @p365labs Moving forward, that would be great. The reason I have not enabled the check so far is because just running make lint requires docker to be around which is not the case on all dev machines and could be a burden for contributors. But with php-cs fixer as more and more a standard we could also offer a way outside docker to run it and get it green.. Ok, lets keep the linter in docker only then. Like this we also ensure that everyone uses the exact same version and should make it easy to execute on CI. If people struggle with it we can still introduce make lint-local as a backup.\nFor the large PR: I'm ok if all files are touched in a PR but I hope we can make the move to version 2 as minimal as possible (mostly adjusting indentations etc) and then add more rules in separate PR's. The part I don't fully understand is why the move to php-cs fixer 2 means big changes.\nPerhaps best open a PR with the new linting applied and we can discuss it there?. In general I like the idea. I don't think it will be a problem for backports as we rarely do backports. Probably also a good time as security support ends for 7.0 in 3 days: http://php.net/supported-versions.php\nWhat I wonder is how we do the full migration and don't have errors in :-) If we introduce a type but it was an other one or we even allowed 2 different ones (but 1 was documented) we break things. . @massimilianobraglia I still wonder what our best path forward here is to make sure we keep having reviewable PR's but still can do batch changes. One idea: Create a meta issue to track the work and for example do PR's per package?. Yes, that would be great.. Code LGTM. Want to add a changelog entry?. Glad to see it's all green.. @p365labs Would be good to get your review on this one. We have breaking changes in the list for 6.1 but they are not really breaking changes as already not working if I see this correct. Let me know what you think.. @p365labs Thanks, would be great to get a \ud83d\udc4d or \ud83d\udc4e down as I'm already a bit late on this release \ud83d\ude07 https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465. Agree that we should only introduce it in a next major. After all these PR's went in we should probably branch of 6.x and then we can start with strict_type. What do you expect will be the impact on our users. Is this something already commonly used? Is PHP planning to enable something like this by default?. Thanks for the details. Mainly asking to better understand for which and how many of the Elastica users this could become a challenge.. Would it be possible to already introduce strict_types only for our testing to make sure we do the right thing on the testing end?. @massimilianobraglia Not sure I can follow your comment above. Can you elaborate?. @p365labs If you get some time to start reviewing these PR's would be great. It's on my list but didn't find the time yet. @osavchenko @massimilianobraglia Thanks for all the work so far.. Got it. Probably good as a one time thing to check. I was kind of hoping we could enable it somehow / somewhere to for the test runs.. @massimilianobraglia Sorry for the delay on reviews here on my end. I was kind of waiting on our decision on the defaults (good excuse ? :-) ). I like your most recent proposal.. @p365labs Are you ok with the most recent proposal for the default docs instead of in code?. @massimilianobraglia For my understanding: This is now done manually or fully automatic?. Should php-cs fixer 2 allow to do this automatically?  I think I miss something.. Got it, thanks for the clarification.. @p365labs Go for it ;-). @p365labs Yes. @p365labs Changelog still looks \"interesting\" to me?. @massimilianobraglia This is great and it looks like it could still be reviewable as the changes overall are minimal.. yes, seems like it. I wonder if setting it to 2.9 helps?. The good news at least the errors change now. I'm opening https://github.com/ruflin/Elastica/pull/1567 so we can experimenting with updating the other dependencies separately.\nFor php-cs-fixer: When do you expect it to be compatible with PHP 7.3? Is it only a problem with 7.3 if it runs the linter or always? I'm thinking that on travis we should run linting as a separate step and not on all 4 versions.. I assume we don't need a workaround as we just run the linting job with 7.2?\nCould you rebase this PR on top of master as @p365labs updated the dependency. I hope now the build will run.. My thinking for Travis was more that we introduce one more target which could be called Lint. And this target would have it's own Docker container, so no need to modify the other containers. We can still do this in a follow up PR to not further hold back this PR.\nCould you readd the removed line to the composer file or does this still cause issue even with the updates?. @massimilianobraglia LGTM. @massimilianobraglia Changelog SGTM.. @massimilianobraglia Merged \ud83c\udf84 Thank you so much for going through all these loops to get this in. \nMoving forward we should make sure it's as easy as possible for contributors to apply the linting to not get stuck on this step in their PR's. \nI'm happy to apply more linting rules to Elastica. The less we need to discuss about how things are formatted and the more we can focus on the code itself the better :-). @massimilianobraglia Yes, please. Best do 1 PR per change so we keep it small.. Could you open this also against 2.x-temp branch as this is the one I made the release from? Can you also add a changelog entry?\n@bdlabs Could you test this on your end?. @p365labs More general question: Should we start to create a 6.x branch and all new development goes into master and if needed in 6.x needs to be backported?. Other PR is merged, we need to rebase this one now.\nNot in this PR but we should also deprecate getType() probably?. @p365labs I see you got this one green. I wonder how soonish we should merge this one. We need for sure have the 6.x branch first.. SGTM. +1 on removing tests which need / require tests. For elasticsearch-php, should we open an issue?. @p365labs Can you review this one? Perhaps we should also open a PR to update the phpunit dependency?. @p365labs Would be great.\nIf you think this one is ok to go, can you \"Approve\" the PR?. @p365labs Just merged it.. @mgallego I just created a 3.x branch which should help here.. The problem lies here: https://github.com/ruflin/Elastica/blob/3.x/.travis.yml#L8 Previous builds were always on master. Could you open an additional PR against 3.x to add 3.x branch to the list?. @mgallego I'm ok to ignore codecov on PR's against this branch.. Did you see the PR review from @p365labs https://github.com/ruflin/Elastica/commit/435fbf41bb166cbb73c44962417138d2d3df1454#r31731591 ? Not sure if you addressed this. Probably got lost as it was a comment on the commit.. Thanks @jmsche It would be great if @bdlabs could confirm this change to make sure what we merge works for his issue.. I just created tag 2.3.3.. Can you please test it and report back if things work as expected? @romaricdrigon Would be great to get your feedback too.. What you mean by packaging? composer?. I logged in and hit update. Let's see if that helped.. Interesting that it failed on 3 out of 4 PH versions :-(. @mgallego Any idea how to fix these?. @mgallego Would be great if you figure out the issue, if you could push it to this PR too. I wonder if we can still fix all of them as some of these PHP versions are EOL for quite some time so could be some libs are not around anymore or broken for these versions.. LGTM. \n@p365labs Did we want to branch out 6.x before all these PR's go in or afterwards?. Backporting is a good point. My biggest worry is that someone would see this change as a breaking change as some of their code might break. At the same time we just got more strict and code that was \"wrong\" before is now just shown. Is that statement correct?. I'm on the fence about these two options because I think it's also a nice thing that users have to clean up their code already in the 6.x cycle.\n@massimilianobraglia Perhaps you can chime in here?. @thePanz If you have any feedback on this, would be great too.. @thePanz Thanks for the review. \n\nConsts: We decided to add them but not use them, so it's not as critical to keep them up-to-date with any change on the ES side but still make it easy to use defaults.\npublic const: Could you check which release this was? \nFor the php-cs-fixer: Are you looking for https://travis-ci.org/ruflin/Elastica/jobs/483331012 ? We run it now as part of each PR.\n5.x: We plan to branch out 6.x before getting this into master. So if we event would want this into 6.x, we would need additional backports. We are not even sure yet if we should have it in 6.x as some users could see this as a breaking change. . I like the idea of a new minor release. We can do release now, then get in all the PR's and release a new minor, branch out 6.x. Thew new minor would mainly contain the PR's above and not really new features. Like this users who don't like it could stay on the old minor.. @p365labs Agree, but assuming things break they have a way to fix their app by doing a more strict requirement, then fix what is broken and update the dependency afterwards.\n\nSeems like a topic where it's hard to get to a conclusion. Should we vote?\nMy take so far: I'm good with getting it into a new minor release in 6.x. It has potential to break some apps but in general these apps were already broken but now we tell the users. I expect it to create some extra work on our end but overall I think our code base and the apps of the users are better of afterwards. 6.x is going to stick around for quite a long time in the future so getting users in 6.x already used to be a bit more strict should also be a good thing. It could simplify their upgrade to 7.x.. \ud83d\ude06 Seems like we are still in the same spot.\nLet's discuss again the breaking change or not. I think that is the key question. Assuming some has an application foo and he uses some code in the wrong way. He thinks his app is working because it does not throw any error but in reality it doesn't because he uses wrong params. Now he goes from 6.1 to 6.2 and gets errors in his app. It actually tells him that his app was broken before and more or less how to fix it.\nTwo questions:\n\nIs this a breaking change?\n\nIs what I describe accurate?. Thanks everyone for his input, appreciate it. I will try to make a decision here then :-) \n\n\nLet's branch out 6.x\n\nThen merge the PR's into master\n\nAs @p365labs that leaves us all the options open and only downside is potentially additional work.\n@p365labs Do you want to take care of the branching of?. @p365labs Thank you, and after it let's get started with PR merging :-). I wonder when we should do the branch, now or after all the type hinting cleanups?. @p365labs Sounds good to me. Doing all the type hinting PR's into master instead of 6.x has also the advantage of being on the safe side. We can always backport if it becomes an issue.. Done. Thanks everyone involved here to make this happen.. @p365labs First one to fall into our new linting trap ;-) Can you rebase?. @p365labs Seems like you need to run the linting script then ;-). @p365labs Based on your first experience with the linting requirement, should we improve the message on what needs to be done? Can we improve it?. Would be great if at least in the output in CI it could say something like run make lint. +1 on also having it in the docs. CONTIRBUTOR.md probably fits better here.. Would be great if we could first add this in master and then backport it to 5.x to not have fixes in 5.x which are not in master. Could you also add a small integration test with an array to confirm it works?. @keradus Thanks for the details, appreciate it.. \ud83d\udc4d on the change. A changelog entry would be nice.. Each Elastica version only supports a specific major of Elasticsearch. So for the above use case you would need two Elastica versions.\nI wonder in general how you run these versions in parallel. Is the same app connecting to both?. This is an interesting workaround as it's not really what Connection/Strategy was created for. So did the above solve your problem fully?. :-) To answer your initial question: All the docs around ElasticStrategy are the ones in the source code.. @thePanz Perhaps you could also have a quick look at this PR as you were rather active on the 5.x branch recently. I just want to make sure we don't break anything here.. @jandom Merged for now. \ud83e\udd1e that it didn't cause any issues.\n@thePanz Feedback still welcome ;-). I leave it to @thePanz to decide if we need a follow up / improvement PR or not. If not, @thePanz feel free to cut a release.. @thePanz Ups, I think I was too fast here. Already merged #1595 :-(. ++ on cleaning it up first.. @thePanz Interested to become a Admin for the Elastica repo so you could also push such tags directly?. @thePanz Happy to push the tag. But we should also have 1 more PR that cleans up the Changelog and introduces the release in the Changelog. Could you open one?. @thePanz I added you to the list. Please ping me if you have any questions and thanks for all the help.\nFor releases, please make sure that the CHANGELOG is in line ;-) I often to a release PR first and then just create a tag from the branch (or use Github release feature).. @jandom Thanks for forwardporting.\n@thePanz Please squash and  merge if ok.. There is no version 2.8? For example queries best have a look at the Elastica testsuite.. I think we need a bit more background here. What is the Exact version of Elastica you are using and want to use and the same for Elasticsearch. Do you already have a plan on the Elasticsearch migration? In any case have a look at https://www.elastic.co/guide/en/elasticsearch/reference/5.2/setup-upgrade.html. Basically everything has become a query, so you need to convert you filters to queries. See here for some bool examples: https://github.com/ruflin/Elastica/blob/master/test/Elastica/Query/BoolQueryTest.php. Just checked out the diff here: https://github.com/ruflin/Elastica/compare/3.2.3...3.x?expand=1\nThe line I'm most worried about that it could break something is https://github.com/ruflin/Elastica/pull/1571/files#diff-e421c6a76338876301c98a5a7e95ab87R367\nBut if I remember correctly we also backported something like this to 5.x and things keep working @thePanz ?\n@mgallego I'm always trying to push back on doing releases for branches  that are not really maintained anymore as always some stuff sneaks in and breaks things which it shoulnd't. Let's see what @thePanz thinks.. I'm not sure if we made this change in 2.x or 5.x. Someone has time to check? :-). @EliuFlorez Please do not post on unrelated issues.. I found the code in the 2.3.3 tag: https://github.com/ruflin/Elastica/blob/2.3.3/lib/Elastica/Query.php#L404 I think we should be fine with a release then. @thePanz WDYT?. @thePanz Interested to do this release? \ud83d\ude07 . I just tagged the release: https://github.com/ruflin/Elastica/releases/tag/3.2.4\n@mgallego Could you confirm that it is what you expected? Going to close this issue.. This change would also need a CHANGELOG entry. Are there cases where this could break things (certain PHP versions?).. @EliuFlorez Thanks for the contribution. Could you also update the changelog and add some tests?. I assume this is related to https://github.com/ruflin/Elastica/issues/1597 If it is about optimisations in Elasticsearch you better ask in https://discuss.elastic.co/c/elasticsearch. As these seem to stay around in the long term, I think it would be good to add these.. Great. Could you open one PR for each to have them separate?. I think we should make it as similar as possible to what we have in Http, so this would be option 1? \nNot sure if make sense to share the connection to different nodes TBH.. For now I would start with mirroring what we have in Http as it seems to work well so far. We can still do a follow up then to improve both at the same time if needed.. What a luxury to be able to pick between two PR's \u2764\ufe0f What is your preferred approach? \nShort term I'm slightly in favour of https://github.com/ruflin/Elastica/pull/1618 as it only changes Guzzle. WDYT?. Closing #1618 was merged. Thanks a lot for the contribution(s) @NathanBaulch . @EliuFlorez Would be great to have it. Interested to open a PR? :-). As usual, the answer is it depends :-)\nIn most cases when you were using multiple types before, you should switch to multiple indices. The assumption here is that each table you have the data format is pretty different. If the data structure is 95% identical across your tables, it could be worth just using one index and have a field for filtering.\nDoes this help?. What version of Elastica and Elasticsearch is this? Do you have by chance the JSON that is sent to Elasticsearch?. It's always a tricky one with the reserved names. Could you open your PR with what you have right now so we can discuss it directly in the code. At least for me, that would make it easier.. @Aassifh Interested to open a PR for it? :-D. This seems to be an Elasticsearch specific question. I would suggest to post this one here: https://discuss.elastic.co/c/elasticsearch As soon as you know how to build the query in Elasticsearch it should be pretty simple to convert it to Elastica code.. \ud83d\udc4d Will close this issue for now.. This PR is related to https://github.com/ruflin/Elastica/pull/1618 as both solve the same problem (this is for myself so the two PR's are linked ;-) ).. I thought a little bit more about this code. I'm not sure if it would be better to move this code to the response object. Like this it would not throw an exception. After the bulk update it would be possible to do:\nif ($response->hasError()) {\n    $response->getExceptions();\n}\nOr would it be hasException?\nSecond small issue I would like to change is renaming the second $params variable, because it is used twice in the function (also as function param).\nWhat do you think?\n. I think it makes sense to have a container for multiple exceptions and your argument makes completely sense. Bulk should behave the same as adding a single document. So nothing has to change. The reason I brought this up is probably that I'm using bulk update to index files and in my use case it is completely normal that some files can not be index. So I had to change my implementation to catch the errors.\nAt the moment the response object only \"understands\" errors from not bulk request. I think at a later stage we should extend the response object that it understands also bulk errors.\n. Are there cases where you need this fallback? I assume that you know in advance if you are going to need the fields or the source? \nI didn't work with this multiple fields query yet, so I don't know exactly how the result looks like.\n. Good to know. Thx.\n. Good point.\n@cystbear Can you change this?\n. Thx. I just merged it.\n. Can you give me an example where we only have a key but no value? This shouldn't bepossible :-)\n. I would recommend a for loop here. Like this you can check the counter variable later.\n. The tests look really good for your first tests. There is always improvement ;-)\n. Why do you need a text here? Or what do you mean exactly? I would assume that you can use Elastica_Query::toArray() and add it to the array.\n. Here you could directly catch the exception Elastica_Exception_NotImplemented, so all the other ones would show up in phpunit as a fail.\n. If it is a filter, shouldn't it be Elastica_Filter_Abstract? Please always use { } also for 1 if / else clauses.\n. The question is: does it work? :-)\n. I'm quite busy at the moment, so probably I can't get you too much inputs. Breaking backward compatiblity for something better is good. I still don't understand why you want to build a string :-) This will be done automatically before sending it to the server by the http transport.\n. This is strange. Can you provide a full code example?\n. Probably you should use Elaistca_Query_Abstract. The one you use now is working?\n. if ($value instanceof Elastica_Query_Abstract)\nThis should work ;-)\n. I would go with params instead of extra_params. Also always use CamelCase.\nAnd you can use $options = array(), $params = array(), like this you don't need the additional if (is_array( check as it will not enter the foreach as long as the arrays are empty.\n. The main reason for this is, that I'm lazy quite often and run the tests from any directory (not only the test directory ...). For example the following code does not work without this inclusion:\nphpunit test/lib/Elastica/ClientTest.php\n. This wouldn't help, I run tests from a lot of different directories ;-)\nActually I think the test folder is the right place for the phpunit.xml file, but as always, this is open for discussion.\n. Please use lowerCamelCase for variable names.\nI'm curious if we should also allow $script to be an Elastica_Script object (right now under refactoring in other pull requests)\n. Why is this change needed?\n. Ugh, this is quite ugly. But I assume there is no way around it. Is it possible to \"selectively\" enable globals just for the thrift tests?\n. What is the reason you renamed it to refreshState()? If we do this, we should probably leave a proxy to refresh which is deprecated.\n. Please always put the __construct on top.\n. This should be lower case (isUnassigned)\n. I would suggest to return the following:\nreturn new Elastica_Response(json_encode($params));\nLike this the response has the full request inside which could be useful.\n. Normally the set functions overwrite and reset all existing values. Here all are overwritten but existing ones which are not overwritten, still exists. Do you see an easy way, how we could reset the existing ones? The problem is, we cannot just reset all params.\n. Not sure why you renamed it as it can stil be an Elastica_Query_Abstract object?\n. Good idea to also extend it from Elastica_Param\n. please use public static instead of static public\n. Actually I never used switch in this way before. Normally my functions only have 1 return method. I would prefer if you use a variable where you assign the data, a default in the switch which throws the exception and a return in the end. The result should be the same, but you have to add some breaks.\n. Same as above: protected static\n. If we also use param for script and lang, we don't need this if / else here, right?\n. when, where and how is the _serializersGroup set? What is it for?\n. Somehow my comment here was not stored. I also prefer the \"duck typing\" way here as I don't think it is a good idea to have external class dependencies in the library. Probably it would make sense to add a link to an example serializer\n. The part I still don't understand is, how the variable can be set (except something extends Elastica_Type) as the variable is protected and there is no setter for serializerGroup. Is the idea that Elastica_Type is going to be extended?\n. The question is probably, if the serializer is only need in combination with Symfony2 or if it could also be used in general. If only Symfony2, it would probably make sense to add it to the FOQElasticaBundle. \n@jmikola What do you think?\n. Sorry guys, some I was blind ...\n. I really like the idea of addObject and the serializer. But I'm undecided how to handle it. I would argue, that the setGroup part should happen before the serializer is added to the Type. So the Type does not have to care about the group. Or is it necessary that it is set every time an object is added?\n. Ok, so it also does not make sense to move\n$this->_serializer->setGroups($this->_serializerGroups);\nto setSerializer as otherwise it could be affected by external changes.\n. Let's keep it the way it is. But some documentation / links should be added to the serializer and serializer groups\n. @leahaense @lsmith77 Can you add the documentation link and perhaps also create a small unit test for it? I would recommend to create a test serializer object instead of adding the external library.\n. But that is the point about _params. As long as setLang and setScript are not used, the params are not set in the array, so no output is generated.\n. same here ...\n. I would have expected, that this is also a reserved keyword.\n. You are sure about this change? I just remember we had some issues here in the past. But probably it was because we have checked for empty(...) and this also excludes 0.\n. Removing code is always fun :-)\n. I move this fromm _log to here some time ago. The reason is that if you call log(...), something is written to the log file even tough logging could be disabled. So the log function always logs, but the request decides if it should call the function. \n. As it is adding curl and is doing json conversion etc probably this should be directly in the http transport, right? So I like the toString method, but this one should call the transport to convert it to the \"right\" string.\n. I prefer not to \"dump\" logs directly in php as especially in PHP code this quite often leads to an output in a browser which some people take to production.\nThe curl implementation has a specific reason. It makes it really simple to debug some queries that failed by just copy-pasting it into the console.\nI agree that it is the responsibility of the Request and not Log to know, what the string looks like. But the current implementation (as before) is really focused on Http transport (which is the one the is mostly used). So I'm ok with this at the moment, but in case I have a good idea, I will probably refactor it. \nProbably also the symfony plugin guys will think about how this log stuff could be logged into the symfony debug window.\n. Shouldn't id always be a string already?\n. why is this part commented out?\n. Nice idea.\n. I prefer this one :+1: \n. I would recommend to check here with hasId(). Otherwise you would have to check for null? \nI assume elasticsearch generates here integer ids, so you could additionally check for integers > 0.\n. My first thought was, that this is not going to work as it has to be passed by reference, but it seems to work in the tests :-)\n. To be honest, I'm not a big fan of the magic getters and setters. But it is not such a bad place to use it here. \nIf you would have asked me, I was sure there is a get method in document. But it seems like there isn't. So this is a good addition. I would also add a get(...) function which is public.\n. You raise a good point here. add(...) should be renamed to set(...) if we use the standard convention. Can you add a set(...) method which is called by add(...) and make add(...) deprecated in case you agree?\n. Same here, this should be a has(...) function or something like that?\n. My first thought here was: There should be a simpler way to do this. Probably you thought the same when you copied the code over here.\nThe ugly part is, the the option keys are different from the once in params (missing an _). But this code makes it really hard to add more options and not to forget about this code. We could simplify it by storing all \"options\" to a second array. But then we store the values twice which is also ugly. Any better idea?\n. Can we always seperate which options are for update/index/bulk or do we have a mix here? I prefer option 2 at the moment as the filtering is happening inside Document and all the other objects do not have to know how this happens. \nStill the question is, should we separate the storage of options and params inside Document or not?\n. Nice one. What is returned, if getOptions is called empty? I would suggest all options. I don't know anymore why optype and percolate are not stored as the other values. Probably some legacy code. This could also be merged.\n. What about retry_on_conflict? Should this be set also by the document?\n. This should also be in a namespace, right?\n. The reason this changed is probably, that urlencode also encodes * which makes it a valid id. The question is, should this be the case, means every id passed will be a valid id.\n. Perhaps we should make postWithRequestBody a constant so it is simpler to use.\n. It is an advantage, in case the param name changes, we could make it backward compatible by keep the old constant but change the variable name\n. Can't we use the constant from Action here?\n. This is quite an ugly one. Isn't there a better option like number of connections?\n. Is Dsn the right name here?\n. Probably we should deprecate setLimit\n. I should have discovered this one before the merge. The variable name here should be $_timedOut.\n. I would go with uri\n. Why not extend the ClientException so we can change the message also without the constructor?\nThe main question here: What is the goal. Why do we have to catch ClientExceptions here? Is it necessary? We should define when exactly we have a client and when a connection exception. This should probably be documented in the object ...\n. Fixed now ;-)\n. I would suggest to use the Elastica Exception here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Exception/InvalidException.php\n. Keys could also be a string, right?\n. Instead of creating the url path with the query yourself, please use the query parameter (4th parameter for ->request). Like this it also works in case an other protocol is used.\n. please always use the notation with { ... } (coding guidelines)\n. I didn't even know this exists :-) \nI would say 0.20.5.0-dev (soon 0.90.0.0-dev).\n. Please use the camelCase convention: $currentSearch\n. Would it also be possible, that the function returns null which means, the id is auto generated?\n. I normally use there the notaction @param DocumentObjectInterface[] $objects ...\n. I'm also still struggling with the method name. I also see the conflicts with getId and getDocumentId. The problem is, that getElasticaId is somehow misleading. What about getESDocumentId() or getElasticaDocumentId()? Too long?\n. I don't like to have too much stuff in the \"top\" namespace. But as there isn't any subnamespace for documents, this is probably the right place for the moment. Or do you have any other idea?\n. Sorry for the delay, but finally some answer. I didn't know about the path feature. (thx @Tobion )\nI would also encourage to use the built in elasticsearch functions instead of own built interfaces (if available). So I agree with @lsmith77 that we should create a pull request to implement path and switch to mapping approach. Then we should remove the interface again. I'm glad we marked it experimental :-)\n. Please use the $_logger notation for protected variables.\n. Same here for private variables $_context ...\n. Can you add a note that in Elastica\\Log::log there is a BC break and how to migrate?\n. why did you remove phpunit?\n. Nice, didn't know this one.\n. Please notify also this param changes in the changes.txt. Because installing just psr/log will not solve the problem. Also the params have to be changed. \n. Somehow I agree. I really like the env addition. It looks like phpunit is installed on travis anyway, right? Then this change is ok for me.\n. Yes sure. But the IDE specific stuff should be done by the engineer not the library ;-)\n. Good point. What is the reason you allowed failures with php 5.5? Are there some expected problems?\n. Can you also add the link to the elasticsearch documentation for that to the docs?\n. I'm not a big fan of jumping out of a function in the middle. Is there a possibility to only have one return? If the solution would make the whole thing much more complex, we stay with this implementation.\n. I can live with the current implementation. Much more important for me are the tests.\n. Can you please add a space after for ( and { } to be consistent with the coding standard?\n. Please use spaces between \"if ($...) {\". Same below.\n. Function documentation also needs an update.\n. Function documentation needs an update\n. Please use the Elastica naming convention: $_shapeFieldName\n. This url does not seem to work\n. We should probably leave this in as a proxy for BC compatibility, but set it to @deprecated.\n. Same here for the BC comment as above.\n. Same here for the BC comment as above.\n. Can you please add some migration notes how to get from the old implementation to the new implementation? What has to be changed? You could also add a page for this on Elastica.io\n. I see the problem. My suggestion: we leave the functions in but throw an exception with a text, that this function does not exist anymore and it should be migrated to the new implementation.\n. It is migration and not migrations\n. why can it be a bool?\n. Ok, didn't know that. Would probably make sense to add this to the function or add the link to the doku.\n. Please name it $rescoreQuery based on the Elastica naming standard\n. $rescoreQuery (naming standard)\n. Please use the camelCase naming: $queryArray\nAnd I assume as this is special to rescore, the \"reformatting\" should happen in the toArray function of Rescore and not here. Exceptions should be treated locally.\n. Why do we have to use $data['rescore'] and not just $data?\n. Not sure if null should be the value if the object doesn't exist. Shouldn't it throw an exception?\n. To be honest, I'm quite undecided. I like the Exception implementation as the developer does not have to make an additional check if the result is a valid result. Main question from my side is: Why should it happen that someone accesses a result that does not exist?\nAt the moment I would prevent pushing new results to ResultSet until we have a use case where this is needed. Or what is your take on this one?\n. I would prefer\nif (!$hasConnection) {\u00a0\n  throw $e;\n}\nreturn $this->*\nLike this we have the return in the end.\n. Please use null instead of NULL\n. Same here: null instead NULL\n. Shouldn't it be called Term instead of TermSuggest as it is in Query and Filter?\n. I assume this is going to be removed or uncommented?\n. Why is that needed here? Before we also didn't have any escaping here.\n. This seems to be a BC change. Please mention it very specifically in the changes.txt\nPerhaps it makes sense to keep addSugest in but mark it as deprecated?\n. I think a switch case with (true) is probably not the best way to do it. Why not a standard if / else?\n. Same comment as above\n. I try to not use sleep whenever possible because it is very unreliable. Can you try optimize() instead?\n. As coding convetion we use $isRemote for private/protected variables\n. Coding convetion: { on new line for funcitons. Thx for updating.\n. Please start variable names for lowercase\n. One more private variable :-)\n. Same for protected functions with \n. protected function ...\n. I'm always a little bit sceptical about tests that have asserts first and the some expected exception. What if one of the asserts before already throws and exception? You would not notice.\n. Please always use { } also for 1 line if clauses.\n. Can you merge in master again and add the ticket id to the change line? Like this it is easy traceable\n. Can you use '/alias/' . $alias here instead? I'm not a too big fan of variables inside the strings ;-)\n. Can you add the issue number here so it is easy to track it back to the changes afterwards?\n. Can you add the issue number here?\n. Please use public in front of the constructor\n. can you move the return to the end of the function. The outcome is the same but I don't like if function calls are left in the middle (except for exception).\n. Please use here $respository . '/' . $name instead of variables in the string.\n. Same as on line 84\n. Same as on line 56\n. Same as on line 84\n. Same as on line 84\n. Same as on line 84\n. Same as on line 84\n. Do we have here any other options like \"refresh()\" or optimize()?\n. Please use _percolate as function name to follow the Elastica convention for protected functions.\n. Please add the pull request id at the end of the line.\n. What happens if you don't add NULL here?\n. I see a problem here, that if the param is not passed, $index is not null but an array(). I think we have to do the chaining differently. If you would go with an else if you would also not have to do the removal of the $index part from the $options array as it would only go into the second part, when it is not an array.\n. I think this should not be in here anymore \n. I would suggest to use the not found exception here.\nAlso please use an exception per variable so it is clear, which one is missing for the developer using the library.\n. The if here is not necessary, because in the toArray it is checked again. Same for the $filter\n. Please use the InvalidException here, as not implemented is used for features which were not implemented yet. But here the arguments are invalid.\n. Instead of checking for not null, I would suggest to check if it is actually a Filter) (or above a query) as you did before in the constructor.\n. I would prefer if we could tell the developer exactly what is missing. I know that this adds complexity on the clients side but it will make the developers live easier.\n. Please add public also the constructor\n. We use the naming convention with _ for protected functions\n. Can you please use {\u00a0}\u00a0also if it only one line inside the if clause?\n. Please add the pull request id #631 \n. One detail I forgot: Can you add the pull request Id at the end of the line. I just realized the one before is also missing. If you can add also this one, I don't mind ;-)\n. Please also add the pull request id\n. Please use the $ convention for all protected functions.\n. Please list all the params in the docs as out of this the API doc is generated.\n. Can you insert a newline on top of all /* (also other files)?\n. Is this function needed? In case we do it for simple, shouldn't we do it also for all the others?\n. Please add some kind of asserts or expected exceptions to your tests\n. Probably you can add here that setFilter is now deprecated and passing array to setPostFilter is deprecated as this is what I will copy into the release notes (and some people actually read ;-) )\n. Please update the date here and move it on top of the release. Otherwise it will be missing in the next release notes.\n. Please use $_class for protected variables.\n. Can you add the pull request ID here?\n. I didn't study the Regexp in detail. Would the main difference be performance or is there an other difference? After the ! no space is needed?\n. Please use _getUri for the protected methods.\n. _createHttp\n. Please name all private and protected methods $_version with the underline.\n. @webdevsHub I suggest you mention this in the changes.txt as a BC break.\n. Please keep the naming of protected variables as they are (naming convention).\n. Can you use $* for private and protected variables (naming convention).\n. Same here, please use _* also for protected function names.\n. It should also be mentioned in the function params that these options can be set through param (line 110)\n. I assume this is done automatically by the cleanup script. I'm not a fan of \"empty\" return, but if we have an automated way to cleanup things, I can also \"life\" with this version.\n. This variable sounds so counterintuitive. But it is 100% correct. I also checked the ES docs.\n. Should we actually throw a not found exception here?\n. Thanks for checking ...\n. Why did you move this into required?\n. Thx. Looking forward to it.\n. Why did you rmeove the phpunit.xml.dist file? The nice part about is that it can be locally overwritten and the .dist stays still in place.\n. Can you use _checkKeyLength here as the function is private?\n. I would suggest to also add an assert, that the \"index\" was successfully added. For example you could use getIndexes() and check if it is part of it.\n. To have a more readable path, check here: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/IndexTest.php#L124\n. I assume this should also be \\Elastica\\Query\\Image\n. :+1: \n. I like that :-)\n. :+1: \n. Good spot ...\n. Wouldn't it make sense to keep this test as it is and add a new one? Liek this we now that both options work. Or what is the reason you modified this test?\n. Do you know in which version of ES this was removed? I didn't check the changelog ...\n. thx\n. This means setting the timeout for all clients that don't implement it to 5 seconds. Isn't the default (without setting it) 300? So it would make sense to keep the behaviour the same as before to set it to 300? Or what is the default currently used?\n. shouldn't it be only 3 null?\n. Nevermind, I just saw that there is a fourth param size for ScanAndScroll\n. Based on the new Makefile I suggest we \"simplify\" the travis.yml file by directly using the make commands (https://github.com/ruflin/Elastica/pull/852). Here for example make prepare\n. make phpunit\n. - is it necessary to remove the .lock file?\n- Does the phpunit output still exist?\n. That is cool :+1: \n. I would suggest to make the 4 \"provider\" functions protected as they don't need to be public.\n. @hasumedic Currently the convention is arrays. This is mainly related to the history of Elastica as it started very simple and grew together with elasticsearch. If we change to ArrayObjects, we should consider a change across the full library. @ewgRa brought up this issue and I just realised I never responded to it :-( https://github.com/ruflin/Elastica/issues/783#issuecomment-75366015 I suggest to continue this discussion in #783 an until then we use arrays.\n. Make sense.\n. I see, haven\u2019t thought of that. The best thing would be to only install and boot up elasticsearch after the unit tests were run. Perhaps we can set environment variables for each build and for the unit tests set the ES_HOST to null.\n\nOn 21 May 2015, at 14:31, Igor Denisenko notifications@github.com wrote:\nIn .travis.yml https://github.com/ruflin/Elastica/pull/858#discussion_r30796730:\n\n@@ -29,9 +29,9 @@ before_script:\n- if [ $ES_COMPOSER_NODEV == \"no\" ] && ! $(phpenv version-name | grep -q '5.3'); then sudo composer require \"guzzlehttp/guzzle\" \"4.2.*\" --dev --no-ansi --no-progress --no-interaction; fi\nscript:\n  -  - phpunit -c test/ --coverage-clover build/coverage/clover-unit.xml --group unit\n    Just FYI, if unit tests will be placed before shutdown, they potentially can hit ES server, that obviously not thing unit test is supposed to do.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/ruflin/Elastica/pull/858/files#r30796730.\n. I didn't rename the constant on purpose as this will break BC. If we change it, it must be mentioned as BC break in the CHANGELOG. I suggest we change it as I think in the long term it makes more sense to have it in the namespace.\n. Agree. I'm not even sure if \"debug\" is the correct name. Perhaps it is more \"verbose\" or something like that.\n. I remember it was more a memory issue then a performance issue. CURLINFO_HEADER_OUT returns the full string as part of the response object. If you use bulk mode this can add up to quite a large object. CURLINFO_HEADER_OUT could also be set through the curl options.\n\nThe query time part should not have an affect and I think this is what is mostly needed.\nBest would be to active the benchmark tests to see if there is a difference. They should work now again but are not enabled for travis.\n. I actually used here addDocument on purpose in case some parent mapping goes wrong or is incorrect, it is easier to find where the exception was thrown.\n. Will change it, even though the difference is quite minimal.\n. To make this work, it must also be added to _validateOptions: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Search.php#L273 Best would be to add a small tests to make sure it works as expected.\n. In case you have boot2docker running, it is quite simple: \nmake run RUN=\"phpunit -c ./test lib/Elastica/Test/SearchTest.php\"\nThis runs the SearchTest.php file. The first time will take a little bit longer as it must fetch all the docker images.\n. @webdevsHub Here I would add a comment: Latest always refer to the version mentioned in README.md\nLike this it never has to be updated here :-)\n. @im-denisenko I'm really unhappy about this line. Not the 777 but that I have to change the access rights after the images are running. What I need is a shared data container where all elasticsearch instances have write access. I tried to do it directly in the data image https://github.com/ruflin/Elastica/pull/901/files#diff-6ddc070b659c249d339814ba724740edR10 or also in the elasticsearch https://github.com/ruflin/Elastica/pull/901/files#diff-66fcadff5e0bc20f3becadf59df62f5bR28 But only the setup part works. I'm quite sure there is just a small command that can be used to get it working. Do you have any experience here?\n. I know that symfony has the naming standard without the underline, but as the Elastica project everywhere use $_* for protected variables, please adjust it.\n. I suggest to add here the link to the es documentation: https://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-templates.html\n. Yep, we take the SHOULD part here ;-) I fixed it and pushed it to master. Thanks for the contribution.\n. I actually planned to clean up the .PHONY part by putting it on top of every command. Like this no \"old\" commands should appear here. In general I tried to reduce the number of targets we have in the makefile, but there is still quite a list :-)\n. @im-denisenko Here is the pull request for the Makefile. Have a look and merge it if you think that helps: https://github.com/ruflin/Elastica/pull/917\n. If I understand this right, this is only a BC break for people that extended from AbstractScript. For all the inherited classes there is no difference that is not part of the library?\n. Can you use string concatenation here? '_script/' . $lang . '/' . $id) ? The main reason is that it is used like this across the library.\n. See above.\n. As getScriptFile is not released yet I suggest we don't call this change a BC change. See https://github.com/ruflin/Elastica/blob/master/CHANGELOG.md Or should we create a proxy method getScriptFile in the scriptFile object?\n. Are plugins not working anymore so you commented it out?\n. No rush ;-)\n. @stof Agree. There is something wrong here. Did you spot this because of the discussion or did you run already in some issues with it?\n. @stof Here is the fix that I applied for the current release: https://github.com/ruflin/Elastica/commit/5a08b5f66b76f2f91ecba6213a7a6b9c9225326d\n. @ewgRa Not sure what you meant with your second last sentence. Please open a pull request with some tests if possible for the suggested changes, so we can directly discuss it based on code.\n. :+1: \n. @ewgRa The question is if that is now the expected result or not :-)\n. Please use $_type for private variables.\n. @JustinHook I would suggest we make a \"constant\" out of this which can be used. What do you think?\n. I like the int|string (or is it float|string)? Can $fuzzniess be a float? I think setFuzzniess must allow all possibilites. If we have an additional autoFuzziness method, why not. As a side mark here: auto is the default, so I assume this call will be rarely used.\n. We should mention here why this code is here by linking to the issue: https://github.com/ruflin/Elastica/issues/717\n. Instead of introducing a new function, I would suggest to add a param to setMapping \n. I would suggest the following change here:\nif (bigint) {\n   $response = JSON::parse($response, false, 512, JSON_...)\n} else {\n   $response = JSON::parse($response);\n}\nThe main reason for this are the defaults. They are correct at the moment, but in case a PHP version changes these defaults, we would stay with the old ones. I think if we apply special flags, this is ok. But for the default we should hardcoded fewer flags.\n. You have to use BoolFilter here to make it compatible with PHP 7: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/BoolFilter.php\n. https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/BoolFilter.php as above.\n. I would probably not name a \"specific\" version of Elastica, as I'm also willing to remove deprecated functions in minor version.\n. Nice one. The only concern I have is that I don't know what people are using to catch errors. But Lets keep it in.\n. My main problem is that I don't want let us \"nail down\" on a specific version number.\n. This test would also pass without the setJonBigintVersion(true), right?\n. Sorry to bring this up again. But isn't the affect here, that if BIG_INT is enabled or not could be that the response object looks different?\n. I'm fine with the test. But I assume this test would also have passed without the code changes you made? It is more for me to understand if we test if the bug was actually fixed or if we test that we can use the function without any side affects?\n. Is there a specific reasons these were made private?\n. +1 on moving this into the getters to somplify the init.\n. I really like the idea of a result builder\n. +1 on the transformer idea.\n. @kukulich that is great. Seems to work.\n. Could you use _createPsr7Request here to follow the Elastica naming convention?\n. Can we add a @deprecated message here? Check some other files which are deprecated for some examples.\n. I was first thinking if we should better add this inside the connections. But that would mean setting it up for each connection. I think it can be expected that all elasticsearch nodes have the same users so I'm happy to have it hear.\n. Sholudn't AbstractFilter extend AbstractQuery?\n. Could we move this to a function in Param for example? This would simplify the code. You could still pass the first part of the message to the function to have it noting what is deprecated.\n. My initial thought was, that one extends the other which would prevent the check function above as we could still have the type specified in the function. Still thinking if this could make sense? That would remove the throw InvalidException part.\n. Should we rename the param the $query instead f $filter to make it more obvious? This would apply to all changes.\n. The other advantage is that we don't have to check for null every time. The deprecated message will be shown anyways if someone uses a filter, as somehow the class has to be initiated.\n. If we don't make it \"lazy\" it means every time the query build is called, we get the deprecated error, right?\n. Shouldn't this be dependent on which param is passed to count?\n. Wasn't aware of that. LGTM.\n. It looks like the approach here with an options array could be more flexible: https://github.com/ruflin/Elastica/pull/1038/files#diff-1d7207a5d6e8ecfaa5d6386b7e0edb99R368 Can you have a look at this together with @intech ?\n. @vinusebastian Idea was not necessarly to close this one, but have a chat with @intech on the best approach :-)\n. This breaks BC in case someone extended the Client. Not something that prevents us from moving forward, but worth mentioning in the CHANGELOG.md.\n. As far as I understand, every Search can be done with a different Result Builder, but by default is the one used set in the client. So instead of passing it here, we could make Search fetching the default result builder from client if the param as null.\n. In a way there are 2 default builders: One for normal requests, one for multi requests. In the client only the one for single requests can be set?\n. BC breaks as noted in the beginning.\n. Shouldn't the fall back be the one set in the client as default (see previous comment)?\n. Unrelated note, but I think this functionality will become obsolete with the new Reindex API coming in ES 2.3\n. What do you exactly mean by \"set a creation time\"? You mean inside the search object (which seems to be the case also with an optional param) or here inside createSearch? \nAs createSearch is \"only\"  a proxy method it should probably provide all options that can be passed to Search itself. So I somehow like the idea of providing an additional third param which is optional. \nI can see your point about simplifying the code on our side and preventing bugs, but it makes it harder for beginners to start with Elastica. Some \"magic\" is ok from my point of view, as long as it can be overloaded by setting the specific params.\n. I would suggest the following approach first:\n- Client has no knowledge of the builders\n- Each builder has its own default type\nThis is in a way identical to the current behaviour. If we later realise that it could be convenient to set a \"default\" builder for each type we can still figure out, which is the best place to set it.\nSo I would remove it here probably.\n. Yeah, that is what I mean by my note, that it should be added to the CHANGELOG. I'm ok with the BC break.\n. Lets keep it as it is for the moment, merge it and work from there.\n. In which cases would that happen? Not sure I can follow.\n. Yeah, that would probably break quite a few things.\n. +1 on this\n. That needs probably some adjustment now and be moved up as we did a release in the meantime.\n. Not sure how phpdoc is going to work with this, but I would assume the type should still be called ResultSet?\n. Should we call this perhaps \"BaseBuilder\" or \"DefaultBuilder\" to make it more obvious that it is the default and just one of many?\n. Perhaps here also \"DefaultProcessingBuilder\" or \"BaseProcessingBuilder\"?\n. I personally prefer to have only one return statement per method. I'm aware that this is a personal preference but I would like to keep it the same across the whole library.\n. The key for me in writing code is to make it as readable as possible. I'm not sure if this change makes the code more readable (at least not for me).\n. I'm aware that this could be a potential performance improvement, but as I don't see this as something that could have a real impact on the overall performance of an app code readability is more important for me.\n. @ReenExe Like I mentioned before, the changes are not wrong at all and lots of projects do it this way. It is only about my personal preference. Unfortunately you are right and it is probably not followed in all parts of the code :-(\n. @ReenExe I had a second look at our existing code and your changes. I made the decision to move away from the 1 return principle in Elastica as quite a few of your changes also make the code more readable. I will review your code a second time with this in mind.\nThanks for bringing up this topic and discussing it.\n. We should probably add here return null so it is clear nothing is returned if non matches. Yes, that was also missing before. Outcome will be the same, but I think it is nice for readability.\n. See comment above about return null\n. I liked the previous code more because the normal behaviour is on the top level of the function and special checks are made for the exception.\n. return null\n. thx\n. Could we keep this code in the getters and use here the getters instead? It means we use getData() 4 times but that should be ok?\n. Doesn't matter too much to me :-) Will merge as it is.\n. Agree. Didn't spot this one. And We are quite a long way away from removing 5.5 support ;-)\n. \\Elastica\\Client as type hint should still work, no?\n. :-( I'm curious how many people actually extended the client?\n. Please remove this note. Lets keep the logic the same in this PR, so I suggest to uncomment the below again (especially as the tests fail).\n. Please remove this comment (see comment above)\n. Same here\n. Do you really want to overwrite the error varialbe here? what if there are multiple root_causes?\n. @Tobion Can you share some more thoughts here? I assume the intention was that the Path always has / as a prefix and the host doesn't. \n. Could you use $rootError for the name here to adhere to our naming standard?\n. I didn't realise that the params were turned around. Definitively doesn't make sense. \nDid you stumble over this because it broke something? If no, it seems to just work and we can remove it? Otherwise, we should provide a fix.\n. Agree. Should we open an issue or PR directly?\n. Isn't that still needed?\n. I'm not sure what you mean here by if covers?\n. Hm, I assumed it would throw a notice, but this does not seem to be the case.\n. Ok, lets remove then the TODO for the moment and lets leave it as it is.\n. Officialy, PHP 5.3 was removed on 12. November 2015. But until now, it was still possible to use almost all of the library with PHP 5.3. In general if there was no big benefit of breaking 5.3, I didn't, but with introducing [] in all files it definitively doesn't work anymore with 5.3. That is why I mentioned it to add it. \nFollowing suggestion: Lets go with the suggestion from @merk as it will be confusing it \"breaking 5.3\" shows up again. Sorry about the confusion from my side.\n. Yes, but just the php 5.3 break part.\n. Isn't type a string?\n. I thought that in previous version of PHP this was throwing a notice, but I just tried it in PHP 5.4 in it looks fine.\n. I don't think these two are here the same. If $data['response] == false the first one would not catch it.\nOverall as we look for an array to in the end it seems to be the same. Do we have unit tests here to make sure that is the case?\n. Looks to me like it does the same. To we have a unit test that covers this? You can easily check in the coverage report.\n. Hm, reading this again. The outcome is the same but the previous version makes much more sense to be as we want to count the number of entries in $params. It doesn't matter to me if it is count(...) == 0 or size_of() == 0 or the existing one, but not replace it by empty. I don't see the benefit.\n. I think I still miss here something. $this->_params['type'] is already a string, so your example does not apply I think.\n. Not sure I get this as:\n$data['responses'] = false;\nempty($data['responses']) // true\n!isset($data['responses']) // false\nEven if his currently the same affect, the question is what our intention is: Do we want to check if the array entry is set or checking if it is empty? These are conceptually two different things and I think it is the first one we are looking for. So I would not change this line.\n. Yep, looks good. That is what I was referring to: https://codecov.io/gh/ruflin/Elastica/src/bc7072afc02957035bd1c579e5dbd74e553950e4/lib/Elastica/Cluster.php#L74\n. @ReenExe I think you just discovered a bug. I missed addType. Unfortunately we don't have any unit test for this. It seems we have tests for setType so the string part seems to work as expected. I'm curious of addType would even properly work with elasticsearch.\n. Interesting that it swtiched this one to mix.\n. Not sure I can follow your comment above?\n. I prefer to keep the count(..) here for the \"meaning\" of the code. Behaviour should be the same. Perhaps even more meaningful would be count(...) == 0\n. I think the return already existed before?\n. Not 100% I understand what you mean but best is to just push a new version of what you think should be done which makes it easier to discuss.\n. An assertion should be added here to check if the field is resetted.\n. Could you add a newline afterwards?\n. Seems like your merge now caused it to be added twice. This one should be removed.\n. If you already edit the changelog, you could also add #1150 at the end (see change examples below)\n. It would be nice to also have this for an integration test to make sure it also works with the current elasticsearch version. but we can add this in an other PR.\n. I will probably move this to improvements before the next release as I don't think it was a \"bug\". The limitation was more for historical reasons.\n. If you install without require-dev, php5.4 works.\n. Is there a reason you \"cache\" the version? Do you expect that this call is happening more then once during the lifetime of a Client?\n. Could we use here some like version compare to compare it >= 2.0.0? http://php.net/manual/en/function.version-compare.php\n. I think the addDecayFunction is becoming too many params. We should probably switch to a $params array to not have BC breaks in case one of the params disappears. Also this makes adding / non supported params easier.\n. NOTE: Does not necessarly have to be fixed in this PR, just a note.\n. I think it is fine to \"hardcode\" the minimal compatible version. >=2.0.0 will work for all future versions. I agree if we \"hardcode\" it, it should be in a variable like MINIMAL_COMPATIBLE_VERSION for reusability and this makes it easier to update it. If you find a good way to expose ES_VERSION, also nice.\n. We should also set a default here, same as in constructor. Otherwise it is not BC as the third param is required.\n. I'm kind of thinking if we should turn this around. Have the base assumption that $transport is the full class name, and only have as fall back the Elastica once. I would have to check where in our code we would have to adjust these paths.\n. we should still throw an invalid exception in case none of the classes matches. \n. Got it, missed that line in the diff.\n. Should we require ScriptFields type here? One can just use new ScriptsFileds(...) when passing the argument. Like this we can verify the type and have less \"magic\".\n. I think the scriptFields in the TopHits is probably for historical reasons as it was perhaps introduced before ScriptFields and only arrays were passed. \nUnfortunately we can't remove it from TopHits directly as it would break BC. We should add a note there that it is deprecated. Even though it is not consistent I prefer not to build up more legacy and only use ScriptFields here to be supported. Otherwise there will be in more BC breaks if we remove it one day.\n. Can we add a test for this to confirm it works as expected?\n. can we get this on one line even though it becomes a little bit long?\n. Is there a reason you removed this line?\n. Ah, missed that one as it has a / now. TBH I think this file should stay in as in case you install / update a library and something breaks, it is good to have the CHANGELOG local.\n. This belongs under BC changes as in case someone was using some of these files (for whatever purpose) they will disappear during the next update ...\n. Even though the list is going to be quite long, we probably have to be here more specific for people that upgrade and list all the methods that were removed. Please also link to the PR.\n. We can directly use these comments for the changelog as I think they are quire good. Just replacing deprecated by removed.\n. We cannot remove this yet as it was never really released as deprecated. I suggest to keep this in for the next major release and only remove it afterwards.\n. Which also makes me realise, perhaps we should trigger here a deprecated message?\n. Need to check if this one was also just deprecated in one of the last commits.\n. It's hard to see it going but I agree its time to remove it, especially as it was not really maintained anymore.\n. You are right. Lets remove it it then.\n. I assume that means we don't need line 41 and 42 anymore?\n. I think both still exists. I'm not a big fan of local variables as we have params which brings more flexilibty. I was thinking if we should remove the variable completely and use params for prefix and text.\n. Plan SGTM. @Zyqsempai Any objections? If not, will merge #1213 and for 2 and 3 we can use this or future PR's.\n. @p365labs Can you rebase on master and move that above the beta1 release line? I'm not even sure we need this changelog entry as it is only an update.\n. Ok. @p365labs Left you a minor comment in the other PR before merging.\n. @p365labs Are you sure? I still see it in the CHANGELOG under beta1\n. How did this line end up here?\n. #1213 is merged now\n. I think when we just update tests and don't to any chances to the actual code, we don't need the changelog normally. Going to merge it anyways ;-)\n. If I look at the 5.0 examples, text shows up quite frequently: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html. It would be nice if we could move this to the already existing _params array.. How is this different from setRegex?. If we use _param this should not be needed.. As the minimal supported version of Elastica is now 5.6 we don't need this.. What is the benefit of having $args here? We fetch / overwrite them on line 24 anyways. I hoped PHP would itself already have somewhere such a nice lookup list.. SGTM. It's a little bit inconsistent that the method can return string and bool, but it is PHP, so fair enough ;-). I think now we can completely remove the toArray as it will just take the parent one.. We could make the url lower case first and then compare to %2f?. I would remove it as I'm not sure how this is related to the date math escaping?. Can you elaborate on the slash check? Not sure I get the relation between this and date math. Or is this a more general problem?. I think this will also work with multiple indices \ud83d\udc4d . How does it know which is the correct path to Document as it is in a different path?. Note for myself: Need to check this in detail again.. This was removed in 5.0? If yes, we can also remove it here as it not work with 5.0 anyways, correct? But we should mention it in the changelog.. The question probably is, if phpdoc automatically also detects this. So I assume the answer is yes.. This seems to be a BC break, right?. AWESOME. I like that idea.. I also assume that everyone that used it hopefully contributed it back to Elastica. For completeness I would still like to mention it under breaking changes. That doesn't mean I will not create 5.1 out of it ;-). @rarothedude @legendik FYI based on https://github.com/ruflin/Elastica/pull/972. Nice addition. I hope that ES will also clean this up in the future and only have 1 option of returning bools.. Not sure if we introduced this to make master \"partially\" compatible with 2.x. Happy to remove it now and lets readd it in case things break .... @Tobion Were the once you removed not needed anymore?. @thePanz Could you also add the PR number behind it? We missed it in the recent changelog entries but I want to add it again as it makes reading changelogs easier as you can jump to the PR directly.. I think I specified them a long time ago when I had issue with different phpunit version having different defaults. . Interesting names :-). Good idea, so people use this for ONLY 5.5. Good idea to only have 5.5. Makes it even more obvious this is only for 5.5.. Could we move the changes to these 3 lines to an other PR? I prefer not to mix the heavy moving of files with these \"dependency\" logic changes.. That is an interesting discussion we should probably have. I was stubborn enough to keep Elastica with _ for all private and protected function as I personally liked it. But I think in the meantime, most projects moved away from it?. The reason I kept the _ is not because of the modifiers, they exist for quite some time. I kept it for humans as it makes it very easy to see if a method is public or not. Similar to Golang that uses upper and lower case for it. As I said, I still like the _ but I think also it makes sense to follow what other large projects are doing to have a \"unified\" code base.\nWhat are others doing?. Welcome to Elastica ;-) Seems like we should make this switch across the product then. Perhaps we can split it up in 2 parts. First migrate all tests and the library. On the library side it will be obviously a BC break so we should do it as soon as we decide that we are potentially not going to do any further 5.x releases. ES 6.0.0-alpha1 should be out in a few weeks. That sounds like a good timing from my point of view.. @Tobion You mean to do it across the whole project? Or you would do it step by step and only if the methods have to be changed anyways?\nFor the overall, I'm quite confident we will have some in 6.0. And for the change I don't worry too much about the users, I mostly worry about other libraries like FOSElastica where this is potentially going to break things.. search type was never used?. Could you add a comment to this method that it takes each endpoint from elasticsearch-php?. Could you add a quick note (docs comment) on what it is cloned? Just to make sure nobody will remove it in the future .... Do we also have to add the index name here?. Do we also need the index name here? It was part of the request before .... Nice.. Even better.Ping me when done.. Not sure I can follow the above comment?. Got it, also not sure how to deal with it. Lets merge it as is.. I prefer to have a specific version in here instead of latest. I had the experience in the past that with latest a new version gets pulled automatically which can break the CI. As I want tests to be reproducible, a fixed version should be kept in.. Can you add a comment in the code on what this is needed?. I would like to set this to a specific version as changes then to break related to docker releases :-). This already starts the service. I would not expect this from setup. Does this belong into start. could we use the makefile commands here?. Glad to be on version 2.0. As you have only 2 instances of elasticsearch, this should probably be set to 1 and not 2?. That is great. I would really like to use a more recent version, but have a fixed version.. Seem slike we can remove setup now completely? . Nice, that also removes the network. Should we add -v to also remove the volumes?. Happy that we got rid of it.. setParam(..) should already return $this so you can put the return in front of the call directly.. As the header will be required in 6.0 and alpha1 just came out, I think our tests will hopefully show very quickly if we have to fix some more things here. For the moment I think this fixes the most urgent issue.. We use lowerUpper case for the variable names across Elastica. Could you change it to $otherBucket? Same for the other variable names in this PR. Why did you add final here?. Could also add here a newline before the next title?. I would prefer to remove it as we don't have it in any other files and I don't see a reason, why we should prevent someone extendings this class if we wants to (even though it is unlikely to happen).. typesedit ?. glad to see you used the endpoints \ud83d\udc4d . Why did you use static method here? I'm thinking the implementation would become simpler if you would use a Reindex object where old, new and options are passed.. I was thinking passing params to constructor and then having something like $reindex->Run() or Start or something similar. Perhaps Start() could also take additional options. Not 100% sure yet how the most common use case will look like. Any thoughts?. We always use $oldIndex for all the variable names which are private / protected but perhaps the time has come to break this as not much other projects are left with the old pattern.. Please make these all protected and not private. In case someone wants to extend Reindex in his code, he should be able to.. Make these also protected, not private.. This one should also be protected.. This would be _getBody(. This should also be not static and start with * Also make it protected if there is no need to make it private.. Instead of removing the tests, could we add one that it now works as expected?. This is actually a breaking change.. This more looks like _setQuery as in case a second query is set, it will overwrite the previous one.. is_null? http://php.net/manual/en/function.is-null.php. See prev. comment.. This probably goes more under BC Breaks as we didn't deprecated it but removed it.. Should we replace this with ingest-attachment?. We normal have a return $this->setParam('little', $little); in here so all setters return the object itself. This allows for chaining functions.. Where is this coming from?. Anything wrong with using 9200?. We should also link to the PR number. I'm aware this is normally tricky before opening the PR because it is not known yet :-). Why did this change?. We could probably now use true instead of 'true' here?. I would put this under breaking changes and not improvements.. I would not add this to the change log as we didn't change anything on our side. We only modified our tests to be \"correct\".. I assume this has to be dropped because tests were not passing with elasticsearch-php for 5.6?\nThe reason I'm asking is because I would like to keep the tests for 5.6 around as long as possible, even if we don't official support it. But if it becomes a hassle, lets remove it. I probably have to check if es-php is really not compatible with 5.6 or if it just removed it from the composer file.. Leftover?. There is no logical change here, right?. We should leave the code in, but should we leave the tests in?. There is no change for this in Elastica as far as I can see.. I would more see this as an enhancement then a bug as the code was executing as expected, just not very performant. In can still change that later.. Got it. Thanks for the clarification. Was not fully clear for me from the changelog / PR description.. I wonder if we should return an error in case body is not a map to make it easier for app devs to detect the problem early.. Pipeline object? Also below.. Glad to see that you directly use the endpoints.. Should we throw an exception for now?. This should probably go under Added. I wonder if the !empty is even needed as we already define it as array.. Is this change also needed?. Leftover?. I wonder if there are reasons we should make this optional. Are there use cases where users don't want to remove the search context?. Make sense \ud83d\udc4d \n. Nit picking but could we name this variable differently, something more describtive? I'm curious what happens on the next line in case toArray() does not on the varialbe?. We should remove this code if not needed anymore.. I'm confused. Why is this even a diff? This is what I did in my commit: https://github.com/ruflin/Elastica/blob/master/.travis.yml#L28\nYou had a nicer version in your previous PR where it was a variable.. Sorry to be picky, but could you add the PR number and a link to the ES reindex docs?. I wonder if we should update line https://github.com/ruflin/Elastica/blob/e47dd0e4832b26127c1275fd7bbe1e3ca6138792/lib/Elastica/Util.php#L77 in some way? Interestingly it already doesn't list < and >.. +1 on removing it. I'm good with most wordings :-). I don't think this change is related to removing support for 5.6 but an improvement because we can use these features now. As in state in my other comments, lets do such changes in separate PR.. As I plan to keep Elastica and php elasticsearch versioning in sync I would suggest to go for 6.0.* instead. Every time there is a minor on the php elasticsearch side, there should also be a minor of Elastica. So if someone wants new features he also needs to update Elastica. This should make bug tracking easier as we know almost the exact dependency.\n@polyfractal Any thoughts here?. @curry684 I assume my suggestion above would already solve your issue that you didn't get the last bugfix release?\nAbout semver, my take on it is here: https://github.com/ruflin/Elastica/issues/1374 But I don't think that really has an affect here.\n@greg0ire I think you are right with your comment, that I don't expect Elastica to have any minor release without an elasticsearch minor release. There is quite a bit of history on linking release together. Initially it was, then we had our own versioning and synced it up again. I'm pretty happy so far that we synced it up again.. Could we move this into a separate PR?. In which case will this line match or not match?. Interesting. I assume you tested that this works? Could we add a test case? . Shouldn't this be 'string source' => 'title',? Otherwise it will be passed as array.. Got it, reading https://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers also helped :-). +1 on the change suggested by @stof . I think a few more things sneaked into the changelog here?. Good catch. normally we return $this so setters can be chained. Here it would be return $this->setParam(... Same below for the other methods.. How would this look like if you would not keep it BC?. What does the second group here mean and what is it for?. This only renames it and does not delete it?. See comment above, it makes sure document is renamed.. Updates all docs?. See above. I wonder if we should treat this as a bug or breaking change ... . It reminds me of https://github.com/ruflin/Elastica/issues/1374 Let's ping people in there on what they think.. Make elastica upper case if possible Elastica. What would we do without xkcd?\nSounds like we are all agreement we should move forward with this.\n@Tobion I suggest we still add an entry to the breaking changes for people to be aware of it.. One more nit I spotted above: It's Elasticsearch and not ElasticSearch. I would expect most users to install it directly through their composer file?. I wonder if we should rather update the docs here: http://elastica.io/getting-started/installation.html ?. I would not judge if one is better over the other but we should have both there. Do you want to open a PR agains https://github.com/ruflin/elastica.io ?. Could you link the PR number here?. What is the \\ doing here before is_array?. Can you share on how this optimises the code? Want to learn more here.. Interesting, was not aware of this optimisation. Thanks for the details, I would probably skip it in this PR and rather have a follow up PR that adds it in all parts of the code base to be consistent. It seems that is something that could be done with https://github.com/nilportugues/php-backslasher in an automated way?. I'm looking at this line and wondering if it could have any other side effects. Thoughts?. Leftover?. @carusogabriel I just tried to run make lint locally with this config option in and I get:\n```\nLoaded config from \"/elastica/.php_cs\"\n[ErrorException]\n  strpos() expects parameter 1 to be string, array given\nfix [--config CONFIG] [--config-file [CONFIG-FILE]] [--dry-run] [--level LEVEL] [--fixers FIXERS] [--diff] [--format FORMAT] [--] []\n```\nWill remove it for now but would be nice if you could contribute a fix.. Ok, I moved both of these now under improvemetns as I agree these are not breaking changes.. Will leave it in as breaking change for awareness. It could be breaking if people did something wrong before already I think.. Could you also update the README file with this version. The testing version is mentioned there.. I always squash on merge anyways, so the merge commit should not be an issue as long as the PR is clean.. Seems like too many changes slipped in here? . Something looks very off here? Rebase issue? Can you clean this up?. I don't think this should be here?. Could you have a look at CI? I assume some more updates are needed: https://travis-ci.org/ruflin/Elastica/jobs/467233662. Is this change intentional?. Nice that it catches such things with return. I'm positively surprised :-). Are the also changes it has done automatically?. Automated change?. @maltehuebner You don't seem to have luck with the changelog and rebase :-(. No worries, it's not you. It's the 3-way merge commit magic from Git that soemtimes does funny stuff here :-). Yes, but separate PR. I do not want to see what the affect on each single one is.. Lets use docker.elastic.co/elasticsearch/elasticsearch:7.0.0-alpha1-SNAPSHOT during the development for this. It will make the CI more flaky here as it could be that new breaking changes just came in but lots of changes have happened since 7.0.0-alpha1.. I'm wondering if we should just do a separate PR to do all the _doc conversion. This should already work against 6.x and would make this PR much smaller.. Perhaps the line here helps (different plugin, but same mechanism should work): https://github.com/elastic/beats/blob/6.4/testing/environments/docker/elasticsearch/Dockerfile#L39. suggestion\n- Added codecov configuration. Can we please keep this in? I need this to generate the docs :-). still needs a fix ;-). Are these the default values from Elasticsearch? One challenge when we set these is that ES might change them but Elastica does not because we miss it.\nDo we need the default? Because I assume if someone calls this method, he does want to change the default?. The challenge I see here is: How do we keep up with defaults that are changing in ES?\nFrom a maintainability perspective I would probably rather prefer not to have defaults in Elastica. I think the ones we have are rather old from the 0.x ages of Elasticsearch. Back then the API was not very extensive and it was still possible to keep up with changes. \n@massimilianobraglia Could you link some default examples that are already there?. I like to have also rules inside that we disable to be aware of it and in case a default changes we it does not change here.. Just had to look up the current state of PSR-0 and as it's deprecated, agree that we can remove it.. Thanks for cleaning up the CHANGELOG. @massimilianobraglia I would be for not having the defaults but lets' also see if @p365labs agrees :-). I wonder if this could have some side effects?. Is this in this PR?. Could you add a link to the PR at the end of the line?. @p365labs Not sure I can follow. So this is good?\nIn general it's just a gut feeling I have that the above could impact other things. If we don't find something I'm good with moving forward.. @massimilianobraglia I like the middle ground you are proposing. This allows to also only introduce the defaults that are often needed instead of all.. Does this mean we get a follow up PR?. Both options work for me, whatever you prefer.. I hope we also get a 7.0 version from elasticsearch-php.. Can you add the PR number / link to it?. Could you open a separate PR with this change to make sure it does not have any other affects? With this change, we normally also update the README and all the places where we mention what we test with (just search for 6.5.2). ",
    "kcm": "yes, the optional top-level type in the index operation.  I suppose it would be OK to support it as optional.\n. ",
    "tenorviol": "There was an extra case where it was possible to delete the entire type index via this method. I added a catch for it. Not sure if you need a separate pull request for that case.\n. ",
    "kvz": "That was fast, thanks : )\nbtw, using your lib to make a plugin for CakePHP: https://github.com/kvz/cakephp-elasticsearch-plugin\n. ",
    "caphrim007": "Awesome. Thanks!\n. It doesn't sound, to me, like an exceptional case to not have an error to return if no error has been encountered. So in that case, I would think that asking \"give me the error\" would return null, or an empty string (based off the function docblock) instead of raising an exception.\nIf the exception is raised, then in userland code, you'd need to always wrap that method in a try...catch to prevent the whole script from exiting.\nI looked at the Zend Framework's behavior in the XmlRpc Response code, and they do something similar\n/**\n * Returns the fault, if any.\n *\n * @return null|Zend_XmlRpc_Fault\n */\npublic function getFault()\n{\n    return $this->_fault;\n}\nNo exception is raised.\nChecking for an error with hasError may make sense, but it looks like you'll be calling getData twice if there is no error. Once for the hasError method, and then once again in the body of getError to return the error that was encountered.\nThoughts?\n. I changed the assertion to use the fail method.\nI think we should consider the hasData changes (hasError and refactor) for a different set of pull requests. I'm a little bit swamped right now, but I can do them based off of what you outlined earlier.\nAre there any blockers that would prevent the current changes from going through?\nIf so, let me know and I'll fix them. Otherwise, I can send another pull request with the changes to the test suite.\nThanks,\nTim\n. oh ok, np. take your time. i just wanted to make sure that if something \nwas still needed for a merge that I would be able to address it.\nThanks Nicolas.\n-Tim\nOn Sat 03 Sep 2011 12:40:18 PM CDT, ruflin wrote:\n\nAs far as I can see, there are no blockers at the moment. The main problem is, that I'm traveling at the moment and don't have an internet connection too often. I will try to merge it ASAP.\nOn 02.09.2011, at 08:04, caphrim007 wrote:\n\nI changed the assertion to use the fail method.\nI think we should consider the hasData changes (hasError and refactor) for a different set of pull requests. I'm a little bit swamped right now, but I can do them based off of what you outlined earlier.\nAre there any blockers that would prevent the current changes from going through?\nIf so, let me know and I'll fix them. Otherwise, I can send another pull request with the changes to the test suite.\nThanks,\nTim\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/84#issuecomment-1979806\n. \n\n",
    "wlp1979": "I have also added some new filter types and altered the Or filter.\n. The only reason I like throwing an exception is that it makes the reality of the response more consistent with the non-bulk requests.  If the response has an error on the non-bulk requests then it throws an exception. I know this is a situation where the request could be partially successful. Also if the return value of Elastica_Response::hasError() is true for bulk response errors, then the system will already throw an exception.  The main reason I created a different BulkResponse exception is that the exception is really a container for multiple exceptions.  Does that make sense?\n. ",
    "ornicar": "According to PEAR/PSR-0, class names must match directories. A \"Interface\" directory makes few sense IMO so we are left with Elastica_Searchable and Elastica_SearchableInterface.\nLet's see how others do...\nI found only one (!) interface in the zf2 repo.\nLooking at Twig (https://github.com/fabpot/Twig)... it has a lot of interfaces, all of them matching my initial naming proposal. Twig_ExtensionInterface, Twig_NodeInterface.\nIt looks like a good practice to include the word Interface in the interface/file name.\nAnd I think it makes sense, due to the nature of the word Interface, to not separate it with an underscore.\n. Yes. I will do it, and fix at the same time the soft-tabs I introduced.\n. hmmm in fact there are soft-tabs in many places... but it looks likes the standard here is hard-tab.\n. \"Is it necessary that every searchable object also has to support count?\"\nWell as elasticsearch provides count each time search is available, I'd say yes...\nWe can also keep these features separated by adding a Countable interface, but I feel it makes less sense, especially when you want to paginate search results: the count is needed as much as the search.\nElasticsearch keeps count and search very similar and I think Elastica should reflect this consistency. By giving both methods the same signature, ($query).\nSo, move the query construction logic to a new protected method to avoid code duplication.\nThoughts?\n. There is indeed a minor flaw in the architecture. The searchable classes are given too much responsibilities. An easy way to reduce the code duplication between searchable classes is to move the query construction to a static method Elastica_Query::create. That's what I am doing now.\n. -> https://github.com/ruflin/Elastica/pull/13\n. Please review that.\n. PR on its way.\n. https://github.com/ruflin/Elastica/pull/25\n. I don't have the time to read it all but just wanted to say: please, please, no static method and better avoiding magic __call methods.\n. this can be done more efficiently with\n$result = strtr($term, $replacementMap);\n. ",
    "jappievw": "Sorry, I forgot to mention that ;). You are right, the API didn't change. \n. I just updated the code to better stick to the conventions. It has been checked with phpcs (at least the facets ;))\n. By the way: I made one change in the naming of the setKeyValueField function. It is now called setKeyValueFields to better reflect its function.\n. You're quite fast in merging the pull requests. I just added some more documentation. I'll create a new pull request for it.\n. Nope, it doesn't have to be a function. You are right that an array cannot be called as a function. Basically, the CURL module calls the setTransferInfo function from within Elastica_Client::_callService.\n. Hmm, strange. Github adds all your commits in the master to an open pull request. I think I should have created the changes in the branch. The last commit is a fix for a bug with the facet filters. The output was wrong ;).\n. I created a branch to work on these changes. Didn't modify or run the tests yet.\nhttps://github.com/jappievw/Elastica/commits/filters_cache\n. I followed it from the sidelines ;). It looks good, thanks!\n. You can use it to filter any query or facet. More details about the numeric range api can be found here. Of course the way you need to use it also depends on your use case :).\n. Can you gist the output of your php --info?\n. Ok, that indeed looks like properly configured. Can you also post the exact error message? I'm not into the FOQElasticaBundle but I can give it a try!\n. Just a thought, but isn't it weird that the function Elastica\\Transport\\curl_init() is being called? I would expect it was just curl_init. The code is fully up to date and not modified?\n. Glad I could help! I will also update it on Elastica.io later on today.\nOn 2 Apr 2013, at 14:10, Nicolas Ruflin notifications@github.com wrote:\n\nThx. Probably we should add these also somewhere to Elastica.io.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hmm, it complains about an undefined index multiname. This is the field which should get the dynamic mapping. I should do the validation whether the dynamic mapping was successful in another way. Will dive into that ASAP!\n\nHowever, it still means that the mapping failed. I tested the test with php 5.3.18 and ES 0.19.11. Did you try the test locally? Just as a reference?\n. Ok, clear. Just installed homebrews-latest 0.20.4. When running just my new test it's fine. Running the full set of tests now.\n. I just enhanced the test a bit so we better know what eventually goes wrong in #359.\n. It looks like it works again, although I didn't make a functional change!\n/* Sent from my iPhone, sorry if brief. */\nOn 3 apr. 2013, at 04:18, Nicolas Ruflin notifications@github.com wrote:\n\nLets see if everything goes green :-)\n\u2014\nReply to this email directly or view it on GitHub.\n. Let's see and hope so! Would optimizing the index be of help? Probably it also reloads the mapping?\n. @ruflin Just integrated a test and also fixed a bug in order to remain backwards compatible. My suggestion is that the testMatchDoc is simplified for a non-filtered percolator match. That makes the code way better readable! What do you think?\n\nI'll update the changes file as soon as we're finished.\n. Yeap, that's exactly what I meant. The feature I just added was already included in a test by using the setParam function. The existing single test case was too complex, but already included similar functionality. Will split them up in the next few hours.\n. @ruflin updated the test and changes file!\n. Just did, do you squash the commits?\n. I already merged it, but AFAIK one of the builds in Travis failed due to a timeout on their end. Can we also manually trigger a new build?\n. @ruflin It seems the test failed, but due to timeouts and ES internals issues. Do you have any clue how that can happen?\n. Really good summary of the different options for build failures. The first two actually are the most annoying ones, because they are a bit unpredictable. Just generated some ideas how we can probably get more control over it:\n- ES memory tweaks:\n  - Enforce min/max limit for ES. How much does Travis allow per node?\n  - Set the mlockall flag in the configuration.\n  - Disable caching for ES?\n- Disable disk IO:\n  - Use ramdisks for storage; or\n  - Use memory storage type.\n- Cleanup the used repo's after each test. You created an easy way to create an index, it should be used everywhere.\nProbably other Elastica users have also more ideas of tests to perform.\n. In the last commit I tried to:\n- Use ramdisks for ES storage.\n- Set max 256MB ram per elasticsearch process\n- Lock the memory of ES.\nWhen the builds pass, I'm afraid only time can tell whether it is a real enhancement to the tests.\n. You are right about that. It's not valid. As far as I know all (signed) numbers and strings are allowed as ids. Can you create a pull request and a test for this?\n. The build seems to work at least. It's hard to test this. What was the reason of te failure earlier? I can't find the history per build. There's just one archived for a pull request.\n. Ok, I gave elasticsearch just 256M of RAM. With locking the memory there's no way to expand it. Tomorrow I will test with 512 per instance to see whether Travis accepts this amount of RAM to be used. I couldn't find the amount of memory for each worker in the documentation.\n. And probably disabling caching for elasticsearch can also do the trick. I'll dive into it tomorrow.\n. @ruflin While reviewing other failing builds, also with my tests there was a failure with OOM for ES. I'm testing now with 384M.\n. The builds still fail. Given the fact that's always another build type from the matrix, it doesn't have anything to do with Elastica rather than an erroneous test box or something similar. Anyone any other ideas?\n. Yeap, will do!\n/* Sent from my iPhone, sorry if brief. */\nOn 27 aug. 2013, at 20:41, Nicolas Ruflin notifications@github.com wrote:\n\n@jappievw In case you have some to look at one of these?\n\u2014\nReply to this email directly or view it on GitHub.\n. I was unable to reproduce the issue, when using the unit tests or the with a very basic code sample with all default settings for both elasticsearch and Elastica. The \"No enabled connection\" exception can only be thrown either due to misconfiguration or - with default settings - when the first request fails.\nIn \\Elastica\\Client::request a mechanism has been implemented, which automatically retries the request in case of any connection error. Problem is that with just one server configured the connection gets disabled first. This results in the fact that the root cause of the connection failure never appears in the log file.\n\nPossible solutions:\n1. Remove the automatic retry mechanism in case this automatic retry mechanism was unintended.\n2. Make the automatic retry mechanism optional.\n3. When there is no other connection as fallback, be sure to throw the exception.\n@ruflin what do you think is the best solution?\n. One last addition: this code is already for a very long time in Elastica. Last change was in January this year, but with no functional change.\n. ok, just implemented it. Build is in progress now.\n. At least we have more useful errors now! \nWith regards to the geo, that plugin probably also needs an update.\nFor the others: I think we're requesting a bit too much from these boxes.\nI'll check it tomorrow.\n. Good question, two possible explanations:\n1. I see that there is a new version of the geocluster facet implementation specifically for ES 0.90.3.\n2. Recently the proxy-ing through nginx was added. That also eats extra from the test machine.\n. Yeap, will try at the office!\nOn Tuesday, September 3, 2013, Nicolas Ruflin wrote:\n\nPerhaps we should try to disable the nginx and to see what happens.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/issues/448#issuecomment-23693272\n.\n. Ok, test is running. We can also try to include the ES log files in the console output. Probably that shows some interesting results.\n. I think it's possible by using an after_script which cat's the log files. Don't have time to test now, but will try tonight/tomorrow.\n. Ok, it works flawlessly in #453. \n. Yeap, just fixing the real issues now. Just updated the mapper to the latest version. The only thing I can think of is that nginx proxy is too much. I closed that pull request due to some internal issues in me/my repo ;-). Let's try that one again!\n. Unfortunately this doesn't make a real difference. Another option why the test might be failing is due to the fact that three instances of elasticsearch cause to much load for the system. Which tests really need the three instances to run? Could we also try with two instances for example? Do you have any idea about this @ruflin?\n. With two nodes (current situation) the tests still fail unfortunately. Elasticsearch is also in the recipes of travis itself. I'll try to find the tests which are shut down and then try with just one node. \n. Seems like we can close this task now, since it has been solved in #463 \n. @ruflin closing this issue as it should work now!\n. @ruflin Merge-ready IMO.\n. Accidentally included in #452 \n. True, there is an update, newest version is 1.9.0. My master is screwed for some kind of reason. Let's ignore this version, merge the geo update and log stuff. Then I'll upgrade the mapper too.\n. @ruflin Let's include this one in master!\n. Ah, the download log option only shows the console output. So right now we also have the ES log in it!\n. Can you try using the master version and post the error you'll see here? It contains some enhancements to the error messages.\n\n/* Sent from my iPhone, sorry if brief. */\nOn 7 sep. 2013, at 00:39, Diego notifications@github.com wrote:\n\nI tried to connect to the ElasticSearch instance using HTTPS, but I cannot make it work.\nAttempts so far:\n$EsParams = array(\n    'host' => 'my.elastisearchserver.com',\n    'port' => '443',\n    'transport' => 'https',\n);\n$EsClient = new \\Elastica\\Client($EsParams);\n$EsParams = array(\n    'url' => 'https://my.elastisearchserver.com:443',\n);\n$EsClient = new \\Elastica\\Client($EsParams);\nResult is always the same, an exception is thrown, stating No enabled connection. Connection works using HTTP.\nIf I try to connect manually, using a browser, I get the following result with both HTTP and HTTPS:\n{\n  \"ok\" : true,\n  \"status\" : 200,\n  \"name\" : \"Terraxia\",\n  \"version\" : {\n    \"number\" : \"0.90.0\",\n    \"snapshot_build\" : false\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\nIs there anything I'm missing? I tried looking at the examples, but that's from where I copied the code above, that doesn't work. Thanks in advance for the help.\n\u2014\nReply to this email directly or view it on GitHub.\n. Have you been able to make any progress with the issue?\n. Can you be a bit more verbose on what \"doesn't work\" mean? Then we can provide some help. Error messages would be really helpful.\n. Ah ok. That's clear. Composer downloads a tarball for fixed versions. The master can only be checked out using git. Don't you have git enabled on your environment?\n. Unfortunately not, my time was a bit scarce the last days. This is already a separate issue.\n\nOn 10 sep. 2013, at 18:59, Konstantin Nikiforov notifications@github.com wrote:\n\nmost of tests fail because of the error\n\"Elastica\\Exception\\Connection\\HttpException: Couldn't connect to host, ElasticSearch down?\"\nAny aidea why elasticsearch is down or inaccessible?\n\u2014\nReply to this email directly or view it on GitHub.\n. It is related to #448. Just running a new test to see if testing works better.\n. I think it can't be executed because it can't be automatically merged. Probably there is a conflict in the changes.txt file!\n. Merge it again with the master. When you push it, it will probably run Travis again.\n. Interesting idea! It can also make debugging issues easier!\n\nOn 17 sep. 2013, at 23:36, Christoph Kempen notifications@github.com wrote:\n\nOn the topic of the HTTP transport.. Maybe it's good to use the guzzle php library for the HTTP connection part. It's widely used now, and does a lot of work for you. If you like the idea, I can refactor the http(s) transport for you..\n\u2014\nReply to this email directly or view it on GitHub.\n. Just opened a pull request to run three instances again. Nice it works again!\n. Yeap! Will do!\n. Agreed! That definitely is better!\n. \n",
    "gibrown": "Hi ruflin,\nYep, this does work.  So the interface requires an empty object rather than just an empty array in this instance?  I don't have tons of experience in PHP, so maybe this is just a standard part of the language, but it seems like instantiating an object to indicate an empty array is somewhat less intuitive.\nBut it does work.  Thanks for the fast response.\n-Greg\n. OK, unfortunate, but makes sense.  Thanks.\n. Changelog updated\n. Sorry about that. I think it should be all set.\n. ",
    "shumkov": "Yes! I think transport layer it is very nice idea. With transports you shuld can implement any elasticsearch API what you want :)\n. - Add transport option to Elastica_Client\n- Rename Elastica_Request to Elastica_Request_Http\n- Add Elastica_Request_Interface\n- Add Elastica_Request_Memcached with same interface as Elastica_Request_Http but use memcached methods: http://www.elasticsearch.org/guide/reference/modules/memcached.html\n- Elastica_Client::request needs use request class from options\n. Ooo.. Elastica_Client::_callService shuld move to Elastica_Transport_Http for example. Elastica_Request looks like abstract.\n. Right, HTTP protocol add a big overhead instead Memcached binary protocol.\n. Thanks...\n. Some comparsion. I inserted 20000 and 100000 documents without bulk.\nInserting 20000 elements with Elastica... \n       Elapsed: 0h 1m 2s\n       Per request: 0.0031s\nClearing indices... OK\nInserting 20000 elements with Memcache (reconnecting for each document)... \n       Elapsed: 0h 0m 21s\n       Per request: 0.00105s\nClearing indices... OK\nInserting 20000 elements with Memcache (persistent connection)... \n       Elapsed: 0h 0m 19s\n       Per request: 0.00095s\nClearing indices... OK\nInserting 100000 elements with Elastica... \n       Elapsed: 0h 4m 51s\n       Per request: 0.00291s\nClearing indices... OK\nInserting 100000 elements with Memcache (reconnecting for each document)... \n       Elapsed: 0h 4m 16s\n       Per request: 0.00256s\nClearing indices... OK\nInserting 100000 elements with Memcache (persistent connection)... \n       Elapsed: 0h 1m 41s\n       Per request: 0.00101s\nClearing indices... OK\n. Yes. http://php.net/memcached\n. Thanks\n. ",
    "shizzard": "There is another pecl/memcache php extension issue.\nMemcache protocol limits key length to 250 symbols (http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt sect. 'Keys'), so pecl/memcache extension truncates key to 250 symbols too. This operation causes '?source=' parameter of GET request to elasticsearch memcache binding to be truncated and corrupts the request.\nI've patched a bit pecl/memcache extension ('memcache_pool.h' file):\n`#define MMC_MAX_KEY_LEN                 1024\ndefine MMC_VALUE_HEADER                \"VALUE %1024s %u %lu %lu\"       / keep in sync with MMC_MAX_KEY_LEN /`\nThis limits key length to 1024, works fine. Checked with wireshark sniffing.\nSo if you want to use pecl/memcache extension in your library, you have to patch it.\nP.S. pecl/memcached extension does not truncate keys, but this extension causes 'Segmentation fault' errors in some cases. Kind of thread-safety issue, i didn't dig a lot.\n. Yes, I used memcache client in testing. BTW, i've used Elastica to build request. Something like:\n// $Query instanceof Elastica_Query\n// $MC instanceof Memcache\n$MC->get('/index/type/_search?source=' . json_encode($Query->toArray()));\nThis code performs normal mcget request.\n. Ok. We're going to use elasticsearch in production, so it will be very useful.\n. ",
    "im-denisenko": "Memcached transport was fully implemented at some point in past, and deprecated in #813.\nIt will be removed in ES 2.0 elastic/elasticsearch#10167.\n. Implemented via #329.\nWill be deprecated with #880.\n. Both @package and @category is removed since #864.\n. Thrift tests works fine right now. Also this transport is deprecated #813, elastic/elasticsearch#10167.\n. @ruflin It's already marked via https://github.com/ruflin/Elastica/commit/cd546552e3fbd9c1186fab284c4412d95fb6d19a\n. Will be fixed with #783.\n. Fixed via #661\n. Fixed via #389\n. @ruflin Isn't it fixed by #553? Can we close this?\n. Facets are deprecated #855.\n@designermonkey Reopen please, if this issue still happens and really needs to be fixed.\n. > issue belongs to FOSElasticaBundle\nFixed since https://github.com/FriendsOfSymfony/FOSElasticaBundle/issues/340#issuecomment-44014549.\n. Elastica\\Query\\Builder is deprecated #855. Use new Elastica\\QueryBuilder instead.\n@atsiddiqui Reopen please, if you think that this issue really needs to be fixed.\n. Sherlock is unmaintained now. Closed via #855.\n. I don't know, how it was in 2013, but now ES has good documentation, where pretty clear explained, that percolator is basically just type in index, and that registered queries is documents in this type.\nShould we still fix this issue?\n. Fixed via #661.\nphp\n$client = new Elastica\\Client([\n    'roundRobin' => true,\n    'connections' => [\n        ['host' => 'foo'],\n        ['host' => 'bar'],\n    ],\n]);\nvar_dump($client->getConnection()->getHost()); // foo\nvar_dump($client->getConnection()->getHost()); // bar\nvar_dump($client->getConnection()->getHost()); // bar\nvar_dump($client->getConnection()->getHost()); // foo\n. Completion suggester added via #808.\n. Closed via #855\n. Elastica\\Query\\Builder is deprecated #855. Use new Elastica\\QueryBuilder instead.\n@1337er Reopen please, if you think that this issue really needs to be fixed.\n. @rayrigam Invalid entry in logs it's not an error at all. It's hack used to force php encode empty array as { } instead of [ ]. If you want to see correct json in logs, you should replace default monolog formatter to another one.\nAlso, exception trace you've provide is very short and don't contains most interesting - ES response. Could you try to catch exception and add a var_dump of it here?\n. Wontfix due to #855.\n@darkwish121 Use $facet->setParam('shard_size', $size); instead.\n. Fixed via #661.\nphp\n$client = new Elastica\\Client([\n    'connectionStrategy' => 'RoundRobin',\n    'connections' => [\n        ['host' => 'foo'],\n        ['host' => 'bar'],\n    ],\n]);\nvar_dump($client->getConnection()->getHost()); // foo\nvar_dump($client->getConnection()->getHost()); // bar\nvar_dump($client->getConnection()->getHost()); // bar\nvar_dump($client->getConnection()->getHost()); // foo\n. ES not expects dictionary as value of \"fields\", hence nobody should care about keys in this array.\nI would propose following change to properly fix this issue:\nphp\npublic function setFields(array $fields)\n{\n    return $this->setParam('fields', array_values($fields));\n}\n. Fixed via #710\n. @webdevsHub I'm not sure a little if this is really worth to have ~10 classes consisting only of getters to single array, because it's like java's way rather than php. Are you sure about that?\nAlso, I would suggest to reuse existing Elastica\\Index namespace:\nphp\nElastica\\Index\\Recovery\nElastica\\Index\\Recovery\\Shard\nElastica\\Index\\Recovery\\Shard\\Source\nElastica\\Index\\Recovery\\Shard\\Start\nElastica\\Index\\Recovery\\Shard\\Target\nElastica\\Index\\Recovery\\Shard\\Translog\nElastica\\Index\\Recovery\\Shard\\Index\nElastica\\Index\\Recovery\\Shard\\Index\\Files\nElastica\\Index\\Recovery\\Shard\\Index\\Size\n\nreturning just \\DateTime in all that time getters would be a better solution\n\nAgreed.\n. Fixed via #877\n. you're welcome :) I think #476 and #403 can be closed\n. Easiest one is create two config files and add custom logic into /etc/init.d/elasticsearch, i guess.\nI can fix it later, if i'll figure out how this bash magic works.\n. How about add something like this after every shutdown call?\nphp\nsystem('sudo service elasticsearch restart');\nsleep(10);\nIt's quite ugly, but provides a way to restore all shutdowned nodes at the end of each test, so:\n- two nodes will be enough, \n- all runs of phpunit will produce same result (good for virtualbox)\n- Elastica\\Cluster::shutdown can be tested too\n. Btw, I noticed a lot of random failed builds with two reasons for most of them:\n- OutOfMemory exception (when almost all tests fails)\n- Timeout (phpunit stops after 50-100 executed tests)\nOutOfMemory probably fixed in #742. Problem is, at this line three instances of ES starts, while phpunit is actually uses only one (at least I didn't found as 9201 and 9202 ports are used in the tests). Also, explicit memory limit can be added to ES config (I'm not sure which exactly option and value should be used for that).\nTimeout is probably about memory too, but maybe some tests should be refactored?\n. As I can see, this line disable autodiscovery between nodes.\nAlso, compare my PR build (#742) and this one (last success in master). In both cases tests 120,121 and 126 are marked as skipped. Dots not so verbose, but these tests is about cluster.\nSo I think that actually phpunit uses only one instance since 2013-01-22\n. Documentation about how to use .gitattributes for ignoring some parts of package was removed from composer in https://github.com/composer/composer/commit/b34220edc8ed738bce3f682248622976543d6ec4 and this was discussed here https://github.com/symfony/symfony/issues/6605. TLDR: now this practice considered bad.\n@ruflin This file is incomplete at this moment. Should we keep this updated or perhaps remove it too? \n. Also, after cluster fix, problem with travis builds like this one is actual again. \nNear every fifth build will be with 80% failed tests without any visible reason.\nI thought this is because of memory, but it's not.\nI have no idea how to fix it.\n// please restart build\n. Build of master branch was suddenly failed after success with phpunit because of github rate limit, lol :)\nI'll check memcache and api rate in a few days.\n. 25 references to there - such popular issue.\nThanks, anyway. It is also suddenly closes one ticket on my current job position, hah.\n. I still can't figure out, what happens in builds with OutOfMemory error, even can't reproduce it in virtualbox. Only thing i'm sure that first error always happens in aggregation tests. If aggregation tests passes, build will be successfull.\nI suggest to create a new issue for that, to mark problem as \"known\". Maybe, someone who already know solution, will see it.\n. Don't think so. First time I reference this problem, memory limit had default value 1g (btw, travis machine has 3g of memory, so 3 instances was too much for them). Now it has value 256m per instance, and in most builds it's enough.\nAlso, as I said, I can't reproduce this in virtualbox, which has 1g of memory total, that much less, than in travis.\n. I still think this is random and not related to memory limit. And it's not always last build. Here were failed both first and sixth, but here was sixth only. Both builds based on the same commit.\nI can try to fix it somehow, but with speed \"one try per hour\" it'll take a very long time.\nJust for history, my assumptions about it:\n- maybe it's really just a memory problem\n- maybe each test should delete created indices in tearDown\n- something wrong with aggregation tests\n- ES instances should use separate directories for data files\n- something wrong with JVM params\n- something wrong with ulimit\n- maybe tests runs too fast and little sleep between them can help\n. yeah, awesome :)\n. It can, but in that case 5.3 must be added back to travis.yml, new arrays must be converted back, and guzzle must be removed from dependencies. And yeah, \"We again support 5.3\" record must be added to changes.txt :)\nPHP 5.3 is a popular version, sure, but it's dead since august of 2014. Users of php 5.3 still can use elastica 1.4.2, which was released just a week ago. Also, more libraries will abandon 5.3 => faster 5.3 will finally die.\n. I think we must either provide full support for 5.3 or not support 5.3 at all, because only real difference between php versions for elastica right now is a new syntax sugar which will throw fatal errors in 5.3.\n// cc @jdeniau who \"take the responsability of removing the 5.3 support\" in #738(comment)\n. As always, build failed.\n. Please fix this files: https://github.com/ruflin/Elastica/commit/7b56732f7853143003357ab10fd8724a02a9184a https://github.com/ruflin/Elastica/commit/e689375e9f6a0bf0a926ae18fa9f53237524cfd5\nAlso, this packages can't be installed on 5.3: https://github.com/ruflin/Elastica/commit/7b56732f7853143003357ab10fd8724a02a9184a https://github.com/ruflin/Elastica/commit/a6ec47e0bcdff1f07c586f12015471fa922a9d88\n. It is hard to downgrade guzzle dependency to \"3.8.1\"? It requires php \">=5.3.3\", so will work with any version, and Transport/Guzzle will always be tested.\nOr maybe install guzzle manually (not via composer.json) in .travis.yml, if current build its not 5.3? Like that:\nyaml\nbefore_script:\n  - mkdir -p build/logs\n  - echo \"extension=memcache.so\" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini\n  - if [ $ES_COMPOSER_NODEV == \"no\" ] && ! $(php -v | head -1 | grep -q 'PHP 5.3'); then composer require \"guzzlehttp/guzzle\" \"4.2.*\" --dev --no-ansi --no-progress --no-interaction; fi\n. @jdeniau for skipping test, you just call self::markTestSkipped method. That @ruflin suggests - it's done already, just drop guzzle from require-dev and pr can be merged.\nBut then GuzzleTransportTest will always be skipped, and any errors in this transport will be undetectable via travis builds. And this is ~2% of coverage, if coveralls not kidding us :)\nI checked logs from this build. More likely, it's permission issue (my fail I forgot about that, again). It can be fixed, if sudo composer require will be used instead of composer require in the command I wrote above.\n. There are no way to check php version after phpunit was started, if guzzle is installed.\nGuzzle 4.2 uses file autoloading and in their src/functions.php used short array syntax.\nSo, all 5.3 builds will fail immediately after start, like here.\nTherefore, php version should be checked before phpunit start. It could be done with snippet I wrote above, but with sudo (because vendor/ directory owner is root):\nyml\nbefore_script:\n  - mkdir -p build/logs\n  - echo \"extension=memcache.so\" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini\n  - if [ $ES_COMPOSER_NODEV == \"no\" ] && ! $(php -v | head -1 | grep -q 'PHP 5.3'); then sudo composer require \"guzzlehttp/guzzle\" \"4.2.*\" --dev --no-ansi --no-progress --no-interaction; fi\n. @ruflin It's because guzzle still in require-dev. I change this there #779 \n. I always thought that @return static or @return self should be used for static methods like Elastica\\Search::create, but in case of fluent interface @return $this is more semantic, isn't it? This differences also described in proposed psr-5 (13, 14, 15).\n// my ST3 cannot into autocomplete, so maybe i'm just wrong :)\n. Eclipse confirmed also\n. Yep, there will be problems.\nI was trying a lot not do this, but at the end I failed to get stable 3-nodes cluster. Third node always either dies immediately after start or in the middle of test suite, regardless of used settings. It dies even if phpunit will sleep between tests and run them very slow.\nAnyway, I'm sure, that run multiple nodes on machine with such low performance it's not an usual way to use elasticsearch, so it's good thing at least two instances can be started.\n. Yes, I still can't reproduce it in the virtualbox. I think, it's could be because of virtualization system difference. In travis this is openvz, and in virtualbox this is em... virtualboxvz? I'm not good at this, so I will stop making further assumptions :)\n. > As I understand #878 changes give us objects that always in valid state\nNope, it's not about it. It's about consistency of querybuilder methods and constructors.\n\nRemove toArray everywere and call toArray on final build stage.\nProps: true way\nCons: BC\n\nIf this is already BC, we could also instead of Arrayable implement JsonSerializable and lets php handle recursive query serialization (it's >=5.4.0 though).\n. > Props and cons?\n@ewgRa Not so much, indeed. First difference is that JsonSerializable it's native php interface and we don't reinvent wheel with Arrayable which is almost same thing.\nSecond is that toArray must serialize all inner objects when called, while jsonSerialize just returns them. JsonSerialize-way quite simpler, because you don't need to handle all these convertions by hand.\n``` php\npublic function toArray()\n{\n    return ['foo' => $this->filter->toArray()];\n}\npublic function jsonSerialize()\n{\n    return ['foo' => $this->filter];\n}\n```\nIn example above $this->filter is just an instance of AbstractFilter, but in case if there will be complex nested structure, we should iterate over it and call toArray from every structure's member.\n. > The part I don't like about this, is that the library then is built on top of the solution that it always must end in JSON\n@ruflin Agree, haven't thought about it.\n. Just a thought: we could provide BC layer using this trick:\nphp\nclass Elastica\\Param implements JsonSerializable\n{\n    /**\n     * Hackish way to support convertion to array but use jsonSerialize internally.\n     */\n    final public function toArray()\n    {\n        return json_decode(json_encode($this), true);\n    }\n}\n. @ewgRa If we implement this array_walk_recursive stuff on our own, there are no real reason to drop php 5.3 and use JsonSerializable for now. I would suggest to fully imitate JsonSerializable behavior using our own interface:\n- JsonSerializable => Elastica\\ArraySerializable\n- json_encode => Elastica\\Util::arrayEncode (recursive serialization goes here)\n- jsonSerialize => arraySerialize (doesn't care about inner objects, just return them as is)\n. This way, in future, when php 5.3 would finally die, we could add support for JsonSerializable (just for convenience) with few lines of code:\nphp\nclass Elastica\\Param implements ArraySerializable, JsonSerializable\n{\n    final public function jsonSerialize()\n    {\n        return $this->toArray();\n    }\n}\n. @ruflin how much were failed?\nI got one failed build today, it is similar logs?\n. Btw, anyone who has older version of elastica and wants to use not implemented aggregation (just like me today), they can use following workaround. It's less hardcore than raw array query:\nphp\n$query = new Elastica\\Query();\n$query->setFilter(/* blah blah */);\n$query->setQuery(/* blah blah */);\n$query->setParam('aggs', [\n    'price_percentiles' => [\n        'percentiles' => [\n            'field' => 'price',\n        ],\n    ],\n]);\n. With my english level, some text longer than PR message, always looks terrible.\nI can have a try in near future, just don't wait for this soon.\n. Is this plugin alive? I see they support ES 1.1.0, and last commit was half a year ago. \nPR with support for 1.4.2 was opened month ago and still has no comments. \nElastica supports ES 1.4.3 right now, how would you use it with outdated plugin?\n. More concrete steps how to add plugin to build:\n- Add variable ES_IMAGE_PLUGIN_VER here\n- Add plugin installation here\n- Add plugin name here\n- Add plugin to table of dependencies here\n- Implement tests\n- Add BIG BOLD docblock that this query is not standard functionality of ES. Like here\n. All classes in Elastica\\Query namespace can be instantiated by Elastica\\QueryBuilder. You can add this query to querybuilder here (update every supported version) and here.\nBut this query isn't part of elasticsearch, so I'm not sure should it be added to querybuilder or not. \nGuess @ruflin or @webdevsHub knows better.\n. I quickly looked at reported issues, and yeah, it's awesome :)\nThough, many of them seems to be false-positive due to incorrect phpdoc comments (this tool gets variable types from docblocks, as I can guess)\nSpeaking of that, I see 1527 warnings every time I trying to run phpdoc. I already wanted to fix that, so now there yet another reason to do this.\n. +1 for semver.\nWe could add table \"ES version - Elastica version\" to README and it's will be even more obvious way to say to developers, which version they should use, because almost all ES plugins do this like that.\nThen no reason to jump directly to 3.0.0\n. 1317.9 is green, but 1317.10 failed due to random issue. I'm sure it will be successfull after restart.\n. It was quite ironic that hhvm build for pull request with name \"Fix hhvm build\" was failed, lol\n. Problem is, that http is not valid transport. Should be Http. Could you show how exactly you create Elastica\\Client instance?\n. There are 303 other uses of \"elasticsearch.org\" across all library. Perhaps you could check them too?\nYou could locate them using:\nfind {ansible,lib,test} -type f  | xargs grep -n 'elasticsearch.org'\n. This actually mean implement analog of doctrine/mongodb-odm for elasticsearch, right?\n. > transformation of an --- object into an --- document\n\nconvert an --- result --- into --- object\n\nBut isn't it what ODM mean?\n\nhow useful that is for general Elastica users\n\nAs general Elastica user, I bet it will be super awesome :)\n. I got it. Previously I thought that FosElastica can automagically convert Elastica document into BlogPost object, bypassing ORM mechanism. Now I have seen transformers source code.\nBut still, mapping config, transformers and potential ODM are tight coupled. I'll try have a look how implement all this in generic way without half of Symfony's stack, if no objections will come from @ruflin or someone will take care of this.\n. @hugohenrique I have not worked on this yet.\n\nHow can I help?\n\nYou could provide easy-to-understand example of how this feature should work.\nPull requests are welcomed as well :)\n. @ruflin Sorry, I was quite busy recently. Yes, let's close it.\n. Fixed via #820\n. @ebuildy it happens time to time. But you also broke php 5.3 support here.\n. Fixed via #826, #837, #868\n. Sudo isn't useless. Ansible runs as root and owner for vendor directory is root also. There must be either chown vendor or sudo composer.\n. @ruflin I tried to run tests on php 7 and got some weird errors, like segmentation fault in http transport test, which could be not related to Elastica and not be fixed soon. Hence I guess, it could be merged already.\nAbout broken classes. They were named Filter\\BoolFilter, Query\\BoolQuery and Transport\\NullTransport until #303. We could just rename them back, though it damages naming consistency.\n. There are two reasons why I delete all indices instead of just created.\nFirst is that index could be created not only by this method. If we want to really remove all indices that were created during tests, we should find all existing indices in setUp, find all existing indices in tearDown, diff these lists, and then delete the difference. This is will be even slower than now.\nSecond is that ES should always have clean state to run tests on it. If someone run Elastica's tests on their cluster where some indices already exists, how you could garantee that tests will not randomly failed or that their indices will be unbroken? I even don't mention that last test in Elastica testsuite shuts down entire cluster.\n. We could split tests by their group and don't perform complete removal on every test.\nI see two groups there: unit and functional. Unit is pure test where ES is not involved. Functional is about ES integration. There are no reason to delete all indices from ES for tests from unit group.\nThis separation could be done either using phpunit groups, or by two test's trees instead of just one.\n. > Good idea. I would probably not change the test trees as it will \"duplicate\" a lot of classes.\nWell, phpunit groups then. I would implement this feature on weekend.\n\nUnfortunately there is no Docker support from Travis yet.\n\nAFAIK, their problem is that they use docker internally, hence that support is really mean run docker container inside docker container, that sounds quite strange :)\n. I'm against of autogenerated release notes.\nSince DVCS was invented, changelog files were deprecated as tool to keep detailed project history, but they moved to higher level of abstraction. Nowadays I expect, that release notes (and changelog) is written for humans by humans, because if I want to know, which exactly commits or pull requests were merged, I could use git log or hg log, whatever. But if my intention is just update my project dependency, then I really don't care, what exactly happens since last version - I want just read short description about what was added, changed or broken. And changelog files in that case is best place to go, because commit history !== actual history.\nMy suggestion is:\n- Group entries in changes.txt by releases, not by dates.\n- Add dev-master section on top of file for unreleased changes.\n- Rename it to CHANGELOG.md to have markdown.\n- Update it manually every release. Maybe, some tool could be used like one of @webdevsHub mentioned, but final output should be then fixed to be human-readable. \n. > As soon as the Release notes are created, do you have an idea how the same release notes could be used for the Github release and on Elastica.io?\nAs the start point, ctrl-c ctrl-v is fine.\nNext step is to automatize entire release process in Makefile, I guess.\n. I think no matter if there will be google group, standalone site, mailing list or something else - people always will use SO, as well as github's issues.\nHence I vote for SO too, with a little concern: most of the answers I've seen about Elastica is outdated and were written long ago. Is there any chance to assign a certain moderator for tag to have possibility edit questions and answers? \n. > So we agree to Stackoverflow. The question is now how to \"organise\" it. I haven't used Stackoverflow too much in the past. Does someone of you have a \"high\" reputation?\nI don't have SO account at all. But i'm pretty sure that there is possibility to subscribe to tag, get new questions to email and answer to them at free time, if it still has no answer.\n\nAs Elastica is an open source project the question is how much \"tools\" should be used for organizing it. The less tools the better. So I'm not 100% sure if Trello would not just be a tool we use in the first 2-3 months and then is more or less dead. Should we use a good old IRC channel so also other people could ask questions directly there?\n\nI would suggest use Gitter. It's like IRC with new shiny interface, but has history, markdown and github integration. At least, I've seen that some open source projects already adapt it, for example: Laravel, Codeception, etc. Also it has badge. More badges for badges god!\n\nOne thing I tried to for some time but never suceeded in the long run is the build a \"foundation\" team around Elastica. So we have several people that push it forward, can merge pull requests and also make releases.\n\nSure, i'll be very pleased to be involved in something like that.\n. > I added you both as collaborators to the project. You should now also be able to merge pull requests. With power comes responsibility ;-)\n@ruflin Thanks. Hope my help will be useful :)\n. Implementation could be similar to fos elastica one, but without symfony.\nHow it works:\n- create instance of Populator\n- implement class with interface ProviderInterface\n- pass instance of provider into populator\n``` php\ninterface ProviderInterface\n{\n    /*\n     * @return int\n     /\n    public function getDocumentCount();\n/**\n * @return Document\n */\npublic function getNextDocument();\n\n}\n```\n``` php\nclass Populator\n{\n    public function __construct(Client $client);\npublic function setBulkSize($size = 1000);\n\npublic function processProvider(ProviderInterface $provider);\n\npublic function setIterationCompletedCallback(callable $callback);\n\npublic function setDocumentRetrievedCallback(callable $callback);\n\n}\n```\nPredefined provider - uses elastica index as data source.\n``` php\nclass IndexProvider implements ProviderInterface\n{\n    protected $scanAndScroll;\nprotected $documentCount;\n\npublic function __construct(Index $index)\n{\n    $search = $index->createSearch();\n    $this->documentCount = $search->count();\n    $this->scanAndScroll = new ScanAndScroll($search);\n}\n\npublic function getDocumentCount()\n{\n    return $this->documentCount;\n}\n\npublic function getNextDocument()\n{\n    // Iterate $this->scanAndScroll and return documents one by one\n}\n\n}\n```\nUsage example (copy from old index to new one):\n``` php\n$client = new Client();\n$oldIndex = $client->getIndex('foo');\n$newIndex = $client->getIndex('bar');\n$provider = new IndexProvider($oldIndex);\n$provider->setDocumentRetrievedCallback(function(Document $document) use ($newIndex) {\n    return $document->setIndex($newIndex);\n});\n$populator = new Populator($client);\n$populator->processProvider($provider);\n```\n. With that, users will have just one interface they must implement for whatever data source they want to use, and don't dig into bulk api or how to add/update multiple documents at once, because library takes care of this.\nWelcome @ruflin @webdevsHub @xwei3752 @virtuman\n. Like this. Note $this->bulkSize:\n``` php\nclass Populator\n{\n    public function processProvider(ProviderInterface $provider)\n    {\n        // preparations\n        $documents = [];\n        $chunkSize = 0;\n    // fetch loop\n    while ($document = $provider->getNextDocument()) {\n\n        if (is_callable($this->onDocumentRetrievedCallback)) {\n            $document = call_user_func_array($this->onDocumentRetrievedCallback, [$document]);\n        }\n\n        // send chunk to ES if overflow\n        if (++$chunkSize > $this->bulkSize) {\n            $this->client->addDocuments($documents);\n            $documents = [];\n            $chunkSize = 0;\n\n            if (is_callable($this->onIterationCompletedCallback)) {\n                call_user_func_array($this->onIterationCompletedCallback, [/* some arguments*/]);\n            }\n        }\n\n        // add new document to chunk\n        $documents[] = $document;\n    }\n\n    // if last chunk was not sended, send now\n    if (!empty($documents)) {\n        $this->client->addDocuments($documents);\n    }\n}\n\n}\n``\n. It's not necessary. My thoughts was that withgetDocumentCountpopulator can track current progress and pass it toonIterationCompletedCallback` as argument. It's useful in case you have a lot of documents and want to see how much were already processed, then you could do it in callback.\nHowever, it's just an extra feature and could be removed to minimize interface.\n. Seems like issue referencing don't works in markdown, and all links must be explicitly specified. I add this change.\n. Merged.\n. Related comment: https://github.com/ruflin/Elastica/pull/858#issuecomment-104726298\n@egeloen Could you please give us some insight when php-http will have stable versions of adapter interface and curl adapter?\n. > I assume that is why you mentioned it specifically?\n@ruflin Yep. Curl seems will be most lightweight.\n\nuntil the adapter is stable\n\n@sagikazarmark It's correct assumption that egeloen/http-adapter will be abandoned after that?\n. @ruflin lgtm.\nHowever, I don't get how it's related to test groups. \nI partially implement this separation, based on master, and it's already works fine.\n. > There will probably some conflicts as your changes will touch all the tests\nI tried to merge this branch, only three files will be unmerged.\n\nThe test which use a client, are normally the functional tests.\n\nYep, but not necessary. Instantiate client !== make request.\n. @rmruano Could you look into my eyes and say that every existing parameter of Terms aggregation can be applied to SignificantTerms? If it's not, class should be extended from AbstractSimpleAggregation. \n. Merged, thanks!\n. @coveralls you're kidding :)\n. > Unfortunately I don't know if such configuration is possible with travis.\nTravis has environment variable TRAVIS_PULL_REQUEST which holds PR id for PR build or false otherwise.\n. Every new command in Dockerfile will create new layer. It's ok, but minimize that number is good practice.\nI would suggest combine them like following:\n```\nFROM composer/composer\nENV PATH=/root/composer/vendor/bin:$PATH\nWORKDIR /app\nCOPY composer.json /app/\nRUN apt-get update &&\\\n    apt-get upgrade -y &&\\\n    apt-get install -y nano &&\\\n    apt-get install -y cloc &&\\\n    apt-get install -y php5-xsl &&\\\n    apt-get install -y graphviz &&\\\n    apt-get install -y php5-xdebug &&\\\n    apt-get install -y php5-memcache\nRUN echo \"extension=/usr/lib/php5/20131226/xsl.so\" >> /usr/local/etc/php/conf.d/xsl.ini &&\\\n    echo \"zend_extension=/usr/lib/php5/20131226/xdebug.so\" >> /usr/local/etc/php/conf.d/xdebug.ini &&\\\n    echo \"extension=/usr/lib/php5/20131226/memcache.so\" >> /usr/local/etc/php/conf.d/memcache.ini\nRUN composer self-update &&\\\n    composer global require \"phpunit/phpunit\" &&\\\n    composer global require \"pdepend/pdepend\" &&\\\n    composer global require \"phpmd/phpmd\" &&\\\n    composer global require \"mayflower/php-codebrowser\" &&\\\n    composer global require \"sebastian/phpcpd\" &&\\\n    composer global require \"squizlabs/php_codesniffer\" &&\\\n    composer global require \"phploc/phploc\" &&\\\n    composer global require \"fabpot/php-cs-fixer\" &&\\\n    composer global require \"phpdocumentor/template-zend\" &&\\\n    composer global require \"phpdocumentor/phpdocumentor\" &&\\\n    composer require \"guzzlehttp/guzzle\" &&\\\n    composer install\nENTRYPOINT []\n```\n. A few thoughts.\nFor issues:\n- Ask people to open an issue only for bug/feature request/change request and use SO/Gitter otherwise.\n- Ask people to search in existing issues first\n- Ask people to provide information how to reproduce their bug or what is feature they want.\nFor pull requests:\n- Mention rule \"one change per pull request\"\n- Mention that each commit should have meaning.\n- Mention that squash trash commits is good.\n- Mention that rebase from upstream after PR is ready to be merged is very good.\n- Mention that every addition must have at least unit tests.\n- Mention that every test must have group.\n- Suggest to look through existing code to get point how to add new one.\n- Encourage people to use feature branches for pull requests instead master.\n- Mention semver and that BC breaks must be argumented.\n. @ruflin Looks good. I'm not sure how it looks for native speaker, but i'm not one who could fix this :)\nFor cs cleanup I use one of these:\nbash\nvendor/bin/php-cs-fixer fix directory/filename.php\nvendor/bin/php-cs-fixer fix directory/\nvendor/bin/php-cs-fixer fix\n. > we used level psr2 so far\nIt was symfony level with 3 additional fixers, as defined here.\nphp-cs-fixer should get config from file with this name by default.\n. @ruflin Can we close this?\n. @ruflin I would suggest to remove guzzle completely and lets ivory/http-adapter take care about alternative transports.\nAs option, may be even purge entire Transport namespace and do all requests through http adapter.\nWhat do you think?\n. Though, nevermind. It's not causes so much troubles to have yet another bc.\n. Hello. \nCould you please provide script that can be used to reproduce this error?\n. Okay. localhost is fine.\n. @3m0 Try to specify explicitly that you expect json object:\njs\n$.ajax('http://localhost:9200/store/1_31/_search?q=test', {\n    dataType: 'json',\n    success: function(data) {\n        console.log(data);\n    }\n});\nI'm not sure that this is Elastica's issue, but if this doesn't help, please add more info: index mapping, document example, expected result, actual result, error message.\n. Well. DEBUG constant it's not a real problem. It seems like curl is broken in certain cases.\nIt's my assumption why segfault happens at low level:\n- When DEBUG is setted, Elastica\\Util::debugEnabled will return true.\n- Elastica\\Transport\\Http will set additional option to curl handler here. \n- After that, curl_getinfo here will return key \"request_header\". \n- This key will be added to result array here.\n- ch->header.str is a pointer to zend_string, as defined here.\n- Segmentation fault means that this pointer is null at some time when it must not.\n- As defined below, when curl_getinfo called with second argument, it returns copy of pointer, not pointer itself.\n- This segfault (and all our tests as well) can be fixed, if line 3011 will be updated:\nCAASTR(\"request_header\", zend_string_copy(ch->header.str));\n. Minimal code required to reproduce this error with elastica:\nphp\ndefine('DEBUG', true);\n$client = new Elastica\\Client(['host' => 'elasticsearch', 'port' => 9200]);\n$index = $client->getIndex('foobar');\n$index->create(array(), true);\n$index->refresh();\n$index->count();\n. As temporary workaround, we can add this method to Elastica\\Transport\\Http:\n``` php\n/*\n * @see https://github.com/ruflin/Elastica/issues/861\n * @param resource $ch\n * @param int      $opt\n * @return array\n /\nprotected function _curlGetInfo($ch, $opt = 0)\n{\n    if ($opt !== 0) {\n        return curl_getinfo($ch, $opt);\n    }\nif (version_compare(phpversion(), 7, '<')) {\n    return curl_getinfo($ch);\n}\n\nreturn [\n    'url' => curl_getinfo($ch, CURLINFO_EFFECTIVE_URL),\n    'content_type' => curl_getinfo($ch, CURLINFO_CONTENT_TYPE),\n    'http_code' => curl_getinfo($ch, CURLINFO_HTTP_CODE),\n    'header_size' => curl_getinfo($ch, CURLINFO_HEADER_SIZE),\n    'request_size' => curl_getinfo($ch, CURLINFO_REQUEST_SIZE),\n    'filetime' => curl_getinfo($ch, CURLINFO_FILETIME),\n    'ssl_verify_result' => curl_getinfo($ch, CURLINFO_SSL_VERIFYRESULT),\n    'redirect_count' => curl_getinfo($ch, CURLINFO_REDIRECT_COUNT),\n    'total_time' => curl_getinfo($ch, CURLINFO_TOTAL_TIME),\n    'namelookup_time' => curl_getinfo($ch, CURLINFO_NAMELOOKUP_TIME),\n    'connect_time' => curl_getinfo($ch, CURLINFO_CONNECT_TIME),\n    'pretransfer_time' => curl_getinfo($ch, CURLINFO_PRETRANSFER_TIME),\n    'size_upload' => curl_getinfo($ch, CURLINFO_SIZE_UPLOAD),\n    'size_download' => curl_getinfo($ch, CURLINFO_SIZE_DOWNLOAD),\n    'speed_download' => curl_getinfo($ch, CURLINFO_SPEED_DOWNLOAD),\n    'speed_upload' => curl_getinfo($ch, CURLINFO_SPEED_UPLOAD),\n    'download_content_length' => curl_getinfo($ch, CURLINFO_CONTENT_LENGTH_DOWNLOAD),\n    'upload_content_length' => curl_getinfo($ch, CURLINFO_CONTENT_LENGTH_UPLOAD),\n    'starttransfer_time' => curl_getinfo($ch, CURLINFO_STARTTRANSFER_TIME),\n    'redirect_time' => curl_getinfo($ch, CURLINFO_REDIRECT_TIME),\n    'certinfo' => curl_getinfo($ch, CURLINFO_CERTINFO),\n    'primary_ip' => curl_getinfo($ch, CURLINFO_PRIMARY_IP),\n    'primary_port' => curl_getinfo($ch, CURLINFO_PRIMARY_PORT),\n    'local_ip' => curl_getinfo($ch, CURLINFO_LOCAL_IP),\n    'local_port' => curl_getinfo($ch, CURLINFO_LOCAL_PORT),\n    'redirect_url' => curl_getinfo($ch, CURLINFO_REDIRECT_URL),\n    'request_header' => curl_getinfo($ch, CURLINFO_HEADER_OUT),\n];\n\n}\n```\n. > curl in PHP 7\nThis week, I'll try to reproduce same error using curl without elastica and submit issue to php.net. Though, if someone here has touch with one of core team member, it'll be much simpler if he can summon him here.\n. @laruence Could you have a look please? You were the last one who changed this line in ext-curl.\n. Reported, closed: https://bugs.php.net/bug.php?id=69831\nLet's wait for travis update and revert 7a05f6feaaedf0a6e806a099db3b5e8817f8a04e then.\n. I would suggest :\n- Add phpdoc_order fixer to config file.\n- Manually remove @category and close #299. @package already removed thanks to phpdoc_no_package fixer.\n- Pin exact commit hash of php-cs-fixer in require-dev so this tool will always generate the same result as before (of course, while someone will not change pinned version)\n. Yep, I can. I'll add these changes at evening.\n. Done.\n. @otosiol Hello. Did you read answer I wrote for you on Stackoverflow? Is this not working?\n. @otosiol transport is case sensitive parameter. Should be exact Https (first letter uppercased)\n. @otosiol Well, now it's ssl verification problem. I hope that your server's certificate is not self signed?\nI want to see why official client works and Elastica is not. Could you specify, which version of elasticsearch-php you used?\nRight now you can try the way that explained in this article. Applying additional curl options looks like this:\nphp\n$elasticaClient = new \\Elastica\\Client([\n    'connections' => [\n        [\n            'transport' => 'Https', \n            'host' => 'user:****@aws-us-east-1-portal3.dblayer.com', \n            'port' => 10050, \n            'curl' => [\n                CURLOPT_SSL_VERIFYPEER => false,\n            ],\n        ],\n    ],\n]);\n. For newcomers: official client's documentation it's also good place to go. \nElastica's syntax slightly different, but all curl options that must be applied stays the same.\nI'll close it.\n. @ruflin We should have our own indeed :) I'll think about that next day.\n. You'd better ask this question to developers of FOSElastica.\n@merk Could you have a look please? \n. All is green! :) \n. @ruflin Changelog updated, debug removed, bc break mentioned.\n. Heh, I already wanted to exclude ansible folder (but forgot). \nIt was a reason for my question in https://github.com/ruflin/Elastica/pull/745#issuecomment-87463054.\n@pborreli Could you please do one more commit and add to export-ignore all files except these?\nlib/\nCHANGELOG.md\ncomposer.json\nLICENSE.txt\nREADME.md\n. @ruflin In my opinion, release package (if we support this export-ignore feature) should include all files except those that useful only for library maintainers. From this point of view, we should include only files I mentioned above.\nI think it's quite subjective. @webdevsHub what do you think? Let's have quorum! :smile: \n. @pborreli Merged, thanks!\n. Could you please mention new parameter in docblock of this method?\n. Merged, thanks.\n. lgtm, merged.\nThere are yet another issue about missing functional tests: #551, if you want one :)\n. Hello. Basically, you can perform any request to ES using raw array query.\nHere is example:\n``` php\n$path = '/ezbxml/_search_csv?keys=ezb:zdbid,ezb:license_period.ezb:available,ezb:isil,ezb:sigel,ezb:license_entry_id,ezb:ill_relevance.ezb:ill_code';\n$query = new Elastica\\Query(new Elastica\\Query\\MatchAll());\n$client = new Elastica\\Client();\n$response = $client->request($path, Elastica\\Request::GET, $query->toArray());\n$data = $response->getData();\nvar_dump($data['message']); // will output responsed csv\n```\nIs this suitable answer?\n. @diimpp AFAIK you are the first one who requested custom search endpoint :)\nI don't use neither this csv plugin or the custom endpoints, hence for now don't see real benefit of that. I would leave this issue opened for a while - maybe someone else will confirm that this feature is useful.\nAlso cc @ruflin as he knows more.\n. It was deprecated here. This is was mentioned somewhere in release notes of ES 1.5.0.\nThough, I see now, it was undeprecated month later. Seems like we added this docblock too fast :)\nCould you please update CHANGELOG.md?\n. @tmatei Good question. I'm think, bugfixes is most relevant.\n. Merged, thanks!\n. PR is not ready yet.\n. > most of the constructor arguments are optional, but required in real ES \nWith optional arguments, you're free to write queries like this:\n``` php\n$and = $qb->filter()->bool_and();\nif (/ one /) {\n    $and->addFilter(/ filter one /);\n}\nif (/ two /) {\n    $and->addFilter(/ filter two /);\n}\n```\nIf these filters required in constructor, you forced to create array first:\n``` php\n$andFilters = []; // why I need this variable?\nif (/ one /) {\n    $andFilters[] = / filter one /;\n}\nif (/ two /) {\n    $andFilters[] = / filter two /;\n}\n$and = $qb->filter()->bool_and($andFilters);\n```\nI'm think, it'd be better to check (if check at all) ES requirements on serialization stage, when toArray is called.\n. > I am not convinced that call_user_func + func_get_args can work without serious...\nI mean following:\nphp\nclass Query implements DSL\n{\n    /**\n     * @param AbstractQuery  $query\n     * @param AbstractFilter $filter\n     */\n    public function filtered()\n    {\n        $constructor = 'Elastica\\Query\\Filtered::__construct';\n        return call_user_func_array($constructor, func_get_args());\n    }\n}\nWithout explicit arguments all methods will work as pure proxy to constructors, and we still can have docblock with explained params. Even if some parameter will exist in constructor but will missing in docblock, it less worse than now, because it will be just a documentation bug.\n\nUpdate:\nI see now, that it's not possible to call constructor via call_user_func, but it still can be done with ReflectionClass::newInstanceArgs\n. @webdevsHub Yep, I want to add proxy and remove _assertParametersEquals as it's not required in that case. I'll add these changes later today.\n. @ruflin They probably should perform autocompletion using docblock but not parameters itself. I'll check it later.\n. Sadly, but autocomplete not working with reflection magic, so I left out this idea.\nPR is ready to be merged.\n. Now it works, travis updated php7 already:\n\n$ php --version\nPHP 7.0.0-dev (cli) (built: Jun 15 2015 19:13:40) \n. Exceptions in Query\\ImageTest seems to be related to https://github.com/elastic/elasticsearch/pull/10157/.\nAt least, here second parameter or BytesStreamInput should be removed.\nHence this plugin is incompatible with ES 1.6.\n@Jmoati Perhaps you could be interested in that?\n. > _percolate seems to be unrecognised / unsupported\n\n@ruflin Methods setPercolate, getPercolate, hasPercolate in AbstractUpdateAction are strongly outdated and should be also removed. Percolator doesn't work this way since ES 1.0. Related commit.\n. > I was thinking about a new category for \"plugin tests\". Like this we know when something breaks if it is internal or plugin related. What do you think?\n@ruflin Add new category it's not a problem, but If we have at least one functional test per plugin, isn't this a test category you're talking about?\n. @HarryWiseman If you comment out these strings, elastica works as expected? Could you please provide full exception trace and show us snippet of how you create instance of Elastica\\Client?\n. As I can see from changelogs, in both 1.6 and 1.7 releases public api doesn't changed.\nQuestion is, should we add new class (even empty) to Elastica\\QueryBuilder\\Version namespace every ES release, or this is useless consistency?\n// cc @webdevsHub as QueryBuilder author\n. @ruflin I read carefully this code, but don't really get that exactly they achieve using curl in multi mode, but sending just one request at time. Could you explain please why we also should switch to this way? :)\n. > Keep Percolator object but only to the registration of a query part\nAgreed.\n\nMove percolate queries to the Search objects.\n\nBut why? Request to _search endpoint and request to _percolate endpoint may be similar in some particular points, but they differs so much, i don't sure they could be merged into one class. Maximum that we can do here is to move part of Elastica\\Search class into traits and reuse them in Elastica\\Percolate, am I miss something?\n. @ruflin We have to compile 2.0 from source or there build is already available?\n. @ruflin I'll look here at this evening.\n. @ruflin I'm ok with it. Should we drop vagrant then to not confuse which one tool is actually used?\n. @ruflin Sorry I didn't respond in time. I left question in the code.\n. > Our main usage of sudo is here\n@ruflin Nope, it's actually here. Ansible escalates it's privileges to root when runned, we don't see it because of passwordless sudo in  travis.\nI recently did a lot of ansible-related work on my job, now I know this tool even better, and I'm think I know that must be changed in order to use containers. Give me a couple of days...\n. @nicolassing Looks good, thanks.\nBuild failed, but this is not related to PR.\nCould you please add a couple of functional tests and run cs fixer using make lint before merge?\n. @oncesk Hello. This is already fixed, and classes that incompatible with php7 were deprecated in https://github.com/ruflin/Elastica/issues/825. Use Elastica\\Filter\\BoolFilter and Elastica\\Query\\BoolQuery instead.\n. Awesome!\nI suspect something is broken, but all tests seems to be green, hence lgtm.\nI left comments (mostly cosmetic issues) in the code, also could you please:\n1) update changelog\n2) add docblocks to all new methods\n3) run php-cs-fixer\n4) save result of _getBaseName into variable in toArray methods. It's sounds like microoptimization, but here this method was called 6 times, it's too much\n. @ewgRa Thanks, merged. If you still want add more test for coverage, feel free to open another PR.\n. Merged.\nLooks quite complicated, but I guess gnu make lack better syntax for pure targets.\n. @joshuataylor Hello. This is already fixed in #825.\n. Closed. Reopen please, if we actually miss something.\n. Hello.\nYou should use connections key of config array to specify multiple servers.\nIn common, it looks like this:\nphp\n$client = new Elastica\\Client([\n    'connectionStrategy' => 'RoundRobin',\n    'connections' => [\n        [\n            'host' => 'xxx.xxx.xxx.xxx',\n            'port' => 9200,\n        ],\n        [\n            'host' => 'xxx.xxx.xxx.xxx',\n            'port' => 9200,\n        ],\n    ],\n]);\nSpecifically for your case:\nphp\n//$client = new ElasticClient($servers);\n$client = new ElasticClient(['connections' => $servers]);\n. Btw.\nphp\n$settings->set(['cluster.name' => getenv('CLUSTER_NAME')]);\nThis line will change cluster name, using update settings api.\nI guess that cluster name should be specified only once (in your snippet it happens on every request).\n. @bartclarkson @ruflin As far as I know, ES developers keep deleteByQuery because \"if we will delete it, every client library will have to implement this functionality on their own\". And instead of deletion they just changed used algorithm (internally it uses scan_and_scroll in 2.0). At least this was actual in June when I read their discussion on github. But I'm not sure, I need to recheck this.\n. Build is completely red, but at least is running on every commit now.\n@ruflin Could you please review and merge this into elasticsearch-2.0 so we can move forward step-by-step?\n. @ruflin I suggest to just drop \"-\" in all commands, if you can't remember why you added this.\n. @giorrrgio Please specify php version and used transport.\n. @ewgRa If array key will be quoted will it be a valid filter name?\n. This block(9-16) was deleted by me in #742.\nPackages versions should be specified in ansible/es-playbook.yml now.\nActually, travis built your pull request with ES 1.3.4, as i can see from logs :)\n. With arrays new syntax, \">=5.4.0\"\n. I've found a problem.\n1. ubuntu 12.04 default php version is 5.3\n2. ansible uses sudo internally for all steps\n3. when you use phpenv as travis does, php and sudo php is different versions of php\n4. sudo composer can't satisfy \">=5.4\" requirement, becase uses system php, which 5.3 \n5. ansible wipe out all stderr from composer so it fails silently =/\nMoreover, vagrant box is broken again, as there only one php version - 5.3\nI'll fix this issue.\n. Didn't even knew about this feature - my main intention was to split up configs.\nFile can be safely renamed back to .dist, hovewer.\n. Sure, fixed.\nSpeaking of that, this library convention is slightly different than that PSR-2 says:\n\nMethod names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.\nProperty names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.\n. I think, since #774, here (and everywhere) should be @return $this\n\nupd: i was working on #788 when this pr was added. Now rest of the library uses @return $this\n. I guess \"1.4.0\" at the end of url also should use ES_IMAGE_PLUGIN_VER.\n. It was removed here and mentioned in changelog of 1.5.0.\n. Missed return statement. All setters must implement fluent interface.\n. According to parameter name, shouldn't here be AbstractFilter indeed?\n. - composer.lock causes composer error when ES_COMPOSER_NODEV is \"yes\". Like this.\n- Yep, I remove it. Now phpunit has verbose enough configuration, not like it was in https://github.com/ruflin/Elastica/commit/784049df4dde462ccea45c81f97010ed36191c4a\n. Just FYI, if unit tests will be placed before shutdown, they potentially can hit ES server, that obviously not thing unit test is supposed to do.\n. Hmm, haven't thought if this is BC. In that case, I would suggest to remove this ELASTICA_DEBUG completely, because debug should be an parameter of connection constructor and not some magic constant.\n. Though, only difference I see between \"debug mode\" and not \"debug mode\" is just two things: \n- Would $response->setQueryTime be invoked after request.\n- Would curl option CURLINFO_HEADER_OUT be applied or not.\nBoth of them has no impact on performance, is this really worth to keep debug option?\n. > They should work\nI tried, but they don't.\nThen I would like to remove this constant. One who want to get headers in response could pass CURLINFO_HEADER_OUT via curl options.\n. Use addDocuments to avoid unnecessary requests during tests.\n. Same thing.\n. @param string $id\n. I think that for consistency, interface should include setName as well.\n. My commet above + AbstractSuggest should have setter for name regardless of new interface.\n. $filter is optional in constructor, will be fatal error if it is not defined\n. I'm wrong, getParam will throw InvalidException. Still, it's better to check that was returned. \n. $filterArray was not initialized.\n. Could be filter named as zero?\nempty('0') === true\n. Offtop: still don't sure about this, mostly because in russian \"\u0430\u0440\u0440\u044f\u0431\u043b\" sounds quite silly :)\nMay be more traditional ToArrayInterface  is better name?\n. A lot of targets, some of them just copypasted from ant config file that was deleted far ago :) \nWhich of them is actually used?\n. Ok, sorry, your arguments looks more reasonable.\nYou right, it's subjective. I didn't seen much *able interfaces before and I'm just used to Interface suffix at the end of the name.\n. There are some breaking changes in plugin api and seems like only mapper attachment is ready for 2.0. I will revert it later.\nSorry I'm quite slow here :)\n. This is temporary workaround that fixes fatal error (now getError return array instead of string).\n. ",
    "juneym": "Cool! Thank you.\nOn Mon, Jun 13, 2011 at 7:32 PM, ruflin \nreply@reply.github.comwrote:\n\nThanks for point this out. I just fixed it:\nhttps://github.com/ruflin/Elastica/commit/af122667b0b3e368956066fcb512e93a88102da3\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/34#issuecomment-1358309\n. Closing this pull request due to some issues discovered.\n. Yes, I will ad some test to verify the expected value probably tonight.\nThanks.\n\nOn Tue, Jun 28, 2011 at 2:41 PM, ruflin \nreply@reply.github.comwrote:\n\nThx for the addition. If you have some time, some tests to verify the\nfunction would be nice.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/44#issuecomment-1452705\n. Hi,\n\nI will look into this later tonight. \nIn fact, I'll be sharing with you the output that I get when running the phpunit against all unit tests as I see it on my development server. I usually get lots of \"E\" which I haven't figured out why.\nThanks!\n. Yap. I admittedly did not pay attention to the mapper-attachments requirements. I am using 0.16.1.\nI will try to install the plugin and push the modified unit test class for fuzzlikethis later.\n. This is noted. Yes, I'm using tabs instead of spaces to ensure that I get\nconsistent view of the code in different platforms and editor which is also\nbeing recommended by ZF/PEAR coding convention. Maybe we can consider this\nas well?\nOn Fri, Jul 15, 2011 at 11:30 PM, ruflin \nreply@reply.github.comwrote:\n\nOne small addition: I just did the codesniffer tests on the new code. It\nseems like you are using spaces instead of tabs. It would be nice if you\ncould switch to tabs next time. I will change it.\nHere are some notes on the coding guidelines:\nhttps://github.com/ruflin/Elastica/wiki/Coding-guidelines\nThanks for all your additions.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/50#issuecomment-1580573\n. Yes, I do use spaces instead of tabs.\n\nUnderstood. There's a linux cli tool called unexpand which I can use to convert tabs to space before pushing changes.\n. Hahaha, my bad. Thanks.\nOn Mon, Jul 18, 2011 at 4:10 PM, ruflin \nreply@reply.github.comwrote:\n\nSounds good (except that you wrote tabs to spaces :-D). Interesting script.\nAnd if some parts still have spaces, don't worry. For me it's much more\nimportant to have good contributors (like you) then to follow 100% the\ncoding guidelines.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/50#issuecomment-1593530\n. hasFacets restored \n. Thanks. I also referred to the current doc so I was expecting that\neverything will work using the latest ES version.\n\nOn Fri, Aug 5, 2011 at 7:33 PM, ruflin \nreply@reply.github.comwrote:\n\nI hope shay or someone of the other guys can help:\nhttps://groups.google.com/forum/#!topic/elasticsearch/oXCTNrZx99s\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/63#issuecomment-1734625\n. Thanks! I like the re-factored code. I will test the fixes using 0.16.2 as\nwell.\n\nOn Sun, Aug 7, 2011 at 6:30 PM, ruflin \nreply@reply.github.comwrote:\n\nI just did some pretty heavy refactoring of the MoreLikeThis query in\ncombination with the new introduced Elastica_Param object:\nhttps://github.com/ruflin/Elastica/commit/9973c8f2d6daadf0a250a1ef5f03bde707c48621\nI plan to refactor all filter, queries and facets like this.\nOn main change I did is that if an invalid value is set (< 0) it is not\nreset to default. I think then an exception should be throw or at the moment\nit is up to the user to create valid queries. ES will throw and error as\nsoon as the querie executes.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/63#issuecomment-1748033\n. \n",
    "mwiercinski": "Hi, \nSure thing: \n$index = new Elastica_Index($client, 'something'); \n $index->search($query, array('size' => 10));\nThe other way to keep the same prototype for Elastica_Index::search while allowing passing params I was thinking off was to store inside parameters inside the object and chain these up, i.e.\n$index->setParams(array('size' => 10))->search($query);\n, but that could make someone confused on subsequent searches if they reuse the object (plus search parameters aren't really responsibility of the index object in the way I see it).\nCould also split it up: \n```\npublic function query($query, $params = array()) {\n    $query = Elastica_Query::create($query);\nforeach($params as $param => $value) {\n    $query->setParam($param, $value);\n} \nreturn $query;\n\n} \npublic function executeSearch($query) { // idealy route this one through the client to not have logic duplicated across the project\n    $path = '_search';\n    $response = $this->request($path, Elastica_Request::GET, $query->toArray());\n    return new Elastica_ResultSet($response);\n}\npublic function search($query) {\n    return new Elastica_ResultSet($this->executeSearch($this->query($query)));\n}\n```\n, then could use a syntax: \n$index->executeSearch($index->query($query, array('size' => 10)));\n, however as you can see it doesn't  end up being that easy to use. Any ideas? \nCheers,\nMaciej\n. The point was to reuse the logic (pretty much creating the request path) or rather keep it inside the class of Elastica_Index::search for creating and executing the search query, while still being able to set the size of the search in the simple and flexible way.\nTo be honest I've missed the part of factory method and I agree that best way to keep it simple would be to add it to the factory. \nWhat do you reckon about this ? \n```\n$q; // instanceof Elastica_Query_Abstract;\n$index->search(\n  Elastica_Query::create(\n    $q,\n    array('size' => 20)\n  )\n); \n```\n. Yup, going to update the factory method. Good point about __clone btw.\nCan't see the way to modify the pull request, will rather close this one and do another.\n. I'm planning to bring in these changes at some point (got stuff slightly re-prioritized at work). Most likely next week I'm back into ES world, but for time being I'll close this issue and submit new pull request when it's done :) \n. I've made another PR accommodating your comments - closing this one.\n. Good point, changed.\n. ",
    "lavoiesl": "If no one has more to add, I believe this issue needs to be closed, just saying.\n. Can this issue be closed then ?\n. Can this issue be closed then ?\n. Reviving this issue. @farrelley, do you still want to do it ? I could take over otherwise.\n. Can you provide more details on the environment of this issue like the system being used, the java version, etc.\nAlso, is this the only error you have ?\n. What do you mean random ?\nCan you dump the output of those as a Gist ?\n- http://localhost:9200/_cluster/health?pretty=true\n- http://localhost:9200/_cluster/settings?pretty=true\nAlso, if you can, remove all your indices:\nbash\ncurl -XDELETE 'http://localhost:9200/_all/'\n. After having deleted all data, have you restart the server and everything looks fine ?\nYou can try to create the index with more shards or sleep before continuing.\nOtherwise, I don\u2019t know exactly, I am not familiar enough with what percolator does.\n. @kimchy You can find it here https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/PercolatorTest.php#L29\nBut I can\u2019t explain much more, sorry. I think we are simply issuing actions too quickly, hence why it happens only sometimes\n. Sounds good enough.\nHave you tried to create the index with more shards or sleep before continuing ?\n. No, the test specifically uses only 1 shard, try to change this\n. I understand your point, but since it wasn\u2019t working anyway, I don\u2019t think it is very dangerous to BC break.\nAnother idea I had is to add the name parameter on the addScriptField instead of on the constructor. You will need to give associative array to addScriptFields. This however different from addFacet just below, so I\u2019m not sure it is a very good idea.\n. I understand your point. Based on the discussion, I don\u2019t think that embedding $name in Script is a good idea. Including $name in toArray could have unknown consequences as well.\n. Well if you use Script with updateDocument as in TypeTest, you don\u2019t need a name.\nMaybe it would be best to have Script and ScriptField which would extend the first. ScriptField would be responsible of the name parameter.\nOr, have ScriptField extend Param and take name and Script in its constructor. I think this option is best; it allows for reuse of Script since a script should not have knowledge of its name. Moreover, all the params for Query extend Param.\nI\u2019m not sure if I\u2019m clear :)\n. Yes, I actually like the idea of a ScriptFields even more. I\u2019ll do that\n. Boom !\n. Common no, if it happens, yes. One thing that could be done though is to accept an array in Query::setScriptFields and auto-wrap.\n. Namespaces are a thing, but this is not obligated as this is a huge BC break. I am more talking about whitespace, visibility declaration, Control Strucutres, etc.\n. Yes yes, this is exactly the kind of tool I am talking about.\n. Cool, we could start with PSR1.\nPSR1 should be easy, I can do it right now.\nPSR2 is a bit more nasty, I would need to make a list and make sure everyone agrees.\nFor namespaces, it really isn\u2019t a priority and should only be done if it is needed to convert the codebase to 5.3. A branch should also be kept for < 5.3. Don\u2019t get me wrong, I want it to be converted, I love closures and all, we just need to be careful.\n. Well, as it turns out, the only remaining issue for PSR1 is the use of camel case for methods, especially starting with an underscore. @ruflin, it is your call for what (if) we do next. We could at least fix the whitespace and advertise such as a coding standard in the README\n. I used to be in favor of tabs, they have arguments in favor of spaces, but really the point is to follow a standard. And with PHP-CS-Fixer, there is really no work to be done for it to be fixed.\nFor the underscores in front of methods, it is true it is SHOULD NOT if the method is private/protected. The only I found were in tests, these should be fixed.\n\nSo I say, let\u2019s fix all the whitespace, including replacing tabs with spaces, and the remaining camelCase issue. I can start a branch, run PHP-CS-Fixer and we see from there. Do you agree ?\n. Meh\u2026 only a small PR\u2026\n. I like your style\n. Arw man, I just did a rebase yesterday :P\n. Well, I don\u2019t fancy working with 5.2, but I believe this is needed.\nHere\u2019s my plan:\n1. Create a 5.3 branch, develop and test it.\n2. Slow down work on master branch, only bugfixes.\n3. Keep rebasing 5.3 branch on master while bugfixes are done.\n4. When 5.3 is ready, branch master as 5.2.\n5. Merge 5.3 in master, it becomes the new master.\n6. Deprecate slowly 5.2, only backport bugfixes.\nThis should allow everybody to upgrade smoothly and a 5.2 version will still slowly maintained. If someone needs a bugfix someday, he could still ask for it or do a PR.\nWhatcha think ?\n. Wut ? Can you extrapolate on that please ? I am familiar with Doctrine ORM, not that much with ODM even though I understand that Mongo and Elastic work with similar \u201cdocuments\u201d. However, I don\u2019t really see what\u2019s your idea of a Doctrine/Elastic project.\n. Yes, but changing everything to namespace/closures/etc. will require some dev and testing, hence we should keep the master branch clean for now\n. Yes sure, let\u2019s rock that branch so that it doesn\u2019t live for too long. I\u2019ll probably be able to start it tomorrow or saturday.\n. I am not sure I fully understand the two PRs, I will check tomorrow\n. @lsmith77 could you link to a more in-depth discussion/analysis. How does it safeguard the data, what are the use cases, etc.\n@ruflin I won\u2019t have time to check those PRs today, I\u2019ll give you a heads up when I can.\n. Ok, let\u2019s keep it in mind but I don\u2019t think we should focus on it for now. A youth cure is needed before and as @ruflin said, I would more see it as another project that would wrap this library into another.\n. Nice work there @ruflin \nWorking on names\n. Going through the code, I am wondering, why is there this on top of classes:\n/**\n * @category Xodoa\n */\n. Do you want me to remove it and put it in some kind of README or the composer.json ?\n. Nothing, you really need one ?\n. Same goes for @package, the namespace speaks for itself and the README/composer.json gives the rest of the details.\n. Sorry, I don\u2019t know\u2026\nLet\u2019s it there and see later if this is relevant\n. Alright, so I have started a bit.\nDo you agree so far ? https://github.com/lavoiesl/Elastica/compare/master...namespaces\n. Man, that was some heavy work\n. https://github.com/squizlabs/PHP_CodeSniffer/tree/master/CodeSniffer/Standards/PSR2\nIt was already there on my machine when I installed 1.3.5\n. Can I be picky me too :) \nIt is a txt file, there really is no reason to keep everything on one line. \nBefore, after and where could really be on their line.\n. Yeah, my bad. \nWe agreed that an array could be passed and the function wraps it as needed. While rebasing, it got messed up.\n. Merge to master, I'll rebase when the namespaces are ready. If I need help, I'll ask\n. However, would it be possible to squash this into 2-3 commits instead of 10 ?\nThanks\n. A lot fo words words are reserved: abstract, and, or, so I needed to suffix some of them. For consistency, I prefixed all of them. It proved a good idea because a lot of the names are shared between Facet, Filter and Query, I would have ended up aliasing everything. \nRenaming the classes in the Index namespace to IndexSettings, IndexStatus and IndexStats as well would be a good idea, it turned out is clashes with the Cluster and Cluster\\Health namespace.\nIf you want, I can do it.\n. Odd, I tried with Eclipse to check specifically this and didn't flag any error.\nDoes it detect correctly the use statements ?\nFor example, is this valid ?\n``` php\n<?php\nnamespace Elastica\\Index;\nuse Elastica\\Index as BaseIndex;\nclass Stats {\n    /*\n     * @return BaseIndex\n     /\n    public function example() {}\n}\n```\n. I added a relevant section in the wiki: https://github.com/ruflin/Elastica/wiki/Coding-guidelines\n. So I guess we move on to prefix everything with a slash in documentation\n. Relative naming would mean I\u2019d have to manually go through all files and people tend to forget to rename them when they move functions around while refactoring. \nI just did a big replace all, tests are on their way, PR will come in a sec.\n. ",
    "dmkoch": "Thanks so much for a quick turnaround!\n. ",
    "motin": "Trying to clean up here... Do not pull anything yet :)\n. This went all wrong. Closing.\n. ",
    "biswajitdas": "@ruflin Please change the Text Query Part. It's Wrong. message is not part of Elastic's Keyword. It's Just a Field Name. :-D. Please Let me know. And You Rock... \\m/\n. @ruflin Yeah Sure, Please let me know when it is Fixed. You have to Just Take some functions take out from Text.php to Param.php with some validations.\n. @ruflin Thanx a Load...\n. @ruflin As per My Need It Worked Perfectly...\n. I have to check this again..... :)\n. ",
    "ThePixelDeveloper": "Really sorry I didn't do this for you ruflin. RLS (real life syndrome) got in the way.\n. I didn't understand the code properly. The working sample is:\n``` php\n<?php \n$search = new Elastic_Search;\n    ->addIndex('index')\n    ->addType('type')\n$search->search(\n    new Elastica_Query(\n        new Elastica_Query_Array(array('term' => array('name' => 'kimchy')))\n    )\n);\n```\n. I forgot about the 2nd way of doing it, but it sounds fine to me.\n. ",
    "chrisgedrim": "A rudimentary query builder has been started here: https://github.com/kiddivouchers/kohana-elastica/blob/master/classes/elastica/query/builder.php\n. My use-case:\nWe have a number of apps using a central data store accessed via an api.\nEach resource is stored as a document in Elastic via Elastica on creation and on any subsequent update.\nThe example I gave was for our CRM querying the api for a list of call-back requests which are scheduled for this week, when they were created and who they were assigned to. For this example the CRM needs to be able to build a query, but doesn't need to know anything else about Elastica.\n``` php\n$query = Elastica_Query_Builder::factory()\n    ->query()\n    ->filtered()\n    ->filter()\n    ->range()\n    ->field_open(\"due\")\n    ->gte(\"2011-07-18 00:00:00\")\n    ->lt(\"2011-07-25 00:00:00\")\n    ->field_close(\"due\")\n    ->range_close()\n    ->filter_close()\n    ->filtered_close()\n    ->text_phrase()\n    ->field(\"title\", \"Call back request\")\n    ->text_phrase_close()\n    ->query_close()\n    ->sort_field(\"due\", true)\n    ->fields(\n        array(\n            \"created\",\n            \"assigned_to\",\n        )\n    );\n$response = Api_Connector::factory()\n    ->post('notes', $query)\n    ->execute()\n    ->expect(Api_Response::SUCCESS)\n    ->get_data();\n/\n * Currently $response now contains an array of headers for matching models:\n *\n * HTTP/1.1 200 OK\n * Date: Wed, 20 Jul 2011 09:46:42 GMT\n * Server: Apache/2.2.17 (Win32) mod_ssl/2.2.17 OpenSSL/0.9.8q PHP/5.3.5\n * X-Powered-By: PHP/5.3.5\n * X-API-Request-ID: 200\n * Content-Length: 73\n * Content-Type: application/vnd.widerplan.api.url-list+json\n * \n * [\"https://api/notes/11\",\"https://api/notes/10\"]\n * \n * In future a 'search' resource willl return the documents returned by elastica:\n * \n * HTTP/1.1 200 OK\n * Date: Wed, 20 Jul 2011 09:46:42 GMT\n * ...\n * [\"11\":{\"created\":\"2011-07-01 10:32:56\",\"assigned_to\":\"Chris Gedrim\"},\"10\":{\"created\":\"2011-07-18 17:21:45\",\"assigned_to\":\"Martin Ledgard\"}]\n /\n```\nI hope that makes some sense.\n\nAs for including the Query builder in Elastica; I'm totally cool with it being included, but I think it may be better as a submodule rather than as part of the core library. (Mainly because it would better suit my needs if I could just add a submodule rather than copying the same file to multiple apps every time it's updated.)\n. That's the point: I don't want to include Elastica on every client. The client's are fairly dumb. The server (api) has all of the intelligence.\nIdeally I would have Elastica, in full, on the server and only have Elastica_Query_Builder on the clients.\nThe client would build a query which would then be passed as a json string to the server. The server would then perform the query by passing the query string to Elastica, process the results and return them as a json object.\n. I've just added a constructor and an option to the factory to allow a string to be parsed, and a toArray method (which was as_array).\nAs I've got the code open atm I can do the renaming. Do you follow a named coding standard? What settings do you use for code sniffer?\n. Ok, my bad. Should have noticed that :)\n. I'm beat from two days worth of manual labour, so I'll have a proper look in the morning and let you know what I think :)\n. How about something like this then?\n``` php\n/*\n * Basically a big pretty factory class.\n /\nclass EQB {\n    public static function boolQuery() {\n        return new Elastica_Builder_Query_Bool;\n    }\npublic static function rangeFilter($field) {\n    return new Elastica_Builder_Filter_Range($field);\n}\n\n// Other factory methods.\n\n}\n```\n``` php\n/*\n * Bool Query class.\n /\nclass Elastica_Builder_Query_Bool {\n    private $_query = array('bool' => array());\npublic function must(Elastica_Query_Abstract $query) {\n    array_push($this->_query['bool']['must'], $query);\n\n    return $this;\n}\n\npublic function mustNot(Elastica_Query_Abstract $query) {\n    array_push($this->_query['bool']['must_not'], $query);\n\n    return $this;\n}\n\npublic function should(Elastica_Query_Abstract $query) {\n    array_push($this->_query['bool']['should'], $query);\n\n    return $this;\n}\n\n}\n```\n``` php\n/*\n * Range Filter class.\n /\nclass Elastica_Builder_Filter_Range {\n    private $_field;\n    private $_filter = array();\npublic function __constructor($field) {\n    $this->_field = $field;\n}\n\npublic function from($value) {\n    $this->_filter[$this->_field]['from'] = $value;\n\n    return $this;\n}\n\n}\n```\n``` php\n$qb2 = EQB::boolQuery()\n    ->must(EQB::termQuery(\"content\", \"test1\"))\n    ->must(EQB::termQuery(\"content\", \"test4\"))\n    ->mustNot(EQB::termQuery(\"content\", \"test2\"))\n    ->should(EQB::termQuery(\"content\", \"test3\"));\n$qb3 = EQB::filteredQuery()\n    ->query(EQB::termQuery(\"name.first\", \"shay\")) \n    ->filter(EQB::rangeFilter(\"age\")\n        ->from(23)\n        ->to(54)\n        ->includeLower(true)\n        ->includeUpper(false)\n    );\n```\n. The whole issue of deploying all of elastica doesn't really matter\u2026 It would have just been nicer not to have had to :)\nThere is no reason why Elastica_Builder_Query_Bool couldn't extend Elastica_Query_Bool\nIt does turn massive chunks of the builder into wrappers though. Maybe there needs to be a schedule for refactoring, so that the queries all end up being built by the builder? As the owner of the project (@ruflin) you really get the say in which direction we go\u2026\n. After looking over some othe (SQL) query builders I think you're right, example away :)\n. @ruflin I think a dev branch purely for the query builder(s) is probably the best idea; it would mean we could all hack away to get something fairly solid and usable for people to try out before merging it to master.\nI like the idea of not using magic calls; I personally don't have a problem with wrapper functions rather than a magic call. A magic call method could still be included for forward compatibility.\n. Please bear in mind this is WIP, and I started on it before @ruflin branched and merged; https://github.com/kiddivouchers/Elastica/tree/query-builder\n. I was thinking anyone who wants to contribute could work in their own fork, then cherry pick the commits you/we want to merge?\nI'm off radar for a couple of days, but I'll attempt to keep track of what's going on.\nIf anyone fancies hacking with my code feel free (I can make a pull request if needs be?)\n. Sorry, been caught up in 'more important' work. I think @fabian's solution is more-than good enough to get around my reservations.\n. ",
    "fabian": "thx, and sorry for the mess :)\n. @ruflin I agree with your points in the last comment. Basically I think my PR matches your ideas.\n. I think creating a new object for every query and filter is a good thing, this way we can still use the existing objects. The main point of this PR is for me to make the instantiation of the objects easier (that's why I called it factory). \nBut I don't really like the __call method for the factory, as it makes autocompletion inside IDEs impossible.\nOn the other hand I begin to like your idea of the call stack with an end() method\u2026 Maybe we should add two things: The factory as proposed in this PR and a query builder with the end() method.\n. I ended up using aliases for my queries and no query builder at all, I think it's even cleaner:\n``` php\nuse \\Elastica_Filter_GeoBoundingBox as Geo;\nuse \\Elastica_Query_MatchAll as All;\nuse \\Elastica_Query_Filtered as Filtered;\nuse \\Elastica_Query_HasChild as HasChild;\n$geo = new Geo('sighting.position', array(array(7.764587, 47.567261), array(8.506165, 47.236355));\n$filtered = new Filtered(new All(), $geo);\n$hasChild = new HasChild($filtered);\n```\n. Yeah, never start a Monday morning with a pull request. xD\n. lol\n. My problem is with what kind of exceptions is thrown\u2026 it's a generic PHP notice which even gets ignored sometimes. Even when the error is displayed you have to dig into the library itself to find out what the problem is - IMHO the library should only throw clear exceptions and avoid to produce errors inside itself.\nStill, throwing an exception here if facets are not returned by elasticsearch seems a bit hard to me. Therefore I would try to avoid internal errors and recommend the use of hasFacets().\n. Thanks for the merge. Yes, if a faceted query is made, there is always a facets response, an empty one looks like this:\njson\n\"facets\": {\n   \"tags\": {\n      \"_type\": \"terms\",\n      \"missing\": 0,\n      \"total\": 0,\n      \"other\":0,\n      \"terms\": [ ]\n   }\n}\n. See http://travis-ci.org/#!/fabian/Elastica/builds/316312\n. Not yet, but it's on their roadmap\u2026\n. Success! \n. Cool! :D\nRead http://about.travis-ci.org/docs/user/getting-started/ for the setup (service hooks should be added automatically).\n. It sure makes it much easier! No I'm not involved in the project, but we had a talk about it by @joshk at @liip today, so I wanted to try it out... he also said things like code coverage and code sniffer are the next planned thing.\n. You mean on Travis CI? I don't really know\u2026 I just know they have more than one server for running the tests.\n. Oh, actually I wanted to send a PR to my own fork\u2026 :)\nHave you heard of http://jmsyst.com/automated-code-reviews/ ?\n. ",
    "mgdm": "Ah yes, that looks correct. I'm a little confused about what happened there, as I'm sure it worked properly for me at least once!\n. That's bizarre...\n. ",
    "farrelley": "I am going to close this since the pull request has happened.\nclosed in ticket #68\n. Fixed... Updated wiki testing page with correct command.\n. Odd.  I keep getting a \nTarget \"codesniffer\" does not exist in the project \"Elastica\".\nwhen I run ant codesniffer\n. Odd.  Must have come in earlier this morning with the git upstream pull master.  Seems to be working now. \nSorry for the alarm bells.\n. +1 to tests\n. I can add this test if not already done so that we can close this issue.\n. Sorry... I will write this test today and issue a pull.  Been busy... But I'm going to get back at it on the project.\n. Yup... all that makes sense.  I will ask in the ES group too!\n. Yup.\n. I also talked to kimchy on IRC and he didn't have any idea about the size 0 will return all the results. It would return zero results. \n. From what I have seen in the IRC channel you must specify the limit.\n. I think so if no one has any objections?\n. @ruflin What would be the best way to check to see if the type is deleted from the index?  I was looking at the _stats stuff and didn't see anything.  The only thing that I can think of is to check to see if a mapping exists, or query the type for data and see what comes back?\nAny ideas?\n. I can make a mappingExists() if we need one.  Do you think we do?\n. Let me look at this again tonight if i have some time\n. I think that should do it.  I put in a try catch and then look at the message that i get back.  If no exception is thrown then we will just fail the test.  \n@ruflin - Good catch!\n. yea i think so.  I just cherry picked that one file.\nShaun Farrell\nOn Tue, May 8, 2012 at 1:57 PM, Nicolas Ruflin <\nreply@reply.github.com\n\nwrote:\nThis means, I can close the other pull request, right?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/160#issuecomment-5581668\n. \n",
    "phillro": "Ah excellent. Thank you!\nI updated my docs on your project here:\nhttp://support.elasticsearchhq.com/entries/20364543-elastica-with-an-authenticated-search\n. ",
    "ajkreitman": "Thank you so much!  That indeed did the trick.\n. ",
    "pierrre": "Maybe the \"cache\" variable should take 3 values:\n- true (cached)\n- false (not cached)\n- null (ES default)\n. I mean we should add a new protected variable named \"$_cache\".\nBy default, its value is \"null\", and can be set to \"true\" or \"false\".\nIn the toArray() method, if \"$_cache\" is set, it adds \"_cache\" in the array.\nIn Elastica_Filter_And, we should create a new protected variable named \"$_filters\".\nIn the toArray() method, it checks \"$_cache\":\n- If the value is \"null\", it creates an array of filters directly in the filter\n- If the value is \"true\" or \"false\", the array of filters is created in the \"filters\" field of the \"and\" filter\n. http://www.elasticsearch.org/guide/reference/query-dsl/\nAll filters allow to set _cache element on them to explicitly control caching.\nThey also allow to set _cache_key which will be used as the caching key for that filter.\nThis can be handy when using very large filters (like a terms filter with many elements in it).\nSo, we should also add setCacheKey() :P\nI don't know if it is mandatory to create $_cache and $_cacheKey...\nBut there is no way to test the presence of a key in Elastica_Param.\n. There are 2 ways to do that:\n- This one: https://github.com/ruflin/Elastica/issues/76#issuecomment-6380967\n- Or add Elastica_Param::hasParam() and don't use $_cache nor $_cacheKey\n. I agree.\nI'll try to do that when I have more time :P\n. Do you think removeParam() is needed?\n. I think we should create a parent class for \"And\" and \"Or\" filters, because they're similar.\nWhat do you think of \"Elastica_Filter_MultiAbstract\"?\nTwo methods:\n- addFilter()\n- setFilters()\n. No, there is already the Bool filter, with a different behavior... :/\n. There are no other similar filters. Only \"And\" and \"Or\" are concerned.\n. Traits are for PHP 5.4 :P\nWhat should we do?\n- Create an abstract parent class for \"and\" and \"or\" filter?\n- Copy/paste the same code in \"and\" and \"or\" filters?\n. ArrayAbstract?\nListAbstract?\nMultiAbstract?\n. I'd like to implement this feature before the others, because \"And\" and \"Or\" filters are currently broken if you want to use the cache.\n. I think this issue is closed.\n. Implemented in #175\n. Should I do a pull request? :P\nphp\n<?php\n/**\n * Numeric Range Filter\n *\n * @uses Elastica_Filter_Range\n * @category Xodoa\n * @package Elastica\n * @author Nicolas Ruflin <spam@ruflin.com>\n * @link http://www.elasticsearch.org/guide/reference/query-dsl/numeric-range-filter.html\n */\nclass Elastica_Filter_NumericRange extends Elastica_Filter_Range {\n}\n. Not exactly the same, but the range filter implementation (in Elastica) is really generic.\n\"range\" filter and \"numeric_range\" filter are similar.\n. Yes of course, but in my opinion, there is nothing more to implement.\n. ooops sorry, wrong project\nhttps://github.com/Exercise/FOQElasticaBundle/issues/121\n. I tried to dump a document for debugging :P\nIt's not really important for me\n. Yeah I know, but currently I'm too busy with this ** FOQElasticaBundle and parent/child mapping :'(\n. There is the same problem in Client::addDocuments()\nif (!empty($parent))\nIt doesn't work with '0'\n. I use documents with ids starting from 0 :P\n. or we can compare with\n$parent !== ''\n. It's an Elastica_Type.\nOk sorry, I couldn't find where \"query\" is used...\n. In fact, this command deletes all documents in $this->_elasticaTypeAvailability.\nI'll debug this tomorrow :P\n. Ok, I was wrong.\nI want to delete documents by parent document, but my mapping didn't include the \"parent relation\" :P\nSorry!\n. In Elastica_Facet_Abstract, we should add a setScope() method like setNested().\nhttp://www.elasticsearch.org/guide/reference/api/search/facets/\nDo you agree?\n. Implemented in #183\n. I'm not really good with unit tests :/\n. It's not entirely true :P\nHe cares about unit tests, but we don't have time currently :/\n. Hmmm there is a small problem...\nI was writing unit tests on the filter facet :P\nThere is a setFilter() method in both Elastica_Facet_Abstract and Elastica_Facet_Filter.\nIn Elastica_Facet_Abstract, it's an optional global filter for facets. (\"facet_filter\" field)\nIn Elastica_Facet_Filter, it's the mandatory filter for this facet. (\"filter\" field)\nShould we rename a method?\nI think id does not make sense to have a \"facet filter\" in the filter facet :P\nSo, we can leave it as such...\n. I think we should rename Elastica_Facet_Abstract::setFilter() to setFacetFilter(): it creates the \"facet_filter\" field.\nBut it breaks the backward compatibility :/\n. Good idea, I'll do that when I have time.\n. It is very similar to Elastica_Query_MatchAll, ok?\n. Implemented in #186\n. It's tested in my code:\nphp\n$filter = new Elastica_Filter_MatchAll();\nQuery:\n``` json\n{\n    \"query\": {\n        \"match_all\": {\n    }\n},\n\"fields\": [\n    \"name\"\n],\n\"filter\": {\n    \"match_all\": {\n\n    }\n}\n\n}\n```\n. But this syntax is ok:\nphp\n$scriptFields = array(\n    'foobar' => array(\n        'script' => 'doc[\\'brand\\'].value'\n    )\n);\n$query->setScriptFields($scriptFields);\nQuery:\n``` json\n{\n    \"query\": {\n        \"match_all\": {\n    }\n},\n\"fields\": [\n    \"name\"\n],\n\"script_fields\": {\n    \"foobar\": {\n        \"script\": \"doc['brand'].value\"\n    }\n}\n\n}\n```\n. I think we should use the same pattern used for facets:\n- addScriptField()\n- setScriptFields() (foreach addScriptField())\n. And of course, the toArray() method is missing in Elastica_Script class\n. Currently, the only way to use script fields in a query is to pass it as an array.\n$query->setScriptFields(array(\n    'my_field' => array(\n        'script' => '1 + 2'\n    )\n));\nIf we change anything, it will break the backward compatibility.\nBut currently, Elastica_Script is broken imo, so we should change it\n. It works in the test because it's implemented in Elastica_Client::updateDocument()\nBut it doesn't work in Elastica_Query\n. I think that script implementation is broken in Elastica_Query\nPrevious comment:\n```\nI think we should use the same pattern used for facets:\n\naddScriptField()\nsetScriptFields() (foreach addScriptField())\n```\n\nElastica_Client::updateDocument() should use Elastica_Script::toArray() instead of the current implementation\nAnd of course, the toArray() method is missing in Elastica_Script class\n. I think we should remove this code.\nIt has nothing to do here...\nAnd running phpunit with the test file is really easy :P\n. Should we close this issue?\n. No problem ^^\nI don't know how to test Elastica_Facet_Abstract::setNested() and setScope().\nHow do you test abstract classes?\n. Hmm ok, I think it's possible to test setFilter|Global|Nested|Scope() methods, and check the result with toArray().\nIs that it is the right way to do?\n. Of course, it's tested in my code\n. I ran this test 3 times on a clean ES installation, and I get this error.\n. How to reproduce:\nReset ES\nservice elasticsearch stop\nrm -R /var/lib/elasticsearch/CLUSTER_NAME\nservice elasticsearch start\nWait....\nRun tests:\nphpunit\nI just changed one setting in my config:\nnetwork.tcp.blocking: true\nIt prevents ES to use cpu while idle.\nhttps://github.com/elasticsearch/elasticsearch/issues/1940\n. Ubuntu 12.04 64 bits, OpenJDK 7, ElasticSearch 0.19.8\nIt's the only error I have, but it's random...\n. Sometime I get this error, but not always...\nHere is the status of my cluster AFTER the unit tests (and the error message):\nhttp://localhost:9200/_cluster/health?pretty=true\njson\n{\n  \"cluster_name\" : \"plyce\",\n  \"status\" : \"yellow\",\n  \"timed_out\" : false,\n  \"number_of_nodes\" : 1,\n  \"number_of_data_nodes\" : 1,\n  \"active_primary_shards\" : 32,\n  \"active_shards\" : 32,\n  \"relocating_shards\" : 0,\n  \"initializing_shards\" : 0,\n  \"unassigned_shards\" : 25\n}\nhttp://localhost:9200/_cluster/settings?pretty=true\n``` json\n{\n  \"persistent\" : {\n    \"discovery.zen.minimum_master_nodes\" : \"1\"\n  },\n  \"transient\" : {\n    \"discovery.zen.minimum_master_nodes\" : \"1\",\n    \"cluster.blocks.read_only\" : \"false\"\n  }\n}\n```\nI deleted all ES data with:\nrm -R /var/lib/elasticsearch/elasticsearch\n. @lavoiesl i do that:\nservice elasticsearch stop\nrm -R /var/lib/elasticsearch/elasticsearch\nservice elasticsearch start\n// wait 30 seconds\n// run unit tests\n. Do you mean I should use more than the default 5 shards value?\n. @ return annotations are missing\n. No, #76 is not closed.\n. I just improved cache filter, but it still doesn't work with \"And\" and \"Or\" filters.\n. Hmmm, I'm sorry, but there is a problem.\nHere is the PREVIOUS code of Elastica_Filter_Abstract (before my patch):\nphp\npublic function setCached() {\n    $this->_setRawParam('_cache', true);\n}\nHow to use it:\nphp\n$filter = new Elastica_Filter_Term(array('foo' => 'bar'));\n$filter->setCached();\nvar_dump($filter->toArray());\nIt produces:\n{\n    \"term\": {\n        \"foo\": \"bar\"\n    },\n    \"_cache\": true\n}\nI thought it was the right behavior,\nBut it was COMPLETELY WRONG!\nHere is the correct syntax:\nhttp://www.elasticsearch.org/guide/reference/query-dsl/term-filter.html\n{\n   \"term\" : { \n       \"user\" : \"kimchy\",\n       \"_cache\" : false\n   }\n}\n\"_cache\" field is at the wrong place!\nWhy _setRawParam() was used?\nSo, setCached() doesn't work currently, I'm sorry...\nBut it never worked :P\n. Of course, you can revert my commits, but it will change nothing.\n. If i replace _setRawParam() with setParam(), I get the expected filter:\n{\n    \"term\": {\n        \"foo\": \"bar\",\n        \"_cache\": true\n    }\n}\nPHP code:\n``` php\n    public function setCached($cached = true) {\n        return $this->setParam('_cache', (bool)$cached);\n    }\npublic function setCacheKey($cacheKey) {\n    $cacheKey = (string)$cacheKey;\n\n    if(empty($cacheKey)) {\n        throw new Elastica_Exception_Invalid('Invalid parameter. Has to be a non empty string');\n    }\n\n    return $this->setParam('_cache_key', (string)$cacheKey);\n}\n\n```\n. In the current elasticsearch's documentation, \"_cache\" field is always \"inside\" the filter (\"under\" its \"name\")\n\"And\" and \"Or\" filters are no exceptions.\nThe general solution is to use setParam() for \"_cache\" and \"_cache_key\".\nI'll do a pull request for that.\n. #199\n. It's open :P\nThe \"closed\" label is here because I referenced this issue from #198\n. Yep ^^\nLet's fix #76 \\o/\n. Hmmm, I think we should completely rewrite Elastica_Filter_GeoDistance.\nSetters don't use setParam() (they use protected variables).\ntoArray() builds the array manually, so \"_cache\" option is not usable...\n. It should also support location as geohash:\nhttp://www.elasticsearch.org/guide/reference/query-dsl/geo-distance-filter.html\nThere is a backward compatibility break in the constructor (PHP is a stupid language).\n. All currently used parameters are mandatory:\n- key (field name)\n- location (latitude+longitude OR geohash)\n- distance (string format)\nOther parameters are optional:\n- distance_type\n- optimize bbox\nThe problem is: in the current constructor, only latitude+longitude is supported, not geohash.\nAnd we can't change that without BC break.\n. We could use func_get_args(), but it's really shitty...\nMaybe we should break the backward compatibility for this constructor...\nIt is also possible to implement missing options now, and implement geohash later :P\nHave a great holiday!\n(I'd like to fix #76 before implementing other features)\n. php\npublic function __construct($key, $location, $distance)\n$location can be:\n- an array array(48.86, 2.35) or an associative array array('latitude' => 48.86, 'longitude' => 2.35)\n- a string for geohash\n. Hmmm, there would be 2 constructors :P\nIt's not possible in PHP, right?\n. It could call the constructor again with 3 arguments :P\n. We could also use the \"distance_unit\" parameters, instead of the (dirty) current format.\nhttp://www.elasticsearch.org/guide/reference/query-dsl/geo-distance-filter.html\nCurrently, the \"distance\" parameter is a string (\"19km\").\nIt is possible to use the \"distance\" parameters as a number (19), and add the \"distance_unit\" parameters (\"km\").\nI think it is better.\nIt will be easier to validate\nphp\n    public function setDistance($distance) {\n        // TODO: validate distance?\n        $this->_distance = $distance;\n        return $this;\n    }\n. Is it a good idea to have setDistance() / setLatitude() / setLongitude() methods, because these parameters are mandatory in the constructor?\n. I just cleaned the geodistance filter:\n954f1b26bccff1d69faf32d44222ecc023cf5ed8\nIs it ok?\n. It is really difficult to implement raw distance + distance unit & distance, because we have to support the old constructor (for retrocompatibility).\nIf we drop the old constructor, it could be easier to implement distance unit.\nIt is not easy to have setters for latitude, longitude, or geohash, because they require the \"key\" parameter.\nIf we create the filter with the geohash parameter, what happen if we call setLatitude() alone????\nMaybe we could add a setLocation($key, $location) method.\nIt also means we'll have to unset the previous value in the \"params\".\nWhat should we do?\n. Do you think we need distance + unit feature?\n. I have an idea: the last parameter could be a string (distance + unit as string) or an associative array (distance as float, and unit as string)\nWe could also add a setter: setDistance($distance, $unit = null)\nUnit is optionnal.\n. No, it will use the parameter as a string.\nIf unit is null, we cast the first argument as a string, and use the basic filtre structure.\nIf distance is not null, we cast the first argument as a float and the second as a string, and we use the advanced filter structure.\n. Yes, I closed all my old issues: https://github.com/pierrre?tab=activity\nI use the official PHP client.\n. :-(\n. We also need to store the query in a protected variable.\n. I'd like also remove the array support in Elastica_Filter_Query.\n. I think people do not expect that the extended structure is always used.\nIn Elastica_Param::toArray(), the filter name is generated by the class name.\nI suggest we create a new method in Elastica_Param, which allow to override this name.\nIt could be useful in this case: \"query\" is changed to \"fquery\"\n. I think the right place for that is the Elastica_Filter_Abstract::toArray function\nDid you mean \"Elastica_Filter_Query::toArray()\"?\nThe problem is that the filter's name is different with the extended notation (\"fquery\" instead of \"query\")\nsee: http://www.elasticsearch.org/guide/reference/query-dsl/query-filter.html\nI'd like not to change Elastica_Filter_Query::toArray(), because we would have to:\n- Add parameters one by one in toArray()\n  OR\n- call parent::toArray() and mess with the filter's name\nI suggest to add a new method which allow to override the Elastica_Param's name.\n. I think this issue is closed now.\nThese are the results produced by the new implementation:\n``` php\n// Simple\narray(\n    'query' => array(\n        'query_string' => array(\n            'query' => 'foo bar',\n        )\n    )\n);\n// Extended structure\narray(\n    'fquery' => array(\n        'query' => array(\n            'query_string' => array(\n                'query' => 'foo bar',\n            ),\n        ),\n        '_cache' => true\n    )\n);\n```\n. Do you mean \"functional tests\"?\n. Yes, it's related to #201\n. I was trying to implement this feature, but there is already a method \"_getName()\" method in Elastica_Param.\nThis is really confusing :(\n(I know it's partially my fault)\n. Bump!\nThis issue is really easy to solve, the main problem is:\nif we add a setName() method in Elastica_Filter_Abstract, it will be confusing, because there is also the _getName() method (in Elastica_Param).\nWhat should we do?\nI suggest we rename the _getName() method in Elastica_Param.\nMaybe _getResultName() ?\n. \"I agree that we should rename _getParam\"\n_getName() ?\nOk for _getBaseName()\n. updated!\n. Hmmm, it's not really a problem, but there is already a method getName() (public) in Elastica_Facet_Abstract...\nThese name collisions are really bothering...\n. \"limit\" and \"from\" are already in Elastica_Query\nI think we should remove the code related to \"limit\" in Elastica_Search (it calls Elastica_Query::setLimit())\n. In the json API, limit & offset are included in the \"general\" query object.\nhttp://www.elasticsearch.org/guide/reference/api/search/from-size.html\nIt makes sense to set them in Elastica_Query instead of Elastica_search\n. When you edit your comment, it sends me tons of emails and notifications on GitHub >_<\n. I agree.\nElastica_Query should disappear.\nMaybe we could also refactor it in order to make easier \"multi search\" implementation\n. The API is really low level,\nand it's not a good idea to show it in Elastica.\nI think each query should be encapsulated inside an object composed of an index and a type.\nIt is the same pattern used in Elastica_Document and Elastica_Search.\nMaybe we should refactor search:\nCreate an abstract search class (Elastica_SearchAbstract):\n- constructor receives a query (mandatory), an array of indices (optional), an array of types (optional) (no client)\n- getters and setters related to the constructor's parameters\n- no search() method\nKeep Elastica_Search with the same behavior:\n- extends Elastica_Search_Abstract\n- move variables and methods to Elastica_Search_Abstract\n- the constructor receives a client + parameters from the parent class\nAdd a new class Elastica_MultiSearch:\n- constructor receives a client and an array of Elastica_SearchAbstract\n- search method which construct the request with a \"bulk like\" syntax\nOf course, it's just a draft.\nBut I think we should reuse the same code to do normal search and multi search.\n. This page is really useful: https://github.com/ruflin/Elastica/pull/213/files\n. Hmmm sorry,\n@ throws annotation are missing.\nI'll add them tomorrow :P\n. Ooops sorry, i was really busy :/ (+ I'm moving)\n. updated\n. I used the extract() function, are you ok with that?\n. This function is insecure if you misuse it, but in this case, it's ok imo...\n. Ok, what should I do to conform to PSR-2?\n. Do you mean namespaces?\n. Kabooom https://github.com/fabpot/PHP-CS-Fixer :D\n. +1\nBut a strange idea came to me: what about a Doctrine ODM project for ElasticSearch? :P\n. @lavoiesl I heard some people use ES as a storage database, like MongoDB\n. Is it stable now?\nCan I replace all \"old style\" classes in my code?\n. Do you think we should create unit tests for unit tests? ><\n. done, the line is very long ><\n. Here: http://ruflin.github.com/Elastica/#section-query ?\nI think it's ok.\n@ruflin Elastica_Query class name is really confusing ^^\n. Done\n. Thank you! :smile: \n. has_parent/has_child query/filter are evil! :P\nhttp://www.elasticsearch.org/guide/reference/query-dsl/has-child-filter.html\nit loads everything in RAM...\n. I'm not sure, because UDP is only usable with the \"bulk insert API\"\n. Yes, i just created an issue: #188\nBut it's already in all tests files... :P\n. ",
    "amckinley": "Line 66 also uses the undefined $conn variable.\n. ",
    "ghost": "Sorry, rollback.I just realized that this was my misunderstanding of the \"replace alias flag\" used by the addAlias() function. I thought \"true\" translates to: \"Remove all aliases that are currently assigned to this index object before adding the new alias\" where in fact it means \"Search for ALL indices using this alias and remove this particular alias from them before adding the new alias to this index object\"\nSo I was constantly trying to remove an alias from an index that was already removed.\n. I succeeded to workaround this problem, it's not a problem with Elastica\nMaybe it's not the best solution but I don't have better ideas for now :)\nhttps://github.com/Exercise/FOQElasticaBundle/issues/74#issuecomment-4130410\nThanks! \n. Any update on this? I would like to implement something similiar to the image pierrre has posted too. Would there be a way to use size and from on the multisearch result?\n. I can try and take a look at it, but haven't really delved into Elastica's internal structures. As for size and form, I was hoping that we can limit the total items returned by all queries and not each query.\n. After a quick look at the API, it does not look like it exists :(\n. I would certainly find it useful :) As for others, I cannot say :P I think a more appropriate solution would be perhaps to open a feature request on elasticsearch and see if it can be implemented in the elasticsearch api first before any client side solution is used.\n. Feature requred filed with ES: https://github.com/elasticsearch/elasticsearch/issues/2162\n. For the missing Elastica_Query_Prefix, I have sent a pull request: 40cb974b44a0482556f3d7497482762580fa8097\n. Elastica_Query_Prefix has been dealt with in https://github.com/ruflin/Elastica/pull/239.\nDo you think there's any need to add things like has_child, nested, etc to Elastica_Query_Builder?\n. This is has_child: http://www.elasticsearch.org/guide/reference/query-dsl/has-child-query.html\n_type is always need (i think) and scope is optional.\nSo we could have the following:\npublic function has_child($type, $scope = NULL){\n}\nor\n```\npublic function has_child(){\n}\npublic function scope($scope){\n}\npublic function type($type){\n}\n```\nWhich do you think is better?\n. I haven't really used the Query_Builder much either, but from the existing API, it looks like the second method is more suitable. Because the using the Query_Builder feels like you are writing the JSON request, but just don't have fo deal with the brackets and what not.\nThe benefit of the first method is that there is little room for error. Type is always required for has_child, but with the second method, the developer could easily forget about it.\n. @ruflin Sorry, not at the moment, as I have not actually used the Query_Builder in my apps at all. I actually prefered using the pure Elastica OOP API. Shall I close this for now?\n. Added tests and link as requested. :)\n. Closing this as it is not possible if the results are from multiple indices. There is a possibility that items will have the same id, especially if we use ids from a MySQL database (1, 2, 3, 4...).\n. Possible. I assumed Elastica because the script was in the Elastica's test/bin directory and is super handy to start playing with Elastica. \n. Where can I get contents of this file Elastica\\Test\\IndexTest.php ?\nI've got some errors here https://travis-ci.org/ruflin/Elastica/jobs/9151706\nBut i don't know what exactly is an error about\n. Replica alias test seems to be broken\n. most of tests fail because of the error\n\"Elastica\\Exception\\Connection\\HttpException: Couldn't connect to host, ElasticSearch down?\"\nAny idea why elasticsearch is down or inaccessible?\n. Couldn't find a link for my build that is associated with latest push.\nAny idea where can i find it?\n. What should i do then?\n. Hi,\nHere is the exception:\nCRITICAL - Uncaught PHP Exception Elastica\\Exception\\Connection\\HttpException: \"Couldn't resolve host\" at /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php line 153 \nAnd here is the exception stack trace: \n[1] Elastica\\Exception\\Connection\\HttpException: Couldn't resolve host\n    at n/a\n        in /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php line 153\n```\nat Elastica\\Transport\\Http->exec(object(Request), array('connection' => array('config' => array(), 'host' => 'localhost', 'port' => '9200', 'enabled' => true)))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Request.php line 167\nat Elastica\\Request->send()\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Client.php line 587\nat Elastica\\Client->request('_bulk', 'PUT', '{\"index\":{\"_index\":\"minosnodeindex\",\"_type\":\"page_en\",\"_id\":\"nodetranslation_1\"}}\n```\n{\"node_id\":\"1\",\"node_translation_id\":\"1\",\"node_version_id\":\"1\",\"title\":\"Home\",\"lang\":\"en\",\"slug\":null,\"page_class\":\"SS\\CoreBundle\\Entity\\Pages\\HomePage\",\"created\":\"2015-06-19T08:32:19+0000\",\"updated\":\"2015-06-24T13:26:43+0000\",\"view_roles\":[\"ROLE_SUPER_ADMIN\",\"ROLE_ADMIN\",\"IS_AUTHENTICATED_ANONYMOUSLY\"],\"type\":\"Home\",\"contentanalyzer\":\"english\",\"content\":\"\",\"_boost\":1}\n', array())\n        in /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Bulk.php line 342\n```\nat Elastica\\Bulk->send()\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/ruflin/elastica/lib/Elastica/Client.php line 295\nat Elastica\\Client->addDocuments(array(object(Document)))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/SearchBundle/Provider/ElasticaProvider.php line 100\nat Kunstmaan\\SearchBundle\\Provider\\ElasticaProvider->addDocuments(array(object(Document)), '', '')\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/SearchBundle/Search/Search.php line 106\nat Kunstmaan\\SearchBundle\\Search\\Search->addDocuments(array(object(Document)))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/NodeSearchBundle/Configuration/NodePagesConfiguration.php line 226\nat Kunstmaan\\NodeSearchBundle\\Configuration\\NodePagesConfiguration->indexNodeTranslation(object(NodeTranslation), true)\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/NodeSearchBundle/EventListener/NodeIndexUpdateEventListener.php line 47\nat Kunstmaan\\NodeSearchBundle\\EventListener\\NodeIndexUpdateEventListener->index(object(NodeEvent))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/NodeSearchBundle/EventListener/NodeIndexUpdateEventListener.php line 38\nat Kunstmaan\\NodeSearchBundle\\EventListener\\NodeIndexUpdateEventListener->onPostPersist(object(NodeEvent), 'kunstmaan_node.postPersist', object(TraceableEventDispatcher))\n    in  line \nat call_user_func(array(object(NodeIndexUpdateEventListener), 'onPostPersist'), object(NodeEvent), 'kunstmaan_node.postPersist', object(TraceableEventDispatcher))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/Debug/WrappedListener.php line 61\nat Symfony\\Component\\EventDispatcher\\Debug\\WrappedListener->__invoke(object(NodeEvent), 'kunstmaan_node.postPersist', object(ContainerAwareEventDispatcher))\n    in  line \nat call_user_func(object(WrappedListener), object(NodeEvent), 'kunstmaan_node.postPersist', object(ContainerAwareEventDispatcher))\n    in /Users/harrywisemanwork/Sites/minos-cms/app/cache/dev/classes.php line 1790\nat Symfony\\Component\\EventDispatcher\\EventDispatcher->doDispatch(array(object(WrappedListener), object(WrappedListener)), 'kunstmaan_node.postPersist', object(NodeEvent))\n    in /Users/harrywisemanwork/Sites/minos-cms/app/cache/dev/classes.php line 1723\nat Symfony\\Component\\EventDispatcher\\EventDispatcher->dispatch('kunstmaan_node.postPersist', object(NodeEvent))\n    in /Users/harrywisemanwork/Sites/minos-cms/app/cache/dev/classes.php line 1884\nat Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher->dispatch('kunstmaan_node.postPersist', object(NodeEvent))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/Debug/TraceableEventDispatcher.php line 124\nat Symfony\\Component\\EventDispatcher\\Debug\\TraceableEventDispatcher->dispatch('kunstmaan_node.postPersist', object(NodeEvent))\n    in /Users/harrywisemanwork/Sites/minos-cms/vendor/kunstmaan/bundles-cms/src/Kunstmaan/NodeBundle/Controller/NodeAdminController.php line 646\nat Kunstmaan\\NodeBundle\\Controller\\NodeAdminController->editAction('1', 'public')\n    in  line \nat call_user_func_array(array(object(NodeAdminController), 'editAction'), array('1', 'public'))\n    in /Users/harrywisemanwork/Sites/minos-cms/app/bootstrap.php.cache line 3039\nat Symfony\\Component\\HttpKernel\\HttpKernel->handleRaw(object(Request), '1')\n    in /Users/harrywisemanwork/Sites/minos-cms/app/bootstrap.php.cache line 3001\nat Symfony\\Component\\HttpKernel\\HttpKernel->handle(object(Request), '1', true)\n    in /Users/harrywisemanwork/Sites/minos-cms/app/bootstrap.php.cache line 3150\nat Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel->handle(object(Request), '1', true)\n    in /Users/harrywisemanwork/Sites/minos-cms/app/bootstrap.php.cache line 2391\nat Symfony\\Component\\HttpKernel\\Kernel->handle(object(Request))\n    in /Users/harrywisemanwork/Sites/minos-cms/web/app.php line 40\n```\nthere has been no set up for anything on my part I am using it with the Kunstmann package which comes with this pre configured.\nThanks,\nHarry\n. I'm not sure I'm following you.\nIn setLike(...) I post a Document object on which I call setData(...) which, if I understand correctly, is supposed to populate the document. So in the end setLike(...) receives a non-empty document populated with my values.\nThanks for the help on this.\n. @ruflin No worries :)\nThere is the output of print_r($moreLikesThis->toArray()) right after I create it:\n```\nArray\n(\n    [more_like_this] => Array\n        (\n            [fields] => Array\n                (\n                    [0] => name.first\n                    [1] => tweet\n                )\n        [like] => Array\n            (\n                [_id] => \n                [_type] => myTypeName\n                [_index] => myIndexName\n            )\n\n        [min_term_freq] => 1\n        [min_doc_freq] => 1\n        [minimum_should_match] => 60\n    )\n\n)\n```\nSo the like section is generated since the _index and _type are here but the doc section inside of it is missing. In fact, in that case, the _id (which is empty here) should be removed and replaced by doc, since I am not comparing a document received from ES but provided directly as an input.\n. Going to try to add a \"fake\" id to see if it changes anything, but in the meantime I've updated my previous post.\nBasically: _id (which is empty here) should be removed and replaced by doc, since I am not comparing a document received from ES but provided directly as an input.\n. I'm afraid that was not it, here is the output now:\n```\nArray\n(\n    [more_like_this] => Array\n        (\n            [fields] => Array\n                (\n                    [0] => name.first\n                    [1] => tweet\n                )\n        [like] => Array\n            (\n                [_id] => fake\n                [_type] => myTypeName\n                [_index] => myIndexName\n            )\n\n        [min_term_freq] => 1\n        [min_doc_freq] => 1\n        [minimum_should_match] => 60\n    )\n\n)\n```\nSo the _id is populated but still no doc section. And I'm not sure it would work even if the doc section was here since ES would try to fetch a document from the index if _id is here.\nWe really should have 2 scenarios:\nMLT on a document already in the index: provide only _id in the like\nMLT on a document provided as an input but not indexed (my case): provide only doc in the like\n. By the way if I print_r() the Document object only here is what I get:\nArray\n(\n    [_id] => fake\n    [_type] => myTypeName\n    [_index] => myIndexName\n    [_source] => Array\n        (\n            [tweet] => Foo\n            [name] => Array\n                (\n                    [first] => Bar\n                    [last] => Test\n                )\n        )\n)\nI think that MLT on a document provided as an input is actually not implemented.\nMoreLikeThis::toArray() could look something like this:\n```\npublic function toArray()\n{\n    $array = parent::toArray();\nif (!empty($array['more_like_this']['like']['_id'])) {\n    $doc = $array['more_like_this']['like'];\n    $doc = array_intersect_key($doc, array('_index' => 1, '_type' => 1, '_id' => 1));\n    $array['more_like_this']['like'] = $doc;\n} elseif (!empty($array['more_like_this']['like']['_source'])) {\n    $doc = $array['more_like_this']['like'];\n    $doc['doc'] = $array['more_like_this']['like']['_source'];\n    unset($doc['_id']);\n    unset($doc['_source']);\n    $array['more_like_this']['like'] = $doc;\n}\n\nreturn $array;\n\n}\n```\nJust tested this locally, works great.\n. Hi @ruflin \n1051\n. 1. I've updated the Changelog.\n2. I guess you sure can add an integration test in Travis.\n. Sorry I misunderstood what you meant about these integration tests :)\nIt's pushed now.\n. Awesome :)\n. ",
    "wyzhcn": "Yes, it's worked. I copied from another project and forgot the default value section. It's supposed to be there. Sorry for that.\n. Oh. And it will throw a DocumentAlreadyExistsEngineException if the target doc exist. This exception it's not implemented.\n. When add document. I'll add some tests later.\n. Yes, it should be.\n. Oops..\n. ",
    "zapatista": "thanks for the quick responses\n. ",
    "babour": "Hi, \nI am having the same error when I try lo initialize elastica bundle using: \nphp app/console foq:elastica:populate\nAfter a thousand or so, I get:\n[Elastica_Exception_BulkResponse]\n  Error in one or more bulk request actions  \nShould I do the same? If so, where is the bulk request? in elasEtica source code? \nThanks\n. When I put this code, it still get connected to the localhost, but when I used to third part software to redirect the localhost and the port to another ip then it works perfectly.\n\nfoq_elastica:\n    clients:\n        default: { host: \"the ip of the server (other than localhost)\" port: \"the port configured on the server\" }\n    indexes:\n        website:\n            client: default\n            types:\n                post:\n                    mappings:\n                        title: { boost: 8 }\n                    doctrine:\n                        driver: orm\n                        model: ......\\Entity\\Post\n                        provider:\n                            batch_size: 10\n                        listener:\n                        finder:\n                user:\n                    mappings:\n                        username: { boost: 5 }\n                        firstName: { boost: 3 }\n                        lastName: { boost: 3 }\n                        top1: { boost: 2 }\n                        top2: { boost: 2 }\n                        top3: { boost: 2 }\n                    doctrine:\n                        driver: orm\n                        model: ......\\Entity\\User\n                        provider:\n                          batch_size: 10\n                        listener:\n                        finder:\n\n. ok thanks\n. ",
    "thujeevan": "Hi,\nI'm facing the same problem while i'm adding parent mapping\nI'm using \n1. FOQElastica bundle master,\n2. Elastica master branch\n3. elasticsearch 0.20.1\nphp Stack trace is\n``` php\n0 /dir/to/src/vendor/elastica/lib/Elastica/Client.php(212): Elastica_Client->bulk(Array)\n1  /dir/to/src/vendor/elastica/lib/Elastica/Index.php(114): Elastica_Client->addDocuments(Array)\n2 /dir/to/src/vendor/elastica/lib/Elastica/Type.php(115): Elastica_Index->addDocuments(Array)\n3  /dir/to/src/vendor/bundles/FOQ/ElasticaBundle/Persister/ObjectPersister.php(94): Elastica_Type->addDocuments(Array)\n4 /dir/to/src/vendor/bundles/FOQ/ElasticaBundle/Doctrine/AbstractProvider.php(45): FOQ\\ElasticaBundle\\Persister\\ObjectPersister->insertMany(Array)\n5 /dir/to/src/vendor/bundles/FOQ/ElasticaBundle/Command/PopulateCommand.php(105): FOQ\\ElasticaBundle\\Doctrine\\AbstractProvider->populate(Object(Closure))\n6 /dir/to/src/vendor/bundles/FOQ/ElasticaBundle/Command/PopulateCommand.php(79): FOQ\\ElasticaBundle\\Command\\PopulateCommand->populateIndex(Object(Symfony\\Component\\Console\\Output\\ConsoleOutput), 'doctors_index', true)\n```\njava stack trace is\nJAVA\n[2012-12-16 11:24:06,272][DEBUG][action.bulk              ] [Aardwolf] [doctors_index][2] failed to execute bulk item (index) index {[doctors_index][instituteServices][96], source[_na_]}\norg.elasticsearch.ElasticSearchParseException: Failed to derive xcontent from (offset=483, length=2): [99, 116, 111, 114, 115, 95, 105, 110, 100, 101, 120, 34, 44, 34, 95, 112, 97, 114, 101, 110, 116, 34, 58, 53, 55, 125, 125, 10, 91, 93, 10, 123, 34, 105, 110, 100, 101....\n@ruflin \nCan you help me on this?\n. Thanks @ruflin for your consideration,\nActually i'm using foqelastica bundle to configure indexes in the config.yml.\nI tried to configure the parent type mapping, the code is\nyaml\ninstituteServices: \n    mappings: \n        institution: { _parent: { type: \"institutions\" } }\n    persistence:\n        driver: orm\n        model: My\\Bundle\\entity\\class\n        provider:\nHere the model class is a joining table of two different entities. This may be the reason for the problem since the elasticsearch does not support many to many cardinality, but i'm not sure. The actual mapping i supposed to configure was\nyaml\n    mappings: \n        institution: { _parent: { type: \"institutions\" } }\n        staff: { _parent: { type: \"staffs\" } }\nCan you point out me a way to break out M:M other than denormalizing the tables?\n. ",
    "lsmith77": "@ruflin: travis-ci is looking to add other \"artifacts\". the first step will be adding xdebug at which point you can at least get basic code coverage reports with --coverage-text. in the long rung they want to make it possible to do other stuff too like code sniffer etc. oh and the guys behind travis are rails guys .. but liip got a special introduction by one of them today and i have been \"alpha\" testing PHP support since about 10 days.\n. yeah .. for a long time Shay was discouraging this .. but now a days he openly talks about using ES as a data server and supports it as a valid use case.\n. this is just what i got from Shay when he was speaking at Berlin Buzzwords conference in June.\n. did you check PSR-1 and PSR-2?\n. https://github.com/php-fig/fig-standards/blob/master/bylaws/002-psr-naming-conventions.md\n. you should also set it in the composer.json\n. we are looking to get @leahaense some more budget to work on this and another issue in the FOQElasticaBundle itself.\n. the point is that the serializer can already take care of serialization to json.\n. see https://github.com/ruflin/Elastica/pull/373\n. hopefully golden now ..\n. it might make sense indeed. that being said .. i am not sure if an interface is the right approach or if it wouldn't make more sense to allow the relevant methods to be mapped dynamically via some config array.\n. one advantage of the mapping approach is that it would work better with different environments. f.e. i might want to use a different index for testing, staging and production.\n. maybe we should just have an interface to determine the id and independently look into creating another class that can receive such configuration and is then able to dynamically determine the appropriate index/type.\n. i definitely have a use case for the ability to determine the id from an object as i am using the serializer. for the rest .. yeah i dont have a use case per se. i find it a bit annoying to have to think about what index/type i need to send a document to. that being said .. since we have one index per language, we would need this to be more dynamic than a static map would be able to handle.\nso maybe for now i will just strip it down to getElasticaId ?\n. well adding things to an interface is also a BC break .. but easier to deal with :)\n. done\n. well i only have a standard practice for the inverse which is @api to mark things as being part of the public stable API. I will add an  EXPERIMENTAL comment.\n. did another update\n. Ooops .. i think i forgot the changelog entry again. can you just add that for me?\n. can you give me a hint where I would need to add this?\n. nevermind .. its already supported.\n. should support https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\n. Monolog supports PSR-3 but the point is that Elastica would simply depend on the PSR-3 interfaces and then users can plug in any PSR-3 compatible logger.\n. failures are due to the ES version mismatch. at any rate .. could you merge this quickly?\n. yes.\n. hmm I guess we should then update FOSElasticaBundle accordingly\n/cc @jmikola\n. doesn't seem like it happened https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/composer.json#L19\n. @Tobion can you do a PR for FOSElasticaBundle to update Elastica?\n. +1\n. we changed this since in the request class it checks if its an array or not already, so we can support json encoded data here too ..\n. we didnt want to add a type hint here, since we were not sure how PHP 5.2 would react to a type hint with namespaced code. the \"benefit\" is that its sort of \"duck typeing\" .. ie. it would also work with other serializers (but only if they also have a setGroups() method, which f.e the Symfony2 Serializer does not have).\n. correction .. the Symfony2 serializer does not support serialization groups, the JMS Serializer does.\nin case you have not yet used the JMS Serializer. basically it allows you to add mapping definitions for your models. these mapping definitions specify if properties should be included when serialized and with what data type etc. every mapping can optionally have a list of groups associated. then when you serialize you can specify from which groups do you want to include mappings.\n. some more infos here http://jmsyst.com/libs/serializer/master/cookbook/exclusion_strategies\n. another approach is to not even do it in the library or not inside this class. ie. we could use inheritance to add this feature into a subclass that can either be shipped with Elastica or with FOQElasticaBundle if you think this is a too Symfony2 eco-system specific feature.\n. its set with setSerializer()\n. there is already a ZF2 module for https://github.com/schmittjoh/serializer and the Symfony2 serializer is also available as a standalone component (however it does not support groups)\n. this is not really feasible, since i will likely need different serialization groups per type and i also do not want to have to create a different serializer instance per type. furthermore i dont really want to have to pass in the groups in the addObject() call either, since this is something i would want to configure along with my mappings:\nhttps://github.com/liip-forks/FOQElasticaBundle/compare/master...serializer_support\n. correct ..\nthe only thing we could do as i noted is to add a duck typing check into addObject() or calling a \"configureSerializer()\" or something that would be implemented via inheritance, but imho that would also not be great as it would limit other possibilities for extending. so another possibility would be to instead of passing in a list of groups, one would inject a callable that return a properly configured serializer instance whenever its needed.\n. actually i am starting to like the idea of a callable more and more ..\n1) it ensures that we do not need to do another check to see if groups are even supported, ie. we only need to require that there is a serialize() method\n2) it enables even more at runtime configuration that some serializers might support (f.e. the JMS serializer also supports other exclusion strategies such as version etc)\n. actually there isnt even any reason to call serialize() at all .. just call the callable and it should take care of serialization and then we dont even have any duck typing. i will check with @leahaense next week.\n. comment also needs to be updated\n. comment also needs to be updated\n. or should this be 0.20.5.0-dev?\n. updated\n. Elastica is following ElasticSearch versioning with an additional version number\n. they intend to show with this that they are aiming to soon follow with a 1.0:\nhttp://www.elasticsearch.org/2013/03/20/0-90-0-rc1-released/\n. sure\n. btw .. i am not so happy with the method name .. but we cannot call it getId or even getDocumentId or something like that could be problematic.\n. i prefer getElasticaDocumentId\n. yeah .. i was wondering the same and couldnt come up with something better.\n. the availability of this feature would imply that it might make sense to go with the mapping approach after all. ie. we would add support for defining this path as part of the index definition and then the document wouldnt need an explicitly defined id.\n. that being said .. once we have support for this we should indeed remove this exception. however there might still be use cases where one would want to use this interface but those might be obscure enough to not warrant support from this bundle.\n. could you work on a PR for adding the mapping support and removing the exception?\n. @ruflin i guess its then your call if you prefer to remove the interface again.\n. i have created https://github.com/ruflin/Elastica/issues/383\n. missing a space .. if (\n. same here ..\n. new line before {\n. ",
    "plaflamme": "I'd suggest accepting the curl options as a parameter when constructing the client. CURL has literally tens (if not a hundred) of options. You don't want to pick and choose the ones you want. Simply allow passing-through curl opts.\n. It's probably a common use-case to proxy Elasticsearch HTTP, either for load-balancing or authorization concerns.\nI think your approach is sensible (url and path). Both would cover this use-case.\n. Yep, it works. It requires that the url end with a '/' though. Maybe you could make it friendlier by detecting whether the provided url ends with a '/' and append one when it doesn't.\n. Well, I very much doubt that someone would mount ES under something else than a 'directory'. It would result in URLs like so:\nhttp://eshost/es_search\nhttp://eshost/esmy_index/type/2\nhttp://eshost/es_cluster/state\netc.\nIf there's someone out there that does this, then he or she is alone (doing this is simply looking for trouble). I don't see much benefit in supporting a single person's needs. I'd still vote for adding it automatically to help with the 99% use case.\nMy 2 cents...\n. sure, but doing so will simply push the problem down to your users. Every calling code will have to test the url parameter before passing it in to your library... same thing, different place.\n. It's true that the URL may be configured by the actual user of Elastica, but it might not. For example, the Drupal module for using Elasticsearch with SearchAPI has a form where the Drupal end-user types the URL. In this case, the Drupal module would have to validate the URL... no big deal, really...\n. ",
    "maetl": "Cool, can see exactly how it works from the diff. Thanks!\n. ",
    "daFish": "That makes sense. I changed the methods name.\n. @ruflin Yes, it adds a bit of complexity but this added complexity is nicely hidden as you explained. Really powerful and clean.\n. @ruflin I'm not involved in the development so I can't give you an update on the situation. Let's here what @munkie has to say. :)\n. There is a 'p' missing in support.\n. Missing whitespace after if.\n. Missing whitespace after if.\n. Missing whitespace after if.\n. Duplicate empty line.\n. ",
    "ro-ka": "I forgot. Preview is here: http://ro-ka.github.com/Elastica/\n. Great! Thanks!\nThe Searching and so on will follow.\n. Will clean up the readme.\nBtw: It failed on travis. You know why?\n. Don't know how it got lost. In my commit it's not deleted. It wasn't even there.\nAdded it again, see pull request.\n. Yay, now it's passing again. :)\n. Will use http_build_query. Pull request in a minute.\nTried a second refresh in line 240 but still get the error. Also tried optimize and flush... Another idea?\n. Tried that, too. :) Added a sleep after adding the docs and after getting the doc. Also tried to establish a second connection. Still getting the Exception.\n. I logged the requests. While testing it on the console I recognized that elasticsearch gives an empty result (but no Exception) when there are no '' around the uri. So I added these to the logging. Then everything worked fine on the console.\nCould this be the reason for the error in the curl request? Don't know how, because it's added via curl_setopt. But maybe...\n. No, it did return a success, but it was empty (no results / hits). After adding the '' around the uri it returned two results as I expected. So the problem seems to be with the curling in Elasica and not in elasticsearch. As this is the first Elastica function that uses http get params it could be the problem, right?\n. When I var_dump(curl_getinfo($conn)); after the curl_exec($conn); I get the following:\narray\n  'url' => string 'http://ds1:9200/test_mlt/mlt/1/_mlt?min_term_freq=1&min_doc_freq=1' (length=66)\n  'content_type' => string 'application/json; charset=UTF-8' (length=31)\n  'http_code' => int 500\n  'header_size' => int 106\n  'request_size' => int 186\n  'filetime' => int -1\n  'ssl_verify_result' => int 0\n  'redirect_count' => int 0\n  'total_time' => float 0.001836\n  'namelookup_time' => float 1.5E-5\n  'connect_time' => float 1.5E-5\n  'pretransfer_time' => float 1.6E-5\n  'size_upload' => float 167\n  'size_download' => float 398\n  'speed_download' => float 216775\n  'speed_upload' => float 90958\n  'download_content_length' => float 398\n  'upload_content_length' => float 20\n  'starttransfer_time' => float 0.00182\n  'redirect_time' => float 0\n  'certinfo' => \n    array\n      empty\nNote that ds1 is my local alias, that one works. The interesting fact is that this request returns an error 500. I don't understand why...\n. Exactly. With curl I receive similar docs as I expected.\n. When you comment out the addDocument's (lines 232 - 236) in the TypeTest and the documents are already in the index, it's working (returning 2 hits). But adding documents and doing a moreLikeThis-API call result in the exception.\nFor getting it to work with the logging output I modified Elastica_Log in line 71 and 72 (adding the ' around the uri).\n. I copied all commands at once (including new lines) and when pasted in bash they get executed directly, one after another. Could be a time based problem, but I have no clue how to find out. The problem is just with the test as in (most) real life applications you wouldn't do a moreLikeThis request directly after indexing. At least not in the same action. And in the case of doing a moreLikeThis on an existing index it works.\nOne solution could be (didn't try that) to create the test index in another test and then just query it in the moreLikeThisTest.\n. Marked the test incomplete. So we should investigate the failing tests further. Travis.ci is also failing atm.\n. Thanks!\n. That's great! Will update the API. :)\n. I saw that, checked your commits as I wanted to know how you fixed the problem.  :)\nBtw, I recognized in the mlt API that it should be possible to pass filter, facets and so on in the request body. Have to test that and will send a pull request in case. \n. Preview: http://ro-ka.github.com/Elastica/api/index.html\n. Changed to lowercase, ready to pull.  :)\n. De nada.  :)\n. When these addDocuments are commented out and the index with these docs already exists the test works fine. Only problem is querying directly after adding the docs.\n. ",
    "ksaveras": "srry, commented on commit page, rewriting to this page:\nLooks great,\nshould be possible to use percolator on special type also, \n$percolator = new Elastica_Percolator($type);\nand in percolator class path will be:\n$path = $this->_index->getName() . '/'. $this->_type->getName() .'/_percolate';\nwhat do You think?\nAlso in Elastica_Type class I would like to see or have ability to use percolate:\n```\npublic function addDocument(Elastica_Document $doc) {\n...\n    if ($doc->getPercolate()) {\n      $query['percolate'] = $doc->getPercolate();\n    }\nif (count($query) > 0) {\n\n...\n}\n```\nElastica_Document should have percolate setting:\nhttp://www.elasticsearch.org/blog/2011/02/08/percolator.html when using percolate on index/bulk\n```\npublic function setPercolate($percolate) {\n    $this->_percolate = $percolate;\n    return $this;\n}\npublic function getPercolate() {\n    return $this->_percolate;\n}\n```\n. I already use this code. I needed to do percolation while adding a document so I added code, later I thought that it could be good if this feature would be in Elastica master code, so I registered feature request. Now we have it - excellent news.\n. I use for auto tagging tags are registered as percolators and when I add a document - I get which tags document text matches.\n. ",
    "nickdunn": "Hooray! Thanks for confirming.\n. I think this is what I am after.\nhttp://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping.html\nIs this in Elastica but I have missed it?\n. I have found I have to call getMapping to verify if the index exists. Indeed when I want to check multiple types I make a call to _mapping on the index itself and cache the result so that it makes only one request to check all types. A Elastica_Index::getMapping() method would be cool, or even Elastica_Type::exists() which performs the check itself (even if the exists does not exist in the ES for a type...)\n. I was just about to log the same bug! I cam proxying ES with a PHP script (for my own authentication layer) so I inspect the request, check the method, and pass it on to ES. I only read in php://input for PUT/POST requests, therefore a GET search doesn't work. Fingers crossed you guys are able to figure out a solution! For now I've spiked my Elastica to always send a POST.\n. ",
    "hpatoio": "@nickdunn how did you solved this ? Do you have an example to share  ?\n. ",
    "Akhavi": "I did not see that :) I have a version of Elastica from September/October. Your version is a lot better/cleaner.\nDisregard this pull request\n. Nice!\nI have updated the latest version today so I will forward any changes if \nthey are relevant.\nThe current headache is MLT, but I think you are working on that already.\n\n-----Original Message-----\nFrom: Nicolas Ruflin [mailto:reply+i-2756316-\na19263c30f8617e82d8f3d504db04a43b51c8c7d-126174@reply.github.com]\nSent: 07 January 2012 18:52\nTo: Eden Akhavi\nSubject: Re: [Elastica] Logging version of Transport/HTTP.php -\nFile.php (#124)\nAh ok, a lot of things happened since september. I also plan to\n\"enhance\" the logging so that Log adapters can be added. For example if\nsomeone wants to write the log to a database or similar.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/124#issuecomment-3396689\n. You already have this, so cancel the pull request.\n\nRegards\nEden\n\n-----Original Message-----\nFrom: Nicolas Ruflin [mailto:reply+i-2756316-\na19263c30f8617e82d8f3d504db04a43b51c8c7d-126174@reply.github.com]\nSent: 20 February 2012 17:49\nTo: Eden Akhavi\nSubject: Re: [Elastica] Logging version of Transport/HTTP.php -\nFile.php (#124)\nWhat is the current state of this pull request? As far as I can see,\nmost of it is already in our code?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/124#issuecomment-4055963\n. \n",
    "nippo": "Hi,\nI wrote some tests.\nThanks\n. ",
    "yellowandy": "Updated but you think a test is really necessary?\n. ",
    "nz": "Beautiful! As to the docs, it may well be helpful to add a specific example for that case. If nothing else, I think it tends to be easier for most people to just pass in an unparsed URL.\nAlso if you want to try out the ES alpha on Heroku, I can set that up. Just send me a message with your account email there :)\n. > Perhaps you can also link it in the Wiki pages.\nHappy to! I don't want to presume too much on the structure, so I added a link under \"More\". Feel free to move that around where you feel it's appropriate.\n. ",
    "scragg0x": "Code updated please pull.\n. What do you think about the output buffer in place of the return transfer in my latest commit?  Maybe updating Curl would fix the return transfer but not many people have the privs to do that anyway.  My system is fully updated with RH5 repos running 5.3.10  I have curl 7.15.5.  I haven't tested the memory leak with newer versions of curl.  It's a pain to update without yum or apt-get.\n. Correct, my last commit is the same as the originial except that the returntransfer option is removed and an output buffer is added.\n. ",
    "gmatthew": "I will add the test and submit\n. ",
    "comulinux": "One of the commits for the search objects is an error, sorry. The class is declared two times (copy&paste problem :-/)\n. Hi Rufflin,\nI have not tested this. Something like this for parse the options param?\n. That's the purpose, that if you pass a config param and has no\nimplementation it will fail... but may be is better that the function\nfinishes always without errors and ignoring these type of parameters.\nI'm not sure what's the better way, but for the configuration or important\nparameters I prefer an error that nothing :)\n2012/3/24 Nicolas Ruflin <\nreply@reply.github.com\n\nYes, this goes exactly in the right direction. I would probably go with\nmultiple if clauses instead of foreach but both is ok. Perhaps foreach has\nthe advantage to throw an exception if a param is set that does not exist?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/144#issuecomment-4673188\n. Ok Ruflin, I will update the code in few days, but this will be the first\ntime I work with PHPUnit so may be it take me some time (or not, I don't\nknow :-) )\n\n2012/3/25 Nicolas Ruflin <\nreply@reply.github.com\n\nOk, I think you are right. We should go with the foreach option but also\nadd a default switch which throws an exception? Can you update the code and\nalso add some tests? We have to make sure, it is also backward compatible.\nWe can remove this part at a later stage.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/pull/144#issuecomment-4680931\n. Hi Ruflin,\n I have some problems to make the test :-)\n There is a new function in the SearchTest object called 'testArrayConfigSearch' to test the new search method. The code works, and the queries are send without problems to elasticsearch, but the only way I know to be sure that the query had routing is to see the raw query in the log, and I can't find the way to check this in the test function, how must I face this problem? In the create index I get the same problem.\n Some help please :-)\n. Hi Ruflin,\n Could you check the tests methods? I'm not sure if are correct, despite it works fine when an error  is forced in the code :-)\n. Ok. I would try to make another test that fail for the two classes. This is my first aproach to phpunit, so be patient :-)\nI thought a lot about how to know if routing is working or not, and I'm not sure if It's possible to affirm that routing is doing correctly, the only thing that I can affirm is that the log with the raw query has the correct query with routing parameter :-/\n. Hi!\n Here is a new version of the search->search and index->create methods with the search_type param added.\n And new version of tests... @ruflin I'm waiting your coments, I really only added the this->fail and a new exception if any parameter comes without value :-)\n. Yes, I had include the \"search_type\", and I put it on the test function... I think that if the tests are ok, the original modification it's completed.\nThank you for all...\n. Sure!\nYou are making a great job ;-)\n. By the way, I don't know what the hell is SearchTest doing here as a modified file... \n. I didn't see the setFields method in queryString, sorry... but I have the same problem: I can't get only some fields with a QueryString, because the setFields method is redefined:\n$qstring = new Elastica_Query_QueryString($query);\n$qstring->setDefaultOperator('AND'); <== If I use a Query object, I can't set this.\n$qstring->setFields(array('field1','field2')); <== here I need general fields method, and it is redefined in Query_QueryString\n$result = $ElasticaSearch->search($qstring);\n\nHow can i make something similar?\n. Maybe we must do nothing if no value comes...\n. shouldn't be possible != impossible XD\nI had thought the same, but the parameters comes to the function, so... I only put an exception to let the user know  that the problem is that value. I know what  must come, but not what will come :-)\nanyway, yes, I know that this has no much sense\n. I thought about to make a test function only for fill the array and use the @depend clause for this function, because it's used in other function and I think that this will be c&p again and again... but I'm not sure that's neccessary.\nWhat do you think, in general, about the test? something improvable? I was reading the phpunit manual and I didn't find much more to improve the test :-/\n. +1 \n I'm starting to use phpunit massively, I like it ;-)\n. Elasticsearch documentation says: \"The filter can be defined using Query DSL\" so  I think that this function must be prepared to take a Elastica_Query as a filter, but I don't know how to obtain a text with the query :-/\n. May be I'm building the query incorrectly (I have tried in several ways) because when I made this the result was:\ncurl -XPOST http://localhost:9200/_aliases -d '{\"actions\":[{\"add\":{\"index\":\"test\",\"alias\":\"test-aliase\",\"index_routing\":\"1\",\"search_routing\":\"1,2\",\"filter\":{}}}]}'\nIf you see the test, my idea was to build the same query that use the test with a string but with a Elastica_Query object. \nNow I'm trying with:\n$query = new Elastica_Query_Term();\n$query->setTerm('user', 'comulinux');\nAnd I make:\n$add['filter'] = $value->toArray();\nWith the result commented, any idea?\n. It is a query used as a filter, I'm not sure if it is the same that a filter, or if it has more sense. The documentation says: \"The filter can be defined using Query DSL\" so, I think that we must build the filter in the same way that we build a query. Honestly, I'm not sure...\n. At the moment, it doesn't work :-)\nI must find some time to think about how to implement this, but the idea is to build a string with the array returned by \"toArray\", and I'm not sure if we must let the backward compatibility as now, implement another function or the two things, so I must spend some time thinking how to make this.\nIf you have any idea about the better way to make this... :-)\n. Actually when I send an array  (query->toArray) and I pass it like you can see in the code, the result after build the query is something like this: \"filter\":{}}} \nSo, I think that I need a string because it's the only way I found to make it work. I have tried with term queries and string queries, and no way :-/\n. Sure, you can see the example in the test class. I create the query with Elastica_Query::create($queryString); and it don't work like is expected, well, it don't work like I expect :) May be I'm writting incorrectly the query, I'm not sure, but the test sends a query with an empty filter field.\n. Solved... well, \"solved\" :-)\nThe problem was the comparation is_a($query, 'Elastica_Client'). If I build a Elastica_Query_Term, then the compartion will return false (yes, obiously) I possible to ask for \"any elastica query object\"?\n. That's the easy way. I prefer a \"is_a($value, 'Elastica_Query_XXX)\" but I don't know how to ask about all the Elastica_Query classes.\nBy the way, it seems to work :)\n. ",
    "keanyc": "Done.\n. ",
    "nasko": "Okay, it looks like I've relied solely on the tests and so I've missed the fact that I could create an Elastica_Query object and feed it an Elastica_Query_Bool instance, then set the min_score, from, two, etc. properties on the Elastica_Query instance.\nI'm closing this issue now. I'm still to figure why I'm getting different scores on a per record basis as compared to the results from the same query, executed against the ElasticSearch node's REST interface directly, but that's probablya completely different thing. :)\n. ",
    "darklow": "Sorry wrong repo, please delete this issue :/\n. ",
    "mente": "Latest commit adds all what we've discussed. Check, please.\nIf you have any notes - don't hesitate to ask.\n. I think it's premature optimization. Better refactor it out, when it's actually needed.\n. Sorry, forgot that Elastica should be backward-compatible.\nI suggest Elastica_Client::updateDocument($id, Elastica_Script $script), where script is Elastica_Script::__construct($script, array $params = array(), $name = null)\nWhat you think about it?\n. Yeah, for Elastica_Client it would be Elastica_Client::updateDocument($index, $type, $id, Elastica_Script $script). \nI don't like passing full Elastica_Document object, as it doesn't involve all properties of Elastica_Document.\n$script in Elastica_Script constructor is string, e.g. ctx._source.type = \"comment\". Additionally there can be lang, like described here\n. Script can be used for custom score order. That's the only different place I know. Will prepare a new version according to this discussion\n. Hi, sorry for delay. Implemented all what we have discussed and added lang parameters (however not tested).\nLooking forward for your comments\n. First it was array $options = null, that's why there were checks. Later changed to array $options = array(), but didn't update method. Check current pls.\n. Updated\n. I think it's good to keep script name in Elastica_Script, but parameter should be optional. Don't remember: is script name is mandatory for script field?\n. Finally! Was going to implement it several months ago, but didn't have time. Thanks @rayward :)\nIs this API stable or a subject to change in next weeks?\n. ",
    "dietervds": "I can give it a shot but not sure on the eta, might be a week or more (away for most of the week)\n. Hi Ruflin,\nit seems I won't be able to do this after all. I was moved right after the last post to a different part of my project and let it 'in the freezer' for too long, and am completely 'out of Elastica'. Can't seem to bring up the time to do it, even though it's a small effort.\nJust figured it's far more decent to let you know then to leave it do die :-)\nIf you want you can close the PR.\nCheers!\n. Thanks and again, apologies. Cheers!\n. ",
    "tole42": "i think addField is ok.  for example:\n\"range\" : {\n    \"age\" : { \n        \"from\" : 10, \n        \"to\" : 20, \n    },\n    \"salary\" : { \n        \"from\" : 1000, \n        \"to\" : 2000, \n    }\n}\n. I think so too :)\n. or is it:\n\"range\" : {\n    \"age\" : { \n        \"from\" : 10, \n        \"to\" : 20, \n    }\n},\n\"range\" : {\n    \"salary\" : { \n        \"from\" : 1000, \n        \"to\" : 2000, \n    }\n}\n. it is setParam!\n. or setRange ?\n. multiple ranges likes this?: \n$this->_oQuery->addMust(new Elastica_Query_Range(\n'birthday', array('from' => 10, 'to' => 20 )));\n$this->_oQuery->addMust(new Elastica_Query_Range(\n'salary, array('from' => 3000, 'to' => 4000)));\n=> 2x setRange\n. \"range\" : {\n    \"age\" : { \n        \"from\" : 10, \n        \"to\" : 20, \n    },\n    \"salary\" : { \n        \"from\" : 1000, \n        \"to\" : 2000, \n    }\n}\nvs\n```\n\"range\" : {\n    \"age\" : { \n        \"from\" : 10, \n        \"to\" : 20, \n    }\n},\n\"range\" : {\n    \"salary\" : { \n        \"from\" : 1000, \n        \"to\" : 2000, \n    } }\n```\n. Only the second one is  correct\n. adding parameters to __contruct() would break backward compatibility.. I am rethinking my pull request at the moment\n. I'll try.. :)\nAm 31.08.2012 22:42 schrieb \"Nicolas Ruflin\" notifications@github.com:\n\nGood to know. Can you do a pull request with this with a small unit test?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/issues/244#issuecomment-8204441.\n. sorry wrong encoding.. :(\nHere is a better one:\nhttps://github.com/tole42/Elastica/commit/b3ff9564a70fd7ba59503e849f983aa397e23945\n. \n",
    "code-rider": "@tole42 \n it is very simple to do this with query->create(); like this ...\n$client = new Elastica_Client();\n$query = new Elastica_Query();\n$query = $query->create(\"age:[10 TO 20] AND salry:[1000 TO 2000]\");\n$search = new  Elastica_Search($client);\n$search->addIndex('index_name');//define index name \n$search->addType('index_typet');//define type from defined index\n$response = $search->search($query);\n$totalMatch =  $response->getTotalHits();\n$results = $response->getResults();\nforeach($results as $result)\n{\n    foreach($result->getdata() as $field => $val)\n        {\n            if(is_array($val))\n            {\n                foreach($val as $value)\n                {\n                    echo \"\".$field.\": \".$value.\"\";\n                }\n            }\n            echo \"\".$field.\": \".$val.\"\"; \n        }\n    }\n. christeredvartsen:\ni think you have a bug in your code thats whay it happend. you have extra coma in your code.\ntry this.\n<?php\n$client = new Elastica_Client(array(\n    'servers' => array(\n        array('host' => 'localhost', 'port' => 9200),\n        array('host' => 'localhost', 'port' => 9201),\n        array('host' => 'localhost', 'port' => 9202)\n    )\n));\n. this is elasticsearch-0.19.8\n. hello guyz i have update version to 0.19.9 now error is gone but now query not found something  against this query\n```\n$multiMatch = new Elastica_Query_MultiMatch();\n$multiMatch = $multiMatch->setQuery('honda');\n$multiMatch = $multiMatch->setFields(array('make', 'title'));\n$query = new Elastica_Query();    \n$query = $query->setQuery($multiMatch);\n$response = $type->search($query);\n$results = $response->getResults();\necho $response->getTotalHits();  \nis = 0    but i have more then 3500 documents against this query \nwhy query not working now ?\nif i simple search with  Elastica_Query(); i got correct records \n```\n. thanx  ruflin and adhenawer  i got it now its working thanx alot i also watching this segment ragular i'll do as my possible\n. C:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\Client.php on line 12 \nyou are runing this file right but now you givin us the path of Client.php like this \nC:\\wamp\\www\\Symfony\\vendor\\elastica\\lib\\Elastica\\client.php I have d\u00e9claration of the class Elastica_client in client.php.\nClient.php is not at the right position Client.php must be place here \nC:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\Elastica\\Client.php\n. no whole Elastica client must place with the file who you are runing\n. see if this is your Elastica client directory \nC:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\Elastica\nthe your index file or file you are runing must place here \nC:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\yourfile.php\n. my other java APIs running well like solr.\nELS was running good but now i dont know what happend with it .\n. ",
    "Gi7mo": "jep, done ;-)\n. ",
    "njam": "I'm not sure. Maybe ->getBlocks()->setMetadata()? :)\nIn the Elasticsearch keys (\"index.blocks.metadata\", \"index.blocks.read\" etc.) \"blocks\" is probably plural because it groups multiple block-settings? (But then why is it \"index\" and not \"indices\"?)\nI named the getters+setters (\"getBlockMetadata()\", \"getBlockRead()\") with singular \"block\" since they only define one block-setting, i.e. they are not related to the other block-settings.\nLooking at Elasticsearch's code it seems to be handled the same way there:\nBoolean updateWriteBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_WRITE, null);\nIf you want to mirror the Elasticsearch API though, it might be better naming it plural?\nWhat do you think?\n. Ok sounds good. I'm currently in holidays on the Peloponnes and will adjust the pull request when I come back in 2 weeks. :)\n. ",
    "christeredvartsen": "@code-rider That has nothing to do with it. Including a trailing comma in an array is supported by PHP, and it does not generate a different array if you exclude it.\nphp\n<?php\nvar_dump(array(1,2) === array(1,2,)); // bool(true)\n. I have just presented some ways to search using Elastica over at our blog: http://tech.vg.no/2012/07/03/using-elastica-to-query-elasticsearch/\n@ruflin It would be nice if you could provide some feedback if there are other ways to search, or if there are more efficient solutions. Feel free to use some of the examples in the upcoming docs as well.\n. It does not always work to pass the query object directly to Elastica_Query. Check out the following gist as an example:\nhttps://gist.github.com/4f35cfb437cb0d94e614\nAs you can see the generated JSON data is incorrect when passing in the $query instance directly to Elastica_Query, but correct when using toArray().\nAs mentioned it's not always like this.\n. I tried that as well, and it gives the same result as passing the query directly to the constructor. I have updated the gist with that example as well.\n. The issue is here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L80 as it wraps the query in a \"query\" parameter, where as my search instance already has that parameter defined. I figured out the way to get around this was to trigger the setRawQuery() method by passing in the query as an array.\n. Aha, so the query builder is not really meant to take a complete JSON query as a string, as I do in the example? I found it really convenient as I use cURL a lot to test stuff, and then simply paste the query into the PHP code.\n. Yes, that makes sense. It's not going against the RESTful nature of Elasticsearch either to use POST for this.\nUsing GET can result in some bad situations regarding caching as well. Varnish for instance would cache the first GET request (GET /index/type/_search '{ some search }'), disregarding the request body. The next search (GET /index/type/_search '{ some other search }') would actually return the cached version of the first request, which is not at all what we want.\nI can send you a PR with the change in a day or two if you want.\n. Do we actually need a configuration option? I would say that sending GET with a request body should be avoided at all costs. How about just set it based on the request the client is doing? If it has a request body, use POST, it not, use GET.\nIf you want to enable this behaviour via a configuration option I suggest something like:\n- (boolean) dynamicHttpMethod\n- (boolean) enablePost\n. @nickdunn php://input works with GET as well BTW. Anyways, I will look at a fix for this issue during the weekend. :)\n. I haven't seen any examples over at elasticsearch specifically using GET with a request body. cURL automatically uses POST when you specify -d, unless you also specify -XGET. But enough about that.\nYes, sounds better to use an array for the transport part of the client options, to more easily inject transport-specific options. I can simply send you a PR once I have made some changes, and we can move the discussion to the PR instead, if that is OK with you?\n. @kimchy Yes, that is what we aim to do. Using GET with a request body have given us (read: the company I work for) some issues with other software between the client and the elasticsearch cluster (mainly Varnish and BIG-IP).\n. I am sorry but I have not had any time on my hands to play around with this. I can try to find some time in the coming week.\n. Sounds good. :)\n. Sorry about taking so long with this, but I have not yet had any time to look at a possible solution. I might have an hour or two to start working on this tomorrow. Whenever I have something to present I'll issue a PR, and we can move the discussion there.\n. I could help you with a test case testing the functionality already in the query builder if you want.\nI'm not sure I understood what you meant with the last command about the Bool query. Was that meant for someone else?\n. Haha, if you look at the blog post I referred to in another issue (#174), you will see Teddy (the one asking in google groups) asking me the same question, which resulted in this PR. :)\nI'll get started with the test case in a couple of days.\n. phpdoc blocks updated.\n. Well, it's not that easy since the transport can't be instantiated outside of the client, and then injected. Perhaps implement support for something like:\n``` php\n$transport = new Elastica\\Transport\\Http();\n$transport->setParam('postWithRequestBody', true);\n$client = new Elastica\\Client(array(\n    'transport' => $transport,\n));\n```\nas well as supporting the old 'transport' => 'Http' way of doing it? Then of course the client would have to inject the connection instance to the transport somewhere, perhaps via a ->setConnection() on the transport instance. Just an idea.\n. Do you want me to expand the PR a bit with a way to inject the connection? I could change the getTransportObject method in the Connection class to use some sort of factory that works in whatever is specified in the transport option in the client instead of doing the if (is_array( ... )) else if ( ... ) stuff itself.\nDoes that sound like a possible solution?\n. Fine by me if you want the other feature in a second PR. Makes sense.\nI can edit the changes.txt file once the factory is done since it's regarding the same feature. I'll try to get this done today.\n. Would you like me to add support for config/params to the transport classes as well by the way?\n. I see that other classes that use params, you have simply extended the Param class. I can do that to begin with, and send a PR so we can get a discussion going.\n. I just committed the first implementation of the factory. It supports the two ways you can specify a transport through the client, and it also supports specifying an already instantiated transport. The Connection class can now simply pass whatever is passed as transport to the client to this factory method.\nI also removed some properties from the AbstractTransport class as these are not used in any of the implemented transports.\n. I just noticed some of the tests are failing. Hold off merging this until I can fix it.\n. I have fixed the issue and will push as soon as I get to the office.\n. By the way, the $params parameter to the exec() methods in the transport implementations are not currently in use. Do you intend to use this for anything or can it simply be removed?\n. Yes, I saw that, but it's simply put right back in the response, so I can't really see how it's useful for anything. I'll leave the $params alone for now then. :)\n. Sure. The test suite has no failing tests so unless you have some other tests you want to run it's ready to be merged.\n. Not sure if I agree if that makes it any easier to use. It makes it harder to have a typo in the parameter name, sure, but is that really an issue?\n. ",
    "tobias-hinz-yoc": "excuse me but how to use it? \n. thanks, found it out, here is how i use it:\n```\n            //filtered search example \n$client = new Elastica\\Client ( array (\n        'host' => $sHost,\n        'port' => $iPort\n) );\n\n\n// Create the search object and inject the client\n$oSearch = new Elastica\\Search ( $client );\n\n// generate query instance and set search operator\n$oQueryString = new Elastica\\Query\\QueryString ( ( string ) $term );\n$oQueryString->setDefaultOperator ( 'OR' );\n$oQueryString->setFields ($aQueryFields);\n$oQueryString->setAnalyzer(\"snowball\");\n\n// filter object\n$oBoolFilter = new Elastica\\Filter\\Bool ();\n// set price range\n$oFilterRange = new Elastica\\Filter\\NumericRange();\n$oFilterRange->addField(\"t_data_price\", array('from' => '0', 'to' => '10'));\n$oBoolFilter->addMust( $oFilterRange);\n\n// apply filters and set query string\n$oQuery = new Elastica\\Query ();\n\n//set search string\n$oQuery->setQuery ( $oQueryString );\n\n// Configure and execute the search\n$resultSet = $oSearch->addIndex ($sDataIndexName)\n->addType ( $sDataTypeName )->search ( $oQuery );\n\n        error_log(json_encode($oQuery->getParams()));\n\n```\n. ",
    "kimchy": "@ruffin nope, there is no problem with it, possibly its a URL escaping issue?\n. @ruflin what does the test do specifically?\n. In general, for GETting data, even with body in teh request, I prefer to use http GET. There spec does not say that its not allowed (and personally, I think it makes tons of sense). But, because I know there are problems when using GET with body in some situations, then any GET request with a body can also be used with POST. Maybe it makes sense to allow to configure Elastica if it should use GET or POST in this cases?\n. Index exists API on a read only index should return a proper status code, is there a chance for curl recreation of this and open an issue?\n. ",
    "codekipple": "Ok cool, i've taken that out. Sorry about my commit times saying 9 days ago. I forgot to re-sync my virtual machines date/time. \n. oh yeah, actually i agree, i should have realized this.\n. on second thoughts maybe the 'limit' and 'from' should stay. After Elastica_Search is called in then sets up Elastica_Query based on the passed $query.\nIf from and limit were taken out you would have to create your own Elastica_Query before passing it to Elastic_Search.\n\n$boolQuery = Elastica_Query::create($boolQuery);\n$boolQuery->setLimit($per_page);\n$boolQuery->setFrom($pagination->offset());\n$results = $elasticaClient->getIndex('photographer')->search($boolQuery);\n\nMaybe it's neater to allow Elastic_Search to do that part for you?\n\n$results = $elasticaClient->getIndex('photographer')->search($boolQuery, array( 'limit'=>$per_page, 'from'=>$pagination->offset() ));\n\n. Ok yes ill close this issue. I was getting a bit confused. I'm new to using Elastica. I'm using the Bool Query and I was trying to do a search straight from that.\n\n$boolQuery = new Elastica_Query_Bool();\n$term = new Elastica_Query_Term();\n$term->setParam('country', strtolower($country));\n$boolQuery->addMust($term);\n\n$elasticaClient->getIndex('photographer')->search($boolQuery);\n\nbut i was running in to various problems like 'from' not being available. But now I realize that i definitely need to convert the Bool Query into a standard query before using the search.\n\n$query = Elastica_Query::create($boolQuery);\n$results = $elasticaClient->getIndex('photographer')->search($query);\n\nThis then gives me access to all the standard Query methods like 'from', 'limit' and 'setFilter' which I'm now using to do a geo_distance filter on.\n\n$query->setLimit($per_page);\n$query->setFrom($pagination->offset());\n$query->setFilter($filter);\n\nSo in summary, yeah i agree the search does not need the 'from' parameter and probably not the limit either.\nThanks.\n. apologies (even though tis apology no doubt creates another one, ooof!)\n. ",
    "scottmac": "Updated to Elastica_Script.\n. Yeah we're using it at Facebook. I'll see if I can come up with a simple unit test here.\n. It's part of HipHop for PHP. We do an analysis of our entire code base prior to committing something.\n. ",
    "rodrigocarlospires": "Hi, is there a estimate when this feature (msearch) will be available on Elastica. Thanks\n. ",
    "munkie": "My point is that Elastica_Search should be the object representing search request. Search request consists of two things: Query and Options. Query represents request body and Options represent request query parameters (GET parameters) such as search_type, preference and routing. Considering this i don't like Elastica_Search implementing Elastica_Searchable interface, because it is not searchable, it is search itself (salt is salty), so search() and count() methods should not have any params passed in, this params should be set before performing search request. And what i don't like most is passing limit as option, it a query param so it should be set in query.\nSo moving to Elastica_Multi_Search, it represents __msearch_ request. Multi Search request body consists of a bunch or search requests formatted special way, and we already have all info needed in Elastica_Search for header and body generation, so it is obvious that Elastica_Multi_Search just holds an array of Elastica_Search. And as it performs search request is should have parameterless search() method (count() method makes no sense in this situation).\nBut thinking of backward compatibility it is not possible to move away from Elastica_Search implementing Searchable interface, so i tried to make search() and count() methods as flexible as possible. So if query param is not passed it uses already set query or if no query was set before then default match_all query.\nAlso i'd like to suggest adding createSearch($query, $options) method to Type and Index, which are already creating search object, it will make creation of search objects for multi search more handy.\n. In docs it is called Request Body - http://www.elasticsearch.org/guide/reference/api/search/request-body.html, but it would sound rather strange - Elastic_Request_Body or not ?\n. Maybe it is time to remove methods marked deprecated ?\n. Maybe it is possible to include Thrift library files with composer from thrift svn for example. But Elasticsearch thrift classes are generated by thrift --gen php elasticsearch.thrift comand, so they cannot be included from external sources\n. Sorry for not responding so long. I've made an investigation and find out that most projects using thrift such as phpcassa, Pandra are including its code into the project. So i think it better to leave thrift code in the project. Another option is to move thrift php library and elasticsearch generated classes into separate project. I don't think generating thrift classes should be done by developer after cloning Elastica, because it requires thrift-compiler to be installed and it is rather complicated task.\nAlso i propose moving from Elastica_Exception_Client to Elastica_Exception_Transport_*, because client exception has curl related logic, see commits below.\n. Extend Transport exception from Client exception ?\n. I've removed thrift folder, moved generated thrift classes to standalone repo munkie/elasticsearch-thrift-php, and added it as require in composer.json.\nAlso refactored ConnectionException so base class only takes request and response and error message in constructor. And moved Http error message generating to HttpException.\n. Composer have two ways of adding optional dependencies:\n- require-dev section, which tells that these dependencies will be installed only with --dev flag. I guess this is suitable for some development dependencies like phpunit and etc.\n- suggest section, it will tell that it is suggested to install extra package, but user should manually add it it to require section in his composer.json\nI guess second option fits our needs. I could add Elasticsearch/RestClient class exists check in Transport/Thrift class, telling to add munkie/elasticsearch-thrift-php dependency to composer.json. The question is how we are going to test transport thrift implementation if needed libraries wont be installed by default?\nI also going to add more tests so don't be in a hurry to merge this PR to master.\n. My library does not have tests it is just set of classes generated from elasticasearch.thrift file.\nNo there is no such thing as require-tests.\nOther option is to move thrift transport to standalone repository.\nBut this will require changing Connection->getTransportObject() so it could create transport class using full class name, not only final part.\n. Oh, i found workaround to emulate require-tests\nWe can add \"composer require munkie/elasticsearch-thrift-php:1.4.\" command to travis.yml to add dependency on a fly\n. So i'll do following:\n- Add munkie/elasticsearch-thrift-php library to suggest section of composer.json\n- Add Elasticsearch class exists check in Thrift Transport\n- Mark thrift tests skipped if Elasticsearch class exists check fails\n- Add \"composer require munkie/elasticsearch-thrift-php:1.4.\" to travis config to enable thrift transport on fly in tests\n. Running composer require munkie/elasticsearch-thrift-php:1.4.* will modify composer.json adding package to require section. Are you sure this should be added to build.xml to setup target? \n. What do you use ant build for? Some kind of Jenkins CI server? Or run it locally to ensure everything is fine?\nThe problem with running composer require .. is that it modifies composer.json and you can occasionally commit it to git.\n. I've added munkie/elasticsearch-thrift-php dependency as require-dev it seems this is the only way it can be done in composer. I've checked other libraries composer.json and they put such dependencies in require-dev section and suggest also. Suggest section is just information that will be displayed after package install do give hint of packages that can be installed but not required. required-dev is intended for development and tests environment.\n. There were some travis related issues, i restarted last build and it has passed.\n. I was already investigating that problem when i saw you have merged PR.\n. I've added thrift.port line to travis elasticsearch config, will see if that fixes the issue and i will make another pull request with fix\n. I guess problem is that 9500 port becomes occupied somehow and thrift transport takes another vacant port for example 9501. And its not possible detect 9500 port with curl as it is done in run_elasticsearch.sh because it is not http interface.\n. I've merge master into my Elastic repo and travis build passed - https://travis-ci.org/munkie/Elastica/builds/4300626.\nSo it's a random issue\n. I've created an issue for this problem #315 \n. @ruflin what do you think about this kind of multi-search implementation ?\n. Great news. Thanks!\n. You are welcome)\n. I agree with @linusnorton, it should work the same way as Elastica_Filter_Range.\n. I can rename those methods to addRanges() and addRange()\n. Also I was thinking about moving lat/lon/geohash funcionality to standalone GeoPoint class, because geo points are met in different geo queries and filters and also in Elastic_Document::addGeoPoint() which lacks of geohash support.\nThis GeoPoint class could handle validation of data and also provide different presentations: latlon as string, array and props. Even conversion from geohash to latlon and vice versa.\n. @ruflin I have refactored the code, so setRanges() really sets ranges, not adds them.\n. I have made more changes in updateDocument method as we discussed in #294 and i was going to add more tests for these method. Is it better to open another pull request ?\n. I propose refactoring updateDocument method signature as you said, so it should look like updateDocument(Elastica_Document $document, array $options = array()) because document is already holding data about id, type and index. And rename old updateDocument method to updateDocumentByScript. But it will break BC.\nAlso upsert field was added in 0.20, it should be added as Elastica_Script param i guess.\n. But in that case you should pay attention that Elastica_Document should contain only field to be updated, not whole document.\n. Another option is to add availability to pass script to Elastica_Document, then we can leave only one updateDocument method with signature as mentioned below, and form request body regarding whether script is set or not.\nIf script is set, then body should look like {'script': ..., 'params': ...} and upsert section will be filled by set fields values.\nIf script is not set in document, then request body will look like {'doc': ... }\n. Yes it is radical, but maybe it is time to upgrade major version and break some BCs ? ))\n. So what do you think about setting script to document and refactoring updateDocument signature to (Elastic_Document $document, array $options) ?\n. Upsert will be filled with fields from document, if there will be no added fields in document, than upsert will not be added to request\n. You should create new document for update operation and it should hold only those values that should be changed\n. Code for updating document with upsert and script should look like this:\n``` php\n$document = new Elastica_Document();\n$document->setId(1);\n$document->add('counter', 1);\n$script = new Elastica_Script('ctx._source.counter += count', array('count' => 4));\n$document->setScript($script);\n$type->updateDocument($document);\n```\nand it will perform same http request as in docs:\nsh\ncurl -XPOST 'localhost:9200/test/type1/1/_update' -d '{\n    \"script\" : \"ctx._source.counter += count\",\n    \"params\" : {\n        \"count\" : 4\n    },\n    \"upsert\" : {\n        \"counter\" : 1\n    }\n}'\n. Exactly!)\n. And i think updateDocument() method should be deleted from Request and Index classes. There is no addDocument method in that classes for example and this operation can be performed only in context of type.\n. I meant Client not Request\n. Maybe leave it as it is, but remove Elastica_Script type hinting and pass $data directly to request ?\n. I mean not to rename Client::updateDocument method into updateRawDocument, check out my implementation\n. I have commited this changes to #288 pull request\n. I'm wondering what is the point in removing array hinting in setData method?\nWhat kind of data serializer should return?\nIs there any docs how to use this kind of functionality?\n. So it up to serializer to generate valid json string ? I was wondering because in tests mock serializer returns array not json string.\n. I'm asking because i have pull request #312 and it introduces get/set/has/remove methods in Document, allowing to manipulate document data. And it relies on $data property is array. And i'm thinking how it should handle situation when $_data is json string.\n. There are some issues with class naming in docblocks. My PhpStorm shows every docblock red or yellow because it can't find classes mentioned in @param, @return and other tags. All autocompletion is broken now.\nClass should be named relative to namespace, i.e.\n_Document instead of Elastica\\Document\nor absolutely\n\\Elastica\\Document instead of Elastica\\Document\n. I've created an issue #301. It is better to move conversation there\n. @lavoiesl Class names in docblock should be same as you use in code. You can't write something like\nphp\nnamespace Elastica;\n$document = new Elastica\\Document();\nthis code will produce fatal error class Elastica\\Elastica\\Document not found\n. @ruflin what to do think about class naming - absolute or relative ?\n. You think there is a point in renaming those classes to AndBool, OrBool and NotBool ?\n. I've tried PhpStorm autocomplete - it suggests BoolOr class when you type Or.\n. Yes, every query should be implemented as it own class.\nMainly i created this issue not to forget to implemented missing queries.\n. Maybe it's better to create issue with all missing filters and queries?\n. I looked int terms facet builder java code - https://github.com/elasticsearch/elasticsearch/blob/v0.20.2/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetBuilder.java#L246 and noticed that if script param is present, then builder also check params and lang params.\nSo i think it better to use Elastica/Script functionality in this case. Something like that:\n``` php\n    public function setScript($script)\n    {\n        $script = Script::create($script);\n        foreach ($script->toArray() as $param => $value) {\n            $this->setParam($param, $value);\n        }\n    return $this;\n}\n\n```\nAnd it would be great if this method was covered with unit tests\n. Great! Thanks!\n. I've implemented getLastRequest() because there was no way to get Request object after Client->request() was done. \nThere are several use cases for this method.\n- Something went wrong on request, so you've caught exception and you want to know what caused that error, you can look at the exception and error message from elasticsearch, but you also want to know what was wrong in your request. Or maybe there was no exception but request returned empty result while you were expecting it to return some items. This kind of situation can happen when you develop your application and on production stage. So you log such things and analyze them later.\n- Another option is unit testing, for example you are testing some request index/test/_search with some query, you can use Null transport and just make an assertion that request was valid by comparing request->toString() output with expected request representation without sending request to elasticsearch.\nI guess there is problem with logging implementation in Elastica now, because i can't use my own logger. I would suggest using PSR-3 standard  and using Monolog logging library as an option or your own implementation following psr interface\nAbout request representation format returned by toString() it can look like raw http response:\n```\nGET /index/test/_search?fields=_id\nHost: localhost:9200\n{\"query\":{\"match_all\":{}}}:\n```\nor just json_encoded string with all request params\njson\n{\"host\":\"localhost\",\"port\":9200,\"path\":\"/index/test/_search\",\"query\":{\"fields\":\"_id\"},\"data\":{\"query\":{\"match_all\":{}}}}\n. I've added toArray() method which return array with request params and connection params.\ntoString now returns json encoded reult of toArray()\nit looks like this\njson\n{\"path\":\"test\",\"method\":\"POST\",\"data\":{\"key\":\"value\"},\"query\":{\"no\":\"params\"},\"connection\":{\"enabled\":true,\"config\":[],\"host\":\"localhost\",\"port\":9200}}\n. Ok, i've added Util::convertRequestToCurlCommand() method\nUpdated changes.txt\nAnd Request is set into ResponseException now\n. Ok, here is implementation plan:\n- Add get(), set(), has(), delete() methods.\n- Make add() method deprecated\nisset() and has() methods will have a little bit different behavior, has will return true if such field exists in data even if it is null, while isset will return false if field exists but equals null.\nAnd what do you think about populating fields of updated document? Maybe it should be default behavior, without calling $document->setFieldsSource() which is not obvious. Or there should be config option like populateOnUpdate: true to switch on this kind of behavior?\n. Update API would not work without __source_, here is a quote from docs:\n\nNote, this operation still means full reindex of the document, it just removes some network roundtrips and reduces chances of version conflicts between the get and the index. The source field need to be enabled for this feature to work.\n. _DocumentSourceMissingException will be thrown by elasticsearch\n. So it does not matter if fields=_source is set or not, update request will fail anyway. \n. - Refactored Document::getOptions() method as we discussed.\n- Added $options param to Type::deleteById() method. ElasticSearch API Delete method can handle some params like parent, routing, version and etc. so now they are passed on request\n- Added NotFoundException throw if document to be deleted does not exist in type (same as in getDocument())\n- Added Type::deleteDocument() method which calls deleteById() method and passes document id and options.\n- document version is updated on addDocument, addDocuments and updateDocument requests\n- If document data is json string, then set() method will throw InvalidException, has() method will always return false, and get/remove methods will throw InvalidException.\n\nAlso i think to make auto populate functionality optional on document level by adding\nenableAutoPopulate() / disableAutoPopulate() methods.\nAnd application wide by setting config param documentAutoPopulate: true / false\nPlease don't merge this PR because i have some more thing to discus.\n. - Added setAutoPopulate(), getAutoPopulate() and isAutoPopulate() methods to Document for autoPopulation state manipulation and retrieval\n- By default autoPopulate is switched off, so you should enable it for every document you want to be populated or if you want autoPopulate behavior to be switched on system wide then add document.autoPopulate: true options to config:\nphp\n$config = array(\n'document' => array('autoPopulate' => true)\n);\n$client = new Client($config);\n- Also added getConfigValue($key, $default) method to Client for getting config values without thinking about exceptions, if key is not found then default value will be returned. Key can be array, so document.autoPopulate config value can be accessed by $client->getConfigValue(array('document', 'autoPopulate'), false) for example.\nBy the way i don't get why getConfig method throws exception on not found config entries, we have no idea what config where passed to Client, and the only way is to check them by getting config whole config array and checking them manually.\nThis pull request is ready for merging.\n. What i don't like about client exception is that there is no way to detect what caused this error, connection exceptions are not stored anywhere and not even passed to connection callback\n. I suggest adding Connection exceptions to Response object\n- addConnectionException(ConnectionException $e)\n- getConnectionExceptions() returns ConnectionException array\n- hasConnectionException() returns true if one or more exception occurred\n. Actually there are 3 cases\n- All connections failed on request - ClientException was thrown - we have no idea what caused the error\n- There are 3 connections for example, 2 have failed on request, but 3rd was successful, so ok response was returned, but we know nothing about what caused this 2 connections to fail. \n- We had a request like 1st case, which disabled all our connections. We caught that client exception and made another request  which threw ClientException one more time, but at this time it was because of no enabled connections, not because of connection exception.\n. It is a whitespace troll ))\n. Looks like @WhiteSpace-Strippers account is suspended\n. Well, i agree with @shulcsm that inner objects of query should not be converted to array on set. In this case we should change not only Query class but also Filter/BoolAnd Query/Bool and many more classes behavior and it is a lot work to do.\nAnd what should happen on clone operation, should copy be shallow or deep ?\n. You can use Query\\Simple for this kind of raw queries\n. @ruflin i've merged master\n. It seems that there are some incompatibility between thrift plugin and 0.20.5 ES\n. Yes, of course\n. I've updated changes.txt, fixed Document create const, so PR can be merged.\n. Looks good, but there are a lot of tests failing - https://travis-ci.org/ruflin/Elastica/jobs/4958962 because of missing iterator methods, so they should be fixed before this PR could be merged\n. Because somehow travis-ci does not add build status info to pull requests from repos that do not have account on travis-ci.org.\n. Now i see that you have to $resultSet->getIterator()->current() to get first result, instead of $resultSet->current() or just current($resultSet) as it was before. So i would not say that it does not change functionality.\n. @ruflin Was checking pending pull requests list, and found this one)\n. Please, add tests on this fix\n. @ruflin I checked git annotation for getConnection() method and it was your code =)\nI agree with adding break to avoid unnecessary foreach loops.\nI think there got to be more complex solution, something like ConnectionPoolStrategy and different classes for different policies of connection choice.\nCases may be different:\n- loop through all connection until request passes\n- use random connection\n- use round robin and store somewhere weight of every connection statically (for example config file) or dynamicly (in memcache or redis)\n. I would recommend to remove shuffle code part for now\n. I've open an issue regarding connection choice policy #356\n. Done!\n. Thanks for your report, I will fix it when I ll have time\n. Sorry, pushed the wrong button.\n@Crell could you post notice message? and tell what exact version of Elastica you are using.\n. I'll take a look\n. There was issue that Type::count() did not use query, now it is fixed. @kwonder thanks for your report.\n. Tests are passing, so i guess .. Yes! )\n. OK, i ll take a look. Also i suggest creating release-0.90.x branch for working with ES 0.90.x\n. I've tested on travis with ES version 0.90.0.PR1 - https://travis-ci.org/munkie/Elastica/builds/5709304\nAnd only two failures occurred:\n1) Elastica\\Test\\IndexTest::testMapping\nFailed asserting that 'yes' matches expected true.\n/home/travis/build/munkie/Elastica/test/lib/Elastica/Test/IndexTest.php:35\n2) Elastica\\Test\\IndexTest::testIndexGetMapping\nFailed asserting that 'yes' matches expected true.\n/home/travis/build/munkie/Elastica/test/lib/Elastica/Test/IndexTest.php:427\nBut they all regard to mapping response format change.\nSo i guess socket error occurred because of disabled socket extension, i can add additional check for that case.\n. I took a closer look at the error message, and there is just missing slash in socket functions invocations. It is strange that tests were not failing because of notice.\n. @ruflin  What PHP version was used to run those PHPUnit tests ?\n. Well, i can add this check, but it will be hard to test, because there is no possibility to disable php extensions on fly. \n. Ok\nOn 11 Apr, 2013 1:34 PM, \"Nicolas Ruflin\" notifications@github.com wrote:\n\nI will check on my side if it works :-)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/issues/355#issuecomment-16224955\n.\n. Cases may be different:\n- loop through all connection until request passes\n- use random connection\n- use round robin and store somewhere weight of every connection statically (for example config file) or dynamicly (in memcache or redis)\n\nI propose ConnectionPoolStrategy skeleton to look like:\ninterface  ConnectionPoolStrategy\n{\n    public function setConnections(array $connections);\n    public function getConnection();\n    public function onFailedConnection(Connection $connection, Exception $e);\n    public function onSuccesfulConnection(Connection $connection);\n}\n. It should an interface, and strategy classes should implement it.\nClient should not implement this interface.\nI also propose to create ConnectionPool class to store all connections and to move connection creation logic away from client to it.\nI could start a pull request with some code so i was easier to discuss\n. @ruflin I't was so long ago .. )) You can close this PR if there is no need for connection poll strategy anymore\n. Nice addition. I would suggest implement methods getResultSet($key) and hasResultSet($key).\nBut i'm not sure there should be set and unset methods cause ResultSet is a read-only object, there should be no way to change it state after it was instantiated.\n. Thrift uses $GLOBALS to store the path to the thrift folder\n. There is no point in passing query to script filter, what kind of query it can be? Only script is accepted. I left setQuery() method just for BC, but i'm not sure if anyone uses it. I'll fix the @param in docblock.\n. I'll refactor it to if/else condition.\n. Got it)\n. No, protected property $_params is only used for storing script params, lang and script are stored in private properties $_lang and $_script;\nSo if no script params were set, what the point of adding them to output.\n. Null is not a reserved keyword, here is full list http://php.net/manual/en/reserved.keywords.php.\n. It seems i've forgotten to add (string) type casting here. Problem with empty() is that id can be 0.\n. Idea is that you could debug the request rather fast without looking into log or debuging code.\nSomething like that:\n``` php\n$type->search($query);\n$request = $type->getIndex()->getClient()->getLastRequest();\nvar_dump((string) $request);\n``\n. This info should not depend on transport use, i chose curl-like syntax because it was already implemented for logging message formatting. It is just a hint of how request looks like, mainly data part.\n. Tests with frame thrift protocol enabled were not working. Now i found out that to make them work framed protocol  should be enabled in elasticsearch by adding \"thrift.frame: 15mb\" line in config. So i'm going to remove framed protocol tests, because if framed protocol is enabled in elasticsearch, then default thrift protocol (buffered) tests won't pass. So it is not possible to test both thrift transports on one elasticsearch instance and i dont think it is really needed.\n. Elasticsearch generates string ids like that: 0pNEdcMKTOeUfoAt95rDaA. But i agree hasId should be used here\n. Mmm object are always passed by reference in PHP 5+\n. There can be two options:\n1. Document just holds options and its values, and it is up to method performing request to create params array like it was in _addDocument_ method. Then _addDocuments_ method should create metadata not just take all params set in document by calling _getParams()_\n2. Document can provide params for each type of request index/bulk/update and should implement _getIndexOption()_ _getBulkOptions()_ and _getUpdateOptions()_.\n. I've got 3rd option )\nAll Document options are stored in __params_ (now _optype_ and _percolate_ are stored in protected properties for some reason and _setTtl()_ sets it to __data_ not __params_)\ngetOptions method looks likegetOptions(array $params, $withUnderscore)` - $params holds names of options to be returned, if option is not set than it is not returned. $withUnderscore tells to prefix names with _\nExample:\n``` php\n$document = new Document();\n$document->setId(1);\n$document->setIndex('index');\n$document->setType('type');\n$document->setPercolate('*');\n$options = $document->getOptions(array('id', 'index', 'type', 'routing'));\n// $options = array('id' => 1, 'index' => 'index', 'type' => 'type');\n// percolate was not in params list and routing is not set\n```\nSo request can ask document for options he needs without and document know nothing about request\n. Yes, empty getOptions() will return all options.\nAlso i suggest removing $options arg from Type::updateDocument() signature, because all options can be set through document, and this $options will be passed to Client::updateDocument method\n. Refresh param should be passed as query part of request not data. See: http://www.elasticsearch.org/guide/reference/api/admin-indices-flush.html\n. I don't like this part, because new client exception is created here. We could just add connection exception to client exception, but there will be no chance to change client exception message, cause it can be set only through constructor. One of the ideas came to me is not to throw Client exception in getConnection() method and just return null, and throw ClientException in request method if getConnection returned null.\nAnd maybe there should be different client exception messages when there is were no active connections on start of the request and when where were active connection on start of request but they all failed.\n. I took this name from PDO::__construct() - http://www.php.net/manual/en/pdo.construct.php. If you have ideas of better naming it would be great\n. Maybe uri ?\n. ",
    "sevein": "Awesome. Thanks!\n. Yay! Thanks.\n. I'd just ignore it.\n. I took care of that one too!\n. Ha! Ok, I get it :).\nUpdate in changes.txt now also included in 9f8d9d0.\n. ",
    "matthewpeach": "This is a great change, but you may want to recommend PHP 5.3.3 specifically due to this bug which wasn't fixed until then:\nhttps://bugs.php.net/bug.php?id=52160&edit=3\nWith earlier versions (5.3.2 here) and with E_STRICT enabled, the class Elastica\\Search will give an error:\nPHP Strict Standards:  Redefining already defined constructor for class Elastica\\Search\n. ",
    "topwebstudio": "Okay thanks Nicolas! I've opened a question at FOQElastica, hope the guys could help.\nhttps://github.com/Exercise/FOQElasticaBundle/issues/135\n. ",
    "Sydney-o9": "I have a similar error:\nNotice: Undefined index: hits in /Applications/MAMP/htdocs/Symfony2.1/vendor/ruflin/Elastica/lib/Elastica/ResultSet.php line 36 \n. Sure, no worries @ruflin. The problem is solved now. I wasn't listening to the right port at all which triggered this error (no hits were found + wrong port).\nThe following line did the trick when I wasn't listening to the right port. \n$ this-> _totalHits = isset ($ result ['hits'] ['total'])? $ result ['hits'] ['total']: 0;  \nI then realised that 0 hits were found, checked the config and realised the port was wrong.\nTherefore, this error message is triggered when the wrong port is set. With the right port, everything works fine. Even with 0 hits, no error message is displayed.\nI use this command to check on which port I can work on:\nsudo lsof -i -P | grep -i \"listen\"\nI think this is a pretty handy tool to debug something like Elastica config. Maybe, this would just be worth implementing in the doc for newbies like me, just a simple line saying \"you can check wich port is activated with this command\". :-)\nAwesome work @ruflin , this is an amazing tool. Well Done!\nMany thanks.\n=============================PS===================\nThe code is the one from the doc:\n/* var Elastica_Type /\n$userType = $this->container->get('foq_elastica.index.website.user');\n/* var Elastica_ResultSet /\n$resultSet = $userType->search('bob');\n. ",
    "mrcmorales": "Hello @ruflin ,\nI have the port correct, I can create the connection, but I obtain the same error.\nNotice: Undefined index: hits in /work/LoPati/vendor/ruflin/Elastica/lib/Elastica/ResultSet.php line 36\nprotected function _init(Elastica_Response $response) {\n    $this->_response = $response;\n    $result = $response->getData();\n    $this->_totalHits = $result['hits']['total'];\n    if (isset($result['hits']['hits'])) {\n        foreach ($result['hits']['hits'] as $hit) {\nWhat Can I do?\nThanks\nRegards\n. Yes I'm using Elastica with Symfony2:\nMy config.yml:\nfoq_elastica:\n    clients:\n        default: { host: localhost, port: 80 }\n    indexes:\n        website:\n            client: default\n            types:\n                pagines:\n                    mappings:\n                        titol: { boost: 5 }\n                        descripcio: { boost: 3 }\n                    persistence:\n                        driver: orm # orm, mongodb, propel are available\n                        model: LoPati\\BlogBundle\\Entity\\Pagina\n                        provider:\n                        listener:\n                        finder:     \nThis is the code:\n```\n    $finder =$this->container->get('foq_elastica.finder.website.pagines');\n/** var array of Acme\\UserBundle\\Entity\\User */\n$pagines = $finder->find('XYZ');\n\n```\nThanks\nRegards\n. Yes,\nI had executed this command:\nphp app/console foq:elastica:populate\nAnd i have data in pagina type\nThanks\nRegards\n. ",
    "informatic-revolution": "Hi,\nI got the same problem, it has nothing to do with the FOQElasticaBundle, but it might not be obvious for people who  use for the first time ElasticSearch (like me) that you need to install it. Maybe it would be a good idea to add/specify it in the documentation.\nI answered a similar post of @mrcmorales here:\nhttps://github.com/Exercise/FOQElasticaBundle/issues/177\nRegards\n. @ruflin my bad, i only read the github readme.\n. Thank you for your answer.\nThis should be called right after the delete action ?\nIn the documentation, they say:\nThe refresh parameter can be set to true in order to refresh the relevant shard after the delete operation has occurred and make it searchable. Setting it to true should be done after careful thought and verification that this does not cause a heavy load on the system (and slows down indexing).\nIsn't this solution gonna slow down my system for a lot of entries ?\n. The website is new and we have for the moment only a few customers, so there isn't any performance issue for the moment. But we do except to reach a million of entries.\nThe delete command should not be used that often as it is used to delete products and articles.\nWe are currently using the FOQElasticaBundle within symfony2, and they throw an exception when they find an Inconsistency between elasticsearch and the db. \n. I really appreciate your, help, Thank you. I'll follow your advise. \n. ",
    "jmikola": "@ruflin: Sorry for the delayed response. I've been offline due to the hurricane near NYC this week. Good to know @informatic-revolution followed up :)\n. @ruflin: I just popped online; thanks for fielding this even thought it was completely unrelated. There was another issue opened earlier this morning (presumably after this) on the FOQElasticaBundle for the same issue, and @shevaton7 also sent me an email.\n@shevaton7: Please make an effort to be more professional in your communications (multiple exclamation points and some of your above comments come across very poorly); likewise, I suggest you avoid spamming all available avenues in an attempt to receive an answer in the future.\n. The one failed test build looks unrelated (OOM errors): https://travis-ci.org/ruflin/Elastica/jobs/7743509\n. Is connections used the same way as servers was in the past? If so, it'd be a good idea to preemptively upgrade FOSElasticaBundle to start using connections.\n. > Can you update the changes.txt file about the renaming of the function?\nDone.\n. @lsmith77: Correct. I haven't touched the bundle at all in the last two weeks (at least).\n. Just saw this thread. I was going to suggest having an adapter class or something (type-hinting against a specific implementation would certainly be undesirable), but the callback sounds like a great idea. You can simply document it's \"interface\" here and let the calling code prepare it with the appropriate serializer implementation.\n. @ruflin: Are you adopting a new versioning scheme, or is ES itself jumping to 0.90?\n. I just didn't realize ES went from 0.20 to 0.90: https://github.com/elasticsearch/elasticsearch/tags\n. I believe PSR-4 addresses this:\n\nPHP libraries SHOULD CONSIDER using Liip/SearchBundle as their target directory.\n\nCross-reference: http://www.rfc-editor.org/rfc/rfc6919.txt\n. ",
    "rizkyabdilah": "just happened to me,\nElastica_Query_String is a wrong class name\nthe correct class name is Elastica_Query_QueryString\n@ruflin how can I help you fix the documentation? I can't find documentation repo\nElastica-io?\n. Ok, thanks,\n. ",
    "slowpokewarrior": "https://groups.google.com/forum/?fromgroups#!topic/elastica-php-client/F3G7Csyzwl8\n. ",
    "foufos": "Thx for the reply\nyes i forked it and i dont seem to be able to commit in my own repo.\nyes it is working and i have tested it with data that were before not returned.\nIt's funny that it took me less than 30 mins to implement the change and more than 2 hours to (unsuccessfully) push :(\nI asked you because i thought it was maybe a permission issue on your master repo ( which i know it doesn't make sence, but was worth a try)\nIt might be an issue with my eclipse egit plugin dont know, but i'm pretty sure i have pushed something in another repo a year or so ago\nAnyway i'll have a better look through the weekend i guess.\n. @ruflin Hello, I managed to do it 5 months ago and did a pull request and I think you have already integrated it.\n. ",
    "travisbot": "This pull request passes (merged 6daec6aa into 64553d75).\n. This pull request fails (merged d27ac585 into 64553d75).\n. This pull request passes (merged 73e86d18 into 2f71386d).\n. This pull request passes (merged 56d7ce43 into 346c7591).\n. This pull request fails (merged e9f80d3b into 346c7591).\n. This pull request fails (merged d1eea500 into 346c7591).\n. This pull request passes (merged 23020723 into 34a7e62a).\n. This pull request passes (merged 2f71386d into e8f9ff70).\n. ",
    "coveralls": "\nChanges Unknown when pulling 260200dbdadc3802be412ea36af04eae10fd87cb on munkie:thrift-transport into * on ruflin:master*.\n. \nChanges Unknown when pulling 260200dbdadc3802be412ea36af04eae10fd87cb on munkie:thrift-transport into * on ruflin:master*.\n. \nChanges Unknown when pulling 0284d9edd8bf76ba7cc77106bd0074f8cdbcc164 on foufos:master into * on ruflin:master*.\n. \nChanges Unknown when pulling d1a3b19cc118dadcbbfd3517ac0bcaa8344f1155 on munkie:bulk-requests into * on ruflin:master*.\n. \nChanges Unknown when pulling 20d6574d3ea731e9281ca6db622524729d4d0bdb on kostiklv:tie-breaker-fix-20 into * on ruflin:master*.\n. \nChanges Unknown when pulling 13b65b8b3bd610b4861d4519880d4a10a6ab7861 on jlinn:master into * on ruflin:master*.\n. \nChanges Unknown when pulling 3648ed6321afebeeddee242c5eb0da564e46cedf on jlinn:terms-lookup into * on ruflin:master*.\n. \nChanges Unknown when pulling 1d2427b1be090af309db02704cb9cba368a9a8a3 on damienalexandre:array-access-results into * on ruflin:master*.\n. \nChanges Unknown when pulling 25519584a36308e43c7195bd57bfb4e5f6831334 on rauanmaemirov:master into * on ruflin:master*.\n. \nCoverage decreased (-0.04%) when pulling 159ea1787b490ed436c2a70409a5261f86c04d48 on nik9000:many_indices into 2cb3a2cb270cac69de16a8fbfa7569cef626eb20 on ruflin:master.\n. \nCoverage remained the same when pulling c1b4e68a4543707adca6bc95e8daeb404121fe7b on Topface:persistent-body-reuse-fix into 6297d827be2f4c589eee846e26f67a7ab213bcf6 on ruflin:master.\n. \nChanges Unknown when pulling 6ee78f1b540afab5bed06c7d6e199e5ebbd8f79b on danielmitd:master into * on ruflin:master*.\n. \nCoverage increased (+0.03%) when pulling ba30cab90051d08a6db9a78ade690972f345ece4 on jlinn:indices-filter into 3afa6d70c5c94eed7a9eb0e81c232c328a7914e0 on ruflin:master.\n. \nCoverage increased (+0.04%) when pulling 71aeb7293616bc265d8f57a06115b02febb98cd5 on pentarim:master into 3afa6d70c5c94eed7a9eb0e81c232c328a7914e0 on ruflin:master.\n. \nCoverage increased (+0.18%) when pulling ebf352a7b5d690cdac325e96fe3dcb07ad9a4147 on MrHash:master into 408ec4c987504caac4d27a0049710db2500d9c1c on ruflin:master.\n. \nCoverage increased (+0.25%) when pulling 9acfb231a485b512d4e0465da93fd25a3c742adc on MrHash:master into 408ec4c987504caac4d27a0049710db2500d9c1c on ruflin:master.\n. \nCoverage remained the same when pulling 6e64b428625cfc3bdc6c07a7d3ce50673c75d521 on r1pp3rj4ck:cardinality into b610d4f6afabc5a917eaa754729e53030d203040 on ruflin:master.\n. \nCoverage increased (+0.03%) when pulling 343d726b98e2447acb27b6d9e9cd829a18895687 on lalop:master into 99fbfbfb3945b22118544b46655eaf5c1d7fd51f on ruflin:master.\n. \nCoverage increased (+0.71%) when pulling 3a059cd474bc6ae04a60699d68f7622a1d9e6f75 on sten:bug594/bool-filter-to-array-fails into d45159aac4030db60af33b8ef52bd89143e3af11 on ruflin:master.\n. \nCoverage remained the same when pulling 743c884224d91ead93a9f25a515871797ccb89b7 on damienalexandre:cosmetic-case into 62f63df4d093f325b6848fa0bedae23da6ece3d7 on ruflin:master.\n. \nCoverage decreased (-0.07%) when pulling b8597a5f6c2498724011fe7ae68d7a0b48ba7466 on hugohenrique:master into 58b0928f4a02d97181663879d593cbe4b5bdd706 on ruflin:master.\n. \nCoverage increased (+0.01%) when pulling 9952a983851935a8f714405dd8c7f2c44bf7b89f on hugohenrique:master into 58b0928f4a02d97181663879d593cbe4b5bdd706 on ruflin:master.\n. \nCoverage remained the same when pulling 419419512f36fdb01e3a374e430f95f4d5393abb on webdevsHub:ScanAndScroll into 58b0928f4a02d97181663879d593cbe4b5bdd706 on ruflin:master.\n. \nCoverage remained the same when pulling 8ac255b853b87a7aef8fd3c05e530b06a1c16512 on milan:guzzle-transport into 58b0928f4a02d97181663879d593cbe4b5bdd706 on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling e0f627186b9322dc0cdfbb7e07be2a2776339985 on krzaczek:fix-aggs-filter into 58b0928f4a02d97181663879d593cbe4b5bdd706 on ruflin:master.\n. \nCoverage increased (+0.1%) when pulling 09a223cda300be0c9477f6673f160d4f3879c38e on krzaczek:fix-aggs-filter into 83fd5c4ce3fff5adf2a3172d56bd587f1b0e9a39 on ruflin:master.\n. \nCoverage increased (+0.01%) when pulling 39460f38dcd8724f30daeda285746ca423cb1886 on gargamol:master into a848a93c824d2465d7f1fc859f17eb47397911dc on ruflin:master.\n. \nCoverage decreased (-0.07%) when pulling bf5500120f3ed1329fd36ef45b4b44339ca62ce3 on Yitsushi:625-implement-boosting-query into ff18b9c4630111c1cb4f7f8d71103aa545a46c1e on ruflin:master.\n. \nCoverage decreased (-0.07%) when pulling 3d659ee160a6efc622c9a23f7f3fafa16248e8ab on Yitsushi:625-implement-boosting-query into ff18b9c4630111c1cb4f7f8d71103aa545a46c1e on ruflin:master.\n. \nCoverage decreased (-14.86%) when pulling 5b60b70186f2bfcb0f4d691da3a24753185d2585 on nik9000:retry_bulk_script into c622ccf20a5583015d1e6c76d262d52adb5a770d on ruflin:master.\n. \nCoverage decreased (-14.32%) when pulling 5b60b70186f2bfcb0f4d691da3a24753185d2585 on nik9000:retry_bulk_script into c622ccf20a5583015d1e6c76d262d52adb5a770d on ruflin:master.\n. \nCoverage increased (+0.04%) when pulling 23ab5ee56b54d962c7192eecaffc4593afc45713 on nik9000:retry_bulk_script into 61898fb24c8428729fc1a81395ab101b8e999bfc on ruflin:master.\n. \nCoverage increased (+0.13%) when pulling 8e2cafe0af49c25ca56f91a9dc8d16afa79f9f4e on nik9000:retry_bulk_script into 61898fb24c8428729fc1a81395ab101b8e999bfc on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling e86afac974a97cee2b50b949e38fadd94469a55a on xyu:route-bulk-actions into c622ccf20a5583015d1e6c76d262d52adb5a770d on ruflin:master.\n. \nCoverage increased (+0.52%) when pulling a95e85ea32a286f1061e2ab5fd845427ba1a0711 on nik9000:fix_test3 into 7b34a8de06dc3ee8e9a292de6689fab72dc2d932 on ruflin:master.\n. \nCoverage remained the same when pulling 00de70f8b05655cc1948ef4bbac09ed56cca2b4b on Tobion:patch-1 into 3c3ee39f90d942b1f25fdfb9d39669067375fa79 on ruflin:master.\n. \nCoverage remained the same when pulling 1a4134cc2b25c80387d84255f8b3694bf310b118 on Tobion:patch-1 into bf0bf12c9b014c6cef885f682e6843b58874f184 on ruflin:master.\n. \nCoverage remained the same when pulling 16aeeea113e31831b18d3a4698d51fdba1fe38b3 on merk:patch-1 into 2d32c0dee110181befbe8ce1b8d79bb9a470749b on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling 9e6d59876ac0d71e8df23399a42d7c86801481a5 on krzaczek:fix-query-post-filter into 8024d1f5901e6d1e487441f4696fbca3161b37ee on ruflin:master.\n. \nCoverage increased (+0.1%) when pulling 572e44bbf1a552970d51e3a14dece949a4115afe on krzaczek:fix-query-post-filter into 8024d1f5901e6d1e487441f4696fbca3161b37ee on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling 27667c5edea7db3244c5eb41b1d30cf830877897 on krzaczek:fix-query-post-filter into 8024d1f5901e6d1e487441f4696fbca3161b37ee on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling bfc8ace6b06b2f73afc4ba268930939ff0cb0f2e on krzaczek:fix-query-post-filter into 8024d1f5901e6d1e487441f4696fbca3161b37ee on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling d9ca12035caeba679356cdb55f277d5a95f8cfe2 on krzaczek:fix-query-post-filter into 8024d1f5901e6d1e487441f4696fbca3161b37ee on ruflin:master.\n. \nCoverage increased (+0.08%) when pulling 1b6a575c9792bc49348f51fddbb6a5c14dcace90 on krzaczek:fix-random-score into 591a74e564956b1cefe523b70c69c52af6a16056 on ruflin:master.\n. \nCoverage remained the same when pulling 8fd910282424ddbe4022d6fa51895994bba6ddf2 on lyrixx:test-env into c60ce38a5df0b675cc1b222e96738978fac72fd9 on ruflin:master.\n. \nCoverage remained the same when pulling 6b2b2339d5accca238801b80b32cd47942e16822 on es-1.3.0 into c276b901e7b863107f0f0ff601465f4d6a1427b7 on master.\n. \nCoverage remained the same when pulling 6b2b2339d5accca238801b80b32cd47942e16822 on es-1.3.0 into c276b901e7b863107f0f0ff601465f4d6a1427b7 on master.\n. \nCoverage decreased (-0.01%) when pulling 6907acf9dc2ed4b153af2a4b6b865adf345483ec on release-1.3.0.0 into 17df869d9c93d6caf3701f53217e60b52b7c5846 on master.\n. \nCoverage increased (+0.16%) when pulling 384e930059cc1db726241532a2765d68f9e3715f on chabior:master into 92155a36c94ebe15b09661ae804acbe4bdd4ad6b on ruflin:master.\n. \nCoverage increased (+0.26%) when pulling 1a810c484ecd4a1189157550fa4b20edfde3c9b2 on chabior:master into 92155a36c94ebe15b09661ae804acbe4bdd4ad6b on ruflin:master.\n. \nCoverage remained the same when pulling 7891300336ebf69121f0a3677e479db89632e488 on OskarStark:patch-1 into 07214ca7a064415c0a58e3a24903e47efd632b8c on ruflin:master.\n. \nCoverage remained the same when pulling 227069073fc6e66d720c2126b71d81b1fdc89ed4 on OskarStark:master into 07214ca7a064415c0a58e3a24903e47efd632b8c on ruflin:master.\n. \nCoverage decreased (-0.07%) when pulling 6434d040f1056561a5c2e33c2decfb0ce3e0a1ef on krzaczek:issue-669 into ac63bbf8eaf4f5da1609df4e999dd2ba6508383d on ruflin:master.\n. \nCoverage decreased (-0.1%) when pulling d8b7440e34e29360ec0d75da4cd1599132a88bc1 on krzaczek:issue-669 into ac63bbf8eaf4f5da1609df4e999dd2ba6508383d on ruflin:master.\n. \nCoverage remained the same when pulling fa2e0f48576c964b4eb7cc71fc9d5a1c65defcc1 on sevein:delete-exec-bit into 6c548474a15b74f06540b1163dc12f9d7ddda088 on ruflin:master.\n. \nCoverage decreased (-0.03%) when pulling 1c82738116be8679c7fc44f4b9330a2da53cbbcf on merk:customisable-result into ffbfa5dd391bd097434e1c8262d7a1df1d2555f8 on ruflin:master.\n. \nCoverage remained the same when pulling c3dc16e0c4f479240b7034faa60f701b28e5d417 on rmruano:type-get-document into ffbfa5dd391bd097434e1c8262d7a1df1d2555f8 on ruflin:master.\n. \nCoverage increased (+0.13%) when pulling da1e5b03a68602ecb62988a9a4e4ef2404bf88cb on fprochazka:bug/response-isok into c9f41fa3d89edd755187bf3adb86a657c57c8521 on ruflin:master.\n. \nCoverage increased (+0.16%) when pulling cad5ec49c4d75ed6815dafbc3e50e5f2f17c20d6 on fprochazka:bug/response-isok into c9f41fa3d89edd755187bf3adb86a657c57c8521 on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 2bf89c476ba12d57b774f828c3ef58cdb7751bac on rmruano:master into 0d2400bdba9adbaa15004fd4e7ccc80562e139a3 on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling ec910f5db114f4e6d664c3263c640aeee273a955 on CrAzE124:master into 0d2400bdba9adbaa15004fd4e7ccc80562e139a3 on ruflin:master.\n. \nCoverage decreased (-0.02%) when pulling e882a64174faf51b3c3b7b38849c625f2f1d3abe on rmruano:type-get-document into 44445475e0380152c313ec03367c8366e1f9246b on ruflin:master.\n. \nCoverage decreased (-2.28%) when pulling 346ef5bb5fc5e85f52d22a5b86c25b5e70d30bdc on webdevsHub:QueryBuilder into 5fe627f1ca4d901a11d91a036cd87b92c78d25e1 on ruflin:master.\n. \nCoverage increased (+1.91%) when pulling 8a142405299101cc72238a1f84a2526304228877 on webdevsHub:QueryBuilder into 208c9289dac7bdac58804c18d7b3167285da09ea on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 147c0a97b498d89d08e42a968218e5e5a1f2ed0e on agallou:suggest_query into 5fe627f1ca4d901a11d91a036cd87b92c78d25e1 on ruflin:master.\n. \nCoverage decreased (-1.5%) when pulling 0683bf16db333d1f65308fb046a76a126514c44a on agallou:http_adapter into c10b04777c94147de5dbf2e0616502e185bbc507 on ruflin:master.\n. \nCoverage increased (+0.0%) when pulling 40eb3e5c23b4ea28f3b7e7ed68809ac603d8d0f8 on webdevsHub:query-class-improvements into 990b89fd488afbab5d1dde8325dca238407da41b on ruflin:master.\n. \nCoverage increased (+0.0%) when pulling ecefc85a1ad90fcac49fb80e9815d685dd37d055 on TroodoNmike:master into 990b89fd488afbab5d1dde8325dca238407da41b on ruflin:master.\n. \nCoverage increased (+0.06%) when pulling 86cc03d5017b197f34a5a53ae54f4e30c8385da0 on jdeniau:weight-in-function-score into c8b68487fcfa675258ff5f53637f7e9d9a5d669a on ruflin:master.\n. \nCoverage decreased (-4.87%) when pulling 8d43da9948e5575c515338fccad8cf26a8ab9b31 on jdeniau:elasticsearch-1.4.2 into c8b68487fcfa675258ff5f53637f7e9d9a5d669a on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 435c7240aa0a88fa2a6c2edebf024318d8966dbd on jdeniau:elasticsearch-1.4.2 into bca7a123b2dc49d2a650b70b17ad8136ad5894c2 on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 6a7234307e446185b22d5d7deec7070bdef17a56 on jdeniau:elasticsearch-1.4.2 into bca7a123b2dc49d2a650b70b17ad8136ad5894c2 on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 056107e822e2187e1e108d7583fd21b38bdda713 on jdeniau:elasticsearch-1.4.2 into bca7a123b2dc49d2a650b70b17ad8136ad5894c2 on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 867ef2a3d9852ec679739a533271473f7c5f832e on jdeniau:elasticsearch-1.4.2 into bca7a123b2dc49d2a650b70b17ad8136ad5894c2 on ruflin:master.\n. \nCoverage decreased (-0.01%) when pulling 867ef2a3d9852ec679739a533271473f7c5f832e on jdeniau:elasticsearch-1.4.2 into bca7a123b2dc49d2a650b70b17ad8136ad5894c2 on ruflin:master.\n. \nCoverage increased (+0.01%) when pulling 769e81fbe5f9c48468192fc278a36a420a3f951f on greg0ire:improve_error_message into ffb12b2c2ad3eaf19b8acbdf7023539912aed614 on ruflin:master.\n. \nCoverage increased (+2.07%) when pulling 3b9a099542c7b288cf8cf62c2741c7ac5e32b7cb on im-denisenko:new-vagrantbox into 6150be23c1ce358ae80ff6f329e2686b12efabd3 on ruflin:master.\n. \nCoverage increased (+0.07%) when pulling 5b21b9b176feb9d0d69bc1091dc12ff298f4d5da on im-denisenko:issue-718 into 6150be23c1ce358ae80ff6f329e2686b12efabd3 on ruflin:master.\n. \nCoverage decreased (-0.03%) when pulling 8d876090d8825e68cf387c35c47c501f7712aede on matthiasmullie:patch-2 into b14eb5737fdff20fa9b83bd86a7fadb0f0777b7e on ruflin:master.\n. \nCoverage decreased (-0.07%) when pulling 1331583c53cdf582db70e1452ac72795ee267459 on matthiasmullie:patch-2 into b14eb5737fdff20fa9b83bd86a7fadb0f0777b7e on ruflin:master.\n. \nCoverage increased (+0.02%) when pulling 8f3345721247ffaf3e750b04dd7cf67e1af4e815 on XWB:micro-optimization into b14eb5737fdff20fa9b83bd86a7fadb0f0777b7e on ruflin:master.\n. \nCoverage decreased (-1.68%) when pulling 43b1ddd94eb345a1c87d8a8f747875884ea4d023 on XWB:php-cs-fixer into acc9604fc61775bc21e7bfb0bbf370b937e1209b on ruflin:master.\n. \nCoverage remained the same when pulling 5b0e7f6551273f1087c68e55a3927782e95f3665 on webdevsHub:top_hits_return_annotation into 45e383efae1e4296a7e3619a19296c0af329afef on ruflin:master.\n. \nCoverage increased (+1.03%) to 83.93% when pulling 640264527c65bf9dcaadea44f08eb9e64873bb59 on im-denisenko:fix-memcached into 38c441f06891f67b664beb18176f076556c89ee9 on ruflin:master.\n. \nCoverage increased (+1.03%) to 83.93% when pulling f2fa586d6fede4ec862793331be182c8d342d641 on im-denisenko:fix-memcached into 38c441f06891f67b664beb18176f076556c89ee9 on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 64501baee417627210989aedb31f989fd1f4d90e on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.95%) to 81.98% when pulling 64501baee417627210989aedb31f989fd1f4d90e on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-2.3%) to 81.63% when pulling 91f5034c500aea1035335be1f21e0085bd44eb54 on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-2.3%) to 81.63% when pulling 91f5034c500aea1035335be1f21e0085bd44eb54 on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.48%) to 82.45% when pulling 273470ca0b2f4caa85096b28068f642a0fc11a9c on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.48%) to 82.45% when pulling 273470ca0b2f4caa85096b28068f642a0fc11a9c on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.48%) to 82.45% when pulling 91f5034c500aea1035335be1f21e0085bd44eb54 on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.88%) to 82.05% when pulling 7713f678add791b98b44357de4a73e7bd63b1a29 on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-1.88%) to 82.05% when pulling 7713f678add791b98b44357de4a73e7bd63b1a29 on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling a23529386ea3771ece3bceee47f5a29af818b59d on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling a23529386ea3771ece3bceee47f5a29af818b59d on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 33c499b072665db1ab38ef1201b53dcbca638f1b on jdeniau:php-53-es-142 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-0.02%) to 83.9% when pulling b42dfcb3d114904f9c4c196251371793d876329d on bakura10:patch-1 into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 034767d309e6a624a0dbb61719539d4944f55dbc on bakura10:index into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 034767d309e6a624a0dbb61719539d4944f55dbc on bakura10:index into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-0.0%) to 83.92% when pulling 2bf18f20c01b1818a53698b68e2a3409dbcb56ce on bakura10:index into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage decreased (-0.0%) to 83.92% when pulling 2bf18f20c01b1818a53698b68e2a3409dbcb56ce on bakura10:index into c8c546e0ef52b1d132de462b386f85dae3d2b9be on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 4ccb4f19ebfc5854e2bcc35e7f9a49291d007f26 on EvolverGroup:issue-770-fix-elastica-guzzel-transport-object into 3644cec36623e63a8c358c3c74db5e1c7b167fb4 on ruflin:master.\n. \nCoverage remained the same at 83.93% when pulling 4ccb4f19ebfc5854e2bcc35e7f9a49291d007f26 on EvolverGroup:issue-770-fix-elastica-guzzel-transport-object into 3644cec36623e63a8c358c3c74db5e1c7b167fb4 on ruflin:master.\n. \nCoverage increased (+0.93%) to 84.0% when pulling ac302eb99160953746a580f0f187d31deedffed4 on bakura10:filters into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.93%) to 84.0% when pulling ac302eb99160953746a580f0f187d31deedffed4 on bakura10:filters into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.47%) to 83.54% when pulling 59d6a52e39996ecafdbc1e6845b8537be5a7eb7b on bakura10:fix-ide into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.47%) to 83.54% when pulling 59d6a52e39996ecafdbc1e6845b8537be5a7eb7b on bakura10:fix-ide into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.93%) to 84.0% when pulling c301d14f356e111e86a6658f6797310990778595 on bakura10:fix-ide into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.93%) to 84.0% when pulling c301d14f356e111e86a6658f6797310990778595 on bakura10:fix-ide into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.93%) to 84.0% when pulling c301d14f356e111e86a6658f6797310990778595 on bakura10:fix-ide into 0db1e7e0536dcc9f88259e63b92ac0e44b62c9c0 on ruflin:master.\n. \nCoverage increased (+0.12%) to 84.12% when pulling a03fff2d88b5eec2e60b6e0f1523b26db051a004 on im-denisenko:fix-out-of-memory into 29b62a7a66b30f026d35d8aaa4e7fd0371209b74 on ruflin:master.\n. \nCoverage increased (+0.12%) to 84.12% when pulling a03fff2d88b5eec2e60b6e0f1523b26db051a004 on im-denisenko:fix-out-of-memory into 29b62a7a66b30f026d35d8aaa4e7fd0371209b74 on ruflin:master.\n. \nCoverage increased (+0.03%) to 84.15% when pulling fcaafe1be008108f058d77429560c93520486cf3 on gcds-patch-1 into 452baf91923bde4ed719da6efc65b861158c2b4b on master.\n. \nCoverage increased (+0.03%) to 84.15% when pulling fcaafe1be008108f058d77429560c93520486cf3 on gcds-patch-1 into 452baf91923bde4ed719da6efc65b861158c2b4b on master.\n. \nCoverage increased (+0.03%) to 84.15% when pulling fcaafe1be008108f058d77429560c93520486cf3 on gcds-patch-1 into 452baf91923bde4ed719da6efc65b861158c2b4b on master.\n. \nCoverage remained the same at 84.13% when pulling 3c48e1711dd791f498df2e7f413d5d952e2159e7 on im-denisenko:jdeniau-php-53-es-142 into f6e811fddc61c1a5659a48563601284326fdab85 on ruflin:jdeniau-php-53-es-142.\n. \nCoverage remained the same at 84.13% when pulling 3c48e1711dd791f498df2e7f413d5d952e2159e7 on im-denisenko:jdeniau-php-53-es-142 into f6e811fddc61c1a5659a48563601284326fdab85 on ruflin:jdeniau-php-53-es-142.\n. \nCoverage remained the same at 84.13% when pulling 3c48e1711dd791f498df2e7f413d5d952e2159e7 on im-denisenko:jdeniau-php-53-es-142 into f6e811fddc61c1a5659a48563601284326fdab85 on ruflin:jdeniau-php-53-es-142.\n. \nCoverage decreased (-0.0%) to 84.38% when pulling b0e92fbc358884e4f93d91b66d7312504a1f9629 on ukautz:feature-scripted-metric-agg into 241d707e1409419ff527bf005268376c226b2a83 on ruflin:master.\n. \nCoverage decreased (-0.02%) to 84.38% when pulling 06fedfcaf7e47a2b7cc67fa82cd9a4d06912adf9 on jdeniau-php-53-es-142 into d9e60747a2666e65a6ec454c3cdef0a3d81e12c4 on master.\n. \nCoverage decreased (-0.02%) to 84.38% when pulling 69d7953213da27334644848b5d4ce68c020a00b6 on es-1.4.3 into d9e60747a2666e65a6ec454c3cdef0a3d81e12c4 on master.\n. \nCoverage increased (+0.0%) to 84.33% when pulling 7f62c6b264eeccce9b9aaab18536f8e75575a1c7 on release-v1.4.3.0 into e25ff5b38f8f0e2f37c947235d1a7463ac22b7c0 on master.\n. \nCoverage decreased (-0.2%) to 84.13% when pulling c69a1f286adaa04d242f6f7e0893398a163dcd49 on im-denisenko:feature/percentiles-aggregation into bfa9363bf2aa62af5907135863661c6c78a68ee4 on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.37% when pulling c69a1f286adaa04d242f6f7e0893398a163dcd49 on im-denisenko:feature/percentiles-aggregation into bfa9363bf2aa62af5907135863661c6c78a68ee4 on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.44% when pulling 5f4d901dd2675ac7dbbada7fe6724348cc5722be on Jmoati:master into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.44% when pulling 5f4d901dd2675ac7dbbada7fe6724348cc5722be on Jmoati:master into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.44% when pulling 5f4d901dd2675ac7dbbada7fe6724348cc5722be on Jmoati:master into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage increased (+0.33%) to 84.73% when pulling d7ed1ef5bd17347989cd48c4f433585ab4941051 on Jmoati:master into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.82% when pulling 56b5db7a0cf9e999794b1c0d5e117fb36abac6b5 on Jmoati:master into cc740b6d09b87113b685ec03e37c87c92b8c6627 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.82% when pulling 56b5db7a0cf9e999794b1c0d5e117fb36abac6b5 on Jmoati:master into cc740b6d09b87113b685ec03e37c87c92b8c6627 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.82% when pulling 3c867e11d691be2bbfe8a39f2beb5409aabb6238 on Jmoati:master into cc740b6d09b87113b685ec03e37c87c92b8c6627 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.82% when pulling 3c867e11d691be2bbfe8a39f2beb5409aabb6238 on Jmoati:master into cc740b6d09b87113b685ec03e37c87c92b8c6627 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.82% when pulling 3c867e11d691be2bbfe8a39f2beb5409aabb6238 on Jmoati:master into cc740b6d09b87113b685ec03e37c87c92b8c6627 on ruflin:master.\n. \nCoverage increased (+0.36%) to 84.75% when pulling 52763f957b3d79abc63f69a765310afdc423da02 on im-denisenko:feature/fix-fluent into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage increased (+0.36%) to 84.75% when pulling 52763f957b3d79abc63f69a765310afdc423da02 on im-denisenko:feature/fix-fluent into 7f62b40e58a76be0f5b16fe2f7d09a4d2080899e on ruflin:master.\n. \nCoverage decreased (-0.28%) to 84.54% when pulling c0951fd5df281a12172a450379e3adf371f5c4b2 on im-denisenko:fix-hhvm-build into b4006bdf30a50825cf4aed8bcaefdf752643cf10 on ruflin:master.\n. \nCoverage decreased (-0.28%) to 84.54% when pulling c0951fd5df281a12172a450379e3adf371f5c4b2 on im-denisenko:fix-hhvm-build into b4006bdf30a50825cf4aed8bcaefdf752643cf10 on ruflin:master.\n. \nCoverage remained the same at 84.54% when pulling 7a46679e1b677318122069796c3560c5e035ad34 on ilanrivers:ilanrivers-fixed-optimize-index-method into 36165fbac7264c279db5b6d09792382846eb1879 on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.58% when pulling 2e28f101186b7cf5f013c7626b6a83343254b4f1 on webdevsHub:query_DSL_match into fedd2a1637b0740df50722008bf1cc024114e6e2 on ruflin:master.\n. \nCoverage remained the same at 84.58% when pulling d309603ba3eb1d3af98b5cc6105bbe4c9d108c0a on borNfreee:patch-1 into 59c1a4c3e20ef6b5362dab1fef34cecec4f4a5ef on ruflin:master.\n. \nCoverage increased (+0.04%) to 84.63% when pulling 5e13558703c70bfdb368fc3dcfda227baaaf9198 on ewgRa:toarray-tests-783 into 59c1a4c3e20ef6b5362dab1fef34cecec4f4a5ef on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 144a5ef4de48c222ea8c922488a054e67a4c2c08 on kallependers:patch-1 into a163767b78052647a74afc187afb38e9fb60db60 on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 68fdcf11a472683fb1eedc4ebacda51f9d96e844 on stof:patch-1 into a163767b78052647a74afc187afb38e9fb60db60 on ruflin:master.\n. \nCoverage increased (+0.0%) to 84.63% when pulling 3a9ded05d79e78d994b773f89e4281a2e4cf5d8a on oohnoitz:datehistogram-params into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage increased (+0.0%) to 84.63% when pulling 5bb2c400fd9727b76f75381cc55eb6c4aec32700 on oohnoitz:datehistogram-params into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage increased (+0.05%) to 84.68% when pulling fa22d849a5297a12e5f5b8753b845da59fdec910 on im-denisenko:feature/add-completion-suggester into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage increased (+0.05%) to 84.68% when pulling fa22d849a5297a12e5f5b8753b845da59fdec910 on im-denisenko:feature/add-completion-suggester into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 77940f945bc5c8ffe78e2a142af424f2efc84784 on im-denisenko:feature/fix-elasticsearch-links into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 8aa5181bb289d0fe417d183c51ee19779251a192 on im-denisenko:feature/fix-elasticsearch-links into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 8aa5181bb289d0fe417d183c51ee19779251a192 on im-denisenko:feature/fix-elasticsearch-links into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage remained the same at 84.63% when pulling 8aa5181bb289d0fe417d183c51ee19779251a192 on im-denisenko:feature/fix-elasticsearch-links into 12f7fdda14da27f0f15a379da5267d514a9e2b77 on ruflin:master.\n. \nCoverage remained the same at 84.68% when pulling cd546552e3fbd9c1186fab284c4412d95fb6d19a on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.02%) to 84.7% when pulling 4c71c336d6e0123f60ae9dc02e03f815b18dc5c7 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.02%) to 84.7% when pulling 4c71c336d6e0123f60ae9dc02e03f815b18dc5c7 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.03%) to 84.71% when pulling c8ef84838f78bf7cd5bc91830d1b9224e0ffc586 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.03%) to 84.71% when pulling c8ef84838f78bf7cd5bc91830d1b9224e0ffc586 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.13%) to 84.81% when pulling 165aacd751e7d82ed40291e05c5b90db88776255 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.13%) to 84.81% when pulling 165aacd751e7d82ed40291e05c5b90db88776255 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.13%) to 84.81% when pulling 165aacd751e7d82ed40291e05c5b90db88776255 on im-denisenko:elasticsearch-1.5 into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage decreased (-0.16%) to 84.52% when pulling 45ca4dafa8cfada290b9ecdb673752afb11d1bf4 on nurikabe:master into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage decreased (-0.16%) to 84.52% when pulling 45ca4dafa8cfada290b9ecdb673752afb11d1bf4 on nurikabe:master into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage decreased (-0.16%) to 84.52% when pulling 45ca4dafa8cfada290b9ecdb673752afb11d1bf4 on nurikabe:master into f2f75d4ae090c05cd2c0e86686f40feeee7e1e68 on ruflin:master.\n. \nCoverage increased (+0.02%) to 84.71% when pulling d2cbbe49d0101258c8885407bf045aeb550764d2 on rmruano:index-delete-by-query into 917096e48960a057ce4db6510921096421e12f4a on ruflin:master.\n. \nCoverage increased (+0.02%) to 84.71% when pulling d2cbbe49d0101258c8885407bf045aeb550764d2 on rmruano:index-delete-by-query into 917096e48960a057ce4db6510921096421e12f4a on ruflin:master.\n. \nCoverage increased (+0.02%) to 84.71% when pulling d2cbbe49d0101258c8885407bf045aeb550764d2 on rmruano:index-delete-by-query into 917096e48960a057ce4db6510921096421e12f4a on ruflin:master.\n. \nCoverage decreased (-0.67%) to 84.17% when pulling 14a6f397c59f27f5e97511e47ffb6262a4c9db68 on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.67%) to 84.17% when pulling 14a6f397c59f27f5e97511e47ffb6262a4c9db68 on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.67%) to 84.17% when pulling 14a6f397c59f27f5e97511e47ffb6262a4c9db68 on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.9% when pulling 14a6f397c59f27f5e97511e47ffb6262a4c9db68 on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.09%) to 84.75% when pulling 86b19f4438ebff58142da10011ba47cdedc1906f on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.09%) to 84.75% when pulling 86b19f4438ebff58142da10011ba47cdedc1906f on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.09%) to 84.75% when pulling 86b19f4438ebff58142da10011ba47cdedc1906f on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.05%) to 84.79% when pulling b6c4719b5547fd048250eece7b9e33a5a1a69fb5 on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage increased (+0.06%) to 84.9% when pulling 1943b3b4a86eee6b64ca867b0299c6662d97067e on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage increased (+0.38%) to 85.22% when pulling 8a502048a39c4a2a7f45fbef56e8a18ca9bd01fb on ebuildy:patch-1 into cc60e8fd62fbb79912e4360e1904737bdc459da5 on ruflin:master.\n. \nCoverage decreased (-0.56%) to 84.28% when pulling 59fca67a23634a62bb4b185f88d3bdafa19a12c8 on empty-bool-query-as-match-all into cc60e8fd62fbb79912e4360e1904737bdc459da5 on master.\n. \nCoverage increased (+0.6%) to 84.87% when pulling f29a992f7e87c52ad1918fd0f7cca53029c96034 on allow-bool-in-setsource into 4dae780c4879f21985cca089ed19da7674aea89a on master.\n. \nCoverage increased (+0.6%) to 84.87% when pulling f29a992f7e87c52ad1918fd0f7cca53029c96034 on allow-bool-in-setsource into 4dae780c4879f21985cca089ed19da7674aea89a on master.\n. \nCoverage decreased (-0.55%) to 84.3% when pulling f29a992f7e87c52ad1918fd0f7cca53029c96034 on allow-bool-in-setsource into 4dae780c4879f21985cca089ed19da7674aea89a on master.\n. \nCoverage increased (+0.02%) to 84.87% when pulling f29a992f7e87c52ad1918fd0f7cca53029c96034 on allow-bool-in-setsource into 4dae780c4879f21985cca089ed19da7674aea89a on master.\n. \nCoverage increased (+0.37%) to 85.25% when pulling ea39a3ed276ac059a32dc9d092cf25f1880d7df4 on hasumedic:scroll-ignore-sorting-by-default into 4b64014ac980e6c072f7556589e8ba5acf0134e0 on ruflin:master.\n. \nCoverage decreased (-0.07%) to 84.8% when pulling a9cfbab0fcc8ef07751ede5474a69442397804da on hasumedic:scroll-ignore-sorting-by-default into 4b64014ac980e6c072f7556589e8ba5acf0134e0 on ruflin:master.\n. \nCoverage increased (+0.39%) to 85.27% when pulling a9cfbab0fcc8ef07751ede5474a69442397804da on hasumedic:scroll-ignore-sorting-by-default into 4b64014ac980e6c072f7556589e8ba5acf0134e0 on ruflin:master.\n. \nCoverage increased (+0.37%) to 85.24% when pulling 3417056d95ceed60c628182f3e47ed3e18529a41 on xwei3752:master into 4b64014ac980e6c072f7556589e8ba5acf0134e0 on ruflin:master.\n. \nCoverage decreased (-0.01%) to 85.24% when pulling fdee0c6ba6f9aaa7266064c77fb6ea9d3aa0393f on xwei3752:master into 6f6e59bae1d3f95ee168a57dd8a0943db8faf152 on ruflin:master.\n. \nCoverage remained the same at 85.24% when pulling c36c68cfe872107a1ae6372a669117750bb89875 on elasticsearch-1.5.2 into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-1.92%) to 83.32% when pulling c36c68cfe872107a1ae6372a669117750bb89875 on elasticsearch-1.5.2 into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage remained the same at 85.24% when pulling b8b7463f21216c3a00e801e61c548e55460d14fa on reindex-refactoring-to-copy into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-0.47%) to 84.77% when pulling b8b7463f21216c3a00e801e61c548e55460d14fa on reindex-refactoring-to-copy into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage increased (+0.19%) to 85.43% when pulling fe3c0d219c971a846c55e1f6bb68d586d2f2e798 on php7-compatibility into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-0.02%) to 85.22% when pulling fe3c0d219c971a846c55e1f6bb68d586d2f2e798 on php7-compatibility into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-0.02%) to 85.22% when pulling fe3c0d219c971a846c55e1f6bb68d586d2f2e798 on php7-compatibility into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-0.47%) to 84.77% when pulling 19bb434eff5990640074cda831093417d900795c on php7-compatibility into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nCoverage decreased (-0.0%) to 85.24% when pulling 19bb434eff5990640074cda831093417d900795c on php7-compatibility into 1d63a7124b33748b5cf10421c45dd07d200f66ad on master.\n. \nChanges Unknown when pulling 79541e615d0edc7cf1b3dbf48ce0486c35b004db on php7-compatibility into * on master*.\n. \nChanges Unknown when pulling a8566e169e2c94fce0b60ecce6df2690c75f906e on php7-compatibility into * on master*.\n. \nChanges Unknown when pulling a8566e169e2c94fce0b60ecce6df2690c75f906e on php7-compatibility into * on master*.\n. \nChanges Unknown when pulling d3e84d1a023ac7a7fda56bf727dd0f1430144a8a on release-2.0.0 into * on master*.\n. \nChanges Unknown when pulling d3e84d1a023ac7a7fda56bf727dd0f1430144a8a on release-2.0.0 into * on master*.\n. \nChanges Unknown when pulling 49017b3060a3b14ab5767507969fa1ac5bff9441 on release-2.0.0 into * on master*.\n. \nChanges Unknown when pulling d4fa02363fab297f7a1587f1479c5f4d17ca5fc1 on release-2.0.0 into * on master*.\n. \nChanges Unknown when pulling c29490ff798da7aa46e4207fe9b58d4048641545 on miniplay:connection-connect-timeout into * on ruflin:master*.\n. \nChanges Unknown when pulling cfcd3a536c56bc2b616288973b55b6e84387dfdd on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 6bf4a0b2351cf0271b40bae0ab38ea32e74f752b on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 6bf4a0b2351cf0271b40bae0ab38ea32e74f752b on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 6bf4a0b2351cf0271b40bae0ab38ea32e74f752b on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 6bf4a0b2351cf0271b40bae0ab38ea32e74f752b on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 6bf4a0b2351cf0271b40bae0ab38ea32e74f752b on webdevsHub:scroll into * on ruflin:master*.\n. \nChanges Unknown when pulling 71418e07199dfd0b388890cfc046cf284fa7176b on gitter-badger:gitter-badge into * on ruflin:master*.\n. \nChanges Unknown when pulling 10956ea8196c0798e03f8c358d4565341b1b2134 on agallou:update_http_adapter into * on ruflin:master*.\n. \nChanges Unknown when pulling b2456bca11df9c07f6cc92ea9b33bddd2958f7c4 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 215cd5bd0f9a7ca06bfc125d699e8f16014b1f89 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 215cd5bd0f9a7ca06bfc125d699e8f16014b1f89 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling ffe24b19426c07b1a5d788ea804d3c0a25fd503e on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 628d1d7de1ccfcc6ac5ce4ee0887fad04b15568f on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 798ee4800de8d74b397cf1251b5c3f600978777e on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 0a22982e87d192a4023a24a5857a886b39e5f759 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling fab4b57acbcd1addc807c2372bdd7c69265f94e2 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 575a28291318a8bc132cd39206f43684fd8fc17e on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 024993d7b7ca60033a10670696650aa630dc9796 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling fd95dd28664f72fd5afc7a3b8d8140c9d193be22 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling c556343cc1ed56250ac0409bb801ff25d9e09621 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 260a8814240c2c00c97d678a8e39a96cc92f57fa on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 4fecfda3cbcab133dc0eb8a0139d8200d0ffcadd on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 6eeca7f4e5163cb1bca0b1bf8e33cec42a199db6 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 6eeca7f4e5163cb1bca0b1bf8e33cec42a199db6 on tests-host-refactoring into * on master*.\n. \nChanges Unknown when pulling 91065a6377d54754a143f08a5bd1c617efeb66ba on miniplay:significant-terms-aggregation into * on ruflin:master*.\n. \nChanges Unknown when pulling c48da9161af707fb8e6cdb50ecaa7340a9580973 on miniplay:significant-terms-aggregation into * on ruflin:master*.\n. \nChanges Unknown when pulling 37315022df94e723b6faf25fb7198334c7f5740d on im-denisenko:phpunit-groups into * on ruflin:master*.\n. \nChanges Unknown when pulling 6f4ada9ff052a8edad890ae2cb81d56e2f3447eb on im-denisenko:phpunit-groups into * on ruflin:master*.\n. \nChanges Unknown when pulling 6f4ada9ff052a8edad890ae2cb81d56e2f3447eb on im-denisenko:phpunit-groups into * on ruflin:master*.\n. \nChanges Unknown when pulling 2990b2cfb28aa34ee3a2f37b348ccc9ed87c1cf9 on im-denisenko:phpunit-groups into * on ruflin:master*.\n. \nChanges Unknown when pulling 99532290ed0bbb75de301bfc7f8c50cc776f09e1 on im-denisenko:phpunit-groups into * on ruflin:master*.\n. \nChanges Unknown when pulling 89bdfda2293756f9f07c215d8dd72206fe52e011 on build-cleanup-1 into * on master*.\n. \nChanges Unknown when pulling ec88c10203b7d790755bd93af83d75913a3aaffd on codecov into * on master*.\n. ",
    "mrandmrssmith": "Thanks for sorting this out.It has made a big difference for us.\n. ",
    "adhenawer": "Hi, done! issue #248.\n. Hi, done, thanks!\n. Hi Ruflin, I run the test on my environment, not failed...\nWhat can it be? :^)\n. Hi, update to version 0.19.9 to use multi_match.\nhttp://www.elasticsearch.org/download/2012/08/23/0.19.9.html\n. Hi, i recommend you use prefix query for this type of search...\nhttp://www.elasticsearch.org/guide/reference/query-dsl/prefix-query.html\n. thanks\n. Hi, thanks @munkie, i did as suggested...\n. Yes, done!\n. Sorry, ok, done!\n. @ruflin #324\n. ",
    "shevaton7": "where ?\n. In my message error I don't have path with Elastica/client, you would rather talk about the second path => C:\\wamp\\www\\Symfony\\vendor\\elastica\\lib\\Elastica\\Client.php, it's my faut but the really path is : C:\\wamp\\www\\Symfony\\vendor\\elastica\\lib\\Elastica\\Client.php, and it doen't change any think, I have the same error...\n. Error in this line : class Client extends Elastica_Client\n<?php\nnamespace FOQ\\ElasticaBundle;\nuse Elastica_Client;\nuse FOQ\\ElasticaBundle\\Logger\\ElasticaLogger;\n/*\n- @author Gordon Franke info@nevalon.de\n  /\n  class Client extends Elastica_Client\n  {\n  protected $logger;\npublic function setLogger(ElasticaLogger $logger)\n  {\n      $this->logger = $logger;\n  }\npublic function request($path, $method, $data = array(), array $query = array())\n  {\n      $start = microtime(true);\n      $response = parent::request($path, $method, $data, $query);\n```\n  if (null !== $this->logger) {\n      $time = microtime(true) - $start;\n      $this->logger->logQuery($path, $method, $data, $time);\n  }\nreturn $response;\n  ```\n}\n  }\n  ?>\n. I have to (move or copy ?) file Client.php in  C:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\Elastica\\Client.php ? but I don't have this path... I have to create folder Elastica and copy Client.php ?\n. I have two directory as explained in https://github.com/Exercise/FOQElasticaBundle#download :\n'Elastica' => DIR.'/../vendor/elastica/lib',\n    'FOQ' => DIR.'/../vendor/bundles',\nclass Elastica_Client it is located in C:\\wamp\\www\\Symfony\\vendor\\elastica\\lib\\Elastica\\\nand we have another class Client.php in C:\\wamp\\www\\Symfony\\vendor\\bundles\\FOQ\\ElasticaBundle\\Client.php\nI don't really understand what wrong...\n. I followed this link ( https://github.com/ruflin/Elastica ) to get elastica/lib',\n. @ruflin you are not the author of bundle ? I need help please I'm so tired to spend time to do this...\nsomething wrong why name of file Client.php is different of the name of the class Elastica_Client why !!!\n. Thank you for your help evrybody. I make a mistake, I registered Elastica like a namespace in  $loader->registerNamespaces(array(.. )); instead in $loader->registerPrefixes(array());\nThank you very much !\n. @jmikola : I apologize for my English I'm still learning to speak English is perhaps why I did not express myself well. I do my best ...\n. I try this it's work I think: Go to your php.ini file and remove the ; mark from the beginning of the following line:\n;extension=php_curl.dll\n. Hi,\nWhen I execute the following command : php app/console foq:elastica:populate, I get this error Call to undefined function curl_init(). Extension php_curl is activite, I followed all the following step :\n1) remove ';' from extension=php_curl.dll in php.ini\n2) ensure that  ssleay32.dll and libeay32.dll are in Windows/system32.\n3) Copy php_curl.dll into Windows\\System32 as well.\nBut it doen't work...\nWhen you said \"elasticsearch server is not running\" I forgot to do any think ?\nthis is my conf\nfoq_elastica:\n    clients:\n        default: { host: localhost, port: 9200 }\n    indexes:\n        website:\n            client: default\n            types:\n                user:\n                    mappings:\n                        username: { boost: 5 }\n                        firsName: { boost: 3 }\n                        lastName: { boost: 3 }\n                    persistence:\n                        driver: orm # orm, mongodb, propel are available\n                        model: Application\\UserBundle\\Entity\\User\n                        provider:\n                            batch_size: 10\n                        identifier: id\nThank you for all !\n. I have resolved all errors. Now when I do php app/console FOQ:elastica:populate I get the following error:\nCall to undefined method Symfony\\Bundle\\DoctrineBundle\\Registry::getManagerForClass() in C:\\wamp\\www\\Symfony\\vendor\\bundle\\FOQ\\ElasticaBundle\\Doctrine\\ORM\\Provider on line 55\n. Solution of my problem : https://github.com/Exercise/FOQElasticaBundle/commit/eadfc5108276caecbffb2e6b85cf05693376816f\n. Before populate, execute the file elasticsearch.bat on windows console (elasticsearch\\bin\\elasticsearch.bat).\n. ",
    "thiruvenkatam": "Hi everyone.\nI installed Elastica using composer to my Laravel project folder. But i am facing \"Class 'Elastica\\Client' not found\" error. I have followed the steps as per in the installation guide.\nI need some help regarding this.\nI will post controller code below.\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nuse Elasticsearch\\ClientBuilder;\nuse Elastica\\Client as ElasticaClient;\nrequire_once 'C:\\xampp\\htdocs\\logistics\\vendor\\autoload.php';\nclass ClientController extends Controller\n{\n    //\n    protected $elasticsearch;\n    protected $elastica;\npublic function __construct()\n{\n  $this->elasticsearch  = ClientBuilder::create()->build();\n\n  $elasticaConfig=[\n    'host' => 'localhost','port' => 9200 , 'index' => 'library'\n  ];\n\n  $this->elastica = new ElasticaClient($elasticaConfig);\n}\n\npublic function test()\n{\n  dump($this->elasticsearch);\n\n  echo \"Retriving Document:\\n\";\n  $params = [\n    'index' => 'library' , 'type' => 'books' , 'id' => '1'\n  ];\n\n  $response = $this->elasticsearch->get($params);\n  dump($response);\n}\n\n}\nThanks . My version Elastica v.0.20.5. I included  \"ruflin/elastica\": \"dev-master\" in my composer.json file. How do i fix this issue.\nMy autoloader file is as follows.\n// autoload.php @generated by Composer\nrequire_once DIR . '/composer/autoload_real.php';\nreturn ComposerAutoloaderInit3ce05896db576aaffcf50739b9d837e4::getLoader();\n. \n[Composer\\Downloader\\TransportException]\nThe \"https://packagist.org/p/ruflin/elastica%2408283f02f2b81eb806fd867fa59d\n16df55d3a1ab2a14e60199875c2f1529cd9a.json\" file could not be downloaded (HT\nTP/1.1 404 Not Found)\nhttps://packagist.org/p/ruflin/elastica%2408283f02f2b81eb806fd867fa59d\n16df55d3a1ab2a14e60199875c2f1529cd9a.json\nThe required json file is not found in this wed address. I am using elastic search 6.2...okay will try\nOn Feb 23, 2018 11:27, \"Nicolas Ruflin\" notifications@github.com wrote:\n\nThat seems to be a really old version of Elastica. What Elasticsearch\nversion are you using? Can you try if installing a newer version of\nElastica works?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1463#issuecomment-367917913,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATaGjuI1eqLhHJ0_fvTw_wnL5-TNmYxaks5tXlNdgaJpZM4SJwZs\n.\n. But installing via composer...will automatically install the latest one\nright!?\n\nOn Feb 23, 2018 11:30, \"Nicolas Ruflin\" notifications@github.com wrote:\n\nIf you use 6.2 you definitively have to install the most recent version.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1463#issuecomment-367918283,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATaGjv5yZzhJ4ztz88sCvq_TyiPxbL1dks5tXlP-gaJpZM4SJwZs\n.\n. ```\n{\n    \"name\": \"laravel/laravel\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\"framework\", \"laravel\"],\n    \"license\": \"MIT\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \">=5.6.4\",\n        \"consoletvs/charts\": \"^5.4\",\n        \"cviebrock/laravel-elasticsearch\": \"2\",\n        \"guzzlehttp/guzzle\": \"^6.3\",\n        \"laravel/framework\": \"5.4.\",\n        \"laravel/tinker\": \"~1.0\",\n        \"symfony/process\": \"^3.4\",\n        \"elasticsearch/elasticsearch\": \"~6.0\",\n        \"ruflin/elastica\": \"dev-master\"\n    },\n    \"require-dev\": {\n        \"fzaninotto/faker\": \"~1.4\",\n        \"laravel/homestead\": \"^7.0\",\n        \"mockery/mockery\": \"0.9.\",\n        \"phpunit/phpunit\": \"~5.7\"\n\n},\n\"autoload\": {\n    \"classmap\": [\n        \"database\"\n    ],\n    \"psr-4\": {\n        \"App\\\\\": \"app/\"\n    }\n},\n\"autoload-dev\": {\n    \"psr-4\": {\n        \"Tests\\\\\": \"tests/\"\n    }\n},\n\"scripts\": {\n    \"post-root-package-install\": [\n        \"php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n    ],\n    \"post-create-project-cmd\": [\n        \"php artisan key:generate\"\n    ],\n    \"post-install-cmd\": [\n        \"Illuminate\\\\Foundation\\\\ComposerScripts::postInstall\",\n        \"php artisan optimize\"\n    ],\n    \"post-update-cmd\": [\n        \"Illuminate\\\\Foundation\\\\ComposerScripts::postUpdate\",\n        \"php artisan optimize\"\n    ]\n},\n\"config\": {\n    \"preferred-install\": \"dist\",\n    \"sort-packages\": true,\n    \"optimize-autoloader\": true\n}\n\n}\n```. i have php version 7.0.26.\ni used dev-master because i am unaware of the latest stable version.\nOn Mon, Feb 26, 2018 at 9:22 AM, Nicolas Ruflin notifications@github.com\nwrote:\n\n\nWhat version of PHP do you use?\nWhy do you stick to dev-master instead of a stable release?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1463#issuecomment-368382964,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATaGjgffYzwDRw5ZlQn9APufxT124I-dks5tYiqYgaJpZM4SJwZs\n.\n. i have downloaded the tar file where to to unzip the contents in my laravel project and what corresponding change do i need to make in my controller. thanks for the help... but i still have the problem.... \ni changed the composer file and tried updating it.......i get  the below error \n\nLoading composer repositories with package information\nfile_put_contents(C:/Users/thiru/AppData/Local/Composer/repo/https---packagist.o\nrg/packages.json): failed to open stream: Permission denied\nhttps://packagist.org could not be fully loaded, package information was loaded\nfrom the local cache and may be out of date\nUpdating dependencies (including require-dev)\n[Composer\\Downloader\\TransportException]\n  The \"https://packagist.org/p/ruflin/elastica%2408283f02f2b81eb806fd867fa59d\n  16df55d3a1ab2a14e60199875c2f1529cd9a.json\" file could not be downloaded (HT\n  TP/1.1 404 Not Found). ",
    "jmayoranotandil": "How you resolve the main problem???\n. ",
    "sunviwo": "Hi, I downloaded the elasticsearch archive. Where do I need to decompress it in my symfony2 project? In the bin directory or in a bin's subdirectory?\n. Elasticsearch. I installed FOQElasticaBundle and it downloaded the Elastica dependency. But according to FOQElasticaBundle readme, elasticsearch must be installed first.\n. ",
    "Barralait": "Hey,\nI'm having the same php app/console foq:elastica:populate --> Call to undefined function curl_init() error.\ncURL is installed and running, I see it in my phpinfo(). Elasticsearch is launched, and when I run curl -X GET http://localhost:9200 I get this : \n{\n  \"ok\" : true,\n  \"status\" : 200,\n  \"name\" : \"Copperhead\",\n  \"version\" : {\n    \"number\" : \"0.90.2\",\n    \"snapshot_build\" : false,\n    \"lucene_version\" : \"4.3.1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\nSo I figure that it's correctly launched.\nYet I still have the error. Any ideas?\n. Hey @jappievw and thanks for taking an interest in my problem!\nDunno why I couldn't create a gist, I pastebinned it here:\nhttp://pastebin.com/x4VEkHWq\nI also created a simple php file and put in this code in it:\n$ch = curl_init();\nif ($ch === false) {\n    echo 'false';\n }\nelse {\n    echo 'true';\n}\nThe page shows true...\n. C:\\wamp\\www\\pearexchange.fr>php app/console fos:elastica:populate\nResetting website\nPHP Fatal error:  Call to undefined function Elastica\\Transport\\curl_init() in C\n:\\wamp\\www\\pearexchange.fr\\vendor\\ruflin\\elastica\\lib\\Elastica\\Transport\\Http.ph\np on line 170\nPHP Stack trace:\nPHP   1. {main}() C:\\wamp\\www\\pearexchange.fr\\app\\console:0\nPHP   2. Symfony\\Component\\Console\\Application->run() C:\\wamp\\www\\pearexchange.f\nr\\app\\console:27\nPHP   3. Symfony\\Bundle\\FrameworkBundle\\Console\\Application->doRun() C:\\wamp\\www\n\\pearexchange.fr\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Console\\Applicatio\nn.php:121\nPHP   4. Symfony\\Component\\Console\\Application->doRun() C:\\wamp\\www\\pearexchange\n.fr\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle\\Console\\Applicatio\nn.php:85\nPHP   5. Symfony\\Component\\Console\\Application->doRunCommand() C:\\wamp\\www\\peare\nxchange.fr\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Console\\Application.php:\n191\nPHP   6. Symfony\\Component\\Console\\Command\\Command->run() C:\\wamp\\www\\pearexchan\nge.fr\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Console\\Application.php:904\nPHP   7. FOS\\ElasticaBundle\\Command\\PopulateCommand->execute() C:\\wamp\\www\\peare\nxchange.fr\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Console\\Command\\Command.\nphp:244\nPHP   8. FOS\\ElasticaBundle\\Command\\PopulateCommand->populateIndex() C:\\wamp\\www\n\\pearexchange.fr\\vendor\\friendsofsymfony\\elastica-bundle\\FOS\\ElasticaBundle\\Comm\nand\\PopulateCommand.php:83\nPHP   9. FOS\\ElasticaBundle\\Resetter->resetIndex() C:\\wamp\\www\\pearexchange.fr\\v\nendor\\friendsofsymfony\\elastica-bundle\\FOS\\ElasticaBundle\\Command\\PopulateComman\nd.php:99\nPHP  10. Elastica\\Index->create() C:\\wamp\\www\\pearexchange.fr\\vendor\\friendsofsy\nmfony\\elastica-bundle\\FOS\\ElasticaBundle\\Resetter.php:43\nPHP  11. Elastica\\Index->delete() C:\\wamp\\www\\pearexchange.fr\\vendor\\ruflin\\elas\ntica\\lib\\Elastica\\Index.php:184\nPHP  12. Elastica\\Index->request() C:\\wamp\\www\\pearexchange.fr\\vendor\\ruflin\\ela\nstica\\lib\\Elastica\\Index.php:133\nPHP  13. FOS\\ElasticaBundle\\Client->request() C:\\wamp\\www\\pearexchange.fr\\vendor\n\\ruflin\\elastica\\lib\\Elastica\\Index.php:405\nPHP  14. Elastica\\Client->request() C:\\wamp\\www\\pearexchange.fr\\vendor\\friendsof\nsymfony\\elastica-bundle\\FOS\\ElasticaBundle\\Client.php:16\nPHP  15. Elastica\\Request->send() C:\\wamp\\www\\pearexchange.fr\\vendor\\ruflin\\elas\ntica\\lib\\Elastica\\Client.php:536\nPHP  16. Elastica\\Transport\\Http->exec() C:\\wamp\\www\\pearexchange.fr\\vendor\\rufl\nin\\elastica\\lib\\Elastica\\Request.php:166\nPHP  17. Elastica\\Transport\\Http->_getConnection() C:\\wamp\\www\\pearexchange.fr\\v\nendor\\ruflin\\elastica\\lib\\Elastica\\Transport\\Http.php:49\nThis is the command line error.\nI think the problem comes from my elasticsearch, as the same error happens when I don't have elasticsearch running. But I don't understand as I do think it runs fine:\n[2013-08-03 15:35:01,886][INFO ][node                     ] [Ogord, Aleta] {0.90\n.2}[6404]: initializing ...\n[2013-08-03 15:35:01,893][INFO ][plugins                  ] [Ogord, Aleta] loade\nd [], sites []\n[2013-08-03 15:35:04,053][INFO ][node                     ] [Ogord, Aleta] {0.90\n.2}[6404]: initialized\n[2013-08-03 15:35:04,053][INFO ][node                     ] [Ogord, Aleta] {0.90\n.2}[6404]: starting ...\n[2013-08-03 15:35:04,354][INFO ][transport                ] [Ogord, Aleta] bound\n_address {inet[/0:0:0:0:0:0:0:0:9300]}, publish_address {inet[/192.168.1.15:9300\n]}\n[2013-08-03 15:35:07,772][INFO ][cluster.service          ] [Ogord, Aleta] new_m\naster [Ogord, Aleta][u2HEpOcXRtSKNkQ97FL9ZQ][inet[/192.168.1.15:9300]], reason:\nzen-disco-join (elected_as_master)\n[2013-08-03 15:35:07,845][INFO ][discovery                ] [Ogord, Aleta] elast\nicsearch/u2HEpOcXRtSKNkQ97FL9ZQ\n[2013-08-03 15:35:07,923][INFO ][gateway                  ] [Ogord, Aleta] recov\nered [0] indices into cluster_state\n[2013-08-03 15:35:08,080][INFO ][http                     ] [Ogord, Aleta] bound\n_address {inet[/0:0:0:0:0:0:0:0:9200]}, publish_address {inet[/192.168.1.15:9200\n]}\n[2013-08-03 15:35:08,080][INFO ][node                     ] [Ogord, Aleta] {0.90\n.2}[6404]: started\nand accessing localhost:9200 or running curl -X GET localhost:9200 both give the same result that I posted above.\n. Yeah I just installed everything yesterday and wanted to get it up and working today. Didn't touch anything, code fully up to date.\nHere's my config if it can help. \nfos_elastica:\n    clients:\n        default: { host: localhost, port: 9200 }\n    serializer: ~\n    indexes:\n        website:\n            client: default\n            types:\n                user:\n                    mappings:\n                        username: { boost: 5 }\n                        prenom: { boost: 3 }\n                        nom: { boost: 3 }\n                    persistence:\n                        driver: orm \n                        model: HugoRuggieri\\UserBundle\\Entity\\User\n                        provider: ~\nIn practice the curl_init() function is called by itself and without being included in another namespace.\n```\nprotected function _getConnection($persistent = true)\n{\n    if (!$persistent || !self::$_curlConnection) {\n        self::$_curlConnection = curl_init();\n    }\nreturn self::$_curlConnection;\n\n}\n```\nDunno why the console says it's Elastica\\Transport\\curl_ini(), it does indeed look weird, but this is the actual code that is executed, the original one. Just did a composer update and everything was fine.\n@ruflin  any ideas ?\n. I'm on PHP 5.4.12, and it's the only version of PHP on my computer :/\nAdding the slash doesn't resolve the error, but it does change the console log a bit: it's not Elastica\\Transport\\curl_init() in cause anymore, but curl_init() alone...\n. @ruflin Thanks so much for helping me.\nI tried running the demo commands for elasticsearch:\ncurl -XPUT 'http://localhost:9200/twitter/user/kimchy' -d '{ \"name\" : \"Shay Banon\" }'\nAnd this is what I got:\ncurl: (1) Protocol 'http not supported or disabled in libcurl\ncurl: (6) Couldn't resolve host 'name'\ncurl: (7) couldn't connect to host\ncurl: (6) Couldn't resolve host 'Shay Banon'\ncurl: (3) [globbing] unmatched close brace/bracket at pos 1\nSo I guess that despite having curl correctly activated there's a problem with my curl library?\n. Ok that's what I did and it worked.\nFor further notice, I also noticed that activating cURL by checking the option in WAMP did not change it in my php.ini, although cURL was activated in the phpinfo() file.\nDon't know if this was the mistake or if the installation was bad, but everything works fine now, thanks a lot to @ruflin  and @jappievw  for the help and the time spent on this! And special thanks again to @ruflin for this awesome bundle.\n. Yeah that could be a good idea. I can write a checklist to make sure cURL is properly configured on Wamp.\n. Done\n. Awesome, really nice!\nCould you also take a look at this? I'm feeling lost again haha.\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/issues/354\n. ",
    "yellow1912": "Very weird, Im getting this same issue but curl is working fine, es is up and running. I can try the curl directly from terminal, it works just fine\ncurl -XPUT 'http://localhost:9200/twitter/user/kimchy' -d '{ \"name\" : \"Shay Banon\" }'\nHowever, it doesnt work with Elastica + FOSElasticSearch. However, if I replace the localhost by the actual id of the machine it works (note that running via terminal using localhost works just fine as well)\n. Can we also update MultiMatch?\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/MultiMatch.php, this should also accepts AUTO\n. Any update on this? I'm looking for a way to use match_phrase_prefix as well\n. Im not familiar with the standards set but I will fork and try.\n. never mind, even though it prints out weird it doesnt seem to cause an issue. I will close this issue within a few hours.\n. I actually get this weird string in the dev.log, I'm not sure if somehow the logger messed that up? Anyhow for my specific issues it was something else, I rebuilt index and all is well again\n. I also need this as well\nTemporarily added this in the parse function to fix it:\n``` php\n// add code to set use JSON_BIGINT_AS_STRING by default\n        if (!isset($args[2])) {\n            $args[2] = 512;\n        }\n    if (isset($args[3])) {\n        $args[3] = $args[3] | JSON_BIGINT_AS_STRING;\n    } else {\n        $args[3] = JSON_BIGINT_AS_STRING;\n    }\n\n```\n. @ruflin I'm using  PHP 5.5.12. The file is JSON.php\nHere is the gist: https://gist.github.com/yellow1912/47418d628415599a5123\n. thank you. I'm closely following your progress here as well.\n. ",
    "wimvds": "I also get the same issue on OS X (10.8.5, with PHP 5.4.27 installed via brew, ruflin/elastica tagged release v1.2.1.0), but it's intermittent (sometimes it works, sometimes it doesn't). But changing the hostname from localhost to the actual host name - as @yellow1912 mentioned above - doesn't really help for me.\nI'm trying to figure out what is going wrong.\n. ",
    "ncrocfer": "I had the same problem and I found a solution here : https://phabricator.wikimedia.org/T73221#761042\nI just forgot to restart Apache (sudo service apache2 restart) and it worked for me.\n. ",
    "Nelrohd": "Yes it's the good one, I will do it this week-end.\n. ",
    "rayward": "I don't think Elastica_Search is quite the right place, as that object represents one individual search, whereas a multi-search consists of many searches.\nI chose Elastica_Client as it already had bulk methods in it, so it seemed to fit there. It could be moved relatively easily to its own distinct object (Elastica_MSearch/Elastica_MultiSearch) though without too much effort.\nIf we went down that route, perhaps Elastica_Search could be cleaned up and made a bit more generic, so that you can build an Elastica_MSearch object out of a set Elastica_Search objects.\nie.\n```\nclass Elastica_MSearch\n{\n    public function addSearch(Elastica_Search $search)\n    {\n        // adds a search to this instance\n    }\npublic function search()\n{\n    // executes the msearch\n}\n\n}\n```\n. @ruflin Agreed.\nI think abstracting out the search API so it can be used in either a stand alone search request or as part of a multi-search is the best approach. This would allow all the parameters and options to be set through objects, rather than passing in the query definitions as it is now. \nI haven't given this much attention the last week, flat out at work!\n. Yes I tested it against 0.19.9 before I changed the tests over to being mocked.\n. This issue can be closed now as the fix has been merged in.\n. Fixes https://github.com/ruflin/Elastica/issues/554\n. @ruflin done.\n. I think its fine as is with it returning the Response object still.\nThe rest of the client code will still throw various exceptions due to actual errors with either the request or connection.\nI'm just proposing removing that block of code that throws the NotFoundException.\n. Will fix, accidental typo :)\n. Fair enough, personal habit of listing private/protected members before public.\n. Incidental change. When I was first implementing this I was initially considering putting all the health data retrieval in this object, before deciding on stand alone objects for the health.\nI'll revert this back.\n. ",
    "rolfvandekrol": "Just opened pull request there.\n. ",
    "F21": "This is the discussion on Elasticsearch's github about the renaming: https://github.com/elasticsearch/elasticsearch/issues/2150\nText queries should still be around in 0.20.* (at least for RC1).\nAn yes, Match and Text are identical and perhaps we can just have Text query extend match query. \nI am not sure how ElasticSearch handles this internally (whether Text is just an alias for Match or not), but if Text and Match are not aliased to each other within elasticsearch, we should leave Text as it is. Reason being that if Match gains some features in the future that is not avaliable to Text queries, then we will not break anything.\n. @ruflin My apologies :smile:  Yes I did, but I realised the problem was not related to this issue at all. I have tested parts of this library (in an app) against 0.90.1 and so far it's fine. \n. @ruflin Awesome! :smile: I kind of need this feature soon, so would like to get it in ASAP :smile: \n. @ruflin actually, I just want a way to do upsert in this form:\njson\n{\n   \"doc\":{\n      \"key\":\"val\"\n   },\n   \"upsert\":{\n      \"anotherkey\": \"anotherval\"\n   }\n}\nSo, if the document exists, key will be updated to val. If it doesn't, a new document {\"anotherkey\": \"anotherval\"} will be inserted.\nThe currently implementation (as far as I can see) only supports upserts using scripts:\njson\n{\n   \"script\":{\n      \"key\":\"ctx.blah.blah\"\n   },\n   \"upsert\":{\n      \"anotherkey\": \"anotherval\"\n   }\n}\n$document->setDocument($document2) does seem weird and inelegant, so we would need a more elegant way to support this (although I am not sure how that should be done at the moment).\n. Have been thinking about doing something like this.\nIdeally, the best way to do this would be to introduce an argument to updateDocument() in the client:\nphp\n public function updateDocument($id, $data, $index, $type, array $options = array(), $upsert = null)\nIf upsert is a string, we treat it as a script:\n``` json\n{\n   \"script\":{\n      \"key\":\"ctx.blah.blah\"\n   },\n   \"upsert\":{\n      \"anotherkey\": \"anotherval\"\n   }\n}\n```\nIf it is an array or a document, we treat it as a document:\njson\n{\n   \"doc\":{\n      \"key\":\"val\"\n   },\n   \"upsert\":{\n      \"anotherkey\": \"anotherval\"\n   }\n}\nupdateDocument() in Type.php would also need to be modified to support the extra parameter.\nWhat do you think?\n. @ruflin When upserting, you can either use a doc or a script for the update portion, but not both of them together.\nI had a look at https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L287, but it only allows updating by a document, not upserting by a document. \nIn https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L284 we can see that there's an implementation for upserting with an update script, but there isn't an implementation to upsert with an update document.\n. So far, my best idea is to just do this:\nphp\n public function updateDocument($id, $data, $index, $type, array $options = array(), $upsert = null)\nWhere $upsert can be an array or Document to create a document if the document does not exist.\nSo, I can do the following:\nphp\nupdateDocument(1, new Elastic\\Script('ctx.y = \"z\"'), 'myindex', 'users', array(), array('newkey' => 'newval'));\nI am guessing the current method of being able to upsert with a script for update would remain as it is:\n``` php\n$document = new Elastica_Document();\n$document->setId(1);\n$document->add('counter', 1);\n$script = new Elastica_Script('ctx._source.counter += count', array('count' => 4));\n$document->setScript($script);\n$type->updateDocument($document);\n```\nBecause I don't think there's a clean way to allow Document to allow upserting by documents.\n. I agree it is probably a bit clunky. I will get a PR out and we can see how it can be improved down the track :smile: \n. Not sure why the test is failing. The failing test is not related to the changes I made.\n. @ruflin All done :smile: \n. There will also be a BC break for the bulk update document action if we go this route. \nSince https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Bulk/Action/UpdateDocument.php#L24 needs to be modified to take Documents and Scripts, should we rename it to setData()?\n. I like the idea of setData() along side setDocument() and setScript().\nWhen setUpsert() is called, nothing happens. We just add a document to be used as the upsert for the script or document.\nWhen update() is called, we check using a method called hasUpsert(), which will then add an upsert property containing the upsert document to the request.\n. Hmm. Not sure why travis isn't building my newer commits.\n. Updated :)\n. @ruflin Possible for this to be merged? :smile: \n. @ruflin Merged with master and resolved conflict in changes.txt :smile: \n. I am not sure how this can be done though.\nPreviously, we would do something like this:\n``` php\n$document = new Elastica_Document();\n$document->setId(1);\n$document->add('counter', 1);\n$script = new Elastica_Script('ctx._source.counter += count', array('count' => 4));\n$document->setScript($script);\n$type->updateDocument($document);\n```\nIn the above, we set the script into the document, and if the document does not exist, the document is used as the upsert. Otherwise the script is used to update.\nHowever, the implementation now is that Scripts and Documents are first class citizens. So, setUpsert() can only ever take a value that is a Document. This situation is the reverse of the current implementation. It does not make sense to use a Script as an upsert, because it is not possible to do so.\nThe implementation now is like this:\n``` php\n$upsert = new Document();\n$upsert->setData(array('myfield' => 'myvalue'));\n$script = new Script('ctx._source.field2 += count; ctx._source.remove(\"field3\")');\n$script->setUpsert($upsert);\n$script->setId(1); //Will use script to update document 1\n$type->updateDocument($script); //Will try to update the document with the script. If it does not exist, upsert using the upsert document.\n$upsert = new Document();\n$upsert->setData(array('myfield' => 'value'));\n$doc = new Document(1, array('myfield' => 'updatedvalue'));\n$doc->setUpsert($upsert);\n$type->updateDocument($doc); //Will try to update the document with the partial document. If it does not exist, upsert using the upsert document.\n```\nNotice that we now use Scripts and Documents as the update. Upsert is only done if people provide a Document to setUpsert().\nLet me know what you think :)\n. I have added some migration info in this PR: https://github.com/ruflin/Elastica.io/pull/8\n. Changelog has been updated.\n. See my reply above.\n. See my reply above.\n. Good idea! :)\n. ",
    "pvonr": "Yes, I saw your file-based approach. Most of the times however applications already use caches like APC or memcached anyway so the callback approach give developers the choice on how to implement  server-configuration caching. \nI didn't changed the Client and Request classes for compatibility reasons. But I totally agree that the functionality could be encapsulated in the base classes.\nRegarding client or transport layer, for me both options are okay. I prefer the client layer as the transport layer is normally handling a single \"connection\" to a server. So It's more natural for me to put the functionality into the client.\n. Sorry for the delayed answer. Storing information in an object rather than an array makes sense. I think server state management should be handled in the Client class. To remove the callback from Request to Client we could pass the Server set as an additional parameter to the send method. What do you think?\nI'm pretty busy right now, but I might be able to do some work over the weekend.\n. ",
    "jamesboehmer": "After I submitted the pull request, I saw that travis went red looking for some fields in the response object.  I took your suggestion and wrapped up the params with a handful of other dummy data to satisfy the other tests.  Build 174 appears to have gone green.\n. ",
    "linusnorton": "If it doesn't work then I would suggest creating a constructor that does not take parameters. As it is it gives the impression that it will work.\n. It's how the Term queries work - I'd mistakenly assumed it was the same way.\nYou can close this but some docs would be good. \n. You beat me to it!\n. ",
    "cassianotartari": "same problem here... any solution?\n. I found the issue, the path refers to the machine that elasticsearch is running I was trying to populate remote server running locally and connecting to outside server at Amazon. So I've added the file to /etc/elasticsearch at remote server and leave the path just with filename to test and worked like a charm. Now I need just to add this copy and paste file to server operation in my capistrano configuration to deploy it.\nI'm running php in one instance and elasticsearch in other.\n. @fprochazka because I'm using Pagerfanta and I'm passing a Elastica\\ResultSet to the template and running across the results with a loop.\nIs there a better and clean way do to this? Just if I set in each iteration of the loop the getData value to a new twig variable...\n. @fprochazka adding this magic method the error stops. The only thing that I've found in twig docs is this http://twig.sensiolabs.org/doc/recipes.html#using-dynamic-object-properties talking about the already implemented magic methods __isset and __get. But when the attribute has null as value it throws the error like I said.\nThanks @rmruano I'll study some different solution like yours\n. @fprochazka ok if you want to read the \"problem is solved\", the problem is solved when I add this method, call {{ elasticaResultVariable.keyName }} and it returns nothing/null in my template.\nP.S.: If you have something interesting to solve the issue in a standardized way please write it down otherwise I dispense comments.\n. @rmruano thanks for the clarification!\n. Thanks @merk! Your first comment solves the issue with Twig. The property is already defined, comes from elasticsearch mapping.\nAnother way that I thought was like I said before:\n{% for result in resultSet %}\n    {% set obj = result.data %}\n    {{ obj.key }}\n{% endfir %}\nBut again, the code would be more clean without this set or calling .data for each property.\n. ",
    "leahaense": "i refactored the code to accept/expect a callable for serializing the object and also added some tests\n. done\n. Oh, I meant to delete this exception class because there now already is a runtime exception. It's removed now and changes.txt is adapted.\n. ok, comments fixed. i hope i caught everything now :)\n. To know about how to use this have a look at the added tests.\n. It can be either array or json. Before sending the request to elasticsearch elastica checks if data is already json and if not it creates json from what's in data. \n. Did you already do something about that? If not I could have a look because I need this quite urgently...\n. I was just starting to write some tests that actually query elasticsearch and when actually passing the boost parameter to the addFunction method I get the following error:\nQueryParsingException[[elastica_test_functionscore] No function with the name [boost] is registered.]\nAccording to documentation you can have a boost parameter for the whole function_score query, but I don't think you can have that for the single functions. Or am I wrong?\n. Well, at some point we should remove the boost parameter from the addFunction because if you provide that parameter atm you get an error from elasticsearch. Or maybe it's just enough to use boost_factor instead of boost, but in that case the addBoostFactorFunction method would somehow be obsolete...\nThanks for merging.\n. It works outside of the functions array, but not inside, and there is already a setBoost on the FunctionScore, so that is covered. I'll test it quickly for all types of functions and get back to you.\n. It works when using boost_factor instead of boost. So the addFunction could be refactored so that either $functionType or $boost needs to be set and the addBoostFactorFunction could be refactored as well to just pass the $boost and no $functionType. What do you think?\n. I know, but I just quickly tested both versions through the library and the POST did not work, the GET did. Didn't investigate further.\nI also used a GET request in the elastic-head thingy and that worked as well, didn't test with POST there\n. So, I quickly tested it again in elasticsearch-head. POST request passing json does not work, POST request with GET parameters or GET request with GET parameters works.\n. @ruflin done, and I also added a refreshAll function on the Client, like optimizeAll\n. Did I break anything?\n. Yeah, makes sense, since the optimize is now actually doing something :)\n. What you can test for example is when deleting documents. They don't actually get deleted but just marked as deleted. In the node stats you see how many documents marked as deleted are in your indices. After the optimize call with argument max_num_segments=1 (making sure that the index is fully optimized) you either see immediately, that the documents are actually deleted, i.e. you get 0 deleted documents in the status, or you see that a merge is currently in progress (under merges in the status) and once the merge is finished you get the 0 deleted documents. \n. It seems like the elasticsearch server is not completely ready yet after a restart or something. I usually get that when restarting elasticsearch when it contains a lot of data and needs some time to sync all the shards. No clue why that happens here though.\nI'll merge master in again.\n. Tests seem to be sort of ok now, besides that one of them did not finish in time...\n. @ruflin would be awesome if you could merge this as soon as possible, if the tests pass. This causes quite some errors on our production system\n. the property is set when setting the _serializer. The symfony2 serializer supports serializer groups that define which properties of the object to be serialized are serialized and which ones are ignored.\n. ",
    "lyrixx": "Hello. I need this feature in one of my project. Do you have any ETA? I could try to contribute, but I'm a very beginner with ES, so I'm sure I'm not the best man to do this job.\n. done.\n. Sure, done ;)\n. ",
    "svandenborne": "Is there already some progress on this? I don't need it urgently but it would be nice to have it in a future release. For now I created the query array myself like:\n```\n$inner_span_near = array();\n$span_near = array();\n$inner_span_term1['span_term'] = array(\"file\" => $term1);\n$inner_span_term2['span_term'] = array(\"file\" => $term2);;\n$inner_terms = array($inner_span_term1,$inner_span_term2);\n$inner_span_near['clauses'] = $inner_terms;\n$inner_span_near['slop'] = 0;\n$inner_span_near['in_order'] = false;\n$inner_span_near['collect_payloads'] = false;\n$clauses = array('span_near' => $inner_span_near);\n$span_term1 = array('span_term' => array(\"file\" => $term3));\n$span_term2 = array('span_term' => array(\"file\" => $term4));\n$clauses2 = array();\n$clauses2[] = $clauses;\n$clauses2[] = $span_term1;\n$clauses2[] = $span_term2;\n$span_near['clauses'] = $clauses2;\n$span_near['slop'] = 12;\n$span_near['in_order'] = false;\n$span_near['collect_payloads'] = false;\n$query = array('span_near' => $span_near);\n$params = array('query' => $query);\n```\nwich gives me:\n{\n  \"query\": {\n    \"span_near\": {\n      \"clauses\": [\n        {\n          \"span_near\": {\n            \"clauses\": [\n              {\n                \"span_term\": {\n                  \"file\": \"term1\"\n                }\n              },\n              {\n                \"span_term\": {\n                  \"file\": \"term2\"\n                }\n              }\n            ],\n            \"slop\": 0,\n            \"in_order\": false,\n            \"collect_payloads\": false\n          }\n        },\n        {\n          \"span_term\": {\n            \"file\": \"term3\"\n          }\n        },\n        {\n          \"span_term\": {\n            \"file\": \"term4\"\n          }\n        }\n      ],\n      \"slop\": 12,\n      \"in_order\": false,\n      \"collect_payloads\": false\n    }\n  }\n}\n. ",
    "simplechris": "Actually, a far easier way to achieve this is to simply overwrite _getBaseName() in your custom class.\nclosing.\n. ",
    "piotrkosytorz": "https://github.com/Exercise/FOQElasticaBundle/issues/212#issuecomment-12539620\n. ",
    "shulcsm": "I'm not sure you understood me. The question is: Why don't you use them as objects? Look at the link i posted.\n$innerQuery = new Query();\n$outerQuery = new Query();\n$outerQuery->setQuery($innerQuery);\n$innerQuery->setParam('param', 'value');\nData in $outerQuery doesn't change, because you are passing around arrays.\nYou can't modify the object by reference. So you have to worry about the flow and order of query building. It kinda defeats the purpose of query objects, doesn't it?\n. To find out more take a look at any DBAL query builder(this is what i expected from this library), they build the whole thing and have something like ->compile() at the end to produce string/array/whatever as a scalar result.\n. I don't see point of changing everything in query via raw array, but nothing prevents you form creating setFromArray method or you could create factory methods and do something like $myQuery = Query::createFromArray(Array $array); and just replace it with the new object?\nWhat goes for clone is I suggest not to mess with default clone behavior (shallow copy) and magic methods because it can be confusing. Add separate method for deep copying if that's commonly required operation.\n. ",
    "dstillman": "Sure\u2014I can add a test.\nWith this in place, the test for $type->deleteById('*'); actually fails with a NotFoundException instead of the expected ResponseException. Not sure what the correct behavior is there. I know ElasticSearch supports wildcard queries, but I assume in this context the NotFoundException is correct?\n. I think NotFound makes sense in the context of this API. If you're asking for an id, treating it as a literal seems reasonable, whether or not it could actually be valid. If certain characters aren't valid in ids in ElasticSearch (which I don't know, but I assume is the case), I would think it's just up to ElasticSearch to reject those when you try to create them.\n. To put another way, it shouldn't be possible to construct an invalid URL just by requesting something by id in Elastica, whether or not that id could be valid.\n. ",
    "cogitatio": "I didnt know either, thats why i skipped the test. Testing of random functionality is not replicable, unless we can mock the shuffle function.\n. fixes #557\n. done :)\n. ",
    "cpliakas": "Sorry for the lack of attention to the tests :-(. Latest commit should fix the issues.\n. @munkie, I would agree with that statement. As mentioned in another issue I probably won't have time to push this forward, and since it is a lateral change I would't be opposed to it being closed unless someone else wants to push it forward. Thanks for all your work on this great project.\n. Will do. Thanks for reviewing.\n. Hi @ruflin. Sorry for disappearing. Unfortunately I got hit by the proverbial bus with work and won't have much time (if any) to write code. This is a great project, but unfortunately I don't see myself having the time to push this effort forward in the near future.\n. ",
    "wk8": "Just added the tests :-)\n. Thanks :-)\n. Sorry about that, shouldn't have done that mistake. https://github.com/ruflin/Elastica/pull/339.\n. ",
    "webpatser": "I was just going to mention that :-)\n. Added the @deprecated. And updated the @param in setSize to use the @size instead of $limit.\n. I can add a simple session so on a per client basis the requests are using all nodes. Maybe also nodes that are down should be checked before adding to the pool. Is there a function for that already?\n. Ah no problem.. I'll just comment then after a commit for the heads-up.\n. OK, i;ll leave it out then.. I'll commit an update in a few minutes. But then it will always pick the first connection in the pool (instead of the last)...\n. OK, removed the shuffle..\n. Ah Yes.. That second is a mistake... I;ll update it.\n. http://guzzlephp.org\nhttps://github.com/guzzle\n. OK. I'll create a pull request for it, for you all to play with.. \n. Just like thrift, we can make a new adapter for it.\n. I know.. I had a pull request using a simple random to connect to different hosts..\nhttps://github.com/ruflin/Elastica/pull/344\nFor some reason they wanted to do the connection shuffle in a different way. But I guess it's never implemented.\n. ",
    "eborden": "To clarify this. Fuzzy creates incorrect output when fed bad input (st in st out). Fuzzy will accept a 2 dimensional array and output as such:\n\"query\": {\n    \"fuzzy\": {\n      \"foo\": [{\"value\": \"baz\"}]\n    }\n  }\nThis works for many query types, but not fuzzy. If passed a 2 dimensional array an exception should be thrown.\n. Yes, this is true add/set do have different connotations. Fuzzy seems like it could easily just use a constructor for its creation. It is a very limited query in syntax:\n__constructor(String $field, String $value, Numeric $boost)\nWith a parameters method for things such as \"min_similarity\", \"max_expansion\", etc.\n. No tests on this commit, just a sketch.\n. Hey Sorry, I haven't been able to get back to this because of other priorities. I'll likely have time next week.\n. This should be good to go. The new methods are outputting as expected and the deprecated method now has a bit of sanity checking. Sorry it took me so long to get this one going, I ended up not needing fuzzy for my project so this work got put on the back burner.\n. Woops, this one has work from my other pull request in it. Feel free to deny it.\n. Okay, this is good to go.\n. That could be related to my roll back, though i don't see why that would cause conflicts.\n. ",
    "gigablah": "I just took a look at the code again, and it seems that servers is basically doing the same thing as connections parameter. So I changed the approach to merge both arrays together. I've also added a test case.\n. Yeah, that was what I figured. If it's in for BC, might as well make it work :)\n. ",
    "brettdanger": "Please merge this to master or remove it from the documentation here: http://elastica.io/en/installation\n. ",
    "chris-r": "Oh, I see. I didn't need a mapping (and that page did say elasticsearch \nwould guess), so I missed the parameters you set to make them work. As a \nresult I didn't get any filters. I should read more carefully.\nThe analyzer names I mentioned are used automatically by elasticsearch \n(without having to set them anywhere). \"default\" is used for either, \n\"default_index\" and \"default_search\" just for those operations. See \n\"Default Analyzers\" on this page:\nhttp://www.elasticsearch.org/guide/reference/index-modules/analysis/\nMy mistake, but you might want to mention the default names for people \nwho decide not to use a mapping.\n. Sure. I sent a pull request to the Elastica.io repository. I'm new to this, but I hope I did it correctly. \n. Sure!\n. ",
    "theirf": "No, I did not. I am confused by those. I apologise for being such a begineer / noob, but I would really like to use Elastica.\nI have unzipped and put the files in www/elastica on my server. I am not using composer. I am stuck on how to do the following from the installation documentation: \" When you make an instance of \\Elastica\\Client, the function will check if there is a file with that class in /var/www/Elastica/Client and load it. \".\nHow do I made an instance of \\Elastica\\Client ? \nAnd how do I use PHP's spl_autoload_register to include Elastica in my index.php\nDo I just put the following code in my index.php that is at www/elastica/index.php ? \n```\nfunction __autoload_elastica ($class) {\n    $path = str_replace('\\', '/', substr($class, 1));\nif (file_exists('/var/www/' . $path . '.php')) {\n    require_once('/var/www/' . $path . '.php');\n}\n\n}\nspl_autoload_register('__autoload_elastica');\n//Or using anonymous function PHP 5.3.0>=\nspl_autoload_register(function($class){\nif (file_exists('/var/www/' . $class . '.php')) {\n        require_once('/var/www/' . $class . '.php');\n    }\n});\n```\nMy sincerest apologies for being such a beginner. I hope you are willing to help me.\n. I got some help from a friend of mine. So, now I have an index.php file in www/elastica/ and also the elastic search files are installed and running in the same dir.\nThe index.php has the following code:\n    <?php\n    spl_autoload_register(function($class){\n```\n    if (file_exists('/var/www/' . $class . '.php')) {\n        require_once('/var/www/' . $class . '.php');\n    }\n});\n$elasticaClient = new \\Elastica\\Client();\n?>\n```\nDoes that look good? Now, that ElasticSearch is installed and running can I run the demos without errors? Are there any demos that take input from an html input-field of type text or search ? Or any demos have have a results page? \nThank you for your help.\n. Okay, good. Thank you for helping.\nI am now trying the test that you linked to, which is also on my server in /elastica/test/lib/Elastica/Test/SearchTest.php which is the same file as the test you linked to, but I am still getting the HTTP 500 error.\nEven now that ElasticSearch is installed and running.\nHere is an image of the exact error I am getting: \n\n. so I just run the index.php script that has this code below in it and then I can run the tests in the command line, too?\n```\n<?php\nspl_autoload_register(function($class){\nif (file_exists('/var/www/' . $class . '.php')) {\n    require_once('/var/www/' . $class . '.php');\n }\n\n});\n$elasticaClient = new \\Elastica\\Client();\n?>\n```\nCan Elastica be used over the web at all or only command line ?\n. Yes, it sounds like i do. Oh, okay. So the tests are command-line tests, but the elastica can be used over the web.\nAh, okay. \nYes, I installed elastic search on the host. So, now, the next step is storing and indexing documents in the index.php php page that I made earlier, correct ?\nI just had tor relax and read the documentation, it was pretty easy to follow :-)\nThis is what my index.php looks like now, does it look good? Should I be able to visit in a browser and get the results printed out on the page as long as elasticsearch is running?\n```\n <?php\n spl_autoload_register(function($class){\nif (file_exists('/var/www/' . $class . '.php')) {\n    require_once('/var/www/' . $class . '.php');\n}\n\n});\n$elasticaClient = new \\Elastica\\Client();\n// Load index\n $elasticaIndex = $elasticaClient->getIndex('index');\n// Create the index new\n $elasticaIndex->create(\n    array(\n        'number_of_shards' => 4,\n        'number_of_replicas' => 1,\n        'analysis' => array(\n            'analyzer' => array(\n                 'indexAnalyzer' => array(\n                    'type' => 'custom',\n                    'tokenizer' => 'standard',\n                    'filter' => array('lowercase', 'mySnowball')\n                ),\n                'searchAnalyzer' => array(\n                     'type' => 'custom',\n                     'tokenizer' => 'standard',\n                     'filter' => array('standard', 'lowercase', 'mySnowball')\n                )\n             ),\n            'filter' => array(\n                 'mySnowball' => array(\n                    'type' => 'snowball',\n                    'language' => 'German'\n                )\n            )\n        )\n     ),\n    true\n );\n//Create a type\n$elasticaType = $elasticaIndex->getType('item');\n// Define mapping\n$mapping = new \\Elastica\\Type\\Mapping();\n$mapping->setType($elasticaType);\n$mapping->setParam('index_analyzer', 'indexAnalyzer');\n$mapping->setParam('search_analyzer', 'searchAnalyzer');\n// Define boost field\n$mapping->setParam('_boost', array('name' => '_boost', 'null_value' => 1.0));\n// Set mapping\n$mapping->setProperties(array(\n    'id'      => array('type' => 'integer', 'include_in_all' => FALSE),\n    'user'    => array(\n        'type' => 'object',\n        'properties' => array(\n             'name'      => array('type' => 'string', 'include_in_all' => TRUE),\n             'fullName'  => array('type' => 'string', 'include_in_all' => TRUE)\n        ),\n    ),\n    'msg'     => array('type' => 'string', 'include_in_all' => TRUE),\n    'tstamp'  => array('type' => 'date', 'include_in_all' => FALSE),\n    'location'=> array('type' => 'geo_point', 'include_in_all' => FALSE),\n    '_boost'  => array('type' => 'float', 'include_in_all' => FALSE)\n));\n // Send mapping to type\n$mapping->send();\n// The Id of the document\n$id1 = 1;\n// Create a document\n$content1 = array(\n    'id'      => $id1,\n    'user'    => array(\n        'name'      => 'mewantcookie',\n        'fullName'  => 'Cookie Monster'\n    ),\n    'msg'     => 'Me wish there were expression for cookies like there is for apples. \"A cookie a day make the doctor diagnose you with diabetes\" not catchy.',\n    'tstamp'  => '1238081389',\n    'location'=> '41.12,-71.34',\n    '_boost'  => 1.0\n );\n // First parameter is the id of document.\n$document1 = new \\Elastica\\Document($id, $content1);\n// Add tweet to type\n$elasticaType->addDocument($document1);\n// Refresh Index\n$elasticaType->getIndex()->refresh();\n// The Id of the document\n$id2 = 2;\n// Create a document\n $content2 = array(\n     'id'      => $id2,\n    'user'    => array(\n        'name'      => 'melikeapple',\n        'fullName'  => 'Steve Jobs'\n     ),\n     'msg'     => 'I like apple. It is the best company ever',\n    'tstamp'  => '1238081389',\n    'location'=> '41.12,-71.34',\n    '_boost'  => 1.0\n);\n// First parameter is the id of document.\n$document2 = new \\Elastica\\Document($id, $content2);\n// Add tweet to type\n $elasticaType->addDocument($document2);\n// Refresh Index\n$elasticaType->getIndex()->refresh();\n// The Id of the document\n$id3 = 3;\n// Create a document\n$content3 = array(\n    'id'      => $id3,\n     'user'    => array(\n        'name'      => 'chefCM',\n        'fullName'  => 'Cookie Monster'\n    ),\n    'msg'     => 'I only put the world best chocolate in my cookie',\n    'tstamp'  => '1238081389',\n    'location'=> '41.12,-71.34',\n    '_boost'  => 1.0\n);\n// First parameter is the id of document.\n$document3 = new \\Elastica\\Document($id, $content3);\n// Add tweet to type\n$elasticaType->addDocument($document3);\n// Refresh Index\n$elasticaType->getIndex()->refresh();\n// The Id of the document\n$id4 = 4;\n// Create a document\n$content4 = array(\n    'id'      => $id4,\n    'user'    => array(\n         'name'      => 'chefCM',\n         'fullName'  => 'Cookie Monster'\n    ),\n     'msg'     => 'My cookie recipie is secret',\n    'tstamp'  => '1238081389',\n    'location'=> '41.12,-71.34',\n    '_boost'  => 1.0\n);\n// First parameter is the id of document.\n$document4 = new \\Elastica\\Document($id, $content4);\n// Add tweet to type\n$elasticaType->addDocument($document4);\n// Refresh Index\n$elasticaType->getIndex()->refresh();\n// The Id of the document\n $id5 = 5;\n // Create a document\n$content5 = array(\n'id'      => $id5,\n     'user'    => array(\n         'name'      => 'buddha',\n         'fullName'  => 'Sidhartha Guatama'\n     ),\n    'msg'     => 'Desire is the cause of suffering',\n     'tstamp'  => '1238081389',\n     'location'=> '41.12,-71.34',\n     '_boost'  => 1.0\n );\n// First parameter is the id of document.\n$document5 = new \\Elastica\\Document($id, $content5);\n// Add tweet to type\n$elasticaType->addDocument($document5);\n// Refresh Index\n$elasticaType->getIndex()->refresh();\n// Define a Query. We want a string query.\n $elasticaQueryString   = new Elastica\\Query\\QueryString();\n //'And' or 'Or' default : 'Or'\n$elasticaQueryString->setDefaultOperator('AND');\n$elasticaQueryString->setQuery('cookie');\n// Create the actual search object with some data.\n$elasticaQuery      = new Elastica\\Query();\n$elasticaQuery->setQuery($elasticaQueryString);\n//Search on the index.\n $elasticaResultSet     = $elasticaIndex->search($elasticaQuery);\n$elasticaResults    = $elasticaResultSet->getResults();\n$totalResults       = $elasticaResultSet->getTotalHits();\nforeach ($elasticaResults as $elasticaResult) {\n    var_dump($elasticaResult->getData());\n}\n?>\n```\n. I'm assuming there is something wrong with it because I get an HTTP 500 error even when elasticsearch is running. Most of this code is from the guide, do you see what I am doing wrong.\nThank you very much for all your help!\n. Ah, I didn't know that. \nActually, I simplified the index.php so that it only added one document. Now, I am not getting any errors, but I am getting a blank page with nothing in the view-source even though I believe I am echo-ing each of the results. \nWhich logically is only one because the search for the work 'cookie' only appears once in the single document that was added.\nHere is the code. This is as simple as I could make it:\n```\n<?php\n spl_autoload_register(function($class){\nif (file_exists('/var/www/' . $class . '.php')) {\n    require_once('/var/www/' . $class . '.php');\n}\n\n});\n$elasticaClient = new \\Elastica\\Client();\n// Load index\n $elasticaIndex = $elasticaClient->getIndex('index');\n// Create the index new\n $elasticaIndex->create(\n    array(\n        'number_of_shards' => 4,\n        'number_of_replicas' => 1,\n        'analysis' => array(\n            'analyzer' => array(\n                  'indexAnalyzer' => array(\n                    'type' => 'custom',\n                     'tokenizer' => 'standard',\n                     'filter' => array('lowercase', 'mySnowball')\n                 ),\n                 'searchAnalyzer' => array(\n                      'type' => 'custom',\n                      'tokenizer' => 'standard',\n                     'filter' => array('standard', 'lowercase', 'mySnowball')\n                 )\n              ),\n            'filter' => array(\n                 'mySnowball' => array(\n                     'type' => 'snowball',\n                    'language' => 'German'\n                )\n            )\n        )\n     ),\n    true\n );\n//Create a type\n$elasticaType = $elasticaIndex->getType('item');\n// Define mapping\n$mapping = new \\Elastica\\Type\\Mapping();\n$mapping->setType($elasticaType);\n$mapping->setParam('index_analyzer', 'indexAnalyzer');\n$mapping->setParam('search_analyzer', 'searchAnalyzer');\n// Define boost field\n$mapping->setParam('_boost', array('name' => '_boost', 'null_value' => 1.0));\n// Set mapping\n$mapping->setProperties(array(\n    'id'      => array('type' => 'integer', 'include_in_all' => FALSE),\n    'user'    => array(\n        'type' => 'object',\n        'properties' => array(\n             'name'      => array('type' => 'string', 'include_in_all' => TRUE),\n             'fullName'  => array('type' => 'string', 'include_in_all' => TRUE)\n        ),\n    ),\n    'msg'     => array('type' => 'string', 'include_in_all' => TRUE),\n    'tstamp'  => array('type' => 'date', 'include_in_all' => FALSE),\n    'location'=> array('type' => 'geo_point', 'include_in_all' => FALSE),\n    '_boost'  => array('type' => 'float', 'include_in_all' => FALSE)\n));\n // Send mapping to type\n$mapping->send();\n// The Id of the document\n $id1 = 1;\n// Create a document\n$content1 = array(\n    'id'      => $id1,\n     'user'    => array(\n        'name'      => 'mewantcookie',\n         'fullName'  => 'Cookie Monster'\n     ),\n     'msg'     => 'Me wish there were expression for cookies like there is for apples. \"A cookie a day make the doctor diagnose you with diabetes\" not catchy.',\n     'tstamp'  => '1238081389',\n    'location'=> '41.12,-71.34',\n     '_boost'  => 1.0\n  );\n // First parameter is the id of document.\n $document1 = new \\Elastica\\Document($id, $content1);\n// Add tweet to type\n $elasticaType->addDocument($document1);\n // Refresh Index\n$elasticaType->getIndex()->refresh();\n// Define a Query. We want a string query.\n  $elasticaQueryString   = new Elastica\\Query\\QueryString();\n //'And' or 'Or' default : 'Or'\n $elasticaQueryString->setDefaultOperator('AND');\n $elasticaQueryString->setQuery('cookie');\n// Create the actual search object with some data.\n$elasticaQuery      = new Elastica\\Query();\n $elasticaQuery->setQuery($elasticaQueryString);\n//Search on the index.\n $elasticaResultSet     = $elasticaIndex->search($elasticaQuery);\n$elasticaResults    = $elasticaResultSet->getResults();\n$totalResults       = $elasticaResultSet->getTotalHits();\nforeach ($elasticaResults as $elasticaResult) {\n    var_dump($elasticaResult->getData());\n    echo($elasticaResult->getData());\n}\n?>\n```\nDo you still want to see the Apache log even though I am not getting any errors. And thank you so much for helping me get this working. I greatly appreciate it! :-)\nIf you want a link to the running example online where I get a blank page, I'm more than happy to link that to you. \n. Thank you. Yes, I know that is ugly and Bad-Practice. I apologise for that, I usually don't do that. I usually implement on my testing-server first.\nOkay, I turned on display errors and I get the following error:\nFatal error: Class 'Elastica\\Client' not found... ...on line 13\nThat seems like it is saying that the elastica files are not in that dir, but I set up and installed elasticsearch and elastica exactly following the guide. At least I think I did.\nHere is what the dir that index.php is in looks like:\n\n. Yes, that makes sense. Except, I changed it so that it is looking for the class in \\Elastica\\Client in the right dir as it is in lib, but I am still getting the error.\nI even added a getcwd to make sure I am in the right dir.\nHere is what I changed the code, the part that had the error, to:\n```\n<?php\n ini_set('display_errors',1); \n error_reporting(E_ALL);\nspl_autoload_register(function($class){\nif (file_exists('/var/www/elastica/' . $class . '.php')) {\n    require_once('/var/www/elastica/' . $class . '.php');\n}\n\n});\necho \"Current Working Dir: \" . getcwd() . \"\\n\";\n$elasticaClient = new lib\\Elastica\\Client();\n```\nHere is what I am not getting in the page:\nCurrent Working Dir: /webgit/webroot/home/irfan/www/elastica Fatal error: Class 'lib\\Elastica\\Client' not found in /webgit/webroot/home/irfan/www/elastica/index.php on line 13\nBut, the lib folder and its contents are in www/elastica/ \n. Oh, I don't know where I got the /var/www from. Apologies.\nI'm trying the absolute path the the files on my server and the relative path based on index.php, but neither of them seem to be working.\nThe file_exists() is failing as proven by the echo I put in the else.\n```\n<?php\n     ini_set('display_errors',1); \n     error_reporting(E_ALL);\n spl_autoload_register(function($class){\n\n    if (file_exists('/webgit/webroot/home/irfan/www/elastica/lib/Elastica/' . $class . '.php')) {\n        echo \" found \\n \";\n        require_once('/webgit/webroot/home/irfan/www/elastica/lib/Elastica/' . $class . '.php');\n    }\n    else {\n        echo \" not found! \";\n}\n\n});\n// echo \"Current Working Dir: \" . getcwd() . \"\\n\";\n$elasticaClient = new \\webgit\\webroot\\home\\irfan\\www\\elastica\\lib\\Elastica\\Client();\n```\nI tried both webgit/webroot/home/irfan/www/elastica/lib/Elastica/' ( absolute ) and /elastica/lib/Elastica/ ( relative ).\nI apologise for being such a hassle. And if I am being stupid. Thank you for helping me. I'm very grateful.\n. You are correct. I have not used namespaces before. \nHmmm, I tried that, but ' not found! ' is still being echo-ed and I get the same error:\nnot found! Fatal error: Class 'Elastica\\Client' not found in /webgit/webroot/home/irfan/www/elastica/index.php on line 17\n. I solved this issue. I had to replace the backslashes in $class with forward slashes using $class = str_replace('\\', '/', $class); now the script runs without error.\n. ",
    "darkwish121": "Thanks for reply now my mind is clear about it. Good work\n. Yes this is only apply to terms facet and terms stats facet\nOn Thu, Jul 10, 2014 at 3:45 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\nDoes this only apply to Terms & Terms_stats facets or also to other?\nHere for more details on the size and shard_size for Terms Facet:\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-facets-terms-facet.html\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/648#issuecomment-48589746.\n. \n",
    "StefanGla": "Thank you! Now it works.\nAnother issue, maybe a pull request: Are there some examples for rendering facets? I did not find any of them. Maybe some rendering snippets / view helpers could be added for each type of facet?\n. ",
    "Crell": "Notice: Undefined index: index in Elastica\\Response->isOk() (line 111 of /blah/blah/vendor/ruflin/Elastica/lib/Elastica/Response.php).\nAccording to composer, I'm wrong about the version. :-)  I'm using: \"ruflin/Elastica\": \"v0.20.5.0.RC1\"\n... Which I just recall you saying we shouldn't be using!  I updated the other system, but not this one.  Let me try the dev.\n. After updating to dev-master, the error went away.  Looks like it is fixed then.  Sorry for the noise.\nAny idea when the next tagged release is due?\n. ",
    "kwonder": "Here is my code segment that worked in v0.19.8.0, but when I change to  v0.20.5.0.RC1, the result contains all records of this type regardless of the type I want to search. Please help me. Thank you!\n\n$client = new Elastica_Client();\n$index = new Elastica_Index($client, 'index');\n$type = new Elastica_Type($index, 'friend');\n$query = new Elastica_Query_Builder('{\n    \"query\": {\n      \"bool\": {\n        \"must\": [\n          {\n            \"term\": {\n              \"friendType\":  1\n            }\n          },\n          {\n            \"term\": {\n              \"status\":1\n            }\n          },\n          {\n            \"term\": {\n              \"_userId\" :\"5115baaa3856f2b2270002d7\"\n            }\n          }\n        ]\n      }\n    }\n}');\n$query = new Elastica_Query($query->toArray());\n$countFL = $type->count($query);\n\n. ",
    "skymeyer": "According to http://elasticsearch-users.115913.n3.nabble.com/Bool-filter-does-not-support-quot-minimum-number-should-match-quot-td4018943.html it seems this was never supported on Boolean filters, only on Boolean query. Since 0.19 ES now throws a proper error. The default value was already removed in Elastica on a previous commit https://github.com/ruflin/Elastica/commit/b993eb9413c9024ed40eb0d33d978d6b19bfe12f\n. changelog updated\n. \"ruflin/elastica\": \"dev-master\"  should do the trick\nA good article to understand how composer stability level is determined can be found here:\nhttps://igor.io/2013/02/07/composer-stability-flags.html\n. You can pass in additional curl options into Elastica like this without hacking into the code:\n``` php\n$EsParams = array(\n    'host' => 'my.elastisearchserver.com',\n    'port' => '443',\n    'transport' => 'Https',\n    'curl' => array(\n        CURLOPT_USERPWD => 'user:passw0rd',\n        CURLOPT_SSL_VERIFYPEER => false,\n        ...\n    ),\n);\n$EsClient = new \\Elastica\\Client($EsParams);\n```\n. Oh yeah sure, that was just an example, just disable verify peer should be sufficient.\n. Also note that the api for the config syntax has been changed depending on with release you are going to use:\nUp to 0.19.8 --> https://github.com/ruflin/Elastica/blob/v0.19.8.0/lib/Elastica/Client.php#L49\nNewer versions --> https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L40\n. I do not think that psr/log is to be considered as a dependency for development only as its actually referenced and used in the code in multiple places consuming its interface.\nThe lazy loading of the logger object seems okay depending on the log configuration, but I would cleanup this section https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L641 a bit moving the lazy loading into its own method and make psr/log a requirement. Its just an interface dependency which is very safe as you don't have to bump its version in the next coming years.\nAnother possibility is to remove the logging entirely out of Elastica including the references to psr/log. Frameworks can extend Elastica\\Client to wrap around request method and provide their own logging. The Elastica FOS bundle does it this way for example and digest its own logging details from there: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Elastica/Client.php#L46\nThis approach doesn't require any logging functionality at all in Elastica itself. \nI would also suggest to move to PSR-4 class loading as PSR-0 is deprecated.\n. Yeah agree, it used to be just the LoggerInterface ... not sure why they put all the other stuff in there.\n. Seems there is a related one here also suggesting to remove Log from Elastica:\nhttps://github.com/ruflin/Elastica/issues/482\n. @ruflin fyi the \"crap\" we are talking about is the psr/log repo itself ;-)\n. I'm also more pro removing the logging functionality all together as Elastica isn't supposed to deal with the logging implementation - this was also proposed/discussed a while back in #482. @fprochazka 's proposal seems a good approach.\n. I'll see what I can do this week @ruflin \n. Not getting a lot of love from one of the stacks ... OutOfMemoryError\n. There is no requirement to change the directory structure for moving to PSR-4, that's totally optional. The code tree isn't that complex worth the effort. PSR-0 is now officially deprecated and all major projects are shifting away from it so I do not see for which reason Elastica shouldn't jump on the band wagon as there is no harm. \nThere might be no direct added value for the library itself (apart from moving the test folder up a bit) - we should encourage adopting the PSR-4 standard unless there is a legit reason not to. Also take a look at this topic https://github.com/composer/composer/issues/1884#issuecomment-21624099 regarding priority in Composer's autoloading (although it doesn't apply when using full classmap). \n. That's correct @ruflin. It will also affect all open PR's so we need to coordinate when you feel is the best time to pull this change in. Maybe best pulling this in just after next planned release ? I need to rebase it anyway as this PR will render invalid every time a new change is pulled into master on the previous directory structure. \n. @ruflin 1.4.0 is out since yesterday, let me know when you want the rebase.\n. Better to redo this yes @ruflin - I'll send a new one.\n. Note that an autoloader is encouraged never to throw any exceptions. See also the recommendation from PHP-FIG on PSR-4: \"Autoloader implementations MUST NOT throw exceptions, MUST NOT raise errors of any level, and SHOULD NOT return a value.\" - http://www.php-fig.org/psr/psr-4. Even when using your own autoloader and not following PSR standards, it is never a good idea to throw exceptions as an application may register multiple loaders through spl_autoload. I agree with @merk that it would make more sense to check for the Elastica built-in classes first though. \n. @zedfmario did you try setting the curl parameter CURLOPT_TIMEOUT_MS in the connection configuration ? This should allow you to set your ms timeout. Curl parameters are processed in Elastica\\Transport\\Http::_setupCurl(). Given the fact that this method is called after CURLOPT_TIMEOUTis being set (see https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php#L79) the CURLOPT_TIMEOUT_MS option should override the previously set timeout (see curl docs \"If both CURLOPT_TIMEOUT and CURLOPT_TIMEOUT_MS are set, the value set last will be used.\" - http://curl.haxx.se/libcurl/c/CURLOPT_TIMEOUT_MS.html).\nI don't think it's a good idea to add yet another transport dependent configuration parameter directly in Elastica.\n. @zedfmario this is just a matter of documentation and doesn't seem tricky at all. The global Elastica timeout parameter can be used by the different supported transports (although memcache is currently not setting it). The specific timeout in milliseconds seems more specific to one transport only. Not sure what @ruflin 's roadmap is for this, but it might make more sense to remove the legacy configuration parameters all together and move it all into the connections configuration - each of which can have transport specific settings (i.e. having a proxy configuration in the global config only makes sense for http/s). This will make it more transparent to include other transport mechanisms for those who need to.\n. @ruflin having some backlog here, will schedule some time soon to take care of this.\n. Agree yes. @ruflin we can handle this in a separate issue if you would like to \"cleanup\" the tests as @dbu mentioned. Not highly needed, just a bit more work.\n. ",
    "cisox": "362\n. ",
    "mattwillo": "@ruflin  My array looks like this\n$servers = array(\n    array('host' => 'foo.mydomain.com', 'port' => 9200),\n    array('host' => 'bar.mydomain.com', 'port' => 9200)\n);\n. I understand your point, but I think it is a nice feature to have, other clusters (e.g. RabbitMQ) provide the same functionality that will allow you to use a Connection to create one or just pass an array and let the library handle it.\nI would consider keeping this as a feature.\nThanks\nMatt\n. Yes, that was a misunderstanding. Excellent, the Pool functionality looks great!\n. ",
    "jokkedk": "The manual states to call \ncurl -XHEAD 'http://localhost:9200/twitter'\nto test the existence of the index twitter.\n. ",
    "Rebekita": "I solved it already ... Something was wrong with the installation, but I read that installing with composer did not give that error, so I switched to Symfony version 2.1, installed Elastica and ElasticaBundle with composer and gave me no more errors.Thanks you! \n. ",
    "filaruina": "Sure!\nNot sure in which test file to add a test for, since there is not a test file specifically to test the ResultSet class.\nShould I create one or maybe add a test (testing the existance of max score) in one of the related test files (SearchTest maybe)?\n. Done! The test is quite simple.\n. ",
    "damienalexandre": "The offsetSet and offsetUnset methods are from the ArrayAccess interface, \nthis allow to set and unset resultSet from the MultiResult via an array like syntax:\n$multiResults['search1'];\n$multiResults['search1'] = new ResultSet()...\nThis is quite powerfull and does not alter the ResultSet object, only the Multi\\ResultSet.\n. Just fixed the variable name. :metal: \n. From my point of view, it's a lot like the Facet mechanism:\n- multiple type of Suggest object are already known: Term & Phrase\n- you add them on a Query like with setFacets (the only diff is that we must keep the array keys, in my example \"my-suggest\" is required)\n- you get the result from the ResultSet\nThe only difference is that there is a dedicated API end-point that Elastica should also expose.\n. We should have a Request Type at least, or a way to hit only the suggestions for a given Search. You are right, your two examples are the sames but the first one return all the documents too, it's like a match all query.\nThe main advantage of the _suggest end point is to allow faster & lighter suggestion only searches (for async suggestion i.e.) - and I think that if Elastica support Suggestion, there must be a way to hit the _suggest only path.\n. We need to decide how to implement this, then the PR will be pretty easy to do.\nSo, here is what we need:\n- the _suggest endpoint should be accessible, from root, from an indices and from a type\n  - this call return a ResultSet\n- the suggest query option must be added to add a suggestion node\n- we need the appropriate getter to get the suggestions from the results\n- the suggestion text can be global or local to each suggestion\n- there is two type of suggestion: simple_phrase and term, and an experimental one: completion\n- new Suggest objects needs to be created:\n  - Elastica\\Suggest\\AbstractSuggest\n  - Elastica\\Suggest\\TermSuggest\n  - Elastica\\Suggest\\SimplePhraseSuggest\nLet's try to imagine the API:\nphp\n// Simple\n$search = new Search($this->getClient());\n$search->addIndex($index);\n$search->addSuggest(\n  new TermSuggest(\"a-name\", array(\"text\" => \"toto\", \"term\" => array(\"field\" => \"body\"))\n);\nThis example lack for the support of global text (we should be able to set multiple Suggest to the search and only set one \"text\", is that code a good idea?\nphp\n$search->setSuggestText(\"toto\");\nGetting back the results should be as easy as this:\nphp\n$results = $search->search();\n$results->getSuggests(); // array('a-name' => ...)\nI do not have much time to explore the other needs but feel free to complete :kissing: \n. Test added (for the existing getFilter method too) :bowtie:\n. Let's make it with Exceptions. \nThis will greatly improve consistency. My own use case does not include adding Result in the ResultSet, only altering them.\n. Done! :shipit: \n. Yes sorry to review after the merge, I was busy busy, this is nice work @lonamiaec - we may close #378 now, what do you think?\n. Commit updated, it was a real bug if you tried to pass an invalid order type to TermsStats->setOrder :neckbeard: \n. \n. I like this :+1: \n. Yes, Symfony catch all notices to throw Exceptions instead.\n. Maybe you could stick to the \"ES_\" prefix like Elasticsearch and travis?\n=> https://github.com/ruflin/Elastica/blob/master/.travis.yml#L15\n. It just tell Elasticsearch to use PHP_INT_MAX -1 as missing value for the sort, and not a very very big integer as it does actually. All the sorting values are given back in the query response so this is a problem when PHP try to decode the JSON with the very very big sorting value.\n. That means Elastica is going to edit all requests containing a sort to handle this case; that may not be the best thing to do - Elastica should not do stuffs on the queries if I do not ask him.\nI like the way they handle this issue in the official PHP client: https://github.com/elasticsearch/elasticsearch-php/pull/146\n@json_decode but with proper Exception support.\n. SearchType is supported but queryCache is not, as you can see here: https://github.com/ruflin/Elastica/blob/e6d442424cebf9024cfd4c0514f816b41ec7b1ca/lib/Elastica/Search.php#L261\nThe way to happend multiple parameters to a search is only:\nphp\n$s = new Search($query);\n$s->addOption(Search::OPTION_SEARCH_TYPE, 'count');\n$s->addOption(Search::TODO, 'true');\n. Wow, looks good! I like it :+1: \n. This may conflict with another network change: the integration of the official php client, which is not PSR7 compatible neither.\n. Good point. No reason to use PUT here, but elasticsearch handle them exactly the same.\nThe official PHP client is also using POST.\n. Could you provide more information?\n\nwhere is hosted your elasticsearch node?\ndoes your PHP can contact this node?\nif you run everything on localhost, what does curl localhost:9200 return?\ncould you paste the code you use for this request?. Looks like your server lack the curl SSL certificates. You can found them here: https://curl.haxx.se/docs/caextract.html\n\nThis does not looks like an issue with Elastica, and this does not explain why your PHP tries to connect to Elasticsearch via HTTPS instead of the default HTTP.. Yes that sentence was not clear, \"-1\" is to disable the refresh. PR updated, thanks!. I'm not sure, let's think about it:\nException\n\n:+1: we keep a strong consistency on the ResultSet\n:-1: empty($resultset[3]); throw an Exception (empty() call offsetGet)\n\nNull\n\n:+1: no Exception on invalid range\n:-1: get some non-Result from a ResultSet, we break consistency\n:+1: compliant with other known implementation \n\nWhatever our choice is, I think offsetSet could also forbid pushing new Result to the ResultSet if we want to force strong consistency (like with the Exception on get).\nI'm ok with both solutions:\n- keeping it that way (you can break the ResultSet)\n- add locks and Exceptions to prevent bad things / unknown offsets\n. Docblock is broken here.\n. Extra line here\n. Use brackets please (like line 37).\n. Maybe $this->_error = true; should be called when there is a Json Exception? (like if ES is not able to answer Json but still manage to return a 200).\n. What is this annotation?\n. Should start $i at 1 to be the same (and avoid document with id=\"0\").\n. ",
    "lonamiaec": "Hi, what happended with this feature? Is there any plan to add it?\n. @damienalexandre I like your approach. \n- Access the _suggest endpoint its a must if we only want suggestions, not hits.\n- I would forget completion type by now, because it can change until it's finished. \n- I think the ResultSet modification its the easiest part, because suggest is present in init function, but we dont save it anywhere.\n-  Global text it's very usefull, and your idea is clear.  \nYour imaginary API is powerfull and simple enough for me :) @ruflin what do you think about it?\n. @ruflin  I've added an small test for testing the structure created to query elastic search, and fixed small things you said before\n. @ruflin here are some more tests. Also change the resultSet to give only suggest search results, not shards info\n. Ok, now i think everything is ok. Some fixes and tests runing\n. Ok, done\n. Of course @ruflin I'll do it today! Thanks @damienalexandre \n. Agree too, i'll work on the rest of the suggest api functionalities \n. ",
    "Tobion": "To clear it up:\n- elastic search error when trying to sort on analyzed string column, but elastica does not throw exception but simply returns empty result set\n- elastic search error when trying to sort on unmapped column (when ignore_unmapped: true, which is default), but elastica does not throw exception but simply returns empty result set\n- mixed response from elastic search with both hits and failures: elastica should log the failures and provide some way to recognise the failures. otherwise we don't know what happened. returning the hits that did not fail (as it already does) is correct.\n. Done https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/326\n. This can be closed as there are already \\Elastica\\Query\\GeoShapeProvided and \\Elastica\\Query\\GeoShapePreIndexed available.. To\n1. Yes it's probably NOT needed to implement the interface (symfony often does not do it as well). This way Psr\\Log remains optional. So we can kick this point.\n2. My point is that Elastica should not care about the Logging implementation. So IMO https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Log.php should be removed, which also means the log option for the client should be removed. The idea is that Elastica only implements what it is designed for (client for ES). There are already several logging libraries out there, so that's not the task of Elastica. So ideally there is only the setLogger method and Elastica uses the logger when one is set. That's it. The idea using Monolog was only necessary when you would want to keep the log option in the client.\n3. If you follow 2., then 3. would automatically be removed because it doesn't make sense anymore.\n4. I don't see what extra information are currently exposed than when using my suggested format?\n5. ok\n. Feel free to use another comparison.\n. Maybe you prefer !empty($data) || '0' === $data\n. @ruflin I changed to comparison to be more clear and added a test. Hope this is ok\n. @ruflin please have a look. kinda important for us\n. Thats what I wanted to suggest right now.\n. Fixed by https://github.com/ruflin/Elastica/commit/16aeeea113e31831b18d3a4698d51fdba1fe38b3\n. @kostiklv good job\n. Closing as wrapping queries in \\Elastica\\Query is currently the correct way to set the other params. We might think about merging \\Elastica\\Query and \\Elastica\\Search in a future major version so it feels less clumsy and nested.. Closing as Elastica\\Query\\Filtered is not the right place to add sorting to.. So if there is a PR to fix typos. This will be part of the changelog. I agree this is too much noise.\n. Closing as a ScriptId class exists now.. Closing as this is fixed since https://github.com/ruflin/Elastica/commit/87b6c3a940d226d7ec65e99e16f027fb0f6aee88#diff-a969b7352ce43aa7d58ef68342c015c6. Solved by #1242. This can be closed since #1023. There are alot more ways to set the location. One of it is for example \n\"geo_bounding_box\" : {\n    \"pin.location\" : {\n         \"top\" : 40.73,\n         \"left\" : -74.1,\n         \"bottom\" : 40.01,\n        \"right\" : -71.12\n    }\n}\nwhich should be supported as well.. Closing because the query exists now https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Indices.php but is deprecated since ES 5 anyway.. Closing as the problem has been sorted out and the fusion of filters and queries is complete.. I think this can be closed as there is getFullError now.. I see, but the errors are nested and the error response structure is not always the same. So it might be hard to find a common object for this.. This issue can be closed. minimum_should_match exists on multi_match as setter, see https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/MultiMatch.php#L102\nAnd with #1242 it also exists on bool query.\n. @ewgRa retry_on_conflict=0 is the default in ES. How is that possible to change that?. You said there is a configuration which can be changed and due that not sending the default value would be a BC break for those people.\n\nWith your PR it will be taken from elasticsearch configuration and it can be not 0, for such developers it will be broke BC.\n\nSo what configuration are you talking about?. Good, then I think this is good to be merged.. Added changelog. Closing because this has been fixed with https://github.com/ruflin/Elastica/commit/9465a9111275df3d6dc31b1da63614d9edddddae#diff-224448d8b4c503195ecc00695250a1c4. Closing as this issue is not about Elastica.. IMO this can be closed. Elastica 2.x is not meant to be compatible with ES 2.x. And there is not enough interest in making it this fully compatible. I'd recommend to upgrade to Elastica 3.x.. The headers are usually empty as long as you don't add custom ones. But normally it doesn't cause a problem. \n@Antoniossss What CURL, PHP and OS version did the empty headers cause a problem with? Is this still relevant for you?. Closing. Please open a PR if you want to move forward with this.. Closing for the reasons given by @ruflin . Closing as this now conflicts due to the switch from filters to queries. Please open a new PR against master if you want to finish this one.. Closing as the query builder does not set filters at all as pointed out by @p365labs . I think what @zplzpl means is that the /test folder is missing. But this is expected because it is not exported, see https://github.com/ruflin/Elastica/blob/master/.gitattributes#L15\nIf you need the test folder, e.g. as inspiration or for submitting PRs, you can use the --prefer-source option of composer. This issue can be closed.. @chriskicker can you create a PR please?. Closing as not related to Elastica. Otherwise please give reproducible steps.. @ruflin This should be ready now. Please have a look. The last piece I need to look at is the error parsing that seems to be a little strange at the moment (not giving as much info as possible). But identifying errors/success seems to work according to the tests. So I can do that in a separate PR.. I added a detailed changelog and cleaned up some duplicated tests that have been forgotten to be removed when the filters got removed. \nI would really prefer not to split the PR because it would create alot of overhead and conflicts like in the changelog if I have to add each entry separately.\nAlso we'd want to use this complete branch for our project until it is merged.\nIf you have questions let me know. We can also have a skype call if you want to chat about something.. @ruflin Do you not try to reflect the versioning of elastica with elasticsearch compatibility? So then the new version would be 5.0.1 and not 5.1 (on the other hand you might not want to add deprecations in a patch version release). I'd like to create another PR afterwards with some tiny changes to upgrade the dependency to elasticsearch 5.1. There does not seem to be anything that breaks with 5.1. But the field to reference scripts by id has been renamed from id to stored. Both versions work but stored seems to be the documented way now, see https://github.com/elastic/elasticsearch/pull/21179\nSo the only thing I'd like to do for 5.1 is to change this line: https://github.com/ruflin/Elastica/pull/1242/files#diff-154aad1be01fbe69e4f5790bcf273893R57\n. I don't think this needs a test because it's difficult to test if ES used a cache or not internally which this flag controls. So this is good to merge IMO.. Added the changelog. @ruflin rebased and ready. Closing as the solution has been given.. Done. Semi-automated. I wrote a regex for most cases.. Could be that this is the first change requiring php 5.5.. \ud83d\udc4d would be nice if you could add a note to the changelog file. This is not the correct solution. Setting the size to 0 is an important optimization as also pointed out by @z38 and the main advantage of using the shortcut count() at all.\nBut I agree the query should not be modified. Please clone the query before setting the size and please also add a test for this.. @XWB do you have time to finish this?. I'd prefer to deprecate the QueryBuilder as it's intention to support many ES version within Elastica is not how Elastica is maintained at the moment.\nAlso a QueryBuilder is usually there to build a query with a fluent interface and with a shorter notation like in Doctrine. But the elastica queries already have a fluent interface themselves and there is nothing to shorten. So using the QueryBuilder doesn't bring any advantage.\n@Zyqsempai could you please give us examples how you use the QueryBuilder just to be sure we're not forgetting a use-case.. The query builder example you gave\n$this->query = $qb->query()->bool()->addShould(\n                                $qb->query()->function_score()->setBoost(100)->setQuery(\n                                    $qb->query()->term()->setTerm('number.raw', $rawQuery)\n                                )\n                            )->addShould(\n                                $qb->query()->function_score()->setBoost(20)->setQuery(\n                                    $qb->query()->term()->setTerm('number.clean', $clearQuery)\n                                )\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', $clearQuery.'*', '2.0')\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', '*'.$clearQuery, '1.5')\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', '*'.$clearQuery.'*')\n                            );\ntranslates to without the query builder:\n$this->query = (new BoolQuery())->addShould(\n                                (new FunctionScore())->setBoost(100)->setQuery(\n                                    (new Term())->setTerm('number.raw', $rawQuery)\n                                )\n                            )->addShould(\n                                (new FunctionScore())->setBoost(20)->setQuery(\n                                   (new Term())->setTerm('number.clean', $clearQuery)\n                                )\n                            )->addShould(\n                                (new Wildcard())->setValue('number.clean', $clearQuery.'*', '2.0')\n                            )->addShould(\n                                (new Wildcard())->setValue('number.clean', '*'.$clearQuery, '1.5')\n                            )->addShould(\n                                (new Wildcard())->setValue('number.clean', '*'.$clearQuery.'*')\n                            );\nSo instead of calling a method you just instantiate a class. It's even shorter. The query builder doesn't add any value.. Having multiple choices without any difference is bad. Bad to maintain, bad to document, bad for consistency, bad for learning. You said yourself you don't know the other style, which shows exactly the problems.. Why would you want to mock the query? You mock requests and responses, but never queries.. Closing as #1269 has been merged. The test file is now in the wrong place.. #1272. Added changelog. Closing as this is expected. If you want to have the tests (to run unit tests in vendor library or whatever reason) you can install it with composer --prefer-source.. @ruflin can you make a patch release as this bug could affect many people?. There is on option in elastic search that extracts the id from a property. See http://www.elasticsearch.org/guide/reference/mapping/id-field/\nSo in theory one does not even necessarily need a document or DocumentObjectInterface in elastica for this.\nAnd forcing it here seems to make use of this elastic search feature impossible.\n. this seems broken ltrim('/', $connection->getPath()) makes no sense.\n. the first parameter of ltrim is the to-be-trimmed value. so the parameter order is wrong at least. but even then, the trim doesn't make sense to me. the path MUST start with a slash to form a valid URI.\n. I didn't try the guzzle transport yet. Was just looking at it out of interest. But I assume the ltrim should be removed.\n. I ran the query against 5.0 and it didn't give an error. So I assume it was only removed by accident from the documentation and is only deprecated, just as geo_distance_range.. I don't understand the question. Elastica\\Document is already imported via use statement.. Would work as well.. Only for the AbstractScript which also contains the language as well. But I don't think anyone implemented an own subclass. The existing subclasses like ScriptFile still have the same constructor. So I don't think anyone is affected by this.. This is the main bug fix.. contains is new in ES 2.2 and was missing so far.. constant name didn't fit the value. Changing this should not break BC because it didn't work anyway so far as the relation was wrongly serialized.. Done. getError always returns string. So this is useless. Property that doesn't even have a getter and is not really used. This has been merged and makes it possible to use the correct read_only setting again which was changed in #738. This has been string before and is still receiving a string in https://github.com/ruflin/Elastica/pull/1251/files#diff-38e97e4d9ad047da8141046011e72f90R66. They are the defaults which are usually not specified again.. removed. Yes. There is no point in adding that anymore since there are visibility modifiers.. I haven't seen other PHP projects using underscore prefix in a long time.. Sounds good. But IMO we should only combine it with some other changes. Only  renaming properties does not justify a BC break.. It got removed before already with es upgrade. \\Elastica\\Search. No need to add a document since it's not relevant for this test.. you also don't need an index or a type for this test.. next() is not meant to return something.. I hope nobody would be affected by this potential bc break as it means people would use the Iterator in a wrong way. As an alternative we could leave the implementation and only change the phpdoc. But that would also be confusing.. also it's not documented. and it would also not be really useful because it might return false or null or whatever when the iterator reaches the end which is what happens as it happens before valid is called. so you cannot rely on chaining next()->getData() like a test does.. @ruflin done. This is ready from my point of view.. ",
    "metaodi": "Yes, exactly. The first two cases are imho an error, so the flow should be interrupted with an exception. For the last case, I should be able to detect these kind of errors, so something like hasError() sounds reasonable.\n. ",
    "bobrik": "Any movements here? I could make pull request for Response (not bulk one), but I have some concerns. Should we throw an exception or a method like Response::hasFailedShards should be enough? Should it be configurable on per-client basis? I guess there are installations where partial results are better than no results and we have exactly this kind of installation.\n. php\ntry {\n    $resultSet = $type->search($query, $options);\n} catch (PartialShardFailureException $e) {\n    // log an exception and move on\n    $resultSet = new ResultSet($e->getResponse(), $query);\n}\nhow about this?\n. You could never know if some shard is failing then. Empty shards are always successful. Are you sure that this is sane default? I'm pretty sure nobody will check that error just like Response::getShardsStatistics.\n. Right, but you are able to recover ResultSet with results from good shards if you really know what you're doing.\nImagine searching for user transactions where all transactions of the same user routed to the same shard, but search request for whatever reason doesn't use any routing. All shards except one will be fine, but all data is missing. This is a bit extreme, but you may loose part of the data easily without even knowing.\n. Yep, the one with PartialShardFailureException.\n. Do you mean something like $connection->getProxy() + default value in Client::$config when you say \"official param\"?\n. I made it more visible and updated changes.txt. Not sure if I could write test for this, though.\n. I'll try to make a test when I have a free time. Sysops fixed our proxy to work with es, so there's no rush :)\n. Please review tests that I've done so far. Do I need to change anything? I'm not sure, maybe running nginx to test proxy is overkill.\nI also didn't fully understand you about \"documentation\". Did you mean phpdoc or something else?\n. There is a test that uses proxy which always returns 403. Do you mean test for ECONNREFUSED on proxy?\nI added link to libcurl docs and removed false, now empty sting acts like disabled proxy. For whatever reason php docs don't explain this option.\n. Yep, I fixed initial code.\n. I fixed code from my proposal, now it has getElasticsearchExceptionName\n. I hope so :) I need to get familiar with travis.ci first, I suppose.\n. I added docs, updated changes.txt and hopefully now it conforms coding standard. Could you take another look?\nFor whatever reason travis didn't catch forced push in this PR, but tests are passing for my fork: https://travis-ci.org/Topface/Elastica/builds/16916574\n. I fixed conflict and renamed protected and private methods.\n. Fixed code style\n. null is for environmental settings (http_proxy or HTTP_PROXY env variables), false is for disabled proxy, string is for actual \"http://host:port\" setting.\n. ",
    "andrey1s": "add some test, update changes.txt\ndependency PSR-3(psr/log) only if logging.\nin the product should be the use of standard data logger and it is no longer necessary\n. added travis test without require-dev, added testing php 5.5\nadded RuntimeException if use log without psr-3\n. update the \"style\"\n. try config\nphp\n$config = [\n'url' =>  env('ELASTICSEARCH_URL', 'https://xxxxxxxxxxxxxx-txf2c57vaupiv7ij6haeusfgsdi.us-east-1.es.amazonaws.com:443/'),\n'transport' => 'Http'\n];\nor\nphp\n$config = [\n'host' =>  env('ELASTICSEARCH_HOST', 'xxxxxxxxxxxxxx-txf2c57vaupiv7ij6haeusfgsdi.us-east-1.es.amazonaws.com'),\n'port' => 443,\n'transport' => 'Https'\n];. for travis, so it did not install, and make additional env (various packages in env), I have PHPUnit is global, tests should be run on production, restore?\n. in future need removed   \"allow_failures: - php: 5.5\"\nand maybe removed Elastica/test/bin/install_php_memcache.sh (http://about.travis-ci.org/docs/user/languages/php/#Preinstalled-PHP-extensions)\n. yes installed\nbut if use IDE need add path for autocomplete, for example (http://www.jetbrains.com/phpstorm/webhelp/enabling-phpunit-support.html)\n. php 5.5 now is RC, it should not influence the development until it is stable, I think so\n. ",
    "danez": "It will not couse troubles if the classes are loaded through the composer autoloader. So if the directory where this package is checked out is written uppercase or lowercase, composer will just use the one being there.\nIf someone is requiring the classes by hand, like we need to do, then this might bring some troubles, but these are fixable. And I think the small group of people who are doing this can handle this situation.\n. by \"requiring the classes by hand\" i mean: use composer to get the package but do not use the autoloader from composer but require the files by hand like: \nphp\nrequire ('vendor/ruflin/Elastica/...');\nOn case sensitive filesystems this may fail. It does for us sometimes already because in our composer json we have the package name lowercase, which leads to a lowercased directory but sometimes (basically on windows) also to uppercase.\nAnd I think having a lowercase package name is just the default behaviour, as all the other packages i know are also lowercase as far as i can see.\n. I added an entry to the changes.txt and rebased my changes to the latest master.\n. ",
    "odolbeau": "changes.txt updated. :)\n. Rebase done. :)\n. 2 tests added and changes.txt updated. :)\n. ",
    "jlinn": "changes.txt has been updated, and the most recent changes from master were merged in.\n. Gotcha.  I'll see what I can do to help.\n. After the fixes in the last three commits here, I was able to get the test suite to pass.  The one error is due to the latest release of the geocluster facet plugin being out of date.  When I installed a version of the plugin compiled from the latest source, that test also passed. \nMany of the issues were resolved after I skipped the test which shut down one of the nodes.  Since the test suite is now run with only two nodes, I think that may be due to some of the subsequent tests attempting to create indices with a replica but not having enough nodes to allocate the replica.\nThere was another failure caused by the /index/_settings request returning a string for \"index.blocks.read_only\" rather than a boolean value.  I've opened an issue to let the ES team know about it, so hopefully it will be corrected in the next release.\n. I've made changes according to your notes, and everything has been merged into this pull request.\n. I've merged in the latest changes from master. \nThe latest release version of the GeoCluster facet (v0.7), isn't compatible with ES 0.90.4, hence the error.  The incompatibility has been fixed in the latest GeoCluster code, so that error should be resolved when the next version of the plugin is released.\n. No idea.  Judging from the commit logs, assuming the jar associated with the 0.0.7 release was actually compiled using the 0.0.7 source, there should be no functional difference between that file and a version compiled from the latest source.  That said, the GeoCluster test passes when I use a version of the plugin compiled from source, and fails when I use the 0.0.7 jar posted on Github.\n. I created an issue detailing the problem and the solution.  It's a pretty quick fix, so hopefully a new version of the plugin will be released soon.\n. Good deal.\n. I've updated changes.txt.\nFor the current version, the dependencies section could look something like this:\nDependencies\n| Project | Version |\n| --- | --- |\n| Elasticsearch | 0.90.7 |\n| Elasticsearch mapper attachments plugin | 1.9.0 |\n| Elasticsearch thrift transport plugin | 1.4.0 |\n| Elasticsearch geocluster facet plugin | 0.0.9 |\n. Cool.  Yeah, the \"required\" column is a good call.\n. Sure, I'll beef up the change description.\nI removed Elastica\\Search::addSuggest() for two reasons:\n1. \"add\" terminology has been used throughout Elastica with the expectation that an add method can be called multiple times and the parameters sent with each call will be added to the object in question (addParam(), addFilter(), etc.). The addSuggest() implementation did not exhibit additive behavior, so this was a bit of a misnomer.\n2. The original Elastica\\Suggest\\AbstractSuggest and Elastica\\Suggest\\Term classes have been re-worked pretty extensively. This represents a breaking change for anybody using the original implementation, so keeping addSuggest() around and marking it as deprecated wouldn't really help with backwards compatibility.\n. I've updated changes.txt and added a couple minor changes.\n. Sure, I can write something up.  Octopress entries are written in markdown, right?\n. Master has been merged in.\n. With the proposed changes in #510, limiting suggestions to a single index can be done like so: \nphp\n$index = new \\Elastica\\Index($client, 'some_index');\n$suggest = new \\Elastica\\Suggest\\Term('suggest_name', 'field_name');\n$suggest->setText('suggest text');\n$suggests = $index->search($suggest)->getSuggests();\n. I fixed those issues.  I'll see what I can do about compiling a list of external changes.  Aside from the removal of those two queries, most of the changes were pretty minor.  \nSorry for spoiling your weekend plans.  ;-)\n. Apparently not.  Sorry about that.  I'll work something up tonight.\n. @phuisman88, an aggregations example can now be found here. The other aggregations function in a very similar manner. \n. I've made the requested changes.  \nGood call on optimize().  I had tried refresh() earlier, but it wasn't working.  Using both seems to have done the trick.\n. ",
    "paul-vasiliev": "I have added a test for Http transport. But I'm not sure what example are you talking about, can you give me a link to it?\n. ",
    "Vrtak-CZ": "updated\n. Updated\n. ",
    "sixteenstudio": "Thanks for getting back to me @ruflin !\nI'm using version v0.90.1.0 of Elastica and I'd have to assume also version 0.90 of elasticsearch, but I can't be completely sure as the IT manager installed it on our servers, but I assume he wouldn't get an earlier version since it was so recently installed.\nI can't say I've completely familiarized with the previous developer's system and Elastica as a whole, but I can tell you a few things that I observe going on\nIn terms of how many documents there are, I see that the _add_multiple function is passed an array of entries, each of these entries contains a primary key as the key and it's value as the value. In this case you can see I passed the fields: id, location, full_name, username and disabled, so that is turned into 5 documents..\nThe type seems to be set as user in this case, but none of the types work across the system, so it is not a naming issue.\nBut as you can see, it cycles through the array of entries and adds them to the documents array as a new \\Elastica\\Document() instance, which after all documents are added to the array, the array is passed to the addDocuments() function, so I can't quite understand why the documents would have an unexpected format since it is being passed directly as an instance of document...\nAnd it worked before, which is the thing I find hardest to understand. Is this possibly a problem with the elasticsearch installation itself?\n. Well only 4 documents failing lead me to realize that the ID was probably being created but not the others. But I've now realized the issue.\nI assumed, from the way the previous developer had coded this and told me it works, is that elasticsearch works by adding an individual document for each field, instead of one document for a set of fields. I thought this was weird, but didn't question it initially as I trusted his experience.\nSo after looking into how documents are stored & indexed on Elastica.io, I realized that he had been adding a document for each field when he should be adding all the fields in one document; When I used addDocument instead of addDocuments on the array of data, it worked perfectly!\nI apologize for wasting your time @ruflin , as this was simply inexperience with the elasticsearch technology! It works very well now and I appreciate the time you've taken to help me, the fact that you pointed out 4 documents failed instead of all 5 flicked a lightbulb on in my head :)\nI will learn more and perhaps start lending a hand, as Elastica is very convenient and extensive client for a lot of the projects I've been working on. Good job! :+1: \n. ",
    "borNfreee": "@ruflin can you create a new release because this PR is not in the last stable release.\nIt's not possible to work with Percolator for now because of this code:\nphp\npublic function matchDoc(Document $doc, $query = null)\n{\n    $path = $this->_index->getName() . '/type/_percolate';\n    ... \n}\nSo /type/ is hardcoded and I always get MapperParsingException.\nThank  you.\n. Hi @ruflin ,\nactually it's very urgent because we use ElasticaBundle that uses only stable release of Elastica in composer (through ~0.20 in requirements).\nAs I understand I can't fetch dev verision of Elastica repository. So if you can, please do it in the near future.\n. @ruflin Great, thank you!\n. I got query and additional parameters this way:\n``` php\n// added to the end of PercolatorTest#testMatchDoc() method\n$index = new Index($index->getClient(), '_percolator');\n$index->optimize();\n$index->refresh();\n// ...\n$results = $index->search(new Term(array('_id' => 'percotest_color')))->getResults();\n/* @var \\Elastica\\Result $result /\nforeach ($results as $result) {\n    var_dump($result->getData());  \n}\n```\nResult:\nphp\narray(2) {\n  [\"query\"]=>\n  array(1) {\n    [\"term\"]=>\n    array(1) {\n      [\"name\"]=>\n      string(6) \"ruflin\"\n    }\n  }\n  [\"color\"]=>\n  string(4) \"blue\"\n}\nIf you think this is a good way, we should probably add an example to documentation or update PercolatorTest.php since it's not obvious how to get registered query.\n. ",
    "jbafford": "I updated the existing test (testSearchScrollRequest) to properly test scrolling.\n. Fixed.\n. The alternative, I think, would basically be, if(OPTION_SCROLL_ID) { return _search/scroll } else { return entire rest of function }. (Or, alternatively, set $path from both code paths and then return it at the end of the function.) It's not a big deal to get the function down to one exit point, but it didn't seem to me to add that much in the way of readability. I can change it whichever way at your preference.\n. ",
    "designermonkey": "I don't know how but this is working now.\n. I didn't, no. I think it may have had something to do with arrays vs objects. Maybe some issue when converting them to json, I'm not sure.\n. I did not know about the group, sorry. Will look over there.\n. As soon as I add any type of query in to the Query object, it prevents the Facets from showing. Also filters are not applied correctly.\nI am trying to use a Fuzzy query on _all fields.\n. I can however get this to work when using a QueryString in place of Fuzzy. Are there limitations in how this works?\n. I'll have to cobble the bits back together, it's very abstracted in my code. Will do it when I get a moment.\n. Is there any way I could get this content to you other than publicly? It is under agreement that I can't display the code publicly, although for support, I can get around that and show you what it is doing.\nI imagine, it has something to do with me not understanding this stuff enough yet. Either way, your input would be greatly appreciated.\n. Yeah no problem. Thanks for the input guys; It just took me by surprise that's all.\n. ",
    "nicolassing": "Hello @ruflin, you're work on it or I can work on a pull request ? \nthx !\n. Ok I'll try to work on it this week end :)\n. @ruflin I've made a PR #920 \n. @ruflin I've added a functional test. But this functional test will not work without the script file. I've updated elasticsearch configuration and created a script file (calculate-distance.groovy) in test/data/ but this script file must be in /etc/elasticsearch/scripts. I don't know how to do this with Docker and Vagrant :(\n. :+1: Someday i'd learn how to really use ansible, vagrant, docker, etc ... Someday ... :smile: \n. ",
    "ruscon": "ping ?\n. ",
    "loris": "Here we go, sorry for the wait\n. ",
    "quidage": "It is a good idea to have a basic constructor and set the specific params on the object. I will implement this and the tests you mentioned.\n. ",
    "alexmc6": "alex@reynolds:~/projects/elastica/Elastica$ vagrant up\n[default] Box debian-6.0.3-64-elastica-20120115 was not found. Fetching box from specified URL...\n[vagrant] Downloading with Vagrant::Downloaders::HTTP...\n[vagrant] Downloading box: http://ruflin.com/files/vagrant/debian-6.0.3-64-elastica-20120528.box\nBad status code: 404\nPlease verify that the box exists and is accessible. Also verify that\nthis computer is properly connected to the internet.\n\nThe page you request does not exist (anymore). I recently completely cleaned up my blog. So in case you came here from a specific site or you were looking for a specific blog entry, please send me a tweet at @ruflin so I can perhaps bring this entry online again.\n. Big thanks for your swift response. \nIt looks like I should learn about Elastica the hard way and not use the old Vagrant box with the old ES. I hope to learn enough to feed back patches :-)\n. ",
    "newLoki": "@ruflin  should there be anything special inside the VM besides an actual PHP, Curl, Java and Elasticsearch.\nIf there is nothing special why not just configure one by using https://puphpet.com/ \n. ",
    "rbostan": "sorry, wrong project :(\n. ",
    "WojciechMula": "Existing unit tests shows, that id have to be an integer or not blank string.\nIMHO type checking should looks like this:\nif (!is_int($id) && !is_string($id) || (is_string($id) && trim($id) == \"\")\n    throw InvalidArgumentException(...)\n. ",
    "phaebz": "I went another route. For reference, I cloned another project (that depends on Elastica) with the --recursive option - which to my understanding clones submodules as well - and that pulled in Elastica no problem.\nThanks for your comment. I will check back when the need creeps up again.\n. ",
    "mrzard": "Hi, just done so, the test is kind of silly but does the work.\n. No problem! Anytime :)\n2013/8/8 Nicolas Ruflin notifications@github.com\n\nThx merged.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/pull/438#issuecomment-22309876\n.\n. Hi, take a look at this: https://www.elastic.co/guide/en/elasticsearch/guide/current/_post_filter.html\n\nBasically, postFilter only applies to the query results, but not to the aggregations. You should use a filtered query instead https://www.elastic.co/guide/en/elasticsearch/guide/current/_filtering_queries.html\n. ",
    "phareous": "I was able to get it to work...sorry for the issue report\nif (is_array($filterValue)) {\n                    $elasticaFilterId = new \\Elastica\\Filter\\Ids(null, $filterValue);\n                } else {\n                    $elasticaFilterId = new \\Elastica\\Filter\\Ids(null, array($filterValue));\n                }\n                $elasticaFilterAnd->addFilter($elasticaFilterId);\n. ",
    "Sander-Toonen": "+1\nThe forward slash is listed as a special character in the ES docs as well. \nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#_reserved_characters\n. ",
    "MrHash": "The forward slash requires double backslash escaping. Not sure about other characters. Ref: https://github.com/elasticsearch/elasticsearch/issues/2980\n. Hey apologies I just wasn't sure if this was the correct escaping solution and I stopped using query string queries so didn't need to use the function. I'll see if I can write a test later and wrap up a PR\n. Ok go ahead. I'm having trouble getting the test rig to run anyway :(\n. Refering to documentation at http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-match-query.html it specifies that boolean match queries support minimum_should_match parameters which are specified here http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html\nThis indicates that the number of the clauses in the query that should match are determined by this parameter.\n. Yes however as i understand it minimum_should_match can be a string as detailed in the second link above. The match query string is split into a set of boolean should clauses and the minimum_should_match can be a more complex than just an integer. Boolean values for this parameter have no meaning.\n. ok thanks. got it working now.\n. OK added tests as requested\n. Good job you have tests for the tests ;)\n. Don't understand what the fault is here... \n. Ok i fixed that in the last commit...\n. ok done\n. I don't think the failing tests were because of my changes...\n. done.\n. All specified fields are returned in the fields section except _source which contains all source fields in addition to those specified individually. e.g. curl -XGET localhost/index/type/id?_routing=route&_parent=parent&fields=_source,_routing,_parent,name returns\n{\n   \"_index\": \"index\",\n   \"_type\": \"type\",\n   \"_id\": \"id\",\n   \"_version\": 1,\n   \"found\": true,\n   \"_source\": {\n      \"name\": \"abc\"\n   },\n   \"fields\": {\n      \"_routing\": \"route\",\n      \"_parent\": \"parent\",\n      \"name\": \"abc\"\n   }\n}\n. Yeh i didn't notice that at first but you are right. This might have something to do with faceting behaviour.\n. Yep sorry i'll try to remember that in future...\n. Don't you think this should support the setting of a post filter that extends AbstractFilter as opposed to requiring an array?\n. Please see https://github.com/ruflin/Elastica/issues/669\n. Personally i prefer the non-backwards compatible solution you described since the changes are fresh.\n. On further examination it's possible to use setParam() on the mapping object so this isn't really necessary.\n. May i suggest that Elastica could benefit from a 'Manager' of sorts where processes like these can be provided. This library provides some useful tools already https://github.com/darklow/ff-elastica-manager\n. It does actually work this way, i spent a while trying to make it most concise and BC, it can get quite messy otherwise. The empty array has basically no effect on the output. The reason for this approach with the unset was because otherwise we have to duplicate the instanceof index type checking stuff for $index or $options['index'] based on any prior is_array() checks.. \n. I checked with another local test and it works.\n. ",
    "jpetitcolas": "Would be very useful, indeed. What about this PR status? Is it still alive? :)\n. No problem. I can myself make a PR if you do not have enough time. I was just checking if it has been already done. :)\n. Yep, will be done this week.\n. I solved this issue installing PHPUnit all deps:\nsh\nsudo pear install --alldeps --force phpunit/phpunit\n. Tests are in the same state than in master. I suppose it works. Modified test is passing.\nPutting it in Ready for review.\n. Already done: https://github.com/ruflin/Elastica/pull/512/files#diff-9f9aad2f9bbf81445bde8a3e5d724a9eL1\n. ",
    "mjhu": "Will do\n. I have added the extra test, which was a really good idea because it helped me catch an error in the Query::create method in how it handled rescore since the structure is slightly different than all other queries. I also pulled the upstream updates but they caused my latest commit to contain changes from the person who changed the filters. Is that a problem or will github handle it?\n. should that method only exist inside Elastica\\Query then, since Search will create a new Query anyways and not really use setQuery itself?\n. Ok, so after reading the elasticsearch api on rescore, it seems that they will probably add more types of rescores. So I have set up a new Rescore directory with an AbstractRescore that can be extended for future work. The only supported rescore currently is Query so it is there as well. I've also added setRescore in both search and query and added tests for them.\n. @ruflin Sorry for the lack of updates. After my internship ended, I kinda forgot about this. Do you like the setup of the rescorer?\n. Hey sorry for taking so long, but I missed your first email, and it has been slipping my mind. I also ran my tests on 1.0.1 of elasticsearch to make sure the api still works.\n. @ruflin Good call on integration tests. Also allowed me to restructure the Rescore to follow current schemes Filters, Queries, etc.\n. Ah will do\n. ok\n. I've been using underscores a lot recently, sorry about that.\nI have already overriden the toArray method but it's only part of the solution. Every time a search happens, ultimately it will come to a Query::create. Since the Rescore extends AbstractQuery, it will currently add an extra top level of query and wrap the rescore parameters in it. So instead of\n{'query':{}, 'rescore':{}} CORRECT\nit will be\n{'query':{'query':{}, 'rescore':{}}} INCORRECT.\nThe above place was the only way I saw to add support for Rescore without completely changing the way search works.\n. This is a side-effect of using Param as the base class of AbstractRescore\n. ",
    "jeffchan": ":+1: \n. ",
    "derrabus": "Sure, will do.\n. Sorry for the delay. Are the two assertions I've added to the ResultTest class sufficient?\n. ",
    "Musiksammler": "Hello!\nYou get to the wrong page when you search for Elastica on packagist.org. The link \"Homepage\" brings you to the ill-linked page.\nGreetings\nCarsten\n. ",
    "daigo75": "I didn't install it, but I reckon it does have a valid certificate. When I connect with the browser everything works fine, no error of any kind.\n--- Original Message ---\nFrom: \"Nicolas Ruflin\" notifications@github.com\nSent: 7 September 2013 13:29\nTo: \"ruflin/Elastica\" Elastica@noreply.github.com\nCc: \"Diego\" diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nIs your elasticsearch server having a valid certificate?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/456#issuecomment-23993373\n. I didn't have to click on anything to accept a non verified certificate. The certificate is verified, no prompts or verifications are required. I also tried using an external service (qbox.io) which provides a public http and https endpoint, with verified certificates and all the rest. The result was the same, connection error with https, while it worked with http (although I had to use host and port, as specifying either the url or the transport resulted in the error I reported).\n--- Original Message ---\nFrom: \"Nicolas Ruflin\" notifications@github.com\nSent: 7 September 2013 14:12\nTo: \"ruflin/Elastica\" Elastica@noreply.github.com\nCc: \"Diego\" diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nThis could be the problem as you also had to click once in your browser that you accept the \"non verified\" certificate. Curl needs some additional params here: http://stackoverflow.com/questions/316099/cant-connect-to-https-site-using-curl-returns-0-length-content-instead-what-c\nYou can disable the verification, but that can lead to security issues:\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\n   curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/456#issuecomment-23993931\n. I had another issue and I didn't try the master version of the library. I will check it later and give an update.\nDate: Wed, 11 Sep 2013 14:25:15 -0700\nFrom: notifications@github.com\nTo: Elastica@noreply.github.com\nCC: diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nHave you been able to make any progress with the issue?\n\u2014\nReply to this email directly or view it on GitHub.                  \n. It seems that I won't be able to use the master version. Composer refuses to install it and triggers a \"git was not found, check that it is installed and in your PATH env\" (which, of course, is not true). Curiously, it works with other versions, it's just the master that causes trouble.\nDate: Thu, 12 Sep 2013 04:38:42 -0700\nFrom: notifications@github.com\nTo: Elastica@noreply.github.com\nCC: diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nIt would be very interesting to see what curl_error puts out. If we have the error message it should be very simple to debug (hopefully).\n\u2014\nReply to this email directly or view it on GitHub.                  \n. The composer file is quite simple:\n```\n// This one works\n{\n    \"require\": {\n        \"ruflin/elastica\": \"v0.90.2.0\"\n    }\n}\n// This does not work (require line entered as suggested by Packagist\n{\n    \"require\": {\n        \"ruflin/elastica\": \"0.20.5.*@dev\"\n    }\n}\n```\nI haven't tried curl_error() yet, I had to work on another project. I will add it later and post the result.\n. I think there is a rogue double quote here: \"ruflin\"elastica\". This is not valid JSON and it woult not work, I'm afraid.\nDate: Tue, 17 Sep 2013 00:52:48 -0700\nFrom: notifications@github.com\nTo: Elastica@noreply.github.com\nCC: diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nTo check out the master, can you try \n\"ruflin\"elastica\": \"dev-master\"\nLooking forward to see the curl_error output.\n\u2014\nReply to this email directly or view it on GitHub.                  \n. Yes, this makes more sense. Thanks.\nDate: Tue, 17 Sep 2013 01:43:49 -0700\nFrom: notifications@github.com\nTo: Elastica@noreply.github.com\nCC: diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\n\"ruflin/elastica\": \"dev-master\"  should do the trick\nA good article to understand how composer stability level is determined can be found here:\nhttps://igor.io/2013/02/07/composer-stability-flags.html\n\u2014\nReply to this email directly or view it on GitHub.                  \n. Thanks, it's good to know. I will try to disable Verify Peer, user and password are not needed to connect to my server.\nDate: Tue, 17 Sep 2013 01:55:51 -0700\nFrom: notifications@github.com\nTo: Elastica@noreply.github.com\nCC: diza567@hotmail.com\nSubject: Re: [Elastica] Cannot connect to ElasticSearch using HTTPS protocol (#456)\nYou can pass in additional curl options into Elastic like this without hacking into the code:\n$EsParams = array(\n    'host' => 'my.elastisearchserver.com',\n    'port' => '443',\n    'transport' => 'Https',\n    'curl' => array(\n        CURLOPT_USERPWD => 'user:passw0rd',\n        CURLOPT_SSL_VERIFYPEER => false,\n        ...\n    ),\n);\n$EsClient = new \\Elastica\\Client($EsParams);\n\u2014\nReply to this email directly or view it on GitHub.                  \n. I finally found some time to test the connection again, I will see what I can find. By the way, adding \"ruflin/elastica\": \"dev-master\" to the composer file still doesn't work. I had to run composer.phar update --prefer-dist and it worked.\n. I mean it behaves exactly as reported earlier.\n. I do have git, but I use composer rather than submodules.\nUpdate\nI misunderstood last question. I do have git installed, and it's in the path, reachable from anywhere when using the command prompt. Composer doesn't find it, for some reason, but I don't know why (and, honestly, I don't really care to debug Composer). :)\n. It finally works! I had to update Elastica to the dev-master version and I got some details about the error, which was \"peer verification failed\". I then added the \"no verify\" parameter (fixing issues one at a time) and it connected properly.\nI was wondering, is there a way to tell Elastica to log stuff somewhere? So that I don't have to modify core files with var_dump() everywhere. Thanks.\n. ",
    "paulrblakey": "Nothing that isn't hacky, seems like all HEAD requests to a read-only index get a 403, you can achieve a valid index check by making a get request to _settings or _aliases on an index, which will return an appropriate http status code, but as I said its a bit hacky. might be an issue worth raising on elasticsearch.\n. @kimchy @ruflin  I've opened an issue in elasticsearch/elasticsearch. Cheers :+1: \n. ",
    "nurikabe": "+1\n. Done in my fork here:  https://github.com/nurikabe/Elastica\nI'm not sure what I need to configure locally to get the proxy and bulk udp tests to work, but otherwise test results seem consistent with current master.\n. New pull request:  https://github.com/ruflin/Elastica/pull/531\n. Added\n. Duh.  Sorry about that.  Too many coins.\n. Nice, though note that this relies on v0.6 of egeloen/http-adapter\n. Looks like another couple of weeks for PSR-7.  Hopefully it will go through this time.\nI didn't dig very deep, but the initial problem I noticed was that Ivory\\HttpAdapter\\Message\\Stream\\StringStream has been replaced with https://github.com/phly/http\n. PSR-7 approved last week on May 5th.\n. Good point.  Updated.\n. ",
    "luiges90": "Note: I haven't tested it, so there maybe bugs etc...\n. Sorry, but I have stopped using PHP because I left the company. Anyone interested may take over my work. Thank you.\n. ",
    "OwlyCode": "Hello there !\nI needed to set the type of a multimatch query and came out using setParam to get it working (and it works fine). Even if getters/setters are just a shortcut, it helps to have them (auto-completion, readability, consistency of the code), is it planned to merge this PR ?\nWe could also add the types of multimatch as constants, like:\nphp\nconst MULTIMATCH_PHRASE = 'phrase';\nWhat do you think ?\n. It's ok for me, I'll work on it in the coming days. ;-)\n. I submitted a new PR as I couldn't push to this one (#569).\n. ",
    "sqmk": "Added notes to changes.txt\nThanks!\n. ",
    "thorsten": "+1\n. Yes, that would solve our problem, because using persistent connections without closing them creates new connections and after some minutes you'll get thousends of open HTTP connections.\n. ",
    "audriusbugas": "Actually it would be enough to add just availability to close single connection (public method) when it's not needed anymore \n. Actually static resource is created here (for all Transports) https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Transport/Http.php#L175. In my opinion two things are missing:\n1. $_curlConnection should be closed before creating new one with curl_init()\n2. Public static method for closing $_curlConnection would be also useful for destroying resource when application does not need it anymore.\n. yes, done already\n. ",
    "saimaz": "Yes the public method to close connection would be better.\n. We have switched to https://github.com/elasticsearch/elasticsearch-php, sorry ;)\n. IMO for this particular issue static close connection method would be helpful \n. ",
    "stloyd": "@ruflin I guess this #465 would help a lot with similar problems.\n. Instead of version check add this at beggining of file?\n``` php\nif (!defined('JSON_UNESCAPED_SLASHES')) {\n   define('JSON_UNESCAPED_SLASHES', 64);\n}\nif (!defined('JSON_UNESCAPED_UNICODE')) {\n   define('JSON_UNESCAPED_UNICODE', 256);\n}\n```\n. ",
    "xavividal": "Any news?. ",
    "russellseymour": "@Tobion, did you complete your function to provide reindex functionality to Elastica?\nI am looking at possibly doing the same thing, but came across your post and wondered if you had got any further with it?\nThanks, Russell\n. ",
    "progrupa": "+1\n. ",
    "michellesanver": "We just added reindexing at work using scan and scroll, I'll spend some time to extract it into Elastica\\Util and make a pull request :) \n. ",
    "webdevsHub": "Added in https://github.com/ruflin/Elastica/issues/853 \nThanks @Tobion \n. My goal was: get rid of the scan-request. The scan request only make sense (as far as i know) in combination with 1 or more scroll requests. If you want the results directly, you send a normal _search request, else you have to perform the scan and scroll operation. The scan search type is used as a \"initial scroll request\" exclusively.\nIf you agree with that, the next logical step is to provide a feature which will hide all the meta-work from users (0: init the scroll aka scan, 1: set the new scroll-id, 2: perform the scroll, 3: repeat from 1 until no results returned) and let the users deal with the results only.\nI think the best way to do this is the Iterator-Interface, because you can only use an Iterator as the loop-context in one direction. So it perfectly matches the scan and scroll behavior.\nWith this in mind it feels wrong to integrate the scan and scroll operation in the Search class: We can make the Search class itself to an Iterator. But this will change the behavior of the Search class a lot (from a nice way to define and configure your searches to a heavy, mutli-functioned allrounder). \nA better way would be to provide a new function (something like Search::scanAndScroll). This function returns the ScanAndScroll-Iterator constructed with $this. Now the scan and scroll operation is integrated into the Search class but decoupled at the same time.\nforeach($search->scanAndScroll() as $resultSet) {\n  // ...\n}\nI think another problem is the override of some properties in the Search and Query objects. This might lead to an issue if the users want to reuse the Search and Query objects. The only solution i see is to clone the Search in the constructor of ScanAndScroll but this looks wrong to me too... Any ideas?\n. changed some comments and added the new method to Search\ncan you update the documentation on http://elastica.io ?\n. Thought about that some time ago. The response is a very big, nested array with a fixed response structure. So we could provide some value objects for that:\n``` php\nclass IndicesRecovery\n{\n    public function __construct(Client $client) \n    {\n        // no request here\n    }\npublic function getIndexStatus(\n    string|string[] $index, \n    bool $detailed = false, \n    bool $activeOnly = false\n) {\n    // trigger request here\n\n    // return assoc array (key: index name, value: RecoveryStatus\\Shard[])\n    // or only RecoveryStatus\\Shard[] if !is_array($index)\n}\n\n}\nclass RecoveryStatus\\Shard\n{\n    public function getId() : int\n    public function getType() : string // (constants)\n    public function getStage() : string // (constants)\n    public function getPrimary() : bool\n    public function getStartTime(bool $inMilis = false) : string|int\n    public function getStopTime(bool $inMilis = false) : string|int\n    public function getTotalTime(bool $inMilis = false) : string|int\n    public function getSource() : array // (better: its own class)\n    public function getTarget() : array // (better: its own class)\n    public function getIndex() : RecoveryStatus\\Shard\\Index\n    public function getTranslog() : array // (better: its own class)\n    public function getStart() : array // (better: its own class)\n}\nclass RecoveryStatus\\Shard\\Index\n{\n    public function getSize() : array // (better: its own class)\n    public function getFiles() : array // (better: its own class)\n    public function getTotalTime(bool $inMilis = false) : string|int\n}\n``\n- I would like to have a class for each nested status key, because it would be kind of inconsistent to only cover the first response dimension with nice getters.\n-IndicesRecoverycould cache the response, but then you have to add cache control parameters to the function or class somewhere (likeStatus::refresh()` approach).\n- There are other Elasticsearch respones with a fixed structure (e.g. mapping). I would like to have some kind of base class (at least for the response caching) for that type of responses.\n/discuss @ruflin @im-denisenko \nedit: returning just \\DateTime in all that time getters would be a better solution\n. Wrap whole nested structure into classes would be a great simplification for Elastica users (IDE autocomplete or that DateTime transformations). Other options would be to just return raw arrays or create some kind of own access syntax to move all that if !isset checks into the library:\nphp\n$recovery = new Recovery($client, $index);\n$option = $recovery->get('shards.0.index.files.details.0.name'); \n// returns 'segments.gen' or null if something is not set on path to that value\nI can live with raw arrays, but classes would be the more convinient way. That own access syntax is a little bit hacky, but still better than raw arrays in my opinion. Do you have any other ideas or opinions about it?\nAbout time strings\nI realizied there are DateTimes (e.g. \"2014-02-24T12:38:06.349\") and Durations (e.g. \"2.0s\").\nThe last part of DateTimes are fractions of seconds in milliseconds and this is not supported by PHP AFAIK. All DateTimes are in UTC. This is how I would parse that date:\n``` php\nfunction parseDateTime($dateTime)\n{\n    // convert millisecond fraction to microseconds\n    if (preg_match('/.(\\d{3})$/', $dateTime, $matches)) {\n        $fraction = (int) $matches[1];\n        $dateTime = substr($dateTime, 0, -3) . $fraction * 1000;\n    }\nreturn \\DateTime::createFromFormat(\n    'Y-m-d\\TH:i:s\\.u',\n    $dateTime,\n    new \\DateTimeZone('UTC')\n);\n\n}\n```\nAn additional flag to that function could modify DateTimeZone to date_default_timezone_get() after parsing. Any problems/suggestions about that? Is there any ES option that might change the response date format?\nThere is PHPs \\DateInterval to represent durations, but it is completly incompatible with Elasticsearch durations because of floating values (e.g. \"2.9s\") and units (seems like Elasticsearch documentation is not complete: in index recovery status response you have \"88ms\" but ms unit is not mentioned in common options doc]).\nWe could just return the string or convert fractions and incompatible units to PHPs \\DateInterval (everything < 1 second is basically not supported)\n\nI would suggest to reuse existing Elastica\\Index namespace\n\n:+1: \n. Thank you, appreciate it :smile: \nThere is no rush. I am not going to work on it before weekend anyway.\nRegarding geo_shape filter: it could be merged in a single class Elastica\\Filter\\GeoShape with two methods (something like setProvided and preIndexed)\nRegarding tests: best solution would be to write tests for every method in Elastica\\QueryBuilder\\DSL\\* with different arguments than the corresponding class constructor to ensure a consistent API\nI would like hearing your opinion on these two open issues\n. @fprochazka build is failing because of OutOfMemoryError exceptions. QueryBuilder tests have been successfully completed\n. - Added geo_shape_provided, geo_shape_preIndexed\n- Added underscore in private/protected variables\nI wrote 2 \"integration\" tests:\n1. Elastica\\Test\\QueryBuilder\\VersionTest to ensure that every method name used in Version classes is actually available in DSL classes (to prevent typos, ... in further contributions)\n2. Elastica\\Test\\QueryBuilder\\DSL\\* to avoid/detect breaking changes in further contributions. All method arguments are configured and the test will fail, if something changed there (it could break queries created with QueryBuilder on update). In general: The only allowed return values are a subclass of corresponding abstract class (like Elastica\\Query\\AbstractQuery) or a Elastica\\Exception\\NotImplementedException\n. @ruflin can change it if you want, but I'm not really happy with that solution at all. DSL classes should reflect elasticsearch methods, not implementation specific stuff in Elastica.\nThere is only one geo_shape filter in elasticsearch, so the QueryBuilder should also have only one geo_shape filter. This is what I would expect.\n. I think for now it's okay to support \"only\" geo_shape_provided and geo_shape_pre_indexed. I like that \"Elastica\" extension point of view, because now it looks like a feature, not a bug :smile: \nWhen you are writing a Query and want to use geo_shape filter, you are going to get these 2 options in IDEs autocomplety anyway, so I don't think that will cause any confusion\n. okay, done!\nI would really like to add examples to elastica.io, but I am not going to do this before next weekend. If you want to merge it now, you could use the example I provided in Elastica\\Test\\QueryBuilderTest (in first commit) until next weekend\n. already changed it to geo_shape_pre_indexed\n. Hi! You could create a new configuration for elasticsearch Version and construct QueryBuilder with that Version in a service\n. @jdeniau please take a look at the new documentation: http://elastica.io/getting-started/search-documents.html#section-query\n. Let me first try do understand your question and issues before getting into discussion:\nI added that version check because of the very fast changing Elasticsearch API (mostly in between 0.9 and 1.*) and because there are so many different versions used by developers out there.\nThe old way to handle that was: just use the corresponding Elastica version released for a specific Elasticsearch version. But those old versions are no longer maintained so you do not get bug fixes or new features.\nVersion check is intended to find misuse because you construct QueryBuilder with a specific ES version and it throws exceptions if you use something not supported in that version. Now you can use latest release of Elastica with old Elasticsearch DSL.\nYou are right: that exception is thrown on runtime level + @deprecated might be confusing if you do not read annotation message and DSL classes stacks up \"deprecated waste\".\nThat approach will no longer work when Elasticsearch change all query names (like your worst case with 584 deprecated queries) or when a new version is completly incompatible with old ones (like a query JSON structure change).\n@ewgRa Have I understood that properly? \n. So you want to remove all version stuff and change DSL classes to reflect current Elasticsearch API?\n. ewgRa pointed out that all this version stuff does not work + create problems. So lets just delete that. The only solution to ewgRa 2. problem would be to create DSL classes for each version in different repositories and let users replace DSL classes via composer; or create a IDE plugin :)\nRemoving version system + change DSL classes to current ES API (which includes useful deprecation annotations) is the best option in my opinion\n. I can create a pull request to remove version stuff. About DSL classes change: I am not up to date with ES API 2.* (I am still working only on 1.*), is there any overview of what is new, deprecated, ... without having to compare different ES doc HTML?\n. okay, I removed that typehint. The important one was the return statement anyway\n. I think it is not necessary to implement some kind of re-enable functionallity, because it can be done by library user by creating a new Elastica\\Client instance. \nBut hey, it would be an additional feature, so why not? :smile: I think Doctrine had to handle the same situation (EntityManager is closed after an exception) and they implemented the reset functionallity in the ManagerRegistry (comparable to ConnectionPool in Elastica). Maybe you could have a look into that.\nBut in general:\nI highly recommend to not use long running PHP workers in a queue software (rabbitmq, gearman). PHP is not designed to run forever and sooner or later you are going to run into memory issues, because most of native / extenal libs have no proper cleanup. A worker could terminate after N jobs and you could use http://supervisord.org/ to restart your workers.\n. Nice! One step further in the \"full language support\"-mission :clap:  \nSuggestion: you could implement the flags mentioned in documentation (ANYSTRING, COMPLEMENT, EMPTY, INTERSECTION, INTERVAL, or NONE) as constants and provide a method to add one or more flags to the query (or as an additional argument).\nCould you please add that new class to QueryBuilder in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/QueryBuilder/DSL/Query.php#L396 with same method arguments as in the construct (+ return, param annotations in DocBlock Comment of the method).\n. you could update Elastica to 1.4.2.0 and use the new Elastica\\QueryBuilder instead of old Elastica\\Query\\Builder. \nUsage:\n$qb = new Elastica\\QueryBuilder();\n$qb->query()->bool()\n    ->addMust(\n        $qb->query()->term()\n            ->setTerm('field', 'termMust')\n    )\n    ->addMustNot(\n        $qb->query()->term()\n            ->setTerm('field', 'termMustNot')\n    )\n    ->addShould(\n        $qb->query()->term()\n            ->setTerm('field', 'termShould')\n    );\ndoc: http://elastica.io/getting-started/search-documents.html\n. I would prefer not to add it to Query DSL class because it is not an official elasticsearch query. Furthermore it will be difficult to update the Version classes with custom queries in the future.\nHowever we could implement a new \"plugin\" DSL in QueryBuilder and put all the custom plugin stuff in there\n```\n$qb = new QueryBuilder();\n$qb->plugin()->image(/.../);\n// or\n$qb->elastica()->image(/.../);\n```\n. I will look into that during weekends. I want to add some comments to the\nQB unit tests anyway.\nAre there any other plugin related queries/aggs already implemented in\nElastica that should be added to the new QB part?\n. definitely a bug! plx see #798\nthx for reporting @BitOne \n. I think the problem here is not the fact that the result is an array, but that it is nested. Even worse, the nesting structure is full of \"meta keys\". They expend the amount of code required to process aggregation results a lot.\nExample with 4 nested aggregations:\ndate histogram (multibucket)\n    terms (multibucket)\n        sum (singlebucket)\n        avg (singlebucket)\nphp\n$query = [\n    // ...\n    \"aggs\" => [\n        \"name_of_date_histogram_agg\" => [\n            \"date_histogram\" => [\n                \"field\" => \"date\",\n                \"interval\" => \"day\",\n                \"aggs\" => [\n                    \"name_of_terms_agg\" => [\n                        \"terms\" => [\n                            \"field\" => \"gender\",\n                            \"aggs\" => [\n                                \"name_of_sum_agg\" => [\n                                    \"sum\" => [\n                                        \"field\" => \"change\"\n                                    ],\n                                ],\n                                \"name_of_avg_agg\" => [\n                                    \"avg\" => [ \n                                        \"field\" => \"grade\" \n                                    ]\n                                ]\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ]\n    ]\n];\nphp\n$result = [\n    // ...\n    'aggregations' => [\n        \"name_of_date_histogram_agg\" => [\n            \"buckets\" => [\n                [\n                    \"key_as_string\" => \"2013-02-02\",\n                    \"key\" => 1328140800000,\n                    \"doc_count\" => 20,\n                    \"aggregations\" => [\n                        \"name_of_terms_agg\" => [\n                            \"buckets\" => [\n                                [\n                                    \"key\" => \"male\",\n                                    \"doc_count\" => 10,\n                                    \"aggregations\" => [\n                                        \"name_of_sum_agg\" => [\n                                            \"value\"=>  13\n                                        ],\n                                        \"name_of_avg_agg\" => [\n                                            \"value\"=>  1\n                                        ]\n                                    ]\n                                ],\n                                [\n                                    \"key\" => \"female\",\n                                    \"doc_count\" => 10,\n                                    \"aggregations\" => [\n                                        \"name_of_sum_agg\" => [\n                                            \"value\"=>  2.18\n                                        ],\n                                        \"name_of_avg_agg\" => [\n                                            \"value\"=>  2\n                                        ]\n                                    ]\n                                ],\n                            ]\n                        ]\n                    ]\n                ],\n                [\n                    \"key_as_string\" => \"2013-03-02\",\n                    \"key\" => 1330646400000,\n                    \"doc_count\" => 11,\n                    \"aggregations\" => [\n                        \"name_of_terms_agg\" => [\n                            \"buckets\" => [\n                                [\n                                    \"key\" => \"male\",\n                                    \"doc_count\" => 5,\n                                    \"aggregations\" => [\n                                        \"name_of_sum_agg\" => [\n                                            \"value\"=> 45\n                                        ],\n                                        \"name_of_avg_agg\" => [\n                                            \"value\"=>  3\n                                        ]\n                                    ]\n                                ],\n                                [\n                                    \"key\" => \"female\",\n                                    \"doc_count\" => 6,\n                                    \"aggregations\" => [\n                                        \"name_of_sum_agg\" => [\n                                            \"value\"=>  100.13\n                                        ],\n                                        \"name_of_avg_agg\" => [\n                                            \"value\"=>  4\n                                        ]\n                                    ]\n                                ]\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ]\n    ]\n];\nTo get a single value out of that hell you end up with something like:\nphp\n$result['aggregation']['name_of_date_histogram_agg']['buckets'][0]['aggregations']['name_of_terms_agg']['buckets'][0]['aggregations']['name_of_sum_agg']['value'] == 13\nIt is horrible... And I think no one can write this with at least 2 typos at a time. Now if you wrap every sub aggregation into a AggregationResult class with AggregationResult::getBucket($key), AggregationResult::getAggregation($name) the amount of code needed is basically the same:\nphp\n$result\n    ->getAggregation('name_of_date_histogram_agg')\n        ->getBucket(0)\n            ->getAggregation('name_of_terms_agg')\n                ->getBucket(0)\n                    ->getAggregation('name_of_sum_agg')\n                        ->getValue() == 13;\nSo it has maybe a better format and the IDE might give you auto complete but at the end there is no real benefit.\nA better solution would be to resolve that nested structure to a table format (like in MySQL when you have multiple GROUP BY clauses). Actually this is the main use case for aggregations in my experience:  transform the result in a table format to plot the data\n| name_of_date_histogram_agg | name_of_terms_agg | name_of_sum_agg | name_of_avg_agg |\n| --- | --- | --- | --- |\n| 1328140800000 | male | 13 | 1 |\n| 1328140800000 | female | 2.18 | 2 |\n| 1330646400000 | male | 45 | 3 |\n| 1330646400000 | female | 100.13 | 4 |\nThat is not complete, because the results contains additional information per key. It is very hard to map that to a relational table: A table contains only one value per column, but elasticsearch has multiple (e.g. one date histogram bucket has \"key\", \"key_as_string\" and \"doc_count\"). So the resulting table (or call it the \"flattened result\") would look like:\nphp\n$table = [\n    [\n        \"name_of_date_histogram_agg\" => [\n            \"key\" => 1328140800000,\n            \"key_as_string\" => \"2013-02-02\",\n            \"doc_count\" => 20\n        ],\n        \"name_of_terms_agg\" => [\n            \"key\" => \"male\",\n            \"doc_count\" => 10,\n        ],\n        \"name_of_sum_agg\" => 13,\n        \"name_of_avg_agg\" => 1\n    ],\n    [\n        \"name_of_date_histogram_agg\" => [\n            \"key\" => 1328140800000,\n            \"key_as_string\" => \"2013-02-02\",\n            \"doc_count\" => 20\n        ],\n        \"name_of_terms_agg\" => [\n            \"key\" => \"female\",\n            \"doc_count\" => 10,\n        ],\n        \"name_of_sum_agg\" => 2.18,\n        \"name_of_avg_agg\" => 2\n    ],\n    [\n        \"name_of_date_histogram_agg\" => [\n            \"key\" => 1330646400000,\n            \"key_as_string\" => \"2013-03-02\",\n            \"doc_count\" => 11\n        ],\n        \"name_of_terms_agg\" => [\n            \"key\" => \"male\",\n            \"doc_count\" => 5,\n        ],\n        \"name_of_sum_agg\" => 45,\n        \"name_of_avg_agg\" => 3\n    ],\n    [\n        \"name_of_date_histogram_agg\" => [\n            \"key\" => 1330646400000,\n            \"key_as_string\" => \"2013-03-02\",\n            \"doc_count\" => 11\n        ],\n        \"name_of_terms_agg\" => [\n            \"key\" => \"female\",\n            \"doc_count\" => 6,\n        ],\n        \"name_of_sum_agg\" => 100.13,\n        \"name_of_avg_agg\" => 4\n    ]\n];\nWhat do you have to write the fetch the same result then in the other 2 examples above?\nphp\n$table[0]['name_of_sum_agg'] == 13;\nDownside:\n- $table has a lot of duplicate data\n- Implementation requires some complicated recursion and might be slow on very large, deep nested results\n. Can you please give some code or a link to the code of that service. I did not quite follow that.\n. That is correct: ScanAndScroll class is dedicated to http://www.elastic.co/guide/en/elasticsearch/guide/current/scan-scroll.html and should be used to reindex or export whole indexes (see https://github.com/ruflin/Elastica/pull/617#issuecomment-43440568)\nI could not see any advantage of using scroll over from, size with normal queries when I wrote the Iterator, but actually it offers some few advantages:\n- faster (Quote: \"The scroll API keeps track of which results have already been returned and so is able to return sorted results more efficiently than with deep pagination\")\n- retryable (send an old scroll id to get the old results)\n- removable context (useless in my opinion)\nSo a new Iterator should focus on these advantages only. It could store previous scroll ids and offer a retry function with time checks (is the scroll still open?) without sending a query. It could also act as the base class for ScanAndScroll without breaking BC\n. Turns out the \"retryable\" assumption was wrong: It is not, so the whole return $_lastScrollId in ScanAndScroll is basically useless.\nWhile figuring this out I found a couple of other bad things and started coding new Scroll and ScanAndScroll classes.\n@hasumedic Do you mind if I take on at this point?\n. Fixed in https://github.com/ruflin/Elastica/issues/842\n. > I reckon that this PR can be rejected and that I should work on the Scroll implementation instead.\n:thumbsup:\n. There are several problems with that function in my opinion. The missing $actions cleanup is a good catch :+1: \n$actions = array(); before the second foreach would fix that.\nor just add actions on the fly \nphp\n$bulk = new Bulk($client);\nforeach ($data['hits']['hits'] as $d) {\n    $bulk->addAction(new Action(Action::OP_TYPE_INDEX, $meta ,$d['_source']));\n}\n$bulk->send();\nAnother problem with that function: it assumes that both indexes uses to same client. So you cannot reindex from one cluster to another. To fix that I would change the definition to:\nphp\npublic static function reindex(Index $newIndex, Index $oldIndex, $expiryTime = '1m', $sizePerShard = 1000) \n{\n    $search = new Search($oldIndex->getClient());\n    $bulk = new Bulk($newIndex->getClient());\n    // ...\n}\nAnd finally that return \"reindex complete\";. Maybe the intention was to output that string somewhere but I think a return type bool or void (there are only Exceptions in case of an error anyway) would be better.\n. > old index first and then the new index\n:+1:\n\nIs this really reindex? Isn't this copy?\n\nThe current implementation is more copy then reindex. Maybe rename that function to copy and create a new reindex function that checks and creates the mapping (or the whole index configuration ?) in new index before copying the data.\n. > The simplest way to apply these changes (add new analyzers or make changes to existing fields) to your existing data is to reindex ... link\nreindex copies all documents but not the mapping. So the current implementation is actually reindex and copy would be a parent function to reindex, because copy includes mappings.\n\nReindexing can start at a certain criteria as it is mentioned in the documentation\n\nI think this section is about continuous reindexing (replication with different mappings). But you are right: the current implementation behaves more like full copy.\nHere a possible solution:\nI would rename the function back to reindex and add an optional $query parameter:\nphp\npublic static function reindex(Index $oldIndex, Index $newIndex, AbstractQuery $query = null, $expiryTime = '1m', $sizePerShard = 1000)\n{\n    $search = new Search($oldIndex->getClient());\n    $search->setQuery($query);\n    // ...\n}\nAfter that add a new function copy:\n``` php\npublic static function copy(Index $oldIndex, Index $newIndex, $expiryTime = '1m', $sizePerShard = 1000)\n{\n    // copy mapping\n    foreach ($oldIndex->getMapping() as $type => $properties) {\n        $type = new Type($newIndex, $type);\n    $mapping = new Mapping($type, $properties);\n    //$mapping->setParam('ignore_conflicts', true); // ???\n    $mapping->send();\n}\n\n// copy documents\nself::reindex($oldIndex, $newIndex, new MatchAll(), $expiryTime, $sizePerShard);\n\n}\n```\nNote: ignore_conflicts\n. > I removed it for the 2.0.0 release\n:+1: there is no hurry\nI am going to create 2 pull requests regarding Scroll + ScanAndScroll (see https://github.com/ruflin/Elastica/issues/827) and copy + reindex\n. I never managed an open project so I have no experience in that :(\nSome time ago I worked in a project with JIRA and there was a JIRA plugin to generate changelogs for a new release, maybe there is something similar in travis-ci?\nA quick research on github led me to https://github.com/skywinder/github-changelog-generator. It generates a markdown file based on tag comparisons. It basically takes the title of closed issues and creates the README.md. It also groups by labels, so we could introduce labels such as \"Feature\", \"BC break\", \"Bug\". The project also has a wiki page with links to other tools https://github.com/skywinder/Github-Changelog-Generator/wiki/Alternatives\n. @im-denisenko has some good points (for humans by humans and markdown). An extension to this is http://keepachangelog.com/.\nI do not think there is way to avoid CHANGELOG.md conflicts without using a generation tool. The first step should be to create a CONTRIBUTING.md with all that rules and a note that a contributor should wait with CHANGELOG.md updates until the PR is ready to merge to avoid conflicts\n. I prefer Stackoverflow too. There is already a tag for Elastica: http://stackoverflow.com/tags/elastica/info. One can follow tags on Stackoverflow, so would be easy to overview all questions.\nWe could just add a new header to README.md like:\nSupport\nPlease ask any question about Elastica on stackoverflow.com and tag it with [elastica] to get an answer from Elastica contributors or other users.\nWe could add a FAQ document to the repository based on questions on stackoverflow later on.\n. There is no tag moderation AFAIK. Moderation is done by reputation and voting. Which is fine in my opinion. So we should add better answers to the question and vote it up.\nI think there are several \"internal\" tasks to organise like \"who wants to answer a question\" or in general thinks like \"someone should have a look into that reddit discussion\" or new ideas or whatever.\nruflin could start a https://trello.com/ board for contributors. It is free and easy to use\n. > Does someone of you have a \"high\" reputation?\nNo, I am a read only user too. But SO does a really good job in finding the correct solution and with enough reputation you can even edit answers from different users (if none of us can do that: one could add a comment to the outdated answer at least)\n\nShould we use a good old IRC channel ...?\n\nI am fine with IRC as a starting point. But it could turn out to be less useful then Trello in organizing stuff because IRC usually has no history.\n\nbuild a \"foundation\" team around Elastica\n\nI appreciate the fact that you want to give me write permission in Elastica. It would be a great pleasure for me to be a project maintainer of this awesome library :smile: \n. Line 206 can be deleted. ScanAndScroll::rewind() takes care of it\n. Populator::processProvider() would execute $provider->getNextDocument() in a loop and send them one by one to DocumentRetrievedCallback.\nI can not see how Populator::setBulkSize() can be used?\n. Ahh okay I see: IterationCompletedCallback is fired when a bulk iteration is complete.\nIt is better then Util::copy() because one can implement different data sources. The optional listeners are a very good idea too. :+1: \nUtil::copy() would copy the mapping too (see https://github.com/ruflin/Elastica/issues/830#issuecomment-101061610). Looks like this can be not handled by Populator because it works with documents only.\n. > Does this break an BC or not?\nno\n. I would like hearing @hasumedic opinion on this before merge\n. I deleted protected $_lastScrollId because it is useless. This would break BC if someone extended ScanAndScroll and used that member. Should I mentioned it somewhere?\n. @hasumedic scroll id is set in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Scroll.php#L77 and protected $_nextScrollId in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Scroll.php#L142\n. As you can see here it is perfectly fine to use the Iterator without foreach and without setting something manually in the class.\n. I would move the description to CONTRIBUTING.md and use \"Unreleased\" as h1\n. Naming is inspired by Doctrine. Utility is a collection of things you need for internal Elastica coding and Tool for complex functionality for lib users (in Doctrine it is Pagination and the console commands). Do you have any other ideas for a good naming?\nI used static like in Util because there is no state and therefore no need to create an Instance\nphp\n$crossIndex = new CrossIndex();\n$crossIndex->reindex(/*...*/);\n=> more code overhead as\nphp\nCrossIndex::reindex(/*...*/);\n. stooop :) changelog missing\n. I am going to add it immediately\n. I have no experience in PHP 7, maybe @sebastianbergmann can help? Would be nice!\n. just for the record: that article recommends CURLOPT_CAINFO\n:warning: Please do not disable TLS peer verification \n. I will have a look into your tests changes later this week, but I am not happy with the tests as they are right now too (especially that \"argument check array\" which is hard to understand I guess).\nThere is a reason why I decided to write all that methods and not use __call with @method annotations:\nI wanted the QueryBuilder to act like you are writing real Elasticsearch queries (this is the reason why I used snake_case and not camelCase). Many constructors actually do not behave like real Elasticsearch queries (e.g. most of the constructor arguments are optional, but required in real ES queries like using bool_and filter without at least 2 other filters). In addition Elastica and ES naming is sometimes different (like geo_shape or bool filters).\nI found so much things that prevented a direct one-one Elastica <=> ES mapping that I decided to write a method for each single DSL part, because it is the most flexible implementation (you can add custom \"pre-constructor\" code on a very basic level or it can be used as a compatibility layer if ES dicided to change something in existing parts in a new version).\nAs always, the most flexible implementation has a high risk of bugs and of diverging from the original intention.\nI am not convinced that call_user_func + func_get_args can work without serious decrease of usebility (usebility in my view here is: write queries like in actual Elasticsearch JSON).\n. I like that reflection proxy idea and it is definitely better then my implementation :+1: \nAbout serialization stage: I quickly scanned though toArray code and found exceptions, invalid array structures and often no required checks at all. But just like constructor args, QueryBuilder should not try to fix that and work as pure proxy.\n. tests are very good implemented and easy to understand! Do you want it to be merged or do you want to include that proxy approach in this pull request?\n. I assume there will be further changes in future releases. So a Latest class could fill that gap until there is an API change.\nTODO now:\n- create class Latest extends Version140\n- set default version of QueryBuilder to Latest\n- deprecate Version150\nTODO on next release with API change:\n- create new version class\n- modify super class of Latest\n. What exactly do you want to mention in the comments?\n. I had a small log in the comment, but deleted it because it would require changing this file on every release. I could add it again\nphp\n/*\n * no changes since 1.4.0:\n *  - 1.5.0 (March 23, 2015)\n *  - 1.6.0 (June 09, 2015)\n *  - 1.7.0 (July 16, 2015)\n */\n. comment added\n. Okay, I am going to do this before merge\n. I modified Dockerfile to RUN composer global require \"fabpot/php-cs-fixer=1.10.*\"\nbut make run RUN=\"make lint\" do not touch the files.\nI downloaded it manually and php php-cs-fixer.phar fix --config-file=./.php_cs (with 1.10) changes one file lib/Elastica/Aggregation/ReverseNested.php. I am not into docker, but seems like I have to rebuild it or something?\n. that worked thx! Should be ready to merge\n. QueryBuilder uses snake case because Elasticsearch query names (like { \"match_all\": {} }) use snake case too. So QueryBuilder acts like you are writing Elasticsearch JSON with autocomplete.\n. _id, _type, _index and _version works with $doc->setParams($result->getHit()).\nThere might be strange behavior if highlight or _explanation is set and moved to document. You can constrcut a result with bascially everything, new \\Elastica\\Result(['some' => 1, 'wired' => 2, 'keys' => 3]);.\n. An exception should be thrown if $result->hasFields() === true because you can not decide if _fields contains a full document\n. I like the whitelist approach, but whitelists always cause problems because it needs constant maintenance. Another edge case could be on disabled source field. Would be nice to have integration tests for known edge cases (insert, retrieve and update a doc with edge case mapping/structure)\n. good point\n. I just thought it would be better then getting a Fatal Error on\n$rescore->toArray() line.\nWhat do you suggest to do to take the release process into account?\nAm 14.12.2014 18:36 schrieb \"Filip Proch\u00e1zka\" notifications@github.com:\n\nIn lib/Elastica/Query.php\nhttps://github.com/ruflin/Elastica/pull/733#discussion-diff-21797723:\n\n*/\n-    public function setRescore($rescore)\n-    public function setRescore(AbstractRescore $rescore)\n\nYou realize that by adding a new typehint to class that somebody might be\nextending is a BC break? Adding typehints is a good thing, but then the\nrelease process should take that into account (=change like this should not\nappear in patch version release and ideally not even in feature version\nrelease).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/733/files#r21797723.\n. > Should this be a VO instead?\n\nVO?\n. Better:\n\"All changes must be documented in the CHANGELOG.\"\n. Better:\n\"If you found a bug, open an issue on Github. Please search for already reported similary issues before opening a new one. You should include code examples (with dependencies if needed) and your Elastica version to the issue description.\"\n. Maybe a bit confusing with that \"Don't use a local setup\" before.\nBetter:\n- Run your changes / tests in the virtual environment to make sure it is reproducible.\n- Run the tests before creating the pull request using vagrant or docker-compose locally.\n. I don't get this one. Is it the same as the last point?\n. Would be good to mention group names here\n. If this is implemented at some point in time $name would be required again (like in all aggregations) and produce a BC break.\n. _source might not be set in result, so this line might throw fatal error\n. ",
    "Altreus": "Hmm, if I don't provide a limit when I perform a query on my instance, I get all things. Perhaps I am using an old version of elasticsearch - centos is not known for its modernism.\n. I mean if you omit it yourself - i.e. Elastica could do it itself. I've found another occasion where I had to use toArray on a nested object - I think Elastica needs to do a recursive toArray, since it's legitimate to add things at various depths in many cases.\nI'll look at doing a PR to solve this but I am currently a bit overwhelmed by elasticsearch itself so I don't have the time to spend on it at the moment.\n. ",
    "SimonSimCity": "@ruflin if it's not longer possible to run a query without limit, please remove the comment here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L199\n. Thanks for the update here - wasn't aware of that issue anymore :)\nThis is fixed by #510.\n. ",
    "36degrees": "Great, thanks for that. Any idea when the next release might go out? We're using composer to include Elastica, I guess we'll just need to use dev-master for now?\n. Do you have the GitHub Packagist hook enabled? Packagist is still seeing 96cbd0e as dev-master.\n. All good, thanks :thumbsup: \n. ",
    "gromaco": "My mistake. Sorry. Was inattentive.\n. ",
    "krzaczek": "Sure ... I'll send the changes tommorow morning \n. Added phpunit test's and updated changes.txt file.\n. Well it failed again .. on 5.3 but this time on some other test. Looks like adding $index->refresh() helped.\n. work in progress here https://github.com/krzaczek/Elastica/tree/aggs\n. @ruflin Need some help naming the \"global\" aggregation. Sine \"global\" is a restricted keyword in PHP  any suggestions how I should name the \"global\" aggregation file and class ? \nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-aggregations-bucket-global-aggregation.html\nElastica/Aggregation/?.php\n. Maybe GlobalBucket since it's a \"global bucketing aggregation\" ?\n. Already did :)\n. Updated changes.txt file\n. Ok i'll write some basic tests next week for the aggregations ... to test actual responses from the es cluster.\n. Done\n. Sorry for the mess .. wil squash this to one commit .. but just don't have the time right now ...\n. Ok squashed\n. sure will do on monday\npawel (at) mobile\n\nOn 24 maj 2014, at 23:45, Nicolas Ruflin notifications@github.com wrote:\nCan you update the changes.txt file and add a small test to make sure, it works as expected also in the future?\n\u2014\nReply to this email directly or view it on GitHub.\n. Should work now ....\n. Can I add it to testSetPostQuery() test ... or do You prefer to put it in a seperate test ?\n. @ruflin Added new test file Query/PostFilterTest.php and placed both tests there. Hope it's ok now.\n\nPawel\n. Done\n. According to doc:\nAlso, the top-level filter parameter in search has been renamed to post_filter, to indicate that it should not be used as the primary way to filter search results (use a filtered query instead), but only to filter results AFTER facets/aggregations have been calculated.\nWe should probably make setFilter deprecated and change it to:\nphp\npublic function setFilter(AbstractFilter $filter)\n    {\n        return $this->setPostFilter($filer)\n    }\nand rewrite setPostFilter to \nphp\npublic function setPostFilter(AbstractFilter $filter)\n    {\n        return $this->setParam('post_filter', $filter->toArray());\n    }\nor better to make it backwards compatible ..\n``` php\npublic function setPostFilter($filter)\n    {\n        if (is_array($filter)) {\n            return $this->setParam(\"post_filter\", $filter);\n        } elseif ($filter instarnceof AbstractFilter) {\n            return $this->setParam('post_filter', $filter->toArray());\n        }\n    }\n```\n. @ruflin What do You think ?\n. Well the BC doesn't affect setFilter method. It always required AbstractFIlter as parameter. Only the setPostFilter required array ... and it's rather new (merged 1 month ago) so the question is shoud we change the param to AbstractFIlter for setPostFilter .. or keep it BC and allow array and AbstractFilter\n. OK ... i've just sent a pull request ... check it out.\n. @ruflin sure ... i'll and a test later today ...\n. Sure :)\n. @ruflin maybe we should trigger a php error (E_USER_DEPRECATED) instead of just setting phpdoc to deprecated\nphp\nbool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] )\nTrigger it in Query->setFilter - this function is deprecated and will be removed in feature realeases\nTrigger it in Query->setPostFIlter if array is passed as $filter\n. @ruflin done - give me 5 min .. i'll squash all the commits into one.\n. @ruflin done\n. Ok no problem .. will fix that\n. ",
    "ChristianRiesen": "+1 to all of it\n. @ruflin This would solve some of Issue #482 in a stroke while introducing on BC breaks.\n. Added changes.txt. Hmm, a test for this... I'll see what I can do.\n. I'll write a test. I want it to scream at whomever might touch that again.\n. If you have some good idea by the way, I'm all ears. I was thinking on testing the protected method directly but not very happy about that one. Better ideas?\n. This isn't the best practice nor the best possible way, but I think this will at least cover this change nicely until a more major rework could be done here.\n. I intended this to be a quick fix and now run into troubles over and over. So I'm just getting a local setup up to speed so I can test it the same way as it's done on Travis. Main problem is the psr/log dependency is in dev but not in non-dev. I can't substitute it properly... But I'm almost there. The plan is to have this running smoothly within the next few hours.\n. @ruflin Redid the fix and rebased it to latest version. Test I leave out for now. It was way too hacky, so better no test then a horrible one. IMHO ready for merge.\n. We had a problem that if you had too many backslashes in it and some sort of regex ran over the output, it would die, rather horribly, in a PHP environment. Might be a point to look at, but I think the pull request is sound.\n. Just had a look: I think the problem is the runtime of the tests. They run for over 50 minutes which is the limit on travis.\n. IMHO:\n- Remove current logging implementation, entirely.\n- Add Psr\\Log as dependency (for logger interface and null logger)\n- Inject logger, if not present, stub it using null logger.\n- Use levels internally properly, as the application knows which message should emit which level of message and let the library (monolog or whatever) that does the actual logging in the end, choose what to do with what level.\nThat would be the most clean solution in my view. The dependency on Psr\\Log is something rather simple (and no real function code involved) and I have yet to see someone using elastic search (and Elastica) and not use composer at the same time, which would gracefully take care of it.\n. ",
    "rhukster": "It was PHP 5.4.19, but I believe he also tried 5.5.3 with similar effects. APC cache on, no Xdebug installed. Pretty much straight from MAMP Pro 2.2. I was screensharing with w00fz when we were debugging this :)\n. Any news on this issue? I have to run my PHP with 1G of memory currently to do a full index due to this. Thanks.\n. Actually we're already breaking it into multiple batches. I think its these batches that are causing the problem.  I'm going to play with the size of batches to see it if helps alleviate the problem.  It's really just duct-tape though ;)\n. Sweet, thanks a lot for tracking this down.  I'm going to test it first thing tomorrow.  Cheers!\n. ",
    "hmonglee": "Hello,\nI use fos:elastica:populate and I have the same memory leak when I trying to index data.\nAfter few hours of search, I noticed that the memory leak perhaps comes from this method \\Elastica\\Client\\request($path, $method = Request::GET, $data = array(), array $query = array()). I don't know why, but I made below some tests to \"resolve\" this issue.\nI just duplicate this method without changing anything and call the duplicate method instead of the method \\Elastica\\Client\\request : https://gist.github.com/hmonglee/7998413, you can noticed that I also comment the log method because of memory leak.\nHere in the method \\Elastica\\Bulk\\send(), I call the duplicate method requestDuplicate :\n```\n/*\n * @return \\Elastica\\Bulk\\ResponseSet\n /\npublic function send()\n{\n    $path = $this->getPath();\n    $data = $this->toString();\n--- $response = $this->_client->request($path, Request::PUT, $data);\n+++ $response = $this->_client->requestDuplicate($path, Request::PUT, $data);\n\nreturn $this->_processResponse($response);\n\n}\n```\nAnd big surprise, no more memory leak. It's very strange, please try this in order to check if we can resolve this issue. Hope, this search will help to resolve.\nConfiguration :\n- last release of ruflin/elastica\n- try with PHP5.4 and PHP 5.5\n- memory_limit=512M\nThe batch :\n- retrieve 50 000 lines from MySQL with Doctrine DBAL\n- addDocuments : 10 000 lines to 10 000 lines\n- result : 1 300 000 lines added without memory leak\n. New bench this morning :\n- PHP 5.4\n- memory_limit= 5120M\n- retrieve 800 000 lines from MySQL with Doctrine DBAL\n- addDocuments : 10 000 lines to 10 000 lines\n- In progress : 11 200 000 lines added without memory leak\n. In fact, memory leak comes from the method _log.\nFOSElasticaBundle override the method request and add also a part of log :\n```\n<?php\nnamespace FOS\\ElasticaBundle;\nuse Elastica\\Client as ElasticaClient;\nuse Elastica\\Request;\nuse FOS\\ElasticaBundle\\Logger\\ElasticaLogger;\n/*\n * @author Gordon Franke info@nevalon.de\n/\nclass Client extends ElasticaClient\n{\n    public function request($path, $method = Request::GET, $data = array(), array $query = array())\n    {\n        $start = microtime(true);\n        $response = parent::request($path, $method, $data, $query);\n    if (null !== $this->_logger and $this->_logger instanceof ElasticaLogger) {\n        $time = microtime(true) - $start;\n\n        $connection = $this->getLastRequest()->getConnection();\n\n        $connection_array = array(\n            'host'      => $connection->getHost(),\n            'port'      => $connection->getPort(),\n            'transport' => $connection->getTransport(),\n        );\n\n        $this->_logger->logQuery($path, $method, $data, $time, $connection_array);\n    }\n\n    return $response;\n}\n\n}\n```\nSo we have a double memory leak, one from ruflin\\Elastica and one from FOSElasticaBundle. If I comment theses lines concerning the logs, I don't have memory leak.\nHere my command : app/console fos:elastica:populate --env=prod, so Monolog doesn't write in the prod.log.\nI noticed that if I comment this line $this->_logger->info('logging Request', $data); from method _log, I don't have memory leak.\n. FOSElasticaBundle add by default a logger to Elastica. So we have to configure FOSElasticaBundle like this :\nfos_elastica:\n    clients:\n        default: { host: localhost, port: 9200, logger: false }\nWith this configuration, I have no memory leak. But we have no more log.\n. Can you paste here your how you index your documents ?\n. ",
    "w00fz": "We tried disabling the logger and commenting out the log call from the request, even tried duplicating the request method as explained above, but it didn't make any difference for us.\n. ",
    "gagarine": "@gido think the problem is the the curl_setopt($conn, CURLOPT_NOBODY, $httpMethod == 'HEAD'); . This option doesn't seem to let you add data on some curl version.\n. Perhaps adding a requirement on the composer.json for curl > 7.19.5\n. ",
    "gido": "As @gagarine says our environment is PHP 5.4.16 with curl 7.24.0.\nFor me, this is a PHP bug or a PHP documentation bug (like this one CURLOPT_NOBODY sets request method to HEAD)\n. I do more research about the failing test (HttpTest#testCurlNobodyOptionIsResetAfterHeadRequest) and found this PR #398.\nThis is annoying because I have the same error than @paul-vasiliev and the only way I found to fix it is to revert his patch...\n. OK, this is definitively a bug in my curllib verson. I doubled checked and we have curl version 7.18.2 on our server (which is quite old).\nI found two thing about this problem, first in the cURL CHANGELOG, there is this bugfixes entry under v7.19.5:\n- Improved the CURLOPT_NOBODY set to 0 confusions\nStart from this, I found a discussion in the cURL mailing-list about CURLOPT_NOBODY:\n\n[...] A sample patch is attached, which solves this particular case but doesn't handle all possible cases.\nOne case it doesn't handle is setting CURLOPT_POST=1, then CURLOPT_NOBODY=0, which would require even more state to be saved or better handling in url.c. Or what about setting e.g. CURLOPT_POST=1, CUROPT_NOBODY=1, CURLOPT_NOBODY=0 - should such scenarios be supported?  [...]\n\nand here an other citation of the mailing list:\n\nWhile I can agree with parts of your reactions, there's nothing in the libcurl \ndocumentation that says how it behaves when you pass a FALSE to \nCURLOPT_NOBODY. So perhaps the CURL binding should just not allow a FALSE \nthere... \n\n...\nSo, this is definitively a bug in the cURL library I use and is fixed in latest release.\nYou can close this PR and I will find a way to upgrade our libcurl version.\nSorry for all this noise, but the problem was hard to debug.\n. Yes you can, by require \"lib-curl\": \"~7.19.5\" but I don't know if this work\nproperly because in the documentation of Composer they says\nthat PHP extension versioning can be quite inconsistent.\nWe should test :-)\nOn Mon, Nov 4, 2013 at 4:18 PM, Nicolas Ruflin notifications@github.comwrote:\n\nInteresting idea. I didn't know this is also possible for php \"core\"\nlibraries. Can you do this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/pull/486#issuecomment-27692554\n.\n. \n",
    "Xylakant": "the boost for individual functions has sort of been replaced by a special boost_factor function. See  https://github.com/ruflin/Elastica/issues/491. It's not 100% the same, since you can't boost decay functions any more.\n. yes, should be.\n. I tentatively agree. It's a bit a stupid situation at the moment, but I just wanted it documented.\n. I guess this one can be closed - it's been fixed on the elasticsearch side\n. None that I know of, but I created an issue for all changes that I stumbled over when testing.\n. There's the elasticsearch api spec but it doesn't contain the individual queries AFAIK.\n. ",
    "dwenaus": "it looks like scale_weight was renamed to decay:\nhttps://gitlab.devero.com/development/elasticsearchssl/commit/9e7ad7249f646670961371bb5d7105b9d6c2be19.patch\n. :D\n. ",
    "mkommar": "Hi!\nYes, the code works. I must have done something wrong with either the code or the data. I appreciate the response. Closing the issue as I have tested the existing code and verified it as working.\n. ",
    "trash80": "I added the unit test and added to changes.txt as requested. :)\n. ",
    "yvmarques": "I don't have access to the exact code right now, but it was exactly the same like it is in the test file, but for the client I'm using the searchly.com service.\n. You can reproduce the problem with this Gist https://gist.github.com/yvmarques/71fa65594bd6be2351d8 I hope it can help you.\nYou can as well use the API Key, you've just a limit of 5Mb for the index and the index creation has some limits that you can find on searchly.com\n. Hi,\nNot yet, because we just tried some examples for a possible future use. But don't worry, I will look at this deeper when I have to use it in our project (that should be soon I think).\nI also found another bug (I guess) but I will open another issue when I can :)\n. ",
    "acidChrist": "Tnx for the response. \nI have tested all possible solutions before. I use addDocument but the document after save has empty _id field. Have no idea what is wrong. If I set document id new Document(1, $data) than there is the id in _id field. If I don't , there isn't. In my point of view if I set empty string as id in new Document('', $data), the _id field should store the id automatically generated by ElasticSearch like that: 6a8ca01c-7896-48e9-81cc-9f70661fcb32.\nHow I add the document:\n```\n        $type = $this->index->getType($typeName);\n    $doc = \\Elastica\\Document('', $data);\n\n    $type->addDocument($doc);\n\n    $this->index->optimize();\n\n```\nI have recognised Elastica unit tests in order to be sure I do the procedures of managing data the right way. Haven't more ideas how to do that. Have I missed something?\n. Nicolas, tnx for your help. Now it works properly:D\n. Why not if I had a time;) We could have a talk about that. I have some ideas which would like to share. Let me know which channel is best for you to talk.\n. To be honest, I can't find your email address on github. You keep it private probably.\n. ",
    "kaiwa": "Btw, ResponseSet for this is the following one. I'm not that familar with the internals of this lib, shouldn't it be an error response or even throw an exception (i've just noticed it is saying _error => false)?\nobject(Elastica\\Bulk\\ResponseSet)#114 (7) {\n  [\"_bulkResponses\":protected]=>\n  array(0) {\n  }\n  [\"_position\":protected]=>\n  int(0)\n  [\"_queryTime\":protected]=>\n  NULL\n  [\"_responseString\":protected]=>\n  string(0) \"\"\n  [\"_error\":protected]=>\n  bool(false)\n  [\"_transferInfo\":protected]=>\n  array(0) {\n  }\n  [\"_response\":protected]=>\n  array(1) {\n    [\"message\"]=>\n    string(51) \"No handler found for uri [//_bulk] and method [PUT]\"\n  }\n}\n. Yep that fixed it, thanks for your quick action.\n. I will close this one for the sake of clarity and open another issue for the error / exception thing.\n. No hurry, created it just to keep the issue tracker neat ;-)\n. @ruflin OOps, sorry, seems I had overlooked the notification of your comment.\nUnfortunately no updates from my side as I'm currently not working on the project.. may resume working on it soon.\n. ",
    "nickel715": "I've currently no access to an elasticsearch server but as I remember the _cluster/state request doesn't return a list of node names.\nSo it seams that you have to request the informations for every node like i said.\n. yeah, i checked the response and find out that Cluster::_data['nodes'] is an array with node informations including the node name :) \ni will implement this and create a pull request ;)\nCluster::_data['nodes'] :\n``` php\nArray\n(\n    [1] => Array\n        (\n            [name] => MyNode\n            [transport_address] => local[1]\n            [attributes] => Array\n                (\n                    [local] => true\n                )\n    )\n\n)\n```\n. sorry i'm very busy, i will try to fix it in next days\n. already done in 1c7c432a61ea6cb7620de6b8a94660e143027bc2?\nDoes the composer.json file also needs an update? In composer.json PHP 5.3 is still supported\n. fix #503 \n. ",
    "kien-truong": "If I read the docs correctly, at least the following params are supported routing, parent, timeout, replication, consistency, percolate, refresh, fields, retry_on_conflict.\nYou can verify it here, at the bottom of the page\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-update.html\n. I'll find time to do it this weekend.\n. Pull request created #520 \n. I have replace the switch/case and add integration test with ES. \n. ",
    "priyolahiri": "This becomes specially important when receiving large datasets back from Elastic. Gz compression helps immensely.\n. Not  yet, Will fork, make the code changes and issue a pull request in the next two days.\nOn 12-Dec-2013, at 4:22 am, Nicolas Ruflin notifications@github.com wrote:\n\nDid you try it out and did it work?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "xyu": "Please let me know if you would like me to resubmit this pull request from a branch instead of master.\n. I guess that depends on what type of test you are thinking of.\nRight now with Elasticsearch 90.7 if I execute a scrolling query against our cluster and hit 175 shards I get a ~7.5kb scroll_id back. If we want to produce a failing test that's fixed by this patch I would guess we need to create a test index with ~100 shards in it. I'm unclear if each shard will need data in it in order to be part of the serialized scroll_id. (The other option is to include 4kb of useless data in the query as part of the test to simulate an extra long scroll_id however that seems both fragile and convoluted.)\nIf what you mean is to simply test that we are submitting the scroll_id via HTTP body that should be easily testable using the getLastRequest() method.\nHow do you feel about those options?\n. Sorry about having the create a dupe but I opened up another ticket #519 to pull from a branch instead of master so that git history can be cleaner without cross merging.\n. Thanks @ruflin!\nI didn't get a chance to cleanup the tests like you suggested yesterday, let me know if you still want new tests for this change as opposed to the changed tests.\n. ",
    "FredoVelcro": "I confirm :   I use bulk insert with $client->bulk($data) to index a lot of documents (300 000+) \nI had memory leaks but disabling the logger, all went OK.\n. ",
    "omondiy": "I had the same tried this suggestion and it worked! Thanks!\n. ",
    "nik9000": "@ruflin I'm not really sure what to do about the rests at this point.  This isn't something I know how to test without knocking around the actual Elasticsearch instances.  I'll update the changes.txt file, see if I can clean up the code, and just remove the test for now.\n. It turns out we've been running with this patch for a long time and never noticed it.  We caught it when we upgraded.\n. Thank you. This will really help when I have to do an index rebuild to update mapping. \n\nOn Mar 4, 2014, at 1:07 AM, Nicolas Ruflin notifications@github.com wrote:\nMerged. Thx\n\u2014\nReply to this email directly or view it on GitHub.\n. Easy fix and I'll send a pull request for it in a moment.\n. The travis build failures look spurious - they are related to thrift I believe.\n. Thanks!\n\nOn Mon, Jun 2, 2014 at 2:46 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\nThx, merged. Some travis builds sometimes randomly fail.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/624#issuecomment-44875642.\n. Sorry, yeah, I'm just letting travis run the regression tests first.  Same for #627.  Well, they kind of get fixed together because doing that one gets this one \"for free\".\n. I'm not in love with the Updatable name but it gets the job done.\n. Everything on the Updatable object should be respected by updates, yeah.  Source isn't really right because it really only works as the command you can give to an update action.  UpdateCommand?  Its a bit lame, but it makes some sense.\n. On Tue, Jun 10, 2014 at 5:00 PM, Nicolas Ruflin notifications@github.com\nwrote:\nCan Updatable be used alone? Probably not, so we could make it an abstract\nobject to make it clear, it should not be used directly. UpdateAbstract?\nUpdatableAbstract? I don't want to block this pull request because of a\nname discussion. If we don't come to a name conclusion fast, lets just pick\none :-)\nAbstractUpdateAction?\nCan you make the changes.txt update a little bit more extensive?\n\nSure, will do in the morning.\n. Yup.  Will do in the morning.\nOn Tue, Jun 10, 2014 at 5:20 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\n(+1) for AbstractUpdateAction. Lets go with this one. Can you update this\nalso in the code?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/629#issuecomment-45673465.\n. Updated.  Travis seems upset with me at the moment though.\n. Rebased on top of master.  I can squash if you think that'll help.\n. Squashed all my commits to one.  Since its on top of master it should just merge clean.\n. I fixed an obvious error and the tests look fixed locally but travis is still unhappy.\n. I can get it to fail every third time I run it locally.  I'll see if I can track it down.\n. https://github.com/ruflin/Elastica/pull/634\n. Rebased and pushed.  I'm running the tests again locally because I'll probably beat travis.  It'd be useful to generate changes.txt on release rather then when as part of the pull request - it seems like the most likely thing to fail merges.\n. Builds were looking good but I had to amend to fix a merge error I left in changes.txt.\n. Thanks!\n\nOn Fri, Jun 13, 2014 at 4:56 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\nMerged. Thx a lot for all the extra effort.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/629#issuecomment-46058863.\n. I'm actually not sure how it worked before this.  I didn't go digging into history, only Elasticsearch's source code.\n. I'll have a look.\n. Unfortunate: I just amended and pushed a fix for the other test.\n. Let me disentangle.\n. https://github.com/ruflin/Elastica/pull/635\n. I didn't make an issue for this one.  Do you want one?\n. Much better.\n. Thanks!\n\nOn Sun, Jun 15, 2014 at 4:33 AM, Nicolas Ruflin notifications@github.com\nwrote:\n\n@nik9000 https://github.com/nik9000 Side note here: All your changes\nare in the newest 1.2.1.0 release\nhttps://github.com/ruflin/Elastica/releases/tag/v1.2.1.0\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/635#issuecomment-46110115.\n. Done\n. Done\n. \n",
    "tasuki": "Thank you for your quick merge, Nicolas!\n. ",
    "fabeat": "Yeah - I'm just setting up a VM to be able to run the tests :)\n. As I reckon that the properties are the values one might want to change the most, I added a getter for that too\n. ",
    "danielmitd": "\nI would suggest that we already add the function found and keep exists as a proxy but markit as deprecated. \n\nThere is no need to remove the function Elastica\\Type::exists. The only thing that has changed from 0.9 to 1.0 is the name of the json property in GET-Requests exists which is now returned as found. Other calls like the DELETE-Request already returned the found keyword, so this was just inconsistent in 0.9.\nSo an other solution would be to check both, the property exists and found, but that would be kind of ugly, just to support both. If the request returns the content with the http code 200, everything is fine, in 0.9 and 1.0. Otherwise the response code would be 404.\n. ",
    "oohnoitz": "Yes. I had noticed that there were a number of breaking changes in 1.0.x after checking elasticsearch's docs. Anyway, I hope this is what you meant.\n. Yeah. I'll keep the original test and add a new one instead to check that factor works.\n. ",
    "sydekumf": "Unfortunately the same happens. No results were found, but Sense does find one result. The JSON is now {\"query\":{\"term\":{\"email\":{\"value\":\"asd1@web.de\",\"boost\":1}}}}.\n. The json is now {\"query\":{\"match_all\":{}}}. There still are no results. I add the code I use for index and mapping creation, maybe there is something wrong? But why does Sense then find results?\nphp\n$elasticaIndex->create(\n            array(\n                'number_of_shards' => 4,\n                'number_of_replicas' => 1,\n                'analysis' => array(\n                    'analyzer' => array(\n                        'indexAnalyzer' => array(\n                            'type' => 'custom',\n                            'tokenizer' => 'keyword'\n                        ),\n                        'searchAnalyzer' => array(\n                            'type' => 'custom',\n                            'tokenizer' => 'keyword'\n                        )\n                    )\n                )\n            ),\n            true\n        );\n``` php\n$elasticaType = $elasticaIndex->getType('user');\n// Define mapping\n$mapping = new \\Elastica\\Type\\Mapping();\n$mapping->setType($elasticaType);\n$mapping->setParam('index_analyzer', 'indexAnalyzer');\n$mapping->setParam('search_analyzer', 'searchAnalyzer');\n// Send mapping to type\n$mapping->send();\n```\n. OMG, I found it and it is embarrassing because it is my fault. I am sorry, but thanks for your time and the patience :-)\n. ",
    "paulhuisman": "I was wondering if this tutorial is still available? :)\n. Thanks alot for the fast response guys, really helpful!\n. ",
    "EikeKre": "Sorry, but what is a bc change? After checking out the newest version I think this is fixed! Nothing to do for me but using the newer one :)\n. ",
    "rauanmayemir": "Sure, I'll do it.\nBtw, JSON_PRETTY_PRINT seems to cause some troubles in http transport. I assume it's because of new lines in command, so i rolled back and leaved only unicode stuff.\n. @stloyd updated the code. both constants were introduced in 5.4, so there's no need to check them separately. also this is the way symphony\\console does, apparently.\n. ",
    "Tomdarkness": "Been playing around and the issue seems related to the persistent curl connection. I've logged the responses and using a persistent curl connection seems to occasionally either return stale (i.e the result of a previous request) or blank responses. \n. Yeah, turning off persistent fixes the problem. Although I'm not sure why the issue is occurring with persistent enabled, seems like strange behaviour.\nI'd use bulk queries but the problem is it is indexing data received over an API (i.e have no control when data comes in) and it needs to be available to search pretty much instantly.\n. ",
    "tastendruecker": "I just stumbled over this problem and would like to pick up the discussion again. I agree with rayward: As the result is the same, no exception should be thrown. My suggestion would be to remove the corresponding block.\n@ruflin Would that be okay with you? Would you remove that code?. Isn't the returned $response object supposed to carry that information? (Please bare with me as I haven't much experience with Elastica. I just depend on using it within a project that had been designed before I entered the project team.). Hi @ruflin! We discussed this enhancement in this issue.\nI'll have a look at the tests.. Tests seem to work now and I have added a line to CHANGELOG.md.. ",
    "benniekrijger": "Added an entry to the changes.txt file as well as functional tests for both filters\n. ",
    "pentarim": "@ruflin Added, do you need anything else?\n. Thank you for all your work!\n. @ruflin can I ask you to tag a release?\n. ",
    "a-legrand": ":)\n. QueryBuilder is now OK\nI will add Flags implementation soon\n. ",
    "comensee": "Well...\nMy bad on this one.. Elasticsearch was not updated to 1.0.\nI can close this issue.\n. ",
    "Decave": "It looks like the change was introduced in Elasticsearch 1.0 for consistency because fields can return both single values and arrays. See http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/_return_values.html\n. Hmmm, is this a bug in Elastica or ElasticSearch?\n. ",
    "mal": "N.B. the errors shown here are the same as the ones currently broken on master :)\n. Guessing you were asking for a test? I think this should cover it\n. That looks good for fixing the issue in Index.php but I think (although I've not had a chance to test it) that it will still exist in Type.php#L301. \nI'm relatively new to Elastica, so I'm not sure what the result of a Type::getMapping call should be, but if it's intended to be basically the same as the argument passed to Type::setMapping then I think it also needs to drill into the results using the Type's name, maybe something like?\n``` php\n    public function getMapping()\n    {\n        $path = '_mapping';\n    $response = $this->request($path, Request::GET);\n    $data = $response->getData();\n\n    $mapping = array_shift($data);\n    if (isset($mapping['mappings'][$this->getName()]['properties'])) {\n        return $mapping['mappings'][$this->getName()]['properties'];\n    }\n\n    return array();\n}\n\n``\n. Happy to do so, but I'm a little confused by the tests; [IndexTest::testMapping](https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/IndexTest.php#L19) seems to be testingType::getMapping, while [TypeTest::testGetMappingAlias](https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/TypeTest.php#L775) seems to testIndex::getMapping:/\n. Removed https://github.com/ruflin/Elastica/commit/fa5612a68a4caff7bbd213a020a18865d8e38bb4 as it was based on a misunderstanding of how Elastica handles types and mappings. The specified issue should be resolved and tests should now pass. :grinning: \n. I'm not sure why only some of those tests erred, is there a way to rerun them?\n. Weird; the parent of my commit is the one that's at the tip of the master branch? Should I be basing off of a different branch? And no, to the best of my knowledge nothing I've changed should make them take that long :/\n. Great news! Sorry about the hiccup withreset! :flushed:\n. Solved by #736\n. Given that these flags only feedjson_encode`, it might be nicer to wrap the functionality as a whole, avoiding both globals and slightly odd constant methods; i.e.\n``` php\nclass Util { ...\npublic static stringify($input)\n{\n    return json_encode(\n        $input,\n        (defined('JSON_UNESCAPED_SLASHES') ? JSON_UNESCAPED_SLASHES : 64)\n      | (defined('JSON_UNESCAPED_UNICODE') ? JSON_UNESCAPED_UNICODE : 256)\n    );\n}\n\n}\n```\nThe example adds a method to Util, but it might be more intuitive to have a new Elastica\\JSON class or something, so you can simply do JSON::stringify($array);. Thoughts?\n. @ruflin Looks like that weird runaway test error is still happening sometimes :frowning:, the majority of the matrix passed normally in under 5 minutes, but two ran the clock out [25142839].\n. Out of curiosity, I'd be interested to understand the use case for a FilteredQuery with no filter to apply to the query, or no query to be filtered?\n. Also; while trying to understand filtered queries a bit more; I tried this on ES1.1 and got valid results; so maybe a check/exception isn't needed at all ...\njson\n{\n  \"query\": {\n    \"filtered\": {}\n  }\n}\n. Technically neither query, nor filter is required, it can in effect be empty, which seems to behave much like match_all.\n. Good catch!\n. It came with the headers I copied out of another of the exception classes; Google suggests it may be a company name.\n. I'm leaving this as is, as I don't want to change any Elastica behaviour in this PR, might be worth a separate issue if you think it would be useful though.\n. Judging from the docs, both a query and filter are always required, so if one is missing the user needs to know which. Your message suggests it's possible to supply only one.\n. In that case, you can save a comparison with something like;\n``` php\n    public function toArray()\n    {\n        $filtered = array();\n    if ($this->_query !== null) {\n        $filtered['query'] = $this->_query->toArray();\n    }\n\n    if ($this->_filter !== null) {\n        $filtered['filter'] = $this->_filter->toArray();\n    }\n\n    if (empty($filtered)) {\n        throw new NotFoundException('A query and/or filter is required');\n    }\n\n    return array('filtered' => $filtered);\n}\n\n```\n. ",
    "lalop": "I've the current master version.\nSpecial character is prefixed by \"\\\\\" which is \\ since the first slash currently escape the second one.\n. It seems, yes.\nIt was the case for me, but that depend on the elasticsearch version.\n. Yes, sure.\nIt's done\n. Oh, sorry I had to do a new pull resuest since the first one was merged\n. ",
    "sten": "@ruflin I fixed the bug and I tried to push my local branch to create a pull request, but I get the following error: \nremote: Permission to ruflin/Elastica.git denied to sten.\nHow can I resolve this? Thanks!\n. I am sorry for the trouble! I forked it and made a pull request in my fork. Thanks for the help!\nhttps://github.com/ruflin/Elastica/pull/596\n. Thanks! I will update the changes.txt.\nCould you let me know what you expect from an integration test? Should I setup a small index with some sample docs and execute a query and assert the correctness? Or do you have examples?\n. @ruflin, I wrote an integration test and updated changes.txt. Thanks for the quick feedback!\n. ",
    "bdecarne": "Done.\n. Re-done.\n. ",
    "Jmoati": "To use the second way, just do:\nphp\n$match = new Query\\Match();\n$match->setFieldQuery($field, $phrase);\n$match->setFieldType($field, 'phrase');\nDo you really want classes proxy for that ?\nI can do it, if usefull.\n. @ruflin Can you please close this issue ?\n. I use https://github.com/ifgh/elasticsearch-image which is a 1.4.2 fork.\nI think that it will work with 1.4.3 too.\n. I will try this as soon as i can.\n. Can you please check.\n. Maybe, the PR can be accepted before I implement it in QueryBuilder if necessary?\n. Thx.\n. Test passed in my repo : https://travis-ci.org/Jmoati/Elastica =/\nCan you restart it ?\n. Thx.\n. I will replace by $this.\n. You are right.\n. It's fixed.\n. ",
    "yehosef": "I think the library is most useful when it matches the documented way of doing it - and if there are two ways of doing the same thing I would prefer that be replicated in the library (obviously with a proxy method).\n. @ruflin  - I'll try. \n. I think this should be reopened.  Other options of the function_score are supported natively: weight, script, random, decay.  It's not clear why the field_value_factor should not be supported natively.\nI think it's fine to leave open for someone to make the changes and pull request - but in my mind this is still an unresolved issue.   (I'm relatively new to ES and Elastica - so maybe I'm missing something..)\n. ok - .. you can leave open for a little and I'll see if I can do it.  I\nhave a working implementation.  The issue is that probably it needs to\nensure that the fields are not specified or else it will give partial\ndocuments and saving them would not give the desired results.\nOn Mon, Oct 19, 2015 at 9:48 AM, Nicolas Ruflin notifications@github.com\nwrote:\n\nCurrently this is not directly supported by Elastica. It was requested\nseveral times in the past but nobody implemented it so far. It shouldn't be\ntoo hard to implement it on top of ResultSet or Result. It would required\nto create document objects based on the retrieved values.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/960#issuecomment-149118242.\n. Thanks!  I'm building an ORM like structure using Elastica - this is the part in my constructor where I handle Elastic\\Result\n\n```\n elseif ($data instanceof Elastica\\Result)\n    {\n        /* @var Elastica\\Result $data /\n    $doc = new Elastica\\Document($data->getId(), $data->getData());\n\n    $version = $data->getVersion();\n    $version && $doc->setVersion($version);\n\n    $this->doc = $doc;\n    $this->doc->setDocAsUpsert(true);\n}\n\n```\na few things I'm not sure about:\n1) do I need the version check, or will a Result always have a version?\n2) I'm not sure if I need the DocAsUpsert (I not even really sure what this does.. :)\n3) is there anything else I need to be passing into the new Document from the Result?\nLike I said, I assume there should be some $data->getFields() check or something - if I specified the fields, I assume it would fail because I might not have all the data.\nAny other ideas based on your experience with ES?\nps - thank you so much for Elastica - it's really amazing!\n. Thanks for the comments.  \nI don't set a version in the doc, will it do a check?  If not, if the version isn't set in the request then the doc will not have it and it'll save fine anyway.\nAbout the inline if - I find the style easier to read, but I know others don't so I'll change.\nYou say \n\nIn this case if no fields exist an exception can be thrown\nThis should be if the $data->getFields() is set, no?  If I specified the fields in the request, then I can't know without comparing the fields (which is messier and I don't think an important starting point).\n\nAbout adding the index/type.  When I normally get back a document from a primary key lookup, do I also have the index and type? I'm not familiar enough with the interplay between documents and index/types.\nWhat do you mean that the creation of the doc should be in a separate function?  I'm assuming there will be a specific factory function in Elastica (maybe Elastica\\Document).  I don't think in the main class I would put in the constructor - I just did it my class because it's an ORM.  Perhaps something like Elastica\\Document::createFromResult.  There could also be a createFromResultSet as a helper to do the looping.  \nWhat do you think about these directions?\n. sorry - I haven't worked on this any more.  I think the approach with the ResultSet->getDocuments() and/or Result->getDocument() is great.\n. nevermind - I realize this is due to my error settings and depreciated warnings.  move along!\n. sorry for not including it.  From\nhttp://elastica.io/examples/\nI click on the link test suite of Elastica\nhttps://github.com/ruflin/Elastica/tree/master/test/lib/Elastica/Test which\ntakes me to\nhttps://github.com/ruflin/Elastica/tree/master/test/lib/Elastica/Test\nwhen it seems it should take me to\nhttps://github.com/ruflin/Elastica/tree/master/test/Elastica\nThanks again for the lib - it's really great!\nOn Wed, Aug 23, 2017 at 11:54 AM, Nicolas Ruflin notifications@github.com\nwrote:\n\nWhere did you find this link?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1357#issuecomment-324265621,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAJHBRuzhOfK8h9q1LdiifwB-qEiQAv_ks5sa-ingaJpZM4O-hB2\n.\n. \n",
    "olee": "Also there is no method to set slop without having a class for that.\nCurrently you need to call\n$match->setFieldParam('myField', 'slop', 100);\n. ",
    "kartikm": "Thank you!\n. Abandoned. Messed with branch.\n. Right. New to Elastica. Closing :)\n. ",
    "atsiddiqui": "closing this issue Open a pull request #606 \n. ",
    "PurpleHexagon": "\nUpdated changes.txt\nAdded additional test to ensure params overrides params of object as per comment line 90 of Elastica\\Params \nupdated Elastica\\Query\\FuzzyLikeThis toArray method to use array_merge so test passes \n. No problem, I will add these in the morning :)\n. I've added test to test that analyzers work with fuzzyLikeThis Query\n. \n",
    "demon": "Eh, not perfect yet. Emits some notices.\n. Yes, I shall fix it up shortly, just hadn't finished it and got sucked into a bunch of meetings :)\n. I think doing it either of your ways is fine and avoids the global define problem entirely. \n. Closing in favor of pull #614 instead.\n. That would work but only in 5.4+ basically.\nSee for example this implementation where you munge the json after recieving it and if the int is longer than PHP_INT_MAX rewrite it as a string before passing it to json_decode() if you don't have JSON_BIGINT_AS_STRING support.\n. It also seems to work around it when jsonc is present unless I'm misreading it. In which case we'd still want it even in 5.4+\n. ",
    "hugohenrique": "In this case, in my opinion the constructor method should not exist.\n. Hi @ruflin, Yes! You must verify the toArray() if one was assigned. \nI can do this if you prefer..\n- Could receive null with default values\u200b\u200b.\n. ping @ruflin \n. ping @ruflin \n. ping @ruflin \n. @ruflin, I change some points, based in your suggestions, but others do not seed the need, you can reevaluate?\n. Hi @ruflin, \nSorry my english could not understand your first question. \nI think if you do your suggestions will be most appreciated!\n. How can we end this?\n. Thanks @ruflin!\n. @ruflin @im-denisenko You already imagined how it would implement to support the inner hits results?\nHow can I help?\n. I don't understand this point: \"Also please use an exception per variable so it is clear, which one is missing for the developer using the library.\"\n. @mal Not! both unnecessary arguments and documentation shows that you can use both \"query\", \"filter\" or both.\n. @mal thanks for the suggestion!\n. ",
    "milan": "Out of memory issues on travis, it passed here: https://travis-ci.org/milan/Elastica/builds/25789973. Not sure if this can be rerun without another push, but give me a shout if there is anything you'd want to change anyway.\n. I was thinking the same thing, but couldn't decide on an approach, I think at a high level they are the same, so would probably lean towards a base class with a concrete exec() function made up abstract methods that get extended by Http/Guzzle implementing just those abstract functions?\nCould we create a new issue regarding the best approach to refactor this and I'll try and create a pull request with some refactored code once there is a set direction.\n. Cool, i'll try and get this done this week.\n. ",
    "yitsushi": "Sorry.\n. Merged (thanks)\n. Build failed on ScanAndScrollTest::testQuerySizeOverride (Failed to execute phase [init_scan], all shards failed)\n. Of course, changed. I was a little bit confused about naming and when I asked my collage: \"What do you think of \\Elastica\\Query\\Boosting?\" and he said \"Is it an extra query parameter to set custom boosting?\" :D So I named it BoostingQuery.\ntoArray... Yeah I surprised a little bit about it first time but when I dug deeper I found a line in Util::getParamName (Query extends Param and Param's toArray calls this function)\n$last  = preg_replace('/(Facet|Query|Filter)$/', '', $last);\nSo that's why it worked\n. ",
    "Sshuichi": "Yes :  [Symfony\\Component\\Debug\\Exception\\ContextErrorException]\n  Warning: json_encode(): Invalid UTF-8 se\n  quence in argument in /usr/share/nginx/w\n  ww/site.com/vendor/ruflin/elastica/l\n  ib/Elastica/JSON.php line 65\n. I'm using Mongodb , I can give you the cities.json and the model of the collection  from which  it get populated if you want to reproduce the error\n. Before , it was this notice : PHP Warning:  json_encode(): Invalid UTF-8 sequence in argument in /usr/share/nginx/www/site.com/vendor/ruflin/elastica/lib/Elastica/Bulk/Action.php on line 196\nI don't know why symfony is throwing an exception.\nMaybe it's a symfony question after all \n. How can I prevent this ? \n. I have two main collections in my mongodb database.\nOne for posts and one for cities.\nElasticsearch indexes posts that has arabic char with no problem\nbut when it comes to cities , it throws exception on arabic characters.\nIf you have anything to say about this matter , please do so. if  not ,feel free to close this ticket\n. for the cities, I have a Json file where special chars are encoded as \"\\u68\"  when I import the json file to mongodb, they're converted to their natural format for example : sal\u00e9 was encoded sal\\u3421 (random number) and in mongodb I can clearly read it sal\u00e9. So my assumption is the connection between mongodb and elasticsearch is not utf-8 encoded. but then again ,  posts collection works just fine so I'm going to double check the configuration of elasticabundle for symfony.\n. OK Fixed it. the cities.json was not formed correctly , I had to use UNESCAPE_UNICODE constant in json_encode to form that file \nThanks a lot \n. ",
    "merk": "It doesnt look like that ticket is actually the cause - that was about supplying the url configuration key to Elastica when we shouldnt be.\nAnd we (FOSElasticaBundle) dont modify any Elastica query objects - do you have an example of an actual query you are sending that results in the weird notation?\n. It basically allows you to define a requirement for a development version of Elastica using versions. If your next version is going to be part of the 1.2.x range, you'd set the branch alias to 1.2.x-dev and you can use a composer constraint of 1.2.*@dev to receive any new commits in master\nhttps://getcomposer.org/doc/articles/aliases.md\n. I think the issue is cordoval wants to use 1.3 of the bundle, except I havent bumped the constraints to support 1.3.* yet. \nDo you offer a BC promise for 1.x? If you do I can just set up a constraint of ~1.0 (any 1.x series version).\n. 4 number version constraints arent likely to be the problem. If you encountered a weird composer issue you should lodge a stack trace with the composer project.\n. You can also set the Authorization HTTP Header:\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Tests/DependencyInjection/ConfigurationTest.php#L53\n. You're right - it does feel fragile.\nA prototype that I wrote a few months ago:\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/new-api/Elastica/TransformingSearch.php\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/new-api/Elastica/TransformingResultSet.php\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/new-api/Elastica/TransformingResult.php\nA ResultSet factory of some description could work. I'll see what I can mock up.\n. So I'm not sure of the best approach for your library, the way I'd achieve it is to inject a ResultSet factory to anything that needs a ResultSet, but that requires an additional injection into the Type and Search classes which doesnt suit the usage patterns.\nThe only other option I can come up with is to use a static create method on the ResultSet that can be configured which class name to use for creation. Are you okay this this approach?\n``` php\n    public static function create(Response $response, Query $query)\n    {\n         $class = static::$class;\n     return new $class($response, $query);\n}\n\n```\nWhich would then allow a ResultSet::setClass method to modify static::$class.\n. I've updated the PR with a concept for using a static factory method.\n. Updated.\n. My original solution moved the responsibility to the Client which was worse. The alternative to this is to make a breaking change to the Type and Search constructors.\nI'd like to avoid having to override Client, Index, Type, Search and ResultSet in FOSElasticaBundle and I dont see many other options without a BC break.\n. The correct method for accessing this information in twig is {{ result.data.key }} or {{ attribute(result.data, keyFromVariable) }}.\n. Additionally, twig can be configured to ignore non existant variables which is talked about in the documentation (and even enabled in symfony2-standard's production mode)\n. Sorry - I misunderstood the problem. The issue is twig will throw an exception on nonexistent properties by default, there are a few different ways of handling this, and my above solution won't work if the property is undefined.\n{{ result.key | default('') }} will provide you with a default value if it is undefined,\n{% if result.key is defined %}{{ result.key }} {% endif %} will only print the value if it is defined.\n. Your definition of cleanliness doesnt match mine. You want to iterate over data in an array from the result. Not a property of result.\n. FOSElasticaBundle wont be affected by this. The composer autoloader will handle it all.\n. A class_exists call will bubble to a custom autoloader if the class hasnt been loaded before. It might make sense to check for Elastica builtin classes first before just calling class_exists on the string. It'll solve almost all uses of this function and anyone passing in something that isnt built in will typically be a FQCN not a root class.\n. Setting $autoload to false for this class_exists is not suitable.\n. My suggestion would be to swap the order of the 2 class_exists checks - it means that Simple will find the Elastica's full namespaced Simple class before it tries to find a root class called Simple.\nIn cases where users are putting in strings that dont map to Elastica's strategies, they're controlling exactly what goes in.\n. I dont like the idea that we add more parameters to a legacy configuration array. I'm all for the transport supporting these options and as long as the 'proper' way to create a transport is documented all should be well.\n. We wont need to do anything specific to support the QB, though we'll have to update our documentation to point to using this as the recommended way of handling queries.\n. I am against bumping the required PHP version just to use short array syntax. If thats the only reason for the bump there is no point.\nIf bumping to access other features to have tidier and better maintained code then it makes sense to do so.\n. If short array syntax is used in the codebase there is no point.\nIf you're bumping required versions why not bump it to 5.5? Though I'd prefer to see the library bump to v2 and start following semver than dropping PHP support.\n. I'm completely +1 on semantic versioning. \nI dont believe being linked to ElasticSearch's version makes all that much sense now that the API is more stable, but even then - using a MySQL 5.6 function through PDO on a 5.5 server will cause an exception. I'd expect the same from Elastica.\n. There isnt a hard link between Elastica's basic querying support and ElasticSearch versions, and you cant generally expect to use a feature in Elastica that isnt present in your ElasticSearch version.\nIt might make some sense to document methods added that have a minimum required ES version, but other than that I dont think theres much point documenting supported versions.\n2.0 is fine, imo.\n. I'd keep your tag format the same as for the 1.x releases (with or without a v)\nAs for branches my personal opinion is 1.4, 2.0, 2.1, etc\n. I'd be creating a 1.4 branch for maintenance of 1.4 and putting 2.0-dev into master personally though. \n. Not normally for dev no - for example FOSElasticaBundle has 2 branches right now: master, for developing 3.1, and 3.0 for bug fix releases to 3.0 (which are merged into master occasionally).\nI'd say with semver, Elastica would be similar.\n. Using a deprecation cycle during 2.0 and removal in 3.0 could work. I have a few things that I hope to propose over the next few months that are going to probably need some big changes\n. The way I like to work for development is to have a stable release branch where no new features go - but bug fixes do, and a development branch where new features go. It means you can have an extended testing period of a newer version.. No need to bump minor versions for bug fixes, just bump the patch version.\n. Sorry, I equate develop branch with master in my head - we're on the same page :)\n. An example of what FOSElasticaBundle's configuration for a type might look like can be seen here: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Tests/Functional/app/Basic/config.yml#L68-96\nNote that I do not propose to use the same syntax/method that the bundle uses, but it is the basis of what is required of such a feature.\n. I agree that this should be separate from the core Mapping features already implemented in Elastica, but I'm not sure on the best approach here, I dont like the annotation or virtual property approach anymore since indexes/types dont behave the same way.\nThe only thing I've come up with since I posted this was that there should be a directory specified that contains mapping json files that can be written just like you'd be writing them from the ElasticSearch documentation. \nWe'd then have tools that can write, update or run the mapping commands as required. Maybe a service that can be interrogated about specific indexes for things like serializing objects without explicit mapping.\n. No. What I propose is transformation of an ODM or ORM object into an Elastica document. FOSElasticaBundle also provides a way to convert an Elastica Result object into its original ORM/ODM object but I'm not sure how useful that is for general Elastica users.\n. I guess it depends if you're planning on using ElasticSearch as a primary document store or not. FOSElasticaBundle doesnt make this assumption. It provides functionality that lets you populate the search indexes based on your primary document stores.\nThe point of this feature is basically to allow the conversion of your App's BlogPost document to a representation that you can index, performing transformations on data as required by the mappings known. In a lot of cases the fields will be the same, but that isnt a safe assumption to make.\nYes, this could be talk about some kind of mapper for ES, but this conversation is specifically about a service that handles a conversion, lets create a separate issue to talk about some kind of mapper if there is interest in that.\n. I'm happy to approach an initial PR if @ruflin things its worth it. I agree that the current code is too tightly coupled but the whole point of moving it upstream from FOSElastica would be to have an opportunity to do it better.\nWe can make the symfony dependencies like PropertyAccess and ExpressionLanguage optional, and I'm not aware of any other dependencies that would be required for such a feature.\n. It looks like the configuration for the bundle doesnt support passing extra parameters and a PR will need to be sent against FOSElastica to let the options through.\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/DependencyInjection/Configuration.php#L109-133\nA workaround would be to define the basic parameters for each connection and overwrite the service definitions for the connections in services.yml until the extra parameters are supported.\n. @ruflin I've been hitting issues with FOSEB which aren't worth fixing and prompt me to start over. Where are you at with this change? Is it still on the radar?\nI dont really want to start from scratch on a dependency of Elastica if Elastica is going to move to become a value add on top of the official client, I'd prefer to support both from the get go.\n. The biggest pain point right now is the hard BC breaks from 2.x to 3.x of Elastica - given you move your required ES version with each release, we cant maintain support for ES1.7 (or any other release version) without maintaining multiple branches - coupled with a low test coverage and removal of features in Elastica 3 its unlikely or very hard to support both in one code branch.\nFundamentally, I'm not willing to break support for older versions unless there is a very real and important reason to, and since FOSEB is only using the most basic features of Elastica, it doesnt make sense to track your latest versions only.\n. And I think the biggest pain point moving forward is managing index and transformation metadata. There is no generic method for defining this information, and the way we're handling it now is fragile and prone to breakage. I still havent been able to work out a decent enough solution. https://github.com/ruflin/Elastica/issues/810\n. @ruflin Sounds good. I've got a few things to finish off over the next day but will ping you when I get a chance to free up some time.\n@ewgRa Not all versions, I'm just against BC breaks for the sake of breaks (and version incompatibilities) and want to see Elastica become easier to integrate.\n. I've only been able to run unit tests because of my remote location, so there could be major functional failures which I'll look at when the approach is :+1: to continue.\n. I think putting transformer implementations in Elastica isn't really a big deal because they're optional - they don't actually have to bring in hard dependences, that only has to be done if a specific transformer will be used.\nThe Doctrine dependency is optional, and only specified in dev-dependencies for testing purposes, as is the Symfony dispatcher (though, personally I'd really like to make it mandatory). More detail about the Symfony dispatcher (which, in the documentation says it implements the Mediator pattern): http://symfony.com/doc/current/components/event_dispatcher/introduction.html\nFor the dispatcher, I actually want to implement it elsewhere in Elastica to enable easier modifications to the way Elastica behaves without needing to override code. This will enable us to close the API surface significantly, making maintenance and feature implementation easier.\n. The Builder doesn't require the dispatcher, if it isn't supplied (and it isn't by default), the Builder will not dispatch events.\nThe maintenance burden is a problem, but it remains a problem no matter where the code actually resides. Right now, it resides in FOSElasticaBundle, making the functionality entirely impossible to use unless you're using Symfony. I'd like to fix that, learning from the original implementation, to provide a better interface for all Elastica users for a pretty handy feature.\nIn my next iteration of this PR I've managed to simplify the Doctrine transformer to only need a single one for any that implement the standard Doctrine\\Common\\Persistence\\ObjectManager interface https://gist.github.com/merk/ba0b0c20a0e4aff1e625\nI dont personally see a problem accepting well built and tested transformers into Elastica, as long as we define strong interfaces and extension points.\n. As to the question about where to go from here, I've come to the conclusion that the API surface of Elastica doesnt allow for extensions like this, since the Client should not have a hard dependency on the ResultSetBuilder - that belongs to the services that gather the response and return a ResultSet. I'm a big subscriber of the SOLID principles, and I'd like to see the code move in that direction. https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\nI've spent some time trying to extract some of the functionality in the \\Elastica\\Client class and I hope to have another PR that explains a bit more about the direction I'd like to propose before we make any decisions or commitments about supporting new features like in this PR. I'd like to see Elastica grow into a more opinionated library that locks down its internals and only exposes extension points where necessary, but it may end up being such a massive change that it'd be more appropriate to fork or start a new library depending on how big the diff becomes or if the conceptual differences are too far apart.\n. After taking into consideration here I've submitted 2 new PRs to split out the features.\n1) A PR that extracts ResultSet building into its own service\n2) A PR that builds on 1 to add a transformation interface with no implementations\nI will open a new issue to discuss ownership and maintainership of other transformer implementations like the doctrine implementation I originally wrote here.\n. Sorry @ruflin, I've been flat out and havent had an opportunity to organise time for a discussion.\nDo you have any time over the next few days?\n. Congrats! Lets leave it a while then. I've got a bit of spare time and I'm trying to work out how to tackle point 1.\n. With #1017 merged, I've pushed a bare bones test of what it might look like to implement Doctrine result processing that gives you access to the original doctrine objects in search results. https://github.com/merk/elastica-doctrine\nI expect this repository to also handle guessing of type properties based on doctrine metadata to help with #810, when we know what #810 might look like.\n. Regarding the ResultSet $_results variable, to make it simpler we could leave it protected and deprecate it for a major bump instead? That would mean this change has almost no effect on any current users..\n. I have moved ResultSet properties back to protected with deprecations and updated the CHANGELOG file.\n. Rebased.\n. Squashed and rebased\n. Is Transformation the right name for the code provided in this PR? It might make more sense to make this more generalised - calling it a Result Processor?\nI'm not sure what else one might do with the Result hits that come back from ES in this manner, but the primary use case for me is to inject original objects so they're available alongside the hit.\n. Rebased to keep up with master and renamed the concept of a Transformer to a ResultSet Processor.\n. FWIW, I'm not sure what Codecov means with the comment? It seems to be talking about old commits?\n. This one might need more work once the others are merged.\nI'm still not 100% the approach is correct, and will want to implement some real processors before submitting this for merging.\n. FWIW, the other merge conflicts weren't CHANGELOG - they were in Client.php\n. This wont be ready today, so go ahead with a release, we'll get this one in the next release.\n. Yes, the default builder is going to be used in most cases, there are very few reasons to reimplement it unless you need custom behaviour. The default builder is still used even if you're going to use the ProcessingBuilder.\nI think we should undo those property removals and deprecate them as well, no point to cause BC breaks unless we have to.\n. Regarding your second point, you've already released 3.2.0 with these BC breaks. Do you want to release 3.2.1 reversing this (this was also part of the previous PR for the ResultSet builder, not this one for the Processor)?\n. Sent a PR with the BC break reversed\n. Rebased\n. Doesnt seem to help, running it half a dozen times or waiting a few minutes between runs still results in the same error.\n. It appears that the run target is not correct to get up and running: no matter how many times it runs it appears to me like the entrypoint script will fail. Could it be that the run target does not set up the appropriate containers required to run the tests? The documentation in CONTRIBUTING might need updating in that case.\nRunning the individual steps in the 'tests' target results in the test cases executing.\n. make tests or the individual steps in that target bring everything up, but the documentation in CONTRIBUTING.md talks about make run which doesnt work.\n. - No logs are created\n- If there is a need to format logs in a specific way, we can provide an implementation of a LoggerInterface that wraps a real implementation like Monolog\n. I've modified the ->debug call to provide additional context information.\nMost LoggerInterface implementations will provide a way to format additional context information in whatever way the user desires. For example, the primary logger implementation used by Symfony provides formatters and processors to allow customisation of the log messages as they're written: https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md\nAlternatively, per my second point we could provide something like what FOSElasticaBundle provides: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Logger/ElasticaLogger.php (note that ours does more to provide debugging information in the Symfony profiler.)\n. My initial attempt at adding more context wouldn't work. I've had another go. We now log a successful request/response, or a request/exception pair.\nI've also removed the null condition on the $_logger - it is always a LoggerInterface. If one is not provided, it is an instance of NullLogger.\n. The build failure looks like its unrelated to the PR.\n. I'm ready for this to be merged if the change is agreeable. I believe I've covered most use cases and avoided any BC breaks.\n. Rebased\n. Yeah, I agree this is radical. I'd expect to back it off and make it simpler to actually use as a next step, it should be possible to achieve without breaking BC for normal users. Mostly just some tinkering I did while sorting out the other PRs.\n. I've improved a bit more on this proposal:\nFirst Commit (Interfaces)\nIt always helps to simplify the relationships between classes by defining interfaces for methods that are required for communication/use. In some cases they could probably be removed if there is never going to be a different implementation of the Interface.\nSecond Commit (Deprecations)\nTheres no point having these methods around forever since the Client isnt the responsible class for managing connections.\nThird Commit (Extracting ConnectionPool creation)\nThis is the meat of the PR - removing the handling of ConnectionPool creation. The Client now accepts a $config array as before or a ConnectionPoolInterface directly. This should be almost 100% BC, but I havent run extensive tests yet.\nFourth Commit (Tests)\nThe removal of $config from Client means some of the tests no longer make sense (or ultimately need to be moved). There is a unit test failure in ClientTest that is a BC break - being able to set a host or port on the Elastica Client and expect the Connections to be updated. _In my opinion this isnt a good way to proceed and shouldnt be a very big BC break for most users to deal with.\n. @ruflin Did you disable travis as well?\n. A few pushes here didnt seem to trigger travis builds :\\\n. After running the docker tests, there dont appear to be any failures (after some slight adjustments of the test cases).\nI've pushed a new commit that fixes test cases and documents the BC break (and removes the offending test). This is the test on master: https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/ClientTest.php#L1176-1192\n. This does simplify moving to php-elasticsearch because ultimately you'd just need to wrap the php-es Client with a wrapper that implements \\Elastica\\Connection\\ConnectionInterface for the first stage.\nI believe this is still up to date, I'll take a look at master when I get home tonight and do a rebase. Only thing to note here is I think this PR should cause a minor bump, not a patch bump.\n. To note, this reverses #1077\n. Rebased.\nBut something to consider before merging this is that we've removed the $config array methods from the Client which is a hard BC break. These methods don't have an analog anymore since the $config array is immediately consumed in the creation of the ConnectionPool and cannot be changed after initialisation.\nWe can either implement these methods as a noop with a deprecation/php notice, by throwing an exception with more information, or by leaving them removed.\n. Regarding #1077, no - the concept of changing the runtime configuration of the Elastica Client is no longer present at all and the mechanism that connect() was added for is no longer supported as per the documented BC break.\nTheoretically, if someone wanted to emulate the behaviour of changing connection details after a Client is created, they would need to implement their own ConnectionPoolInterface which can do whatever the implementor wants, as long as getConnection() returns a ConnectionInterface.\nI might be able to do something to keep a bit more BC in terms of the getConfigValue/setConfigValue methods, but it will increase the complexity of the ConnectionPool quite a bit. Give me a few days to think about it.\n. If you know ahead of time that you need custom connection pool functionality, it isnt very complicated to pass a ConnectionPoolInterface implementation that is going to handle changing connection details - it isnt really necessary functionality to supply in the default implementation.\nWe could have a second ConnectionPoolInterface that handles this separately - but my thinking right now to try to avoid BC breaks might revolve around providing a more advanced ConnectionPool that we might need to ship anyway.\n. Another thing to consider is if the Interfaces that have been added are optimal: if we create these interfaces they become codified for use by others. The whole split of Connection/Transport becomes something that needs to be supported.\nIt might be worth considering a simplified approach?\n. Right now, this PR would require either setting the config array as previously supported in the Client Constructor:\nphp\n$client = new Client(['servers' => /*...*/]);\nOr setting a ConnectionPool:\nphp\n$connections = []; // An array of ConnectionInterface objects\n$pool = new ConnectionPool($connections)\n$client = new Client($pool);\nThere is no method for creating an empty Client. It is possible to achieve what you're asking for by creating a custom ConnectionPool which can have its connections modified later, but the Client requires a reference to that pool on creation.\n. The lack of flexibility is intentional - supporting every use case for every edge is not conducive to maintainable code.\nIn what circumstances will you never know the connection details before you create the client?\nIn order to use this library you must already know about those concepts anyway - they're just abstracted and hidden away from you by magical array configurations. \n. As I've said above, if you encounter a circumstance where you legitimately dont know the connection details ahead of time (which is bad in itself - $client->request() will fail to work without those details) you can create a custom ConnectionPool - however, this circumstance is an exceptional one. There is no reason to have a client reference without knowing the details of your connections.\n. Your dependency injection container is the correct place (which will already know everything required) to manage the creation and configuration of the Client and its Connections.\nAlternatively, as I've stated multiple times, a custom ConnectionPool can be used. It is no more onerous as your SearchClient. And even then, your SearchClient could manage the lifecycle here itself and create the Elastica client when you have the information required.\nAnd third, as this PR demonstrates - following the SRP and reducing the edge cases that the Client is required to follow results in a reduction of code complexity both in lines and mental model required to maintain the code.\n. @ruflin rebased, Callback test fixed\n. I've added a new commit with a LegacyConnectionPool that should theoretically support the getConfig_/setConfig_ methods on the Client in a BC way, but because there is no functional or unit test coverage for the expected behaviours it might be subtly different.\nIf this is actually something to be merged, test coverage has to be modified and the LegacyConnectionPool will need a full suite of tests depending on if it is a temporary stopgap until a major bump or if it is going to stay around forever.\nI think the only thing missing is working through how a new Client should be 'officially' created and tweaking the Client constructor or Builder class to provide a factory if it suits.\n. So I've spent some time thinking about official 'how to start a Client' documentation, a few options:\nWe leave the $config array the default recommended way of configuring the Client and rely on the LegacyConnectionPool. The deprecated methods on the Client get removed in 4.0 but they can still be accessed on the pool itself.\nWe have a ClientFactory that returns a configured Client, which could look something like:\nphp\nclass ClientFactory {\n    public function create(array $connections = [], $strategy, $logger) {\n        // handle creation of a normal pool and default to a\n        // localhost connection if no $connections\n    }\nIntroduce developers to the actual way that Elastica works internally (my preferred option)\nphp\n$connections = [];\n$pool = new ConnectionPool($connections);\n$client = new Client($pool, $logger);\n. And looking at the Client constructor I want to deprecate the $callback option as well, since if someone wants to have a callback run on failure they can wrap or implement their own ConnectionPool instead.\nWe could even leave the callback in the LegacyPool\n. These methods share the same 'the client doesn't need to know about it' just like the ResultSetBuilder, in my opinion. I guess shortcut helper methods are good for DX, but $client->getDocumentManipulator()->addDocuments() leaves a cleaner easier to understand and grok at a glance.\nI personally like the idea of separating the different concerns we talked about in #1053 into different classes, which makes it explicit about what activity you're performing (and easier to consume or modify independent parts of the API surface depending on your needs - right now you have to override multiple classes to do things).\nMoving these methods to the Bulk namespace makes sense except for updateDocument. We could 'get around' this by moving the updateDocument logic to updateDocuments and if you want an updateDocument helper in Index/Type, just pass a single document as an array.\n. This PR is going to cause all kinds of merge headaches if it stays outstanding for too long - It'd be better to get it merged sooner rather than later.\n. IMO, its just neater to leave it this way until we remove the properties\n. I'd like to consider a few more changes that could come with major BC breaks before we tag 4.0.\nHow do you want to handle merging this stuff? Do you want to branch off 3.2 and start merging into master which will become 4.0?\n. No worries :)\n. Please remove the code rearrangement (exceptions being thrown elsewhere) to a separate PR so it can be discussed independently of the array syntax changes.\nI'd also like to see the true/false changes as another separate PR since it doesnt relate to the syntax changes either, making it easier to discuss and track.\n. This is incorrect - these values should not have empty string initialisers, the methods should be modified to return true/false based on null instead.\n. Yep, looks good to me\n. Thanks!\n. Could you please undo the whitespace changes made to these files so its simpler to review?\n. This change needs a unit or functional test, since there is no test coverage of CandidateGenerator with toArray()\n. To me this doesn't increase the readability of the code, and to me that is more important than the conciseness.\n. You're going to be fighting a losing battle trying to get libraries and frameworks to continue to support really-old php versions for a long time: volunteers arent going to want to bother with such compatibility.\nI think the only viable solution is to keep the last supported php 5.5 branch open for bug fixes, and if you have users who are stuck on old php versions, they're quite welcome to contribute back bug fixes until they're in a position to upgrade to a new distribution. The burden of LTS releases does not fall to individual packages, especially when PHP itself has dropped support for these versions.\nIf the PHP version is frozen in your environment, elasticsearch should be frozen as well - and given this package tracks ES versions, you should be freezing the major versions as well. If the environment is using Elastic.co's apt respositories, why cant that same user adopt the ondrej PHP ppa?\n@ruflin --ignore-platform-reqs isnt viable, unfortunately - because you'll get packages that are bumped to 5.6 and only support 5.6+, and composer wont warn you about missing pecl modules.. Additionally:\nWhat level of support are you actually going support \"unofficial\" php versions? It is reasonable to do a feature freeze and only apply bug fixes to a legacy branch.\nIE: Return PHP 5.5 support to 5.0.x, then release 6.0.x without PHP 5.5 - and all you'd need to do is have a \"5.0 release manager\" backport/cherry pick any bug fixes or security issues that may apply.\nKeeping LTS releases feature complete is not necessary.\n. Which is my main point: those who are stuck with PHP 5.5 due to politics are the ones that should have the burden of maintenance of an LTS branch of Elastica.\nThese issues increase the maintenance burden for volunteer contributors for a segment of the population that because of politics, they're stuck on unsupported PHP versions for years after those versions became unsupported.\nIf you take Centos 6 as an example: there is no Elasticsearch package in its repositories, you're required to download versions from elastic.co - which breaks the reason for bothering with LTS releases: https://www.saotn.org/install-elasticsearch-on-centos-6-7/. Oh, totally agree with you - we're in the same circumstance with LTS, but with regards to PHP our organisation made the choice to track newer PHP. It took quite a bit of work to make sure everything would be okay, as you say.\nI guess the main questions is now, does Elastica 5.0 get PHP 5.5 support back (since it doesnt really need to drop that support), and we drop with another major bump now or later?. I dont agree with the approach. Semver exists for a reason to make libraries easy to use.\nbump 5.0 to 6.0, release 5.0.x to revert php 5.5 support, maintain 5.x branch alongside master/6.x. Elastica is in this middle-ground problem area where you're trying to do to incompatible things at once:\n1) Follow semver\n2) Lock your major versions to match ES releases\nIf that wasnt the case, you could just bump the current release to 6.0 and continue working, and it would just work for users who are installing Elastica in PHP 5.5, because they'll get ~5.0. Instead of a 5.1, you just release a 6.1. For updates to 5.x, you'd just continue to tag 5.x versions, which would be handled automatically by composer.\nYou can definitely just use branches - and release tags in that instance are a good idea too, but I dont think they'd work for the semver composer calculations (you wouldnt be able to do ~5.0-php55 or something to just get the latest supported version for PHP 5.5).. But why are you tying Elastica releases to ES versions? Theres no need for it? You'd simply have to publish your supported ES version range in README.md and when you decide to drop support for a specific ES version you can just bump a major.\nYou may have discussed this at some point recently and sorry if its already been debated to death :). You oops'd a line :)\n. This change means that travis will never be testing the guzzle transport\n. Never mind. Missed the above condition :)\n. Habit mostly, I dont like protected unless there is a very specific reason for it to be extendable. It makes code more maintainable.\n. The main reason for the change here is that the right place to manipulate the results is in the ResultSetBuilder, not here - private forces people to use the defined extension point.\n. I would prefer to inject the ResultSetBuilder directly into the Search object, but I think given the way Elastica is structured that developers will be creating these objects directly and we dont want to introduce such a major change..\n. The API might make more sense to have an optional ResultSetBuilder parameter in createSearch()? Personally I'd prefer to see not having an optional parameter and force it being set at creation time. It simplifies the code and any possibility of bugs (IME)\n. Yeah, its a problem. I'd prefer not to have any in the Client at all because the Client shouldn't know about this stuff. I'm contemplating removing the Client option and forcing it to be set in the constructor of both the normal and multi Search instances.\n. In the last discussion I explained that this is a good change and we should add it to CHANGELOG and bump the major version - manipulating the ResultSet by inheritance isnt correct anymore - changing the implementation of the ResultSetBuilder is the way to manipulate it now.\n. As above, I think it would be better for the Client to know nothing about the Builder.\n. The connection pool remains protected, my habit of alphabetising properties strikes here, its just now on line 54.\n. Just a thought: I'm not sure how the implementation of Elastica\\Log will handle the context array if we have any unserializable object as part of the Request (from what it looks like, the Response would die before we get here if it had anything unserializable).\n. I've removed knowledge of the Builder from the Client. Now, the only way to configure which Builder is used is by passing it into a Search constructor or via the proxy createSearch() method on an Index or a Type.\n. I think that in the case of a Multi\\Search, we're not going to encounter many people overriding this builder. There's just not much need to customise what it does, but providing that capability means noone has to extend core classes anymore.\nThe MultiBuilder is implemented that each Search that it runs can have its own builder, which is why I've left the MultiBuilderInterface and MultiBuilder in the Multi namespace.\nI cant really remove the MultiBuilder concept - it has a difference purpose to the ResultSet Builder. There may be a better name for what it is doing?\n. If a document had a reference to something that couldn't be serialized it could become a problem - except I suspect Elastica itself wouldn't work in that circumstance anyway.\n. I'm worried here - this method could be overwritten by people extending \\Elastica\\Client. Its a BC break.\nWe should probably still do the logging in this method but deprecate it.\n. I've added _log back with similar behaviour above. It's still not perfect: without adding a second parameter (which will cause php errors if someone has overwritten _log) we cant get the Response for logging details about the response.\nI think its an okay trade-off, its simple to fix by adding the second parameter to the overwritten _log method.\n. Never mind, we store it in Client::_lastResponse.\n. It is aliased in the import, because there is already a ResultSet in the Multi namespace.\n. I think Builder by itself is fine, but happy to rename to DefaultBuilder\n. Since this is actually a decorator for a normal Builder instance, i wouldnt be calling this one a Default or Base - it is designed to wrap another builder regardless of the implementation.\n. The notes here except for the processing line were part of the previous PR, github obviously didnt update the diffs when it was merged.\n. In my opinion, the if block works better like this:\n``` php\nif ($persistent) {\n    return $this->setPersistent($key, $readOnly);\n}\nreturn $this->setTransient($key, $readOnly);\n```\nI find code that tries to follow Object Calisthenics to be nicer to read/maintain: http://williamdurand.fr/2013/06/03/object-calisthenics/\n. I think the original way for these exceptions is clearer.\n. We can simplify this block:\n``` php\nif (is_bool($options) && $options) {\n    // ...\n} else if (is_array($options)) {\n    // ...\n} \n```\n. Is there any use in exposing this functionality as part of a parameter to the delete() method instead?\n. If there is duplicated code it should be moved into a Util class and be used from both places.\n. I think the 'todo' about PHP versions should be removed from this PR and submitted as a separate PR of changes to change the supported PHP version instead.\nThe PR can then be merged during the release cycle where the decision is made to upgrade (and the debate about what version can be had in that PR)\n. Unfortunately not:\n``` php\nphp > interface ClientInterface {}\nphp > class Client implements ClientInterface {}\nphp > class Type { function test(ClientInterface $client) {} }\nphp > class NewType extends Type { function test(Client $client) {} }\nPHP Strict standards:  Declaration of NewType::test() should be compatible with Type::test(ClientInterface $client) in php shell code on line 1\nStrict standards: Declaration of NewType::test() should be compatible with Type::test(ClientInterface $client) in php shell code on line 1\n```\n. Being the entry point to Elastica, enough I think - \nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Elastica/Client.php\n. I think adding this as a 4.0 BC break is acceptable, it means you can swap in a php-elasticsearch wrapper that implements ClientInterface transparently.\n. Another one here.\nIf this is an issue, aggs should be set in the constructor.\n. :-1: on this change - exceptions as gates has a nicer flow imo.\n. Same here\n. Its not the change thats the problem, its that there is no need to have it commented out with a TODO comment.\n. Should we be doing a strict comparison here?\n. Using short arrays doesnt deprecate 5.3, nor is it a BC fix, it is a BC break\n. You can just cast $ids to array:\nhttp://sandbox.onlinephpfunctions.com/code/3dcdc5e1f7bd81e72c7da2548f5bb701e9622b70\n. Whenever code is touched for changes like this without tests it is worth the effort to validate that there is no functionality changed by adding a unit test. Why cant your sandbox code be adapted to a simple unit test?\n. Given there is a requirement of >=5.4 in composer.json this change isnt necessary to list, imo.\n. The heading should be 'Backwards Compatibility Breaks', but this changelog entry should be with the composer.json update to >=5.4 since it is already not allowed to be used.\n. Which is already in the changelog:\nhttps://github.com/ruflin/Elastica/commit/11bcfe299b1b9a30d51b8dc928bf557f7e6dd7fb\n. ",
    "rayrigam": "I also have the same issue with my query as displayed by my dev logger. I'm also using Symfony2 with FOS ElasticaBundle. My queries work, but every now and then I have the following error (which is likely due to another issue...?):\nUncaught PHP Exception Elastica\\Exception\\ResponseException: \"SearchPhaseExecutionException[Failed to execute phase [query_fetch], all shards failed]\" at /app/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php line 146 {\"exception\":\"[object] (Elastica\\\\Exception\\\\ResponseException(code: 0): SearchPhaseExecutionException[Failed to execute phase [query_fetch], all shards failed] at /app/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php:146)\"} []\nWhen the query works the log is something like this:\nelastica.INFO: my_index_name/my_object_name/_search (GET) 335.56 ms {\"from\":0,\"size\":15,\"sort\":{\"whatever_stamp\":\"desc\",\"id\":\"desc\"},\"query\":{\"match_all\":\"[object] (stdClass: {})\"}} []\n. @ruflin So just to make sure, is it ok to have \"match_all\": \"[object] (stdClass: {})\" in my logs? Have you been able to reproduce that logging error? Should it be an open issue here or in FOSElasticaBundle?\nIn my case, the \"all shards failed\" error happens now and then. I don't see any patterns... Perhaps, could it be due to a corrupt index?\n. @im-denisenko Thanks for explaining why the log shows that text. It was not clear to me.\nRegarding my issue, I'll contact my ElasticSearch SaaS provider to see if they can provide the ES response.\n. ",
    "ZhukV": "\nI work with CLI mode, and after this error, i check the memory limit parameter in php.ini.\n\nbash\n$ php -i | grep memory_limit\nmemory_limit => 128M => 128M\n1. And PHP code:\n``` php\n<?php\ninclude DIR . '/vendor/autoload.php';\nuse Elastica\\Client;\n$client = new Client();\n$mapping = $client->getIndex('....')->getMapping();\nprint_r($mapping);\n```\n. ",
    "Nyholm": "We don't need to install memcache on HHVM. It is already installed. \nI've updated the PR. \n. Since the tests pass on PHP 5.6 I removed it from the allowed to fail. \nThe tests are now running on HHVM. This was the intention of this PR. Some tests fail though... I do not know how to fix those. Someone with more knowledge of this lib will make sure they pass. \n. ",
    "agounaris": "Well considering the following raw elasticsearch query\n{\n\"query\":{\"query_string\":{\"query\":\"modi\"}},\n\"filter\":{\"bool\":{\"must\":[{\"range\":{\"price\":{\"gte\":\"0\",\"lte\":\"2000\"}}}]}},\n\"aggs\":{\n   \"taxons\":{\n   \"filter\":{\"bool\":{\"should\":{\"range\":{\"price\":{\"gt\":\"0\",\"lt\":\"2000\"}}}}},\n   \"aggs\" : {\n      \"terms\":{\"field\":\"taxons\"}}\n    }\n  }\n}\nIf I will remove the filter on the aggregation entirely the query is still valid. \n{\n\"query\":{\"query_string\":{\"query\":\"modi\"}},\n\"filter\":{\"bool\":{\"must\":[{\"range\":{\"price\":{\"gte\":\"0\",\"lte\":\"2000\"}}}]}},\n\"aggs\":{\n   \"taxons\":{\n   \"aggs\" : {\n      \"terms\":{\"field\":\"taxons\"}}\n    }\n  }\n}\nSo to my eyes you should be able to define a \\Elastica\\Aggregation\\Filter without having to set a filter on it.\nA use case for this is the facets on an e-commerce website where you want to apply a filter on facets quite dynamically without having to define a different aggregation type.\n. ",
    "net8floz": "Here's my queries and my results using $search->getQuery()->toArray() (json encode) \n```\n/Successful query/\n{\"filter\": {\n    \"nested\": {\n        \"path\": \"cities\",\n        \"query\": {\n            \"match\": {\n                \"someName\": {\n                     \"query\": \"Bethany\"\n                }\n            }\n        }\n    }\n}, \"query\": {\n    \"match_all\": {}\n}}\n/results/\n{\"alias\": \"OKC Metro\", \"subdomain\": \"okc\", \"cities\": [\n    {\n        \"alias\": \"Oklahoma City\",\n        \"someName\": \"Bethany\"\n    }\n]}\n/Failed query/\n{\"filter\": {\n    \"nested\": {\n        \"path\": \"cities\",\n        \"query\": {\n            \"match\": {\n                \"alias\": {\n                    \"query\": \"Oklahoma City\"\n                }\n            }\n        }\n    }\n}, \"query\": {\n    \"match_all\": {}\n}}\n/No results/\n```\nI am unsure how to send a query via curl, I'm scanning the docs right now. In the meantime I do have some fos:elastica:search console results I can share. ( this is in use with foselasticabundle and symfony2 )\n$ php app/console fos:elastica:search --index=search --show-source region \"oklahoma city\"\nFound 1 results\n[0.53] 'OKC Metro' {\"alias\":\"OKC Metro\",\"subdomain\":\"okc\",\"cities\":[{\"alias\":\"Oklahoma City\",\"someName\":\"Bethany\"}]}\n\"alias\" is now \"Oklahoma City\" while \"someName\" remains \"Bethany\" \nAs you can see the data is there, and I can find it through console.\nI'm going to figure out passing query via curl right now.\nIf I need to share anything else let me know. Great work as always and thanks for the reply.\n. ",
    "sangxiaolong": "my curl version is too low\uff1fshould I upgrade to a newer version\uff1f\n. ",
    "bthibault": "after some more investigation this looks like a limitation of json_encode and elasticsearch's requirement to escape '-' \nelasticSearch requires the format of : 'abc-foo' which is not standard regex syntax\nhowever using json_encode  there is no way to get that format because its not valid JSON : the valid JSON is infact : 'abc-foo'  which will not perform the correct search on the elasticSearch side. \nThe fix for the time being is to replace '-' with a '.' in the string until a proper solution can be put into place. \n. strtolower($searchString) should also be used when using regex's .. apparently elasticsearch doesn't like capital letters.\n. Okay this is a non-issue, actually has to do with elasticsearch's analyzed vs. non-analyzed fields.. closing out. \n. ",
    "itecedor": "Forgot to say that I'm on the latest tag, v1.3.0.0\n. ",
    "dbu": "i was trying to do this as a raw request on an index. turns out the data format to send is really peculiar: the body of the request has to contain separate json lines. each line for itself is valid json, but they are just one after the other, without a common wrapping. this looks very similar to the multi-search format. probably the implementation could look similar to Elastica\\Multi\\Search.\nluckily i figured out that for our project we can do without mpercolate for now, so i don't plan a PR right now. but we could leave the issue as a starting point if you agree.\n. the elasticsearch support (zachary) gave me this example, if it is any help:\n``` php\n$client = new Client();\n$index = $client->getIndex('twitter');\n$type = $index->getType('tweet');\n$mpercolate = [\n    '{\"percolate\" : {\"index\" : twitter\", \"type\" : \"tweet\"}}',\n    '{\"doc\" : {\"message\" : \"some text\"}}',\n    '{\"percolate\" : {\"index\" : twitter\", \"type\" : \"tweet\", \"id\" : \"1\"}}',\n    '{}'\n    //etc etc\n];\n// add a newline between each JSON, and a final terminating newline\n$mpercolate = implode(\"\\n\", $mpercolate) . \"\\n\";\n$path = $index->getName() . '/' . $type->getName() . '/_mpercolate';\n$response = $client->request($path, Request::POST, $mpercolate);\n$responseArray = $response->getData();\nIf this is just for testing, using a HEREDOC for the mpercolate tends to be simpler:\n$mpercolate = <<<MPERCOLATE\n{\"percolate\" : {\"index\" : twitter\", \"type\" : \"tweet\"}}\n{\"doc\" : {\"message\" : \"some text\"}}\n{\"percolate\" : {\"index\" : twitter\", \"type\" : \"tweet\", \"id\" : \"1\"}}\n{}\nMPERCOLATE;\n```\n. seems sane to me. as long as people where using composer, they will not notice what is happening here. if they don't, they really should - but will have to adjust the path in their autoloading.\nin the cmf, we did a minor version bump when switching to psr-4.\n. i would recommend to do it in a fresh PR. its just the changes to composer.json and moving all files up to remove the unnecessary namespace folders. doing it from current master also keeps some chances that existing pull requests won't break.\n. hey, this looks great! some documentation would be nice of course...\nwhat would FOSElasticaBundle do with the builder? provide it as a service? or something more fancy?\n. i am +1 on adopting semantic versioning. i can read up what version of ES Elastica is compatible with. but its much more critical - and likely when BC breaks inside Elastica happen. i would go with 2.0.0 (maybe take the oportunity to remove deprecated code first, if there is any). just state clearly in the README what versions of elasticsearch the current version is tested with.\n. fully agree with @merk for the naming of branches and release tags.\nabout maintenance branches: if you tag a 1.4.0 and then make master branch-alias to 2.0.x-dev you can still checkout 1.4.0 and start a 1.4 branch from that later, if there is an important fix that you want to release as 1.4.1\nand +1 for deprecating things in 2.0 and only removing in 3.0 if there is no big painpoints already.\nand i agree its better to focus on having master work correctly than trying to support multiple legacy versions. its not like we have too many maintainers on this project and need to look for work ;-) and the current versions are pretty stable, so i don't expect it to happen all the time that people ask for updating older versions.\n. @merk in the OS projects i worked, we always had master be the current development version and kept a branch of the current stable version (i.e. 1.4). the win of that is that people see the latest dev version first.\nfor work larger projects, we use git flow which is exactly what you describe. i think it could make sense here as well, but you would need to make develop the default branch or you will see a lot of feature addition PRs be done from the stable version instead of develop.\n. i would recommend to look into php-http (though that might be a bit more heavy refactoring). php-http is the follow up of ivory from what i understood. this PR on FOSHttpCache could help how to do that https://github.com/FriendsOfSymfony/FOSHttpCache/pull/173 - though php-http adapters seem not yet stable.\n. we have queries where the raw json is several megabytes, so yes, duplicating that is a cost.\nanother option would be to parse in the constructor and never even set the raw string. that would mean a performance penalty if the result is not used at all, not sure if that is likely to happen. might be for changing requests that the http status is enough to know it worked...\nthis change looked like the smallest impact where we can be sure there is no negative side effect in any circumstate.. added a changelog entry. ok like this?. thank you for merging!. most libraries i see use just tests/ not followed by \"lib\" for this. \nbtw, it seems to be a convention that tests are in the namespace \"Tests\". if there is \"Test\", i would expect it to provide testing helpers that i could use for my tests as a library user (like a mock elasticsearch client or something). but changing that has a lot more potential for BC breaks.\n. ",
    "maxgalbu": "IMO the best way would be to add an actual test of escapeTerm in a query with an elasticsearch daemon. In the tests folder I only see a test for the output of the function, but I could be wrong.\nIf that's not the case, can you point me to a SomethingTest.php file where I can add an actual query? I can try to edit it and make a pull request\n. That's what I was saying man :)\nI'll see what test file I can edit\n. The travis-ci test confirms the bug on php 5.3 but not on php 5.4... WTF?\nhttps://travis-ci.org/maxgalbu/Elastica/builds/32777811\n. magicquotes should not be related, it shouldn't escape chars on a literal string.\nRemoving the double quote makes it work with php 5.3 but not > 5.3:\nhttps://travis-ci.org/maxgalbu/Elastica/builds/32806687\nSo, would you accept a patch that makes Elastica work with php 5.3? It would be a single if that escapes with a single or double \\\n. Good analysis, well done :)\nIf you open a pull request, can you copy my test that i added in my fork:\nhttps://github.com/maxgalbu/Elastica/commit/1f5c1070319d6f531935dbdbc9b68e3798c04a8b\n...to make sure the escape is tested against elasticsearch?\nOr if you want i can add your changes to my fork and do a pull request myself.\n. you're right, I had a brief moment of pause at work so I did the quick fix :)\n. ",
    "kostiklv": "I faced a similar issue and here is what I found:\n1. JSON class is using JSON_UNESCAPED_SLASHES which is supported ONLY in 5.4. It means that / are NOT being escaped in 5.4, but still escaped in 5.3\n2. Util::escapeTerm has a special treatment for / character - it's being escaped with two backslashes, instead of a single backslash (compared to other reserved characters).\nThis 2 things combined produce unexpected results, especially on different PHP versions:\nIf you have a query with term \"foo/bar\" which you escape with Util::escapeTerm:\n- On PHP 5.3 it will end up as foo\\\\\\\\\\/bar (5 backslashes - 2 for each backslash added by escapeTerm plus 1 added by json_encode for forward slash\n- On PHP 5.4 it will end up as foo\\\\\\\\/bar (4 backslashes - 2 for each backslash added by escapeTerm and 0 for forward slash, thanks to JSON_UNESCAPED_SLASHES\nHere you can see this problem in action: http://3v4l.org/YYd4F\nI propose to fix it by:\nA. Removing JSON_UNESCAPED_SLASHES - it was introduced in #560, based on suggestions from #559, however #559 didn't mention JSON_UNESCAPED_SLASHES. So, I fail to see why JSON_UNESCAPED_SLASHES is needed at all. Note, that official ES PHP Client doesn't use it.\nB. Remove weird treatment of forward slash escaping in escapeTerm, ES documentation doesn't make a difference between forward slash and other reserved characters escaping.\nIf you apply the above fixes, it will work the same in both PHP 5.3 and above: http://3v4l.org/5gE31\nP.S. We're still using Elastica 1.1, where the whole escaping is complicated even more by this weird maniuplation\n. Ok, if you agree on the proposed changes, I'll try to create a PR later today or tomorrow. Thanks!\n. I've submitted the PR - #668, took several retries to make Travis happy, but now it's green\n@maxgalbu, I've pulled your commit with test into my PR. Thanks!\n. @ruflin, changes.txt updated\n. ",
    "chabior": "Fixed\n. I think you can close it.\n. ",
    "cordoval": "no @merk the issue is bigger, my system already works, but it did happen that the requirement made composer surface glitch. That is probably an issue for composer but i have no time to reproduce. It just seemed totally odd that there were php packages using 4 digits and though i am not sure what the treatment of composer is on that. I saw it installing a version without composer.json as i said.\n. ",
    "eliasah": "I don't wish to use the raw array query. I have tried setParam in the FunctionScore but this doesn't work since 'size', 'facets' and 'from' are fields and the setParam function adds them as parameter of the 'function_score' fields.\nI would like to work on the extension but the structure of the classes don't permit to add a field from a sub-class to a class.\n. Thank you for you answer and I'm sorry for my late answer. Actually I have wrapped the function_score query into a base \\Elastica\\Query to provide size, facets and other feature but I find it a little messy to do so.\n. can you post the result this command:\ncurl -XGET host:port/\nreplace host and port by your elasticsearch host and post info.\n. Well this means that Elasticsearch is not running. It is not an issue with Elastica.\n. ",
    "nathansbraten": "I think you have to wrap the function_score query into a base \\Elastica\\Query which does provide size and facets. At least this is the way I did it ;)\n. ",
    "habibun": "thanks you for replay\nthe result of this command is below:\ncurl: (6) Could not resolve host: host\nmy operating system win 8 and i am using xampp\nthank you.\nOn Wed, Aug 20, 2014 at 5:34 PM, Elie A. notifications@github.com wrote:\n\ncan you post the result this command:\ncurl -XGET host:port/\nreplace host and port by your elasticsearch host and post info.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/665#issuecomment-52763637.\n. \n",
    "jacksonj04": "I'm experiencing the same problem (Apache 2.4.7, Ubuntu 14.04) in that I get a \"Couldn't connect to host, Elasticsearch down?\" HttpException.\nI've verified that ElasticSearch is running (it returns JSON as expected if I just GET the URL), I can curl it from the server, and I can retrieve content using curl within PHP. The same URL also works perfectly in the same code on my development server.\nI'm afraid I'm not familiar enough with the internals of Elastica and associated dependencies to go hunting down what the problem might be, and would appreciate any pointers! I'm using Searchly over HTTPS if it makes any difference, although I really don't believe it will.\n. Turns out it was actually a totally unrelated glitch in my code which meant the URL wasn't being passed through to the Connection correctly - Elastica was behaving as expected, mea culpa!\n. @crisu83 - if I remember correctly it was down to trailing slashes\n. ",
    "cpmohit": "Php version 5.4\nElasticsearch version 1.4.2\nIssue continously coming........\nFatal error: Uncaught exception 'Elastica\\Exception\\Connection\\HttpException' with message 'Couldn't connect to host, Elasticsearch down?' in /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php:153 Stack trace: #0 /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Request.php(167): Elastica\\Transport\\Http->exec(Object(Elastica\\Request), Array) #1 /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Client.php(587): Elastica\\Request->send() #2 /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Index.php(445): Elastica\\Client->request('test/', 'DELETE', Array, Array) #3 /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Index.php(157): Elastica\\Index->request('', 'DELETE') #4 /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Index.php(223): Elastica\\Index->delete() #5 /var/www/html/demo/elastic/index.php(24): Elastica\\Index->create(Array, true) #6 {main} thrown in /var/www/html/demo/elastic/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php on line 153\n. ",
    "crisu83": "@jacksonj04 Any chance that you could elaborate on what you did wrong? I'm having the same issue with Searchly. Thank you in advance.\n. @jacksonj04 thanks, adding a trailing slash to the URL fixed it.\n. ",
    "qiaofei32": "stop iptables\ndisable Selinux\nthen try again\n. ",
    "tmiecz": "Out of nowhere I started getting these. The crazy part is that it's on and off. It works for few minutes then stops working, both on local and live server at the same time. Is there an issue with elastica server? Is anyone else having that issue today?\n. ",
    "Zyqsempai": "@tolousn Hi there, can you describe your server part?Do you youse ElasticSearch as a SAAS or your own on your local machine? Maybe docker container?\n. Hi there, i will be glad to help you with this migration, please give me some short description, for example for \"Remove image plugin support\", do you want to completely delete it from project? Or give some other task! \n. ok then i will start with image plugin a then move on to tests\n. So, what about this type of skipped tests, \"script.inline is not enabled. This is required for this test\", i checked your elasticsearch.yml and i found this \"script.inline: on\" i also tried to add something like this \"script.engine.groovy.inline.aggs: on\" and no results, do you know source of this problem? \n. Also, this one \"Skipped because of 5.0: unknown setting [index.merge.policy.merge_factor] did you mean [index.merge.policy.max_merge_at_once]\" this is strange because according to this https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_20_setting_changes.html#_merge_and_merge_throttling_settings , this error mast appear after 2.4 version migration, anyway it seams like we can't fix it for Version > 2.4 \n. I will work on plugins problems, such as \"delete-by-query plugin not installed.\" and \"elasticsearch-mapper-attachments plugin not installed.\"\n. @ruflin Hi there, i think that we don't need to worry about versions at this moment, because we don't face any problem now, and we can delete them in any time, this issue are called \"Upgrade to Elasticsearch 5.0\", i think we don't need to mix issues. Let's finish all the staff that are realy related to upgrade.\n. @ruflin This make sense and if we really have only one opportunity to delete them, then we should do that, you're right. And i think that we need to keep only 5.6 and above.\n. @ruflin Great idea! I agree.\n. @ruflin , Done!\n. @p365labs LOL)) wee forgot to tell each other on which issue we work, i just finished my PR!\n@ruflin check my commit and decide, i think my is more complete i also changed some fields name according to new documentation. https://www.elastic.co/guide/en/elasticsearch/reference/5.0/search-suggesters-completion.html\n. @ruflin Nope, i made my decision relying on that example https://monosnap.com/file/uCLeePKeotCPexILK87twJPM8OE1Li , but here is my thoughts about it, first of all it is about clarity and obviousness for users, we mast follow documentation! And maybe it's not deprecated in that version but it can be in next, especially if Elastic team will have many questions like this.\n. @ruflin , @p365labs Hi guys, sorry for delay in preparing this one, so you can find not quiet beautiful decision with local variables))) i know it, may be it is too late evening now, but i think this is he best decision for that task, the main problem is level of parameters, if we refuse of using local variables in the AbstractSuggest class and replace them with params we facing problem that those params appear on the completion params level and not on suggest level, we can fix it by implementing global params in the Suggest class (like this one https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Suggest.php#L31 ) but in my opinion it will bad idea because we will need to instantiate and Suggest class and for example Complition class. Something like that)) i admit that i can be totally wrong i am glad to here other ideas.\nAlso i implemented regex)) \n. @ruflin now it is ok?. @ruflin Strange, i did \"soft reset\" on my commits and recommited them as one, also before that i did  rebase with master, sorry i am not so good in GIt workflow, can you point me a better way?. @ruflin I think it works)) second one is rebase to solve Changelog conflict. @ruflin Hi, here is something wrong with commit, in my last commits i returned back to place \"_text\",  about \"params\" array, i think that you missed my comment, please check it above, i described my point of view.  regexOptions is for inner options, i better show you, https://monosnap.com/file/eL7DUm2Ob8B4CylforcVwsOQXDB0Vl \nthis cause all kind of problems  that i described in comment above.. @ruflin Ok, i will try it!. @ruflin Done.. @ruflin Need any help with release, something left?. @ruflin Nope, i think you'r right! With major release i will update Elastica + ES in my project maybe than we will have some new issues. . Guys we need to merge it, it is a really long awaited feature.\nTests are not needed here, they can be only formal, \"Request passed or not\".. @ruflin I have an opposite position, i always use QueryBuilder, one of the main reason, is what @Tobion mentioned above, it's really cool to have same interfaces for DB and ES queries, and our current QB really have many common things with Doctrine QB and it's really safe for team and project to have such a simplicity, i can be sure that some one new for ES have an intuitive way to edit and create new queries.\nI think that many of Elastica users choosed Elastica because of QB. And it will be a big mistake to remove that functionality, but i agree that we need to refactor it, first of all as @ruflin mentioned we can remove Version layer QB mast be syncronized to Elastica current version there is no way to keep few versions of QB.\nAlso, since i always used QB and never native Elastica queries i admit that maybe i am wrong)))\nHere is a simply example of QB query in my project, how it will looks like with native query?\nphp\n$this->query = $qb->query()->bool()->addShould(\n                                $qb->query()->function_score()->setBoost(100)->setQuery(\n                                    $qb->query()->term()->setTerm('number.raw', $rawQuery)\n                                )\n                            )->addShould(\n                                $qb->query()->function_score()->setBoost(20)->setQuery(\n                                    $qb->query()->term()->setTerm('number.clean', $clearQuery)\n                                )\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', $clearQuery.'*', '2.0')\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', '*'.$clearQuery, '1.5')\n                            )->addShould(\n                                $qb->query()->wildcard()->setValue('number.clean', '*'.$clearQuery.'*')\n                            );. There are no response from you guys, so i will make simple PR with actions from step (1), that will \"relieve tension\" for some time.. @Tobion it all depends on point of view or maybe just style preference, i think that this is great that we have that kind of choise in our library, i described above the reasons why i prefer that style, and i don't see anything bad in query builder, and i will take care of it from now.. Sorry, but who and why decided that query builder is a bad practice, for me it's a very good example of incapsulation in right way and in right place, don't forget that Doctrine keep it in that way, and you don't say that Ocramius is wrong here, for me your style are very primitive and not intuitive for new users, but i don't try to convince you, so and you just try to think a little bit different, Elastica lived with those two ways many years without any problem, and we will keep it in that way.. @ruflin Yes you'r right both params still exists, in other way https://github.com/ruflin/Elastica/pull/1213 this one wasn't successful, and idea to remove variable sounds good to me, but i think we should keep only only \"prefix\" param to avoid misunderstanding!\n. @p365labs Analyzer we have here https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Suggest/Phrase.php#L18 , about ElasticSource code i think that DEVs from Elastic faced same problem as we, and they decided to keep both, some kind of legacy code or BC, i think if we are building the Client library we should avoid such decisions, the final product mast be clear and simple there is no real need for those two fields, and our users will relay on documentation thats why i think we need to keep only \"prefix\".\n. @ruflin , @p365labs I agree, well then i will handle 2 and 3 with this PR. \n. ",
    "jdacjohn": "I inherited a site that I'm transferring from one domain to a new domain.  Total nightmare because I can't even access the server that the old site is hosted on.  Was basically given a tar.gz and told to \"get to it.\"  The site is up and running but I get this error (Couldn't connect to host, Elasticsearch down?) when I try to search.\nI have uninstalled and reinstalled from the dashboard, but I don't even know where to begin looking for where the host and port is set for this add-on.  What am I missing?  Is there something that has to be installed on the new server to allow Elasticsearch to run on Concrete5?  Concrete5 version is 8.3.1 and Elasticsearch version is 0.0.9 from what I can see.\nPlease help.  Uninstalling Elasticsearch from the site at the dashboard does not restore search C5 search functionality.\n. @ruflin  Thanks for replying.  I may be barking up the wrong tree as I'm not even sure what Elasticsearch is, as I'm quite confused as well.  The site is a Concrete5 site.  In the dashboard (when logged in as admin) when I go to 'Extend Concrete5' it shows \"Elastic Search v.0.0.0 - Replaces default search index with elasticsearch' is installed.   This functionality resides in a folder named 'elastic' in the packages folder of the C5 install folder.  I believe it is a wrapper project that contains this project\nI've been tasked with moving this site from one domain to another; i.e., dialogo-americas.com -> dialogo-america.com.\nThe search works fine on the dialogo-americas.com site, but does not work on the dialogo-america.com site.  On the new domain, I get the error message indicated by this thred.  I cannot find any information about this Concrete5 add-on basically anywhere so I ended up here.\nWhen you ask if I can connect to Elasticsearch via curl, I don't even know where I would connect TO.  I am sure Elasticsearch is jut fine and this is probably a simple config issue but I cannot find anything on this anywhere I have looked for the last week and IMHO, the documentation for Concrete5 is written only for the blue sky perspective.  The only thing I ever find there are unanswered questions from at least 2 years ago, and I've been unable to find anything related to this add-on in the Concrete5 community to this point.\nI may have a fundamental misconception about how Elasticsearch works.  If you're picking up on any frustration on my part, I apologize.  This migration has been a nightmare for 2 weeks running beginning with the fact that due to misconfigurations, ftp, shell, and WHM/cPanel access to the original server is impossible, and the hoster doesn't seem to want to do anything about it.  . If this is any help at all, here is the log output from the most recent search attempt:\n[2018-02-25 23:43:46] elastica.ERROR: Elastica Request Failure {\"exception\":\"[object] (Elastica\\Exception\\Connection\\HttpException(code: 0): Couldn't connect to host, Elasticsearch down? at /home/dialogoamerica/public_html/packages/elastic/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php:180)\",\"request\":{\"path\":\"ccm_dialogo/ccm_page/_search\",\"method\":\"GET\",\"data\":{\"query\":{\"bool\":{\"must\":[{\"prefix\":{\"cPath\":{\"value\":\"/en/\",\"boost\":1}}},{\"simple_query_string\":{\"query\":\"carrots\",\"fields\":[\"cName^1.5\",\"cDescription^1.2\",\"_all\"],\"locale\":\"en_US\"}}],\"should\":[{\"range\":{\"cDatePublic\":{\"boost\":6,\"gte\":1516923826000}}},{\"range\":{\"cDatePublic\":{\"boost\":4,\"gte\":1514245426000}}},{\"range\":{\"cDatePublic\":{\"boost\":3,\"gte\":1511653426000}}},{\"range\":{\"cDatePublic\":{\"boost\":2,\"gte\":1488066226000}}},{\"range\":{\"cDatePublic\":{\"boost\":1,\"gte\":1456443826000}}}]}},\"sort\":[{\"cDatePublic\":{\"order\":\"desc\"}},\"_score\",\"_doc\"]},\"query\":{\"from\":0,\"size\":10},\"connection\":{\"config\":{\"url\":null,\"bigintConversion\":false},\"host\":\"localhost\",\"port\":null,\"path\":null,\"proxy\":null,\"transport\":null,\"persistent\":true,\"timeout\":null,\"connections\":[],\"roundRobin\":false,\"log\":false,\"retryOnConflict\":0,\"username\":null,\"password\":null,\"enabled\":false}},\"retry\":false} []. Thanks Nicolas, this helps.  The client appears to be 3.2.2 (from the CHANGELOG.md), and ElasticSearch v 5.3.\nHere's a high-level of the composer project (I'm not including everything in here, like composer, guzzlehttp, etc.)\nElastic ->  Top level project folder (This is the project that was created to install ElasticSearch as a package in concrete5 and that's the last I'll say about Concrete5).\nvendor ->  \n    elasticsearch  -- I'm guessing this is the elasticserach provider?)\n    ruflin\n        elastica  -- I'm guessing this is the client your're referring to.\n\nThe config for the client shows:  (in elastic->config -> elastic.php):\nreturn [\n    'hosts' => [\n        'localhost'\n    ],\n    'index' => 'ccm_dialogo',\n    'type' => 'ccm_page'\n];\nFrom this, I'm guessing that the client and the search should be running on the same machine?  I have looked all through the project tree and these are the only settings I can find.  \nThanks for your help.. Update.  ElasticSearch is not running on the new machine - It's not even installed.  Everything I've been looking at is for the client.  So, ES not running means, yes it's down on localhost.  I installed ElasticSearch 5.3 (to match) site code on my local dev server, configured and fired it up.  I'm able to hit the ElasticSearch host, so now I've now graduated to this error when I try to perform a search on the site in dev:\nno such index [index: ccm_dialogo]\nWhich makes perfect sense now.  This tells me that the index that was built for the old live site is residing on that server in wherever path:data is set to on the old server, and of course, since that server is inaccessible via WHM, cPanel, SSH, or even FTP (it basically locks up my network and I think takes down the ISP area subnet as well - too much coincidence in trying to connect to that server and having outages occur right at that moment that affects both me and my neighbors...), I'm basically screwed and am trying to rebuild the index using the IndexElastic.php that came with the site code.  \nBut of course, it's not indexing because it was built for an older version of the Concrete5 core and the site had been updated prior to me getting it.  No biggie, it's only like 26000 pages.  So, thanks for your help - just you pointing out the simple distinction between the ElasticSearch and the ElasticSearch client put me on the right track.\n. ",
    "OskarStark": "You can close this on.\n@see #667 \nBest reagrds!\n. ",
    "nickfan": "or maybe add some notice in methods descriptions.\n. done:\nhttps://github.com/ruflin/Elastica/pull/675\n. ",
    "viilveer": "@ruflin It appears that Elastic Bool Filter does not support any of the additional params (only must. should, must not). I made the needed change and ElasticSearch is giving me parse error. There as a commit to add Better failure when passing invalid options to a query/filter\n Link; https://github.com/elasticsearch/elasticsearch/commit/293a971ea6a6b4d708b812188d673945ecfaaf50\nI think this can be closed.\n. Same problem is in MultiBuilder:\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Multi/MultiBuilder.php\nMaybe you can create a fix for this also. This should be last one according to github code search.. Cool. Looks fine by me. . ",
    "piux": "after deleting the product with em->flush() i run this code\n$client = new Client(array('connections' => array(array('host' => 'localhost', 'port' => 9200))));\n          $index = $client->getIndex('afsy');\n          $index->refresh();\nim still getting the error, any ideas?\n. ok i guess ill keep posting there, sorry.\n. ",
    "nathankot": "Actually sorry I see that this has already been done on master!\n. ",
    "stof": "is it really worth it ? this is just something which should have been part of the release process actually (master already contains the 1.3.x codebase before my change, not the 1.2.x one)\n. I updated it\n. note that the ES change was https://github.com/elasticsearch/elasticsearch/pull/4913\n. Removing the highlight key entirely from the param. But the Query class and its parent Param don't have a way to remove a param once it is set.\nBtw, I suspect that other params than highlight are also impacted\n. Well, Monolog runs its own testsuite against PHP 7 on Travis, and it has an integration with Elastica which broke the testsuite. See the link above.\nThe easy way to spot PHP 7 incompatibilities would be to enable testing on PHP 7 on Travis.\n. @ruflin if it is never used, PHP 7 will not complain (as the file won't be loaded)\n. I don't have a PHP 7 setup yet. I relied on Travis until now.\n. hmm indeed.\nIt may be better to limit the usage of sudo on Travis to be able to use their new infrastructure though. I will revert the sudo removal.\n. @ruflin regarding the change for PHP 7, the first question is to decide what the new name of these Bool classes should be (both the query and the filter). It is easy to keep BC for PHP 5.x users with a class_alias (on PHP 7, the only option is to use the new name as Bool is forbidden)\n. There is one missing part: the BC layer with the old class names\n. @ruflin you should change the Travis config to trigger builds only for the master branch and PRs targetting the master branch. This would avoid having 2 builds being triggered for your own PRs, once for the PR and once for the branch push.\nGiven that Travis limits the number of concurrent jobs per repo owner (i.e. among all your repos) and that each build requires 12 jobs currently (ES_COMPOSER_NODEV being true or false for 6 different PHP versions), this would make the feedback faster on Travis (you currently have 16 builds in the Travis queue, with only one of them being running because of the restriction)\n. btw, you might want to cancel builds for PRs which have been updated after that, keeping only the latest build for each PR to make the queue smaller\n. @ruflin is it really needed to run both values of ES_COMPOSER_NODEV for each PHP version ?\n. @ruflin I suggest changing the coveralls config to report the status through the github PR status instead. Getting email notifications each time they build it is annoying (especially when they tell us they don't know what they should say)\n. I don't know. But the first question would be to know why there are changes in the package (if it asks to discard changes, it means you did some changes first, or that the package has some weird stuff triggering changes in it on install, for instance a file listed in bin without beign executable)\n. There is another thing which might not possible anymore: cloning a Query object (or any other objects impacted here): given you keep objects internally, most changes on 1 query could affect the other one too if you have any method mutating an inner object (I don't remember the API of all these classes enough to know whether this happens anywhere), while it would have worked before as arrays where used.\nWould it make sense to implement __clone in these classes to clone the inner objects too ?\n. > The good news is that we marked this change as BC break\n@ruflin respecting semver, this means the release should have been numbered 3.0 btw.\n. @ruflin any plan to talk a release supporting PHP 7.2 without deprecation ?. yeah, sorry. I meant tag, not talk in my previous comment.. @ruflin is Elastica 6 compatible with ElasticSearch 5 or no ? And if no, is there any plan to backport the PHP 7.2 compatibility to a 5.x release too ? I have not yet migrated to ElasticSearch 6 (it requires me to stop relying on types first), but I still would like to migrate to PHP 7.2 before that.. Note that I'm using version 5.3 of the library (I'm not yet using ES 6). what is the process to contribute to both 5.x and master ? Should I open my PR against 5.x or master ?. @ruflin I added the setPipeline in the Document class. Should it be there or in the AbstractUpdateAction ? I don't know whether pipelines make sense for Script.\nAnd I would like some guidance about the best way to cover this with tests.. @ruflin could you give me the necessary indications so that I can finish this PR ?. @ruflin actually, for bulk requests, this goes in the bulk params, not in each document. Writing the test made me realize this mistake in my PR (I'm already using the pipeline when indexing documents with the lower-level API, but I was not using the bulk API).\nand the update API does not support pipelines yet (this is discussed in https://github.com/elastic/elasticsearch/issues/17895)\nSo does it still make sense to have it in the Document object ?. Tests are written though.\nThey are currently leaking the rename pipeline, as ensuring that the cleanup is done even in case of test failure would involve wrapping the whole test in a try/finally or doing the cleanup in tearDown while most tests don't create it. But I use always the same pipeline name (overriding the pipeline defined by previous tests), so I won't leak multiple ones.. anyway, Type::addDocument does not take options outside the Document, so it still make sense to have pipeline in the Document IMO. But the question is how this integrates with addDocuments cleanly.. @ruflin it already works, because the client exposes the request params in its API, and https://github.com/ruflin/Elastica/pull/1427 makes it much more usable by allowing to pass them along.. @ruflin I'm OK with merging this PR as is (and I added the changelog). @ruflin using a tag is much easier with composer, as it does not require whitelisting a dev version for this package. any chance to get a 5.3.2 release ?. @ruflin thanks. OK, understood: Elastica 5.x does not support the second argument of Type::addDocuments, and so won't support pipelines for the bulk API through this argument.. your choice.. you should remove this key entirely as it is empty now\n. typo: Remove\n. this looks broken as the default value of the empty string is still a string\n. I looked at this PR from the release changelog\n. shouldn't this be replace by a $this->_logger->error()  call ? Overriding the method was deprecated. But now, you removed the logging entirely.. ",
    "fprochazka": "@ruflin you know.. if there is going to be every insignificant change in the file, than you're basically recreating commit log and having more noise than useful informations in the changes.txt... changelog is for changes that are relevant if you're updating the lib, like \"added method, added feature, bc break, ...\" not noise like typo and release process details.\nJust saying. \n. Oh, wow. How is creating a global static state better solution?\n. On each of those places, there is already a Client used and the class is therefore dependent on it. Every time you create ResultSet, you do that by passing data from Client::request().\nI don't see how adding a Client::createResultSet() is worse than current state. \n\nIn case we use ResultSet at an other place in the code later where not client is available, this will break.\n\nWhy not just focus on current problems, without building sky castles? All those \"it might one day, in the future far far away\" statements only bring necessary complexity to the code.\nIf you're not able to provide an example (apart from unit tests), where it might be usefull to create ResultSet out of thin air without doing a request to elastic before (which means dependency on the Client, so you can do that request), then the Client::createResultSet() is a good enough solution.\n. Should I send a pullrequest that will check also $data['errors'] and do an isset around that statement that throws notice?\n. This is awful... retrieving data using magic __call ... why don't you pass the $result->getData() directly to the template, instead of the result object?\n. I just don't see how adding the magic call fixes it. There is already a __get, so where is the problem? Maybe try search for solution in the Twig?\n. @cassianotartari there is a difference between \"an error stops\" and \"problem is solved\".\n. @ruflin any thoughts? :)\n. @ruflin I would love to write those tests, but I don't know when I'll have the time for it. I think it would be beneficial to merge this (as the tests clearly pass) and I'll try to write some new tests as soon as I can :) On the other hand, if the integration tests are a must, I would give it a bit higher priority so this can be merged earlier. It's up to you :)\n. I'll try to write them soon Kdyby/ElasticSearch#2 :) Thank you for the merge!\n. @ruflin they mean that the \"psr/log\": \"~1.0\", should be in require not require-dev\n. Well, to be fair, you have a public method, with a typehint. That's pretty strong dependency on that interface. If you wanna be \"formaly correct\" it would be best to move that dependency to require.\nOn the other hand... it's pretty sad how much crap there is in the repository of psr/log.\n. @skymeyer the only relevant part of that psr repo is the interface, the rest is \"someone might some day need this\" crap :)\n. I personally don't think that the psr/log interface suits the needs of to this lib. I would create a really simple interface, that would be used in this lib, something like\nphp\n<?php\ninterface RequestListenerInterface\n{\n    public function onRequest($request, $response);\n    public function onError($request, $response, $exception);\n}\nand when needed, a class that pipes the requests to psr/log can be written with few lines and the rest of us don't have to do awful things like this. I've personally bypassed it like this, so I don't have to deal with the psr.\n. Sorry, but there is no added value in this pull.  The PSR-4 is meant to simplify directory structure. And you haven't simplified the directory structure.\n. @skymeyer I know it's optional, but the whole point of PSR-4 is to have simpler directory structure. This is just PSR-0 masked as PSR-4 => no added value.\nPlease note, that I'm not saying this pull is bad, I support the adoption of PSR-4, but let's call things with their real names. I'm just saying, that this is not enough and should go further => simplified directory structure.\n@ruflin not if they're using composer.\n. @skymeyer great :+1: \n. FYI the build is failing, could you please fix that? https://travis-ci.org/ruflin/Elastica/builds/41164326\n. :+1: \n. This is a BC break, you should be passing the previous exception to the new one.\n. wouldn't be a regular expression better for this?\n. I guess it might make no difference for ES, but I was thinking\nphp\n$reservedWords = array('/\\s+AND\\s+/u' => ' && ', '/\\s+OR\\s+/u' => ' || ', '/\\s+NOT\\s+/u' => ' !');\n. do not use shortcuts please, they're shortcut to hell :)\n. Can you please fix the coding standard? \n. You realize that by adding a new typehint to class that somebody might be extending is a BC break? Adding typehints is a good thing, but then the release process should take that into account (=change like this should not appear in patch version release and ideally not even in feature version release).\n. You can always do \"manual check\"\n``` php\nif (!$rescore instanceof AbstractRescore) {\n    throw new \\LogicException(sprintf('Instance of AbstractRescore expected, but %s was given.', get_type($rescore)));\n}\nreturn $this->setParam('rescore', $rescore->toArray());\n```\nAbout the release process, it doesn't matter if change like this is in master branch, but it does matter if it's in some release-branch and if it it's tagged.\n. ",
    "rmruano": "Done!\nUpdating an existing doc with a non-matching version number parameter will rise a VersionConflictEngineException and won't update the document. Perhaps something like this?:\n```\npublic function testUpdateDocumentWithParameter()\n{\n    $client = $this->_getClient();\n    $index = $client->getIndex('elastica_test');\n    $type = $index->getType('update_type');\n    $id = 1;\n    $type->addDocument(new Document($id, array('name' => 'bruce wayne batman', 'counter' => 1)));\n    $newName = 'batman';\n$document = new Document();\n$script = new Script(\n    \"ctx._source.name = name; ctx._source.counter += count\",\n    array(\n        'name' => $newName,\n        'count' => 2,\n    ),\n    null,\n    $id\n);\n$script->setUpsert($document);\n\ntry {\n    $type->updateDocument($script, array('version' => 999)); // Wrong version number to make the update fail\n} catch (ResponseException $e) {\n    $this->assertContains('VersionConflictEngineException', $e->getMessage());\n}\n$updatedDoc = $type->getDocument($id)->getData();\n$this->assertNotEquals($newName, $updatedDoc['name'], \"Name was updated\");\n$this->assertNotEquals(3, $updatedDoc['counter'], \"Counter was incremented\");\n\n}\n```\n. Done, I've added the testUpdateDocumentWithParameter() test, could you take a look?.\n. I've just improved the raised exception in my PR.\n. @ruflin Thanks!. That's it, the request exception should not be catched at all. A NotFoundException will be thrown if it's not a 200 OK response, and a ResponseException will be thrown if something went bad (ES response contains an error).\n. The only broken test is TypeTest::testGetDocumentNotExistingIndex().\nFailed asserting that exception of type \"Elastica\\Exception\\ResponseException\" matches expected exception \"\\Elastica\\Exception\\NotFoundException\". Message was: \"IndexMissingException[[index] missing]\"\nIt seems that ES sends an error response in combination with a 404 header when the index is missing, that triggers the ResponseException which now goes uncatched.\nAn easy fix would be to bring back the catch in Type::getDocument() but only throwing the NotFoundException in case of a 404 response code.\n```\n...\ntry {\n    $response = $this->request($path, Request::GET, array(), $options);\n    $result = $response->getData();\n} catch (ResponseException $e) {\n    $info = $e->getResponse()->getTransferInfo();\n    if ($info['http_code'] === 404) {\n        throw new NotFoundException('unable to retrieve doc id ' . $id. ': '.$e->getMessage(), $e->getCode(), $e);\n    }\n}\n$info = $response->getTransferInfo();\nif ($info['http_code'] !== 200) {\n    throw new NotFoundException('doc id ' . $id . ' not found');\n}\n...\n```\nIt feels odd being forced to handle 404s 2 times. Maybe the ResponseException should not be thrown by the transport if the response has a 404 http code (It's not really an exception)... but I suppose that will be a pretty big BC break. What do you think?\n. NP, we're all pretty busy :p\nI think we should behave just like ES do: only throw a NotFound exception (ES response without any errors where found===false) if the document is not found because it hasn't been populated yet. If the reason for the document not being retrieved is another one like a bad request (i.e. child doc without parent parameter) or a missing index, the ResponseError triggered should not be captured, that way the engineer can easily know what failed.\nIn case we need/want to be completely agnostic about the transport we should stop using $response->getTransferInfo() at all, because it's totally dependent on the HTTP transport (in fact, $info['http_code'] !== 404 is actually throwing notices if other transport is used). There are a few references to $response->getTransferInfo() within the code.\nHaving said that, my \"final\" proposal would be:\n```\n....\n$response = $this->request($path, Request::GET, array(), $options);\n$result = $response->getData();\nif (!isset($result['found']) || $result['found'] === false) {\n    throw new NotFoundException('doc id ' . $id . ' not found');\n}\n....\n```\nIn order to pass the tests the only change required to testGetDocumentNotExistingIndex would be to expect a \\Elastica\\Exception\\ResponseException\n. Done! https://github.com/ruflin/Elastica/pull/713\n. Ok, since the main problem has been resolved by the #713 merge, should I close this issue?. Remember there are still a few $response->getTransferInfo() references within the code.\n. Sure, will do a little research first, if there are no inherited problems I'll just create a PR with it. Closing this issue.\n. Check issue https://github.com/ruflin/Elastica/issues/687\n. @ruflin The thing is that ES returns a 404 response code for not founds (not sure about older versions) and it doesn't return an error response, so no ResponseException is triggered and no NotFound should be ever thrown in that case. If you don't want to break BC you can merge this PR as is right now, at least the exception includes now a better message and the original exception, but I still think the ResponseException should not be catched at all (like all other methods at the Type class do).\nHaving said that, what do you think about creating a BadRequestException extending (or not) ResponseException?, AbstractTransport::exec() methods could be updated to consider this case:\n```\npublic function exec(Request $request, array $params)\n{\n    ....\n$transferInfo = curl_getinfo($conn);\n$response->setTransferInfo($transferInfo);\n\nif ($response->hasError()) {\n    switch($transferInfo['http_code']) {\n        case \"400\":\n            throw new BadRequestException($request, $response);\n            break;\n        default:\n            throw new ResponseException($request, $response);\n            break;\n    }\n}\n\n...\n\nreturn $response;\n\n}\n```\nAnd Type::getDocument() could detect it:\n```\npublic function getDocument($id, $options = array())\n{\n    $path = urlencode($id);\ntry {\n    $response = $this->request($path, Request::GET, array(), $options);\n    $result = $response->getData();\n} catch (ResponseException $e) {\n    if ($e instanceof BadRequestException) {\n        throw $e;\n    } else {\n        throw new NotFoundException('unable to retrieve doc id ' . $id. ': '.$e->getMessage(), $e->getCode(), $e);\n    }\n}\n\n$info = $response->getTransferInfo();\nif ($info['http_code'] !== 200) {\n    throw new NotFoundException('doc id ' . $id . ' not found');\n}\n\n...\n\n}\n```\n- In case BadRequestException doesn't extend ResponseException no modification should be needed.\nAnyway, I would still remove the whole try / catch :)\n. @fprochazka It seems they're looking for a method, not for a property.\n@cassianotartari Doesn't seem to be a Elastica related issue, and adding a __call magic method is not a proper solution. Perhaps you can create your own factory class which return an array of your custom Result objects (extending Elastica\\Result and implementing the magic method) based on the Elastica\\ResultSet. You can complicate it as much as you want / need.\nPseudocode:\nmyFactoryClass::createMyCustomResults(Elastica\\ResultSet $resultSet) {\n    $myResults = array()\n    foreach $result inside $resultset\n          $myResults[] = new myCustomResultObject( $result->getHit() )\n    endforeach\n    return $myResults\n}\n. @cassianotartari I can see what your problem is, Result::__isset() magic method is returning false for null values (as it should ever be), that causes your engine to avoid trying to get the property directly (which would trigger the __get to return the null value) and falling back to calling a method with the same name which doesn't exists. \nPlease notice that this is entirely an issue of your templating engine, which should probably just assume a null value if the getter method also doesn't exist instead of throwing errors. You can ask them to implement that behaviour (like @fprochazka suggested) or fall back to the solution I gave you. Implementing magic call methods is not a very good practice.\n. No, it was just to check the tests. https://github.com/ruflin/Elastica/pull/713 PR replaces this one.\n. Done, I've also updated the docblock.\n. @im-denisenko I don't think that removing it from the documentation or that symfony reverted it means this practice is considered bad and should be discouraged but I can understand it because some projects are excluding them and others not which could cause confusion. IMHO, I prefer not including the test suite in the builds because you still have --prefer-source if you need them. Anyway, I don't have any problem with reverting this if @ruflin consider they should be included in the builds.\n. .gitattributes excludes only affects builds, clones and composer\n--prefer-source would still retrieve all files as usual without loosing the\nadvantage of having a clean package for production.\nIf you remove tests from it (.gitattributes) there's no point in keeping\nthe excludes for just a few files, the file can be safely removed then.\nEl 03/04/2015 14:40, \"Nicolas Ruflin\" notifications@github.com escribi\u00f3:\n\nThe reason I like to include the tests is because I often refer to the\ntests if someone looks for examples. This can be handy for the engineering.\nFor the other files: Is there any benefit not having them in the package?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/745#issuecomment-89276949.\n. Thanks @webdevsHub, that's actually how I avoid the issue: The instance is regenerated every 5 minutes or if there are no connections available, but It would be nice to do something when it actually happens, like receiving the connection pool on the fail callback to perform the check only when a connection is disabled.\n\nThis issue is not strictly tied to very long running workers, even a 5 minute worker (or a long process) could be affected if during that time you have a small network issue connecting to the elasticsearch cluster.\nI'll take your advice regarding long running workers and give a look to supervisord (because you're right and the system should be able to bring workers up automatically :p) but in my experience I've been running very complex php gearman workers (with a huge codebase) in production for years without any issues (neither memory or perfomance related), in fact, I've just restarted this week some workers which were running for more than 1 year... I really love long running things that don't need restarts :p (that's why I love Linux)\nWhat do you think @ruflin ?\n. Thanks @ruflin, I'm so blind!, didn't noticed the client is already being passed as 3rd param, that could solve everything: a callback can be registered to inspect all connections and reenable them if there are none enabled. \nSadly, there is a catch with that approach: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L601 performs a recursive call if there are connections remaining. If all fail, the callback reenables them and if they keep failing, it will enter into an infinite loop. I can think of some ways to prevent that, but they're not very elegant, like implementing some sort of max recursive calls. Anyway, I can live with that and take care of it within the \"reenabler\" callback.\nAdittionally, I've noticed that there's no Client::getConnectionPool(). It could be appropiate to remove all Client getter methods regarding connections and force to go through the ConnectionPool in order to get a more lightweight Client (big BC break).\n. Indeed, I've been too aggressive with the default. The idea behind of this is to prevent stacking thousands of connections in high demanded sites in case of cluster outage or unresponsiveness, firewall rules or simple issues with the connection. Recently we had a complete outage because of the default behavior which according to my research is 300, the cluster went unreachable and all our app servers kept waiting forever instead of falling back to our error page until they weren't able to keep up accepting requests. Please notice that this timeout only applies during the connection phase: If your client is unable to open the socket in 5 seconds, then something very bad is going on.\nAnyway, we've got 3 options: \n- Increasing the default to 300 seconds to match the standard timeout.\n- Increasing the default to a less aggressive value value (PHP default_socket_timeout property is 60 sec)\n- Setting the default value to null and ignore the parameter if it's not been explicitly set. \nWhat do you think?\n. Done. I've opted to set it to 0 instead of null since it's how curl treats the option\n. @im-denisenko Thanks for your feedback. Apparently, the only missing feature is order, to overcome this without duplicating code, I've created a common AstractTermsAggregation that both Terms & SignificantTerms extend. Please take a look and let me know if you're ok with it.\nI've also fixed SignificantTerms::setBackgroundFilter() with your suggestions.\n. It is, I've upgraded it to the other proposal I did which doesn't break BC, but IMHO It doesn't seem appropiate to throw a NotFoundException for ResponseExceptions.\n. ",
    "philippfrenzel": "ok, my fault... if i catch it with your exception handlers, it's all fine... sorry!\n. ",
    "digitalkaoz": "fixed it by switching from nested to object type mapping\n. The Problem persist with a nested typed Attribute . so dont know if its\nresolved\nAm 04.10.2014 20:56 schrieb \"Nicolas Ruflin\" notifications@github.com:\n\n@digitalkaoz https://github.com/digitalkaoz Good to hear that you found\na solution. Does this also mean the ticket can be closed or is there still\nan issue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/689#issuecomment-57915000.\n. Correct, if im on a laptop i can show you more details\nAm 04.10.2014 21:05 schrieb \"Nicolas Ruflin\" notifications@github.com:\nSo the same query works with the head plugin but fails in Elastica, right?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/689#issuecomment-57915283.\n. you could go with rasmus box https://github.com/rlerdorf/php7dev\n. \n",
    "Tiefschwarz": "I think we're talking about the same field. IMO the word 'required' in the documentation indicates that the like_text parameter is required.\nI wrote a test to demonstrate the failure.\n```\npublic function testNoLikeTextProvidedShouldReturnNoResults()\n    {\n        $client = new Elastica_Client();\n        $index = new Elastica_Index($client, 'test');\n        $index->create(array(), true);\n        $index->getSettings()->setNumberOfReplicas(0);\n    $type = new Elastica_Type($index, 'helloworldfuzzy');\n    $mapping = new Elastica_Type_Mapping($type , array(\n            'email' => array('store' => 'yes', 'type' => 'string', 'index' => 'analyzed'),\n            'content' => array('store' => 'yes', 'type' => 'string',  'index' => 'analyzed'),\n        ));\n\n    $mapping->setSource(array('enabled' => false));\n    $type->setMapping($mapping);\n\n    $doc = new Elastica_Document(1000, array('email' => 'testemail@gmail.com', 'content' => 'This is a sample post. Hello World Fuzzy Like This!'));\n    $type->addDocument($doc);\n\n    // Refresh index\n    $index->refresh();\n\n    $fltQuery = new Elastica_Query_FuzzyLikeThis();\n    $fltQuery->setLikeText(\"\");\n    $fltQuery->addFields(array(\"email\",\"content\"));\n    $fltQuery->setMinSimilarity(0.3);\n    $fltQuery->setMaxQueryTerms(3);\n    $resultSet = $type->search($fltQuery);\n\n    $this->assertEquals(0, $resultSet->count());\n}\n\n```\n. I created a pull request. As far as I know, setting the like_text to \"\" does not have any affect, it just returns 0 results.\n. Thats exactly the point. Sorry if I was unclear about that.\nElasticsearch fails because \"\" is not passed to elasticsearch because of the old code. I updated the pull request to make the test pass.\nI removed the empty check so like_text is always passed to elasticsearch.\n. ",
    "AndreasRydberg": "Sure I can do it. I have never done it before.\n. ",
    "nemobis": "Nicolas Ruflin, 16/10/2014 19:07:\n\nI see that the part Wikimedia is a bit confusing. Feel free to open a\npull request: https://github.com/ruflin/Elastica.io\n\nAh right, I was looking in the wrong repo. Will do.\n. ",
    "trsteel88": "Yes, here you go @ruflin \nSearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[paDSDDuhRgyFPtsN-Mkr8A][acme_index][0]: SearchParseException[[acme_index][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"query_string\":{\"query\":\"WITH LIGHT AND\",\"default_field\":\"_all\"}},\"from\":0,\"size\":20}]]]; nested: QueryParsingException[[acme_index] Failed to parse query [WITH LIGHT AND]]; nested: ParseException[Cannot parse 'WITH LIGHT AND': Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; nested: ParseException[Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; }{[paDSDDuhRgyFPtsN-Mkr8A][acme_index][1]: SearchParseException[[acme_index][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"query_string\":{\"query\":\"WITH LIGHT AND\",\"default_field\":\"_all\"}},\"from\":0,\"size\":20}]]]; nested: QueryParsingException[[acme_index] Failed to parse query [WITH LIGHT AND]]; nested: ParseException[Cannot parse 'WITH LIGHT AND': Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; nested: ParseException[Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; }{[paDSDDuhRgyFPtsN-Mkr8A][acme_index][2]: SearchParseException[[acme_index][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"query_string\":{\"query\":\"WITH LIGHT AND\",\"default_field\":\"_all\"}},\"from\":0,\"size\":20}]]]; nested: QueryParsingException[[acme_index] Failed to parse query [WITH LIGHT AND]]; nested: ParseException[Cannot parse 'WITH LIGHT AND': Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; nested: ParseException[Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; }{[paDSDDuhRgyFPtsN-Mkr8A][acme_index][3]: SearchParseException[[acme_index][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"query_string\":{\"query\":\"WITH LIGHT AND\",\"default_field\":\"_all\"}},\"from\":0,\"size\":20}]]]; nested: QueryParsingException[[acme_index] Failed to parse query [WITH LIGHT AND]]; nested: ParseException[Cannot parse 'WITH LIGHT AND': Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; nested: ParseException[Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; }{[paDSDDuhRgyFPtsN-Mkr8A][acme_index][4]: SearchParseException[[acme_index][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"query_string\":{\"query\":\"WITH LIGHT AND\",\"default_field\":\"_all\"}},\"from\":0,\"size\":20}]]]; nested: QueryParsingException[[acme_index] Failed to parse query [WITH LIGHT AND]]; nested: ParseException[Cannot parse 'WITH LIGHT AND': Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; nested: ParseException[Encountered \"<EOF>\" at line 1, column 14.\nWas expecting one of:\n<NOT> ...\n\"+\" ...\n\"-\" ...\n<BAREOPER> ...\n\"(\" ...\n\"*\" ...\n<QUOTED> ...\n<TERM> ...\n<PREFIXTERM> ...\n<WILDTERM> ...\n<REGEXPTERM> ...\n\"[\" ...\n\"{\" ...\n<NUMBER> ...\n<TERM> ...\n\"*\" ...\n]; }]\n500 Internal Server Error - ResponseException\n. fyi, the query I am running\nphp\n$allQuery = new Query\\QueryString(Util::escapeTerm($searchModel->getQuery()));\n$allQuery->setDefaultField('_all');\n. ",
    "mikekamornikov": "@fprochazka that's exactly what i was trying to explain\n@ruflin\n1. We use v1.2.1.0.\n2. psr/log is in require-dev there - correct.\n3. We don't run any Elastica tests. We run tests of our migration framework which is based on Elastica lib. Sometimes we need to mock Elastica\\Client there. And it results to unmet dependencies.\n4. We install our dependencies via composer install --dev. And still don't get psr/log.\n5. We don't have our own psr/log dependencies.\nShortly, the project depends just on Elastica. But it can't be tested because of unmet dependencies.\n. Yeah, we added psr/log to our require-dev to make tests green. But we consider it as just a temporary workaround.\nI got your point. We'll start looking for some refactoring. Thanks,\n. ",
    "CrAzE124": "I'm assuming you're doing something along the lines of this? \nphp\n$query = new Query();\n$query->setSort(array(\n    'category_order' => array(\n        'order' => 'asc',\n    ),\n);\nThe solution for me was to simply do this:\nphp\n$query = new Query();\n$query->setSort(array(\n    'category_order' => array(              \n        'order' => 'asc',\n        'missing' => PHP_INT_MAX -1,\n    ),\n);\nNot sure why this worked or where I came up with the solution, perhaps @ruflin can shed some light on this and whether it's an issue or not? If it is, I'd also be happy to have a look at it.\n. @ruflin yeah that's where I found it. It's weird though, I don't really see how or why that solves the problem in terms of the JSON overflow. \n. Is it not possible to loop through the $sortArgs array in the Elastica\\Query::setSort() method, and if the missing field is not set for each sort value, just add it in as 'missing' => PHP_INT_MAX - 1? That way if the developer wants to set the missing param to something else, he/she has the flexibility to do so. Just an idea. Not sure if this is the optimal solution. \n. @damienalexandre I agree with you in that it's a bit of a dirty way to do it, but I do believe it lessens the burden on the developer to add 'missing' => PHP_INT_MAX -1 to every sort if not specifically set. I might be a little bias towards this as I myself struggled to figure out what was causing the error.\nWe could probably catch that specific overflow exception and alert the user of a possible solution in a \"cleaner\" way (as in re-throwing a custom error which says something like \"Try using 'missing' => PHP_INT_MAX - 1\" or whatever). I'll toy around with it a bit later on and do a pull request. \n. +1 definitely, I haven't been on this repo for a while, and was just wondering whether this was possible. How can I help on this? \n. @ruflin yes I thought that was your plan! If you're happy with the general idea (and with the use of a couple more adapter classes) I can move forward on this sometime in the week? \nAs far as I understand the requirement, we need to refactor the codebase to implement the transport and connection facilities as provided by php-elasticsearch, whilst maintaining backwards compatibility. Correct?\n. @ruflin yes I see what you're saying with regards to Transport and Connections. I think it can be done without much BC breakage. \nI think we should schedule a Skype/Hangouts session - pop me a mail (I believe my email is public) and we can set something up!\n. @ruflin sorry, been extremely busy with work! Will be looking at this again tonight. \n. @ruflin 2 questions,\n1 - Are we trying to maintain BC with this? I'm thinking I can just about strip out the entire Connection and Transport namespaces if we don't need to maintain BC. If we do, perhaps I'll just replace the guts of the classes in these namespaces with some nice little wrappers.\n2 - What version of Elastica should I be building against? \n. @ewgRa sorry, yes, I think I might be in over my head here.\n. This is obviously not correct - just a PoC. \n. ",
    "lzerma": "Thanks guys...\nI'll try to do this and I'm write here if that solve my problem or not.\nRegards!\n. ",
    "mfn": "I was hit by this issue to but I wouldn't want Elastica to some magic here; I as a developer need to know such corner cases and incompatibilities. The solution is to manually add the missing. I'd suggest to rather improve the documentation (i.e. setSize() method and adding this clause, referencing this issue for example).\n. > Question is if we should also include boost then?\nIt probably makes sense and I see your constructor bloat argument :-/\nIt just had a bad experience, using Term and Terms in various parts of a query and filter and constantly mixing up how the pass the parameters.\n. Sorry don't plan at the moment, too busy! When I removed old code in my project I realized I had a workaround for this issue.\n. Fixed in https://github.com/ruflin/Elastica/pull/1308\nThanks \ud83d\ude04 . I think I've a similar/the same issue. Scratch projects, simply tried to use elasticsearch and elastica, this is what I get.\nEmpty dir, empty composer.json:\n~/tmp/es-test $ ls -l\ntotal 8\n-rw-r--r--  1 user  staff  27 Feb  8 13:43 composer.json\n~/tmp/es-test $ cat composer.json\n{\n    \"require\": {\n    }\n}\nNow trying to install it:\n```\n~/tmp/es-test $ composer.phar require elasticsearch/elasticsearch\nUsing version ^6.0 for elasticsearch/elasticsearch\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nPackage operations: 5 installs, 0 updates, 0 removals\n  - Installing psr/log (1.0.2): Loading from cache\n  - Installing react/promise (v2.5.1): Loading from cache\n  - Installing guzzlehttp/streams (3.0.0): Loading from cache\n  - Installing guzzlehttp/ringphp (1.1.0): Loading from cache\n  - Installing elasticsearch/elasticsearch (v6.0.1): Loading from cache\nelasticsearch/elasticsearch suggests installing monolog/monolog (Allows for client-level logging and tracing)\nWriting lock file\nGenerating autoload files\n~/tmp/es-test $ composer.phar require ruflin/elastica\nUsing version ^6.0 for ruflin/elastica\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - Can only install one of: elasticsearch/elasticsearch[v6.0.0, v6.0.1].\n    - Can only install one of: elasticsearch/elasticsearch[v6.0.1, v6.0.0].\n    - Can only install one of: elasticsearch/elasticsearch[v6.0.0, v6.0.1].\n    - ruflin/elastica 6.0.0 requires elasticsearch/elasticsearch 6.0.0 -> satisfiable by elasticsearch/elasticsearch[v6.0.0].\n    - Installation request for ruflin/elastica ^6.0 -> satisfiable by ruflin/elastica[6.0.0].\n    - Installation request for elasticsearch/elasticsearch (locked at v6.0.1, required as ^6.0) -> satisfiable by elasticsearch/elasticsearch[v6.0.1].\nInstallation failed, reverting ./composer.json to its original content.\n```\n\ud83e\udd37\u200d\u2640\ufe0f\nI'm actually having this problem with 5.3, can't upgrade to 6.0 yet but now that I saw it has the same problem, I'm wondering if I'm doing something wrong?. ",
    "oldskool": "Experienced the same issue today when trying to sort on a nested field that can also have a null value. Adding the missing key with the PHP_INT_MAX - 1 solved this problem, although @yellow1912's solution seems cleaner.\n@ruflin Any idea if and when that solution will be merged/tagged as a release?\n. @ruflin Done, https://github.com/ruflin/Elastica/pull/941\n. Phpunit should continue running on errors (or failed tests) and complete it's build as long as you don't pass the --stop-on-error (or --stop-on-failure) flag.\n. Working on that :) @ruflin What would be the best way to pass the config to the JSON class, everything is static/stand-alone so the JSON class has no knowledge of the client config. Any hints on how to pass/handle that properly?\n. @ruflin @ewgRa I updated the PR, how about something like this?\nI'm not sure how to properly test this though, probably in the ResponseTest I think?\n. @ewgRa Where did BC break? I set defaults for everything trying to prevent just that.\n. @ewgRa Also applied your feedback.\n. @ruflin Done. I'm still not sure where/how to test this change, any suggestions on that?\n. @ruflin Cool! Could you tag this fix in a new release so we can pull it into our projects with Composer? Thanks! :smile: \n. @ruflin Unfortunately not yet. We make extensive use of the dropped NestedFilter in our project. So we'll need to be looking at changing that.\n. Interesting find, thanks for reporting this @theDisco.\n1) We could add an additional check before calling JSON_BIGINT_AS_STRING to see if it's actually available. Like:\nphp\nif ($this->getJsonBigintConversion() && defined('JSON_BIGINT_AS_STRING')) {\n    $response = JSON::parse($response, false, 512, JSON_BIGINT_AS_STRING);\n} else {\n    $response = JSON::parse($response);\n}\n1) (continued) Of course this is just a workaround for the message and doesn't really solve the problem at hand. Maybe we can play with the jwt implementation to see if that could work for this case as well.\n2) It's set to false, because that has always been the default value that PHP uses when json_decode is called (see $assoc var in the docs).\n3) I'm not sure that I follow. The $connection->hasConfig just checks if the $_config['bigintConversion'] key is set for your Client implementation. If you have a cleaner idea of handling that, please do feel free to create a PR for that.\n. ",
    "akorthaus": "Thanks!\nTopHits will return documents inside (grouped by) the aggregation: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-metrics-top-hits-aggregation.html#_example\nI'm not aware of any method like that, can elastica handle that already?\n. ",
    "ilijastuden": "@ruflin: class_exists accepts a second parameter (try to autoload class if class is not already loaded):\nbool class_exists ( string $class_name [, bool $autoload = true ] )\nIf second parameter is true (and it is by default), autoloader will kick in and try to find something that does not exist.\n@skymeyer: Encouraged, yes. But this is an app that many people host and tweak by themselves, not a library (I would never throw an exception from library autoloader). If required class does not exists we need to know about that in order to properly handle that case. In case of a production system that we manage, it's usually an Errbit entry with full trace, request details etc, or in case of customer installation an error dump that our support team can study in order to debug the problem. That level of details is not something that we can get if we simply let the app die due to a missing class.\nSorry for the lengthy comment, I just wanted to bring this problem to your attention.\n. ",
    "jkbnerad": "@ruflin Yes.\n. Thank you.\n. Do you mean something like\nphp\n$reservedWords = array('/\\sAND\\s/u' => ' && ', '/\\sOR\\s/u' => ' || ', '/\\sNOT\\s/u' => ' !');\n$result = preg_replace(array_keys($reservedWords), array_values($reservedWords), $term);\n?\n. @ruflin no space is needed\ncurl -XGET 'http://localhost:9200/_all/_search?q=hello+!kitty' is correct\nI tested performance Regexp vs. strtr and differences were minimal. Regex is better for multibyte white spaces.\n@fprochazka:\nI prefer (w/o \\s+)\nphp\n$reservedWords = array('/\\sAND\\s/u' => ' && ', '/\\sOR\\s/u' => ' || ', '/\\sNOT\\s/u' => ' !');\nbecause your solution (with \\s+) replace prefered words & \"repair\" query (blue \u00a0\u00a0 AND red => blue && red). And it is the task for analyzer, I mean. \n. ",
    "zedfmario": "@ruflin sounds great. I'm gonna change that ASAP.\n. @skymeyer I did. But it sound a bit tricky to me to set the timeout in ms on the curl config, when the transport is allowing a timeout. It could be hard for a user to figure out that Elastica provides such functionality without digging into the code. I guessed it would be a nice-easy solution wich is actually verbose. But sure, I'm proposing and you can always decide not to include the request :) \n. @skymeyer I see your point and I agree your statement, that's a curl related issue and sounds fair enough to have the curl parameter overwritten.\nMy idea was just trying to set a new feature that could improve the user experience. It could be easily solved with documentation, sure, but I felt it more clear in this way since the user doesn't know whether Elastica uses timeout or timeout_ms by default.\n. ",
    "jdeniau": "Hi @webdevsHub,\nThis seems really nice, but can you document an example of a \"complex\" query ?\nThank you\n. Oops sorry I did not see that !\nThank you\nOn Wed, Jan 21, 2015 at 11:45 AM, Manuel Andreo Garcia \nnotifications@github.com wrote:\n\n@jdeniau https://github.com/jdeniau please take a look at the new\ndocumentation:\nhttp://elastica.io/getting-started/search-documents.html#section-query\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/724#issuecomment-70817261.\n. Can you help me with the failing tests ? I change the Elasticsearch version to use the 1.4.2 but there is a weird but with the index.\n\nThanks\n. Once the https://github.com/ruflin/Elastica/pull/738 is fixed and merged, I will update this PR\n. No sorry I did not look at it this week.\nLe 2 janv. 2015 18:27, \"Nicolas Ruflin\" notifications@github.com a \u00e9crit :\n\n@jdeniau https://github.com/jdeniau Did you have any luck yet in fixing\nthe issues?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/738#issuecomment-68544334.\n. I worked on it today. \nThe main problem is that the \"read_only\" instruction seem to block all queries, (see https://github.com/elasticsearch/elasticsearch/pull/9203 ).\n\nI am down to ~15 errors for now, I will commit changes soon.\n. The failing test is really weird.\nActually, it goes well on my local instance of ES.\nMoreover the code on master is :\nphp\n// the document with the random score should have a score > 1, means it is the first result       \n$result0 = $results[1]->getData();\nBut the first document is $results[0], not $results[1] (as said in the variable $result0 too)\n. Sorry to push a lot but I have some differences between travis and my localhost instance :(\nI took the responsability of removing the 5.3 support. I only did that to allow array short syntax, so it is easily revertable, but as the 5.3 version is not officially supported by the PHP developers, I think it is a good think to remove it.\nBut it's up to you, if you want to revert, I'll do it.\n. OK for me when the next build is OK.\n. It's OK for me ! :)\n. Finally :sunglasses:\nI am not proud of this commit https://github.com/jdeniau/Elastica/commit/07b56f63c5e2dd571b54e9162d00bdf53dc62ddc but it is the same kind of problem we have with the readonly.\nOnce merged, you can merge https://github.com/ruflin/Elastica/pull/735 (I updated it)\n. I created another PR https://github.com/ruflin/Elastica/pull/756 for this.\nThanks for the merge !\nFor the metadata bug on ES itself, it will be part of a new ElasticSearch version. I'll watch about it.\n. Can you add a tag for this version ? \n. I agree totally with @im-denisenko , event debian packages in 5.4 now, but understand the point of @ruflin \nAs said it is quite easy to restore 5.3 support. I think there is only one reference to short array syntax in the code.\nIf everyone is OK for re-adding 5.3 support I'll make a PR next week.\n. You are right.\nIf we can do that, it will be the better we can do, this way, we do not try to hack the composer process on PHP 5.3.\nMy knowledge of phpunit on how to skip test is limited though, and I do not know how to do this.\n. Thank you @im-denisenko for the last commits ;) \n. I tried that but got a weird bug with composer in the tests installation process: \nhttps://travis-ci.org/ruflin/Elastica/builds/47757241\n. ",
    "ewgRa": "On my mind goal \"version check\" must be achieved not by implementing \"Version\", but by code assistant from IDE.\nSolution like Version allows understand that you use not supported feature only on runtime level. So, there is no way to prevent misuse of Elastica on development time.\nLets imagine we in future and Elasticsearch during a time deprecate 584 queries. When I type $qb->query()-> - I will see all 584 queries and must understand which one I can use or not?\n. For example sooner functionality will be dropped from Elasticsearch and from Elastica. From QueryBuilder it will be also dropped anyway.\nAnd we return to situation when Version kind of strange thing - ability to use this or another functionality defined by code base.\nGood case now - deprecation. We need to show user that query is deprecated now, but still supported by ES. \nIf developer will use Version140 - he will be wondering - why he have deprecation message, because it is deprecated in 1.7.0. It give unexpected behavior.\n. Since each Elastica release declare with which one Elasticsearch version it compatible - can you show real case of usage Version?\n. @webdevsHub Thank for detailed explanations and yes, you focus on my concerns here.\nMy point is:\n1. Version not prevent misuse. You can understand misuse only at runtime, it is not helpful. QueryBuilder must help, but now it is suggest wrong directions.\n2. Problems with deprecated and removed functionality.\n. I can suggest to do this, if another developers will agree with me.\n. Or the best way implement ArrayAccess interface to Param and another classes? And in this case we haven't BC but can work with queries parts as objects.\n. @ruflin ArrayAccess and ArrayObject will be also BC, or than it must be cloned, because can be such code:\n$filter = new FIlter()\n$query->setPostFilter($filter);\n$filter->addSomething...\nin current version in $query will be empty filter, but when we remove toArray - there will be object and in query will be not empty object.\nI will write test for this later and make a pull request for this case to fix this in tests.\nOn my mind there is two options:\n'1. Create new class that will be decorator of Query, and on final call make DecoratorQuery->toQuery, on \"search\" methods add \"if $query instanceof DecoratorQuery then call toQuery\".\nProps: \n    - no BC\n    - Query can be marked as deprecated and removed carefully in next major releases and this DecoratorQuery will be marked as deprecated.\nCons: \n    - need to be maintained across to original Query class until original Query will be removed (good tests make this cons not so critical)\n    - need at least two major releases, first is mark Query as deprecated, than copy DecoratorQuery to Query and mark DecoratorQuery as deprecated and unmark Query as deprecated.\n'2. Make Params as ArrayObject and all toArray replace to clone, to avoid BC.\nProps: -\nCons: \n           - magic of clone, developers will be confused and always need remember this trick.\n           - still have BC in some cases\n'3. Remove toArray everywere and call toArray on final build stage.\nProps: true way\nCons: BC\nThis is how I see it, you as Elastica author can have different view and maybe have better ideas, at least how make 1. option much better.\nI prefer 1. and 3. way, and which one is depends on BC conventions at Elastica lib.\nFirst option is longer way, but definitely have less surprises :)\n. @ruflin I wrote tests that fix current state for Query class. See #802 \nThere is many another classes that call toArray, did you think that this classes also must be covered with similar tests? It is about 65 places:\ngrep toArray . -R | grep function -v | grep parent -v | grep @see -v | wc -l\nIf there will be BC, tests will be broken and we will see this BC.\nPlease merge it and say your opinion of which one way we can go. I prefer third one, but question in BC. Also as must be another toArray places covered by tests or not.\n. Really big question. I need more time to research code, also as to understand QueryBuilder work.\nAs quick research: \n\nthat no all toArray functions are the same\n\nI grep and see that they all have signature like \"public function toArray()\", I think they all can implement  kind of Arrayable interface. What I miss or you mean something else?\n\nsome need to raise exceptions\n\nAs I understand #878 changes give us objects that always in valid state and in this case we will haven't exceptions in toArray and this problem is disappear.\nIf not, I think there is only one option to handle it - only at toArray at final state, because we can say something about valid this object or not only on final state when object translated to elasticsearch query. This is also will be BC and I think must be covered by tests to understand this BC.\nI think this BC it is not a big deal, just harder to debug where is problem is, because now you get exception earlier, close to object creation, and after changes exception will be later, only on query execution.\n. @ruflin If we can't guarantee that object is valid until it will be converted to string - than we can handle exceptions only at final convertation to string - in our case - right before query will be executed. \nI don't think that people catch such Exceptions and have specific logic for this. In most cases this Exceptions will be fixed at development process and there is no try-catch at all.\nI think it is make development process a little bit harder, because harder will be find code, where invalid object created.\nIs this BC acceptable?\nWe can add \"public function validate()\" method, if someone want to check is object valid or not earlier and use it in toArray\n\nIf this is already BC, we could also instead of Arrayable implement JsonSerializable and lets php handle recursive query serialization\n\nCan't say anything, even haven't experience with recursive json serialization. Props and cons? Can we implement it both that jsonSerialize will just call toArray?\n. Actually I like idea with JsonSerializable and I think we can implement it both.\nHow about this https://gist.github.com/ewgRa/45e632b15bc523de03c4 ?\n. > json_decode(json_encode($this), true);\nOverhead and kind of tricky\n. @im-denisenko toArray() for now must return only arrays, without objects. If we later will just call toArray at jsonSerialize - we lost advantage of this native recursion calls by JsonSerializable interface.\nMaybe extract this question to another issue? Our goal is fast working json serialization, but also have toArray. We can add to interface three methods:\ntoArrayWithObjects - main method that must implement objects\ntoArray -> call toArrayWithObjects and recursive convert objects to arrays\njsonSerialize - just call toArrayWithObjects\nHow to not drop 5.3 - we can have some extra logic and make it work like symfony work with IntlDateFormatter for example. Have custom replacement for JsonSerializable, implement \\JsonSerializable, then check in code if it is native JsonSerializable interface, call json_encode(Object), if not - json_encode(Object->toArray) or something like this.\nAnyway, if we will have toArray that call toArrayWithObjects, later we can add jsonSerialize without break BC.\nOn this week I go to vacation, and return at 12 July and will have time for make PR for this issue.\n. Ok, lets focus on first two and then discuss third.\nI will prepare PR after 12 July.\n. Mostly finished https://github.com/ewgRa/Elastica/tree/no-to-array-at-setters\nThere is some places left, where toArray used, will be check it soon\n. PR - #916\n\nfollowing appeared multiple times\n\nIf you have better idea how to make it more beautiful - let me know. I think about this code and haven't better idea how to rewrite it. Problem is that before there is no store objects in params, in many places there was $this->setParams($object->toArray()).\nNow we need store objects in params and at toArray this adds one extra key, that must be collapsed (in some cases with additional logic).\nSome solutions like decorator for objects, that will remove this extra key, or store objects in objectParams - on my mind have more cons, that props.\n. PR for this ticket merged.\n. All done, if squash needed or something else, let me know.\nAlso does I need add some tests for increase code-coverage?\n. Ok, thanks!\nI will add some tests later.\n. https://github.com/ruflin/Elastica/commit/5a08b5f66b76f2f91ecba6213a7a6b9c9225326d must be not affect of or affected due to this PR, as I understand.\nGreen travis with fail tests that strange, yes. When you fix it and some test will be broken because of this PR - write it here. As I remember when I work on this PR all tests was passed on my local computer. I will check again when I will be at home.\n. Nice notice. Looks like another projects clone all inner objects and this is a good practice and this make sense. Also this will be similar to how clone work before.\nBut, if it will be implemented via __clone, there is no possibility to clone just only object, without clone inner objects. And there is not a small chance that somebody need this feature.\nAnd clone object with clone inner objects can be implemented via deepClone method, or similar.\nI look to symfony code for example, and there is in many places __clone cause clone of inner objects. And how developer can just clone only object if needed?\nIs there any good discussion about this?\nIf implement this, can it be considered as bugfix to 2.3.0? Because it is kind of broke BC :(\n. @ruflin @stof  I think that object that can be set via setters can't be considered as \"inner\" objects and must be not cloned. Good example is symfony Request::duplicate and Request::__clone.\nWhat is @stof meant - this is duplicate on my mind.\nIf for example Param::$_params will be an SplObjectStorage instance - than we must clone it, because for example $cloned->removeParam call must haven't affect on $original.\nBut because it is array now, we don't need to clone objects inside it.\nSo. I +1 for duplicate() when it will be requested by someone, but -1 for __clone() as duplicate().\n. > Can you help here?\nOk, I will try to write something more verbose with examples and explanations.\nBut from 23 Sep I'm on vacation and will return 5 Oct. Don't know if I can finish it before vacation. If not - then only after 5 Oct. If it is urgent - better to ask someone else with help. Also I'm not a native English writer :)\n. @ruflin \n@im-denisenko \nArticle about broken BC: https://gist.github.com/ewgRa/217bb9226943309b1974\nPlease review, how it is looks like, is this exactly what needed, or not, and so on. Feel free to change, add you as co-author, publish and so on. I have vacation from 23 Sep and there is not so much time left to complete future requested changes in article. Do it yourself since my vacation will be started, or wait till I return from vacation.\n. I think problem not in Elastica.\nHow you convert array to json?\ntry echo(json_encode($elasticaQuery->toArray(), JSON_UNESCAPED_UNICODE));\n. Check JSON.php and #559 \n. It is not about Elastica. it is about how FOSElasticaBundle show such queries:\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/Resources/views/Collector/elastica.html.twig#L54\n<code>{{ query.data|json_encode }}</code>\nBetter I think to create issue in FOSElasticaBundle\n. @giorrrgio It is related.\nBecause Elastica actually run query without escaping unicode. As you say:  \"If I run the same query via CURL without the escaped diacritics I get my results.\". It is what Elastica do, runs it without escaping.\nThan you go to profiler and profiler show you query with escaped unicode, but this is not what Elastica actually query to ES. If profiler will show you unescaped query, results will be expected?\nThis is how I see it. You can debug it yourself, I give a link with line, where is a problem on my mind.\n. @ruflin hmmm, maybe I accidentally delete it when try to edit... sorry.\nI think it is expected. Nobody give any arguments against. At least we need this test to fixate current one state.\n. @ruflin I have two cons on clone inner objects:\n1. We lose ability to clone only object, without clone inner objects.\n2. Users can extends from Elastica classes (Filter for example) and deny clone in customized objects. In this case they will have exceptions when they try to clone Query for example, when we try to clone inner objects. We don't know does inner object can be cloned, or not.\nCurrent state haven't such cons, but we still have ability to implement clone with inner objects by introduce \"duplicate\" method.\n. @ruflin For example clone and change only limit, offset, add new additional term, there is can be such cases, I'm sure.\nWhatever can happen will happen (c) Murphy\n. Constructor default value changed. Kind of broke BC, but this is bugfix, and I think can\"t be considered as broke BC.\n. done\n. @im-denisenko \nYes, it is valid:\n\"filters\" : {\n        \"filters\" : {\n          \"0\" :   { \"term\" : { \"body\" : \"error\"   }},\n          \"warnings\" : { \"term\" : { \"body\" : \"warning\" }}\n        }\n      },\nIn buckets there will be \"0\" key. I already add this case to tests in #935.\nIf you use arrays with keys - you must use string as key. If this is not an associative array - it will be anonymous buckets.\nJust fyi: \"e'r\u00e4ro\\\"rs\" also valid, becomes in results \"e'r\u00e4ro\"rs\"\n. @ruflin but in exists class? you don't want to split it to be close to Elasticsearch?\n. PR for prevent mixing keys - #939 \n. I will try later, but usually developers just go and run \"phpunit\". Better to have there passed or skipped tests for everyone, in this case more easy to ask another developers run tests.\n. Also check added that name can be only string\n. @ruflin done\n. @oldskool Cover by some tests also would be nice\n. It is definitely must be not a default thing.\nOn my mind response can have info about parsingOptions and use it in JSON::parse call.\nTransport, when create Response can take this parsingOptions from $params in exec method, and to params such options must come from connection options and/or can be directly set/unset for specific request.\n. It is close to what I mention in my comment, but broke backward compatibility.\nI think this can be done without broke BC.\nMy suggestion:\n1. Do not add jsonBigintConversion to Response constructor and instead use setter.\n2. Is JSON class changes needed? If you have jsonBigintConversion, you can just call JSON::parse(content, true, flag). There is no reason to move it inside JSON class.\n. Thanks! Much simpler and much better on my mind.\nBroken BC because JSON::parse become non-static.\nAnd also for future there is can be several Response realization, that can implement interface. Json specific argument in Response constructor hard to maintenance.\nCheck elasticsearch-php for example. They have several serializers, also as there is no guarantee that later elasticsearch will be not support xml, or yml, or another output format.\n. I haven't time for this right now, but still interested. Probably at the end of March I will have time for try this.\n@merk why you want to support all versions at one package? What you want to avoid?\n. Me not and I haven't any plans to work on it.\nThere was good step forward in this direction https://github.com/ruflin/Elastica/pull/1277 . \nNext step will be harder and probably require big brake backward compatibility, but it can be a final step for this issue. I personally would be happy to see PR for next step :). I look to deleteByQuery. It will be removed in ES 2.0, they suggest use ScrollAndScan and than perform bulk delete by document ids.\nUse this advice as is in Elastica will cause CPU performance problems, because instead of one query, we will have read documents (create objects) and then send delete requests.\nThey implement it as plugin https://github.com/elastic/elasticsearch/blob/master/docs/plugins/delete-by-query.asciidoc#delete-by-query-plugin-reason\nI think deleteByQuery not require any changes, seems it is compatible with this new plugin. There is just must be added good exception message if plugin is not installed and also in tests there is checks needed, and if plugin not installed - just mark it skipped.\n@ruflin what do you think?\n. @ruflin I install docker image, but seems there is no any plugin installed, many tests is skipped, because no plugin. But I need to check.\nYes, yesterday I start looking to deleteByQuery issue. Tomorrow will continue on it, maybe today if I will have time. If it is not urgency, let me dig it more.\nAbout exceptions this is also question, because I don't check how ES answer when this plugin is not installed. Also will check it.\n. Seems deleteByQuery have a bug: https://github.com/elastic/elasticsearch/issues/14758\nWill wait confirmation or explanations.\n. PR #977 that adds check plugin exists for deleteByQuery. As I see from Image for example, there is no messages like \"Image plugin not installed\" when developer try query something related to Image plugin. That means that (Test|Index)::deleteByQuery also not required changes.\nFail test I think will be fixed when bug in elasticsearch will be confirmed or explained.\n. @Floyd25 thanks for watching progress. Actually it is already done https://github.com/ruflin/Elastica/pull/979 , actually it was problem in test.\n. Would be nice if you add some tests\n. I still can't understand general idea why it is needed and who deny developer to configure mapping before call Type::setMapping. I don't see any case (maybe you give example?) and any idea why one thing must be done with two ways, and second way (already) have magic inside and your PR add more magic there.\nBut if @ruflin ok with this, than ok.\nI just have small cosmetic notices, will point it in lines review.\n. > I'm sorry as you were right with your first implementation\nFirst implementation, if we say about #965 also not right, on my mind this implementation better than that.\n_timestamp  - it is special mapping field, like _size and so on. Why Type must know anything about how to configure mapping?\n\nI think the main concern there was if we need the enabled and store methods\n\nMain concern is about why Type work with mapping configuration?\nMy use case (and for example how FOSElasticaBundle use it):\n$mapping = new Mapping...\n$mapping->set... / configure mapping\n$type = new Type...\n$type->setMapping($mapping);\nAnd use case of this PR:\n$mapping = new Mapping...\n$mapping->set... / configure mapping, optional lines\n$type = new Type...\n$type->setMapping($mapping, {mappingConfigurationHere});\nWhat is point to give Type extra functionality to work with Mapping configuration?\nOn my mind Type must be left as is there is no changes needed that related to _timestamp.\nFor mapping there is can be added: Mapping::setTimestamp($options)\nOptions is an array like (enable=> true, ...).\nAnd a best way:\nCreate TimestampMappingField class that implement methods like setEnable, setStore, setParam and so on. With toArray method.\nAdd Mapping::setTimestamp(TimestampMappingField $field) where $field->toArray will be called.\nAnd use case will be looks very nice and readable:\n```\n$timestamp = new TimestampMappingField();\n$timestamp->setEnable(true);\n$mapping = new Mapping...\n$mapping->setTimestamp($timestamp);\n$type = new Type...\n$type->setMapping($mapping);\n```\n. I would happy to have TimestampMappingField.\nWhat happens when I want setTimestamp without such class? Right, I need open elasticsearch documentation, because I don't remember all configuration options. With TimestampMappingField I will have it in my IDE code completion.\nThere is some props with better refactoring and find places where I use specific functionality, also as more flexible work with deprecations and so on.\nBut of course introduce such classes will need more work with support it, but it is easy and I think Elastica community will handle it.\n. Thanks. Yes, I have a plugin installed. But seems it is not working well, maybe bugs, maybe I use it not in a right way.\ncurl -XGET 'http://172.17.0.14:9200/twitter/tweet/_search'\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":2,\"successful\":2,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":1.0,\"hits\":[{\"_index\":\"twitter\",\"_type\":\"tweet\",\"_id\":\"1\",\"_score\":1.0,\"_source\":{\n    \"tweet\" : {\n        \"user\" : \"kimchy\",\n        \"post_date\" : \"2009-11-15T14:12:12\",\n        \"message\" : \"trying out Elasticsearch\"\n    }\nbut \ncurl -XDELETE 'http://172.17.0.14:9200/twitter/tweet/_query?q=user:kimchy'\n{\"took\":0,\"timed_out\":false,\"_indices\":{\"_all\":{\"found\":0,\"deleted\":0,\"missing\":0,\"failed\":0}},\"failures\":[]}\nWill continue on it.\nWhat I have now. If plugin not installed, answer is\n{\"found\":false,\"_index\":\"twitter\",\"_type\":\"tweet\",\"_id\":\"_query\",\"_version\":1,\"_shards\":{\"total\":1,\"successful\":1,\"failed\":0}}\nWe can check if '_id' in answer is equals to '_query', than we can say that plugin not installed.\nWhen plugin installed we can have such response if index is not exists\n{\"error\":{\"root_cause\":[{\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_or_alias\",\"resource.id\":\"twitter\",\"index\":\"twitter\"}],\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_or_alias\",\"resource.id\":\"twitter\",\"index\":\"twitter\"},\"status\":404}\nand\n{\"took\":0,\"timed_out\":false,\"_indices\":{\"_all\":{\"found\":0,\"deleted\":0,\"missing\":0,\"failed\":0}},\"failures\":[]}\nif index exists.\nOn my mind if ES deprecate delete by query, than it is must be exception or something like this. Now _query considered as _id and it is not so right. I will create issue in elasticsearch, maybe they fix it.\n. About failed test with delete type. In ES2.0 there is no possible to delete Type anymore: https://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-delete-mapping.html\nQuite strange for me... now maintenance of type becomes much more complex :(\nOn Elastica side I prefer wait when #985 will be closed and make a PR that throw DeprecatedException on this method.\n. This must be fixed by https://github.com/ruflin/Elastica/commit/41a7a2075837320bc9bd3bca4150e05a1ec9a115\nAlso commit has typo that will be fixed by #978\n. Test fail seems not related.\n. Fixed. Totally forget about reserved words in PHP7.\nOne test seems will never end, but output show that it exit with code 0.\n. @dbhattacharjee There is a possibility that even raw response from Elasticsearch not fit your memory limit. What you will do in this case?\n. I fear that your wishes more at application level and in any case you will need change application for this.\nEven if there is will be stream processing of response, or transparent batch processing, there is no guaranty that it fit your memory limit. Ok, it will be parsed to array somehow, but array also will be big for your memory limit and we return to beginning of this story.\n. One moment, will add to changelog\n. done\n. ping @CrAzE124 ? Do you need any help here?\n. @ruflin I'm still interested, but want return to it later, have another several things in priority and not so much free time.\nBut from my point of view, make it as adapter - it is partial solution, no? And it is not enough. The best solution - all transport layer, as low-level layer, must be based on official client. So, all adapters, any cases of connections (AWS, etc.) must be supported by official client and must be out of scope for Elastica.\nOf course, this is a broke backward compatibility, but it is forward step, not a side step as adapter.. I saw you fix it already, this PR also deprecate _percolate param and add more asserts at CrossIndexTest\n. My was first :) Seems I need install gitter at home :)\nAnd seems there is no possibility to notice user about this change, that actually kind of BC.\n. @ruflin @fubuki What do you think about implement it like SuggestSearch?\nI'm not sure, but seems \"context\" is not related to _search for example, it is _suggest thing. And Search class start mixing different things when suggest functionality moved there.\n. @fubuki Maybe you a re right, it depends what is Search implement, API, or not. I think @ruflin mean \"endpoint\", not an API.\nMy 2 cents, that Elastica must show how to use API clearly and prevent misuse.\nFor example if we mix two endpoints in one Search class, we can do something like this:\n$search = new Search();\n$search->onlySuggest();\n$search->setQuery(...);\nAs far as I understand, set query for _suggest make no sense, and would be nice if Elastica prevent to misuse of Search API and when it is onlySuggest - at setQuery throw exception. But catch all this situations and have a lot of checks - make maintenance of code harder, and make harder work with Elastica, because developer maybe don't know that when it is onlySuggest - he can't set query.\nAnother side when we use Search and Suggest for example.\nWhen I work with Suggest object, my IDE will show me what I have and what I can set.\nI think it is big question. If Search is implementation of Search API, - than good point to have it in one class and concern about  misuse in one class. If not, than it can be done like: add Api directory, there will be Api/Search/Search and Api/Search/Suggest for example. Deprecate Elastica/Search for long term and add backward compatibility layer.\nI'm sorry that I make things harder and more complex :)\nWhat do you think on all of this? On my mind there is only advantages and more friendly for developers. Disadvantage only that it is broke BC, but we can provide backward compatibility for a long term.\n. Looks interesting, but I can't define how right it will be, especially without code cases, so feel free to ignore my 2 cents.\n1. https://www.elastic.co/guide/en/elasticsearch/reference/2.0/query-dsl-geo-distance-query.html - seems it is still filter. So, in Elastica call it \"Query\" seems not so right way. It is still query and filter.\n2. I'm always for provide good BC layer.\n3. It depends on \"1.\". \"Make setFilter() accept only AbstractQuery\" will be confuse developers. It will be read like \"setSugarAmount($soltAmount)\". Also it allow developer do many things that will have unexpected results. Like setFilter(BoolQuery->setBoost($boost)) - but there is no boost option for filter for example.\n. @kukulich I agree with main idea follow Elasticsearch naming, lets look to documentation for now: https://www.elastic.co/guide/en/elasticsearch/reference/2.0/query-dsl-geo-distance-query.html\n\"Filters documents that\"\n\"can be executed with a geo_distance filter:\"\n\"The following are options allowed on the filter:\"\nIt is all about filter.\nDocumentation just show how to perform geo distance queries, but GeoDistanceQuery it is FilteredQuery + Filter.\nSo, for me there is place for GeoDistanceFilter.\nHow it looks for you?\n. @kukulich \nFor me it looks like GeoDistanceQuery = Query + GeoDistanceFilter.\nCan you give example in code how you see it?\nfor me it looks like this:\n$query = new Filtered();\n$query->setFilter(new GeoDistanceFilter);\nIf for example Bool also support setFilter, I can do something like this:\n$query = new BoolQuery();\n$query->setFilter(new GeoDistanceFilter);\n. I suggest have only GeoDistanceFilter.\nHave GeoDistanceQuery - it will be kind of synthetic sugar. Elasticsearch allow to filter by geodistance any queries. Would be nice to see how you see it.\n. @kukulich Sure. Can you show code how you see it?\nSomething like this?\n$query = new GeoDistanceQuery();\n$query->setDistance...\nI'm not sure (is this possible on ES side, maybe it is not a working case, haven't time to check), but how it will be handle than such ES queries?\n{\n    \"bool\": {\n        \"filter\": {\n             'and' : { \n                 ....\n                 \"geo_distance\": ...\n                 \"geo_shape\": ...\n        }\n    }\n}\nWhen query have several filters?\n. @ruflin As from this https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html than Query extends from Filter.\n. @ruflin @kukulich \nSo, I read docs carefully.\nSeems ES 2.0 now have Queries only, but also it introduce Query context and Filter context. Query can be performed in both contexts, also as a just standalone.\n\"The behaviour of a query clause depends on whether it is used in query context or in filter context\".\nAs from this https://www.elastic.co/blog/better-query-execution-coming-elasticsearch-2-0 \" the _cache and _cache_key options are now deprecated and will be ignored if provided\".\nSo, for me @kukulich right, filters must be deprecated at all, instead there is must be Queries, that can be performed in Query context, or Filter context.\nFor me still \"setFilter(Query)\" looks very strange, but it is right way and follow Elasticsearch.\n. @kukulich +1 for what you suggest.\n+2 for good BC layer\n. +1 for I was not right :)\n-1 for I was right :)\n. But in another hand this \"boost\" that still make no sense for filter context, but can be used in query context.\n. @kukulich do you want take it?\n. Same for me, but maybe I can take it earlier. I think @ruflin would be glad to have it much earlier than January, so, who first will have time - just left notice here to avoid doing same work.\n. I think I will have time on this week and make PR\n. Yes, for me totally ok.\n. I start work on this issue.\n. PR for deprecated filters #1031\n. @kukulich I have question about this PR. Can you clarify, Filtered query deprecated, but not removed? So, in ES 2.0 it still can be used?\nIf it is deprecated and removed - than exeption must be thrown. If not - than trigger errors only. Now you have in one place - trigger error, in another - throw exception. I think it must be synced. And tests also depends on what happens with Filtered - it is removed, or not.\n. @kukulich Thanks for PR, it is mostly ready to be merged, just want ask you about some things.\nCan you mark deprecated and trigger error at Elastica\\QueryBuilder\\DSL\\Query::filtered method? And in Elastica\\Test\\QueryBuilder\\DSL\\QueryTest check that deprecate error triggered. Also would be nice to call Query::filtered method twice, or load Filtered class before, to be sure that error triggered in method itself and not in loading Filtered class.\nI want suggest move trigger deprecated error from constructor to file itself, like in https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Bool.php.\nYou said that you have in this case error with FilteredTest. So, I try and see what are you talking about. And I want to suggest complete it in this way:\n1. Move trigger error from constructor to whole file. My concern here that we need kind of standard general way to deprecate classes, because classes can have static methods, trigger error in constructor not cover call static methods in deprecated classes, also as there can be unserialize things. So, on my mind classes must be deprecated just as whole file.\n2. In FilteredTest in setUp supress E_USER_DEPRECATED, and in tearDown - return it. Like: \n   setUp - error_reporting(error_reporting() & ~E_USER_DEPRECATED);\n   tearDown - error_reporting(error_reporting() | E_USER_DEPRECATED);\n   After this there is no needed to change all test cases for catch this deprecated error.\n3. Add test that Filtered class raise deprecated error when class is loaded first time. It can be just first test case at FilteredTest. Yes, it can be broken at some cases related to in which order test runs, but I think it is never happen and sooner or later Filtered will be removed.\nSo, what do you think? Do you have time for this?\nI can prepare PR to your repository with this changes if you haven't time on this.\n. Can you name tools/libraries that have problems with that?\nSymfony for example have same deprecation convention - they deprecate whole class to mention that whole class is deprecated and as far as I know - there is no problems with another libraries/tools. One thing why they don't want use constructor - a lot of similar deprecation messages when object created.\nAnd it is already in Elastica deprecation for whole classes - in Bool for example.\n3rd problem is not a big problem, because usually tests grouped by classes.\n. @kukulich ?\n. @kukulich Good job! I think most important that now whole class deprecated. How it looks like in tests - it is kind of subjective. If you want to see how I saw it - feel free to message me (Github, Gitter channel).\nOn quick view it is ready to be merged. I will check carefully on this weekend.\nJust one small thing left, can you add to changelog that lib/Elastica/QueryBuilder/DSL/Query::filtered method is deprecated.\nThanks again!\n. Thanks @kukulich !\n. I think you right and it must be synced and POST more right in this case, so +1 for POST.\n@hakman Did you face with real problem when PUT used? Or there is no something behind?\n. I wondering, is this the backward compatibility broke or not?\nTheoretically this change can broke something, because you have real case why this change needed and change must be added to changelog as BC broke.\nWhat do you think?\n. Do you want to contribute? :)\n. Bool is deprecated now, you can use BoolQuery or BoolFilter if you have PHP7.\nBool will be removed in next releases.\n. my 2cents\nI like whole idea in general.\nEvery code that require Elastica - solve similar problems with transformations from ES to Doctrine/etc., so, have this at Elastica - give standard way to do this.\nKeep transformers in Elastica - right way and right place for this.\nI understand @ruflin when he said that maintain bigger code base is harder and there is no resources for this, but if Elastica will limit itself by this doubts - there will be no move forward.\nMaybe developers that interesting in transformers (like @merk) will be more involved in supporting this functionality, when they will not have it in their projects.\nI also don't see any big advantages from move it to ElasticaTransformers. Keep it in Elastica will give bigger community and not split it. If Elastica can't maintain this code - there is no difference where this code placed. People will always think that Transformers - part of Elastica. And real question is - will it be in Elastica, or not.\nI prefer to have it in Elastica, even if maintain this code will be not in priority for people who maintain main code base.\nI believe in opensource and if opensource project will be limit herself functionality based on how many resources it have - there will be no progress :)\n. At least it can be part of Elastica at beginning and if it will be really huge - moved to another repository and required in composer.\n. @Isinlor interesting, maybe split it is a good idea.\n. Do it, I will merge it to my branch, I think it is not a problem for me.\n. @lynx-ripe can you show code?\ncan you show your ES version?\n. I think your ES version < 2, so, in 1.7 there is no filter in bool query - https://www.elastic.co/guide/en/elasticsearch/reference/1.7/query-dsl-bool-query.html\nThis is why you have problem. You try use Elastica that compatible with ES >= 2 on ES < 2\n. Master branch have latest changes, so latest tags created from master branch. Elastica tags 2.x compatible with ES 1.x\nYou can check in readme file of tag which one version Elastica it support.\n. Lets focus on this first:\n\nI suggest we use AbstractFilter extends AbstractQuery\n\nI think on it when I start working, have similar idea, and decide that it will be broke BC in many cases.\nFor example in Elastica/Query.php there is a code:\n```\n            case $query instanceof AbstractQuery:\n                return new self($query);\n            case $query instanceof AbstractFilter:\n                $newQuery = new self();\n                $newQuery->setPostFilter($query);\n            return $newQuery;\n\n```\nIt will be broken in this case. I think if such extends will be used - it will be a mess for developers and this will be bad BC layer. Some developers also can have similar checks.\n. In this PR Elastica use AbstractFilter only as support BC layer, to trigger errors and some legacy tests.\nAfter BC layer will be removed - we will haven't any AbstractFilter in our code. This BC layer - kind of \"last call\" for developers and chance to switch to new Elastica version without big pain.\nMain idea was provide BC layer that say how to drop filter usage and warn about its usage. Now developer still can use Filters when they will switch to new version of Elastica and work with deprecation errors. They will have time to find all usage of deprecated stuff before it will be completely removed and change it step by step, make estimation how hard it will be, and can work with it without blocking development cycle. It makes switch to newer Elastica version not so painful.\nIn next major release (4.0?) filter BC layer will be removed.\nYes, there is question about bug fixing and new features in deprecated code. I think bug fixing must be provided even for deprecated code. New features - only for non deprecated, this will push developers switch to non deprecated functionality faster.\n. > DSL: I would ignore the DSL as far as possible at the moment.\nI revert back my changes for QueryBuilder. Now there is just small changes that follow changes in filters to be not broken.\n\nThat seems to be a \"usage\" of AbstractFilter in our code. Shouldn't we remove this and convert it to filters?\n\nIt is part of BC layer. So, it must be there and than will be removed as part of BC layer. If we remove it now - developers have BC break, because instead of set post filter it will be set query. We must warn them, this is why AbstractFilter still used there.\n\nFor clarity we should probably rename all function params called $filter to $query when an AbstractQuery is passed\n\nI disagree. If elasticsearch have 'filter', we must have setFilter method. If we change setFilter($filter) to setFilter($query) - it will be like setSomething(int $int). Arguments must be named not by type, but by what they represent. If you still want rename it, at least lets ask opinion another developers to reduce subjective thinking in this problem. \n\nI didn't check the classes copied from filter to queries as I assume it is just a copy of the filter\n\nMostly. Just for Indices query have setQuery instead of setFilter.\n\nI didn't check all test changes in detail\n\nThere is important change in Base::setUp, I enable show deprecation messages for all tests, and I've added some new methods for testing BC layer.\nIs I miss something? Lets find agreements on general level and than I can switch to notes for commit.\n. I will squash it and make changes in changelog\n. Also interesting that Symfony team now not ask about squash.\n. sorry, accidentally press button\n. No, no, all is fine with squash.\nI just think that Symfony team also ask about squash, but later they change it and says: \"Moderators earlier asked you to \"squash\" your commits. This means you will convert many commits to one commit. This is no longer necessary today, because Symfony project uses a proprietary tool which automatically squashes all commits before merging.\".\nI think that this is something that can be used in Elastica, but seems it is custom tool, far away from github.\n. Done\n. For me this PR is ok, it will work. Maybe I will implement it in different way, like DocumentBuilder::buildFromResult(Result), DocumentCollection::buildFromResult(ResultSet), but it is subjective. I just don't think add to Result and ResultSet more knowledge about Document.\nI just wondering that there is #1017 that when will be implemented will provide same functionality.\n. Thanks for PR.\nI think current interpretation is right.\nWhen developer have isset($result[\"something\"]) he expect that it will work as isset documentation says. With your PR will be unexpected result.\nWhat you want - it is just array_key_exists, it can be done by introduce another method (hasSourceParam for example) on my mind.\nAre you agree?\n@ruflin, I wondering, why there array_key_exists and null check, when it can be done by isset directly? Perfomance?\n. @bourvill \n\nbut on class \"Result\" I think we should test simply existance of field, not the value.\n\nWhy? To have unexpected magic for a lot of developers who knows that isset return false if argument is null? They will be don't know anything about what inside of result, but will expect documented behavior from isset.\n. maybe better to add countResult?\nalso is OPTION_SEARCH_TYPE_QUERY_THEN_FETCH change not a break BC?\n. @vinusebastian never mind, seems I was wrong\n. Is it your case? https://github.com/FriendsOfSymfony/FOSElasticaBundle/issues/1000\n. @dario86 Can you close this issue and join to issue at FOSElasticaBundle?\n. @greg0ire It can be done like in toArray here https://github.com/ruflin/Elastica/blob/f124e598228a6b8a6c249fde6afc07ea7eb1a771/lib/Elastica/Query/Terms.php\nCan you create pull request for this?\n. Can you please also add test that exception throws when no script or field set?\nAnd update changelog\n. thanks @greg0ire \n@ruflin fyi\n. @olchick For me it seems like broke BC.\nFor now Elastica always sends retry_on_conflict=0 by default. With your PR it will be taken from elasticsearch configuration and it can be not 0, for such developers it will be broke BC.\nMore right make something like \"unsetConfig('retry_on_conflict')\" or \"setConfig('retry_on_conflict', null)\" and than client can omit it when perform request.\nAlso what with 'version' field from original issue? I think if Amazon care about \"retry_on_conflict\" it will be also raise errors for \"version\", and your PR solve only retry_on_conflict.\n. @Tobion https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html#_parameters_2\nretry_on_conflict there\nOr I misunderstand your question?. @Tobion you are right. By default it is \"the update will fail with a version conflict exception\", if it is omitted, also like \"default\", and all this work as \"0\".\nSo, there is will be no BC break.\n. @ruflin Congrats :)\n. @HKandulla Thanks for PR.\nCan you add tests please? You can check AvgTest as an example.\n. try to run \"php -i | grep curl\" at your installation server. You must have something \"php -i | grep curl\n/etc/php5/cli/conf.d/20-curl.ini,\ncurl\n\" in answer.\nIt is definitely not installed php curl extension on server.\n. @IgorDePaula You can have it, but it can be disabled, or not used for php-fpm for example. You need to be sure that it is enabled.\n. good point.\nActually *Config methods I think mostly used for setup some configuration parameters that used in updateDocument and others.\nYou can do what you want by getConnections - setConnections. It will be work, but it is looks not so good.\nBest way I think to have connectionConfig (maybe move it to ConnectionPool, or something like this) and just config, or even not to save connection config at all. Or move methods related to configuration connections to ConnectionPool, or something like this.\nIs \"getConnections - setConnections\" will work for you?\n. I think it is not about \"If es index has no alias\", it is about - \"if there is no index with this name in ES\".\nQuestion is what to do in this case. Throw something like MissingIndexException, or just return empty array. Like this index haven't aliases.\n. :+1: \n. Glad that it helps!\nI have new work and haven't time to contribute to Elastica. Sorry... But I'm still nearby, and if we introduce Elasticsearch in our stack with PHP, I will have more reasons to contribute :)\n. @ruflin will do requested changes and will split PR later at evening\n\nwhat the long term benefit\n\nLong term benefit is that it will be easy to follow elasticsearch changes. For example for Stats endpoint. With usage endpoint from official client Elastica doesn't know anything about is this GET or POST request, and what is a \"path\" for this endpoint. This mean that if something will be changed there, it is just enough to update in composer official client requirement version and it will be work. This information already in official client, why not to use it and reduce maintenance costs for Elastica codebase?\nSame for another endpoints. Official client Endpoints have validation of params \"checkUserParams\" and so on, that also gives advantages, as for Elastica developers, as for end-user. This will make life easier to follow elasticsearch changes. Update version, and check what is broken.\nAnd which one thing it makes more complicated?. @ruflin I get your point about add requestEndpoint to Type and Index, when I prepare PR, I was thinking on it too. The problem there, that in this case we will change Endpoint object inside Elastica code, that is kindly unexpected by developer who use Elastica. Another solution clone Endpoint object and then \"setIndex\", this looks much better, and I think it is cheap. I'm on position, that in all places where now we have \"request\" method, must be requestEndpoint method.\nyes, later Client::request can be even deprecated, if we will see that it is not needed anymore. For now it is too early for me to say that it is needed. Maybe good idea to not deprecate it, since some users will have cases that require really \"raw\" queries and don't want make custom Endpoint.. Ok, I drop changes in Stats and Status and left only changes for request.\nWhat I want to add, it is throwing exception:\n```\n    public function requestEndpoint(AbstractEndpoint $endpoint)\n    {\n    if (null !== $endpoint->getIndex() && $this->getName() != $endpoint->getIndex()) {\n        throw new WrongArgumentException(\"Sorry, it is ambiguous request, which one index we need to request?...\");\n    }\n\n    $cloned = clone $endpoint;\n    $cloned->setIndex($this->getName());\n    return $this->getClient()->requestEndpoint($cloned);\n}\n\n```\nAnd same for type.\nBut for this we need https://github.com/elastic/elasticsearch-php/pull/557\nSo, what do you think?. @ruflin Sure! \nThan I will continue to prepare PR that start use Endpoints for Elastica.\nAnd I have one idea for transport layer, later will try to implement it.. I think \"meta\" is not needed. It is easy to find places that can be ported to Endpoints. Just check \"usage\" of \"request\" function in Type, Index and Client. For now mostly such places left in Client.. Looks loke all done, ping @ruflin . @nickygerritsen I think you are right. Can you make pull request? It is trivial, and would be nice to cover this case by test.. Strange, that another tests in this SettingsTest class are written in a same way, but they do not fail...\nI haven't ability to check it right now, but did your test fail, if you revert changes in \"lib/Elastica/Index.php\" back?\nMaybe there is wrong tests if it is not fail.... @nickygerritsen Indeed :+1: \nping @ruflin . @ruflin I don't think so, it was kind of typo, and fully fixed and covered by test now.. I disagree. \"Arrayable\" is more used, for example https://github.com/search?l=php&p=1&q=Arrayable&ref=searchresults&type=Code&utf8=%E2%9C%93 and https://github.com/search?l=php&p=1&q=ToArrayInterface&ref=searchresults&type=Code&utf8=%E2%9C%93\nAlso Arrayable used in some frameworks, like Yii and seems something have Laravel API.\nIt is common practice to call such objects like \"*able\", that show to which one thing it can be transformed. Also there is already SearchableInterface. \nAt least I will rename Nameable to NamebleInterface and Arrayable to ArrayableInterface for match naming convention.\nFor name it ToArrayInterface lets hear another opinions, because your one looks like a little bit personal.\n. I sync it with toArray logic, replace empty to is_string\n. Done\n. Done\n. Check added\n. done\n. @ruflin change, that @stof notice I made to sync this check between toArray and addFilter, because they must be same. I think additionally to https://github.com/ruflin/Elastica/commit/5a08b5f66b76f2f91ecba6213a7a6b9c9225326d there is must be changed addFilter method in same way. What do you think? Or I was wrong when say that check must be same between this two methods.\nThis change came from https://github.com/ruflin/Elastica/pull/916#discussion-diff-37099377\n. Ok, I will write tests on this case and we will discuss.\n. int|string instead of mixed? Or instead of mix argument add method like autoFuzziness and left setFuzziness as is?\n. can you add reference to #964?\n. I'm not sure is this method needed? Mapping know about timestamp, Type know only about mapping, but not mapping details.\n. not sure is this needed?\n. not sure is this needed?\n. Disagree. _timestamp it is a mapping thing. There is no reason to introduce it in Type. And what about another magic mapping fields like _size, _index... etc.? Also add as param?\n. can you add space after comma?\n$mapping, $argArray = NULL\n. can you revert such changes that haven't any affects? also in previous file.\nto make diff more clear\n. There is already some trigger_errors in another methods. Usually this is not a problem for production, just more log entries.\n. Usually deprecated stuff removed at major versions, also it is a good to give developers some directions for future. But it is up to you. I will change it to \"and will be removed in further Elastica releases\" and make PR for this.\n. Maybe better to be more strict \"true ===\" ?\n. Maybe better to be more strict \"true ===\" ?\n. Maybe better to have by default $onlySuggest = true?\nWhen I will try to call for example $search->onlySuggest() - I expected that onlySuggest will be enabled, but not disabled. It is how code will be readed.\n. 1. Better to have trigger error even if developer just include file. See for example https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/Bool.php\n. I'm not sure, but if Filtered query just deprecated now, but still can be used, than better here just trigger deprecated error, instead of throw Exception. Also I think here nice to add deprecated info to phpdoc.\n. And if Filtered deprecated and can't be used now, than constructor must throw DeprecatedException. Main idea to prevent developer do something that make no sense in ES 2.0\n. Make no sense, since there is assertEquals - 3 an than all three you check in next lines.\nBetter here to test document content, like name => 'elastica search' is really in document.\n. unset not raise notice if there is key not present in array:\nphp -r \"\\$a = array(); unset(\\$a['a']);\" - work without notice on 5.5.9 and I think on another php versions same.\n. Usually we need check filter on null if it can be null, like in this case, we set filter if it is only not null. So, we can't move it to function.\nAbout code simplify and extract it to Param, I don't see big advantage, because function call will be with messages, and it save just 2-3 lines. And some places can have filter as array, that require another function with another checks. \nBut negative effect here that exceptions and error will be triggered in Param and this will be not a last call at stack, so developer will have not a right place - where they need change something and they must check previous call stack to find real reason.\nFor me save 2-3 lines in temporary code will be compensated by wrong place in call stack.\nIf you still wish, I can do this, no problem, just confirm your wish.\n. As we agree in comments, it shouldn't.\n. As we agree in comments, we shouldn't.\n. In Elastica there is no usage of LogicException, I think better to change it to \\Elastica\\Exception\\InvalidException to be on one wave with similar checks.\n. \"::class\" introduced in PHP 5.5, in composer.json you can find information that Elastica support 5.4, can you fix it please?\n. No, it is in \"$data\".\nActually here we need to use https://github.com/elastic/elasticsearch-php/blob/master/src/Elasticsearch/Endpoints/Indices/Alias/Put.php, but I don't quickly find a way to work with \"$replace\" argument there. Any suggestion?. No, it is not needed, since we call $this->requestEndpoint(...) it will add index name there.. Wow, I just checked official client code, \"join\" even not needed, we can call setMetric with array, https://github.com/elastic/elasticsearch-php/blob/master/src/Elasticsearch/Endpoints/Cluster/Nodes/Info.php#L31 . Will change it at evening and looks like we haven't test for this case.. I just mean that we need use Put endpoint there, but I don't find a way how to process $replace flag there. So, it can be tricky and need more time and can be done later. And asking maybe you see quick solution for this. So, we can do this later.. ",
    "agallou": "changes.txt updated\n. I've renamed the methods according the library convention.\nThe only thing that is not in this adapter is getting the proxy configuration from the connection and use it into the httpadapter that is used (guzzle3, guzzle, buzz, curl...). That's something that could be configured when instanciating the adapter. \nYes, the guzzle adapter is not needed anymore (besides in the current guzzle adapter, guzzle could not been injected properly). But its a bit more complicated to use it (as you can see if my example there is some injection to do), but more decoupled.\nIf you want to get rid of the current code of the Guzzle transport and avoid breaking BC, we could keep the Guzzle class but extend the HttpAdapter and create the guzzle instance in the class constructor (and setting the proxy on the guzzle instance). But This would require to put egeloen/http-adapter as requirement if someone wants to use Guzzle with Elastica. How do you want to preceed with this ?\n. @ruflin I haven't tested it on newer versions, but PSR-7 is still in review (https://github.com/php-fig/fig-standards/blob/master/proposed/http-message-meta.md). \nWhen it will be accepted, I'll make a PR to made the changes if needed (I suppose that egeloen/http-adapter will adjust to use the standard interface).\n. @ruflin tomorow is a public holiday, so I'll have a PR by the end of tomorow\n. I don't realy have a clear opinion on this :\n- Passing an array is more extensible, but we lost some clarity in the API. It needs documentation instead of simply read the parameters (also in that case the method will just do a $this->addParam('ranges', $range); )\n- Adding another parameter will not be very extensible (if another parameter is added in elasticsearch do we need to add a forth parameter to method ?)\nI may tend to think that we could add a third parameter, but I a forth came up, we could reconsider using an array.\nSo, let me know what to do and i'll will update the PR accoding to your opinion.\n. cf  #727\n. ",
    "konformjs": "No but I can see it\u2019s not so simple. But thank you for your great library\nBest regards\njesper\nFrom: Nicolas Ruflin [mailto:notifications@github.com]\nSent: 9. december 2014 19:46\nTo: ruflin/Elastica\nCc: Jesper Sandberg\nSubject: Re: [Elastica] Update StrategyFactory.php (#730)\n@konformjshttps://github.com/konformjs Thank you for the addition. Did you see the discussion here? #721https://github.com/ruflin/Elastica/issues/721\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/ruflin/Elastica/pull/730#issuecomment-66334465.\n. ",
    "waldemarnt": "really works,sorry man, i dont understand, maybe my tests cause toubles, and blow my mind :D\nHugs! great lib!\n. ",
    "greg0ire": "Thank you, nice bot :)\n. Sure! Does it make sense to also check that only one of the parameters are set? Or would it be a B.C. break?\n. The doc: \n\nWhen both field and script settings are configured for the aggregation, the script will be treated as a value script. \n\nSo no, it does not make sense, apparently :)\n. @ewgRa done!\n. > this way users should have less problem in terms of understanding compatibility\nThis sounds wrong, and will be more and more wrong over time, as more and more libs use semver (it should go from 99.9% to 99.99% very quickly IMO). I think the best way to solve this issue would be to ask user to first install elasticsearch/elasticsearch and carefully read their compatibility matrix, and then ask them to let Composer pick the right elastica version by just typing composer require ruflin/elastica. I think users are far more disgruntled by BC-breaks than by what not pinning might imply. cc @curry684. IMO, if you have a series of libs A \u2192 B \u2192 C, and C is a bindings lib for an external tool \"D\" that follows semver, only C should be affected and synced to D, but A and B should just leverage Composer to do version constraints resolving. Users of A and B should just have to read one compatibility matrix, in C's README, and that's all. If we are in version 6, and 7 comes out, and there is no BC-break in it's API, then C version 7 should come out too, but B should only have a new minor version because of the new methods it exposes. People still using D v6 will be able to benefit from bugfixes after that version is out. People upgrading D from 6 to 7 will know that they need not change any piece of code / read B's changelog if the new version is minor.\nSo to sum up:\n\nissuing a new major when there should not be one is bad because it creates fragmentation in your user base, because people don't notice they need to bump the major number or fear to do it \"right now\"\nnot issuing a new major when there is a BC-break is very, very bad\nsyncing is needed when you have an external tool that composer doesn't know about, but here, syncinc is already there in elasticsearch/elasticsearch. That's bad but necessary. Don't use it in your lib, because that's bad and unnecessary.\n\nUPDATE: changed from numbered items to bullet points to avoid confusion. One point that I forgot to mention: not syncing will mean that you might end up with one version of this library being compatible with several versions of ES. This is desirable because it makes migrations easy: people can choose to upgrade ES and elasticsearch/elasticsearch, and be confident that their application will not break, because they do not use elasticsearch/elasticsearch directly in their app (they do not reference that namespace anywhere in it). Later on, they can upgrade ruflin/elastica, because they want to use features that are specific to the latest version of ES, that weren't exposed before. Ideally, your users should only have to upgrade one thing at a time, not both their infrastructure and their code.. If you think no one can use the removed feature and have something that works in 6.x, then there is no BC-break, so merging is fine, you can release in 6.x. But if you think there are some features that could be used and work, then yeah, merging that would mean you would have to release 7.x IMO (if you want to follow semver).. @ruflin done, let's move the discussion to #1374. I think so too, let me draft something that will explain a new possible workflow in the form of a PR.. See #1467. @ruflin sure, I was a bit overwhelmed lately but now I have the time. Didn't manage to test locally, but Travis seems to be happy with this. @ruflin ok, I changed to desynchronize only minors. That means no changes in the README.. Woops, thought it was 5.3, my bad. Fixed.\n. That implies you will never ever have a new minor in elastica w/o having a minor in elasticsearch first. Also, that means you can't introduce bc breaks willy nilly, and I think it means you do not follow semver (if there an es major implies an elastica major, that's a bit weird, especially if you introduce no BC-break in your API). Is that really what you want? I think following semver would outweight the benefit of knowing the exact dependency.. I'll tried to, and yeah, I built my app that way but phpstan told me I couldn't . No it should not be: this is not the first argument, this is an array of all the arguments, and the first one is a string, not an array.. @ruflin here is how you pass an array, see the difference?. Looks indeed like a case of xkcd workflow\n . ",
    "macnibblet": "I could really use this, any chance it can get merged soon ?\n. ",
    "splitice": "We have hit this exact issue today :(. ",
    "tmatei": "Added tests, can you merge it? \n. Thanks! I noticed unit tests take a very long time to run. Is this normal? \n. @ruflin Any way you can bump the version?\n. @ruflin sorry my bad, I was still on the 1.4.x, didn't notice you moved to 2.x\n. @im-denisenko what section would this go in? \n. Added the changelog. \n. ",
    "XWB": "\nI assume this is done automatically by the cleanup script.\n\nCorrect, though we can tweak the script a bit. The following options are available:\nphp php-cs-fixer.phar fix /path/to/project --level=psr0\nphp php-cs-fixer.phar fix /path/to/project --level=psr1\nphp php-cs-fixer.phar fix /path/to/project --level=psr2\nphp php-cs-fixer.phar fix /path/to/project --level=symfony\nAccording to http://cs.sensiolabs.org/, the level symfony includes:\n* concat_without_spaces [symfony] Concatenation should be used\nwithout spaces.\n* empty_return [symfony] A return statement wishing\nto return nothing should be simply \"return\".\nThe Symfony fixer is not be required for ruflin/elastica so we could ignore it in future clean-ups. \n. @ruflin I didn't expect you to merge this PR so quickly :P\nIf you want, you could revert the commit (or remove it and force update the master branch) and I can send a new PR without the Symfony code standard (see comment above).\n. Travis passes, not sure why codecov/project fails.\n. @ruflin :+1: I restored the PHP 5.3 entry.\n. @ruflin Any ETA on the next release? It would be nice to have a release containing https://github.com/ruflin/Elastica/commit/3e029374bbb052c45b24accc75f3941b5a4935dc . > Put it on my TODO list.\nExcellent :). Yes, already installed :) Thanks!. @ruflin \nAll FOSElasticaBundle resetter tests fail after upgrading Elastica to 5.2, any idea where I should start looking?. @ruflin \n1) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetAllIndexes\nExpectation failed for method name is equal to  when invoked 2 time(s).\nMethod was expected to be called 2 times, actually called 0 times.\n2) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetIndex\nExpectation failed for method name is equal to  when invoked 2 time(s).\nMethod was expected to be called 2 times, actually called 0 times.\n3) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetIndexWithDifferentName\nExpectation failed for method name is equal to  when invoked 2 time(s).\nMethod was expected to be called 2 times, actually called 0 times.\n4) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetIndexWithDifferentNameAndAlias\nExpectation failed for method name is equal to  when invoked 2 time(s).\nMethod was expected to be called 2 times, actually called 0 times.\n5) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetType\nExpectation failed for method name is equal to  when invoked 3 time(s).\nMethod was expected to be called 3 times, actually called 0 times.\n6) FOS\\ElasticaBundle\\Tests\\Index\\ResetterTest::testResetTypeWithChangedSettings\nExpectation failed for method name is equal to  when invoked 3 time(s).\nMethod was expected to be called 3 times, actually called 0 times.. I think so, but I have no clue where to start looking.. Found it, thanks :)\nhttps://github.com/FriendsOfSymfony/FOSElasticaBundle/commit/f434157b69cd93d3d94edef6ab9a073ee295d031. @z38 Everyone using Elastica could face this issue, not just FOSElasticaBundle.. https://github.com/ruflin/Elastica/pull/1264. @Tobion Will do.. @ruflin @Tobion Done.. @ruflin Done.. @Tobion Changes are underway.. And done.. @Tobion I simplified the test.. Hi @ruflin \nWould it be possible to cherry-pick this commit to the 5.x branch?. @ruflin Done https://github.com/ruflin/Elastica/pull/1428. Hi @ruflin ,\nAny timeline for a 5.3.1 release? We want to upgrade to PHP 7.2, a new release would be nice to have :). @ruflin We are not planning to migrate to ES 6 anytime soon, so it would be nice to have one more 5.3.x release with PHP 7.2 support.. Sure: https://github.com/ruflin/Elastica/pull/1440. @ruflin Looks like Travis cannot run due to the following error:\n\nThe command \"sudo apt-get -o Dpkg::Options::=\"--force-confnew\" install -y docker-ce=17.03.1~ce-0~ubuntu-trusty\" failed and exited with 100 during .\n\nAny clue?. @ruflin All green.. Perfect timing as we need sum_bucket as well.\n@ruflin Please consider this PR before releasing 5.3.1 :). https://github.com/ruflin/Elastica/pull/1447. ",
    "happydude": "Yes that does, thank you for the advice.\n. ",
    "CriztianiX": "@ruflin Thanks!!!...\nWould be helpful , for the moment I am the only active developer\n. ",
    "Nikerabbit": "FWIW, we have just forced uses to upgrade by dropping support for old version.\n. ",
    "bakura10": "Definitely better, thanks!\n. Sure, I've made a proper PR in #769 \n. Done :)\n. Thanks a lot!\n. I just tried and I can confirm that $this work as well :). I like static because it is coherent with how late-state binding works, but I'm open to change that to $this. Let's let @ruflin decide :D.\n. I'm pretty sure NetBeans take advantage of that!\n. I've updated to modify static to $this!\n. Actually the problem seems to be far deeper (and honestly annoys me as I'm using script extensively). Actually the script_id suffers from the same restrictions and as I undersood it, the only way to use it is:\nEither enable again scripting (but you are still vulnerable to the security issue)\nOr you need to upload scripts in the node\nIn both cases, this is simply not possible when you use hosted elasticsearch :(. This means that for now, people using script must actually stay on 1.4.2 if they use dynamic script.\nOr at least that's how I undersood it. \n. I asked compose (my hoster) and they confirmed me that for now they won't disable it (a lot of their customers rely on this, it would break apps very badly).\nWhich language is sandbox actually? I'm using expression scripts quite a lot but those cannot be used on things like update queries and are pretty limited :(\n. Never mind, it seems to be my mistake.\nSome query params were encoded strangely, and hence mess up with the query.\n. ",
    "d-claassen": "Any progress on using the script_id of a script stored in the /_script index?\n. Hi @ruflin, any chance for a 5.3.2 release including this fix? We just upgraded to PHP7.2 and our error log has exploded due to this. A new release would be really nice to have!. I missed the 5.x branch. We'll configure composer to depend on that until we upgrade to v6, thanks for all your work!. ",
    "ukautz": "Thanks for merging! Will do since I'm forced to using scripted metrics until ES 2.0.\n. ",
    "gcleaves": "Here is how I create the client.  It works on my dev laptop.\nreturn new Client(array(\n        'host' => 'acb.def.com',\n        'transport' => 'http',\n        'headers' => $authHeader,\n        'port' => 80\n    ));\n. I've capitalised Http \nreturn new Client(array(\n    'host' => 'abc.def.com',\n    'transport' => 'Http',\n    'headers' => $authHeader,\n    'port' => 80\n));\nand the problem has gone away.  Many thanks!\n. ",
    "topikito": "http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#_reserved_characters\n. All green :) I've described in more detail the isse on issue #794 \n. Awesome @ruflin - Testing-wise: right now all tests are using int for this purpose. How do you wanna attack this new approach? Dividing two test per method as one for int and one for string? I'm happy to do a PR (I've already modified the type hinting, but need to confirm how the tests should be)\n. Hi @ruflin,\nI tried contacting you outside GitHub but no luck (Twitter).\nI'm experiencing this issue when running the tests:\n```\n\u2601  Elastica [fix-minimum-match-type-hinting|MERGING] \u26a1 make run RUN=\"make phpunit\"\ndocker run -v /path/to/repo/Elastica:/elastica ruflin/elastica make phpunit\nWaiting on elasticsearch(elasticsearch:9200) to start...............................\nElasticsearch is not running or is not healthy.\nAddress: elasticsearch:9200\nmake: *** [run] Error 1\n```\nAny idea?\n. Thanks @ruflin : this worked make tests\nI was following the CONTRIBUTION file. With this \"test\", if no errors are raised, shall I assume its ok for me to PR ?\n. @ruflin Sure, will do\n. @ruflin Done\n. Seems like Travis is now willing to test the changelog \n. Sure - I just considered as a bug because the expected behaviour was not meeting the functional one.\n. ",
    "Defgenx": "So here is my code, the error comes when I tried this\n$queryString = new \\Elastica\\Query\\Match();\n$queryString->setField('EVENEMENT_NOM', Util::escapeTerm($search));\n$queryString->setFieldBoost('EVENEMENT_NOM', 103.0);\nI saw that you used setFieldQuery() method in your tests. Reading the class, the error showed from my symfony stack trace is obvious. I redo one with this method and it works fine for me too. So, what is the use of the setField() method ? It leads me to a bad usage of the Match() class. Is it really useful ?\nAnyway, thank you for your help ruflin. Now it works like a charm. Sorry for this issue that is not a real one.\n. @ruflin I know that aggregations are still new in ES and that's not easy to choose the correct way to do it if it changes. I made a little helper for my company but that's not something that can be pushed in the lib as it is. I don't have so much free time but I'll try to do something :).\n. Yes, the real problem is the nested aggregations, not the array itself.\nThe ResultSet object does not have to contain the aggregations (and nested ones) as objects. The goal is to get an aggregation object on demand.\nIn my case, for performances and processing purposes, I created a Symfony service that allow me to give first level aggregation(s) and get every \"level + 1\" aggregations and its direct parent. It automatically detects the aggregation type and store data as I want. If we need \"level + 2\" aggregations, simply give the \"level + 1\" aggregation as input.\nI agree that it's basically the same but for instance, the top_hit aggregation is returned as array in aggregations and it's really useful to have every document as Result object. Moreover it's cleaner than getting values by index thought.\nThanks for sharing your solution with us :D.\n. Sorry if my explanations were unclear. This example is not a service (because of the construct and all), I rewritten it for the occasion - not tested. As you can see, the approach is very close to your solution.\n``` php\n/*\n * Construct\n /\npublic function __construct(array $aggregation, array $options = array())\n{\n    if (isset($options['aggrName'])) {\n        $this->setAggregation($aggregation, $options['aggrName']);\n    }\n    else {\n        $this->setAggregations($aggregation);\n    }\n}\n/*\n * @param $aggregation\n /\nprivate function setAggregation(array $aggregation, $aggrName)\n{\n     // First, we try to test if the search aggregation is a nested one.\n    // (we should add a method to check the validity of the aggregation name).\n    // If it's the case we have to switch into this aggregation\n    if (isset($aggregation[$aggrName])) {\n        $aggregation = $aggregation[$aggrName];\n    }\n$this->sum_other_doc_count[$aggrName] = (isset($aggregation[self::AGGREGATION_RESULT_KEY_SUM_DOC])) ? $aggregation[self::AGGREGATION_RESULT_KEY_SUM_DOC] : 0;\n\nif (isset($aggregation[self::AGGREGATION_RESULT_KEY_BUCKETS])) {\n    foreach ($aggregation[self::AGGREGATION_RESULT_KEY_BUCKETS] as $key => $aggrResult) {\n        $this->key[$aggrName][] = $aggrResult[self::AGGREGATION_RESULT_KEY];\n        $this->doc_count[$aggrName][] = $aggrResult[self::AGGREGATION_RESULT_KEY_DOC_COUNT];\n\n        // We have prefixed everything with the main aggregation value\n        foreach ($aggrResult as $subKey => $subAggrResult) {\n            // Simple value aggregation\n            if (is_array($subAggrResult) && !isset($subAggrResult[self::AGGREGATION_RESULT_KEY_HITS])) {\n                $this->subAggregation[$aggrName][$subKey][$aggrResult[self::AGGREGATION_RESULT_KEY]] = $subAggrResult[self::AGGREGATION_RESULT_KEY_VALUE];\n            }\n            // Top hit aggregation type\n            elseif (is_array($subAggrResult) && isset($subAggrResult[self::AGGREGATION_RESULT_KEY_HITS])) {\n                if (!$subAggrResult instanceof Result) {\n                    foreach($subAggrResult[self::AGGREGATION_RESULT_KEY_HITS][self::AGGREGATION_RESULT_KEY_HITS] as $eltSubAggr)\n                        $this->subAggregation[$aggrName][$subKey][$aggrResult[self::AGGREGATION_RESULT_KEY]][] = new Result($eltSubAggr);\n                 }\n             }\n         }\n     }\n    $this->aggregation[$aggrName] = $aggregation[self::AGGREGATION_RESULT_KEY_BUCKETS];\n}\nelse {\n    $this->aggregation[$aggrName] = $aggregation;\n}\n\n}\n/*\n * @param $aggregations\n /\nprivate function setAggregations(array $aggregations)\n{\n    foreach($aggregations as $aggregationName => $aggregation) {\n        $this->setAggregation($aggregation, $aggregationName);\n    }\n}\n```\n. ",
    "joshuataylor": "Inner hits are awesome, as they allow you to query a docset and get back the relevant children easily.\nMay not be the best example, but an example would be...\nLet's say I have a simple document called 'product', with nested documents called 'variations', which might have fields such as 'size', 'color', 'price', etc, you could use inner_hits to get just certain color/sizes. It's excellent.\n. @ruflin I will have a look over the weekend, as this is a killer feature for me personally and would love for this to be in (due to time restraints we resorted to nasty arrays :-1: ), so to help contribute back I'll look into it.\n. use:\nnew StdClass()\n:)\n. ",
    "jcrombez": "Thanks a lot for your help.\n. ",
    "ebuildy": "Hmm travis job seems failed because ES server:\nindex: /elastica_elasticatestaggregationtophitstest55379e02755ad/questions/1 caused UnavailableShardsException[[elastica_elasticatestaggregationtophitstest55379e02755ad][0] Primary shard is not active or isn't assigned to a known node. Timeout: [1m], request: org.elasticsearch.action.bulk.BulkShardRequest@7fe9d315]\nMaybe a disk space issue.\n. Doh' You are rights, totally forgot about support old Php.\nI have just fixed it. Thanks you,\n. Yeaaahhh!\n. ",
    "pborreli": "you should put a CONTRIBUTING.md file to explain that kind of strange things :wink: \n. https://github.com/blog/1184-contributing-guidelines\n. @ruflin personally, I like when i can find tests and docs in vendor lib, it helps me when I'm working with no internet connection. I already saw that tests are excluded in elastica, and docs are in separate repository. when I was looking for example of code I saw that ansible folder was here and probably  useless so I made this PR.\nI don't have a global vision on this, but if you think we should exclude this ansible folder, let's merge this PR\n. ",
    "hasumedic": "After few stabs at the problem (#828), I think I came to the conclusion that what's actually happening is that the library is missing the implementation of Scroll all together. Scroll and Scan-Scroll are different things, with different behaviours, meanings and results. \n. Hey @webdevsHub, no worries. I was planning to work on this tomorrow and Friday, but if you're on it already I'll be working on other PRs then :)\n. I would consider this change a minor BC break. So according to strict semver, this should go into 2.0.x. But some projects (like Doctrine2) also accept these kind of BC breaks into their minor versions, so it could go into 1.5.x.\nWhat's the next tag you're thinking on doing from master? 1.4.4 or 1.5.0? Depending on that I can adapt this PR to be BC (or not).\n. Oh good! So lets break things! :)\nI can keep this branch to get it merged into maintenance branches (potentially 1.4.4?).\nI'll do another one with the non-BC changes for 2.0.0.\n. Actually, I misunderstood what the purpose of the class ScanAndScroll is. It implements exactly what it's described in this section of the documentation:\nhttp://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html#scroll-scan\nWhat I think the library is missing is the implementation of the class Scroll. This class would work very similarly to how the ScanAndScroll class works, but with a couple of subtle differences:\n- It does not specify a type_search to the Search, so it respects sorting and scoring\n- The \"size\" parameter is not based on per a shard basis, but on a result's total basis\n- The first request to scroll already contains the first subset of results\nI reckon that this PR can be rejected and that I should work on the Scroll implementation instead. Thoughts?\n. Looking good to me @webdevsHub!\n. @webdevsHub just a quickie. \nHow would this API work in a cross-request scenario? ie. First request loads the data and returns the scrollId by means of Scroll::key(). Second request sends the scrollId to fetch the next bulk of data. How would this scrollId be set into the Scroll object to query ES for the next set of results?\n. @ruflin that's OK. We'll figure it out then :) Thanks for letting me know!\n. Thanks for replying @webdevsHub ! I guess that that's precisely what my question was.\nThis works fine in an iterable scenario, but it prevents others such as multiple requests to work.\nWhat I was asking in my previous comment was in terms of web requests. So you make a first web request to process a first batch of (lets say) 1000 elements. This generates the scrollId and the first 1000 results. With this you generate a response.\nNow you want to manually trigger the process for the next 1000 elements, so you make a new web request. In order to continue processing from the element 1001 to the 2000, you need the scrollId to be passed into the Scroll object and run Scroll:next(), but I don't see how this can work at the moment. \nDoes this make any sense?\n. I'll give it a go. Thanks!\n. Should this be a VO instead?\n. I was wondering if we should be using Value Objects for these pieces of config. But I haven't seen them implemented anywhere else in the library, so I would assume that arrays are the conventions in this case. Isn't that the case @ruflin?\n. Thanks for the quick review @ruflin! The annotated data providers need to be public so they can be called using reflection by PHPUnit.\nhttps://phpunit.de/manual/4.6/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers\n. That being the case, this PR looks good and should go forward! :+1: \n. ",
    "virtuman": "haven't implemented it, just looked at the code as an example.\n. ",
    "xwei3752": "@virtuman its my fault,it should be init before loop.thx\n@webdevsHub thanks for your suggestion,modified\n#831\n. ",
    "ddeboer": "@im-denisenko You\u2019d better contact @sagikazarmark, as he\u2019s the most active developer on php-http right now.\n. ",
    "sagikazarmark": "There is no ETA for stable ATM, but 0.1 is already out. I think that preview release shows a stable state. Although I am the active developer, @egeloen is some kind of project lead, so I need his blessing to tag 1.0. (But I would like to do it soon)\nThe curl adapter wasn't top priority, we currently have two guzzle implementations (5, 6), but I am moving it up in the list since there is need for it (See the complete list: php-http/adapter#32)\nWhy is the curl adapter relevant anyway? You can just use any, can't you?\n. @ruflin Since it is adapter, it can be exchanged, can't it be?\nWith the new separation it is possible to require only a virtual implementation (php-http/adapter-implementation) and a discover (php-http/discovery). This allows to require any implementation (not forced which) and you can easily discover the installed one using the HttpAdapterDiscovery if it is not configured.\nWhile cURL is good, because you only need the extension installed (which is required by most clients anyway), I think it is even better not relying on any implementation by default. This will be documented, the linked http cache PR is a good example.\n. I agree, at least until the adapter is stable.\n. @im-denisenko Yup. AFAIK @egeloen plans an LTS release (closing a few issues if possible, etc), but after phly/http became abandoned I am not sure that will be possible.\n. ",
    "joelwurtz": "Hey, just to inform you that php-http (ivory http adapter replacement) is now in a stable release and process.\nDo you want me to give a shot about making a PR about that (like just adding a Handler for the moment, and have the big refactor around PSR7 for later ?)\n. Didn't see this PR thanks,\nI think i can make a PR that would allow the official client but also allowing to profit some of the php-http packages without doing BC to the actual client. \nWDYT @ruflin should i give a try or have you something else in mind ?\n. Will try to do a PR /on elasticsearch-php in the first time then :), after we can update  / replace  #989 \n. Work begin here https://github.com/elastic/elasticsearch-php/pull/383\n. There is some updates about this, as with recents changes from @polyfractal the transport layer is better decoupled from endpoint in elasticsearch-php.\nAs this was done i was able to figure out a way to integrate PSR7 into elasticsearch-php, by using HTTPlug, without breaking the end user api on the endpoint : https://github.com/elastic/elasticsearch-php/pull/455\nIf this change is accepted, then i think there is minor things to do in order to have a common factory class for creating a client compatible for both librairies. (so the setup would be the same for elasticsearch-php and Elastica, and the user would just have to choose to consume an elasticsearch service, by using the low level api from elasticsearch-php, or the OO API from Elastica). To be short, both library would depend on the HTTPlug contract for sending requests.\n. ",
    "polyfractal": "I have an issue open at the ES-PHP repo to make the client PSR7 compliant (https://github.com/elastic/elasticsearch-php/issues/291).  If/when PSR7 compliance is required for the #989 integration, we can expedite the process of adding it to the official client. :)\n. Urgh.  Json encoding is the bane of my existence in PHP.  This issue came up at es-php recently too:  https://github.com/elastic/elasticsearch-php/pull/334\n:'(\nI'm not really sure the best way forward.  As mentioned here, JSON_BIGINT_AS_STRING is not supported uniformly across versions and platforms.  There are native-PHP solutions but they look very fragile (lots of regex) and probably slow.  I don't like checking if the option is supported vs. not, since the client will behave inconsistently depending on your platform.\nPersonally, this feels like something that should be handled outside the library, either by the user dealing with BigInts ahead of time (since ES doesn't support BigInts either), or by subclassing the Serializer and providing one that is BigInt-aware (because you know you have BigInt support).  \nThat said, I could add a BigIntSerializer, or ability to specify custom json_encode() options.   Then the user (and/or Elastica) can select for themselves?\nOpen to suggestions :)\nEDIT:  Realized this is for json_decode, not encode.  Meaning you dont have a chance to escape yourself.  Sigh.  Will think about the best of the options :(\n. Regarding versions, ES-PHP 2.0 is explicitly PHP 5.4+, so that will be fine.  I'm trying to move people off ES-PHP 1.x as soon as possible :)\nI'll mull over the options and work something out.  I agree this is a less than ideal situation for the end-user, who doesn't really care about how numbers are encoded at all.  \nAnd I agree this should probably be handled at the ES-PHP level, not Elastica :)\n. \n. Hey all :)\nSorry for the delay on the 6.0 release, ran into a few unexpected problems (both in ES-PHP and upstream in core).  I'm hoping to have the tests passing again today or tomorrow, followed quickly by a release so you all can start working on a tagged release instead of dev-master.\nI don't expect any of it to impact Elastica, the changes have been mostly test cleanup and getting Travis to play nicely.  I merged some 6.0 specific commits about a month ago, but iirc they were all API additions, nothing that should break bwc.\nI'll ping you all once I cut a 6.0 branch and tag a release!. Just FYI, I cut a 6.0 branch and tagged v6.0.0-beta1 (https://github.com/elastic/elasticsearch-php/tree/v6.0.0-beta1) if you want to use that.  I don't really expect anything to change before v6.0.0, but figured a beta would be a good idea in case you turn up anything broken during the integration and before Elasticsearch 6.0 is GA. :)\nAt some point I have plans to default ES-PHP dev-master to track Elasticsearch master (aka 7.0 at this point), but need to make some changes to the travis config first... don't see that happening for awhile to be honest :)\n. ",
    "3m0": "Sure, but do you mind if I ommit the server IP address?\n. OK, here: http://codepen.io/anon/pen/BNQzNj\n. Nope, even specifying the dataType wasn't enough. The browser still throws a parsing error. As you asked, I'm sending my mappings and a search result containing the documents. Basically it looks like PHP's json_encode is generating an javascript incompatible JSON object by replacing line breaks with \\n instead of \\n. Maybe add_slashes after encoding could work? Well, here ara my mappings:\n{\n  \"store\" : {\n    \"mappings\" : {\n      \"1_31\" : {\n        \"_all\" : {\n          \"enabled\" : true,\n          \"analyzer\" : \"pt_analyzer\"\n        },\n        \"properties\" : {\n          \"accid\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"appid\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"authors\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"big_images\" : {\n            \"type\" : \"string\"\n          },\n          \"code\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"description\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"discountpercentage\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"discountpercentagebillet\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"discountvalue\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"discountvaluebillet\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"fileurl\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"gift\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"giftAmount\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"giftValue\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"id\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"isbn\" : {\n            \"type\" : \"string\"\n          },\n          \"keywords\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"level\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"mid_images\" : {\n            \"type\" : \"string\"\n          },\n          \"name\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"page\" : {\n            \"type\" : \"string\"\n          },\n          \"postdate\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"price\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"priceField\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"programmingstock\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"promotional\" : {\n            \"type\" : \"string\"\n          },\n          \"provider\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"quantity\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"sales\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"search\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"size\" : {\n            \"type\" : \"string\"\n          },\n          \"small_images\" : {\n            \"type\" : \"string\"\n          },\n          \"status\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"stock\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"tags\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"thumburl\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"type\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"user\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"value\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          },\n          \"weight\" : {\n            \"type\" : \"string\",\n            \"analyzer\" : \"pt_analyzer\",\n            \"include_in_all\" : true\n          }\n        }\n      }\n    }\n  }\n}\nAnd here's the search result (with ?pretty to maike easier to read):\n{\n  \"took\" : 6,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 58,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"63544\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":63544,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"MULHERES NA BIBLIA No Novo Testamento vol 3- Devocional\",\"description\":\"Este livro far\u00e1 voc\u00ea mergulhar no tempo da igreja crist\u00e3 primitiva e analisar o pensamento e as a\u00e7\u00f5es de mulheres da \u00e9poca. S\u00e3o hist\u00f3rias emocionantes que v\u00e3o mexer com voc\u00ea.\\r\\nAlgumas das personagens conheceram Jesus de perto enquanto Ele esteve aqui na terra. Suas experi\u00eancias como pessoas que o reconheceram como o Messias e presenciaram maravilhas faz delas mulheres muito privilegiadas.\\r\\nEssas mulheres, por\u00e9m, j\u00e1 se foram. O relato sobre elas \u00e9 o que permanece, para que possamos aprender li\u00e7\u00f5es. Hoje, somos n\u00f3s que fazemos hist\u00f3ria. N\u00f3s somos as mulheres que podem ser transformadas por Deus. Ele tem poder para restaurar vidas ainda hoje. Inspire-se nas hist\u00f3rias antigas dentro deste livro e deixe que Deus fale com voc\u00ea.\",\"fileurl\":\"//z3.vethia.com.br/uploads/mulheres-na-biblia-no-novo-testamento-vol-3-devocional-63544-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/mulheres-na-biblia-no-novo-testamento-vol-3-devocional-63544-1-g.jpg\",\"price\":12.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":20,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"\",\"page\":\"134\",\"size\":\"14.0x21.0\",\"promotional\":\"N\",\"small_images\":\"//z3.vethia.com.br/uploads/mulheres-na-biblia-no-novo-testamento-vol-3-devocional-63544-1-p.jpg,\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"58526\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":58526,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"NOVO TESTAMENTO SOLO Marrom\",\"description\":\"A Mensagem: Solo - Novo Testamento\\r\\nUm Devocional que foi projetado para ensin\u00e1-lo a estudar a B\u00edblia e a desenvolver uma conversa \u00edntima entre voc\u00ea e Deus.\\r\\nEste livro apresenta devocionais baseados no cl\u00e1ssico m\u00e9todo lectio divina: ler, pensar, orar e viver as Escrituras com a inten\u00e7\u00e3o de convidar o Deus infinito e onisciente a fazer morada em sua vida. A Mensagem: Solo - Novo Testamento nos ensina a viver a B\u00edblia, n\u00e3o somente estud\u00e1-la, nos instrui a absorver e meditar nas Escrituras, a conversar com Deus abertamente e a viver o que j\u00e1 se tornou parte de n\u00f3s - Sua Palavra.\\r\\nVoc\u00ea aprender\u00e1 a silenciar sua voz e as vozes da responsabilidade, do ego, da fam\u00edlia e at\u00e9 mesmo da religi\u00e3o, a fim de ouvir o que Deus tem a dizer.\",\"fileurl\":\"//z3.vethia.com.br/uploads/novo-testamento-solo-marrom-58526-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/novo-testamento-solo-marrom-58526-1-g.jpg\",\"price\":19.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":20,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"\",\"page\":\"300\",\"size\":\"0.0x0.0\",\"promotional\":\"N\",\"small_images\":\"//z3.vethia.com.br/uploads/novo-testamento-solo-marrom-58526-1-p.jpg,\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"57302\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":57302,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"LUCY DETESTA COR DE ROSA\",\"description\":\"Toda menina gosta de cor-de-rosa... Blusa rosa, batom rosa, esmalte rosa, bolsa rosa. Mas Lucy n\u00e3o. Ela n\u00e3o \u00e9 uma garota comum, que gosta do que todo mundo gosta, que faz o que todo mundo faz. \\r\\n\\r\\nCrescer sem a m\u00e3e e com a responsabilidade de cuidar da casa e do pai \u00e9 muito dif\u00edcil para uma menina, mas Lucy sabe que pode contar com a ajuda de Deus pra passar por cima dos problemas e ter uma vida normal. E ser feliz!\\r\\n\\r\\nLucy \u00e9 diferente, sua vida \u00e9 diferente... Mas \u00e9 uma garota como voc\u00ea, tamb\u00e9m tem sonhos, medos, conflitos e segredos. \\r\\n\\r\\nDescubra com ela que ser diferente n\u00e3o \u00e9 t\u00e3o ruim assim!\",\"fileurl\":\"//z3.vethia.com.br/uploads/lucy-detesta-cor-de-rosa-57302-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/lucy-detesta-cor-de-rosa-57302-1-g.jpg\",\"price\":29.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":20,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"\",\"page\":\"304\",\"size\":\"14.0x21.0\",\"promotional\":\"N\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"56974\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":56974,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"TEOLOGIA BIBLICA Antigo e Novo Testamentos\",\"description\":\"O prop\u00f3sito deste livro \u00e9 nada menos que providneicar um descortinar da mente de Deus na Hist\u00f3ria por meio dos sucessivos agentes da sua Revela\u00e7\u00e3o Especial. Geerhardus Vos organizou o assunto em tr\u00eas divis\u00f5es principais: o per\u00edodo mosaico da Revela\u00e7\u00e3o, o per\u00edodo prof\u00e9tico da Revela\u00e7\u00e3o e o Novo Testamento.\\r\\nEstudar a Teologia Biblica de Vos ser\u00e1 apreciar a obra de quem John Murray definiu comno o mais primoroso exegeta do s\u00e9culo 20.\",\"fileurl\":\"//z3.vethia.com.br/uploads/teologia-biblica-antigo-e-novo-testamentos-56974-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/teologia-biblica-antigo-e-novo-testamentos-56974-1-g.jpg\",\"price\":79,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"9788576223115\",\"page\":\"496\",\"size\":\"16.0x23.0\",\"promotional\":\"S\",\"small_images\":\"//z3.vethia.com.br/uploads/teologia-biblica-antigo-e-novo-testamentos-56974-1-p.jpg,\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"51638\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":51638,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"TEOLOGIA DO NOVO TESTAMENTO H Marshall\",\"description\":\"H\u00e1 muito que o p\u00fablico evang\u00e9lico espera por uma teologia do NT como esta. Ao longo desta obra I. Howard Marshall traz profundas reflex\u00f5es, fruto de muitos anos de estudo, pesquisa e ensino na \u00e1rea do Novo Testamento.\\r\\n\\r\\nPor isso mesmo, n\u00e3o \u00e9 uma teologia que sucumbe \u00e0 tend\u00eancia de enxergar no Novo Testamento uma diversidade que seja irreconcili\u00e1vel. Pelo contr\u00e1rio, o autor defende a exist\u00eancia de uma teologia neotestament\u00e1ria formada a partir dos diversos testemunhos que encontramos nos livros do NT. E dessa forma, a partir da an\u00e1lise individual dos documentos que comp\u00f5em o NT, vai passo a passo construindo uma s\u00edntese dessa teologia, provando assim sua tese: diversos testemunhos, um s\u00f3 Evangelho.\\r\\n\\r\\n\\r\\n\\\"Edi\u00e7\u00f5es Vida Nova est\u00e1, mais uma vez, de parab\u00e9ns por oferecer ao estudioso do NT uma obra de primeira qualidade\\\". Estevan F. Kirschner (Ph.D. em Novo Testamento pelo London Bible College, Inglaterra e professor da \u00e1rea b\u00edblica).\",\"fileurl\":\"//z3.vethia.com.br/uploads/teologia-do-novo-testamento-h-marshall-51638-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/teologia-do-novo-testamento-h-marshall-51638-1-g.jpg\",\"price\":89.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"9788527503792\",\"page\":\"654\",\"size\":\"16.0x23.0\",\"promotional\":\"S\",\"small_images\":\"//z3.vethia.com.br/uploads/teologia-do-novo-testamento-h-marshall-51638-1-p.jpg,\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"12717\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":12717,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"TEOLOGIA DO ANTIGO TESTAMENTO\",\"description\":\"De fato, os te\u00f3logos de perfil reformado certamente receber\u00e3o com entusiasmo a obra Eichrodt, o mais sistem\u00e1tico de todos os te\u00f3logos b\u00edblicos do Antigo Testamento. Al\u00e9m disso, o grande m\u00e9rito da pena de Eichrodt foi elaborar uma teologia b\u00edblica complexa, exaustiva, unificada e capaz de di\u00e1logo com a Teologia Sistem\u00e1tica. Esta \u00e9 uma obra simplesmente imperd\u00edvel. Com certeza\\r\\nser\u00e1 muito \u00fatil na constru\u00e7\u00e3o do pensamento teol\u00f3gico b\u00edblico brasileiro.\",\"fileurl\":\"//z3.vethia.com.br/uploads/teologia-do-antigo-testamento-12717-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/teologia-do-antigo-testamento-12717-1-g.jpg\",\"price\":133.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":1,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"85-89320-52-9\",\"page\":\"966\",\"size\":\"16.0x23.0\",\"promotional\":\"S\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"12628\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":12628,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"CURSO BASICO VOL 2 PANORAMA DO ANTIGO TESTAMENTO\",\"description\":\"Voltado para leigos,\u00e9 um curso perfeito para aqueles que desejam conhecer um pouco de teologia numa linguagem informal, instrumental e n\u00e3o acad\u00eamica. O material \u00e9 altamente did\u00e1tico, informativo e de f\u00e1cil assimila\u00e7\u00e3o. Este volume fornece respostas a perguntas intrigantes como estas: Por que estudar o Antigo Testamento? O Antigo Testamento \u00e9 realmente menos importante que o Novo? O que Jesus pensava do Antigo Testamento? Qual e a sequ\u00eancia correta  dos livros do Antigo Testamento? Que import\u00e2ncia isso tem para o estudo e a compreens\u00e3o do AT?\",\"fileurl\":\"//z3.vethia.com.br/uploads/curso-basico-vol-2-panorama-do-antigo-testamento-12628-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/curso-basico-vol-2-panorama-do-antigo-testamento-12628-1-g.jpg\",\"price\":49.9,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"\",\"page\":\"280\",\"size\":\"14.0x21.0\",\"promotional\":\"S\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"11409\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":11409,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"FORMA E EXIGENCIAS DO NOVO TESTAMENTO\",\"description\":\"Este livro foi planejado pelos doutores e exegetas Josef e Gerhard do Antigo e Novo Testamento respectivamente, com base na hist\u00f3ria da tradi\u00e7\u00e3o e, orientados por ela, investigam a forma liter\u00e1ria mostrando os g\u00eaneros e a linguagem, se dedicando \u00e0 situa\u00e7\u00e3o existencial. Em se tratando dos livros do Novo Testamento \u00e9 necess\u00e1rio explicar a forma\u00e7\u00e3o e a natureza, as for\u00e7as modeladoras e os elementos determinantes, as afirma\u00e7\u00f5es e as inst\u00e2ncias, a finalidade e as exig\u00eancias. O livro \u00e9 apresentado em quatro grandes se\u00e7\u00f5es: a primeira tenta apresentar a teologia paulina em sua liga\u00e7\u00e3o com o crist\u00e3o primitivo, a segunda se ocupa com o exame dos evangelhos, a terceira compreende tratados monogr\u00e1ficos da restante literatura epistolar neotestament\u00e1ria, a quarta se ocupa especialmente com a escatologia e a apocal\u00edptica. Um livro recomendado para todos aqueles que pretendem aprofundar-se no mundo de f\u00e9 dos livros sagrados do Novo Testamento.\",\"fileurl\":\"//z3.vethia.com.br/uploads/forma-e-exigencias-do-novo-testamento-11409-1-g.jpg\",\"thumburl\":\"//z3.vethia.com.br/uploads/forma-e-exigencias-do-novo-testamento-11409-1-g.jpg\",\"price\":67.5,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":1,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"9788577420193\",\"page\":\"536\",\"size\":\"16.5x23.5\",\"promotional\":\"S\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"8422\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":8422,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"INTRODUCAO AO ESTUDO DO NOVO TESTAMENTO\",\"description\":\"Neste livro o autor apresenta um excelente compendio de introdu\u00e7\u00e3o do Novo Testamento. Certamente, ser\u00e1 de grande valia para pastores, l\u00edderes, professores de Escola Dominical e para qualquer pessoa que deseje aprofundar seus conhecimentos no Novo Testamento. Nele voc\u00ea encontrar\u00e1 uma fonte significativa de recursos e atestar\u00e1 sua import\u00e2ncia e erudi\u00e7\u00e3o, comprovando\\r\\nseu valor como obra de pesquisa s\u00e9ria e bem elaborada, feita com base no mais novo material para a investiga\u00e7\u00e3o e estudo do Novo Testamento.\",\"fileurl\":null,\"thumburl\":null,\"price\":41.5,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":35,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"85-88234-24-6\",\"page\":\"492\",\"size\":\"14.0x21.0\",\"promotional\":\"S\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    }, {\n      \"_index\" : \"store\",\n      \"_type\" : \"1_31\",\n      \"_id\" : \"8066\",\n      \"_score\" : 1.0,\n      \"_source\":{\"id\":8066,\"accid\":1,\"appid\":31,\"code\":null,\"level\":0,\"sales\":0,\"name\":\"NARRATIVAS 4 8a12anos PROFESSOR Novo Testamento Parte 2\",\"description\":\"Narrativas B\u00edblicas para Crian\u00e7as - Novo Testamento em Ordem Cronol\u00f3gica - Revista 4 - Cinza  - Semana da Paix\u00e3o at\u00e9 Paulo, um Prisioneiro em Roma. \\r\\nAs p\u00e1ginas iniciais trazem orienta\u00e7\u00f5es gerais para os professores, al\u00e9m de um plano de aula completo e sugest\u00f5es para melhor aproveitamento do tempo dispon\u00edvel. A Revista do Professor traz tamb\u00e9m instru\u00e7\u00f5es de como utilizar o material, como fazer aplica\u00e7\u00f5es e a import\u00e2ncia do uso de Recursos Visuais. Na seq\u00fc\u00eancia v\u00eam as 13 li\u00e7\u00f5es. Cada li\u00e7\u00e3o traz o texto b\u00edblico base, os objetivos, a apresenta\u00e7\u00e3o, as aplica\u00e7\u00f5es, o vers\u00edculo para decorar, sugest\u00f5es de m\u00fasicas, atividade escrita, atividade manual, jogos-atividade, atividades de recrea\u00e7\u00e3o, perguntas para verifica\u00e7\u00e3o da aprendizagem e um espa\u00e7o em branco para as suas id\u00e9ias.\\r\\nA Revista 4 - Cinza - traz a segunda parte do Novo Testamento e conta as seguintes hist\u00f3rias: \\r\\n1- Jesus: a Entrada Triunfal em Jerusal\u00e9m \\r\\n2- Jesus: a Ceia \\r\\n3- Jesus: Orando e Preso no Gets\u00eamani, e Julgamento \\r\\n4- Jesus: Sua Crucifica\u00e7\u00e3o \\r\\n5- Jesus: Sua Ressurrei\u00e7\u00e3o \\r\\n6- Jesus: Sua Ascens\u00e3o e a Vinda do esp\u00edrito Santo \\r\\n7- A Igreja em Jerusal\u00e9m \\r\\n8- O Crescimento da Igreja \\r\\n9- A Igreja se Espalhando Fora de Jerusal\u00e9m \\r\\n10- A Primeira Viagem Mission\u00e1ria \\r\\n11- A Segunda Viagem Mission\u00e1ria \\r\\n12- A Terceira Viagem Mission\u00e1ria \\r\\n13- Paulo, o Prisioneiro.\",\"fileurl\":null,\"thumburl\":null,\"price\":5.95,\"type\":null,\"stock\":null,\"programmingstock\":0,\"quantity\":1,\"weight\":0,\"discountpercentage\":20,\"discountvalue\":0,\"discountpercentagebillet\":5,\"discountvaluebillet\":0,\"status\":1,\"keywords\":null,\"gift\":false,\"giftValue\":0,\"giftAmount\":null,\"priceField\":\"price\",\"isbn\":\"\",\"page\":\"42\",\"size\":\"20.0x27.0\",\"promotional\":\"N\",\"small_images\":\"\",\"mid_images\":\"\",\"big_images\":\"\"}\n    } ]\n  }\n}\n. ",
    "sebastianbergmann": "DEBUG is not used by PHPUnit (or any of its dependencies). I'm afraid there's not much debugging I (or a PHP core dev) can do without a minimal, self-contained, reproducing script.\n. ",
    "otosiol": "@im-denisenko Hello thank you for your answer i just see it. \n. Yes that was exactly my mistake now i set Https it seem better\n. I still have this error when creating and index:\nUnknown error:60\n500 Internal Server Error - HttpException\nin vendor/ruflin/elastica/lib/Elastica/Transport/Http.php at line 166 \nHere is my code :\n// Load index\n        $elasticaIndex = $elasticaClient->getIndex('twitter');\n// Create the index new\n    $elasticaIndex->create(\n        array(\n            'number_of_shards' => 4,\n            'number_of_replicas' => 1,\n            'analysis' => array(\n                'analyzer' => array(\n                    'indexAnalyzer' => array(\n                        'type' => 'custom',\n                        'tokenizer' => 'standard',\n                        'filter' => array('lowercase', 'mySnowball')\n                    ),\n                    'searchAnalyzer' => array(\n                        'type' => 'custom',\n                        'tokenizer' => 'standard',\n                        'filter' => array('standard', 'lowercase', 'mySnowball')\n                    )\n                ),\n                'filter' => array(\n                    'mySnowball' => array(\n                        'type' => 'snowball',\n                        'language' => 'German'\n                    )\n                )\n            )\n        ),\n        true\n    );\n. That Work! Great Man thank you so much. I was using \"elasticsearch/elasticsearch\": \"~1.0\", version of Elasticsearch-php and i'm using compose.io with amazon server if someone get the same problem. Thank you again!\n. The same configuration is possible on FOSElastica?\n. It's seem not working. This is my configuration :\nfos_elastica:\n    clients:\n        default:\n            connections:\n                - { transport: Https, host: user:****@aws-us-east-1-portal3.dblayer.com, port: 10050, curl: {CURLOPT_SSL_VERIFYPEER: false} }\n                - { transport: Https, host: user:****@aws-us-east-1-portal1.dblayer.com, port: 10062, curl: {CURLOPT_SSL_VERIFYPEER: false} }\nReturn this error : Unrecognized option \"curl\" under \"fos_elastica.clients.default.connections.\"\n. ",
    "diimpp": "Sure, raw query is certainly solving my issue. Thank you for the snippet. \nI've extended Search class with endpoint property though, as I would like to use ScanAndScroll after that.\nQuestion is would library benefit from configurable endpoints? It doesn't introduce BC and it seems useful. But I don't know if my use case is a popular one as I'm new to ES and for all I know tweaking endpoints might be a rare thing.\nPlease close the issue, if it's not relevant.\nRegards.\n. ",
    "matak": "hi i have same, problem\n\nelastic is not running on same machine\nelastic is running, i can create any query through kibana\nelastic is version 5.1\nthe error is number 6, and response is\n\nElastica\\Response #b8e7\n_queryTime protected => 2.5144689083099\n_responseString protected => \"\"\n_error protected => FALSE\n_transferInfo protected => array (26)\n_response protected => array ()\n_status protected => 0\n_jsonBigintConversion protected => FALSE. seems that url was defined with http:// sorry, you library add http to the uri. remove http:// from the config is enough, this solves the problem, but the elastica library automatically add to the url address http at the begining, we can close this topic\nmaybe add this note to the documentation, that the url should be defined without http. raw-array-query is fine, but it is not possible to combine it, if you build your query in functions, and query is quite complex you dont know exactly on which level you are, so it would helped me if i can insert raw array to the fluent structure if you understand?\nPR? what does it mean?. ok i will try PR, thanks. ",
    "rastafermo": "Sorry but I don't understand if this is solved or not. I have a similar problem and I can't find a solution. I've deployed a symfony project on heroku with an elasticsearch add-on up and running, but my symfony app could not resolve the host. Any hint?. ",
    "JanJakes": "@ruflin It was actually supereasy :) Just running boot2docker and the single make run command exactly like you said. At first I just didn't notice that I need absolutely no setup to run these commands - https://github.com/ruflin/Elastica/blob/master/CONTRIBUTING.md#run-tests.\n. @ruflin Yeah, maybe :) I mean it's not a standard (yet) to have repos prepared with Docker bootstrap as simple as this one.\n. Thanks, fixed. I'll have a look how to run the tests but if it takes more time I'm not sure when I can get to that.\n. Thanks, I've added the test. Btw. the query_cache option will probably work only with search_type=count but that's expected behavior (https://www.elastic.co/guide/en/elasticsearch/reference/1.6/index-modules-shard-query-cache.html#index-modules-shard-query-cache).\n. ",
    "codecov-io": "Current coverage is 61.08%\n\nMerging #889 into master will change coverage by 0% by ca516d1\n\nCoverage Diff\ndiff\n@@            master    #889   diff @@\n======================================\n  Files          178     178       \n  Stmts         8284    8284       \n  Branches         0       0       \n  Methods       1385    1385       \n======================================\n  Hit           5060    5060       \n  Partial          0       0       \n  Missed        3224    3224\n\nUncovered Suggestions\n\n+0.27% via ...port/HttpAdapter.php#101...122 \n+0.26% via .../Tool/CrossIndex.php#61...81 \n+0.23% via .../Tool/CrossIndex.php#124...142 \nSee 7 more...\n\n\nPowered by Codecov\n. ## Current coverage is 84.42%\nMerging #1069 into master will increase coverage by +0.16%\n\ndiff\n@@           master   #1069   diff @@\n=====================================\n  Files         179     179          \n  Lines        4756    4750     -6   \n  Methods      1188    1186     -2   \n  Branches        0       0          \n=====================================\n+ Hits         4006    4010     +4   \n+ Misses        750     740    -10   \n  Partials        0       0\n1. 2 files (not in diff) in lib/Elastica were modified. more \n   - Misses -3 \n   - Hits +1\n2. File .../Elastica/Client.php was modified. more \n   - Misses +2 \n   - Partials 0 \n   - Hits -5\n\n\nPowered by Codecov. Last updated by 149fef3\n. \n",
    "stevepeak": "Looks like the setting to build pr's is disabled. I'll activate it on my side.\n. Hey @JustinHook and @ruflin the coverage changes are due to our report fixes to increase report accuracy. Comparing the two reports you will notice that brackets are no longer included.\nSimply:\ndiff\n+ } # before\n- } # after\nYou can read more here: https://github.com/codecov/support/wiki/Report-Fixes\nThank you!\n. I can review the uploads to confirm, but the difference between these reports is the extra } brackets being measured. Which there seems to be a couple more (L38, L24) that need to be removed as well. These fixes are a work in progress.\nSending one vs multiple is not the issue. But I suggest sending everything just incase :+1: \nThanks!\n. > I take your answer as: It should work and we should resend the reports now to see if it works. If not, I will mention you again. Ok?\nYes, Feel free to mention me anytime.\n. @JustinHook these commits appear to not exist in GitHub. But the difference is likely due to the line adjustments I spoke of earlier. Do you have other recent commits that I can check? \n. I'll review the uploads and report back. Thanks for the commits. I'll be\nback online later.\nOn Mon, Jan 11, 2016 at 10:23 AM JustinHook notifications@github.com\nwrote:\n\n@stevepeak https://github.com/stevepeak it still doesn't appear correct.\n3 separate coverage xml reports = 80.64%\nhttps://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=2b4eb2c1731c7c2d8f4dbc5e5b08818dd4f6c3ce\n1 coverage xml report = 92.59\nhttps://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=19aa1e23ed5424469e6a99fb2e483b20e59c3ccb\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/1002#issuecomment-170395660.\n. The difference are these strange lines like 64 here \n\nWe try to fix issues like these, as seen here.\nI looks like my method here is not properly finding the fixes. I'll need to make adjustments to the bash uploader to fix this. In this commit: https://github.com/codecov/codecov-bash/commit/bf76161cd12f869be742e27bc00d7f570d663a37\n\nHowever, with all this being sad. The question remains: why was line 64 not covered? If you review the reports below you will find that Codecov is reporting properly. The commit 2b4eb2c indeed expresses line 64 as not covered (keep in mind that I am aware of this issue with php coverage reports and have adjusted our process to fix these issues above).\n```\nFri Jan 08 09:30:48 UTC 2016 : INFO, {\"commit\": \"2b4eb2c\", \"id\": \"5fc05f92-16f3-4feb-ac49-0f7a25250aa3\", \"method\": \"POST\", \"ms\": \"254\", \"reason\": \"OK\", \"reportid\": \"upload:131927:2b4eb2c1731c7c2d8f4dbc5e5b08818dd4f6c3ce:2024.3:2279:1452245448.46\", \"service\": \"github\", \"size\": 0.0, \"slug\": \"ruflin/Elastica\", \"speed\": 14, \"status\": 200, \"url\": \"/upload/v3?package=bash-5ca7b8c&branch=master&commit=2b4eb2c1731c7c2d8f4dbc5e5b08818dd4f6c3ce&build=2024.3&build_url=&slug=ruflin/Elastica&service=travis-org&pr=false&job=101017757\"} 200 Context\nSun Jan 10 21:18:19 UTC 2016 : INFO, {\"commit\": \"19aa1e2\", \"id\": \"980f3520-c2bb-4e2b-bda0-91bc9873323e\", \"method\": \"POST\", \"ms\": \"222\", \"reason\": \"OK\", \"reportid\": \"upload:131927:19aa1e23ed5424469e6a99fb2e483b20e59c3ccb:2025.3:7203:1452460699.96\", \"service\": \"github\", \"size\": 0.0, \"slug\": \"ruflin/Elastica\", \"speed\": 10, \"status\": 200, \"url\": \"/upload/v3?package=bash-5ca7b8c&branch=master&commit=19aa1e23ed5424469e6a99fb2e483b20e59c3ccb&build=2025.3&build_url=&slug=ruflin/Elastica&service=travis-org&pr=1002&job=101462751\"} 200 Context\n```\n- Raw upload for 2b4eb2c\n- Raw upload for 19aa1e2\n\nPS access to these raw uploads  and logs are in our next major release\n. \n",
    "yvann": "A first beta just arrived for your informations :) https://github.com/elastic/elasticsearch/releases\n. Let me do that, I come back in a minute :)\n. Do you consider a version 2.2.2 with this merge ? Thanks\n. cf #927 \n. Sure ! I just saw the last comment you did on my previous PR :)\n. I have no good excuse to not do it, let me the day to push something :) !\n. Rebased and added some tests, at least to show that the compression parameter doesn't affect the success of requests.\nThe behavior for the Http transport is :\n- Elastica always says to ES it supports compression (via curl native support), to allow ES to send back a compressed response\n- Depending of compression parameter, the request sent to ES is compressed or not\n. ",
    "michaelfeinbier": "@ruflin What exactly has to be done? The current state of this library does not work with 2.0beta2 and I like to help. Do we need a 2.0beta2 docker-container?\n. ",
    "oncesk": "thanks, i already use it =)\n. ",
    "Mohammadtrabelsi": "In any version this bug has fixed please ?. Can you give me more detail\nbecause the bug is in the vender folder and i c'ant change it:\nin vendor/ruflin/elastica/lib/Elastica/Query/Bool.php at line 13:\nclass Bool extends BoolQuery\n{\n}. thanks a lot. ",
    "p365labs": "at the moment the strategy is the same : use Elastica\\Query\\BoolQuery and not Bool.. you should use vendor/ruflin/elastica/lib/Elastica/Query/BoolQuery.php\nI hope to have understood the problem.. Hi @ruflin I know that _suggest end point has been deprecated but if you want I can make this PR ! what do u think ?. @simaranjit  I'm testing PR #1332. This will allow to patch the error on travis build. Hi @ruflin regarding this error \nI have a look here https://www.elastic.co/guide/en/elasticsearch/reference/1.7/index-modules-merge.html, seems that merge_factor has been removed and the PolicyFactor has been deprecated since 1.6 elasticsearch version. I had a look at source code of ES and in ES5.0\\ES5.x\\master this feature is not present. \nI've opened a PR --> https://github.com/ruflin/Elastica/pull/1192 for this\n. dear @ruflin and @Zyqsempai I'm trying to help you too, if I can :) now I'm working on remove all the deprecations. I would like to understand better another point of this issue : \"Double check which PHP versions should be supported\" how do you want to deal with it ? If you have a look at here http://php.net/supported-versions.php, php 5.4 and 5.5 has been dropped active versions are 7.0 and 5.6 (active support will end januare the 2017).  I will drop 5.4 for sure and evaluate dropping also 5.5, but leaving 5.6. What do u guess ?\n. I'll work now  on scripts.inline which does not seem to be enabled / work as expected.\n. even if this is not a the main theme for this issue as @Zyqsempai said, I agree with @ruflin to proceed in the direction he suggested.\n. Hi all, I will work on Scripts and update to painless script, if it's ok 4 u guys\n. @ruflin  @Zyqsempai : Having a beta will allow Elastica's users installing the package with more ease and trying it on their project. Which means more feedbacks for us on the major version of Elastica. so \ud83d\udc4d \n. Hi @idhard , when u say \"And i have noticed that the Query builder is setting the filters in the post_filter parent.\" where exactly QueryBuilder is setting filters in the post_filters ? can u show me some code ?\n. updated the CHANGELOG.md\n.  @ruflin ~~what kind of error is returning codecov?~~ ok got it, have a look at the PR and let me know :)\n. @Zyqsempai you're right \ud83d\udc4d we forget to organise each other on which issue to work \ud83d\ude04 \nregarding prefix I had a doubt, to be honest, I did not find any document stating that text has been removed or deprecated. \nAnd more having a look into \nSuggestionBuilder.java the text property is in every branch (5.0/5.x/master).\nprefix is used in every example of the current release but not really explained (just a little bit on fuzzy suggests).\nmaybe I agree we should use prefix, I'm not sure if we have to leave text. \n. @ruflin I'll take it if it's not a problem. already merged :)\nhave a look this PR. yes @ruflin  we can close it :). even if php 5.5 is not yet supported, I've created a VM with Vagrant :\n- ubuntu 14.04.5 LTS\n- php 5.5.38-4+deb.sury.org~trusty+1\n- composer 1.3-dev\n- installed yii basic (composer create-project yiisoft/yii2-app-basic basic 2.0.10)\n- composer require ruflin/Elastica:5.0.0-beta1 --ignore-platform-reqs -vvv\nand everything seems ok, Elastica 5.0.0-beta1 has been installed correctly.\n. release 2.3.1 of Elastica library has been released for Elasticsearch version 1.7.3.\nHave a look here :\nhttps://github.com/ruflin/Elastica/releases?after=3.0.0-beta1\nIf you want to use Elasticsearch 5.0.0 you should use Elastica 5.0.0-beta1. Beware that this is a beta version, use it  for testing purposes and not for production one, any feedback will be really \nappreciated.\n. If you use Elasticsearch 5.0 you should use Elastica 5.0.0-beta1\n- getError now return a string :\n  https://github.com/ruflin/Elastica/blob/8fa05bb677ab49e62e2af3bdfa62f7d9b6de761c/lib/Elastica/Response.php#L82\n- the only version of Elastica that was returning an array was from 3.0.0-beta1 to 3.1.0: https://github.com/ruflin/Elastica/commit/99d7cd147c469e20e0c8e550c431712edda4dd19#diff-b364251d02e70310f3c6e443372397d3R81\n. As @ruflin stated If you want to install Elastica with PHP 5.4 or 5.5 you can do that quite easily with --ignore-platform-reqs. I think this should work in your case. . \n@ebernhardson you're right LTS of many Linux distributions still ships with older versions of PHP, but this won't mean you cannot update PHP to at least the 5.6 version. I know that this should sound a bit rude, but I think (it is just my opinion) that you have to keep server distribution up to date for security matters. And also we should consider that PHP 5.6 Active Support has been dropped 8 days ago ;) .\nmy 2 cents :) \n. @ebernhardson I understand ur point of view. As the developer|maintainer of a software is your responsibility giving the \"user base\" a path they should follow; you can help them in some way but before and after they should update their OS. I really don't understand why they shouldn't. \n\nHaving a look at the Jordi's php version stats update in the last 6 months php 5.5 has lost a ~11% and now is only the 18.9% of the total. \n\nPHP Versions    |   May 2016    | November 2016\n-------------------|------------------|----------\nPHP 5.6 |   39.67%|     37.46%\nPHP 7.0 |   20.24%|     35.01%\nPHP 5.5 |   29.56%|     18.93%\nPHP 5.4 |   7.64%|      5.40%\nPHP 5.3 |   2.43%|      1.60%\nPHP 7.1 |   /|      1.36%\n\nWe should also not forget that PHPUnit 5.x has dropped support to php 5.5\nthere are many frameworks that this year will drop support to php 5.5.x : NEOS 3.0, PHPUnit6, TYPO3 8 LTS, PhpSpec, Laravel 5.5, Xdebug 2.6, Symfony 4.0\n\n. Even if I'm still not sure this is the right solution, 5.5 it's too old and there are evidence that people are moving to new versions (see composer stats on the website). I support the @ruflin solution, the maintenance of that branch is on @ebernhardson and others that want to support. This branch should not limit the development on master.... so for me \ud83d\udc4d . yep, @ruflin pr was https://github.com/ruflin/Elastica/pull/1243. @Mikevandee why are you thinking Elastica did not use that methods for opening and closing indices ? \nHave a look here https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Index.php#L360\n. I found maybe some more info https://github.com/docker-library/php/commit/6844e717a56a5dd8ad87a236a96bea069cc635fd, on the official DOCKER php56 Dockerfile. @ruflin done!. @ruflin done :). Hi @ruflin I think that now CrossIndex has been removed, the ReIndex class as @mweibel suggested should be fully in sync with ES 6.0 implementation, so it will be really useful implementing missing options.. Hi all! Travis has updated their images .... now we have Ubuntu Trusty 14.04.... (not really fresh.. but it's ok). I'm testing a PR to allow new PR's to pass the tests and then, with more time, I will try to update .travis.yml in order to work properly with the new Trusty images. @ruflin . @thePanz @ruflin I'm testing PR #1332. This will allow to patch the error on travis build. @ruflin with these small amends on the Dockerfile and elasticsearch.yml we will be able to execute tests ... as expected the main effort should be pointed on the Types removal.  @ruflin I've seen ur comment, sonds good. What if I try to merge it on master (in order to see test running) ? as we can start share errors on TYPES.. and take a decision on how to implement a strategy for the new ES6.0 Indices ?. @ruflin ok I close my PR and I'll open a new one. yes the Javascript it's not the only scripting language deprecated in ES 5.x (groovy, etc); but these are deprecated and will be removed in the next major. The idea is to remove it in the 6.x release. . Usually deprecating represent a warning to developers or users, that the functionality will be removed soon. It's a period of time the deprecated functionalities still work, which allow developers to migrate to the new one (in this specific example migrate to the painless scripting language). That's the reason why LANG_JS is still in the current Elastica Release.\nyou can find some references here : \n- (ES Scripting)[https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting.html]\n- (Painless scripting)[https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-painless.html]. @ruflin  this isssue can be closed. hi @ruflin, yes LGTM ! I'm would like to have a test environment to tests es5 indices against ES6.0 (cause 6.0 still mantain compatibility with ES 5.0 multiple type indices....). From the 7.0 they will drop support for this kind of indices. So at the moment I'm trying to update the tests environment to test it against 5.0 indices even with ES5 and ES6 and I would like to push it on the same branch of #1340 ... let's see what happen then.. ur right! For the moment I'm just trying to understand which level of compatibility have 5.x indices with 6.x and +; \nThe idea for the moment is to execute tests on a ES5.0 cluster snapshotting that indices and restore on a 6.0-beta1 cluster and execute the tests again. I agree with u, the tests suite is a bit more complex, or... more heavy than complex :) (this is not a solution, it's more to understand where to start from).\nMaybe could be a good point for start an issue and prepare some tasks to reach 6.x release.\n. There are a lot of BC breaks on Elastica 5.x. In order to use it u should upgrade Elasticsearch 5.x.\nHave a look here you could also check the official blog postfrom elastic.co. great! so if we merge the #1340 then we can start creating PRs. @ruflin Hi, I will take this week to solve the 70% of tests skipping related to Type BC on Elasticsearch 6.0 (only 1 type per indices).  Just a note to take it in mind  (and maybe to add in the task list): the guys of elasticsearch/elasticsearch-php are updating their code in the dev-master in order to make it pass tests on ES 6.0. After their rework maybe something should be updated also in Elastica but I'm not sure (is just a note to remind us a review after it). \nMost important thing is that in dev-master (so probably in the next release of the client) they have dropped support for PHP 5.X... we should start thinking on it before implementing the new client version and probably this is the right place to start discussing on it.\nwhat do u think ?\n(i'll update tasks list). @ruflin\n- I'll make some tests with the new elasticsearch-php client \n- I agree with you, in order to move in the same direction of the elasticaserch-php client we should drop support for php 5.x\n. @polyfractal great !! I've just prepared a branch with the dev-master of elasticsearch-php and I can confirm that I have found no particular issues.. @ruflin I think we can merge a composer.json with dev master (of elasticsearch-php) and then add a version when tagged; also because we are working on dev-master and maybe it's more important working on the latest code to find some other bugs or failing tests. \nwhat do u think ?. @ruflin I agree with you I think for the moment we can use this flow. This is something we can start thinking after we have released a stable version for ES 6.0.. @ruflin PR #1356 switch to dev-master and drop php5 support ready :). Thanks @polyfractal we already have a PR that switch to dev-master of es-php. We can also switch it to beta1 branch. Thanks a lot!. we have now 37~ tests skipped, most of them are related to the change with JOIN FIELDS. I'll work this week on it :). Thx @ruflin a lot of fun here :). I'm working at the moment on \"Implement tests for ingest-attachment plugin\" it will take a bit as now attachment are managed by Ingest Pipelines, which are not implemented in Elastica, so I need to implement it first and the attachment one. . @ruflin I added Pipeline and Processors as we need it in order to implement and test the ingest-attachment plugin.. Yes that is true, but not completely : \nthe failing tests are related to two main problems :\n\nthe new ingest-attachment plugin did not use an attachment field on an index but uses a Processor in a pipeline. So 4 tests in IndexTest.class should be removed and must implement the flow with the attachment processor, which now exists (that's why I did not implement a functional test on that processor I would like to do it in a separate PR).  \nJOIN FIELDS : all the other tests failing are related to parent/child mapping. In the roadmap document it is explicitly explained that New indices no longer support the old-style of parent/child and should use the join field instead.\n\nSo the first point is not that complex and I should do it in a couple of days. The new *Join field * is something that should be implemented from scratch. It will take a bit more in the sense I have to study it first.\nWe're not far to release a beta for testing Elastica against ES6. Only join fields need to be implemented to make all tests pass.. Hi the tests are fixed right now. Yes we can close this one, now we should wait for elasticsearch-php to release a stable version and check if everything works. What about linting and releasing a beta version of Elastica 6 ?. @ruflin ok, we are already using a beta1 pre-release of elasticsearch-php client :) \n\"elasticsearch/elasticsearch\": \"6.0.0-beta1\". completely agree ! \nThe only pr pending for me valuable could be the one for php 7.2.. but it's still in WIP and more than this PHP 7.2 is planned to be released on November the 30rd; so I will release the beta1 first.\nEventually we will release a new beta. It is just to release a beta1 and having a version available.\nWhat do u think @ruflin ?. @ruflin done!. done!. Hi @ruflin I changed the title in [WIP] as I have to inspect why some tests fails on travis. Wait on merging this one. TNX. The problem seems that the Exception return query_validation_exception not in the same position of the array. Instead of using assertEquals and validate the value of a specific position $error['failed_shards'][0]['reason']['caused_by']['type'] I tried assertContains; like that seem to work. Waiting for tests to execute on Travis :)\n. ok done, build on travis running :)\n. @ruflin I would like to understand why you're saying \nI would like to keep the tests for 5.6 around as long as possible, even if we don't official support it.\nIf we decide to follow the official client, they have already dropped support for PHP 5.x, it sounds a bit strange to me to maintain code to test it against 5.x when the client doesn't support it, even if the tests don't fail.\nCan we talk about this ?\nMaybe I can split the PR in order to move on to implement es-php-6.0-beta1 and the we can continue discussing on the php matter, what do u guess?. Ok It sounds ok to me, and I can agree and uderstand the approach. \nI will fix the PR and maybe create a new one trying to make it work on 56.\nThanks again. I've left the dockerfile for php56, and the Bool and Null classes (which are there for BC), removed the amends to test/Elastica/SnapshotTest.php which was something I forgot and commit to this branch. Now we removed php56 from travis and updated composer.json. yes if I execute the query with a curl \ncurl -XGET 'elasticsearch:9200/fedetest/_search?pretty=true&search_type=dfs_query_then_fetch' -H 'Content-Type: application/json' -d'\n{\n    \"query\": {\n        \"boosting\" : {\n            \"positive\" : {\n                \"term\" : {\n                    \"name\" : \"vital\"\n                }\n            },\n            \"negative\" : {\n                 \"term\" : {\n                     \"name\" : \"mercury\"\n                }\n            },\n            \"negative_boost\" : 0.2\n        }\n    }\n}\n'\nenabling logs on ES returns \nsearch_type[DFS_QUERY_THEN_FETCH]\nexecuting a search in Elastica like this one \n$response = $this->_getTestIndex()->search($query, ['search_type' => 'dfs_query_then_fetch' ]);\nES output log is\nsearch_type[QUERY_THEN_FETCH]\nand if I try to debug the HTTP Transport (enabling VERBOSE on CURL) the querystring is correctly formatted :\n/elastica_elasticatestqueryboostingtestdeebfa/_search?search_type=dfs_query_then_fetch\nSo there's something that not send this option... maybe es-php client but I'm not sure, I've created an issue  'cause this is not something directly related to allow Elastica working with ES6. I will try to inspect later maybe if u have some ideas...\n. it's PHP :) http_build_query this function will convert true and false in 1 and 0\n. @ruflin totally agree with u! new rebase coming :). @ruflin done\n. sorry I make some mistakes between comments and review ... ;)\n\nI updated the docblock as $body should be and array\nI declared $body as array forcing the strict type\nwhat do u think ? should we really raise an error in case of $body not a map ?. I like strict type hinting too... maybe when this major upgrade has ended we could plan a major refactor in order to make Elastica more respectful of it, considering we are now upgraded to php7.\nJust an idea :). I've made some minors update and implemented some tests, in order to execute the pipeline tests against an Index. \n. As for now the community can create and update processor as they change in time, the only processor not yet implemented are Foreach, Grok, Gsub, Script.\n\nParam is the right structure to use in order to have the body of the API call well formed, the only concern is that Param was clearly created for queries (at the top of the class --> *  This function can be used to handle params for queries, filter), and maybe I could create a real similar class called Option or PipelineOption which do exactly the same thing as Param. Maybe is something we can think about in a future if something will change in Pipeline definition or implementation in ES. Creating now an Option class would mean only duplicate Param class. I preferred this approach, but I would like to discuss it if it sound ok for you and the community.\nProcessors does not have functional tests except KvTest.php, I will implement asap, I was waiting for a review first :) . Hi @ruflin, before the functional tests I've made a small refactor on tests. I created a BasePipeline class (which extends Base), which create a pipeline and also implement a tearDown in order to delete all the pipelines created to make tests atomic. Every Processor should extends this class so it would be easy to create a Pipeline (and a functional test...) and also I have avoided to implement the same code to create a Pipeline in all the Processor tests. . Hi @Ruflin the PR for me is ready to be merged; let me know if u have more comments.. @ruflin any comment on the review :) ?. done!. Hi @1ed can u explain better what do u mean and of what bc in minor are you talking about ? Tnx a lot!. not sure but I think we can close this. . In my opinion I prefer having Elastica tyed to Elasticsearch, as Elasticsearch-php client do, this way users should have less problem in terms of understanding compatibility. The only thing I would consider would be to apply hotfixes, security patches, etc, to old releases.. as usual :). can you show us the code that generate this error ?. I confirm that @kukulich is right. \nPHP 7.2 change a bit count() function (search for Countable).\ncount() now raises a warning when an invalid parameter is passed. Only arrays and objects implementing the Countable interface should be passed.\nI think could it be useful having a PR ready to be merged when PHP 7.2 will be released, at the moment PHP 7.2 is a Release Candidate 2, so not ready for production use. . hi all! I think we can close this one as this PR #1378 solves the problem :). @ruflin Now the PR# it's not in WIP anymore, tests now pass also with PHP 7.2-rc (which is now RC5). Today will be released php7.2-rc6 and for the end of the current month PHP7.2 GA will be released. Feel free to merge it or wait till PHP7.2 . GA.. @ruflin the pr has been updated :) removed unused code and remove that weird var name :). ok but phpdoc is clear @param int $count\nas the code previously supported php 5.x this was the only way. \nAnyway I think u got the point , but if we want to follow that path, \nconsidering that we have now switched to php 7.0+, it would be really\ninteresting moving to strict type hinting. \nI already discuss that in another\nPr or Issue with @ruflin. My suggestion is the same. Let's have a minimum version\nof Elastica working with ES6.0 and then we can arrange that task.\n. @osavchenko #1548 . in fact all tests are fixed now ;) The only that are skipped are the ones that remains for php 5.x which are not working in php 7 (Null, Bool are reserved words in php 7).. That seems good to me \ud83d\udc4d  I will remove this part of the comment :\n-1 refreshing is disabled.\nwhich is not true anymore, have a look here. @ruflin it sounds a flaky test... I will inspect.. during these days I will try to do some more tests trying to understand it.. looks like you did not enabled fielddata : \nhave a look here hope this could help!. There is no difference ... some years ago the team at Elasticsearch discussed on _count\nhere Which is, in fact, a shortcut of the _search API with size set to 0.\nwe could also implement _count into Elastica (as _count on REST API still exists) but as the guys of Elasticsearch leave that endpoint as it is a \"comvenient simple sugar\". Which version of ES are you using ?\nAnyway you're right. The exception returned by ES it's not completely clear. I created a small test in order to find the Exception, this is the full exception returned from ES with the test case you show:\narray(3) {\n  [\"type\"]=>\n  string(24) \"mapper_parsing_exception\"\n  [\"reason\"]=>\n  string(15) \"failed to parse\"\n  [\"caused_by\"]=>\n  array(2) {\n    [\"type\"]=>\n    string(23) \"not_x_content_exception\"\n    [\"reason\"]=>\n    string(91) \"Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes\"\n  }\n}\nI agree with you that not_x_content_exception it's a bit confusing, but failed to parse it's absolutely clear. The problem with the query is that the Document is not well formed, it should be an associative array. That's the way a Document should be. If you give a look to ES documentation you will see in Buld, or even in Index API that  field names and values are strings and this is an associative array :)\nAgain you're right saying that it should be an associative array and not an indexed array... unfortunately in PHP there's no difference.\nPHP arrays can contain integer and string keys at the same time as PHP does not distinguish between indexed and associative arrays.. Ok now I have a more clear understand of your problem... and yes I agree with you that  \"failed to parse\" is a bit generic, but that is on the shoulder of Elasticsearch. I mean the error is coming from Elasticsearch, which returns it to Elasticsearch-php which Elastica get and return as a ReponseException (in your specific case Bulk\\ResponseException).. - Hi which version of Elastica r u using ?\n- can u describe better what are u trying to do maybe showing us a piece of src code ?. yes you're right :) it's missing. Maybe you could do implement it and create a PR ?. The problem splitting the PR is that the BC has been introduced exactly by the RC2. So testInnerHitsNested will fail and so the build if I split the PR in two PR's. \nIt's a bit weird they have introduced this BC in ES-6-beta2 and then introduced (in RC2) the BC Break of a BC Break... \nIt shows to Elastic is working hard in order to release the new ES6.\u00f9\nXdebug, it's ok, it's tru what u said. It's that I noticed that sometimes tests fail due to this error :\nStep 6/13 : RUN pecl install xdebug-2.4.0\n ---> Running in b33bc5554f34\nPackage \"xdebug\" Version \"2.4.0\" does not have REST xml available\ninstall failed\nand I still don't understand, I thought removing it will solve the problem. Maybe I need to inspect on that more ;)\n. inside test directory you'll find unit and functional tests. Our test suite uses Docker to execute functional tests against a real Elasticsearch cluster. I've had a look at your code and this will be the the correct code to make it work inside our test suite :\n```    /*\n     * @group functional\n     /\n    public function testIssue1400()\n    {\n        $client = $this->_getClient();\n        $index = $this->_createIndex();\n        $type = $index->getType('bulk_test');\n    $documentCount = 1000;\n    $bulk = new Bulk($client);\n    $bulk->setIndex($index);\n\n    $articles = [];\n    for ($id = 1; $id <= $documentCount; $id++) {\n        $articles[] = $type->createDocument($id, [\n            'client' => 'test',\n            'content' => 'PHPUnit Test Text ' . ($id % 2 === 0 ? 'even' : 'odd') . ' ' . $id,\n        ]);\n    }\n\n    $bulk->addDocuments($articles);\n    $response = $bulk->send();\n\n    $this->assertEquals($documentCount, $response->count());\n}```\n\nI think we can close this issue.. I've restarted the build... it looks like it failed the tests for CrossIndex which is deprecated. It smells as flaky test. I will have a look into it this week end.. @ruflin done . :)\n. I made an error.... I closed it can u reopen it or I just need to create a new PR?. done PR #1410. @ruflin If u merge this I have also a branch to remove the CrossIndex class before create the release :). @ruflin  have a look it now :) . you still have CrossIndex PR #1411 . yep sorry. @ruflin done :). no problem done. @ruflin following this route, I think we could also remove the other stuff which is still related to php5.6 as here #1356.\n@gabriel-caruso tests are failing I think due to the version of phploc :\n\"sebastian/version\": \"~1.0.3\"\nanyway it's a problem of a dependecy with some library included. @gabriel-caruso just 2 things : \n- as @ruflin suggested move to another PR which has a more meaningful title\n- remember to remove old deprecated Elastica\\Query\\Bool and Elastica\\Transport\\Null. Hi @gtavasoli can you show us the code which generate that error ?. @gtavasoli just to understand instead of building the path of the query to execute what happen if you try to use the Search Object ?\n$search = new Search($client);\n        $resultSet  = $search->search($query);\n. It sounds a bit weird as this commit 3e3a1affd1b8097ed942ae2364c454ae6872e201 (12/05/2017) sets a default Content-Type.  which is Request::DEFAULT_CONTENT_TYPE\nI'll have a look a bit deeper into this \ud83d\udc4d . Anyway @gtavasoli have u tried the piece of code I've sent u a day ago ?. @kukulich yes it has been deprecated and inline will be removed in favour of source in ES 7.0. The reference could be found (here](https://github.com/elastic/elasticsearch/pull/25127). . @carusogabriel remember to remove old deprecated \n- Elastica\\Query\\Bool \n- Elastica\\Transport\\Null. @ruflin  \ud83d\udc4d . ok LGTM!. @ruflin my first merge... my first mistake... it looks like it was already rebased... I will be more careful next time. sorry.. it looks like u left some _logs call inside Client.php:\n- https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L692\n- https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L702\n@carusogabriel  check if there are left some other orphan calls.. yes 'cause there are tests on the this->_log method change it to this->_logger, don't remove it . @thiruvenkatam update your composer with something like :\n\"ruflin/elastica\" : \"~6.0\"\nand then try to se if the problem is still there. @IgorDePaula It looks like Elastica is not able to reach that Host:\ndo you have a security group which restrict access to port 443 ?\nmaybe your terminal access is whitelisted instead the application do the curl from another IP\nwhich is not allowed to access that IP ?\n. This idea is really interesting, from a development pov is really usefull having such method that allow to test directly the query inside ES.. I created a couple of tests #1546  to verify connection problems or timeouts not respected, I was not able to reproduce it. Maybe there's something more than Elastica that create this problem.. @pashaBolshov done :). done :) . What about using the getStats() at Index Level ?\nmaybe something like \nphp\n$indexStats = $index->getStats();\n$stats->get('docs', 'store', 'indexing', 'get');\nor maybe have a look at all stats \nphp\n$stats->get('_all');\nare the stats returned what u want ?\nHave a look at all documentations on Indices Stats \nAnother interesting endpoint is Indices Recovery which I'm not sure it could be a good fit for you, maybe have a look at that but at the moment is not yet implemented into  Elastica.. @elshobokshy if u have a look into the PR merged #1537 u can view the test which uses the getRecovery() method. For the informations it returns please refer to the documentation. yep the setFilter is not in Query anymore.\nI suggest you to have a look at tests \nfor example:\nElastica\\Test\\Query\\QueryString. Hi @massimilianobraglia tnx for the PR! \nThis is a sux idea, I wonder if this could be a process to use during release instead of doing it on all classes. Considering tools like php-backslasher or the one from Ocramius still exists I think it would be useful for us and the project to have this type of tools in pipeline during release. \nAfter linting the code we can also use this kind of tools. \n@ruflin & @Tobion ?. @massimilianobraglia well done!\n@ruflin this should be also solves the problem from #1535 \nThe ruleset config was from new Php-CS-Fixer version.. @massimilianobraglia looks like u have conflicts on composer.json versions. Remember if you want to check it out locally you can execute tests quickly on u're development machine:\nmake tests\nRemember tests are executed against PHP 7.0, PHP 7.1, PHP 7.2, and PHP 7.3RC6 (stable PHP 7.3 waiting to be merged). Locally by default is executed against the lower version tested PHP 7.0.\nIf you want to execute tests against a specific version\nmake tests TARGET=73\nand set the value for the specific PHP environmnet. If I've understand well we should : \n\nmake lint before travis build\nmake lint before merging every PR\n\nam I right ? \n@ruflin & @massimilianobraglia ?. @ruflin & @massimilianobraglia  mmm so let me understand :\nThe idea is to execute tests locally with docker but not the linter with it ?\nThe only way a developer has to do functional tests on our stack is to\nhave Docker setup, otherwise tests will fail. So I cannot see the need to execute\nthe linter outside docker. \nAlso if you use this notation :\nbash\nifeq (, $(shell which php-cs-fixer))\n        $(error \"Could not find php-cs-fixer in $(PATH).\")\n        exit 1;\n    endif\n    php-cs-fixer fix --allow-risky=yes\nlinting will be always executed locally with an unknown version of the linter.\nLinting inside the docker forces al the developers using the same Fixer \n'cause it's inside composer.json.\nAs for example the #1535 add some configs which fails on our LINT because \nThat configs were for Php-CS-Fizer 2.x.\nNot sure this is the most viable way, but I'm open to understand the best way to do\nit.\n. @ruflin yep agree . hi @ShytN1k \nI confirm this is a bug. There's a bad implementation on Suggest side :)\nif you want open up a PR you're welcome!. Hi all! \nI've had a look at the Completion Suggester and this is not a bug. It's the expected behaviour. Completion Suggester extends Elastica\\Suggest\\AbstractSuggest \nwhich constructor is \nphp\npublic function __construct($name, $field)\nAs you can see the first parameter is $name. Giving the same name as in your (@ShytN1k ) example\ninvalidate the first (it's an associative array where the name is the key of the array).\nI've created a new test in order to verify this case and it's in this PR #1543.\nI also don't understand why @ShytN1k you are using setText when in your curl example you are using the prefix. Use the setPrefix param instead.\n. Tnx for the PR, that's a good idea :) \nI'm only wondering if ths could be or not a problem for the backported branches. I don't think so, but I would like to have a confirmation from @ruflin. what do u think?. This PR in fact add a test in order to verify the #1541 to have a use case that cover that example.\nI've also added a method \nphp\npublic function setStringDistanceAlgorithm($distanceAlgorithm)\nand its test to include this option which was not in the class.. @ruflin  done :). The idea behind php 7.3 is to having it already running our test suite and check if there are problems, considering it will be released in December. @ruflin  done!. @ruflin yep I'll doit today. @massimilianobraglia maybe you and @osavchenko could split the work in two and divide the effort ?\nwhat do u think ?. @ruflin  @massimilianobraglia sorry I missed the last message, I agree on the idea of having strict_types on the next major. @ruflin yep! . Hi @ruflin yep! I totally agree it's a good compromise.. @massimilianobraglia & @osavchenko  well done!!! Thank you very much. It has been an impressive work!. @ruflin for me it's ok to be merged. @ruflin \"squash and merge ?\". @maltehuebner yep there will be a massive refactoring on that, so if u would like to update your PR you are welcome :)\n\ud83d\udc4d for the PR for me!. @ruflin for me it's ok to be merged. @ruflin  yep u're right \nAdded BucketSelector aggregation #1554\n@maltehuebner  is still under a release and should be move to unreleased under \"Added\". @ruflin now to me seems ok, what about u ?. @massimilianobraglia I think we need to update composer.json here\nenv\\elastica\\composer.json\nit uses         \"phpunit/phpunit\":\"~5.6\"\nnot sure bad I have a bad smell on that version ;). @massimilianobraglia well done ! good point amending .travis + Make \ud83d\udc4d . @osavchenko you just need to execute the linter : \nmake lint\nfrom our command line.. tnx @osavchenko !. Hi @bdlabs !\nWhich Elastica Version are you using ?\nthe only version which still support PHP 5.3.3 is the one on 2.x Branch \nhttps://github.com/ruflin/Elastica/tree/2.x. @bdlabs got it ... maybe @jmsche can help us . #1572 has been merged closing.. close this as #1572 as been merged on branch 2.x-temp as suggested by @ruflin . I need to : \n\n[x] remove the _doc commit\n[x] fix the way ingest-attachment plugin, for SNAPSHOT image, is downloaded. @ruflin yep, we need to merge all the branches about type hinting first, then create a branch 6.x from master, and then we can merge ES7 branch on master and using master for the development of the new Major (7.x). what do u think ?. @ruflin tests are failing because of this change between 6.7 and 7.x:\nin 6.7 include_type_name is true by default\nin 7.x include_type_name is false by default\n\nThe problem with this is that elasticsearch-php should add to whitelist parameters this include_type_name which at the moment don't...\nWhat about updating tests removing types (as it has been deprecated and then removed in 8.x)? \nThis will allow us to pass tests and in general, avoid the use of type\nWhat do u think ?. @ruflin ok,\nI've already a pr, ready for it...but lack of time ;)\nI think I'll do it this evening.. @ruflin yep if u don't mind I'll do it :). @ruflin  for me it's ok can I merge it ?. @mgallego try to push again to see if the build starts correctly . @mgallego have a look at #1572. @ruflin @mgallego \ud83d\udc4d mergeable 4 me!\n. @massimilianobraglia  & @ruflin  LGTM too!\nhowever it looks like there are some conflicts here \nlib/Elastica/Processor/Convert.php\nlib/Elastica/Processor/Set.php. @ruflin  that's a good point. We can take it on 6.x or not the problem I see not porting these PR's on 6.x is that if it will need to backport some PR's from master to 6.x we will have lot of code changes; otherwise if PR's will be merged before branching out 6.x it will be easier backporting PR's. How does it sound ?. mmm got the point, and I agree this approach could be better. It will be a funny challenge backporting stuff :) Anyway if we agree on this let's branch out right now 6.x and then starting merging on master these PR's. . yes and no. I mean it depends how strict are the constraints in our users composer.json\n. Ok got it, and sounds reasonable, but doing bc's in minor release breaks a bit SemVer. \n+1 to apply typehintings on 7.x. My point of view is clear, we are not leveraging an application but we're releasing a library. So if for historic reasons, bad habits, type hinting not supported, the library had bad behaviors it's not on the shoulder and responsibility of whom implement the library in its own application. We're not bug-fixing the library, we're giving a strict more approach due to the language version update. \nContinuing adding bc-breaks is totally against SemVer which at least should give the idea of more stability and a shared development model. Patches and minor should not contain BC break.\nAgain this is a never-ending discussion as this is going to be one of the new \"TwoHardThing in computer science\" ... \nsooner MF will add the new third statement :\n- Decide when to put BC's in Minor and Patches versions\nI would prefer not merging on 6.x immediately, and maybe merging it if our community really needs it and ask for TypeHintings in 6.x. So wait and see what happen instead of doing it immediately and then managing complains (right or wrong but they will come) from our users. \nthese are just my 2 cents.\nAgain it could be a never ending story. This time I have a more conservative approach. every approach could right and every approch could be wrong. If we had a look on the net lots of things happens (thoudsands of issues :) ) on both approach.\n. @ruflin I'll take care of it!. yep ur right.\nI've created the branch but it's better doing it after merging type_hinting PRs.\nI'll remove it.. moving this discussion here\n@ruflin as per this discussion I updated this issue in order to keep track of what is needed for merging \"TypeHinting\" Pr's. \nShell I start with this plan ?. @ruflin what about merging #1599 before branching 6.x ?. @ruflin & @massimilianobraglia let's rock & roll :)\n- branch 6.x has been created\n- I'm going to merge PR's for typehinting. @massimilianobraglia \n\nare there specific PR's I have to start with or not? \nthere are still PR's which are not passing tests can u check it?\n\n1549\n\n\n1551 . @ruflin & @massimilianobraglia @osavchenko Hi, more than half of the PR's has been merged :\n\n\nsome just need to be rebased (I can do it if u don't mind)\n\none (#1562 ) need to review my comments\nother two (#1564 #1582 ) have conflics\n\ncan u please give them a look ?. @massimilianobraglia & @osavchenko Thank you very much for the impressive work!. hi @Destroy666x \n- which version of Elastica r u using and which of Elasticsearch ?\n- can you give us some example in order to reproduce the error ?. @Destroy666x got it, can u show me a simple array which raises the error ?. @Destroy666x #1584 PR with test proving the array works well. Probably you have tested it with a wrong array.. sorry @massimilianobraglia to which issue is related (maybe I'm too tired to understand)? Can u be more explicit ? tnx . @ruflin it's already rebased\n. the problem seems like \nmake: *** [check-style] Error 8. @ruflin yes.. it's not absolutely clear what's going on... the Linting build is failing with that error message\nwhich is not clear at all. I'm doing dome tests as I'm getting some errors too :) maybe it should be explained the expected behaviour into the README.md file.. ok the linting is ok, that was the message :). yes I think we need both too \ud83d\udc4d\n\na better explanation about our linting process (also if it fails)\nupdate CONTRIBUTOR.md file\n\nI'll open a PR on that.. @ruflin yep on master the method accept only an array. \nThe update should be applied only on 5.x branch\n5.x branch\nphp\n    /**\n     * Analyzes a string, or a list of strings.\n     *\n     * Detailed arguments can be found here in the link\n     *\n     * @param string[]|string $text String or list of strings to be analyzed\n     * @param array           $args OPTIONAL Additional arguments\n     *\n     * @return array Server response\n     *\n     * @link https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html\n     */\n    public function analyze($text, $args = [])\nmaster branch\nphp\n    /**\n     * Analyzes a string.\n     *\n     * Detailed arguments can be found here in the link\n     *\n     * @param array $body String to be analyzed\n     * @param array $args OPTIONAL Additional arguments\n     *\n     * @return array Server response\n     *\n     * @see https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html\n     */\n    public function analyze(array $body, $args = []). @thePanz +1 for integration test. @thePanz the test is fine\nThe error you got is a docker pull error, so nevermind, I re-started Travis and all is green.\nSo ok to merge for me!. @ruflin \ud83d\udc4d to merge it as with php_cs_fixer we get support for PHP 7.3. @dbu  that's really interesting.. I've had a look at the code and _responseString is never accessed after the use in getData(). Does it really created a problem in memory consumption ? Glad that you discovered it, maybe this could save life to lot of people :) Do you think that this could be the only way to solve it ? . I agree with you. I think we can proceed this way right now. @ruflin what do you think on this ?. LGTM!. @EliuFlorez can you please explain better the use case ?\n\nElastica version \nElasticsearch version\nyour error output\nthe stack trace?. @krisbuist Thank you very much for your PR!. Hi actually I discourage the use of Elastica and in general this kind of libraries without composer, anyway, if you want to try it without the use of composer first you should consider libraries required by composer \n\nJSON\n\"php\": \"^7.0\",\n\"psr/log\": \"~1.0\",\n\"elasticsearch/elasticsearch\": \"^6.0\"\nwhich should be installed and autoloaded too.. @camohub did u solved?\n. if there's something we can help about ur implementation feel free to ask otherwise I think we could close this issue. what do u think @camohub ?. @massimilianobraglia :\n- why introducing native_function_invocation right now?\n- is this process to be applied during linting? if so why no applying during a new release? . @massimilianobraglia & @ruflin make sense to me. \n- So let's use this on linting\n- don't backport it to 6.x branch. @EliuFlorez please be a bit more declarative in PR's... give us some context in order to understand what u want to achieve. @EliuFlorez please be a bit more declarative in PR's... give us some context in order to understand what u want to achieve.\n(it looks like this PR is part of another one #1607 but not sure). maybe a deprecation message could be better in a next release, considering it was never really released as deprecated, I'll just leave @deprecated. What do u guess ?\n. anyway I'll follow your suggestion to trigger a deprecation\n. setFilter has been deprecated long time ago,\nhave a look here #1138 \nI've also had a look on a bunch of commits even inside this one : 47938554412886f61a3b87d655cb7bf78faee24b\nwhich is from 21/07/2015 so it looks like this is very old\n. argh!!!.. I forget that ones :)\n. Ok no I think to have a more clear overview of the problem :\nin ES we have in SuggestBuilder these params :\n- protected static final ParseField TEXT_FIELD = new ParseField(\"text\");\n- protected static final ParseField PREFIX_FIELD = new ParseField(\"prefix\");\n- protected static final ParseField REGEX_FIELD = new ParseField(\"regex\");\n- protected static final ParseField FIELDNAME_FIELD = new ParseField(\"field\");\n- protected static final ParseField ANALYZER_FIELD = new ParseField(\"analyzer\");\n- protected static final ParseField SIZE_FIELD = new ParseField(\"size\");\n- protected static final ParseField SHARDSIZE_FIELD = new ParseField(\"shard_size\");\nI think we should follow what ES is doing, prefix and text still exists in all latest branches \"5.0/5.x/master \".\nAnyway\nwe are dealign with the :\n- field \n- size\n- shard_size\n  with a setParam\nwe are dealign with the :\n- text\n- prefix\nwith a property\nI think the idea of @ruflin is the more smoth and logic to use PARAMS; and maybe we are loosing analyzer :)  \nwhat do you think guys ? @ruflin @Zyqsempai ?\n. Ok I understand ur point @Zyqsempai but I think we have mixed problems : \n1 we need to solve the skipped test by CompletionTest.php class\n2 we need clarify if text has been dropped or removed (it looks like in ES that text is not just a wrapper of prefix )\n3 we, also, have not implemented regex in suggesters completion\ni propose this approach : \n1 - merging the #1213 (which just solves the tests)\n2 - we should implement regex \n3 - text has not been deprecated and not even removed everywhere, I understand that maybe is for BC but there's nothing inside ES (branches that explains that it remains for BC). \nMy suggestion is to keep text (until we had the evidence Elastic want to remove it) and prefix and add regex, and implement them through setParam as suggested by @ruflin which seems a more optimised solution.\nSo the idea is to split 1 from 2-3 which could be done together.\nHow does it sounds ?\n. ok for me guys \ud83d\udc4d \n. @ruflin done.\n. @ruflin  have a look now :) my fault\n. @ruflin sorry ... but today \"is not the day\" ... my fault, sorry for wasting time :) hope next fixes.. then turn off the computer \ud83d\ude04 for today.\n. @ruflin ok \ud83d\udc4d \n. sounds good to me :) update to PR coming.. yep!  the docker-compose up -d has been removed from travis now is in the make file. in this case docker-compose is already installed on travis, and I updated to the latest docker version as here : https://docs.travis-ci.com/user/docker/#Installing-a-newer-Docker-version. if u prefer having a version I should revert the updates. maybe using docker-compose 1.8.X, and the default docker-engine. \ud83d\udc4d . that's a good point don't know why I choose 2 :) I'm executing tests again on my local dev-machine than I will push it to remote. mmm ok but start is never called in the Makefile. If you want the docker-compose up -d inside the start I should change also tests and test the have inside make setup with make start. How does it sounds ?. ok @ruflin  as u suggested I reverted some old code which installed a specific version of docker-compose I just upgraded to a more recent version, and I find a way to update the docker engine to a fixed version 1.13.x. \nThis would allow us to use in future docker-compose file version 3.0 and 3.2. @ruflin moved to start. @ruflin see the comment below: I get the previous code for docker-compose install back. this way you can still update the docker engine as docker compose. @ruflin  I squashed everything in one commit, I think it would be better. checkout the new commit now u can set the docker version. type corrected. we will remove it approaching the 6.0 ;). no my fault :) something that should be removed. ok I'll update it in the next PR. I was testing also the BoostingTest.php, and I forget to remove it during the creation of the PR. in the next PR I will update it.. dunno why :) revert in next PR, sorry.. done!. @ruflin Another way to do it would be to add a sanitizer inside HTTP transport, and the make some tests against it. I prefer this solution, I mean leaving the responsibility on the shoulder of the developer. But we can discuss it if u prefer.\nI'll remove the comment in CHANGELOG. Ok got it, I tried executing tests with new deps and php5.6\nfirst error : \nProblem 1\n    - This package requires php ^7.0 but your PHP version (5.6.31) does not satisfy that requirement.\n  Problem 2\n    - Installation request for elasticsearch/elasticsearch dev-master -> satisfiable by elasticsearch/elasticsearch[dev-master].\n    - elasticsearch/elasticsearch dev-master requires ext-json >=1.3.7 -> the requested PHP extension json has the wrong version (1.2.1) installed.\ndue to composer.json reqs in es-php, so I try using --ignore-platform-reqs in order to skip php platform requirements.\nThen we have another error :\n\nParse error: syntax error, unexpected ':', expecting ';' or '{' in /root/composer/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php on line 95\nCall Stack:\n    0.0002     234056   1. {main}() /root/composer/vendor/phpunit/phpunit/phpunit:0\n    0.0184    1065728   2. PHPUnit_TextUI_Command::main() /root/composer/vendor/phpunit/phpunit/phpunit:52\n    0.0185    1066480   3. PHPUnit_TextUI_Command->run() /root/composer/vendor/phpunit/phpunit/src/TextUI/Command.php:116\n    0.9737   32252296   4. PHPUnit_TextUI_TestRunner->doRun() /root/composer/vendor/phpunit/phpunit/src/TextUI/Command.php:186\n    1.0118   32801632   5. PHPUnit_Framework_TestSuite->run() /root/composer/vendor/phpunit/phpunit/src/TextUI/TestRunner.php:517\n    2.2593   40272824   6. PHPUnit_Framework_TestSuite->run() /root/composer/vendor/phpunit/phpunit/src/Framework/TestSuite.php:722\n    2.2648   40276728   7. PHPUnit_Framework_TestSuite->run() /root/composer/vendor/phpunit/phpunit/src/Framework/TestSuite.php:722\n    2.2649   40281032   8. PHPUnit_Framework_TestCase->run() /root/composer/vendor/phpunit/phpunit/src/Framework/TestSuite.php:722\n    2.2649   40281656   9. PHPUnit_Framework_TestResult->run() /root/composer/vendor/phpunit/phpunit/src/Framework/TestCase.php:860\n    2.2663   40284560  10. PHPUnit_Framework_TestCase->runBare() /root/composer/vendor/phpunit/phpunit/src/Framework/TestResult.php:686\n    2.2680   40302592  11. PHPUnit_Framework_TestCase->runTest() /root/composer/vendor/phpunit/phpunit/src/Framework/TestCase.php:905\n    2.2690   40303744  12. ReflectionMethod->invokeArgs() /root/composer/vendor/phpunit/phpunit/src/Framework/TestCase.php:1054\n    2.2690   40303848  13. Elastica\\Test\\Bulk\\ResponseSetTest->testIsOk() /root/composer/vendor/phpunit/phpunit/src/Framework/TestCase.php:1054\n    2.2690   40304024  14. Elastica\\Test\\Bulk\\ResponseSetTest->_createResponseSet() /elastica/test/Elastica/Bulk/ResponseSetTest.php:21\n    2.2691   40304184  15. PHPUnit_Framework_TestCase->createMock() /elastica/test/Elastica/Bulk/ResponseSetTest.php:145\n    2.2725   40587416  16. PHPUnit_Framework_MockObject_MockBuilder->getMock() /root/composer/vendor/phpunit/phpunit/src/Framework/TestCase.php:1460\n    2.2726   40587792  17. PHPUnit_Framework_MockObject_Generator->getMock() /root/composer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/MockBuilder.php:118\n    2.3138   40756808  18. PHPUnit_Framework_MockObject_Generator->getObject() /root/composer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php:275\n    2.3158   40954640  19. spl_autoload_call() /root/composer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php:305\n    2.3160   40954880  20. Composer\\Autoload\\ClassLoader->loadClass() /root/composer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php:305\n    2.3163   40955064  21. Composer\\Autoload\\includeFile() /root/composer/vendor/composer/ClassLoader.php:322\n\nyou can see travis build fail here\nany idea anyone ? maybe it's an easier task not but I'm nop sure about it.\nmaking a quick search it depends on this issue \n@ruflin would you like from me to get a little more deeper ?. no to be honest I'll be evaluate in a next PR if we still need _checkScriptInlineSetting()\nas ES6 has script inline and stored allowed by default. So no need to enable them by elasticsearch.yml\n. I agree... better to leave the code but remove the tests. right. I removed the entry in the changelog.. my mistake sorry.. ok I raise a NotImplementedException('simulate API on Pipeline not yet implemented.');\nwhat do u think ?. yes... sorry! removed now ;). yes with the ENV variables. yep :) sorry. - hdr histogram was never implemented, its not a br but new code\n- compression was changed since ES2.3 so this could be a BC but considering we are on the 6.x and no one have during these years have suggested this change, this method has never been used.. at a quick and first sight it doesn't look to me a real BC, but I'll go a bit deep into it : so stay tuned!. yep sorry my fault :). @ruflin done!. Why not extending AbstractSimpleAggregation which already have setScript?. gapPolicy has a default value == \"skip\" what about setting in method signature ?. this method is already in the parent class, it should work properly. Can you check it ?. @maltehuebner I've also noticed a \"merge commit\" from master in your commits, what about rebasing it ? in order to have the history clear (@ruflin what do u think)? . gapPolicy has a default value == \"skip\" what about setting it in method signature ?\n. @maltehuebner I've also noticed a \"merge commit\" from master in your commits, what about rebasing it ? in order to have the history clear (@ruflin what do u think)?. @ruflin I suspected that :) but not sure tnx again.. is this class name right ?.  here the 2nd parameter is array. ahahahah no problem ! luckily CI saves us from this. Maybe we can update phpunit accordingly, what do u think ?. yep. I know and u're right. I'll do it\n. @ruflin I'm facing this issue with the snapshot, and I didn't find documentation about it :\nbin/elasticsearch-plugin install --batch ingest-attachment\nERROR: attempted to install release build of official plugin on snapshot build of Elasticsearch\nDo you have an idea about it ? . yes it's useful but I'm managing to find the right URL :)\nthis is not working\nhttps://snapshots.elastic.co/downloads/elasticsearch-plugins/ingest-attachment/ingest-attachment-7.0.0-alpha1-SNAPSHOT.zip\nany hint on this ?. @ruflin :) finally I've been able to build the URL \ud83d\udc4d \nhttps://snapshots.elastic.co/downloads/elasticsearch-plugins/ingest-attachment/ingest-attachment-7.0.0-SNAPSHOT.zip. done #1574 :). @massimilianobraglia why did you set default value here, and not for example in setTargetField ?  . I really don't like it putting it here, but I understand it could be the only solution until php-cs-fixer is released for PHP 7.3\n. No problem u're doing a huge Monster job!!!\nIt's really a lot! If you don't mind I'll have a review on default values on \nall classes :) maybe I can be of help. @osavchenko can you explain me better the problem ?. locale shouldn't be 'ENGLISH' as default ?. default value should be --> yyyy-MM-dd\u2019T'HH:mm:ss.SSSZ. default value --> yyyy-MM-dd\n. locale default value == 'ENGLISH'. default value should be null. default value is skip. null default value. gap_policy and format have their own default values. cardinality has its own default value. default timezone --> UTC. default value arc. default value m. defaults to 5. dafault to 10,000. default value for gap_policy. - setLowFrequencyOperator\n- setHighFrequencyOperator\ndefault value or. default value multiply. - boost_mode\n- score_mode. default value arc. default vale for size. default value zero_terms_query. default value to 1.0. default value for max_query_terms. - min_term_freq\n- min_doc_freq\n- max_doc_freq\n- min_word_length\netc.. \nhave default values. also \n- boost_terms. default to avg\n. defaults to false. defaul or operator. or is the default operator. maybe null value as default too ?\n- @param Request  $request\n- @param Response $response\n. window_size default value 10. default to 5. default to missing. Defaults to 2. Defaults to 1. min_word_length defaults value to 4. - max_inspections\n- min_doc_freq\n- max_term_freq\nhave their own default value. default value to 0.95. The default is 1.0. The default is set to 1.0. Defaults to 2. Defaults to 0.01f. Ok got it, you can remove the test.. yep \ud83d\udc4d . @ruflin & @massimilianobraglia I agree with the idea of having default values in Elastica. . @keradus why this change ? do we strictly need +2.14 ? Otherwise ^2.0 is enough. what do u think ?. @keradus clear that's sound reasonable :) \nand thank u for supporting PHP 7.3 we made some tricks in order to let php_cs_fixer working properly on Travis.. \ud83d\udc4d for this in 5.x branch. @ruflin it should break anything, i'm doing some tests on that and then I let u know.. I understand the matter about maintainability perspective, and I agree partially. I mean maintaining defaults could be a bit annoying and without a lot of values for a library as Elastica. At the same time I'm wondering if these values could be useful not only in terms of documentation but also in order to restore default behaviours.. i had a look a bit more deeply, and if you look the value of $info here\nthe value contains also body.\nphp\n(\n    [request_header] => GET\n    [http_code] => 200\n    [body] => {\"took\":4,\"timed_out\":false,\"_shards\":{\"total\":5,\"successful\":5,\"skipped\":0,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":0.2876821,\"hits\":[{\"_index\":\"dynamic_http_method_test\",\"_type\":\"_doc\",\"_id\":\"1\",\"_score\":0.2876821,\"_source\":{\"test\":\"test\"}}]}}\n). @ruflin @massimilianobraglia totally agree :) sorry for been so late in reply. yep, but not right now, as I learned from them the wait 4 the release of ES 7.x\nAt the moment I had a look and it doesn't seem their working on it. \nBut as soon they'll update the library we'll update it.. well LGTM,\nas you suggested this is for aggregation but is also for suggest, what about implementing a test also for this use case?. yep that's the idea. ",
    "elcheco": "Ok. I'll do it :-)\n. ",
    "mablae": "Another awsome feature! I will use it. Thanks.\n. Maybe this could be wrapped into some kind of Auth Layer since also Basic Auth is now possible? \n. No, there is a dedicated bundle to integrate this standalone lib into a Symfony2 Project: https://github.com/FriendsOfSymfony/FOSElasticaBundle\nWhatever you did, (I asume you ran composer update) has nothing to do with the deps of this package. For better unterstanding, how things work take a look at the composer.json of this Project: \n\"require\": {\n        \"php\": \">=5.3.3\",\n        \"psr/log\": \"~1.0\"\n    },\n    \"require-dev\": {\n        \"guzzlehttp/guzzle\": \"5.3.*\"\n    },\nAs you can see, the only dependecy is psr/log. Guzzle is required in --env=\"dev\" to run all tests successfully, but the usage of guzzle in production is optional.\n. ",
    "torinaki": "@ruflin thank you for quick response. I'll prepare more functional tests with another PR soon\n. I just made it like that because in contributing notes is mentioned that code must be in PSR-2 code style, but exactly PSR-2 says that:\n\nProperty names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.\nhttps://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md#42-properties\n. \n",
    "trueinviso": "whoops sorry, I meant to post this in Fantastic elastic search, it uses elastica. \n. ",
    "jippi": "Never mind, it can be set using setParam - very low level, don't know if it make sense to expose it as a method at some point :) \n. I think it makes very good sense to add a proxy function for it :) \nI tried to get for context in the src/ and came up empty - so assumed it wouldn't be possible - by chance I found the param methods :) \n. ",
    "jeskew": "This would certainly make #948 easier. Is this something that's already being worked on or would you be open to a PR?\n. The AWS SDK for PHP also exposes a class that can sign an arbitrary PSR-7 request (as detailed here). @ruflin, would you be open to a PR that added an integration for this behavior if it meant adding a dependency on the SDK?\n. @ruflin I sent a pull request bumping the Guzzle dependency to v6 (#1023), which should aid in getting this out the door.\n. @ruflin I wasn't sure how to classify the update to the changelog. Would you consider this a backward compatibility break?\n. @ruflin squashed! Thanks for your help on this.\n. @ruflin I don't believe the CircleCI failure is related to this pull request; all recent PRs are failing with a similar message.\n. @ruflin The changelog has been updated and the commits squashed.\n. ",
    "xhamr": "Thanx @im-denisenko \nI've made a little change you state, but I'm still getting the error Couldn't connect to host, Elasticsearch down?\nI'm using this setup \n``` php\n$client = new Elastica\\Client([\n    'connectionStrategy' => 'RoundRobin',\n    'connections' => [\n        [\n            'host' => 'xx.xx.xx.233',\n            'port' => 11112,\n        ],\n        [\n            'host' => 'xx.xx.xx.234',\n            'port' => 11112,\n        ],\n    ],\n])\n```\n. ",
    "frangeris": "In facing the same issue, test your code @im-denisenko and still getting Couldn't connect to host, Elasticsearch down?\nSo I tried using official library to see if could be something wrong with my ES conf, and test this code...\n``` php\n$hosts = [\n    'xxx.xxx.xxx.xxx:9200',\n    'xxx.xxx.xxx.xxx:9200',\n    'xxx.xxx.xxx.xxx:9200',\n];\n$client = ClientBuilder::create()\n            ->setHosts($hosts)\n            ->build();\n```\nThis works, so... where is the issue?\n. @ruflin yep\nGET request to my <ip>:9200 and 200 is the response....\njson\n{\n  \"status\": 200,\n  \"name\": \"master\",\n  \"cluster_name\": \"elasticsearch\",\n  \"version\": {\n    \"number\": \"1.7.1\",\n    \"build_hash\": \"b88f43fc40b0bcd7f173a1f9ee2e97816de80b19\",\n    \"build_timestamp\": \"2015-07-29T09:54:16Z\",\n    \"build_snapshot\": false,\n    \"lucene_version\": \"4.10.4\"\n  },\n  \"tagline\": \"You Know, for Search\"\n}\n. ",
    "bartclarkson": "Inasmuch as deleteByQuery seems to be in a non-favored status, it probably would be good to formalize another approach and associated test.  \nOddly enough, I never interact with the Search object directly, as it is abstracted/injected by FOSElasticaBundle handlers.  So for my immediate purposes, I have simply taken your excellent suggestion to pass an empty array rather than getData(). \nNevertheless, in the meantime, I have commented out the following untested code in my project for when I can spend some time with it.  I believe it is more along the lines your suggestion to use ScanAndScroll.  Perhaps it might find a place to live in Elastica once perfected. \nphp\npublic function deleteByScanAndScroll(\\Elastica\\Search $search, $expiryTime = '1m', $sizePerShard = 1000)\n{\n    $scanAndScroll = \\Elastica\\ScanAndScroll($search, $expiryTime, $sizePerShard);\n    foreach($scanAndScroll as $shard) {\n        $documents = [];\n        foreach ($shard->getResults() as $result) {\n            $documents[] = new \\Elastica\\Document($result->getId(), [], $result->getType());\n        }\n        foreach($search->getIndices() as $index) {\n            $index->deleteDocuments($documents);\n        }\n    }\n}\n. @ruflin, for what it's worth, I think the scope of the Elastica project is sized correctly.  It stands in the gap in making Elastic Server extremely convenient for PHP developers.   Providing a bug-free PHP corollary to all posted Elastic API is plenty of responsibility.  This particular thread is right at the edge of \"core api\" and \"implementation decision\".\nPersonally, as a Symfony2 guy, I'm a huge fan of FOS Elastic bundle.  I couldn't possibly be happier about the approach whereby Doctrine entities are translated over to Elastic Server in an ongoing way, or as a wholesale refresh when development changes direction.  The convenience is extraordinary.\nPerhaps links to such management projects as the ff-elastica-manager might be linked on main README.md.\nIs it presently the plan to provide a wrapper of the upcoming plug-in?  The functionality of the plug-in seems rather modest to me.  The argument for building the scan approach into Elastica's deleteByQuery is not really negated.\n. ",
    "killerwolf": "+1\n. I'am facing the same issue \nI upgraded from 2.3.1 to 2.3.2 (because i am still using ES 1.7 with PHP5.6)\nUncaught PHP Exception Symfony\\Component\\Debug\\Exception\\FatalErrorException: \"Parse Error: syntax error, unexpected '->' (T_OBJECT_OPERATOR)\" at /var/www/application/vendor/ruflin/elastica/lib/Elastica/Query.php line 404\n. ",
    "lenybernard": "Thanks, it looks good !\nHowever, this is breaking things when a connection is given, it doesn't call the getConfig and then the compression param is not set correctly.\nFor the symfony guys who are using https://github.com/FriendsOfSymfony/FOSElasticaBundle, I made the PR https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/932 to set the compression param by default and avoid to crash.\n2 notices, It should be interesting to up the version and it should be cool to have a readme to have more details about the request compression effects. \nThank you !\n. ",
    "giorrrgio": "@ewgRa I'm not doing array to json conversions, at least not directly. The query I reported was obtained from the Symfony profiler with FOSElasticaBundle.\n@im-denisenko I'm using Elastica Http transport and PHP 5.6.4\nIf you need other details or a test case to reproduce the issue let me know!\n. @ewgRa the point is: the query is not giving me expected results, and it's not related to the way the query itself is encoded and displayed by the FOSEB collector or the Symfony profiler.\n. @ewgRa \n\nBecause Elastica actually run query without escaping unicode.\n\nMy issue is that Elastica is not giving me the expected results. Let's remove the Profiler and the Collector from the equation, they are not relevant. \nI run a Term query with valid utf-8 diacritics inside it and I don't get the results I expect, if I run the same query with curl, I get my results. I will try to give a test case asap.\n. @ruflin after deeper investigations I guess my problem is somewhere else in the chain, here's the test:\nhttps://github.com/giorrrgio/Elastica/blob/diacritics-test/test/lib/Elastica/Test/Query/TermTest.php#L31\nMaking a PR right now\n. @ruflin I am sorry, Elastica here was not the issue, at all. The issue was with pagination, I had a bug that set a fixed offset that I didn't notice and it was always 10 (so that very particular search had only 1 result and with an offset of 10 produced 0 results). Sorry again and thanks for the patience!\n. ",
    "JustinHook": "@ruflin I've added the const and updated the @param.\n. @ruflin done\n. It seems like codecov has an issue with multiple coverage reports.\nThe coverage of Elastica\\Rescore\\Query.php is 92.59% [1] with this change compared to 80.64% [2] from master.\nI also think that if the build is showing as green in github then it shouldn't require someone to double check in travis that there was infact no errors in any of the builds.\n[1] https://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=601af3af5694a533de829b18c78d072c9fc44477\n[2] https://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=57b9da5bcc08d73a97920b32b1995f8f3af7413a\nOn a separate note, it looks like the test Elastica\\Test\\StatusTest::testIndexExists is inconsistently passing/failing. Both these builds are against the same commit https://travis-ci.org/ruflin/Elastica/builds/95094404 and https://travis-ci.org/ruflin/Elastica/builds/95090736\n. @ruflin are you able to manually trigger a codecov build against master to see if it handles multiple reports any better now?\n. @ruflin can you kill this build, it seems to have got stuck https://travis-ci.org/ruflin/Elastica/builds/95446866\n. @ruflin they still seem stuck\n- https://travis-ci.org/ruflin/Elastica/builds/95560594\n- https://travis-ci.org/ruflin/Elastica/builds/95446866\n. @stevepeak codecov has been run again but this time producing 3 coverage xml files. It doesn't seem like it combines the reports together as the # of hits is lower. This also affects the coverage % reported\n1 coverage file = https://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=601af3af5694a533de829b18c78d072c9fc44477\n3 coverage files = https://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=dcabb132ad8cce96b6ce31d278515e2ce23cf0c8\n. @stevepeak it still doesn't appear correct.\n3 separate coverage xml reports = 80.64%\nhttps://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=2b4eb2c1731c7c2d8f4dbc5e5b08818dd4f6c3ce\n1 coverage xml report = 92.59\nhttps://codecov.io/github/ruflin/Elastica/lib/Elastica/Rescore/Query.php?ref=19aa1e23ed5424469e6a99fb2e483b20e59c3ccb\n. Once https://github.com/ruflin/Elastica/pull/1009 has been merged I'll rebase which will fix the build.\n. ",
    "markeilander": "Done..\n. I havend't touched any test files....\nI'm not sure what went wrong, i wanted to add 2 functions to Elastica/lib/Elastica/Aggregation/DateHistogram.php\nDoes your build proces write testcases for this kind of changes?\n. Aaaaaah i see.... my bad.. i will fix this asap.\n. Done -> https://github.com/ruflin/Elastica/pull/947\n. Made a new pull request: https://github.com/ruflin/Elastica/pull/950\n. ",
    "xkidro": "+1 for this, I currently use the elasticsearch-php sdk but found that I need to implement high level functions myself :(\n. ",
    "erichard": "Hello there, I'm using the official elasticsearch-php SDK but I lack elastica feature like fluent builder. \nAre you still working on this ? What is missing to move on ? . ",
    "akalongman": "Someone is working on this?. @ruflin this issue is still actual. @aguvillalba why is this closed?. ",
    "snider": "added a pull request, not sure if its what you were after but works nicely for me and would be backwards compatible \n. sure thing, will do it on my lunch break :)\n. @ruflin not sure if you get notifications on PR activity.\ndoes Travis not work when there is a merge conflict?\n. ",
    "lionel-gattegno": "to my point of view, a \"setRawCoordinates\" function would be generic enough for all kinds of situations... Thanks\n. ",
    "Lumbendil": "Going to follow this issue aswell :) Btw, you have Thrift support was removed dupplicated.\n. Yay, this got updated.\nIs there any simple issue which could be tackled by someone who hasn't delved to much on the library, to contribute a bit?\n. I already have docker-compose (Thanks for providing a test env with the lib!) I'll try to tackle some of them if I can get time for it :D\n. @ruflin out of curiosity, other than verifying there haven't been introduced new bugs, is there anything else which should happen to go from beta to 3.0?\n. Just asking because I have a dependency to it inside a repo which is the one I depend on my projects, so I have to write twice the code, and I wanted to get an estimate on how long I'll have to depend on \"3.0.0@dev\" :)\nIn the case of a library such as this I'd be more inclined to go 3.0.0 and release bug fixes as they come, since people shouldn't depend on \"*\" and if they do and see composer update updating to a new major they should worry a bit about what might have changed.\n. @Floyd25 it's Elastica 3.0 (and I believe 3.x) is written for ElasticSearch 2.x, so it is compatible. As far as stability of 3.0 goes, it was tagged just yesterday, but since ES 1.0 to 2.0 had more deprecations than BC breaks, it should be pretty stable.\nCan't assure there won't be bugs, so do some testing on your end to ensure there are no bugs on the parts you're using. I'm probably deploying soon with it since I use only a small subset.\nPS: Ninja'd\n. @ruflin if they use master, they are already using 3.0, so what's the danger on that case? Also, pretty common when people abuse \"*\" is the \"minimum-stability\" \"dev\", so those are using 3.0 already aswell.\n. :+1: will stick to ~3.0.0@dev for the time being. As a side note, I read you have no problem on BC breaks on minors (3.0 to 3.1), don't you usually keep compatibility with the previous method signature / keep the previous method pointing to the new method though?\nAsking so I can just do ~3.0 and \"forget about it\" instead of ~3.0.0 :)\n. @ruflin as long as methods are deprecated beforehand, I'll go with ~3.0 :smile: \n. You're right, there are some major changes, the bug you mentioned has been solved in the 2.0 branch as far as I know, but it isn't yet complete.\n. Dipanjan if you're showing them the paginated data, exporting as CSV that\npaginated data is pretty easy. You need to go through each of the pages,\nand for each page write the records to a temp file. By using a temp file\nand only processing a page worth of records at a time, you won't hit the\nmemory limit.\nThis same approach (writing to temp file) can also be used for html, by\nwriting first the headers (all the HTML previous to the first line of\nresults), then the html lines for each record on each page, and finally the\nfooter.\nEDIT: Removed email related response.\n. There is work being done, some queries might work due to them keeping the same syntax from 1 to the other.\nYou can check the state on #968 \n. Since method signatures will change, this should at least bump the minor version (reflection results would change) imho. I didn't see it mentioned, so I thought I'd say it.\n. They are already deprecated and classes have been introduced to replace them.\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Filter/BoolFilter.php\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/BoolQuery.php\n. ",
    "Floyd25": "elastic/elasticsearch#14758 was closed 4 days ago. They said it wasn't a bug\n. Sorry, to ask on this issue page, but: 3.00 would be compatible with elastic search 2.0? We're about to start a new project and would love to use es 2.0 from the start. any hints you could give me if 3.x would be stable enough?\n. ",
    "CedCannes": "@markeilander thank you for your work , I just need to use \" extended_bound \" :+1: \nBy cons it seems that the function setMinDocCount already existed in Histogram\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Aggregation/Histogram.php#L55\nThere are two functions to do the same...\n. ",
    "lukevers": "Hey guys,\nI'm also very interested in this as well. Has anyone started working on this anywhere, or has there only been talk about it?\n. ",
    "gbourgeat": "You're welcome but I'm not inspired for write tests for my case, despite that I seen some examples in your project, sorry :(\n. Yes I did it but Travis don't like that :/. Thks. I fond the solution !\n$upResquestsByTimeRangeFilterAgg = new \\Elastica\\Aggregation\\Filter('upRequestsByMinute');\n$upResquestsToTrueByTimeRangeTerm = new ValueCount('nbDisponibleByMinute', 'up');\n$upResquestsByTimeRangeFilterAgg->addAggregation($upResquestsToTrueByTimeRangeTerm);\n$upToTrueTerm = new Query\\Term();\n$upToTrueTerm->setTerm('up', 'true');\n$upResquestsByTimeRangeFilterAgg->setFilter($upToTrueTerm);\n$dateHistogramAgg->addAggregation($upResquestsByTimeRangeFilterAgg);. ",
    "mortenhauberg": "Both, actually :)\nWent through it manually, used PHPStorm to check it in each file and did the changes manually.\n. :+1: \nSomething like this?\n. Thank you. I'll create a PR for triggering errors next week :)\n. ",
    "davidyell": "I think this is a failure of understanding on my part.\n. ",
    "intech": "A good idea. I'm thinking about the same and found this issue. Are needed methods ResultSet->getDocuments() and Result->getDocument()\n. @ruflin okey! No problems.\n. @ruflin Done!\n. @ruflin all work perfect!\nphp\n$doc->set('name', 'value');\n$index->updateDocument($doc);\n. @webdevsHub you have more experience than me. How to do it better?\nphp\n$doc->setData($this->getSource());\nreplace to getData() ?\nphp\nunset($hit['_source']);\nreplace to\nphp\nif($this->hasParam('_source')) unset($hit['_source']);\nor add whitelist params for Document?\n. @ruflin I propose to add $_whitelist = ['_parent',etc]; \\Elastica\\Document with the list of params that can be there and solve this problem. And then act on the first point.\n. https://github.com/elastic/elasticsearch-php/blob/master/src/Elasticsearch/Endpoints/Source/Get.php#L55\n. @ruflin what should be done? do not understand :(\n. @ruflin thanks! I do not understand because of his poor English, what I need to do. I was afraid to do wrong. :(\n. @ruflin ok! ;)\n. @ruflin Done!\n. @ruflin i'm sorry, it's my fault!\n. hm...\n. @ruflin help me)\nhttps://github.com/intech/Elastica/blob/patch-2/test/lib/Elastica/Test/SearchTest.php#L388 \nWhere did r1, r2? The documents do not have them.\nThese tests are working correctly and my returns all the documents.\nMy commits precisely fix the problem in my project it works.\n. Oh!!! Default limit 10! One minute...\n@ruflin this https://github.com/intech/Elastica/blob/patch-2/test/lib/Elastica/Test/SearchTest.php#L388 and this https://github.com/intech/Elastica/blob/patch-2/test/lib/Elastica/Test/SearchTest.php#L392 not correct working. This nothing routing in documents and nothing work in search. This test only limit size.\n. Paranormal with routing. On my work project everything works fine. On the testing is not considered routing and parent :(\nTry again tomorrow with a fresh mind to see again.\n. I did commit their failed attempts. Maybe someone will see what is my fault?\n. :+1: \n. Done!\n. http://php.net/manual/en/function.unset.php\n\nNote:\nWhen using unset() on inaccessible object properties, the __unset() overloading method will be called, if declared.\n. \n",
    "savdeep": "Tests, absolutely but after verifying above changes.\n. I will do some changes and get back to you\n. Yup, i'll be adding them. @ewgRa whats your take on this pull request?\n. Thanks @ewgRa and @ruflin, creating a mapping objecct before and initiating it with setParam is the right option. Yes we can have that proxy functions but lets do that in 2.0. Cheers.\n. Of course\n. Yes, type should know about timestamp. But in type class there isn't any way of referencing mapping directly (on members). In setMapping method send is called immediately after making mapping, so i needed to set timestamp param before that. There is no room to update type w.r.t  timestamp.\n. setTimestamp is needed, but rest i added for other persons perusal\n. ",
    "eit": "Exactly, the master branch is not ready yet for elasticsearch 2.0 version. I think we should wait for 2.0 branch be complete.\n. Exactly, I have upgraded 2.3.3 already. It works. Thank you guys.\n. ",
    "JunniH": "Thanks for the answers!\n. ",
    "legendik": "Sure, updated.\n. Ok. I think it was always broken according to the first commit of this file. It is broken only if you need to change the shape relation. It works fine with default values (relation type intersects)\n. Thanks!\n. ",
    "rarothedude": "Hi all, i think this should be reversed. I tested this and with the relation variable back to line 68 (same level as the shape variable) and the relation works. {\n  \"status\" : 200,\n  \"name\" : \"Brainchild\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"version\" : {\n    \"number\" : \"1.7.4\",\n    \"build_hash\" : \"0d3159b9fc8bc8e367c5c40c09c2a57c0032b32e\",\n    \"build_timestamp\" : \"2015-12-15T11:25:18Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.10.4\"\n  },\n  \"tagline\" : \"You Know, for Search\"\nHmm this sounds quiet old, isn;t it ? :P. According to these elastic docs it should be at the same level as shape:\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-query.html. ",
    "lakhman": "Thanks!\n. ",
    "redayoub": "Hi, I'm having the same error. Any help please ?\nThanks\n. Thanks @AliHichem \n. I'm using elasticsearch 2.3.2 and  \"friendsofsymfony/elastica-bundle\": \"dev-master#6206199\", \"ruflin/elastica\": \"3.1.1 as 2.99.0\".\n. Same structure:\nphp\nArray ( \n    [query] => Array ( \n        [filtered] => Array ( \n            [filter] => Array ( \n                [bool] => Array ( \n                    [must] => Array ( \n                        [0] => Array ( \n                            [term] => Array ( [category.id] => 4 ) \n                        ) \n                        [1] => Array ( \n                            [range] => Array ( [price_amount] => Array ( [0] => 1 [1] => 3 ) ) \n                        ) \n                    ) \n                ) \n            ) \n        ) \n    )\n)\n. It's working, but with: \n$range->addField('price_amount', [\"from\" => $minPrice, \"to\" => $maxPrice]);\nThanks a lot.\n. ",
    "AliHichem": "@redayoub this is already fixed , you should make your composer.json use \"dev-master\" to get the fix.\n. ",
    "Badlapje": "get this issue now, even though everything worked fine with version 2.3.2 up until now (as it should, given that support for 2.x is now ok with the bundle).  Here's my stack trace;\n\nException trace:\n () at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Exception/ResponseException.php:34\n Exception->__construct() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Exception/ResponseException.php:34\n Elastica\\Exception\\ResponseException->__construct() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php:159\n Elastica\\Transport\\Http->exec() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Request.php:171\n Elastica\\Request->send() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Client.php:621\n Elastica\\Client->request() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/friendsofsymfony/elastica-bundle/Elastica/Client.php:47\n FOS\\ElasticaBundle\\Elastica\\Client->request() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Index.php:496\n Elastica\\Index->request() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Index.php:183\n Elastica\\Index->delete() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/ruflin/elastica/lib/Elastica/Index.php:257\n Elastica\\Index->create() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/friendsofsymfony/elastica-bundle/Index/Resetter.php:100\n FOS\\ElasticaBundle\\Index\\Resetter->resetIndex() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/friendsofsymfony/elastica-bundle/Command/PopulateCommand.php:144\n FOS\\ElasticaBundle\\Command\\PopulateCommand->populateIndex() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/friendsofsymfony/elastica-bundle/Command/PopulateCommand.php:124\n FOS\\ElasticaBundle\\Command\\PopulateCommand->execute() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php:256\n Symfony\\Component\\Console\\Command\\Command->run() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:807\n Symfony\\Component\\Console\\Application->doRunCommand() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:186\n Symfony\\Component\\Console\\Application->doRun() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php:80\n Symfony\\Bundle\\FrameworkBundle\\Console\\Application->doRun() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:117\n Symfony\\Component\\Console\\Application->run() at /home/vagrant/Code/RoeselareVrijwilligt/VrijwilligersTool/bin/console:29\n\nfor those looking for the answer to this one, as described here the answer is to simply add \"ruflin/elastica\": \"3.1.1 as 2.99.0\" in your main composer.json file after \"friendsofsymfony/elastica-bundle\": \"dev-master\"\n. ",
    "Raffaello": "Yes of course!\nI am not sure what I have to write into it..\ncreate a new paragraph for v 2.3.2 would it be ok?\n. ",
    "dbhattacharjee": "@ruflin : By increasing memory limit this can be hidden at present. But we have 7K records in development/stag instance and will have much much more in production. \nI think it is not a core issue of this bundle rather json_decode() function. Is is possible to divide the input into smaller chunks before sending to json_decode() function or make internal sub-calls to ES to get response in batches and then combine them ?\n. With multiple calls to ES, say for each 1K record, we need to change our existing code as well as have to store results from those call and combine them in our code.\nIn short, we do not want to make changes in our code. Is there scope of resolution from this bundle ?\n. @ewgRa That is what I am asking here. This bundle and FosElastica bundles are very cleverly written, well tested and I can not outperform them by writing my own logic. \nIs it possible, if hits is more than  a large number (say 1K), then instead of parsing whole response at one shot, it performs scan and scroll or some other technique so that this memory error does not come.\nFrankly, I am not expert of ES and I do not know scan-scroll or other things. I faced this in my development system and I am asking for help here.\n. Also, scan-scroll is saying to disable sorting (?). we can't do that either as customer need to view results in sorted order as chosen by them in the UI.\n. @ruflin Yes that is my guess too that we might encounter this problem time and again.\nHere is the background :\nWe are storing records in ES. Now customer wants to have a list how many records are inserted into the application for last X days. In the application UI, we are showing records with pagination control.\nNow, they want to export this list as HTML as well as CSV format. For this use case, we are pulling all the records that matched filter criteria and preparing the HTML/CSV.\nWe are using Symfony 2 framework for our application. Currently we are looking into this : http://obtao.com/blog/2014/03/elasticsearch-symfony-export-scan-scroll-functions/\nCan you suggest anything to achieve this situation. Exact coding is not required, if we get some hint then it will help full for us.\nAlso thanks for replying to our queries so quickly :+1:\n. @Lumbendil Thanks for the hint. We are trying to implement this way now.\n. ",
    "jdc18": "@ruflin great work, I did a pull yesterday and I was checking your code nice work\n. ",
    "fubuki": "@ruflin @ewgRa  Thanks for your reply. I will update the change log file and test.\nWhy I use the different api for suggest?   I  need build the  autocomplete function on the production environment so I used elasticsearch and context suggester.\nBut there are some problem when I trace the search result. If you use the _search api for suggest,  elasticsearch will return the hits and suggest result. It will take more time than using  _suggest api.\n_search api average time 203.45 millisecond\n_suggest api average time 5.8 millisecond\nuse _search api \n{\n  \"took\": 228,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\nuse _suggest api\n{\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"song_suggest\": [\n    {\n. ",
    "topak27": "Thanks!)\n. ",
    "kukulich": "It's difficult for me because I work on Windows7 and don't have any experiences with docker yet.\n. Ok, I will try to prepare PR :)\n. https://github.com/ruflin/Elastica/pull/1006\n. Solved by https://github.com/ruflin/Elastica/pull/1006.\n. There's also an option to move all filters to Elastica\\Query and change Elastica\\Query\\Filtered::setFilter() to accept Elastica\\Query\\AbstractQuery\n. All filters are deprecated in favour of queries so this may be done:\n1. Add missing queries (formerly filters), eg. ExistsQuery, MissingQuery, GeoDistanceQuery, ScriptQuery etc.\n2. Remove filters completely or in favour of easier migration mark them only deprecated\n3. Make setFilter() accept only AbstractQuery or in favour of easier migration make it accept both AbstractQuery and AbstractFilter.\n4. Do the same for aggregations.\n5. Return Elastica\\Filter\\Nested and mark it deprecated if other filters will be deprecated too\nSide note: Yes, I tried to migrate to Elastica 3.0.0 and found these issues :)\n. I think it would be good to follow Elasticsearch naming and there are only queries now, see eg. https://www.elastic.co/guide/en/elasticsearch/reference/2.0/query-dsl-geo-distance-filter.html\n. @ewgRa So you suggest to have both GeoDistanceQuery and GeoDistanceFilter in Elastica?\n. I understand your arguments however I think that $query->setFilter(new GeoDistanceQuery); would better follow Elasticsearch naming so it would be easier to find it in documentation.\n. @ewgRa I'm glad wed we found agreement :)\n. I don't know if I have time to do it this year :( Maybe in January\n. :+1: \n. @ruflin Could you please revert these commits https://github.com/ruflin/Elastica/commit/12cecd3dfe265a4202c10c06754088999829bafa https://github.com/ruflin/Elastica/commit/15c2fd193d7cfc8331c55359e17a28c2dabd7074 ? After that I can try to port our application at work to current Elastica master and test it with real data. Thanks.\n. @ruflin I'm sorry, I don't understand what you mean.\n. @ruflin Thanks, I understand it now. I thought the \"readd\" is typo of \"read\" :)\n. Unfortunately I have no time for this now. Maybe in the end of January.\n. I think you can release 3.0.0 if you revert the commits where you have removed Filter\\Nested.\n. I tested actual master and it works perfectly.\n. @ewgRa You're right. I will remove DepracatedException and just trigger an error because filter query still works in ES 2.0.\n. @ewgRa Done\n. @ewgRa I will try to do it. \n. @ewgRa Force pushed. I really don't know how to do it any better.\n. @ewgRa Done.\n. @ruflin I don't know if I understand you correctly. Do you plan to release 3.0.0 without Filter\\Nested?\n. You're welcome. I'm happy that Filter\\Nested returned :)\n. The bug is here: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query.php#L425\nElastica\\Query\\AbstractQuery doesn't implement Countable.. I have tried it but it's not possible to make FilteredTest to work then. This is the only way how I was able to make tests work.\n. @ruflin From the documentation \"Note that any fields referenced inside the query must use the complete path (fully qualified).\"\nThis should work $query->setTerms('hobbies.hobby', array('guitar'));\n. ",
    "awdng": "+1 for this. I just started porting our Application to ES2.0 and ran into this issue. In our application we have a collection of filters that all get added to a BoolFilter which then gets added to a FilteredQuery. Previously in one case we were adding a NestedFilter that contained a BoolAnd Filter that included a bunch of other filters and this NestedFilter get added to the main BoolFilter. This worked perfectly before, but by removing the NestedFilter and replacing it with a NestedQuery it seems to be not possible to construct this type of nested filtering without rewriting everything.\nNot sure i fully understand the \"All Filters are deprecated approach\" and how it will work for complex filtering though.\nIn the end one of our queries for ES 1.7.x which work fine looks like this:\nhttps://gist.github.com/awdng/936993db259d34ff2f78\nBTW, what is discussed here would go into Elastica 3.1 i guess as 3.0 is already in beta ?\n. ",
    "rparsi": "@ruflin This is related to an error in the test code (master branch).\nLine 202 in Query/BoolQueryTest has $boolQuery->addFilter($termFilter);\nwhich throws an error as the BoolQuery class does not have method addFilter (inherited or otherwise).\nI'm trying to construct a simple 'bool' query with 1 'match' and 1 'term' filter.\nShould I follow the code in BoolFilterTest instead?\nI'm trying to do this query using Elastica, but am lost:\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": { \"match\": { \"name\": \"herman\" } }\n    },\n    \"filter\": {\n        \"term\": { \"deleted\": false } \n      }\n  }\n}\n. @ruflin I'm using FOSElasticaBundle which is using elastic v2.1\nI was reading the tests/docs for the master branch.  Hence my confusion.\nMy apologies.\nWhich branch or tag is considered the latest stable version of elastica?\n. ",
    "theDisco": "@ruflin here it is:\nphp -v\nPHP 5.5.30-1+deb.sury.org~trusty+1 (cli) (built: Oct  4 2015 16:23:01) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v2.5.0, Copyright (c) 1998-2015 Zend Technologies\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2015, by Zend Technologies\n    with Xdebug v2.3.2, Copyright (c) 2002-2015, by Derick Rethans\n. @ruflin haha, that is one of the links I have provided in my initial comment :) Nevertheless it doesn't explain why 2) is failing and why 3) is implemented as it is?\n. @ruflin @oldskool  \n1) I like the combined approach of checking, if JSON_BIGINT_AS_STRING was configured and is defined and if not throwing an exception. Will include that in my PR.\n2) I understand that false is the default value, but then we should cast to array, because the rest of the code does not know how to deal with \\stdClass. I will prepare a PR for that and we can discuss it there.\n3) I didn't explain this one well enough. It boils down to these two cases. In this one bigintConversion is not passed to the connection correctly:\nphp\n$config = [\n    'host' => '127.0.0.1',\n    'port' => 9200,\n    'bigintConversion' => true,\n];\nnew \\Elastica\\Client($config);\nIn this case it does:\nphp\n$config = [\n    'host' => '127.0.0.1',\n    'port' => 9200,\n    'config' => [\n        'bigintConversion' => true,\n    ],\n];\nnew \\Elastica\\Client($config);\nAfter debugging a little bit more, it seems bigintConversion has to be added here https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Client.php#L121:\n``` php\n    /\n     * Creates a Connection params array from a Client or server config array.\n     \n     * @param array $config\n     \n     * @return array\n     */\n    protected function _prepareConnectionParams(array $config)\n    {\n        $params = array();\n        $params['config'] = array();\n        foreach ($config as $key => $value) {\n            if (in_array($key, array('curl', 'headers', 'url'))) {\n                $params['config'][$key] = $value;\n            } else {\n                $params[$key] = $value;\n            }\n        }\n    return $params;\n}\n\n``\n. I don't think it is that bad, because the client acts as a factory and uses configuration to set up the underlying ecosystem. Transport should be primitive and only responsible for transferring the data between two endpoints. The response creation can be moved to the request object and request object can be composed of serializers which take care of json transformation. This way you would completely decouple the static calls to JSON object. Nevertheless this implementation exceeds the scope of the problem we are dealing with in here. I also think all of that is not necessary if you are going to replace the communication layer with php-elasticsearch (as stated in #944 and #989).\n. I think detection, if BigInt is supported or not is a good thing. The goal of libraries like elastica or es-php is to hide the details of low or even high level implementations and let the user concentrate on the use case. I like the simplicity of just instantiatingElastica\\Client` and using it without providing and connection details. To be honest, if I wouldn't hit this bug, I would probably never know about the whole licensing hassle with json libraries and to be honest I wouldn't like to know about it in the first place, because it is very sad... php has already enough bad rep, anyway...\nAfter saying that I think it is a good thing to have 2 serializers, one with BigInt support and one without. I would add a detection for BigInt support by default and let the user overwrite the serializer, if necessary. After all you want to solve things for the user and not make them more complicated as they already are. You should also think about aligning with the requirements, es-php is >= 5.3.9, elastica >= 5.4.0.\nLet me know, what you think about that?\n. PR is ready, when can I expect it to become available through composer?\n. @ruflin Sorry, let me clarify, when will you create a tag I will be able to configure in composer.json? I haven't found any information on how you deal with versioning...\n. @ruflin I was rather thinking about 3.0.0-beta2 :)\n. @ruflin This works out really well for me, but you need to think about people, who are still using facets instead of aggregations. They will have to invest some time to refactor their code. You are completely right though, people should be encouraged to upgrade to newer versions.\n. Thanks for taking your time and merging it so quick!\n. @ruflin Sure, done.\n. @ruflin if you look at the implementation of JSON::parse() you actually do not have to pass true as a second parameter:\nphp\n        // extract arguments\n        $args = func_get_args();\n        // default to decoding into an assoc array\n        if (sizeof($args) === 1) {\n            $args[] = true;\n        }\n        // run decode\n        $array = call_user_func_array('json_decode', $args);\nAnd no, passing true would not have any side effects.\n. Yes, this test would also pass without L215, but L215 makes the difference :)\n. No, it wouldn't since the return value of https://github.com/ruflin/Elastica/pull/1005/files#diff-b364251d02e70310f3c6e443372397d3L208 would be \\stdClass and not an array and there is not conversion or casting happening till the end of method.\n. BIG_INT_* setting converts integers bigger than PHP_INT_MAX to a string, so yes, the response will be different (well some data types will be different), but it is the only way to deal with this without overflowing the integer.\n. ",
    "VasekPurchart": "I don't think that triggering an error at the file level is a good idea, because there are quite a lot tools/libraries, which scan entire folders and include/require files to find classes etc. This would then trigger the error even when noone is trying to use the deprecated files themselves and can be quite confusing.\nWhich is also the problem with the 3rd point you wrote, I think that when there are a lot more of the deprecated classes, it would be quite tedious (and maybe in some combinations even impossible) to have tests for these.\nThis all nails down to a reasonable convention - that files, which define new symbols should have no side effects (execute something).\n. For example Doctrine AnnotationDriver, I know this is something you should not let search your vendor complete vendor dir, but I have seen such cases (and maybe other tools, where it makes more sense, practically every tool that goes through files without tokenizing the content).\nBut yes, I looked at Symfony and they are using this if a whole class is deprecated, so I guess the real life impact is ok.\n. ",
    "hakman": "We have a product that works as a proxy for Elasticsearch to accept and parse logs.\nI am writing some examples for that using various languages and libs. One of them is Monolog and had trouble shipping logs with it, because of this issue.\nWe are also modifying our proxy, but thought this might help others in the future.\n. ES treats both PUT and POST bulk the same way, so I don't see any backwards compatibility issue. This would just make the Elastica behave like most other ES libs.\nhttps://github.com/elastic/elasticsearch/blob/2.1/rest-api-spec/src/main/resources/rest-api-spec/api/bulk.json\n. Done, thank you!\n. ",
    "otisg": "+1 for supporting POST\n. ",
    "zoglun": "Notice that the master branch with Bool fix only support MW 1.27 &1.27+. Is there anyway plan on fix Elastica for MW1.26 with PHP7?\nI tried MW 1.27.0-wmf.9 yesterday on my server and it does not work well.\n. Oh, sorry for my ambiguous. I am asking for https://www.mediawiki.org/wiki/Extension:Elastica PHP7 support problem. I confused this Elastica with the Extension:Elastica from Mediawiki. \nAgain, sorry for taking your time, and happy new year!\n. @reedy I didn't find any \"existing\" class error on Mediawiki wmf 1.27 Ver caused by this Elastica (master branch). \nThe wmf Ver mediawiki sometimes behave Weird under PHP7. So we set up 3 more HHVM servers for new year trafics and would not try PHP 7 within half year until Mediawiki 1.27 release.\n. ",
    "reedy": "MW = MediaWiki\n\nBool is deprecated now, you can use BoolQuery or BoolFilter if you have PHP7.\nBool will be removed in next releases.\n\nSo MW needs to make sure we're only using the BoolQuery/BoolFilter classes, and bump to the next release when it's available for PHP 7 support\nI presume you mean version 3.0.0? Any idea of a release timescale?\n. It seems only one extension is using the Bool classes, so I've proposed fixes for those in https://gerrit.wikimedia.org/r/261766\n@zoglun Are you running the translate extension on your MW install?\n. https://github.com/wikimedia/mediawiki-extensions-Elastica is just a minimal wrapper around this repo\nhttps://phabricator.wikimedia.org/T122686 is our task for fixing it up for anyone that ends up here looking for an answer :)\nWMF is still on ElasticSearch 1.7.1, so made a request go get that bumped upto 1.7.4... Which allows us to use a newer version of Elastica (2.3.1 or so). We can't use version 3 until we lower our minimum PHP version from 5.4 (that's another can of worms!)\nBumping upto version 2 of ES is going to require more work etc...\nThough, @zoglun does this library not work for you with the classes \"existing\"? Even if they're not used?\n. We don't claim any PHP7 support, but we are working towards it. Remember, we're currently still supporting PHP 5.3.3 Anyway, it's offtopic over here, so we should move it to the phab task you filed.\nWe need specific errors to be able to attempt to fix it :)\n. Perfect, cheers! :)\n. ",
    "JarJak": "+1\n. Could this be also merged to ~2.3? FOSElasticaBundle requires it and the problem still exists in there.\n. Could be, however FOSElasticaBundle works fine with elasticsearch 2.0 if not this BC break.\n. @ruflin what is exactly the root of \"bigger issue\"? Why it couldn't be just merged to 2.3 branch and be tagged as 2.3.2?\n. I would be nice to create 2.3.2 branch/tag with this fix.\n. 2.3.2 needs exactly this PR\n. ",
    "nickshanks": "\"Is there a reason you comment on commits and not the PR changes.\" None other than that's the first place where I saw the code.\n. Wow, you're fast. It takes me 8 days to catch up with those emails.\n. ",
    "Isinlor": "When it comes to spiting Elastica and Transformers:\nhttp://php-and-symfony.matthiasnoback.nl/2014/04/theres-no-such-thing-as-an-optional-dependency/\nhttp://paul-m-jones.com/archives/4211\nI think it could be a good read before deciding one way or another ;) .\n. ",
    "cameronmurphy": "Could you please also fix ActionException::getErrorMessage()?\n$message = \"$opType: $path caused $error\";\nWhen $error is an array, the message becomes something like 'update: /customer/customer/26210548 caused Array'\n. @ruflin https://github.com/ruflin/Elastica/pull/1089\n. @ruflin Sorry to waste your time - I have realised you updated Response::getError() to always return a string here https://github.com/ruflin/Elastica/commit/99d7cd147c469e20e0c8e550c431712edda4dd19. I will close this :)\n. ",
    "lynx-ripe": "Sorry, it doesn't work for us - at least with the \"dev-master\" branch:\n1) we update the composer lock, it updates ruflin/elastica c000d5d => a8b0b6b;\n2) our code stops working due to the following deprecation error in the Elastica\\Query\\Filtered:\n    Use BoolQuery instead. Filtered query is deprecated since ES 2.0.0-beta1 and this class will be removed in further Elastica releases.\n3) we switch to the BoolQuery as the code suggests;\n4) our code stops working with our Graylog servers, we get \nParse Failure [Failed to parse source [{\"query\":{\"bool\":{\"filter\":[{\"term\":{\"level\":6}},{\"range\":{\"timestamp\":{\"gte\":\"2016-01-20 22:00:00.000\",\"lte\":\"2016-01-21 22:00:00.000\"}}},{\"term\":{\"streams\":\"56016df7e4b039e60c641ce6\"}}]}},\"sort\":{\"timestamp\":\"asc\"}}]]]; nested: QueryParsingException[[graylog2_prod_2] bool query does not support [filter]]\nPlease suggest how can we continue using ruflin/elastica with our Graylog servers.\n. ruflin wrote \"All version of Elastica prior to 3.0 are compatible with elasticsearch 1.*\". Our experiments show that the master branch is not compatible with ES < 2 anymore. Which branch should we use to stay compatible with ES < 2?\nP.S. The node details page in the Graylog GUI says: System Version: 1.2.2\n. ",
    "ahungry": "It may have been an unrelated issue, please disregard, I believe you're correct \n. ",
    "levijackson": "Ok. Yep, I tested it manually with a server that required credentials as well as one that does not require credentials.\n. ",
    "christiancannata": "Unfortunately I don't know how make this query with elastica classes, I can make only simple match or multi match query, I don't understand how can add minimum should match filter with cross fields\n. ",
    "schmeiserd": "I see, my bad! :)\nAre there any plans for the next stable release yet?\n. No urgencies, thanks for your information! :)\n. ",
    "raphaelMalie": "Hello, sorry I never wrote tests before and I have no time to learn it now :/ You can close this PR and apply the fix by yourself, it would be better if possible. Regards, Rapha\u00ebl.\n. ",
    "xjewer": "\nThis method was broken since the array lazy loading push.\n\nit can happen, if create Query from array\nphp\nQuery::create(\n    [\n        'query' => [\n            'ids' => [\n                'values' => [1],\n            ],\n        ],\n    ]\n);\nso, array set through $this->setRawQuery($query); and when execute $Query->getQuery() we get array instead Query object\n. also, maybe it affected #1037\n. :tada: \n. ",
    "yobrx": "+1 with bourvill.\nIt's very laborious to check if variable is null in my project (template Twig, for example)\n. ",
    "bourvill": "Hello @ewgRa,\nIn my case some documents can return a null value in some fields.\nThe previous test gives as result that fields doesn't exists, but the field exists in the document and return a null value.\nThe problem is that we test that field exists and the value is not null as it may be null.\nI agree with the difference of isset function, but on class \"Result\" I think we should test simply existance of field, not the value.\n. This issue was merged, you can close it. ",
    "vinusebastian": "@ewgRa Didn't follow what you said. By default it will still return number of hits right?\nCan you explain? \n. Yes, but Elasticsearch documentation says that search type of count is deprecated?  And that count doesn't have any advantage over query then fetch (provided size of query is 0)\nhttps://www.elastic.co/guide/en/elasticsearch/reference/2.x/search-request-search-type.html\n. Fair enough. Closing the PR\n. ",
    "dario86": "Yeah\n. Ok, i paste my error there\n. ",
    "dimvic": "I modified it a little bit more so you can delete using both Query instances and array queries.\nI also added a test, should be fine, though I am unable to run the tests:\n```\nWaiting on elasticsearch(elasticsearch:9200) to start................\nElasticsearch is not running or is not healthy.\nAddress: elasticsearch:9200\nmake: *** [run] Error 1\n```\nand Travis also fails for some reason irrelevant to the code itself. Could you look into that?\n. Well, I did update the changelog after all, along with the type hint for $query\n. I fixed it, Travis keeps failing due to other kind of issues though\n. squashed\n. ",
    "pangminfu": "this is my query the $articleIDs is array of documentid\n``$query = new Query();\n$query->setSize(count($articleIDs));\n\n$qb = new \\Elastica\\Query\\Ids();\n\nforeach ($articleIDs as $articleID) {\n    $qb->addId($articleID);\n}\n$query->setQuery($qb);`\n\n```\n. ",
    "IgorDePaula": "I tried with multimach because I need search in many fileds. By lucene syntax I mean \"+field:value -field:value\". I see this in a book about elasticsearch.\n. Ok, I will try and the response I post here.\n2016-03-11 11:52 GMT-03:00 Nicolas Ruflin notifications@github.com:\n\nCan you try if that works in QueryString queries? It could be an escaping\nproblem on the Elastica side. Please also provide a code example. That\nmakes it easiest to reproduce and test.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1054#issuecomment-195398653.\n. Ok, with querystring it works. Thanks.\n. I was careful to install this library, but still did not work.\n\n2016-03-14 4:24 GMT-03:00 Nicolas Ruflin notifications@github.com:\n\nThis looks more like your php7 installation doesn't have curl installed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1059#issuecomment-196178832.\n. You noticed that he is complaining that curl_init function is part of the\nnamespace Elastica when curl_init is part of the global namespace?\n\n2016-03-14 9:52 GMT-03:00 principe.borodin@gmail.com \nprincipe.borodin@gmail.com:\n\nI was careful to install this library, but still did not work.\n2016-03-14 4:24 GMT-03:00 Nicolas Ruflin notifications@github.com:\n\nThis looks more like your php7 installation doesn't have curl installed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1059#issuecomment-196178832.\n. Yes, installation by composer. And I used your autoload, of composer.\nEm 15/03/2016 05:03, \"Nicolas Ruflin\" notifications@github.com escreveu:\n\nHow did you install Elastica? Composer? What does your autoloader look\nlike?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/1059#issuecomment-196708833\n. Yes, my system has the 20-curl.ini file.\n\n2016-03-15 6:28 GMT-03:00 Evgeniy Sokolov notifications@github.com:\n\ntry to run \"php -i | grep curl\" at your installation server. You must have\nsomething \"php -i | grep curl\n/etc/php5/cli/conf.d/20-curl.ini,\ncurl\n\" in answer.\nIt is definitely not installed php curl extension on server.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/ruflin/Elastica/issues/1059#issuecomment-196739453\n. igor@igor-GA-78LMT-USB3 ~$ php -i | grep curl\n/etc/php/7.0/cli/conf.d/20-curl.ini,\ncurl\nigor@igor-GA-78LMT-USB3 ~$\n. Sorry, anything do it works.\n. Ok, index and type wrong, sorry for this.\n. No, index and type are correct.\n. Sorry a time again, yes index and type wrong..\n. php\n $array = [\n            'id' => ['type' => 'integer', 'store' => 'no'],\n            'titulo' => ['type' => 'string', 'analyzer' => 'noStops', 'store' => 'yes'],\n            'edicao' => ['type' => 'string', 'analyzer' => 'noStops', 'store' => 'yes'],\n            'editora' => ['type' => 'string', 'analyzer' => 'noStops', 'store' => 'yes'],\n            'ano' => ['type' => 'integer', 'store' => 'yes'],\n            'categoria' => ['type' => 'string', 'analyzer' => 'noStops', 'store' => 'yes'],\n            'autores' => ['type' => 'string', 'analyzer' => 'noStops', 'store' => 'yes'],\n            'file' => ['type' => 'attachment',\n                'fields' => [\n                    'content' => ['store' => 'yes'],\n                ]],\n        ];\n\nI has this mapping, when I change all for string, this exception get out.\n. @ruflin I used elastica 6.0,latest version, and aws elastic search 2.3 (which has type support yet).\n@andrey1s I tried both configs, without success.. @ruflin using AwsAuthV4 transport, I got this error?\n\"cURL error 6: Could not resolve host: https (see http://curl.haxx.se/libcurl/c/libcurl-errors.html)\"\n. @ruflin \ncURL error 6: CURLE_COULDNT_RESOLVE_HOST (6)\nCouldn't resolve host. The given remote host was not resolved. . No, I see nothing in ES logs. What version you recommend me?. Thanks, I will test tomorrow\n2018-03-11 17:00 GMT-03:00 Nicolas Ruflin notifications@github.com:\n\nI had to look up the versions: 3.2.3 should be compatible with ES 2.x (for\nsure 2.4).\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1470#issuecomment-372144269,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACs-SXx0rga_fLDG3f28u3qKfe8QnqHBks5tdYJzgaJpZM4SXNkZ\n.\n. I install the elastica version 3.2.3 and receive the same error yet. =/. @ruflin, sorry, I not understand.\n\n2018-03-14 4:56 GMT-03:00 Nicolas Ruflin notifications@github.com:\n\nLet's ping @jeskew https://github.com/jeskew on this as he did the\ninitial implementation. Perhaps he knows more?\n@IgorDePaula https://github.com/igordepaula Can you double check for\ntypos?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1470#issuecomment-372934310,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACs-SSOvRXvB-t5xu7S9qyou9A3KJnPyks5teM1IgaJpZM4SXNkZ\n.\n. Yes, I\"ll try both suggetions. Thanks.\n\n2018-03-16 10:26 GMT-03:00 Federico Panini notifications@github.com:\n\nIt looks like Elastica is not able to reach that Host:\ndo you have a security group which restrict access to port 443 ?\nmaybe your terminal access is whitelisted instead the application do the\ncurl from another IP\nwhich is not allowed to access that IP ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1470#issuecomment-373712521,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACs-SdFrHLj4FgLdwBk6sskPa__WligEks5te72RgaJpZM4SXNkZ\n.\n. @ruflin I discovery the error, simple.\n\nI invaded your lib, and depurated your code, which host the lib was got, I see https://https://, i.e., duplicated schema http(s). I removed the schema http from my host address config, and now it connect.\nThanks for your patience.. ",
    "kersten": "This one is also not working:\n$mapping->setParam( '_boost', array( 'name' => '_boost', 'null_value' => 1.0 ) );\n. @ruflin this is my error:\nRoot mapping definition has unsupported parameters:  [_boost : {name=_boost, null_value=1}]\n. ",
    "twisted1919": "@ruflin - here's my current code:\n``` php\nclass JobSchema \n{\n    public static function build()\n    {\n        $client = elastica()->getClient();\n        $index  = $client->getIndex(Job::index());\n        $force  = true;\n    $index->create([\n        'number_of_shards'   => 4,\n        'number_of_replicas' => 1,\n        'analysis' => [\n            'analyzer' => [\n                'indexAnalyzer' => [\n                    'type'      => 'custom',\n                    'tokenizer' => 'standard',\n                ],\n                'searchAnalyzer' => [\n                    'type'      => 'custom',\n                    'tokenizer' => 'standard',\n                ],\n                'stringLowercase' => [\n                    'type'      => 'custom',\n                    'tokenizer' => 'keyword',\n                    'filter'    => 'lowercase'\n                ],\n                'autocomplete' => [\n                    'type' => 'custom',\n                    'tokenizer' => 'standard',\n                    'filter' => ['standard', 'lowercase', 'stop', 'kstem', 'myNgram'],\n                ],\n            ],\n            'filter' => [\n                'myNgram' => [\n                    'type' => 'ngram',\n                    'min_gram' => 3,\n                    'max_gram' => 15\n                ],\n            ],\n        ],\n    ],\n        $force\n    );\n\n    $type = $index->getType(Job::type());\n    $mapping = new \\Elastica\\Type\\Mapping();\n    $mapping->setType($type);\n    // $mapping->setParam('index_analyzer', 'indexAnalyzer');\n    // $mapping->setParam('search_analyzer', 'searchAnalyzer');\n\n    // Define boost field\n    // $mapping->setParam('_boost', ['name' => '_boost', 'null_value' => 1.0]);\n\n    // mappings\n    $mappingProperties = [];\n\n    // these are used for display purposes only\n    $job = new Job();\n    foreach ($job->attributes() as $attr) {\n        $mappingProperties[$attr] = [\n            'type'           => 'string',\n            'include_in_all' => true,\n        ];\n    }\n\n    // these are used for search only.\n    $mappingProperties = array_merge($mappingProperties, [\n        'searchPosition'    => [\n            'type'              => 'string',\n            'include_in_all'    => true,\n            'analyzer'          => 'stringLowercase',\n        ],\n        'searchDescription' => [\n            'type'              => 'string',\n            'include_in_all'    => true,\n            'analyzer'          => 'stringLowercase',\n        ],\n\n        '_boost'  => [\n            'type'              => 'float',\n            'include_in_all'    => false\n        ],\n    ]);\n\n    // Set mapping properties\n    $mapping->setProperties($mappingProperties);\n\n    // Send mapping to type\n    $mapping->send();\n}\n\n}\n```\nEverything works now. If i uncomment the setParam calls, then i get the error above.\nLet me know if you need anything from me.\n. ",
    "Numkil": "Hey @ruflin. Since those mapping parameters are not supported anymore what is the current way of using your analyzers then? Naming them \"default\" and \"default_search\" when creating the index?\nEdit: Using those names seems to create the exact same results as using the now deprecated parameters did so I guess I was right about that.\n. Yes it does. It was a bit confusing because before I could name the analyzers whatever I wanted and then use the mentioned mappings to define which analyzer was used to index everything and which one was used to search the index.\nNow I just have to make sure they get named correctly(\"default\", \"default_search\") so ElasticSearch can guess which one he needs to use for both situations. \nThanks for asking anyway.\n. I'll make a PR in the weekend for the documentation page \"Storing-and-indexing-documents\". I'm pretty sure most people will be helped by this small change. \nSome sort of analysis interface in the code would be cool but I don't know how much extra value it would add to the code. Something so you could do something like this maybe? This way you could enforce good practices and maybe hide some of the more \"magic\" like things in elasticsearch like how the name of your analyzer can alter the results of your indexing/queries.\n``` php\n$analysis = new \\Elastica\\Analysis();\n$analysis->setNumberOfShards(4);\n$analysis->setNumberOfReplicas(1);\n//Do stuff here with your analysis to create/configure analyzers\n// Load index\n$elasticaIndex = $elasticaClient->getIndex('twitter');\n// Create the index new\n$elasticaIndex->create($analysis, true);\n```\n. ",
    "veloper": "Adding more info to what @Numkil said about setting default analyzers:\nI found this SO question to be helpful: http://stackoverflow.com/questions/34894671/set-default-analyzer-of-index\n. ",
    "HKandulla": "@ewgRa Thanks, I added a functional test, please let me know if there is something else missing.\n. @ruflin Thanks. The test didn't fail locally and I don't really understand the message \"can't add a _parent field that points to an already existing type\" but I will look into it and try to fix.\n`HannesKullasMBP:Elastica HKandulla$ phpunit --bootstrap test/bootstrap.php test/lib/Elastica/Test/Aggregation/ChildrenTest.php \nPHPUnit 5.2.11 by Sebastian Bergmann and contributors.\n.                                                                   1 / 1 (100%)\nTime: 201 ms, Memory: 14.25Mb\nOK (1 test, 5 assertions)\n. @ruflin my mistake, I meant to make a pull request in the release-2.3 branch which runs on Elasticsearch 1.7.\\* This restriction only exists since Elasticsearch 2.\\* Sorry\n. @ruflin I changed the order of the mapping, to have the child-mapping before the parent-mapping. This is only necessary for ES 2.\\* (https://discuss.elastic.co/t/adding-child-types-in-2-0/33267). \nI work with the 2.3-branch but I made a PR on the master branch too in case anyone else needs this feature.\n. @ruflin I tried to squash my commits withgit rebase -i HEAD~3., but I am not sure if that worked out ok. If not, could cou please advice me what to do. Thanks.\n. @ruflin Thanks for explaining. I will just do a clean new PR, ok?\n. @ruflin finally:-) I must still do agit rebase master`, right?\n. I wanted to do the PR for master and release-2.3.\n. yes, please. Thanks for all the help!\n. ",
    "chuangbo": "It seems like the reason of tests failed is docker building error.\nhttps://circleci.com/gh/ruflin/Elastica/7#tests\nCan we try to re-run the tests on CircleCI and travis-ci? I don't have the re-run button here.\n. Thank you. The tests have been passed.\nActually this pull request looks more like a hack to me, I think would it be better (api design) to move the _stats independent methods to somewhere else, or can we turn them to static function?\n. Thank you, the commits have been rebased.\nFor the proposal issue, I'm afraid that I'm not quite familiar with elasticsearch, I was using a Magento plugin which based on Elastica and then we faced this performance issue. Sorry.\n. ",
    "mtdavidson": "Just came across the same error make tests works no problem but no luck with the commands in CONTRIBUTING.md.. @ruflin I've now updated the changelog.. Thanks for the feedback @ruflin I've done the variable fix, updated the change log and added the functional tests.. Thanks @ruflin I am working on the problems. Its a bit of a mess of issues, mainly due to content type checking. https://github.com/elastic/elasticsearch/pull/23452 \nSince we set the default type to be application/jsonwe currently see issues anywhere we are using the body as part of the request such as with _analyze.\nChanging the default content/type to text/plain solves ~99% of the issues. \ndiff --git a/lib/Elastica/Request.php b/lib/Elastica/Request.php\nindex d81702ea..33b2f1e7 100644\n--- a/lib/Elastica/Request.php\n+++ b/lib/Elastica/Request.php\n@@ -15,7 +15,7 @@ class Request extends Param\n     const PUT = 'PUT';\n     const GET = 'GET';\n     const DELETE = 'DELETE';\n-    const DEFAULT_CONTENT_TYPE = 'application/json';\n+    const DEFAULT_CONTENT_TYPE = 'text/plain';\n     const NDJSON_CONTENT_TYPE = 'application/x-ndjson';\nBut I'm not convinced that is the best approach. The better approach would probably be to keep that default and start getting rid of any uses of setBody but thats going to result in breaking a lot of peoples code. So not sure what the best approach is.\n. @nomoa Sure thing I'll give it a go. . That does work @nomoa \nHowever does mean people will have to change anywhere they have called setBody directly like \nphp\npublic function testRequestEndpoint()\n{\n     ...\n    $endpoint = new Analyze();\n    $endpoint->setIndex('fooIndex');\n    $endpoint->setBody('foo');\n    ...\n}\nmight just have to accept its going to be a bit of a breaking upgrade on a few things.\n@ruflin \nTo answer your previous question at least from a test perspective not to many things that use a text body these are the ones we see errors with \n```\nThere were 8 errors:\n1) Elastica\\Test\\IndexTest::testAnalyze\nElastica\\Exception\\ResponseException: Failed to parse request body\n2) Elastica\\Test\\IndexTest::testRequestEndpoint\nElastica\\Exception\\ResponseException: Failed to parse request body\n3) Elastica\\Test\\IndexTest::testAnalyzeExplain\nElastica\\Exception\\ResponseException: Failed to parse request body\n4) Elastica\\Test\\Query\\MultiMatchTest::testZeroTerm\nElastica\\Exception\\Connection\\HttpException: Operation timed out\n5) Elastica\\Test\\ScrollTest::testForeach\nElastica\\Exception\\ResponseException: Failed to parse request body\n6) Elastica\\Test\\ScrollTest::testSearchRevert\nElastica\\Exception\\ResponseException: Failed to parse request body\n7) Elastica\\Test\\SearchTest::testSearchScrollRequest\nElastica\\Exception\\ResponseException: Failed to parse request body\n8) Elastica\\Test\\Tool\\CrossIndexTest::testReindexTypeOption\nElastica\\Exception\\ResponseException: Failed to parse request body\n`` . Great call on the merge @nomoa that and the change to usesetBody(['text' => $text])` gets us to green.. No problem glad we got there in the end with a good solution thanks to @nomoa \nI can get back to adding Adjacency Matrix Aggregation which was the main point of the upgrade.. Pretty sure numeric_range was deprecated ages ago. Is there something that just using range is not accomplishing?. @metamaker Sorry should have been cleare I was saying I think its deprecated in elastic https://www.elastic.co/guide/en/elasticsearch/reference/0.90/query-dsl-numeric-range-filter.html might be its just not been updated / removed in the library. . Thanks for the feedback I've updated these variables.. ",
    "aguvillalba": "Hi @ruflin and @merk! I understand and completely agree with the idea of taking out from the Client all the logic to connect to the server.\nIf I did not misunderstood, from now on, instead of doing:\n$client = new Client();\n$client->setConfigValue('host',$host);\n$client->setConfigValue('port',$port);\n$client->connect();\nWe should do:\n$client = new Client();\n$connection = new Connection(array('host' => $host, 'port' => $port));\n$client->addConnection($connection);\nAnd after this, we could use the $client as usually, is it right?\nOr what would be the client's API to create an \"empty\" client and inject the connection settings later?\nThank you both for these improvements!\n. But this would make the Client less flexible, wouldn't it? You are forcing the developer to know all the connection details (either the array or the pool) before creating the client instead of making them optional and set the connection details later. There are cases where the developer needs to set the connection details after creating the client.\nAs far as I see in PR changed files, all the parameters in the Client's constructor are optional, so the pool is not mandatory in the moment of the client's creation.\nBesides that, I also think that this approach exposes many internal logic to the outside, I mean: the consumer of the library, in order to create and use just the client, must know about Connection objects, ConnectionPool object and the Client object itself.\nI would suggest to allow the developer to create an \"empty\" client (with an empty ConnectionPool in it) and later inject the connection into the client (which actually injects the connection into the connectionPool) trying to avoid to expose the ConnectionPool to the outside.\nWhat do you guys think?\n. In order to not make my app dependent on Elastica, I created an ElasticaClientAdapter which implements a SearchClient interface. So my app actually uses a SearchClient (today is Elastica, tomorrow could be some other and I do not have to change my app code, only the adapter).\nThe adapter takes the Elastica\\Client object and MyAppConfig object as its constructor params. When I define this dependencies in my dependencies injection file, I do not know yet the connection parameters (because the come with the Config object), so they are introduced in the Elastica\\Client during the execution of the Adapter's constructor based on the parameters defined in the configuration of the app. So:\n1. Create the \"empty\" client (in autoloading for dependency injection)\n2. Read connection parameters from app config (in adapter's constructor)\n3. Inject connection parameters to the client (in adapter's constructor)\nIt's a legitimate circumstance, isn't it? Anyway, since you allow to create a Client without any parameter (all client's constructor parameters are optional), then you should provide an easy way to introduce these parameters later, via setters, and make the client still works.\n\nwhich is bad in itself - $client->request() will fail to work without those details\nOf course it will fail, but what's the problem? Your request is failing because you did not set a connection into the client, it's normal. Throw an exception.\nThe lack of flexibility is intentional - supporting every use case for every edge is not conducive to maintainable code.\nWell, a flexible library does not imply that its code is non-maintainable. It only depends how it is designed.\n\nAs I said before, making the library (exactly the Client) more flexible does not imply less maintainable code.\nAlso, by exposing the ConnectionPool to the user, you are forcing him to know about a Client's detail implementation that he does not need to know. I do not care if the Client uses a ConnectionsPool or other approach. I simply need to know that I can add connections to the client. What if in the future you decide to change this approach to something else? You are creating a backward compatibility problem that could be avoided.\n. Ok, I do not agree at all with:\n\nas this PR demonstrates - following the SRP and reducing the edge cases that the Client is required to follow results in a reduction of code complexity both in lines and mental model required to maintain the code.\n\nFlexibility does not imply complex code, as I said, it depends on how you design it.\n\nYour dependency injection container is the correct place (which will already know everything required) to manage the creation and configuration of the Client and its Connections.\n\nBased on that, should I also put my connection parameters in the dependency injection container? Not in the app config?\nAnyway, @ruflin, it's ok, it's your library and you decide its route map. I think I will stick to the version 3.2 which is the one that works fine for me and maybe it's a good chance to start my own package from now on.\nThank you very much for your effort!\nCheers guys!\n. Hi ewgRa,\nThank you for your reply!\nI think using \"setConnections\" is not a good idea, because it would mean that I have to create the $connection object in my code and then inject it into the $client object, and this implies that my code would have to deal with the creation of connections which it should not be my duty. My code should know nothing about client's connections to the ES server and etc.\nActually, I think that instead of changing the visibility of the method initConnections, we could just add a new public method called \"connect\" which just calls this protected method. Is an easy and consistent solution, because if it is allowed to set each connection parameter separately, then I should be able to trigger the connection to the server.\nI have already forked this project and I will make the change and then will make a pull request. I think it could be a good improvement.\nBest regards,\nAgustin.\n. There is a new pull-request (#1077) for this issue.\n. Hi!\nIn the last commit (Fixed minor typo) I updated the CHANGELOG.md\n. Probably, because I found a work around. ",
    "natelenart": "+1\nCame to report this issue, but saw it's already here.\n. ",
    "gbprod": "+1\nOnly happens if php error_reporting setting is set to -1\n@ruflin I can create a pull request with a fix if you want\n. Thanks :)\n. ",
    "GuiminZHOU": "had same problem when I try to update ElasticaSearch from 1.7.4 to 2.2, \nthe problem is: \nthere is no version FosElasticaBundle for ElasticaSearch 2,\nfor the moment, FosElasticaBundle requires Elastica ~2.1, which is required ElasticaSearch 1.7.2\nmaybe just check ElasticaSearch version\nps: on github, Elastica Tag 2.3.1 requires 1.7.2, but on packagist, v2.3.1 requires 2.2.1, would be some mistake here?\n. https://packagist.org/packages/ruflin/elastica#2.3.1, at the bottom of the page, there is a table for dependancies, it seems that it's always the same for all the versions\n. @ruflin , so normally, for ElasticaSearch 2, it returns a different response error array?\nI have seen that for Elastica ~2.1, we use the function $response->getError() directly, while for Elastica ~3.0, we use the function $response->getErrorMessage() instead, add a json_encode() on $response->getError() if it's an array,\nbut for Elastica ~2.1, we can do the same thing, to make sure $response->getError() return a string instead of an array, can we? or we dont need to do?\n. ",
    "s12v": "looks like it's failed because it wasn't able to pull docker images?\n. @ruflin, done\n. @ruflin, would it be possible to have a new release including this change?\n. @ruflin, thank you for the release!\n. ",
    "Antoniossss": "@ruflin It is under the hood of CakePHP's ES plugin \ncakephp/elastic-search                1.0.x-dev 7a983d6\nand the plugin has following dependencies:\nrequires\ncakephp/cakephp ~3.2\nruflin/elastica ~3.1\nAnd the elastica itself:\nname     : ruflin/elastica\ndescrip. : Elasticsearch Client\nkeywords : client, search\nversions : * 3.2\n. @ruflin 2.3.1\n. @ruflin sure here is anonymized code\n/** @var Elastica\\Search $search */\n        $search = $myTypeType->connection()->getIndex(\"myIndex\")->createSearch($filtered);\n        $search->setOption(\"size\", \"5000\");\n        $search->getQuery()->setFields([\"_id\"]);\n        $scroll = $search->addType(\"myType\")->scroll('10s');\n        $ids = [];\n        do {\n            $scroll->next();\n            $results = $scroll->current();\n            foreach ($results->getResults() as $result) {\n                $ids[] = $result->getId();\n            }\n        } while ($results->count() > 0);\n. @ruflin no rush with that, I am using modified sources for that. \nSure, ill try to find some time to write test for that case.\n. @ruflin \nAs far as I can say there is no such search type (maybe not anymore)\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-search-type.html\nSearchAPi requires only scroll_id to be provided and scroll=TTL nothing more.\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html\nI had some troubles with test env so I did not add test case as promised.\n. @ruflin No, as I didnt know is this really the fix here or just my luck ;) It is not tested on v5 anyway. \nAs for test environement I had some troubles with working docker container (Windows :P) So nothing Elastica specific. \n. @eit works for me with ES2.3.3\n. As far as i recall we ended up half a year ago with php and modules update\nso it is not relevant anymore. Thank you for your time and keep up the good\nwork!\n14.03.2017 20:42 \"Tobias Schultze\" notifications@github.com napisa\u0142(a):\n\nThe headers are usually empty as long as you don't add custom ones. But\nnormally it doesn't cause a problem.\n@Antoniossss https://github.com/Antoniossss What CURL, PHP and OS\nversion did the empty headers cause a problem with? Is this still relevant\nfor you?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1123#issuecomment-286537221,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHgz--ozCdx4C8nKZAcZM_Dru6JOZwVSks5rlu2agaJpZM4I9l63\n.\n. According to https://github.com/elastic/elasticsearch/issues/7422 it is the same in fact. But still ES docs are not that clear about that. So how to get filtered query now ??\n\nFrom here - https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-post-filter.html \nso we are either missing setFilter in Search or there are simply not equal.\n. This was question about Elastica and ES 2.3.x. Sorry for confusion, but I just didnt noticed that there Elastica\\Query is not extending AbstractQuery thus I was looking for addFilter method in wrong class. Anyway I will close this issue as I made unnecessary confusion :( sorry bout that.\n. ",
    "ReenExe": "I agree with return null and change it.\n. @ruflin \nCan i use short condition:\nExample:\nBefore:\nphp\n$array = [];\n...\nif (!empty($array)) ...\nTo:\nphp\n$array = [];\n...\nif ($array) ...\n?\n. @ruflin I make changes after review\n. @ruflin, Yes, fix build and update CHANGELOG.md\n. @ruflin, hard understand - something wrong with build, i think - when failed build with PHP 5.4 - its my mistake, but when update only CHANGELOG.md - and failed 7.0 - this ismagic. Think - do better if you close (without merge), and I try fix in my own travis, agree?\n. @ruflin You right, i see https://github.com/composer/composer/issues/5308 and try without --no-dev\n. @ruflin, Agree, but before I try again with composer option and read discussion oncomposerIssues\n. @ruflin, Agree wait - day or two, and after use older composer version (1.0.3) or some composer option that emulateold(I'm from Ukraine and this my native language - so yes can mistake, sorry, think will be better with more expirence)\n. Think they fix it in version 1.1.1 - https://github.com/composer/composer/commit/8f0324f51e4f94c9be18a19dbbc80c52e7b260c0\n@ruflin So need return changes in Dockerfile - i removeversion_compare`?\nAnd we already know that they fix it - we will wait?\n. @ruflin, I make new clone from master and create new PR in new issue with same changes, it will be more easy for me that fix conflicts in huge project. So close and reopen in 19.05.2016\n. Re-open in #1096\n. @ruflin, Something wrong again, but with build, because I review code again with diff\n. Compare with https://travis-ci.org/ruflin/Elastica/jobs/128814644 - see only\nbash\n...\nProblem 1\n...\nInstallation request for aws/aws-sdk-php ~3.0 -> satisfiable by aws/aws-sdk-php\n...\n. @ruflin I think problems with 5.4 begin after changes in composer.json after https://github.com/ruflin/Elastica/pull/1065 that requires PHP 5.5 in AWS (aws/aws-sdk-php)\n. @ruflin, Sorry my mistake in previous comment.\nThe problem stay in composer - because composer try require-dev aws/aws-sdk-php\n. @ruflin, I see, so sorry - but for me to resolve conflict need make new fork - and merge my changes to review it before make new PR - so i do it, and close this to reopen new.\nIt's good that build PHP 5.4 are success.\n. @ruflin, Yes, close. I try find how automate or some like\n``` php\nif ($condition) {\n  throw new \\Exception('some');\n} else {\n  return $b\n}\n```\nto\nphp\nif ($condition) {\n  throw new \\Exception('some');\n}\nreturn $b\nBut think - for this automated need contribute to CS\n. Magic #1096 - have conflict - merge + reopen = conflict solved\n. @ruflin, in https://github.com/ruflin/Elastica/blob/master/.php_cs#L19 maybe need change for short_array_syntax?\n. @ruflin, Agree, but now far from fast machine - but soon make lint (21.06.2016)\n. @ruflin, How about i explode changes to little part - and after will adding by steps?\n. Small part of this https://github.com/ruflin/Elastica/pull/1120/files\n. move to #1121, other try with auto CS\n. @ruflin,  only extract changes from success build of 1118 - so in code - all good, something again with Travis build - but in this time - in connection (\"read tcp 52.22.190.106:443: connection reset by peer\")\n. @ruflin, need again start for PHP 5.4? (other pass)\n. @ruflin, done\n. Yes, in next time do as need\n. @merk thanks, done after review, how about now?\n. @ruflin, re-open with same changes?\n. @ruflin, re-open in #1146\n. @ruflin, Ok, see please https://github.com/ruflin/Elastica/pull/1142\n. @merk, i copy this code from link http://sandbox.onlinephpfunctions.com/code/289e92423ceab61f9b94793a9a1557c4574bef4b\n``` php\nclass Container\n{\n    private $array;\npublic function __construct(array $array)\n{\n    $this->array = $array;\n}\n\npublic function getArray()\n{\n    return $this->array;\n}\n\n}\n$container = new Container([\n    'a' => 1,\n    'b' => 2,\n]);\nforeach ($container->getArray() as $key => $value) {\n    echo \"$key => $value\\n\";\n}\necho key($container->getArray()) === 'a' ? 'success' : 'fail';\necho \"\\n\";\necho current($container->getArray()) === 1 ? 'success' : 'fail';\n90\n$container = new Container([\n    1,\n    2,\n]);\nforeach ($container->getArray() as $key => $value) {\n    echo \"$key => $value\\n\";\n}\necho key($container->getArray()) === 0 ? 'success' : 'fail';\necho \"\\n\";\necho current($container->getArray()) === 1 ? 'success' : 'fail';\n```\n$generator is copy of array that reseted - so we can use key($generator) and current($generator)\n. @ruflin, ok, find time to setup this week \n. @ruflin, Sorry, agree to close and re-open when possible\n. Find weakness in the code and write tests are more easier to me - than install environment, but hope do it\n. @ruflin, You give good idea for cheat - i have main project (Ubuntu + Vagrant + Elastica) and in subdirectory import Elastica for tests - possible will be success.  Will try this week\n. codecov - it's new tools for me - thanks\n. @ruflin, my variant shorter - so what do? Close or merge?\n. #1147\n. Automate it after https://github.com/ruflin/Elastica/pull/1096#issuecomment-226128329\n@ruflin, Also remember about tests in other PR, but need time, hope do tests soon \n. If need changes in #1140\n. @ruflin, Sure, greate. \n. I use\nbash\nphp php-cs-fixer fix\n. @ruflin, covers after #1125\n. @ruflin, before - we have 1 or 2 operation to init array, after always 1\n. I without enough experience in big projects like that - so if want revert as before (but read enough books).\nIn this case before - 1 additional variable and 1 additional initialization, break - is same as goto to end of loop, so i change goto and return to 1 operation return.\n. And in this project already see more than one return, in my changes too - change return structure\n. @ruflin, so what do - revert to one return? and other stay?\n. Before was:\n1. Check as broken - throw\n2. Return normal\nAfter:\n1. Check normal - return normal\n2. Throw\nMaybe is as for me hard reading not.\nBut return as was before/\n. @ruflin, I check this in 5.4 http://sandbox.onlinephpfunctions.com/code/8dc8d94b0ccf05c77dffaf2c3b69bda702463f29\n``` php\nerror_reporting(E_ALL);\n$a = [];\n$a['a']['b']['c'][] = 'value'; \necho $a === ['a' => ['b' => ['c' => ['value']]]]; // 1\n``\n. @ruflin, this isredundant- so remove it\nhttp://sandbox.onlinephpfunctions.com/code/8dc8d94b0ccf05c77dffaf2c3b69bda702463f29\n. I removeredundantcode - and allright.\nBut also want change to code intodo`:\nphp\n$array[$baseName][key($generator)][] = current($generator);\nBut for surety - need tests that covers candidate_generator\n. @merk, I stay logic as is before - only refactoring, and test it before in sandbox\n. @merk, how it's must be?\n- Use short syntax [] instead long array()\nAgree?\n. Agree, change to cast\n. Need do it after this https://github.com/ruflin/Elastica/pull/1090#issuecomment-218279606\n. @merk, You show me @ruflin's commit at 12 November 2015, but 10 May 2016 @ruflin write in my PR - add break with PHP 5.3.\nI think need wait for @ruflin \n. @ruflin, for me need remove comment from CHANGELOG?\n. done\n. @ruflin,\n\n\nFatal error on push as array to string http://sandbox.onlinephpfunctions.com/code/dbc5b51d01771f258fb814b12b7a5843052df15d\n. 1. empty([]) // true\nempty(false) // true\n$data = [];\n   empty($data['responses']) // true\n\n\nYour case:\n$data['responses'] = false;\nempty($data['responses']) // true\n. @ruflin, Yes exists test in \\Elastica\\Test\\StatusTest::testGetIndexNames https://github.com/ruflin/Elastica/blob/master/test/lib/Elastica/Test/StatusTest.php#L37\n. Before my changes:\nphp\n$ids = new Ids();\n$ids->setType('some');\n$ids->addType('other'); // Fatal error; // because we try [] to string variable\n. If see all method - and use !isset($data['responses']) instead empty($data['responses'])) - so we have foreach ([] as $responseData) {} so use empty($data['responses'])) - remove this foreach.\nThe result of method - same, but in my - without reset and empty foreach\n. In my vesrion - add early return that remove foreach on empty array\n. Yes, so I remove conflict and solve it?\n. Ok, soon re-open\n. ",
    "vzeman": "As workaround I request status and check if are set at least some parameters elastic returns in response. To check just http response code is not enough, because it doesn't guarantee the index really exist ... name of function should copy the functionality - right now it is just ping to server and it just checks if host:port is alive - as I understood the function name, it should check if index exists in Elastic server.\n. ",
    "r-leitao": "It's ok. \nThank you for your prompt response\n. ",
    "leopoiroux": "Hi, I use the last version (2.3.2)\nThks for your help\n. ",
    "EliyahuFisherman": "Where can i find how  to strucutre an update by query with a scripted field \nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html\n. ",
    "mmoreram": "ping @ruflin - This endpoint is not implemented in this library, right?\nEdit: Preparing a PR. @ruflin would be nice to close this Issue ;). Solves #1103. Fixed all docs. I'm sorry, my mistake I didn't check properly tests :). @ruflin thanks to you, for this library :=)\nWhen do you expect you will release next stable version?. @ruflin WEEEE\nThat deserves a beer if you come to Barcelona ! :D\nThanks so much!. ",
    "simon-n": "Here you are: #1105 \n. ",
    "hectorgimenez": "@ruflin Done.\n. ",
    "tiger-seo": "@ruflin please, see https://github.com/ruflin/Elastica/pull/510#commitcomment-9103251\n. really sorry, but i can't complete this :(\nmaybe it is better to close it. ",
    "samdjstevens": "I could really do with this functionality getting merged in, what would I need to do to make it so?. ",
    "tishma": "@merk Thank you for the response. It appears that not only whitespace has slipped in, but also a lot of other code from master. This second commit should be what I meant it to be - minimal change to support non-string errors.\n. @ruflin Actually this is to make Elastica 2.3 branch more compatible with ES 2.3.2 server which appears to have introduced error objects instead of plain strings. I think your master branch code is defensive enough to fall back to old behaviour if error is just a string (which was always the case with ES 1.x), and robust enough to extract the most of error info when it's an object.\n. @ruflin hey! Thanks for checking in. I thought what you said was already a 'no'. Certainly, you wouldn't be saying Elastica 2.3.x is now supporting ES 1.x. I already have my workaround, although my life would be somewhat easier if you decide to release. I leave it up to you. Thanks again.\n. Thanks for looking into this - the code was copied from the master branch (maybe you want to look there too). I did not really get much into semantics, but I don't see why root cause would be an array of strings.\n. ",
    "quadrim": "Created the issue in wrong repository. Sorry Folks! :)\n. ",
    "nirajan-panthee": "I have setup new server, and now its working on that, thank you for your help.\n. ",
    "filipgolonka": ":+1: \n. ",
    "wsromek": "\ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "barkahl": "\ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "rafalkanski": "\ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "arkadiuszmalina": "@ruflin You're right, I cant belive I didn't notice it. I've change this PR to add only geo_distance method to query builder\n. ",
    "afm-mike": "In case it matters:\nElastica:  3.2.1\nElasticsearch:  2.3.4\nPHP:  5.6.23\njava version \"1.7.0_101\"\nAny thoughts on the issue?\n. I used composer.  Let's see,, I:\n(1)  I created a plugin folder called index.elasticsearch in the pydio plugin directry\n(2)  I downlaoded from github a zip file of Elastica and unzipped it in my home directory to Elastica-master\n(3)  I then copied the /home/mike/Elastica-master/lib/Elastica folder to the index.elasticsearch folder, so there is a subfolder in index.elasticsearch called Elastica\n(4)  I changed owner to that folder and all its files to www-data:www-data\n(5)  I installed the pydio plugin files into index.elasticsearch\n. Saw this from Charles at pydio (so I am hoping it is just a version compatibility issue...):\n...wait for 6.4.2, coming very very soon \u2026 we have upgraded the elasticsearch plugin to be compatible with last version of elastica AND elasticsearch.\n. I did use composer, as I recall, but I may not remember the steps I did, but I'll try it again this evening and post here.  Thank you!\n. I had the wrong json file.  I used this initially:\n{\n    \"require\": {\n        \"elasticsearch/elasticsearch\": \"~2.0\"\n    }\n}\nand had the issue.  Now I just used this:\n{ \"require\": { \"ruflin/elastica\": \"dev-master\" } }\nand I can now get into a ws w/o issue after activating the elaasticsearch plugin. However, if I type a search term, I get an error, like: no such index [index: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx]. I will check with pydio to see if I need to build the index from the command line first, unlike the Lucene plugin. Thanks\n. OK, got it working, and what a difference so far in terms of build speed of index.  Finally :-)\n. By the way, is there any optimization I should do for Elastica and/or Elasticsearch?  Single node, 8-core FX-8370, 32GB ram, Raid-5.\n. I reinstalled 6.4.2,, and it seems to work now, so I will chalk it up to operator error. thanks\n. anybody?. It is a single node, forget why I use the internal IP instead of localhost, but:\nroot@elasticlocal:/home/mike# curl 11.13.72.13:9200\n{\n  \"name\" : \"elasticlocal\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"g1Ax20JPQsWP2E30B8SucQ\",\n  \"version\" : {\n    \"number\" : \"2.4.4\",\n    \"build_hash\" : \"fcbb46dfd45562a9cf00c604b30849a6dec6b017\",\n    \"build_timestamp\" : \"2017-01-03T11:33:16Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"5.5.2\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\nTo index within Pydio environment, I use:\nphp cmd.php -u=mike -p=xxxxxxxxxxxxxx -a=index -r=archive\nJust tried again after a few days, and not sure what I changed in the interim, but now get this:\nApplying action 'index' on workspace Archive (87e22c282j95e50ccb629071fd21c12a)\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>Deprecated: Elastica\\Index::optimize() is deprecated and will be removed in further Elastica releases. Use Elastica\\Query::forcemerge() instead.\nIndexation launched\nPHP Fatal error:  Uncaught GuzzleHttp\\Ring\\Exception\\RingException: cURL error 60: SSL certificate problem: unable to get local issuer certificate in /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/CurlFactory.php:127\nStack trace:\n0 /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/CurlFactory.php(91): GuzzleHttp\\Ring\\Client\\CurlFactory::createErrorResponse(Array, Array, Array)\n1 /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/CurlHandler.php(96): GuzzleHttp\\Ring\\Client\\CurlFactory::createResponse(Array, Array, Array, Array, Resource id #613)\n2 /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/CurlHandler.php(68): GuzzleHttp\\Ring\\Client\\CurlHandler->_invokeAsArray(Array)\n3 /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/Middleware.php(54): GuzzleHttp\\Ring\\Client\\CurlHandler->__invoke(Array)\n4 /usr/share/pydio/core/vendor/guzzlehttp/ringphp/src/Client/Middleware.php(30): GuzzleHttp\\Ring\\Client\\Middleware::GuzzleHttp\\Ring\\Client{closure}(Array)\n5 /usr/share/pydio/core/ven in /usr/share/pydio/core/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php on line 51. Hey Thanks!  Once I figure out how to set the PHP connection to Elasticsearch back to HTTP, I will try again..",
    "coreation": "Cool, if I understand it correctly I can use this for example in a geohash grid aggregation with a geocentroid sub aggregation to make the center of that grid an average of all locations in that grid right? If so, I might be very tempted to spend some time making this into a PR :).\n. I already looked into that before I made this issue, just to make sure I wasn't missing anything. I'll probably try this tonight and ask for feedback on my fork before making a PR.\n. Alright, will do!\n. @ruflin I think I got it, if so that was by far the easiest PR and open source contribution in my life so far ;). I'll make a PR, but I'll have to adjust it either way, not sure where I should add this feature in the Changelog.md\n. @ruflin Added integration test and added the class to the Changelog. Not sure how I can see the merge conflict though.\n. Apparently I couldn't find a way to use rebase, my commits were on the master branch of my fork. Not that experienced with rebasing, so I did a merge upstream from the origin master, that indeed showed that the changelog had some differences before I changed it. Looks good now I think :)\n. You were right, I added it to the wrong version. Should be ok now I think.\n. You're very welcome, loving the library so I'm glad I can give back (small as it may be ;) ) \nEdit: Any idea on when a new release is coming out, because now to enjoy the GeoCentroid I'll have to put my version number to dev-master afaik.\n. Ok, thanks for the info, I'm afraid I have too little time to dive into that one :)\n. Hey all, I got the same error, I knew it was not related to the Elastic library, but it might be useful to share. If you follow an upgrade guide, you'll shutdown your shard allocation, what is easily forgotten to turn that option back on! New indices or new mappings will fail, and Elastica will eventually display that error to \"No enabled connection\".. ",
    "xulien": "hi, \nsorry, it was a quick and dirty push :confounded: \nI'm confronted to \"Warning: curl_setopt() expects parameter 2 to be long, string given\", so this PR is just a way to ensure the right type for curl option, who should be constant anyway or I missed something.\n['CURLOPT_SSL_VERIFYPEER'] = false :red_circle: \n[CURLOPT_SSL_VERIFYPEER] = false :white_check_mark: \n. @ruflin \nsecond param should be an int because it's the index into the options array, or (not in the doc) his constant equivalent.\nhttps://github.com/php/php-src/blob/ae8cf3cb5462353f96b4e53b2500c4f3311bf32d/ext/curl/interface.c#L743\nwho know CURLOPT_SSL_VERIFYPEER is 64, CURLOPT_SSL_VERIFYHOST is 81 and CURLOPT_SSLCERT is 10025?\n<bad-faith>no one will use integer index instead equivalents constant</bad-faith>\nmaybe something like that could do the jobs?\nif (!is_int($key)) {\n        $key = constant($key);\n}\n curl_setopt($curlConnection, $key, $param);\n@oleg-andreyev \nthe latest (dev-master) for each one, but I'm not sure is relevant here\n. > The following code we should not allow I think and also not fix, as it is some magic but from my perspective it is a problem on the code side.\nI would be tempted to say yes, but it's a little helpers, which allow to use string on curl options.\nLike in my case, when you pass through symfony, as you give a constant who return an string... after two hour of quest without result to find why and an headache, you enjoy to simply pass a string.\n. ",
    "oleg-andreyev": "@xulien what version of bundle/elastica/elasticsearch you're using?\n. Done in 85029c0889b5abdbdfabffde94819f8fa14becc9\n. @ruflin glad to help, you're doing great job in maintaining this project. Thanks for fast reaction. Q: So 2.x / 3.x (which are for ES 2.x) aren't maintained?\nI think it would be great to reflect this information in README or CONTRIBUTING files, so that users would be aware that version of lib is maintained and PR could created against certain versions, what do you think?. @ruflin I would be happy to create PR, will do it, but before just wanted to have clear understanding, thanks!. I'll try to figure this out and will update PR as soon as possible. @ruflin I'd like to push this forward without putting max version of PHP, because it's quite complicated, but I'll prepare a separate PR as soon as it will be done.. @ruflin thanks!. impossible to install this version using php 5.4, but above requirements say that it's >=5.4 \n. It's possible. Imagine two repositories: A, B both are using ES, both should be B/C with 1.7 and 2.0.\n. I don't think we should hardcode version of ES that is used for tests.\nI'll take a look, if it's possible to expose ES_VERSION and use it here.\n. I've added new ENV to Dockerfile and then checking it in test, see 0abec0e2961135d17a6d1ae87ef07c07683a5524\n. To have docblock without warnings. another way is to remove @param but this will break code completion. I wanted to use json_last_error_msg. I'll review it once again. Oh. Great!. Yeah. But IMO it's much clear then empty string, and yes it's PHP.. sure.. I've updated title to Elatica. ",
    "anacicconi": "I finally found the solution to my problem. I was doing the wrong query and I haven't add 'include_in_parent: true' to my nested objects on my config. If this can help someone, the query looks like this now:\nElastic query:\n{\n    \"query\": {\n        \"bool\": {\n            \"must\": [\n                {\n                    \"match\": {\n                    \"updatedAt\": \"2016\"\n                    }\n                },\n                {\n                    \"match\": {\n                    \"translations.locale\": \"fr\"\n                    }\n                },\n                {\n                    \"multi_match\": {\n                        \"query\": \"leadership\",\n                        \"fields\": [\n                            \"translations.*\"\n                        ]\n                    }\n                }\n            ]\n        }\n    },\n    \"highlight\": {\n        \"fields\": {\n            \"translations.*\": {}\n        }\n    }\n}\nAnd using Elastica:\n```\n    $query = new Query();\n    $bool = new Bool();\n$stringQuery = new Query\\MultiMatch();\n$stringQuery->setQuery($string);\n$stringQuery->setFields('translations.*');\n$bool->addMust($stringQuery);\n\n$updateQuery = new Match();\n$updateQuery->setField('updatedAt', $year);\n$bool->addMust($updateQuery);\n\n$localeQuery = new Match();\n$localeQuery->setField('translations.locale', $request->getLocale());\n$bool->addMust($localeQuery);\n$query->setQuery($bool);\n\n$query->setHighlight(array(\n    \"fields\" => array(\"translations.*\" => new \\stdClass())\n));\n\n$resultSet      = $index->search($query);\n$results        = $this->getResponse($resultSet, $request->getLocale());\n\n```\nThe config of my index:\nindexes:\n    my_index:\n        client: default\n        finder: ~ \n        types:\n            article:\n                mappings:\n                    updatedAt:\n                        date: { type: date, format: \"yyyy\" }\n                    translations:\n                        type: nested\n                        include_in_parent: true\n                        properties:\n                            title: ~\n                            introduction: ~\n                            locale: ~\n. ",
    "ovr": "What do you think about added async methods\n$elastica->asyncAddDocuments() -> supported for Guzzle Transport\nAnd return Promise\nIf it's okey I can implement?\n. @ruflin On upcoming weekend-s I am going to prepare a small PR related this issue and show a way how to implement it\n. ",
    "romainneutron": "Would you like a test to cover the optimization or the slashes unescaping? \nIf you would like an optimization demonstration, I'd be glad to share a Blackfire profile\n. Thanks a lot, sorry for being a bit slow on this one\n. ",
    "olchick": "\"name\": \"ruflin/elastica\",\n\"version\": \"dev-master\",\nelasticsearch-1.5.2\nIt seems like problem because $query don't call method getQuery() before send request. If I call this method everything work fine.\n. It works for ES 2.x. \nBut still query: [ \"query\" => [ \"query\" => [ \"match_all\" => {} ] ] ], instead of [ \"query\" => [ \"match_all\" => {} ] ]\nAnywhere, Thank you for your answer. \n. It's work for elasticsearch 2.x.\nThank you for your answer. \n. ",
    "jgarczynski": "\ud83d\udc4d \n. ",
    "Gasol": "Assume we define configuration of Elastica in JSON format.\n// config.json\n{\n    \"servers\": [\n        {\n            \"host\": \"elasticsearch-1\",\n            \"port\": \"9200\",\n            \"transport\": \"ACME\\Transport\\Stream\"\n        }\n    ],\n    \"timeout\": \"1s\",\n    \"connectionStrategy\": \"RoundRobin\"\n}\nWe can simply call json_decode to get configuration in array structure, then pass it to constructor of Elastica\\Client. If transport in configuration does not pre-defined in Elastica\\Transport\\AbstractTransport, We will get exception shows Invalid transportwithout this change.\nFor example:\nphp\n<?php\n$data = file_get_contents('/path/to/config.json');\n$config = json_decode($data, true);\n$client = new Elastica\\Client($config);\n. @ruflin I have updated this PR for adding changelog.\n. Maybe we could check whether namespace separator () exists or not? It means it could be FQCN or built-in transport of Elastica right?\n. It does, If $transport is not a AbstractTransport (Line 112), It will throw InvalidException (Line 119).\n. Check namespace seperator is bad idea, We should not assume that class has a namespace.\n. ",
    "vgaldikas": "I would love to have a go at this. But I am new here. Any pointers where to begin? Maybe a link to pull request, that implements something similar to this, so I can analyze it?. The issue is not about suggester. I am aware of them, and I actually use it successfully. The issue is  about 'collate' functionality of Phrase suggester, I found a use case for it today at work, unfortunately Elastica does not provide API for it, and when I wrote the functionality as raw array, I got an exception saying it was not supported (I am not at work at the moment, so cannot provide the actual exception). So at the moment my suggester works like so:\nhttps://pastebin.com/WYbJEmAw\nSo the above works fine. Just one problem, is the suggestions contain phrases, which do not actually exist in the index. What I tried to do is:\nhttps://pastebin.com/qhVxr83B\nBut as collate is not supported, I got the following exception:\nFatal error: Uncaught Elastica\\Exception\\ResponseException: suggester[phrase] doesn't support array field [collate] in /home/vytautas/dev/vytautas.kainos.dev/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php on line 171\n( ! ) Elastica\\Exception\\ResponseException: suggester[phrase] doesn't support array field [collate] in /home/vytautas/dev/vytautas.kainos.dev/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php on line 171. Oh crap. I just realised something, now after reading my last comment. Had I not used array, but constructed the query, via Query object, it probably would of worked, right?. https://pastebin.com/RFmyXqs9\nit seems to be working like so. \nShould there still be a way, to do it via something like, 'setCollate'? . @ruflin Yes I agree. Can I get a bit of guidance on how to develop. I forked and cloned your repository. I got the docker running. (https://pastebin.com/raw/zCrYzQcu). I can send request to elastic search, I can get into the shell via (make env-shell). \nBut now I am lost... how do I actually start editing and running the code? I suppose I should set up a test, and create a testing index, and make it pass. But I am kind of lost... if I get into the env-shell, the file structure is diferent then what i have in my cloned repository:\nhttps://pastebin.com/aiDga1SH\nI suppose what I am looking for is what do I do once I have docker up and running in terms of where do I edit code, and how do I execute it. Sorry if this is a bit of noobish question, but my experience with docker is limited. Btw I am using Ubuntu, and PhpStorm.. Whooray, I got it to work. \nPlease see the comment on the phpunit test commit. I am not sure how to best go about one of the parts, see if you could point me in right direction, because I can't seem to find a way to create an inline query properly. . @ruflin Yes, this is what confused me. \nSo should I create a separate issue for SearchTemplate, and have a go at cracking that first, and then come back to this? Or do the whole lot on this branch?\nAnd in Regards to search template, should it still be -> SearchTemplate extends AbstractQuery, and then setCollate would take SearchTemplate as parameter? Or should it be a separate thing all together?. @ruflin ok, that sounds fair enough. i will have ago at this first, but my first impression is that implementing that may be way over my head, maybe once I start digging it will prove to be simpler then I imagined :). ",
    "nishantsaini": "@ruflin : Thanks for the suggestion :+1: \n. If you are using elasticsearch 1.x then I would suggest to use BoolAnd (filter) and then keep on adding term (filter)\nphp\n$boolAnd = new \\Elastica\\Filter\\BoolAnd();\n$boolAnd->addFilter(new \\Elastica\\Filter\\Term([\"emails.status\" => 1]]));\n$boolAnd->addFilter(new \\Elastica\\Filter\\Term([\"emails.is_main\" => true]]));\nHope this helps.\nFor es 2.x filters are removed and you have to use bool query in filter context to do the same.\n. ",
    "wamania": "Done !\n. look good now, argument forced to type ScriptFields, test ok\n. Happy to have been usefull, tell me if i can do some thing else.\n. I used the same structure as Elastica\\Aggregation\\TopHits which is very similar.\nphp\n/**\n     * Set script fields.\n     *\n     * @param array|\\Elastica\\Script\\ScriptFields $scriptFields\n     *\n     * @return $this\n     */\n    public function setScriptFields($scriptFields)\n    {\n        if (is_array($scriptFields)) {\n            $scriptFields = new ScriptFields($scriptFields);\n        }\n        return $this->setParam('script_fields', $scriptFields);\n    }\nI think we should keep the same prototype (we can change both).\n. ok, i agree\n. ",
    "aequasi": "Derp.\n. ",
    "galexth": "Thanks for help! Did it this way: \nphp\n        $emailNested = new Nested();\n        $emailNested->setPath('emails');\n        $BoolQuery = new BoolQuery();\n        $BoolQuery->addFilter(new Term(['emails.status' => $status]));\n        $BoolQuery->addFilter(new Term(['emails.is_main' => true]));\n        $emailNested->setQuery($BoolQuery);\n. ",
    "piwii": "Fix in #1176 \n. your welcome, is it possible to create a new tag ? @ruflin \n. ",
    "ChristopheBoucaut": "Np :) Thanks for Elastica :)\n. In this case, Elasticsearch doesn't just deprecated the option, it has already removed this option. So, Elasticsearch returns an error if you send the request. My change is just to notify the dev before (+ save time to understand the problem).\nBut I understand. This class is already deprecated so we shouldn't use it. So you can close this pull request =).\n. Ok\n. Ok. So can we close this pull request and just wait the next major release to remove this class ?\n. Ok, I try to change the PR to remove the class (+test) this week-end.\n. I updated the code to remove Filter\\Terms class and I update tests. I was not able to run the tests :/\n```\nWaiting on elasticsearch(elasticsearch:9200) to start...............................\nElasticsearch is not running or is not healthy.\nAddress: elasticsearch:9200\nMakefile:20\u00a0: la recette pour la cible \u00ab\u00a0run\u00a0\u00bb a \u00e9chou\u00e9e\nmake: *** [run] Erreur 1\n```\n. For the fail, i don't know :/ If I remove class, I need to remove 'terms' in the $filters array for all versions classes.\nThere was 1 failure:\n1) Elastica\\Test\\QueryBuilder\\VersionTest::testVersions\nfilter \"terms\" in Elastica\\QueryBuilder\\Version\\Version090 must be defined in Elastica\\QueryBuilder\\DSL\\Filter\nFailed asserting that false is true.\n/elastica/test/lib/Elastica/Test/QueryBuilder/VersionTest.php:51\n/elastica/test/lib/Elastica/Test/QueryBuilder/VersionTest.php:34\n. @ruflin, I create a new PR to remove the older query builders and I will rebase this branch after or I remove query builder in this PR ?\n. ",
    "simaranjit": "@ruflin Thanks, I will do the required changes.\n. Hi @ruflin looks like build system is down?\n. Hi @ruflin \nUnfortunately, no luck\nThe command \"sudo apt-get -o Dpkg::Options::=\"--force-confnew\" install -y docker-engine=1.13.1-0~ubuntu-trusty\" failed and exited with 100 during .. Sure, I will update it.\n. Yes, I will add test for it.\n. ",
    "sukhcharanvirdi": "Thank you @ruflin I am on it. . ",
    "willemstuursma": "Composer does not take it into account, but Github does. Zipballs actually are git-exports and hence obey .gitattributes. Zipballs are downloaded by Composer when installing with --prefer-dist (default).\n. Thanks, appreciate it. \n. It's not very obvious but it is merged with the export-ignore option. \n. \u2714\ufe0f\n. Ok, moved the changes.\n. ",
    "jimmykirk": "Thank you @ruflin \nI was able to convert my queries over. However, the only issue I have remaining is that creating the has child with bool queries seems to have a bug.\nI have several bool queries like this in an array. I want to add those to my has child object so that they are all inside. If I add a single boolQuery object to the hasChild constructor, it works as intended. \nHowever, if I add the array it works, but also spawns a matchAll query object as seen here.\nI see the BaseQuery create function checks the item submitted and spawns this matchAll object if it evaluates to empty. Perhaps I'm adding these bool queries the wrong way?\nShould I add them to another object instead before submitting them to the hasChild constructor or is there another means by which I can add multiple boolQuery objects to the hasChild query?\nUpdate: I was able to get this working buy wrapping the bool queries in another bool->addMust() which does accept an array of queries.\nThanks again for the great library man. This has made my job a lot easier :)\n. Shortly after posting this, I took a break and approached the issue with a clear head. For all wondering... \nFrom the Elastica\\Query object, call the toArray() method and then use json_encode. Now to figure out why my stuff breaks down.\n. Thank you for Elastica and your help always... and yes, it was breaking changes to ElasticSearch that was my issue.. ",
    "xavismeh": "Glad it's ok. I've also squashed the commit + rebased against master. Cheers !\n. ",
    "lucascherifi": "Same problem for me, @daviddlv could you please add a test ?. ",
    "ssalat": "What is the status of this PR?. When will it be merged into the master branch?. great, thanks! :). ",
    "zplzpl": "i work in yii2 framework.\ni run command:\ncomposer require ruflin/Elastica:5.0.0-beta1 --ignore-platform-reqs\nadd \"--ignore-platform-reqs\" because of my php version is 5.5.x.\ni look dir list.\nnot found test dir.\n. ",
    "xlttj": "I created a raw query like so:\n$client = new Elastica\\Client($config);\n$search = new Elastica\\Search($client);\n$search->addIndex('myindex')->addType('mytype');\n$rawQuery = ['query' => ['match_all' => []]];\n$query = new Elastica\\Query($rawQuery);\n. Well, it has side effects: other raw queries do not work any more, since every array is converted to object. Looks like my personal workaround has to be\n$rawQuery = ['query' => ['match_all' => new \\stdClass() ]];\nPlease reject this pull request.\n. ",
    "bitgandtter": "Elastic 5.x its already GA, came out of beta and RC a month ago. This issue seems to be because the new version ways to handle errors. But since Elastic 5.x brings a lot of new enhancements speed among them a lot of people will start to use it. In my personal case i will for a new project, the one throw me this error and pretend to migrate other ones.\nSo it will be great to handle this new version\n. ",
    "nomoa": "I'm very new to this build system so I may have done something wrong but the build failure seems unrelated (ERROR: Service 'elasticsearch' failed to build: Error: image elasticsearch/elasticsearch:latest not found)... Not sure how to fix that.. @ruflin thanks!. @ruflin sure, the commit should be updated with a new entry in the changelog.. Thanks!. @pengyue thanks for catching this!. @mtdavidson when $data is an array, using text/plain is certainly wrong because the array is converted to a json body by the Transport classes. This will likely break in the near future.\nThe problem here (I think) is that we allow mixed type on $data (array or string).\n- When a client send a string it's ambiguous, the client should provide a content-type\n- When a client send an array it's not ambiguous, application/json must be used.\nIt's why I've set the default to application/json, using text/plain by default does not seem right to me since JSON is used by Transport.\nIdeally we should force clients to override the content-type when not using arrays but I don't see a clean way to do this without introducing a breaking change. The data should not be separated from its content-type, in an ideal world we should introduce a Body class where clients could set the data and its content/type. Sadly it's huge refactoring.\nMore practically I'd be for tracking everywhere we send a string and specify the content/type to use on the call sites.\nI'm not very familiar with elasticsearch-php but since we use AbstractEnpoint as a pivot class before we call Transport on Client::requestEndpoint(), I'd find a way to keep track of the content-type in AbstractEndpoint classes so that we could send it back to the Elastica Transport.\nI quickly checked elasticsearch-php but could not find where Content-Type is handled... maybe with :\nIndex.php:\n```php\n    public function analyze($text, $args = [])\n    {\n        $endpoint = new Analyze();\n        $endpoint->setBody($text);\n        $args['client']['headers'][] = 'Content-Type: text/plain';\n        $endpoint->setParams($args);\n    $data = $this->requestEndpoint($endpoint)->getData();\n\n    // Support for \"Explain\" parameter, that returns a different response structure from Elastic\n    // @see: https://www.elastic.co/guide/en/elasticsearch/reference/current/_explain_analyze.html\n    if (isset($args['explain']) && $args['explain']) {\n        return $data['detail'];\n    }\n\n    return $data['tokens'];\n}\n\n}\n```\nThen in Client.php\nphp\n    public function requestEndpoint(AbstractEndpoint $endpoint)\n    {\n        $options = $endpoint->getOptions();\n        $contentType = Request::DEFAULT_CONTENT_TYPE;\n        if(!empty($options['client']['headers'])) {\n                // TODO: a method to find and extract the Content-Type header\n                // from a list of headers\n                $contentType = findContentType($options['client']['headers']);\n        }\n        return $this->request(\n            ltrim($endpoint->getURI(), '/'),\n            $endpoint->getMethod(),\n            null === $endpoint->getBody() ? [] : $endpoint->getBody(),\n            $endpoint->getParams(),\n            $contentType\n        );\n    }\nI'm not sure that this option (client/headers) is compatible with elasticsearch-php but this maybe works?. I don't think we have many of them, elasticsearch REST endpoints that accept non-json are rare:\n- _scroll with the scroll id, fixed\n- bulk, fixed\n- _analyze, todo (note that text/plain will soon be removed)\n- maybe others\nMy feeling is that elastic wants to deprecate and remove all these ambiguities by accepting only bodies that are in a known XContent.\nSo one easy fix I haven't thought yesterday would be to always send an array so that it always matches content-type/json (except in the case of bulk where it's properly handled with a custom content/type)\nI think it's possible in most of the cases, if not overriding content-type would be the solution.\n@mtdavidson would you mind testing if changing Index::analyze to :\nphp\n     public function analyze($text, $args = [])\n     {\n         $endpoint = new Analyze();\n         $endpoint->setBody(['text' => $text]); // use an array instead of a plain string\n         $endpoint->setParams($args);\n// [...]\nfixes the issue without changing the default content/type to text/plain. @mtdavidson thanks!\nI think that the use of elasticsearch-php Enpoints is pretty new in Elastica so I don't think Elastica users started to use them directly.\nNote that the issues related to Scroll have just been fixed. You might just merge master again to your PR.. @ruflin done. Ideally we should no longer accept a String as the $data object.\nGiving an array it'll be unambiguously 'application/json' but giving a string we don't know how to decide between json and the bulk format.\nCreating a new class like RequestBody and enforce clients to use it when they plan to send strings directly might be a cleaner approach imo.. done. ",
    "DBARUNNER": "I am using PHP Version 5.5 I cant upgrade it to new Version because of my other application code.\nnow I want to use raw query of Elastica my question is, can I do each query of elasticsearch 5.0.0 in format of raw query ?. yeas it work fine with PHP 5.5 my question is is it work with Elasticsearch 5.0.0 ?. if you please tell me how to remove php required version from ther composer file ? please help i will be grate full from you . @ruflin, just answear this quesion i will be thankfull.\nCan I run each elasticsearch query in  format of Elastica JSON raw query ?. ",
    "gskema": "Which query are you speaking of? As far as I can work out, we should only escape some symbols in the request URI fragments, eg. localhost:9200/<log-{now%2Fd-1d}>/_search?preference=_shards:1,2. Path: /<log-{now/d}>/_refresh\nI tried sending a query with fully escaped path, e.g. %2F%3Clog-%7Bnow%2Fd%7D%3E%2F_refresh, doesn't work (tried through Elastica and Sense).\nWhen path is /%3Clog-%7Bnow%2Fd%7D%3E/_refresh ES responds correctly (resolves the name).\nThey've added a character escape map to the documentation in 5.x : https://www.elastic.co/guide/en/elasticsearch/reference/5.x/date-math-index-names.html. @ruflin I was going to, but I'm having trouble setting up a docker box on Windows at home. My fix would be adding a specific function to Util class for escaping relevant part of an already formed request path: https://gist.github.com/gskema/2e2ce6584737a3b66351e6ec77e8ce20 (WIP) and then using it in Http, HttpAdapter and Guzzle transports.\nWould you say that this fix would be up the library's code standards? I would also write some functional tests for this function.\nI though RegEx replace may be a bit too much, maybe even more difficult than the algorithm above. I thought that doing a quick check for < or > would good quickly bail if there is no date math in the index name.\nAlso, I think that some user may be already using escaped index names, so double escaping would break their code. Should we add a check for strpos('%2F', $path) !== false?\n. @ruflin I think date math can be used in any index name, since the expression always resolves to a single date (explicit string). Why I think we should put in the actual transports: because the user can create an explicit Request($path...) object and the only viable place to put it is before sending actually it (at least from what I've gathered). Also, don't forget bulk operation. The idea is to use unescaped path everywhere and let the use forget about the actual escaping troubles (leave it to the implementation). I also considered that there might be some futuristic transport driver that doesn't use URI :D. @ruflin I want to add an integration test, where we create and index, query it with ...{now/d} through URI and push some bulk documents (index name ends up in JSON body, should be unescaped), using the same Client. I wanted to ask where should I put this test?\nAlso, under which version should I put the change note?. @ruflin I got confused on whether the request path begin with a slash or don't. After some time reading the code I think they never do. I you can confirm this, then it is good to be merged.\nIt'd be nice if someone would test on a real ES app :). Not sure if we should keep this check, as Http and HttpAdapter assume that / is present, but Guzzle transport trims it and reappends. Opinions?. Not sure but we may need %2f check here?. I was wondering if all $path arguments start with /, but since Http and HttpAdapter assume they do, I'll remove this.. I'll check if that's needed at all. I wanted to add a quick check if we even need to escape the path. This covers /_bulk, /_analyze and such cases - quickly exits because there is no escaping to be done.. ",
    "pawelbaranski": "With large data set it may have major impact on performance. In our case we gained 25% boost. ",
    "szepczynski": "Yeah, I know that. I use Elastica\\Query\\BoolQuery but i must use OR statement in filter part of BoolQuery and I cannot see how do that without using deprecated Elastica/Filter/BoolOr. Please look at my elasticsearch query and filter part.\nI have code:\n```\n$departureCoords = new GeoDistance('departureLocation.coords', $location, $distance);\n$stopovers = new Nested();\n$stopovers->setPath('stopovers');\n$stopovers->setParam('filter', new GeoDistance('stopovers.location.coords', $location, $distance));\n// $orQuery = ???\n$boolQuery->addFilter($orQuery);\n```\nIn the last line I need join $departureCoords and $stopovers with OR statement. How I can do that?. Ok, thanks for clarification. I don't follow changes in ES 5. I rewrite my es query to:\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"bool\": {\n          \"should\": [\n            {\n              \"geo_distance\": {\n                \"distance\": \"15km\",\n                \"departureLocation.coords\": {\n                  \"lat\": 52.4,\n                  \"lon\": 16.9\n                }\n              }\n            },\n            {\n              \"nested\": {\n                \"path\": \"stopovers\",\n                \"query\": {\n                  \"geo_distance\": {\n                    \"distance\": \"15km\",\n                    \"stopovers.location.coords\": {\n                      \"lat\": 52.4,\n                      \"lon\": 16.9\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\nAnd now I know how to write the missing $orQuery:\n```\n$departureCoords = new GeoDistance('departureLocation.coords', $location, $distance);\n$stopovers = new Nested();\n$stopovers->setPath('stopovers');\n$stopovers->setQuery(new GeoDistance('stopovers.location.coords', $location, $distance));\n$orQuery = new BoolQuery();\n$orQuery->addShould($departureCoords);\n$orQuery->addShould($stopovers);\n$boolQuery->addFilter($orQuery);\n```\nThanks for help, I didn't find this in documentation!. ",
    "ebernhardson": "I'm not as worried about my case of personally installing Elastica, but about the difficulty of the wide variety of users, from users on shared hosting up to users on their own hardware and everything in between, that run the software i work on.  --ignore-platform-reqs ends up being a bigger problem in this case, because then other packages of the wider software platform which should rightfully pull in older versions, or non-php7 versions, will grab the wrong code.  This is perhaps a shortcoming of composer that platform requirements cannot be ignored on a per-package basis but only globally. Using older versions of other packages is often less of a problem because they are typically more self contained as opposed to Elastica where an upgrade is needed to talk to the upgraded external service. How some sites can manage to install new versions of elasticsearch but not php I can't fully explain, but it is certainly a regular occurance.\n@p365labs You are certainly welcome to an opinion about what users should run, but in terms of distributing open source software I have much less control of what the users actually do use. Debian is actually quite good about backporting security fixes even after php itself stops, I'm not as familiar with the others but I wouldn't expect much less.The php minimum requirements are set after a large amount of hand wringing between dozens of developers debating the tradeoffs made, and are then generally set until the next LTS version of our software is released (to keep backports, including security backports, sane among other reasons).There are a lot of conflicting needs that are taken into account when choosing minimum requirements, feel free to peruse https://phabricator.wikimedia.org/T118932 if you are curious how our particular organization does it.\nFor my use case, the best option currently seems to be overriding the ruflin/elatica package in the \"repositories\" section of my composer.json. This essentially means copying the elatica composer.json into my own, removing the php requirement, and adding a dist section that describes where to get the code. This certainly works although is a bit verbose. I can't say I agree with adding these roadblocks in for releasing software, but i can certainly see where releasing a single library has much different requirements than releasing a complete platform.\n. I'm working on CirrusSearch, which is the extension to mediawiki that integrates with elasticsearch and powers search on wikimedia sites (wikipedia, etc). We are currently in the process of upgrading the production cluster to 5.x, hence how I've come across this. One of the reasons for upgrading to 5.x is to have access to the updated completion suggester API, but i digress. Production in our case runs hhvm so the 5.6 minimum requirement isn't a problem there. It's a problem for our external users, as we have the minimum php versions set to 5.5 until the next LTS release (mid 2018, we do LTS every 2 years)\nAs mentioned above the most direct solution is re-creating the elastica composer.json within my own package. Composer allows adding a repositories section which can override package definitions coming from packagist. This works for my use case, so i'm not blocked on this but I thought it worth bringing up as we had some internal debate about if it was better to fork and re-publish elastica with the lower version, or override the package definition.. I'd be happy to take on the requirements of backporting / maintaining a 5.5 branch. With that published to packagist seems like a reasonable way forward to keep things simple on both ends.\n@merk Having or not having specific packages for LTS is neither here nor there. While our (mediawiki) support of 5.5 is specifically for the thousands of installations outside wikimedia's production usage, our production servers all run LTS releases of their distributions. We (and I imagine most organizations with hundreds to thousands of servers) maintain an apt repository with backports, such as elasticsearch, where necessary. When running low thousands of servers with a wide variety of services it's quite nice to leave things in a 'just works' situation. Some services such as elasticssearch may have teams dedicated to the single service+integration and able to keep up to date to continually improve results for thousands of search requests per second, while other services that are still important but not under active development may be simply delegated to an ops team that can't go around upgrading major software versions every year. In our server farm even upgrades from one LTS to the next are often done on a service by service basis over the course of a year or two due to the amount of work involved making sure everything continues smoothly with appropriate logging, monitoring, expected failure cases, etc. etc.. I think the approach sounds reasonable. While semver is nice, i don't think it applies in this use case. Since the elasticsearch API's change in incompatible ways between major releases I think it's worthwhile for elastica major versions to map to elasticsearch major versions.. Hmm, as far as I know composer needs a release tag to be able to point to it as a specific version, so that would probably be best.. Thanks for setting it up. I've put up a PR that alows the branch to operate against (only) php 5.5.. Not sure why github closed it when i pushed ... anyways I updated the patch to have .travis.yml run with env: TARGET=\"55\". I think this will do the trick, but I'm frightfully unfamiliar with travis so it's mostly a guess. indeed it should have, will fix. Changelog updated. I'm not 100% sure. The most obvious thing for me would be if one was implemented in terms of the other, so they both do the same thing.\nTacking on the error key check to the end of isOK() and making hasError() return !$this->isOK() would probably be the most direct.  This has a knock on effect though, hasError() can return true but getError() will return an empty string. Should that also be updated to generate errors for things other than the 'error' key in the response?\nQuasi related,  isOK() currently expects a returned value that contains a 'status' key to have that key contain an http status code, but some endpoints such as /_cluster/health/{indexName} will return a json document containing the string green/yellow/red there. It might be difficult to have a single method that can look at any elasticsearch response and say whatever you requested must have worked.. Following the principle of least surprise, I would expect Response::hasError  to return true for anything other than a successful response.. ",
    "teodorpav": "Hi, please explain how connect back to HTTP?\n'I figure out how to set the PHP connection to Elasticsearch back to HTTP, I will try again.'. ",
    "ilanrivers": "Opened a PR : https://github.com/ruflin/Elastica/pull/1243. @ruflin Where exactly would this best fit? I do not see any other integration test for the other options.. ",
    "ilithium": "@ruflin So I'm using 2.3.1 - is this compatible with this version of Elastica?\nEither way, it would be good to understand how these \"filter contexts\" are used.. ",
    "dabroek": "Instead of calling addDocuments on the client directly, I've solved this by setting a request param on a Bulk request:\nphp\n$bulk = new Elastica\\Bulk($this->client);\n$bulk->setType($type);\n$bulk->setRequestParam('pipeline', 'your_processor_name');\n$bulk->addDocuments($documents);\n$bulk->send();. ",
    "osnard": "This sounds like a nice workaround. Thanks for sharing!. ",
    "thePanz": "@Tobion : Changelog added. @ruflin Changelog added, plus:\n- fixed a typo in the test name (it was \"shards\" instead of \"replicas\")\n- removed usage of empty, as we can set 0 (zero) replicas. @ruflin The failures are related to an update on Travis, where the environment is not able to start.\nThe code is not even tested :(\nAre you aware of such failure?. Thanks @p365labs ! :)\n@ruflin rebased and pushed.. tests are starting :). @ruflin tests passed! yay! :). Great! Thanks!\nDo you want me to prepare the updated changelog for the 5.x branch?. Yes @ruflin , it's only a change in the php docblock :). Well, people working on projects using phpstan will be quite happy about it ;). Thanks @ruflin, it should be enough :). Do you mean the 5.x branch?. Just my 2c:\n- I can't see where the new const DEFAULT_* are used\n- can we define the visibility for the const as \"public\"? TBH: I can't remember from which minor version of PHP7 it's supported tho\n-  @massimilianobraglia did you use any php-cs-fixer? in that case could be useful to have those in the CI pipeline, to ensure that any new PR will comply to those rules\n- backporting: I'd like to have those in the 5.x branch, but we still require php >= 5.6 there :(. The code to invoke that API is different on master, where the parameter is already handled as an array, rather than a string like in v5.\nI will add a test ASAP.. @p365labs I added the integration test.\nbut the failure is quite weird: https://travis-ci.org/ruflin/Elastica/jobs/479595847\nis it a known issue of the testing pipeline?. I started reviewing it, no comments so far (just a minor about the\nchangelog ;) )\n. @ruflin @jandom let's continue this discussion on https://github.com/ruflin/Elastica/pull/1595\nI'd like to clean this up, before tagging a new release.\nBtw: the body was only added to the Guzzle implementation, and we missed 2 other clients (HttpClient, ad an instance).. @ruflin I'm glad for your offer! :+1:\nPlease add me ad an admin (I'll work mainly on the 5.x branch, for now) :)\nI'll manage the releases for that too :). I am also worried about that line, most of all: if the _params['post_flter'] is not an object, the call to ->toArray() will break.\nAre we running the same code on 5.x?. @ruflin fine for me!. Sorry @ruflin , I just read your message :) Thanks for taking care of it!. @ruflin PR number and link added. Does it work OK for you?. The problem I see here: the whole response will be stored twice, first as the response itself, and the second time in the TransferInfo object. When fetching huge responses from ES, this could be a significant overhead.\n@jandom : which is your use-case? why do you need the whole JSON response body here too?. Looks like the comment has been added twice, we already had a backport and usually we just mention the backport PR. Don't know if we have any \"standard\" here, but those 2 log entries are confusing IMHO. Thus, we did not add 2 new features, just backported something. In this case I'd like to have the [backport] ... log message, pointing to this PR. WDYT @ruflin ?. @jandom if I got it correctly, you're using the body to display the response received from the client. In here: https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465/files/e5386eac9a4b1ee22d7d215ebe32afc5fec046af#diff-dbbc2aef2d5d1dd159ad264fb54364dcL51, why don't you keep the response data and use it in case of an exception?. The $responseData = $response->getData(); can be used instead of storing twice the body contents.. Do not change lines not relevant to this PR :). ",
    "shiveshk": "Sorry to bother you guys\nproblem is resolved, I was missing some basic think in writing query\nYou can close issue now.\nOn Mon, Feb 27, 2017 at 4:49 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\nWhich version of Elastica and Elasticsearch are you using? It seems more\nlike you get an error from elasticsearch directly.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1256#issuecomment-282693832,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMY55Zr_lebvd7iKIiF4O9E2UmJpF8qxks5rgrEvgaJpZM4MJgg6\n.\n. \n",
    "Jan0707": "Just curios here, as I encountered the same issue. How did you solve it ?. ",
    "PhilippeMenard": "+1 I have the same problem.\nEDIT:\nFound the solution. Instead of declaring your search term like this : \n$queryTemp = new Query\\Match($field, $searchTerm);\nUse this function :\n$queryTemp = new Query\\Match();\n$queryTemp->setFieldQuery($field, $searchTerm);\nThen you can use any of the parameter functions (Boost, fuzziness, etc). ",
    "z38": "As it's not documented, I didn't expect that the query gets modified and assumed it will be the same after counting. The param is set to 0 in every case.\nI was trying to figure out if this should be fixed here or in FOSElasticaBundle (which is tracked in #1215 now).. It might be better to clone the query and keep the removed line. With the current fix, the first 10(?) results get transmitted over the wire needlessly.. ",
    "shandyDev": "I agree with @Tobion that it is necessary to further maintenance & support on which need additional efforts. But @Zyqsempai also right - it is great, provide additional choose for developers. For example, code above with \"new\" (imagine that this is a class method) can not mocking normally and therefore hard testing because of hardcoded dependencies. And querybuilder methods can mock with return mocks for each elastica queries.\nSo I think we can keep querybuilder and clean up it. For example delete Versions functional (because each elastica version support own elasticsearch version), make querybuilder more fluent (without Facade), etc.. ",
    "cobak78": "so, it's fixed on #1272? . ",
    "thaiphv": "@ruflin, do later versions work with ES 1.5?. ",
    "daVinciCEB": "The reason I had '/php_scripts/Elastica/' is because it is supposed to point to the lib folder in your repository (so that the autoloader can then find the file paths and the classes correctly), and that is the path that points to it.\nI actually was able to figure it out on my own, using composer and comparing the differences in the git clone installation and the composer installation. The reason that this is happening is because when you do the normal git clone, it doesn't load the Psr library files, or the Elasticsearch library files. Because of this, the initialization of the \\Elastica\\Client class fails (since it uses both of these libraries), and then the class can't be found.\nYou should update the documentation and the dependencies section to include that they need to download and load these libraries as well when installing through git clone.\nOther than that, I love the library! Installing through composer was able to resolve all of the errors, and it's perfect for what I'm trying to do!. Side note, it looks like this is only happening on the Type->exists(), since I'm using Index-exists() and that seems to be fine.. latest versions of both. Let me run some tests on it and see what it could be.. ",
    "nicklaw5": "@ruflin changelog has been updated.. ",
    "ankahla": "It seems that I am using old version 2.2.1 by error. ",
    "elshobokshy": "I am looking to do the same thing .. Still not possible without raw queries? As raw queries will force me to re-writ all of my code.\nJust adding this to lib\\Elastica\\Query.php worked for me : \npublic function setFilterQuery($filter)\n    {\n        return $this->setParam('query', $filter);\n    }\nI'm using v2.3 for info.. How can you sort an aggregation in Elastica?. I found out I just had to write it as this to find my right format : \n'collection_date_added' => array('type' => 'date', 'format' => 'yyyy-MM-dd HH:mm:ss')\nI'm leaving this here for reference. . Full error message : \nFatal error: Uncaught exception 'Elastica\\Exception\\InvalidException' with message '$data['script'] is required' in /var/www/vendor/ruflin/elastica/lib/Elastica/Script.php:119 Stack trace: #0 /var/www/vendor/ruflin/elastica/lib/Elastica/Script.php(99): Elastica\\Script::_createFromArray(Array) #1 /var/www/vendor/ruflin/elastica/lib/Elastica/Filter/Script.php(43): Elastica\\Script::create(Array) #2 /var/www/vendor/ruflin/elastica/lib/Elastica/Filter/Script.php(30): Elastica\\Filter\\Script->setScript(Array) #3 /var/www/vendor/ruflin/elastica/lib/Elastica/QueryBuilder/DSL/Filter.php(435): Elastica\\Filter\\Script->__construct(Array) #4 [internal function]: Elastica\\QueryBuilder\\DSL\\Filter->script(Array) #5 /var/www/vendor/ruflin/elastica/lib/Elastica/QueryBuilder/Facade.php(62): call_user_func_array(Array, Array) #6 /var/www/htdocs/adm54140/achatsReport.php(57): Elastica\\QueryBuilder\\Facade->__call('script', Array) #7 /var/www/htdocs/adm54140/achatsReport.php(57): Elastica\\QueryBuilder\\Facade->script(Array) #8 {main} thrown in /var/www/vendor/ruflin/elastica/lib/Elastica/Script.php on line 119 array(4) { [\"code\"]=> string(7) \"E_ERROR\" [\"message\"]=> string(1020) \"Uncaught exception 'Elastica\\Exception\\InvalidException' with message '$data['script'] is required' in /var/www/vendor/ruflin/elastica/lib/Elastica/Script.php:119 Stack trace: #0 /var/www/vendor/ruflin/elastica/lib/Elastica/Script.php(99): Elastica\\Script::_createFromArray(Array) #1 /var/www/vendor/ruflin/elastica/lib/Elastica/Filter/Script.php(43): Elastica\\Script::create(Array) #2 /var/www/vendor/ruflin/elastica/lib/Elastica/Filter/Script.php(30): Elastica\\Filter\\Script->setScript(Array) #3 /var/www/vendor/ruflin/elastica/lib/Elastica/QueryBuilder/DSL/Filter.php(435): Elastica\\Filter\\Script->__construct(Array) #4 [internal function]: Elastica\\QueryBuilder\\DSL\\Filter->script(Array) #5 /var/www/vendor/ruflin/elastica/lib/Elastica/QueryBuilder/Facade.php(62): call_user_func_array(Array, Array) #6 /var/www/htdocs/adm54140/achatsReport.php(57): Elastica\\QueryBuilder\\Facade->__call('script', Array) #7 /var/www/htdocs/adm54140/achatsReport.php(57): Elastica\\QueryBuilder\\Facade->script(Array) #8 {main} thrown\" [\"file\"]=> string(55) \"/var/www/vendor/ruflin/elastica/lib/Elastica/Script.php\" [\"line\"]=> int(119) }\nCode is : \n$filtre = array();\narray_push($filtre, $qb->filter()->range(\"achats_date_livraison\", array(\"lte\" => \"$today\")));\narray_push($filtre, $qb->filter()->term(array('achats_type' => '2')));\narray_push($filtre, $qb->filter()->script(array(\"source\" => \"doc['achats_id'].value != doc['achats_parent_id'].value\")));\n$addMust = $qb->filter()->bool()->addMust($filtre);\n$addMustNot = $qb->filter()->bool()->addMustNot($qb->filter()->term(array('inBL' => '0')));\n$elastica_query->setQuery(\n        $qb->query()->filtered(\n            $qb->query()->match_all(),\n            $addMust,\n            $addMustNot\n        )\n    )->setLimit(5000000);. I'm using version 2.3 :) It's old I know. but I'm limited to my company's PHP version. Anyways it's okay I found another way to do it. I just wanted to point out a 'maybe bug' in an ancient version. Thanks anyways!. Terms aggregation is a group by.. https://github.com/ruflin/Elastica/issues/1289. Could you please add a small example on how to use this new class to get my desired result? . ",
    "radiocity": "Version is 5.3.0\n$row content during error:\nArray\n(\n    [0] => Array\n        (\n            [id] => 327\n            [content] => Lorem ipsum dolor sit amen\n        )\n). I`ve solved the problem.\n$row content should be:\nArray\n(\n    [id] => 327\n    [content] => Lorem ipsum dolor sit amen\n)\nFirst comment updated\nSorry. ",
    "mhernik": "Sure! Will do so and I let you know. . Changelog and test added.. Hi,\nYeah, I was doing some last minute changes on machine without docker, so without running tests.  I'll bo back to it on Monday.\n@alekitto Seems like it. What a coincidence, a 4 year old issue, and 2 PRs for it on same day :). Hi,\nI've updated PR to pass the tests.\n@alekitto We definitely should merge our work! What do you propose? Do you want to make a PR to my fork?. @alekitto is further working on span_within and span_not queries. Will ping you, when it's ready!. Hi @ruflin,\nActually I got him @alekitto wrong. He said that he's working on on span_within and span_not queries, but will create additional PR for that. So that PR is ready now for review! :). Hi @ruflin. Looks like squashing also merged other people's commits into mine PR.\nI think it will be better to make a new PR, or is there a way to fix it?. Sure. Sorry I didn't fix this squashing. Glad I could help.\nOn Tue, Jul 25, 2017 at 11:03 AM, Nicolas Ruflin notifications@github.com\nwrote:\n\n@mhernik https://github.com/mhernik I merged this as I really wanted to\nhave it in as I plan a release the next hours / days. I hope this works for\nyou.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/1320#issuecomment-317676109, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AEk9i2G99hjxNQYL28kz0_6Ac5543CKfks5sRa9xgaJpZM4NunnX\n.\n. I think @alekitto wants to make another PR with missing queries. All that\nwas done in this branch was merger to mine in PR #1319\n\nOn Tue, Jul 25, 2017 at 12:18 PM, Nicolas Ruflin notifications@github.com\nwrote:\n\n@mhernik https://github.com/mhernik Do you know what is going to happen\nwith #1319 https://github.com/ruflin/Elastica/pull/1319\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/1320#issuecomment-317694523, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AEk9i5_RA4gEoo-TW0hwN_YVOBNVwDehks5sRcDggaJpZM4NunnX\n.\n. \n",
    "nickygerritsen": "On it!. Yeah my test failed before. The other tests in this class are different: they use getSetting and then set on that object instead of directly using setSettings on the index. The later is what was broken (and not tested at all yet).. Done!. ",
    "mweibel": "@ruflin +1 on the patch release. Affects us right now :) Thanks! \ud83d\udc4d . Thanks! I noticed 5.2.1 has a BC break if you override Elastica\\Client::request()\nsee: https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1258. ",
    "jbboehr": "That was the only file that was executable that shouldn't have been:\n```\n$ find -executable -type f -not -wholename '/.git/'\n./docker-entrypoint.sh\n./lib/Elastica/Search.php\n./env/elasticsearch/docker-entrypoint.sh\n```\n. ",
    "Mikevandee": "Sorry I had a miss match in elasticsearch version. And called _dissmis not _close.. ",
    "camohub": "I have this problem with older version of Elastica but now Elasticsearch 6 throws an error Content-Type header [application/x-www-form-urlencoded] is not supported \nI need to find out how to set headers for request. Can somebody show me the way how to do it?\n. Now I have only one Elastica which uses ElasticaStrategy class to handle this two versions on Elasticsearch.  Here is the code\n```\n<?php\nclass ElasticaStrategy implements \\Elastica\\Connection\\Strategy\\StrategyInterface {\nprivate $indexes = [\n    'newlocalsearch' => 7,\n    'search_4' => 6,\n    'search' => 6,\n    'ov' => 6,\n    'log' => 6,\n    'event' => 2,\n    'event_new' => 2,\n    'event,event_new' => 2,\n    'events' => 6,\n    'foaf' => 6,\n    'liens' => 2,\n    'fulltext' => 2\n];\n\n/**\n * @param array|\\Elastica\\Connection[] $connections\n *\n * @return void\n */\npublic function getConnection($connections) {\n    $b = debug_backtrace();\n    foreach ($b as $d) {\n        if (isset($d['class']) && $d['class'] == 'Elastica\\Client' && !empty($d['args']) && in_array($d['args'][1], ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'])) {\n            if ($d['args'][0] == \"_bulk\") {\n                // todo: nedoriesil som vyber index strategy pri _bulkoch\n                $parsed = json_decode($d['args'][2]);\n                //debug($parsed);\n                //debug($index . \" -> \" . $version);\n            } else {\n                list($index, $type) = explode('/', $d['args'][0]);\n                $version = $this->indexes[$index];\n                //debug($index . \" -> \" . $version);\n            }\n            break;\n        }\n    }\n\n    foreach ($connections as $connection) {\n        if ($connection->isEnabled() && $connection->getParam('version') == $version) {\n            return $connection;\n        }\n    }\n\n    throw new \\Elastica\\Exception\\ClientException('No enabled connection');\n}\n\n}\n```\nWhen new Elastica/Client( $config ) is created this ElasticaStrategy is included in $config array under the key connectionStrategy => ElasticaStrategy. And it works. . Yes it works. It is used few years. Only the _bulk is in TODO mode. I am not the author of the solution but find it in one of the project I am working on.\n. Ah yes I understand. I will try it. Thanks.. Yes it works. But its really messy..... Yes of course. Thank you.. ",
    "giovannialbero1992": "@ruflin Done! ;-). I'll do a PR on this in these days ! :). @mzf maybe you must add --with-dependencies like written into documentation composer-update. Let me know :). Which version of ruflin/elastica have you declared into composer json?. @ruflin I've removed static from class and renamed method in run. What do you think about this version?. @ruflin, I've changed it :). @ruflin I've changed all names with '_' and removed a missing static from method.\n_getDestPartBody, _getSourcePartBody and _getBody now are protected. Thanks for your reviews :). For the moment i've deprecated CrossIndex and implemented Reindex with same functionalities of CrossIndex (and little bit more). Sure we can implement in a next time more functionality. \nif you want contribute with some PR you are welcome!. @osavchenko now elastica is php7 compliant and has dropped support to php5. Maybe it can be useful start to use type hinting http://php.net/manual/en/migration70.new-features.php.. I usually apply final by default to classes that are not specifically designed to be extended. \nThis avoids breaking an eventual child class when refactoring this class.\nIf you want i can remove final from this class.. Ok, I've removed final. I've used static method because there are not external depenendencies but maybe, to be compliant with OOP I should remove static. Do you suggest to pass parameters into constructor or in reindex method ?. I think that call new and ->run() (or ->start()) are ever near to constructor and there is no need to change options after have called new Reindex(...). Maybe in a first time we can see how community uses reindex and if there will be need to change the use, we will change it consequently. . I changed to be compliant with old pattern... maybe we can change the pattern into another commit on all protected/private variables :). ",
    "mzf": "@giovannialbero1992  Thanks for advice! But it not helped me.\n```\n\ncomposer update ruflin/elastica --ignore-platform-reqs --with-dependencies\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nNothing to install or update\nInfo show that still 5.1\ncomposer info ruflin/elastica\nname     : ruflin/elastica\ndescrip. : Elasticsearch Client\nkeywords : client, search\nversions : * 5.1.0\ntype     : library\nlicense  : MIT License (MIT) (OSI approved) https://spdx.org/licenses/MIT.html#licenseText\nsource   : [git] https://github.com/ruflin/Elastica.git 07a770164b37716748aca1f19340cce48233229b\ndist     : [zip] https://api.github.com/repos/ruflin/Elastica/zipball/07a770164b37716748aca1f19340cce48233229b 07a770164b37716748aca1f19340cce48233229b\nnames    : ruflin/elastica\n\nautoload\npsr-4\nElastica\\ => lib/Elastica/\nrequires\nphp >=5.6.0\npsr/log ~1.0\nrequires (dev)\naws/aws-sdk-php ~3.0\nguzzlehttp/guzzle ~6.0\nsuggests\naws/aws-sdk-php Allow using IAM authentication with Amazon ElasticSearch Service\negeloen/http-adapter Allow using httpadapter transport\nguzzlehttp/guzzle Allow using guzzle 6 as the http transport\nmonolog/monolog Logging request\n```. @giovannialbero1992 \"ruflin/elastica\": \"5.*\". ",
    "alekitto": "@ruflin I've submitted a WIP PR for this, i'll try to complete it during this weekend.. I've rebased and squashed my work.\nThe only thing left is the field_masking_span, but it's barely documented (there's only an example), so i think we could leave this out, as the implementation of the query class would be probably wrong.. Ok, fixed all the setters in SpanContaining, SpanNot, SpanWithin and SpanNear (missed in #1320). Builder.php is an empty file, I probably deleted it without noticing.\nThe Changelog already contains a line for Span* queries addition. Do I have to add another one for these three?. \ud83d\udc4d Done.. @mhernik Yeah, what a coincidence! I think we can merge our work, as my PR is still missing span_near and span_or queries, as some functional tests you've already written. What do you think about it?. I'll rebase my work upon master and push the work into #1319 in a day.. ",
    "francisbesset": "Good! \ud83d\udc4d . ",
    "mickaelandrieu": "Hello,\nbig thanks for this contribution @mtdavidson!\n@ruflin do you plan to publish a new release - including the support of ES 5.4 - soon? I know you release often, this is why I'm wondering if I can rely on master branch right now and use ES 5.4 in production :)\nHave a nice day\nMicka\u00ebl. ",
    "daviscaics": "Cool! I am interested in implementing this.\n@ruflin I am unsure about this though:\n\nimplementing it in a more \"flexible way\" and allowing setParam or _setRawParam to be used as for most other Elastica objects\n\nSeems to be a a flexible way to implement this, but I am not familiar with this concept of Param. So far I looked at existing classes and found various different usages. Is there an existing class that would be a good example for how it should be used? Or maybe some other resource to understand that Parameter-thing?. Yes, starting to work on that.\nThanks for the helpful side note!. ",
    "bgaleotti": "https://github.com/elastic/elasticsearch-php/commit/59b3c08 looks the same. ",
    "etudor": "Had the same problem with: ruflin/elastica 5.2.1 and elasticsearch 5.4.0\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"illegal_argument_exception\",\n        \"reason\": \"Failed to parse request body\"\n      }\n    ],\n    \"type\": \"illegal_argument_exception\",\n    \"reason\": \"Failed to parse request body\",\n    \"caused_by\": {\n      \"type\": \"json_parse_exception\",\n      \"reason\": \"Unrecognized token 'DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAHGKoWY3h2eGxBcHZUUGlINHRDa21USy0xUQ': was expecting ('true', 'false' or 'null')\\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@6d20e23; line: 1, column: 64]\"\n    }\n  },\n  \"status\": 400\n} \nUpdating ruflin/elastica to dev-master solved the problem.. ",
    "kschroeer": "That's not the best solution but it works and solves my problem. Thanks!. I also tried to replace flush by refresh but the problem still exists.. Yes i already had a look at the existing test suite. But the problem is that I found only unit tests but no integration tests which make \"real\" calls to the elasticsearch server.. ",
    "Mbt21": "I don't know to fixed this problem, I already to instal on mediawiki see https://testwiki.wiki locate bug at searching page. What method do you mean? . why you can't changed in this file so can't bug in other mediawiki Instalations?. @ruflin where I can edit? I have some edit but error. see this display bug https://testwiki.wiki/wiki/Special:Search/Elastic. ",
    "metamaker": "\nPretty sure numeric_range was deprecated ages ago. Is there something that just using range is not accomplishing?\n\nHi @mtdavidson,\nNumericRange doesn't have any additional methods than Range:\n```\n<?php\nnamespace Elastica\\Query;\n/\n * Numeric Range Query.\n \n * @author Nicolas Ruflin spam@ruflin.com\n\n * @link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html\n */\nclass NumericRange extends Range\n{\n}\n```\nOriginal: https://github.com/ruflin/Elastica/blob/1c49fd89e194eec5fdbd50c8d55e048278b2915d/lib/Elastica/Query/NumericRange.php\nIt is not marked as deprecated. I expected that I could use it for numeric range query.\nLikely not a big problem, but why to have this class in first place and confuse people?\nP.S. I don't have any problem with using Query\\Range for my case, but just was confused when ES thrown error during usage of class that should have worked.. Good, I will provide PR on evening.. @ruflin, here is PR https://github.com/ruflin/Elastica/pull/1334. Solved by PR https://github.com/ruflin/Elastica/pull/1334. Yes, of course. I somehow missed that statement in CONTRIBUTING.md, sorry :). Ok, moved.. ",
    "ryan-mchale": "Elasticsearch version 2.0.\nElastica came with a Magento module for Elasticsearch made by Bubble. Looking through the actual Elastica files though I can't find a version number anywhere. The version of the Bubble module is 4.1.2.. ",
    "jost125": "Sorry PR to wring repo.. ",
    "yashtodi94": "Oh ok. I suggested it because I struggled with it for an hour :)\nThis issue can be closed.\nJust to satisfy my curiosity, whats the reason behind it being removed in 6.x release? Is it to provide some kind of backward compatibility or something similar?. ",
    "pjarmalavicius": "My bad. ",
    "matigda": "I installed FOS with \"composer require\" and assumed that version 5.x will be downloaded automatically, but it's 4.x version. Thank you and sorry for the trouble ;-). ",
    "1ed": "From the changelog:\n```\n5.3.0\nBackward Compatibility Breaks\nRemoved Query\\NumericRange, use Query\\Range instead #1334\n...\n5.1.0\nBackward Compatibility Breaks\n\\Elastica\\Script\\AbstractScript added the script language as constructor argument and sub-classes must implement getScriptTypeArray\n...\n3.2.0\nBackward Compatibility Breaks\nMethod \\Elastica\\ResultSet::create and property \\Elastica\\ResultSet::$class were removed. To change the ResultSet class, implement your own ResultSet Builder. #1065\nProperties on \\Elastica\\ResultSet _totalHits, _maxScore, _took and _timedOut that were originally set on object construction are now accessed by the getters on the ResultSet. #1065\n...\n```\nIf this project adheres to Semantic Versioning these BC breaks should only happen in major releases. If not, then the users of this library are prevented to use permissive version constraints and are in danger of version lock (or at least it is very hard to support multiple versions).. I think, that is not a choice. There are rules, if we do not respect the rules we should not advertise to follow them, I think. I know it's easier on the library maintainer side, but it's a PITA on the consumer side. We can choose to not follow SemVer, but please do not advertise to adhere it if do not.. ",
    "curry684": "From my perspective and experience:\n\nYes, keeping majors together is good practice and clear to the end users. Also, as Semver implies upstream should release a new major when it breaks BC this is also the time when you can break BC here.\n1 on 1 for the majors. Minor and patch are irrelevant from Semver perspective.\nYes, but pragmatically. Given the case we discussed, if you forgot to remove a method that is no longer supported by upstream it was crashing anyway. Giving it a clear exception instead is not breaking BC, and therefore acceptable even in patch releases. It's a bugfix.\n\nThere is a misconception that Semver's implied BC promise would automatically imply it's forbidden to change any kind of historic behavior. It's only meant to imply my application will not break when using composer update. It's fine to change the way it was already broken, or to fix a bug (although if it was usable before it's good practice to save that at least for a minor, or perhaps even a major).. Cheers, thank you for the good and productive discussion!. \ud83d\udc4d from me.. I agree with @greg0ire, as Elasticsearch itself also follows Semver there should never be an issue - even if I used Elastica 6.0.5 with Elasticsearch 6.5.9 Semver guarantees compatibility. So I would definitely only lock the major versions together, and that's what ^6.0 currently would imply.\nAlso I came here because right now I'm not getting 6.0.1 of the main API, released 29 days ago, because of this constraint   \ud83d\ude09 . Yep it would   :) \nAs for the Semver issue itself - imho you solved it wrong in https://github.com/ruflin/Elastica/issues/1374#issuecomment-335400478. The Semver way to solve the forgotten removed function would've been to mark the function as deprecated in the minor/patch, and replace its implementation with a proper exception to avoid the backend itself crashing, which would itself have been a bugfix. \nThis would then automatically make you compliant with Semver and Elasticsearch versioning as it would still imply the current 5.x version (ie. the latest) behaves correctly with the 5.x backend, and make it irrelevant whether the first is 5.2.9 and the second is 5.1.1.. I'd take the pragmatic approach here - it could only break code that was already abusing a well-defined mechanism, and I can't think of a really practical example how it would hurt existing code, it would more probably fix it by accident. So I wouldn't call BC on this.. ",
    "richardfullmer": "The change at https://github.com/ruflin/Elastica/pull/1378/files#diff-e421c6a76338876301c98a5a7e95ab87R333 broke my implementation today since $this->_params['post_filter'] was already an array.\nNoticed exception 'Symfony\\Component\\Debug\\Exception\\FatalThrowableError' with message 'Call to a member function toArray() on array'. Yes, looks the same to me.. ",
    "osavchenko": "Yes, strict type it's the best way. I'll update my PR, thank you. Related to Global Typehint Change. May I help with this feature? . @massimilianobraglia I'll start from the end of the list and we will meet each other in the middle ;). Should we use strict_types?. I'm not sure, probably - not. Guys, I have changed my work and little bit busy last days, so, I remember about PR's and will update them soon. Thank you all! It was an interesting experience and I'm glad to work with you ;). @p365labs could you please review my PR?. @p365labs will fix conflicts and comments. I don't mind if you rebase other. Thank you!. With that typehints it's incompatible with parent class. By default, it trying to return null, but nullable typehints allowed only in php 7.1. In this case, we should remove one test because int(0) converts to string(\"0\") silently. Ah yes, missed that. Thank you!. Sure. Here is that test.. @p365labs as you can see from that test we are passing a plain array and it will have numeric indices (0, 1, 2, ...). Without typization we have check that key should be string and nut empty. With typization numeric array index will be converted silently to string (\"0\", \"1\", \"2\", ...) and that test will not pass.. didn't get this point. we should make it like setMaxInspections(int $max = null) and check field and depends on field set default value?. So, I need to define all default values as constants like const DEFAULT_MAX_INSPECTIONS = some_value instead of default method values?. ",
    "bkvaiude": "Got one sample.\nThanks for the test cases! :+1: . ",
    "Joozty": "I think this should be corrected. Where is the code of API doc? I can fix it. @jmada It depends on which version do you use because in newest version scanAndScroll method was deprecated.\nCheck this comment\nhttps://github.com/ruflin/Elastica/issues/1381#issuecomment-333226378. ",
    "jmada": "Where I can found a concrete example? :(. @Joozty I'm using the '^5.3' versi\u00f3n with ES 6.0.1. ",
    "StefanGlaesser": "That was not the problem as the price is an float and not a textfield. But I've got the issue: I've indexed my data all as string types and not the prices as floats. I've explicitly typecasted the records from the database like this:\n$price = (float)$rowDb['price'];\n\nThen it worked :). ",
    "burzum": "@ruflin yes and no. I haven't seen a single query using the API I've linked. While this methods is returning in fact the count of the result set it is using the _search API and not the _count API? The reason I want to use _count is that _count seems to be more efficient than _search for just getting the count. And I really need just a count in this case.. @p365labs thank you! I haven't seen that. Do you have any suggestion on how to deal with large result sets then? We've got an error message or warning when we had more than, I think it was 10k results. For now we increased the size but would prefer to have a better solution to get the count of a filtered query. Do you have an idea how to improve that?. ",
    "dkarlovi": "\nWhich version of ES are you using ?\n\n5.6.3 Docker image.\n\nI agree with you that not_x_content_exception it's a bit confusing, but failed to parse it's absolutely clear. \n\nI only partially agree here. Failed to parse - which part?\nThe problem got worse by the fact I tried to send the (faulty) document to be stored individually (so, no bulk). This gave me some weird errors about missing Content-Type (it seems Elastica doesn't send one) which caused me to go down the \"debug transport\" route and indeed, the Content-Type header is missing. This made me test other transport adapters, other versions of Elastica, etc.\nI know it's supposed to be assoc array, my problem was that I'm generating the documents and haven't done so properly (as I said, this is no doubt my stupid mistake, can't run from the facts :sob: ).\nProblem is, the feedback to my mistake was quite unclear or even misleading (the header bit), it wasn't something you can glance, slap your forehead and fix in 10sec.\nThat's why I'm proposing to make the feedback better since the one received from ES is not stellar.. @p365labs you're suggesting this should be reported to Elasticsearch?. > Want to open a PR?\nSounds easy enough. :+1: \n\nI wonder if we should add this directly in the Param object so all other objects would inherit it.\n\nMy usual workflow here was to have a custom query built by hand and trying to rebuild it using query builder or such. Param is OK too, but as you can't just paste it to a ES shell to verify it's valid, don't see the value other than easier visual inspection. But, that sounds valid too, now that I think about it.\nYou have much more experience, you decide.. ",
    "mathieuSal": "$path = '/_search/scroll'; -> need to remove the first / :  $path = '_search/scroll';. ",
    "insomniac20101": "hi, Elastic version 2.3.\nWe are using Amazon AWS EC2 instance as application server. Elastic also here. all worked fine more that 6-8 months . we didnt do any changes .. but last month we got 2-3 error as showned upper. Memory size problem. \nEC2 - T2 medium\nwebsite : https://megamart.az\nwhen we do restart of server it again works normally. \n. ",
    "tomekit": "EDIT: This problem was due to my specific edge case with the environment configuration. There was some recursive issue which was fetching enormous amount of data from ES, failing eventually on one of the request. Nothing wrong with ELASTICA !\nExperiencing same problem. What's weird it happens on live, but doesn't happen on testing environment built from live (same data).\nI've got 8GB limit, which is already horribly wrong. When I do profile the code it uses less than 1GB.\nThis is the error:\nEnvironment: live, hostname: live-core5\nFatal Error (E_ERROR): Allowed memory size of 8589934592 bytes exhausted (tried to allocate 20480 bytes)\nin file.../vendor/ruflin/elastica/lib/Elastica/JSON.php:34UniqueID: 5b1a35c67ea4c\nI am looking for a way to get the full stack trace from FATAL.\nWhy this might be? That looks like big raw response from ElasticSearch that can't fit in. \nI am requesting 450 documents, it's really unlikely to be bigger than few hundred MBs.. Thanks for your response, I've update my answer, it wasn't the Elastica the issue finally. . ",
    "mjanser": "I based this on 5.x because that's the currently stable version of ES and we'd like to use this change as soon as possible. Is that okay or should I open a pull request against master and you merge it to 5.x?. @ruflin I added a test and created a second pull request for master: #1399 . @ruflin Thanks for merging! Do you plan a new 5.x release soon?. @ruflin Sure, I can use 5.x directly for now :-). Some lines below this one the scrollId is reset ($this->_nextScrollId = null;) and without that id the search context can't be used anymore. There is also no getter for the scrollId in the Scroll class. Therefore I don't see how the search context could still be useful afterwards.. ",
    "george-ionita": "I needed it yesterday so I wrote it, will make a PR in a bit :). ",
    "gontrocolo": "Hey @george-ionita , its been a year since you wrote that. Any update on this?\nThanks :). ",
    "maltehuebner": "I added the BucketSelector aggregation in #1554.. I added just a line to changelog, is that fine?. I added your feedback to the pull request, please have a look on it :). I hope I now resolved all your issues :). Are we using return types and scalar parameter types as ^7.0 is required in composer.json? I just stumpled upon #1558 and would like to add them into my pull request.. I'm sorry, this happens when I do changes like that on the train :(. Next try. I\u2019m sure I\u2019ll never get a job again if someone sees my git merging skills.. Sorry, had some copypasta for lunch.. ",
    "Koc": "Yes, of course, will do. I'm so sorry. This already implemented: https://github.com/ruflin/Elastica/blob/master/lib/Elastica/AbstractUpdateAction.php#L236 (Document extends from this class),. we are using this backported fix in production, thank you @jenkoian for backport and @ruflin for merging. ",
    "carusogabriel": "@p365labs Should we require this in our composer.json? I've seen this test log file, and couldn't understand what was wrong.. @ruflin There are so many Frameworks, projects and many organizations that are on PHP 7. I guess we should too, or, we need to change our composer.json to match the tests in Travis CI with PHP 5.x.. I guess we have no reasons for not upgrading to PHP 7. Should I rewrite Travis CI? :innocent: . @ruflin Ok. Gonna work on that, get into code, start to refactoring to PHP 7 and I submit the PR. @ruflin Actually, everything is already in PHP 7. I'm just removing all PHP 5.x references, and we should be ready to go.. @p365labs Gonna work on that!. There are some other classes deprecated:\n- Elastica\\Exception\\ElasticsearchException;\n- Elastica\\Query\\GeohashCell;\nmethods:\n- Elastica\\Client::optimizeAll;\n- Elastica\\Client::_log;\nand skipped tests:\n- Elastica\\Test\\Query\\BoolQueryTest::testOldObjectDeprecated;\n- Elastica\\Test\\Query\\BoolQueryTest::testOldObject;\n- Elastica\\Test\\Transport\\NullTransportTest::testOldObject;\nShould we remove them as well?. @ruflin For this PR: Drop 5.6 Support. Gonna open other 2 for Drop deprecated stuff and other for Use PHP 7 Null Coalesce Operator. Done!. Gonna search and fix it!. Some if failing, but I couldn't figure out what :disappointed: . @ruflin Sure. I closed as I wasn't able to solve all issues and have green tests. I believe you know the library better than me to finish it :smile: . @ruflin Gonna search and update the docs \ud83d\udcdc. I've rebased. Now I'm trying to run PHP-CS-Fixer locally. I'm new to Docker, maybe this is why I can get it running :sweat_smile: . Okay, gonna rollback this changes, sorry.. @ruflin What you say? I'll update this PR today, I forgot it :sweat_smile: . ",
    "gtavasoli": "This is my code as a part of CakePHP project:\n```\n$query = ['size' => 0, 'query' => ['bool' => ['must' => [['match' => ['from.peer_id' => ['query' => $id]]]]]]];\n$query['query']['bool']['must'][] = ['range' => ['date' => ['gte' => $this->start_date_mili, 'lte' => $this->end_date_mili, 'format' => 'epoch_millis']]];\n$query['aggs'] = ['dayOfWeek' => ['terms' => ['script' => ['source' => 'doc[\\'date\\'].date.dayOfWeek', 'lang' => 'painless']]]];\n$query = json_encode($query);\n$client = new Client(Configure::read('elastic_config'));\n$index = $client->getIndex(Configure::read('tg_index'));\n$path = $index->getName() . '/_search';\n$response = $client->request($path, Request::GET, $query);\n$responseArray = $response->getData();\n```. Last version (6.0.0). Yes, it did not work!\nBut why my contribution (#1414) is failed!\nis there something wrong?. ",
    "martin-georgiev": "Changelog updated.\nAs < and > were first reported to be inescapable in v5.1 documentation, it made sense before that point in time to escape them. I can only blindly speculate that this somehow relates to the fact that < and > are Elastic specific and as such they are not inherited from Lucene's special character list.. @ruflin It was my pleasure.. I would drop the list of characters in the description of replaceBooleanWordsAndEscapeTerm. My reasoning is that it exposes the internal behaviour of the used submethods. The character list creates maintenance backlog as it is not something that the wrapper method replaceBooleanWordsAndEscapeTerm has control over at present.\nYet if you believe it adds value then it needs updating too. Are you looking at any particular wording?. The method description is updated. I believe we can move this PR forward now. . ",
    "jenkoian": "\nWhat is the Elasticsearch version you are using?\n\n2.4.6\n\nLooking at the PR I have the suspicion that you use incompatible versions and getting this in would break things with other versions.\n\nNote, the change is copied verbatim from the 3.0.0 version of this library which claims to support ES versions 2.0.0 and above. Just noticed 2.3.1 claims support for 1.7.2 and above so perhaps there is some additional testing to be done here? Although looking at the change, it seems to be pretty backwards compatible? \n\nThe release-2.3 branch is more a left over from me. If we do a 2.x branch, would that be enough?\n\nYeah, only opened to this branch as wanted something which wasn't master and this deemed most appropriate, a 2.x branch would be ideal.. I should mention it's to work around basically this issue https://github.com/ruflin/Elastica/issues/1221#issue-190403022. Yeah, fair enough, I'd probably take the same stance if in your position. One last attempt to sell it to you if I can, the change is non breaking, it will return early if the error response is a string as per ES 1.x. . This would also help avoid people doing gross stuff like this: https://stackoverflow.com/a/37762277/380054 . @ruflin apologies for long delay in my response. Yeah a branch would work well if that's ok?. @ruflin sure, thanks!. @ruflin done!. @ruflin it's added some commits, not sure this is desirable, so let me know if not and i'll rebase or something.. @ruflin done!. @ruflin happy to add to the changelog, as it's not a tag just a branch how should I handle it? Titles as 'unreleased' or titled with the branch name or..?. Changelog updated!. I copied this verbatim from this commit https://github.com/ruflin/Elastica/commit/99d7cd147c469e20e0c8e550c431712edda4dd19#diff-e1d9f3f0154639bb558fbe6fbe46d323 however it looks like this is to cover the case where the response has no error i.e. https://github.com/ruflin/Elastica/pull/1418/files#diff-b364251d02e70310f3c6e443372397d3R117. ",
    "fvilpoix": "Here is the update, thanks for your review :). ",
    "mkosiedowski": "Sure, please see the new commit in the same PR. Sure @ruflin, just did it :) . ",
    "franmomu": "Hi, should this be done in 5.x as well? I've just updated to php 7.2 with that branch.. oops, sorry, I cherry-picked the commit and I didn't notice this \ud83d\ude2c . ",
    "aiflu": "@ruflin Thank you at first. I wonder too.\nIt seems that the post_filteris set all the time. But I didn't use post_filter at all. As it's a filter at the end of a search request, so I don't need it in my project at all.\nI've searched post_filter in all my code, I could only find it in /Elastica/Query.php and /Elastica/Suggest/CandidateGenerator/DirectGenerator.php. Both files are the lib files, and their setting functions have the same name setPostFilter. So I've searched also setPostFilter in all my code, but I've found nothing. So I don't understand.\nHere is how I debug: I could add die before\n$resultSet = $resultSetBuilder->buildResultSet(new \\Elastica\\Response('{}', 200), new \\Elastica\\Query());\n\nor at the end of the Query __construct.\nBut I couldn't add die at the beginning of the toArray() in Query, because I got \"syntax error\" before. What I couldn't understand is that the error line is after the die, how could the code pass the die?\nBTW, I use curl to receive the json ES response. At the API side, I send only the result of $resultSet->getResponse()->getData(). I've tested at the API side, there is no problem.\nThe same test code pass at the API side, but not at the client side. Does the lib depend on the server configs? The difference between the API and the client is the php version. The API uses php7.1, and the client uses php5.6.. @ruflin I've figured out the problem. It's the php version. Is the lib 6.0.0 compatible with php5.6? (In the homepage it says \"Elastica is tested with PHP 5.4 and later\") I've tested locally the same code. With php7.x, all pass, but with php5.6, I've the error. I don't know why, but I'm sure that it's the different version of the php that caused the error. So I'll update the php to 7.x to avoid the problem.\nThanks a lot.. @ruflin Thanks a lot. Sorry for the wrong php version in the initial PR description.\nThanks for the doc, I usually read the doc at http://elastica.io/, never thought there's a git where I can find the doc for the previous versions. I'll close this issue.. ",
    "akadko": "Done with CHANGELOG. . @ruflin Done. Thank you for your help!. @ruflin Yes, I should and I will, of course :-). Sorry I had no enough time before. ",
    "rafaelschmitt": "Additional info: Actually we set our post_filter (like all other things) manually via rawQuery in a array-structure, e.g.:\n```php\n$rawQuery['post_filter'] = [\n    'bool' => [\n        'must' => [\n            //...\n        ]\n    ]\n];\n$this->query->setRawQuery($rawQuery);\n```\nSo calling toArray() on post_filter will crash:\n```php\nnamespace Elastica;\nclass Query extends Param\n{\n    //...\n    if (isset($this->_params['post_filter']) && 0 === count(($this->_params['post_filter'])->toArray())) {\n        unset($this->_params['post_filter']);\n    }\n```\nMaybe a check if it is already a array would fix this:\n```php\nnamespace Elastica;\nclass Query extends Param\n{\n    //...\n    if (isset($this->_params['post_filter']) && 0 === count(is_array($this->_params['post_filter']) ? $this->_params['post_filter'] : $this->_params['post_filter']->toArray())) {\n        unset($this->_params['post_filter']);\n    }\n```. We added a temporary workaround for this. But it would be nice, if you could continue to set the \"post_filter\" as a raw array, like all other filters.\n```php\n// same definition like before\n$postFilters = [\n    'bool' => [\n        'must' => [\n            //...\n        ]\n    ]\n];\n$postFilterQuery = new \\Elastica\\Query\\BoolQuery();\nforeach($postFilters as $boolOccur => $filters) {\n    $postFilterQuery->setParam($boolOccur, $filters);\n}\n$this->query->setPostFilter($postFilterQuery);\n``. @ruflin Thx for your reply and happy new year! ;) Yes, it worked previously withoutAbstractQueryobjects, if you usesetRawQuery` (like we do)\nSetting a Query fully as raw array worked, also with post_filter, e.g.:\nphp\n$query = new Elastica\\Query();\n$query->setRawQuery([\n    \"query\" => [\n      \"bool\" => [\n        \"must\" => [\n          [\n            \"match\" => [\n              \"title\" => \"Search\"\n            ]\n          ]\n        ],\n        \"filter\" => [\n          \"bool\" => [\n            \"must\" => [\n              [\n                \"terms\" => [\n                  \"segment\" => [\n                    \"article\"\n                  ]\n                ]\n              ],\n              [\n                \"range\" => [\n                  \"accessDate\" => [\n                    \"gte\" => \"2017-07-01\",\n                    \"lt\" => \"2017-11-21\"\n                  ]\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ],\n    \"post_filter\" => [\n      \"bool\" => [\n        // ...\n      ]\n    ],\n    \"aggs\" => [\n        // ...\n    ]\n]);\nNow, it still works, except of post_filter, because of the new toArray() call on post_filter in Query class (so $this->_params['post_filter'] is expected to be a object of AbstractQuery, even if you set it via setRawQuery)\nThe Query class provides a setRawQuery method (which is very very nice ;D ) to set a query manually with array structure. Filling a query via objects is also nice. But i think, if you set the post_filter via setRawQuery, then it should work without objects. But now it does not unfortunately, because a specific key in the array is expected to be a object, even if it was set by setRawQuery, what in this case (in the raw-mode case) is not correct in my opinion.\n. ",
    "yvoloshin": "Hi @ruflin,\nHere is the error text:\nSearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[IEHwxwCSR4Cux6bxcgD6WQ][students][4]: SearchParseException[[students][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"query\":{\"term\":[]},\"filter\":{\"bool\":{\"should\":[{\"term\":{\"majors\":\"Art History\"}}]}}}}}]]]; nested: QueryParsingException[[students] [term] query malformed, no field]; }{[IEHwxwCSR4Cux6bxcgD6WQ][students][1]: SearchParseException[[students][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"query\":{\"term\":[]},\"filter\":{\"bool\":{\"should\":[{\"term\":{\"majors\":\"Art History\"}}]}}}}}]]]; nested: QueryParsingException[[students] [term] query malformed, no field]; }{[IEHwxwCSR4Cux6bxcgD6WQ][students][0]: SearchParseException[[students][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"query\":{\"term\":[]},\"filter\":{\"bool\":{\"should\":[{\"term\":{\"majors\":\"Art History\"}}]}}}}}]]]; nested: QueryParsingException[[students] [term] query malformed, no field]; }{[IEHwxwCSR4Cux6bxcgD6WQ][students][3]: SearchParseException[[students][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"query\":{\"term\":[]},\"filter\":{\"bool\":{\"should\":[{\"term\":{\"majors\":\"Art History\"}}]}}}}}]]]; nested: QueryParsingException[[students] [term] query malformed, no field]; }{[IEHwxwCSR4Cux6bxcgD6WQ][students][2]: SearchParseException[[students][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"query\":{\"term\":[]},\"filter\":{\"bool\":{\"should\":[{\"term\":{\"majors\":\"Art History\"}}]}}}}}]]]; nested: QueryParsingException[[students] [term] query malformed, no field]; }] \nThat's a great idea to build the query in ES. I'll try that. In the meantime, do you see any obvious errors in the query, or in the error text?\nThanks a lot for your help!. I converted the query into a raw query like this:\n$query->setRawQuery(\n     array(\n         'query' => array(\n            'filtered' => array(\n                'query' => array(\n                    'term' => array()), \n                'filter' => array(\n                    'bool' => array(\n                        'should' => array(\n                            array(\n                                'term' => array(\n                                    'majors' => 'Art History'\n                                     )\n                                  )\n                             )\n                        )\n                   )\n              )\n         )\n     )\n);\n\nThis gave me the same error message as quoted above. Looks like there is a problem with the query itself, and not with Elastica.\nWhen I rearranged the query to exactly follow the documentation as below, it returned no results, even though matching records were present\n$query->setRawQuery(\n                array(\n                    'query' => array(\n                        'filtered' => array(\n                            'filter' => array(\n                                'term' => array(\n                                    'majors' => 'Art History'\n                                )\n                            )\n                        )\n                    )\n                )\n            );. I too was wondering about the empty term. When I remove it, the query looks like this:\n$query->setRawQuery(\n     array(\n         'query' => array(\n            'filtered' => array(\n                'filter' => array(\n                    'bool' => array(\n                        'should' => array(\n                            array(\n                                'term' => array(\n                                    'majors' => 'Art History'\n                                     )\n                                  )\n                             )\n                        )\n                   )\n              )\n     )\n);\nThis version returned no errors, but also no results. \nI have not been able to find out how to get ES documents in Elastica. Could you tell me how to do that?\nThanks a lot for your help!. ",
    "silasrm": "The message error is from ElasticSearch, see java style package name: org.elasticsearch.transport.netty4.ByteBufStreamInput@1d349bde. \nElastica is responsable for sent data/requests to ElasticSearch. Because of this, I think this error is in  process of the convertion from doctrine Entity to Elastica, and this is sent to ElasticSearch and cause this error. But, I don't how to debug this.\nOr I'm fully wrong. Sorry if it looks like I want to blame it on Elastica.. Great @silvioq . ",
    "silvioq": "I have the same error. I think the trouble is in bulk update, the parameter is \"doc_as_upsert: 1\" and must be \"doc_as_upsert: true\"\nhttps://github.com/ruflin/Elastica/blob/master/lib/Elastica/Bulk/Action.php#L208\nI'm using Fos/FOSElasticaBundle too. I changed that line for \n```php\n                if (isset($source['doc_as_upsert'])) {\n                    $docAsUpsert = ', \"doc_as_upsert\": ' . ($source['doc_as_upsert'] ? 'true' : 'false' );\n                } else {\n                    $docAsUpsert = '';\n                }\n```\n... this works as expected!. @ruflin  I wrote a very basic test for bulk update. I don't know how I can call Elasticsearch. What test I can use as example?. Actually, setDocAsUpsert is tested here ...\nhttps://github.com/ruflin/Elastica/blob/6ef779d510d3ee56dc436a42bb4e5a39d0a60bea/test/Elastica/BulkTest.php#L497\nBut I can copy testUpdate method and generate testUpsert specific test. Something like that https://github.com/silvioq/Elastica/commit/9ec09dfc11823004c5537c397d7482ab414bbcbc. @ruflin  Merged!. ",
    "stefpe": "Because in the HTTP Transport, you are setting \ncurl_setopt($conn, CURLOPT_POSTFIELDS, $content);\nFor elasticsearch somehow a GET Request with filled post body works, but a proxy which doesnt read the POST Body on a GET Request, you run into issues.. ",
    "alberttomasiak": "@ruflin Would it be possible to merge this into 5.x also? We've come across this issue as well in one of our projects and we're currently using version 5. . ",
    "huebs": "@ruflin I've submitted pull request #1474 which applies c427a295 as a patch to the 5.x branch. Let me know if you need any changes made.. ",
    "josselinh": "Just FYI, I have ElasticSearch 5.6. Hello @ruflin,\nI modified the changelog and added the tests as you wanted.\nI'll make you a new PR for the branch master later.. Hello @ruflin ,\nI can't get through the tests.\nI don't understand what's wrong.\nThe tests were passed correctly for branch 5. x\nCould you help me ?\n\n2) Elastica\\Test\\Aggregation\\SumBucketTest::testSumBucketAggregation\nElastica\\Exception\\ResponseException: buckets_path aggregation does not exist for aggregation [sum_likes_by_page]: pages > sum_likes [reason: all shards failed]. Hello @ruflin ,\nI finally found the error.\nIn ES v5, we can put spaces in buckets_path (ex: pages > sum_likes), but not in v6.\n\nI'm going to make you a new PR for the branch 5.x to fix this so they'll be same. Thank you too.\nElastica is really great :). ",
    "shihgangliu": "@XWB thank you.. Sorry I forgot, thanks help.. ",
    "kubk": "It looks like the issue is fixed and can be closed.. ",
    "mpuig9406": "Pliss see the adjunt file\n2018-02-12 6:21 GMT+01:00 Nicolas Ruflin notifications@github.com:\n\nTBH not sure what you are trying to do and what the problem is. Can you\nperhaps provide a bit more information what you are trying to do?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1449#issuecomment-364831465,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Abh-7R5k_DRWVn_XqdvxDmUAaClJxnyuks5tT8pVgaJpZM4R6HOJ\n.\n\n\nMy .config yml\nElasticsearch\nfos_elastica:\n    clients:\n        default: { host: localhost, port: 9200 }\n    indexes:\n        app:\n            types: \n                material_periodistico:                                       \n                    properties:\n                        title: ~\n                        description: ~\n                        content: ~\n                        issued: ~\n                    persistence:\n                        # the driver can be orm, mongodb, phpcr or propel\n                        # listener and finder are not supported by\n                        # propel and should be removed\n                        driver: orm\n                        model: BackendBundle\\Entity\\MaterialPeriodistico\n                        provider: ~\n                        finder: ~  \nMy Controller\n$paginator = $this->get('knp_paginator');\n            $pagination = $paginator->paginate($finder->createPaginatorAdapter($searchQuery));\nProblem\nthe search engine and the pager work well show the data correctly, the problem is when\nI give it to order by any parameter, it says that all the shards failed, I do not understand the pq they fail\nif even with the populate it completes the mapping.Helpp pliss.. Plis ser the adjunto file\nEl 12 feb. 2018 00:21, \"Nicolas Ruflin\" notifications@github.com escribi\u00f3:\n\nTBH not sure what you are trying to do and what the problem is. Can you\nperhaps provide a bit more information what you are trying to do?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1449#issuecomment-364831465,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Abh-7R5k_DRWVn_XqdvxDmUAaClJxnyuks5tT8pVgaJpZM4R6HOJ\n.\n. See the adjunt file\n\nEl 27 feb. 2018 17:22, mpuig9406@gmail.com escribi\u00f3:\nPlis ser the adjunto file\nEl 12 feb. 2018 00:21, \"Nicolas Ruflin\" notifications@github.com escribi\u00f3:\nTBH not sure what you are trying to do and what the problem is. Can you\nperhaps provide a bit more information what you are trying to do?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1449#issuecomment-364831465,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/Abh-7R5k_DRWVn_XqdvxDmUAaClJxnyuks5tT8pVgaJpZM4R6HOJ\n.\nMy .config yml\nElasticsearch\nfos_elastica:\n    clients:\n        default: { host: localhost, port: 9200 }\n    indexes:\n        app:\n            types: \n                material_periodistico:                                       \n                    properties:\n                        title: ~\n                        description: ~\n                        content: ~\n                        issued: ~\n                    persistence:\n                        # the driver can be orm, mongodb, phpcr or propel\n                        # listener and finder are not supported by\n                        # propel and should be removed\n                        driver: orm\n                        model: BackendBundle\\Entity\\MaterialPeriodistico\n                        provider: ~\n                        finder: ~  \nMy Controller\n$paginator = $this->get('knp_paginator');\n            $pagination = $paginator->paginate($finder->createPaginatorAdapter($searchQuery));\nProblem\nthe search engine and the pager work well show the data correctly, the problem is when\nI give it to order by any parameter, it says that all the shards failed, I do not understand the pq they fail\nif even with the populate it completes the mapping.Helpp pliss.. El 27 feb. 2018 17:22, mpuig9406@gmail.com escribi\u00f3:\nPlis ser the adjunto file\nEl 12 feb. 2018 00:21, \"Nicolas Ruflin\" notifications@github.com escribi\u00f3:\nTBH not sure what you are trying to do and what the problem is. Can you\nperhaps provide a bit more information what you are trying to do?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/issues/1449#issuecomment-364831465,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/Abh-7R5k_DRWVn_XqdvxDmUAaClJxnyuks5tT8pVgaJpZM4R6HOJ\n.\nMy .config yml\nElasticsearch\nfos_elastica:\n    clients:\n        default: { host: localhost, port: 9200 }\n    indexes:\n        app:\n            types: \n                material_periodistico:                                       \n                    properties:\n                        title: ~\n                        description: ~\n                        content: ~\n                        issued: ~\n                    persistence:\n                        # the driver can be orm, mongodb, phpcr or propel\n                        # listener and finder are not supported by\n                        # propel and should be removed\n                        driver: orm\n                        model: BackendBundle\\Entity\\MaterialPeriodistico\n                        provider: ~\n                        finder: ~  \nMy Controller\n$paginator = $this->get('knp_paginator');\n            $pagination = $paginator->paginate($finder->createPaginatorAdapter($searchQuery));\nProblem\nthe search engine and the pager work well show the data correctly, the problem is when\nI give it to order by any parameter, it says that all the shards failed, I do not understand the pq they fail\nif even with the populate it completes the mapping.Helpp pliss.. ",
    "xfoldvar": "Hey.\nWe are not accessing _params directly. We are just adding params to a query through method addParam($key, $value) (packages/ruflin/elastica/lib/Elastica/Param.php:137). But this fails when  params are empty.\nException:\nCannot use object of type stdClass as array\nSnippet:\n/** @var $query \\Elastica\\Query\\BoolQuery */\n$query = $this->elasticSearch->getQuery()->getQuery();\n$query->addParam(\"filter\", ['bool' => $condition->toElasticQuery()]);\n. @ruflin Exactly, the exception is thrown while addParam(key,val) method is called on BoolQuery instance. The property _params is set to stdClass and addParam(key,val) is accessing _params as array.. ",
    "robbixc": "Sure :+1: . ",
    "cfoehrdes": "It could be an option to pass the ssl key to the config array or maybe we could also use getParam to fetch the ssl setting, as it is done with the access keys.. @ruflin The PR #1457 is pretty much what solves the problem. ",
    "aderuwe": "@ruflin Seems to have been never closed. ;). I should of course examine the response ... Closing.. ",
    "floriansemm": "done!. ",
    "spointecker": "Hi @ruflin \nI am using Elastica 6.0.0\nI did not find any further information according to this exception message. But what I found out is that it works if I just use CURL to create my snapshots (e.g. with fs).\nSo I guess the exception does not come from the elasticsearch server itself?. Sure.\nThose commands work fine on my local and remote machine:\ncurl -XPUT 'localhost:9200/_snapshot/s3_repository?pretty' -H 'Content-Type: application/json' -d'\n{\n    \"type\": \"fs\",\n    \"settings\": {\n        \"location\": \"/var/www/var/es-backup\",\n        \"compress\": true\n    }\n}\n'\ncurl -XPUT 'localhost:9200/_snapshot/s3_repository/iam-es-snapshot-2018-02-16?wait_for_completion=true&pretty'. The examples were completely different/independent :)\nI will try to print the params before the request is sent.. This is the printed value of $data:\narray(2) {\n  [\"type\"]=>\n  string(2) \"fs\"\n  [\"settings\"]=>\n  array(1) {\n    [\"location\"]=>\n    string(22) \"/var/www/var/es-backup\"\n  }\n}\nAnd this the exception:\n[Elastica\\Exception\\ResponseException]                                                                                                                   \n  unknown setting [index.location] please check that any required plugins are installed, or check the breaking changes documentation for removed settings. I am afraid I can\u00b4t upgrade that easy to version 6 due to the major changes. Do you think version 5.6 would be sufficient? I\u00b4ll try it if I manage to get some time for it.. Thanks for your patience!\nI downgraded to Elastica 5.3.* and tried it again with the S3 repository plugin but still getting the exception:\n[Elastica\\Exception\\ResponseException]                                                                                                                     \n  unknown setting [index.access_key] please check that any required plugins are installed, or check the breaking changes documentation for removed settings\nI am using now:\n \"friendsofsymfony/elastica-bundle\": 5.0.\n \"ruflin/elastica\": 5.3.\n* \"elasticsearch/elasticsearch\": 5.3.2\nThe S3 Repo Plugin is installed:\ncurl -XGET 'localhost:9200/_cat/plugins?v'\nname   component     version\nnode-1 repository-s3 5.3.2. ",
    "dmitrijivanenko": "@ruflin thank you, got it. I will look for such places.. ",
    "bkanber": "It sounds like you are having problems with Composer on Windows. This doesn't seem like an Elastica problem to me. You should try confirming that the vendor directory contains the correct repositories, perhaps reinstall composer or clear its caches.. ",
    "qqqqb": "Ref #1475. I'm not sure why this failed, What I did is allow to accept the following\n'true' by (string) '', (integer) 1, (Boolean) True\n'wait_for' by (string) 'wait_for'\n'false' (integer) 0, (Boolean) False\nAnd what I wrote is\nif (is_string($refresh) && strlen($refresh) == 0) {\n          $refresh = True;\n        }\n        if ($refresh != 'wait_for') {\n          $refresh = $refresh ? 'true' : 'false';\n        }. ",
    "cjost1988": "@ruflin Thank you for your quick response.\nYes, I already forked your repo and added these methods on my own :) I didn't wanted to call the setParam/addParam methods directly to keep it clean.\nI'll add tests and will provide a PR when it's ready from my side.. I'll add an additional method setOrders beside setOrder which takes an array of order definitions to not add a BC => could be merged without adding BC release.\nThis also guarantees no broken queries if a user will execute both setOrder and setOrders at the same time. Just overwriting his previous definition.\nAn addOrder beside the current setOrder method could potentially lead to wrong queries.. This got resolved in: #1480. lol I just wanted to add the pull request link in the changelog :D\nThank you for your quick process. Glad to help improving.\nAnd in the end we all benefit from good quality ;). @ruflin https://github.com/ruflin/Elastica/pull/1481 is containing the fix for the changelog.\nThanks :). ",
    "spellord": "The problem is with lorenzo plugin:\n /var/www/apps/hbc/vendor/lorenzo/audit-stash/src/Shell/ElasticMappingShell.php(113)\nString type is deprecate I change to text but now I get this error\nException: Could not convert [transaction.index] to boolean in [/var/www/apps/hbc/vendor/ruflin/elastica/lib/Elastica/Transport/Http.php, line 174]\n. values not_analyzed and analyzed are not long in used, instead you need use true or false values, I found other error but I see the problems is with the other plugin not with this. ",
    "andrejbaran": "Hey @ruflin, sure, should it go into Bugfixes or Deprecated or Improvements ?. I have put it under Improvements since that imho fits most :). Thanks @ruflin just out of curiosity do you have any ETA on a new release?. ",
    "jandom": "@samdark completely agreed!\nNow, in case of a typo in AWS credentials, 403 are silently ignored and that's just not a great \"feature\"\nThe code below is fair enough...\n```php\nlib/Elastica//Transport/Guzzle.php\n$client = $this->_getGuzzleClient($this->_getBaseUrl($connection), $connection->isPersistent(), $request);\n$options = [\n    'exceptions' => false, // 4xx and 5xx is expected and NOT an exceptions in this context\n];\n// options then passed to $res = $client->send($req, $options);\n```\n...because a few lines later, response is re-packaged and create a new Response object\nphp\n$response = new Response((string) $res->getBody(), $res->getStatusCode());\n...\nif ($response->hasError()) {\n    throw new ResponseException($request, $response);\n}\nHowever, that's really limited because Response hasError assumes that the response comes from ES cluster. If AWS credentials are wrong (eg a because of a typo) this will never be transparent to the user\n```php\n/\n * True if response has error.\n \n * @return bool True if response has error\n /\npublic function hasError()\n{\n    $response = $this->getData();\nreturn isset($response['error']);\n\n}\n```\nIn case of invalid AWS credentials the status code is 403 and the response looks like \n{\"message\":\"The security token included in the request is invalid.\"}. This is the commit that introduced the problem \nhttps://github.com/ruflin/Elastica/commit/47e6d70af7c72df8cc6ecba1c5bcf2a4eb210946#diff-77a5691dc6944986e3f43e8d562514d3\n4xx and 5xx are not crashing to be handled later, except for some of them that are not, because hasErrors assumes $response['error'] is the source of truth. Setup the docker container via the makefile and had like 3 ideas, all ugly. So will get back with something more \"kosher\" in the next few days. Thanks for getting back!. @Destroy666x agreed, this is not a great behaviour at present.\nSpent a some time last night how it all fits together\n- this is actually a feature not a bug\n- the Client class from ruflin/Elastica gobbles up all the exceptions into transportInfo\n- there is even a test for this\nThus, it is instead down to downstream client to implement an error check. in this case FOSElasticaBundle extends the base client class and should do the check. \nThe existing tests in FosElasticaBundle rely on NullTransport from ruflin/Elastica to send a mock response. This class could be either duplicated (easy) or refactored (harder) to be more generic and test different use-cases. \nThe PR is available here https://github.com/ruflin/Elastica/pull/1529\nI'm keen to hear your comments \u2013\u00a0this is my first contribution here and i'm sure this may not be 100% correct @ruflin . This is now resolved by two PRs\n- https://github.com/ruflin/Elastica/pull/1529\n- https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465\n. Once this is done, it'll be possible to make FOSElasticaBundle handle non-200 errors from ruflin/Elastica and test that behavior properly. @ruflin done \u2013 updated this PR text and the changelog. @Destroy666x agreed completely, however that would require a more generic class for mocking different types of codes \u2013 do you want to contribute to the PR?. @ruflin is anything else needed to merge this PR? . @ruflin updated the PR and made the NullTransport more generic and testable\n@Destroy666x added the support for non-403 error codes that you've requested \nMatching PR FOSElasticaBundle in https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465/files. This PR is currently blocking https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465. @thePanz a quick look would save the day ;-). Thanks for the merge @ruflin and for the review @thePanz \nOne last quick request \u2013 can we get a new minor version published @ruflin ? Otherwise i'm unable  to close https://github.com/FriendsOfSymfony/FOSElasticaBundle/pull/1465 - composer.json has to contain a stable version for maintainers to merge it in. This is groovy \u2013 thanks so much both for merging this in so fast. @ruflin @thePanz just to make this all square, i've removed the un-needed 'body' also on the master branch \u2013 here is the PR \nhttps://github.com/ruflin/Elastica/pull/1596. @ruflin unlikely but your heart is in the right place: nothing apart from tests was accessing the array passed to 'setTransportInfo'. No idea \u2013 it's my first contribution to this package. Don't think anything in FOSElastica is trying to read this (if i remember correctly). Done \u2013 let me know if that's what you had in mind. Thanks for looking into it both \u2013 happy to make any changes when needed. In terms of chronology, first came the PR into master \u2013 then the PR into the backward compatibility branch. Happy to go either way here \u2013 this is super easy. Ha, you're right \u2013 i'm doing something completely stupid here!\nThe use-case was to pass the body to have useful error messages (in case the AwsAuth is passed incorrect credentials) in FOSElasticaBundle\nCan totally factor this bit out. Thanks for cleaning this up gents, super-fast work!. ",
    "Destroy666x": "Very annoying issue that lost me a bunch of time. Also when attempting AWS connection, but this time a 400 for HTTP/HTTPS incompatibility was ignored because I didn't realize transport: https was needed. No error in the console whatsoever and progress bars went on quite slowly, so I assumed that ES service is failing for some reason. BTW, interestingly, when doing it the other way round, so using https when http was needed, an error was thrown that time... Looking forward to a fix, if I find any time (I doubt) I might try.. Accordingly named setters for specific subparameters would be more intuitive too. Unfortunately I won't have much time in the nearest future.. Thanks for PR. What about codes other than 403?. Unfortunately not in the nearest future. Latest, 6.3.x. But it'll happen with any ES version.\nThe example is that this https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/DisMax.php#L18 and this https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Query/DisMax.php#L27 line suggest that the parameter can be an array of objects extending AbstractQuery, but when you pass an array you simply get the mentioned error.. @p365labs Yes, you're right I had some confusion between BoolQuery and this since I used both next to eachother. My bad.. ",
    "NathanBaulch": "What about those of us who are using AWS Elasticsearch without FOSElasticaBundle? Do we need to wrap the Elastica client just so we can make sure no transport errors have occurred?\nIn my particular case I'm using AWS v4 auth and my server's date drifted 5 minutes into the future. I started getting weird errors from Elastica because the response from AWS doesn't contain an error field (so Response::hasError() is false even though the HTTP status code was 403) so it just assumed nothing was wrong. For example, aggregation queries started throwing \"This result set does not contain an aggregation named xxx\" instead of a meaningful error.. I agree, though it looks like there's already an open discussion on this in #1396.\nOne exception to this (which bit me yesterday) are the 404 responses from the HEAD requests made by various exists functions (Type, Index, IndexTemplate).\nI don't know what the best long term solution is, but for now I've sub-classed Client in my application.\nphp\nclass Client extends \\Elastica\\Client\n{\n    public function request($path, $method = Request::GET, $data = [], array $query = []) {\n        $res = parent::request($path, $method, $data, $query);\n        // workaround for Elastica issue #1508\n        $info = $res->getTransferInfo();\n        if (($code = $info['http_code'] ?? null) && $code >= 400 && !($code === 404 && $method === Request::HEAD)) {\n            $data = $res->getData();\n            $body = is_array($data) ? ($data['message'] ?? json_encode($data)) : $data;\n            throw new ClientException(\"HTTP $code error: $body\");\n        }\n        return $res;\n    }\n}. I'd be happy to send a pull request for either option 1 or option 2.\nFor option 2 I can easily apply the same base URI keyed array pattern to Http too, so connections aren't shared across hosts for either transport. Let me know.. I've sent a PR for each approach for your consideration.. From what I've read it's safe to use a single curl resource/handle for multiple hosts without leaking context, and AFAIK the Guzzle client is immutable and uses curl under the hood, so #1618 should be fine.. ",
    "jmsche": "Thanks for accepting the PR :)\nWill you create a new tag/release, or should I target the 2.x branch?. I'm wondering if you can still create a release: the package I manage was updated to use \"dev-2.x\" of ruflin/elastica, but given this I'd have to update all projects to require as well \"ruflin/elastica\":\"@dev\", even if \"dev-2.x\" is mentioned in my package...\nThanks for considering my request.. If you create a new release, I only have to revert the package I manage to use ^2.3 instead of dev-2.x, which allows me not to require \"ruflin/elastica\":\"@dev\" in all projects.\nI understand why you hesitate to create a new release. But, if I'm not mistaken, only two new commits would be released - mine, and https://github.com/ruflin/Elastica/commit/d72afd0d16ab1ccaa0d7061696419f0d3da8c032 - see https://github.com/ruflin/Elastica/compare/2.3.1...2.x\nFrom what I can see, my changes are ok, and after checking the other commit, they also seem legitimate. Both are backports and should be ok no matter the PHP version. The only problem being, I can't manage to run tests on my computer :/. @ruflin Thanks for tagging it :) Works great for me.. PR'd in #1561. Sorry for the miss, too much used to PHP 7+ :). @killerwolf Can you check if the patch proposed in #1572 fixes the issue? Thanks. Backported fix in #1572, feel free to close this PR. Sorry I missed your request for an updated CHANGELOG (flu & angina do not help).\nThat's fixed!. Could you please create a release for this patch? Thanks.. Thank you :) . @ruflin Seems the release was not published to packagist somehow, could you force it? Thanks :). Packagist or composer yes, see https://packagist.org/packages/ruflin/elastica where the 2.3.3 version has not been published here. ",
    "bdlabs": "\n@jmsche Thanks for the contribution. Haven't touched the 2.x branch in ages but happy to hear it still works :-)\n\nSorry but not work this branch must be compatible with PHP 5.3.3 and now is it not.\nlook this https://github.com/ruflin/Elastica/issues/1559. > @jmsche Could you comment on this one. That is what I was worried about doing a release :-( @bdlabs What you can always do is going back one bugfix release to the one you had before.\n@ruflin I know :) that I did but it's not the right solution.. ",
    "mssimi": "Thx this works.. ",
    "ValMotta": "Hi Ruflin,\nTry create a Client like this with a real endpoint\ntry{\n$client = new \\Elastica\\Client(array(\n    'host' => 'foo.bar',\n    'timeout' => 10\n));\n$index = $client->getIndex('my-index');\n$type = $index->getType('-test');\n$doc = new \\Elastica\\Document('myId', array('name' => 'valerio'));\n$respone = $type->addDocument($doc);\n} catch (Exception $ex){\n    echo $ex->getMessage();\n}\nThe process ignore the timeout and remain on air indefinitely.\n. ",
    "CaroleBonfre": "I use version 2.3.1 of Elastica for project purpose. I solved the problem, it seems the error message was not the good one, but now it works fine.\nA use ElasticSearch 6.3.0 and a add this while creating my client : \n\"headers\" => array(\"Content-Type\" => \"application/json\")\nI found that there was a problem with my mapping, so I am not sure of what resolved the problem but now everything works :). ",
    "hotrush": "My bad, not all discovered in cluster and no master assigned. ",
    "pashaBolshov": "@ruflin No, I don't.  I have never done it. \nPlease, could you fix?\nThanks,\nPasha. ",
    "maximenko": "I use the 1.6.2 version of the Elasticsearch. And in this time for me important upgrade the version for Elastica. In the near future I can't upgrade the Elasticsearch version.. Sorry, but I can't do it. Because I use https://github.com/FriendsOfSymfony/FOSElasticaBundle/tree/3.2.x and it use ^2.1\nI will be happy if you understand me! :)\nThanks.. What I should do?. ",
    "zaqqq13": "I'm doing something like there:\nif ($size = $criteria->getSize()) {\n            $query->setSize($size);\n        }. ",
    "Persata": "Great, thanks for looking this over. I'll have a go at adding an integration test this week. :+1: . Just a micro-optimisation added by my linter, I'll remove it when I'm adding a test if you'd prefer.. I first learned of it when I started using the EA Inspections plugin for PHPStorm as one of the things it suggests is to fully qualify global function calls.\nThere's a writeup and some benchmarks here, and a few packages for automatically dealing with it - one from Roave / ocramius and one from nilportugues.\nGranted it's a tiny tiny tiny optimisation but it's become part of my workflow.. ",
    "massimilianobraglia": "Hey @p365labs and @ruflin!\nRegarding backlashing:\nWhen using https://github.com/nilportugues/php-backslasher all builtin elements will be backlashed (even literals like null or true/false). \nAs they are keywords, those should not be backslashed in my opinion.\nI'll dig into the package to see if it is configurable some way.\nThe tool made by Ocramius is worthy as it only backslashes the function calls. But (as stated here https://github.com/Roave/FunctionFQNReplacer#usage) it will break the coding style.\nFor linting probably Elastica should adopt https://github.com/FriendsOfPHP/PHP-CS-Fixer \ud83d\ude04 \nI agree with @ruflin regarding linting and backslashing every PR. Oh. Sorry about that, I must be blind!\nAnyway, ok I'll keep you updated.\nIl giorno mar 4 dic 2018, 08:42 Nicolas Ruflin notifications@github.com\nha scritto:\n\nWe use php-cs: https://github.com/ruflin/Elastica/blob/master/.php_cs\nIt's just not run on build time (but we should).\nKeep us posted on your findings.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruflin/Elastica/pull/1540#issuecomment-444001898, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AQXTHsgSTqCBOQIW9UcOkAWGEUIzDVkNks5u1idLgaJpZM4Y3KmZ\n.\n. Unfortunately, https://github.com/nilportugues/php-backslasher is not configurable. Sorry about the delay in my answer. This week is a little busy \ud83d\ude1e\n\nI just found that with the last version of PHP-CS-Fixer it is possible to automate backslashing by using the 'native_function_invocation' => true rule. \nAm I wrong or Elastica uses version 1 of PHP-CS-Fixer?\nIf yes, maybe we can define a new set of CS rules in this PR.. ok then. I'm going to propose a new rule set for CS using the last PHP-CS-Fixer version. I have just updated the PR with a new rule set. @ruflin can you give it a look?. Ok, I'm gonna leave the comments. Anyway this is my proposal of CS trying to keep the Elastica CS and merge it with PSR2. Some rules from the version 1 and version 2 changed name or theirs value. Thank you @p365labs! I'll check it ASAP \ud83d\ude04 \n@ruflin about running make lint that's a good idea. This will be for sure a massive change, but nothing semantic will be touched, are you sure about splitting this into 2 PRs?. @ruflin there will be a massive change because probably nearly all files will be touched with the new CS rules \ud83d\ude04 \n@p365labs I agree with @ruflin :)\nIn my case, I have the fixer installed on my local machine (and I can run it outside docker). \nShould I change the lint make rule with the following?\nBefore:\nsh Makefile\nlint:\n    ${RUN_ENV} php-cs-fixer fix\nAfter:\nsh\n    ifeq (, $(shell which php-cs-fixer))\n        $(error \"Could not find php-cs-fixer in $(PATH).\")\n        exit 1;\n    endif\n    php-cs-fixer fix --allow-risky=yes \n. @p365labs your is absolutely the right point IMO. \nThe snippet of my rule lint I posted on my last comment was just an example and obviously editable.\n+1 for having the linter in docker. all right then. I'm going to open multiple PRs!. In order to not do BC we can leave the mixed type whenever it is documented so. I have already used this strategy:\nhttps://github.com/ruflin/Elastica/pull/1542/commits/f0f3f6d52abb0ef263a3fb8db4f370b583e3126d#diff-839167e54614a2676094c9f11220a039R109\n```php\nclass TopHits\n{\n    // [...]\n/**\n * Set script fields.\n *\n * @param array|\\Elastica\\Script\\ScriptFields $scriptFields\n *\n * @return $this\n */\npublic function setScriptFields($scriptFields): self\n{\n    if (is_array($scriptFields)) {\n        $scriptFields = new ScriptFields($scriptFields);\n    }\n\n    return $this->setParam('script_fields', $scriptFields);\n}\n\n// [...]\n}\n```\nTopHits::setScriptFields accepts array and ScriptFields.\nIn this case we should not BC the signature and leave the unspecified type IMO.\nThat said, as PHP 7.0 security support ends soon as stated by @ruflin, should Elastica consider an upgrade?. Obviously, using typehintings permits to remove no more useful variable type checks in method parameters (I'm mentioning this because the codebase sometime contains explicit type checks with exception and there are sometime also tests about it). If you want me to create multiple PRs (one per namespace) for this one there are no problems :)\nI probably need to leave Interfaces like ArrayableInterface at the end (since I cannot set the return type of toArray method as it is used by multiple classes across namespaces).\nDid I understand correctly?. Ok! You can track the work in progress in this issue https://github.com/ruflin/Elastica/issues/1548 \ud83d\ude04 \nI'm closing this in favour of the others!. That's a good idea @p365labs! Thank you, @osavchenko \nI was processing Connection namespace, so you can start with the others unchecked. \u00a0@osavchenko fine for me! \ud83d\ude04 \n. From my POV using strict_types is necessary. The only problem is that declaring strict types on every file will cause a huge BC, and that is not something a library wants to \ud83d\ude04 \n@ruflin and @p365labs my proposal about strict types is to release those in the next major release. What do think about it?. No, I don't think that PHP is planning to introduce this by default. They didn't do it as of 7.3.\nAnyway, that declare can be set as a rule of PHP-CS-Fixer, so don't worry about setting it manually.\nStrict types are already in use by some Symfony bundles, Doctrine's libraries and so on. @ruflin probably the best thing we can do is to open a separate PR with the PHP-CS-Fixer rule that introduce the strict_types declaration and keeping it updated until next major. What do you think?. @ruflin you're welcome! It was just an idea:\n- new PR with fixer rule that introduce the declare(strict_type); statement\n- run the linter\n- execute test\n- from time to time rebasing it from master and run again test to check that the strict_typeness won't broke things\n- when the major comes then we can merge it. @ruflin and @p365labs sorry about the delay in completing this one. It's a period very full :(\nMaybe can you start reviewing what's been done?\nMeanwhile I'm trying to complete the last point.. No problem about the delay \ud83d\ude04 I know that feeling!\n. Ok then, I'll update my PRs ASAP \ud83d\ude04 . Thank you, @p365labs! Now that all PRs are merged I'll work on the Elastica base namespace! . I'm updating manually. No, php-cs-fixer cannot guess which type can be set into methods signatures nor properties (as far as I know that tool at least).\nUnfortunately (or maybe not \ud83d\ude04), this one must be done manually.\nI have found anyway wrong types in @param PHPDoc, so even if php-cs-fixer could guess the typehintings, those could be wrong. You're welcome!. @p365labs inserted the default values! Can you give it a look?. @p365labs ready to be merged! \ud83d\ude80 . Everything touched by this PR is automated by the CS-fixer. A part from the Makefile change :/ (probably is my mistake).\nAbout the composer problem, it must be a version conflict for phpdocumentor/fileset (I think). Still I didn't have time to check it, what do you think about it @ruflin?. Unfortunately it does not help. I tried to remove it also and it does not work anyway.\nAlso, I noticed that the CS-Fixer does not support PHP 7.3 (see https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3697).... @ruflin the issue I linked is opened since April 2018. I do not know when the full compatibility will be merged. A comment states that the linter is compatible since we do not use one of the new features of PHP 7.3. I agree about not using the linter in every step but in another one.\nI'm going to rebase and see if the build goes on \ud83d\ude04 . I made it! Let's see what the build on Travis says but the problem about composer's hangin' on was also with the phploc package (see https://github.com/ruflin/Elastica/commit/657da466a551ad99830d335d712f114bb606f656#diff-bdfe059178421755f0677c4b7b332938L20)\nI just removed it and it worked!\nI have also updated PHPUnit version to ^6.0. . https://github.com/lmc-eu/steward/pull/230\nWhat about using this workaround until PHP-CS-fixer solves the issue with PHP 7.3?\n@ruflin and @p365labs what do think about this?. I made it running. The build failed beacuse of PHP-CS-Fixer on PHP 7.3.\nRebasing will be done in a moment \ud83d\ude04 . @ruflin and @p365labs \nI removed php-cs-fixer from PHP 7.3 and added in .travis.yml the style check. Can you give it a look?. That's the point in fact..!\n. It still causes the issue. No problem about adding a separate step with the linting :)\nLet's see if I can manage it right now\n. the new travis.yml file will look something like this:\n```yaml\nsudo: required\ndist: trusty\ngroup: edge\nservices:\n  - docker\nbranches:\n  only:\n    - master\nenv:\n  global:\n    - DOCKER_VERSION=17.09.0\n    - DOCKER_COMPOSE_VERSION=1.17.1\n  matrix:\n    - TARGET=\"70\"\n    - TARGET=\"71\"\n    - TARGET=\"72\"\n    - TARGET=\"73\"\n    - TARGET=\"Lint\"\nbefore_install:\n  # check running \"docker engine\" and \"docker-compose\" version on travis\n  - docker --version\n  - docker-compose --version\n# list docker-engine versions, usefull to update the docker engine on travis and trusty\n- sudo apt-cache madison docker-engine\n# update docker engine to the desired version\n  - sudo apt-get -o Dpkg::Options::=\"--force-confnew\" install -y docker-ce=${DOCKER_VERSION}~ce-0~ubuntu --allow-downgrades\n\nsudo rm /usr/local/bin/docker-compose\ncurl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-uname -s-uname -m > docker-compose\nchmod +x docker-compose\nsudo mv docker-compose /usr/local/bin\n\nbefore_script:\n  - sudo sysctl -w vm.max_map_count=262144\nscript:\n  - if [ \"$TARGET\" != \"Lint\" ] ; then make tests TARGET=$TARGET ; fi\n  - if [ \"$TARGET\" == \"Lint\" ] ; then make check-style ; fi\nafter_script:\n  - cat /var/log/elasticsearch/.log\n  - cat /var/log/nginx/.log\n  - sudo rm composer.lock && sudo composer require satooshi/php-coveralls dev-master --no-ansi --no-progress --no-interaction\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n  - vendor/bin/coveralls -v\n```\nWhat do you think about it, @ruflin?. What should I enter in the CHANGELOG?\nSomething like\nIntroduced new version of PHP-CS-Fixer and new Lint travis step?. here you are \ud83d\ude04 . Yes!!\nIf you don't mind, I have the original rules ready and I can open another PR with that \ud83d\ude04   . Also here \ud83d\ude04 . Resolved! Let's see what Travis says :). Here I am, sorry about the late answer.\nconsts visibility have been introduced in PHP 7.1, so we cannot use it.\nFrom my POV, if PHP 7 was introduced in Elastica in 6.x then the type hintings should be on that branch (as a new minor release, probably). Surely, this can be a BC break for someone, but if they're using the wrong types the library won't act as they expect (passing a string when the docs of a method requires explicitly an int is an error even without the type hintings).\nSince we're not introducing type strictness, the BC breaks should be minimal.\nI think that 6.x should be fully complain to PHP 7. In 7.x branch, PHP should be upgraded to the last officially supported PHP version with type strictness.\nhttp://php.net/supported-versions.php\nObviously, this is just my opinion :). +1 for a new minor release with typehintings. First question: \nif a library change breaks my current code yes, it is a breaking change. This is the POV of the user of Elastica. This is a strict way of seeing this discussion.\nI report another scenario like ours:\nhttps://github.com/symfony/symfony/issues/29809\nIn one of the last Symfony updates the Form component's TextType was \"fixed\". Before it accepted any data (even an array) on it, now it accepts only strings. Which was the problem of this fix?\nThe problem was that when you add a field to a form with null as its type, Symfony silently sets the TextType as its type and it was not documented nor clear at all (from the user's POV again). \nBecause of this, a lots of application were broken by updating that component.\nIn our use case, we have well documented APIs, so, as I stated in a previous comment, using erroneous  parameters and not throwing an error like an \\InvalidArgumentException or a \\TypeError results in a missing in our side, but it is documented (and so, it is (or it should be) clear to the user's POV). \nAlso, in some classes, we have already some typehintings even without merging these PRs.\nI hope I have explained better my view \ud83d\ude04 . \ud83c\udf89 . 1. no, I kept those very closed to their scope in order to have the merge process simple. Obviously I'm available to fix what breaks if something goes wrong :)\n2. I'll check them ASAP!. @p365labs I have checked the PRs. I have rebased again the aggregation PR to see if something changes. Otherwise I'll have to go deeper to see what's wrong. My other PRs should be ok now!. @p365labs my last PR should be ok now!. @ruflin and @p365labs \nThis one has an issue related. \nhttps://github.com/ruflin/Elastica/pull/1582/commits/2a686c27eb3bdbd87a146cdd5d975d4d721e5384#diff-1f7a1b077d651b7395622739e831d497R19\nI could not typehint this method because of the ES issue documented in elastica code. Any ideas on how to solve this? . The problem here is in the InnerHits::toArray method.\n```php\nclass InnerHits\n{\n    [...]\n    /*\n     * @return array\n     /\n    public function toArray()\n    {\n        $array = parent::toArray();\n    // if there are no params, it's ok, but ES will throw exception if json\n    // will be like {\"top_hits\":[]} instead of {\"top_hits\":{}}\n    if (empty($array['inner_hits'])) {\n        $array['inner_hits'] = new \\stdClass();\n    }\n\n    return $array['inner_hits'];\n}\n[...]\n\n}\n```\nThe problem is that I cannot set array as the return type (this one returns a new \\stdClass because of the comment).\nAnd this causes that I cannot set it to the base ArrayableInterface.\nI hope I explained it better \ud83d\ude04 . @p365labs inserted the default values! Can you give it a look?. @p365labs:\n1) because we said in https://github.com/ruflin/Elastica/pull/1540 to open multiple PRs to introduce new CS rules\n2) yes, it is. Unfortunately I had no time to work on this at the moment the release was created\n@ruflin ok about adding a changelog entry (I'll do it right now). The case this could break things is where someone in his codebase mocked the built-in functions I think. > For the mocking of the built in functions I assume that would be a testing use case?\nYep, exactly. Ok! I'll check it ASAP. No, I didn't notice that \ud83e\udd14\nFixing... Yeps! It's such a nice tool (and there are many rules that I have to look deeper \ud83d\ude04). Yes, it should be done by using the 'php_unit_dedicate_assert' => ['target' => 'newest'], rule. Yes. Obviously it should be imported with the use statement. I think it is better using self instead of using the real class name when you're in that class.\nIn this case it should be \nphp\npublic function setRescoreQuery($rescoreQuery): self\ninstead of\nphp\npublic function setRescoreQuery($rescoreQuery): Query. missing string typehint. missing string and bool. Missing : Response return type. please, as stated here https://github.com/ruflin/Elastica/issues/1548#issuecomment-447821664, remove the strict_types declaration. Can't you use the method generateDefaultResponse in order to get a Response object? . You should typehint the parent class, no? That class belongs to Elastica\\Transport namespace. Can you tell me where this happens? I can't find it :(. I'll check it later, but probably I just forgot that one :) . Thank you, @p365labs!! \ud83d\ude04\nYep, obviously no problem from me about the review! I'm looking forward that \ud83d\ude04 \nI just checked the code and yes, I forgot some default values! I have set those in the latest update!. Ok :) Probably I forgot to readd that one.. Probably that test can be just removed, as we don't have to test that \\TypeError.\n. fixed \ud83d\ude04 . Can it be directly ISO8601?. Fixed also the phpdoc :). Yep they are the ES default values.\nAnyway your's is a good point. From my PoV we have 2 ways:\n- using everywhere the default values\n- not using everywhere\nIn my travel through Elastica code, I found places where default values are used (obviously I am not talking about library default values but ES default values). My opinion is to keep them. A use could call that method just to restore the default.\nJust a thought \ud83d\ude04 . @ruflin yes no problem :)\nI'll link those ASAP. @ruflin sorry about the late answer. Anyway, I looked into the codebase of Processor namespace and I couldn't find the default values I was talkin' about. Probably those were in other namespaces (I think).\nShould I remove these ones?. Maybe we can just add class constants representing the default values, what do you think?\nSomething like const DEFAULT_* = value. With these, we don't change any method signature and the user can restore the default value by using those constants. ok then! If also @p365labs agrees I will proceed \ud83d\ude04 . I have just updated this PR. Can you have a look, please?. https://github.com/ruflin/Elastica/pull/1579#discussion_r243801054\n@osavchenko checkout this discussion about the default values :). Yep! Sorry about that \ud83d\ude04 . ",
    "ShytN1k": "@p365labs thank you for responses. Now I understand the behavior better and will try it soon.\nPS I tried various methods and combinations so setText was in the latest try. But any way thank you for this proposal too.. @p365labs  Thanks again for description, everything works correctly now.. ",
    "SerikK": "Just added boolquery in \\Elastica\\Query. ",
    "romaricdrigon": "I also had this issue, with PHP 5.6 Elastica 2.3.2 does not work - 2.3.1 max.\nI will have a look at the patch later.. The fix in #1572 solves the issue  \ud83c\udf89 . I confirm the fix works on PHP 5.6, could it be merged please @ruflin ?. The tag is no published yet on Packagist (https://packagist.org/packages/ruflin/elastica), I couldn't update to test it yet. I believe you should have a \"force update\" in your Packagist backend, if you are registered as maintainer over there.. Great, I could update to 2.3.3. Everything is working correctly on PHP5.6.. ",
    "mgallego": "Thank you!. I thought that the PR must launch Travis. So please check the PR to integrate it.. I don't understand the reason why codecov fails, but I cannot see new executions and I guess is because the configuration of dovecot.\nI created a new PR with dovecot config based on master branch https://github.com/ruflin/Elastica/pull/1578 but I dont know if this is the solution.\nWhat is the conflict between my PR and dovecot, I don't know anything about covecot service.. > Did you see the PR review from @p365labs 435fbf4#r31731591 ? Not sure if you addressed this. Probably got lost as it was a comment on the commit.\nI removed the code, because was innecesary. I copied it from referrer PR triying to avoid the codecov block.\nBut I think that is mergeable now. Thanks. The current code break the tests. This is the reason because I wanted to try with Travis, to discard local problems. \n. > @mgallego Any idea how to fix these?\nOne of the problems is related with a library that does'nt exists in docker image, https://github.com/ruflin/Elastica/blob/3.x/env/elastica/Docker70#L12. Removing this dependency the execution continue, but tests broken in my local, I guess that in Travis too.. In 5.6 the same problem: E: Unable to locate package php5-xsl\nIn 5.4 looks like a memory problem: \nFatal error: Allowed memory size of 1073741824 bytes exhausted (tried to allocate 64 bytes) in phar:///usr/local/bin/composer/src/Composer/DependencyResolver/Rule.php on line 76. > @mgallego Would be great if you figure out the issue, if you could push it to this PR too. I wonder if we can still fix all of them as some of these PHP versions are EOL for quite some time so could be some libs are not around anymore or broken for these versions.\nI'll try to remove the version errors and execute the tests again to check the unit tests.. Fixed!. changed. ",
    "senechaux": "\n@mgallego I'm ok to ignore codecov on PR's against this branch.\n\n@ruflin So is it going to be merged?. ",
    "keradus": "@ruflin , .dist approach is the same as for phpunit.xml vs phpunit.xml.dist\n.dist is distributed config that is shared via repository\nnon-.dist is local config (ignored by vsc) adjusted by user, if he wanted, for example he can change cache or sth just for his local machine, without pushing it to all users. rule was not enabled, no need to extra disable it. rule was enabled by enabling @PSR2, no need for enabling it again. do you really expect anyone to enable PSR-0 by default nowadays ?. <2.12 is not maintained for looong time.\n2.14 is first one supporting PHP 7.3. ",
    "EliuFlorez": "@ruflin is that I do not know much about the migration process from v2.x to v5.x. so I asked for your help to change just that consult the new version. if it would be so kind on your part. I know it is not your job but to whom I could ask more than the project leader. : D. @ruflin \nif the version of elasticSearch is vs2.3.4 and the elastic version is 3.2.3 which I want to migrate to elasticSearch 5.x and elastic 5.x\nLike the filter script migration: $ elasticFilter = $ qB-> filter () -> script ($ script); they are questions that I would like to help me since I am a newbie with elasticSearch. Help please! https://github.com/ruflin/Elastica/issues/1597\nI'm new to elastic search and I do not know how to migrate this part to version 5.x. @ruflin  The PR of type, script, geo I arrange them is simple the changes.. @ruflin \nClear to present a PR. But I am still very new in ElasticSearch and I would like to clarify the differences between version 2.x to 6.x of elasticSearch.\nSince in the project that I am working the 'indix' was the database of each domain. and the type were the tables with all their properties. but now in version 6 multiple type are not allowed in the same index.\nDo I have to create every index for my database table? or how else can I do it?\nIf you are very kind to help a little. since in the forums they have not helped me.. @ruflin Thanks that helps my doubt to establish multiple index for each tables or in the case that the data are almost the same an indelificative type of index. Thank you! I keep working on the changes. : D. It's my mistake. Hahaha. @ruflin post https://discuss.elastic.co/t/terms-aggregation-split-by-whitespace/171522. ",
    "SosthenG": "Ok, done https://github.com/ruflin/Elastica/pull/1616\n. ",
    "michelv": "May be done in a more elegant manner. (bool isPartial?)\n. When you use Elastica_Query::setFields, you tell ES which fields it must return; they will be in \"fields\" and not \"_source\" (which will not be present).\nYou do indeed know in advance if you'll have complete \"_source\" or just \"fields\", but this patch makes that transparent for the code that handles the results, you could decide first to get the full _source back and then do a setFields later, and your code will still work.\nCurrently result->name_of_field stops working if you issued the request with a set of fields to return, even when \"name_of_field\" is requested.\n. ",
    "cystbear": "Sure, will do.\n. Done. Please merge another pull request.\n. ",
    "igorw": "This shouldn't be needed, since phpunit.xml already has that set as a bootstrap.\n. That's why phpunit.xml should be in the repository root. ;-)\n. ",
    "mfeltscher": "Why not $options === true?. ",
    "dmvdbrugge": "I disagree, the docs on valid() (seem to) say the empty result shouldn't be a valid one, and thus the last iteration that is now prevented was not only \"bad performance\" but also unexpected behaviour.\nIn fact that is why I found the \"bug\", I assumed (because of valid()) the resultset couldn't be empty.. ",
    "AhmedHelalAhmed": "As a developer, I would like to use command to install it.. I think yes, it's better to make the installation with a command. ",
    "krisbuist": "Sure, that definitely makes sense. Wil add. "
}