{
    "rgrove": "Add --all option to copy all folders recursively. Closed by 9a20439abe6abf836f2aef165b06838ba7296a2c\n. Add --dry-run option. Closed by 6386d10b02a92a120ebfa28a93fdbdcd57252799\n. Add --exclude and --exclude-file options to specify folders that should not be copied. Closed by 71eb0a354a8221daf1eadf725fa426e83968671a\n. Add --all-subscribed option to copy all subscribed folders recursively. Closed by 19fdcb571ac18bb832d6e7576c8b3b13ab3fcbca\n. Copy folders recursively by default. Closed by 1692bb2174e8d98e69d8b8d1d98bcf5c483d8538\n. Still haven't been able to reproduce this one and haven't received any further reports, so closing.\n. According to the user who reported this, manually renaming the folder wasn't an option. I haven't had a chance to investigate this myself yet.\n. Actually, after some investigation, it appears that the spaces aren't the problem. The problem is that Gmail doesn't allow label names longer than 40 characters. Gmail doesn't actually support folder hierarchies and treats \"INBOX/blabla/blablabla/etc.\" as a single label name, which is what causes the error.\n. Fix folder name encoding issues when creating mailboxes and getting mailbox lists. Closed by 6375e5ea889b2de25d70617b0f08893b63e0afcc\n. After investigation, I'm unable to reproduce this. imaps://mail.example.no validates just fine.\n. Don't try to set flags that aren't supported on the destination server. Closed by 9d2e2835b3eaae4ff24820c636e768fdcf403c09\n. Don't use case-sensitive name comparisons for INBOX. Closed by d4bdcf6bb2ebf60efc6f31d461e857e1c1b4bd7f\n. I had been intending to address this in the refactor branch, but it's not yet complete. What you see there is what I've got so far.\nThe amount of time I'm able to devote to Larch is virtually nil these days, so help would be more than welcome.\n. Reproduced this once after a very long (hours and hours) transfer session, but still haven't identified the cause, and I haven't been able to reproduce it since.\n. Haven't seen this again in months of testing, and haven't seen any more user reports, so closing.\n. I haven't been able to reproduce this. It seems to be working fine for me.\n. Force Sequel not to use cached data during a mailbox scan. Closed by 69862d298eaeffcb751237ad433f191c7e33a577\n. Fix an issue when trying to copy a folder name with leading or trailing whitespace to Gmail, since Gmail doesn't allow whitespace around folder names. Closed by a475c559a566222f8a9df5d4197e67dd65f5ffff\n. After an audit of the error handling code, it seems like we're already continuing processing whenever it's feasible.\n. Add --delete option to delete messages from the source after copying them\nto the destination, or if they already exist at the destination.\nAdd --expunge option to expunge deleted messages from the source.\nClosed by 0d47dc8fb8defc8a8898e4ee8264f982706b2d2f\n. Fix error when passing --exclude on the command line. Closed by 08e74a59adf95c0821abc54957f95c8db8628347\n. In my testing, Gmail accepts blank subject lines just fine. In any case, this message does appear to have a subject line (notice the 'Re:').\nGmail returns the \"Unable to append message to folder\" error when it can't parse the message for some reason, so it's likely there's something else wrong with this message that's causing the problem.\nI don't suppose you'd be willing to share the raw message source with me, would you? I understand if you'd rather not.\n. Possibly related: https://bugzilla.mozilla.org/show_bug.cgi?id=465670\n. closing\n. Gmail's special folders are all located under the top-level [Gmail] folder in IMAP, so use --from-folder 'INBOX.Sent Items' --to-folder '[Gmail]/Sent Mail'\n. (closing)\n. This issue has already been fixed in the development version.\n. Move deleted Gmail messages to the Trash. Closed by 2782b524b70ac9deed5661582a2b47003b5c9eb0\n. Unfortunately, this is a bug in Ruby's Net::IMAP library that Larch has no control over. Glad to hear you eventually got past it, though.\n. Yep. If Net::IMAP's response parser gets into an unexpected state due to a malformed or otherwise unanticipated response, it can cause a deadlock like this. Skipping the offending message or moving it out of the way with another mail client can get things moving again.\n. Fixed in commit 84f3f14067125a056d14\n. Nope. I no longer actively develop or use Larch, and nobody has submitted a pull request that adds this feature.\n. I just haven't had a need to move large amounts of email in many years.\n. That means a lot, @rahul286! I'm glad you found Larch useful.\n. Pulled. Thanks!\n. Looks like the timeout is wrapped around the append operation to the destination rather than the fetch from the source. Can you give me details on the kinds of messages that trigger this problem? I don't think I've ever seen Gmail hang on an append.\nI'm not opposed to the patch, but I'd like to understand the problem more (and hopefully come up with a way to reproduce it) before pulling.\n. Have you tried running larch with -V insane? This will log all IMAP commands and responses to stderr, and should allow you to pinpoint exactly where the hang is occurring.\nThere's a non-zero chance that this is caused by a response parsing bug in Net::IMAP (I've encountered several before), which tends to just lock up when it sees a response it doesn't know how to parse. If that's the case, then monkeypatching Net::IMAP would be the best solution (or maybe a monkeypatch plus a timeout as a fallback).\nOtherwise, if there doesn't appear to be anything interesting in your IMAP logs, I'll go ahead and pull the timeout patch.\n. Thanks for the debug output.\nThis does seem like a server quirk. From the docs, though, it sounds like Courier IMAP supports spaces in folder names, so maybe it just has some special requirement I'm not aware of when creating folders.\n. Good catch, thanks.\n. Good catch. Would you mind sending a pull request with your patch?\n. Dupe issue. Ironic. :)\n. Thanks!\n. Sorry for the long delay on this one, guys. When this issue first cropped up, I was in the midst of a huge Larch rewrite and figured I'd just fix it there, but I never got around to finishing it, and in the time since I've been way off in JavaScript land and haven't had time for Larch.\nShould be fixed now, and I've pushed a new 1.1.2 gem. Thanks for being patient!\n. Larch is intended for efficient one-way copy operations, but doesn't support full roundtrip syncing. OfflineIMAP might be a better tool for what you want to do.\n. --from-folder and --to-folder only copy the specified folder by design. To recurse and copy subfolders as well, you'd need to use the --all or --all-subscribed option. You could then use --exclude to specify folders/subfolders that you don't want to copy.\nIt's not the most user-friendly design, I agree, but it's the result of Larch being originally written for a very specific use case and eventually becoming more generalized over time.\n. Ah, I see what you mean. Yeah, Larch currently isn't capable of doing this, but it's been requested before and it's on the nice-to-have list.\n. Thanks!\nI don't use Windows so I'm not interested in maintaining or supporting a Windows executable, but please feel free to build and distribute one yourself.\n. By default, Larch looks for a Message-Id header and uses that to generate a message's guid. As long as two messages have the same Message-Id header, Larch assumes they're the same and ignores any other content. It sounds like maybe your messages don't have Message-Id headers, so Larch is falling back to using the message size and date to determine uniqueness.\nIf you ensure that all your rewritten envelopes contain Message-Id headers (you can create them if you need to -- just be sure to make the value unique for each message), Larch should dedupe them correctly without further modifications.\nThe code in question is here, if you're curious: https://github.com/rgrove/larch/blob/master/lib/larch/imap/mailbox.rb#L334\n. Larch itself doesn't parse message envelopes; that happens in Ruby's Net::IMAP library. If the exception is coming from Net::IMAP, then you'll have to either monkeypatch it or file a Ruby bug and hope they fix it in a year or three. Sorry!\n. Larch no longer uses Amalgalite as of version 1.1.2, so this shouldn't be a problem anymore. Thanks for the heads-up, though!\n. If you're asking how to have Larch recognize Message-Ids that are generated on the fly from something other than the actual Message-Id header, then you'll probably need to modify the create_guid() method here: https://github.com/rgrove/larch/blob/master/lib/larch/imap/mailbox.rb#L334-L349\nWhatever value that method returns will be used as a unique identifier for the message, and will be compared with the guids for messages on the destination server to determine whether the message is a duplicate.\n. Ruby buffers writes to stdout by default. You could change this by adding explicit flushes after Larch's stdout calls, but I'm not going to do this by default.\n. What version of Ruby are you using?\nThis looks like a bug in Ruby's Net::IMAP stdlib (or possibly a bug in the iCloud IMAP server that Net::IMAP isn't handling gracefully). If you're using an old version of Ruby, upgrading might resolve it.\n. ",
    "nickrw": "Does replacing the space with a dash not do the trick?\n. ",
    "efgonzalez": "Any progress here? Perhaps I can help implementing this.\n. ",
    "marc10": "yes, I have read about others having the same problem: \nhttp://groups.google.com/group/gmail-power-users/browse_thread/thread/bfd949e7a2e19c2b/b958689303b88935?pli=1\nthanks rgrove. you are right, the subject does have 'Re:'\nBut there is something about certain subjects that causes a problem. I had the same issue when I used my mail client (Mail.app for OSX) to copy email messages. It always get hung up on blank subject lines (or those with just Re:).\nI would be more than happy to share the raw message with you. I'd love to isolate the issue myself. I have your email address from your GitHub profile. I'll send it over. \nThanks. \n. ",
    "hross": "n/m, already exits as feature request.\n. ",
    "gorn": "I get this on my gmail account:\nNet::IMAP::NoResponseError:  No folder [Gmail]/Trash (Failure) (will retry)\nthe problem is that the name of the folder is localised as [Gmail]/Ko\u0161 .... I do not really know what to do with this, but please reopen this issue.\n. ",
    "jasonm23": "My \"Trash\" is labelled as \"Deleted Messages\" ... I'm patching locally. (which didn't work)\nMight need to add this as a configurable to work for everyone. Not sure what's going on, because Google documents the Trash via IMAP as [Gmail]/Trash but I get folder not found. (same when I tried Deleted Messages or Bin.) \n. ",
    "hjo1620": "Please ignore this bugreport. \nThe error occured while the source server was slow to respond, today I don't have this error.\n. FYI I didn't really give a complete picture regarding the error, I'm sorry about that.\nHere's what happened:\n- I ran the migration using larch\n- it failed/stopped with the errormessage in the above bug report\n- I re-ran larch 3 times, and it always stopped at the same message (slightly different debug output afaic remember)\n- I used Thunderbird to manually, via IMAP, move the last message in the debug output\n- Manual move worked\n- Re-ran, and now the migration ran to completion \n  (emails: 16436, folders: 354, mailbox transferred/size: 928MB)\nThe single message that blocked the migration, had a weird (dingbat looking) character in the subject. \n. Is it possible to scan the source mailbox beforehand, for these kinds of malformed messages, i.e. can we detect them somehow ?\nThe previous migration took 8 hours, and I would like to not monitor it, rather manually move malformed emails beforehand.\n. ",
    "tester22": "I have the same problem but in my case it is Swedish characters \u00e5\u00e4\u00f6 in folder names.\nHere the folder on the local Exchange 2003 server has the name \"Sparade Mail/Server, n\u00e4tverk &-datauppgifter\"\n[20:27:23] [info] localhost/INBOX/Sparade Mail/Server, n&AOQ-tverk &- datauppgif\nter -> imap.gmail.com/INBOX/Sparade Mail/Server, n&AOQ-tverk &- datauppgifter\n[20:27:23] [error] unable to get status of mailbox: The requested item could not\n be found.\n. a workaround is to replace this line in lib/larch/imap/mailbox.rb:\n@name_utf7  = Net::IMAP.encode_utf7(@name)\nwith:\n@name_utf7  = @name\nThe only drawback seems to be that the folder are added twice to the target server one time with correct name and one time with unencoded characters eg: &AOQ-\n. ",
    "enc": "I have the same problem with kyrillic letters. Easy reproducible. \n. ",
    "carloscabanero": "This is an upstream bug with amalgalite. You can fix it by changing Sequel to Sqlite3 again. \n. ",
    "m94mni": "I'm seeing this with\nNet::IMAP::BadResponseError: Invalid system flag \\JUNK\nand\nNet::IMAP::BadResponseError: Invalid system flag \\IMPORTANT\nas well...\n. It does seem the message is copied though. If I specify --delete, it is not deleted however.\n. Ah, it seems this only occurs if I use --delete - is it an issue with the source server instead? This is consistent with the fact that the messages seem to be delivered correctly. \nThis must be an error in the delete routine!\n. ",
    "purcell": "Same here, but with a different flag:\n[14:32:30] [info] [<] deleting uid 14889 (already exists at destination)\n[14:32:30] [warning] [<] Net::IMAP::BadResponseError: Invalid system flag \\JUNKRECORDED (will retry)\n[14:32:31] [warning] [<] Net::IMAP::BadResponseError: Invalid system flag \\JUNKRECORDED (will retry)\n[14:32:33] [warning] [<] Net::IMAP::BadResponseError: Invalid system flag \\JUNKRECORDED (will retry)\n[14:32:36] [error] Net::IMAP::BadResponseError: Invalid system flag \\JUNKRECORDED (giving up)\nThe source is a Dovecot server accessed primarily by Apple Mail, which I presume was responsible for that particular flag.\n. ",
    "frenchja": "Same here.  [warning] [<] Net::IMAP::BadResponseError: Invalid Arguments: Unable to parse flag \\NonJunk (will retry)\nThis is only produced on messages that were running on a Horde installation around 2003 to 2005.\n. This issue is not reproduced using 1.9.3 from rvm.\n. ",
    "msmart": "same here. I don't even see the name of the system flag.\n[warning] [<] Net::IMAP::BadResponseError: Invalid system flag in UID Store command (will retry)\n[error] Net::IMAP::BadResponseError: Invalid system flag in UID Store command (giving up)\n. ",
    "MihailRussu": "I too am getting the following warnings:\n[02:32:23] [warning] [<] Net::IMAP::BadResponseError: Invalid Arguments: Unable to parse flag \\NotJunk (will retry)\n[02:32:24] [warning] [<] Net::IMAP::BadResponseError: Invalid Arguments: Unable to parse flag \\NotJunk (will retry)\n[02:32:26] [warning] [<] Net::IMAP::BadResponseError: Invalid Arguments: Unable to parse flag \\NotJunk (will retry)\n[02:32:29] [error] Net::IMAP::BadResponseError: Invalid Arguments: Unable to parse flag \\NotJunk (giving up)\nIs there a solution to this or should I be using something more recent if this project is not being updated anymore?\n. ",
    "hennegwath": "I think the from-folder to-folder thing is about mapping one to another. A full control of all mappings would be very nice. At least I would propose some \"include\"-key, used like the \"exclude\"-key. At the moment I have to exclude all folders except the ones I want to copy over :)\n. Thank's for the info. I had a look how to do it and endet up asking on the ruby-list if anyone has experience on this field ;)\nI get at least some 97% migration rate.\n. Hi,\nBecause Message-Id is sometimes only present in the mail envelope, I fetched that during the first stage to have it there when create_guid is called. But sometimes the envelope is broken and cannot be parsed (Net::IMAP exceptions). Before, larch then skipped that message and continued with the next (probably not broken) one. Fetching the envelope during this first stage breakes this behavior and I get stuck in a \"exceptions-loop\"... So I decided to use only INTERNALDATE and hope no two messages with identical values are present in the same folder.\nWould you propose to add another attribute (not size, because I modify the messages on-the-fly)?\nthank's and my very best regards,\nHenning\n. ",
    "kars7e": "I would love if this feature got implemented... any chances?\n. ",
    "remofritzsche": "+1, this is a must-have for me.\n. ",
    "jxchong": "Did this ever get implemented? \n. I found Larch because apparently Microsoft's support for \"migrating\" from our internal IMAP to Exchange Online/Offic365 consists of setting up email forwarding but not actual migrating the existing email content from one server to the other. While support for a global folder prefix would've helped a bit, I was able to mess around with folder structures enough to at least get my email migrated to office365... using Larch and only 11 emails failed to transfer (out of ~12k) because of the \"Net::IMAP::ResponseParseError: unexpected token EOF (expected CRLF)\"\nSo thanks so much!  Hopefully Larch will keep working for a while and/or someone will pick up development in the future. This was a way better option than relying on imapsync.\n. ",
    "rahul286": "@rgrove \n\nuse Larch\n\nAre you using something else or don't need to move mails as part of daily job routine? We use larch quite frequently so wondering.\n. Great. I used this many times and can't thank you enough :-)\n. ",
    "jmazzi": "I'm not positive what exactly it was that was causing it but having the timeout in that spot did fix it. \nI'm re-copying my account again to find the specific message that caused it to hang. The messages that were causing it were from some malformed emails that arrived in my inbox from some cron scripts. It's probably going to be another day or so before it happens again. There's a lottttt of messages.\nPS, thanks for all your hard work on this script. \n. It happened 3 times so far. There's nothing specific about the messages that I can see. Here's the output with the patch:\n[09:07:55] [warning] [>] Net::IMAP::NoResponseError: Unable to append message to folder (Failure) (will retry)\n  [09:11:41] [error] [!!>] copying uid 282130: timed out!\n  [09:11:41] [warning] [>] Errno::EPIPE: Broken pipe (reconnecting)\n  [09:11:42] [info] [>] connected to imap.gmail.com on port 993 using SSL\n[09:35:59] [error] [!!>] copying uid 287286: timed out!\n  [09:35:59] [warning] [>] Errno::EPIPE: Broken pipe (reconnecting)\n  [09:36:00] [info] [>] connected to imap.gmail.com on port 993 using SSL\n[10:56:19] [error] [!!>] copying uid 311354: timed out!\n  [10:56:19] [warning] [>] Errno::EPIPE: Broken pipe (reconnecting)\n  [10:56:21] [info] [>] connected to imap.gmail.com on port 993 using SSL\nThe emails in question are of a confidential nature or I would post their content.\n. Alright I've got a message that is able to cause this to happen on demand. When I have more time i'm going to look into this further.\n. I've finally found a message that can reliably reproduce the bug: https://gist.github.com/0ff73e85132d0b691f4c\n. ",
    "janhellevik": "Thanks for the response. I think you are correct that it is a server quirk. I have tried several times the last 24 hours, but finally given up. I tried reading the code to see if there was something obvious, but I have never seen ruby code before, so I gave up on that as well. :-) The code made me want to look into ruby, though. I am not sure if it just your style, but I found the code easy to read/follow. Very organized and neat. Better than most I have read before.\nI did also create a new user on both the old server and the new and played around with larch, but I could not get it to work as I wanted. I have now asked the new hosting partner to import the mail files from the old server.\nI do not have more time to use now, but I will revisit larch at a later time, and I can then provide more detailed logs and test descriptions from my failures if you are interested.\nJan\n. ",
    "victornoel": "Hi, I confirm this issue and that the solution works well :)\nI also put >= in te line before for need_flag_scan\n. I'm sorry, I have not been clear :)\nI am using all, so for example, for the tree :\na\na/b\nc\nand using \"all\" and \"to-folder s\"\nI would have liked to get:\ns/a\ns/a/b\ns/c\nSo, it seems (to me) that this should be the normal behaviour, no ? Or maybe this mean we would need another options, such as prefix or something like that?\nThanks for your quick reply :)\n. ok, thanks :)\n. ",
    "andrewhavens": "I just installed the pre-release version of larch (hoping most issues would be resolved)...but I just experienced this one while trying to migrate a test account with only one email in it. So this is still an issue.\n. ",
    "peterkaminski": "I am doing basically this, using Dovecot on an EC2 server to manage the email archive using native IMAP, and larch to copy from my live email service (Tuffmail IMAP) to Dovecot periodically.\nI start the EC2 server when I want to do a backup or retrieval, and stop (but not terminate) it when I'm done, to save on CPU cost.\n. ",
    "gjuric": "I have managed to fix the problem by creating the folder by hand using the maildirmake command:\nmaildirmake -f folder_name /path/to/maildir\nJust in case somebody runs into the same issue.\nI believe that larch should maybe first create the folder before he builds the subfolders recursively.\n. ",
    "whity": "Hi,\nI fixed this with the following changes:\n1. added a new option --ssl_version\n2. on imap.rb\n``` ruby\ndef initialize\n    ...\n    ####\n    @ssl_options = Hash.new()\n    if (@options[:ssl_version])\n       @ssl_options[:ssl_version] = @options[:ssl_version]\n    end\n    ####\nend\ndef unsafe_connect()\n    ...\n    Thread.new do\n      begin\n        @conn = Net::IMAP.new(\n                host, \n                {\n                        :port => port,\n                        :ssl  => @ssl_options\n                },    \n                ssl?, \n                ssl? && @options[:ssl_verify] ? @options[:ssl_certs] : nil, \n                @options[:ssl_verify]\n        )\n    ...\n```\n. ",
    "xee5ch": "Definitely made a difference.  I was able to transfer about 5K messages this way. I know the issue is kind of resolved, but not sure you want to handle it.  Will leave it as per your discretion.\n. ",
    "laclaro": "Just as a side-note: With the above approach I managed to migrate nearly all mail (90%) from the broken FirstClass Server to a new cyrus-imapd.\nregards,\nLaClaro a.k.a. hennegwath\n. ",
    "halkotron": "larch connects to port 143 when you use imap:// URI. Try:\nlarch -f imaps://ip-address -t imaps://my-domain-name\n. ",
    "M5oul": "Thanks, I didn't saw that part of documentation.\n. "
}