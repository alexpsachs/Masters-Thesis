{
    "Fishrock123": "hmmm, perhaps there is overlap because we merged in node back when it was node-forward/node?\n. So, might as well start going through.\ncomments in no particular order yet: (I'll re-arrange the commits by subsystem soon.)\n\nV8 & libuv patches\n\nAre those commits from node already on the deps as well? io.js has only accepted floating patches if they already exist upstream.\n\n878c40e mdb_v8: fix symbols not loaded properly\nebfa7e3 mdb_v8: add tests for ::findjsobjects -k KIND\n4312f8d mdb_v8: update for v0.12\n\nWe removed mdb_v8 entirely, as per https://github.com/iojs/io.js/pull/1023 .. what's it even do?\n\nSSLv2/v3\n\nAs I think you already know, we removed that entirely as per https://github.com/iojs/io.js/pull/315\n\ntimers: Avoid linear scan in _unrefActive.\n\nWe should probably still port that over to io.js in some form soon anyways. There is however, a timers re-write in the pipe.\n. Hmmm, don't think so, we can always check back if we think we missed anything.\n. I'm quite sure we are going with \"drop em\", feel free to close if so.\n. We can point our CI at this repo just like we do for people's PRs. It is largely manual for the time being, although we have had mostly successful test runs of an automatic-per-pr setup.\n. LGTM\n. @jasnell pro-tip: if you force-push the same commit to your own PR before landing, github will recognize the merge. :)\nala git push your-origin +HEAD:your-branch\n. while true, +HEAD: allows you to update it after you have merged onto your local master.\n. Oops sorry. I'm really not sure we should be using the green button for this though, are we going to be basing work off of this repo, or is it only a proof-of-concept?\n. > What process do we want to follow here?\nI'd prefer if we followed at least a core-like process, both io.js and node don't use PR merge commits.\n\nWe do not yet have any CI set up on this to help gate the commits.\n\nAgain, the io.js CI can be pointed to run on any repo/branch. :)\n. @jasnell mind if I force push to clean that up? We should treat this like an official repo imo. :)\n. > Aren't there a lot that we would objectively want to skip though? Aren't there a bunch of commits that essentially just backport io.js changes to older v8 that we're not even on now?\nYes.\n. Do note: it is planned to be a major, so breaking changes could be done.\n. @jasnell how do you feel about this?\n\nWhat's being discussed on IRC is cherry-picking specific commits into a branch that's rebased on top of master. I'm generally in favor of this approach, but we get into specifics of \"what commits do we merge\" vs. \"what commits do we skip\" and it starts to get tempting to editorialize (which we've attempted to avoid doing with this repo.)\n. Particularly, I'm wondering about\nWhat's being discussed on IRC is cherry-picking specific commits into a branch that's rebased on top of master.\n\nWe can cherry-pick the commits in order, but I feel by subsystem would be easier. (for conflict resolution).\nI don't think \"editorializing\" it is bad, this way we don't need to port over merge commits and other metadata that is no longer of use.\nWe can take all the then-relevant commits and functionality, discussing afterwards. That is fine by me.\n. > Well, currently recovering from a bit of food poisoning so haven't had a\n\nchance to catch up\n\nAlso, take your time to get better, no rush here, food poisoning is nasty! :)\n. Here are the test branches side-by-side: master-with-merges / master-using-rebase\n@jasnell if LGTY I'll start pushing the rebase one. PR's will be a little wonky to do maybe, but it'l end up the most reasonable IMO. (from a git perspective)\n. Ok pushed that to master.\nNext question would be: do we want to apply the commits in entirely historical order, or group them by subsystem/something so that the process is easier? (doc: commits would definitely be easier to do separately all at once.)\n. CI: https://jenkins-iojs.nodesource.com/view/iojs/job/iojs+any-pr+multi/671/\n(Currently not perfect, there's a fix for one issue coming soon and the windows issues may be jenkins-related.)\n. Updated. CI at this point now looks like: https://jenkins-iojs.nodesource.com/view/iojs/job/iojs+any-pr+multi/676/\n. (Still need to CI-bisect the windows things.)\n. It appears to be jenkins trolling us: https://github.com/iojs/io.js/issues/1679#issuecomment-101907328\nIf you have a windows machine you could try it, but it'l almost certainly pass locally. (unless one of the lingering rarely-pops-up failures hits)\nEdit: specifically, you may rarely see https://github.com/iojs/io.js/issues/1100\n. Used git push convergence +HEAD:master-with-merges will fix local setup later.\n. Also pushed the rebase version to master. or.. I thought I did. That version doesn't have the readme commit now? I have it locally. ~~Fixing.~~ Fixed.\n. :+1:\n. This repo is going to be named node or node.js once it is moved, correct?\n. We could request for an un-fork and then move it, or just remake the repo in nodejs.\n. I think github did a thing with collaborators for this repo haha, check out your news feed.\n. Yeah, it's fine, just noisy. iojs/collaborators should probably also have access to this repo.\n. Can we get this merged and just update the node foundation name later if need be?\n. @fsbatista could you re-open this on https://github.com/nodejs/io.js? Otherwise I'll port it to there. This repo isn't ready for regular PR's yet.\n. nodejs/io.js/pull/1724\n. This still need more discussion. Also, it should probably be PR'd to the io.js repo for now.\n. Imo dev-policy should eventually live in-tree, because then people will actually see it and it seems more official.\n. doc/internal may not be visible enough though.\n. I'd be curious if this will impact perf depending on where it is.\nWhat's the summary of what this fixes, just people setting weird headers? Does that actually produce any thing other than invalid sent headers? Are people just using the API wrong?\n. 1. Indeed, I already dropped enhancement from here, feature request is much more useful.\n2. sure, sure? if you feel it's appropriate. We have pr's marked as bugs especially when there isn't an issue for it already.\n. @srl295 it's like a subsystem tag. I'd just add it after mentioning here with no objections. (maybe intl since our tags are mostly lower-case.)\n. 1. What if we need to know where a specific patch would land? There has been discussiona bout using tags and tooling for this.\n2. Huh? meta is for anything like not-code not-docs kinda. Just an \"everything else about the project and how it is run\".\n3. Hmmm, not sure. Not everything in future is necessarily NG-future?\n4. There's a js tag? Considering it;s our main language and what most people are able to contribut to there shouldn't be.\n. LGTM, but it probably shouldn't land here? (until converged..) Can we name this repo back to convergence to avoid confusion?\n. Right, I really don't want to end up with a third diverged stream though.\n. Edit: moved to https://github.com/nodejs/node/issues/20\n. AUTHORS is a git thing, right? If it is, I recommend just dropping the AUTHORS commits and rebuilding once converged.\n(same with .mailmap)\n. > docs: delete unused/duplicate css files\nHmmm, we didn't do this yet in io.js, should / can be ported.\n. I did not cover docs: update api location (joyent/node@b259f24), it may need to land. cc @robertkowalski \nEdit: This is because I really have no clue how the docs go up on node.js org.\n. cc @nodejs/build actually, does joyent/node@b259f24 make any sense to take now or in the future?\nEdit: Hmm, not able to link to that. @rvagg?\n. docs: delete unused/duplicate css files landed in https://github.com/nodejs/io.js/commit/1cb72c14c445155124d6b294314dc4a7e397d878\n. This is a duplicate of https://github.com/nodejs/node/pull/9, thanks though. :)\n. Moved from https://github.com/nodejs/node/issues/16\nI think the sslv2/sslv3 stuff may need to be re-written to adapt to io.js changes, or maybe we could revert io.js changes?\nEither that or we discuss dropping it again, which we should probably discuss anyways, since re-writing a patch when possible reversion in discussion afterwards before release makes little sense.\n. 0ec78c961b32abf732620682678439c51f74dc86 configure: disable ssl2/ssl3 by default\nd6712917f5842fb7124f85902b7e6f68f12f4865 doc: document why SSL2/SSL3 is disabled\nc1f4aacc75c0a64a81a2be8d6a3a23aa21a31b15 build: revert change to disable ssl2 and ssl3\nShould also be moved here.\n. @rvagg we could add placeholders for the flags so stuff doesn't break, but are you suggesting we should actually keep the flagged sslv2/3 functional from node? We basically already all voted no from both sides and said it was actually a step backwards. I mean if absolutely necessary I guess we could but...\n. This should be ported to io.js.\n. The plan is to add linting alongside doing an updated version of this. progress here: https://github.com/nodejs/io.js/pull/1794\n. _unrefActive() hasn't been touched, this could probably be ported to io.js.. I had been meaning to look into doing it simpler but hadn't yet.\nEdit: hmm, more git conflicts than I had expected.\n. Also:\n- timers: don't close interval timers when unrefd https://github.com/joyent/node/commit/78db74dd88bdf4159da4d278e89b0781119633d5\n- timers: don't mutate unref list while iterating it https://github.com/joyent/node/commit/fd2cb7c611595f1d9095e3087b06939d22238540\n. @piscisaureus But isn't _unrefActive() for internal timeouts that are explicitly unrefed on creation? What is the point of unref()-ing those? I admit it is a little hacky to effectively have two types of timers..\n. @bnoordhuis understood. I don't really get what's so bad about the patch(es) in question though, although I am quite sure they are not perfect. Running O(n) at the timeout phase is a bit weird and usually undesired, but it does make some sense for timeouts that usually shouldn't timeout.\nWhat's the other option, making it a sorted list again and using an (average) O(n log n) ((I think?)) search? Won't a timing wheel still be somewhat O(n log n) at best too?\nBtw, how far did you get on that timers re-write? Even if it's not done I may be interested in seeing how things could be changed. :)\n. > It's not O(n) on expiry, it's O(n) every time something happens that resets (moves back) the timeout.\nDo you mean the current state in io.js, or with joyent/node@934bfe2? (I think I understood that was currently the case in io.js, but not with Julien's patch.)\n. > we may need to consider a backup plan for this, timers has the potential to be a deep rabbit hole and it'd be nice if a \"rewrite\" doesn't end up deferring a release\nSo, I won't be doing a re-write I don't think. An actual re-write should touch parts I don't really understand (like full _handle management)\nEither current io.js or current node.js is bad. I do think Julien's commit alleviates the more common case however, but for a tradeoff that is philosophically worse.\n@rvagg is there any way we can get some build-ish machine for running perf profiling on? A problem I'll have here is a lack of access to the perf tools linux has.\n. @rvagg what sort of machine is that btw? And what dir do you want me to use for this? Some help would probably be great once I get into it, I'd mostly be going off stuff I've heard from @bnoordhuis in the past.\n. :+1: Thanks!\n. > I also had documented this work here: https://github.com/joyent/node/wiki/Optimizing-_unrefActive, although this document is slightly outdated. For instance it doesn't mention what we ended up landing.\nRight, I've looked at that.\n\nThe main issue with the heap implementation was that at that time we were not able to make a decision on how to integrate an internal heap implementation into the code base. My implementation was using @tjfontaine's binary heap module as a proof of concept, but I couldn't get any input from other contributors on whether or not we should add that as an internal module.\n\nWe have fully internal modules in io.js, unaccessible to users (.. accessible with a flag for testing purposes only.)\ni.e. require('internal/heap')\n@misterdjules Seems like that solves the main problem?\n\nA timer wheel implementation was left out initially because we thought that it might be difficult to tune and we wanted to explore what the performance was with an unordered list and a binary heap first.\n\nI've read up on them, it probably would be fairly difficult to tune without far better benchmarking than we currently have.\n\nHowever, if anyone feels strongly against this change, I would not push for landing it given our lack of objective data about how that would impact users.\n\nWe can hold of to landing this last then, if everything else lands, but a heap isn't ready, we can temporarily land it. I should still have more time to work on using & improving on Ben's heap this week, so we'll see how far I can get.\n. > The problem with moving my heap-based implementation forward was not technical, it was a lack of feedback. Without a LGTM or feedback about what would need to change from anyone I was not able to make any progress on it.\nOk, cool. I'll try to take a look at it soon.\n(Progress might not be be super fast, I'm kinda moving to BC (west coast canada) for over a month next week, and attending nodeconf)\n. Progress! https://github.com/Fishrock123/io.js/commits/improve-unrefactive has given these preliminary results: https://gist.github.com/Fishrock123/23950d26346dc8077a08\nI'll work on compiling more benchmark data and improving the impl more, but it seems like there is an improvement.\n. Updated my gist of results with more data. Now with data from node's unsorted array patches (both of them) applied onto io.js.\nThe results seem to show that the unsorted version is faster than a sorted array even in the worst case because of how these timeouts are used.\nThe heap version is massively outperforming both on the worst-case test, and seems acceptably fast in the common case. Next step will be to make some benchmarks that use more real-world like code and see how those perform.\n. https://github.com/nodejs/node/issues/268\n. I think that patch LGTM, although we haven't had any issues without it..\n\nThis would break on test environments where some custom environment variables are needed to make node work properly.\n\nDoes anyone know what platforms these are? Maybe cc @rvagg.\n. Landed as per https://github.com/nodejs/node/pull/43\n. > src: make build pass with GCC < 4.5\niirc this isn't possible with the v8 we are using, cc @bnoordhuis\n. Also looks like it should just be dropped, again < 4.8 isn't going to work anyways.\n. Well, older systems that use GCC < 4.8 will break trying to build without having GCC upgraded.\n. @jasnell Hmmm, isn't the 2nd commit still valid? The windows 32 one?\n. Some extra discussion / context between myself and @misterdjules on irc about mdb: http://logs.libuv.org/io.js/2015-05-22#17:49:38.409\n. @misterdjules was that ever upstreamed in the end?\n. Please bump it. I think this is a converge blocker.\n. Can we expedite this a bit? Is there anyone else who is familiar with mdb other than @misterdjules?\ncc @nodejs/tsc If theres a point we'll fall behind for a converged release I think this is it.\n. Also maybe cc @raynos because I know he uses mdb a lot with node.\n. @misterdjules two things:\n1. Any changes to v8 in io.js/converged must be upstreamed prior to floating them. (General policy)\n2. Someone with knowledge of it has to actually update the biding for io.js/converged, I think?\n. So do we not actually need this stuff in core then? Should we just point to the external project you have? Isn't that a pretty big breaking change for users, or?\n. Just a reminder, that was two weeks ago.\nSo what I understand is that we really only need to re-enable post-mortem debugging for v8? Is that correct?\n. Um, this a revert, I don't think we even have the original commit (https://github.com/joyent/node/commit/ad0684807c474db5cda7d28592e34e19910eb7ab)\nif anything, we should PR the original commit for semver-major in io.js\n. Recommending porting this to io.js\n. Landed in https://github.com/nodejs/io.js/commit/a79dece8aded7891cb64b9d87c0a9ba26aa7c9c4\n. I think the original flaky tests were fixed in io.js, but there's still one or two that give sporadic failures. The much larger, but not entirely related issue is jenkins messing up certain windows tests.\n. This was already ported over: https://github.com/nodejs/io.js/commit/68d4bed2fd05f22472cebb24cb10a5679de47cbf\n. See https://github.com/nodejs/io.js/pull/774#issuecomment-104632454\n. I suggest we use the major for this as a breaking change and document it.\n. Maybe port to io.js, conflict isn't large.\n. @woollybogger again, probably. If you'd be willing to do it, that would be great! :)\n. While true, some of this is just good maintenance for the io.js line.\n. Landed in io.js: https://github.com/nodejs/io.js/pull/1778#issuecomment-118502525\n. Interesting, @mhdawson do you remember which tests failed prior to this?\n. Ping @mhdawson (does he get these notifications?)\n. Ok, sounds like this has already been solved then!\n. Maybe cc @indutny, seems like a simple fix though.\n. I think we now have better ways of specifying platform-specific timeouts. cc @silverwind \n. @jasnell @mhdawson I checked and they don't seem to, however it would be better to use platform-specific timeouts that we have for these kinds of things than just raising the timeout.\n. Hmmm, this seems to be a special-case for AIX's exit() though, so I'm not sure this can be applied as a common thing?\nThoughts? We could just take the patch, but it also means the test will take over a second on all machines. :/\n. @mhdawson your commit log above does have some detailed info on it, yes.\nIn io.js we've preferred to checking the platform it seems.\n. @mhdawson Yes. I'd probably suggest adding AIX to common.platformTimeout() and then using that everywhere. (Unless this is super special case and AIX doesn't need it anywhere else, and nothing else needs it here.)\n. @mhdawson Yep, that sounds fine. :)\n. Updated again, @jasnell can you sign-off? :3 (So I can rebase master to be up-to-date)\n. @jasnell it may be better to target these onto master-with-merges and then cherry-pick to master.. maybe? I'm not 100% sure.\n. I would structure the final commit log as this, but discuss:\n```\nSome tests that rely on some environment variables being passed to child\nprocesses would fail because they reset the child processes'\nenvironment instead of appending to it. This would break on test\nenvironments where some custom environment variables are needed to make\nnode work properly.\nPORT-FROM: joyent/node @ e64ee2b3f7b4067101b0291f1add842353cd6865\nThis port is modified to move the function into common.js per\nhttps://github.com/nodejs/node/issues/25#issuecomment-104804881\nPR-URL: https://github.com/nodejs/node/pull/43\n\n```\nI'm not sure I would separate out the original commit message as being original?\n. Actual patches LGTM, if you prepare the commit message (and / or squash) I can just pull the .patch off of this and land it.\n. My bad for not doing this sooner. Landed in c76c40c5ee1e3e5db69cf73ffd3cde3b1353f0c3!\n(And master, but that is slightly harder to keep track of.)\n. Is nosnapshot for v8 snapshots? We now want those enabled here, security issues have been fixed.\n. @misterdjules We've re-enabled snapshots in io.js by recommendation from the v8 team since existing insecurities had been resolved.\n. > The only question is about nosnapshot.\nAgain, if it disables v8 snapshots, it shouldn't be there anymore. :P\n. cc @nodejs/build\n. So uh, what's the status of this then?\n. @rvagg can you send this to io.js? Anything that lands in master here is just going to be pushed over still anyways.\n. (That is, anything except commits from joyent/node, we'll keep rebasing them ontop of io.js until we've got them all.)\n. Original issue: https://github.com/nodejs/io.js/issues/430\n. I think there was some discussion surrounding https://github.com/nodejs/io.js/pull/1650 (originally: https://github.com/nodejs/io.js/pull/933, https://github.com/nodejs/io.js/issues/1588, https://github.com/nodejs/io.js/issues/1591) about URL spec conformance, and I think the discussion panned out as \"it's not going to be that way for the forseeable future due to potential breakage\". It was suggested (by @isaacs I think) that having a spec-compliant URL module in userland would be good.\n. I really don't think that is a good direction to go in. :/\n. This might change between now and once we've got all joyent/node patches and we are done rebasing, I'm not going to review until then, and it may be outdated by then. :S\nThanks for trying to help though, this would be great once we're there!\n. > Since most of the patches we're pulling in are coming from node, I figure it's better to switch over sooner than later.\nRight, but we will be rebasing ontop of io.js until we have all the patches, so there are no guarantees. :)\n. If it is still the default in 0.12, it's still going to kick in to at least TLS 1.0, since SSLv2 and SSLv3 are behind flags in node 0.12.\nSSLv2/3 have been completely removed in io.js, and will not be re-added to the converged repo as per https://github.com/nodejs/node/issues/20\n. Cool, we just need to make sure we note this in the breaking changes.\n. If I don't respond on / am not on IRC, I won't be around, don't bother waiting on me if that is the case. :)\n. I just want to make sure this gets heard about the rlimit thing: the current behavior or equivalent must remain on OS X.\n. https://github.com/nodejs/io.js/pull/1943\n. > @isaacs (TSC)\nIsaac isn't actually on the TSC anymore. :)\n. I mean, sure, it's new and shiny, but do you have any specific reasons why? :)\nI'm sure @indutny and @shigeki have thoughts on this.\n. Closing as per @indutny's comment. If it ever gets to a useable point for us we can open a new thread about it.\n. > Also, the foundation budgetting process has begun so this would be a good\n\ntime to start talking about anything the TSC needs that could require\nbudget.\n\nIf possible, it's time I bring my need for employment (/related) to the board. We can discuss a bit of this before the actual meeting, maybe?\n. @techjeffharris they no longer are since we outgrew the max people limit on google hangouts on air. They are now posted to soundcloud. (I think it's up-to-date.) https://soundcloud.com/iojs\n. Ping @mikeal ^\n. Again, they are being uploaded right now to https://soundcloud.com/iojs due to an inability to record the video. (Besides, there was never much video anyways.)\n\nAre the videos available despite my inability to find the recordings?\n\nNo, we don't do video meetings. It's too bandwidth-heavy for the number of people we have and afaik the software doesn't even support it.\n\nAre they being uploaded to/by a service/account other than youtube/iojs?\n\nhttps://soundcloud.com/iojs\n. We should make sure to link to the soundcloud recording now though. I;ll try to remember that bit.\n. No it's just some manual labor and account-sharing business. I notified @rvagg and @mikeal at today's meeting that it needed to be done asap.\n. > We need to add an item to the Agenda to talk about the security policy. The Linux Foundation is sending Emily Ratliff from their security team to this one.\n\nIn fact, if we could jump that to the top of the agenda so that Emily can leave early that would be great.\n\n:+1:\n. > @mikeal (observer)\nCan we change that to (foundation) or something? :P\n. > nodejs/node: Node Foundation TSC Meetings are not being uploaded to Youtube #68\nRemoved as I answered it and it is no longer necessary to discuss. We should just make sure to link to soundcloud everywhere.\n. @srl295 does issue labels #14 need to be a meeting topic? Can't we do that in-issue?\n. > nodejs/node: issue labels #14\nRemoved. (see above and #14, I think this was mostly just mis-understanding.) :)\n. io.js is better for now, yeah. :)\n. Duplicate of https://github.com/nodejs/io.js/issues/583 :)\n. @mwillbanks Hi there, thanks for the contribution!\nAre you able to put this into an npm module? It looks like a good candidate for that, since it's something that is able to be done without any c++ pain. :)\n. ",
    "chrisdickinson": "I did some work towards this here.\n. The above was compiled from the commits since 372a2f56bed341a23c435c5a94fbb77dbbd6c600, which is the result of git merge-base node/master iojs/master in a repo where the origins are set up to point at the respective repos.\n. @Fishrock123 or even more simply, if your local and remote branches are the same: git push your-origin +yourbranch.\n. I tried combining the two with the following merge tactics thus far:\n1. Brute force merge the trees. This is a no-go, unless we get a crowd of the people involved on google hangouts.\n2. Merge incrementally. Pretend as if we've been merging all along \u2013 doing 4-5 commits at a time. This will be time consuming, and also seems like a bit of a no-go.\nRe: Merge commits being pointless \u2013 it comes down to whether we want to preserve the history of the v0.12/3 lines, or if we want to treat all of the changes that happened there as \"new\" commits. Rebasing means the commits will be duplicated (new hashes, new parents, possibly new content) into the master branch, though it does preserve linearity of history. I initially leaned towards a single merge commit to prevent the duplication \u2013 mostly because I wanted to preserve the release commits and \"working on commits\" in the node branch at the time.\nWhat's being discussed on IRC is cherry-picking specific commits into a branch that's rebased on top of master. I'm generally in favor of this approach, but we get into specifics of \"what commits do we merge\" vs. \"what commits do we skip\" and it starts to get tempting to editorialize (which we've attempted to avoid doing with this repo.)\n. While there are commits like that (I've omitted them from my list), I'm referring to commits like the openssl v2/3 switch, where the convergence plan states that \"the next major version of Node will have all of the features of both io.js and node.js.\"\n. I'm not sure we should redirect the other repos outside of linking to this repo from their readmes. I'm not too worried about star count.\n. -1 on this. Breaking end-user code at the end of a pre-determined 3-month cycle without any idea of the downstream impact is not acceptable.\n. \"Until we've determined breakage is below a given threshold, on a per-feature basis\" would be my preference.\n. Ideally these docs would live in doc/internal \u2013 I've been collecting documents in that direction, but I have yet to make the requisite internal doc sprint.\n. There are ways we can mitigate that \u2013 huge-big links on the README to appropriate docs, making sure there are decent \"landing page\" indexes for internal docs, hosting on the main site.\n. I suspect @indutny will want to take a look at this. I re-added the 1024-bit certs because folks were running into problems talking to AWS when they were removed. That may have changed since then.\n. Giving my regrets as well. Will be traveling to SF for nodeconf at that time. \n\nOn Jun 10, 2015, at 2:29 AM, Rod Vagg notifications@github.com wrote:\nTime\nUTC Wed 10-Jun-15 20:00:\nSan Francisco: Wed 10-Jun-15 13:00\nAmsterdam: Wed 10-Jun-15 22:00\nMoscow: Wed 10-Jun-15 23:00\nSydney: Thu 11-Jun-15 06:00\nOr in your local time:\nhttp://www.timeanddate.com/worldclock/fixedtime.html?msg=Node+Foundation+TSC+Meeting+2015-06-10&iso=20150610T20\nor http://www.wolframalpha.com/input/?i=8pm+UTC%2C+Jun+10%2C+2015+in+local+time\nLinks\nGitHub Issue: #53\nOriginal Minutes Google Doc: https://docs.google.com/document/d/1cn7SKaKYUMYLBiQhE6HAAknnwPabKsYjpOuyQkVikW8\nAttendees will be given a conference number to dial in to.\nAgenda\nExtracted from tsc-agenda labelled issues and pull requests prior to meeting.\nnodejs/node\nnodejs/io.js\nAdd working group state per Project Lifecycle. #1880\nChrome 43 released; time for V8 4.3! #1735\nTSC needs to elect a board representative. #1697\njoyent/node\nNominating new collaborators to this repository #25481\nNode should not automatically change rlimits #8704\nInvited\n@bnoordhuis (TSC)\n@chrisdickinson (TSC, streams)\n@cjihrig (TSC)\n@domenic (observer)\n@Fishrock123 (TSC)\n@indutny (TSC)\n@isaacs (TSC)\n@jasnell (TSC)\n@mhdawson (TSC)\n@misterdjules (TSC)\n@mikeal (website, proposed TSC)\n@mscdex (observer, proposed TSC)\n@orangemocha (TSC)\n@piscisaureus (TSC)\n@rvagg (TSC, build)\n@shigeki (observer, proposed TSC)\n@srl295 (TSC)\n@trevnorris (TSC)\nNotes\nThe agenda now comes from issues labelled with tsc-agenda in all 3 repositories listed above. Please label any additional issues that should be on the agenda before the meeting starts. I'm using a tool to fetch the list so it's not a big deal to collate.\nThis meeting will be held via Uberconference. I won't be attempting to live-stream to YouTube this time, it was too difficult last time because I had to have my microphone on. I am continuing to explore other options for broadcasing live; I don't want to completely lose that! So, there won't be a live QA on #io.js this time, very sorry, but please comment here if you have something to query.\nThe recording will go up on Soundcloud straight afterwards.\n\u2014\nReply to this email directly or view it on GitHub.\n. @jasnell In the past we've tried to keep the feature requests present in joyent/node open on joyent/node (i.e., we don't port them to new repos, like io.js; but we also don't close them if they haven't been finished yet.) If folks want to work on a feature request from one of the old repos they should open a new issue or PR on nodejs/node linking to the old issue(s).\n. Sending my apologies today.\n. This goes against what we've defined previously in the dev-policy, with regards to \"implicit\" and \"explicit\" public APIs, IIRC.\n. \n",
    "jasnell": "@chrisdickinson :+1: very nice and quite helpful.\n. @Fishrock123 ... do we need to keep this one open?\n. I'm open to whichever process is the easiest :-)\n. Closing this in favor of the work going on in nodejs/build. \n. Landed in https://github.com/jasnell/node.js-convergence/commit/522887fda6903e6466741f040d27b6262f711208\n. @Fishrock123 ... Ah! Good to know!\n. LGTM. Yeah, pulling over everything from the io.js every day or so would be good. We'll need to track this closely. I should start getting the first PRs pulling things over from v0.12 and joyent/node master by mid to late week. \n. That's not clear yet. Other than updating the readme, we have not yet\nstarted pulling over the commits from v0.12+ so the main thing right now is\nto keep the base in sync with io.js. I'll start opening PR's by this\nfriday. We do not yet have any CI set up on this to help gate the commits.\nWhat process do we want to follow here?\nOn Wed, May 6, 2015 at 11:32 AM, Jeremiah Senkpiel <notifications@github.com\n\nwrote:\nOops sorry. I'm really not sure we should be using the green button for\nthis though, are we going to be basing work off of this repo, or is it only\na proof-of-concept?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/pull/5#issuecomment-99565463\n.\n. Go for it!\n\nOn Fri, May 8, 2015 at 5:51 PM, Jeremiah Senkpiel notifications@github.com\nwrote:\n\n@jasnell https://github.com/jasnell mind if I force push to clean that\nup? We should treat this like an official repo imo. :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/pull/5#issuecomment-100401651\n.\n. Well, currently recovering from a bit of food poisoning so haven't had a\nchance to catch up. But at first blush we need to avoid anything that even\nhas the appearance of editorializing commits. If there are things that need\nto be deprecated, then those should pad through the full major release\ncycle as documented in the dev policy.\nOn May 9, 2015 3:03 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\n@jasnell https://github.com/jasnell how do you feel about this?\nWhat's being discussed on IRC is cherry-picking specific commits into a\nbranch that's rebased on top of master. I'm generally in favor of this\napproach, but we get into specifics of \"what commits do we merge\" vs. \"what\ncommits do we skip\" and it starts to get tempting to editorialize (which\nwe've attempted to avoid doing with this repo.)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/issues/6#issuecomment-100553483\n.\n. Ok, I'm tied up at a conference now. Will look in a bit!\nOn May 11, 2015 7:27 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\nHere are the test branches side-by-side: master-with-merges\nhttps://github.com/jasnell/node.js-convergence/tree/master-with-merges\n/ master-using-rebase\nhttps://github.com/jasnell/node.js-convergence/tree/master-using-rebase\n@jasnell https://github.com/jasnell if LGTY I'll start pushing the\nrebase one. PR's will be a little wonky to do maybe, but it'l end up the\nmost reasonable IMO. (from a git perspective)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/issues/6#issuecomment-101102984\n.\n. Ok, quick review it LGTM!\nOn May 11, 2015 7:27 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\nHere are the test branches side-by-side: master-with-merges\nhttps://github.com/jasnell/node.js-convergence/tree/master-with-merges\n/ master-using-rebase\nhttps://github.com/jasnell/node.js-convergence/tree/master-using-rebase\n@jasnell https://github.com/jasnell if LGTY I'll start pushing the\nrebase one. PR's will be a little wonky to do maybe, but it'l end up the\nmost reasonable IMO. (from a git perspective)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/issues/6#issuecomment-101102984\n.\n. Yes, if we split it out into groups we'll have to make sure we're\nreconciling with the historical view as we're moving along to make sure\nimportant bits do not get missed, it's also like that not everything will\nfit into nice neat bundles. Even so, splitting it up into functional\ngroupings is likely going to be the most efficient as it allows us to focus\non specific areas to ensure functionality is consistent and we're not\naccidentally missing larger picture impacts.\n\nOn Tue, May 12, 2015 at 9:22 PM, Sam Roberts notifications@github.com\nwrote:\n\nDon't commits build on each other? I'd think the cherry picking could get\nugly if its not in historical order. Also, commits that don't conflict can\nstill relate to each other, and doc commits sometimes come in after the\ncode they doc (in theory, code and docs are update simultaneously... but\nthat's just a theory). If its not in historical order, the intermediate\nstages might be subtly broken. Which might not matter, as long as the end\nresult is good.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jasnell/node.js-convergence/issues/6#issuecomment-101509351\n.\n. @Fishrock123 ... any reason to keep this one open?\n. LGTM at this point modulo the additional issue and the resolution on the windows issue.\n. Ok, looking at the CI, things look good except for the windows bits obviously. @Fishrock123, what's the status on those? I'm comfortable landing this with those red but it would good to get those working.\n. :+1: \n. :+1: \n. @mikeal ... Ok, one challenge on this: jasnell/node.js-convergence is a fork of iojs/io.js. Attempt to transfer back over fails because of nodejs/io.js. Suggestions? ;-)\n. Thinking through how that would work. Unforking would destroy the history, but, so far we haven't landed changes from v0.12 so I'm not sure that's an issue. I can keep the repo as is, and we can just start fresh with a new repo, add remotes to both nodejs/io.js and joyent/node and begin fresh.\n. Note to support@github sent. Once unforked, there will be two distinct steps. I cannot rename the repository at the same time as moving it apparently, so I'll rename immediately after moving.\n. FYI, I'm going to be away for just a bit over the next couple of hours. Returning around 4:00pm pacific. The remaining transition on this will happen then\n. Response from github support, repo will be de-forked. Will move this evening assuming de-fork is complete by then\n. Moved! Renamed! \n. Sigh.\n. I dunno, as long as everyone who is supposed to have access has access, then it works. Noisy and annoying, but it works.\n. @nodejs/tsc \n. We'll need to get an official decision on that.\nOn May 17, 2015 10:09 AM, \"Mikeal Rogers\" notifications@github.com wrote:\nActually, hrm... The corporate filing says Node Foundation the member\nagreement says \"Node.js\"\nI prefer \"Node Foundation\" but it sounds like we're using them pretty\ninterchangeably.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/pull/9#issuecomment-102823538.\n. I've asked for clarification. If we don't have a clear answer by Wednesday\nwe can discuss on the call.\nOn May 17, 2015 3:32 PM, \"Rod Vagg\" notifications@github.com wrote:\nshall we mark this as tc-agenda perhaps? or is there any kind of board in\nplace yet?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/pull/9#issuecomment-102865187.\n. The word from Mike Dolan is that the official name is, \"Node.js Foundation,\nInc.\"\nOn May 17, 2015 4:18 PM, \"James M Snell\" jasnell@gmail.com wrote:\nI've asked for clarification. If we don't have a clear answer by Wednesday\nwe can discuss on the call.\nOn May 17, 2015 3:32 PM, \"Rod Vagg\" notifications@github.com wrote:\n\nshall we mark this as tc-agenda perhaps? or is there any kind of board in\nplace yet?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/pull/9#issuecomment-102865187.\n. Closing. Can reopen if y'all think we need to discuss this further.\n. This will likely need to come up on the tsc-agenda. /cc @nodejs/tsc \n. Or move those to a separate repo entirely. We do have dev-policy available for use. The deprecation policy document really ought to live there.\n. Well, the key impact is that it would allow header injection through malformed header and method name inputs. It's a relatively low risk security and conformance nit really. Not a huge priority but worth fixing if we can. As you can see from the checkIsHttpToken method above, the \"fix\" is really just to scan the method and header names for invalid characters. If we find them, we can throw or strip. The performance hit should be fairly minimal depending on how many headers we have to scan and how long the names are. These are small strings. We could use a regex instead of a loop but the performance hit is pretty much the same in either case.\n. @Fishrock123 ... one possible approach on this is to put the additional checking behind a flag or option. Running with the flag set would essentially put node into a strict conformance checking mode that can be used to identify errors like this, but can be left switched off in production to avoid the additional perf hit.\n. Yes, I'll handle this one. It hasn't been fixed yet but needs to be.\nOn Aug 24, 2015 12:31 AM, \"Rod Vagg\" notifications@github.com wrote:\n\n@jasnell https://github.com/jasnell I'll leave you to close this one\nbut it seems like this should be moved to nodejs/node now right?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node-convergence-archive/issues/13#issuecomment-134072397\n.\n. Ok, new PR opened. Will continue to track the conversation there. Closing this issue here. This does not hold up v4.0.0 at all.\n. :+1: \n. @Fishrock123 ... do we need to keep this one open?\n. LGTM. /cc @nodejs/tsc \n. Would rather avoid renaming it again lest we end up with too many\nredirects. The general consensus was to have it named \"node\".\nOn May 21, 2015 8:58 AM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\nLGTM, but it probably shouldn't land here. Can we name this repo back to\nconvergence to avoid confusion?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/pull/15#issuecomment-104331063.\n. Closing this in favor of #20 \n. Other than https://github.com/joyent/node/commit/0c50195071a57bc40df82c8f57d341a435ff1eb6, these likely do not need to land. Since we have https://github.com/nodejs/io.js/issues/1770 already, let's close this issue and track using #1770. Can reopen if folks feel the other three need to land.\n. Closing this in favor of #20 \n. 69080f5474369fc7fc4be7ab74ad2e1619eb2fbc tls: enforce secureOptions on incoming clients - https://github.com/joyent/node/commit/69080f5474369fc7fc4be7ab74ad2e1619eb2fbc\n. 8d045a30e95602b443eb259a5021d33feb4df079 tests: add TLS tests matrix - https://github.com/joyent/node/commit/8d045a30e95602b443eb259a5021d33feb4df079\n\nThese will likely need to be refactored a bit as well.\n. d230fa9eb7364edac09f65a27e11718671d8e773 doc: fix typo secureOptions in tls - https://github.com/joyent/node/commit/d230fa9eb7364edac09f65a27e11718671d8e773\n. Related: https://github.com/nodejs/node/issues/19\n. Another related: 408bffe212c350a56218e3562e5315da65235a2f test: fix ssl/tls options matrix test - https://github.com/joyent/node/commit/408bffe212c350a56218e3562e5315da65235a2f\n. Ok, given that --enable-ssl2 and --enable-ssl3 were explicitly removed from io.js, this would need to be handled as a revert. @misterdjules @trevnorris @orangemocha @mhdawson @srl295 : if we think these should land in the converged repo, then we'd need to present an argument for reverting the io.js change.\nWe (IBM) are currently investigating our stuff to see what impact this would have on deployed code but, in general, I'm pretty certain that I'd be -1 on reverting which means these particular commits from joyent/node would not land in the converged stream. \n. TSC Discussion: there's currently no interest in re-enabling ssl2 and ssl3 support. IBM will continue to investigate impact and will open a new issue if the changes need to be reverted. These commits should not land.\n. Can you go ahead and create it? I haven't done so yet\nOn Jun 2, 2015 11:44 AM, \"Julien Gilli\" notifications@github.com wrote:\n\nThat would also be a good candidate to mention in the documentation of\npotentially breaking changes between v0.12 and the next LTS version from\nthe converged repository. @jasnell https://github.com/jasnell Do we\nalready have a place to track these changes or should I go ahead and create\nit?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/20#issuecomment-108050572.\n. At this point, I'm +1 on just dropping them in the converged release. It should be understood by pretty much everyone that the converged release is going to have breaking changes relative to v0.12. Since these bits were already dropped by io.js, and since developers really should not be using these mechanisms in the first place or should already be in the process of migrating away, it shouldn't come as a surprise. \n. @nodejs/tsc ... this may be one we need broader review on. \n. I'll be working on doing so\n. Ok, so in that case we need to come to a decision: which approach is less terrible and should we port this particular set of patches or not? \n. TSC discussion today: hold off landing these. timers need new impl. Leaving this open for now but tagging as do-not-land\n@misterdjules ... please weigh in here if you have specific concerns.\n. I don't think there's a risk of that in this case. Unless one of the other\njoyent/node maintainers objects, it's likely safe to stick with the current\nio.js impl on this until the rewrite is done.\nOn May 27, 2015 4:48 PM, \"Rod Vagg\" notifications@github.com wrote:\nwe may need to consider a backup plan for this, timers has the potential\nto be a deep rabbit hole and it'd be nice if a \"rewrite\" doesn't end up\ndeferring a release\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/23#issuecomment-106101322.\n. :+1: great to see this progressing!\n. @misterdjules @mhdawson @cjihrig @orangemocha ... thoughts on this one? Is there any reason not to simply take the current io.js root certs in the next major?\n. /cc @shigeki \n. :+1: thank you @shigeki ! If you would, cc me when that root cert update is available and I'll work on getting it landed over in v0.12 as well.\n. Yes, we've been working on this more to address those concerns. The plan is\nto initially land the currently implemented mechanism then iterate before\nthe release. Additional tsc discussion is great and I'd be happy to discuss\non one of our upcoming calls.\nOn May 22, 2015 5:38 PM, \"Rod Vagg\" notifications@github.com wrote:\nthis whole area would make a good TSC topic as there have been (some\nstrong) differences between the two projects on this and it'd be good to\nfind a workable compromise that increases comfort all round (if possible)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/26#issuecomment-104807570.\n. See: https://github.com/nodejs/node/issues/26 ... The Intl work also impacted the Build.\n. Another: c0766eb1a4dac9d9b555be271ef84ad401ba91b0 build: fix use of strict aliasing - https://github.com/joyent/node/commit/c0766eb1a4dac9d9b555be271ef84ad401ba91b0\n. @misterdjules @mhdawson ... do you know of anything that breaks without this?\n. Ok, then I think this one is largely decided then. It would require a revert of the io.js changes in order to land. @misterdjules @cjihrig @trevnorris @orangemocha @mhdawson : if any of you think this is going to be a problem, we'll need to make the case to revert before we can proceed. Given that, I'm going to close this issue. We can reopen if new information is presented.\n. Ah! missed that one. Perhaps, reopening until we can confirm\n. @misterdjules ... is there a timeline for getting those upstreamed?\n. Ok, closing then.\n. At this point then it doesn't appear like there's anything to do on this. Closing unless new information is presented.\n. @Fishrock123 ... if I understand correctly, the plan is to port this into io.js then merge in back here in a future batch, correct? If so, do we need to keep this issue open or can we close it in favor of the PR over in io.js?\n. Perhaps this as a compromise: incorporate the flaky tests for day to day\ncommits but require the test failures to be documented and to be fixed\nprior to an LTS. That gives a significant amount of leeway.\nOn May 25, 2015 3:09 PM, \"Johan Bergstr\u00f6m\" notifications@github.com wrote:\nWe just had a quick talk about this in the build meeting; I think the\nthing \"between us\" in terms of mentality is the merge-pr job -- since the\namount of flaky tests we're experience is probably around 10 we should see\nwhat can be done about them, but to avoid holding things up we should\nindeed support a flaky flag and make sure we have a high priority on\nresolving them once flagged as flaky.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/32#issuecomment-105325413.\n. Given that this is largely a build/CI issue, I'm inclined to defer this to the @nodejs/build WG for resolution.\n. @rvagg @misterdjules ... do we need to keep this issue open?\n. Excellent!\n. Ok, so what do we want to do with this one then? It looks to me like landing this in node was likely premature given the additional discussion on the io.js side. This would mean a change of behavior from v0.12 to the first converged release so we'll need to document it.\n. @Fishrock123 ... Ok, then I think this is added to the list of breaking changes from v0.12 to the converged release. /cc @misterdjules\n\nI'm not sure if I quite understand the change enough myself to document it, however. \n. Eventually all of the io.js commits will make their way here anyway. So it\ngenerally doesn't matter, especially for something like this.\nOn May 22, 2015 3:53 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\n\n@woollybogger https://github.com/woollybogger again, probably. If you'd\nbe willing to do it, that would be great! :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/35#issuecomment-104794101.\n. :+1:\nOn May 22, 2015 4:02 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\nWhile true, some of this is just good maintenance for the io.js line.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/35#issuecomment-104795358.\n. Closing this in favor of https://github.com/nodejs/io.js/issues/1778\n. Ok, so similar change has already landed in io.js. @mhdawson, can you take a look and confirm if the io.js commits address the original issue? Also, do you see any reason to still port this for backwards compatibility with joyent/node? \n. @mhdawson ... can you take a look to see if the io.js changes mentioned by @silverwind address the original issue. If they do, then we can likely close this.\n. just fyi, @mhdawson is out on vacation for this week. I agree with your\nassessment tho, so long as the current CI is passing, this shouldn't be a\npriority for 4.0\n\nOn Mon, Aug 24, 2015 at 12:21 AM, Rod Vagg notifications@github.com wrote:\n\n@mhdawson https://github.com/mhdawson can I leave this for you to\ndecide whether it needs to go in to nodejs/node prior to 4.0? I don't think\nit's that important cause it's only a test case but I'll leave it to you.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node-convergence-archive/issues/38#issuecomment-134070723\n.\n. The tl/dr version:\n\nThis work adds new command line switches and envars:\n- --cipher-list and NODE_CIPHER_LIST override the default cipher list with a complete user-provided alternative. e.g. node --cipher-list=ABC would set the default cipher list to ABC\n- --enable-legacy-cipher-list and NODE_LEGACY_CIPHER_LIST override the default cipher list by reverting it back to known previous version cipher lists. e.g. node --enable-legacy-cipher-list=v0.10.38 reverts it back to the default cipher list from Node v0.10.38.\n- There's a new tls.getLegacyCiphers method in tls.js to grab the default cipher list from a specific version. e.g. tls.getLegacyCiphers('v0.10.38') returns the v0.10.38 cipher list.\n. Will provide more detail on the history of this when I've got more time\nover the next couple of days. For now, back to date night!\nOn Jun 26, 2015 8:31 PM, \"Fedor Indutny\" notifications@github.com wrote:\n\nWhat is the reason behind introducing command line arg and env variable\nfor overriding this? I wonder if it might be accomplished in the user land\nwithout doing this? Are there any people who requested it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/39#issuecomment-115952598.\n. Ok, so I'll split this up a bit:\n\nThe main justification for introducing --cipher-list and NODE_CIPHER_LIST is to allow Node.js deployments to be updated to a new, more secure or alternate built in default cipher list without requiring a full Node.js update. The intent is to allow sysops to more quickly respond to cipher vulnerabilities without having to wait for the next release -- this is particularly important in the case that changes to the default cipher list break backwards compatibility.\nThe justification for the legacy cipher list is to make it possible to revert to a specific known previous default without requiring that developers keep track of the lists themselves. The intent is to keep this list of supported legacy lists as short as possible, but yes, it's possible to build up cruft.\nWhen we (IBM) first made these changes to our own Node.js build, we initially deployed to our bluemix environment using the updated cipher list that switches off RC4. Once it was deployed, we discovered that quite a few of the applications deployed on top ended up breaking because of their reliance on RC4. Instead of having to revert the deployment, the sysops were simply able to use the legacy cipher environment variable to temporarily revert the default cipher list without (a) having to know what that default cipher list was (they simply enabled the default for the previous version of node they deployed), (b) having to revert the Node update on their servers or (c) having to force application developers to work. After setting that environment variable, they went back and worked with the application developers whose applications broke to get them off of RC4 then were simply able to remove that environment variable to switch back to the new default cipher list. It ended up being a very simple and smooth approach. \nIt would be possible to use a userland module to maintain the old cipher lists but then each application deployed to a PaaS environment like bluemix would need to be modified to use the module when a temporary system-wide revert like the one described above becomes necessary. \n@mhdawson may have some additional thoughts on this as well...\n. Sorry, yeah LGTM\n. For nodejs/node, we should discuss the merge status. Several issues were opened that will possibly require TSC decision. I'll get those flagged tsc-agenda here in a bit.\nFor joyent/node, I don't believe we have the tsc-agenda label created yet. I'll make sure that gets added today. I do not believe there are any items there that need TSC discussion, however.\n. Ugh.. the readme commit got bundled into this by mistake... hold on, will redo it\n. /cc @Fishrock123 @rvagg \n. @rvagg ... removed the redundant environment variables.\n@Fishrock123 ... let me know if it looks good to you\n. @Fishrock123 ... done!\n. On the joyent/node side there are no significant issues that I'm aware of that need to be discussed. One general topic with considering is if we need some set of best practices for determining whether and when to backport commits from io.js into either v0.10 or v0.12. But that's something we can discuss in github.\nOn a personal note, I'm on vacation for two weeks starting this Friday so will not be attending the next two TSC meetings after today. \n. +1... Sign me up!\n. I've been contemplating a \"url2\" module... it's ugly, but it may be the least ugly of the approaches currently.\n. Not in core. As a separate module largely to work on the impl.\nOn Jun 9, 2015 8:18 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\n\nI really don't think that is a good direction to go in. :/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/49#issuecomment-110571481.\n. :+1: @malandrew ... this is very much appreciated. As @Fishrock123 mentions, we may need to hold off on landing this just until we're a bit further along on the convergence. (We're still in the process of cataloging everything that may need to land here). If you're willing to be patient and rebase this every now and then, then we'll land as soon as we're able!\n. +1. Wasn't particularly thrilled with it landing back in v0.12. Let's add it to the list of changes to document and leave it out.\n. I'll give my regrets now. I won't be making the call today due to a prior\ncommitment with my youngest son involving a park, a baseball and a couple\nof gloves. Will be back for the call on the 24th.\nOn Jun 10, 2015 2:29 AM, \"Rod Vagg\" notifications@github.com wrote:\nTime\nUTC Wed 10-Jun-15 20:00:\n- San Francisco: Wed 10-Jun-15 13:00\n- Amsterdam: Wed 10-Jun-15 22:00\n- Moscow: Wed 10-Jun-15 23:00\n- Sydney: Thu 11-Jun-15 06:00\nOr in your local time:\n-\n   http://www.timeanddate.com/worldclock/fixedtime.html?msg=Node+Foundation+TSC+Meeting+2015-06-10&iso=20150610T20\n- or\n  http://www.wolframalpha.com/input/?i=8pm+UTC%2C+Jun+10%2C+2015+in+local+time\nLinks\n- GitHub Issue: #53 https://github.com/nodejs/node/issues/53\n- Original Minutes Google Doc:\n  https://docs.google.com/document/d/1cn7SKaKYUMYLBiQhE6HAAknnwPabKsYjpOuyQkVikW8\nAttendees will be given a conference number to dial in to.\nAgenda\nExtracted from tsc-agenda labelled issues and pull requests prior to\nmeeting.\nnodejs/node nodejs/io.js\n- Add working group state per Project Lifecycle. #1880\n  https://github.com/nodejs/io.js/pull/1880\n- Chrome 43 released; time for V8 4.3! #1735\n  https://github.com/nodejs/io.js/issues/1735\n- TSC needs to elect a board representative. #1697\n  https://github.com/nodejs/io.js/issues/1697\njoyent/node\n- Nominating new collaborators to this repository #25481\n  https://github.com/joyent/node/issues/25481\n- Node should not automatically change rlimits #8704\n  https://github.com/joyent/node/issues/8704\nInvited\n- @bnoordhuis https://github.com/bnoordhuis (TSC)\n- @chrisdickinson https://github.com/chrisdickinson (TSC, streams)\n- @cjihrig https://github.com/cjihrig (TSC)\n- @domenic https://github.com/domenic (observer)\n- @Fishrock123 https://github.com/Fishrock123 (TSC)\n- @indutny https://github.com/indutny (TSC)\n- @isaacs https://github.com/isaacs (TSC)\n- @jasnell https://github.com/jasnell (TSC)\n- @mhdawson https://github.com/mhdawson (TSC)\n- @misterdjules https://github.com/misterdjules (TSC)\n- @mikeal https://github.com/mikeal (website, proposed TSC)\n- @mscdex https://github.com/mscdex (observer, proposed TSC)\n- @orangemocha https://github.com/orangemocha (TSC)\n- @piscisaureus https://github.com/piscisaureus (TSC)\n- @rvagg https://github.com/rvagg (TSC, build)\n- @shigeki https://github.com/shigeki (observer, proposed TSC)\n- @srl295 https://github.com/srl295 (TSC)\n- @trevnorris https://github.com/trevnorris (TSC)\nNotes\nThe agenda now comes from issues labelled with tsc-agenda in all 3\nrepositories listed above. Please label any additional issues that should\nbe on the agenda before the meeting starts. I'm using a tool\nhttps://github.com/rvagg/iojs-tools/tree/master/tsc-meeting-agenda to\nfetch the list so it's not a big deal to collate.\nThis meeting will be held via Uberconference. I won't be attempting to\nlive-stream to YouTube this time, it was too difficult last time because I\nhad to have my microphone on. I am continuing to explore other options for\nbroadcasing live; I don't want to completely lose that! So, there won't be\na live QA on #io.js this time, very sorry, but please comment here if you\nhave something to query.\nThe recording will go up on Soundcloud straight afterwards.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/53.\n. LGTM\nOn Jun 17, 2015 5:56 PM, \"Jeremiah Senkpiel\" notifications@github.com\nwrote:\n@jasnell https://github.com/jasnell time review one of these again I\nsuppose.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/nodejs/node/pull/57\nCommit Summary\n- readme: initial temporary readme update\n- Merge from iojs/master\n- Merge from io/js master\n- Merge from iojs/master\n- test: fix test-sync-io-option\n- test: fix broken FreeBSD test\n- deps: update libuv to version 1.6.0\n- dgram: partially revert 18d457b\n- test: remove TODO\n- util: introduce printDeprecationMessage function\n- smalloc: deprecate whole module\n- tls: emit errors on close whilst async action\n- tls: prevent use-after-free\n- tls_wrap: invoke queued callbacks in DestroySSL\n- fs: Add string encoding option for Stream method\n- debugger: improve ESRCH error message\n- fs: use kMaxLength from binding\n- deps: update libuv to version 1.6.1\n- gitignore: don't ignore the debug npm module\n- os: add homedir()\n- readline: allow tabs in input\n- doc: add note about available ECC curves\n- doc: remove comma splice\n- crypto: add getCurves() to get supported ECs\n- test: remove TODO comment\n- cluster: wait on servers closing before disconnect\n- doc: add references to crypto.getCurves()\n- doc: add rlidwka as collaborator\n- doc: add monsanto as collaborator\n- doc: add ofrobots as collaborator\n- deps: upgrade to npm 2.11.1\n- deps: make node-gyp work with io.js\n- win,node-gyp: enable delay-load hook by default\n- doc: add Olegas as collaborator\n- doc: add domenic as collaborator\n- fs: improve error message descriptions\n- fs: removing unnecessary nullCheckCallNT\n- fs: remove inStatWatchers and use Map for lookup\n- fs: minor refactoring\n- fs: make SyncWriteStream non-enumerable\n- crypto: support FIPS mode of OpenSSL\n- tls: fix references to undefined cb\n- test: fix undeclared variable access\n- lib: don't use global Buffer\n- tools: enable/add additional eslint rules\n- test: create temp dir in common.js\n- deps: upgrade openssl sources to 1.0.2b\n- deps: fix openssl assembly error on ia32 win32\n- deps: fix asm build error of openssl in x86_win32\n- openssl: fix keypress requirement in apps on win32\n- deps: add -no_rand_screen to openssl s_client\n- deps: replace all headers in openssl\n- deps: update asm files for openssl-1.0.2b\n- deps: upgrade openssl sources to 1.0.2c\n- deps: fix openssl assembly error on ia32 win32\n- deps: fix asm build error of openssl in x86_win32\n- openssl: fix keypress requirement in apps on win32\n- deps: add -no_rand_screen to openssl s_client\n- deps: replace all headers in openssl\n- deps: update UPGRADING.md doc to openssl-1.0.2c\n- test: fix cluster-worker-wait-server-close races\n- node: mark promises as handled as soon as possible\n- Revert \"readline: allow tabs in input\"\n- doc: add Trott as collaborator\n- test: add test for failed save in REPL\n- 2015-06-12 io.js v2.3.0 Release\n- 2015-06-13 io.js v2.3.0 Release\n- Working on v2.3.1\n- doc: remove irrelevant SEMVER-MINOR & MAJOR\n- doc: add ChALkeR as collaborator\n- test: remove test repetition\n- test: only refresh tmpDir for tests that need it\n- doc: copyedit GOVERNANCE.md\n- doc: copyedit COLLABORATOR_GUIDE.md\n- v8: cherry-pick uclibc build patch from upstream\n- build: simplify execution of built binary\n- build: don't run lint from test-ci\n- lib,test: fix whitespace issues\n- tools: enable whitespace related rules in eslint\n- doc: benchmark/README.md copyedit\n- deps: upgrade to npm 2.11.2\n- deps: make node-gyp work with io.js\n- win,node-gyp: enable delay-load hook by default\n- zlib: prevent uncaught exception in zlibBuffer\n- build: fix pkg-config output parsing in configure\n- doc: minor clarification in the modules API doc.\n- crypto: add cert check to CNNIC Whitelist\n- test: fix test-cluster-worker-disconnect\n- module: allow long paths for require on Windows\n- util: move deprecate() to internal module\n- buffer: fix cyclic dependency with util\n- util: dont repeat isBuffer\n- doc: reformat authors section\n- test: tmpdir creation failures should fail tests\n- vm: remove unnecessary HandleScopes\n- tools: make test-npm work without global npm\n- async-wrap: add provider id and object info cb\n- test: add Buffer slice UTF-8 test\n- doc: add TSC meeting notes 2015-06-10\n- doc: add TOC links to Collaborator Guide\n- net: Defer reading until listeners could be added\n- module: reduce syscalls during require search\n- tests: append instead of override environment\n- Merge from iojs/master\nFile Changes\n- M .eslintignore\n  https://github.com/nodejs/node/pull/57/files#diff-0 (2)\n- M .eslintrc https://github.com/nodejs/node/pull/57/files#diff-1\n  (70)\n- M .gitignore https://github.com/nodejs/node/pull/57/files#diff-2\n  (1)\n- M CHANGELOG.md\n  https://github.com/nodejs/node/pull/57/files#diff-3 (122)\n- M COLLABORATOR_GUIDE.md\n  https://github.com/nodejs/node/pull/57/files#diff-4 (36)\n- M GOVERNANCE.md\n  https://github.com/nodejs/node/pull/57/files#diff-5 (16)\n- M Makefile https://github.com/nodejs/node/pull/57/files#diff-6\n  (20)\n- M README.md https://github.com/nodejs/node/pull/57/files#diff-7\n  (309)\n- M benchmark/README.md\n  https://github.com/nodejs/node/pull/57/files#diff-8 (16)\n- M common.gypi https://github.com/nodejs/node/pull/57/files#diff-9\n  (5)\n- M configure https://github.com/nodejs/node/pull/57/files#diff-10\n  (67)\n- M deps/npm/.mailmap\n  https://github.com/nodejs/node/pull/57/files#diff-11 (10)\n- M deps/npm/AUTHORS\n  https://github.com/nodejs/node/pull/57/files#diff-12 (18)\n- M deps/npm/CHANGELOG.md\n  https://github.com/nodejs/node/pull/57/files#diff-13 (95)\n- M deps/npm/doc/cli/npm-prune.md\n  https://github.com/nodejs/node/pull/57/files#diff-14 (6)\n- M deps/npm/doc/files/npmrc.md\n  https://github.com/nodejs/node/pull/57/files#diff-15 (5)\n- M deps/npm/doc/files/package.json.md\n  https://github.com/nodejs/node/pull/57/files#diff-16 (2)\n- M deps/npm/html/doc/README.html\n  https://github.com/nodejs/node/pull/57/files#diff-17 (4)\n- M deps/npm/html/doc/api/npm-bin.html\n  https://github.com/nodejs/node/pull/57/files#diff-18 (2)\n- M deps/npm/html/doc/api/npm-bugs.html\n  https://github.com/nodejs/node/pull/57/files#diff-19 (2)\n- M deps/npm/html/doc/api/npm-cache.html\n  https://github.com/nodejs/node/pull/57/files#diff-20 (2)\n- M deps/npm/html/doc/api/npm-commands.html\n  https://github.com/nodejs/node/pull/57/files#diff-21 (2)\n- M deps/npm/html/doc/api/npm-config.html\n  https://github.com/nodejs/node/pull/57/files#diff-22 (2)\n- M deps/npm/html/doc/api/npm-deprecate.html\n  https://github.com/nodejs/node/pull/57/files#diff-23 (2)\n- M deps/npm/html/doc/api/npm-docs.html\n  https://github.com/nodejs/node/pull/57/files#diff-24 (2)\n- M deps/npm/html/doc/api/npm-edit.html\n  https://github.com/nodejs/node/pull/57/files#diff-25 (2)\n- M deps/npm/html/doc/api/npm-explore.html\n  https://github.com/nodejs/node/pull/57/files#diff-26 (2)\n- M deps/npm/html/doc/api/npm-help-search.html\n  https://github.com/nodejs/node/pull/57/files#diff-27 (2)\n- M deps/npm/html/doc/api/npm-init.html\n  https://github.com/nodejs/node/pull/57/files#diff-28 (2)\n- M deps/npm/html/doc/api/npm-install.html\n  https://github.com/nodejs/node/pull/57/files#diff-29 (2)\n- M deps/npm/html/doc/api/npm-link.html\n  https://github.com/nodejs/node/pull/57/files#diff-30 (2)\n- M deps/npm/html/doc/api/npm-load.html\n  https://github.com/nodejs/node/pull/57/files#diff-31 (2)\n- M deps/npm/html/doc/api/npm-ls.html\n  https://github.com/nodejs/node/pull/57/files#diff-32 (2)\n- M deps/npm/html/doc/api/npm-outdated.html\n  https://github.com/nodejs/node/pull/57/files#diff-33 (2)\n- M deps/npm/html/doc/api/npm-owner.html\n  https://github.com/nodejs/node/pull/57/files#diff-34 (2)\n- M deps/npm/html/doc/api/npm-pack.html\n  https://github.com/nodejs/node/pull/57/files#diff-35 (2)\n- M deps/npm/html/doc/api/npm-prefix.html\n  https://github.com/nodejs/node/pull/57/files#diff-36 (2)\n- M deps/npm/html/doc/api/npm-prune.html\n  https://github.com/nodejs/node/pull/57/files#diff-37 (2)\n- M deps/npm/html/doc/api/npm-publish.html\n  https://github.com/nodejs/node/pull/57/files#diff-38 (2)\n- M deps/npm/html/doc/api/npm-rebuild.html\n  https://github.com/nodejs/node/pull/57/files#diff-39 (2)\n- M deps/npm/html/doc/api/npm-repo.html\n  https://github.com/nodejs/node/pull/57/files#diff-40 (2)\n- M deps/npm/html/doc/api/npm-restart.html\n  https://github.com/nodejs/node/pull/57/files#diff-41 (2)\n- M deps/npm/html/doc/api/npm-root.html\n  https://github.com/nodejs/node/pull/57/files#diff-42 (2)\n- M deps/npm/html/doc/api/npm-run-script.html\n  https://github.com/nodejs/node/pull/57/files#diff-43 (2)\n- M deps/npm/html/doc/api/npm-search.html\n  https://github.com/nodejs/node/pull/57/files#diff-44 (2)\n- M deps/npm/html/doc/api/npm-shrinkwrap.html\n  https://github.com/nodejs/node/pull/57/files#diff-45 (2)\n- M deps/npm/html/doc/api/npm-start.html\n  https://github.com/nodejs/node/pull/57/files#diff-46 (2)\n- M deps/npm/html/doc/api/npm-stop.html\n  https://github.com/nodejs/node/pull/57/files#diff-47 (2)\n- D deps/npm/html/doc/api/npm-submodule.html\n  https://github.com/nodejs/node/pull/57/files#diff-48 (45)\n- M deps/npm/html/doc/api/npm-tag.html\n  https://github.com/nodejs/node/pull/57/files#diff-49 (2)\n- M deps/npm/html/doc/api/npm-test.html\n  https://github.com/nodejs/node/pull/57/files#diff-50 (2)\n- M deps/npm/html/doc/api/npm-uninstall.html\n  https://github.com/nodejs/node/pull/57/files#diff-51 (2)\n- M deps/npm/html/doc/api/npm-unpublish.html\n  https://github.com/nodejs/node/pull/57/files#diff-52 (2)\n- M deps/npm/html/doc/api/npm-update.html\n  https://github.com/nodejs/node/pull/57/files#diff-53 (2)\n- M deps/npm/html/doc/api/npm-version.html\n  https://github.com/nodejs/node/pull/57/files#diff-54 (2)\n- M deps/npm/html/doc/api/npm-view.html\n  https://github.com/nodejs/node/pull/57/files#diff-55 (2)\n- M deps/npm/html/doc/api/npm-whoami.html\n  https://github.com/nodejs/node/pull/57/files#diff-56 (2)\n- M deps/npm/html/doc/api/npm.html\n  https://github.com/nodejs/node/pull/57/files#diff-57 (4)\n- M deps/npm/html/doc/cli/npm-access.html\n  https://github.com/nodejs/node/pull/57/files#diff-58 (2)\n- M deps/npm/html/doc/cli/npm-adduser.html\n  https://github.com/nodejs/node/pull/57/files#diff-59 (2)\n- M deps/npm/html/doc/cli/npm-bin.html\n  https://github.com/nodejs/node/pull/57/files#diff-60 (2)\n- M deps/npm/html/doc/cli/npm-bugs.html\n  https://github.com/nodejs/node/pull/57/files#diff-61 (2)\n- M deps/npm/html/doc/cli/npm-build.html\n  https://github.com/nodejs/node/pull/57/files#diff-62 (2)\n- M deps/npm/html/doc/cli/npm-bundle.html\n  https://github.com/nodejs/node/pull/57/files#diff-63 (2)\n- M deps/npm/html/doc/cli/npm-cache.html\n  https://github.com/nodejs/node/pull/57/files#diff-64 (2)\n- M deps/npm/html/doc/cli/npm-completion.html\n  https://github.com/nodejs/node/pull/57/files#diff-65 (2)\n- M deps/npm/html/doc/cli/npm-config.html\n  https://github.com/nodejs/node/pull/57/files#diff-66 (2)\n- M deps/npm/html/doc/cli/npm-dedupe.html\n  https://github.com/nodejs/node/pull/57/files#diff-67 (2)\n- M deps/npm/html/doc/cli/npm-deprecate.html\n  https://github.com/nodejs/node/pull/57/files#diff-68 (2)\n- M deps/npm/html/doc/cli/npm-dist-tag.html\n  https://github.com/nodejs/node/pull/57/files#diff-69 (2)\n- M deps/npm/html/doc/cli/npm-docs.html\n  https://github.com/nodejs/node/pull/57/files#diff-70 (2)\n- M deps/npm/html/doc/cli/npm-edit.html\n  https://github.com/nodejs/node/pull/57/files#diff-71 (2)\n- M deps/npm/html/doc/cli/npm-explore.html\n  https://github.com/nodejs/node/pull/57/files#diff-72 (2)\n- M deps/npm/html/doc/cli/npm-help-search.html\n  https://github.com/nodejs/node/pull/57/files#diff-73 (2)\n- M deps/npm/html/doc/cli/npm-help.html\n  https://github.com/nodejs/node/pull/57/files#diff-74 (2)\n- M deps/npm/html/doc/cli/npm-init.html\n  https://github.com/nodejs/node/pull/57/files#diff-75 (2)\n- M deps/npm/html/doc/cli/npm-install.html\n  https://github.com/nodejs/node/pull/57/files#diff-76 (2)\n- M deps/npm/html/doc/cli/npm-link.html\n  https://github.com/nodejs/node/pull/57/files#diff-77 (2)\n- M deps/npm/html/doc/cli/npm-logout.html\n  https://github.com/nodejs/node/pull/57/files#diff-78 (2)\n- M deps/npm/html/doc/cli/npm-ls.html\n  https://github.com/nodejs/node/pull/57/files#diff-79 (4)\n- M deps/npm/html/doc/cli/npm-outdated.html\n  https://github.com/nodejs/node/pull/57/files#diff-80 (2)\n- M deps/npm/html/doc/cli/npm-owner.html\n  https://github.com/nodejs/node/pull/57/files#diff-81 (2)\n- M deps/npm/html/doc/cli/npm-pack.html\n  https://github.com/nodejs/node/pull/57/files#diff-82 (2)\n- M deps/npm/html/doc/cli/npm-prefix.html\n  https://github.com/nodejs/node/pull/57/files#diff-83 (2)\n- M deps/npm/html/doc/cli/npm-prune.html\n  https://github.com/nodejs/node/pull/57/files#diff-84 (8)\n- M deps/npm/html/doc/cli/npm-publish.html\n  https://github.com/nodejs/node/pull/57/files#diff-85 (2)\n- M deps/npm/html/doc/cli/npm-rebuild.html\n  https://github.com/nodejs/node/pull/57/files#diff-86 (2)\n- M deps/npm/html/doc/cli/npm-repo.html\n  https://github.com/nodejs/node/pull/57/files#diff-87 (2)\n- M deps/npm/html/doc/cli/npm-restart.html\n  https://github.com/nodejs/node/pull/57/files#diff-88 (2)\n- M deps/npm/html/doc/cli/npm-rm.html\n  https://github.com/nodejs/node/pull/57/files#diff-89 (2)\n- M deps/npm/html/doc/cli/npm-root.html\n  https://github.com/nodejs/node/pull/57/files#diff-90 (2)\n- M deps/npm/html/doc/cli/npm-run-script.html\n  https://github.com/nodejs/node/pull/57/files#diff-91 (2)\n- M deps/npm/html/doc/cli/npm-search.html\n  https://github.com/nodejs/node/pull/57/files#diff-92 (2)\n- M deps/npm/html/doc/cli/npm-shrinkwrap.html\n  https://github.com/nodejs/node/pull/57/files#diff-93 (2)\n- M deps/npm/html/doc/cli/npm-star.html\n  https://github.com/nodejs/node/pull/57/files#diff-94 (2)\n- M deps/npm/html/doc/cli/npm-stars.html\n  https://github.com/nodejs/node/pull/57/files#diff-95 (2)\n- M deps/npm/html/doc/cli/npm-start.html\n  https://github.com/nodejs/node/pull/57/files#diff-96 (2)\n- M deps/npm/html/doc/cli/npm-stop.html\n  https://github.com/nodejs/node/pull/57/files#diff-97 (2)\n- D deps/npm/html/doc/cli/npm-submodule.html\n  https://github.com/nodejs/node/pull/57/files#diff-98 (45)\n- M deps/npm/html/doc/cli/npm-tag.html\n  https://github.com/nodejs/node/pull/57/files#diff-99 (2)\n- M deps/npm/html/doc/cli/npm-test.html\n  https://github.com/nodejs/node/pull/57/files#diff-100 (2)\n- M deps/npm/html/doc/cli/npm-uninstall.html\n  https://github.com/nodejs/node/pull/57/files#diff-101 (2)\n- M deps/npm/html/doc/cli/npm-unpublish.html\n  https://github.com/nodejs/node/pull/57/files#diff-102 (2)\n- M deps/npm/html/doc/cli/npm-update.html\n  https://github.com/nodejs/node/pull/57/files#diff-103 (2)\n- M deps/npm/html/doc/cli/npm-version.html\n  https://github.com/nodejs/node/pull/57/files#diff-104 (2)\n- M deps/npm/html/doc/cli/npm-view.html\n  https://github.com/nodejs/node/pull/57/files#diff-105 (2)\n- M deps/npm/html/doc/cli/npm-whoami.html\n  https://github.com/nodejs/node/pull/57/files#diff-106 (2)\n- M deps/npm/html/doc/cli/npm.html\n  https://github.com/nodejs/node/pull/57/files#diff-107 (10)\n- M deps/npm/html/doc/files/npm-folders.html\n  https://github.com/nodejs/node/pull/57/files#diff-108 (2)\n- M deps/npm/html/doc/files/npm-global.html\n  https://github.com/nodejs/node/pull/57/files#diff-109 (2)\n- M deps/npm/html/doc/files/npm-json.html\n  https://github.com/nodejs/node/pull/57/files#diff-110 (4)\n- M deps/npm/html/doc/files/npmrc.html\n  https://github.com/nodejs/node/pull/57/files#diff-111 (8)\n- M deps/npm/html/doc/files/package.json.html\n  https://github.com/nodejs/node/pull/57/files#diff-112 (4)\n- M deps/npm/html/doc/index.html\n  https://github.com/nodejs/node/pull/57/files#diff-113 (2)\n- M deps/npm/html/doc/misc/npm-coding-style.html\n  https://github.com/nodejs/node/pull/57/files#diff-114 (2)\n- M deps/npm/html/doc/misc/npm-config.html\n  https://github.com/nodejs/node/pull/57/files#diff-115 (2)\n- M deps/npm/html/doc/misc/npm-developers.html\n  https://github.com/nodejs/node/pull/57/files#diff-116 (2)\n- M deps/npm/html/doc/misc/npm-disputes.html\n  https://github.com/nodejs/node/pull/57/files#diff-117 (8)\n- M deps/npm/html/doc/misc/npm-faq.html\n  https://github.com/nodejs/node/pull/57/files#diff-118 (4)\n- M deps/npm/html/doc/misc/npm-index.html\n  https://github.com/nodejs/node/pull/57/files#diff-119 (2)\n- M deps/npm/html/doc/misc/npm-registry.html\n  https://github.com/nodejs/node/pull/57/files#diff-120 (2)\n- M deps/npm/html/doc/misc/npm-scope.html\n  https://github.com/nodejs/node/pull/57/files#diff-121 (2)\n- M deps/npm/html/doc/misc/npm-scripts.html\n  https://github.com/nodejs/node/pull/57/files#diff-122 (2)\n- M deps/npm/html/doc/misc/removing-npm.html\n  https://github.com/nodejs/node/pull/57/files#diff-123 (2)\n- M deps/npm/html/doc/misc/semver.html\n  https://github.com/nodejs/node/pull/57/files#diff-124 (2)\n- M deps/npm/html/partial/doc/README.html\n  https://github.com/nodejs/node/pull/57/files#diff-125 (2)\n- D deps/npm/html/partial/doc/api/npm-submodule.html\n  https://github.com/nodejs/node/pull/57/files#diff-126 (21)\n- M deps/npm/html/partial/doc/api/npm.html\n  https://github.com/nodejs/node/pull/57/files#diff-127 (2)\n- M deps/npm/html/partial/doc/cli/npm-ls.html\n  https://github.com/nodejs/node/pull/57/files#diff-128 (2)\n- M deps/npm/html/partial/doc/cli/npm-prune.html\n  https://github.com/nodejs/node/pull/57/files#diff-129 (6)\n- D deps/npm/html/partial/doc/cli/npm-submodule.html\n  https://github.com/nodejs/node/pull/57/files#diff-130 (21)\n- M deps/npm/html/partial/doc/cli/npm.html\n  https://github.com/nodejs/node/pull/57/files#diff-131 (8)\n- M deps/npm/html/partial/doc/files/npm-json.html\n  https://github.com/nodejs/node/pull/57/files#diff-132 (2)\n- M deps/npm/html/partial/doc/files/npmrc.html\n  https://github.com/nodejs/node/pull/57/files#diff-133 (6)\n- M deps/npm/html/partial/doc/files/package.json.html\n  https://github.com/nodejs/node/pull/57/files#diff-134 (2)\n- M deps/npm/html/partial/doc/misc/npm-disputes.html\n  https://github.com/nodejs/node/pull/57/files#diff-135 (6)\n- M deps/npm/html/partial/doc/misc/npm-faq.html\n  https://github.com/nodejs/node/pull/57/files#diff-136 (2)\n- M deps/npm/lib/cache/add-remote-git.js\n  https://github.com/nodejs/node/pull/57/files#diff-137 (1)\n- M deps/npm/lib/outdated.js\n  https://github.com/nodejs/node/pull/57/files#diff-138 (6)\n- M deps/npm/lib/version.js\n  https://github.com/nodejs/node/pull/57/files#diff-139 (14)\n- M deps/npm/man/man1/npm-README.1\n  https://github.com/nodejs/node/pull/57/files#diff-140 (2)\n- M deps/npm/man/man1/npm-access.1\n  https://github.com/nodejs/node/pull/57/files#diff-141 (2)\n- M deps/npm/man/man1/npm-adduser.1\n  https://github.com/nodejs/node/pull/57/files#diff-142 (2)\n- M deps/npm/man/man1/npm-bin.1\n  https://github.com/nodejs/node/pull/57/files#diff-143 (2)\n- M deps/npm/man/man1/npm-bugs.1\n  https://github.com/nodejs/node/pull/57/files#diff-144 (2)\n- M deps/npm/man/man1/npm-build.1\n  https://github.com/nodejs/node/pull/57/files#diff-145 (2)\n- M deps/npm/man/man1/npm-bundle.1\n  https://github.com/nodejs/node/pull/57/files#diff-146 (2)\n- M deps/npm/man/man1/npm-cache.1\n  https://github.com/nodejs/node/pull/57/files#diff-147 (2)\n- M deps/npm/man/man1/npm-completion.1\n  https://github.com/nodejs/node/pull/57/files#diff-148 (2)\n- M deps/npm/man/man1/npm-config.1\n  https://github.com/nodejs/node/pull/57/files#diff-149 (2)\n- M deps/npm/man/man1/npm-dedupe.1\n  https://github.com/nodejs/node/pull/57/files#diff-150 (2)\n- M deps/npm/man/man1/npm-deprecate.1\n  https://github.com/nodejs/node/pull/57/files#diff-151 (2)\n- M deps/npm/man/man1/npm-dist-tag.1\n  https://github.com/nodejs/node/pull/57/files#diff-152 (2)\n- M deps/npm/man/man1/npm-docs.1\n  https://github.com/nodejs/node/pull/57/files#diff-153 (2)\n- M deps/npm/man/man1/npm-edit.1\n  https://github.com/nodejs/node/pull/57/files#diff-154 (2)\n- M deps/npm/man/man1/npm-explore.1\n  https://github.com/nodejs/node/pull/57/files#diff-155 (2)\n- M deps/npm/man/man1/npm-help-search.1\n  https://github.com/nodejs/node/pull/57/files#diff-156 (2)\n- M deps/npm/man/man1/npm-help.1\n  https://github.com/nodejs/node/pull/57/files#diff-157 (2)\n- M deps/npm/man/man1/npm-init.1\n  https://github.com/nodejs/node/pull/57/files#diff-158 (2)\n- M deps/npm/man/man1/npm-install.1\n  https://github.com/nodejs/node/pull/57/files#diff-159 (2)\n- M deps/npm/man/man1/npm-link.1\n  https://github.com/nodejs/node/pull/57/files#diff-160 (2)\n- M deps/npm/man/man1/npm-logout.1\n  https://github.com/nodejs/node/pull/57/files#diff-161 (2)\n- M deps/npm/man/man1/npm-ls.1\n  https://github.com/nodejs/node/pull/57/files#diff-162 (4)\n- M deps/npm/man/man1/npm-outdated.1\n  https://github.com/nodejs/node/pull/57/files#diff-163 (2)\n- M deps/npm/man/man1/npm-owner.1\n  https://github.com/nodejs/node/pull/57/files#diff-164 (2)\n- M deps/npm/man/man1/npm-pack.1\n  https://github.com/nodejs/node/pull/57/files#diff-165 (2)\n- M deps/npm/man/man1/npm-prefix.1\n  https://github.com/nodejs/node/pull/57/files#diff-166 (2)\n- M deps/npm/man/man1/npm-prune.1\n  https://github.com/nodejs/node/pull/57/files#diff-167 (8)\n- M deps/npm/man/man1/npm-publish.1\n  https://github.com/nodejs/node/pull/57/files#diff-168 (2)\n- M deps/npm/man/man1/npm-rebuild.1\n  https://github.com/nodejs/node/pull/57/files#diff-169 (2)\n- M deps/npm/man/man1/npm-repo.1\n  https://github.com/nodejs/node/pull/57/files#diff-170 (2)\n- M deps/npm/man/man1/npm-restart.1\n  https://github.com/nodejs/node/pull/57/files#diff-171 (2)\n- M deps/npm/man/man1/npm-rm.1\n  https://github.com/nodejs/node/pull/57/files#diff-172 (2)\n- M deps/npm/man/man1/npm-root.1\n  https://github.com/nodejs/node/pull/57/files#diff-173 (2)\n- M deps/npm/man/man1/npm-run-script.1\n  https://github.com/nodejs/node/pull/57/files#diff-174 (2)\n- M deps/npm/man/man1/npm-search.1\n  https://github.com/nodejs/node/pull/57/files#diff-175 (2)\n- M deps/npm/man/man1/npm-shrinkwrap.1\n  https://github.com/nodejs/node/pull/57/files#diff-176 (2)\n- M deps/npm/man/man1/npm-star.1\n  https://github.com/nodejs/node/pull/57/files#diff-177 (2)\n- M deps/npm/man/man1/npm-stars.1\n  https://github.com/nodejs/node/pull/57/files#diff-178 (2)\n- M deps/npm/man/man1/npm-start.1\n  https://github.com/nodejs/node/pull/57/files#diff-179 (2)\n- M deps/npm/man/man1/npm-stop.1\n  https://github.com/nodejs/node/pull/57/files#diff-180 (2)\n- D deps/npm/man/man1/npm-submodule.1\n  https://github.com/nodejs/node/pull/57/files#diff-181 (41)\n- M deps/npm/man/man1/npm-tag.1\n  https://github.com/nodejs/node/pull/57/files#diff-182 (2)\n- M deps/npm/man/man1/npm-test.1\n  https://github.com/nodejs/node/pull/57/files#diff-183 (2)\n- M deps/npm/man/man1/npm-uninstall.1\n  https://github.com/nodejs/node/pull/57/files#diff-184 (2)\n- M deps/npm/man/man1/npm-unpublish.1\n  https://github.com/nodejs/node/pull/57/files#diff-185 (2)\n- M deps/npm/man/man1/npm-update.1\n  https://github.com/nodejs/node/pull/57/files#diff-186 (2)\n- M deps/npm/man/man1/npm-version.1\n  https://github.com/nodejs/node/pull/57/files#diff-187 (2)\n- M deps/npm/man/man1/npm-view.1\n  https://github.com/nodejs/node/pull/57/files#diff-188 (2)\n- M deps/npm/man/man1/npm-whoami.1\n  https://github.com/nodejs/node/pull/57/files#diff-189 (2)\n- M deps/npm/man/man1/npm.1\n  https://github.com/nodejs/node/pull/57/files#diff-190 (4)\n- M deps/npm/man/man3/npm-bin.3\n  https://github.com/nodejs/node/pull/57/files#diff-191 (2)\n- M deps/npm/man/man3/npm-bugs.3\n  https://github.com/nodejs/node/pull/57/files#diff-192 (2)\n- M deps/npm/man/man3/npm-cache.3\n  https://github.com/nodejs/node/pull/57/files#diff-193 (2)\n- M deps/npm/man/man3/npm-commands.3\n  https://github.com/nodejs/node/pull/57/files#diff-194 (2)\n- M deps/npm/man/man3/npm-config.3\n  https://github.com/nodejs/node/pull/57/files#diff-195 (2)\n- M deps/npm/man/man3/npm-deprecate.3\n  https://github.com/nodejs/node/pull/57/files#diff-196 (2)\n- M deps/npm/man/man3/npm-docs.3\n  https://github.com/nodejs/node/pull/57/files#diff-197 (2)\n- M deps/npm/man/man3/npm-edit.3\n  https://github.com/nodejs/node/pull/57/files#diff-198 (2)\n- M deps/npm/man/man3/npm-explore.3\n  https://github.com/nodejs/node/pull/57/files#diff-199 (2)\n- M deps/npm/man/man3/npm-help-search.3\n  https://github.com/nodejs/node/pull/57/files#diff-200 (2)\n- M deps/npm/man/man3/npm-init.3\n  https://github.com/nodejs/node/pull/57/files#diff-201 (2)\n- M deps/npm/man/man3/npm-install.3\n  https://github.com/nodejs/node/pull/57/files#diff-202 (2)\n- M deps/npm/man/man3/npm-link.3\n  https://github.com/nodejs/node/pull/57/files#diff-203 (2)\n- M deps/npm/man/man3/npm-load.3\n  https://github.com/nodejs/node/pull/57/files#diff-204 (2)\n- M deps/npm/man/man3/npm-ls.3\n  https://github.com/nodejs/node/pull/57/files#diff-205 (2)\n- M deps/npm/man/man3/npm-outdated.3\n  https://github.com/nodejs/node/pull/57/files#diff-206 (2)\n- M deps/npm/man/man3/npm-owner.3\n  https://github.com/nodejs/node/pull/57/files#diff-207 (2)\n- M deps/npm/man/man3/npm-pack.3\n  https://github.com/nodejs/node/pull/57/files#diff-208 (2)\n- M deps/npm/man/man3/npm-prefix.3\n  https://github.com/nodejs/node/pull/57/files#diff-209 (2)\n- M deps/npm/man/man3/npm-prune.3\n  https://github.com/nodejs/node/pull/57/files#diff-210 (2)\n- M deps/npm/man/man3/npm-publish.3\n  https://github.com/nodejs/node/pull/57/files#diff-211 (2)\n- M deps/npm/man/man3/npm-rebuild.3\n  https://github.com/nodejs/node/pull/57/files#diff-212 (2)\n- M deps/npm/man/man3/npm-repo.3\n  https://github.com/nodejs/node/pull/57/files#diff-213 (2)\n- M deps/npm/man/man3/npm-restart.3\n  https://github.com/nodejs/node/pull/57/files#diff-214 (2)\n- M deps/npm/man/man3/npm-root.3\n  https://github.com/nodejs/node/pull/57/files#diff-215 (2)\n- M deps/npm/man/man3/npm-run-script.3\n  https://github.com/nodejs/node/pull/57/files#diff-216 (2)\n- M deps/npm/man/man3/npm-search.3\n  https://github.com/nodejs/node/pull/57/files#diff-217 (2)\n- M deps/npm/man/man3/npm-shrinkwrap.3\n  https://github.com/nodejs/node/pull/57/files#diff-218 (2)\n- M deps/npm/man/man3/npm-start.3\n  https://github.com/nodejs/node/pull/57/files#diff-219 (2)\n- M deps/npm/man/man3/npm-stop.3\n  https://github.com/nodejs/node/pull/57/files#diff-220 (2)\n- D deps/npm/man/man3/npm-submodule.3\n  https://github.com/nodejs/node/pull/57/files#diff-221 (41)\n- M deps/npm/man/man3/npm-tag.3\n  https://github.com/nodejs/node/pull/57/files#diff-222 (2)\n- M deps/npm/man/man3/npm-test.3\n  https://github.com/nodejs/node/pull/57/files#diff-223 (2)\n- M deps/npm/man/man3/npm-uninstall.3\n  https://github.com/nodejs/node/pull/57/files#diff-224 (2)\n- M deps/npm/man/man3/npm-unpublish.3\n  https://github.com/nodejs/node/pull/57/files#diff-225 (2)\n- M deps/npm/man/man3/npm-update.3\n  https://github.com/nodejs/node/pull/57/files#diff-226 (4)\n- M deps/npm/man/man3/npm-version.3\n  https://github.com/nodejs/node/pull/57/files#diff-227 (2)\n- M deps/npm/man/man3/npm-view.3\n  https://github.com/nodejs/node/pull/57/files#diff-228 (2)\n- M deps/npm/man/man3/npm-whoami.3\n  https://github.com/nodejs/node/pull/57/files#diff-229 (2)\n- M deps/npm/man/man3/npm.3\n  https://github.com/nodejs/node/pull/57/files#diff-230 (4)\n- M deps/npm/man/man5/npm-folders.5\n  https://github.com/nodejs/node/pull/57/files#diff-231 (2)\n- M deps/npm/man/man5/npm-global.5\n  https://github.com/nodejs/node/pull/57/files#diff-232 (2)\n- M deps/npm/man/man5/npm-json.5\n  https://github.com/nodejs/node/pull/57/files#diff-233 (4)\n- M deps/npm/man/man5/npmrc.5\n  https://github.com/nodejs/node/pull/57/files#diff-234 (7)\n- M deps/npm/man/man5/package.json.5\n  https://github.com/nodejs/node/pull/57/files#diff-235 (4)\n- M deps/npm/man/man7/npm-coding-style.7\n  https://github.com/nodejs/node/pull/57/files#diff-236 (2)\n- M deps/npm/man/man7/npm-config.7\n  https://github.com/nodejs/node/pull/57/files#diff-237 (2)\n- M deps/npm/man/man7/npm-developers.7\n  https://github.com/nodejs/node/pull/57/files#diff-238 (2)\n- M deps/npm/man/man7/npm-disputes.7\n  https://github.com/nodejs/node/pull/57/files#diff-239 (2)\n- M deps/npm/man/man7/npm-faq.7\n  https://github.com/nodejs/node/pull/57/files#diff-240 (2)\n- M deps/npm/man/man7/npm-index.7\n  https://github.com/nodejs/node/pull/57/files#diff-241 (2)\n- M deps/npm/man/man7/npm-registry.7\n  https://github.com/nodejs/node/pull/57/files#diff-242 (2)\n- M deps/npm/man/man7/npm-scope.7\n  https://github.com/nodejs/node/pull/57/files#diff-243 (2)\n- M deps/npm/man/man7/npm-scripts.7\n  https://github.com/nodejs/node/pull/57/files#diff-244 (2)\n- M deps/npm/man/man7/removing-npm.7\n  https://github.com/nodejs/node/pull/57/files#diff-245 (2)\n- M deps/npm/man/man7/semver.7\n  https://github.com/nodejs/node/pull/57/files#diff-246 (2)\n- A deps/npm/node_modules/abbrev/.npmignore\n  https://github.com/nodejs/node/pull/57/files#diff-247 (4)\n- A deps/npm/node_modules/abbrev/.travis.yml\n  https://github.com/nodejs/node/pull/57/files#diff-248 (5)\n- M deps/npm/node_modules/abbrev/package.json\n  https://github.com/nodejs/node/pull/57/files#diff-249 (23)\n- M deps/npm/node_modules/abbrev/test.js\n  https://github.com/nodejs/node/pull/57/files#diff-250 (4)\n- M\n  deps/npm/node_modules/config-chain/node_modules/proto-list/LICENSE\n  https://github.com/nodejs/node/pull/57/files#diff-251 (32)\n- M\n  deps/npm/node_modules/config-chain/node_modules/proto-list/package.json\n  https://github.com/nodejs/node/pull/57/files#diff-252 (35)\n- M deps/npm/node_modules/config-chain/package.json\n  https://github.com/nodejs/node/pull/57/files#diff-253 (30)\n- M deps/npm/node_modules/glob/package.json\n  https://github.com/nodejs/node/pull/57/files#diff-254 (23)\n- M deps/npm/node_modules/graceful-fs/graceful-fs.js\n  https://github.com/nodejs/node/pull/57/files#diff-255 (2)\n- M deps/npm/node_modules/graceful-fs/package.json\n  https://github.com/nodejs/node/pull/57/files#diff-256 (21)\n- M deps/npm/node_modules/graceful-fs/test/max-open.js\n  https://github.com/nodejs/node/pull/57/files#diff-257 (4)\n- M deps/npm/node_modules/graceful-fs/test/write-then-read.js\n  https://github.com/nodejs/node/pull/57/files#diff-258 (2)\n- A\n  deps/npm/node_modules/node-gyp/0001-gyp-always-install-into-PRODUCT_DIR.patch\n  https://github.com/nodejs/node/pull/57/files#diff-259 (34)\n- A\n  deps/npm/node_modules/node-gyp/0002-gyp-apply-https-codereview.chromium.org-11361103.patch\n  https://github.com/nodejs/node/pull/57/files#diff-260 (35)\n- A\n  deps/npm/node_modules/node-gyp/0003-gyp-don-t-use-links-at-all-just-copy-the-files-inste.patch\n  https://github.com/nodejs/node/pull/57/files#diff-261 (38)\n- A deps/npm/node_modules/node-gyp/History.md\n  https://github.com/nodejs/node/pull/57/files#diff-262 (27)\n- M deps/npm/node_modules/node-gyp/README.md\n  https://github.com/nodejs/node/pull/57/files#diff-263 (19)\n- M deps/npm/node_modules/node-gyp/addon.gypi\n  https://github.com/nodejs/node/pull/57/files#diff-264 (31)\n- M deps/npm/node_modules/node-gyp/gyp/PRESUBMIT.py\n  https://github.com/nodejs/node/pull/57/files#diff-265 (27)\n- A deps/npm/node_modules/node-gyp/gyp/buildbot/aosp_manifest.xml\n  https://github.com/nodejs/node/pull/57/files#diff-266 (466)\n- M deps/npm/node_modules/node-gyp/gyp/buildbot/buildbot_run.py\n  https://github.com/nodejs/node/pull/57/files#diff-267 (123)\n- A deps/npm/node_modules/node-gyp/gyp/buildbot/commit_queue/OWNERS\n  https://github.com/nodejs/node/pull/57/files#diff-268 (6)\n- A deps/npm/node_modules/node-gyp/gyp/buildbot/commit_queue/README\n  https://github.com/nodejs/node/pull/57/files#diff-269 (3)\n- A\n  deps/npm/node_modules/node-gyp/gyp/buildbot/commit_queue/cq_config.json\n  https://github.com/nodejs/node/pull/57/files#diff-270 (16)\n- M deps/npm/node_modules/node-gyp/gyp/codereview.settings\n  https://github.com/nodejs/node/pull/57/files#diff-271 (10)\n- M deps/npm/node_modules/node-gyp/gyp/gyp\n  https://github.com/nodejs/node/pull/57/files#diff-272 (2)\n- D deps/npm/node_modules/node-gyp/gyp/gyp_dummy.c\n  https://github.com/nodejs/node/pull/57/files#diff-273 (7)\n- M deps/npm/node_modules/node-gyp/gyp/gyptest.py\n  https://github.com/nodejs/node/pull/57/files#diff-274 (6)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/MSVSNew.py\n  https://github.com/nodejs/node/pull/57/files#diff-275 (2)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/MSVSSettings.py\n  https://github.com/nodejs/node/pull/57/files#diff-276 (90)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/MSVSSettings_test.py\n  https://github.com/nodejs/node/pull/57/files#diff-277 (3)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/MSVSUtil.py\n  https://github.com/nodejs/node/pull/57/files#diff-278 (33)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/MSVSVersion.py\n  https://github.com/nodejs/node/pull/57/files#diff-279 (73)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/init.py\n  https://github.com/nodejs/node/pull/57/files#diff-280 (15)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/common.py\n  https://github.com/nodejs/node/pull/57/files#diff-281 (82)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py\n  https://github.com/nodejs/node/pull/57/files#diff-282 (5)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/flock_tool.py\n  https://github.com/nodejs/node/pull/57/files#diff-283 (7)\n- A\n  deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/analyzer.py\n  https://github.com/nodejs/node/pull/57/files#diff-284 (569)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/android.py\n  https://github.com/nodejs/node/pull/57/files#diff-285 (247)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/cmake.py\n  https://github.com/nodejs/node/pull/57/files#diff-286 (6)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/eclipse.py\n  https://github.com/nodejs/node/pull/57/files#diff-287 (179)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/gypd.py\n  https://github.com/nodejs/node/pull/57/files#diff-288 (7)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/make.py\n  https://github.com/nodejs/node/pull/57/files#diff-289 (59)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/msvs.py\n  https://github.com/nodejs/node/pull/57/files#diff-290 (309)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/ninja.py\n  https://github.com/nodejs/node/pull/57/files#diff-291 (471)\n- M\n  deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/ninja_test.py\n  https://github.com/nodejs/node/pull/57/files#diff-292 (21)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py\n  https://github.com/nodejs/node/pull/57/files#diff-293 (66)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/input.py\n  https://github.com/nodejs/node/pull/57/files#diff-294 (714)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/input_test.py\n  https://github.com/nodejs/node/pull/57/files#diff-295 (14)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py\n  https://github.com/nodejs/node/pull/57/files#diff-296 (114)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/msvs_emulation.py\n  https://github.com/nodejs/node/pull/57/files#diff-297 (198)\n- A deps/npm/node_modules/node-gyp/gyp/pylib/gyp/simple_copy.py\n  https://github.com/nodejs/node/pull/57/files#diff-298 (46)\n- M deps/npm/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py\n  https://github.com/nodejs/node/pull/57/files#diff-299 (39)\n- I deps/npm/node_modules/node-gyp/gyp/pylib/gyp/xcode_emulation.py\n  https://github.com/nodejs/node/pull/57/files#diff-300 (0)\nPatch Links:\n- https://github.com/nodejs/node/pull/57.patch\n- https://github.com/nodejs/node/pull/57.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/pull/57.\n. One additional agenda item would add re: joyent/node is our strategy\nregarding Feature Requests in the issue tracker. I've gone through most of\nthe issues tagged as Feature Requests and managed to close a good number,\nbut we need to decide on the basic strategy -- (a) do we close them and ask\nthat people open new issues against nodejs/node or nodejs/io.js, (b) do we\njust close them without any further action or (c) do we keep them open for\ntracking purposes?\n\nOn Wed, Jun 24, 2015 at 4:05 AM, Rod Vagg notifications@github.com wrote:\n\nTime\nUTC Wed 24-Jun-15 20:00:\n- San Francisco: Wed 24-Jun-15 13:00\n- Amsterdam: Wed 24-Jun-15 22:00\n- Moscow: Wed 24-Jun-15 23:00\n- Sydney: Thu 25-Jun-15 06:00\nOr in your local time:\n-\n   http://www.timeanddate.com/worldclock/fixedtime.html?msg=Node+Foundation+TSC+Meeting+2015-06-24&iso=20150624T20\n- or\n  http://www.wolframalpha.com/input/?i=8pm+UTC%2C+Jun+24%2C+2015+in+local+time\nLinks\n- GitHub Issue: #58 https://github.com/nodejs/node/issues/58\n- Original Minutes Google Doc: hhttps://\n  docs.google.com/document/d/1T12-WeLzO_rqs_2BloM2O-f_RrN0OWzfaQVCKjGYKrc\nAttendees will be given a conference number to dial in to.\nAgenda\nExtracted from tsc-agenda labelled issues and pull requests prior to\nmeeting.\nnodejs/node nodejs/io.js\n- discussion of stability for internal APIs #2030\n  https://github.com/nodejs/io.js/issues/2030\njoyent/node\n- Nominating new collaborators to this repository #25481\n  https://github.com/joyent/node/issues/25481\nInvited\n- @bnoordhuis https://github.com/bnoordhuis (TSC)\n- @chrisdickinson https://github.com/chrisdickinson (TSC)\n- @cjihrig https://github.com/cjihrig (TSC)\n- @domenic https://github.com/domenic (observer)\n- @Fishrock123 https://github.com/Fishrock123 (TSC)\n- @indutny https://github.com/indutny (TSC)\n- @isaacs https://github.com/isaacs (TSC)\n- @jasnell https://github.com/jasnell (TSC)\n- @mhdawson https://github.com/mhdawson (TSC)\n- @misterdjules https://github.com/misterdjules (TSC)\n- @mikeal https://github.com/mikeal (website)\n- @mscdex https://github.com/mscdex (TSC)\n- @orangemocha https://github.com/orangemocha (TSC)\n- @piscisaureus https://github.com/piscisaureus (TSC)\n- @rvagg https://github.com/rvagg (TSC)\n- @shigeki https://github.com/shigeki (TSC)\n- @srl295 https://github.com/srl295 (TSC)\n- @trevnorris https://github.com/trevnorris (TSC)\nNotes\nThe agenda now comes from issues labelled with tsc-agenda in all 3\nrepositories listed above. Please label any additional issues that should\nbe on the agenda before the meeting starts. I'm using a tool\nhttps://github.com/rvagg/iojs-tools/tree/master/tsc-meeting-agenda to\nfetch the list so it's not a big deal to collate.\nThis meeting will be held via Uberconference. No live streaming this time\nunfortunately. Leave questions you want answered by the TSC in this thread\nas there won't be a QA.\nThe recording will go up on Soundcloud straight afterwards.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/58.\n. Two significant items for the agenda:\n\nhttps://github.com/nodejs/LTS/pull/13\n  https://github.com/nodejs/io.js/issues/1997\n1997 is, of course, the proposed revised release schedule and LTS/#13 is\nthe strawman LTS schedule.\n- James\nOn Wed, Jul 1, 2015 at 4:15 AM, Rod Vagg notifications@github.com wrote:\n\nTime\nUTC Wed 1-Jul-15 20:00:\n- San Francisco: Wed 1-Jul-15 13:00\n- Amsterdam: Wed 1-Jul-15 22:00\n- Moscow: Wed 1-Jul-15 23:00\n- Sydney: Thu 2-Jul-15 06:00\nOr in your local time:\n-\n   http://www.timeanddate.com/worldclock/fixedtime.html?msg=Node+Foundation+TSC+Meeting+2015-07-01&iso=20150701T20\n- or\n  http://www.wolframalpha.com/input/?i=8pm+UTC%2C+Jul+1%2C+2015+in+local+time\nLinks\n- GitHub Issue: #60 https://github.com/nodejs/node/issues/60\n- Original Minutes Google Doc:\n  https://docs.google.com/document/d/1TN3Ks0fC4ciY3jeS0VxXxXRkT_dq8-tfs-bWQqZGRoE\nAgenda\nExtracted from tsc-agenda labelled issues and pull requests prior to\nmeeting.\nInvited\n- @bnoordhuis https://github.com/bnoordhuis (TSC)\n- @chrisdickinson https://github.com/chrisdickinson (TSC)\n- @cjihrig https://github.com/cjihrig (TSC)\n- @domenic https://github.com/domenic (observer)\n- @Fishrock123 https://github.com/Fishrock123 (TSC)\n- @indutny https://github.com/indutny (TSC)\n- @isaacs https://github.com/isaacs (TSC)\n- @jasnell https://github.com/jasnell (TSC)\n- @mhdawson https://github.com/mhdawson (TSC)\n- @misterdjules https://github.com/misterdjules (TSC)\n- @mikeal https://github.com/mikeal (website)\n- @mscdex https://github.com/mscdex (TSC)\n- @orangemocha https://github.com/orangemocha (TSC)\n- @piscisaureus https://github.com/piscisaureus (TSC)\n- @rvagg https://github.com/rvagg (TSC)\n- @shigeki https://github.com/shigeki (TSC)\n- @srl295 https://github.com/srl295 (TSC)\n- @trevnorris https://github.com/trevnorris (TSC)\nNotes\nThe agenda now comes from issues labelled with tsc-agenda in all 3\nrepositories listed above. Please label any additional issues that should\nbe on the agenda before the meeting starts. I'm using a tool\nhttps://github.com/rvagg/iojs-tools/tree/master/tsc-meeting-agenda to\nfetch the list so it's not a big deal to collate.\nJoining the meeting\nWe are experimenting with BlueJeans for this. If BlueJeans is a pile of\nfail we'll default back to Uberconference this week, keep that in mind or\nmonitor IRC.\nHere is the info they have provided for this meeting:\n- To join the Meeting: https://bluejeans.com/408281630\n- To join via Browser: https://bluejeans.com/408281630/browser\n- To join with Lync: https://bluejeans.com/408281630/lync\n- To join via Room System: Video Conferencing System: bjn.vc -or-\n  199.48.152.152 Meeting ID: 408281630\n- To join via Phone: 1) Dial: +1 408 740 7256 or +1 888 240 2560(US\n  Toll Free) or +1 408 317 9253(Alternate Number) (see all numbers -\n  http://bluejeans.com/numbers) 2) Enter Conference ID: 408281630\nNOTE: This meeting is intended for TSC members but we do want to have\nlive-sharing of it as well. We are not sure how well this is going to scale\nhaving non-TSC members on and watching but if you do join please stay on\nmute in case we have trouble moderating you into silence! I think this\naccount has a capacity of 25 so if this is super popular then we may have\nto kick some people off to get the TSC on.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/60.\n. The current plan projects moving to the fully converged stream at the end of August with a potential first LTS release in October. See http://github.com/nodejs/LTS for detail.\n. @rvagg: Additional agenda items:\n1. Quick update from Rod/Ben^h^h^hBert on TSC Representation on the Board\n2. Node.js TC-39 participation, how should we engage?\n3. Any additional input on LTS plan?\n. Hmm... not good. Ping @rvagg too.\n. \n",
    "piscisaureus": "\n\ntimers: Avoid linear scan in _unrefActive.\n\nWe should probably still port that over to io.js in some form soon anyways. There is however, a timers re-write in the pipe.\n\nAlthough a marginal improvement, there is a much simpler solution to fix the problem this was intended to fix. That's why I didn't port it over from node 0.10 at the time.\n. They just carried over the repo collabs to the new org? I think that makes some sense.\n. This patch was deliberately left out of io.js, because I felt that Timer.unref() should be really be O(1) - which it always had been prior to https://github.com/nodejs/io.js/commit/f46ad012bc5a40194242ea1e9669c9cc25bd7047 \n. So I spoke to Mike Dolan last monday and he offered some help in getting our security policies on track. I think @rvagg and he had the same conversation. I think he's available to join this TSC meeting, and we have room on the agenda. Would anyone object if I invited him?\n@nodejs/tsc @mikeal \n. (sorry I dropped the ball, should have brought this up earlier)\n. Unfortunately I will (likely) have to excuse myself for today. \n. Node bypasses some of the sanity checks/rules that windows normally enforces - primarily in order to support filenames longer than 260 characters. And I'm aware that this creates trouble sometimes. However you should never get completely stuck -- you should be able to delete any file created by node ... with node :).\nI'm adamant to doing more path sanitization on windows - we could remove trailing dots and whitespace, for starters, as I'm sure windows normally does that. I don't know exactly what other transformations it does.\nStarting point for making these changes would be path._makeLong().\n. ",
    "bnoordhuis": "\nWe removed mdb_v8 entirely, as per iojs#1023 .. what's it even do?\n\nIt's what Joyent uses for their dtrace and mdb jsstack integration.  They don't bother to keep the V8 bits up to date and it's not relevant for non-SmartOS platforms so it got the ax.\n. I agree.  Like I said on IRC, no one likes pointless merge commits.\n. > Re: Merge commits being pointless \u2013 it comes down to whether we want to preserve the history of the v0.12/3 lines, or if we want to treat all of the changes that happened there as \"new\" commits.\nI could live with a single merge commit but the way the forks have diverged, you'd probably end up with a merge that is 50% conflict resolution.  It would be terrible to review.\n. LGTM\n. The explanation looks correct to me, but io.js doesn't have the --enable-ssl2 and --enable-ssl3 switches for security reasons.\n. I've commented on it elsewhere but I'm fairly sure there is little support for enabling SSLv2/3 again in io.js, even if it's behind a flag.\n/cc @nodejs/crypto\n. The changes look reasonable to me.  If one of you turns this into a PR and cc's me, I'll sign off on it.\n. @Fishrock123 timers._unrefActive() executes an O(n) operation (a linear scan of the active internal timers) and is normally called repeatedly.  For example, a timer that is associated with a net.Socket calls it every time data is sent or received.\n. > Running O(n) at the timeout phase is a bit weird and usually undesired, but it does make some sense for timeouts that usually shouldn't timeout.\nIt's not O(n) on expiry, it's O(n) every time something happens that resets (moves back) the timeout.  A socket can generate hundreds or thousands of timers._unrefActive() calls during its lifetime.  Multiply that by the number of active sockets (thousands, usually) and you can see why that is a problem.\nI've repeatedly had timers._unrefActive() show up as the biggest cost center in some of our (StrongLoop's) customers' applications.  I reported that as joyent/node#8160 and that is what eventually led up to joyent/node@934bfe2.  See the discussion in the issue for pros and cons on the current fix.\n\nWhat's the other option, making it a sorted list again and using an (average) O(n log n) ((I think?)) search? Won't a timing wheel still be somewhat O(n log n) at best too?\n\nA timer wheel has the benefit that insertion and deletion (by far most common operations) are O(1).  Even a logarithmic data structure is still an improvement over the current O(n^2) approach.\n\nBtw, how far did you get on that timers re-write? Even if it's not done I may be interested in seeing how things could be changed. :)\n\nI had a working prototype based on a binary heap but I scrapped it because it didn't preserve insertion order.  (I probably could have worked around that with a monotonic counter but I didn't want to go there.)\nIt should be in a branch in my fork but I'm not sure which.  https://github.com/bnoordhuis/io.js/commits/timer-heap contains just the heap implementation.\n. Oh, I think I understand your 'Running O(n) at the timeout phase is a bit weird' comment now.\nYes, you're right: io.js is O(n) reset + O(1) expiry whereas joyent/node is the other way around, O(1) reset + O(n) expiry.  Both approaches are terrible, only under different workloads.\n. Correct. 4.8 is the absolute minimum.\n. And, FWIW, the library that was the source of the -Wstrict-aliasing warnings, src/queue.h, was removed in nodejs/io.js@7e779b459367f071366699550ea0162b63516564.\n. joyent/node@6168fe6 LGTM FWIW.  It doesn't apply cleanly but you can get it to merge with a little nudge.\n. Looks alright to me but the V8 changes in the last commit should be upstreamed first.\n. @davepacheco The expectation is that someone, presumably a Joyent employee, keeps the postmortem support in V8 in working shape.\nIt's fine if that's not possible due to resource constraints but it means we'll disable postmortem support by default, i.e., people will have to opt-in at configure time (which may not work if it's not up to date) and it won't be enabled in release builds.\n. > We're happy to make sure that gets kept up to date (though I believe people outside of Joyent have generally been doing that, often without us realizing it, which has been okay).\nThat probably was Fedor and me, around V8 upgrades. :-)  I drew the line a while ago after the umpteenth broken upgrade.  If you can keep the postmortem support in V8 up to date, I think we're good.\n. Yes, it's not necessary in io.js; everything in lib/ is strict mode compliant.\n. > to avoid holding things up we should indeed support a flaky flag and make sure we have a high priority on resolving them once flagged as flaky\nWho is on the hook for flaky tests?  If the answer is 'no one in particular', there is no real imperative for anyone to go in and fix them.\nI'd love to see automated merges a la Rust, by the way.  But with rebase and fast-forward, of course, anything else is blasphemy.\n. Hah, that actually landed in joyent/node?  Like I said in the other issue, I think it's better to embrace the asynchronous nature of process.send().  Now at least its behavior is consistent on Windows and UNIX.\n. io.js has NODE_COMMON_PIPE for the same reason, see nodejs/io.js@05daf5f7 and nodejs/io.js@9fb7aee7.\n. /cc @nodejs/crypto\n. LGTM with suggestions.  And @Fishrock123 is probably right about PR'ing this against io.js, I was surprised when I saw the URL in the GH email.\n. I volunteer.  Do I need to file a PR for that aliases file?\nAlso, /cc @nodejs/crypto - I believe @indutny is or was on security@nodejs.org and @shigeki probably makes a good addition as well.\n. Who is going to add the people on the list to security@nodejs.org?\n. V8 issue: https://code.google.com/p/v8/issues/detail?id=4247 - looks like V8 will ship it when Chakra does.\n. Apologies if I don't make it tonight, I have a rather tight schedule.\n+1 from me on voting in Brian and Shigeki, I think they'll make great additions to the TSC.\nNo strong opinion on an API WG.  If people want to spin up one, that's fine by me, as long as I don't have to be involved too much. :-)\n. I'm not sure if I can make it tonight so apologies if I don't show up.\nAgenda seems pretty empty.  I removed https://github.com/nodejs/io.js/issues/2086 because there's nothing to discuss, the summit date is fixed.\nI'm not sure why https://github.com/joyent/node/issues/25481 is still on there, I thought that had been accepted.\nThat leaves https://github.com/nodejs/io.js/issues/2078, which so far I have no strong opinion on.\n. I already mentioned it on the calendar invite but I won't be able to attend this week and next week.\n\nQuick update from Rod/Ben on TSC Representation on the Board\n\nWrong Dutch guy, you want @piscisaureus. :-)\n. Apologies, I won't be able to attend this week.  Should be able to make it next week.\nI've no objections against landing #2217, no opinion on the other issues.\n. MDC2 and RC5 are disabled by default.  IDEA is enabled, however.  You can check yourself with iojs -p 'require(\"crypto\").getCiphers()'.\nIf you want to disable IDEA, you can add OPENSSL_NO_IDEA to the defines  in deps/openssl/openssl.gyp.\n. You'd have to recompile, yes.\n. For posterity, I had a typo in my comment: it said OPENSSL_NO_ASM instead of OPENSSL_NO_IDEA.  Updated.\n. https://github.com/nodejs/io.js/pull/2274\n. Fixed by https://github.com/nodejs/io.js/commit/fa98b97171d9b8519bdbf5d9f8dbd8639ac3c050.\n. https://github.com/nodejs/io.js/pull/2307\n. Fixed in nodejs/io.js@0bb099f.\n. Just a quick note, but this PR is a semver-major change (so it probably won't be picked up anytime soon), introduces a lot of style changes and style violations, and may not work with VS if it depends on SFINAE.\n. s/benchmark/benchmarks/\n. ",
    "mikeal": "\nbut we get into specifics of \"what commits do we merge\" vs. \"what commits do we skip\n\nAren't there a lot that we would objectively want to skip though? Aren't there a bunch of commits that essentially just backport io.js changes to older v8 that we're not even on now?\n. > the next major version of Node will have all of the features of both io.js and node.js.\"\nIn the last convergence meeting we sort of amended that though. If I remember correctly the plan was:\n- Get master to a point where all feature from io.js and node.js are present.\n- Open it up for people to propose changes as PRs before the first release.\nThis way there is a chance, prior to release, to re-consider things as a combined TSC but they have to be proposed at reversions rather than as debates on the merge commits.\n. Right, but it would still be unexpected if a feature was abruptly removed without a cycle of dep warnings. However, we have an exception in the dev policy for anything security related, which the SSL switch may quality for.\n. > But at first blush we need to avoid anything that even has the appearance of editorializing commits. \nOne thing that might help here is if when we think we're done with the merge we open it up to the contributors to find anything that was missed. During that period we'd still be in the \"merging phase\" and anything from either project would get accepted without contest.\n. you can email support@github to get them to \"unfork\" it \n. it should just be called \"node\"\n. I added collaborators and TSC teams to this repo earlier today.\n. I'm not sure if this is ready, the timeline is certainly outdated.\nAlso, it's \"Node Foundation.\" I have the delaware filing and it says:\n\nCERTIFICATE OF INCORPORATION OF\nNODE FOUNDATION\nFIRST  -  The name of the corporation is Node Foundation (the \"Corporation\").\n. Actually, hrm... The corporate filing says Node Foundation the member agreement says \"Node.js\"\n\nI prefer \"Node Foundation\" but it sounds like we're using them pretty interchangeably.\n. Being that we're registered as Node Foundation and own the \"node.js\" trademark we can be whichever we want :)\n. > Why are we putting a 5th document into the root of the project that's not used by any of the tools? It's getting a bit crowded there.\nBecause every time we add one someone says \"why another file in the root?\" and then nobody creates a directory and we end up putting it in the root anyway :)\nSomeone should send a PR moving all but LICENSE and CONTRIBUTING to a directory.\n. Ya, also the dev policy is specific to nodejs/io.js and nodejs/node. Once we are down to just nodejs/node it would be a little strange for the policy to live in a separate repo. We should keep the repo around indefinitely though just to reference all the conversations we had there.\n. Another thing I just thought about: we're doing RC builds for major releases now and have pulled breaking changes from those once we realized their impact was larger than originally estimated. We may want to standardize a timeframe that we hold majors in RC when there are deprecations so we can continue to understand their impact.\n. Usually we wait until a few meetings have happened before we write up the charters (this just gives everyone time to understand the scope through practice) and that was baked in to the lifecycle document.\nThat said, we can just merge this with a note that all of these are in an \"incubating\" state. Also, we need to get the WG state in to all of the existing working groups as well so why don't we just get these merged and then I'll send a PR that adds the state to all of them.\nI created repos with associated teams for all of these WGs. @mhdawson you're the team maintainer for each, please add the other members (their github usernames aren't here so I haven't added them). Once that is done please edit the repo descriptions, team descriptions, and READMEs for each WG and kick off a new issue to setup the first meeting and reach out for more early members. Once those issues are logged ping the evangelism team and we'll promote it one twitter.\n. I've been listening to the first Hardware WG call and they spent a lot of time guessing how working groups work because nobody on the call had ever been in one before. We should add a best practice that the first call/meeting you do has someone on it that is has been in a few of these and is used to the process.\n. https://soundcloud.com/node-foundation/tsc-meeting-2015-06-03\n. I updated the title because eval, in the context of a JS platform, was a bit confusing :)\n. Also, the foundation budgetting process has begun so this would be a good\ntime to start talking about anything the TSC needs that could require\nbudget.\nOn Wednesday, July 15, 2015, Rod Vagg notifications@github.com wrote:\n\nI was going to back out now unfortunately, kids have kept me up (it's 2am)\nand I'm not going to get enough sleep and I've not been well anyway so best\nif I opt out!\nI did want to briefly mention progress on 3.0 which I'd really like to get\nout asap so we can give add-on authors a head start before we dump the\nconverged release on everyone with epic breakage (the PR of that is going\nto be messy). I've done conversions of leveldown, canvas and bignum and\nshaken out some bugs and got my head around the NAN changes. The main needs\nnow are getting docs completed for NAN, ideally including a guide for\nconverting from pre-v2.\nAlso the build WG has a work plan for a converged release @\nnodejs/build#135 https://github.com/nodejs/build/issues/135 with the\ngoal of getting releases out by late August. It might be a stretch but this\nis fairly important for the LTS plan.\nIf @jasnell https://github.com/jasnell is on the call it'd be good to\nhave more discussion about how LTS fits with the other release plan\ndiscussion. We need some synergy there.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nodejs/node/issues/67#issuecomment-121659228.\n. PS. I'm working on automating this in \"the new system\" :)\n. We need to add an item to the Agenda to talk about the security policy. The Linux Foundation is sending Emily Ratliff from their security team to this one.\n\nIn fact, if we could jump that to the top of the agenda so that Emily can leave early that would be great.\n. @Fishrock123 there's going to be some PR thing about that and a bunch of other stuff. just leave it for now :)\n. we can remove the collab summit item, we resolved that last week.\n. +1\n. ",
    "brendanashworth": "fwiw, +1 for a rebase / cherry-pick, a lot of changes have been made to io.js (ish node.js :grinning:  ) and a single merge commit would hurt git blame / history\n. @jasnell I recall discussion related to an http \"strict mode\" before somewhere in io.js#1457.\nI'm -1 on sanitizing -- a developer should definitely do that before writing user-provided strings in headers -- and unsure about throwing. Also curious about perf though -- will this also affect the value of the header and not just the name? I don't recall us already iterating through the header strings themselves. This is also relevant to iojs#1693. Should we instead trust the developer (also allowing them to use whichever encoding they want)?\n. some things I can come up with:\n- lets just use either feature request or enhancement, not both\n- can issues be marked as semver, can pull requests be marked as bugs or feature requests?\n. @Fishrock123 2 probably isn't worth the discussion anyways, we can let people label as they feel I guess. those are my only wishes for the labels!\nedit: what are peoples thoughts about PR status labels?\n. +1 for what @silverwind said. I went ahead and made some platform labels (P-windows, P-osx, P-freebsd, etc) just to see if anyone likes them.\n. 'cuz i'm opinionated, some thoughts (just bikeshed):\n1. how about instead of tags for specific versions (v0.12, v1.x), we just use a single LTS tag?\n2. I think meta is more for type, not governance\n3. let's get rid of the future tag, if it isn't pertinent immediately (PRs and issues), it should be closed and sent to NG until it is pertinent?\n4. no js tag, maybe?\n. 1) Good point, nvm then.\n2) I think it specifies the type of issue it is more rather than something pertinent to governance - like tsc-agenda. All it does is change the color of the label though, it doesn't really matter to me that much.\n3) It's just an idea to try and keep issues / PRs low on the tracker - future tagged stuff usually doesn't have Actionables and are for \"when xyz occurrs... maybe do this?\", afaict. I just think stuff like that should be dealt like this. IMO this probably belongs in NG. \u00af\\_(\u30c4)_/\u00af\n4) I just think its sort of expected - you hear from a lot of collaborators that they don't know C++, but if they even found the repo they probably don't need to know that a specific PR has js. :wink: \nedited for format\n. .. mm, fwiw this repo will be moved and the io.js repo will take over, so the labels there would take the cheese.\n. This became async in https://github.com/nodejs/node/commit/56d9584a0ead78874ca9d4de2e55b41c4056e502, closing.\n. Now that is a commit log. Seems simple enough to me if it fixes a test on a platform. Should I PR?\n. Landed to master in https://github.com/nodejs/io.js/commit/67987d9d83517e8d812f13dc5e9eca1d1b9d21ac.\n. Hi @malandrew! Unfortunately it looks like a separate PR went ahead and fixed this in the other repo: https://github.com/nodejs/node/pull/2367#issuecomment-133952827. Thanks for taking the time to put this together, but since it isn't applicable anymore I'll close this. Sorry for the annoyance.\n\nAlso, QQ for both of you, what of the other open issues for the merge that are low-hanging fruit and suitable for those who are not new to NodeJS but only new to contributing to NodeJS?\n\nSometimes you can find good issues with the \"good first contribution\" label, especially for those with mentors available. Right now these issues block for the 4.0 converged release, though most of them already have people actively working on them, there's a few outliers. Here are some known issues with the software that we all want to fix. And of course, theres others scattered around the issue tracker - mentorships are also available (link idk?) from some collaborators, and most if not all are probably open to help anyone that asks. We're always open to help :)\nEdit: and test issues, these are great.\n. I suppose this can just be closed cause of the new convergence.. so, closing?\n. ",
    "sam-github": "Don't commits build on each other? I'd think the cherry picking could get ugly if its not in historical order. Also, commits that don't conflict can still relate to each other, and doc commits sometimes come in after the code they doc (in theory, code and docs are update simultaneously... but that's just a theory). If its not in historical order, the intermediate stages might be subtly broken. Which might not matter, as long as the end result is good.\n. If deprecated APIs are never deleted, people come to ignore the deprecation warnings, because they are effectively meaningless, leading to a situation where you can never delete them because nobody stopped  using them, and deleting them is high-impact.\nBut 3 months seems pretty arbitrary to me, too.\nIntroducing a deprecation in a semver-major release, and then deleting in the next semver-major release might be more predictable. Depending on how predictable semver-major releases are.\n. @geek its a good conversation to start having, thanks for kicking it forward.\n. @piscisaureus I think these are the commits you said you didn't bring over. My primary involvement in this was to make the code actually match the docs in terms of what args were or were not optional. But that fell into a can of worms because some vocal users wanted very specific type checking on the args. Which isn't a bad thing, but with four args, most optional, it gets a bit hairy. I leave it to you all to decide what to do about this.\nAnd note that the originally claimed \"API incompatiblity\" was a LACK of a throw...\n. I think at least the tests should be ported over, since they demonstrate the very wide variety of calling conventions that are possible... what the correct behaviour should be for each one can then be discussed more readily.\n. And all the old release tags are missing, as well. Its pretty useful to be able to know what the code was at an exact release.\n. @rvagg how do I find this meeting on soundcloud?\n. ",
    "rvagg": "lgtm\npoint of clarification: is it \"The Node.js Foundation\", \"The Node Foundation\", \"Node.js Foundation\", or ...? Has it been formally created yet? Since everyone says \"The Node Foundation\" could it just be that? Also, if \"The\" is in the name then you should capitalise T in your updates too.\n. shall we mark this as tc-agenda perhaps? or is there any kind of board in place yet?\n. @jasnell I'll leave you to close this one but it seems like this should be moved to nodejs/node now right?\n. closing because this repo is now archived\n. /cc @thlorenz and @brycebaril who I think would be very interested in joining the Benchmarking WG\n. -1 from me, probably another TSC discussion topic\n. > get dropped in the next major release\nDropping features is very very difficult, we'd have to go in with eyes wide open and consider how few things have ever been removed from Node; even this convergence work is an exercise in adding things back in that we tried to remove in io.js.\n. @Fishrock123 no I'd like to get rid of them completely, but the argument in this thread is to provide a stepping-stone to removal for people who may be relying on it, I'm just suggesting the risk in it being difficult to remove such \"temporary\" features, this probably goes more for the cipher list issue than this one but same logic fits I think.\n. moved active to https://github.com/nodejs/node/issues/2514\n. now active @ https://github.com/nodejs/node/issues/2515\n. we may need to consider a backup plan for this, timers has the potential to be a deep rabbit hole and it'd be nice if a \"rewrite\" doesn't end up deferring a release\n. @Fishrock123 no problems, ssh root@45.55.209.17, it's all yours, just let me know when you're done with it. Ping me if you need setup help, @trevnorris probably has some gists with instructions on perf tooling for Linux too so you can hassle him if you need help on that end.\n. I've given you Ubuntu 15.04 since I believe that the most recent kernel is best for this kind of work. Use whatever directory and user you like, I'd just probably use root in its home directory for this, the machine is exclusive to your use and is throwawayable. I've installed git and build-essential so you should have the basics that you need for getting a build going.\n. Here's an older one of @trevnorris's gists on the topic which includes instructions on getting and using a recent version of perf: https://gist.github.com/trevnorris/7712539 - update for a more recent kernel version for download.\n. I think it's safe to remove this off the tsc-agenda for now so y'all can bikeshed here, feel free to re-add it if you'd like to re-escalate it for further discussion\n. @Fishrock123 what's the status of this? Can it go on the 4.0.0 milestone or is it too much work for now?\n. my only guess is NODE_COMMON_PORT and NODE_COMMON_PIPE but the latter is io.js-only afaik and we haven't had breakage\nI'm +1 on merging this however I'd prefer to see this generalised into a ulity in common.js\n. this whole area would make a good TSC topic as there have been (some strong) differences between the two projects on this and it'd be good to find a workable compromise that increases comfort all round (if possible)\n. @srl295 can you sign off on this one? can we close this issue?\n. Ubuntu 12.04 toolchain is fairly simple via a PPA: https://github.com/nodejs/build/blob/master/setup/ubuntu12.04/ansible-playbook.yaml#L25\nUbuntu 10.04 was just as simple: https://github.com/nodejs/build/blob/6b3867b99f555f3f1bb0b84c81ea20db2ca343b6/setup/ubuntu10.04/ansible-playbook.yaml#L25\nWheezy is a problem, although it's common enough that workarounds are appearing. For the ARMv7 machines I've managed to get gcc4.8 via default backport channels but I can't tell you if that goes for non-arm release lines too. Early on I created a procedure for compiling gcc4.8 on Wheezy, see https://github.com/nodejs/build/tree/master/setup/debian-wheezy-gcc for that.\nIt's actually easier to compile on non-RHEL/CentOS distros of the same age as it is on RHEL because of the hacky way you have to use SCLs.\nAlso, I read \"TEST PURPOSE ONLY\" in the same way as I read \"DO NOT MACHINE WASH\" on clothing labels, it's all about CYA.\n. So 12.04 binaries won't run on 10.04 but 10.04 is out of LTS so we've moved on anyway. The binaries we produce on CentOS5 will work on other CentOS 5 / RHEL5 / Wheezy-era distros without any additional extras. We build the ARM binaries on Wheezy-based distros for the same reason.\nI think I've mentioned this before but it's worth saying again: any use of C++ features so far in V8 (and Node where it's crept in) are limited to those that don't require linking to libstdc++, so all that matters for the target distro is the version of libc. All that matters is where the binary is compiled and CentOS 5 and Wheezy represent the oldest reasonably supported distros out there.\nTo prove the point, here's a copy of what I've just run against a virgin CentOS 5 box:\n```\n$ ssh root@45.55.74.162\nThe authenticity of host '45.55.74.162 (45.55.74.162)' can't be established.\nRSA key fingerprint is cc:35:5b:92:77:ad:e4:17:d2:da:93:52:26:3c:8a:ca.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '45.55.74.162' (RSA) to the list of known hosts.\n[root@centostest ~]# uname -a\nLinux centostest 2.6.18-308.1.1.el5 #1 SMP Wed Mar 7 04:16:51 EST 2012 x86_64 x86_64 x86_64 GNU/Linux\n[root@centostest ~]# uptime\n 22:10:59 up 0 min,  1 user,  load average: 0.44, 0.11, 0.04\ncurl -sL https://iojs.org/dist/latest/iojs-v2.3.3-linux-x64.tar.gz | tar -zx --strip-components=1 -C /usr/local/\n[root@centostest ~]# node -v\nv2.3.3\n[root@centostest ~]# node -pe process.versions\n{ http_parser: '2.5.0',\n  node: '2.3.3',\n  v8: '4.2.77.20',\n  uv: '1.6.1',\n  zlib: '1.2.8',\n  ares: '1.10.1-DEV',\n  modules: '44',\n  openssl: '1.0.2c' }\n```\n. I think this issue boiled down to the vcbuild.bat change but I believe that's redundant now thanks to the Intl support by @srl295: https://github.com/nodejs/node/commit/1f12e032\nI've filed a ticket to make sure Jenkins is doing the right thing by v4, currently I don't think it is: https://github.com/nodejs/node/issues/2516\n. /cc @jclulow @davepacheco - halp? As @Fishrock123 points out above, this is a convergence blocker, can we have some Joyent eyes here?\n. Is it safe to recommend to collaborators to ping @nodejs/post-mortem to get the attention of someone to fix broken mdb functionality or should we add a new team for specific people? We have these already for things like platform-windows, platform-solaris, etc., we could add a mdb team with specific people if it shouldn't just be post-mortem.\n. @nodejs/dtrace-mdb created and folks added/invited\n. Sadly I don't seem to have brain space to grok everything in this issue but I'm wondering if we can narrow it all down to a simple question: Will we be able to say that mdb supports Node.js v4 out of the box? The release is planned for the end of this month (maybe beginning of next month) so it's coming up soon and the mdb component is an important part of the \"please upgrade\" story that we're all pushing so we can help users migrate off 0.10 and 0.12 to v4 without too much pain.\nThe version of V8 in io.js v3.x (nodejs/node/v3.x) and in nodejs/node/master (v4.4) is very likely to be what ships with v4. It seems very unlikely that Chrome 45 will ship before Node.js v4 does and even if it did, the timeframe for landing and testing V8 v4.5 will be too short to justify the scramble. So I'd say it's safe to consider the master branch a safe bet for what V8 is going to look like in v4 and if you need to float any patches then now would be the time to do it.\nAn alternative, that is not as ideal, is to punt on this for the initial release but get anything done during the period between v4 being released and when it turns into an LTS, at which point we won't be able to land any feature additions. LTS is planned for the end of October so there's a couple of months within which to add feature additions (semver-minor) if necessary. This is not ideal IMO because it doesn't help the rallying cry to get people moved over to v4, it'll defer even an investigation phase for many large users of Node that care about mdb support.\n. moved to https://github.com/nodejs/node/issues/2517\n. lgtm & +1 to @fishrock123's suggestion, do you want to handle that for io.js?\n. Please no no no, I have strong objections to this on a philosophical level, flakey tests should be fixed rather than accepted, that's why the whole thing was removed from io.js. I haven't checked but has it been put back in in this repo?\nWe have ongoing problems with the io.js CI because of Windows+Jenkins crap that we haven't resolved but as far as I'm concern this just means we need to work on it and figure out a fix, not accept it and move on.\n. agreed, we'll be discussing this at our next meeting and possibly beyond, current plan is to wait to experiment with the jenkins merge job and understand the value of flakey test marking and then attempt to move towards a compromise situation that satisfies everyone's concerns\n. Yes, I believe current status is that we've capitulated and agreed that flaky tests will need to be in converged repo in order to make the node-accept-pull-request jenkins job to work satisfactorily, and in fact we may even want it to come back in to io.js for the same reason. Will let @orangemocha update on progress there.\n. Moving discussion back to https://github.com/nodejs/node/issues/760\ntbh I don't really know where this stands, if we make it officially async do we have to change the non-windows implementations? we'd need to change the docs too I suppose. It would be great to get rid of the Known Issues item for this.\n. yeah, it's in this repo already https://github.com/nodejs/node/blob/1241d79e02bd335a62e702489f295a8d6a8c2cd5/test/common.js#L96\n. @mhdawson can I leave this for you to decide whether it needs to go in to nodejs/node prior to 4.0? I don't think it's that important cause it's only a test case but I'll leave it to you.\n. I'm wondering if there is a case for the legacy ciphers list, are we aware of any use cases that would break if they change to the new list. I know the new list is very restrictive but it's also modern and similar to what you'll find configured in many web servers today. We might be denying use of Java6 or Android Browser 4 but .. if you're supporting old clients like that then I'm sure you're expecting to have a hard time all over the place.\nI'm +1 on --cipher-list and NODE_CIPHER_LIST but -0 on all of the legacy cipers work because that sounds like a path toward building up a lot of technical debt and easily enabling unsafe run modes.\n. Pretty sure this is handled by https://github.com/nodejs/node/issues/2412\n. Invitees should have an email with the details about the call, please let me know if you don't have it.\n. Handled by https://github.com/nodejs/node/pull/2367\n. lgtm\n. not sure about the status of nosnapshot, I can't recall details but I know we've had some changes in io.js on that front\nalso @jasnell, it'd be helpful to /cc @nodejs/build on all changes related to configure, Makefile and vcbuild.bat cause there's lots of context around those bits\n. Agreed, we currently put too much logic into jenkins and we need to shift it back into vcbuild.bat and Makefile so I'm happy with this direction. The only question is about nosnapshot.\n. perhaps this should go in to io.js as well?\n. connects a little with changes in https://github.com/nodejs/io.js/pull/1938\n. moving to https://github.com/nodejs/node/issues/2518\nalso related to https://github.com/joyent/node/issues/25876\n. moved to https://github.com/nodejs/io.js/pull/2037\n. /cc @nodejs/collaborators: I've just realised that some of you may not be watching this repo yet and may not be aware that we've moved these over here now\n. Also:\nThis is currently being controlled here: https://github.com/nodejs/email/blob/master/iojs.org/aliases.json\nWe'd need a ## Security section on the README to list this and explain the steps to take if you find a vulnerability.\n. let's see how it shakes out in discussion, the TSC probably needs to sign off on the final list, we'll give it another week\n. /cc @nodejs/tsc\n. Proposing a security@ team:\n- @rvagg\n- @bnoordhuis\n- @indutny\n- @jasnell \n- @cjihrig\n- @shigeki\n- @mhdawson\n. @misterdjules thanks for the context, I wasn't aware of the Node.js security@ list or procedure (although I was looped in to the recent HP email thread which I guess should have clued me in!). I did a quick search of the repo / README and didn't see anything and since we don't have anything for iojs.org I figured this would be an overlapping concern but it seems not, yet anyway!\nThis actually comes from finally having MX set up for iojs.org so we can do email addresses and the only really pressing one is security@ so I wanted a list of people to put here: https://github.com/nodejs/email/blob/master/iojs.org/aliases.json - I also assumed we'd use the same setup (Mailgun) for nodejs.org continuing on from this issue.\nI'm happy to sit on this issue for now then, since we have a security@nodejs.org procedure in place that's all good. I'll set up an interim thing for iojs.org.\n. https://github.com/nodejs/io.js/pull/1948 - added a section to the io.js README\nhttps://github.com/nodejs/email/blob/master/iojs.org/aliases.json#L3 - bounce email to security@iojs.org to security@nodejs.org\n. Just to echo @Fishrock123 here: we netted out at leaving things as they are and accepting \"non-compliance\" (although there was even much argument about whether there really was something to comply with). The whole episode was long, drawn-out and kind of painful, as you would expect when talking about something that could break for large parts of the ecosystem in unknown and unexpected ways when you even make small changes\u2014hence the aborted attempt to change the url module just for performance while bringing in some subtle changes that were actually quite major for some uses.\n. discussion should be moved to nodejs/node now, I don't think this has any bearing on convergence per se\n. I'm going to have to bail on this meeting unfortunately. I'm not well ATM and I've decided that I'd be better off getting a little bit more sleep than dragging myself out of bed for this. Sorry for doing this at the last minute!\n. @iliakan at this stage you're better off doing at PR against the io.js repo from where changes are being pulled for this. Alternatively the joyent/node repo would probably work too. This repo is still working towards convergence and until its there it's not safe to land commits from outside of io.js or joyent/node.\n. so I keep on removing the Brian and Shigeki voting thing as deferral but perhaps I shouldn't have done it this time because I've been hearing positive noises from all directions about just getting this done - let's put it back on the agenda unless there are any objections to the short notice\n. this week's minutes: https://docs.google.com/document/d/1d4mAJgm06rpPWLDqhZcxsRnKMrS92Ip4CW2akOyeIL4\n. Imma give my apologies for not attending tomorrow, I've had to choose between two meetings and this one lost out this time around, sorry. Uberconference will record automatically, I'll ship the mp3 off to @mikeal as soon as it's done and he can edit and upload to soundcloud.\nAlso, we've been toying with bluejeans.com @ NodeSource as an alternative to Uberconference & Hangouts and so far it's promising. I've yet to see its broadcast features but I plan on diving in to it soon and will come back with a recommendation. The lack of live-stream-ability really bothers me with Uberconference, it disconnects the TSC too much from the other collaborators, plus we haven't been good at noting Soundcloud links (we should remember to put them in minutes afterward) so the meetings are a fairly isolated event.\n. please take this to the new https://github.com/nodejs/node repo if it's still valid for discussion\n. Uberconference it is, something's up with BlueJeans\n. Not the right repo for bugs anyway, try io.js or joyent/node \n. I was going to back out now unfortunately, kids have kept me up (it's 2am) and I'm not going to get enough sleep and I've not been well anyway so best if I opt out!\nI did want to briefly mention progress on 3.0 which I'd really like to get out asap so we can give add-on authors a head start before we dump the converged release on everyone with epic breakage (the PR of that is going to be messy). I've done conversions of leveldown, canvas and bignum and shaken out some bugs and got my head around the NAN changes. The main needs now are getting docs completed for NAN, ideally including a guide for converting from pre-v2. \nAlso the build WG has a work plan for a converged release @ https://github.com/nodejs/build/issues/135 with the goal of getting releases out by late August. It might be a stretch but this is fairly important for the LTS plan. \nIf @jasnell is on the call it'd be good to have more discussion about how LTS fits with the other release plan discussion. We need some synergy there. \n. yep, just got the creds from Mikeal, I'm planning on putting links in to the minutes too so they don't get totally detached\n. please take this to the new https://github.com/nodejs/node repo if it's still valid for discussion\n. Appology from @mscdex received earlier this week. \nIs there someone who hasn't taken chair before but would like to give it a go that can put their hand up this time? I won't be up to it, not enough sleep, if I make it at all! \n. @agnat for now you're best off doing this against https://github.com/nodejs/io.js rather than here because it won't be merged here (yet). The master branch is what's going to be built on here and this repo may be removed and replaced with the io.js repo.\n. @agnat yes, master on io.js is what will serve as the base of Node.js v4. This repo's master is io.js' master but a couple of months behind.\n. Moved to https://github.com/nodejs/node/issues/2520\n. Unfortunately this is not the place for this, we're active in https://github.com/nodejs/io.js at the moment, please open the pull request there.\n. be aware that this discussion may be lost to history as this repo is slated for possible removal, if this is important please discuss @ https://github.com/nodejs/io.js\n. node.js -> Node.js\n. does this line need to be included here? surely this is detail that should be left to that WG rather than cementing it here where it's harder to modify\n. redundant\n. redundant\n. ",
    "corbinu": "node.org shows it as \"Node.js Foundation\" https://nodejs.org/foundation/\nNot sure if that is official yet though.\n. ",
    "fsbatista": "Sure!\n. ",
    "silverwind": "Yeah, on second thought, redirecting might invalidate a lot of link unnecessarily. Alternatively, I'd suggest just closing down issues (PRs can't be disabled) and putting a link to the new repo in the tagline and README.\n. How about we follow a colorization guideline like this:\nhttps://robinpowered.com/blog/best-practice-system-for-organizing-and-tagging-github-issues/\nAs a reference, I really like how servo is doing this:\nhttps://github.com/servo/servo/labels\n. Here's a categorized list of labels based on io.js's current one. Note the leftover category are things we treat as submodule right now, but I think it should be in another category, not sure what to name it. Anything missing?\ndependency - c-ares\ndependency - http_parser\ndependency - icu\ndependency - libuv\ndependency - npm\ndependency - openssl\ndependency - v8\ngovernance - meta\ngovernance - tsc-agenda\ngovernance - tsc-meeting\nlanguage - c++\nlanguage - js\nleftover - benchmark\nleftover - build\nleftover - install\nleftover - test\nleftover - tools\nplatform - arm\nplatform - freebsd\nplatform - linux\nplatform - osx\nplatform - smartos\nplatform - windows\nstatus - discuss\nstatus - future\nstatus - good first contribution\nstatus - help wanted\nstatus - in progress\nstatus - land on master\nstatus - mentor available\nsubsystem - assert\nsubsystem - buffer\nsubsystem - child_process\nsubsystem - cluster\nsubsystem - console\nsubsystem - crypto\nsubsystem - debugger\nsubsystem - dgram\nsubsystem - dns\nsubsystem - doc\nsubsystem - domain\nsubsystem - events\nsubsystem - ffi\nsubsystem - fs\nsubsystem - http\nsubsystem - https\nsubsystem - module\nsubsystem - net\nsubsystem - os\nsubsystem - path\nsubsystem - process\nsubsystem - querystring\nsubsystem - readline\nsubsystem - repl\nsubsystem - smalloc\nsubsystem - stream\nsubsystem - string_decoder\nsubsystem - timers\nsubsystem - tls\nsubsystem - url\nsubsystem - util\nsubsystem - vm\nsubsystem - zlib\ntype - bug\ntype - feature request\ntype - question\nversioning - semver-major\nversioning - semver-minor\nversioning - v1.x\n. I added the js to the list because we have a c++, but I'm fine leaving it out ;)\n. I added an intl label to nodejs/iojs for you, feel free to change the color if you like. :wink: I plan on doing a pass on labels and their colors soon, so that they're colored by category.\n. Landed a ported version in https://github.com/nodejs/io.js/commit/b5b8ff117c8581945d0c8c3a4b18d53f4b33b86f, notable difference is that the workaround for the race condition wasn't necessary any more.\n. Yes, there's two ways to achieve different timeouts per platform. First for individual timeout values inside tests with common.platformTimeout:\nhttps://github.com/nodejs/io.js/blob/39dde3222e4733fc1b59c45e392d9ff1a88ae4cc/test/common.js#L183-L191\nAnd for the overall test timeout (30s):\nhttps://github.com/nodejs/io.js/blob/39dde3222e4733fc1b59c45e392d9ff1a88ae4cc/tools/test.py#L731-L734 \n. This convergence repo is probably not the right place to report issues like this.  Use npm/npm or joyent/node, althought I doubt this is really an issue with either project, and I'd check if these executables are really in your PATH, and also try running it directly through ./npm.\n. I'm not sure if this information is still up to date, but there's a historical list of system-reserved file/folder-names that can't be modified through Explorer:\nhttp://blog.onetechnical.com/2006/11/16/forbidden-file-and-folder-names-on-windows/\n. ",
    "geek": "@chrisdickinson how long of a period do you need, 5 months, a year?\n. @chrisdickinson I think that has a solid spirit and goal to it.  You are, however, tying yourself to legacy code and future code that chooses to use the API you want to delete.  \nInstead, lets have a hard and fast policy and do our best to keep people on board with changes.  We can build a much cleaner framework if we are allowed to clean it :)\n. @rlidwka you can put it wherever you want... the point is to establish a policy. \n. @sam-github 3 months is entirely arbitrary... I am more trying to get the conversation started and provide a basic set of ideas.  I think your suggestion makes more sense, let the major version dictate the deletion.\n. ",
    "rlidwka": "Why are we putting a 5th document into the root of the project that's not used by any of the tools? It's getting a bit crowded there.\n. ",
    "srl295": "I would propose an Intl ( akin to joyent/node's i18n ) label. It would supersede dependency - icu.   Probably Intl instead of i18n to match the Intl WG name\n. @Fishrock123 I'm fine to take it off the agenda, sounds like it is well in hand.\n. Ok- I'd still like an intlish label please\n. OK. the bulk of the work is done, just a few commits need to be added.\n. These are the same 3 as above, just with PR numbers\n- build: add small-icu support for binary packages : PR   https://github.com/joyent/node/issues/7676\n- src: add license content from ICU: PR https://github.com/joyent/node/pull/9038\n- build: enable small-icu support for build-release : PR https://github.com/joyent/node/issues/9099\n. I concur, retroactively \n. Back in town, should be able to make it.\n. @Fishrock123 we can do it in-issue if we have consensus that you should do it. I was going to add the Intl issue to the agenda before I saw your item.\n. ",
    "thlorenz": "Yeah definitely interested. Started working on something that we could use as a start to run benchmarks for every release and graph them.\n. ",
    "mhdawson": "Will update the repos as requested. I added thlorenz to the invite for the initial Benchmarking meeting which is scheduled for May 27\n. Update the benchmarking repo @mikeal let me know if there is any additional setup I need there.\n. Long since stale. closing.. I think we might want to discuss that by general policy, the flags we add for fallback (like these) get dropped in the next major release.    Having that documented up front would set the expectations that they should only be used as a stopgap until systems can be properly secured.\n. As stated earlier since the converged stream will have a newer level of V8 and V8 requires a newer compiler the converged stream will have a dependency on a later compiler so leaving out the first PR is not an issue.\nI'll still concerned though that we don't have a full answer to the problem.  Ignoring the issue of IBM based platforms, based on my understanding end users will only be able to build binaries for xlinux that run on older systems by one of the following:\n1) using  Red Hat Enterprise Linux with the Develper toolset \n2) using a using the toolset here http://linux.web.cern.ch/linux/devtoolset/, were it says in bold red \"TEST PURPOSE ONLY\"  on centos (not sure about this).\nSo for example, if I'm an ubuntu shop running ubuntu 12 I'd either have to install a different platform or figure it out for myself how I could build binaries that would run on ubuntu 12.\n. Having the info documented on how to get the toolchain you'll need for a given distro level would help. The other question is if we know whether binaries built with gcc48 on ubuntu 12.04 will run on ubuntu 10.04 ? The concern was not so much that you could not get the toolchain to build on a given distro level (but as you mention for Wheezy, its not always straight forward, so documentation would be helpful), but that resulting binaries might not run on earlier distro levels without having to update libstdc++ levels or some other components on the backlevel distro.  That's the issue that dev toolset addresses. \n. I do get the notifications but I have so much email I don't manage to read it all in a timely manner sorry for the late reply.  \nI've used the equivalent change in my builds of io.js next on pLinux and it looks fine to me.  I think we can assume that the io.js commits address the original issue.  \nIn addition to the base change there were 2 tests changed by this PR but I think one was to make code more consistent and in the other case the test has changed such modification in this PR no longer applies.\n. I agree that we don't necessarily just want to up the general timeout for AIX.   \nIf I remember correctly I think we had started with a special case in the code for AIX (either for this PR or some others related to timeouts), but in the review it was suggested we just apply to all platforms to avoid the extra platform checks.\n. I'd like to be able to get it into the LTS stream, but provided I'll be able to do that later on I don't think its a blocker for 4.0.  Based on the the discussion it sounds like I should just create a PR which makes the timeout longer only for AIX, right ? \n. @Fishrock123  We have extended timeouts but not to the extent that I'd want to make all of the timeouts longer for AIX lat this point.  I'd prefer to just as an AIX check to this test.  If we end up having to change a significant number then I'd plan for us to change common.platformTimeout() as you suggest.  Does this sound reasonable to you ? \n. @Fishrock123, @jasnell  PR created on master: https://github.com/nodejs/node/pull/2891  could one of you review for me.\n. Landed on master closing this issue https://github.com/nodejs/node/commit/2853f9894fcecef5979d7ec2618c79760532253c\n. Sorry for the late note, but it may be useful to review were we are on the bar mitzva fix for 0.12.X and 0.10.X\n. I'd like to be on the list as we need to quickly address issues in the IBM internal builds as well\n. s/benchmark/benchmarks/  -> DONE\n. ",
    "cjihrig": "LGTM\n. +1 to porting this, even if it hasn't caused any problems in io.js.\n. This originally landed in joyent/node. It landed on the 0.10 branch, so I landed it in io.js in https://github.com/nodejs/io.js/commit/faa687b4be2cea71c545cc1bec631c164b608acd. It was later reverted in joyent/node in https://github.com/joyent/node/pull/9257 as a behavior change. It still lives on in io.js AFAIK.\n. I would like to be on the list.\n. +1. It only re-landed in 0.12 because it was a breaking change.\n. I'm not sure if this is the right week to do this with people out, but should we get the voting over and done with for the proposed TSC members? I don't think it will be very controversial.\n. LGTM\n. Sorry for the late notice. I won't be able to make it today.\n. I don't think we should do this in core. While Node can create a file that you can't remove using Explorer, you're able to remove the same file programmatically. This seems like something that would make a nice userland module though.\n. I tested on Windows 7, using fs.unlinkSync(). I'm not sure if it works on Windows 10. Calling for backup...\ncc @piscisaureus and @orangemocha \n. ",
    "orangemocha": "No objections from me on leaving those out. I think the rationale for introducing the flags was to mitigate the breaking change in a stable/LTS release. I think it's fine to drop the flags in the converged repo.\n. I think there might have been a bit of miscommunication around the topic of \u2018flaky tests\u2019. The point is not to to accept nor to ignore that tests are failing. The point is to enable an automated merge job, like node-accept-pull-request. (in fact, I think it would be best to rename the issue title to something more along those lines). \nnode-accept-pull-requests automatically merges changes, after rebasing them on top of the target branch and passing tests. We have found that useful because it pretty much eliminates the chances of anyone introducing regressions in the test set that it runs on. Using this merge job has ensured that a) nobody can forget to run tests on all platforms; b) nobody can make a mistake when pushing directly to the repo; c) changes are tested on the same final rebase that will be pushed to origin, so it\u2019s not possible for change B to be pushed between the time change A was tested and the time it is rebased/pushed.\nWe could argue whether this process is useful and whether there are good cases for not following it. But in the context of an automated merge job, support for flaky tests is must. Perhaps it\u2019s the terminology \u2018flaky tests\u2019 that stirs confusion. You may think of it as mere configuration for the node-accept-pull-request, to tell it which tests should not prevent an automated merge. Such configuration is versioned with the code, as it should be. But it\u2019s not used for anything else other than the automated merge job. Even in the automated merge job, failures for the tests that are marked as flaky are not completely hidden. Builds with failures in flaky tests are marked as \u2018yellow\u2019, instead of \u2018blue\u2019, and the TAP test results show the tests that failed, with a \u2018todo\u2019 next to the outcome.\nWhen a test is marked as flaky, a high-priority issue should be filed to follow up on the test flakiness, so that this test can be re-enabled again for the automated merge job.\nIn io.js you have been running CI on every PR, which is great. I am pretty sure, you have had cases where -say- John\u2019s PR was tested and some tests failed that you recognized as not due to the John\u2019s PR. Even if you fixed all the tests, this can always happen, as tests can be susceptible to environment or timing issues. When this happened, did you prevent John\u2019s PR to be merged? Of course not. You made the determination that the failure was independent from John\u2019s changes. Flaky test configuration allows node-accept-pull-request to do the same in an automated way.\nHaving this supported in an automated way allows for the process to scale. We can add more tests and more platform to verify every change that gets pushed to the main repo, and keep it manageable. Otherwise, we'll end up scribbling the same list of tests on a piece of paper. I think we should enhance this functionality, not remove it. It should be noted that this support in our test runner is based on support that was there in an ancient version of the v8 test runner. Since then, the v8 test runner has greatly improved support for this type of configuration.\n. My suggestion would be to implement a node-accept-pull-request -like job in the converged CI system, without making mandatory, but giving people a chance to try it and show its usefulness. Only if people find it useful, we can adopt it in a more systematic way. I think that should be pretty uncontroversial. \nBut there's no point in disabling support for flaky tests in the test runner. It does nothing different unless you pass --flaky-tests=dontcare as an option.\n. The current procedure is to file a P-1 issue and assign it to someone, at the time that we mark a test a flaky. We should probably also set a milestone goal. Not sure if we can do much better than that. If by the time the milestone date hits, the flakiness has not been resolved we can decide to hold up the milestone for it, or to postpone the issue. This is to say that unless a test is invalid, it's better to keep it around as flaky than to delete it. As I mentioned, flaky tests are run and their failures are shown (in yellow instead of red). Deleting a test really hides the failure.\n\nBut with rebase and fast-forward, of course, anything else is blasphemy.\n\n@bnoordhuis : yes, that's how node-accept-pull-request does it by default. It also has a merge option, which was intended for branch merges.\n. Update on progress:\n1. node-accept-pull-request is already implemented in the converged CI, and will support the current joyent\\node v0.12 workflow as soon as this PR is landed (which should happen in the next day or two). I plan on taking a shortcut for 0.10 and port a simpler job to support the current workflow, since we don't use node-accept-pull-request for it. After that, we can start transitioning joyent\\node collaborators to the new CI.\n2. node-accept-pull-request is technically ready to work in io.js though there are two work items (both on my plate) necessary to make it practical for wide adoption:\n- Adding support for flaky tests in io.js. \n- Reducing the time spent running the ARM builds\nIn terms of process for marking tests as flaky, I think the current process that we have used in joyent\\node is a reasonable starting point: we open a P-1 issue to investigate the flakiness and assign it to the next milestone, cc'ing the project collaborators. I will document this in the wiki by the time we announce the availability of node-accept-pull-request. If we find that this process is not sufficient we might want to consider assigning to specific collaborators, either the test/area owner or -if that's not available- any collaborator in a round-robin fashion. \nWith regard to this issue, I think the original misalignment that it was meant to track has been resolved, so it should be fine to close it. :smile: \n. As others have already pointed out, nosnapshot=1 sound not be set. Other than that, +1 for the vcbuild.bat change.\n. I won't be able to attend this time, sorry. I will read the minutes afterwards.\n. I also have to send my regrets today.\n. Will test this on Win10\n. ",
    "misterdjules": "That would also be a good candidate to mention in the documentation of potentially breaking changes between v0.12 and the next LTS version from the converged repository. @jasnell Do we already have a place to track these changes or should I go ahead and create it?\n. @jasnell I was looking at this again when documenting breaking changes between node v0.12 and the converged repo.\nIf I remember correctly, https://github.com/joyent/node/commit/69080f5474369fc7fc4be7ab74ad2e1619eb2fbc is a bug fix that is independent of SSLv2/SSLv3 support, and I would think we'd want to keep it. \nhttps://github.com/joyent/node/commit/8d045a30e95602b443eb259a5021d33feb4df079 (and subsequent changes to the tests that it adds) has proven to be very valuable to catch issues when upgrading OpenSSL. It's actually what helped us find out about the problen that https://github.com/joyent/node/commit/69080f5474369fc7fc4be7ab74ad2e1619eb2fbc fixes, and others. So I would suggest to keep that too.\nhttps://github.com/joyent/node/commit/d230fa9eb7364edac09f65a27e11718671d8e773 fixes a minor but still real issue with documentation. I would also keep that.\nReopening to make sure it doesn't fall through the cracks.\n. FYI, a RFC has recently been proposed about not using SSLv3 in any application.\n. I'm back from vacation and I finally had some time to take a look at this.\nThere is a lot of background info in https://github.com/joyent/node/pull/8751 and https://github.com/joyent/node/issues/8160. The goal originally was to fix issues such as https://github.com/joyent/node/issues/6447 and https://groups.google.com/forum/#!searchin/nodejs/_unrefActive/nodejs/Uc-0BOCicyU/9UcFbcBsdK4J.\nI also had documented this work here: https://github.com/joyent/node/wiki/Optimizing-_unrefActive, although this document is slightly outdated. For instance it doesn't mention what we ended up landing.\nThe unordered list implementation was known to be theoretically inferior, and an implementation based on a binary heap had been tested. The binary heap implementation was performing slightly worse than the unordered list but still much better than the original implementation. \nThe main issue with the heap implementation was that at that time we were not able to make a decision on how to integrate an internal heap implementation into the code base. My implementation was using @tjfontaine's binary heap module as a proof of concept, but I couldn't get any input from other contributors on whether or not we should add that as an internal module.\nA timer wheel implementation was left out initially because we thought that it might be difficult to tune and we wanted to explore what the performance was with an unordered list and a binary heap first.\nThe unordered list implementation was solving what was thought to be the most common use case, and seemed to solve the problem for users (see https://groups.google.com/d/msg/nodejs/Uc-0BOCicyU/mh21O3MGj94J) and we agreed to land it as a temporary solution until we could come up with a better solution either with a heap, a timer wheel or anything else.\nAs far as I know, we had just a small number of users who complained about _unrefActive's performance, so we have only very few data points on how users would be impacted by any change. That makes it difficult to make any informed decision. However currently it seems that:\n1. Only a very small number of users were impacted by _unrefActive's performance, and https://github.com/joyent/node/commit/934bfe23a16556d05bfb1844ef4d53e8c9887c3d solved that problem for them.\n2. https://github.com/joyent/node/commit/934bfe23a16556d05bfb1844ef4d53e8c9887c3d didn't cause any performance regression for the rest of users.\nIf that still holds true then I would suggest to:\n1. Land this change and continue the work on a heap based implementation (either based on my existing work or started from scratch) and any other way we can improve the performance of internal timeouts.\n2. improve the way we measure the impact of such changes on actual users, so that our decision process is driven a bit more data driven. I don't know how to do this except by trying to leverage our current communication channels with Node.js users and ask for feedback.\nHowever, if anyone feels strongly against this change, I would not push for landing it given our lack of objective data about how that would impact users.\n. @Fishrock123 \n\nWe have fully internal modules in io.js, unaccessible to users (.. accessible with a flag for testing purposes only.)\ni.e. require('internal/heap')\n@misterdjules Seems like that solves the main problem?\n\nThe problem with moving my heap-based implementation forward was not technical, it was a lack of feedback. Without a LGTM or feedback about what would need to change from anyone I was not able to make any progress on it.\nInstead, I got some feedback on the unordered list implementation and since that was already an improvement (based on my benchmarks and users feedback) I made the decision to push to land it and hoped to get more feedback on the heap-based implementation later.\n. Added more info about https://github.com/joyent/node/commit/6168fe6720650052728f3e78a495b723f0b41ce3 in https://github.com/nodejs/node/pull/44#issuecomment-108045509.\nRegarding https://github.com/joyent/node/commit/59265264d56cfb7ced87f9b3666ec570152c5f47 and https://github.com/joyent/node/commit/c0766eb1a4dac9d9b555be271ef84ad401ba91b0, the goal for these changes was to be able to run node on Linux systems with older C++ runtimes (like CentOS 5.7 and early 6.x, I don't remember the specific version numbers).\nThe way io.js solved this was to use the RHEL developer toolset to build a node binary for Linux. This toolset basically makes node links against a C++ runtime that is old enough to run on Linux systems with older C++ runtimes, and adds newer C++ runtime features with a static library linked directly into the node binary. I think this approach is better and I created https://github.com/joyent/node-infra/issues/4 to use it in joyent/node too. @mhdawson expressed some important concerns though here: https://github.com/joyent/node-infra/issues/4#issuecomment-100032893.\nIn other words: as long as node runs on Linux systems in wide usage that ship an older C++ runtime, we don't need these two changes. We'll need input from @mhdawson to determine what needs to be done on IBM platforms.\n. FWIW, here's the issue that was used to track upstreaming the V8 changes in the last commit: https://github.com/joyent/node/issues/9147.\n. @Fishrock123 It hasn't been upstreamed yet.\n. @jasnell There is no timeline. If it needs to be done quickly, please bump the priority in https://github.com/joyent/node/issues/9147.\n. I can work on upstreaming the V8 changes soon, but not today.\nAlso, what is blocking exactly?\n. @davepacheco @jasnell Created https://codereview.chromium.org/1296743003 to upstream one part of the V8 change.\nI don't think we want to upstream the other part of the change which adds fieldindex_mask and fieldindex_shift constants, since they duplicate existing constants with the same value. I just need to figure out if that will break older mdb_v8 versions loading newer V8 core dumps and whether this is a significant use case.\n. Sorry for catching up with that today, I'm just back from vacation.\nDid io.js get any github issue created because of breakage introduced by enabling strict mode in every built-in module? I would be surprised if no user had experienced any regression, since I expect the code coverage of the io.js' (and joyent/node) tests suite to not be 100%.\nI think that could be a good candidate to at least document in the list of changes between node v0.12 and the next LTS version of the converged node repo.\nThoughts?\n. @orangemocha and @rvagg know more about whether the flaky tests mechanism will be kept in the converged CI platform, so deferring to them.\n. FWIW, this gives a bit of context around this change: https://github.com/nodejs/io.js/issues/528.\n. Besides V8 snapshots, the point of having a build-release argument to vcbuild.bat was to avoid duplicating build parameters across Jenkins jobs when creating Node.js release installers on Windows. \nThat makes these jobs' maintenance easier: instead of modifying every Jenkins job, we just change what gets enabled when running vcbuild build-release in vcbuild.bat. Plus it's versioned.\nIf io.js doesn't have that, then I think it's a good thing to add.\n. Joining the discussion a bit late, sorry about that. There is already a security@nodejs.org mailing list, and a process outlined at https://nodejs.org/about/security/ that a lot of people have been using to report security issues. Why not start from here?\n@rvagg If you're interested in having control over the management of the security@nodejs.org mailing list, just say the word.\n. @rvagg Also, in case it wasn't clear, I should mention that Todd Benzies from the Linux Foundation is now managing the nodejs.org Google Apps domain, so it's really managed by the Node.js Foundation, not Joyent.\n. @bnoordhuis @tbenzies from the Linux Foundation can do that.\n. Sent an email to Todd Benzies and asked him if he can join this thread.\n. Thank you @tbenzies!\n. @bnoordhuis Thank you very much for the heads up! :+1: \n. I won't be able to attend this time, but I'll catch up with the meeting's minutes.\n. @bnoordhuis @rvagg Removed https://github.com/joyent/node/issues/25481 from the agenda, as work on that is done. Hopefully we will have another round of additions to collaborators soon.\nI won't be able to attend too, it's a holiday here. Have fun!\n. I also won't be able to attend.\n. ",
    "indutny": "Wait... we updated to OpenSSL-1.0.2 and backported ae8831f240f4477ab3372094d2207897fc5d1e17 from OpenSSL master. I suspect this should no longer be failing at 1024-bit certs with AWS.\n. LGTM\n. Thanks for the commit log :)\n. What is the reason behind introducing command line arg and env variable for overriding this? I wonder if it might be accomplished in the user land without doing this? Are there any people who requested it?\n. Thank you for the explanation! +1\n. Add me up.\n. Btw, it is probably a good manner to cc people when issue is created. Not everyone is watching the repo.\n. Sorry, won't join you tonight\n. It does not work yet with non-IO TLS (i.o.w. it always requires an fd), this is not going to play well with our internals. As far as it don't have this APIs, I don't see how it could be possible to use it in node/io.\n. ",
    "shigeki": "This commit is not necessary as noticed by @indutny .  The openssl team also backported alt-cert patch both to 1.0.2 and 1.0.1 so that we can revert this fix even on node-v0.12 after next release of 1.0.1n. \nRoot certs data in iojs has already been outdated from that of mozilla repository so I will update it soon. I think it is better to have the same updates on node.\n. Please add me to the list.\n. \"auto negotiation\" is made in TLS protocol level of ClientHello and ServerHello handshake.\nFor historical reasons for backward compatibilities, many TLS server accept old version format of TLS/SSL handshake. See  https://tools.ietf.org/html/rfc5246#appendix-E for details.\nBut we prohibit to use SSLv2/v3 after version negotiation in TLS handshake.\nAfter iojs upgrades to openssl-1.1.0 in future, we will no longer use SSLv23_method().\n. Sorry, I can't make it tomorrow morning. \n. I'm sorry that I can't make it this week. I have no objections for the agenda items.\n. ",
    "jbergstroem": "Clang could be a simpler install through package managers on those systems. Avoiding the gcc 4.8 is pretty much impossible if we want to use recent/stable v8's.\n. I have a pretty strong opinion about this as well. Hiding them won't really solve anything.\n. We just had a quick talk about this in the build meeting; I think the thing \"between us\" in terms of mentality is the merge-pr job -- since the amount of flaky tests we're experience is probably around 10 we should see what can be done about them, but to avoid holding things up we should indeed support a flaky flag and make sure we have a high priority on resolving them once flagged as flaky.\n. @orangemocha perhaps you could elaborate on what we ended yesterdays call with in regards to how you're procedure currently work?\n. ",
    "davepacheco": "@Fishrock123: (1) makes sense.  I don't understand \"Someone with knowledge of it has to actually update the biding for io.js/converged, I think?\".\nI assume you meant \"binding\", and that you're referring to mdb_v8?  So you're saying: given the V8 changes that have been pulled into the converged branch, the mdb_v8 module needs to be updated to work with Node versions from that branch?  I think that's a fine goal, but it's an unrealistic constraint.  Historically, we've updated mdb_v8 shortly before publishing a new major Node release (e.g., before 0.10, before 0.12), not lock-step with each V8 update in #master.  If there are resources to keep mdb_v8 more up to date, that would be great.\nThis should not be confused with updating gen-postmortem-metadata.py so that the software continues to build.  That's much less work than keeping mdb_v8 functional, and that does need to happen in lock-step, or V8 won't build.\nFor reference, I have moved the canonical copy of mdb_v8 to https://github.com/joyent/mdb_v8 to decouple it from Node.  I think we should assume moving forward that that project will be updated to support newer Node releases as soon as reasonable, but with some lag behind the V8 updates.\n. @bnoordhuis As I mentioned in my previous comment, there are two pieces of the postmortem support.  The V8 piece is just gen-postmortem-metadata.py.  We're happy to make sure that gets kept up to date (though I believe people outside of Joyent have generally been doing that, often without us realizing it, which has been okay).  The second piece is mdb_v8, which is not part of V8, does not generally break at build-time when V8 changes, and does not need to be kept up to date.\nIt's very important that we continue to build with the V8 postmortem debugging support even if the mdb_v8 updates are delayed.  That way, when mdb_v8 updates are made later, they will work with all previous versions that have the metadata.  If that metadata is disabled, then those Node releases will be undebuggable using these tools forever.\n. That sounds great.  (And thanks for taking care of it in the past.  I know it can be painful.)  If someone pings myself, @bcantrill, or @misterdjules when gen-postmortem-metadata breaks, we'll be happy to deal with it.\n. @Fishrock123 That's a good question.  One of the reasons we put this into Node core in the first place is because we build mdb_v8 into the Node binary so that the debugger can use that copy, so that users don't need a separate binary.  Support for this is not complete in our debugger, though.  The ideal situation for users of mdb_v8 is for Node to keep taking changes from upstream mdb_v8 and keep building it into the binary the way we're doing now.\nThere's also a postmortem debugging working group which has talked about elevating the role of postmortem debugging.  It would be nice if this were first-class in Node, documented, and the tools were available there, but that's up to the working group to talk about.\nIf there's a compelling reason to remove it, that would be reasonable, but all things being equal I'd prefer to keep it.\n. I generally fix v8ustack.d whenever anyone tells me it's broken.\n. For now, I would add a separate team for this.  The postmortem group has not decided exactly what it's going to cover, and undoubtedly there will be members there that care primarily about other tools and don't care about mdb_v8.  I would recommend putting myself, @bcantrill, and @misterdjules on an \"mdb/dtrace\" team.\n. Was postmortem debugging disabled?  I thought the only work necessary here was due to policy, and that's to upstream a small V8 change.\n. @rvagg I'm afraid there's no getting around the complexity, but it's not that complex: the Node binary has built-in metadata that mdb uses, but the mdb functionality is not in Node itself.  What's most critical is that the metadata be present, complete, and correct.  Then the functionality can come later without having to change Node.\nIf we also want to make sure the debugger functionality works when Node 4 is released, that's great.  Someone needs to test (and potentially fix) that.  I'm not sure I can prioritize that in the next week or two.\n. ",
    "Raynos": "On a similar note; What are we going to do about keeping src/v8ustack.d upto date ?\nI've used both dtrace and mdb for production debugging purposes; I'm actually more excited about having working dtrace (and our stap port) support iojs.\n. ",
    "nwoltman": "So should this commit be added to the io.js repo and not this new repo?\n. ",
    "andrewdeandrade": "Began work on this here:\nhttps://github.com/nodejs/node/pull/50\n. ~~I'm encountering a non-fast-forward error after I rebase this onto the current master of nodejs/node and try to push back to the iojs-to-nodejs branch on my fork. I've done stuff like this a million times, but can't figure out where I'm derping here.~~\nI just git pushed origin with --force since github knows how to deal with it and no one was working of my work yet.\n. @Fishrock123 I don't mind rebasing periodically to keep this updated if you think that's a worthwhile endeavor. Since most of the patches we're pulling in are coming from node, I figure it's better to switch over sooner than later. \nAlso, I'm new to contributing to node/io.js so if there are certain patches that you know need pulling in and are low hanging fruit, let me know. I have a vested interest in helping this convergence happen sooner, because we've been waiting for the dust to settle to upgrade from node 0.10.x.\n. @Fishrock123 Totally understand. I understand if the timing was not right, but a little encouragement and suggestions on what I can do besides rebase wouldn't hurt. This is my first PR and low-hanging fruit that helps with digging into the code base and orienting myself with what's in the repo.\n@jasnell perfectly happy to rebase every couple of days to once per week. Given the current pace of the migration, how long do you reckon until we're ready to merge this? Ballpark figure is fine here. \nAlso, QQ for both of you, what of the other open issues for the merge that are low-hanging fruit and suitable for those who are not new to NodeJS but only new to contributing to NodeJS?\n. ",
    "mscdex": "@sam-github The soundcloud account is here, but the 6/3 meeting is not up there yet.\n. ",
    "trevnorris": "Is there a passive participant position? Want to be part of this so I know what's going on, but doubt I'll have much to contribute outside of any security bugs I find.\n. Haven't created an issue for this because don't think it needs one, yet. Would like to discuss the need to update docs (probably https://github.com/nodejs/io.js/wiki/Breaking-Changes since we already have it) about what users will need to do with their upgrade. nan also has upgrade steps and I think at least a link to that is needed.\n. @rvagg I added https://github.com/nodejs/io.js/pull/1811 to the list. Though I also closed it because the PR was merged. The specific topic is on releasing a CVE. This may be better for the security group, but something we should get figured out.\n@bnoordhuis Not getting the TSC unnecessarily involved is my plan. Most I want this group to have to do is vote on whether any API proposals are okay.\n. Also add to the schedule, how to properly merge master branch into next.\n. We're going to need a test case to reproduce. Or at minimum a stack trace from a debug build from yourself.\n. The best way to get a stack trace is to run the script using the debug build. Though those are not available for download so it would need to be built for your system.\nIf that isn't an option then if you can provide me a more minimal test case (preferably one without any external dependencies) then I will be able to debug the issue for you.\nAlso, was there a previous version of node where this didn't happen? If so, what was it?\n. Thanks much. When building you want to run ./configure --debug to produce the debug build. Then in the folder there will be node_g which is the debug executable. If you can reproduce the issue with this then we'll have a lot more information to go on.\n. ",
    "tbenzies": "The following people have been added to security@nodejs.org:\n@rvagg\n@bnoordhuis\n@indutny\n@jasnell\n@cjihrig\n@shigeki\n@mhdawson\nHowever, michael_dawson@ca.ibm.com is bouncing -- is there a different email address that I can use?\n. ",
    "ahdinosaur": ":+1: to having a spec-compliant URL module in userland\n. ",
    "Sebmaster": "We're currently building a compliant URL lib as part of jsdom at jsdom/whatwg-url. The plan is to have strict spec conformance and closely track and align with the spec (although yesterdays/todays changes aren't in yet).\n. ",
    "stevenvachon": "@Sebmaster that sounds great. ~~Perhaps I'll use it in urlobj~~ I'm using it in specurl which aims to provide https://github.com/nodejs/io.js/issues/616 and more\n. ",
    "ChALkeR": "The convergence repo is probably not the right place to report node v0.12.4 (and npm@1.3.4) issues.\nRe-test with a recent version (iojs 2.2.1, npm 2.11) and, if still reproducable, report to nodejs/io.js (or npm/npm if this looks like an npm bug).\n0.12.x is supported at joyent/node.\n. @shenanigans A few questions here:\n1. Doesn't rm \\\\?\\D:\\whatever. (or rmdir \\\\?\\D:\\whatever., if it's a directory) work? If it doesn't, what error does it produce?\n2. Is it possible to create a file/directory using Node fs module that you couldn't later delete using Node fs module? If yes, could you share a testcase?\n3. What exactly are the differences in Windows 10 compared to previous versions? What \u00abold methods\u00bb are you referring to?\n4. What would be the expected behaviour in your opinion?\nEdit: AFAIK, the answer to question (1) is \u00abyes, it works\u00bb, and to question (2) \u2014 \u00abno, it's not\u00bb. If so, the problem is quite minor, but if you prove me wrong \u2014 it would make it a bit more serious.\n. ",
    "christianhaller": "I'm using npm@2.10.1 and posted this issues at npm/npm\n. ",
    "domenic": "My regrets as well, due to similar competing-meeting reasons with some TAG stuff.\n. I will not be able to make it today due to an all-day standards meeting.\nFrom: Mikeal Rogers notifications@github.com\nSent: Jul 22, 2015 8:53 AM\nTo: nodejs/node\nCc: Domenic Denicola\nSubject: Re: [node] Node Foundation TSC Meeting 2015-07-22 (#69)\nWe need to add an item to the Agenda to talk about the security policy. The Linux Foundation is sending Emily Ratliff from their security team to this one.\nIn fact, if we could jump that to the top of the agenda so that Emily can leave early that would be great.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/nodejs/node/issues/69#issuecomment-123768407.\n. My regrets as today is all-day TC39 funtimes.\n\nNext branch release versioning #2215\n\nI'll comment over there with my thoughts that I hope can be represented in the meeting, or at least read beforehand.\n. ",
    "asilvas": "Performance. Which is why I called out the need for an evaluation.\n. hah! Good point.\n. ",
    "KenanY": "@Mangulomx The stack trace seems to indicate that this is a bug in your own code and not with Node.js. I think an issue like this is best left to the Stack Overflow community to look at unless it can be demonstrated to be an issue with Node.js core.\n. ",
    "sourcewizard": "I can provide you with a code block. How can i get the stack trace?\n`````` javascript\n// ------------------------------------------------------------------------------------------------\n// Functions\n// ------------------------------------------------------------------------------------------------\nfunction padd(n) {\n    if (parseInt(n) < 10) {\n        return 0 + n.toString();\n    } else {\n        return n;\n    }\n}\n// ------------------------------------------------------------------------------------------------\n// Global variables\n// ------------------------------------------------------------------------------------------------\nvar fs = require('fs');\nvar chokidar = require('chokidar');\nvar mysql = require('mysql');\nvar xml2js = require('xml2js');\nvar io = require('socket.io');\nvar folder = '/mnt/rhotex320/HotFolders/PrintEvents';\nvar watcher = chokidar.watch(folder, {\n  usePolling: true,\n  useFsEvents: false,\n  depth: 1,\n  interval: 1,\n  atomic: false\n});\nvar parser = new xml2js.Parser({\n    explicitArray: false,\n    trim: true,\n    mergeAttrs: true\n});\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = padd(date.getMonth() + 1);      // From 0 to 11\nvar day = padd(date.getDate())              // From 1 to 31\nvar hours = padd(date.getHours());          // From 0 to 23\nvar minutes = padd(date.getMinutes());      // From 0 to 59\nvar seconds = padd(date.getSeconds());      // From 0 to 59\nvar dateTime = year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n// MySQL connection\nvar pool = mysql.createPool({\n    host: 'XX.XX.XX.XX',\n    user: 'myser',\n    database: 'mydb',\n    password: 'mypassword'\n});\n// Socket.io\nvar socket = require('socket.io-client')('http://mydomain:3000');\n// ------------------------------------------------------------------------------------------------\n// Initialize Watcher\n// ------------------------------------------------------------------------------------------------\nwatcher.on('ready', function() {\n    watcher.on('add', function(path, stats) { \n        // Read the XML\n        fs.readFile(path, function(err, data) {   \n            // Parse the XML\n            parser.parseString(data, function (err, result) {\n                var job_state = path.split('_').slice(-1).pop().split('.')[0];\n                if (job_state == 'printing' || job_state == 'done') {\n                    pool.getConnection(function(err, connection) {\n                    var resultJobState = result.sequence.sequence_entry.state;\n                    var resultJobName = result.sequence.sequence_entry.job.job_name + '%';      \n                    var resultPrintsDone = result.sequence.sequence_entry.job.number_prints_done;\n                    var resultNrToPrint = result.sequence.sequence_entry.job.number_to_print;\n                    var statusCode = (resultJobState == 'Done') ? 2 : 1;\n\n                    if (parseInt(resultPrintsDone) === parseInt(resultNrToPrint)) {\n\n                        // Here we want to update the status to done!\n                        var q1a = connection.query('SELECT * FROM `nests` WHERE `job_name` LIKE ? AND `job_state` != ?',[ resultJobName, 'Done' ], function(error, results, fields) {                                                               \n                            if (typeof(results[0]) == 'object') {\n                                var q1b = connection.query('UPDATE `nests` SET `printed_item` = ?, `nr_of_prints` = ?, `job_state` = ?, `statuscode` = ? WHERE `job_name` LIKE ?',\n                                    [ resultPrintsDone, resultNrToPrint, resultJobState, statusCode, resultJobName ], function(err, result) {\n                                    socket.emit(\n                                        'Rhotex 320 - Job State', \n                                        [{\n                                            path: path,\n                                            job_name: resultJobName.split('%')[0].trim(),\n                                            affected_rows: result.affectedRow,\n                                            job_state: resultJobState\n                                        }]\n                                    );\n                                });\n                            };\n                        });\n\n                    } else {\n\n                        // Here we want to update the status to printing!\n                        var q1a = connection.query('SELECT * FROM `nests` WHERE `job_name` LIKE ?',[ resultJobName ], function(error, results, fields) {                                                                \n                            if (typeof(results[0]) == 'object') {\n                                var q1b = connection.query('UPDATE `nests` SET `printed_item` = ?, `nr_of_prints` = ?, `job_state` = ?, `statuscode` = ? WHERE `job_name` LIKE ?',\n                                    [ resultPrintsDone, resultNrToPrint, resultJobState, statusCode, resultJobName ], function(err, result) {\n                                    socket.emit(\n                                        'Rhotex 320 - Job State', \n                                        [{\n                                            nestcode: results[0].nestcode,\n                                            path: path,\n                                            job_name: resultJobName.split('%')[0].trim(),\n                                            affected_rows: result.affectedRow,\n                                            job_state: resultJobState\n                                        }]\n                                    );\n                                });\n                            };\n                        })\n\n                    }\n                });\n            }\n        });\n    });         \n});\n\n});\n// ------------------------------------------------------------------------------------------------```\n``````\n. Well what i can say is that i compiled and installed it from scratch. I downloaded the source from the official site. The operating system i used it on was an old linux distro running Debian 6.0.\nPreviously i ran v0.12.3 then i got the same error only on line 75.\n. Thanx! I'll work on it today.\n. Trevor,\nYou i wil close this for now. Someone else in my team working on the problem right now.\nThanks for your help.\n. Hey there,\nWell it doesn't occur anymore because we rewrote the scripts. It seems to appear only when there is some kind of memory leak on the system. But to answer your question more clearly no they did not resolve it, they just rewrote the script and the error does not occur anymore.\n. ",
    "domarmstrong": "And did they resolve the issue? I am getting the same error\n. Well I have resolved my issue. Turns out my VPS had run out of disk space.. Nice and obscure error message didn't help too much.\n. ",
    "realshadow": "Reopening after https://github.com/npm/npm/issues/8880\n. Turns out it happens when NFS mount passes 260 characters limit, so the corresponding issue should be solved in winnfsd\n. ",
    "andigehle": "Same issue here!\n. ",
    "techjeffharris": "Are TSC Meetings still being published to Youtube?  Overviews are nice in that they are succinct, but Its nice to review the full conversations.  Perhaps the video has not be published yet...?\n. > They are now posted to soundcloud.\n:+1: The video is mostly irrelevant anyway.\n\n(I think it's up-to-date.)\n\nIt appears so.\nThank you!  I'll link to your comment in the issue I created then close it.\n. > > (I think it's up-to-date.)\n\nIt appears so.\n\nI take that back. None have been uploaded since May.\n. Thanks for jumping on this so quickly especially considering how busy you all are already!  :)\n. @Fishrock123 , I haven't seen anything uploaded to the Node Foundation SoundCloud user since I created this issue (actually, last upload was may 27).  Perhaps some tooling has snagged..? \nI understand that this is a lower priority than the actual product itself. Is there anything that I can do to help?\n. Great, thank you.  I'll keep my eyes open and ping back when I see uploads for the record.\n. @rvagg, @mikeal\nFYI: last week I saw a couple TSC meetings uploaded to https://soundcloud.com/node-foundation (06/03, 6/17), but have not seen any since then.\n. ",
    "sthomas-github": "If I should instead be posting this to https://github.com/joyent/node/issues, please let me know.\n. My apologies, I clicked the wrong button and closed the issue by mistake.  --Steve\n. Thanks, Ben.  \nRe: IDEA, I take it that we would need to recompile Node after adjusting the openssl.gyp file, or do I have that wrong?  Can it be disabled otherwise in javascript code without rebuilding? \nI don't know as much about the legal status of IDEA, so I will need to look into that in more detail.  \nThanks again!\n. Some information on IDEA: http://www.quadibloc.com/crypto/co040302.htm\n. Thanks, Ben.  Your help is much appreciated.  --Steve\n. When I run the getCiphers() command above, I don't see RC5 or MDC2, as Ben indicated.  I do get a few IDEA-based ciphers:\n\n'idea',\n'idea-cbc',\n'idea-cfb',\n'idea-ecb',\n'idea-ofb',\n\nIt looks like I might be able to exclude the IDEA algorithm from the ciphers used, as shown on this page, where !RC4 is used (as an example).  Perhaps I could do the same with !IDEA.  I'll give that a try, and if it works, perhaps that will be sufficient for the lawyers. \n. ",
    "kyriosli": "I simplified the code to to the following:\njs\nvar cluster = require('cluster');\nif (cluster.isMaster) {\n    cluster.fork();\n}\nbut the child process is not exiting because there is internal message listeners. So Making unref work well will not make a change.\nBut I think we should at least avoid the error to be thrown, maybe a patch to the net module that ignores the unref call when cluster.isSlave is true will do?\n. ",
    "agnat": "Edit: Add formatting to work around github markdown angular bracket issues.\n. sigh... ok, will rebase ... again. Thanks for the heads up, though.\nTo clarify: Rebase on master nodejs/io.js, right?\n. k, thanks again. Closing.\n. ",
    "thefourtheye": "LGTM, but this is a breaking change. Also, I think the function name doesn't match the functionality\n. ",
    "shenanigans": "This might be a new win10 issue, and I'm (rather hopelessly) attempting to raise the issue with Microsoft, but I haven't had tons of luck removing them programmatically either. edit but good point, I'll go check if graceful-fs is doing this yet\n. That's...... odd. I fought with this quite a lot yesterday. When I shut the system down last night my stubborn directory still stood. Looking at it again now, about 24 hours later, it's disappeared all the way back to a distant parent directory. Making a new badly-named file I can't reproduce the bug at all. My face right now dot jpeg.\nI'm starting to think this might have just been a Win10 bug all along. Wouldn't be the first filesystem-related screwup.\n. @ChALkeR Windows native del is handling this ok, today. The \"old method\" I mean is the incantation rd \\s \"\\\\?\\c:\\etc\". I basically can't reproduce the issue right now (and feel properly silly about it) but whenever one of these commands fails it acts like the file or directory cannot be found.\nIn answer to number three, at least as an example, what's new about Windows 10 on my system is that every time windows update queues a reboot it logs a bad hard drive sector and crashes. I'm less than comfortable with the integrity of its filesystem at this point.\nAs for expected behavior, the existing behavior for improper filenames seems acceptable to me.\n``` javascript\n\nfs.writeFileSync ('()_$', 'cheddar cheese')\nError: ENOENT, no such file or directory 'c:\\data*()_$*'\n```\n\nThe file descriptor fails to open and cannot be written. That fault may be easy to produce artificially for filenames that just should not be written. And I've heard a rumor that writing sketchy filenames can get antivirus software angry about your script...\n. ",
    "hemanth": "\n. "
}