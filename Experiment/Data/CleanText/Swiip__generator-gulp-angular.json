{
    "Swiip": "Hi,\nI think I have an idea for your problem. Unlike the grunt angular generator, to launch the livereload server, you have to launch the watch task. The watch task will launch the server.\nI agree it's a little disturbing but it's inherited from the gulp-webapp generator.\nMatthieu\n. No response for a while, I close this. \nIn addition your problem is link to a feature replaced in the last version.\n. Thanks! But even if we know each other you should edit and write in english ;)\n. Nice, it surely looks better! Thanks a lot!\n. Sorry for the connect task, I forgot to update the e2e test tasks after switching from connect to browser sync. I'll fix this soon.\nHowever, the protractor-only works for me. Can you give more details? OS, copy of the error...\n. I didn't realize but protractor needs phantomjs to be installed globally. You can test quickly with npm install -g phantomjs. \nThe doc gives a way to use an embeded version of phantom, I'll use this for the next version...\nhttps://github.com/angular/protractor/blob/master/docs/browser-setup.md#phantomjs\n. Thanks. (Sorry for the delay)\n. Yes, I need to fix that... Thanks\n. Hi,\nI don't succeed to reproduce your problem, can you give more information ? When do you get the error, after answering the questions ?\nIf you are on windows, perhaps it's only npm which are failing (it appens), try to re-run npm install. It could be enough.\nI can use also other info like : os, version of the generator, answers in the generator...\nMatthieu\n. After tried to update and reinstall all my node js modules, I finally found the problem.\nAs a last operation, the generator use a gulp task and assume gulp is installed with \"-g\".\nIt's neither documented nor unavoidable so it's really a bug.\nAs a workaround you can simply type npm install -g gulp and gulp wiredep or restart the generator. But I keep the issue open until I provide a real fix.\nThanks for the report.\n. I've added the gulp installation in the usage section. I think it will be enough.\n. Hi, thanks for the report.\nIt seems that the partial bundling is failing. I try a quick look and nothing obvious seems wrong, I will diff into it shortly.\n. Thank you very much, I think you point the problem, I must have changed the URL with a leading / which prevent the URL preloaded to match\n. By choice, I prefer focusing on adding more framework options than adding this kind of tasks but I know it's a moot point.\nI'm not opposed to this features but I don't prioritize them for the moment.\n. I really enjoy yeoman generators for the customizable project seed part, not so much for the generate each kind of components part. But it's only preference.\nAs I've got a limited amount of energy to give to this project, I prefer investing on the part I prefer.\nI would love to add options like script loaders or js preprocessor which are complicated to develop. So it gives me no time right now to address \"less liked\" features.\n. I think your problem is a duplicate of #8 which has been corrected in the last version (0.4)\nThe partials are meant to not be present in the dist dir. The workflow it to minimfy the HTML, transform them in JS, and inject them in the JS stream process.\nCan you update the generator and retry?\n. In your gulp/build.js line 33, have you a leading / in the prefix property?\nI made several tests, without this / and with no leading / in the template URL of the routeProvider, it works for me.\n. whew! I'm relieved :)\nTo update an already existing project, the process is to rerun the generator on the same folder. Don't worry, it will not overwrite any of your files, it will ask you for each files in conflict. Tip: type h in a merge to see your options.\n. Hi and thank you.\nIf I have tried some git based deployment like Heroku, I never had an intense use. I don't feel right to give advice on the matter sorry.\nThe solution, you give seems ok. Maybe it's possible to package this in a Gulp task inheriting from build. This needs to be dug a little more to find the right way.\n. I agree it's out of the scope. I still keep the idea for an hypothetic last question which could look like \"optional tasks\"...\n. Hi and thanks :)\nThere is something which not work as expected indeed.\nI've already noticed strange behaviors on rev and revReplace on Windows. It could be it. I'll look into it.\n. The built-in server is BrowserSync. I quickly checked if there is an option about the Content-Type but there is not.\nStill, BrowserSync allows to add any connect middleware. It should be possible to add one specialized on the Content-Type handling. You can look at the model of the proxy middleware to add a middleware to the server.\n. Thanks for the corrections (and sorry for the delay) !\n. I submitted a PR on your project to give you a hint. (https://github.com/MattCowski/gulp-angular-jade-coffee/pull/1)\nI hope this features will be included in this generator at one point.\n. Protractor is such a de facto solution for e2e testing an Angular application that I can replace it.\nBut why not add a nightwatch task next to the protractor one.\n. Thanks for the update!\n. How do you installed Node.js on your Ubuntu?\nTo my knowledge, the Ubuntu standard installation of Node.js (https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#ubuntu-mint-elementary-os) as a particularity that you have to use npm in sudo mode.\nIt could be your problem. Try just use sudo npm install in the same directory after using the generator.\n. Thanks, I forgot it. I will quickly fix that.\n. Thanks!\n. It was planned from the beginning, it should definitely exist.\n. Thanks a lot. I'm in hollyday with a poor connection right now. I'll merge and check for all updates as soon I come back at the end of the week.\n. Thanks for the good work!\n. Yes, this a wanted feature from the beginning.\nThe problem you describe is why it's not done already. I think I'll simply use the best version possible and use the css compiled version as a fallback.\n. Checkout the master version. You can now choose to use less in place of sass.\n. I'll work on a bit of design of the page without css framework before releasing\n. Thanks!\n. You're right. The new css management from bower inject the foundation css file automatically. But as we use sass, we didn't want this.\nBut when sass will be an option, I have to find a solution to handle this correctly.\n. I have to digg a little deeper but I think that is because of the bower wiredep task.\nThe wiredep task add automatically css and js files from the bower configuration in the index.html. I didn't added the foundation.css in the html myself so it must be wiredep.\nI have to find a solution to not kill the wiredep mechanism but still ignore this file.\n. As you explained it, there is a lot of workaround but the right solution is difficult to find.\nI just develop the exclude solution, but it excludes also the js inclusions, it could not be what we want.\nI look deeper at wiredep and it's able to edit the the scss file to add the @import statement which looks great but the bower.json file from foundation target only the css file, not the scss one so it will not work.\nI'll push what I've got for now but I think I will finally remove the css tags for wiredep in the index.html and handle all this myself.\n. I'm the first which doesn't like the ruby dependency so I like the gulp-sass idea.\nAs I want to provide a choice between the CSS preprocessor, I think it should be possible to add the choice in the same question.\n. I found time to work on the pre processor option. You can choose now between sass, less and none but also between sass in ruby or node. node-sass works indeed seamlessly\nYou can beta test with the master branch or wait for the next release..\n. Hi, sorry for the delay. Yeah, I think that Gulp is really bound to the project but Angular not so much. I think it could be quite easy to remove it.\n. It's the wanted behavior or at least the standard from Yeoman.\nYou can find in my readme and the same in the generator-angular the line : Make a new directory, and cd into it.\n. I forgot to add that the app name is not useless.\nIt's used inside the generated project as the main Angular module and the name of the main file.\n. There's a mechanism inherited from gulp-webapp to inject and bundle css files with bower / wiredep / useref the same way it's done for the js files.\nIt could have been nice but there is a lot of problems (one of witch is discussed on #30) because of the usage of css preprocessors and the bower configuration of the librairies.\nI think I will remove this mechanism really soon (and vendor.css) really soon.\n. It's a bug of gulp-rev-replace on windows: jamesknelson/gulp-rev-replace#1. It has been already highlighted on #12.\nIt's already fixed, I have to publish a release to deploy it.\n. Can you test with the 0.4.1 release to confirm it's ok?\n. I understand your motivations but there is implications.\nOnly the directories app and .tmp are served by browser sync so if I remove bower_components from the app directory, lots of things will breaks.\nIn addition, it's a standard directory structure from grunt-angular and gulp-webapp generators.\nWith these problems, I don't think it's reasonable to make that change.\n. Very interesting thread, thank you for sharing. I'll look to follow their conclusions...\n. It was not an easy one. Moving the bower_components outside the src folder makes the work of findings the right urls for the libraries not implicit.\nI looked a lot at what they done on generator-webapp to achieve this. It should work now.\n. I think it's an interesting feature, I'll try to add it shortly.\n. In fact, I've willingly removed this code recently.\nIndeed, we don't want css insertion in most of the cases because the imports are made through the pre processor.\nMore, the bower configuration of the frameworks for the css files are frequently incomplete so this feature ended up with more problems than benefits.\nThe upcoming 0.5 version changes quite the css bundleling I hope for the best. But I still didn't use the bower injection of css links.\n. It's a tough call. It brings confusion in many cases but can still be useful... Don't know what I'll doing right now.\n. You perfectly sum up the situation. At first, I didn't want of wiredep, I didn't want that something mess up with my index.html. Then, I seen it appear in several generators and I began feeling like the old-school-afraid-of-change guy so I took it.\nBut it's still complicated and disturbing, even more with the style dependencies which depends on your preprocessors.\nI'm pretty sure that whatever the decision I take, there will be complaints. And transform this in an generator option would be really complex.\nPerhaps, the best solution is to wait to handle script loader and the question will be very different...\n. I end up with the same conclusions. I restored wiredep for css.\nI'll reconsider all of it when (and if) I start working on the script loaders.\n. First of all, it doesn't seem to me a very a good way of approaching a project by simply trashing its reason of existence. But I'll try to answer...\nGulp is really different than Grunt and I don't think it's possible or desirable to merge this project with any Grunt based generator. More, I think no maintainer of a Grunt based generator will want this kind of PR.\nRemains the official gulp-webapp generator. I started small and alone and I didn't feel right to launch PR about angular on an official and agnostic generator with 500 stars. \nNow that I've done some work I come to consider the possibility of transforming Angular to an option of this generator and by this become compatible with gulp-webapp but I don't know if getting all my options interest them.\nFinally, there is one or two other generator specifically with Gulp and Angular. But the different projects started more or less at the same time. It could be interesting to look at the possibility to work together but it means lots of emails and works that I can't produce at this time.\n. Angular fullstack and meanjs are both client and server side, it's really different approach and goals.\nWe could perhaps benefits from the help of each other but once again you forgot about time, work and investments.\nLast about stars, I just mentioned stars to have a quick overview of the importance / usage of the project.\n. You're right! I missed it...\nIt's hard to deeply test a generator, I'd love find a way to secure this kind of thing.\n. It's fixed and will land with the next version.\n. Weird, I added plumber exactly to resolve this problem. Anyway, I'll test on each preprocessor to secure this behavior.\n. I checked and confirm your point, I made the change for the next version\n. I forgot to update the version number in fast mode. I'll fix that...\n. Look at the gulp/server.js. I demonstrate in this file a feature which ables you to activate a proxy in the browser sync server based on a pattern in the url.\nUnfortunately I took a shortcut setting the default pattern to 'api' and that is your problem because it's trigger the proxy you didn't want.\nSimply change the proxyApiPrefix value or completely delete the proxyMiddleware and you'll not have any problems.\nI keep this issue open to remember find a better default configuration.\n. Should be fixed with the PR #45 \n. Thanks! \n. I don't really reproduce this but it couldn't hurt to update this plugin so I will take this change.\n. It's fixed with a general update of the dependencies. Will land in the next version.\n. Duplicate with #41. Fixed for the next version.\n. I made a mistake updating the version of bootstrap for the advanced mode but not for the fast mode. From 3.1 to 3.2, the path has changed...\nI fixed this, it'll land in the next version.\n. fixed\n. The path error is not the mistake, the problem was identified in the issue #48.\nThe version of Bootstrap was not the same in the fast and advanced mode. It's already fixed in the master version.\nThanks anyway.\n. No problem, I had use Coffee myself and try to keep an open position on this.\nCoffee is a target from the beginning. My goal is to give the choice for the preprocessors for the 3 off the web technology: JS, CSS and HTML.\nI've just released support for the CSS preprocessor in the last version, the next version will definitely target JS preprocessors: Coffee, TypeScript and ES6.\n. Could be great, I was about to start working on it. But watch out, there was a big refacto just merged and adapt it could lead to bit of work.\nAt least, would you point us your work as an inspiration (I didn't find the repo on your GitHub account...)\n. I was talking about #120 indeed.\nI agree that gulp 4 and gulp-ruby-sass 1 will be majors updates for us but I'm always afraid of freezing something here waiting for other to update because we have so much dependencies that we'll wait forever.\n. It's not the first time that the example values for the proxy are creating problems sorry.\nAs it has been already said, the problem you see in Chrome Dev Tools is because de server has crashed and then, the web socket can't connect.\nIs it possible that \"server\" (the default value of proxyTarget) resolve to something on your network? I tried by changing my hosts file but I didn't succeed to reproduce it.\nI'm considering completely comment the proxy feature by default to avoid \"standard\" configuration issues...\n. Awesome! I really was wondering the root of this problem, thanks!\n. Thanks for this investigation. I'm interested and worried about this issue but unfortunately I don't have the time to work on it right now.\nIronically, it's because I work on a talk about this project!\n. Thanks for all this analysis.\nThe first point is that it lacked an error handling on the proxy service which ables the proxy to fail requests without stoping BrowserSync.\nBut thats not a real solution for all the problems. The main problem about source maps is explained by the fact that sass enabled recently the source map by default. My sass installation was outdated. I now reproduced the problem and as you suggested added scss and map extensions in the filter of the proxy.\nFor the html5mode and the modrewrite, I didn't yet bring a real correction but I will.\nI keep looking at the problems of gulp-ruby-sass sourcemap to bring sourcemap by default when it will possible.\n. Standard error handling has been added in the last version  (0.6). I created new issues for the other problems in order to close this one.\n. Can you try disabling the proxy service in your gulp/server.js file ?\nThe standard mechanism of BrowserSync should work offline and don't break of any kind of network configurations...\nYou confirm that you contact your BrowserSync server in localhost?\n. I agree, I'm not very clear about this. I quite like the new best practices but still I'm still too used to have my files split by type.\nIt impacts the build configuration because it remove the ease of having each types of file in an identified directory. \nStill, I can assure you it's possible because I got this in a private project. In fact, selecting files by extension is enough.\nI really considering this change for a next release but I wanted to start closer to the gulp-webapp example.\n. Seems that my project reached the popularity where you can't keep shit in your readme without being exposed :)\nOk right, I'd put this thinking I will take at least some part of it but I must agree that I haven't kept nothing at all. I'll fix that and follow the best practices.\n. Yes of course, optimizing by using incremental build is one of my goal from the beginning...\n. It's one of my goals from the beginning. But I could be a very complex one, I have to remove all references to Bower and move the front dependencies to NPM.\n. Concatenation is already handle in the generator by gulp-useref.\nThe process works as it is, and I'm the first not using a script loader with Angular, I know it's not mandatory.\nStill, I see advantages to such solutions and I indent to support them as an option.\n. I'm interested but I'm certainly not ready to remove webpack. So it would be an option switching webpack or browserify but definitely not in a close future. I think the tag \"good-but-no-time\" is appropriated.\n. I faced the same problem, the cache system is really extreme, I had moved some images and it never found them.\nI think we should relocate the cache files into the project in order to delete the files on a gulp clean or create a task gulp clean-cache.\nAlso, on Mac (10.9), the temp directory is not /tmp but a strange path that ce can know with a echo $TMPDIR\n. I added such an error handling in the 0.6, thanks!\n. You have to change the browser option of BrowserSync. It's currently set as 'default' with this line :\nbrowser = browser === undefined ? 'default' : browser;\nI suppose you have Safari as default browser. You can change this with this line :\nbrowser = browser === undefined ? 'google chrome' : browser;\nMore information here : http://www.browsersync.io/docs/options/#option-browser\n. Thanks\n. Thanks!\n. Yeah, I seen this. The error log is weird, not sure it's the fault of the PR. I'll check this later.\n. Thanks!\n. This is awesome, thanks for the huge work. It looks like exactly the changed needed for the directory structure that we discussed, thank you so much!\n. Indeed, foundation is willingly ignored in wiredep. You can see this in gulp/wiredep.js.\nBootstrap and Foundation are ignored for wiredep because the dependencies of the styles are handled directly in the CSS preprocessor (when it's possible). Check your main/vendor.scss to find a @inject.\nIn the case of Bootstrap, we will not neither the JS because it's most of the times not used in profit of an pure Angular version (Angular UI Bootstrap & Angular Strap). So I reproduced the idea for foundation by ignoring the JS allowing the user to import the JS files he wants.\n. Seams to be linked to a problem with Foundation and Sass 3.4.\nhttps://github.com/zurb/foundation/releases/tag/v5.4.5\nhttps://github.com/zurb/foundation/issues/5811#issuecomment-56975540\nI keep looking to find a workaround...\n. I succeeded with the following operations (I'm not a ruby guy, so I do what I can):\n- Put a Gemfile in the root of the project directory with this content:\n```\nsource \"https://rubygems.org\"\ngem \"sass\", \"~> 3.3.0\"\n```\nIt'll force ruby to use the previous version of sass\n- Run bundle install to actually download the gem\n- Modify gulp/build.js to add an option to the gulp-ruby-sass task:\n.pipe($.rubySass({\n  style: 'expanded',\n  bundleExec: true\n}))\nIt'll ask the gulp task to use the bundle version\n- It should work :)\nI don't know if all of this has to be added to the generator as they are temporary problems from another libraries... Perhaps we should start some sort of FAQ on the repo's wiki.\n. I would love that (I'm a great fan of Node) but with two points:\n- With all the other things I've got still in mind and the time I've got currently, it will not be for tomorrow.\n- If it has to be done, it could not prevent people from using without Node so I have to find a way of composing an express generator and this one... Or creating a new generator but it would be so much copying...\n. I know about this feature, but what is a good full stack build system? One for the backend and another for the frontend or one big for both. If it's the first solution, so we can compose, if not, it looks complicated...\n. To be honest, I much prefer separation between frontend and backend. But most of the MEAN seeds I've seen use only one build system so I thought I was alone :p\nWe could create a generator-gulp-express and finally a generator gulp-mean which is composed of the both. It would be great!\n. It should work with not much effort than a bower install ui-bootstrap. Wiredep should add the scripts needed automatically. Oh yes, you'll have to add the module in dependence in app.js...\n. Thanks!\n. The easiest way is to put the dist css files at the same place than in a dev mode. To do that, you have to change in the index.html this lines:\nhtml\n    <!-- build:css({.tmp,src}) app/main/vendor.css -->\n...\n    <!-- build:css({.tmp,src}) app/main/main.css -->\nBut to be honest, that's a bug, I think we have to use this configuration in the generator.\n. I moved the vendor.scss one directory up, in app. This should correct your problem.\n. I just tried to serve .json files through browser sync and it's working.\nDo you use the latest version of the generator (0.6) with the new directory structure or not?\nIn the new directory structure, the app folder is no more the root of the web server, so the url of your files should contains the app/ prefix.\nHave you tried to manually request your json files from your browser without angular translate to check if it's working?\n. There is still something strange, the proxy has been moved to a new file called gulp/proxy.js and is deactivated by default in the version 0.6. You should not have the proxyMidleware in the gulp/server.js.\nI've done this exactly to avoid proxy rules problems :p\n. Yes, I think it's because de the proxy is disabled, if you activate it, as the json extension is not in the static regexp filter, it will be redirected into the proxy...\n. As I didn't start working on this integration, I don't have many hints to give.\nWhen I will start, I'll looking at first at the TodoMVC for Angular and Require here:\nhttp://todomvc.com/examples/angularjs_require/#/\nI think it's a good start to find how to do it.\n. I think your perfectly right.... Starting from the issue #75 we was asking ourselves the same questions.\nThere is some adjustments to make with the new directory structure...\n. done ;)\n. Thanks for reporting. There is some issues with the file reorganization, the next release will fix this.\n. :+1: \n. Thanks to reporting. \nI suppose that we don't add jquery in bower but it's still there by transitivity of Bootstrap.\nWe'll work on this...\n. It doesn't change much but I agree that the best is to simplify the compile.js rather than _bower.json.\n. Thanks!\n. We had some hard time figuring out the problem. But in fact, it's a good old synchronisation problem.\nYou can fix it by using the callback in the clean task. We'll also commit the fix:\njavascript\ngulp.task('clean', function (done) {\n  $.del(['.tmp', 'dist'], done);\n});\n. The point is to inject the JS format of your template in your scripts and not having them in production.\nWhen Angular loads the template, it will use the $http service which is plugged to the $templateCache service. If your template is injected in the $templateCache, everything should works as expected.\nAre you working on the root of your domain or you URL is more complex?\nCan you perform some more URL tests? Ideally through the $http service of angular to use the same cache system...\nBy trying to reproduce your problem, I faced something which looks likes a not linked bug. When the template and the directive have exactly the same name (except the file extension), there is an overriding of the template in the js form and the directive source itself. To be sure, do you have the two files with the same name or not?\n. You didn't precise where you located your dependencies because there is a lots of comments anchor which trigger auto imports.\nIf you put your script tags yourself inside the anchors of wiredep (<!-- bower:js -->) they will be overridden.\nIf you installed ui boostrap with bower like recommended, I just checked that wiredep take only in considerations what you've got in your bower.json file so if you forgot the --save option to update your bower.json file, it will not inject the dependency for you.\nYou can add your scripts manually outside of the <!-- bower:js --> anchor but you have to stay in a <!-- build:js ***--> to keep benefits of the build mechanism.\n. Interesting, I didn't know about this gulp plugin. It's quite new though...\nIt can be a stylish solution to the problem. I'll look into it.\n. :+1: \n. Interesting proposition. Even if I don't use Windows, I'll love to ease things to Windows users.\nStill, image optimization is often neglected and keeping it seems interesting to me. We have to find a solution to make this optional or at least well documented.\n. Not really related but I added a fix for #80 in the PR\n. You both well argued so it's difficult to make a choice :)\nI think I will go for the index file. The app name as a file name is cute but can brings to strange situations.\n. I think I'll try to address the #37 in the same branch. It would create a nice src folder with only project source code...\n. It's inherited from the others generators... At least gulp-webapp. I'm not a specialist, we should look at the features of modernizr.\nI'm afraid this question will lead to the fact like: it's needed only for IE7- compatibility. It will ask a new question: what is the compatibility requirement of this generator?\nBeside all of that, I don't know why it's there and I tend to remove it.\n. Hi, sorry for the very minimal activity, thanks @zckrs for the backup!\nI was thinking of keeping deps url with bower_components and not ../bower_components and using (.tmp,app,.) in the html.\nBut your solution is better. I was thinking that it can't work like that but obviously it does...\nGo!\n. This looks great! Having to put the selenium jar version inside the files of the generator was a burden for the reason you explained. I didn't know but it's nice that protractor fix this.\n@zckrs can you just test the protractor tests from a blank generator? Travis doesn't run protractor tests (never achieve to make it work) so we have to check manually.\n. Looks you found something. We just recently moved the folder and obviously not changed the .gitignore accordingly.\n. Thank you so much for this feature I wanted to add myself.\nJust wait a little for me to be able to have a look at your code.\n. Looks great! Go?\n. Thanks!\n. Perfect :)\n. Keep faith, I'm working on it right now :)\n. Thanks for the support, I would ask if I have any problem!\n. Even if I didn't originally prioritize this feature, I agree it's needed. We have to find time or contributors because this represents lots of code.\nI still close this issue as a duplicate for #9 \n. There was some breaking changes in the last versions of sass. Which version has you?\n. If your working with sass, you should include all your scss from one single app/index.scss and sass will automagically generate a single file.\nIn addition, the styles task is not responsible of the optimization / concatenation process. It's the html task which will concatenate files using gulp-useref.\n. I look at the code, I like the changes. Moving the text handling from the JS to the templates is finally more readable.\nI was not be able to check feature by feature but I'm sure you did it and the tests are passing.\nWe'll need a new version number and I fear some stabilizations.\n. Your description is a little light... I assume you ask for a new option allowing to add hash on assets filenames like for css / js files.\nIt would be simple to rename files but it's more difficult with assets to locate where they are used to modify the link. In fact, I even see some situation where it's not possible (ex: ng-src=\"myVar\" in a template)... \n. Controller will disapear in Angular 2 as the new version is focused on the Web Components. Still, I think that all components with directives in Angular 1.x isn't a good solution.\nIn addition, the generator should not take this kind of design choice and just give tools to developers to make what they want.\n. We discussed a little about your PR. Your feature is interesting but we can't integrate a feature like this one by itself.\nWe must address the subtasks question as a big new feature, we can't release a new version with only one sub task.\nSo, I don't reject your code but I put it on hold until we address the subtasks.\n. This is a lots of work, thanks. Starting this feature in a new repo can be a good idea to handle the issues.\nWe'll try to look deeper soon.\n. I close this PR for now. I think I'll link your project from the readme.\n. Seems right thanks. Can you adjust your indentation to fit the rest of the files and change the npm deps in the test/deps in order to pass the tests?\n. How much is there gulp plugin to do the same thing ? :)\nIn terms of GitHub popularity, gulp-angular-templatecache is the biggest...\n. Hi, it would be bad if we had different format indeed.\nIf I'm not a specialist in file encoding, I tested main.controller.js from the generator and after a project generator with the file unix command and I don't have anything like Windows style line endings.\nSo basically, I don't reproduce the problem. Can you help us reproduce?\n. It can be interesting to test once more but the exclude was because I never succeed to run protractor on Travis, not because they was failing...\n. We discussed a little about your PR. Your feature is interesting but we can't integrate a feature like this one by itself.\nWe must address the js preprocessor question as a big new feature, we can't release a new version with only one language.\nSo, I don't reject your code but I put it on hold until we address the js preprocessor which is planned for soon.\n. This is not easy for me, you work a lot for this. But supporting a language is a big charge for us and I don't see how we can support a not well established langage that we don't know.\nI advise you to established your code as an other generator focused on LiveScript.\n. I was aware, that the versioning used was not perfect, thanks a lot for the work.\nJust waiting for the tests to pass hoping this is a meaningful KO\n. I'll try to take a look...\n. So, if I understand well, we should use ^ assuming the modules follows semver specs...\n. I don't know how much this is a common use to allow breaking changes in 0.x versions.\nPerhaps, we could agree on using ^a.b.c for a >= 1 and ~a.b.c for a = 0 and perhaps some exceptions where we knows that breaking changes occurs in minor versions ?\n. I don't have religion on this matter, I just want to find a good and accepted solution.\nAt this point, I understand that a strict semver interpretation leads to use ^. But there is a lot of exceptions so that in most cases ~ works better and is more secure.\nSo, I see two solutions:\n- We analyse each dependency to define if we allow upgrading minor versions\n- We choose to deny minor versions to be safe\nI must say, I start to like the second solution \n. Both :) Sample app can still be upgraded. But the wiki has to be complete too...\n. :+1: \n. Which version of the generator do you use?\nThis new option has just been merged and works only with the master branch.\n. The readme on the home page is the one from the master branch which can be misleading because it's not matching the state of the last release version.\nYou can see here that the option is not yet active in the last tag:\nhttps://github.com/Swiip/generator-gulp-angular/tree/v0.6.2\n. Hi, it's a duplicate of this issue: #90\nIt's fixed in the master and will be ready for the next release...\n. There is my thought at this point.\nThe --advanced is a good idea but we still have an important choice to make about the default choice because everybody knows that most of the people don't look at the advanced options. (It was the case when the generator had a \"fast mode\" question)\nMixing standard JS and his preprocessor is a common use case so it will be the default one.\nThe first script files will be in the langage of the preprocessor because it's what the people expect even if the last question makes it optional. The gulp files will not be translated, there'll not be a gulpfile.coffee, it's simply impossible for us to maintain (perhaps someday by an automatic translation js2coffee but it's not in the perimeter right now).\nI'll not implement the possibility of using more than one processor at the time.\n. I was like you not so long ago. But I tried and I must admit that sort files by feature prior than types is finally better.\n. Sorry for the delay, I think we're both busy these days.\nI'm interested in your evolution but I didn't yet have the time to look deeper at the code.\nEvery improvement of composability is good to take. I'll just be vigilant to not add complexity more complexities in the question but I think that's already ok\n. :+1: \nI think creating a injector:partial task could be great.\n. Spite images are a common needs for web building tools.\nBut I don't see very easily how to integrate and generalize the idea to the generator. It often needs a deep integration with the css preprocessor.\nBut I must admit that it's been a long time since I've used sprites thanks to CSS3 and font icons.\n. Thanks! This needed to be corrected!\nWe've succeeded 'till now to avoid any trick (gulp-sync) to organize the tasks waiting for Gulp 4. Is there no other way?\n. I imagined this when I seen the grunt file editor appeared. But it's a lot of work :)\nAs Grunt is configuration focused, it seems simpler than for Gulp which is code focused.\nI don't know how grunt file editor is implemented but I imagined that it's more a full editor than a \"template\" which is more ambitious than what we've got already.\nBut yes, of course, that could be awesome :+1: !\n. I thought a lot at this question recently, we've got several issues recently which points back to this.\nOur current design choice is to break the tradition of front end MVC pattern in order to have more explicit templates even it means more duplication. We could go even further I think but that's something else.\nThe problem is that this design brings not a lot of complexity in the templates but a lot of ifs. And I'm convinced now that the Underscore/Lodash template syntax is really not ideal.\nIn Yeoman, they mostly use Grunt. They choose to change the problem by creating a modeled version of the gruntfile:\n- This means that using it remove the gruntfile template from the generator for something entirely defined programmatically, I wonder if it's good.\n- As Grunt is configuration oriented, the model is quite simple to define, as Gulp is code oriented it's a lot more complicated.\nSo finally, I see several choices:\n- Considering starting Gulp Editor library but it will create some limitations and there is the problem of loosing the templates.\n- Find another existing template engine. I already looked quite deeper. There are all optimized for HTML generation. I didn't find one ideal for code generation.\n- Create an optimized template engine for our specific use. We basically need almost only if statements with a good whitespace / line break control.\n- Continue as it is :)\n. I took a deep look a gulp fiction. It's implemented as a front end service, it's exactly an implementation of a kind of Gulp Editor library. It could be interesting.\nTo be precise its a little different of Grunt Editor as Grunt Editor directly use an AST view of the future gruntfile when gulp fiction construct an abstract representation before transforming it.\n. I can't stop myself thinking on this today. The gulp fiction model can't handle our current build.jscomplexity. So, I've look at the grunt editor which leads me to the ast-query project which is behind. It's very interesting but once again, the complexity of a gulpfile can't be handled: chaining pipes are a mess at the AST level.\nSo, I digg on the specific template engine solution. I've come up with a literate inspired / markdown based syntax. What do you think of this?\nhttps://gist.github.com/Swiip/49d500b424ffeb3ceff7\n. Moving to a non standard template system scares me. I thought the real problem of the current template is that we want output files with no white lines so we have to put the templates controls at the end of the lines which is not readable.\nSo I've just made a test with a replace all which removes this white lines which ables us to put the controls on the beginning of the lines and its quite enough. It's looks like this:\njavascript\nfunction process(content) {\n  return _.template(content.toString().replace(/\\n<%/g, '<%'), data);\n}\n...\nthis.fs.copy(this.templatePath(key),  this.destinationPath(value), { process: process });\n. I written in this thread all my thought on this subject. To sum up, gulpfile code is too complicated to be generated the same way the gruntfile-editor works. It could be feasible but my skills in AST manipulations are not enough.\nSo we keep templating. I just added a small feature to the template engine to be able to indent correctly and make them more readable.\n. Thanks, that's great. But the tests has to be checked\n. Can you paste the content of your .yo-rc.json?\n. I'm interested, ESLint looks great.\nStill, does this will please everyone? Or should we add an option (in advanced)?\n. Yep, a lot!\nI'm seriously reconcidering switching to ESLint before the 1.0 release. We had a failed experience trying to use JSCS (which is covered by ESLint) and I also want to add https://www.npmjs.com/package/eslint-plugin-angular which is great...\n. It looks like your question is about a less compiler issue so I can't really help you. When the styles injections are handled by less, gulp doesn't do much. Still, I'm surprised that less mix your imports.\n. The issues you found are about problems serving json files through the dev server. It has no impact on the build process.\nThere's already a gulp task designed to copy files in the dist folder without changes:\njavascript\ngulp.task('misc', function () {\n  return gulp.src('src/**/*.ico')\n    .pipe(gulp.dest('dist/'));\n});\nTry to add 'src/**/*.json' in that task.\n. What your asking is, for most of it, in the changelog of the 0.7.x\nhttps://github.com/Swiip/generator-gulp-angular/releases/tag/v0.7.0\nThe PR was #137\nBut I agree, angular-foundation could be a nice addition.\n. Looks great to me, thanks! :+1: \n. Thanks !\n. There it is, es6 and ts sources can be improved but at least, the mechanisms seems to work\n. I'm not so sure it's needed to handle multiple html preprocessor at a time. But I like the idea of putting this in a separate files. In fact I intent to split the build into scripts.js, styles.js, html.js files in addition to the build.js file but that will be another PR.\nAs you said, rewriting the index.html could be really hard and could also be impossible to maintain. People may ask to have a index.jade someday but I think we'll refuse it.\nAnyway, great work! :+1: \n. I wanted to focus on the release of the JS Preprocessor but it breaks the merging of your PR sorry.\nIf you can merge, I think it will be the next big feature of the generator!\n. I continue the debate here. As you perfectly mentioned it, there is two ways of dealing with options which implies multiple dependencies:\n- use a list in the prompts.json\n- put some if in the templates\nFor some times now, we chose to reduce the preparations and add more ifs in the templates. If it's breaking some front end MVC patterns, we thought it's more maintainable to have a quick look at our template files.\nIn fact, I'm even considering totally removing package / version data in the prompts.\n. Interesting suggestion. I'm not a fan either of the Underscore/Lodash template syntax. We could even create a sort of json file which ables us to list dependencies with some kind of additional parameter which would be the prompt value which trigger the dependency... And we could use the same mechanism for Bower.\nBut all of it has to be addressed in another PR.\n. That's perfect, thanks :)\n. Nop, you can't. Its preprocessed by Gulp and served statically to Angular. Handlebars is the less useful as it keep the \"XML like\" syntax.\n. You need to address them with .html in your code. Angular can't load jade templates. Gulp compile them and angular load standard html.\n. As we're using ~ version numbers, il you reinstall npm dependencies, you should have the fix right now.\n. Hello, this is coming really soon. Thanks to @Toilal, the PR #176 already exists and is close to hit the master.\n. :+1: \n. Thanks\n. I like your change, can you merge it?\n. You can't merge your code in the master but you can merge the master in your code. If you do this, I'll be able to merge the PR.\n. I agree that we could do better than what it is right now. But I'm not a great fan of the existsSync use.\nInstead of merging standard and preprocessed files in the same list, can't you make two list which should allow to remove the if?\n. I still have a doubt on having some files implemented with some js preprocessors but not all. But why not a bit of liberty! Thanks!\n. Thanks for the report, I'll check this.\n. When I first implemented the support of Traceur, I discovered that it write, even in the Node module system, some of its pollyfills. Specially one about object property manipulations. It conflicted with some configuration object manipulation from gulp-autoprefix which was absolutely not directly related in the code.\nAs your problem also mention object manipulation and Traceur, I'm afraid it's related to the same problem. What I don't really understand is that the tests contains Traceur and Karma so your problem should have been detected...\n. Not sure what was the problem but with the evolutions of Traceur, and the new compilation mechanisms with Webpack, all the tests passes: karma, karma:dist, protractor, protractor:dist.\n. We already have a gulp task to handle the copy of the fonts in gulp/build.js:\njavascript\ngulp.task('fonts', function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('**/*.{eot,svg,ttf,woff}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest('dist/fonts/'));\n});\nIt assume you've got your fonts linked with Bower. This is quite questionable. You can change the sources of this task to do what you want. You can also use the misc task just after which is designed to just copy things.\n. I take it for myself :) But your right...\n. I was about to respond that it's not possible because we use the changes not only for the build but also in the development cycle.\nBut for a lot of other resources, we use the .tmp directory for this exact use and BrowserSync already serve both src and .tmp files.\nThis is interesting as we could keep the index.html untouch in the src folder, inject resources in the .tmp/index.html and finally have a third one in dist/index.html...\n. I'll make some tests about it soon. I think it's a good idea but a keep my final answer for after the tests to check is there is no complications.\n. This go up on top of my preoccupation simply because I'd got the case of an injection failure which has emptied my index.html and I had no backup.\nBut as I started looking at it, I see that it's not easy. Currently each injector:* task takes the file, add some lines and write it at the same place. But there is no task which is able to take the original file and make all injections in the same stream.\nPerhaps, this is the solution but it's not a minor change...\n. I started this feature. It implies several important changes but I think it's cleaner this way.\nWait a little more before I can publish the PR.\n. The new organization fix this, check out the master or wait for the 0.9.x!\n. I assume having philosophical problems with creating \"configuration\" in Gulp as I've still nightmares from old Grunt's JSON configurations ;)\nBut your right, a bit of configuration could be nice. Perhaps, main folders like: src, .tmp and dist.\n. Sorry for the delay. The last evolutions implied too much changes in the index.html. It append that with several writing at the same time end up with a white file.\nI wanted to correct this the right way even if it implies a important change, you can follow this in this PR: #217 \n. Good idea :+1: \n. Not sure what you ask. There is no other generators that this one combine.\nAll the commands are listed here: https://github.com/Swiip/generator-gulp-angular#use-gulp-tasks\n. Thanks !\n. It's a cute gulp plugin that you use. But I'm not sure it's commonly needed enough to add it for everyone.\nAlso, we already make the choice of not focusing on mobile development (for now) because it will implies a lot of changes.\n. Of course in advanced mode, it'll be great.\n@holmesal, you added a good idea. If the advanced mode becomes too big, we could imagine splitting advanced options in categories.\n. Thanks!\n. I like how this feature evolve. Organizing and documenting options seams necessary now.\nI still have a remark about the way the paths are stored. Referring to the .yo-rc is strange to me. As asked in the #203, I better imagine this configuration in the gulp files, why not directly in the root gulpfile.js. A new user will better understand his gulp process like this I think.\nAnother remark. In the options.json you can't have the --advanced which is not merged yet but I don't see either the --default which is already there.\n. Seams great to me.\nBut I don't like your last proposal. It create a strange and complex structure on the gulp files. I even prefer putting the configuration in the gulp object if you want. (Something like gulp.config = ... or gulp.paths = ..., it's not ideal but...)\nIn fact, I'm still puzzled about using .yo-rc.json as a config file. For other choices, it's also the choices made at the time of generation but nothing say it's maintained (why not installing UI boostrap after?). So finally, why not duplicating this configuration in the gulpfile.js ?\n. :+1: \n. Is it ok to merge?\nI've got some big refacto going on that I want to merge on this one quickly.\n. Don't like either to \"squash too much\". Thank you!\n. It's already in my incoming PR. In fact, I even remove the multiple choice possibility, I think it's really not necessary.\n. My approach would be to start a backend project in a different directory (with another yeoman generator if you want). Point the dist folder for the public directory of your Node server.\nIn dev, use the Node server for backend and the BrowserSync server for front end files. When you stop developing, simply stop BrowserSync and target the Node server, it will serve the optimized version of your project (don't forget to launch a build)\n. I take back this PR and as I've got it integrated in a new bigger refacto...\n. https://github.com/Swiip/generator-gulp-angular/blob/master/app/src/router.js#L20\n. Thanks\n. Thanks\n. Thanks\n. Thanks\n. Thanks for all these fixes, this was needed after the big changes...\n. It could be interesting as a feature. As there is enough options already, I think it will be in the new advanced mode.\nangular-translate is very popular, I thought it was pluggable enough to inject some sort of interpreter for the type of files you need.\nIf it's a new option, I think angular-translate (among others if you want) must be addressed and the initial templates has to be \"internationalized\"\n. Deliver a packaged solution for i18n at compile time is great idea that I'll store in the todo :)\nYet, I think that i18n can exist as an simpler option waiting for the ultimate solution to be ready.\nFinally, as we discuss of the stabilization of the 1.0 version, I think it's not the time to open such a big change.\n. Check out the new 0.9.x version, this is fixed since.\n. I've tested recently material 0.7 rc and it broken the layout i used for the welcome page. I've you tried with the 0.6?\nI'm convinced material should be updated but it should not deliver a broken template...\n. Late for testing sorry. Will check this soon...\n. Close in profit for #271\n. :+1:  Sorry for the reactivity :)\n. I already had used plumber in the past and it has been removed by the use of an well placed .on('error'.\nIf there is once again breaks in the watch, it's because my refacto should have missed some task which could break and need an \"on error\"...\n. We should have an error handler on each task \"which could fail\" :)\nThe preprocessors are the first I think of because the developer could always write something wrong...\n. Yeah, Gulp 4 will be a little revolution :)\n. Thanks, seems a good correction. A bit overwhelmed right now and I try to test every PR so I'll come back soon...\n. I tried some gulp serve:dist. I've put a glyphicon in the bootstrap template exactly to test that and it's not working. The master configuration is not working either.\nI think you're right in adding the bower_components in the path but the first ../ seems wrong to me.\n. Close in profit for #270, thanks anyway @chhsiao1981, @marani \n. Fastidious work, thanks...\nThere is a js2coffee converter but not (and its nearly impossible) for TS and ES6. And to be honest using the js2coffee is not a good idea I think.\nWe're doomed to maintain 3 (shortly 4 with LS?) identical code. It's a pain but there is no other way...\n. Well, I'm stuck with this feature. Supporting angular-translate was something I wanted, so it's great.\nBut the amount of changes and complexity for adding a single dependency is definitely too big.\nThere is what I can suggest to make this simpler:\n- No gulp files change. There should not be build step with i18n or it's too specific and should be a receipt\n- No full internationalization. Internationalize all templates is a pain we'll keep forever. Make an example in an isolated component and leave the rest\n. The get text structure are definitely not generic enough. It has to be kept as receipt but not an option. As angular-translate is no more than a lib inclusion, we could add it with the other. Sorry but we preserve simplicity by closing this.\n. Unfortunately, it doesn't work for es6 but I think it's because of the structure of the build with browserify. It has to be updated anyway (#269)...\n. I'm totally noob with TypeScript and I may well not have used the best solution.\nAny \"more TypeScript\" solution is welcome :)\n. I wonder if I did not break this with the refacto. I just remember that I handled file order differently for TS than for other. If it's not the case anymore, I did broke something.\nIn any case, I felt that my handling of script loading with TypeScript was perhaps improvable.\n. I was afraid by gulp/tsd.js. Have you seen https://www.npmjs.com/package/gulp-tsd ? It seems to do what you need.\n. I wonder at what point we should put what you're doing right now as a recipe and only support the addition of the preprocessor...\nWe have to produce something which work out of the box but don't hesitate to be \"minimalist\"\n. Don't understand, I test your code and it's failing. I chose all default options except for TypeScript.\nIt seams that the jQuery types generated doesn't compile. All details here: https://gist.github.com/Swiip/2c2c531340b3f86f2c2f\nI tried to relaunch Travis on this one.\n. Let's hope there is no more joke on TypeScript update which break the build.\nI feal that gulp/tsd.js should be a gulp plugin but I did some test with gulp-tsd and I'm not convinced so I think is the best right now.\nI played a little with tsd.js and I've got a few questions:\n- why bother with tsd:init if we deliver a tsd.json in the first place?\n- can we move the generated files in .tmp/typings? I tried to change in the tsd.json but it doesn't work, it's override at each install.\n. I didn't see that we don't ship the tsd.json, ok like this.\nA last question. When the tsd.json has been created, the init action seams to be avoided. But my changes in the tsd.json are still replaced on a tsd:install... Something about the install options?\n. tsd.json got some git hashcode inside, does this can't become obsolete?\nAll of this seams quite new. Perhaps we should just keep it like this and I think we'll see a gulp-tsd working on a single line in a few months\n. I like the change, I merge this when Travis is ok\n. :+1: \n. We know this would be better but I don't know if it's possible.\nIndeed, coffee specs are only one step, there is also the gulpfiles in coffee, the specs in typescript, es6... It's so much of work and after that, we have to maintain all of it...\n. gulpfiles will clearly never be translated.\nBut I agree, specs files should be. But watch out, it can be not obvious to process tests files before giving them to Karma.\n. We already talked about js2coffee for the sources. I didn't like generated code like that and in anyway, this doesn't work for es6 or ts so... no. We'll do it one day, but for real.\n. :+1: \n. I gave a quick look, it should work like you did. If you stop your serve and relaunch manually, does it work?\nI don't see why the scripts task would fail and as you said you see the compiled files, the only problem I see is that you don't watch the new folder (gulp/watch.js)\n. This will watch over the asset folder but I agree this is does not matter a lot. @zckrs ?\n. You can also try with a directory with another name that lib. This seams silly but I've seen worse :)\n. We continue keeping track of the question of the app structure there: #272\n. true :+1: \n. We have to clean up the current PRs before further refactoring yes.\nA better solution for handling deps seams necessary. I've my own idea on the matter, I'll describe it soon.\n. I'll edit the issue with the remaining of the 1.0 and the tasks identified for after the release. It's not final, if we find other tasks to do before the release, I'll update the list.\n. Remains the question of Gulp 4. Will it ready after or before us? :trollface: \n. Yeah, it's not released yet, and I agree it seams difficult for the 1.0.\nIt's just that it could end up weird if we release a 1.0 on Gulp 3 just after the release of the 4.\n. I think that a new wiki page could be useful, something like \"how it works\".\nIt would describe the main processes that the gulp build use. I think it could help resolving a log of issues.\n. @jamm I totally agree with you. I looked through some example implementations and didn't find nothing really better.\nThe Angular 1 module system and the ES6 module system are definitely in conflict... Any better solution is welcomed.\n. Yeah, I thought about that. But does es6 without modules still es6?\n. It's complicated, there is no perfect code. We can't deliver a bootstrap application which match everyone code styles.\nIf your arguments match with me, I'm pretty sure that if I remove modules support from the generator it will be asked really soon... I don't want to end up maintaining multiples default apps.\n. Ok, I see the problem, I had to work on the question to find the best way to handle that.\n. I'm considering using NPM. I think I first will remove the Bower logo from the Readme. It's the current choice but it's not tied with the generator.\nAt first, I was thinking that NPM will be a need when and only when I'll address the script loading part and Browserify. Now, I discover than Bower/NPM could be an independent option.\nBut I think it's a too big change for the 1.0 but perhaps just after.\nI'm just a little afraid because Bower libs are just starting to be precise with targets: js file(s) but also css, sass, or fonts. It just starting to works well with wiredep. But unless I'm mistaking, this is not possible with NPM.\n. It's not boring, it's actually a subject I'm interesting at: how to makes Angular 1 and ES6 mix well. I'm fully open to a better implementation of the ES6 code ;)\n. 1.0.0-rc1 is out, it's time to check if everything's ok.\nWe have a lot of suggestions in the issues. We loved to please everything but we simply can't do everything.\nTo pass to the 1.0 tag, I'll will close some of them using our label good-but-no-time which means that it seams great but it's not planned for a close future and we need to get our issues list clear. Any PR on these feature are welcome.\nThere will be a specific category of them which will be gulp 4 which are specific questions that we choose to not answer with the 1.0 and gulp 3. I don't to have ugly fix just before the 1.0 when it will be clean and shiny with gulp 4.\nI don't have a planning but it should be a gulp 4 branch somewhere after the 1.0 final.\n. And.... Here we go ! \nhttps://github.com/Swiip/generator-gulp-angular/releases/tag/v1.0.0\n. There is a new orientation towards a components architecture like the WebCompoents and Angular 2 yes.\nBut, I think we can't go there head first. Do we want to refactor all our basic application following these new guidelines. Doesn't less quick people be disoriented. Should it be an option?\nAs a tool for others, I think we should consider these implications.\n. I prefer not using directives as application components for now. Ideally, it should be a parent route with ui router but it doesn't work with ngRoute. Perhaps when the new router will be ready to use?\n. I changed my mind on this issue. I still don't want to redesign the app from view / controller to all component.\nBut still, I don't like ng-include and more important: we need a directive to illustrate a directive with TS, ES6 and unit testing with template loading. So, I think the navbar is the use case for a directive even if it's not perfect.\nBut not before the 0.10, don't know for the 1.0...\n. Waiting for Gulp 4 we have to listen to all possible errors...\nI tried to organize a generic solution here https://github.com/Swiip/generator-gulp-angular/commit/230c710b357fbaa023a6570d847b1b207d7e0a4e#diff-2e6ad34bed54ee43674888cab984c475R13\n. Can you update and test?\n. Can we just change https://github.com/Swiip/generator-gulp-angular/blob/master/app/prompts.json#L159 with a ~3.3.3 then?\n. *.woff2 was not copied in the dist process. I think it's quite new. I added this in the PR.\n. gulp serve doesn't deal with the html task.\nThe replace in the html task is aimed to change the path of the font from the bower_components folder in dev to the fonts folder in dist\nIn my PR, I got the icons both in serve and serve:dist.\n. Thats not my changes :/ Did you look there https://github.com/Swiip/generator-gulp-angular/commit/f5dc53d38ed76748d83624e13d2ce9a77faeddbb ?\n- Dev: vendor.scss got a variable which should point on the font path on the dev server. In this dev server, bower_components is a special context which points on the right folder. So, the good value is:\njavascript\n$icon-font-path: \"/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/\";\nWarning, with sass, this variable has to be set before the @include statement\n- Dist: the font task in build.js copy the font files from bower to dist/fonts. In the html task, the $.replace operation replace the previous value of $icon-font-path for the fonts folder where the files are located in the dist folder. So, relatively to the styles folder:\njavascript\n.pipe($.replace('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/', '../fonts/'))\n. What i don't understand is that with my PR, I tried with fresh installs and I've got the icon right in every mode...\n. This filter aims to point only the first level.\nThe mechanism is that there is an injection point in the index.scss to automatically @include all other scss files.\nhtml task should not have to deal with anything else that index and vendor.\n. The styles task take your index.scss and add include statements automatically with the gulp-inject plugin. There is no temporary files between injection and processing the scss so you can't see it but look at your gulp/styles.js.\n. forgot to update the tests :(\n. We're considering removing app folder which confuse everybody and is not anymore (or never has been?) in the guidelines.\n. To be honest, I convinced we have to remove the app folder... But I don't know if I succeeded to convince @zckrs :)\nBut it's a big change as all file selector from the gulp files has to be checked so it's not done for now.\n. Interesting to have another point of view. I think we'll keep it like that for the 1.0...\n. Thanks\n. Thanks\n. I don't like adding a new gulp script. We could use the scripts one to run jshint when no js preprocessor is selected.\n. Sorry for the looong delay. I like the evolutions except for the context variables. It could be fixed by merging with #335. Wait for the #335 to me merged, merge with master and we'll be good to go.\n. Ping :)\n. Since the 0.9 version, I removed all modifications of the user source files. I created a big inject task which contains wiredep and the injected file is placed in .tmp/serve. I now consider the injected file as a generated transformation of your source file.\n. 2 principal reasons:\n- design: I think that no build script should modify user made source files\n- practical: with the precedent version, we have several injection tasks injection which modified index.html and after to many access to that files, we ended up destroying it #232 #205 \n. :+1: \n. You can put <script> and <link> tags in your html file if you put them in the right line. You have to be inside the <!-- build comments to be included but outside of the <!-- bower or <!-- inject not to be override.\n. Thanks :)\n. The context question is still an open issue. I don't say it's impossible I just never got the chance to work on the question... But I will\n. I understand your goal but seriously... keep it simple.\nWe flatten the font paths for Bower because we can't keep the original one with bower_components but there is no reason to flatten all paths and handle a json file. Add a single line into the misc task to copy the fonts and it could be enough.\n. Sorry for the delay. Thanks :+1: \n. Why doing less even if it's not absolutely needed. And it's better to have it soon before your app grows and you'll really need it. Some optimizations are complicated to handle but this one works smoothly so why not using it?\nIf you really don't want it, remove the partials task, the inject partials in the html task and add a copy *.html from src to dist...\n. That's fine with me but too specific to be handled in the generator. Take your gulp files, it should not be too difficult to make what you ask. Just exclude seo files from the current mechanism and add the copy of this files.\n. If you're willing some code snippet here, we can keep it as a recipe.\nWe're trying to gather recipes in issues and expose them later on the wiki.\n. Sorry for the blackout, I wanted to focus on this :)\n. Done, and with comments!\n\n. Thanks ;)\n. Thanks\n. I tested sourcemaps for all but traceur.\nTraceur for browserify is deprecated. Generating sourcemaps with traceur and browserify in 2 step is impossible. The only way I know is to use the bundle option of traceur but it's not supported by gulp-traceur for the moment... https://github.com/sindresorhus/gulp-traceur/issues/17\n. You're right. This one was fixed by Webpack: #399 \n. @jivalaraza It depends of your lib and it's bower.json configuration. If script files are not configured, wiredep will not be able to include it. But you always can put the script yourself if you place it outside of <!-- bower but inside <!-- build\n@drock07 Browserify is planned but not for soon.\n. First of all, you should update the generator because your version is running old.\nI think the problem is about Traceur. I got errors too on karma with Traceur with the current version. But I don't get the same error so I'm not sure. I also have to check why the tests missed that...\n. Thanks :+1: \n. Can you precise what you want to do?\nGlobally, we needs more tests for webapps hosted on subdomains. I don't know yet how to simulate this with BrowserSync.\n. Thanks :+1: \n. Forcing the user to use a specific folder for his fonts is not the best solution. In fact, it has to be changed also for images. I think of a more generic task which will select all not processed files from src and copy them in dist at the same position.\n. To be honest, you're the first asking for this. In fact, I didn't know it exists.\n. Yeah, i'm not sure many people care anymore.\nBut it could be an advanced option if there is the need.\n. I rename the gulp task recently and not updated the comments sorry.\nWiredep is still there inside the inject task. It will insert all deps found in your bower_components and correctly configured in the bower.json configuration file of the library.\nYou can check the result in .tmp/serve/index.html. If your lib isn't inserted you can manually add them in index.html as long as you're in the build comment but outside of the bower comment.\n. Revisioning files implies to rename the files but also to update the links in the app. For the .js and .css, the generator rewrite the inclusion tags in the index.html, but for all your images in your app, we can't replace all the links. So we can't offer this feature.\nYou can imagine this if you restrict yourself to link images in your css and search for some plugin to replace links automatically. But at the level of the generator, I can't help you.\n. Which options do you use? We use the angular file sort plugin to order files. This should be enough normally.\n. With angularFilesort, you just shouldn't have any problems... It assures Angular's dependencies to be ordered well.\n. Ok, I didn't test all use cases of angular sort. Try with a syntax like that:\njavascript\nangular.module('controllers', []);\njavascript\nangular.module('controllers').controller('MainCtrl', function ($scope) {...});\nIt should work better and to be honest, I like way better than using a variable from a file to another.\n. Seams great\n. There was some issues with coverall, forget the warning, next builds will be ok.\n. Thanks !\n. That's an old one, would be glad if I could close it. I want to check it though...\n. The wiredep task has been merged in the inject task but it still there.\nThe font task will copy font listed in the bower.json of any bower dependencies (not only installed but present in the bower_components). It's not the case for your package while it is in bootstrap.\nYou have to write some additional gulp to copy your fonts.\n. Don't know very well jscs, I was used to relay only on jshint. But it sounds interesting...\n. Yep, JSCS is one of this tools where I didn't know about 2 month ago and now, I see it everywhere. We'll add support for it, I just don't know when.\n. Yep :)\n. Yeah, that's strange. It's a legacy from the gulp-webapp generator I started from. I don't know why it's here :)\n. Currently, the generator handles sourcemaps in development mode but not in the production mode. It's difficult (impossible?) to make sourcemaping works with useref.\n. I don't use webstorm no, sublime or atom. When I debug, I use chrome dev tools. It should be a solution to connect the webstorm debugger with the serve task, but I don't have experience with this...\n. I'll check. This has been fixed but could have been broken. That's why I'm working so hard on testing lately.\n. That should have been prevented by ngAnnotate. It clearly failed this time. There is a few cases ngAnnotate could miss an injection, look there: https://github.com/olov/ng-annotate\n. Search for any injected function outside of the standard angular.module(...).service(..., function() {});\nIf you use a js preprocessor, the question is more complicated because ngAnnotate can't handle a langage it doesn't understand...\n. I made some tests before coming to this. And there is the question of 6to5 or Traceur.\nI'll check if there is some news but don't hope too much..\n. Seems you still have a reference for \"hamljs\". You should only have \"haml\"\n. Yep, it's planned to fix this.\n. Thanks!\n. There is work to do explain how everything works in order to help people tune his configuration. This is planned but nothing more right now.\n. Thanks, waiting for #279 to do the rebase only once\n. Sorry, the readme is a little outdated, the wiredep task had beed merged in a new inject task. Look at gulp/inject.js.\n. Seems to be messing indeed. Thanks for reporting.\n. Something new? You solve your issue? If not, can you create a smaller minimal project pattern reproducing the problem?\n. A little bothered because it impact all gulp files but it's sure better to not overload the gulp object.\nJust to be consistent can you replace lodash's map and filter by the standard ES5?\n. I broke the merge accepting another PR, can you merge please?\n. Thanks!\n. Duplicate for #331. The solution is in the other issue. It definitely has to be handled...\n. The current font task only copy fonts declared in bower packages. It's the case for bootstrap, I don't know for fontawesome. After that we put the font in a specific directory.\nSecondly, we have to replace the font path as you seen to point the right directory in the dist directory structure.\nFirst of all, have you your font files in the dist directory ?\n. yeah, woff2 has been added recently to the scripts and not released yet i think\n. Fixed by #328 simply not released yet\n. This was already reported. It actually is a weakness in the concepts.\nBut you should be able to add your own @import in your index.scss or vendor.scss to ensure some injection comes first. I still have to check if the inject plugin import a file a second time or not if you do.\n. Sorry to be rude but is this related to the generator? There's a working coffee example, why didn't you start from that?\n. Ok sorry. So I understand that it was a Coffee issue, can we close this?\n. I'm so feared for such a kind of feature which brings people to use it and never be able to minify after... But I agree it can be useful. The best would have been to have sourcemaps for dist task but the status of that on gulp-useref is not clear.\n. The tests run karma on the generated build. It fails it seams because angular or angular-mocks is not loaded in these tests.\n. Upgrade gulp or the generator ?\nLots of people are afraid of this but if you \"re\"run the generator on an existing directory, it will ask you before any overriding...\n. You could have this by using a plugin like gulp-replace but I doubt we support this at the generator level.\n. Strange, this seems to be cover by our tests, I have to check...\n. Got it, gulp-ng-annotate in the version we chose fail with Node 0.12 (verified). Just upgrade this plugin and it should works fine.\nKeep the issue open to remember to update the version number.\n. As the plugin version is written in the package.json, the npm update command will not work. You have to delete the line in the package.json or do a npm uninstall first.\n. It's already done in master. gulp-ng-annotate to 0.5.2 which brings ng-annotate 0.15.\nWe're juste a little late to release the new version...\n. Because it was simply to big. I hate big files. It allows to orders tasks and purposes.\n. Dups of #347 \n. Partials HTML is optimized in the build process by gulp-minifyHtml. I think it could be this plugin which removes your white spaces.\nTry to remove it, to find some options or perhaps tu put some &nbsp; (yes I know...)\n. Dups of #332\nI'm updating the doc in the next pr.\n. Yep I've seen this. I wait for #330 to easily update deps\n. Which version of Node have you? When you say updated, you talk of master or 0.9.1?\n. 0.9.1 or master?\n. So you don't have the master version. The 0.9.1 version is perhaps not perfect but can and have worked.\nTravis is currently having some trouble downloading the dependencies. Try rm -rf node_modules && npm install\n. I don't reproduce, don't know where to look right now.\n. I tried to reinstall almost everything, still no problems. What's your OS perhaps?\n. Hi, try to activate debug logs of Karma in karma.conf.js. I suspect that your files are not injected into Karma, the logs will list the files...\n. Did you try this suggestion, it seems interesting to me.\nhttp://stackoverflow.com/a/28602223\n. It has already been reported even if I don't find the issue.\nWe don't add the dep in bower but bower add it anyway because of a transitiv dep from bootstrap. We have to add a bower config for really refuse it.\n. Arg, I hoped there was something like an \"exclude\" property to put in bower.json but I don't find it :(\nSeems that the wiredep exclude is the right solution then...\n. Did you remove jquery from bower_components? It's possible that wiredep look through the directory.\n. This is the one\n. Did you try this solution https://github.com/Swiip/generator-gulp-angular/issues/82#issuecomment-67311140 ?\n. But this will not be lost by a bower install...\n. :+1: \n. :+1: \n. Of course :+1: thanks\n. Even if we don't (yet?) provide tests in the preprocessed langage, it's something that should be possible so we have to compile them...\n. Not sure of this. The user should just have to put a file with the extension he want and Gulp process it correctly.\nThe only optimization I could think of is to prevent recompiling tests script in the server watch to gain a bit of time but it could be a mess for not so much.\n. It's an interesting idea but from the beginning of this generator, we chose to to drop the support of a home maid dev server in favor to Browser Sync which is a dedicated project to target this need.\nFollowing this, I think that it's a really great idea but it has to be submited to them. They'll be able to gives us an entry point to publish the errors we've got.\n. Browser Sync has already entry points for tools like gulp to manually trigger reloading files (even if we still don't use them but that's another question). I really think that they can consider adding a new entry point to send more detailed feedbacks.\n. I'm perfectly happy with the UI. It's a tool for developper not for end user. The dev ui fashion is about minimalism right now, lots of people even come back to vim :). Anyway, we only use the Yeoman API, open an issue to them if you want.\nAbout the weight. It's true it's big. But it represents all the tools you need for a modern web development including a browser (PhantomJS), Selenium, Sass... The target optimized web distribution is the real focus.\n. All of it are NPM related problems. I suggest you sends your remarks to them. But they are aware of some problems following a recent major update 0.10 -> 0.12 and more focus on finding an agreement with IO.js ^^\nAbout Python, yes, we could have documented that it's a dependency of some of the NPM dependency. In fact, there is also ruby if you use ruby-sass.\n. Big up Mohze! Thanks! :+1: \n. Currently, styles changes triggers the inject task in case of there is a new injection to make. This implies a change on the index.html and then we've got a reload even for styles change.\nThis is a real problem, I'm working on a solution...\n. Sorry for the late answer. We should have more test with Traceur, thanks for the report. But to be honest, I'm not sure of the correction we should choose...\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Dups of #347\n. :+1: \nAbout babel. As we use only browserify it's complicated. At the end, we should use both gulp scripts and a browserify task like traceur. But as I planned to replace Browserify by Webpack, you can leave it like that for now.\n. need it to look at a PR for webpack :p\n. Not released yet, sorry. Should be soon (0.10)\n. Thanks :+1: \n. What does it change comparing the first line of a list where you have to choose one?\nI like to order the list with the most common choices up anyway...\n. Even if I use default value, I like having the default value in first position.\n. Hi, it's fixed in the master: #398. Wait until the 0.10 version which is near now.\n. :+1: \n. Replacing gulp-karma should also target rethinking how we prepare and order files for unit tests. We've got issues linked:\n- #333 for TypeScript.\nI'll add issues if I found them. If this PR become too bg, we could merge it like it is (unless the tests) and open a new one.\n. Ok.. I don't find others :) \n. :+1: \n. hamljs was not working but I successfully compiled a haml template with consolidate with haml as key.\n. The task tsd:install should be in dep of some others like inject. It should have been ran automatically...\n. Yeah, we always test with gulp serve :)\nStrange you not got all files, it generate something like 8 files normally...\n. In the master, the tsd:install task is now launched as a dependency of the scripts task so there are no more mistake possible...\n. Yeah, it changes so quickly, we could make a version bump every week :)\n. Thanks that's great :)\nDon't start huge transformations right now, we want to focus on releasing a good 0.10 in order to transform it in a 1.0 soon.\n. How have you inserted your css files in the index.html, have you let wiredep inject it automatically?\n. :+1: this should definitely end up in the wiki!\n. I worked on that tonight. I don't have a PR to make but I make some breakthroughs I want to share.\n- Karma doesn't understand paths like '{app,components}'. It's able to serve the files, but failed to watch them. I replaced with options.src + '/**/*.js and it works a lot better\n- For ordering the files we face a dilemma:\n  - We can list all the files and order them before launching karma. It allows us to order as we want but karma will not be able to detect new files without restarting\n  - We can give the regexp of file paths to karma but the sorting will have to be done by karma. It exists a plugin karma-angularfile-sort equivalent to gulp-angularfile-sort but not one for sorting with a json file which is needed for typescript\nI would have loved finding a way piloting Karma server and Karma runner separately to be able to use the Gulp watcher to trigger Karma tests from Gulp but I didn't found a way.\n. Here's what I've got. https://gist.github.com/Swiip/2dbfd47a8fdf95cf23f9\nWorks fine. A little too much of code to my tastes but didn't found better. Directives tests passes (#207).\nOnly problem, a file addition will require to relaunch Karma.\nOf course, the code has yet to be \"templatized\" for all options...\n. I made some searches on this topic. What you both suggests works with Babel but Traceur doesn't keeps comments so everything fail.\nI finally found this notation which is a bit less \"clean\" but works for both preprocessors : https://github.com/Swiip/generator-gulp-angular/commit/eba7a43d608faad1b1e78fc26ba631b8de5558ac#diff-1b515377e5c1700611c3bd51d48ccb7bR3\nI keep separation between element declaration and exports as ans es6 exports of this rule: https://github.com/johnpapa/angular-styleguide#style-y024\n. Thanks!\n. It's a bug already fixed by this PR #398. It'll be released soon.\n. The partials compilation isn't used during the dev workflow. Only for the dist optimization. It's not about running the partials task.\nDo you use the master branch? Because a reload should be triggered in the 0.9 because of this line: https://github.com/Swiip/generator-gulp-angular/blob/v0.9.1/app/templates/gulp/_server.js#L61\nBut in master, there is a problem. I optimized the reload triggering of BrowserSync and there is no more reloading when an html file is modified.\n. Wow, looks like the daemon lead is the one :)\nThe only mechanism which should happen is that we configured BrowserSync to watch your html files and reload them when there is a change. It's done in the gulp/server.js\n. Why would you that? And what do you mean by turn off?\n. So you don't want to remove the server, just the browser sync feature of browser sync :)\nThere is an UI now with browser sync allowing you to stop the action sync. If it's for test purpose you'll need to configure it but I didn't found the right option here: http://www.browsersync.io/docs/options/ But it's strange, it should exist.\nAbout removing browser sync for a manual express server, it's not gonna happen.\n. Dups of #347\n. Yeah, I would love making it works but no. Perhaps with Phantom 2.1?\nhttps://github.com/Swiip/generator-gulp-angular#known-issue\n. Seams already fixed in master.\n\n. Believe me, we've got a lot of tests :)\nOur \"inception\" test runs the generator with several configuration, it fails now, don't know why it was green before...\n. I close this in favor of #501\n. :+1: \n. Just wait for the next release please: #408\n. Strange, I thought I had test that. I remember I concluded that if I put nothing, the default was autoWatch true.\n. Ok I got it.\nAs angular-material doesn't link the sass version in its bower.json, we consider that there is no need of using a vendor.scss. It's the case at the moment of the initialization but I agree that you could have use for it anyway later.\nIn fact, we shouldn't assume anything and create all the files even when the main framework chosen can't use all the features.\nAbout the lib \"material-design-iconic-font\" in particular, you'll still have to make your awn adjustments as there is several material icons lib and I'm not sure we want to include this one by default.\n. The new mechanism is that wiredep inject scss deps in vendor.scss...\n. I like the idea of following a good style guide too. And there os good points in this one. But @zckrs knows what I'll argue.\nDoes this one really good? https://github.com/johnpapa/angular-styleguide#style-y010\nIs\n``` javascript\n(function() {\n    'use strict';\nangular\n    .module('app')\n    .factory('logger', logger);\n\nfunction logger() { }\n\n})();\n```\nbetter than\n``` javascript\n'use strict';\nangular\n    .module('app')\n    .factory('logger', function logger() { });\n```\nTo be honest for me, the future is Babel, so I could let pass some displeasing things in the es5 version if I have to.\n. I doubt this an issue for the generator. Our injector use wiredep, has you checked if wiredep support this?\n. I have to test unit tests in js preprocessed file with the last update of the karma workflow.\nBut what's certain is that I want the coffee processing in gulp and not in karma. I want the configuration centralized in gulp and not split up in other tools.\n. :+1:\n. :+1:\n. :+1: :+1: \nI was thinking if maybe the simplification of globs pattern could simplify the karma process but no.  We still need to pass the globs through gulp in order to apply the sorts we need.\nAbout the debate on the need of the app folder, to be honest, I don't care very much. It's nothing more than a additional folder targeting more classifying. For big project, it could be better but there is no absolute answer.\n. :+1: \n. :+1: \n. Coverage is interesting and it would be great to ship it as default. But it should not run everytime only on special gulp task. Perhaps you don't see it in a fresh project but the coverage of the generator tests for example really takes time.\n. :+1: \n. I have this for some time know. Never really investigate it. Perhaps we should try to update to 2.2.x before anything?\n. I merged with #510 and #562 to keep only one thread of rewriting of the docs. Still lots to do...\n. It should be easier when this will be merged  #499\n. Made some tests, I still don't have a good understanding but I think you're right on the problem and I confirm your change fix it. So... go :+1: \n. :+1: \n. What do you want to achieve? If you have cors problems using the gulp serve server targetting a backend on an other URL, it's on your backend you have to configure cors. You can also use the proxy to get around of the problem.\nIf you really want to handle cors on the dev server (but I don't know why you could want that), you can use a connect middleware like https://www.npmjs.com/package/connect-cors\n. Should be better know.\n- index.cssPrepro is injected with the source files (which still has to be illustrated with a navbar.cssPrepro.\n- vendor.cssPrepro is injected with the bower deps though wiredep. It still depends of the quality of the bower.json of the deps, for example foundation doesn't link the scss version.\n. :+1: \n. There is a special treatment for the font file of Bootstrap but what you're asking seems not easy or even doable to me.\nIt requires to modify the link wherever this resources are used. It can be CSS, HTML or even some computation on the JS. I'm not sure what we can do...\n. Needs to test myself but seems great!\n. Don't spend too much effort here, #499 will change the problem. I'm interesting if someone could test the proxy on this branch...\n. Yep, I found it. Wiredep mutates the option object you give. This is a strange behavior I have not expected. When you use test:auto, the task dependencies launch wiredep multiple times so the options are broken.\nAnyway, I'll submit a PR soon.\n. Well yes, our tests on windows are quite inexistant. I'm afraid this problem comes from the gulp-protractor plugin as it's this plugin which has to run webdriver.\nThere is a new release 1.0 of gulp-protractor from only 2 days ago, maybe you could try an update.\n. Thanks for the investigation, I put a \"recipe\" label to keep in mind to write docs about it.\n. Strange, never seen this. Can you give us your options through an export of your .yo-rc.json?\n. To be perfectly honest: not really. Technically yes, because Yeoman will ask before modifying any file you have but it's difficult to choose where you have made changes and where you want to takes evolutions.\nGit can help you rollback some changes or you could even put the new files in a branch and use a git merge to evaluate all changes. There is a better explanation of the process somewhere in the issues but I failed to find it.\n. In the generator, all is centralized in Gulp. We use the file listing and sorting of our gulp plugins to inject the right configuration into karma. We wanted to avoid having duplicate configurations in gulp and karma.conf.\ngenerator-hottowel seems to answers that by calling the code of gulp from the karma conf which is also a Node script. We could look into this solution\n. Both\n- https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/src/app/main/_main.controller.js\n- https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/src/app/main/_main.controller.spec.js\nhas global 'use strict'; as first statements...\nI'm not sure to understand your problem...\n. Yes, it seams that's not needed... Thanks\n. The inject task centralize all modifications in the index.html. Since a couple of version, we don't modify directly the src/index.html anymore in profit of creating a .tmp/serve/index.html.\nThere is 3 injections made in the index.html: bower css deps, bower js deps, src js.\n. You're right, that would be better...\n. Ooops, sorry :)\nUI frameworks with no native css preprocessor sources should be included as CSS.\n. Adding a directive and a service is great. But I'm not a big fan of putting contributors name in front.\nAs an alternative, I would suggest that we put the tech.json in the github sources and the project will request this file directly on github. I also imagine the malarkey directive about the tech list, the text should be in the jumbotron. We can even put a filter on the list of tech cards following what is typed in the malarkey.\nAbout design, I would suggest to split up the code of the directive. The directive itself loads the data. I think the data should be given in parameter. If not, the directive is not reusable.\nAs a bonus, we can imagine getting the data from github with the ressource option the user choose ($http, $resource, restangular).\nThere is some angular.forEach in the code. My own guidelines are to use es5 Array.prototype.forEach now or did I miss another \"official rules\" :) ?\nIn TypeScript, and it will be the same for ES6. As we have the class concept and all the code is not anymore in the constructor, the var vm = this is not really usable anymore. I started to use some real this in TypeScript helped by the new => operator.\nFinally, I want to say that I'm really happy to have all these illustrations in the project but it also make me think that we shouldn't go any further. More code in the project will looks like a real project, not some example to remove. I also see that we are exactly doing the work for having subgenerators: having a model of each type of angular component written in the four languages. I don't say it's done, but part of the road will be done.\n. - controller specs : scope is never used\n- love the acme as component prefix :)\n- es6 : main controller should have methods, not functions defined in the constructor even if it breaks the vm = this principle, same as for typescript\n- es6 : some more anonymous function could be replaced by a =>\n- ts : should we define and export at the end of the file as for es6 & js ?\n. :+1: !!\n. Seams like an interesting framework but it's not planned to add more ui framework soon. The three we have are the most popular and are already heavy to support.\n. We talked about it with @zckrs. Splitting sources and vendors styles started from a good intention but this problem you describe makes it impossible.\nWe'll merge the two files soon, if we have a PR to help us, it would be perfect.\n. Not yet released but done #480\n. Which options, which os? Can you test with this branch #499 ?\n. Cloned your project, npm install, bower install, gulp test, it works :/\nWhich version of Node?\n. Yep, but I don't see it...\n[10:54:50] Using gulpfile ~/Workspace/Sandbox/gulp-angular-test-demo/gulpfile.js\n[10:54:50] Starting 'scripts'...\n[10:54:51] Time: 871ms\n   Asset  Size  Chunks             Chunk Names\nindex.js  4259       0  [emitted]  main\n[10:54:51] Finished 'scripts' after 1.19 s\n[10:54:51] Starting 'test'...\nINFO [karma]: Karma v0.12.31 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nWARN [watcher]: Pattern \"/Users/Swiip/Workspace/Sandbox/gulp-angular-test-demo/src/**/*.mock.js\" does not match any file.\nINFO [PhantomJS 1.9.8 (Mac OS X)]: Connected on socket at0fEK2N6l8qGc2fL-Wp with id 12101164\nPhantomJS 1.9.8 (Mac OS X) controllers should define more than 5 awesome things FAILED\n    Expected false to be truthy.\n        at /Users/Swiip/Workspace/Sandbox/gulp-angular-test-demo/src/app/main/main.controller.spec.js:20\n        at invoke (/Users/Swiip/Workspace/Sandbox/gulp-angular-test-demo/bower_components/angular/angular.js:4203)\n        at workFn (/Users/Swiip/Workspace/Sandbox/gulp-angular-test-demo/bower_components/angular-mocks/angular-mocks.js:2436)\nPhantomJS 1.9.8 (Mac OS X): Executed 1 of 1 (1 FAILED) ERROR (0.003 secs / 0.018 secs)\n[10:54:53] 'test' errored after 2.21 s 1\n. .tmp/partials are not used to that. But I recently added karma-ng-html2js-preprocessor in the karma configuration especially for that. I had tested with a directive at the time...\nKeeping an illustration of testing a directive is right now on the table in #493\n. Found :)\nkarma-ng-html2js-preprocessor is configured with the name of the angular module (in karma.conf.js). It's wrong in your repo so the template is not \"preloaded\". I tried to correct it and the test pass.\n. WoW, but you're right, it's not templatized :)\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/_karma.conf.js#L54\n. This is the whole point. In the dist folder, scripts are concatenated. Check at https://www.npmjs.com/package/gulp-useref which is the main plugin which do that.\n. I confirm that there is an app folder in dist which should not be there if you don't have any static assets.\n. That does the trick. I don't see a clean way to do it for everybody. I want to keep possibility that people put \"other\" files in the app.\n. Yeah, I've searched for that, but without writing some sort of specific gulp plugin, I didn't find a simple way to do that.\nI think it's because we add the directory then remove the content with the second (and negative) rule. But knowing that doesn't make it easier...\n. This should be about windows because it's work on my mac and in travis (linux)\n. :+1: \n. You can, it sill simply be considered as any asset and be copied in the dist folder.\nThe font/bower/replace mechanism is only used by font in bower deps because we can't place the font in dist in the same path than in dev because we don't release the bower_dependencies folder.\n. Ok, I think you just have to look at your gulp/inject.js, the inject styles are searched in app/**/*.css and so it will not inject a css placed in the asset folder.\nYou can resolve this by putting the css in the app folder (changing the relative path to the font files) or change the inject styles filter to look into the asset folder.\n. Don't know it's borderline. Injection should not look into assets folder. But it's not a silly situation to have a css with fonts. Should we update the file selector for everyone for this exception or not? I really don't know.\n. It's #492 no?\n. foundation.css is in the bower.json of foundation so it will be included if we don't exclude it.\nwe excluded foundation.css from wiredep for all css prepro which is wrong, I only changed that we keep this exclusion only for sass.\n. Sorry for reading #492 badly. Go for bootstrap-stylus.\n. Just as a not for myself, we should add a \"user guide\" in addition of a \"how it works\". To explain what you're supposed to do to use your project when everything works as intended.\nA doc for explaining what is injected and what's not, what is automatically refreshed and what's not. All of that doesn't particulary need for the user to understand all the mechanisms.\n. Closing this thread, the following is in #456\n. :+1: \n. If I follow your thoughts, it could be a problem of sequencing between recompilation and browsersync reloads.\nIn the lasts versions (which version do you use ?) browser sync doesn't manage itself file change detection but it's directly gulp which will trigger browser sync reloads. If you have this new version, I really don't see how it's possible (and how to reproduce easily...)\n. This not conclude if you use the version I mention. Can you check if you see a line like this one in your gulp/styles.js?\njavascript\n.pipe(browserSync.reload({ stream: true\u00a0}));\nAlso, are you using node-sass or ruby-sass? The ruby version is way more \"touchy\".\n. \n. There is no issue for the generator on node 0.12. I used it myself for a long time. Have you updated the generator to the last version ? What kind of error do you have ?\n(a bit of npm cache clean and npm update could not be wrong too)\n. Yeah, I think it's about HTTP expiration headers which is out of our scope.\n. It's a known issue that bower assets linked inside the css are broken in the dist version. It's why you find the manual replace for the bootstrap fonts url.\nBut I like your gulp plugin. I didn't know about it. It could be better than what we have now.\nI have to look if it could also works for the bootstrap fonts.\n. It's great for CSS links but it's not the whole problem, it can be more resources in the bower. I'm afraid to deliver something to everyone only responding to a part of the problem.\nI keep this manually at least without a good PR.\n. Don't really see what you would prefer. The big changes between src and dist are because of gulp-useref but it's too central to imagine replacing it.\nYou can make replaces in the build stream in the html task after that useref has loaded all the files by using filters...\n. We have a hard time maintaining all the options we have already. It's not likely that we add more anytime soon sorry.\nBut I agree foudation apps seems interesting. If the interest continues growing, it can be possible one day.\n. You can add option with a query string syntax. Not really sexy but working... I was using the babel runtime lately: \n{ test: /\\.js$/, exclude: /node_modules/, loader: 'babel-loader?optional=runtime' }\n. Please check with the master version because I don't reproduce you problem. I change the > by a < and it rerun.\n```\nINFO [karma]: Karma v0.12.31 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nWARN [watcher]: Pattern \"/Users/Swiip/Workspace/Sandbox/gulp-angular/src/*/.mock.js\" does not match any file.\nINFO [PhantomJS 1.9.8 (Mac OS X)]: Connected on socket 5vqs-lU98U10a2utc1Gl with id 16829350\nPhantomJS 1.9.8 (Mac OS X): Executed 1 of 1 SUCCESS (0.002 secs / 0.014 secs)\n[17:02:48] Starting 'scripts'...\nINFO [watcher]: Changed file \"/Users/Swiip/Workspace/Sandbox/gulp-angular/src/app/main/main.controller.spec.js\".\n/Users/Swiip/Workspace/Sandbox/gulp-angular/src/app/main/main.controller.spec.js\n  line 1  col 1  Use the function form of \"use strict\".\n\u26a0  1 warning\n[17:02:48] all files 3.33 kB\n[17:02:48] Finished 'scripts' after 94 ms\nPhantomJS 1.9.8 (Mac OS X) controllers should define more than 5 awesome things FAILED\n    Expected false to be truthy.\n        at /Users/Swiip/Workspace/Sandbox/gulp-angular/src/app/main/main.controller.spec.js:16\n        at invoke (/Users/Swiip/Workspace/Sandbox/gulp-angular/bower_components/angular/angular.js:4203)\n        at workFn (/Users/Swiip/Workspace/Sandbox/gulp-angular/bower_components/angular-mocks/angular-mocks.js:2436)\nPhantomJS 1.9.8 (Mac OS X): Executed 1 of 1 (1 FAILED) ERROR (0.002 secs / 0.019 secs)\n``\n. Sorry for the delay but fixed for long but still not released:  #480\n. Look at the code from this branch #493. We already work on an extended version of the generated website which illustrate better how to start.\n. In yourindex.htmlsearch for the comments starting with<-- build`. At the end, there is the target file name for the bundle, you can change it there.\nExample: \n<!-- build:css({.tmp/serve,src}) styles/vendor.css --> ->\n<!-- build:css({.tmp/serve,src}) assets/styles/vendor.css -->\nAbout images and fonts, you have to change paths in the gulp/build.js\n. Was about to argue but in the end, it's handy for ci so why not...\n. Did some tests. Gulp ruby-sass does a bit what it wants... The emit('end') works, gulp take back control sooner but the sass compilation continue anyway.\nThere is an option stopOnError on gulp-ruby-sass which breaks the compilation but we don't have any error event. I think keeping the current configuration is better.\n. Hello,\nFirst of all, this the older issue of the project: #9. But I'll try to answer here anyway.\nI know it's a loved feature in yeoman generators, it's not \"my\" priority as I wanted most of all a seed project but as this part is nearly secured, we'll soon or later address sub generators.\nRight now, we're focused on releasing the 1.0 without adding new important features. So we can't working on this right now. But through #493 which is planned for the 1.0, we start illustrating an angular component of each kind which is a sort of preparation for this feature.\nWe can imagine starting right now a branch preparing this knowing that this will not be merged before the 1.0 but I want to be clear that this not trivial. Each component generated has to be implemented in 4 languages (JS, ES6, Coffee and TS), has to follow all angular guidelines in code and file structures. The subgenerators has to be designed globally, not one at a time. And finally they must have the same test coverage as the rest of the project. (Sorry to be rude but we already had a PR which didn't follow any of these rules)\nFor an hint of how to do it, I think many intel on the project choices has to be found in the .yo-rc of the project instead of having to specify the language and the paths at each commands.\nThanks for the contribution offer, if I don't scared you too much, don't hesitate to submit some code and I will open a \"sub-generator\" branch.\n. Ok, happy to see that I didn't scared you :) As I said, we want to secure the 1.0 first but I'll start a new branch against you'll be able to make you PRs.\nAbout the design questions, I didn't think of this enough to have an interesting idea on this. I'll look at it when I can.\n. I think that this files was \"initially\" generated and know, it's shiped by the generator so seems that the ignore line should be removed...\n. Strange problem. Good if you find a workaround, we'll reopen this if there other people have the same issue.\n. Nice solution, a PR could be great!\n. Seems like a broke this when I made a new version of the karma conf. The PR of @zckrs should fix it.\n. This link to stackoverflow has to be somwhere in our docs once and for all :)\n. According to build logs, even if it works, don't run installs (npm and bower) on inception seams to be broken.\n. :+1: \n. Interesting, could be new recipe, thanks.\n. :+1: :+1: :+1: \n. We're open to contribution to make things pass on windows. Meanwhile, we definitely needs this boost. And I agree, this PR doesn't fix #503 \n. :+1: \n. I'm confuse about eslint. It seams great but I don't have anything to reproach at jshint. It could be an option but complex to handle... perhaps an advanced option.\nI'm surprised you said eslint does the same thing than jscs, I thought that the goals are different. Linting and syntax check style.\nThe angular plugin for eslint could really be a new asset though (and in addition, I know the guy ^^) but I think we'll stay with jshint to keep things stable until 1.0.\nFinally... :+1: \n. We're not supporting deployment issues. The generator give you the dist folder, you serve it as you want. It's easy to make a script pushing only the dist folder. If you really want a server to serve the static files, a server.js with Express is 5 lines long.\n. @jamm, you understand the components folder as a \"very generic reusable component\" folder. It's not obvious that this was the primary goal.\nThere is clearly no perfect answers of the app and component folders position. We, as a generator chose one thing and will stick to that because the other way are as questionable as this one.\nAs @zckrs said, always keep in mind that this is a generator, not a framework, we give what we think is the best start but there a million way a project as specific needs which are not covered. It's why we have to keep it small and users to keep modify it.\n. Thanks for the update and sorry for the huge delay. I take the update about js file types. But I don't keep the part about the html preprocessor. In the process of creating the doc, I'll have a part about html preprocessor and will explain what you missed.\nI close this PR as I merged your commit in the bigger documentation PR.\n. Hello, sorry for the late answer. You can tweak your build to achieve that. The target files are defined by the comments in the index.html. You'll see index.js vendor.js in those comments. You can add other comments to split the bundles, the only limit is that wiredep can only inject scripts in one place so you'll have to write script tags yourself and exclude them from wiredep.\n. I don't think we'll ship that in the generator, your need is quite rare to be honest. In addition, I don't see how the vendor file could be automatically splitted...\n. Thanks ;)\n. I broke this when I updated the karma conf... Thanks :+1: \n. Not reproduced either. Your stylus compile is stange, it points on a comment...\nWhat do you mean by npm init failed ? Can you delete the node_modules folder from both the generator and the generated project and run npm installs again?\n. As we approach the 1.0 release, we release less often which is bad but it's to achieve this big release.\n@zckrs: sorry I took a gulp version bump before which conflict with your code, out of that, it's :+1: \n. There is so much cases where you'll not publish and it's polute more than anything else.\nIt's here because it was there in the originals yeoman's generator. I thought it was fun at the beginning but I found myself removing it every time I use the generator.\n. Bower install each lib in its bower_components. After that every lib has its own bower.json which define which files to include and it could be one js file, severals, css, scss... This feature is actually how wiredep can knows and something that people using npm for frontend can't have.\n. What do you exactly mean by including theme. You mean adding a css theme from angular material?\nIf it's that, you can include your own styles in the index.html as explained here: #413.\n. Wiredep only inject what is listed in the bower.json of the project. What you need to do to add other files yourself is described here: #413\n. :+1: \n. :+1: \n. extract the files anywere and use npm link in the folder. It will make a sym link in the right location pointing to your current directory\n. The optimization process is in the html task in gulp/build.js. You should add your plugin in the big pipe of the html task inside the jsFilter .pipe(jsFilter) -> .pipe(jsFilter.restore()).\n. :+1: nice, clean and simple!\n. :+1: \n. :+1: \n. :+1:\n. This is quite obsolete. In master, gulp directory modules doesn't export functions anymore.\nIn addition, we closed the PR because we just switched on an external lib for the proxy https://www.npmjs.com/package/http-proxy-middleware and we don't need any require('./proxy') anymore.\n. For the templates un karma de use a plugin karmaHtml2Js. Look at the karma conf the path of sources ils hardcoded. Your new tests actually already finds a bug.\n. :+1: :+1: \n. Sorry for the delay. I think you're right, we should be able to put it at the inject time and not script...\n. Nop, just looked. If we put the tsd:install in dependency of the inject task, it's executed in paralel of scripts and it fails...\nIn fact, tsd:install runs too many times but not doing this breaks the order.\n. Or why not at a npm postinstall? That are interesting leads...\n. This is out of scope. The generator create a frontend project with no built-in server. The server feature in the generator is about development process only.\nIf you want to put a project generated by the generator on Heroku, you have to make your website, launch gulp to optimize and take away the dist directory.\nYou have to bring your own server, it could be an Express wich point on that directory if you want. But we can't make support of your backend or your deployment process.\n. I don't have a windows to test and even less VS so the feature will not come from me.\nAbout a contribution, adding an optionnal project.json to help people with VS why not but I don't want a change of folder structure or an important tweak in the build process because we'll not be able to maintain it.\nBut seriously, using IIS instead of BrowserSync and lose all its features?\n. I digged into JSPM recently. We think about an option like \"script injection\": None, Webpack, Browserify, JSPM. But not before the 1.0\n. You replace Webpack by JSPM? Arf, I really don't get JSPM. Why use a aweful config.js when you can have CommonJS all the way?\nBut to be honest, I often remove Bower for NPM these days, it completes the \"CommonJS all the way\" statement. But removing Bower is to a step to big right now.\n. Yep, but comparing package.json and a JSPM config.js always makes me sad even if \"it's always transparent\". But who knows, it's my tastes, we'll see what tech stays...\nAnyway, the generator should not make the choice and offer both.\n. Should work out of the box. gulp-consolidate with jade is used in place of gulp-jade. We have a limitation thought, watcher misses new files in a folder, try stoping serve and relaunch it.\n. :+1: \n. @zckrs your workaround is great, I agree bootstrap should fix their bower.json. Still, I think we can't accept to deliver broken projects to our users because one of our dependency is bugged. We should add the override option in the generator as long as bootstrap doesn't fix the problem.\n. It's OS related, no problems with OSX or linux so it's only on Windows.\nI think it's a problem of related paths from gulp-inject which doen's work with Stylus AND on Windows.\nBut I don't have a windows device to check and fix, maybe somedy else could check?\n. I missed #601, can you checked than the correction does the trick?\n. Your mechanism as you descibe it should work. The build process gather all .html files and preload them in the template cache without caring how they will be consume by the app. In the bundle, you should be able to somehting like $templateCache.put(<template-relative-path>, <template-content). If you can't read because is uglified, just comment the uglified line in the build.js file.\n. You're right about the problem you described, but the problem doesn't exists any more in the new 0.12 version.\nWe have simply removed the proxy.js for a packaged lib which provide the feature.\n. I can't test but it's great !\n. it should be if css prepro = none and ui = bootstrap no?\n. :+1: :)\n. You can have multiple html entry points in the app folder if you copy index.html all should work. But if you really want everything separated including the bower deps, I thinks it's not possible, you should better start a different project in a diferent directory.\n. We had gulp-cache at the beginning but it generated lots of problems and bugs. We finaly removed it. Don't know if I want to give it another shot...\n. Nop this can't work. You added sourcemaps on the JS part you dont have the concat / rename files part. If we dont deliver sourcemaps for dist out of the box is because to my knowledge it's y et not possible with gulp-useref\n. It works ? :) I would be great, I have to test this...\n. I tried a bit. I got the source map of the bundles but I loose the original files paths. It's already way better than nothing but anyone succeeded to get even the files?\n. The fix was about puting an override block in the bower.json, do you see it ?\n. We'll not take a PR with all versions fixed. We already debate on the mater. Between those who wants always the last version et those who wants stability, there is no perfect solution.\nWe have to look into your point and find what've changed in bootstrap 3.3.5 and find a new solution.\n. Ok, I just gave a quick look at the bootstrap repo. It's exactly on the 3.3.5 release that they have changed their bower.json. The one we fixed in the 0.12.1. Did you well regenerate your project since you update to the 0.12.1 of the generator?\nBy the way, I see that they also have removed the font links in the bower file which will cause us other troubles.\n. :+1:\n. Done, sorry for the delay (directly in the master)\n. If you choose an angular lib for bootstrap, you don't want the the original js to be included.\nIf you choose a css prepro, you want to include the rich version of the style and not the compile one.\nYour changes will not work because it targets links of the files in the lib folder and they do not start with the file name.\n. Just a question, if we change the type from class to function, shouldn't we change the first character of the name of a lower case?\n. Sorry for the huuuge delay. I have verified that it keep working but could you give me an example for using it? Like a lib to add in the TSD file? \n. Nop it's not this. I already seen that the glyphicons stopped working.\nBootstrap recently removed a lot of linked files inside their bower.json including the fonts. It already caused another trouble: #622. Perhaps we could use the same strategy: add font path in the bower override...\n. I think we're both right. My point is the original problem but I look too quickly at your solution, it do the trick, I've to look deeper if it's enough generic to be kept in the code.\n. To be honest, I don't really remember why. I tried a messed with the dependency management of TS.\nThere is this strange difference between a real deps and a typeing reference with /// but it would be better to align typescript on webpack.\n. Just tried a little. Untill Typescript 1.5 is out, it's seams wrong. The module syntax is not standard, the typescript webpack loader doesn't support TS 1.5 easily. I was not able to come up with a satisfying solution.\nWhen TS 1.5 will be out with a standard module notation, I think we'll be able to align TS on Webpack as for ES6.\n. What do you call \"components\"? The js files are in the bundle, the html ones also. So your folder ends up empty but that's ok. In fact we have an issue to remove unused directories but yet, it should work.\n. Yep, it's perfectly normal that in dist, your folder are empty. All is bundled in index.<hash>.js\n. With template cache, the templates are pre-loaded in the Angular cache behind their relative path. It's totally transparent for Angular. Your code will ask for the standard URL and Angular will find it in its cache.\n. The path declaration of the templates could be wrong, remove uglify and look at the end of your bundle to look what is generated. The configuration of the path in the gulp plugin is https://github.com/Swiip/generator-gulp-angular/blob/08897c5c88e297bee9ab7571e625f086248a62f4/app/templates/gulp/_build.js#L27, perhaps you have to change it.\n. We should test before chosing a PR. This must work on some environment like it is or no inception test would work. But it could be interesting digging why there is a problem here.\n. Just ran some tests, no idea why it's not working for you without the / it should...\n. Did you install ruby & sass? It's not well documented but for Ruby Sass, you need to have it already installed.\nIn any case, can you give us your logs. What the build is telling you when it has to compile the styles?\n. Sorry but we're really not big ruby users. I can't help people figuring problems with ruby. If you find something we could improve in our use of sass your welcome, until them, I close this.\n. Dups #637\n. It's because bootstrap stoped linking fonts in their bower configuration file. It's fixed in the PR #662 \n. In your bower.json, add:\njson\n\"overrides\": {\n  \"bootstrap\": {\n    \"main\": [\n      \"dist/fonts/glyphicons-halflings-regular.eot\",\n      \"dist/fonts/glyphicons-halflings-regular.svg\",\n      \"dist/fonts/glyphicons-halflings-regular.ttf\",\n      \"dist/fonts/glyphicons-halflings-regular.woff\",\n      \"dist/fonts/glyphicons-halflings-regular.woff2\"\n    ]\n  }\n}\n. In your case, it's bootstrap-sass-official in place of bootstrap in the overrides\n. I was considering that when you choose Coffee for example you can still have JS sources, both will work. The change that you make will break this.\nWhat was the problem with the original conf?\n. Yep, at least it \"was\"\n. Is it not possible to keep the possibility excluding the spec.js files?\n. :+1: \n. You're the first seeing this. Unfortunately we didn't manage to pass protractor tests in the CI but still I run them frequently and never seen this.\nWhat OS, options are you using?\n. Ran lots of protractor this past few days for the RC and never seen something not deterministic (OSX).\nCan you test with the RC version?\n. :+1: \n. :+1: \n. It has been discussed many times. For me, it was more for a recipes than a built in feature. But I'm open to discuss it once again.\n. Yep, we have to update this. PR would be nice.\n. That should work... Traceur or Babel? Dev or Dist? How do you declare your service in the module?\n. Browser Sync need node-gyp which needs .Net and Python.\nIt's NPM mechanism and responsibility. I can't support all way to NPM usage. Report to BrowserSync or event node-gyp trackers...\n. Sorry but yes\n. Thanks @zckrs \n. Thanks for reporting, I reproduce it. I have to dig a bit...\n. Perfect, thanks for the analysis and the PR!\n. Tests done.\nI moved wiredep exclusions computing in a new src/bower.js file to unite specific bower computing.\n. You're right, I forgot to explain evil plan for the conquest of the universe.\nFirst of all, it should fix #644 and fix #637 as this code overrides fonts links in the main of bootstrap's bower file.\nBut more important, I'm working on the angular new router feature and it requires also a bower overrides and I needed this to do it correctly.\n. Yep, you raise a good point, the config with zepto is totally wrong, I'll make a PR...\nAs a workaround, you have to change \"zeptojs\" bower dep for \"zepto\" and exclude jquery (which is in transitive dep) in wiredep in the conf.js file.\n. I downvote Semantic a while ago. I agreed it's quite popular now. So why not with a good PR but not by me in a close future.\n. These tools, Gulp or Browser Sync are dev tools, you shouldn't run them in production.\nThe process is to use de build task to generate a optimized version in the dist folder and only deploy this folder on a production server with any HTTP server of your choice. Apache, Nginx, Node...\n. There is other issues on the subject of html5mode urls. I never really tried it so I don't have feedbacks for you. If someone has tried and could do a PR or a reciped it would be perfect.\nUntil then, I close this issue because the original subject is not relevant. Report or create issue about html5mode if you have more information.\n. Yep thanks @wgorder fix in master...\n. By \"this app\" you mean \"your app\" started with the generator and with 10 more external libraries. It's not very fair.\nThis problem is obviously an strict injection problem, the minification change variables names and the automatic injection stop working. The generator comes with ngAnnotate but it happens it misses something. Try commenting the uglify transformation and add ngStringDi (https://docs.angularjs.org/api/ng/directive/ngApp) to locate the problem.\n. Done.\nI also added 2 npm commands I often use while developping and was tired of retyping them every time.\n. I was waiting for @zckrs to come back from holliday for a review. Nothing stop this apart from that I think.\n. google.places is the module name, not a service name. Look at the lib doc https://github.com/kuhnza/angular-google-places-autocomplete.\nThis has nothing to do with the generator, please dig a little before asking.\n. Thanks! English is not our first langage as you can see...\n. The whole point of using ngAnnotate si to avoid mangle: false. I don't want it. You have to find why ngAnnotate is missing your injection.\n. Let's close this. Open an issue if you've still had a problem with minification\n. Not released doc: https://github.com/Swiip/generator-gulp-angular/blob/feat-readme/docs/recipes/upgrade-my-current-project.md\n. There is no generic way for us to copy bower library assets. So I'm not surprised it's not working out of the box. You'll be forced to add some Gulp code in the other task. (https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#other)\nAbout the fonts, all you need should be here: https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#fonts\n. As @zckrs said. Partially solved in the 1.0.0-rc1. I don't want to go farther right now.\nYou should look at isparta for ES6 coverage. But at the generator level it needs a different coverage tool by js preprocessor and I didn't find any for TypeScript so I don't want to go this way.\n. :+1: \n. What you see is a template syntax from Yeoman in the last major release: https://github.com/yeoman/generator/releases/tag/v0.20.0. It has nothing to do with Gulp.\nThis mechanism of yeoman templates should allow you to generate files with anything you want.\n. We merge them because people want to use variables from their libraries into their less code.\nIf there is out of memories, we'll have to find a way by configuring less or something...\n. Wasn't so sure about adding a new ui framework but this one is great and your integration is also great. I can't honestly refuse this :) :+1: \n. I think that even if AMDL is very young, it's interesting to offer a component library along with the choice of the UI framework so I think we should include it.\nIf you are willing to do the work, it's perfect, but just to be clear, you already did a great job and your PR will be merged even if you don't take this charge on you\n. @drGrove Thank you very much for your work. Your work has been integrated in a new PR #743. Sorry if it's not your branch which is actually merged.\n. Didn't know about PostCSS, seams great. But as it's a lot of maintainance to add a CSS prepro, I will not digg deaper anytime soon...\n. It's became quite popular since then. I could use this tracker as a tech monitoring ^^.\nI can't do it myself but a good PR would be accepted.\n. Still good but no time for me. Our main focus is on FountainJS right now, sorry if it reduce the quality here.\n. As it is still n heavy dev status, we don't communicate much on it. But we'll do when enough stable for a beta. I hope it could be soon.\n. It's not about ngAnnotate which is not used in the dev process (only dist).\nIt's a problem of file order which is (normally) solved by angularFileSort:\njavascript\n .pipe($.angularFilesort()).on('error', conf.errorHandler('AngularFilesort'));\nVerify you have this line and check in .tmp/serve/index.html the order of your files, the module should have been placed before the directive one...\n. Seems to be a miss from angular file sort. Never seen this before. Your modules are especially put in last which is even stranger....\nCan you build isolated project reproducing your problem and publish it on GitHub, it would be perfect for us to test (and for you to be sure it's not something else in your project)\n. I start fearing environmental pb. It works for me:\n<!-- inject:js -->\n    <script src=\"app/index.module.js\"></script>\n    <script src=\"app/components/webDevTec/webDevTec.service.js\"></script>\n    <script src=\"app/components/navbar/navbar.directive.js\"></script>\n    <script src=\"app/components/map/map.controller.js\"></script>\n    <script src=\"app/components/githubContributor/githubContributor.service.js\"></script>\n    <script src=\"app/components/cities/cities.module.js\"></script>\n    <script src=\"app/components/cities/cities.service.js\"></script>\n    <script src=\"app/components/cities/cities.directive.js\"></script>\n    <script src=\"app/main/main.controller.js\"></script>\n    <script src=\"app/index.run.js\"></script>\n    <script src=\"app/index.route.js\"></script>\n    <script src=\"app/index.constants.js\"></script>\n    <script src=\"app/index.config.js\"></script>\n    <!-- endinject -->\n. :+1: \n. Yep... forgot this. Why the coverage report didn't alert us?\n. It's donwloaded by bower but also injected in your index.html ? It should have been excluded in wiredep conf.\n. Bower doesn't offer a general exclude option. We would be forced to override conf for every deps in the bower.json, it would really be ugly...\n. We go already further thant some people want and it would be a lot more work to maintain (every example has to be done in js, es6, coffee, scss, less, stylus, bootstrap, material...). So we will not going further but as @zckrs says, we should list public project made with the generator if we found a way to know about them.\n. :+1: \n. :+1: \n. It's our shrinkwrap mechanism which prevent updating the dependencies.\nCould you:\nnode test/template-cli deps\ncd test/tmp/deps\nrm -rf node_modules\nnpm install\nnpm shrinkwrap\ncp npm-shrinkwrap.json ../..\nAnd commit the file? We should definitely write doc about that... and make a script...\n. This failure is actually a real one. You successed fixing the shrinkwrap thing but there is a use of gulp filter you miss: https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/gulp/_styles.js#L68\n. Yet another problem, doesn't understand this one...\n. I never tried but I know some of the users use it with Ionic. I hope some of these can answer.\n. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. Thanks for reporting. It's an interesting remark. Actually, I'm looking to integrate TS 1.5 and use ES6 module notation to keep only the typings reference. Your problem should go away at this point...\n. Look at #708\n. Forgot to mention that it includes https://github.com/Gillespie59/eslint-plugin-angular from @Gillespie59\n. Thanks for your analysis. Will take the new version :)\n. Using Webpack for standard project would mean using CommonJS too. It would lead using NPM in place of Bower and changing a lot of things.\nI have ideas of a v2 where all of this would be options but it's not for a close future.\n. You can for example exclude d3 from wiredep and it will be excluded from the index.html. You'll need a script loader then (any micro lib) to load manually d3 when needed.\nIf you want to load some Angular modules async, take a look at https://oclazyload.readme.io/ which is great.\nUnfortunatly removing some files from the index.html will also remove them from the optimization process because it's based on it. You'll need to handle excluded files in another task.\nI don't have recipes or a precise idea on how to do it sorry.\n. Didn't know this plugin and actually never thought of it. Could be great...\n. But after a second thought, there is a problem. People who chose no js prepro often want to spare the preprocessing step at development. Having this will force these user to have a preprocessing step.\n. Great but not complete. Try searching for bootstrap-sass-official in the whole project, there is references in node sources and tests.\n. Never run into this. It could be because I never keep BS alive long enough though. If it's confirmed, it's a bug for BS, try perhaps to update BS, it evolves quickly and I can't be up to date everytime.\n. The generator use BS quite out of the box, I don't see any option we use which could break it.\n. Perfect, thanks\n. Sorry, if you have to change this everytime but it seams not generic enough to be distributed to everyone. I'm sure, every one has it's way of doing this.\n. Some paths are duplicated in the index.html for the build process because of gulp-useref, try updating them.\nMore info: https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#useref\n. Check if it's not this known limitation of Gulp 3 watch described here: https://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#file-watching--pre-processing\n. Sorry to be rude, but this is an Angular dev question. This type of questions are not fitted in this tracker.\n. There is nothing to do that and we're not going in this way. Check another generator like one for node or Express.\n. Dups of #699 only yours pass tests. Any idea why?\n. You win this one :) :+1: \n. Perfect :+1: \n. Yep, this is a small fail in conception :)\nI think the better is to use angular-toastr. A PR would be awesome.\n. As said here https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#gulpconfjs, we are very thrifty about the conf.js file as we don't want to come back to a big json file like with Grunt.\nI don't see why it's needed to deport this conf from server.js to conf.js. It can be kept in server.js.\nWhat we can do is to have better doc about configuring BS. If you turn your PR into a doc update, it would be highly appreciated.\n. Thanks :) Would it be to much to ask if you could turn this into something a little more generic about \"all\" BS options including a link to http://www.browsersync.io/docs/options/ ?\n. gulp serve:distrun the optimized version of your app, there is no refresh feature possible, the optimization process is far too long\n. Nop, the watch isn't plugged to trigger the full optimization process. That has never be the intend.\nYou should be able to write a new task for that if you want even if I think that this is can't be a good workflow, you should have a bit of confidence in the optimization process to be able to develop with de dev mode.\n. :+1: for me, @zckrs, it was your feature, I wait your go\n. Can you check with #708? It changes a lot of things.\nBu I also discovered with Babel similar problem. I think it will be the case with all Webpack builds. In my private project, I fixed it by creating 2 webpack build: one with tests and one without, I think this will be necessary in the generator...\n. Sorry for the delay. I think it should be as easy as searching for html files in the tmp folder which is not done right now. It's a bug, thanks.\n. Thanks\n. Thanks\n. Thanks for sharing. Definitely needs to be a recipe of the generator\n. Thanks @busches. There is also the name of the generated files in index.html https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#useref\n. Thanks\n. I discovered that protractor tests where lost for js preprocessors, it made me missed the typescript / ng annotate problem. I fixed that too.\n. I don't see a really easy way. The BS configuration UI doesn't allow to stop \"live reloading\", it could be a feature to ask them.\nTo stop livereload, the only way I see is to comment browserSync.reload calls in the gulp scripts.\n. :+1: \n. :+1: \nStill WIP ?\n. For me it's not only about TS, but could be the work of having all tests in all languages.\n. All is covered now :)\n. Nop, just delete the files you doesn't want\n. - https://github.com/Swiip/generator-gulp-angular/tree/master/docs\n- ts definitions are not user sources but some kind of generated sources so it has not to be in src. About VSC, never used it, I can't help you\n- The Jade option add configuration for compiling jade files but there is no example shipped\n. A bit afraid of generating code (Yep I know, I made a generator) but if it's works well, a PR is welcome.\n. :+1: \n. I would have gave you the same advice. Generate a new project with the less option and look how we did it.\n. Great !\nBut that makes a tsd install necessary before launching gulp no? Shouldn't we add it at the end of the generation or at least in the docs?\n. :+1: \n. :+1: \n. :+1: \n. To be honest I doesn't have a Windows PC to test and not feeling very confortable with Ruby. We often considering to drop support of ruby sass. Do you really need the Ruby version?\nDid you check the versions of Ruby, Gem, Sass on your two OS (Win & Mac) ?\n. :+1: \n. :+1: \n. :+1: \n. I think you should post here: https://github.com/yeoman/generator-angular\n. You mean in dist? Do you have lots of dependencies? A bit more information would be necessary.\n. Thanks for the suggestion. I must admit I don't feel it. No big arguments, I just don't want too many long snake case directories. src, gulp and e2e feels right to me.\n. Your reasoning seams right but I don't see this for everyone. Few people has this need I think.\n. Yep...\n. You have to check in the options of BrowserSync. I guess you'll have to write a specific middleware.\n. Reproduced... I look into it.\n. I found that the coverage is always used. It breaks the watch mode. I fixed it here: #783\n. missing tsd.d.ts, seams like your tsd installhas fail earlier.\n. 'ngInject' and /** @ngInject */ should works the same https://github.com/olov/ng-annotate#explicit-annotations-with-nginject\nWe used the string version because Traceur is unable to preserve comments :/\n. I tested, 'ngInject' and /* @ngInject / works both. But the current way of defining directives don't. My PR correct this.\n. Need more information. Gulp serve, serve:dist? I don't see any reason why BrowserSync will refuse to serve .svg requests. Never heard of a ng-svg2js, it could not work as partials are loaded in angular though $templateCache but svg are just images serverd by the browser...\n. Ok, I see know, it's about material design and its icon provider. Sorry, I think it's beyond the support of the generator, ask Angular Material perhaps?\n. It would be nice yes, but preprocessing index.html is more complicated. Because ate the optimization time, a lot of other transformations appends on that file. It should be possible but to be honest we never found enough motivation to address this.\n. :-1: test never ok, coverage never done...\n. Should be better. Not a big fan of putting things from Karma conf to gulp but the API is really too bad to do better. Thanks @zckrs for the idea.\n. Done\n. :+1: \n. I configured commit status and no PR comments.\n. Thanks a lot! :+1: :+1: \n. To be honest ES5 style-guides are dead, we're in the era of ES6 now :)\nSorry for non productive post, it's late!\n. For a better response, there is no guidelines everyone agree with. Personally, I don't like IFEE.\nTo be as neutral as possible, we simply chose the most popular one and follow it. The point of the generator is not to be another guideline reference.\nIf the base code is not as you like, change it. It's what I do every time I start a project with the generator.\n. :+1: \n. :+1: \n. :+1: \n. Please put a minimum effort when filling an issue. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues\nOptions, which lib exactly, how do you included it ?\n. Innactivity\n. Remove the partials task and add the html extension in the files copied by the other task\n. Sorry for the delay. I'm wondering if this kind of setting is generic or not. Binary files are real for everyone, ok. But is this not a context specific need? You're the first facing this problem.\n. Interesting references thanks!\n. Yep, you're right, sorry for the delay. If the problem is still not fixed, we have to reopen that.\n. I get it, the principle of keeping html2js and keeping jade inside gulp is possible but the current conf is not correct.\nI added searching inside .tmp for html files but html2js needs also the stripprefx parameter. PR incoming.\n. released !\n. JS & CSS files inclusions are easy to locates (only in index.html). For images, we can't be sure : html, ng-src, css... Adding revision is not only about renaming the file but also renaming the link so we can't do it. Not in a generic way at least.\nYou can imagine using Compass and \"only in scss image links\" for example.\n. It's all about the bower.json of the dependency. It contains a main property which linked the files. If there is no scss files in this property, wiredep can't do anything.\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#bower-dependencies\n. I think your facing the same issue as here: #829, and makes this a dups of #802 and #731.\n@davewalk from my point of view, this is not the solution. partials task is only used at optimization time.\n. released !\n. There is ways to prevent Angular from bootstraping before Google lib being ready. But I really don't see how this is related to the generator.\n. I have an app deployed under a context right now using the generator. The context or sub path is simply an alias in the HTTP serveur.\nIn dev, I keep the app in the root context only being very cautious that I have all my links in relative and all is working fine.\nBut I must admit though, I didn't success to configure browser sync to simulate the context sub path in dev.\n. I perfectly see what you're looking for. I wondered if it was possible to split two options for the generator: dependency management bower/npm and commonjs yes/no which led to considering npm without commonjs.\nThe anwser is that I never found something like wiredep for npm. Simply everyone which use npm as dependency management also you commonjs and a bundler.\n. Sorry but the build process is absolutely not designed for this type of use. Creating a front end lib has a lot of different needs than an end user app. If you want to adapt it, you'll have quite a bit of changes to do.\nTo be a bit more precise, I think you should remove the rev thing as having your lib filename changing si not what you want.\n. :+1: \n. There is no automatic mechanism to make your imports. I don't think I want to have this.\n. Defining your module like here https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/src/app/_index.module.es6 mix import and angular registration.\nI like this notation. Do we need yet another auto import that people don't understand well?\nBut I'm not entirely opposed. I agree it can be painful to write all imports...\nBefore a too long debate. Is there a good gulp plugin to do that?\n. We never started writing a gulp plugin for a generator need. This is too much an investment for us. So I think this close the debate at least for now.\n. You should look at webpack options http://webpack.github.io/docs/code-splitting.html. But it's not something shipped by default in the generator.\n. ng-strict-di is active by default (https://docs.angularjs.org/api/ng/directive/ngApp). ng-annotate is present too to resolve this problem but with Babel, you have to put explicit comments /* @ngInject */ on top or 'ngInject' inside.\nI tested the blank generated project and it's working with Babel so I imagine it's on your code.\n. Could you build such a blank project and publish it on github because I simply not reproduce the problem. All injections are fine for me.\n. oO Your project is fine for me, Chrome & FF on Mac. Still I could see it's not working for you. I don't get what could possibly be different only on your Chrome :/\n. It's seems to be a problem with html5mode, ui router, and css loading. What could we do at the generator level?\n. Sorry but all of this make any sense to us. Please complete you issues with all needed informations https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md.\nAt least, tell us if you use html5mode for urls? If not, if there is a # in your URL I can't see how ui router could impact your relative paths.\n. :+1: \n. This has nothing to do with .yo-rc.json. It should work with bower install --save. It's wiredep which should inject the script in your index.html.\nRun gulp inject and check your .tmp/serve/index.html to see if the angular resource script is added.\n. :+1: \n. :+1: \n. :+1: \n. In addition, this will fail if you deploy in a sub context. I got the case in a project right now and certainly not want a root slash.\n. Even if I love this feature, I think it was on top as it was a big need of mine at the beginning of the project but it's way overrated, I admit that.\nYep why not disabled by default with a advanced option...\n. :+1: \n. :+1: \n. :+1: \n. Yep, not exactly the same symptoms, but can you check it's not the known problem describe in the warning here: https://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#file-watching--pre-processing\n. :tada: 1.0.0 :tada:\n. go !\n. I run all the test twice first, but expect it today ;)\n. done https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.0.0 :)\n. That's a shame for a MS tech ^^ (sorry I know, not helpful)\n. You don't mentions your options. With webpack (ES6 & TS), ng-annotate is used as a webpack loader.\n. As @nanocom said, you can't ask to BrowserSync to serve on a specific url. If you want to address BS with a specific URL you have to touch your /etc/hosts. For the port it's different, you have a parameter in BS conf as documented.\n. It's all about the bower.json from your dependency. Look at https://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#bower-dependencies\n. tsd install is run automatically at the end of the generation. If you didn't have the tsd command at this point it failed. If you install it after, you have to manually run tsd install.\n. Yes, I know. To be honest, I still doesn't have well understood why but it fails if you remove it. We had issues (#459) when it was not there.\nBut I agree, it's done twice and should be faster. Any hint would be appreciated.\n. Seriously @e-oz, you crossed a line. Be nicer here please. Fill good issues or just don't.\n. You don't have to be nice only if you like the project. If you don't like it, just stop using it.\n. Don't know about this problem. SO would lead to a problem with Selenium yes. I don't see a log about Chrome starting, does it open a window ?\n. Hmm, i've got Chrome 46, can you try updating? Perhaps also something about tweeking the CHROME_BIN env value but it should be transparent...\n. This kind of problem is usually a problem with the relative paths of partials preloaded in angular cache for optimization.\nThe debugging process is to turn of uglify and look in the bundle the address of the preloaded partials and compare them to the actual partial url needed, you should find a difference.\nIn the generic case, it works out of the box but if you have a specific server conf it could fail.\nAnyway, I close this as we got no details for your problem.\n. I didn't test every directive of ui bootstrap with the generator. If an simple update fix it, I doubt it's an important problem. You can PR your update, thanks.\n. :+1: \n. :+1: \n. Yep, I also wanted that but I didn't find a way 'till now. The problem is that there is two separate processes: webpack and useref. Webpack is writing in .tmp and useref from .tmp to dist.\nIt's perhaps possible but I didn't find a way. Perhaps sourcemaps from useref is able to take the mapping from webpack as an entry point? I know I succeeded such a thing for ruby sass.\n. Hi, sorry for the long delay before answering. I also got it working with the same kind of configurations on my personal project.\nThe problem is that it's a very different approach of the current karma conf in the project.\nPutting things together in the generator and handling TypeScript and Traceur options is complicated, handling pure JS and no webpack is also complicated.\nI'm not closed to have this, a PR would be great but doing this correctly could be difficult.\n. We should create recipe from all was said hear! Sure!\n. Sorry for the delay. I think it's about relative links between the preloaded partials and the index.html. Don't you have 404 on partials XHR? \n. :+1: \nBut is it for the master branch or for a v2 branch ? It's clearly a preparation for the v2 evolutions but as it breaks nothing, the master could be ok.\n. :+1: \n. Sorry for the huge delay. Thanks for your correction. Can you merge it? Also, please remove the update on the package version, each fix can't individually update the version.\n. If the scss file is specified in the bower.json of Foundation. It should be automatically injected in the index.scss, there is comments in that file to locate the place.\nindex.scss and vendor.scss have been merged because it causes problem to split the two files.\n. strange, test:auto use the same watch task than serve. Don't you have gulp.watch(path.join(conf.paths.src, '/app/**/*.jade'), ['markups']); in your gulp/watch.js file?\n. :+1: \n. :+1: \n. Did you choose the right options in the generator? The inclusion of the bootstrap.js is prevented (when not needed) by the wiredep exclusion configured in gulp/conf.js. By changing this conf, you should be able to auto inject bootstrap.js\n. Removing the exclude don't add bootstrap.js in .tmp/serve/index.html after a gulp inject?\nIf not, check your bower.json to verify you have a dep to bootstrap, and the bower.json of bootstrap in the bower_components folder to check that the bootstrap.js is well in a main property\nedit: closing the issue was a miss click\n. Documented and no responses...\n. That could be great. With a bit of doc to help configure the target HTTP server.\n:+1: \n. I understand the purpose but I don't think everyone want this. Everyone manage his console as he wants.\n. Didn't reproduced... Logs don't match. Try update npm, remove node_modules and run npm install?\n```\n\u279c  gulp-angular  gulp build\n[11:02:06] Using gulpfile ~/Workspace/Sandbox/gulp-angular/gulpfile.js\n[11:02:06] Starting 'scripts'...\n[11:02:07] Starting 'styles'...\n[11:02:07] Starting 'markups'...\n[11:02:07] Starting 'fonts'...\n[11:02:07] Starting 'other'...\n[11:02:08] Finished 'markups' after 590 ms\n[11:02:08] Starting 'partials'...\n[11:02:08] gulp-inject 2 files into index.scss.\nindex.module.coffee\n  \u2716  line 1  Line exceeds maximum allowed length  Length is 159, max is 150\n\u2716 1 error\n[11:02:10] Finished 'styles' after 3.25 s\n[11:02:10] Finished 'partials' after 2.51 s\n[11:02:10] Finished 'fonts' after 2.82 s\n[11:02:10] Finished 'other' after 2.75 s\n[11:02:10] all files 49.84 kB\n[11:02:10] Finished 'scripts' after 3.79 s\n[11:02:10] Starting 'inject'...\n[11:02:10] gulp-inject 1 files into index.html.\n[11:02:10] gulp-inject 10 files into index.html.\n[11:02:10] Finished 'inject' after 120 ms\n[11:02:10] Starting 'html'...\n[11:02:11] gulp-inject 1 files into index.html.\n[11:02:12] dist/ maps/styles/app-f81a2b14a0.css.map 790.06 kB\n[11:02:12] dist/ maps/styles/vendor-c2769e81fe.css.map 106.11 kB\n[11:02:12] dist/ maps/scripts/app-90aa62481f.js.map 14.49 kB\n[11:02:24] dist/ maps/scripts/vendor-cfd7dc3e05.js.map 3.38 MB\n[11:02:24] dist/ styles/app-f81a2b14a0.css 118 kB\n[11:02:24] dist/ styles/vendor-c2769e81fe.css 60.71 kB\n[11:02:24] dist/ scripts/app-90aa62481f.js 6.8 kB\n[11:02:24] dist/ scripts/vendor-cfd7dc3e05.js 520.41 kB\n[11:02:24] dist/ index.html 654 B\n[11:02:24] dist/ all files 4.99 MB\n[11:02:24] Finished 'html' after 13 s\n[11:02:24] Starting 'build'...\n[11:02:24] Finished 'build' after 25 \u03bcs\n\u279c  gulp-angular  l dist\ntotal 24\ndrwxr-xr-x   9 Swiip  staff   306B 18 nov 11:02 .\ndrwxr--r--  20 Swiip  staff   680B 18 nov 11:02 ..\ndrwxr-xr-x   3 Swiip  staff   102B 18 nov 11:02 assets\n-rw-r--r--   1 Swiip  staff   4,2K 18 nov 11:02 favicon.ico\ndrwxr-xr-x   7 Swiip  staff   238B 18 nov 11:02 fonts\n-rw-r--r--   1 Swiip  staff   654B 18 nov 11:02 index.html\ndrwxr-xr-x   4 Swiip  staff   136B 18 nov 11:02 maps\ndrwxr-xr-x   4 Swiip  staff   136B 18 nov 11:02 scripts\ndrwxr-xr-x   4 Swiip  staff   136B 18 nov 11:02 styles\n\u279c  gulp-angular  l dist/scripts\ntotal 1040\ndrwxr-xr-x  4 Swiip  staff   136B 18 nov 11:02 .\ndrwxr-xr-x  9 Swiip  staff   306B 18 nov 11:02 ..\n-rw-r--r--  1 Swiip  staff   6,6K 18 nov 11:02 app-90aa62481f.js\n-rw-r--r--  1 Swiip  staff   508K 18 nov 11:02 vendor-cfd7dc3e05.js\n```\n. Seems that selecting all modules creates a line too long for the coffee lint configuration.\nAs a workaround, try look at the coffe lint conf or add line breaks.\n. Yep, it's an oudated part of the documentation.\nWe extract recently tsd from the generator to use it as an external tool.\n. Like gulp and bower, tsd as now to be installed in global. It's what I seen in the TS community. I prefere to document that instead of trying some magic workaround.\n. Sorry, missed your issue. You don't need Babel 6, I didn't try with it. I've got a repo with some async functions in an Angular app here: https://github.com/Swiip/5to6/tree/es6\n. That should be a really old .yo-rc.json file as it don't mention a jsPreprocessor choice. I'm afraid we don't support backward compatibility that old.\nTry refusing using the old .yo-rc.json and choosing equivalent options.\n. It has changed since I did this, thanks.\n. As @busches says, we can't take angular dev question sorry, refers to the links he gave.\n. Do you use gulp test or gulp test:auto? We added coverage on gulp test, it slow down the execution by instrumenting the code. Could be that...\n. Thanks for reporting. Removing ng-strict-di should not be the solution...\n. Did you check that there is no regression by updating the version?\n. Better wait the 1.0.0 final, it should be soon now.\n. :+1: \n. Please follow https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md and a bit more of description would be nice.\n. Sorry, I don't have a Win env to test that kind of issues. Hope someone of the community could help.\n. That should be fixed with the switch on ts-loader in the last release: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. Here's the theoretical mechanism, try check what's going wrong:\n- We override the bower.json of bootstrap to reference the fonts\n- We copy the fonts in the dist folder located by wiredep in the task fonts\n- We adapt the relative urls in the css with a replace operation in the html task\n. :+1: \n. Arg, I've to look deeper...\n. Thanks for sharing.\n. Yep, this is correct. The lib we use to do this is https://github.com/taptapship/wiredep.\n. To be honest, I missed that. I wanted to aligne ES6 and TS for the module handling. Can't we just remove this namespace ? (I'm not a specialist of TS)\n. Yep, mixing eslint-angular and ES6 can lead to false positive warnings. Still eslint-angular is a great plugin, I want to keep it, but a bit more of configuration could be better... (poke @Gillespie59)\n. Seems to me a dup of #660, can you confirm?\n. TS option trigger full TS 1.5 code using ES6 modules Webpack and compiled by a typescript loader inside of Webpack.\nTo install a third party lib, you have to use bower. If you want typings, you have to also use tsd as an external tool.\n. @bagusflyer can you explain your question? TS version of what? Of a third party lib? If it's that, I don't know, there is no \"only TS library repository\" I know of.\n. Seems great to me. Unlike the other time I'll take the time to perform some manual tests!\n. Thanks @alfaproject \n. stream() should be just a shortcut. You don't have to pass an argument because it returns a Node stream and it will trigger reloads in BS only for the files he found in the stream.\n. Perfect! :+1: \n. :+1: Thanks a lot.\n. I was looking at the same time. The difference is that the directive factory function is closed before and not after. I would say, why not.\n. Can you rebase this ?\n. I never faced this need and you fix seams legit.\n:+1: Thanks. \n. This warn is not relevant and the peer dep has been removed in the master. Are you sure the install actually broke?\n. Is it so much of a burden to just delete the src folder after generation? It's a really open question, you can have feedbacks on such a process and found some configuration failing. It could be an option but as always, it's a lot of ifs and this needs to have a real value.\n. :+1: \n. When I made the move, I didn't succeed importing the typings with an ES6 import. The TS reference notations worked in the other hand. Does it stopped working out of the box? It could be possible if a TS version upgrade deprecates the reference notation...\n. That doesn't look like a TS error. It looks like a Angular's dependency injection error. It fails to find a $state service. Did you load ui router (script and module) well?\n. Ok sorry, don't you want a relative path in this import ?\nimport { RouterConfig as GsRouterConfig } from 'routing';\n->\nimport { RouterConfig as GsRouterConfig } from './routing';\nAs it is, it will search for a lib routing.\n. arf ^^\nWith the failing version, there is any error in the console during the TS compilation?\n. Done in another PR, thanks anyway !\n. :+1: \n. I'm not a big user of sass. I'm not sure the current configuration is perfect. The inject will take every scss files whatever there is a _ or not at the beginning.\nIf it's a common use to have _ on files you want to include, we could just filter the files not to be injected. Or at least, you can do it in your project.\nIt takes place in this selector: https://github.com/Swiip/generator-gulp-angular/blob/master/generators/app/templates/gulp/_styles.js#L38\n. This could be closed yes. I keep a recipe label on it to create a reference in the docs. I wonder if it can be a default configuration as it seems that using _ as prefix for scss file is a common use.\n. That looks like an old bug, which version do you have? \n. Arf, no, I read to quiclky. It's not this old bug.\nTests compile sources adding specs inside the bundle, serve compile without them. But both put the generated bundle at the same place. One will override the other then.\nYou can just ignore this as it's not a problem you'll have when you don't launch the tests in parallel. Or you have to try change the configuration of the test process to use a bundle with another name like bundle-test.js. But I fear you have to change many configurations to make it working.\nIf you succeed and are very brave, I'm interested in a PR for this :)\n. build should trigger scripts task which will recompile and override the bundle without the tests. Can you check if or why this is not happening? \n. The commands you give are launched sequentially? If yes, I don't see how the compiled bundle could be impacted by something happening after. If it's in parallel, it's simple, both tasks gulp and gulp test use the same temporary file .tmp/serve/index.module.js and one will override the other.\nPerhaps the easiest for you is to create a gulp ci test which sequence the other two.\n. Yep, it's a feature to have. I think the real good solution is to move webpack inside karma with the karma webpack plugin. I tested it in a private project. It's faster and don't have this issue. It also enables the possibility to have ES6 coverage with isparta...\nBut it's a lot of ifs in the karma.conf.js whether you use webpack (ES6 / TS) or not (pure JS).\n. I greatly encourage you to fix the real problem, and not muting the linter, like mixing spaces and tabs are really a mess.\nAnyway, you can tune the linter in .eslintrc (it's eslint, not jslint) choosing the rules you want. Or completely remove it in gulp/scipts.js by removing the lines about eslint.\n. Sorry, we already had the debate about the version number strategy.\n1. ^1.2.1 means >1.2.1 & < 2.0.0\n2. ~1.2.1 means > 1.2.1 & < 1.3.0\n3. 1.2.* means > 1.2.0 & < 1.3.0\n1/ is the recommended with semver as it should not be breaking changes but we decide it's still too dangerous\n2/ is what we choose, as it is a bit more precise than the star in 3\nFor Bootstrap, I think we don't use any ui bootstrap component in the seed project, so updating to the 0.14 is ok.\n. :+1: \n. I have npm 3 and it's working. Npm update implies a difficult migration for a lot of people but it should work. As @busches said, you can't just gives us error logs. We need your options, I don't even know at which point you have this errors? Installing the generator? Using it? Check the contributors doc.\n. Please put some effort in submitting, at least respond to direct questions.\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. @jasteph Thanks for these elements. Looks like awesome-typescript-loader has some serious issues on Windows. I remember choosing this ts loader because it was the only one using TS 1.5 at the time but of course every ts loader has 1.5+ now. We should change loader.\n. Please describe your options as asked here https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. Could you try with the last version? (real question, I know that it could be difficult if you already have lots of work in your project)\n. Moving folders after the generation is more complicated than that. There is references on folders paths inside the comments in your index.html. Look here https://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#useref\n. :+1: Thanks\n. Inject is launched during the dev process. You can't put partials as a dependencies of it. I don't want partials to be compiled during dev.\n. :+1: \n. It's not possible yet. Dups of #793\n. A big refactoring is planned for a v2 which will address Angular2 and React but nothing is will happen in the v1.\n. I'm in the middle of prototyping the whole thing with @zckrs. Perhaps some kind of beta in spring?\n. That should be fixed with the switch on ts-loader in the last release: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. Yep, it's not enough to only change paths in the conf.js. We should have a recipe for this...\n. :+1: Thanks\n. Cool you make this working. I honestly don't see a really better solution. We use plugins like gulp-useref and gulp-revReplace to update the paths, I doubt it's possible de to make them write non valid paths. I think your solution is the best you can do.\n. You really give not enough info. What options, what fails in generating partials? If the partials task fail, there is no way the bundle could work.\n. Why ? The template is just a demo and is already enough complicated.\n. :+1: \n. :+1: \n. I reopen this. Your solution seems great. I'm willing to merge this but you have to rebase it.\n. Nice, can you rebase it ? (sorry for the huge delay)\n. awesome!\n. Angular 1.5 is supported by the new release: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0.\nBut it's only the deps, we don't use the component API. The problem is that we support the legacy 1.2 version and we would have to make two version of the code. Any PR this way would be appreciated, until that, we continue like that.\n. That could be a trick. I'm open to PR like this. But it will not come from me as I'm focused on Fountain\n. This should be resolved with the switch on ts-loader: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. both minifys has been updated now, lodash 1 is a transitive dependency\n. Having the file generated with a hashcode in the filename is an important feature to have to resolve cache issues on releases. If accumulation of files is a problem, use gulp clean or even just \"gulp\" which already run the clean.\n. :+1: \n. Comment the uglify transform in the build and look into the bundle generated for the urls stored in the cache provider. Check also the name of the angular module in which they are added, if you changed the main angular module name, they could be added in a module not loaded.\n. It's in bower dependency of Angular. That's why we have it and exclude it. The other solution would be to abuse of the bower override configuration but I didn't feel this as the right solution.\n. :+1: \n. It depends if you chose angular foundation or not. If yes, there should be an exclusion in conf.js for foundation.js as angular foundation replace it. If not, it should be there. Can you give us more input?\n. In the gulp/inject.js, you've got the configuration if the gulp inject plugin which select the css files to put in the index.html. Change the file selection to exclude your file and add it manually in the html.\nAfter that, remember to put your file outside the build comments in order that your file is not included in the bundle.\n. Yep, the foundation dep should be updated but it could be a lot of work, any help appreciated.\nIf you want to update the version in your project, just use Bower to update the dep.\n. Thanks to propose your help. Best way to work on this is to update first foundation on your project and make it works. Then try to apply the changes in the different template of the files you changed.\n. Thanks again, merged now:  https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. We seen this, it's in the todo. Any help appreciated.\n. Merged: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. We have to switch to ts-loader which is better now.\n. Released : https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. These kind of problems are usually about path matching. Check the URLs of the template that your app is asking and the one preloaded in the bundle. They have to match exactly including the first \"/\".\nTo be able to read your bundle, you can comment the uglify transform.\n. :+1: \n. That was needed for some time now... Thanks.\n:+1: \n. ok thanks :)\n. That's a good tricks for you but I'm not sure that will be understood for everyone.\n. I'm not arguing it's not important or interesting and you're right to use it.\nBut a task which has to be launched only when the server is already up will lead to misunderstandings. I just prefer to not bring this as a default conf.\n. I don't see a version bump in the bower.json, I missed something ?\n. Yep that's it\n. Thanks and sorry for the delay these days...\n. This change is a bit more complex, I'll do it myself, thanks anyway.\n. This is quite old, I was stuck with this while creating the initial MD template. But there was a lot of MD version since, it could perfectly be obsolete.\n. Please put some effort when creating an issue.\n. Seriously, just a title which could be interpreted in an hundred ways, no description, not read the contributing docs and I'm the rude guy?\n. Nop sorry, updating from tsd to typings is a task I have yet to do. I don't have tips on how to do it.\n. :+1: \n. We chose to go for md files in the repo as documentation. The wiki is not used, I could as well close it. If you want to contribute to docs, you can make a  PR \n. :+1: \n. Hello, it's not your fault, the master is failing right now. Sorry, with the work on FountainJS, we don't have much time for this project.\n. Tests are fixed\n. Thanks for reporting.\n. Did you checked that there is no regression ? Sorry but the tests are failing right now and anyway, protractor is not launched on travis...\n. Looks like a problem of native compilation of node sass on Windows. Not sure it's related to the generator.\n. I don't think we want to optimize our template that much. It's not supposed to be kept, just an illustration of what you can do. Most people will simply start by deleting it. So what the point of such an optimization?\n. I don't know a tool like wiredep which can list NPM deps and give me the list of JS files to inject (I searched for it). So it's not possible to have the same \"auto inject\" mechanism.\nStill, you can publish the node_modules directory in Browsersync (with an alias like the one for bower_components) and add the script tags in the index.html yourself and it should work.\n. You have to add an alias in browsersync like this one: https://github.com/Swiip/generator-gulp-angular/blob/master/generators/app/templates/gulp/_server.js#L24\n. I'm not maintainer of gulp or gulp-less, why do you post this here?\n. You'll have to change several configurations. Right now, I can think of:\n- gulp/conf.js yes but also...\n- .bowerrc\n- gulp/serer.js\nFrankly, try a search \"bower_components\" in your all project.\n. Browsersync reloads are triggered by commands likes browserSync.stream() or browserSync.reload() in the gulp files. You should be able to just comment them.\n. Are you using TS ? If so, it's a known bug fixed in the last release (1.1.0)\n. Strange, first time I see that. Try updating Webpack and babel-loader to see if it's better.\n. I don't have easy access to a Windows computer to make tests. Any help on this would be appreciated.\n. Dups of #1001. Master fix this, wait for the next release (or change to ts-loader yourself)\n. Thanks a lot !\n. We switched from jshint to eslint and I don't want to support multiple solutions. Consider switching too, eslint is objectively way better.\n. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. Not sure what you really want. angular-mocks is a testing library and should be in devDeps and not loaded on gulp serve.\nIf, for any reason, you want it as regular dependency (even if it's not recommanded) you have to move it out of devDeps with the regular deps.\n. Yep, it is.\nBut about bower deps, dev deps are for testing : deps you don't use normally.\n. That seems not to be our code. We can't spend time for debugging every app started with this generator.\n. This seems to me a strange case yes. Usually, libraries are compiled in ES5 whatever the version of the source. Your choice of preprocessor should only concern you and you include ES5 versions of libs.\nAny other case will be at least, not handled by default in the generator\n. You can clone the project and publish it in your local NPM with npm link. But indeed, a new 1.1 release is planned for really soon, perhaps even today. Sorry for the lazy maintenance these days but we're focused on the next version (https://github.com/FountainJS/generator-fountain-webapp)\n. Done: https://github.com/Swiip/generator-gulp-angular/releases/tag/v1.1.0\n. It's handled in master, it will be released soon. (https://github.com/Swiip/generator-gulp-angular/commit/be08a9099de01e3f9576297d5b544639af817914)\n. To be honest, I'm afraid of side effects for changing major version of Phantom. Also considering that I want to release quickly and I'm more focused on the next version of the generator.\n. It's an alternative I considered while I was designing the ES2015 version (which ask the same questions). I decided for the current version especially to use the modules explicitly. It's a matter of taste, you're free to choose differently and your approach has its avantages but I doubt choose this as a choice by default.\n. Yep, a recipe could be great. For the workflow, I would suggest to add src/**/*.js in Webpack entries. You could even consider removing webpack and using a simple gulp-typescript followed by the standard injection you have with standard JS.\n. You can try dinamically include all files with a trick i learned with karma webpack https://github.com/webpack/karma-webpack#alternative-usage\nBut you just blow up all modularization aspect of TS...\n. We don't have examples. The concept was simply that as we have tests files inside the src folder, it's important to have the right files pattern to be excluded for testing.\nWhen you write tests, you often have files which are tests utils but no actual tests, often it's mocks object.  So we added this to prepare for these kind of needs. If you don't use it, just remove it and that's all.\n. I think it is yes.\n. Perhaps the upgrade has been done a bit hastily. angular-foundation-6 seems to be the right move.\n. Doesn't know about but it seems to be right.\n. I suppose you should import the less files of the theme from your index.less.\n. Webpack conf exclude node_modules for the Babel loader. I don't think it's a right approach to publish ES6 modules right now, you should precompile it.\n. These annotations are for https://github.com/olov/ng-annotate which resolves DI issues with minifying.\n. It's needed for the application to work when minified. If you remove it and use optimize version (serve:dist) it should fail.\n. This should be as everytime the bower.json from the lib which is not filled right. There is a doc about that.\n. It also could be that you didn't use --save in the bower install. Libs which are not in the local bower.json are not injected.\n. That's nice, could one of you make a PR with that?\n. There is a lot of different approach. Mine would be to create an Express project beside the frontend one. You can keep BrowserSync of the front project while developing and deploy the dist folder in the Express project for production.\n. Dups for #793\n. You should give us more input. Which version, which options ? What do you have in the typings folder and the typings.json file...\n. If you're looking for component generators, we don't have them (#793)\nIf not, it's a normal Angular app, just create modules and place them as dependencies of your main module.\n. Is there anything useful to you there https://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#file-injection ?\n. There is a lot of different ways for using ES6 with Angular. We chose one for this generator but it's not really trivial. You could find blog posts about this. You could also generate an ES6 version of the generator and move your code into it.\nIt requires change in your code and also important changes in the build tools.\n. This was a long time ago with a early version of MD where I didn't find a way to make it works without that. But I'm pretty sure it's obsolete now and should be deleted.\n. The best would be to submit a Pull Request with this fix. A generator is not the simplest project on which make your first PR as your change has to work for every configuration: like removing in the scss should mean that it has to be removed also in the less version for example... But if you want to git it a try, it would be great! I'm sure the git/github workflow to make a PR is documented in several blog post around.\n. Switching from Bower to NPM is a lot more complicated than just having NPM to use a flat dep directory. A tool like wiredep on which we heavily depends doesn't exists for NPM.\ngulp-angular will not remove Bower but we're working hard on the new version which have dependency management as an option: https://github.com/FountainJS/generator-fountain-webapp\n. Not a solution but some elements: Angular filesort is a plugin we use to sort files injection for them to be rightfuly ordered. It uses a ES parser which obviously can't understand this syntax.\nTry looking for an update of this plugin.\nIf you use Babel, I think this plugin happens after Babel. I suppose Babel suppose this has not to be compiled but perhaps it exists a plugin to force transpilation for this.\n. The simpler way would be to generate two apps and merge the 2 dist folders at the end. 2 app folder should be possible too. For Bower, it shouldn't be a problem while bower_components is already an alias outside the sources in the server and libs are packaged in the dist version.\n. That's not an error, it's eslint-plugin-angular which tells you to better use angular.element in place of $. You can disable this rule or do what it says.\n. Bower dependencies which contains assets are not easy to handle. Look at this recipes, it can give you some leads https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/add-fontawesome.md\n. Please put more information about your issue. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. You have to locate where in your gulp files the sources files are listed and injected in your index.html. Then you have to find a strategy to make multiple selection and multiple injection or simply to ignore some files to not inject them in the index.html.\n. We had a bug about this. But you point exactly the configuration which excludes tests from the dist bundle.\n. Basically, you remplace gulp-sass for gulp-compass. I have it on one of my projects. We don't support it out of the box because it demands a lot of Ruby configuration we don't want to support. But once your Compass works outside Gulp, it should be ok.\n. You have to create new angular modules in which you add your controllers and directives. You make the link by adding your new module in this module as a dependency next to the libs.\n. The version is quite old yes, PR are welcome\n. Wiredep allow to configure exclusions. Perhaps by using different wiredep configurations for dev and dist, you can achieve what you want.\n. \ud83d\udc4d \n. wiredep exclusions should be improve to assure that there is no exclusion of something that is not present in the first place. But I think that this was not the case before, so I don't intent you correct it.\n. Yeah, completely :) I knew that it was not so much es6-y but I didn't really practice with it. I try to make something working and I think that the es6 and the ts versions will need some upgrades...\n. This would be perfect, thanks\n. I was wondering why I did this this so badly but in fact, it's because of the merge. When I did this, pure CSS didn't need to be watched because there was nothing to do with it.\nNow, there is the injector to run so it's really needed.\nJust for explanation...\n. You're right but I think I'll keep this waiting for a further refactoring PR...\nThis one is too big already\n. This md-toolbar also disturb me. There is also one inside the header.html template.\nI even tried to simply removing this one and it's working fine...\n. And to be precise, it's not a plugin :) It's a util library which appends to be prefixed by 'gulp-' :)\n. Had a hard time to find this back: https://github.com/gotwarlost/istanbul#configuring\nSearching for this, I found examples of project which have only set the properties which are not defaults, it could be simpler...\n. arf :)\n. I suppose it was non breakable space. Mac unfortunatly allow to create them really to easily (alt-space)\n. Yep, perhaps it's better. lodash -> array -> this.insight.track.apply\n. In fact, I don't find more than you how to explain why it's outdated. The only thing which pains me is that the redirection to Fountain is not visible enough.\nCan you simply keep the warning you have and the bring back the Fountain anouncement we have now and add the logo perhaps?\n. ",
    "aarondufall": "I'm on OS X 10.9.3\nI reverted the capabilities in the protractor.conf to the original one that where provided\nThis is the error that I'm getting \nnode_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:1702\n      throw error;\n            ^\nUnknownError: The path to the driver executable must be set by the phantomjs.binary.path capability/system property/PATH variable; for more information, see https://github.com/ariya/phantomjs/wiki. The latest version can be downloaded from http://phantomjs.org/download.html\nNote: I removed all my local directory structure for the error\n. ",
    "shinnn": "No problem.\nThanks for merging!\n. ",
    "DarKDinDoN": "Hello,\nHave the same issue.\n\nbrowser-sync@0.9.1 node_modules/browser-sync\n\u251c\u2500\u2500 path@0.4.9\n\u251c\u2500\u2500 commander@2.1.0\n\u251c\u2500\u2500 opn@0.1.2\n\u251c\u2500\u2500 dev-ip@0.1.7\n\u251c\u2500\u2500 browser-sync-client@0.1.9\n\u251c\u2500\u2500 ua-parser-js@0.6.2\n\u251c\u2500\u2500 optimist@0.6.1 (wordwrap@0.0.2, minimist@0.0.10)\n\u251c\u2500\u2500 portscanner-plus@0.1.0 (q@1.0.1, portscanner@0.2.3)\n\u251c\u2500\u2500 http-proxy@1.0.3 (eventemitter3@0.1.2)\n\u251c\u2500\u2500 lodash@2.2.1\n\u251c\u2500\u2500 resp-modifier@0.0.4\n\u251c\u2500\u2500 cl-strings@0.0.5 (chalk@0.4.0, lodash@2.4.1)\n\u251c\u2500\u2500 gaze@0.5.1 (globule@0.1.0)\n\u251c\u2500\u2500 browser-sync-control-panel@0.0.5 (through@2.3.4)\n\u251c\u2500\u2500 socket.io@0.8.7 (policyfile@0.0.4, redis@0.6.7, socket.io-client@0.8.7)\n\u251c\u2500\u2500 connect@2.13.1 (uid2@0.0.3, methods@0.1.0, debug@0.8.1, cookie-signature@1.0.1, pause@0.0.1, fresh@0.2.0, qs@0.6.6, bytes@0.2.1, buffer-crc32@0.2.1, raw-body@1.1.3, batch@0.5.0, cookie@0.1.0, compressible@1.0.0, negotiator@0.3.0, send@0.1.4, multiparty@2.2.0)\n\u2514\u2500\u2500 url@0.7.9 (querystring@0.1.0, punycode@1.0.0)\ngulp-imagemin@0.5.1 node_modules/gulp-imagemin\n\u251c\u2500\u2500 object-assign@0.3.1\n\u251c\u2500\u2500 pretty-bytes@0.1.1\n\u251c\u2500\u2500 chalk@0.4.0 (ansi-styles@1.0.0, strip-ansi@0.1.1, has-color@0.1.7)\n\u251c\u2500\u2500 gulp-util@2.2.17 (lodash._reinterpolate@2.4.1, dateformat@1.0.8-1.2.3, minimist@0.1.0, lodash.template@2.4.1, multipipe@0.1.1, vinyl@0.2.3)\n\u251c\u2500\u2500 through2@0.4.2 (xtend@2.1.2, readable-stream@1.0.27-1)\n\u2514\u2500\u2500 imagemin@0.4.6 (get-stdin@0.1.0, stat-mode@0.2.0, ware@0.2.1, rimraf@2.2.8, image-type@0.1.4, nopt@2.2.1, tempfile@0.1.3, fs-extra@0.8.1, imagemin-svgo@0.1.0, imagemin-optipng@0.1.0, imagemin-gifsicle@0.1.1, imagemin-pngquant@0.1.2, imagemin-jpegtran@0.1.0)\nexecvp(): No such file or directory\n     _-----_\n    |       |    .---------------------------------------.\n    |--(o)--|    |        Bye from us! Chat soon.        |\n   `---------\u00b4   |                                       |\n    ( _\u00b4U`_ )    |            The Yeoman Team            |\n    /___A___\\    | https://github.com/yeoman/yeoman#team |\n     |  ~  |     '---------------------------------------'\n   __'.___.'__\n \u00b4   `  |\u00b0 \u00b4 Y `\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: spawn ENOENT\n    at errnoException (child_process.js:988:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:779:34)\n\nHappens after answering the questions.\n. ",
    "stevebritton": "I was able to resolve this issue by adding a leading / to the template URL in the routeProvider.\nFile: App_Name/app/scripts/App_Name.js\nLine 7:\ntemplateUrl: '/partials/main.html',\n. ",
    "pulakb": "\"By choice, I prefer focusing on adding more framework options than adding this kind of tasks....\" - Can you please explain it a bit more @Swiip \n. ",
    "color2life": "+1\n. ",
    "chachra": "Would love angular generator options also if possible in this. Its a nightmare right now to get angular / yeoman / gulp to play well together and get fast pace of development that the angular generator provides!\n. +1\n. ",
    "morrislaptop": "If this generator were to add 'App' to the end of the project name then we could simply use the official angular generators in a project that was generated with gulp-angular\n+1\n. ",
    "milushov": ":+1: \n. ",
    "stewwan": "+1\n. @Swiip yep, in the 6to5 version it run Like a boss. I chose this One. Thx.\n. @Swiip @zckrs \nany chance to reopen this issue? it seems that the plugin html2js is not working properly.\n``` shell\n$ gulp test\n  Error: Unexpected request: GET app/components/leadForm/leadForm.tpl.html\nNo more request expected\n      at $httpBackend (c:/dev/gen3/bower_components/angular-mocks/angular-\njs:1227)\n      at sendReq (c:/dev/gen3/bower_components/angular/angular.js:9668)\n      at c:/dev/gen3/bower_components/angular/angular.js:9383\n      at processQueue (c:/dev/gen3/bower_components/angular/angular.js:132\n  at c:/dev/gen3/bower_components/angular/angular.js:13264\n  at c:/dev/gen3/bower_components/angular/angular.js:14466\n  at c:/dev/gen3/bower_components/angular/angular.js:14282\n  at c:/dev/gen3/src/app/components/leadForm/leadForm.directive.spec.j\n\n```\ndirective\njs\nangular.module('gen3').directive('leadForm', /*@ngInject*/ function() {\n        return {      \n            replace: true,\n            templateUrl: 'app/components/leadForm/leadForm.tpl.html'\n        }\n    })\ntemplate\nhtml\nlidless, wreathed in flame, 2 times\nspec\njs\n'use strict';\ndescribe('<lead-form> component', function() {\n    var $compile,\n        $rootScope;\n    beforeEach(module('gen3'));\n    beforeEach(inject(function(_$compile_, _$rootScope_) {\n        $compile = _$compile_;\n        $rootScope = _$rootScope_;\n    }));\n    it('Replaces the element with the appropriate content', function() {\n        var element = $compile('<lead-form></lead-form>')($rootScope);\n        $rootScope.$digest();\n        expect(element.html()).toContain(\"lidless, wreathed in flame, 2 times\");\n    });\n});\nyo-rc\njson\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.15\",\n      \"angularModules\": [],\n      \"jQuery\": {\n        \"key\": \"none\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"ui\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"css\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. according by this sample, i realized that i need to append the html templates in karma.conf\nhere i solve this way\njs\n return wiredep(wiredepOptions).js\n    .concat([\n      path.join(conf.paths.src, '/app/**/*.module.js'),\n      path.join(conf.paths.src, '/app/**/*.js'),\n      path.join(conf.paths.src, '/**/*.spec.js'),\n      path.join(conf.paths.src, '/**/*.mock.js'),\n      path.join(conf.paths.src, '/**/*.html') //adding templates        \n    ]);\ni can make a PR if it is right\n. @zckrs #546\n. you need to append html templates in karma.conf \npath.join(conf.paths.src, '/**/*.html') //adding templates\notherwise, the plugin karma-ng-html2js-preprocessor not works properly\n. Sounds like you are trying another generator version, look at my yo-rc above, i am using 0.11\n. @dereklin okay, now check your karma.conf for listFiles(), it should look like this. \n``` js\nfunction listFiles() {\n    var wiredepOptions = _.extend({}, conf.wiredep, {\n        dependencies: true,\n        devDependencies: true\n    });\nreturn wiredep(wiredepOptions).js\n    .concat([\n        path.join(conf.paths.src, '/app/**/*.module.js'),\n        path.join(conf.paths.src, '/app/**/*.js'),\n        path.join(conf.paths.src, '/**/*.spec.js'),\n        path.join(conf.paths.src, '/**/*.mock.js'),\n        path.join(conf.paths.src, '/**/*.html') //<---- //add this line  \n    ]);\n\n}\n```\nMaybe you have to pull generator from master, if you do not have this method.\n. ",
    "behrad": "+1\n. ",
    "joshmu": "+1\n. ",
    "cmelion": "+1 and willing to contribute\n. ",
    "ghost": "+1\n. Reset nodejs, the error remained.\n. The problem was with the rights of the npm.\nhttp://stackoverflow.com/questions/24830643/yeoman-io-problems-installing-generator-angular\n. @GlennGeenen: You are right, thank you! Only I understood it, installed and launched... And at the same time with the opening of the browser has been notified of the response :) \n. +1 for this. \n. I can confirm that your suggestion resolved my issue.  I'm on Win7 64bit.\nI had to delete dist/ folder then build again.  Thanks.\n. :+1: \n. Sorry guys its working :)) i start grunt protactor but its protractor\n. This my karma.conf.js content\n``` javascript\n        module.exports = function(config) {\n          config.set({\n            autoWatch : false,\n        frameworks: ['jasmine'],\n\n        browsers : ['PhantomJS'],\n\n        plugins : [\n            'karma-phantomjs-launcher',\n            'karma-jasmine'\n        ],\n\n        logLevel: config.LOG_DEBUG\n\n      });\n    };\n\n```\nWhen I execute gulp test I've got\n``` javascript\n    $ gulp test\n    [10:28:45] Using gulpfile D:\\angularjs\\project\\gulpfile.js\n    [10:28:45] Starting 'test'...\n    [10:28:46] Starting Karma server...\n    DEBUG [plugin]: Loading plugin karma-phantomjs-launcher.\n    DEBUG [plugin]: Loading plugin karma-jasmine.\n    INFO [karma]: Karma v0.12.31 server started at http://localhost:9876/\n    INFO [launcher]: Starting browser PhantomJS\n    DEBUG [temp-dir]: Creating temp dir at C:\\cygwin64\\tmp\\karma-80912154\n    DEBUG [launcher]: C:\\phantomjs\\bin\\phantomjs.exe C:\\cygwin64\\tmp\\karma-80912154/capture.js\n    DEBUG [watcher]: Resolved files:\n            D:/angularjs/project/node_modules/jasmine-core/lib/jasmine-core/jasmine.js\n            D:/angularjs/project/node_modules/karma-jasmine/lib/boot.js\n            D:/angularjs/project/node_modules/karma-jasmine/lib/adapter.js\n            D:/angularjs/project/bower_components/jquery/dist/jquery.js\n            D:/angularjs/project/bower_components/angular/angular.js\n            D:/angularjs/project/bower_components/angular-animate/angular-animate.js\n            D:/angularjs/project/bower_components/angular-sanitize/angular-sanitize.js\n            D:/angularjs/project/bower_components/lodash/dist/lodash.compat.js\n            D:/angularjs/project/bower_components/restangular/dist/restangular.js\n            D:/angularjs/project/bower_components/angular-ui-router/release/angular-ui-router.js\n            D:/angularjs/project/bower_components/bootstrap/dist/js/bootstrap.js\n            D:/angularjs/project/bower_components/angular-strap/dist/angular-strap.js\n            D:/angularjs/project/bower_components/angular-strap/dist/angular-strap.tpl.js\n            D:/angularjs/project/bower_components/angular-mocks/angular-mocks.js\n            D:/angularjs/project/src/app/app.config.js\n            D:/angularjs/project/src/app/app.module.js\n            D:/angularjs/project/src/app/app.routes.js\n            D:/angularjs/project/src/app/main/main.controller.js\n            D:/angularjs/project/src/app/main/main.controller.spec.js\n            D:/angularjs/project/src/app/services/text.service.js\n            D:/angularjs/project/src/app/services/text.service.spec.js\n            D:/angularjs/project/src/app/signup/signup.controller.js\n            D:/angularjs/project/src/components/navbar/navbar.controller.js\n    DEBUG [web-server]: serving: D:\\angularjs\\project\\node_modules\\karma\\static/client.html\n    DEBUG [web-server]: serving: D:\\angularjs\\project\\node_modules\\karma\\static/karma.js\n    DEBUG [web-server]: upgrade /socket.io/1/websocket/BOQJZYJj2-ne1BJkKwsa\n    DEBUG [karma]: A browser has connected on socket BOQJZYJj2-ne1BJkKwsa\n    INFO [PhantomJS 2.0.0 (Windows 7)]: Connected on socket BOQJZYJj2-ne1BJkKwsa with id 80912154\n    DEBUG [launcher]: PhantomJS (id 80912154) captured in 1.767 secs\n    DEBUG [web-server]: serving: D:\\angularjs\\project\\node_modules\\karma\\static/context.html\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/node_modules/jasmine-core/lib/jasmine-core/jasmine.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/node_modules/karma-jasmine/lib/boot.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/node_modules/karma-jasmine/lib/adapter.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/jquery/dist/jquery.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular/angular.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-animate/angular-animate.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/lodash/dist/lodash.compat.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-sanitize/angular-sanitize.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/restangular/dist/restangular.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-ui-router/release/angular-ui-router.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/bootstrap/dist/js/bootstrap.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-strap/dist/angular-strap.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-strap/dist/angular-strap.tpl.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/bower_components/angular-mocks/angular-mocks.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.config.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.module.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.routes.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/main/main.controller.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/main/main.controller.spec.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/services/text.service.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/services/text.service.spec.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/signup/signup.controller.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/components/navbar/navbar.controller.js\n    PhantomJS 2.0.0 (Windows 7) ERROR\n      Error: [$injector:nomod] Module 'text' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\n      http://errors.angularjs.org/1.3.12/$injector/nomod?p0=text\n      at D:/angularjs/project/bower_components/angular/angular.js:1769\nDEBUG [karma]: Run complete, exiting.\nDEBUG [launcher]: Disconnecting all browsers\nDEBUG [launcher]: Process PhantomJS exited with code 0\nDEBUG [temp-dir]: Cleaning temp dir C:\\cygwin64\\tmp\\karma-80912154\n\nD:\\angularjs\\project\\gulp\\unit-tests.js:30\n      throw err;\n            ^\nError: karma exited with code 1\n    at done (D:\\angularjs\\project\\node_modules\\gulp-karma\\index.js:56:30)\n    at ChildProcess.<anonymous> (D:\\angularjs\\project\\node_modules\\gulp-karma\\index.js:82:7)\n    at ChildProcess.emit (events.js:110:17)\n    at Process.ChildProcess._handle.onexit (child_process.js:1067:12)\n\n```\nWhat am I doing wrong?\n. My service files are injected into karma\njavascript\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.config.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.module.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/app.routes.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/main/main.controller.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/main/main.controller.spec.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/services/text.service.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/services/text.service.spec.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/app/signup/signup.controller.js\n    DEBUG [web-server]: serving (cached): D:/angularjs/project/src/components/navbar/navbar.controller.js\nPlease help me. I really do not know, what to do.\n. Yes I try it, but does not help.\n. Here is the solution\nhttp://stackoverflow.com/questions/28593992/gulp-test-can-not-find-module\n. Thanks \n. +1\n. I believe the 'ngInject'; is the equivalent of /* @ngInject / for Babel, is it not? Either way, it did not work for me.\nI'm following the pattern from the directive generated by gulp-angular's generated code.\n. Thanks for the help 0101adm. \nMoving the 'ngInject' above the constructor did not solve the problem, so I decided to follow your suggestion of using a factory instead.\nI believe this could be a problem with the default generated code, because I was using the same pattern as the example directives provided. Controller and Services had their injections done properly, just not directives.\nAnyway, thanks again!\n. I'm having the same issue with Font Awesome.\n. According to the user guide, processed files should be included in the same place but with a different file extension. However, when I created a new test project and enabled Jade, and replaced src/app/main/main.html with src/app/main/main.jade, it didn't work. Maybe I'm misunderstanding the guide, but this seems like how it should work, right?\n. This has been open for 3 months. A lot of other issues are also long overdue. This project is probably dead.\n. For me, the problem was in gulp/conf.js:\njs\n// something something something\nexports.wiredep = {\n  exclude: [/jquery/],\n  directory: 'bower_components'\n};\n// blah blah blah\nRemove /jquery/ from there and you'll (hopefully) be golden.\n. Lodash, for example.\n. I'll make one tomorrow.\n. I do (sorta, have a virtual machine). Can confirm that this checks out with a fresh yeoman and a fresh .yo-rc.\n. I have the same issue here - did you find any fix for this?\n. ",
    "gen4sp": "+1\n. ",
    "atul-bhosale": "+1\n. ",
    "jagwire": "+1\n. ",
    "palpalani": "+1\n. ",
    "cmcnamara87": "+1\n. ",
    "homeway": "+1\n. ",
    "doronsever": "I've created a subtask generator for this purpose. I really hope my project will be merged to this one in the near future. \nhttps://github.com/doronsever/generator-gulp-angular-subtask\nPlease read the instruction first\n. There is no problem to remove the coffee option for now, i really can't understand what the problem with the component option.\nWhat changes do you need in order to merge this? It is fully functional now and very easy to implement other sub tasks\n. Your generator creates a controller under the component directory named 'navbar.controller.js'\nI was simply trying to implement your logic...\nNo problem i will remove this option too.\nAny thing else?\n. I see your point.\nWhat about if i do this:\n'yo gulp-angular:controller thing --component=\"mycomponent\"'\nwhich will resolve to this structure: 'src/components/mycomponent/controllers/thing-controller.js'\nThen if you want to create another controller under the same compoenet you do \n'yo gulp-angular:controller thing2 --component=\"mycomponent\"'\nwhich will resolve to this structure: 'src/components/mycomponent/controllers/thing2-controller.js'\n. @jbaroudi Agnular 2.0 won't be out before late 2015 (early 2016 is more realistic). I really don't think that someone need to design his application based on future versions of angular, especially when there is so much time ahead...  \nAny way, the controller sub task is just the first step as future sub tasks will include generating directives, providers, partials and so...\nAnd, in angular 1.x controllers are a very big player in the application. For me at least, i need this kind of sub tasks now as I'm developing my new web application and i think that these tasks are very important for a big team to preserve developing standards.\n. After what @zckrs said about implementing the subtask feature with Yeoman's composability feature(correct me if i'm wrong but from what i understand its the ability to use a generator inside another generator) , i started working on a new subtasks helper generator.\nYou can see it here:\nhttps://github.com/doronsever/generator-gulp-angular-subtask\nI'm trying to add new subtasks as quickly as i can...\nFor now the generator supports controllers, directives, styles and partials.\nThe next subtasks will include factories and services\nI will appreciate if you take a look and tell me what you think.\n. I totally agree that the decision to use cofeescript or not should be taken from the main generator it self. When the team will support coffee sciprt, this option will be deleted or at least refactored.\nAbout the prompt you proposed, i thought about it but ended up deciding that it's a major overkill. I gave tons of examples how to use and create sub tasks... I think that this subtasks should create their stuff quickly and from the cmd only...\n. OK, So i finished adding subtasks.\nI also did create a prompt to set the generator defaults (script language, style, html)\nI've been working with this for a few days and i'm quite happy with it.\nPlease take a look at your free time and tell me what you think.\nhttps://github.com/doronsever/generator-gulp-angular-subtask\n. I'm not sure, but i think that your problem is that you start your src with '/'.\nThis generator uses the $templateCache service and maybe that what causes the problem.\n. ",
    "zckrs": "@doronsever nice contribution :smiley: \nI will follow your project and after version 1.0.0 we will integrate your subgenerator with your help I guess\ncc @Swiip \n. I suggest to the community to create and share your own subtask. \nLike @doronsever who create https://github.com/doronsever/generator-gulp-angular-subtask you can use composability. http://yeoman.io/authoring/composability.html\n\nThis issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. Closed in favor of https://github.com/Swiip/generator-gulp-angular/issues/793\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. @Malivuk  can you explain 'it was a server configuration problem' ?\n. @AlejandroDelRioAlbrechet  approximately when major bug is fixed.\nCoffeeScript is the next new feature.\n. @zakdances please post your PR :D \nDo you complete test for new case ( Jade & Coffee ) ?\n. test-files-generate.mocha.js#L634\nAdd your case then expect file exist and file content. :smile_cat: \n. @wdgreg  see https://github.com/Swiip/generator-gulp-angular/pull/175\n. Done. https://github.com/Swiip/generator-gulp-angular/pull/175\n. :+1:  for directory structure \"Best Practice Recommendations for Angular App Structure\"\n. This issue can be closed.\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. @Swiip outdated issue ? \nWe will use Webpack.\n. gulp-cache use a folder in your system temporary directory.\nWindows:  C:\\Users\\<username>\\AppData\\Local\\Temp\nLinux / Mac: /tmp\nRemove this folder named gulp-cache by default.\nSee https://github.com/jgable/gulp-cache/issues/32#issuecomment-57705118\n. https://github.com/Swiip/generator-gulp-angular/issues/56#issuecomment-58010139\n. I have the same issue.\n. Tests failed :-(\n. Sometimes build success, sometimes build fails.\nhttps://travis-ci.org/eleven-labs/generator-gulp-angular\n. De rien.\n. No problem. [^__^]\" \nDon't forget to bump a new version on NPM.\n. Tested on master branch. No problem\n. New proxy https://github.com/Swiip/generator-gulp-angular/pull/593 \n:tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. Done with #398 \n. No.\nWhich version of generator-gulp-angular you use ?\nDo you have error in browser debug panel?\n. You use node-sass or ruby-sass ? Do you install sass on ruby with gem install sass\n. I have reproduced the bug. We will investigate.\n. I will close the issue.\nShould work with Node Sass.\nTemporarily workaround for Ruby SASS\nAdd a option sourcemap=none': true in ./gulp/styles.js:\n- replace var sassOptions = {\n    style: 'expanded'\n  };\n- to var sassOptions = {\n    style: 'expanded',\n    'sourcemap=none': true\n  };\n\n@creimers \n. Done with https://github.com/Swiip/generator-gulp-angular/commit/b2c512a84a1a6262bec3ad38e0bb82bcaab576ae\n. When the project is more mature, we can create another repo and use composability yeoman.\nhttp://yeoman.io/authoring/composability.html\n. @Swiip I think this discussion is ended.\nAt moment we don't have time to implement this feature. \nIf someone want to start a new repo who include this generator I thank in advance.\n. Do you install Django with 'bower install' ?\n. Right.\nWithout gulp.dest you don't have new file.\n. True. Thanks for issue. Can you create a PR ? Or I will fix later.\n. del is not a Gulp Plugin\nreturn gulp.src(['.tmp', 'dist'], { read: false }).pipe($.del()); can't work.\nSee https://github.com/sindresorhus/del#usage \n. Actually you must add js/css manually in index.html.\nLater we will add a gulp task injector\n. You can use task gulp instead of gulp build to clean directory.\nSee  https://github.com/Swiip/generator-gulp-angular/blob/master/app%2Ftemplates%2F_gulpfile.js#L7\n. You're welcome!\n. I add a JSON file src/app/l10n/test.json and I success fetch with URL: http://localhost:3001/app/l10n/test.json\n. @milkshoes enable the proxy ?\n. No problems [^__^]\"\n. Waiting gulp4 \n\nThis issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. Or add exclude condition in wiredep task. I will PR that \n. Thanks for this fix.\nEach permutation of generator use Modernizr. Can you remove dependency in compile.js instead of bower.json ?\n/cc @Swiip \n. Never seen this bug.\nWhich version of the generator ?\nThe file /home/vagrant/git/cp/.tmp/app/main/main.js exist ?\n. You need Internet connection to retrieve dependencies.\n. @pasine @franzherzog  the latest version 0.7.x  should fixed issue.\nPlease reopen issue if you have always trouble on latest version.\n. You should edit gulp/wiredep.js to change exclude option.\nWhen i can i would fix generator\n. Fixed and relased on v0.6.2 https://www.npmjs.org/package/generator-gulp-angular\n. https://github.com/miickel/gulp-angular-templatecache\nhttp://jsg.azurewebsites.net/angular-template-caching-with-templatecache-and-gulp/\nWhat do you think about this ? \n. Should be fixed by https://github.com/Swiip/generator-gulp-angular/pull/136\n. @zakdances i fixed that templateCacheHtml.js go in .tmp/inject/\n. https://github.com/Swiip/generator-gulp-angular/pull/191 Done\n. :+1: but test failed\n. @Scottmey do you have this errer with release 0.6.1?\n. @mburbea \n- Option-g` doesn't exist with bower.\n- Can you give me info on chosen options when you run generator ?\n. I will test that.\nBut why you run gulp html instead of gulp  ?\nhttps://github.com/Swiip/generator-gulp-angular#use-gulp-tasks\n. Reproduced ! \nI will try fix.\n. Enjoy https://github.com/Swiip/generator-gulp-angular/pull/96\n. Relased on v0.6.2 https://www.npmjs.org/package/generator-gulp-angular @mburbea @jbaroudi \n. Generator-gulp-angular should include Modernizr ?\nPlease vote :smile: \n. Sorry for that. Thanks.\n. Agree with @peec \nAgree with @intellix \nWhat do you think about an option --advanced (yo gulp-angular --advanced) who will ask more questions ?\n. Done https://github.com/Swiip/generator-gulp-angular/pull/191\n. Wait to release 0.6.2.  =) \n. Thanks for this PR. \nBut where is protractor/config.json ? \nCan you update package.json for tests/deps?\n. @Swiip  tested and works. We need a SauceLabs to run test on CI.\n@loezix can you comment line instead of null ?\nCan you update package.json in https://github.com/Swiip/generator-gulp-angular/blob/master/test/deps/package.json#L36 ?\n. Thanks. \nDo you have a exemple .yo-rc where bowerDependencies is empty ?\n. Example case:\njson\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"angularVersion\": \"1.3.x\",\n      \"angularModules\": [],\n      \"jQuery\": {\n        \"name\": null,\n        \"version\": \"1.3.x\"\n      },\n      \"resource\": {\n        \"name\": null,\n        \"version\": \"1.3.x\",\n        \"module\": null\n      },\n      \"router\": {\n        \"name\": null,\n        \"version\": \"1.3.x\",\n        \"module\": null\n      },\n      \"ui\": {\n        \"name\": null,\n        \"version\": \"1.3.x\",\n        \"key\": \"default\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"css\",\n        \"extension\": \"css\",\n        \"npm\": {}\n      }\n    }\n  }\n}\n. Use the global directive.\n/* global foo, bar */ at the beginning of the file\nor\nadd your globals variable in .jshintrc\nSee http://www.jshint.com/docs/\n. https://github.com/Swiip/generator-gulp-angular/pull/102\n. Relased on v0.6.2 https://www.npmjs.org/package/generator-gulp-angular\n. @eseceve  please can you rebase & squash your commits ?\n. :+1: yeah\n. Which version of generator use you ?\n. Right @bhj. Maybe i would fix that tomorrow \n. @jbaroudi\nSCSS is injected by src/app/vendor.scss and vendor.scss is converted in vendor.css injected in index.html\nJS isn't injected because there are lot of files \nalert.js\nbutton.js\ncarousel.js\ncollapse.js\ndropdown.js\ntab.js\ntransition.js\nscrollspy.js\nmodal.js\ntooltip.js\npopover.js\nThey are not required to use stylesheet. But you can add what you need in index.html\n. Thanks :+1: \n. But I'm not sure that work with a middleware proxy. @Swiip \n. :+1: @marani  \"have some simple example branches, or separated repos\"\n. I don't understand your issue. What OS use ?\n. And which file ?\n. Thanks for detail. I will verify encoding\n. I unable to reproduce. \nBut line ending of file is LF. \nCan you execute in shell xxd src/app/index.scss before and after editing the file ?\n. ping @mittalabhas1 \n. Sorry but the default task should be 'build'\n. Since v0.6.1 bower_components is in root directory. You can remove folder src/bower_components.\nYou are right.\n. Coming back soon\n. Next improve:\n- test for none UI Framework\n- rewrite test-gulp-inception to cover all case\n- complete test on generated app\n\n@Swiip \n. Can you paste your .yo-rc.json ?\n. - You dont use latest version of generator\n- In your src/index.html you can combine <!-- build:js scripts/vendor.js --> and <!-- build:js scripts/main.js -->.\nExample: \njs\n    <!-- build:js scripts/combined.js -->\n         <script src=\"app/index.js\"></script>\n         <script src=\"app/main/main.controller.js\"></script>\n         ...\n         <!-- bower:js -->\n             <script src=\"../bower_components/jquery/dist/jquery.js\"></script>\n             <script src=\"../bower_components/angular/angular.js\"></script>\n             ...\n         <!-- endbower -->\n    <!-- endbuild -->\n. What achieves ?\nRun $ gulp in your shell and you'll get a new dist folder. \nIn gulp/build.js the plugin userefcombines files.\n. Run $ npm install in root folder of generated app.\n. @montogeek Issue resolved ?\n. :+1: \n. Done. \nhttps://github.com/Swiip/generator-gulp-angular/pull/175\n. .tmp is used for gulp serve.\nMaybe your issue is related to https://github.com/Swiip/generator-gulp-angular/issues/90 ?\n. Np :stuck_out_tongue_winking_eye: \n. Can you provide more details ?\nAssets files don't have version in name.\n. Actually generator dont implement asset with revision number. But your solution is right  :+1: \n. Totally true. See https://github.com/Swiip/generator-gulp-angular/issues/9\nThis generator needs more contributors.\n. @danprime Do you use nodeSass or rubySass ? Can you update issue with the lastest version of generator ? \n. I will close the issue.\nShould work with Node Sass.\nTemporarily workaround for Ruby SASS\nAdd a option sourcemap=none': true in ./gulp/styles.js:\n- replace var sassOptions = {\n    style: 'expanded'\n  };\n- to var sassOptions = {\n    style: 'expanded',\n    'sourcemap=none': true\n  };\n. https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/gulpfile.js#L7\nUse gulp instead of gulp build\n. jshintrc has been completed\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/jshintrc#L24\nWhy include protractor, $ and $$ ?\n. I'm not sure shortcut should be present for ALL project generate.\nWe ignore only keyword already present\n. Too many code for one fonctionality :-/ \n- option --coffee should not exist. Generator must use .yo-rc.json to choices JSPreprocessor selected previously (not yet implemented) \n- option --component : a controller cannot be a component reusable. \nWe would use yeoman composabilty\nSorry but in this state i would not merge.\n. https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub\nComponents\n\nA components directory contains directives, services, filters, and related files.\nCommon data (images, models, utility files, etc.) might also live under components (e.g. components/lib/), or it can be stored externally.\nComponents can have subcomponent directories, including appended naming where possible.\nComponents may contain module definitions, if appropriate. (See \"Module definitions\" below.)\n. Components can contain a controller.\nBut controllers can not be a component.\n\nSorry but I do not have time for a full review\n. Now CoffeScript is supported.\nhttps://github.com/Swiip/generator-gulp-angular/pull/175\n. I restart your build on TravisCI.\nBut one question: Why use gulp-ng-templates instead of gulp-angular-templatecache ?\n. Implemented by https://github.com/Swiip/generator-gulp-angular/pull/136\nThanks @codewrangler77 \n. Maybe a issue with your git config \nhttps://help.github.com/articles/dealing-with-line-endings/#platform-mac\n. Please @al-the-x exec in bash:\n$ xxd src/app/main/main.controller.js | grep 0a # LF linux ending\n$ xxd src/app/main/main.controller.js | grep 0d0a # CRLF windows ending\n$ xxd src/app/main/main.controller.js | grep 0d # CR mac ending\nWhich dump return result ?\n. Released 0.7.0.\nCan you test with this version @al-the-x ?\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/180\n. Use app.less\n. Right. I mean index.less. \n. @adrianchung\n In vendor.less\n``` less\n@import '../../bower_components/bootstrap/less/bootstrap.less';\n@icon-font-path: '/bower_components/bootstrap/fonts/';\n@brand-primary: #FF00FF;\n```\nResult with a gulp serve\n\n(i change class splendid button to primary)\n. Hi\nThanks for this PR. \nBut instead create a new file, can you convert existing JS file in LS if option is selected ?\nWith current state of this PR too many code is duplicated between JS ans LS\n. https://github.com/Swiip/generator-gulp-angular/pull/175\nPreprocessor is supported\n. Hi @chhsiao1981\nI am not sure your PR will be merged one day.\nBecause maintain too many JSpreprocessor in one generator is really hard and complexe.\nMaybe you should create a new generator who use this generator.\nSorry. :disappointed: \n. :+1:\n. About caret ^ vs tilde ~\n- http://www.reddit.com/r/node/comments/1wo7n4/people_misunderstand_and_and_semver_in_nodejsnpm/\n- http://www.jakobm.com/semver-in-nodejs-and-npm\n- http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/\n. :+1: @Swiip \n. Thanks @Nek-\n. :+1: thanks\nMaybe we should create a new sample design with list of Gulp task avaible, how to hack the app, ...\n. In fact, I dont like this magic .tmp folder.\nBut we should separate generate file.\n. Why ? \nFor which types of application ?\n. OS? Version of generator ? \n. The lastest version on NPM ? or Github (master) ?\nWhat option you choose ? (.yo-rc.json)\n. No reproduce. When gulp throw error ? \n. > Should it be a question? (big warning: the number of question is already big)\nI would add a option --advanced who ask more questions (Modernizr, Imagemin, JSDoc, etc ...)\n. https://github.com/Swiip/generator-gulp-angular/pull/175\nDone.\n. Do you read https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub ?\nYour proposal  is a revert of https://github.com/Swiip/generator-gulp-angular/pull/62\n. Please rebase to master your branch \n. Other point: \n@kbjorklid mention gulp-angular-filesort\nIt is necessary?\n. injector:partial will add the templateCacheHtml.js in src/index.html. That's bad for a gulp serve :-/ \n.  gulp-angular-filesort sort in reverse. :trollface: \nGo merge ? \n. @marani or you can just:\n- use versionning with Git\n- comment code with /* */\nSorry I don't think I will implement a exclude pattern except for test '!src/{app,components}/**/*.spec.js', !src/{app,components}/**/*.mock.js'\n. Nothing failing.\nPartials are transform in JS to use $templatecache. (the .tmp/inject/templateCacheHtml.js)\nThen all JS files are concatened ans minified un dist/scripts/app-XXXX.js\nAre y ou on master branch or release on NPM ?\n. The 0.7.1 release dont fix your issue :-/ ?\n. In dist folder you should expect only index.html\n. https://github.com/Swiip/generator-gulp-angular/issues/150#issuecomment-65550312\nPartial are converted into js and inject in dist/script/app-xxxx.js\n. A example: app/main/main.html or src/component/navbar/navbar.html \nRun gulp and look .tmp/inject/templateCacheHtml.js\nYou should see \nangular.module(\"gulpAngular\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"HTML\");\n$templateCache.put(\"components/navbar/navbar.html\",\"HTML\");}]);\nThen .tmp/inject/templateCacheHtml.js is concatened with all JS in your app/ and components/ folder to result a dist/scripts/app-xxxxx.js\n. Which version of generator ? \n. I release last version today.\nLauch yo and select update generator\n. Lastest version version: '0.7.0' ...\n. https://github.com/Swiip/generator-gulp-angular/blob/master/app%2Ftemplates%2F_package.json#L6\nAre you in a right repo on github? gulp-angular !== generator-gulp-angular\n. Thanks for details. I will try to reproduce \n. @sswainright  Fixed with 0.7.1\n. Sorry for typo. Thanks\n. @johnsojr  0.7.2 publish =)\n. Which version of generator ? \n\nRunning on Windows 7 and just updated the generator from npm today.\n. That's similar to https://github.com/Swiip/generator-gulp-angular/issues/86 ?\n. Not reproduce.\nI have a 'components/button/button.html' and 'components/button/button.directive.js' used in my 'app/main/main.html'  and i see the button in gulp serve and gulp serve:dist \n\n0.7.0 is out. https://github.com/Swiip/generator-gulp-angular/releases/tag/v0.7.0\n. Nice idea but that should be a recipe like docs/recipes/create-spritesheet.md.\n@raphaelluchini  can you create this recipes ? \n. Yes it is very specific. For a concrete option we should change the CSS of the sample application and the controller who list technologies used\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. https://github.com/eleven-labs/generator-gulp-angular/commit/1ef1d228a8eb0e99a5877e66a238e9c8708647d4 should fix https://github.com/Swiip/generator-gulp-angular/issues/156\n. https://github.com/yeoman/generator/issues/717\n. Fixed with https://github.com/Swiip/generator-gulp-angular/pull/285\n. You can't close yourself ? \n. Im not sure to add a jumbotron class for Foundation is appropriate.\n. Can you squash your commits  please ?\n. Gulp-angular-filesort  is bugged \n. :+1:\nI like this idea. Maybe we should create a external yeoman generator generator-gulp-workflow\n. Thanks =]. \n. Missing gulp-angular-filesort in test/deps/package.json\n. Local testing success\n. Not reproduced\n. Which node version ? $ node --version\nCan you try a other generator like https://github.com/yeoman/generator-gulp-webapp\n. Can you add unit test for Foundation case \nSomething like: \n`\u0300``\nassert.noFileContent([\n          ['gulp/wiredep.js', /\\/foundation.css\\//]\n        ]);\n\n. Failed because gulp-cache sux.\n. Many projects have both. Do you know why ? @tlvince\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. I think you can use stream-series\nSee https://github.com/klei/gulp-inject#multiple-sources-when-order-is-important\n. ping @sswainright @bhj \n. Mobile and desktop have too many diff\u00e9rences.\nMaybe cr\u00e9ateur a new repo for mobile or use bower to install yourself.\n. Can you add unit test in https://github.com/Swiip/generator-gulp-angular/blob/master/test/test-files-generate.mocha.js#L463?\n. Nice job. Thank you for the contribution.\n. Please can you read this guidelines CONTRIBUTING for your next contributions ?\n. :+1: \n. I don't know consolidate  but you should use in generator instead app.\nPlease see http://yeoman.io/blog/release-0.18.html in \"File writing filters\" section :grinning: \n. Right. I need to read full doc of consolidate.\n. Maybe related to this yeoman issue https://github.com/yeoman/generator/issues/725\n. :smile: i let this issue open still yeoman doesn't fix\n. @Toilal  should be fixed https://github.com/yeoman/generator/issues/725#issuecomment-67757123\n. https://github.com/Swiip/generator-gulp-angular/edit/master/README.md#L4\n. Good job. Thanks for contribution. \nPlease can you read this guidelines CONTRIBUTING for your next contributions ?\n. fix-... or fix/...\nI prefer fix-...\n. I dont think is neccesary. Cleans directory then generate a project is not long. (~1sec)\nThese are gulps tasks thats long especially \"gulp-inject\" in gulp build \n[08:47:59] gulp-inject 1 files into index.html.\n[08:48:13] Finished 'fonts' after 15 s\n. Separate each task in a new project validates the dependencies of tasks\n. In your bower.json \"topcoat\": null should be \"topcoat\": \"~0.8.0\"\n. Please use ~ instead of ^ in package.json and fix test. I will merge.\n. :+1: \n. - Remove file\n- Clear browser cache\n. I will close the issue. This error is related to https://github.com/sindresorhus/gulp-autoprefixer/issues/20\nTemporarily workaround\nAdd a option sourcemap=none': true in ./gulp/styles.js:\n- replace var sassOptions = {\n    style: 'expanded'\n  };\n- to var sassOptions = {\n    style: 'expanded',\n    'sourcemap=none': true\n  };\n. Done see \nhttps://github.com/Swiip/generator-gulp-angular/commit/b2c512a84a1a6262bec3ad38e0bb82bcaab576ae\n. Please read CONTRIBUTION before submit issue\n. Merry Christmas\n. This issue can be closed ? \n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/217\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/217\n. If you are agree I will add in --advanced option\n. Implement by https://github.com/Swiip/generator-gulp-angular/pull/191 thanks @holmesal \n. :+1: \n. :+1:  to remove test-write-files.js\n. I prefer stores un yo-rc.json. As you said yo-rc.json have a higher scope in yeoman generator\n. Can you remove test-write-files.js and rebase ?\nAns you can delete dotfileFiles.\n. :+1: \n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/217\n. @Swiip  can you update this issue. The link is dead.\n. Huge PR but it's awesome\n- New structure of gulp tasks is more readable and easier to change for a new generate project\n- You fix lot of mistakes like multiple choices on htmlPreprocessor or the empty index.html\n- Nice idea for lodash templating but you should add a comment on process function to explain why\nAre you sure _.cloneDeep() create a new object and not use reference in mocha test ? Each test should have a independent prompt \n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/217\n. Please we need details.\nRead https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues and explain your problem\n. Yeah README should be updated. Thx\n. Just a missclick\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n.  this issue should be fixes with master\n@Swiip \n. You should use master or wait v0.9\n. Can I close this issue ?\n. Np ^^\n. Im not sure this issue is related  to the generator.\n. :+1: \n. https://github.com/Swiip/generator-gulp-angular/blob/master/README.md#known-issue\nWe know\n. https://github.com/Swiip/generator-gulp-angular/pull/598/ merged\nIf you choose CoffeScript you get a sample test main.controller.spec.coffee\nAppreciated contribution to improve coverage test.\n. Add a lib directory in gulp process dont respect the defaut guidelines define by Angular Team un best pratices.\nBut each developer can/should tweak the generated app.\nYeoman's generator help to start a new project and not create a complete application.\nWe cant coverage all use case :/\n. But we should write doc recipes\n. :+1: \nOne day for the first stable release I wish create a new design\n. Related to https://github.com/Swiip/generator-gulp-angular/issues/261 see https://github.com/Swiip/generator-gulp-angular/issues/261#issuecomment-81790092\n. :+1: \n. - rewrite README\n- rewrite test\n- a new design to celebrate v1.0.0\n. Gulp4 is not yet official.\nI start to rewrite our gulpfile but this is HUGE. \nI think we should do that after v1.0.0 and maybe Gulp4 should be released\n. Anyway released before or after our v1.0.0 we will create a branch gulp4\n. :+1: \n. v1.0.0 incoming\n. This feature is not yet published on NPM.\n. Yeah I will fixes that \n. Fixed by v0.9.1\n. We could try\n. Can you retry with npm remove -g generator-gulp-angular && npm install -g generator-gulp-angular ?\nBut you use pre release node version v0.13.0-preand your npm version is outdated\n. I create a PR who is result of this discussion. \nThanks for contributions\nPlease review this PR.\n. @fubu guidelines show sample app without a complex workflow (no injection, no gulp, no dist folder).\nThe app folder exist to separate the angular logic and the workflow logic. index.html is heavy manipulate by Gulp\n. @fubu There are other examples where app, assets and index.html are on the same level \nhttps://scotch.io/tutorials/angularjs-best-practices-directory-structure#a-better-structure-and-foundation\nhttps://github.com/johnpapa/angular-styleguide/blob/master/README.md#style-y141\n. Really I understand your view.\n\nWhy keep a unnecessary folder ?\n\nBut I think it is better that way to keep separation between the angular's code and the rest.\n. A pull-request to remove app would maybe can merged.\n. :+1: for npm test\nBut npm build is a simple duplication of gulp and is not a shortcut.\n. TravisCI run npm test and we dont have a SauceLabs. Build will always failed. \nWe cant merge this PR sorry :-/\n. Sorry I confused npm test of generator with generated app.\nYeah just keep gulp test. E2E tests are not yet adequate.\n. Ping @Toilal \n. Maybe conflict with node-sass\nhttps://travis-ci.org/Swiip/generator-gulp-angular/jobs/51498522#L1222\nI restart build\n. https://github.com/sass/node-sass/issues/532 \n. Can you rebase your branch with master ? We fix travis by ignore fail on iojs.\n. :+1: \n. @coryarmbrecht  can i close this issue ? \n. Right. I will fix dep to 0.18.6\n. Fixed with https://github.com/Swiip/generator-gulp-angular/pull/285\n. https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/_gulpfile.js#L22\nJust use gulp instead of gulp build\n. Done https://github.com/Swiip/generator-gulp-angular/commit/b2c512a84a1a6262bec3ad38e0bb82bcaab576ae\n. Can you retry with latest version of generator please ?\n. @intellix  do you have a code snippet ? \n. :+1: \n. Awesome PR. :clap: :clap: :clap: \nVery nice work.\n100% coverage :dancer: \nEach contributor should read and complete the suite test before open a PR. https://github.com/Swiip/generator-gulp-angular/tree/refacto-format/test/node\n. Done by https://github.com/Swiip/generator-gulp-angular/pull/398\n. Should be fix with master\n. ping @npearson72 \n. I just try with the latest version v1.0.0-rc1 \nAnd all works.\nCan you retry ? \nHow to update my project?\n. I like this song :+1: \n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. @lancevo Do you resolve your issue ?\n. @jamesbehr You should fix test before merge\n. Few questions:\n- should autofix ?\n- which preset use ?\n- disable or override rule (like maximumLineLength) ?\n. https://github.com/Swiip/generator-gulp-angular/blob/master/app%2Ftemplates%2F_package.json#L5\nAlready present.\nCan we close @mohsen1 ?\n. https://github.com/floatdrop/gulp-watch/blob/master/docs/readme.md#prevent-pipe-breaking-on-errors\nUsing gulp-watch + gulp-plumber can be a solution\n. To avoid adding more deps, use .on('error', function () {})\n. @Tallyb please do you have a code example when ng-annote failed ? \n. Should be fix with master\n. This issue should be fixed in master.\n@mohsen1 can you check and close issue if you are ok ? \n. I cant reproduce with master \n. :+1: \n. A perfect example of \"How to test a advanced Yeoman generator ?\"\nVery nice jobs. All contributor should read these test suites.\nWhen you rebase with master we merge :-) ?\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/433\n. :+1: \n. https://github.com/Swiip/generator-gulp-angular/issues/332\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/355\n. We have v1.0.0-rc1 on NPM.\nI think your issue is resolved. Injection task is rewrite since Feb 2015\nHow to update my project?\n. Do you have a code example ?\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue.\nAny good contributions to resolve this matter is appreciated and merged.\n. Can you rebase your branch with master ?\n. Done with https://github.com/Swiip/generator-gulp-angular/pull/433\n. ping @Tallyb \n. :+1: \n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/355\n. I'm not sure, the generator have many options. \nAs you say \n\nYou can install it via bower\nbower install uikit\n. https://github.com/Swiip/generator-gulp-angular/pull/361\n. Should be fixed when merge https://github.com/Swiip/generator-gulp-angular/pull/361\n. I don't reproduce too\n. Related to https://github.com/Swiip/generator-gulp-angular/issues/82 ?\n. Can you add a test for this case ? \nhttps://github.com/Swiip/generator-gulp-angular/blob/master/test%2Ftemplate%2Ftest-package.js#L112\n. Can you rebase your branch with master ? We fix travis by ignore fail on iojs.\n. @Swiip are you agree to merge ? \n. npm ERR! Please try running this command again as root/Administrator.\n. You don't need root to run any generator. Problem is your nodejs installation.\n\nYou can try http://stackoverflow.com/questions/10081293/install-npm-into-home-directory-with-distribution-nodejs-package-ubuntu/13021677#13021677\n. Do you have one proposition or example ? \n125MByte :-O\n. Please we need details.\nRead https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md and explain your problem\n. Use bower install bootswatch-scss\nAnd replace vendor.scss by:\n```\n$icon-font-path: \"/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/\";\n@import '../../bower_components/bootswatch-scss/yeti/variables';\n@import '../../bower_components/bootstrap-sass-official/assets/stylesheets/bootstrap';\n@import '../../bower_components/bootswatch-scss/yeti/bootswatch';\n``\n. Can you try with thereturn`? \nangular.module \"app\", [ ... ]\n  .config ($routeProvider) ->\n    $routeProvider\n      .when \"/\",\n        templateUrl: \"app/main/main.html\"\n        controller: \"MainCtrl\"\n      .when \"/cats\",\n        templateUrl: \"components/cats/cats.html\"\n        controller: \"CatsCtrl\"\n     return\n. :+1: right @intellix\n. You use v0.9.1 or master ?\n. And you forgot again\n. :+1:\n. https://github.com/Swiip/generator-gulp-angular/pull/393\n. :+1: :+1: :+1: \nMaybe one day enable sourcempas for dist.\nTemporarily workaround for Ruby SASS\nAdd a option sourcemap=none': true in ./gulp/styles.js:\n- replace var sassOptions = {\n    style: 'expanded'\n  };\n- to var sassOptions = {\n    style: 'expanded',\n    'sourcemap=none': true\n  };\n\nIssues : #66 #67 #186 #198 #288 \n. webpack :heart: \n. Awesome @jbnicolai thanks\nWhat you use to create auto-generated PR for depended npm packages ?\n. What do you think to use \"default\" value in list definition ?\nhttps://github.com/SBoudrias/Inquirer.js#list----type-list-\n{\n    \"type\": \"list\",\n    \"name\": \"jQuery\",\n    \"message\": \"Would you need jQuery or perhaps Zepto?\",\n    \"default\": 0,\n    \"choices\": [\n      {\n        \"value\": {\n          \"key\": \"jquery2\"\n        },\n        \"name\": \"jQuery 2.x (new version, lighter, IE9+)\"\n      },\n      {\n        \"value\": {\n          \"key\": \"jquery1\"\n        },\n        \"name\": \"jQuery 1.x (branch still supporting IE6, 7 and 8)\"\n      },\n      {\n        \"value\": {\n          \"key\": \"zepto\"\n        },\n        \"name\": \"ZeptoJS 1.1.x (jQuery compatible but very much lighter)\"\n      },\n      {\n        \"value\": {\n          \"key\": \"none\"\n        },\n        \"name\": \"None (Angular will use its own jqLite)\"\n      }\n    ]\n  }\n. \"default\" will pre-select in list\n. Agree ^__^\n. What version you use ? v0.9.1 or master ?\n. We need a new PR to rewrite workflow with karma \nhttps://github.com/Swiip/generator-gulp-angular/issues/415\n. Fixed on master branch \n. Update a generator is not safe.\nWait next release and create a new project with this release\n. The next version while include Toastr.\nYou can try but you should manually check change.\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. Henry, \nI will try to help you.\nIn index.html there are 2 types of auto-injected files during gulp build and gulp serve:\n- CSS part\n- JS part\nCSS\nThey are inserted at end of head by 2 blocks that write 2 files containing all the CSS.\n- <!-- build:css({.tmp/serve,src}) styles/vendor.css -->: Any bower's vendor stylesheets present in bower.json under property dependencies (:warning: not devDependencies) AND located in /bower_components/\n- <!-- build:css({.tmp/serve,src}) styles/app.css -->: Yours stylesheets who match with any files located into /src/{app,components}/**/*.{css,scss,less,styl}\nJS\nThey are inserted at end of body by 2 blocks that write 2 files containing all the JS.\n- <!-- build:js(src) scripts/vendor.js -->: Any bower's vendor scripts present in bower.json under property dependencies (:warning: not devDependencies) AND located in /bower_components/\n- <!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->: Yours scripts who match with any files located into /src/{app,components}/**/*.{js,es6,ts,coffee}\nWhere to place the third-party files (scripts and stylesheets) who are not installed with bower ?\n\nWithout auto-inject feature: you can use any folders except /src/app/ and /src/components/ \nWith auto-inject feature: you should use /src/app/ and /src/components/ \nWith auto-inject feature in custom folder: you should complete gulp's tasks \n\nNotes:\n\nthe parsing of javascript files is managed in /gulp/script.js\nthe parsing of css files is managed in /gulp/styles.js\nthe injection in index.html is managed in /gulp/inject.js\n. No problem :smiley: \n\nMaybe you can create a folder /src/lib/ and add {app,components,lib} in /gulp/scripts and /gulp/styles\n. @henry74 I renamed your issue if you are agree\n. @vespertilian please\n1) Can use mardown for code ?\nlike this\n2) Can you paste your .yo-rc.json ?\n. Recipe exist  https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/managing-third-party-files.md\nI close old issue\n. I am not sure this issue is related to generator.\nMaybe the plugin gulp-protractor should parse the cmd line. \n/cc @mllrsohn\n@Olgagr alternatively you can use node_modules/.bin/protractor protractor.conf.js --browser firefox with a gulp serve running in another terminal \n. Nice :+1: \nPR appreciate or wait I take time to implement it\n. In master branch the ES6 templates are rewrite. And we use class\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. We use https://github.com/olov/ng-annotate and we don't have unimified dist build\nThis issue is not relative to the generator-gulp-angular.\n. Too many commits (83)\nPlease rebase your branch with updated master\n. Thanks\n. :+1: \n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. Thanks\n. No problem, we should release new version\n. :+1: ready to merge :)\n. Thanks but we can't merge. \nIn fact test build failed (output log)\nI don't know why Travis return a success \n. yeoman-generator don't support lodash3 at moment\n. Do you success to generate a project with bump deps ? \n. :+1: \n. What version of generator you use ? What options you choose ?\n. Because https://github.com/karma-runner/karma/blob/master/lib/config.js#L123 \nWe need to define autoWatch \n. @robertbaker \nHow you install material-design-iconic-font? \nCan you paste your .yo-rc.json ?\n. ok. Thanks\n. angular-material doesn't provides SCSS. \nI'm sorry but I dont understand your issue.\n. Why you want a vendor.scss if library don't provide source in SASS ? \nhttps://github.com/angular/bower-material\n. I like idea but that can be apply only for Javascript file (not CoffeeScript and TypeScript)\n. Unreadable issue see https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues\n. You solve issue ? \n. Unreadable issue see https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues\n. Can you try if issue exist on master ? \n. New proxy https://github.com/Swiip/generator-gulp-angular/pull/593 \n:tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. At moment, we don't support \"natively\" test file written with jsPreproc like Coffee or TypeScript \n. Outdated sorry\n. This is related to generator ? or a bower lib ? \nError: Please check the validity of the CSS block starting from the line #5128\n. Because RSVP define as main with a unknow dist folder https://github.com/tildeio/rsvp.js/blob/master/bower.json#L9 \nWiredep (who inject the deps) read this proprety.\nIf you change main into /bower_components/rsvp/bower.json to ./rsvp.js ==> :tada: \nhttps://github.com/tildeio/rsvp.js/pull/354\n. ```\n$ bower info rsvp\nbower rsvp#                not-cached git://github.com/components/rsvp.js.git#\nbower rsvp#                   resolve git://github.com/components/rsvp.js.git#\nbower rsvp#                  download https://github.com/components/rsvp.js/archive/3.0.17.tar.gz\nbower rsvp#                   extract archive.tar.gz\nbower rsvp#*                  resolved git://github.com/components/rsvp.js.git#3.0.17\n{\n  name: 'rsvp.js',\n  version: '3.0.17',\n  homepage: 'https://github.com/tildeio/rsvp.js',\n  authors: [\n    'Stefan Penner stefan.penner@gmail.com'\n  ],\n  description: 'A lightweight library that provides tools for organizing asynchronous code',\n  main: 'dist/rsvp.js',\n  keywords: [\n    'promise'\n  ],\n  license: 'MIT',\n  ignore: [\n    'node_modules',\n    'bower_components',\n    'test',\n    'tests',\n    'vendor',\n    'tasks'\n  ]\n}\n```\n. Should be fixed now.\n. :+1: \n. In progress https://github.com/Swiip/generator-gulp-angular/pull/598\n. Done. \nCoverage is enabled for plain Javascript and Coffeescript\n. Recent merge change the folder structure \nhttps://github.com/Swiip/generator-gulp-angular/pull/447\ncomponents move into app\n. I like these features. \nIn first you can add a advanced option for UnCss :) \n. :+1: \nMissed in https://github.com/Swiip/generator-gulp-angular/pull/447\n. I think this issue is independent of choices selected in generator but how browser-sync is used ingulp/serve.js`\nI have the same error with default choices.\n. I try 2.5.x. Error always present\n. If you remove google analytics code in index.html, what happening ? \n. Can you try to add 'scripts' as dep for task 'scripts:watch' in 'gulp/scripts.js' ?\n. > folder in the projects root directory \nYou should remove paths.src in \npaths.src + 'test/**/*.js'\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. Nope we don't have equivalent.\nBut I think you can choose different Firebase more simply with gulp-ng-constant\n1) create a new task config\ngulp.task('config', function () {\n  var configPath = 'config.json';\n  if (process.env.NODE_ENV === 'test') {\n    configPath = 'configTest.json';\n  }\n  return gulp.src(configPath)\n    .pipe($.ngConstant())\n    .pipe(gulp.dest('src/app/'));\n});\n2) add config as a dependency of scripts\nmodule.exports = function(options) {\n  gulp.task('scripts', ['config'], function () {\n    return gulp.src(options.src + '/app/**/*.js')\n      .pipe($.jshint())\n      .pipe($.jshint.reporter('jshint-stylish'))\n      .pipe(browserSync.reload({ stream: true\u00a0}))\n      .pipe($.size());\n  });\n};\n3) use the module constante created in your app\n4) run gulp with environnement variable\n$ NODE_ENV=test gulp serve\n$ NODE_ENV=test gulp\nAnyway if you use gulp-preprocess, PR is welcome (to add in advanced option) \n. Solved ?\n. Sorry but I'm not reproduce your bug.\nCan you try with master of generator ? \n. Fixed in master\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. browser-sync-spa is added by https://github.com/Swiip/generator-gulp-angular/pull/315 to fix HTML5 mode.\nMaybe now he isn't necessary \n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. Can you try with other generator like generator-angular\n. Not reproduce at moment.\nWith your output error log I'm not sure issue is related to this generator.\nCan you try with node 0.12.2 ?\n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. // injector\n// endinjector\nshould be stay in index.cssPrepro to manage the application's styles in a single file after a build.\nFor vendor.cssPrepro may be use Wiredep to inject all vendor's styles in a single file\n. :+1:  nice\n. Related to https://github.com/Swiip/generator-gulp-angular/issues/457\n. Roadmap of next features illustrated:\n1- directives\n2- factories/services/data services\n3- module/layout\nOthers\n- filter\n- configuration/route\n- runBlock/constants\n. Maybe we should merge this PR and create a new for each feature\n. @Swiip I will continue in another PR to add feature\n. I have test with many differents configurations. I think you can merge @Swiip :smile: \n. # What is left ?\nRouting resolve too heavy for a generated app\n\n[Style Y081] Route Resolve Promises \n[Style Y092] use @ngInject for route resolve\n\nMultiple modules too heavy for a generated app\n\n[Style Y020] Avoid naming collisions submodule not illustrated\n[Style Y151] Layout not illustrated\n[Style Y160] Modularity not illustrated\n[Style Y161] Modularity not illustrated\n[Style Y162] Modularity not illustrated\n[Style Y163] Modularity not illustrated\n[Style Y164] Modularity not illustrated\n[Style Y165] Modularity not illustrated\n[Style Y241] Constants submodule not illustrated\n\nTests are present but coverage != 100%\n\n[Style Y190] Testing\n[Style Y191] Testing\n[Style Y193] Testing\n[Style Y195] Testing\n[Style Y196] Testing\n[Style Y197] Testing\n\nPlanned\n\n[Style Y220]  jsDoc not  yet implemented\n[Style Y235] JSCS not yet implemented\n\n\nIf @johnpapa has little time, a lighting review would be much appreciated. :smiley: \n. Not reproduce.\nCan you provide some details ? \nnode version, npm version, generator version, OS ?\n. Fixed with v0.11.0\n:warning: read changelog please\nThanks to reporting\n. thanks :+1: \n. Done with https://github.com/Swiip/generator-gulp-angular/pull/501 \n. Duplicate of https://github.com/Swiip/generator-gulp-angular/issues/521\n. Please @andyperlitch can you rebase ?\n. Nope https://github.com/Swiip/generator-gulp-angular/compare/v0.11.0...master\n. Fixed in master.\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. :+1: \n. Thanks to report.\nYou can see here https://github.com/Swiip/generator-gulp-angular/pull/469 I have start to apply guideline's of johnpapa\nAnd generator-hottowell can be inspiration\n. Why you didn't use karma.conf.js generated with this generator ? \nWhat you need for Webstorm ? \n. In task html see gulp/build.js\n. Look JS generated by coffee for main.controler.JS \n return angular.foreach('....  is the problem.\nSolution: Add a return in main.controller.coffee like here https://github.com/Swiip/generator-gulp-angular/pull/469/files#diff-4f268673bdbb6bb3632e783b10312b2aR7\n. Done with https://github.com/Swiip/generator-gulp-angular/pull/506\n. Duplicate of https://github.com/Swiip/generator-gulp-angular/issues/9\nA actual workaround: create a file with copy of existing file\n. One thread for one issue.\nPlease continue in https://github.com/Swiip/generator-gulp-angular/issues/9#issuecomment-103876166 \n. No alaways work in progress\n. ngInject + CoffeScript = pain \n. Ready to merge :-)\nJavascript, Coffee, ES6, Typescript, Bootstrap, Angular-Material, Foundation, CSS supported.\nJavascript follow john papa style guide\nI modify design of sample application to add \n- two directives\n- two service\n- toastr, moment, malarkey constant\n- separate file for .config() .run() and router setup\n74 files changed @Swiip take a minimum time to review before merge\nI will update the parent PR #469 \n. - controller specs : scope is never used\n=> Done\n- es6 : main controller should have methods, not functions defined in the constructor even if it breaks the vm = this principle, same as for typescript\n=> Done\n- es6 : some more anonymous function could be replaced by a =>\n=> Done\n- ts : should we define and export at the end of the file as for es6 & js ?\n=> I don't know what we should do :-/\n. Already fixed. https://github.com/Swiip/generator-gulp-angular/issues/476\n. @barretodavid can you create a PR ? \n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/596\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. @joelso solution works\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. Can you open a new issue ?\n. 2 causes:\n- the ** in cmd line\n- mocha is not install globally\n. Should be fixed after https://github.com/Swiip/generator-gulp-angular/pull/554 merged\n. In fact #554 don't fix. But we don't run generator test in Windows env. I'am not sure this feature is really useful. =\\\n. I'm always interested by contribution. But we use TravisCI to test PR. \n. Can you fix issue for Stylus ?\n. Yep. But I didn't see how you fix case for Bootstrap + Stylus\n. https://travis-ci.org/Swiip/generator-gulp-angular/jobs/59687135 \n[08:42:49] 'tsd:install' errored after 1.75 s\n[08:42:49] Error: unexpected status code: 403 on: https://api.github.com/repos/borisyankov/DefinitelyTyped/branches/master\n. need reply @Schurke .\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^^).\n. Thank  you @dancancro  :-) \nActually we rewrite README and documentation. I think we will integrate your awesome document at end.\nAnd i would like to help complete your doc\n. :+1: \nI will continue to complete your doc but already 21%\nThrough the document I find inspiration for my next contributions.\n. https://github.com/Swiip/generator-gulp-angular/pull/447 can be help you if you really need a components folder outside app \n. Do you have a bower package as example ?\n. I waiting gulp4 release to start refactoring \n. This issue is a nice feature/enhancement but we (Swiip and me) don't have time to implement this for the moment.\nOur first priority is stabilized functionality already present in the generator for the purpose of releasing v1.0.0\nFor clarity in issues I will close the issue and marks it as \"good-but-no-time\".\nAny good contributions to resolve this matter is appreciated and merged.\nOtherwise we will reopen the issue after the v1.0.0\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. Can I closed ? @abbish\n. I compare others generator. Never bower is added in devDependencies. Probably because yeoman installs the dependencies\n. Can you create a PR @cyberdemon8  ?\n. Duplicate https://github.com/Swiip/generator-gulp-angular/issues/9\n. One thread for one issue.\nPlease continue in https://github.com/Swiip/generator-gulp-angular/issues/9#issuecomment-103876166 \n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. Sorry proxy.js is removed. \nYou should note https://github.com/Swiip/generator-gulp-angular/pull/593\nThank you for contribution.\n. I'm not sure that should be a part of generator. \nThe easy way : use a n\u00e9gative glob pattern in your gulp.src.\nA recipe would be appreciate.\n. I just try your case.\n$ mkdir testGulpAngular\n$ cd testGulpAngular/\n$ yo gulp-angular --default\n$ echo \"# furry-octo-nemesis\" >> README.md\n$ git init\n$ git add .\n$ git commit -m \"first commit\"\n$ git remote add origin git@github.com:zckrs/furry-octo-nemesis.git\n$ git push -u origin master\n$ gulp serve\n$ gulp test\n$ gulp\n$ cd ..\n$ git clone git@github.com:zckrs/furry-octo-nemesis.git\n$ cd furry-octo-nemesis/\n$ npm install && bower install\n$ gulp serve\n$ gulp test\n$ gulp\nEverything works fine.\n@qumani-designs can you try to fetch https://github.com/zckrs/furry-octo-nemesis ?\n. @keichi PR incoming ?\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/756 \n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. No description, no explanation, build failed => Soon closed\n. I think this issue is fixed on master branch\n@AleksMeshkov  can you paste your .yo-rc.json, bower.json ?\n. 1) You should save your bowerDep for wiredep https://github.com/taptapship/wiredep#how-it-works \n2) If that not solved, can you try with master version of generator? Otherwise you should wait next release\n. :tada: Just released v0.12.0 :tada: \n. there is no upgrade provide by yeoman.\nYou should update the generator by npm -g install generator-gulp-angular and rerun yo gulp-angular in your current project.\nBut be careful. Before upgrade I suggest you to create a branch in your project.\nThis post should help you http://stackoverflow.com/questions/18480316/how-to-upgrade-existing-project-scaffolded-with-yeoman \n. Ready to merge IMO\n. Remove .pipe($.rev()) in your gulp/build.js\nhttps://www.npmjs.com/package/gulp-rev\n. Should fix  https://github.com/Swiip/generator-gulp-angular/issues/498\n. Nice answer @notrab\n. You can tweak build task to disable  minfication and concatenation. And open dist/Index.html with your browser\n. Not reproduce. Can you try to reinstall generator ? \n. In fact we did not expect Windows environnement to run test :-/\n. At moment I don't know ESLint.\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. We have already discuss about this subject https://github.com/Swiip/generator-gulp-angular/issues/272\nIf you can't live with it you can:\n- create a PR to offer a option component-path https://github.com/Swiip/generator-gulp-angular/blob/master/app/options.json\n- revert this PR https://github.com/Swiip/generator-gulp-angular/pull/447 in your local generator\nI advise you to read:\n- https://google-styleguide.googlecode.com/svn/trunk/angularjs-google-style.html\n- https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub\n- https://github.com/johnpapa/angular-styleguide#folders-by-feature-structure\n. What do you mean by \"reusable components\" ? Between applications ? Between angular module ? \nInside the application feature store in \"components\" can be reuse in every page. \nOutside the application you can copy/paste your components. \nPerfect folder structure is utopia. We can't support every usage favorites so we follow good pratices. \nInstead of complaining on all issues dealing with the folder structure, you can create a solution to resolve it (like a option component-path).\nLast point this repository is a generator not a framework. \nYou must fork the generator or adapt the sample app. \n. Thank you for the constructive issue.\n. You use a older version of generator. Can you try with master ?\n. Not reproduce. No respond.\n. Thank you for PR we add Angular 1.4 in https://github.com/Swiip/generator-gulp-angular/pull/571 \n. Should be fix by https://github.com/Swiip/generator-gulp-angular/pull/571\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. update \"gulp-autoprefixer\"\n. Can you create pull request ?\n. In fact I would remove this script in index.html.\nGoogle Analytics should not be included by default and it's easy/fast to add in a generated project\n. What command you run ?\n. Can you paste your yo-rc ?\n. Not reproduce. All work fine with stylus. If you don't paste your .yo-rc.json I can't be sure I use identical config.\n. Always not reproduce can you try to clone master and use npm  link ?\n. $ git clone git@github.com:Swiip/generator-gulp-angular.git\nGo into folder then:\n$ npm install\n$ npm link\nGo into your newProject folder:\n$ yo gulp-angular\n. @syzer thank you for this necessary comment who we help to understand origin of issue\n. :tada: Just released v0.12.0 :tada: can you try with last version ? \nI close if you issue already with v0.12.0 can you open a new issue ? \n. With gulp-rev. Do you read code of build task ?\n. I will update PR and update bower dep\n. https://github.com/Swiip/generator-gulp-angular/pull/561\n. No problem\n. Duplicate of https://github.com/Swiip/generator-gulp-angular/pull/561\n. Hi @JackNorris\nWhat version of generator you use ? v0.11 or master ?\nCan you paste jour .yo-rc.json ?\n. Since lastest release on NPM I have rewrite lot of file. This issue is not present in master\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. wiredep do the work https://github.com/taptapship/wiredep\nBowers dep should present in your dependecie's bower.json. And the bower.json of dep/lib should have a main pprt\n. Do you try https://github.com/taptapship/wiredep/blob/master/readme.md#bower-overrides ?\n. https://github.com/arturgspb/bower-amcharts/blob/master/bower.json#L4 \nbower-amcharts doesn't include serial.js\n. :tada: Just released v0.12.0 :tada:\n. Duplicate https://github.com/Swiip/generator-gulp-angular/issues/497\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed. I close but if you can retry your case with a new fresh install of generator you are welcome. Any feedback would be appreciated (positive comments too ^_^).\n. This issue is fixed in last version v0.12.0.\nPlease next time embed your code in gist or code block \n. We don't have released a new version.\nYou can:\n- wait for next release\n- contribute for a fastest release\n- Clone the master branch and use npm link\n. This issue is not relative to generator-gulp-angular.\n. ? Can you precise ? Maybe  https://gitter.im/Swiip/generator-gulp-angular is right place for this type of question.\n. In v0.11.0 the index.js should contains module def, .config and .run statement.\nRouter configuration is a .config.\nIn master version we split index.js in multiples files\n. :tada: Just released v0.12.0 :tada: \nCan you retry with last version ?\n. Fixed by v0.12.1\n. This PR merge only styles not JS\n. :tada: Just released v0.12.0 :tada:\nYour issue should be fixed\n. @Swiip I don't understand why last inception test failed with custom path option\n[src:src/angular/app e2e:tests/e2e dist:target/build/folder tmp:.tmp/folder]\nError is:\nError: Unexpected request: GET app/components/navbar/navbar.html\nI suspect a problem with karma-ng-html2js-preprocessor and angular $templateCache\nHelp appreciate :-(\n. :tada:  thank you\n. We rewrite gulp workflow when Gulp4 will released\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. Fixed by v0.12.1\n. This repository will not support Visual Studio. Sorry =\\\n. $ bower search bootstrap-sass\nbootstrap-sass-official git://github.com/twbs/bootstrap-sass.git\nbootstrap-sass          git://github.com/twbs/bootstrap-sass.git\n. Bower packages have the same repository.\n. What version node ? generator? Can you paste .yo-rc.json ?\n. No :-/\nBower is already launch after scaffolding.\nPostinstall should be used compilation or install relative to node_modules.\nYou can use npm install && bower install or npm i && boxer i or a bash alias\n. Fix https://github.com/Swiip/generator-gulp-angular/issues/607 ? \n. Your change will put file fixing by JSCS in .tmp :/\n. And your PR doesn't start Travis \n. How do you install the generator ? via NPM ? \n. https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/_.jshintrc\nAlready fix\n. We just release a new version. Maybe you should check\n. You are welcome\n. Can you paste your .yo-rc.json ???\n. Today I release v0.12.0 and I have no error\n. Please update the generator.\n. npm install -g generator-gulp-angular\n. No problem =]\n. Paste your .yo-rc.json in code block or gist\n. For support please go to https://gitter.im/Swiip/generator-gulp-angular\nIssue tracker is for bug.\n. This issue is relative to https://github.com/twbs/bootstrap/blob/master/bower.json#L18 \nThey don't define a main proprety for plain CSS cause wiredep can't retrieve the right file. \nIf you replace this line by \"dist/css/bootstrap.css\" all right fine.\n. You should open a issue on https://github.com/twbs/bootstrap/issues\nBut you can use overrides like ugly walkthrough in your bower.json\n...\n  \"overrides\": {\n    \"bootstrap\": {\n      \"main\": \"dist/css/bootstrap.css\"\n    }\n  }\n...\n. See my previous post\n. Fixed by v0.12.1\n. Confirm bug on Windows and #601 not fixed that\n. Fixed by v0.12.1\n. All parials .html are load into Angular template cache. I think you can use the service $templateCache with your expression.\nhttps://docs.angularjs.org/api/ng/service/$templateCache\n. Can you paste your .yo-rc.json ? \n. True. And a unit test\n. Two solutions IMO:\n- generate a new external project\n- use module in AngularJS\nhttps://github.com/Swiip/generator-gulp-angular/issues/737\n. Just to notice  https://github.com/Swiip/generator-gulp-angular/issues/81\nThe current gulp workflow can be improve. But im afraid to edit. IMO we should wait the gulp4 released\n. Thanks \n. Thank you\n. I don't think this issue is related to generator.\nWe have only updated ui-bootstrap from ~0.12.0 to ~0.13.0.\nTry to downgrade\n. You can look other class like \nhttps://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/src/app/components/githubContributor/_githubContributor.service.ts \nMaybe try to add a console.log(this) in this file\n. Ryan is right. \n\nConfig functions aren't classes and shouldn't be written as such. Angular is invoking them without new \n. PR appreciate\n. Really you should just push your branch and let Travis run test for you.\n\nRunning test of generator in Windows is a pound. You can try to install mocha as global and run mocha test/\nWindows not recognize * or . etc\n. Fixed by #672 \n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. I just trying. Everything work.\nCan you check your bower.json ? And can you paste your .yo-rc.json here ? \n. ```\nHi, here they are:\n.yo-rc.json\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n```\nYou should rerun yo gulp-angular. You use a old version of generator.\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/662\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. Because Wallace Figueiredo publish on Coveralls with the same token. \n. lgtm :+1:\n. @mikesigs Do you have already written unit test in TypeScript with Karma ? I look for help or a good example.\n. Agree\n. Can you fix our test at https://github.com/Swiip/generator-gulp-angular/blob/master/test/template/test-index-module-js.js#L57 ?\n. No problem :-) Travis ensure.\nThank you for contributions.\n. I checkout your branch and test gulp tsd  that don't fix issue. :/\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. Nice description for issue. Thank you.\nYou are right. Coffescript and uglify are the problem.\nIf you comment the uglify pipe that should work. I suspect the @ngInject tag\nWe need investigate\n. Juste generate a new project in CoffeScript. vm.creationDate is not null \n. \nI copy/paste your yo-rc.json and NavbarController\n. Solved :)\nIn fact I use master version of generator and I recently fix this problem \nhttps://github.com/Swiip/generator-gulp-angular/compare/v0.12.1...master#diff-86a39a5c5ab2de068f881708b1734e55R4\nI will trying to release v0.12.2 today\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. HTML files are transform in JS files and put into Angular $templateCache service by gulp-angular-templatecache\nhttps://github.com/Swiip/generator-gulp-angular/blob/08897c5c88e297bee9ab7571e625f086248a62f4/app/templates/gulp/_build.js#L25 \n. Before close please pull request\n. @sergonius can you tell us your OS, node version and paste your .yo-rc.json ?\n. You use a old version of generator. In last version 0.12.1 I has updated gulp-angular-templatecache\nThat fix your issue.  No PR needs sorry\n. https://github.com/Swiip/generator-gulp-angular/commit/26ab4ebf39a71690c7af762427dabae1df4d65ae#diff-af782628927c2262dbb848fb6c305b35R11. The commit\n. You should rerun generator after update\n. Can you push the project on a repository ?\n. I just try on OSX. Everything works. \n. https://github.com/Swiip/generator-gulp-angular/issues/641#issuecomment-116808932\nThank you for contributing\n. You use a old version of generator\n. This post should help you http://stackoverflow.com/questions/18480316/how-to-upgrade-existing-project-scaffolded-with-yeoman \n. The orignal problem is we inject spec.js in the src folder instead of  .tmp folder.\nMixed Coffee and JS is a common case in project ? \n. Done\n. > It's so easy to reproduce\nCan you explain @e-oz?\n. ping @e-oz @kudresov \n. No reply\n. https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/environment-specific-build.md\nA recipe exist :-/.\n. Duplicate   https://github.com/Swiip/generator-gulp-angular/issues/9\n. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md\n. I think your issue is solved in master\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. Duplicate of https://github.com/Swiip/generator-gulp-angular/pull/645 =\\\n. You are welcome :-)\n. Reproduce.\nBut why edit index.html @slawojstanislawski  ?\n. :+1: \n. :+1:\nNice work but can you rebase on master ?\nAnd why you write this PR ? Bug, improvement ?\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. Any PR in progress? \n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. :+1: \n. :+1:\n. :+1:\n. :+1:\n. Unable mangle is overkill solution instead of use  dependency annotation\n. Works with the latest version v1.0.0-rc1.\n\n. This post by @sindresorhus can help you http://stackoverflow.com/a/18500003\n. Released https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/upgrade-my-current-project.md\n. As said @MarcLoupias the gulp task 'inject' manage the order by gulp-angular-filesort who should place  the declaration module in first place.\nAfter that the task 'build' use gulp-useref to replace build blocks in index.html.\nMaybe this recipe can complete my comment. https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/managing-third-party-files.md\n. :+1:\n. Coverage over ES6 tranpiler is a probleme related to Istanbul. A expirimental solution is https://github.com/douglasduteil/isparta.\n. Partially solved.\nActually we have coverage on the files generated by JS preprocessors\n. @devmark  issue resolved ? \nIf not can you give more details ? a github repo where we can reproduce the problem will be the best\n. Thank you.  :)\n. Maybe we should propose option for https://github.com/jadjoubran/angular-material-design-lite ?\nWhat do you think @Swiip @drGrove ?\n. @drGrove Yeah MDL and Angular-Material are two different implementation\nBut I think about MDL and Angular-Material-Design-Lite \nLook https://github.com/jadjoubran/angular-material-design-lite/blob/master/bower.json#L28\n. We should not wait integrate AMDL before merge this feature @Swiip ?\nI am not sure one day AMDL release v1.0.0\nMaybe @jadjoubran can help about this point.\n. @drGrove IMO the best solution is \n- MD: Angular-Material or Vanilla MD\n- MDL: AMDL or Vanilla MDL\nBut at moment we can support only:\n- Angular-Material\n- AMDL\n. Works for me too:\n.tmp/serve/index.html\n<!-- inject:js -->\n    <script src=\"app/index.module.js\"></script>\n    <script src=\"app/components/webDevTec/webDevTec.service.js\"></script>\n    <script src=\"app/components/navbar/navbar.directive.js\"></script>\n    <script src=\"app/components/map/map.controller.js\"></script>\n    <script src=\"app/components/githubContributor/githubContributor.service.js\"></script>\n    <script src=\"app/components/cities/cities.module.js\"></script>\n    <script src=\"app/components/cities/cities.service.js\"></script>\n    <script src=\"app/components/cities/cities.directive.js\"></script>\n    <script src=\"app/main/main.controller.js\"></script>\n    <script src=\"app/index.run.js\"></script>\n    <script src=\"app/index.route.js\"></script>\n    <script src=\"app/index.constants.js\"></script>\n    <script src=\"app/index.config.js\"></script>\n    <!-- endinject -->\nnode 0.12.7\nnpm 2.11.3\n$ git clone git@github.com:codeofsumit/angular-test-polygons.git && cd $_\n$ npm i && bower i\n$ gulp serve\n. Tests should cover these cases\n. https://travis-ci.org/Swiip/generator-gulp-angular/jobs/72481607#L1091\nCheck config at https://coveralls.io/github/Swiip/generator-gulp-angularr/notifications/webhook\n. Maybe the token is wrong\n. I think our example in the basic generated app is already huge.\nContinue adding details would risk losing users in excessive complexity.\nAn alternative might be to list the applications created from the generator via an issue. And put forward in the README.md\n. Theses link can help you:\n- https://github.com/johnpapa/angular-styleguide/blob/master/README.md#modularity\n- https://github.com/angular-ui/ui-router/wiki/Nested-States-%26-Nested-Views#abstract-state-usage-examples\nAnd pretty contributions are welcome.\n. :+1:\n. Sorry but IMO our issue is related to \"How use Foundation\" and is not dependant of this generator.\nMaybe your implementation in sample app is wrong with Foundation.\nCan you propose a pull request ? \n. This link can help you http://stackoverflow.com/a/18500003 \n. +1\n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. :+1: but need rebase with master\n. Sample app follow angular style guides of John Papa\n. Nice work :+1: \n. This issue is related to how create auth app with Angular. Many blog post explain how to solve your problem.\n. Merged bbdb6d2dbe1ad829fbcc3b7b7bc9fa23a8921683 thank you\n. You use a old version of generator. Please update generator, rerun generator on your project and look inside gulp/server.js https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/upgrade-my-current-project.md\nYou should see these lines:\n/*\n   * You can add a proxy to your backend by uncommenting the line below.\n   * You just have to configure a context which will we redirected and the target url.\n   * Example: $http.get('/users') requests will be automatically proxified.\n   *\n   * For more details and option, https://github.com/chimurai/http-proxy-middleware/blob/v0.0.5/README.md\n   */\n  // server.middleware = proxyMiddleware('/users', {target: 'http://jsonplaceholder.typicode.com', proxyHost: 'jsonplaceholder.typicode.com'});\nIf you uncomment // server.middleware = proxyMiddleware('/users', {target: 'http://jsonplaceholder.typicode.com', proxyHost: 'jsonplaceholder.typicode.com'}); and request http://localhost:3000/users everything should works\n. Done by https://github.com/Swiip/generator-gulp-angular/pull/728\n. Done by https://github.com/Swiip/generator-gulp-angular/pull/728\n. :+1:\n. Not reproduce.\nAll works fine. \nCSS files are injected in index.html by inject task\nvar injectStyles = gulp.src([\n    path.join(conf.paths.src, '/app/**/*.css')\n  ], { read: false });\n. Thank you :+1: \n. v1.0.0-rc1 released on NPM.\nHow to update my project?\n. :+1: thank you\n. This generator don't support backend side. You should create external server app and use request inside Angular app.\n. :+1: \n. Maybe the next sample app should contain a module 'layout'\n. :+1: \n. Still WIP. Actualy we just track the first run generator. \n. Options:\n- track each prompt selection in different event ('/jquery2', '/restangular', '/ui.router', ...)\n- track user profil ('/jquery2/restangular/ui.router/...', '/zeptoJS/$http/new-router/...', ...)\n- or both\n. Examples data send by Insight:\n- /jquery2/angular-resource/ui-router/bootstrap/noBootstrapComponents/node-sass/noJsPrepro/noHtmlPrepro\n- /jqLite/restangular/new-router/material-design-lite/null/less/typescript/jade\n. :+1: just fix coverage\n. What do you think about change default value of module to false ? \nBecause we don't illustrate these modules in boilerplate\n. https://github.com/borisyankov/DefinitelyTyped/blob/master/angularjs/angular.d.ts#L727\nThey are exported by angular.d.ts.\nWe recently change how TSD is used in project.\nhttps://github.com/Swiip/generator-gulp-angular/pull/756\nI think your issue is solved\n. We have many template files in https://github.com/Swiip/generator-gulp-angular/tree/master/app/templates/src/app \nAre you ready to duplicate the HTML files in 3 preprocessors and maintain?\n. > Although when you first run the yeoman generator it gives you html files but you can edit them to be jade and the app will work the same. \nYou can convert html files with http://html2jade.org/\n. Sorry I didn't use IE9 or less\nBut:\n- this stackoverflow post can help you http://stackoverflow.com/questions/22763599/ie-9-not-supporting-locationprovider-html5mode\n- since Angular1.3 IE8 support is dropped https://docs.angularjs.org/guide/ie\n. https://github.com/Swiip/generator-gulp-angular/issues/651 \nCSSO is not maintened.\nWe use clean-css  via gulp-minify-css\n. Clearly we need more informations\n- .yo-rc.json ?\n- node version ?\n- OS ?\nNever seen this bug.\n. Can you execute in folder of project with command line $ cat .yo-rc.json ?\nWhat is the version of generator-gulp-angular ? Can you try with the latest version ? \nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs%2Frecipes%2Fupgrade-my-current-project.md\n. @psvensson ping\n. Too many MB. We need only iconfonts https://github.com/google/material-design-icons/tree/master/iconfont\n. Nice catch. Thank you.\n. Can you paste .yo-rc.json ?\n. Yesterday we release a new version v1.0.0-rc1\nCan you reinstall generator and retry ?\n. TemplateCache is used only for build task.\nEverything works\n. No. \n gulp or gulp build create app in dist folder if you search your partial in dist /js/app-xxxx.js we will find them.\nIf you run gulp serve:dist you see navbar in browser ?\n. @MQuy paste your .yo-rc.json, bower.json, package.json, node version, OS\nIf you want combine you can edit the useref comment in index.html\n```\n   \n<!-- build:js(src) scripts/vendor.js -->\n<!-- bower:js -->\n<!-- run `gulp inject` to automatically populate bower script dependencies -->\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n<!-- inject:js -->\n<!-- js files will be automatically insert here -->\n<!-- endinject -->\n\n<!-- inject:partials -->\n<!-- angular templates will be automatically converted in js and inserted here -->\n<!-- endinject -->\n<!-- endbuild -->\n\n```\nto\n```\n   \n<!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n<!-- bower:js -->\n<!-- run `gulp inject` to automatically populate bower script dependencies -->\n<!-- endbower -->\n<!-- inject:js -->\n<!-- js files will be automatically insert here -->\n<!-- endinject -->\n\n<!-- inject:partials -->\n<!-- angular templates will be automatically converted in js and inserted here -->\n<!-- endinject -->\n<!-- endbuild -->\n\n``\n. No response. I think you solve problem.\n. New versionv1.0.0-rc1` is avaible.\nI try your case with this version and carret is always present.\nCan you reinstall generator and retry ?\n. https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/upgrade-my-current-project.md\n. Task tsd doesn't exist anymore. Update generator.\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/upgrade-my-current-project.md\n. :+1: but fix coverage \n. Duplicate of https://github.com/Swiip/generator-gulp-angular/issues/731 ?\n. PR https://github.com/Swiip/generator-gulp-angular/pull/770\n. In this generator we prefer manage preprocessor inside gulp process instead karma.\nSo we compile jade partial in folder .tmp and serve them\n. We use https://github.com/taptapship/wiredep to inject bower dep. And wiredep inject only dep and not devDep. Sorry\n. :+1: \n. Can you try with the latest version of generator v1.0.0-rc1 ?\n. Please we need more consistent informations like .yo-rc.json.\nEverything works on my side with the master branch of generator on Ubuntu.\n\n\n. @daniel-takeuchi ES6 + AngularJS are tricky especially for directive.\nhttp://www.michaelbromley.co.uk/blog/350/exploring-es6-classes-in-angularjs-1-x \nThis article explain why and how to resolve problem.\n. Fixed by https://github.com/Swiip/generator-gulp-angular/pull/791\n. :+1: @busches \nWe are not mainteners of JQLite or PhantomJS.\nYou could try with https://github.com/karma-runner/karma-chrome-launcher\n. Already passing with error when install phantomjs\nhttps://travis-ci.org/Swiip/generator-gulp-angular/jobs/80208134#L501\n. Build with node v4 stable fail because socket.io must update depencie engine.io to 1.5.4\nhttps://github.com/socketio/socket.io/issues/2228\nhttps://github.com/socketio/socket.io/issues/2242\nhttps://github.com/socketio/socket.io/issues/2245\nhttps://github.com/socketio/socket.io/issues/2213\n. https://codecov.io/github/Swiip/generator-gulp-angular?pr=786\n@Swiip maybe you should configure some features in Codecov.io (Commit status, Pull Request comment)\n. :+1:\n. We have migrated to ESLint.\nhttps://github.com/Swiip/generator-gulp-angular/pull/705\n. We apply John Papa style guides \nhttps://github.com/johnpapa/angular-styleguide#style-y033\n. Thank you\n. > Because we create a generator you should be specific as possible in your requests.\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues\n. Why use plop when we use Yeoman ?\n. https://github.com/yeoman/yo/releases/tag/v1.8.0 \ninteractive too ^^ \n. For interested people the next iterations of generator-gulp-angular have many sub-generators for AngularJS.\nYou can view list in this tweet.\n. :+1: thank you\n. @srdjanprpa can you provide more details please ?\nI'm not sure this issue is related to generator.\n. \"version\": \"0.12.1\", \nold version \nThis issue is fixed in last version v1.0.0-rc2 \n. For the next major version I imagine compose with generator-node:git \nhttps://github.com/yeoman/generator-node/tree/master/generators/git\n. > The generator uses the file watching from Gulp 3 which is known to have some limitations. For example a new directory or the creation of the first file in a directory will be missed. Please try to stop your watch process and relaunch it before asking for help.       \nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#file-watching--pre-processing\n. Yeah when we migrate to Gulp4 this issue should be solve.\nIn fact Gulp4 will use a new library for watching files. (https://github.com/gulpjs/gulp/issues/1247).\nAt this time you can use gulp-watch plugin who use the same library: chokidar\n. Np\n. I don't know this plugin gulp.\nMaybe run new task after inject and before HTML task.\nBut why you don't ask help to gulp-cdnizer repo ?\n. Do you have CLI 'tsd' installed ? \n$ tsd --version\n. https://github.com/Swiip/generator-gulp-angular/pull/829 merged\n. Thank you\n. Actually include Cordova or Ionic in this generator is not planned. \nSorry @juan-manuel-alberro  but awesome PR are welcome. \nping @mvidailhet https://github.com/Swiip/generator-gulp-angular/issues/690#issuecomment-125593981\n. In our sample app we use relative path to get file\n. You should have error at end of generator. Do you have TSD installed globally ?\n. Check current open PR before open issue.\nhttps://github.com/Swiip/generator-gulp-angular/pull/824\n. Why ?\n. good initiative but I remember we use others method like foreach, flatten, findwhere, clonedeep, ... etc\n. Sorry my error. I didn't see you modify the sample app.\nCan you update NPM shrinkwrap  by command $ npm run update-shinrkwrap ?\n. Issue related to Karma, NPM3 and optional dep\n. Windows + Typescript (tsd) I am not sure that works because Windows use \\ instead of / for path\n. At end of yo gulp-angular I think you have error because TSD is not installed  by npm -g install tsd \n. Post your .yo-rc.json\n. Thank you for PR.\nCan you confirm any breaking change exist in 0.14.2 ?\n. @laughin1 Can we have more details ? OS, version Node, NPM ? Do you install TSD in global ? \n. https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/gulp/_styles.js#L65 already done \n. I think you should open issue in Semantic-UI repo or/and BrowserSync.\nI search file dns.js in project but not found\n. More infos can help.\nNode version ? NPM version ? .yo-rc.json ?\n. FYI with NodeJS v4 everything works\n. Do you know a other more stable gulp plugin ?\n. If nothing exist to replace this plugin this can be close.\n. Duplicate issue https://github.com/Swiip/generator-gulp-angular/issues/664\nPR welcome. /cc @bsides\n. Yes this PR is for master =) \n. Lastest version is v1.0.0-rc4\n. Where is the change ? I see only indentation edit\n. Already fixed https://github.com/Swiip/generator-gulp-angular/pull/873\nPresent in the next release\n. Released 1.0.2 who fixed issue\n. Released 1.0.2 who fixed issue\n. Just release a new version 1.0.2 who should fixed :pray: \n. The next awesome version start here \nhttps://github.com/FountainJS/generator-fountain-webapp/blob/master/README.md\n. Pull request are welcome. \n. https://github.com/Swiip/generator-gulp-angular/issues/800#issuecomment-141885121\nHi Eddie, \nProblem is know. \nOur current Gulp process is  weak.  And I don't look time to try to update him. \nBut your contribution are welcome. (pref gulp-watch instead gulp-newer) \n. :+1: \n. Question\nWhy you don't use the new version of gulp-angular ? \nhttps://github.com/FountainJS/generator-fountain-webapp \nor directly for Angular1 \nhttps://github.com/FountainJS/generator-fountain-angular1\nYou should find a better support for TypeScript.\n. :+1:\n. :+1: \n. I think we are not clear.  FountainJS is a new project who includes more feature than gulp-angular.  \nYou can't use gulp-angular inside FountainJS.\nBut you should use generator-fountain-webapp (or generator-fountain-angular1 if you want directly call generator within Angular1). \n. Hi, can you try with https://github.com/FountainJS/generator-fountain-webapp who is the next iteration of gulp-angular ?\n. @UnJavaScripter can you explain why? \n. @Swiip this process is never call so i removed it. \n. :shipit: \n. Why create a new variable filesFromJson when you redifnes files at https://github.com/Swiip/generator-gulp-angular/pull/133/files#diff-bdb148c87aed0c8569b1f57494c431ddR12 ? \n. You create a new variable for each iteration :-/ \n. :-1: \n. Not neccesary. Instead you can use this._ at https://github.com/Swiip/generator-gulp-angular/pull/137/files#diff-2018087f584c4398b5c3a23fc0e5f9dbR61\n. This huge allocation need a comment. It is not simple to read\n. @ should not be escape ?\n. Why you add ['watch'] ?\n. gulp.task('serve:e2e' , ['wiredep', 'injector:css', 'injector:js'], function ( \n. In the default case foundation is not present.\nhttps://github.com/Toilal/generator-gulp-angular/blob/angular-foundation-option/test/test-files-generate.mocha.js#L102\n. Should not be present if in mockPrompt you dont init 'angular-foundation' like here\n. Please switch this two lines.\n. Option --default will use '6to5' ? \n. With pure CSS task doen't watch change on .css files :-S\n. On Windows this test failed.\nutils.js is really neccesary ?\n. Use path.sep\n. http://nodejs.org/api/path.html#path_path_normalize_p is not enough ?\n. Please can you show a simple diff :/\n. We need only one plugin in _gulpfile.js.\n. Can you drop a link for documentation ? \n. Why throw_ ? strange name for a variable\n. yeah throw is reserved. rename throw_ to error\n. Travis failed because this line \n. @Swiip here I create a new props used in  _bower.json to replace _.findWhere() in template.\n. @Swiip ... I forgot to add the condition on this require :-(\n. https://github.com/Swiip/generator-gulp-angular/pull/648\n. What is diff ?! :disappointed_relieved: \n. @drGrove  can you add semicolon ? \n. Ugly line.\n@Swiip should I use lodash to compose a object ?\n. typo 'tect'\n. replace by stable\n. typo 'resporters'\n. Remove iojs ?\n. Why all these updates ? \n. ",
    "deebloo": "when beginning work on this can I also suggest the ability for users to override the generator templates? that way if someone wants to use controllerAs for example they can just modify the templates. I made a pretty simple example here https://github.com/deebloo/generator-angular-blueprint. That way you all could decide on a style but then others could create and distribute template 'packs' without changes having to be made to the core generator\n. @zckrs apologies for multiple threads :)\n. when beginning work on this can I also suggest the ability for users to override the generator templates? that way if someone wants to use controllerAs for example they can just modify the templates. I made a pretty simple example here https://github.com/deebloo/generator-angular-blueprint. That way you all could decide on a style but then others could create and distribute template 'packs' without changes having to be made to the core generator\n. true. but as long as the generators defined in core are tested it is up to the end users to make sure their templates are written correctly as long as we tell them how to structure them. So in my example I created a generator to create one of those templates for you and then all you have to do is edit it. It isn't the cleanest but it I am kind of in love with the idea. Ember CLI does something similar but they go further while I am just talking about templates. I am sure we could come up with a way to test local templates as well. At the end of the day it is still testing to make sure that the correct files have been created in the correct place.\n. and please tell me if I am just insane. but being able to have different templates without changes to the core generator is really appealing to me.\n. So is what you are saying is to let gulp angular provide the scaffolding while another generator provided the actual sub generators? (route/controller/etc) I do understand scope creep so I think that would make sense.I do know have stopped using sub generators for various projects because I don't like the style of code they generate. So perhaps you are correct and having something like that decoupled from the core app generator is the best way to go. I actually think it would be best to be a part of yeoman proper so no one had to worry about it. Totally understand if this isn't something worth pursuing for this project but thought it was at least worth putting out there. Still my single favorite feature of EmberCli and would like to se something like it outside of the generator that pretty much just I use.\n. @gryftir and there is nothing keeping me from using this for my project scaffolding and using a separate generator for the other stuff. so the focus may be best separated out. hmmmmmm\n. It certainly maintains a separation of concerns.\n. ",
    "ksambhav": "+1\nMake life a lot easier while working with a bigger team of varying expertise. Easy to add/remove/move/share modules between multiple apps.\n. ",
    "brunoksato": "+1\n. I have problem when using 2 application on localhost with different doors, and I need to use extension of chrome to solve my problem, I would no longer need to use this extension\n@Stibbons I will try ! \n. Thanks\n. ",
    "skeenan": "Still present in v0.4. The fix from @stevebritton of adding a leading / to the template URL in the routeProvider worked for me.\n. I get it now. I upgraded to v0.4 but I didn't release that the gulp/*.js  wasn't regenerated on an existing app. I can confirm that the bug is fixed on a freshly v0.4 generated app. How do I upgrade an existing app that has been previously generated by running yo gulp-angular with v0.3?\n. Thanks\n. Thanks! changing proxyApiPrefix worked as a work around.\n. +1 seeing this behaviour too\n. @zckrs this is a ridiculous question. lot's of reasons for doing this.\n. Other cases would be to use webfonts via a CDN, or adding css classes to the toplevel content div.\n. ",
    "tvararu": "I personally think it's beyond the scope of what the seed app generator should be doing, but if you like it then by all means some part of the deployment process can be abstracted to a Gulp task. If not though, feel free to close this issue.\n. @artmees: Heroku themselves have decent guides written on this subject for a number of the languages and frameworks that they support: https://devcenter.heroku.com/start\nFor the project in which I was using this generator (https://github.com/tvararu/wallet), I opted instead to just use GitHub Pages hosting by creating a gh-pages branch. You can read about this feature here: https://help.github.com/articles/creating-project-pages-manually/\n. @artmees ah, well you asked about \"how to deploy apps to Heroku\" which is why I thought you meant in a generic way.\nThe reason all those tutorials and websites combine the static build with a node server is because Heroku does not automatically provide static site support. Heroku Web dynos will search your project root for a Procfile, and then execute the command outlined on the line that starts with web:. AFAIK, that's it. Also, port :80 is rerouted to 127.0.0.1:$PORT.\nLots of static site projects use web: python -m SimpleHTTPServer $PORT, which will run a small python webserver in the current directory using the specified port.\nHowever, single page applications have more finicky needs; you'll likely want HTML5 pushstate support, so that links like /hello/world aren't just resolved to a 404 and a dead page but rather redirect to index.html so that your fat client application can handle the URL. node + express servers are simple to setup for this purpose.\nI hope that helps! I think that it's best to keep this conversation out of this thread to avoid spamming other people with messages, so feel free to drop me an email if you have further questions. I'll gladly answer what I can.\n. ",
    "a14m": "@tvararu could you please post some gist or anything on how to deploy apps to heroku. (cause I'm having troubles doing it :blush: new to frontend development)\n. @tvararu you got me wrong, I've been using heroku with rails since ever... except in this new project where the angular app is a standalone API consumer... the problem is that I don't get where is the server that will host it (the angular app)... ex. in every article they combine it with a node server... but I just want heroku to serve these angular assets (which will interact with my rails API)... and I'm new to developing standalone API consumer (in the frontend).\n. how do I add it so that it works automatically with dist ?\nusing <script src=\"../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap.min.js\"></script> doesn't work ?!\nI've changed gulp/inject.js (removing /bootstrap-sass-official/,) so that \njs\n  var wiredepOptions = {\n    directory: 'bower_components',\n    exclude: [/bootstrap\\.css/, /bootstrap\\.css/, /foundation\\.css/]\n  };\nbut I'm not sure if that will have any undesired side effects\n. the current gulp/build has this line\n.pipe($.replace('../bootstrap-sass-official/assets/fonts/bootstrap', 'fonts')) # line 49\nbut I couldn't figure how to edit it to fix the issue... i tried many combinations but had no luck figuring it out.\nso what should this line look like ?!\n. they didn't work...\nbefore i try any of those 2 lines the 404 responses contained\nGET http://localhost:9000/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2 \nGET http://localhost:9000/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.woff \nGET http://localhost:9000/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\nafter I tried both of the previous solutions I got the following 404 response\nGET http://localhost:9000/fonts/glyphicons-halflings-regular.woff2\n. here is the .yo-rc if you want to reproduce identical environment like mine\nhttps://gist.github.com/artmees/98e61e8a07cccd3f7df6\n. it didn't work for me... is there a specific .pipe($.replace('bower_co.... edit for this to work ?\ncause it didn't work with the three alternative (mentioned in this issue) ?\n. with just the edit in the font tasks and not the build task ?!\n. I've made both the changes and it works in neither gulp serve nor gulp serve:dist, I've deleted the .tmp and dist folders and tested again but still not working :disappointed: \n. I've included a screen shot after running gulp serve the font is found and still not showing (i've included an icon on the button for demo purpose)\n\nbut gulp serve:dist is always returning 404 ?!\n. ok this worked but not in production (gulp serve:dist) I still get the 404 response for the fonts all the 3 ?! I've tried all the modifications to the html task and yet non of them work with production...\n. yeah I know the comment... and that is what happened without any further modifications in the file it stopped working... and I really wonder why... is it cached somewhere ?! it's weird I know... but I couldn't figure out why it's not working...\nwhat is more weird is that after updating the bootstrap-sass-official it's working with gulp serve even without modifying the html task (adding bower to the path) ?! \nedit\nafter updating the bootstrap-sass-official the gulp serve correctly shows the icon if the html task has any of the following paths\n.pipe($.replace('../bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))\n    .pipe($.replace('../bower_components/bootstrap-sass-official/assets/fonts/bootstrap', '../fonts'))\n    .pipe($.replace('bower_components/bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))\nand the gulp serve:dist doesn't show the icons no matter what the path is ?!\nfor completeness i've added the gulp build.js to the gist marking the only change that I made to it other than the changes @marani instructed me to do\nhttps://gist.github.com/artmees/98e61e8a07cccd3f7df6#file-gulp-build-js-L37\n. I've applied the same changes you did in the PR\n```\ngulp/build.js\n.pipe($.replace('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/', '../fonts/'))\n\nsrc/app/vendor.scss\n$icon-font-path: \"../../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/\";\nthe @import was not changed but i added it for reference\n@import '../../bower_components/bootstrap-sass-official/assets/stylesheets/bootstrap'; \n```\nand It's still failing... the problem is that i don't understand where the fonts should be copied ( and where is the copying process) ? if you could explain those to me... I might be able to debug it myself\n. yeah i checked that commit, and I've also added the woff2 font edit (long time ago :+1: )\nI've changed both the $icon-font-path and the html task .pipe and it's not working...\nhaving to look in the dist/ folder I found that the fonts was copied correctly but styles/vendor-469e860f.css contains the following lines\ncss\n@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.eot');\n  src: url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2') format('woff2'), url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.woff') format('woff'), url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.ttf') format('truetype'), url('/bower_components/bootstrap-sass-official/assets/fonts/bootstrap/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg'); }\nis the src: url(...) correct ?\n. ok it's now working but I had to change var cssFilter = $.filter('/**/*.css'); which is my edit back to var cssFilter = $.filter('**/*.css');\nwhich bring us to issue #268 \nsorry that I completely forgot that edit\n. initially I was able to achieve this by editing this line\nfrom var cssFilter = $.filter('**/*.css'); to var cssFilter = $.filter('/**/*.css'); but it resulted in making the build task unable to properly substitute the fonts path (see #266)\n. actually this is now supported by default... ( I don't know how but it just works) :smile: \n. ",
    "GlennGeenen": "This is a windows bug in rev-replace: https://github.com/jamesknelson/gulp-rev-replace/issues/1\n. As the error says, you need to install Sass: http://sass-lang.com/install\n. - gulp-clean is deprecated\n- gulp-imagemin had some gif related errors that are fixed with an update\n- updated some package versions, I'll bump some more packages when I find time\n. ",
    "CosticaPuntaru": "the problem is that in html the files are included as main.js and vendor.js and in reality the names are main-(hash).js and vendor-(hash).js\n. ",
    "yantakus": "Updating gulp-rev-replace to the latest version fix this problem.\n. Also .sass-cache is not needed in .gitignore if using less.\n. ",
    "jeffscottward": "I can live with that :). \n. ",
    "paglias": "hi @Swiip,  in the README it continues to mention ngmin :)\n. +1\n. @zckrs thanks! it's working now\n. ",
    "marcvangend": "Thanks. I'm afraid I can't help you with coding and pull requests, so I'll just be a cheerleader.\nKeep up the good work!\n. ",
    "otaviosoares": "Hello markstewie.\nYou can achieve that with connect-modrewrite\n$ npm install --save-dev connect-modrewrite\nThen edit gulp/server.js\n``` javascript\nvar modRewrite = require('connect-modrewrite');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/index.html',\n    server: {\n      baseDir: baseDir,\n      middleware: [\n        proxyMiddleware,\n        modRewrite([\n          '!\\.\\w+$ /index.html [L]'\n        ])\n      ]\n    },\n    browser: browser\n  });\n}\n```\n. ",
    "markstewie": "Thank you very much!! Works perfectly.\n. ",
    "Hesesses": "For some reason this is not working for me. I get 404 nginx error\n. This is the error on console:\nFailed to load resource: net::ERR_CONNECTION_REFUSED http://localhost:3000/socket.io/?EIO=2&transport=polling&t=1411161759878-31\n. Error on terminal is:\nError: connect ECONNREFUSED\n    at errnoException (net.js:904:11)\n    at Object.afterConnect as oncomplete\nWhen I changed proxyTarget variable on gulp/server.js to real url, then everything seems to work\n. +1\n. anyone?\n. Same thing without '/'.\nI think the problem is that those template filenames are dynamic.. Any ideas how to load those to $templateCache ?\n. I installed a new bower component and it started working.. weird\n. I'm working another project now and have the same error again.\nWhen install new bower components i'm getting the error above.\nbower install angular-ui-notification --save\nIf I uninstall the component, gulp serve works again.\nAny ideas?\n. I'm having the same problem, fontawesome works with serve but not included in dist folder after build\n. I had the same problem.\nsudo npm cache clean -f\nfixed the problem but I need to run it always after adding new files\n. @jetspeed did you ever get this working?\n. ",
    "gunish": "+1\n. this issue is still open, \nI tried adding the modRewriter to proxy but still getting the TypeError: object is not a function\n. would be great to know the reason behind doing this ? appreciate the opinion but it would be great to understand the reason for not updating the src as well... \n. makes sense! \n. ",
    "andreicojea": "@otaviosoares I think your code returns index.html for assets with ?rel=123412341234, like the styles injected by browser-sync ^_^  I'm using '^[^\\\\.]*$ /index.html [L]' rewrite rule instead, it matches everything that does not contain a '.'\n. ",
    "clessg": "The following seems to work for me so far. Haven't done much testing though.\nnpm install connect-history-api-fallback --save-dev\n``` javascript\nvar proxyMiddleware = require('./proxy');\nvar historyApiFallback = require('connect-history-api-fallback');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nvar routes = null;\n  if(baseDir === paths.src || (util.isArray(baseDir) && baseDir.indexOf(paths.src) !== -1)) {\n    routes = {\n      '/bower_components': 'bower_components'\n    };\n  }\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/',\n    server: {\n      baseDir: baseDir,\n      middleware: proxyMiddleware.concat(historyApiFallback),\n      routes: routes\n    },\n    browser: browser\n  });\n}\n```\n. Updating Yeoman fixed this for me.\nnpm install -g yo\n. Decided to send a pull request. Nothing better to do.\n. Huh. Not sure why it's failing now.\n. Looks like it's succeeding now. The world is a great place.\n. ",
    "akhileshmohan": "@clessg I ran the npm install for the api fallback...post that where do I put the rest of the code you mentioned? I'm new to the programming world and would need your help..\n. ",
    "rajington": "forgot to change both... long day.\n. ",
    "vuhrmeister": "I didn't get this.\nWe use sass, right. Therefore I import everything I need in my custom sass file, in this case main.scss which is then compiled to main.css and gets injected into my html - right?\nThen the already injected foundation.css would be just duplicate.\nAt least for me it works fine by just removing the foundation.css from index.html.\n. ok, I see. Didn't realized that wiredep actually includes it in the source file. So I thought it must have been there already.\n. What's about the exclude option? That works for me. You did this already with bootstrap-sass-official.\nAnyway. I know what wiredep is for. But does it really makes sense in that case? Right now it only includes bootstrap or foundation. As long as it's only that single component to be included we could do this manually.\nI always see such things critical since you don't really have control over it what will be included. \nWell, if most of the components should be included except for a few then I think using it is valid.\n. Great. I think it's easy. I just changed the version for angular and angular-* to 1.3.x and it still works (for what I can see).\n. +1\nWhen I read first about this approach it sounded a bit strange to me and I wasn't sure wheter to follow this structure or rather keep traditional one.\nBut in my company we also have such grouping, means keeping all files belonging to one component at the same place.\nThe big advantage is that you can build real modular projects where you can just decide to remove one component without having to search for all the places where it could be.\n. ",
    "niallobrien": "Yeah, Ruby-Sass isn't required to compile Foundation or Bootstrap, so I think it'd be a nice change (and faster). :)\n. Awesome! I'm interested in forking this to remove Angular and have an all-in-one-webapp type generator. Should be easy, right?\n. Cheers, that makes more sense now, thanks.\n. Thanks for clarifying, I wasn't sure what was going on. :)\n. Would love to see this. :)\n. For those that have converted their project to follow the Angular team's recommendations, can you please describe what exactly I'd have to do?\nI just don't want to spend a day setting up my asset pipeline. Thanks in advance.\n. When which project is more mature?\n. This generator is already fantastic for front-end, so maybe we could create a backend generator that uses Yeoman's composability so that the backend generator can generate a resource & call gulp-angular to generate the corresponding front-end requirements.\n. ",
    "pierol": "Yes sorry i've tried with 0.4.0 and the problem is solved. Thank you \n. ",
    "snc": "You can have a look here on the same topic: https://github.com/yeoman/generator-webapp/pull/263\n. It looks like you are not using \"bootstrap-sass-official\": \"3.2.x\"? These paths are correct for 3.2.x (https://github.com/twbs/bootstrap-sass/blob/master/CHANGELOG.md#3200).\n. ",
    "elado": ":+1: \n. ",
    "iam4x": "@jsvini TIP: Add bower_components to your .gitignore your editor should not index theses files anymore.\n. @Swiip I agree with you, angularjs app are modern webapp with a lot of logic and I prefere a lot to seperate the logic of the backend in another project. And btw to have 2 separate git repo ;)\nI will push soon a project with like you said gulp-mean based on meanjs.org (with only express, mongodb...) to share my workflow!\n. +1 for gulp-ng-template\nI'm starting new project, I'll take some time this afternoon to look into it and drop a PR.\n. ",
    "jtrollia": "Hi, I get a 404 on all my bower files. If I move my bower directory in src and change the path consequently, it works but wiredep doesn't work anymore.\nAny idea ?\nEdit : fixed, it was a server configuration problem.\n. My configuration file defines /src as root folder. By doing so, I couldn't access the bower files. So I put my bower files in src, then changed all the paths. I can't use wiredep but whatever.\n. :thumbsup:\n. ",
    "marani": "jQuery plugins like perfect-scrollbar actually has some css dependencies, and I did successfully use wiredep to wire up third party css. I think there will be more cases like these (jQuery plugins & some older libraries which happen to not use sass or less), so I think keeping css injection wouldn't be a bad idea.\nBtw, great work so far! I am doing quite a big project based on this generator. Keep it up!\n. Personally I found the main trouble is in wiredep, it assumes many things we don't expect, and the vendor's bower.json files aren't always complete.\nTake Angular UI for example, if we just want a subset of the directives, wiredep will make it difficult.\nAnother time, when I commented out a vendor script, put it out of the build block (even out of html tag), then I forgot about it (as it should be just a comment, and because I was trying with other equivalent libs). \nFew days later, I see the script is missing, I check with my bower.json, the library is clearly included, but wiredep doesn't want inject it back for me. Then I realize the script inside that comment block I made earlier is actually preventing wiredep from injecting it 'again' to the build block, remove that comment, things work fine. Now that might be a feature, but it's quite unexpected. \nIf we just include manually what we want, it would be more flexible, so I actually removed wiredep after scaffolding the project. \n. Overall, wiredep doesn't seem to affect much on other parts of build system, as what I did is just remove wiredep task & remove it from other tasks that depend on it, then things worked just fine. I did it quite recently, which means even when I changed a lot of everything else, then remove wiredep, nothing broken. \nIf people are ok with wiredep then that's totally fine, I wouldn't complain. I would just silently remove wiredep after scaffolding, because that's not too difficult. haha..\nAdding a generator option might make people who are unfamiliar with wiredep rather confused. just make the decision before the user knows it is good or bad for them (the Apple's way :D).\nSo actually for now I think keeping wiredep there is a better choice. Just if one day in the future there are more people complaining about wiredep, removing it at that time is not too late, and I could help you on that if needed.\n. It looks like gulp serve stopped before you saw the errors in console for some reason, you might see similar error in all opening tabs from closed gulp serve sessions. I just downloaded latest version and tried, it worked fine. Is there any error in your terminal when gulp serve terminated?\n. Just found out, it's because the my commit on proxyMiddleware didn't have .map support, which seems to be a new feature, thus the proxyMiddleware is sending the *.css.map requests to your real backend everytime the console is opened (triggering css source .map file request). \nWe can solve this without disabling the middleware by changing \n(/\\.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url))\ninto \n(/\\.(html|css|map|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url))\naround line 18 in gulp/server.js (note the additional map file type)\n. Actually... there are still some extra problem with the scss map, it is pointing to some strange directory when I try to open the scss files in browser. I am looking into it now.\n. After searching for a while, I realize the error when opening mapped scss files in chrome inspector is more related to the gulp-ruby-sass plugins, which has been discussed at gulp-ruby-sass 17, 49, and pull requests 65 then 106 (not yet merged). \n. It's one of the yo options I think. For me I chose rubySass.\n. What does your error look like?\nHere are the extra steps I did to be able to open at least the main.scss in browser (that's for rubySass, not sure for node sass):\nadd scss & map to proxyMiddleware filter (or no need if you just disable the proxyMiddleware)\n(/\\.(html|css|scss|map|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url))\nadd sourcemapPath config to rubySass:\n.pipe($.rubySass({\n      style: 'expanded',\n      sourcemap: true,\n      sourcemapPath: '/styles'\n    }))\n. So with proxyMiddleware enabled, the error earlier comes back, and the new error on loading scss file is as above? \n. Ok which version of browser-sync are you using? I will generate a new app with same config as you and look into it.\n. Awesome I am able to reproduce the error now, so first thing I notice node sass doesn't seem to have mapping features by default, so the map & scss file solution I mention above doesn't relate to getaddrinfo ENOTFOUND issue with your settings.\nFor the time being, just disable it as you are doing, and I will try to make proxyMiddleware work with these settings shortly.\nEDIT: proxyMiddleware is required whenever you have a backend, it's quite important after all, but only when there is scripting backend server to point to, see my comment below...\n. To see the problem, log the requests as below\nif (/\\.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url)) {\n    console.log('(static)', req.url);\n    next();\n  } else {\n    console.log('(dynamic)', req.url);\n    proxy.web(req, res);\n  }\nSo the problem is clearly proxyMiddleware interpreting / as dynamic (everytime file saved, or opening new tab), the problem is that you don't have any backend yet (I guess). \nproxyMiddleware should only be used when there is a backend scripting server to be proxied to, and when we implement the route pattern in backend, proxyMiddleware should have the equivalent of the route pattern in its filter, so it can forward the requests properly. \nFor example when I use a node server, the setting should be ok as any request pattern like /* will be served by a dynamic endpoint that is serving the index file as defined in my node route pattern.\nSo if you don't have any backend yet, just disable the proxyMiddleware, if you have a backend, make the proxyMiddleware filter looks the same as the real backend route pattern. \nconnect-modrewrite is a special case, there is no backend but it can rewrite url like a real backend, which confuses the default proxyMiddleware. Now the problem with connect-modrewrite can be solved by swapping the position of the connect-modrewrite with proxyMiddleware, so that connect-modrewrite got executed first and things work perfectly. (EDIT: actually not, see below)\nmiddleware: [\n        modRewrite([\n          '!\\\\.\\\\w+$ /index.html [L]'\n        ]),\n        proxyMiddleware\n      ]\nEDIT\nSwapping modRewrite with proxyMiddleware in the middleware array raised another problem (reloaded css request will be served as index.html), it is essentially equal to using modRewrite alone, and it has the same issue. It seems like modRewrite middleware lets through .css but not .css?rel=\\w+ of the reloaded css.\nSo I just find a better solution for using modRewrite without the above side effect by wrapping modRewrite middleware inside proxyMiddleware like this (the regex filter was designed to handle this reloaded case):\nfunction proxyMiddleware(req, res, next) {\n  if (/\\.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url)) {\n    next();\n  } else {\n    modRewrite(['!\\\\.\\\\w+$ /index.html [L]'])(req, res, next);\n    // proxy.web(req, res);\n  }\n}\nand use proxyMiddleware as the only middleware: \nmiddleware: [\n        proxyMiddleware\n      ]\nAfter all feel free to change proxyMiddleware's pattern as it is supposed to be changed frequently according to your app's routing requirement.\n. Perhaps we should separate this thread, there are 3 different issues discussed here:\n1. For the OP's problem & #53, it seems like a lack of support for map & scss or even less file in proxyMiddleware, might be solved like this. This is related to 3.\n2. For this and this: it is related to using html5Mode, <base> tag setting and connect-modrewrite to make /* point to index.html kind of pattern, solved here.\n3. For the scss mapping directory problem I accidentally found here , it's an upstream problem from gulp-ruby-sass or ruby-sass as shown above. \nAfter all if you are not using backend, commenting out proxyMiddleware will solve most of the problem, otherwise try to make proxy filters equivalent with your backend route patterns.\n. This issue can be addressed without disabling proxyMiddleware, see this comment, that's map file problem.\n. Please provide some information:\n- Generator version you are using.\n- Error in the gulp console if any.\n- Are using this with html5mode ?\n- Or are you using the middleware proxy with a backend? What is your backend route pattern?\n. I guess what you want to do is:\nvar proxy = httpProxy.createProxyServer({\n  target: 'http://ws-strob.rhcloud.com:8003/mini-account/'\n});\nor if this doesn't work, try different syntax:\nvar proxy = httpProxy.createProxyServer('/mini-account', {\n  target: 'http://ws-strob.rhcloud.com:8003'\n});\nand send your request to /mini-account/version\n. Great! Let's watch their changes from here. \nAlso, I've checked the latest pull request they made to address the problem, doesn't seem to generalize well, and didn't solve it for our setup.\nSo if anyone wants to see sourcemap running with ruby-sass, here's my attempt:\nStep 0: yo gulp-angular with ruby-sass.\nStep 1: check if gulp-ruby-sass 0.7.1 installed, then replace rewriteSourcemapPaths inside node_modules/gulp-ruby-sass/index.js with this:\n```\nfunction rewriteSourcemapPaths (compileDir, smPre, cb) {\n    glob(path.join(compileDir, '*/.map'), function (err, files) {\n        if (err) {\n            cb(err);\n            return;\n        }\n        var cwd = process.cwd();\n        var copiedScssDir = path.join(compileDir, '/..') + ''; \n        eachAsync(files, function (file, i, next) {\n            fs.readFile(file, function (err, data) {\n                if (err) {\n                    next(err);\n                    return;\n                }\n            var sourceMap = JSON.parse(data);\n            var absoluteBaseScss = path.join(\n                copiedScssDir, \n                path.dirname(file).replace(compileDir, ''));\n            //console.log('current css', sourceMap.file);\n            //console.log('absolute base', absoluteBaseScss);\n\n            sourceMap.sources = sourceMap.sources.map(function (source) {\n                source = path.join(path.dirname(file), source) + '';\n                if (source.indexOf(copiedScssDir) === 0) {\n                    //console.log(source);\n                    //console.log(path.relative(absoluteBaseScss, source));\n                    return slash(path.relative(absoluteBaseScss, source));\n                } \n                else {\n                    source = source.replace(cwd, '').replace(/^\\//g, '');\n                    //console.log(source);\n                    //console.log(path.relative(path.join(smPre, path.dirname(file).replace(compileDir, '')), source));\n                    return slash(path.relative(path.join(smPre, path.dirname(file).replace(compileDir, '')), source));\n                }\n            });\n\n            fs.writeFile(file, JSON.stringify(sourceMap, null, '  '), next);\n        });\n    }, cb);\n});\n\n}\n```\nStep 2: change rubySass config inside gulp/build.js under styles task:\n.pipe($.rubySass({\n      style: 'expanded', // <--- Change this to 'compact' to avoid problems from gulp-autoprefix, see comment below\n      sourcemap: true,\n      sourcemapPath: 'src' /*something that, when joined with the copied sass files, can recover the path from cwd to source scss file, i.e. 'src' + 'app/main/main.scss' -> 'src/app/main/main.scss' */\n    }))\nNow we should be able to open source files in browser (but the mapped file & line is sometimes wrong I don't know why...)\n. Alright I figured out why the line mappings were wrong. It's due to the style expanded option in gulp-ruby-sas which doesn't play well with gulp-autoprefix down the chain. So just change expanded into compact & line mappings will be accurate.\n.pipe($.rubySass({\n      style: 'compact',\n      sourcemap: true,\n      sourcemapPath: 'src' //something that, when joined with the copied sass files, can recover the path from cwd to source scss file, i.e. 'src' + 'app/main/main.scss' -> 'src/app/main/main.scss' \n    }))\nThank to this article\nhttp://fettblog.eu/blog/2014/04/10/gulp-sass-autoprefixer-sourcemaps/\n. How about using\n- index.js instead of app.js or main.js, or <%= appname %>\n- index.scss / index.css instead app.css or main.css..\nFor example bootstrap uses an index.scss, because as project grows, index.scss is just the place to include other pieces of style. Almost the same for index.js, where we include other module, config providers and have the angular run block. That sounds consistent with what index.* file supposed to do.\nThe other day I named my app testGulpAngular, then I see it as test...js inside src folder, thought that was a test, but actually that was the main js file named testGulpAngular.js, and the name was quite long as well..\n. It won't if proxy middleware is on, but proxy middleware was turned off by default, so it's ok. \nWhen proxy middleware is used, this will be interpreted as a dynamic request, but people should only use proxy middleware when they have a server behind, so it might be ok.. but still depends on server routing. \nSo I am thinking we should just have some simple example branches, or separated repos.. showing how to integrate with different backends, says Laravel, Express, Django, Rails... then keep a list in readme.md, then people can contribute their own example to the list, that would be cool.\n. I planned to do a Laravel example because it's one of my current projects. Deadlines incoming though. I will be back in a few weeks.\n. Seems true, these 2 files' @icon-font-path should not be different in the numbers of ../:\n- __bootstrap-vendor.less\n- __bootstrap-vendor.scss\n. Tried to solve with #161, should I add something to assert, maybe remove -g protractor -i from npm test in package.json? All tests passed without that exclusion now.\n. So you mean running\n./node_modules/mocha/bin/_mocha test-gulp-task-inception.mocha.js\nworks without any change ?\nOn my machine protractor tests for tempGulpAngular fail, on master branch. Because the beforeEach seems to be clearing the temp directory before each it block, so it should fail, or am I missing something ?\n. The --advanced sounds great! I also think of a --server to ask about connecting with a backend if they are generating app with a working backend, but that might be too much.\nThis makes me think of a meta question at the beginning, like What do you want to config? that shows checkboxes of all questions can be asked & its default answer value, with default questions checked, or groups of questions (like js preprocessor, style preprocessor, html template, modules...).\n. @Swiip @zckrs\n. Cool, so I will perform further changes, including all the tests, hopefully finish in 2 more days. \nSo to see what it will look like, just take a look at mri/app-path on my fork\n. Code Walkthrough\nMajor generator script changes\n\nformat.js: \n[refactor] Moved all copy source-dest pairs definition into write.js.\nAdded a appToBower storing relative path from app folder to bower_components folder.\nwrite.js: \n[refactor] Make it the place to define all source-dest pairs, finally perform a copy/template.\nAdded appPath to all copy pairs.\nprompts.json: \nturn json -> js to allow when, validate, filter functions to be defined.\nAdded prompt for appPath.\n\nTemplates changes\n\ngulp files: change all 'src``toconfig.path.applocated atgulp/config/paths.js`\nThe rest: \n'src/... -> '<%= props.appPath %>\nrelative path to bower_components, use appToBower.\n\nTests changes\n\nAdded files generated test specifically for appPath. \nOther tests with src left unchanged (this works now but should be refactored later).\nAdded unit tests for validator & filter functions inside prompts in test/test-validators-filters.js.\n. On my branch all test passed & it's good for review now, if you want to test can clone the branch. You can play with the app path as the first question.\n\nI will do a rebase to 0.7.1 then squash commits (should I ?) then create a new PR for this. So if anyone has any suggestion please comment.\nThe outline with [refactor] above are improvements that might be a trouble if someone is working on an outdated branch. It introduced some major generator code changes. I can possibly take that out & rework the PR a little bit but that might take time (like 1 day or 2).\nOr even if you just want to take this as reference to build this feature from scratch it's ok too :D\n@zckrs @Swiip \n. Merge is done at mri/app-path-squashed sorry I had to squash before rebase because they diverged quite a lot along the commits of my PR. \nI have problem running the mocha tests for all e2e gulp protractor (e2e), I am working on a slow machine, this could probably be the cause, but I'm still searching for a solution.\nAlso running gulp protractor alone works fine on the actual generated apps (not the one generated by test), gulp test (unit tests) works fine & the rest of mocha tests run fine. gulp serve, build, watch are fine.\n. Oh wow... It's because the tempAngular is in foundation & the e2e test is trying to search for a bootstrap .jumbotron class #131 \n. Please close this. Thank you.\n. :+1: cool stuff!\nThere's this middleman guy around me keep bragging about the auto include feature in his rails+ember+middleman app & I haven't had time to look around for similar thing in node... now it's revenge time boys. \nI would also like to be able to comment out files that are automatically injected. For example, I have two possible solutions for a problem that could be implemented in 2 distinct directives with different names in different places. I'd like to write one, then test, then in some way comment it out, write the second one then compare the two.\nI am thinking we should have some convention to exclude script files, like files ending with.exclude.js or just .x.js, or ._.js will also be excluded from injection, it is for easier switching between implementations & test stuffs by just changing file name. What do you think?\n. You are right, git should be the right way for experimenting features.\nI actually did try it too, but just in our case, there is this gulp watch & git checkout clash due to this gaze error, it keeps breaking gulp serve session when I do git checkout (almost everytime). Hopefully will be patched soon.\nCommenting with /* */ won't be easy if there is other /* */ comment inside, using // comments is the only solution, can be easily done with most editor, but just a little bit weird for commenting the whole file.\nAfter all, it is only a matter of a single line in gulp.src, so not a problem, if someone wants to have after the app is generated, they can add it easily. There's trade off if we add it by default as well (the extra exclude pattern might clash with user's actual file name), so people might not like it as much as I expect.\nSo and I think it's good to merge too. This actually will force user to maintain a clean directory, less junk file, which is good. Just leave my suggestion for consideration in the future.\n. @cttobin Could you try changing the directive's dependency injection syntax into not minify-safe version by removing the array brackets from function like this & build again:\n.directive('button', function () {\n. Sorry, I'm reworking this based on newer version & try to make less random refactoring, too many conflicts now ...\nSo please close this as well, thanks. \n. Oops I didn't see the button sorry.\n. At first it confused me a little bit because __none.html also uses a jumbotron so I thought it's ok too, but it's quite weird looking back now. A class without css will look like a foundation class, but it's not... Also it might clash with foundation's class if they implement one in the future.\nSome other ways:\n1. Add a common class for all jumbotron element across all css framework choice: \n   - Bad: same reason as above. But can be fixed by adding some dummy css for the class to tell user that it's not a framework's class & choosing a special name for it.\n   - Good: This solution is healthier for e2e test.\n2. Remove jumbotron from foundation html, then turn main.po.js into a template & switch selector between frameworks. \n   - Bad: A little bit more complicated e2e test. We have to kind of hard code the select path for every css framework, which will need rewrite if we change html structure.\n   - Good: No extra random css.\nWhich way should we go ? (I'm more toward 1, might make things easy even if we change the sample html's structure).\n. @Swiip how about this:\n```\nfunction runProtractor(done) {\n  var testFiles = [\n    'test/e2e/*/.js'\n  ];\ngulp.src(testFiles)\n    .pipe($.protractor.protractor({\n      configFile: 'protractor.conf.js',\n    }))\n    .on('error', function (err) {\n      // Make sure failed tests cause gulp to exit non-zero\n      throw err;\n    })\n    .on('end', function () {\n      // Close browser sync server\n      browserSync.exit();\n      done();\n    });\n}\ngulp.task('protractor', ['serve:e2e', 'webdriver-update'], runProtractor);\ngulp.task('protractor:src', ['serve:e2e', 'webdriver-update', runProtractor);\ngulp.task('protractor:dist', ['serve:e2e-dist', 'webdriver-update'], runProtractor);\n``\n. So I used the solution above to remove gulp sync, plus making web driver update running in parallel with watch & build so it's more efficient than what we have now.\nAlsomain.po.jswas turned into a template & I removed thatjumbotron` from foundation as well.\nAny new comment on this one? \nIf good can merge & I will continue working on app path.\n. Squashed.\n. I think you can disable the effect of injector:css:preprocessor by just removing these lines \n// injector\n// endinjector\nat the end of index.less then you can import any style modules manually without being rewritten, but  just remember that less files won't be automatically imported anymore.\n. Sure I have just read it :D\nBtw, should the name be fix-... or fix/... or <contributor name>/fix-...?\n. Yup regenerating is not long, but building is long. Currently, it is also rebuilding the generated app for each it block (building once should be enough). \n. Testing dependencies sounds good, but do we aim to test that in gulp-task-inception in the first place? I'm not sure but it's more like a place to assert angular e2e tests without running the generator manually.\nI like the idea of testing dependency. I also think making sure the tasks running in the right sequence is crucial. But running the real task to prove that might be redundant, and also couldn't cover many cases.\n. So there are 2 things to test here: task content logic & task's dependencies topo order. We can separate these 2 types of test, so that we can cover more cases in less time:\n- To test the task dependencies, we should just mock the gulp tasks with timeout function for a minor duration & then check the finish order. (I'm thinking we can make a new test file to assert every task dependencies).\n- To test task content, we can concatenate tasks. Just by running the test cases in sequence like gulp build, gulp protractor-only:src, gulp protractor-only:dist, we can already cover every function inside any task. No need to run the integrated task for this.\nUnless we want to test the task as a whole, but it's slow (re-run build & compile 2 or 3 times), and isn't a reliable way to test the running order, because there is not enough case to detect the bug, that's why we left the bug that lets protractor runner starts before the build finished until now.\n. Try .pipe($.rubySass({ \"sourcemap=none\": true })). Source\ngulp-ruby-sass is releasing v1.0 in alpha channel, perhaps some bugs are fixed there, I haven't tried yet.\n. I'm not really sure about that though, could you post your .yo-rc.json & generator version?\n. Thanks, I'm glad I could help :) I am trying to reproduce this one so will take a while to install.\n. Hmm I couldn't reproduce the later 404 error. My yo rc is same as yours and generator is from master branch, which is equal to v0.7.3.\n. Oh it should be like this\n.pipe($.rubySass({style: 'expanded', 'sourcemap=none': true}))\nMy bad =)\n. You're welcome\n. We could run ./node_modules/mocha/bin/_mocha ./test/test-gulp-task-inception.mocha.js to verify e2e tests as well, all cases with ES6 have this problem, TypeScript also fails.\n```\n  1) gulp-angular generator with other promptCase: [angular 1.3.x, ngAnimate, ngCookies, ngTouch, ngSanitize, ZeptoJS 1.1.x, $http, Bootstrap, LESS, ES6 with 6to5] should pass gulp protractor:\n     AssertionError: expected promise to be fulfilled but it was rejected with 'Gulp returned with error code 8'\n2) gulp-angular generator with other promptCase: [angular 1.3.x, ngAnimate, ngCookies, ngTouch, ngSanitize, ZeptoJS 1.1.x, $http, Bootstrap, LESS, ES6 with 6to5] should pass gulp protractor:dist:\n     AssertionError: expected promise to be fulfilled but it was rejected with 'Gulp returned with error code 8'\n3) gulp-angular generator with other promptCase: [angular 1.3.x, ngAnimate, ngCookies, ngTouch, ngSanitize, $http, ngMaterial, Stylus, TypeScript] should pass gulp protractor:dist:\n     AssertionError: expected promise to be fulfilled but it was rejected with 'Gulp returned with error code 8'\n```\n. #206 solved this. We have to use explicit injection \n```\nclass MainCtrl {\n  constructor ($scope) {\n    $scope.awesomeThings = <%= technologies %>;\n    $scope.awesomeThings.forEach(function(awesomeThing) {\n      awesomeThing.rank = Math.random();\n    });\n  }\n}\nMainCtrl.$inject = ['$scope'];\nexport default MainCtrl;\n```\nLet's keep this open to track ngAnnotate's solution for the issue.\n. I've got a very strange error with gulp test on generated project with Traceur: TypeError: Attempted to assign to readonly property. \n```\nINFO [karma]: Karma v0.12.28 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nINFO [PhantomJS 1.9.8 (Linux)]: Connected on socket -uIdf2Xu5QXyITLWF5iD with id 99635568\nPhantomJS 1.9.8 (Linux) ERROR\n  TypeError: Attempted to assign to readonly property.\n  at /home/marani/gga/ft-app-path/test/t2/bower_components/traceur-runtime/traceur-runtime.js:908\n/home/marani/gga/ft-app-path/test/t2/gulp/unit-tests.js:30\n      throw err;\n            ^\nError in plugin 'gulp-karma'\nkarma exited with code 1\n    at done (/home/marani/gga/ft-app-path/generator-gulp-angular/test/deps/node_modules/gulp-karma/index.js:56:30)\n    at ChildProcess. (/home/marani/gga/ft-app-path/generator-gulp-angular/test/deps/node_modules/gulp-karma/index.js:82:7)\n    at ChildProcess.emit (events.js:98:17)\n    at Process.ChildProcess._handle.onexit (child_process.js:810:12)\nmarani@lorien:~/gga/ft-app-path/test/t2$ \n```\nNot sure if error is a normal test fails or just traceur-runtime's error or something else...\n. Seems like it's a traceur-rumtime problem, I have reported the issue & they are working on it.\n. See this comment from  #186 to solve this temporarily by disabling sourcemap. Should have kept the issue opened. \nWe are still waiting for gulp-ruby-sass to solve its issues with 1.0, but it's still in alpha\nAnyway let's keep this open. I think I will do a PR to integrate gulp-ruby-sass 1.0 alpha in the mean time.\n. Another solution would be to use node-sass\n. I will address path configurations in #177. \nAbout the user interface, we have 3 solutions:\n1. 4 args: --appPath=... --distPath=... --e2ePath=... --tmpPath=...\n2. a single arg --ask-path or --config-path or even --advanced which will ask 4 extra questions about the above.\n3. 2 args --appPath=... & --distPath=... then 2 questions about e2e & tmp in --advanced.\nNow my thought is: \n- 3 is the best but will take time to refactor the code, because question & args are quite different, sharing path logic between the two is really troublesome. \n- 2 is friendly to new user because the question will reveal more information than 1, but might be bad if we want to config just appPath for example.\n- 1 is equally friendly because it is how path configs are done in other generators. Good documentation will help. However, too many yo args will be hard to type (still, they are optional).\nl will implement 1 then refactor to 3 after 1 is shipped.\nSettings will be put into .yo-rc.json because it should be the single source of truth for global config like paths, this is the solution chosen by generator-backbone. generator-angular stored it in bower.json which is a bad idea & they are going to change it soon.\n.  :+1: \n. I love this idea :+1:\n. Should I do it now or another PR? It is actually blocking me from implementing template on gitignore. Also I would like to remove dotfiles in files.json, merge them into either staticFiles or templates, then rename the file to _.gitignore. Something like this:\n```\n{\n  \"staticFiles\": [\n    \".bowerrc\",\n    \".editorconfig\",\n    \".jshintrc\",\n\"gulpfile.js\",\n\"gulp/e2e-tests.js\",\n\"gulp/proxy.js\",\n\"src/favicon.ico\",\n\"src/404.html\",\n\"src/assets/images/yeoman.png\",\n\"karma.conf.js\",\n\"protractor.conf.js\",\n\"e2e/main.spec.js\",\n\n],\n  \"templates\": [\n    \".gitignore\",\n\"package.json\",\n\"bower.json\",\n\"e2e/main.po.js\",\n\"gulp/build.js\",\n\"gulp/consolidate.js\",\n\"gulp/watch.js\",\n\"gulp/wiredep.js\",\n\"gulp/server.js\",\n\"gulp/unit-tests.js\",\n\"src/index.html\",\n\"src/app/main/main.controller.spec.js\"\n\n]\n}\n``\n. About the--default` you are right I forgot that, fixing now.\nFor the problem of where to store paths. There are actually 2 modules that need the paths setting. The first are gulpfiles. The second are future sub-generators. So the reasoning is:\nFor .yo-rc.json\n- Good: Reusable by sub generators. The situation will be clearer once we can write sub generators from project directory in the future when this yeoman feature comes out.  Also it makes paths setting persists if we re-use .yo-rc.json.\n- Bad: gulp files needs to read from there, which is quite strange as you said & that's true.\nFor storing in gulpfile.js\n- Good: gulp files depend on gulpfiles.js only -> more predictable & it feels easier to change.\n- Bad: Sub generators have to read paths data from gulpfile.js, which is equally strange.\nStoring in both place makes duplication, and it's the worst so I wouldn't mention here.\n.yo-rc.json at first isn't an intuitive place to edit things, but people are actually doing that in generator-backbone.\nAlso compare in terms of scope, yo-rc.json should have a higher scope than gulp files. So that's why I chose yo-rc.json instead of some gulp file. \nAnother solution I have thought about is to make gulpfile.js read from yo-rc.json then all sub tasks gulp file read from gulpfile.js. If you agree I will refactor into something like that.\n. Sure I'm working on it.\n. - Added default to options definition.\n- Remove test-write-files & take away dotfiles from files.json.\n- Protractor tests passed. \nOne last thing is the exception of vendor style in write.js, it's not really nice. I'm thinking of a way to make it look better, any suggestion?\n. Ok now it's nice.\nNow I am refactoring the test one more time for the better. I am making optionCase & promptCase cleaner & more readable by putting gulpAngular.mockPrompt into beforeEach rather than on top of it blocks like what it is now, then move promptCase definition into before blocks.\n```\n    helpers.testDirectory(path.join(__dirname, folderName), function (err) {\n      if (err) {\n        done(err);\n      }\n  gulpAngular = helpers.createGenerator(\n    'gulp-angular:app',\n    [\n      '../../app',\n    ],\n    false,\n    optionCase\n  );\n  gulpAngular.mockPrompt(promptCase);\n\n  gulpAngular.on('run', outputInTest.mute);\n  gulpAngular.on('end', outputInTest.unmute);\n\n  done();\n});\n\n```\n```\n    before(function() { \n      optionCase = _.assign(JSON.parse(JSON.stringify(mockOptions.defaults)), skipOptions);\n      promptCase = JSON.parse(JSON.stringify(mockPrompts.defaults));\n    });\nit('should generate the expected files and their content', function (done) {\n  gulpAngular.run({}, function () {\n\n```\n. - 2 main tests files now look cleaner.\n- If input path is absolute, generator will exit with error message.\n- normalizePath now should work on Windows. \nUsed this SO answer but improved with path.sep + path.sep for Windows otherwise it won't work.\n. Now back to the gulpfile / .yo-rc.json problem, below is the draft of the solution that I mentioned above - making small gulp files refer to gulpfile.js then gulpfile.js refers to .yo-rc.json. \nThis way people can easily put the path definition to config.paths to replace .yo-rc.json if they don't want to use .yo-rc.json anymore.\nSee the diff Proposed\nBasically just wrap gulp.task definitions around a function (registerTasks) then export it so that gulpfile.js can pass a config argument in.\nAny comment? If you all agree with this I will merge then squash again.\n. gulp.config seems like a cleaner choice, the only thing is that it doesn't define dependencies explicitly. But that's fine as it's the only exception & we're not gonna unit test the gulp files anyway. It could clash with gulp api but seems like either keyword paths or config won't appear in gulp api anytime soon. So it's a good idea.\nI still think duplicating is weird, imagine once we have sub-generators, suppose we need to change a path, says, appPath, we have to go to both .yo-rc.json & gulpfile.js to change. There should be a single source of truth, either gulpfile.js or .yo-rc.json.\nWell but to be really honest, I also think .yo-rc.json is Not a convenient place to change things. It should just be moved away after the app is generated. The file name itself is already ugly, a meaningless name with a dot. It's true that people don't expect to change anything there. Unless it's renamed to yofile.js, or yofile.json but that's not happening soon. \nHowever, .yo-rc.json is still a better place to interact with the sub generators, compared to gulpfile.js. The file structure in yo-rc.json is readable by the generators, in gulpfile.js it's not.\nOh well this is quite a tie. \n. So the ultimate aim is to make it clear to user, about what to do if they want to change paths after the app is generated.\nI think for now let's keep it in yo-rc.json:\nIt's clear enough when every gulp file refers to gulpfile.js to get config property.\nThen we make sure that gulpfile.js is clearly reading from .yo-rc.json. \nThis pluses good documenting, people will easily understand that they have to go to .yo-rc.json for path change.\nThen the goal is achieved.\nUnless there are complaints about this (I hope not :D), then we will change it later, minor changes anyway.\nSo now I will implement gulp.paths then hopefully it's good to merge.\n. I think I will search all popular generators & see where they store configurable path. That also affects where people expect to edit paths from.\n. According to the list\n| generator- | path config |\n| :-- | :-- |\n| angular | bower.json |\n| angular-fullstack | gruntfile.js |\n| jhipster | gulpfile.js |\n| gulp-webapp | n/a |\n| mobile | n/a |\n| wordpress | n/a |\n| webapp | gruntfile.js |\n| ionic | n/a |\n| gulp-angular | :tada: |\n| chrome-extension | gruntfile.js |\n| backbone | gruntfile.js |\n| ember | gruntfile.js |\n| jekyllrb | gruntfile.js |\n| polymer | gruntfile.js |\nAll of them also store in .yo-rc.json if there is path config. Alright so I'm gonna put settings in both places.. Can't reject the nature. Duplication for paths only is minor anyway...\n. Still need more tests on windows. Probably needs to use slash before passing the paths further down the process. I can't install any big npm package on windows, it always breaks in the middle for some weird race condition. Trying again now.\n. Now it's good. Do you want me to change the version of slash to ~ ? Do I need to squash again ? \n. Changed slash version to ~. Commits message might be helpful fo this large commit, so I wouldn't squash.\n. It's neat I like the new gulp file templates.\n. ```\nvar characters = [\n  { 'name': 'barney', 'age': 36 },\n  { 'name': 'fred',   'age': 40 }\n];\nvar deep = _.cloneDeep(characters);\ndeep[0] === characters[0];\n// \u2192 false\n```\nas in lodash docs.\n. If it works then is it good or is there any further problem? The proxyMiddleware is intended for interfacing with a backend. In this case, perhaps you could try this:\nAdd modRewrite into proxyMiddleware\nfunction proxyMiddleware(req, res, next) {\n  if (/\\.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url)) {\n    next();\n  } else {\n    modRewrite(['!\\\\.\\\\w+$ /index.html [L]'])(req, res, next);\n    // proxy.web(req, res);\n  }\n}\nand use proxyMiddleware as the only middleware:\nmiddleware: [\n        proxyMiddleware\n      ]\n. This is from the ft-app-path branch before the big refactor pr:\n.pipe($.replace('<%= computedPaths.appToBower %>/bower_components/bootstrap-sass-official/assets/fonts/bootstrap','../fonts'))<% } else if (props.ui.key === 'bootstrap' && props.cssPreprocessor.extension === 'less') { %>\n    .pipe($.replace('<%= computedPaths.appToBower %>/bower_components/bootstrap/fonts','../fonts'))<% } %>\nsource\nand on that branch it shows the home icon with gulp serve:dist. I will try this on master & confirm again soon.. \n. For generated project of current version ( <= 0.8.1), you probably need to do roughly the following:\n- find-replace everything with 'src/' in the gulp files in /gulp folder and change them to either '' or './'\n- do the same thing in index.html.\n- take care of relative paths when importing styles, also some places in gulp/build.js\nFor future versions, use yo gulp-angular --app-path='.'. See more in README. The path configuration feature is on master branch, hasn't been published to npm yet. You can try to install the generator from master & use the above path option.\nFor generated project of the future versions, these path configurations are centralized in gulpfile.js, we just need to change from there.\nBottom line, that's possible to do, but I think putting stuff in src folder to root is kind of messy.\n. Yup that's not possible yet, as mentioned above, it's on master but not yet on npm.\n. I don't really understand the bower_components problem part, is it because everything is in src ?\nHaving all our domain-specific code in src is just a way of structuring the app that has some benefits:\n- First it makes thing easier to find (most of the time will be spent on writing code for that folder). If we merge this with root then developers might have to search from more things (dot files, .tmp folder...) just to find useful source code.\n- That also makes quick file switching (ctrl/cmd + P in sublime) faster if you only open that src folder.\n. Ahh got it.\nDoing it manually wouldn't take much time. If the project is urgent I recommend taking the above steps & do it now :)\nI'm not really sure when new version will be released, probably very soon. @Swiip\n. You can also download from master branch then npm install then npm link & try it.\n. I am not really sure why you would add another shared component folder, or you just want to change the name from components -> lib?\nIf it is the case, how about making every static directory configurable (rename, multiple level), including: bower_components, app, components? \n. - component generator, perhaps this could be solved with composability - using generator-angular\n- Lazy loading, or entry-point based module bundling (integrating gulp-webpack/requirejs/angularAMD).\nWhat do you think about these features after 1.0 ? \n. It is discussed in #241, it's broken by some recent PR, will be addressed really soon.\nTo fix, If the app generated without any path configuration, you can change the code around line 160 of html task in gulp/build.js into ../bower_components....., ../fonts (each goes back 1 level), it will be fine.\n. try \n.pipe($.replace('../bower_components/bootstrap-sass-official/assets/fonts/bootstrap', '../fonts'))\nor it actually equals\n.pipe($.replace('bower_components/bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))\nIt's missing the bower_components as well.\n. Hmm it's strange that font file shouldn't be missing if the rest is already ok. I haven't been updated with the latest version for a while, I am installing it & try to reproduce.\n. So woff2 is missing in line 73 of build.js (fonts task). We can add it back:\n.pipe($.filter('**/*.{eot,svg,ttf,woff,woff2}'))\nThanks for the report, this will be fixed soon.\n. Well there is no error shown in my chrome console, but also no glyphicon shown in the app as well...\n. I edited both font & build task as above.\n. So the font is actually loaded. \nTracing down the problem for a while, I found out that the all the bootstrap/glyph styles for icon are wrong in css file.\nIf you inspect the element, add double quote to the icon value, example: \\e021 -> \"\\e021\" the icon will appear. For previous versions, the value is correct. I will look deeper into it & see why there is this problem.\nFor 404 error doing both the replacement in build.js solves it for me.\n. Okay got it, that's some bug from bootstrap-sass 3.3.2.\nSee the epic diff. \nThat's some unquote bug, update to 3.3.3 will solve the problem, by bower uninstall bootstrap-sass-official && bower install bootstrap-sass-official. \n. Actually due to semver, ~3.3.x is equal to >= 3.3.x && <3.4.0 so any app generated starting from 12 hours ago (which is the release of 3.3.3) will be 3.3.3 instead of 3.3.2 or 3.3.1, so probably no need a PR for second issue.\n. In this comment you mentioned that after the modification, there is only one font file missing. With that modification and adding woff2 to the fonts task, it will probably work.\n. For version >= 0.9, client should be defined in gulpfile.js. It seems like you use yo --app-path='client'. Please post your .yo-rc.json & generator version so I can try to reproduce.\n. You can use something like this\n```\n /jshint unused:false /\n'use strict';\nvar httpProxy = require('http-proxy');\nvar chalk = require('chalk');\nvar proxy = httpProxy.createProxyServer({});\nproxy.on('error', function(error, req, res) {\n  res.writeHead(500, {\n    'Content-Type': 'text/plain'\n  });\nconsole.error(chalk.red('[Proxy]'), error);\n});\n/\n * The proxy middleware is an Express middleware added to BrowserSync to\n * handle backend request and proxy them to your backend.\n /\nfunction proxyMiddleware(req, res, next) {\n  if (req.url.indexOf('/api/v1/') === 0) {\n    console.log('(api request)', req.url);\n    proxy.web(req, res, {target: 'http://localhost:3001'}); // change 3001 to your different port here\n  } else {\n    next();\n  }\n}\nmodule.exports = [proxyMiddleware];\n```\nthen you can use your $resource with /api/v1/endpoint\n. Sorry for the misleading README, actually 'most' but not all path configurations are stored in gulp.paths. To complete the path change after the app is generated, you will have to look into index.html to make paths in build comments similar to what is in gulp.paths, for example, build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js --> build:js({.tmp/serve,.tmp/partials,public}) scripts/app.js\nWe might need to do something make these build instruction in index.html depends on gulp.paths in some way. I think it's possible but can't find time to make a PR now.\n. True, I just lazily copied from the previous solution, but should be fixed into something like this, updating now.\n. I wanted to remove trailing slashes as well, for example '../../' should be '../..' but path.normalize differentiates the two & leaves them the same as they are. \nFor prefix slash I wanted to force all path to be relative so I tried to remove prefix slash. So the above was one line solution that removes all kind of slashes & also normalizes path. \nSurprisingly this fails on windows, then I will switch to path.normalize & remove path.sep if there is path.sep as suffix, also use path.sep on test.. I will test this on Windows as well.\n. Btw do you think we should support absolute path config? \nIt will be powerful that way but it could be troublesome to implement & maintain. \nFor example this.destinationPath can mess up with the absolute path, also the relative path between folders can be painful. \nSo I 'convert' absolute path to relative, but that's not right, I should do a validation instead.\nFixing now. Thanks!\n. I think dotfiles is gone so this can be removed.\n. ",
    "dancancro": "Hi Matthieu,\nSorry, I didn't mean any offense.  Good job on your project.  I'm new and couldn't have done what you did.\nAnyway,  generator-angular-fullstack and meanjs.org are both interested in switching to gulp.\nI'm sure they would both be happy to have your help.  I don't put a lot of stock in github stars but if those are important to you, the fullstack one has like 1700 and meanjs.org has around 800.\n. @zckrs Do you want to add the new version to this?\n. ",
    "gaozhitw": "I using fast mode, it default install 3.1.x.\nI would manual update to 3.2.x,\nthank you.\n. ",
    "tobiaswright": "No worries. Thank you for the generator.\n. ",
    "osdevisnot": ":+1: for Coffee Support.\n. Got it. I will change the code accordingly. Small questions though, compile.js mentions and adds modernize to resolutions as well, which I guess is optional for newly scaffolded app and bower install emits a warning for that. Is there a reason why it was added to resolutions? I'm going to remove it from resolutions unless someone raises concern over it.\n. I am using latest code in repo - Installed generator as:\nsudo npm install -g Swiip/generator-gulp-angular\nCurrent .yo-rc.json looks like - https://gist.github.com/abhishekisnot/dd9b9c4c39ecb7d194c5\nThe file does exists when build completes successfully. But it does not when build fails with above error.\nOne more thing I noticed today. Every attempt to build after a failure completes successfully and every attempt to build after a successful build fails with above message.\nIt might be just something wrong with my setup.\n. :+1:\nJust a thought, I guess <%= appname %>.css will be more consistent naming since we name main js file as <%= appname %>.js. Otherwise, renaming <%= appname %>.js to app.js would also make  main js and css files consistent.\n. ",
    "AlejandroDelRioAlbrechet": "I have just tried this stuff. \nTop solution.\nI have question when are you going to add coffeescript support approximately? \n. ",
    "pbellon": ":+1: nice !\n. ",
    "zakdances": "I've got both CoffeeScript and Jade working in my fork. Would pull requests be considered for both of these features?\n. @Swiip My fork is local right now. I'll make a github repo for it soon, but first:\n\nthere was a big refacto just merged\n\nFor gulp or generator-gulp-angular? Is this what you mean?\nSince I writing my comment yesterday, I ended up tinkering with generator-gulp-angular even more. Here's a quick summary of my changes:\n- Updated dependencies in package.json\n- fixed calls to the depreciated browser-sync API in gulp/server.js.\n  - I removed all references to the browser-sync \"watch\" command. (generator-gulp-angular currently uses both gulp.watch and browser-sync watch redundantly)\n  - I instead appended the .pipe(reload({stream:true})) command to tasks in build.js, as is recommended by the browser-sync docs.\n- Added Jade and Coffeescript support, both of which also allow a mix of file types.\n- replaced html2js with gulp-angular-templatecache\n- fixed typos\nNext, I'm gonna make sure that the Jade and Coffeescript options output the appropriate file types for the gulpfiles and templates.\nHowever, I'm not sure it's a good idea to consider a pull request for any of this right now. Both gulp v.4.0 and gulp-ruby-sass v.1.0 are close to release and it might be a good idea to wait (gulp-ruby-sass v.0.7.1 is VERY buggy right now too). What do you think? Please advise.\n. @zckrs No tests yet...I'm looking through the existing mocha tests to see how to proceed with unit testing. Any tips?\n. I've implemented gulp-angular-templatecache in my fork of generator-gulp-angular and it works well.\nBasically I've replaced all references to html2js with code such as:\ngulp.task('partials', function () {\n  return gulp.src('src/{app,components}/**/*.html')\n    .pipe($.minifyHtml({\n      empty: true,\n      spare: true,\n      quotes: true\n    }))\n    .pipe($.angularTemplatecache('templates.js', {module: 'MyModule'}))\n    .on('error', handleError)\n    .pipe(gulp.dest('.tmp/components/templates'))\n    .pipe($.size());\n});\nMy next step is to replace the hardcoded \"components/templates/\" path and \"templates.js\" filename with values pulled from index.html. Would a pull request be considered for this?\n. @zckrs Looks cool! Sorry for the delay with my PR...I've added an option for indentation preferences so I'm just making sure that works at the moment. My implementation of angularTemplatecache is similar to yours, but I'm only creating the template cache directory in .tmp instead of src so it keeps src clean. \n. @zckrs nice work. I also looked in to allowing user customization of that with useref, but useref doesn't allow custom tasks.\n. @zckrs I'm having some trouble with new the version of yeoman-generator (v0.18.0). It's not copying or templating files from files.json (using the new this.fs.copy() and this.fs.copyTpl() functions) so I'm gonna need some time to figure out what's going wrong.\n. @zckrs yeah, I investigated only using gulp streams instead of .tmp but browsersync wants a physical directory to serve files from. :(\n. I like the material design inclusion. Interesting choice.\n. Look at your generated gulp/build.js file. The directory structure is determined there. There are separate tasks for styles, scripts, fonts etc. and their src and dest paths are set with gulp.src() and gulp.dest() respectively.\n. ",
    "wgorder": "Is there an ETA or any word on that fork?  I have need of this as well, and I don't want to re-invent the wheel.\n. Sweet thanks :)\n. optional - I don't use it most of the time\n. Mixing file types is quite common.  My pattern personally is to compile the coffee into javascript concat it with whatever .js files may also be present then uglify etc.  I usually build a lib.js which is anything I get from bower main and vendor directories (js or coffee), and I build an app.js which is all the coffee/js that I have written.\n. wiredep was already in my dev dependencies in package.json but I installed it again to be sure, but it did not make a difference.  I figured that was not the problem because I can run the application which would not work with out the dependencies being injected.  I am not sure what you mean by 'refresh' gulp.  Also I misspoke the build, protractor and wiredep tasks seem to work fine its just the gulp test that fails. \nHere is the contents of .yo-rc.json\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": \"restangular\",\n        \"version\": \"~1.4.0\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"~0.2.13\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": \"angular-bootstrap\",\n        \"version\": \"0.12.x\",\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\",\n        \"npm\": {\n          \"gulp-less\": \"~1.3.6\"\n        }\n      }\n    }\n  }\n}`\n. ok i did have this\n[gulp] CLI version 3.6.2\n[gulp] Local version 3.8.10\nnow it is upgraded\n[07:13:00] CLI version 3.8.10\n[07:13:00] Local version 3.8.10\nDid not fix the problem but did result in a more useful error there is actually some semblance of a stack trace now rather than just the one line.  Here it is\ngulp test\n[07:18:11] Using gulpfile ~/Dev/Git-Repos/test/gulpfile.js\n[07:18:11] Starting 'test'...\n[07:18:11] 'test' errored after 229 ms\n[07:18:11] TypeError: Object #<Object> has no method 'on'\n    at DestroyableTransform.Readable.pipe (/Users/billy/Dev/Git-Repos/test/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:516:8)\n    at Gulp.<anonymous> (/Users/billy/Dev/Git-Repos/test/gulp/unit-tests.js:22:6)\n    at module.exports (/Users/billy/Dev/Git-Repos/test/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (/Users/billy/Dev/Git-Repos/test/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/Users/billy/Dev/Git-Repos/test/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at Gulp.Orchestrator.start (/Users/billy/Dev/Git-Repos/test/node_modules/gulp/node_modules/orchestrator/index.js:134:8)\n    at /usr/local/lib/node_modules/gulp/bin/gulp.js:129:20\n    at process._tickCallback (node.js:419:13)\n    at Function.Module.runMain (module.js:499:11)\n    at startup (node.js:119:16)\n. The only thing I can think of then is that I have some different version of one of the dependencies you are using set somehow (kind of like I had an older gulp.  I literally installed the generator and ran it no other changes were made.\n. ```\nnode --version\nv.1.10.32\nnpm --version\n2.0.0\n```\nI can try the generator you mentioned later today.  I am at work now so I can't get on the internet with that laptop and I am stuck on a windows machine here so it wouldn't really be an apples to apples comparison.\n. I did not get really anytime to look at this after work yesterday unfortunately.  I did run a quick test with  https://github.com/yeoman/generator-gulp-webapp before I left this morning and apart from having to install SASS it worked fine.  However it did not run any tests and since that is what is failing I don't know how much that really told us.\nI am going to mess around with clearing caches etc tonight to see if that resolves it.  Is anyone on this thread using a mac?  I would like to rule out something OS specific.\n. Ok so I just go to looking at this now.  The generator did not add gulp-karma as a dependency in my package.json.\nRunning \nnpm install --save-dev gulp-karma\nfixed the issue.\nI generated 2 or 3 project all with the same problem.  Funny thing is now that I have manully installed it, every project I generate now is fine.  I am truly confused.\n. As an afterthought I did update node and npm, I am not sure if that had something to do with it.\nCurrent versions are\nv0.10.33\nand \n2.1.11\nrespectively\n. Looks cool but it seems to break on gulp serve and gulp serve:dist\nI replaced main.html with main.jade\n```\n.container\n    div(ng-include=\"'components/navbar/navbar.html'\")\n      .jumbotron.text-center\n        h1 &aposAllo, &aposAllo!\n        p.lead\n          img(src='assets/images/yeoman.png', alt=\"I'm Yeoman\")\n          br\n          |       Always a pleasure scaffolding your apps.\n        p\n          a.btn.btn-lg.btn-success(ng-href='#') Splendid!\n      .row\n        .col-sm-6.col-md-4(ng-repeat=\"awesomeThing in awesomeThings | orderBy:'rank'\")\n          .thumbnail\n            img.pull-right(ng-src='assets/images/{{awesomeThing.logo}}', alt='{{awesomeThing.title}}')\n            .caption\n              h3 {{awesomeThing.title}}\n              p {{awesomeThing.description}}\n              p\n                a(ng-href='{{awesomeThing.url}}') {{awesomeThing.url}}\n      hr\n      .footer\n        p\n          | With \u2665 from\n          a(href='https://twitter.com/Swiip') @Swiip\n```\nthe gulp serve serves up a blank page.  The serve works fine if i leave it as main.html\n. Ok.. so main.html is being served I can't see any difference in the page src but the html works and the jade does not.  I don't get it.\n. Ignore the last 2 comments it was a PEBCAK error.  The jade was malfromed and the .jumbotron was indented one tab to far.\nIt works great cant wait to see this and the coffee branch get merged in.\nThanks for the contribution.\n. I am using Spring Boot without any issues.  The link below is a bit out of date and I cant share my production app, but you can get an idea. The trick is when the 'localDev' profile is active spring boot reads things directly off of the file system, when building, the gradle task jars the dist directory in the client project (the project generated with this generator) and puts in a static directory that way spring boot will automatically serve it (the client.jar is included as a dependency for server project).  I had to make a few additional changes that I have not made there to make things run perfectly but it will maybe give you a start.\nhttps://github.com/wgorder/acme-ui\n. There was a problem fixed in https://github.com/twbs/bootstrap/commit/767f3c87bc019e04888c82fa222ffae3e89b6f7e\nwhere mainBowerFiles is not finding the woff2 font.\n. doh thanks :)\n. Excellent!,  I was hoping you had allowed a way for this.  Great work on this generator, we needed something like this.\n. Any suggestions on this?  I tried using an inject transform to add the context root to the URL when it is injected in index.html but it broke all sort of stuff since it also looks for that as the file path.\n. Thanks @Swiip .  I think I got it mostly working I have some more testing to do with it.  Unfortunately it required a lot of changing to paths all over the place.  I know there is probably a better way, I will wait to see what you come up with.\n. This one is still really causing me some pain.  If someone wants to give me a hint as to the best way to look at implementing this, I would be willing to look at working on it.\nI have looked at the inject, and wiredep stuff some.  As well as just adding another nested directory by editing those in index.html.  All of this seems to half way work or not work well though.\n. What changed in the new generator?  I had ended up using the cheerio solution in #419 \nAnyway I have moved toward a more component based approach to angular without bower.  I've diverged to the point where I have created a different seed project that really looks nothing like this one anymore.  It starts with https://github.com/angular-class/NG6-starter and adds a lot of the missing functionality that this generator does have that I like e.g. cache busting (use webpack rather than gulp for this), source maps etc.  Still a WIP but so different at this point, that I am not sure how I would contribute it here.\n. Ok.  So I don't know if it is because I am on a windows machine here (have to test on my mac at home too), but for whatever reason moving the inject stuff for templateCacheHtml.js out of the html task in build.js and into inject.js with the rest of it, fixed the problem.  I also added a dependency on the partials task when doing the inject.\nIt probably makes sense for all the injection to be done in inject.js anyway rather then having it scattered about.  This still leaves the gulp serve task broken of course I really don't use that but it is getting closer.  If someone who knows more about all this wants to jump in and tell me a better way I am all ears.\n. Ok course moving it seems to have a side affect of breaking gulp watch as well.  Worked around it by adding html along with markup to the jade watch task.\n. Hmm OK.  Well that makes a lot of it more clear.  However I guess what got me going down the wrong path was I did not see it injected even in my distribution index.html (in the dist folder).  Let me back out my changes later and confirm that was not a fluke on my part or and oversight.  If its there I will close this.\n. Ok you are absolutely correct.  I don't know what happened that it did not work for me before.  Sorry about that.\n. Not sure how I missed that. Thanks.\n. I have found ng-annotate to be undependable so I just make sure all my stuff is annotated explicitly.  This is especially true for ui-router controllers etc.  ng-annotate is supposed to recognize them but never does.  What you can do if you are using angular 1.3 is add ng-strict to your root tag.  Then angular will barf if it encounters anything that is not minification safe.  This way you will know you did not miss anything.\n<html class=\"no-js\" ng-app=\"myApp\" ng-strict-di=\"true\">\nThere is more than one way to annotate as well.  Sometimes I find using the ..$inject method more convenient than inline annotations.\nhttps://scotch.io/tutorials/declaring-angularjs-modules-for-minification\n. For the next person that runs into this upgrade yeoman\nnpm update -g npm\nnpm install -g yo bower grunt-cli gulp\n. @fubu \nThanks for the tip.  I suppose if the e2e coverage is good and you never actually have to figure out what actually caused it to fail (pretty hard to do from the minified error message).  This would work.  I will try your implementation.\nI wonder also if what you did here might help me solve my context root problem in #290 .  I could use it to add a prefix to the src urls :) \nAnyway thank you for your response.\n. @fubu \nI was just trying your snippet.  I get this error:\n/Users/billy/Dev/Git-Repos/my-project/my-module/admin/node_modules/gulp-dom/node_modules/jsdom/lib/jsdom/browser/Window.js:39\n  this._globalProxy = vm.runInContext(\"this\", this);\n                         ^\nTypeError: needs a 'context' argument.\nI saw some references on google about jsdom needing contextify but adding that didnt seem to help.  Did you have any issues like this when you added this?\n. Ahh I see let me try that.. Thanks\n--Edit\n@fubu  that was it, it works now.  Thanks again.\n. This seems less problematic than depending on jsdom. Once again, thanks for the suggestion.\n. It appears the useref plugin is what was biting me, you have to change that as well.\n. @Swiip \nThanks for looking at it.  When I use this generator to generate an ES6 project the first thing I do is rip out Webpack (which appears to already be implemented) and replace it with this.   If you are interested later let me know I can put together a PR.\n. Yeah I remove bower too. JSPM handles that, and supports git, bower, npm endpoints etc. I have never had the need to touch config.js, it seems to handle whatever it needs transparently. \nThe System.JS part is really the bundler that would be an alternative for webpack\n. @Swiip sorry I am late to responding.  Yes people should be able to make their own choices.\nThat said that transparent config that makes you sad does a pretty good job at handling circular and transitive dependencies that the others struggle with.\nAs for the future I think we know where its going (es6).  I prefer the idea of a polyfil that I can remove later.\nHere is an additional read.\nhttps://gist.github.com/OliverJAsh/bcc676e381a06dbb3be0\n. Oh and if you get bored and want to mess around with it further,  I used this as a starting point.\nhttps://github.com/angular-class/NG6-starter/tree/jspm\n. yes confirmed it does work.\nhttps://github.com/jonkemp/gulp-useref/issues/64\n. +1\n. @zckrs Closer, but for me, while I can build the minified version now, I get a Uncaught ReferenceError: describe is not defined when doing a gulp serve:dist however gulp serve appears to still work.\n. @zckrs  I figured it out resolved in https://github.com/Swiip/generator-gulp-angular/issues/657\n. Just generated a new project again. Still null.  See my yo-rc.json below:\nYou can set a breakpoint on the line I mentioned in the directive or just console.log it by changing it as below:\n```\nNavbarController = (moment) ->\n  vm = this\n  # \"vm.creation\" is avaible by directive option \"bindToController: true\"\n  vm.relativeDate = moment(vm.creationDate).fromNow()\n  console.log(vm.creationDate)\n  return\n\n```\nIf you do this you will see undefined printed to the console.\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.12.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"restangular\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"coffee\",\n        \"extension\": \"coffee\",\n        \"srcExtension\": \"coffee\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. Also note that despite the fact that the generated yo-rc.json says version version\": \"0.12.0\" I confirmed that I have the latest version and the package.json for the installed generator-gulp-angular correctly says version\": \"0.12.1\"\n. Weird, what could be different?  Are you running on a mac?\nPerhaps some version of some dependency or another that I have is different.\n. Thanks a lot @zckrs  !!\nI will let you close this issue with your commit then.\n. By the way, I swapped out CSSO with clean-css and everything works fine, in addition the sourcemaps stuff now works properly which it did not before.\n. Already fixed in existing PR\n. oops!  Not sure how I missed that.  Shall I just close this?\n. I believe this has already been fixed in https://github.com/Swiip/generator-gulp-angular/pull/645\n. ",
    "malikba": "I've just updated the generator-gulp-angular and now the livereload server stop each time a file saved and i have the following error:\nError: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)\nAny idea of why it's stopping like that ?\n. Hello @zawilliams, i figured it out a little bit before your messages and commenting the proxy part makes the server work, but i really don't know why http-proxy module is causing such errors. Thank you anyway for your help :+1: \n. ",
    "zawilliams": "+1\nTrying to figure out why this is happening. It does it when saving a file and whenever I refresh the page manually.\n```\n[BS] Watching files...\n[BS] File changed: app/index.html\nError: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)\n``\n. @malikba for now I commented outmiddleware: proxyMiddleware` in the BrowserSync server config. Seems to be working. Not sure what the real issue is yet though.\nhttps://github.com/Swiip/generator-gulp-angular/issues/53#issuecomment-56815910\n. Also, had proxyTarget set as: var proxyTarget = 'http://localhost:3000'; when I was trying to get everything to work.\n. @malikba :+1: \n. @marani isn't this project using gulp-sass though (node-sass) and not gulp-ruby-sass? Still related I suppose?\n. Ahhh - yeah you're right. Good call. I chose gulp-sass and it's giving me the issue too. Hmmm.\n. Ok I've copied the proxyMiddleware filter. Have source maps setup like:\n.pipe($.sass({\n        style: 'expanded',\n        sourceComments: 'map',\n        sourceMap: 'sass',\n        includePaths: [ 'app/bower_components/bootstrap-sass-official/assets/stylesheets' ]\n    }))\n    .on('error', handleError)\n    .pipe($.autoprefixer('last 1 version'))\n    .pipe(gulp.dest('.tmp/styles'))\nAnd my socket is disconnecting now and the server crashes. Before the issue was this: https://github.com/Swiip/generator-gulp-angular/issues/52#issuecomment-57095484\nThis is the current error I'm getting:\nError: socket hang up\n    at createHangUpError (http.js:1476:15)\n    at Socket.socketOnEnd [as onend] (http.js:1572:23)\n    at Socket.g (events.js:180:16)\n    at Socket.emit (events.js:117:20)\n    at _stream_readable.js:943:16\n    at process._tickCallback (node.js:419:13)\n. I should specify - the server crashes on manual page refresh and file changes.\n. Yes with proxyMiddleware enabled, the error earlier comes back:\nError: getaddrinfo ENOTFOUND\n    at errnoException (dns.js:37:11)\n    at Object.onanswer [as oncomplete] (dns.js:124:16)\nSo here's my setup:\nLatest version of browser-sync (1.5.2) - I had thought maybe it was an issue here so I made sure this was up to date.\nWith the original filter on the proxy I get the error about (dns.js) and when I change the filter, I get the socket disconnect error.\nI'm also running connect-modrewrite so I can access other URLs without getting a 404 but have commented it out temporarily. I have also enabled html5Mode as outlined in the same article about setting up connect-modrewrite (http://jjt.io/2013/11/16/angular-html5mode-using-yeoman-generator-angular/)\nCurrent config in server.js looks like:\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/index.html',\n    server: {\n      baseDir: baseDir,\n      middleware: proxyMiddleware\n    },\n    browser: browser\n  });\nWhen I have modrewrite in there it looks like:\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/index.html',\n    server: {\n      baseDir: baseDir,\n      middleware: [\n        proxyMiddleware,\n        modRewrite([\n          '!\\\\.\\\\w+$ /index.html [L]'\n        ])\n      ]\n    },\n    browser: browser\n  });\n. ",
    "lordfriend": "I'm using DNSCrypt and VPN because I'm behind a censorship network. When I disable the DNSCrypt and redo the operation above. It doesn't fail instantly but still fails after a while. When I disable both vpn and DNSCrypt It fail instantly.\n. Yes I use localhost to contact my BrowserSync server.\nI tried disabling the proxyMiddleware. It works! \nI also looked up the BrowserSync API Document and found some API had changed.(I've update BrowserSync to 1.5.1. rewrite the browserSyncInt() with new api, disabled proxyMiddleware. Now everything works well.)\nHere is my modified version of browserSyncInit() base on BrowserSync#1.5.1\n``` javascript\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nbrowserSync({\n    files: files,\n    port: 9000,\n    server: {\n      baseDir: baseDir,\n      index: 'index.html'\n//      middleware: proxyMiddleware\n    },\n    browser: browser,\n    online: false\n  });\n}\n```\n. ",
    "danyim": "I am also looking forward to this feature. I am having to manually change many components of the gulp files in order to facilitate the \"Angular way\" structure. Please let us know if there's an update!\n. @Swiip This might help you: I am slowly modifying the gulpfiles of the skeleton project created by your generator to the \"Angular way\" structure: https://github.com/danyim/gulp-angular\n. And what about incorporating gulp-changed, gulp-remember, and gulp-newer in the build process? As outlined here in the Gulp documentation: \"Incremental Builds\".\n. ",
    "intellix": "Also noticed this :D the README says it follows \"Best Practice Recommendations for Angular App Structure\" but actually doesn't follow any of it?\n. Actually, I've had to disable imagemin as well. We're running CentOS on our production servers and installing imagemin there is a freaking NIGHTMARE. Because of how annoying it is to install, how long it takes and how many extra dependencies it requires, I'm now using it as a development task rather than deployment (there's no need to do it EVERY time you build imo :P\nUsing npm shrinkwrap with/without imagemin:\n     with: about 450kb\nwithout: about 1mb\n. What.. and maybe make headjs an alternative option? If I want modernizer, I'll bower install it. There are a billion JavaScript projects we could include as options, why is this one of them?\n. Another, which I'm using: https://github.com/aslansky/css-sprite\n. Doesn't 1.4 come with i18n translation support out of the box or as an official module or so. I'm using angular-gettext at the moment though, great to see it here. the creator of angular-gettext also created extraction and compilation tasks for grunt/gulp as well\n. Personally, I've never seen the point in any of the component generators.\nHow is it any less effort than using snippets like: https://github.com/alsfurlan/ng-snippets, typing ngcontroller and press TAB? The files are automatically injected into your index.html anyway\n. I've created quite a few Angular projects now, switching between app folders and adding component folders blah blah.\nIt's exactly as @tlvince mentioned. When you're on a page of your site, it's good to have some idea where you need to look for the code. I don't want to re-iterate what he said but +1 for KEEPING the app folder.\n. Actually, this is something I felt was missing. In the generator-angular repos there's a longggg thread talking about application structure and one thing mentioned is partials should be named as: blah.tpl.html.\nOur partials task: gulp.src(['src/**/*.tpl.html']).pipe(...);\nWe have some large templates containing paragraphs of SEO text that I don't feel should be bundled within the app, shouldn't require a deployment and I don't mind it being pulled in dynamically, which are named as: blah.seo.html and are added during the copy task.\n. We are doing as said :)\n. I've stripped out the chunk of the process, as what I currently have isn't inline with the latest generator, but think it's straightforward enough to understand how it's done.\n1) Blacklist the .seo.html files during partials task\n2) Copy the seo files afterwards into dist\n``` js\ngulp.task('partials', function () {\n  return gulp.src([\n      'src//*.html',\n      '!src//*.seo.html'\n    ])\n    .pipe(gulp.dest('.tmp/src'))\n    .pipe($.size());\n});\ngulp.task('copy', function () { \n  return gulp.src([\n      'src/*/.seo.html'\n    ])\n    .pipe(gulp.dest('dist/'));\n});\ngulp.task('build', [\n  'partials',\n  'copy'\n], function() {\n    gulp.start('deploy');\n});\n``\n. I'd recommend **gulp-ng-constant**. You can  have a bunch ofconfig-.json` files and do something like:\nsrc/app/config-server.json\njs\n{\n    \"ENV\": {\n        \"name\": \"server\",\n        \"api\": {\n            \"endpoint\": \"/api\"\n        }\n    }\n}\nsrc/app/config-production.json\njs\n{\n    \"ENV\": {\n        \"name\": \"production\",\n        \"api\": {\n            \"endpoint\": \"https://www.website.com/api\"\n        }\n    }\n}\ngulp/config.js\n``` js\nvar gulp = require('gulp');\nvar fs = require('fs');\nvar argv = require('yargs').argv;\nvar ngConstant = require('gulp-ng-constant');\nvar environment = argv.env || 'server';\nvar ENV = JSON.parse(fs.readFileSync('./src/app/config-' + environment + '.json', 'utf8')).ENV;\ngulp.task('config', function () {\n  gulp.src('src/app/config-' + environment + '.json')\n    .pipe(ngConstant({\n      name: 'config',\n      dest: 'config.js'\n    }))\n    .pipe(gulp.dest('src/app'));\n});\n```\ngulp --env=production\nThen just attach the config task to run during your build and server tasks. It'll create a config module and you can inject the ENV constant into your services.\n. +1 - (since everyone else is voting to get this in) :+1: \nI also think so actually... it's one of the parts of boilerplate that I add to every project. I was working on also having a config-global.json and merging it with the environment specific one... it seems a no-brainer to have the ability to specify configs globally AND per environment for every project! Even if your API is always /api, I think it's good not to hardcode that within services etc.\n. Because bootstrap.js which is included with twbs-bootstrap is the jQuery dependent version. What you're looking for is something like ui-bootstrap or http://mgcrea.github.io/angular-strap/\n. I don't believe this has anything to do with the generator. It's talking about HTTP expiration as is managed by your web server (nginx/apache)\n. Why not go directly with ESLint with the angular-plugin? It provides everythng JSCS does, along with JohnPapa validation: https://github.com/Gillespie59/eslint-plugin-angular\n. BrowserSync has never really worked for me. If you have multiple tabs open it causes problems. If you post forms it causes problems :D It's like a party-trick that syncs your scrolling between mobile/desktop and then annoys you for the rest of the time. I reckon all the syncing should be disabled.\n. Hmm, I swear by having app and vendor split. vendor isn't likely to change so why force your users to download 600kb+ of JS everytime you change/improve your app?\n. I don't see this as having changed. It's still bootstrap-sass-official here: https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/_bower.json#L31\n. +1 for starting a new project when you need another entry. Not saying you will, but I always forget that I've updated a dependency for the first entry and broken the second one. Done this many times.\nI'm sharing some services, directives etc between them so have split into something like:\n- project-common (services/controllers/directives)\n- project-theme (Bootstrap SASS theme)\n- project-frontend - requires common + theme\n- project-admin - requires common + theme\n. I believe this is a problem with gulp < 4 and will be fixed in gulp 4\n. Tag!\n. the files declared for automated injection are declared by the \"main\" property inside the project's bower.json. If there's no main property, then the files aren't automatically injected and you need to manually add them to index.html (I assume this is what's wrong).\n. ",
    "nsarno": "@Swiip A better solution could be to rely on AngularJS modules and gulp-concat.\nThis article explains really well why solutions like Browserify are not needed with AngularJS and how to use gulp-concat to achieve similar results. \nWhat do you think about it?\n. My bad, I totally overlooked how gulp-useref is working! I just took another look at it. Thanks for the reply.\n. ",
    "TJKoury": "I'm using browserify, and browserify-shim makes sure that I can 'require' anything that's installed via bower.  Works for now.\n. ",
    "milkshoes": "I also had an issue just like this. I updated today to the most recent version of imagemin v1.1.0 and thus far have not been experiencing this issue.\nSo far based on my tests locally here, the newest version of imagemin - v1.1.0 seems to work as opposed to the previous version. still testing but looking better on Windows that is.\nand confirmed again that the newest version of imagemin v1.1.0 seems to fix the issue above and Swiip/generator-gulp-angular#56\nNew devDependencies update to imagemin version in package.json might need to be updated like so:\n\"gulp-imagemin\": \"^1.1.0\",\nthen, re-run npm install on your root folder and update the dependency to see if this works for you after a new imagemin compilation and update.\n. i used opti-png instead worked for me\nOn Nov 26, 2014 1:04 PM, \"sswainright\" notifications@github.com wrote:\n\nI still have this issue on with or without imagemin v1.1.0 or greater.\nWhat exactly is the workaround?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/56#issuecomment-64686731\n.\n. I have an issue where when running 'gulp serve' and 'gulp serve:dist' for allowing the browsersync / web server to deliver the correct localization files at both load and run-time. Below are the steps I have taken and haven't been able to get the custom folder and file(s)  'app/l10n/en_US.json' to be accessible.  The specific goal I am trying to accomplish with this is to get the  'angular-translate' and '' working for gulp builds of all kinds\n-  Install bower components:\n  https://github.com/angular-translate/angular-translate\n  https://github.com/angular-translate/bower-angular-translate-loader-static-files\n- Setup translation files:\n   'app/l10n/en_US.json'\n   'app/l10n/de_DE.json'\n- Use example translations:\n\n// 'app/l10n/en_US.json' - english file contents\n{\n    \"APP_TITLE\": \"Welcome to APP \",\n    \"APP_VERSION\": \"v0.1\",\n    \"LEFTBAR_BTN_LABEL_1\": \"Dashboard\",\n    \"LEFTBAR_BTN_LABEL_2\": \"Test Query Param\",\n    \"LEFTBAR_BTN_LABEL_3\": \"Open With Modal State\",\n    \"LEFTBAR_BTN_LABEL_4\": \"Frankie Testing\",\n    \"LEFTBAR_BTN_LABEL_5\": \"Help Form Test\",\n    \"LEFTBAR_BTN_LABEL_6\": \"Support Roles\",\n    \"DASHBOARD_COMMENT_ALERT_LABEL\": \"New Comments!\",\n    \"DASHBOARD_TASKS_ALERT_LABEL\": \"New Tasks!\",\n    \"DASHBOARD_ORDERS_ALERT_LABEL\": \"New Orders!\",\n    \"DASHBOARD_SUPPORT_ALERT_LABEL\": \"Support Tickets!\",\n    \"DASHBOARD_ALERT_LABEL_VIEW_DETAILS\": \"View Details\",\n    \"DASHBOARD_LABEL_NOTIFICATIONS_PANEL\": \"Notifications Panel\"\n}\n// 'app/l10n/de_DE.json' - german file contents\n{\n    \"APP_TITLE\": \"Willkommen bei APP\",\n    \"APP_VERSION\": \"Dies ist ein Paragraph\",\n    \"LEFTBAR_BTN_LABEL_1\": \"Armaturenbrett\",\n    \"LEFTBAR_BTN_LABEL_2\": \"Testabfrage Param\",\n    \"LEFTBAR_BTN_LABEL_3\": \"\u00d6ffnen mit modalen Zustand\",\n    \"LEFTBAR_BTN_LABEL_4\": \"Frankie Testen\",\n    \"LEFTBAR_BTN_LABEL_5\": \"Chirurg Formtest\",\n    \"LEFTBAR_BTN_LABEL_6\": \"Krankenhaus Rollen\",\n    \"DASHBOARD_COMMENT_ALERT_LABEL\": \"Neue Kommentare !\",\n    \"DASHBOARD_TASKS_ALERT_LABEL\": \"Neue Aufgaben !\",\n    \"DASHBOARD_ORDERS_ALERT_LABEL\": \"Neue Auftr\u00e4ge !\",\n    \"DASHBOARD_SUPPORT_ALERT_LABEL\": \"Support-Tickets !\",\n    \"DASHBOARD_ALERT_LABEL_VIEW_DETAILS\": \"Details anzeigen\",\n    \"DASHBOARD_LABEL_NOTIFICATIONS_PANEL\": \"Benachrichtigungsfeld\"\n}\n- Use Angular Provider for resource location loading:\nangular.module('app').config(function ($translateProvider) {\n    $translateProvider.preferredLanguage('en_US');\n    $translateProvider.useStaticFilesLoader({\n        prefix: 'l10n/',\n        suffix: '.json'\n    });\n});\n- Use the translations somewhere in your app using directives like so:\n  \nLEFTBAR_BTN_LABEL_1\nLEFTBAR_BTN_LABEL_2\n- // build.js\n  gulp.task('l10n', function () {\n  return gulp.src('app/l10n/*/')\n    .pipe(gulp.dest('dist/l10n')) // prod\n    //.pipe(gulp.dest('.tmp/l10n')) // dev\n    .pipe($.size());\n  });\ngulp.task('build', ['html', 'partials', 'images', 'fonts', 'l10n']);\nAny help with this is greatly appreciated!\n. I do have the latest (0.6) version and tried even with a brand new generator install / dir structure with the exact same result of not being able to access the .json file via the browser sync. At first I thought it might be a ui-router issue, but since it works for the dist version without the server I ruled ui-router out.  I am on windows 8, with brand new generator using an 'l10n' folder with two .json files. Not sure if there is a file filter or proxy issue with browser sync?\n. I even tried various versions of the default main partial with a link to test a reference like so:\n<p><a class=\"btn btn-lg btn-success\" ng-href=\"l10n/en_US.json\" target=\"_self\">Splendid!</a></p>\n\nbut no luck either way. However, when i use a server like instant on the dist directory it works everytime as expected. Really strange.\n. I triple confirmed that this works when not using 'browser sync' but 'npm instant' instead on the built 'dist' directory. It's as if the 'browser sync' server is redirecting or prohibiting the file reference when using 'gulp serve' and 'gulp serve:dist'. ui-router in dist works as mentioned in 'dist' for urls and files successfully. I am curious if you have actually tried angular-translate to work via static file?\nhowever this works for me every single time with 'npm instant' \n<p><a class=\"btn btn-lg btn-success\" ng-href=\"l10n/en_US.json\" target=\"_self\">Splendid!</a></p>\n\n. Ok I finally got it working with your included 'browser sync' and can explain what I did to allow the .json files to work and be accessible via 'angular-translate' and any link reference etc... \nIn the file 'gulp/server.js' i added a new |json) static file extension to the proxyMiddleware() function like so:\n/* proxyMiddleware forwards static file requests to BrowserSync server\n       and forwards dynamic requests to your real backend */\n    function proxyMiddleware(req, res, next) {\n      if (/\\.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff|json)(\\?((r|v|rel|rev)=[\\-\\.\\w]*)?)?$/.test(req.url)) {\n        next();\n      } else {\n        proxy.web(req, res);\n      }\n    }\nNotice the new addition of |json) extension added to end of the regex file extensions.\nafter this and the new gulp task displayed below for dist, everything for localization now works in every server mode and build. \nHere is my specific gulp task in for my localization folder 'l10n' in case anyone else is interested. It's a real basic copy operation and nothing fancy but maybe helpful still as a reference in this context of your generator setup for localization assets.\ngulp.task('l10n', function () {\n      return gulp.src('app/l10n/**/*')\n        .pipe(gulp.dest('dist/l10n')) // prod / dist build\n        .pipe($.size());\n    });\nI have to thank you again for your time and patience. I am contributing to you again for all your work and time. What you have here is worth so much because of all the time you save people, and not to mention the education you give others by providing a really nice setup to study and extend from. \nYou are very much appreciated Matthieu! Thanks :)\n. Now based on what your comments I'm wondering if i ever tested the latest (0.6) version. I downloaded it yesterday to a new folder and tested, but now I'm thinking I was still on an older version or something, I'll do more research to make sure. I def did not enable the proxy. I have a feeling I'm using an older version and maybe I did not actually update the \"generator\" on it's own. Testing again now.\n. Yep, I've been running on an older version this whole time. Thanks for all your comments. Helped me determine this was the case.\n. :+1:\n. I'm curious to know if you are using Windows? If so I also had an issue just like this. I updated today to the most recent version of imagemin v1.1.0 and thus far have not been experiencing this issue.\nSo far based on my tests locally here, the newest version of imagemin - v1.1.0 seems to work as opposed to the previous version. still testing but looking better on Windows that is.\nand confirmed again that the newest version of imagemin v1.1.0 seems to fix the issue above and Swiip/generator-gulp-angular#56\nNew devDependencies update to imagemin version in package.json might need to be updated like so:\n\"gulp-imagemin\": \"^1.1.0\",\nthen, re-run npm install on your root folder and update the dependency to see if this works for you after a new imagemin compilation and update.\n. :+1:\n. I can in fact verify that using an older version of your generator caused my issues with NodeJS 0.12.2 on Windows 8.1 64bit . Now with that said I had done some heavy modifications to the overarching structure and build mechanisms in place for the older generator i was using. So really I will have some re-factoring to do based on the new stuff, which I think will be fine because it means we will get all the new awesome updates you've provided with your latest generator. Thanks Swiip!\n. ",
    "sswainright": "I still have this issue with or without imagemin v1.1.0 or greater.  What exactly is the workaround?\n. Thanks.  Man that temp location is buried on Mac\n. How do the views for the app get served then for the distributed app?  When I run gulp serve:dist all .html files except index.html return 404.  Are they supposed to get compiled into index.html?\n. Thanks.  What does the partial between the inject:partials block look like, I can't seem to locate an example?\n. There is no .tmp/inject only /app and /components directory after running gulp?\n. within the last couple weeks.  How is the easiest way to get the version?\n. npm v gulp-angular tells me version: '0.1.2'\n. I am getting peerinvalid error for gulp when updating gulp-angular.  I uninstalled and re-installed gulp but gulp-angular wants gulp ~3.6.2 and the latest gulp is 3.8.10\n. I think so.  Running yo and then updating generators.  Here is the yo output:\n? Generators to update: generator-gulp-angular\nI uninstalled gulp and generators and then re-installed them.  No errors reported.  I ran yo gulp-angular [app-name] step through the wizard and get the following:\n/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/lib/base.js:772\n    self.conflicter.checkForCollision(file.path, file.contents.toString(), fun\n                                                               ^\nTypeError: Cannot call method 'toString' of null\n    at DestroyableTransform._transform (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/lib/base.js:772:64)\n    at DestroyableTransform.Transform._read (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js:184:10)\n    at DestroyableTransform.Transform._write (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js:172:12)\n    at doWrite (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/node_modules/through2/node_modules/readable-stream/lib/_stream_writable.js:237:10)\n    at writeOrBuffer (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/node_modules/through2/node_modules/readable-stream/lib/_stream_writable.js:227:5)\n    at DestroyableTransform.Writable.write\n. Looks like it may be choice specific once inside the generator.  If I use all the default choices it runs fine but if I do the following I get the above error:\nangular 1.3\nall angular modules\njquery 2.x\nNone, $http is enough\nngRoute\nNo UI framework\nLess\n. With some trial and error, it appears to only error if I select None for UI framework\n. I don't believe it is the less compiler, but the the wiredep task (gulp.task('styles', ['wiredep', 'injector:css:preprocessor']) that that looks at the list of less files in the app and component directories and then aujomatically edits the index.less file to add the @import statement for each .less file in those directories.  I'm pretty new to the gulp build components but our existing grunt build pulls the list from the  section in index.html in the order specified.  I can't currently change the .less design so I need to fix the injection order for several .less files.  Any ideas on how I can do this?\nMuch Thanks!\n. For some reason an older version of the generator or a component was running.  After removing all versions and re-installing the latest all appears to work fine.\n. ",
    "lancevo": "Adding proxy.on('error', function(err, req, res) in gulp/server.js will fix it, i.e.:\n``` javascript\nproxy.on('error', function (err, req, res) {\n  res.writeHead(500, {\n    'Content-Type': 'text/plain'\n  });\nres.end('Something went wrong. And we are reporting a custom error message.');\n});\n```\n. Yes it's using angularfilesort that does the injection.\n. It resolved my issue. Thanks\n. @goncalomarques @zckrs  Actually I worked around it. Because I don't think there's any filter capable of handling different odd cases. So I excluded the files I want to load in sequence and moved them to another folder. I excluded this newly created folder in gulpfile.js, then manually reference each javascript file in  build:js(src....) ..-, so they get included in the build.\n. ",
    "vitr": "in my case (win7 x64) it was just 'chrome' not 'google chrome'\n. ",
    "ntimmerman": "I don't have a gulp/server.js file. I used Yeoman to generate a SharePoint Web Part project. . ",
    "jonlil": "Hello, are there any progress on this?\nI might have some other issue but when I make any changes in my code the page reloads and i get a 404.\nSo its quite hard to develop at the moment :)\n. Generator v0.6.2\nNo errors\nYes i'm using html5mode\nNo backend, just want to serve simple static content under development\n. This solved it for me\n``` js\n'use strict';\nvar gulp = require('gulp');\nvar browserSync = require('browser-sync');\nvar modRewrite = require('connect-modrewrite');\nvar util = require('util');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nvar routes = null;\n  if(baseDir === 'src' || (util.isArray(baseDir) && baseDir.indexOf('src') !== -1)) {\n    routes = {\n      '/bower_components': './bower_components'\n    };\n  }\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/',\n    server: {\n      baseDir: baseDir,\n      middleware: modRewrite([\n        '!\\.\\w+$ /index.html [L]'\n      ]),\n      routes: routes\n    },\n    browser: browser\n  });\n}\ngulp.task('serve', ['watch'], function () {\n  browserSyncInit([\"src\", \".tmp\", \"bower_components\"]);\n});\ngulp.task('serve:dist', ['build:production'], function () {\n  browserSyncInit('dist');\n});\ngulp.task('serve:dist:sandbox', ['build:sandbox'], function () {\n  browserSyncInit('dist');\n});\ngulp.task('serve:e2e', function () {\n  browserSyncInit(['src', '.tmp'], null, []);\n});\ngulp.task('serve:e2e-dist', ['watch'], function () {\n  browserSyncInit('dist', null, []);\n});\n```\nbrowser-sync v1.5.1\nSadly i guess this is not related to the proxy right?\n. @raphaelluchini nested urls works fine for me. I updated to latest version yesterday and now my implementation looks like this\n``` js\n'use strict';\nvar gulp = require('gulp');\nvar paths = gulp.paths;\nvar util = require('util');\nvar browserSync = require('browser-sync');\nvar modRewrite = require('connect-modrewrite');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nvar routes = null;\n  if(baseDir === paths.src || (util.isArray(baseDir) && baseDir.indexOf(paths.src) !== -1)) {\n    routes = {\n      '/bower_components': './bower_components'\n    };\n  }\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/',\n    server: {\n      baseDir: baseDir,\n      middleware: modRewrite([\n        '!\\.\\w+$ /index.html [L]'\n      ]),\n      routes: routes\n    },\n    browser: browser,\n    notify: false\n  });\n}\n```\n. ",
    "raphaelluchini": "@jonlil Thanks! Solved, but for nested urls(/home/child1) doesn't work :( the browser starts to get the files from this path(/home/child1/app.js, /home/child1/app.css, etc )\n. @jonlil I've included <base href=\"/\"> and worked well! ;) Thanks BTW!\n. Here I have the same issue! When I use gulp or gulp serve nothing is injected in index.html!\nThis bug occurs because the gulp task 'html' as @jmcmichael have commented, is injecting to the dist/index.html folder, so when I run the task without dist param, templateCacheHtml.js is not injected to src/index.html\n. We going to need a task only for src:\n```\ngulp.task('injector:template', function () {\n  return gulp.src('src/index.html')\n.pipe($.inject(gulp.src('.tmp/inject/templateCacheHtml.js', {read: false}), {\n  starttag: '<!-- inject:partials -->',\n  ignorePath: '.tmp',\n  addRootSlash: false\n}))\n.pipe(gulp.dest('src/'));\n\n});\n```\n. Yes! CSS3, font icons, svg are great tools! But unfortunately there are some layouts and and solutions we need to compress to reduce the number of requests.\nThere are some approaches to figure out this issue easily.\nUsing gulp spritesmith.\nUsing compass sprite.\nWe could include both in a option. If the user select to use sass, ask for compass and include the task. if the user select other css preprocessor, we could ask for include spritesmith.\nI've been using spritesmith + imagemin + csso in production and works pretty good!\nA simple example:\n```\ngulp.task('sprite', function () {\n    var spritesmith = require('gulp.spritesmith');\n    var imagemin = require('gulp-imagemin');\n    var csso = require('gulp-csso');\n    var del = require('del');\n    // Generate our spritesheet\n    del(['app/css/_sprite.png'], function (err) {\n        var spriteData = gulp.src('src/images//.png').pipe(spritesmith({\n            imgName: new Date().getTime()+'_sprite.png',\n            cssName: 'sprite.css'\n        }));\n        // Pipe image stream through image optimizer and onto disk\n        spriteData.img\n            .pipe(imagemin())\n            .pipe(gulp.dest('app/css/'));\n    // Pipe CSS stream through CSS optimizer and onto disk\n    spriteData.css\n        .pipe(csso())\n        .pipe(gulp.dest('src/css/'));\n});\n\n});\n```\n. Yes @zckrs , for sure, but there is a reason to not be included as an option? Perhaps this feature is very specific?\n. +1 for add an option!\n. @fpernia Just add your scripts inside build:js tag on your src/index.html file. Here's a example with scrollmagic plugin for gsap.\n<!-- build:js({.tmp/serve, bower_components}) scripts/app.js -->\n<script src=\"../bower_components/scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap.js\"></script>\n<!-- inject:js -->\n<!-- js files will be automatically insert here -->\n<!-- endinject -->\n. ",
    "tuvokki": "@jonlil thanks, this helped me a lot.\nFYI, I use this in combination with a (local) proxy to a backend, like this and that works like a charm:\n``` javascript\n'use strict';\nvar gulp = require('gulp');\nvar paths = gulp.paths;\nvar util = require('util');\nvar browserSync = require('browser-sync');\nvar url = require('url'); // https://www.npmjs.org/package/url\nvar proxy = require('proxy-middleware'); // https://www.npmjs.org/package/proxy-middleware\nvar modRewrite = require('connect-modrewrite');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nvar routes = null;\n  if(baseDir === paths.src || (util.isArray(baseDir) && baseDir.indexOf(paths.src) !== -1)) {\n    routes = {\n      '/bower_components': 'bower_components'\n    };\n  }\nvar proxyOptions = url.parse('http://localhost:9860');\n  proxyOptions.route = '/api';\n  // requests to /api/x/y/z are proxied to http://localhost:9860\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/',\n    server: {\n      baseDir: baseDir,\n      middleware: [proxy(proxyOptions),\n        modRewrite([\n          '!\\.\\w+$ /index.html [L]'\n        ])],\n      routes: routes\n    },\n    browser: browser\n  });\n}\n```\n. ",
    "uaKorona": "Hello!  I got a problem with proxy. I need to proxy any request which contains 'mini-account' redirects to external server http://ws-strob.rhcloud.com/ \nI enabled and did config my proxy.js \n``` javascript\nvar proxy = httpProxy.createProxyServer({\n  target: 'http://ws-strob.rhcloud.com/mini-account/'\n}).listen(8003);\nfunction proxyMiddleware(req, res, next) {\n  if (req.url.indexOf('mini-account') >= 0) {\n    console.log('api request: ', req.url);\n    proxy.web(req, res);\n    //next();\n  } else if (/.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff|woff2|cur)(\\?((r|v|rel|rev)=[-.\\w]*)?)?$/.test(req.url)) {\n    next();\n  } else {\n    modRewrite(['!\\.\\w+$ /index.html [L]'])(req, res, next);\n  }\n}\n```\nand my server.js \njavascript\n browserSync.instance = browserSync.init(files, {\n    startPath: '/',\n    server: {\n      baseDir: baseDir,\n      middleware: middleware,\n      routes: routes\n    },\n    browser: browser\n  });\nI also use html 5 mode in my spa \njavascript\n$urlRouterProvider.otherwise('/');\n$locationProvider.html5Mode(true);\nBut when I send reqest to mini-account/version:8003 \nthe proxy redirects me to https://localhost:3000/mini-account/version:8003 not to external server\nhttp://ws-strob.rhcloud.com/mini-account/version\n\nCould anyone help me ?\n. Oh, thanks a lot! It's that what I wanted \n. ",
    "opadilla": "BTW http requests for css.map files are getting sent to the proxy server when the proxy is enabled.  Adding 'map' to the list of extensions in that regex in proxy.js fixes that.\n. @codeofsumit , upgrading to angular 1.5 isn't simply a matter of updating with bower if you make use of angular.component, which is the replacement for angular.directive and the main reason for upgrading to angular 1.5.\nThe current generator, v1.0.2, isn't putting component templates in the template cache in the dist like it does for directives, so when I do a gulp dist none of my angular.components are working.\n. ",
    "creimers": "Is it intended then that yo gulp-angular with the foundation option looks like this after the initial gulp serve?\n\n. No error, version 0.6.0.\n. There is a vendor.css in index.html and it does load properly. However, many of the foundation styles are not in there. It doesn't have e.g. top-bar or even row.\n\n. Ruby sass. Haven't had problems with ruby sass before.\n. Without just plain css, everything works fine. Will now try node sass.\n. node sass also works fine.\n. I'm experiencing exactly the same thing you are describing. Would you mind sharing how it was a local issue in your case?\n. ",
    "stepanic": "I also have the same problem, but with combination of: Bootstrap + Node.js Sass\nwhen changing src/app/main/index.scss browser reloads content, .tmp/app/main/index.css produced and successfully appear with content in Chrome Console in Network tab with whole content, but file .tmp/app/main/vendor.css is in directory, HTTP server return 200 OK, but with message \"This request has no response data avaliable\", than I manually click to refresh browser and everything works fine\n. ",
    "nhducit": "I also have the same problem, but with combination of: Bootstrap + Node.js Stylus\n. @Swiip \nI really get big trouble with incremental build.\nMy project have hundreds js file and It's cost me up to 2 minutes to load web page. Root cause: too many requests to get files (> 1000 files)\nI have an idea to deal with this problem:\nconcatenate all third-party librarys to one file (same as gul-angular way)\nconcatenate js files in the same folder to one js file. only concatenate folder which have at least one file changed.\nDo you have any suggestion for me?\n. ",
    "vasiliy0s": "I found in gulp/conf.js next blocking filter:\n``` js\nexports.wiredep = {\n  directory: 'bower_components',\n  exclude: [/foundation.js/, /foundation.css/]\n};\n```\nWhen correct, all works bench!\n. ",
    "mikeerickson": "I think two separate build systems would suffice, separation of responsibility.   All the FE stuff is more fluid and would be running more frequently, thus separating would be fine.   Plus, one could do the FE build using Gulp (just biased there, I much prefer Gulp).\nJust my $2 worth ;-)\n. Wait, I was thinking backend one was in Grunt for some reason (read the darn name Mike) \nSorry for noise guys, disregard the comments about Gulp in previous comment.\n. ",
    "Pentiado": "Six months ago I contributed to generator-angular-fullstack and generator-angular adding support for gulp. Then I had very little time and completely lost faith that it will be merged. Contributing sucks ;-D There are two branches, gulp (angular fullstack) and feature-gulp (angular). Maybe someone will find value in pieces of the code and reuse them:\nhttps://github.com/Pentiado/generator-angular-fullstack\n. ",
    "eseceve": "MEAN 0.4 include gulp.\n\nYou can now choose to build your project with Gulp. The Gulp file mirrors the same task that exist in the current Gruntfile. It\u2019s a bit easier to write tasks in Gulp - but since we don\u2019t want to force anyone to use Gulp, this feature will be added to the generator as an option alongside Grunt.\n. I found some bugs. Sorry.\n. @Olgagr \n\nkarma.conf.js\n``` javascript\n'use strict';\nmodule.exports = function(config) {\nconfig.set({\n    autoWatch : true,\nlogLevel: config.LOG_INFO,\n//logLevel: config.LOG_DEBUG,\n\nbrowsers : ['PhantomJS'],\n\nframeworks: ['jasmine'],\n\nngHtml2JsPreprocessor: {\n  stripPrefix: '.tmp/serve/',\n  moduleName: 'mymodule.templates'\n},\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor'\n],\n\npreprocessors: {\n  '.tmp/serve/**/*.html': ['ng-html2js']\n}\n\n});\n};\n```\ngulp/unit-test.js\n``` javascript\n'use strict';\nvar $ = require('gulp-load-plugins')();\nvar gulp = require('gulp');\nvar wiredep = require('wiredep');\nvar paths = gulp.paths;\nvar merge = require('merge-stream');\nfunction runTests(singleRun) {\n  var bowerDeps = wiredep({\n    directory: 'bower_components',\n    dependencies: true,\n    devDependencies: true\n  });\nvar testFiles = gulp.src(bowerDeps.js.concat([\n    paths.tmp + '/serve/*/.html',\n  ]));\nvar srcFiles = gulp.src([\n    paths.src + '/*/.js',\n    paths.tmp + '/serve/constants.js',\n  ]).pipe($.angularFilesort());\nreturn merge(testFiles, srcFiles)\n    .pipe($.karma({\n      configFile: 'karma.conf.js',\n      action: (singleRun)? 'run': 'watch'\n    }))\n    .on('error', function (err) {\n      // Make sure failed tests cause gulp to exit non-zero\n      throw err;\n    });\n}\ngulp.task('test', ['lint', 'markups', 'config'], function(done) {\n  runTests(true / singleRun /, done);\n});\ngulp.task('test:auto', ['lint', 'markups', 'config'], function(done) {\n  runTests(false / singleRun /, done);\n});\n```\nexample.controller.spec.js\n``` javascript\n'use strict';\ndescribe('controllers', function(){\n  var scope;\n  var createController;\nbeforeEach(module('mymodule.example'));\n  beforeEach(module('mymodule.templates'));\nbeforeEach(inject(function($rootScope, $controller) {\n    scope = $rootScope.$new();\ncreateController = function() {\n  return $controller('ExampleCtrl', {\n    $scope: scope\n  });\n};\n\n}));\n});\n``\n. I always remove the app folder after generate a new project.\n. http://www.sitepoint.com/comparison-javascript-linting-tools/\n. I've the same issue with Stylus\n. I researched about this issue and I found that [Traceur does not work in phantomjs](https://github.com/google/traceur-compiler/issues/908) because [Function.prototype.bind is undefined](https://github.com/ariya/phantomjs/issues/10522) in phantomJs **1.x** and it's fixed in **2.0** but karma-phantomjs-launcher uses phantomJs 1.9 =/.\n. I used **chrome** instead of **phanthomjs** andgulp testworks fine. Also, I changedunit-tests.js`to use karma without gulp-karma because that plugin will be deprecate and it does not support files loaded by CDN. \nSo, here is my configuration:\nkarma.conf.js\n``` javascript\n'use strict';\nmodule.exports = function(config) {\nconfig.set({\n    logLevel: config.LOG_INFO,\n    //logLevel: config.LOG_DEBUG,\nautoWatch : true,\n\nframeworks: ['jasmine'],\n\nbrowsers : ['Chrome' /*, 'phantomjs'*/],\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-chrome-launcher',\n  'karma-jasmine'\n]\n\n});\n};\n```\n\ngulp/unit-tests.js\n``` javascript\n'use strict';\nvar $ = require('gulp-load-plugins')();\nvar gulp = require('gulp');\nvar karma = require('karma').server;\nvar wiredep = require('wiredep');\nvar paths = gulp.paths;\nfunction runTests (singleRun, done) {\n  var bowerDeps = wiredep({\n    directory: 'bower_components',\n    exclude: ['bootstrap-sass-official'],\n    dependencies: true,\n    devDependencies: true\n  });\nvar testFiles = bowerDeps.js.concat([\n    paths.tmp + '/serve/app/index.js',\n    paths.src + '/{app,components}//*.spec.js',\n    paths.src + '/{app,components}//*.mock.js',\n    // external files\n    'http://example.com/file/from/cdn.js'\n  ]);\nkarma.start({\n    configFile: __dirname + '/../karma.conf.js',\n    files: testFiles,\n    singleRun: singleRun\n  }, done);\n}\ngulp.task('test', ['browserify'], function (done) { runTests(true, done) });\ngulp.task('test:auto', ['browserify'], function (done) { runTests(false, done) });\n``\n. you welcome =)\n. In your CI service you can runnpm install -g bowerbefore/afternpm install`\n. ",
    "leonli": "@Swiip you are not alone... :laughing: \n. ",
    "nbnotabene": "I guess the problem was js-script dependencies in index.html\nThis is handled by wiredep\nBut the instruction: exclude: ['bootstrap']  excludes angular-bootstrap as well.\nMy workaround is to use: exclude: ['/bootstrap']\nKeep up the good work, Thank You!\n. ",
    "bhj": "Just ran into this as well; the exclude is a little too greedy.\n. I think this is a dupe of #69, which could use a look :)\n. This is the same issue as #69 and #88 I believe.\n. I'm having a similar issue with less. It looks like index.less is getting processed before vendor.less, so I get undefined variable errors when trying to reference a Bootstrap variable in index.less.\n. ",
    "debuggerpk": "django is a python package . there shouldn't be any need for it, i had been doing the same thing with grunt without using bower install package for django\n. okay, must include the gulp.dest, the final looks like this\njs\ngulp.src('../../templates/backoffice/__base.html')\n    .pipe(wiredep({\n      ignorePath: '../../static/',\n      fileTypes: {\n        html: {\n          replace: {\n            js: '<script src=\"{{ STATIC_URL }}{{filePath}}\"></script>',\n            css: '<link rel=\"stylesheet\" href=\"{{ STATIC_URL }}{{filePath}}\" />'\n          }\n        }\n      }\n    }))\n    .pipe(gulp.dest('../../templates/backoffice'));\n. okay, located the problem, problem with the browser-sync package number, updated the version to the latest in package.json and all the problem solved ..\n. my bad, and to all who are like me, make sure you have the latest version of generator-gulp-angular installed, if you want to work with node 0.12\n. ",
    "jlu1202": "Hi, I seem to have a similar problem with wiredep prepending relative paths to bower_components in the processed html file.\nBelow is the code I have in my gulpfile.js and gulp.config.js\n(gulpfile.js)\ngulp.task('wiredep', function () {\n    log('Wire up the bower css js and our app js into the html');\n    var options = config.getWiredepDefaultOptions();\n    var wiredep = require('wiredep').stream;\nreturn gulp\n    .src(config.index)\n    .pipe($.debug(true))\n    .pipe(wiredep(options))\n    .pipe($.inject(gulp.src(config.js)))\n    .pipe(gulp.dest(config.client));\n}\n(gulp.config.js)\n    var config = {\n        /*\n         * File paths\n         /\n        // all js to vet\n        alljs: [\n            './src/__/.js',\n            './.js'\n        ],\n        build: './build/',\n        client: client,\n        server: server,\n        temp: temp,\n```\n    css: temp + 'styles.css',\n    fonts: './bower_components/font-awesome/fonts//.',\n    htmltemplates: clientApp + '/.html',\n    images: client + 'images//.*',\nindex: client + 'index.html',\n\njs: [\n    clientApp + '**/*.module.js',\n    clientApp + '**/*.js',\n    '!' + clientApp + '**/*.spec.js',\n],\n\nless: client + 'styles/styles.less',\n\n/*\n * template cache\n */\ntemplateCache: {\n    file: 'template.js',\n    options: {\n        module: 'app.core',\n        standAlone: false,\n        root: 'app/'\n    }\n},\n\n/*\n * browser sync\n */\nbrowserReloadDeplay: 1000,\n\n/*\n * Bower and NPM locations\n */\nbower: {\n    json: require('./bower.json'),\n    directory: './bower_components/',\n    ignorePath: '../..'\n},\n\n/**\n * Node settings\n */\ndefaultPort: 7203,\nnodeServer: './src/server/app.js'\n\n};\nconfig.getWiredepDefaultOptions = function () {\n    var options = {\n        bowerJson: config.bower.json,\n        directory: config.bower.directory,\n        ignorePath: config.bower.ignorePath\n    };\n};\n```\nIndex.html (before running gulp task)\n<!-- build:css styles/lib.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"/bower_components/font-awesome/css/font-awesome.css\" />\n<link rel=\"stylesheet\" href=\"/bower_components/toastr/toastr.css\" />\n<!-- endbower -->\n<!-- endbuild -->\nindex.html (after running gulp task)\n<!-- build:css styles/lib.css -->\n<!-- bower:css -->\n<link rel=\"stylesheet\" href=\"../../bower_components/font-awesome/css/font-awesome.css\" />\n<link rel=\"stylesheet\" href=\"../../bower_components/toastr/toastr.css\" />\n<!-- endbower -->\n<!-- endbuild -->\nAny pointer would be highly appreciated!\n. ",
    "tommyfok": "Please review.\n. Problem solved.\n. ",
    "kbjorklid": "I believe you currently have to add them manually. With angular, the order is relevant so simply injecting the bunch of JS files defining the AngularJS app is not going to work. There are Gulp plugins to handle the ordering, though, such as https://www.npmjs.org/package/gulp-angular-filesort. I have not tried this, but I thought I might try to integrate the automatic injection of angular files to my build process, if I'm successful I'll see if I have time to learn Yeoman enough to create a pull request for this.\nAnother pain for me was to get the directive templates (under the scripts directory's subdirectories) in separate files to work (to be added to template cache), so there seems to be some holes still in this otherwise wonderful generator (again, I'll try to find time to learn yeoman &  to integrate this to the generator & do a pull request, not making any promises).\n. ",
    "benjamincharity": "Perfect! Thanks for the quick response!\n. Perfect. I want those clean results!!\nThank you!!\n. @sinorga I still feel that we should be able to generate different compiled files per module.. but this is the solution I landed at to allow us to define separate modules although it is all compiled into one file.\nDefine a module (app/splash/):\n```\nimport SplashController from './splash.controller';\nimport router from './splash.routes';\nexport default angular.module('client.splash', [\n    'ngAnimate',\n    'ngTouch',\n    'ngSanitize',\n    'ui.router',\n])\n    .config(router)\n    .controller('SplashController', SplashController)\n;\n```\nThen import it for use in my primary app (index.module.js):\n```\nimport constants from './components/constants/env.constant';\nimport indexConfig from './index.config';\nimport routerConfig from './index.route';\nimport runBlock from './index.run';\n// Modules\nimport splash from './splash';\n// ... etc\nangular.module('client', [\n    'ngAnimate',\n    'ngTouch',\n    'ngSanitize',\n    'ui.router',\n    'angularMoment',\n    'client.splash',\n    // .... etc\n])\n    .config(indexConfig)\n    .constant('ENV', constants.ENV)\n    .config(routerConfig)\n    .run(runBlock)\n;\n```\nI'm still new to this class based approach so this may not be 100%... but it's bridging the gap for now.\n. Glad it's helpful. I like the separation of partitioned modules, but until we hear from someone with more knowledge (bump!) it is definitely getting us by!\n. fwiw I ended up creating a new project, copying all files over (converting to ES6 as they were moved) and force pushing to master. Made me feel hella dirty..and a brutal couple days, but it worked.\n. I've just been running up against the same issue. I love this generator and am familiar with it so I'd like to use it to build/abstract my personal directives etc as bower components. So I would need a demo and also the generated dist for bower.\n. Not within this project. For now I am using a simple webpack script that I pulled from a webpack starter repo.\nI'm using a plnkr for the demo using rawgit.com links and building it out locally by linking it locally as a bower module.\n. ",
    "ShawnTalbert": ":+1: \n. ",
    "tlvince": "I fix this locally by overriding Bootstrap's dependencies (in bower.json):\njson\n  \"overrides\": {\n    \"bootstrap-sass-official\": {\n      \"dependencies\": []\n    }\n  }\n. @zckrs, @Swiip, rebased; tests are green.\n. Perhaps they adopted an earlier version of ESLint which didn't have feature parity with JSHint. Or maybe just leftover baggage. I can't really come up with a reasonable explanation why'd you'd use both going forward.\n. Hi, yes, the combination of angularFilesort and merge stream solved the issue for me. However, my branch quickly became stale and needs updating to work with the recent JS preprocessor support\n. Its all yours :smile:\n. @zckrs rebased\n. :+1:\nEnsuring the preprocessed file is resolved in the correct order is a subtle and tricky one to get right.\n. AFAIK, app should hold pages/routes/states and components for reusable directives/services/filters.\n. Ah okay, I didn't spot any other usage of lodash in the templates themselves, but I only considered a subset of generator options.\n. Done.\n. ",
    "raphox": "https://github.com/Swiip/generator-gulp-angular/issues/690#issuecomment-143060296\n. Today I created a new application and got the error on \"server:dist\":\nvagrant@vagrant-ubuntu-trusty-64 ~/Projects/ng-ppa-ui $ npm list --depth=0\nppaUi@0.0.0 /home/vagrant/Projects/ng-ppa-ui\n\u251c\u2500\u2500 browser-sync@1.7.3\n\u251c\u2500\u2500 chalk@0.5.1\n\u251c\u2500\u2500 del@0.1.3\n\u251c\u2500\u2500 gulp@3.8.10\n\u251c\u2500\u2500 gulp-angular-filesort@1.0.4\n\u251c\u2500\u2500 gulp-angular-templatecache@1.4.2\n\u251c\u2500\u2500 gulp-autoprefixer@2.0.0\n\u251c\u2500\u2500 gulp-coffee@2.2.0\n\u251c\u2500\u2500 gulp-coffeelint@0.4.0\n\u251c\u2500\u2500 gulp-consolidate@0.1.2\n\u251c\u2500\u2500 gulp-csso@0.2.9\n\u251c\u2500\u2500 gulp-filter@1.0.2\n\u251c\u2500\u2500 gulp-flatten@0.0.4\n\u251c\u2500\u2500 gulp-inject@1.0.2\n\u251c\u2500\u2500 gulp-jshint@1.9.0\n\u251c\u2500\u2500 gulp-karma@0.0.4\n\u251c\u2500\u2500 gulp-load-plugins@0.7.1\n\u251c\u2500\u2500 gulp-minify-html@0.1.8\n\u251c\u2500\u2500 gulp-ng-annotate@0.3.6\n\u251c\u2500\u2500 gulp-protractor@0.0.12\n\u251c\u2500\u2500 gulp-rename@1.2.0\n\u251c\u2500\u2500 gulp-replace@0.5.1\n\u251c\u2500\u2500 gulp-rev@2.0.1\n\u251c\u2500\u2500 gulp-rev-replace@0.3.1\n\u251c\u2500\u2500 gulp-sass@1.1.0\n\u251c\u2500\u2500 gulp-size@1.1.0\n\u251c\u2500\u2500 gulp-uglify@1.0.2\n\u251c\u2500\u2500 gulp-useref@1.0.2\n\u251c\u2500\u2500 handlebars@2.0.0\n\u251c\u2500\u2500 http-proxy@1.7.3\n\u251c\u2500\u2500 jasmine-core@2.1.3\n\u251c\u2500\u2500 jshint-stylish@1.0.0\n\u251c\u2500\u2500 karma@0.12.31\n\u251c\u2500\u2500 karma-jasmine@0.3.5\n\u251c\u2500\u2500 karma-phantomjs-launcher@0.1.4\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 main-bower-files@2.4.2\n\u251c\u2500\u2500 protractor@1.4.0\n\u251c\u2500\u2500 require-dir@0.1.0\n\u251c\u2500\u2500 uglify-save-license@0.4.1\n\u2514\u2500\u2500 wiredep@2.2.2\nvagrant@vagrant-ubuntu-trusty-64 ~/Projects/ng-ppa-ui $\nvagrant@vagrant-ubuntu-trusty-64 ~/Projects/ng-ppa-ui $ gulp serve:dist\n[13:20:34] Using gulpfile ~/Projects/ng-ppa-ui/gulpfile.js\n[13:20:34] Starting 'styles'...\n[13:20:35] Starting 'scripts'...\n[13:20:35] Starting 'markups'...\n[13:20:35] Starting 'images'...\n[13:20:35] Starting 'fonts'...\n[13:20:35] Starting 'misc'...\n[13:20:35] Finished 'markups' after 156 ms\n[13:20:35] Starting 'partials'...\n[13:20:36] 'partials' errored after 295 ms\n[13:20:36] Error: Cannot find module 'lodash.bind'\n  at Function.Module._resolveFilename (module.js:338:15)\n  at Function.Module._load (module.js:280:25)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object. (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp-angular-templatecache/node_modules/gulp-footer/node_modules/lodash.assign/node_modules/lodash._basecreatecallback/index.js:9:12)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object. (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp-angular-templatecache/node_modules/gulp-footer/node_modules/lodash.assign/index.js:9:26)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object. (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp-angular-templatecache/node_modules/gulp-footer/index.js:6:14)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object. (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp-angular-templatecache/index.js:6:14)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object.defineProperty.get (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp-load-plugins/index.js:49:18)\n  at Gulp.gulp.task.gulp.src.read (/home/vagrant/Projects/ng-ppa-ui/gulp/build.js:21:13)\n  at module.exports (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n  at Gulp.Orchestrator._runTask (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n  at Gulp.Orchestrator._runStep (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n  at /home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/index.js:279:18\n  at finish (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n  at /home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:52:4\n  at f (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/node_modules/end-of-stream/node_modules/once/once.js:17:25)\n  at DestroyableTransform.onend (/home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/orchestrator/node_modules/end-of-stream/index.js:31:18)\n  at DestroyableTransform.emit (events.js:117:20)\n  at /home/vagrant/Projects/ng-ppa-ui/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:965:16\n  at process._tickCallback (node.js:419:13)\n[13:20:36] gulp-inject Nothing to inject into index.scss.\n[13:20:36] Finished 'misc' after 448 ms\n[13:20:36] Finished 'styles' after 1.38 s\n[13:20:36] Finished 'fonts' after 620 ms\n[13:20:36] all files 2.72 kB\n[13:20:36] Finished 'scripts' after 997 ms\n[13:20:36] Finished 'images' after 632 ms\n. Only works when I insert new depencies on package.json:\n...\n    \"lodash._setbinddata\": \"^2.4.1\",\n    \"lodash.bind\": \"^2.4.1\",\n    \"lodash.identity\": \"^2.4.1\",\n    \"lodash.support\": \"^2.4.1\",\n...\n. https://github.com/Swiip/generator-gulp-angular/issues/690#issuecomment-143060296\n. Hi, Im using RSYNC+SCP to deploy in my development enviroment.\nsh\nrsync -avz -e 'ssh' ./ui/www/ raphaelaraujo@example.com:/home/raphaelaraujo/api.example.com/public\nRef: http://askubuntu.com/a/446726\n. I generate project (yo gulp-angle) using 'jqLite'. Then needed of Jquery for other dependencies (highcharts.com). I installed the Jquery (bower install jquery) But when started my app, the jQuery not loaded. To resolve this problem I changed two files:\n```\n.yo-rc.json\n...\n      \"jQuery\": {\n-        \"key\": \"jqLite\"\n+        \"key\": \"jquery2\"\n      },\n...\n```\n```\ngulp/config.js\n...\nexports.wiredep = {\n-  exclude: [/jquery/],\n+  exclude: [],\n  directory: 'bower_components'\n};\n...\n```\n. @busches It is a sugestion to resolve the problem.\n. ",
    "franzherzog": "Got the same problem...\nUsed templateUrl in a directive:\njavascript\nangular.module('myModule').directive('myDirective',function(){\n    return{\n        restrict: 'E',\n        templateUrl: './components/myModule/my-template.html'\n    }\n});\nget rid of the \"root-prefix\"\n./\nthis works for me\njavascript\nangular.module('myModule').directive('myDirective',function(){\n    return{\n        restrict: 'E',\n        templateUrl: 'components/myModule/my-template.html'\n    }\n});\nAlso have a look at your routerfile:\njavascript\n            .state('state',{\n                url:'/myurl',\n                templateUrl:'components/mymodule/my-template.html',\n                controller: 'myCtrl'\n            })\n. ",
    "scottymeyers": "I'm using OSX and my images/partials are responding w/ 404 errors as well. Updated imagemin as well. If I comment out line 84-87 in gulp/build.js the images pass through though.\n. If I remove the:  bower:css  block, this error goes away. It looks like usemin is having trouble copying over my css files, but not the js files?\n. This seems to fix it for me as well. Thanks @mburbea \nMay be related, but my partials in the components/ dir aren't being injected on build either if anyone has any insight.\n. Please let me know if you find a work around aside from manually including those CSS files.\n. ",
    "sgybas": "Have you considered https://www.npmjs.org/package/gulp-ng-templates instead of gulp-ng-html2js? With gulp-ng-templates, all templates are written to a single JS file. This means less overhead and only one file to inject in index.html.\n. I think it's better to gerenate files in .tmp/ than in src/app/. Isn't that what .tmp/ is for?\nMaybe .tmp/inject/templateCacheHtml.js could be used? Then other tasks can also put files that should be injected into .tmp/inject/\n. ",
    "rkoberg": "Ufff... this has been driving me nuts for a day. Perhaps a big note on the readme would be a good idea...\n. Also, I needed to manually delete the .tmp and dist directories after I changed the name. It was still in the broken state until I did that.\n. ",
    "wmceff": "proper solution aside, the quick fix for me was to change .pipe(gulp.dest('.tmp')) to .pipe(gulp.dest('.tmp/partials')) in the partials task and in the html task change .pipe($.inject(gulp.src('.tmp/{app,components}/**/*.js') to .pipe($.inject(gulp.src('.tmp/{app,components,partials}/**/*.js').\n. sure is, sorry about that.\n. ",
    "mburbea": "Yeah, it'd be awesome to simply opt-in or out of it (just like the opt-in for less/sass/plain-ol' css). Right now, I have to clear my npm cache and run as admin every time I want to bootstrap with this project because of my corporate proxy. Even then, It will most likely blow up (because of imagemin), and I'll usually manually edit package.json and then have to remove the relevant section from build.js. Most generator's unfortunately do not have this as an option so I'm somewhat versed in hacking the build file. \n. This seems to fix it for me after some playing. Find this line in your index.html ::\n<!-- build:css({.tmp,app}) styles/vendor.css -->\nChange it to \n<!-- build:css({.tmp,.}) styles/vendor.css -->\nThis causes it to build and serve. I'm guessing now that bower_components isn't copied into .tmp it no longer knows how to build it.\n. Sadly, right now I've reverted to 0.6.0 as it seems to be more stable and I've manually just adjusted my folder structure. \n. Sorry. I typed the events wrong. I chose the options of angular 1.3, angular-cookies, ui-router, less and plain $http.\nHere is what I typed to repro it:\nyo gulp-angular test\nbower install --save font-awesome\ngulp html\nThe error message in full:\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: ENOENT, no such file or directory 'C:\\repos\\test\\{C:\\repos\\test\\.tmp\\bowe\nr_components\\font-awesome\\css\\font-awesome.css,C:\\repos\\test\\app\\bower_component\ns\\font-awesome\\css\\font-awesome.css}'\n    at Object.fs.openSync (fs.js:438:18)\n    at Object.fs.readFileSync (fs.js:289:15)\n    at DestroyableTransform.<anonymous> (C:\\repos\\test\\node_modules\\gulp-useref\\\nindex.js:81:61)\n    at Array.forEach (native)\n    at DestroyableTransform.<anonymous> (C:\\repos\\test\\node_modules\\gulp-useref\\\nindex.js:70:35)\n    at Array.forEach (native)\n    at DestroyableTransform.<anonymous> (C:\\repos\\test\\node_modules\\gulp-useref\\\nindex.js:46:36)\n    at Array.forEach (native)\n    at DestroyableTransform._transform (C:\\repos\\test\\node_modules\\gulp-useref\\i\nndex.js:43:15)\n    at DestroyableTransform.Transform._read (C:\\repos\\test\\node_modules\\gulp-use\nref\\node_modules\\through2\\node_modules\\readable-stream\\lib\\_stream_transform.js:\n184:10)\nI found a work around it seems that the index.html generated is wrong. \nline 10 is currently\n<!-- build:css({.tmp,app}) styles/vendor.css -->\nIt should become\n<!-- build:css({.tmp,.}) styles/vendor.css -->\nMy guess is the reason being is bower_components is no longer under the app folder.\nHere are my choices saved in the .yo.rc\njs\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"angularVersion\": \"1.3.x\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-cookies\",\n          \"module\": \"ngCookies\",\n          \"version\": \"1.3.x\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"2.x.x\"\n      },\n      \"resource\": {\n        \"name\": null,\n        \"version\": \"1.3.x\",\n        \"module\": null\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"0.2.x\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap\",\n        \"version\": \"3.2.x\",\n        \"key\": \"bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\",\n        \"npm\": {\n          \"gulp-less\": \"^1.3.3\"\n        }\n      }\n    }\n  }\n}\n. I'm fairly new to gulp. The actual call I did that broke is gulp serve:dist but this was the most minimal failing case\n. ",
    "jbaroudi": "@mburbea @zckrs \nHi, I'm using the workaround too. \nhtml\n    <!-- build:css({.tmp,.}) styles/vendor.css -->\n        <link rel=\"stylesheet\" href=\"app/vendor.css\">\n        <link rel=\"stylesheet\" href=\"bower_components/angular-hotkeys/build/hotkeys.min.css\" />\n    <!-- endbuild -->\nand it is working fine now.\nThank you for your excellent job.\n. thank you @zckrs trying to get my head qround the generator testing :p \nstill on npm link so... i'll get back to you when it is over\n. @zckrs @mburbea @scottmey\ngot it... did the npm link to the branches/fix and test it with font-awesome and angular-hotkeys\ngulp build It's working without errors\nThank you very much @zckrs \n. Hi! @zckrs @swiip learner question: still npm-linked locally to PR #96. Do i have to merge locally to my 0.6.1. Global install or should i wait for server version merge?\nThanks for your Help :)\n. Got it. Thanks XD\n. still on PR #96 locally waiting for 0.6.2 any ideas what can i do to fix it?\n. Thank you :)\n. Excellent @zckrs i appreciate your answer in order to understand better the build process.\nBest Regards\n. @zckrs @doronsever \nAren't controllers going to dissapear in the future? (ECMA 6, AngularJS 2). \nI don't mean to vote or nothing it's just an opinion due to the nature of this particular project of \"components creation\" which i have being doing now in angular.directive instead of using angular.controller.\nRegards :)\n. @doronsever i was a little bit confused about what you were trying to do, now i see things clearly. thanks for the idea and the new option. \nMr. @Swiip I don't have anything clever to say about directives as starting points of web components instead of controllers, and i see this is off topic for the generator. so thank you for sharing the idea. :) \n. My first project using this incredible generator (like 4 months ago) went with many changes to gulp to make components folder work like a real encapsulation of context elements... My second project (started 1 month ago) almost has no changes to gulp to achieve this, so, if removing the app (or components)  folder is going to make things brake gulp, well i would vote to go for more interesting features like making (s)css to work inside components/navbar folder from scratch. \nthumbs up for the excellent work\n. Scratch that feature, its working, scss/css injected into app/index.scss on gulp build, sorry :tongue: \n. @brunoksato as @Swiip says:\nI have two Projects now with this (amazing) generator. In one project i use  Microsoft web api 2 CORS support and in the other Laravel 5 and both have their way to achieve this... My point, No setup or install on angularjs had to be made to make it work.\nMS WEB API 2 Cors support:\n1) Install Web API 2 CORS Support with Nuget in Tools/Nuget Manager and search web api cors\n2) add code in App_Start/WebApiConfig.cs\nconfig.EnableCors(new EnableCorsAttribute(\"*\", \"*\", \"*\"));\nWarning: this is: All request methods from all clients no matter their domain or port.\nLaravel 5 Cors support is out of the box:\n1) check if app/Http/kernel.php has 'App\\Http\\Middleware\\CORSPreflight'\n2) check App\\Http\\Middleware\\CORSPreflight for the details:\nphp\npublic function handle($request, Closure $next)\n    {\n        return $next($request)->header('Access-Control-Allow-Origin', '*')\n                        ->header('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PUT, DELETE')\n                        ->header('Access-Control-Allow-Headers', 'Content-Type, Accept, Authorization, X-Requested-With');\n    }\nHope this helps :)\n. Hi @vbud, i changed my index.scss it to import variables.scss inside bootstrap\n@import '../../bower_components/bootstrap-sass/assets/stylesheets/bootstrap/variables'; \nat the beggining of my file, but i'm getting the error with gulp build && serve \nError: source string:1: error: file to import not found or unreadable: '../../bower_components/bootstrap-sass/assets/stylesheets/bootstrap/variables'\ni have already do \"gulp clean\", but still getting error... any thoughts why?\n. Hi @sebastianovide i believe the problem is that you need to set \nthe module\nangular.module( 'dashboard')\nwith\nangular.module( 'dashboard', [ ] ).....\nto declare the module (missing brackets)\nand then, add the reference in your app/index.js \nhope this solves your problem\n. ",
    "s-y": "NO!\n. ",
    "shicholas": "\nI'm afraid this question will lead to the fact like: it's needed only for IE7- compatibility. It will ask a new question: what is the compatibility requirement of this generator?\n\nI agree, that removing modernizer poses this question. I'd say keep it for now.\n. ",
    "MicFin": "+1 keep\n. ",
    "superstructor": "Mass spamming everyone who ever looked at this project for a vote is not cool.\nAnyway, it should be optional. Some people need it, some do not.\n. ",
    "riyadhalnur": "Should be optional\n. Ok cool but why use shim rather than upgrade PhantomJS itself?\n. Ok, I see your point but I've seen no side-effects so far. I upgraded PhantomJS and the Angular version and nothing else.\n. ",
    "alejandronanez": "Should be optional.\n. ",
    "stanosmith": "Should be optional.\n. ",
    "peec": "Optional, but please do not remove it.\n. @intellix It's a generator, hence its supposed to make your life easier by not going through configuration of the project (such as figuring out what libs to use of the millions that exist, bower installing, configuration etc.). I think it's good that the most used libraries are already is included, chances are you would use such libraries in serious projects anyway.\n. ",
    "samhghanmi": "Optional, i don't use it anyway.\n. ",
    "kuka": "Optional\n. ",
    "Undergrounder": "Optional\n. ",
    "bartvanremortele": "@peec shouldn't it just generate all the glue code and leave out additional dependencies? I agree with @intellix if I need it I will bower install it. Don't forget this is a \"gulp angular\" generator.\n. ",
    "loezix": "config.json is inside protractor itself, no need to change anything.\nsee here: https://github.com/angular/protractor/blob/master/config.json\nand here: https://github.com/angular/protractor/commit/c73a4a47420641ddffbec4c89f34fd98995999f8\nnewest protractor's seleniumServerJar is 2.44.0, which is the exactly one pulled in automagically, problem is, the generator sets seleniumServerJar to version 2.43.1 which result in protractor not being able to find the Jar file.\nI think best should be, let seleniumServerJar null, so protractor uses the default - if the user wants something different, then he/she/it should edit config.json inside protractor\njust generate/gulp protractor and you should reproduce the error (be sure to pull protractor 1.4.0)\ncheers!\n. ",
    "mittalabhas1": "I use Ubuntu 14.04\nFind below the image corresponding to the issue. I added just the last five lines. It shows removal of all lines and then addition of all lines in the file. Only those repos in which I scaffolded using your generator gives this issue @zckrs \n\n. ",
    "Janzelf": "The bootstrap component (less) should however remain in the root/src/bower_components/ ?\nAt least that's how I fixed an error on gulp 'serve' that appeared after I removed the folder.\nMost probably there is a more elegant way to fix this.\n. You should refresh your gulp if I remember correctly.\nMine runs fine after installing wiredep --savedev\nI'm beginning to like this very much.\n. make sure you use the latest version of gulp proper\n. Perhaps there is something left in the cache. \nThis sort of things sometimes goes away when you make a completely fresh start.\nnode --version\nv0.10.33\nnpm --version\n1.4.28\nBut then I'm on windows and it works!.\n. ",
    "abdulwahid24": "I got it..actually all my components templates and js files are converting into ngHtml2Js into .tmp and using $.inject while minifying html we are injecting these component js files into html with  inject : partial .\n@zckrs I don't have that file. Instead of that I can show you my project file structure here\n\nStill i am trying to get everything into single index.html ?  for that I have created single css and single js file os partials but don't know how can i combine main, vendor js which is automatically getting added into index.html.\nThanks for you help.\n. How can i achieve in gulp task ?\n. Thanks for the useref plugin its very helpful.\n. ",
    "montogeek": "I had to update npm to version 2.1\nFernando Montoya\nOn 14 Nov 2014 17:12, \"Mehdy Dara\" notifications@github.com wrote:\n\n@montogeek https://github.com/montogeek Issue resolved ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/112#issuecomment-63137386\n.\n. Sorry, I misunderstood the filename, in fact is the revision number, generated by https://github.com/sindresorhus/gulp-rev I updated the html task in the build.js file to generate the manifest file:\n\n....\n    .pipe($.rev())\n    .pipe(gulp.dest('dist'))\n    .pipe($.rev.manifest())\n    ....\nAnd then load the correct file from the Blade template file.\nI don't know if this is the best way to do this. Can you please give some advice? Thanks!\n. ",
    "fd": ":+1: \n. ",
    "Xepe": ":+1: \n. ",
    "radyz": "+1 optional to include\n. ",
    "drejohnson": "+1\n. ",
    "jamiebuilds": "Hey @Swiip, contributor to 6to5 here. Let me know if you need any help or stop by our gitter room at any time.\n. ",
    "e-oz": "Awesome! Thank you! \nCan I yell about it over internets or you are going to write blog post?\n. please roll out this update as release\n. Well, it's very counter intuitive for me (what means just 'gulp'? some random task?), so I changed 'build' task to \ngulp.task('build', ['clean'], function () {\n    gulp.start(['html', 'images', 'fonts', 'misc']);\n});\nBut thanks for pointing to that, @zckrs :)\n. @Toilal I don't think font-awesome needs to be \"built-in\". It's really simple to enter just 1 line to install it. Just my 5 cents :)\n. I confirm it works fine, just clear browser cache.\n. I thankful for ES6 support but I really dislike I need to write 4 times declaration of controller and 2 times list of dependencies. Any code duplication is evil.\nExample:\n1. class ActivityCtrl\n2. export default ActivityCtrl;\n3. import ActivityCtrl from './activity/ActivityCtrl.js';\n4. .controller('ActivityCtrl', ActivityCtrl)\ndependencies:\np1.\njs\nclass ActivityCtrl {\n  constructor(UserEventsLog) {\np2. ActivityCtrl.$inject = ['UserEventsLog'];\n. @Swiip we still can declare them old-fashioned way:\nangular.module('appName').service[controller]('serviceName', function dependenciesHere($http){\n  class es6ModernClass{\n  }\n return new es6ModernClass();\n});\nIt works. Example from my experiments: https://github.com/jamm/AquilamusTest/blob/master/app/es6/services/materialsservice.js\n. @Swiip it's not \"true\" modules anyway, they all are concatenated into one file :) I think in Angular 2 we will see some true modules when we will load different modules for different parts of app.\nI like that we don't need to write name of app in existing variant, but duplicated list of dependencies is erroneous thing, so I (personally) ready to pay this price for less bugs in code. Not sure if other users will support me, but hope so :)\n. @Toilal currently in index.html I don't see any includes of apps files, so I'm not sure I can use it without imports. But will try. Too many things for experiments :)\n. ~~@Toilal after experiments I found that if I add  <script src=\"pathToJsFile\"></script> into <!-- build:js({.tmp,src}) scripts/app.js --> but not inside <!-- inject:js -->, then everything works fine.~~\n. my previous comment about $inject was wrong (and removed)... it works only before minification...\n. and another one my assumption was wrong. We can't use index.html to include custom js files of our app to avoid export/import/declaration boilerplate code, if we use es6 features in these files. Because they will not be converted to es5.\nSo current configuration of ES6 is only possible. Sorry all for noise.\n. correction: only possible with current gulp config. If you could make gulp convert included js files too - it would be cool. But I don't know if it's possible at all.\n. See what they are doing, switching from bower to npm: https://github.com/tastejs/todomvc/issues/1110 \n. I know I sound boring and annoying, sorry, but @stryju has posted solution of ugly .$inject:\nhttps://gist.github.com/stryju/77109a3e1af24304ad36#file-foo-controller-es6-L2-L5\nI've tested it and it works :)\n. @intellix generator of route can generate 4 files (controller, template, e2e test, unit-test), add route and imports into index.js (app.js), it's ~15 minutes of saved time. Not a big deal, but very handy. \nBut everything has a price, and I think generator for so many supported JS dialects can be tricky to implement. Although, with some abstractions layers, it's possible, in long term.\n. About // @ngInject instead of .$inject = []:\nbabel doesn't work with code, generated by ng-annotate, but it can be resolved by adding 2 linea into build.js:\n1) in the beginning:\nvar replace = require('gulp-replace');\n2) into html task pipeline, after ngAnnotate:\n.pipe(replace('var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };', 'var _classCallCheck = function (){};'))\nit just removes unnecessary check. Kind of hack, but works fine.\n. disagree, this folder is for services also and they are not directives.\n. @vredchenko sorry for answering question I'm not asked about, but I can share much more simple example:\n'use strict';\n//ngInject\nfunction myDirective($http) {\n    return {\n        restrict: 'AE',\n        template: '<div>Example </div>'\n    };\n}\nexport default myDirective;\n. @tlvince was right...\n. thanks for workaround, @DallanQ !\n. thanks\n. It runs on first gulp serve, so it's maybe not so critical (just not intuitive), but not all files were generated - only 1 of 3.\n. named functions are really much better for debugging.\n. Because I never use synchronization between browsers (when synchronization is turned on, we can't run tests in few browsers simultaneously because of collisions) and now it generates console.error message so tests fails again (because console is not empty and it's one of checks in tests).\nMessage:\n\nI think it's not bug of your generator so I didn't fill issue.\n. just add \"ghostMode: false\" into .init call params \nbrowserSync.instance = browserSync.init({\n      startPath: '/',\n      ghostMode: false,\n      server: server,\n      browser: browser\n    });\nI'm changing it in each app, so if it will be configurable on the start, it will be little bit more handy :) It's, maybe, most low priority feature-request in this list of issues :)\n. I hate this change. It will learn users to think that components (services, directives) are parts of their current app and they can use other parts of app inside components. And their components will not be reusable anymore.\nBefore this change this generator was example of perfect folders structure and I have been always recommend this generator as best of existing. With this change I understand I can't recommend it, because I don't have moral right to learn users create non-reusable components.\n. And add 1.4 please. Already rc and stable enough to use.\n. no options, os x.\ntested with karma-config branch, reproduced (it literally took 20 seconds to test).\nHere is generated project: https://github.com/jamm/gulp-angular-test-demo\nto see bug, just run gulp test (after npm install, of course).\n. Only change was made, 5 replaced by 500 here to make test fail:\nhttps://github.com/jamm/gulp-angular-test-demo/blob/master/src/app/main/main.controller.spec.js#L20\n. v0.12.0.\nIt works, test runs, issue is in error after it.\n. I updated node to 0.12.2 and still see this bug. I will reinstall system from scratch to be sure all is ok with my setup, but it will be on weekend.\n. @Swiip I've created repo with project, generated by gulp-angular master branch version (installed by npm install -g git+https://github.com/Swiip/generator-gulp-angular.git)\nhttps://github.com/jamm/gulp-angular-directive-test-demo\nYou can clone it, npm install, and try to run gulp test to see request to template.\n. Confirm, all works fine :) Thank you.\nIf it's possible, please use name of module user entered in generation step. I thought it's some internal \"mocking\" module.\n. Cool, it works! \noptional=jscript\n. oops, sorry @kondi, I closed issue exactly when you commented.\n. I will talk to John and will recommend him move \"components\" on the same level with \"app\", but I will not create PR as I see you and Swiip will not merge it anyway (it's opinionated thing and I read your opinions in that awful PR).\n. I don't think I must to do anything, @zvkrs. \nI can just fork this repo and rollback undesirable changes, change name and work with it as with new project.\nAnswer to your question: between apps. I thought it's obvious when we talk about code reuse. Your idea about using copy-past as kind of code-reuse I will treat like a joke, it can't be serious.\nYou had perfect structure and lost it.\nAs you don't understand my reasoning and choose to stick with this ugly structure, I close issue. Farewell.\n. It's so easy to reproduce I even used to run gulp serve in separate console as a workaround, because otherwise tests will fail almost always. OS X.\n. try to put // @ngInject before constructor\nClass SisService{\n   // @ngInject\n    constructor($q){\n        this.$q = $q;\n     }\n. tests failure is not related to this commit.\n. I did it, tests are failed again because of dependencies.\nChanges in this commit are pretty simple, easy to observe. Feel free to decline pr, my aim was just to warn you about critical changes in gulp-filter.\n. Really, my fault, sorry.\nThanks for checking it.\n. found: in gulp/scripts.js remove preLoaders line.\nreally annoying when some trash trying to teach me how to name my files. Go to hell with such recommendations.\n. Very useful comment, man. Keep going.\nOn Tue, 20 Oct 2015 at 00:47, Jo\u00e3o Dias notifications@github.com wrote:\n\nI don't even.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/852#issuecomment-149356799\n.\n. After release 1.0 this generator turned in a total trash. I spend a lot of\ntime (including reading of your documentation) to find that\n\"index.modules.js\" is a mandatory file, not optional. And tones of bold red\nerrors which are just recommendations - it's too much. We have namespaces\nso we don't need \"Controller\" suffix, somebody have \"Ctrl\" suffix\nconvention, but you only recommend longest version without option to turn\nit off. Too \"opinionated\" - you, as you say, crossed a line. I deeply\nregret I started so many projects with this generator and also regret I\nrecommended it in my blog articles, G+ and Twitter posts.\nI was nice while this generator was nice.\nOn Tue, 20 Oct 2015 at 10:28, Matthieu Lux notifications@github.com wrote:\nSeriously @e-oz https://github.com/e-oz, you crossed a line. Be nicer\nhere please. Fill good issues or just don't.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/852#issuecomment-149462018\n.\n. \n",
    "danprime": "3.4.8 Selective Steve\n. Thank you for the response. I made modifications to include all the scss and it now automatically generates the file I need. Thank you.\n. ",
    "karthikrp": "The solution did not work for me.\nHowever downgrading node-sass to 3.4.2 did the trick.\nnode: v6.2.2\nnpm: v3.9.5\ngulp-sass: v2.0.4\n. ",
    "wanglong167": "Tks\n. ",
    "Droogans": "protractor, technically a global that might get used in some situations, is arguably not needed.\n$ and $$ are globals acting as shortcuts for the element(by.css()) and element.all(by.css()). They get used quite often.\n. ",
    "chhsiao1981": "About --coffee, I prefer to have both --coffee options and prompt features.\nThe prompt is for people who don't know the --coffee options.\n--coffee is to avoid \"default language\" issue.\n. Thanks.\nI made several changes to follow original jshintrc.\nI'll just keep following the updates of master until the preprocessor feature is settled.\n. Thanks. I'll try to fit in the preprocessor framework.\n. I just rebased with master. Also tested with gulp serve and gulp server:dist.\nLet's see which .ls files can stay in the repository and which should not be merged for now.\n. I just rebased and simplified the files to be the same file structure as .coffee. Also tested with gulp serve.\n. no problem at all.\nI'll just follow the updates of this generator and build up the livescript version generator.\n. \"Should it be a question? (big warning: the number of question is already big)\"\nI would prefer to have --coffee option, to avoid \"default language\" issue. \nHowever, we still can put it into questions for people who don't know the specific option.\n(But if it is in --advanced, then maybe it is good to have just --coffee option.)\n\"Should we be able to use more than one preprocessor (not technically complicated)?\"\nFor now I think it's ok to have just one preprocessor.\n(I don't think people like to mix multiple languages in one project.)\n\"When choosing an optional preprocessor, the base JS files produced by the generator should be in JS or in the other langage? This question has a big impact on the amount of work to produce :)\"\nI prefer to have base files in the chosen language.\nSimilar reasons as the previous question.\n\"Unrelated: Should we use a reverse compiler coffee2js to reduce the amount of code to manage in the generator? But it will be possible only for Coffee I think because there is no such things for ES6 and TypeScript...\"\nUnsure what you mean. \nDo you mean that there is only .coffee in the templates, \nand generate .js on-the-fly when choosing js as language?\nLike css, I think the simplest design for multiple languages\nis to just have each-owned files for each language. \nWe can gen .js from .coffee and put it into templates,\nbut there should be .js in the templates to let people easy to know\nhow the .js would be like.\n. Thank you very much for your comments.\nThe reason why using existsSync, is because it's possible that \ndifferent js-preprocessor languages implement different .js files. \n(for example, _main.controller.spec.js is not implemented in .ts, .coffee, .es6, \n but I'll implement that in .ls)\nAlso, with existsSync, the design can be easily generalized to all the .js files, \nnot restricted to templates src files.\n. @joelim01\nThere seems no injector:css:preprocessor in master branch.\nInstead of npm install, \nyou can do git clone and npm link for latest version.\n. ../ is based on vendor.scss.\nI also think ../ is wrong to me.\nMaybe taking out both ../ is better.\n. It's due to that I would like to rename the .js files from the json definition to .ls.\nThough it may not be an issue when directly assigning to files in app development\n(because of assigning to only one language),\nit may cause confusion when doing npm test (files are overwritten with .ls once replaceFilePostfix is executed.)\nBetter solutions are welcome.\n. I'll put the var def outside the for-loop.\n. I'll follow the original jshintrc\n. ",
    "codewrangler77": "updated both, waiting for the CI updates. My local tests were complaining about something with zepto, but I couldn't figure out what file it wanted me to add. All the tests passed locally.\n. ",
    "al-the-x": "$> find . -type f -exec xxd {} \\; | grep 0d0a | wc -l\n    376\n$> egrep -rcnH $'\\r'$ * | grep -v 0\\$\nbower.json:16\ngulp/build.js:95\ngulp/e2e-tests.js:36\ngulp/proxy.js:65\ngulp/server.js:58\ngulp/unit-tests.js:31\ngulp/watch.js:9\ngulp/wiredep.js:15\ngulpfile.js:9\npackage.json:43\nsrc/404.html:157\nsrc/app/index.css:117\nsrc/app/index.js:3\nsrc/app/main/main.controller.js:9\nsrc/assets/images/angular.png:1\nsrc/assets/images/browsersync.png:1\nsrc/assets/images/gulp.png:1\nsrc/assets/images/jasmine.png:1\nsrc/assets/images/karma.png:1\nsrc/assets/images/protractor.png:1\nsrc/assets/images/yeoman.png:1\nsrc/components/navbar/navbar.controller.js:6\nsrc/components/navbar/navbar.html:13\nsrc/index.html:91\ntest/e2e/main.js:15\ntest/karma.conf.js:28\ntest/protractor.conf.js:21\ntest/unit/main.js:22\n. Sorry, I should've included that I ran those commands against a newly generated project with --no-install (so just the regular generated files).\n.  When I visit the install location for generator-gulp-angular -- /usr/local/opt/nvm/v0.10.32/node_modules/generator-gulp-angular/ -- and run that egrep pipeline, I get the following output:\n$> pwd\n/usr/local/opt/nvm/v0.10.32/node_modules/generator-gulp-angular/\n$> egrep -rcnH $'\\r'$ * | grep -v 0\\$\napp/files.json:48\napp/index.js:86\napp/prompts.json:227\napp/src/compile.js:79\napp/src/files.js:59\napp/src/format.js:125\napp/techs.json:79\napp/templates/_bower.json:16\napp/templates/_gulpfile.js:9\napp/templates/_package.json:43\napp/templates/bowerrc:3\napp/templates/editorconfig:13\napp/templates/gitignore:5\napp/templates/gulp/README.md:29\napp/templates/gulp/__handleError.js:4\napp/templates/gulp/__less.js:14\napp/templates/gulp/__node-sass.js:8\napp/templates/gulp/__ruby-sass.js:8\napp/templates/gulp/_build.js:95\napp/templates/gulp/_watch.js:10\napp/templates/gulp/_wiredep.js:15\napp/templates/gulp/e2e-tests.js:36\napp/templates/gulp/proxy.js:65\napp/templates/gulp/server.js:58\napp/templates/gulp/unit-tests.js:31\napp/templates/jshintrc:25\napp/templates/src/404.html:157\napp/templates/src/_index.html:60\napp/templates/src/app/__bootstrap-index.css:14\napp/templates/src/app/__bootstrap-index.less:14\napp/templates/src/app/__bootstrap-index.scss:14\napp/templates/src/app/__bootstrap-vendor.less:3\napp/templates/src/app/__bootstrap-vendor.scss:3\napp/templates/src/app/__default-index.css:117\napp/templates/src/app/__default-index.less:116\napp/templates/src/app/__default-index.scss:116\napp/templates/src/app/__default-vendor.less:1\napp/templates/src/app/__default-vendor.scss:1\napp/templates/src/app/__foundation-index.css:19\napp/templates/src/app/__foundation-index.less:19\napp/templates/src/app/__foundation-index.scss:19\napp/templates/src/app/__foundation-vendor.scss:1\napp/templates/src/app/__ngroute.js:11\napp/templates/src/app/__uirouter.js:11\napp/templates/src/app/_index.js:3\napp/templates/src/app/main/__bootstrap.html:33\napp/templates/src/app/main/__default.html:31\napp/templates/src/app/main/__foundation.html:32\napp/templates/src/app/main/_main.controller.js:9\napp/templates/src/assets/images/angular.png:1\napp/templates/src/assets/images/bootstrap.png:1\napp/templates/src/assets/images/browsersync.png:1\napp/templates/src/assets/images/foundation.png:3\napp/templates/src/assets/images/gulp.png:1\napp/templates/src/assets/images/jasmine.png:1\napp/templates/src/assets/images/karma.png:1\napp/templates/src/assets/images/less.png:1\napp/templates/src/assets/images/node-sass.png:1\napp/templates/src/assets/images/protractor.png:1\napp/templates/src/assets/images/ruby-sass.png:1\napp/templates/src/assets/images/yeoman.png:1\napp/templates/src/assets/images/zepto.png:1\napp/templates/src/components/navbar/__bootstrap-navbar.html:19\napp/templates/src/components/navbar/__default-navbar.html:13\napp/templates/src/components/navbar/__foundation-navbar.html:18\napp/templates/src/components/navbar/_navbar.controller.js:6\napp/templates/test/e2e/main.js:15\napp/templates/test/karma.conf.js:28\napp/templates/test/protractor.conf.js:21\napp/templates/test/unit/_main.js:22\nHowever, when I run that command on a fresh git clone of the repo, I get no results. I have core.autocrlf=true in my ~/.gitconfig, FWIW.\n. Using a brand new computer with my dotfiles repo installed and a fresh copy of Yeoman and generator-gulp-angular, every new project I start has files with Windows-style line endings, some with a mixture of line endings.\n. Confirmed.\n. Interested in PRs to add this feature?\n. Yeah, I went through the history on JSCS. Sorry that didn't work out, but\nESLint is much better as a successor to JSLint. The gulp-webapp project\nrecently switched, and I'm happy to submit a PR.\nOn Jul 7, 2015 12:10 PM, \"Matthieu Lux\" notifications@github.com wrote:\n\nYep, a lot!\nI'm seriously reconcidering switching to ESLint before the 1.0 release. We\nhad a failed experience trying to use JSCS (which is covered by ESLint) and\nI also want to add https://www.npmjs.com/package/eslint-plugin-angular\nwhich is great...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/168#issuecomment-119253805\n.\n. \n",
    "adrianchung": "Do you mean index.less? It doesn't override the bootstrap variables there either. \n. Hello,\nI've invested further and I wasn't seeing updates because I wasn't using any elements that were using @brand-primary. Thanks and sorry for the confusion.\n. ",
    "Nek-": "Gonna work on tests this evening :)\n. I don't understand how to fix tests :( . I never write tests like that. (actually i feel like a newbe with yeoman / js tests)\n. There is another point. With ^ you only check the first number. As I said, 0.a versions are gonna break things in 0.b . Using ^ in theses cases is wrong.\n. This is not correct either since angular/jquery and many others break compatibility between minor versions (think to 1.9 and 1.10 of jquery or 1.2 and 1.3 of angular).\nIMO it's better to use ~ for all dependencies (as recommanded). This also good because it force a minimum version (if you use ~1.10 the 1.9 will not be authorized).\nBut why would you keep a non-recommended way to do ?\n. Design a new sample app is a pretty idea. But IMO better set it in the readme of the sample app :) . (actually, why not both?)\n. Awesome. :+1: \n. Indeed, I didn't saw. This is just a proposal, but for me it's a problem to have template with the JS. I mean for big front applications it's weird to not sort files...\n. ",
    "JetFault": "I don't quite agree with changing from  ^ to ~.  \nIf you look at node-semver. The ^ follows typical uses of semver. If a 0.x.x version, then minor is actually a breaking change, if not, then it is a non breaking change. \nThe caret automatically handles checking the major being a 0 and allows a minor to be updated or not. So ^0.6.0 would not resolve to 0.7.0. But bootstrap ^3.2.0 would resolve to 3.3.0\n. ",
    "iwhy": "let me try to express as this:\n1. In the first very beginning, there are 1 application with 3 sub-system(project, wiki, user). so I want to have a dist/ structure like above.  And may be the main_.html may change to main_.tpl.min.js, contains with all views with each sub-system.\n2. and later, the project system extend to 2 sub-sub-system, and that will not consider at this time.\nI almost achieve this but faild, like this:\n\nThe error message is not to find the module 'tn.shared.navbar','tn.shared.footer',\nHow can I fix this ,Thanks!\n. And the all the *.js files are all contain in src/index.html\n\nBut the dist/scripts/app.js  do NOT have something like:\nangular.module('tn.shared.navbar', []); // in src/shared/footer/app.js\nangular.module('tn.shared.footer', [])  //in src/shared/footer/footer.controller.js\n    .controller('tn_shared_footer_controller', ['$scope',function($scope) {});\nWhat should I do to compile all the *.js files into app.js?\n. I did it according to the readme.rd:\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/README.md \n. I got it. Thanks!\n. ",
    "joshhornby": "Sorry, Mac 10.10 and the latest version of the generator. \n. from NPM. \n.yo-rc.json:\njson\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"angularVersion\": \"1.3.x\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\",\n          \"version\": \"1.3.x\"\n        },\n        {\n          \"name\": \"angular-cookies\",\n          \"module\": \"ngCookies\",\n          \"version\": \"1.3.x\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\",\n          \"version\": \"1.3.x\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\",\n          \"version\": \"1.3.x\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": null,\n        \"version\": \"1.3.x\"\n      },\n      \"resource\": {\n        \"name\": \"angular-resource\",\n        \"module\": \"ngResource\",\n        \"version\": \"1.3.x\"\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"0.2.x\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"3.2.x\",\n        \"key\": \"bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\",\n        \"npm\": {\n          \"gulp-sass\": \"^0.7.3\"\n        }\n      }\n    }\n  }\n}\n. Just after\u00a0\ngulp-inject 10 files into 404.html.\ngulp-inject 10 files into index.html.\n. Just tried a fresh install and worked. Not sure what it could be. Seems to be an issue in my src directory, any ideas what it could be?\n. ",
    "sebeichholz": "Oh sorry, looked through the existing issues but missed it.\nClosed!\n. ",
    "jmcmichael": "I'm using the npm release.\nYeah nothing fails, the partials work fine after being inserted into app-XXX.js. I was confused b/c on an initial review of the gulp files and index.html led me to believe maybe a link to a partials.js file, or the partials themselves would be injected into index.html. If this is not the case then the gulpfile code and tags in index.html should be removed as they don't appear to do anything (unless I'm completely missing something).\n. ",
    "kylebuckingham": "I'm also getting this same error:\nCMD History:\n503  npm install -g yo\n  504  npm install -g gulp\n  505  npm install -g generator-gulp-angular\n  506  ls\n  507  mkdir angularUpgrade\n  508  cd angularUpgrade/\n  509  yo gulp-angular angularUpgrade\n. ",
    "jxjj": "Apologies. I'm still getting this error when choosing none for UI framework.\nNoticed the none filename has an extra e on the end:\ngenerator-gulp-angular/app/templates/src/app/__none-index.scsse \n. Awesome. Thanks!\n. ",
    "cttobin": "Using version 0.6.2 of the generator. I had read #86  and didn't think it was the same thing, but could be wrong. In that case the template/html files are missing, for me the template seems to build correctly, but the directives' JavaScript code is nowhere to be found in dist's main.js.\n. @marani Thanks for the suggestion, but it doesn't solve the issue. As it happens, this is the only component in the project that used minify safe injection, and none of the others or none of my view controllers appear in the built main.js anyway. Even when I turn off minification in this generator's gulp/build.js, the directives and controllers don't appear. \n. Finally worked it out. Actually @Swiip had mentioned the potential issue in #86 (I must have just glanced over it since it wasn't the final solution for that issue):\n\nBy trying to reproduce your problem, I faced something which looks likes a not linked bug. When the template and the directive have exactly the same name (except the file extension), there is an overriding of the template in the js form and the directive source itself.\n\nTurns out that is exactly what is happening in my case. In my button directive for example, my files are: \ncomponents/\n    button/\n        button.js\n        button.html\n        _button.scss\nWhen the template is compiled to JavaScript it is inserted into /.tmp/ as button.js. And obviously there can't be two button.js files, so only one of them makes it to /dist/. \n@zckrs You wouldn't have reproduced my issue since you had named your script button.directive.js, meaning there would be no name clash.\nI could just rename all my directive files, but I prefer the naming convention I use currently. So to fix this issue I'm piping the template files to gulp-rename and appending a string template onto each before saving to /.tmp/. Note that I haven't updated to the latest version on GitHub so for all I know you might have done this already.\njavascript\ngulp.task('partials', function () {\n  return gulp.src('src/{app,components}/**/*.html')\n    .pipe($.minifyHtml({\n      empty: true,\n      spare: true,\n      quotes: true\n    }))\n    .pipe($.ngHtml2js({\n      moduleName: 'App'\n    }))\n    .pipe($.rename(function (path) {\n      path.basename += '_template_';\n    }))\n    .pipe(gulp.dest('.tmp'))\n    .pipe($.size());\n});\nI can see this being an issue for others, so it might be good to do something similar in the generator, but that's up to you of course. Thanks for the help. \n. ",
    "rosscdh": "Hi there, where does one find the recipes/docs?\nTrying to customise the mdThemeProvider and mdIconProvider with material-design-icons but so far no joy. seems to be specific to the generator.\n. ok seems that I did not upgrade the index.html to the new 0.11.0 layout (was built using an older version)\ncopied the new index.html and all seems to work well again.\nwas exhibiting by including index.html as the vendor.css and vendor.js.. causing angular to be included multiple times.\nFairly straight forward; but would really help to have something about that in the version release notes?\nThanks for the great generator. Might I suggest including ng-constant by default? as this helps a great deal with dealing with multiple environments.\n. ",
    "CristianMR": "I created a mini gulp module to solve this problem. But, I think that can be better, so I don't uploaded the module yet. Basically I have app.js file, and constants with array of files to load. Something like this:\njs\nangular.module('app', [ngCssInjector])\n.constant('mainViewCss', ['path/to/style1.css', 'path/to/style2.css', \n'path/to/style3.css'])\n.constant('loginViewCss', ['path/to/style2.css', 'path/to/style4.css', \n'path/to/style5.css']).etc()\nThen, cause I never injected that files on index.html, I take the files from the constant values in app.js and then just uglify and copy all files.\njs\ngulp.task('copy-extra-files', function(){\n  return gulp.src('src/app/app.js')\n    .pipe(ngContantValues())\n    .pipe(minifyCSS())\n    .pipe(gulp.dest(relativeDir));\n});\nThe project is responsible for injecting the files is in https://github.com/CristianMR/ngcssinjector\n. ",
    "srsgores": "@swiip, have you considered using something like gulp fiction to get the codebase started?\n. So is this still in the plans for the future?  I see you've closed this issue...\n. ",
    "mrowles": "The npm install --save-dev gulp-karma fixed my build as well, not sure why. I also updated by version of npm, which didn't initially do the trick.\n. ",
    "Toilal": "@zckrs I added checks for both foundation and bootstrap.\nThere's one test failing, but it's also failing in master : \n1) gulp-angular generator with other promptCase: [angular 1.2.x, jQuery 2.x.x, Restangular, UI-Router, Foundation, CSS] should pass gulp build:\n     Error: ENOENT, no such file or directory '/home/toilal/IdeaProjects/generator-gulp-angular/test/tempGulpAngular/dist/assets'\n. Great :) As i'm using foundation, and as i'm a new user for this generator, I didn't notice it was already there.\nI'll submit a PR for foundation then. Thanks.\n. I just pushed a small fix for unit test to pass, it seems good to me too. thanks\n. @Swiip I'll make some manual tests in the morning and tell you when all is OK to merge.\n. I think it's ready for merge.\n. @zckrs I've added tests, thanks for reviewing.\n. Thanks for you notes @zckrs . I've fix issues mentionned in tests, and also fixed a typo in ngMaterial test https://github.com/Swiip/generator-gulp-angular/blob/master/test/test-gulp-task-inception.mocha.js#L224\n. @zckrs I'm not sure I understand your comment. consolidate is used in generated projects from gulp. I don't think I can use any yeoman feature from gulp task in generated project.\nActually, yeoman still generates the same raw HTML templates even if a HTML preprocessor is choosen. But later, after user has generated the project, he can add *.jade files and they will be compiled automatically to .tmp directory by gulp.\n. to make it short, consolidate is a nodeJS tool (with a gulp wrapper) that acts as an adapter for many template engine. It allows to use any template engine from gulp using the same code.\n``` js\nvar consolidate = require(\"gulp-consolidate\");\ngulp.src(\"./src/*.html\", { read : false})\n    .pipe(consolidate(\"swig\", {\n        msg: \"Hello Gulp!\"\n    }))\n    .pipe(gulp.dest(\"./dist\"));\n```\nthe \"swig\" string can be replaced with any other supported template engine.\n- atpl\n- dust (website)\n- eco\n- ect (website)\n- ejs\n- haml (website)\n- haml-coffee (website)\n- handlebars (website)\n- hogan (website)\n- jade (website)\n- jazz\n- jqtpl (website)\n- JUST\n- liquor\n- lodash (website)\n- mustache\n- nunjucks\n- QEJS\n- ractive\n- swig (website)\n- templayed\n- toffee\n- underscore (website)\n- walrus (website)\n- whiskers\nTo support an additionnal engine, only thing to do is to install the nodeJS related module (for example, npm install jade, or npm install swig).\nUsing gulp-consolidate avoid to use a different gulp module and script for each template engine (gulp-jade, gulp-swig), those modules having differents API.\n. @Swiip I'll make some manual tests in the morning and tell you when all is OK to merge.\n. I've tested and fixed some issues. Also added techs entries for Jade, HAML and Handlebars. I think it's ready for merge.\n. No problem, I do it now, I have 10 minutes to kill ...\nEdit: It's a bit longer than a simple rebase, i need to fix some unit tests now. WIP.\n. @Swiip I did rebase this branch on current master, and it's working properly now.\nPlease note the change in the way npm devDependencies are added to package.json template. It's more code oriented and easier to maintain each feature npm related dependencies, with a npm object in prompts.json.\nIt would be great to improve and generalize this dependency behavior (it can be refactored and generalized to every choices). And also use the same implementation for bower dependencies.\nI'll create another branch for those changes if you are OK.\n. I see, i didn't know this has already been discussed.\nHow about adding a small \"middleware\", called \"dependencies.js\" to keep both prompts.json and template simples ? This middleware would be responsible to build dependency lists based on prompts choice, and it would be really more readable that templates conditions.\nIf you are OK with this, i can implement the \"middleware\" in this branch. If you disagree, i'll simply remove all dependencies from prompts and use yeoman templating engine to register them directly.\n. Ok, so i can start this new PR tomorrow, and i'll rebase this one to keep dependency management in template.\n. @Swiip Hope it's OK now :) I'll wait this one to be merged before starting the other PR.\n. I should have looked on yeoman issue tracker, thanks @zckrs :)\n. ok sorry :)\n. Use \"latest\" instead of null.\nhttp://stackoverflow.com/questions/18815655/how-to-set-package-latest-version-in-bower\n. For JADE, but font awesome is not included in this PR. \nI don't know if it worth including font awesome into the generator. It's fast to add font awesome manually after generation, i think it only requires running bower install font-awesome --save.\n. :+1: \n. https://github.com/Swiip/generator-gulp-angular/pull/125\nThose yo commands have been discussed, but are in suspend.\n. :+1: Great thanks !\n. Sorry, i'm wrong, bower was not installed on my computer.\n. Why do you close issues before they are fixed ? You seems nervous @zckrs ...\n. thx :p\n. Ok, so i'll have a look to angular-translate and see if it can generates po/pot files.\n. :+1: This idea is great :)\nI'll be ok to spend time to implement it after 1.0 release, and i'll add it now manually to my current project.\n. Ok i see. I was starting to check more docs about watch and plumber plugin, but see it didn't really solve the issue ... \nDoes this mean i only need to add an error handler in htmlPreprocesso plugin (markups task) ?\n. I've made a PR only for HTML Processor, because it can fail really often :)\nIt seems gulpjs 4 will include a global error handler, but for now it seems adding an error handler on each pipe that may fail is the only solution ...\n. Is there any javascript to CofeeScript/TypeScript/ES6 converter that we could use for only maintaining javascript templates and generate others ?\nI'm not used of those alternatives, and maybe you could help me @Swiip or @zckrs to build missing src/app/translate/translate.js and src/app/gettext/gettext.config.js templates in those languages.\n. yes, it's a bit fastidious but necessary i think. I'll let  you know when this PR is ready to merge, I still need to fix some small issues. Thanks for reviewing.\n. I think it's ready for merge, but it would be better to merge #249 and #249 before, and then i'll rebase this PR.\n. Build fails because of this : https://github.com/bevry/istextorbinary/issues/3. Just released 1 hour ago.\n. For the second point, I 100% agree, it's too big a painful to maintain. I'll remove all translated stuff from default generated pages and components, and drop the new languageSelect components that really adds too many lines an future maintance hell for the generator. \nFor the first point, gulp files are only required for angular-gettext (angular-translate doesn't need any build step), and it's finally only 1 new file gulp/gettext.js and some small entries in build.js and watch.js. Solution could be to drop angular-gettext support, but this library is really great, and it makes sense for a real world I18N project when translators are not the guys who codes, as it integrates nicely with translation tools like Pootle or POEdit.\nSo i'll start dropping I18N support of default generated app, and then tell me if you really want to drop angular-gettext, but it will already be a really smaller PR.\n. Done @Swiip hope it will be OK for you.\n. no problem, I understand.\n. https://blog.glyphobet.net/essay/2281 :) And it's already quite old.\n. In fact, it's generating the same order as when not using TypeScript, but this order can't work using TypeScript.\ngulp-typescript has a sortOutput option that would help to solve this issue.\n. PR is coming soon, i've found a solution specific to TypeScript.\n. :+1: \n. Test failed on TravisCI, don't know why it's working on my computer. Maybe relaunch ?\n. I'm closing in favor of #250, a more global PR for better TypeScript support.\n. @Swiip You're right, it's really ugly, especially the npm install call from gulp ... I'll try to have a closer look at this gulp plugin, but it claims it support only install command, and I also need the init command.\nI also wonder if it's really useful to install definitions files on each filechange, because it's relativelly slow ...\n. gulp-tsd doesn't do what i wan't. It can only reinstall definition files from tsd.json, which should already has been initialized and loaded by tsd init and tsd install <dependencies> ... \nI think i'll fork gulp-tsd and implement more commands, or maybe just create a new gulp-tsd-cli that directly map available tsd commands ...\n. I didn't know TypeScript before, but having those definition files based on bower dependencies is really mandatory to benefits of TypeScript features : better code assist in editor and type checking when using angularJS and any other supported dependency having its definition file available in TSD.\nAfter more reflexion, i think I can avoid creating a new gulp plugin, and just use the tsd npm package directly in gulp tsd.js file. It should not be that complex, it would avoid doing the really dirty thing npm install -g tsd task, and will replace exec calls with proper API calls against tsd module.\n. It's done @Swiip, I think it's ready now. I've also performed the merge of my 3 PRs (available here), and all seems OK after performing npm test and few manual tests.\n. Strange ... Same conclusion as you ... I'll give it a try in the afternoon.\n. It seems the JQuery Definition File already use Union Types, which is a new feature available only in latest TypeScript 1.4 version, released 3 days ago.\nOnly bumping the gulp-typescript to latest version fix the problem.\n. Rebased and bump gulp-typescript to support latest typescript features.\n. - why bother with tsd:init if we deliver a tsd.json in the first place?\nIt avoids maintaining this file.\n- can we move the generated files in .tmp/typings? I tried to change in the tsd.json but it doesn't work, it's override at each install.\nIt would be possible if dropping tsd:init, and adding tsd.json manually with the generator, because tsd init doesn't support any options (there's a TODO in tsd sources)\nSo do you want to generate the tsd.json with yeoman instead of tsd init ? So we can change this directory ?\nEDIT: ~~Maybe we could use tsd in yeoman to generate the tsd.json file, and then replace the typing path with .tmp/typings ?~~ Let's keep the same policy as package.json and bower.json for consistency and simply have the file as template in yeoman.\n. Yes, i just need to remove this line : https://github.com/Swiip/generator-gulp-angular/pull/250/files#diff-ede3eda71fe47daa7dfca48ba41656f5R35.\n. Afterall, i think it's easier to just ship tsd.json like bower.json and package.json. Go ?\n. Removing the saveToConfig disable writing of typing/tsd.d.ts ... So we can't do that ... It seems it's a weird API design issue ...\n. There's another saveBundle option that saves only typing/tsd.d.ts, so no problem, i'll do.\n. No luck, parameters existing in tsd.json are not used ... grmlmlmlml\n. I've opened an issue: https://github.com/DefinitelyTyped/tsd/issues/117. At the moment, i think we can't change this directory ...\n. @Swiip Yes, with saveToConfig option, it won't add any dependencies and hashcode in tsd.json.\nBut I think we don't need them as we are using gulp to read dependencies from bower instead of command line tsd (which only read dependencies from tsd.json).\n. @Swiip i'll make changes though ... but it won't work until tsd issue is fixed. I still think it's better not to overwrite tsd.json on each gulp tsd:install run.\n. hoho, there's a readConfig method in tsd API ... maybe maybe ...\n. It works with readConfig method.\n. I'm not sure a gulp-tsd will really be more efficient. Main problem is that tsd API is still undocumented, so reading the source code is required ... That beeing said, it's well written, and TypeScript types really help reading the code.\nBut for now it works properly, and using props.path.tmp directory.\n. @Swiip I think even if it's a bit work, specs should really be written in the langage choosen by the user, because those generated files serves as template for writing other specs for others components and features.\nI'm agree it's not required and really to much work for gulp files, but specs files should be translated too.\nAs i'm near of those concerns with my current PR, i could translate those specs files in a later PR, as i'm now more confortable with supported javascript preprocessors.\n. You want gulp serve to partially act as a proxy on /rest/* ? everything under /rest/\\* should be redirected to the Java Web service ?\n. Did you try with thegulp/proxy.jsfile ?\n. Great ! You have made me discover thisgulp/proxy.jsfile from the project, so thanks anyway :)\n. I'm sorry, there's something wrong with my regexp that breaks the feature ... i'll make another Oops PR when sure it's solved\n. The generator doesn't support thelibdirectory. You should add files in eithersrc/apporsrc/components` directory.\nMaybe an option could be added for additionnal directories ? Or simply add support for this lib directory ?\n. @Swiip how about replacing every src/{app,components}/ with `src/*/' ?\nMaybe i'm wrong, but I don't think there are real differences between those two folders, and it could make those lib and maybe other additional folders just work ?\n. So maybe it's not related to lib directory, but only Traceur option ?\n. Could you try to make the same test without Traceur option ?\n. In gulp/scripts.js there's also a /{app,components} part that should be replaced with /{app,components,lib}. \nThis gulpfile is responsible of compiling ES6 files to ES5 with Traceur, so it can be the cause of the issue.\n. The guidelines from README, https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub.\n. But it seems those guidelines have changed ! :x\n. For me, an additionnal lib directory could make sense to add external libraries that are not available in bower.\n. Please merge my PRs before starting the refactoring, those are quite bigs :)\nAfter those merge, i don't see any features missing, it's complete and already a great generator !\nSomething that should be done during the refactoring is having an easier way to manage global dependencies used by the generator. Maintaining those dependencies is quite complex for now, so here's my idea :\n- Declare all possible dependencies for all features in 2 new files : package.json and bower.json.\n- Create a new dependencies.js file that will require those central package.json and bower.json to build a list of required dependencies for selected options.\n- Use those lists to generate package.json and bower.json.\nWith this workflow, it will be easy to update or add a dependency to the generator, because dependencies declared in central files package.json and bower.json can be updated with tools like npm-check-updates and bower-update.\nIt will also avoid to manually maintain the /test/deps/bower.json and /test/deps/package.json, as central files could be used directly for this purpose.\n. @jamm maybe you should open another issue, but it's an interesting point.\n. I think it's better to not use ES6 modules as AngularJS already has modules. There's plenty of things in ES6 to have fun without having to force the usage of module, those doesn't provide anything more using angularJS 1.x.\nThat beeing said, the generator only gives a template, and user can already write the @jamm way at the moment.\n. About refactoring, there's many 'none' string values and related checking in the project. Why not just using the undefined value of JavaScript ?\n. @jamm src/index.html won't get modified by injection, you have to read the .tmp/server/index.html file after running the inject gulp task (or gulp serve).\n. It's normal, content between <!-- inject ... --> tag is replaced by gulp with dependencies.\nBut you should not add <script src=\"...\"> tags, this should be handled automatically by gulp, unless your script is not coming from bower.\n. When opening this issue, i didn't mean using WebComponents at all, only refactoring the ng-include of navbar template and its related controller into a yo-navbar directive.\n. I think it could be fixed in plugin. Related issue : https://github.com/klei/gulp-angular-filesort/issues/19\n. :+1: \n. :+1: \nI think the components directory was in older version of those guidelines, but it has been dropped. It probably didn't make sense.\n. yes, i'll remove, useless :)\n. I'm not sure protractor should be run with npm test, because it can't work on headless servers (requires chrome).\n. Won't we keep gulp test only ? Even if it's quite useless, i think it's still good practice to have a npm test command that just works, even if e2e tests are not executed with this command.\n. I think it could even be easier using return.\n. Using bind on runTest method is the easier way i think.\n. You need to create javascript files using react() first and write them to a temporary directory, and then inject them with wiredep, you can't do all in a single step.\nCreate a task to compile JSX to JavaScript ...\njs\ngulp.task('jsx', function () {\n return gulp.src([\n    paths.src + '/{app,components}/**/*.jsx'\n  ]).pipe(react())\n .dist(paths.tmp + '/jsx');\nAnd then depend from this task to wiredep generated javascript files in index.html\njs\ngulp.task('inject', ['styles', 'jsx'], function () { // Depend on jsx compile task\n....\n var injectJSX = gulp.src([\n    paths.tmp + '/jsx/**/*.js' // *.js because react() compiles to javascript\n  ]).pipe(react());\n...\nreturn gulp.src(paths.src + '/*.html')\n    .pipe($.inject(injectStyles, injectOptions))\n    .pipe($.inject(injectJSX, injectOptions))\n    .pipe($.inject(injectScripts, injectOptions))\n    .pipe(wiredep(wiredepOptions))\n    ...\n);\n...\nI didn't try, it may have caveats, but idea is there.\n. So i remove https://github.com/Swiip/generator-gulp-angular/blob/master/app/src/format.js#L203-L205 for script to be included when no js preprocessor ?\n. And what about watch task ? We don't need to run linters on each changes ?\n. @Swiip please tell me your thinkings about the current implementation.\nI've added a global gulp.context object containing variables used in scripts task. This global object is configured in watch task to support no failing on error. I think it's easier than having two distinct tasks like before (static and static:fail)\n. @Swiip No problem, just ping me when #335 is merged.\n. Sorry for delay, i'm on it.\n. I've rebased locally, but npm test fails. It also fails locally using master.\n. gulp-util is missing.\n. Ok, i needed to remove old temporary directories from test directory. Test are OK now.\n. Ready to merge I think. Note that gulp/script.js is always included now, because is contains linting even when no js pre-processor is chosen.\n. Any idea why it fails on iojs ?\n. I've just rebased this one, could you merge ?\n. I've found out why, it's because of this change: https://github.com/yeoman/generator/commit/d4f5ebc31578e87823fcfe5e248ae2ee580291ee. I'll fix (only removing the first argument on generator.run in tests)\n. @zckrs Could you restart the build please ?\n. thx\n. It seems MacOS builds strange names for tmp directories :)\nThis issue is fixed in gulp-ruby-sass master, but not available in latest stable release.\nThere's an instable 1.0.0-alpha.2 release available. So you could try npm install gulp-ruby-sass@https://github.com/sindresorhus/gulp-ruby-sass.git or npm install gulp-ruby-sass@1.0.0-alpha.2 to upgrade gulp-ruby-sass.\n. :+1: \n. The problem occurs even without Jade.\n. OK, i've placed it in fonts task instead of misc.\n. When running gulp watch mode, templates are read directly from .tmp/serve without caching them. templateCache.js is generated only with running gulp for distribution.\n. :+1: \nI'm using jade too, and currently I was using span(translate='') to avoid this issue. It's working properly with span(translate) using @phoerix patch.\n. The related task is\u00a0inject, see gulp/inject.js.\nIt runs wiredep from src/index.html and copy result file to .tmp/serve/index.html without modifing source index.html (and polluting your git repository with useless commits).\n. :+1: True\n. Will work with #279.\n. Note that it works with src/main, but doesn't work with src/main/webapp or src/main/bla/bla.\n. Sorry, I should have read the F***ing Manual :(\nWarning: The paths are also written in the index.html for the build with useref. If you want to change these paths, you also have to change the paths there in order to have the build task working.\n. :+1: \n. There's something wrong with the replacement, it's still a work in progress ...\n. OK, i've change regexp to be stronger, should be ok now ! It works in my use case using bootstrap.\n. no, my editor says it's useless (and it is).\n. I may be wrong, but I think there should be no else as javascript file must be excluded from wiredep when using ui-boostrap or angular-strap. (I'm working on foundation equivalent with angular-foundation).\nif(this.props.cssPreprocessor.extension === 'scss') {\n  this.wiredepExclusions.push('/bootstrap-sass-official/');\n}\nthis.wiredepExclusions.push('/bootstrap.js/');\n. I think else keyword should be removed in order bootstrap.js to be always excluded from wiredep unless using official boostrapComponents.\n. base directory of vynil files is paths.src + '/app/', we don't need path in filter because globling is applied from base path only. (see https://github.com/wearefractal/vinyl/blob/master/README.md#optionsbase)\n. The '<' + '%' tricks are to avoid generator template engine to interpret those lines. It must be interpretted by gulp-wrap plugin after generation.\n. i used npm install --save-dev so it reordered everything here ...\n. Should not this be a <div> ?\n. I just write this one really to fast, sorry again ...\n. @zckrs Proper diff here. I had the same problem in others PR, but fixed them too.\n. I remove this line because it's dead code, as gulp/script.js won't be included if props.jsPreprocessor.key === 'none'.\n. You could use gulp-load-plugin, and then $.util instead of gutil, to be consistent with the rest.\n. I think it's exactly why we will probably never switch to some gulp-tsd plugin :)\n. ho yes true :)\n. throw is a reserved keyword\nLe 20 f\u00e9vr. 2015 11:33, \"Mehdy Dara\" notifications@github.com a \u00e9crit :\n\nIn app/templates/_gulpfile.js\nhttps://github.com/Swiip/generator-gulp-angular/pull/279#discussion_r25061614\n:\n\n@@ -10,10 +10,16 @@ var options = {\n   dist: '<%= props.paths.dist %>',\n   tmp: '<%= props.paths.tmp %>',\n   e2e: '<%= props.paths.e2e %>',\n-  errorHandler: function(title) {\n-  failOnLintErrors: true,\n-  failOnCompileErrors: true,\n-  errorHandler: function(title, throw_) {\n\nWhy throw_ ? strange name for a variable\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/pull/279/files#r25061614\n.\n. \n",
    "jchayan": "+1 for option!!\n. @aasare Yes it turned out that the problem was the injector, the vendor files were not being injected. \nMy inject.js:\n``` javascript\ngulp.task('inject', ['scripts', 'styles'], function () {\n  var injectStyles = gulp.src([\n      path.join(conf.paths.assets, '/css//.css'),\n      path.join(conf.paths.assets, '/css/.css'),\n      path.join('!' + conf.paths.tmp, '/serve/app//*.css'),\n      path.join('!' + conf.paths.tmp, '/serve/app/vendor.css')\n  ], { read: false });\nvar injectScripts = gulp.src([\n        path.join(conf.paths.src, '/components//*.js'),\n        path.join(conf.paths.src, '/components///*.js'),\n        path.join(conf.paths.src, '/shared///*.js'),\n        path.join(conf.paths.src, '/shared//.js'),\n        path.join(conf.paths.assets, '/js//*.js'),\n        path.join(conf.paths.assets, '/js///*.js'),\n        path.join(conf.paths.src, '//.js'),\n        path.join(conf.paths.src, '/*.js')\n      ])\n      .pipe($.angularFilesort()).on('error', conf.errorHandler('AngularFilesort'));\nvar injectOptions = {\n    ignorePath: [conf.paths.src, path.join(conf.paths.tmp, '/serve')],\n    addRootSlash: false\n  };\nreturn gulp.src('index.html')\n      .pipe($.inject(injectStyles, injectOptions))\n      .pipe($.inject(injectScripts, injectOptions))\n      .pipe(wiredep(_.extend({}, conf.wiredep)))\n      .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve')));\n});\n```\nThen I updated the build tags in the index.html file for the vendor script:\n<!-- build:js(.) scripts/vendor.js -->\n<!-- bower:js -->\n<!-- run `gulp inject` to automatically populate bower script dependencies -->\n<!-- endbower -->\n<!-- endbuild -->\n. ",
    "philipmadeley": "OK, that's great it does output.  The only issue I have is with Chrome, but that's just a simple\nXMLHttpRequest problem which i can solve. Thanks for your help @Swiip and keep up the good work with Angular and Gulp! \n. ",
    "sebastialonso": "Hi. I created a project choosing Jade as the preprocessor. \nI created some html views, they work OK. But then I write them into Jade, change the extensions in both the files and the routes in index.coffee, but all get is unparsed Jade text.\nIs there something else I need to do to be able to work with Jade?\n. Tack s\u00e5 mycket!\n. I'm running with some weird issues too.\nCoffee scritpts are not live-reloading, manually deleting .tmp/serve seems to work, but only the first time. Then it's chaos\n. ",
    "codepushr": "Sorry for the dumb question but if I choose to use handlebars with angular, can I use it like server-side handlebars? Like access the variables exported with the angular scope? If so, how?\n. ",
    "malfborger": "@sebastialonso Got the same issue. Am i missing something? Do you need to configure preprocessing of jade 2 html?\n. ",
    "vko-online": "\"topcoat\": null means latest\n. How to solve this? \nI have \njs\n       gulp.task('injector:css:preprocessor', function () {\n      return gulp.src('src/app/index.scss')\n        .pipe($.inject(gulp.src([\n            'src/{app,components}/**/*.scss',\n            '!src/app/index.scss',\n            '!src/app/vendor.scss' \n          ], {read: false}), {\n          transform: function(filePath) {\n            filePath = filePath.replace('src/app/', '');\n            filePath = filePath.replace('src/components/', '../components/');\n            return '@import \\'' + filePath + '\\';';\n          },\n          starttag: '// injector',\n          endtag: '// endinjector',\n          addRootSlash: false\n        }))\n        .pipe(gulp.dest('src/app/'));\n    });\n\nThere seems no injector:css:preprocessor in master branch.\n\nWhat package is injector:css:preprocessor ?\nPlease can someone provide steps to fix this?\n. ",
    "estudiooka": "Thanks , it makes sense. \n. great will update my as well, thanks\n. thanks\n. ",
    "climboid": "Thanks @marani  for the super quick response! \nThis does get the sass file to compile and run but then I get a 404 on vendor.css\nNot sure if its related/expected?\n. Sure thing.\n.yo-rc.json file\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": null,\n        \"version\": null,\n        \"module\": null\n      },\n      \"router\": {\n        \"name\": \"angular-route\",\n        \"module\": \"ngRoute\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": \"official\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"ruby-sass\",\n        \"extension\": \"scss\",\n        \"npm\": {\n          \"gulp-ruby-sass\": \"~0.7.1\"\n        }\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      }\n    }\n  }\n}\nThe generator version I assume is latest since I simply installed the generator and ran it 2 hours ago =)\nThanks for staying on top of this! This generator is by far the most comprehensive generator for large scale angular applications.\n. Hmm, could it be maybe were I piped in the gulp rubysass source map?\ngulp.task('styles', ['wiredep', 'injector:css:preprocessor'], function () {\n  return gulp.src(['src/app/index.scss', 'src/app/vendor.scss'])\n    .pipe($.rubySass({style: 'expanded'}))\n    .pipe($.rubySass({ \"sourcemap=none\": true }))\n    .on('error', function handleError(err) {\n      console.error(err.toString());\n      this.emit('end');\n    })\n    .pipe($.autoprefixer('last 1 version'))\n    .pipe(gulp.dest('.tmp/app/'));\n});\n\n. Yup that did it! you rock man thanks a million!\n. Mmmm just realized that the protractor team goes against using phantomJS.\nhttps://github.com/angular/protractor/blob/master/docs/browser-support.md\nclosing this for now\n. Downgrading to 1.3.1 works, just tested it out. But not sure you would want to do that...\nhttps://github.com/angular/protractor/issues/1512\n. ",
    "xml": "This issue seems to remain in latest release, and I see it in a fresh demo project I installed using latest download of the generator. I know that the community is waiting on updates to other tools to permanently resolve the sourcemaps issue, but perhaps sourcemaps should be turned off by default until that happens? \nOtherwise anyone using rubysass is going to start out broken, and if they even understand what's going on, they're going to spend a good bit of time troubleshooting (yes, I did :-) before figuring out where the problem is. \n. My humble $0.02: I'd love to see a well-packaged build-time solution too, preferably with the ability to generate compiled templates for all supported languages, then toggle amongst them at runtime. But I'd think somebody would want to hammer out the details of generalizing that into a standalone module first, before trying to fold it into a generator like this one.\n(And... I definitely agree that I18n is probably best handled in the advanced options. I use it often myself, but I don't think it's quite universal enough a concern to be a default item for most devs.)\n(And... thanks guys, for an awesome tool! This is really a very, very well-done project that I'm going to get a lot of use out of.)\n. ",
    "jonathanhds": "+1\n. ",
    "andyperlitch": "+1\n. @tlvince did you ever get your test-no-module branch to fix this issue?\n. I'd be happy to take this up today if you aren't working on it. Let me know so we don't do double-work\n. @tlvince i am going to go ahead and start work on this. Hopefully you are not doing the same :D\n. I believe I have fixed it, but now I am realizing that the unit test setup does not take into account template files (i.e. gulp-angular-templatecache). I'm going to try and tackle that problem as well.\n. Ha! @tlvince I keep seeing you around here\n. This broke how gulp/proxy.js works completely. It also broke use of less (the styles.js file still looks for a paths variable, which is undefined). We need to expand our test coverage to catch stuff like this.\n. Hm... not sure what the issue is. @Swiip any ideas?\n. This and other recent issues have occurred due to #335. I am about to issue a pull request to fix this particular problem.\n. @jossemarGT I am using 0.12.0. @Swiip I have tested this myself and it appears to work fine. Here is my proxy.js file (with template comments removed and my own comments added):\n``` js\n /jshint unused:false /\n'use strict';\nvar httpProxy = require('http-proxy');\nvar chalk = require('chalk');\nmodule.exports = function(options) {\n  // the server I want to proxy to is running here:\n  var proxyTarget = 'http://localhost:3390/';\nvar proxy = httpProxy.createProxyServer({\n    target: proxyTarget\n  });\nproxy.on('error', function(error, req, res) {\n    res.writeHead(500, {\n      'Content-Type': 'text/plain'\n    });\nconsole.error(chalk.red('[Proxy]'), error);\n\n});\nfunction proxyMiddleware(req, res, next) {\n    // simply proxying api calls to my server\n    if (req.url.indexOf('/ws/') === 0) {\n      proxy.web(req, res);\n    } else {\n      next();\n    }\n  }\n// activating the middleware here \n  return [proxyMiddleware];\n};\n```\nEverything is working fine.\n. @jossemarGT alright! glad i could help. @zckrs I'll try and rebase and update.\n. @zckrs: looks like @Swiip made changes that again move away from having all gulp subfiles export functions, so yeaa.... im thinking of closing this out. Thoughts?\n. ",
    "glsee": "The same problem occurs when there is a js file that is resolved by Karma before index.js due to the alphabetical order, e.g. config.js, directives.js etc.\nI worked around it by adding paths.src + '/app/index.js' as the first dependency right after Bower dependencies.\nvar testFiles = bowerDeps.js.concat([\n    paths.src + '/app/index.js',\n    paths.src + '/{app,components}/**/*.js'\n  ]);\nin the unit-tests.js file.\n. ",
    "amrynsky": "I'm afraid I don't have permissions to merge\n. Will resend pull request based on the new sources\n. See pull request #209\n. ",
    "dsimmons": "I had a similar issue today using 6to5 (think it's probably the same thing). I was able to temporarily fix it by commenting out the uglify step in the html task of build.js:\n``` Javascript\ngulp.task('html', ['wiredep', 'injector:css', 'injector:js', 'partials'], function () {\n  var htmlFilter = $.filter('.html');\n  var jsFilter = $.filter('/*.js');\n  var cssFilter = $.filter('/.css');\n  var assets;\nreturn gulp.src('src/*.html')\n    .pipe($.inject(gulp.src('.tmp/inject/templateCacheHtml.js', {read: false}), {\n      starttag: ' inject:partials ',\n      ignorePath: '.tmp',\n      addRootSlash: false\n    }))\n    .pipe(assets = $.useref.assets())\n    .pipe($.rev())\n    .pipe(jsFilter)\n    .pipe($.ngAnnotate())\n    // .pipe($.uglify({preserveComments: $.uglifySaveLicense}))\n    .pipe(jsFilter.restore())\n    .pipe(cssFilter)\n    .pipe($.csso())\n    .pipe(cssFilter.restore())\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.revReplace())\n    .pipe(htmlFilter)\n    .pipe($.minifyHtml({\n      empty: true,\n      spare: true,\n      quotes: true\n    }))\n    .pipe(htmlFilter.restore())\n    .pipe(gulp.dest('dist/'))\n    .pipe($.size({ title: 'dist/', showFiles: true }));\n});\n```\nWith the above, I'm able to run gulp serve:dist and gulp protractor:dist successfully (whereas I wasn't previously).\nHaven't had time to figure out a more robust fix yet, but being that my vendor.js is 1.7MB without minification and with comments, it's high on my priority list :smile: \n. :clap:\nThe changes in #206 look pretty much like what I had in mind to try next -- I'll incorporate them locally either today or tomorrow and report back!\n. Just reporting back: having made the changes proposed in #206 (explicit injection), I'm able to successfully minify with no changes to build.js (using ES6 classes and 6to5). :+1: \n. ",
    "rootical": "Hey men. https://github.com/google/traceur-compiler/issues/1611 guys from Google say that the've fixed the issue. I've tried upgrading traceur and gulp traceur to the latest versions but tests are still failing as before(\n. Most likely, this was the issue. Tracuer-runtime used bind.\n. ",
    "maxehnert": "Ok thank you, #186 did fix it with: \n.pipe($.rubySass({style: 'expanded', 'sourcemap=none': true}))\n. ",
    "wb14123": "So will this be implement in the future?\n.  Is it possible to copy the files to other places and run the gulp tasks on that files?\n. Great!\n. ",
    "ant0ha": "I think editing manually dist path in every project is more terrible =)\n. Yes, Thank you!\n. How can I fix it in my current project?\n. I have solved the problem.\nI generated new structure by new version of the generator and then I copied new gulp files to the current project (package.json copied too).\n. ",
    "dpocheketa": "Thanks!\n. ",
    "Olgagr": "Was anybody able to setup this correctly ? I tried different approaches but I got errors that angular can't find module, for example: \nModule 'components/navbar/navbar.html' is not available!\nFinally, I just push fake template directly to $templateCache:\n$templateCache.put('components/navbar/navbar.html', '<div></div>');\nThis works for me.\n. @eseceve Thanks for example. Hmm, I'm not sure if this will work for me, as I don't have html files in .tmp/serve directory. My solution was exactly the same as yours, but I set preprocessor to get template files from src directory and I don't have moduleName setting for preprocessor.\n. @genu In my case it was buggy sass file. I'm using ready-to-use bootstrap theme and it seems like the author made some mistakes in code. I propose you to validate your file.\n. Aha, you're right. Thank you :)\n. I also has this error:\nINFO [karma]: Karma v0.12.31 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nWARN [watcher]: Pattern \"/Users/apple/Projects/trh-cms/src/**/*.spec.js\" does not match any file.\nWARN [watcher]: Pattern \"/Users/apple/Projects/trh-cms/src/**/*.mock.js\" does not match any file.\nINFO [PhantomJS 1.9.8 (Mac OS X)]: Connected on socket aIocVCG5s2C8nQGdLR0G with id 711462\nPhantomJS 1.9.8 (Mac OS X): Executed 0 of 0 ERROR (0.001 secs / 0 secs)\n[09:42:35] 'test' errored after 1.14 s\n[09:42:35] Error: 1\n  at formatError (/usr/local/lib/node_modules/gulp/bin/gulp.js:169:10)\n  at Gulp.<anonymous> (/usr/local/lib/node_modules/gulp/bin/gulp.js:195:15)\n  at Gulp.emit (events.js:107:17)\n  at Gulp.Orchestrator._emitTaskDone (/Users/apple/Projects/trh-cms/node_modules/gulp/node_modules/orchestrator/index.js:264:8)\n  at /Users/apple/Projects/trh-cms/node_modules/gulp/node_modules/orchestrator/index.js:275:23\n  at finish (/Users/apple/Projects/trh-cms/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n  at cb (/Users/apple/Projects/trh-cms/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:29:3)\n  at removeAllListeners (/Users/apple/Projects/trh-cms/node_modules/karma/lib/server.js:220:7)\n  at Server.<anonymous> (/Users/apple/Projects/trh-cms/node_modules/karma/lib/server.js:231:9)\n  at Server.g (events.js:199:16)\n  at Server.emit (events.js:129:20)\n  at net.js:1409:10\n  at process._tickCallback (node.js:355:11)\n. ",
    "digitalfiz": "I speak in reference to:\n\n\"This generator combines the best features of other generators like generator-angular, ngTailor and generator-gulp-webapp into an optimal workflow for starting applications with AngularJS powered by Gulp!\"\n\nAfter looking at the code there seems to be no such commands in this generator...\nI see the gulp commands for the gulp tasks but most generators including the ones this one combines have generator specific commands like yo angular:route myroute in the __generator-angular__ which generates corresponding route entries along with views and controllers.\nWould it be feasible to request some scaffolding commands? Something like yo ga:component mycomponent which would generate a new component with a similar setup as the navbar component but named mycomponent?\n. ",
    "holmesal": "Sure! Saves me a lot of time, but you've got a much better idea of the desktop/mobile breakdown for generator-gulp-angular users. --advanced might be a good place for it, or maybe --mobile at some point down the road :-)\n. ",
    "karlhorky": "Happy to help :) Nice project by the way.\n. No problem :)\n. @jtammen I usually ignore this file with .gitignore since it's a generated file.\n. ",
    "AlbertoBasalo": "Ok, I\u00b4m going to try and tell you about it. Thank you very much.\n. ",
    "coryarmbrecht": "@marlncpe , are you still having this issue?\n. Thanks, @marani , that's good to know. Apparently, my last comment didn't post. 'client' is actually set in the index.html file within the 'inject' statements, for instance: <!-- build:css({.tmp,client}) styles/app.css -->. I didn't find it because it was glossed over due to the commenting out, and I was looking everywhere else, like the gulpfiles. :)\nAlso, this was in relation to combining a server (https://github.com/Swiip/generator-gulp-angular/issues/214), and I needed to resolve some of the conflicts.\nWish I could delete the issue! https://github.com/isaacs/github/issues/253\n. ",
    "rkeshmir": "I have same error! What detail should I tell you?\n. ",
    "csablons": "I think it's a pretty useful idea :)\n. I guess he talk about the $.angularFilesort() in the 'injector:js' task.\n. In theory maybe, in fact no :)\nBy example if I write in a file :\nvar controllers = angular.module('controllers', []);\nand in another file :\ncontrollers.controller('MainCtrl', ['$scope', function ($scope){...}]);\nMy second file may be inject before my first file.\n. It's what I'm doing now.\nI like variables for simplify the visibility... but it's not a big issue :)\n. Thanks for your time.\nIf I understand, in the 2 solutions there is no automatic injection. That's right?\nIn this case I prefer just disactive the 'injector:css:preprocessor' and put my import myself. It's simple and I control the order.\n. ",
    "JG-CMASS": "While I agree a good localization feature is badly needed just be aware that these two client side solutions (gettext / translate) have some inherent drawbacks; namely performance http://blog.altoros.com/speed-up-i18n-in-angularjs.html, FOUT (Flash of Un-styled Content) and SEO index scoring. Additionally, referencing individual keys instead of a cascading reference (eg. errors.* is a bit of a pain)\nFor lighter applications this may be a reasonable trade-off however for large applications I would suggest a third, build step, alternative.\nWhat we did on a recent project (after evaluating gettext / translate) was to use Gulp Template https://github.com/sindresorhus/gulp-template as a pre-processor for translation strings which pretty much solves the above issues. Also, given that it is a complete lo_dash wrapper for build time this gave us additional power we wouldn't other wise had above and beyond simply translation.\nThat being said, it does come with drawbacks itself:\n1. You need to generate multiple files for each language\n2. You can't change language on the fly as you could the client side solution(s)\n3. The syntax <%= namespace.key %> can cause issues for various validators included with the most popular IDE's\n4. It currently can't make use of the po/pot file approach which may be necessary depending on the translation team's requirements.\nAnyways, the intent of this is not to advocate against a gettext / translate option but perhaps you might consider a build time solution to localization at some point in the future as well.\n. ",
    "jstoneky": "I have seen this issue as well (mainly on index.html) -- i think it happens when I have a syntax error or something. Thankfully I just check it back out, but its definitely a concern. I haven't started looking into it yet.\n. Awesome @zckrs , is there a commit that fixed it so I can just update my stack? I'll re-scaffold once its stable.\n. ",
    "joelim01": "@Swiip @zckrs \nI believe that this is still happening in the current version. The only warning I am seeing is a syntax error but the entire index.html file has been cleared. Here is a snippet from terminal:\n[BS] File changed: .tmp/app/index.css\n[11:39:55] Starting 'scripts'...\n[11:39:55] Starting 'wiredep'...\n[11:39:55] Starting 'injector:css:preprocessor'...\n[BS] File changed: src/app/main/main.controller.js\n[11:39:55] gulp-inject Nothing to inject into index.scss.\n/Users/jlim/angPipeSingle/src/app/main/main.controller.js\n  line 6  col 12  Strings must use singlequote.\n  line 6  col 23  Strings must use singlequote.\n  line 6  col 30  Strings must use singlequote.\n  line 7  col 12  Strings must use singlequote.\n  line 7  col 23  Strings must use singlequote.\n  line 7  col 34  Strings must use singlequote.\n  line 8  col 12  Strings must use singlequote.\n  line 8  col 23  Strings must use singlequote.\n  line 8  col 39  Strings must use singlequote.\n  line 9  col 12  Strings must use singlequote.\n  line 9  col 23  Strings must use singlequote.\n  line 9  col 33  Strings must use singlequote.\n\u26a0  12 warnings\n[11:39:55] Finished 'wiredep' after 30 ms\n. Thank you. I linked the cloned repo and everything is working for me.\n. ",
    "pirhoo": "Same issue here. How can we fix it with an existing application?\nBest (awesome generator btw),\nPierre\n. ",
    "paulchubatyy": "sorry, this was very lame. I've figured that out myself. \n. ",
    "CrankNPlank": "@marani, that'll work. That's what I was hoping to achieve.\nThanks! Closing this issue.\n. ",
    "mikeblakeney": "Material did break the template, but I think I got that fixed.\n. Could be, but I'm not exactly sure what you are asking.  Moving the original header into a md-toolbar tag made the spacing for the page content drop below the header instead of writing over it.\n. Yup... I didn't notice the md-toolbar in the navbar.html.  I think the main thing is that the md-toolbar just needed to be in the md-content\n. ",
    "erichiggins": "Nevermind me. I RTFM for useref and learned that I can modify the build path in index.html to do this, which solves my issue.\n. ",
    "mackelito": "We are using spring boot as the server and it sets a context path (the www root) everything below that path gets public.\nThat means that we will not have access to bower_components etc.. When developing \ud83d\ude15\nWhat is the main reason for having the /src/ structure?\n. Btw.. how do I run yo gulp-angular with the --app-path='.' config?\nOr is that not possible yet?\n. Ah I see.. any idea when it will be possible to use?\nI'm about to set things up so should I wait or try to do it manually? :)\n. The problem is that that if we sets src as the root (when you visit eg. localhost) you will get the index.html but the bower_components that are located at the same level as the src will not be accessible.\n. We solved it in another way but thx for the reply! :)\n. Yepp I have.. But I just get 404 on the requests.. :/\n. Damn.. it was my fault.. I set the proxyTarget to the incorrect path.. my bad..\n. Did you ever get this to work?\n. Just a question.. (I'm not that familiar with yeoman)..\nIf I download master where should I extract the files? and do I then run npm link from the same folder? \n. Just a question.. why not using the original git repo?\nhttp://github.com/google/material-design-icons/\n. Sure.. but now we are using https://github.com/zckrs/material-design-iconfont ?\nWhy I\u00b4m asking is because when trying to use the \"shopping cart\" icon I get the wrong icon.. so my guess is that the docs on http://google.github.io/material-design-icons/#icon-font-for-the-web is not valid for this package?\neven if there are things we dont need perhaps it better to use the original source?.. we still can choose to only include what is needed to the site being built :)\n. Same issue and I just ran npm -g install tsd\n. Any update on this issue?\n. +1 Same issue here\n. Any updates on this?\nWould really love to get started with typescript :)\n. Just thought it would be a nice feature since animate.css is there by default.. But not a big deal :)\n. @Swiip it should still work if using  \"Controller.$inject\" right?\nSo this would also work right?\n``` javascript\n( function() {\n    'use strict';\nangular\n    .module( 'www' )\n    .component( 'foo', {\n        templateUrl: 'app/components/foo/foo.html',\n        controller: Controller\n    } );\n\nController.$inject = [];\n\nfunction Controller() {\n\n}\n\n} )();\n```\nOr do we need to have \"/@ngInject/\" as well?\n``` javascript\n( function() {\n    'use strict';\nangular\n    .module( 'www' )\n    .component( 'foo', {\n        templateUrl: 'app/components/foo/foo.html',\n        controller: Controller\n    } );\n\nController.$inject = [];\n\n/* @ngInject */\nfunction Controller() {\n\n}\n\n} )();\n```\n. ",
    "RomFouq": "This is just an idea, but perhaps it could be possible to use js2coffee, to auto-compile js files to coffee. This avoids the pain of manually translating all these js files but also of maintaining them, since they could be automatically generated from js files.\n. Glad to know that's fixed! Thanks!\n. ",
    "alexpaluzzi": "I'll be happy to investigate further in the AM. I should mention I didn't mean that the task was failing-- it seems to be working great. It's a runtime issue when I start up the gulp server. The right files are being served and for all intents and purposes it should be working. I didn't know if I was missing some off Traceur option. \n. When I start the app using gulp serve,  I mean. \n. @toilal was my first thought, but if I put the exported library anywhere inside of /app (no matter how deep), I can get to it. \nThanks for the great work by the way you guys. This is one of best Yeoman generators in my opinion, and I've used a lot of them.\n. @toilal I did put the lib folder in the relevant tasks when I was trying to work it out. See first post, I'll try again in a few hours with a fresh start. \n@swiip we think alike. That was the last thing I tried before giving up for the day. Like you said, I've seen worse. :) Now that I think of it, I tried \"libs\" as the alternative. I'll try another in the AM. If both folder names are reserved I think I'd lose my mind.\n. @zckrs I don't think this is an edge case nor do I think it has anything to do with Angular. I'm not sure what \"default guidelines\" you're referencing. Do you mind dropping a source on that anyway? I'd be interested in reading. It's a bit surprising to me and a departure from the hands-off approach.\nI'm not looking to add folders to the scaffolding of the generator of course. This is my approach. I'm just trying to figure out why I can import from one folder and not the other. :)\n. @marani a lot of what @Toilal said is accurate. I consider components things like elements (Polymer, X-Tag), and even Angular directives or encapsulated controllers/views like what the generator is doing now. lib would be a folder with your own shared libraries.\nConvention aside, the question still remains. We can call the folder pizza if that's better. Ignoring convention entirely, I still would like to be able to import from where I would like. If we could ignore convention, that would be great. It's largely irrelevant. Not to mention the issue shouldn't have anything to do with Angular in the first place. It seems more to do with the gulp tasks in respect to traceur, the module loader, and Browserify.\n. +1\nSource maps are not working with Traceur at the moment. That's a deal-breaker.\n. This was added in #298 \n. ",
    "stryju": "i've been mixing the two with fair share of success (real-life project, but can't reveal it yet :wink:) - if you need some help let me know\n. ",
    "williamboman": "How comprehensive would it be to implement a component generator?\n. I cannot find a jshint task anywhere after scaffolding with vanilla js.\n. ",
    "vredchenko": "@Swiip Just generated a project based on this repo, have a use-case for when I'd normally use a directive, but failed to find an ES6 implementation in the generated code. Question: I've come across this: https://github.com/michaelbromley/angular-es6 - is that the recommended way?\n. @jamm Splendid, thanks!\n. Hi.\nI'm creating my factories/services in subfolders (under src/app/whatever). Here's what one of them looks like:\n'use strict';\n//ngInject\nfunction CompetenciesFactory() {\n  return {\n    foo: 'bar'\n  };\n}\nexport default CompetenciesFactory;\nThen in index.js:\n```\n'use strict';\nimport NavbarCtrl from './components/navbar/navbar.controller';\nimport LandingCtrl from './landing/landing.controller';\nimport InterviewCtrl from './interview/interview.controller';\nimport CompetenciesFactory from './interview/webdev-competencies.factory';\nangular.module('interviewReport', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngResource', 'ui.router', 'mgcrea.ngStrap'])\n  .controller('LandingCtrl', LandingCtrl)\n  .controller('InterviewCtrl', InterviewCtrl)\n  .controller('ReportCtrl', ReportCtrl)\n  .controller('NavbarCtrl', NavbarCtrl)\n  .factory('CompetenciesFactory', CompetenciesFactory)\n// etc.\n```\nHope that might help you with your issue\n. ",
    "DarrylD": "+1 same issue\n. ",
    "johnstontrav": "im wondering if my issue is related to this: https://github.com/Swiip/generator-gulp-angular/issues/150\n. Local issue. resolved.\n. ",
    "kraihn": "The replace worked for me once I moved it right below the cssFilter.restore call.\n.pipe(cssFilter)\n    .pipe($.sourcemaps.init())\n    .pipe($.minifyCss({ processImport: false }))\n    .pipe($.sourcemaps.write('maps'))\n    .pipe(cssFilter.restore)\n    .pipe($.replace('/bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n. ",
    "andyjessop": "Thanks, that now works fine.\n. ",
    "hourliert": "Same confusion here.\nMoreover, according to https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub\nComponents folder should rather be in app folder ?\n. ",
    "fubu": "What's the status of your considerations? I love your generator, but the first thing I do is usually remove the \"app\" folder - having that in the generator in the first place would be awesome!\n. Since I already changed my gulp files locally, I could provide some code. I just need to know if it's worth the effort or if you have other plans anyway ;)\n. According to the guidelines, there is no intermediate folder below the source root (here: no src/app/xy, but src/xy directly). Also note that in all examples, app.(js|css) and index.html are all on the same level (you currently have them in two different folders).\n- If you look at the first and the second example, the sampleapp (this generator's src folder) lives at the same level as e2e-tests, and directly includes app.js, index.html and all that stuff. Also, components is a first-level child.\n- The third (\"more complex\") example has the index.html on the same level as app.js, as well as the components folder and the other module folders.\n- The fourth example (\"public phonegap\") additionally shows an additional data-only directory outside of app.\nSo in my opinion, you should merge the current app folder up into src, not components down into app. To be clear, here's the layout I have in mind:\n<root>/\n \u251c\u2500 e2e/\n \u251c\u2500 gulp/\n |\n \u2514\u2500 src/\n     \u251c\u2500 assets/\n     |   \u2514\u2500 images/\n     |       \u2514\u2500 ...\n     \u251c\u2500 components/\n     |   \u251c\u2500 navbar/\n     |   |   \u2514\u2500 ...\n     |   \u2514\u2500 ...\n     \u251c\u2500 main/\n     |   \u2514\u2500 ...\n     \u251c\u2500 index.js\n     \u251c\u2500 index.css\n     \u251c\u2500 index.html\n     \u251c\u2500 vendor.css\n     \u2514\u2500 404.html\n(Note that assets does not comply with the guidelines (neither today nor with the PR), instead the guideline says to put them into either components or a seperate directory on the root level. Personally I don't mind keeping it like it is right now.)\nNow, I don't see how this structure would impede @intellix in spotting \"where to look for the code\" (the modules are still in their own folder, even a level higher up). Can you maybe elaborate?\n. IMHO the workflow-related logic is already seperated (on the root level, see gulp, e2e and the like next to src). The guidelines don't mention them, as they have an obvious place: right next to the source folder. Also, I wouldn't consider index.html workflow logic - quite the opposite, and according to the guidelines it should lie next to index.js. (If \"gulp manipulation\" matters for this, why is index.css inside app then?)\nAs of the other styleguides: I don't get why \"scotch\" puts view templates next to the controllers for modules, but doesn't do the same for the \"root module\" (app.js next to index.html, because they clearly belong together). JohnPapa's styleguide is nice, but deviates quite a bit from the guidelines, and also primarily states \"Make locating your code intuitive, simple and fast.\" - something this generator already achieves by the organizing-by-module approach, with or without the proposed change.\nI personally just don't see the point of having yet another subfolder in src to put everything in. This split seems rather random to me.\n(And don't get me wrong, your generator is still awesome!)\n. > But I think it is better that way to keep separation between the angular's code and the rest.\nWith your PR there is now only two things seperated from the \"angular code\": The assets/images and the basic HTML templates (index.html and 404.html).\nI already mentioned the assets, but please at least answer me this: index.html contains the starting point for the angular app, so why is it seperate from the app code itself? It also probably bootstraps some/most of the basic layout, but yet the styles are defined inside app? Why not put those HTML files into app as well?\nRemember that app eventually will contain a lot of other HTML files as well. (And if the risk of putting \"index.html\" into the templateCache is a concern, then there's a simple glob for that.)\n. I'm going the opposite path, injecting ng-strict-di only in the production build (which is the basis for my e2e-tests, except they hit the staging backend). For me ng-strict-di is more like a last-resort safety measure (until now it never triggered) so I never cared about the readability of the error message anyway. If that's a viable solution for you, this is how I extended the build task (with the help of gulp-dom):\n``` js\n  // ...add this to the other $.filter calls:\n  var htmlIndexFile = $.filter('index.html');\nreturn gulp.src(/.../)\n    // ...various pipe's, and then just before the HTML minification:\n    .pipe(htmlIndexFile)\n    .pipe($.dom(function () {\n      this.querySelectorAll('html')[0].setAttribute('ng-strict-di', true);\n      return this;\n    }))\n    .pipe(htmlIndexFile.restore())\n    // ...and let the minification happen...\n```\nWhen incorporating ngAnnotate into the serving pipeline the generated index.html should probably enable ng-strict-di by default as well.\n. It's true that this approach only plays well when the e2e coverage is good enough, that's why I want to investigate using ng-strict-di in development mode soon. If that works out and @Swiip thinks this would be a good addition to the generator I could probably contribute a PR.\n. I assume you are using the latest version, 0.4.0? Since gulp-dom is a wrapper around jsdom, and jsdom abandoned NodeJS support in favor of io.js support (changelog) you probably want to stick to the 0.3.1 version of gulp-dom.\n. It seems that cheerio is also quite popular and a good fit for the problem at hand. My example code above, using gulp-cheerio:\n``` js\n  // ...add this to the other $.filter calls:\n  var htmlIndexFile = $.filter('index.html');\nreturn gulp.src(/.../)\n    // ...various pipe's, and then just before the HTML minification:\n    .pipe(htmlIndexFile)\n    .pipe($.cheerio(function ($, file) {\n      $('html').attr('ng-strict-di', true);\n    }))\n    .pipe(htmlIndexFile.restore())\n    // ...and let the minification happen...\n``\n. You can pass any of the [BrowserSync options](http://www.browsersync.io/docs/options) into the [browserSync.init`](https://github.com/Swiip/generator-gulp-angular/blob/master/app/templates/gulp/_server.js#L36-L45) call.\nI for example changed the task to set the port option (depending on an environment var), so that I can run multiple instances in parallel.\nThat should be enough for your needs I think?\n. What exactly are you trying to achieve? How do you want your URL to look like in the end?\n. BrowserSync has the concept of \"local\" and \"external\" URLs when serving the content. You can specify with the open option which one to use when opening in the browser. The default is local, but you might want external together with setting a custom host (which only applies to the external URL).\n. ",
    "andrea-spotsoftware": "Is it normal to see js syntax in ts files exposed by chrome dev tools during debugging?\n. @kvetis  have you ever solved this problem? I'm on the same issue and it's driving me crazy..\n. @kvetis FYI, I switched to node-sass instead of ruby sass and the problem disappeared. It's a workaround, but at least it works.\n. +1\n@SalmonRiver could you please add some details about the replacing of awesome-typescript-loader with ts-loader?\nThank you so much.\n. +1\n. ",
    "coveralls": "\nCoverage remained the same at 93.88% when pulling 0dd5a5dfa0eebb80cec666e3963afef21d147a40 on Toilal:fix/jshint-fixes into ffb63ac3a1812903efba09d49d1f0d267b76658a on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 1a9354ab9a5b398bf59272dd7754b840945dc909 on Toilal:fix/finish-test into c19df42fca6c57ae3cb186a659c180b9608f8a5a on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 4f2a85f90c64c35981a8d8a76b47f1cb7b40c517 on Toilal:fix/finish-test into ffb63ac3a1812903efba09d49d1f0d267b76658a on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 1f98f1a6ff2f6899ff9d9fdf03c5162d20c093ec on Toilal:fix/template-cache into ffb63ac3a1812903efba09d49d1f0d267b76658a on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 0704b5a47a3d714774ec7b6f9af922c7399d5d17 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 9eab5d9eddcc7a4f11501abdada08365588c8cd8 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling fd21a32f6bd8deeb1b23b3ef8da3db9765a1c020 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 84f2fcc0e430c14775df34381931b5c30f97b456 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 63e17f59cf6c9bfdfcadc6a059d99c4b459ee4f2 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage remained the same at 93.88% when pulling 63e17f59cf6c9bfdfcadc6a059d99c4b459ee4f2 on Toilal:fix/fonts into d28665be4856427426bef44bc750ad69d621588e on Swiip:master.\n. \nCoverage increased (+0.54%) to 94.43% when pulling 14063770e7d4e7ba1456a86e5972e7b9dcee0511 on refacto-format into d28665be4856427426bef44bc750ad69d621588e on master.\n. ",
    "kanitw": "+1\n. ",
    "volodchenkov": "Merge it please!\n. And you broke gulp wiredep command :(\n. Ok. Thanks.\n. ",
    "npearson72": "That's perfect, thanks!\n. Never mind, I realize now it was because I removed the inject tags in the index.html. Thanks. \n. ReferenceError: replace is not defined\n. Turns out it was $.replace\nAnd thanks, that got me half way there. I also had to modify the fonts task like this:\ngulp.task('fonts', function () {\n  var files = $.mainBowerFiles();\n  files.push('src/assets/fonts/**/*');\n  return gulp.src(files)\n    .pipe($.filter('**/*.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest('dist/fonts/'));\n});\nBasically had to append my fonts directory to the array the $.mainBowerFiles() spits out.\n. ",
    "nadavelyashiv": "Hi, \nI'm sorry, I'm also new to gulp and I just can't figure out this issue.\nWhen I use 'gulp serve:dist' my $templateCache is working well, since it is concatenated to app.js.\nBut when I use 'gulp serve' (meaning, serving the html from .tmp), I can  see the templateCacheHtml.js file in  /.tmp/partials, but it is not injected where it should be (to my understanding, at starttag  inject:partials ), and therefore my $templateCache has no templates (when I use 'get' function).\nif I add it manually to the html file, it works fine.\nHow can I fix it in the gulp scripts?\nThank you,\nNadav\n. ",
    "maciej-gurban": "I'd be interested in an answer as well. Is there an easy fix to populate $templateCache also in when running gulp serve (not :dist)? \nThe application might actually depend on $templateCache to be there for some business logic, so at least having an option to cache the templates would make sense. Is there any chance you could suggest a solution to this?\n. ",
    "OvidiuGuta": "+1\nGulp-sourcemaps would be great since it is the recommended recipe for gulp-traceur, but I'm not sure that after browserify does it's job those will still work (even if you enable debug mode).\nIn another project I've used the traceur transform for browserify and in debug mode that generated sourcemaps with no hustle. \nP.S. Great job with the generator  and thank you for making my life easier.\n. ",
    "disolovyov": "@zckrs Looks like #398 is unrelated, as it deals with style sourcemaps, yes?\n. ",
    "drock07": "I'm having a similar problem except that it's not including angular.js in the vendor.js file, which is breaking everything.\n. I figured out my problem. A js file that was included before angular.js was missing \";\" at the end of its module statement. The js file was auth0-lock.js from Auth0 (auth0/lock), and it looks like they might be using browserify, which, when converting the \"require\" statements into browser-ready javascript, left the final semicolon off. \nSwiip, it's worth noting this if you're planning on incorporating browserify into the generator.\n. ",
    "koraybalci": "Awesome, thanks a lot. Documentation about wiredep was misleading then.\nCheers.\n. ",
    "vmlf01": "Have you tried running npm install / bower install again? Maybe you are missing a dependency\n. ",
    "mohsen1": "I vote no for this. Many people don't care about valid HTML anymore.\n. I think it should auto-fix. The preset can be selected by user or be the one that is being used for this project.\n. Yes. Thanks!\n. My initial project drifted a lot from code generated by gulp-angular. If you've fixed it and you know it then lets close it :smile: \n. Beautiful! \n. It would be nice to split the scripts task int scripts:app and scripts:test then. It open up the possibility of using two different compiled languages for each\n. React? Then you need to rename this. I've been using this generator a lot lately. Thanks for this, it's great! \nI'm available for beta testing if you need one. \n. ",
    "blackfyre": ":+1: \n. ",
    "zhenyi2697": "Thanks for your quick reply !\nYou are right, I didn't configure it right in the bower.json file. It works now.\nThanks very much for your work on this project. Merci beaucoup et bonne continuation :+1: \n. ",
    "cosminonnet": "OK, thanks.\n. ",
    "goncalomarques": "@lancevo How did you solve it?\n. Thats a little bit intrusive, but I guess it works for you.. I think my variation of the issue solved itself when I stopped injecting unmet dependencies. angular-filesort must've been misbehaving when so. Probably a good thing to check on later.\n. ",
    "18601673727": "Nice PR, we need this very much, could someone merge this?\n. ",
    "jamesbehr": "@zckrs Fixed Travis build, but coverage still pending\n. No problem. This should fix #65 btw\n. Yes. Sorry, I forgot to mention that.\n. Your typo confused me. Go ahead and close this, I just tested master and it works fine. Problem only exists in v0.9.1\n. ",
    "CodeOneTwo": "Can confirm this!\n. ",
    "jamesdixon": "Thanks. I'm guessing you're not using Webstorm in this configuration?\n. Appreciate the quick reply. If I figure it out, I\u2019ll make sure to post it here for others.\nFrom:\u00a0Matthieu Lux notifications@github.com\nReply:\u00a0Swiip/generator-gulp-angular reply@reply.github.com>\nDate:\u00a0February 6, 2015 at 1:27:31 PM\nTo:\u00a0Swiip/generator-gulp-angular generator-gulp-angular@noreply.github.com>\nCc:\u00a0jamesdixon jim.w.dixon@gmail.com>\nSubject:\u00a0 Re: [generator-gulp-angular] Debugging in Webstorm? (#321)  \nI don't use webstorm no, sublime or atom. When I debug, I use chrome dev tools. It should be a solution to connect the webstorm debugger with the serve task, but I don't have experience with this...\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "mthomson-csi": "I had to set the following setting in WebStorm to fix the performance issue.  The performance issue wasn't related to the generator or TypeScript compilation.\nDisable Any Breakpoint debugging for V8\n- Help->Find Action...\n- Type Registry and enter\n- Uncheck \"js.debugger.v8.use.any.debugger\"\nFor debugging TypeScript, enable TypeScript Compiler\n- Settings->Languages & Frameworks->TypeScript\n- Check Enable TypeScript Compiler\n- Use node from nvm install\n- Use tsconfig.json\nHere are the settings I used for configuring the debug configuration:\n- Configuration:\n  - Type: Node.JS\n  - Name: Debug\n  - Node Interpreter: /usr/bin/node\n  - JavaScript file: /usr/lib/node_modules/gulp/bin/gulp.js\n  - Application parameters: serve --color\n- Browser / Live Edit\n  - After Launch: Checked\n  - Url: http://localhost:3000/\n  - with Javascript Debugger: Checked\n. ",
    "dts": "+1, but this is happening to me for js syntax errors.\n. Fair enough, but BrowserSync does not appear to be designed to be extensible in any meaningful way, which limits its usefulness for me.\n. ",
    "Tallyb": "wow! that was fast. any tip on how to locate the bad annotation? \n. I do not use a pre processor. I solved it by explicitly annotating everything, and then it could not find my HTMLs. Any idea? \n. I am afraid not. I annotated everything, and now I cannot find the relevant code (also, it was a one off so I am no longer working on this project). \n. remove the app/ so your path should be 'get-quote/get-quote.html'\nI had the same :) https://github.com/Swiip/generator-gulp-angular/issues/327\n. I have a similar structure. I suggest that you open the generated scripts file (app-some number.js) and search for $templateCache - see if it exists and what paths are shown there. it will look something like: \nfunction(e){e.put('partialName.html' ,)\nAlso search in the scripts file to see if your 'partialName.html' is actually included. \n. thanks. worked well.\n. A personal word: this is my first merged pull request on github. Not much, but it is a start, and hopefully more will follow... \n. same issue. I bypassed it as following: \nmodule.exports = function() {\n    return [proxyMiddleware]; // enable this line if you want a proxy\n//  return []; //enable this line if you do not want a proxy\n};\nand then in server.js: \nvar middleware = require('./proxy')(); //added a function call (namely paranthesis).\n. Care to share your code? \n. Not sure I get it, I might be missing something. \nI added under assets/fonts/myFonts folder. \nIt contains the font files (woff, svg, eot...). This folder also contains the font-face declaration in a css file which are pointing to the same folder. \nHow do I use them during development (serve/watch)?\n. Thank you ! you are really great and helpful. \nI will try the first solution, probably, as I do not want to mess with the gulp files (to support future updates). \nIs it worth a PR for supporting user fonts from assets folder? \n. ",
    "360disrupt": "The solution is:\n1)\n install new package & uninstall old one\nsudo npm install gulp-haml --save --dev && npm unistall hamljs --save --dev\n2)\nChange the code in markup.js\n```\nvar haml = require('gulp-haml');\ngulp.task('markups', function() {\n  function renameToHtml(path) {\n    path.extname = '.html';\n  }\nreturn gulp.src(paths.src + '/{app,components}/*/.haml')\n      .pipe(haml({ext: '.html'}))\n      .on('error', function handleError(err) {\n        console.error(err.toString());\n        this.emit('end');\n      })\n      .pipe(gulp.dest(paths.tmp + '/serve/'));\n});\n```\nI guess $.haml should also work\n. Solution 1:\nI did this in the styles.js:\n```\nvar series = require('stream-series');\ngulp.task('styles', function () {\nvar preInjectFiles1 =  gulp.src([paths.src + '/app/normalize.scss'], {read: false});\nvar preInjectFiles2 =  gulp.src([paths.src + '/{refills}/*/.scss'], {read: false});\n...\n```\nhere you can probably apply regex expressions etc.\n& later:\n.pipe($.inject(series(preInjectFiles1, preInjectFiles2, injectFiles), injectOptions))\nYou can group some scripts. Otherwise I would recommend to exclude scripts where the order is important and to add them manually with imports.\nSolution 2:\nI guess s.th.like this may also work:\nvar injectFiles = gulp.src([\n    paths.src + '/{app,components}/**/*.scss',\n    '!' + paths.src + '/app/*_exclude.scss',\n    '!' + paths.src + '/app/index.scss',\n    '!' + paths.src + '/app/vendor.scss'\n  ], { read: false });\nwith adding imports to your files:\n@import \"myFileA_exclude.scss\";\nPlease be aware that you also have to exclude the files if you use the first solution!\n. If you want to use variables after the import e.g. import a _colors.scss into your index.scss than you need to set read:true\n. The solution is to add a return in the last line of each service. This prevents it from returning the function which seems to cause the bug. \n. ```\nmyDialog = angular.module(\"myDialog\")\nmodule = angular.module(\"quoking\", [ \"ui.router\", \"myDialog\", \"af.angular-socialshare\", \"af.facebook\", \"authUser\" ])\nauthUser = angular.module(\"authUser\", []).service(\"authUserService\", [ ->\n  @authUser = \"undefined\"\n  @saveUser = (user) ->\n    @authUser = user\n@getUser = ->\n    @authUser\n@getToken = ->\n    @authUser.token  if @isLoggedIn() #TODO\n@isLoggedIn = ->\n# TODO ACTIVATE\nif typeof @authUser isnt \"undefined\" and @authUser isnt `undefined` and @authUser isnt \"\"\n  true\nelse\n  false\n\n@saveRegisteredUsers = (registeredUsers) ->\n# console.log(registeredUsers);\n@registeredUsers = registeredUsers\n\n@getRegisteredUsers = ->\n    @registeredUsers\n  return\n ])\n... config etc inbetween..\nPROD\nmodule.run ($rootScope, $state, authUserService, $FB) ->\n  $FB.init \"475092975961783\", \"./app/Social/FB-Channel.html\"\n#Listens for state changes and redirects User if he is not logged in\n  $rootScope.$on \"$stateChangeStart\", (event, toState, toParams, fromState, fromParams) ->\n#After login send user to share\nif toState.name is \"home\" and authUserService.isLoggedIn()\n  event.preventDefault()\n  $state.go \"share\"\n  true\n\n#If user is not logged in and has no permission send him back to login\nelse if typeof toState.data isnt \"undefined\" and toState.data.auth is \"LoggedIn\" and not authUserService.isLoggedIn()\n  event.preventDefault()\n  $state.go \"home\"\n  false\nreturn\n\nTODO define Admin States\n```\nWithout the last return in the above coffee my service is broken. I just translated my code via \nhttp://js2coffee.thomaskalka.de/\nI first thought it is related to either the loading order or that he wraps the js into anonymous functions. But as you see the first line is commented, which I first thought might be necessary:\nhttp://stackoverflow.com/questions/28320122/concatenate-javascript-in-anonymous-function-with-gulp\n. Sorry about that, before you know the answer it's hard to say where the cause comes from. I thought first it may be related to that all JS are wrapped into anonymous functions. \n. yes please close\n. ",
    "phedinkus": "I know you changed it in the main gulpfile but it seems other modules depend on hamljs. I get a similar error coming from gulp-consolidate:\nError: Cannot find module 'hamljs'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Function.exports.haml.render (/Users/kt/Code/beth_bot/generalizer/client/node_modules/gulp-consolidate/node_modules/consolidate/lib/consolidate.js:386:54)\n    at /Users/kt/Code/beth_bot/generalizer/client/node_modules/gulp-consolidate/node_modules/consolidate/lib/consolidate.js:146:25\n    at /Users/kt/Code/beth_bot/generalizer/client/node_modules/gulp-consolidate/node_modules/consolidate/lib/consolidate.js:99:5\n    at fs.js:272:14\n    at /Users/kt/Code/beth_bot/generalizer/client/node_modules/karma/node_modules/graceful-fs/graceful-fs.js:104:5\n    at /Users/kt/Code/beth_bot/generalizer/client/node_modules/wiredep/node_modules/bower-config/node_modules/graceful-fs/graceful-fs.js:104:5\nAny thoughts?\n. I installed the generator from scratch, changed the main template to the haml syntax and haml extension and ran gulp serve. The error comes from a node module required by the generator. I had a hunch that you aren't seeing the error because you have the hamljs module still installed on your system. So I installed it manually with npm install hamljs and ran gulp serve and the error went away.\n. I have the same problem. \nPhantomJS 1.9.8 (Mac OS X) NavigationServices should define more than 5 awesome things FAILED\n    Expected true to be false.\n        at /Users/kt/Code/beth_bot/generalizer/client/src/components/services/navigation_service.spec.js:13\n        at invoke (/Users/kt/Code/beth_bot/generalizer/client/bower_components/angular/angular.js:4203)\n        at workFn (/Users/kt/Code/beth_bot/generalizer/client/bower_components/angular-mocks/angular-mocks.js:2436)\nPhantomJS 1.9.8 (Mac OS X): Executed 1 of 1 (1 FAILED) ERROR (0.002 secs / 0.012 secs)\n[11:37:37] 'test' errored after 1.63 s\n[11:37:37] Error: 1\n    at formatError (/usr/local/lib/node_modules/gulp/bin/gulp.js:169:10)\n    at Gulp.<anonymous> (/usr/local/lib/node_modules/gulp/bin/gulp.js:195:15)\n    at Gulp.emit (events.js:95:17)\n    at Gulp.Orchestrator._emitTaskDone (/Users/kt/Code/beth_bot/generalizer/node_modules/gulp/node_modules/orchestrator/index.js:264:8)\n    at /Users/kt/Code/beth_bot/generalizer/node_modules/gulp/node_modules/orchestrator/index.js:275:23\n    at finish (/Users/kt/Code/beth_bot/generalizer/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n    at cb (/Users/kt/Code/beth_bot/generalizer/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:29:3)\n    at removeAllListeners (/Users/kt/Code/beth_bot/generalizer/node_modules/karma/lib/server.js:220:7)\n    at Server.<anonymous> (/Users/kt/Code/beth_bot/generalizer/node_modules/karma/lib/server.js:231:9)\n    at Server.g (events.js:180:16)\n. I also noticed I wasn't getting any output from Karma in console. \n\nI took a look at the karma config and noticed that autoWatch is set the false. I changed it and reran gulp test:auto and now I have output in my console: \n\nIt also now reruns when I change my tests: \n\n. I reinstalled the generator, created a new project and ran gulp test:auto and got a completely new error:\n\u25b6 gulp test:auto\n[11:24:32] Using gulpfile ~/Code/client/gulpfile.js\n[11:24:32] Starting 'markups'...\n[11:24:32] Starting 'scripts'...\n[11:24:32] Starting 'styles'...\n[11:24:33] Finished 'markups' after 796 ms\n[11:24:33] gulp-inject Nothing to inject into index.less.\n[11:24:33] all files 3.4 kB\n[11:24:33] Finished 'scripts' after 918 ms\n[11:24:35] Finished 'styles' after 2.3 s\n[11:24:35] Starting 'inject'...\n[11:24:35] gulp-inject 1 files into index.html.\n[11:24:35] gulp-inject 3 files into index.html.\n[11:24:35] Finished 'inject' after 105 ms\n[11:24:35] Starting 'watch'...\n[11:24:35] Finished 'watch' after 19 ms\n[11:24:35] Starting 'test:auto'...\n/Users/kt/Code/client/gulp/unit-tests.js:39\n          .concat(_.pluck(files, 'path'))\n          ^\nTypeError: Cannot read property 'concat' of undefined\n    at /Users/kt/Code/client/gulp/unit-tests.js:39:11\n    at ConcatStream.<anonymous> (/Users/kt/Code/client/node_modules/concat-stream/index.js:36:43)\n    at ConcatStream.emit (events.js:129:20)\n    at finishMaybe (/Users/kt/Code/client/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_writable.js:460:14)\n    at endWritable (/Users/kt/Code/client/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_writable.js:469:3)\n    at ConcatStream.Writable.end (/Users/kt/Code/client/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_writable.js:436:5)\n    at DestroyableTransform.onend (/Users/kt/Code/client/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:523:10)\n    at DestroyableTransform.g (events.js:199:16)\n    at DestroyableTransform.emit (events.js:129:20)\n    at /Users/kt/Code/client/node_modules/gulp/node_modules/vinyl-fs/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:965:16\n. To clarify, I didn't touch any of the generated project. \n. ",
    "sb8244": "I had to npm install hamljs to get this working with a new generated project\n. It works as import './splash'; because angular has its own dependency system. When you import splash, that code is inserted before the code that uses the splash module, and it all works\n. I disagree @vucalur. I think that index.module.js might be a bad name, as it is more like an application entry-point. Apps built with this generator seem like they should have a single entry point (per application) that loads all modules and is targeted by scripts. However, the modules themselves shouldn't be targeted by scripts because it produces 1 artifact per module, instead of 1 artifact per application.\nFor instance, if you have 30 modules over 2 applications (admin + webapp), then you only want 2 artifacts from the build process, not 30 or 32.\nThat is a bigger idealogical change on my part, where index.module.js is replaced by app.entry.js and, if you wanted multiple entries, then gulp can target **/*.entry.js. The entry imports the modules (which it should because it is  the application and must declare its dependencies).\nI would love to see other peoples' ways of doing it. @vucalur and myself clearly have different ideas, and I'm sure we will see a few other suggestions.\n. ",
    "krzksz": "Oh, I see. I'm almost certain you're missing bower:css comment then. It is also worth mentioning that vendor files get injected only to dist/index.html in contrast to grunt-webapp which puts them into app/index.html too.\n. ",
    "jpoiri": "I updated the to \n$stateProvider.state('quote', {\n    url: '/',\n    templateUrl: 'get-quote/get-quote.html',\n    controller: 'getQuoteCtrl'\n  });\nHowever still not finding the file. How its your app structure?\n. I resolved the issue it was due to unclosed spam tag\n. ",
    "highfivedenis": "Done, have you look at the test :  test/test-files-generate.mocha.js L1041\n. @Swiip : jobs done\n. ",
    "martyla": "I did something like:\nsh\ngulp.task('html', ['inject', 'partials'], function () {\n...\nreturn gulp.src(paths.tmp + '/serve/*.html')\n  ...\n  .pipe($.replace('../bower_components/bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))\n  .pipe($.replace('../bower_components/fontawesome/fonts', 'fonts'))\n  ...\nAs the fonts should be automatically copied to dist/fonts.\nAlso to get the bootstraph glyphicons working for gulp serve:dist (as above) I had to replace:\nsh\n.pipe($.replace('../bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))`\nwith:\nsh\n.pipe($.replace('../bower_components/bootstrap-sass-official/assets/fonts/bootstrap', 'fonts'))`\nWhich might be an issue with the generator or I'm just doing something wrong ...\n. Also my bad in my previous comment. I was using an different version of font awesome that didn't have the fonts declared in bower.json. In the current version I didn't need to declare anything extra and it magically added everything from ./bower_components/font-awesome.\nOne thing though, is the new font awesome causes an error if the .woff2 font isn't copied to the ./dist/fonts and I had to add it manually:\njavascript\ngulp.task('fonts', function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('**/*.{otf,eot,svg,ttf,woff,woff2}'))\n...\n. ",
    "domoritz": "Awesome. It's all working now. The scss import looks like\nscss\n$fa-font-path: \"../../bower_components/fontawesome/fonts\";\n@import \"../../bower_components/fontawesome/scss/font-awesome.scss\";\nand I had to add a step to the html pipeline\njs\n.pipe($.replace('../../bower_components/fontawesome/fonts', '../fonts'))\n. Our project is here. https://github.com/uwdata/polestar\n. ",
    "bsides": "@domoritz I'm sorry, but how did you achieve to get it working in development? Could you post the complete steps? Thank you\nEdit - also, could you say which version of font-awesome was used? Mine here was installed by bower install fontawesome --save and it only lists the less/scss in the main bower part.\nEdit 2 - Ok, for development I just did what you said up here with a little change to the path since mine has a dash, so:\n$fa-font-path: \"../../bower_components/font-awesome/fonts\";\n@import \"../../bower_components/font-awesome/scss/font-awesome.scss\";\n...and now it works on development, but still doesn't for production (gulp build), would you mind helping me around?\n. +1\nPS - I'm also working on it\n. ",
    "claboran": "To get it working for serve:dist a workaround could be found at issue #637.\nBest regards,\nChris\n. @dgoncalves1 : Did it work now for serve:dist? \n. @steeren Thanks for solution I struggled while building the dist for production. The fonts did not get copied over to dist/fonts. I included also font-awesome. with an extra replacement. So everything is working now. I use font-awesome in conjunction with LESS and is working now as well :-)\nHere is my extension:\n``` javascript\n// fix to hard copy fonts from Bootstrap as they don't include their fonts in their bower.json file\ngulp.task('copy-bs-fonts', function(){\n  return gulp.src(conf.wiredep.directory+'/bootstrap/fonts/*.{eot,svg,ttf,woff,woff2}')\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n// fix to hard copy fonts from font-awesome as they don't include their fonts in their bower.json file\ngulp.task('copy-fa-fonts', function(){\n  return gulp.src(conf.wiredep.directory+'/font-awesome/fonts/*.{eot,svg,ttf,woff,woff2}')\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n// Only applies for fonts from bower dependencies\n// Custom fonts are handled by the \"other\" task\ngulp.task('fonts', ['copy-bs-fonts', 'copy-fa-fonts'],function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('*/.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n...\n  return gulp.src(path.join(conf.paths.tmp, '/serve/*.html'))\n...\n    .pipe($.replace('../../bower_components/font-awesome/fonts/', '../fonts/'))\n...\n```\n. After some time I checked my problem a couple weeks ago with missing fonts for font-awesome. The only way to overcome the issue is still copy it over to 'dist' with an own gulp-task, what is not nice.\n``` javascript\n// fix to hard copy fonts from font-awesome as they don't include their fonts in their bower.json file\ngulp.task('copy-fa-fonts', function(){\n  return gulp.src(conf.wiredep.directory+'/font-awesome/fonts/*.{eot,svg,ttf,woff,woff2}')\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n// and replace the bower path at the html pipeline\n.pipe($.replace('../../bower_components/font-awesome/fonts/', '../fonts/'))\n```\nit is working now for serve AND serve:dist\n. ",
    "disharmonized": "Just in case, for LESS solution will be:\n- index.less:\n@import \"../../bower_components/font-awesome/less/font-awesome.less\";\n$fa-font-path: \"../../bower_components/font-awesome/fonts\";\n- gulp/build.js\n.pipe($.replace('../../bower_components/font-awesome/fonts', '../fonts/'))\n. ",
    "adriangordon1231": "+1\n. Why not just use the cdn:  https://www.bootstrapcdn.com/fontawesome/\n. ",
    "dannygoncalves": "@claboran i tried that solution but still not sure how to do with font-awesome, how am i supposed to do it? is there any fix or do i have to manually copy the font awesome folder?\n. @claboran haven't had the time to do it, as soon as I can I'll provide feedback.\n. I updated using NPM and tried to install font-awesome again but still the fonts folder doesn't get added in dist.\n. ",
    "danieldiazastudillo": "@dgoncalves1 I've been struggling with this and my solution was:\n1. Make the SCSS imports:\n$fa-font-path: \"../../bower_components/fontawesome/fonts\";\n@import \"../../bower_components/fontawesome/scss/font-awesome.scss\";\nWith this step you'll see FA icons in dev mode (src).\n2.In gulp/build.js there's a task called html, you must add this pipe:\n.pipe($.replace('../../bower_components/fontawesome/fonts', '../fonts'))\nSo far, it's the solution proposed in recipes and everything works great in dev mode BUT when you run the BUILD task it won't copy FA fonts to the dist/fonts folder because they must be declared in your bower.json as an override like this:\n\"font-awesome\": {\n      \"main\": [\n        \"scss/font-awesome.scss\",\n        \"fonts/*\"\n      ]\n}\nI used a wildcard, inside the file Bootstrap fonts are declared explicitly, that's your choice. Hope this helps.\n. ",
    "j0hnsmith": "It took me a while to get Font Awesome working so I'm adding what I did (I think things have changed since some comments above were written).\nbower install --save fontawesome  // gives me \"font-awesome\": \"fontawesome#~4.4.0\"\nserve\nIn index.less, only update the @fa-font-path variable (less) or $fa-font-path (I guess) for sass, no manual imports are necessary.\n...\n// endbower\n@fa-font-path: \"../../bower_components/font-awesome/fonts\";\n...\nserve:dist\nModify the gulp fonts task to copy font files from bower_components (as suggested in https://github.com/Swiip/generator-gulp-angular/issues/849#issuecomment-149094381), and also modify the gulp html task to fix the path to the fonts.\ngulp.task('html', ['inject', 'partials'], function () {\n...\n    .pipe($.replace('../../bower_components/font-awesome/fonts', '../fonts/'))\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/')))\n...\n. ",
    "mattarau": "Hey guys, \nI've been dealing with an issue that might be related to this. I'm using the latest release of the generator that already includes the .pipe($.replace('../../bower_components/font-awesome/fonts', '../fonts/')) line in the html task of the build.js file.\nWhen running both from source or from dist, the ttf, woff and woff2 Font Awesome font files retrieve a 404 error on all browsers and no other font type (eot and svg) is loaded. The weird thing is that the icons are shown in all browsers but Firefox.\nWhen building the project I can't find the fonts in the /dist/fonts/ folder which makes me wonder how can the broswers (but Firefox) show the icons if the fonts are not even there.\nI found some known issues with Firefox that make the icons not appear in it, but they are all related to CDN Access Rights, but since I'm not using any CDN, I thought that I should ask here first.\nI hope someone can help.\nCheers!\n. Yes, @zckrs, it's working now. Thanks!\nDo you know if there's an easy way to update an in progress project?\n. Closing, since the issue is not part of the project anymore.\n. @zckrs Thanks.\n. Well, considering that I see this generator as generic enough to be used by anyone, with a lot of options that are used probably by just a few people, and that this change wouldn't affect the current workflow, don't you think that it should be considered?\n. @grahamtwine You don't have mocks in your production code. What I suggested is to ONLY exclude them when building for production. Currently they are excluded in any case and used only for tests.\n. ",
    "poliveira89": "I have done what @danieldiazastudillo told but for LESS, and did not worked for me.\nI have added this to my index.less between the parts that will be update with gulp tasks:\n``` LESS\n// bower:less\n// endbower\n[...]\n@fa-font-path: '../../bower_components/font-awesome/fonts';\n@import '../../bower_components/font-awesome/less/font-awesome.less';\n[...]\n// injector\n// endinjector\n```\nAnd then on html gulp task I added into the pipe right after the line on bootstrap fonts:\njs\n    .pipe($.replace('../../bower_components/bootstrap/fonts/', '../fonts/'))\n    .pipe($.replace('../../bower_components/font-awesome/fonts/', '../fonts/'))\nAnd still does not work! :(\nDEBUG specifications:\nbash\n$ gulp --version\n[01:25:52] CLI version 3.9.0\n[01:25:52] Local version 3.9.0\nbash\n$ npm --version\n2.13.4\nbash\n$ bower --version\n1.5.3\nbash\n$ node --version\nv0.12.7\nAt last, the generator generator-gulp-angular@0.12.1\n. @olimungo you ONLY edited the bower.json?\nAnd are you using CSS, LESS or SASS?\n. @olimungo but for what I have been looking for on \"fonts\" task with gulp-debug the problem is that the fonts files is not delivered by $.mainBowerFiles() so when the stream reaches the .pipe($.filter('**/*.{eot,svg,ttf,woff,woff2}')) it's handling 0(zero) files :/\nBut if I \"override\" it like you say, in theory the problem will be the same... :/\n. @mkalpana the way you are doing it will copy bootstrap font files 2 times, because they have the files duplicated on fonts/ and on dist.\nI have this way:\njs\nreturn gulp.src(['./bower_components/bootstrap/fonts/*.{eot,svg,ttf,woff,woff2}', './bower_components/font-awesome/fonts/*.{eot,svg,ttf,woff,woff2}'])\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\nBut does not work when I do gulp serve but works with gulp serve:dist :/\nAt this moment, I know that I must look into, BrowserSync options... if I have any update, I will edit this comment...\n. My problem with the development version served by gulp serve it's because is not overlaying variables.\nOn index.less I have: @fa-font-path: '../../bower_components/font-awesome/fonts/';\nAnd the original variables.less from FontAwesome there is: @fa-font-path:        \"../fonts\";\nAfter styles gulp task being executed the generated CSS contains the wrong path: \ncss\n@font-face {\n  font-family: 'FontAwesome';\n  src: url('../fonts/fontawesome-webfont.eot?v=4.4.0');\n  src: url('../fonts/fontawesome-webfont.eot?#iefix&v=4.4.0') format('embedded-opentype'), url('../fonts/fontawesome-webfont.woff2?v=4.4.0') format('woff2'), url('../fonts/fontawesome-webfont.woff?v=4.4.0') format('woff'), url('../fonts/fontawesome-webfont.ttf?v=4.4.0') format('truetype'), url('../fonts/fontawesome-webfont.svg?v=4.4.0#fontawesomeregular') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\nI have made a test with LESS, and the problem it's LESS. Did not overlay variables. I created two files file1.less and file2.less.\n``` less\n// file1.less\n@var1: #000000;\n.stuff {\n    background-color: @var1;\n}\n```\n``` less\n// file2.less\n@var1: #c1c2c3;\n@import \"file1.less\";\n```\nThe compiled CSS file:\ncss\n.stuff {\n  background-color: #000000;\n}\nSo, being a problem with LESS maybe I will check in their issues.\nJust thought would be nice to share what I found. :smile: \n. ",
    "olimungo": "Instead of modifying any file in the gulp build, I added the following section to my project's bower.json:\n\"overrides\": {\n    \"font-awesome\": {\n      \"main\": \"css/font-awesome.css\"\n    }\n  }\n. @poliveira89 Yes, that's what I like in this solution. And I used Sass with Node. \n. ",
    "wonsikin": "@danieldiazastudillo Thanks. Now my project works well after running build task.\n. 1. Install babel-polyfill;\n2. Import it at the top of your application entry point.\nMore information\n. ",
    "alaksandarjesus": "Its not working my dist folder. My console is throwing this error.\nhttp://localhost:3000/bower_components/font-awesome/fonts/fontawesome-webfont.woff2?v=4.4.0 Failed to load resource: the server responded with a status of 404 (Not Found)\nI added in gulp/build.js\n    .pipe($.replace('../../bower_components/fontawesome/fonts', '../fonts'))\nIn index.scss\n$fa-font-path: '../../bower_components/font-awesome/fonts';\n@import '../../bower_components/font-awesome/scss/font-awesome.scss';\nIts working fine in serve but not in build\n. I changed \nexclude:  [/\\/bootstrap.js$/, /\\/bootstrap-sass\\/.*.js/, /\\/bootstrap.css/], \nto \nexclude: [],\nstill no luck in gulp/conf.js\n. I got it. ran bower install bootstrap --save and it worked.\n. I have raised another issue that my build is not working. So I am waiting for a response on that so i could proceed with this.\n. Thanks for pointing. I couldnt upload the txt file. So copied and pasted yo-rc.json. Hope this provides necessary information.\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"1.0.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.2\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        },\n        {\n          \"key\": \"messages\",\n          \"module\": \"ngMessages\"\n        },\n        {\n          \"key\": \"aria\",\n          \"module\": \"ngAria\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"restangular\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"coffee\",\n        \"extension\": \"coffee\",\n        \"srcExtension\": \"coffee\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. Reinstalled node_modules and it started to work. Thanks for the efforts.\n. I can workaround it with adding another module. Thanks for the time.\n. ",
    "gablabelle": "The recipe seems incomplete because when you build to dist using the the gulp command, the font-awesome icon files from its bower package will not be copied to the folder: dist/fonts/\nYou will need to modify the bower.json of your project for the files to be copied:\n...\n  \"devDependencies\": {\n    \"angular-mocks\": \"~1.4.2\"\n  },  \n \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.eot\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.svg\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.woff\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\"\n      ]\n    },\n    \"font-awesome\": {\n      \"main\": [\n        \"scss/font-awesome.scss\",\n        \"fonts/fontawesome-webfont.eot\",\n        \"fonts/fontawesome-webfont.svg\",\n        \"fonts/fontawesome-webfont.ttf\",\n        \"fonts/fontawesome-webfont.woff\",\n        \"fonts/fontawesome-webfont.woff2\"\n      ]\n    }\n  }\n...\nThen, you will need to modify the gulp/build.js (lines 53 and 54 in the 'html' task) file to make sure that the path to these font-awesome font files is correct:\n...\n.pipe($.replace('../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n.pipe($.replace('../../bower_components/font-awesome/fonts', '../fonts'))\n...\nAnd finally, you will need to specify the $fa-font-path in you scss file (ie. index.scss):\n```\n...\n// Bootstrap icon font\n$icon-font-path: \"../../bower_components/bootstrap-sass/assets/fonts/bootstrap/\";\n// Font awesome fonts\n$fa-font-path: \"../../bower_components/font-awesome/fonts\";\n...\n```\ngulp serve : fonts are OK\ngulp or gulp build : fonts are OK (build in dist)\nHope it helps and that I didn't forget anything. ;-)\n. ",
    "codeofsumit": "We installed font awesome via this shim repository:\nhttps://github.com/components/font-awesome\nand it works just fine. Probably because their bower.json correctly lists all the font files.\n. just tried it again without the shim and yes, the recipe is incomplete, @gablabelle version works!\nCorrection: it made it work for gulp serve:dist - it broke in gulp serve.\nNot sure why. Switched back to the shim repo for now.\n. +1\n. I'd also like to know whats the best way in this app setup to use the html5 history API.\nNormally I'd create an .htaccess that redirects to the root URL where the angular routing kicks in. But I don't think gulp will move .htaccess files to their designated folders (neither tmp, nor dist) while serving the app to browsersync.\n. after further investigation I found this in gulp/inject.js\nvar injectScripts = gulp.src([\n    path.join(conf.paths.src, '/app/**/*.module.js'),\n    path.join(conf.paths.src, '/app/**/*.js'),\n    path.join('!' + conf.paths.src, '/app/**/*.spec.js'),\n    path.join('!' + conf.paths.src, '/app/**/*.mock.js')\n  ])\nwhich means each xx.module.js file should be included before all others, right?\nThis is my structure for said new module:\n\ncities.module.js includes \nangular\n        .module('cities', [])\nAnd from both, cities.directive.js and cities.service.js I get $injector:nomod] Module 'cities' is not available! when I try to use \nangular.module('cities').directive('test', function(test) {\n        alert('test')\n    });\n. Ah, thank you for the clarification. I do have this line:\nvar injectScripts = gulp.src([\n    path.join(conf.paths.src, '/app/**/*.module.js'),\n    path.join(conf.paths.src, '/app/**/*.js'),\n    path.join('!' + conf.paths.src, '/app/**/*.spec.js'),\n    path.join('!' + conf.paths.src, '/app/**/*.mock.js')\n  ])\n  .pipe($.angularFilesort()).on('error', conf.errorHandler('AngularFilesort'));\nAnd just where you said lies the problem:\n\n.module files are inserted last. Any idea how that could happen?\n. Sure thing, there you go:\nhttps://github.com/codeofsumit/angular-test-polygons\ncities is the component to observe. Have the same problem with every module that I created.\nhttps://github.com/codeofsumit/angular-test-polygons/tree/master/src/app/components/cities\n. Seems to be a node caching issue.\nafter\nsudo npm cache clean -f\nand rerunning gulp serve, the files are injected in the correct order.\nThank you for confirming guys!\n. Ok i found it.\nProblem was I generated the app with a name of \"pmm\". Later I wanted to rename the main module of angular to \"app\". Did so in every file in src. But the generator also used that \"pmm\" module name inside gulp/build.js. I renamed that to \"app\" as well and now the build works perfectly.\n. Ok thank you!\n. Turns out, it is possible:\n\nIf you click on \"disable all\", auto-reload stops. Even if you re-enable each options by hand, it'll not auto-reload until you click \"enable all\" again.\nNo idea if that is a bug or just bad UI. In any case, I opened an issue about it here.\nhttps://github.com/BrowserSync/browser-sync/issues/802\n. unfortunately that's not as easy as it sounds. Dependencies and usage is sprinkled everywhere and despite our team trying to remove all of it, we weren't able to do so by keeping the build intact.\nIn places like (among others)\nprotractor.js\ne2e/main.po.js\ne2e/main.spec.js\nindex.constants.js\nwe found the boilerplate code used.\nBy this time my teammate removed everything he found but the build fails now.\nWe will now generate the app from scratch again, put in version control and commit every change we do so we can track down which removal will cause the build to fail.\n. We finally made it though ;-)\n. Thank you!\nThis: sudo gem install -n /usr/local/bin sass fixed it.\n. IMO a 2.0 generator should be a fork of this. The Angular 1.x ecosystem is way to big. Serious production apps will still use 1.x for the time being.\nUpdating to angular 1.5 should be easy with bower, even if this generator isn't including it by default.\n. \ud83d\udc4d\n. @opadilla I understand. I was thinking more about updating to angular 1.5 via bower in existing projects while still using .directive and just enjoy the minor improvements (if there are any) that don't need build changes.\nYou're right of course.\n. I saw that the scripts task has only the app folder specified along with conf.paths.src.\ngulp.task('scripts', function () {\n  return gulp.src(path.join(conf.paths.src, '/app/**/*.js'))\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe(browserSync.reload({ stream: true }))\n    .pipe($.size())\n});\nso js files inside the app folder and everything specified in config i guess?:\nexports.paths = {\n  src: 'src',\n  dist: 'dist',\n  tmp: '.tmp',\n  e2e: 'e2e'\n};\ncurrently trying to add something like config: '!src/config' so my config folder isn't included in the scripts task. Simply removing src will probably cause some errors and seems wrong.\n. I think I was mistaken. The js files inside src/configs are not grabbed by the scripts task. So no problem with the minified files I just need to move them to the /dist folder.\nCurrently looking at the other task for that:\npath.join('!' + conf.paths.src, '/**/*.{html,css,js,scss,hbs}')\n. okay I changed that line to this\npath.join('!' + conf.paths.src, '/!(configs)/**/*.{html,css,js,scss,hbs}')\nand it works. If there is a better way to do this I'd be happy to hear it.\n. No no I do want to use them as large mock objects clutter the actual test file.\nI just wanted to know how.\nCurrently I'm just doing a var myMockObj = {...} inside the .mock.js file.\nAnd myMockObj then is available inside .spec.js as a global variable.\nHope that's the correct way to use it.\n. ",
    "Santino-Wu": "I had the same issue when using gulp build task but gulp serve, and i fixed it by @gablabelle 's solution, thanks!\n. ",
    "mzellho": "Same for me - @gablabelle 's solution works, many thanks! Just something that took me quite a while, even though it was pretty obvious: make sure to do the replacements in build.js after\n...\n    .pipe(cssFilter.restore)\n...\n. @mykbaker here's how I got it working with 4.0.0\nin build.js, update the $.filter paths like this:\nvar htmlFilter = $.filter(path.join(conf.paths.tmp, '/serve/*.html'), {restore: true});\nvar jsFilter = $.filter(path.join(conf.paths.tmp, '/serve/**/*.js'), {restore: true});\nvar cssFilter = $.filter(path.join(conf.paths.tmp, '/serve/**/*.css'), {restore: true});\nHTH,\nMax\n. I would love to, but I am on windows at the moment and somehow I cannot get your tests running. I should be able to switch to linux in the evening and will try again. I anyways pushed the changes to here\n. ",
    "runmael": "@MZellhofer why do we need to put it after cssFilter.restore to work correctly? It actually works when I do that, but I cannot grasp why...\n. ",
    "xkeshav": "moving down the font awesome replace is not working though\n.pipe(cssFilter.restore)\n .pipe($.replace('../../bower_components/bootstrap/fonts/', '../fonts/'))\nanything else for proper working ? even all my fonts are being copied to dist/fonts folder\n. ",
    "zymr-keshav": "thanks @gablabelle ; I have followed your steps but with minimal changes; and now running gulp serve:dist also have the fonts and icons  here it is\nbower.json\n\"overrides\": {\n   \"font-awesome\": {\n      \"main\": [\n        \"less/font-awesome.less\",\n        \"scss/font-awesome.scss\"\n      ]\n    }\n  },\nin build.js\nmove down the .replace and add one more line for fontawesome \ngulp.task('html', ['inject', 'partials'], function () {\n....\n.pipe(cssFilter.restore)\n    .pipe($.replace('../../bower_components/bootstrap/fonts/', '../fonts/'))\n    .pipe($.replace('../../bower_components/fontawesome/fonts/', '../fonts/'))\nalso added otf in gulp.task('font')\ngulp.task('fonts', function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('**/*.{otf,eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n. ",
    "McGiogen": "Pay attention to FontAwesome folder name: now it is fontawesome and not font-awesome (with a little dash) as wrote many times in this issue.\n. ",
    "nikolaz111": "Same is happenning to me\n. ",
    "thnt": "add number prefix as priority to css filename may work\n. ",
    "deyceg": "@npearson72 You'll need to make sure you do a correct path replace in build.js e.g.\n.pipe(replace('../fonts', 'assets/fonts'))\nYou'll probably find that your .sccs files and compiled .css files are in different locations relative to the fonts directory which is causing the issue.\n. Sorry @npearson72 , you'll need gulp-replace!\n. Good stuff! In hindsight I should have just pasted my task, as it had the concat in there :)\n. ",
    "priithansen": "Thanks for the insight @intellix. angular-ng-constant was one of the options I stumbled upon when searching the internet but wanted to ask around since I'm quite green with gulp. To me it looks like almost every project would benefit from such an option but maybe it's just me. Anyhow will report here if I get some system going.\n. Thank You very much @intellix the code worked beautifully for my needs. Just added the config task to serve and server:dist and everything is running smoothly.\nTo me it also looks like a good idea to have this functionality but I'm no pro and understand there might be other considerations I have not taken into account with this.\n. ",
    "girod": "I also use this solution with a config.js in my /gulp directory and it works fine to manage env variables. It would be a good thing to integrate it in the generator.\nBest regards,\n. ",
    "pedrodelgallego": "+1\n. +1. I had the same issue. Adding protractor as a dep solved the problem\n. ",
    "scanferla": "+1\n. @zckrs how can I fix it without having to do a fresh install?\n. Thank you!\n. ",
    "vitorreis": "+1\n. Guys thank you for the workarround, I needed a quick solution for this and it helped a lot.\n. ",
    "nanocom": "+1\n. I would rather be able to declare my conf in JS rather than JSON.\nI have 3 environments, dev test and prod, I added 3 files called app/config.[dev|test|prod].js\nIn my gulpfile.js I added this:\n``` javascript\nvar argv = require('yargs').argv;\nvar env = argv.env || 'dev';\n// ...\nvar envs = ['dev', 'test', 'prod']; // add your envs here\nvar ignoredEnvs = _.reject(envs, function (env) {\n  return env === cliOptions.env;\n});\n// ...\nvar options = {\n  // ...\n  env: env,\n  ignoredEnvs: ignoredEnvs,\n  // ...\n};\n```\nAnd I changed the gulp/inject.js file:\n``` javascript\nvar injectScripts = [\n   options.src + '/{app,components}//*.js',\n   '!' + options.src + '/{app,components}//.spec.js',\n   '!' + options.src + '/{app,components}//.mock.js'\n];\ninjectScripts = injectScripts.concat(_.map(options.ignoredEnvs, function (env) {\n  return '!' + options.src + '/app/config.' + env + '.js';\n}));\n```\nWorks fine.\n. any chance that you accept a PR on this @Swiip @zckrs \n(no ng-constant, just plain js files) ?\n. The error message i get:\n\n. for folks who want to fix the problem quickly, just apply this fix manually: https://github.com/Swiip/generator-gulp-angular/pull/480\n. thx!\n. yes will do\n. done\n. the proxy property is not made for that.\nfor project.dev:80 to redirect to localhost you can just add a line in your /etc/hosts file\n. :+1: for html5 by default\n. The problem doesn't happen all the time...\n. i use both\n. I don't have this issue anymore, the tests run fast again.\n. ",
    "silkroad57": "since gulp-ng-constant abandoned the .dest option meanwhile, angular takes the generated config-xyz.js files generated in alphabetical order, which is not quite what we usually want.\ntintellix' gulp/config.js example (thx) above should now read like\n```\n...\ngulp.task('config', function () {\ngulp.src('src/app/config-' + environment + '.json')\n    .pipe(ngConstant({\n        name: 'config'\n    }))\n    .pipe(rename('config.js'))        \n    .pipe(gulp.dest('src/app'));\n\n});\n...\n```\nmay be someone else not so deep into gulp like me will save some time.\n. ",
    "pablorsk": "+1\n. Anyone try use ng-forward with this generator? It seems to be an elegant solution to get ready for angular2.\n. Your work is awesome! \ngulp serve work fine, but gulp dist generate a project but don't work fine, console show this error:\nError: [$injector:strictdi] o is not using explicit annotation and cannot be invoked in strict mode\nAny ideas?\n. hi @scttcper!\nI have ng-strict-di on  element. but with babel5 work all with /** @ngInject */ before all function with injections. Need I add  'ngInject' on all files? My question is only becouse now with babel5 is working.\nRegards...\n. Hi @maxmusic, \njavascript\n.factory('LoginFactory', LoginFactory)\nThis does not work, never is instantiated. This is because the function passed as a second argument (LoginFactory) is never called with the new operator. If you want to use a TypeScript class you must use service and not factory.\nVia stackoverflow\n. Thanks a lot for your really dedicated answer.\nOverrides work for another values (thanks for the tip) but with main don't. This is my bower.json\njavascript\n  \"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        \"assets/stylesheets/_bootstrap.scss\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.eot\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.svg\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.woff\",\n        \"assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\"\n      ]\n    },\n    \"animate.css\": {\n      \"main\": [\n        \"./animate.css\"\n      ]\n    },\n    \"jquery\": {\n        \"main\": [\n            \"dist/jquery.js\"\n        ]\n    },\n    \"angular\": {\n        \"main\": [\n            \"./angular.js\"\n        ]\n    }\n  }\nThen, I run gulp build. But I obtain a same result in index.html:\n``` html\n     build:js(src) scripts/vendor.js \n bower:js \n\n\n\n\n\n\n\n\n SOME FILES MORE.... (removed for this example) \n endbower \n endbuild \n<!-- build:js({build/serve,build/partials}) scripts/app.js -->\n<!-- inject:js -->\n<script src=\"app/index.module.js\"></script>\n<!-- endinject -->\n\n<!-- inject:partials -->\n<!-- angular templates will be automatically converted in js and inserted here -->\n<!-- endinject -->\n<!-- endbuild -->\n\n```\nMaybe I need review any library, but we are using 55+ bower components... should not, at least, concatenate some bower files?\n. Thanks! I solve the problem with your help.\nFirst, I update bower with sudo npm install -g bower (1.7.2 now). This version automatically fix main files (I think).\nNext, we found problems with angular-rickshaw: Uncaught ReferenceError: d3 is not defined.\nI solve this second problem with your tip. I put this in my bower.json:\njson\n  \"overrides\": {\n    \"angular-rickshaw\": {\n        \"dependencies\": {\n          \"angular\": \"~1.2.0\",\n          \"d3\": \"~3.4.3\",\n          \"rickshaw\": \"~1.4.6\"\n        }\n    }\n  }\nThanks again!\n. Problem solved,\nfontawesome is now font-awesome. Then, you need change paths.\n. ",
    "cm325": "This recipe is available now - https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/environment-specific-build.md\n. Hi,\nI'm using this recipe:\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/environment-specific-build.md\nBut the problem is that the constant file from the previous build is not removed automatically, when a new constant file (for a different enviroment) is created. Seems like that recipe should include a clean task, like:\ngulp.task('clean:config', function () {\n  return del([path.join(conf.paths.src, '/app/properties.*.js')]);\n});\nAlso, instead of using configDev.json and config.json, I also opted for slightly different naming convention, like properties.dev.js, properties.test.js, etc-\n. It's true, running just \"gulp\" runs the default tasks, which runs clean and the build tasks. I think the docs are misleading here, as it makes it sound like the two tasks are equivalent -\n\"gulp or gulp build to build an optimized version of your application in /dist\"\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/usage.md\n. ",
    "millarde": "hmm, I did npm update gulp-ng-annotate and that didn't fix it.\n. sorry, my bad. Just removing the line in the package.json (and then attempting an update) didn't work for me. I updated the line in the package.json to the current version and that did allow me to build. Thanks for your work (and your patience).\n. ",
    "dnlbox": "@millarde this is what I did that seems to be the same as you, right?\nInside of node_modules/gulp-ng-annotate/package.json, change the dependency to:\n\"ng-annotate\": \"~0.15.0\",\nIn node_modules/gulp-ng-annotate/ run the command npm update\n@Swiip do you think that could be interesting to do a pull request change it? Or you could do it directly to the project? What do you think?\n. ",
    "cmullix": "I had this same problem and I fixed it by making sure /* @ngInject */ was placed before every function or a proper $inject statement\n. ",
    "chandrabezzo": "I have error when I dist my project, the javascript when I inspect element the error notice is Uncaught TypeError: (intermediate value) (intermediate value)(....) is not a function\n. ",
    "nilsonsrjunior": "+1\n. ",
    "gokhandemirtas": "+1\nI've tried updating annotate plugin, didn't help\n. http://stackoverflow.com/a/20307918/262866    this worked for me. I've removed the semicolon from some of my IIFE's for some reason and paid the price for it\n. ",
    "jspizziri": "@gokhandemirtas.... thank you!!! What a nightmare, finally found the suspect colon.\n. ",
    "Sasicumaar": "\n. Uncaught TypeError: (intermediate value)(intermediate value)(...) is not a function\n. may i know how its fixed,im facing the same error. ",
    "MelissaMMDP": "Smart move! I wish other projects would do the same.  Although this generator is my go too for new projects :)\n. ",
    "NTag": "Thanks for your response.\nI discover the option loose in https://github.com/Moveo/minimize to keep one whitespace. It solves my problem :-) .\n. ",
    "egor-smirnov": "Looks like 6to5ify is already available as https://github.com/babel/babelify.\n. Try running it with sudo.\n. ",
    "beckler": "If you're using a preprocessor, make sure that the variable icon-font-path is set correctly. It should be in src/app/vendor.less(.scss)\n. ",
    "gt-tech": "Made some progress, traceur bu default use \"amd\" modules, so i had to add \"requirejs\". Since requirejs works asynchronously I used the standard test-main.js usual practice as listed here - http://karma-runner.github.io/0.10/plus/requirejs.html. If not done so, browser just hungs on \"executing\".\nAfter all this, getting below error -\n Uncaught Error: Mismatched anonymous define() module: function () {\n       return _;\n     }\n http://requirejs.org/docs/errors.html#mismatch\n at C:/Users/gtyagi1/Documents/javascript-workspaces/Temp/test-karma/node_modules/requirejs/require.js:141\nEBUG [karma]: Run complete, exiting.\nEBUG [launcher]: Disconnecting all browsers\nEBUG [launcher]: Process Chrome exited with code 0\nI think I know the reason for the error, other libraries have directly been served to browser instead of requirejs loading them. Not yet sure how to fix this since am new to this. Does anyone have any idea/pointers? \nWhy this is an issue - we can't run our tests (unit) without this as some of our tests does have \"import\" statements so need transpiling before they can be executed.\nbtw below are the project details (I am reproducing and trying to fix this in a separate smaller project) -\n====.yo-rc.json ======\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      },\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"name\": \"angular-cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": \"restangular\",\n        \"version\": \"~1.4.0\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"~0.2.13\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": \"official\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\",\n        \"module\": \"gulp-less\",\n        \"version\": \"~1.3.6\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"traceur\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\",\n        \"module\": \"gulp-traceur\",\n        \"version\": \"~0.14.1\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\",\n        \"module\": null,\n        \"version\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      }\n    }\n  }\n}\n==== test-main.js (kept in the root directory) ====\nvar allTestFiles = [];\nvar TEST_REGEXP = /(spec|test).js$/i;\nvar pathToModule = function(path) {\n  return path.replace(/^\\/base\\//, '').replace(/.js$/, '');\n};\nObject.keys(window.karma.files).forEach(function(file) {\n  if (TEST_REGEXP.test(file)) {\n    // Normalize paths to RequireJS module names.\n    allTestFiles.push(pathToModule(file));\n  }\n});\nrequire.config({\n  // Karma serves files under /base, which is the basePath from your config file\n  baseUrl: '/base',\n// dynamically load all test files\n  deps: allTestFiles,\n// we have to kickoff jasmine, as it is asynchronous\n  callback: window.karma.start\n});\n=======  Modified testFiles variable in unit-tests.js ....\nvar testFiles = bowerDeps.js.concat([\n    'test-main.js',\n    paths.tmp + '/serve/app/index.js',\n    paths.src + '/{app,components}//*.spec.js',\n    paths.src + '/{app,components}//*.mock.js'\n  ]);\n======== karama conf \n'use strict';\nmodule.exports = function(config) {\nconfig.set({\n```\nlogLevel : config.LOG_DEBUG,\nautoWatch : false,\nframeworks: ['jasmine', 'requirejs', 'traceur'],\npreprocessors: {\n  'src/app//*.js' : ['traceur'],\n  'src/components//*.js': ['traceur']\n},\nbrowsers : ['Chrome'],\nplugins : [\n  'karma-chrome-launcher',\n  'karma-jasmine',\n  'karma-traceur-preprocessor',\n  'karma-requirejs'\n]\n```\n});\n};\nIt really isn't an artifact of any specific thing in test/spec file, i removed the file but still get the error so obviously \"requirejs\" blowing up.\nVery well aware that it's not really this generator's problem but perhaps someone who has tried to use this generator might have run into this and can help?\n. closing the issue as it's described wrong here. but perhaps yes, adding pre-processors to karma file as per the choices made at the time of project creation might be a good idea to consider.\n. Closed the issue as it is indeed not a generator issue and more test configuration etc. Fwiw - We were able to solve the issue by getting rid of preprocessor chaining and instead using es6ify transform within browserify.\n. ",
    "genu": "Also having an issue similar to this, however, I'm able to run gulp serve, but when I do gulp build I get the error that you mention. What was your issue?\n. A temporary workaround is to disable the $.csso()) plugin.\n. ",
    "geoHeil": "node version: v0.12.0\n(just ran brew update & brew upgrade)\n. where can I find the gulp-angular version? I just installed it via the npm install -g generator-gulp-angular\n. I un-installed via npm nad re-installed via YO directly\nwhen I start the generator I get a different error than above:\n/usr/local/lib/node_modules/yo/node_modules/inquirer/node_modules/rx/dist/rx.all.js:9379\n        throw e;\n              ^\nTypeError: undefined is not a function\n    at run (/usr/local/lib/node_modules/generator-gulp-angular/node_modules/yeoman-generator/lib/base.js:444:21)\n    at Environment.run (/usr/local/lib/node_modules/yo/node_modules/yeoman-environment/lib/environment.js:319:20)\n    at module.exports (/usr/local/lib/node_modules/yo/lib/routes/run.js:20:11)\n    at Router.navigate (/usr/local/lib/node_modules/yo/lib/router.js:35:30)\n    at PromptUI.completed (/usr/local/lib/node_modules/yo/lib/routes/home.js:76:20)\n    at PromptUI.onCompletion (/usr/local/lib/node_modules/yo/node_modules/inquirer/lib/ui/prompt.js:69:10)\n    at AnonymousObserver.Rx.AnonymousObserver.AnonymousObserver.completed (/usr/local/lib/node_modules/yo/node_modules/inquirer/node_modules/rx/dist/rx.all.js:1965:12)\n    at AnonymousObserver.Rx.internals.AbstractObserver.AbstractObserver.onCompleted (/usr/local/lib/node_modules/yo/node_modules/inquirer/node_modules/rx/dist/rx.all.js:1902:14)\n    at AutoDetachObserverPrototype.completed (/usr/local/lib/node_modules/yo/node_modules/inquirer/node_modules/rx/dist/rx.all.js:9397:23)\n    at AutoDetachObserver.Rx.internals.AbstractObserver.AbstractObserver.onCompleted (/usr/local/lib/node_modules/yo/node_modules/inquirer/node_modules/rx/dist/rx.all.js:1902:14)\n. seems to be the fix for me as well\n. as duplicate of https://github.com/Swiip/generator-gulp-angular/issues/993\n. Strangely I have the same problem on cents in the following configuration https://gist.github.com/geoHeil/1752b46d6d38bdbbc460556e38263bc3\n. Fixed by https://github.com/Swiip/generator-gulp-angular/issues/941\n. ",
    "yordis": "I got the same right now. Node: v0.10.33\n. version: 0.9.1\n. @Swiip Reinstall the packages doesn't work.\n. ",
    "frankalbenesius": "You might try updating Yeoman. I was having a similar issue.\n. ",
    "louiswilbrink": "Wanted to note that I kept getting this error until I upgraded to node 0.12.0.  I am using nvm on a yosemite machine, and made sure to upgrade yo gulp bower after upgrading node.\n. ",
    "hwoarangzk": "Update yo to the latest version would solve the problem. I just fixed this :)\n. ",
    "quipu": "I had a similar problem, caused by the files being injected in the wrong order.\nBy logging out the files I could see the files were being injected but not in order of dependency. If I took the log output and put that into the karma config file in the right order, then run karma directly, it worked fine.\nTo continue to enjoy the benefits of auto-injecting, I edited the gulp unit-tests.js file to make use of angularFilesort to correctly order the files according to dependency, and all working now when running gulp test.\n// gulp/unit-tests.js\n// after line 36 inserted the following line:\n.pipe($.angularFilesort())\n// which is followed by .pipe(concat(function(files) {\n. ",
    "dereklin": "@quipu Thanks!  Your fix should be part of gulp-angular\n. @zckrs Could you please explain what files I need to manually change to add another module to be depended upon by my main app?  For example, I want to create src/modules/module1.  And my dependency looks like angular.module('myMainApp', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngResource', 'ui.router', 'ui.bootstrap', 'module1']).  Thanks!\n. I can't figure this out yet.  In your git demo example, you have \n```\n    var srcFiles = [\n      options.tmp + '/serve/app/index.js'\n    ].concat(specFiles.map(function(file) {\n      return '!' + file;\n    }));\n```\nIn the actual gulp-angular tool, it's:\nvar srcFiles = [\n      options.src + '/app/**/*.js'\n    ].concat(specFiles.map(function(file) {\n      return '!' + file;\n    }));\nAm I using the old version?...\n. what line number does this go inside karma.conf?  Or is it in some other file?\nreturn wiredep(wiredepOptions).js\n    .concat([\n      path.join(conf.paths.src, '/app/**/*.module.js'),\n      path.join(conf.paths.src, '/app/**/*.js'),\n      path.join(conf.paths.src, '/**/*.spec.js'),\n      path.join(conf.paths.src, '/**/*.mock.js'),\n      path.join(conf.paths.src, '/**/*.html') //adding templates        \n    ]);\nthis is how my unit-tests.js looks like:\n```\n'use strict';\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar wiredep = require('wiredep');\nvar karma = require('karma');\nvar concat = require('concat-stream');\nvar _ = require('lodash');\nmodule.exports = function(options) {\n  function listFiles(callback) {\n    var wiredepOptions = _.extend({}, options.wiredep, {\n      dependencies: true,\n      devDependencies: true\n    });\n    var bowerDeps = wiredep(wiredepOptions);\nvar specFiles = [\n  options.src + '/**/*.spec.js',\n  options.src + '/**/*.mock.js'\n];\n\nvar htmlFiles = [\n  options.src + '/**/*.html'\n];\n\nvar srcFiles = [\n  options.src + '/app/**/*.js'\n].concat(specFiles.map(function(file) {\n  return '!' + file;\n}));\n\n\ngulp.src(srcFiles)\n  .pipe($.angularFilesort())\n  .pipe(concat(function(files) {\n    callback(bowerDeps.js\n      .concat(_.pluck(files, 'path'))\n      .concat(htmlFiles)\n      .concat(specFiles));\n  }));\n\n}\nfunction runTests (singleRun, done) {\n    listFiles(function(files) {\n      karma.server.start({\n        configFile: __dirname + '/../karma.conf.js',\n        files: files,\n        singleRun: singleRun,\n        autoWatch: !singleRun\n      }, done);\n    });\n  }\ngulp.task('test', ['scripts'], function(done) {\n    runTests(true, done);\n  });\n  gulp.task('test:auto', ['watch'], function(done) {\n    runTests(false, done);\n  });\n};\n```\n. @stewones My karma.conf.js looks like this: where do I add the new line?:\n```\n'use strict';\nmodule.exports = function(config) {\nvar configuration = {\n    autoWatch : false,\nframeworks: ['jasmine'],\n\nngHtml2JsPreprocessor: {\n  stripPrefix: 'src/',\n  moduleName: 'gulpAngular'\n},\n\nbrowsers : ['PhantomJS'],\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor'\n],\n\npreprocessors: {\n  'src/**/*.html': ['ng-html2js']\n}\n\n};\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if(configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\n. @stewones  I am using 0.11 as well.  In fact, I just updated my generator-gulp-angular to just make sure:\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null,\n        \"name\": \"bootstrap\"\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"stylus\",\n        \"extension\": \"styl\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. I downloaded generator-gulp-angular as zip and manually installed it to my machine.  Now I see the same karma.conf.js.  I added the line for html.  But I am still getting:\nNo more request expected\n            at $httpBackend (C:/project/itaApp/bower_components/angular-mocks/an\ngular-mocks.js:1212)\n. Oh boy, I missed mocking my main app: module('mainApp');  It works now.  Thanks @stewones \n. gulp\n. Please note, I downloaded the the zip file from github and manually installed the gulp-angular.  Here is the yo-rc:\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.15\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"stylus\",\n        \"extension\": \"styl\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. What do you mean by using npm link?\nI git clone the master, and then I encountered this error:\nC:\\Temp\\test10>yo gulp-angular\nmodule.js:338\n    throw err;\n          ^\nError: Cannot find module 'yeoman-generator'\n    at Function.Module._resolveFilename (module.js:336:15)\n    at Function.Module._load (module.js:278:25)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\nWhen I do npm install -g generator-gulp-angular, it installs the \"old\" version.  And the \"old\" version works.  \nThis problem is not a high priority for me.  You can close it for now if you can't reproduce it.\n. I was not able to do npm link -- not sure if it's related to firewall issue.  However, I was able to run yo gulp-angular.  But I am experiencing a similar problem:\n```\nC:\\Temp\\test9>gulp\n[08:59:17] Using gulpfile C:\\Temp\\test9\\gulpfile.js\n[08:59:17] Starting 'clean'...\n[08:59:17] Finished 'clean' after 66 ms\n[08:59:17] Starting 'default'...\n[08:59:17] Starting 'scripts'...\n[08:59:17] Starting 'styles'...\n[08:59:18] Starting 'partials'...\n[08:59:18] Starting 'fonts'...\n[08:59:18] Starting 'other'...\n[08:59:18] Finished 'default' after 1.37 s\n[08:59:18] gulp-inject 2 files into index.styl.\n[08:59:18] [Stylus] Error in plugin 'gulp-stylus'\nMessage:\n    C:\\Temp\\test9\\src\\app\\index.styl:18:9\n   14|  *  Do not remove this comments bellow. It's the markers used by gulp-inj\nect to inject\n   15|  *  all your stylus files automatically\n   16|  */\n   17| // injector\n   18| // endinjector\n---------------^\n   19|\nfailed to locate @import file src/app/components/navbar/navbar.styl\nDetails:\n    lineno: 18\n    column: 9\n    filename: C:\\Temp\\test9\\src\\app\\index.styl\n    stylusStack:\n    input: .browsehappy\n  margin 0.2em 0\n  background #ccc\n  color #000\n  padding 0.2em 0\n.thumbnail\n  height 200px\nimg.pull-right\n    width 50px\n/*\n *  Do not remove this comments bellow. It's the markers used by gulp-inject to\ninject\n *  all your stylus files automatically\n /\n// injector\n// endinjector\n[08:59:18] Finished 'styles' after 1.04 s\n[08:59:19] Finished 'partials' after 719 ms\n[08:59:19] all files 8.22 kB\n[08:59:19] Finished 'scripts' after 1.76 s\n[08:59:19] Starting 'inject'...\n[08:59:19] Finished 'fonts' after 568 ms\n[08:59:19] gulp-inject Nothing to inject into index.html.\n[08:59:19] gulp-inject 10 files into index.html.\n[08:59:19] Finished 'inject' after 123 ms\n[08:59:19] Starting 'html'...\n[08:59:19] gulp-inject 1 files into index.html.\n[08:59:20] Finished 'other' after 1.86 s\n[08:59:29] 'dist\\' styles\\vendor-36471da4.css 56.9 kB\n[08:59:29] 'dist\\' scripts\\app-f8cb8d88.js 6.32 kB\n[08:59:29] 'dist\\' scripts\\vendor-85f11d16.js 367.45 kB\n[08:59:29] 'dist\\' index.html 992 B\n[08:59:29] 'dist\\' all files 431.67 kB\n[08:59:29] Finished 'html' after 9.96 s\n[08:59:29] Starting 'build'...\n[08:59:29] Finished 'build' after 3.53 \u00b5s\n```\n. But it seems to work.  Here is my .yo-rc.json:\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.12.1\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"stylus\",\n        \"extension\": \"styl\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. @Swiip what changes do you recommend to include jasny-bootstrap in index.html?  Also, the bootstrap files all start with bootstrap: \n\n. Instead of \njQuery('.input_field')[0].focus();\nUse\njQuery('.input_field').eq(0).focus();\n. @Swiip This is not directly related to the topic, but adding the coverage to test:auto can be beneficial, especially for adding tests for legacy apps.  Maybe there can be a new task like test:auto-with-coverage ...\nFor now, I just comment out the singleRun check:\n//  if (singleRun) {\n    pathSrcJs.forEach(function(path) {\n      preprocessors[path] = ['coverage'];\n    });\n    reporters.push('coverage')\n//  }\n. @johnoscott Thanks.  It works.  Since I am behind a firewall, I also need to add a .typingsrc file and add proxy info.  https://github.com/typings/typings/issues/106\n. ",
    "mastix": "I couldn't find an issue either... so as a workaround I've added it to the wiredeps excludes, let's see if it works. :) Thanks for your help and keep up the good work.\n. Ok, I've changed it in the inject.js (And deleted the jquery folder in bower_components), but it doesn't seem to work:\njavascript\nvar wiredepOptions = {\n    directory: 'bower_components',\n    exclude: [/bootstrap-sass-official/, /bootstrap\\.css/, /bootstrap\\.css/, /foundation\\.css/,/jQuery/]\n  };\nError: \n\nstream.js:75\n      throw er; // Unhandled stream error in pipe.\n            ^\nError: Error: jquery is not installed. Try running bower install.\n    at c:\\Users\\sbs4fe\\Development\\c26_bgn_startpage\\trunk\\frontend\\node_modules\\wiredep\\wiredep.js:30:56\n\nAny ideas?\n. I've removed the dependencies from bootstrap-sass-official and it seems to work now, but that's actually a bad solution since it will be overridden the next time I run bower install! :(\nJust changing the wirep exclude patterns did not solve the issue...\n. Yes, that's what I did... but that's a bad solution. :(\n. ",
    "jedwards1211": "Hi Swiip, I tried removing jQuery from bower_components but that didn't help either.  I didn't see the problem with solution #82 either, I just used that.\nThanks for the generator!  I love how much it let me choose which tools I use!\n. I think ultimately Bootstrap should fix this by creating a bootstrap-core subproject that doesn't have any dependencies, and making the bootstrap project depend on that and jQuery, because it's going to become more and more common that people want only the CSS.\n. ",
    "marcelaulenbacher": "Thank you for the fast replies.\nIs it standard to let these scripts run with root permissions? Before I tried this generator, I tried another one and there was no need to run scripts as root.\nIsn't there another solution without running the scripts as root?\n. This solved my problems:\nsudo npm cache clean -f clear your npm cache\nsudo npm install -g n install \"n\"\nsudo n stable upgrade to latest version\n. ",
    "adriatic": "Of course I do - but before sharing any proposition, I wanted to test current team's interest. Too many times in the past I encountered the team's behavior that borders with the existence of \"class hierarchy\", combined with resistance to any changes (\"we work from the goodness of our hearts, with no compensations and thus no responsibility to the users of our project\").\nMy principal interest is on sharing (via github) the structure, architecture and development patterns of large scale modern applications targeting healthcare), so gulp generators while an appealing concept are not my primary focus to the point of creating my own project.\n. It is not clear to me why would you think that I am discussing a tool for the end-user, but that is besides the point that you are perfectly happy with the UI as is. I am not, so I will do something about it eventually. Thanks for sharing your thoughts with me\n. ",
    "MarioAraque": "+1\n. ",
    "jonathanobino": "reinstalled the gulp-ng-annotate seems to have fixed the issue\n. ",
    "keithkml": "I just followed the instructions at https://github.com/Swiip/generator-gulp-angular#create-your-project\n. @Swiip @zckrs I'm a little confused - why has this issue been closed? I tried installing isparta but it seems incompatible with the Gulp build generated by generator-gulp-angular.\n. (I filed https://github.com/douglasduteil/isparta/issues/70 but have gotten no response)\n. ",
    "pdrosos": "I have the same issue and also followed the instructions and installed the generator via npm. I am on Windows 7 with NodeJS 0.12.0. For now I have downgraded gulp-autoprefixer in package.json:\n\"gulp-autoprefixer\": \"~1.0.1\"\nbut it would be nice if this can be fixed.\n. ",
    "tb": "@Swiip haml did not work for me on main.haml, I checked https://github.com/tj/consolidate.js#supported-template-engines and tried with https://github.com/9elements/haml-coffee and it worked.\n. @Swiip nm, I checked with haml again now and its working fine\n. gulp test:auto reruns tests for *.spec.js changes, but not for *.spec.coffee changes.\nMade a PR that possibly fix coffee test auto task #443 based on code that fixed it for me in project.\n. Is the centralized processing producing .js files for only the changed files? I.e. I change some.spec.coffee and only some.spec.js is generated?\n. ",
    "guiruiz": "I was getting the error below when trying to \"gulp serve\"\nError: Cannot find module 'hamljs'\n ...\nAfter a long time I realize that the problem was in the file:\n/node_modules/gulp-consolidate/lib/consolidate.js\nTo fix that I just changed this line from:\n386   var engine = requires.hamljs || (requires.hamljs = require('hamljs'));\nTo:\n386   var engine = requires.haml || (requires.haml = require('haml'));\n. ",
    "Grandiz": "thanks for reply. i didn't change index.html.\n     bower:css \n run <code>gulp wiredep</code> to automaticaly populate bower styles dependencies \n endbower \n endbuild \n<!-- build:css({.tmp/serve,src}) styles/app.css -->\n<!-- inject:css -->\n<!-- css files will be automaticaly insert here -->\n<!-- endinject -->\n<!-- endbuild -->\nand inject.js\n``` javascript\n'use strict';\nvar gulp = require('gulp');\nvar paths = gulp.paths;\nvar $ = require('gulp-load-plugins')();\nvar wiredep = require('wiredep').stream;\ngulp.task('inject', ['styles'], function () {\nvar injectStyles = gulp.src([\n    paths.tmp + '/serve/{app,components}/*/.css'\n  ], { read: false });\nvar injectScripts = gulp.src([\n    paths.src + '/{app,components}//*.js',\n    '!' + paths.src + '/{app,components}//.spec.js',\n    '!' + paths.src + '/{app,components}//.mock.js'\n  ]).pipe($.angularFilesort());\nvar injectOptions = {\n    ignorePath: [paths.src, paths.tmp + '/serve'],\n    addRootSlash: false\n  };\nvar wiredepOptions = {\n    directory: 'bower_components',\n    exclude: [/bootstrap.css/, /foundation.css/]\n  };\nreturn gulp.src(paths.src + '/*.html')\n    .pipe($.plumber())\n    .pipe($.inject(injectStyles, injectOptions))\n    .pipe($.inject(injectScripts, injectOptions))\n    .pipe(wiredep(wiredepOptions))\n    .pipe(gulp.dest(paths.tmp + '/serve'));\n});\n```\n. in my opinion it doesn't build .css from bower_components at all\n. i am not sure you realy need heroku for this purpose. just run gulp build, it will collect and compress all js, css to /dist directory, and that's all. you can deploy to s3 or other hosting\n. ",
    "bluesliverx": "I've run into this same problem.\n. ",
    "AlexanderTserkovniy": "+1\n. How to get this fix in my current version? Is there possibility to update?\n. But if my project is already quite big, is it possible to just add this functionality only?\n. Thanks, will it be somehow fixed in the future? I saw you are planning more fixes/features when Gulp4 is ready, will you consider this as what has to be?\nAlso, have you considered of using nodemon? As I know it is done exactly for such cases.\n. Thanks a lot!\n. Sorry for disturbing guys, but could you help me? I have been fighting with this unit testing for 3 hours already...\nEverything started from that I would like to write tests using ES2015 in my spec.js files and first issue was Cannot find variable require, then I went here to this issue and made everything as described by @skeep, but eventually I have got this error:\nPhantomJS 1.9.8 (Mac OS X 0.0.0) ERROR\n  ReferenceError: Can't find variable: WeakMap\n  at /PATH/src/test.js:127\n(PATH is my path on mac to this file)\nCould you help me to fix this?\nP.S. I have almost given up...\n. Hey!\nSure! My node is v5.4.1.\nAnd I have tried to remove everything and reinstall, but the same issue here :(\nAlso I have updated:\n\"babel\": \"^6.3.26\",\n\"babel-core\": \"^6.4.5\"\nSome thoughts?\n. Set the same as you and the same issue :( I am starting to hate the unit testing setup :(\n. {\n  \"name\": \"covers\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {},\n  \"scripts\": {\n    \"test\": \"gulp test\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.3.26\",\n    \"babel-core\": \"~5.8.25\",\n    \"babel-loader\": \"~5.3.2\",\n    \"babel-polyfill\": \"^6.1.19\",\n    \"babel-preset-es2015\": \"^6.3.13\",\n    \"browser-sync\": \"~2.7.12\",\n    \"browser-sync-spa\": \"~1.0.2\",\n    \"chalk\": \"~1.0.0\",\n    \"concat-stream\": \"~1.5.0\",\n    \"del\": \"~1.2.0\",\n    \"gulp\": \"~3.9.0\",\n    \"gulp-angular-templatecache\": \"~1.6.0\",\n    \"gulp-autoprefixer\": \"~2.3.1\",\n    \"gulp-consolidate\": \"~0.1.2\",\n    \"gulp-csso\": \"~1.0.0\",\n    \"gulp-filter\": \"~2.0.2\",\n    \"gulp-flatten\": \"~0.0.4\",\n    \"gulp-inject\": \"~1.3.1\",\n    \"gulp-jshint\": \"~1.11.0\",\n    \"gulp-load-plugins\": \"~0.10.0\",\n    \"gulp-minify-html\": \"~1.0.3\",\n    \"gulp-ng-annotate\": \"~1.0.0\",\n    \"gulp-protractor\": \"~1.0.0\",\n    \"gulp-rename\": \"~1.2.2\",\n    \"gulp-replace\": \"~0.5.3\",\n    \"gulp-rev\": \"~5.0.0\",\n    \"gulp-rev-replace\": \"~0.4.2\",\n    \"gulp-size\": \"~1.2.1\",\n    \"gulp-sourcemaps\": \"~1.5.2\",\n    \"gulp-stylus\": \"~2.0.5\",\n    \"gulp-uglify\": \"~1.2.0\",\n    \"gulp-useref\": \"~1.2.0\",\n    \"gulp-util\": \"~3.0.5\",\n    \"gulp-webpack\": \"~1.5.0\",\n    \"http-proxy-middleware\": \"~0.0.5\",\n    \"isparta-loader\": \"^2.0.0\",\n    \"jade\": \"~1.11.0\",\n    \"jshint-loader\": \"~0.8.3\",\n    \"jshint-stylish\": \"~2.0.0\",\n    \"karma\": \"^0.13.19\",\n    \"karma-babel-preprocessor\": \"^6.0.1\",\n    \"karma-chrome-launcher\": \"^0.2.2\",\n    \"karma-coverage\": \"^0.5.3\",\n    \"karma-jasmine\": \"~0.3.5\",\n    \"karma-ng-html2js-preprocessor\": \"~0.1.2\",\n    \"karma-phantomjs-launcher\": \"~0.2.0\",\n    \"karma-spec-reporter\": \"0.0.23\",\n    \"karma-webpack\": \"^1.7.0\",\n    \"lodash\": \"~3.9.3\",\n    \"main-bower-files\": \"~2.8.0\",\n    \"merge-stream\": \"~0.1.7\",\n    \"phantomjs\": \"^1.9.19\",\n    \"phantomjs-polyfill\": \"0.0.1\",\n    \"require-dir\": \"~0.3.0\",\n    \"uglify-save-license\": \"~0.4.1\",\n    \"webpack\": \"^1.12.12\",\n    \"wiredep\": \"~2.2.2\",\n    \"wrench\": \"~1.5.8\"\n  },\n  \"engines\": {\n    \"node\": \">=5.0.0\"\n  }\n}\n. @drGrove actually a lot, but I think problem is not in WeakMaps just. As I said there was problem with require statement first, I think if I remove all WeakMaps statements then another error would appear, with another ES2015 word. I think it is more generic problem... but I have to fix it, because I need tests :) so I will do my best to find the solution.\n. @rgjamkhedkar I have found, but I had to switch to karma 0.13 and other old stuff. Then it started working. Also webpack somehow helped me.\n. Here are package.json and karma.conf.js, which apparently started working.\nArchive.zip\n. ",
    "henry74": "@zckrs Thanks for the detailed response.  I did figure it out by trial and error and looking through the gulp source files, but thank you very much for responding.  I'm sure this will be helpful to others looking to take advantage of gulp and yeoman.\n. Works for me! +1\n. ",
    "vespertilian": "@zckrs \nThanks for your post. I got the app working in development by following your instructions {app,components,lib(loopback in my case)}. However it does not compile properly when I build. Ideally I would like it to be compiled with the vendor scripts. \nAny help would be appreciated. \nHere is my gulp/scripts file\ngulp/scripts file\nAdded {app,components,loopback}\n```\n'use strict';\nvar gulp = require('gulp');\nvar paths = gulp.paths;\nvar $ = require('gulp-load-plugins')();\ngulp.task('scripts', function () {\n  return gulp.src(paths.src + '/{app,components,loopback}/*/.js')\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($'6to5')\n    .on('error', function handleError(err) {\n      console.error(err.toString());\n      this.emit('end');\n    })\n    .pipe(gulp.dest(paths.tmp + '/6to5'))\n    .pipe($.size())\n});\ngulp.task('browserify', ['scripts'], function () {\n  return gulp.src(paths.tmp + '/6to5/app/index.js', { read: false })\n    .pipe($.browserify())\n    .on('error', function handleError(err) {\n      console.error(err.toString());\n      this.emit('end');\n    })\n    .pipe(gulp.dest(paths.tmp + '/serve/app'))\n    .pipe($.size());\n});\n```\n. @zckrs \nSure thing. \n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      },\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"name\": \"angular-cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"~0.2.13\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": \"angular-bootstrap\",\n        \"version\": \"0.12.x\",\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"ruby-sass\",\n        \"extension\": \"scss\",\n        \"module\": \"gulp-ruby-sass\",\n        \"version\": \"~0.7.1\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"6to5\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\",\n        \"module\": \"gulp-6to5\",\n        \"version\": \"~1.0.2\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\",\n        \"module\": \"jade\",\n        \"version\": \"~1.8.1\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      }\n    }\n  }\n}\nIndex when using gulp serve\n```\n<!-- build:js(src) scripts/vendor.js -->\n<!-- bower:js -->\n<script src=\"../bower_components/jquery/dist/jquery.js\"></script>\n<script src=\"../bower_components/angular/angular.js\"></script>\n<script src=\"../bower_components/angular-animate/angular-animate.js\"></script>\n<script src=\"../bower_components/angular-cookies/angular-cookies.js\"></script>\n<script src=\"../bower_components/angular-touch/angular-touch.js\"></script>\n<script src=\"../bower_components/angular-sanitize/angular-sanitize.js\"></script>\n<script src=\"../bower_components/angular-resource/angular-resource.js\"></script>\n<script src=\"../bower_components/angular-ui-router/release/angular-ui-router.js\"></script>\n<script src=\"../bower_components/angular-bootstrap/ui-bootstrap-tpls.js\"></script>\n<!-- endbower -->\n<!-- endbuild -->\n<script src=\"../loopback/lb-services.js\"></script>\n\n<!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n<!-- inject:js -->\n<script src=\"app/index.js\"></script>\n<!-- endinject -->\n\n```\nIndex when built\n```\n<script src=\"scripts/vendor-7f073926.js\"></script>\n<script src=\"../loopback/lb-services.js\"></script>\n<script src=\"scripts/app-55b6f8be.js\"></script>\n\n```\n. So the reason I was having trouble was because I chose to use ES6. All the JS in {app, components} was being run through Browserify, my 3rd party non bower module was ES5. \nFinal solution \nUse my own inject block like this:\n```\n     inject:vendor \n files in the es5 vendor folder will be injected here \n endinject \n```\nAdd to Index.html\n``\n    <!-- build:js(src) scripts/vendor.js -->\n    <!-- bower:js -->\n    <!-- rungulp wiredep` to automaticaly populate bower script dependencies -->\n     endbower \n inject:vendor \n files in the es5 vendor folder will be injected here \n endinject \n endbuild \n<!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n<!-- inject:js -->\n<!-- js files will be automaticaly insert here -->\n<!-- endinject -->\n\n<!-- inject:partials -->\n<!-- angular templates will be automatically converted in js and inserted here -->\n<!-- endinject -->\n\n<!-- endbuild -->\n\n```\nAdd inject vendor to gulp/inject.js\n```\n  var injectVendor = gulp.src([paths.src + '/es5vendor/*/.js'], {read: false});\n  var vendorOptions= {\n    starttag: ' inject:vendor ',\n    ignorePath: [paths.src, paths.tmp + '/serve'],\n    addRootSlash: false,\n  };\nvar wiredepOptions = {\n    directory: 'bower_components',\n    exclude: [/bootstrap-sass-official/, /bootstrap.css/, /bootstrap.css/, /foundation.css/]\n  };\nreturn gulp.src(paths.src + '/*.html')\n    .pipe($.inject(injectStyles, injectOptions))\n    .pipe($.inject(injectScripts, injectOptions))\n    .pipe($.inject(injectVendor, vendorOptions))\n    .pipe(wiredep(wiredepOptions))\n    .pipe(gulp.dest(paths.tmp + '/serve'));\n});\n```\n. ",
    "jaarong": "I think this is the same issue that I'm having.  I am trying to use Bourbon/Neat for my framework.  It apparently doesn't use a standardized bower configuration so inject isn't working.  I'd rather not pull them into src and instead keep them in bower.  I am, however, fine with importing them files through my scss.  This works locally, but does not work from external IP's.  I'm assuming it has something to do with the directory structure and the location of files being built basically changing once served, so my file urls are no longer correct in my scss file.  \nIs there information somewhere on how to properly include other frameworks?\n. ",
    "brucejcw": "@zckrs could you show me an configuration of integrating this generator with amcharts.js ? I've tried to modify the scripts file, \n\nreturn gulp.src([options.src + '/app/*/.js', options.src + 'extra-lib/amcharts/amcharts/amcharts.js'])    \n\nbut still not work..I can't find amcharts.js in html source\n. @jdhiro You create a vendor folder under app? I need to add some third-part lib too\n. @zckrs So the wiredep plugin do some manual things to collect the correct javascripts? I don't think without a standard bower folder structure, program can pick up all the correct files.\n. Thanks very much\n. That's so nice of you both\n. @zckrs sounds great! \n. @zckrs I've written a gulp js for module generator with my weak gulp knowledge, so can you refer to it and put a generator plugin in generator-gulp-angular/gulp/ ?\nhttps://github.com/Awakening-j/gulp-angular-module-generator\n. @Swiip Thanks!\n. @zckrs Hi zckrs, Is there any way to update the gulp project instead of re-generate it ?\n. Sorry, I don't understand Paste your .yo-rc.json in code block or gist, I try to comment \"dist\":dist in \"paths\", couldn't stop build dist\n. @Swiip Thank you, sorry, i forgot to reply. :)\n. @Swiip Could you give me some example ? thanks\n. @idwd, hi, I think it's a good idea.:)\n. ",
    "jdhiro": "Much like @vespertilian I'm trying to include the LoopBack API config into my project. Unfortunately it looks like things changed in the latest version of the generator, and his example doesn't work for me. =\\\n. Actually, I did get it working, I just needed to move my vendor folder under the app folder. It seems like there should be an easier way out of the box to include these files =) Awesome generator overall though!\n. @Awakening-j Yup, I created a vendor folder under app, and just followed @vespertilian directions.\n. ",
    "sdornan": "Thanks a ton for your solution @vespertilian. It was very helpful.\n. Shouldn't the router as it exists in the Angular 2 repo be used instead?\nFrom angular/router readme:\n\"For now, the code has been moved to angular/angular. APIs are still rapidly changing, so I don't recommend using this in an important production app quite yet.\"\nI think this is it? https://github.com/angular/angular/tree/master/modules/angular1_router\n. Looking forward to this one. \n. ",
    "yakuzaaaa": "After gulp serve only all custom css files are being removed from index.html and main.scss is kept there.\nHow do I fix this?. ",
    "pdf13": "I had the same problem and solve then modifying gulp/e2e-tests.js to make function runProtractor() looks like this:\n``` javascript\nfunction runProtractor (done) {\n    var params = process.argv;\n    var args = params.length > 3 ? [params[3], params[4]] : [];\ngulp.src(options.e2e + '/**/*.js')\n  .pipe($.protractor.protractor({\n    configFile: 'protractor.conf.js',\n    args: args\n  }))\n// (...)\n\n}\n```\nThis is not error proof, but allows me to make calls to gulp protractor, gulp protractor --suite suiteName, gulp protractor:src --someArg someValue. I hope it can help.\n. ",
    "bondarewicz": "just ran into following issue when running protractor with args using teamcity gulp runner...\n```\nUsage: protractor [configFile] [options]\nconfigFile defaults to protractor.conf.js\nThe [options] object will override values from the config file.\nError: more than one config file specified\n/.../e2e-tests.js:44\n```\nthrow in \n.on('error', function (err) {\n   // Make sure failed tests cause gulp to exit non-zero\n   throw err;\n})\nI guess we should only be interested in args with --, teamcity additionally adds it's own args:\n--no-color --teamcity.properties.all --teamcity.properties\nhence replaced:\nvar args = params.length > 3 ? [params[3], params[4]] : [];\nwith \nvar args = [];\n  for (var i = 0; i < params.length; i++) {\n    if(params[i].substring(0, 2) == '--') args.push(params[i]);\n  }\nto make sure all args are passed through protractor\n/cc @zckrs @pdf13 \n. ",
    "furnace915": "var args = process.argv.slice(3) also works. ",
    "storkme": "@jamm shouldn't that be:\n``` javascript\n// @ngInject\nexport default function FunctionName() {}\n```\n?\n:+1: for this idea though.\n. That's a shame - I hadn't considered traceur support to be honest. It works I suppose :+1:\nI'm not sure Y024 is relevant here - aren't the functions essentially 'named' by whatever imports them? Besides that, the function in my little code snippet was named too. (disclaimer I haven't worked with es6 modules a whole lot, might be missing something)\n. ",
    "ufoscout": "Absolutely interested in this! TypeScript users would definitely love it!\nCould it be extended to e2e tests too?\n. Adding phantomjs to the dev dependencies solves the issue:\nnpm install phantomjs --save-dev\nShouldn't it be included automatically during the generation of the project?\n. ",
    "JR-Utily": "I've done it manually\nin script.js, duplicate the interesting part in another task\n``` javascript\n  // specific task that will compile .spec.ts files too, but without concat neither moving them to serve/app dir\n  gulp.task('scripts:test', ['scripts:app'], function(){\n    return gulp.src(path.join(conf.paths.src, '/app/*/.spec.ts'))\n      .pipe($.sourcemaps.init())\n      .pipe($.tslint())\n      .pipe($.tslint.report('prose', { emitError: false }))\n      .pipe($.typescript(tsProject)).on('error', conf.errorHandler('TypeScript'))\n      .pipe($.sourcemaps.write())\n      .pipe($.size())\n  });\ngulp.task('scripts:app', ['tsd:install', 'constants'], function () {\n  return gulp.src( [path.join(conf.paths.src, '/app//*.ts'), '!/*.spec.ts'] )\n    .pipe($.sourcemaps.init())\n    .pipe($.tslint())\n    .pipe($.tslint.report('prose', { emitError: false }))\n    .pipe($.typescript(tsProject)).on('error', conf.errorHandler('TypeScript'))\n    .pipe($.concat('index.module.js'))\n    .pipe($.sourcemaps.write())\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/app')))\n    .pipe(browserSync.reload({ stream: true }))\n    .pipe($.size())\n  });\ngulp.task('scripts', ['scripts:app']);\n```\nin unti-test.js, include this new task\n``` javascript\ngulp.task('test', ['scripts:test'], function(done) {\n  runTests(true, done);\n});\ngulp.task('test:auto', ['scripts:test', 'watch'], function(done) {\n  runTests(false, done);\n});\n```\nand you have to tweak tsd.js and tsd.json to include jasmine.t.ds as well (it wil not do it automatically as jasmine dep is not in bower but in npm)\n``` javascript\ngulp.task('tsd:install', function () {\n  var bower = require(path.join(process.cwd(), 'bower.json'));\n// reading extra dependencies from tsd.json\n  var extraDependencies = require(path.join(process.cwd(), tsdJson)).extra_dependencies;\nvar dependencies = [].concat(\n    Object.keys(bower.dependencies),\n    Object.keys(bower.devDependencies),\n    extraDependencies\n  );\n// ....\n}\n```\njson\n{\n  \"version\": \"v4\",\n  \"repo\": \"borisyankov/DefinitelyTyped\",\n  \"ref\": \"master\",\n  \"path\": \".tmp/typings\",\n  \"bundle\": \".tmp/typings/tsd.d.ts\",\n  \"extra_dependencies\": [\"jasmine\"]\n}\nHope it helps !\n. Experiencing same problem here, jasny is not recognized.\nTaking inspiration from @dereklin, I've changed the exclude for\nexports.wiredep = {\n  exclude: [/\\/bootstrap.js$/, /\\/bootstrap\\.css/],\n  directory: 'bower_components'\n};\nassuming the files would start by a / , but I'm not sure it would work on windows too. Works fine on linux.\n. Hello,\nI've made a small workaround to have my fonts working (I'm using less and full bootstrap too)\nI don't plan to make a PR for that, but here is the code, while waiting for the next release.\n``` javascript\n// fix to hard copy fonts from Bootstrap as they don't include their fonts in their bower.json file\ngulp.task('copy-bs-fonts', function(){\n  return gulp.src(conf.wiredep.directory+'/bootstrap/fonts/*.{eot,svg,ttf,woff,woff2}')\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n// Only applies for fonts from bower dependencies\n// Custom fonts are handled by the \"other\" task\ngulp.task('fonts', ['copy-bs-fonts'], function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('*/.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n```\n. Svg files are not taken into account by default, I think.\nBut you can easily make a small task that will copy them where you want.\ngulp.task('build:copy-flags', function(){\n  return gulp.src(conf.wiredep.directory+'/flag-icon-css/flags/*')\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/flags/')));\n});\nthen link this task to your build process\n. ",
    "ShMcK": "Scratch that, the fix didn't work after auto-reload kicked in.\nTemplates constantly revert to their first created version. I know, that doesn't sound like it makes any sense, but that's the issue I'm having with gulp serve.\nFor example, I make a page:\nhtml\n<h1>New Page</h1>\nThen I update the page:\nhtml\n<h1>New Page</h1>\n<p>Update</p>\nOn auto-reload, <p>Update</p> disappears.\n. yo-rc settings:\njavascript\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      },\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"name\": \"angular-ui-router\",\n        \"version\": \"~0.2.13\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": \"angular-bootstrap\",\n        \"version\": \"0.12.x\",\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\",\n        \"module\": \"gulp-sass\",\n        \"version\": \"~1.1.0\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"6to5\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\",\n        \"module\": \"gulp-6to5\",\n        \"version\": \"~1.0.2\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\",\n        \"module\": null,\n        \"version\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      }\n    }\n  }\n}\n. Thanks for getting back to me so quickly. I removed the few changes I made to the gulp files, but the problem still persists.\nUsing version 0.9.1. Also: the gulp/server.js file is the same. \nAny other ideas?\n. I just saw three different versions of the html loaded in front of me within a few seconds. Very strange. Maybe my computer is haunted by a daemon.\n. I tried updating all packages & re-installing, same issue.\nTo narrow down the phenomenon, what happens is:\n1) I make a change to the template, everything works fine for about 5-10 seconds.\n2) all bindings break.\n3) the change reverts to the original template.\n. ",
    "oblogic7": "Can confirm that build is failing with the same error.\n```\n/usr/local/bin/node /usr/local/lib/node_modules/gulp/bin/gulp.js --color --gulpfile /Users/matt/PhpstormProjects/test-project/gulpfile.js build\n[09:34:31] Using gulpfile ~/PhpstormProjects/test-project/gulpfile.js\n[09:34:31] Starting 'styles'...\n[09:34:32] Starting 'partials'...\n[09:34:32] Starting 'images'...\n[09:34:32] Starting 'fonts'...\n[09:34:32] Starting 'misc'...\n[09:34:32] gulp-inject Nothing to inject into index.scss.\n[09:34:32] Finished 'misc' after 107 ms\n[09:34:32] Finished 'partials' after 347 ms\n[09:34:32] Finished 'fonts' after 193 ms\n[09:34:32] Finished 'images' after 197 ms\n[09:34:32] Finished 'styles' after 918 ms\n[09:34:32] Starting 'inject'...\n[09:34:32] gulp-inject 1 files into 404.html.\n[09:34:32] gulp-inject 1 files into index.html.\n[09:34:32] gulp-inject 3 files into 404.html.\n[09:34:32] gulp-inject 3 files into index.html.\n[09:34:32] Finished 'inject' after 194 ms\n[09:34:32] Starting 'html'...\n[09:34:33] gulp-inject 1 files into 404.html.\n[09:34:33] gulp-inject 1 files into index.html.\n/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js:330\n    target.$methodName = method.name;\n                       ^\nTypeError: Cannot assign to read only property '$methodName' of false\n    at matchRegular (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js:330:24)\n    at match (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js:36:66)\n    at traverse.post (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js:995:23)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:50:13)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:44:21)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:41:25)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:44:21)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:41:25)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:44:21)\n    at visit (/Users/matt/PhpstormProjects/test-project/node_modules/gulp-ng-annotate/node_modules/ng-annotate/node_modules/ordered-ast-traverse/ordered-ast-traverse.js:41:25)\nProcess finished with exit code 1\n``\n. Just figured this out.  Follow the instructions [here](https://github.com/Swiip/generator-gulp-angular/issues/347#issuecomment-76241019) carefully.  I tried this a couple of times and thought it wasn't working, but I was missing that I needed to change directories tonode_modules/gulp-ng-annotate/and runnpm update`.\n. ",
    "swamper": "That did it oblogic7. Already had 0.15.1 in the package.json btw. I ran update inside gulp-ng-annotate and everything appears to be good on build and serve both now. I will remember to go deeper in the stack next time. I had builds failing all over the place regardless of what was installed at generation. Thanks much.\n. ",
    "sarunast": "@jamm I have the same error messages as you have on my angularJs application. I get these while I am changing the URL using ui.route method $state.go() from controller. Is there any way to stop these errors ? Seems like ghostMode:false didn't help.\n. In order to run karma tester I have to use cmd gulp test which runs this method from  unit-tests.js file. \njs\nfunction runTests(singleRun, done) {\n    listFiles(function (files) {\n        karma.server.start({\n            configFile: __dirname + '/../karma.conf.js',\n            files: files,\n            singleRun: singleRun,\n            autoWatch: !singleRun\n        }, done);\n    });\n}\nSo you can see that it is creating karma instance and including additional options. Whereas if I run karma only with karma.config.js  those additionally generated configs are not present . So it doesn't run any tests because the files variable are missing basically.\nIn hottowel generated karma.config.js he is including this data in file files: gulpConfig.karma.files.\nYou asked me why do I need it for WebStorm ? I need it because it has built in karma runner which is very useful it shows additional information about running karma tests and helps to navigate through the code stop/run tests. In order to make it work as said again I need a full karma.config.js file. \n( Side note: WebStorm is probably the most popular IDE and I am sure I am not the only one who is using these kind of tools. So that I wouldn't give you impression that I made up this problem and it is relevant only to me).\n. Related to: #473.\n. @ajkan The problem that I need to reconfigure it myself. It doesn't work out of the box. It is good that you are smart enough and understand how to configure it yourself. However people are generally lazy some of them do not have the time to find out how to reconfigure it, and they definitely don't want to spend time looking in the code to understand why it is not working which could be spent better. In the dream world you run generator you work on your app and you forget all the test/gulp config. That is the whole idea of the generator to save time and headaches. Anyway if it can cover both cases so why not ? It takes time to understand how these things works.\nI would not use both but other people from my team might use gulp test. Heck maybe they prefer just karma start and I might prefer WebStorm. Sometimes teams work with project not one person.\nIf you don't mind please share how you configured your karma file. I am curious to see it.\n. Sorry for not being clear, but I was only interested in files variable. To see your approach, which is not visible here, you add the files manually or did you managed to generate it ?:\nfiles: [\n \"path to files\"\n],\n. Well if that is what you are using it is not ideal, because wiredep should sort out all the bower_components folder javaScripts for you because there a lot of redundant javascript files in there and with your example you are loading everything in there. But thanks for sharing :+1: \n. v1 is out now.\n. ",
    "Boscop": "Any updates on this?\nI also would appreciate a CLI option to turn off ghost mode... ",
    "tuxity": "Hmmm yeah I saw that but with server ( http://www.browsersync.io/docs/options/#option-server ) I think I can't change the url. Should I use proxy option ?\nThx for the help !\n. Yep I want a custom url, not a custom port. Like subdomain.mydomain.dev\n. Perfect ! It works ! Thank you :)\n. ",
    "m1rc0": "I've encountered a simillar issue: TypeError: Cannot assign to read only property '$methodName' of false.\nI was also able to solve it with an upgrade of ng-annotate.\n. Thank you very much. My fault. \n. It it was so simple. No, the period is there and it works while serving but not after build.\n. Solved it...as I said, stupid. ;) \nTemplateUrl should not start with a slash.\ntemplateUrl: 'app/subfolder/myModalContent.html',\n. ",
    "robertbaker": "Never mind, had to edit the bower.json and add\n    \"angular-messages\": \"latest\"\nto it.\n. No, not quite. I updated my issue\n. ## In my case I needed to add   \n``\n    <!-- build:css({.tmp/serve,src}) styles/vendor.css -->\n      <link rel=\"stylesheet\" href=\"app/vendor.css\">\n      <!-- bower:css -->\n      <!-- rungulp inject` to automatically populate bower styles dependencies -->\n       endbower \n endbuild \n    ---\nin gulp/inject.js\n    var wiredepOptions = {\n      directory: 'bower_components',\n      exclude: [/material-design-iconic-font/, /material-design-iconic-font\\.css/]\n    };\n\nIn gulp/build.js\n .pipe(cssFilter) // <-- find this\n      .pipe($.replace('../../bower_components/material-design-iconic-font/fonts', '../fonts/'))\n\nin gulp/unit-tests.js\n    var bowerDeps = wiredep({\n      directory: 'bower_components', // < find\n      exclude: [/material-design-iconic-font/, /material-design-iconic-font\\.css/],\n\n```\n. I have it in another issue I created. Through bower, in my bower json.\nThe solution is to reference scss in vendor.scss so this bug is really the generator not making a vendor.css if angular-material is chosen, even though SASS is.\n. The issue is the generator does not create the vendor.scss file (and related gulp config) if angular-material is chosen, but SASS is.\nVendor scss and config should be generated if SASS is selected. Right now it's dependent on bootstrap sass being selected. IMO vendor.scss should be generated if the SASS option is selected. Right now it's only being generated if sass AND bootstrap-sass are selected.\n. That's the only way to import any SASS from bower_components.\nJust because I'm not using bootstrap, doesn't mean I'm not going to use any other bower packages that do use SASS.\nCurrently SASS files are ignored during injection, even if they are specified in the bower.json. The only way I found to use SASS from bower_components is to import the file in vendor.scss. Which does not exist (and the gulp config that goes with it) unless you specify bootstrap-sass.\nYou should get the capability to use the vendor.scss file if you choose a SASS option. If you don't need to import any sass from bower_components, the file just goes unused\nWhy wouldn't you want vendor.scss, bootstrap isn't the only bower package that uses SASS. It seems counter intuitive to only include vendor.scss if you choose bootstrap, when it doesn't need bootstrap at all. It's a feature tied to SASS and thus should be given if you choose a SASS option, not just the bootstrap SASS option.\n. @Swiip \nSee issue:\nhttps://github.com/taptapship/wiredep/issues/175#issuecomment-89404985\nI'll try to find some time to give a repro case.\n\nAlso, I don't believe the inject task is configured to look for SCSS files: >https://github.com/Swiip/generator-gulp-angular/blob/v0.10.0/app/templates/gulp/_inject.js#L59.\nIf you can confirm this still won't work after pointing wiredep to your SCSS file which has placeholders like shown above, a test case will definitely be appreciated :)\n\nWhat is the use case for vendor.scss file, if wiredep can inject scss?\n. No I didn't, glanced at this issue and thinking it's an issue with wiredep.\nI created an issue on their project, https://github.com/taptapship/wiredep/issues/175\n. See issue:\nhttps://github.com/taptapship/wiredep/issues/175#issuecomment-89404985\nI'll try to find some time to give a repro case.\n\nAlso, I don't believe the inject task is configured to look for SCSS files: >https://github.com/Swiip/generator-gulp-angular/blob/v0.10.0/app/templates/gulp/_inject.js#L59.\nIf you can confirm this still won't work after pointing wiredep to your SCSS file which has placeholders like shown above, a test case will definitely be appreciated :)\n. Updated my proj to 0.11.\n\nClosing until I can repro again.\n. Add ESLint as an alt for jscs\n. +1\n. Anxiously awaiting the completion of this. I have already changed my js files to use IFE and named functions and controllerAs.\n. I did but I did it by doing my redoing all the gulp tasks. I broke them down on a per function basis with gulp4. I also used gulp-if and lazy pipes.\n. Needs merged @Swiip \n. merge merge merge :)\n. Are the gulp files wrapped in an IFFE? I did that to my own proj and everything works.\n. In the dist folder you still have dist/app/* which has nothing but empty folders. I think the dist/app/* should be removed after the dist build completes.\n. If you go back a few commits, you will see what this generator used to have components as a parent directory.\nHowever, there are good reasons for having everything reside in app, including components.\nYour components are most likely tied and related to your app anyway, why have it in a top directory?\n. I'm running the latest node and latest NPM (with the latest packages npm needs)\nYou need npm-check-updates installed.\nNode 12.2 has a slightly broken NPM, I would update it.\nThis assumes Windows x64.\n```\n@echo on\ncall npm cache clean -f\ncd /d \"C:\\Program Files\\nodejs\"\ncall npm install npm@latest\ncd /d \"C:\\Program Files\\nodejs\\node_modules\\npm\"\ncall npm-check-updates -u\ncd /d \"C:\\Program Files\\nodejs\\node_modules\\npm\"\ncall npm update\ncd /d \"C:\\Program Files\\nodejs\\node_modules\\npm\"\ncall npm update -g\ncall npm-check-updates -g\npause\n```\n. Would be a good idea to update to 15.04 :)\nThis generator has outdated dependencies, I updated everything to the latest package version and everything works fine. It might fix your issue.\nnpm install -g bower-update npm-check-updates\nthen under your project root run\nnpm-check-updates -g // run npm install -g packagename for stuff outdated\nnpm-check-updates -u\nnpm update\nbower-update\nbower update\nthen run the gulp task that updates the web driver.\n. It is a generator issue. For some reason the order of files on serve (which works) is not the same as the order they are inserted in the app.js on build (which doesn't)\n. Sure, some time this week.\n. I like it there, it's easily removed and doesn't work unless you edit the id.\n. I think removing tsd:install from the build process all together would be better. You have to manually run tsd if you don't have the definitions or you need to update it, but the defs don't change that often.\nOr maybe just run before serve or build.\n. Bower/NPM post install works for me.\n. @zckrs  Gulp4 is almost ready. I already started completely redoing the gulp tasks using gulp 4 and lazy pipes. \n. ",
    "stevemao": "Not sure what causes the problem but this needs to be fixed\n. No :disappointed: \n. Had some time to investigate this. \nThey have updated lodash https://github.com/yeoman/generator/blob/master/package.json#L54\nHowever, you will need to import your own underscore.string https://github.com/yeoman/generator/commit/803d2cd487cb8f845b1c8284f62198f835a3d0ae\nI will repush this once a they have made a new release.\nreopening this for reference\n. Also if Travis returns a success that means there is not enough coverage?\n. :+1: \n. ",
    "luxp": "OK, thank you.\n. I meet the same problem\n. ",
    "nowres": "I use latest version 0.10.0, without autoWatch option, the tests are executed but used old sources.\n. ",
    "astw": "gulp test:auto  throws exception\nC:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\gulp\\unit-tests.js:39\n          .concat(_.pluck(files, 'path'))\n          ^\nTypeError: Cannot read property 'concat' of undefined\n    at C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\gulp\\unit-tests.js:39:11\n    at ConcatStream. (C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\concat-stream\\index.js:36:43)\n    at ConcatStream.emit (events.js:129:20)\n    at finishMaybe (C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\concat-stream\\node_modules\\readable-stream\\lib_stream_writable.js:460:14)\n    at endWritable (C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\concat-stream\\node_modules\\readable-stream\\lib_stream_writable.js:469:3)\n    at ConcatStream.Writable.end (C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\concat-stream\\node_modules\\readable-stream\\lib_stream_writable.js:436:5)\n    at DestroyableTransform.onend (C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\gulp\\node_modules\\vinyl-fs\\node_modules\\through2\\node_modules\\readable-stream\\lib_stream_readable.js:523:10)\n    at DestroyableTransform.g (events.js:199:16)\n    at DestroyableTransform.emit (events.js:129:20)\n    at C:\\Users\\bwang\\icetrain\\frontend_gulp_angular\\node_modules\\gulp\\node_modules\\vinyl-fs\\node_modules\\through2\\node_modules\\readable-stream\\lib_stream_readable.js:965:16\n. Sorry,  this is URL rewrite issue.\nI will close this one.\n. ",
    "webcaetano": "Same problem here.\nApparently not every package follow the same bower.json default for main.\n. The error are in WireDep\nhttps://github.com/taptapship/wiredep#what-can-go-wrong\nFixed by doing this.\nhttps://github.com/taptapship/wiredep#bower-overrides\n. ",
    "monstromatic": "I tried \nmodule.exports = function(){\n  return [proxyMiddleware];\n};\nNo more error in terminal but the proxy doesn't work anymore... \n. ",
    "paweln1986": "I have got same issue. Below chages in gulpfile.js helps me and now proxy works as before update.  \njavascript\nif(file==='proxy.js'){\n   require('./gulp/' + file)\n}else{\n  require('./gulp/' + file)(options);\n}\n. Try to change gulpfile.js to \n``` javascript\n'use strict';\nvar gulp = require('gulp');\nvar gutil = require('gulp-util');\nvar _ = require('lodash');\nvar wrench = require('wrench');\nvar options = {\n  src: 'src',\n  dist: 'dist',\n  tmp: '.tmp',\n  e2e: 'e2e',\n  errorHandler: function(title) {\n    return function(err) {\n      gutil.log(gutil.colors.red('[' + title + ']'), err.toString());\n      this.emit('end');\n    };\n  }\n};\nwrench.readdirSyncRecursive('./gulp').filter(function(file) {\n  return (/.(js|coffee)$/i).test(file);\n}).map(function(file) {\n  if(file==='proxy.js'){\n    require('./gulp/' + file)\n  }\n  else{\n    require('./gulp/' + file)(options);\n  }\n});\ngulp.task('default', ['clean'], function () {\n    gulp.start('build');\n});\n```\nIt is ugly workaround but for me work.\n. ",
    "jahumes": "I am also getting this issue. I have tried making changes to the target, but with no success. The following code causes gulp serve to fail. Below is my entire proxy file with just the change made to activate it.\n``` javascript\n /jshint unused:false /\n/**\n...\n**/\n'use strict';\nvar httpProxy = require('http-proxy');\nvar chalk = require('chalk');\nvar proxyTarget = 'http://server/context/';\nvar proxy = httpProxy.createProxyServer({\n  target: proxyTarget\n});\nproxy.on('error', function(error, req, res) {\n  res.writeHead(500, {\n    'Content-Type': 'text/plain'\n  });\nconsole.error(chalk.red('[Proxy]'), error);\n});\n/\n * ...\n /\nfunction proxyMiddleware(req, res, next) {\n  /\n   * ...\n   /\n  if (/.(html|css|js|png|jpg|jpeg|gif|ico|xml|rss|txt|eot|svg|ttf|woff|woff2|cur)(\\?((r|v|rel|rev)=[-.\\w]*)?)?$/.test(req.url)) {\n    next();\n  } else {\n    proxy.web(req, res);\n  }\n}\n/\n * This is where you activate or not your proxy.\n \n * The first line activate if and the second one ignored it\n */\nmodule.exports = [proxyMiddleware];\n//module.exports = function() {\n//  return [];\n//};\n```\nAnd I am getting the following error. When module.exports = [proxyMiddleware]; is commented out, gulp serve fires but without proxy.\nTypeError: object is not a function\n    at /Users/jhumes/Code/Outbox/ITPlatformAngular/gulpfile.js:24:28\n    at Array.map (native)\n    at Object.<anonymous> (/Users/jhumes/Code/Outbox/ITPlatformAngular/gulpfile.js:23:4)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Liftoff.handleArguments (/usr/local/lib/node_modules/gulp/bin/gulp.js:116:3)\n. ",
    "drmikeh": "I fixed the problem by changing 2 lines in gulp/server.js. I changed this:\njavascript\n    if(middleware.length > 0) {\n      server.middleware = middleware;\nto this:\njavascript\n    if(middleware().length > 0) {\n      server.middleware = middleware();\nand my proxy.js returns this:\njavascript\nmodule.exports = function() {\n  return [proxyMiddleware];\n};\n. ",
    "mojics": "When I applied your fix, it now serves the proxy but not the src\nI ended up using proxy-middleware\n. here is mine.. i removed all configuration of proxy.js and modified server.js. I installed 'http-proxy' and  added environment feature for dev, staging and prod :). Hope it helps.\n```\n'use strict';\nvar gulp = require('gulp');\nvar browserSync = require('browser-sync');\nvar browserSyncSpa = require('browser-sync-spa');\nvar gutil = require('gulp-util');\nvar util = require('util');\nvar middleware = require('./proxy');\nvar httpProxy = require('http-proxy');\nmodule.exports = function(options) {\nfunction browserSyncInit(baseDir, browser, env) {\n    browser = browser === undefined ? 'default' : browser;\n    env = env === undefined ? 'makdev' : env;\n    var routes = null;\n    if(baseDir === options.src || (util.isArray(baseDir) && baseDir.indexOf(options.src) !== -1)) {\n      routes = {\n        '/bower_components': 'bower_components'\n      };\n    }\ngutil.log('Configured for ' + gutil.colors.green('[' + env + '] environment'));\n\nvar proxyStripped = httpProxy.createProxyServer({\n    target: 'http://' + env + '.yourapi.com'\n  });\n\nfunction fnProxyMiddleWare (req, res, next) {\n  if (req.url.indexOf('/api/services') === 0) {\n    proxyStripped.web(req, res);\n  }\n  else {\n    next();\n  }\n}\n\nvar server = {\n  baseDir: baseDir,\n  routes: routes,\n  middleware: [fnProxyMiddleWare]\n};\n\nif(middleware.length > 0) {\n  server.middleware = middleware;\n}\n\nbrowserSync.instance = browserSync.init({\n  startPath: '/',\n  server: server,\n  browser: browser\n});\n\n}\nbrowserSync.use(browserSyncSpa({\n    selector: '[ng-app]'// Only needed for angular apps\n  }));\ngulp.task('serve', ['watch'], function () {\n    browserSyncInit([options.tmp + '/serve', options.src]);\n  });\ngulp.task('serve:dev', ['build'], function () {\n    browserSyncInit(options.tmp, [], 'dev' );\n  });\ngulp.task('serve:staging', ['build'], function () {\n    browserSyncInit(options.tmp, [], 'staging');\n  });\ngulp.task('serve:test', ['build'], function () {\n    browserSyncInit(options.tmp, [], 'test');\n  });\ngulp.task('serve:prod', ['build'], function () {\n    browserSyncInit(options.dist);\n  });\ngulp.task('serve:e2e', ['inject'], function () {\n    browserSyncInit([options.tmp + '/serve', options.src], []);\n  });\ngulp.task('serve:e2e-dist', ['build'], function () {\n    browserSyncInit(options.dist, []);\n  });\n};\n```\n. I have tested this but still no good.. \ni use another module , proxy-middleware  and added few tweaks..\n. Hi! \nFirst I installed proxy-middleware:\nvar proxy = require('proxy-middleware');\nvar util = require('util');\nThen I added this two code at the top of browsersync configuration\n```\nvar proxyOptions = url.parse('http://localhost/rest');\nproxyOptions.route = '/api';\nserver.middleware = [proxy(proxyOptions)];\nbrowserSync.instance = browserSync.init({\n  startPath: '/',\n  server: server,\n  browser: browser\n});\n```\nHere is my full server.js\n```\n'use strict';\nvar gulp = require('gulp');\nvar browserSync = require('browser-sync');\nvar browserSyncSpa = require('browser-sync-spa');\nvar url = require('url');\nvar proxy = require('proxy-middleware');\nvar util = require('util');\nvar middleware = require('./proxy');\nmodule.exports = function(options) {\nfunction browserSyncInit(baseDir, browser) {\n    browser = browser === undefined ? 'default' : browser;\nvar routes = null;\nif(baseDir === options.src || (util.isArray(baseDir) && baseDir.indexOf(options.src) !== -1)) {\n  routes = {\n    '/bower_components': 'bower_components'\n  };\n}\n\nvar server = {\n  baseDir: baseDir,\n  routes: routes\n};\n\nif(middleware.length > 0) {\n  server.middleware = middleware;\n\n}\n var proxyOptions = url.parse('http://localhost/rest');\nproxyOptions.route = '/api';\n\nserver.middleware = [proxy(proxyOptions)];\nbrowserSync.instance = browserSync.init({\n  startPath: '/',\n  server: server,\n  browser: browser\n});\n\n}\nbrowserSync.use(browserSyncSpa({\n    selector: '[ng-app]'// Only needed for angular apps\n  }));\ngulp.task('serve', ['watch'], function () {\n    browserSyncInit([options.tmp + '/serve', options.src]);\n  });\ngulp.task('serve:dist', ['build'], function () {\n    browserSyncInit(options.dist);\n  });\ngulp.task('serve:e2e', ['inject'], function () {\n    browserSyncInit([options.tmp + '/serve', options.src], []);\n  });\ngulp.task('serve:e2e-dist', ['build'], function () {\n    browserSyncInit(options.dist, []);\n  });\n};\n```\n. Thanks! I also I applied it on my setup, and it is now working.\n. ",
    "jackhutu": "@ronaldallanmojica Can you tell me how to fix?\n. @ronaldallanmojica Can you tell me how to fix?\n. ",
    "shawn-simon": "I figured out the issue. ./proxy.js is getting required at the start and expects an options param. However in it's re-required later in server.js with out the function being executed. The commented out line wouldn't work. It should not be included in the initial require as @paweln1986  pointed out. \n. Not sure if this is helpful but I actually rewrote that part locally. I removed the proxy / server JSON from the browsersync init, and removed proxy.js. Then I have gulp serve kick off nodemon for my express app, passing in configuration that tells it to inject the browserSync javascript snippet on the index. It works a lot better. The downside is that you need to get gulp working with a different current working directory. Now that it's working, I wouldn't go back to the other method, since you can't watch server files, or use serverside templating.\n. Here's mine using nodemon instead of the proxy / watch server:\n```\n'use strict';\nvar gulp = require('gulp');\nvar browserSync = require('browser-sync');\nvar browserSyncSpa = require('browser-sync-spa');\nvar util = require('util');\nvar chalk = require('chalk');\nvar nodemon = require('gulp-nodemon');\nmodule.exports = function(options) {\nfunction nodemonInit(build_type) {\n    var configuration = {\n      webclient: {\n        browserSync: true,\n        development: build_type === 'dist' ? false : true\n      }\n    }\n    nodemon({\n      script: 'server.js',\n      env: {\n        'NODE_CONFIG': JSON.stringify(configuration)\n      }\n    })\n    console.log(chalk.blue(\"web server starting\"))\n  }\nfunction browserSyncInit(baseDir, browser) {\n    browser = browser === undefined ? 'default' : browser;\n    browserSync.instance = browserSync.init({\n      startPath: '/',\n      browser: browser,\n      notify: false,\n      ui: false,\n      logSnippet: false, // Set this to true when you first try this script\n    });\n  }\n  browserSync.use(browserSyncSpa({\n    selector: '[ng-app]'// Only needed for angular apps\n  }));\ngulp.task('serve', ['watch'], function () {\n    browserSyncInit([options.tmp + '/serve', options.src]);\n    nodemonInit()\n  });\ngulp.task('serve:dist', ['build'], function () {\n    browserSyncInit(options.dist);\n    nodemonInit('dist')\n  });\n};\n```\n. just from scanning the code, I think it searches for *.html ... not positive though\n. ",
    "zztop101": "Hi, I tried this today and got the same problems described above. I tried above suggestions but could not get it working. On load the whole page seem to try and redirect to whatever was in proxyTarget.\n. Still doesn't work for me. If I try TallyB change I get \n404 Not Found: Requested route ('localhost') does not exist.\nas soon as I do gulp serve.\n. I do:\nyo gulp-angular\nmake the change you suggest:\nproxy.js \nvar proxyTarget = 'http://rest-service.guides.spring.io/';\nmodule.exports = function() {\n    return [proxyMiddleware]; \n};\nserver.js\nvar middleware = require('./proxy')();\nthen:\ngulp serve \nresult displayed on browser at start up\n404 Not Found: Requested route ('localhost') does not exist. \n. Hey, this is exactly what I want as well. I want the ability to run my protractor tests and run gulp serve  using all mocks, and then option to exclude mocks for the real build. mdentinho - did you manage to achieve this ? \n. ",
    "sebastianovide": "Thanks @zckrs . I'm closing this as it is rsvp bug\n. @stefanpenner  https://github.com/components/rsvp.js/releases 3.0.17 still contain the old code. Do you need to release a new version ?\n. :dancers:\n. ok. I've ended up creating a folder where the UI guy can put whatever he wants. Inside that folder there is another folder called webapp and gulp is builind there instead of building in dest. It is very ugly but it works for now. (even if the UI content is not minimized and every time that I want to test all together I need to build)... \n. ok problem solved. The last lines of one https://github.com/sebastianovide/LeanSeed.co.uk/blob/cefbd0b38fb68e91699807223c1d4ec4b206fe80/src/app/index.css contains strange characters that don't create any problems while running \"gulp serve\" but that break the css when the css are all combined.\n. ",
    "stefanpenner": "bower should be pulling from https://github.com/components/rsvp.js which is (as of this morning correct)\nhttps://github.com/components/rsvp.js/commit/0b1e4942dd638d6b49ae8a8e7a3b35f1efbbdce7\n. grumble grumble JS package management grumble grumble\nya i'll do that\n. re-tagged 3.0.17 to not be broken.\n. ```\nbower rsvp#                    cached git://github.com/components/rsvp.js.git#3.0.17\nbower rsvp#                  validate 3.0.17 against git://github.com/components/rsvp.js.git#*\n{\n  name: 'rsvp.js',\n  version: '3.0.17',\n  homepage: 'https://github.com/tildeio/rsvp.js',\n  authors: [\n    'Stefan Penner stefan.penner@gmail.com'\n  ],\n  description: 'A lightweight library that provides tools for organizing asynchronous code',\n  main: 'rsvp.js',\n  keywords: [\n    'promise'\n  ],\n  license: 'MIT',\n  ignore: [\n    'node_modules',\n    'bower_components',\n    'test',\n    'tests',\n    'vendor',\n    'tasks'\n  ]\n}\nAvailable versions:\n  - 3.0.17\n  - 3.0.16\n  - 3.0.13\n  - 3.0.12\n  - 3.0.11\n  - 3.0.8\n  - 3.0.6\n  - 3.0.5\n  - 3.0.4\n  - 3.0.1\n  - 3.0.0\n  - 2.0.4\n  - 2.0.1\n  - 1.2.0\n  - 1.1.1\n  - 1.1.0\n  - 1.0.0\n  - 0.3.16\n  - 0.3.15\nYou can request info for a specific version with 'bower info rsvp#'\n```\n. :beers: \n. :dancers:\n. ",
    "jsmylnycky": "I removed the ga block, did a clean & serve, and still getting the same issue.\n. That looks to have cleared it up!\ngulp.task('scripts:watch', ['scripts'], function (callback) {\n    return webpack(true, callback);\n  });\n. @jasonswett It is now.  It was a bug that they corrected.\n. ",
    "jasonswett": "I had this same issue. How come scripts isn't set as a dep for scripts-watch out of the box?\n. ",
    "timofeysie": "Thanks for that.  The tests are running now.  However, they are failing to load modules and I have noticed that the karma.conf.js file also has what looks like conflicting configuration info in the files property.  Should the karma.conf.js files be set the same as the unit-tests.js testFiles?\nAlso, it seems like bower_components/*/.js needs to have a leading /, but the test folder not.  What is the deal with that?\nThanks for your help.\n. ",
    "lebsral": "To make this more simple I created this new clean setup.  The gulp test also fails here\nhttps://github.com/lebsral/testvideo2\n. Matthieu,\nThanks, that was very helpful.\nI spent an hour 'digging'  but since I had no idea which direction to dig\nin I got no closer to an answer.\nAfter your help I got it in about 10 minutes.\nLars\nOn Tue, Jul 14, 2015 at 11:29 AM, Matthieu Lux notifications@github.com\nwrote:\n\ngoogle.places is the module name, not a service name. Look at the lib doc\nhttps://github.com/kuhnza/angular-google-places-autocomplete.\nThis has nothing to do with the generator, please dig a little before\nasking.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/669#issuecomment-121349351\n.\n. \n",
    "BobbieBarker": "I am getting the same thing, except I do not have analytic s installed. \nI get this:\nWARN [watcher]: Pattern \"/Users/lars/mycode/ticsonly/src/*/.mock.js\" does not match any file.\nand I get this:\nat formatError (/usr/local/lib/node_modules/gulp/bin/gulp.js:169:10)\nCept wtih a different file path.\n. seems like a non starter. I would just use es6 promises. \n. ",
    "dmitriynosenko": "Yes, it gives ability to use HTML5 mode without proxies, but in the same time I can't manage files without extensions because it thinks that this is route and not resource.\n. I added this to watch.js under gulp folder. Seems like all is working but not after auto refresh by browser sync. \ngulp.watch(path.join(conf.paths.src, '/app/**/*.ts'), function(event) {\n    if(isOnlyChange(event)) {\n      gulp.start('scripts');\n    } else {\n      gulp.start('inject');\n    }\n  });\nSo maybe I should do other steps?\n. @jasteph worked for me, but very slow event in empty project.\nSeems like there is better solution in #901. \nThanks everyone!\n. ",
    "busches": "Whoops forgot to mention that, other generators are working fine, tried gulp-ng and ng-poly. I'll update the original issue.\n. Here's the output from running yo gulp-ng and then trying to run yo gulp-angular. I've also included node and yeoman versions.\n``` bash\n\u03bb node -v\nv0.12.1\n\u03bb yo --version\n1.4.5\n\u03bb mkdir test-gulp-ng && cd test-gulp-ng\nC:\\Users\\buschs1\\Desktop\\test-gulp-ng\n\u03bb yo gulp-ng\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nThis generator will generate a web app project using gulp, bower and angularjs.\n   create app\\app.css\n   create app\\app.js\n   create app\\app_controller.js\n   create app\\app_controller_test.js\n   create app\\index.html\n   create app\\components\\app_service.js\n   create app\\components\\app_service_test.js\n   create app\\main\\main.html\n   create app\\main\\main_controller.js\n   create app\\main\\main_controller_test.js\n   create .bowerrc\n   create bower.json\n   create gulpfile.js\n   create package.json\n   create karma-unit.js\nI'm all done. Running bower install & npm install for you to install the required dependencies. If this fails, try running the command yourself.\n^CTerminate batch job (Y/N)?\n^C\nC:\\Users\\buschs1\\Desktop\\test-gulp-ng\n\u03bb cd .. && mkdir test-gulp-angular2 && cd test-gulp-angular2\nC:\\Users\\buschs1\\Desktop\\test-gulp-angular2\n\u03bb yo gulp-angular\nC:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-gulp-angular\\node_modules\\yeoman-generator\\lib\\base.js:445\n  this.env.sharedFs.on('change', writeFiles);\n                    ^\nTypeError: undefined is not a function\n    at run (C:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-gulp-angular\\node_modules\\yeoman-generator\\lib\\base.js:445:21)\n    at Environment.run (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\environment.js:331:20)\n    at C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:91:9\n    at Environment.resolver.lookup (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\resolver.js:50:12)\n    at init (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:66:7)\n    at pre (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:53:3)\n    at Object. (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:155:1)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n```\nI will try with node 0.12.2-x64 in a bit.\n. Same error on node v0.12.2-x64 on Win7, but I'm also able to get yo ng-poly to break now too. yo gulp-ng still works. Guessing it's an issue with yeoman-generator and I will open there.\n``` shell\nC:\\Users\\buschs1\\Desktop\n\u03bb node -v\nv0.12.2\nC:\\Users\\buschs1\\Desktop\n\u03bb yo --version\n1.4.5\nC:\\Users\\buschs1\\Desktop\\test-gulp-angular2\n\u03bb yo gulp-angular\nC:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-gulp-angular\\node_modules\\yeoman-generator\\lib\\base.js:445\n  this.env.sharedFs.on('change', writeFiles);\n                    ^\nTypeError: undefined is not a function\n    at run (C:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-gulp-angular\\node_modules\\yeoman-generator\\lib\\base.js:445:21)\n    at Environment.run (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\environment.js:331:20)\n    at C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:91:9\n    at Environment.resolver.lookup (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\resolver.js:50:12)\n    at init (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:66:7)\n    at pre (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:53:3)\n    at Object. (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:155:1)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\nC:\\Users\\buschs1\\Desktop\\test-gulp-angular2\n\u03bb yo ng-poly\nC:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-ng-poly\\node_modules\\yeoman-generator\\lib\\base.js:445\n  this.env.sharedFs.on('change', writeFiles);\n                    ^\nTypeError: undefined is not a function\n    at run (C:\\Users\\buschs1\\AppData\\Roaming\\npm\\node_modules\\generator-ng-poly\\node_modules\\yeoman-generator\\lib\\base.js:445:21)\n    at Environment.run (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\environment.js:331:20)\n    at C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:91:9\n    at Environment.resolver.lookup (C:\\Program Files\\nodejs\\node_modules\\yo\\node_modules\\yeoman-environment\\lib\\resolver.js:50:12)\n    at init (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:66:7)\n    at pre (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:53:3)\n    at Object. (C:\\Program Files\\nodejs\\node_modules\\yo\\lib\\cli.js:155:1)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\nC:\\Users\\buschs1\\Desktop\\test-gulp-angular2\n\u03bb yo gulp-ng\n _-----_\n|       |\n|--(o)--|   .--------------------------.\n\n---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U_ )   |   ladies and gentlemen!  |\n    /A\\   '____'\n     |  ~  |\n   '.___.'__\n \u00b4   |\u00b0 \u00b4 Y\nThis generator will generate a web app project using gulp, bower and angularjs.\n``\n. Note this is only failing fortest:auto,testworks just fine. When runningtest:autowiredepOptionshas astreamkey that contains theindex.htmland when passed towiredepit's returning html instead of a JS object.\n. This issue goes much deeper than justgulp-protractor, I \"fixed\" the issue ingulp-protractor, but that revealed an issue inprotractorwhen loading the configuration. I also had issues withgulp-compassin my builds with the space. Most of it stems fromchild_process.spawnnot allowing spaces on Windows, even by means of escaping. You could open an issue againstgulp-protractor, etc., but ultimately you'll be fighting a steep uphill battle to get the space to work until it's fixed inchild_process.spawn`. \nI'd close this issue, as it's nothing the generator can fix.\n. Oops, this is my fault, as I for some reason was missing globalstrict: true, so I was seeing line 1, col 1, Use the function form of \"use strict\". \nThanks helping me find my mistake.\n. Look at inject.js and change the return statement there to be return gulp.src(options.src + '/*.htm') or even .*htm* to handle both. You'll need to make similar changes to build.js and watch.js.\n. Yea, the more node I play with the most issues I have on Windows, that don't happen on our CI servers, which are linux.\n. If you have no interest in contributions from windows users, then yes, this feature is not useful.\n. This fails on Windows:\n```\n\u03bb npm test\n\ngenerator-gulp-angular@0.11.0 pretest C:\\Users\\buschs1\\Desktop\\generator-gulp-angular\n./scripts/prepare-test.sh\n\n'.' is not recognized as an internal or external command,\noperable program or batch file.\nnpm ERR! Test failed.  See above for more details.\n``\n. @zckrs if that's the case, then it won't fix issue #503, since that is about Windows specifically. I would document it that Windows users are SOL when it comes to contributing.\n. @raphox not sure if there's a question there or just a comment?\n. If this is happening out of the box with the generator, please post theyo-rc.jsonfile, so it can be reproduced and fixed. If it's from code you added, see Swiip's previous comment: https://github.com/Swiip/generator-gulp-angular/issues/719#issuecomment-132096409\n. He's missing https://github.com/Swiip/generator-gulp-angular/pull/721/files#diff-10714d4c2814d3de8dcf991155dd5d62R44 from his PR. Not sure how I missed his PR, otherwise I would have suggested the fix instead of opening a new one. :)\n. You should have lines similiar to the following in yourgulp/styles.js`:\njs\n  var injectFiles = gulp.src([\n    path.join(conf.paths.src, '/app/**/*.css'),\n    path.join('!' + conf.paths.src, '/app/index.css')\n  ], { read: false });\nThose should pickup any css file you have nested inside of /app/\n. I created a basic no nothing app from the generator. In the build.js file there is this line: var cssFilter = $.filter('**/*.css'); this picks up your css files. I added a new css file to app/ and it correctly injected it and served it with gulp serve.\nIf that is not working, please link to your yo-rc.json file so the issue can be replicated.\n. Whoops, ran the tests against the wrong branch, will fix and resubmit.\n. The -xxxx part is done by gulp-rev, removing the calls to the plugin in your Gulp build scripts will remove it. See their github repo on why it was created: https://github.com/sindresorhus/gulp-rev\n. Can you walk through what was so tightly coupled? It should be what @Swiip said and if it's not, that's somewhere the generated should be improved.\n. If it's not wanted I won't do it, but I view it the same as all the different flavors of JS files the generator offers. We can update the docs to point to http://html2jade.org/ at the very least though.\n. These questions should be directed to JQLite or protractor, not the generator.\n. If the build is already passing in stable, should it really be added to allow_failures?\n. There are quite a few generators for Cordova/Ionic already - http://yeoman.io/generators/\n. Check out this issue for sass - https://github.com/sass/sass/issues/1768\n. Are you behind a proxy?\n. The latest version of node 4.x.x is passing on CI, why remove it?\n. Attach your yo-rc.json file please. https://github.com/Swiip/generator-gulp-angular/blob/master/CONTRIBUTING.md#issues\n. Any commits to the same branch as the PR will auto push to the PR. If the commits should not belong, than they need to be on a separate branch. I would split the two new commits into a different branch and thus a different PR.\nIf you look in https://github.com/Swiip/generator-gulp-angular/blob/master/.travis.yml you can see that other than some prep work the Travis script is simply running npm test and you should be able to do some from your computer as well, assuming you're not on Windows.\n. Please see the Contributing page on how to open an issue. There's a lot of information missing from this issue needed to be able to reproduce it, e.g. generator version, options, etc.\n. This is a basic Angular question and doesn't actually relate the generator itself. I'd recommend reading the Angular documentation and utilizing the Angular Google Group for future generic Angular questions.\n. @alinnert You've crossed the bridge of asking a generic angular question instead of something related to the generator. Consider consulanting the Google Group.\n. I'd leave this issue opened, v1.0.1 should show up as a generator option.\n. Please attach the yo-rc file.\nOn Nov 29, 2015 10:57 AM, \"Anish Benjamin\" notifications@github.com wrote:\n\nThere seems to be issues with some of the dependencies of gulp-angular and\nnpm 3. The same issue occurs when installing npm 3.x on earlier versions of\nNode.js as well. From what I understand npm 3 does some sort of\nde-duplication of dependencies of installed packages that causes some of\nthem to fail. The packages need to updated to work with npm 3.\nMaybe someone with more experience on the matter can chime in.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/931#issuecomment-160431955\n.\n. Are you on Windows? If so see #901 and #893 \n. An example of what you changed and the error would help to fix this.\n. Please reference how to create an issue, so you can provide enough detail to get this resolved.\n. FYI they are already working on the 2.0 generator - https://github.com/FountainJS/generator-fountain-webapp\n. Wouldn't you be able to include angular-component for non 1.5 installations and use that polyfill?\n. You're missing the period for the html extension.\nOn Jan 1, 2016 4:37 PM, \"Mirco\" notifications@github.com wrote:\nHi there,\nI've a strange problem I've pointed to a modal's template like the\nfollowing:\ntemplateUrl: '/app/subfolder/myModalContenthtml',\nNow after build I get the following error:\nError: [$compile:tpload] Failed to load template:\n/app/subfolder/myModalContenthtml (HTTP status: undefined undefined)\nI would be very grateful for any hints\nThank you very much\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/970.\n. Looks like one of the bower components has a JS error in it, since the error is being thrown in vendor.js\n. \n",
    "gsemet": "I config, the proxy should be used for this case (i do, and it works great!)\n. ",
    "MCautreels": "I'm having the same problem. Previous version (v0.9.1) works perfectly fine.\n. ",
    "seanfcarroll": "I'm also having this issue.\nhttp://stackoverflow.com/questions/29459131/cannot-install-gulp-angular\n. ",
    "andreierdoss": "+1 facing same issue\n. ",
    "jballands": "Same issue here\n. ",
    "cbentley": "I'm getting this, too.\n. ",
    "vinicius73": "+1\n. ",
    "bastienJS": "same issue!\n\n. @usman8806 still got the issue!\nWhat help me was this: In the files.json remove in the staticFiles the \"  \"karma.conf.js\",\" entry ! But I have no idea what I broke now :P\n. ",
    "utamanna": "I have a temp fix here:\nGo to the directory where it says it can't find karma.conf.js, so in my case it said: \n\"AssertionError: Trying to copy from a source that does not exist: /usr/local/lib/node_modules/generator-gulp-angular/app/templates/karma.conf.js\"\nI went to:\n/usr/local/lib/node_modules/generator-gulp-angular/app/templates/\nfor me there was a _karma.conf.js in that folder, create a copy of that file and rename it to karma.conf.js.\nAfter that I followed the generator prompts and everything worked!\n. @bastienJS I saw that was a referenced fix up above but when I got that error I didn't have any files in the folder I ran the generator in. Where is this files.json located in?\n. ",
    "JustinLien": "This fixed it: https://github.com/wss-world/generator-gulp-angular/commit/8cb7ed679fb6dda1050bbbf68732e7384ffd82c5\n~~For some reasons the update did not pull this change so I had to manually remove that line myself.~~\n@usman8806 that fixed it. \n. ",
    "anggiaj": "Still got the issue tho\n. ",
    "oliverjanik": "+1\n. ",
    "davguij": "@usman8806 Thanks, that fixes it.\n. ",
    "NeXTs": "Same issue here\nfollowing such properties: https://www.dropbox.com/s/s3us7tjeuf2fbal/%D0%A1%D0%BA%D1%80%D0%B8%D0%BD%D1%88%D0%BE%D1%82%202015-04-06%2016.46.52.png?dl=0\nwin7 x64. please ask if you need more details\n@usman8806 thanks. thats helped\n. ",
    "mistaanthony": "+1\n. ",
    "YonatanKra": "Hi,\nI still get this issue with the latest version of the generator.\n1) Installed the generator.\n2) yo it\n3) Just run the karma.conf in webstorm\n4) Get an empty test suite message.\n5) gulp test works as expected.\nAnything that I need to do in order to get this to work in webstorm?\nhere's my karma.conf:\n```\n'use strict';\nvar path = require('path');\nvar conf = require('./gulp/conf');\nvar _ = require('lodash');\nvar wiredep = require('wiredep');\nvar pathSrcHtml = [\n  path.join(conf.paths.src, '/*/.html')\n];\nfunction listFiles() {\n  var wiredepOptions = _.extend({}, conf.wiredep, {\n    dependencies: true,\n    devDependencies: true\n  });\nvar patterns = wiredep(wiredepOptions).js\n    .concat([\n      path.join(conf.paths.tmp, '/serve/app/index.module.js')\n    ])\n    .concat(pathSrcHtml);\nvar files = patterns.map(function(pattern) {\n    return {\n      pattern: pattern\n    };\n  });\n  files.push({\n    pattern: path.join(conf.paths.src, '/assets/*/'),\n    included: false,\n    served: true,\n    watched: false\n  });\n  return files;\n}\nmodule.exports = function(config) {\nvar configuration = {\n    files: listFiles(),\nsingleRun: true,\n\nautoWatch: false,\n\nngHtml2JsPreprocessor: {\n  stripPrefix: conf.paths.src + '/',\n  moduleName: 'myModule'\n},\n\nlogLevel: 'WARN',\n\nframeworks: ['phantomjs-shim', 'jasmine'],\n\nbrowsers : ['PhantomJS'],\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-phantomjs-shim',\n  'karma-coverage',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor'\n],\n\ncoverageReporter: {\n  type : 'html',\n  dir : 'coverage/'\n},\n\nreporters: ['progress'],\n\nproxies: {\n  '/assets/': path.join('/base/', conf.paths.src, '/assets/')\n}\n\n};\n// This is the default preprocessors configuration for a usage with Karma cli\n  // The coverage preprocessor is added in gulp/unit-test.js only for single tests\n  // It was not possible to do it there because karma doesn't let us now if we are\n  // running a single test or not\n  configuration.preprocessors = {};\n  pathSrcHtml.forEach(function(path) {\n    configuration.preprocessors[path] = ['ng-html2js'];\n  });\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if(configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\n. ",
    "Codem3ay": "Hey @YonatanKra I'm interested if you found a solution for this problem, still getting this empty test suite even if everything is setup correctly. ",
    "jossemarGT": "@andyperlitch hello! Which version of node are you using?\n. Thanks @andyperlitch :+1: I just needed to add changeOrigin: true to your script in the proxy server creation.\njavascript\nvar proxy = httpProxy.createProxyServer({\n  target: proxyTarget,\n  changeOrigin: true\n});\nHope to help somebody else with that 'cuz this issue got my nerve :cry: \n. How about leaving your fork alive and let me to apply your changes from new fork?\n. ",
    "JamesBender": "Has this been published? I just updated my generator and created an application, still getting this error.\n. ",
    "healthyme": "Sure. Here it is.\n{\n  \"generator-gulp-angular\": {\n    \"props\": {\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      },\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"name\": \"angular-animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"name\": \"angular-cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"name\": \"angular-touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"name\": \"angular-sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"name\": \"jquery\",\n        \"version\": \"~2.1.1\"\n      },\n      \"resource\": {\n        \"name\": \"restangular\",\n        \"version\": \"~1.4.0\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"name\": \"angular-route\",\n        \"module\": \"ngRoute\"\n      },\n      \"ui\": {\n        \"name\": \"bootstrap-sass-official\",\n        \"version\": \"~3.3.1\",\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"name\": \"angular-bootstrap\",\n        \"version\": \"0.12.x\",\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\",\n        \"module\": \"gulp-sass\",\n        \"version\": \"~1.1.0\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\",\n        \"module\": null,\n        \"version\": null\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\",\n        \"module\": null,\n        \"version\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      }\n    }\n  }\n}\n. @Swiip  np...Thanks for the reply though.\nI was just curious about it since the newer version looks a lot more stable.\n. @Stamy \nHi there,\nI do have karma and karma coverage configured on webstorm.\nLike you mentioned, the files are listed in the karma config file so webstorm can run the tests.\nSo, wouldn't the problem be resolved if you replace/add the files variable to your karma conf?\nI do not use the test task created by this generator as webstorm is already performing it for me.\nIs there any particular reason you would want to use both?\nPardon me if I didn't get your problem.\n. @Stamy \nI get what you mean. It did take some time for me to figure why the tests were not working too.\nI do have one of my team mates who uses sublime text and hence has to use the command line. karma start works with this config, gulp test task might not.\nIn terms of configuring it, this is how my karma conf looks like\n'use strict';\nmodule.exports = function(config) {\nconfig.set({\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n```\nautoWatch : true,\nframeworks: ['jasmine'],\nfiles: [\n \"path to files\"\n],\nbrowsers : ['Chrome'],\n// preprocess matching files before serving them to the browser\n// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\npreprocessors: {\n  '*/.js': ['coverage']\n},\n// test results reporter to use\n// possible values: 'dots', 'progress'\n// available reporters: https://npmjs.org/browse/keyword/karma-reporter\nreporters: ['progress', 'coverage'],\n// optionally, configure the reporter\ncoverageReporter: {\n  type : 'html',\n  dir : 'coverage/'\n},\n// web server port\nport: 9876,\n// enable / disable colors in the output (reporters and logs)\ncolors: true,\n// level of logging\n// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\nlogLevel: config.LOG_INFO,\nplugins : [\n  'karma-chrome-launcher',\n    'karma-phantomjs-launcher',\n    'karma-coverage',\n    'karma-jasmine'\n]\n```\n});\n};\n. yup \nsrc/components//*.js \nbower_components//*.js\n. Yw. It's actually specific component files like\n\"bower_components/angular/angular.js\",\n\"bower_components/angular-mocks/angular-mocks.js\",\n\"bower_components/angular-cookies/angular-cookies.js\",\n\"bower_components/angular-touch/angular-touch.js\",\n\"bower_components/angular-bootstrap/ui-bootstrap.js\",\nThe reason was because it kept complaining about those packages when I'd run the tests.\n. ",
    "dylanlawrence": "Just wondering if anyone has been able to make this work yet.  I also have a feeling this will become a more requested feature as \"offline availability\" becomes more popular, as this project seems an ideal fit.\n. ",
    "c0debreaker": "Thanks busches. I'll try it later.\nI noticed though that even just by dropping css files under src dir, it will be included in the injection.\n. Thanks. I noticed that all I have to do is add css or scss file under src and it will be included :)\n. ",
    "scttcper": "Try editing or importing your variable cutomizations in the vendor.scss file.\n. I'm missing fonts in dist folder as well on a new project started from current master. Running gulp serve:dist doesn't work either.\nUsing .pipe($.replace('../../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/', '../fonts/')) and copying the fonts and not doing a gulp clean works for now.\n. Got the same thing. Reverted to previous version: npm install -g generator-gulp-angular@v1.0.0\n. same as issue #920 \n. @Swiip rebased and tests are passing again.\n. @pablorsk sounds like you're having issues with ngInject\nMake sure you have ng-strict-di enabled and that you have 'ngInject' at the top of your controllers.\n. Depends what version of nginject you're using. Either way, that's where I would start looking for your issue.\nEdit: or babel 6 broke the version of nginject you're using\n. something isn't quite right when doing gulp build\n. doesn't support streams...\n. ",
    "NicoBleh": "Tried that:\n```\n/ The import of foundation is made manually because there is still no links of the\nsass version in theit bower.json... /\n@import '../../bower_components/foundation/scss/foundation';\n$body-bg: $black;\n/ Do not remove this comments bellow. It's the markers used by wiredep to inject\nsass dependencies when defined in the bower.json of your dependencies /\n// bower:scss\n// endbower\n```\nNothing changed with the background color.\n. ",
    "vbud": "I have ran into this same issue, and I've solved it a couple different ways.\nAfter generating the project, I usually merge vendor.scss into index.scss so that I have access to the variables and mixins of all the SASS dependencies.\nThe other options would be to import just Bootstrap's variables.scss file into your index.(less|scss).\nFor bootstrap (less):\n@import '../../bower_components/bootstrap/less/variables.less';\nFor bootstrap-sass:\n@import '../../bower_components/bootstrap-sass/assets/stylesheets/bootstrap/variables';\nThen you wouldn't be double-importing the entire framework.\n. That's odd. Have you changed the directory structure at all? It seems like it just isn't finding the file.\n. Merging them requires changes to index.scss, gulp/styles.js, and index.html. vendor.scss can be deleted afterward. At least for bootstrap-sass, the changes to those files look like this:\nindex.scss: Pull in scss from vendor.scss.\n``` sass\n//===== Dependencies SCSS\n$icon-font-path: \"../../bower_components/bootstrap-sass/assets/fonts/bootstrap/\";\n// bower:scss\n// endbower\n//===== Application SCSS partials\n// injector\n// endinjector\n```\ngulp/styles.js: Change the styles task.\n``` javascript\ngulp.task('styles', function () {\n    var sassOptions = {\n      style: 'expanded'\n    };\nvar injectFiles = gulp.src([\n  options.src + '/app/**/*.scss',\n  '!' + options.src + '/app/index.scss'\n], { read: false });\n\nvar injectOptions = {\n  transform: function(filePath) {\n    filePath = filePath.replace(options.src + '/app/', '');\n    return '@import \\'' + filePath + '\\';';\n  },\n  starttag: '// injector',\n  endtag: '// endinjector',\n  addRootSlash: false\n};\n\nreturn gulp.src([\n  options.src + '/app/index.scss'\n])\n  .pipe($.inject(injectFiles, injectOptions))\n  .pipe(wiredep(options.wiredep))\n  .pipe($.sourcemaps.init())\n  .pipe($.sass(sassOptions)).on('error', options.errorHandler('Sass'))\n  .pipe($.autoprefixer()).on('error', options.errorHandler('Autoprefixer'))\n  .pipe($.sourcemaps.write())\n  .pipe(gulp.dest(options.tmp + '/serve/app/'))\n  .pipe(browserSync.reload({ stream: true\u00a0}));\n\n});\n```\nindex.html: Merge the bower build block into the app.css build block. Then delete the vendor.css build block.\nhtml\n<!-- build:css({.tmp/serve,src}) styles/app.css -->\n<!-- bower:css -->\n<!-- run `gulp inject` to automatically populate bower styles dependencies -->\n<!-- endbower -->\n<!-- inject:css -->\n<!-- css files will be automatically insert here -->\n<!-- endinject -->\n<!-- endbuild -->\n. Glad you were able to get it working!\n. ",
    "barretodavid": "@vbud how do you merge vendor.scss into index.scss?\n. @vbud I have applied your solution but now I'm getting the following error on the console\nFailed to load resource: the server responded with a status of 404 (Not Found)\nhttp://localhost:3000/bower_components/bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\n. @vbud now I know what went wrong. The $icon-font-path that you provided in your example is not the same found in the latest versions of the generator that uses bootstrap-sass-official instead of just bootstrap-sass. The index.scss should be:\n``` sass\n//===== Dependencies SCSS\n$icon-font-path: \"../../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/\";\n// bower:scss\n// endbower\n//===== Application SCSS partials\n// injector\n// endinjector\n```\nAlso, the line 13 of gulp/inject.js should be deleted as well:\n``` javascript\nmodule.exports = function(options) {\n  gulp.task('inject', ['scripts', 'styles'], function () {\n    var injectStyles = gulp.src([\n      options.tmp + '/serve/app/*/.css'\n    ], { read: false });\nvar injectScripts = gulp.src([\n  options.src + '/app/**/*.js',\n  '!' + options.src + '/app/**/*.spec.js',\n  '!' + options.src + '/app/**/*.mock.js'\n])\n.pipe($.angularFilesort()).on('error', options.errorHandler('AngularFilesort'));\n\nvar injectOptions = {\n  ignorePath: [options.src, options.tmp + '/serve'],\n  addRootSlash: false\n};\n\nreturn gulp.src(options.src + '/*.html')\n  .pipe($.inject(injectStyles, injectOptions))\n  .pipe($.inject(injectScripts, injectOptions))\n  .pipe(wiredep(options.wiredep))\n  .pipe(gulp.dest(options.tmp + '/serve'));\n\n});\n};\n```\nThanks a lot for your help @vbud.\n. Just in case someone is interested in how this generator handles sass and why we have to do such changes to correctly use bootstrap-sass with our own styles, I created a blog post explaining all here. I have also uploaded to my github account the modified files ready to be used.\n. @zckrs I could try, it would be my first PR ever\n. @Kageetai the idea of using another injector is to guarantee that any other library that you install using bower and that has a .sass gets also injected, not only bootstrap. I don't know exactly how your project works using less, but I assume it's pretty similar. You can't see the \"injected\" files (the import statements) because the files are getting compiled and in the process they get also concatenated.\n. @Kageetai only the libraries that defines a .less files in their own bower.json declaration are going to be injected there. The other .css files of those libraries go to a different file called \"vendor.css\" because they don't need to be compiled. I don't know why your fonts are not being loaded. Are you sure the package is only called \"bootstrap\" and not something like \"bootstrap-less\"? It seems to me that you are using the standard bootstrap distribution which only have css files and not less files. I'm just guessing...\n. @Kageetai did you delete the file \"vendor.less\"? You should also delete your \".tmp\" an \"dist\" folders to make sure you are not using some old code that doesn't apply anymore.\n. @Kageetai yes you can delete that line in index.html\n. @Kageetai just to be clear: app/vendor.css is where app/vendor.less file is compiled whereas styles/vendor.css is where all the vanilla css files from your libraries are concatenated.\n. @Kageetai no, that line is \"hardwired\" to the file, it's not something gulp is creating. Once you delete it, it will never bother you again. When you install a library with vanilla css code and run gulp serve, a new index.html will get created inside the .tmp folder, and in that file you will see a slightly different link tag with something like <link rel=\"stylesheet\" href=\"styles/vendor.css\">. Notice that this is a different vendor.css file that the one is causing you problem.\n. @Kageetai you're right, it's something worth mentioning. I'll update the post.\n. ",
    "Kageetai": "Hi there,\nI just started trying out your nice generator, but have one little issue now. Whenever starting a new project with Bootstrap, I always use the variables.less file to modify the Bootstrap variables, so I would just copy it to the /app directory to have it injected automatically, but it's not getting injected and even if I write the import statement manually, the values from variables.less do not get applied.\nAny idea there?\n. Okay, I kinda figured it out myself just now, by following @barretodavid 's link and just merging vendor.less and index.less into one file. It wasn't even necessary to use another injector, because I just have the one file.\nBut I still don't seem to understand where the injector injects the files. I just can't see any files injected in \u00ecndex.less. I am still keeping thebower:lesscomments to inject into theindex.less`. Shouldn't any other library get injected there too?\nJust like this:\n```\n/ Do not remove this comments bellow. It's the markers used by wiredep to inject\n   less dependencies when defined in the bower.json of your dependencies /\n// bower:less\n// endbower\n@icon-font-path: '../../bower_components/bootstrap/fonts/';\n.browsehappy {\n  margin: 0.2em 0;\n  background: #ccc;\n  color: #000;\n  padding: 0.2em 0;\n}\n.thumbnail {\n  height: 200px;\nimg.pull-right {\n    width: 50px;\n  }\n}\n/ Do not remove this comments bellow. It's the markers used by gulp-inject to inject\n   all your less files automatically /\n// injector\n// endinjector\n```\nBut unfortunately now I noticed the icon fonth path doesn't seem to work anymore...\n. Okay, I overlooked that the @icon-font-path gets overriden in variables.less again. My mistake :)\nAnd the standard bootstrap distribution is coming with less files by the way...\nI noticed the <link rel=\"stylesheet\" href=\"app/vendor.css\"> in index.html Do you mean vanilla css gets injected there? For now I only get an error because that file can't be found, I guess because I don't have any other libraries so far.\n. @barretodavid  Yes, and the line in index.html mentioned was there from the beginning just after running the generator. I guess it was supposed to go along with the vendor.less, but now that that's removed it needs to be removed too, right?\n. @barretodavid Okay, thanks, that really helps understanding. One more question though: Will that line reappear if I might have any vanilly CSS in any library in the future?\n. @barretodavid Okay, maybe it would be good to mention that in your article then too, for other newbies like me :)\n. ",
    "lbecraft": "is this fix released yet?\n. ",
    "mewdriller": "I'm not sure if #480 resolves this issue as the concat issue is coming from unit-tests.js rather than the two files edited in that PR (inject.js and styles.js).\nEDIT: I was able to get the gulp test:auto task to work by making the changes in #480; sorry for the false alarm. I had made a small typo when I initially tested it.\n. ",
    "timmaybrown": "so if this is pushed to master what do I do to get this apply to my project? I updated the generator now do i need to run the generator in the app root to this latest commit to apply? Thanks! I could obviously make the changes manually from the above commit, but wasn't sure if there was an automated way via npm or yo that is better for keeping my project up to date with the generator's fix.\n. ",
    "eperedo": "I had this error, but updating nodejs 0.12.2 makes it work good on windows 8.1\n. ",
    "joelso": "Maybe cutting some corners here, but the done callback is being passed with an argument which indicates failure to gulp. My quick fix was to wrap done in a function that does not pass any argument to the callback (in gulp/unit-tests.js):\n...\nfunction runTests (singleRun, done) {\n  karma.server.start({\n    configFile: path.join(__dirname, '/../karma.conf.js'),\n    singleRun: singleRun,\n    autoWatch: !singleRun\n  }, /* wrapping \"done\" in a function here */ function() { done(); });\n}\n...\nEdit: I guess it's the singleRun option that is broken somehow. When singleRun is enabled, karma returns with exit code 1 meaning that gulp will show a stacktrace.\n. ",
    "gimox": "yes, i can remove, or add a middleware in build task to delete entire folder.\ni don't know if this is my misconfiguration or something wrong.\n. :+1:\n. Yes it's installed globally.\nThe errors  appear when i start the gulp serve. It finish the task with errors and app not Work \n. after some try, uninstalling, removing with npm typescript and tsd, now i have the same error in my two macs:\n ERROR in ./src/app/index.module.ts\nModule build failed: Error: ENOENT, open '/Users/gimox/Development/tps/.tmp/typings/jquery/jquery.d.ts'\n    at Error (native)  \n. I installed tsd  globally but not work.\n. not working, tsd installed locally and globally!\n. create a new project and added jquery as dependency. It work.\nI think this is a bug, jquery is in my bower dependency but i don't need it.\n. ",
    "chriskolenko": "I changed the other function inside the gulp/build.js file\ngulp.task('other', function () {\n    return gulp.src([\n      options.src + '/**/*',\n      '!' + options.src + '/**/*.{html,css,js,scss,hbs}',\n      '!' + options.src + '/{app,app/**}'\n    ])\n      .pipe(gulp.dest(options.dist + '/'));\n  });\n. @Swiip That makes perfect sense. Would be great if there was a clean way to exclude empty folders with recursively checking sub folders etc. \n. Perfect, already figured out the \"other\" task in gulp/build.js \n. ",
    "sercba": "+1\n. ",
    "merkuriy": "This way you can greatly inflate the file. Configuration files of any IDE need to set to ignore by means of settings in IDE. Most IDE allow you to configure is a standard means of settings. I believe that it is necessary to remove these changes.\n. ",
    "RobEasthope": "The sass error is due to a broken file path to one of your scss files or maybe you're trying to compile a css file by accident\n. Fair enough, just trying to cover the easy fixes first - Sounds like you've got a weird one :/\n. ",
    "Schurke": "I'm going to disagree on this one. The error occurs irregularly (succeeds sometimes, fails others).\nIt's worth saying also that the watch build works ten out of ten times on my SSD.\n. Hi, zckrs and Swiip. At the time I was using the latest version of your package. Interestingly, I heard an anecdote from a colleague using the same generator who encountered the same issue (where they'd generally have to refresh manually post-browser-sync to see changes reflected). Similar hardware setup, where they were using a windows machine with a conventional hard drive.\nOn my machine, I worked around the issue by moving my project to my SSD. Same project builds without issue every time.\nNot likely an issue with browser sync itself - I'm using a wordpress-theme/gulp/browser-sync generator for another project which doesn't exhibit the behaviour at all.\nLet me know if you need any more information...\n. Yes - I have precisely that line on 50. \nThat said, it's been a while since I looked at the builder. Is there a quick way to check which sass it's using?\n. ",
    "nabinkumarn": "I too was in problem with node when I updated it to 0.12.x. There was problem with node sass. Gulp did not work. After being suffered for couple of hours I installed the older version of node and everything is fine now\n. ",
    "MinDokan": "Well, I found a solution, at least for my fonts. I don't think I'll have this problem with images for now, in any case. Here is mi snippet.\nUsing this gulp plugin.\ngulp-modify-css-urls\nhttps://www.npmjs.com/package/gulp-modify-css-urls\nafter\n.pipe($.replace('../../bower_components/bootstrap/fonts/', '../fonts/'))\nI added this pipe.\n.pipe(modifyCssUrls({\n        modify: function (url, filePath) {\n          var arrayUrl = url.split('/');\n          var fileName = arrayUrl[arrayUrl.length-1];\n          return fileName;\n        },\n        prepend: '../fonts/'\n      }))\nIt may be an awful solution, but hey, it works. We can enhance in the future and make it even faster.\nThoughts?\n. Yes. Two at the moment.\nangular-ui-grid and themify-icons were in conflict.\nI assume because of the path been hard coded on the CSS files.\nThanks.\n. ",
    "frankradocaj": "+1 for foundation apps\nFoundation 5 has splintered into Foundation for Websites and Foundation for Apps (SPA).\n. ",
    "kondi": "There is no ie8Safe option, you have to use the jscript transformer instead. Add it to your .babelrc file:\njavascript\n{\n    \"optional\": [\"jscript\"]\n}\n. Looks I was few seconds late :)\n. ",
    "redaikidoka": "Awesome, thank you so much!\nOn Mon, May 4, 2015 at 7:57 AM, Matthieu Lux notifications@github.com\nwrote:\n\nLook at the code from this branch #493\nhttps://github.com/Swiip/generator-gulp-angular/pull/493. We already\nwork on an extended version of the generated website which illustrate\nbetter how to start.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/526#issuecomment-98740164\n.\n\n\n-=-=-==-=-=-=-==-=-=-=-=-=-=-=-=-=-\nPol Stafford\nStoryteller, Writer, Geek, Sensei\n. Nope, the gulp seems to be working awesome, no tinkering for me. And it seems to be the only directive this is happening with (as above, my directive for ilpField is being found just fine).\nis there a capitalization thing I need to be concerned about, or is it the fact that it's just included by an undecorated tag, e.g.\n\n?\n. ",
    "abbish": "I found the issue from TeamCity that the gulp-ruby-sass was error when it build sass files, but it not stoped and the TeamCity build progress was successed\n. yes thank u\n. ",
    "gryftir": "I'd love this feature.\nI would suggest that indicating the type (directive, filter, etc) is more likely to be useful then specifying both the component/module and a path, and it allows stubs for testing files to be generated automatically. I'd suggest that the path should be handled automatically unless the user wishes to specify it (maybe have a -p flag for path).\n. debloo,\nI worry about too much feature creep; I think it would be better to solve\nthe issue of component/route generation, which already looks like it will\nbe challenging if it's part of gulp-angular, and then refactor and enhance\nas needed to add more complex user-defined templates.\nThat said, it occurs to me that component and route generation, or rather\nmultiple component and route generators (based on language, how templating\nworks, whatever) could be their own projects and be decoupled from the\nsurrounding app/project generator.  If somebody wanted to have one that had\nsuper simple hardcoded immutable templates, that wouldn't prevent someone\nelse from having one with the ability to specify template files.\nI figure you could generate gulp-angular then generate the component/route\nframework of your choice in the same directory separately.  If Matthieu\nfelt they were of sufficient quality (I agree with him that what he wants\nis non trivial, but it's achievable), they could eventually be included as\noptions in gulp-angular directly, and have an interface that makes them\neasy for gulp-angular and other frameworks to incorporate into the overall\nframework install process.  If only some of them were up to snuff for\ngulp-angular, that would be okay, you would still have the option to\ninstall them.\nSo what I'm suggesting is that it might be better to build into\ngulp-angular the ability to use component/route generation frameworks\ngenerically, or maybe make no changes at all for the moment.\nOr if Erik is mostly done we can just say to hell with greater abstraction\nfor the moment.\nAbout Me: http://about.me/lawrencesiebert\nConstantly Coding: http://constantcoding.blogspot.com\nOn Tue, May 19, 2015 at 10:47 AM, Danny Blue notifications@github.com\nwrote:\n\nand please tell me if I am just insane. but being able to have different\ntemplates without changes to the core generator is really appealing to me.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/532#issuecomment-103612310\n.\n. \n",
    "erikdonohoo": "I fully intend to make it keep up the test coverage, handle the various pre-processed languages and make it one global sub-generator.  Much the way I did already in my repo.  (granted I haven't tested everything yet, or supported the different language flavors you have).\nI suggested determining the path, mainly because when making a component, you may need more than just one (directive & filter, etc).  The term \"component\" is very nebulous anyway and could mean any number of things.  The idea with the John Papa style guide is to simply organize your code by feature.  And that can be done a number of ways.\nAs far as you \"scaring\" me, rest assured I am not scared.  I appreciate your feedback though, and that helps me to have an idea of what you would expect with such a request.  I would love to help plan and build this with you if you would like any help.\n. That would make testing the generator more difficult for sure\n. Maybe @gryftir is right and all this should just be a separate generator that just plays nice with gulp-angular.  Then @Swiip doesn't have to worry about it but there can still be nice component/route generator generators that are compatible with gulp-angular.  Might be the better route.\n. ",
    "goodmind": "I have a same error\n. ",
    "mikesigs": "A temporary fix to this (because it seems like you shouldn't need to do this) is the following:\nRun the following command: node_modules\\.bin\\tsd init\nThen delete the typings folder it creates in the root of your app, then update bundle property in the tsd.json file to be \"bundle\": \".tmp/typings/tsd.d.ts\"\n. A good question is, why do we ignore the tsd.json file? Shouldn't it be added to source control, much like the packages.json, bower.json, etc? If you manually install tsd files, they get included in this file. That is valuable information for others who get your code.\n. I replied to your SO question, but thought I'd add my answer here too. \nIt's pretty straightforward really, just export them as functions rather than classes. The constructor parameters become the function's parameters. Also, be sure and use the ngInject attribute on your function (instead of using $inject = [] syntax).\n```\n/ @ngInject /\nexport function Config(\n    $logProvider: ng.ILogProvider,\n    $httpProvider: ng.IHttpProvider,\n    $provide: ng.auto.IProvideService,\n    RestangularProvider: restangular.IProvider) { \n/* ... */\n\n}\n``\n. Great. Glad it worked for you. I'll got right on the PR.\n. @zckrs I can't seem to get the mocha tests to run. I'm using Windows. I even tried running them using cygwin, but that didn't help. The instructions from the CONTRIBUTING.md don't work. If I run./node_modules/mocha/bin/_mocha ./test/*.jsit says'.' is not recognized as an internal or external command, operable program or batch file`. \nI tried running it as node node_modules/mocha/bin/_mocha test/*.js but that gives me the following error: \nc:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:6355\n      ? process.cwd() + slash\n                ^\nTypeError: undefined is not a function\n    at Object.exports.stackTraceFilter (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:6355:17)\n    at Object.<anonymous> (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:4594:25)\n    at require (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:11:11)\n    at c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:45:14\n    at Object.<anonymous> (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:1444:18)\n    at require (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:11:11)\n    at c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:6469:28\n    at Object.<anonymous> (c:\\Source\\GitHub\\generator-gulp-angular\\test\\mocha.js:6564:3)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at c:\\Source\\GitHub\\generator-gulp-angular\\node_modules\\mocha\\lib\\mocha.js:192:27\n    at Array.forEach (native)\n    at Mocha.loadFiles (c:\\Source\\GitHub\\generator-gulp-angular\\node_modules\\mocha\\lib\\mocha.js:189:14)\n    at Mocha.run (c:\\Source\\GitHub\\generator-gulp-angular\\node_modules\\mocha\\lib\\mocha.js:422:31)\n    at Object.<anonymous> (c:\\Source\\GitHub\\generator-gulp-angular\\node_modules\\mocha\\bin\\_mocha:398:16)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Function.Module.runMain (module.js:501:10)\n    at startup (node.js:129:16)\n    at node.js:814:3\nAny help getting this working on Windows? \n. I lower-cased the function names.\n@zckrs No, I'm afraid that's not something I've tackled yet. But I agree, there aren't too many great examples out there.\n. Thanks zckrs. It's fixed now. Really wish I could get these tests to work locally. Sorry about that.\n. This would be a great PR. I too am using angular-toastr in my project.\n. ",
    "aitk": "There is already jade support. Although when you first run the yeoman generator it gives you html files but you can edit them to be jade and the app will work the same.\n. ",
    "lotsabackscatter": "Awesome! Cheers.\n. ",
    "lellex": "I converted html files to jade (and change the extension) but it doesn't seem to work.\nIs there any option to change ?\n. Ahaa, I just found why it wasn't working, a stupid error !\nIn case of someone get the same, I used this site to translate my html to jade : http://html2jade.org/\nand the result add systematically \"body\" and \"html\" on top...\n. ",
    "valeriosillari": "could you please attach source code you use for the new index.jade file?\ngot right now the same issue ... :)\n. got same problem here, I don't get it.\nfor what I see reading the issues, I not need gulp-jade, it should be already supported.\nwhen i installed the app i choose the option for jade language.\nyeoman create a jade task automatically into the gulp file for markup.\nso at this point I am assuming just to change the extensions of a .html file into .jade and write code in jade lang (in my unique jade file i just set one heading with hello world for testing)\nbut jade is not compiled.\nso: change file extension e code of the file is or isn't enough?\nI know it could be a dummy question, but I am newbie with all the yeoman node gulp stuff ... :)\n. started a new testing project, works just changing file extension and restarting server.\nit seems I made a mess on my project ... now i will check my project.\nthanks :) \n. yep it seems working. thanks! :)\n. ",
    "navjinder": "Thanks @robertbaker \nYou are right the dependencies need to be updated for the tool but my issue was with the browserSync not opening the browser as my files were on an external harddrive (linux). \nThe way I solved this was by adding the following code to server.js in the gulp folder i.e. not opening the browser automatically.\njavascript\nopen:false,\nThen going to the locahost:port manually it works flawlessly now. \nThanks a lot to the whole  team for creating this tool.\n. ",
    "rabr2ro": "Common, I'm struggling with this problem for two days and I though that I'm the only one having it. I thought that maybe I'm using the wrong .d.ts file. So, is there a solution for this kind of situations?\n. Thank you for your quick answer. In the end I found a solution to the problem, too. Maybe is not so elegant as your, but it's working for me. In patched tsd.js too, and I added the following lines when the dependencies array is created, and before doing the query (at line 20-21). I'm new to this development, but I have to recognize that your patch is more elegant. Here is my patch:\nvar _tsdj = require(path.join(process.cwd(), tsdJson));\nfor (var key in _tsdj.installed) {\n    dependencies.push(new tsd.Def(key).name);\n}\nI don't know how to make it look like your :(\n. ",
    "keichi": "Since there is no way to acquire the corresponding .d.ts name from the bower module name, you must specify those not working .d.ts packages in tsd.json. However, there's another problem that packages in tsd.json are ignored by the gulp task. So I added few lines to gulp/tsd.js so that packages written in tsd.json are installed during the task.\n``` js\nreturn tsdApi.readConfig()\n  .then(function () {\n    // begin\n    tsdApi.context.config.getInstalled().forEach(function (inst) {\n      var def = tsd.Def.getFrom(inst.path);\n      query.addNamePattern(def.project + '/' + def.name);\n    });\n    // end\nreturn tsdApi.select(query, options);\n\n})\n  .then ...\n```\nThis works well for now. Maybe I should make a PR?\n. ",
    "AleksMeshkov": "I'm staring to suppose that's not the generator-gulp-angular issue. When I remove a0-angular-storage and angular-jwt dependencies (from angular.module) it becomes ok.\n. @zckrs no problem! here they are:\nhttps://gist.github.com/AleksMeshkov/12808b3016f274251400\nhttps://gist.github.com/AleksMeshkov/dd5438a4c574b2a7ecef\n. @zckrs thanks for the help!\n. @zckrs nice! Btw how shall I properly upgrade my current project?\n. ",
    "Vvaltz": "Oh, it's for revisioning? Okay, thanks alot\n. ",
    "mpgn": "It's not includePaths but loadPath with grunt-contrib-sass\ngulp.task('styles', function () {\nvar sassOptions = {\n      loadPath: [ options.src + '/../bower_components/my-styles/'],\n      style: 'expanded'\n};\nFor those who use Foundation 5:\nvar sassOptions = {\n      loadPath: [options.src + '/../bower_components/foundation/scss'],\n      style: 'expanded'\n    };\nAnd then you can write this in the vendor.scss\n@import 'foundation';\n. thx :) \n. ",
    "notrab": "Hi\nYou'll need to run gulp serve to run the application locally. This will open your browser using BrowserSync. This will generally watch the files in your application and automatically refresh when a change is detected.\nYou may need to modify the watch gulpfile to reflect any additional file types not set out by default.\nIf you wish to run locally what it will run like compiled, you will want to run gulp serve:dist.\nWhen you're happy to upload this to the world wide web and let it free, run gulp and then copy your /dist folder to an apache, python or node server.\n. ",
    "rosieks": "And is there any way to run that without any server and any without minification/bundling?\n. Copying files is something what I like to do. Unfortunately I can't just copy files because path to scripts/styles in index.html are incorrect. Also I wonder if there is better way than copy all bower_components to this 'www' file.\n. Actually this problem is more general. Solving this issue would be helpful for people that works on ASP.NET 5 too (there files has to be copied to wwwroot) or anybody how would like to use their own http server on their development machine with more advanced settings like HTTPS or something else. Running dist has this problem that it's slower and is minified.\nIt's a shame that this generator doesn't support this kind of scenario because for I think it's the best yeoman generator for angularjs + gulp.\n. ",
    "markevich": "Yep. Reinstalled. Seems like all works like a charm. Sorry for false alarm :heart: :heart: :heart: \n. ",
    "arcdev1": "I think most people would consider that an anti-pattern. Ideally, you should never build on a production server; builds should happen on a build server and then be pushed automatically to your prod server. This keeps the prod server free of any dev tools, dependencies and raw source code.\n. ",
    "lswith": "Interesting. Heroku and Azure to name a few, both allow you to push your code and have it build and deploy in production. How would you tackle something for these services?\n. ",
    "lokeshjain2008": ":+1: \n. same problem. This should not be that hard. Anyone know how to use .jade in the templateUrl string?\n. @eshansingh This is working for me i started project from scratch using yo gulp-angular.\nsaid yes for jade template. \nused \ntemplateUrl: 'app/main/main.html',\nbut actual file should be\napp/main/main.jade.\nHope, this works for you.\n. ",
    "Kehet": ".yo-rc.json:\njson\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery1\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"ruby-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"traceur\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. I think I got same problem\nWindows 7\nnpm 3.3.12\nnode v5.1.0\n.yo-rc.json and output of npm list\nupdating webpack-stream from ~2.1.1 to currently newest 3.1.0 isn't helping and babel-loader ~6.2.4 already resolves to newest version\n. ",
    "damdoum": "Hi thank you for those usefull informations. I understand better now. Any chance to have a trick from you to only slpit the vendor.js file in two or more files?\n. I understand and agree the fact that it can be really rare anyway thanks again for your answer and this awesome generator !\n. Thank you for your answer, i should read better next time.\n. Hi @dmastag , \nI also tried to add it in index.html but when i try everything in: \ngulp serve:dist  ?\nThe Icons are not working...\n. i tried:\nhtml\n<i class=\"material-icons md-dark\"> delete </i>\nIs it working on your side?\n. Ok thank you, i will double check on my side. So it only still how to install them via bower and npm.\nWhich version of gulp-angular generator are you using?\n. Ok thank you @dmastag , i am using an older one but i don't think that is  really related. \nMy version is 0.9.1\nSorry for the late answer...\n. :clap: :+1:\n. ",
    "syzer": "+1\n. i also started new issue... when u do clean you setup on mac it does not run the stylus task!  #592\n. ",
    "julmot": "I still have this issue, but simply when using gulp-stylus.. ",
    "hasAnnaA": "Any estimates on when this is going to be merged in?\n. ",
    "skrenek": "Just looked at the HEAD and saw that 1.4.0-rc is in the prompts, so thinking it may just require a tweak and a release?\n. Sorry about that.  Weird that I can't get 561 to show up anywhere in an issue search, but can browse to your link.\n. Fixes #573.\n. ",
    "AleskiWeb": "Hey Jack, I'm getting the same thing actually. Any idea what we can do about it?\n. ",
    "JackNorris": "Hi @zckrs \nI'm using v0.11, my .yo-rc.json is below\nhttp://pastebin.com/TNNGdcWr\n. Right so I had a little play with master, and it appears to be immune to the issue. The master version seems to compile and concat all TS/JS into a single file (index.module.js). Since everything is now in a single file there are no new files to be injected which of course means no race condition!\nI suppose that is problem solved? I don't know if anyone else wants to quickly look over it and make sure I haven't missed anything obvious.\n. ",
    "idanb11": "Hi @Swiip , Great generator, Thanks.\nOne question about your last comment concerning how wiredep define which files to include:\nIf I use a library like this one- https://github.com/splunk/splunk-sdk-javascript (which doesn't have any bower.json file) how can I add it manually to the Gulp building process?\nIdanb11. \n. Thanks\n. ",
    "ismarslomic": "+1\n. ",
    "abruzzihraig": "sorry that's my fault, I wrote a nib mixin with wrong indent, I'll close it.\n. ",
    "aksakalli": "Sorry for noob question...\nI solved the issue by disabling Forms:submit in BrowserSync's Sync Options via http://localhost:3001/sync-options.\n. I am using snippets, and it was different than my template. It is just a syntactic taste... And it is defined so in es6 as well. \n. ",
    "F1LT3R": "Running into the same issue, yet changing the sync options does not work for me.\n. ",
    "equero": "Normally, the router file, always is called 'router.js' but you call him index.js.... WHY?\n. Ok thanks for helping me guys, i'm using your generator to my start up\n. ",
    "anishbenji": "It might be worth looking at StealJS as well, which is based off of SystemJS.\nhttp://stealjs.com/docs/StealJS.why.html\n. There seems to be issues with some of the dependencies of gulp-angular and npm 3. The same issue occurs when installing npm 3.x on earlier versions of Node.js as well. From what I understand npm 3 does some sort of de-duplication of dependencies of installed packages that causes some of them to fail. The packages need to updated to work with npm 3. \nMaybe someone with more experience on the matter can chime in.\n. ",
    "jerexyz": "you should use gulp-jade\n. ",
    "perchi": "$ node -v\nv0.12.4\n$ npm -v\n2.10.1\nOS: Windows 7\njavascript\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. I found that the problem is in \"/gulp/scripts.js\" file:\njavascript\n    .pipe(gulp.dest(path.join(conf.paths.src, '/app/')));\nThere should be \"tmp\" folder instead of \"src\":\njavascript\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/app/')));\n. ",
    "mjeanroy": "Ok, no worries, it was just a simple suggestion, I already have tons of aliases, one more, one less... (and I probably already have this one).\nThe biggest advantages of this solution is that you don't need to have bower globally installed (and when you can't install what you want, except npm, this is great).\nAnyway, I close this issue, and many thanks for your job ;)\n. ",
    "jbonigomes": "Thanks @zckrs I will be sure to check it, again, some sample apps would still be really beneficial\n. In fact, the new generator is awesome, thanks @zckrs \nI'm closing the issue\n. ",
    "jolugama": "Thank you for your example. It has been a great help.\n. This is my .yo-rc.json. \n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"angular-material\",\n        \"module\": \"ngMaterial\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"babel\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. ooh, the vs 0.12 is very different from 0.11. Angular 1.4, the test are in a separate folder. Now I like more.\nAll right !.  thanks for all\n. Hi,\nI tried the vs 0.12, and I am amazed. It's great test: auto. Everything\nworks ok. This is the best yeoman generator. Very complete. Thanks for\neverything, really.\n2015-06-19 2:24 GMT+02:00 Mehdy Dara notifications@github.com:\n\nNo problem =]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/615#issuecomment-113326847\n.\n. \n",
    "fuchao2012": "@zckrs great generator\uff01Just like @jbonigomes said, list some apps use this generator will be great welcome. \n. @zckrs @clement-escolano any new on this issue?\n. @faidoc add this file in website or server site?\n. It is just a demo.(:\n. ",
    "0101adm": "n/m.  jade doesnt like a combination of spaces + tabs.  only one or the other.\n. just confirmed.\nadded a file w/ .html extension and it worked.\n. temp fix by using ng-jade2js.\nmy new karma.conf.js\n``` javascript\n'use strict';\nvar path = require('path');\nvar conf = require('./gulp/conf');\nvar _ = require('lodash');\nvar wiredep = require('wiredep');\nfunction listFiles() {\n  var wiredepOptions = _.extend({}, conf.wiredep, {\n    dependencies: true,\n    devDependencies: true\n  });\nreturn wiredep(wiredepOptions).js\n    .concat([\n      path.join(conf.paths.tmp, '/serve/app/index.module.js'),\n      path.join(conf.paths.src, '//*.spec.js'),\n      path.join(conf.paths.src, '//.mock.js'),\n      path.join(conf.paths.src, '//*.html'),\n      path.join(conf.paths.src, '//.jade')\n    ]);\n}\nmodule.exports = function(config) {\n  var configuration = {\n    files: listFiles(),\nsingleRun: true,\n\nautoWatch: false,\n\nframeworks: ['jasmine'],\n\nngHtml2JsPreprocessor: {\n  stripPrefix: 'src/',\n  moduleName: 'myapp'\n},\n\nngJade2JsPreprocessor: {\n  stripPrefix: 'src/',\n  moduleName: 'myapp'\n},\n\nbrowsers : ['PhantomJS'],\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor',\n  'karma-ng-jade2js-preprocessor'\n],\n\npreprocessors: {\n  'src/**/*.html': ['ng-html2js'],\n  'src/**/*.jade': ['ng-jade2js']\n}\n\n};\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if(configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\n. 1.0.0-rc1 is throwing errors.\n[gulp serve]\n\n[gulp test]\n\n\n. clean install of generator got rid of the errors.\nalso, seems to have resolved the bug.\n. /* @ngInject /\nput that above your constructor.  but really, you should create a factory that returns a new instance.\n. i believe its where you place it.  it should annotate the constructor.\n. this is using gulp test or gulp test:auto.\nmy svg icons are loaded at config.\n``` javascript\nmodule com.myapp {\n    'use strict';\n    export class Config {\n        /* @ngInject /\n        constructor($logProvider: angular.ILogProvider,\n                        $mdIconProvider: angular.material.IIconProvider,\n                        $mdThemingProvider: angular.material.IThemingProvider\n                        CONSTANT: any) {\n        $mdThemingProvider\n            .theme('default')\n            .primaryPalette('cyan')\n            .accentPalette('orange')\n            .warnPalette('red');\n\n        _.each(CONSTANT.iconsets, (iconset: any) => {\n            $mdIconProvider.iconSet(iconset.name, iconset.path, 24);\n        });\n    }\n}\n\n}\n```\ni can dump the templatecache and see that there are corresponding keys for each svg iconset.\ni have to use the below assertion for every icon set (there are 17 sets) and then the test will pass.\njavascript\n$httpBackend.when('GET','assets/iconsets/action-icons.svg').respond('ok');\n. id like gulp to take all svg's and account for the request just like html partials.\n. heres my task.  it runs off of the build task.\ni had probs w/ the bower dir too until i added relativeRoot param.\njavascript\ngulp .task('cdnizer',function(){\n    return gulp .src('dist/index.html')\n        .pipe($.cdnizer({\n          allowRev: true,\n          allowMin:true,\n          relativeRoot:'bower_components',\n          fallbackTest:'<script>(function(){try{var lib=\"${ filepath }\".split(\"../\")[1];if(typeof ${ test } === \"undefined\"){cdnizerLoad(lib);}}catch(err){cdnizerLoad(lib);}})();</script>',\n          files: []\n        }))\n        .pipe(gulp.dest(\"dist\"));\n  });\n. you will have to modify the 'other' task with this...\n```\ngulp.task('other', function () {\n  var fileFilter = $.filter(function (file) {\n    return file.stat.isFile();\n  });\ngulp.src('./bower_components/*/.js')\n      .pipe(gulp.dest('dist/bower_components'));\nreturn gulp.src([\n    path.join(conf.paths.src, '//*'),\n    path.join('!' + conf.paths.src, '//*.{html,css,js,scss,ts,jade}')\n  ])\n    .pipe(fileFilter)\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/')));\n});\n```\nthis will move bower_componenets into your dist root.  you will need this for the cdnizer fallback.\nthen this is your 'cdnizer' task...\ngulp.task('cdnizer',function(){\n  return gulp.src('dist/index.html')\n      .pipe($.cdnizer({\n        allowRev: true,\n        allowMin:true,\n        relativeRoot:'bower_components',\n        fallbackTest:'<script>(function(){try{var lib=\"${ filepath }\".split(\"../\")[1];if(typeof ${ test } === \"undefined\"){cdnizerLoad(lib);}}catch(err){cdnizerLoad(lib);}})();</script>',\n        files: [\n          {\n            file:'bower_components/Chart.js/Chart.min.js',\n            cdn:'//cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js',\n            test:'Chart'\n          }]\n      }))\n      .pipe(gulp.dest(\"dist\"));\nif you install https://github.com/shahata/cdnjs-cdn-data you can use paths like...\n{\n            file:'bower_components/angular/angular.js',\n            cdn:'cdnjs:angular.js',\n            test:'window.angular'\n          }\nthen modify 'build' task with...\ngulp.task('build', function(callback) {\n    runSequence(['html','fonts','other'],'cdnizer',callback);\n});\nyou will have to install https://www.npmjs.com/package/gulp-run-sequence to use runSequence.\nthis will run cdnizer lastly.\n. youre right.\nhere is a blank copy.\n```\n<!doctype html>\n\n\napp name\n    <meta charset=\"utf-8\">\n\n    <!-- build:css({.tmp/serve,src}) styles/vendor.css -->\n    <!-- bower:css -->\n    <!-- run `gulp inject` to automatically populate bower styles dependencies -->\n    <!-- endbower -->\n\n    <!-- endbuild -->\n\n    <!-- build:css({.tmp/serve,src}) styles/app.css -->\n    <!-- inject:css -->\n    <!-- css files will be automatically insert here -->\n    <!-- endinject -->\n    <!-- endbuild -->\n</head>\n\n<body>\n    <!-- bower:js -->\n    <!-- run `gulp inject` to automatically populate bower script dependencies -->\n    <!-- endbower -->\n\n    <!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n    <!-- inject:js -->\n    <!-- js files will be automatically insert here -->\n    <!-- endinject -->\n\n    <!-- inject:partials -->\n    <!-- angular templates will be automatically converted in js and inserted here -->\n    <!-- endinject -->\n    <!-- endbuild -->\n</body>\n\n\n```\n. ill need more info / debug.\n. why isnt it working.\n. tsd was not installed.\ninstalled and re-ran.  \ntypings directory was created but an error threw on [gulp serve].\njavascript\nERROR in ./src/app/index.module.ts\nModule build failed: Error: ENOENT, open '/Users/aaron/Documents/dev/test/.tmp/typings/jquery/jquery.d.ts'\n    at Error (native)\ni choose to use JQLite.\njavascript\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"1.0.0-rc2\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.2\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        },\n        {\n          \"key\": \"messages\",\n          \"module\": \"ngMessages\"\n        },\n        {\n          \"key\": \"aria\",\n          \"module\": \"ngAria\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jqLite\"\n      },\n      \"resource\": {\n        \"key\": \"restangular\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"angular-material\",\n        \"module\": \"ngMaterial\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"typescript\",\n        \"extension\": \"ts\",\n        \"srcExtension\": \"ts\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. what logged at the beginning of the install...\n\n. yep\n. :thumbsup:\n. partials need to be accounted for so theyre fetched from templateCache.\n. confirmed.\nused same set up except using no templating (html) and unit tests did not throw \"Unexpected request: GET\" for directive templates.\nthe issue stems with jade files and the karma preprocessors.  even though jade files do get converted to html, moved over to .tmp, and the proper file mask is set with the preprocessor, theyre not put into templateCache.\n. :thumbsup:\n. put them in index.html.\n. its because of ng-strict-di on your ng-app element.  i believe i just removed it and will investigate later.\n. @gimox you'll have to install tsd then run \ntsd install jquery\n. @gimox  try by installing locally.\n. yep. typescript@1.5.3 resolves this.\n. instead of ./\ntry a full path 'app/components/mycomponent/transitive/a'\nor\n'../mycomponent/transtive/a'\n. a.ts should read...\njavascript\nimport * from './b'\n. try npm install tsd\n. looks like windows mapping.\n. you might have to manually place them in index.html.\n. here is my watch.js\n``` javascript\n'use strict';\nvar path = require('path');\nvar gulp = require('gulp');\nvar conf = require('./conf');\nvar browserSync = require('browser-sync');\nfunction isOnlyChange(event) {\n  return event.type === 'changed';\n}\ngulp.task('watch', ['scripts:watch', 'markups', 'inject'], function () {\n  gulp.watch([path.join(conf.paths.src, '/.html'), 'bower.json'], ['inject']);\n  gulp.watch([\n    path.join(conf.paths.src, '/app//*.css'),\n    path.join(conf.paths.src, '/app//.scss')\n  ], function(event) {\n    if(isOnlyChange(event)) {\n      gulp.start('styles');\n    } else {\n      gulp.start('inject');\n    }\n  });\n  gulp.watch(path.join(conf.paths.src, '/app//*.jade'), ['markups']);\n  gulp.watch(path.join(conf.paths.src, '/app//*.html'), function(event) {\n    browserSync.reload(event.path);\n  });\n});\n```\njust confirmed... when i re-save jade templates, tests do not re-run.\nif i edit spec files, and save, the tests WILL re-run.\n. installing via yo's interface, doesnt show the generator once the install completes...\n\n. installing via NPM then running yo, doesnt show the generator.\n\n. @masoapps i had to redo the project to fix this.\n. i fought w/ the issue then decided to nuke the workflow and regen from scratch.  not sure what fixed it.\n. :+1: \n. used\n$ npm uninstall tsd\n$ rm -rf typings\n$ npm install typings\n$ typings init --upgrade\n$ rm tsd.json\n$ typings install\n. ",
    "nigel-dewar": "Hi There,\nReplace it with what?\nFrom: Mehdy Dara [mailto:notifications@github.com] \nSent: Friday, 19 June 2015 6:25 PM\nTo: Swiip/generator-gulp-angular\nCc: nigel-dewar\nSubject: Re: [generator-gulp-angular] If you choose plain CSS - no CSS gets included (#617)\nThis issue is relative to https://github.com/twbs/bootstrap/blob/master/bower.json#L18 \nThey don't define a main proprety for plain CSS cause wiredep can't retrieve the right file. \nIf you replace this line by \"dist/css/bootstrap.css\" all right fine.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Swiip/generator-gulp-angular/issues/617#issuecomment-113461869 .  https://github.com/notifications/beacon/AI94WICXZeAAkNm4WB2e43E6g31ivuVgks5oU-VogaJpZM4FG-lE.gif \n. Ok, cool,\nI see what you mean.\nThank you :)\nFrom: Mehdy Dara [mailto:notifications@github.com] \nSent: Saturday, 20 June 2015 12:17 AM\nTo: Swiip/generator-gulp-angular\nCc: nigel-dewar\nSubject: Re: [generator-gulp-angular] If you choose plain CSS - no CSS gets included (#617)\nSee my previous post\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Swiip/generator-gulp-angular/issues/617#issuecomment-113562157 .  https://github.com/notifications/beacon/AI94WBAUG2yPCMCMLgu-_uJGs-y-3Shjks5oVDfmgaJpZM4FG-lE.gif \n. I agree.\nFrom: Matthieu Lux [mailto:notifications@github.com] \nSent: Saturday, 20 June 2015 5:47 PM\nTo: Swiip/generator-gulp-angular\nCc: nigel-dewar\nSubject: Re: [generator-gulp-angular] If you choose plain CSS - no CSS gets included (#617)\n@zckrs https://github.com/zckrs  your workaround is great, I agree bootstrap should fix their bower.json. Still, I think we can't accept to deliver broken projects to our users because one of our dependency is bugged. We should add the override option in the generator as long as bootstrap doesn't fix the problem.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Swiip/generator-gulp-angular/issues/617#issuecomment-113737639 .  https://github.com/notifications/beacon/AI94WIF2RuMju7tZYXFuxG0MzmMhWfCvks5oVS4EgaJpZM4FG-lE.gif \n. ",
    "yuanphoon": "Ok turns out this is not a problem with this awesome suite, but rather one for template cache.\nIf the path to include a partial does not match what's in the template cache precisely, then a 404 error is returned. \nSo if you put a path such as templateUrl: '../app/partial/header.html'\nThe result is 404.\nIf the path is '/app/partial/header.html', then the result is 200 and the header renders.\nThe src folder of course doesn't care about this as it sees something at destination anyways. \nAll about pathing...sigh\nThanks for the assists!\n. ",
    "jmls": "I was just looking at this, and was wondering how others have dealt with it. I have a project (A) , using the generator. Potentially, this project can either be a standalone, or integrated into other projects created using generator-gulp-angular (gga). \nHowever, my brain is refusing to engage, and I am struggling with the concepts. Is this the right strategy ?\n1 naming of modules etc.  ensure all factories / services etc have unique names for the app (e.g. mainController => fooMainController\n2 create a bower.json file that lists all the important front-end services / file that should be included in the secondary project\n3  add a level to the app folder - app/foo where foo contains components, main, etc folders - this way the templatecache would be caching app/foo/main.html\nthe problem that I see with the above is that I would have to go through all the code  (index.route.js for example) and modify accordingly. \na) is there an option to specify the location of the \"app\" when generating the project\nb) what does everybody else do in this scenario ?\nmany thanks\n. that's the thing - I selected:\n\"? Which CSS preprocessor do you want? None, only the good old CSS\"\nbut that option does not create gulp/styles.js file ...\nhtml\nls -l gulp\ntotal 32\n-rw-r-xr-- 1 jmls root 2894 Aug 19 12:41 build.js\n-rw-r-xr-- 1 jmls root  961 Aug 19 12:41 conf.js\n-rw-r-xr-- 1 jmls root 1074 Aug 19 12:41 e2e-tests.js\n-rw-r-xr-- 1 jmls root 1088 Aug 19 12:41 inject.js\n-rw-r-xr-- 1 jmls root  424 Aug 19 12:41 scripts.js\n-rw-r-xr-- 1 jmls root 1996 Aug 19 12:41 server.js\n-rw-r-xr-- 1 jmls root  573 Aug 19 12:41 unit-tests.js\n-rw-r-xr-- 1 jmls root  848 Aug 19 12:41 watch.js\nroot@e18c1023f1c0:/workspace/skunkworks/foo3>\n. ah, great! thanks for the help\n. so, I try something and it works ... for anyone interested, this does the trick for me\n``` javascript\n'use strict';\nvar path = require('path');\nvar gulp = require('gulp');\nvar conf = require('./conf');\nvar $ = require('gulp-load-plugins')();\nvar transform =  function (filepath, file) {\n  console.log(\"contents\",file.contents.toString('utf8'))\n  return file.contents.toString('utf8');\n};\ngulp.task('injectRoutes', function () {\n  var target = gulp.src(path.join(conf.paths.src,'/app/index.route.js'));\nvar sources = gulp.src(path.join(conf.paths.src, '/app/*/.route'));\nreturn target.pipe($.inject(sources,{transform: transform}))\n    .pipe(gulp.dest(path.join(conf.paths.src,'/app')));\n});\n```\nadded the following to index.route.js \njavascript\n  <!-- inject:route -->\n  <!-- endinject -->\nand now any file with an extension of .route is now injected into the index.route.js file\n. yeah, I was looking @ browserify : can it be run in conjunction with wiredep/bower, or is it a complete conversion ? Does gulp-angular support browserify ?\n. ",
    "nelreina": "Yep that does the trick. I downgrade ui-bootstrap from 0.13.0 to 0.12.0. \n. ",
    "pgrm": "Hi, thx - I've created a sample project and added inside the MainController constructor\nconsole.log('controller this:');\n  console.log(this);\nupdated the RunBlock:\nexport class RunBlock {\n  /** @ngInject */\n  constructor($log: ng.ILogService) {\n    console.log('RunBlock this:');\n    console.log(this);\n    $log.debug('runBlock end');\n  }\n}\nupdated the ConfigClass:\nexport class Config {\n  /** @ngInject */\n  constructor($logProvider: ng.ILogProvider, toastr: Toastr) {\n    console.log('Config this:');\n    console.log(this);\n    // ...\n  }\n}\nAnd finally also added the similar code inside the RouterConfig:\nconsole.log('RouterConfig this:');\n  console.log(this);\nthis only existed in the MainController constructor. Every other constructor was empty. I do understand, that a class is easier to extend, but it is misleading. I'd suggest to either generate them as pure functions, or crate a function (even static one inside the class) which would actually create an instance of the class in order to have the correct behaviour. This way it would be basically a Singleton, just not provided by AngularJS.\n. Btw, here a suggestion from Ryan Cavanaugh on how to define Angular configs.\n. @mikesigs yes, I saw your answer and already implemented it, including checking if @ngInject works (not that I wouldn't trust you :wink:). Everything is fine, PR would be awesome. I could have a look at it next week, if you won't get to it.\n. :+1:  thx @mikesigs \n. :+1: \n. ",
    "priley86": "Can anyone explain how to get the Webpack/ES6 Babel compiled sourcemaps working in Safari? Safari doesn't seem to pickup the base64 encoded sourcemaps like Chrome does (Chrome displays all sources in the webpack folder for the compiled index.module.js). I don't see this behavior in Safari.\n. It appears to work if you change the gulp webpackWrapper in scripts.js to use 'source-map' as opposed to 'inline-source-map'.\nif(watch) {\n    webpackOptions.devtool = 'source-map';\n  }\n. ",
    "sebolio": "Found the problem. Turns out minor release of bootstrap (3.3.5) doesn't play nice with inject, so I changed the bower.json file to explicitly use 3.3.4.\n@Swiip @zckrs  I think the generator should use exact dependency versions. As we all learned with this, minor updates can screw things up and even render an entire project unfunctional. I'll send a pull request for this change.\n. What exactly do you mean? The problem happened with a brand new project I created for my test too. I ended up forcing bootstrap to 3.3.4 and it solved. \nI really think there should be an choice in the generator between Stability or risky-youCouldLoseYourJob versions.\n. ",
    "timelyxyz": "The same issue exists in bootstrap 3.3.6 =(\n. ",
    "SunEagle": "It's still not clear for me how I can solve this problem.\nMy project builds the same way as sebfindling's screenshot.\nCan someone please explain me with details?.  rnugraha's answer saved me from a headache after two days looking for an answer.. ",
    "cyberdemon8": "my older issue #531 is still alive...\n@JR-Utily solutions works like a charm (in linux) :smiley: \n. Hi Valerio,\n use overrides in your bower.json\nexample using bootstrap official package:\nmain section of bower.json in bootstrap package is:\njson\n...\n  \"main\": [\n    \"less/bootstrap.less\",\n    \"dist/js/bootstrap.js\"\n  ],\n...\ni dont want less file but css file...\nin my bower.json i used these overrides\njson\n...\n  \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"dist/css/bootstrap.css\",\n        \"dist/js/bootstrap.js\"\n      ]\n    },\n  },\n...\nother info on overrides be found here: https://github.com/ck86/main-bower-files#overrides-options\n. Hi Antony, i'm using font-awesome (4.6.3) in my project...\nall works for me with latest release of generator-gulp-angular (1.1.0)\ni'm using ONLY css, NO less and NO sass\nmy bower.json overrides section:\njson\n\"font-awesome\": {\n  \"main\": [\n    \"css/font-awesome.css\",\n    \"fonts/*\"\n  ]\n},\n. ",
    "chrisheninger": "Just came across the same issue with \"angular-formly-templates-bootstrap.js\" being auto-excluded... @JR-Utily fix is perfect! Thank you JR and Zckrs!\n. ",
    "brian428": "I'm doing something like this. In this example, the Bower dep. is named \"jasmine-core\", but the TSD itself is named just \"jasmine\". Meaning the default TSD lookup using the Bower name won't find the TSD (or at least it wasn't for me). So this this patch, the build should look for my local copy of jasmine.d.ts and include that in the build's typings.\n{\n  \"version\": \"v4\",\n  \"repo\": \"borisyankov/DefinitelyTyped\",\n  \"ref\": \"master\",\n  \"path\": \".tmp/typings\",\n  \"bundle\": \".tmp/typings/tsd.d.ts\",\n  \"installed\": {\n      \"src/tsd/libs/jasmine/jasmine.d.ts\": { \n        \"commit\": \"dd6c0bef0e3714a9f4bb969e7b823eda81a35dc4\" \n      }\n  }\n}\n. Hmm well that I am less sure of. I actually just started using this generator last week, so I haven't messed with bower overrides. All I know is that in this case, if I change the generated build.js file to mimic what I showed above, the fonts do get included correctly. That said, if there's a \"better\" way to handle this (via bower override or whatever), I'm all ears! Thanks.\n. ",
    "isaacweathers": "Just my two cents, it is happening with LESS build and BootStrap as well. Looking at work around. (edited after test)\nQuick fix, copy your fonts from bower to the src directory under and then it just pulls those and puts them in your dist folder. Not as slick as a using mainBowerFiles and of course may snafu on bower updates. \n\n. Just tried after updating with latest. Looks like it is having some issues on serve:dist copying the font files from bower to dist. The fonts folder is never created even though the task runs.\n.js\n[21:37:21] Starting 'scripts'...\n[21:37:21] Starting 'styles'...\n[21:37:21] Starting 'partials'...\n[21:37:21] Starting 'fonts'...\n[21:37:21] Starting 'other'...\n[21:37:22] gulp-inject 2 files into index.less.\n[21:37:23] Finished 'styles' after 2.27 s\n[21:37:23] all files 7.9 kB\n[21:37:23] Finished 'scripts' after 2.49 s\n[21:37:23] Starting 'inject'...\n[21:37:24] Finished 'partials' after 2.39 s\n[21:37:24] gulp-inject 1 files into index.html.\n[21:37:24] Finished 'fonts' after 2.31 s\n[21:37:24] gulp-inject 10 files into index.html.\n[21:37:24] Finished 'inject' after 443 ms\n[21:37:24] Starting 'html'...\n[21:37:24] gulp-inject 1 files into index.html.\n[21:37:24] Finished 'other' after 2.77 s\n[21:37:41] 'dist/' styles/app-4159cf83d7.css 118.44 kB\n[21:37:41] 'dist/' styles/vendor-389eb5336b.css 58.61 kB\n[21:37:41] 'dist/' scripts/app-066df6fa26.js 6.29 kB\n[21:37:41] 'dist/' scripts/vendor-649835bb53.js 459.85 kB\n[21:37:41] 'dist/' index.html 640 B\n[21:37:41] 'dist/' all files 643.82 kB\n[21:37:41] Finished 'html' after 18 s\n[21:37:41] Starting 'build'...\n[21:37:41] Finished 'build' after 13 \u03bcs\n[21:37:41] Starting 'serve:dist'...\n[21:37:41] Finished 'serve:dist' after 51 ms\n[BS] [BrowserSync SPA] Running...\n[BS] Access URLs:\n\n. ",
    "steeren": "Hi there.\nFirst I'd like to say, thank you! Your generator is fantastic. \nI also encountered a problem that I guess is related to Bootstrap shifting things around a little (as mentioned some where above).\nI generated a project with boostrap and bootstrapUI on ES5 and right now I am only using:\n\"gulp serve\" \nI have noticed 404's where the fonts were not found. Turns out there aren't copied to .tmp/serve so, its no wonder they weren't found. \nJR-Utily kindly supplied some workaround code which I took and placed in inject (changing references from conf.paths.dist to conf.paths.tmp), and adding the fonts task as a dependancy of the inject task. Had to change the font path to /serve/fonts/ too). \nHere's my changes:\n``` javascript\ngulp.task('copy-bs-fonts', function(){\n  return gulp.src(conf.wiredep.directory + '/bootstrap/fonts/*.{eot,svg,ttf,woff,woff2}')\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/fonts/')));\n});\n// Only applies for fonts from bower dependencies\n// Custom fonts are handled by the \"other\" task\ngulp.task('fonts', ['copy-bs-fonts'], function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('*/.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/fonts/')));\n});\n```\nI am almost certain there is probably a cleaner way of doing this, but just in case anyone is stuck for something before the next release, this \"should\" get you past the missing font issues with \"gulp serve\"\n. ",
    "dheerajui": "@JR-Utily that worked like a charm for me. I was using angular material and bootstrap would pick up angular fonts but not glyphicons. Thank you so much!!. ",
    "admorphit": "+1 this should be covered by tests\n. ",
    "christophertrudel": "Same options as above except NO Jade, UI-Router or Bootstrap.\nApplied the commits and still no luck. Any insight?\n\n. ",
    "mfilotto": "TS 1.5 beta with awesome typescript webpack loader work just fine for my code written in ES6 using modules (aka external module for TS)\n. #708 \n. ",
    "msenosiain": "Hi, How did you solve this? I'm not using any js preporcesssor nad have the same bug.\nThanks\n. Oh ok. Thanks\nEl ago 28, 2015 9:55 AM, \"Ben Murden\" notifications@github.com escribi\u00f3:\n\n@msenosiain https://github.com/msenosiain The main difference seems to\nbe in the index.html, where you need to change the creationDate attribute\non the acme-navbar element to creation-date so you have the following.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/640#issuecomment-135767433\n.\n. \n",
    "benmurden": "@msenosiain The main difference seems to be in the index.html, where you need to change the creationDate attribute on the acme-navbar element to creation-date so you have the following.\n<acme-navbar creation-date=\"main.creationDate\"></acme-navbar>\n. ",
    "sergonius": "the default components folder, where i've put most of my stuff :-(\n. what about html files? ive used ng-include to get some stuff from the components folders.\n. So how would I get a working dist folder by running \"gulp build\" then? My ng-include has a path to the components folder, meaning things won't get rendered unless I put the components there. Or am I doing something wrong somewhere?\n. Currently I get error messages (cannot find resource) and an empty page, though. Where should I look for the problem?\n. Oh, great thanks, I had to change \"app\" to \"/app\", surprised nobody else has had an issue.\n<3\n. I created my first pull request ever, hope I did that right :-D\nWhat I got:\nOSX Yosemite 10.10.3,  node v0.12.4.\n.yo-rc.json:\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.11.0\",\n    \"props\": {\n      \"angularVersion\": \"~1.3.4\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"none\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. Updating the generator didn't work for me.\n. I reran the generator after updating and made a new project, replaced the files I had and I still need to change it to \"/app\"\n. I don't have permissions to do that.\n. ",
    "AhmetCanSolak": "I have almost the same problem, and I try to change 'app' to '/app', it have not worked for me, too. Do you have any suggestion. After build I can just see my initial screen, but ui-router does not work. I just get Not Found message when I try to use ui-router.\nedit: I solve my problem by removing all / before my URL's. Thank you anyway.\n. I have the same problem with my bootstrap dropdown menu. My configuration is a little bit different. Tough, @wjehring 's solution worked for me. Thank you. Also, I would like to ask you is would this be a problem later with my other jquery elements? \n. Sorry for my impatience. I opened the issue without double check my styling files. I had a conflict with them, now the problem solved.\n. With little changes you can solve this. \nFirst, have an unnamed view in index.html and have a named view in main.html. \nThen go to your StateProvider. Make an  abstract : true  state for initialization. Then have login state and after login states in named view. That's all. You can use dot convention to make things easier for other views in your submenu items, etc.\n. You may like to use this: background-image: url('../../assets/images/greedygamelogo.png');\n. I solved it by removing bootstra.css from override section in bower.json .\n. ",
    "andrescuev": "Hi @Swiip \nI still have the same issue as AhmetCanSolak and sergonius with the ui-router Not Found, adding the \"/\" to \"app\" is not working in my case.\nAny other solution for this?\n. ",
    "kvetis": "I had installed ruby and sass when the bug occured. ruby v 2.2.2 and sass gem 3.4.15. I can run sass command from the console.\ngulp styles --verbose outputs following:\n[14:43:08] Using gulpfile c:\\tmp\\yo\\gulpfile.js\n[14:43:08] Starting 'styles'...\n[14:43:09] gulp-inject 2 files into index.scss.\n[14:43:09] gulp-ruby-sass: Running command: sass --style expanded --update C:/Users/XKOBR_~1/AppData/Local/Temp/gulp-ruby-sass:C:/Users/XKOBR_~1/AppData/Local/Temp/gulp-ruby-sass/_14139e58-9ebe-4c0f-beca-73a65bb01ce9 --load-path src/app\n[14:43:09] Finished 'styles' after 728 ms\noutput of gulp\n[14:39:13] Using gulpfile c:\\tmp\\yo\\gulpfile.js\n[14:39:13] Starting 'clean'...\n[14:39:14] Finished 'clean' after 64 ms\n[14:39:14] Starting 'default'...\n[14:39:14] Starting 'scripts'...\n[14:39:14] Starting 'styles'...\n[14:39:14] Starting 'partials'...\n[14:39:14] Starting 'fonts'...\n[14:39:14] Starting 'other'...\n[14:39:14] Finished 'default' after 818 ms\n[14:39:14] gulp-inject 2 files into index.scss.\n[14:39:15] Finished 'partials' after 427 ms\n[14:39:15] all files 7.54 kB\n[14:39:15] Finished 'scripts' after 1.05 s\n[14:39:15] Finished 'fonts' after 309 ms\n[14:39:15] Finished 'other' after 248 ms\n[14:39:15] Finished 'styles' after 1.02 s\n[14:39:15] Starting 'inject'...\n[14:39:15] gulp-inject Nothing to inject into index.html.\n[14:39:15] gulp-inject 10 files into index.html.\n[14:39:15] Finished 'inject' after 89 ms\n[14:39:15] Starting 'html'...\n[14:39:15] gulp-inject 1 files into index.html.\n[14:39:28] 'dist\\' styles\\vendor-3a45f7cadb.css 242.47 kB\n[14:39:28] 'dist\\' scripts\\vendor-b5ecdc3d3c.js 436.99 kB\n[14:39:28] 'dist\\' scripts\\app-a0cf0a48f6.js 5.88 kB\n[14:39:28] 'dist\\' index.html 580 B\n[14:39:28] 'dist\\' all files 685.92 kB\n[14:39:28] Finished 'html' after 13 s\n[14:39:28] Starting 'build'...\n[14:39:28] Finished 'build' after 4.22 \u03bcs\n. @andrea-spotsoftware nope, sorry, i switched back to less. :-(\nDne 30. 5. 2016 8:24 odpoledne napsal u\u017eivatel \"andrea-spotsoftware\" \nnotifications@github.com:\n\n@kvetis https://github.com/kvetis have you ever solved this problem?\nI'm on the same issue and it's driving me crazy..\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/642#issuecomment-222537763,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AEAX9F_aS7tsivk5clcPfwN-xDgDjj0mks5qGytjgaJpZM4FODHg\n.\n. \n",
    "chalettu": "I ran into this as well.  It seems as though the workflow creates the temp index.scss file but the part that is supposed to inject it and put it under /serve/app/ doesnt seem to be doing that.  Any troubleshooting tips you can provide to help me speed up figuring it out?\n. Thank you for considering it.  I will take a look at updating the tests so they pass.  This feature of environments was pretty important and critical for the angular mobile apps and web sites I write.  With this little addition it makes it easier for me to manage having multiple backends.  I would think this is a fairly common problem.  How to handle different env.  I like using this gulp workflow to handle it because it makes it easy to add this parameter on my CI builds when I deploy to production or any other Env.\n. ",
    "iamchairs": "How do I update after I used the generator?\n. Updated the generator version to ^0.12.1 and reran the generator. Then ran npm install.\nFont's still didn't transfer on Linux.\nDo I need to run bleeding edge?\n. ",
    "iomgi": "I have the same issue on OSX with the 0.12.1 version of the generator.\nNo fonts folder present in the dist folder.\nFresh project, no errors in the console output.\n. ",
    "antoescu": "I have the same problem and I see that it is already fixed, but how do you fix it when you already have a project running? (With custom gulp tasks, different directories, etc). Thanks\n. Hi, thanks for the quick response. I still cannot see the /fonts folder in my dist.\nHere is the bower.js\n``` javascript\n {\n  \"name\": \"myapp\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"jquery\": \"~2.1.4\",\n    \"angular-ui-router\": \"~0.2.15\",\n    \"bootstrap-sass-official\": \"~3.3.4\",\n    \"animate.css\": \"~3.3.0\",\n    \"angular\": \"~1.4.0\",\n    \"angular-localization\": \"~1.2.1\",\n    \"flag-icon-css\": \"~0.7.1\",\n    \"angularjs-slider\": \"~0.1.21\",\n    \"ng-file-upload\": \"~5.0.9\",\n    \"angular-ui-sortable\": \"~0.13.4\"\n  },\n  \"devDependencies\": {\n    \"angular-mocks\": \"~1.4.0\"\n  },\n  \"resolutions\": {\n    \"jquery\": \"~2.1.4\",\n    \"angular\": \"~1.4.0\"\n  },\n  \"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"dist/fonts/glyphicons-halflings-regular.eot\",\n        \"dist/fonts/glyphicons-halflings-regular.svg\",\n        \"dist/fonts/glyphicons-halflings-regular.ttf\",\n        \"dist/fonts/glyphicons-halflings-regular.woff\",\n        \"dist/fonts/glyphicons-halflings-regular.woff2\"\n      ]\n    }\n  }\n}\n```\nLet me know if I am doing something wrong. Thanks!\n. Thanks again. Unfortunately this still doesn't work, I don't see a fonts folder in dist and also adds a new problem. In my index.scss, the part where boostrap should be added between // bower:scc and // endbower doesn't get added if I add what you just mentioned. I am getting kind of crazy trying different stuff. Let me know if you come with another idea. Thanks\n. Thanks for pointing it out. I'll do as you said. Good to know svg files work that way\n. ",
    "loren138": "This is exactly what I needed so I manually merged it in.  That produced a few comments (above) on some code lines.  It would also be nice if it didn't put the config json files in my dist folder since they are already merged.  It would also be nice of the rendered constants.config.js wasn't in the src folder (maybe it could go in .tmp or serve?)  I don't understand gulp enough to fix either of those though.  Overall, thanks so much.  There is no way I could have gotten this to work without this PR.\nOne more thing, it would be nice if you made gulp watch the config files and cause browser serve to refresh when they change.\n. Any thoughts on the next release?  Trying to decide the best way to get bootstrap fonts working for my code...\n. This line should read from the config\nreturn gulp.src(path.join(conf.paths.src, '/app/env_configs/config-' + environment + '.json'))\n. And this one\n.pipe(gulp.dest(path.join(conf.paths.src, '/app')));\n. To allow reading from config add\nvar conf = require('./conf');\nvar path = require('path');\n. ",
    "rictorres": "I had the same issue, but the problem lives on MDI's bower.json config.\nSolution\nAdd the following to the overrides section of your project's bower.json.\njson\n\"overrides\": {\n  \"mdi\": {\n    \"main\": [\n      \"fonts/*\",\n      \"css/*\"\n    ]\n  }\n}\nAlso, check https://github.com/Templarian/MaterialDesign-Webfont/issues/7\n. i'm the one who should thank you guys for this awesome project! :clap:\n. ",
    "agustin107": "A solution that worked for me is:\n```\nClass SisService {\n    constructor($q)  {\n        'ngInject';\n        this.$q = $q;\n     }\n     get()  {\n         let deferred = this.$q.defer();\n         deferred.resolve();\n         return deferred.promise;\n     }\n     static sisFactory($q) {\n         return new SisService($q);\n     }\n}\nSisService.sisFactory.$inject = ['$q']\nangular.module(moduleName, [])\n  .factory('sisService', SisService.sisFactory);\n```\nI hope to help you!!!\nP/d: Read this article, is very helpful and is full.\n. ",
    "sergeymorkovkin": "Facing the same issues on Windows. Python 2.7 and .NET 2.0 are required dependencies. Maybe we could improve this somehow?\n. ",
    "simonerni": "+1\nI think it's because the Inject Task doesn't trigger a browser sync reload, because the styles task does indeed trigger one.\n. ",
    "jesucarr": "I just tried adding .pipe(browserSync.reload({ stream: true\u00a0})) as the styles task does, but the issue is still there.\nI also tried adding gulp.watch(path.join(conf.paths.tmp, '/serve/*.html'), browserSync.reload);, so the browser reloads after the inject task, but no luck.I just tried adding .pipe(browserSync.reload({ stream: true\u00a0})) as the styles task does, but the issue is still there.\nI also tried adding gulp.watch(path.join(conf.paths.tmp, '/serve/*.html'), browserSync.reload);, so the browser reloads after the inject task, but no luck.\n. @sqal I just tried your suggestion but it doesn't seem to work for me :(\n. @sqal yes I did those changes and I also tried with a / in front of app, but it doesn't fix it. Remember the issue is that it's loading one behind, so if you save twice, it would show as expected. Try doing gulp serve, make a change in index, and save just once. Do you have that issue?\n. ",
    "slawojstanislawski": "Well, why edit, perhaps it is valid to say that one should only edit the templates/files angular puts together into the index.html at runtime, but one can still edit index.html and it causes reload, yet in a way that other files don't, I suppose it won't lead to anything serious, just a bit of confusion and introduction of one more unnecessary change (like a single blank space) to reload to see the change, it's just a user experience matter.\nAs to why one may edit index.html, there can be many reasons, although I can't think of any very serious example, with exception maybe for a viewport tag changes or introduction of some meta tags, like facebook open graph meta tags - although I didn't test this particular use case, so I'm not sure about the generator's behavior on this one - just off the top of my head.\n. ",
    "sqal": "@jesucarr, @skeenan: I think the issue has something to do with that part:\ngulp.watch(path.join(conf.paths.src, '/app/**/*.html'), function(event) {\n    browserSync.reload(event.path);\n});\nI replaced it with:\ngulp.watch([\n    path.join(conf.paths.tmp, '/serve/*.html'),\n    path.join(src, 'app/**/*.html')\n]).on('change', reload);\nand now works as expected :) Good luck.\n. @jesucarr ops ofc I made a mistake in my previous comment, it should beconf.paths.srcinstead of justsrcbecause I had this variable declared before. And the same thing goes forreload->browserSync.reload`. Did you fix these by yourself and it's still not working?\n. @jesucarr I understand the issue and I also had this problem, but my changes solved it for me (changes made to index.html are visible after first save). It's weird it's not working for you. But to make sure i just did clean install of generator, did the changes, ans it's still working :).\n. ",
    "dtolstyi": "The issue looks quite easy. The problem is just in the order of execution of tasks: as soon as you save changes to index.html automatic page reload happens, but in parallel there's a task which performs inject of static resources.\nAnd it turns out that refresh is performed before the new index.html file is actually built. That's why you are seeing previous version of your file.\nThis can be easily verified inside .tmp/serve/index.html file. \nP.S. Though the issue is quite easy - it's quite hard to resolve it using Gulp 3.x\nThe solution requires us to wait tasks inject, styles and/or scripts to finish and to call reload after this. One of the solutions is to use run-sequence module but it means we need one more module in the setup.\nAt the same time it should be quite easy to achieve in Gulp 4. So, depending on the time when Gulp Angular generator is going to move to Gulp 4 it might not worth performing so many changes just because of index.html.\n. @Swiip, Thank you for your generator, Matthieu. It's a pleasure to help a bit into it's development)\n. Yes, I see. The problem is that now we are calling browserSync.reload(); without stream:true parameter. In the evening I will try to change the process a bit. I got some ideas for this...\n. Ok, I've did a new PR: https://github.com/Swiip/generator-gulp-angular/pull/911 which takes into account problem mentioned by @alfaproject . Now, in case of styles changes, reload is being done only to styles themselves instead of full page reload.\n. I also think that it's a duplicate of #660.\n. @Swiip Yes, this time I did manual testing myself as well. Tried to use generator with yeoman and it was working for me as intended. Hope, for you it will be the same.\nGood luck, Matthieu ;)\n. Haha) No luck for me)\nI will remake PR this evening with browserSync.stream(). Thank you, @alfaproject .\n. After searching in Internet for a quite long:\n1. I didn't find any mentioning that browserSync.reload({ stream: true }) is deprecated.\n2. Yes, I've seen messages from developers recommending to use browserSync.stream().\n3. Looks like it's possible to use browserSync.stream() without parameters and it will have the same effect as browserSync.reload({ stream: true }).\nI've updated current PR with corresponding changes. Manual tests with the new function has shown the same results as before - everything looks ok.\n. @alfaproject Yes, I absolutely agree with you. It's a good idea to be always up-to-date. Thank you for info ;)\n. Great) Thank you ;)\n. ",
    "paddybasi": "I don't this solely applies to the dist either, even selecting no jquery will always include it. I believe this is probably due to the third party library 'toastr' which has a dependency on jquery. When wiredep is injecting the bower dependencies it is probably resolving to jquery.\nIt also makes sense though, as toastr is a jquery plugin. I believe a solution would be to remove toastr completely or a suitable replacement.\n. ",
    "jackrobertscott": "+1\n. ",
    "qumani-designs": "@Swiip - I have been using this generator for quite some time now and love it, thank you for all of the work you put in.\nThat being said... In the recent updates, I can no longer build a working copy in dist. If I do not use html5mode it is fine, however, no matter what I attempt to do, I cannot get a stable copy running with html5mode that I can refresh. Before, I would use $locationProvide with appropriate <base href=\"/\"> tag, .htaccess rewriting to /index.html on my server, and use a \"middleware\", but as far as I can tell those are only for the node instance that is running locally, and it does not get put into the \"build\":\n```\nvar modRewrite = require('connect-modrewrite');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/index.html',\n    server: {\n      baseDir: baseDir,\n      middleware: [\n        proxyMiddleware,\n        modRewrite([\n          '!\\.\\w+$ /index.html [L]'\n        ])\n      ]\n    },\n    browser: browser\n  });\n}\n```\nalso tried another suggestion of:\n```\nvar proxyMiddleware = require('proxy');\nvar historyApiFallback = require('connect-history-api-fallback');\nfunction browserSyncInit(baseDir, files, browser) {\n  browser = browser === undefined ? 'default' : browser;\nvar routes = null;\n  if(baseDir === paths.src || (util.isArray(baseDir) && baseDir.indexOf(paths.src) !== -1)) {\n    routes = {\n      '/bower_components': 'bower_components'\n    };\n  }\nbrowserSync.instance = browserSync.init(files, {\n    startPath: '/index.html',\n    server: {\n      baseDir: baseDir,\n      middleware: proxyMiddleware.concat(historyApiFallback),\n      routes: routes\n    },\n    browser: browser\n  });\n}\n```\nDid I miss something along the way here?\n. ",
    "thangtx": "Thank you, my issue is resolved.\n. ",
    "naveenjafer": "@thangtx I am facing the same issue! Did just removing the uglify transformation work? doing that is still not fixing my issue.\n. @danielrvt @rvbiljouw I have the exact same issue! Did you find a fix for this! \nI tried the following.\n1) removed uglify task.\n2) reordered the packages based on https://www.npmjs.com/package/dependency-orderer - The order suggested by this ended up breaking other things.\nI think this issue would only occur when the order of dependencies is not right, but the serve:dist is covered by wiredep. I have been stuck on this for over 3 days now.\n. Aaj,  suspected something of this sort, I have close to 20 dependencies :/ i have been trying this hit and trial approach for quite a lot of time now, doesn't work. Thank you for the prompt reply :) \n. ",
    "hdmchl": "+1 for this. Any idea when it will be merged in?\n. I cloned the repo and merged the branch in locally. I can confirm that it's working nicely for me. :+1:\n. ",
    "castillobgr": "Haha! No problem. Keep it up!\n. Removed unnecessary apostrophe.\n. More idiomatic way of asking.\n. Removed unnecessary space.\n. Removed 's'.\n. Removed 's'.\n. Changed 'html' to a more standard 'HTML'.\n. ",
    "harijoe": "The thing is, the error occurs right after running the generator and gulp. It's not about some custom code that I would have included. doppel was the name I choose when I created the project. Don't you experience the same issue ?\n. ",
    "cazacugmihai": "Also, neither fontawesome fonts are not included:\n\nGET http://172.17.0.6:3000/fonts/fontawesome-webfont.woff2?v=4.4.0 404 (Not Found)\n\nIf I start it with \"gulp serve\", everything is fine.\n. Ok,  I'll use a custom task in this case. Thanks!\n. ",
    "bsitruk": "https://github.com/klei/gulp-angular-filesort does part of the work.\nBut I'm also interested by the question.\n. ",
    "MarcLoupias": "In gulp task inject in inject.js : \nvar injectScripts = gulp.src([\n        path.join(conf.paths.src, '/app/**/*.module.js'),\n        path.join(conf.paths.src, '/app/**/*.js'),\n        path.join('!' + conf.paths.src, '/app/**/*.spec.js'),\n        path.join('!' + conf.paths.src, '/app/**/*.mock.js')\n    ])\n        .pipe($.angularFilesort()).on('error', conf.errorHandler('AngularFilesort'));\n. ",
    "rwwagner90": "I'm having issues getting code coverage to work with ES6 and Babel as well. I'm using isparta, but it will only instrument .spec.js files, it will not pull in controllers, services, etc. I believe this is because there is the single index.module.js file that is pulling in all of the controllers, services, etc. How can we expose these files to isparta/istanbul?\n. @dlombardi babel is a built in option of generator-gulp-angular. Why add it manually?\n. @dlombardi I would suggest running the generator in another folder and looking at the way the gulp tasks are set up for use with babel. I believe it uses webpack and babel-loader rather than gulp-babel.\n. Just kidding, put it in the wrong place.\n. It looks like this is the issue: addRootSlash: false.\nI just made it addRootSlash: true and refreshing the page seems to no longer break styles. Is there a reason it was set to false in the first place?\n. @Swiip please look at the comment I posted. It works when I change addRootSlash to true. Could you please tell me why it was set to false?\n. @Swiip @zckrs it seems like this may be a ui-router and generator issue. The behavior of each needs to line up. UI-router seems to think that prepending state urls to relative paths is what is supposed to happen. I will open an issue on UI-router and check back in here.\n. We are using html5mode. For example, we have a state campaigns and it's trying to load https://demo.lvh.me/campaigns/bower_components/font-awesome/css/font-awesome.css. It's incorrectly adding campaigns into the path for the css assets. \n. Ahhh, I had my base href set at the bottom of <head>, and moving it to the top does seem to fix the issues. Thanks @hardywu!\n. @hardywu I'm having issues with this as well. Please add to the discussion over at #823 :smile: \n. I was able to get this working, for the most part. If you guys would like to work with me on getting an official update to the generator, or at least the guide, let me know.\n. @zychj1 my solution has several parts, but I will try to list it all here for you.\nFirstly, I created a test.js file containing the following:\n``` js\nrequire('angular');\nrequire('angular-mocks');\nvar testsContext = require.context('./app', true, /.spec.js$/);\ntestsContext.keys().forEach(testsContext);\nvar moduleContext = require.context('./app', true, /.module.js$/);\nmoduleContext.keys().forEach(moduleContext);\n```\nThen I had to install a few npm packages:\nnpm install karma-coverage --save-dev\nnpm install karma-webpack --save-dev\nnpm install isparta-loader --save-dev\nThen, I had to update my karma.conf.js to work with webpack and the isparta-loader. I will paste the entire contents of the file below:\n``` js\n'use strict';\nvar path = require('path');\nvar conf = require('./gulp/conf');\nvar _ = require('lodash');\nvar wiredep = require('wiredep');\nfunction listFiles() {\n  var wiredepOptions = _.extend({}, conf.wiredep, {\n    dependencies: true,\n    devDependencies: true\n  });\nreturn wiredep(wiredepOptions).js\n    .concat([\n      './node_modules/phantomjs-polyfill/bind-polyfill.js',\n      path.join(conf.paths.src, '/ngConstants.js'),\n      path.join(conf.paths.src, '/test.js')\n    ]);\n}\nmodule.exports = function (config) {\nvar configuration = {\n    files: listFiles(),\nsingleRun: true,\n\nautoWatch: false,\n\nlogLevel: config.LOG_INFO, //config.LOG_DEBUG,\n\nbabelPreprocessor: {\n  options: {\n    sourceMap: 'inline'\n  },\n  filename: function (file) {\n    return file.originalPath.replace(/\\.js$/, '.es5.js');\n  },\n  sourceFileName: function (file) {\n    return file.originalPath;\n  }\n},\n\ncoverageReporter: {\n  reporters: [\n    {type: 'html', dir: 'coverage/'},\n    {type: 'text'}\n  ]\n},\n\nframeworks: ['jasmine'],\n\nhostname: 'demo.lvh.me',\n\nngHtml2JsPreprocessor: {\n  stripPrefix: 'src/',\n  moduleName: 'app'\n},\n\nbrowsers: [\n  'PhantomJS'//,'Chrome'\n],\n\nplugins: [\n  'karma-babel-preprocessor',\n  'karma-chrome-launcher',\n  'karma-coverage',\n  'karma-phantomjs-launcher',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor',\n  'karma-webpack'\n],\n\npreprocessors: {\n  'src/**/*.html': ['ng-html2js'],\n  'src/**/*.spec.js': ['babel'],\n  'src/test.js': ['webpack']\n},\n\nreporters: ['progress', 'coverage'],\n\nwebpack: {\n  module: {\n    preLoaders: [\n      // transpile all files except testing sources with babel as usual\n      {\n        test: /\\.js$/,\n        exclude: [\n          'src/app/**/*.spec.js',\n          path.resolve('node_modules/')\n        ],\n        loader: 'isparta'\n      }\n    ]\n  }\n}\n\n};\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if (configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\nFinally, I had to update all instances of:\nbeforeEach(module('app') \nin all of the tests, to be: \nbeforeEach(angular.mock.module('app').\n. Would this be something you guys would want to add to the generator itself or should we just document this somewhere? Let me know and I'll be glad to work on a PR.\n. @Swiip could we get some additions to the docs then perhaps, rather than changing the generator itself?\n. Since there are several potential methods for fixing this issue listed here, I am going to close this. Please reopen if work is needed.\n. ",
    "dlombardi": "cant we get an answer to this?  We're trying to integrate gulp-babel into the scripts tasks.  this fails in gulp serve:dist.\n. In the case of a large project built without that option enabled.\n. bump.  This is exactly what I need.\n. ",
    "amercier": ":+1: \n. ",
    "devmark": "issue resolved,finally i injected custom style by myself.\nThanks for reply! \n. https://github.com/Swiip/generator-gulp-angular/pull/1052\n. ",
    "drGrove": "@zckrs,\nMDL and Angular-Material are two completely different implementations. Unlike bootstrap and angular-ui-bootstrap (where the css is the same) MDL and Angular-Material are their own entities with very little cross over\n. @zckrs,\nAMDL is looking pretty good. May want to wait for a 1.0 release though.\n. @Swiip, \nWhat are your thoughts? Should I start working on an integration with AMDL as well?\n. @Swiip,\nOkay. I'll take a crack at the AMDL integration. Do you think that we should make Material Design the base key, then offer MDL, AMDL and Angular-Material as the sub-options (similar to bootstraps layout)\n. I just ran through these steps and have a couple of minute changes.\n- If you're not using a HTML preprocessor markups needs to be replaced with partials\n- Karma spec reporter is included as a plugin, but not used. See the karma-spec-reporter repo for docs if you choose to use it.\nI also noticed that the *.spec.js files are being included in coverage on isparta, is there a way to fix this?\n. @skeep also, for ngHtml2JsPreprocessor. You currently have oei. Instead could we just pull in the package.json?\njavascript\nvar pkg = require('package.json')\n...\nngHtml2JsPreprocessor: {\n      stripPrefix: 'src/',\n      moduleName: pkg.name\n},\n..\nThat way, anyone copy-pasting doesn't have to worry about why all their tests that include HTML suddenly fail. Since by default the package name and module name are the same\n. @AlexanderTserkovniy, can you run\nbash\nnode -v\nTo use ES6 features without the harmony flag you need to be running at least Node 4. I've been running most of my recent projects using node stable. I recommend using some sort for node version management software. I use n. \n``` bash\nnpm install -g n\nsudo n stable\nRun this next line in the root of your project\nrm -r node_modules && npm install\n```\nThen your tests should work.\n. \"babel-core\": \"~5.8.25\",\n\"babel-loader\": \"~5.3.2\",\n\"babel-preset-es2015\": \"^6.3.13\"\nIs what i'm running\n. Can you copy and paste your package.json?\n. Are you using a lot of WeakMaps? Could you try replacing those and see if it fixes it?\n. :+1: \n. ",
    "jadjoubran": "Hi,\nThanks for bringing this up!\nAMDL is indeed a work in progress (0.3.0) at the time of writing.\nVersion 1.0 marks the integration of the most common components available in MDL + a fix for the following issue #4 which requires an upstream fix.\nBut AMDL can be used today even though it hasn't reached v1.0.0 that's because if a component is not  available as a directive yet, you can just use the plain MDL component (same thing if you hit a limitation).\n. ",
    "marchdoe": "@Swiip curious if this issue has changed, be interested in this functionality and could lend a hand if possible. \n. @Swiip no worries, totally understand. It is impossible these days to support *.js\nI hadn't heard of Fountain before, off to go check it out. Thanks!\n. ",
    "joelcdoyle": "NVM 0.29.0\nNode v0.12.9\nnpm 3.5.3\n@codeofsumit I still have this issue, even after running:\nsudo npm cache clean -f\nAny new components I create are added to the top of the script tags. I would definitely re-open this issue.\n@Swiip Any idea what environment problems might cause this? \n. Hmm. This only happens when I have 1 subfolder in components. When I have multiple folders then it works correctly.\nEDIT: Ok. So this issue changes depending on my file structure. I added a second component and my includes were in the correct order, but I added a third and now the third is appearing at the top of the list before 'app/index.module.js'\nSo, something about folders and file structure is causing this bug, at least in my environment.\n. ",
    "mvidailhet": "You're right, it's downloaded by bower but not injected in my index.html.\nIt's really minor, but it would have been better if it wasn't downloaded :)\n. I see. Nevermind then, it's not really worth the ugliness :) Thanks for your answers.\nLove your generator btw. I'm using it for a Ionic app and it works perfectly!\n. The app generated should work as is when included in a cordova project. Just change the \"dist\" folder to \"www\" and you're good to go!\n. ",
    "edimoldovan": "Pretty disappointing reply, but thanks for the update. Will look into other alternatives then.\n. ",
    "Miguel-Herrero": "I've executed $(document).foundation(); in Chrome console AFTER all page was loaded, and then the menu worked. How is it that the last script of the body ($(document).foundation();) is not executed? (Or something is preventing it from being executed?\nAny idea on how could I make that script to be executed? Thanks\n. ",
    "pfried": "You chose the angular-foundation option, so you should use the proper angular-foundation tags, this will result in the menu button working again.\n```\n\n\n\nGulp & Angular\n\n\n\nMenu\n\n\n\n\n\nHome\nAbout\nContact\n\nApplication was created {{ vm.relativeDate }}.\n\n\n```\n@zckrs I do not know if a template (foundation) can be overwritten by a foundationComponents template, i am not familiar with generators, otherwise i would create a pr\n. ",
    "ObiKerui": "I had a similar problem with Foundation when I tried to use the Tabs or the Modal components (I copied the sample code straight from the Foundation examples). Seemed like a Javascript problem. When I read Miguel-Herrero's comment about running foundation after the page loaded I tried inserting this before the end of </body> in index.html...\njavascript\n<script>\n        $(window).load(function() {\n            $(document).foundation();            \n        });\n </script>\nWhich works for Chrome but only after a page refresh and if the development tools are open (?). And it doesn't work at all in Firefox, I still have to call $(document).foundation(); from the console. \n. Okay, thanks again!\n. ",
    "amgadfahmi": "@zckrs thanks buddy, will give it a shot \n. ",
    "Telemakhos": "https://github.com/mwaylabs/generator-m is (partially) based on this generator. You should check it out. It's a nice starting point, but Ionic integration into generator-gulp-angular would be obviously much better option =)\n. Cool, you can count this issue as a first vote... hopefully more people will find it useful too\n. Oh, I see... well, I guess users could activate or deactivate this behaviour during the yeoman generation, and have the option to enable/disable it later in the conf.js inside the gulp folder? Don't know... it isn't that complicated to configure so maybe we'll set it up ourselves in a per project basis. \n. ",
    "AlexGrs": "My mistake. I changed the name of the repo and of the app. But forgot to change it in gulp/build.js .\n. ",
    "gavinbarron": "Actually I did just run into more trouble where I had to put the directive references back. \nPerhaps you should pivot to using a tsconfig.json inline with the common code editors?\n. :+1: \n. ",
    "EmmanuelDemey": "As discussed on Twitter, you change some code ($digest vs $apply), I think after the integration of my plugin. \nBut according to this video the $digest method only update the current scope and its children. The $apply method will start the refresh from the $rootScope. So maybe the $digest is more performant than the second one. \nI do not know if it has an impact on your archetype, but if you want I can update my rule, because it check the wrong thing. \nhttps://egghead.io/lessons/angularjs-apply-vs-digest\nExcept from that, everything looks good ;)\n. I have publish a 0.4.0 with a fix for this issue. You can update your package.json with this version.\n. Hi, \nThanks. The problem come from the identifier from which we execute the config method (in your case $router). \nI am working on that. We can not easily detect if $router is a service/provider or an Angular module. \nMaybe we can create a whitelist for every angular components\n. ",
    "langerc": "thanks for the fast response - im just looking to include modules on demand cause my js files are huge now. Any suggestion for a solution i can apply now? browserify? How do you handle these things in your projects.\nAn example would be a d3 js library or other big libraries that are only required from one module, since its in the bower pipe it will be included in all of them and the startup time of the project is long.\nI found some clues that one can use bower with webpack with some downsteps.\n. Thanks again - this was on my list already - i guess i will upgrade to your latest masterpice and add lazy loading with oclazyload for now.\n. ",
    "aendrew": "An additional thing I've noticed \u2014 it stops serving image files when BS injection dies. It seems like the BS server is leaking memory or something?\n. @Swiip Hi, thanks for getting back to me! I didn't see any issues in the BS queue, so was wondering whether it could be the generator's implementation of it. Will give that a shot next time I scaffold out a new app.\n. @Swiip Yeah, that's what I thought \u2014 have looked through the config quite a lot and there's nothing sticking out at me.\nWill close this for the moment and try the BS queue, reopening if it is indeed an issue with the generator.\n. ",
    "danielrvt": "Where exactly did you changed that? I'm having the same problem... It seems that files are not been compiled in the correct order\n. Thanks guys! It worked using v1.0.0. This should be documented also, since we wasted a lot of time with this issue.\n. ",
    "dmastag": "I have been trying this myself with no Luck.\nEnded up just adding the below into my index.html.\nAny advise on the correct way would be appreciated.\nhtml\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n. @damdoum what implementation are you using?\nI am using the textual_name implementation like this\nhtml\n<md-icon md-font-set=\"material-icons\" class=\"md-dark\"> delete </md-icon>\n<!-- or -->\n<i class=\"material-icons md-dark\"> delete </i>\n. It is working on my side.\n. I am using v0.12.1 and scaffolded on the 3rd of August\n. The result of gulp watch will be in the generated .tmp folder.\nTo see it in action try to run gulp serve\n. Sure thing :)\n. Do you see anything in this line of code?\nconsole.log(post);\n. Could it be that you are calling reload() before Parse has finished initializing?\nI usually put the Parse Init in the runblock (index.run.js)\nNot sure if that is the problem though\nBut anyway, do you think this issue has anything to do with this generator?\nIf you run it in a brand new angular app than it is working as expected?\n. Hi @rosieks \nMaybe if the issue is rewritten to be more general, then the team would consider this?\n\"Request to be able to build & serve non minified version\"\n. Hi @bagusflyer \nLooks like this isn't a problem with the generator but with your code.\nYou have stated \"/\" as your otherwise page, but you haven't set \"/\" up.\nThe correct otherwise should be \"/video1\".\nAlso, you gotta check if your src/app/pages/video1.html file is present.\n. Did you by chance change the module name after you used the generator ?\nTemplatechache is using the original module name you have, this is configured in gulp/build.js under the partials task. Watch out for the module & root in that task.\nHope that solves your problem.\n. :+1: time to move on then ... to FountainJS\n. ",
    "sasajib": "ok, thanks. I changed the index.html comments. I am closing this.\n. ",
    "OlegRia": "well, maybe i'm wrong, but when i made build, and then run it not with gulp serve:dist, but in simple nodejs server (http-server). This error disappeared. It appears only if i run it with gulp serve:dist. So, it looks like it is not an Angular dev question...\n. @busches \nhttps://gist.github.com/NayRia/b0165429a18ef82f4544\n. ",
    "chanu": "I also facing the same problem .... I see \"Error: [$rootScope:infdig] http://errors.angularjs.org/1.3.15/$rootScope/infdig?\" error in console. Can any one help me ????\n. ",
    "bcldvd": "Changed it into a doc update :)\n. ",
    "shaunpatterson": "I'm having the same problem.  \n@zckrs my inject task has the following line\njavascript\n var injectStyles = gulp.src([\n    path.join(conf.paths.tmp, '/serve/app/**/*.css'),\n    path.join('!' + conf.paths.tmp, '/serve/app/vendor.css')\n  ], { read: false });\nNote it's /serve/app/**/*.css \n. > I created a basic no nothing app from the generator. In the build.js file there is this line: var cssFilter =  $.filter('*/.css'); this picks up your css files. I added a new css file to app/ and it correctly injected it and served it with gulp serve.\nI just repeated the same steps in a fresh directory.  My css in the file /src/app/test.css does not get embedded into index.css \nHere's my yo-rc\nhttps://gist.github.com/spattersongt/4b5b5fbf274c04bcc607\nEdit: \nSo I changed the extension to .less and everything worked correctly.  I guess if you select Less as your preprocessor, everything has to be in Less.  gulp/styles.js seems to support this. \n. ",
    "tawanda": "but if i run even the watch command directly it does not rebuild the file i changed, are you saying this was not implemented\n. ok, thanks for the feedback\n. ...and thanks for the great work :)\n. ",
    "julianfresco": "Don't know what changed, but removing my import @import 'app'; statement and the default styles in index.scss, resulted in success. Feel free to mark this as closed.\n. ",
    "lunatik-210": "The  problem is still there.. It works only when I keep .html files along with .jade in the same folder that doesn't make any scenes..\nI get the following traceback\n[13:44:48] Using gulpfile ~/projects/myprofile/frontend/gulpfile.js\n[13:44:48] Starting 'scripts:test'...\n[13:44:50] Time: 2201ms\n          Asset     Size  Chunks             Chunk Names\nindex.module.js  21.9 kB       0  [emitted]  main\n[13:44:50] Finished 'scripts:test' after 2.38 s\n[13:44:50] Starting 'test'...\nPhantomJS 1.9.8 (Linux 0.0.0) directive navbar should be compiled FAILED\n    Error: Unexpected request: GET app/components/navbar/navbar.html\n    No more request expected\n        at $httpBackend (/home/andrew/projects/myprofile/frontend/bower_components/angular-mocks/angular-mocks.js:1245)\n        at sendReq (/home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:10515)\n        at /home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:10221\n        at processQueue (/home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:14678)\n        at /home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:14694\n        at /home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:15922\n        at /home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:15733\n        at /home/andrew/projects/myprofile/frontend/.tmp/serve/app/index.module.js:9\n        at invoke (/home/andrew/projects/myprofile/frontend/bower_components/angular/angular.js:4476)\n        at workFn (/home/andrew/projects/myprofile/frontend/bower_components/angular-mocks/angular-mocks.js:2438)\n    undefined\nPhantomJS 1.9.8 (Linux 0.0.0): Executed 14 of 18 (1 FAILED) (0 secs / 0.077 secs\nGenerated Karma conf looks like that right now:\n```\nvar path = require('path');\nvar conf = require('./gulp/conf');\nvar _ = require('lodash');\nvar wiredep = require('wiredep');\nvar pathSrcHtml = [\n  path.join(conf.paths.tmp, '/serve/app//*.html'),\n  path.join(conf.paths.src, '//*.html')\n];\nfunction listFiles() {\n  var wiredepOptions = _.extend({}, conf.wiredep, {\n    dependencies: true,\n    devDependencies: true\n  });\nreturn wiredep(wiredepOptions).js\n    .concat([\n      path.join(conf.paths.tmp, '/serve/app/index.module.js'),\n    ])\n    .concat(pathSrcHtml);\n}\nmodule.exports = function(config) {\nvar configuration = {\n    files: listFiles(),\nsingleRun: true,\n\nautoWatch: false,\n\nngHtml2JsPreprocessor: {\n  stripPrefix: conf.paths.src + '/',\n  moduleName: 'frontend'\n},\n\nlogLevel: 'WARN',\n\nframeworks: ['jasmine'],\n\nbrowsers : ['PhantomJS'],\n\nplugins : [\n  'karma-phantomjs-launcher',\n  'karma-coverage',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor'\n],\n\ncoverageReporter: {\n  type : 'html',\n  dir : 'coverage/'\n},\n\nreporters: ['progress']\n\n};\n// This is the default preprocessors configuration for a usage with Karma cli\n  // The coverage preprocessor in added in gulp/unit-test.js only for single tests\n  // It was not possible to do it there because karma doesn't let us now if we are\n  // running a single test or not\n  configuration.preprocessors = {};\n  pathSrcHtml.forEach(function(path) {\n    configuration.preprocessors[path] = ['ng-html2js'];\n  });\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if(configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\n.yo-rc.json\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"1.0.0-rc2\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.2\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"restangular\",\n        \"module\": \"restangular\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"foundation\",\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"key\": \"angular-foundation\",\n        \"module\": \"mm.foundation\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"babel\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"jade\",\n        \"extension\": \"jade\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. ",
    "sinorga": "Hi, I have the same requirement. When app become bigger, I would like to extract some sub-modules, but I don't know how to do. \n. @benjamincharity I am new to this field too, thanks for your sharing. I tried to modify the gulp task flow to build all modules, but I think yours is much simple and straightforward by using ES6 syntax. I would try it :D Build all modules into one files is suitable for me at this moment.\n. ",
    "hardywu": "It seems that an extra line of splash is needed to tell the compiler not to ignore the unused module.\n. @4kochi  Somehow, it works in one line without compiler configuration:\nimport './splash';\n. @rwwagner90 I found the solution without change any configurations.\ntaptapship/wiredep#74\njust add <base href=\"/\"> before all css links.\n. The browser will not be able to find the css files if the accessing address is something like http://localhost:3000/posts/32.\n. Oops. It seems to be a duplicate issue with  #823 .\n. ",
    "4kochi": "The solution of @benjamincharity works for mw too. But as @hardywu mentioned if have to an extra line of code so the splash module is compiled\nvar a = splash;\nOtherwise the module is ignored by the compiler. Maybe there is an option in the compiler to compile all files and modules, even if they are not used. \nAnyway it would be generally great if the example app could cover this scenario. It makes a lot of sense to have a folder with angular modules which are more or less self containing. So one only have to add the module to the dependencies of the main angular app. We use this a lot to reuse modules between different projects. \n. Thanks @hardywu, that works for me too. But I did not found out why yet.\n. I have the same problem. Seems like the installation of the typescript definition files only works when tsd is installed globally. Maybe one have to change the install command in the generator.\nif (this.props.jsPreprocessor.key === 'typescript') {\n      this.spawnCommandSync('tsd', ['install', '-so']);\n}\nMaybe it is better to use tsd from the node_modules/.bin folder in the generated app.\n. Must be a problem with awesome-typescript-loader v0.15.9. I switched back to v0.15.6 and it works now.\n. ",
    "vucalur": "While importing to index.module.js works, it's still a workaround folks!\nFurthermore, it doesn't prevent devs from purposelessly hunting the cause of the error before they figure out it's gulp configuration fault rather than a mistake in their app code.\nMultiple modules should be handled by gulp.\nMy workflow works with following change:\nin gulp/scripts.js (https://github.com/Swiip/generator-gulp-angular/blob/master/generators/app/templates/gulp/_scripts.js#L87):\nchange:\nvar sources = [ path.join(conf.paths.src, '/app/index.module.js') ];\nto:\nvar sources = [ path.join(conf.paths.src, '/app/**/*.module.js') ];\nYou may have a different extension than js: (js|ts|coffee)\n@sinorga You mentioned modifying gulp code as well. What was your change? What didn't work?\nMy solution might have the same flaw.\nI haven't tested this modification thoroughly and I am not familiar with the code in gulp/*, so no PR from me.\nIt seems https://github.com/Swiip/generator-gulp-angular/blob/master/generators/app/templates/gulp/_unit-tests.js#L24 (path.join(conf.paths.tmp, '/serve/app/index.module.js')) should be changed as well.\nI hope someone will pick up from here.\nCheers\n. Maybe somebody will find this useful:\nAdding gulp-header@1.8.2 didn't work for my app, neither did removing whole node_modules and npm-install-ing them from scratch.\nSince I wasn't able to reproduce this on freshly bootstrapped Todo-MVC (generator-fountain-angular1@0.6.0),  what finally helped was copying it's node_modules to my project and installing only additional deps. Apart from those additional deps, there were no differences between package.json files. Crazy.\n. ",
    "shakyShane": "You can also set codeSync: false in the Browsersync config\n. ",
    "oswaldofreitas": "\nThe link you mentioned is the root documentation (still no docs for my questions).\nts definitions generally are in typings folder after project root folder, so they can be used for tooling (intellisense, autocomplete, linters...)\nWould be nice if the templates come in .jade when selecting jade engine (just a suggestion)\n. I realized that there is a tsd.json file in project root pointing to .tmp/typings, so it solves the tooling problem.\n\nBut I'm getting some Typescript errors because some classes are using angular interfaces like ng.ITimeoutService and ng.ILogProvider that are not exported by angular.d.ts.\n. Thanks\n. ",
    "mattycraig": "+1!\n. ",
    "jtammen": "Hey, I think this recipe is very helpful, thank you!\nI was just wondering whether it would make more sense to not put the generated config module into the sources folder. I am using this just to create environment specific build (think test, staging, production) of my app. And currently, I get a change in my sources ever time I run a build\u2026\n@karlhorky @Swiip What do you think?\n. @karlhorky Sounds like a pragmatic solution, thanks! (-:\n. ",
    "rajarju": "I think it should go to the styles scripts file. \nAs its already supported by the generator, i suggest you generate a new project with less and copy the less compiler config from the new styles.js file.\n. Tried installing these missing dependencies manually,\n```\nnode_modules/gulp-eslint/node_modules/eslint/lib/config/config-file.js:332\n            throw e;\n            ^\nError: node_modules/eslint-config-airbnb/rules/best-practices.js:\n    Configuration for rule \"no-labels\" is invalid:\n    Value \"2,[object Object]\" has more items than allowed.\n```\n. Seems there is an issues with eslint/eslint#5160\nPlease see also: eslint/eslint#5164 (PR eslint/eslint#5191)\nBut this is breaking the generator.\n. ",
    "wangchen": "@jmls You could try adding the following codes to your bower.json, it works for my scss project:\n\"overrides\": {\n      \"semantic\": {\n        \"main\": [\n          \"src/semantic.less\",\n          \"dist/semantic.js\",\n          \"dist/semantic.css\"\n        ]\n      }\n    }\n. ",
    "tossp": "Thank you very much\n. ",
    "psvensson": "Sorry I missed that;\nI have no file called .yo-rc.json anywhere.\nnode version v0.12.7\nOS is Linux Mint 17 (Ubuntu)\nI have used gulp-angular for several projects and it works very well but every time I select coffeescript this bug appears (I understand now).\n. Hi, sorry for the delay!\nI did upgrade the gulp-angular generator to the latest version and I managed to create one custom  component, which did get added and worked fine. Let's close this then. \n. ",
    "jessepinuelas": "@Swiip I switched to node sass version without any issues.\n. ",
    "MrBuBBLs": "This fixes an issue with the 2.x version of the del module and looks good as is.\nBut why use the callback function when you can 'return' its results to fullfill the promise ?\nAs illustrated there : https://github.com/gulpjs/gulp/blob/master/docs/recipes/delete-files-folder.md\nIn JS:\njavascript\ngulp.task('clean', function () {\n<% if (props.jsPreprocessor.key === 'typescript') { -%>\n  return $.del([path.join(conf.paths.dist, '/'), path.join(conf.paths.tmp, '/partials'), path.join(conf.paths.tmp, '/serve')]);\n<% } else { -%>\n  return $.del([path.join(conf.paths.dist, '/'), path.join(conf.paths.tmp, '/')]);\n<% } -%>\n});\n. @zckrs You're welcome :)\n. ",
    "knicholes": "json\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.12.1\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}```\n. Since I have two projects where this isn't working, I'll include the other one also\njson\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"0.12.1\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"angular-route\",\n        \"module\": \"ngRoute\"\n      },\n      \"ui\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"stylus\",\n        \"extension\": \"styl\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"babel\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"bootstrapComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}```\n. I updated to generator-gulp-angular@1.0.0-rc1, ran it and just hit \"enter\" for all of the defaults, ran gulp build, and find the following:\n...\n```\n build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js \n inject:js \n\n\n\n\n\n\n\n\n\n\n endinject \n inject:partials \n angular templates will be automatically converted in js and inserted here \n endinject \n endbuild \n```\nThe templateCache does indeed hold the navbar.html, however.\n. Should I not expect to see the templateCache JS included in the section labelled  inject:partials  in .tmp/serve/index.html after running the build task?\n. Well yes, I do see the navbar in my browser when I run both serve:dist and serve.  Oh... I see now.  The html task is loading the index.html from .tmp/serve, but then gulp's output is in the dist folder.  Thank you for your time, your patience, and the clarification.  Also, thank you for adding source maps in the newer version!  I'll close this because it's not a bug.  I just failed to read.\n. ",
    "wadijm": "thanks\n. ",
    "MQuy": "yup, there are some cases, vendor.js is much more weight than app.js. Could we have options to combine two files into one file?\n. ",
    "grahamtwine": "I do not want mocks in my production code :(\n. Ah misunderstanding of the issue on my part.\nOn 14 January 2016 at 12:04, Matheus Araujo notifications@github.com\nwrote:\n\n@grahamtwine https://github.com/grahamtwine You don't have mocks in\nyour production code. What I suggested is to ONLY exclude them when\nbuilding for production. Currently they are excluded in any case and use\nonly for tests.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/issues/768#issuecomment-171593298\n.\n\n\nRegards,\nGraham Twine\n+27 82 990 3055\n. ",
    "rubenCodeforges": "@MZellhofer\ncheck the gulp/watch.js at line 39 gulp.watch(path.join(conf.paths.src, '/app/**/*.jade'), ['markups']); \nas you can see the '/app/**/*.jade' means that it will look inside the app folder and its subfolders , you could try change this\n. the issue is but true , jade file are not getting processed.\nI have tested in different ways , create in different dirs app/**/*.jade || app/*.jade the files are beeing located only the output is wrong  like this http://i.imgur.com/sEeln9y.png\nin app/test.jade  i did simple h1 Jade - node template engine \n. ",
    "larodiel": "Every .jade file that was converted to .html are in 'tmp' folder (.tpm/serve/app/*/.html).\nMaybe one way to fix it, is moving files from tmp folder to the right folder.\n. ",
    "isrd1": "Yes, but that doesn't make that aspect good.  Have a look at Todd Mott's style guide who Papa references, he also disagrees on this point and he puts the function declarations before their use: https://github.com/toddmotto/angularjs-styleguide\nSurely if you use any linter references a variable or function before it's declaration is something to be avoided.  That internally JS hoists function declarations is neither here nor there, depending on a language default is asking for trouble in the long term.  \nTodd Motto's guide shows code that is equally readable but, at least in this respect, won't lead to error.\nIf I do a pull and re-write to that standard is that any use to anyone?\nRob\n. Yes, I have changed my code I just wondered if a change and choice in the generator was worth having for those other people who like to pass linters without issue and also prefer 'declaration before use'\nI'll have to find out how to change my own local copy to use that as my generator -haven't delved deeply enough yet, yours is the first generator I've liked.\n. ",
    "DaAwesomeP": "+1\n. This is a result of using an older version of UI Bootstrap than their docs show. At the top of their docs there is a \"Previous docs\" dropdown. Try the latest 0.13.x release.\n. The problem with deleting the src folder is that then you lose the structure created there, which is one of the purposes of using such a generator. It would be possible to create a _blank... file for each one in the src template folder, but that wouldn't be very efficient. I guess that I'll just have to wait for #793, which will replace the current system of adding in the files.\n. I know that they use the SemVer library, but I did test this. The tilde picks the closest available and the asterisk or x picks the highest version.\nThere's even an example on this package. Before this commit, the Bower JSON file would read ~1.4.2, and it picks that, not the latest 1.4.8. If you change it to 1.4.* or 1.4.x, then it will pick 1.4.8. You can try it too.\n\nOn Nov 28, 2015, at 12:52 AM, \"Jo\u00e3o Dias\" notifications@github.com wrote:\nThat's not true. Both bower and npm use this package behind the scenes: https://github.com/npm/node-semver\n\u2014\nReply to this email directly or view it on GitHub.\n. @Swiip Well, if you want precise than the tilde is correct. I'll add another commit to simply set it to ~1.4.8.\n. Ready to merge.\n. Thanks!\n. \n",
    "ansumanshah": "+1\n. +1 reopen the issue\n. ohh so i think adding this will work fine for my project??\npath.join('!' + conf.paths.src, '/app/**/_*.scss'),\ncool thanks !!\n. ",
    "benkroeger": "+1\n. ",
    "elouazzany": "+1\ncheck this sub-generator and give me your feedback\n. ",
    "seyDoggy": "@elouazzany I like the structure of your templates is more in-line with those of @doronsever's sub-generator. I'd be glad to help you extend it more.\n. ",
    "klovelovely": "+1\n. ",
    "GregaVrbancic": "+1\n. ",
    "omri79": "+1\n. ",
    "prbaron": "What about plop ?\n. the main advantage I see compared to a sub generator is that you do not need to remember all the command lines because it is interactive. Otherwise, it does the same things.\n. It can be interesting to add plop for that.\n. ",
    "joaocc": "Can't speak for other teams, but, we had some serious headaches until we fixed this.\nAlso, other projects seem to be doing the same \n- https://github.com/h5bp/html5-boilerplate/blob/master/.gitattributes\n- https://github.com/DaftMonk/generator-angular-fullstack/blob/master/app/templates/.gitattributes\n. I did :) \nhttps://github.com/OverZealous/cdnizer/issues/20.\nBut, after facing a similar problem with gulp-google-cdn, my conclusion is that having bower_components in root seems to be too big of a hassle. So I moved it back inside \"src\", made what I think are the needed changes, and my life improved a bit :).\n. ",
    "mustela": "Hey @0101adm did that integration worked? Would you mind to tell me between what tasks did you put it? \nThanks\n. Thanks @0101adm!  Wondering if you changed anything in your index.html too? Because its not working for me. \nThis is the cdnizer.js file \n``` javascript\n'use strict';\nvar path = require('path');\nvar gulp = require('gulp');\nvar conf = require('./conf');\nvar $ = require('gulp-load-plugins')();\ngulp.task('cdnizer',function(){\n  return gulp.src('dist/index.html')\n      .pipe($.cdnizer({\n        allowRev: true,\n        allowMin:true,\n        relativeRoot:'bower_components',\n        fallbackTest:'(function(){try{var lib=\"${ filepath }\".split(\"../\")[1];if(typeof ${ test } === \"undefined\"){cdnizerLoad(lib);}}catch(err){cdnizerLoad(lib);}})();',\n        files: [\n          {\n            file:'bower_components/angular/angular.min.js',\n            cdn:'//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.8/angular.min.js',\n            test:'window.angular'\n          }]\n      }))\n      .pipe(gulp.dest(\"dist\"));\n});\n```\nAnd the other tasks \n``` javascript\ngulp.task('other', function ()\n{\n    var fileFilter = $.filter(function (file)\n    {\n        return file.stat.isFile();\n    });\ngulp.src('./bower_components/**/*.js')\n  .pipe(gulp.dest('dist/bower_components'));\n\nreturn gulp.src([\n        path.join(conf.paths.src, '/**/*'),\n        path.join('!' + conf.paths.src, '/**/*.{html,css,js,scss}')\n    ])\n    .pipe(fileFilter)\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/')));\n\n});\ngulp.task('build', function(callback) {\n    runSequence(['environment_config', 'html', 'fonts', 'other'], 'cdnizer',callback);\n});\n```\nIt runs but I can't see the cdn in the index file. \n```\n[17:25:59] Using gulpfile ~/Sites/nocnoc/web_app/gulpfile.js\n[17:25:59] Starting 'build'...\n[17:25:59] Starting 'environment_config'...\n[17:25:59] Starting 'scripts'...\n[17:26:00] Starting 'styles'...\n[17:26:00] Starting 'partials'...\n[17:26:00] Starting 'fonts'...\n[17:26:00] Starting 'other'...\n[17:26:01] Finished 'environment_config' after 1.63 s\n[17:26:01] gulp-inject 52 files into index.scss.\n[17:26:05] Finished 'styles' after 5.23 s\n[17:26:05] Finished 'fonts' after 5.11 s\n[17:26:07] all files 276.75 kB\n[17:26:07] Finished 'scripts' after 7.2 s\n[17:26:07] Starting 'inject'...\n[17:26:07] gulp-inject 1 files into index.html.\n[17:26:07] gulp-inject 144 files into index.html.\n[17:26:07] Finished 'inject' after 380 ms\n[17:26:07] Finished 'partials' after 7.15 s\n[17:26:07] Starting 'html'...\n[17:26:08] gulp-inject 1 files into index.html.\n[17:26:11] dist/ maps/styles/app-09c2b8d009.css.map 3.48 MB\n[17:26:11] dist/ maps/styles/vendor-ce4c16be7c.css.map 41.24 kB\n[17:26:31] dist/ maps/scripts/vendor-33ead11c85.js.map 7.93 MB\n[17:26:32] dist/ maps/scripts/app-f69ef64cf2.js.map 529.16 kB\n[17:26:32] dist/ styles/app-09c2b8d009.css 684.94 kB\n[17:26:32] dist/ styles/vendor-ce4c16be7c.css 25.79 kB\n[17:26:32] dist/ scripts/vendor-33ead11c85.js 1.61 MB\n[17:26:32] dist/ scripts/app-f69ef64cf2.js 231.2 kB\n[17:26:32] dist/ index.html 13.1 kB\n[17:26:32] dist/ all files 14.54 MB\n[17:26:32] Finished 'html' after 25 s\n[17:26:32] Finished 'other' after 32 s\n[17:26:32] Starting 'cdnizer'...\n[17:26:32] Finished 'cdnizer' after 48 ms\n[17:26:32] Finished 'build' after 33 s\n```\nAny clue? \nThanks!!!\n. mmm @0101adm is that the file you are using? because its not working. \nThe one I have is: \n``\n        <!-- build:js(src) scripts/vendor.js -->\n        <!-- bower:js -->\n        <!-- rungulp inject` to automatically populate bower script dependencies -->\n         endbower \n endbuild \n    <!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js -->\n    <!-- inject:js -->\n    <!-- js files will be automatically insert here -->\n    <!-- endinject -->\n\n    <!-- inject:partials -->\n    <!-- angular templates will be automatically converted in js and inserted here -->\n    <!-- endinject -->\n    <!-- endbuild -->\n\n```\nThe only different I have is: <!-- build:js(src) scripts/vendor.js --> if I remove that, all the bower components are placed, but not using the cdn. \n. Ok, not sure what else do you need, so would you mind to tell me?  And I'll give it to you.\nThanks!\n. ",
    "clement-escolano": "I am very interested in this feature and would love to see it in vanilla generator.\nWorking on a solution to make the cdnizer work right now, will make a PR if successful :) \n. @fuchao2012\nNo sorry I didn't manage to make it work and it was not a big issue for the project so I gave up. \nStill interested though. \n. @joaocc May you close the issue as it will not be fixed (unmaintained project) ? Thanks !. ",
    "stoked74": "Not sure why but now it's working. Must have been an issue with gulp or node that a reboot corrected.\n. ",
    "XavierLeTohic": "@jmls please can you explain in details how it work's and where we have to place the code ? Thanks !\n. ",
    "lioman": "tsd.js is not created in gulp directory\n. ",
    "davewalk": "@0101adm I added gulp.start('partials'); to the gulp/watch.js file of my app to get the templateCache updated as it should on partial file updates.\n@Swiip Is this an acceptable solution? If so I'll send a PR. Thx!\n. ",
    "snikch": "Thanks for the response. It was the links to bower_components that I was finding hard to configure in dev. I know it's kind of an anti pattern, but I was trying to serve files through my own Go server to provide some consistency with the final URL structure & setup but I think after all this I might just have to try simplifying things a little bit.\nCheers\n. ",
    "gaboesquivel": "I'd use browserify for javascript and sass import for css see  postcss/postcss-import\n. that's not how it works, in both browserify and webpack you get one final javascript file you include in your html. That file is composed of everything you required in your javascript files. You don't need  wiredep. \n. Check out http://bit.ly/1Mwo70R OSCON 2014: How Instagram.com Works; Pete Hunt\n. ",
    "borNfreee": "Could you please explain why you don't want it? It would improve DX (developer experience).\nIt's very easy to create new controller and already have it 'imported' when you use e.g. coffeescript, but when you use ES6 you also need to add dependency manually in index.module.js.\n. Unfortunately, I did not find such plugin :(\n. ",
    "zhouhao27": "Thanks.\n. Yes. It shows correct value. But the browser is showing nothing.\nIf I use $timeout in reload() to return fake data, then everything's working. \n. I think it could be related to the generator because I run a similar project in grunt angular without any problem.Maybe related to the auto injection? I got a warning:\n\n'Parse' is not defined.\n\nAlthough Parse did get the correct value for me. \nThe strange thing is when I click \"Reload All\" button in BrowserSync, my browser works correctly. Anyway I'll try your suggestion. Thanks.\nEdit:\nI moved the Parse.Init() to index.run.js, but doesn't solve the problem. \n. Sorry, my mistake. My another app is a bit different. The problem has nothing to do with the generator. Please refer to: http://tumba.solutions/blog/angularjs-and-parse\n. ",
    "datnq201088": "Thank you\n. ",
    "saaqibz": "Thanks for investigating. \n@0101adm I think removing strict di works. Read the manual but not sure what it's saying that it does. Does it just make debugging easier and make sure you're using ngAnnotate? I'm probably going to end up removing it anyway because some dependencies seem to give this same error.\n@Swiip When I produced this error, I did not add any code I just ran as is 'blank generated project', do you know if there's anything else I should check on my machine to confirm that we have a similar setup? (Running OSX Yosemite / Chrome).  Did you get it to work on chrome?\nWhat's funny is that it works on Firefox just fine. I filed a bug report to google but haven't heard back. Maybe it's something their side.\n. Hey Matthieu,\nHere is the repo you requested: https://github.com/saaqibz/gulp-angular-gen-error\n(OSX-Yosemite, 2014 Macbook Pro)\nI also compiled a video of how I produced it.\nhttps://youtu.be/yCt5OHEMyg8\n. Thanks for giving it a look. I think I'll just use the es5 version for now.\n. ",
    "nickroberts": "The issue started when the moment-node.d.ts file in the Definitely Typed repo was updated. If you change the ref property to 1.4.1 in tsd.json the application will compile correctly. I'm not sure if we should enter an issue in the Definitely Typed repo, or not.\nhttps://github.com/borisyankov/DefinitelyTyped\nThis could just be something that is an issue with this generator, as the moment bower component, along with the moment-node package are both being installed.\ntsd.json\n{\n  \"version\": \"v4\",\n  \"repo\": \"borisyankov/DefinitelyTyped\",\n  \"ref\": \"1.4.1\",\n  \"path\": \".tmp/typings\",\n  \"bundle\": \".tmp/typings/tsd.d.ts\"\n}\n. ",
    "vaubrun13": "Indeed when changing the ref version it works like a charm\n. ",
    "NathanWalker": "This is the most frustrating issue with Typescript... duplicate identifier... urgh.\n. ",
    "jordond": "Oh I didn't see that, I should have looked a bit harder. Thanks!\n. ",
    "aarongray": "Whoops, looks like this generator is designed to work with both node 0.10.x and 0.12.x.\nI'm not sure the best solution then. The reason I opened this PR was because I had a deploy fail today, and it appeared to be due to the new version of node - 4.x.x being chosen to be installed by my host instead of 0.10.x. I solved it in my project by tightening up the version like I did in the commit on this PR, but if this repo is meant to support multiple versions of node, that's a little trickier.\nDo you folks have any ideas of a more elegant way to protect future users from getting bit by this same issue of loose version specificity?\n. Yeah, I didn't realize that this project was meant to support so many versions of node when I made that commit. Sorry about that. :-)\nI suspect that the reason that I had issues with my project with 4.x.x was because I was using an older version of this repo that didn't play nice with 4.x.x. My point still stands though, because I think this repo is the sort of library that people will download once and never update, because they use it to create a scaffold for their project. If you have a big, nonspecific node version combined with the fact that most people are never going to update their version of this library after they download it, future updates of node will likely break their setup. Unfortunately, as I've realized, since this library is meant to presently work with multiple versions of node, its not as easy as changing the node version in package.json.\nI wonder if a more robust solution would be to add a question in the command line step-by-step installation that asks which version of node users wanted, and then write a more specific node version based on their answer into the package.json file?\n. ",
    "edu2004eu": "For people having the same issue, without having to use the official bootstrap JS, or add any custom JS, I've found a working version here:\n<li class=\"dropdown\" dropdown=\"\">\n    <a role=\"button\" class=\"dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        Directives <b class=\"caret\"></b>\n    </a>\n    <ul class=\"dropdown-menu\">\n        <li><a href=\"#accordion\">Accordion</a></li>\n        <li><a href=\"#alert\">Alert</a></li>\n        <li><a href=\"#buttons\">Buttons</a></li>\n        <li><a href=\"#carousel\">Carousel</a></li>\n        <li><a href=\"#collapse\">Collapse</a></li>\n        <li><a href=\"#datepicker\">Datepicker</a></li>\n        <li><a href=\"#dropdown\">Dropdown</a></li>\n        <li><a href=\"#modal\">Modal</a></li>\n        <li><a href=\"#pagination\">Pagination</a></li>\n        <li><a href=\"#popover\">Popover</a></li>\n        <li><a href=\"#progressbar\">Progressbar</a></li>\n        <li><a href=\"#rating\">Rating</a></li>\n        <li><a href=\"#tabs\">Tabs</a></li>\n        <li><a href=\"#timepicker\">Timepicker</a></li>\n        <li><a href=\"#tooltip\">Tooltip</a></li>\n        <li><a href=\"#typeahead\">Typeahead</a></li>\n    </ul>\n</li>\nNotice the dropdown=\"\" on the li and the extra attributes on the a (dropdown toggle).\n. ",
    "lukasholcik": "So I checked on Linux and it works ... Do you think this is the issue of the awesome-typescript-loader? I have another project (without webpack) and typescript with es6 modules compiles fine using just tsc...\n. So I changed the version to 1.5.3 and it helped for a while.\nThen I tried to created a transitive import reference:\n```\n// index.module.ts\nimport * as transitive from \"./transitive/a\";\n// transitive/a.ts\nexport * from \"./b\";\n// transitive/b.ts\nlet b = 1;\nexport default b;\n```\n... and here we go again ...\nERROR in [default] C:/devel/my/gulp-sandbox2/src/app/transitive/a.ts:1:14 \nCannot find module './b'.\nI'm only having trouble with webpack+typescript, really can't make it work on Windows.\n. @0101adm : thanks for advice, but it doesn't work either...\n. @0101adm So doing import * as b from './b'; export default b; works here. I expected the direct export to work as I've seen it in angular2 sources (https://github.com/angular/angular/blob/master/modules/angular2/angular2.ts).\n@jbrantly: this seems to be fine, but I left this idea of using webpack-stream and currently I'm trying just webpack with your ts-loader and everything is just rainbows and unicorns ... so I hope it will be like this all the time:).\n. @mattxo Yes, I can confirm this. The 0.14.1 update fixed it.\n. ",
    "mattxo": "+1\nThis appears to be a Typescript 1.6 issue... \"npm install typescript@1.5.3\" resolves the issue for me.\n. npm update awesome-typescript-loader has resolved the issue for me for typescript 1.6\n. ",
    "jbrantly": "It sounds to me a lot like webpack isn't configured to resolve certain extensions, either .ts or maybe .js. You should look at your webpack config and make sure resolve.extensions is set to something like ['', '.ts', '.js']. I noticed by default it doesn't include .js.\n. (somewhat shameless plug) @jasteph reported ts-loader worked, might be worth a try (and help narrow down where the problem lies)\n. @Swiip Hi I'm the maintainer of ts-loader. Just wanted to let you know that if you see any issues reported here that look like they might be related to ts-loader please feel free to ping me. I tend to scan the issues here every once in a while but obviously I don't see everything.\n. ",
    "dstroyrofworlds": "Just created a new project with the generator.\nThe minimization works for the \"just\" generated project.\nNot sure what went wrong in my changes.\n. ",
    "mkalpana": "For changing the default url and port you will have to change the gulp\\server.js file.\nThe steps to change the default port is mentioned here:\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/how-it-works.md#browser-sync-configuration\nFor default url, I think you need to remove the server property and add the proxy property in browserSync.init. The details are specified in http://www.browsersync.io/docs/options/#option-proxy\nI tried to change the default port and it works. I haven't tried the proxy option though. Let me know how it goes.\n. I ran into the same issue. The bootstrap-sass-official and fontawesome fonts weren't copied over to /dist/fonts/. Both, bootstrap-sass-official and fontawesome don't declare the font files in the main property of their bower.json so $.mainBowerFiles() doesn't work.\nAs a workaround, I had to modify the gulp/build.js font task to as follows:\ngulp.task('fonts', function () {\n  return gulp.src('./bower_components/**/*.{eot,svg,ttf,woff,woff2}')\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\nIt worked for me. Instead of $.mainBowerFIles() use the path for the bower_components directly and you can get past modifying the bower.json manually.\n. ",
    "cousine": "I had the same issue this morning, although font-awesome loads perfectly, however, for some reason bootstrap glyphicons weren't being copied in dist, and some fonts didnt resolve in serve not sure why!\nHere is my solution:\nFirst I changed the fonts task in build.js to concat bootstrap's fonts directory in bower, next I added a task specifically for serve, to copy the fonts into the .tmp directory:\n``` javascript\n// Only applies for fonts from bower dependencies\n// Custom fonts are handled by the \"other\" task\ngulp.task('fonts', function () {\n  return gulp.src($.mainBowerFiles().concat('bower_components/bootstrap/fonts/'))\n    .pipe($.filter('/.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\ngulp.task('fonts-serve', function () {\n  return gulp.src($.mainBowerFiles().concat('bower_components/bootstrap/fonts/'))\n    .pipe($.filter('/.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/fonts/')));\n});\n```\nFinally, I added the new task to the watch task so it runs with serve:\njavascript\ngulp.task('watch', ['markups', 'inject', 'fonts-serve'], function () {\n  ...\n}\nHope this helps anyone else stuck with this issue.\n. ",
    "anaumov": "Thanks @cousine! Your solutions works for me.\n. ",
    "msgilligan": "I used a modified version of @cousine 's solution. I left the existing 'fonts' task, because I added the fonts to the overrides section of bower.json. And I added the following to build.js:\ngulp.task('fonts-serve', function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('**/*.{eot,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/fonts/')));\n});\nI also added 'fonts-serve' to the dependency list on the watch task.\nIt seems like something very similar to these changes should be added to the generator code. It seems like a bug that fonts are copied to /dist but not served via gulp serve.\n. ",
    "stefanaerts": "Problem with gulp taks fonts.\nWhen you use clean-fonts in the fonts task and you run the fonts task twice,it will fail 1 time.\nThis is the error message:\nsee picture below\nIf you run them separate , so first gulp task clean-fonts and then fonts,it works always.\nIt seems there is some problem with the creation of the 4.4.0 subdirectory data in the pipeline.\nWhen you put a wait before the copy it works for me, you can put a wait of 50 instead of 1500,but with 1500 you see the directories disappear and re-appear in visual studio code.\nI think the bug is that the copy starts for the fonts in the directory and subdirectories while the deletion and creation of the subdirectories is still not done yet.\ngulp.task('fonts', ['clean-fonts'], function () {\nlog('Copying fonts');\nreturn gulp\n  .src(config.root + config.fonts)\n    .pipe($.wait(1500))\n    .pipe(gulp.dest(config.build + 'fonts/'));\n});\n\n. dont forget to install gulp-wait\n. ",
    "bdizha": "gulp.task('fonts', function () {\n  return gulp.src([\n      BOWER_PATH + '//fonts/'\n    ])\n    .pipe(flatten())\n    .pipe(gulp.dest(BUILD_PATH + '/fonts'));\n});\n. ",
    "smakosh": "So here's a temporary solution that seems to work only while building by running gulp build\njs\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('**/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts/**/*'))\n    .pipe(gulp.dest('dist/fonts'));\n});\n& here's another temporary solution that copies the fonts on both serving or building\njs\ngulp.task('fonts', () => {\n  return gulp.src(require('main-bower-files')('**/*.{eot,svg,ttf,woff,woff2}', function (err) {})\n    .concat('app/fonts/**/*'))\n    .pipe($.if(dev, gulp.dest('.tmp/fonts')))\n    .pipe(gulp.dest('dist/fonts'));\n});. ",
    "pluswave": "No idea why .tmp/typings and files are not created. by running tsd install manually, seems all OK now.\n. I am new to bootstrap and angular-ui-bootstrap. From here: \nhttps://github.com/angular-ui/bootstrap/blob/master/CHANGELOG.md\nI now know that #856 should be misunderstood by myself. directives are renamed from 0.14.x , adding uib- prefix but I used the latest doc.\n. sorry, I am not sure why my new commits are automatically added to this PR. so this is a github default correct ? \nfor the new two commits, my idea is (-> means depends)\nbuild -> inject -> partials\n  serve -> inject -> partials\nbefore my commits:\nbuild -> inject + partials\n   serve -> inject\nfor a real project, I changed partials to \"transform html\" to generate some code from js templates (via https://github.com/ernestoalejo/gulp-ngbs-forms ) which can be benefit from my two commits.\nhowever this comes to some CI error (3 errors).\ntwo questions:\n1. how to test for the CI error locally ?\n2. how about the idea behinds the new two commits ?\n. as #856 is a fake issue, close this now.\n. OK maybe something like this for my real project:\nbuid -> inject + partials + transform\ndev -> inject+transform\nI will consider this later. thanks for reply.\n. ",
    "alfaproject": "I don't even.\n. @bradleyflood ping. (:\n. Why?\n. Editing a SCSS file now will trigger a full page reload, while before it would only update the stylesheet without a full page reload. To be honest, I prefer the old way.\n. For now, I changed the styles reload task to this:\njs\n    gulp.task('styles-reload', ['styles'], function() {\n        browserSync.reload('*.css');\n    });\nIt's hacky as fuck, but gets the job done until I can think of a cleaner solution.\n. browserSync.reload({ stream: true }) is deprecated by the way.\nYou should use browserSync.stream(): http://www.browsersync.io/docs/api/#api-stream\n. @GitAngel I realize that, but the reload with stream option is not even documented anymore, that's why I mentioned it. I guess new people would be like, which kind of magic is this? (:\nlgtm\n. That's not true. Both bower and npm use this package behind the scenes: https://github.com/npm/node-semver\n. That's not the purpose of this generator, but you can create a task to copy the necessary files into a different folder or change the output of this generator a bit to output directly there.\n. I guess you will have to find what works for you. In my case, I use the dist build: gulp serve:dist.\nI copied the gulp serve:dist task into a new one and changed it to copy to www before running emulator.\nAnyway, whatever the solution you find, it's really out of scope of this project. Maybe there's already a yeoman generator for Cordova apps?\n. Oh fair enough, sounds reasonable. I would use such option. ^_^\nMaybe I'll even make PR if I find the time.\n. ",
    "bradleyflood": "Nope no Chrome window opens. Am running latest Chrome 40 (typo sorry that was supposed to say 46.0)\n. Problem solved -> According to the gulp-protractor docs protractor is to be installed via npm along with gulp-protractor (instead of protractor as a dependency within gulp-protractor).\nSo I uninstalled gulp-protractor, npm install --save-dev protractor and then reinstalled gulp-protractor and the gulp protractor task works correctly now with no errors.\nCould be a version requirement issue in gulp-protractor? Either way I think the generator-gulp-angular repo should have protractor as a dev dependency in the package.json -- what do you think?\n. Going to re-issue a PR with an updated version number.\n. Sorry for the delay. Been super busy building an app based on this repo.\nI'm going to close this PR and start again a new one.\nCheers.\n. Hey have you read #849 ? Did that help?\n. I just spotted this in the docs: https://github.com/Swiip/generator-gulp-angular/blob/master/docs/recipes/add-fontawesome.md\n. ",
    "theseanstewart": "I had the same issue, but @bradleyflood's solution didn't work for me. I ended up running the following commands and it started working again. \nbrew update\nbrew cask install java\nSource: https://github.com/angular/protractor/issues/2638#issuecomment-151986523\n. ",
    "thfeng": "I update protractor and gulp-protractor to the latest version, but it still cannot work. I follow @theseanstewart 's solution to update java from 1.7 to 1.8. protractor is working in my Mac now.. ",
    "tiagomelilo": "@AlexVKO, I have this same problem in my project.\nAny help?\nThanks!\n. ",
    "saqueib": "I found it, sorry for dumb question, but some generator for test, controller, module will be fantastic \n\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/docs/user-guide.md#manual-injection\n. \n",
    "adstep": "OS - Windows 10 x64\nNPM - 2.14.3\nTSD installed global - Yes\nI've replicated the issue on two of my machines that have the same settings as above.\n. It has to do with scripts.js:\n$.util.log(stats.toString({\n      colors: $.util.colors.supportsColor,\n      chunks: false,\n      hash: false,\n      version: false\n    }));\nThis is the location where the errors are logged.\n. I upgraded node and npm and am no longer getting any errors.\n. ",
    "tghamm": "I can also replicate with the same build environment as @laughin1. \n. ",
    "IvanCoronado": "Sorry, you are right. I was checking \"Features included in the gulpfile\" in https://github.com/Swiip/generator-gulp-angular/blob/master/docs/usage.md\n. ",
    "dzonatan": "Dunno where was the problem but I don't get it anymore... I think It was related with development environment. Anyway, thank you for your time @zckrs\n. ",
    "konradhalas": "TBH, no. I made small research but I didn't find anything :(\n. ",
    "zychj1": "@rwwagner90 could You show Your solution?\n. ",
    "vivascau": "Thanks a lot @rwwagner90 ! Worked like a charm for me.\nFor future reference, I had to do a couple of changes in my specific case:\n1. in test.js no need for\nrequire('angular');\nrequire('angular-mocks');\n1. pass coverageReporter as an object instead of array of objects:\ncoverageReporter: {type: 'html', dir: 'coverage/'}\nWorth mentioning to people who are trying this solution that the gulp/unit-tests task definition overrides the reporters and preprocessors that are being set in karma configuration files so some alterations might be needed there too..\n. Further to this... \nAdd \nwebpackMiddleware: {\n      stats: {\n        chunks: false,\n      }\n    }\nIn karma.conf sibling of webpack in order to not log to command line all the assets, combine that with karma-spec as a reporter and life will be beautiful. \n. ",
    "handijk": "The above works, the only thing i had to add in the files list was path.join(conf.paths.tmp, '/partials/templateCacheHtml.js').\nIt still show spec files in my coverage report though, is there any way to filter these out?\n. ",
    "tomwetjens": "Also got it working, thanks! The generated coverage report (html) shows a 100% branch coverage (10 of 10) on a file in my project with \"4 branches ignored\". But when I import the lcov.info into SonarQube, it says I still have \"4 uncovered conditions\".\nI've inspected the lcov.info file and it has 10/10 branches covered, 14/14 lines covered and 10/10 functions covered, but still SonarQube is saying that I have 4 uncovered branches for this file.\nAlso the line numbers of the functions in lcov.info do not match with the ES6 original source file. Maybe this is also a cause?\nAnyone have an idea?\n. ",
    "skeep": "Let me take a shot at the updated recipe. This recipe will work for npm v3+ and bable 6+\nFirst we need to install all necessary dependencies. Since automatic peer dependency installation do not happen for npm 3+ we have install all packages.\nStep 1\nbash\nnpm install karma-coverage karma-webpack isparta-loader karma-spec-reporter phantomjs-polyfill karma-babel-preprocessor karma-chrome-launcher babel-preset-es2015 --save-dev\nStep 2\nChange karma.conf.js\n``` javascript\n'use strict';\nvar pkg = require('package.json')\nvar path = require('path');\nvar conf = require('./gulp/conf');\nvar _ = require('lodash');\nvar wiredep = require('wiredep');\nvar babelMoreOptions = {presets: 'es2015'};\nvar pathSrcHtml = [\n  path.join(conf.paths.tmp, '/serve//*.html'),\n  path.join(conf.paths.src, '//*.html')\n];\nfunction listFiles() {\n  var wiredepOptions = _.extend({}, conf.wiredep, {\n    dependencies: true,\n    devDependencies: true\n  });\nvar patterns = wiredep(wiredepOptions).js\n    .concat([\n      './node_modules/phantomjs-polyfill/bind-polyfill.js',\n      path.join(conf.paths.src, '/test.js'),\n      path.join(conf.paths.tmp, '/partials/templateCacheHtml.js')\n    ])\n    .concat(pathSrcHtml);\nvar files = patterns.map(function (pattern) {\n    return {\n      pattern: pattern\n    };\n  });\n  files.push({\n    pattern: path.join(conf.paths.src, '/assets/*/'),\n    included: false,\n    served: true,\n    watched: false\n  });\n  return files;\n}\nmodule.exports = function (config) {\nvar configuration = {\n    files: listFiles(),\nsingleRun: true,\n\nautoWatch: false,\n\nngHtml2JsPreprocessor: {\n  stripPrefix: 'src/',\n  moduleName: pkg.name\n},\n\nlogLevel: config.LOG_DEBUG,\n\nbabelPreprocessor: {\n  options: {\n    sourceMap: 'inline'\n  },\n  filename: function (file) {\n    return file.originalPath.replace(/\\.js$/, '.es5.js');\n  },\n  sourceFileName: function (file) {\n    return file.originalPath;\n  }\n},\n\nframeworks: ['jasmine'],\n\nbrowsers: ['PhantomJS'],\n\nplugins: [\n  'karma-babel-preprocessor',\n  'karma-chrome-launcher',\n  'karma-phantomjs-launcher',\n  'karma-coverage',\n  'karma-jasmine',\n  'karma-ng-html2js-preprocessor',\n  'karma-webpack',\n  'karma-spec-reporter'\n],\n\n//coverageReporter: {type: 'html', dir: 'coverage/'},\ncoverageReporter: {\n  // configure the reporter to use isparta for JavaScript coverage\n  // Only on { \"karma-coverage\": \"douglasduteil/karma-coverage#next\" }\n  instrumenters: {isparta: require('isparta')},\n  instrumenter: {\n    '**/*.js': 'isparta'\n  },\n  instrumenterOptions: {\n    isparta: {babel: babelMoreOptions}\n  }\n},\n\nreporters: ['progress', 'coverage'],\n\npreprocessors: {\n  'src/**/*.html': ['ng-html2js'],\n  'src/**/*.spec.js': ['babel'],\n  'src/test.js': ['webpack']\n},\n\nwebpack: {\n  // *optional* babel options: isparta will use it as well as babel-loader\n  babel: {\n    presets: ['es2015']\n  },\n  // *optional* isparta options: istanbul behind isparta will use it\n  isparta: {\n    embedSource: true,\n    noAutoWrap: true,\n    // these babel options will be passed only to isparta and not to babel-loader\n    babel: {\n      presets: ['es2015']\n    }\n  },\n  module: {\n    preLoaders: [\n      // transpile all files except testing sources with babel as usual\n      {\n        test: /\\.js$/,\n        exclude: [\n          'src/app/**/*.spec.js',\n          path.resolve('node_modules/')\n        ],\n        loader: 'isparta'\n      }\n    ]\n  },\n  webpackMiddleware: {\n    stats: {\n      chunks: false\n    }\n  }\n},\n\nproxies: {\n  '/assets/': path.join('/base/', conf.paths.src, '/assets/')\n}\n\n};\n// This block is needed to execute Chrome on Travis\n  // If you ever plan to use Chrome and Travis, you can keep it\n  // If not, you can safely remove it\n  // https://github.com/karma-runner/karma/issues/1144#issuecomment-53633076\n  if (configuration.browsers[0] === 'Chrome' && process.env.TRAVIS) {\n    configuration.customLaunchers = {\n      'chrome-travis-ci': {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    };\n    configuration.browsers = ['chrome-travis-ci'];\n  }\nconfig.set(configuration);\n};\n```\nStep 3\nChange gulp/unit-tests.js\n``` javascript\n'use strict';\nvar path = require('path');\nvar gulp = require('gulp');\nvar conf = require('./conf');\nvar karma = require('karma');\nfunction runTests(singleRun, done) {\nvar localConfig = {\n    configFile: path.join(__dirname, '/../karma.conf.js'),\n    singleRun: singleRun,\n    autoWatch: !singleRun\n  };\nvar server = new karma.Server(localConfig, function (failCount) {\n    done(failCount ? new Error(\"Failed \" + failCount + \" tests.\") : null);\n  });\n  server.start();\n}\ngulp.task('test', ['scripts:test', 'markups'], function (done) {\n  runTests(true, done);\n});\ngulp.task('test:auto', ['scripts:test-watch'], function (done) {\n  runTests(false, done);\n});\n```\nStep 4\nAdd src/test.js\n``` javascript\nvar moduleContext = require.context('./app', true, /.module.js$/);\nmoduleContext.keys().forEach(moduleContext);\nvar testsContext = require.context('./app', true, /.spec.js$/);\ntestsContext.keys().forEach(testsContext);\n```\nStep 5\nRun gulp test\n. @drGrove about your comment on spec files getting included, I am aware and till now I have not figured out a way to fix it. Feel free to advice on it if you find a way to fix it, I will update the guide.\n. infact @handijk also mentioned the same.\n. @drGrove hey thx for catching that. fixing it.\nEDIT : fixed\n. BTW I have posted a blog as well, FYI.\nhttps://medium.com/@sumankpaul/test-coverage-report-of-es2015-code-in-gulp-angular-19eeca6efca4#.zb1vhtlap\n. awesome, let me update it accordingly when I get time.\n. @rgjamkhedkar you should try @AlexanderTserkovniy suggestion. One suggestion my coworker gave is to move all tests to a separate test folder, which can work as a interim solution but would defeat the whole module concept.\n. @bcg-amitag for now you can move the tests to separate folder. I didn't really found time to fix it right in the config.\n. ",
    "redskyburning": "@skeep, I ran through the instruction from your blog post (very nice, thx btw) and everything works great. I did run into the markups vs partials issue the @drGrove mentioned above since i'm not using an html preprocessor, so I would recommend adding that to the final recipe. Otherwise, great work, this will be a great addition once finished.\n. One question. After making these changes my output from gulp test got very verbose. Resetting the karma log level to 'WARN' helped at lot, but I'm still getting more than I'd like. Any suggestions for how to clean up this:\n[11:24:17] Starting 'test'...\n  Hash: 8344a6c0a9b3c44a5636\n  Version: webpack 1.12.11\n  Time: 4ms\n  webpack: bundle is now VALID.\n    webpack: bundle is now INVALID.\n    Hash: 64fe08bee8ef784583c3\n  Version: webpack 1.12.11\n  Time: 3584ms\n  Asset     Size  Chunks             Chunk Names\n  src/test.js  1.22 MB       0  [emitted]  src/test.js\n  chunk    {0} src/test.js (src/test.js) 1.21 MB [rendered]\n    [0] ./src/test.js 1.52 kB {0} [built]\n    [1] ./src/app .module.js$ 182 bytes {0} [built]\n    [2] ./src/app/index.module.js 13 kB {0} [optional] [built]\n    [3] ./src/app/index.config.js 2.19 kB {0} [built]\n    [4] ./src/app/index.route.js 6.12 kB {0} [built]\n    [5] ./src/app/index.run.js 3.09 kB {0} [built]\n. ",
    "rgjamkhedkar": "@skeep very nice solution. Has anybody found a way to exclude .spec files?\n. I will try that solution. Otherwise yeah, can move tests to separate folder too. But I like having tests next to source files. \n. ",
    "bcg-amitag": "Hi All, I also facing the problem to generate file wise coverage report. I used @skeep solution and it works fine but I noticed that the *.spec.js files are being included in coverage on isparta, is there a way to fix this? Please suggest any fix for this.\n. @skeep, yes i also tried with the same but facing issues in test.js file since its expect to load unit test specs also. Can you please share me the updated karma.conf.js in case i moves all the test cases under test folder on root. Thanks.\n. ",
    "damienstanton": ":+1: that was fast!\n. @vladimirich It looks like you might need to pull the latest version. The peerdep has been removed from package.json as far as I can tell.\nYou can also always install from a local clone with npm install -g path/to/generator-gulp-angular/\n. ",
    "nickskalkin": "Can you tell me, how can I install this package from master using npm? npm install -g generator-gulp-angular still installs package with yo as peerDependency\n. @damienstanton ty for feedback! \n. ",
    "Bram77": "I wasn't expecting that, since it's an integral part of the generator. But thank you for clarifying!\n. ",
    "ramirescm": "I have the same problem!\n. ",
    "igisav": "Similar issue is #943 \nTwo steps to do:\n1) add a line to your main bower.json as follows:\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        ...\n        \"assets/javascripts/bootstrap.js\",\n       ...\n      ]\n    }\n  }\n2) clear exports.wiredep.exclude in gulp/conf.js in order to enable jQuery\n. Similar issue is #943 \nTwo steps to do:\n1) add a line to your main bower.json as follows:\n\"overrides\": {\n    \"bootstrap-sass\": {\n      \"main\": [\n        ...\n        \"assets/javascripts/bootstrap.js\",\n       ...\n      ]\n    }\n  }\n2) clear exports.wiredep.exclude in gulp/conf.js in order to enable jQuery\n. ",
    "Martin-Andersen": "I am having the same problem. the bootstrap bower.json looks fine\n\"homepage\": \"http://getbootstrap.com\",\n  \"license\": \"MIT\",\n  \"moduleType\": \"globals\",\n  \"main\": [\n    \"less/bootstrap.less\",\n    \"dist/js/bootstrap.js\"\n  ],\ncleared exports.wiredep.exclude in gulp/conf.js in order to enable jQuery\nSo why aint it included?\nAny way, igisav has a working solution\n. ",
    "Lovatt": "So you can easily see your current linter / build issues - and not have to parse by eye the output from your previous 6 saves. \n. ",
    "galenmarchetti": "I ran into the same thing, glad to have found this issue.\n. ",
    "bx2": "@Swiip should I update the docs or are we solving the tsd issue as @4kochi described?\n. ",
    "rummik": "@Swiip If that's the decision, should the documentation be updated?  This caught me off guard as well.\nAre the locations it needs to be updated shown in a search for npm install -g?\n. ",
    "Freezystem": "Something strange is that tests are OK in my local environment.. Maybe because I'm on Node 5.0.0, npm 3.3.10 and bower 1.6.5. I'll try to investigate tomorrow.\n. Actually, according to Travis CI logs, it may be related to Babel ES2015 Preset. I'm surprised as I'm not able to reproduce the bug with my local tests, so I'm investigating further.\n. ",
    "agdolla": "I tried to solve it by\n- upgrading to babel6\n- changing \"parser\": \"babel-eslint\" in .eslintrc\n- in scripts.js:loaders: [{ test: /.js$/, exclude: /node_modules/, loaders: ['ng-annotate', 'babel?presets[]=es2015&presets[]=stage-0']}]\nwhat else must be changed?\n. ",
    "jasteph": "I'm also having this issue. As a temporary work-around I've switched from using 'awesome-typescript-loader' to 'ts-loader'.\n. I am encountering the same issue. Installed using all default options except choosing Typescript :)\nOS: Windows 10 x64\nNode: v5.1.0\nNpm: v3.5.0\nHere is a copy of my yo-rc:\n{\n  \"generator-gulp-angular\": {\n    \"version\": \"1.0.2\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.2\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        },\n        {\n          \"key\": \"messages\",\n          \"module\": \"ngMessages\"\n        },\n        {\n          \"key\": \"aria\",\n          \"module\": \"ngAria\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"node-sass\",\n        \"extension\": \"scss\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"typescript\",\n        \"extension\": \"ts\",\n        \"srcExtension\": \"ts\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"noHtmlPrepro\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\nI believe it is related to using \"~0.14.0\" of awesome-typescript-loader. (see https://github.com/s-panferov/awesome-typescript-loader/issues/68)\n. As a temporary work-around you can add a dependency on ts-loader:\n1. npm install --save-dev ts-loader\n2. On line 19 of scripts.js replace 'awesome-typescript-loader' with 'ts-loader'\n. ",
    "SergiySev": "add import statement in the index.module.ts, for example:\nimport '../app/common/file.name.without.ts';\n. ",
    "CarlAmbroselli": "What is your configuration? \nJavaScript/TypeScript/ES6?\nAssuming TypeScript or ES6 you have to put assing it in the constructor:\n```\nexport class Test {\n$scope: ng.IScope;\nconstructor($scope: ng.IScope) {\n    this.$scope = $scope;\n  }\n}\n```\n. Scope needs to be injected into the controller, not into the module!\nangular.module('tutorialApp', [])\n .controller('ArticlesCtrl', function($scope){ \n$scope.article = \"Test\";\n})\n\nAm 09.11.2015 um 22:10 schrieb eigotec notifications@github.com:\nThanks for your reply\nUsing JS.\nSo i thought it would have been something as simple as\nangular.module([\u2018$scope\u2019,\u2019$http\u2019],function(scope,http){\u2026}\nbut i guess its more complicated than that.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "eigotec": "Thanks for your reply\nUsing JS.\nSo i thought it would have been something as simple as \nangular.module([\u2018$scope\u2019,\u2019$http\u2019],function(scope,http){\u2026}\nbut i guess its more complicated than that.\nThanks.\n. ",
    "noxecane": "I think problem was with one of my dependencies offering it's main file as a minified version, got uglify all confused. Immediately I changed it to use the normal file, the build process went as usual.\n. ",
    "claytondus": "+1 Seeing this issue on OSX 10.11.5 Chrome 50.0.2661.94 (64-bit) with generator 1.1.0.  Cannot replicate in Firefox, Safari, or Chrome on Windows 10.  Looks like some kind of race condition depending on the browser state.\n. ",
    "pi-jzl": "I have read through https://github.com/angular/material/blob/master/CHANGELOG.md\nThere is no file structure change.\n. ",
    "designnotdrum": "+1, please merge. v1.0.5 now.\n. holla. thanks @Swiip \n. solved by #899 \n. ",
    "RainingNight": "Add a new sass file, don't add to tmp/serve/app/index.css yet.\n. ",
    "ytkj": "The same problem in my environment.\n893 may be a temporary solution, but not a fundamental one.\nI think this may be a problem caused by webpack or awesome-typescript-loader...\n. s-panferov/awesome-typescript-loader#72 works for me. Try it.\n. ",
    "craigsh": "Changing package.json to make \"awesome-typescript-loader\": \"~0.15.6\" fixes the problem.\nThen I had to add an excludes config to the tsconfig.json file:\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"commonjs\"\n  },\n  \"exclude\": [\n      \"node_modules\",\n      \"bower_components\"\n    ]\n}\n. Yes, on Windows. Thanks for the pointers - I'll look at those - likely they will fix my issue.\n. ",
    "AEPKILL": "@craigsh is right\uff0cthanks very much\u3002\n. ",
    "karolrynio": "I have the same bug. Bug is probably in invalid configuration or paths, because generated url to fonts is:\nhttp://localhost:3000/bower_components/bower_components/bootstrap/fonts/glyphicons-halflings-regular.woff2\nbut should be:\nhttp://localhost:3000/bower_components/bootstrap/fonts/glyphicons-halflings-regular.woff2\nbower_components part is twice in path.\n. ",
    "grimurd": "I re-generated my project to start using scss instead of vanilla css and after that it worked just fine(after renaming my files to .scss ofcourse).\n. ",
    "sarod": "That would probably be better indeed.\n. ",
    "iki": "@Swiip sure, keep it, the comment above only disables the 2 rules for given line, see http://eslint.org/docs/user-guide/configuring.html#configuring-rules\n. ",
    "tscislo": "Duplicate #660 \n. +1\n. @vlio20 try launching default task. It will clean dist and then it will hit build.\n. What was the reason for this change?\n. ",
    "bagusflyer": "How to use typescript version? Any document about this? Thanks.\n. I knew already. Thanks. \n. Actually I have my \"/\" setup. I just ignored it in my source code. Sorry.\nHere is my full source code:\n```\n (function() {\n  'use strict';\nangular\n    .module('video')\n    .config(routerConfig);\n/* @ngInject /\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainCtrl'\n      })\n      .state('video1', {\n        url: '/video1',\n        templateUrl : '/app/pages/video1.html',\n        controller: 'Video1Ctrl'\n      })\n      .state('video2', {\n        url: '/video2',\n        templateUrl : '/app/pages/video1.html',\n        controller : 'Video2Ctrl'\n      });\n$urlRouterProvider.otherwise('/');\n\n}\n})();\n```\nThe http://mydomain.com/ works fine. But http://mydomain.com/video1 doesn't work. It looks like the map file doesn't work. But I don't know how to solve it. Normally how do you deploy an application generated by this generator to a new machine with node installed? Thanks.\n. I finally link my third party libraries from CDN. But I got a lot of errors something like \"Parse is not defined\" when I use gulp build although it's working fine.\n. Then if I install ckeditor by bower:\n\nbower install ckeditor --save\n\nThere will be two ckeditor in bower_components. One is in bower_components/ng-ckeditor/libs/ckeditor folder. The other is in bower_compoents/ckeditor folder. Anyway it works when I run:\n\ngulp serve\n\nBut it won't work if I run:\n\ngulp serve:dist\n\nThe error message in browser is:\n\nUncaught SyntaxError: Unexpected token <\nUncaught TypeError: Cannot set property 'dir' of undefined\n\nBut there is no error message in console when I build the dist.\n. I then remove ckeditor and add it in index.html\n\n\n\nIs it because of the loading sequence? How to determine the sequence if I install them from bower?\n. ",
    "Webbrother": "Sorry, wrong file encoding settings.\n. ",
    "alinnert": "Okay, the angular.bootstrap() part is really causing this problem. When I remove it and add ng-app in the HTML instead it works fine.\nI did it that way because the Angular application should be placed somewhere inside a regular web site. And ng-app doesn't allow multiple Angular applications in one document.\nDoes anyone know how I can solve this problem? How can I get the template cache working well with angular.bootstrap()?\nThanks for any help.\n. @busches Yes and no. If there's a solution to this problem it could be integrated in the generator as a question to alter the generated template or as a note in the documentation.\nHere's my question for reference.\nShould this issue be closed and reopened (or creating a new issue?) when I find out something new?\n. Alright, I've got an answer and tested it by altering the generated app-*.js script. When I manually bootstrap an Angular application the bootstrapping needs to be done after the template cache has been generated/defined. The cache works after I moved the line with angular.bootstrap() to the end of the file.\nIs there a way to tell the generator to place code after the generated template cache? Maybe by the file name of a script?\n. ",
    "andrekampert": "In case this helps someone, we made the following changes to our code:\nFirst, put all items in the template cache in a separate module.\njavascript\n    .pipe($.angularTemplatecache('templateCacheHtml.js', {\n      module: 'appTemplateCache',\n      standalone: true,\n      root: 'app'\n    }))\nCreate a module dependency in your own app to make sure the templateCache is updated before the bootstrap.\njavascript\n    angular.module('app', [ 'appTemplateCache'])\nNow, your final distribution will work as it will always load your templates first.\nWhen developing, you can simply register an empty module that will be replaced when the partials are injected.\n``` html\n     build:js({.tmp/serve,.tmp/partials}) scripts/app.js \n inject:partials \n angular templates will be automatically converted in js and inserted here \nangular.module(\"appTemplateCache\", [])\n endinject \n<!-- inject:js -->\n<!-- js files will be automatically insert here -->\n<!-- endinject -->\n<!-- endbuild -->\n\n```\n. It is possible to inject partials with bootstrap last, as it is possible to inject partials with templateCache first.\nIndeed, I am making an Angular module that populates the template cache in the run block\nUsing the configuration above, Gulp generates a file .tmp/partials/templateCacheHtml.js\njavascript\nangular.module(\"app.templateCache\", [])\n  .run([\"$templateCache\", function($templateCache) {\n    $templateCache.put(\"app/component-1.html\",\"...\");\n    $templateCache.put(\"app/component-2.html\",\"...\");\n    ...\n}\nNow, when declaring a dependency on this module in the angular app, it will populate the templateCache with your application templates before the bootstrap of your app is injected.\n. ",
    "mt3ck": "EDIT:: After further consideration was able to solve this by placing an additional usemin block that referenced the appInit script containing the angular boostrap code and then placed this below the main scripts/scripts.js block.\n<!-- build:js({.tmp,app}) scripts/appInit.js -->\n        <script src=\"scripts/appInit.js\"></script>\n        <!-- endbuild -->\nThis way the in the generated index.html i now have \n<script src=\"scripts/vendor.482272b6.js\"></script><script src=\"scripts/scripts.d94f3f3b.js\"></script><script src=\"scripts/appInit.d5fd9dc1.js\"></script>\nwhere scripts/scripts.d94f3f3b.js contains the injected templateCache at the end and the angular bootstrap call in the next scripts/appInit.d5fd9dc1.js\n\nHaving similar issue and able to resolve it by modifying the generated scripts-.js file and placing the bootstrap call after the templateCache code that is injected to the end of the file.\nIf there any way to ensure bootstrap gets injected last?\nTrying to follow @andrekampert but dont understand the first part:\n \"First, put all items in the template cache in a separate module.\"\nAre you saying to make a module with all the same content that is in the the .tmp/templateCache.js file that is generated?. Thanks for reply @andrekampert !\nI am using grunt rather than gulp, but think I understand what you've got going on now.\n. ",
    "edmanolache": "I'm having the same issue but It seems like I can't install any of the yo generators. \n. ",
    "krzysieki": "Same error. 1.0.0 worked, after update to 1.0.1 yeoman does not see generator\n. ",
    "elboman": "Argh! It drove me insane the whole day. I was using NVM and I thought it was related to that, but then I tried another generator and there was no problem. Eventually I installed v1.0.0 and it's working fine.\n@edmanolache are you using NVM on your computer? Yeoman has problems recognizing generators when using NVM due to the NODE_PATH being empty.\n. ",
    "simonghales": "+1\n. ",
    "semeano": "It is fixed! Thanks a lot! ;)\n. ",
    "TomaszScisloGS": "OK so there are two issues\n1. References stopped working out of the box. I do not suppose that TypeScript 1.6.2 which is now in the project deprecates them. According to TS documentation they are fully backward compatible with this. For sure this worked for generator prior to version 1.0.0.\n2. That's true that after adding ES6 import typings work in a very strange manner. For example they work fine when I import modules into index.module.ts. \nThis in index.module.ts works perfectly:\nimport { RouterConfig as GsRouterConfig } from './modules/gs/routing';\n./modules/gs/routing.ts has standard dependencies:\nexport function RouterConfig($stateProvider:ng.ui.IStateProvider, $urlRouterProvider:ng.ui.IUrlRouterProvider) {\nBut on the other hand when in index.module.ts I import some other module\nlike this:\nimport trades from './modules/trades/trades';\nAnd in ./modules/trades/trades.ts I import exactly the same /modules/gs/routing like this \nimport { RouterConfig as GsRouterConfig } from './routing';\nIt gives me the following error when I launch the application:\nUncaught Error: [$injector:modulerr] Failed to instantiate module gsWebDetailsPanel due to:\nError: [$injector:modulerr] Failed to instantiate module trades due to:\nError: [$injector:unpr] Unknown provider: $stateProvider\nTS compiles fine though... any ideas?\n. I know it's Angular dep injection error, but please read all the above. There is one case in which dependency works and one in which it doesn't. I described in details above.\nThanks!\n. There was a typo above, I'm using:\nimport { RouterConfig as GsRouterConfig } from './routing';\n. Unfortunately there isn't. It's so problematic because TS compilation ends with success and the application fails to start with the above error in console.\n. generator-gulp-angular 1.0.0\n. @Swiip \nI also encountered this error which @vlio20 mentioned.\nScenario is like this:\n$ gulp\n$ gulp test\nAnd you have test suites compiled into source code. Sometimes above is the order which you need. For example using your CI tools. Right now only the following sequence works:\n$gulp\n$gulp test\n$gulp\nIdeas?\n. @Swiip you're right I had a misconception of gulp tasks not being run in parallel, so my last comment regarding tests and build is not valid any more. However the first one - the ability to run in parallel gulp test:auto and gulp serve is still valid. I think that this is a very important functionality to have.\n. This occurred due to misuse of require function.\n. ",
    "mnzaki": "For future reference, remember to leave _*.scss files in the watch expression though, or your styles won't rebuild when an _*.scss file changes.\nalso shouldn't this be closed?\n. ",
    "vlio20": "@Swiip I am encountering this: test and then build results that my test code is present in my dist scripts. Shouldn't the clean task be a dependency of the build (the very first thing to run)? \n. @tscislo, thanks it's great that there is a way to build cuttectly with the default task but the build task not works as expected\n. @benjamincharity, did you manage to solve this?\n. ",
    "mutumarieru": "well it's not the only problem : mixed spaces and tabs are a little problem that can't be overcome everytime when there are different environnements.\nAnyway eslint shouts too many strict errors : console.log use, and the angular on top of it really breaks many things (possibility to use global variables etc)\nthanks for the answer \n. ",
    "gameboyzone": "@Swiip - Thanks, your suggestion helped.\n. ",
    "jwickowski": "ERROR in Entry module not found: Error: Cannot resolve module 'awesome-typescrip\nt-loader' in ''\n. i have tested other options.\nI have problem with the configuration which using TypeScript only\n. ",
    "SalmonRiver": "If you use ts-loader there are some additional install steps found at https://github.com/TypeStrong/ts-loader\nThey worked for me.  \n. ",
    "UzEE": "I'm also getting this issue when trying to setup a previously generated project on a new Windows 10 machine (while running npm install). It looks like the issue is definitely tied to npm v3.x.x since my old machine (running npm v2.x.x) is working fine.\n. ",
    "gelevanog": "~~same here with new version of node and npm~~\nSorry... never mind ... the problem is not with the generating of app\n. ",
    "dfromero": "Hi, here is the info\njson\n{\n  \"generator-loopback\": {},\n  \"generator-gulp-angular\": {\n    \"version\": \"0.12.1\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.0\",\n      \"angularModules\": [\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"none\",\n        \"module\": null\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"less\",\n        \"extension\": \"less\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"babel\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"es6\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"none\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\nthough I must say I moved the src, e2e, .tmp, build folder to client/  by editting gulp/config.js\njs\nexports.paths = {\n  src: 'client/src',\n  dist: 'client/dist',\n  tmp: 'client/.tmp',\n  e2e: 'client/e2e'\n};\n. hi @Swiip , after updating, and fixing some updates, i keep getting Unknown provider: toastr\n. Thanks, actually the tostr problem was the config now using toastrConfig, but I'm still not being able to generate the build properly as well as bootstrap.css is not loading anymore, but I just tested a clean generated app, and it works, you're right about the moving the folders, do you have any hint on how should I update the reference in the index.html\nupdate:\n@Swiip thanks for poiting out the link, i actually just had to update the refs on the index.html to my new path, now it generates the dist properly, though bootstrap isn't coming through yet\n. @skjolber  you have to rename as well on the index.html, i think i related to an issue i had #932 \n. ",
    "schacki": "This sounds great. Do you already have an idea on the timing?\n. ",
    "skjolber": "mkdir test, cd test, yo gulp-angular with all default options. rename src folder to abc, modify gulp/conf.js file line 15 correspondingly. gulp serve works. gulp serve:dist fails with message '\nError: [$injector:nomod] Module 'test' is not available!'\n. ",
    "wjehring": "Hi,\nI've run into this issue before and while this isn't an ideal solution, it's a bit easier than what you're doing:\nBower files can have an optional 'overrides' field where you can redefine values set in other bower files. So to include the fonts and css for wiredep, I override the 'main' of the bower file.\nSo you add the following field to your bower.json:\n\"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"less/bootstrap.less\",\n        \"dist/js/bootstrap.js\",\n        \"fonts/glyphicons-halflings-regular.eot\",\n        \"fonts/glyphicons-halflings-regular.svg\",\n        \"fonts/glyphicons-halflings-regular.ttf\",\n        \"fonts/glyphicons-halflings-regular.woff\",\n        \"fonts/glyphicons-halflings-regular.woff2\"\n      ]\n    }\n  }\nThis should fix it! Let me know if not.\n. @AhmetCanSolak As in if you have other elements installed as bower dependencies? Your current configuration shouldn't create any issues with that (I wouldn't think). If you mean you're planning on installing other bower dependencies, most should work fine out of the box. \nThe issue with bootstrap is that it does't declare its fonts in the 'main' field of its bower file. So whether or not you have to do the same thing for other libraries depends on what the libraries' bower files look like. I've had to do similar things for other libraries like fontawesome, just add another override to the \"overrides\" object in your bower file with an array of the files to include and it should work just fine. I'm not sure whether that answers your question or not, but I hope it helps!\n. ",
    "rnugraha": "It looks like conf.js will still exclude bootstrap.js and bootstrap.css although bootstrap is opted during the generation\nMine is working after emptying exclude field in conf.js and having overrides in bower.json:\nconf.js\nexclude: [],\nbower.json\n\"overrides\": {\n    \"bootstrap\": {\n      \"main\": [\n        \"dist/js/bootstrap.js\",\n        \"dist/css/bootstrap.css\",\n        \"less/bootstrap.less\"]\n    }\n  }\n. ",
    "mateuo": "I have find a non elegant solution. \nThat is:\nCreate a file django.js in the gulp directori\nthe content of this file is:\n``` javascript\nvar gulp = require('gulp');\nvar path = require('path');\nvar conf = require('./conf');\nvar replace = require('gulp-replace');\ngulp.task('django', function(){\n  gulp.src(['dist/index.html'])\n    .pipe(replace('src=\"scripts', 'src=\"{% static \"scripts'))\n    .pipe(replace('.js\"','.js\" %}\"'))\n    .pipe(replace('href=\"styles','href=\"{% static \"styles'))\n    .pipe(replace('.css\"','.css\" %}\"'))\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/')));\n});\n```\nand execute it with \"gulp django\" this changes the references of static files.\nI think this will work\n. ",
    "lahdo": "Below more clean solution:\n```\ngulp.task('inject', function () {\n    var options = {\n        read: false,\n        transform: function (filepath) {\n            return '';\n        }\n     };\nvar js = config.js;\n\nreturn gulp\n    .src(config.index)\n    .pipe($.inject(js, options))\n    .pipe(gulp.dest(config.django_templates));\n\n});\n```\n. ",
    "jordic": "What I found: Partials are not generated between a closure, and on initilialitzation there is a race, they try to register on module, but this is still not created, for solving this, I edited, gulp/build,js task partials:\n.pipe($.angularTemplatecache('templateCacheHtml.js', {\n  module: 'mnt',\n  root: 'app',\n  templateHeader: '(function() { angular.module(\"<%= module %>\"<%= standalone %>).run([\"$templateCache\", function($templateCache) {',\n templateFooter: '}]);})();'\n}))\nAdded: (function(){ (templatecode) ;})()\nAlso I found that all generated code within closures, must end with ; If not, build, failes to execute.\n. It's not the partials failing... the partials works... but the generated app.js... on the templatecache, has no proper closure, and when the browser parses the file, as its trying to inject templatecache, in a uninitalized module, it fails.. Adding, the closure to the templateHeader, and templateFooter, makes it work.\n. ",
    "samskrithib": "I have the same problem. May I know how did you solve this problem please.\nWhere should I add \"(function(){ (templatecode) ;})()\" . ",
    "dingguijin": "Meet same problem.\n. ",
    "raslasarslas": "I had the same problem, to solve this, make sure to add ';' at the end of  each (function(){ (templatecode) ;})();. ",
    "seonetartem": "Before:\n\nAfter:\n\n. \n. fixed, i used index.html from es5 project\n. https://github.com/typings/typings\nUpdating From 0.x to 1.0?\nrm -rf typings/\nThe directory contains \"main\", by default\nUpdate tsconfig.json to match (the bundle file is typings/index.d.ts)\nWant main and/or browser output again? See where the typings install in the FAQ\nUsages of ambient are now global\nThat means in typings.json any ambientDependencies should be renamed globalDependencies and any ambientDevDependencies should be renamed globalDevDependencies.\nIt also means --ambient is now --global\nRemoved defaultAmbientSource\nIf you want to install from DefinitelyTyped, be explicit (use dt~ --global). For example: typings install dt~angular-component-router --global --save\nSee the release notes for more information!\n. ",
    "DanPii": "Hi,\nI'm looking for the exact same option. This would be great! I would definitely use it.\n. ",
    "donnygunawan93": "ohh still clickable because ngtouch conflict with jquery, ok no problem :p\n. oh damn, my bower not installed properly because wrong proxy. LOL\n. I found..., that because I was deleted  inject:partials , because I not want to use auto usehref before.\n. ",
    "chap31": "Some more info: Using latest Node.js (4.2.4), latest npm, generator is up-to-date, as well as all dependencies. Mac OS X. yo-rc is attached: http://pastebin.com/raw/wuDL5Bn9\n. Updated also Angular.js to 1.4.8 without improvement.\n. Holy shit, the keys for all element have changed from \"none\" to other ones. This had the effect that gulp-consolidate was not added to package.json leading in this mess.\nSo keep in mind when updating this generator to also look at the .yo-rc file and update it manually is well. Just keeping the old config (like the current update guide suggests) is not enough. Maybe we should update the current guide?\n. ",
    "nitetrik": "You need to to use either a middleman proxy while in development, or in production you could use nginx as a reverse proxy. So nginx will display your static files and when you go to /api it will go to laravel. You should send/receive data via json. Its bit different when using Sinatra or rails with angularjs. like how i do it(many ways to setup) is i have nginx pointed to my static angular app and nginx forwards all connections to /api// to my rails app via to rails server on port 3000.\n. ",
    "fannur": "for lodash:\nnpm i -g npm\nnpm i lodash-migrate\nand try again:\nnpm install\n. ",
    "faidoc": "Hi\nI had the exact same problem and the fix was that I needed to create a htaccess file in order to let the server know how the redirection goes. \nThis is what I had to put to allow html5 mode on:\n```\nRewriteEngine On\nOptions FollowSymLinks\nRewriteBase /\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ /#/$1 [L]\n```\n. ",
    "ebowers": "yep, narrowed it down to this plugin fyi.\nangular-messages.js\n. ",
    "fvezzoso": "I think the main reason behind this is to prevent your app from stop responding to everyone immediately after a new deployment. Some files could be catched and they can try to get resources that don't exist anymore.\nThe corresponding (last) files are selected based on the ones injected into the dist/index.html during the build process.\nPersonally I've setup my build to always do a clean on every build for every environment but production.  In production I always left the last two available unless we need to delete the previous one due to security reasons.\nHope this helps.\n. ",
    "tallboy": "Check out the webPackWrapper stuff in the scripts.js file.  You can push files onto the sources array like so...\n```\nvar sources = [path.join(conf.paths.src, '/app/index.module.js')];\n  sources.push(path.join(conf.paths.src, '/app/components/parse/parse.min.js'));\n  sources.push(path.join(conf.paths.src, '/app/some_other_file.js'));\n```\n. ",
    "MaxFlower": "What's in your gulp file. Have You changed something?\n. ",
    "wstam88": "Do you begin the templateUrl with or without a forward slash? \nIt fails for me when I start the templateUrl with a forward slash.\n. ",
    "santiagobasulto": "Just install nginx and serve the content from the dist directory.\n. ",
    "labrute": "Find some exclude file in gulp tasks. \nIt could happen if you have not selected this option during the generation process.\n. Add them manually is dirty, take a look here : https://roots.io/using-bootstrap-with-bower-how-to-override-bower-packages/\nThis example is for bootstrap but it's the same for all package.\nYou can create your own main by overriding the value.\n. I'm not sure it's the good topic.\n. awesome-typescript-loader has several issues (in v0.15). The dependencies are outdated, the project is not tested with windows plateform.\nTs-loader have a better community, and enought features for this generator.\n. I've a projet in typescript and  /* @ngInject */ is used as an annotation.\nI'm using it only on controllers.\nExample in modal class : \nstatic $inject = ['$uibModalInstance', 'i18nService', 'uiGridConstants', 'title', 'type'];\nconstructor($uibModalInstance: ng.ui.bootstrap.IModalServiceInstance, $http: angular.IHttpService, i18nService: any, uiGridConstants: any, title: string, type: string) { ... }\nIs the same as \n/* @ngInject */\nconstructor($uibModalInstance: ng.ui.bootstrap.IModalServiceInstance, $http: angular.IHttpService, i18nService: any, uiGridConstants: any, title: string,  type: string) { ... }\nYou can find more info here\n. Look build.js file into gulp folder. the minification is done into html gulp task.\n. ",
    "c-johnson": "Is there a stated reason why /jquery/ is explicitly excluded in the gulp conf?  Even if we select that we don't want jQuery in the initial setup phase, I don't know why it wouldn't just not install it, rather than creating a permanent exclusion hidden in some conf file.  If you want to add jQuery later (as in our case) this is a very silly bug to try and track down.\n. ",
    "pavelgdr": "Sorry for my EN. Guys it's not a deal to fix that way. \nI can't understand how is it possible jquery to be included when it is not available (not installed) in bower deps? \nI've tried it and noticed that there is no reason to exclude it in conf.js. Am i wrong?\n. ",
    "christianmalek": "It's not only Angular Material. There are plenty of obsolete versions used.\n. ",
    "alangunning": "+1\n. ",
    "mahmoudmy": "That's my question too.\n. ",
    "kuncevic": "Got same thing in file .../src/app/components/malarkey/malarkey.directive.ts line 25 char 15 \n. ",
    "jmfirth": "Ran into this as well.  Fixed in 8132cf7c39dd92690b8b3626c06d3dc9a06088cc and is a dupe of #936.\n. ",
    "darmie": "I have this problem too, how did you fix it?. ",
    "masoapps": "I also get this error when using serve:dist and when deploying the dist folder to Azure.  The standard serve task works fine though.\n. @bearfriend Thank you for the response - it's helped me fix the issue.  I'm using typescript with Webstorm - it seems the auto-compiled .js files were also causing issues here.  Fortunately didn't need to restart the project\n. ",
    "bearfriend": "@0101adm I'm getting this error too. What exactly do you mean by \"redo\"?\n. I've figured out what the issue was, for me anyway. I use Atom as my editor with the atom-typescript package installed. One of the things this package does is auto-compile to .js files on save. On build, the project seems to prefer these files over re-compiling the .ts files before concatenating. This is where the require calls come from. Either disable auto-compiling if you can, delete the .js files, or script their removal or overriding.\n. @masoapps Fantastic. Glad I could help.\n. ",
    "getglad": "When I use bower to uninstall foundation and install foundation-sites, foundation-sites does not load. I can add it to the index.html page for now, but not sure why nothing loads in.\nAlso, I'm happy to help on updating the foundation dep. Can you give me some places to start? Do you mean you need to update the generator/recipes? https://github.com/Swiip/generator-gulp-angular/search?utf8=%E2%9C%93&q=foundation\n. Okay - I made a PR that contains the changes I had to make to the template.\nhttps://github.com/getglad/generator-gulp-angular/commit/2eca590f49a514898effc6656a1c6fa7741b7e46\nAlso need to change the bower reference in your generator script, they have moved it to foundation-sites, but I wasn't entirely sure where you were setting that.\n. NP - this tool has helped me a ton, so if I can help on other Angular / Foundation stuff, just let me know\n. The bower dependency needs to also be changed from foundation to foundation-sites\nhttps://github.com/zurb/foundation-sites\n. You mean here? https://github.com/Swiip/generator-gulp-angular/blob/master/generators/app/templates/_bower.json#L43\nI wasn't 100% sure where that change should go - if that is the correct place, I can add it in.\n. I have a suggested update to the test-bower package - the first error is failing because it is looking for /foundation/ and the new directory is /foundation-sites/.\nI am not sure what the second failure is about, though. I wouldn't have made any changes to typescript-loader.\nhttps://travis-ci.org/Swiip/generator-gulp-angular/jobs/108800019#L920\nhttps://github.com/Swiip/generator-gulp-angular/blob/master/test/template/test-package.js#L120\nI also reversed the changes to package.json, per @zckrs comment.\n. Wanted to just bump this re:update to test-bower\n. Just going off of the depedency monitor. I'm unopininated about it. https://david-dm.org/eleven-labs/generator-gulp-angular#info=devDependencies&view=table\n. ",
    "devsaik": "{\n  \"generator-gulp-angular\": {\n    \"version\": \"1.0.2\",\n    \"props\": {\n      \"angularVersion\": \"~1.4.2\",\n      \"angularModules\": [\n        {\n          \"key\": \"animate\",\n          \"module\": \"ngAnimate\"\n        },\n        {\n          \"key\": \"cookies\",\n          \"module\": \"ngCookies\"\n        },\n        {\n          \"key\": \"touch\",\n          \"module\": \"ngTouch\"\n        },\n        {\n          \"key\": \"sanitize\",\n          \"module\": \"ngSanitize\"\n        },\n        {\n          \"key\": \"messages\",\n          \"module\": \"ngMessages\"\n        },\n        {\n          \"key\": \"aria\",\n          \"module\": \"ngAria\"\n        }\n      ],\n      \"jQuery\": {\n        \"key\": \"jquery2\"\n      },\n      \"resource\": {\n        \"key\": \"angular-resource\",\n        \"module\": \"ngResource\"\n      },\n      \"router\": {\n        \"key\": \"ui-router\",\n        \"module\": \"ui.router\"\n      },\n      \"ui\": {\n        \"key\": \"bootstrap\",\n        \"module\": null\n      },\n      \"bootstrapComponents\": {\n        \"key\": \"ui-bootstrap\",\n        \"module\": \"ui.bootstrap\"\n      },\n      \"cssPreprocessor\": {\n        \"key\": \"stylus\",\n        \"extension\": \"styl\"\n      },\n      \"jsPreprocessor\": {\n        \"key\": \"noJsPrepro\",\n        \"extension\": \"js\",\n        \"srcExtension\": \"js\"\n      },\n      \"htmlPreprocessor\": {\n        \"key\": \"noHtmlPrepro\",\n        \"extension\": \"html\"\n      },\n      \"foundationComponents\": {\n        \"name\": null,\n        \"version\": null,\n        \"key\": null,\n        \"module\": null\n      },\n      \"paths\": {\n        \"src\": \"src\",\n        \"dist\": \"dist\",\n        \"e2e\": \"e2e\",\n        \"tmp\": \".tmp\"\n      }\n    }\n  }\n}\n. Hi @netfish88 : thanks for your reply, I resolved this issue by upgrading ui router , ngTouch, ngAnimate, ngMessages\n. ",
    "netfish88": "same error with @devsaik when I try to run gulp serve. \nbut strange thing is it worked another project that I did few weeks ago. \nUncaught Error: [$injector:modulerr] Failed to instantiate module ng due to:\nError: [$injector:strictdi] function($provide) is not using explicit annotation and cannot be invoked in strict mode\nhttp://errors.angularjs.org/1.4.9/$injector/strictdi?p0=function(%24provide)\n    at http://localhost:3000/bower_components/angular/angular.js:68:12\n    at Function.annotate as $$annotate\n    at Object.invoke (http://localhost:3000/bower_components/angular/angular.js:4513:36)\n    at runInvokeQueue (http://localhost:3000/bower_components/angular/angular.js:4441:35)\n    at http://localhost:3000/bower_components/angular/angular.js:4449:11\n    at forEach (http://localhost:3000/bower_components/angular/angular.js:341:20)\n    at loadModules (http://localhost:3000/bower_components/angular/angular.js:4431:5)\n    at createInjector (http://localhost:3000/bower_components/angular/angular.js:4356:11)\n    at doBootstrap (http://localhost:3000/bower_components/angular/angular.js:1677:20)\n    at Object.angular.resumeBootstrap (http://localhost:3000/bower_components/angular/angular.js:1706:12)\nhttp://errors.angularjs.org/1.4.9/$injector/modulerr?p0=ng&p1=Error%3A%20%5\u2026F%2Flocalhost%3A3000%2Fbower_components%2Fangular%2Fangular.js%3A1706%3A12)\n. Fortunately, I found the reason for my case. \nI used chrome plugins like AngularJS Inspector 0.4.5, AngularJS Batarang 0.10.5. \nwhen I turn off these plugins. it works. \nthanks for these guys on stackoverflow.\nhttp://stackoverflow.com/questions/25655510/angularjs-1-3-with-ngbp-framework-doesnt-load-in-chrome-browser-when-using-ng-s\n. ",
    "fhackenberger": "Maybe a separate task then? Its definitely a use case, I can tell you. Developer productivity is usually the most important criteria for choosing a toolchain.\n. ",
    "btn0s": "and effort when answering one? sorry I realize that this is not exactly what you wanted to see, but I like the set up you've built a lot and was just trying to get feedback from you on the dependency issue.\n. ",
    "igor-yamshchykov": "Hey, I think the issue is with the .bower.json of the packages that you've installed\nFor instance if you would like to install Socket.IO with bower you do\n$ bower install socket.io --save\nThis way you'll get in bower_components/ folder socket.io/ folder, in this folder take a look at the bower.json file I bet there's no property \n\"main\": \"socket.io.js\"\nor something.\nSo the way gulp task is working, it's trying to find the  main property in library installed by the bower.\nSurely overriding the library bower.json file would be a bad idea. So in your project bower.json file\nthat should be in the root of your project go ahead and add there something like this\n\"overrides\": {\n    \"socket.io\": {\n      \"main\": [\n        \"./socket.io.js\"\n      ]\n    }\n  },\nUnder main you should specify path to the lib file.\nAfter that your bower.json file will override the library bower.json prop and I guess I will be imported.\nTry it on with you library, it should help, but watch out to put the correct main file path when you override the main.\nHope that helps.\n. I'm afraid that I don't know a nice solution for injecting 55 bower components, what I'm doing is I'm overriding component main right away after install. So basically one thing I might suggest is to put them once at your bower.json by hard \n. ",
    "heikoholland": "Did you find a solution for this?\n. ",
    "Sepho": "Hi,\nI found a solution. Just place the cdn of bootstrap.js at the end of body tag. \n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\" integrity=\"sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS\" crossorigin=\"anonymous\"></script>\n</body>\nFor some reason, gulp is not injecting the .js file property.\n. ",
    "gnicol-bzh": "Hi,\nI have the same issue, even if I don't use gulp-angular generator. Probably a problem from eslint-config-airbnb package itself. I've opened an Issue there.\n. ",
    "aonemd": "@jchayan Hey, did you find a solution?\n. ",
    "shootermv": "Hi,\nfirst of all - thanks for quick response.\nI'm very new to this stuff so i'm very exited about that I\ncan contribute...\nso - about the failing test\n- as far as I can see : there was commit 21 days ago\n  https://github.com/Swiip/generator-gulp-angular/commit/190a9ccd88f5daa22bac5b84e3b8688ec9b9f4f5\n  which replaced \"typescript-loader\" by 'ts-loader''\nso i guess, I will replace the test too so it will search for new\n\"ts-loader\"\nnow it looks like tests passing\nHope it looks good to you\nThanks\nOn Wed, Mar 2, 2016 at 10:22 AM, Matthieu Lux notifications@github.com\nwrote:\n\nDid you checked that there is no regression ? Sorry but the tests are\nfailing right now and anyway, protractor is not launched on travis...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Swiip/generator-gulp-angular/pull/1031#issuecomment-191125004\n.\n\n\nhttp://gs500coder.blogspot.com\n. ",
    "Hosar": "It's just generating vendor-ab74800f34.js, but not app.js for me.\nAny suggestion?\n. The error was, because Uglify js, does not support ES6. That's why it was not building app.js\n. ",
    "MRichardson1": "\nThe error was, because Uglify js, does not support ES6. That's why it was not building app.js\n\nCan you say how you fixed this? . ",
    "piu130": "Where is your data.json file? You have to provide the path relative from your src/ folder.\n.success and .error are deprecated. Use .then and .catch instead.\n. Fixed with #1091 \n. I've tested it. For me it works. You just need to bower install --save angularfire because it depends on firebase.\nI also bumped gulp-inject, wiredep and main-bower-files to the latest version. After that I had some problem with angular and jQuery because angular then uses his own jqlite library.\nYou have to add\n\"overrides\": {\n  \"angular\": {\n    \"dependencies\": {\n      \"jquery\": \"~2.2.3\"\n    }\n  }\n}\nto your bower.json if you use jQuery.\n. For me it works. I installed angular-foundation-6 via bower install --save angular-foundation-6. After I run gulp inject it's injected in my .tmp/serve/app/index.html.\nIs it really not injected or does the order matter? Did you forget to inject it in angular?\n. For me it works. Which task is the one that fails?\n3.0.1 -> 4.0.0 means major release corresponding to SemVer so there should be breaking changes.\nCan you post some errors?\n. You have to set useXDomain = true and delete X-Requested-With in your config() block.\n.config(function ($httpProvider) {\n    $httpProvider.defaults.useXDomain = true;\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n})\nIf you use the standard template this should be in index.config.js.\nFor test-case this solution is OK, but in production there is a reason why the browsers implemented CORS blocking.\n. ",
    "vamsikrishnamannem": "Sorry It's node issue, I uninstall and installed node. Now it's working fine.\n. ",
    "jetspeed": "@Swiip How can I \"publish the node_modules directory in Browsersync and add the script tags in the index.html\"?, for example, I want to use a npm module https://github.com/kevva/download, which has no bower package, How to configure it ? \nThanks.\n. ",
    "harconst": "@jetspeed  @Hesesses \nModifying server.js in order to make the routes look like this:\n```\nroutes = {\n      '/node_modules/': 'node_modules',\n      '/bower_components': 'bower_components'\n    };\n```\nshould allow you to reference and inject node modules in your index file, like this:\n``\n<!-- build:js({.tmp/serve,.tmp/partials,src}) assets/js/app.js -->\n        <!-- bower:js -->\n        <!-- rungulp inject` to automatically populate bower script dependencies -->\n         endbower \n\n inject:js \n js files will be automatically insert here \n endinject \n    <!-- inject:partials -->\n    <!-- angular templates will be automatically converted in js and inserted here -->\n    <!-- endinject -->\n\n endbuild \n```\nA little late to reply, but I just stumbled upon this myself!\nRegards\n  . ",
    "luckymancvp": "Thank you very much. I searched around, but no success. \nA simple question , because I'm not familiar with gulp ( I'm using grunt ):\n- How to disable browerSync and watch file ? because I can refresh brower by my self.\nYour angularjs folder structure is awesome. Thank you very much\n. Dear @Swiip \nToday I've read all issue, and I can not resolve my problem. Can you tell me how to use Todo resources with this angularjs project \nActually I use loopback for my backend, and It create a service file for angularjs interact with backend. Example of this file is here \nhttps://github.com/strongloop/loopback-example-angular/blob/master/client/js/services/lb-services.js\nI can not inject that file to project to use Todo model in SampleController. \nI know you created this repo for free , but please help me inject that service file into project ( I already included lb-services.js file into index.html , and I try this function SampleController(SampleData, Todo) in sample.controller.js or function config($stateProvider, $translatePartialLoaderProvider, msApiProvider, msNavigationServiceProvider, Todo) { in sample.module.js)\n. I found solution : \nin module file : function SampleController(SampleData, Todo) { in controller , and in index.module.js file define lbService .\nThank you !\n. found it !!\nand my theme's css file  already included sourcemap file\n```\n.pipe(cssFilter)\n        // .pipe($.sourcemaps.init())\n        .pipe($.cssnano())\n        .pipe($.rev())\n        // .pipe($.sourcemaps.write('maps'))\n        .pipe(cssFilter.restore)\n        .pipe($.inject(partialsInjectFile, partialsInjectOptions))\n        .pipe($.useref())\n        .pipe(jsFilter)\n        // .pipe($.sourcemaps.init())\n        .pipe($.ngAnnotate())\n        .pipe($.uglify({preserveComments: $.uglifySaveLicense})).on('error', conf.errorHandler('Uglify'))\n        .pipe($.rev())\n        //.pipe($.sourcemaps.write('maps'))\n```\n. ",
    "SergeyKhval": "@Swiip No, I'm using babel\n. ",
    "RootProgger": "i thought serve was for the dev and serve:dist for prod?\nWhen i develop and use serve i can see the changes in live-reloading, so i think thats for developing...\n. ",
    "PierreRAFFA": "Forget this issue.\nActually, the coverage is written only with the command \"gulp test\" and not \"gulp test:auto\"\n. ",
    "gadieichhorn": "thank you, would be able to suggest how I might do the conversion?\nI think this can be a good wiki and for everyone who are interested going down this path to use.\nappreciate your support.\n. webpack is a good way of doing things so would like to keep it of possible. any suggestions are welcomed :)\nI tried few options with no success. \nfrom:\n```\n  var sources = [ path.join(conf.paths.src, '/app/index.module.ts') ];\n  if (test) {\n    sources.push(path.join(conf.paths.src, '/app/*/.spec.ts'));\n  }\n```\nto:\n```\n  var sources = [ path.join(conf.paths.src, '/app//*.ts') ];\n  if (test) {\n    sources.push(path.join(conf.paths.src, '/app//*.spec.ts'));\n  }\n```\nis it possible to avoid using import statements and let angular figure out the DI order?\nimport { MainController } from './main/main.controller';\n. yes, keep it modular by encapsulating the classes and exposing the interfaces from each module.\nto be more clear I would like to let each class register itself with angular inside a module. should only expose (export) interfaces when they are used by other modules.\n```\n/// import what is needed for implementing this service/controller/factory/...\nimport { IConnection } from '../../domain/connection/connection.model';\n// everything is warped in TS IIFE (module/namespace)\nmodule admin.services {\n/// EXPORT\n  export interface IConnectionService {\n    /// some methods\n  }\n/// NO EXPORT NEEDED\n  class ConnectionService implements IConnectionService {\n    /// implementation\n  }\n/// angular DI registration\n  angular.module('admin.services')\n    .service('admin.services.Connection', ConnectionService);\n}\n```\nwhen I try this setup I am getting angular loading errors like\n```\n[$injector:modulerr] Failed to instantiate module admin due to:\nError: [$injector:modulerr] Failed to instantiate module admin.pages due to:\nError: [$injector:nomod] Module 'admin.pages' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\n```\n. realise my mistake now.\nthanks for your support :+1: \n. sure,\nfirst I got a bit confused between modules and namespaces so I cleaned that up with namespaces per module.\nsecondly, by ordering the imports I managed to declare the angular modules first and then use them inside each module and not exporting any unnecessary classes.\nindex.ts\n```\nnamespace app.pages {\nangular.module('app.pages',[]);\n}\nimport './main.controller.ts';\n```\nin the module  main.controller.ts\n```\nnamespace app.pages {\nclass MainController {}\nangular.module('app.pages').controller('app.pages.MainController', MainController);\n}\n```\n. ",
    "asafper": "Hi gadi,\nCan you please share how did you resolve this issue ?\nThanks\n. ",
    "lotas": "We had similar problem and were trying to set up timeouts, tried different options, but it didn't work.\nSo we end up disabling auto-reload, and doing it manually.\nSo we had plain watch task to listen to file modifications. In case of event we triggered scripts styles etc rebuild, and only when that finished triggered require(\"browser-sync\").get('frontend').reload();\nI think this is a problem for medium and large-sized projects, because it needs to build a lot\n. +1 Thanks!\nI think I was going crazy when my hashRevs stopped working :)\n. ",
    "nabil-boag": "This is quite a large PR for a new feature so I would love as much feedback as possible to improve it.\n. By adding a new item to the prompt, this causes an error (since this.props.protractorFramework is undefined)  when the user loads an existing .yo.rc. \nHow have you historically managed changes like this?\n. ",
    "freeman29": "How can we use angular-foundation-6 instead of 5? is there an existing guide out there?\n. Got it working for now. I hope there's a better way than this.\nsh\n   <!-- build:js(src) scripts/vendor.js -->\n        <!-- bower:js -->\n        <!-- run `gulp inject` to automatically populate bower script dependencies -->\n        <!-- endbower -->\n        <script src=\"../bower_components/angular-foundation-6/dist/angular-foundation.js\"></script>\n    <!-- endbuild -->\n. @Swiip even if I did --save still not injecting. I also checked angular-foundation-6 bower.json, and it has the correct main.\n\"main\": [\n    \"dist/angular-foundation.js\"\n  ]\nPlease lead me to a doc link.\n. ",
    "styler": "Same with mac osx.\n. ",
    "ripper2hl": "please merge this, only typo corrections. Close this issue please, angular 1(js) \u2260 angular 2 (typescript). ",
    "johnoscott": "seems typings is used now since v1.1.0 (not tsd) so the missing setup is actually :\ntypings install\nonce I ran this command the typescript compiler worked for me\n. ",
    "matiishyn": "this fixed the issue for me\n\nSo probably, something wrong happened during minification\nPlease help me to resolve it\n. ",
    "axetroy": "@Swiip Thanks\nI have resolve it.\n. @souravmondal93 \nthanks you for reply\nI have resolve this not use the $ocLazyLoad\nI use the webpack  require.ensure api\nand create a new gulp task to fixed the chunk path and copy to dist folder\nand then load it in $stateProvider resolve\njust like \njavascript\n  resolve: {\n    asynModule: ['$q',function($q){\n        var deferred = $q.defer();\n        require.ensure('./asynModule',function(require){\n          var _module = require('./asynModule');\n          // other actions like register a new controller or component\n         deferred.resolve();\n       });\n        return deferred.promise;\n    }]\n  }\nby now, everything is ok.\nI think it should be imploded into the gulp task\n. ",
    "Gu3": "I think I jut need to config webpack with an HTML loader.. I try and mark this issue as solve if it's ok...\n. If anyone want to do something like this : \nimport mainView from './main/main.html';\nneed to : \nnpm install html-loader --save -dev\nand add the loader in the gulp config : \n{ test: /\\.html$/, loader: 'html' }\n++\nVincent.\n. Hi,\nI try agin this morning, and that's works at the office... \nProbably node version ... \nSorry for the fake issues ! \nVincent.\n. ",
    "JimTheMan": "Ok. I am confused though because even when I delete the line   /* @ngInject / everything still works fine. Do I _NEED to have   /_* @ngInject / there or is it optional?\n. Also, this is probably the wrong place to ask this, but can I have both 1.6.0 and this new 1.7.0 installed at the same time?\n. I'm happy to say that I rescaffolded a project with this generator today (Angular 1.5), and everything went perfectly.  Gulp serve, gulp test, and gulp protractor all work great. Thank you again guys. Excellent generator. :)\n. ok great. Thanks!\n. If I wanted to add to the gulp script so that it does not concatenate or minify any js, css, or html files in a folder called \"src/safe-folder\" how can I do this?\n. RIP Gulp-Angular. The most legendary generator of the AngularJS era! :)\n. ",
    "dbogda": "@mackelito it is redundant if your Controller.$inject = []; captures  your dependencies, otherwise it's a good best practice to catch any missing dependencies on minification since it is harmless if not needed. To finish the original question, 'ngInject'; is not required for your code to work but it is required if you want to package and minify your code for production using (serve:dist) as @Swiip above mentioned. . ",
    "mojisilver": "@Swiip you technically saved my ass! thanks :). ",
    "mykbaker": "No tasks are failing, but when the build finishes the files have not been revisioned, there are no maps and the files are not minified. If I change back to 3.0.1 it works fine.\n. @MZellhofer that worked great, thanks.\n. ",
    "maximdresvyankin": "I have the same error. Are you fix it?\n. ",
    "YuriZaliznyak": "browser expects font files at locations with doubled \"bower_components\" in path, e.g. at\nhttp://localhost:3001/bower_components/bower_components/bootstrap/fonts/glyphicons-halflings-regular.woff2\ni do not have any solution at the moment.\n. ",
    "D0d0": "Hi, i changed @icon-font-path: '../../bower_components/bootstrap/fonts/'; to @icon-font-path: '../../bootstrap/fonts/'; in index.less file and works fine. It is not solving main problem of course.\n. ",
    "eduardosanzb": "any solution buddies?\n. ",
    "shersial": "$icon-font-path: \"./../bootstrap-sass/assets/fonts/bootstrap/\";\nchange above path to below working fine\n$icon-font-path: \"/bower_components/bootstrap-sass/assets/fonts/bootstrap/\";. open build.js\n.pipe($.replace('../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\ni thing change to\n.pipe($.replace('/bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/')). ",
    "Henry0422": "shersial's solution works for me.. I vote for sunilkumarkm's solution.\nIn index.scss, changed from\n$icon-font-path: \"../../bootstrap-sass/assets/fonts/bootstrap/\";\nTo\n$icon-font-path: \"../bower_components/bootstrap-sass/assets/fonts/bootstrap/\";\nIn gulp/build.js, changed from\n.pipe($.replace('../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\nto\n.pipe($.replace('../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n. ",
    "souravmondal93": "I would suggest you to use ocLazyLoad plugin. Yo can follow there docs here and make the required changes in your app. Most importantly, you have to update your router file with something like this:\njavascript\n$stateProvider.state('index', {\n  url: \"/\", // root route\n  views: {\n    \"lazyLoadView\": {\n      controller: 'AppCtrl', // This view will use AppCtrl loaded below in the resolve\n      templateUrl: 'partials/main.html'\n    }\n  },\n  resolve: { // Any property in resolve should return a promise and is executed before the view is loaded\n    loadMyCtrl: ['$ocLazyLoad', function($ocLazyLoad) {\n      // you can lazy load files for an existing module\n             return $ocLazyLoad.load('js/AppCtrl.js');\n    }]\n  }\n});\n. If you can elaborate your problem, then it will be easier for us to understand. Kindly try to include code snippet, if possible, it makes things clear for other users. With the information supplied by you, I think most probably you are missing the base tag at the head part of the index.html file. You can read mode about it here.\n``` html\n<!doctype html>\n\n\n\nfreeBnB\n\n\n<base href=\"/\">\n\n\n\n[if lt IE 10]>\n<p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade\n    your browser</a> to improve your experience.</p>\n<![endif]\n\n\n\n```\nI have removed the comments from code snippet to reduce the size. Take a look at the base tag in the head part. I think you are missing it in your code.\n. Welcome. Happy to help you and most importantly it solved your problem.\n. ",
    "Gujarats": "Okay Fix now, I put the wrong option port, I should put it on the browserSync\nsee this answer\n. ",
    "jasperblues": "@souravmondal9 I'm sorry I didn't provide more info - as a n00b to angular, I wasn't sure what information would be obvious to someone with more experience and is appropriate to share. \nYou solved it for me anyway :) I had the base tag there, but it wasn't in the <head> section and that seemed to cause problems. \nThank you. \n. @Swiip OK, thanks very much. It is not yet a large project, so I'll opt for the latter approach. \n. ",
    "thiagosbrito": "I'd love to help to do this. Actually I'm doing exactly this for my personal portfolio. If you like, I'd share my codes with you guys, and we could improve the server together. I'll use mongoose, mongo, express, cors\n. ",
    "Tsouef": "Why not ! I start with angular and node, and i have already did a little framework sass, and i would like to do a \"base project\" with angular, gulp, node, sass for my futur projects ;) \n. ",
    "codecov-io": "Current coverage is 100%\n\nNo coverage report found for master at 897de80.\nPowered by Codecov. Last updated by 897de80...efc5079\n. ## Current coverage is 100%\nNo coverage report found for master at 897de80.\nPowered by Codecov. Last updated by 897de80...b0877d6\n. ## Current coverage is 100%\nMerging #1154 into master will not change coverage\n\ndiff\n@@             master   #1154   diff @@\n=======================================\n  Files            14      14          \n  Lines           342     342          \n  Methods          78      78          \n  Messages          0       0          \n  Branches         51      51          \n=======================================\n  Hits            342     342          \n  Misses            0       0          \n  Partials          0       0\n\nPowered by Codecov. Last updated by 49c8cb4...7f1ed0b\n. ## Current coverage is 100%\nMerging #1155 into master will not change coverage\n\ndiff\n@@           master   #1155   diff @@\n=====================================\n  Files          14      14          \n  Lines         342     342          \n  Methods        78      78          \n  Messages        0       0          \n  Branches       51      51          \n=====================================\n  Hits          342     342          \n  Misses          0       0          \n  Partials        0       0\n\nPowered by Codecov. Last updated by b3c0504...791a464\n. ## Current coverage is 100% (diff: 100%)\nMerging #1173 into master will not change coverage\n\ndiff\n@@           master   #1173   diff @@\n=====================================\n  Files          14      14          \n  Lines         342     342          \n  Methods        78      78          \n  Messages        0       0          \n  Branches       51      51          \n=====================================\n  Hits          342     342          \n  Misses          0       0          \n  Partials        0       0\n\nPowered by Codecov. Last update 58e5a66...c8a3bdd. \n",
    "gangadharjannu": "I've tried adding a new controller however it is becoming undefined when running. How can I add a new controller?\n. ",
    "kkavod": "Have the same issue here. Fresh TypeScript project with latest Swiip generator.\nRunning\n$ typings install\ngives No dependencies and gulp serve complains about missing typings\nsystem Linux 3.19.0-28-generic\nnode -v v6.2.1\ntypings -v 1.2.0\n. Downgraded to Node 4.4.5, re-generated the project, same issue.\n. Downgraded typings to 1.1.0, same behaviour.\n. Installed each dependency manually using the -G flag, this worked.\n$ typings install -G didn't work.\n. ",
    "aforanil": "No I'm not looking for sub-generators.\nPreviously I've tried to add few CSS files and they are not included in the index.html so I thought there is another way of doing things and that's why I've opened a new issue.\nHowever I've tried to add the same in LESS file and it is working.\n. ",
    "ottojimb": "Ok, I agree. How can I help to do this? It's my first issue report on github. Thank you!\n. ",
    "mikedidomizio": "Hey,\nI added font-awesome above the // injector and it worked fine\n```\n@import \"../../bower_components/components-font-awesome/scss/font-awesome\";\n/*\n *  Do not remove the comments below. It's the markers used by gulp-inject to inject\n *  all your sass files automatically\n /\n// injector\n// endinjector\n``\n. Check to make sure that you've addedelasticsearch` as a dependency in your index.module.js file\n. ",
    "grimaldo": "I finally can use it, the issue was generated because need to save the dependency reference in the file bower.json thank you\n. ",
    "blowsie": "Any ideas who to get sourcemaps working with this?\n. @AbdelhadiLahlou this only works for serve and not serve:dist. @bertramn your solution works for serve:dist and not serve, unless you do step 3 \n\nalso remove the \"replace font paths\" line from gulp\\build.js. \n",
    "davidalekna": "Okay so Angular filesort update did solve the issue but then I hit another gulp-uglify failure. My solution to this problem was assigning dynamic object variable in a different fashion as follows if someone is interested:\nvar query = {};\nquery[keyword] = vm.addNewLabel;\nCheers \n. ",
    "lucasangelon": "I was able to fix this issue on my project by using:\ntypings install angular --ambient --save\nWhere typings can be installed via npm.\n. ",
    "dinuchiriac": "have same issue,  typings install angular --ambient --save did not helped \n. ",
    "devakone": "same issue\n. ",
    "jeserkin": "Same here. Will it be fixed in some upcomming version?\nUPDATE: Okay, I think, that issue is with changed DefinitelyTyped angularjs directory structure. If you search typings search angularjs, then you will see, that it doesn't provide angularjs typings, that are placed in typings.json file. That is why after generator finished app is missing required typings.\nAs far as I can tell, it means, that if one does select angularjs version 1.5 (stable), then he can't use TypeScript. Sadly, but so. Will try with 1.2.\n. Workarounds are not suitable in this case as a permanent solution.\n. Maybe it will be enought to update typings.json? I was able to update all typings. Since recently one needs to specify the source other than npm manually, e.g. typings install dt~angular --save --global, where [dt - typings from DefinitelyTyped (usually --global)] is. Full example of my typings.json\njson\n{\n  \"name\": \"gulpAngular\",\n  \"version\": false,\n  \"ambientDependencies\": {\n    \"angular-cookies\": \"github:DefinitelyTyped/DefinitelyTyped/angularjs/angular-cookies.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"angular-sanitize\": \"github:DefinitelyTyped/DefinitelyTyped/angularjs/angular-sanitize.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"jquery\": \"github:DefinitelyTyped/DefinitelyTyped/jquery/jquery.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"angular-resource\": \"github:DefinitelyTyped/DefinitelyTyped/angularjs/angular-resource.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"angular-ui-router\": \"github:DefinitelyTyped/DefinitelyTyped/angular-ui-router/angular-ui-router.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"ui-bootstrap\": \"github:DefinitelyTyped/DefinitelyTyped/angular-ui-bootstrap/angular-ui-bootstrap.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"angular-mocks\": \"github:DefinitelyTyped/DefinitelyTyped/angularjs/angular-mocks.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"angular\": \"github:DefinitelyTyped/DefinitelyTyped/angularjs/angular.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"jasmine\": \"github:DefinitelyTyped/DefinitelyTyped/jasmine/jasmine.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"karma-jasmine\": \"github:DefinitelyTyped/DefinitelyTyped/karma-jasmine/karma-jasmine.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"moment-node\": \"github:DefinitelyTyped/DefinitelyTyped/moment/moment-node.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\",\n    \"moment\": \"github:DefinitelyTyped/DefinitelyTyped/moment/moment.d.ts#bb051830df88f5a55dcf06b7fe85bf6b62cc97f2\"\n  },\n  \"globalDependencies\": {\n    \"angular\": \"registry:dt/angular#1.5.0+20160602160139\",\n    \"angular-cookies\": \"registry:dt/angular-cookies#1.4.0+20160317120654\",\n    \"angular-mocks\": \"registry:dt/angular-mocks#1.3.0+20160425155016\",\n    \"angular-resource\": \"registry:dt/angular-resource#1.5.0+20160602125522\",\n    \"angular-sanitize\": \"registry:dt/angular-sanitize#1.3.0+20160317120654\",\n    \"angular-ui-bootstrap\": \"registry:dt/angular-ui-bootstrap#0.13.3+20160602140119\",\n    \"angular-ui-router\": \"registry:dt/angular-ui-router#1.1.5+20160521151413\",\n    \"jasmine\": \"registry:dt/jasmine#2.2.0+20160505161446\",\n    \"jquery\": \"registry:dt/jquery#1.10.0+20160417213236\",\n    \"karma-jasmine\": \"registry:dt/karma-jasmine#0.0.0+20160316155526\",\n    \"moment\": \"registry:dt/moment#2.8.0+20160316155526\",\n    \"moment-node\": \"registry:dt/moment-node#2.11.1+20160511043338\"\n  }\n}\n. ",
    "michalstolinski": "I was able to quick win this issue by downgrading global typing package to 0.7.9 version\n. ",
    "BAByrne": "@jeserkin is right on this, but he left the last part out for my setup to work.\nFrom the beginning, I went through each of the ambientDependencies and installed each one with typings install angular --global --save where angular was replaced each time. This got my typings.json to match @jeserkin's with my own components.\nThe important part is to make sure you do a typings i after going through your list.\nTo save time on the typings install process, you can string all your typings together like below:\ntypings install --global --save angular angular-cookies angular-mocks angular-resource angular-sanitize and so on.\n. ",
    "Alligatore3": "@lucasangelon\ntypings ERR! deprecated The \"ambient\" flag is deprecated. Please use \"global\" instead\nBTW using global flag doesn't fix the problem.\nLogs persist.\n\nUPDATE\n@BAByrne \n\nTo save time on the typings install process, you can string all your typings together like below:\ntypings install --global --save angular angular-cookies angular-mocks angular-resource angular-sanitize and so on.\n\nIt seems like there's no \"--ignore\" flag and when one typing crashes it stops all the flow.\nLike @jeserkin said, I had to specify the source ( registry mirror ) for every packet.\nExample: \ntypings install dt~angular --save --global\nnot \ntypings install angular --save --global\n\nRE-UPDATE\nIT WORKED FOR ME\nI don't know why but after installing all typings if you go into\nsrc/app/index.module.ts\nYou'll find \n/// <reference path=\"../../typings/main.d.ts\" />\nWhich is pointing to a file that doesn't exist ( for me )\nI renamed into \n/// <reference path=\"../../typings/index.d.ts\" />\nand it worked, all logs are gone   \ud83c\udf89\n. ",
    "histfuture": "@Alligatore3 \nYour comment works for me , thanks a lot.. ",
    "end-user": "I'm having similar issues with both bootstrap & fontawesome.  (also related to #849) Specifically, my issue is the dist version is compiling identically to the serve version. I installed them with bower, and included the fonts to the bower.json overrides:\n\"bootstrap\": {\n  \"main\": [\n    \"less/bootstrap.less\",\n    \"dist/fonts/glyphicons-halflings-regular.eot\",\n    \"dist/fonts/glyphicons-halflings-regular.svg\",\n    \"dist/fonts/glyphicons-halflings-regular.ttf\",\n    \"dist/fonts/glyphicons-halflings-regular.woff\",\n    \"dist/fonts/glyphicons-halflings-regular.woff2\"\n  ]\n},\n\"fontawesome\": {\n  \"main\": [\n    \"less/font-awesome.less\",\n    \"fonts/fontawesome-webfont.eot\",\n    \"fonts/fontawesome-webfont.svg\",\n    \"fonts/fontawesome-webfont.ttf\",\n    \"fonts/fontawesome-webfont.woff\",\n    \"fonts/fontawesome-webfont.woff2\"\n  ]\n}\n(Obviously, I'm using less) Then, I override the font paths for both as appropriate.\n@icon-font-path: \"../bower_components/bootstrap/fonts/\";\n@fa-font-path: \"../bower_components/fontawesome/fonts\";\nWhen I gulp serve this, everything is great - I'm serving the files from the declared dependencies.  During build, the fonts task finds them and copies them (possibly the solution to #1129 - note my FA declaration does not have a dash in it).  However, build runs the same styles task and nothing changes the paths so it fails to reference the correct path to the packaged font files.\nIn the recipe you link to, the replace sounds like it should do the trick, but maybe I'm not putting it in the right place?  In any case, I can't get the build to generate the correct path.\n. ",
    "St1c": "+1\n. ",
    "mde17": "just changed the ''ambient\" to \"global\".\nhttps://github.com/typings/typings/issues/343\n. ",
    "viikas": "It got solved. The problem was that I installed math.js by bower.bower install mathjs --save. When I removed mathjs, gulp build worked properly. Mathjs might have been already installed somewhere by default because it turn out I didn't need to install mathjs myself for it to work.\n. ",
    "rotavio": "I'm having the same problem here. Any progress?\nHere's my gulp/build.js:\n...\n    .pipe($.replace('../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n    .pipe($.replace('../../bower_components/font-awesome/fonts', '../fonts'))\n...\nBootstrap fonts are fine, but font-awesome are not copied to the dist/fonts dir\n. ",
    "timmyg": "@rotavio probably hacky, but this worked for me changing fonts task in build.js (saw it in https://github.com/Swiip/generator-gulp-angular/issues/849)\ngulp.task('fonts', function () {\n  return gulp.src('./bower_components/**/*.{eot,svg,ttf,woff,woff2}')\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\n. ",
    "idwd": "I dont know if is the better solution, I did this:\n// app/components/login/index.module.js\nimport {AuthService} from './authenticate.service';\nimport {LoginController} from './login.controller';\nangular.module('loginModule', [])\n    .service('AuthService', AuthService)\n    .controller('LoginController', LoginController);\n// .index.module.js\nimport { config } from './index.config';\nimport { routerConfig } from './index.route';\nimport { runBlock } from './index.run';\nimport { MainController } from './main/main.controller';\nimport { GithubContributorService } from '../app/components/githubContributor/githubContributor.service';\nimport { WebDevTecService } from '../app/components/webDevTec/webDevTec.service';\nimport { NavbarDirective } from '../app/components/navbar/navbar.directive';\nimport { MalarkeyDirective } from '../app/components/malarkey/malarkey.directive';\nimport {LoginModule} from '../app/components/login/index.module'; // load module, I just need gulp compiled...\nangular.module('app', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'toastr',\n'loginModule']) // inject login module\n  .constant('malarkey', malarkey)\n  .constant('moment', moment)\n  .config(config)\n  .config(routerConfig)\n  .run(runBlock)\n  .service('githubContributor', GithubContributorService)\n  .service('webDevTec', WebDevTecService)\n  .controller('MainController', MainController)\n  .directive('acmeNavbar', NavbarDirective)\n  .directive('acmeMalarkey', MalarkeyDirective);\n. ",
    "jaunkst": "Closing, this for the moment. There is an issue with icons, will look at this again later today.\n. ",
    "elimence": "Hi, I generated a project a few days before a PR was made to fix this issue, is there a way to update my project to get this fix (I've made folder additions to the structure)? or can I simply remove the old angular bootstrap from bower.json and bower_components and run bower install --save angular-bootstrap ?\n. thanks, will do that \ud83d\udc4d \n. ",
    "BhagyashriK": "Yes you can remove older angular bootstrap from bower.json and bower_components and run command \nbower install angular-bootstrap --save\n. ",
    "altinselimi": "Upon further investigation, I came to understand the .js files were not being injected anywhere in the /tmp files. Why are they not being injected? Isn't there a gulp task to do the upmentioned?\n. ",
    "bartsmilner": "Hi altinselimi\nYou're close - the problem seems to be with gulp/inject.js. Creating a new 'best practice'. module directory gave me the same error when the file was named mynewmodule/mynewmodule.module.js but after renaming it mynewmodule/mynewmodule.js it all worked fine with a .controller and .directive set to angular.module('mynewmodule'). ... in new .js files.\nI'm pretty sure this is because the default (line 25) in gulp.inject.js is \npath.join(conf.paths.src, '/app/**/*.module.js')\nbecause if you change that to\npath.join(conf.paths.src, '/app/**/index.module.js')\nthen\nmynewmodule/mynewmodule.module.js and everything else runs without errors.\nHope that helps (and yes I agree, it's a great generator and the Fuse admin theme built on top of it with ui-material is also pretty cool)\n. and, of course, if you edit a gulp file you need to run gulp serve again...\n. ",
    "rvbiljouw": "Having the same problem here - has anyone figured out what causes it?\n. @naveenjafer: in my case one of the dependencies had a syntax problem or something that didn't get flagged up anywhere. i ended up removing the dependency that was above the one I was trying to load and the moment I did everything started working properly. \nIt could be something as simple as a semicolon but it's rather difficult to find in a huge file. One possibility could be stripping down the dependencies of your app until you find the offending combination?\n. ",
    "ulion": "I did encounter similar issue, gulp serve just fine, while the dist will have an unknown reason error first, then report some angular module does not found. turns out it does relate to the module entries order in the bower.json file. but indeed, it was caused by one of the module does not properly load in dist, then caused the modules later after the problem module are all not be loaded. in my case, it is the moment-timezone module caused this problem, it does not work in dist, maybe missing some file or some reason.. ",
    "ksgupta": "Thanks @zckrs for the update. I tried accessing the fountainjs docs, but the URL listed on the site: http://fountainjs.io/gulp-angular/docs/usage.md is a 404.\nCould you please share where I can find the documentation for using the guld-angular(with sub-generators) from within fountainjs?\n. ",
    "jeansaigne": "+1\nSame problem here when i try to build the project, however \"gulp serve\" works as expected, but actually it's written on the main page \"build:failing\"...\n. ",
    "shantanugautam": "i am working on existing project. just created a test project to verify if there was an issue there .\nThe problem was with angular template cache , its unable to create a file if it doesn't exist at this step\n.pipe($.angularTemplatecache('templateCacheHtml.js', {\n                module: '<modulename>',\n                root: 'app'\n            }))\nYou have to manually create it .\n. @danivek  thank you for identifying the root cause. Much appreciated\n. ",
    "danivek": "problem is in gulp-header,\nsee issue https://github.com/tracker1/gulp-header/issues/37\n. Duplicate #1149 \n. ",
    "gintsgints": "Confirm that adding:\n\"gulp-header\": \"1.8.2\"\nto package.json dev dependencies, works as workaround.\n. ",
    "mescher": "I had the error on wercker.com when building my app.\nAdding \"gulp-header\": \"1.8.2\" to package.json solved the issue. Thanks!\n. ",
    "kosz": "\ud83d\udc4d  you guys were awesome. I've learned so much from this generator. Thank you for all your great work\n. ",
    "thinking-aloud": "Why are you guys so happy about this? I just moved our project over from Foundation for Apps, because I found out, it is discontinued. I can't really say I'm happy, this happens again.\n. The lack of configuration options and the new project structure don't really apply to me. I will stay with the old structure, and see how it goes.\n. ",
    "Koslun": "@thinking-aloud Because you get even more features using a combination of sub-generators over at http://fountainjs.io/ (done by the same people behind this generator).\n. ",
    "pedro-meza": "Thank so much for your effort and time to this generator, I was able to use this as a base to deliver modular and maintainable angular code.  Definitely made my life easier.  Wishing you best of luck in your future endeavors.\n. ",
    "the-james-burton": "Yes, thanks very much for this generator. In the crazy world of web development, this generator has been a sure thing that always 'just works' with no fuss and lets me concentrate on delivering cool stuff without worrying about the build process. I'm sure fountainjs will be just as good an experience when I migrate!\n. ",
    "UnJavaScripter": "You did a great job with this generator, the bes I could find. Sadly I just tried fountainjs and it kinda sucks, so this one is still the best out there.\n. ",
    "eitacode": "This is an awesome project... Thank you all for what you guys have done.  I have learnt so much too from this project.\n. ",
    "rpocklin": "This was the best angular generator I picked for several projects, many thanks and well done!. ",
    "emersonmellado": "To add a new bower component you should use the bower install <package>.\nPlease read this page to see an example: https://github.com/elastic/bower-elasticsearch-js\nAfter that, when you run gulp serve the new dependency should be loaded properly.\n. ",
    "mrdulin": "same issue.\ncss\nbackground: url(../../assets/images/icon-search.png) no-repeat #fff 1rem center;. ",
    "4vanger": "mistype, sorry\n. ",
    "tchiss": "Hi,\nIn your typings.json file, remove the ambientDependencies and leave only the globalDependencies. Then tap the command typings install.\n. ",
    "umair-khanzada": "@devakone :+1:  you save my time thanks.\n. Hi,\nI'm facing the same type of error there is not index.css file after running gulp serve .\n. ",
    "MaximAbramchuck": "Man, you're awesome! Saved hours of my life! Thanks a lot!\n. ",
    "vinod-ttnd": "Thanks a lot @devakone \n. ",
    "cyborg92": "Thanks bro saved me too, had to give demo of my app. ",
    "brunoeris": "the same here.\n. ",
    "adam404": "Update your package.json version for PhantomJS, and re-run npm install:\n\"phantomjs\": \"~2.1.1\"\nWorked for me.\n. ",
    "carlosfunk": "Updating to the latest karma-phantomjs-launcher pulls in PhantomJS 2.1.1.  Also with PhantomJS 2 you don't need karma-phantomjs-shim any more.\nnpm uninstall --save --save-dev phantomjs karma-phantomjs-shim\nnpm install karma-phantomjs-launcher@latest --save --save-dev\nThen edit karma.js.conf and remove any references to phantomjs-shim.\n. ",
    "bertramn": "Had the same problem today, I fixed it by adding the .tmp/serve/fonts output to gulp/build.js so the fonts task looks like this:\njavascript\n// Only applies for fonts from bower dependencies\n// Custom fonts are handled by the \"other\" task\ngulp.task('fonts', function () {\n  return gulp.src($.mainBowerFiles())\n    .pipe($.filter('**/*.{eot,otf,svg,ttf,woff,woff2}'))\n    .pipe($.flatten())\n    .pipe(gulp.dest(path.join(conf.paths.tmp, '/serve/fonts/')))\n    .pipe(gulp.dest(path.join(conf.paths.dist, '/fonts/')));\n});\nAlso need to properly override the bootstrap icon font location in the src/app/index.scss file like this:\nsass\n$icon-font-path: '../fonts/' !default;\nTechnically you can then also remove the \"replace font paths\" line from gulp\\build.js L54. The file would look like this after edits:\nsass\n  return gulp.src(path.join(conf.paths.tmp, '/serve/*.html'))\n    .pipe($.inject(partialsInjectFile, partialsInjectOptions))\n    .pipe($.useref())\n    .pipe(jsFilter)\n    .pipe($.sourcemaps.init())\n    .pipe($.ngAnnotate())\n    .pipe($.uglify({preserveComments: $.uglifySaveLicense})).on('error', conf.errorHandler('Uglify'))\n    .pipe($.rev())\n    .pipe($.sourcemaps.write('maps'))\n    .pipe(jsFilter.restore)\n    .pipe(cssFilter)\n    // .pipe($.replace('../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n    .pipe($.cssnano())\n    .pipe($.rev())\n    .pipe(cssFilter.restore)\n    .pipe($.revReplace())\n    .pipe(htmlFilter)\n   ...\nThen just do a gulp serve and it should come good.\n. Not sure to be honest, I used the generator to create a project with angluar 1.5.x, normal JavaScript (no ES6) and SASS stylesheet processor. The 2 files I referenced above are generated by yo and placed at the relative path of the project folder. So if your workspace is at ~/workspaces/generated the 1st file is located at ~/workspaces/generated/gulp/build.js and the other file at ~/workspaces/generated/src/app/index.scss.\n. ",
    "yyw1994": "well, it doesn't work to mine, if part of the path or file  content should be different on my computer?\n. ",
    "AbdelhadiLahlou": "Hi I had the same problem and changing path in .tmp/serve/index.html is not the solution because it's just a compilation of source/index.html.\nThe Best SOLUTION that I found is to change path in build.js like this:\n.pipe($.replace('../../../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\nand in index.scss liek this:\n$icon-font-path: \"../../bower_components/bootstrap-sass/assets/fonts/bootstrap/\";\n. ",
    "noob9527": "@bertramn this works for me\nafter change \n$icon-font-path: '../fonts' !default;\nto\n$icon-font-path: '../fonts/' !default;\n. ",
    "heshamelmasry77": "so what is the solution now for this . ",
    "sunilkumarkm": "This solution will work.\nIn index.scss add $icon-font-path: \"../bower_components/bootstrap-sass/assets/fonts/bootstrap/\";\nIn gulp/build.js add .pipe($.replace('../bower_components/bootstrap-sass/assets/fonts/bootstrap/', '../fonts/'))\n. ",
    "MasonFI": "gulp build from command-line creates debloyaple files to dist/ folder.. ",
    "kamilshahzad": "for the time being i resolved the issue by adding try catch in \nnode_modules\\clean-css\\lib\\utils\\input-source-map-tracker.js \nfunction trackContentSources(self, sourceFile) {\n  try{\n  var consumer = self.maps[sourceFile].data;\n  var isRemote = REMOTE_RESOURCE.test(sourceFile);\n  var sourcesMapping = {};\nconsumer.sources.forEach(function (file, index) {\nvar uniquePath = isRemote ?\n  url.resolve(path.dirname(sourceFile), file) :\n  path.relative(self.relativeTo, path.resolve(path.dirname(sourceFile), file));\n\nsourcesMapping[uniquePath] = consumer.sourcesContent && consumer.sourcesContent[index];\n\n});\n  self.sourcesContent[sourceFile] = sourcesMapping;\n  }catch(excep){}\n}\nAlthough i am able to produce the build but still waiting for proper solution.\n. ",
    "AndresDevelop": "try this https://support.google.com/chrome/answer/95417?hl=en&co=GENIE.Platform%3DDesktop\nIt worked for me. ",
    "jasel-lewis": "I'm a little late to the party, but possibly this post post will help you.  If the link ever breaks, it deals with injecting BROWSER='Chrome' into your start string (per the post, 'Google Chrome' did not work for me).\nAs an example, for my application I had the below which always opened in IE (work computer, can't change the default browser):\n\"scripts\": {\n    \"start\": \"cross-env PORT=8080 react-scripts start\"\n}\n...and I changed to:\n\"scripts\": {\n    \"start\": \"cross-env PORT=8080 BROWSER='Chrome' react-scripts start\"\n}. ...and here's why BROWSER='Google Chrome' did not work for me (I'm on a Windows system).. ",
    "SanDiegoCasey": "I found this thread, in my case I was trying to run npm Start from a CLI as administrator. When I went back to a regular CLI (not administrator) it launches from Chrome, which is good enough for what I needed. . ",
    "kgopi": "Wrong place !!. ",
    "recurrence": "arrow function would make this slightly more es6-y :)\n. Cool, okay :)   \nI can send a pull request after this gets merged with some es6 updates.\n. ",
    "Kadajett": "Forgot a semicolon. :smile: \n. "
}