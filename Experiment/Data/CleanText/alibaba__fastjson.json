{
    "wenshao": "\u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\uff0c\u6b63\u5728\u5904\u7406\u4e2d\uff0c\u7531\u4e8e\u5bf9Clojure\u4e0d\u719f\u6089\uff0c\u9700\u8981\u82b1\u4e00\u4e9b\u65f6\u95f4\u5b66\u4e60Clojure\n. \u6709\u7684\uff0c\u4f60\u81ea\u5df1\u5b9e\u73b0com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer\u548ccom.alibaba.fastjson.serializer.AutowiredObjectSerializer\uff0c\u7136\u540e\u914d\u7f6e\u5728\u4e0b\u9762\u8fd9\u4e24\u4e2a\u8def\u5f84\u4e2d\uff1a\nMETA-INF/services/com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer\nMETA-INF/services/com.alibaba.fastjson.serializer.AutowiredObjectSerializer\n\u8fd9\u4e2a\u673a\u5236\u7c7b\u4f3c\u4e0ejdk\u81ea\u52a8\u7684ServiceLoader\u3002fastjson\u5185\u90e8\u7684\u4e00\u4e9bSerializer\u548cDeserializer\u4e5f\u662f\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\u5b9e\u73b0\u7684\u3002\n. \u8fd9\u4e2abug 1.1.14\u5df2\u7ecf\u4fee\u590d\u4e86\u3002\n. \u8fd9\u4e2a\u95ee\u9898\u7684\u786e\u5b58\u5728\uff0c\u4f46\u8fd9\u4e2a\u662f\u5426\u7b97\u4e00\u4e2abug\u5462\uff1f\n. \u7528\u8fd9\u4e2a\u7248\u672c\u8bd5\u8bd5\u770b\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.16-SNAPSHOT\uff0c\u770b\u662f\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u3002\n. \u5df2\u7ecf\u6539\u597d\u4e86\uff0c\u8bf7\u4f60\u518d\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u8c22\u8c22\u652f\u6301 \uff1a\uff09\n. fastjson 1.1.19 will support builder's set\n. \u80fd\u4e0d\u80fd\u628a\u95ee\u9898\u63cf\u8ff0\u6e05\u695a\u4e00\u4e9b\uff1f\n. \u65b0\u589e\u52a0\u4e86JSONWriter\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u4f60\u6240\u9700\u8981\u7684\uff0c\u6d4b\u8bd5\u4ee3\u7801\u770b\u8fd9\u91cc\uff1a\nhttps://github.com/AlibabaTech/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/JSONWriterTest.java\n. \u6700\u65b0\u7248\u7684\u5feb\u7167\u5728\u8fd9\u91cc\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.20-SNAPSHOT/\n. add testcase : https://github.com/AlibabaTech/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/ref/TestRef7.java\n. add testcase : https://github.com/AlibabaTech/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Bug_for_xiayucai2012.java\n. \u8c22\u8c22\u53cd\u9988\uff0c\u6211\u4f1a\u5c3d\u5feb\u5904\u7406\n. 1\u3001\u5df2\u7ecf\u7eaa\u5f55\u5728JIRA\u4e2d\uff1ahttp://code.alibabatech.com/jira/browse/FASTJSON-155\n2\u3001\u56de\u5f52\u6d4b\u8bd5\u5728\u8fd9\u91cc\uff1ahttps://github.com/AlibabaTech/fastjson/tree/master/src/test/java/com/alibaba/json/bvt/bug/Bug_for_cnhans.java\n3\u3001\u5feb\u7167\u7248\u672c\u5728\u8fd9\u91cc\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.22-SNAPSHOT/\n. \u4f60\u91cd\u65b0\u83b7\u53d6\u5feb\u7167\u7248\u672c\u770b\u770b\uff0c\u6211\u5df2\u7ecf\u4fee\u590d\u4e86\u3002\n. \u5728\u65b0\u7684NamePreFilter\u4e2d\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u4f60\u63d0\u4ea4patch\u529f\u80fd\uff1apath-based filter\uff0cdelay-eval\u3002\n. \u8fd9\u4e2a\u95ee\u9898\u662f\u4f7f\u7528public field\u5bfc\u81f4\u7684\uff0c\u5982\u679c\u662f\u7528public getter\u6216\u8005setter\u65b9\u6cd5\u5c31\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u5c06\u4f1a\u5c3d\u5feb\u4fee\u6539\u3002\u8c22\u8c22\u4f60\u7684\u53cd\u9988\u3002\n. \u8fd9\u4e2a\u4e0d\u662fbug\n. \u66f4\u65b0\u6700\u65b0\u7248\u672c1.1.24\uff0c\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\n. yes.\nif your use code: https://github.com/AlibabaTech/fastjson/tree/1.1.22_android\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"Timo Mika Gl\u00e4\u00dfer\"notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2012\u5e7410\u670825\u65e5(\u661f\u671f\u56db) \u51cc\u66682:22\n\u6536\u4ef6\u4eba: \"AlibabaTech/fastjson\"fastjson@noreply.github.com; \n\u4e3b\u9898: [fastjson] fastjson / android (#14)\ncan fastjson be made to work on android?\n\u2014\n           Reply to this email directly or view it on GitHub.\n. for android, it's enough!\n. public class SplashActivity extends Activity {\nstatic class Hello { // none static inner class how create instance?\n}\n}\n. thank you report this bug, i have been merged into the chunk. \n. \u6211\u505a\u8fc7\u4e86\u6d4b\u8bd5\uff0c\u662f\u56e0\u4e3a\u4f60\u7684Track\u5bf9\u8c61\u5b57\u6bb5\u547d\u540d\u95ee\u9898\u3002\n\u8fd9\u6837\u4fee\u6539\u5427\uff1a\npublic class Track {\n    public String name;\n    public String color;\n    @JSONField(name=\"abstract\")\n    public String _abstract;\n}\n. \u5df2\u7ecf\u6709\u4e86\uff1aSerializerFeature.BrowserCompatible\n. this is designed feature, not a bug. why you require \"@type\" is not the first element?\n. \u770bcom.alibaba.fastjson.JSON\u7684\u6e90\u7801\uff1a\nfeatures |= com.alibaba.fastjson.serializer.SerializerFeature.SortField.getMask();\n\u786e\u5b9a\u662f\uff01\n. pom.xml\u7684\u4f9d\u8d56\u5efa\u8bae\u7528\u8fd9\u4e2a\uff1a\n<dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>servlet-api</artifactId>\n        <version>2.5</version>\n        <scope>provided</scope>\n    </dependency>\n. you can do this:\n```\n  A a = ....;\n  String json = JSON.toJSONString(a);\nB b = JSON.parseObject(json, B.class);\n```\n. \u4f60\u53ef\u4ee5\u4f7f\u7528JSON.toJSONString(obj, SerializerFeature.BrowserCompatible)\n. 1.1.32\u7248\u672c\u5c06\u4f1a\u652f\u6301\uff01\n. \u662f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0c\u4e0d\u662fbug\uff0cpublic\u7684getter/setter/field\u624d\u80fd\u4f5c\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\n. \u53ef\u4ee5\u4f7f\u7528NameFilter\uff1ahttp://code.alibabatech.com/wiki/display/FastJSON/NameFilter\n. \u53ef\u4ee5\u4f7f\u7528NameFilter\uff1ahttp://code.alibabatech.com/wiki/display/FastJSON/NameFilter\n. \u6ca1\u6709\u56de\u5f52\u6d4b\u8bd5\uff0c\u8bf7\u8fde\u5e26\u6d4b\u8bd5\u4e00\u8d77\u63d0\u4ea4\n. \u5df2\u7ecf\u4fee\u590d\n. \u5df2\u7ecf\u4fee\u590d\n. \u7b2c\u4e00\u6b21\u4e0d\u4f1a\u5feb\u7684\uff0c\u4f60\u6267\u884c1000000\u6b21\u8bd5\u8bd5\u770b\n. \u5206\u5f00\u6765\u8dd1\u5427\uff0c\u4e0d\u8981\u5408\u5e76\u5728\u4e00\u8d77\u8dd1\u3002\u8fd9\u662f\u7b2c\u4e09\u65b9\u72ec\u7acb\u6d4b\u8bd5\u7684\u7ed3\u679c\uff1ahttps://github.com/eishay/jvm-serializers/wiki\n. \u8fd9\u662f\u4e00\u4e2a\u5df2\u77e5\u95ee\u9898\uff0c\u4e0b\u4e2a\u7248\u672c\u4fee\u590d\uff0c\u8c22\u8c22\u53cd\u9988 \uff1a\uff09\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\n. \u975e\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u53cd\u5e8f\u5217\u5316\u9700\u8981\u7236\u7c7b\u6765\u6784\u9020\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b9e\u73b0\u3002\u4f46\u662f\u9759\u6001\u5185\u90e8\u7c7b\u662f\u652f\u6301\u7684\u3002\n. \u4ee3\u7801\u683c\u5f0f\u4e0d\u5bf9\uff0c\u8bf7\u53c2\u8003\u8fd9\u91cc\u7684\u4ee3\u7801\u683c\u5f0f\u6587\u4ef6\uff1ahttps://github.com/alibaba/druid/blob/master/doc/alibaba-oss-code-format.xml\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u4f60\u4e0b\u8f7d\u5feb\u7167\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.30-SNAPSHOT/\n5.1\u56de\u6765\u4e4b\u540e\u6211\u4f1a\u53d1\u5e03\u65b0\u7248\u672c\u3002\n. \u4f60\u6765\u901a\u8fc7pull request\u63d0\u4ea4patch\uff1f\n. \u7a0d\u665a\u4e00\u70b9\u597d\u5427\u3002\u3002\u3002\n. http://code.alibabatech.com/mvn/releases/com/alibaba/fastjson/1.1.33-android/\n. http://code.alibabatech.com/mvn/releases/com/alibaba/fastjson/1.1.33-android/\n. \u5df2\u7ecf\u6539\u597d \uff1a\uff09\n. JSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect)\n. JSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect)\n. please pull request for your patch.\nI suggest to add a constructor, for example:\n```\n  public class NonScientificDoubleSerializer extends DoubleSerializer {\n        private final DecimalFormat format;\n    public NonScientificDoubleSerializer() {\n          this (new DecimalFormat(\"###.#########\")); \n    }\n\n    public NonScientificDoubleSerializer(DecimalFormat format) {\n          this.format = format;\n    }\n\n    ...\n\n```\n}\n. ```\n  public class DoubleSerializer implements ObjectSerializer {\n        public final static DoubleSerializer instance      = new DoubleSerializer();\n        private DecimalFormat                decimalFormat = null;\n    public DoubleSerializer(){\n    }\n\n    public DoubleSerializer(DecimalFormat decimalFormat){\n          this.decimalFormat = decimalFormat;\n    }\n\n    public DoubleSerializer(String decimalFormat){\n          this(new DecimalFormat(decimalFormat));\n    }\n    ... ...\n\n}\n```\n. \u8fd9\u662fException\u7c7b\u578b\u5b57\u6bb5\u503c\u4e3anull\u65f6\u7684BUG\u3002\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8c22\u8c22\u4f60\u7684\u53cd\u9988\u3002\n\u56de\u5f52testcase\u5728\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Bug_for_wsky.java\n\u6700\u65b0\u5feb\u7167\u5df2\u7ecf\u89e3\u51b3\u4e86\u6b64\u95ee\u9898\uff1a\nhttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.32-SNAPSHOT/\n. \u90fd\u662f\u5468\u672b\u5e72\u6d3b\u7684\uff0c\u4f60\u4e3a\u4ec0\u4e48\u5f88\u7740\u6025\u8981android\u4e13\u7248\uff1f\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"youxiachai\"notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2013\u5e746\u670824\u65e5(\u661f\u671f\u4e00) \u51cc\u66681:19\n\u6536\u4ef6\u4eba: \"alibaba/fastjson\"fastjson@noreply.github.com; \n\u6284\u9001: \"\u6e29\u9ad8\u94c1\"szujobs@gmail.com; \n\u4e3b\u9898: Re: [fastjson] \u6e29\u5c11\u554a\uff0c\u5c0f\u5f1f\u6c421.1.31 android \u4e13\u7248\u54df? (#42)\n\u6211\u770b\u5230 1.1.32 \u4e86...\u8fd9\u5468android \u6709\u5e0c\u671b\u5417?\n\u2014\nReply to this email directly or view it on GitHub.\n. \u518d\u665a\u4e00\u70b9\u5427\uff0c\u6211\u6253\u7b971.1.33\u7248\u672c\u53d1\u51fa\u6765\u4e4b\u540e\uff0c\u518d\u53d1android\u4e13\u7248\uff0c\u5927\u7ea67\u6708\u521d\u5427\n. http://code.alibabatech.com/mvn/releases/com/alibaba/fastjson/1.1.33-android/\n. \u6545\u610f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u4e48\uff1f\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5feb\u7167\u7248\u672c\u5728\u8fd9\u91cc\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.33-SNAPSHOT/\n\u6211\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c\u3002\n. \u4f60\u81ea\u884c\u5c01\u88c5\u4e00\u4e2a\u65b9\u6cd5\u597d\u4e86\n. \u5faa\u73af\u5f15\u7528\u548c\u91cd\u590d\u5f15\u7528\u8fd9\u4e24\u4e2a\u76ee\u524d\u6ca1\u6709\u533a\u522b\u5bf9\u5f85\u7684\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u65b9\u6848\n. A -> B -> C -> B -> A\u8fd9\u79cd\u5982\u4f55\u68c0\u6d4b\uff1f\n. A -> B -> C -> A\u8fd9\u79cd\u5462\uff1f\n. \u4f60\u53ef\u4ee5\u901a\u8fc7github\u7684pull request\u63d0\u4ea4patch\u4e48\uff1f\n. \u7531\u4e8e\u65b0\u5f00\u4e86issue\uff0c\u65e7\u8fd9\u4e2a\u5173\u95ed\u3002\n. \u4e0d\u80fd\u7528ConcurrentHashMap\uff0c\u8fd9\u4e2a\u5360\u5185\u5b58\u591a\uff0c\u800c\u4e14\u5f88\u6162\u3002\n. \u665a\u4e0a\u6211\u505a\u6027\u80fd\u56de\u5f52\u4e4b\u540e\u518d\u51b3\u5b9a\u662f\u5426\u5408\u5e76\u4f60\u8fd9\u4e2apull request\uff0c\u8fd8\u662f\u62c5\u5fc3hashmap\u4ee3\u66ffIdentityHashMap\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\n. \u6211\u89c9\u5f97\u5c06\u91cd\u590d\u5f15\u7528\u548c\u5faa\u73af\u5f15\u7528\u5206\u79bb\u4e4b\u540e\uff0c\u5bf9java\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u652f\u6301\u4e0d\u597d\u3002\n. \u52a0\u6263\u62631420452\u76f4\u63a5\u4ea4\u6d41\u5427\n. \u6211\u5148\u5173\u95ed\u4e86\uff0c\u5982\u679c\u6709\u65b0\u60f3\u6cd5\uff0c\u8bf7\u91cd\u65b0\u63d0\u4ea4pull request\n. bug fixed. snapshot version: http://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.33-SNAPSHOT/\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u662f\u5426\u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f\n. \u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\uff0c\u6b63\u5728\u4fee\u590d\u4e2d\uff0c\u8c22\u8c22\u53cd\u9988 \uff1a\uff09\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u5341\u5206\u611f\u8c22\u4f60\u7684\u53cd\u9988\u3002\u6700\u65b0\u5feb\u7167\u7248\u672c\u5728\u8fd9\u91cc\uff1a\n http://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.35-SNAPSHOT\n\u5e76\u4e14\u8865\u4e0a\u4e86\u56de\u5f52\u6d4b\u8bd5\u4e24\u4e2a\uff1a\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/serializer/RefTest7.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/serializer/RefTest8.java\ntest method\u4f60\u540d\u5b57\u547d\u540d\uff0c\u611f\u8c22\u4f60\u7684\u53cd\u9988\uff01\n. PId\u6bd4pId\u66f4\u597d\u5427\uff1f\n. \u52a0\u4e86@JSONField\u5e94\u8be5\u6709\u7528\u7684\uff0c\u4f60\u662f\u600e\u4e48\u7528\u7684\uff1f\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\u3002\n. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.34/\n. \u4ec0\u4e48\u7248\u672c\uff1f\u8fd9\u4e2a\u95ee\u9898\u8bb0\u5f97\u4fee\u6539\u8fc7\n. \u8fd9\u6837\u624d\u5bf9\u7684\uff1a\n@JSONField(name = \"is-abc\")\nprivate boolean abc;\npublic boolean isAbc() {\n     return abc;\n }\n. \u4e0b\u4e2a\u7248\u672c\u5c06\u4f1a\u652f\u6301\u81ea\u52a8\u8bc6\u522b\u4f60\u8fd9\u79cd\u573a\u666f\n. 1.1.34\u7248\u672c\u5df2\u7ecf\u4fee\u590d\u6b64\u95ee\u9898\uff1a\nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.34/\n. \u60b2\u5267\uff0cbug\u786e\u5b9e\u8fd8\u5b58\u5728\u3002\u5306\u5fd9\u53d1\u5e03\u4e2d\u6f0f\u4e86\u8fd9\u4e2a\u3002\n. \u5feb\u7167\u5df2\u7ecf\u53d1\u5e03\uff0c\u8bf7\u5e2e\u5fd9\u9a8c\u8bc1\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.35-SNAPSHOT/\n. Map map = JSON.parseObject(\"{123:'abc'}\", new TypeReference>() {} );\n. \u4ec0\u4e48\u7248\u672c\u554a\uff1f\n. \u5347\u7ea7\u4e3a1.1.33\u5427\uff0c\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u8fc7\u3002\nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.33/\n. 1.1.33\u6b63\u5e38\u4f7f\u7528\u5c31\u597d\u4e86\uff0c\u4f1a\u81ea\u52a8\u628a\u975e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8f6c\u4e3a\u5b57\u7b26\u4e32\u3002\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u6700\u65b0\u5feb\u7167\u7248\u672c\u5728\u8fd9\u91cc\uff1a\nhttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.34-SNAPSHOT/\n. 1.1.34\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u89e3\u51b3\u4e86\u4f60\u7684\u95ee\u9898\uff1ahttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.34/\n. \u8fd9\u4e2a\u662f\u5408\u6cd5\u7684\uff1a\"{123:\\\"abc\\\",123:\\\"abc\\\"}\"\uff0c\u4f60\u4e0a\u9762\u7684\u662f\u975e\u6cd5\u7684\u683c\u5f0f\u3002\n. \u521a\u75281.1.34\u7248\u672c\u6d4b\u8bd5\uff0c\u662f\u597d\u7684\u3002\n. \u60b2\u5267\uff0c\u786e\u5b9ebug\u8fd8\u5b58\u5728\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u5feb\u7167\u5df2\u7ecf\u53d1\u5e03\uff1ahttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.35-SNAPSHOT/\n. \u8fd9\u786e\u5b9e\u662f\u95ee\u9898\uff0c1.1.33\u66fe\u7ecf\u6539\u6210\u8fd9\u6837\u4e86\uff0c\u7531\u4e8e\u62c5\u5fc3\u517c\u5bb9\u95ee\u9898\uff0c1.1.34\u53c8\u6539\u56de\u53bb\u4e86\u3002\n. \u4e3a\u4e86\u517c\u5bb9fastjson-1.1.32\u4ee5\u53ca\u4e4b\u524d\u7248\u672c\uff0c\u539f\u6765\u903b\u8f91\u4e0d\u80fd\u6539\u53d8\u3002\u5982\u679c\u9700\u8981\u6539\u53d8\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a\nTypeUtils.compatibleWithJavaBean = true;\n. \u8bf7\u4f7f\u7528fastjson-1.1.35\u7684\u6700\u65b0\u5feb\u7167\u7248\u672c\u5e2e\u5fd9\u6d4b\u8bd5\uff1a\nhttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.35-SNAPSHOT\n. \u4e0d\u719f\u6089spring-mvc\uff0c\u662f\u5426\u80fd\u591f\u5e2e\u5fd9\u8c03\u8bd5\u4e00\u4e0b\u770b\u600e\u4e48\u56de\u4e8b\uff0c\u5982\u679c\u80fd\u591f\u63d0\u4ea4patch\u5c31\u66f4\u597d\u4e86\uff01\n. \u4f60\u662f\u5426\u80fd\u591f\u5e2e\u5fd9\u8bca\u65ad\u4e00\u4e0b\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u6216\u8005\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\n. \u4f60\u662f\u5426\u53ef\u4ee5\u52a0\u5165\u6211\u4eec\u7684\u6263\u6263\u7fa492748305 \u76f4\u63a5\u6c9f\u901a\uff1f\n. \u95ee\u9898\u6ca1\u6709\u91cd\u73b0\uff0c\u5148\u5173\u95ed\u4e86\n. \u8fd9\u4e2ajavascript\u4e2d\u4e5f\u4e0d\u652f\u6301\u7684\u5427\n. \u7ecf\u8fc7\u6d4b\u8bd5\uff0cfastjson\u4e2d\u4e5f\u662f\u4e0d\u652f\u6301\u8fd9\u6837\u5199\u6cd5\u7684\u3002\n. BUG\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u5e2e\u5fd9\u6d4b\u8bd5\uff1a\nhttp://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.35-SNAPSHOT/\n. \u53ea\u5728long\u7c7b\u578b\u8fd4\u56de\u975evoid\u8fd4\u56de\u503c\u7684setter\u624d\u4f1a\u6709\u95ee\u9898\u3002\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c1.1.35\u7248\u672c\u5c06\u4f1a\u89e3\u51b3\u6b64\u95ee\u9898\u3002\n. \u95ee\u9898\u8be1\u5f02\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c(1.1.35)\u5148\u6d4b\u8bd5\uff0c\u5982\u679c\u91cd\u73b0\u4e86\u6211\u518d\u8ddf\u8fdb\u3002\n. \u8fd9\u6837\u6d4b\u8bd5\u6027\u80fd\uff1a\nJSON.parseObject(\"\", A.class)\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff1a\nhttps://github.com/alibaba/fastjson/commit/15ce7cdb322775dbef0c174a370dbf941be1dec1\n. \u8fd9\u4e2a\u529f\u80fd\u76ee\u524d\u8fd8\u5904\u4e8e\u6d4b\u8bd5\u9636\u6bb5\n. bug fixed. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. \u6211\u4ece @smallnest \u4ee3\u7801\u62f7\u8d1d\u4e00\u4efd\u5185\u7f6e\u57281.2.9\u4e2d\u4e86\uff0c\u5e0c\u671b @smallnest \u5e2e\u5fd9\u7ef4\u62a4\u554a\n. http://code.alibabatech.com/mvn/snapshots/com/alibaba/fastjson/1.1.37-SNAPSHOT/\n\u7528\u6cd5\uff1a\nJSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString)\n. \u5df2\u7ecf\u6709\u5176\u4ed6\u5b9e\u73b0\u65b9\u6848\n. please update newst version. 1.1.41\n. https://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Issue69.java\n. com.alibaba.fastjson.util.TypeUtils.compatibleWithJavaBean = true;\n. fixed in fastjson-1.1.36 \nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.36/\n. \u5df2\u4fee\u590d\uff0c\u7b491.1.42\u7248\u672c\u5427\n. \u4e0d\u518d\u66f4\u65b0android\u7248\u672c\uff0c\u666e\u901a\u7248\u672c\u53ef\u4ee5\u76f4\u63a5\u7528\u5728android\u4e0a\uff0c\u53ea\u662f\u5927\u4e86100k\u3002\n. \u8bf7\u6d4b\u8bd5\u6700\u65b0\u4ee3\u7801\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff1a https://github.com/alibaba/fastjson/commit/0dc9bb818a19aab50006cae7cf4b5e0e06c4cffb\n. \u4f60\u7684patch\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u56de\u5f52\u6d4b\u8bd5\u8dd1\u4e0d\u8fc7\u3002\u8bf7\u6267\u884cmvn test\u786e\u4fdd\u901a\u8fc7\u6240\u6709\u7684\u56de\u5f52\u6d4b\u8bd5\u3002\n. \u5148\u5173\u95ed\u4e86\uff0c\u5faa\u73af\u5e94\u7528\u7684\u57281.1.42\u4e2d\u6709bug fixed\uff0c\u8bf7\u91cd\u65b0\u6d4b\u8bd5\n. \u8fd9\u786e\u5b9e\u662f\u4e00\u4e2abug\uff01\n. java.util.ArrayList\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u4e0d\u7b97\u662fbug\n. \u53ef\u4ee5\u4f7f\u7528Feature.AllowComment\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\uff1a\nJSON.parseObject(\"{....}\", Feature.AllowComment);\n. \u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\u7684\n. bug\u65e9\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528fastjson-1.1.41\n. \u8fd9\u4e2a\u95ee\u9898\u4e0d\u5b58\u5728\uff0c\u8fd9\u4e2a\u4e22\u5931\u4f1a\u91cd\u590d\u751f\u6210\uff0c\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\u3002\n. bug\u5e94\u8be5\u662f\u5df2\u7ecf\u4fee\u590d\uff0c\u5982\u679c\u95ee\u9898\u91cd\u73b0\u8bf7\u91cd\u65b0\u63d0issue\n. \u4f7f\u7528\u4e0d\u5f53\uff0c\u5e76\u975e bug\n. \u8fd9\u4e2a\u6ca1\u597d\u529e\u6cd5\u3002\u3002\u3002\n. \u8fd9\u4e2a\u5df2\u7ecf\u652f\u6301\u4e86\u5427\uff1f\n. JSON.DEFAULT_GENERATE_FEATURE = SerializerFeature.config(JSON.DEFAULT_GENERATE_FEATURE, SerializerFeature.SkipTransientField, false);\n\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5168\u5c40\u7f3a\u7701\u914d\u7f6e\u5b9e\u73b0\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff1a\nhttps://github.com/alibaba/fastjson/commit/4107c116464b0496b7afa3697cfab1a26c35d482\n\u8c22\u8c22\u4f60\u7684\u53cd\u9988\u3002\n. com.alibaba.fastjson.JSONPObject\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/serializer/jsonp/JSONPObjectTest.java\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\n. \u6ca1\u529e\u6cd5\u5b9e\u73b0\n. fastjson support unquoted names, use Feature.AllowUnQuotedFieldNames\n. bug fixed, please use newst version. thank you.\n. \u5185\u5d4c\u7c7b\u9700\u8981\u662f\u9759\u6001\uff0c\u5426\u5219\u65e0\u6cd5\u521b\u5efa\n. \u8fd9\u4e2a\u662f\u5185\u90e8\u65b9\u6cd5\uff0c\u4f60\u4e3a\u5565\u8981\u8c03\u7528\u5462\uff0c\u4e0d\u7b97BUG\n. \u80fd\u5426\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\uff1f\n. \u90a3\u5148\u5173\u95ed\u4e86\n. \u57281.1.42\u4e4b\u540e\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7JSONType\u6765\u914d\u7f6e\u5b9e\u73b0\u3002 @JSONType(serialzeFeatures=SerializerFeature.DisableCircularReferenceDetect)\n\u4f8b\u5982\uff1a\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Issue101.java\n\u4e5f\u6253\u7b97\u652f\u6301@JSONField\uff0c\u4f46\u7531\u4e8e\u8fd9\u6837\u4f1a\u5bfc\u81f4\u63a5\u53e3\u53d8\u66f4\uff0c\u62c5\u5fc3\u4e0d\u517c\u5bb9\uff0c\u4ee5\u540e\u5728\u5b9e\u73b0\u3002\n. \u8fd9\u4e0d\u662fbug\n. bug\u5df2\u7ecf\u4fee\u590d\n. SerializerFeature.NotWriteDefaultValue\uff0c\u57281.1.42\u4e2d\u5f00\u59cb\u652f\u6301\n. SerializerFeature.NotWriteDefaultValue \u8fd9\u4e2a\u8bd5\u8bd5\u770b\uff1f. \u7528\u8fd9\u4e2a\njava\nSerializerFeature.WriteMapNullValue\n\u540d\u5b57\u53d6\u5f97\u4e0d\u591f\u76f4\u89c2\uff0c\u8bd5\u8bd5\u770b\u54c8. \u4e0d\u80fd\u6539\u4e86\uff0c\u5426\u5219\u4f1a\u6709\u517c\u5bb9\u6027\u95ee\u9898\u3002\u76ee\u524d\u914d\u7f6e\u8fd9\u4e2a\uff1a\ncom.alibaba.fastjson.util.TypeUtils.compatibleWithJavaBean = true;\n. \u8fd9\u4e2a\u4e0d\u80fd\u6539\u4e86\uff0c\u56e0\u4e3a\u517c\u5bb9\u95ee\u9898\u3002\u800c\u4e14\u4e0d\u80fd\u76f4\u63a5\u7528Introspector\uff0c\u56e0\u4e3aandroid\u65e0\u6cd5\u7528\u3002\u4e4b\u524d\u6211\u6ca1\u7528Introspector\u662f\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\u3002\u5148\u5173\u95ed\u4e86\uff0c\u6709\u95ee\u9898\u518d\u63d0pul request\u5427\u3002\n. \u4f60\u662f\u5bf9\u7684\uff01\n. \u95ee\u9898\u5c06\u4f1a\u5728fastjson-1.1.42\u7248\u672c\u4fee\u6b63\n. bug fixed. \u8bf7\u7b49\u5f85fastjson-1.1.42\n. \u76ee\u524d\u4e0d\u652f\u6301\n. \u80fd\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\u4e48\uff1f\n. \u6ca1\u6709\u4fe1\u606f\u65e0\u6cd5\u8fdb\u4e00\u6b65\u8bca\u65ad\uff0c\u5148\u5173\u95ed\u4e86\n. \u4e0d\u7b97\u95ee\u9898\n. \u8fd9\u4e2a\u4e0d\u7b26\u5408\u89c4\u8303\n. \u5148\u5408\u5e76\u4e86\uff0c\u4e0d\u4e86\u89e3\u60c5\u51b5\uff0c\u5e0c\u671b\u80fd\u4f60\u662f\u5bf9\u7684\n. \u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u590d\uff0c\u7b49fastjson-1.1.42\u5427\n. JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString)\n. bug fixed. \nhttps://github.com/alibaba/fastjson/commit/34e58dd86fee8666a55eb889889d3c4214130f34\n. bug fixed\n. bug\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u8c22\u8c22\u53cd\u9988\u95ee\u9898\u3002\n. \u8fd9\u4e2a\u529f\u80fd\uff0c\u4e0d\u662fBUG\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\n. bug fixed:\nhttps://github.com/alibaba/fastjson/commit/a637069f34e015a495a6e3806c4bae8d682f123d\n. \u8c22\u8c22\u4f60\u53cd\u9988\u4e86\u8fd9\u4e2a\u5e76\u53d1\u95ee\u9898\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u6b63\uff0c\u5c06\u4f1a\u57281.1.42\u7248\u672c\u4e2d\u4fee\u590d\u3002\n. bug\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. bug\u5728\u6700\u7248\u672c\u90a3\u4e0d\u5b58\u5728\uff0c\u8bf7\u4f7f\u7528fastjson-1.1.41\u4ee5\u4e0a\u7248\u672c\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u6b63\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. \u5df2\u7ecf\u4fee\u590d\n. \u6587\u6863\u770b\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u4ee3\u7801\u4e0d\u80fd\u81ea\u52a8\u5408\u5e76\uff0c\u8bf7\u91cd\u65b0\u63d0\u4ea4pull request\n. \u7531\u4e8e\u5185\u5916\u7f51\u5b89\u5168\u9694\u79bb\u7684\u539f\u56e0\u5bfc\u81f4\u516c\u53f8\u5916\u65e0\u6cd5\u8bbf\u95ee\u4e86\uff0c\u6709\u70b9\u9ebb\u70e6\uff0c\u9700\u8981\u91cd\u65b0\u7533\u8bf7\u8d44\u6e90\u5e76\u4e14\u8fc1\u79fb\uff0c\u5728\u5904\u7406\u4e2d\u3002\n. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u5df2\u7ecf\u4fee\u590d\n. \u4ee3\u7801\u65e0\u6cd5\u5408\u5e76\uff0c\u800c\u4e14\u4e0d\u660e\u786e\u662f\u5426\u80fd\u63d0\u5347\u6027\u80fd\uff0c\u5148\u5173\u95ed\u4e86\u3002\n. \u8bf7\u63d0\u4f9b\u7248\u672c\u4fe1\u606f\uff0c\u65e9\u671f\u7248\u672c\u6709\u8fc7\u8fd9\u6837\u7684\u95ee\u9898\u3002\u8bf7\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002\n. bug\u5df2\u7ecf\u4fee\u590d\n. getter/setter\u65b9\u6cd5\u662f\u600e\u6837\u7684\uff1f\n. \u8fd9\u4e2abug\u5e94\u8be5\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. \u7b2c\u4e00\u4e2a\u70b9\u5efa\u8bae\u4e0d\u597d\u5b9e\u73b0\u3002\u7b2c\u4e8c\u70b9\u53ef\u4ee5\u4f7f\u7528JSONReader\uff0c\u5f88\u7075\u6d3b\u3002\u6bd4\u5982\uff1a\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Issue143.java\n. \u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.1.41\u4ee5\u4e0a\u7248\u672c\n. \u5df2\u7ecf\u5b9e\u73b0\u3002\nhttps://github.com/alibaba/fastjson/commit/b8ee45aa1c6c0a050bb6281e23ccb7f91324c291\n\u7b491.1.42\u7248\u672c\u5427\n. \u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\n. \u90fd\u5e94\u8be5\u662f\u4e0d\u884c\u7684\n. JSON.toJSONString(obj, SerializerFeature.PrettyFormat)\n. \u65b0\u7684\u6587\u6863\u5730\u5740\uff1a\nhttps://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u8bf7\u63d0\u4f9btestcase\uff0c\u6700\u65b0\u7248\u672c\u5e94\u8be5\u5df2\u7ecf\u662f\u652f\u6301\u7684\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\u5462\n. FastJsonHttpMessageConverter\u589e\u52a0\u4e86serializeFitlers\u5c5e\u6027\u5566\n. \u4ee3\u7801\u4e0d\u80fd\u81ea\u52a8\u5408\u5e76\uff0c\u8bf7\u91cd\u65b0\u63d0\u4ea4pull request\n. \u5df2\u7ecf\u624b\u52a8\u5408\u5e76\n. \u6211\u6d4b\u8bd5\u4e86\uff0c\u95ee\u9898\u6ca1\u6709\u91cd\u73b0\n. \u5b57\u7b26\u53d8\u957f\u4e86\uff0c\u5f53\u7136\u53d8\u6162\uff0c\u662f\u5426\u80fd\u591f\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u6570\u636e\uff1f\n. \u6587\u6863\u5730\u5740\uff1a\nhttps://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. @JSONField(format=\"xxxx\")\n. \u4e3a\u4ec0\u4e48\u540c\u65f6\u5b9e\u73b0\u4e24\u4e2a\u63a5\u53e3 \u8fbe\u4e0d\u5230\u8981\u6c42\u5462\uff1f\n. \u6ca1\u6709\u8fdb\u4e00\u6b65\u4fe1\u606f\uff0c\u5148\u5173\u95ed\u4e86\n. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u8bf7\u63d0\u4ea4testcase\uff1f\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.1.42\u7248\u672c\n. \u5185\u90e8\u7c7b\u52a0static\n. \u5185\u5d4c\u7c7b\u52a0\u4e0astatic\u5c31\u597d\u4e86\n. https://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Issue169.java\n\u6211\u6d4b\u8bd5\u8fc7\uff0c\u662f\u5bf9\u7684\u3002\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\n. \u6ca1\u8ba1\u5212\n. \u6682\u65e0\u8ba1\u5212\n. bug\u5df2\u7ecf\u4fee\u6b63\uff0chttps://github.com/alibaba/fastjson/commit/3f3c38e81bedde088826374c2ccf9883c8dd21b9\n\u8bf7\u7b49\u5f85fastjson-1.1.42\n. bug\u5df2\u7ecf\u4fee\u590d\uff0c\u7b491.1.42\u7248\u672c\u5427\n. \u4ec0\u4e48\u573a\u666f\u4e0b\uff1f\u80fd\u91cd\u73b0\u4e48\uff1f\n. 1.1.42\u7248\u672c\u5df2\u7ecf\u4fee\u590d\u4e86\u5faa\u73af\u5e94\u7528\u7684\u95ee\u9898\u3002\u5148\u5173\u95ed\uff0c\u5982\u679c\u4f60\u5728\u53d1\u73b0\u6709\u65b0\u95ee\u9898\uff0c\u518d\u5f00\u4e00\u4e2aissue\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u7b491.1.42\u7248\u672c\u5427\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f85fastjson-1.1.42\n. \u8fd9\u4e2a\u7684\u6587\u672c\u5bb9\u6613\u8ba9\u56f0\u60d1\uff0c\u8fd8\u662f\u7ee7\u7eed\u5b8c\u5584\u5f53\u524d\u7684\u5b9e\u73b0\u5427\n. \u5185\u5d4c\u7c7b\u5fc5\u987bstatic\uff0c\u5426\u5219\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\n. \u6545\u610f\u8fd9\u6837\u7684\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\n. \u8fd9\u4e2a\u65e0\u6cd5\u5b9e\u73b0\n. fastjson\u4ec0\u4e48\u7248\u672c\uff1f\n. \u62b1\u6b49\uff0c\u592a\u4e45\u4e86\uff0c\u8fd8\u80fd\u4f7f\u7528\u6700\u65b0\u7248\u672c1.2.8\u9a8c\u8bc1\u4e48\uff1f\n. \u65f6\u95f4\u592a\u4e45\u4e86\uff0c\u53c8\u65e0\u6cd5\u91cd\u73b0\uff0c\u5148\u5173\u95ed\u4e86\uff0c\u5982\u679c\u80fd\u5e2e\u5fd9\u627e\u5230\u539f\u56e0\uff0c\u8bf7\u91cd\u65b0\u63d0issue\uff0c\u8c22\u8c22\uff01\n. 1.1.42\u4e2d\uff0cJSONField\u52a0\u5165\u4e86ordinal\uff0c\u8fd9\u4e2a\u5e94\u8be5\u662f\u4f60\u9700\u8981\u7684\n. \u77ed\u671f\u5185\u6ca1\u8fd9\u4e2a\u8ba1\u5212\n. \u8bf7\u63d0\u4f9b\u9519\u8bef\u4fe1\u606f\uff1f\n. ```\npublic void test_for_issue() throws Exception {\n    Assert.assertEquals(WebSoscketCommand.A, JSON.parseObject(\"\\\"A\\\"\", WebSoscketCommand.class));\n}\npublic static enum WebSoscketCommand {\n    A, B, C\n}\n```\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.1.42\n. \u6709\u70b9\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\uff0c\u5bb9\u6211\u60f3\u60f3\n. \u8fd9\u4e2a\u6539\u52a8\u4e0d\u5408\u9002\u3002\u3002\u3002\n. \u6587\u6863\u5168\u90e8\u8fc1\u79fb\u5230\u8fd9\u91cc\u4e86\uff1a\nhttps://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. \u662f\u7684\n. \u4f60\u7684\u5bf9\u8c61\u6709\u5faa\u73af\u5f15\u7528\n. \u8fd9\u4e2a\u95ee\u9898\u4ee5\u524d\u4fee\u590d\u8fc7\uff0c\u6211\u65b0\u8865\u5145\u4e86testcase\u6ca1\u91cd\u73b0\u95ee\u9898\u3002\u8bf7\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u3002\n. JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString)\n. \u4f60\u60f3\u600e\u6837\u7684\u5b9a\u5236\uff1f\n. https://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/bug/Issue204.java\n. \u7b491.1.42\u7248\u672c\u5427\n. \u600e\u4e48\u4e2a\u65e0\u6548\u4e86\uff1f\u80fd\u5426\u7ed9\u51fatestcase\uff1f\n. \u662f\u4e0d\u662f\u914d\u7f6e\u5728\u7236\u7c7b\u7684field\u4e2d\u4e86\uff1f\u5982\u679c\u662f\uff0c1.1.42\u5c06\u4f1a\u4fee\u590d\u3002\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u7b49\u5f851.1.42\u7248\u672c\u5427\n. \u4f7f\u7528ValueFilter\uff0chttps://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\n. bug fixed in this commit : https://github.com/alibaba/fastjson/commit/0b932f8bb3d8ab135abb127c797aef3437bf9d4d\n. \u76ee\u524d\u53ea\u652f\u6301\uff1a\n0000-00-00T00:00:00.000\n. \u4f7f\u7528Map\u6216\u8005JavaBean + @JSONField\n. \u4ec0\u4e48\u7248\u672c\uff1f\u8fd9\u4e2a\u65b0\u7248\u672c\u4e2d\u7f3a\u7701\u5c31\u5df2\u7ecf\u662f\u4e86\uff0c\u4ee5\u524d\u9700\u8981\u914d\u7f6e\u7684\n. bug already fixed. please use fastjson-1.1.41\n. bug fixed. https://github.com/alibaba/fastjson/commit/d385bf51d803db22bd02176837cc7b7095ecca77\n. \u4e0d\u6df7\u6dc6\n. \u76ee\u524d\u4e0d\u652f\u6301\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u5f15\u5165\u4e4b\u540e\u5bfc\u81f4\u4f4e\u7248\u672cJDK\u4e0d\u517c\u5bb9\u3002\u5bb9\u6211\u60f3\u60f3\n. \u8fd8\u6709\u8fd9\u79cd\u60c5\u51b5\u554a\u3002\u3002\u3002 \u4ec0\u4e48\u7248\u672c\uff1f\n. \u5404\u79cd\u6d4b\u8bd5\u90fd\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\uff0c\u5148\u5173\u95ed\u4e86\n. \u4e4b\u524d\u6ca1\u5199\uff0c\u6211\u8865\u4e0a\u4e86\uff1a\nhttps://github.com/alibaba/fastjson/wiki/JSONField\n. mvn test can not pass.\ntest_bytes(com.alibaba.json.bvt.JSONTest_Bytes): illegal state: minExp 10, maxExp17, length 23\n  test_utf_4(com.alibaba.json.bvt.parser.TestUTF8_2): illegal state: minExp 10, maxExp17, length 20\n  testBytes(com.alibaba.json.bvt.util.ThreadLocalCacheTest): illegal state: minExp 10, maxExp17, length 2048\n  test(com.alibaba.json.bvt.util.ThreadLocalCacheTest): illegal state: minExp 10, maxExp17, length 2048\n. please pull request again.\n. gradle\u53ef\u4ee5\u4f9d\u8d56maven\u7684\n. \u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\n``` java\n  public static class MyPropertyPreFilter implements PropertyPreFilter {\n    public boolean apply(JSONSerializer serializer, Object source, String name) {\n        String path = serializer.getContext().toString() + \".\" + name;\n\n        if (path.startsWith(\"$.b.d\")) {\n            return false;\n        }\n\n        return true;\n    }\n\n}\n\n. JSON.toJSONString(obj, SerializerFeature.WriteMapNullValue)\n. \u53ef\u4ee5\u7684\n. i'm sorry to tell you, it is a design problem.\n. last version 1.2.8 has not this problem.\n. \"@type\":\"xxx.xxx.A\"\n. \u8fd9\u4e2a\u95ee\u9898\u53ea\u5728Key\u7c7b\u578b\u4e3aInteger\u7684\u573a\u666f\u51fa\u73b0\uff0c\u5982\u4f55\u89e3\u51b3\uff0c\u5bb9\u6211\u60f3\u60f3\n. \u5f88\u62b1\u6b49\u8ba9\u4f60\u7b49\u8fd9\u4e48\u4e45\uff0c\u5df2\u4fee\u590d\u57281.2.9 & 1.1.49.android\n. \u5df2\u7ecf\u652f\u6301\n. \u4f7f\u7528ValueFilter\u6bd4\u8fd9\u4e2a\u597d\n. \u662f\u5b58\u5728\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u597d\u89e3\u51b3\n. \u90a3\u6211\u5148\u5173\u95edissue\u5566\uff0c\u6709\u95ee\u9898\u6b22\u8fce\u518d\u63d0\n. \u5f88\u9057\u61be\u544a\u8bc9\u4f60\uff0c\u8fd9\u662f\u4e00\u4e2a\u8bbe\u8ba1\u95ee\u9898\uff0c\u65e0\u6cd5\u4fee\u590d\u3002\n. \u5df2\u7ecf\u53bb\u6389\uff0c\u8c22\u8c22\u53cd\u9988\n. java\nimport com.alibaba.fastjson.serializer.PascalNameFilter;\nJSON.toJSONString(obj, new PascalNameFilter());\n```\n. \u4e0d\u4ec5\u4ec5\u662f\u7b2c\u4e00\u5c42\uff0c\u6bcf\u5c42\u90fd\u6709\u7684\u3002\n. \u4f7f\u7528SerializerFeature.WriteNonStringKeyAsString\u4e5f\u53ef\u4ee5\u7684\n. \u6211\u4fee\u6539\u4e86\u4f60\u505a\u7684\u5b9e\u73b0\uff0c\u6ce8\u518c\u5230ParserConfig.getGlobalInstance() \u548c SerializeConfig.getGlobalInstance()\u4e0a\u5c31\u53ef\u4ee5\u4e86\n. \u6309\u9053\u7406\u6765\u8bf4\u4e0d\u4f1a\u8d70\u5230\u8fd9\u91cc\u7684\uff0c\u4f60\u80fd\u63d0\u4ea4\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u5df2\u4fee\u590d\n. bug fixed. it will include in 1.2.9\n. \u6700\u65b0\u7248\u6d4b\u8bd5\u65e0\u95ee\u9898\uff0c\u5148\u5173\u95ed\u5566\n. \u4f7f\u7528NameFilter\u6765\u5b9e\u73b0\u5427\u3002https://github.com/alibaba/fastjson/wiki/SerializeFilter\n. \u5347\u7ea7\u65b0\u7248\u672c\u5c31\u597d\u4e86\n. \u65b0\u52a0\u4e86FieldTypeResolver\uff0c\u770b\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42 https://github.com/alibaba/fastjson/wiki/FieldTypeResolver\n. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff1f\n. \u65e0\u6cd5\u91cd\u73b0\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u53cd\u9988\u3002\n. \u5df2\u7ecf\u652f\u6301\uff0c\u57281.2.9\u4e2d\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u7b26\u53f7\\$\n. \u6ca1\u597d\u529e\u6cd5\uff0c\u5148\u5173\u95ed\u5566\u3002\u5982\u679c\u4f60\u6709\u60f3\u6cd5\u518d\u63d0issue.\n. \u8fd9\u4e2a\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c\u3002SerializerFeature.WriteEnumUsingName\u6216\u8005SerializerFeature.WriteEnumUsingToString\n. \u5df2\u7ecf\u652f\u6301\uff0c\u5c06\u4f1a\u57281.2.9\u4e2d\u52a0\u4e0a\u8fd9\u4e2a\u529f\u80fd\n. \u6587\u6863\u5728\u8fd9\u91cc https://github.com/alibaba/fastjson/wiki/ExtraProcessable\n. \u4e0d\u80fd\uff0c\u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\u7684\n. \u6211\u4e0d\u719f\u6089scala\uff0c\u80fd\u5426\u5e2e\u5fd9\u5b9e\u73b0\u4e00\u4e2a\u54c8\uff0c\u53c2\u4e0e\u8fdb\u6765\u4e00\u8d77\u5b8c\u5584\n. \u8ba9\u4f60\u4e45\u7b49\u4e86\uff0c\u5c06\u4f1a\u57281.2.9\u548c1.1.49.android\u7248\u672c\u652f\u6301\u8fd9\u4e2a\u529f\u80fd\u3002\n. \u80fd\u5426\u5e2e\u5fd9\u63d0\u4f9b\u4e00\u4e2a\u91cd\u73b0\u95ee\u9898\u7684testcase\uff0c\u8981\u6c42java\u4ee3\u7801\n. \u5df2\u7ecf\u89e3\u51b3\uff0c1.2.9 & 1.1.49.android\u7248\u672c\u4e2d\u90fd\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002\n. \u5f53TypeUtils.compatibleWithJavaBean=true\u662f\uff0c\u5c31\u662f\u6309\u7167JavaBean\u7684\u89e3\u6790\u89c4\u8303\u8d70\uff0c\u662f\u9075\u4ece\u89c4\u8303\u3002\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u8bf7\u66f4\u65b0\u7248\u672c\u3002\u5148\u5173\u95ed\u5566\uff0c\u5982\u679c\u6709\u95ee\u9898\u518d\u53cd\u9988\u3002\n. \u5e8f\u5217\u5316\u4e0d\u505a\u6539\u52a8\uff0c\u53cd\u5e8f\u5217\u5316\u5bf9{\"isTest\":true}\u505a\u4e86\u667a\u80fd\u8bc6\u522b\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\u5427\n. bug fixed\n. 1.2.9 & 1.1.49.android will fixed this bug.\n. \u95ee\u9898\u4fee\u590d\u4e86\uff0c1.2.9\u4e2d\u4f1a\u4fee\u6b63\u8fd9\u4e2abug\u3002\n. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u6b63\u3002\u57281.2.9\u548c1.1.49.android\u7248\u672c\u4e2d\u90fd\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002\n. \u76ee\u524d\u8fd8\u662f\u4e0d\u597d\u652f\u6301\u7684\uff0c\u4e3a\u5565\u6709\u8fd9\u4e2a\u9700\u6c42\n. https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n\u5df2\u7ecf\u652f\u6301\uff0c\u57281.2.9 & 1.1.49.android\u7248\u672c\u4e2d\u4f1a\u5e26\u4e0a\u8fd9\u4e2a\u529f\u80fd\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8c22\u8c22\u53cd\u9988\n. \u5df2\u7ecf\u5b9e\u73b0\uff0c1.2.9\u5c31\u4f1a\u652f\u6301\n. \u7528\u539f\u6765\u8fd9\u4e2aJSON.toJSONStringZ\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\u7684\uff0c\u6216\u8005\u4f60\u770b\u4ee3\u7801\u81ea\u5df1\u505a\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u5f88\u7b80\u5355\uff0c\u5f88\u597d\u5199\u7684\u3002\n. bug fixed. included in 1.2.9 & 1.1.49.android\n. SerializerFeature.WriteNonStringKeyAsString\n. \u80fd\u628aJavaBean\u7684\u4ee3\u7801\u8d34\u51fa\u6765\u4e48\uff1f\n. \u652f\u6301\u7684\uff0c\u8fd9\u4e2a\u5e94\u8be5\u662fbug\uff0c\u5e0c\u671b\u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase.\n. bug fixed. i will include in 1.2.9 & 1.1.49.android\n. \u53ef\u4ee5\u7528fastjson\u63d0\u4f9b\u7684ParameterizedTypeImpl\u6765\u5b9e\u73b0\uff0c\u5982\u4e0b\njava\n   public <T> Response<T> parse(String text, Class<T> clazz) {\n        ParameterizedTypeImpl type = new ParameterizedTypeImpl(new Type[] { User.class }, null, Response.class);\n        return JSON.parseObject(text, type);\n    }\n. SerializerFeature.WriteEnumUsingName\nSerializerFeature.WriteEnumUsingToString\n\u8fd9\u4e24\u4e2a\u90fd\u6709\u554a\uff0c\u5982\u679c\u90fd\u8bbe\u7f6e\u4e3afalse\uff0c\u5e8f\u5217\u5316\u4f7f\u7528\u7684orinal\n. \u6709\u4e00\u4e9b\uff1acom.alibaba.fastjson.parser.deserializer.ExtraProcessor\n. bug fixed. i will include in 1.2.9 & 1.1.49.android\n. \u5185\u90e8\u975e\u9759\u6001\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u5173\u95edissue\u5566\uff0c\u6709\u95ee\u9898\u518d\u53cd\u9988\n. bug fixed. included in 1.2.9 & 1.1.49.android.\n. \u91cd\u5199\u4e86SymbolTable\uff0c\u4e0d\u4f1a\u518d\u6709\u8fd9\u4e2a\u95ee\u9898\u5566\n. \u8bf7\u5e2e\u5fd9\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\n. \u5df2\u7ecf\u52a0\u4e0a\u4e86\uff0c\u8bf7\u7528\u6700\u65b0\u7248\u672c\u6d4b\u8bd5\uff0c\u5982\u679c\u6709\u95ee\u9898\u5728\u53cd\u9988\u3002\n. \u65e0\u6cd5\u89e3\u51b3\uff0c\u5148\u5173\u95ed\u5566\n. \u8c22\u8c22\u53cd\u9988\u95ee\u9898\uff0c\u4f1a\u5c3d\u5feb\u63a8\u8fdb\u89e3\u51b3\n. \u5982locuslin\u6240\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5148\u5173\u95ed\u5566\uff0c\u5982\u679c\u8fd8\u6709\u95ee\u9898\u8bf7\u518d\u53cd\u9988\n. \u4e0d\u660e\u767d\u4f60\u7684\u610f\u601d\n. \u73b0\u5728\u5c31\u6709SerializerFeature.WriteClassName\n. \u5df2\u7ecf\u89e3\u51b3\uff0c\u8c22\u8c22\u53cd\u9988\n. \u7f3a\u7701\u5c31\u662f\u8fd9\u6837\uff0c\u5982\u679c\u4f60\u9700\u8981\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u53c2\u8003\u8fd9\u91cc https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98 \u7b2c8\u70b9\n. java\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect)\n. 1.2.9 & 1.1.49.android\u90fd\u5c06\u4f1a\u4fee\u590d\u8fd9\u4e2abug\n. \u8fd9\u4e2a\u95ee\u9898\u65e0\u6cd5\u901a\u8fc7fastjson\u89e3\u51b3\u5427\uff0c\u5148\u5173\u95ed\u5566\n. good ideas\n. \u8c22\u8c22\u53cd\u9988\uff0c\u5df2\u7ecf\u8865\u5145\u4e86\u4e00\u4e9b\uff0c\u4f1a\u9010\u6b65\u8865\u4e0a\u66f4\u591a\u4fe1\u606f\u3002\n. \u662f\u7684\uff0c\u4f46\u662f\u4fee\u6539\u4f1a\u5f15\u53d1\u517c\u5bb9\u95ee\u9898\uff0c\u6240\u4ee5\u5c31\u7559\u7740\u8ba9\u4eba\u9119\u89c6\u5427 \n. \u4e0d\u6539\u4e86\uff0c\u6539\u4e86\u6709\u517c\u5bb9\u6027\u7684\u98ce\u9669\n. \u770b\u5230\u8fd9pull request\uff0c\u5f88\u60ed\u6127\uff0c\u4f46\u662f\u6709\u517c\u5bb9\u98ce\u9669\uff0c\u4e0d\u6562\u5408\u5e76\uff0c\u5509\u3002\u3002\u3002\n. \u8bf7\u63d0\u4f9btestcase\n. \u5f88\u68d2\uff0c\u6b22\u8fce\u4ee5\u540e\u6301\u7eed\u53c2\u4e0e\u3002\n. \u5728Oracle JDK\u4e2d\u662f\u5426\u80fd\u91cd\u73b0\u95ee\u9898\uff1f\n. \u8c22\u8c22\u53cd\u9988\uff0c\u6d4b\u8bd5\u4e86\u6700\u65b0\u7248\u672c\u4e0d\u5b58\u5728\u6b64\u95ee\u9898\uff0c\u6211\u5148\u5173\u95ed\u5566\n. \u8bf7\u63d0\u4f9btestcase\n. bug fixed. i will include in 1.2.9 & 1.1.49.android\n. can you show me the code?\n. @jacktan1991 \u8fc7\u53bb\u4e24\u5e74\u7279\u522b\u5fd9\uff0c\u6240\u4ee5\u6ca1\u6709\u53ca\u65f6\u53cd\u9988\u793e\u533a\u3002\u4eca\u5e74\u4e00\u5b9a\u4f1a\u5c3d\u5febissue\u3002fastjson issue\u4e89\u53d6\u63a7\u5236\u572850\u4e2a\u4ee5\u5185\u3002\n. good idea, done!\n. fastjson\u6ca1\u6709\u4f9d\u8d56spring framework\u554a\n. \u5f88\u62b1\u6b49\uff0c\u6ca1\u6709\u53ca\u65f6\u56de\u590d\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\n. \u7528parseObject(json, new TypeReferenche>() {}, parseConfig);\n. \u80fd\u5426\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u8fd9\u6837\u65e0\u6cd5\u8bca\u65ad\n. \u4f30\u8ba1\u662f\u5b57\u7b26\u4e32\u662f\u7a7a\u4e32\uff0c\u6216\u8005\u4e3anull\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u53cd\u9988\n. 1.2.9\u5df2\u7ecf\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u5728SimplePropertyPreFilter\u4e2d\u589e\u52a0\u4e86maxLevel\uff0c\u5177\u4f53\u770b\u8fd9\u91cc \nhttps://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n. \u80fd\u5426\u63d0\u4ea4merge request\uff1f\n. \u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u53bb\u6389\uff0c\u6240\u4ee5\u5148\u5173\u95ed\u5566\n. hibernate\u4e0d\u4f1a\u81ea\u52a8\u88c5\u8f7d\u5bf9\u8c61\u7684\uff0c\u9700\u8981\u624b\u52a8\u88c5\u8f7d\n. \u4fee\u6539\u6587\u4ef6\u592a\u591a\uff0c\u65e0\u6cd5\u5408\u5e76\uff0c\u8bf7\u5355\u72ec\u63d0\u4ea4pull request\n. bug fixed. included in 1.1.49.android & 1.2.9\n. \u7ecf\u6d4b\u8bd5\uff0c\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\n. \u66f4\u6539\u5e8f\u5217\u5316\u4f18\u5148\u7ea7 \u7684\u539f\u56e0\u662f\uff1f\n. \u5176\u4e2dJavaBeanSerializer\u7684\u4fee\u6539\u662f\u4e0d\u6070\u5f53\u7684\uff0c\u6211\u5df2\u7ecf\u6062\u590d\u4e86\u8fd9\u4e2a\u7c7b\n. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4ee3\u7801\uff1f\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5148\u5173\u95ed\u5566\uff0c\u57281.2.9\u4e4b\u540e\u7684\u7248\u672c\u5982\u679c\u8fd8\u6709\uff0c\u91cd\u65b0\u63d0issue.\n. \u8fd9\u4e2a\u662fJPA\u7684\u89c4\u8303\uff0c\u53ea\u662f\u548c\u6301\u4e45\u5316\u5230\u6570\u636e\u6709\u5173\uff0cfastjson\u4e0d\u8ba4\u8fd9\u4e2a\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\u3002\n. \u4e0d\u6539\u4e86\uff0c\u4f1a\u5bfc\u81f4\u517c\u5bb9\u95ee\u9898\u7684\n. \u4f1a\u554a\uff0c\u5df2\u7ecf\u6709\u4eba\u7528\u4e86\u554a\uff0c\u8fd9\u4e2a\u6539\u4e86\u4f1a\u51fa\u95ee\u9898\u3002\u5fcd\u5fcd\u5427\n. \u539f\u6765\u662f\u5c06\u5176\u4ed6\u7c7b\u578b\u7684Map\u8f6c\u4e3aTreeMap\u518d\u5e8f\u5217\u5316\uff0c\u8fd9\u6837\u5f00\u9500\u8f83\u5927\uff0c\u5982\u679c\u9700\u8981\uff0c\u7528ValueFilter\u5c06Map\u8f6c\u6210TreeMap\u3002\n. '\\n' at the end string caused the error. bug fixed, i will include in 1.2.9 & 1.1.49.android\n. \u7528@foxinmy \u63d0\u4f9b\u7684\u529e\u6cd5\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u6211\u5c31\u5148\u5173\u95edissue\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\n. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u8981\u7684. \u4ec0\u4e48\u60c5\u51b5\uff1f\n. \u6d4b\u8bd5\u8fc7\uff0c\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\u5427\n. \u6211\u6d4b\u8bd5\u4e86\u6709\u6ca1\u95ee\u9898\u54c8\uff1f. \u6211\u5148\u5173\u95ed\u5566\uff0c\u5982\u679c\u6709\u95ee\u9898\u518d\u63d0\u65b0\u7684issue. \u8fd9\u4e2abug\u5728\u6700\u65b0\u7248\u672c\u4e2d\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\n. \u8fd9\u4e2a\u6709\u9700\u6c42\u4e48\uff1f\u4ec0\u4e48\u573a\u666f\uff1f\n. \u53bb\u6389\u5f15\u53f7\u5c11\u4e0d\u4e86\u591a\u5c11\u7684\uff0c\u4f7f\u7528JSONArray\u4ee3\u66ffJSONObject\u624d\u80fd\u5927\u5e45\u51cf\u5c11\u5927\u5c0f\u3002\u4f7f\u7528gzip\u538b\u7f29\u4e5f\u53ef\u4ee5\u3002\n. \u53bb\u5f15\u53f7\u4f1a\u6709\u5f88\u591a\u6b67\u4e49\uff0c\u8fd9\u4e2a\u529f\u80fd\u4e0d\u5408\u9002\u3002\n. \u5f88\u597d\uff0c\u4f46\u8bf7\u8865\u5145TestCase\n. \u4ee3\u7801\u5199\u7684\u4e0d\u591f\u597d\uff0c\u6211\u5408\u5e76\u4e86\u518d\u6539\u5427\n. \u4fee\u6539\u4e86\u5b9e\u73b0\uff0c\u5982\u679c\u6ca1\u6709\u8c03\u7528toJSONStringWithDateFormat\uff0c\u5c31\u4e0d\u4f1a\u81ea\u52a8\u914d\u7f6eWriteDateUseDateFormat\u4e86\u3002\n. \u5f88\u597d\uff0c\u4f46\u8bf7\u8865\u5145TestCase\n. \u4e0d\u597d\u5b9e\u73b0\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\n. \u5df2\u7ecf\u652f\u6301\uff0c\u57281.2.9\u4e2d\u4f1a\u5e26\u4e0a\u8fd9\u4e2a\n. \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684com.alibaba.fastjson.serializer.PascalNameFilter\u6765\u5b9e\u73b0\njava\nJSON.toJSONObject(obj, new com.alibaba.fastjson.serializer.PascalNameFilter());\n. \u5982\u679c\u4e0d\u662f\u6570\u5341M\u4ee5\u4e0a\u7684\u6587\u672c\uff0creadToString\u7136\u540eparse\u901f\u5ea6\u66f4\u5feb\u3002\u4e0d\u6253\u7b97\u652f\u6301\u8fd9\u4e2aAPI\uff0c\u5148\u5173\u4e86\u554a\n. \u6ca1\u6709\u53d8\u66f4\u554a\u3002\u3002\u3002\n. SerializerFeature.WriteClassName \u8bbe\u8ba1\u6210\u8fd9\u6837\u7684\uff0c\u4e0d\u662fbug\n. fastjson\u6709JSONField\u5b57\u6bb5\u554a\uff0cfastjson\u4e0d\u80fd\u652f\u6301jackson\u7684Annotation\u5427\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n``` java\npublic class Json {\nprivate final String value;\npublic Json(String value) {\nthis.value = value;\n}\n@JSONField(name=\"value\")\npublic String value() {\nreturn value;\n}\n}\n```\n. 1.2.7\u65b0\u589e\u52a0\u4e86com.alibaba.fastjson.serializer.SerializerFeature.IgoreNonFieldGetter\uff0c\u5c31\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\n. \u597d\u4e3b\u610f\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4f1a\u5f71\u54cd\u5230\u5bf9\u6cdb\u5f62\u7684\u652f\u6301\u5427\n. bug fixed. it will include in 1.2.9.\n. Good idea\uff01\n. this feature has bean supported. Chinese Document: https://github.com/alibaba/fastjson/wiki/LabelFilter\ntest case : https://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/serializer/label/LabelIncludeTest3.java\n. \u8dd1\u4e00\u6b21\u9884\u70ed\u4e0d\u7b97\u554a\n. \u9700\u8981\u5c06SerializeConfig\u7f13\u5b58\u8d77\u6765\uff0c\u6216\u8005\u4f7f\u7528SerializeConfig.globalInstance\n. \u4ee3\u7801\u683c\u5f0f\u4e0d\u5bf9\uff0c\u4fee\u6539\u8fd9\u4e48\u591a\u884c\uff0c\u4e0d\u80fd\u5408\u5e76\u554a\uff01\n. \u8bf7\u63d0\u4f9bTestcase\n. Many implementations report the last name/value pair only.  Other implementations report an error or fail to parse the object, and some implementations report all of the name/value pairs, including duplicates.\nrfc7159\u5e76\u6ca1\u6709\u8bf4\u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7279\u6027\u4e0d\u505a\u3002\n. bug fixed. i will include in 1.2.9 & 1.1.49.android\n. \u6211\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u53cd\u9988\n. \u914d\u7f6e@JSONField\u5427\n. \u5df2\u5408\u5e76\u4ee3\u7801\n. \u65e0\u6cd5\u5408\u5e76\u4e86\uff1f\n. \u8c22\u8c22\u53cd\u9988\uff0c\u53bb\u6389\u4e86\n. \u8c22\u8c22\u53cd\u9988\uff0c\u53bb\u6389\u4e86\n. bug fixed. included in 1.2.9 & 1.1.49.android\n. bug fixed. included in 1.2.9 & 1.1.49.android\n. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f\n. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f\n. com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(Object) \u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\n. com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(Object) \u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\n. \u53ef\u4ee5\u63d0\u5347\u6027\u80fd\n. \u53ef\u4ee5\u63d0\u5347\u6027\u80fd\n. JSON.parse(JSON.toJSONString(1));\n. JSON.parse(JSON.toJSONString(1));\n. bug fixed. it will include in 1.2.9 & 1.1.49.android.\n. \u8bf7\u53c2\u8003GinKoSen\u7ed9\u7684\u8fde\u63a5\n. supported. it will included in 1.2.9.\n. \u4e0d\u652f\u6301\uff0c\u4e0d\u60f3\u652f\u6301\u548cxml\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u8bf7\u4e13\u6ce8\u4f7f\u7528json\uff0c\u8fdc\u79bbxml\n. \u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u8c03\u7528JSON.toJSONString\u5c31OK\u4e86\uff0c\u6ca1\u5565\u7279\u522b\u554a\u3002\n. \u8fd9\u4e2a\u4e0d\u7b26\u5408JavaBean\u89c4\u8303\uff0c\u4e0d\u80fd\u5408\u5e76\uff01\n. Object[] items = JSON.parseObject(\"[...]\", Object[].class);\n. \u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u7528Object[]\uff1f\n. \u65b0\u52a0\u4e86\u4e00\u4e2aFeature.UserObjectArray\uff0c1.2.9\u7248\u672c\u4f1a\u5e26\u4e0a\u8fd9\u4e2a\u529f\u80fd\u3002\n. \u5f88\u62b1\u6b49\u7ed9\u4f60\u9020\u6210\u56f0\u6270\uff0c\u5728\u6700\u65b0\u7248\u4e2d\u6ca1\u6709\u91cd\u73b0\u4f60\u7684\u95ee\u9898\u3002\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\n. \u8fd9\u4e2abug\u5df2\u7ecf\u4fee\u6b63\u4e86\u7684\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u611f\u89c9\u8fd9\u4e2a\u4e0d\u662ffastjson\u60f3\u505a\u7684\u4e8b\u60c5\n. @FuweiChin \u4e0d\u597d\u610f\u601d\uff0c\u6211\u7406\u89e3\u9519\u4f60\u7684\u610f\u601d\u4e86\uff0c\u73b0\u5728\u5c31\u6709\u76f8\u5e94\u7684ObjectDeserializer\u548cObjectSerializer\uff0c\u76f8\u5e94\u7684\u6587\u6863\u662f\nhttps://github.com/alibaba/fastjson/wiki/ObjectSerializer_cn\nhttps://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n\u53e6\u5916\u6709\u8fd9\u4e24\u4e2aAPI\njava\npublic abstract class JSON {\n      public static Object toJSON(Object javaObject);\n      public <T> T toJavaObject(Class<T> clazz);\n}\n. got it\n. it's supported since 1.2.8, but 1.2.9 & 1.2.10 & 1.2.11 has a bug, will fixed in 1.2.12.\njava\nSerializeConfig config = new SerializeConfig();\nconfig.setTypeKey(\"%type\");\n. fastjson-1.1.51.android not support customType key, it will support in 1.1.52.android version, may be release on May 22.\n. fastjson 1.2.11 support 'seeAlso', and will backport to 1.1.52.android. This is the introduction 'seeAlso' :\nhttps://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn\n. 1.1.52.android released. https://github.com/alibaba/fastjson/releases/tag/1.1.52.android\n. bug can not be reproduced in last version (1.2.9 & 1.1.49.android), so i closed this issue. if you have any question, please create new issue. thank you!\n. \u4e0d\u4f1a\u7684\uff0c\u4f30\u8ba1\u662f\u4f60\u6bcf\u6b21\u90fdnew SerializeConfig\u548cnew ParserConfig.\n. bug fixed. it will include in 1.2.9 & 1.1.49.android\n. \u7b26\u5408\u671f\u5f85\uff0c\u5c31\u5e94\u8be5\u662f1\u554a\n. \u65b0\u7248\u672c\u6ca1\u95ee\u9898\uff0c\u5148\u5173\u95ed\u5566\n. \u57281.2.9\u4e2d\u53ef\u4ee5\u8fd9\u6837\njava\nJSON.toJSONString(object, SerializeConfig.globalInstance, null, null, 0);\n. \u8bf7\u63d0\u4f9b\u80fd\u91cd\u73b0\u95ee\u9898\u7684testcase\n. 1.1.49.android\u5c06\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\n. \u4e0d\u597d\u5b9e\u73b0\uff0c\u5185\u90e8\u90fd\u662fyear/month/day/hour/minute/second\u8fd9\u6837\u5b9e\u73b0\u7684\uff0c\u8f6c\u6210\u6beb\u79d2\u6570\u4e0d\u6070\u5f53\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\u3002\n. \u57281.1.49.android\u7248\u672c\u4e2d\u5c06\u4f1a\u652f\u6301\n. \u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\u5427\n. \u6d4b\u8bd5\u65b0\u7248\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\uff0c\u5148\u5173\u95ed\u5566\n. bug fixed. it will include in 1.2.9 & 1.1.49.android\n. bug fixed. 1.2.9\u7248\u672c\u4e2d\u4f1a\u4fee\u590d\u8fd9\u4e2abug\u3002\n. \u7528\u4f60\u7684testcase\u5728\u6700\u65b0\u7248\u672c\u4e2d\u53d1\u73b0\u95ee\u9898\u4e0d\u5b58\u5728\uff0c\u5148\u5173\u95ed\u5566\uff0c\u6709\u95ee\u9898\u518d\u63d0\u3002\n. thank you!\n. 1.2.9\u4e2d\u4f1a\u52a0\u4e0a\n. \u53ef\u4ee5\u901a\u8fc7SerializeConfig. getGlobalInstance() \u6216\u8005 ParserConfig.getGlobalInstance() \u6ce8\u518c\u81ea\u5df1\u5b9e\u73b0\u7684ObjectSerializer & ObjectDeserializer\n. Enum\u7684\u7c7b\u548c\u81ea\u5b9a\u4e49\u7684EnumSerDeserializer\u65b9\u4fbf\u8d34\u4e0a\u6765\u4e48\uff1f\n. bug fixed. it will include in 1.2.9 & 1.1.49.android\n. \u4e3a\u5565\u6709\u8fd9\u79cd\u9700\u6c42\uff1f\n. https://github.com/alibaba/fastjson/wiki/TypeReference \n\u8fd9\u4e2a\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f\n. https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn \u770b\u8fd9\u4e2a\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f\n. \u5df2\u7ecf\u6709\u8fd9\u6837\u7684\u529f\u80fdFeature.DisableSpecialKeyDetect\uff0c\u57281.2.5\u4e4b\u540e\u5c31\u6709\u4e86\u3002\n. It will not compatible...\n. \u90a3\u6211\u5148\u5173\u95ed\u4e86\u554a\n. \u90fd\u5927\u4e8eLong.MAX_VALUE\u4e86\uff0c\u4e0d\u4f7f\u7528BigInteger\u600e\u4e48\u884c\u554a\uff1f\n. \u6d4b\u8bd5\u8fc7\u4e86\uff0c\u6ca1\u95ee\u9898\n. \u4ee3\u7801\u683c\u5f0f\u5316\u4e0d\u5bf9\uff0c\u5bfc\u81f4\u770b\u8d77\u6765\u4fee\u6539\u884c\u6570\u8fc7\u591a\uff0c\u4e0d\u597d\u505acode review\uff0c\u80fd\u5426\u8c03\u6574\u683c\u5f0f\u4e4b\u540e\u91cd\u65b0\u63d0\u4ea4\u3002\n. \u57281.2.9\u4e2d\u5c06\u4f1a\u4f7f\u7528\u56fa\u5b9a\u7684\u987a\u5e8f\n. \u786e\u8ba4\u6709bug\uff0c\u5c06\u4f1a\u57281.2.9\u4e2d\u4fee\u590d\n. new\u5bf9\u8c61\u7684\u9ed8\u8ba4\u503c\u65e0\u6cd5\u5b9e\u73b0\uff0c\u4f60\u6709\u597d\u529e\u6cd5\u4e48\uff1f\n. \u9700\u8981\u624b\u52a8\u88c5\u8f7d\u8be5\u5c5e\u6027\uff0cfastjson\u4e0d\u4f1a\u81ea\u52a8\u88c5\u8f7d\n. \u6700\u65b0\u7248\u672c\u662f\u597d\u7684\uff0c\u5efa\u8bae\u5347\u7ea7\u65b0\u7248\n. \u6d4b\u8bd5\u8fc7\u65b0\u7248\u672c\u8fd9\u4e2abug\u4e0d\u5b58\u5728\u4e86\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\u5427\n. \u5df2\u652f\u6301\n. \u8fd8\u8981\u914d\u7f6e\u8fd9\u4e2a\uff1aSerializerFeature.WriteMapNullValue\n. \u5e94\u8be5\u8fd9\u6837\u5199 \njava\nJSON.parseObject(json,new TypeReference<B<C>>(){});\n. \u5df2\u7ecf\u4fee\u6b63\uff0c\u8c22\u8c22\u53cd\u9988\u3002\n. null\u9ed8\u8ba4\u4e0d\u5e8f\u5217\u5316\uff0c\u957f\u5ea6\u4e3a0\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528ValueFilter\u505a\u8fc7\u6ee4\u3002https://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\n. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\u53d1\u5e03\u5427\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u57281.1.49.android\u548c1.2.9\u7248\u672c\u4e2d\u53d1\u5e03\uff0c\u7b49\u5f85\u65b0\u7248\u672c\u5427\u3002\n. https://github.com/alibaba/fastjson/commit/ec44a23d75bade5cd4cf969069e4e5d7c26e73c7\nfastjson-1.2.8\u7248\u672c\u5c06\u4f1a\u76f4\u63a5\u652f\u6301oracle.sql.Date\u548coracle.sql.TIMESTAMP\u7c7b\u578b\u3002\n\u4e4b\u524d\u5b9a\u5236\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u770b\u8fd9\u91cc\uff1ahttps://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\n. @JSONField(name = \"items\")\nprivate List templateItems;\n\u6216\u8005\n@JSONField(name = \"items\")\npublic void setmTemplateItems(List mTemplateItems) {\n        this.mTemplateItems = mTemplateItems;\n}\n. \u4f60\u7684\u5b57\u6bb5\u547d\u540d\u4e3atemplateItems \u8fd9\u6837\u7684\uff0c\u624d\u80fd\u81ea\u52a8\u5c06\u5b57\u6bb5\u548cgetter/setter\u65b9\u6cd5\u5173\u8054\u3002\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.8\u53d1\u5e03\n. JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString)\n. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.46.android/ \u76ee\u524d\u6240\u6709\u7684bug fixed\u90fdback port\u52301.1.46\u7684\n. \u65b0\u529f\u80fd\uff0c\u5982\u679c\u4e0d\u662f\u5927\u7684\u6539\u53d8\uff0c\u90e8\u5206\u4f1abackport\u52301.1.x.android\u4e0a\n. \u6700\u65b0\u7248\u672c1.1.48.android\u5df2\u7ecf\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u3002\n. \u6536\u5230\uff0c\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4ee3\u7801\uff1f\n. \u95ee\u9898\u5c06\u4f1a\u57281.2.9 & 1.1.49.android\u4e0a\u4fee\u590d\n. ``` java\npublic class Bug_for_issue_490 extends TestCase {\nprivate final OkHttpClient client = new OkHttpClient();\n\npublic void test_for_issue() throws Exception {\n    Request request = new Request.Builder().url(\"https://api.github.com/gists/c2a7c39532239ff261be\").build();\n    Response response = client.newCall(request).execute();\n    if (!response.isSuccessful()) {\n        throw new IOException(\"Unexpected code \" + response);\n    }\n\n    Gist gist = JSON.parseObject(response.body().string(), Gist.class);\n    response.body().close();\n\n    for (Map.Entry<String, GistFile> entry : gist.files.entrySet()) {\n        System.out.println(entry.getKey());\n        System.out.println(entry.getValue().content);\n    }\n}\n\npublic static class Gist {\n    public Map<String, GistFile> files;\n}\n\npublic static class GistFile {\n    public String content;\n}\n\n}\n```\n. fastjson only support public field & public getter/setter method, it's different to gson. \n. \u5df2\u7ecf\u589e\u52a0\u4e86\u76f8\u5173API\uff0c\u6587\u6863\u770b\u8fd9\u91cc https://github.com/alibaba/fastjson/wiki/TypeReference\n. \u53ef\u4ee5\u7528fastjson\u7684JSONPath\u554a\nhttps://github.com/alibaba/fastjson/wiki/JSONPath\n. \u65b0\u52a0api\njava\npublic class JSONPath {\n    /**\n     * @since 1.2.9\n     */\n    public static Object read(String json, String path);\n}\n. \u6536\u5230\uff0c\u9488\u5bf9\u5927\u6587\u4ef6\u7684\u4f18\u5316\u786e\u5b9e\u6ca1\u505a\u8fc7\uff0c\u505a\u4e00\u6b21\u8c03\u4f18\u5e94\u8be5\u80fd\u63d0\u5347\u6027\u80fd\uff0c\u4f1a\u5c3d\u5feb\u5904\u7406\uff0c\u8c22\u8c22\u53cd\u9988\u3002\n. \u80fd\u5426\u5e2e\u5fd9\u6d4b\u8bd5\u4e00\u4e0b\u65b0\u7248\u672c\u662f\u5426\u95ee\u9898\u8fd8\u5b58\u5728\uff0c1.2.11\n. \u7528\u7684hibernate\u6846\u67b6\uff1f\n. \u9488\u5bf9mybatis org.apache.ibatis.javassist.util.proxy.ProxyObject\u505a\u4e86\u5904\u7406\uff0c\u7b491.2.9\u7248\u672c\u5427\n. JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString);\n. \u4ec0\u4e48\u7248\u672c\uff1f\u6211\u6d4b\u8bd5\u662f\u597d\u7684\uff0c\u5982\u679c\u4f60\u66f4\u65b0\u6700\u65b0\u7248\u672c\u4e4b\u540e\u8fd8\u6709\u95ee\u9898\uff0c\u8bf7\u63d0\u4f9bGoods\u7684\u4ee3\u7801\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u7b49\u65b0\u7248\u672c1.2.9\u53d1\u5e03\u5427\n. \u54c7\uff0c\u8fd9\u4e48\u5927\u7684\u6570\u5b57\uff0c\u7528\u5728\u4ec0\u4e48\u573a\u666f\uff1f\n. \u5df2\u7ecf\u89e3\u51b3\uff0c\u8bf7\u7b49\u5f851.2.8\u7248\u672c\n. https://github.com/alibaba/fastjson/pull/499/files\n. \u6709\u70b9\u5947\u602a\u4e86\n. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c1.2.8\u770b\u770b\n. 1.2.9\u91cd\u5199\u4e86SymbolTable\uff0c\u4e0d\u4f1a\u518d\u6709\u8fd9\u4e2a\u95ee\u9898\u5566\n. \u4e2d\u6587\u65b9\u6cd5\u540d\uff0c\u4f60\u5f3a\uff01\u53ef\u4ee5\u4f7f\u7528@JSONField(name=\"\u7c7b\u578b\")\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.8\u7248\u672c\u53d1\u5e03\n. https://github.com/alibaba/fastjson/commit/965d015aa4939a2610995cc8d85b34dcd94aabd0\n. bug fixed. \nhttps://github.com/alibaba/fastjson/commit/87151e70ef7980ffa6dcb3ed14f8b4986496886a\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u5e0c\u671b\u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\n. \u6700\u65b0\u7248\u672c\u95ee\u9898\u5e94\u8be5\u5df2\u7ecf\u4fee\u590d\uff0c\u5148\u5173\u95ed\u5566\uff0c\u5982\u6709\u95ee\u9898\u8bf7\u5e2e\u4f60\u518d\u53cd\u9988\n. \u8fd9\u4e2a\u5b9e\u73b0\u8981\u505a\u8f83\u591a\u7684\u5de5\u4f5c\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4e3a\u5565\u8981\u6539\u8fd9\u4e2a\u554a\u3002\u3002\u3002\n. \u8c22\u8c22\u4f60\u7684patch :+1: \n. \u5408\u5e76\u4e86\u4e00\u4e2apull request https://github.com/alibaba/fastjson/pull/515 \u4ed6\u4f7f\u7528\u4e86JDK 8\u7684api\u3002\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u8c22\u8c22\u53cd\u9988\n. \u653e\u5728getter\u4e0a\u662f\u5bf9\u5e8f\u5217\u5316\u8d77\u4f5c\u7528\uff0c\u653e\u5728setter\u4e0a\u662f\u5bf9\u53cd\u5e8f\u5217\u5316\u8d77\u4f5c\u7528\u3002\n. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. class\u7684\u5b9a\u4e49\u662f\u600e\u6837\u7684\uff0c\u6ca1\u91cd\u73b0\u95ee\u9898\n. \u80fd\u5426\u63d0\u4f9bMyClass.class\u7684\u5b9a\u4e49\uff1f\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\u5c31\u65e0\u6cd5\u4fee\u590d\n. \u6536\u5230\uff0c\u6709\u4e00\u5b9a\u9053\u7406\n. \u8c22\u8c22\u53cd\u9988\uff0c\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.9\u7248\u672c\n. \u5df2\u7ecf\u5b9e\u73b0\uff0c\u8bf7\u7b491.2.9\u7248\u672c\u53d1\u5e03\u5427\n. \u56e0\u4e3a\u6709get _embedded()\u65b9\u6cd5\u5b58\u5728\uff0c\u81ea\u52a8\u8bc6\u522b\u4e3aembedded\u4e86\uff0c\u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u4e0d\u7b97bug\n. \u4e5f\u53ef\u4ee5\u4f7f\u7528ValueFilter\u5904\u7406\u591a\u4f59\u7684\u5b57\u7b26\u3002\u6bd4\u5982 https://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\n. \u8fd9\u662f\u7279\u6027\uff0c\u5982\u679c\u60f3\u5173\u95ed\u8fd9\u4e2a\u7279\u6027\uff1aJSON.toJSONString(object, SerializerFeature.DisableCircularReferenceDetect)\n. \u5df2\u7ecf\u652f\u6301\u957f\u5ea6\u4e3a0\u7684\u5b57\u7b26\u4e32\u8bfb\u53d6\u4e3a\u7a7a\u5bf9\u8c61\u30021.2.9 & 1.1.49.android\u4e2d\u5e26\u8fd9\u4e2a\u529f\u80fd\u3002\n. \u4f60\u7528\u7684\u4ec0\u4e48\u7248\u672c\uff1f\uff0c\u6211\u6d4b\u8bd5\u52301.1.47.android\u7248\u672c\u6709\u95ee\u9898\uff0c\u5df2\u7ecf\u4fee\u590d\u3002\u544a\u8bc9\u6211\u4f60\u7528\u7684\u54ea\u4e2a\u7248\u672c\uff0c\u6211\u597d\u505a\u9a8c\u8bc1\u3002\n. \u8fd9\u662f\u4e00\u4e2abug\uff0c\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f85\u51e0\u5929\uff0c\u7b49\u6211\u53d1\u5e031.2.9\u7248\u672c\n. \u95ee\u9898\u627e\u5230\uff0c\u662f\u56e0\u4e3awriteClassName\u5f15\u8d77\u7684\uff0c\u6211\u5c06\u4f1a\u53d1\u5e03fastjson-1.2.9\u548cfastjson-1.1.48.android\u7248\u672c\u4fee\u590d\u8fd9\u4e2abug\u3002\n. \u53ef\u4ee5\u7684\uff0c\u4f60\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\uff0c\u6211\u597d\u80fd\u9488\u5bf9\u6027\u89e3\u51b3\u4f60\u95ee\u9898\u7684\n. \u5df2\u7ecf\u8865\u4e0a\u51fa\u9519\u4fe1\u606f\uff0c\u5c06\u4f1a\u57281.2.9\u548c1.1.49.android\u7248\u672c\u4e0a\u53d1\u5e03\u3002\n. \u80fd\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\u4e48\uff1f\n. \u53c2\u8003\u8fd9\u4e2a https://github.com/alibaba/fastjson/wiki/SerializeFilter\n. parse\u8fd8\u662ftoJSONString\u65f6\u7684\u9700\u6c42\uff1f\n. \u5df2\u7ecf\u6709\u8fd9\u6837\u7684\u529f\u80fdFeature.DisableSpecialKeyDetect\uff0c\u57281.2.5\u4e4b\u540e\u5c31\u6709\u4e86\u3002\n. \u53ef\u4ee5\u4f7f\u7528com.alibaba.fastjson.serializer.BeforeFilter\u6765\u5b9e\u73b0\u4f60\u7684\u9700\u6c42\u3002\n``` java\n   public void test_beforeFilter() throws Exception {\n        BeforeFilter filter = new BeforeFilter() {\n        @Override\n        public void writeBefore(Object object) {\n            this.writeKeyValue(\"id\", 123);\n        }\n    };\n    Assert.assertEquals(\"{\\\"id\\\":123}\",JSON.toJSONString( new VO(), filter));\n}\n\npublic void test_beforeFilter2() throws Exception {\n    BeforeFilter filter = new BeforeFilter() {\n\n        @Override\n        public void writeBefore(Object object) {\n            this.writeKeyValue(\"id\", 123);\n            this.writeKeyValue(\"name\", \"wenshao\");\n        }\n    };\n    Assert.assertEquals(\"{\\\"id\\\":123,\\\"name\\\":\\\"wenshao\\\"}\", JSON.toJSONString(new VO(), filter));\n}\n\nprivate static class VO {\n\n}\n\n. \u8fd9\u662f\u4e00\u4e2a\u6253\u5305\u9519\u8bef\uff0c\u60b2\u5267\u4e86\uff0c\u8bf7\u5148\u505aexclude\u5904\u7406\u5427\u3002\u6211\u5df2\u4fee\u6b63pom.xml\uff0c\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u4fee\u6b63\u8fd9\u4e2a\u95ee\u9898\u3002\n. \u4f8b\u5b50\u6709\u4f9d\u8d56netty\uff0c\u4e0d\u77e5\u5177\u4f53\u7248\u672c\uff0c\u65e0\u6cd5\u91cd\u73b0\uff0c\u5982\u679cjson\u5b57\u7b26\u4e32\u4e0d\u662f\u5f88\u5927\uff0c\u6570\u5341M\u7684\u90a3\u79cd\uff0c\u4e0d\u8981\u7528Stream API\uff0cStream API\u6ca1\u6709\u6807\u51c6API\u901f\u5ea6\u5feb\u3002\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u6700\u65b0\u7248\u672c\u90fd\u662f\u652f\u6301\u7684'\\ufeff' \u8fd9\u6837\u7684utf-8 bom\u7684\uff0c\u6211\u5148\u5173\u95ed\u5566\n. can you back port this patch to android branch?\nhttps://github.com/alibaba/fastjson/tree/android\n. \u6ca1\u6709\uff0c\u5173\u95ed\n. \u4e3a\u5565List\u4f1a\u4e22\u5931\u7cbe\u5ea6\uff1f\n. java\nJSONObject object = new JSONObject().fluentPut(\"foo\", \"bar\");\n```\n\u5df2\u652f\u6301\uff0c\u7b491.2.9\u53d1\u5e03\u5427\n. i already back port some new feature & bug fixed to 1.1.49.android version. why not use 1.1.49.android?\n. the method 'com.alibaba.fastjson.serializer.ObjectSerializer.write' signature changed.\n``` java\n// 1.1.x\nvoid write(JSONSerializer serializer, \n                Object object, \n                Object fieldName, \n               Type fieldType) throws IOException;\n// 1.2.x\nvoid write(JSONSerializer serializer, \n                Object object, \n               Object fieldName, \n               Type fieldType, \n               int features // added in 1.2.x\n) throws IOException;\n```\n. JSONLexer\u7684\u4ee3\u7801\u884c\u53f7797\u5bf9\u4e0d\u4e0a\uff0c\u8bf7\u95ee\u7528\u7684\u5177\u4f53\u662f\u54ea\u4e2a\u7248\u672c\uff1f\n. \u662f\u56e0\u4e3a\u5b58\u5728\\\"\u8fd9\u6837\u5b57\u7b26\u4e32\u5f15\u8d77\u7684\uff0c\u95ee\u9898\u4fee\u590d\uff0c\u7b49\u57281.1.50.android\u7248\u672c\u5427\n. \u95ee\u9898\u57281.1.50.android & 1.1.51.android\u4e2d\u90fd\u5df2\u7ecf\u4fee\u590d\uff0c\u5148\u5173\u95ed\u5566\n. \u662f\u5426\u53ef\u4ee5\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\n. \u5df2\u7ecf\u89e3\u51b3\uff0c\u5c06\u4f1a\u5728\u8fd9\u4e24\u5929\u5185\u53d1\u5e031.2.12\u7248\u672c\u89e3\u51b3\u6b64\u95ee\u9898\n. can you add some mock testcase?\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.10\u7248\u672c\uff0c1.1.50.android\u4e5f\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\n. testcase failed.\n. \u6536\u5230\uff0c\u6211\u60f3\u60f3\u600e\u4e48\u5b9e\u73b0\u554a\n. \u5df2\u7ecf\u5b9e\u73b0\nhttps://github.com/alibaba/fastjson/wiki/JSONField_jsonDirect_cn\n. pom.xml can not merge, please resolve it.\n. FastJsonProviderTest\u4f1a\u8fd0\u884c\u5931\u8d25\uff0c\u6240\u4ee5\u79fb\u51fabvt\u4e86\uff0c\u8981\u4e0d\u7136\u65e0\u6cd5\u81ea\u52a8\u6253\u5305\u3002\n. \u95ee\u9898\u786e\u5b9e\u5b58\u5728\uff0c\u4f46\u8fd8\u6ca1\u60f3\u597d\u600e\u4e48\u89e3\u51b3\uff0c\u4e0b\u4e2a\u7248\u672c1.2.12\u518d\u4fee\u590d\n. \u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\uff0c\u5df2\u7ecf\u5728fastjson-1.2.12-SNAPSHOT & 1.1.52.android-SNAPSHOT\u4e0a\u4fee\u590d\u6b64\u95ee\u9898\uff0c\u8fd9\u4e24\u4e2a\u7684\u6b63\u5f0f\u7248\u672c\u9884\u8ba15\u670822\u65e5\u53d1\u5e03\n. \u770b\u6765\u591a\u4eba\u9047\u5230\u4e86\u6b64\u95ee\u9898\uff0c\u6211\u4f1a\u5c3d\u5feb\u8ddf\u8fdb\u89e3\u51b3\n. \u975e\u5e38\u611f\u8c22 @luckiss \u53cd\u9988\u4e86\u6b64\u95ee\u9898\uff0c\u5df2\u7ecf\u91cd\u73b0\u5e76\u4e14\u89e3\u51b3\uff0c\u5c06\u4f1a\u5728\u4e0b\u4e2a\u7248\u672c 1.2.16\u4e2d\u5e26\u4e0a\uff0c\u9884\u8ba1\u57288\u670814\u65e5\uff08\u5468\u65e5\uff09\u53d1\u5e03\n. 1.1.52.android\u4e5f\u5b58\u5728\u6b64\u95ee\u9898\uff0c\u5df2\u4fee\u6b63\uff0c\u5c06\u4f1a\u5728\u4e0b\u4e2a\u7248\u672c1.1.53.android\u4e2d\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u9884\u8ba1\u57288\u670814\u65e5\u53d1\u5e03\n. @ding102992 \u9047\u5230\u6cdb\u578b\u7684\u95ee\u9898\u80fd\u89e3\u51b3\uff0c@liuzhigang1237  \u4f60\u9047\u5230\u7684\u95ee\u9898\u6700\u597d\u80fd\u591f\u63d0\u4f9btestcase\uff0c\u6211\u9a8c\u8bc1\u4e00\u4e0b\n. \u95ee\u9898\u6ca1\u6709\u91cd\u73b0\n. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\u76841.1.55.android\u8bd5\u8bd5\u770b\n. @Zhangxxl \u4f60\u7684\u4ee3\u7801\u7f16\u8bd1\u4e0d\u8fc7. \u6536\u5230\uff0c\u5c3d\u5feb\u8ddf\u8fdb\u5904\u7406. @wangsai-silence \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u5f88\u9057\u61be\u6ca1\u57281.1.59.android\u4e2d\u5e26\u4e0a\uff0c\u9884\u8ba1\u4e0b\u5468\u6216\u8005\u4e0b\u4e0b\u5468\u518d\u53d1\u4e00\u4e2aandroid\u7248\u672c\u4fee\u590d\u6b64\u95ee\u9898\u3002. https://github.com/alibaba/fastjson/releases/tag/1.1.60.android \n\u95ee\u9898\u4fee\u590d\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. @dbaxyx \u80fd\u63d0\u4f9b\u5b8c\u6574\u7684testcase\u4e48\uff1f\u95ee\u9898\u6ca1\u91cd\u73b0. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u8bd5\u8bd5\u65b0\u7248\u672c. 1.2.9\u4e2d\u5df2\u7ecf\u4fee\u590d\n. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u95ee\u9898\u91cd\u73b0\uff0c\u5df2\u7ecf\u89e3\u51b3\uff0c\u7b49\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c\u5427\n. can not merge this pull request\n. 1.2.1\u53d1\u5e03\u4e86\uff0c\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u3002\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.11_release\n. @VictorZeng \u4f60\u652f\u6301\u4e00\u4e0b\uff1f\n. @VictorZeng \u5728wiki\u4e2d\u5199\u4e00\u4e2a\u4f7f\u7528\u4ecb\u7ecd\u5427\n. \u6700\u8fd1\u4e24\u5e74\u90fd\u662f\u6781\u5fd9\uff0c\u6700\u8fd1\u4e00\u4e2a\u591a\u6708\u624d\u80fd\u62bd\u51fa\u8f83\u591a\u65f6\u95f4\u6765\u7ef4\u62a4\u3002FastjsonProvider\u8fd9\u4e00\u5757\uff0c\u6211\u9700\u8981\u5e2e\u52a9\uff0c\u5982\u679c\u4f60\u6709\u597d\u7684\u5efa\u8bae\uff0c\u5e0c\u671b\u80fd\u591f\u63d0\u4ea4patch\uff0c\u4e00\u8d77\u6765\u505a\u597d\u3002\n. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\n. @VictorZeng\n. 'FastJson4HttpMessageConverter' the className is confused, it looks like fastjson 4.0 version.\n. FastJsonHttpMessageConverter4 ?\n. @VictorZeng \n. build error :\nFastJsonProvider.java:[182,85] diamond operator is not supported in -source 1.5\n. \u8fd9\u4e2a\u6539\u52a8\u4f1a\u4e0d\u4f1a\u5bfc\u81f4\u4e4b\u524d\u7684\u7528\u6237\u4e0d\u517c\u5bb9\uff1f\n. \u4e00\u5b9a\u8981\u517c\u5bb9\uff0c\u5426\u5219\u5c31\u4f1a\u7ed9\u4eba\u5e26\u6765\u9ebb\u70e6\n. \u6709testcase\u8dd1\u4e0d\u8fc7\n. use DisableSpecialKeyDetect feature:\njava\nJSON.parseObject(obj, Model.class, Feature.DisableSpecialKeyDetect);\n. \u4f60\u63d0\u4f9b\u7684testcase\u7684type\u4e0d\u5bf9\u554a\uff0c\u5e94\u8be5\u662f\"@type\"\uff0c\u800c\u4e0d\u662f\"type\"\n. \u8fd8\u4e0d\u80fd\u652f\u6301\uff0c\u4e0d\u8fc71.2.11\u6709\u4e00\u4e2a\u65b0\u7684\u76f8\u5173\u7279\u6027\uff0c\u4f60\u770b\u770b https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn\n. \u95ee\u9898\u627e\u5230\u4e86\uff0c\u5c06\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\u89e3\u51b3\uff0c\u9884\u8ba1\u4e0b\u4e2a\u7248\u672c\u4f1a\u57286\u6708\u4efd\uff0c\u4f60\u5148\u7528\u7740\u8001\u7248\u672c\u5427\n. \u4e0d\u5efa\u8bae\u4f60\u4fee\u6539\u8fd9\u4e2a\uff0c\u770b\u8fd9\u4e2a\u80fd\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\nhttps://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn\n. \u53ef\u4ee5\uff0c\u4e0b\u4e2a\u7248\u672c1.2.11\u5c06\u4f1a\u652f\u6301\n. \u73b0\u5728\u5c31\u5dee.NET\u7684\u4e0d\u652f\u6301\u5427\uff0c\u62115.1\u671f\u95f4\u53d1\u5e03\u65b0\u7248\uff0c\u5c06\u652f\u6301\uff0c\u80fd\u7b49\u51e0\u5929\u4e48\uff1f\n. .NET\u683c\u5f0f\u73b0\u5728\u662f\n/Date(1461081600000)/\n\u4e0d\u652f\u6301\u8fd9\u79cd\u628a\uff1a\n/Date(1461081600000-0000)/\n. \u5df2\u652f\u6301\uff0c\u8bf7\u7b49\u4e94\u4e00\u671f\u95f4\u53d1\u5e031.2.11\u7248\u672c\n. good advice, i will try to do it.\n. \u5df2\u7ecf\u5b9e\u73b0\u4e86\uff0c\u770b\u4e00\u4e0b\u6587\u6863\uff1ahttps://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn \u770b\u662f\u5426\u7b26\u5408\u4f60\u7684\u9700\u6c42\n. \u5df2\u7ecf\u652f\u6301\uff0c\u6587\u6863\u5728\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/wiki/SerializerFeature_IgnoreErrorGetter_cn\n. \u56e0\u4e3ajava doc\u5199\u7684\u5c11\uff0c\u6240\u4ee5\u5c31\u6ca1\u4e13\u95e8\u505a\u53c2\u8003\u6587\u6863\uff0c\u4f60\u7684\u5efa\u8bae\u5f88\u597d\uff0c\u4f1a\u9010\u6b65\u8865\u4e0a\n. \u6b63\u5728\u52aa\u529b\u8865\u5145java doc\uff0c\u5de5\u4f5c\u91cf\u4e0d\u5c11\uff0c\u6b22\u8fce\u5e2e\u5fd9\n. fastjson\u89e3\u6790\u679a\u4e3e\u7c7b\u578b\u65f6\uff0c\u5982\u679c\u9047\u5230\u6570\u503c\uff0c\u5c31\u4ee5\u4e3a\u662fordinal\uff0c\u800c\u4e0d\u662f\u4f60\u5176\u4e2d\u7684value\uff0c\u4e8e\u662f\u60b2\u5267\u4e86\u3002\u6216\u8005\u4f60\u81ea\u5b9a\u4e49EnumDeserializer\u3002\u4e0b\u4e2a\u7248\u672c\u6211\u4e5f\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u4f60\u7684\u9700\u6c42\u5427\n. fastjson\u89e3\u6790\u679a\u4e3e\u7c7b\u578b\u65f6\uff0c\u5982\u679c\u9047\u5230\u6570\u503c\uff0c\u5c31\u4ee5\u4e3a\u662fordinal\uff0c\u800c\u4e0d\u662f\u4f60\u5176\u4e2d\u7684value\uff0c\u4e8e\u662f\u60b2\u5267\u4e86\u3002\u6216\u8005\u4f60\u81ea\u5b9a\u4e49EnumDeserializer\u3002\u4e0b\u4e2a\u7248\u672c\u6211\u4e5f\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u4f60\u7684\u9700\u6c42\u5427\n. \u4f60\u53c2\u8003\u8fd9\u4e2a\u6587\u6863\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u5427 https://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n. \u4f60\u53c2\u8003\u8fd9\u4e2a\u6587\u6863\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u5427 https://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n. \u652f\u6301\uff0c\u7684\u4e0d\u8fc7\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u5e76\u6ce8\u518cObjectDeserializer\uff0c\u6587\u6863\u770b\u8fd9\u91cc https://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n. \u652f\u6301\uff0c\u7684\u4e0d\u8fc7\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u5e76\u6ce8\u518cObjectDeserializer\uff0c\u6587\u6863\u770b\u8fd9\u91cc https://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n. \u4f60\u8fd9\u4e2aissue\u63d0\u7684\u5f88\u597d\uff0c\u6211\u8865\u4e86java doc\nhttps://github.com/alibaba/fastjson/commit/ffaf9f78deddf24cd647a78c087d04c7b904d8d1\n. \u4f60\u8fd9\u4e2aissue\u63d0\u7684\u5f88\u597d\uff0c\u6211\u8865\u4e86java doc\nhttps://github.com/alibaba/fastjson/commit/ffaf9f78deddf24cd647a78c087d04c7b904d8d1\n. \u95ee\u9898\u89e3\u51b3\uff0c\u6211\u628aissue\u5173\u4e86\n. \u95ee\u9898\u89e3\u51b3\uff0c\u6211\u628aissue\u5173\u4e86\n. \u4f60\u91cd\u65b0\u63d0\u4ea4\u4e00\u4e2apatch\u5427\n. \u4f60\u91cd\u65b0\u63d0\u4ea4\u4e00\u4e2apatch\u5427\n. \u80fd\u5426\u6709\u56de\u5f52\u6d4b\u8bd5\u4fdd\u8bc1\u4ee5\u540e\u4e0d\u4f1a\u518d\u88ab\u6539\u9519\uff1f\n. \u80fd\u5426\u6709\u56de\u5f52\u6d4b\u8bd5\u4fdd\u8bc1\u4ee5\u540e\u4e0d\u4f1a\u518d\u88ab\u6539\u9519\uff1f\n. fastjson\u6ca1\u6709\u8fd9\u6837\u7684api\uff0c\u6d4b\u8bd5\u53d1\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u4e0d\u5b58\u5728\u3002\u4f60\u786e\u5b9a\u7528\u7684\u662ffastjson\uff1f\n. fastjson\u6ca1\u6709\u8fd9\u6837\u7684api\uff0c\u6d4b\u8bd5\u53d1\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u4e0d\u5b58\u5728\u3002\u4f60\u786e\u5b9a\u7528\u7684\u662ffastjson\uff1f\n. \u4e0d\u53ef\u80fd\u554a\uff0c\u56de\u5f52\u6d4b\u8bd5\u90fd\u5728linux\u4e0a\u8dd1\u7684\n. \u4e0d\u53ef\u80fd\u554a\uff0c\u56de\u5f52\u6d4b\u8bd5\u90fd\u5728linux\u4e0a\u8dd1\u7684\n. JSONObject\u4e2d\u5c31\u662f\u4e00\u4e2aHashMap\u6216\u8005LinkedHashMap\uff0c\u83b7\u53d6\u4e0d\u5230\u662f\u4e0d\u5e94\u8be5\u7684\u554a\n. JSONObject\u4e2d\u5c31\u662f\u4e00\u4e2aHashMap\u6216\u8005LinkedHashMap\uff0c\u83b7\u53d6\u4e0d\u5230\u662f\u4e0d\u5e94\u8be5\u7684\u554a\n. \u8be1\u5f02\uff0c\u5e76\u4e14\u65e0\u6cd5\u91cd\u73b0\uff0c\u4f60\u81ea\u5df1\u5148\u627e\u627e\u539f\u56e0\u5427\uff0c\u6211\u4e5f\u505a\u4e0d\u4e86\u5565\n. \u8be1\u5f02\uff0c\u5e76\u4e14\u65e0\u6cd5\u91cd\u73b0\uff0c\u4f60\u81ea\u5df1\u5148\u627e\u627e\u539f\u56e0\u5427\uff0c\u6211\u4e5f\u505a\u4e0d\u4e86\u5565\n. \u6211\u731c\u6d4b\u662f\u4f60\u6d4b\u8bd5\u573a\u666f\u6709\u95ee\u9898\uff0c\u5b58\u5728\u5927\u5c0f\u5199\u4e0d\u5339\u914d\u7684\u60c5\u51b5\n. \u6211\u731c\u6d4b\u662f\u4f60\u6d4b\u8bd5\u573a\u666f\u6709\u95ee\u9898\uff0c\u5b58\u5728\u5927\u5c0f\u5199\u4e0d\u5339\u914d\u7684\u60c5\u51b5\n. \u4f60\u7684\u5176\u4ed6\u683c\u5f0f\u662f\u600e\u6837\u7684\uff1f\u6211\u521a\u589e\u52a0\u4e86\u5bf9\"yyyy-MM-dd\"\u683c\u5f0f\u7684\u652f\u6301\n. \u4f60\u7684\u5176\u4ed6\u683c\u5f0f\u662f\u600e\u6837\u7684\uff1f\u6211\u521a\u589e\u52a0\u4e86\u5bf9\"yyyy-MM-dd\"\u683c\u5f0f\u7684\u652f\u6301\n. \u73b0\u5728\u4fee\u6539\u4e86\uff0c\u5982\u679cnano\u4e3a0\uff0c\u7f3a\u7701\u4f7f\u7528JSON.DEFFAULT_DATE_FORMAT\u7684\u914d\u7f6eyyyy-MM-dd HH:mm:ss\n. \u73b0\u5728\u4fee\u6539\u4e86\uff0c\u5982\u679cnano\u4e3a0\uff0c\u7f3a\u7701\u4f7f\u7528JSON.DEFFAULT_DATE_FORMAT\u7684\u914d\u7f6eyyyy-MM-dd HH:mm:ss\n. fastjson\u662f\u6807\u51c6\u7684maven\u5de5\u7a0b\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u83b7\u5f97\u6700\u65b0\u7684jar\nmvn clean package\n. fastjson\u662f\u6807\u51c6\u7684maven\u5de5\u7a0b\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u83b7\u5f97\u6700\u65b0\u7684jar\nmvn clean package\n. fastjson\u5f53\u524d\u5728\u516c\u7f51\u6ca1\u6709\u5feb\u7167\u4ed3\u5e93\uff0c\u4f60\u53ea\u80fd\u81ea\u884c\u7f16\u8bd1\n. fastjson\u5f53\u524d\u5728\u516c\u7f51\u6ca1\u6709\u5feb\u7167\u4ed3\u5e93\uff0c\u4f60\u53ea\u80fd\u81ea\u884c\u7f16\u8bd1\n. \u9884\u8ba1\u52306\u6708\u521d\n. \u9884\u8ba1\u52306\u6708\u521d\n. \u628alanguage\u5b57\u6bb5\u914d\u7f6e\u4e3apublic\u5c31\u53ef\u4ee5\u4e86\uff0c\u8c03\u7528protected/private\u5b57\u6bb5\u5b9e\u73b0\u5e8f\u5217\u5316\uff0c\u8fd9\u4e2a\u662f\u6bd4\u8f83\u8be1\u5f02\u7684\uff0cjackson\u4e5f\u4e0d\u652f\u6301\u5427\n. \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\n``` java\npublic abstract class CTRequest implements Serializable{\n    public static final int TIMEOUT_SECONDS_DEBUG = 60; \n@JSONField(serialize=false)\npublic String PROTOCOL_CHARSET = \"utf-8\";\n\n@JSONField(name=\"Head\")\npublic Head head;\n\n}\n```\nTIMEOUT_SECONDS_DEBUG\u662f\u9759\u6001\u5c5e\u6027\uff0c\u4e0d\u4f1a\u522b\u5e8f\u5217\u5316\n. \u4f7f\u7528transient\u4fee\u9970\u7b26\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\uff1a\n``` java\npublic abstract class CTRequest implements Serializable{\n    public static final int TIMEOUT_SECONDS_DEBUG = 60; \npublic transient String PROTOCOL_CHARSET = \"utf-8\";\n\n@JSONField(name=\"Head\")\npublic Head head;\n\n}\n```\n. bug fixed in 1.1.51.android & 1.2.11, please use the newst version.\n. please pull this merge request to android branch, not 1.2.4_android\n. \u6211\u5408\u5e76\u4e86\u4f60\u7684\u4ee3\u7801\u52301.2.4_android\u5206\u652f\u5e76\u4e14\u7136\u540e\u5173\u95ed\u4e86\u8fd9\u4e2a\u5206\u652f\u3002\u4f60\u8fd9\u4e2apatch\u6bd4\u8f83\u591a\u7cfb\u7edf\u65b9\u6cd5\u8c03\u7528\uff0c\u4f1a\u964d\u4f4e\u9996\u6b21\u53cd\u5e8f\u5217\u5316\u7684\u6027\u80fd\uff0c\u6211\u4f1a\u53c2\u8003\u4f60\u7684\u4ee3\u7801\u6539\u8fdb\u91cd\u5199\uff0c\u8c22\u8c22\u4f60\u7684\u53cd\u9988\u3002\n. \u6709\u70b9\u7ed5\u54e6\uff0c\u80fd\u5426\u5e2e\u6211\u505a\u4e00\u4e2a\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f\u53e6\u5916\u6000\u7591\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u7248\u672c\u7684fastjson\nfastjson\u6709\u4e13\u95e8\u5904\u7406\u8fd9\u6837\u95ee\u9898\u4ee3\u7801\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f60\u80fd\u5426\u5e2e\u5fd9\u5728\u4f60\u7684\u73af\u5883\u8c03\u8bd5\u4e00\u4e0b\n``` java\n// com.alibaba.fastjson.util.ASMClassLoader.isExternalClass\npublic boolean isExternalClass(Class<?> clazz) {\n    ClassLoader classLoader = clazz.getClassLoader();\nif (classLoader == null) {\n    return false;\n}\n\nClassLoader current = this;\nwhile (current != null) {\n    if (current == classLoader) {\n        return false;\n    }\n\n    current = current.getParent();\n}\n\nreturn true;\n\n}\n```\n. \u8fd9\u4e2a\u6539\u4e0d\u4e86\u7684\u5427\uff0c\u5f88\u8be1\u5f02\u54e6\uff0c\u53e6\u95ee1.2.8\u6709\u95ee\u9898\u4e48\uff1f\n. \u5148\u7528\u8fd9\u6837\u529e\u6cd5\u89e3\u51b3\u5427\njava\nParserConfig.global = new ParserConfig(ClassLoader);\n\u4e5f\u5e0c\u671b\u4f60\u80fd\u5e2e\u5fd9\u60f3\u529e\u6cd5\n. \u8fd9\u4e2acommit\u5f53\u65f6\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4f60\u9047\u5230\u7684\u8fd9\u7c7b\u95ee\u9898\uff0c\u5bf9\u5e94\u4e0b\u9762\u8fd9\u51e0\u4e2atestcase\uff1a\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal2.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal3.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal4.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal5.java\nhttps://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/TestExternal6.java\n. \u6211\u91cd\u73b0\u4e86\u95ee\u9898\uff0c\u4fee\u6539\u4e86ASMSerializerFactory\u7684classloader\uff0c\u4f60\u5e2e\u5fd9\u9a8c\u8bc1\u4e00\u4e0b\uff1f\n. \u90a3\u6211\u5173\u95ed\u4e86issue\u4e86\u554a\uff0c\u7b49\u53d1\u5e03\u5427\uff0c\u9884\u8ba1\u8fd9\u4e2a\u6708\u5e95\u6216\u80056\u6708\u521d\u53d1\u5e03\n. \u5b58\u5728\u5faa\u73af\u5e94\u7528\uff0c\u53ea\u80fd\u4f7f\u7528$.ref\u8868\u793a\u4e86\u5427\uff0c\u5426\u5219\u5c31\u4f1aStackOverflowError\uff0c\u6ca1\u6709\u522b\u7684\u529e\u6cd5\u4e86\u5427\u3002\u4e3a\u5565\u4e0d\u80fd\u7528$.ref\uff1f\n. FieldInfo use to serializer invoke getter & deserializer invoke setter, it no problem. can you gives a testcase reproduce this problem?\n. it's internal api, can not directly invoke!\n. \u53ef\u4ee5\u4f7f\u7528@JSONType\u914d\u7f6eincludes\n. https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n\u8fd9\u4e2a\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f\n. \u8c22\u8c22\u53cd\u9988\uff0c\u5df2\u77e5\u95ee\u9898\uff0c\u5df2\u7ecf\u4fee\u6b63\uff0c\u8bf7\u5148\u75281.2.8\u7248\u672c\uff0c1.2.12\u7248\u672c\u5c06\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9884\u8ba1\u8fd9\u4e2a\u670822\u65e5\u53d1\u5e03\n. \u76ee\u524d\u662f\u8fd9\u6837\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4e86\u89e3fastjson\u5b9e\u73b0\u7684JSONPath https://github.com/alibaba/fastjson/wiki/JSONPath\n. \u662f\u4e0d\u662f\u6709\u4e9b\u7c7b\u662finterface\uff1f\u63a5\u53e3\u7c7b\u8fd4\u56de\u7684\u662f$proxy\n. \u5f88\u65e9\u7248\u672c\u5c31\u652f\u6301parse\u63a5\u53e3\u4e3a$proxy\n. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\n. \u8fd9\u4e2a\u4e0d\u5bf9\u4e48\uff1f\u4f60\u671f\u671b\u7684\u7ed3\u679c\u662f\u5565\uff1f\n. \u600e\u4e48\u6362\uff1f\u6ca1\u660e\u767d\u4f60\u7684\u610f\u601d\n. \u6211\u6ca1\u60f3\u597d\u8be5\u600e\u4e48\u8bbe\u8ba1API\uff0c\u4f60\u4e5f\u60f3\u60f3\uff1f\n. \u5728\u5df2\u53d1\u5e03\u76841.2.12\u4e2d\u5df2\u7ecf\u89e3\u51b3\n. \u539f\u6765\u6ca1\u6709\u5b9e\u73b0parse\u5bf9JSONField(format=\"xxxx\")\u7684\u652f\u6301\uff0c\u8c22\u8c22\u4f60\u7684\u53cd\u9988\uff0c1.2.12\u7248\u672c\u5c06\u4f1a\u652f\u6301\uff0c\u9884\u8ba1\u53d1\u5e03\u5728\u8fd9\u4e2a\u670822\u65e5\n. \u90a3\u6211\u5173\u95ed\u5566\n. \u6709\u70b9\u5947\u602a\u4e86\uff0c\u8fd9\u4e2aBigDecimal\u662f\u5565\u503c\u554a\uff0ctoString\u90fd\u4f1a\u62a5\u9519\u3002\u3002\u3002\u3002\n. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff0c\u4f60\u8fd9\u6837\u53cd\u9988\u627e\u4e0d\u5230\u539f\u56e0\n. \u6ca1\u6709\u5b9a\u4f4d\uff0c\u80fd\u5426\u7ed9\u51fa\u91cd\u73b0\u95ee\u9898\u7684case\uff0c\u597d\u8ba9\u6211\u4e0b\u4e2a\u7248\u672c\u89e3\u51b3\n. java\nJSON.parseObject(str, Model.class, Feature.SupportArrayToBean);\n. \u4ec0\u4e48\u7248\u672c\uff1f1.2.11\u5e94\u8be5\u662f\u597d\u7684\u554a\n. \u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u8c22\u8c22\u53cd\u9988\uff0c\u5c06\u4f1a1.2.11 & 1.1.52.android\u7248\u672c\u4e2d\u4fee\u590d\u6b64\u95ee\u9898\uff0c\u9884\u8ba1\u57285\u670822\u65e5\u53d1\u5e03\n. \u80fd\u7ed9\u51fa\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u89e3\u51b3\u8fc7\u7c7b\u4f3c\u95ee\u9898 https://github.com/alibaba/fastjson/issues/569\n\u4f60\u770b\u4e00\u4e0b\uff0c\u662f\u5426\u662f\u540c\u4e00\u4e2a\u95ee\u9898\n. \u8fd9\u4e24\u5929\u5c31\u4f1a\u53d1\u5e03\u65b0\u7248\u672c\uff0c\u7a0d\u7b49\u554a\n. \u8fd9\u4e24\u5929\u5c31\u4f1a\u53d1\u5e03\u65b0\u7248\u672c\uff0c\u7a0d\u7b49\u554a\n. \u5e94\u8be5\u4e0d\u4f1a\u7684\u554a\uff0c\u4f60\u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u539f\u56e0\u662f\u6ca1\u6709public Field\u6216\u8005public Setter\u5427\n. \u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4e0b\u4e2a\u7248\u672c1.2.12\u7248\u672c\u5c06\u4f1a\u652f\u6301\n. @summer9989 \u8bf7\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase. \u8bf7\u7b7e\u7f72CLA\u534f\u8bae\n. 1\u3001\u56de\u5f52\u6d4b\u8bd5\u6ca1\u8dd1\u8fc7\uff0c\u8bf7\u5904\u7406\u5b8c\u518d\u91cd\u65b0\u63d0\u4ea4\u4ee3\u7801\n2\u3001\u65b0\u589e\u7684\u4ee3\u7801\u6ca1\u6709\u56de\u5f52\u6d4b\u8bd5\uff0c\u8fd9\u4e0d\u80fd\u4fdd\u8bc1\u4ee3\u7801\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e14\u4e0d\u80fd\u4fdd\u8bc1\u4ee5\u540e\u4fee\u6539\u4e86\u4ee3\u7801\u8fd8\u80fd\u652f\u6301\u6b64\u529f\u80fd\u3002\n. \u53ea\u6709JavaBean\u7684\u4fe1\u606f\u6211\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\u554a\uff0c\u80fd\u5426\u628ajson\u4fe1\u606f\u63d0\u4f9b\u51fa\u6765\uff1f\n. \u7f51\u7edc\u4e0d\u7a33\u5b9a\u5bfc\u81f4\u5185\u5bb9\u88ab\u622a\u65ad\uff0c\u8fd9\u4e2afastjson\u65e0\u5173\uff0c\u5173\u95ed\u5566\n. \u539f\u56e0\u662forg.springframework.data.domain.Page\u662f\u4e00\u4e2ajava.lang.Iterable\uff0c\u88ab\u7279\u522b\u5904\u7406\u4e86\u3002\u5c06\u4f1a\u6700\u8fd1\u4e24\u5929\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\u4fee\u590d\u6b64\u95ee\u9898\u3002\n. \u5df2\u77e5\u95ee\u9898\uff0c\u5df2\u89e3\u51b3\uff0c\u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n. \u4e5f\u9ebb\u70e6\u7528\u6700\u65b0\u4ee3\u7801\u5e2e\u5fd9\u6d4b\u8bd5\u4e00\u4e0b\n. \u5efa\u8bae\u8fd8\u662f\u7528\u53cc\u5f15\u53f7\u5427\uff0c\u5355\u5f15\u53f7\u4e0d\u7b26\u5408json\u89c4\u8303\u7684\n. \u662f\u7684\uff0c\u4f60\u63d0\u4ea4\u4e2apatch\u6765\u6539\u6b63\uff1f\n. \u5347\u7ea7\u52301.2.12\u7248\u672c\u5c31\u597d\u4e86\uff0chttps://github.com/alibaba/fastjson/releases/tag/1.2.12 \u8fd9\u91cc\u7684\u7b2c7\u70b9\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n. \u6ca1\u95ee\u9898\u6211\u5c31\u5173\u95edissue\u5566\n. \u4ec0\u4e48\u7248\u672c\uff1f\u8fd9\u4e2a\u95ee\u98981.2.11 & 1.2.12\u5e94\u8be5\u90fd\u4fee\u590d\u4e86\u7684\u554a\uff1f\n. \u65b0\u589e\u52a0SerializerFeature.WriteBigDecimalAsPlain\u529f\u80fd\uff0c\u4f46\u53ea\u80fd\u5bf9BigDecimal\u6709\u6548\n. \u4e0d\u597d\u5b9e\u73b0\uff0c\u4f60\u80fd\u5426\u4f7f\u7528BigDecimal\u4ee3\u66fffloat/double\uff1f\n. \u4e0d\u597d\u5b9e\u73b0\uff0c\u4f60\u80fd\u5426\u4f7f\u7528BigDecimal\u4ee3\u66fffloat/double\uff1f\n. fastjson\u600e\u4e48\u548c\u652f\u6301realm\u6570\u636e\u5e93\u6709\u5173\u7cfb\u4e86\uff1f\n. fastjson\u600e\u4e48\u548c\u652f\u6301realm\u6570\u636e\u5e93\u6709\u5173\u7cfb\u4e86\uff1f\n. \u4f60\u662f\u4e0d\u662f\u628a\u95ee\u9898\u63d0\u9519\u5730\u65b9\u4e86\uff0c\u5e94\u8be5\u63d0\u5230\u8fd9\u91cc \nhttps://github.com/alibaba/druid/issues\n. \u4f60\u662f\u4e0d\u662f\u628a\u95ee\u9898\u63d0\u9519\u5730\u65b9\u4e86\uff0c\u5e94\u8be5\u63d0\u5230\u8fd9\u91cc \nhttps://github.com/alibaba/druid/issues\n. \u4e0d\u662f\u5f88\u61c2\u4f60\u7684\u610f\u601d\n. \u4e0d\u662f\u5f88\u61c2\u4f60\u7684\u610f\u601d\n. \u4ec0\u4e48\u7248\u672c\uff1f\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f\n. \u4f7f\u7528Feature.OrderedField\njava\nJSON.parseObject(\"...\", Feature.OrderedField);\n. \u4f7f\u7528Feature.OrderedField\njava\nJSON.parseObject(\"...\", Feature.OrderedField);\n. \u6700\u65b0\u7248\u672c\u662f1.2.12 http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.12/\n\u6ca1\u67091.2.22\n. \u6700\u65b0\u7248\u672c\u662f1.2.12 http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.12/\n\u6ca1\u67091.2.22\n. \u65e2\u7136android\u7248\u672c\u80fd\u7528\uff0c\u6211\u5c31\u5173\u95edissue\u5566\uff1f\n. \u65e2\u7136android\u7248\u672c\u80fd\u7528\uff0c\u6211\u5c31\u5173\u95edissue\u5566\uff1f\n. \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7NameFilter\u5b9e\u73b0\u3002\u53cd\u5e8f\u5217\u5316\u6700\u65b0\u7248\u672c\u80fd\u591f\u81ea\u52a8\u8bc6\u522b\u7684\n. \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7NameFilter\u5b9e\u73b0\u3002\u53cd\u5e8f\u5217\u5316\u6700\u65b0\u7248\u672c\u80fd\u591f\u81ea\u52a8\u8bc6\u522b\u7684\n. android\u4ec0\u4e48\u7248\u672c\uff1f\n. android\u4ec0\u4e48\u7248\u672c\uff1f\n. \u662f\u7684\uff0c\u8fd9\u4e2a\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\n. \u662f\u7684\uff0c\u8fd9\u4e2a\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\n. \u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\uff0c\u6545\u610f\u628anull\u7b97\u4e3anot contains\uff0c\u4f60\u89c9\u5f97\u6709\u95ee\u9898\u4e48\uff1f\n. \u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\uff0c\u6545\u610f\u628anull\u7b97\u4e3anot contains\uff0c\u4f60\u89c9\u5f97\u6709\u95ee\u9898\u4e48\uff1f\n. \u9700\u6c42\u662f\u5408\u7406\u7684\uff0c\u6211\u4f1a\u8003\u8651\u5728\u67d0\u4e2a\u7248\u672c\u4e2d\u52a0\u4e0a\n. \u9700\u6c42\u662f\u5408\u7406\u7684\uff0c\u6211\u4f1a\u8003\u8651\u5728\u67d0\u4e2a\u7248\u672c\u4e2d\u52a0\u4e0a\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f85\u4e0b\u4e00\u4e2a\u7248\u672c\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f85\u4e0b\u4e00\u4e2a\u7248\u672c\n. \u7c7b\u7ed3\u6784\u5f88\u5927\uff1f\u5927\u6982\u600e\u6837\u7684\uff1f\u80fd\u65b9\u4fbf\u628aPlayer\u7684\u7c7b\u7ed3\u6784\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f\n. \u7c7b\u7ed3\u6784\u5f88\u5927\uff1f\u5927\u6982\u600e\u6837\u7684\uff1f\u80fd\u65b9\u4fbf\u628aPlayer\u7684\u7c7b\u7ed3\u6784\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f\n. \u591a\u5c11\u4e2a\u5b57\u6bb5\uff1f\n. \u591a\u5c11\u4e2a\u5b57\u6bb5\uff1f\n. \u8fd9\u4e2a\u89e3\u6790\u662f\u6b63\u786e\u7684\u554a\uff0c\u5982\u679c\u662f\u4f60\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u5982\u4e0b\u8fd9\u6837\u5199\uff1a\njava\nString str = \"{\\\"Body\\\":\\\"\u6d4b\u8bd5\u4e00\u4e0b\\\\\\\\r\\\\\\\\n\\\"}\";\n. \u8fd9\u4e2a\u89e3\u6790\u662f\u6b63\u786e\u7684\u554a\uff0c\u5982\u679c\u662f\u4f60\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u5982\u4e0b\u8fd9\u6837\u5199\uff1a\njava\nString str = \"{\\\"Body\\\":\\\"\u6d4b\u8bd5\u4e00\u4e0b\\\\\\\\r\\\\\\\\n\\\"}\";\n. \u8fd9\u4e2a\u89e3\u6790\u662f\u6b63\u786e\u7684\u554a\uff0c\u5982\u679c\u662f\u4f60\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u5982\u4e0b\u8fd9\u6837\u5199\uff1a\njava\nString str = \"{\\\"Body\\\":\\\"\u6d4b\u8bd5\u4e00\u4e0b\\\\\\\\r\\\\\\\\n\\\"}\";\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.21\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.21\n. \u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.21\n. \u4ec0\u4e48\u573a\u666f\u6709\u8fd9\u9700\u6c42\u5462\uff1f\\u00A0\u4e5f\u662f\u7b26\u5408\u89c4\u8303\u7684\u5b57\u7b26\u4e32\u554a\n. \u4ec0\u4e48\u573a\u666f\u6709\u8fd9\u9700\u6c42\u5462\uff1f\\u00A0\u4e5f\u662f\u7b26\u5408\u89c4\u8303\u7684\u5b57\u7b26\u4e32\u554a\n. \u4ec0\u4e48\u573a\u666f\u6709\u8fd9\u9700\u6c42\u5462\uff1f\\u00A0\u4e5f\u662f\u7b26\u5408\u89c4\u8303\u7684\u5b57\u7b26\u4e32\u554a\n. \u6536\u5230\uff0c\u8c22\u8c22\u53cd\u9988\uff0c\u5c06\u4f1a\u5c3d\u5feb\u5904\u7406\n. \u6536\u5230\uff0c\u8c22\u8c22\u53cd\u9988\uff0c\u5c06\u4f1a\u5c3d\u5feb\u5904\u7406\n. \u6536\u5230\uff0c\u8c22\u8c22\u53cd\u9988\uff0c\u5c06\u4f1a\u5c3d\u5feb\u5904\u7406\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. https://github.com/alibaba/fastjson/wiki/TypeReference\n. https://github.com/alibaba/fastjson/wiki/TypeReference\n. https://github.com/alibaba/fastjson/wiki/TypeReference\n. \u652f\u6301\u7684\uff0c\u8bf7\u95ee\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\u554a\uff1f\n. \u652f\u6301\u7684\uff0c\u8bf7\u95ee\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\u554a\uff1f\n. \u652f\u6301\u7684\uff0c\u8bf7\u95ee\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\u554a\uff1f\n. \u8bd5\u8bd51.2.12\u7248\u672c\n. \u8bd5\u8bd51.2.12\u7248\u672c\n. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\uff0c\u6211\u91cd\u73b0\u4e0d\u4e86\n. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\uff0c\u6211\u91cd\u73b0\u4e0d\u4e86\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u5347\u7ea7\u52301.2.12\u8bd5\u8bd5\u770b\uff1f\n. \u5347\u7ea7\u52301.2.12\u8bd5\u8bd5\u770b\uff1f\n. \u4e4b\u524d\u7248\u672c\u8ba1\u7b97\u6cdb\u578b\u7684\u771f\u5b9e\u7c7b\u578b\u6709\u95ee\u9898\uff0c\u65e2\u7136\u95ee\u9898\u4fee\u590d\u4e86\u6211\u5c31\u5173\u95edissue\u5566\n. \u4e4b\u524d\u7248\u672c\u8ba1\u7b97\u6cdb\u578b\u7684\u771f\u5b9e\u7c7b\u578b\u6709\u95ee\u9898\uff0c\u65e2\u7136\u95ee\u9898\u4fee\u590d\u4e86\u6211\u5c31\u5173\u95edissue\u5566\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u4ec0\u4e48\u7248\u672c\uff1f\n. \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u5df2\u7ecf\u4fee\u6b63\u4e86\u554a\uff0c\u4f60\u786e\u5b9a1.2.12\u8fd8\u5b58\u5728\u8fd9\u6837\u7684\u95ee\u9898\uff1f\n. \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u5df2\u7ecf\u4fee\u6b63\u4e86\u554a\uff0c\u4f60\u786e\u5b9a1.2.12\u8fd8\u5b58\u5728\u8fd9\u6837\u7684\u95ee\u9898\uff1f\n. 1.2.12\u7248\u672c\u5462\uff1f\n. \u662f\u4ec0\u4e48\u95ee\u9898\uff1f\n. \u5df2\u4fee\u590d\uff0c\u4eca\u5929\u5c06\u4f1a\u53d1\u5e031.2.15\u89e3\u51b3\u6b64\u95ee\u9898\n. \u6ca1\u5904\u7406\u597dstatic\u548cfinal\uff0c\u5c06\u4f1a\u5c3d\u5feb\u4fee\u6b63\uff0c\u8c22\u8c22\u53cd\u9988\n. \u5df2\u4fee\u590d\u95ee\u9898\uff0c\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c1.1.53.android\n. \u5f88\u597d\u7684\u9700\u6c42\uff0c\u5c06\u4f1a\u5c3d\u5feb\u652f\u6301\n. \u4f60\u80fd\u4ecb\u7ecd\u4e00\u4e0b\u4f7f\u7528\u573a\u666f\u4e48\uff1f\n. \u5df2\u7ecf\u652f\u6301\uff0c\u6587\u6863\u5728\u8fd9\u91cc\nhttps://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n. \u8c22\u8c22\u53cd\u9988\uff0c\u5408\u5e76\u8fd9\u4e2apull request\u7684\u65f6\u5019\u6ca1\u6709\u4ed4\u7ec6\u68c0\u67e5\u3002\u95ee\u9898\u5df2\u7ecf\u4fee\u6b63\uff0c\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c1.2.14\uff0c\u9884\u8ba1\u5728\u5468\u672b\u3002\n. https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn\n. \u6ca1\u6709C#\u7248\u672c\n. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e2a\u9700\u6c42\uff1f\u600e\u6837\u7684\u4e00\u4e2a\u4f7f\u7528\u573a\u666f\uff1f\n. \u5df2\u7ecf\u5b9e\u73b0\uff0c\u65b9\u6cd5\u662f\njava\npublic class JSONPath {\n    public static Map<String, Object> paths(Object javaObject);\n}\n\u770b\u662f\u5426\u7b26\u5408\u4f60\u7684\u8981\u6c42\n. \u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u4f7f\u7528\u65b9\u6cd5\u9700\u8981\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a\njava\nJSON.setDefaultTypeKey(\"mySpace\");\n. @jason19659 \u7684\u7b54\u6848\u5e94\u8be5\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u6211\u5148\u5173\u95edissue\u5566\n. \u8fd9\u4e2a\u548cfastjson\u6ca1\u5173\u7cfb\u5427\n. \u8c22\u8c22\u63d0\u4ea4\u8fd9\u4e2apatch\uff0c\u7531\u4e8e\u6211\u4e0d\u4e86\u89e3Swagger\uff0c\u6240\u4ee5\u72b9\u8c6b\u4e86\u8fd9\u4e48\u4e45\uff0c\u62b1\u6b49\u3002\n. \u6211\u505a\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u4f46\u6211\u6ca1\u6709\u771f\u5b9e\u73af\u5883\uff0c\u80fd\u5426\u5e2e\u5fd9\u505a\u4e00\u4e0b\u56de\u5f52\u6d4b\u8bd5\n. \u95ee\u9898\u4fee\u6b63\u4e86\uff0c\u5e76\u4e14\u8865\u5145\u4e86testcase\u3002\u4f60\u518d\u8bd5\u8bd5\u770b\n. \u95ee\u9898\u867d\u7136\u89e3\u51b3\u4e86\uff0c\u4f46\u89c9\u8fd9\u4e2a\u4e0d\u662f\u539f\u751f\u652f\u6301springfox\u7684\u6b63\u786e\u65b9\u5f0f\uff0c\u80fd\u5e2e\u5fd9\u505a\u4e00\u4e2apatch\u80fd\u5b8c\u5168\u66ff\u6362jackson\u7684\u4e48\uff1f\n. \u80fd\u63d0\u4f9b\u4e00\u4e0b\u7c7b\u7ed3\u6784\u4ee3\u7801\n. \u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u4e48\uff1f\n. @VictorZeng \u652f\u6301\u4e00\u4e0b\u5427\uff0c\u53c8\u662f\u4e00\u4e2aspring\u7684\u95ee\u9898\n. \u5df2\u652f\u6301\uff0c\u8bf7\u7b49\u5f851.2.14\u7248\u672c\n. \u8fd9\u4e2a\u662f\u4e00\u4e2a\u9009\u9879\uff0c\u7f3a\u7701\u914d\u7f6e\u751f\u6210\u7684JSON\u4e32\u90fd\u662f\u517c\u5bb9\u6807\u51c6\u7684\u3002\u5982\u679c\u9700\u8981\u5b8c\u6574\u610f\u4e49\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff08\u652f\u6301\u7c7b\u578b\u548c\u5faa\u73af\u5f15\u7528\uff09\uff0c\u76ee\u524d\u7684\u5b9e\u73b0\u662f\u4e0d\u9075\u5faa\u6807\u51c6\u7684\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9075\u5faa\u6807\u51c6\u7684\u5b9e\u73b0\uff0c\u6027\u80fd\u6216\u8bb8\u53d7\u5230\u4e00\u5b9a\u5f71\u54cd\u3002\n. \u7f3a\u7701\u662f\u517c\u5bb9\u6807\u51c6\u7684\uff0c\u542f\u7528WriteClassName\u4e4b\u540e\uff0c\u5c31\u662f\u4e3a\u4e86\u6b63\u786e\u4fdd\u8bc1\u80fd\u53cd\u5e8f\u5217\u5316\u5230\u539f\u6765\u7c7b\u578b\u3002. \u8fd4\u56de\u7ed3\u679c\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u4e48\uff1f\u540c\u65f6\u5e0c\u671b\u4ee3\u7801\u4e0d\u8981\u8d34\u56fe\uff0c\u6211\u8981\u91cd\u73b0\u95ee\u9898\u5f97\u91cd\u65b0\u8f93\u5165\u4e00\u904d\u3002\u3002\u3002\n. \u5df2\u7ecf\u652f\u6301\uff0c\u7b491.2.14\u7248\u672c\u5427\n. \u5df2\u4fee\u590d\n. fastjson parser\u7684\u4f18\u5316\u7b97\u6cd5\u4f1a\u57fa\u4e8e\u8fd9\u4e2a\u6765\u5b9e\u73b0\uff0c\u6545\u610f\u6309\u5b57\u6bcd\u5e8f\u7684\n. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u6807\u51c6\u72481.2.14\u4e0a\u4e0d\u5b58\u5728\uff0c\u4f46\u57281.1.52.android\u4e0a\u5b58\u5728\u3002\u4e0b\u4e00\u4e2aandroid\u7248\u672c\u5c06\u4f1a\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u9884\u8ba1\u5728\u5468\u672b\u53d1\u5e03\u3002\n. https://github.com/alibaba/fastjson/wiki/TypeReference\n. \u4f60\u4ec0\u4e48\u573a\u666f\u6709\u5927\u4e8e2999\u7684\u65e5\u671f\u6570\u636e\uff1f\n. \u5c31\u5e94\u8be5\u662f\u4f60\u8bf4\u7684\u8fd9\u6837\u554a\uff0c\u6587\u6863\u54ea\u91cc\u5199\u9519\u4e86\uff1f\n. \u6587\u6863\u5df2\u4fee\u590d\uff0c\u611f\u8c22\u53cd\u9988\n. There will be a performance problem\n. SortField is default value, for JavaBean serialization, it is useful to optimize the performance of deserialized.\n. I also noticed the same problem, with the growth of the size of the string and performance degradation. I will follow up this issue, thank you for your feedback.\n. Fastjson has an optimization algorithm that optimizes deserialization of JSON text sorted by key, so if fastjson generates JSON text, fastjson deserializes much faster.\nhttps://github.com/eishay/jvm-serializers/wiki. @VictorZeng \u4f60\u5e2e\u5fd9\u770b\u770b\n. \u5e94\u8be5\u662f\u683c\u5f0f\u9519\u4e71\u4e86\uff0c\u975e\u6cd5\u7684JSON\u5b57\u7b26\u4e32\n. \u8fd9\u4e2a\u4e0d\u662fbug\u5427\n. java\nString temp = \"{\\\"option_1\\\": \\\"\\\\u4e0d\\\\u5403\\\\u6216\\\\u5c11\\\\u4e8e1\\\\u6b21\\\"}\";\nJSONObject object = JSON.parseObject(temp);\nAssert.assertEquals(\"{\\\"option_1\\\":\\\"\u4e0d\u5403\u6216\u5c11\u4e8e1\u6b21\\\"}\", JSON.toJSONString(object));\nAssert.assertEquals(\"{\\\"option_1\\\":\\\"\\\\u4E0D\\\\u5403\\\\u6216\\\\u5C11\\\\u4E8E1\\\\u6B21\\\"}\", JSON.toJSONString(object, SerializerFeature.BrowserCompatible));\n\u7528SerializerFeature.BrowserCompatible\u53ef\u4ee5\u5f97\u5230\u4f60\u8981\u7684\u7ed3\u679c\n. \u5df2\u7ecf\u5b9e\u73b0\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u76841.2.21\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.21\n. double\u7c7b\u578b\uff1f\u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f\n. Good idea, the next version will support\n. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n. Today or tomorrow will release a new version 1.2.15.\n. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.15/\n. \u6211\u6d4b\u8bd5\u4e861.2.14\u662f\u597d\u7684\uff0c\u4f60\u5347\u7ea7\u7248\u672c\u8bd5\u8bd5\u770b\n. \u80fd\u5e2e\u5fd9\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u4e0d\u7b49\u4ef7\u7684\uff0c\u4e0a\u9762\u8fd9\u79cd\u662fparse\uff0c\u4e0b\u9762\u8fd9\u79cd\u7c7b\u578b\u8f6c\u6362\n. \u4f1a\u5728\u5468\u672b\u53d1\u5e03\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u662f\u5426\u80fd\u5e2e\u5fd9\u81ea\u884c\u7f16\u8bd1\u6253\u5305\u7136\u540e\u505a\u6d4b\u8bd5\uff1f\n. @VictorZeng \u4f60\u80fd\u5e2e\u770b\u4e00\u4e0b\u4e48\uff1f\n. \u770b\u8fd9\u4e2a\u6587\u6863\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f\nhttps://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\uff1f\n. \u6240\u7ee7\u627f\u7684\u7c7b\u7ed3\u6784\u662f\u600e\u6837\u7684\uff1f\u6211\u53ef\u4ee5\u5728\u5185\u7f6e\u63d0\u4f9b\u652f\u6301\u53bb\u6389\u7684\n. \u662fhibernate\u7684\u5b9e\u73b0\u5417\uff1f\n. \u80fd\u5e2e\u5fd9\u770bisNew\u65b9\u6cd5\u662f\u5728\u54ea\u4e2aclass/interface\u4e2d\u5b9a\u4e49\u7684\n. @VictorZeng \u5e2e\u5fd9\u770b\u770b\n. \u4e0d\u5e94\u8be5\u554a\uff0cfastjson\u4e0d\u4f1a\u628a\u5355\u5f15\u53f7\u53d8\u6210\u53cc\u5f15\u53f7\u7684\uff0c\u4f60\u662f\u600e\u4e48\u4f7f\u7528\u7684\uff1f\u80fd\u591f\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u4e0d\u5e94\u8be5\u554a\uff0cfastjson\u4ec0\u4e48\u7248\u672c\uff1f\n. \u53ef\u4ee5\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\u6211\u597d\u786e\u8ba4\u5230\u65f6\u5019\u80fd\u591f\u4fee\u590d\u4f60\u7684\u95ee\u9898\n. \u95ee\u9898\u91cd\u73b0\uff0c\u6211\u5c3d\u91cf\u5728\u5468\u672b\u53d1\u5e03\u7684\u7248\u672c\u4e2d\u4fee\u590d\uff0c\u8c22\u8c22\u53cd\u9988\n. \u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u5c06\u4f1a\u5728\u5468\u672b\u53d1\u5e03\u7684\u7248\u672c1.2.16\u4e2d\u4fee\u6b63\u6b64\u95ee\u9898\uff0c\u8c22\u8c22\u53cd\u9988\n. \u4f60\u662f\u5e0c\u671b\u5168\u90e8BeanToArray\u8fd8\u662f\u5c40\u90e8\u91c7\u7528\uff1f\n. fastjson\u4ec0\u4e48\u7248\u672c\uff0c\u62a5\u9519\u7684\u8be6\u7ec6\u4fe1\u606f\u80fd\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f\n. \u5e94\u8be5\u662f\u6df7\u6dc6\u4e4b\u540e\u628aList\u8fd9\u6837\u7684\u6cdb\u578b\u4fe1\u606f\u62b9\u6389\u4e86\n. \u54c8\u54c8\uff0c\u6211\u5173\u95edissue\u5566\n. Exception\u7684\u5e8f\u5217\u5316\uff0c\u5982\u679c\u4e0d\u5e26\u7c7b\u578b\uff0c\u5c31\u53cd\u5e8f\u5217\u5316\u4e0d\u56de\u6765\u5566\n. \u597d\u5efa\u8bae\uff0c\u5c06\u4f1a\u5c3d\u5feb\u5904\u7406\n. \u6587\u6863\u5728\u8fd9\u91cc\nhttps://github.com/alibaba/fastjson/wiki/JSONField\n\u7b2c\u516d\u70b9\n. \u9884\u8ba1\u5728\u8fd9\u4e2a\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c\uff0c\u4f60\u770b\u770b\u662f\u5426\u6ee1\u8db3\u4f60\u9700\u6c42\uff0c\u6709\u95ee\u9898\u8bf7\u5c3d\u5feb\u53cd\u9988\n. \u5df2\u7ecf\u652f\u6301\n. @VictorZeng \u5e2e\u5fd9\u770b\u770b\n. \u90a3\u6211\u5173\u95edissue\u5566\n. \u672c\u6765Map\u4e2d\u5b58\u5728\u975eString\u7c7b\u578b\u7684Key\u5c31\u662f\u975eJSON\u683c\u5f0f\uff0c\u5982\u679c\u4f60\u9700\u8981\u5c06\u975e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684key\u5e8f\u5217\u5316\u4e3a\u6807\u51c6\u7684JSON\uff0c\u53ef\u4ee5\u4f7f\u7528SerializerFeature.WriteNonStringKeyAsString\uff0c\u5982\u4e0b\uff1a\njava\nJSON.toJSONString(map, SerializerFeature.WriteNonStringKeyAsString);\n. Thank you very much feedback this issue, will release a new version in August 14 1.2.16 fixes this problem.\n. \u597d\u5efa\u8bae\uff0c\u6211\u8981\u60f3\u60f3\u600e\u4e48\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u5468\u672b\u6253\u7b97\u53d1\u5e03\u65b0\u7248\u672c\uff0c\u8fd9\u4e2a\u9700\u6c42\u8d76\u4e0d\u4e0a\u8fd9\u4e00\u6b21\u4e86\n. \u4e4b\u524d\u662f\u6545\u610f\u53bb\u6389\u7684\uff0c\u9646\u7eed\u6709\u4eba\u53cd\u9988\u8bf4\u6709\u95ee\u9898\uff0c\u4f60\u9047\u5230\u7684\u662f\u5177\u4f53\u4ec0\u4e48\u95ee\u9898\uff1f\u6211\u597d\u51b3\u5b9a\u662f\u5426\u4fdd\u7559\".0\"\n. \u5982\u4f60\u6240\u8bf4\u4ee3\u7801\u903b\u8f91\u662f\u4e0d\u5bf9\u7684\uff0c\u8c22\u8c22\u5e2e\u5fd9\u505acode review\n. \u4f60\u6309\u4f60\u6240\u8bf4\u7684\u4fee\u590d\uff0c\u95ee\u9898\u5148\u5173\u95ed\u5566\n. \u76ee\u524d\u8fd8\u6ca1\u6709\uff0c\u4e0d\u8fc7\u786e\u5b9e\u662f\u4e2a\u597d\u5efa\u8bae\uff0c\u6211\u6709\u7a7a\u4e86\u5c31\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u5427\n. Get this result because:\njava\narray.toString().toCharArray()\n. @greenlaw110 \nThank you choose fastjson. I will fix this problem in the next version.\n. it can not support, because it may be a security problem\n. \u80fd\u63d0\u4f9b\u4e00\u4e0b\u7c7b\u4fe1\u606f\u4e48\uff0c\u65b9\u4fbf\u6211\u91cd\u73b0\n. \u63d0\u4ea4\u7684\u4ee3\u7801\uff0c\u6ce8\u91ca\u5199\u9519\u4e86issue\uff0c\u5e94\u8be5\u662f#779\uff0c\u8bf7\u5ffd\u7565\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u6211\u4f1a\u5728\u4eca\u5929\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\n. \u95ee\u9898\u6ca1\u6709\u5b8c\u5168\u89e3\u51b3\uff0c\u60b2\u5267\u4e86\u3002\u3002\u3002\n. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c1.1.55.android\n. \u786e\u5b9e\u662fbug\uff0c\u5c3d\u5feb\u4fee\u6b63\uff0c\u8c22\u8c22\u53cd\u9988\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5982\u65e0\u610f\u5916\u4eca\u5929\u5c31\u4f1a\u53d1\u5e03\u65b0\u7248\u672c\n. \u4e0b\u4e2a\u7248\u672c\u4f1a\u52a0\u4e0a\u8fd9\u4e2a\u652f\u6301\uff0c\u9884\u8ba1\u4f1a\u5728\u5468\u672b8\u670828\u65e5\u53d1\u5e03\n. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\n. \u53ef\u4ee5\u8003\u8651\u66f4\u597d\u7684\u6269\u5c55\u652f\u6301\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u505a\u5185\u7f6e\u652f\u6301\u3002\u5982\u679c\u662f\u5185\u7f6e\u652f\u6301\uff0c\u4f60\u671f\u671b\u662f\u600e\u6837\u7684\u7ed3\u679c\uff1f\n. \u5df2\u7ecf\u5185\u7f6e\u652f\u6301\uff0c\u548cgenson\u4ee5\u53cajackson\u4e00\u6837\n. \u539f\u6765\u6709\uff0c\u66fe\u7ecf\u53bb\u6389\uff0c\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u4e0d\u517c\u5bb9\uff0c\u4e8e\u662f\u53c8\u52a0\u4e0a\u4e86\n. \u95ee\u9898\u786e\u5b9e\u5b58\u5728\uff0c\u57281.1.53.android\u4e0a\u4e5f\u5b58\u5728\uff0c\u6211\u4f1a\u5c3d\u5feb\u89e3\u51b3\u95ee\u9898\uff0c\u8c22\u8c22\u53cd\u9988\n. \u76f4\u63a5\u8c03\u7528java.net.URLDecoder\u4e0d\u884c\u4e48\uff1f\n. \u8fd9\u4e2a\u4e0d\u662ffastjson\u7684\u95ee\u9898\uff0c\u5148\u5173\u95ed\u5566\n. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u5427\nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.16/\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.16\n. \u65e2\u7136\u597d\u4e86\uff0c\u6211\u5c31\u5173\u95edissue\u5566\n. \u4e0d\u5e94\u8be5\u554a\uff0c\u8fd9\u4e2a\u70b9\u4e0a\u5e94\u8be5\u6ca1\u6709\u5e76\u53d1\u95ee\u9898\uff0c\u4f1a\u4e0d\u4f1a\u662f\u8f93\u5165\u7684JSON\u6587\u672c\u683c\u5f0f\u9519\u4e86\uff1f\n. \u4f1a\u4e0d\u4f1a\u662f\u4e0a\u5c42\u6846\u67b6\u6709\u5e76\u53d1\u95ee\u9898\uff1f\n. thank you.\n. @VictorZeng \u5e2e\u5fd9\u770b\u770b\n. @VictorZeng \u53c2\u8003\u4e00\u4e0bJackson/Gson/Genson\u7684\u5b9e\u73b0\uff0c\u548c\u4ed6\u4eec\u4e00\u81f4\u5427\n. \u4ec0\u4e48\u7248\u672c\uff0c\u6211\u6d4b\u8bd5\u4e86\u95ee\u9898\u6ca1\u6709\u91cd\u73b0\n. \u4ec0\u4e48\u7248\u672c\uff0c\u6211\u6d4b\u8bd5\u4e86\u95ee\u9898\u6ca1\u6709\u91cd\u73b0\n. \u8fd9\u4e24\u4e2a\u53c2\u6570\u5728\u8fd9\u91cc\u4e0d\u80fd\u8d77\u4f5c\u7528\n. \u8fd9\u4e24\u4e2a\u53c2\u6570\u5728\u8fd9\u91cc\u4e0d\u80fd\u8d77\u4f5c\u7528\n. \u8003\u8651\u63d0\u4f9b\u8fd9\u6837\u7684API\uff0c\u4f46\u8fd9\u6b21\u53d1\u5e03\u6765\u4e0d\u53ca\u4e86\uff0c\u4e0b\u6b21\u5427\n. \u8003\u8651\u63d0\u4f9b\u8fd9\u6837\u7684API\uff0c\u4f46\u8fd9\u6b21\u53d1\u5e03\u6765\u4e0d\u53ca\u4e86\uff0c\u4e0b\u6b21\u5427\n. \u5982\u6c9f\u901a\u7ed3\u679c\u5e76\u7ecf\u8fc7\u6d4b\u8bd5\u95ee\u9898\u4e0d\u5b58\u5728\uff0c\u5148\u5173\u95ed\u5566\n. \u5982\u6c9f\u901a\u7ed3\u679c\u5e76\u7ecf\u8fc7\u6d4b\u8bd5\u95ee\u9898\u4e0d\u5b58\u5728\uff0c\u5148\u5173\u95ed\u5566\n. \u95ee\u9898\u4fee\u590d\uff0c\u7b49\u4e0b\u4e00\u4e2a\u7248\u672c1.2.17\u5427\n. \u95ee\u9898\u4fee\u590d\uff0c\u7b49\u4e0b\u4e00\u4e2a\u7248\u672c1.2.17\u5427\n. com.alibaba:fastjson:1.1.54.android\u662ffastjson\u9488\u5bf9android\u7279\u522b\u4f18\u5316\u7684\u7248\u672c\uff0cjar\u66f4\u5c0f\uff0c\u5728android\u4e0a\u8fd0\u884c\u6bd4\u6807\u51c6\u7248\u66f4\u5feb\u3002\u5177\u4f53\u4ecb\u7ecd\u770b\u8fd9\u91cc\uff1a https://github.com/alibaba/fastjson/wiki/Android%E7%89%88%E6%9C%AC\n. com.alibaba:fastjson:1.1.54.android\u662ffastjson\u9488\u5bf9android\u7279\u522b\u4f18\u5316\u7684\u7248\u672c\uff0cjar\u66f4\u5c0f\uff0c\u5728android\u4e0a\u8fd0\u884c\u6bd4\u6807\u51c6\u7248\u66f4\u5feb\u3002\u5177\u4f53\u4ecb\u7ecd\u770b\u8fd9\u91cc\uff1a https://github.com/alibaba/fastjson/wiki/Android%E7%89%88%E6%9C%AC\n. \u95ee\u9898\u89e3\u51b3\uff0c\u8bf7\u7b49\u5f851.2.17\u53d1\u5e03\u5427\n. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c1.1.55.android\n. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\uff1f\n. WechatUserInfo\u7c7b\u7ed3\u6784\u662f\u600e\u6837\u7684\uff1f\n. \u56e0\u4e3aunionid\u5927\u5c0f\u5199\u4e0d\u5339\u914d\uff0c\u6ca1\u6709\u667a\u80fd\u8bc6\u522b\u3002\u3002\u3002\n. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7b491.2.17\u7248\u672c\u53d1\u5e03\u5427\n. \u6211\u4e0d\u591f\u4e86\u89e3\u76f8\u5173\u6280\u672f\uff0c\u4f60\u80fd\u5e2e\u5fd9\u63d0\u4ea4\u4e00\u4e0b\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\u4e48\uff1f\n. thank you.\n. \u66f4\u65b0\u52301.2.16\u8bd5\u8bd5\u770b\uff0c1.1.15\u6709\u70b9\u65e7\u4e86\n. \u90a3\u6211\u5173\u95ed\u5566\n. \u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff1f\u76ee\u524d\u662f\u652f\u6301Java8\u65b0\u589e\u65e5\u671f\u7c7b\u578b\u7684\uff0c\u4f46\u4e0d\u652f\u6301joda-time\u65f6\u95f4\u7c7b\u578b\uff0c\u8bf7\u95ee\u73b0\u5728\u6709\u4e86java8\uff0c\u7528joda-time\u7684\u8fd8\u591a\u4e48\uff1f\n. https://github.com/alibaba/fastjson/wiki/JSONField_jsonDirect_cn\n\u770b\u8fd9\u4e2a\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\n. \u6211\u731c\u662f\u540c\u65f6\u5b58\u5728\u591a\u4e2afastjson\u7248\u672c\u5bfc\u81f4\u7684\n. \"2016/09/20 12:30\"\u8fd9\u4e2a\u683c\u5f0f\u6709\u70b9\u5947\u602a\u54e6\uff0c\u6b63\u5e38\u5e94\u8be5\u662f\u8fd9\u4e2a\u554a\"2016-09-20 12:30\"\n. \"2016-09-20 12:30:00\" \u5927\u9646\u683c\u5f0f\n\"2016/09/20 12:30:00\" \u53f0\u6e7e\u683c\u5f0f\n\u5c11\u4e86\u79d2\n. \u548c\u8c01\u517c\u5bb9\uff1f\u5176\u4ed6\u5e93\u652f\u6301\uff1f\n. \u6211\u6d4b\u8bd5\u4e86fastjson-1.1.54.android\u4e5f\u662f\u4e0d\u53ef\u4ee5\u554a\n. \u80fd\u63d0\u4f9b\u51fa\u9519\u7c7b\u7684\u4ee3\u7801\u4e48\uff0c\u597d\u8ba9\u6211\u91cd\u73b0\u95ee\u9898\n. \u91cd\u63d0\u5df2\u7ecf\u91cd\u73b0\uff0c\u5c3d\u5feb\u4fee\u6b63\uff0c\u5468\u672b\u53d1\u5e03. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.2.22\u7248\u672c. \u53c2\u8003\u8fd9\u4e2a\nhttps://github.com/alibaba/fastjson/wiki/SerializerFeature_DisableCircularReferenceDetect_cn\n. \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\uff0c\u6211\u60f3\u60f3\u600e\u4e48\u652f\u6301\u54c8\uff0c\u4f60\u6709\u597d\u5efa\u8bae\u4e48\n. JSON.toJSONString(obj, SerializerFeature.WriteClassName). \u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u6211\u5173\u4e86\u54c8\n. \u80fd\u8865\u4e0atestcase\u4e48\uff1f\n. fastjson\u4ec0\u4e48\u7248\u672c\uff1f\n. TypeReference\u6bcf\u6b21\u90fdnew\u4e86\uff1f\n. \u4f60\u628ab\u6253\u5370\u51fa\u6765\u770b\u4e00\u4e0b\u662f\u4ec0\u4e48\u503c\njava\nSystem.out.println(b);\n. \u8fd9\u4e2aPR\u6709bug\uff0c\u6211\u5df2\u7ecf\u6062\u590d\u4e86\n. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u5947\u602a\u7684\u9700\u6c42\uff1f\n. https://github.com/alibaba/fastjson/releases/tag/1.1.62.android\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.37\n1.1.62.android & 1.2.37\u53d1\u5e03\uff0c\u589e\u5f3a\u4e86\u5bf9kotlin\u7684\u652f\u6301. jackson\u4e5f\u662f\u6ca1\u505aunicode\u7f16\u7801\u5904\u7406\u7684\uff0c\u4f60\u4e3a\u5565\u6709\u8fd9\u4e2a\u9700\u6c42\uff1f\n. byte/short type overflow already raised exception. Can you tell me how you test float / double overflow?\n. bug fixed. please use last version https://github.com/alibaba/fastjson/releases/tag/1.2.21\n. \u5168\u5c40\u5173\u95ed\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\nJSON.DEFAULT_GENERATE_FEATURE |= SerializerFeature.DisableCircularReferenceDetect.getMask();\n. \u8fd9\u4e2aPoint\u4e0d\u662fjava.awt.Point\u54c8\uff0c\u6211\u7a0d\u540e\u5c31\u770b\u54c8\n. \u6211\u6d4b\u8bd5\u4e86\u6ca1\u91cd\u73b0\u95ee\u9898\u54c8\uff0c\u4f60\u7528\u6700\u65b0\u7248\u672c1.2.21\u8bd5\u8bd5\u770b\uff0c\u5982\u679c\u95ee\u9898\u8fd8\u5728\uff0c\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\n. https://github.com/alibaba/fastjson/wiki/TypeReference\n\u770b\u8fd9\u4e2a\u6587\u6863\u662f\u5426\u5bf9\u4f60\u6709\u5e2e\u52a9\u54c8\n. \u76ee\u524dandroid\u7248\u672c\u7684TypeReference\u4e0d\u652f\u6301\u4f20\u5165\u53c2\u6570\uff0c\u6211\u5c3d\u5feb\u8865\u4e0a\u5e76\u53d1\u5e03\u65b0\u7248\u54c8\n. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\n. \u88ab\u4ec0\u4e48\u4ee3\u7406\uff1f\u662fjava.lang.reflect.Proxy \u8fd8\u662fcglib\u6216\u8005\u5176\u4ed6\uff1f\n. \u95ee\u9898\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.21\u7248\u672c\u53d1\u5e03\n. \u4f60\u662f\u600e\u6837\u7528\u7684\uff1f\u4e0d\u5e94\u8be5\u54c8\n. \u65e2\u7136\u5e26\u4e86 SerializerFeature.WriteNullStringAsEmpty \u8fd9\u4e2afeature\uff0c\u73b0\u5728\u7684\u8f93\u51fa\u624d\u66f4\u7b26\u5408\u4f60\u7684\u610f\u56fe\u54c8\n. java\nString text = \"...\";\nJSONObject obj = new JSONObject(1024);\nDefaultJSONParser parser = new DefaultJSONParser(text);\nparser.parseObject(obj);\n. https://github.com/alibaba/fastjson/wiki/ParseToExistingObject\n. \u5df2\u7ecf\u652f\u6301\uff0c\u6587\u6863\u5728\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/wiki/JSONField_alternateNames_cn\n. @VictorZeng \u5e2e\u5fd9\u770b\u770b\n. \u6bd4\u5982\u600e\u6837\u7684\u8f93\u51fa\u8981\u6c42\uff1f\u53e6\u5916\u4f60\u8bd5\u8bd5JSON.defaultLocale\n. @smallnest  \u4f60\u63d0\u4ea4pull request\u8fc7\u6765\uff1f\n. \u4e0d\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u652f\u6301\uff0c\u6211\u7684\u89e3\u6cd5\u662f\u4e0d\u4f7f\u7528asm\u5b9e\u73b0\u3002\nhttps://github.com/alibaba/fastjson/commit/374dfe454e8c2c8cf0afbf58e6ed51e8a15206bf\n. Map\u5982\u679c\u4f60\u9700\u8981\u6392\u5e8f\u8f93\u51fa\uff0c\u8bf7\u4f7f\u7528TreeMap\u6216\u8005LinkedHashMap\n. https://github.com/alibaba/fastjson/wiki/ParseToExistingObject\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u8981\u7684\n. https://github.com/alibaba/fastjson/wiki/ParseToExistingObject\n. \u5e94\u8be5\u652f\u6301\u7684\u54c8\uff0c\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff1f\u600e\u4e48\u7528\u7684\uff1f\n. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u76841.1.55.android\u7248\u672c\n\u6587\u6863\u770b\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/wiki/Feature_SupportNonPublicField_cn\n. \u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1a\nhttps://github.com/alibaba/fastjson/wiki/JSONType_alphabetic_cn\n. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. https://github.com/alibaba/fastjson/wiki/JSONField_unwrapped_cn\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\n. \u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5427\uff0c\u5386\u53f2\u539f\u56e0\uff0c\u4e3a\u4e86\u517c\u5bb9\uff0c\u4e0d\u80fd\u6539\u4e86\u3002\njava\nJSON.setDefaultTypeKey\n. @VictorZeng \u5e2e\u5fd9\u770b\u770b. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u76841.1.55.android\u7248\u672c\n. \u80fd\u5e2e\u5fd9\u6784\u5efa\u4e00\u4e2a\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. @dengyj3 \u5df2\u7ecf\u652f\u6301\uff0c\u4f46\u662f\u6ca1\u6709\u91cd\u73b0\u95ee\u9898\u7684testcase\uff0c\u65e0\u6cd5\u8bc1\u660e\u662f\u5426\u5df2\u7ecf\u89e3\u51b3\u95ee\u9898 . \u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\u5e76\u4e14\u89e3\u51b3\uff0c\u9884\u8ba1\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c\u89e3\u51b3\u95ee\u9898. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.2.22\u7248\u672c. java\nJSONField(alternateNames={\"userID\", \"uID\"}). https://github.com/alibaba/fastjson/wiki/JSONField_alternateNames_cn. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u76f4\u63a5return\u4e0d\u53ef\u4ee5\u4e48\uff1f. \u7528\u6700\u65b0\u7248\u672c1.2.21\u8bd5\u8bd5\u770b. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.2.22\u7248\u672c. 1. \u65b9\u6cd5\u7684\u987a\u5e8f\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7684\u3002\n2. \u4f7f\u7528\u5b57\u6bcd\u5e8f\u80fd\u7ed9\u53cd\u5e8f\u5217\u5316\u6027\u80fd\u4f18\u5316\u63d0\u4f9b\u5e2e\u52a9. ```java\npublic  List toJavaList(Class clazz) {\n       List list = new ArrayList(this.size());\n    ParserConfig config = ParserConfig.getGlobalInstance();\n\n    for (Object item : this) {\n        T classItem = (T) TypeUtils.cast(item, clazz, config);\n        list.add(classItem);\n    }\n\n    return list;\n\n}\n. \u4e3a\u6d4b\u8bd5\u4e86\u6ca1\u95ee\u9898\u54c8java\nString text = \"{\\\"res\\\": \\\"00000\\\",\\\"version\\\": \\\"1.8.0\\\",\\\"des\\\":\\\"\u7248\u672c\u66f4\u65b0\uff1a\\n\" +\n        \"1\u3001\u9080\u8bf7\u6709\u793c\uff1a\u65b0\u529f\u80fd\uff0c\u65b0\u73a9\u6cd5\uff0c\u5feb\u53bb\u4f53\u9a8c\u5427~\\n\" +\n        \"2\u3001\u76f4\u64ad\u7981\u8a00\uff1a\u4e3b\u64ad\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u5c0f\u9ed1\u7c89\u5566~\\n\" +\n        \"3\u3001\u84dd\u9cb8\u5e01\u5145\u503c\uff1a\u591a\u79cd\u6a21\u5757\u4efb\u4f60\u9009\uff0c\u591a\u5145\u591a\u9001\uff01\\n\" +\n        \"4\u3001\u4f18\u5316\u6392\u884c\u699c\uff1a\u4fee\u590d\u76f4\u64ad\u9875\u9762\u7684\u6392\u884c\u699c\uff0c\u8ba9\u5927\u5bb6\u7b2c\u4e00\u65f6\u95f4\u770b\u5230\u4ed8\u51fa\u7684\u4f60~\\n\" +\n        \"5\u3001\u4fee\u590d\u76f4\u64ad\u804a\u5929\u533a\uff1a\u518d\u4e5f\u4e0d\u62c5\u5fc3\u4e3b\u64ad\u770b\u4e0d\u5230\u4f60\u9001\u7684\u793c\u7269\u548c\u5c0f\u661f\u661f\u5566~\\\",\\\"download\\\":\\\"http://xxx/android/x/x.apk\\\"}\";\nJSON.parse(text);\n. https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn\n\u770b\u4e00\u4e0b\u8fd9\u4e2a\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u8bf7\u95ee\u662f\u5728android\u8fd8\u662f\u670d\u52a1\u5668\u7aef. \u4f60\u5148\u770b\u4e00\u4e0b\u8fd9\u4e2a\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\nhttps://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn. \u662f\u7684\uff0cException\u7684\u5b50\u7c7b\u5e26\u8fd9\u4e2a\uff0c\u5426\u5219\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316. \u80fd\u628a\u5806\u6808\u4fe1\u606f\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f\u540c\u65f6\u8bf7\u63d0\u4f9bfastjson\u7684\u7248\u672c. JSONArray\u672c\u8d28\u662f\u4e00\u4e2aArrayList\uff0c\u6309\u7167\u63d2\u5165\u987a\u5e8f\uff0c\u4f46\u662f\u6ca1\u6709\u7ecf\u8fc7\u6392\u5e8f. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n\u7b2c10\u70b9. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b. @VictorZeng \u4f60\u5e2e\u770b\u770b. \u6b63\u5728\u505a\u6d4b\u8bd5\uff0c\u65b0\u7248\u672c\u5c31\u5728\u8fd9\u4e24\u5929\u5427\uff0c\u4f60\u5173\u6ce8\u7684\u662f\u54ea\u51e0\u4e2aBUG\uff1f\u8bf7\u63d0\u4f9b\u4e00\u4e0b\u4fe1\u606f. \u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u7b49\u5468\u672b\u53d1\u5e03\u5427. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.2.22\u7248\u672c. \u4f60\u8fd9\u79cd\u6ce8\u91ca\u5f88\u5947\u602a\u54e6. \u8bf7\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase. 1.2.23\u4e2d\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c. \u6211\u8865\u5145\u4e86testcase\uff0c\u91cd\u73b0\u4e0d\u4e86\u95ee\u9898. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u5df2\u7ecf\u652f\u6301java.beans.Transient\uff0c\u8bf7\u7b49\u5f851.2.23\u7248\u672c. \u95ee\u9898\u91cd\u73b0\u5e76\u4e14\u8fd9\u4e2apatch\u5df2\u89e3\u51b3\u95ee\u9898\uff0c\u8c22\u8c22\u4f60\u63d0\u4ea4patch.. 1.2.23\u5df2\u7ecf\u4fee\u590d\u95ee\u9898\uff0c\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c.java\n@JSONField(jsonDirect=true)\npublic String getOptions() { ... }\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7b49\u5f851.2.23\u7248\u672c.java\nJSON.parseObject(\"...\", Feature.OrderedField)\n```. \u57281.2.23\u7248\u672c\u4e2d\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c. \u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f. https://github.com/eishay/jvm-serializers/wiki. \u8bf7\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase. \u53ea\u662fenum\u7c7b\u578b\u4e0d\u53ef\u4ee5\uff0c\u6211\u4f1a\u5c3d\u5feb\u4fee\u6b63\u54c8. \u662f\u7684\uff0c\u8fd9\u51e0\u5929\u5c31\u4f1a\u53d1\u5e03\u65b0\u7248\u672c. \u5728https://github.com/eishay/jvm-serializers/wiki \u7684\u6d4b\u8bd5\u7ed3\u679c\u4e2d\uff0c\u5728json/xxxx/databind/\u7c7b\u578b\u7684\u6d4b\u8bd5\u4e2d\uff0cfastjson\u8fd8\u662f\u6700\u5feb\u7684\uff0c\u6700\u8fd1\u66f4\u65b0\u7684\u6d4b\u8bd5\u7ed3\u679c2016\u5e747\u67089\u65e5\u3002\u6211\u505a\u8fc7\u7b80\u5355\u6d4b\u8bd5\uff0cjsonitor\u529f\u80fd\u5355\u4e00\uff0c\u4e0d\u652f\u6301enum\uff0c\u65e0\u6cd5\u8dd1eishay\u7684\u6d4b\u8bd5\uff0c\u6211\u7b80\u5355\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5176databind\u573a\u666f\u6027\u80fd\u5e76\u4e0d\u597d\uff0c\u6bd4fastjson\u6162\u591a\u4e86\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u770b\u8fd9\u91cc https://github.com/alibaba/fastjson/blob/739360b0ea06b42f1c3af5afaf7f6b4ff97ff762/src/test/java/com/alibaba/json/test/JsonIteratorTest.java\n\u6027\u80fd\u5927\u7ea6fastjson\u76841/10\u3002. \u4e3a\u4ec0\u4e48\u8981getClass\uff1f. JSONObject.getObject(key,new TypeReference<VO>(){}.getType()). https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u5df2\u7ecf\u652f\u6301\uff0c\u9884\u8ba1\u5728\u6625\u8282\u524d\u4f1a\u53d1\u5e03\u65b0\u7248\u672c. {\"val\":\"\\\u7ecf\"}\n\u8fd9\u6837\u7684\u683c\u5f0f\u662f\u4e0d\u7b26\u5408JSON\u89c4\u8303\uff0chttp://www.json.org/. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c1.2.24. \u662f\u7684\uff0c\u4e0d\u652f\u6301\uff0c\u4f60\u662f\u5426\u53ef\u4ee5\u81ea\u884ctoString\u7136\u540e\u5728Put\u5230JSONObject\u4e2d. @VictorZeng \u5e2e\u5fd9\u770b\u770b. Map\u8fd9\u6837\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u9700\u8981\u901a\u8fc7TypeReference\u6765\u6784\u5efa. \u4e0d\u660e\u767d\u4f60\u7684\u610f\u601d\uff0c\u80fd\u591f\u4e3e\u4f8b\u4e48\uff1f. \u5df2\u7ecf\u5b9e\u73b0\uff0c\u8bf7\u4f7f\u75281.2.24\u7248\u672c. \u7f3a\u7701\u5c31\u662fnull\u4e0d\u8f93\u51fa\u7684. ParserConfig\u4e0d\u8981\u6bcf\u6b21\u90fdnew\uff0c\u505a\u6210\u5355\u4f8b. android\u73af\u5883\u4e48\uff1f. \u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u57281.1.55.android\u548c1.2.24\u7248\u672c\u4e2d\u90fd\u4f1a\u4fee\u590d\u6b64\u95ee\u9898\uff0c\u9884\u8ba1\u5728\u6625\u8282\u524d\u53d1\u5e03\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/wiki/WriteNull_cn. \u4ec0\u4e48\u7248\u672c\uff1f. \u95ee\u9898\u91cd\u73b0\u5e76\u4e14\u89e3\u51b3\uff0c1.2.24\u7248\u672c\u5c06\u4f1a\u5e26\u4e0a\uff0c\u9884\u8ba1\u5728\u6625\u8282\u524d\u53d1\u5e03\u65b0\u7248. https://github.com/alibaba/fastjson/wiki/FieldTypeResolver\n\u770b\u4e00\u4e0b\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42. \u80fd\u7528javaBean\u6765\u53cd\u5e8f\u5217\u5316\u4e48\uff1f. \u5185\u7f6e\u652f\u6301\u4e86\uff0c\u7b49\u53d1\u5e03\u65b0\u7248\u672c\u5427. \u6b63\u786e\u7684\u7528\u6cd5\u662f\uff1a\nString json = JSON.toJSONString(student, SerializerFeature.WriteMapNullValue);\n. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u9884\u8ba1\u5728\u6625\u8282\u524d\u53d1\u5e031.2.24\u7248\u672c. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u6700\u65b0\u72481.2.24. \u5df2\u7ecf\u652f\u6301\uff0c\u9884\u8ba1\u5728\u6625\u8282\u524d\u53d1\u5e03\u65b0\u7248\u672c1.2.24. 1.2.24\u5df2\u7ecf\u53d1\u5e03\uff0c\u8bf7\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.1.62.android\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.37\n1.1.62.android & 1.2.37\u53d1\u5e03\uff0c\u589e\u5f3a\u4e86\u5bf9kotlin\u7684\u652f\u6301\n@Ccixyj . \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u4e0d\u8fc7\u624d\u4e0d\u52302M\u7684\u6587\u672c\uff0c\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528JSON.parseObject\uff0c\u4e0d\u9700\u8981\u4f7f\u7528JSONReader. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff1f. \u6ca1\u60f3\u597d\u600e\u4e48\u8bbe\u8ba1API. \u4e3a\u5565json-lib\u548cfastjson\u6df7\u7528\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u6700\u65b0\u72481.2.24. \u80fd\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u51fa\u9519\u4fe1\u606f\u4e48\uff1f. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u4e0d\u8fc7\u624d\u4e0d\u52302M\u7684\u6587\u672c\uff0c\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528JSON.parseObject\uff0c\u4e0d\u9700\u8981\u4f7f\u7528JSONReader. ```java\npublic void test_for_issue() throws Exception {\n        Model model = JSON.parseObject(\"{\\\"values\\\":[1,2,3]}\", Model.class);\n        assertNotNull(model.values);\n        assertEquals(3, model.values.size());\n        assertEquals(Byte.class, model.values.get(0).getClass());\n        assertEquals(Byte.class, model.values.get(1).getClass());\n        assertEquals(Byte.class, model.values.get(2).getClass());\n    }\npublic static class Model {\n    public List<Byte> values;\n}\n\n\u6d4b\u8bd5\u53d1\u73b0\u6ca1\u95ee\u9898\u554a. \u4f60\u7528\u7684\u4ec0\u4e48\u7248\u672c\uff1f. \u95ee\u9898\u5c06\u4f1a\u57281.2.24\u4e2d\u4fee\u590d\uff0c\u9884\u8ba1\u5c31\u5728\u8fd9\u51e0\u5929\u5185\u53d1\u5e03\u65b0\u7248\u672c. \u6ca1\u4ec0\u4e48\u597d\u529e\u6cd5\uff0c\u7528@SuppressWarnings\u5427. https://github.com/alibaba/fastjson/wiki/LabelFilter\nhttps://github.com/alibaba/fastjson/wiki/Class_Level_SerializeFilter\n\u8fd9\u4e9b\u5b9a\u5236\u5e8f\u5217\u5316\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f. \u81ea\u5b9a\u4e49\u7684SerializeFilter\u4e2d\u81ea\u884c\u5904\u7406\u53ef\u4ee5\u4e48\uff1f. \u4ec0\u4e48\u7248\u672c\uff1f. \u5f88\u591aValueObject\u7684Collection\u7c7b\u578b\u5c5e\u6027\u53ea\u6709getter\u6ca1\u6709setter\uff0c\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cfastjson\u505a\u4e86\u7279\u522b\u5904\u7406\u3002\u8fd9\u4e0d\u7b26\u5408\u4f60\u7684\u9700\u6c42\u4e48\uff1f\u65e2\u7136\u8f93\u5165\u4e2d\u6709\u6570\u636e\uff0c\u4e3a\u5565\u4e0dadd\u8fdb\u53bb\u5462\uff1f. \u652f\u6301\u7684\uff0c\u6211\u5199\u4e86demo\u7ed9\u4f60\uff0c\u4f60\u770b\u662f\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\nhttps://github.com/alibaba/fastjson/wiki/ReuseObject_cn. \u600e\u6837\u7684\u4e0d\u5339\u914d\u6cd5\uff1f\u80fd\u4e3e\u4f8b\u4e48\uff1f.java\npublic void test_for_issue() throws Exception {\n    String json = \"{\\\"pictureList\\\":[\\\"http://static.oschina.net/uploads/user/1218/2437072_100.jpg?t=1461076033000\\\",\\\"http://common.cnblogs.com/images/icon_weibo_24.png\\\"]}\";\nUser user = JSON.parseObject(json, User.class);\nassertNotNull(user.pictureList);\nassertEquals(2, user.pictureList.size());\nassertEquals(\"http://static.oschina.net/uploads/user/1218/2437072_100.jpg?t=1461076033000\", user.pictureList.get(0));\nassertEquals(\"http://common.cnblogs.com/images/icon_weibo_24.png\", user.pictureList.get(1));\n\n}\npublic static class User implements Serializable {\n    private List pictureList;\n    public List getPictureList() {\n        return pictureList;\n    }\n    public User setPictureList(List pictureList) {\n        this.pictureList = pictureList;\n        return this;\n    }\n}\n\u6211\u6d4b\u8bd5\u5230\u662f\u597d\u7684\uff0c\u4f46\u53ef\u80fd\u548c\u4f60\u8981\u6c42\u4e0d\u7b26\u5408. \"0017-02-10 01:46:17.0\"\u8fd9\u4e2a\u683c\u5f0f\u663e\u7136\u4e0d\u5bf9\u554a\uff0c\u5f53\u524d\u6beb\u79d2\u53ea\u80fd\u8868\u793a1970\u5e74\u4ee5\u6765\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u505a\u4e86\u671f\u95f4\u9650\u5236\u3002. \u6709\u6ca1\u6709testcase\uff1f. \u5185\u90e8\u7c7b\u9700\u8981static\uff0c\u5426\u5219\u65e0\u6cd5\u521b\u5efa\u5b9e\u4f8b. \u8c22\u8c22\u53cd\u9988\uff0c\u4e0b\u4e2a\u7248\u672c\u4e2d\u5904\u7406. \u8bf7\u4f7f\u75281.2.28\u7248\u672c\nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.28/.java\nJSON.toJSON(list);\n. \u5c06\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\u652f\u6301. \u6545\u610f\u8fd9\u6837\u8bbe\u8ba1\uff0c\u8fd9\u662fIdentityHashMap\uff0c\u4e0d\u662fHashMap. \u6709\u591a\u6162\uff1f. \u6211\u5728\u534e\u4e3aP10\u4e0a\u6ca1\u91cd\u73b0\uff0c\u4f60\u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f. \u5728Android\u4e0a\uff0c\u5efa\u8bae\u4f7f\u7528Field\u4ee3\u66ffgetter & setter\u3002\u6211\u5df2\u4f18\u5316\u4e86getMethods\u65b9\u6cd5\u7684\u6027\u80fd\uff0c\u5373\u5c06\u53d1\u5e03\u3002. \u95ee\u9898\u4fee\u590d\u5e76\u5df2\u53d1\u5e03 https://github.com/alibaba/fastjson/releases/tag/1.1.57.android. \u65b0\u7248\u672c\u5927\u7ea6\u5c31\u4f1a\u5728\u8fd9\u51e0\u5929\uff0c\u5f88\u5927\u53ef\u80fd\u5c31\u5728\u5468\u672b. @wuwen5 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u597d\uff0c\u6211\u6309\u7167\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6539\u4e86. \u5df2\u63a5\u53d7Pull Reuqest\uff0c\u4f46\u4f1a\u91cd\u547d\u540d\u4e3aIgoreAutoType. \u5e94\u8be5\u662f\u53ef\u4ee5\u7684\u54c8\uff0c\u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n\u7b2c10\u70b9. \u95ee\u9898\u4fee\u590d\u5e76\u5df2\u53d1\u5e03 https://github.com/alibaba/fastjson/releases/tag/1.1.57.android. \u8fd9\u4e2a\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f. \u63d0\u4f9btestcase\uff1f. Please upgrade to the new version. \nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.24/.java\nJSON.parseObject(\"\\\"\u4e2d\u6587\\\"\", String.class); \n\u8bd5\u8bd5\u770b. \u8fd9\u4e2a\u4e0d\u662fJSON\u683c\u5f0f\u54e6\uff0c\u4e0d\u597d\u652f\u6301\u8fd9\u4e2a\u4e0d\u662fJSON\u683c\u5f0f\u54e6\uff0c\u4e0d\u597d\u652f\u6301. \u80fd\u63d0\u4f9bdemo\u4e48\uff1f. \u8fd9\u4e2a\u786e\u5b9e\u662f\u4e00\u76f4\u4e0d\u652f\u6301\u7684\uff0c\u8981\u652f\u6301\u8fd8\u6bd4\u8f83\u9ebb\u70e6. \u80fd\u5426\u9489\u9489\u8054\u7cfb\u6211\uff0c\u6211\u63d0\u4f9b\u7248\u672c\u7ed9\u4f60\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u901a\u8fc7\u4e4b\u540e\u660e\u5929\u53d1\u5e03\u65b0\u7248\u672c. \u65e0\u6cd5\u5408\u5e76\uff0c\u8bf7\u89e3\u51b3\u51b2\u7a81\u540e\u91cd\u65b0\u63d0\u4ea4. \u5c31\u4e3a\u4e86\u652f\u6301trim\uff1f\u7528ValueFilter\u4e0d\u53ef\u4ee5\u4e48\uff1f. \u8fd8\u662f\u51b2\u7a81\u554a. \u8fd9\u4e2a\u6539\u52a8\u4ec5\u4ec5\u4e3a\u4e86trim\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.29\n\u8fd9\u4e2a\u6709\u4e86. \u8bf7\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case. \u4fee\u6539\u6210\u8fd9\u6837\u5427\n{ \"question\": \"1+1=?\\u1505a\"}\n```. \u5148\u5347\u7ea7\u52301.2.7.sec01\u7248\u672c\u5427\nhttp://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.7.sec01/\n\u8fd9\u4e2a\u517c\u5bb9\u7248\u672c\u4e5f\u662f\u5b89\u5168\u7684. com.alibaba.fastjson.annotation.JSONField\nhttps://github.com/alibaba/fastjson/wiki/JSONField\n```\n public class Model {\n      @JSONField(name=\"ID\")\n      private int id;\n  public int getId() {return id;}\n  public void setId(int value) {this.id = id;}\n\n}\n. https://github.com/alibaba/fastjson/blob/0f622019e8f9666d0b8263b05e736abe3792a3ba/src/test/java/com/alibaba/json/bvt/issue_1000/Issue1079.java\ni tested it, it's ok. https://github.com/alibaba/fastjson/releases/tag/1.2.30\n\u65b0\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u95ee\u9898\u5df2\u89e3\u51b3. 1.2.29\u4fee\u590d\u8fc7\u4e00\u4e2a\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5e2e\u5fd9\u8bd5\u4e00\u4e0b1.2.29\u662f\u5426\u8fd8\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\nRelease Notes : https://github.com/alibaba/fastjson/releases\nMaven Download : http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.29/. https://github.com/alibaba/fastjson/releases/tag/1.2.30\n\u65b0\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u95ee\u9898\u5df2\u89e3\u51b3. \u8fd9\u662f\u95ee\u9898\uff0c\u539f\u6765\u53ea\u4f5c\u7528\u4e8eJavaBean\u7684\u5b57\u6bb5\uff0c\u6f0f\u4e86Map\u4e2d\u7684Value. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. @VictorZeng \u4f60\u5e2e\u5fd9\u770b\u4e00\u4e0b\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u5c06\u4f1a\u57281.2.30 & 1.1.57.android\u7248\u672c\u4e2d\u652f\u6301\uff0c\u8c22\u8c22\u4f60\u7684\u53cd\u9988. \u4e0d\u662f\u5f88\u61c2\u4f60\u7684\u610f\u601d\uff0c\u80fd\u8bf4\u6e05\u695a\u4e00\u4e9b\u4e48\uff1f. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b. LabelFilter\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1f\nhttps://github.com/alibaba/fastjson/wiki/LabelFilter. \u770b\u8fd9\u4e2a\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1a\nhttps://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u57281.2.30\u7248\u672c\u4e2d\u5e26\u4e0a. https://github.com/alibaba/fastjson/releases/tag/1.2.30\n\u65b0\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u95ee\u9898\u5df2\u89e3\u51b3. \u975e\u9759\u6001\u5185\u5d4c\u7c7b\uff0c\u6539\u6210\u9759\u6001\u5c31\u597d\u4e86. \u95ee\u9898\u57281.2.29\u4e2d\u5df2\u7ecf\u4fee\u590d\uff0c\u539f\u56e0\u662f\u65b0\u52a0\u9632\u91cd\u590d\u529f\u80fd\u65f6\uff0c\u5728\u5b57\u6bb5\u6570\u91cf\u4e3a32\u6216\u800564\u65f6\uff0c\u8ba1\u7b97\u672c\u5730\u53d8\u91cf\u51fa\u9519\u4e86. \u7528\u6700\u65b0\u7248\u672c1.2.47\u8bd5\u8bd5\u770b. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u4e48\uff1f.\nString text = \"{\\\"Grade\\\": 1, \\\"UpdateTime\\\": \\\"2017-03-22T11:41:17\\\"}\";\nJSONObject jsonObject = JSON.parseObject(text, Feature.AllowISO8601DateFormat);\nassertEquals(Date.class, jsonObject.get(\"UpdateTime\").getClass());\n. @juaby \u4f60\u7684\u63cf\u8ff0\u662f\u6b63\u786e\u7684. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u4e48\uff1f. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b. @VictorZeng \u5e2e\u770b\u4e00\u4e0b\uff1f. com.huawei.appmarket.cachesys.datamanager.CacheJSONParser\ncom.alibaba.fastjson.parser.deserializer.MapDeserializer\n\u8fd9\u4e24\u4e2a\u7c7b\u7684\u4ee3\u7801\u80fd\u53d1\u7ed9\u6211\u770b\u4e00\u4e0b\u5417\uff1f. \u80fd\u5426\u628a\u9700\u6c42\u76f4\u63a5\u63d0\u8fc7\u6765\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u6e90\u7801\u5b9e\u73b0\uff0c\u4fee\u6539\u6e90\u7801\u6211\u4e0d\u597d\u505a\u517c\u5bb9\uff0c\u6bcf\u6b21\u6539\u52a8\u4e0d\u4f1a\u8003\u8651\u4f60\u7684\u9700\u6c42\u7684\uff0c\u6ca1\u6709\u56de\u5f52\u6d4b\u8bd5\uff0c\u5c31\u6ca1\u6709\u4fdd\u8bc1\u3002. \u4ec0\u4e48\u7248\u672c\uff1f. \u4ec0\u4e48\u7248\u672c\uff1f. @VictorZeng \u4f60\u5e2e\u770b\u4e00\u4e0b. @VictorZeng \u4f60\u5e2e\u770b\u4e00\u4e0b. \u4e4b\u524d\u9700\u8981\u7ed3\u5408WriteMapNullValue\u624d\u80fd\u751f\u6548\uff0c\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u5427\uff0c\u6bd4\u59821.2.30\u5c31\u597d\u4e86. \u4e4b\u524d\u9700\u8981\u7ed3\u5408WriteMapNullValue\u624d\u80fd\u751f\u6548\uff0c\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u5427\uff0c\u6bd4\u59821.2.30\u5c31\u597d\u4e86. \u4e0d\u662f\u5f88\u61c2\u4f60\u7684\u610f\u601d\uff0c\u80fd\u8bf4\u6e05\u695a\u4e00\u4e9b\u4e48\uff1f\u5e0c\u671b\u5728JsonResult\u4e0a\u505a\u914d\u7f6e\uff0c\u76f4\u63a5\u8f93\u51fajsonp\uff1f. \u4e0d\u662f\u5f88\u61c2\u4f60\u7684\u610f\u601d\uff0c\u80fd\u8bf4\u6e05\u695a\u4e00\u4e9b\u4e48\uff1f\u5e0c\u671b\u5728JsonResult\u4e0a\u505a\u914d\u7f6e\uff0c\u76f4\u63a5\u8f93\u51fajsonp\uff1f. byte[]\u8f93\u51fa\u4e3abase64\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u5728fastjson/jackson\u4e2d\u7684\u884c\u4e3a\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u4f60\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\uff1f. byte[]\u8f93\u51fa\u4e3abase64\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u5728fastjson/jackson\u4e2d\u7684\u884c\u4e3a\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u4f60\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\uff1f. \u6211\u6d4b\u8bd5\u7684\u7ed3\u679c\u548c\u4f60\u7684\u4e0d\u4e00\u6837\uff0c\u5982\u4e0b\uff1a\n{\"fst\":\"key\",\"snd\":\"\\\"the\\\"content\"}\n. \u6211\u6d4b\u8bd5\u7684\u7ed3\u679c\u548c\u4f60\u7684\u4e0d\u4e00\u6837\uff0c\u5982\u4e0b\uff1a\n{\"fst\":\"key\",\"snd\":\"\\\"the\\\"content\"}\n. \u95ee\u9898\u91cd\u73b0\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0d\u4f1a\u8fd9\u6837\uff0c\u6211\u8981\u4ed4\u7ec6\u770b\u4e00\u4e0b\u5177\u4f53\u662f\u600e\u4e48\u56de\u4e8b. \u95ee\u9898\u91cd\u73b0\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0d\u4f1a\u8fd9\u6837\uff0c\u6211\u8981\u4ed4\u7ec6\u770b\u4e00\u4e0b\u5177\u4f53\u662f\u600e\u4e48\u56de\u4e8b. \u8c22\u8c22\u63d0\u9192\uff0c\u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u7b49\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c1.2.31\u5427. \u8c22\u8c22\u63d0\u9192\uff0c\u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u7b49\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c1.2.31\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u65b0\u7248\u672c\u53d1\u5e03\u5df2\u89e3\u51b3\u95ee\u9898\uff0c\u8bf7\u5347\u7ea7. https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u65b0\u7248\u672c\u53d1\u5e03\u5df2\u89e3\u51b3\u95ee\u9898\uff0c\u8bf7\u5347\u7ea7. \u8bd5\u8bd5 SerializerFeature.IgnoreNonFieldGetter \u770b\u662f\u5426\u662f\u4f60\u60f3\u8981\u7684. \u8bd5\u8bd5 SerializerFeature.IgnoreNonFieldGetter \u770b\u662f\u5426\u662f\u4f60\u60f3\u8981\u7684. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u65b0\u7248\u672c\u53d1\u5e03\u5df2\u89e3\u51b3\u95ee\u9898\uff0c\u8bf7\u5347\u7ea7. https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u65b0\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u4f60\u8bd5\u8bd5\u770b\u662f\u5426\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3. WriteNullStringAsEmpty\nWriteNullNumberAsZero\n\u8fd9\u4e24\u4e2a\u80fd\u7b26\u5408\u4f60\u9700\u6c42\u4e48\uff1f\u5982\u679c\u8fd8\u662f\u4e0d\u884c\uff0c\u7528ValueFilter\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u65b0\u7248\u672c\u53d1\u5e03\u5df2\u89e3\u51b3\u95ee\u9898\uff0c\u8bf7\u5347\u7ea7. \u6211\u6d4b\u8bd5\u662f\u597d\u7684\u54c8\uff0c\u4f60\u4ec0\u4e48\u7248\u672c\uff1f.java\nJSON.toJSONString(result, SerializerFeature.PrettyFormat, SerializerFeature.DisableCircularReferenceDetect);\n. @GuChuan \nPrettyFormat \u7684\u4ecb\u7ecd https://github.com/alibaba/fastjson/wiki/SerializerFeature_PrettyFormat_cn\nDisableCircularReferenceDetect https://github.com/alibaba/fastjson/wiki/SerializerFeature_DisableCircularReferenceDetect_cn. \u8f93\u51fa\u7684\u65f6\u5019\u6392\u5e8f\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff1ajava\nSerializerFeature.MapSortField\n```. android\u5e94\u8be5\u7528android\u7248\u672c\u554a\uff0c\u6bd4\u5982 http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.56.android/\n\u53e6\u5916\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u770b\u4e0d\u51fa\u95ee\u9898\uff0c\u80fd\u591f\u63d0\u4f9b\u66f4\u591a\u7684\u9519\u8bef\u5806\u6808\u4fe1\u606f\u4e48\uff1f. \u4f20\u5165Object.class\uff0c\u5c31\u8ba4\u4e3a\u662f\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u54c8\uff0c\u53cd\u6b63\u662fObject\u7684\u6d3e\u751f\u7c7b. \u95ee\u9898\u6ca1\u91cd\u73b0 https://github.com/alibaba/fastjson/commit/9d29a791ece012f70bc394762a82fb52e5b495c9. \u6211\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\uff0c\u9700\u8981\u5e2e\u52a9\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case. \u6d4b\u8bd5\u4ee3\u7801\u5199\u9519\u4e86\uff0c\u6f0f\u4f20\u5165Model.class\u5566\njava\nSystem.out.println(JSON.parseObject(text_beanToArray, Model.class, Feature.SupportArrayToBean));. \u8fd9\u4e2a\u65e5\u671f\u683c\u5f0f\u5bf9\u4e48\uff1f\u7c7b\u4f3c\u683c\u5f0f\n0000-00-00\n9999-09-09\n\u8fd9\u4e2a\u8d85\u51fajava.util.Date\u7684\u8868\u793a\u8303\u56f4\u4e86\uff0c\u5c31\u7b97\u652f\u6301\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u4e5f\u662f\u9519\u7684\u54c8. \u95ee\u9898\u6ca1\u91cd\u73b0 https://github.com/alibaba/fastjson/commit/3a2feb7bbeee8f67ed8dee61feac165bca505c60. \u80fd\u628a\u76f8\u5173\u7684\u6587\u672c\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f. Thank you for your support, it's a good job. fastjson can provide built-in kotlin support in the future, but I have not learned koltlin.. https://github.com/alibaba/fastjson/releases/tag/1.2.36\nhttps://github.com/alibaba/fastjson/releases/tag/1.1.61.android\nfastjson 1.1.61.android & 1.2.36 built-in support kotlin. \n@amorenew @robohorse . @robohorse it's a bug for nullable data class, the problem has been fixed on the branch andrioid ( https://github.com/alibaba/fastjson/tree/android ) and the branch master (https://github.com/alibaba/fastjson/tree/master ). \ni have very little experience with kotlin, i need your help for test.. https://github.com/alibaba/fastjson/releases/tag/1.1.62.android\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.37\n@robohorse\n1.2.37 & 1.1.62.android released. in the new version, nullable data class is supported.. https://github.com/alibaba/fastjson/wiki/FieldBased_cn\n\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u9700\u8981\u7684\uff1f. \u8fd9\u4e2a\u95ee\u9898\u5f88\u5947\u602a\uff0c\u4f60\u80fd\u63d0\u4f9b\u5177\u4f53\u95ee\u9898\u7684case\u4e48\uff1f. \u8fd9\u662f\u4e2a\u95ee\u9898\uff0c\u5c06\u4f1a\u89e3\u51b3\uff0c\u4e0d\u8fc7\u4f60\u6700\u597d\u63d0\u4f9b\u6837\u672c\uff0c\u8fd9\u6837\u597d\u80fd\u786e\u4fdd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\u3002. \u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u4e00\u4e2a\u65b0\u7248\u672c\uff0c\u4e5f\u8bb8\u5c31\u662f\u8fd9\u51e0\u5929. \u6807\u51c6\u7248\u672c\u548candroid\u7248\u672c\u90fd\u5df2\u7ecf\u4fee\u590d\uff0c\u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u4e00\u4e2a\u65b0\u7684android\u7248\u672c\u3002. \u6545\u610f\u62a5\u9519\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e5\u671f. com.alibaba.fastjson.parser.deserializer.ObjectDeserializer. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u65b0\u7248\u672c\u662f\u652f\u6301\u7684\uff0c\u4f60\u8bd5\u8bd5\u770b https://github.com/alibaba/fastjson/releases/tag/1.2.31. \u8fd9\u4e2a\u95ee\u9898\u4fee\u590d\u8fc7\uff0c\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff1f\u5347\u7ea7\u52301.2.31\u8bd5\u8bd5\u770b. \u4ec0\u4e48\u7248\u672c\uff1f. \u5199\u4e86\u4e00\u4e2a\u5173\u95ed\u8fd9\u4e2a\u7279\u6027\u7684\u65b9\u6cd5\uff1a\nhttps://github.com/alibaba/fastjson/wiki/deserialize_disable_bigdecimal_cn\n\u770b\u662f\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42. \u95ee\u9898\u4fee\u590d\u5e76\u5df2\u53d1\u5e03 https://github.com/alibaba/fastjson/releases/tag/1.1.57.android. \u6536\u5230\uff0c\u5c3d\u5feb\u5904\u7406. \u95ee\u9898\u4fee\u590d\u5e76\u5df2\u53d1\u5e03 https://github.com/alibaba/fastjson/releases/tag/1.1.57.android. data\u7684\u6570\u636e\u7c7b\u578b\u662fString\uff0c\u5e8f\u5217\u5316\u7684\u7ed3\u679c\u5f53\u7136\u662f\u5e26\\\u3002\u770b\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u8981\uff1ahttps://github.com/alibaba/fastjson/wiki/JSONField_jsonDirect_cn. Number\u4e0d\u5e94\u8be5\u8f6c\u6362\u4e3a{}\u7684\uff0c\u600e\u6837\u7684\u573a\u666f\uff1f. \u5982\u679chttps://github.com/alibaba/fastjson/commit/14add663b0f7928c15b29603e95ee51d71bbe79f \u8fd9\u4e2atestcase\uff0c\u95ee\u9898\u6ca1\u6709\u91cd\u73b0. \u786e\u5b9e\u5bf9osgi\u4e0d\u591f\u4e86\u89e3\uff0c\u5e0c\u671b\u80fd\u591f\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\uff1f. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.56.android/\n\u7528\u8fd9\u4e2a\u9488\u5bf9android\u4f18\u5316\u7684\u7248\u672c\u5427\uff0c\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u5e76\u4e14\u6027\u80fd\u66f4\u597d\uff0c\u5305\u4e5f\u66f4\u5c0f\u3002. \u4ec0\u4e48\u7248\u672c\uff1f. \u4e0a\u9762\u51fa\u9519\u4fe1\u606f\u662f\u5728\u54ea\u4e2a\u7248\u672c\u4e0b\u7684\uff1f. \u5347\u7ea7\u52301.2.31\u7248\u672c\u5c31\u597d\u4e86. \u8fd9\u4e2a\u662f\u5e8f\u5217\u5316\u65f6\u8c03\u7528\u65b9\u6cd5getLoadConfig\u62a5\u9519\u4e86\uff0c\u5177\u4f53\u89e3\u51b3\u529e\u6cd5\u53c2\u8003\u6587\u6863 https://github.com/alibaba/fastjson/wiki/SerializerFeature_IgnoreErrorGetter_cn. \u975e\u9759\u6001\u5185\u5d4c\u7c7b\uff0c\u5efa\u8bae\u6dfb\u52a0static\u4fee\u9970\u7b26. \u975e\u9759\u6001\u5185\u5d4c\u7c7b\u7684\u7f3a\u7701\u6784\u9020\u9700\u8981parent.this. \u975e\u9759\u6001\u5185\u5d4c\u7c7b\uff0c\u65e0\u6cd5\u521b\u5efa\u5b9e\u4f8b\uff0c\u628a\u5185\u5d4c\u7c7b\u52a0\u4e0astatic\u4fee\u9970\u7b26\u5c31\u597d\u4e86. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\u600e\u4e48\u56de\u4e8b\uff1f. \u6211\u521a\u6d4b\u8bd5\u8fc7\uff0c\u65b0\u7248\u672c\u662f\u597d\u7684\uff0c\u5347\u7ea7\u5230\u6700\u65b0\u7248\u5427 https://github.com/alibaba/fastjson/releases/tag/1.2.31. \u5df2\u7ecf\u652f\u6301\uff0c\u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u4fee\u590d\u6b64\u95ee\u9898\u3002. \u95ee\u9898\u4fee\u590d\u5e76\u5df2\u53d1\u5e03 https://github.com/alibaba/fastjson/releases/tag/1.1.57.android. \u76ee\u524d\u6ca1\u4ec0\u4e48\u529e\u6cd5. DataBean \u8fd9\u4e2a\u662f\u975e\u9759\u6001\u5185\u5d4c\u7c7b\uff0c\u80fd\u5426\u52a0\u4e0astatic\u4fee\u9970\u7b26\uff1f. \u5148\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u89e3\u51b3\u5427\njava\nParserConfig.getGlobalInstance().getDeserializer(org.springframework.util.LinkedCaseInsensitiveMap.class);\n\u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\u5185\u7f6e\u652f\u6301. \u7ed9\u4f60\u5e26\u6765\u9ebb\u70e6\uff0c\u5f88\u62b1\u6b49\u3002\u8fd9\u6837\u8bbe\u8ba1\uff0c\u662f\u56e0\u4e3a\u65e9\u671f\u9047\u5230\u5f88\u591a\u53cd\u9988\u662f\u56e0\u4e3a\u5faa\u73af\u5f15\u7528\u62a5\u9519\uff0c\u5f15\u5165\u8fd9\u4e2a\u7279\u6027\uff0c\u5bf9\u6709\u4e9b\u4eba\u662f\u5e2e\u52a9\uff0c\u5bf9\u4f60\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u9ebb\u70e6\u3002\u5982\u4e0a\u9762\u7684\u540c\u5b66\u6240\u56de\u7b54\u7684\u90a3\u6837\uff0c\u53ef\u4ee5\u7528SerializerFeature.DisableCircularReferenceDetect \u89e3\u51b3\u4f60\u7684\u95ee\u9898\u3002\u6bcf\u4e2a\u5e93\u90fd\u6709\u81ea\u5df1\u7684\u95ee\u9898\u7684\uff0c\u4f7f\u7528fastjson\u4f60\u9047\u5230\u95ee\u9898\uff0c\u5f88\u5feb\u5c31\u6709\u4eba\u7ed9\u4f60\u89e3\u51b3\u529e\u6cd5\uff0c\u5982\u679c\u6709bug\uff0c\u6211\u4e5f\u4f1a\u5c3d\u5feb\u63d0\u4f9b\u4fee\u590d\u65b9\u6848\u3002. \u8bf7\u95ee\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u6ca1\u6709\uff1f\u6b63\u786e\u7248\u672c\u662f\u4ec0\u4e48\uff1f\u80fd\u5426\u63d0\u4f9bConditionGroupPreferentialPair\u7684\u7c7b\u7ed3\u6784\u4fe1\u606f\uff0c\u4ece\u4f60\u63d0\u4f9b\u7684\u4ee3\u7801\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\u3002\n\u8d28\u91cf\u662ffastjson\u5f88\u5173\u6ce8\u7684\u95ee\u9898\uff0c\u6709\u5927\u7ea63700\u591a\u4e2a\u56de\u5f52\u6d4b\u8bd5\uff0c\u6bcf\u6b21\u53d1\u5e03\u90fd\u4f1a\u56de\u5f52\uff0c\u963f\u91cc\u7edd\u5927\u90e8\u5206Java\u5e94\u7528\u90fd\u7528fastjson\uff0c\u5982\u679c\u8d28\u91cf\u51fa\u95ee\u9898\uff0c\u5728\u5185\u90e8\u4e5f\u4f1a\u4ea7\u751f\u6545\u969c\u3002\n\u88ab\u4f7f\u7528\u8d8a\u5e7f\u6cdb\uff0c\u9047\u5230\u7684\u573a\u666f\u5c31\u4f1a\u8d8a\u591a\uff0c\u4e5f\u8d8a\u5bb9\u6613\u9047\u5230\u95ee\u9898\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u5b8c\u5168\u6ca1\u95ee\u9898\uff0c\u9047\u5230\u95ee\u9898\u53cd\u9988\u8fc7\u6765\uff0c\u6211\u4f1a\u5c3d\u5feb\u54cd\u5e94\u5e76\u4fee\u590d\u3002\n. getJSON\u65b9\u6cd5\u540d\u5b57\u4fee\u6539\u6210toJSON\u5427. getJSON\u65b9\u6cd5\u540d\u5b57\u4fee\u6539\u6210toJSON\u5427. RequestBody\u7684\u7c7b\u7ed3\u6784\u662f\u600e\u6837\u7684\uff1f. RequestBody\u7684\u7c7b\u7ed3\u6784\u662f\u600e\u6837\u7684\uff1f. fastjson\u4ec0\u4e48\u7248\u672c\uff1f\u7528\u6700\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\uff1fhttps://github.com/alibaba/fastjson/releases/tag/1.2.31. fastjson\u4ec0\u4e48\u7248\u672c\uff1f\u7528\u6700\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\uff1fhttps://github.com/alibaba/fastjson/releases/tag/1.2.31. 1.2.31\u7248\u672c\u662f\u597d\u7684\uff0c\u5347\u7ea7\u5427. 1.2.31\u7248\u672c\u662f\u597d\u7684\uff0c\u5347\u7ea7\u5427. \u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u6b63\u51c6\u5907\u53d1\u5e03\u65b0\u7248\u672c\u3002. \u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u6b63\u51c6\u5907\u53d1\u5e03\u65b0\u7248\u672c\u3002. \u65b0\u7248\u672c\u5df2\u7ecf\u89e3\u51b3\u95ee\u9898 https://github.com/alibaba/fastjson/releases/tag/1.2.32. \u65b0\u7248\u672c\u5df2\u7ecf\u89e3\u51b3\u95ee\u9898 https://github.com/alibaba/fastjson/releases/tag/1.2.32. headerdestination\u662f\u4e00\u4e2aMap\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\u3002. headerdestination\u662f\u4e00\u4e2aMap\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\u3002. \u5df2\u7ecf\u652f\u6301 https://github.com/alibaba/fastjson/releases/tag/1.2.32. \u5df2\u7ecf\u652f\u6301 https://github.com/alibaba/fastjson/releases/tag/1.2.32. \u6309\u7406\u6765\u8bf4\u4e0d\u5e94\u8be5\u7684\uff0c\u5728com.alibaba.fastjson.util.TypeUtils#isProxy\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5982\u679c\u8bc6\u522b\u5230\u662fhibernate\u7684\u4ee3\u7406\uff0c\u5c31\u4f1aunwrap\u5904\u7406\uff0c\u4ece\u800c\u907f\u514dlazy loading\uff0c\u4f60\u80fd\u5e2e\u5fd9\u8c03\u8bd5\u4e00\u4e0b\u662f\u600e\u4e48\u60c5\u51b5\u4e48\uff1f. \u6309\u7406\u6765\u8bf4\u4e0d\u5e94\u8be5\u7684\uff0c\u5728com.alibaba.fastjson.util.TypeUtils#isProxy\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5982\u679c\u8bc6\u522b\u5230\u662fhibernate\u7684\u4ee3\u7406\uff0c\u5c31\u4f1aunwrap\u5904\u7406\uff0c\u4ece\u800c\u907f\u514dlazy loading\uff0c\u4f60\u80fd\u5e2e\u5fd9\u8c03\u8bd5\u4e00\u4e0b\u662f\u600e\u4e48\u60c5\u51b5\u4e48\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u9884\u8ba1\u4e0b\u4e2a\u5468\u672b\uff085\u670821\u65e5\uff09\u53d1\u5e03\uff0c\u4e3a\u4e86\u80fd\u591f\u4fdd\u8bc1\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u5efa\u8bae\u4f60\u81ea\u5df1\u7f16\u8bd1\u4e00\u4e2a\u5feb\u7167\u7248\u672c\u9a8c\u8bc1\u3002. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u8fd9\u4e2a\u53ea\u5bf9JavaBean\u8d77\u4f5c\u7528\uff0c\u5bf9Map\u4e0d\u8d77\u4f5c\u7528. It seems that the new implementation is more appropriate.. \u4e4b\u524d\u6ca1\u505aJSONField\u4e0a\u7684\u652f\u6301\uff0c\u5347\u7ea7\u5230\u65b0\u7248\u672c\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u4e0d\u5b8c\u5168\u7b97\u662f\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u5e94\u7b97\u662f\u662f\u529f\u80fd\u4e0d\u5b8c\u6574. JSONType\u5df2\u7ecf\u652f\u6301\u4e86\uff0c\u7b49\u4e0b\u4e2a\u7248\u672c\u53d1\u5e03\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. \u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. https://github.com/alibaba/fastjson/commit/1fc94116b909a1bc75c09527955ef0fa2356f50a \u5df2\u7ecf\u652f\u6301\uff0c\u5c06\u4f1a\u5728\u5408\u9002\u7684\u65f6\u95f4\u53d1\u5e03\u65b0\u7248\u672c\u3002. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u4f60\u7684\u7c7b\u6709\u5982\u4e0b\u6807\u6ce8 \uff1f\njava\n@JsonInclude. JSON.parseObject(\"....\", Feature.OrderedField); // \u8fd9\u4e2a\u53ef\u4ee5\u4fdd\u6301\u987a\u5e8f. \u6211\u8fd9\u8fb9\u6709\u4ee3\u7801\u63d0\u4ea4\u5bfc\u81f4\u5408\u5e76\u51b2\u7a81\u4e86\uff0c\u4f60\u89e3\u51b3\u51b2\u7a81\u91cd\u65b0\u63d0\u4ea4\u4e00\u4e0b\u5427\uff1f. Issue1202. \u6211\u8fd9\u8fb9\u6709\u4ee3\u7801\u63d0\u4ea4\u5bfc\u81f4\u5408\u5e76\u51b2\u7a81\u4e86\uff0c\u4f60\u89e3\u51b3\u4e00\u4e0b\u51b2\u7a81\uff1f. \u4f7f\u7528PropertyFilter\u5e94\u8be5\u80fd\u8fc7\u6ee4\u7684\u554a\uff0c\u80fd\u5e2e\u5fd9\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\uff1f. https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. java\nJSON.toJSONStrinng(obj, SerializerFeature.MapSortField); // since 1.2.27. \u7c7b\u578b\u8ba1\u7b97\u9519\u8bef\u4e86\u3002\u3002\u3002. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. \u8fd9\u4e2a\u662f\u7279\u6027\uff0c\u4e0d\u662fbug. \u4ec0\u4e48\u7248\u672c\uff1f\u9519\u8bef\u4fe1\u606f\u662f\u600e\u6837\u7684\uff1f. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. \u53c2\u8003\u8fd9\u4e2a https://github.com/alibaba/fastjson/wiki/ContextValueFilter. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. \u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.58.android. https://github.com/alibaba/fastjson/releases/tag/1.2.33\n\u5df2\u7ecf\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u662f\u5426\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u5df2\u652f\u6301\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.1.63.android. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f. \u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u9700\u8981\u7684\uff1a\nhttps://github.com/alibaba/fastjson/wiki/JSONField_jsonDirect_cn. \u56e0\u4e3aParamEntry\u7684\u5b57\u6bb5\u90fd\u662fPrivate\u7684. SerializerFeature.WriteNullStringAsEmpty\nSerializerFeature.WriteNullNumberAsZero\nSerializerFeature.WriteNullBooleanAsFalse. \u6545\u610f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0c\u8bf7\u4f7f\u7528@JSONField\n```java\n    public static class B {\n        @JSONField(name = \"_parentId\")\n        private String _parentId;\n    public String get_parentId() {\n        return _parentId;\n    }\n\n    public void set_parentId(String _parentId) {\n        this._parentId = _parentId;\n    }\n}\n\n. https://github.com/alibaba/fastjson/releases/tag/1.2.34 \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. \u8fd8\u6709\u80fd\u5426\u63d0\u4f9bfastjson\u7684\u7248\u672c\uff1f. \u80fd\u5e2e\u5fd9\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u4e48\uff1f\u8fd9\u6837\u6211\u4e0d\u597d\u8bca\u65ad. \u95ee\u9898\u91cd\u73b0\uff0c\u5c3d\u5feb\u4fee\u590d. https://github.com/alibaba/fastjson/releases/tag/1.1.60.android \n\u95ee\u9898\u4fee\u590d\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u662f\u4e0d\u662f\u548ccom.alibaba.fastjson.parser.deserializer.ExtraProcessor\u529f\u80fd\u91cd\u590d\u4e86\uff1f. \u770b\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1ahttps://github.com/alibaba/fastjson/wiki/ExtraProcessable. \u8fd8\u6709\u8fd9\u4e2a\uff1ahttps://github.com/alibaba/fastjson/wiki/ParseProcess. \u5df2\u6c9f\u901a\uff0c\u5e94\u8be5\u662f\u5e76\u53d1\u5199\u5bfc\u81f4\u4e00\u4e2a\u810f\u7684HashSet\u5bfc\u81f4\u7684\uff0c\u548cfastjson\u65e0\u5173. https://github.com/alibaba/fastjson/releases/tag/1.2.34 \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. \u5b89\u5168\u7684\uff0c\u8fd9\u91cc\u6ca1\u95ee\u9898\uff0c\u5f97\u4e0d\u5230\u91cd\u65b0Put\u4e00\u6b21\u4e0d\u5f71\u54cd\u540e\u7eed\u4f7f\u7528\u54c8\u3002. ![wechatimg35](https://user-images.githubusercontent.com/1166785/27413331-3ca224c6-572d-11e7-9266-550566dfd0ba.jpeg)\n\u8fd9\u91cc\u7684\u4ee3\u7801\u591a\u4f59\u4e86\uff0c\u662f\u4e0d\u662f\u5e94\u8be5\u53bb\u6389\uff1f\u4f60\u770b\u770b\n. jdk 1.5. \u4e0d\u8981\u589e\u52a0SerializerFeature\u4e86\uff0c\u56e0\u4e3a\u5df2\u6ee132\u4e2a\u3002. https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1f. \u4ec0\u4e48\u7248\u672c\uff1f. \u5e94\u8be5\u662f\u6709\u5faa\u73af\u5f15\u7528\u6216\u8005get\u65b9\u6cd5\u4e2d\u6709new. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u6211\u8ba4\u540c. https://github.com/alibaba/fastjson/releases/tag/1.2.34 \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. \u4f7f\u75281.2.33\u7248\u672c\u8bd5\u8bd5\u770b\uff1f. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. \u8fd9\u662f\u7a7a\u503c\u6ca1\u5904\u7406\u597d\u5bfc\u81f4\u7684\uff0c\u6211\u5468\u672b\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\u4fee\u6b63\u6b64\u95ee\u9898. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u9884\u8ba1\u5728\u661f\u671f\u5929\uff087\u67082\u65e5\uff09\u53d1\u5e03\u65b0\u7248\u672c\u3002. \u5df2\u89e3\u51b3\u6b64\u95ee\u9898\nhttps://github.com/alibaba/fastjson/releases/tag/1.1.59.android . \u4f60\u8981\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u5927\u81f4\u662f\u600e\u6837\u7684\uff1f\u6211\u770b\u770b\u73b0\u6709\u7684\u529f\u80fd\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f\u4f60\u6709\u597d\u7684\u5efa\u8bae\u4e5f\u5e0c\u671b\u80fd\u544a\u8bc9\u6211\u54c8. \u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff1ajava\n/*\n * Beans that support customized output of JSON text shall implement this interface.\n * \n * @author wenshao[szujobs@hotmail.com]\n /\npublic interface JSONAware {\n/**\n * @return JSON text\n */\nString toJSONString();\n\n}\n. \u4ec0\u4e48\u7248\u672c\uff1f. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672cjava\npublic class Model {\n     JSONField(format=\"trim\")\n     public String name;\n}\n. https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u9700\u8981\u7684. \u591a\u5927\uff1f. \u6587\u6863\u786e\u5b9e\u6ca1\u5199\u597d\uff0cwiki\u6587\u6863\u6743\u9650\u662f\u5f00\u653e\u7684\uff0c\u89c9\u5f97\u6709\u4e0d\u597d\u7684\u5730\u65b9\uff0c\u80fd\u53c2\u4e0e\u8fdb\u6765\u4e00\u8d77\u6539\u8fdb\u4e48\uff1f. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. @VictorZeng \u5e2e\u5fd9\u770b\u770b. https://github.com/alibaba/fastjson/releases/tag/1.1.62.android\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.37\n1.1.62.android & 1.2.37\u53d1\u5e03\uff0c\u589e\u5f3a\u4e86\u5bf9kotlin\u7684\u652f\u6301. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35 . \u95ee\u9898\u5df2\u91cd\u73b0\u5e76\u4e14\u4fee\u6b63\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5f15\u8d77\u7684 java\npublic  T getCacheObject() {\n        return (T) this.getObject();\n}\n\u7b49\u5230\u8fd9\u4e2a\u6708\u5e9530\u65e5\u53d1\u5e031.2.36\u7248\u672c\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . SerializerFeature.BrowserSecure . \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.35. \u8fd9\u4e2a\u95ee\u9898\u57281.2.34\u7248\u672c\u5df2\u7ecf\u4fee\u590d\u8fc7\u4e86\uff0c\u4f60\u7528\u6700\u65b0\u7248\u8bd5\u8bd5\u770b https://github.com/alibaba/fastjson/releases/tag/1.2.35. \u591a\u4e2ajar\u7684\u7248\u672c\u7ba1\u7406\u5f88\u9ebb\u70e6\u7684\uff0c\u9047\u5230\u4e0d\u517c\u5bb9\u53cd\u9988\u7ed9\u6211\uff0c\u6211\u5728android\u4e0a\u8865\u4e0a\u5c31\u597d\u4e86. ObjectSerializer/ObjectDeserializer\u57281.0\u548c1.1\u4e0a\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5android\u7248\u672c\u662f1.0.x\u7248\u7248\u672c\u3002\u5206\u5f00\u591a\u4e2ajar\u4e5f\u89e3\u51b3\u4e0d\u4e86\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002. \u628a\u5b58\u5728\u5dee\u5f02\u7684\u4e24\u4e2a\u65b9\u6cd5\u90fd\u5b9e\u73b0\u5c31\u517c\u5bb9\uff0c\u6bd4\u5982\uff1ajava\npublic class MyObjectSerializer {\n    public void write(JSONSerializer serializer, //\n               Object object, //\n               Object fieldName, //\n               Type fieldType) throws IOException {\n          write(serializer, object, fieldName, fieldType, 0);\n    }\npublic void write(JSONSerializer serializer, //\n           Object object, //\n           Object fieldName, //\n           Type fieldType, //\n           int features) throws IOException {\n}\n\n}\n. \u6b22\u8fce\u53c2\u4e0e\u63d0\u4ea4PR. \u6b22\u8fce\u53c2\u4e0e\u63d0\u4ea4PR. com.alibaba.json.bvt.CurrencyTest4 \u8fd9\u4e2a\u56de\u5f52\u6d4b\u8bd5\u6ca1\u8dd1\u8fc7\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/254495547/log.txt?X-Amz-Expires=30&X-Amz-Date=20170718T051152Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJRYRXRSVGNKPKO5A/20170718/us-east-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=0558238f8a463f152a007f6287ff496b8c3b319af38a8a6a5c9a9fd38d3976f4. com.alibaba.json.bvt.CurrencyTest4 \u8fd9\u4e2a\u56de\u5f52\u6d4b\u8bd5\u6ca1\u8dd1\u8fc7\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/254495547/log.txt?X-Amz-Expires=30&X-Amz-Date=20170718T051152Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJRYRXRSVGNKPKO5A/20170718/us-east-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=0558238f8a463f152a007f6287ff496b8c3b319af38a8a6a5c9a9fd38d3976f4. \u662f\u4e0d\u662f\u53ea\u6709\u4e00\u4e2a\u6709getter\uff1f. \u662f\u4e0d\u662f\u53ea\u6709\u4e00\u4e2a\u6709getter\uff1f. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. \u4f60\u8fd9\u4e2a\u9700\u6c42\u548c\u8bbe\u8ba1\u4e0d\u4e00\u81f4\uff0c\u4f60\u80fd\u6539\u4e48\uff1f\u8fd9\u4e2aAPI\u662f\u7528\u6765\u63d0\u5347\u6027\u80fd\u7684\uff0c\u7279\u522b\u662frpc\u573a\u666f\u3002. \u4f60\u8fd9\u4e2a\u9700\u6c42\u548c\u8bbe\u8ba1\u4e0d\u4e00\u81f4\uff0c\u4f60\u80fd\u6539\u4e48\uff1f\u8fd9\u4e2aAPI\u662f\u7528\u6765\u63d0\u5347\u6027\u80fd\u7684\uff0c\u7279\u522b\u662frpc\u573a\u666f\u3002. https://github.com/alibaba/fastjson/releases/tag/1.1.60.android \n\u95ee\u9898\u4fee\u590d\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.1.60.android \n\u95ee\u9898\u4fee\u590d\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. travis-ci\u7684\u6d4b\u8bd5\u8dd1\u4e0d\u8fc7\uff0c\u4f60\u770b\u4e00\u4e0b\u662f\u600e\u4e48\u56de\u4e8b\uff1f\nhttps://travis-ci.org/alibaba/fastjson/builds/256333723?utm_source=github_status&utm_medium=notification. \u5df2\u7ecf\u5408\u5e76\uff0c\u671f\u5f85\u4f60\u4ee5\u540e\u4e00\u76f4\u53c2\u4e0efastjson spring mvc support\u90e8\u5206\u7684\u4ee3\u7801\u5f00\u53d1. @VictorZeng \u5e2e\u5fd9\u770b\u4e00\u4e0b\u54c8. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u79cd\u9700\u6c42\uff1f\u80fd\u8bf4\u8bf4\u4f60\u573a\u666f\u4e48\uff1f. \u5df2\u7ecf\u652f\u6301\u975e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.36. @VictorZeng @neil4dong \u5e2e\u5fd9\u770b\u4e00\u4e0b. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . \u4e3a\u5565\u8981\u8c03\u7528\u7f3a\u7701\u6784\u9020\u51fd\u6570\u5462\uff1f\u5982\u679c\u8c03\u7528\u7f3a\u7701\u6784\u9020\u51fd\u6570\uff0cmessage\u5c31\u4f20\u4e0d\u8fdb\u53bb\u4e86\u54c8. \u80fd\u63a5\u4e00\u4e0b\u5806\u6808\u4fe1\u606f\u4e48\uff1f\u8fd9\u4e2a\u5e94\u8be5\u540e\u672b\u5c3e\u6709\\u001A\u5b57\u7b26\u4e32\u5bfc\u81f4\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u4fee\u590d\u8fc7\uff0c\u4f60\u8bd5\u8bd5\u6700\u65b0\u7248\u672c1.2.35\u662f\u5426\u5df2\u7ecf\u89e3\u51b3\u6b64\u95ee\u9898. \u6b22\u8fce\u53c2\u4e0e\u5b8c\u5584\u6587\u6863. \u6211\u6d4b\u8bd5\u65b0\u7248\u672c\u662f\u597d\u7684\uff0c\u4f60\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u5427 http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.35/. \u57fa\u672c\u662f\u540c\u6b65\u7684\u54c8\uff0c\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\uff1f. \u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\uff0c\u9884\u8ba1\u5728\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . \u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff1f\u8fd9\u4e2a\u95ee\u9898\u6539\u8fc7\u4e86\u54c8_. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . @VictorZeng . https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . SerializerFeature.WriteNonStringKeyAsString\u662fbug\uff0c\u5df2\u5904\u7406\uff0c\u540e\u9762\u8fd9\u4e2a\u4e0d\u8981\u7d27\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . \u4e3a\u4ec0\u4e48\u8981\u6709\u8fd9\u4e2a\u9700\u6c42\uff1f. \u6b63\u5728\u652f\u6301\uff0candroid\u7248\u672c\u548c\u6807\u51c6\u90fd\u5c06\u4f1a\u652f\u6301. https://github.com/alibaba/fastjson/releases/tag/1.1.61.android\n\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\n. https://github.com/alibaba/fastjson/releases/tag/1.1.62.android\n1.1.62.android\u7248\u672c\u5b8c\u5584\u4e86kotlin\u652f\u6301\uff0c\u652f\u6301nullale dataclass. https://github.com/alibaba/fastjson/releases/tag/1.2.36\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c .java\nJSON.parseObject(\"...\", Feature.SortFeidFastMatch);\n. \u4e0d\u61c2\u4ec0\u4e48\u610f\u601d\u54e6. JavaBean\u6709\u7c7b\u578b\u4fe1\u606f\uff0c\u53ef\u4ee5\u505a\u5f88\u591a\u4f18\u5316. \u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e2a\u9700\u6c42\uff1f. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. \u6700\u521d\u629b\u9519\u7684\uff0c\u540e\u6765\u6539\u4e3a\u4e0d\u629b\u9519\uff0c\u4f46\u6539\u7684\u4e0d\u591f\u5f7b\u5e95\uff08\u6bd4\u5982\u4f60\u8bf4\u7684\u6709\u7a7a\u683c\u7684\u573a\u666f\uff09\u3002\u4e0d\u629b\u9519\u6709\u4ec0\u4e48\u95ee\u9898\uff1f. \u5927\u5199\u7684FALSE\u4e0d\u662fjson\u89c4\u8303\u54e6. very good idea, i will add these features in the next version.. \u539f\u6765\u6cdb\u578b\u7f13\u5b58\u6709bug\uff0c\u5df2\u7ecf\u4fee\u590d\u8fc7\uff0c\u65b0\u7248\u672c\u6ca1\u95ee\u9898\u5c31\u7528\u65b0\u7248\u672c\u5427. \u55ef\uff0c\u8bbe\u8ba1\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u907f\u514dput\u518dget\uff0c\u5e94\u8be5\u662fget == null, create, put\uff0c\u6709\u4e00\u4e2a\u5730\u65b9\u4f7f\u7528\u4e0d\u5f53\uff0c\u6211\u5df2\u63d0\u4ea4\u4ee3\u7801\u4fee\u590d\u3002. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. \u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u611f\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.37. thank you, but fastJson is based on jdk 1.5.. \u8fd9\u6709\u4ec0\u4e48\u95ee\u9898\uff1f. new BigDecimal(5.00).toString()\u7684\u7ed3\u679c\u5c31\u662f\"5\"\u554a\uff0cnew BigDecimal(\"5.00\").toString(). \u8c22\u8c22\u53cd\u9988\u95ee\u9898\uff0c\u8fd9\u4e2a\u6539\u52a8\u4f1a\u5bfc\u81f4\u4e0d\u517c\u5bb9\uff0c\u8fd8\u662f\u4e0d\u6539\u4e86\u54c8 . \u5e0c\u671b\u80fd\u7ee7\u7eed\u53c2\u4e0e\uff0c\u63d0\u4ea4PR. \u6b22\u8fce\u5fae\u4fe1\u8054\u7cfb\u6211 wenshaojin . \u8fd9\u4e2a\u7248\u672c\u4fee\u590d\u8fc7\uff0c\u4f60\u7528\u65b0\u7248\u672c\u8bd5\u8bd5\u770b https://github.com/alibaba/fastjson/releases/tag/1.2.37. ParameterizedTypeImpl \u8fd9\u4e2a\u4f60\u80fd\u81ea\u5df1\u7f13\u5b58\u8d77\u6765\u4e48\uff1f\u6216\u8005\u9759\u6001\u5316\u505a\u6210\u5458\u53d8\u91cf\uff0c\u6216\u8005\u4f7f\u7528TypeReference. @zhuyiren \u662f\u4e3a\u4e86\u6027\u80fd\u54c8. JSON.DEFAULT_PARSER_FEATURE |= Feature.DisableCircularReferenceDetect.getMask();\n\u8fd9\u4e2a\u8bbe\u7f6e\u4e86\u4e48\uff1f.java\nString mapJson = JSON.toJSONString(map, SerializerFeature.DisableCircularReferenceDetect);\n. bug\u91cd\u73b0\u5e76\u4fee\u590d\uff0c\u7b49\u4e0b\u4e2a\u7248\u672c\u5427\uff0c\u53ef\u80fd\u572826\u65e5. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. https://github.com/alibaba/fastjson/wiki/JavaBean%E5%90%8D%E5%AD%97%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98. bug fixed, please try the last version. https://github.com/alibaba/fastjson/releases/tag/1.2.38. thank you, bug has been fixed and added several tests.. bug fixed, please try the last version. https://github.com/alibaba/fastjson/releases/tag/1.2.38.java\nfloatOverflowMap.put(\"va\", floatOverflow + 1);\n                     ----\nfloatOverflowMap.put(\"v\", floatOverflow + 1);\n```. but \"Float.MAX_VALUE + 1\" is not overflow.\njava\nassertEquals(floatVal.v, Float.parseFloat(\"3.4028234663852886E38\"));. ```java\n        Map floatOverflowMap = new HashMap();\n        double floatOverflow = Float.MAX_VALUE;\n        floatOverflowMap.put(\"v\", floatOverflow + floatOverflow);\n        String sFloatOverflow = JSON.toJSONString(floatOverflowMap);\n    System.out.println(sFloatOverflow);\n    assertEquals(\"{\\\"v\\\":6.805646932770577E38}\", sFloatOverflow);\n    FloatVal floatVal = JSON.parseObject(sFloatOverflow, FloatVal.class);\n    assertEquals(Float.parseFloat(\"6.805646932770577E38\"), floatVal.v);\n\nit's no problem.. \u8c22\u8c22\u53cd\u9988\uff0c\u8fd9\u662f\u4e00\u4e2abug\uff0c\u5df2\u7ecf\u4fee\u590d\uff0c\u4f1a\u5728\u4e0b\u4e2a\u7248\u672c\u4e2d\u5e26\u4e0a\uff0c\u4e0b\u4e2a\u7248\u672c\u53ef\u80fd\u5728\u5468\u672b\u53d1\u5e03. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u5e94\u8be5\u662fgetBooleanValue\u62a5\u9519\u5427\uff0c\u5982\u679c\u662fgetBooleanValue\u62a5\u9519\uff0c\u5347\u7ea7\u5230\u6700\u65b0\u76841.2.36\u5c31\u597d\u4e86. \u8bf7\u7b7e\u7f72CLA. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u52a8\u6001\u751f\u4ea7\u7684\u7c7b\u4e0d\u5e94\u8be5\u662f\u5e8f\u5217\u5316\u4f20\u8f93\u7684\u5bf9\u8c61\u54c8\uff1f. \u63d2\u4ef6\u76f8\u5173\u7684\u7c7b\u80fd\u5355\u72ec\u4e00\u4e2aParserConfig\u6216\u8005SerializeConfig\u66f4\u5408\u9002\u5427\uff1f. \u4e0d\u662f\u6bcf\u4e2a\u7c7b\u4e00\u4e2aParserConfig/SerializeConfig\uff0c\u800c\u662f\u6bcf\u4e2a\u63d2\u4ef6\u4e00\u4e2aSerializeConfig/ParserConfig\uff0c\u63d2\u4ef6\u5462\u5378\u8f7d\u81ea\u7136\u4e5f\u5c31\u5378\u8f7d\u4e86. \u4f1a\u5c3d\u5feb\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4e3a\u4e86\u80fd\u591f\u4fdd\u8bc1\u95ee\u9898\u4f60\u80fd\u89e3\u51b3\uff0c\u5efa\u8bae\u4f60\u81ea\u884c\u7f16\u8bd1\u4e00\u4e2a\u7248\u672c\u505a\u9a8c\u8bc1\u3002. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u51b2\u7a81\u4e86\uff0c\u8bf7\u89e3\u51b3\u51b2\u7a81\u91cd\u65b0\u63d0\u4ea4\uff0c\u8fd9\u6837\u7684bug fixed\uff0c\u5efa\u8bae\u63d0\u4ea4\u5230android\u5206\u652f. https://github.com/alibaba/fastjson/wiki/TypeReference\n\u770b\u8fd9\u4e2a\u6587\u6863\u662f\u5426\u5bf9\u4f60\u6709\u5e2e\u52a9. \u8fd9\u4e2a\u662f\u8f93\u5165json\u4e4b\u524d\u5c31\u88ab\u622a\u65ad\u4e86\u5427. \u8fd9\u4e2a\u662f\u52a0\u4e86SerializerFeature.WriteClassName\u5bfc\u81f4\uff0c\u53bb\u6389\u5c31\u597d\u4e86. \u4ec0\u4e48\u7248\u672c\uff1f. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. 3017\u8fd9\u6837\u7684\u65e5\u671f\u600e\u4e48\u6765\u7684\uff1f. \u5546\u54c1\u8fc7\u671f\u65f6\u95f43017\u5e74\uff0c\u52a0\u8fd9\u4e2a\u652f\u6301\uff0c\u89c9\u5f97\u4f1a\u5bb9\u6613\u5bfc\u81f4\u4e00\u4e9b\u6570\u636e\u8bef\u5224\uff0c\u80fd\u4e1a\u52a1\u81ea\u884c\u5904\u7406\u4e48\uff1f. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u95ee\u9898\u5df2\u7ecf\u4fee\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u4ec0\u4e48\u7248\u672c\uff0c\u5728\u6700\u65b0\u7248\u672chttps://github.com/alibaba/fastjson/releases/tag/1.2.37 \u4e2d\u6ca1\u95ee\u9898\uff0c\u5347\u7ea7\u8bd5\u8bd5\u770b. \u770b\u4e0d\u51fa\u4ec0\u4e48\u95ee\u9898\u54e6. android\u73af\u5883\u662f\u5426\u53ef\u4ee5\u7528android\u7248\u672c\uff1fhttps://github.com/alibaba/fastjson/releases/tag/1.1.63.android. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.38. \u6709\u95ee\u9898\u4e48\uff1f.java\nLocalDateTime localDateTime = LocalDateTime.of(2018, 8, 31, 15, 26, 37, 1);\nString json = JSON.toJSONStringWithDateFormat(localDateTime, \"yyyy-MM-dd HH:mm:ss\");//2018-08-31T15:26:37.000000001\nassertEquals(\"\\\"2018-08-31 15:26:37\\\"\", json);\n\u5efa\u8bae\u8fd9\u6837\u5199. \u80fd\u8bd5\u8bd5\u8fd9\u4e2a\u7248\u672c\u4e48 https://github.com/alibaba/fastjson/releases/tag/1.1.63.android. \u5f88\u62b1\u6b49\uff0c\u4e4b\u524d\u90fd\u662f\u5728Intellj\u4e2d\u505a\u7684\u9a8c\u8bc1\u7684\uff0c\u8fd9\u4e2a\u5468\u672b\u8ddf\u8fdb\u54c8. \u5728Android Studio\u7f16\u8bd1\u7684\u7c7b\u4e5f\u91cd\u73b0\u4e0d\u4e86\u3002\u3002\u3002. \u662f\u7684\uff0c\u6bd4\u5982\uff1a\nhttps://github.com/alibaba/fastjson/blob/4cbe5f38c97974dc6b74c6a564cf3a8614173f95/src/test/java/com/alibaba/json/bvt/serializer/enum_/EnumCustomCodecTest.java. \u6211\u5728\u6700\u65b0\u7248\u672c\u4e0a\u6d4b\u8bd5\u662f\u597d\u7684. \u4ec0\u4e48\u7248\u672c\uff1f. \u539f\u6765\u5c31\u662f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0cJSONCreator\u9700\u8981\u4e00\u6b21\u6027\u6784\u9020\u5176\u4ed6\u7684\u5ffd\u7565. \u5f53\u65f6\u8fd9\u6837\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u5b9e\u73b0\u7b80\u5355\uff0c\u8003\u8651\u505a\u6539\u53d8\uff0c\u53ea\u662f\u9700\u8981\u8f83\u591a\u65f6\u95f4\uff0c\u6211\u770b\u56fd\u5e86\u671f\u95f4\u5982\u679c\u4e0d\u51fa\u884c\u5c31\u5e94\u8be5\u80fd\u5b8c\u6210. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c .java\nJSON.parseObject(\"...\", Model.class, Feature.DisableFieldSmartMatch);\n. \u5df2\u7ecf\u6539\u597d\uff0c\u8c22\u8c22\u53cd\u9988. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. \u53ef\u4ee5\u52a0\u4e0atestcase\u4e48\uff1f\u540c\u65f6\u4f60\u8981\u7b7e\u7f72CLA. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n\u770b\u770b\u8fd9\u4e2a\u662f\u5426\u7b26\u5408\u4f60\u7684\u9700\u6c42\uff1f. android\u4e0bcrash\u7684\u5076\u53d1\u4f1a\u5f88\u8be1\u5f02\uff0c\u6839\u636e\u624b\u6dd8\u7b49APP\u6536\u96c6\u5230\u7684\u9519\u8bef\u4fe1\u606f\u6765\u770b\uff0c\u8fd9\u79cd\u60c5\u51b5\u7cfb\u7edf\u7684bug\u53ef\u80fd\u6027\u66f4\u5927\u3002\u53e6\u5916android\u4e0b\u8bf7\u7528android\u4e13\u7248\uff0c\u6027\u80fd\u4f1a\u597d\u5f88\u591a https://github.com/alibaba/fastjson/releases/tag/1.1.63.android. \u597d\u5efa\u8bae. \u62b1\u6b49\uff0c\u8fd9\u6b21\u53d1\u5e03\u6f0f\u4e86\uff0c\u4e0b\u6b21\u53d1\u5e03\u52a0\u4e0a. https://github.com/alibaba/fastjson/wiki/FieldBased_cn\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u8981\u7684\uff1f. https://github.com/alibaba/fastjson/wiki/JSONPath\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u57281.2.40\u7248\u672c\u4e2d\u5e26\u4e0a. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u662f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0c\u4e0d\u662fbug. getter\u65b9\u6cd5\u662f\u600e\u6837\u7684\uff1f. \u80fd\u8bf4\u66f4\u6e05\u695a\u4e00\u4e9b\u4e48\uff1f\u4e0d\u662f\u5f88\u660e\u767d\u4f60\u7684\u95ee\u9898. android\u4e3a\u5565\u4e0d\u7528android\u4e13\u7248\uff1f\u6027\u80fd\u66f4\u597d\uff0c\u4f53\u79ef\u66f4\u5c0f https://github.com/alibaba/fastjson/releases/tag/1.1.63.android. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u9884\u8ba1\u5728\u56fd\u5e86\u671f\u95f4\u4f1a\u53d1\u5e03\u65b0\u7248\u672c\u89e3\u51b3\u95ee\u9898. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. \u8fd9\u4e2a\u95ee\u9898\u662f\u56e0\u4e3adesc\u7f3a\u5931\u5bfc\u81f4\u7684\uff0c\u5982\u4e0b\u8fd9\u6837\uff0c\u52a0\u4e0adesc\u5c31\u5bf9\u4e86kotlin\njson = {\"age\":99,\"name\":\"robohorse\",\"desc\":\"xxx\"}\n. https://github.com/alibaba/fastjson/wiki/FieldBased_cn. \u80fd\u63d0\u4f9b\u5f02\u5e38\u9519\u8bef\u5806\u6808\u4fe1\u606f\u4e48\uff1f. \u5efa\u8bae\u5e94\u7528\u505a\u6539\u52a8\uff0c\u6bd4\u5982\uff1ajava\npublic static class Model {\n    private Long _id;\n    private Long id;\n@JSONField(name = \"_id\")\npublic long get_id() {\n    if (null != _id) {\n        return _id.longValue();\n    } else {\n        return 0L;\n    }\n}\n\n@JSONField(name = \"_id\")\npublic void set_id(Long _id) {\n    this._id = _id;\n}\n\npublic long getId() {\n    if (null != id) {\n        return id.longValue();\n    } else {\n        return 0L;\n    }\n}\n\npublic void setId(Long id) {\n    this.id = id;\n}\n\n}\n. \u4e0d\u5e94\u8be5\u54c8\uff0c\u62a5\u9519\u5e94\u8be5\u662f\u522b\u7684\u539f\u56e0\u5bfc\u81f4\u7684. \u6211\u5199\u4e86\u6d4b\u8bd5\uff0c\u95ee\u9898\u6ca1\u6709\u91cd\u73b0. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u5e2e\u5fd9\u7528\u65b0\u7248\u672c\u9a8c\u8bc1\u4e00\u4e0b\uff0c\u5982\u679c\u8fd8\u4e0d\u884c\uff0c\u53ef\u4ee5\u76f4\u63a5\u5fae\u4fe1\u627e\u6211 wenshaojin. \u95ee\u9898\u91cd\u73b0\u5e76\u4fee\u590d\uff0c\u975e\u5e38\u611f\u8c22\u53cd\u9988\u95ee\u9898. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u80fd\u8865\u5145\u4e00\u4e2atestcase\u4e48\uff1f. FastJsonHttpMessageConverterJSONPCaseTest \u8fd9\u4e2atestcase\u8dd1\u4e0d\u8fc7. \u6211\u7684\u610f\u601d\u662f\u4f60\u628a\u8fd9\u4e2atestcase\u4e5f\u6539\u4e86. \u8865\u5145\u4e86testcase\uff0c\u6ca1\u53d1\u73b0\u95ee\u9898.java\nString json = JSON.toJSONStringWithDateFormat(\n                                  test, \n                                  \"yyyy-MM-dd HH:mm:ss\", \n                                  SerializerFeature.WriteDateUseDateFormat);\n\u8fd9\u6837\u7528\u5427. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u80fd\u5426\u4e0d\u8981\u5bf9\u4ee3\u7801FieldSerializer.java\u505a\u989d\u5916\u7684\u683c\u5f0f\u5316\uff0c\u4e0d\u597d\u627e\u4fee\u6539\u4e86\u54ea\u4e9b\u5730\u65b9. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. @VictorZeng . https://github.com/alibaba/fastjson/releases/tag/1.2.39\nbug fixed in new version. please use 1.2.39. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u65b0\u7248\u672c\u6211\u6d4b\u8bd5\u662f\u597d\u7684\uff0c\u8bf7\u9a8c\u8bc1\uff0c\u5982\u679c\u8fd8\u6709\u95ee\u9898\uff0c\u518d\u63d0\u65b0issue. \u90a3\u5c31\u5173\u95edissue\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.39\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4f60\u5e0c\u671b\u5f97\u5230\u8fd9\u4e2a\u4fe1\u606f\u7528\u4e8e\u4ec0\u4e48\u7528\u9014\uff1f. ThrowableDeserializer\u662f\u6bcf\u4e2aclass\u4e00\u4e2a\u7684\uff0c\u53ef\u4ee5\u5728\u5b9e\u4f8b\u7ea7\u522b\u5bf9Field\u505a\u7f13\u5b58\u4e48\uff1f\u4ece\u53cd\u5c04\u4e2d\u83b7\u53d6field\u4f1a\u5f88\u6162\u7684. \u8fd9\u4e2apatch\u5bfc\u81f4com.alibaba.json.bvt.jdk8.LocalDateTimeTest\u8dd1\u4e0d\u8fc7\u4e86.\npublic void test_for_issue() throws Exception {\n    Model model = JSON.parseObject(\"{\\\"startTime\\\":\\\"2017-11-04\\\",\\\"endTime\\\":\\\"2017-11-14\\\"}\", Model.class);\n    String text = JSON.toJSONString(model);\n    assertEquals(\"{\\\"endTime\\\":\\\"2017-11-14\\\",\\\"startTime\\\":\\\"2017-11-04\\\"}\", text);\n}\npublic static class Model {\n    @JSONField(format = \"yyyy-MM-dd\")\n    public Date startTime;\n@JSONField(format = \"yyyy-MM-dd\")\npublic Date endTime;\n\n}\n\u95ee\u9898\u6ca1\u91cd\u73b0. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. travis-ci\u7684testcase\u8dd1\u4e0d\u8fc7\uff1f. thank you. it's very useful.. \u5df2\u7ecf\u4fee\u6539\u4e86\uff0c\u80fd\u5e2e\u5fd9\u9a8c\u8bc1\u4e00\u4e0b\u4e48\uff1f. \u95ee\u9898\u6ca1\u6709\u91cd\u73b0\uff0c\u80fd\u5426\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\uff1f. @livelazily #1476 \u662f\u5426\u7b26\u5408\u4f60\u63cf\u8ff0\uff1f\u95ee\u9898\u662f\u5426\u5df2\u89e3\u51b3\uff1f. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u6211\u5c06\u4f1a\u5c3d\u5feb\u53d1\u5e03\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u4f60\u6765\u63d0\u4ea4\u4e00\u4e0bpatch\u5e2e\u5fd9\u4fee\u6b63\uff0c\u53ef\u4ee5\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. 1. byte[] -> base64 encoded string\n2. byte[] -> Array -> String. \u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u5728\u4e0b\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c. @wanggang0813 \u6ca1\u6709\u54e6\uff0c\u624b\u673a\u6dd8\u5b9d\u548c\u652f\u4ed8\u5b9d\u94b1\u5305\u90fd\u7528fastjson\uff0c\u5982\u679c\u6709\u76f8\u5173\u7684\u95ee\u9898\uff0c\u6211\u5e94\u8be5\u6536\u5230\u76f8\u5173\u4fe1\u606f\u7684\u3002. https://github.com/alibaba/fastjson/releases/tag/1.1.65.android\n\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. @VictorZeng . \u4ec0\u4e48\u7248\u672c\uff1f\u5f02\u5e38\u5806\u6808\u662f\u600e\u6837\u7684\uff1f. \u5806\u6808\u4fe1\u606f\u662f\u600e\u6837\u7684\uff1f. \u662f\u4e0d\u662fget\u65b9\u6cd5\u91cc\u6709new\u5bf9\u8c61\u54c8. \u52a0\u4e0aSerializerFeature.MapSortField\u4f1a\u5bf9HashMap\u6392\u5e8f\u518d\u8f93\u51fajava\nString json = JSON.toJSONString(List, SerializerFeature.WriteMapNullValue, SerializerFeature.MapSortField);\n. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. fastjson\u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.1.65.android\n\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u95ee\u9898\u51fa\u5728\u8fd9\u4e2a\u5730\u65b9java\n@JSONField(serialize = false)\n        public void addMeta(String name, Object value) {\n            this.meta.put(name, value);\n        }\n```\n\u65b0\u7248\u5c06\u4f1a\u4fee\u590d\uff0c\u9884\u8ba111\u67081\u65e5\u524d\u540e\u53d1\u5e03. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u4e09\u79cd\u89e3\u51b3\u529e\u6cd5\uff1a\n1. \u5982 @Fan4j \u8bf4\u7684\u6dfb\u52a0getter/setter\n\n\u4fee\u6539field\u7684private\u4e3apublic\n\u4fee\u6539\u4e3a\njava\npublic class Body  {\n    public String key;\n    public HashMap<String, String> data = new HashMap<String, String>();\n}\n\n\u914d\u7f6eFieldBased https://github.com/alibaba/fastjson/wiki/FieldBased_cn\n. java\nJSON.toJSONString(array, SerializerFeature.DisableCircularReferenceDetect);. \u6ca1\u6709public field \u6216\u8005getter/setter\uff1f. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn\n\u770b\u8fd9\u4e2a\u662f\u5426\u7b26\u5408\u4f60\u7684\u9700\u6c42. \u660e\u767d\u4f60\u7684\u610f\u601d\u4e86\uff0c\u8c22\u8c22\u4f60\u8fd9\u4e48\u597d\u7684\u5efa\u8bae\uff0c\u5c06\u4f1a\u5728\u5468\u672b\u53d1\u5e03\u65b0\u7248\u672c\u652f\u6301. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c\n. \u65b0\u589e\u52a0\u4e86testcae\uff0c\u4f46\u95ee\u9898\u6ca1\u4ece\u91cd\u73b0\u554a\uff0c\u4ec0\u4e48\u7248\u672c\u5462\uff1f. \u80fd\u8bd5\u8bd51.2.39\u7248\u672c\u4e48\uff1f\u4e0d\u591f\u6211\u57281.2.30\u7248\u672c\u4e5f\u6ca1\u6709\u91cd\u73b0\u95ee\u9898\u3002\u3002\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u662f\u8fd9\u4e2a https://github.com/alibaba/fastjson/blob/8605f86e7154881dfbc8e88113a30a345fc73b3a/src/test/java/com/alibaba/json/bvt/issue_1500/Issue1556.java. \u4ec0\u4e48\u7248\u672c\uff1f\u8fd9\u4e2a\u95ee\u9898\u4fee\u590d\u8fc7\u7684. \u95ee\u9898\u662f\u65e0\u6cd5\u91cd\u73b0\u95ee\u9898\uff0c\u53ef\u4ee5\u63d0\u4e00\u4e0b\u66f4\u5b8c\u6574\u7684\u5806\u6808\u4fe1\u606f\u4e48\uff1f. \u4e00\u76f4\u60f3\u505a\u54c8\uff0c\u8981\u4e0d\u5f71\u54cd\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u52a0\u4e0a\u652f\u6301\u9700\u8981\u4e00\u5b9a\u5de5\u4f5c\u91cf\uff0c\u665a\u4e9b\u624d\u80fd\u505a. https://github.com/alibaba/fastjson/releases/tag/1.1.65.android\n\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u518d\u66f4\u65b0\u4e00\u4e0b\u4ee3\u7801\uff0c\u4e4b\u524d\u63d0\u4ea4\u8fc7\u6709\u95ee\u9898\u7684\u4ee3\u7801. \u652f\u6301\u7684\uff0c\u6700\u8fd1\u51e0\u4e2a\u7248\u672c\u90fd\u5728\u5b8c\u5584\u7684kotlin\u7684\u652f\u6301\u3002\u8fd9\u4e2a\u5468\u672b\u4f1a\u518d\u53d1\u4e00\u4e2a\u7248\u672c\u589e\u5f3a\u5bf9kotlin\u7684\u652f\u6301\u3002. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u65b0\u7248\u672c\u53d1\u5e03\uff0c\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u5bf9kotlin\u7684\u652f\u6301\n. \u56de\u5f52\u6d4b\u8bd5\u90fd\u8dd1\u4e0d\u8fc7\u54c8. \u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. JSONObject/JSONArray. \u62b1\u6b49\uff0c\u5df2\u7ecf\u5173\u6ce8\u5230\u4e86\uff0c\u4f46\u8fd9\u4e24\u5929\u6bd4\u8f83\u5fd9\uff0c\u4f1a\u5c3d\u5feb\u8ddf\u8fdb\u7684. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u91cd\u73b0\u5e76\u89e3\u51b3\uff0c\u9884\u8ba1\u6708\u5e95\u524d\u4f1a\u53d1\u5e03\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u9a8c\u8bc1\u95ee\u9898\u662f\u5426\u5df2\u7ecf\u4fee\u590d\u3002. https://github.com/alibaba/fastjson/releases/tag/1.2.44\n\u4f7f\u75281.2.44\u7248\u672c\u8bd5\u8bd5\u770b\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f\u4e0a\u9762\u7684testcase\u5df2\u7ecf\u8dd1\u8fc7\u7684\uff0c\u53ef\u80fd\u8fd8\u662f\u6709\u573a\u666f\u6ca1\u6709\u89e3\u51b3. @zhuyonghao \u8fd9\u4e9b\u4f8b\u5b50\u90fd\u662f\u6709\u56de\u5f52\u6d4b\u8bd5\u7684\uff0c\u90fd\u662f\u8dd1\u8fc7\u7684\u3002\u80fd\u5426\u63d0\u4f9b\u4f60\u8dd1\u4e0d\u901a\u7684\u66f4\u8be6\u7ec6\u73af\u5883\u4fe1\u606f\uff1f. @faith-hb \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u95ee\u9898\u5df2\u786e\u8ba4\uff0c\u5982\u679cvalue\u662f\u91cd\u590d\u7684\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u8981\u60f3\u60f3\u600e\u4e48\u4fee\u6539\u54c8. \u95ee\u9898\u5df2\u786e\u8ba4\uff0c\u5982\u679cvalue\u662f\u91cd\u590d\u7684\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u8981\u60f3\u60f3\u600e\u4e48\u4fee\u6539\u54c8. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\uff0c\u65b0\u7248\u672c\u5df2\u7ecf\u81f3\u6b64\u975e\u7f3a\u7701\u6784\u9020\u51fd\u6570. https://github.com/alibaba/fastjson/releases/tag/1.2.40\n\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\uff0c\u65b0\u7248\u672c\u5df2\u7ecf\u81f3\u6b64\u975e\u7f3a\u7701\u6784\u9020\u51fd\u6570. \u5f53\u524d\u7684\u8bbe\u8ba1\u65e0\u6cd5\u4fdd\u5b58Enum\u7684\u6570\u636e\u7c7b\u578b. \u5f53\u524d\u7684\u8bbe\u8ba1\u65e0\u6cd5\u4fdd\u5b58Enum\u7684\u6570\u636e\u7c7b\u578b. \u8bf7\u95eefastjson\u4ec0\u4e48\u7248\u672c\uff1f \u6211\u6d4b\u8bd5\u65b0\u7248\u672c\uff0c\u95ee\u9898\u6ca1\u6709\u91cd\u73b0. \u8bf7\u95eefastjson\u4ec0\u4e48\u7248\u672c\uff1f \u6211\u6d4b\u8bd5\u65b0\u7248\u672c\uff0c\u95ee\u9898\u6ca1\u6709\u91cd\u73b0. https://github.com/alibaba/fastjson/wiki/TypeReference\n\u8fd9\u91cc\u7684\u5355\u53c2\u6570\u548c\u53cc\u53c2\u6570\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1f. https://github.com/alibaba/fastjson/wiki/TypeReference\n\u8fd9\u91cc\u7684\u5355\u53c2\u6570\u548c\u53cc\u53c2\u6570\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff1f. \u8fd9\u4e2a\u4e0d\u7b26\u5408JSON\u8bed\u6cd5\u89c4\u8303\u54e6\uff0c\u62a5\u9519\u662f\u5408\u9002\uff0cjson_simple1.1\u5982\u679c\u4e0d\u62a5\u9519\uff0c\u90a3\u624d\u5e94\u8be5\u662f\u4e0d\u6070\u5f53\u7684\u3002. \u8fd9\u4e2a\u4e0d\u7b26\u5408JSON\u8bed\u6cd5\u89c4\u8303\u54e6\uff0c\u62a5\u9519\u662f\u5408\u9002\uff0cjson_simple1.1\u5982\u679c\u4e0d\u62a5\u9519\uff0c\u90a3\u624d\u5e94\u8be5\u662f\u4e0d\u6070\u5f53\u7684\u3002. \u95ee\u9898\u91cd\u73b0\uff0c\u76ee\u524d\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8fd9\u4e2a\u4f1a\u4fee\u590d\uff0c\u6211\u8981\u60f3\u4e00\u4e0b\u600e\u4e48\u5b9e\u73b0. \u95ee\u9898\u91cd\u73b0\uff0c\u76ee\u524d\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8fd9\u4e2a\u4f1a\u4fee\u590d\uff0c\u6211\u8981\u60f3\u4e00\u4e0b\u600e\u4e48\u5b9e\u73b0. https://github.com/alibaba/fastjson/releases/tag/1.2.45\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.45\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/blob/d141fa171725f1e25e5449378f8a8d8ac323c4ae/src/test/java/com/alibaba/json/bvt/issue_1500/Issue1582.java\n\u8fd9\u79cd\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f. https://github.com/alibaba/fastjson/blob/d141fa171725f1e25e5449378f8a8d8ac323c4ae/src/test/java/com/alibaba/json/bvt/issue_1500/Issue1582.java\n\u8fd9\u79cd\u662f\u5426\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u5df2\u589e\u5f3a\u5bf9Map.Entry\u53cd\u5e8f\u5217\u5316\u7684\u652f\u6301. \u5df2\u589e\u5f3a\u5bf9Map.Entry\u53cd\u5e8f\u5217\u5316\u7684\u652f\u6301. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.41\n\u65b0\u7248\u672c\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u6211\u505a\u4e86\u56de\u5f52\u6d4b\u8bd5\uff0c\u662f\u652f\u6301\u7684\u54c8. \u6211\u505a\u4e86\u56de\u5f52\u6d4b\u8bd5\uff0c\u662f\u652f\u6301\u7684\u54c8. \u4f60\u662f\u600e\u6837\u7528fastjson\u7684\uff1f. \u4f60\u662f\u600e\u6837\u7528fastjson\u7684\uff1f. classObserveStr\u662f\u4e0d\u662f\u8f93\u5165\u7684\u65f6\u5019\u5c31\u4e71\u7801\u4e86\uff1f. classObserveStr\u662f\u4e0d\u662f\u8f93\u5165\u7684\u65f6\u5019\u5c31\u4e71\u7801\u4e86\uff1f. java\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);\n\u8fd9\u6837\u8bd5\u8bd5\u770b. java\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);\n\u8fd9\u6837\u8bd5\u8bd5\u770b. \u6709\u5faa\u73af\u5f15\u7528\uff1f. \u6709\u5faa\u73af\u5f15\u7528\uff1f. \u8fd9\u4e2a\u4e71\u7801\u4e0d\u662ffastjson\u5bfc\u81f4\u7684\uff0c\u5e94\u8be5\u672c\u6765\u5c31\u6709\u4e71\u7801. \u8fd9\u4e2a\u4e71\u7801\u4e0d\u662ffastjson\u5bfc\u81f4\u7684\uff0c\u5e94\u8be5\u672c\u6765\u5c31\u6709\u4e71\u7801. \u5173\u95ed\u5f15\u7528\u68c0\u6d4b\u529f\u80fd\u5c31\u597d\u4e86\njava\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);. \u5173\u95ed\u5f15\u7528\u68c0\u6d4b\u529f\u80fd\u5c31\u597d\u4e86\njava\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);. java\nJSONPath.set(aa, \"$.app\\\\-a\\\\.x\", \"123\");\n\u9700\u8981\u505a\u8f6c\u4e49\u7b26\u5904\u7406. java\nJSONPath.set(aa, \"$.app\\\\-a\\\\.x\", \"123\");\n\u9700\u8981\u505a\u8f6c\u4e49\u7b26\u5904\u7406. \u5e26+08:00\u4e0d\u7b97\u51fa\u9519\u5427. \u5e26+08:00\u4e0d\u7b97\u51fa\u9519\u5427. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c1.2.40\u8bd5\u8bd5\u770b\uff1f. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c1.2.40\u8bd5\u8bd5\u770b\uff1f. \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u4f7f\u7528SerializerFeature.BrowserCompatible\u65f6\uff0c\u4f1a\u5c06(i > 9007199254740991L || i < -9007199254740991L)\u505a\u4e3a\u5b57\u7b26\u4e32\u5904\u7406\u3002\njava\nString json = JSON.toJSONString(obj, SerializerFeature.BrowserCompatible);. \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u4f7f\u7528SerializerFeature.BrowserCompatible\u65f6\uff0c\u4f1a\u5c06(i > 9007199254740991L || i < -9007199254740991L)\u505a\u4e3a\u5b57\u7b26\u4e32\u5904\u7406\u3002\njava\nString json = JSON.toJSONString(obj, SerializerFeature.BrowserCompatible);. This problem was fixed in version 1.1.67.android.. This problem was fixed in version 1.1.67.android.. @gam2046 \njson\n\"lists\": [\nIt should be \"list\", not \"lists\". @gam2046 \njson\n\"lists\": [\nIt should be \"list\", not \"lists\". \u8bf7\u7b7e\u7f72CLA. \u8bf7\u7b7e\u7f72CLA. \u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\njava\nJSON.toJSONString(testMap, SerializerFeature.MapSortField). \u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\njava\nJSON.toJSONString(testMap, SerializerFeature.MapSortField). \u5347\u7ea7\u52301.2.41\u7248\u672c\u5c31\u597d\u4e86. \u5347\u7ea7\u52301.2.41\u7248\u672c\u5c31\u597d\u4e86. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. DataBean\u7684\u4ee3\u7801\u662f\u600e\u6837\u7684\uff1f. @StanNing \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. https://github.com/alibaba/fastjson/wiki/LabelFilter\n\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. \u8c22\u8c22\u53cd\u9988\uff0c\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u5728\u4e0b\u4e00\u7248\u672c\u4e2d\u5e26\u4e0a. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. \u95ee\u9898\u786e\u5b9e\u5b58\u5728\uff0c\u5df2\u7ecf\u4fee\u590d\uff0c\u5c06\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\u5e26\u4e0a\uff0c\u8c22\u8c22\u53cd\u9988\uff01. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. fastjson\u76ee\u524d\u505a\u4e86\u4e00\u4e9b\u5bb9\u9519\uff0c\u4f60\u5e0c\u671b\u4e0d\u652f\u6301\uff1f. \u4e0d\u786e\u8ba4\u54e6\uff0c\u5347\u7ea7\u52301.2.41\u7248\u672c\u8bd5\u8bd5\u770b. @lihengming . \u4e0d\u8981\u5bf9\u4ee3\u7801\u505a\u683c\u5f0f\u5316\u554a\uff0c\u8fd9\u4e48\u591a\u53d8\u66f4\u7684Patch\u662f\u4e0d\u6562\u5408\u5e76\u7684. \u80fd\u63d0\u4f9b\u5b8c\u6574\u5806\u6808\u4fe1\u606f\u4e48\uff1f. \u4e0d\u662f\u4e0d\u60f3\uff0c\u800c\u662f\u505a\u4e0d\u5230. which version?. java\nSystem.out.println(JSONPath.contains(o, \"$.101a0\\\\.test-b\"));\n\u8f6c\u4e49\u7b26\u53f7\u4f3c\u4e4e\u591a\u4e86. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. I'm sorry, it's missing. I'll add the relevant methods.. https://github.com/alibaba/fastjson/releases/tag/1.2.42\nplease update new version.. please provide a testcase. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. I see what you mean, but it's not good to change, a lot of users are already using it.. bug fixed. The next version will be released at the end of the month. https://github.com/alibaba/fastjson/releases/tag/1.2.42\nbug fixed, please use new versionn.. https://github.com/alibaba/fastjson/releases/tag/1.2.42\n\u65b0\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u3002. @lihengming . \u4ec0\u4e48\u7248\u672c\uff1f\u9519\u8bef\u5806\u6808\u4fe1\u606f\u662f\u600e\u6837\u7684\uff1f. \u7528\u6700\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\uff0c\u6216\u8005\u53ef\u4ee5\u4e86\uff0c\u6216\u8005\u4f1a\u62a5\u660e\u786e\u9519\u8bef\u4fe1\u606f\u4e86. https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.44\n\u95ee\u9898\u89e3\u51b3\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.44\n\u95ee\u9898\u89e3\u51b3\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . \u6709\u5faa\u73af\u5f15\u7528\u4e86\uff0c\u52a0\u4e0aSerializerFeature.DisableCircularReferenceDetect)\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u7684\u3002\u6bd4\u5982\uff1a\njava\nJSON.toJSONObject(obj, SerializerFeature.DisableCircularReferenceDetect);. \u6709\u5faa\u73af\u5f15\u7528\u4e86\uff0c\u52a0\u4e0aSerializerFeature.DisableCircularReferenceDetect)\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u7684\u3002\u6bd4\u5982\uff1a\njava\nJSON.toJSONObject(obj, SerializerFeature.DisableCircularReferenceDetect);. https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.43\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/wiki/CustomMapDeserializer. https://github.com/alibaba/fastjson/wiki/CustomMapDeserializer. android\u7248\u672c\u8fd8\u6ca1\u505a\uff0c\u7a0d\u665a\u4e00\u4e9b\u65f6\u95f4\u54c8. android\u7248\u672c\u8fd8\u6ca1\u505a\uff0c\u7a0d\u665a\u4e00\u4e9b\u65f6\u95f4\u54c8. JSON.parseObject(\"\\\"\\\"\", HashMap.class);. JSON.parseObject(\"\\\"\\\"\", HashMap.class);. \u5347\u7ea7\u52301.2.42\u7248\u672c\u53ef\u4ee5\u4e48\uff1f. 1.2.42\u652f\u6301JDK 1.6/1.7/1.8. https://github.com/alibaba/fastjson/releases/tag/1.2.44\n\u95ee\u9898\u89e3\u51b3\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.45\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. \u52a0\u4e0a\u4e86\uff0c\u539f\u6765\u4e5f\u662f\u53ef\u4ee5\uff0c\u53ea\u662f\u8d70\u4e86\u4e0d\u540c\u7684\u903b\u8f91\u5206\u652f\u3002. https://github.com/alibaba/fastjson/releases/tag/1.2.44\n\u95ee\u9898\u89e3\u51b3\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c. \u4e0d\u52a0L\u540e\u7f00\uff0c\u53cd\u5e8f\u5217\u56de\u6765\u5c31\u4e0d\u662fLong\u4e86\uff0c\u800c\u662fInteger. fastjson\u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.1.67.android\n\u75281.1.67.android\u8bd5\u8bd5\u95ee\u9898\u662f\u5426\u8fd8\u5b58\u5728. \u80fd\u63d0\u4f9b\u80fd\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString). \u6211\u8865\u5145\u4e86testcase\u662f\u597d\u7684\u554a. java\n @JSONType(orders = {\"bookId\", \"bookName\", \"authorName\", \"wordCount\"})\n    public static class BookDO {\n    }\n\u7f3a\u7701parse\u7684\u987a\u5e8f\u662f\u6309\u5b57\u6bcd\u5e8f\uff0c\u9700\u8981\u5176\u4ed6\u987a\u5e8f\uff0c\u901a\u8fc7@JSONType\u6307\u5b9a. thank you, it's very good pull request!. https://github.com/alibaba/fastjson/releases/tag/1.2.45\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. https://github.com/alibaba/fastjson/releases/tag/1.2.45\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. byte[] bytes = JSON.parseObject(\"....\", byte[].class);. java\nJSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString);. \u597d\u5efa\u8bae\uff0c\u4e0d\u8fc7\u4fee\u6539\u8fd4\u56de\u503c\u4f1a\u5bb9\u6613\u5bfc\u81f4\u4e0d\u517c\u5bb9. Android\u8fd8\u662f\u670d\u52a1\u5668\uff1f. \u8bf7\u4f7f\u7528https://github.com/alibaba/fastjson/wiki/TypeReference. java\n@JSONField(serialize=false). \u4ec0\u4e48\u7248\u672c\uff1f\u80fd\u63d0\u4f9b\u6837\u672c\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. fastjson\u6709\u4ec0\u4e48\u9700\u8981\u5bf9spring-boot\u652f\u6301\u7684\uff1f. @ren-liang \u6536\u5230. ```java\npublic void test_for_issue() throws Exception {\n    Map map= new HashMap();\n    map.put(\"enumField\", 0);\nAbstractBean bean = JSON.parseObject(JSON.toJSONString(map), ConcreteBean.class);\nassertEquals(FieldEnum.A, bean.enumField);\n}\n\n\npublic static class AbstractBean {\n    public FieldEnum enumField;\n}\npublic static class ConcreteBean extends AbstractBean {\n}\npublic static enum FieldEnum { A, B }\n\u652f\u6301ordinal\uff0c\u4f46\u662f\u4f60\u4f20\u5165\u7684\u5fc5\u987b\u662f\u6570\u503c\uff0c\u800c\u4e0d\u662f\u5b57\u7b26\u4e32. \u73b0\u5728\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\uff1f. \u5e0c\u671b\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\uff0c\u4fe1\u606f\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8bca\u65ad\u95ee\u9898\u3002\u662f\u4e0d\u662f\u5b58\u5728\u6df7\u6dc6\u4e86\uff1f. https://github.com/alibaba/fastjson/wiki/Stream-api\n\u770b\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u8981\u7684\uff1f. Android\u7248\u672c\u4e3a\u5565\u6709\u8fd9\u4e48\u5927\u7684json\u6587\u672c\uff1f. \u4f7f\u7528long[].class\u8bd5\u8bd5\u770b\uff1fjava\nlong[] array = JSON.parseObject(\"....\", long[].class);\n. \u540e\u7eed\u4f1a\u652f\u6301\uff0c\u4e89\u53d6\u5728\u6625\u8282\u671f\u95f4\u505a\u5b8c. @kevin90828 \u6027\u80fd\u5e94\u8be5\u6bd4JsonPath\u7684\u5b9e\u73b0\u66f4\u597d\uff0c\u6bd5\u7adf\u662f\u5185\u7f6e\u652f\u6301\u7684. @kevin90828 \u5df2\u5c06\u5b8c\u6210\u4e86\uff0c\u9884\u8ba1\u4e0b\u4e2a\u5468\u672b\u53d1\u5e03\uff0817\u65e5\uff09. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. \u73b0\u5728\u8fd8\u6ca1\u6709\u8fd9\u4e2a\u652f\u6301. \u6dfb\u52a0\u4e86testcase\uff0c\u9a8c\u8bc1\u6ca1\u95ee\u9898\u554a. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. @yu120 \u53ef\u4ee5\u8003\u8651\u52a0\u4e0a\u7684\uff0c\u53ea\u662fSerializerFeature\u8fd9\u4e2a\u679a\u4e3e\u6570\u91cf\u5feb\u523032\u4e0a\u7ebf\u4e86\u3002\u3002\u3002. \u6700\u65b0\u7248\u662f\u597d\u7684\u3002\n\u65b0\u670d\u52a1\u5668\u7248\u672c http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.46/\nAndroid\u65b0\u7248\u672c http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.68.android/\n. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.47/\nuse last version 1.2.47. \u8f93\u5165\u5b57\u6bb5\u7c7b\u578b\u548c\u5b9e\u9645\u9700\u8981\u7684\u4e0d\u4e00\u81f4\uff0c\u4ec0\u4e48\u7248\u672c\uff1f. \u6211\u6d4b\u8bd51.2.47\u7248\u672c\u662f\u597d\u7684\uff0c\u8bf7\u95ee\u662f\u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u80fd\u4f7f\u7528\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u80fd\u5426\u63d0\u4f9btestcase\uff1f. \u8fd9\u4e2a\u4f9d\u8d56\u7f16\u8bd1\u5668\u7684\u5b9e\u73b0\uff0c\u4e0d\u540c\u7248\u672c\u7684JDK\uff0c\u751a\u81f3\u4e0d\u540c\u6b21\u7f16\u8bd1\u90fd\u53ef\u80fd\u4e0d\u4e00\u6837\u7684\u54e6. \u4f7f\u75281.2.47\u7248\u672c\u8bd5\u8bd5\u770b\uff1f. https://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4f7f\u7528@JSONField\u5427.java\nJSONPath.set(json,\"/root/a\\.b\\.c\",\"hello\")\n```\n\u76ee\u524d\u53ea\u652f\u6301\u8fd9\u79cd\u5199\u6cd5\uff0c\u8fd9\u79cd\u5199\u6cd5\u4e0d\u591f\u53cb\u597d\uff0c\u6211\u60f3\u60f3\u5982\u4f55\u6539\u8fdb. \u8fd9\u4e2a\u662f\u65e0\u6cd5\u5904\u7406\u7684\u54e6. This is a known issue, but it cannot be modified. If it is modified, there will be incompatibility issues.. \u80fd\u5426\u63d0\u4f9btestcase\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . '/'\u8fd9\u4e2a\u5b57\u7b26\u4e0d\u5e94\u8be5\u9700\u8981\u8f6c\u4e49\u554a\uff0c\u8fd9\u4e2a\u8f6c\u4e49\u600e\u4e48\u6765\u7684\uff1f. JSON.toJSONString(obj, SerializerFeature.BrowserSecure);. 2018-05-02+08:00\n\n\u8fd9\u4e2a\u4e5f\u662fiso8601\u683c\u5f0f\u54e6. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u8fd9\u662flocale\u95ee\u9898\u5bfc\u81f4\uff0c\u5c06\u4f1a\u57281.2.49\u4e2d\u4fee\u590d. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . toJSONString\u652f\u6301\uff0cparseObject\u90e8\u5206\u652f\u6301. stream api\u662f\u901a\u8fc7JSONReader\u5b9e\u73b0\uff0c\u5982\u679c\u4e0d\u662f\u8d85\u5927\u6587\u4ef6\uff0c\u6bd4\u5982\u8bf410M\uff0c\u8bfb\u53d6\u6210bytes\u6216\u8005string\u518d\u7edf\u4e00\u5904\u7406\uff0c\u901f\u5ea6\u53ef\u80fd\u4f1a\u66f4\u5feb\u3002. \u6709\u7684\u554a\njava\ncom.alibaba.fastjson.JSON#parseObject(java.lang.String, com.alibaba.fastjson.parser.Feature...). https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . 9077913 \u8fd9\u4e2a\u503c\u8fc7\u5927\uff0c\u4e0d\u662f\u6beb\u79d2\u6570\uff0c\u8fd9\u4e2a\u662f\u4ec0\u4e48\u683c\u5f0f\uff1f. \u8fd9\u4e2a\u662f\u65e0\u6cd5\u907f\u514d\u7684. https://github.com/alibaba/fastjson/releases/tag/1.2.47\n1.2.47\u5e94\u8be5\u652f\u6301\u4e86\u554a. testcase\u8dd1\u4e0d\u8fc7. String\u5185\u7f6e\u5b9e\u73b0\u505a\u4e86\u7279\u522b\u4f18\u5316\uff0c\u6240\u4ee5\u5b9a\u5236\u5e8f\u5217\u5316\u652f\u6301\u4e0d\u5f7b\u5e95\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u8865\u4e0a. http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.68.android/\n\u5347\u7ea7\u52301.1.68.android\u8bd5\u8bd5\u770b. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4ec0\u4e48\u7248\u672c\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u8fd9\u4e2a\u65e0\u6cd5\u907f\u514d. TypeUtils.compatibleWithJavaBean = true. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u80fd\u63d0\u4f9btestcase\u4e48\uff1f. Please provide detailed code for ParamRequest. \u975e\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u9700\u8981\u4f20\u5165\u5916\u5c42\u7c7b\u7684this\u6307\u9488\uff0c\u5982\u679cjson\u4e2d\u7684\u4e0a\u4e00\u5c42\u5bf9\u8c61\u6070\u597d\u662f\u5916\u5c42\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5219\u53ef\u4ee5\u6784\u9020\uff0c\u5426\u5219\u4e0d\u53ef\u4ee5\u3002. \u4f7f\u7528JSONField.unwrapped=true\u53ef\u4ee5\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u4e0d\u8fc7\u53ea\u80fd\u505a\u5230\u4e00\u5c42. \u8fd9\u4e2a\u4e0d\u652f\u6301\u54e6. \u6211\u6d4b\u8bd5\u8fc7\u6ca1\u95ee\u9898\uff0c\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a\n```java\npublic class Issue1933 extends TestCase {\n    public void test_for_issue() throws Exception {\n        OrderInfoVO v0 = JSON.parseObject(\"{\\\"orderStatus\\\":1}\", OrderInfoVO.class);\n        assertEquals(1, v0.orderStatus);\n        assertEquals(0, v0.oldStatus);\n        assertEquals(0, v0.oldOrderStatus);\n    }\npublic void test_for_issue_1() throws Exception {\n    OrderInfoVO v0 = JSON.parseObject(\"{\\\"oldStatus\\\":1}\", OrderInfoVO.class);\n    assertEquals(0, v0.orderStatus);\n    assertEquals(1, v0.oldStatus);\n    assertEquals(0, v0.oldOrderStatus);\n}\n\n\npublic void test_for_issue_2() throws Exception {\n    OrderInfoVO v0 = JSON.parseObject(\"{\\\"oldOrderStatus\\\":1}\", OrderInfoVO.class);\n    assertEquals(0, v0.orderStatus);\n    assertEquals(0, v0.oldStatus);\n    assertEquals(1, v0.oldOrderStatus);\n}\n\n\npublic static class OrderInfoVO {\n    private int orderStatus;\n    private int oldStatus;\n    private int oldOrderStatus;\n\n    public int getOrderStatus() {\n        return orderStatus;\n    }\n\n    public void setOrderStatus(int orderStatus) {\n        this.orderStatus = orderStatus;\n    }\n\n    public int getOldStatus() {\n        return oldStatus;\n    }\n\n    public void setOldStatus(int oldStatus) {\n        this.oldStatus = oldStatus;\n    }\n\n    public int getOldOrderStatus() {\n        return oldOrderStatus;\n    }\n\n    public void setOldOrderStatus(int oldOrderStatus) {\n        this.oldOrderStatus = oldOrderStatus;\n    }\n}\n\n}\n. \u5347\u7ea7\u52301.2.47\u8bd5\u8bd5\u770b\uff1f. \u80fd\u63d0\u4f9b\u4e00\u4e2atestcase\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4e0d\u52a0\u53cc\u5f15\u53f7\u4e0d\u662fJSON\u683c\u5f0f. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4e3a\u4ec0\u4e48\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff1f. java\u7684\u5bf9\u8c61\u7c7b\u578b\u5c31\u662fbyte[]\uff0c\u6bd4\u5982\uff1ajava\nclass Model {\n      public byte[] value;\n}\n. \u7528JSONType\u5427. ParserConfig parserConfig = new ParserConfig();\n\u8fd9\u4e2a\u9700\u8981Singleton. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u4e71\u7801\u548cfastjson\u65e0\u5173\uff0c\u4e4b\u524d\u5e94\u8be5\u5c31\u4e71\u4e86. \u4f7f\u7528\u8f6c\u4e49\u7b26\uff0c\u6bd4\u5982\uff1ajava\nJSONPath.eval(obj, \"$.field\\-a\");\n. \u8fd9\u4e2a\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u4f1a\u53bb\u6389\u7c7b\u578b\u4fe1\u606f. \u628a\u7c7b\u578b\u58f0\u660e\u4e3abyte[]. \u6ca1\u95ee\u9898\u554a\uff0c\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff1f. JSON.toJSONString(obj, SerializerFeature.WriteBigDecimalAsPlain). \u62a5\u9519\u4fe1\u606f\u80fd\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f. please provide exception stack detail information. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u8fd9\u4e2a\u5728JavaBean\u4e2d\u624d\u53ef\u4ee5. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . \u51e0\u79cd\u65b9\u6cd5\uff1a\n1. \u4f7f\u7528JSONTypejava\n@JSONType(deserializer=XXX.class)\n2. \u4f7f\u7528SeeAlso https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn. \u51e0\u79cd\u65b9\u6cd5\uff1a\n1. \u4f7f\u7528JSONTypejava\n@JSONType(deserializer=XXX.class)\n2. \u4f7f\u7528SeeAlso https://github.com/alibaba/fastjson/wiki/JSONType_seeAlso_cn. https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . https://github.com/alibaba/fastjson/releases/tag/1.2.49\n\u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c . price2\u7684\u5176\u4e2d\u4e00\u4e2a\u662f[]\uff0c\u5305\u542b\u4e863\u4e2a\u5143\u7d20\uff0c\u8ba1\u7b97\u4e3a3\u4e86. price2\u7684\u5176\u4e2d\u4e00\u4e2a\u662f[]\uff0c\u5305\u542b\u4e863\u4e2a\u5143\u7d20\uff0c\u8ba1\u7b97\u4e3a3\u4e86.java\n@JSONType(alphabetic=false)\n.java\n@JSONType(alphabetic=false)\n. \u652f\u6301\u7684. \u652f\u6301\u7684. \u76ee\u524d\u8fd8\u4e0d\u652f\u6301. \u76ee\u524d\u8fd8\u4e0d\u652f\u6301. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f.java\n@JSONField (format=\"yyyy-MM-dd H:mm:ss\")\n\u4f60\u8fd9\u79cd\u9700\u8981\u4fee\u6539format.java\n@JSONField (format=\"yyyy-MM-dd H:mm:ss\")\n\u4f60\u8fd9\u79cd\u9700\u8981\u4fee\u6539format. yyyy-MM-dd H:mm:ss \u652f\u6301\u4ee5\u4e0a\u4e24\u79cd\u5427. yyyy-MM-dd H:mm:ss \u652f\u6301\u4ee5\u4e0a\u4e24\u79cd\u5427. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684testcase\u4e48\uff1f. \u8fd9\u4e2a\u7c7b\u6ca1\u6709\u7f3a\u7701\u6784\u9020\u51fd\u6570\uff1f. \u8fd9\u4e2a\u7c7b\u6ca1\u6709\u7f3a\u7701\u6784\u9020\u51fd\u6570\uff1f. \u62a5\u9519\u4fe1\u606f\u63d0\u4f9b\u4e00\u4e0b\uff1f. \u62a5\u9519\u4fe1\u606f\u5b8c\u6574\u53d1\u4e00\u4e0b.xml\norg.jetbrains.kotlin\nkotlin-reflect\n\u8fd9\u4e2a\u4f9d\u8d56\u52a0\u4e0a\u4e86\u6ca1\uff1f. \u662f\u4e0d\u662f\u6bcf\u6b21\u90fdnew ParserConfig\u6216\u8005SerializeConfig\u4e86\uff1f. \u8fd9\u4e2a\u6709\u4ec0\u4e48\u95ee\u9898\uff1f. \u8bf7\u63d0\u4f9bTestCase. \u8bf7\u4f7f\u7528\u65b0\u7248 https://github.com/alibaba/fastjson/releases/tag/1.2.52. \u8bf7\u4f7f\u7528JSONField\uff0c\u800c\u4e0d\u662fJsonProperty. BuildingBO \u8fd9\u4e2a\u7c7b\u7684\u4ee3\u7801\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e0b\u4e48\uff1f. \u8bf7\u4f7f\u7528\u65b0\u7248 https://github.com/alibaba/fastjson/releases/tag/1.2.52. \u4f7f\u7528JSON.toJSONString(obj, SerializerFeature.BrowserCompatible);. \u80fd\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u9519\u8bef\u5806\u6808\u4e48\uff1f. \u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.52. \u662f\u4e0d\u662f\u6bcf\u6b21\u90fdnew ParserConfig\u4e86\uff1f. 1.2.51\u7248\u672c\u5462\uff1f.java\n       AbcEntity abcEntity = new AbcEntity();\n        abcEntity.setAge(\"22222\");\n        abcEntity.setName(\"111111\");\n    System.out.println(JSON.toJSONString(abcEntity));\n\n\u6211\u6d4b\u8bd5fastjson\u76841.2.48\u662f\u6b63\u786e\u7684\uff0c\u4f60\u4ee3\u7801\u4e2d\u662fjackson\uff0c\u4e0d\u662ffastjson. \u5df2\u7ecf\u5728\u5b8c\u5584JSONPath\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5df2\u7ecf\u63d0\u4ea4\uff0c\u6027\u80fd\u548c\u529f\u80fd\u90fd\u6709\u5f88\u5927\u8fdb\u6b65\uff0c\u5c06\u57281.2.52\u4e2d\u652f\u6301\u5b8c\u5584\u3002jsonpath\u7684\u652f\u6301\u4e00\u76f4\u5728\u5b8c\u5584\uff0c\u4f60\u5f53\u524d\u7528\u7684\u4ec0\u4e48\u7248\u672c\uff1f\u8d8a\u65b0\u7684\u7248\u672c\u901a\u5e38\u652f\u6301\u66f4\u597d\u3002. \u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.52. \u80fd\u63d0\u4f9b\u9519\u8bef\u4fe1\u606f\u4e48\uff1f. \u4ec0\u4e48\u7248\u672c\u554a. \u8bf7\u4f7f\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.52. please tell me which version. \u4e0d\u6307\u5b9aformat\u7684\u65f6\u5019\uff0cfastjson\u81ea\u8eab\u7684parse\u548cforamt\u624d\u662f\u66f4\u9ad8\u6548\u7684. \u4f7f\u7528JDK7\u53ca\u4ee5\u4e0a\u7248\u672c\u5373\u53ef\u89e3\u51b3\u95ee\u9898. \u4f7f\u7528NamingFilter\uff0c\u6bd4\u5982\u5185\u7f6e\u7684PascalNameFilter. \u6211\u6d4b\u8bd5\u662f\u597d\u7684\uff0c\u4f60\u8fd9\u4e2a\u662f\u4ec0\u4e48\u7248\u672c\uff1f. \u770b\u4e0d\u51fa\u662f\u4ec0\u4e48\u95ee\u9898\u3002\u3002\u3002. \u4ec0\u4e48\u7248\u672c\u554a\uff1f\u6211\u6d4b\u8bd51.2.54\u7248\u672c\u662f\u597d\u7684. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u56e0\u4e3a\u6709public getter\u65b9\u6cd5. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u8bf7\u4f7f\u7528@JSONField. \u8bf7\u4e0d\u8981\u5bf9\u4ee3\u7801\u505a\u683c\u5f0f\u5316\uff0c\u5426\u5219diff\u8fc7\u591a\uff0c\u5bf9\u540e\u7eed\u7ef4\u62a4\u4e0d\u65b9\u4fbf. \u80fd\u8bf4\u4e0b\u4f60\u8fd9\u4e2a\u5efa\u8bae\u7684\u7406\u7531\u4e48\uff1f. Lawyer\u7684\u7c7b\u7ed3\u6784\u53d1\u4e00\u4e0b.java\nString  jsonString = JSON.toJSONString(obj, SerializerFeature.WriteNonStringKeyAsString);\n\u4f7f\u7528WriteNonStringKeyAsString\u8bd5\u8bd5\u770b. \u7406\u8bba\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u505a\u8fc7\u4e30\u5bcc\u7684\u6d4b\u8bd5. \u80fd\u591f\u63d0\u4f9b\u66f4\u591a\u5806\u6808\u4fe1\u606f\u4e48\uff1f. \u8fd9\u4e2a\u535a\u4e3b\u6ca1\u6709\u63d0\u4f9b\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u7b2c\u4e09\u65b9\u6d4b\u8bd5\u7ed3\u679c\u5728\u8fd9\u91cc https://github.com/eishay/jvm-serializers. fastjson\u4ec0\u4e48\u7248\u672c\u554a\uff1f\u6211\u6d4b\u8bd5\u6ca1\u95ee\u9898. fastjson\u4ec0\u4e48\u7248\u672c\u554a\uff1f\u6211\u6d4b\u8bd5\u6ca1\u95ee\u9898. \u901a\u8fc7JSONField\u914d\u7f6eformat. \u901a\u8fc7JSONField\u914d\u7f6eformat. \u95ee\u9898\u91cd\u73b0\u5e76\u4fee\u590d\uff0c\u8c22\u8c22\u53cd\u9988. \u95ee\u9898\u91cd\u73b0\u5e76\u4fee\u590d\uff0c\u8c22\u8c22\u53cd\u9988. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u6b22\u8fce\u63d0\u4ea4PR. \u6b22\u8fce\u63d0\u4ea4PR. \u95ee\u9898\u672a\u91cd\u73b0\uff0c\u8bf7\u7528\u6700\u65b0\u7248\u672c1.2.55\u8bd5\u8bd5\u770b. \u9996\u6b21\u7f16\u8bd1\uff1f. \u9996\u6b21\u7f16\u8bd1\uff1f. \u65e0\u6cd5\u91cd\u73b0\uff0c\u8bf7\u63d0\u4f9b\u5b8c\u6574\u5806\u6808\u4fe1\u606f. \u65e0\u6cd5\u91cd\u73b0\uff0c\u8bf7\u63d0\u4f9b\u5b8c\u6574\u5806\u6808\u4fe1\u606f. \u8fd9\u4e2a\u662f\u975e\u6cd5JSON\u4e32. \u8fd9\u4e2a\u662f\u975e\u6cd5JSON\u4e32. \u8fd9\u4e2a\u662f\u6b63\u5e38\u7684\uff0c\u56e0\u4e3anew BigDecimal(0.01) \u8fd9\u91cc\u8f93\u51650.01\u662fdouble. \u8fd9\u4e2a\u662f\u6b63\u5e38\u7684\uff0c\u56e0\u4e3anew BigDecimal(0.01) \u8fd9\u91cc\u8f93\u51650.01\u662fdouble. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u80fd\u63d0\u4f9b\u5177\u4f53JSON\u6837\u672c\u4e48\uff1f. \u80fd\u63d0\u4f9b\u5177\u4f53JSON\u6837\u672c\u4e48\uff1f. https://github.com/alibaba/fastjson/releases/tag/1.2.56 \n\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u8bf7\u7528\u65b0\u7248\u672c\u3002java\n@Data\npublic class Order {\n    @JSOField(format=\"unixtime\")\n    public Date createTime;\n    @JSOField(format=\"unixtime\")\n    public Date updateTime;\n}\n. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u63d0\u4f9b\u5171\u5b8c\u6574\u5806\u6808\u4fe1\u606f. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u95ee\u9898\u5df2\u4fee\u590d\uff0c\u8bf7\u7528\u65b0\u7248\u672c https://github.com/alibaba/fastjson/releases/tag/1.2.55. \u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f. @lemon-machine \u8bf4\u7684\u5bf9\uff0c\u8fd9\u4e2a\u4e0d\u662ffastjson\u7684\u95ee\u9898\uff0c\u662f\u4f60\u521d\u59cb\u5316BigDecimal\u7684\u95ee\u9898\u3002\nnew BigDecimal(\"200.152\") \u8fd9\u6837\u5199\u8bd5\u8bd5\u770b. \u8fd9\u91cc\u4e0d\u8981\u7528Assert\uff0c\u8fd9\u4e2a\u662fjunit\u7684\u7c7b\u54c8. Log\u90fd\u53bb\u6389\u5427\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u591a\u4e00\u4e2a\u4f9d\u8d56. \u8fd9\u4e2aimport\u662f\u6ca1\u7528\u7684\u5427. \u8fd9\u4e2a\u5730\u65b9\u4fee\u6539\u4e3ajava\nif (Object.class == thisRuntimeFieldClass) {\n```\n\u662f\u5426\u66f4\u597d\u5462\uff1f. \u5f53\u6ca1\u505a\u914d\u7f6e\u662f\uff0c\u8d70\u539f\u6765\u7684\u901f\u5ea6\u5feb\u4e00\u4e9b\uff0c\u8003\u8651\u8fd9\u91cc\u505a\u4e2a\u5224\u65ad\u4f18\u5316\u54c8. ",
    "sunng87": "\u6211\u770b\u4e86\u4e00\u4e0bclojure\u7684keyword\u7c7b\u5e76\u4e0d\u662f\u4e00\u4e2a\u6807\u51c6\u7684JavaBean\uff0c\u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709setter\uff0c\u6240\u4ee5\u6211\u731c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5b58\u5728\u95ee\u9898\u3002\u4e0d\u77e5\u9053\u8fd9\u4e2aNPE\u662f\u5426\u662f\u8fd9\u4e2a\u539f\u56e0\uff1f\n\u4e0d\u77e5\u9053fastjson\u6709\u6ca1\u6709\u81ea\u5b9a\u4e49serializer\u548cdeserializer\u7684\u9014\u5f84\uff0c\u7c7b\u4f3c\njava\npublic interface Serializer<T> {\n    public JSONObject serialize (T o);\n    public T deserialize(JSONObject o);\n}\n. On Sat 10 Dec 2011 06:14:38 PM CST, \u6e29\u5c11 wrote:\n\n\u6709\u7684\uff0c\u4f60\u81ea\u5df1\u5b9e\u73b0com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer\u548ccom.alibaba.fastjson.serializer.AutowiredObjectSerializer\uff0c\u7136\u540e\u914d\u7f6e\u5728\u4e0b\u9762\u8fd9\u4e24\u4e2a\u8def\u5f84\u4e2d\uff1a\nMETA-INF/services/com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer\nMETA-INF/services/com.alibaba.fastjson.serializer.AutowiredObjectSerializer\n\u8fd9\u4e2a\u673a\u5236\u7c7b\u4f3c\u4e0ejdk\u81ea\u52a8\u7684ServiceLoader\u3002fastjson\u5185\u90e8\u7684\u4e00\u4e9bSerializer\u548cDeserializer\u4e5f\u662f\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\u5b9e\u73b0\u7684\u3002\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/AlibabaTech/fastjson/issues/1#issuecomment-3090154\n\n\u8c22\u8c22\uff0c\u6211\u53bb\u4e86\u89e3\u4e00\u4e0b\uff01\n\nSun Ning\nSoftware developer\nNanjing, China (N32\u00b03'42'' E118\u00b046'40'')\nhttp://about.me/sunng/bio\n. ",
    "zhaoyao": "\u4e0d\u77e5\u9053\u8fd9\u4e2a\u548c\u6211\u9047\u5230\u7684\u662f\u4e0d\u662f\u540c\u4e00\u4e2a\u95ee\u9898 \u7248\u672c1.1.9\n``` java\npublic class FieldMap extends HashMap {\npublic FieldMap field(String field, Object val) {\n    this.put(field, val);\n    return this;\n}\n\n@SuppressWarnings(\"unchecked\")\npublic <T> T field(String field) {\n    return (T) this.get(field);\n}\n\npublic static FieldMap ofInstance(Object ins) {\n    Preconditions.checkNotNull(ins);\n    FieldMap fieldMap = new FieldMap();\n    BeanWrapper beanWrapper = PropertyAccessorFactory.forBeanPropertyAccess(ins);\n    for (PropertyDescriptor descriptor : beanWrapper.getPropertyDescriptors()) {\n        String propertyName = descriptor.getName();\n        fieldMap.field(propertyName, beanWrapper.getPropertyValue(propertyName));\n    }\n\n    return fieldMap;\n}\n\n}\n```\njava\nJSON.toJSONString( m, SerializerFeature.WriteClassName );\nException in thread \"main\" com.alibaba.fastjson.JSONException\n            amt com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.deserialze(DefaultObjectDeserializer.java:349)\n            at com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.deserialze(DefaultObjectDeserializer.java:251)\n            at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:251)\n            at com.alibaba.fastjson.parser.AbstractJSONParser.parse(AbstractJSONParser.java:157)\n            at com.alibaba.fastjson.parser.AbstractJSONParser.parse(AbstractJSONParser.java:135)\n            at com.alibaba.fastjson.JSON.parse(JSON.java:87)\n            at com.alibaba.fastjson.JSON.parse(JSON.java:78)\n            at com.matrixjoy.salon.module.payment.PaymentServiceImpl.main(PaymentServiceImpl.java:158)\n            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n            at java.lang.reflect.Method.invoke(Method.java:597)\n            at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: java.lang.NullPointerException\n            at com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.parseObject(DefaultObjectDeserializer.java:164)\n            at com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.deserialze(DefaultObjectDeserializer.java:344)\n            ... 12 more\n. \u4e0d\u662f\u5f88\u6e05\u695a@type \u662f\u5426\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u952e\u503c, \u5982\u679c\u89c4\u8303\u5141\u8bb8\u8fd9\u79cdkey\u51fa\u73b0, \u5e76\u4e14\u4f7f\u7528\u5176\u4ed6json\u5e93\u5e8f\u5217\u5316\u51fa\u6765\u8fd9\u6837\u4e00\u4e2akey, \u800cfastjson\u65e0\u6cd5\u89e3\u6790\u5b83, \u90a3\u4e48\u5e94\u8be5\u662f\u4e00\u4e2abug\u5427.\n. \u53ef\u4ee5\u6b63\u5e38\u89e3\u6790\u4e86, \u4f46\u662f\u89e3\u6790\u540e\u4f1a\u628a@type\u6254\u6389\njavascript\n {\n        \"a\": \"a\", \n        \"b\": \"b\", \n        \"c\": \"c\", \n        \"id\": 1, \n        \"condition\": [\n                {\n                        \"requirement\": \"5\", \n                        \"@type\": \"x.y.z.SomeType\"\n                }\n        ], \n        \"icon\": \"1.png\"\n}\n\u8bfb\u53d6\u540e\u5c31\u53d8\u6210\u4e86\njavascript\n {\n        \"a\": \"a\", \n        \"b\": \"b\", \n        \"c\": \"c\", \n        \"id\": 1, \n        \"condition\": [\n                {\n                        \"requirement\": \"5\"\n                }\n        ], \n        \"icon\": \"1.png\"\n}\n. ",
    "axmanwang": "the rule of java beans specification defines the setters's return type must be void.\nyou should write \"obj.p(xx).p1(xx)\" if you wanna  write \"obj.setP(xx).setP1(xx)\".  (naming specification  of builder pattern)\n. ",
    "zimdo": "that's all nice and dandy. i actually wanted to avoid having setP() and p() just for that sake i.e. DRY. I am not a big stickler to the specs in those regards if it helps making APIs simpler and easier to use and I sure don't want to implement a new builder-class for each model I have.  :)\n. so I know it's not in the specs... but do you know what would be needed to allow that in fastjson?!? i could fork and implement it myself I am just not sure if there are any bigger consequences aside from the fact that it violates a java convention and if all that is needed is removing the 3 lines above and fixing some of your generated bytecode classes that would be worth it IMHO.\n. also... great work on fastjson!!! just wanted to to tell you. :)\n. sounds great... is there anything significant missing from that release? i think the last commit was a couple of months ago?\n. hey wenshao, i tried that... the library actually builds fine but the tests don't work... is that intended? or will i run into issues because it being buggy?\n. Also just a note when I do something like this:\n``` java\npublic class SplashActivity extends Activity {\nclass Hello {\n\n    public Hello() {\n\n    }\n\n    private String goodbye;\n\n    public String getGoodbye() {\n        return goodbye;\n    }\n\n    public void setGoodbye(String goodbye) {\n        this.goodbye = goodbye;\n    }\n\n\n}\n\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_splash);\n\n    Log.d(\"TEST\", \"hello\");\n    Hello hello = JSON.parseObject(\"{goodbye: \\\"abc\\\"}\", Hello.class);\n    Log.d(\"TEST\", hello.goodbye);\n}\n\n}\n```\nit fails  with the following stacktrace.\n11-06 11:22:01.653: E/AndroidRuntime(18719): FATAL EXCEPTION: main\n11-06 11:22:01.653: E/AndroidRuntime(18719): com.alibaba.fastjson.JSONException: create instance error, class com.affinityclick.hush.views.activities.SplashActivity$Hello\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:104)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:235)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:463)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.JSON.parseObject(JSON.java:206)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.JSON.parseObject(JSON.java:166)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.JSON.parseObject(JSON.java:287)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.affinityclick.hush.views.activities.SplashActivity$1.run(SplashActivity.java:57)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at android.os.Handler.handleCallback(Handler.java:615)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at android.os.Handler.dispatchMessage(Handler.java:92)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at android.os.Looper.loop(Looper.java:137)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at android.app.ActivityThread.main(ActivityThread.java:4745)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at java.lang.reflect.Method.invokeNative(Native Method)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at java.lang.reflect.Method.invoke(Method.java:511)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at dalvik.system.NativeStart.main(Native Method)\n11-06 11:22:01.653: E/AndroidRuntime(18719): Caused by: java.lang.NullPointerException\n11-06 11:22:01.653: E/AndroidRuntime(18719):    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:101)\n11-06 11:22:01.653: E/AndroidRuntime(18719):    ... 15 more\nWhen i make the inner-class \"public static\" it works again.\nit also fails if i don't have an empty default constructor which is the way you show it your examples... but that's not a biggy.\n. otherwise... pretty much everything seems to work.your library is awesome!\n. ",
    "ashtoash": "\u5c31\u662f\u5728\u6784\u9020\u4e00\u4e9b\u4e0d\u8ddf\u4efb\u4f55bean\u5173\u8054\u7684json\u7684\u65f6\u5019\u7528\u7684\u5de5\u5177\u7c7b,\u6709object(),key(),value(),endObject()\u4e4b\u7c7b\u7684\u65b9\u6cd5.\n\u6ca1\u6709\u8fd9\u4e2a\u7c7b\u7684\u8bdd\u76f4\u63a5\u7528JSONObject\u6784\u9020\u633a\u4e0d\u65b9\u4fbf\u7684,\u53c8\u4e0d\u60f3\u4e3a\u4e86\u7528\u8fd9\u4e2a\u7c7b\u518d\u5f15\u5165\u53e6\u4e00\u4e2ajson\u5305.\n\u89c9\u5f97\u5e94\u8be5\u6709\u8fd9\u4e48\u4e2a\u7c7b\u7684\u554a,\u96be\u9053\u662f\u540d\u5b57\u4e0d\u540c\u6211\u6ca1\u627e\u5230?\n. \u6069,\u6ca1\u9519\u5c31\u662f\u8fd9\u4e2a thumb\n. ",
    "cnhans": "\u597d\u7684\uff0c\u76ee\u524d\u4e5f\u53ea\u597d\u5148\u4f7f\u7528Date\u7c7b\u578b\u4e86\u3002\n. com.alibaba.fastjson.JSONException: can not cast to : java.util.Calendar\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:710)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:445)\n    at com.alibaba.fastjson.JSON.toJavaObject(JSON.java:601)\n    at com.tongbor.infra.common.utils.FastJsonTest.testToJavaObject(FastJsonTest.java:27)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: com.alibaba.fastjson.JSONException: can not cast to : java.util.Calendar\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:535)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:576)\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:703)\n    ... 26 more\n\u8fd8\u662f\u6709\u95ee\u9898\u3002\u5e94\u8be5\u8bf4\u662f\u8fd9\u4e2a\u65b9\u6cd5\u6709\u95ee\u9898\uff1a\nJSONObject.toJavaObject(json, myObject.class);\n\u4e0b\u9762\u8fd9\u4e2a\u5df2\u7ecf\u4fee\u590d\u4e86\u3002\nJSON.parseObject(text, myObject.class);\n. ```\n    LocalDateTimeModel localDateTimeModel = new LocalDateTimeModel();\n    localDateTimeModel.setStartDateTime(LocalDateTime.now());\n    localDateTimeModel.setEndDateTime(LocalDateTime.now().plusDays(1));\n// to json\nString localDateTimeStr = JSON.toJSONString(localDateTimeModel);\nLOGGER.info(\"localDateTimeStr:{}\", localDateTimeStr);\n// to javaobject\nLocalDateTimeModel localDateTimeModelInJson = JSON.toJavaObject(JSON.parseObject(localDateTimeStr), LocalDateTimeModel.class);\nLOGGER.info(\"localDateTimeStr:{}\", localDateTimeModelInJson);\n\n```\n\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248\u672c\u3002\n. \u6e29\u5c11\uff0c\u4ec0\u4e48\u65f6\u5019\u80fd\u652f\u6301LocalDateTime\u53cd\u5e8f\u5217\u5316\u5462\uff1f. LocalDateTimeModel localDateTimeModelInJson = JSON.parseObject(localDateTimeStr, LocalDateTimeModel.class);\n\u4eca\u5929\u53d1\u73b0\u8fd9\u6837\u7684\u5199\u6cd5\u662f\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316\uff0c\u4f46toJavaObject\u8fd8\u662f\u6709\u95ee\u9898\u3002\n1.2.21\u7248\u672c\u3002. \u8fd8\u6709toJavaObject\u7684\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u4e5f\u5b58\u5728\u95ee\u9898\uff0c\u5c3d\u5feb\u4fee\u590d\u4e0b\u3002\nparseObject\u662f\u6b63\u5e38\u7684\u3002. ",
    "sunxwell": "\u6b64\u95ee\u9898\u5df2\u4fee\u6b63\uff0c\u52a8\u4f5c\u771f\u5feb\u554a\uff01\n. ",
    "ferdiknight": "tName \u6807\u51c6\u7684setter\u540d\u5b57\u5e94\u8be5\u662fgetTName\u554a\n. \u8ddf\u8e2a\u6e90\u4ee3\u7801\uff0c\u770b\u5230\u4ee5\u4e0b\u65b9\u6cd5\u4e2d\u7684\u8fd9\u6761\u8bed\u53e5\uff0c\u5c06void\u8fd4\u56de\u7c7b\u578b\u4ee5\u5916\u7684\u65b9\u6cd5\u6392\u9664\u4e86\uff0c\u8fd9\u91cc\u662f\u5426\u53ef\u4ee5\u53bb\u6389\u8be5\u6761\u4ef6\uff0c\u7528\u4ee5\u517c\u5bb9builder\u6a21\u5f0f\u7684java bean\uff1f\njava\ncom.alibaba.fastjson.util.DeserializeBeanInfo.computeSetters(Class<?> clazz)\njava\nif (!method.getReturnType().equals(Void.TYPE)) {\n                continue;\n}\n. ",
    "wuyexiong": "\u592a\u611f\u8c22\u4e86\uff0c\u819c\u62dc\u3002\n. package entity;\npublic class Track {\n    public String name;\n    public String color;\n    public String _abstract;\n}\npublic class Tracks {\n    Track[] track;\n```\npublic void setTrack(Track[] track) {\n    this.track = track;\n}\npublic Track[] getTrack() {\n    return track;\n}\n@Override\npublic String toString() {\n    StringBuilder sb = new StringBuilder();\n    for(Track track : getTrack())\n    {\n        sb.append(\",name : \").append(track.name);\n        sb.append(\",color : \").append(track.color);\n        sb.append(\",abstract : \").append(track._abstract).append(\"\\n\");\n    }\n    return sb.toString();\n}\n```\n}\n\u8fd9\u6837\u7684\u5b9e\u4f53\u7684\u8bdd, \"abstract\"\u8282\u70b9\u65e0\u6cd5\u89e3\u6790\u51fa\u4e1c\u897f,\u9ebb\u70e6\u770b\u770b\n. \u660e\u767d\u3002\u591a\u8c22\u4e86\u3002\n. ",
    "bingoohuang": "We developed a web app in which depends on your fastjson. But the client program guys use c++. we said @type is needed with some value, so they append @type as the last element of json string. And as a result, the server did response fail. So we checked it and found that @type should be the first element.\nIt is OK now to move @type to the first.\nTks.\n. \u96be\u9053fastjson\u4e0dfast\u4e86\uff0c\u9664\u4e86\u540d\u79f0\u4e4b\u5916\uff1f\n. \u5982\u4f55\u6267\u884c100\u4e07\u6b21\uff1f     \u8fd9\u6837\u4e48\uff1f\n       for (int i = 0; i < 100; ++i) {\n            com.alibaba.fastjson.JSONObject json = new com.alibaba.fastjson.JSONObject();\n            json.put(\"app_id\", \"1234567890\");\n            json.put(\"format\", \"json\");\n            json.put(\"rsp_code\", \"0000\");\n            json.put(\"msg\", s);\n            String tt = json.toJSONString();\n        }\n\u6211\u90fd\u6267\u884c100\u6b21\uff0cfastjson\u7528\u4e8656\u79d2\uff0cjson-lib\u7528\u4e860.318\u79d2\uff0cjson-smart\u7528\u4e860.288\u79d2\u3002\n\u8fd9\u79cdjson\u5957json\uff0c\u800c\u4e14\u91cc\u9762\u7684\u90a3\u4e2ajson\u5f88\u5927\u3001\u5b57\u6bb5\u5f88\u591a\uff0cfastjson\u7279\u522b\u6162\uff0cfastjson\u9ed8\u8ba4\u5f00\u542f\u4e86\u5b57\u7b26\u4e32json\u68c0\u6d4b\u4e48\uff1f\n. \u8ddf\u8e2a\u4e86\u4e00\u4e0b\uff0c\u5728\u6e90\u7801\u4e2dcom.alibaba.fastjson.serializer.SerializeWriter\u7684\u51fd\u6570writeStringWithDoubleQuote\u4e2d\u6709\u4e00\u6bb5\u4ee3\u7801\u5982\u4e0b\uff08\u51fd\u6570\u5c3e\u90e8\uff09\uff1a\n            for (int i = lastSpecialIndex - 2; i >= start; --i) {\n                char ch = buf[i];\nif (ch < CharTypes.specicalFlags_doubleQuotes.length\n                && CharTypes.specicalFlags_doubleQuotes[ch] //\n                || (ch == '\\t' && isEnabled(SerializerFeature.WriteTabAsSpecial))\n                || (ch == '/' && isEnabled(SerializerFeature.WriteSlashAsSpecial))) {\n                System.arraycopy(buf, i + 1, buf, i + 2, end - i - 1);\n                buf[i] = '\\\\';\n                buf[i + 1] = replaceChars[ch];\n                end++;\n            }\n        }\n\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u503c\u7279\u522b\u5927\uff0c\u800c\u4e14\u4e2d\u95f4\u5f88\u591a\u53cc\u5f15\u53f7\uff0c\u90a3\u4e48\u4e0a\u4e00\u6bb5\u4ee3\u7801\u662f\u9020\u6210\u6027\u80fd\u4f4e\u4e0b\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u56e0\u4e3a\u53cd\u590dSystem.arrayCopy\n. \u81ea\u5df1\u4fee\u590d\u4e86\u4e00\u4e0b\uff0c\u60f3\u8dd1\u4e00\u4e0b\u5168\u90e8\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53d1\u73b048\u4e2a\u7528\u4f8b\u9519\u8bef\uff0c\u7ed3\u679c\u5355\u72ec\u8dd1\u524d\u51e0\u4e2a\u5931\u8d25\u7684\uff0c\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u770b\u6765\u6d4b\u8bd5\u7528\u4f8b\u4e32\u7740\u8dd1\uff0c\u4f1a\u76f8\u4e92\u5f71\u54cd\u554a\u3002\n. \u81ea\u5df1\u4fee\u590d\u4e86\u4e00\u4e0b\uff0c\u6e29\u5c11\u5e2e\u770b\u770b\u6709\u6ca1\u6709\u5565\u95ee\u9898\uff08\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\uff0c\u7136\u540e\u5bf9\u62f7\uff09\uff1a\n\u5728\u6e90\u7801\u4e2dcom.alibaba.fastjson.serializer.SerializeWriter\u7684\u51fd\u6570writeStringWithDoubleQuote\u4e2d\n```\n    } else if (specialCount > 1) {\n        escapeSpecialChars(start, end, lastSpecialIndex); // \u6b64\u5904\u63d0\u70bc\u51fa\u4e00\u4e2a\u51fd\u6570\n    }\nprivate void escapeSpecialChars(int start, int end, int lastSpecialIndex) {\n    char newValue[] = new char[buf.length];\n    System.arraycopy(buf, 0, newValue, 0, start);\nint lastSrcPos = start, lastDestPos = start, i = start;\nfor (; i <= lastSpecialIndex; ++i) {\n    char ch = buf[i];\n    if (ch < specicalFlags_doubleQuotes.length && specicalFlags_doubleQuotes[ch]\n            || (ch == '\\t' && isEnabled(WriteTabAsSpecial))\n            || (ch == '/' && isEnabled(WriteSlashAsSpecial))) {\n\n        int copyLen = i - lastSrcPos;\n        if (copyLen > 0) System.arraycopy(buf, lastSrcPos, newValue, lastDestPos, copyLen);\n        lastSrcPos += copyLen + 1;\n        lastDestPos += copyLen + 2;\n\n        newValue[lastDestPos - 2] = '\\\\';\n        newValue[lastDestPos - 1] = replaceChars[ch];\n        end++;\n    }\n}\n\nint copyLen = buf.length - lastDestPos - 1;\nif (copyLen > 0 ) System.arraycopy(buf, lastSrcPos, newValue, lastDestPos, copyLen);\n\nbuf = newValue;\n\n}\n```\n. \u611f\u8c22\u4f60\u7684\u53ca\u65f6\u5904\u7406\u3002\u6211\u770b\u4e86\u4e00\u4e0b\u4f60\u7684\u793a\u4f8b\uff0c\u786e\u5b9e\u662f\u53ef\u4ee5\u5b9a\u4e49\u62e6\u622a\u5668\uff0c\u4f46\u662f\u6211\u4e0d\u60f3\u5728\u5168\u5c40\u4e0a\u6765\u8bbe\u7f6e\u6216\u8005\u53d6\u6d88\u62e6\u622a\u5668\uff0c\u800c\u662f\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u89e3\u6790\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\uff0c\u624d\u9700\u8981\u6307\u5b9a\u62e6\u622a\u5668\uff0c\u4e0d\u77e5\u9053\u4f60\u662f\u5426\u65b9\u4fbf\u505a\u6210\u8bf7\u6c42\u7ea7\u522b\u7684\u62e6\u622a\u5668\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u7684\uff0c\u8c22\u8c22\u3002. Feature.IgnoreNotMatch\u8fd9\u4e2a\u7279\u6027\uff0c\u4e0d\u77e5\u9053\u5728JSON.parseObject(jsonString, BeanType, Features...)\u4e0a\u600e\u4e48\u4f20\u9012\uff0c\u6211\u4e0d\u60f3\u5f00\u542fFeature.IgnoreNotMatch\u5b83\uff0c\u600e\u4e48\u6307\u5b9a?. \u8c22\u8c22\uff0c\u8fd9\u4e2a\u5c31\u662f\u6211\u60f3\u8981\u7684\u529f\u80fd\u3002. \u53ef\u4ee5\u52a0\u4e00\u4e2a\u7c7b\u4f3c\u5e8f\u5217\u5316\u65f6\u7684ValueFilter\u4e48\uff0c\u53ef\u4ee5\u81ea\u5df1\u6dfb\u52a0\u989d\u5916\u7684\u5904\u7406\u3002\u6216\u8005\u81ea\u5df1\u5b9a\u5236\u5316\u4e00\u4e2aStringDeserializer\uff0c\u6765\u505a\u81ea\u52a8trim\u554a\uff0c\u6211\u4e00\u4f1a\u8bd5\u8bd5\u770b\u3002.  ParserConfig.getGlobalInstance().putDeserializer(DateTime.class, new JodaDateTimeDeserializer()); \nParserConfig.getGlobalInstance().putDeserializer(String.class, new TrimStringDeserializer());\nDateTime\u53cd\u5e8f\u5217\u5316\u5668\uff0c\u80fd\u6b63\u786e\u4f7f\u7528\uff0c\u6211\u91cd\u7f6eString\u7684\u53cd\u5e8f\u5217\u5316\u5668\u65f6\uff0c\u5bf9\u4e8eJAVABEAN\u4e2d\u7684String\u5c5e\u6027\uff0c\u5219\u6ca1\u6709\u6548\u679c\u554a\u3002. \u6709\u4e2a@JsonField\u7684\u6ce8\u89e3\uff0c\u53ef\u4ee5\u770b\u770b. import com.alibaba.fastjson.annotation.JSONField;\n@JSONField(serialize = false, deserialize = false). \u4f60\u662f\u8bf4\u53d1\u5e8f\u5217\u5316\u65f6\uff0c\u52a8\u6001\u63d0\u4f9b\u4e00\u4e2akey\u5217\u8868\uff0c\u53ea\u53cd\u5e8f\u5217\u5316\u6307\u5b9akey\u7684\u6570\u636e\u4e48\uff1f. \u672c\u610f\u662f\u671f\u671b\u80fd\u521b\u5efa\u4e00\u4e2aImmutable Bean\uff0c\u4e00\u65e6\u521b\u5efa\uff0c\u4e0d\u5e0c\u671b\u5c5e\u6027\u88ab\u4fee\u6539\uff0c\u591a\u7ebf\u7a0b\u4fdd\u6301\u5b89\u5168\u3002. \u5982\u679c\u5168\u90fd\u8981\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0cobjenesis\u8fd9\u4e2a\u7c7b\u5e93\u7684\u5e94\u7528\u573a\u666f\u4e5f\u5c31\u6d88\u5931\u4e86\u554a. ",
    "wu560130911": "{\"extendsParams\":{\"sign\":\"MqYc+gEUxAUwrbLHkTdNH0WO9TTk/myKNfldLMtgd9hL6YIJKDYRcH9LAhSEN3ft4EknDvPwiNr6\\r\\nOpgX/XEz3LW7n7lNwQNzDgpaklON4IIv6Ous3AXFIqENbK3sES9ZW/qgARTf7YPwzXg650Myf9Eo\\r\\nI21zTAto9uYvoYXF/4s=\",\"result\":\"2000\",\"usercode\":\"A923397\",\"value\":\"50\",\"orderno\":\"1473389201734\",\"datetime\":\"20160909110314\",\"billid\":\"R160909110939456\",\"mode\":\"q\",\"version\":\"1.0\",\"info\":\"\u652f\u4ed8\u6210\u529f\",\"accountvalue\":\"48\"},\"payGate\":\"Ofpay\"}\n{\"extendsParams\":{\"sign\":\"MqYc+gEUxAUwrbLHkTdNH0WO9TTk/myKNfldLMtgd9hL6YIJKDYRcH9LAhSEN3ft4EknDvPwiNr6\\r\\nOpgX/XEz3LW7n7lNwQNzDgpaklON4IIv6Ous3AXFIqENbK3sES9ZW/qgARTf7YPwzXg650Myf9Eo\\r\\nI21zTAto9uYvoYXF/4s=\",\"result\":\"2000\",\"usercode\":\"A923397\",\"value\":\"50\",\"orderno\":\"1473389201734\",\"datetime\":\"20160909110314\",\"billid\":\"R160909110939456\",\"accountvalue\":\"48\",\"info\":\"\u652f\u4ed8\u6210\u529f\",\"version\":\"1.0\",\"mode\":\"q\"},\"payGate\":\"Ofpay\"}\n\u6ca1\u6709\u4e00\u5b9a\u662f\u6309\u7167\u5b57\u5178\u5e8f\uff0c\u4e24\u4e2a\u7ed3\u679c\u4e0d\u4e00\u6837\u554a\n. ",
    "ikozar": "Of course, this way is possible for conversion of objects, but:\n1. This method is slowly\n2. I can't control the binding, such as mapping a field 'fieldA' of class 'A' to field 'fieldB' of class 'B'\nI'd like to have possibility like this code (for shortly in groovy-style)\nclass A {String fieldA}\nclass B {C fieldB}\nclass C {String fieldC}\nParserConfig.getGlobalInstance().addMapping(\n     new ClassMap(from: A.class, to: B.class, fields: [['fieldA', 'fieldB.fieldC'']])\nFastBinding.convert(new A(fieldA: '123'), new B())\nIt implements not very hard if there is a factory of data binding\n. P.S.: I want to develop a universal dao find method, which receives result data from DB with JPA Entity and \nconverts theirs to a web data service response type.\nThis facility is possible when using DozerMapper, by mapping web data type to JPA Entity.\nBut, if I like to receive result as Tuple - transformation impossible.\nDozerMapper is a very closed system.\nI hope to use fastjson for this purpose, because it's very flexible system.\n. ",
    "zeutrap": "got it. Thx.\n. \u8fd9\u6837\u505a\u4f1a\u5c06\u4e2d\u6587\u5b57\u7b26\u5982\u201c\u4e2d\u56fd\u79fb\u52a8\u201d\u4e5f\u5e8f\u5217\u5316\u4e3a\"\\uXXXX\"\u3002\u8bf7\u95ee\u5982\u4f55\u624d\u80fd\u50cforg.json\u4e00\u6837\u4f7f\u5f97\u53ea\u5bf9\u4e8e\u4e0d\u53ef\u89c1\u5b57\u7b26\u5982\u6b64\u505a\uff0c\u800c\u5bf9\u4e8e\u4e2d\u6587\u7b49\u5b57\u7b26\u4fdd\u6301\u539f\u6837\uff1f\u56e0\u4e3a\u5bf9\u4e8e\u53ef\u89c1\u5b57\u7b26\u505a\u8fd9\u6837\u7684\u7f16\u7801\u4f1a\u4f7f\u5f97\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ef\u8bfb\u6027\u51cf\u4f4e\u3002\n. \u53e6\u5916\uff0cJSON.toJSONString(obj, SerializerFeature.BrowserCompatible)\u5bf9\u4e8eJSONObject\u4e2dKey\u7684\u503c\u6709\u4e0d\u53ef\u89c1\u5b57\u7b26\u65f6\u4e5f\u4f1a\u51fa\u9519\u3002\n. \u53e6\u5916\uff0cJSON.toJSONString(obj, SerializerFeature.BrowserCompatible)\u5bf9\u4e8eJSONObject\u4e2dKey\u7684\u503c\u6709\u4e0d\u53ef\u89c1\u5b57\u7b26\u65f6\u4e5f\u4f1a\u51fa\u9519\u3002\n. ",
    "feng88724": "\u5f00\u6e90\u7684\u597d\u5904\u5c31\u662f\u8d8a\u6765\u8d8a\u5065\u58ee, \u8d5e!\n. ",
    "youxiachai": "\u90fd\u4e00\u4e2a\u661f\u671f\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002maven \u90a3\u91cc\u8fd8\u662f\u6ca1\u770b\u5230\u6709android\u7248\u672c\u7684\u66f4\u65b0\u3002\u3002\u3002\n. \u6211\u770b\u5230 1.1.32 \u4e86...\u8fd9\u5468android \u6709\u5e0c\u671b\u5417?\n. @wenshao \u56e0\u4e3a\u6211\u662f\u641eandroid..\u770b\u5230\u8c8c\u4f3c\u4fee\u590d\u4e86\u4e0d\u5c11bug...\u53ca\u65f6\u66f4\u65b0\u4e00\u4e0b,\u907f\u514d\u51fa\u73b0bug..\n. geti \u4e0d\u662f\u6807\u51c6java bean ...\n. \u4f60\u8fd9\u4e2ajson \u662f\u4e0d\u5408\u6cd5\u7684...\nhttp://www.json.org/\n\u770b\u5173\u4e8echar \u90e8\u5206\u7684\u5b9a\u4e49.\n\u5982\u679c\u8981\u5904\u7406\\ \u5e94\u8be5\u662f \\\\\n. \u88ab\u63a5\u53e3\u5751\u4e86... \u5c45\u7136, \u6709\u4e9b\u6570\u636e\u662f\u7a7a\u6570\u7ec4...\n. \u4e4b\u524d,\u5c31\u6709\u4eba\u5410\u69fd\u8fc7\u8fd9\u4e2a\u95ee\u9898...\n\u8fd9\u4e2a\u5730\u5740,\u5916\u7f51\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\u4e86..\n. \u4f60\u7684\u6df7\u6dc6\u89c4\u5219\u5e94\u8be5\u662f\u6240\u6709\u5b9e\u4f53\u7c7b\u90fd\u4e0d\u6df7\u6dc6..\n. \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u6709\u5dee\u4e0d\u591a\u4e00\u5e74\u4e86\u5427....\n. @yanyinxi maven\u5c31\u6709\u554a\n. ",
    "hjanetzek": "sorry. found it in resources\n. ",
    "akvadrako": "I'm not really sure how you want to integrate it, so I'll leave that up to you.\n. Hi. This is quite important to us. I have tried to look at making a patch myself, but this code is fairly complex and I don't want to make a over-reaching change without knowing it would be accepted.\nWhat I don't understand is why the BrowserCompatible code path is so different from the other code path.\n. ",
    "wsky": "thanks\n. ",
    "Sartner": "\u6211\u73b0\u5728\u8981\u4e34\u65f6\u6362\u4e00\u79cdformatter, \u6709\u6ca1\u6709\u7b80\u5355\u4e00\u70b9\u7684\u65b9\u6cd5..\n@jsonfield\u4e0a\u662fyyyy-MM-dd HH:mm:ss\n\u6709\u4e2aaction\u9700\u8981\u7528yyyy-MM-dd\u7684\u5f62\u5f0f\n\u53ea\u80fd\u624b\u52a8put \u8a72\u5b57\u6bb5?\n. ",
    "testerror": "@wenshao     \u6e29\u603b  \u5bf9\u8fd9\u4e2a\u95ee\u9898\u80fd\u5426\u52a0\u4e0a\u4e00\u4e2a\u914d\u7f6e\u9879       \u7531\u7528\u6237\u51b3\u5b9a\u8d70\u5168\u5c40\u914d\u7f6e\u8fd8\u662f\u8d70@JsonField\u4e2d\u7684format   \u793e\u533a\u91cc\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u591a\u4e2a\u8ba8\u8bba:\n\u8fd8\u662fdateFormat\u914d\u7f6e\u4f1a\u8986\u76d6@JsonField\u7684\u95ee\u9898 \n\u4f7f\u7528JsonField\u914d\u7f6e\u65e5\u671f\u683c\u5f0f\uff0c\u88abFastJsonConfig\u7684\u5168\u5c40\u914d\u7f6e\u8986\u76d6\u6389. ",
    "juqkai": "\u4e0d\u77e5\u9053Nutz\u91cc\u9762\u7684Mapl\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684, \u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5cfastJson\u751f\u6210\u7684MapList\u5bf9\u8c61\n. \u6700\u65b0\u7684\u7248\u672c\n. \u672c\u6765\u60f3\u81ea\u5df1\u6539\u7684, \u7ed3\u679c\u53d1\u73b0\u4ee3\u7801\u5f88\u7ed5...DefaultJSONParser.context\u7a76\u7adf\u662f\u60f3\u600e\u4e48\u7528? \u505a\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u5bf9\u8c61\u4e48? \u7528\u961f\u5217\u4e0d\u662f\u66f4\u597d?\nDefaultJSONParser \u4e0e JavaBeanDeserializer \u662f\u4ec0\u4e48\u5173\u7cfb? \n\u4e3a\u4ec0\u4e48\u91cc\u9762\u6709\u90a3\u4e48\u591a\u7684\u91cd\u590d\u4ee3\u7801? \u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u5bf9\u8c61\u7684\u8f6c\u6362, \u5728DefaultJSONParser \u4e2d\u6709\u8f6c\u6362\u5bf9\u8c61, \u800cJavaBeanDeserializer \u4e2d\u5374\u8df3\u8fc7DefaultJSONParser \u505a\u53e6\u5916\u4e00\u4e9b\u8f6c\u6362?\nDefaultFieldDeserializer\u53c8\u662f\u505a\u4ec0\u4e48\u7684? \u4e3a\u4ec0\u4e48\u8981\u4e0eJavaBeanDeserializer \u5173\u8054???\n\u65e2\u7136DefaultFieldDeserializer\u662f\u505aJSON\u8f6c\u6362\u7684, \u90a3\u4e48Deserializer\u4e2d\u5c31\u4e0d\u5e94\u8be5\u6709KEY\u76f8\u5173\u7684\u4e1c\u897f\n. ```java\npublic class Issues1903Test {\n    // Issues1903 issues =\n    public static void main(String[] args) {\n        MapHandler mh = new MapHandler();\n        mh.add(\"name\", \"test\");\n        mh.add(\"age\", 20);\n    Issues1903 issues = (Issues1903) Proxy.newProxyInstance(mh.getClass().getClassLoader(), new Class[]{Issues1903.class}, mh);\n    System.out.println(issues.getName());\n    System.out.println(issues.getAge());\n\n    System.out.println(JSON.toJSON(issues).toString()); //\u6b63\u786e\u7ed3\u679c: {\"age\":20}\n    System.out.println(JSON.toJSONString(issues));  //\u6b63\u786e\u7ed3\u679c: {\"age\":20}\n}\n\n}\ninterface Issues1903{\n    @Transient\n    public String getName();\n    public void setName(String name);\npublic Integer getAge();\npublic void setAge(Integer age);\n\n}\nclass MapHandler implements InvocationHandler{\n    Map map = new HashMap<>();\n@Override\npublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n    String name = method.getName().substring(3);\n    String first = String.valueOf(name.charAt(0));\n    name = name.replaceFirst(first, first.toLowerCase());\n    return map.get(name);\n}\n\npublic void add(String key, Object val){\n    map.put(key, val);\n}\n\n}\n```. ",
    "ptma": "\u6211\u6709\u4e00\u4e2a\u65b9\u6848\uff0c\u4e0d\u9700\u8981\u6539\u52a8\u5f88\u591a\u4ee3\u7801\uff0c\u76f4\u63a5\u4f7f\u7528\u73b0\u6709\u7684 SerialContext \uff0c\u5224\u65ad\u662f\u5426\u9012\u5f52\u5f15\u7528\u65f6\u53ea\u8981\u9012\u5f52\u68c0\u67e5parent \u91cc\u9762\u7684 object \u662f\u5426\u662f\u672c\u8eab\uff1b\n\u4e0a\u8ff0\u65b9\u6848\u6211\u5df2\u6709\u5b9e\u73b0\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u4ee3\u7801\u6ca1\u770b\u900f\uff0c\u8c8c\u4f3c ListSerializer \u91cc 85\u300186\u4e24\u884c\u4ee3\u7801\u662f\u591a\u4f59\u7684\uff08\u4f1a\u5bfc\u81f4\u591a\u51fa\u4e00\u4e2a\u5c42\u7ea7\u5173\u7cfb\uff09\nitemSerializer = serializer.getObjectWriter(item.getClass());\n//SerialContext itemContext = new SerialContext(context, object, fieldName);\n//serializer.setContext(itemContext);\nitemSerializer.write(serializer, item, i, elementType);\n. \u5728\u8fd9\u4e2a\u5206\u652f\u4e2d write \u7b2c\u4e8c\u4e2aB \u65f6\uff0c\u53ef\u4ee5\u5728 B \u7684 Context \u7684 parent \u94fe\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2aB\u662f\u7b49\u4e8e\u672c\u8eab\u7684\uff0c\u8fd9\u662f\u5c31\u8be5\u8f93\u51fa\u4e3a\u5f15\u7528\u4e86\u3002\n\u4f60\u4e3e\u5f97\u8fd9\u4e2a\u4f8b\u5b50\u8fd8\u4f1a\u6709\u4e00\u4e2a\nA -> B -> A \u4e5f\u662f\u9012\u5f52\u5f15\u7528\u4e86\n. A -> B -> C -> A \u8fd9\u79cd\u60c5\u51b5 write \u7b2c\u4e8c\u4e2a A \u65f6\u8f93\u51fa\u4e3a\u5f15\u7528\uff1b\n\n\u6211\u5df2\u901a\u8fc7\u90ae\u4ef6\u53d1\u4e86\u90e8\u5206\u4fee\u6539\u8fc7\u7684\u4ee3\u7801\u5230\u4f60\u7684\u90ae\u7bb1\n. \u62b1\u6b49  JSONSerializer 212 \u884c\nif (context != null) parentContext = valueContext.getParent();\n\u5e94\u6539\u4e3a\nif (valueContext != null) parentContext = valueContext.getParent();\n. \u90a3\u4e48\u53ea\u6709\u7528 HashMap \u4e86\uff0c \u4e0d\u80fd\u7528\u539f\u6765\u7684 IdentityHashMap\n. \u7a0d\u7a0d\u6539\u9020\u4e86\u4e00\u4e0b SerialContext\uff0c\u73b0\u5728\u53ef\u4ee5\u7528\u56de IdentityHashMap \u4e86\uff0c\n\u53e6\u5916\uff0c\u7b80\u5316\u4e86\u4e00\u4e0b JSONSerializer \u4e2d\u7684 containsReference\u3001getSerialContext \u4e24\u4e2a\u65b9\u6cd5\n. \u4e0d\u660e\u767d\u7684\u662f \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5 Introspector.decapitalize(methodName.substring(3)) \uff0c\u800c\u662f\u8981\u7ecf\u8fc7\u90a3\u4e48\u591a\u5904\u7406\uff1f\n\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u4e3a\u4ec0\u4e48\u8981\u53bb\u6389\u4e0b\u5212\u7ebf?\n. \u8fd9\u662f JavaBean \u7684\u89c4\u8303\uff0c \u4e3a\u4e86\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\n. \u4f7f\u7528\nSerializerFeature.DisableCircularReferenceDetect\n\u5373\u53ef\n. JSON.toJSONString(object, SerializerFeature.QuoteFieldNames);\n. ",
    "olddoor": "soga.\u6e90\u7801\u770b\u4e0d\u592a\u61c2. \u539f\u6765\u662f\u7528DisableCircularReferenceDetect \u6765\u89e3\u51b3.\n. ",
    "rill": "33\u7248\u672c\u6d4b\u8bd5\u7ed3\u679c\uff1a\n{\"PId\":\"aa\",\"UName\":\"abc\",\"t_id\":\"2\"}\n23\u7248\u672c\u6d4b\u8bd5\u7ed3\u679c\uff1a\n{\"pId\":\"aa\",\"uName\":\"abc\",\"t_id\":\"2\"}\n. \u8fd9\u6837\u4e0d\u592a\u5408\u7406\u5427\uff0c\u4e0d\u5e94\u8be5\u6539\u540d\u5427\u3002\n\u4e3b\u8981\u662f\u751f\u6210json\u683c\u5f0f\u7684\u6570\u636e\u4f9b\u524d\u7aef\u7684ztree\u7528\uff0cztree.js\u91cc\u5b9a\u4e49\u7684\u53d8\u91cf\u662fpId\uff0c\u4e24\u8fb9\u5c31\u5bf9\u4e0d\u8d77\u6765\u4e86\u3002\n\u4e00\u5347\u7ea7\uff0c\u6811\u90fd\u534e\u4e3d\u4e3d\u7684\u663e\u793a\u5f02\u5e38\u4e86\u3002\n. \u52a0\u4e86@JSONField(name = \"pId\")\u4e5f\u65e0\u7528\uff0c\u5efa\u8bae\u8fd8\u662f\u505a\u6210\u53ef\u914d\u7f6e\u7684\uff0c\u522b\u9650\u5236\u6b7b\u5427\n. \u8d5e\u4e00\u4e0b\u6e29\u5c11\u7684\u5904\u7406\u901f\u5ea6\n. ",
    "yanyinxi": "public class RestResHeaderDomain {\n```\nprivate String method;\n@JSONField(name = \"Ver\")\nprivate String Ver;\n```\npublic static void main(String[] args) {\n        //com.alibaba.fastjson.util.TypeUtils.compatibleWithJavaBean = true;\n        String str= JSON.toJSONString(new RestResHeaderDomain());\nSystem.out.println(str);\n}\n\u7ed3\u679c\uff1a\n{\"ver\":\"2.0\"}\n\u4e0d\u77e5\u9053\u8fd9\u4e2a\u600e\u4e48\u7528\u554a\uff1f\ncom.alibaba.fastjson.util.TypeUtils.compatibleWithJavaBean = true;\n. @wenshao \n. @darkjune  @youxiachai  @oldratlee  \u8bf7\u95ee \u6211\u5728\u4ec0\u4e48\u5730\u65b9\u4e0b\u8f7djar\u5305\u5462\uff01\n. \u611f\u8c22\uff01\n\u53d1\u81ea\u6211\u7684 iPhone5\n\n\u5728 2014\u5e746\u670830\u65e5\uff0c8:52\uff0cyouxiachai notifications@github.com \u5199\u9053\uff1a\n@yanyinxi maven\u5c31\u6709\u554a\n\u2014\nReply to this email directly or view it on GitHub.\n. @wenshao   \u6211\u7528fastjson 1.2.1 \n. \u8bd5\u4e86\u4e0b\uff0c\u5728get\u65b9\u6cd5\u4e0a@JSONField(name = \"Ver\") \u5c31\u53ef\u4ee5\u5927\u5199\u3002 \n\n\u6709\u6ca1\u6709 JSON.toJSONString(restReqDomain); \u8fd9\u4e2a\u65b9\u6cd5\u91cc\u9762\u8bbe\u7f6e\u7684\u53c2\u6570\u5462\n@wenshao \n. ",
    "phoenix": "1.1.33\n. ``` java\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.annotation.JSONField;\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(JSON.VERSION);\n        System.out.println(JSON.toJSONString(new BooleanJson()));\n    }\n}\nclass BooleanJson {\n    @JSONField(name = \"is-abc\")\n    private boolean isAbc;\npublic boolean isAbc() {\n    return isAbc;\n}\n\n}\n```\n\u8f93\u51fa:\n1.1.34\n{\"abc\":false}\n\u8c8c\u4f3c\u8fd8\u662f\u4e0d\u884c\u5462\uff1f\n. \u5df2\u7ecf\u53ef\u4ee5\u4e86\uff0coutput\n1.1.35\n{\"is-abc\":false}\n\u975e\u5e38\u611f\u8c22\uff01\n. ",
    "Sayi": "\u8fd9\u4e2a\u786e\u5b9e\u6709\u70b9\u7591\u60d1\u554a~~~~~\u6709\u65f6\u5019\u9700\u8981\u524d\u9762\u7684is~~~\n. \u80fd\u652f\u6301@JsonValue\u8fd9\u79cd\u6ce8\u89e3\u5c31\u597d\u4e86\uff0c\u73b0\u5728\u7684\u65b9\u5f0f\u5199\u6b7b\u4e86\u3002. ",
    "mh494078416": "\u6709\u65f6\u5019\u9700\u8981isXxx\uff0c\u8fd9\u65f6\u5e94\u8be5\u600e\u4e48\u7528\u5462\uff1f\nparse\u51fa\u6765\u7684\u5bf9\u8c61\u5c5e\u6027\u662fxxx\uff0c\u5e0c\u671b\u662fisXXX\u3002\n. \u5fc5\u987b\u653e\u5728get\u65b9\u6cd5\u4e0a\u624d\u597d\u7528\uff0c\u8fd9\u4e2a\u4ec0\u4e48\u65f6\u5019\u6539\u8fdb\u4e00\u4e0b\uff1f\n. ",
    "JeryZeng": "\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u884c\uff0c\u53ea\u80fd\u89e3\u51b3\u7b2c\u4e00\u5c42key\u4e3a\u6570\u5b57\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5b50\u96c6JSON\u6709key\u4e3a\u6570\u5b57\u8fd8\u662f\u4f1a\u62a5\u9519\n. \ncom.alibaba\nfastjson\n1.1.26\n\n. 1.1.33\u5982\u4f55\u4f7f\u7528\u624d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898?\n. \u5b9e\u9a8c\u4ee3\u7801\uff1a\n    System.out.println(JSON.parseObject(\"{123:\\\"abc\\\",{123:\\\"abc\\\"}}\"));\n\u62a5\u9519\uff1a\nException in thread \"main\" com.alibaba.fastjson.JSONException: unterminated json string, pos 0\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1236)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1152)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:448)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1183)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1152)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:101)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:92)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:163)\n. \u4e3a\u4ec0\u4e48\u5185\u5d4c\u5bf9\u8c61\u7684key\u5c31\u4e0d\u53ef\u4ee5\u4e3a\u6570\u5b57\u5462\uff1f\u662f\u4e0d\u662f\u6211\u4f7f\u7528\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u4e0d\u5bf9\uff0c\u6c42\u6307\u6559\u3002\u3002\u3002\n. \u521a\u624d\u90a3\u4e2a\u786e\u5b9e\u4e0d\u662f\u6807\u51c6\u7684JSON\uff0c\u7528\u8fd9\u4e2a\u8fd8\u662f\u4e00\u6837\u7684\u9519\u8bef\uff1a\n System.out.println(JSON.parseObject(\"{\\\"key\\\":\\\"abc\\\",\\\"value\\\":{123:\\\"abc\\\"}}\"));\n. \u8bf7\u6d4b\u8bd5\u5982\u4e0b\u5b57\u7b26\u4e32\uff1a\n{\n    \"key\": \n    {\n        1000000243015014: 1,\n        1000000254621030: 2\n    },\n    \"value\": 360\n}\nException in thread \"main\" java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String\n    at com.alibaba.fastjson.JSONObject.put(JSONObject.java:51)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:407)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:425)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1183)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1152)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:101)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:92)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:163)\n. \u5750\u7b49release\n. ",
    "nqdy666": "\u697c\u4e3b\uff0c\u60a8\u7684\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u4e48\uff1f\n\u6211\u4f7f\u75281.2.3\u7248\u672c\u7684fastJson\uff0c\u8fd8\u662f\u4f1a\u62a5\u9519\u3002\nJSONObject.parseObject(\"0:test\")\n\u62a5\u9519\u4fe1\u606f\uff1acom.alibaba.fastjson.JSONException: error parse true\n. \u5df2\u7ecf\u5347\u7ea7\u52301.2.9\uff0c\u80fd\u63d0\u4f9b\u4e00\u4e2a\u4f7f\u7528\u5217\u5b50\u4e48\uff1f @wenshao \n. ",
    "zhangkaitao": "\u73b0\u5728\u53ea\u80fd\u5199\u4e24\u4e2agetter\uff0c\u4e00\u4e2a\u7ed9fastjson\u7528\uff0c\u4e00\u4e2a\u7ed9el\u8868\u8fbe\u5f0f\u7528\ngetPId\ngetpId \n. \u5982\u4e0b\u662fjava.beans.Introspector \u7684decapitalize\u65b9\u6cd5\npublic static String decapitalize(String name) {\n    if (name == null || name.length() == 0) {\n        return name;\n    }\n    if (name.length() > 1 && Character.isUpperCase(name.charAt(1)) &&\n                    Character.isUpperCase(name.charAt(0))){\n        return name;\n    }\n    char chars[] = name.toCharArray();\n    chars[0] = Character.toLowerCase(chars[0]);\n    return new String(chars);\n}\nPid-->pid  ABc--->ABc  PId---->PId, pId--->pId\uff0c\u5373\u5982\u679c\u662fpId \u5219\u8fd8\u662fpId\n. if (Character.isUpperCase(c3)) {\n                    if (compatibleWithJavaBean) {\n                        propertyName = Introspector.decapitalize(methodName.substring(3));\n                    } else {\n                        propertyName = Character.toLowerCase(methodName.charAt(3)) + methodName.substring(4);\n                    }\n                } else if (c3 == '_') {\n                    propertyName = methodName.substring(4);\n                } else if (c3 == 'f') {\n                    propertyName = methodName.substring(3);\n                } else {\n                    continue;\n                }\n\u8fd9\u6bb5\u4ee3\u7801\u5bf9\u4e8e pId\u7684\u60c5\u51b5 \u8fd8\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5c0f\u5199\uff0c\u6240\u4ee5\u8fd9\u6bb5\u903b\u8f91\u4e0d\u4f1a\u8d70 \u76f4\u63a5continue\u4e86\u3002\n\u6211\u8ba4\u4e3a\u5982\u679c\u7528\u6237\u8bbe\u7f6e\u4e86compatibleWithJavaBean\uff0c\u76f4\u63a5\u4f7f\u7528Introspector.decapitalize(methodName.substring(3)); \u5373\u53ef\uff0c\u6ca1\u5fc5\u8981\u518d\u8003\u8651\u5176\u4ed6\u60c5\u51b5\uff0c\u5982\u679c\u51fa\u73b0\u5176\u4ed6\u60c5\u51b5\u8fd9\u4e2a\u5c31\u662f\u4e0d\u7b26\u5408\u547d\u540d\u89c4\u8303\uff0c\u6ca1\u5fc5\u8981\u7406\u4f1a\u4e86\u5427\u3002\n\u8fd8\u6709\u5efa\u8baecompatibleWithJavaBean\u5199\u4e00\u4e2asetter\u65b9\u6cd5\uff0c\u8fd9\u6837\u6211\u5728spring\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u542f\u7528\n<bean class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\">\n        <property name=\"staticMethod\" value=\"com.alibaba.fastjson.util.TypeUtils#compatibleWithJavaBean\"/>\n        <property name=\"arguments\" value=\"true\"/>\n    </bean>\n\u5426\u5219\uff0cspring\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u4f3c\u7684\u9759\u6001\u5b57\u6bb5\u8c03\u7528bean\uff0c\u548cspring\u7ed3\u5408\u65f6\uff0c\u4f7f\u7528\u8d77\u6765\u8fd8\u662f\u4e0d\u4fbf\u3002\n. \u5efa\u8bae\u4f60\u5148\u5347\u7ea7\u52303.2.2 \uff0c\u5982\u679c\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u8054\u7cfb\u6211\n\u6bd4\u5982\u6211\u914d\u7f6e\u7684\n(spring-mvc.xml)\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n. ```\n    \n\n\n \u907f\u514dIE\u6267\u884cAJAX\u65f6,\u8fd4\u56deJSON\u51fa\u73b0\u4e0b\u8f7d\u6587\u4ef6 \n\n\n\ntext/html;charset=UTF-8\n\n\n<property name=\"serializerFeature\">\n\u8fd9\u4e2a\u5730\u65b9\u52a0\u4e0a\u8fd9\u4e2a\u529f\u80fd\u5427\uff0c\u80fd\u81ea\u5df1\u914d\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u6bd4\u5982\u65f6\u95f4\u7684\u683c\u5f0f\u5316\uff0cnull\u8f93\u51fa\"\"\u7b49\u7b49\n</property>\n\n        </list>\n    </property>\n</bean>\n\n```\n\u6211\u6d4b\u8bd5\u4e86\u4e0b springmvc 3.2  fastjson1.1.34 \u6728\u6709\u95ee\u9898\uff0c\u5982\u679c\u65b9\u4fbf\u53ef\u4ee5\u5199\u4e2a\u6d4b\u8bd5\u53d1\u6211 \u6211\u5e2e\u4f60\u770b\u4e0b\n. ",
    "zhaohaolin": "\u8bd5\u8fc7\u4e86\uff0c\u5982\u679c\u91c7\u7528mappingJacksonHttpMessageConverter\u662f\u6ca1\u95ee\u9898\u7684\n\n\n\n\n\n\n\n<bean id=\"mappingJacksonHttpMessageConverter\"\n    class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>text/html;charset=UTF-8</value>\n        </list>\n    </property>\n</bean>\n. ",
    "biezhi": "\u540c\u9047\u5230\u8be5\u95ee\u9898\uff0c\u5728springmvc 4.3\u7248\u672c\u4e2d\uff0c\u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff1a\nxml\n<mvc:annotation-driven>\n    <mvc:message-converters register-defaults=\"true\">\n        <bean class=\"com.bbs.converter.CustomerFastJsonHttpMessageConverter\">\n            <property name=\"supportedMediaTypes\">\n                <list>\n                    <value>application/json;charset=UTF-8</value>\n                    <value>text/html;charset=UTF-8</value>\n                    <value>text/xml;charset=UTF-8</value>\n                    <value>text/plain;charset=UTF-8</value>\n                </list>\n            </property>\n        </bean>\n    </mvc:message-converters>\n</mvc:annotation-driven>\n\u6587\u7ae0\u94fe\u63a5\n. ",
    "kingbo401": "\u66f4\u65b0\u52301.1.35\u6709\u6bb5\u65f6\u95f4\u6ca1\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\n. fastjson\u662f\u4e0d\u662f\u4e0d\u652f\u6301\u5185\u90e8\u7c7b\uff0c\u628a\u8fd9\u51e0\u4e2a\u7c7b\u79fb\u5230\u5916\u90e8\u5c31\u6ca1\u95ee\u9898\u4e86\uff1f\n. ",
    "hizhengfu": "@youxiachai \u8c22\u8c22\n. ",
    "ghost": "mark.\n. \u6ce8\u89e3\u8fd8\u662f\u9759\u6001\u7684\uff0c\u6709\u65f6\u5019\u771f\u7684\u9700\u8981\u6839\u636e\u4e0d\u540c\u903b\u8f91\u6d41\u7a0b\u8fc7\u6ee4\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u6211\u4e13\u95e8\u5199\u4e86Responses\u5de5\u5177\u7c7b\uff0c\u4f7f\u7528Responses\u7684\u9759\u6001\u65b9\u6cd5\u5373\u53ef\u5bf9\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u8fdb\u884c\u8fc7\u6ee4\u6216\u8005\u7ffb\u8bd1\uff0c\u4ee3\u7801\u53c2\u8003\u5982\u4e0b\u3002\n\u7528\u6cd5\u4e00\u3001\u52a8\u6001\u8fc7\u6ee4\u5b57\u6bb5\njava\n        @RequiresPermissions(\"admin:product:products:index\")\n    @RequiresPermissionsComment(\"\u7cfb\u7edf\u7ba1\u7406\u4ea7\u54c1\u53d1\u5e03\u9996\u9875\")\n    @RequestMapping(\"categorys.do\")\n    @ResponseBody\n    public List<XProductCategory> categorys(@RequestParam(\"key\") String key,\n            @RequestParam(\"length\") int length) {\n        // \u8fc7\u6ee4\u6389description\u5c5e\u6027\n        Responses.excludes(\"description\");\n        return productCategoryService.findProductCategoryByKeyAndLength(key,\n                length);\n    }\n\u7528\u6cd5\u4e8c\u3001\u6dfb\u52a0\u7ffb\u8bd1\u5b57\u6bb5\njava\n@RequestMapping(\"tableQuery.do\")\n    @ResponseBody\n    public Page<XRegion> tableQuery(XRegion xRegion, Pageable pageable) {\n        // \u5bf9XRegion\u91cd\u7684code\u5b57\u6bb5\u589e\u52a0\u5176\u7ffb\u8bd1\u540e\u7684\u503c\u5c5e\u6027$code\n        Responses.translator(new ResponseTranslator() {\n            public Object translate(Object value, Object master) {\n                try {\n                    return PropertyUtils.getProperty(master, \"name\");\n                } catch (Exception e) {\n                    throw Lang.unchecked(e);\n                }\n            }\n        }, \"code\");\n        return addressService.findXRegionPage(xRegion, pageable);\n    }\nResponses\u5de5\u5177\u7c7b\n``` java\nimport java.util.Map;\nimport java.util.Set;\nimport org.springframework.util.Assert;\nimport com.vssq.framework.Lang;\n/*\n * \u5e94\u7b54\u5668\u5de5\u5177\u7c7b\n * \n * \n /\npublic class Responses {\n/**\n * \u5305\u542b\u5c5e\u6027\n */\nprivate static final ThreadLocal<Set<String>> JSON_INCLUDES = new ThreadLocal<Set<String>>();\n\n/**\n * \u6392\u9664\u5c5e\u6027\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5305\u542b\u5c5e\u6027\uff09\n */\nprivate static final ThreadLocal<Set<String>> JSON_EXCLUDES = new ThreadLocal<Set<String>>();\n/**\n * \u7ffb\u8bd1\u6620\u5c04\n */\nprivate static final ThreadLocal<Map<String, ResponseTranslator>> JSON_TRANSLATORS = new ThreadLocal<Map<String, ResponseTranslator>>();\n\n/**\n * \u83b7\u53d6\u8981\u5305\u542b\u7684\u5c5e\u6027\n * \n * @return\n */\npublic static Set<String> getIncludes() {\n    Set<String> set = JSON_INCLUDES.get();\n    if (set == null) {\n        set = Lang.newSet();\n        JSON_INCLUDES.set(set);\n    }\n    return set;\n}\n\n/**\n * \u5305\u542b\u5c5e\u6027\n * \n * @param names\n */\npublic static void includes(String... names) {\n    getIncludes().addAll(Lang.newSet(names));\n}\n\n/**\n * \u83b7\u53d6\u8981\u6392\u9664\u7684\u5c5e\u6027\n * \n * @return\n */\npublic static Set<String> getExcludes() {\n    Set<String> set = JSON_EXCLUDES.get();\n    if (set == null) {\n        set = Lang.newSet();\n        JSON_EXCLUDES.set(set);\n    }\n    return set;\n}\n\n/**\n * \u6392\u9664\u5c5e\u6027\n * \n * @param names\n */\npublic static void excludes(String... names) {\n    getExcludes().addAll(Lang.newSet(names));\n}\n\n/**\n * \u83b7\u53d6\u8981\u6392\u9664\u7684\u5c5e\u6027\n * \n * @return\n */\npublic static Map<String, ResponseTranslator> getTranslatorMap() {\n    Map<String, ResponseTranslator> map = JSON_TRANSLATORS.get();\n    if (map == null) {\n        map = Lang.newMap();\n        JSON_TRANSLATORS.set(map);\n    }\n    return map;\n}\n\n/**\n * \u8bbe\u7f6e\u7ffb\u8bd1\u5668\n * \n * @param name\n * @param translator\n */\npublic static void translator(ResponseTranslator translator,\n        String... names) {\n    Assert.notNull(names, \"The names parameter should not be null\");\n    for (String name : names) {\n        getTranslatorMap().put(name, translator);\n    }\n}\n\npublic static void clear() {\n    JSON_INCLUDES.remove();\n    JSON_EXCLUDES.remove();\n    JSON_TRANSLATORS.remove();\n}\n\n}\n```\nResponseTranslator\u7ffb\u8bd1\u63a5\u53e3\n``` java\n/\n * \u54cd\u5e94\u5185\u5bb9\u7ffb\u8bd1\u63a5\u53e3\n * \n * \n * @param \n * @param \n */\npublic interface ResponseTranslator {\n    /\n     * \u7ffb\u8bd1\u65b9\u6cd5\uff0c\u4ecevalue\u503c\u7ffb\u8bd1\u4e3a\u5176\u5b83\u503c\n     * \n     * @param value\n     *            value\u503c\n     * @param master\n     *            \u4e3b\u5bf9\u8c61\n     * @return \u7ffb\u8bd1\u540e\u7684\u5bf9\u8c61\n     */\n    public Object translate(Object value, Object master);\n}\n```\n\u6d88\u606f\u5e8f\u5217\u5316\n``` java\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.lang.reflect.Type;\nimport java.sql.Time;\nimport java.sql.Timestamp;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.Arrays;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.Map;\nimport javax.servlet.http.HttpServletRequest;\nimport org.springframework.http.HttpOutputMessage;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.HttpMessageNotWritableException;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\nimport org.springframework.web.servlet.ModelAndView;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.serializer.AfterFilter;\nimport com.alibaba.fastjson.serializer.JSONSerializer;\nimport com.alibaba.fastjson.serializer.ObjectSerializer;\nimport com.alibaba.fastjson.serializer.SerializeConfig;\nimport com.alibaba.fastjson.serializer.SerializeWriter;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\nimport com.alibaba.fastjson.serializer.SimplePropertyPreFilter;\nimport com.alibaba.fastjson.serializer.ValueFilter;\nimport com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;\nimport com.alibaba.fastjson.util.IOUtils;\nimport com.vssq.framework.Lang;\nimport com.vssq.framework.web.response.ResponseTranslator;\nimport com.vssq.framework.web.response.Responses;\n/*\n * \u4e13\u7528\u7684Vssq Spring MVC Json\u6d88\u606f\u8f6c\u6362\u5668\uff0c\u7ee7\u627f\u81eaFastJsonHttpMessageConverter\n * \n * \n /\npublic class VssqJsonHttpMessageConverter extends FastJsonHttpMessageConverter {\nstatic final SerializeConfig SERIALIZE_CONFIG = new SerializeConfig();\n\nstatic {\n    ObjectSerializer dateSerializer = new ObjectSerializer() {\n        public void write(JSONSerializer serializer, Object object,\n                Object fieldName, Type fieldType) throws IOException {\n            SerializeWriter out = serializer.getWriter();\n\n            if (object == null) {\n                out.writeNull();\n                return;\n            }\n\n            if (out.isEnabled(SerializerFeature.WriteClassName)) {\n                if (object.getClass() != fieldType) {\n                    if (object.getClass() == java.util.Date.class) {\n                        out.write(\"new Date(\");\n                        out.writeLongAndChar(((Date) object).getTime(), ')');\n                    } else {\n                        out.write('{');\n                        out.writeFieldName(JSON.DEFAULT_TYPE_KEY);\n                        serializer.write(object.getClass().getName());\n                        out.writeFieldValue(',', \"val\",\n                                ((Date) object).getTime());\n                        out.write('}');\n                    }\n                    return;\n                }\n            }\n\n            Date date = (Date) object;\n\n            if (out.isEnabled(SerializerFeature.WriteDateUseDateFormat)) {\n                DateFormat format = serializer.getDateFormat();\n                if (format == null) {\n                    format = new SimpleDateFormat(JSON.DEFFAULT_DATE_FORMAT);\n                }\n                String text = format.format(date);\n                out.writeString(text);\n                return;\n            }\n\n            long time = date.getTime();\n            if (serializer\n                    .isEnabled(SerializerFeature.UseISO8601DateFormat)) {\n                if (serializer.isEnabled(SerializerFeature.UseSingleQuotes)) {\n                    out.append('\\'');\n                } else {\n                    out.append('\\\"');\n                }\n\n                Calendar calendar = Calendar.getInstance();\n                calendar.setTimeInMillis(time);\n\n                int year = calendar.get(Calendar.YEAR);\n                int month = calendar.get(Calendar.MONTH) + 1;\n                int day = calendar.get(Calendar.DAY_OF_MONTH);\n                int hour = calendar.get(Calendar.HOUR_OF_DAY);\n                int minute = calendar.get(Calendar.MINUTE);\n                int second = calendar.get(Calendar.SECOND);\n                int millis = calendar.get(Calendar.MILLISECOND);\n\n                char[] buf;\n                if (millis != 0) {\n                    buf = \"0000-00-00T00:00:00.000\".toCharArray();\n                    IOUtils.getChars(millis, 23, buf);\n                    IOUtils.getChars(second, 19, buf);\n                    IOUtils.getChars(minute, 16, buf);\n                    IOUtils.getChars(hour, 13, buf);\n                    IOUtils.getChars(day, 10, buf);\n                    IOUtils.getChars(month, 7, buf);\n                    IOUtils.getChars(year, 4, buf);\n\n                } else {\n                    if (second == 0 && minute == 0 && hour == 0) {\n                        buf = \"0000-00-00\".toCharArray();\n                        IOUtils.getChars(day, 10, buf);\n                        IOUtils.getChars(month, 7, buf);\n                        IOUtils.getChars(year, 4, buf);\n                    } else {\n                        buf = \"0000-00-00T00:00:00\".toCharArray();\n                        IOUtils.getChars(second, 19, buf);\n                        IOUtils.getChars(minute, 16, buf);\n                        IOUtils.getChars(hour, 13, buf);\n                        IOUtils.getChars(day, 10, buf);\n                        IOUtils.getChars(month, 7, buf);\n                        IOUtils.getChars(year, 4, buf);\n                    }\n                }\n\n                out.write(buf);\n\n                if (serializer.isEnabled(SerializerFeature.UseSingleQuotes)) {\n                    out.append('\\'');\n                } else {\n                    out.append('\\\"');\n                }\n            } else {\n                out.write(\"new Date(\");\n                out.writeLong(time);\n                out.write(')');\n            }\n        }\n    };\n    SERIALIZE_CONFIG.put(Date.class, dateSerializer);\n    SERIALIZE_CONFIG.put(Timestamp.class, dateSerializer);\n    SERIALIZE_CONFIG.put(Time.class, dateSerializer);\n    SERIALIZE_CONFIG.put(java.sql.Date.class, dateSerializer);\n}\n\npublic VssqJsonHttpMessageConverter() {\n    super();\n    setSupportedMediaTypes(Arrays.asList(new MediaType(\"application\",\n            \"json\", UTF8), new MediaType(\"application\", \"*+json\", UTF8),\n            new MediaType(\"application\", \"jsonp\", UTF8), new MediaType(\n                    \"application\", \"*+jsonp\", UTF8)));\n}\n\nprotected boolean supports(Class<?> clazz) {\n    if (clazz.equals(ModelAndView.class)) {\n        return false;\n    }\n    return true;\n}\n\nprotected void writeInternal(Object obj, HttpOutputMessage outputMessage)\n        throws IOException, HttpMessageNotWritableException {\n    HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder\n            .getRequestAttributes()).getRequest();\n    OutputStream out = outputMessage.getBody();\n    byte[] bytes = toJSONString(obj).toString().getBytes(getCharset());\n    out.write(bytes);\n    out.flush();\n    out.close();\n}\n\nString toJSONString(Object object) {\n    SerializeWriter out = new SerializeWriter();\n    try {\n        JSONSerializer serializer = new JSONSerializer(out,\n                SERIALIZE_CONFIG);\n        SerializerFeature[] features = new SerializerFeature[] { SerializerFeature.BrowserCompatible };\n        for (SerializerFeature feature : features) {\n            serializer.config(feature, true);\n        }\n        SimplePropertyPreFilter simplePropertyPreFilter = new SimplePropertyPreFilter();\n        simplePropertyPreFilter.getIncludes().addAll(\n                Responses.getIncludes());\n        simplePropertyPreFilter.getExcludes().addAll(\n                Responses.getExcludes());\n        serializer.getPropertyPreFilters().add(simplePropertyPreFilter);\n        final ThreadLocal<Map<String, Object>> transMapLocal = new ThreadLocal<Map<String, Object>>();\n        serializer.getValueFilters().add(new ValueFilter() {\n            public Object process(Object object, String name, Object value) {\n                ResponseTranslator responseTranslator = Responses\n                        .getTranslatorMap().get(name);\n                if (responseTranslator != null) {\n                    Object transValue = responseTranslator.translate(value,\n                            object);\n                    Map<String, Object> transMap = transMapLocal.get();\n                    if (transMap == null) {\n                        transMap = Lang.newMap();\n                        transMapLocal.set(transMap);\n                    }\n                    transMap.put(name, transValue);\n                }\n                return value;\n            }\n        });\n        serializer.getAfterFilters().add(new AfterFilter() {\n            public void writeAfter(Object object) {\n                Map<String, Object> transMap = transMapLocal.get();\n                if (transMap == null) {\n                    return;\n                }\n                for (String key : transMap.keySet()) {\n                    Object tranValue = transMap.get(key);\n                    if (tranValue != null) {\n                        writeKeyValue(\"$\".concat(key), tranValue);\n                    }\n                }\n                transMapLocal.remove();\n            }\n        });\n        serializer.write(object);\n        return out.toString();\n    } finally {\n        out.close();\n        Responses.clear();\n    }\n}\n\n}\n```\n. \u6700\u65b0\u7248\u672c\u8c8c\u4f3c\u6ca1\u95ee\u9898\u4e86\uff0c\u8bd5\u8bd538\u6216\u800539\u7248\u672c\u3002\n2014-07-28 15:09 GMT+08:00 Yako notifications@github.com:\n\n\u4f60\u8bf4\u62a5\u9519\u7684\u662f\u8fd9\u4e2a\u573a\u666f\u5417\uff1f\u4e0b\u9762\u7684\u6d4b\u8bd5\u662f\u6ca1\u6709\u95ee\u9898\u7684\npublic void test_1() throws Exception {\nVO v = new VO();\nv.setC(String.class);\n```\nString json = JSON.toJSONString(v);\nSystem.out.println(json);\nVO v1 = JSON.parseObject(json, VO.class);\nSystem.out.println(v1.getC());\n```\n}\npublic static class VO {\n```\nprivate Class c;\npublic Class getC() {\n    return c;\n}\npublic void setC(Class c) {\n    this.c = c;\n}\n```\n}\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/195#issuecomment-50306396.\n. \u8bf7\u95ee\u6211\u8981\u600e\u4e48\u6837\u6253\u5305\u5462\uff1f\n\n\u8c22\u8c22\uff01\n. \u5728\u7814\u7a76fastjson\u7684\u6e90\u7801\uff1f\n. \u6bd4\u5982\u8bf4\uff0c\u6211\u9996\u5148\u9700\u8981\u6240\u6709\u7684\u65e5\u671f\u7c7b\u578b\uff08\u4e0d\u53ea\u662fjava.util.Date\uff0c\u8fd8\u5305\u62ec\u5b83\u7684\u6240\u6709\u5b50\u7c7b\u578b\u53ca\u65f6\u95f4\u6233\u7c7b\u578b\uff09\u7684\u5bf9\u8c61\u5168\u90e8\u53d8\u6210new Date(\u6570\u5b57)\u8fd9\u6837\u7684\u683c\u5f0f\u5316\u5f62\u5f0f\uff0c\u8fd9\u5c31\u9700\u8981\u5b9a\u5236SerializeConfig\u7684ObjectSerializer\uff0c\u540c\u65f6\u5462\uff0c\u6211\u53c8\u9700\u8981\u6839\u636e\u4e0d\u540c\u4e1a\u52a1\u8fc7\u6ee4\u6389\u76f8\u5173\u5c5e\u6027\u7684\u5e8f\u5217\u5316\uff08\u4e0d\u80fd\u56fa\u5b9a\u7684\u4f7f\u7528\u6ce8\u89e3\u6765\u8fc7\u6ee4\uff09\uff0c\u8fd9\u5c31\u9700\u8981\u5b9a\u5236SimplePropertyPreFilter\uff0c\u800c\u76ee\u524d\u7684JSON API\u91cc\u6ca1\u6709\u53ef\u540c\u65f6\u4f20\u5165SerializeConfig\u548cSerializeFilter\u7684\u65b9\u6cd5\uff0c\u4e0d\u5f97\u4e0d\u81ea\u5df1\u5199JSONSerializer\u5b9e\u73b0\uff0c\u975e\u5e38\u4e0d\u4fbf\u4e14\u5bb9\u6613\u51fa\u9519\u3002\n. \u52a0SerializerFeature.WriteClassName\u4e5f\u6ca1\u7528\n. \u9879\u76ee\u662f\u65e0\u4eba\u7ef4\u62a4\u4e86\u4e48\uff0c\u8fd9\u4e48\u591aBUG\uff0c\u65e2\u4e0d\u56de\u590d\uff0c\u4e5f\u4e0d\u66f4\u65b0\n. \u4ec0\u4e48\u7248\u672c\u7684fastjson\uff1f\n. \u6700\u65b0\u76841.2.6\u4f9d\u7136\u4e0d\u884c\u554a\n. \u5c31\u662f1.8\u554a\n. \u6211\u7684\u662fMac OS\u64cd\u4f5c\u7cfb\u7edf\n. \u8fd9\u662fbug\u95ee\u9898\u8fd8\u662f\u6211\u64cd\u4f5c\u4e0d\u5bf9\uff0c\u5e0c\u671b\u5b98\u65b9\u6765\u4e2a\u56de\u590d\u3002\n. \u8fd9\u662fBug\u5417\uff0c\u4eca\u5929\u9996\u6b21\u4f7f\u7528fastJson,\u9047\u5230\u8be5\u95ee\u9898\uff0c\u548c\u697c\u4e3b\u4e00\u6837break\u51fa\u73b0\u7684\u95ee\u9898\uff0c\n\u65e2\u7136break\u5904\u5df2\u6ee1\u8db3\u9700\u6c42\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u5f97\u7ee7\u7eed\u8017cpu\u8dd1\u4e0b\u53bb\u5462?\n\u6211\u4e4b\u6240\u4ee5\u4e0dreturn\u662f\u56e0\u4e3a\u8df3\u51fawhile\u5faa\u73af\u540e\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u903b\u8f91\u8fdb\u884c\uff0c\u603b\u4e0d\u80fd\u5168\u653e\u5728 break \u5904\u518d\u76f4\u63a5retrun \u5427...\n\u80fd\u7ed9\u8bf4\u660e\u4e00\u4e0b\u6216\u63d0\u4f9b\u4e0b\u89e3\u51b3break\u95ee\u9898\u7684\u65b9\u6848\u5417\uff0c\u4e07\u5206\u611f\u8c22~ \n@wenshao . \u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u8981\u67e5\u7684\u8bdd:\\B\u3001\\T\u3001\\N\u3001\\V\u3001\\R\u3001\\X\u90fd\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898. \u8d5e\u540c\uff0cJSONObject \u5e94\u8be5\u652f\u6301\u8fd9\u79cd\u64cd\u4f5c,\u56e0\u4e3a\u5f00\u53d1\u4eba\u5458\u89c9\u5f97\u8fd9\u6837\u5199\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u53ef\u662f\u7ed3\u679c\u5374\u4e0d\u662f\u8fd9\u6837\u3002. NameFilter\u548cValueFilter\u4e24\u4e2afilter\uff0c\u5173\u952e\u9700\u8981@JSONType()\u6ce8\u89e3\u5230\u9700\u8981\u7528\u5230\u7684\u5bf9\u8c61\u4e0a\u9762:\u5982:\n@JSONType()\nstatic class User{}. ",
    "smallnest": "\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u9879\u76ee\u7528\u6765\u5728JAX-RS \u4e2d\u4f7f\u7528fastjson. \u6b22\u8fce\u63d0\u5efa\u8bae\u548cbug:\nhttps://github.com/smallnest/fastjson-jaxrs-json-provider\n. Sure!\n. \u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u9879\u76ee\u7528\u6765\u5728JAX-RS \u4e2d\u4f7f\u7528fastjson. \u6b22\u8fce\u63d0\u5efa\u8bae\u548cbug:\nhttps://github.com/smallnest/fastjson-jaxrs-json-provider\n. \u6211\u76f8\u4fe1\u8fd9\u662f\u6211\u5728\u7c7bFastJsonProvider\u4e2d\u589e\u52a0\u4e0b\u9762\u7684field\u5bfc\u81f4\u7684\u3002\njava\n@javax.ws.rs.core.Context\njavax.ws.rs.core.UriInfo uriInfo;\n\u5bf9\u4e8eclient\u6765\u8bf4\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u4e0d\u4f1a\u88ab\u8bbe\u7f6e\uff0c\u4f46\u662fJersey\u6709\u70b9\u95ee\u9898\uff0c\u8fd8\u662f\u6ce8\u5165\u8fd9\u4e2afield\uff0c\u5bfc\u81f4\u5931\u8d25\u3002\n\u6211\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\u79fb\u9664\u8fd9\u4e2afield,\u8fd9\u4e2afield\u4e3b\u8981\u662f\u4e3a\u4e86pretty\u800c\u8bbe\u7f6e\u7684\u3002\n. 0.2.0\nhttps://github.com/smallnest/fastjson-jaxrs-json-provider/issues/1\n. 0.3.2\u53d1\u5e03\u4e2d\uff0c\u7b49\u4e00\u4f1a\u4f1a\u81ea\u52a8\u540c\u6b65\u5230maven\u4ed3\u5e93\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\u3002\n. \u6211\u89c9\u5f97\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u7ec4\u4ef6\u66f4\u597d\u4e00\u70b9\uff0c\u7248\u672c\u7ef4\u62a4\u548c\u65b0\u589e\u52a0\u529f\u80fd\u66f4\u65b9\u4fbf\u4e00\u4e9b\u3002\u4e00\u4e9b\u57fa\u4e8efastjson\u7684\u7ec4\u4ef6\u53ef\u4ee5\u6784\u6210\u4e00\u4e2afastjson\u7684\u751f\u6001\u5708\uff0cfastjson\u4fdd\u6301\u81ea\u5df1\u7684\u6838\u5fc3\u529f\u80fd\u66f4\u597d\u3002\n. check out https://github.com/smallnest/fastjson-jaxrs-json-provider\nyou can introduce it in your pom.xml:\nxml\n<dependency>\n    <groupId>com.colobu</groupId>\n    <artifactId>fastjson-jaxrs-json-provider</artifactId>\n    <version>0.3.2</version>\n<dependency>\n. ",
    "bankly": "@smallnest \u80fd\u5b8c\u6574\u7684\u4f8b\u5b50\u5417\uff0cAndroid\u600e\u4e48\u5f15\u7528\u5462\n. ",
    "uin57": "\u8fd9\u4e2aBUG\u633a\u597d\u6539...\u65e0\u5948\u8bbf\u95eemaven\u8d85\u7ea7\u6162..build\u4e0d\u4e86...\nhttps://github.com/uin57/fastjson/commit/afcf8d1220d3f117c8c031970ebeb0aad8e16157\n. ",
    "irwinai": "WriteNonStringKeyAsString \u8fd9\u4e2a\u5c5e\u6027\u5177\u4f53\u610f\u601d\u662f\u5e72\u561b\uff1f\u6211\u4e5f\u6ca1\u627e\u5230\u6587\u6863\u91cc\u6709\u4ecb\u7ecd\u8fd9\u4e2a\u5c5e\u6027\u7684\u7528\u6cd5\n. ",
    "dz-mumu": "and @DeserializerFeatures should be supported also.\n. ",
    "agapple": "\u5fd8\u8bb0\u8bf4\u4e86\uff0c\u6d4b\u8bd5\u7248\u672c\u4e3a1.1.36 .\n\u6d4b\u8bd5\u6570\u636e\uff1ahttps://f.cloud.github.com/assets/834743/1047439/bd698b70-106a-11e3-80f8-e6dc81792749.jpg\n. ",
    "cevin": "fastjson\u4e5f\u53ea\u662f\u4e00\u4e2a\u89e3\u6790\u548c\u8f93\u51fajson\u7684\u5de5\u5177\u3002\u672c\u8eab\u8fd8\u662fjson\u5427= =\u600e\u4e48\u53ebfastjson\u6269\u5c55\u4e00\u4e0b\u3002\u610f\u601d\u662ffastjson\u5df2\u7ecf\u4e0d\u662fjson\u662f\u53e6\u4e00\u79cd\u81ea\u521b\u7684\u6570\u636e\u683c\u5f0f\u4e86\uff1f\n. ",
    "wonder365": "1.1.42 \u4e0d\u652f\u6301 Feature.AllowComment\uff0c\u629b\u51fa\u5982\u4e0b\u5f02\u5e38\uff1a\ncom.alibaba.fastjson.JSONException: illegal identifier : /\n    at com.alibaba.fastjson.parser.JSONLexerBase.scanSymbolUnQuoted(JSONLexerBase.java:843)\n. \u56e0\u4e3aTestObject\u662f\u6cdb\u578b\u7684\uff0c\u56e0\u6b64\u5e94\u8be5\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u8bed\u6cd5\u8fdb\u884c\u5904\u7406\n    Type type = new TypeReference() {}.getType();\n    TestObject to1 = TypeUtils.cast(to, type, ParserConfig.getGlobalInstance());\n. \u6216\u8005\u4f7f\u7528\uff1a\nType type = new TypeReference() {}.getType();\nTestObject to1 = TypeUtils.parseObject(to, type);\n. \u6211\u5728\u505a\u4e00\u4e2ajsonrpc\u7684\u5b9e\u73b0\uff0c\u91cc\u8fb9\u7b2c\u4e00\u6b65\u5148\u6309request\u89e3\u6790\u51faid\u3001method\u3001params\uff08\u6b64\u65f6params\u7684\u5177\u4f53\u7c7b\u578b\u8fd8\u4e0d\u77e5\u9053\uff09\uff0c\u7b2c\u4e8c\u6b65\u8981\u5c06params\u8f6c\u6362\u4e3aMethod\u7684\u53c2\u6570\u7c7b\u578b\u3002\n\u7531\u4e8ecast\u4e0d\u8fc7\u53bb\uff0c\u73b0\u5728\u6211\u7528\u4e86\u4e2a\u5f88\u571f\u7684\u529e\u6cd5\uff0c\u5c06params\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5c06json\u5b57\u7b26\u4e32\u5728\u8f6c\u6362\u4e3aMethod\u7684\u53c2\u6570\u7c7b\u578b\u3002\n\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u5176\u5b83\u597d\u7684\u5efa\u8bae\u3002\n. JSON\u89c4\u8303\u91cc\u89c4\u5b9a\u4e86\u5fc5\u987b\u4e3atrue\u548cfalse\n. ",
    "kfhanjie": "fastjson\u76841.2.7\u7248\u672c\u4e5f\u6ca1\u5904\u7406\u8fd9\u4e2a\u53c2\u6570\u554a\u3002 Feature.AllowComment \u3002\u5e0c\u671b\u652f\u6301\u554a \u6211\u4eec\u90fd\u662f\u7528json\u6765\u914d\u7f6e\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982\u679c\u6ca1\u6ce8\u91ca \u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u5f88\u96be\u7406\u89e3\u7684\uff01\n. next() \u65b9\u6cd5\u53ef\u4ee5\u6539\u6210\u975eabstract\u4e86\u3002 \u6211\u63d0\u4ea4\u7684\u5b50\u7c7b\u7684\u5b9e\u73b0\u73b0\u5728\u662f\u4e00\u6837\u7684\u4e86 \u5475\u5475\n. \u611f\u89c9\u5728\u89e3\u6790json\u524d \u8fc7\u6ee4\u6389\u6ce8\u91ca\u66f4\u597d\u70b9\uff0c\u6bd5\u7adf\u5f88\u5c11\u6709case \u9700\u8981\u6ce8\u91ca\uff0c\u89e3\u6790\u8fc7\u7a0b\u4e2d\u5224\u65ad\u5f71\u54cd\u5927\u591a\u6570\u573a\u666f\u7684\u6027\u80fd\u3002\n. ",
    "huangzhtao": "\u6211\u4e5f\u53d1\u73b0\u540c\u6837\u7684\u95ee\u9898\n. ",
    "hball": "\u5176\u5b9e\u8fd9\u4e2a\u6362\u6210PresentRecord[] \u6570\u7ec4\u65b9\u5f0f\u5c31\u597d\uff0c\u4e00\u6837\u7684\u3002\n. \u6ca1\u6709\n\u4f55\u9756\u6ce2\n\u9ad8\u94c1 notifications@github.com\u7f16\u5199\uff1a\n\n\u8fd9\u4e2a\u5df2\u7ecf\u652f\u6301\u4e86\u5427\uff1f\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n{\"@context\":\"http://schema.org\",\"@type\":\"EmailMessage\",\"description\":\"View this Issue on GitHub\",\"action\":{\"@type\":\"ViewAction\",\"url\":\"https://github.com/alibaba/fastjson/issues/86#issuecomment-57673891\",\"name\":\"View Issue\"}}\n. \u8c22\u8c22\u60a8\u7684\u56de\u590d\uff0c\u516c\u53f8\u505a\u5927\u4e0d\u662f\u6ca1\u6709\u539f\u56e0\u7684\uff0c\u611f\u8c22\u6709\u60a8\u7684\u56de\u590d\u3002\n\n\u4f55\u9756\u6ce2\n\u9ad8\u94c1 notifications@github.com\u7f16\u5199\uff1a\n\nJSON.DEFAULT_GENERATE_FEATURE = SerializerFeature.config(JSON.DEFAULT_GENERATE_FEATURE, SerializerFeature.SkipTransientField, false);\n\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5168\u5c40\u7f3a\u7701\u914d\u7f6e\u5b9e\u73b0\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n{\"@context\":\"http://schema.org\",\"@type\":\"EmailMessage\",\"description\":\"View this Issue on GitHub\",\"action\":{\"@type\":\"ViewAction\",\"url\":\"https://github.com/alibaba/fastjson/issues/86#issuecomment-57904327\",\"name\":\"View Issue\"}}\n. \n",
    "shitoupai": "\u8fd9\u4e5f\u884c\uff1f\n. ",
    "daxiaoming": "\u8fd9\u4e2a\u6211\u4e5f\u9047\u5230\uff0c\u4e3b\u8981\u662f\u5185\u5b58\u7d27\u5f20\u7684\u60c5\u51b5\u4e0b\uff0c\u52a0\u5927xmx\u5c31\u6ca1\u6709\u62a5\u9519\u4e86\u3002\n. \u95ee\u9898\u51fa\u5728 JSONReaderScanner.next() \u65b9\u6cd5\u4e2d\u3002\u5f53\u524d\u7f13\u51b2\u533a\uff088192\u5b57\u8282\uff09\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u7f13\u51b2\u533a\u4e4b\u540e\uff0c\u6ca1\u6709\u91cd\u7f6e np\u3002\n. ",
    "fjay": "\u4e0d\u662f\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u5199\u4e2atestcase\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f55\u5fc5\u731c\u6d4b\n. ",
    "jacking124": "\u4ec1\u5144\u5440\uff0c\u6807\u51c6\u7684json\u662f\u8fd9\u6837\u7684{ \"foo\" : \u201cbar\u201d }\uff01\uff01\n. \u4f60\u4ec0\u4e48\u7684\u662f\u4ec0\u4e48\u7248\u672c\u7684\uff01\n. @wenshao V1.2.8\u6211\u6d4b\u8bd5\u4e5f\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff01\n. ",
    "renfufei": "SpringMVC \u5728 Controller\u65b9\u6cd5\u4e2d\u8fd4\u56deText\u7684\u5f62\u5f0f,\u8bf7\u81ea\u5df1\u62bd\u53d6response\u51fa\u6765\u5904\u7406,\u800c\u4e0d\u9700\u8981JSON\u5de5\u5177\u5728\u4e2d\u95f4\u8f6c\u6362\u4e00\u6b21\u3002\n\u53e6\u5916\uff0c\u5982\u679c\u771f\u6709BUG\uff0c\u8bf7\u9644\u52a0\u4e0a\u4f7f\u7528\u7684lib\u7248\u672c\u3002\n. \u5c06 new HashMap()  \u7684\u5730\u65b9\uff0c\u62bd\u8c61\u4e3a\u5de5\u5382\u65b9\u6cd5, \u7136\u540e\u4f7f\u7528\u5168\u5c40\u914d\u7f6e?. \u5c06 new HashMap()  \u7684\u5730\u65b9\uff0c\u62bd\u8c61\u4e3a\u5de5\u5382\u65b9\u6cd5, \u7136\u540e\u4f7f\u7528\u5168\u5c40\u914d\u7f6e?. ",
    "shotdog": "1.1.37 \u4e0d\u4f1a\u51fa\u73b0  1.2.29 \u5219\u4f1a\u51fa\u73b0\u600e\u4e48\u89e3\u91ca\uff1f . ",
    "hyhsoftware": "\u4f60\u597d\uff0c\u6211\u6700\u8fd1\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u7528JSON.toJSONString\u5e8f\u5217\u5316\u4e00\u4e2aDate\u7c7b\u578b\u7684\u5bf9\u8c61\u4ee5\u540e\uff0c\u7136\u540e\u901a\u8fc7JSON.toJavaObject\u4f1a\u62a5\u9519can not cast to Date\uff0c\u67e5\u770b\u4e86\u6e90\u7801\uff0cTypeUtils\u4e2d\u7684castToDate\u65b9\u6cd5235\u884c\uff0c\u5bf9\u4f20\u5165\u7684\u65f6\u95f4\u6233\u5982\u679c\u5c0f\u4e8e0\uff0c\u4f1a\u629b\u51fa\u6b64\u5f02\u5e38\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u662f1970\u4ee5\u524d\u7684\u65f6\u95f4\uff0c\u90a3\u5c31\u4f1a\u51fa\u73b0\u89e3\u6790\u4e0d\u4e86\u7684\u60c5\u51b5\u4e86\n. @yidongnan  \u6211\u76f4\u63a5\u7ed9\u90a3\u4e2a\u5b57\u6bb5\u52a0\u4e00\u4e2a\u6ce8\u89e3\uff0c\u8ba9spring\u9ed8\u8ba4\u683c\u5f0f\u5316\u5c31\u884c\u4e86\uff0c\u7528JsonSerialize\u6ce8\u89e3\uff0c\u4f60\u8c37\u6b4c\u4e00\u4e0b\n. ",
    "yidongnan": "@hyhsoftware \u8bf7\u95ee\u540e\u9762\u662f\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u7684\n. ",
    "laichendong": "\u8bf7\u9119\u89c6\u6211\u5427\uff0c\u662f\u7531\u4e8e\u6211\u7cfb\u7edf\u7f16\u7801\u8bbe\u7f6e\u4e0d\u5bf9\u5bfc\u81f4\u7684\u3002\u5df2\u7ecf\u89e3\u51b3\u3002\n. ",
    "nicolasdalsass": "I see 3 possible fixes :\n- Either assigning 0 for  specicalFlags_doubleQuotes(i] for all i >= 128\n- Extending replaceChars and adding replacement chars for chars from 128 to 160\n- Forcing the BrowserCompatible like mode, where the char is replaced by its equivalent string.\nDo you have a prefered solution ?\n. ",
    "WolfgangFahl": "I also have the com.alibaba.fastjson.JSONException: create instance error\nwith:Caused by: java.lang.NullPointerException\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:97)\nand your chinese answer seems to be \n\"Embedded class needs to be static, or can not create\" in english - you might want to translate your answer. Also you might want to change the behaviour from a NullPointerException to a message stating \n\"Class is not static ...\". Better even you might want to warn about this when serializing. \n. @sonzhihui thanks for commenting. Your statement is a repetition of @wenshao 's statement of October 3 2014 in chinese. My comment is a change request about improving the Exception in adding excactly this explanation - better even avoiding the issue in the first place by already warning when serializing e.g. with a special check annotation for devlopers.\n. translation: \n1.1.41, pc version\nJSONObject json = JSONObject.parseObject (source);\nsource:\n{\"code\": 0, \"data\": {\"country\": \"China\", \"country_id\": \"CN\", \"area\": \"East China\", \"area_id\": \"300000\", \"region\": \"Jiangsu Province \",\" region_id \":\" 320000 \",\" city \":\" Nanjing \",\" city_id \":\" 320100 \",\" county \":\" \",\" county_id \":\" - 1 \",\" isp \":\" China Unicom \",\" isp_id \":\" 100026 \",\" ip \":\" 58.240.65.50 \"}}\ncom.alibaba.fastjson.JSONException: not close json text, token: error\nat com.alibaba.fastjson.parser.DefaultJSONParser.close (DefaultJSONParser.java:1290)\nMay I ask what is the reason?\nanswer by yakolee:\nPlease use the latest version 1.1.46 or 1.2.2\nanswer by wangmingshuo:\nandroid version 1.1.34 encounter this problem, do not know what the situation, the upgrade can be resolved?\nCurrent issue:\nI get the same error message and can't make any sense of it since there is no pointer to where the error is. I'd love to see that the index in the string and some context is reported. \n. https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98 also needs translation\n. @VictorZeng there are already many reasons we never upgraded to 2.x - it is worse thean 1.x in our opinion and mostly unusable. We badly need a solution and I wonder why the upgrade on the FastJson must break things.. Could there be two versions to be selected e.g. at runtime as a plugin or via dependency injection?. ",
    "songzhihui": "@WolfgangFahl inner Class needs to be static,otherwise it can't be create.\n. ",
    "banxi1988": "sorry,\u5f53\u65f6\u6ca1\u6709\u628a\u8be6\u7ec6\u4fe1\u606f\u8bb0\u5f55\u4e0b\u6765,\u540e\u6765\u6211\u4e5f\u6ca1\u6709\u9047\u5230\u8fc7\u4e86...\n. ",
    "calvinzhan": "map\u91cc\u9762\u5305\u542b\u4e86byte[], char\n. \u5e8f\u5217\u5316\u51fa\u6765\u7684\u7ed3\u679c\u662f\n\"map\":{\"@type\":\"java.util.HashMap\",bytes\":\"IkNoUWVLREk4Ig==\"....} byte[]\u4ee5\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u663e\u793a\u3002\u53cd\u5e8f\u5217\u5316\u65f6\u662f\u600e\u4e48\u77e5\u9053\u662fString, \u8fd8\u662fbyte[]\uff0c\u4ece\u800c\u8c03\u7528ArrayDeserializer?\n. ",
    "p0po": "boolean\u7c7b\u578b\u7684false\u4e0d\u8f93\u51fa\uff1f\u662fbug\u5417\uff1f\u8fd8\u6709\u6570\u503c\u7c7b\u578b\u76840\u4e5f\u662f\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8f93\u51fa\u6709\u70b9\u4e0d\u5408\u7406\u54c8\u3002\n. ",
    "lovepoem": "JsonSerialize.Inclusion. NON_NULL  \u548c JsonSerialize.Inclusion. NON_NULL.ALWAYS\n\u8868\u793a\u5b57\u6bb5\u4e3anull\u6570\u503c\u7684\uff0c\u4e0d\u8fdb\u884cjson\u5e8f\u5217\u5316\u8f93\u51fa\u3002\u76ee\u524d\u5df2\u7ecf\u652f\u6301\u4e86\u5417\uff1f\n. \u6d4b\u8bd5\u4e00\u3001\u7528SerializerFeature.NotWriteDefaultValue\u6ce8\u89e3\n```java\npublic class NotWriteDefaultValueFieldTest3 extends TestCase {\n    public void test_not_write_default() throws Exception {\n        String json = JSON.toJSONString( new Model( 0, null ) );\n        assertEquals( \"{}\", json);\n        assertEquals( \"{\\\"id\\\":1}\", JSON.toJSONString( new Model( 1 ) ) );\n    }\n@JSONType(serialzeFeatures = SerializerFeature.NotWriteDefaultValue)\npublic static class Model {\n    public int id;\n    public String name;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Model(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n\n    }\n\n    public Model(int id) {\n        this.id = id;\n    }\n}\n\n}\n```\n\u8fd9\u4e2a\u5e76\u4e0d\u6ee1\u8db3NON_NULL\u7684\u9700\u6c42\u3002\n\u671f\u5f85{\"id\":0}\n\u5b9e\u9645{}\n\u4ee5\u524d\u7684\u4ee3\u7801\u8fd8\u6709\u4e00\u4e2a\u9700\u6c42\uff1aALWAYS\uff0c\u503c\u662fnull\u7684\u5b57\u6bb5\u5982\u679c\u7c7b\u8bbe\u7f6e\u4e86NON_NULL\uff0c\u5b57\u6bb5\u540d\u8bbe\u7f6e\u4e86ALWAYS\uff0c\u90a3\u8bbe\u7f6e\u7684\u5b57\u6bb5\u8fd8\u662f\u80fd\u5410\u51fa\u5b57\u6bb5\u7684\uff0c\u4e0d\u8fc7\u6570\u503c\u662fnull. \u6d4b\u8bd5\u4e8c\u3001\u5c1d\u8bd5\u4e86\u4e0d\u52a0\u4efb\u4f55\u6ce8\u89e3\uff0c\u8868\u73b0\u662f\uff1a\u503c\u662fnull\u7684\u5b57\u6bb5\u4e0d\u8f93\u51fa\uff0c\u5176\u5b9e\u6211\u4eec\u7684\u9700\u6c42\u662f\u8981\u5c55\u793a\u7684\n```java\npublic class NotWriteDefaultValueFieldTest3 extends TestCase {\n    public void test_not_write_default() throws Exception {\n        Model model = new Model();\n        model.setId( 13 );\n        model.setName( null );\n        String json = JSON.toJSONString( model );\n        System.out.println( json );\n        assertEquals( \"{}\", json );\n        assertEquals( \"{\\\"id\\\":1}\", JSON.toJSONString( new Model( 1 ,null) ) );\n    }\npublic static class Model {\n    public int id;\n    public String name;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Model(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n\n    }\n\n    public Model() {\n    }\n}\n\n}\n```\n\u671f\u5f85{\"id\":13,\"name\":null}\n\u5b9e\u9645{\"id\":13}\n. \u76ee\u524d\u770b\u4e0d\u6ee1\u8db3,\u6211\u60f3\u8981\u4e00\u4e2a\u6ce8\u89e3\uff0c\u5b9e\u73b0\u5b57\u6bb5\u540d\u8f6c\u6362\u7684\u5b9a\u5236\u65b9\u4fbf\u3002\n\u7c7b\u540d\u8bbe\u7f6e\u4e86\u8f6c\u6362\u7b56\u7565:\n1\u3001\u5982\u679c\u5c5e\u6027\u540d\u5b9a\u5236\u4e86\u8981\u8f6c\u6362\u7684\u540d\u5b57\uff0c\u6309\u7167\u5c5e\u6027\u540d\u4e3a\u51c6\n2\u3001\u5176\u4ed6\u672a\u5b9a\u5236\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u5c06\u6309\u7167\u7c7b\u4e0a\u7684\u6ce8\u89e3\u8f6c\u6362\u7b56\u7565\u4e3a\u51c6\u3002\n\u8d34\u4e00\u4e0bjackson\u7684\u4f7f\u7528\u65b9\u5f0f\u6d4b\u8bd5\u4ee3\u7801\uff1a\n```java\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.PropertyNamingStrategy;\nimport com.fasterxml.jackson.databind.annotation.JsonNaming;\npublic class Test {\n    public static void main(String[] args) throws JsonProcessingException {\n        ObjectMapper mapper = new ObjectMapper();\n        Student student = new Student();\n        student.setStudentName(\"hahah\");\n        student.setStudentAddress(\"123\");\n        String json = mapper.writeValueAsString(student);\n        System.out.println(json);\n    }\n@JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy.class)\nstatic class Student {\n    private String studentName;\n    @JsonProperty(\"studentAddress\")\n    private String studentAddress;\n\n    public String getStudentName() {\n        return studentName;\n    }\n\n    public void setStudentName(String studentName) {\n        this.studentName = studentName;\n    }\n\n    public String getStudentAddress() {\n        return studentAddress;\n    }\n\n    public void setStudentAddress(String studentAddress) {\n        this.studentAddress = studentAddress;\n    }\n}\n\n}\n```\n\u6267\u884c\u7ed3\u679c\u4e3a\uff1a\njson\n{\"student_name\":\"hahah\",\"studentAddress\":\"123\"}\n\u53cd\u4e4b\u4e5f\u6210\u7acb\n. \u592a\u68d2\u5566. \u66f4\u65b0\u4ee3\u7801\u540e\u5df2\u7ecf\u89e3\u51b3\uff0c\u68d2\u68d2\u54d2. ",
    "icanfly": "\u989d\uff0c\uff0c\uff0c\u6211\u4e5f\u8e29\u5230\u8fd9\u5751\u4e86\uff0c\uff0c\u7248\u672c:1.1.41 \uff0c\u670d\u52a1\u5668\u62a5\u9519\uff1a\nCaused by: java.lang.ClassCastException: com.xxx.yyy.zzz cannot be cast to com.xxx.common.dto.pager.PagerData\uff0c\u800c\u6211\u8fd4\u56de\u7684\u5bf9\u8c61\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u7528\u5230com.xxx.common.dto.pager.PagerData\u8fd9\u4e2a\u7c7b\u4fe1\u606f\u3002\u3002\u3002\u3002\u62a5\u9519\u5f97\u6beb\u65e0\u6839\u636e\u3002\u627e\u4e86\u4e00\u5929\u7684\u95ee\u9898\u3002\n\u5e94\u8be5\u65e9\u70b9\u4e0a\u6765\u627eissue\u7684 = =!\n. ",
    "mindwind": "\u5e94\u8be5\u4e0d\u7b97\n. ",
    "DavyLin": "Tell me why?\n. ",
    "ilaipi": "\u6211\u7684\u5e94\u7528\u573a\u666f\uff1a\nSpringMVC + FastjsonView\n\u4e00\u4e2alist\u8bf7\u6c42\uff0c\u5904\u7406\u65b9\u6cd5\u628alist\u653e\u5230model\u4f20\u7ed9ModelAndView:\n```\nList datas = ...;\nMap model = new ...;\nmodel.put(\"data\", datas);\nreturn new ModelAndView(\"fastjsonView\", model);\n```\n\u8fd9\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u5904\u7406\uff0c\u90a3\u8fd4\u56de\u7684json\uff1a\n{\n\"data\":[\n{\n\"text\":\"this is text\",\n\"value\":\"this is value\"\n},...\n]\n}\n\u4f46\u524d\u7aef\u66f4\u5e0c\u671b\uff1a\n[\n{\n\"text\":\"this is text\",\n\"value\":\"this is value\"\n},...\n]\n\u6211\u5f88\u597d\u5947\u4e3a\u4ec0\u4e48\u522b\u4eba\u6ca1\u6709\u6211\u8fd9\u6837\u7684\u8981\u6c42\uff1f\n\u6211\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u662f\u901a\u7528\u7684\u5417\uff1f\n2014-10-04 1:57 GMT+08:00 \u9ad8\u94c1 notifications@github.com:\n\n\u5148\u5408\u5e76\u4e86\uff0c\u4e0d\u4e86\u89e3\u60c5\u51b5\uff0c\u5e0c\u671b\u80fd\u4f60\u662f\u5bf9\u7684\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/pull/114#issuecomment-57830918.\n. \n",
    "Creky": "\u7248\u672c\uff1a1.1.37\n. ",
    "wxweven": "\u6709\u5faa\u73af\u65f6\uff0c\u5982\u679c\u4f7f\u7528 SerializerFeature.DisableCircularReferenceDetect\uff0c\u4f1a\u62a5\u9519java.lang.StackOverflowError\uff0c\u8fd9\u4e2a\u600e\u4e48\u89e3\u51b3\uff1f\uff1f\n. ",
    "spance": "SerializerFeature.DisableCircularReferenceDetect\u662f\u5173\u95ed\u5faa\u73af\u5f15\u7528\uff0c\u5f53\u7136\u5c31\u9020\u6210\u6b7b\u5faa\u73af\u4e86\u3002\n\u8fd9\u4e48\u8bb2\u5427\uff0c\u8fd9\u4e2a\u9009\u9879\u662f\u4e0d\u5e94\u8be5\u6253\u5f00\u7684\uff1a\u5faa\u73af\u5f15\u7528\u68c0\u6d4b\u548c\u5904\u7406\u662f\u5fc5\u987b\u8981\u542f\u7528\u7684\u3002\n. \"null\",\"NULL\"\u5b57\u7b26\u4e32\u600e\u4e48\u80fd\u591f\u8d4b\u7ed9java bean\u7684int,long ?  java\u5f3a\u7c7b\u578b\u7684\u3002\nNULL,null \u5373\u4fbf\u8981\u6620\u5c04\u5230null\u5bf9\u8c61\uff0c\u4e5f\u8981\u770b\u8fd9\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u4e0d\u80fd\u662f\u57fa\u672c\u7c7b\u578b\u3002\n\u4f60\u8fd9\u4e2a\u95ee\u9898\uff0c\u66f4\u591a\u7684\u5e94\u8be5\u4ece\u6e90json\u4e0a\u505areplace\u4e3a\u4e3b\u3002\n. Boolean property\u7684getter \u662fgetProperty()\nboolean property\u7684getter \u662fisProperty()\n\u6240\u4ee5fastjson\u4f1a\u6765\u53cd\u63a8\u51faproperty\u540d\u5b57\uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\u8fd9\u662f\u89c4\u8303\uff0c\u4e0d\u9700\u8981\u8d28\u7591\u548c\u8ba8\u8bba\uff0c\u53ea\u9700\u8981\u8eab\u4f53\u529b\u884c\u5c31\u53ef\u4ee5\u4e86\u3002\n. \u5982\u679cgson\u5982\u4f60\u6240\u8bf4\u5f97\u5230\u7684\u6240\u8c13\u7684\u201c\u6b63\u786e\u201d\u7ed3\u679c\uff0c\u90a3\u66f4\u5e94\u8be5\u653e\u5f03gson\u56e0\u4e3a\u5b83\u5f97\u5230\u4e86\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u7ed3\u679c\u3002\n\u73b0\u5728\u7684\u4ee3\u7801\u4e60\u60ef\u4e2d\uff0c\u5c24\u5176\u56e0\u4e3ajava\u5f3a\u7c7b\u578b\uff0c\u66f4\u4e0d\u9700\u8981\u4e3a\u53d8\u91cf\u589e\u52a0\u524d\u540e\u7f00\u6765\u663e\u5f0f\u7684\u6807\u793a\u7c7b\u578b\u7279\u5f81\u3002\n\u5373\u4fbf\u5728\u4e00\u4e9b\u5f31\u7c7b\u578b\u8bed\u8a00\u4e2d\u7528\u524d\u540e\u7f00\u6765\u6807\u793a\u7c7b\u578b\u65f6\uff0c\u5bf9\u4e8eboolean\u4e00\u822c\u4e5f\u4e0d\u4f1a\u7528is\u4f5c\u4e3a\u524d\u7f00\u3002\n\u91cd\u590d\u4e00\u904d\uff0cfastjson\u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u7b26\u5408\u89c4\u8303\uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\u8865\u5145\uff1a\n``` java\npublic class Test {\nprivate Boolean isTest;  // \u5982\u679c\u786e\u4e3aBoolean \u4e0b\u9762\u662f\u81ea\u52a8\u751f\u6210\u7684\n\npublic Boolean getIsTest() { // \u6b63\u786e\u7684getter\n    return isTest;\n}\n\npublic void setIsTest(Boolean isTest) { // \u6b63\u786e\u7684setter \u6ce8\u610f\u53c2\u6570\n    this.isTest = isTest;\n}\n\n}\n```\n\u5bf9\u4e8eboolean\u7c7b\u578b\uff0c\u5e94\u8be5\u9009\u62e9\u5b9a\u8bed\u8868\u8bed\uff08\u5f62\u5bb9\u8bcd\u3001\u73b0\u5728\u5206\u8bcd\u3001\u8fc7\u53bb\u5206\u8bcd\uff09\u6765\u63cf\u8ff0\u5b9a\u4e49\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4f60\u90a3\u6837\u547d\u540d\u7684\u5c34\u5c2c\u60c5\u51b5\u3002\n. ",
    "greenlaw110": "\u6211\u4eec\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4e5f\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\u540e\u6765\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u524d\u7aef\u505a\u4e00\u4e2aresolver\u6765\u89e3\u6790\u5f15\u7528\uff0c\u8fd9\u4e2a\u5e93\u53d1\u5e03\u5230\u4e86npm\u4e0a\u9762\uff1ahttps://www.npmjs.com/package/fastjson_ref_resolver\u3000\n\u5982\u679c\u6709\u9700\u8981\u7684\u540c\u884c\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\n. \u6211\u7b49\u4e0d\u53ca\u4e86\uff0c\u5c31\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\uff1a\nhttps://github.com/actframework/actframework/blob/master/src/main/java/act/util/FastJsonIterableSerializer.java\n. @wenshao \nYour response doesn't make sense. You put in something that is the direct cause of the unexpected behavior of FastJson, which needs to be fixed:\njava\narray.toString().toCharArray();\nThe code above is crappy and doesn't capture the right intention.\nWhile Jackson's behavior is much more appreciated:\n\nThis issue is NOT a question, it is a bug report about a misleading behavior of FastJson.\n. @wenshao \nThanks for taking this one as a bug, it makes me feel much more confortable with my decision of using FastJson as the built-in JSON library for ActFramework\n. @wenshao \nBeautiful! Do you think there is any room for taking the issue #777 ?\n. How come? Can you please elaborate?\n. They come up with special Float and Double value:\n\n. Just FYI, in my param value resolver (for non-JSON encoded request param binding) I have the logic to check the Infinity:\n\n. @wenshao  The issue with Float has been fixed, but Double still have the same issue\n. Given the following program:\njava\n  public static void foo() throws Exception {\n        String str = String.valueOf(Double.MAX_VALUE);\n        short sh = JSON.parseObject(str, short.class);\n        System.out.println(sh);\n    }\nFastJson will return 0 when the value is out of the scope of short type. Suppose it shall raise an exception in such case.. There is still an issue:\njava\npublic static void main(String[] args) throws Exception {\n    BigDecimal dec = BigDecimal.valueOf(Double.MAX_VALUE);\n    dec = dec.add(dec);\n    String str = dec.toString();\n    double dbl = JSON.parseObject(str, double.class);\n    System.out.println(dbl);\n}\nThe above code print out Infinity instead of raising an exception, something like:\njava\nthrow new JSONException(\"double overflow : \" + val);. Sorry about that, updated va to v I still got issue:\n\n. Interesting, this statement generates true:\njava\nSystem.out.println(Float.MAX_VALUE + 1 == Float.MAX_VALUE);. Okay, now I have this one:\n\n. @wenshao I see what you mean. What I want is to have a uniform way of handling of number overflow. Let's say if you got an int or long value overflow, the parsing process will throw out an exception, but your float and double overflow is silently swallowed by setting the NaN to the target number, which looks fragile. Update\nIt looks like SerializerFeature.WriteNonStringValueAsString works neither. Note, when I won't be able to get fieldType and fieldName information:\n\nAs the caller method passed null for those fields:\n\nIf I go further upper level caller the writeWithFormat I can see there is the format string, but it's not get passed into the next call:\n\n. @kimmking that's all what I mean, I have created the serializer, however I need to access the field context in the serializer, e.g. I need to know if there is a @JSONView annotation with format parameter set to something like \"yyyy_MM_dd hh:mm\", so that I can serialize the DateTime data property:\n\n. @kimmking I said I have the codec for DateTime if you read my issue report carefully:\n\nI know exactly what SerializeConfig.getGlobalInstance() does, and I use it in my app already: https://github.com/actframework/actframework/blob/master/src/main/java/act/util/JsonUtilConfig.java\nMy question is how can I access the field context @JSONField(format=\"yyyy-MM-dd hh:mm\") from within the codec.\n  . @wenshao what do you think about this one?\nNow I have a concrete use case from our real project. \njava\n// the tooth care kit \npublic class Kit {\n    public int id;\n    public String description;\n    ...\n}\njava\n// the order info encapsulate kit and quantity\npublic class OrderInfo {\n    @DbBind @NotNull\n    public Kit kit;\n    public int qty;\n}\njava\n// The request handler\n@PostAction(\"orders\")\npublic void placeKitOrders(List<OrderInfo> orders) {\n    ....\n}\n// the JSON body for order request\njson\n{\n    \"orders\": [\n        {\"kit\": 1, \"qty\": 3}, {\"kit\": 2, \"qty\": 5}\n    ]\n}\nHere one important thing is I need to use the kit id (in the above sample data, 1 and 2) to look up Kit table and fetch the corresponding record to construct a Kit instance and inject into the OrderInfo instance. Thus I need FastJSON to provide the mechanism for me to inject logic sense the annotation DbBind and get the job done.\nAny idea if this could be doable(planned) in FastJSON ?. ",
    "bcqtt": "\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u8be6\u7ec6\u89e3\u51b3\u770b\u8fd9\u91cc\nhttp://blog.csdn.net/bcqtt/article/details/75048833. ",
    "tianxianglan": "\u8fd9\u5e94\u8be5\u662f\u5728\u4e1a\u52a1\u5c42\u9762\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u5427\uff0c\u4e0d\u8fc7\u770b\u770b\u5404\u4f4d\u5927\u4f6c\u7684\u89e3\u51b3\u529e\u6cd5\u8fd8\u662f\u5f88\u53d7\u76ca\u7684. ",
    "airclear": "\u8fd9\u4e2a\u662f\u6d4b\u8bd5\u7528\u7684\u6587\u4ef6 \nhttp://pan.baidu.com/s/1bnelof1\n\u6d4b\u8bd5\u4ee3\u7801\uff1a\n```\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.io.FileUtils;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\nimport com.alibaba.fastjson.JSONObject;\npublic class Example {\n    public static void main(String[] args) throws IOException {\n        String s = FileUtils.readFileToString(new File(\"/tmp/1\"));\n        Document doc = Jsoup.parse(JSONObject.parseObject(s).getString(\"items_html\"));\n    parse(doc);\n\n}\n\nprivate static Object parse(Document doc) {\n\n    Map<String,Map<String,Object>> map = new HashMap<String, Map<String,Object>>();\n\n//      JSONObject map = new JSONObject();\n    Elements lis = doc.select(\"li.js-stream-item\");\n    for (Element element : lis) {\n        try {\n            String tid = element.attr(\"data-item-id\");\n            String content = element.select(\"p.js-tweet-text\").text();\n            String time = Long.valueOf(element.select(\"a.tweet-timestamp span\").attr(\"data-time\")) * 1000 +\"\";\n\n//              Map j = new HashMap();\n                JSONObject j = new JSONObject();\n                j.put(\"id\", tid);\n                j.put(\"content\", content);\n                j.put(\"time\", time);\n                map.put(tid, j);\n            } catch (Exception e) {\n            }\n        }\n    System.out.println(map);\n\n    return map;\n}\n\n}\n```\n\u62a5\u9519\uff1a\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 160\n    at com.alibaba.fastjson.serializer.SerializeWriter.writeStringWithDoubleQuote(SerializeWriter.java:868)\n    at com.alibaba.fastjson.serializer.SerializeWriter.writeStringWithDoubleQuote(SerializeWriter.java:602)\n    at com.alibaba.fastjson.serializer.SerializeWriter.writeString(SerializeWriter.java:1357)\n    at com.alibaba.fastjson.serializer.StringCodec.write(StringCodec.java:49)\n    at com.alibaba.fastjson.serializer.StringCodec.write(StringCodec.java:34)\n    at com.alibaba.fastjson.serializer.MapSerializer.write(MapSerializer.java:135)\n    at com.alibaba.fastjson.serializer.MapSerializer.write(MapSerializer.java:130)\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:369)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:592)\n    at com.alibaba.fastjson.JSON.toString(JSON.java:586)\n    at java.lang.String.valueOf(String.java:2826)\n    at java.io.PrintStream.println(PrintStream.java:771)\n    at me.airclear.crawl.client.domain.twitter.TopicSearch.parse(TopicSearch.java:103)\n    at me.airclear.crawl.client.domain.twitter.TopicSearch.main(TopicSearch.java:130)\n. ",
    "kimmking": "\u786e\u5b9e\u6709\u95ee\u9898\u3002\n. \u80fd\u5426\u53d1\u4e2atestcase\n\u53d1\u81ea\u6211\u7684 iPhone\n\n\u5728 2014\u5e744\u67088\u65e5\uff0c21:54\uff0ckunwang notifications@github.com \u5199\u9053\uff1a\n\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u6c42\u4fee\u590d\u3002\n\u2014\nReply to this email directly or view it on GitHub.\n. \u4e3b\u5e72\u4ee3\u7801\u4e0a\uff0c\u6ca1\u95ee\u9898\u3002\n. post\u5230\u540e\u7aef\u7684json\uff0c\u7edf\u4e00\u5904\u7406\u4e0b\uff0c\u9012\u5f52\u6240\u6709\u5c5e\u6027\uff0c\u4e3aundefined\u7684key\uff0cremove\u6389\u3002\n. fix \u4ee3\u7801\uff1a\nhttps://github.com/alibaba/fastjson/pull/128\n. \u4ec0\u4e48\u610f\u601d\uff1f\n. Alternatively, there are two-character sequence escape\n   representations of some popular characters.  So, for example, a\n   string containing only a single reverse solidus character may be\n   represented more compactly as \"\\\".\n. test code: https://github.com/kimmking/fastjson/commit/79e5def2acb3d496e97ea5ecdc323fcf9a98eec1\n.  #135 \u5728\u5f53\u524d\u7684\u4e3b\u5e72\u4ee3\u7801\u4e0a\u4f9d\u7136\u5b58\u5728\u3002\n.  #135 \u5728\u5f53\u524d\u7684\u4e3b\u5e72\u4ee3\u7801\u4e0a\u4f9d\u7136\u5b58\u5728\u3002\n\u8fd9\u662f\u6d4b\u8bd5\u4ee3\u7801\u3002\n. \u89e3\u6790\u6210map\uff1f\u8fd8\u662fbean\uff1f\n. test code:\n\n```\nimport com.alibaba.fastjson.JSON\nimport com.alibaba.fastjson.annotation.JSONField\nfun main(args: Array) {\nprintln(\"test for DataClass-------\")\nval dt = DataClass(1,2)\n\nval json = JSON.toJSONString(dt)\nprintln(json)\n\nval clz = DataClass::class\nprintln(clz.javaObjectType)\n\nval dt1 = JSON.parseObject(json,clz.javaObjectType)\nprintln(dt1)\n\nprintln(\"test for DataClassSimple-------\")\nval dts = DataClassSimple(1,2)\nval jsons = JSON.toJSONString(dts)\nprintln(jsons)\n\nval clzs = DataClassSimple::class\nprintln(clzs.javaObjectType)\n\nval dt2 = JSON.parseObject(jsons,clzs.javaObjectType)\nprintln(dt2)\n\n\nprintln(\"test for DataClassSimple-------\")\nval dtf = DataClassField(1,2)\nval jsonf = JSON.toJSONString(dtf)\nprintln(jsonf)\n\nval clzf = DataClassField::class\nprintln(clzf.javaObjectType)\n\nval dt3 = JSON.parseObject(jsonf,clzf.javaObjectType)\nprintln(dt3)\n\n}\ndata class DataClass(@JSONField(name=\"aa\")val a : Int, @JSONField(name=\"bb\")val b : Int)\ndata class DataClassField(@field:JSONField(name=\"aaa\")val a : Int, @field:JSONField(name=\"bbb\")val b : Int)\ndata class DataClassSimple(val a : Int, val b : Int)\n```\noutput:\n```\ntest for DataClass-------\n{\"aa\":1,\"bb\":2}\nclass DataClass\nDataClass(a=1, b=2)\ntest for DataClassSimple-------\n{\"a\":1,\"b\":2}\nclass DataClassSimple\nDataClassSimple(a=1, b=2)\ntest for DataClassSimple-------\n{\"aaa\":1,\"bbb\":2}\nclass DataClassField\nDataClassField(a=1, b=2)\n```\nall above look like well.. \u770b\u8d77\u6765\u662f\u7f16\u7801\u95ee\u9898\uff1a\u8981\u4e48\u662fBOM\u5934\uff0c\u8981\u4e48\u662f\u6df7\u5165\u4e86\u975eUNICODE\u663e\u793a\u5b57\u7b26\n\u5efa\u8bae\u628a\u539f\u59cb\u7684\u6570\u636e\uff08\u4e8c\u8fdb\u5236\u683c\u5f0f\u8bfb\u51fa\u6765\uff0c\u5199\u5230\u6587\u4ef6\uff09\u4f20\u4e0a\u6765\u770b\u770b\n@bradyxiao . \u6839\u636ejson\u89c4\u8303\uff0c .\u52a0\u4e0a\u6570\u5b57\uff0c\u4f1a\u88ab\u5f53\u505a\u6570\u7ec4\u4e0b\u6807\uff0c\u6240\u4ee5\u8fd9\u91cc\u5148\u5c1d\u8bd5\u8f6cint\u53d6\u4e0b\u6807\uff0cparseInt\u5bfc\u81f4\u51fa\u9519\u3002\n\u8bd5\u4e86\u4e0b\u7f51\u4e0a\u7684jsonpath\u5de5\u5177\uff0c\u8fd9\u91cc\u6ca1\u6709\u95ee\u9898\u3002http://jsonpath.com/\n\u660e\u5929\u6211\u6765\u6539\u6539\u3002. \u5df2fix\uff0c\u4e5f\u6dfb\u52a0\u4e86testcase\uff1a #1216 . \u53ef\u4ee5close\u6389\u4e86. \u8fd9\u4e24\u4e2a\u8bed\u4e49\u4e0a\u662f\u76f8\u7b49\u7684\uff0c\n\u80fd\u95ee\u4e00\u4e0b\u4f60\u9700\u8981\u4fdd\u5e8f\u6027\u7684\u539f\u56e0\u5417. @wenshao  \u5df2\u89e3\u51b3. \u5bf9\u4e8e\u5927\u91cf\u5b57\u6bb5\u7684POJO\u4e2d\u53d6\u5c11\u91cf\u5b57\u6bb5\u8f93\u51fa\uff0c\u591a\u4e2aPOJO\u7684\u5b57\u6bb5\u62fc\u51fa\u6765\u7684\u5b57\u6bb5\u96c6\u5408\u8f93\u51fa\uff0c\u4fee\u6539\u7c7b\u578b\u6216\u522b\u540d\u7b49\u7b49\u64cd\u4f5c\uff0c\uff0c\uff0c\n\u8fd9\u4e9b\u95ee\u9898\u7684\u6700\u4f73\u5904\u7406\u529e\u6cd5\u662f\uff0c\u65b0\u52a0\u4e00\u4e2aVO\u7c7b\u578b\uff0c\u8fd9\u6837\u65e2\u80fd\u6ee1\u8db3\u8bed\u4e49\u7684\u4e00\u81f4\u6027\uff08VO\u7684\u7ed3\u6784\u4e0eJSOn\u4e00\u81f4\uff09\uff0c\u53c8\u80fd\u5728\u540e\u7eed\u7684\u5176\u4ed6\u53d8\u52a8\u4e2d\u4fdd\u6301\u4fee\u6539\u8fd9\u4e2aVO\u7c7b\u578b\u5373\u53ef\u3002\n@yanquanyu @felayman . \u539f\u6765\u662f\u4f60\uff0c\u660e\u5929\u6211\u770b\u770b\u3002\n. WriteEnumUsingToString feature. \u6069\u6d4e\uff0c\u52a0\u6211\u5fae\u4fe1\uff0c\u540d\u5b57\u5c31\u53ebkimmking\n. bean\u662f\u65e0\u5e8f\u7684. \u6700\u540e\u4e00\u4e2a\u65ad\u8a00\u91cc\u591a\u4e86\u4e00\u4e2aa\u5c5e\u6027. string\u8f6cchar\u7684\u95ee\u9898\uff0c\u52a0\u4e2a\u7279\u6b8a\u5904\u7406\u5373\u53ef. JSON.parseObject(jsonStr).toJavaObject(tb.getClass());\n\u8fd9\u4e00\u53e5\u6539\u6210\nJSON.parseObject(jsonStr,tb.getClass());\n\u5373\u53ef. \u67e5\u4e86\u4e00\u4e0bhistory\uff0c\u53d1\u73b0\u4ece\u6700\u5f00\u59cb\u7684\u7248\u672c\u4e2dTypeUtils\u91ccp730\u5982\u4e0b\u4ee3\u7801\u88ab\u6ce8\u91ca\uff1a\n        if (clazz == char.class || clazz == Character.class) {\n            return (T) castToChar(obj);\n        }\n\u653e\u5f00\u8fd9\u6bb5\u6ce8\u91ca\u5373\u53ef\u3002\n\u5df2PR+testcase\uff1a #1238\n@wenshao \n. @zxw0558  \u53ef\u4ee5close\u4e86. \u6536\u5230 @wuwen5 . data:{}  \u4e0e data ==null \u53ef\u4e0d\u7b49\u4ef7\u3002\n\u53ef\u4ee5\u8bd5\u8bd5\u7528data:[]\uff0cdata:null\n. \nIssue1227.java.txt\ntry this. \u786e\u5b9e\u5b58\u5728\u89e3\u6790\u4e0d\u4e00\u81f4\uff0c\n JSON.parseObject \u53ef\u4ee5\u89e3\u6790\uff0c\u4f46\u662fList\u91cc\u662f\u4e00\u4e2a\u7a7a\u7684JSONObject\uff0c\u90fd\u662f{}\u4e0e[]\u60f9\u7684\u9505\u3002. \u5982\u679c\u662f\u8fd9\u6837\uff0c\u8bf4\u660e\u4f60\u4eec\u540e\u53f0\u5e8f\u5217\u5316\u7684\u5e93\u6709bug\uff0c\n\u5efa\u8bae\u66ff\u6362\u6210fastjson\u4e4b\u7c7b\u7684\uff0c\u5b83\u4e0d\u4f1a\u628a\u4e00\u4e2aarray\u5e8f\u5217\u5316\u6210{}. \u53d1\u73b0\u8fd1\u671f\u5f88\u591a\u95ee\u9898\u90fd\u662f\u4e0d\u89c4\u8303\u7684\u4f7f\u7528bean\u6216json\u89c4\u8303\u5bfc\u81f4\u7684\u3002. \u786e\u5b9e\u5b58\u5728\uff0cJSON.parseObject\u91cc\u5bf9{}\uff0c\u76f4\u63a5\u521d\u59cb\u5316\u5bf9\u8c61\u653e\u5230list\u91cc\u4e86\u3002\nJSON.parseObject+jsonObject.toJavaObject\u5219\u662f\u5148\u628a{}\u8f6c\u6210JSONObject\u5bf9\u8c61\uff0c\u518d\u8f6c\u6362\u5c31\u51fa\u9519\u4e86\u3002. \u5efa\u8bae\u6d88\u9664\u7684\u529e\u6cd5\uff1a\n1\u3001\u9075\u5b88\u89c4\u8303\uff0c{}\u5355\u4e2a\u5bf9\u8c61\u8f6cList\u4e0d\u5141\u8bb8\n2\u3001\u518d\u8ba9\u8fd9\u4e24\u4e2a\u884c\u4e3a\u4e00\u81f4. \u672a\u53d1\u73b0\u6b64\u95ee\u9898. \u6211pr\u4e86\u4e00\u4e2atestcase\uff0c\u6ca1\u53d1\u73b0\u95ee\u9898\u3002\n #1239\n@lufei1344 @wenshao \u4f60\u4eec\u770b\u770b\u662f\u4e0d\u662f\u8fd9\u6837\u7684\u3002\n. case\u8ddfmap\u65e0\u5173\uff0cA\u4e0a\u52a0statis\u5373\u53ef\n. \u4e0d\u63a8\u8350jsonobject\u4e0epojo\u6df7\u7528. \u628a\u51fa\u9519\u65f6\u7684\u6570\u636e\u53d1\u51fa\u6765\uff0c\u5904\u7406\u524d\u7684\u548c\u5904\u7406\u540e\u7684. \u6ca1\u770b\u660e\u767d\u4f60\u5f97\u4ee3\u7801\uff0cmessage\u5728\u4ee3\u7801\u91cc\u662f11\uff0c\u600e\u4e48\u53d8\u6210openid ....\n\u54ea\u91cc\u6709\\. \u8fd8\u662f\u6ca1\u660e\u767d\uff0c\u7279\u6b8a\u7b26\u53f7\u6309\u89c4\u8303\u5fc5\u987b\u8f6c\u4e49. 1\u3001\u4f7f\u7528\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u4ee3\u7801\u53d1\u51fa\u6765\n2\u3001\u6d4b\u8bd5\u6570\u636e\u53d1\u51fa\u6765\uff0c\n\u6700\u597d\u80fd\u7528\u8fd9\u4e24\u4e2a\u505a\u4e2atestcase\uff0c\u8c22\u8c22\n. can you show a testcase\nthx. \u6211\u52a0\u4e86\u4e00\u4e2atestcase\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff0c\u6d4b\u8bd5\u7ed3\u679c\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\nhttps://github.com/kimmking/fastjson/blob/07ac61d8cd72ea40f17391f5bc71c00ec19fb072/src/test/java/com/alibaba/json/bvt/issue_1200/Issue1246.java. \u6211\u731c\u5230\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u4eca\u5929\u6709\u7a7a\u8bd5\u8bd5\u3002. \u6211\u6dfb\u52a0\u4e86\u4e00\u79cd\u60c5\u51b5\u6765\u6d4b\u8bd5\u8fd8\u662f\u6ca1\u6709\u95ee\u9898\uff1a\n\u5c31\u662f\u518d\u5d4c\u5957\u4e00\u5c42Bean\uff0c\u91cc\u9762\u7684\u503c\u5c5e\u6027\u6216\u5b57\u6bb5\u7528\u7236\u7c7b\u578b\uff0c\u7136\u540e\u503c\u7528\u5b50\u7c7b\u578b\u3002\nhttps://github.com/kimmking/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/issue_1200/Issue1246.java. {} [] \"\" \u4e4b\u7c7b\u7684\u6807\u7b7e\u6ca1\u6709\u95ed\u5408\u3002\n. @wenshao \n\u6e29\u5c11\uff0capache camel\u7684\u4eba\u5bf9fastjson\u9879\u76ee\u91cc\u7684\nhttps://github.com/alibaba/dubbo/blob/master/LICENSE\n\u6709\u4e9b\u7591\u95ee\uff0c\n\u4f60\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0a\u9762PR\u7684\u94fe\u63a5\u3002. \u5df2\u7ecf\u5408\u5e76\u5230\u4e3b\u5e72\uff1ahttps://github.com/apache/camel/tree/master/components/camel-fastjson\nclose this issue. close it thx. \u628a\u4f60\u7684\u4ee3\u7801\u8d34\u51fa\u6765\uff0c\u6216\u8005\u505a\u4e00\u4e2atestcase\uff0c\u8c22\u8c22. \u6211\u89c9\u5f97\u5e94\u8be5\u5728\u8c03\u7528fastjson\u7684\u4e0a\u5c42\u505a\u8fd9\u4ef6\u4e8b\uff0c\n\u6bd4\u5982\uff0cspringmvc\u91cc\u7528filter\u6216resolver\u6765\u5904\u7406\u3002. \u6211\u7406\u89e3\u4ed6\u7684\u610f\u601d\u662f\u9ed8\u8ba4\u503c\u662f\u53ef\u4ee5\u8bbe\u7f6e\u7684\uff0c\u4e0d\u77e5\u9053\u4e0d\u662f\u8fd9\u4e2a\u610f\u601d. \u53ef\u4ee5\u8003\u8651\u5728json field\u4e0a\u52a0\u4e2adefaultValue\u7684\u53c2\u6570\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u53d6\u8fd9\u4e2a\u503c\u3002\n\u4e0d\u8fc7\u8fd9\u8ddf\u521d\u59cb\u5316\u65f6\u8bbe\u7f6e\u4e3adefaultValue\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u4e5f\u662f\u53ef\u4ee5\u4ece\u8bbe\u8ba1\u4e0a\u5c31\u907f\u514d\u7684\u3002. \u786e\u5b9e\u5b58\u5728\uff0ctestcase\u5982\u4e0b\uff1a\nhttps://github.com/kimmking/fastjson/commit/42d10a67415dc8b9113cddd57e417cd033fda0ec. \u8fd9\u662f\u4e2a\u597d\u4e60\u60ef\u3002. \u8fd8\u6709\u4e0d\u5e94\u8be5\u76f4\u63a5\u5e8f\u5217\u5316HttpServletRequest\u7c7b\uff0c\u5efa\u8bae\u5c01\u88c5POJO\u6765\u5e8f\u5217\u5316\u3002. \u4ece\u4f60\u63cf\u8ff0\u7684\u60c5\u51b5\u6765\u770b\uff0cbug\u5e94\u8be5\u63d0\u4ea4\u5230jetty\uff1ahttps://github.com/eclipse/jetty.project/issues\n\u53e6\u5916\u4e0d\u77e5\u9053\u4f60\u7528\u7684jetty\u7248\u672c\u662f\u591a\u5c11\uff0c\u6700\u65b0\u7248\u672c\u662f\u5426\u4e5f\u6709\u6b64\u95ee\u9898\u3002. @wenshao  \u5df2\u4fee\u6539\u5e76\u538b\u7f29commit. \u6211\u7ed9\u4f60\u7684\u793a\u4f8b\u662f\u653e\u5230\u5168\u5c40ParserConfig\u7684\uff0c\n\u4f60\u53ef\u4ee5\u6bcf\u6b21\u89e3\u6790\u7684\u65f6\u5019\uff0c\u5728JSON.parseObject\u7684\u53c2\u6570\u91cc\u4f20\u9012\u81ea\u5df1\u7684ParserConfig\uff0c\u4ee5\u8fbe\u5230\u53ea\u63a7\u5236\u90e8\u5206\u62e6\u622a\u7684\u529f\u80fd\u3002\n\u5982\u679cparseObject\u65f6\u6ca1\u6709\u4f20\u9012feature\u548cconfig\uff0c\u4f7f\u7528\u4e00\u4e2a\u9ed8\u8ba4\u7684ParserConfig.global,\u5176\u81ea\u5e26\u5982\u4e0b\u53c2\u6570\uff1a\nstatic {\n        int features = 0;\n        features |= Feature.AutoCloseSource.getMask();\n        features |= Feature.InternFieldNames.getMask();\n        features |= Feature.UseBigDecimal.getMask();\n        features |= Feature.AllowUnQuotedFieldNames.getMask();\n        features |= Feature.AllowSingleQuotes.getMask();\n        features |= Feature.AllowArbitraryCommas.getMask();\n        features |= Feature.SortFeidFastMatch.getMask();\n        features |= Feature.IgnoreNotMatch.getMask();\n        DEFAULT_PARSER_FEATURE = features;\n    }\n\u5176\u4e2dIgnoreNotMatch\u5df2\u7ecf\u5305\u542b\u4e86\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1new\u4e00\u4e2aParserConfig\uff0c\u914d\u7f6e\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u4f20\u9012\u7ed9JSON.parseObject\u65b9\u6cd5\uff0c\u5f53\u7136\u8fd9\u65f6\u5019\u4f60\u4e5f\u53ef\u4ee5new\u4e00\u4e2aNotMatchIntercepter\u7ed9\u81ea\u5b9a\u4e49\u7684ParserConfig\u3002\n. \u4f60\u8fd9\u4e2a\u5927\u5c0f\u5199\u4e0d\u6ce8\u610f\uff0c\u5c31\u7b97\u662f\u6700\u7b80\u5355\u7684\u4ee3\u7801\u4e5f\u4f1aNPE\uff1a\nPoint p = new Point();\np.getUserId();. java\u91cc\u6ca1\u6709C#\u4e2d\u7684int?, pure OOP\u5927\u6cd5\u597d\uff0c\u6bd4\u5982ruby\uff0cscala\u4e4b\u7c7b\u7684\u3002. HashSet\u91cc\u7684\u6570\u636e\uff0c\u80fd\u53d1\u51fa\u6765\u5417. https://github.com/kimmking/fastjson/blob/2bc7b0bf8c9e80d85641351c6aba1015a3687c60/src/test/java/com/alibaba/json/bvt/issue_1200/Issue1274.java\nsee here. \u4e0d\u9700\u8981\u624b\u8bef\u800c\u5df2. JSON\u6700\u4f73\u5b9e\u8df5\uff1a\nhttps://github.com/kimmking/kk/blob/master/technotes/json-best-practice.md. \u8ffd\u4e86\u4e00\u4e0b\u6e90\u7801\uff0c\u89e3\u6790\u7684\u65f6\u5019\u628a\u4e0d\u662f\u6807\u51c6Exception\u4fe1\u606f\u7684key-value\u5355\u72ec\u5b58\u5230\u4e86\u4e00\u4e2aHashMap\u4e86\uff0c\u7136\u540e\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u6ca1\u7528\u4e0a\u3002\u6539\u6539\u5c31\u597d\u3002. \u5bf9\u5e94\u7684\u7c7b\u578b\u5462\uff1f. \u95ee\u9898\u786e\u5b9e\u5b58\u5728\uff0c\u4e0d\u8fc7\u4f60\u53d1\u51fa\u7684\u4ee3\u7801\u6709\u4e00\u53e5\u5199\u9519\u4e86\uff1a\nparser.parse(c2);   \u5e94\u8be5\u4e3a  parser.parseObject(c2);  \n\u5c11\u4e86\u4e00\u4e2a\u5224\u65ad\uff0c\u5df2\u4fee\u590d\u3002\n. \u80fd\u505a\u4e2atestcase\u590d\u73b0\u95ee\u9898\u5417. \u5982\u679c\u7f13\u5b58\u62ff\u4e0d\u5230\u5c31\u4f1a\u76f4\u63a5\u91cd\u65b0new\u4e00\u4e2a\uff0c\u53ea\u662f\u4f1a\u53d8\u6162\u4e00\u70b9\u3002. \u6682\u4e0d\u652f\u6301scala\u7684class/object/caseclass, \u4f60\u53ef\u4ee5\u4f7f\u7528\nhttps://github.com/json4s/json4s\n\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003\uff1ahttps://stackoverflow.com/questions/8054018/what-json-library-to-use-in-scala. this.getDateFormat();  \u53d6\u5230\u7684\u662f\u5168\u5c40dataFormat\u914d\u7f6e\uff0c\n\u8fd9\u91cc\u786e\u5b9e\u6709\u70b9\u95ee\u9898\u3002. \u76ee\u524d\u7684\u8bbe\u8ba1\u662ftoJSONString\u91cc\u7684format\u683c\u5f0f\u4f18\u5148\u4e8eannotation\u4e0a\u7684format\uff1a\nJSON.toJSONStringWithDateFormat(object, \"yyyy\");\n \u6216 toJSONString(Object object, // fastJsonHttpMessageConverter\u7528\u7684\u662f\u8fd9\u4e2a\n                                      SerializeConfig config, // \n                                      SerializeFilter[] filters, // \n                                      String dateFormat, //\n                                      int defaultFeatures, // \n                                      SerializerFeature... features)\n\u770b\u4e86\u4e00\u4e0b\uff0ccom.alibaba.json.bvt.date.DateFieldTest8\u4e2d\u7684test_0\uff0c\u5c31\u662f\u8fd9\u4e48\u8bbe\u8ba1\u7684\u3002\n. \u76ee\u524d\u770b\u6765\uff0c\u4ee5\u4f20\u5165\u53c2\u6570\u4e3a\u51c6\uff0c\u8fd8\u662f\u4ee5annotation\u4e3a\u51c6\uff0c\u90fd\u5b58\u5728\u95ee\u9898\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5168\u5c40\u5f00\u5173\u6765\u5b9e\u73b0\u5207\u6362\u3002. \u5df2\u7ecffixed\uff0c\u6d4b\u8bd5\u7528\u4f8b\u89c1\uff1a\n src\\test\\java\\com\\alibaba\\json\\bvt\\issue_1200\\Issue1285.java. IdentityHashMap\u7684key\u4f7f\u7528\u7684\u662fClass\uff0c\u5982\u679c\u4f7f\u7528ClassName\u5e94\u8be5\u80fd\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\n@wuwen5 . json\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u7684\u6027\u80fd\u76f8\u5bf9\u4e8e\u4e1a\u52a1\u5904\u7406\u8fd8\u662f\u5f88\u5feb\u7684\uff0c\u5b9e\u9645\u5e94\u7528\u91cc\u9700\u8981\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u7684\u5f88\u5c11\u3002\u4e00\u79cd\u7b80\u5355\u7684\u53d8\u901a\u65b9\u5f0f\u662f\u5728json\u751f\u6210\u7684\u5730\u65b9\uff0c\u5148\u53bb\u6389\u81ea\u5df1\u4e0d\u60f3\u8981\u7684\u3002. \u8fd9\u4e2a\u5efa\u8bae\u5f88\u597d\uff0c\u786e\u5b9e\u5f02\u5e38\u6709\u70b9\u6a21\u7cca\u3002. \u6211\u770b\u770b\u3002. \u63d0\u4ea4\u4e86\u4e00\u4e2atestcase\uff0c\u770b\u8d77\u6765\u662f\u6b63\u5e38\u7684\uff0c\n\u80fd\u5426\u505a\u4e00\u4e2a\u53ef\u4ee5\u590d\u73b0\u95ee\u9898\u7684testcase\uff0c\u8c22\u8c22\u3002@ @mestarshine . \u5bf9\u8c61\u91cc\u6709\u5faa\u73af\u5f15\u7528\u5427. \u80fd\u5426\u63d0\u4ea4\u4e00\u4e2a\u6d4b\u8bd5\u4ee3\u7801. \nUnitsSaveResponse<UnitSave>\nUnitsSaveResponse<T>\n\u4f60\u8003\u8651\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u3002. \u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u7531\u4e8e\u6ca1\u6709\u5177\u4f53\u7684\u53c2\u6570\uff0c\u6846\u67b6\u4e0d\u77e5\u9053\u7528\u4ec0\u4e48\u6837\u7684\u53c2\u6570\u53bb\u521d\u59cb\u5316City\u3002. \u9ed8\u8ba4\u503c\u662f\u4ec0\u4e48. \u73af\u5883\u6709\u70b9\u590d\u6742\u3002\u6211\u8bd5\u8bd5\u590d\u73b0\u4e00\u4e0b\u3002\n\u53e6\u5916:\nspringboot+mybatis+shiro\u914d\u7f6e\u6743\u9650\uff0c\u4e0d\u5efa\u8baeuser\u91cc\u7ea7\u8054role\u548cpermission\uff0c\nuser\u662f\u4e1a\u52a1\u7ecf\u5e38\u7528\u5230\u7684model\uff0crole\u548cpermission\u5219\u662f\u53ea\u6709authc\u624d\u7528\uff0c\u9002\u7528\u8303\u56f4\u548c\u9891\u7387\u5dee\u522b\u5f88\u5927\u3002\n. \u6784\u5efa\u4e86\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u6ca1\u53d1\u73b0\u95ee\u9898(roles\u548cpermissions\u90fd\u6ca1\u6709\u51fa\u73b0)\uff0c\u4ee3\u7801\u5728\uff1a\nhttp://git.oschina.net/nicefish/nicefish-backend\n\u5206\u652f\uff1atestMybatis\n\u8bbf\u95ee\uff1ahttp://localhost:8080/\n{\n    \"email\":\"kimmking@163.com\",\n    \"password\":\"398a8c9d73da4c0e7f320952b06decdefcc97586305b0d51b1093ae95d8dc476ca63cc22ce64bbc344ad55b52d035cba5f3f2c21801afd561412f665bbcb5c45\",\n    \"userName\":\"kimmking\"\n}\n. can you submit some codes for reproducing\n this error,thx. jsonArray is. jsonArray\u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff0cjsonArray.getJSONObject(i)\u662f\u4e0d\u662f\u5199\u9519\u4e86\uff1f. \u6000\u7591\u4f60\u6709\u5730\u65b9\u5199\u9519\u4e86\uff0c\u5982\u4e0b\u4ee3\u7801\u8fd0\u884c\u65f6\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u8bf7\u53c2\u8003\uff1a\npublic class Issue1303 extends TestCase {\n    public void test_for_issue() {\n        String jsonString = \"[{\\\"author\\\":{\\\"__type\\\":\\\"Pointer\\\",\\\"className\\\":\\\"_User\\\",\\\"objectId\\\":\\\"a876c49c18\\\"},\\\"createdAt\\\":\\\"2017-07-02 20:06:13\\\",\\\"imgurl\\\":\\\"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=11075891,34401011&fm=117&gp=0.jpg\\\",\\\"name\\\":\\\"\u8863\u67b6\\\",\\\"objectId\\\":\\\"029d5493cd\\\",\\\"prices\\\":\\\"1\\\",\\\"updatedAt\\\":\\\"2017-07-02 20:06:13\\\"}]\";\n        JSONArray jsonArray = JSON.parseArray(jsonString);\n        //jsonArray = new JSONArray(jsonArray);//\u8fd9\u4e00\u53e5\u6253\u5f00\u4e5f\u4e00\u6837\u662f\u6b63\u786e\u7684\n        double total = 0;\n        for (int i = 0; i <jsonArray.size() ; i++) {\n            JSONObject object=jsonArray.getJSONObject(i);\n            assertEquals(\"\u8863\u67b6\",object.getString(\"name\"));\n            total=total+ Double.valueOf(object.getString(\"prices\"));\n        }\n        assertEquals(1.0d,total);\n    }\n}. \u80fd\u5426\u505a\u4e2atestcase\uff0c\u8c22\u8c22\u3002\n\u5b9e\u5728\u4e0d\u77e5\u9053\u4f60\u7684\u5404\u4e2axml\u91cc\u662f\u4ec0\u4e48\uff0c\u8f6c\u6362\u4ee3\u7801\u90fd\u662f\u600e\u4e48\u5199\u7684\u3002. use 1.2.35-SNAPSHOT, your codes work well.\nsee: https://github.com/kimmking/fastjson/blob/c807e7db76cb871a5d239dbac19916116110779a/src/test/java/com/alibaba/json/bvt/issue_1300/Issue1307.java. \u6b63\u5e38\u7684Bean\uff0c\u65e0\u9700TypeReference\uff0c\u76f4\u63a5\u4f20Bean.class\u5373\u53ef\u3002\nTypeReference\u673a\u5236\u53ea\u8981\u662f\u4e3a\u4e86\u4f20\u9012\u6cdb\u578b\u7684\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2aMap\u5bf9\u8c61\uff0ckey\u662fstring\uff0cvalue\u662fBean\uff0c\n\u6b63\u5e38\u7684\u63a5\u53e3\u53c2\u6570\u4f20\u9012\u53ea\u80fd\u628aMap.class\u4f20\u8fdb\u53bb\uff0c\u4e0d\u592a\u597d\u8ba9parser\u77e5\u9053\u5185\u90e8\u7684\u7ed3\u6784\uff0c\n\u8fd9\u65f6\u5019\u4e00\u822c\u6709\u5982\u4e0b\u51e0\u4e2a\u529e\u6cd5\uff1a\n1\u3001json\u91cc\uff0cvalue\u7684jsonString\u91cc\u81ea\u5e26\u7c7b\u578b\u5c5e\u6027\uff0c\u6bd4\u5982type: com.wenshao.Bean;\n2\u3001\u4f20\u9012\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u6bd4\u5982new Map()\uff0c\u8fd9\u6837\u7a0b\u5e8f\u53ef\u4ee5\u77e5\u9053value\u662fBean;\n3\u3001\u5c01\u88c5\u4e00\u4e2aTypeReference\uff0c\u8fd9\u4e2a\u672c\u8d28\u4e0a\u8ddf2\u6ca1\u592a\u5927\u533a\u522b\uff0c\u901a\u8fc7TypeReference\u5bf9\u8c61\u7684\u7ed3\u6784\u77e5\u9053value\u7684\u7c7b\u578b\uff1b\n4\u3001\u76f4\u63a5\u4f20\u9012\u5e26\u6709\u6cdb\u578b\u4fe1\u606f\u7684Type\uff0c\u8fd9\u4e2a\u6700\u76f4\u63a5\uff0c\u4f46\u662f\u95ee\u9898\u590d\u6742\u5316\u4e86\u3002\n\u6240\u4ee5\uff0c\u76ee\u524djackson\uff0cgson\uff0cibatis\u4e4b\u7c7b\u7684\u5e93\uff0c\u5904\u7406\u6cdb\u578b\u90fd\u9009\u62e9\u4e86\u7528TypeReference\u3002. \u5efa\u8bae\u5728\u4e1a\u52a1\u91cc\u5904\u7406\uff0c\u8fd9\u6837\u505a\u6539\u53d8\u4e86\u8bed\u4e49\u3002. \u4f60\u60f3\u600e\u4e48\u6765\u544a\u8bc9json\u4f60\u60f3\u53cd\u5e8f\u5217\u5316\u54ea\u4e9b\u6570\u636e\u5462\nparse\u8ddfserialize\u6709\u70b9\u4e0d\u540c\uff0cserialize\u65f6\u53ef\u4ee5\u501f\u52a9annotation\u4e4b\u7c7b\u7684\u5728\u7ed3\u6784\u4e0a\u6253\u6807\u8bb0\uff0cparse\u6ca1\u8fd9\u4e48\u65b9\u4fbf. parse\u662f\u8ba1\u7b97\u5bc6\u96c6\u64cd\u4f5c. \u5927\u5bb6\u4e00\u8d77\u6765\u5199\u5427\n\u6211\u5e26\u5934. \u53c2\u89c1#1309. \u6700\u65b0\u4ee3\u7801\uff0c\u5df2\u7ecf\u6539\u4e86. @wenshao \u8ddf#1306\u91cd\u590d\u4e86\n\u6700\u8fd1\u4e00\u6b21\u53d1\u5e03\u7248\u672c\u5e94\u8be5\u5df2\u7ecf\u597d\u4e86. debug\u4e86\u4e00\u4e0b\uff0cdata class\u4e0a\u7684annotation\uff0c\u4ecejava\u91cc\u8bfb\u53d6\u4e0d\u5230\u3002\n\u771f\u4e0d\u6e05\u695aGson\u600e\u4e48\u62ff\u5230\u7684\u3002. \u627e\u5230\u95ee\u9898\u4e86\uff0c\nfastjson\u91cc\u7684JsonField\u5b9a\u4e49\u662fElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER\n\u6bd4Gson\u7684SerializedName\u591a\u4e86\u4e00\u4e2a ElementType.PARAMETER\nkotlin\u7684data class\u662f\u7528\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u65b9\u5f0f\u5b9a\u4e49\u7684field\u548csetter\u3001getter\uff0ckotlin\u8f6c\u6362java bytecode\u7684\u4ee5\u540e\uff0c\u770b\u5230fastjson\u91cc\u7684\u6ce8\u89e3\u662f\u4f5c\u7528\u5230\u53c2\u6570\u4e0a\uff0c\u5c31\u6ca1\u7ba1\u3002\u800cGson\u7684\u6ce8\u89e3\u53d1\u73b0\u53ea\u80fd\u653e\u5230field\u548cmethod\uff0c\u5c31\u81ea\u52a8\u653e\u8fc7\u53bb\u4e86\u3002\n\u53cd\u5c04\u4e00\u4e0bdata class\uff0c\u53d1\u73b0fastjson\u7684\u6ce8\u89e3\u6ca1\u6709\u4e86\uff0cgson\u7684\u6ce8\u89e3\u51fa\u73b0\u5728field\u4e0a\uff1a\n@com.google.gson.annotations.SerializedName(alternate=[], value=bb)\n\u7531\u4e8efastjson\u7684\u6ce8\u89e3\u7528\u5230\u4e86\u4e00\u4e9b\u5730\u65b9\u7684\u65b9\u6cd5\u53c2\u6570\u4e0a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u65e0\u6cd5\u89e3\u51b3\uff0cfastjson\u6682\u65f6\u4e0d\u652f\u6301kotlin\u7684data class\u3002\n\u590d\u73b0\u95ee\u9898\u7684\u529e\u6cd5\uff0c\u5728idea\u91cc\u5b89\u88c5kotlin\u7684\u63d2\u4ef6\uff0c\u7136\u540enew kotlin project\u5373\u53ef\u3002\n\u6d4b\u8bd5\u6587\u4ef6\u89c1\u9644\u4ef6\u3002\n@wenshao \n@UltramanTIGA . Test.kt.txt\nTestClz.java.txt\n. object\u5bf9\u8c61\u91cc\u5230\u5e95\u662f\u4e2a\u5565\uff1f\n\u800c\u4e14\u5f88\u5947\u602a\uff0cFieldInfo\u7684343\u884c\uff0c\u600e\u4e48\u770b\u90fd\u4e0d\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2aMethod\uff1f\uff1f. \u6211\u603b\u89c9\u5f97\u8fd9\u79cdvalidate\u64cd\u4f5c\u5e94\u8be5\u662f\u4e1a\u52a1\u7684\u4e00\u90e8\u5206\u3002\n\u5165\u5e93\u7684\u65f6\u5019\u5e94\u8be5\u5c31\u5904\u7406\u8f6c\u4e49\u3002. \u80fd\u5426\u63d0\u4f9b\u4e00\u4e2atestcade. \u53ef\u4ee5\u5728maven profile\u91cc\u5b9a\u4e49\u4e0d\u540cdependency\n\u53c2\u8003\u8fde\u63a5\u6c60\u4e4b\u7c7b\u7684\u4f9d\u8d56\u4e0d\u540c\u7248\u672c\u7684jdbc\u63a5\u53e3. it's a good idea. it's a good idea. @transdoc \u4f60\u5148\u6309\u7167\u81ea\u5df1\u7684\u601d\u8def\u6765\uff0c\u81ea\u5df1\u62c9\u4e2a\u5206\u652f\u5199\uff0c\u5230\u65f6\u5019\u6211\u4eec\u8ba8\u8bba\u8ba8\u8bba. @transdoc \u4f60\u5148\u6309\u7167\u81ea\u5df1\u7684\u601d\u8def\u6765\uff0c\u81ea\u5df1\u62c9\u4e2a\u5206\u652f\u5199\uff0c\u5230\u65f6\u5019\u6211\u4eec\u8ba8\u8bba\u8ba8\u8bba. @transdoc \u600e\u4e48\u6837\u4e86\uff0c\u5982\u6709\u95ee\u9898\uff0c\u6211\u53ef\u4ee5\u63d0\u4f9b\u534f\u52a9\u3002. @transdoc \u600e\u4e48\u6837\u4e86\uff0c\u5982\u6709\u95ee\u9898\uff0c\u6211\u53ef\u4ee5\u63d0\u4f9b\u534f\u52a9\u3002. \u8fd8\u771f\u662f\u6709\u8fd9\u4e2a\u5c0f\u95ee\u9898\u3002. \u8fd8\u771f\u662f\u6709\u8fd9\u4e2a\u5c0f\u95ee\u9898\u3002. \u8bd5\u8bd5 https://github.com/kimmking/mybatis-generator-lombok-plugin\n@luoweipeter . \u8bd5\u8bd5 https://github.com/kimmking/mybatis-generator-lombok-plugin\n@luoweipeter . json\u548cxml\u3001html\u7c7b\u7684\u90fd\u662f\u6709\u5927\u91cf\u91cd\u590d\u6a21\u5f0f\uff0c\u5982\u679c\u8d70http\u7684\u8bdd\uff0c\u5f00gzip\uff0c\u5b8c\u80dc\u4e00\u5207\u5728\u7ec6\u8282\u4e0a\u5904\u7406\u7684\u65b9\u6848\u3002. json\u548cxml\u3001html\u7c7b\u7684\u90fd\u662f\u6709\u5927\u91cf\u91cd\u590d\u6a21\u5f0f\uff0c\u5982\u679c\u8d70http\u7684\u8bdd\uff0c\u5f00gzip\uff0c\u5b8c\u80dc\u4e00\u5207\u5728\u7ec6\u8282\u4e0a\u5904\u7406\u7684\u65b9\u6848\u3002. List/Array\u91cc\u7684\u591a\u4e2a\u5bf9\u8c61\u4e0d\u4e00\u5b9a\u662f\u4e00\u6837\u7684type\uff0c\n\u6240\u4ee5\uff0c\u5982\u679c\u53ea\u4f20\u9012\u4e00\u4e2atype\uff0c\u53ef\u80fd\u4f1a\u6709\u6b67\u4e49\uff0c\n\u4f8b\u5982\u4e00\u4e2aList/Array\u91cc\u6709String,Integer,Fload\u4e09\u4e2a\u5bf9\u8c61\uff0cjsonString\u5982\u4e0b\uff0c\u5c31\u65e0\u6cd5\u5904\u7406\u4e86\uff1a\nString str = \"[\"\u5e74\",1,0.5]\";\n. List/Array\u91cc\u7684\u591a\u4e2a\u5bf9\u8c61\u4e0d\u4e00\u5b9a\u662f\u4e00\u6837\u7684type\uff0c\n\u6240\u4ee5\uff0c\u5982\u679c\u53ea\u4f20\u9012\u4e00\u4e2atype\uff0c\u53ef\u80fd\u4f1a\u6709\u6b67\u4e49\uff0c\n\u4f8b\u5982\u4e00\u4e2aList/Array\u91cc\u6709String,Integer,Fload\u4e09\u4e2a\u5bf9\u8c61\uff0cjsonString\u5982\u4e0b\uff0c\u5c31\u65e0\u6cd5\u5904\u7406\u4e86\uff1a\nString str = \"[\"\u5e74\",1,0.5]\";\n. \\w\u5728json\u91cc\u4e0d\u5408\u6cd5\uff0c\u5e94\u8be5\u662f\\\\w. FastJsonProvider\u7684\u517c\u5bb9\u6027\u786e\u5b9e\u6709\u70b9\u95ee\u9898\uff0c\n\u6211\u6253\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\n register(FastJsonProvider.class); \u4e0d\u597d\u4f7f\n register(JacksonJsonProvider.class); \u597d\u4f7f\n\u660e\u5929\u6211\u518d\u4ed4\u7ec6\u770b\u770b\n. \u5947\u6570\u4f4d\u4e71\u7801\uff0c\u611f\u89c9\u50cf\u662futf8\u7684\u95ee\u9898\uff0c\u697c\u4e3b\u6362\u82f1\u6587\u8bd5\u8bd5\u622a\u65ad\u4e0d. \u6211\u8fd9\u91cc\u53ef\u4ee5\u7a33\u5b9a\u590d\u73b0\u4e86\uff0c\u539f\u56e0\u5728\u4e8eFastJsonProvider\u91cc\u76f4\u63a5\u628ajson\u7684length\u4f5c\u4e3aContent Length\u8f93\u51fa\u4e86\uff0c\u5b9e\u9645\u4e0a\u524d\u540e\u52a0\u4e86\u4e00\u4e2acallbackName()\uff0c\u62a5\u6587\u5b9e\u9645\u957f\u5ea6\u53d8\u4e86\uff0cclient\u8bfb\u53d6\u6570\u636e\u6309Content Length\u5c31\u88ab\u622a\u65ad\u4e86\u4e00\u90e8\u5206\u3002\u800c\u4e14callbackName\u8d8a\u957f\uff0c\u622a\u65ad\u7684\u8d8a\u591a\u3002\n\u8ddf\u8e2a\u4e86\u4e00\u4e0bjersey+jackson\u4ee3\u7801\uff0c\u53d1\u73b0jersey\u4f1a\u81ea\u52a8\u6dfb\u52a0Content Length\uff0c\u65e0\u9700\u5728jacksonProvider\u4e2d\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u8bf4FastJsonProvider\u4e2d\u7684\u8fd9\u4e2a\u6dfb\u52a0Content Length\u7684\u64cd\u4f5c\u5b8c\u5168\u662f\u591a\u4f59\u4e86\u3002. @wenshao @VictorZeng @neil4dong @tbjinyuan . https://github.com/kimmking/fastjsontest\n\u590d\u73b0\u7684\u4ee3\u7801\u3002. \u4f60\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u5c5e\u6027\u5728SerializeConfig\u91cc\u662f\u4e2apublic\u7684field\uff0c\u800c\u4e0d\u662fproperty. FastJsonpHttpMessageConverter4. \u4f7f\u7528\u76ee\u524d\u4e3b\u5e72\u4ee3\u7801\u7248\u672c\u5373\u53ef\u3002. \u8fd9\u4e0d\u662fbug\uff0c\u8fd9\u662f\u8bbe\u8ba1\u3002. \u8fd9\u4e0d\u662fbug\uff0c\u8fd9\u662f\u8bbe\u8ba1\u3002. \u8c03jvm\u53c2\u6570. \u8c03jvm\u53c2\u6570. public class Issue1368 extends TestCase {\n    public void test_for_issue() throws Exception {\n        ExtendedServletRequestDataBinder binder = new ExtendedServletRequestDataBinder(new Object());\n        String json = JSON.toJSONString(binder);\n        System.out.println(json);\n        Assert.assertTrue(json.indexOf(\"$ref\")>=0);\n    }\n}\n{\"autoGrowCollectionLimit\":256,\"autoGrowNestedPaths\":true,\"bindEmptyMultipartFiles\":true,\"bindingErrorProcessor\":{},\"bindingResult\":{\"allErrors\":[],\"errorCount\":0,\"fieldErrorCount\":0,\"fieldErrors\":[],\"globalErrorCount\":0,\"globalErrors\":[],\"messageCodesResolver\":{},\"model\":{\"target\":{},\"org.springframework.validation.BindingResult.target\":{\"$ref\":\"..\"}},\"nestedPath\":\"\",\"objectName\":\"target\",\"propertyAccessor\":{\"autoGrowCollectionLimit\":256,\"autoGrowNestedPaths\":true,\"extractOldValueForEditor\":true,\"nestedPath\":\"\",\"propertyDescriptors\":[{\"beanClass\":\"java.lang.Object\",\"bound\":false,\"constrained\":false,\"displayName\":\"class\",\"expert\":false,\"hidden\":false,\"name\":\"class\",\"preferred\":false,\"propertyType\":\"java.lang.Class\",\"readMethod\":{\"accessible\":false,\"annotatedExceptionTypes\":[],\"annotatedParameterTypes\":[],\"annotatedReceiverType\":{\"annotations\":[],\"declaredAnnotations\":[],\"type\":\"java.lang.Object\"},\"annotatedReturnType\":{\"annotatedActualTypeArguments\":[{\"annotatedLowerBounds\":[],\"annotatedUpperBounds\":[{\"annotations\":[],\"declaredAnnotations\":[],\"type\":\"java.lang.Object\"}],\"annotations\":[],\"declaredAnnotations\":[],\"type\":{\"lowerBounds\":[],\"typeName\":\"?\",\"upperBounds\":[\"java.lang.Object\"]}}],\"annotations\":[],\"declaredAnnotations\":[],\"type\":{\"actualTypeArguments\":[{\"$ref\":\"$.bindingResult.propertyAccessor.propertyDescriptors[0].readMethod.annotatedReturnType.annotatedActualTypeArguments[0].type\"}],\"rawType\":\"java.lang.Class\",\"typeName\":\"java.lang.Class<?>\"}},\"annotations\":[],\"bridge\":false,\"declaringClass\":\"java.lang.Object\",\"default\":false,\"exceptionTypes\":[],\"genericExceptionTypes\":[],\"genericParameterTypes\":[],\"genericReturnType\":{\"$ref\":\"$.bindingResult.propertyAccessor.propertyDescriptors[0].readMethod.annotatedReturnType.type\"},\"modifiers\":273,\"name\":\"getClass\",\"parameterAnnotations\":[],\"parameterCount\":0,\"parameterTypes\":[],\"returnType\":\"java.lang.Class\",\"synthetic\":false,\"typeParameters\":[],\"varArgs\":false},\"shortDescription\":\"class\"}],\"rootClass\":\"java.lang.Object\",\"rootInstance\":{\"$ref\":\"$.bindingResult.model.target\"},\"wrappedClass\":\"java.lang.Object\",\"wrappedInstance\":{\"$ref\":\"$.bindingResult.model.target\"}},\"propertyEditorRegistry\":{\"$ref\":\"$.bindingResult.propertyAccessor\"},\"suppressedFields\":[],\"target\":{\"$ref\":\"$.bindingResult.model.target\"}},\"fieldDefaultPrefix\":\"!\",\"fieldMarkerPrefix\":\"_\",\"ignoreInvalidFields\":false,\"ignoreUnknownFields\":true,\"objectName\":\"target\",\"target\":{\"$ref\":\"$.bindingResult.model.target\"},\"validators\":[]}\n\u672a\u53d1\u73b0\u6b64\u95ee\u9898\u3002. toJSON\u6ca1\u6709\u505a\u5faa\u73af\u68c0\u6d4b\uff0c\u5148\u4f7f\u7528toJSONString\u5427. `\npublic class Issue1369 extends TestCase {\n    public void test_for_issue() throws Exception {\n        Foo foo = new Foo();\n        foo.a = 1;\n        foo.b = \"b\";\n        foo.bars = new Bar();\n        foo.bars.c = 3;\n        String json = JSON.toJSONString(foo);\n        System.out.println(json);\n    }\npublic static class Foo {\n    public int a;\n    public String b;\n    public Bar bars;\n}\npublic static class Bar {\n    public int c;\n}\n\n}\n\u8f93\u51fa\n{\"a\":1,\"b\":\"b\",\"bars\":{\"c\":3}}\n\u672a\u53d1\u73b0\u6b64\u95ee\u9898.\npublic class Issue1369 extends TestCase {\n    public void test_for_issue() throws Exception {\n        Foo foo = new Foo();\n        foo.a = 1;\n        foo.b = \"b\";\n        foo.bars = new Bar();\n        foo.bars.c = 3;\n        String json = JSON.toJSONString(foo);\n        System.out.println(json);\n    }\npublic static class Foo {\n    public int a;\n    public String b;\n    public Bar bars;\n}\npublic static class Bar {\n    public int c;\n}\n\n}\n\u8f93\u51fa\n{\"a\":1,\"b\":\"b\",\"bars\":{\"c\":3}}\n`\n\u672a\u53d1\u73b0\u6b64\u95ee\u9898. Ref: #1374. readWithMessageConverters\u91cc\u6709\u4e0d\u5c11log\uff0c\u628aspringmvc\u7684log\u8c03\u5230debug\u770b\u770b\u5177\u4f53\u54ea\u4e2a\u5904\u7406\u6162\u3002\n. 1\u3001\u6539\u6210\u5b57\u7b26\u4e32\u662f\u6bd4\u8f83puzzle\u7684\u4e8b\u513f\uff0c\u6bd4\u5982\u53cd\u5e8f\u5217\u5316\u600e\u4e48\u529e\uff1f\n2\u30011.00\u4e0e1\u4ec5\u6709\u683c\u5f0f\u4e0d\u540c\uff0cjs\u91cc\u662f\u65e0\u6cd5\u533a\u5206\u7684\uff0c\u4e5f\u65e0\u9700\u533a\u5206\uff1b\u5982\u679c\u4e1a\u52a1\u6709\u9700\u6c42\uff0c\u53ef\u4ee5\u5728\u4e1a\u52a1\u89d2\u5ea6\u8003\u8651\u3002\n3\u3001\u6570\u503c\u4e0d\u52a0\u5f15\u53f7\u662f\u89c4\u8303\u7684\u8981\u6c42\u3002\n4\u3001\u4ecejson\u6700\u4f73\u5b9e\u8df5\u7684\u89d2\u5ea6\u770b\uff0c\u9075\u5b88\u8fd9\u4e9b\u89c4\u8303\u662f\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u3002\n\u5982\u679c\u6709\u5f3a\u70c8\u7684\u9700\u6c42\uff0c\u53ef\u5426\u4e3e\u4e00\u4e2a\u66f4\u52a0\u4f8b\u5b50\uff0c\u6211\u4eec\u770b\u770b\u6709\u6ca1\u6709\u529e\u6cd5\u4f60\u7684\u95ee\u9898\u3002\n. \u5176\u5b9e\u8fd9\u662fjson schema\u7684\u5de5\u4f5c\uff0c\u76ee\u524d\u6709\u8ba1\u5212\u652f\u6301\u5b8c\u6574\u7684json schema. https://github.com/alibaba/fastjson/wiki/enable_autotype\n-Dfastjson.parser.autoTypeSupport=true. null\u4e0e\"\"\u5728\u8bed\u4e49\u4e0a\u662f\u4e0d\u4e00\u6837\u7684\u3002. \u4e0a\u9762\u7684\u56fe\uff0c\u7528\u7684\u662fjackson\uff0c\u4e0d\u662ffastjson\uff0c\nfastjson\u76ee\u524djsonp\u4e0d\u4f1a\u9ed8\u8ba4\u7ed9\u4e2acallback. try  1.2.36. ```\npackage com.alibaba.json.bvt.issue_1400;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.TypeReference;\nimport junit.framework.TestCase;\nimport org.junit.Assert;\nimport java.util.ArrayList;\nimport java.util.List;\n/*\n * Created by kimmking on 11/08/2017.\n /\npublic class Issue1400 extends TestCase {\n    public void test_for_issue() throws Exception {\n        TypeReference tr = new TypeReference>>(){};\n        Test test = new Test(tr);\n        Resource resource = test.resource;\n        Assert.assertEquals(1,resource.ret);\n        Assert.assertEquals(\"ok\",resource.message);\n        List data =(List) resource.data;\n        Assert.assertEquals(2,data.size());\n        App app1 = data.get(0);\n        Assert.assertEquals(\"11c53f541dee4f5bbc4f75f99002278c\",app1.appId);\n    }\npublic static class Resource<T> {\n    public int ret;\n    public String message;\n    public T data;\n}\n\npublic static class App {\n    public String appId;\n}\n\npublic static class Test {\n    String str = \"{\\\"ret\\\":1,\\\"message\\\":\\\"ok\\\",\\\"data\\\":[{\\\"appId\\\":\\\"11c53f541dee4f5bbc4f75f99002278c\\\"},{\\\"appId\\\":\\\"c6102275ce5540a59424defa1cccb8ed\\\"}]}\";\n    public Resource resource;\n    Test(TypeReference tr) {\n        resource = (Resource)JSON.parseObject(str, tr);\n    }\n}\n\n}\n```. \u51c6\u5907\u5f00\u59cb\u91cd\u65b0\u6574\u7406fastjson\u7684\u6587\u6863\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e00\u8d77\u53c2\u4e0e\u3002\n. \u65b0\u7248\u5e94\u8be5\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\uff1a\nhttps://github.com/alibaba/fastjson/wiki/Use-Fastjson-in-Kotlin. that's a good idea to add jsonignore feature. \u8bf7\u6253\u5370\u548c\u68c0\u67e5\u4f60\u6bcf\u4e00\u6b65\u7684\u5904\u7406\u7ed3\u679c\u3002\u7136\u540e\u6765\u6392\u67e5\u3002\n\u611f\u89c9\u8ddffastjson\u672c\u8eab\u6ca1\u6709\u5173\u7cfb\u3002. \u4e24\u79cd\u529e\u6cd5\uff0c\u4e00\u4e2a\u662fjson\u91cc\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u5e26\u4e0a@type\uff0c\u4e8c\u662fTypeRef. \u770b\u8d77\u6765\u662f\u7c7b\u4f3c\u4e8esms\u4e4b\u7c7b\u7684\uff0c\u88ab\u8fd0\u8425\u5546\u63d0\u4f9b\u7684\u63a5\u53e3\u622a\u65ad\u4e86. \u6211\u665a\u70b9\u6d4b\u8bd5\u4e00\u4e9b\u8d85\u957f\u7684json parse\u95ee\u9898\u3002. \u80fd\u5426\u628a\u4f60\u7684json\u539f\u59cb\u6570\u636e\u53d1\u7ed9\u6211\uff0ckimmking@163.com\uff0c\u8c22\u8c22\n@gyqGitHub . \u68c0\u67e5\u5728\u4e24\u4e2a\u73af\u5883\u4e2d\u5f15\u7528\u7684fastjson\u7248\u672c\u662f\u5426\u4e00\u81f4. \u6211\u5370\u8c61\u4e2d\u6539\u8fc7\u4e86\uff1f\n. 1201\u662f\u4e2abean\uff0c\u6ca1\u6709\u6570\u7ec4orList\uff1f\uff1f\n\u80fd\u5426\u7ed9\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u8c22\u8c22\u3002\n. Bean\u7684field or property\u4fdd\u6301\u987a\u5e8f\u5417\uff1f\nBean\u672c\u8eab\u7684field or property\u662f\u65e0\u5e8f\u7684\uff0cparser\u540e\u7684Bean\uff0c\u4f60\u600e\u4e48\u4f53\u73b0\u987a\u5e8f\u5462\uff1f\n\u6216\u8005\uff0c\u4f60\u60f3\u8981\u7684\u662f\uff0c\u518d\u6b21toJsonString\u7684\u65f6\u5019\uff0c\u8ddf\u8fd9\u4e2a\u987a\u5e8f\u76f8\u540c\uff1f\n\u4e0d\u8fc7\u4f60\u9700\u8981\u8003\u8651\u4e00\u70b9\uff0cBean\u672c\u8eab\u7684field or property\u662f\u65e0\u5e8f\u7684\uff0c\u4ecejson string\u53d8\u6210bean\u7684\u65f6\u5019\uff0c\n\u539f\u6765\u5728json string\u7684\u987a\u5e8f\u4fe1\u606f\u5c31\u4e22\u5931\u4e86\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u6765\u56de\u90fd\u6709\u5e8f\uff0c\u5efa\u8bae\u4e0d\u8981parser\u6210Bean\uff0cparser\u6210JSONObject\u5bf9\u8c61\uff0c\u5728\u628aJSONObject\u5bf9\u8c61toJSONString\uff0c\u8fd9\u6837\u5e94\u8be5\u4e00\u76f4\u90fd\u662fOK\u7684\u3002\n. @VictorZeng zeng\n. \u6211\u4e5f\u6ca1\u770b\u61c2\uff0c\u4ec0\u4e48\u95ee\u9898\u3002. ```\nimport com.alibaba.fastjson.JSON\nimport com.alibaba.fastjson.annotation.JSONField\nimport kotlin.collections.*\nfun main(args: Array) {\nval dt = DataClass(1,2)\nval json = JSON.toJSONString(dt)\nprintln(json)\nval clz = DataClass::class\nprintln(clz.javaObjectType)\nval dt1 = JSON.parseObject(json,clz.javaObjectType)\nprintln(dt1)\n\nval dtf = DataClassField(1,2)\nval jsonf = JSON.toJSONString(dtf)\nprintln(jsonf)\nval clzf = DataClassField::class\nprintln(clzf.javaObjectType)\nval dt3 = JSON.parseObject(jsonf,clzf.javaObjectType)\nprintln(dt3)\n\nval dts = DataClassSimple(1,2)\nval jsons = JSON.toJSONString(dts)\nprintln(jsons)\nval clzs = DataClassSimple::class\nprintln(clzs.javaObjectType)\nval dt2 = JSON.parseObject(jsons,clzs.javaObjectType)\nprintln(dt2)\n\n\nval list =  mutableListOf<DataClassSimple>(dts)\nvar jsonM = JSON.toJSONString(list)\nprintln(jsonM)\nval dtM = JSON.parseArray(jsonM,clzs.javaObjectType)\nprintln(dtM)\n\n\n\n\n//println(JSON.toJSON(dt))\n//TestClz.test(DataClass(1,2))\n//val gson = GsonBuilder().create()\n//gson.toJson(dt, System.out)\n\n}\ndata class DataClassSimple(val a : Int, val b : Int)\ndata class DataClass(@JSONField(name=\"aa\")val a : Int, @JSONField(name=\"bb\")val b : Int)\ndata class DataClassField(@field:JSONField(name=\"aaa\")val a : Int, @field:JSONField(name=\"bbb\")val b : Int)\n```\n\u4e3b\u5e72\u7684\u4ee3\u7801\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u7248\u672c\uff1a1.2.38-preiview-09. \u597d\uff0c\u6211\u660e\u5929\u8bd5\u8bd5AS. \u5e76\u53d1\u95ee\u9898\uff0c\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d\uff0clist\u7684\u957f\u5ea6\u53d8\u4e86\u3002\n\u8fd9\u6837\u7684\u8bdd\uff0c\u611f\u89c9\u6b64\u5904\u7684\u4e1a\u52a1\u4ee3\u7801\u903b\u8f91\u662f\u6709\u95ee\u9898\u7684\u3002\n\u6bd4\u5982\u8bf4 \u5f00\u59cb\u5e8f\u5217\u5316\u524dlist\u67094\u4e2a\u5143\u7d20\uff0c\u5904\u7406\u7684\u8fd910ms\u5185list\u88ab\u53bb\u6389\u4e86\u4e00\u4e2a\u5143\u7d20\u3002\n\u8fd9\u65f6\u5019\u53ea\u67093\u4e2a\u5143\u7d20\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e0a\u9762\u7684\u95ee\u9898\u4ea7\u751f\u3002\n\u8bf7\u95ee\u6309\u7167\u4e1a\u52a1\u903b\u8f91\uff0c\u662f\u5e94\u8be5\u5e8f\u5217\u53164\u4e2a\u5143\u7d20\u7ed9rest\u63a5\u53e3\uff0c\u8fd8\u662f3\u4e2a\u5143\u7d20\u5462\uff1f\n\u8bf7\u4fee\u6539\u4ee3\u7801\uff0c\u4fdd\u6301list\u5185\u5bb9\u7684\u4e00\u81f4\u6027\u3002\n1\u3001\u8981\u4e48\u4fdd\u6301list\u4e0d\u53d8\uff0c\u5982\u679c\u8981\u53d8\uff0c\u4f7f\u7528\u65b0\u7684list\u5bf9\u8c61\u8868\u793a\u53d8\u5316\u540e\u7684\u5217\u8868\u3002\n2\u3001\u5982\u679c\u4e0a\u9762\u4e00\u6761\u4e5f\u4fdd\u8bc1\u4e0d\u4e86\uff0c\u5c31\u5e8f\u5217\u5316\u4e4b\u524d\uff0c\u590d\u5236\u4e00\u4e2a\u65b0\u7684list\u8fd4\u56de\u3002\u5373\uff1a\nList list = new ArrayList(); \nlist.addAll(\u539f\u672c\u7684list);\nreturn list;\n. \u4e0d\u662f\u592a\u7406\u89e3:\n\u4f60\u662f\u60f3\u628ahtmlunit\u7684cookie\u8f6c\u6210httpclient\u7684cookie\uff1f. camel or spring integration. \u5355\u72ec\u4e00\u4e2astring\uff0c\u4e0d\u9700\u8981tojson\uff0cparse\n. Removed it, thanks for suggestion.\n. And we will check all documents and rearrange them for developers.. \u6536\u5230\u3002. \u80fd\u5426\u63d0\u4f9b\u8be6\u7ec6\u4e00\u70b9\u7684\u4fe1\u606f\uff1a\u591a\u957f\u4f1a\u51fa\u95ee\u9898\uff0c\u662f\u89e3\u6790\u5355\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u8fd8\u662fbean\u91cc\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\u5b57\u7b26\u4e32\uff1f. \u6709\u4ec0\u4e48\u95ee\u9898\u5417. https://github.com/alibaba/fastjson/pull/1508\n@zcgewu \u770b\u770b\uff0c\u662f\u4e0d\u662f\u4f60\u7684case\uff1f. \u90a3\u4e48\uff0c\u95ee\u9898\u662f\uff1f\n. @desslee \uff0c\u4f60\u597d\u3002\n1.\u4ecejson\u7684\u8bed\u4e49\u89d2\u5ea6\u6765\u8bf4\uff0c[],{},\u4ee5\u53ca\"{\\\"avgPriceRange\\\":{}, \"valueSet\":[]}\"\uff0c\n\u90fd\u4e0d\u662fnull\uff0c\u6240\u4ee5\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cfastjson\u65e0\u6cd5\u628a\u4ed6\u4eec\u53d8\u6210null\u3002\n2.\u597d\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7fastjson\u7684\u6269\u5c55\u673a\u5236\u6216JSONObject\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\n2.1 \u53cd\u5e8f\u5217\u5316\u7684\u6269\u5c55\u673a\u5236\u53ef\u4ee5\u53c2\u89c1\nhttps://github.com/alibaba/fastjson/wiki/ObjectDeserializer_cn\n2.2 JSONObject\u65b9\u5f0f\n\u53ef\u4ee5\u5148parse\u6210JSONObject\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5927Map\u4e2d\u5d4c\u5957\u7684\u5c0fmap\uff1a\u5bf9\u5e94\u4e8e{}\u3001\u5927map\u662f\u7a7a\u7684\uff1b\u5bf9\u4e8e\"{\\\"avgPriceRange\\\":{}, \"valueSet\":[]}\"\uff0c\u5faa\u73af\u5224\u65ad\u4e00\u4e0bvalue\u91cc\u662f\u7a7a\u7684\u5373\u53ef\u3002\n3. \u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u8fd8\u662f\u6bd4\u8f83\u5efa\u8bae\u4f60\u4ecePOJO\u7684\u8bbe\u8ba1\u4e0a\u8003\u8651\uff0c\u4f7f\u76f4\u63a5\u4f7f\u7528new Rule()\u4e0enull\u5728\u4e1a\u52a1\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u5373\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u53c8\u80fd\u89c4\u907f\u989d\u5916\u7684\u590d\u6742\u6027\u3002\n. JSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n@organics2016  \u8fd9\u4e2a\u914d\u7f6e\u672c\u6765\u5c31\u4e0d\u4f1a\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u4ee3\u7801\u91cc\u672c\u6765\u7684\u503c\u5c31\u662f\u8fd9\u4e2a\u3002. \u770b\u4e86\u4e00\u4e0b\u4ee3\u7801\uff0clocalDateTime\u6709\u4e2a\u8be1\u5f02\u7684\u8bbe\u8ba1\uff1a\n1\u3001\u5982\u679c\u76f4\u63a5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u4e86format\uff0c\u4ee5\u6b64\u4e3a\u51c6\n2\u3001\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u6307\u5b9a\uff0c\u5224\u65adlocalDateTime\u91ccnano\u662f\u5426\u4e3a0\uff0c\n2.1\u3001\u5982\u679c\u4e3a0\uff0c\u4f7f\u7528JSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n2.2\u3001\u5982\u679c\u4e0d\u4e3a0\uff0c\u4f7f\u7528object.toString();\n\u4e0a\u9762\u7684\u4f8b\u5b50\u91cc\uff0cnow\u662f\u5e26nano\u7684\uff0c\u6240\u4ee5\u7528\u4e862.2\uff0cparse\u51fa\u6765\u7684\u4e0d\u5e26\u6240\u4ee5\u7528\u4e862.1. \u5728\u4e0d\u6539\u53d8\u73b0\u6709\u6240\u6709\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u52a0\u4e2aDEFFAULT_LOCAL_DATE_TIME_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSS\";\u6765\u5904\u7406\u3002\n\u6211\u73b0\u5728PR\u3002. #1507\n\u73b0\u5728\n1\u3001\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539DEFFAULT_LOCAL_DATE_TIME_FORMAT\u6765\u6539\u53d8nano\u4e0d\u4e3a0\u7684\u683c\u5f0f\uff0c\n2\u3001\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539DEFFAULT_DATE_FORMAT\u6765\u6539\u53d8nano\u4e3a0\u7684\u683c\u5f0f\uff0c. exception\u7684\u5904\u7406\u673a\u5236\u8ddf\u5176\u4ed6\u7c7b\u578b\u4e0d\u540c\uff0c\u6211\u770b\u770b\u80fd\u5426\u5904\u7406\u3002\n. \u627e\u5230\u95ee\u9898\u4e86\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u662f\u62ff\u7684private Exception e\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u91cc\u9762\u6ca1\u6709name\u5b57\u6bb5\u3002. \u8bd5\u4e86\u4e00\u4e0b\uff0c\u5982\u679c\u628aException\u6362\u6210Object\uff0cparser\u76f4\u63a5\u62a5\u9519\uff0c\u63d0\u793a\u4e0d\u652f\u6301auto type\u3002\n\u53ef\u4ee5\u901a\u8fc7\u663e\u793a\u542f\u7528auto type\u89e3\u51b3\uff1a\nstatic {\n        System.setProperty(\"fastjson.parser.autoTypeSupport\",\"true\");\n    }\n. \u5df2\u4fee\u590d\uff1a #1506\nhttps://github.com/alibaba/fastjson/pull/1506\n. \u80fd\u5426\u7ed9\u51fademo\uff0c\u8c22\u8c22. \u6682\u4e0d\u652f\u6301json schema\uff0c\n\u540e\u7eed\u4f1a\u6709\u6b64\u7c7b\u8ba1\u5212\u3002. @dongzhanwen \u4e3a\u4e86\u51cf\u5c11json\u4f53\u79ef\uff0c\u9ed8\u8ba4\u662f\u4e0d\u8f93\u51fanull\u7684key-value\u7684\uff0c\n\u53ef\u4ee5\u5f00\u542f\uff1aWriteNullListAsEmpty\n\u5176\u4ed6feature\uff1a\nQuoteFieldNames\u2014\u2014\u2014-\u8f93\u51fakey\u65f6\u662f\u5426\u4f7f\u7528\u53cc\u5f15\u53f7,\u9ed8\u8ba4\u4e3atrue \nWriteMapNullValue\u2014\u2014\u2013\u662f\u5426\u8f93\u51fa\u503c\u4e3anull\u7684\u5b57\u6bb5,\u9ed8\u8ba4\u4e3afalse \nWriteNullNumberAsZero\u2014-\u6570\u503c\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a0,\u800c\u975enull \nWriteNullListAsEmpty\u2014\u2013List\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a[],\u800c\u975enull \nWriteNullStringAsEmpty\u2014\u5b57\u7b26\u7c7b\u578b\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a\u201d\u201c,\u800c\u975enull \nWriteNullBooleanAsFalse\u2013Boolean\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3afalse,\u800c\u975enull. \u53ef\u4ee5\u8003\u8651\uff0c\u76ee\u524d\u8fd9\u4e48\u5904\u7406\u662f\u56e0\u4e3a\uff1a\u4e00\u822c\u7684\u903b\u8f91\u662f\u8d70\u4e0d\u5230\u65b0\u52a0\u7684\u5904\u7406\u91cc\u9762\u6765\u7684\u3002. https://github.com/alibaba/fastjson/pull/1511. \u4f60\u53ef\u4ee5debug\u770b\u4e00\u4e0bjs\u7684XHR\u5bf9\u8c61\uff0c\n\u8fd4\u56de\u91cc\u4e0d\u4ec5\u6709responseText\uff0c\u8fd8\u6709responseJSON\n\u540e\u9762\u4e00\u4e2a\u5e94\u8be5\u4e0d\u4f1a\u8fd4\u56de\u53cc\u5f15\u53f7. it look like a bug. \u4f60\u7ed9\u7684json\u91cc\uff0c\u90fd\u662ftrue.  \u4f60\u539f\u672c\u7684\u65f6\u95f4\u5c31\u662f2017-10-12 00:00:00\n . \u6211\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u6ca1\u95ee\u9898\u3002\n\u80fd\u5426\u6253\u5f00\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u770b\u4e00\u4e0bnetwork\uff0c\u628a\u4f60\u4e24\u6b21\u8bbf\u95ee\u7684\nhttp://localhost:8080/v2/api-docs \u8fd9\u4e2a\u5927json\u6587\u4ef6\u53d1\u7ed9\u6211\u770b\u770b\uff0c\u8c22\u8c22\u3002\nkimmking@163.com. data class DataClass(\n    @field:JSONField(name = \"Id\")\n    val Aa: String,\n@field:JSONField(name = \"Name\")\nval Bb: String\n\n). https://github.com/alibaba/fastjson/wiki/Samples-PropertyFilter. \u4e0d\u7528\u91cd\u590d\u64cd\u4f5c\u4e00\u4e2astream\uff0c\n\u5982\u679c\u8981\u590d\u7528\uff0c\u5148\u8bfb\u6210string\u6216byte[],\u7136\u540e\u591a\u6b21\u64cd\u4f5c\u8fd9\u4e2astring\u6216byte[]. can you show a test case?. can you show a test case ? thx\n. FastJsonJolyglot \u53d1\u4e00\u4e0b\u3002. \u7a0b\u5e8f\u91ccmap\u7684key\u522b\u7528enum\uff0c\u76f4\u63a5\u7528string\u5427\uff0c\n\u6539\u8d77\u6765\u4e5f\u5bb9\u6613\u3002. jersey.config.disableAutoDiscovery\nhttps://stackoverflow.com/questions/24308639/weblogic-disable-jersey-scanning. \u6838\u5fc3\u95ee\u9898\u662f\uff0cweblogic 12\u5185\u7f6e\u4e86\u5bf9jersey\u7684\u652f\u6301\u3002. @wenshao \n\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6839\u672c\u529e\u6cd5\u5c31\u662f\u628a\u5bf9\u4e0d\u540c\u5176\u4ed6\u7c7b\u5e93\u652f\u6301\u7684package\uff0c\u62c6\u6210\u72ec\u7acb\u7684\u5305\uff1afastjson-xxx. @VictorZeng \u662f\u7684\uff0c\u53ef\u4ee5\u5148\u5904\u7406core api\u4e4b\u5916\u7684\u90e8\u5206\u3002. \u76f8\u5f53\u4e8e\u662ffastjson\u4fee\u6539\u4e86\u4e00\u4e2a\u6570\u636e\uff0c\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\n\u7528\u6237\u518d\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u8ddf\u539f\u6765\u7684json\u5bf9\u4e0d\u4e0a\u4e86\u3002. \u8fd9\u4e2abug\u7684\u5904\u7406\u65b9\u5f0f\u662f\uff1a\n\nit = FileUtils.lineIterator(csvFile, \"gbk\");. HashMap \u672c\u8eab\u662f\u65e0\u5e8f\u7684\uff0c\u6362\u6210 LinkedHashMap\u8bd5\u8bd5\u3002. 1\u3001\u5bf9\u73b0\u6709\u7cfb\u7edf\u7684\u517c\u5bb9\u662f\u4e2a\u95ee\u9898\n2\u3001\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u63d0\u4ea4\u4e00\u4e2aPR\n\n\u8c22\u8c22\u53cd\u9988\u3002\n. \u5e94\u8be5\u8d77\u4f5c\u7528\u7684\uff0c\u53ef\u5426\u6784\u9020\u4e00\u4e2a\u4e0d\u8d77\u4f5c\u7528\u7684\u4f8b\u5b50\u3002. can you show a  testcase for reproducing this issue.thx.. plz close this issue, thx.. @netbuffer  \u6211\u89c9\u5f97jackson\u7684jsonview\u5fc5\u987b\u7528\u4e00\u4e2aclass\u6765\u6807\u8bb0\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u4e0dgraceful\u7684\u8bbe\u8ba1\u3002. JSON.toJSONString(bean, SerializerFeature.PrettyFormat); . \n\n. \u5355\u72ec\u6821\u9a8c\u4e00\u4e2a\u9017\u53f7\u611f\u89c9\u4e00\u6837\u4e0d\u5927\u3002\n\u4e00\u822c\u6211\u4eec\u8bf4\u5f97\u6821\u9a8c\u662fschema\u7684\u6821\u9a8c\uff0c\u6bd4\u5982\u8981\u6c42\u6709\u5c5e\u6027a\u548cb\uff0c\u51fa\u73b0c\u548cd\uff0ca\u662fint\u7684\uff0c\u7ed3\u679c\u662fstring\u3002. \u63d0\u793a\u4fe1\u606f\u5f88\u660e\u786e\uff1atry ulimit -c unlimited \n. \u5e94\u8be5\u662f\u8fd9\u53e5\uff1a\nchar newValue[] = new char[newCapacity];\n\u770b\u6837\u5b50\uff0c\u95ee\u9898\u51fa\u73b0\u5728\u5185\u5b58\u4e0d\u591f\u4e0a\u3002\n\u8981\u4e0d\u662f\u6709mem leak\uff0c\u5c31\u662f\u914d\u7f6e\u7684\u5185\u5b58\u592a\u5c0f\u4e86\u3002\n. jmap histo\u4e00\u4e0b\u3002. \u4f60\u628a return JSON.toJSONString\n\u6362\u6210 return \"{}\";\n\u8bd5\u8bd5\u3002. \u6211\u662f\u8bf4\u95ee\u9898\u91cc\u7684IllegalStateException\u8ddffastjson\u6ca1\u5173\u7cfb\u3002. \u7f51\u9875\u4e0a\u53f3\u952e\uff0c\u7f16\u7801-\u9009\u62e9UTF-8\u8bd5\u8bd5\u3002\n\u9ed8\u8ba4\u5c31\u662fUTF-8\uff0c\u52a0\u4e0aproduces\u53c2\u6570\u4e3b\u8981\u662f\u901a\u8fc7response\u5934\u544a\u8bc9\u6d4f\u89c8\u5668\uff0c\u540e\u9762\u7684\u6570\u636e\u65f6UTF-8\u7684\u3002\n\u4f60\u51fa\u73b0\u4e71\u7801\u662f\u56e0\u4e3a\uff0c\u6d4f\u89c8\u5668\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u7f16\u7801\u3002. JSON.toJSONString(objSearchResponse,\"UTF-8\"  or \"GBK\");\n\u6211\u7684\u610f\u601d\u662f\u8fd9\u79cd\u5199\u6cd5\u5e76\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\u6709\u7684\u6d4f\u89c8\u5668\u662f\u53ef\u80fd\u662fa\u7f16\u7801\uff0c\u4e5f\u53ef\u80fd\u662fb\u7f16\u7801\u3002. \u8fd9\u4e2a\u7248\u672c\u662f\u4e0d\u662f\u592a\u8001\u4e86\uff0c\u63621.2.41\u8bd5\u8bd5\u3002. \u6709\u70b9\u5947\u602a\uff0c\u6309\u7406key\u5fc5\u987b\u662fstring. \u6ca1\u7528\u8fc7wildfly\uff0c\u80fd\u5426\u7ed9\u6211\u4e00\u4e2a\u4f8b\u5b50\u3002. ObjectDeserializer \u662f\u4e2a\u529e\u6cd5\u3002\n\u53c2\u89c1\uff1ahttps://github.com/alibaba/fastjson/pull/1664\n\u7ed9Property\u4e00\u4e2aObjectDeserializer\uff0c\n\u7136\u540e\u5728deserialze\u91cc\uff0c\u901a\u8fc7parser.input\u62ff\u5230\"test\"\u770b\u770b\u662f\u4e0d\u662f\u4e00\u4e2ajson\u8fd8\u662f\u5355\u4e2a\u5b57\u7b26\u4e32\uff0c\n1\u3001\u5982\u679c\u662fjson\uff0c\u5c31\u8c03\u7528JavaBeanDeserializer\uff0c\u8d70\u6b63\u5e38\u903b\u8f91\u3002\n2\u3001\u5982\u679c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0cnew\u51fa\u6765\u4e00\u4e2aProperty\uff0c\u518dnew\u4e00\u4e2aA\uff0c\u8fd4\u56de\u3002. fastjson\u914d\u7f6e\u53d1\u51fa\u6765\uff0c\n\u9519\u8bef\u7684json\u548c\u6b63\u786e\u7684\u4e5f\u53d1\u51fa\u6765\u3002. \u6700\u65b0\u7248\u6709\u8fd9\u4e2a\u95ee\u9898\u5417 @guacai . \u6ca1\u770b\u660e\u767d\uff0c\u80fd\u4e3e\u4e2a\u4f8b\u5b50\u5417\u3002. \u6ca1\u770b\u660e\u767d\uff0c\u80fd\u4e3e\u4e2a\u4f8b\u5b50\u5417\u3002. ObjectDeserializer\uff1f\nhttps://github.com/alibaba/fastjson/pull/1664. ObjectDeserializer\uff1f\nhttps://github.com/alibaba/fastjson/pull/1664. \u8fd9\u662feclipse\u7684\u663e\u793a\u95ee\u9898\u5427\uff1f. \u8fd9\u662feclipse\u7684\u663e\u793a\u95ee\u9898\u5427\uff1f. can you show a test case,thx.. can you show a test case,thx.. \u4ec0\u4e48\u7248\u672c\uff0c\u51fa\u9519\u4ee3\u7801\u8ddf\u76ee\u524d\u7248\u672c\u5bf9\u5e94\u4e0d\u4e0a\u3002\n\u8bd5\u8bd5\u6700\u65b0\u7248\u672c\u3002. \u8fd9\u79cd\u60c5\u51b5\uff0c\u66f4\u5efa\u8bae\u4f60\u4f7f\u7528\u5168\u5c40\u6027\u914d\u7f6e\u3002. \u6ca1\u53d1\u73b0\u6709\u95ee\u9898\u3002\n\u4ee5\u4e0a\u903b\u8f91\u90fd\u662f\u5bf9\u7684\u3002. \u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u7684\u4f7f\u7528\u6709\u8bef\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a\n```\npublic Model deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n            JSONObject obj = (JSONObject)parser.parse();\n            Model model = new Model();\n            model.value = obj.getInteger(\"value\") * 100;\n            return model;\n        }\n```. testcase:https://github.com/alibaba/fastjson/pull/1664\n\u53e6\u5916\uff0c\u4f60\u6ce8\u518c\u7684\u7c7b\u578b\u662fputDeserializer(Model.class, new ModelValueDeserializer()); \n\u90a3\u4e48\uff0cfastjson\u4f1a\u76f4\u63a5\u62ff\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684deserialze\u7684\u65b9\u6cd5\u7ed3\u679c\u4f5c\u4e3aModel\u7684\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u91cc\u9762\u7684value\uff0c\n\u540c\u65f6\uff0c\u7531\u4e8e\u4f60\u5b9a\u4e49\u4e86\u5168\u5c40\u53cd\u5e8f\u5217\u5316\uff0c\u5bfc\u81f4\u8fd9\u4e2adeserialze\u91cc\u4e5f\u4e0d\u80fd\u7528parseObject\u4e4b\u7c7b\u7684\u64cd\u4f5c\u4e86\uff0c\n\u53ea\u80fdnew\u4e00\u4e2amodel\u51fa\u6765\uff0c\u518d\u8fd4\u56de\u7ed9\u8c03\u7528\u65b9\u3002. \u611f\u89c9\u662f\u4e2a\u8bbe\u8ba1\u95ee\u9898@wenshao. \u5148\u53d8\u6210jsonobject\uff0c\u7136\u540e\u62ff\u5230list\u7684string\uff0c\u518d\u53cd\u5e8f\u5217\u5316. \u5bf9\u9519\u8bef\u7684\u6700\u5927\u5bb9\u5fcd\u6027\u548c\u4e25\u683c\u6027\uff0c\u8fd9\u4e24\u4e2a\u76ee\u524d\u662f\u96be\u4ee5\u517c\u5bb9\u7684\u3002\n\u53ef\u4ee5\u8003\u8651\u5b9e\u73b0\u4e00\u4e2a\u4e25\u683c\u6a21\u5f0f\uff0c\u4e00\u4e2a\u517c\u5bb9\u6a21\u5f0f\uff0c\u4e24\u4e2a\u5f00\u5173\u3002\n\u53e6\u5916\uff0c\u9898\u4e3b\u60f3\u8981\u7684\u529f\u80fd\uff0c\u5b9e\u9645\u4e0a\u662fjson schema+validation\u7684\u529f\u80fd\uff0c\u4e5f\u662ffastjson\u6682\u7f3a\u7684\u3002. var a = {1:2}\n\u65e0\u8bba\u662f\u5728js\u91cc\uff0c\u8fd8\u662f\u5728\u4e00\u822c\u7684json\u5e93\u91cc\u90fd\u662f\u53ef\u4ee5\u8bc6\u522b\u7684\uff0c\n\u60f3\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u683c\u5f0f\u4f1a\u51fa\u95ee\u9898\uff1f. \u8fd9\u4e2a\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002. can you show a testcase, thx.. I guess this json is illegal.. \u4ec0\u4e48\u7248\u672c. \u95ee\u9898\u51fa\u5728 jsonp\u65f6\u8f93\u51fa\u7684\u4e0d\u662f APPLICATION_JSON_UTF8\uff0c\n\u800c\u662fAPPLICATION_JAVASCRIPT = new MediaType(\"application\", \"javascript\");\n\u8bd5\u8bd5\u7528 FastJsonpHttpMessageConverter4  \u5427. can you add a test case for your PR\uff1f. DateTime is not a builtin class in JDK\uff0c\nIf you created it, so you could registry a Serializer for it.. fastjson dont know the type DateTime is a date type.. SerializeConfig.getGlobalInstance().put(DateTime .class, new DateCodec ());. \u4f7f\u7528\u6cdb\u578b\u5982\u679c\u5d4c\u5957\u592a\u6df1\uff0c\u786e\u5b9e\u4f1a\u51fa\u95ee\u9898\u3002\n\u5c3d\u91cf\u628a\u6cdb\u578b\u7c7b\u578b\u63a7\u5236\u5230\u5e8f\u5217\u5316\u5bf9\u8c61\u672c\u8eabor\u4e0a\u5c42\u5bf9\u8c61\u4e0a\u3002. \u4f60\u8bf4\u7684\u5f88\u5bf9\uff0c\u8fd9\u4e2a\u5c5e\u4e8e\u9057\u7559\u95ee\u9898\u3002\n\u4f46\u662f\u5982\u679c\u6539\u6210\u4ee5jsonfield\u4e3a\u51c6\uff0c\u5bf9\u4e4b\u524d\u7684\u4ee3\u7801\u6709\u5f71\u54cd\u3002. hi, \u80fd\u5426\u7ed9\u6211\u4e00\u4e2atestcase\uff0ckimmking@163.com. hi, \u80fd\u5426\u7ed9\u6211\u4e00\u4e2atestcase\uff0ckimmking@163.com. RatingDetailReadMTO code, thx.. RatingDetailReadMTO code, thx.. setter/getter ?. setter/getter ?. it's a bug. it's a bug. urlencoded\u65f6\u5e94\u8be5\u4f7f\u7528query string\u65b9\u5f0f\u63d0\u4ea4parameters. urlencoded\u65f6\u5e94\u8be5\u4f7f\u7528query string\u65b9\u5f0f\u63d0\u4ea4parameters. http://blog.csdn.net/clj198606061111/article/details/70227571. \u786e\u8ba4\u4e24\u4e2a\u73af\u8282\u4e0bjson\u5b57\u7b26\u4e32\u662f\u4e00\u6837\u7684\u3002. \u672c\u6765\u5c31\u662fcpu\u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c. \u5927\u6982\u77e5\u9053\u4f60\u7684\u610f\u601d\u4e86\u3002\n\u80fd\u95ee\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u79cd\u9700\u6c42\u5417\uff0c\u4e0d\u6309\u987a\u5e8f\u8d4b\u503c\u5bf9\u4f60\u7684\u7a0b\u5e8f\u6709\u5f71\u54cd\u5417\uff1f. \u53ef\u4ee5\u8003\u8651\u8bbe\u8ba1\uff1a\n\u7f8e\u5316\u64cd\u4f5c\u4e0d\u653e\u5230setter\u91cc\uff0c\u800c\u662f\u653e\u5230getter\u91cc\u3002. @c-s-t-z \u6ca1\u6709\u63d0\u4f9b\u673a\u5236\nfastjson\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u6548\u7387\uff0c\u5728\u987a\u5e8f\u8fd9\u4e00\u5757\u505a\u4e86\u4e00\u4e9b\u5047\u8bbe\u3002\n\u540c\u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b9e\u4f53\u7c7b\u5e94\u8be5\u662fPOJO\uff0c\u5982\u679c\u52a0\u4e00\u4e9b\u5224\u65ad\u3001\u5904\u7406\u3001\u5173\u8054\u3001\u6821\u9a8c\uff0c\n\u5e94\u8be5\u5728\u5176\u4e0a\u52a0\u4e00\u5c42\u6765\u505a\uff0c\u6bd4\u5982\u201c\u5b9e\u4f53\u7c7b\u4e2d\u4e00\u4e2a\u81ea\u5b9a\u4e49\u65b9\u6cd5(\u5982MyTest) \u201d\uff0c\n\u5728\u5176\u4e2d\u53ef\u4ee5\u6839\u636eflag\u6807\u8bc6\uff0c\u5224\u65adname\u7684\u503c\u3002. && \u4e0d\u662fjsonpath\u64cd\u4f5c\u7b26\nhttp://goessner.net/articles/JsonPath/index.html#e2.  jackson\u548cgson\u90fd\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u3002\n\u6709\u4e00\u4e2a\u601d\u8def\u5c31\u662f\uff0c\u5229\u7528\nhttps://github.com/json-path/JsonPath\n\u989d\u5916\u6dfb\u52a0fastjson\u7684provider\uff0c\u6211\u8fd1\u671f\u6765\u505a\u4e00\u4e0b\u5427\uff0c\u770b\u770b\u672c\u5468\u662f\u5426\u80fd\u505a\u51fa\u6765\u3002\n. @kevin90828 \n@wenshao . \u63a7\u5236\u6240\u6709\u7684Enum\u662f\u4e00\u4e2a\u5371\u9669\u7684\u64cd\u4f5c\u3002\n\u8fd8\u662f\u4e00\u4e2a\u4e2a\u7684\u6ce8\u518c\u6bd4\u8f83\u597d\u3002. \u6211\u7406\u89e3\u4f60\u7684\u610f\u601d\u662f\uff0cA\u7684\u4e00\u4e2a\u5b9e\u4f8ba\uff0ca.b\u5b9e\u9645\u4e0a\u662fBB\u7c7b\u578b\uff0c\u901a\u8fc7\u5b57\u6bb5\u7c7b\u578b\u53ea\u80fd\u62ff\u5230B\u7c7b\u578b\u3002\n\u4f60\u73b0\u5728\u60f3\u62ff\u5230BB\u7c7b\u578b\uff0c\u5f88\u7b80\u5355\uff1a\n\u76f4\u63a5\u53cd\u5c04a\u7684field\u5bf9\u8c61\u62ff\u5230b\uff0c\u7136\u540e\u62ffb.class\u5373\u53ef\u3002. \u8fd9\u79cd\u901a\u7528\u6027\u6539\u52a8\u5bf9api\u6709\u4fb5\u5165\u6027\uff0c\u4f1a\u5f71\u54cd\u6240\u6709\u5df2\u7ecf\u7528\u4e86\u8fd9\u79cdapi\u7684\u4ee3\u7801\u3002\n\u5efa\u8bae\u81ea\u5df1\u6309\u7167\u9700\u8981\u7684\u7c7b\u578b\uff0c\u5355\u72ec\u5904\u7406\u3002\n\u8fd9\u6837\u9700\u8981\u4f60\u628aannotation\u5199\u5230\u7c7b\u578b\u4e0a\uff0c\u800c\u4e0d\u662ffield\u4e0a\uff1b\n\u6216\u8005\u76f4\u63a5\u4e0d\u8981annotation\uff0c\u4ee3\u7801\u91cc\u5224\u65ad\u3002\n. good idea. can you provide a complete json for reproducing the case?. can you show some code for this issue?. @yijun135 \u80fd\u7ed9\u4e2a\u8f6c\u6362\u4e3anull\u7684\u4f8b\u5b50\u5417. you got it.\nwhen you tell fastjson a map.class, it donn't understand you want a long type key.. JSON.parse(\"00130\",String.class);. you can use jsonfield.\n. \u6ca1\u770b\u61c2\u3002. \u670d\u52a1\u5668\u7aef\u6362\u6210fastjson. \u6211\u4eec\u4e00\u822c\u90fd\u662f\u8bbe\u7f6e\u62109999-12-31\n@PuGuanyu . @FastJsonView(\n            include = {@FastJsonFilter(clazz = Company.class,props ={\"id\",\"name\"})}). \u8bd5\u8bd5true\uff0c\u800c\u4e0d\u662fTrue. \u770b\u8d77\u6765\u662fbug.  JSON.parseObject(response, new TypeReference>() {});. 1\u3001fastjson\u5bf9xss\u5b89\u5168\u505a\u4e86\u5904\u7406\n2\u3001\u53ef\u4ee5\u8003\u8651\u8d4b\u503c\u4ee5\u540e\u5904\u7406. can you show some fake codes  for your idea?. I think in the second case, fastjson will work well.. response\u91cc\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f. \u8fd9\u4e2abug\u5f88\u6709\u610f\u601d\u3002\u9700\u8981\u52a0\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u662fmap\u91cc\u7684key\uff0c\u76f4\u63a5tostring\u3002\n\u5efa\u8bae\u5148\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u3002\n. UserCourse\u4ee3\u7801\u53d1\u4e00\u4e0b. \u5e8f\u5217\u5316\u8fd8\u662f\u53cd\u5e8f\u5217\u5316\uff1f\ncan you show a testcase\uff1f. \u5927\u91cf\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u6548\u7387\u672c\u6765\u5c31\u4e0d\u9ad8\u3002\n\u5982\u679c\u662f\u5c11\u91cf\u7684key\uff0c\u53ef\u4ee5\u4f7f\u7528jsonpath\u64cd\u4f5c\u3002\n\u5982\u679c\u5927\u91cf\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7528filter\u64cd\u4f5c\u3002\n\u5982\u679c\u53ea\u6709\u4e00\u5c42\uff0c\u53ef\u4ee5to JSONObject\uff0c\u7136\u540e\u83b7\u53d6\u91cc\u9762\u7684key\uff0c\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684JSONObject\uff0c\u5728toJSONString. \u5e8f\u5217\u5316\u65f6\u53d1\u751f\u7684\uff0c\u8fd8\u662f\u53cd\u5e8f\u5217\u5316\u53d1\u751f\u7684\uff1f. DOM\u5bf9\u8c61\u89e3\u6790\u7684\u65f6\u5019\uff0c\u4f1a\u5305\u542b\u5f88\u591a\u5b50\u5c5e\u6027or\u96c6\u5408\u91cc\u6709\u81ea\u8eab\u5f15\u7528\u3002\n\u5efa\u8bae\u4e0d\u8981\u7528 DisableCircularReferenceDetect. ParserConfig.getGlobalInstance().putDeserializer(String.class, new TrimStringDeserializer());\n\u8fd9\u4e2a\u662f\u5168\u5c40\u7684\u3002\n. Can you show more codes ?. html\u91cc\u7684\"\u6ca1\u6709\u8f6c\u4e49. @JohnBergqvist how to generate deeptests?. new CustomAttachment\nset fields and properties. the parser can't know a json should be processed as a CustomAttachment object when you pass a MsgAttachment type to it.. you can use this: \nMsgData<T extends MsgAttachment>\nalso see:\nJSON.parseObject(json, new TypeReference<MsgData<CustomAttachment>>() {});. @shiningvon \"inspections\u4f20\u5165\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\u201c\u201d\uff0c\u5e94\u5f53\u88ab\u89e3\u6790\u4e3a\u7a7a\u6570\u7ec4\"\uff0c\u8fd9\u4e2a\u4e5f\u4e0d\u662f\u89c4\u8303\u64cd\u4f5c\u3002\n@wenshao \u6e29\u5c11\u770b\u770b\uff0c\u5176\u4ed6\u60c5\u51b5\u770b\u8d77\u6765\u6bd4\u8f83\u8be1\u5f02\u3002. can you show a testcase?. can you show a testcase?. guava\u7684map\uff0c\u6ca1\u6709\u5b9e\u73b0java\u7684map\u63a5\u53e3\uff0c\u9700\u8981\u5355\u72ec\u5904\u7406\u3002\n\u5efa\u8bae\u5904\u7406\u6210Hashmap\uff0c\u518d\u8f6c\u6210MultiMap. \u770b\u8d77\u6765\u662f\u4e2abug\uff0c\u5e94\u8be5\u8fd4\u56de[2]. not necessary,it's simple and enough to provide two method in your application codes.. ",
    "kunwang": "\u975e\u5e38\u611f\u8c22\u4f60\u7684\u5feb\u901f\u56de\u590d\uff0c\u590d\u73b0\u6b65\u9aa4\u5982\u4e0b\uff1a\npublic static void main(String [] args) {\n        String content = \"{\\\"data\\\":\\\"sfasfasdfasdfas\\r\" +\nString.valueOf((char)160) + \"\\rasdfasdfasd\\\"}\";\n        JSONObject jsonObject = JSON.parseObject(content);\n        System.out.println(jsonObject);\n    }\n2014-04-08 23:42 GMT+08:00 kimmking notifications@github.com:\n\n\u80fd\u5426\u53d1\u4e2atestcase\n\u53d1\u81ea\u6211\u7684 iPhone\n\n\u5728 2014\u5e744\u67088\u65e5\uff0c21:54\uff0ckunwang notifications@github.com \u5199\u9053\uff1a\n\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u6c42\u4fee\u590d\u3002\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/alibaba/fastjson/issues/125#issuecomment-39864037\n.\n. \n",
    "liye71023326": "\u6211\u4f7f\u75281.2.7\u7248\u672c\u8fd8\u6709\u8fd9\u4e2a\u95ee\u9898\u5462\n. ",
    "vicwing": "\u5927\u795e.\u8bf4\u660e\u6587\u6863\u7684\u5730\u5740\u65e0\u6cd5\u8fdb\u5165.\u7ed9\u4e2a\u6709\u6548\u7684\u8c22\u8c22\n. ",
    "stepinto": "\u4ee5\u4e0b\u4e3a\u8c03\u7528\u4ee3\u7801\uff1a\nJSONObject s = JSON.parseObject(\"{\\\"key\\\":\\\"\\\\\\\\\\\\\\\\\\\\f\\\\f\\u0090\\\"}\");\n    System.out.println(\"s.toJSONString() = \" + s.toJSONString());\n\u8fd9\u662f\u4e00\u4e2a\u56de\u9000\uff0c\u6211\u7528 \"git bisect\"  \u4e00\u4e0b\uff0c\u662f fc3c5c576b2d7a7f980928446849d178d5133b04 \u5f15\u5165\u7684\u3002\n. ",
    "hye": "@longforfreedom  http://repo1.maven.org/maven2/com/alibaba/fastjson/1.1.36/ \n. ",
    "ccvcd": "\u80fd\u4e0d\u80fd\u628ahttp://code.alibabatech.com/wiki/display/FastJSON/Examples\u7684\u6587\u6863\u6574\u7406\u5230github\u4e0a\uff0c\u6587\u6863\u592a\u5c11\u4e86\uff0c\n. ",
    "pepov": "This is actually a bugfix, please consider to release it asap. Would you not, please let me know! \n. ",
    "yl23250": "\u6211\u4e5f\u78b0\u5230\u540c\u6837\u7684\u95ee\u9898\n```\nprivate String businessScop;\nprivate Date applicationDate;\nprivate Integer pStatus;//\u5185\u5bb9\u4e0d\u4e3a\u7a7a\uff0c\u4e22\u5931\nprivate Date createDate;\nprivate String creater;\nprivate Date updateDate;\nprivate String pName;//\u5185\u5bb9\u4e0d\u4e3a\u7a7a\uff0c\u4e22\u5931\nprivate String pUrl;//\u5185\u5bb9\u4e0d\u4e3a\u7a7a\uff0c\u4e22\u5931\nprivate Integer pLeaf;//\u5185\u5bb9\u4e0d\u4e3a\u7a7a\uff0c\u4e22\u5931\n```\n. \u5947\u602a\u4e86\n\u52a0\u4e86\u4e00\u4e2a\u8fd9\u4e2a            <bean class=\"org.springframework.http.converter.StringHttpMessageConverter\">\n\u7f16\u8bd1\u4e0b\u53c8\u597d\u4e86\u3002\u53ef\u80fd\u662fidea\u53d8\u5f02\u5931\u8d25\u5427\u3002\u4ee5\u540e\u518d\u770b\u770b\u3002\u9047\u5230\u6709\u7c7b\u4f3c\u60c5\u51b5\u4e5f\u6307\u6559\u4e0b\uff0c\u8c22\u8c22\n. SerializerFeature \u5bf9\u4e8e\u8fd9\u4e2a \u679a\u4e3e\uff0c\u80fd\u5426\u628a\u4e2d\u6587\u89e3\u91ca\u8d34\u51fa\u3002\u6211\u6ca1\u5730\u65b9\u627e\u554a\n. @wenshao \n. @VictorZeng  \u9053\u54e5\uff0c\u6211\u611f\u89c9\u6211\u548c#671\u4e0d\u5168\u4e00\u6837\u554a\u3002\u6211\u8fd9\u91cc\u662f\u8fd4\u56de status = 406   \u3002\u518d\u4e00\u4e2a\u662f\u3002\u6211\u662f\u8ddf\u7740wiki\u505a\u4e0b\u6765\u3002\n<property` name=\"supportedMediaTypes\">\n                <list>\n                    <value>application/json</value>\n                </list>\n</property>\n\u8fd9\u6bb5\u4ee3\u7801\u6709\u95ee\u9898\u5f15\u8d77\u7684\u3002\u800c\u4e14\u6211jquery ajax\u7684dataType\u4e5f\u4e00\u76f4\u6709\u201cjson\u201d\u3002\n\u6211\u4ece1.1*\u7684\u7248\u672c\u5f00\u59cb\u7528\u4e86\u3002\u6211\u4e00\u76f4\u8bb0\u5f97supportedMediaTypes\u8fd9\u4e2a\u662f\u8fd4\u56de\u7ed9\u524d\u53f0\u7528\u7684\u6587\u672c\u7c7b\u578b\u554a\n\u6211\u8981\u600e\u4e48\u6539\u5462\u3002\n\u518d\u8005\uff0c\u5c31\u662f\u8ddf\u7740wiki\u4e0a\u7684spring4.2+\u914d\u7f6e\u6709\u95ee\u9898\u3002\u3002\u5e0c\u671b\u66f4\u65b0\u4e0b\n. ",
    "peiliping": "1.1.41 \u8c8c\u4f3c\u6ca1\u4e22\u3002 \u662f\u4e0d\u662f\u4e4b\u524d\u7684\u7248\u672c\u6709bug\n. \u96be\u9053 class field\u8981\u5199\u6210\u4e2d\u6587\u4e86\uff1f  \u8fd9 \u8fd9 \u3002\u3002\u3002\n. ",
    "Xztty": "\u8865\u5145\uff1a\u6d4b\u8bd5\u7248\u672c\u4e3a\n<dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.1.39</version>\n        </dependency>\n. \u4f7f\u75281.1.41\u6d4b\u8bd5\u901a\u8fc7\u4e86\n. ",
    "yezigl": "\u5e76\u4e14\u5bf9ascii\u5927\u4e8e127\u7684\u5b57\u7b26\u5904\u7406\u8fd8\u662f\u6709\u95ee\u9898\n. ",
    "gairyoung": "\u73b0\u5728\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\n. \u770b\u4e86\u6e90\u4ee3\u7801 \u597d\u50cf\u8fd9\u4e2a\u662f\u6709\u95ee\u9898\u7684\u5427.\n if (isEnabled(SerializerFeature.WriteEnumUsingToString)) {\n            if (isEnabled(SerializerFeature.UseSingleQuotes)) {\n                write('\\'');\n                write(value.name());\n                write('\\'');\n                write(c);\n} else {\n            write('\\\"');\n            write(value.name());\n            write('\\\"');\n            write(c);\n        }\n        return;\n    }\n. ",
    "itboyspg": "\u5728enum\u7c7b\u51fa\u73b0\u4e0d\u8fde\u7eed\u503c\u65f6\uff0cfastjson\u51fa\u73b0\u5e8f\u5217\u5316\u9519\u8bef\u3002\n\u8fd9\u4e2a\u95ee\u9898\u4fee\u590d\u4e86\u4e48\uff1f\u6211\u75281.1.43\u7248\u672c\u8fd8\u662f\u6709\u95ee\u9898\n. ",
    "roaporl": "PrettyFormat\u4f7f\u7528\u7684 \\t \u7f29\u8fdb\uff0c\u53ef\u4e0d\u53ef\u4ee5\u6307\u5b9a\u7a7a\u683c\u6570\u76ee\n. ",
    "warrior701": "\u53ef\u4ee5\u7ee7\u627fFastJsonHttpMessageConverter \uff0c\u91cd\u5199writeInternal\u65b9\u6cd5\uff0c\u81ea\u5df1\u60f3\u600e\u4e48\u8fc7\u6ee4\u90fd\u884c\u3002\u3002\u3002\n. fastjson\u53ef\u4ee5\u5728spring mvc\u91cc\u9762\u914d\u7f6e\u7684\uff0c\u770b\u4e0b\u6574\u5408\u8bf4\u660e\u5427\uff01\n. \u90a3\u4f60\u5c31\u81ea\u5b9a\u4e49\u4e2a\u6ce8\u89e3\u53bb\u8fc7\u6ee4\u597d\u4e86\uff0c\u4e0d\u662f\u4ec0\u4e48\u96be\u4e8b\u5427\uff1b\u81f3\u4e8e\u201ctoJSONString\u8fd9\u4e2a\u65b9\u6cd5\u6709\u6ca1\u6709\u591afilter\u201d\uff0c\u6587\u6863\u627e\u4e0d\u5230\u5c31\u770b\u4e0b\u6e90\u7801\u5427\u3002\n. ",
    "storezhang": "\u8fd9\u4e2a\u6211\u5df2\u7ecf\u505a\u4e86\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f\u5982\u4f55\u548cSpringMVC\u66f4\u597d\u7684\u7ed3\u5408\u8d77\u6765\u3002\u53e6\u5916\uff0cPropertyFilter\u5bf9\u5d4c\u5957\u5bf9\u8c61\u4e0d\u7ba1\u7528\u5462\u3002\n. \u5df2\u7ecf\u6574\u5408\u4e86\uff0c\u53ef\u80fd\u4f60\u6ca1\u660e\u767d\u6211\u7684\u610f\u601d\uff0c\u6211\u5df2\u7ecf\u7ee7\u627f\u4e86FastJsonHttpMessageConverter\uff0c\u4e5f\u6269\u5c55\u4e86JSONP\u7684\u8f93\u51fa\uff0c\u6211\u73b0\u5728\u662f\u60f3\u600e\u4e48\u80fd\u4f7f\u7528@Annotation\u8fd9\u79cd\u8bd5\u4e3a\u52a8\u6001\u5b9a\u5236\u8f93\u51fa\u3002\nJSON.toJSONString\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u591afilter\u7684\u7248\u672c\u5462\u3002\n. \u5b9a\u4e49\u6ce8\u89e3\u5012\u4e0d\u662f\u96be\u4e8b\uff0c\u4f46\u662f\u627e\u4e0d\u5230\u529e\u6cd5\u5728writeInternal\u65b9\u6cd5\u91cc\u5f97\u5230\u914d\u7f6e\u7684\u6ce8\u89e3\u3002\n. \u8bf7\u5ba1\u6838\u4e0b\u3002\n. ",
    "laiweiwei": "\u6211\u4e5f\u78b0\u5230\u8fd9\u4e2aBUG\u4e86\uff0c\u600e\u4e48\u5b98\u65b9\u6ca1\u4eba\u7406\u4f1a\u7684\uff1f\uff1f\uff1f\uff1f\uff1f\n. ",
    "qifanyang": "\u6ca1\u95ee\u9898\u628a,\u4f60\u4eec\u7528\u7684\u4ec0\u4e48\u7248\u672c,\u7528\u6700\u65b0\u7684\u8bd5\u8bd5\n. \u662f\u6700\u65b0\u7684\u7248\u672c,\u8fd9\u4e2a\u95ee\u9898\u8ddf\u7248\u672c\u6ca1\u5173\u7cfb\u5427,\u662f\u4e00\u4e2a\u7c7b\u5b57\u6bb5\u592a\u591a\u4e86,\u7528asm\u751f\u6210\u7684\u4ee3\u7801\u8d85\u8fc7\u4e86java\u65b9\u6cd5\u6700\u5927\u7684\u957f\u5ea665535\n584874132@qq.com\n\u00a0From:\u00a0YakoDate:\u00a02014-07-03\u00a010:56To:\u00a0alibaba/fastjsonCC:\u00a0qifanyangSubject:\u00a0Re: [fastjson] fastjson serialize object  more than 400+field errro (#174)\u8bf7\u95ee\u4f60\u7528\u7684\u662f\u90a3\u4e2a\u7248\u672c\uff1f\u6709\u8bd5\u8fc7\u6700\u65b0\u7248\u672c\u6ca1\u6709\uff1f\n\u2014\nReply to this email directly or view it on GitHub.\n.  SerializeConfig config = new SerializeConfig();\nconfig.setAsmEnable(false);//\u5b57\u6bb5\u8fc7\u591a,\u9700\u5173\u95edasm\n\u5e0c\u671b\u4f18\u5316\u4e0b,\u6211\u6709\u4e00\u4e2a\u7c7b800\u4e2a\u5b57\u6bb5,\u60f3\u4f7f\u7528asm\u7279\u6027,\u5e0c\u671b\u53ef\u4ee5\u4fee\u6539\u4e2a\u7248\u672c\u628a\u6bcf300\u4e2a(\u53ef\u914d\u7f6e)\u5b57\u6bb5\u5bf9\u5e94\u4e00\u4e2awrite\u65b9\u6cd5,\u5982\u4f7f\u7528\u53cd\u5c04\u7684\u8bdd\u548cjson-lib\u901f\u5ea6\u5dee\u4e0d\u591a,\u5c31\u6ca1\u4f18\u52bf\u4e86\n. \u68c0\u67e5\u4e86,\u65b9\u6cd5\u540d\u5b57\u6b63\u786e,\u662f\u7528\u7684eclipse\u81ea\u52a8\u751f\u6210\u7684set get\u65b9\u6cd5,\u62a5\u9519\u5982\u4e0b\nException in thread \"main\" com.alibaba.fastjson.JSONException: create asm serializer error, class class fastjson.test.Beanb\n```\nat com.alibaba.fastjson.serializer.SerializeConfig.createJavaBeanSerializer(SerializeConfig.java:106)\nat com.alibaba.fastjson.serializer.JSONSerializer.getObjectWriter(JSONSerializer.java:524)\nat com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:366)\nat com.alibaba.fastjson.JSON.toJSONString(JSON.java:418)\nat com.alibaba.fastjson.JSON.toJSONString(JSON.java:406)\nat fastjson.test.TestFastJosn.main(TestFastJosn.java:13)\n```\nCaused by: java.lang.ClassFormatError: Invalid method Code length 149233 in class file Serializer_1\n```\nat java.lang.ClassLoader.defineClass1(Native Method)\nat java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)\nat java.lang.ClassLoader.defineClass(ClassLoader.java:615)\nat com.alibaba.fastjson.util.ASMClassLoader.defineClassPublic(ASMClassLoader.java:42)\nat com.alibaba.fastjson.serializer.ASMSerializerFactory.createJavaBeanSerializer(ASMSerializerFactory.java:278)\nat com.alibaba.fastjson.serializer.ASMSerializerFactory.createJavaBeanSerializer(ASMSerializerFactory.java:36)\nat com.alibaba.fastjson.serializer.SerializeConfig.createASMSerializer(SerializeConfig.java:77)\nat com.alibaba.fastjson.serializer.SerializeConfig.createJavaBeanSerializer(SerializeConfig.java:101)\n... 5 more\n```\n584874132@qq.com\n\u00a0From:\u00a0YakoDate:\u00a02014-07-28\u00a014:25To:\u00a0alibaba/fastjsonSubject:\u00a0Re: [fastjson] FastJson 1.1.38 (#198)\u68c0\u67e5\u4f60\u7684getter\u548csetter\u65b9\u6cd5\u662f\u5426\u548c\u5c5e\u6027\u540d\u5339\u914d\u3002\n\u7c7b\u4f3c\uff1a\n```\n    public String getPName() {\n    return pName;\n\n}\n\npublic void setPName(String pName) {\n\n    this.pName = pName;\n\n}\n\n```\n\u5982\u679c\uff0cgetter\u548csetter\u6b63\u786e\uff0c\u8fd8\u4e0d\u80fd\u6b63\u5e38\u5e8f\u5217\u5316\uff0c\u8054\u7cfb\u6211~\n\u2014\nReply to this email directly or view it on GitHub.\n. \u6211\u8bb0\u5f97fastjson\u662f\u7528asm\u81ea\u52a8\u751f\u6210write\u65b9\u6cd5,\u8fd9\u4e2a\u6ca1\u6709\u4f7f\u7528\u53cd\u5c04\u5427,\u6240\u4ee5set get\u65b9\u6cd5\u6ca1\u6709\u4e5f\u6ca1\u5173\u7cfb\u5427\n584874132@qq.com\n\u00a0From:\u00a0YakoDate:\u00a02014-07-28\u00a014:25To:\u00a0alibaba/fastjsonSubject:\u00a0Re: [fastjson] FastJson 1.1.38 (#198)\u68c0\u67e5\u4f60\u7684getter\u548csetter\u65b9\u6cd5\u662f\u5426\u548c\u5c5e\u6027\u540d\u5339\u914d\u3002\n\u7c7b\u4f3c\uff1a\n```\n    public String getPName() {\n    return pName;\n\n}\n\npublic void setPName(String pName) {\n\n    this.pName = pName;\n\n}\n\n```\n\u5982\u679c\uff0cgetter\u548csetter\u6b63\u786e\uff0c\u8fd8\u4e0d\u80fd\u6b63\u5e38\u5e8f\u5217\u5316\uff0c\u8054\u7cfb\u6211~\n\u2014\nReply to this email directly or view it on GitHub.\n. \u4e00\u4e2a\u7c7b\u7684\u5b57\u6bb5\u5f88\u591a,\u6bd4\u59821000\u4e2a\n584874132@qq.com\n\u00a0\u53d1\u4ef6\u4eba\uff1a\u00a0Yako\u53d1\u9001\u65f6\u95f4\uff1a\u00a02014-07-28\u00a013:54\u6536\u4ef6\u4eba\uff1a\u00a0alibaba/fastjson\u4e3b\u9898\uff1a\u00a0Re: [fastjson] Fastjson\u53cd\u5e8f\u5217\u5316\u9519\u8bef\uff0cdouble\u7c7b\u578b\u6570\u636e\u3002 (#199)\u80fd\u8865\u5145\u8bf4\u660e\u8bd5\u4e00\u4e0b\uff0c\u5982\u4f55\u91cd\u73b0\u5417\uff1f\u6211\u8fd9\u91cc\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u90fd\u672a\u91cd\u73b0\n\u2014\nReply to this email directly or view it on GitHub.\n. \u6709\u4e00\u4e9b\u662f\u6d4b\u8bd5\u7b2c\u4e09\u65b9\u7684json,\u5f53\u7136\u8981\u7528\u90a3\u4e9b, \u4f60\u6253\u5305\u9519\u4e86\n584874132@qq.com\n\u00a0\u53d1\u4ef6\u4eba\uff1a\u00a0hersbit\u53d1\u9001\u65f6\u95f4\uff1a\u00a02014-07-24\u00a013:26\u6536\u4ef6\u4eba\uff1a\u00a0alibaba/fastjson\u4e3b\u9898\uff1a\u00a0[fastjson] fastjson\u6e90\u7801\u4e0b\u8f7d\u7528maven\u6253\u5305\u5f02\u5e38 (#200)\u5f02\u5e38\u4fe1\u606f\uff1a\nfastjson\u6e90\u7801\u6709\u4f9d\u8d56spring\u5417\uff1f\nFailed to execute goal on project fastjson: Could not resolve dependencies for project com.alibaba:fastjson:jar:1.1.41: The following artifacts could not be resolved: org.springframework:spring-core:jar:3.2.2.RELEASE, org.springframework:spring-expression:jar:3.2.2.RELEASE, org.springframework:spring-web:jar:3.2.2.RELEASE, junit:junit:jar:4.11, org.hamcrest:hamcrest-core:jar:1.3, com.fasterxml.jackson.core:jackson-databind:jar:2.2.2, com.fasterxml.jackson.core:jackson-annotations:jar:2.2.2, cglib:cglib-nodep:jar:2.2.2, com.googlecode.json-simple:json-simple:jar:1.1, net.sf.json-lib:json-lib:jar:jdk15:2.4, commons-beanutils:commons-beanutils:jar:1.8.0, net.sf.ezmorph:ezmorph:jar:1.0.6, xml-apis:xml-apis:jar:1.3.03, xalan:xalan:jar:2.7.0, com.google.code.gson:gson:jar:2.2.4, net.minidev:json-smart:jar:1.1.1, com.owlike:genson:jar:0.97, org.clojure:clojure:jar:1.5.1, org.ow2.asm:asm-tree:jar:4.0, org.ow2.asm:asm-commons:jar:4.0, org.ow2.asm:asm:jar:4.0, org.ow2.asm:asm-analysis:jar:4.0, org.javassist:javassist:jar:3.18.0-GA: Could not transfer artifact org.springframework:spring-core:jar:3.2.2.RELEASE from/to ibiblio (http://mirrors.ibiblio.org/maven2/): Access denied to: http://mirrors.ibiblio.org/maven2/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar , ReasonPhrase:Forbidden. -> [Help 1]\n\u2014\nReply to this email directly or view it on GitHub.\n. \u4f60\u76f4\u63a5\u7528\u6253\u5305\u597d\u4e86\u7684\u554a,\u5728maven\u4ed3\u5e93\u91cc\u9762\u4e0b\u8f7d\u5427\n584874132@qq.com\n\u00a0\u53d1\u4ef6\u4eba\uff1a\u00a0hersbit\u53d1\u9001\u65f6\u95f4\uff1a\u00a02014-07-24\u00a013:33\u6536\u4ef6\u4eba\uff1a\u00a0alibaba/fastjson\u6284\u9001\uff1a\u00a0qifanyang\u4e3b\u9898\uff1a\u00a0Re: [fastjson] fastjson\u6e90\u7801\u4e0b\u8f7d\u7528maven\u6253\u5305\u5f02\u5e38 (#200)\u8bf7\u95ee\u6211\u8981\u600e\u4e48\u6837\u6253\u5305\u5462\uff1f\n\u8c22\u8c22\uff01\n\u2014\nReply to this email directly or view it on GitHub.\n. {\"1\":\"hello\"}\u4e0d\u8be5\u662f\u8fd9\u6837\u5b50\u4e48,\u4e0d\u77e5\u9053json\u662f\u600e\u4e48\u89c4\u8303\u7684,\u53ea\u8981\u80fd\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u8bdd\u5c31ok\u4e86\u5427,\u5b9e\u5728\u4e0d\u884c\u53bb\u770b\u6e90\u7801\u554a,\u6539\u4e0b\u8f93\u51fa\u683c\u5f0f\n\u53d1\u4ef6\u4eba\uff1a\u00a0wensong\u53d1\u9001\u65f6\u95f4\uff1a\u00a02014-08-08\u00a012:58\u6536\u4ef6\u4eba\uff1a\u00a0alibaba/fastjson\u4e3b\u9898\uff1a\u00a0Re: [fastjson] \u5e8f\u5217\u5316Map \u7c7b\u578b\u5bf9\u8c61\u540e\u7684json\u4e0d\u89c4\u8303 (#203)@ptma \u6211\u8fd9\u91cc\u8fd8\u662f\u4e0d\u884c\uff0c\u4f7f\u7528\u7248\u672c\u662f1.1.41\npublic static void main(String[] args) {\n    Map<Integer, String> map = new HashMap<Integer, String>();\n    map.put(1, \"hello\");\n    System.out.println(JSON.toJSONString(map, SerializerFeature.QuoteFieldNames));\n    System.out.println(JSON.toJSON(map));\n}\n\u7ed3\u679c\u662f\n{1:\"hello\"}\n{\"1\":\"hello\"}\n\u2014\nReply to this email directly or view it on GitHub.\n. \u53cd\u5e8f\u5217\u5316\u4e0d\u662f\u7528\u6ce8\u89e3\u63a7\u5236\u7684,\u91c7\u7528asm\u53cd\u5e8f\u5217\u5316\u6709\u5f88\u591a\u5224\u65ad\u6761\u4ef6,\u6bd4\u5982\u5b57\u6bb5\u6570\u91cf\u591a\u4e8e200\u4f1a\u81ea\u52a8\u5173\u95edasm,\n\u624b\u52a8\u5173\u95edasm\u8bf7\u4f7f\u7528 ParserConfig.getGlobalInstance().setAsmEnable(false);,\u6216\u8005\u7528\u4e2a\u5bf9\u8c61\n. \u4f60\u81ea\u5df1\u6539\u6e90\u7801\u8bd5\u8bd5\u5427,\u6211\u53d1\u73b0\u90a3\u91cc\u6709\u70b9\u95ee\u9898 @zhzhsx \n. \u95ee\u9898383\u4e5f\u662f\u4f60\u8fd9\u4e2a\u95ee\u9898\n\u4f7f\u7528:ParserConfig.getGlobalInstance().setAsmEnable(false);\u5173\u95edasm.\u5373\u53ef\u89e3\u51b3\n\u4f46\u8fd9\u6837\u5b50\u4e0d\u4f18\u96c5,\u7814\u7a76asm\u4e2d\n. fastjosn\u5e26\u7c7b\u540d\u7684json\u683c\u5f0f\u662f\u81ea\u5df1\u7279\u6709\u7684\u683c\u5f0f,\u4e0d\u662f\u6807\u51c6\u7684json\u683c\u5f0f, \u5982\u679c\u5176\u5b83\u5730\u65b9\u9700\u8981\u4f7f\u7528\u5e8f\u5217\u5316\u51fa\u6765\u7684json\u6570\u636e,\u4f60\u4e0d\u5e94\u8be5\u4f7f\u7528SerializerFeature.WriteClassName, \u8fd9\u79cd[\"java\",\"oracle\"] \u5728json\u91cc\u8868\u793a\u6570\u7ec4\u5728java\u91cc\u5bf9\u5e94List,\u4e0d\u662fSet, \u4e3a\u4e86\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u6b63\u786e\u6062\u590d\u6240\u4ee5\u4f1a\u52a0\u4e0aSet\n\u6bd4\u5982\u4ee5\u4e0b\u4ee3\u7801\n``` java\n  List ll = new ArrayList();\n        ll.add(3);\n        ll.add(33);\n        System.out.println(JSON.toJSONString(ll, SerializerFeature.WriteClassName));\n    Set<Integer> ss = new HashSet<Integer>();\n    ss.add(4);\n    ss.add(55);\n\n    System.out.println(JSON.toJSONString(ss, SerializerFeature.WriteClassName));\n\n```\n\u8f93\u51fa:\n[3,33]\nSet[4,55]\n\u4e3a\u4e86\u53cd\u5e8f\u5217\u5316\u6240\u4ee5\u52a0\u4e0a\u4e86Set, \u6570\u7ec4\u5c31\u4e0d\u7528\u52a0List\n. \u8fd9\u4e2a\u95ee\u9898\u662f\u751f\u6210\u53cd\u5e8f\u5217\u5316\u7684ASM\u4ee3\u7801\u6709\u95ee\u9898,\u624b\u52a8\u751f\u6210asm\u4ee3\u7801\u5f88\u7e41\u7410, \u5728JDK8\u4e0a\u5f00\u542fasm\u6548\u7387\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u63d0\u9ad8.\n\u4f7f\u7528:ParserConfig.getGlobalInstance().setAsmEnable(false);\u5173\u95edasm.\u5373\u53ef\u89e3\u51b3\n\u4f60\u7684\u4ee3\u7801\u5728\u53cd\u5e8f\u5217\u5316\u4e4b\u524d\u8bbe\u7f6e\u4e2a\u5168\u5c40\u7684\u5427,\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5c40\u90e8\u7684.\n:ParserConfig.getGlobalInstance().setAsmEnable(false);\n ts = JSON.parseObject(jsonStr, TestClass.class);\n\u51c6\u5907\u7814\u7a76\u4e0bfastjson,,\u5b98\u65b9\u4e0d\u4fee\u590d, \u6211\u6765\u8bd5\u8bd5\n. \u6211\u7684\u7406\u89e3\u662f\u8dd1\u7b2c\u4e00\u6b21,asm\u521b\u5efa\u5b57\u8282\u7801\u82b1\u8d39\u65f6\u95f4\u591a.\u7b2c\u4e00\u6b21\u521b\u5efa\u4f1a\u653e\u5165IdentityHashMap\u7f13\u5b58,\u7b2c\u4e8c\u6b21\u76f4\u63a5\u4f7f\u7528.\n\u4f46\u662f\u6211\u7684\u6d4b\u8bd5\u4f7f\u7528\u4e00\u4e2a\u5e26\u6709200\u5b57\u6bb5\u7684\u7c7b\u8fd0\u884c\u51e0\u6b21,\u5728JDK8\u4e2d\u5f00\u542fasm\u82b1\u8d39\u5927\u6982\u662f\u5173\u95ed\u7684\u4e24\u500d,\u4f30\u8ba1\u662fJDK\u5bf9\u53cd\u5c04\u505a\u4e86\u4f18\u5316,\u6682\u65f6\u6ca1\u53bb\u8bfb\u6e90\u7801.\n\u4e0b\u9762\u662f\u6d4b\u8bd5\u4ee3\u7801:\n``` java\n        SerializeConfig config = new SerializeConfig();\n        config.setAsmEnable(true);\n        long start = System.currentTimeMillis();\n        JSON.toJSONString(new _200FieldsBean(), config);\n        JSON.toJSONString(new _200FieldsBean(), config);\n        JSON.toJSONString(new _200FieldsBean(), config);\n        JSON.toJSONString(new _200FieldsBean(), config);\n        JSON.toJSONString(new _200FieldsBean(), config);\n        JSON.toJSONString(new _200FieldsBean(), config);\n        System.out.println(\"open asm cost timeMillis: \" + (System.currentTimeMillis() - start) + \"ms\");\n//open asm cost timeMillis: 218ms\n    SerializeConfig config = new SerializeConfig();\n    config.setAsmEnable(false);\n    long start = System.currentTimeMillis();\n    JSON.toJSONString(new _200FieldsBean(), config);\n    JSON.toJSONString(new _200FieldsBean(), config);\n    JSON.toJSONString(new _200FieldsBean(), config);\n    JSON.toJSONString(new _200FieldsBean(), config);\n    JSON.toJSONString(new _200FieldsBean(), config);\n    JSON.toJSONString(new _200FieldsBean(), config);\n    System.out.println(\"close asm cost timeMillis: \" + (System.currentTimeMillis() - start) + \"ms\");\n\n//close asm cost timeMillis: 112ms;\n```\nbean\u91cc\u9762\u662f200\u4e2aint\u5b57\u6bb5\n. metaspace oom? \u4f30\u8ba1\u662ffastjson\u521b\u5efa\u5b57\u8282\u7801\u5360\u7528\u4e86\u592a\u591ametaspace, \u4f60\u628a\u7a7a\u95f4\u8bbe\u7f6e\u5927\u4e00\u4e9b\u5c31\u4e0d\u4f1aOOM\u4e86\n. [Loaded Serializer_3768 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n\u4f60\u8fd9\u4e2a\u4f30\u8ba1\u662f\u5728\u4e0d\u505c\u7684\u521b\u5efa\u5b57\u8282\u7801,fastjson\u7f13\u5b58\u7684\u5b57\u8282\u7801\u6ca1\u6709\u4f7f\u7528\u5230,\u4f60\u628aJDK\u7248\u672c\u7f16\u7a0b7\u6216\u80056\u8bd5\u8bd5\u5427,\u7136\u540e\u518d\u53bb\u770b\u4e0bjdk8 metaspace\u7684\u6a21\u578b\u8fd9\u4e9b, \u6211\u5bf9jdk8 metaspace\u4e5f\u4e0d\u4e86\u89e3\n. \u6dfb\u52a0\u4e86TestCase, \u7ed9\u51fa\u4e86\u6d4b\u8bd5\u8f93\u51fa\n. \u8fd9\u4e2a\u53ef\u4ee5\u52a0,\u9700\u8981\u8bb0\u5f55\u5e8f\u5217\u5316\u4e86\u54ea\u4e9bkey,\u6709\u91cd\u590d\u5c31\u62a5\u9519\n. \u8be5\u8fd9\u4e48\u7528Def\u8981\u52a0\u6cdb\u578b\n``` java\n public static class Def extends ArrayList { }\npublic static void main(String[] args){\n        Def def = new Def();\n        User user = new User();\n        def.add(user);\n        String defStr = JSON.toJSONString(def);\n    //\u8be5\u8fd9\u4e48\u7528\n    Def<?> _def = JSON.parseObject(defStr, new TypeReference<Def<User>>() {});\n    Object o = _def.get(0);   //\u8fd9\u91cc\u5f97\u5230\u7684\u662fJSONObject\uff0c\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2aUser\u554a\n    System.out.println(\"end\");         \n}\n\n```\n. @theantway  \u5173\u4e8e:\u5982\u679c\u8c03\u7528\u53ef\u80fd\u4f1a\u51fa\u9519(\u6bd4\u5982\u72b6\u6001\u68c0\u67e5\u51fa\u9519)?\u4f60\u53ef\u4ee5\u4fee\u6539\u7b2c\u4e09\u65b9\u7684\u6e90\u7801\u4e0d\u5462?\u53ef\u4ee5\u7684\u8bdd\n\u5728\u9700\u8981\u5e8f\u5217\u5316\u5f97\u7c7b\u4e0a\u6dfb\u52a0@JSONType(ignores = {\"value\"})\n\u4f60\u6ca1\u6cd5\u4fee\u6539\u6e90\u7801\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801,ignoreFieldName\u5bf9\u5e94\u4f60\u7684XXX\njava\n String defStr = JSON.toJSONString(def, new PropertyPreFilter() {\n            public boolean apply(JSONSerializer serializer, Object source, String name) {\n                if (\"ignoreFieldName\".equals(name)) {\n                    return false;\n                }\n                return true;\n            }\n        });\n. \u4f60\u7684setter getter\u65b9\u6cd5\u4e0d\u662f\u4f7f\u7528\u5feb\u6377\u952e\u751f\u6210\u7684\u4e48?\u5efa\u8bae\u8fd8\u662f\u9075\u5b88\u547d\u540d\u89c4\u8303\u5427!!!\n\u5f88\u5de7\u5408\u4f60\u4f7f\u7528\u4e86f\u5f00\u5934\u6240\u4ee5\u53ef\u4ee5\u751f\u6210,\n\u8fd8\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528get_flwNo() , \u4f60\u4e5f\u53ef\u4ee5\u751f\u6210,\u603b\u6709\u4e00\u79cd\u9002\u5408\u4f60:ok_hand:\njava\n String propertyName;\n                if (Character.isUpperCase(c3)) {\n                    if (compatibleWithJavaBean) {\n                        propertyName = decapitalize(methodName.substring(3));\n                    } else {\n                        propertyName = Character.toLowerCase(methodName.charAt(3)) + methodName.substring(4);\n                    }\n                } else if (c3 == '_') {\n                    propertyName = methodName.substring(4);\n                } else if (c3 == 'f') {\n                    propertyName = methodName.substring(3);\n                } else if (methodName.length()>=5 && Character.isUpperCase(methodName.charAt(4))){\n                    propertyName = decapitalize(methodName.substring(3));\n                } else {\n                    continue;\n                }\n. \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199get\u65b9\u6cd5, \u4e09\u79cd\u9009\u4e00\u4e2a\n``` java\npublic String getAipsLength() {\n                return this.aipsLength;\n }\npublic String getfaipsLength() {\n                return this.aipsLength;\n }\npublic String get_aipsLength() {\n                return this.aipsLength;\n }\n```\n. userName\u5c5e\u6027\u662f\u5426\u4e3a\u7a7a,\u4e3a\u7a7a\u53ef\u4ee5\u5f00\u542fSerializerFeature.WriteMapNullValue\n\u6216\u8005\u8d34\u51fa\u4f60\u7684\u6d4b\u8bd5\u4ee3\u7801\u5427\n. \u4f60\u7684\u4f8b\u5b50\u6211\u8fd9\u8f93\u51fa\njson\n{\"degree\":1,\"id\":1,\"password\":\"password\",\"userName\":\"user\"}\n. Dimension\u8be5\u7c7bgetSize\u65b9\u6cd5\u5ffd\u7565\u5373\u53ef,fai\u65b9\u6cd5\u8fd4\u56de\u4e86\u4e2aDimension,\u9020\u6210\u9012\u5f52\n``` java\npublic class Bug_for_399 extends TestCase {\npublic void test_0() {\n    Dimension d = new Dimension();\n    d.setSize(1.1, 1.2);\n    System.out.println(JSON.toJSONString(d, new PropertyPreFilter() {\n        public boolean apply(JSONSerializer serializer, Object source, String name) {\n            if (\"size\".equals(name)) {\n                return false;\n            }\n            return true;\n        }\n    }));\n}\n\n}\n```\n. \u65e5\u671f\u683c\u5f0f\u5316\u95ee\u9898,fastjson\u9ed8\u8ba4\u91c7\u7528\"yyyy-MM-dd HH:mm:ss\"\u683c\u5f0f\u5316,\u6216\u8005\u4f20\u5165\u4e00\u4e2along\u578b\u7684\u65f6\u95f4\n\u4f60\u53ef\u4ee5\"{name:'honway',date:'3000-09-09 00:00:00'}\";\n\u6216\u8005\u4f60\u6ca1\u6cd5\u4fee\u6539\u4f60\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u503c,\u90a3\u5c31\u4fee\u6539\u9ed8\u8ba4\u7684\u683c\u5f0f\u5316\u683c\u5f0f\nJSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\n``` java\npublic class Bug_for_401 extends TestCase{\npublic void test_0(){\n    String str = \"{name:'honway',date:'3000-09-09'}\";\n    JSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\n    User user = JSON.parseObject(str,User.class);\n    System.out.println(user);\n}\n\nstatic class User{\n    private String name;\n    private Date date;\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public Date getDate() {\n        return date;\n    }\n    public void setDate(Date date) {\n        this.date = date;\n    }\n\n}\n\n}\n```\n. \u65e5\u671f\u683c\u5f0f\u5316\u95ee\u9898,fastjson\u9ed8\u8ba4\u91c7\u7528\"yyyy-MM-dd HH:mm:ss\"\u683c\u5f0f\u5316,\u6216\u8005\u4f20\u5165\u4e00\u4e2along\u578b\u7684\u65f6\u95f4\n\u4f60\u53ef\u4ee5\"{name:'honway',date:'3000-09-09 00:00:00'}\";\n\u6216\u8005\u4f60\u6ca1\u6cd5\u4fee\u6539\u4f60\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u503c,\u90a3\u5c31\u4fee\u6539\u9ed8\u8ba4\u7684\u683c\u5f0f\u5316\u683c\u5f0f\nJSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\n``` java\npublic class Bug_for_401 extends TestCase{\npublic void test_0(){\n    String str = \"{name:'honway',date:'3000-09-09'}\";\n    JSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\n    User user = JSON.parseObject(str,User.class);\n    System.out.println(user);\n}\n\nstatic class User{\n    private String name;\n    private Date date;\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public Date getDate() {\n        return date;\n    }\n    public void setDate(Date date) {\n        this.date = date;\n    }\n\n}\n\n}\n```\n. #393  \u4f60\u6709\u4ec0\u4e48\u95ee\u9898\u5462\n. \u770b\u89c1\u5408\u5e76\u4e86,\u4e5f\u628a\u8fd9\u4e2a\u5173\u95ed\u4e86,\u7b2c\u4e00\u6b21\u63d0\u4ea4git\u4e0d\u719f,\u8bf7\u89c1\u8c05!\n. \u770b\u89c1\u5408\u5e76\u4e86,\u4e5f\u628a\u8fd9\u4e2a\u5173\u95ed\u4e86,\u7b2c\u4e00\u6b21\u63d0\u4ea4git\u4e0d\u719f,\u8bf7\u89c1\u8c05!\n. \u6d4b\u8bd5@type\u653e\u5728\u540e\u9762\u662f\u53ef\u4ee5\u7684,\u53cd\u5e8f\u5217\u5316\u6b63\u5e38,\u5c5e\u6027\u4e5f\u8bfb\u51fa\u6765\u4e86,\u7ed9\u51fa\u4f60\u7684\u6d4b\u8bd5\u4f8b\u5b50\u5427\n\"{\\\"name\\\":\\\"Foo\\\",\\\"@type\\\":\\\"com.alibaba.json.test.issue.Foo\\\"}\";\n. \u6d4b\u8bd5@type\u653e\u5728\u540e\u9762\u662f\u53ef\u4ee5\u7684,\u53cd\u5e8f\u5217\u5316\u6b63\u5e38,\u5c5e\u6027\u4e5f\u8bfb\u51fa\u6765\u4e86,\u7ed9\u51fa\u4f60\u7684\u6d4b\u8bd5\u4f8b\u5b50\u5427\n\"{\\\"name\\\":\\\"Foo\\\",\\\"@type\\\":\\\"com.alibaba.json.test.issue.Foo\\\"}\";\n. \u4f60\u8fd9\u4e2a\u9700\u6c42\u53ef\u4ee5\u4e0d\u4f7f\u7528JSONField(serialize = false)\u6ce8\u89e3.\n\u5f53\u4f60\u9700\u8981\u53d1\u9001\u6570\u636e\u5230\u5ba2\u6237\u7aef\u65f6\u4f60\u4f7f\u7528Filter\u5427,\u5ffd\u7565\u6389\u4f60\u524d\u9762\u6ce8\u89e3\u7684\u5b57\u6bb5,\n\u4f60\u53cd\u5e8f\u5217\u5316\u4e5f\u4e0d\u4f1a\u8df3\u8fc7\u67d0\u4e9b\u6570\u636e\u4e86.\u6682\u65f6\u6ca1\u770b\u5230\u5ffd\u7565\u6ce8\u89e3\u7684\u7684Feature\u8bbe\u7f6e\n. \u4f60\u8fd9\u4e2a\u9700\u6c42\u53ef\u4ee5\u4e0d\u4f7f\u7528JSONField(serialize = false)\u6ce8\u89e3.\n\u5f53\u4f60\u9700\u8981\u53d1\u9001\u6570\u636e\u5230\u5ba2\u6237\u7aef\u65f6\u4f60\u4f7f\u7528Filter\u5427,\u5ffd\u7565\u6389\u4f60\u524d\u9762\u6ce8\u89e3\u7684\u5b57\u6bb5,\n\u4f60\u53cd\u5e8f\u5217\u5316\u4e5f\u4e0d\u4f1a\u8df3\u8fc7\u67d0\u4e9b\u6570\u636e\u4e86.\u6682\u65f6\u6ca1\u770b\u5230\u5ffd\u7565\u6ce8\u89e3\u7684\u7684Feature\u8bbe\u7f6e\n. JSONField(serialize = false)\u4e00\u822c\u4e0d\u4f1a\u5199\u5f88\u591a\u5427,\u5982\u679c\u4f60\u5f88\u591a\u5b57\u6bb5\u90fd\u4f7f\u7528\u4e86\u8be5\u6ce8\u89e3,\u90a3\u7684\u786e\u8be5\u81ea\u5df1\u5199\u4e2aVO\u8f6c\u6362\u4e86.\u5982\u679c\u9700\u8981\u53d1\u9001\u7684\u5b57\u6bb5\u5f88\u591a\u800c\u4e14\u9700\u8981\u5ffd\u7565\u7684\u5b57\u6bb5\u4e5f\u5f88\u591a,\u7684\u5374\u662f\u4e2a\u95ee\u9898,\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u81ea\u5df1\u4fee\u6539\u4e0b\u6e90\u7801,\u628a\u6ce8\u89e3\u90a3\u4fee\u6539\u4e0b\u5c31ok\u4e86, \u8fd9\u4e2a\u6539\u52a8\u4e0d\u5927\u53ef\u4ee5\u81ea\u5df1\u6539\u7684\n. JSONField(serialize = false)\u4e00\u822c\u4e0d\u4f1a\u5199\u5f88\u591a\u5427,\u5982\u679c\u4f60\u5f88\u591a\u5b57\u6bb5\u90fd\u4f7f\u7528\u4e86\u8be5\u6ce8\u89e3,\u90a3\u7684\u786e\u8be5\u81ea\u5df1\u5199\u4e2aVO\u8f6c\u6362\u4e86.\u5982\u679c\u9700\u8981\u53d1\u9001\u7684\u5b57\u6bb5\u5f88\u591a\u800c\u4e14\u9700\u8981\u5ffd\u7565\u7684\u5b57\u6bb5\u4e5f\u5f88\u591a,\u7684\u5374\u662f\u4e2a\u95ee\u9898,\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u81ea\u5df1\u4fee\u6539\u4e0b\u6e90\u7801,\u628a\u6ce8\u89e3\u90a3\u4fee\u6539\u4e0b\u5c31ok\u4e86, \u8fd9\u4e2a\u6539\u52a8\u4e0d\u5927\u53ef\u4ee5\u81ea\u5df1\u6539\u7684\n. \u6240\u4ee5\u6700\u7ec8\u8fd8\u662f\u51b3\u5b9a\u7528filter\u4e86 :smile: \n. \u6240\u4ee5\u6700\u7ec8\u8fd8\u662f\u51b3\u5b9a\u7528filter\u4e86 :smile: \n. \u65b0\u7248\u672c\u6709, \u4f60\u7528\u7684\u54ea\u4e2a\u7248\u672c?\n\u4f7f\u75281.2.4_android\u5427\n1.1.42_android\u4e4b\u524d\u7684\u7248\u672c\u6ca1\u6709\n``` java\nif (value instanceof String) {\n            String strVal = (String) value;\n        if (strVal.length() == 0) {\n            return null;\n        }\n\n        if (\"true\".equalsIgnoreCase(strVal)) {\n            return Boolean.TRUE;\n        }\n        if (\"false\".equalsIgnoreCase(strVal)) {\n            return Boolean.FALSE;\n        }\n\n        if (\"1\".equals(strVal)) {\n            return Boolean.TRUE;\n        }\n\n        if (\"0\".equals(strVal)) {\n            return Boolean.FALSE;\n        }\n\n        if (\"null\".equals(strVal) || \"NULL\".equals(strVal)) {\n            return null;\n        }\n    }\n\n```\n. \u65b0\u7248\u672c\u6709, \u4f60\u7528\u7684\u54ea\u4e2a\u7248\u672c?\n\u4f7f\u75281.2.4_android\u5427\n1.1.42_android\u4e4b\u524d\u7684\u7248\u672c\u6ca1\u6709\n``` java\nif (value instanceof String) {\n            String strVal = (String) value;\n        if (strVal.length() == 0) {\n            return null;\n        }\n\n        if (\"true\".equalsIgnoreCase(strVal)) {\n            return Boolean.TRUE;\n        }\n        if (\"false\".equalsIgnoreCase(strVal)) {\n            return Boolean.FALSE;\n        }\n\n        if (\"1\".equals(strVal)) {\n            return Boolean.TRUE;\n        }\n\n        if (\"0\".equals(strVal)) {\n            return Boolean.FALSE;\n        }\n\n        if (\"null\".equals(strVal) || \"NULL\".equals(strVal)) {\n            return null;\n        }\n    }\n\n```\n. String jsonStr = \"{publishedDate:\\\"2015-09-07 00:00:00\\\"}\";\n\u4f60\u53ef\u4ee5\u770b\u4e0b#401\n. String jsonStr = \"{publishedDate:\\\"2015-09-07 00:00:00\\\"}\";\n\u4f60\u53ef\u4ee5\u770b\u4e0b#401\n. ",
    "FindThirteen": "\u662f\uff0c\u53ef\u80fd\u662fbug\u592a\u591a\uff0c\u4f46\u662f1.1.40\u5df2\u7ecf\u4fee\u590d\u8fd9\u4e2abug\u4e86\uff0c\u76ee\u524d\u6211\u5728\u75281.1.40\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"laiweiwei\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e748\u67084\u65e5(\u661f\u671f\u4e00) \u4e0b\u53484:46\n\u6536\u4ef6\u4eba: \"alibaba/fastjson\"fastjson@noreply.github.com; \n\u6284\u9001: \"\u5341\u4e09\"1049321577@qq.com; \n\u4e3b\u9898: Re: [fastjson] \u53d1\u73b0bug\u4e00\u679a  (#157)\n\u6211\u4e5f\u78b0\u5230\u8fd9\u4e2aBUG\u4e86\uff0c\u600e\u4e48\u5b98\u65b9\u6ca1\u4eba\u7406\u4f1a\u7684\uff1f\uff1f\uff1f\uff1f\uff1f\n\u2014\nReply to this email directly or view it on GitHub.\n. \u6069 \u6ca1\u95ee\u9898\u4e86\u73b0\u5728\uff0c\u5f53\u65f6\u6700\u65b0\u662f1.1.39. 1.1.40\u6ca1\u95ee\u9898\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"qifanyang\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2014\u5e748\u67084\u65e5(\u661f\u671f\u4e00) \u4e0b\u53484:52\n\u6536\u4ef6\u4eba: \"alibaba/fastjson\"fastjson@noreply.github.com; \n\u6284\u9001: \"\u5341\u4e09\"1049321577@qq.com; \n\u4e3b\u9898: Re: [fastjson] \u53d1\u73b0bug\u4e00\u679a  (#157)\n\u6ca1\u95ee\u9898\u628a,\u4f60\u4eec\u7528\u7684\u4ec0\u4e48\u7248\u672c,\u7528\u6700\u65b0\u7684\u8bd5\u8bd5\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "JianJI": "\u8fd9\u4e2a\u95ee\u9898\u8c8c\u4f3c\u6211\u4eec\u4e5f\u9047\u5230\u4e86\uff0c\u5f53json value\u4e3a\u4e00\u4e2a1M\u5927\u5c0f\u7684\u542b\u4e2d\u6587\u7684html\u5b57\u7b26\u4e32\uff0c\u5904\u7406\u901f\u5ea6\u5f88\u6162\u3002\u6000\u7591fastjson/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java:735~782\u884c\uff0c\u5305\u542b\u7684System.arraycopy\u8c03\u7528\uff0c\u5982\u679c\u4e2d\u6587\u5f88\u591a\u7684\u8bdd\uff0c\u662f\u5426\u4f1a\u9891\u7e41\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u800c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff1f\n. ",
    "gaoyoubo": "\u540c\u6837\u9047\u5230\u4e86\u8fd9\u6837\u7684\u95ee\u9898\u3002. ",
    "mfkvfn": "\u4ece\u8fd9\u91cc https://github.com/Alibaba/fastjson/wiki/_pages \u70b9\u94fe\u63a5\u8fdb\u53bb\u3002\n. ",
    "dxdingdu": "\u731b\u7136\u53d1\u73b01.1.39\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u3002\n. ",
    "SuoNayi-GitHub": "\u8fd9\u4e0d\u662f\u5168\u89d2\u7a7a\u683c\uff0c\u662f\u4e0d\u95f4\u65ad\u7a7a\u683c\uff0c\u5728html\u7f16\u7801\u4e3a\"& n b s p ;\"\uff08\u591a\u52a0\u4e86\u7a7a\u683c\uff0c\u4e0d\u7136\u4e0d\u663e\u793a\u4e86\uff09\n\u8fd9\u4e2a\u7a7a\u683c\u591a\u534a\u4ece\u7f51\u9875\u4e0a\u590d\u5236\u8fc7\u6765\u7684\u3002\n\u6211\u6d4b\u8bd5\u53d1\u73b01.1.40\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c1.1.39\u6ca1\u6709\u3002\nsee http://www.fileformat.info/info/unicode/char/a0/index.htm\n. ",
    "caijiangyang": "\u53d1\u73b0\u6211\u8fd9\u8fb9\u73b0\u5728@JSONField(format = \"yyyy-MM-dd HH:mm\")\u4e0d\u8d77\u4f5c\u7528\n. \u53d1\u73b0\u6211\u8fd9\u8fb9\u73b0\u5728@JSONField(format = \"yyyy-MM-dd HH:mm\")\u4e0d\u8d77\u4f5c\u7528\n. ",
    "solomonqbq": "\u627e\u5230\u4e86\uff0c\u4f7f\u7528PropertyFilter\n. ",
    "sd4324530": "fastjson\u7248\u672c1.1.39\n. \u8fd9\u91cc\u5df2\u7ecf\u6ca1\u4eba\u7ef4\u62a4\u4e86\u5417\uff1f- -\n. \u662f\u5426\u53ef\u4ee5\u52a0\u5f3a\u4e0bParseProcess\u63a5\u53e3\uff0c\u63d0\u4f9b\u53ef\u4ee5\u5b9a\u5236\u5df2\u6709\u4efb\u610f\u5b57\u6bb5\u7684\u53cd\u5e8f\u5217\u5316\u529f\u80fd\uff0c\u9760JSONField\u6ce8\u89e3\u5e76\u4e0d\u80fd\u89e3\u51b3\u4e00\u5207\u60c5\u51b5\n. kotlin\ndata class MyData(@field:JSONField(name = \"name\")val n : String)\n\u8c8c\u4f3c\u53ea\u80fd\u8fd9\u4e48\u5199field:\u4e0d\u80fd\u7701\uff0c\u4f46\u662f\u4f60\u4eec\u7684wiki\u4e0a\u8c8c\u4f3c\u662f2\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\uff1f. \u627e\u5230\u539f\u56e0\u4e86\uff0c\u9879\u76ee\u91cc\u9664\u4e86\u8981\u4f9d\u8d56kotlin-stdlib\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u5355\u72ec\u4f9d\u8d56kotlin-reflect\u624d\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u5e0c\u671b\u53ef\u4ee5\u5728wiki\u4e0a\u8bf4\u660e\u4e0b\u8fd9\u4e2a\u60c5\u51b5\uff0c\u5751\u6b7b\u6211\u4e86. \u9644\u4e0a\u6211\u62a5\u9519\u7684data class\uff0c\u5c31\u662f\u5c01\u88c5\u4e86redis\u547d\u4ee4\uff1ainfo Server\u7684\u8fd4\u56de\u5185\u5bb9\n```kotlin\ndata class Server(\n        @JSONField(name = \"redis_version\")\n        var redisVersion: String? = null,\n    @JSONField(name = \"redis_git_sha1\")\n    var redisGitSha1: String? = null,\n\n    @JSONField(name = \"redis_git_dirty\")\n    var redisGitDirty: String? = null,\n\n    @JSONField(name = \"redis_build_id\")\n    var redisBuildId: String? = null,\n\n    @JSONField(name = \"redis_mode\")\n    var redisMode: String? = null,\n\n    var os: String? = null,\n\n    @JSONField(name = \"arch_bits\")\n    var archBits: String? = null,\n\n    @JSONField(name = \"multiplexingApi\")\n    var multiplexing_api: String? = null,\n\n    @JSONField(name = \"gcc_version\")\n    var gccVersion: String? = null,\n\n    @JSONField(name = \"process_id\")\n    var processId: Int? = null,\n\n    @JSONField(name = \"run_id\")\n    var runId: String? = null,\n\n    @JSONField(name = \"tcp_port\")\n    var tcpPort: Int? = null,\n\n    @JSONField(name = \"uptime_in_seconds\")\n    var uptimeInSeconds: Int? = null,\n\n    @JSONField(name = \"uptime_in_days\")\n    var uptimeInDays: Int? = null,\n\n    var hz: String? = null,\n\n    @JSONField(name = \"lru_clock\")\n    var lruClock: String? = null,\n\n    @JSONField(name = \"config_file\")\n    var configFile: String? = null\n\n)\n``. TypeUtils.getKoltinConstructorParameters(Class)\u8fd9\u4e2a\u65b9\u6cd5\u8c8c\u4f3c\u786e\u5b9e\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e3b\u8981\u662f\u65b9\u6cd5\u91cc\u4f7f\u7528\u5230\u7684\u51e0\u4e2a\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u95ee\u9898. \u6211\u7684\u6574\u4e2a\u4ee3\u7801\u53ea\u8c03\u6574\u4e86\u7ebf\u7a0b\u6570\uff0c\u5176\u4ed6\u90fd\u6ca1\u6709\u52a8\uff0c\u5f53\u7ebf\u7a0b\u6570\u53d8\u5927\u540e\uff0c\u5f00\u59cb\u51fa\u73b0\u8fd9\u4e2a\u5f02\u5e38\u7684\uff0c\u4e5f\u901a\u8fc7\u65ad\u70b9\u8ddf\u8e2a\u4e86\u4ee3\u7801\uff0c\u786e\u5b9e\u662fTypeUtils\u7c7b\u4e2dkotlin_kclass_constructor\u5c5e\u6027\u5c31\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662fkotlin_kclass_getConstructors`\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u5728TypeUtils.java\u76842091\u884c\u62a5\u9519\u7a7a\u6307\u9488\nTypeUtils.getKoltinConstructorParameters(Class)\u8fd9\u4e2a\u65b9\u6cd5\u6240\u521d\u59cb\u5316\u7684\u90a3\u51e0\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u53ea\u662f\u5404\u81ea\u662fvolatile\u7684\uff0c\u4f46\u662f\u6574\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u554a\uff0c\u6211\u89c9\u5f97\u539f\u56e0\u53ef\u80fd\u662f\u51fa\u5728\u8fd9. \u6211\u5199\u4e86\u4e2a\u6d4b\u8bd5\u4f8b\u5b50\uff0c\u7ebf\u7a0b\u6570\u5c0f\u7684\u65f6\u5019\uff08<3\uff09\uff0c\u51fa\u73b0\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u57fa\u672c\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u662f\u7ebf\u7a0b\u6570\u8c03\u5927\uff08>10\uff09\uff0c\u57fa\u672c\u662f\u5fc5\u73b0\uff0c@wenshao \u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8bd5\u8bd5\u770b\n```kotlin\nconst val THREAD_NUMBER = 10\nfun main(args: Array) {\n    val threadPool = Executors.newScheduledThreadPool(THREAD_NUMBER)\n    for (i in 1..THREAD_NUMBER) {\n        println(\"start....\")\n        threadPool.scheduleAtFixedRate({\n            val map = mapOf(\"id\" to 1, \"name\" to \"test1\")\n            try {\n                println(JSON.parseObject(JSON.toJSONString(map), User::class.javaObjectType))\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n        }, 1, 1, TimeUnit.SECONDS)\n    }\n}\ndata class User(val id: Int, val name: String)\n```. \u4f60\u8fd9\u4e2a\u4f8b\u5b50\u662fjava\u5199\u7684\u54c7\uff0c\u6211\u8fd9\u4e2a\u95ee\u9898\u662f\u4f7f\u7528kotlin\u8c03\u7528\u65f6\u51fa\u73b0\u7684\uff0c\u6211\u4e0a\u9762\u53d1\u7684\u90a3\u6bb5\u4ee3\u7801\uff0c\u95ee\u9898\u662f\u5fc5\u73b0\u7684\u5440. see #1476 . ",
    "GodIT": "\u600e\u4e48\u624d\u80fd\u4f7f \u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u4e0d\u5728JSONObject.toJSONString(list, features);\u51fa\u73b0\u3002\nfeatures \u914d\u7f6e\uff1a\n        SerializerFeature[] features = { SerializerFeature.WriteMapNullValue,\n                SerializerFeature.WriteNullNumberAsZero,\n                SerializerFeature.WriteNullBooleanAsFalse, \n                SerializerFeature.WriteNullStringAsEmpty \n                     , SerializerFeature.SkipTransientField };\n@Transient \u5728\u5c5e\u6027 get set \u5c5e\u6027\u4e0a\u90fd\u52a0\u8fc7\uff0c\u90fd\u4e0d\u751f\u6548\u3002\n\u7248\u672c\u662f 1.1.45\n. ",
    "xing-kenny": "\u6211\u518d\u8865\u5145\u4e00\u4e0b\uff0c\n\u5199\u6cd51,\u6709\u4e24\u4e2ajava\u7c7b\u6587\u4ef6\n\u6587\u4ef61\uff1a\npublic class LoginStartBeanData implements Serializable {\n\u6587\u4ef62\uff1a\n```\n    public class LoginStartBean implements Serializable {\n    private static final long serialVersionUID = -436820542377254363L;\nprivate int code = 0;\nprivate String errormsg = \"\";\nprivate LoginStartBeanData data;\n\n```\n\u5199\u6cd52,\u4e00\u4e2ajava\u6587\u4ef6\n```\npublic class LoginStartBean implements Serializable {\nprivate static final long serialVersionUID = -436820542377254363L;\npublic int code = 0;\npublic String errormsg = \"\";\npublic Data data;\npublic class Data implements Serializable {\n```\n\u76ee\u524d\u5199\u6cd51\u6210\u529f\uff0c\u5199\u6cd52\u5931\u8d25\uff0c\n\u8bf7\u95ee\u600e\u6837\u8ba9\u5199\u6cd52\u4e5f\u80fd\u6df7\u6dc6\u6210\u529f\uff1f\n. ",
    "shang1jk": "\u5185\u90e8\u7c7b\u52a0static\u58f0\u660e\u3002\n. ",
    "halfhq": "\u52a0\u5165static\u65e0\u6548\uff0c\u8bf7\u53c2\u8003\uff1a#1173. 1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5168\u90e8implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson { \n    public (***);\n}. \u52a0\u5165static\u65e0\u6548\uff0c\u8bf7\u53c2\u8003\uff1ahttps://github.com/alibaba/fastjson/issues/1173. 1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5168\u90e8implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson { \n    public ();\n}. \u4ee5\u524d\u6211\u4e5f\u63d0\u8fc7\u540c\u9700\u6c42 #1227. \u5c31\u662f\u8fd9\u4e2a\uff0c\u975e\u5e38\u611f\u8c22\u3002\n. @wenshao \u52a0\u5165static\u4e5f\u662f\u65e0\u6548\u7684\n```java\n    /\n     * {\"state\":1,\"data\":{\"msg\":\"123\"}}\n     /\n    void testInternalClass() {\n        String json = \"{\\\"state\\\":1,\\\"data\\\":{\\\"msg\\\":\\\"123\\\"}}\";\n        try {\n            InternalClassTest c = JSON.parseObject(json, InternalClassTest.class);\n            Log.d(\"JSON\", \"c.state=\" + c.state + \", c.data.msg=\" + (c.data == null ? \"null\" : c.data.msg));\n        } catch (Exception e) {\n            e.printStackTrace();    //com.alibaba.fastjson.JSONException: default constructor not found\n        }\n    }\npublic static class InternalClassTest {\n    public InternalClassTest() {\n        super();\n    }\n    @JSONField(name = \"state\")\n    public boolean state;\n    @JSONField(name = \"data\")\n    public Data data;\n\n    public static class Data {\n        public Data() {\n            super();\n        }\n        @JSONField(name = \"msg\")\n        public String msg;\n    }\n}\n\n\u4f9d\u65e7\u51fa\u73b0\u9519\u8befjava\nom.alibaba.fastjson.JSONException: default constructor not found. class com.yyw.fastjson_example.MainActivit\n   at com.alibaba.fastjson.util.JavaBeanInfo.build(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.(Unknown Source)\n   at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(Unknown Source)\n   at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.getFieldValueDeserilizer(Unknown Sou\n   at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n```\n    compile 'com.alibaba:fastjson:1.2.33'\n    compile 'com.alibaba:fastjson:1.1.58.android'\n\u6df7\u6dc6\uff1a\nfastjson\n-dontwarn com.alibaba.fastjson.\n-keepattributes Signature\n-keepattributes Annotation\n-keep class com.alibaba.fastjson. { *; }. 1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5168\u90e8implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson { \n    public ();\n}. #1173 . @wenshao \u5373\u4f7f\u7533\u660e\u4e3a\u9759\u6001\u4e5f\u662f\u4e0d\u884c\u7684\n```java\n /\n     * {\"state\":1,\"data\":{\"msg\":\"123\"}}\n     /\n    void testInternalClass() {\n        String json = \"{\\\"state\\\":1,\\\"data\\\":{\\\"msg\\\":\\\"123\\\"}}\";\n        try {\n            InternalClassTest c = JSON.parseObject(json, InternalClassTest.class);\n            Log.d(\"JSON\", \"c.state=\" + c.state + \", c.data.msg=\" + (c.data == null ? \"null\" : c.data.msg));\n        } catch (Exception e) {\n            e.printStackTrace();    //com.alibaba.fastjson.JSONException: default constructor not found\n        }\n    }\npublic static class InternalClassTest {\n    public InternalClassTest() {\n        super();\n    }\n    @JSONField(name = \"state\")\n    public boolean state;\n    @JSONField(name = \"data\")\n    public Data data;\n\n    public static class Data {\n        public Data() {\n            super();\n        }\n        @JSONField(name = \"msg\")\n        public String msg;\n    }\n}\n\n\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1ajava\nom.alibaba.fastjson.JSONException: default constructor not found. class com.yyw.fastjson_example.MainActivit\n   at com.alibaba.fastjson.util.JavaBeanInfo.build(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.(Unknown Source)\n   at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(Unknown Source)\n   at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.getFieldValueDeserilizer(Unknown Sou\n   at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(Unknown Source)\n   at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n   at com.alibaba.fastjson.JSON.parseObject(Unknown Source)\n```\ncompile 'com.alibaba:fastjson:1.2.33'\ncompile 'com.alibaba:fastjson:1.1.58.android'\n\u6df7\u6dc6\uff1a\nfastjson\n-dontwarn com.alibaba.fastjson.\n-keepattributes Signature\n-keepattributes Annotation\n-keep class com.alibaba.fastjson. { *; }. @GuChuan \u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u907f\u514d\uff1a\n1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5168\u90e8implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson { \n    public <init>(***);\n}. #1173. @riyuetiancai \u4f7f\u7528 @JSONField(name = \"\u67e5\u8be2\u6708\u4efd\")\npublic static class ChineseTest {\n        public String datePatternString;\n        @JSONField(name = \"\u67e5\u8be2\u6708\u4efd\")\n        public String queryMonth;\n    }\n        String chinese = \"{\\\"datePatternString\\\":\\\"yyyyMM\\\",\\\"queryMonth\\\":\\\"201704\\\",\\\"processCode\\\":\\\"1\\\",\\\"\u67e5\u8be2\u6708\u4efd\\\":\\\"201704\\\",\\\"\u8df3\u8f6c\u8868\u8fbe\u5f0f\\\":\\\"1\\\",\\\"patternString\\\":\\\"\\\\\\\\d{4}[0,1]{1}\\\\\\\\d{1}\\\",\\\"processText\\\":\\\"\u8bf7\u6c42\u5931\u8d25\uff0cqueryMonth\u8f93\u5165\u5f02\u5e38\\\"}\";\n        ChineseTest chineseTest = JSON.parseObject(chinese, ChineseTest.class);\n        Log.d(\"JSON\", \"chinese key value=\" + chineseTest.queryMonth);\n. \u4ec5\u4ec5\u8981\u83b7\u53d6value\uff0c\u53ef\u4ee5\u4f7f\u7528\n        com.alibaba.fastjson.JSONObject jsonObject = JSON.parseObject(chinese);\n        String queryMonth = jsonObject.getString(\"\u67e5\u8be2\u6708\u4efd\");\n        Log.d(\"JSON\", \"chinese key value=\" + chineseTest.queryMonth);. @weicao \u8981\u6c42data\u4e3a\u7a7a\uff08\u4e0d\u5b58\u5728\u6216\u8005 \"data\":{}\uff09\uff0c\u8f93\u51fa\u7684List data==null\uff08\u6216size==0\uff09\n\u8bf7\u95ee\uff0c\u6709\u6ca1\u6709\u9009\u9879\u4f7f\u5f97\u5ffd\u7565\u201ccan not cast to\u201d\u9519\u8bef\uff1f. @kiminotes json\u5b57\u7b26\u4e32\u662f\u540e\u53f0\u8fd4\u56de\u7684\uff0c\u4e0d\u53ef\u66f4\u6539\u3002\n\u6211\u60f3\u8981\uff1a\u63d0\u4f9b\u4e00\u4e2a\u53c2\u6570\uff0c\u53d1\u751fcast\u5f02\u5e38\u65f6\u5ffd\u7565\uff0c\n\u8fd9\u6837List data\u5c31\u4e0d\u4f1a\u88ab\u8d4b\u503c. @kimmking \u540e\u53f0\u662fphp\u7684\u3002\n\u5982\u679c\u67d0\u4e2a\u51fd\u6570\u8fd4\u56de\u4e3anull\u5219\u9ed8\u8ba4\u8f93\u51fadata:{}\u662f\u5141\u8bb8\u7684\u3002\n\u5f53\u7136\u6700\u597d\u7684\u60c5\u51b5\u662fdata\u6574\u4e2a\u90fd\u4e0d\u8f93\u51fa. @kimmking \u901f\u5ea6\u597d\u5feb\uff0c\u6211\u559c\u6b22 \ud83d\udc4d . ",
    "ccn1010": "\u662f\u6211\u81ea\u5df1\u641e\u9519\u4e86, java\u7684long\u5728javascript\u91cc\u9762\u4e0d\u80fd\u7528\n. ",
    "yakolee": "\u8bf7\u95ee\u4f60\u7528\u7684\u662f\u90a3\u4e2a\u7248\u672c\uff1f\u6709\u8bd5\u8fc7\u6700\u65b0\u7248\u672c\u6ca1\u6709\uff1f\n. \u5df2\u4fee\u590d\n. \u4f60\u8bf4\u62a5\u9519\u7684\u662f\u8fd9\u4e2a\u573a\u666f\u5417\uff1f\u4e0b\u9762\u7684\u6d4b\u8bd5\u662f\u6ca1\u6709\u95ee\u9898\u7684\n    public void test_1() throws Exception {\n        VO v = new VO();\n        v.setC(String.class);\n```\n    String json = JSON.toJSONString(v);\n    System.out.println(json);\nVO v1 = JSON.parseObject(json, VO.class);\nSystem.out.println(v1.getC());\n\n}\npublic static class VO {\nprivate Class<String> c;\n\npublic Class<String> getC() {\n    return c;\n}\n\npublic void setC(Class<String> c) {\n    this.c = c;\n}\n\n}\n```\n. ok\uff0c\u90a3\u5e94\u8be5\u5c31\u662f\u5df2\u7ecf\u4fee\u590d\u4e86\n. \u4f7f\u7528\u7684\u7248\u672c\u662f\u54ea\u4e2a\uff1f\u6211\u7b80\u5355\u505a\u4e86\u4e2a\u6d4b\u8bd5\uff0cWriteNullStringAsEmpty\u662f\u751f\u6548\u7684\uff0c\u4f60\u53c2\u8003\u4e00\u4e0b\uff1a\n    public void test() throws Exception {\n        V0 v = new V0();\n```\n    SerializeConfig mapping = new SerializeConfig();\n    mapping.setAsmEnable(false);\nString text = JSON.toJSONString(v, mapping, SerializerFeature.WriteMapNullValue, SerializerFeature.WriteNullStringAsEmpty);\nAssert.assertEquals(\"{\\\"value\\\":\\\"\\\"}\", text);\n\n}\npublic static class V0 {\n    private String value;\n    public String getValue() {\n        return value;\n    }\n    public void setValue(String value) {\n        this.value = value;\n    }\n}\n```\n\u5982\u679c\u8fd8\u6709\u95ee\u9898\uff0c\u8bf7\u8bf4\u660e\u4e0b\u8be6\u7ec6\u7684\u4f7f\u7528\u65b9\u5f0f\n. \u68c0\u67e5\u4f60\u7684getter\u548csetter\u65b9\u6cd5\u662f\u5426\u548c\u5c5e\u6027\u540d\u5339\u914d\u3002\n\u7c7b\u4f3c\uff1a\n        public String getPName() {\n            return pName;\n        }\n        public void setPName(String pName) {\n            this.pName = pName;\n        }\n\u5982\u679c\uff0cgetter\u548csetter\u6b63\u786e\uff0c\u8fd8\u4e0d\u80fd\u6b63\u5e38\u5e8f\u5217\u5316\uff0c\u8054\u7cfb\u6211~\n. \u80fd\u8865\u5145\u8bf4\u660e\u8bd5\u4e00\u4e0b\uff0c\u5982\u4f55\u91cd\u73b0\u5417\uff1f\u6211\u8fd9\u91cc\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u90fd\u672a\u91cd\u73b0\n. \u5df2\u4fee\u590d\n. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c 1.1.46 \u62161.2.2\n. \u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c 1.1.46 \u62161.2.2\n. 1.1.46\u548c1.2.2\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\n. protected Object[] fieldToArray() {\n        return new Object[] { msgType, requestId, details, yieldResult };\n    }\nobject\u6570\u7ec4\u4e2drequestId\u5c31\u662fLong\u7c7b\u578b\u7684\u554a\n. \u4f7f\u7528SerializerFeature.DisableCircularReferenceDetect\uff0c\u5982\uff1aJSON.toJSONString(object,SerializerFeature.DisableCircularReferenceDetect)\uff0c\u4f1a\u89e3\u51b3\u4f60\u7684\u95ee\u9898\n. \u53ef\u4f7f\u7528 TypeUtils.compatibleWithJavaBean = true;\nJSON.toJSONString(user);\n. \u4f7f\u75281.2.3\u7248\u672c\uff0cFeature.OrderedField\n. MyEnumAdapter \u662f\u4ec0\u4e48\uff1f\u7ed9\u51fa\u5b8c\u6574\u7684testcase\n. \u5f88\u62b1\u6b49\uff0c\u76ee\u524dfastjson\u6ca1\u6709scala\u7684\u7248\u672c\n. \u6cdb\u578b\u53cd\u5e8f\u5217\u5316\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684api\uff1a\n  List list = JSON.parseObject(\"...\", new TypeReference>() {});\n\u4e0b\u9762\u4f8b\u5b50\u4e2dEnumSet\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e0d\u4f1a\u51fa\u95ee\u9898\uff1a\npublic static void main(String[] args) {\n        EnumSet set = EnumSet.allOf(MyEnum.class);\n        String json = JSONObject.toJSONString(set);\n        System.out.println(json);\n        EnumSet set2 = JSON.parseObject(json, new TypeReference>() {\n        });\n        System.out.println(set2);\n    }\npublic enum MyEnum {\n    BLACK, WHITE, RED, BLUR, GREEN, YELLOW\n}\n. \u5df2\u4fee\u590d,\u4f1a\u57281.2.4\u4e2d\u53d1\u5e03\uff0c\u9884\u8ba1\u672c\u5468\u53d1\u5e03\n. \u7528\u6700\u65b0\u7248\u672c\u6d4b\u8bd5\u8fc7\uff0c\u7b2c\u4e00\u6b21toJSONString\u82b1\u8d39240ms\uff0c\u7136\u540e\u5faa\u73af1000\u6b21\uff0c\u5e73\u5747\u503c0.047ms\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a\n    public static void main(String[] args) {\n        OAthToken oa = new OAthToken();\n        oa.setAppId(12345678l);\n        oa.setAccessToken(\"access token xxxxxx\");\n        oa.setCreateTime(new Timestamp(System.currentTimeMillis()));\n        oa.setId(987654321l);\n        oa.setRefreshToken(\"refresh token xxxxx\");\n        oa.setScope(1);\n        oa.setState(2);\n        oa.setUserId(56789012l);\n```\n    long firstStart = System.currentTimeMillis();\n    JSON.toJSONString(oa);\n    long firstEnd = System.currentTimeMillis();\nSystem.out.println(firstEnd - firstStart);\n\nlong _1000start = System.currentTimeMillis();\nfor (int i = 0; i < 1000; i++) {\n    JSON.toJSONString(oa);\n}\n\nlong _1000End = System.currentTimeMillis();\n\nSystem.out.println((_1000End - _1000start) / 1000f);\n\n}\n```\n. \u4f7f\u7528\u54ea\u4e2a\u7248\u672c\uff1f\u5982\u4f55\u91cd\u73b0\uff1f\u80fd\u5426\u63d0\u4f9b\u5b8c\u6574\u7684\u4fe1\u606f\uff1f\n. \u8bf7\u4f7f\u7528\u65b0\u7248\u672c1.2.4\n. We will try to  write issues in english\uff0cbut issues from many people, I can not guarantee that all written in English\u3002\nIf you have any questions, please contact me, email: yakolyh@gmail.com.\n. \u5408\u5e76\u4e4b\u540e\u6709\u4e00\u4e9btestcase\u6d4b\u8bd5\u4e0d\u8fc7\uff0c\u63d0\u4ea4\u4ee3\u7801\u65f6\uff0c\u8bf7\u4fdd\u8bc1\u6240\u6709testcase\u90fd\u6210\u529f\n. \u6211\u89e3\u51b3\u4e86\u51b2\u7a81\uff0c\u91cd\u65b0\u63d0\u4ea4\u4e86\u4ee3\u7801\uff0c\u5df2\u7ecfmerge\u5230master\u4e86\uff0c\u8fd9\u4e2apull\u5148\u5173\u95ed\u4e86\n. ",
    "chenssy89": "\u57281.2.0\u4e2d\u6d4b\u8bd5\uff0c\u8fd8\u662f\u65e0\u6cd5\u83b7\u53d6\n. ",
    "hengyunabc": "\u5f53fieldName\u662fnull\u65f6\uff0c\u8f93\u51fa\u7684json\u5b57\u7b26\u4e32\u91cc\u4f1a\u6709null\u3002\u6b63\u5e38\u7684json\u5b57\u7b26\u4e32\u662f\u4e0d\u5e94\u8be5\u51fa\u73b0\"null\"\u7684\u3002\n\u5370\u8c61\u4e2d\u662f\u5728\u6d4b\u8bd5\u5faa\u73af\u5f15\u7528\u65f6\u51fa\u73b0\u7684\u3002\n. \u5982\u679c\u7b80\u5355\u5730\u628a#40\u7684\u4fee\u590d\u4ee3\u7801\u6ce8\u91ca\u6389\uff1a\n// fix Issue #40\n//                    if (this.context != null && !(fieldName instanceof Integer)) {\n//                        this.popContext();\n//                    }\n\u5219\u57281.1.41\u7684\u4ee3\u7801\u4e0a\u4f1a\u4e0b\u9762\u8fd9\u91cc\u65e0\u9650\u9012\u5f52\u8c03\u7528\uff1a\nSchool school2 = object2.getObject(\"school\", School.class);\n        System.out.println(school2);\n\u539f\u56e0\u662fTypeUtils.castToJavaBean \u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709\u505a\u4e92\u76f8\u5f15\u7528\u7684\u68c0\u6d4b\u3002\nobject2\u91cc\"school\"\u8fd9\u4e2akey\u5bf9\u5e94\u7684\u662f\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aFastJSONObject\uff0cTypeUtils\u5728\u628aFastJSONObject\u8f6c\u6210JavaBean\u65f6\uff0c\u6ca1\u6709\u5904\u7406FastJSONObject\u91cc\u6709\u4e92\u76f8\u5f15\u7528\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u65e0\u9650\u9012\u5f52\u8c03\u7528\uff0c\u6700\u7ec8\u6808\u6ea2\u51fa\u3002\n. \u90a3\u4e2a\u5b57\u7b26\u4e32\u7c98\u5230github\u4e0a\u88ab\u5e72\u6389\u4e86\u3002\u3002\u8c8c\u4f3c\u6700\u65b0\u7248\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\u30021.1.35\u6709\u95ee\u9898\u3002\n\u4f46\u662f\u6700\u65b0\u7248\u5904\u7406\u8fd9\u4e2a\u8fd8\u662f\u6709\u95ee\u9898\uff1a\njava\n        String ss = \"{'a':'Intki_E96?\\u001A Build'}\";\n        System.err.println(ss);\n        Object sss = JSON.parse(ss);\n\u8fd9\u4e2a\\u001A \u8c8c\u4f3c\u662f\u4e2a\u5408\u6cd5\u7684Unicode\u5b57\u7b26\uff0c\u5386\u53f2\u9057\u7559\u7269\u3002\nhttp://stackoverflow.com/questions/17024436/what-is-the-unicode-u001a-character-aka-0x1a\n. ",
    "fengtianxp": "\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\u539f\u56e0\u662f\u4f7f\u7528\u7684fastjson \u7248\u672c\u8fc7\u4e45\u5bfc\u81f4\u7684\u3002\u91c7\u7528\u6700\u65b0\u7248\u672c\u5df2\u7ecf\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002mark as already fixed\u3002\n. ",
    "ulyn": "@fengtianxp \u6211\u4e5f\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u5347\u7ea7\u4e86\u6700\u65b0\u7248\u672c\uff0c\u8f6c\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u8fd8\u662f\u5e26\u7740\\t \u5bfc\u81f4\u6d4f\u89c8\u5668\u65e0\u6cd5\u89e3\u6790\uff0c\u8bf7\u95ee\u4f60\u662f\u600e\u4e48\u6210\u529f\u89e3\u6790\u7684\uff0c\u5347\u7ea7\u5230\u4ec0\u4e48\u7248\u672c\uff1f\n. ",
    "HDHunter": "Yes,thanks very much .\n. ",
    "depyuka": "\u662f1.1.41\u518d\u4e4b\u524d\u7684\u7248\u672c\uff0c\u597d\u50cf\u7248\u672c\u53f7\u662f1.1.14\u8fd8\u662f30\u6765\u7740\n. ",
    "liudongmiao": "\u597d\u5427\uff0c\u4e0d\u8fc7\u6211\u6ca1\u60f3\u660e\u767d\u4e3a\u4ec0\u4e48\u4f1a\u6709\u6027\u80fd\u95ee\u9898\u3002\n\u53ea\u662f\u5224\u65ad\u4e86\u4e0b\u7c7b\uff0c\u5982\u679c\u662fJSONObject\u7684\u5b50\u7c7b\uff0c\u5c31\u4f7f\u7528\u8fd9\u4e2a\u5b50\u7c7b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5199\u6b7bJSONObject\u800c\u5df2\u3002\n\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\uff0c\u60a8\u6709\u66f4\u597d\u7684\u5efa\u8bae\u4e48\uff1f\n. ",
    "darkjune": "\u5f00\u6e90\u7ad9\u6700\u8fd1\u88ab\u963f\u91cc\u505c\u6389\u4e86\n. ",
    "markho1024": "\u55ef\uff0c\u53d1\u73b0\u95ee\u9898\u4e86\uff0c\u662f\u53ea\u5199\u4e86 SerializerFeature.WriteNullStringAsEmpty\uff0c\u6ca1\u6709\u5199SerializerFeature.WriteMapNullValue\u3002WriteNullStringAsEmpty\u5fc5\u987b\u5f97\u914d\u5408WriteMapNullValue\u4f7f\u7528\uff1f\n. ",
    "lephix": "\u8fd9\u4e2a\u6587\u6863\u6ca1\u6709\u8bf4\uff0c\u786e\u5b9e\u662f\u4e00\u4e2a\u5c0f\u5751\u3002\n. ",
    "oemers": "\u628a\u6210\u5458\u53d8\u91cf \u58f0\u660e\u4e3a  public\u7684    \u4e0d\u4f1a \u6709\u95ee\u9898\u3002      \u5bf9getter\u548c setter\u4f30\u8ba1\u505a\u4e86\u7279\u6b8a\u5904\u7406\u3002\n. ",
    "vintagewang": "\u76fc\u590d  :100: \n. ",
    "wensong": "\u6ca1\u4eba\u5173\u6ce8\u4e48\uff1f\n. @ptma \u6211\u8fd9\u91cc\u8fd8\u662f\u4e0d\u884c\uff0c\u4f7f\u7528\u7248\u672c\u662f1.1.41\njava\n    public static void main(String[] args) {\n        Map<Integer, String> map = new HashMap<Integer, String>();\n        map.put(1, \"hello\");\n        System.out.println(JSON.toJSONString(map, SerializerFeature.QuoteFieldNames));\n        System.out.println(JSON.toJSON(map));\n    }\n\u7ed3\u679c\u662f\n{1:\"hello\"}\n{\"1\":\"hello\"}\n. ",
    "TerryKwan": "\u6211\u4e5f\u9700\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u5e0c\u671b\u540c\u65f6\u5b9a\u5236SerializeConfig\u548cSerializeFilter\u3002\u5e0c\u671b\u65b0\u7248\u672c\u80fd\u65e9\u70b9\u53d1\u5e03\u3002\n. ",
    "dulr50": "map, bean\u90fd\u53ef\u4ee5\uff0c\u80fd\u7ed9\u51fa\u5177\u4f53\u65b9\u6848\u5417\uff1f\n. ",
    "KBCode": "\u4f7f\u7528\u522b\u540d\uff0c\u4f8b\u5982\uff1a\n@JSONField(name=\"\u65e5\u671f\")\nprivate Date  date;\n@JSONField(name=\"\u6027\u522b\")\nprivate String sex;\n. ",
    "cipchk": "\u6211\u521a\u505a\u7684\u65f6\u5019\u4e5f\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u6ca1\u6709\u6df1\u7a76\uff0c\u5927\u6982\u662f\u8fd9\u6837\u5b50\uff0c\u6df7\u6dc6\u9879\u76ee\u65f6\u4f1a\u4ea7\u751f\u5f88\u591afastjson\u7684\u8b66\u544a\uff0c\u6240\u4ee5\u53d8\u6210\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002\u76ee\u524d\u6211\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u76f4\u63a5\u5ffd\u7565\u6389\uff1a\n-dontwarn com.alibaba.fastjson.**\n. ",
    "liangan11": "\u521a\u6536\u5047\uff0c\u9ebb\u70e6\u4e86\n. ",
    "gaozone-talend": "Actually my implementation still not so good about the accelerate rate, (currently it's same as original).\nWhen allocate the buffer size according to the length, it's better to allocate 1.5log(2)length instead of log(2)length, if the data length meet the normal distribution, the first buffer have half chance to re-allocate again. so why not use \nnew char[allocateLength + (allocateLength >>>1)];\n//instead of \n//new char[allocateLength];\n. Already done. #224 \n. ",
    "ttoommbb": "Update: How carefulness I am, the assert should be :\nassert (1<= length;\nThen all test passed.\nSorry I added this line after execution the integration test, so I just thought it was OK.\n. ",
    "abel533": "\u6d4b\u8bd5\u5bf9\u8c61\uff1a\n``` java\npublic class Isea533 {\n    private String mName;\n    private String mPassword;\npublic String getmName() {\n    return mName;\n}\n\npublic void setmName(String mName) {\n    this.mName = mName;\n}\n\npublic String getmPassword() {\n    return mPassword;\n}\n\npublic void setmPassword(String mPassword) {\n    this.mPassword = mPassword;\n}\n\npublic static void main(String[] args) {\n    Isea533 isea533 = new Isea533();\n    isea533.setmName(\"isea533\");\n    isea533.setmPassword(\"123456\");\n    String json = JSON.toJSONString(isea533);\n    System.out.println(json);\n}\n\n}\n```\n\u8f93\u51fa\u7ed3\u679c:\n\n{}\n. setter\u548cgetter\u65b9\u6cd5\u6ca1\u6709\u95ee\u9898\u3002\n\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\njava\npublic class TestBean {\n    public static void main(String[] args) {\n        System.out.println(Introspector.decapitalize(\"name\"));\n        System.out.println(Introspector.decapitalize(\"Name\"));\n        System.out.println(Introspector.decapitalize(\"mName\"));\n        System.out.println(Introspector.decapitalize(\"NAME\"));\n    }\n}\n\u8f93\u51fa\uff1a\n\nname\nname\nmName\nNAME\n\n\u4e0a\u9762\u547d\u540d\u65b9\u5f0f\u4e2d\u53ea\u6709\u7b2c\u4e8c\u79cd\u662f\u4e0d\u5408\u6cd5\u7684.....mName\u662f\u6ca1\u95ee\u9898\u95ee\u9898\u7684\u3002\n\u5b9e\u9645\u4e0a\u4f60\u4eec\u53ef\u4ee5\u53c2\u8003java.bean.Introspector#decapitalize\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u7684\u65b9\u6cd5\u6ce8\u91ca\u4e5f\u5f88\u8be6\u7ec6\u3002\n. java\n    /**\n     * Utility method to take a string and convert it to normal Java variable\n     * name capitalization.  This normally means converting the first\n     * character from upper case to lower case, but in the (unusual) special\n     * case when there is more than one character and both the first and\n     * second characters are upper case, we leave it alone.\n     * <p>\n     * Thus \"FooBah\" becomes \"fooBah\" and \"X\" becomes \"x\", but \"URL\" stays\n     * as \"URL\".\n     *\n     * @param  name The string to be decapitalized.\n     * @return  The decapitalized version of the string.\n     */\n    public static String decapitalize(String name) {\n    if (name == null || name.length() == 0) {\n        return name;\n    }\n    if (name.length() > 1 && Character.isUpperCase(name.charAt(1)) &&\n            Character.isUpperCase(name.charAt(0))){\n        return name;\n    }\n    char chars[] = name.toCharArray();\n    chars[0] = Character.toLowerCase(chars[0]);\n    return new String(chars);\n    }\n. \u4e0a\u9762\u7684getter\u548csetter\u662f\u7b26\u5408\u89c4\u8303\u7684\uff0c\u53e6\u5916\u6211\u7528\u7684IDEA\uff0c\u4e0d\u662fEclipse\u3002\u3002\n. getMName\u8fd9\u6837\u7684\u540d\u5b57\u5b9e\u9645\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bb5\u662fMName\u4e0d\u662fmName\n. \u786e\u5b9e\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u5728\u8fd9\u91cc\uff1a\nhttps://github.com/alibaba/fastjson/commit/a88a62e985992bd7dd124aa0800d23b6e98916c5\n\u6ca1\u60f3\u523013\u5e74\u7684\u9694\u4e86\u4e00\u5e74\u624d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\nhttps://github.com/alibaba/fastjson/pull/106\n. ",
    "dragspace": "\u8fd9\u4e2a\u81ea\u52a8\u751f\u6210\u7684get\u548cset\u65b9\u6cd5\u6709\u8c8c\u4f3ceclipse \u6709\u70b9\u95ee\u9898\u554a \u4f60\u628asetmName \u8fd9\u6837\u7684\u6539\u6210 setMName \u8bd5\u8bd5\n. private String mName;\n    private String mPassword; // eclipse \u9047\u5230 xYyyy \u8c8c\u4f3c\u751f\u6210\u7684get\u548cset\u6709\u70b9\u95ee\u9898\uff0c \u4f60\u624b\u52a8\u6539get\u548cset \u5c31\u53ef\u4ee5\u4e86\n```\npublic String getMName() {\n    return mName;\n}\npublic void setMName(String mName) {\n    this.mName = mName;\n}\npublic String getMPassword() {\n    return mPassword;\n}\npublic void setMPassword(String mPassword) {\n    this.mPassword = mPassword;\n}\npublic static void main(String[] args) {\n    GG isea533 = new GG();\n    isea533.setMName(\"isea533\");\n    isea533.setMPassword(\"123456\");\n    String json = JSON.toJSONString(isea533);\n    System.out.println(json);\n}\n```\n. ",
    "jnan77": "master\u7684\u8c8c\u4f3c\u662f\u4fee\u590d\u4e86\uff0c\u4f46\u662f1.1.42\u597d\u50cf\u8fd8\u662f\u6ca1\u6709\u4fee\u590d\u7684,\n\u4fee\u590dcommit\u662f\uff1ahttps://github.com/alibaba/fastjson/commit/5154d2110ebde63f0e9a7173738e0393135a5424\n. ",
    "junfeng-feng": "``` java\n   private String flwNo;\n    public void setflwNo(String flwNoString) {\n        this.flwNo = flwNoString;\n    }\npublic String getflwNo() {\n    return this.flwNo;\n}\n\n```\n\u4e5f\u4e0d\u652f\u6301\uff0c\u8fd9\u79cd\u5b8c\u5168\u4ee5fieldName\u62fc\u5199getter/setter\u7684\u65b9\u6cd5\n. java\n    private String aipsLength;\n    public void setaipsLength(String aipsLengthString) {\n        this.aipsLength = aipsLengthString;\n    }\n    public String getaipsLength() {\n        return this.aipsLength;\n    }\n\u4f8b\u5b50\u4e3e\u9519\u4e86\uff0c\u8fd9\u6837\u7684\u6ca1\u529e\u6cd5\u5427\uff1f\n. fastjson\u7684\u6e90\u4ee3\u7801\u76ee\u524d\u786e\u5b9e\u53ea\u652f\u6301\uff0c\u4ee5\u4e0a\u4e09\u79cd....\n. ",
    "nnstn": "Multiple markers at this line\n```\n- Type mismatch: cannot convert from element type Object to HashMap\n\nHashMap is a raw type. References to generic type HashMap should be \n\nparameterized\n```\n\u4f60\u8fd9\u91cc\u00a0configDataList \u00a0 List \u4e2d \u7c7b\u578b\u4e0e HashMap\u4e0d\u5339\u914d\uff0c\u7f16\u8bd1\u901a\u4e0d\u8fc7\u7684\nwangjn1130@163.com\n\u00a0\u53d1\u4ef6\u4eba\uff1a\u00a0bglmmz\u53d1\u9001\u65f6\u95f4\uff1a\u00a02014-10-20\u00a015:26\u6536\u4ef6\u4eba\uff1a\u00a0alibaba/fastjson\u4e3b\u9898\uff1a\u00a0[fastjson] \u628ajson\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u6210Map\u7684\u9519\u8bef\u3002 (#230)\u7528\u7684fastjons\u7684\u7248\u672c\u662f\uff1a 1.1.41\njson\u5b57\u7b26\u4e32\u5982\u4e0b\uff1a\n``` json\n{\n\"user_id\": 5300,\n\n\"flag\": 0,\n\n\"configs\": [\n\n    {\n\n        \"user_id\": 5300,\n\n        \"config_item_id\": 1015,\n\n        \"type\": 0\n\n    },\n\n    {\n\n        \"user_id\": 5300,\n\n        \"config_item_id\": 1016,\n\n        \"type\": 0\n\n    }\n\n]\n\n}\n```\n\u53cd\u5e8f\u5217\u5316\u4ee3\u7801\u5982\u4e0b\uff1a\n``` java\nHashMap jsonMap = JSON.parseObject(jsonData, HashMap.class);\nList configDataList = (List)jsonMap.get(\"configs\");\nfor(HashMap configData : configDataList ){//\u8fd9\u884c\u51fa\u9519\nint roleId = (Integer)configData.get(\"type\");\n\nSystem.out.println(\"config.type:\" + roleId);\n\n}\n```\n\u9519\u8bef\u4fe1\u606f\u5982\u4e0b\uff1a\nException in thread \"main\" java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to java.util.HashMap\n\u8bf7\u95ee\uff0c\u8fd9\u79cd\u5f62\u5f0fjson\u6570\u636e\uff0c\u8981\u53cd\u5e8f\u5217\u5316\u6210HashMap\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f\n\u2014\nReply to this email directly or view it on GitHub.\n. \u6211\u8bd5\u4e86\u4e0b\u8fd9\u4e2a\u6ca1\u95ee\u9898\u554a\uff1f? ?fastjson-1.1.33.jar\nwangjn1130@163.com\n?\u53d1\u4ef6\u4eba\uff1a?liugangnhm\u53d1\u9001\u65f6\u95f4\uff1a?2014-10-29?10:58\u6536\u4ef6\u4eba\uff1a?alibaba/fastjson\u4e3b\u9898\uff1a?Re: [fastjson] \u7a7a\u683c\u5bfc\u81f4\u89e3\u6790\u5931\u8d25\u7684\u95ee\u9898\uff1f\uff1f\uff1f\uff1f (#233)    String json1 = \"{ \\\"sql\\\":\\\"insert into tb2 values (82,7),(83,8);\\\",\\\"start\\\":1414464792221, \\\"end\\\":1414464792225, \\\"send\\\":456, \\\"recv\\\":140}\";\n    String json2 = \"{\\\"sql\\\":\\\"insert into tb2 values (82,7),(83,8);\\\",\\\"start\\\":1414464792221, \\\"end\\\":1414464792225, \\\"send\\\":456, \\\"recv\\\":140}\";\n    System.out.println(JSON.parseObject(json1, SqlStatBean.class));\n    System.out.println(JSON.parseObject(json2, SqlStatBean.class));\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "mupengX": "configData\u662fJSONObject \uff0cJSONObject \u5b9e\u73b0\u4e86map\u63a5\u53e3\uff0c\u91cc\u9762\u5305\u542b\u4e00\u4e2amap\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u5f53\u4f5cmap\u6765\u7528\uff0c\u4e0d\u7528\u8f6cHashMap\u7684\u5440\n. ",
    "wangmingshuo": "android\u7248\u672c1.1.34\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u60c5\u51b5\uff0c\u5347\u7ea7\u80fd\u89e3\u51b3\u5417\uff1f\n. ",
    "liugangnhm": "```\n    String json1 = \"{ \\\"sql\\\":\\\"insert into tb2 values (82,7),(83,8);\\\",\\\"start\\\":1414464792221, \\\"end\\\":1414464792225, \\\"send\\\":456, \\\"recv\\\":140}\";\n    String json2 = \"{\\\"sql\\\":\\\"insert into tb2 values (82,7),(83,8);\\\",\\\"start\\\":1414464792221, \\\"end\\\":1414464792225, \\\"send\\\":456, \\\"recv\\\":140}\";\nSystem.out.println(JSON.parseObject(json1, SqlStatBean.class));\nSystem.out.println(JSON.parseObject(json2, SqlStatBean.class));\n\n```\nSystem.out.println(JSON.parseObject(json2, SqlStatBean.class)); \u4f1a\u62a5\u9519\nException in thread \"main\" com.alibaba.fastjson.JSONException: not match : - e\n    at com.alibaba.fastjson.parser.JSONLexerBase.nextTokenWithChar(JSONLexerBase.java:372)\n    at com.alibaba.fastjson.parser.JSONLexerBase.nextTokenWithColon(JSONLexerBase.java:350)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseExtra(JavaBeanDeserializer.java:411)\n    at com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer.parseField(ASMJavaBeanDeserializer.java:69)\n    at com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer.parseField(ASMJavaBeanDeserializer.java:86)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:310)\n    at com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer.parseRest(ASMJavaBeanDeserializer.java:96)\n    at Fastjson_ASM_SqlStatBean_1.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:514)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:244)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:220)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:179)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:327)\n    at pgstat.stat.PGXCXactStat.main(PGXCXactStat.java:49)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\n. my version:1.1.41.\n i will try other version later.\n. ",
    "StrikeW": "\u6700\u65b0\u7684\u7248\u672c\u8c8c\u4f3c\u5bf9\u4e0d\u53ef\u89c1\u7684unicode\u652f\u6301\u7684\u633a\u597d\u7684\n. ",
    "xusheng1987": "\u5bf9Map\u8c8c\u4f3c\u6ca1\u4f5c\u7528. \u540c\u95ee,\u6211\u4e5f\u60f3\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\n. \u95ee\u9898\u627e\u5230\u4e86\uff0c\u6211\u5728fastJsonConfig\u91cc\u914d\u7f6e\u4e86\u4e2aserializeFilters\uff0c\u628a\u6240\u6709\u7684value\u90fd\u8f6c\u5316\u4e86String\u7c7b\u578b\uff0c\u7c7b\u578b\u4e0d\u662fdouble\uff0c\u81ea\u7136\u65e0\u6cd5\u89e3\u6790\u3002\u95ee\u9898\u6765\u4e86\uff0c\u987a\u5e8f\u4f3c\u4e4e\u662f\u5148\u8d70serializeFilters\uff0c\u518d\u8d70JSONField.format\u914d\u7f6e\uff0c\u73b0\u5728\u6211\u60f3\u5148\u628adouble\u7c7b\u578b\u7684\u5b57\u6bb5\u7ed3\u679c\u8f6c\u6210\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff0c\u518d\u5c06\u8be5\u5b57\u6bb5\u4ee5\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u8f93\u51fa(\u4f8b\u59825.0->\"5.00\")\uff0c\u8bf7\u95ee\u8be5\u600e\u4e48\u5904\u7406. WriteNullStringAsEmpty\u53ea\u662f\u628anull\u8f6c\u6210\u7a7a\u5b57\u7b26\u4e32\uff0c\u8ddf\u6211\u8bf4\u7684\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0cWriteNonStringValueAsString\u662f\u628a\u4e0d\u662f\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684value\u8f6c\u6210\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f. \u6700\u65b0\u7684\u4e0d\u662f1.2.24\u5417\uff0c\u600e\u4e48\u51fa\u6765\u4e2a1.2.28\uff1f. @wenshao \u662f\u7528\u6cd5\u6709\u95ee\u9898\u5417. 1.2.32\u4e2d\u8fd8\u662f\u6ca1\u4fee\u590d. \u611f\u8c22\uff0c1.2.33\u95ee\u9898\u5df2\u89e3\u51b3. https://github.com/alibaba/fastjson/wiki/enable_autotype. \u8fd9\u4e0d\u662f\u4e2a\u6b63\u786e\u7684\u95ee\u9898. \u53cd\u5e8f\u5217\u5316\u4e0d\u80fd\u7528SerializerFeature\u5427. SerializerFeature\u65e0\u6548\u7684\u5730\u65b9\u8fd8\u6709\u4e0d\u5c11\u5462\uff0c\u5f97\u6162\u6162\u4fee\u590d. ",
    "hehaoyang": "\u6570\u5b57\u7c7b\u578b\u4e3anull\u65f6\uff0c\u8fd4\u56de\u7684\u8fd8\u662f\u4e3anull\uff0c\u5e0c\u671b\u81ea\u52a8\u8f6c\u5316\u4e3a\u7a7a\u5b57\u7b26\u4e32. ",
    "ddatsh": "<mvc:annotation-driven>\n    <mvc:message-converters register-defaults=\"true\">\n        <bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n            <property name=\"supportedMediaTypes\">\n                <list>\n                    <value>text/html;charset=UTF-8</value>\n                    <value>application/json</value>\n                </list>\n            </property>\n            <property name=\"features\">\n                <array>\n                    <value>WriteNonStringKeyAsString</value>\n                    <value>BrowserCompatible</value>\n                </array>\n            </property>\n        </bean>\n    </mvc:message-converters>\n</mvc:annotation-driven>\n\u8bf7\u6559\u4e0b\u5728spring webmvc \u91cc\u600e\u4e48\u53bb\u7528 ValueFilter\u5462\uff1f\n\u8981\u518d\u81ea\u5df1\u5305\u4e00\u4e2a HttpMessageConverter\uff1f\n. json=JSON.toJSONString(map,SerializerFeature.BrowserCompatible);\n. ",
    "caijia": "compile 'com.alibaba:fastjson:1.1.34.android'\n1.134.android \u4e3a\u7248\u672c\u53f7\n. ",
    "opencheer": "\u95ee\u4e0b\u600e\u4e48\u628asrc\u5e95\u4e0b\u7684java\u6587\u4ef6\u5bfc\u5165\u5230\u5de5\u7a0b\u76ee\u5f55\u4e0b\uff0c\u662f\u9700\u8981\u65b0\u5efa\u4e00\u4e2a module\u4e48\n. ",
    "hexi": "\u914d\u7f6e\u5982\u4e0b:\n```\n        class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n\n\napplication/json;charset=UTF-8\n\n\n\n<bean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\">\n    <property name=\"messageConverters\">\n        <list>\n            <ref bean=\"fastJsonHttpMessageConverter\" />\n        </list>\n    </property>\n</bean>\n\n```\n. \u53cd\u73b0\u4e86\u95ee\u9898\u662f\u6211\u7684Controller\u63a5\u53d7\u7684\u4e00\u4e2a\u5bb9\u5668\u5c31\u4e0d\u884c\uff0c\u8fd9\u6837\u4f20\u8fdb\u6765\u7684\u662fList \u5bf9\u8c61\n```\n@RequestMapping(value=\"json\", method=RequestMethod.POST)\n    public Callable> deserailize(@RequestBody final List persons) {\n        System.out.println(persons.get(0).getName());\n        System.out.println(persons.get(0).getSex());\n        System.out.println(persons.get(1).getName());\n        System.out.println(persons.get(1).getSex());\n        return new Callable>() {\n            @Override\n            public List call() throws Exception {\n            return persons;\n        }\n    };\n}\n\n```\n\u4e0b\u9762\u8fd9\u6837\u5c31\u53ef\u4ee5\uff1a\n```\n@RequestMapping(value=\"json\", method=RequestMethod.POST)\n    public Callable deserailize(@RequestBody final Person person) {\n        return new Callable() {\n        @Override\n        public Person call() throws Exception {\n            return person;\n        }\n    };\n}\n\n```\n. ",
    "yhonet": "\u697c\u4e0a\u53ef\u80fd\u662f\u6ca1\u6ce8\u610f\u770b\u6211\u540e\u9762\u7684\u63cf\u8ff0\uff0c\u6570\u636e\u63d0\u4f9b\u65b9\u6211\u4eec\u662f\u65e0\u6cd5\u8fdb\u884c\u8981\u6c42\u7684\uff0c\u6536\u5230\u7684\u6570\u636e\u53ea\u80fd\u662f\u8fd9\u6837\uff0c\u5e76\u4e14\u4e4b\u524d\u6211\u4eec\u7528GSON\u6765\u89e3\u6790\u662f\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u624b\u6bb5\u6b63\u786e\u5904\u7406\u7684\u3002\n. ",
    "yuanhaoliang": "\u6211\u4e5f\u521a\u597d\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86.\u6309\u697c\u4e0a\u7684\u8bf4\u6cd5\u53ef\u4ee5\u89e3\u51b3,\u4f46\u9632\u6b62\u5faa\u73af\u5f15\u7528\u8f93\u51fa\u7684\u7279\u6027\u5c31\u4e0d\u80fd\u7528\u4e86\u54e6?\n. ",
    "strivezsh": "\u770b\u5230\u4e86 \u8c8c\u4f3c \u6709\u4eba\u8bf4 \u53ea\u6709\u7b2c\u4e00\u5c42 \u6709\u987a\u5e8f\u554a\n. +1\n. ",
    "lhcpig": "\u6211\u627e\u5230com.aliyun.odps \u5305\u4e86\nhttp://help.aliyun.com/view/11108327_13506337.html\n. ",
    "veison": "@lhcpig   \u8b1d\u8b1d\u3002\u627e\u4e86\u597d\u5c31\u5440\uff0c\u9019\u6771\u6771\n. ",
    "winkeyzhao": "me too\uff0ccould't find odps\n. ",
    "jsckdao": "\u4e0d\u8fc7\u7528\u4e00\u4e2a\u7a7a\u7684NameFilter\u53ef\u4ee5\u4f7f\u5176\u6062\u590d\u6b63\u5e38:\njava\nString json = JSON.toJSONString(map, new NameFilter() {\n    @Override\n    public String process(Object object, String name, Object value) {\n        return name;\n    }\n});\n. ",
    "sinlang": "public static class ByteBufferCodec implements ObjectSerializer, ObjectDeserializer {\n```\n    public static ByteBufferCodec instance = new ByteBufferCodec();\npublic final void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType)\n        throws IOException {\n    SerializeWriter out = serializer.getWriter();\n\n    if (object == null) {\n        out.writeNull();\n        return;\n    }\n    ByteBuffer buf = ((ByteBuffer) object);\n    byte[] array = new byte[buf.remaining()];\n    buf.get(array);\n    out.writeByteArray(array);\n}\n\n@Override\npublic <T> T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n    JSONLexer lexer = parser.getLexer();\n\n    if (lexer.token() == JSONToken.NULL) {\n        lexer.nextToken();\n        return null;\n    }\n\n    if (lexer.token() != JSONToken.LITERAL_STRING) {\n        throw new JSONException(\"expect string here\");\n    }\n    byte[] bytes = lexer.bytesValue();\n    lexer.nextToken(JSONToken.COMMA);\n\n    return (T) ByteBuffer.wrap(bytes);\n}\n\n@Override\npublic int getFastMatchToken() {\n    return JSONToken.LITERAL_STRING;\n}\n\n}\n```\n. ",
    "zwqlive": "\u5728\u6211\u5c06 {\"@type\":\"com.test.fastjson.TestClass\",\"hashSet\":Set[1,4]}\n\u4e2d\u7684Set\u53bb\u6389\uff0c\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u683c\u5f0f\uff0c\u5374\u80fd\u591f\u6210\u529f\u53cd\u5e8f\u5217\u5316\n. \u4e4b\u524d\u7528\u76841.1.17\n\u6362\u4e86\u65b0\u7248\u672c\u4e4b\u540e\u6ca1\u8fd9\u4e2a\u95ee\u9898\u4e86\uff01\n. TestClass\u7c7b\u4e2d\u518d\u52a0\u5165\u4e00\u4e2a\u6210\u5458Member\uff0c\u8be5\u6210\u5458\u7c7b\u542b\u6709hashSet\u6210\u5458\u65f6,\u4ecd\u7136\u6709\u95ee\u9898\uff0c\u4e0d\u80fd\u6b63\u786e\u7684\u53cd\u5e8f\u5217\u5316\n\u5e8f\u5217\u5316\u540e\u7684\u5b57\u7b26\u4e32\u4e3a\uff1a\n{\"@type\":\"com.test.fastjson.TestClass\",\"hashSet\":Set[1,4],\"list\":[[1,2],[3,4]],\"member\":{\"memIds\":Set[]}}\n\u53cd\u5e8f\u5217\u5316\u65f6\u5019\u62a5\u9519\uff1a\nException in thread \"main\" com.alibaba.fastjson.JSONException: syntax error, expect {, actual Set, pos 98, fieldName member\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:232)\n    at com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer.parseRest(ASMJavaBeanDeserializer.java:100)\n    at Fastjson_ASM_Member_2.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:33)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:420)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:330)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:135)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:551)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:250)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:226)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:180)\n    at com.test.fastjson.TestClass.testSet(TestClass.java:64)\n    at com.test.fastjson.TestClass.main(TestClass.java:33)\n. \u76ee\u524d\u529e\u6cd5\u8fd8\u662f\u9700\u8981\u66ff\u6362\u6389Set\u4e4b\u540e\u624d\u80fd\u6b63\u786e\u7684\u53cd\u5e8f\u5217\u5316\n. ``` java\npublic class FastJsonTest {\npublic static void main(String[] args) {\n    TestClass ts = new TestClass();\n    ts.getHashSet().add(1);\n    ts.getHashSet().add(4);\n    ts.getMember().getHashSet().add(10);\n    ts.getMember().getHashSet().add(15);\n    String jsonStr = JSON.toJSONString(ts, new SerializerFeature[]{\n            SerializerFeature.WriteClassName, SerializerFeature.DisableCircularReferenceDetect\n    });\n    System.out.println(jsonStr);\n    ts = JSON.parseObject(jsonStr, TestClass.class);\n    for (Integer val : ts.getHashSet()) {\n        System.out.println(val);\n    }\n}\n\n\npublic static class TestClass {\n\n    private Set<Integer> hashSet = new HashSet<Integer>();\n    private Member member = new Member();\n\n    public TestClass() {\n    }\n\n    public Set<Integer> getHashSet() {\n        return hashSet;\n    }\n\n    public void setHashSet(Set<Integer> hashSet) {\n        this.hashSet = hashSet;\n    }\n\n    public Member getMember() {\n        return member;\n    }\n\n    public void setMember(Member member) {\n        this.member = member;\n    }\n}\n\npublic static class Member{\n    private Set<Integer> hashSet = new HashSet<Integer>();\n\n    public Member() {\n    }\n\n    public Set<Integer> getHashSet() {\n        return hashSet;\n    }\n\n    public void setHashSet(Set<Integer> hashSet) {\n        this.hashSet = hashSet;\n    }\n}\n\n}\n```\n\u4ee5\u4e0a\u662f\u6211\u7684\u4ee3\u7801\uff1a\nmaven dependency:\n<dependency>\n          <groupId>com.alibaba</groupId>\n          <artifactId>fastjson</artifactId>\n          <version>1.1.36</version>\n</dependency>\n\u7ed3\u679c\u8fd8\u662f\u62a5\u9519:\n{\"@type\":\"org.ngsoft.game.server.FastJsonTest$TestClass\",\"hashSet\":Set[1,4],\"member\":{\"hashSet\":Set[10,15]}}\nException in thread \"main\" com.alibaba.fastjson.JSONException: syntax error, expect {, actual Set, pos 67\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:212)\n    at com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer.parseRest(ASMJavaBeanDeserializer.java:96)\n    at Fastjson_ASM_TestClass_1.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:513)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:244)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:220)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:179)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:323)\n    at org.ngsoft.game.server.FastJsonTest.main(FastJsonTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\n. @shellj \n\u591a\u6b21\u6d4b\u8bd5\u4e4b\u540e\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff1a\n\u4e3ahashSet\u6dfb\u52a0\u4e0a\u6cdb\u578b\uff0c\u5e76\u4e14TestClass \u548cMember\u7684\u8bbf\u95ee\u5c5e\u6027\u8bbe\u7f6epublic\u65f6\u624d\u4f1a\u62a5\u8fd9\u4e2a\u9519\n. \n\u6362\u4e86jackson\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0jackson\u6ca1\u8fd9\u4e2a\u95ee\u9898\n```\n    private static void jackson() throws JsonParseException, JsonMappingException, IOException{\n        Holder holder = new Holder();\n        List array = new ArrayList<>();\n        array.add(1);\n        array.add(2);\n        holder.vals.put(1, array);\n        System.out.println(\"holder.getVals().get(1).getClass()=\"+holder.getVals().get(1).getClass());\n        ObjectMapper objectMapper = new  ObjectMapper();\n        String json = objectMapper.writeValueAsString(holder);\n        System.out.println(json);\n        Holder holder2 = objectMapper.readValue(json, Holder.class);\n        System.out.println(\"holder2.getVals().get(1).getClass()=\"+holder2.getVals().get(1).getClass());\n}\n\n```\n\u8f93\u51fa\uff1a\nholder.getVals().get(1).getClass()=class java.util.ArrayList\n{\"vals\":{\"1\":[1,2]}}\nholder2.getVals().get(1).getClass()=class java.util.ArrayList. \n\u6362\u4e86jackson\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0jackson\u6ca1\u8fd9\u4e2a\u95ee\u9898\n```\n    private static void jackson() throws JsonParseException, JsonMappingException, IOException{\n        Holder holder = new Holder();\n        List array = new ArrayList<>();\n        array.add(1);\n        array.add(2);\n        holder.vals.put(1, array);\n        System.out.println(\"holder.getVals().get(1).getClass()=\"+holder.getVals().get(1).getClass());\n        ObjectMapper objectMapper = new  ObjectMapper();\n        String json = objectMapper.writeValueAsString(holder);\n        System.out.println(json);\n        Holder holder2 = objectMapper.readValue(json, Holder.class);\n        System.out.println(\"holder2.getVals().get(1).getClass()=\"+holder2.getVals().get(1).getClass());\n}\n\n```\n\u8f93\u51fa\uff1a\nholder.getVals().get(1).getClass()=class java.util.ArrayList\n{\"vals\":{\"1\":[1,2]}}\nholder2.getVals().get(1).getClass()=class java.util.ArrayList. ",
    "shellj": "\u6211\u8fd9\u8bd5\u4e86\u4e24\u4e2a\u7248\u672c(1.1.17\u548c1.1.36)\u90fd\u6ca1\u95ee\u9898\u3002\n``` java\npublic class FastJsonSetTest {\n    public static void main(String[] args) {\n        TestClass ts = new TestClass();\n        Member member = new Member();\n        member.members.add(9);\n        member.members.add(10);\n        ts.getHashSet().add(1);\n        ts.getHashSet().add(4);\n        ts.setMember(member);\n        String jsonStr = JSON.toJSONString(ts, new SerializerFeature[] {\n                SerializerFeature.WriteClassName, SerializerFeature.DisableCircularReferenceDetect\n        });\n        System.out.println(jsonStr);\n        ts = JSON.parseObject(jsonStr, TestClass.class);\n        for (Object val : ts.getHashSet()) {\n            System.out.println(val);\n        }\n        member = ts.getMember();\n        for (Object val1 : member.getMembers()) {\n            System.out.println(val1);\n        }\n    }\nstatic class TestClass {\n\n    private Set hashSet = new HashSet();\n    private Member member = new Member();\n\n    public Member getMember() {\n        return member;\n    }\n\n    public void setMember(Member member) {\n        this.member = member;\n    }\n\n    public TestClass() {\n    }\n    public Set getHashSet() {\n        return hashSet;\n    }\n    public void setHashSet(Set hashSet) {\n        this.hashSet = hashSet;\n    }\n}\n\nstatic class Member{\n    private Set members = new HashSet();\n\n    public Member() {\n    }\n\n    public Set getMembers() {\n        return members;\n    }\n\n    public void setMembers(Set members) {\n        this.members = members;\n    }\n}\n\n}\n```\n\u7ed3\u679c\uff1a\njson\n{\"@type\":\"com.test.FastJsonSetTest$TestClass\",\"hashSet\":Set[1,4],\"member\":{\"members\":Set[9,10]}}\n1\n4\n9\n10\n. \u6211\u7528\u4f60\u7684\u4ee3\u7801\u5728\u6211\u8fd9\u91cc\u8dd1\u4e86\u4e00\u4e0b\uff0c\u7ed3\u679c\u6ca1\u95ee\u9898\u3002\nfastjson\u7248\u672c\uff1a\nxml\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.1.36</version>\n        </dependency>\njava\u4ee3\u7801\uff1a\njava\npublic static void main(String[] args) throws Exception {\n        JsonOreMsgColor oremsgcolor;\n        JSONReader reader = new JSONReader(new FileReader(new File(\"hello.json\")));\n        oremsgcolor = reader.readObject(JsonOreMsgColor.class);\n        reader.close();\n        for (String key : oremsgcolor.OreMsgData.keySet()) {\n            ColorInfo colorInfo = oremsgcolor.OreMsgData.get(key);\n            System.out.println(\"key:[\" + key + \"] ,ChName:[\" + colorInfo.getName() + \"] ,FontColor:[\" + colorInfo.getColor() + \"]\");\n        }\n    }\njson\u6587\u4ef6\u5185\u5bb9\uff1a\njson\n{\"OreMsgData\":{\"minecraft:gold_ore\":{\"ChName\":\"\u91d1\u7926\",\"FontColor\":14},\"minecraft:iron_ore\":{\"ChName\":\"\u9435\u7926\",\"FontColor\":6}}}\n\u7ed3\u679c\uff1a\nhtml\nkey:[minecraft:gold_ore] ,ChName:[\u91d1\u7926] ,FontColor:[14]\nkey:[minecraft:iron_ore] ,ChName:[\u9435\u7926] ,FontColor:[6]\n. ",
    "CodePlayer": "\u8fd9\u597d\u50cf\u662f\u4f60\u6ca1\u6709\u5173\u95ed fastjson\u7684\u5faa\u73af\u5f15\u7528\u68c0\u6d4b\u3002\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u5982\u4e0b\u4ee3\u7801\uff1a\n JSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);\n. Sorry\uff0c\u51fa\u73b0\u95ee\u9898\u7684\u5173\u952e\u4e0d\u662f\u4e0a\u8ff0\u4ee3\u7801\uff0c\u800c\u662f\u8f6cJSON\u7684\u96c6\u5408\u662f\u901a\u8fc7Hibernate\u8fd4\u56de\u7684\uff0c\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u6709\u9700\u8981\u61d2\u52a0\u8f7d\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u914d\u7f6e\u4e86\u4e00\u5bf9\u4e00\u7684\u5173\u8054\u3002\n\u4e0d\u77e5\u9053fastjson\u6709\u6ca1\u6709\u73b0\u6709\u7684\u65b9\u6848\u89e3\u51b3\u8be5\u95ee\u9898\u3002\u5982\u679c\u6709\uff0c\u70e6\u8bf7\u544a\u77e5\u4e00\u4e0b\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5e0c\u671b\u80fd\u544a\u77e5\u6709\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u601d\u8def\uff0c\u5e76\u5efa\u8bae\u5728\u4e4b\u540e\u7684\u7248\u672c\u4e2d\u89e3\u51b3\u8be5\u95ee\u9898\u3002\n. @qicosmos \u6839\u636eJavaBean\u89c4\u8303\uff0c\u5982\u679c\u5b57\u6bb5property\u662fboolean\u7c7b\u578b\u7684\uff0c\u5219\u5176getter\u65b9\u6cd5\u540d\u4e3aisProperty()\u3002\n\u6240\u4ee5isProperty()\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0\u5c31\u662fproperty\uff0c\u800c\u4e0d\u662fisProperty\u3002\n\u5982\u679c\u4f60\u60f3\u8fd4\u56de\u7684\u5b57\u6bb5\u540d\u4e3aisProperty\uff0c\u5219getter\u65b9\u6cd5\u5e94\u8be5\u4e3a isIsProperty() \u6216 getIsProperty()\u3002\n. @qicosmos \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u5751\u54e6\uff0c\u8fd9\u662fJavaBean\u89c4\u8303\u91cc\u9762\u89c4\u5b9a\u7684\uff0c\u5b66Java\u7684\u8c8c\u4f3c\u90fd\u5e94\u8be5\u77e5\u9053\u5427\uff0c\u8fd9\u662f\u57fa\u672c\u77e5\u8bc6\u54e6\u3002\u53e6\u5916\uff0c\u4f60\u4eec\u7684getter\u548csetter\u65b9\u6cd5\u90fd\u8fd8\u662f\u81ea\u5df1\u624b\u52a8\u5199\u7684\u4e48\uff1f\u6ca1\u7528\u5f00\u53d1\u5de5\u5177\uff1f\u53ea\u8981\u662f\u4f7f\u7528\u5f00\u53d1\u5de5\u5177\uff0c\u6bd4\u5982Eclipse/MyEclipse\u6216\u8005Idea\uff0c\u90fd\u662f\u5e26\u6709\u81ea\u52a8\u751f\u6210getter\u548csetter\u65b9\u6cd5\u7684\u529f\u80fd\u7684\u3002\u4f60\u53ea\u9700\u8981\u7f16\u5199\u7c7b\u91cc\u9762\u7684\u591a\u4e2a\u5b57\u6bb5\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u6377\u952e\u64cd\u4f5c\uff0c\u4e00\u79d2\u949f\u5c31\u80fd\u81ea\u52a8\u751f\u6210getter\u548csetter\u65b9\u6cd5\u4e86\u3002\n. @qicosmos \u55ef\uff0c\u786e\u5b9e\u5982\u6b64\u3002\u4e0d\u8fc7\u4f60\u5206\u522b\u8bd5\u8bd5\u5b57\u6bb5\u4e3a test \u548c isTest \u65f6\u7684 getter \u548c setter \u65b9\u6cd5\u547d\u540d\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u7684\u65b9\u6cd5\u540d\u662f\u76f8\u540c\u7684\u3002\u4f46\u662f\uff0c\u5728\u6839\u636egetter\u65b9\u6cd5\u540d\u79f0\u53cd\u5411\u89e3\u6790\u51fa\u5b57\u6bb5\u540d\u79f0\u65f6\uff0c\u51e0\u4e4e\u6240\u6709\u6846\u67b6\u7684\u53cd\u5411\u5904\u7406\uff0c\u90fd\u662f\u8fd4\u56de test\uff0c\u800c\u4e0d\u662f isTest\u3002\n\u5982\u679cboolean\u7684\u5b57\u6bb5\u540d\u4ee5isProperty\u5f00\u5934\uff0c\u5219\u65b9\u6cd5\u540d\u4e0e\u5b57\u6bb5\u540d\u4fdd\u6301\u4e00\u81f4\uff0c\u4e5f\u4e3aisProperty()\u3002\n\u5982\u679c\u5b57\u6bb5\u540d\u9996\u5b57\u6bcd\u4e3a\u5927\u5199\uff0c\u4f8b\u5982Property\uff0c\u5219\u65b9\u6cd5\u540d\u4e3agetProperty()\u3002\n\u8fd9\u5c5e\u4e8eJavaBean\u91cc\u9762\u7684\u4e00\u4e9b\u7279\u6b8a\u7ea6\u5b9a\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003JavaBean\u7684\u547d\u540d\u89c4\u8303 http://download.oracle.com/otndocs/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/\u3002 \u4e0a\u9762\u662f\u82f1\u6587\u7684\uff0c\u53ef\u80fd\u4e0d\u597d\u770b\u660e\u767d\uff0c\u8fd9\u91cc\u6709\u4e00\u90e8\u5206\u4e2d\u6587\u4ecb\u7ecd\uff1ahttp://m.blog.csdn.net/blog/QueenJade/7104413\n\u4e25\u683c\u8bf4\u6765\uff0c\u8fd9\u6837\u7684\u5b57\u6bb5\u547d\u540d\u662f\u4e0d\u7b26\u5408JavaBean\u89c4\u8303\u7684\u3002\n. @qicosmos \u90a3\u4f60\u9700\u8981\u81ea\u5df1\u6539\u4e0b getter \u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u6539\u4e3a getIsTest() \u6216 isIsTest() \u5373\u53ef\u3002\n. \u55ef\uff0c\u6211\u4e5f\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u65b9\u6cd5\u6216\u6ce8\u89e3\u5c5e\u6027\u7684\u7b7e\u540d\u90fd\u88ab\u6539\u6389\u4e86\uff0c\u6709\u8f83\u5927\u7684\u5411\u540e\u517c\u5bb9\u98ce\u9669\u3002\n\u4e0d\u8fc7\uff0c\u4e00\u822c\u7684\u9879\u76eejar\u5305\uff0c\u5728\u9879\u76ee\u7a33\u5b9a\u540e\u90fd\u4e0d\u4f1a\u968f\u4fbf\u5347\u7ea7\uff0c\u6240\u4ee5\u65b0\u7248\u672c\u7684\u65b9\u6cd5\u540d\u79f0\u4fee\u6539\u6b63\u786e\uff0c\u4e5f\u662f\u5408\u7406\u7684\uff0c\u4e0d\u7136\u770b\u7740\u522b\u626d\u3002\n. \u6211\u672c\u5730\u6d4b\u8bd5\u4e5f\u6ca1\u53d1\u73b0\u4f60\u6240\u8bf4\u7684\u95ee\u9898\u3002fastjson\uff1a1.2.9-SNAPSHOT\uff0cJava\uff1a1.8.0_73\u3002\n\u7b2c\u4e00\u6b21\uff1a\ntaskCreateTime:Wed Feb 03 16:03:14 GMT+08:00 2016\ntaskCreateTimeStr:null\ntimeout:Fri Mar 04 16:03:14 GMT+08:00 2016\ntimeoutStr:null\n\u7b2c\u4e8c\u6b21\uff1a\ntaskCreateTime:Wed Feb 03 16:03:14 GMT+08:00 2016\ntaskCreateTimeStr:null\ntimeout:Fri Mar 04 16:03:14 GMT+08:00 2016\ntimeoutStr:null\n\u7b2c\u4e09\u6b21\uff1a\ntaskCreateTime:Wed Feb 03 16:03:14 GMT+08:00 2016\ntaskCreateTimeStr:null\ntimeout:Fri Mar 04 16:03:14 GMT+08:00 2016\ntimeoutStr:null\n. \u4e0d\u597d\u610f\u601d\uff0c\u6ca1\u6ce8\u610f Method.getParameterCount() \u662fJDK 8\u7684\u65b0\u589eAPI\u3002\u6211\u672c\u6765\u662f\u7528\u7684JDK 7 u45\uff0c\u4f46\u662fcheckout fastjson\u5230\u672c\u5730\u540e\u53d1\u73b0\u90e8\u5206API\u4e0d\u517c\u5bb9\uff0c\u5fc5\u987b\u5347\u7ea7\u5230JDK 8\u624d\u80fd\u5b8c\u5168\u4e0d\u62a5\u9519\uff0c\u4e8e\u662f\u5c31\u91cd\u65b0\u5b89\u88c5\u4e86JDK 8 u73\u3002Junit Test\u7684\u65f6\u5019\u4e5f\u6ca1\u51fa\u4ec0\u4e48\u95ee\u9898\uff0c\u5c31\u76f4\u63a5commit\u4e86\u3002\n. \u4e0d\u77e5\u9053\u662f\u4e0d\u662f github \u6709bug\uff0c\u60f3\u5c06 fork \u5408\u5e76\u81f3 origin \u6700\u65b0\u7684\u66f4\u65b0\uff0c\u7ed3\u679c\u5374\u5411\u5b98\u65b9\u63d0\u4ea4\u4e86\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55change \u7684 pull request\u3002\n\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u5728\u5176\u4ed6\u9879\u76ee\u7684 fork \u4e0a\u5c31\u6ca1\u95ee\u9898 \u3002. ",
    "cmonkey": "\u5728\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u53ef\u80fdjson \u4e2d\u7684\u5b57\u6bb5\uff0c\u548cpojo \u4e2d\u7684\u5b57\u6bb5\u5e76\u4e0d\u5bf9\u5e94\uff0c\u6240\u4ee5\u9700\u8981\u505a\u53cd\u5e8f\u5217\u5316\u7684\u5b9a\u5236\n\u7279\u522b\u662f\u5728\u5b9a\u4e49\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u7c7b\u578b\u8fd9\u4e9b\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5b57\u6bb5\u540d\u5e76\u4e0d\u5bf9\u5e94\n. \u6211\u521a\u624d\u641c\u7d22spring cloud \u7684\u65f6\u5019\uff0c\u5230\u4f60blog \u4e0a\u4e86\n\u6211\u53d1\u73b0\u5728\u6211\u672c\u5730fastjson 1.2.4 / 1.2.7\u90fd\u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\n\u6211\u4f7f\u7528\u7684jdk version = 1.8.0_60 \n. ",
    "wangjuns": "\u8fd9\u4e2a\u529f\u80fd\u8fd8\u6ca1\u5b9e\u73b0\u5417\uff1f1.2.19\u91cc\u9762\u8fd8\u6ca1\u53d1\u7528\u8d77\u6765\u3002\n. ",
    "xuelliu": "\u53ef\u4ee5\u901a\u8fc7JSONField\u540c\u65f6\u6307\u5b9a\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65f6\u7684\u522b\u540d\u4e48\uff1f\n\u5c31\u50cf@cmonkey\u6240\u8bf4\u7684\uff0cjson\u91cc\u9762\u7684\u5b57\u6bb5\u53ef\u80fd\u662f'_'\u5206\u5272\uff0c\u5e76\u4e0d\u4e00\u5b9a\u662f\u6ee1\u8db3\u9a7c\u5cf0\u89c4\u5219\u3002. ",
    "nnzbz": "\u65b0\u7248\u672c\u8fd8\u4e0d\u652f\u6301\u5440\uff0c\u697c\u4e0a\u7684\u5e76\u6ca1\u770b\u61c2\u697c\u4e3b\u7684\u610f\u601d\uff0c\u8bf7\u6ce8\u610f\u770b\u6700\u540e\u4e00\u6bb5\u8bdd\uff0c\u6211\u4e5f\u60f3\u5f04\u4e2a\u63a5\u53e3\uff0c\u53ef\u662ffastjson\u4e0d\u77e5\u9053\u600e\u4e48\u505a. \u56de\u590d\u597d\u5feb\uff0c\u8d5e\n\u6211\u5728spring mvc\u4e2d\u4f7f\u7528fastjson\uff0c\u4e00\u822c\u4f1a\u7528restful\u7ed9\u5176\u5b83\u7cfb\u7edf\u63d0\u4f9b\u670d\u52a1\u8c03\u7528\uff0c\u8fd9\u65f6\u5019\u901a\u5e38\u4f1a\u5b9a\u4e49\u4e00\u4e9b\u534f\u8bae\uff0c\u4f8b\u5982\uff0c\u8fd4\u56de1\u8868\u793a\u6210\u529f\uff0c0\u8868\u793a\u8868\u793a\u5931\u8d25\uff0c-1\u53c8\u53c2\u6570\u9519\u8bef\u7b49\u7b49\n\u4e3a\u4e86\u5728\u7a0b\u5e8f\u4e2d\u66f4\u5bb9\u6613\u770b\u61c2\u5e76\u9632\u9519\uff0c\u8fd9\u65f6\u5019\u6211\u5c31\u7528\u679a\u4e3e\u6765\u5b9a\u4e49\uff0c\u800c\u4e14\u7528\u4e86\u81ea\u5b9a\u4e49\u679a\u4e3e\uff0c\u4ee3\u7801\u5982\u4e3b\u9898\u4e0a\u8bf4\u7684\n\u5b83\u4eec\u90fd\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u81ea\u5b9a\u4e49\u63a5\u53e3\uff08BaseEnum\uff09\n\u6211\u5efa\u8bae\u80fd\u4e0d\u80fd\u5224\u65ad\u5982\u679c\u662f\u8fd9\u4e2a\u63a5\u53e3\u7684\uff0c\u5c31\u8c03\u7528\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u4ee3\u7801\n\u6211\u8bd5\u4e86\nfastJsonConfig.getSerializeConfig().put(BaseEnum.class, new EnumSerializer());\nfastJsonConfig.getParserConfig().putDeserializer(BaseEnum.class, new EnumSerializer());\n\u8c8c\u4f3c\u4e0d\u884c. \u5b9e\u73b0JSONAware\u63a5\u53e3\u662f\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u63a5\u53e3\u5c31\u66f4\u597d\u4e86. \u8fd8\u6709\uff0cJSONAware\u662f\u5e8f\u5217\u5316\u7684\uff0c\u90a3\u53cd\u5e8f\u5217\u5316\u5462\uff1f\u7528\u54ea\u4e2a\u63a5\u53e3\uff1f. ",
    "caselchen": "\u6709\u6ca1\u6709sample?\n. ",
    "nilday": "\u76ee\u524d\u6d4b\u8bd5\u5bf9scala\u7684map\u5e8f\u5217\u5316\u662f\u4e0d\u6210\u529f\u7684\u3002\u53ea\u6709\u4f7f\u7528scala.collection.JavaConversions.mapAsJavaMap\u8f6c\u6362\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u3002\u4ecejson string\u8f6c\u6362\u4e3a\u5bf9\u8c61\u5e94\u8be5\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\n. ",
    "caorong": "\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u5bf9\u9700\u8981\u5e8f\u5217\u5316\u7684field \u52a0\u4e0a @BeanProperty \u3002\u3002\u3002\ne.g:\njava\nclass ExampleModel(@BeanProperty val xxMsg: XxMsg){\n  @BeanProperty\n  val abc = 123;\n}\n{\"xxmsg\": xxx,  \"abc\": xx}\n. ",
    "kamushin": "@nilday \u4ecejson string\u8f6c\u6362\u4e3ascala map\u5e94\u8be5\u4e5f\u4f1a\u51fa\u95ee\u9898. ",
    "vongosling": "\u7b80\u5355\u770b\u4e86\u4e0b\uff0c\u95ee\u9898\u5e94\u8be5\u51fa\u73b0\u5728\u8fd9\u91cc\uff0c\nif (type instanceof ParameterizedType) {\n                itemType = ((ParameterizedType) type).getActualTypeArguments()[0];\n            } else {\n                itemType = Object.class;\n            }\ntype\u8fd9\u91cc\u662fjava.util.EnumSet,\u4f46\u662f\u8fd9\u5757\u7684\u903b\u8f91\u8d70\u5230else\u4e86\uff0c\u6240\u4ee5\u5c31\u628aitemTYpe\u8f6c\u6362\u6210Object\u4e86\n. \u4e0d\u884c\uff0cpublic static  T decode(byte[] content,Class clazz) {\n    return JSON.parseObject(content, clazz,features);\n}\n\u8fd9\u4e2aclass\u91cc\u9762\uff0c\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u4e0d\u6b62\u679a\u4e3e\uff0c\u6cdb\u578b\uff0c\u65f6\u95f4\u6233\uff0c\u8d27\u5e01\uff0c\u5f88\u591a\u5176\u5b83\u7c7b\u578b\uff0c\u73a9\u4e0d\u8f6c\u7684\n. \u7b49\u7684\u8fd8\u597d\uff5e\n. ",
    "yyhan": "1.2.5\u7248\u672c\u4e5f\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\njava.lang.NumberFormatException: For input string: \"2015-05-12T18:16:24.91\"\n. \u7981\u7528 asm \u7279\u6027\u8bd5\u8bd5. ",
    "sundy-li": "\u662f\u6211  new CommonTypeReference>(), \u6ca1\u6709\u52a0{} \u5bfc\u81f4\u7684\n. #https://github.com/alibaba/fastjson/pull/636   please view my pull request, I fixed it.\n. #636 merged, this issue was fixed\n. @wenshao   \n1  \u56de\u5f52\u6d4b\u8bd5\u6ca1\u901a\u8fc7, \u662f\u56e0\u4e3a\u5df2\u6709StreamWriterTest_writeFieldValue \u5199\u9519\u4e86, \u6ca1\u6709\u8c03\u7528config\u65b9\u6cd5,\u76ee\u524d\u5df2\u7ecf\u63d0\u4ea4\u4fee\u590d\n2  \u5df2\u7ecf\u6dfb\u52a0StreamWriterTest_writeFieldValue_bool \u7c7b \u4fdd\u8bc1\u4fee\u6539\u7684\u4ee3\u7801\u662f\u6b63\u786e\n\u9ebb\u70e6\u67e5\u9605\u5408\u5e76\u4e0b\n. ",
    "liuxinglanyue": "\u6211\u8fd9\u8fb9\u6d4b\u4e86\u4e0b\uff0c\u7b2c\u4e00\u6b21toJSONString \u82b1\u4e86349ms\uff08\u7b2c\u4e00\u6b21\u9700\u8981\u751f\u6210\u5b57\u8282\u7801\uff0c\u6240\u4ee5\u65f6\u95f4\u957f\uff09\uff0c\u7b2c\u4e8c\u6b210ms\u3002\n. \u5efa\u8bae\u697c\u4e3b\u7528btrace\u5206\u6790\u4e0b\u3002\n. btrace\u4ee3\u7801\uff1a\n\u8bf4\u660e\u4e0b\uff1astartserializewrite\u3001endserializewrite\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684clazz\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\uff08\u5373\u4e3a\uff1aserializerClazzName\uff09\n``` java\nimport static com.sun.btrace.BTraceUtils.*;\nimport com.sun.btrace.annotations.BTrace;\nimport com.sun.btrace.annotations.Kind;\nimport com.sun.btrace.annotations.Location;\nimport com.sun.btrace.annotations.OnMethod;\nimport com.sun.btrace.annotations.Return;\nimport com.sun.btrace.annotations.TLS;\n@BTrace\npublic class BTraceFastJsonTest {\n@TLS\nprivate static long startTime_getObjectWriter;\n\n@OnMethod(clazz = \"com.alibaba.fastjson.serializer.JSONSerializer\", method = \"getObjectWriter\")\npublic static void start_getObjectWriter() {\n    startTime_getObjectWriter = timeMillis();\n}\n\n@TLS\nprivate static String serializerClazzName;\n\n@OnMethod(clazz = \"com.alibaba.fastjson.serializer.JSONSerializer\", method = \"getObjectWriter\", location = @Location(Kind.RETURN))\npublic static void end_getObjectWriter(\n        @Return com.alibaba.fastjson.serializer.ObjectSerializer result,\n        Class<?> clazz) {\n    println(str(\"--------------------1-----------------------\"));\n    serializerClazzName = name(classOf(result));\n    println(strcat(\"JSONSerializer.getObjectWriter clazz:\", str(clazz)));\n    println(strcat(\"JSONSerializer.getObjectWriter ObjectSerializer:\",\n            serializerClazzName));\n    println(strcat(\"JSONSerializer.getObjectWriter time:\", str(timeMillis()\n            - startTime_getObjectWriter)));\n}\n\n@TLS\nprivate static long startTime_write;\n\n@OnMethod(clazz = \"com.alibaba.fastjson.serializer.JSONSerializer\", method = \"write\")\npublic static void start_write() {\n    startTime_write = timeMillis();\n}\n\n@OnMethod(clazz = \"com.alibaba.fastjson.serializer.JSONSerializer\", method = \"write\", location = @Location(Kind.RETURN))\npublic static void end_write(Object object) {\n    println(str(\"---------------------3----------------------\"));\n    println(strcat(\"JSONSerializer.write object:\", str(object)));\n    println(strcat(\"JSONSerializer.write time:\", str(timeMillis()\n            - startTime_write)));\n}\n\n@TLS\nprivate static long startTime_serialize_write;\n\n@OnMethod(clazz = \"Serializer_1\", method = \"write\")\npublic static void start_serialize_write() {\n    startTime_serialize_write = timeMillis();\n}\n\n@OnMethod(clazz = \"Serializer_1\", method = \"write\", location = @Location(Kind.RETURN))\npublic static void end_serialize_write() {\n    println(str(\"-------------------2------------------------\"));\n    println(strcat(\"Serializer_1.write time:\", str(timeMillis()\n            - startTime_serialize_write)));\n}\n\n@TLS\nprivate static long startTime;\n\n@OnMethod(clazz = \"com.alibaba.fastjson.JSON\", method = \"toJSONString\")\npublic static void start() {\n    startTime = timeMillis();\n}\n\n@OnMethod(clazz = \"com.alibaba.fastjson.JSON\", method = \"toJSONString\", location = @Location(Kind.RETURN))\npublic static void end() {\n    println(str(\"-------------------4-----------------------\"));\n    println(strcat(\"JSON.toJsonString time:\", str(timeMillis() - startTime)));\n}\n\n}\n```\n. ",
    "honeyleo": "\u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u6bcf\u6b21\u90fd\u662f4\u79d2\uff01\u662f\u5076\u5c14\u7684\uff01\u4e0d\u77e5\u9053\u662f\u4e0d\u662fprivate Timestamp createTime;\u8fd9\u4e2a\u95ee\u9898\uff1f\n. ",
    "sandaobusi": "\u6211\u4e5f\u590d\u73b0\u4e86\uff0ccom.alibaba.fastjson.JSONException: unclosed string : ^Z\n1.2.6\u7248\u672c\uff0c\u770b\u8d77\u6765\u50cf\u7279\u6b8a\u5b57\u7b26\n. \u590d\u73b0\u65b9\u6cd5\uff1avi\u6a21\u5f0f\u6309\u4f4fctrl\uff0c\u6309v z\u5c31\u53ef\u4ee5\u6253\u51fa\u6765\u8fd9\u4e2a\u5b57\u7b26\uff0c\u641c\u4e86\u4e0b\u662f\u4e00\u4e2a\u6587\u4ef6\u7ed3\u675f\u7b26\uff0cjson\u7684\u5b57\u6bb5\u51fa\u73b0\u8fd9\u4e2a\u5b57\u7b26\u53cd\u89e3\u6790\u5931\u8d25\n. ",
    "ChetWang": "\u7528\u6700\u65b0\u7684fastjson 1.2.4\u4ecd\u6709\u8fd9\u4e2a\u95ee\u9898\u5b58\u5728\n. \u6211\u78b0\u5230\u95ee\u9898\u65f6\uff0c\u90fd\u662f\u4e2a\u522b\u5ba2\u6237\u7aef\u4f20\u4e0a\u6765\u7684json\u6570\u636e\u5f15\u8d77\u7684\uff0c\u6700\u540e\u5e26\u4e00\u4e2a^Z\u7684\u5b57\u7b26\u3002\u4ece\u65e5\u5fd7\u4e2d\u590d\u5236\u7c98\u8d34\u51fa\u6765\u90fd\u662f\u6b63\u5e38\u7684\u3002\n. \u6211\u4eec\u4e5f\u78b0\u5230\u4e86\uff0c\u6211\u89c9\u5f97\u662f\u4e00\u4e2abug\u3002\u6211\u662f\u5728\u8001\u9879\u76ee\u5347\u7ea7fastjson\u65f6\u78b0\u5230\u7684\uff0c\u5728fastjson 1.2.29\u53ca\u4ee5\u524d\uff0c\u662f\u6ca1\u95ee\u9898\u7684\uff1b1.2.30\u540e\uff0cInitStringFieldAsEmpty\u4f1a\u628a\u5176\u4ed6\u6b63\u5e38\u6709\u503c\u5b57\u6bb5\u4e5f\u53d8\u6210\u7a7a\u5b57\u6bb5\u3002. \u6211\u4eec\u4e5f\u78b0\u5230\u4e86\uff0c\u6211\u89c9\u5f97\u662f\u4e00\u4e2abug\u3002\u6211\u662f\u5728\u8001\u9879\u76ee\u5347\u7ea7fastjson\u65f6\u78b0\u5230\u7684\uff0c\u5728fastjson 1.2.29\u53ca\u4ee5\u524d\uff0c\u662f\u6ca1\u95ee\u9898\u7684\uff1b1.2.30\u540e\uff0cInitStringFieldAsEmpty\u4f1a\u628a\u5176\u4ed6\u6b63\u5e38\u6709\u503c\u5b57\u6bb5\u4e5f\u53d8\u6210\u7a7a\u5b57\u6bb5\u3002. ",
    "msimw": "Exception in thread \"main\" com.alibaba.fastjson.JSONException: unclosed string : A. @wenshao \u6700\u65b0\u7248\u672c1.2.39\uff0c\u95ee\u9898\u5df2\u627e\u5230JSON\u5b57\u7b26\u4e32\u4e2d\u6709\u4e00\u4e2a \\ \u5b57\u7b26\u3002\u5728jackson.jar \u4e2d\u5b58\u5728\u540c\u6837\u7684\u95ee\u9898\u3002. ",
    "gm100861": "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86,\u697c\u4e0a\u7684\u670b\u53cb\u89e3\u51b3\u4e86\u5417?\n```\n JSONObject jsonObject = CrawlerHttpClient.getInstance().formPost(url, map, \"UTF-8\");\n            HuxiuResponseJsonModel jsonModel = JSON.parseObject(jsonObject.toJSONString(), HuxiuResponseJsonModel.class);\n            System.out.println(jsonModel.getMsg());\njava.lang.ArrayIndexOutOfBoundsException: 160\nat com.alibaba.fastjson.serializer.SerializeWriter.writeStringWithDoubleQuote(SerializeWriter.java:868)\nat com.alibaba.fastjson.serializer.SerializeWriter.writeStringWithDoubleQuote(SerializeWriter.java:602)\nat com.alibaba.fastjson.serializer.SerializeWriter.writeString(SerializeWriter.java:1366)\nat com.alibaba.fastjson.serializer.StringCodec.write(StringCodec.java:49)\nat com.alibaba.fastjson.serializer.StringCodec.write(StringCodec.java:34)\nat com.alibaba.fastjson.serializer.MapSerializer.write(MapSerializer.java:188)\nat com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:369)\nat com.alibaba.fastjson.JSON.toJSONString(JSON.java:596)\nat com.plusnet.crawler.test.HuXiuSpiderTest.main(HuXiuSpiderTest.java:30)\n```\norg.apache.http.conn.ConnectTimeoutException: Connect to www.huxiu.com:80 [www.huxiu.com/101.201.170.135] failed: connect timed out\n    at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:143)\n    at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)\n    at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)\n    at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\n    at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)\n    at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)\n    at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\n    at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)\n    at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n    at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:107)\n    at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n    at com.plusnet.crawler.common.http.CrawlerHttpClient.formPost(CrawlerHttpClient.java:260)\n    at com.plusnet.crawler.test.HuXiuSpiderTest.main(HuXiuSpiderTest.java:29)\nCaused by: java.net.SocketTimeoutException: connect timed out\n    at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\n    at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)\n    at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n    at java.net.Socket.connect(Socket.java:579)\n    at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)\n    at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)\n    ... 12 more\n. \u55ef,\u89e3\u51b3\u4e86.\u975e\u5e38\u611f\u8c22.\n. \u55ef,\u89e3\u51b3\u4e86.\u975e\u5e38\u611f\u8c22.\n. ",
    "goodbranch": "\u89e3\u51b3\u4e86\uff0c\u4e0d\u8be5\u63d0\u7684...\n. \u4e5f\u5c31\u662fdata\u4e3a\u7a7a\u76f8\u5f53\u4e8e\u5c31\u662f\u4e00\u4e2aString   \u6240\u4ee5\u4f7f\u7528\njava\nTypeReference<Respone<User>> type= new TypeReference<Respone<User>>>() {};\n\u89e3\u6790\u62a5\u9519\uff0c\u90a3\u4e48\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\n. TypeReference<XGResponse<UserDetails>> reference = new TypeReference<XGResponse<UserDetails>>() {\n        };  \u7c7b\u4f3c\u8fd9\u6837\u5c31\u884c\u554a\n. \u6211\u77e5\u9053\u4f60\u662f\u60f3\u7528\u6cdb\u578b\uff0c\u4f46\u662f\u4f60\u6700\u7ec8\u4f7f\u7528\u7684\u65f6\u5019\u5fc5\u987b\u786e\u8ba4\u7c7b\u578b\uff0c\n\u5728 2015\u5e742\u670812\u65e5 \u4e0b\u53484:30\uff0cmr.\u6768 notifications@github.com\u5199\u9053\uff1a\n\n\u53ef\u80fd\u6211\u6ca1\u6709\u63cf\u8ff0\u7684\u8db3\u591f\u6e05\u695a,\u5176\u4e2dResponse\nclass Response{\n private int code;\n private List docs;\n private String msg;\n//getter .. setter...\n}\n\u53c2\u6570content\u7684\u5185\u5bb9\u662f{'code':123,'msg':'success','docs':[{'name':'rainy'}]}\n\u6cdb\u578b\u5bf9\u8c61\u662f\u5305\u5728\u5185\u90e8\u7684,\u800c\u4e0d\u662fcontent\u5c31\u662f\u5bf9\u8c61\u672c\u8eab\n\u81f3\u4e8eTypeReference\u7684\u7528\u6cd5\u4e5f\u662f\u4e0d\u884c\u7684,\u56e0\u4e3anew\nTypeReference>\u5fc5\u987b\u6307\u5b9aT\u4e3aUserDetails,\u4f46\u662f\u6211\u662f\u7531\u65b9\u6cd5\u53c2\u6570\u51b3\u5b9a\u7684,\u800c\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u660e\u786e\u4e86\u7684\u7c7b\u578b.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/297#issuecomment-74034523.\n. \n",
    "qicosmos": "\u8865\u5145\u4e00\u4e0b\uff0c\u662f\u6700\u65b0\u7684andriod\u53d1\u5e03\u7248\u672c\u3002\n. @lmmmd \n@CodePlayer \n\u8c22\u8c22\u4f60\u4eec\u7684\u56de\u590d\uff0c\u662f\u6211\u7684\u4ee3\u7801\u6ca1\u6709\u7b26\u5408\u89c4\u8303\u3002\u4f46\u662f\u6211\u60f3\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u65f6\u4e0d\u5c0f\u5fc3\u5c31\u5199\u51fa\u6765\u4e86\uff0c\u5bfc\u81f4\u89e3\u6790\u7684\u5b57\u6bb5\u9519\u8bef\uff0c\u8fd9\u4e48\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u5b98\u7f51\u90fd\u6ca1\u6709\u8bf4\u660e\u5462\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6f5c\u89c4\u5219\u5427\uff0c\u81f3\u5c11\u8981\u8bf4\u660e\u4e00\u4e0b\uff0c\u8ba9\u4eba\u8e29\u5751\u4e86\u4e5f\u77e5\u9053\u8e29\u4e86\u4ec0\u4e48\u5751\u3002\n. @CodePlayer \u4f60\u8bf4\u5f97\u5982\u6b64\u6b63\u786e\uff0c\u6211\u7adf\u65e0\u8a00\u4ee5\u5bf9\u3002\n\u6211\u633a\u5947\u602a\u7684java\u4e0d\u662f\u4e00\u4e2a\u5f3a\u7ea6\u675f\u7684\u8bed\u8a00\uff0c\u4e00\u4e2a\u4e0d\u5408\u89c4\u8303\u5c31\u5bfc\u81f4\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u8fd9\u4e2a\u600e\u4e48\u90fd\u8bf4\u4e0d\u8fc7\u53bb\u5427\u3002\u6211\u8bf4fastjson\u6ce8\u660e\u4e00\u4e0b\uff0c\u51e1\u662f\u4e0d\u5408\u89c4\u8303\u7684\u5c31\u4f1a\u5bfc\u81f4\u4e25\u91cd\u7684\u9519\u8bef\u4e0d\u4e3a\u8fc7\u5427\u3002\n. @lmmmd\n@CodePlayer\n\u53e6\u5916\uff0c\u6211\u518d\u8865\u5145\u4e00\u4e0b\uff0c\u6211\u7684isTest\u5b57\u6bb5\u5c31\u662f\u901a\u8fc7eclipse\u81ea\u52a8\u751f\u6210\u7684\uff0c\u751f\u6210\u4e3a\uff1a\nprivate boolean isTest;\npublic boolean isTest() {\n    return isTest;\n}\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48eclpise\u4e0d\u81ea\u52a8\u751f\u6210\u4e3aisIsTest\uff0c\u90a3\u5c31\u4e0d\u77e5\u9053\u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u54ea\u4e2a\u66f4\u7b26\u5408\u6240\u8c13\u7684\u89c4\u8303\u4e86\u3002\n. @CodePlayer \u6211\u5e0c\u671b\u6211\u7684\u53d8\u91cf\u540d\u80fd\u6807\u793a\u5b83\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5982\u679c\u7528test\u7684\u8bdd\uff0c\u8bfb\u4ee3\u7801\u7684\u4eba\u4e0d\u80fd\u4e00\u4e0b\u5b50\u5c31\u77e5\u9053\u5b83\u662f\u4e0d\u662fbool\u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u5c31\u547d\u540d\u4e3aisTest\uff0c\u6211\u4e0d\u89c9\u5f97\u8fd9\u662f\u4e0d\u89c4\u8303\u7684\uff0c\u6070\u6070\u662f\u4e3a\u4e86\u53ef\u8bfb\u6027\u3002\n. \u6211\u662f\u8fd9\u6837\u505a\u7684\uff0c\u52a0\u522b\u540d\u3002\n@JSONField(name=\"isPublic\")\nprivate boolean isPublic;\n\u8fd9\u6837\u7684\u8bdd\u7528is\u5f00\u5934\u4e5f\u6ca1\u95ee\u9898\u4e86\u3002\n. \u989d\uff0c\u6211\u60f3\u8bf4gson\u5c31\u6ca1\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd8\u6709\u7528android\u7248\u672c\u7684fastjson\u89e3\u6790\u4e0d\u51fa\u6765\u4e1c\u897f\uff0c\u540e\u6765\u6ca1\u529e\u6cd5\uff0c\u4e0d\u7528fastjson\u4e86\uff0c\u54ce\u3002\n. \u597d\u5427\uff0c\u6709\u89c4\u5219\u6211\u5c31\u4e0d\u8bf4\u4ec0\u4e48\u4e86\u3002\u9047\u5230\u7684\u53e6\u5916\u4e00\u4e2a\u60c5\u51b5\u662fandroid\u7248\u672c\u89e3\u6790\u4e0d\u51fa\u6765\u7ed3\u679c\u3002\u662f\u901a\u8fc7\u53cd\u5c04\u52a0\u8f7dfastjson\u7684\u65f6\u5019\u51fa\u73b0\u7684\u3002\n\u8865\u5145\u4e00\u53e5\uff0c\u5173\u4e8e\u6ca1\u7b26\u5408\u6240\u8c13\u7684\u89c4\u5219\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u95ee\u9898\u8fd9\u4e00\u70b9\u4e5f\u6ca1\u89c1\u58f0\u660e\u554a\uff0c\u4e25\u8c28\u4e00\u70b9\u7684\u505a\u6cd5\u662f\u58f0\u660e\u4e00\u4e0b\u4e3a\u597d\u3002\n. ",
    "LazyBug1E0CF": "@qicosmos \u8fd9\u4e0d\u80fd\u7b97BUG\uff0c\u8fd9\u662f\u4f60\u81ea\u5df1\u4ee3\u7801\u4e0d\u591f\u89c4\u8303\uff0c\u5982\u679cboolean\u53d8\u91cf\u540d\u662fisTest\uff0c\u90a3\u5b83\u7684get\u65b9\u6cd5\u5e94\u8be5\u53ebisIsTest\uff1b\u6216\u8005\u4f60\u65b9\u6cd5\u540d\u5c31\u8981\u53ebisTest\uff0c\u90a3boolean\u53d8\u91cf\u540d\u5c31\u5f97\u6539\u6210test\uff08\u6ce8\u610f\u6b64\u5904\u7684\u5927\u5c0f\u5199\uff09\n. ",
    "simlegate": "@qicosmos \u5173\u4e8e\u53ef\u8bfb\u6027\uff0c\u6211\u7684\u7406\u89e3\u662f\uff1a\u65e2\u7136JavaBean\u8981\u6c42\u5b57\u7b26\u58f0\u660e\u4e3aprivate\uff0c\u6839\u636e\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u6027\uff0c\u5c06private\u5c5e\u6027\u5c01\u88c5\u6210getter\u548csetter\u65b9\u6cd5\uff0c\u6240\u4ee5\u5bf9\u4e8eJavaBean\u7684\u4f7f\u7528\u8005\u6765\u8bf4\uff0c\u662f\u8fd9\u6837\u8c03\u7528\u7684\uff0cinstance.isTest() , \u8fd8\u662f\u6709\u53ef\u8bfb\u6027\u7684\u3002\n. ",
    "chenguandong": "\u54ce \u6211\u4e5f\u662f\u633a\u65e0\u8bed\u7684\u4e86  \u6211\u7684get\nset \u662fAS \u751f\u6210\u7684   \u6700\u540e\u653e\u5f03\u7528isXXX \u8fd9\u79cd\u547d\u540dboolean \u503c\u5c31\u53ef\u4ee5\u4e86 \u8fd9\u4e2a\u7684\u786e\u5751. zhugw  \u6b63\u89e3 \u5b8c\u7f8e\u89e3\u51b3. ",
    "Radiums": "you may find the package in http://help.aliyun.com/view/11108327_13506337.html\n. ",
    "BlackImpl": "done \u6709\u5f15\u7528\n. A.isAssginableFrom(B) \u662f\u8868\u793a A\u662f\u5426\u662fB\u7684\u7236\u7c7b\u6216\u8005\u662f\u7236\u63a5\u53e3, Set.class & Collection.Class \u4e00\u5b9a\u662fHashSet.class \u7684\u7236\u63a5\u53e3, \u4ee5\u4e0b\u903b\u8f91\u65e0\u6548, \u5bf9\u4e8eSet.class & Collection.class \u6c38\u8fdc\u4f1a\u8d70\u7b2c\u4e8c\u4e2a\u903b\u8f91\uff1a\nif (rawClass == AbstractCollection.class) {\n} else if (rawClass.isAssignableFrom(HashSet.class)) {\n} else if (rawClass.isAssignableFrom(LinkedHashSet.class)) {\n} else if (rawClass.isAssignableFrom(TreeSet.class)) {\n} else if (rawClass.isAssignableFrom(ArrayList.class)) {\n} else if (rawClass.isAssignableFrom(EnumSet.class)) {\n} else {\n}\n. Collection> collections = JSON.parseObject(jsons, new \n      TypeReference< Collection < Collection < Integer > > >(){});   \n\u5efa\u8bae\u5982\u679c\u662f\u6cdb\u578b\u662fCollection\u7c7b\u578b\u7684\u65f6\u5019, \u9ed8\u8ba4\u7684\u5b9e\u4f8b\u5e94\u8be5\u662fArrayList \u8fd9\u6837\u907f\u514d\u51fa\u73b0\u6570\u636e\u4e22\u5931\u3002\n. ",
    "luffyke": "\u5173\u95ed\u5faa\u73af\u5f15\u7528\u53ef\u4ee5\u89e3\u51b3\u3002\u3002\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);\n. ",
    "changwei0708": "\u89e3\u51b3\u4e86\uff1f\n. ",
    "Dreampie": "\u5faa\u73af\u5f15\u7528\u7684\u8bdd  \u5faa\u73af\u6307\u5b9a\u5c42\u7ea7   \u4e0d\u7136\u5f88\u591a\u5ba2\u6237\u7aef\u4e5f\u4e0d\u80fd\u89e3\u6790\n. \u662f\u4e0d\u652f\u6301 java.sql.Timestamp? Date\u7684\u5b50\u5bf9\u8c61\u90fd\u4e0d\u884c\uff1f\u7ecf\u6d4b\u8bd5\u5fc5\u987b\u6dfb\u52a0\u6307\u5b9a\u7c7b\u578b\u3002\u3002\u3002\n. \u90a3json\u8f6c\u5bf9\u8c61\u5462  \u600e\u4e48\u5f04 \u5982\u679c\u6bcf\u4e2a\u5c5e\u6027\u5199\u6ce8\u89e3  \u5199\u8fd9\u4e2afilter\u4e5f\u6ca1\u610f\u4e49\u4e86\n. ",
    "teaey": "SerializerFeature.DisableCircularReferenceDetect\n\u52a0\u4e0a\u8fd9\u4e2a\u7279\u6027\u5c31\u597d\u4e86\n. ",
    "TsungFang": "\u7528SerializerFeature.WriteMapNullValue\njava\nJSON.toJSONString(yourObject, SerializerFeature.WriteMapNullValue);\n. \u6709\u7f3a\u7701\u503c\uff0c\u5148\u6e05\u6389\uff1a\njava\nJSON.DEFAULT_GENERATE_FEATURE=0;\n\u8fd9\u5751\uff0c\u5f97\u8d76\u7d27\u4fee\u590d...\n. bug\uff0c\u52a0\u4efb\u610ffilter\u53ef\u89e3\u51b3\u3002\n``` java\nMap m = new HashMap<>();\nm.put(1, \"1\");\nm.put(2, \"2\");\nJSON.toJSONString(m, new NameFilter() {\n    @Override\n    public String process(Object object, String name, Object value) {\n        return name;\n    }\n});\n```\n. ",
    "arthinking": "Thanks to zhengzhengfang.\n. ",
    "fengdu": "\u8c03\u7528\u8fd9\u4e2a\u540e\nJSON.DEFAULT_GENERATE_FEATURE=0;\n\u518dd\u8c03\u7528  JSON.toJSONString(object, SerializerFeature.WriteNullStringAsEmpty, SerializerFeature.WriteMapNullValue);\nfeature \u4e0d\u751f\u6548\n\u8fd8\u662f\u7b49\u65b0\u7248\u672c\u5427\n. ",
    "eeve": "\u5165\u5751\nversion: 1.2.8\nJSON.DEFAULT_GENERATE_FEATURE = 1; //\u52a0\u4e0a\u8fd9\u53e5\u5c31\u884c\u4e86\uff0c\u4e3a0\u7684\u65f6\u5019json\u7684\u952e\u6ca1\u4e86\u5f15\u53f7\nJSON.toJSONString(object);\n. ",
    "089apps": "Same problem here. \nI  have following JSON Array(!):\n[{\"foo1\": \"value1\", \"@type\": \"com.foo.FooModel\", \"foo2\": \"value2\"}, \n{\"foofoo1\": \"value1\", \"@type\": \"com.foo.FooFooModel\", \"foofoo2\": \"value2\"}, \n{\"foofoofoo1\": \"value1\", \"@type\": \"com.foo.FooFooFooModel\", \"foofoofoo2\": \"value2\"}]\nOnly the values of foo2, foofoo2 and foofoofoo2 were parsed successfully,\nwhile the values of foo1, foofoo1 and foofoofoo1 are ignored.\nI guess it is a bug at JavaBeanDeserializer, lines 290ff \nprobably the Lexer(JSONScanner) position needs to be set at the first char of the current JSON item before going into following lines:\nClass<?> userType = TypeUtils.loadClass(typeName);\nObjectDeserializer deserizer = parser.getConfig().getDeserializer(userType);\nreturn (T) deserizer.deserialze(parser, userType, fieldName);\n. Duplicate of https://github.com/alibaba/fastjson/issues/406\n. I have the same problem here.\nDuplicate: https://github.com/alibaba/fastjson/issues/291\n. I have the same problem here.\nDuplicate: https://github.com/alibaba/fastjson/issues/291\n. for android 1.1.51 it's gone too?\n. by the way:\ncurrently my backend delivers i.e. \"@type\":\"article\" and we have to replace the json-response by \"@type\":\"com.foo.api.model.ArticleModel\" before parsing.\nis it possible to pass a Mapping to the SerializeConfig like:\n```\nHashMap typeMapping = new HashMap<>();\ntypeMapping.put(\"article\", \"com.foo.api.model.ArticleModel\");\ntypeMapping.put(\"videos\", \"com.foo.api.model.VideoModel\");\nSerializeConfig config = new SerializeConfig();\nconfig.setTypeMapping(typeMapping);\n```\n. ",
    "gengjiawen": "\u52a0\u4e86\u8fd9\u4e2a\u679c\u7136\u53ef\u4ee5\u4e86,\u591a\u8c22\n. @wenshao \u4f60\u4e0d\u8003\u8651\u52a0\u5230\u6587\u6863\u91cc\u9762\u6216\u8005\u505a\u51fa\u8bf4\u660e\u5417\uff1f\u5c31\u8fd9\u6837\u76f4\u63a5\u5173\u95ed\u8fd9\u4e2aIssue\uff1f\n. ",
    "jaogoy": "\u6211\u4e5f\u627e\u4e86\u597d\u4e45\u7684\u539f\u56e0\uff0c\u770b\u5230\u540e\u4e00\u8bd5\uff0c\u4e16\u754c\u5b89\u9759\u4e86\u3002\n\u4e0d\u8fc7\u770b\u82f1\u6587\u8bf4\u660e\u4e5f\u6ca1\u770b\u660e\u767d\u662f\u5565\u610f\u601d\uff0c\u6709\u4e9b\u5730\u65b9\u8bf4\u662f\u7c7b\u578b\u8f6c\u6362\uff0c\u6709\u4e9b\u8bf4\u662f\u6cdb\u578b\u3002\u3002\u3002\n. ",
    "onionsheep": "\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u591a\u8c22\n. ",
    "dachuanz": "\u652f\u6301\u7684\n. \u80af\u5b9a\u7684\u554a\uff0cJSON.toJSONString(1)\u7684\u7ed3\u679c\u662f1\n. Java\u65b0\u7684\u6570\u5b57\u8868\u8fbe\u7279\u6027\u662f\u4f7f\u7528_\u6bcf\u4e09\u4f4d\u505a\u4e00\u6b21\u5206\u5272 \u6539\u6210264_010_000.00\u5c31\u597d\u4e86\n. \u7528\u6700\u65b0\u7248\u672c\u80af\u5b9a\u6539\u597d\u4e86\uff0c\u6211\u5df2\u7ecf\u6d4b\u8bd5\u8fc7\u4e86\n. \u8fd9\u4e2a\u7279\u6027\u6027\u8be5\u662fjava\u8bed\u8a00\u7684\u9ed8\u8ba4\u503c\uff0c\u4e5f\u5c31\u662f\u4e0d\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u865a\u62df\u673a\u7ed9\u7684\u9ed8\u8ba4\u503c\u3002\n. \u4f30\u8ba1\u9047\u5230\u8fd9\u6837\u7684\u60c5\u51b5\uff0cfastjson \u5c31\u7231\u83ab\u80fd\u52a9\u4e86\n. \u53ea\u5224\u65ad\u4e86\u662f\u4e0d\u662fjvm \u7684\u9ed8\u8ba4\u503c\uff0c\u54ea\u8fd8\u6709new \u5bf9\u8c61\u7684\n. set\u5185\u5bb9\u6ca1\u6709\u6b63\u5e38\u586b\u5145\n. \u662f\u4e0d\u662f\u5fd8\u4e86\u5199get \u65b9\u6cd5\n. \u4f60\u628a\u6d4b\u8bd5\u4ee3\u7801\u63d0\u4f9b\u4e00\u4e0b\n. \u7528\u6d41\u5f0f\u5904\u7406\n. \u9ed8\u8ba4\u5c31\u4e0d\u5e8f\u5217\u5316\u554a\n. \u4f7f\u7528\u65b0\u7248\u5427\n. \u662f1.2.4\u7684\u7248\u672c\u5417\uff1f\n\u6211\u770b1.2.4\u7684\u4ee3\u7801\u5e94\u8be5\u89e3\u51b3\u4e86\n```\n public static final Float castToFloat(Object value) {\n        if (value == null) {\n            return null;\n        }\n    if (value instanceof Number) {\n        return ((Number) value).floatValue();\n    }\n\n    if (value instanceof String) {\n        String strVal = value.toString();\n        if (strVal.length() == 0) {\n            return null;\n        }\n\n        if (\"null\".equals(strVal) || \"NULL\".equals(strVal)) {\n            return null;\n        }\n\n        return Float.parseFloat(strVal);\n    }\n\n    throw new JSONException(\"can not cast to float, value : \" + value);\n}\n\n```\n. \u8fd9\u6837\u5199\u7684\uff0c\u6ca1\u6d4b\u8bd5\u51fa\u6765\u95ee\u9898\n```\npublic final class TemplateData implements Serializable {\n    /*\n     * \n     /\n    private static final long serialVersionUID = 1L;\n@JSONField(name = \"groupname\")\nprivate String mGroupName;\n\n@JSONField(name = \"title\")\nprivate String mTitle;\n\n@JSONField(name = \"moretitle\")\nprivate String mMoreTitle;\n\n@JSONField(name = \"moreurl\")\nprivate String mMoreUrl;\n@JSONField(name = \"items\")\n\nprivate List<TemplateItem> mTemplateItems;\n\npublic String getmGroupName() {\n    return mGroupName;\n}\n\npublic void setmGroupName(String mGroupName) {\n    this.mGroupName = mGroupName;\n}\n\npublic String getmTitle() {\n    return mTitle;\n}\n\npublic void setmTitle(String mTitle) {\n    this.mTitle = mTitle;\n}\n\npublic String getmMoreTitle() {\n    return mMoreTitle;\n}\n\npublic void setmMoreTitle(String mMoreTitle) {\n    this.mMoreTitle = mMoreTitle;\n}\n\npublic String getmMoreUrl() {\n    return mMoreUrl;\n}\n\npublic void setmMoreUrl(String mMoreUrl) {\n    this.mMoreUrl = mMoreUrl;\n}\n\npublic List<TemplateItem> getmTemplateItems() {\n    return mTemplateItems;\n}\n\npublic void setmTemplateItems(List<TemplateItem> mTemplateItems) {\n    this.mTemplateItems = mTemplateItems;\n}\n\n}\n``\n. String s = JSON.parseObject(\"\\\"xxx\\\"\",String.class);\n\u8fd9\u6837\n. \u95ee\u9898\u53ef\u80fd\u5728\u8fd9\u91cc:0E-8\n.location\\\":\\\"39.997828,116.466004\\\"` \u8fd9\u4e00\u5757\u5185\u5bb9\u5bfc\u81f4\u7684\n. ",
    "yinheli": "\u65f6\u95f4\u6709\u70b9\u4e45\u4e86, \u4ee3\u7801\u627e\u4e0d\u5230\u4e86. \u540e\u6765\u8bd5\u4e86\u4e0b, java 8 \u662f\u53ef\u4ee5\u7684\n\u8fd9\u4e2a\u95ee\u9898\u6211\u5148\u5173\u95ed\u4e86\n. @wary \u80fd\u8d34\u70b9\u5f02\u5e38\u5417? \u7ecf\u8fc7\u6d4b\u8bd5, \u6ca1\u6709\u53d1\u73b0\u8fd9\u79cd\u95ee\u9898\n. \u8fd9\u6837\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42?\n``` java\npublic class T {\npublic static final String STR = \"{\\\"name\\\":\\\"the name of someone\\\"}\";\n\npublic static class Boy {\n    public String name;\n\n    @Override\n    public String toString() {\n        return \"Boy:\" + name;\n    }\n}\n\npublic static class Girl {\n    public String name;\n\n    @Override\n    public String toString() {\n        return \"Girl:\" + name;\n    }\n}\n\npublic static interface IHello {\n    public <T> Response<T> say(String context, Class<T> clazz);\n}\n\npublic static class Response<T> {\n    public T obj;\n}\n\npublic static class HelloImpl implements IHello {\n\n    public <T> Response<T> say(String context, Class<T> clazz) {\n        Response<T> response = new Response<T>();\n        response.obj = JSONObject.parseObject(context, clazz);\n        return response;\n    }\n}\n\npublic static void main(String[] args) throws Exception {\n    IHello hello = new HelloImpl();\n    Response<Boy> r1 = hello.say(STR, Boy.class);\n    System.out.println(r1.obj);\n\n    Response<Girl> r2 = hello.say(STR, Girl.class);\n    System.out.println(r2.obj);\n}\n\n}\n```\n. ",
    "Dourm": "\u53ef\u80fd\u6211\u6ca1\u6709\u63cf\u8ff0\u7684\u8db3\u591f\u6e05\u695a,\u5176\u4e2dResponse\n``` java\nclass Response{\n private int code;\n private List docs;\n private String msg;\n//getter .. setter... \n}\n```\n\u53c2\u6570content\u7684\u5185\u5bb9\u662f{'code':123,'msg':'success','docs':[{'name':'rainy'}]}\n\u6cdb\u578b\u5bf9\u8c61\u662f\u5305\u5728\u5185\u90e8\u7684,\u800c\u4e0d\u662fcontent\u5c31\u662f\u5bf9\u8c61\u672c\u8eab\n\u81f3\u4e8eTypeReference\u7684\u7528\u6cd5\u4e5f\u662f\u4e0d\u884c\u7684,\u56e0\u4e3anew TypeReference>\u5fc5\u987b\u6307\u5b9aT\u4e3aUserDetails,\u4f46\u662f\u6211\u662f\u7531\u65b9\u6cd5\u53c2\u6570\u51b3\u5b9a\u7684,\u800c\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u660e\u786e\u4e86\u7684\u7c7b\u578b.\n. ",
    "mustfun": "@wenshao \u60a8\u597d\uff0c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4e5f\u78b0\u5230\u4e86\uff0c\u60a8\u63d0\u4f9b\u7684ParameterizedTypeImpl\u5b9e\u73b0\u65b9\u6848\u7ecf\u6d4b\u8bd5\u4e5f\u53ea\u80fd\u7528\u4e8e\u89e3\u6790\u4e00\u7ea7\u6cdb\u578b\uff0c\u5bf9\u4e8e\u591a\u7ea7\u6cdb\u578b\u8fd8\u662f\u5931\u8d25\u7684\uff0c\u6bd4\u5982\u8bf4\uff1aResponse<T<A>> \u8fd9\u79cd\uff0c\u5f53\u7136\u6211\u8fd9\u91cc\u4e5f\u53ea\u80fd\u62ff\u5230T\u548cA\u7684class. 1.2.29\u7248\u672c\uff0c\u6570\u636e\u7ed3\u6784\uff1a\njson\n{\"data\":2660885,\"count\":0,\"hasError\":false,\"errorCode\":null,\"errorMessage\":null,\"errorTrace\":null,\"status\":0,\"message\":null}\n````\n\u4e0d\u5b9a\u65f6\u4e0d\u5b9a\u671f\u51fa\u73b0\uff0c\u4f7f\u7528\u7684\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u8fdb\u884c\u89e3\u6790java\nJSON.parseObject(entityStream, this.fastJsonConfig.getCharset(), type, this.fastJsonConfig.getFeatures())\n\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u8fd9\u79cd\u6570\u636e\u7ed3\u6784   `Result<Integer>` \uff0c\u5176\u4e2dResult\u5982\u4e0bjava\n    private long status;\n    private String message;\n    private T data;\nprivate Integer count;\nprivate boolean hasError;\nprivate String errorCode;\nprivate String errorMessage;\nprivate String errorTrace;\n\n```\n\u611f\u8c22\uff01. \u8fd9\u4e2a\u65e5\u671f\u662f\u8fd0\u8425\u4eba\u5458\u586b\u5199\u7684\u5546\u54c1\u8fc7\u671f\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5e94\u8be5\u6ca1\u6709\u9650\u5236\u5427. \u8c22\u8c22\uff0c\u4eca\u5929\u5fd8\u8bb0\u56de\u590d\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528@JSONField\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\uff0c\u4fee\u590d\u4e86\u66f4\u597d\u54c8. ",
    "bohrqiu": "\u5982\u679cenum\u91cd\u5199\u4e86toString \u65b9\u6cd5\uff0c\u5c31\u662f\u9020\u6210\u8fd9\u4e2a\u95ee\u9898\u3002\u5176\u5b9eSerializerFeature.WriteEnumUsingToString\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\u3002\u800c\u4e14fastjson\u7684\u5927\u90e8\u5206\u4ee3\u7801\u4e2d\uff0c\u5bf9\u4e8eSerializerFeature.WriteEnumUsingToString\u7684\u5904\u7406\u662f\u7528\u7684\u679a\u4e3e\u7684name()\u3002\u4f46\u662f\u5728com.alibaba.fastjson.serializer.EnumSerializer\u4e2d\u5bf9\u4e8e\u542f\u7528SerializerFeature.WriteEnumUsingToString\u7279\u6027\uff0c\u5374\u4f7f\u7528\u4e86\u679a\u4e3e\u7684toString\u65b9\u6cd5\u3002\u800c\u4e14\u5bf9\u4e8e\u81ea\u5b9a\u4e49toString\u7684\u679a\u4e3e\u6839\u672c\u6ca1\u6709\u529e\u6cd5\u53cd\u5e8f\u5217\u5316\u3002\n\u8fd9\u91cc\u5efa\u8bae\u53c2\u8003jpa\u5bf9\u4e8e\u679a\u4e3e\u7684\u5904\u7406\uff0c\u63d0\u4f9bname()\u548cordinal()\u4e24\u79cd\u65b9\u5f0f\u3002\n. ",
    "jarry": "\u8fd9\u4e2a\u95ee\u9898\u662f\u65f6\u533a\u9020\u6210\u7684\u3002\u524d\u7aefJS\u53ea\u597d\u505a\u517c\u5bb9\uff1a\n// \u5317\u4eac\u4e3a\u4e1c8\u533a\u65f6\u95f4\uff0c\u6bd4\u4f26\u6566\u65f6\u95f4\u65e98\u5c0f\u65f6\uff0c\u6545\u9700\u8981\u52a0\u4e0a8\u5c0f\u65f6\n// (\u4f20\u5165\u6beb\u79d2 +  8 * 3600 * 1000);\n\u6216\u8005\u5728\u5e8f\u5217\u5316\u65f6\u76f4\u63a5\u6309\u7167\u65e5\u671f\u5b57\u7b26\u4e32\u8f6c\u6362\uff0c\u800c\u4e0d\u662f\u62ff\u5230long\u578b\u65e5\u671f\u3002\nJSON.toJSONString(object, SerializerFeature.WriteDateUseDateFormat);\n. ",
    "gavinHuang": "@yakolee  \u65b0\u7248\u672c\u5e76\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\u6211\u4e5f\u6709Michael \u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u53ea\u8981\u628a\u5185\u90e8\u7c7bBannerContent\u5355\u72ec\u6210\u4e00\u4e2a\u6b63\u5e38\u7684\u7c7b\uff0c\u95ee\u9898\u5c31\u81ea\u52a8\u6d88\u5931\u3002\n. ",
    "duqicauc": "\u5b66\u4e60\u4e86. \u662f\u4e0d\u662f\u5305\u51b2\u7a81\uff1f. ",
    "DreamSea530": "JSONObject j=new JSONObject();\nj.put(\"a\",\"\\t\");\nSystem.out.println(j.toJSONString());\n\u8f6c\u4e49\u5b57\u7b26\\t\u4e5f\u6ca1\u505a\u5904\u7406\n. ",
    "caiqq1989": "@wenshao \u5177\u4f53\u5728\u54ea\u4e2a\u7248\u672c\u4e2d\u4f53\u73b0\uff1f\n. ",
    "dongritengfei": "\u6211\u4e5f\u5076\u5c14\u78b0\u5230\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e94\u8be5\u662ffastjson\u7684reader.readObject(User.class);\u65b9\u6cd5\u91cc\u9762\u6709\u95ee\u9898\u3002\u5982\u679c\u4f60\u6539\u6210\u5982\u4e0b\u7684\u4ee3\u7801\u5c31ok\u4e86\uff1a\njava\npublic static void read2() throws FileNotFoundException {\n    JSONReader reader = new JSONReader(new FileReader(\"D://huge2.json\"));\n    reader.startArray();\n    while (reader.hasNext()) {\n        String str = reader.readString();\n        User user = JSONObject.parse(str, User.class);\n        System.out.println(user.getId());\n    }\n    reader.endArray();\n    reader.close();\n}\nfastjson\u7684\u5f00\u53d1\u540c\u5b66\u53ef\u4ee5\u4ed4\u7ec6\u67e5\u4e00\u4e0bJSONObject.parse\u548cJSONReader.readObject\u91cc\u9762\u7684feature\u8bbe\u7f6e\u6709\u4f55\u4e0d\u540c\uff0c\u5bfc\u81f4\u8fd9\u4e2abug\n. ",
    "lipeng1234": "\u611f\u8c22\u697c\u4e0a\u9ad8\u624b\u89e3\u7b54\uff0c\u4e0d\u8fc7\u4f60\u6709\u4e00\u4e2a\u7b14\u8bef\uff0c\u4e0d\u5e94\u8be5\u662f\u201cJSONObject.parse(str, User.class);\u201d\uff0c\u6211\u8dd1\u5230\u4f60\u535a\u5ba2\u4e0a\u770b\u5230\u5e94\u8be5\u662f\u201cJSONObject.parseObject(str, User.class);\u201d\u8fd9\u6837\u624d\u5bf9\u3002\n. ",
    "KennethYo": "\u6211\u89c9\u5f97model\u4e0d\u9700\u8981\u6df7\u6dc6\u5427\uff0c\u4f60\u6df7\u6dc6\u4e86\uff0c\u8fd8\u600e\u4e48\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\n. \u4f8b\u5982\u5982\u4e0b\u8fd9\u4e2ajson\uff0c\u662f\u4e00\u4e2aJsonObject\uff0c\u5bf9\u5e94\u5728\u5982\u4e0b\u7684model,\u8fd9\u662f\u4e00\u79cd\u80fd\u591f\u7528fastjson\u89e3\u6790\u7684\u683c\u5f0f\uff0c\u5982\u679cmodel\u88ab\u6df7\u6dc6\uff0c\u5c31\u53d8\u6210\u6700\u4e0b\u9762\u7684\u90a3\u4efd\u4ee3\u7801\uff0cfastjson\u5c31\u4e0d\u80fd\u591f\u7528a\u53bb\u6620\u5c04json\u4e2d\u7684name\u4e86\u3002\njson\n{\n   name:\"Kenneth\",\n   age:12\n}\njava\n//\u6df7\u6dc6\u524d\nclass User{\n  public String name;\n  public int age;\n}\n//\u6df7\u6dc6\u540e\nclass User{\n  public String a;\n  public int b;\n}\n. ",
    "LyndonChin": "parseObject(yourData, User.class)\n\u8fd9\u91cc\u7684 User.class \u4e00\u5b9a\u8981\u5728 Proguard \u4e2d keep -class\uff0c\u9632\u6b62\u88ab\u6df7\u6dc6\u6389\u3002\nfastjson\u662f\u901a\u8fc7\u53cd\u5c04\u62ff\u5230\u6210\u5458\u53d8\u91cf\u7684\uff0c\u6df7\u6dc6\u8fc7\u4e4b\u540e\u53d8\u91cf\u540d\u90fd\u53d8\u4e86\uff0c\u8fd8\u600e\u4e48\u53cd\u5e8f\u5217\u5316\u554a\u3002\n. ",
    "huhuang03": "\u989d\u3002\u90a3\u5c31\u662f\u8fd9\u4e2a\u539f\u56e0\u4e86\uff0c\u4e2a\u4eba\u611f\u89c9\u4e3a\u4ec0\u4e48\u6211\u7684\u53d8\u91cf\u540d\u53d8\u4e86\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u53cd\u5c04\u4e86\u3002\u6211\u7684\u7406\u89e3\u662ffastjson\u5e76\u4e0d\u5e94\u8be5\u5173\u6ce8\u6211\u7684\u53d8\u91cf\u540d\u662f\u4ec0\u4e48\u4ee5\u53ca\u662f\u5426\u88ab\u6df7\u6dc6\u4e86\uff0c\u5bf9fastjson\u6765\u8bf4\u53d8\u91cf\u540d\u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u6240\u4ee5\u6211\u6df7\u6dc6\u4e4b\u540e\u5c31\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u5bf9\u8fd9\u70b9\u4e0d\u662f\u5f88\u7406\u89e3\u3002\n\u5f53\u7136\uff0c\u6211\u53ea\u662f\u4e00\u4e2a\u5c0f\u83dc\u9e1f\uff0c\u8fd9\u53ea\u662f\u4e2a\u4eba\u7684\u4e00\u70b9\u7406\u89e3\u3002\u3002\n\u5fd8\u4e86\u8bf4\u4e86\uff0c\u6211\u662f\u7528fastjson\u6765\u8fdb\u884c\u5e8f\u5217\u5316\u4e00\u4e2a\u88ab\u6df7\u6dc6\u7684\u5bf9\u8c61\uff0c\u751f\u6210\u4e00\u4e2astring\u3002\u7136\u540e\u7528fastjson\u6765\u53cd\u5e8f\u5217\u5316\u8fd9\u4e2a\u751f\u6210\u7684string\u3002\u4f46\u662f\u53cd\u5e8f\u5217\u5316\u4e0d\u80fd\u6210\u529f\u3002\n. ",
    "fitseptor": "\u7c7b\u4f3c\u8fd9\u6837\n-keep class your_project_package_name.model.*{;}\n. ",
    "locuslin": "\u8fd9\u4e2a\u5e94\u8be5\u662f\u56e0\u4e3a\u5185\u90e8\u7c7b\u5b9e\u9645\u4e0a\u4f1a\u6301\u6709\u5916\u90e8\u7c7b\u7684\u5f15\u7528\u9020\u6210\u7684\uff0c\u5982\u679c\u662f\u9759\u6001\u5185\u90e8\u7c7b\u7684\u8bdd\u5c31\u6ca1\u6709\u5173\u7cfb\u3002\n. \u5df2\u63d0\u4f9bTest case\uff0c\u8bf7\u67e5\u9605\n. @FuweiChin \u8fd9\u7c7b\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5411\n SerializeConfig \u4e2d\u6dfb\u52a0\u5bf9\u5e94\u7684ObjectSerializer\n\u53ca\nParserConfig \u4e2d\u6dfb\u52a0\u5bf9\u5e94\u7684ObjectDeserializer\n\u6765\u5b9e\u73b0\u3002\n\u4e2a\u4eba\u4ee5\u4e3a\u8fd9\u6837\u6bd4\u7528\u63a5\u53e3\u7684\u65b9\u5f0f\u7075\u6d3b\u6027\u66f4\u9ad8\uff0c\u4e5f\u66f4\u5408\u9002\uff0c\u53ef\u4ee5\u53bb\u9664Domain\u5bf9\u8c61\u5bf9FastJSON\u7684\u4f9d\u8d56\u3002\n. @Viyond \u4f60\u63d0\u4f9b\u7684TestCase\u4e2d\u4f9d\u7136\u5305\u542b\u5185\u90e8\u7684\u4ee3\u7801\u5b9e\u73b0\uff0cwensao\u8fd9\u6837\u662f\u65e0\u6cd5\u91cd\u73b0\u7684\u3002\u8bf7\u63d0\u4f9b\u53ef\u6267\u884c\u91cd\u73b0\u7248\u672c\u7684TestCase.\nPS:\u6211\u662f\u8fd9\u6bb5\u4ee3\u7801\u7684\u539f\u4f5c\u8005:P\n. \u90a3\u4e2aBuffer\u7c7b\u5c31\u662f\u5185\u90e8\u5b9e\u73b0\n. \u95ee\u9898\u662f\u5728\u4e8e\u80fd\u591f\u8ba9wenshao\u65b9\u4fbf\u5730\u91cd\u73b0\uff0c\u4e0d\u662f\u6211\u7ed9\u4f60\u770bBuffer\u7684\u6e90\u7801\u3002\n. ",
    "scymen": "\u662f\u7684\uff0c\u9759\u6001\u5185\u90e8\u7c7b\u6ca1\u6709\u95ee\u9898\u3002\n. ",
    "unoya": "\u975e\u5e38\u611f\u8b1d\u5e6b\u6211\u6e2c\u8a66, \u6211\u81ea\u5df1\u5f8c\u4f86\u4e00\u76f4\u5728\u60f3\u5b57\u5143\u78bc\u7684\u554f\u984c, \u6211\u628a\u4e3b\u7a0b\u5e8f(Main)\u6539\u6210\u5982\u4e0b:\n\u4e3b\u7a0b\u5e8f(Main):\nJsonOreMsgColor jomc = new JsonOreMsgColor();\njomc.add(\"minecraft:gold_ore\", \"\\u91d1\\u7926\", 14); // \u628a\u91d1\u7926\u6539\u6210Unicode\njomc.add(\"minecraft:iron_ore\", \"\\u9435\\u7926\", 6); // \u628a\u9435\u7926\u6539\u6210Unicode\nString orecolorstr = JSON.toJSONString(jomc, SerializerFeature.PrettyFormat);\ntry {\n    OutputStreamWriter outputSW = new OutputStreamWriter(new FileOutputStream(new File(\"test.json\"))); // \u6211\u628aUTF-8\u62ff\u6389\n    outputSW.write(orecolorstr);\n    outputSW.close();\n} catch (IOException e) {\n    e.printStackTrace();\n}\n\u9019\u6a23\u5b50\u5c31\u6c92\u518d\u51fa\u73fe\u90a3\u500b\u932f\u8aa4\u8a0a\u606f, \u6211\u4e5f\u641e\u4e0d\u61c2\u5230\u5e95\u554f\u984c\u9ede\u662f\u4ec0\u9ebc, \u56e0\u70ba\u6211\u9019\u500b\u7a0b\u5e8f\u662f\u7531 MinecraftForge \u5728\u8dd1\u7684, \u4e0d\u662f\u76f4\u63a5 java \u53bb run \u7684, \u6240\u4ee5\u6211\u4e5f\u7121\u6cd5\u5f97\u77e5\u554f\u984c\u5fb5\u7d50\u9ede\u5728\u54ea.\n\u81f3\u5c11, \u73fe\u5728\u77e5\u9053\u6211\u7528\u7684\u9019\u7248FastJson\u6c92\u554f\u984c, \u6211\u5c31\u80fd\u5b89\u5fc3\u4f7f\u7528\u4e86.\n\u518d\u6b21\u975e\u5e38\u611f\u8b1d\u5be6\u6e2c.\n. \u6211\u5728\u958b\u767cMinecraft\u7684mod, \u4f7f\u7528\u5230Forge\u7684API.\n\u770b\u4e86\u4f60\u7684\u6e2c\u8a66\u6a94,\u6211\u5927\u7d04\u731c\u5230\u4e5f\u8a31\u662fBlockPos\u9019\u500bclass\u7684\u554f\u984c\u4e86, \u770b\u4f86\u6211\u5f97\u81ea\u5df1\u91cd\u5beb\u9019\u500b\u985e\u5225\u7684\u529f\u80fd\u4e86.\n\u8b1d\u8b1d\u5e6b\u52a9\u6e2c\u8a66.. ",
    "nesuk": "\u7b49\u5f85\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5f15\u7528\u5c42\u6b21\u6bd4\u8f83\u6df1\u65f6\uff08\u6bd4\u5982bean->list->list->map\uff09\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff0c \u671f\u5f85\u4fee\u590d\uff01\n. ",
    "xiaoyifang": "https://github.com/alibaba/fastjson/pull/325\n. \u5bf9\u5916\u7684\u63a5\u53e3\uff0c\u5e94\u8be5\u4e3b\u8981\u662fto json ,from json,  \u8fd9\u4e9b\u65b9\u6cd5\u4e3b\u8981\u662f\u5185\u90e8\u5b9e\u73b0\uff0c\u517c\u5bb9\u6027\u4e0a\u5e94\u8be5\u6ca1\u4ec0\u4e48\u95ee\u9898:-),\u53ef\u4ee5\u4ee5\u65b0\u7684\u7248\u672c\u53f7\u540e\u7eed\u53d1\u5e03\u3002\n. ",
    "liujmok": "\u6211\u4e5f\u9047\u5230\u540c\u6837\u9519\u8bef\njava.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to ...WorkBean\n. ",
    "lichangadd": "\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u76ee\u524d\u5148\u901a\u8fc7\u624b\u52a8\u89e3\u6790\n. ",
    "matbird": "\u6211\u4e5f\u9047\u5230\u76f8\u540c\u7684\u95ee\u9898\uff0c\u4e0d\u53ea\u6709\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\n. \u5e94\u8be5\u662f\u6ca1\u529e\u6cd5\u4e86\uff0c\u53ea\u80fd\u5728\u89e3\u6790\u7684\u65f6\u5019\u4f20\u5165class\u624d\u884c\uff0c\u6cdb\u578b\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u88ab\u64e6\u9664\n. \u4e00\u822c\u6765\u8bf4\uff0c\u8fd4\u56de\u7684json\u6570\u636e\u9700\u8981\u7b26\u5408\u4e00\u5b9a\u7684\u89c4\u8303\uff0c\u8fd4\u56de\u7684\u4e3b\u9898\u6570\u636e\u65e0\u7591\u8981\u4e48\u662f\u4e00\u4e2a\"{ }\"\u5305\u56f4\u7684\u5bf9\u8c61\u6570\u636e\uff0c\u8981\u4e48\u5c31\u662f\"[ ]\"\u5305\u56f4\u7684\u96c6\u5408\u683c\u5f0f\uff0c\u76f4\u63a5\u5206\u79bb\u5f00\u505a\u4e0d\u540c\u7684\u5904\u7406\u5c31\u884c\u4e86\uff0c\u60f3\u8981\u4e00\u4e2a\u65b9\u6cd5\u5c31\u89e3\u51b3\u6240\u6709json\u6570\u636e\u89e3\u6790\u7684\u89e3\u51b3\u65b9\u6848\u8fd8\u662f\u4e0d\u5927\u73b0\u5b9e\u554a\u3002\n. ",
    "Jhanay": "\u6211\u4e5f\u9047\u5230\u6b64\u95ee\u9898\uff0c\u7528\u7684\u662f1.1.45.android\u7248\u672c\n. ",
    "TopJohn": "\u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u554a\uff0cfastJson\u4e0d\u662f\u53f7\u79f0\u6700\u5389\u5bb3\u7684\u561b\uff0c\u82cd\u5929\u5450\n. ",
    "zlphoenix": "@wenshao   \u6d4b\u8bd5\u7528\u4f8b\uff1a\n``` java\n    @Test\n    public void DateWithoutTimeTest() throws Exception\n    {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Date date = format.parse(\"2015-05-23\");\n    Calendar c = Calendar.getInstance();\n    c.setTime(date);\n\n    Model original = new Model();\n    original.setDate(date);\n    original.setCalendar(c);\n\n    SerializeWriter out = new SerializeWriter();\n    JSONSerializer serializer = new JSONSerializer(out);\n    serializer.config(SerializerFeature.UseISO8601DateFormat, true);\n\n    serializer.write(original);\n    String json = out.toString();\n\n    System.out.println(json); //V1.2.4 \u8f93\u51fa{\"calendar\":\"2015-05-23\",\"date\":\"2015-05-23\"} , V1.2.6 \u8f93\u51fa{\"calendar\":\"2015-05-23+08:00\",\"date\":\"2015-05-23+08:00\"}\n\n    Model actual = JSON.parseObject(json, Model.class);\n\n    Assert.assertNotNull(actual);\n    Assert.assertNotNull(actual.getDate());\n    Assert.assertNotNull(actual.getCalendar());\n\n    Assert.assertEquals(\"\u4e0e\u5e8f\u5217\u5316\u524d\u6bd4\u8f83\u4e0d\u76f8\u7b49\", original.getDate(), actual.getDate());\n\n    Assert.assertEquals(\"\u5e8f\u5217\u5316\u540e\u7684Date \u548c Calendar \u4e0d\u76f8\u7b49\", actual.getDate(), actual.getCalendar().getTime());\n}\n\n```\n\u5176\u4e2d Model \u7c7b\u578b\u53ea\u6709\u4e24\u4e2a\u5c5e\u6027\u5206\u522b\u662fCalendar \u7c7b\u578b\u7684 calendar \u548c Date \u7c7b\u578b\u7684 date\n\u8fd9\u6761\u6d4b\u8bd5\u7528\u4f8b\u57281.2.4\u80fd\u901a\u8fc7\uff0c\u4f46\u662f\u7f3a\u5c11\u65f6\u533a\uff0c\u4f46\u57281.2.6\u4e0a\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u5f02\u5e38\u4fe1\u606f\ncom.alibaba.fastjson.JSONException: For input string: \"2015-05-23+08:00\"\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:555)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:250)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:226)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:185)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:303)\n    at com.inspur.gsp.gsf.service.providers.FastJson_ISO8601DateTest.DateWithoutTimeTest(FastJson_ISO8601DateTest.java:109)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)\nCaused by: java.lang.NumberFormatException: For input string: \"2015-05-23+08:00\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Long.parseLong(Long.java:441)\n    at java.lang.Long.parseLong(Long.java:483)\n    at com.alibaba.fastjson.parser.deserializer.DateDeserializer.cast(DateDeserializer.java:56)\n    at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:98)\n    at com.alibaba.fastjson.serializer.CalendarCodec.deserialze(CalendarCodec.java:96)\n    at Fastjson_ASM_Model_1.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:551)\n    ... 31 more\n. @wenshao \u9700\u8981\u6211\u63d0\u4ea4\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u7684 request \u5417\uff1f\n. ",
    "jacktan1991": "\u8fd9\u4e2a\u9879\u76ee\u597d\u591aissue\uff0c\u611f\u89c9ownner\u4e0d\u662f\u5f88\u4e0a\u5fc3\uff0c@wenshao \u597d\u6b79\u7ed9\u4e2a\u56de\u5e94\u3002\n. @wenshao \u4e0d\u4f1a\u554a\uff01\u6240\u6709\u5f15\u7528\u4e86DEFFAULT_DATE_FORMAT\u5e38\u91cf\u7684\u6e90\u7801\u90fd\u5df2\u7ecf\u6539\u8fc7\u6765\u4e86\uff0c\u5176\u4ed6\u4eba\u4f7f\u7528\u7684\u8bdd\u4e5f\u4e0d\u4f1a\u76f4\u63a5\u53bb\u4f7f\u7528JSON.DEFFAULT_DATE_FORMAT\u53d8\u91cf\u5427\uff1f\uff01\n. ",
    "microhello": "@wenshao \n\u6211\u5728\u4f7f\u7528play framework 1.2.x\uff0c\u5176\u4e0d\u652f\u6301maven\u7684option\u9009\u9879\uff0c\u6240\u4ee5\uff0cPOM\u6587\u4ef6\u4e2d\u5199\u4e86spring\u4f9d\u8d56\nhttps://github.com/alibaba/fastjson/blob/master/pom.xml#L188 \u5c31\u5bfc\u81f4play deps\u65f6\u4ecd\u7136\u4f1a\u81ea\u52a8\u4e0b\u8f7dspring \u4f9d\u8d56\u3002\n2015-05-12 22:57 GMT+08:00 \u9ad8\u94c1 notifications@github.com:\n\nfastjson\u6ca1\u6709\u4f9d\u8d56spring framework\u554a\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/335#issuecomment-101309150.\n. \n",
    "lysu": "\u76ee\u524d\u81ea\u5df1\u5c1d\u8bd5\u81ea\u5df1\u652f\u6301\u7b2c\u4e00\u4e2a\u95ee\u9898(\u4e00\u4e2a\u7ed9\u522b\u4eba\u7528\u7684\u57fa\u7840jar\u5305)\uff0c \u4ee3\u7801\u5982\u4e0b\nprivate <T> List<T> parseArray(String json, Class<T> clazz, ParserConfig parsConfig) {\n    DefaultJSONParser parser = new DefaultJSONParser(json, parsConfig);\n    try {\n        JSONLexer lexer = parser.getLexer();\n        if (lexer.token() == JSONToken.NULL) {\n            lexer.nextToken();\n            return null;\n        }\n        List<T> list = new ArrayList<T>();\n        parser.parseArray(clazz, list);\n        JSONArray.handleResovleTask(parser, list);\n        return list;\n    } finally {\n        parser.close();\n    }\n}\n\u4f46\u53d1\u73b0JSONLexer\u5728\u4e0d\u540cfastjson\u7248\u672c\u4e2d\u4e0d\u540c \u4e4b\u524d\u662f\u62bd\u8c61\u7c7b\uff0c\u65b0\u7248\u672c\u53d8\u6210\u63a5\u53e3\u3002\u3002\u3002\u6240\u4ee5\u6211\u8fd9\u5305\u7ed9\u522b\u4eba\u65f6\u4e0d\u65f6\u4f1a\u6709\u95ee\u9898\u3002\u3002\n\u6240\u4ee5\u8fd9\u4e2a\u529f\u80fd\u611f\u89c9\u8fd8\u662f\u5728fastjson\u4e2d\u652f\u6301\u66f4\u597d\u3002\u3002\u5e2e\u5fd9\u770b\u4e0b \u8c22\u8c22\n. ",
    "kyleduo": "getter\u548csetter\u4e2d\u4e0d\u80fd\u7701\u7565m\u4e5f\u5c31\u662f\u8bf4mXxx\u7684getter\u53ea\u80fd\u662fgetmXxx\u4e0d\u80fd\u662fgetXxx\uff0c\u8fd9\u4e2a\u80fd\u9ebb\u70e6\u505a\u4e2a\u517c\u5bb9\u5417\uff1f\n. ",
    "runME": "\u6211\u5f53\u65f6\u662f\u6539\u4e86\u6e90\u4ee3\u7801\u91cd\u65b0\u6253\u5305\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u4e0d\u662f\u597d\u65b9\u5f0f\u3002\n. \u6700\u597d\u5c55\u793a\u7684\u65f6\u5019\u683c\u5f0f\u5316\u4e00\u4e0b\n. ",
    "benx203": "https://github.com/benx203/fastjson  \u5c42\u7ea7\u63a7\u5236\n. ",
    "xuse": "\u770b\u4e86\u6e90\u7801\u660e\u767d\u4e86\uff0c\u524d\u8005\u6839\u636e\u540d\u79f0\u5224\u65ad\u8981\u4e0d\u8981\u5e8f\u5217\u5316\uff0c\u540e\u8005\u53ef\u4ee5\u6839\u636e\u540d\u79f0\u548c\u503c\u5224\u65ad\u3002\u524d\u8005\u6027\u80fd\u597d\u4f46\u4e0d\u591f\u7075\u6d3b\uff0c\u540e\u8005\u6027\u80fd\u67e5\u4f46\u7075\u6d3b\u3002\n. ",
    "blokwap": "plz tell me\n. \u80fd\u5426\u5177\u4f53\u4e9b\uff0c\u5982\u4f55\u8fdb\u884c\u624b\u52a8\u88c5\u8f7d\n. ",
    "wuminorb": "\u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u7528\u6765\u89e3\u51b3\u540c\u65f6\u5e26\u6709WriteDateUseDateFormat\u548cWriteClassName\u5c5e\u6027\u65f6\uff0c\u65e5\u671f\u7c7b\u578b\u5c5e\u6027\u5e8f\u5217\u5316\u6210\u201cdate\u201d={\u201c@type\u201d=\u2026\u2026}\uff0c\u800c\u4e0d\u662f\u201cdata\u201d=\u201c2015-6-22\u201d\u3002\u8fd9\u4e2a\u5c5e\u4e8e\u5c1d\u8bd5\u6027\u7684\u66f4\u6539\uff0cgit\u8fd8\u4e0d\u719f\u6089\uff0c\u63d0\u9519\u5730\u65b9\u4e86\uff0c\u8fd8\u8bf7\u89c1\u8c05\u3002\n. ",
    "wangliangliang": "\u80fd\u7ed9\u6211\u7559\u4e2a\u90ae\u7bb1\u5417\uff1f\u6211\u628a\u6d4b\u8bd5\u7684\u6e90\u7801\u53d1\u4f60\u3002\u8c22\u8c22\n. \u5df2\u53d1\u4f60gmail\u90ae\u7bb1\n. ",
    "dragontree101": "\u6709\u6ca1\u6709\u89e3\u51b3\u529e\u6cd5\uff1f \u6211\u4e5f\u9047\u5230\u4e86\uff0c 1.2.6\u7248\u672c\n. com.alibaba.fastjson.JSONException: write javaBean error\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:212) ~[fastjson-1.1.41.jar:na]\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:398) ~[fastjson-1.1.41.jar:na]\n    at Serializer_5.write1(Unknown Source) ~[na:na]\n    at Serializer_5.write(Unknown Source) ~[na:na]\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:398) ~[fastjson-1.1.41.jar:na]\n    at Serializer_2.write1(Unknown Source) ~[na:na]\n    at Serializer_2.write(Unknown Source) ~[na:na]\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:369) ~[fastjson-1.1.41.jar:na]\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:418) ~[fastjson-1.1.41.jar:na]\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:406) ~[fastjson-1.1.41.jar:na]\n    at com.ricebook.rhllor.spring.boot.log.collector.SpanProcessingTask.call(SpanProcessingTask.java:44) [spring-boot-starter-tracer-1.0.0-SNAPSHOT.jar:na]\n    at com.ricebook.rhllor.spring.boot.log.collector.SpanProcessingTask.call(SpanProcessingTask.java:16) [spring-boot-starter-tracer-1.0.0-SNAPSHOT.jar:na]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_73]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_73]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_73]\n    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_73]\nCaused by: java.lang.reflect.InvocationTargetException: null\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_73]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_73]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_73]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_73]\n    at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:251) ~[fastjson-1.1.41.jar:na]\n    at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:88) ~[fastjson-1.1.41.jar:na]\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:157) ~[fastjson-1.1.41.jar:na]\n    ... 15 common frames omitted\nCaused by: java.nio.BufferUnderflowException: null\n    at java.nio.Buffer.nextGetIndex(Buffer.java:506) ~[na:1.8.0_73]\n    at java.nio.HeapByteBuffer.getShort(HeapByteBuffer.java:310) ~[na:1.8.0_73]\n    ... 22 common frames omitted\n. ",
    "CharkeyQK": "\u77e5\u9053\u4ec0\u4e48\u95ee\u9898\u4e86\uff1b\nBean\u547d\u540d\u4e0d\u89c4\u8303\uff0c\u9664\u4e86private int firstPage;\u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5c5e\u6027private boolean isFirstPage;\n. > \u5728fastjson 1.2.16\u7248\u672c\u4e4b\u540e\uff0cJSONField\u652f\u6301\u65b0\u7684\u5b9a\u5236\u5316\u914d\u7f6eserializeUsing\uff0c\u53ef\u4ee5\u5355\u72ec\u5bf9\u67d0\u4e00\u4e2a\u7c7b\u7684\u67d0\u4e2a\u5c5e\u6027\u5b9a\u5236\u5e8f\u5217\u5316\n\u4f60\u662f\u4e0d\u662f\u5728\u505a\u53cd\u5e8f\u5217\u5316\uff1f\n\u53e6\u5916\uff0c\u5982\u679c\u7c7b\u578b\u4e0d\u5339\u914d\u4f30\u8ba1\u662f\u4f1a ClassCastException \u7684. \u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c@wenshao\uff0cagain. @wenshao \u53cd\u5e8f\u5217\u5316\u51fa\u73b0\u540c\u6837\u7684\u9519\u8bef\u662f\u4e0d\u662fbug\u53ea\u4fee\u590d\u4e86\u4e00\u534a\uff1f. \u6211\u6574\u4e86\u4e2a web \u5de5\u7a0b\uff0cfastjson-test\u3002\u4f60\u770b\u4e00\u4e0b\u5de5\u7a0b\u7684 TODO\u3002\u8c22\u8c22\u3002. \u6709\u8ba1\u5212\u5b9e\u73b0\u201c\u6839\u636e\u672a\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b\u5bf9\u8c61\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a\u201d\u5417\uff1f. \u4f60\u7ed9\u4e2a\u7b80\u5355\u7684 demo \u9879\u76ee\u65b9\u4fbf\u770b\u95ee\u9898\uff0c\u5305\u62ec\u4f60\u8fd9\u4e9b\u914d\u7f6e\u5c31\u884c\u3002. \u4f60\u5728 github \u5efa\u4e2a\u4ed3\u5e93\u5457. \u7ed9\u4e2a demo \u5de5\u7a0b\u770b\u770b\u6bd4\u8f83\u5feb\u3002\u53e6\u4e00\u4e2a issue #768 \u4e5f\u662f\u4e00\u6837\u7684\u95ee\u9898\u3002. #830 fastjson\u5e8f\u5217\u5316\u5f02\u5e38java.lang.IncompatibleClassChangeError  \n289 Error: jdk1.8\u4e0basm\u7cfb\u5217\u5316\u6709\u7f3a\u7701\u65b9\u6cd5\u7684\u63a5\u53e3. ```\npublic static void main(String[] args) {\n        String jsonString = \"\" +\n                \"{\" +\n                \"    \\\"age\\\": 25,/comment/\" +\n                \"    \\\"name\\\": \\\"charkey\\\"\" +\n                \"}\";\n        TestUser testUser = JSONObject.parseObject(jsonString, TestUser.class);\n        System.out.println(testUser);\n    }\n```\n\u6d4b\u8bd5ok\uff0c\u4e0d\u8fc7\u4e00\u822c\u4e5f\u4e0d\u4f1a\u6709\u6ce8\u91ca\u5427\n1.2.21. \u4f60\u662f\u4e0d\u662f false \u540e\u9762\u76f4\u63a5\u8ddf\u7740\u6ce8\u91ca\nfalse/*comment*/. 4. \u4f7f\u7528serialize/deserialize\u6307\u5b9a\u5b57\u6bb5\u4e0d\u5e8f\u5217\u5316. PropertyFilter \u6839\u636ePropertyName\u548cPropertyValue\u6765\u5224\u65ad\u662f\u5426\u5e8f\u5217\u5316\nClass_Level_SerializeFilter. com.alibaba.fastjson.support.config.FastJsonConfig#classSerializeFilters\nSpring MVC \u914d\u7f6e fastJsonHttpMessageConverter \u7684\u65f6\u5019\uff0c\u4e5f\u914d\u7f6e\u4e00\u4e0b fastJsonConfig\uff0c\u5176\u4e2d fastJsonConfig \u53ef\u4ee5\u914d\u7f6e classSerializeFilters\u3002\n```\npublic class NullValuePropertyFilter implements PropertyFilter {\n@Override\npublic boolean apply(Object object, String name, Object value) {\n    return value != null;\n}\n\n}\n```. \u7528 PropertyFilter\uff0capply \u65b9\u6cd5\u4e2d\u83b7\u53d6 \u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3\uff0c\u7136\u540e\u505a\u4f60\u9700\u8981\u7684\u903b\u8f91\u5224\u65ad\u3002. fastjson-test\n```\nPOST /offerCatalog/qry HTTP/1.1\nContent-Type: application/json\n{\"value\":{\"id\":1}}\n```\n\u9519\u8bef\u65e5\u5fd7\uff1a\njava.lang.IncompatibleClassChangeError: Found interface com.charkey.fastjson.domain.IBaseBean, but class was expected. Releases with details in Chinese: https://github.com/alibaba/fastjson/releases. \u8be6\u7ec6\u7684\u9519\u8bef\u7ed9\u51fa\u6765\u770b\u770b. \u8fd9\u4e2a bug fix \u4e5f\u4fee\u590d\u4e86\u4f7f\u7528 ASM \u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u60c5\u51b5\u5417\uff1f. User \u5bf9\u8c61\u4e0a\u6ca1\u6709 transient \u5c5e\u6027\uff1f. \u4f60\u8fd9\u7528\u6cd5\u5c31\u6709\u70b9\u5947\u602a\u4e86\u3002\n2016\u5e7412\u670823\u65e5 +0800 22:15 \u9006\u5bfb\u601d\u5ff5 notifications@github.com\uff0c\u5199\u9053\uff1a\n\n@JSONField(serialize = false)\nprivate String name;\nUser \u5bf9\u8c61\u6709name\u5b57\u6bb5\u4e2d\u6709 @JSONField(serialize = false) \u4f46\u662f\u6211\u60f3\u4e0d\u8ba9\u4ed6\u4e0d\u5ffd\u7565.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub (https://github.com/alibaba/fastjson/issues/965#issuecomment-268995925), or mute the thread (https://github.com/notifications/unsubscribe-auth/AE49nwA8rtOJajLLENVA7aGR83HxuSNBks5rK9dsgaJpZM4LUrfu).\n\n. \u4e0d\u9700\u8981\u518d\u521b\u5efa model\n[org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor] - Written [{\n    \"code\": 200,\n    \"msg\": \"OK\"\n}] as \"application/json;charset=UTF-8\" using [org.springframework.http.converter.StringHttpMessageConverter@22d55bca]\n\u8fd9\u662f\u6211\u8fd9\u8fb9\u6d4b\u8bd5\u7684\u60c5\u51b5\uff0c\u4f60\u770b\u770b\u4f60\u90a3\u8fb9\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u6bd4\u5982 message-converters \u7684\u914d\u7f6e. \u4f60\u53ef\u4ee5\u5148\u68c0\u67e5\u4e00\u4e0b arrayString \u662f\u4e0d\u662f\u6807\u51c6 JSON \u6570\u636e\u683c\u5f0f\uff0c\u6216\u8005\u628a\u4f60\u6d4b\u8bd5\u6709\u95ee\u9898\u7684 arrayString \u8d34\u51fa\u6765\u4e00\u4e0b\u3002. \u80fd\u7ed9\u4e00\u4e0b testcase \u5417\uff1f. \u80fd\u7ed9\u4e00\u4e0b testcase \u5417\uff1f. ",
    "arlen43": "@wenshao Hi\uff0cwenshao\uff0c\u73b0\u5728fastjson\u662f\u5426\u8fd8\u652f\u6301\u66f4\u65b0\uff1f\nJSONField\u4ecb\u7ecd\n\u5173\u4e8e@JSONField\u6ce8\u89e3\uff0c\u5728\u6587\u6863\u4e2d\u5199\u7684\u662f\njava\n public class A {\n      // \u914d\u7f6edate\u5e8f\u5217\u5316\u548c<b>\u53cd\u5e8f\u5217\u4f7f\u7528</b>yyyyMMdd\u65e5\u671f\u683c\u5f0f\n      @JSONField(format=\"yyyyMMdd\")\n      public Date date;\n }\n\u4f46\u662f\u6211\u53d1\u73b0\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u6ce8\u89e3\u5e76\u4e0d\u8d77\u4f5c\u7528\u3002\u6211\u505a\u4e86\u5982\u4e0b\u5c1d\u8bd5\uff1a\n1. \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\n``` java\npublic class FastDateDeserializer extends DateDeserializer {\n@SuppressWarnings(\"unchecked\")\n@Override\nprotected <T> T cast(DefaultJSONParser parser, Type clazz, Object fieldName, Object val) {\n          // ...\n    }\n\n}\n```\n\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\uff0c\u53ea\u80fd\u5168\u5c40\u8bbe\u7f6e\uff0c\u6211\u800c\u6211\u7684dateformate\u4f1a\u6709\u591a\u4e2a\u683c\u5f0f\uff0c\u90a3\u6211\u60f3\u5230\u4e86\u5982\u4f55\u53bb\u62ff\u5230\u6ce8\u89e3\u4e0a\u7684format\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u7528\u7684\u5165\u53c2\u53ea\u6709parser\u3002\u4e8e\u662f\u6211\u53bb\u770b\u6e90\u7801\uff0c\u770b\u5230parser\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0JSONDefaultParser\uff0c\u800c\u91cc\u8fb9\u7684dateFormatPattern  = JSON.DEFFAULT_DATE_FORMAT\uff0c\u5e76\u6ca1\u6709\u53bb\u62ff\u6ce8\u89e3\u5f53\u4e2d\u7684\u503c\uff0c\u7ffb\u4e86\u534a\u5929\u6e90\u7801\uff0c\u53d1\u73b0\u5728\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u62ffJSONField\u6ce8\u89e3\u7684\u503c\uff0c\u53ea\u6709ordinal\u7528\u5230\u4e86\uff0c\u5176\u4ed6\u503c\u6ca1\u6709\u7528\u5230\u3002\u90a3\u4e48JSONField\u662f\u5426\u5bf9\u53cd\u5e8f\u5217\u5316\u4e0d\u652f\u6301\uff1f\uff1f\uff1f\u6c42\u89e3\u7b54\n1. \u4fee\u6539JSON.DEFFAULT_DATE_FORMAT\uff0c\u4f46\u4ed6\u662f\u5168\u5c40\u7684\uff0c\u6539\u4e86\u5176\u4ed6\u5730\u65b9\u53c8\u4f1a\u51fa\u95ee\u9898\uff1b\n2. \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u4e2d\uff0c\u5c06dateformatter\u5199\u6b7b\uff0c\u4f46\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u4e5f\u53ea\u80fd\njava\nParserConfig.getGlobalInstance().putDeserializer(Date.class, new FastDateDeserializer());\n\u4e5f\u662f\u5168\u5c40\u7684\uff0c\u80fd\u5426\u50cfJackson Json\u90a3\u6837\uff0c\u53ef\u4ee5\u5728\u6ce8\u89e3\u4e0a\u652f\u6301\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\uff1f\u6216\u8005\u5728DefaultJSONParser parser\u4e2d\uff0c\u901a\u8fc7\u50cfParserConfig->createJavaBeanDeserializer\u65b9\u6cd5\u4e00\u6837\uff0c\u62ff\u5230JSONField\u7684\u503c\uff0c\u5c01\u88c5\u5230parser\u4e2d\uff0c\u8fd9\u6837\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5c31\u80fd\u62ff\u5230\u6ce8\u89e3\u4e2d\u7684\u503c\u4e86\u3002\n. \u4e0d\u5149\u5e8f\u5217\u5316\u65f6\u662f\u8fd9\u6837\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u4e5f\u662f\uff0c\u6ce8\u89e3format\u5b8c\u5168\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u4ee3\u7801\u91cc\u7684JSONDefaultParser\u9ed8\u8ba4\u7684\u683c\u5f0f\u5316\u90fd\u662f\u5199\u6b7b\u7684\uff0c\u538b\u6839\u6ca1\u6709\u53bb\u62ff\u6ce8\u89e3\u91cc\u7684\u4e1c\u897f\u3002\u9189\u4e86\u3002\u3002\u3002\u81ea\u5df1\u91cd\u5199\u53cd\u5e8f\u5217\u5316\uff0c\u53ea\u80fd\u662f\u5168\u5c40\u8bbe\u7f6e\uff0c\u4e0d\u540c\u7684format\u5b8c\u5168\u6ca1\u6cd5\u641e\uff0c\u770b\u4e86\u534a\u5929\u6e90\u7801\uff0c\u8fd8\u662f\u89e3\u51b3\u4e0d\u4e86\uff0c\u70e6\u6b7b\n. ",
    "FkinH": "try this.\n@JSONType(orders = {})\n. ",
    "limhi": "\u5728\u6211\u9019\u500b\u6848\u4f8b\u4e2d\uff0c\u4e26\u4e0d\u5b58\u5728\u9700\u8981\u53cd\u5e8f\u5217\u5316\u7684java\u7269\u4ef6\uff0c\u4e5f\u5c31\u6c92\u6709\u5730\u65b9\u53ef\u4ee5\u653eannotation\n. wenshao\u63d0\u4f9b\u7684ValueFilter\u65b9\u5f0f\uff0c\u50c5\u80fd\u8abf\u6574value\u7269\u4ef6\n\u4f46\u662fkey\u672c\u8eab\u5728\u8f38\u51fa\u7684json \u5b57\u4e32\u4e2d\uff0c\u4f9d\u7136\u662f\u7121\u5e8f\u7684\n. ",
    "Arisono": "LinkedHashMap root=JSON.parseObject(map.toString(),new TypeReference>(){} );   \u8fd9\u6837\u5bf9\u4e8e\u5355map\u5bf9\u8c61\u53ef\u4ee5\u89e3\u51b3\u987a\u5e8f\u95ee\u9898\uff0c\u5d4c\u5957\u7684map\u8fd8\u6ca1\u6709\u5c1d\u8bd5\uff0c\u4e0d\u8fc7\u8fd9\u53ef\u4ee5\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u5e2e\u52a9@limhi. ",
    "sesames": "That is  good. ",
    "LQZYC": "i have a try as u say but no problem have been found   can u upload your code ,then i can try my best to fix it\n. \u6211\u662f\u5728java1.8\u7684\u73af\u5883\u4e0b\u8fd0\u884c\u7684 \u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u554a  \u6253\u5370\u51fa\u6765\u7684\u662fRemoteInvocation: method name 'test'; parameter types [int, java.util.Date, java.lang.String]\n. \u6211\u5c31\u662f\u6700\u65b0\u7684 \u6211\u7684\u6d4b\u8bd5\u4ee3\u7801\u5c31\u662fcopy\u4f60\u7684\n. \u4f60\u6ce8\u610f\u6362jdk1.8  \u6211\u662f1.8\u7684jdk\n. \u989d\u8fd9\u4e2a\u6211\u5c31\u5f88\u96be\u89e3\u51b3\u4e86 \u56e0\u4e3a\u6211\u8fd9\u8fb9\u8fd0\u884c\u4e86\u51e0\u6b21 \u7ed3\u679c\u90fd\u662f\u8fd9\u6837\u7684 \u6ca1\u6709\u51fa\u9519\u8bef \u6211\u7a0d\u540e\u5728\u522b\u4eba\u7684\u673a\u5668\u4e0a\u8dd1\u4e00\u8dd1\u770b\u4f1a\u4e0d\u4f1a\u51fa\u9519\u8bef\u5427 \n. \u6211\u4e5f\u662fmac  java\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u9762 \u8ddfmac \u6216\u8005windows\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u5427\n. \u8fd9\u4e2aSerializerFeature.WriteDateUseDateFormat\u9700\u8981\u7684\u65f6\u5019\u52a0\u4e0a\u5c31\u53ef\u4ee5\u4e86\u5427 \u5982\u679c\u5bf9\u65e5\u671f\u8981\u6c42\u4e0d\u662f\u5f88\u4e25\u683c \u6bcf\u6b21\u4e0d\u7ba1\u4ec0\u4e48\u6837\u5b50\u7684\u5e8f\u5217\u5316\u90fd\u52a0\u4e0a\u8fd9\u4e2a\u4e5f\u4e0d\u5927\u597d\u5427\n. https://github.com/Alibaba/fastjson/wiki/%E9%A6%96%E9%A1%B5\n. \u80fd\u4e0a\u5b8c\u6574\u7684\u793a\u4f8b\u5417\n. \u53e6\u5916\u53d1\u73b0  \u53cd\u5e8f\u5217\u5316\u65f6  \u52a0\u4e0a@JSONType(asm = false) \u8fd8\u662f\u4f1a\u7528asm\u6765\u53cd\u5e8f\u5217\u5316  \u4e0d\u6e05\u695a\u662f\u672c\u6765\u5c31\u4e0d\u652f\u6301\u8fd9\u4e2a\u529f\u80fd  \u8fd8\u662f\u9700\u8981\u5b8c\u5584asm\u5224\u65ad  \u5728ParserConfig.createJavaBeanDeserializer()\u4e2d\u52a0\u5224\u65ad\n. \u5e94\u8be5\u8fd8\u53ef\u4ee5\u7528namefilter\u6765\u8bbe\u7f6e  \u6216\u8005\u4f60\u8fd9\u6837\u6765\u5b9a\u4e49bean  \u5982\u4e0b\uff1a\npublic static class VO {\n```\n    private int Id;\npublic int get_Id() {\n    return Id;\n}\n\npublic void set_Id(int id) {\n    Id = id;\n}\n\n}\n```\n\u7ed3\u679c\uff1a{\"Id\":123}\n\u5c31\u662f\u5728get\u548cset\u4e4b\u95f4\u52a0\u4e00\u4e2a_\n. \u8fd9\u79cd\u9700\u6c42\u5f88\u591a\u5417\n. ",
    "foxinmy": "\u81ea\u5df1\u5199filter\nUnderlineNameFilter\n```\n public static class UnderlineNameFilter implements NameFilter {\n    private final static UnderlineNameFilter instance = new UnderlineNameFilter();\npublic static UnderlineNameFilter getGlobalInstance() {\n    return instance;\n}\n@Override\npublic String process(Object object, String name, Object value) {\n    StringBuilder propertyName = new StringBuilder(name.length());\n    propertyName.append(Character.toLowerCase(name.charAt(0)));\n    for (int i = 1; i < name.length(); i++) {\n        char c = name.charAt(i);\n        if (Character.isUpperCase(c)) {\n            propertyName.append(UNDERLINE);\n        }\n        propertyName.append(Character.toLowerCase(c));\n    }\n    return propertyName.toString();\n}\n\n}\n```\nCamelCaseFilter\n```\npublic static class CamelCaseFilter implements NameFilter {\n    private final static CamelCaseFilter instance = new CamelCaseFilter();\npublic static CamelCaseFilter getGlobalInstance() {\n    return instance;\n}\n\n@Override\npublic String process(Object object, String name, Object value) {\n    StringBuilder propertyName = new StringBuilder(name.length());\n    propertyName.append(Character.toLowerCase(name.charAt(0)));\n    for (int i = 1; i < name.length(); i++) {\n        char c = name.charAt(i);\n        if (UNDERLINE == c && (i + 1) < name.length()) {\n            propertyName.append(Character.toUpperCase(name\n                    .charAt(i + 1)));\n            i++;\n            continue;\n        }\n        propertyName.append(c);\n    }\n    return propertyName.toString();\n}\n\n}\n```\ncase\n```\n String camelcaseJson = JSON.toJSONString(javaBean,\n            UnderlineNameFilter.getGlobalInstance());\nString camelcaseJson = JSON.toJSONString(javaBean,\n            CamelCaseFilter.getGlobalInstance());\n```\n. \u8bf7\u4f7f\u7528\n<T> T com.alibaba.fastjson.JSON.parseObject(byte[] input, Type clazz, Feature... features)\n. ",
    "fivesmallq": "@foxinmy \u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u3002\u3002https://github.com/alibaba/fastjson/issues/474 \u6bd4\u8f83\u86cb\u75bc\uff0c\u76ee\u524d\u6ca1\u6709\u627e\u5230\u529e\u6cd5\n. \u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u81ea\u5df1\u53c8\u5199\u4e86\u4e00\u4e2a filter\uff0c\u5904\u7406 value \u7684\u60c5\u51b5\njava\n    static ValueFilter stringNullAsEmptyFilter = new ValueFilter() {\n        @Override\n        public Object process(Object object, String name, Object value) {\n            if (value == null) {\n                Field field = getAccessibleField(object, name);\n                if (field.getType().equals(String.class)) {\n                    return \"\";\n                }\n            }\n            return value;\n        }\n    };\njava\n        String json = JSON.toJSONString(aic, new SerializeFilter[]{underscoreFilter, stringNullAsEmptyFilter}, SerializerFeature.PrettyFormat, SerializerFeature.WriteMapNullValue, SerializerFeature.WriteNullListAsEmpty);\n\u4f46\u662f\u8fd9\u4e2a\u95ee\u9898\u662f bug \u5417\uff1f\u6211\u91cd\u5199\u7684 filter \u6bd5\u7adf\u662f nameFilter\uff0c\u4e0d\u5e94\u8be5\u5f71\u54cd value \u7684\u5904\u7406\n. @zhugw \u53ef\u4ee5\u7528\u5176\u4ed6\u5e93\uff0chttps://github.com/jayway/JsonPath\n``` java\nString json = \"...\";\nList authors = JsonPath.read(json, \"$.store.book[*].author\");\n```\n. ",
    "qq123renmin": "\u7528@foxinmy \u63d0\u4f9b\u7684\u529e\u6cd5\u786e\u5b9e\u80fd\u89e3\u51b3\u95ee\u9898\uff01\u611f\u8c22. ",
    "beilly": "\u4f55\u5fc5\u539f\u4f5c\u8005\u63d0\u4ea4\n. \u4e0d\u77e5\u9053\u4ec0\u4e48\u4ea7\u54c1\u5bf9\u6548\u7387\u8981\u6c42\u5206\u7684\u8fd9\u4e48\u7ec6\uff0c\u611f\u89c9\u73b0\u5728\u90fd\u662f\u5404\u79cd\u9ed2\u522b\u4eba\u7684\uff0c\u627e\u4e00\u4e2a\u80fd\u6ee1\u8db3\u9700\u6c42\u7684\u5c31\u662f\u597d\u7684\u3002. ",
    "dingshuangxi888": "\u6709\u7684\uff0c\u6211\u4eec\u7cfb\u7edf\u5728OB\u4e0a\u5b58\u50a8JSON\u6570\u636e\uff0c\u6570\u636e\u91cf\u6700\u5927\u8fbe\u523050K\uff0c\u53d1\u73b0JSON\u5b58\u5728\u5f88\u591a\u5f15\u53f7\uff0c\u6240\u4ee5\u8003\u8651\u5c06\u6240\u6709\u7684\u5f15\u53f7\u53bb\u9664\uff0c\u51cf\u5c11\u6570\u636e\u91cf\uff0c\u539f\u6765\u662f\u8003\u8651\u5728\u5916\u5c42\u505a\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u53bb\u9664\uff0c\u4f46\u662f\u6027\u80fd\u66f4\u5dee\u4e86\uff0c\u6240\u4ee5\u51b3\u5b9a\u4ecefastjson\u5165\u624b\u3002\u53d1\u73b0fastjson\u5bf9key\u652f\u6301\u53bb\u5f15\u53f7\uff0c\u5bf9value\u4e0d\u652f\u6301\uff0c\u6240\u4ee5\u505a\u4e86\u6539\u9020\uff0c\u5e0c\u671b\u80fd\u591f\u539f\u751f\u652f\u6301\n. \u4e3b\u8981\u662f\u6211\u4eec\u8981\u5c06JSON\u6570\u636e\u5b58\u5230\u8868\u5b57\u6bb5\u91cc\u9762\uff0c\u6240\u4ee5\u5bf9\u6570\u636e\u5e93\u5b57\u6bb5\u5927\u5c0f\u6709\u4e86\u8981\u6c42\uff0c\u6211\u89c9\u5f97\u65e2\u7136fastjson\u539f\u6765key\u90fd\u80fd\u591f\u652f\u6301\u53bb\u5f15\u53f7\uff0c\u4e3a\u4ec0\u4e48value\u5c31\u4e0d\u80fd\u5462\n. ",
    "milk36": "\u8c22\u8c22\n. ",
    "DevinXian": "\u6211\u4e5f\u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u98980.0\uff0c\u5173\u6ce8\u4e0b~\n. ",
    "gzu-liyujiang": "\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u597d\u50cf\u662f\u56e0\u4e3a\u7f13\u51b2\u8f93\u51fajson\u65f6\u591a\u52a0\u4e86header\u6240\u81f4\n. ",
    "zl7261": "com.alibaba.fastjson.JSON\n/*\n     * @since 1.2.11\n     /\n    @SuppressWarnings(\"unchecked\")\n    public static  T parseObject(InputStream is, //\n                                    Type type, //\n                                    Feature... features) throws IOException {\n        return (T) parseObject(is, IOUtils.UTF8, type, features);\n    }. ",
    "huashanyu": "\u4f7f\u7528:ParserConfig.getGlobalInstance().setAsmEnable(false);\u5173\u95edasm.\u5373\u53ef\u89e3\u51b3\n\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4f46\u662f json \u7684\u683c\u5f0f\u8fd8\u662f\u6709\u95ee\u9898\u554a\n. \u4f7f\u7528:ParserConfig.getGlobalInstance().setAsmEnable(false);\u5173\u95edasm.\u5373\u53ef\u89e3\u51b3\n\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4f46\u662f json \u7684\u683c\u5f0f\u8fd8\u662f\u6709\u95ee\u9898\u554a\n. ",
    "wq163": "\u517c\u5bb9\u6027\u65b9\u9762\u4e00\u76f4\u6ca1\u6709 gson \u7b49\u5b8c\u5584\u3002\u5e0c\u671b\u589e\u52a0\u5bf9@JsonValue\uff0c@JsonRawValue\uff0c@JsonGetter\u7b49\u6807\u51c6\u6ce8\u89e3\u7684\u652f\u6301\n. ",
    "lingzhm": "\u6ca1\u6709\u5b9e\u73b0Serializable \u63a5\u53e3\u65e0\u6cd5\u5bf9\u7c7b\u7684\u5b9e\u4f8b\u8fdb\u884c\u5e8f\u5217\u5316\u3002\n. ",
    "friedwm": "\u67e5\u4e86\u534a\u5929\u53d1\u73b0\u662ffastjson\u7684\u95ee\u9898\uff0c\u627e\u5230\u8fd9\u513f\u4e4b\u524d\u8fd8\u4ee5\u4e3a\u662f\u7528\u7684\u7248\u672c\u592a\u65e7\u8fd8\u5347\u7ea7\u4e86\u7248\u672c\uff0c\u7ed3\u679c\u8fd8\u662f\u4e00\u6837\u3002 @wenshao \u697c\u4e3b\u8d34\u51fa\u7684\u4ee3\u7801\u662fspringfox-spring-web\u5305\u91cc\u7684\uff0c\u65e0\u6cd5\u63a7\u5236\u3002\n. https://github.com/springfox/springfox/issues/1339\n. ",
    "bianzhifu": "@friedwm \npublic class SwaggerJsonSerializer implements ObjectSerializer {\n    public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n        SerializeWriter out = serializer.getWriter();\n        Json json = (Json) object;\n        out.write(json.value());\n    }\n}\nFastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\nFastJsonConfig fastJsonConfig = new FastJsonConfig();\nfastJsonConfig.getSerializeConfig().put(Json.class,new SwaggerJsonSerializer());\nconverter.setFastJsonConfig(fastJsonConfig);\n. ",
    "yrom": "\u770b\u6e90\u7801FieldDeserializer\u7684FieldType\u5176\u5b9e\u5c31\u662f\u901a\u8fc7field.getGenericType()\u62ff\u5230\u7684\uff0c\u800c\u4e14\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5e76\u6ca1\u6709\u95ee\u9898\n. @JSONField(name = \"taskCreateTime\", serialize = true, deserialize = false)\nprivate String taskCreateTimeStr;\n\u6211\u731c\u95ee\u9898\u51fa\u5728\u8fd9\u91ccname = \"taskCreateTime\"\n. @kimmking \u5443\u662f\u6d4b\u8bd5\u7684\u65f6\u5019\u591a\u52a0\u7684\uff0c\u8d34\u4e0a\u6765\u5fd8\u5220\u4e86\u3002\u4f46\u5373\u4f7f\u6709\u591a\u4f59\u7684\u5b57\u6bb5\u4e5f\u4e0d\u5e94\u4f1a\u5f71\u54cd\u4e0d\u662f\u5417\uff1f. ```java\n@RunWith(JUnit4.class)\npublic class GenericObjectJsonParseTest {\n@Test\npublic void parseObject1() {\n    assertEquals(\"2\", JSON.parseObject(\"{\\\"data\\\":[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}\",\n            new TypeReference<BaseGenericType<List<String>>>() {\n            }).data.get(1));\n}\n\n@Test\npublic void parseObject2() {\n    assertEquals(\"2\", JSON.parseObject(\"{\\\"data\\\":[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}\",\n            new TypeReference<ExtendGenericType<String>>() {\n            }).data.get(1));\n}\n\n@Test\npublic void parseObject3() {\n    assertEquals(\"2\", JSON.parseObject(\"{\\\"data\\\":[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}\",\n            SimpleGenericObject.class).data.get(1));\n}\n\n@Test\npublic void parseObject4() {\n    assertEquals(\"2\", JSON.parseObject(\"{\\\"data\\\":[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}\",\n            SimpleGenericObjectWithJSONCreator.class).data.get(1));\n}\n\n@Test\npublic void parseObject5() {\n    assertEquals(\"2\", JSON.parseObject(\"{\\\"data\\\":[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}\",\n            SimpleGenericObjectWithJSONCreatorFactory.class).data.get(1));\n}\n\nstatic class BaseGenericType<T> {\n    public T data;\n}\n\nstatic class ExtendGenericType<T> extends BaseGenericType<List<T>> {\n}\n\nstatic class SimpleGenericObject extends ExtendGenericType<String> {\n}\n\nstatic class SimpleGenericObjectWithJSONCreator extends ExtendGenericType<String> {\n\n    @JSONCreator\n    public SimpleGenericObjectWithJSONCreator(\n            @JSONField(name = \"data\") List<String> data) {\n        this.data = data;\n    }\n}\n\nstatic class SimpleGenericObjectWithJSONCreatorFactory extends ExtendGenericType<String> {\n\n    @JSONCreator\n    public static SimpleGenericObjectWithJSONCreatorFactory create(\n            @JSONField(name = \"data\") List<String> data) {\n        SimpleGenericObjectWithJSONCreatorFactory o\n                = new SimpleGenericObjectWithJSONCreatorFactory();\n        o.data = data;\n        return o;\n    }\n}\n\n}\n\u6211\u66f4\u65b0\u4e86\u4e00\u4e0b\u5355\u5143\u6d4b\u8bd5\uff0c`parseObject3()` \u548c `parseObject5()` \u662f\u9a8c\u8bc1\u4e0d\u901a\u8fc7\u7684\uff1a`java.lang.ClassCastException: java.lang.String cannot be cast to java.util.List`. \u770b\u8d77\u6765\u8ddf\u6211\u9047\u5230\u7684\u95ee\u9898\u7c7b\u4f3c https://github.com/alibaba/fastjson/issues/1229. \u6709\u4e00\u79cd\u573a\u666f\uff0c\u5e94\u8be5\u53ef\u4ee5\u590d\u73b0\u8be5\u95ee\u9898\u3002\n\u5047\u8bbe\u6709\u7c7b\nclass Generic{\n  T test;\n}\n```\n\u89e3\u6790\u65f6\u4f7f\u7528\u65b9\u6cd5\u5e94\u8be5\u7c7b\u4f3c\uff1aJSON.parseObject(json, new TypeReference<Generic<A>>(){})\n\u4f46\uff0c\u5f53\u7528\u6cd5\u4e0d\u5bf9\u65f6\u5982\uff1a\nJSON.parseObject(json, new TypeReference<Generic>(){}) \n\u6ca1\u6709\u7ed9Generic\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u5219\u6b64\u65f6\u5176test\u5b57\u6bb5\u4e3a\u7f3a\u7701\u7684JSONObject\uff0c\u5173\u952e\u5728\u4e8e\u4f1a\u5c06\u8fd9\u6b21\u5bf9\u5e94Generic\u7c7b\u7684\u89e3\u6790\u5668\u7f13\u5b58\u8d77\u6765\u3002\n\u8fdb\u800c\u5bfc\u81f4\u5176\u4ed6\u5730\u65b9\u5373\u4f7f\u4f20\u9012\u4e86\u6cdb\u578b\uff0cJSON.parseObject(json, new TypeReference<Generic<A>>(){})\uff0c\u4e5f\u4f1a\u89e3\u6790\u9519\u8bef\n. ",
    "zhaiyuyong": "\u73af\u5883\u4fe1\u606f\uff1a\nbash\njava version:1.8.0_40\njetty version:9.2.9.v20150224\nfastjson version:1.2.3\n\u73b0\u5728\u8001\u662f\u51fa\u73b0metaspace oom\n\u6253\u5f00jvm\u7684-verbose:class\n\u4e00\u76f4\u51fa\u73b0\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\uff0c\u8bf7\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\uff1f\nbash\n[Loaded Serializer_3725 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3726 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3727 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3728 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3729 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3730 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3731 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3732 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3733 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3734 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3735 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3736 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3737 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3738 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3739 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3740 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3741 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3742 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Unloading class sun.reflect.GeneratedConstructorAccessor128 0x00000007c099a028]\n[Loaded Serializer_3743 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3744 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3745 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3746 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3747 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3748 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3749 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3750 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3751 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3752 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3753 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3754 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3755 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3756 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3757 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3758 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3759 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3760 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3761 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3762 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3763 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3764 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3765 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3766 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3767 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n[Loaded Serializer_3768 from file:/tmp/jetty-0.0.0.0-8080-bybev16.war-_bybev16-any-7392887708992491162.dir/webapp/WEB-INF/lib/fastjson-1.2.3.jar]\n. \u4f46\u662fmetaspace\u662f\u4e00\u76f4\u589e\u957f\u7684\uff0c\u4e4b\u524d\u8bbe\u7f6e\u5230512M OOM \u73b0\u5728\u8bbe\u7f6e\u52301G \uff0cclass load count\u4e5f\u662f\u4e00\u76f4\u589e\u957funload \u6ca1\u6709\u53d8\u5316 \n. OK  \u6211\u8bd5\u8bd5jdk7  \u4f46\u662f\u8fd9\u53f0\u673a\u5668\u4e0a\u53e6\u5916\u4e00\u4e2aspringboot\u5e94\u7528\u4e5f\u4f7f\u7528\u7684fastjson\u540c\u6837\u7248\u672c\u6ca1\u95ee\u9898\uff0c\u51fa\u95ee\u9898\u7684\u662f\u4f7f\u7528jetty\u542f\u7684war \n. java\nClass<?> exampleClass = classLoader.defineClassPublic(className, code, 0, code.length);\nSystem.out.println(\"---asm create---\" + clazz + \"+++++\"+exampleClass );\nObject instance = exampleClass.newInstance();\n\u5982\u679cexampleClass.newInstance(); \u51fa\u73b0\u5f02\u5e38\u65f6\u5019  \u751f\u6210\u7684class load\u5230\u5185\u5b58\u4e86 \u4f46\u662f\u6ca1\u6709\u653e\u5230map \u7f13\u51b2\u53bb\uff0c\u4e0b\u6b21\u7ee7\u7eed load \u4f1a\u6709\u5185\u5b58\u6cc4\u9732\n. \u8fd9\u6b21\u539f\u56e0\u4e3b\u8981\u662f\u4ee3\u7801try catch\u4f4f\u541e\u4e86\u5f02\u5e38 \uff0cClass<?> exampleClass = classLoader.defineClassPublic(className, code, 0, code.length);\nSystem.out.println(\"---asm create---\" + clazz + \"+++++\"+exampleClass );\nObject instance = exampleClass.newInstance();\u8fd9\u4e2a\u5047\u5982 \u751f\u6210\u5bf9\u8c61\u5931\u8d25\u65f6\u5019\u600e\u4e48\u5378\u8f7d\u8be5\u5b57\u8282\u7801\n. \u662f\u6b63\u5e38\u7684 \u5f88\u591a\u53cd\u5c04\u90fd\u662f\u6839\u636ebean\u7684set get\u65b9\u6cd5\u6765\u7684 \u800c\u4e0d\u662f\u6839\u636efield\n. public String setNewMessage(String newMessage) { mNewMessage = newMessage; }\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u51fd\u6570\u7c7b\u578b\u662fString\uff1f\n. public static class A {\n        @JSONField(name = \"new_message\")\n        private String mNewMessage;\n        @JSONField(name = \"new_message\")\n        public String getNewMessage() {\n            return mNewMessage;\n        }\n        @JSONField(name = \"new_message\")\n        public void setNewMessage(String newMessage) {\n            mNewMessage = newMessage;\n        }\n```\n    @Override\n    public String toString() {\n        return \"A [mNewMessage=\" + mNewMessage + \"]\";\n    }\n}\n```\n\u4f60\u8fd9\u4e2a\u5c5e\u6027\u540d\u79f0\u548c set get\u4e0d\u4e00\u6837\u65f6\u5019\u9700\u8981\u5728get\u548cset\u65b9\u6cd5\u4e0a\u9762\u52a0@JSONField(name = \"new_message\") \u5373\u53ef\n. \u628a\u9519\u8bef\u4ee3\u7801\u8d34\u51fa\u6765\n. \u5199\u5b8c\u6574\u4e00\u70b9\u5427 \u5185\u90e8\u7c7bscope\u662f\u4ec0\u4e48\uff1f  \u8d34\u5b8c\u6574\u4e00\u70b9\u597d\u5206\u6790 \n. package test;\nimport com.alibaba.fastjson.JSONObject;\npublic class FastJsonTest {\n```\npublic static void main(String[] args) {\n    String a = \"{\\\"amount\\\":1,\\\"channel_id\\\":\\\"wnys01\\\",\\\"gem\\\":1,\\\"id\\\":\\\"pay\\\",\\\"login_name\\\":\\\"U10722466A\\\",\\\"money\\\":1000,\\\"order_id\\\":\\\"99142AO10000086695A\\\",\\\"pay_channel\\\":\\\"weilan\\\",\\\"pay_time\\\":\\\"2015-11-05 20:59:04\\\",\\\"reward\\\":\\\"11:5_12:5_13:5,4:1_5:1_6:1\\\",\\\"status\\\":1,\\\"user_id\\\":19313}\";\n    A sd = JSONObject.parseObject(a, A.class);\n    System.out.println(sd);\n}\npublic static class A{\n    private String amount;\n    private String channel_id;\n    private String gem;\n    private String id;\n    private String login_name;\n    private String money;\n    private String order_id;\n    private String pay_channel;\n    private String pay_time;\n    private String reward;\n    private String status;\n    private String user_id;\n    public String getAmount() {\n        return amount;\n    }\n    public void setAmount(String amount) {\n        this.amount = amount;\n    }\n    public String getChannel_id() {\n        return channel_id;\n    }\n    public void setChannel_id(String channel_id) {\n        this.channel_id = channel_id;\n    }\n    public String getGem() {\n        return gem;\n    }\n    public void setGem(String gem) {\n        this.gem = gem;\n    }\n    public String getId() {\n        return id;\n    }\n    public void setId(String id) {\n        this.id = id;\n    }\n    public String getLogin_name() {\n        return login_name;\n    }\n    public void setLogin_name(String login_name) {\n        this.login_name = login_name;\n    }\n    public String getMoney() {\n        return money;\n    }\n    public void setMoney(String money) {\n        this.money = money;\n    }\n    public String getOrder_id() {\n        return order_id;\n    }\n    public void setOrder_id(String order_id) {\n        this.order_id = order_id;\n    }\n    public String getPay_channel() {\n        return pay_channel;\n    }\n    public void setPay_channel(String pay_channel) {\n        this.pay_channel = pay_channel;\n    }\n    public String getPay_time() {\n        return pay_time;\n    }\n    public void setPay_time(String pay_time) {\n        this.pay_time = pay_time;\n    }\n    public String getReward() {\n        return reward;\n    }\n    public void setReward(String reward) {\n        this.reward = reward;\n    }\n    public String getStatus() {\n        return status;\n    }\n    public void setStatus(String status) {\n        this.status = status;\n    }\n    public String getUser_id() {\n        return user_id;\n    }\n    public void setUser_id(String user_id) {\n        this.user_id = user_id;\n    }\n    @Override\n    public String toString() {\n        return \"A [amount=\" + amount + \", channel_id=\" + channel_id\n                + \", gem=\" + gem + \", id=\" + id + \", login_name=\"\n                + login_name + \", money=\" + money + \", order_id=\"\n                + order_id + \", pay_channel=\" + pay_channel + \", pay_time=\"\n                + pay_time + \", reward=\" + reward + \", status=\" + status\n                + \", user_id=\" + user_id + \"]\";\n    }\n}\n```\n}\n\u6211\u4f7f\u7528fastjson\u7248\u672c1.1.39 \u6ca1\u95ee\u9898\u7684\n. \ncom.alibaba\nfastjson\n1.1.39\n\n. \u4f60\u662f\u5e8f\u5217\u5316\u5931\u8d25\u8fd8\u662f\u53cd\u5e8f\u5217\u5316\u5931\u8d25\uff1f\n. String ddd = \"{\\\"Mg2+\\\":[{\\\"age\\\":12,\\\"name\\\":\\\"zhaiyuyong\\\",\\\"phone\\\":\\\"15221553374\\\"}]}\";\n        B bb = JSONObject.parseObject(ddd, B.class);\n        System.out.println(bb.getA().size());\n        System.out.println(bb.getA());\n{\"Mg2+\":[{\"age\":12,\"name\":\"zhaiyuyong\",\"phone\":\"15221553374\"}]}\n1\n[A [name=zhaiyuyong, age=12, phone=15221553374]]\n. \u90a3\u4e2aversion\uff1f\n. ",
    "yaojuncn": "\"The names within an object SHOULD be unique.\", rfc7159\u8bf4json\u672c\u8eab\u5e94\u8be5\u662fname unique\u7684\uff0c \u4e0d\u662funique\u7684\u60c5\u51b5\u7684\u786e\u884c\u4e3a\u672a\u5b9a\u4e49\u3002 \n\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2ajson\u89e3\u6790\u7684\u5e93\u6765\u8bf4\uff0c\u5982\u679c\u80fd\u591f\u652f\u6301\u8fd9\u4e2a\u7279\u6027\uff0c \u90a3\u81ea\u7136\u662f\u4e00\u4e2a\u2018good to have'\u7684feature\n. ",
    "lwj0216": "\u8c22\u8c22\uff0c\u68c0\u67e5\u4e86\u4e00\u4e0b\uff0cuserName\u8fd9\u4e2a\u5c5e\u6027\u662fnull\uff0c\u6240\u4ee5\u5bfc\u81f4\u4e86\u4e0a\u8ff0\u95ee\u9898\uff1b\u6709\u4e00\u4e2a\u95ee\u9898\u8fd8\u8981\u8bf7\u6559\u4e00\u4e0b\uff0c\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u662f\u5426\u662f\u6309\u7167\u7c7b\u7684\u5b57\u6bb5\u540d\u6765\u751f\u6210json\u5b57\u7b26\u4e32\u7684\u5462\uff1f\n\u6211\u7684\u6d4b\u8bd5\u7c7b\u5982\u4e0b\uff1a\npublic class User implements Serializable {\n    private int id;\n    private String userName;\n    private String password;\n    private int degree;\n    public User() {\n}\npublic User(int id, String userName, String password, int degree) {\n    super();\n    this.id = id;\n    this.userName = userName;\n    this.password = password;\n    this.degree = degree;\n}\n}\n\u6709getters\u548csetters\uff0c\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a\nimport com.alibaba.fastjson.JSON;\npublic static void main(String[] args) {\n        User user = new User(1, \"user\", \"password\", 1);\n        System.out.println(JSON.toJSONString(user));\n}\n\u6253\u5370\u7ed3\u679c\u4e3a\uff1a{\"degree\":1,\"id\":1,\"name\":\"user\",\"password\":\"password\"}\n\u5b57\u6bb5\u540d\u662fuserName\uff0c\u800ctoJSONString\u4e4b\u540e\uff0c\u8fd4\u56de\u7684json\u5b57\u7b26\u4e32\u4e2d\u5bf9\u5e94\u7684\u5c5e\u6027\u540d\u79f0\u53d8\u6210\u4e86name\n. \u6211\u628aIDE\u91cc\u9762\u7684\u7c7b\u6587\u4ef6\u5220\u9664\u4e86\u4ee5\u540e\uff0c\u518d\u62f7\u8d1d\u4e00\u6a21\u4e00\u6837\u7684\u8fdb\u53bb\uff0c\u91cd\u65b0\u8fd0\u884c\uff0c\u7ed3\u679c\u6b63\u5e38\u4e86=.=\uff0c\u4e5f\u8bb8\u662f\u54ea\u4e2a\u7ec6\u5fae\u7684\u5730\u65b9\u6211\u6ca1\u6ce8\u610f\u5230\u3002\u8fd8\u662f\u8981\u8c22\u8c22\u4f60\u3002\n. ",
    "ricardo0624": "\u8c22\u8c22\u4f60\u4eec\u4e86,fastJson\u770b\u8bc4\u6d4b\u6bd4jackson\u8fd8\u5feb,\u975e\u5e38\u4e0d\u9519.\u5e0c\u671b\u4f60\u4eec\u80fd\u575a\u6301\u505a\u4e0b\u53bb,\u5c3d\u7ba1\u53ef\u80fd\u4f60\u4eec\u8fd8\u6709\u597d\u591a\u5176\u5b83\u4e8b,\n[/\u9f13\u638c][/\u9f13\u638c][/\u9f13\u638c]\n. I think may be the correct generic is Map<String,String[]> or Map<String,char[][]>,the generic Map<String,char[]> is confused.\n. ",
    "zJiaJun": "\u548cissues https://github.com/alibaba/fastjson/issues/391\n\u91cd\u590d\uff0cclose\u5427\n. ",
    "wzhonggo": "\u8c22\u8c22\uff0c \u4e0a\u9762\u7684\u6d4b\u8bd5\u6211\u6d4b\u8bd5\u5df2\u7ecf\u53ef\u4ee5\u4e86\u3002\n. ",
    "sleepingAnt": "\u6539\u6210\u8fd9\u6837\u89e3\u51b3\u4e86\uff1a\ngralde\n-dontwarn com.alibaba.fastjson.**              \n-keep class com.alibaba.fastjson.** { *; }     \n-keepattributes Signature\n. ",
    "istart-studio": "\u6ca1\u6709\u95ee\u9898\uff0c\u5b66\u4e60\u4ee3\u7801\u770b\u5230\u8fd9\u91cc\u3002\n. ",
    "ginkosen": "\u55ef\u55ef\uff0c\u5199filter\u6765\u5ffd\u7565\u6ce8\u89e3\u5b57\u6bb5\u7684\u786e\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u662f\u8fd9\u6837\u5904\u7406\u8d77\u6765\uff0c\u770b\u8d77\u6765\u4e0d\u53cb\u597d\uff0c\u4e00\u4e9b\u4f7f\u7528\u4e86\u6ce8\u89e3\u90fd\u9700\u8981\u6765\u505a\u3002\n. \u55ef\u55ef\uff0c\u5199filter\u6765\u5ffd\u7565\u6ce8\u89e3\u5b57\u6bb5\u7684\u786e\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u662f\u8fd9\u6837\u5904\u7406\u8d77\u6765\uff0c\u770b\u8d77\u6765\u4e0d\u53cb\u597d\uff0c\u4e00\u4e9b\u4f7f\u7528\u4e86\u6ce8\u89e3\u90fd\u9700\u8981\u6765\u505a\u3002\n. \u5176\u5b9e\u8fd9\u79cd\u5199filter\u7684\u65b9\u5f0f\uff0c\u548c\u5728\u53d1\u9001\u6570\u636e\u5c42\u5199\u4e00\u6bb5vo\u8f6c\u6362\uff0c\u53ea\u53d1\u9001\u5fc5\u8981\u5b57\u6bb5\u4e00\u6837\u4e86\u3002\u6240\u4ee5\u611f\u89c9\u8fd8\u662f\u4e0d\u662f\u5f88\u597d\u3002\n. \u5176\u5b9e\u8fd9\u79cd\u5199filter\u7684\u65b9\u5f0f\uff0c\u548c\u5728\u53d1\u9001\u6570\u636e\u5c42\u5199\u4e00\u6bb5vo\u8f6c\u6362\uff0c\u53ea\u53d1\u9001\u5fc5\u8981\u5b57\u6bb5\u4e00\u6837\u4e86\u3002\u6240\u4ee5\u611f\u89c9\u8fd8\u662f\u4e0d\u662f\u5f88\u597d\u3002\n. \u6069\u3002\u7528\u7684\u662fmaven\u5bfc\u5305\uff0c\u800c\u4e14\u5bb3\u6015\u4fee\u6539\u4e4b\u540e\u5f71\u54cd\u529f\u80fd\u6216\u8005\u6027\u80fd\u3002\n\u8003\u8651\u51c6\u5907\u81ea\u5b9a\u4e49\u4e00\u5957\u6ce8\u89e3\uff0c\u4f20\u9012\u7ed9Filter\uff0c\u8ba9filter\u628a\u7ed9\u5b9a\u7684\u6570\u636e\u8df3\u8fc7\u3002\n. \u6069\u3002\u7528\u7684\u662fmaven\u5bfc\u5305\uff0c\u800c\u4e14\u5bb3\u6015\u4fee\u6539\u4e4b\u540e\u5f71\u54cd\u529f\u80fd\u6216\u8005\u6027\u80fd\u3002\n\u8003\u8651\u51c6\u5907\u81ea\u5b9a\u4e49\u4e00\u5957\u6ce8\u89e3\uff0c\u4f20\u9012\u7ed9Filter\uff0c\u8ba9filter\u628a\u7ed9\u5b9a\u7684\u6570\u636e\u8df3\u8fc7\u3002\n. \u6682\u65f6\u6743\u8861\u4e4b\u7b56\uff0c\u89c9\u5f97\u5b98\u65b9\u5982\u679c\u505a\u4e86\u5728JSON.parseObject(\"...\", VO.class, Feature.DisableCircularReferenceDetect)\u8c03\u7528\u65f6\uff0c\u8df3\u8fc7@JSONField(serialize = false)\u6ce8\u89e3\uff0c\u662f\u6700\u5b8c\u7f8e\u7684\u89e3\u51b3\u3002\u3002\u54c8\u54c8\u54c8\u3002\n. \u6682\u65f6\u6743\u8861\u4e4b\u7b56\uff0c\u89c9\u5f97\u5b98\u65b9\u5982\u679c\u505a\u4e86\u5728JSON.parseObject(\"...\", VO.class, Feature.DisableCircularReferenceDetect)\u8c03\u7528\u65f6\uff0c\u8df3\u8fc7@JSONField(serialize = false)\u6ce8\u89e3\uff0c\u662f\u6700\u5b8c\u7f8e\u7684\u89e3\u51b3\u3002\u3002\u54c8\u54c8\u54c8\u3002\n. \u6211\u5173\u95ed\u8fd9\u4e2aissues\u4e86\u54c8\u3002\u3002 \n. \u6211\u5173\u95ed\u8fd9\u4e2aissues\u4e86\u54c8\u3002\u3002 \n. \u521a\u767b\u9646\u770b\u5230\u3002\u62b1\u6b49\u3002\n\u6211\u60f3\u8bf4\u660e\u4e0b\u6211\u7684\u95ee\u9898\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u8fde\u63a5\uff1aFastJsonTest\n\u4e3a\u4e86\u65b9\u4fbf\u622a\u56fe\uff0c\u628a\u5c5e\u6027\u8bbe\u7f6e\u4e3apublic\u3002\nJDK:1.8.0_60FastJson:1.2.6\n\n\u4ee3\u7801\u622a\u56fe\uff1a\n\n\u5bf9\u4e8e\u53c2\u6570Feature.DisableCircularReferenceDetect\u8868\u793a\u4e0d\u89e3\u3002\n. \u521a\u767b\u9646\u770b\u5230\u3002\u62b1\u6b49\u3002\n\u6211\u60f3\u8bf4\u660e\u4e0b\u6211\u7684\u95ee\u9898\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u8fde\u63a5\uff1aFastJsonTest\n\u4e3a\u4e86\u65b9\u4fbf\u622a\u56fe\uff0c\u628a\u5c5e\u6027\u8bbe\u7f6e\u4e3apublic\u3002\nJDK:1.8.0_60FastJson:1.2.6\n\n\u4ee3\u7801\u622a\u56fe\uff1a\n\n\u5bf9\u4e8e\u53c2\u6570Feature.DisableCircularReferenceDetect\u8868\u793a\u4e0d\u89e3\u3002\n. \u5efa\u8bae\u4f60\u770b\u4e0b\uff0chttps://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96 \u8fd9\u4e2a\u3002\n. \u8fd9\u662f\u4f60\u7684\u7528\u6cd5\u4e0d\u5bf9\u3002fastjson\u4e2d$\u8868\u793a\u5bf9\u8c61\u5f15\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5b58\u50a8\u6216\u8005\u4f20\u9012\u7684\u6570\u636e\u91cf\uff0c\u4f46\u5728js\u5c42\uff0c\u6ca1\u6709\u5bf9fastjson\u8fdb\u884c$\u7279\u6b8a\u5e94\u5bf9\u5904\u7406\uff08\u5982\u679c\u4f7f\u7528fastjson\u63d0\u4f9b\u7684\u7c7b\uff0c\u662f\u53ef\u4ee5\u7ffb\u8f6c\u7684\uff09\uff0c\u5982\u679c\u53d1\u9001\u7ed9\u524d\u7aef\u7684\u4f7f\u7528JSON.toJSONString(object, SerializerFeature.DisableCircularReferenceDetect)\u6765\u7981\u7528list\u5185\u90e8\u7684\u5bf9\u8c61\u5f15\u7528\u3002\n. \u8fd9\u662f\u4f60\u7684\u7528\u6cd5\u4e0d\u5bf9\u3002fastjson\u4e2d$\u8868\u793a\u5bf9\u8c61\u5f15\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5b58\u50a8\u6216\u8005\u4f20\u9012\u7684\u6570\u636e\u91cf\uff0c\u4f46\u5728js\u5c42\uff0c\u6ca1\u6709\u5bf9fastjson\u8fdb\u884c$\u7279\u6b8a\u5e94\u5bf9\u5904\u7406\uff08\u5982\u679c\u4f7f\u7528fastjson\u63d0\u4f9b\u7684\u7c7b\uff0c\u662f\u53ef\u4ee5\u7ffb\u8f6c\u7684\uff09\uff0c\u5982\u679c\u53d1\u9001\u7ed9\u524d\u7aef\u7684\u4f7f\u7528JSON.toJSONString(object, SerializerFeature.DisableCircularReferenceDetect)\u6765\u7981\u7528list\u5185\u90e8\u7684\u5bf9\u8c61\u5f15\u7528\u3002\n. ",
    "zhaolong": "Testcase\u63d0\u4ea4\u5728https://github.com/alibaba/fastjson/pull/411\n. Testcase\u63d0\u4ea4\u5728https://github.com/alibaba/fastjson/pull/411\n. \u89e6\u53d1bug\u7684value\u662f\u5012\u6570\u7b2c\u4e09\u4e2alongid19\u3002\n. \u89e6\u53d1bug\u7684value\u662f\u5012\u6570\u7b2c\u4e09\u4e2alongid19\u3002\n. ",
    "msdx": "Soga, thanks.\n. Soga, thanks.\n. \u5728JavaBeanDeserializer\u7c7b\u7684deserialze\u65b9\u6cd5\u4e2d\uff0c\u5176\u4e2d\u4ee5\u4e0b\u4ee3\u7801\uff1a\n``` java\n                FieldInfo[] fieldInfoList = beanInfo.fields;\n                int size = fieldInfoList.length;\n                Object[] params = new Object[size];\n                for (int i = 0; i < size; ++i) {\n                    FieldInfo fieldInfo = fieldInfoList[i];\n                    params[i] = fieldValues.get(fieldInfo.name);\n                }\n            if (beanInfo.creatorConstructor != null) {\n                try {\n                    object = beanInfo.creatorConstructor.newInstance(params);\n                } catch (Exception e) {\n                    throw new JSONException(\"create instance error, \"\n                                            + beanInfo.creatorConstructor.toGenericString(), e);\n                }\n            } else if (beanInfo.factoryMethod != null) {\n                try {\n                    object = beanInfo.factoryMethod.invoke(null, params);\n                } catch (Exception e) {\n                    throw new JSONException(\"create factory method error, \" + beanInfo.factoryMethod.toString(), e);\n                }\n            }\n\n```\n\u8fd9\u91cc\u7684params\u7528\u4e8e\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u4f20\u5165\uff0c\u5b83\u7684\u503c\u662f\u6839\u636e\u524d\u9762\u7684fieldValues\u6765\u83b7\u53d6\u7684\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u5b58\u5728\u5bf9\u5e94\u5b57\u6bb5\u7684\u8bdd\uff0c\u5b83\u7684\u503c\u5c31\u4e3anull\uff0c\u800c\u5982\u679c\u7f3a\u5c11\u5bf9\u5e94\u5b57\u6bb5\u7684\u53c2\u6570\u4e3a\u57fa\u672c\u7c7b\u578b\uff0c\u4e0d\u80fd\u4e3anull\uff0c\u5c31\u5bfc\u81f4\u540e\u9762\u7684newInstance\u5931\u8d25\u3002\u5728\u8fd9\u91cc\u6211\u8ba4\u4e3a\u4ecefieldValues\u4e2d\u83b7\u53d6\u503c\u65f6\uff0c\u5982\u679c\u83b7\u53d6\u4e0d\u5230\uff0c\u5e94\u8be5\u5224\u65ad\u662f\u5426\u4e3a\u57fa\u672c\u7c7b\u578b\uff0c\u4e3a\u57fa\u672c\u7c7b\u578b\u7684\u8bdd\u5e94\u8be5\u8d4b\u503c\u4e3a0\u6216false\u7b49\u57fa\u672c\u7c7b\u578b\u7684\u503c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8d4b\u4e3anull\u3002\n. I need this fix to be included in android version.. \u5df2\u7528Android\u81ea\u5e26\u7684gson\u5b8c\u6210\u3002. @kimmking \u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u91cc\u7684\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e0d\u884c\u5417\uff1f. \u53c2\u6570\u5bf9\u5e94\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u3002. \u5df2\u6539\u7528Moshi. ",
    "Viyond": "\u725b\u903c\u7684\n. \u725b\u903c\u7684\n. \u725b\u903c\u7684\n. Caused by: java.lang.IllegalAccessException: Class com.alibaba.fastjson.parser.DefaultJSONParser can not access a member of class java.util.Collections$EmptyMap with modifiers \"private\"\nat sun.reflect.Reflection.ensureMemberAccess(Reflection.java:110)\nat java.lang.Class.newInstance(Class.java:377)\n\u63d0\u793a\u8bbf\u95ee\u4e86private\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u6211\u6d4b\u8bd5\u8fc7Collections.EMPTY_LIST\u548cCollections.EMPTY_SET\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u6211\u770bfastjson\u5b98\u65b9\u7684\u6d4b\u8bd5\u7528\u4f8b\u91cc\u9762\u8c8c\u4f3c\u6d4b\u8bd5\u8fc7Collections.EMPTY_MAP\uff0c\u4e14\u662f\u901a\u8fc7\u7684\uff0c\u6240\u4ee5\u6bd4\u8f83\u597d\u5947\uff0c\u9ebb\u70e6\u77e5\u9053\u7684\u540c\u5b66\u5e2e\u5fd9\u89e3\u7b54\u4e0b\u3002\u8c22\u8c22\u3002\n. \u4e0d\u597d\u610f\u601d\uff0cclose\u4e86\n. @wenshao  \u80fd\u5e2e\u770b\u770b\u4e48\uff0c\u6bd4\u8f83\u7740\u6025\uff0c\u8c22\u8c22\uff01\n. netty\u7684\u7248\u672c\u662f4.0.28.Final\n. \u4f60\u6307\u7684\u5185\u90e8\u4ee3\u7801\u5b9e\u73b0\u662f\u4ec0\u4e48\u5462\uff1f\u6211\u89c9\u5f97\u53ea\u9700\u8981\u4f60\u7684maven\u5de5\u7a0b\u4f9d\u8d56\u4e00\u4e0b\u7248\u672c\u4e3a4.0.28.Final\u7684netty\uff0c\u7136\u540e\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u8d34\u5230\u4f60\u7684IDE\uff0c\u5b8c\u5168\u53ef\u4ee5\u590d\u73b0\u4e86\u5427\u3002\u8bf7\u95ee\u4f60\u8bd5\u8fc7\u4e86\u5417\uff1f\n. import java.io.DataInput;\nimport java.io.DataOutput;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.nio.ByteBuffer;\n/\n- ByteBuffer\uff0c\u7528\u4e8e\u539f\u59cb\u6570\u636e\u7684\u4fdd\u5b58\uff0c\u907f\u514d\u5185\u5b58\u62f7\u8d1d\n  \n- @author mozhu\n  \n  */\n  public interface Buffer extends DataInput, DataOutput {\n/\n  - Returns this buffer's position. \n\n  - @return The position of this buffer\n    /\n    int readableBytes();\n/\n  - pos\n    \n  - @return\n    /\n    int readerIndex();\n/\n  - Sets the readerIndex of this buffer.\n    \n  - @param readerIndex\n  - @return this\n    /\n    Buffer readerIndex(int readerIndex);\n/\n  - Returns the {@code writerIndex} of this buffer.\n    \n  - @return\n    /\n    int writerIndex();\nBuffer writerIndex(int writerIndex);\n/\n  - read data to dst buffer.\n    \n  - @param dst\n  - @throws IllegalArgumentException\n  -             if buffer type not matched.\n    /\n    void read(Buffer dst);\n/\n  - write data of Buffer.\n    \n  - @param src\n  - @throws IllegalArgumentException\n  -             if buffer type not matched.\n    /\n    void write(Buffer src);\n/\n  - Returns a slice of this buffer's readable bytes\n    \n  - @return the sliced buffer\n    /\n    Buffer slice();\n/\n  - Returns a slice of this buffer's sub-region.\n    \n  - @param index\n  - @param length\n  - @return\n    /\n    Buffer slice(int index, int length);\n/*\n  - @return this buffer\n    /\n    Buffer clear();\n/\n  - inputStream\n    \n  - @return\n    /\n    InputStream inputStream();\n/\n  - outputStream\n    \n  - @return\n    /\n    OutputStream outputStream();\n/\n  - allocate memory buffer.\n    \n  - @return\n    /\n    BufferAllocator alloc();\n/\n  - to {@link ByteBuffer}. Note:Operations on ByteBuffer may not modify the\n  - index of this instance.Be careful while using this method.\n    \n  - @return a ByteBuffer associated with this.\n    /\n    ByteBuffer toByteBuffer();\nvoid setBoolean(int index, boolean value);\nvoid setByte(int index, int value);\nvoid setChar(int index, int value);\nvoid setShort(int index, int value);\nvoid setInt(int index, int value);\nvoid setFloat(int index, float value);\nvoid setLong(int index, long value);\nvoid setDouble(int index, double value);\nvoid setBytes(int index, byte[] src);\nvoid setBytes(int index, Buffer src);\nvoid setBytes(int index, ByteBuffer src);\n  }\nimport com.mogujie.tesla.network.Buffer;\nimport com.mogujie.tesla.network.BufferAllocator;\nimport io.netty.buffer.ByteBuf;\nimport io.netty.buffer.ByteBufInputStream;\nimport io.netty.buffer.ByteBufOutputStream;\nimport java.io.*;\nimport java.nio.ByteBuffer;\npublic final class NettyByteBuffer implements Buffer {\n```\nprivate final ByteBuf buffer;\npublic NettyByteBuffer(ByteBuf buffer) {\n    this.buffer = buffer;\n}\n@Override\npublic int readableBytes() {\n    return this.buffer.readableBytes();\n}\n@Override\npublic void read(Buffer dst) {\n    if (dst instanceof NettyByteBuffer) {\n        this.buffer.readBytes(((NettyByteBuffer) dst).unwrap());\n    } else {\n        throw new IllegalArgumentException(\"dst buffer \" + dst.getClass() + \" not matched.\");\n    }\n}\n@Override\npublic boolean readBoolean() throws IOException {\n    return this.buffer.readBoolean();\n}\n@Override\npublic byte readByte() {\n    return this.buffer.readByte();\n}\n@Override\npublic char readChar() throws IOException {\n    return this.buffer.readChar();\n}\n@Override\npublic double readDouble() throws IOException {\n    return this.buffer.readDouble();\n}\n@Override\npublic float readFloat() throws IOException {\n    return this.buffer.readFloat();\n}\n@Override\npublic void readFully(byte[] b) throws IOException {\n    this.buffer.readBytes(b);\n}\n@Override\npublic void readFully(byte[] b, int off, int len) throws IOException {\n    this.buffer.readBytes(b, off, len);\n}\n@Override\npublic int readInt() throws IOException {\n    return this.buffer.readInt();\n}\n@Override\npublic String readLine() throws IOException {\n    StringBuilder lineBuf = new StringBuilder();\nloop: while (true) {\n    if (!buffer.isReadable()) {\n        return lineBuf.length() > 0 ? lineBuf.toString() : null;\n    }\n\n    int c = buffer.readUnsignedByte();\n    switch (c) {\n        case '\\n':\n            break loop;\n\n        case '\\r':\n            if (buffer.isReadable() && buffer.getUnsignedByte(buffer.readerIndex()) == '\\n') {\n                buffer.skipBytes(1);\n            }\n            break loop;\n\n        default:\n            lineBuf.append((char) c);\n    }\n}\n\nreturn lineBuf.toString();\n\n}\n@Override\npublic long readLong() throws IOException {\n    return this.buffer.readLong();\n}\n@Override\npublic short readShort() throws IOException {\n    return this.buffer.readShort();\n}\n@Override\npublic int readUnsignedByte() throws IOException {\n    return this.buffer.readUnsignedByte();\n}\n@Override\npublic int readUnsignedShort() throws IOException {\n    return this.buffer.readUnsignedShort();\n}\n@Override\npublic String readUTF() throws IOException {\n    return DataInputStream.readUTF(this);\n}\n@Override\npublic int skipBytes(int n) throws IOException {\n    this.buffer.skipBytes(n);\n    return n;\n}\npublic ByteBuf unwrap() {\n    return this.buffer;\n}\n@Override\npublic void write(byte[] b) throws IOException {\n    this.buffer.writeBytes(b);\n}\n@Override\npublic void write(byte[] b, int off, int len) throws IOException {\n    this.buffer.writeBytes(b, off, len);\n}\n@Override\npublic void write(Buffer src) {\n    if (src instanceof NettyByteBuffer) {\n        this.buffer.writeBytes(((NettyByteBuffer) src).unwrap());\n    } else {\n        throw new IllegalArgumentException(\"src buffer \" + src.getClass() + \" type not matched.\");\n    }\n}\n@Override\npublic void write(int b) throws IOException {\n    this.buffer.writeByte(b);\n}\n@Override\npublic void writeBoolean(boolean v) throws IOException {\n    this.buffer.writeBoolean(v);\n}\n@Override\npublic void writeByte(int v) throws IOException {\n    this.buffer.writeByte(v);\n}\n@Override\npublic void writeBytes(String s) throws IOException {\n    int len = s.length();\n    for (int i = 0; i < len; i++) {\n        write((byte) s.charAt(i));\n    }\n}\n@Override\npublic void writeChar(int v) throws IOException {\n    this.buffer.writeChar(v);\n}\n@Override\npublic void writeChars(String s) throws IOException {\n    int len = s.length();\n    for (int i = 0; i < len; i++) {\n        writeChar(s.charAt(i));\n    }\n}\n@Override\npublic void writeDouble(double v) throws IOException {\n    this.buffer.writeDouble(v);\n}\n@Override\npublic void writeFloat(float v) throws IOException {\n    this.buffer.writeFloat(v);\n}\n@Override\npublic void writeInt(int v) throws IOException {\n    this.buffer.writeInt(v);\n}\n@Override\npublic void writeLong(long v) throws IOException {\n    this.buffer.writeLong(v);\n}\n@Override\npublic void writeShort(int v) throws IOException {\n    this.buffer.writeShort(v);\n}\n@Override\npublic void writeUTF(String s) throws IOException {\n    writeUTF(s, this);\n}\n/\n * Copy from JDK. Writes a string to the specified DataOutput using modified UTF-8 encoding in a\n * machine-independent manner.\n * \n * First, two bytes are written to out as if by the writeShort\n * method giving the number of bytes to follow. This value is the number of\n * bytes actually written out, not the length of the string. Following the\n * length, each character of the string is output, in sequence, using the\n * modified UTF-8 encoding for the character. If no exception is thrown, the\n * counter written is incremented by the total number of bytes\n * written to the output stream. This will be at least two plus the length\n * of str, and at most two plus thrice the length of\n * str.\n \n * @param str\n *            a string to be written.\n * @param out\n *            destination to write to\n * @return The number of bytes written out.\n * @exception IOException\n *                if an I/O error occurs.\n * @see DataOutputStream#writeUTF(String,DataOutput)\n /\nstatic int writeUTF(String str, DataOutput out) throws IOException {\n    if (out instanceof DataOutputStream) {\n        out.writeUTF(str);\n        return 0;\n    }\nint strlen = str.length();\nint utflen = 0;\nint c, count = 0;\n\n/* use charAt instead of copying String to char array */\nfor (int i = 0; i < strlen; i++) {\n    c = str.charAt(i);\n    if (c >= 0x0001 && c <= 0x007F) {\n        utflen++;\n    } else if (c > 0x07FF) {\n        utflen += 3;\n    } else {\n        utflen += 2;\n    }\n}\n\nif (utflen > 65535) {\n    throw new UTFDataFormatException(\"encoded string too long: \" + utflen + \" bytes\");\n}\n\nbyte[] bytearr = null;\n\nbytearr = new byte[utflen + 2];\n\nbytearr[count++] = (byte) (utflen >>> 8 & 0xFF);\nbytearr[count++] = (byte) (utflen >>> 0 & 0xFF);\n\nint i = 0;\nfor (i = 0; i < strlen; i++) {\n    c = str.charAt(i);\n    if (!(c >= 0x0001 && c <= 0x007F)) {\n        break;\n    }\n    bytearr[count++] = (byte) c;\n}\n\nfor (; i < strlen; i++) {\n    c = str.charAt(i);\n    if (c >= 0x0001 && c <= 0x007F) {\n        bytearr[count++] = (byte) c;\n\n    } else if (c > 0x07FF) {\n        bytearr[count++] = (byte) (0xE0 | c >> 12 & 0x0F);\n        bytearr[count++] = (byte) (0x80 | c >> 6 & 0x3F);\n        bytearr[count++] = (byte) (0x80 | c >> 0 & 0x3F);\n    } else {\n        bytearr[count++] = (byte) (0xC0 | c >> 6 & 0x1F);\n        bytearr[count++] = (byte) (0x80 | c >> 0 & 0x3F);\n    }\n}\nout.write(bytearr, 0, utflen + 2);\nreturn utflen + 2;\n\n}\n@Override\npublic InputStream inputStream() {\n    return new ByteBufInputStream(this.buffer);\n}\n@Override\npublic OutputStream outputStream() {\n    return new ByteBufOutputStream(buffer);\n}\n@Override\npublic BufferAllocator alloc() {\n    return new NettyByteBufferAllocator(this.buffer.alloc());\n}\n@Override\npublic ByteBuffer toByteBuffer() {\n    return this.buffer.nioBuffer();\n}\n@Override\npublic int readerIndex() {\n    return this.buffer.readerIndex();\n}\n@Override\npublic Buffer readerIndex(int readerIndex) {\n    this.buffer.readerIndex(readerIndex);\n    return this;\n}\n@Override\npublic int writerIndex() {\n    return this.buffer.writerIndex();\n}\n@Override\npublic Buffer writerIndex(int writerIndex) {\n    this.buffer.writerIndex(writerIndex);\n    return this;\n}\n@Override\npublic Buffer slice() {\n    return new NettyByteBuffer(this.buffer.slice());\n}\n@Override\npublic Buffer slice(int index, int length) {\n    return new NettyByteBuffer(this.buffer.slice(index, length));\n}\n@Override\npublic Buffer clear() {\n    this.buffer.clear();\n    return this;\n}\n@Override\npublic int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + (buffer == null ? 0 : buffer.hashCode());\n    return result;\n}\n@Override\npublic boolean equals(Object obj) {\n    if (this == obj) {\n        return true;\n    }\n    if (obj == null) {\n        return false;\n    }\n    if (getClass() != obj.getClass()) {\n        return false;\n    }\n    NettyByteBuffer other = (NettyByteBuffer) obj;\n    if (buffer == null) {\n        if (other.buffer != null) {\n            return false;\n        }\n    } else if (!buffer.equals(other.buffer)) {\n        return false;\n    }\n    return true;\n}\n@Override\npublic String toString() {\n    return \"NettyByteBuffer [buffer=\" + buffer + \"]\";\n}\n@Override\npublic void setBoolean(int index, boolean value) {\n    this.buffer.setBoolean(index, value);\n}\n@Override\npublic void setByte(int index, int value) {\n    this.buffer.setByte(index, value);\n}\n@Override\npublic void setChar(int index, int value) {\n    this.buffer.setChar(index, value);\n}\n@Override\npublic void setShort(int index, int value) {\n    this.buffer.setShort(index, value);\n}\n@Override\npublic void setInt(int index, int value) {\n    this.buffer.setInt(index, value);\n}\n@Override\npublic void setFloat(int index, float value) {\n    this.buffer.setFloat(index, value);\n}\n@Override\npublic void setLong(int index, long value) {\n    this.buffer.setLong(index, value);\n}\n@Override\npublic void setDouble(int index, double value) {\n    this.buffer.setDouble(index, value);\n}\n@Override\npublic void setBytes(int index, byte[] src) {\n    this.buffer.setBytes(index, src);\n}\n@Override\npublic void setBytes(int index, Buffer src) {\n    if (src instanceof NettyByteBuffer) {\n        this.buffer.setBytes(index, ((NettyByteBuffer) src).buffer);\n    } else {\n        throw new IllegalArgumentException(\"src buffer \" + src.getClass() + \" not matched.\");\n    }\n}\n@Override\npublic void setBytes(int index, ByteBuffer src) {\n    this.buffer.setBytes(index, src);\n}\n```\n}\n. \u62b1\u6b49\uff0c\u6211\u7684\u9519\uff0c\u6211\u628a\u4e0a\u9762\u7684buffer\u5b9a\u4e49\u8d34\u4e0a\u53bb\u4e86\u3002@locuslin  \u9ebb\u70e6\u518d\u5e2e\u6211\u770b\u770b\n. \u53ea\u9700\u8981\u628a\u90a3\u4e24\u4e2abuffer\u7c7b\u590d\u5236\u8fc7\u53bb\u5c31\u884c\u7684\n. \u5662\uff0c\u4e0d\u597d\u610f\u601d\uff0c\u6211\u4e0a\u9762\u63cf\u8ff0\u6709\u8bef\u3002\u6211\u81ea\u5b9a\u4e49\u4e86fastjson\u7684@type\u5173\u952e\u5b57\uff0c\u4e0a\u9762\u7684case\u57281.2.7\u53ca\u4e4b\u524d\u7684\u7248\u672c\u662f\u53ef\u4ee5\u5b8c\u6210\u53cd\u5e8f\u5217\u5316\u6210\u6211\u5bf9\u5e94\u7684\u7c7b\u578bResult\u7684\uff0c\u57281.2.8\u53ca\u5176\u4ee5\u540e\u7684\u7248\u672c\u4e0d\u884c\u3002\n. @wenshao \u8bf7\u9ebb\u70e6\u518d\u5e2e\u6211\u770b\u770b\uff0c\u975e\u5e38\u611f\u8c22\uff01\n. \u55ef\uff0c\u6211\u770b\u4e86\u8fd9\u4e2a\u7279\u6027\uff1b\u4e0d\u8fc7\u8fd9\u4e2a@type\u5173\u952e\u5b57\u9650\u5236\u6b7b\u4e86\uff0c\u89e3\u51b3\u4e0d\u4e86\u6211\u7684\u95ee\u9898\uff1b\u6211\u8fd9\u8fb9\u662f\u628afastjson\u7528\u5728\u4e00\u4e2aRPC\u8de8\u8bed\u8a00\u5e8f\u5217\u5316\u573a\u666f\uff0cPHP\u90a3\u8fb9\u4f1a\u628a\u5e26\u6709@type\uff08\u5df2\u7ecf\u88ab\u6211\u6539\u4e3a\u4e86\u4e0a\u8ff0\u7684teslaSpace\uff09\u7684json\u6587\u672c\u4f20\u9012\u5230java\uff0c\u7136\u540e\u505a\u53cd\u5e8f\u5217\u5316\uff0c\u800c\u4e14\u73b0\u5728\u8fd9\u4e2a\u4ee3\u7801\u5df2\u7ecf\u5206\u5e03\u5728\u5404\u4e2a\u4e1a\u52a1\u7cfb\u7edf\u91cc\u9762\u4e86\uff0c\u4e0d\u53ef\u80fd\u505a\u5230\u4e00\u6b21\u6027\u5347\u7ea7\u548c\u6539\u52a8\uff0c\u53ea\u80fd\u5728\u8001\u7684\u903b\u8f91\u4e0a\u60f3\u529e\u6cd5\u517c\u5bb9\u3002\n\u8fd8\u9ebb\u70e6@wenshao \u80fd\u5e2e\u60f3\u60f3\u529e\u6cd5\uff0c\u89e3\u51b3\u5728@type\u81ea\u5b9a\u4e49\u540d\u79f0\u7684\u60c5\u51b5\u4e0b\uff0c\u505a\u5230\u81ea\u52a8\u53cd\u5e8f\u5217\u5316\u89e3\u6790\u7c7b\u578b\uff0c\u9ebb\u70e6\u4e86\uff08PS. \u4e00\u76f4\u662ffastjson\u7684\u72c2\u70ed\u7528\u6237\uff09\n. \u597d\u7684\uff0c\u975e\u5e38\u611f\u8c22\uff01\n. \u6211\u8bd5\u4e861.2.12\u7248\u672c\u7684fastjson\uff0c\u8fd9\u4e2a\u95ee\u9898\u5e76\u6ca1\u6709\u89e3\u51b3\u554a\uff01\uff01\uff01\n. \u6211\u770b\u4e86\u4f60\u8fd9\u91cc\u7684\u6d4b\u8bd5case\uff0c\u53ea\u53ea\u8bf4\u660e\u5e8f\u5217\u5316\u65f6\u5019\u628a\u81ea\u5b9a\u4e49type\u5199\u8fdb\u53bb\u4e86\uff0c\u4f46\u662f\u53cd\u5e8f\u5217\u5316\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u5173\u6ce8\u8fd9\u4e2a\u7c7b\u578b\u3002\n\u5730\u5740\u5728https://github.com/alibaba/fastjson/commit/b1faf1318cb4341da3976c88fef076fa0ce5760a\n. \u8bf7\u95ee\u600e\u4e48reopen\u8fd9\u4e2aissue\uff0c\u8fd9\u4e2a\u95ee\u9898\u5e76\u6ca1\u6709\u89e3\u51b3\uff0c\u6211\u6ca1\u6709\u627e\u5230reopen\u5165\u53e3\u3002\n. \u5173\u4e8e\u91cd\u73b0\u7684case\u8bf7\u770b\u94fe\u63a5\uff1ahttps://github.com/alibaba/fastjson/issues/585\n. \u672c\u6765type\u5c31\u663e\u793a\u5b9a\u4e49\u4e86\u7c7b\u578b\u4e3aString\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u201c==\u201d\u6765\u6bd4\u8f83\u5230\u5e95\u662f\u600e\u4e48\u8003\u8651\u7684\uff1f\uff08\u5e76\u6ca1\u6709\u4fdd\u8bc1\u90fd\u662f\u4ece\u5e38\u91cf\u6c60\u4e2d\u83b7\u53d6\uff09\n. @wenshao \u6211\u6362\u6210JSON.setDefaultTypeKey\u540e\uff08\u4e0d\u518d\u76f4\u63a5\u8bbf\u95eestatic DEFAULT_TYPE_KEY\u8d4b\u503c\u65b9\u5f0f\uff09\u5c31\u597d\u4e86\uff0c\u786e\u5b9e\u662f\u8fd9\u4e2a\u517c\u5bb9\u95ee\u9898\uff0c\u611f\u8c22\u6e29\u5c11\uff0c\u89e3\u51b3\u4e86\u6211\u7684\u95ee\u9898\u3002. getter\u8fd4\u56de\u7684\u503c\u5728\u5bf9\u8c61\u5b9e\u4f8b\u5316\u65f6\u5019\u5c31\u5df2\u7ecf\u51b3\u5b9a\u4e86\uff0c\u90e8\u5206\u573a\u666f\u5e76\u4e0d\u9700\u8981setter\uff0c\u4e0d\u53ef\u5426\u8ba4\u90e8\u5206\u573a\u666f\u4e0b\u5c31\u662f\u6709\u8fd9\u79cd\u9700\u6c42\uff0c\u53ef\u662f\u8fd9\u79cd\u5bf9\u8c61\u5728\u7ecf\u8fc7\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\u4e4b\u540e\uff0c\u5185\u90e8\u5c5e\u6027\u7684\u503c\u5df2\u7ecf\u53d8\u4e86\uff08\u548c\u5b9e\u9645\u4e0d\u4e00\u81f4\uff09\u3002\u6211\u7684\u7406\u89e3\u5bf9\u8c61\u5e8f\u5217\u5316\u4e4b\u524d\u548c\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\uff0c\u524d\u540e\u5bf9\u8c61\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u5bf9\u79f0\u7684\uff0c\u5426\u5219\u8fd9\u79cd\u5e8f\u5217\u5316\u673a\u5236\u5c31\u4e0d\u7b26\u5408\u9884\u671f\u7684\u7ed3\u679c\u3002. \u4e5f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4fdd\u6301\u5173\u6ce8\u3002. \u7b80\u5355\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u8c8c\u4f3c1.2.7\u7248\u672c\u7684fastjson\u662f\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u6240\u4ee5\u731c\u6d4b\u662f\u540e\u7eed\u7248\u672c\u7684\u66f4\u65b0\u66b4\u9732\u4e86\u8fd9\u4e2abug\uff0c\u8c22\u8c22\u3002. \u6211\u7684jdk \u662f 1.8\u7684\uff0c\u4e0d\u8fc7\u8c8c\u4f3c\u548cjdk\u6ca1\u6709\u5173\u7cfb\uff1b\u8fd9\u4e2abug \u5728fastjson 1.2.7  \u662f\u6ca1\u6709\u7684\u3002. \u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u6709\u4fee\u590d\u7248\u672c\uff1f. \u4ec0\u4e48\u90fd\u6ca1\u6709\u6539\uff0c\u5347\u7ea7\u52301.2.28\u7248\u672c\uff0c\u6267\u884c\u4e0a\u9762\u7684case\uff0c\u53c8\u5f00\u59cb\u62a5\u4e0b\u9762\u8fd9\u4e2a\u9519\u8bef\uff0c\ncom.alibaba.fastjson.JSONException: autoType is not support.\nat com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:869)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:325)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1335)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:189)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:173). \u589e\u52a0\u4e86\u8fd9\u4e2a\uff0c System.setProperty(\"fastjson.parser.autoTypeSupport\", \"true\");\n\u8fd8\u662f\u62a5\u4e4b\u524d\u7684\u5386\u53f2\u9519\u8bef\uff1a\ncom.alibaba.fastjson.JSONException: syntax error\n    at com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer.deserialze(ThrowableDeserializer.java:36)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:557)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:188). \u8fd9\u4e2a fix\u4e86\u9ebb\u70e6\u8bf4\u4e0b\u7248\u672c\u548c\u65e5\u671f\u54e6\uff0c\u975e\u5e38\u611f\u8c22\u3002. \u4f60\u4eec\u8fd9\u4e2a\u6700\u8fd1API\u4ee5\u53ca\u5185\u90e8\u5b9e\u73b0\u6539\u52a8\u5f88\u5927\u554a\uff0c\u4f4e\u7248\u672c\u76f4\u63a5\u6539\u7248\u672c\u53f7\u5207\u6362\u8fc7\u6765\uff0c\u6709\u4e00\u4e9b\u8fd0\u884c\u65f6\u62a5\u9519\uff0c\u9ebb\u70e6\u505a\u4e00\u4e0b\u7248\u672c\u5e73\u6ed1\u63aa\u65bd\u5457\u3002 1.2.22\u4e4b\u540e\u7684\u7248\u672c\u548c\u4e4b\u524d\u7684\u7248\u672c\u5dee\u5f02\u592a\u5927\uff0c\u8fd9\u4e2a\u8ba9\u8001\u7528\u6237\u5347\u7ea7\u5f88\u4e0d\u653e\u5fc3\u7684\u3002. \u4fdd\u6301\u5173\u6ce8. \u8bf7\u95ee\u4e0b\u8fd9\u4e2aissue\u6709\u4eba\u770b\u5417\uff1f. RT. ",
    "zjuphoenix": "\u5728\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u5927\u69828000\u591a\u5b57\u8282\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\u8fd8\u662f\u4f1a\u629b\u5f02\u5e38\u3002\n``java\nException in thread \"main\" com.alibaba.fastjson.JSONException: illegal stat, textLength is zero\n        at com.alibaba.fastjson.parser.JSONReaderScanner.charAt(JSONReaderScanner.java:113)\n        at com.alibaba.fastjson.parser.JSONReaderScanner.indexOf(JSONReaderScanner.java:133)\n        at com.alibaba.fastjson.parser.JSONLexerBase.scanFieldString(JSONLexerBase.java:1196)\n        at Fastjson_ASM_TestObject_1.deserialze(Unknown Source)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:326)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1236)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1205)\n        at com.alibaba.fastjson.JSONReader.readObject(JSONReader.java:222)\n``\n\u629b\u5f02\u5e38\u7684\u4ee3\u7801\u4e3aJSONReaderScanner\u7c7b\u7684charAt\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a\n``java\n```\n    public final char charAt(int index) {\n    if(index >= this.bufLength) {\n        if(this.bufLength == -1) {\n            if(index < this.sp) {\n                return this.buf[index];\n            }\n        return '\\u001a';\n    }\n\n    int rest = this.bufLength - this.bp;\n    if(rest > 0) {\n        System.arraycopy(this.buf, this.bp, this.buf, 0, rest);\n    }\n\n    try {\n        this.bufLength = this.reader.read(this.buf, rest, this.buf.length - rest);\n    } catch (IOException var4) {\n        throw new JSONException(var4.getMessage(), var4);\n    }\n\n    if(this.bufLength == 0) {\n        throw new JSONException(\"illegal stat, textLength is zero\");\n    }\n\n    if(this.bufLength == -1) {\n        return '\\u001a';\n    }\n\n    this.bufLength += rest;\n    index -= this.bp;\n    this.np -= this.bp;\n    this.bp = 0;\n}\n\nreturn this.buf[index];\n\n}\n```\n``\nthrow new JSONException(\"illegal stat, textLength is zero\");\u8dd1\u51fa\u7684\u5f02\u5e38\u3002\n. \u5728\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u5927\u69828000\u591a\u5b57\u8282\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\u8fd8\u662f\u4f1a\u629b\u5f02\u5e38\u3002\n``java\nException in thread \"main\" com.alibaba.fastjson.JSONException: illegal stat, textLength is zero\n        at com.alibaba.fastjson.parser.JSONReaderScanner.charAt(JSONReaderScanner.java:113)\n        at com.alibaba.fastjson.parser.JSONReaderScanner.indexOf(JSONReaderScanner.java:133)\n        at com.alibaba.fastjson.parser.JSONLexerBase.scanFieldString(JSONLexerBase.java:1196)\n        at Fastjson_ASM_TestObject_1.deserialze(Unknown Source)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:326)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1236)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1205)\n        at com.alibaba.fastjson.JSONReader.readObject(JSONReader.java:222)\n``\n\u629b\u5f02\u5e38\u7684\u4ee3\u7801\u4e3aJSONReaderScanner\u7c7b\u7684charAt\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a\n``java\n```\n    public final char charAt(int index) {\n    if(index >= this.bufLength) {\n        if(this.bufLength == -1) {\n            if(index < this.sp) {\n                return this.buf[index];\n            }\n        return '\\u001a';\n    }\n\n    int rest = this.bufLength - this.bp;\n    if(rest > 0) {\n        System.arraycopy(this.buf, this.bp, this.buf, 0, rest);\n    }\n\n    try {\n        this.bufLength = this.reader.read(this.buf, rest, this.buf.length - rest);\n    } catch (IOException var4) {\n        throw new JSONException(var4.getMessage(), var4);\n    }\n\n    if(this.bufLength == 0) {\n        throw new JSONException(\"illegal stat, textLength is zero\");\n    }\n\n    if(this.bufLength == -1) {\n        return '\\u001a';\n    }\n\n    this.bufLength += rest;\n    index -= this.bp;\n    this.np -= this.bp;\n    this.bp = 0;\n}\n\nreturn this.buf[index];\n\n}\n```\n``\nthrow new JSONException(\"illegal stat, textLength is zero\");\u8dd1\u51fa\u7684\u5f02\u5e38\u3002\n. \u5728\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u5927\u69828000\u591a\u5b57\u8282\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\u8fd8\u662f\u4f1a\u629b\u5f02\u5e38\u3002\n``java\nException in thread \"main\" com.alibaba.fastjson.JSONException: illegal stat, textLength is zero\n        at com.alibaba.fastjson.parser.JSONReaderScanner.charAt(JSONReaderScanner.java:113)\n        at com.alibaba.fastjson.parser.JSONReaderScanner.indexOf(JSONReaderScanner.java:133)\n        at com.alibaba.fastjson.parser.JSONLexerBase.scanFieldString(JSONLexerBase.java:1196)\n        at Fastjson_ASM_TestObject_1.deserialze(Unknown Source)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:326)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1236)\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1205)\n        at com.alibaba.fastjson.JSONReader.readObject(JSONReader.java:222)\n``\n\u629b\u5f02\u5e38\u7684\u4ee3\u7801\u4e3aJSONReaderScanner\u7c7b\u7684charAt\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a\n``java\n```\n    public final char charAt(int index) {\n    if(index >= this.bufLength) {\n        if(this.bufLength == -1) {\n            if(index < this.sp) {\n                return this.buf[index];\n            }\n        return '\\u001a';\n    }\n\n    int rest = this.bufLength - this.bp;\n    if(rest > 0) {\n        System.arraycopy(this.buf, this.bp, this.buf, 0, rest);\n    }\n\n    try {\n        this.bufLength = this.reader.read(this.buf, rest, this.buf.length - rest);\n    } catch (IOException var4) {\n        throw new JSONException(var4.getMessage(), var4);\n    }\n\n    if(this.bufLength == 0) {\n        throw new JSONException(\"illegal stat, textLength is zero\");\n    }\n\n    if(this.bufLength == -1) {\n        return '\\u001a';\n    }\n\n    this.bufLength += rest;\n    index -= this.bp;\n    this.np -= this.bp;\n    this.bp = 0;\n}\n\nreturn this.buf[index];\n\n}\n```\n``\nthrow new JSONException(\"illegal stat, textLength is zero\");\u8dd1\u51fa\u7684\u5f02\u5e38\u3002\n. ",
    "RishonLi": "1.2.7\u7248\u672c\u6709\u6b64\u95ee\u9898\n1.2.24\u7248\u672c\u6b64\u95ee\u9898\u5df2\u7ecf\u88ab\u4fee\u590d. ",
    "holdqv": "\u82f1\u6587\u65f6\u95f4\u683c\u5f0f\u8f6c\u5316\u8fd8\u6709\u95ee\u9898\u5427. \ud83d\udc4d. ",
    "andywj": "compile 'com.alibaba:fastjson:1.2.6'\n. ",
    "zuoyi001": "\u5bfc\u5165.jar\napp\u76ee\u5f55build.gradle\ndependencies {\n    implementation files('libs/fastjson-1.2.7.jar')\n}. ",
    "kervin521": "\u53ef\u662f\u8bb8\u591a\u63a5\u53e3API\u5e38\u5e38\u4f7f\u7528xml\u5f62\u5f0f\uff0c\u662f\u5426\u8003\u8651\u4ee5\u540e\u6269\u5c55\uff1f\n. @wenshao,\u597d\u7684\uff0c\u6ca1\u95ee\u9898\n. \u5728SpringMVC4.3.2\u6ca1\u6709\u95ee\u9898\uff0c\u5728SpringMVC3.2.17\u4e2d\u62a5\u9519\n. \n. ```\npublic FastJsonConfig() {\nthis.charset = IOUtils.UTF8;\n\nthis.serializeConfig = SerializeConfig.getGlobalInstance();\nthis.parserConfig = ParserConfig.getGlobalInstance();\n\nthis.serializerFeatures = new SerializerFeature[0];\nthis.serializeFilters = new SerializeFilter[0];\nthis.features = new Feature[0];\n\n}\n```\nin error line:\nthis.charset = IOUtils.UTF8;\n. @VictorZeng \u6ca1\u6709\uff0c\u9879\u76ee\u53ea\u6709\u4e00\u4e2a\u7248\u672c1.2.15\n. @VictorZeng \u9879\u76ee\u914d\u7f6e\u540e\u542f\u52a8\u65f6\u62a5\u9519\n. \u5f53\u4f7f\u7528post\u8bf7\u6c42\u4e14\u4f7f\u7528@RequestBody\u60c5\u51b5\uff1a\n1.Content-Type:multipart/form-data;\n2.Content-Type:application/x-www-form-urlencoded;\n3.Content-Type:text/plain;\n\u4f7f\u7528multipart/form-data\u6216text/plain\u5219OK\n\u4f7f\u7528application/x-www-form-urlencoded\u5c06\u62a5\u9519\n. \n\n\n\n. 1. FastJsonControllerTest\u589e\u52a0\nprotected JSONObject params = new JSONObject();\n@ModelAttribute\npublic void init(@RequestBody(required=false)String body){\n        if(!StringUtil.isEmptyStr(body)){\n            params = JSON.parseObject(body);\n        }\n        log.info(\"--\u8bf7\u6c42\u53c2\u6570:\"+body);\n}\n@RequestMapping(value = \"/test7_8\", method = {RequestMethod.POST, RequestMethod.GET},produces = {\"text/plain\", \"application/*\"})\n    public  @ResponseBody Object test7_8(@RequestParam(defaultValue=\"0\")long userId,RequestParam(defaultValue=\"0\")int flag,String lang){\n log.info(\"--\u8bf7\u6c42\u53c2\u6570{userId:\"+userId+\",flag:\"+flag+\"}json:\"+params);\n}\n2.FastJsonHttpMessageConverterTest\u589e\u52a0\n@Test \n    public void test7() throws Exception { \n        String jsonStr = \"{\\\"userId\\\":3,\\\"flag\\\":1}\"; \n        mvc.perform((post(\"/fastjson/test7_8\").characterEncoding(\"UTF-8\").content(jsonStr).contentType(MediaType.APPLICATION_JSON))).andDo(print()); \n    }\n    @Test \n    public void test8() throws Exception {\n        mvc.perform((post(\"/fastjson/test7_8\").characterEncoding(\"UTF-8\")\n                .param(\"userId\", \"3\")\n                .param(\"flag\", \"1\")\n                .contentType(MediaType.APPLICATION_FORM_URLENCODED))).andDo(print()); \n    }\n. @VictorZeng \u4f60\u5b8c\u5168\u6309\u7167\u8fd9\u6837\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u4f60\u7684testcase\u4e2d\u90fd\u662f\u5355\u72ec\u4f7f\u7528\uff0c\u4f46\u662f\u6df7\u5408\u4f7f\u7528\u540e\u5c31\u4e0d\u652f\u6301APPLICATION_FORM_URLENCODED\n. @VictorZeng \u4f60\u5b8c\u5168\u6309\u7167\u8fd9\u6837\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u4f60\u7684testcase\u4e2d\u90fd\u662f\u5355\u72ec\u4f7f\u7528\uff0c\u4f46\u662f\u6df7\u5408\u4f7f\u7528\u540e\u5c31\u4e0d\u652f\u6301APPLICATION_FORM_URLENCODED\n. @VictorZeng \u4f60\u5c06\u4e0a\u8ff0\u4ee3\u7801merge\u5230\u9879\u76ee\u4e2d\u8fdb\u884c\u6d4b\u8bd5\n. @VictorZeng \u4f60\u5c06\u4e0a\u8ff0\u4ee3\u7801merge\u5230\u9879\u76ee\u4e2d\u8fdb\u884c\u6d4b\u8bd5\n. @VictorZeng @wenshao \u6211\u6d4b\u8bd5\u662f\u8fd9\u6837\u7684\u7ed3\u679c\uff0c\u8bf7\u8003\u8651\u517c\u5bb9\uff0c\u56e0\u4e3a\u6211\u7684\u9879\u76ee\u4e2d\u652f\u6301\u4e24\u79cd\u6df7\u5408\u65b9\u5f0f\n. @VictorZeng @wenshao \u6211\u6d4b\u8bd5\u662f\u8fd9\u6837\u7684\u7ed3\u679c\uff0c\u8bf7\u8003\u8651\u517c\u5bb9\uff0c\u56e0\u4e3a\u6211\u7684\u9879\u76ee\u4e2d\u652f\u6301\u4e24\u79cd\u6df7\u5408\u65b9\u5f0f\n. @VictorZeng Jackson\u4e2d\u652f\u6301\n. 1.FastJsonControllerTest\u589e\u52a0\nprotected JSONObject params = new JSONObject();\n @ModelAttribute\n public void init(@RequestBody(required=false)String body){\n if(!StringUtil.isEmptyStr(body)){\n params = JSON.parseObject(body);\n }\n log.info(\"--\u8bf7\u6c42\u53c2\u6570:\"+body);\n }\n@RequestMapping(value = \"/test7_8_9\", method = {RequestMethod.POST, RequestMethod.GET},produces = {\"text/plain\", \"application/*\"})\n public @ResponseBody Object test7_8_9(@RequestParam(defaultValue=\"0\")long userId,RequestParam(defaultValue=\"0\")int flag,String lang){\n log.info(\"--\u8bf7\u6c42\u53c2\u6570{userId:\"+userId+\",flag:\"+flag+\"}json:\"+params);\n }\n2.FastJsonHttpMessageConverterTest\u589e\u52a0\n@Test \n public void test7() throws Exception { \n String jsonStr = \"{\\\"userId\\\":3,\\\"flag\\\":1}\"; \n mvc.perform((post(\"/fastjson/test7_8_9\").characterEncoding(\"UTF-8\").content(jsonStr).contentType(MediaType.APPLICATION_JSON))).andDo(print()); \n }\n@Test \n public void test8() throws Exception {\n mvc.perform((post(\"/fastjson/test7_8_9\").characterEncoding(\"UTF-8\")\n .param(\"userId\", \"3\")\n .param(\"flag\", \"1\")\n .contentType(MediaType.APPLICATION_FORM_URLENCODED))).andDo(print()); \n }\n@Test \npublic void test9() throws Exception {\n    mvc.perform((post(\"/fastjson/test7_8_9\").characterEncoding(\"UTF-8\")\n        .param(\"userId\", \"3\")\n                .param(\"flag\", \"1\")\n            .contentType(MediaType.MULTIPART_FORM_DATA))).andDo(print()); \n    } \n\u5bf9test7()/test9()\u652f\u6301\uff0c\u53ea\u662f\u5bf9test8()\u4e0d\u652f\u6301\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n. @VictorZeng Jackson\u652f\u6301,Fastjson\u4e0d\u8ba1\u5212\u652f\u6301\u5417\uff1f\n. \n\u8bf7\u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u5982\u56fe\u6807\u8bb0\u662f\u5426\u914d\u7f6e\n. \u90a3\u5c31\u9700\u8981\u5728\u540e\u53f0\u8fd4\u56de\u65f6\u505a\u5904\u7406\n\u6bd4\u5982\uff1a\nJSON.toJSONString(data, new SerializerFeature[] { SerializerFeature.WriteDateUseDateFormat, SerializerFeature.WriteNullStringAsEmpty, SerializerFeature.BrowserCompatible })\n\u5bf9\u8fd4\u56dedata\u6570\u636e\u683c\u5f0f\u5316\n. \u8fd4\u56de\u503c\u591a\u4e86\u4e00\u5c42 \u6839\"hashMapList\"\n\u5982\u679c\u8fd4\u56de\u7eaf\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de{},\u800c\u4e0d\u662f\u5177\u4f53\u5b57\u7b26\u4e32\n. \u95ee\u9898\u5df2\u89e3\u51b3\n\u8fd4\u56de\u7c7b\u578b\u524d\u52a0\u5165@ResponseBody \u89e3\u51b3\u6839\"hashMapList\"\u95ee\u9898\u4ee5\u53ca\u7eaf\u6587\u672c\u95ee\u9898\nDisableCircularReferenceDetect\u95ee\u9898\u9700\u8981\u5c06\u914d\u7f6e\u63d0\u53d6\u51fa\u6765\u914d\u7f6e\u81f3com.alibaba.fastjson.support.spring.FastJsonJsonView\n. \u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u8fd4\u56de\u7c7b\u578b\u524d\u52a0\u5165@ResponseBody \u89e3\u51b3\n. Java bean\u7684\u6807\u51c6\u5199\u6cd5\u554a\uff0cis_/get_/set*\u90fd\u4f1a\u5e8f\u5217\u5316\n. 14:11:42,815 INFO  [STDOUT] 4)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:194)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:296). spring4.3.5\u4e0efastjson1.2.23\u76ee\u524d\u4f7f\u7528\u6ca1\u95ee\u9898. @wenshao \u662f\u5012\u80fd\u548c\u671f\u671b\u4e00\u6837\u5417. ",
    "hanzhankang": "\u8fd9\u4e2a\u53ef\u4ee5\u5408\u5e76\u5417\uff1f\n. ",
    "jiangguilong2000": "@stepinto \n@zhuzhaoyuan \n@pentiumao \n@kiminotes \n@vbauer \n. @wenshao \u8c22\u8c22\u56de\u590d\uff01\n1.\u7528JSON\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6211\u662f\u5728\u6d88\u606f\u5e95\u5c42\u5904\u7406\u7684\uff0c\u6240\u4ee5\u5e76\u4e0d\u77e5\u9053\uff0c\u8fd9\u4e2a\u6d88\u606f\u662fObject[]\u7c7b\u578b\u8fd8\u662f\u5176\u4ed6\u7c7b\u578b\uff1b\n2.\u6d88\u606f\u5b9e\u4f53\u91cc\u8fd8\u591a\u5c42\u5d4c\u5957\u6709JsonArray\u7684\u4e5f\u5e0c\u671b\u80fd\u53cd\u5e8f\u5217\u5316\u6210Object[]\n\u4e5f\u5c31\u662f\u5982\u679c\u9047\u5230JsonArray\u7c7b\u578b\u7684\uff0c\u53cd\u5e8f\u5217\u5316\u51fa\u6765\uff0c\u5e0c\u671b\u80fd\u6709\u529e\u6cd5Object[]\u6765\u66ff\u6362\uff0c\u5f88\u56f0\u60d1~~\n\n. @wenshao  \u6211\u4eec\u548c\u6e38\u620f\u5ba2\u6237\u7aef\u4e4b\u95f4\u4f20\u8f93\u90fd\u662fObject[]\u5bf9\u8c61\u4f20\u8f93\uff0c\u5ba2\u6237\u7aef\u4e0d\u8ba4JSONArray,\u6240\u4ee5\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u6700\u597d\u4e5f\u662fObject[] A server-->B server-->client ,A\u5230B\u7684\u8fc7\u7a0b\u53cd\u5e8f\u5217\u5316\u76ee\u524d\u662f\u89e3\u6790\u51fa\u6765JSONArray,\u8fd8\u8981\u505a\u4e00\u6b21\u904d\u5386\uff0c\u5305\u88c5\u6210Object[] \u7136\u540e\u518d\u8f6c\u53d1\u7ed9\u5ba2\u6237\u7aef\uff0c\u5982\u679c\u80fd\u901a\u8fc7FASTJSON\u76f4\u63a5\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u662fObject[]\u5c31\u66f4\u597d\u4e86\n. ",
    "generalthink": "@jiangguilong2000   fastjson\u4e2d\u5e94\u8be5\u6ca1\u6709\u63d0\u4f9b\u6b64\u79cd\u529f\u80fd\uff0c\u6211\u4f30\u8ba1\u4e5f\u4e0d\u4f1a\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e5f\u6ca1\u6709\u5fc5\u8981\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\u3002\n\u6240\u4ee5\uff0c\u4f60\u73b0\u5728\u53ea\u80fd\u901a\u8fc7\u81ea\u5df1\u5199util\u6765\u5b8c\u6210\u8fd9\u4e2a\u529f\u80fd\u3002\n. \u5c5e\u6027\u540d\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0b\u51c6\u5219:\n1. \u5c5e\u6027\u540d\u5e94\u8be5\u662f\u5177\u6709\u5b9a\u4e49\u8bed\u4e49\u7684\u6709\u610f\u4e49\u7684\u540d\u79f0\u3002\n2. \u5c5e\u6027\u540d\u5fc5\u987b\u662f\u9a7c\u5cf0\u5f0f\u7684\uff0cASCII\u7801\u5b57\u7b26\u4e32\u3002\n3. \u9996\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\uff0c\u4e0b\u5212\u7ebf()\u6216\u7f8e\u5143\u7b26\u53f7($)\u3002\n4. \u968f\u540e\u7684\u5176\u4ed6\u5b57\u7b26\u53ef\u4ee5\u662f\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf()\u6216\u7f8e\u5143\u7b26\u53f7($)\u3002\n\u5e94\u8be5\u907f\u514d\u4f7f\u7528Javascript\u4e2d\u7684\u4fdd\u7559\u5173\u952e\u5b57\n\u8fd9\u4e9b\u51c6\u5219\u53cd\u6620JavaScript\u6807\u8bc6\u7b26\u547d\u540d\u7684\u6307\u5bfc\u65b9\u9488\u3002\u4f7fJavaScript\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u70b9\u7b26\u53f7\u6765\u8bbf\u95ee\u5c5e\u6027\u3002\n. @coolme200 \u5982\u679c\u5c5e\u6027\u540d\u79f0\u6ca1\u6709\u9075\u5b88\u4ee5\u4e0a\u51c6\u5219\uff0c\u90a3\u4e48\u4f60\u7684key\u503c\u6700\u597d\u52a0\u4e0a\u53cc\u5f15\u53f7\u3002\njavascript\nvar txt = '{\"1\":\"abc\"}';\nvar abc = JSON.parse(txt);\nconsole.info(abc['1']);\n. @coolme200 \n``` java\nMap map = new HashMap();\n   map.put(1, \"abc\");\n   System.out.println(JSON.toJSONString(map,SerializerFeature.WriteNonStringKeyAsString));\n\u8f93\u51fa:{\"1\":\"abc\"}\n```\ntext\n\u6211\u7684fastjson\u7248\u672c:1.2.4,WriteNonStringKeyAsString\u7279\u6027\u662f\u4ece1.1.37\u5f00\u59cb\n. \u8fd9\u4e2a\u5e76\u4e0d\u7b97\u662f\u4e25\u683c\u7684json\u5b57\u7b26\u4e32\u5427\n. @yuankui   \u662f\u53ef\u4ee5\u7684\n``` java\nString result = \"{\\\"reason_code\\\":\\\"001\\\",\\\"success\\\":false}      \";\n    String gString = JSON.parseObject(result, String.class);\n    System.out.println(gString);\nprint: {\"reason_code\":\"001\",\"success\":false}\n```\n. @yuankui   \u540c\u7406\u6362\u6210\u4f60\u81ea\u5df1\u7684\u7c7b\u4e5f\u662f\u53ef\u4ee5\u7684\n. \\r\u6807\u793a\u56de\u8f66\uff0c\\n\u8868\u793a\u6362\u884c\u3002\nwindows\u7cfb\u7edf\u4e2d\\r\\n\u6807\u793a\u65b0\u7684\u4e00\u884c\u3002unix\u7cfb\u7edf\u4e2d\\n\u8868\u793a\u65b0\u7684\u4e00\u884c\n. ",
    "xvzhu": "\u77e5\u9053\u4e86\uff0c\u8ddf\u524d\u9762\u95ee\u7684\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u901a\u8fc7 SerializerFeature.DisableCircularReferenceDetect \u597d\u4f7f\n. ",
    "coolme200": ":+1: \n. ",
    "jingea": "\u540e\u6765\u627e\u5230\u539f\u56e0\u4e86\uff0c\u662f\u5728\u89e3\u6790\u7684\u65f6\u5019\u9047\u5230\u4e86\u4e00\u4e2a\u975e\u6cd5\u7684\u7a7a\u683c, \u670d\u52a1\u5668\u540d\u79f0\uff1a[FFFF00]N23-\u7269\u534e\u5929\u5b9d [-]\u7269\u534e\u5929\u5b9d\u540e\u9762\u8ddf\u7684\u7a7a\u683c\uff0c\u4e0d\u662f\u6211\u4eec\u5e38\u7528\u7684ascii\u7801\u4e3a32\u7684\u7a7a\u683c\uff0c\u800c\u662f\u4e00\u4e2aascii\u7801\u4e3a160\u7279\u6b8a\u7684\u7a7a\u683c\u7b26,\u5bfc\u81f4JSON\u5e8f\u5217\u5316\u65f6\u5931\u8d25.\n. ",
    "fuweichin": "\u4fee\u6b63\u63a5\u53e3\u5b9a\u4e49\n\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u63a5\u53e3JSONInterchangeable\u4e0e\u5176\u5b9e\u73b0\u7c7bIPv4\u7684\u65b9\u6cd5fromJSON\u53c2\u6570\u5217\u8868\u4e0d\u4e00\u81f4\uff0c\u5e94\u4ee5\u5b9e\u73b0\u7c7b\u7684fromJSON(Object value)\u4e3a\u51c6\u3002\u4fee\u6b63\u540e\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a\njava\npublic interface JSONInterchangeable{\n    public Object toJSON(String key);\n    public void fromJSON(Object value);\n}\n. \u539f\u6765\u9601\u4e0b\u662f\u51ed\u611f\u89c9\u505a\u4e8b\u7684\n. \u5982\u679c\u4e86\u89e3ECMAScript\u7684JSON.stringify(value [,replacer [,indent ] ])\u65b9\u6cd5\uff0c\u5c31\u4f1a\u77e5\u9053\uff1a\n\u5bf9\u4e8e\u5b9e\u73b0\u4e86\u6307\u5b9a\u63a5\u53e3\uff08\u62e5\u6709toJSON\u65b9\u6cd5\uff09\u7684\u5bf9\u8c61\uff0c\u5e8f\u5217\u5316\u65b9\u6cd5\u4f1a\u4f18\u5148\u8c03\u7528toJSON\u5e76\u5bf9\u5176\u8fd4\u56de\u503c\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5e8f\u5217\u5316\u5bf9\u8c61\u7684\u9ed8\u8ba4\u673a\u5236\u5bf9\u5bf9\u8c61\u672c\u8eab\u8fdb\u884c\u5e8f\u5217\u5316\u3002\n\u82e5Fastjson\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u65b9\u9762\u60f3\u4e0eECMAScript\u7684JSON.stringify\u65b9\u6cd5\u63a5\u8f68\uff0c\u90a3\u4e48\u53ef\u4ee5\u63d0\u4f9b\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u5982\u6211\u5728Issues\u4e2d\u6240\u63d0\u7684\u3002\u8fd9\u5c06\u5927\u5927\u7b80\u5316\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u8c03\u7528\u590d\u6742\u5ea6\uff0c\u7279\u522b\u662f\u5bf9\u524d\u7aefAjax\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u3002\n\u8c22\u8c22\u56de\u5e94\uff01\n2016-05-04 21:09 GMT+08:00 \u9ad8\u94c1 notifications@github.com:\n\npublic static Object toJSON(Object javaObject);\npublic T toJavaObject(Class clazz);\n\u8fd9\u4e24\u4e2aAPI\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\uff1f\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/428#issuecomment-216856874\n. \n",
    "oldratlee": "@wenshao @yakolee \u53ef\u4ee5\u7ed9\u770b\u770b :)\n. ",
    "yuankui": "\u7248\u672c1.2.4,1.2.6\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898.\n. @generalthink \u672b\u5c3e\u591a\u4e00\u4e2a\u7a7a\u683c\u7b97\u5417?\n. @generalthink \u95ee\u9898\u5c31\u5728\u8fd9\u91cc\u554a,\u4e3a\u4ec0\u4e48\u591a\u4e86\u7a7a\u683c\u53ef\u4ee5,\u591a\u4e86\u6362\u884c\u4e0d\u884c?\n\u6709\u4ec0\u4e48\u5b9e\u8d28\u4e0a\u7684\u533a\u522b\u5417?\n. @our880tom \u5e94\u8be5\u7b97\u662f\u4e00\u4e2afeature?\n. \u8c22\u8c22\n. <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.20</version>\n</dependency>. @landawn loop\u8bbe\u7f6e\u4e3a100W\u8bd5\u8bd5?. @landawn \u5e73\u5747\u65f6\u95f4\u5f53\u7136\u6ca1\u4ec0\u4e48\u95ee\u9898.\n\u6211\u7684\u95ee\u9898\u7684\u662f\u5173\u6ce8\u77ed\u677f,\u4e5f\u5c31\u662f\u6700\u5dee\u7684\u60c5\u51b5,\u6781\u7aef\u7684\u60c5\u51b5,\u56e0\u4e3a\u4e00\u65e6\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5,\u5c31\u610f\u5473\u7740\u8d85\u65f6.\n\u770b\u4f60\u7684\u7ed3\u679c,\u4e5f\u6709\u4e00\u6b21\u5e8f\u5217\u5316\u65f6\u95f4\u8d85\u8fc7383.287 ms\u7684\u5427?\n\u5982\u679c\u5728\u589e\u5927\u5e76\u53d1,\u6269\u5927\u5faa\u73af\u6b21\u6570,\u5e94\u8be5\u8fd8\u6709\u66f4\u5dee\u7684\u77ed\u677f~. \u6709\u4ec0\u4e48\u95ee\u9898\u4f60\u76f4\u63a5\u8bf4.. ",
    "our880tom": "\u89c9\u5f97\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u7b97\u4ec0\u4e48bug\n. ",
    "zhugw": "\u62b1\u6b49\uff01 WIKI\u5e38\u89c1\u95ee\u9898\u4e2d\u5df2\u8bf4\u660e\u4e86\u5982\u4f55\u6cdb\u578b\u53cd\u5e8f\u5217\u5316\nimport com.alibaba.fastjson.TypeReference;\nList list = JSON.parseObject(\"...\", new TypeReference>() {});\n```\n   json = \"{1:2,3:4}\";\n    Map map7 = JSON.parseObject(json, new TypeReference>() {});\n    System.out.println(map7);\n    System.out.println(map7.get(1L));// 2\n    System.out.println(map7.get(1L).getClass());// class java.lang.Short\n```\n. \u8c22\u8c22 \u4f46\u6211\u89c9\u5f97\u5b9a\u4e49\u989d\u5916\u7684\u5bf9\u8c61\u771f\u7684\u5f88\u4e0d\u65b9\u4fbf \u5c24\u5176\u662f\u4f60\u53ea\u60f3\u62bd\u53d6\u67d0\u4e00\u5143\u7d20\u5217\u8868 \u6216 \u53ea\u60f3\u5f97\u5230\u67d0\u4e00\u4e2a\u6807\u7b7e\u7684\u4ef7\u683c \u8fd9\u79cd\u573a\u666f\u4e0b\u4f7f\u7528JsonPath\u975e\u5e38\u65b9\u4fbf \u5982\nList idList = JsonPath.read(json, \"$..activeTagDictId\"); // all activeTagDictId \nList priceList = JsonPath.read(json, \"$..tagPrice[?(@.activeTagDictId==371)].activePrice\"); //\u67e5\u8be2activeTagDictId\u4e3a371\u5bf9\u5e94\u7684\u4ef7\u683c\n. \u4f46\u597d\u50cf\u53ea\u80fd\u64cd\u4f5c\u5bf9\u8c61 \u800c\u4e0d\u80fd\u89e3\u6790json\u4e32 \u5982\nList idList = (List) JSONPath.eval(json, \"$..activeTagDictId\");\n\u5e76\u4e14\u4e0d\u5982java8\u7684streams\u76f4\u89c2 \u5982\n List names = (List)JSONPath.eval(entities, \"$.name\"); // \u8fd4\u56deenties\u7684\u6240\u6709\u540d\u79f0\n\u7528java8\u5b9e\u73b0\u7684\u8bdd\n List names = entities.stream().map(e->e.getName()).collect(toList());\n. ",
    "Muyv": "\u540c\u95ee\n. ",
    "hinadong": "\u8fd9\u65f6\u5019\u6211\u9700\u8981\u4f20\u5165filter\u53c2\u6570\u600e\u4e48\u529e\uff0c\u7ed9\u51fa\u7684\u793a\u4f8b\u53ea\u80fdnull?\n. @wenshao \u4e3a\u4ec0\u4e48\u6211\u4f7f\u7528ordinal\u4e4b\u540e\uff0c\u987a\u5e8f\u8fd8\u662f\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u7684\uff0c\u6ca1\u6709\u8d77\u4f5c\u7528\uff0c\u53ea\u4e0d\u8fc7\u7528SimplePropertyPreFilter \u53ea\u8f93\u51fa\u6307\u5b9a\u7684\u5b57\u6bb5\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u8bbe\u7f6e\u65e0\u6548\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5168\u8f93\u51fa\u65f6\uff0cordinal\u624d\u6709\u6548\uff1f\n. BASE64\u5904\u7406\u4e4b\u540e\uff0c\u518d\u8f6c\u6362\u4e00\u9053\uff0c\u96be\u9053\u4e0d\u884c\uff1f\n. ",
    "edhub": "\u8fd9\u91cc\u7684\u8fd4\u56de\u503cString\u4f30\u8ba1\u662f\u7528\u751f\u6210\u5668\u7136\u540e\u6539\u7684\u65f6\u5019\u5f04\u9519\u4e86\nOn Thu, Nov 12, 2015 at 12:37 PM, \u7fdf\u7389\u52c7 notifications@github.com wrote:\n\npublic String setNewMessage(String newMessage) { mNewMessage = newMessage;\n}\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u51fd\u6570\u7c7b\u578b\u662fString\uff1f\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/443#issuecomment-155995300.\n. \u6069\uff0c\u6211\u77e5\u9053\u53ef\u4ee5\u5728get\u548cset\u65b9\u6cd5\u4e0a\u9762\u52a0\u6ce8\u89e3\u3002\u4f46\u662f\uff1a\n1. \u4f7f\u7528\u4ee3\u7801\u751f\u6210\u5de5\u5177\u7684\u65f6\u5019\uff0c\u6ce8\u89e3\u662f\u76f4\u63a5\u751f\u6210\u5728field\u4e0a\u9762\u7684\n2. mFieldName\u8fd9\u79cd\u65b9\u5f0f\u662f Google Android \u5b98\u65b9\u63a8\u8350\u7684\u547d\u540d\u7ea6\u675f\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a fastjson \u6709\u8db3\u591f\u7684\u7406\u7531\u6765\u652f\u6301\u8fd9\u79cd\u89c4\u8303\n3. \u624b\u52a8\u5728get/set\u65b9\u6cd5\u4e0a\u9762\u52a0\u6ce8\u89e3\u7684\u8bdd\uff0c\u4f1a\u6bd4\u8f83\u82b1\u65f6\u95f4\uff0c\u800c\u4e14\u4e0d\u503c\u5f97\n\n\u53e6\u5916\uff0c\u6211\u5728\u539f\u95ee\u9898\u91cc\u9762\u91cc\u9762\u63cf\u8ff0\u7684\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\u53ea\u5904\u7406\u4e86 json -> object \u7684\u95ee\u9898\u3002object -> json\n\u8fd8\u9700\u8981\u5904\u7406\u53e6\u5916\u4e00\u4e2a\u5730\u65b9\u3002\u5b8c\u6574\u7684patch\u8bf7\u770b\u9644\u4ef6\u3002\n\u5bf9\u6211\u4eec\u6765\u8bf4\uff0cpatch\u4e00\u4e2a\u5c0f\u7684\u6539\u52a8\u5df2\u7ecf\u5b8c\u5168\u6ee1\u8db3\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u9700\u8981\u3002\u63d0\u51fa\u6765\u7684\u8bdd\uff0c\u8bf4\u4e0d\u5b9a\u4e5f\u53ef\u4ee5\u5e2e\u5230\u5176\u4ed6\u4eba\u3002\nOn Thu, Nov 12, 2015 at 12:38 PM, \u7fdf\u7389\u52c7 notifications@github.com wrote:\n\npublic static class A {\n@JSONField(name = \"new_message\")\nprivate String mNewMessage;\n@JSONField(name = \"new_message\")\npublic String getNewMessage() {\nreturn mNewMessage;\n}\n@JSONField(name = \"new_message\")\npublic void setNewMessage(String newMessage) {\nmNewMessage = newMessage;\n}\n@Override\npublic String toString() {\n    return \"A [mNewMessage=\" + mNewMessage + \"]\";\n}\n}\n\u4f60\u8fd9\u4e2a\u5c5e\u6027\u540d\u79f0\u548c set get\u4e0d\u4e00\u6837\u65f6\u5019\u9700\u8981\u5728get\u548cset\u65b9\u6cd5\u4e0a\u9762\u52a0@JSONField(name = \"new_message\") \u5373\u53ef\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/443#issuecomment-155995391.\n\ncommit 670f6bfc9556d503a7d1908b154e7941aa5ebd5a\nAuthor: Gu Caipeng gucp@sudiyi.net\nDate:   Wed Nov 4 11:34:11 2015 +0800\n```\nFixed a field resolving issue\nWhen a non-public field start with m, which follows Android naming\nconvention, fastjson doesn't find the correct field.\n```\ndiff --git a/.DS_Store b/.DS_Store\nnew file mode 100644\nindex 0000000..aed2c26\nBinary files /dev/null and b/.DS_Store differ\ndiff --git a/out/.DS_Store b/out/.DS_Store\nnew file mode 100644\nindex 0000000..a010bb2\nBinary files /dev/null and b/out/.DS_Store differ\ndiff --git a/out/artifacts/.DS_Store b/out/artifacts/.DS_Store\nnew file mode 100644\nindex 0000000..51f2f54\nBinary files /dev/null and b/out/artifacts/.DS_Store differ\ndiff --git a/out/artifacts/fastjson_jar/.DS_Store b/out/artifacts/fastjson_jar/.DS_Store\nnew file mode 100644\nindex 0000000..6c0813a\nBinary files /dev/null and b/out/artifacts/fastjson_jar/.DS_Store differ\ndiff --git a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\nindex 57fb28a..051d01a 100755\n--- a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n+++ b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n@@ -359,6 +359,10 @@ public class ParserConfig {\n         if (field == null) {\n             field = getField0(clazz, \"m_\" + fieldName);\n         }\n-        if (field == null) {\n-            String mFieldName = \"m\" + fieldName.substring(0, 1).toUpperCase() + fieldName.substring(1);\n-            field = getField0(clazz, mFieldName);\n-        }\n       return field;\n   }\ndiff --git a/src/main/java/com/alibaba/fastjson/util/TypeUtils.java b/src/main/java/com/alibaba/fastjson/util/TypeUtils.java\nindex 8e30bd2..a96d4f0 100755\n--- a/src/main/java/com/alibaba/fastjson/util/TypeUtils.java\n+++ b/src/main/java/com/alibaba/fastjson/util/TypeUtils.java\n@@ -1313,8 +1313,9 @@ public class TypeUtils {\n     }\npublic static Field getField(Class<?> clazz, String fieldName) {\n-        String mFieldName = \"m\" + fieldName.substring(0, 1).toUpperCase() + fieldName.substring(1);\n       for (Field field : clazz.getDeclaredFields()) {\n-            if (fieldName.equals(field.getName())) {\n-            if (fieldName.equals(field.getName()) || mFieldName.equals(field.getName())) {\n               return field;\n           }\n       }\n. ",
    "iluvsnail": "public class A{\npublic String a;\nClass B{\n  public String b;\n}\n}\n//main \u65b9\u6cd5\nJSON.paseArray(\"[{'b':'bb'}]\",B.class);\n\u5927\u6982\u662f\u8fd9\u6837\u7684\n. \u6211\u662f\u7528java\u4ee3\u7801\u6298\u4e2d\u4e86\u4e0b. ",
    "nistal97": "class TestObj {\n        class SubObj { double d = 12.34d;\n            public double getD() {\n                return d;\n            }\n            public void setD(double d) {\n                this.d = d;\n            }\n        }\n        int a = 0;\n        String b = \"abc\";\n        Collection c = Collections.unmodifiableList(new ArrayList());\n        SubObj s = new SubObj();\npublic int getA() {\n        return a;\n    }\n    public void setA(int a) {\n        this.a = a;\n    }\n    public String getB() {\n        return b;\n    }\n    public void setB(String b) {\n        this.b = b;\n    }\n    public Collection<Float> getC() {\n        return c;\n    }\n    public void setC(Collection<Float> c) {\n        this.c = c;\n    }\n    public SubObj getS() {\n        return s;\n    }\n    public void setS(SubObj s) {\n        this.s = s;\n    }\n}\n@Test\n    public void testJSON2Obj() throws JSON.JSONException {\n        String str = \"{\\\"a\\\":0,\\\"b\\\":\\\"abc\\\",\\\"c\\\":[],\\\"s\\\":{\\\"d\\\":12.34}}\";\n        Assert.assertTrue(JSON.deserialize(TestObj.class, str) instanceof TestObj);\n        TestObj obj = (TestObj)JSON.deserialize(TestObj.class, str);\n        Assert.assertTrue(obj.a == 0);\n        Assert.assertTrue(obj.b.equals(\"abc\"));\n        Assert.assertTrue(obj.c.isEmpty());\n        Assert.assertTrue(obj.s.d == 12.34d);\n    }\ncom.alibaba.fastjson.JSONException: create instance error, class com.dy.apollo.util.JSONTest$TestObj\nfastjson\u662f\u4e0d\u662f\u4e0d\u652f\u6301\u5185\u90e8\u7c7b\uff1f\uff1f\uff1f\n. public static Object deserialize(Class clazz, String str) throws JSONException {\n        Object ret = null;\n        try {\n            if (str != null) {\n                ret = com.alibaba.fastjson.JSON.parseObject(str, clazz);\n            }\n        } catch (com.alibaba.fastjson.JSONException e){\n            throw new JSONException(e);\n        }\n        return ret;\n    }\n. ",
    "coolmaxter": "\u8fd9\u4e2a\u95ee\u9898\u6211\u8fd9\u91cc\u4e5f\u5b58\u5728\uff0c\u53ef\u4ee5\u628a\u5185\u90e8\u7c7b\u53d8\u6210\u5185\u90e8\u9759\u6001\u7c7b\u3002\n. ",
    "lytofb": "\u8fd9\u4e2a\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u5efa\u8bae\u5c06\u8fd9\u4e2a\u7279\u6027/\u7f3a\u70b9\u5199\u5230wiki\u4e2d. ",
    "jmzcode": "\u7528base64 \u56de\u5199\u5c31\u597d\u4e86 = =\n. ",
    "zhangtaoeasy": "\u4f60\u597d\uff0c\u6211\u7528\u7684\u662f\u6700\u65b0\u7248\u672c 1.2.7\n. \u73b0\u8c61\u662f\u53d1\u751f\u5728 \u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5bf9\u65b9\u4f20\u8fc7\u6765\u7c7b\u4f3c\u8fd9\u6837\nhttp://his.com/HMSSERVER/WnxCheck?chkresult={ \"Mg2+\": \"1435555992\",  \"Na+\": \" 02570\",\"cl-\": \"150501\" ,\"panellot\": \"150501\" }\n\u6211\u4eec Java \u7aef\u63a5\u6536\u7c7b\u4f3c\u8fd9\u6837\uff1a\n``` java\n String chkresult = request.getParameter(\"chkresult\");\n ExaminationPojo examinationPojo = JSONObject.parseObject(chkresult, ExaminationPojo.class);\npublic class ExaminationPojo {\n     @JSONField(name = \"Mg2+\")\n   private String mg;\n   @JSONField(name = \"Na+\")\n   private String na;\n   @JSONField(name = \"Cl-\")\n   private String cl;\n      @JSONField(name = \"panellot\")\n   private String panellot;\n    //....get set\n\n}\n```\n\u73b0\u8c61\u5c31\u662f \u5e26 +-\u53f7\u7684\u5c5e\u6027\u5e94\u8be5\u662f\u6ca1\u6620\u5c04\u4e0a\u662fnull,panellot\u662f\u6b63\u5e38\u7684\n. ",
    "felixonmars": "A friendly ping to bring this back to life :)\n. ",
    "terensu": "\u53ef\u4ee5\u5c1d\u8bd5\uff1a enum\u6dfb\u52a0Getter, Setter\u65b9\u6cd5\uff0c\u518d\u8bbe\u7f6eSerializeConfig.getGlobalInstance()\u8bbe\u7f6eSerializer\u4e3aJavaBeanSerializer\n. ",
    "solidsnake2013": "\u56e0\u4e3a\u5f88\u591a\u6a21\u578b\u90fd\u662f\u7236\u6a21\u578b\u6709\u516c\u5171\u5b57\u6bb5.\n\u5b50\u6a21\u578b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5b57\u6bb5.\n\u6240\u4ee5\u8fd9\u79cd\u9700\u6c42\u5e94\u8be5\u975e\u5e38\u7684\u5e73\u5e38\u5427.\n\u51b5\u4e14\u5b50\u7c7b\u91cc\u9762\u4e5f\u80af\u5b9a\u5305\u542b\u7740\u7236\u7c7b\u7684\u5b57\u6bb5.\n\u5982\u679c\u4e0d\u80fd\u8f6c\u6362\u60a8\u770b\u662f\u4e0d\u662f\u4e5f\u4e0d\u592a\u5408\u4e4e\u903b\u8f91\u5462\n. \u6211\u9700\u8981\u5148\u6d4b\u8bd5\u4e00\u4e0b\n. \u53ef\u80fd\u662f\u6211\u5199\u7684\u4e0d\u591f\u6e05\u695a, \u8fd9\u4e0d\u662f\u4e00\u4e2a\u6cdb\u578b\u7684\u95ee\u9898, \u56e0\u4e3a\u6cdb\u578b\u7684\u95ee\u9898\u5f88\u597d\u89e3\u51b3.\n\u73b0\u5728\u7684\u95ee\u9898\u662f\u6211\u6709\u4e24\u7ea7\u6a21\u578b\nBase : uuId\nSub : bgImage\nSub > Base (sub\u7ee7\u627f\u4e8eBase)\n\u6211\u4f7f\u7528 \n{\"bgImage\":\"abc\",\"uuid\":\"123\"}\n\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u65f6\n[JSON.parseObject(s, Sub.class);]\n\u53ef\u4ee5\u5f97\u5230bgImage \u7684\u503c,\n\u4f46\u662f\u5f97\u4e0d\u5230UUID \u7684\u503c.\n\u6211\u89c9\u5f97\u5e94\u8be5\u6709\u4e2a\u7c7b\u4f3c\u4e8e\u5f00\u5173\u7684\u53c2\u6570\u6765\u63a7\u5236\u662f\u5426\u53cd\u5e8f\u5217\u5316\u7236\u7c7b\u7684\u503c (\u7236\u7c7b\u6709get set)\n. ",
    "Luomeng1004": "\u8bf7\u6559\uff0c\u73b0\u5728\u6709\u89e3\u51b3\u65b9\u6848\u4e86\u5417\uff1f. ",
    "chenyulzhh": "\u5f31\u5f31\u95ee\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u8be5\u600e\u4e48\u5f04\u5462\uff0c\u6211\u4eca\u5929\u4e5f\u53d1\u73b0\u8fd9\u79cd\u60c5\u5f62\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u5b57\u6bb5\u6ca1\u6709\u503c\u3002\u3002. > \u5f31\u5f31\u95ee\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u8be5\u600e\u4e48\u5f04\u5462\uff0c\u6211\u4eca\u5929\u4e5f\u53d1\u73b0\u8fd9\u79cd\u60c5\u5f62\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u5b57\u6bb5\u6ca1\u6709\u503c\u3002\u3002\n\u6655\uff0c\u8c03\u8bd5\u4e86\u4e00\u4f1a\u513f\uff0c\u53d1\u73b0\u662f\u56e0\u4e3a\u6211 \u5b50\u7c7b\u91cc\u9762\u6ca1\u6709 \u9ed8\u8ba4\u7684 \u65e0\u53c2\u6784\u9020\u51fd\u6570\uff08\u53ea\u5b9a\u4e49\u4e86\u4e24\u4e2a\u63a5\u53d7\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff09\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u6210bean\u7684\u65f6\u5019\uff0c\u4f30\u8ba1\u5c31\u4f7f\u7528\u90a3\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u53bb\u4e86\uff0c\u6ca1\u4f7f\u7528setter\u65b9\u6cd5\uff0c\u6240\u4ee5\u7236\u7c7b\u91cc\u9762\u7684\u5b57\u6bb5\u5c31\u6ca1\u503c\u4e86. ",
    "quintinguo": "\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316,\u4e5f\u8bb8\u4f60\u5b50\u7c7b\u7684toString\u65b9\u6cd5\u6ca1\u6709\u5305\u542b\u7236\u7c7b\u5c5e\u6027,\u6211\u7684\u95ee\u9898\u5c31\u662f\u8fd9\u6837,\u56e0\u4e3a\u6211\u7528lombok.ToString\u8be5\u6ce8\u89e3\u653e\u5230\u5b50\u7c7b\u4e0a\u4e0d\u4f1a\u5305\u542b\u7236\u7c7b\u5c5e\u6027,\u5f04\u4e86\u534a\u5929\u4ee5\u4e3afastjson\u4e0d\u652f\u6301\u53cd\u5e8f\u5217\u5316\u7236\u7c7b\u5c5e\u6027. ",
    "guhongjie": "\u6709\u4e2a\u6a21\u578b\u7528\u7684\u662fdefault\u7136\u540e\u6ca1\u6709\u6ce8\u5165\n. ",
    "zephyrleaves": "@dachuanz  \u4e0d\u662f\u8fd9\u4e2a\u610f\u601d  ...\u6211\u662f\u6307\u5b9a\u4e86\u9ed8\u8ba4\u503c\u662ftrue \u4f46\u662f\u4ee3\u7801\u91cc\u53ea\u5904\u7406\u4e86\u9ed8\u8ba4\u503c\u662ffalse\u7684\u60c5\u51b5 \n\u5bfc\u81f4\u7684\u7ed3\u679c\u5c31\u662f \u6211\u9ed8\u8ba4\u503c\u6307\u5b9a\u662ftrue \u4f46\u662f\u5b9e\u9645\u503c\u662ffalse\u7684\u65f6\u5019 false \u6ca1\u6709\u88ab\u5e8f\u5217\u5316, \u7136\u540e\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u53d8\u6210true\u4e86 \u51fa\u73b0\u9519\u8bef\u4e86\n. @dachuanz \u8fd9\u4e2a\u53ef\u4ee5\u6539\u7684\u554a\n\u73b0\u5728\u7684\u4ee3\u7801\njava\nif (propertyValue != null && serializer.isEnabled(SerializerFeature.NotWriteDefaultValue)) {\n                Class<?> fieldCLass = fieldSerializer.fieldInfo.getFieldClass();\n                if (fieldCLass == byte.class && propertyValue instanceof Byte\n                    && ((Byte) propertyValue).byteValue() == 0) {\n                    continue;\n                } else if (fieldCLass == short.class && propertyValue instanceof Short\n                           && ((Short) propertyValue).shortValue() == 0) {\n                    continue;\n                } else if (fieldCLass == int.class && propertyValue instanceof Integer\n                           && ((Integer) propertyValue).intValue() == 0) {\n                    continue;\n                } else if (fieldCLass == long.class && propertyValue instanceof Long\n                           && ((Long) propertyValue).longValue() == 0L) {\n                    continue;\n                } else if (fieldCLass == float.class && propertyValue instanceof Float\n                           && ((Float) propertyValue).floatValue() == 0F) {\n                    continue;\n                } else if (fieldCLass == double.class && propertyValue instanceof Double\n                           && ((Double) propertyValue).doubleValue() == 0D) {\n                    continue;\n                } else if (fieldCLass == boolean.class && propertyValue instanceof Boolean\n                           && !((Boolean) propertyValue).booleanValue()) {\n                    continue;\n                }\n            }\n\u5c31\u662f\u53ea\u5224\u65ad\u4e86 \u503c\u662f\u4e0d\u662f0  \u8fd9\u6837\u4e0d\u5bf9\u4e48\n\u5e94\u8be5\u5224\u65ad\u503c\u662f\u4e0d\u662f\u548c\u9ed8\u8ba4\u503c\u4e00\u6837,\u8fd9\u6837\u6bd4\u8f83\u597d, \u5982\u679c\u53ef\u4ee5new \u5bf9\u8c61 \u7136\u540e\u53d6\u5f97\u9ed8\u8ba4\u503c \u4f5c\u4e3a\u5bf9\u6bd4\u503c\u6765\u5224\u65ad \u800c\u4e0d\u662f\u76f4\u63a5\u548c0\u5224\u65ad\n. ",
    "newpanjing": "\u5199\u4e86\u7684\u54e6~ \u90fd\u662f\u7528ide \u81ea\u52a8\u751f\u6210get set\u7684~ \u4e5f\u68c0\u67e5\u8fc7\u7684~ \u540e\u6765\u628a\u8fd9\u4e2a\u5b57\u6bb5\u540d\u5b57\u6539\u4e3a\u5176\u4ed6\u7684 \u53c8\u53ef\u4ee5\u4e86\u3002\n. ",
    "redkale": "RedKale-Convert \u652f\u6301  http://www.redkale.org/convert.html\n. ",
    "myoss": "fastjson.version\uff1a1.2.7\n. FastJSON\u80fd\u5426\u7528\u5176\u5b83\u65b9\u5f0f\u5f00\u542f\u652f\u6301JSONP\u8f93\u51fa(spring mvc)\n. @githublaohu @An0nymous0  https://github.com/alibaba/fastjson/wiki/FastJsonpHttpMessageConverter4_CN \u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u9700\u6c42\n. @githublaohu  \u4e0d\u60f3\u53bb\u52a8FastJsonHttpMessageConverter4\u539f\u6765\u8fd9\u4e00\u5957\u903b\u8f91\u4ee3\u7801\uff0c\u4e24\u5957\u529f\u80fd\u4e92\u76f8\u72ec\u7acb\uff0c\u8fd9\u4e00\u5957\u5b9e\u73b0\u662f\u53c2\u8003spring mvc\u4e2djackson\u914d\u7f6ecallback\n. @VictorZeng \u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u503c\n. 1.2.29\u5df2\u7ecf\u589e\u52a0\u9ed8\u8ba4\u662f\u503c\uff0c\u5df2\u7ecf\u89e3\u51b3\u4e86. \u65b9\u4fbf\u7ed9\u4e2a\u9879\u76ee\u4ee3\u7801\u770b\u770b\u5417\uff1f\n. FastJsonpHttpMessageConverter4  \u770b\u8d77\u6765\u4f60\u662f\u7528\u4e86\u8fd9\u4e2a\uff0c\u4f46\u8fd9\u9700\u8981spring 4.2+\u652f\u6301\n. \u4e0d\u65b9\u4fbf\u52a0\uff0c\u9ebb\u70e6\u63d0\u4f9b\u914d\u7f6e\u4fe1\u606f\u5427\uff0c\u9700\u8981\u91cd\u73b0\u95ee\u9898\uff0c\u8c22\u8c22\u3002\n. 1.2.29\u5df2\u7ecf\u589e\u52a0\u9ed8\u8ba4\u662f\u503c\uff0c\u89e3\u51b3\u4e86. \u662f\u5426\u7528\u5230\u4e86\u6b64\u7279\u6027\uff0c\u4f46\u662f\u53c8\u6ca1\u914d\u7f6e\u4e86\uff1f https://github.com/alibaba/fastjson/wiki/FastJsonpHttpMessageConverter4_CN. @shuaijunlan, @linapex \u9ebb\u70e6\u63d0\u4f9b\u4e0b\u9519\u8bef\u5de5\u7a0b\u5b9e\u4f8b\u7ed9\u6211\uff0c\u6211\u91cd\u73b0\u4e0b\u95ee\u9898\uff0c\u8c22\u8c22\u3002jerry.work@aliyun.com . \u6211\u6d4b\u8bd5\u770b\u770b\u5440. \u80fd\u5426\u63d0\u4f9b\u4e0b\u9519\u8bef\u7684\u793a\u4f8b\u5de5\u7a0b\u4ee3\u7801\uff1f\u6211\u5347\u7ea7\u5de5\u7a0b\u7684spring\u52304.3.5\uff0c\u6211\u6ca1\u91cd\u73b0\u51fa\u6765 @wanghantong @ShadowSaint. jerry.work@aliyun.com @ShadowSaint. \u4ee3\u7801\u6536\u5230\u4e86\uff0c\u76ee\u524d\u8fd8\u662f\u6ca1\u6709\u91cd\u73b0\u51fa\u6765\uff0c\u8fd8\u5728\u548c @ShadowSaint \u6c9f\u901a\u4e2d\u3002. \u7528\u7684 1.2.47 \u8fd9\u4e2a\u7248\u672c. @wenshao \u6e29\u5c11\u80fd\u5426\u62bd\u65f6\u95f4\u5e2e\u5fd9\u770b\u770b\uff0c\u4e07\u5206\u611f\u8c22. ",
    "axeon": "\u5f88\u65e9\u4e4b\u524d\u5c31\u63d0\u8fc7\u8fd9\u4e2abug\u3002\u3002\u3002 @wenshao \n314\n. ",
    "lizhangqu": "\u5c31\u662fandroid\u7684\u6700\u65b0\u7248\u5b58\u5728\u7684\u95ee\u9898\n. \u662fandroid\u5ba2\u6237\u7aef\u7684\uff1b\u8fd9\u4e2a\u8fd8\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u662f\u901a\u8fc7\u5f3a\u8f6c\uff0c\u6211\u60f3\u8ba9\u4ed6\u81ea\u52a8\u8fd4\u56de\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u8fdb\u884c\u5f3a\u8f6c\u3002\u670d\u52a1\u5668\u8fd4\u56de\u4e00\u6bb5json\uff0c\u9700\u8981\u6839\u636ejson\u4e2d\u7684\u67d0\u4e2a\u503c\u53cd\u5e8f\u5217\u5316\u4e3a\u4e0d\u540c\u7684model\uff0c\u8fd9\u4e2amodel\u4e0d\u9700\u8981\u6211\u4eec\u5e72\u9884\uff0c\u5373\u53ef\u8fd4\u56de\u5bf9\u5e94\u7684\u7c7b\u578b\u3002\u76ee\u524d\u6211\u7684\u505a\u6cd5\u662f\u901a\u8fc7ObjectDeserializer\u53bb\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u4e0d\u786e\u5b9a\u8fd9\u4e48\u505a\u6709\u6ca1\u6709\u6027\u80fd\u5f71\u54cd\u3002\n@Override\npublic Item deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n    JSONObject jsonObject = parser.parseObject();\n    Integer type = jsonObject.getInteger(\"type\");\n    Item item = null;\n    if (type == Item.TYPE_A) {\n        item = TypeUtils.castToJavaBean(jsonObject, ItemA.class);\n    } else if (type == Item.TYPE_B) {\n        item = TypeUtils.castToJavaBean(jsonObject, ItemB.class);\n    }\n    return item;\n}\n\u800c\u5bf9\u5e94\u7684Gson\u4e2d\uff0c\u5219\u4e5f\u662f\u53ef\u4ee5\u7c7b\u4f3c\u5b9e\u73b0\uff0c\u5b83\u7684\u662fJsonDeserializer. ",
    "ybbpgfjtey": "\u8fd9\u51e0\u4e2afilter\u90fd\u4e0d\u662f\u6211\u60f3\u8981\u7684\uff0c\u56e0\u4e3a1. \u6211\u8f6c\u4e49\u7684\u5bf9\u8c61\u53ef\u80fd\u6709hashmap\uff1b 2. \u901a\u7528\u7684\u5e8f\u5217\u5316\uff0c\u6ca1\u6cd5\u7ea6\u675f\u5bf9\u65b9\u4e00\u5b9a\u5199\u6ce8\u89e3\uff0c\u4e0a\u6e38\u4e5f\u6ca1\u6cd5\u6839\u636e\u5c5e\u6027\u540d\u79f0\u53e6\u884c\u5b9a\u4e49filter\u3002\nfilter\u6839\u672c\u6ca1\u6cd5\u914d\uff0c\u4e0d\u8fc7\u6211\u5df2\u7ecf\u627e\u5230\u600e\u4e48\u5f04\u4e86\uff1aSerializeConfig + ObjectSerializer\u641e\u5b9a\u3002\n\u6587\u6863\u771f\u5fc3\u6709\u70b9\u5c11\uff0c\u8fd9\u4e2a\u8fd8\u5f97\u770b\u6e90\u7801\u81ea\u5df1\u60f3\u529e\u6cd5T.T\u3002\n\u5efa\u8bae\u52a0\u4e0a\u53ef\u4ee5\u6839\u636eclass\u7b49\u5176\u4ed6\u5c5e\u6027\u5904\u7406\u7684filter\u3002\n\u53d1\u4ef6\u4eba\uff1a \u9ad8\u94c1\n\u53d1\u9001\u65f6\u95f4\uff1a 2016-02-28 16:49\n\u6536\u4ef6\u4eba\uff1a alibaba/fastjson\n\u6284\u9001\uff1a ybbpgfjtey\n\u4e3b\u9898\uff1a Re: [fastjson] \u53ef\u5426\u6839\u636eClass\uff0c\u5b9a\u5236toJSONString\u884c\u4e3a\uff1f (#481)\nec44a23\nfastjson-1.2.8\u7248\u672c\u5c06\u4f1a\u76f4\u63a5\u652f\u6301oracle.sql.Date\u548coracle.sql.TIMESTAMP\u7c7b\u578b\u3002\n\u4e4b\u524d\u5b9a\u5236\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u770b\u8fd9\u91cc\uff1ahttps://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "markzhai": "@wenshao \u6211\u77e5\u9053\u53ef\u4ee5\u90a3\u6837\u89e3\u51b3\uff0c\u53ea\u662f\u7591\u60d1\u65e2\u7136\u6211\u5df2\u7ecf\u5728\u53d8\u91cf\u4e0a\u6807\u660e\u4e86@JSONField(name = \"items\")\uff0c\u4e3a\u4f55\u4ecd\u7136\u4f1a\u53bb\u901a\u8fc7set\u65b9\u6cd5\u6765parse json field\u5462\n. ",
    "jiayeee": "\u5e94\u8be5\u662fWriteNonStringValueAsString\uff0c\u4f1a\u628a\u6240\u6709\u7684\u7c7b\u578b\u90fd\u8f6c\u6210String. \u9ad8\u94c1\u54e5\u5efa\u8bae\u4f7f\u7528ValueFilter\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4eb2\u6d4b\u53ef\u884c\n\n. ",
    "OhmygodWorks": "\u8c22\u8c22\u3002\u6211\u60f3\u518d\u95ee\u4e00\u4e0b\uff0c1.2.x\u4ee5\u540e\u589e\u52a0\u7684\u65b0\u529f\u80fd\u4f1a\u6709back port\u52301.1.46.android\u7684\u8ba1\u5212\u4e48\uff1f\n. \u8c22\u8c22\n. java\npublic final class Foo {\npublic final String bar;\n@JSONCreator\npublic Foo(@JSONField(name = \"foo\") final String bar) {\nthis.bar = bar;\n}\n}\nFoo ok = JSON.parseObject(\"{\\\"foo\\\":\\\"bar\\\"}\", Foo.class);\nFoo ng = JSON.parseArray(\"[{\\\"foo\\\":\\\"bar\\\"}]\").getObject(0, Foo.class);\n. \u8c22\u8c22\u4f60\u7684\u5bf9\u5e94\u3002. ",
    "Guang1234567": "ok, nobody answer me?\n. @myself\nGist's member is not public access permission, fastson donnot modify its member's access permission,   but Gson do this.\nIf member not public,  add the getter and setter.\n. @MarkHsiu\nYou should  \njava\nnew TypeReference<Map<String, Object>>() {}\n. \u6211\u4e3a\u4ec0\u4e48\u8981break\u5462?\n\u56e0\u4e3a\u8bfb\u5b8c \"version\"  \u8fd9\u4e2akey \u5c31\u5df2\u7ecf\u6ee1\u8db3\u6211\u7684\u4f7f\u7528\u573a\u666f, \u4e0d\u5fc5\u7ee7\u7eed\u5f80\u4e0bread\u4e86.... @wenshao \n\u8c22\u8c22\u60a8\u7684\u89e3\u7b54,  . Question 2:\nJSON_parseObject_InputStream_cn\n\u8fd9\u4e2a\u65b0\u589e\u7684\u652f\u6301\"stream\"\u7684api \u662f\u5426\u5c31\u662f\u901a\u8fc7 JSONReader \u6765\u5b9e\u73b0\u7684?. ",
    "markhsiu": "@LiHanGuang  the markdown edior cant show the  Java  Generic well.so I replace it with a picture\n. ",
    "jialechan": "\u5efa\u7acb\u4e24\u4e2apojo:\njava\npublic class CategoryPojo {\n    private String category;\n    private List<ActiveItem> tagPrice;\n    ...\njava\npublic class ActiveItem {\n    private Integer activeTagDictId;\n    private Integer activePrice;\n    ...\n}\n\u7136\u540e\u76f4\u63a5\u8c03\u7528\uff1a\njava\npublic class MyMain {\n    public static void main(String[] args) {\n        String json = \"[{\\\"category\\\": \\\"tag_foo\\\", \\\"tagPrice\\\": [{\\\"activeTagDictId\\\": 370, \\\"activePrice\\\": 39}, {\\\"activeTagDictId\\\": 371, \\\"activePrice\\\": 68}, {\\\"activeTagDictId\\\": 372, \\\"activePrice\\\": 99}]}]\";\n        List<CategoryPojo> list = JSON.parseObject(json, ArrayList.class);\n        System.out.println(list);\n    }\n}\n\u8f93\u51fa\uff1a\nshell\n[{\"tagPrice\":[{\"activePrice\":39,\"activeTagDictId\":370},{\"activePrice\":68,\"activeTagDictId\":371},{\"activePrice\":99,\"activeTagDictId\":372}],\"category\":\"tag_foo\"}]\n. @sunbeams001 Very useful and Thx!\n\u6211\u7684demo\u4f8b\u5b50\uff1ahttps://gist.github.com/jialechan/794dd90697f90abadf8f\n. ",
    "yaolei313": "\u76ee\u524d\u8fd8\u4e0d\u652f\u6301json array\u7684\u5f62\u5f0f\u7684json path\u4e48\n[\n    {\n      \"type\"  : \"iPhone\",\n      \"number\": \"0123-4567-8888\"\n    },\n    {\n      \"type\"  : \"home\",\n      \"number\": \"0123-4567-8910\"\n    }\n  ]\n\u8868\u8fbe\u5f0f\u4e3a\n$[?(@.type==\"home\")]\n\u4f1a\u62a5UnsupportedOperationException. ",
    "DvShu": "\u7528\u7684\u662fMybatis\u6846\u67b6\u3002\n. \u54e6\u54e6\uff0c\u597d\u7684\uff0c\u8c22\u8c22\uff01\n. ",
    "fynnly": "toJson\u5e8f\u5217\u5316\u65f6\u5982\u679ckey\u662fint\u578b\uff0c\u6839\u636ejson\u6807\u51c6\u5e94\u8be5\u8f6c\u5316\u4e3astring\u578b\uff0cjson\u4e0d\u652f\u6301\u5982{23:{\"a\":1}}\u7684\u683c\u5f0f\uff0c\u5e94\u8be5\u4e3a{\"23\":{\"a\":1}},\u5426\u5219\u5982php\u4e4b\u7c7b\u7684\u89e3\u6790\u5de5\u5177decode\u65f6\u4f1a\u65e0\u6cd5\u89e3\u6790\n. ",
    "chocotan": "\u55ef\u5947\u602a\u6211\u81ea\u5df1\u7535\u8111\u4e0a\u4e5f\u6ca1\u95ee\u9898.....\u660e\u5929\u4e0a\u73ed\u4e86\u6211\u518d\u9a8c\u8bc1\u4e00\u4e0b.....  : (\nspring-cloud\u8d44\u6599\u5f88\u5c11\u554a\n2016-03-01 21:38 GMT+08:00 cmonkey notifications@github.com:\n\n\u6211\u521a\u624d\u641c\u7d22spring cloud \u7684\u65f6\u5019\uff0c\u5230\u4f60blog \u4e0a\u4e86\n\u6211\u53d1\u73b0\u5728\u6211\u672c\u5730fastjson 1.2.4 / 1.2.7\u90fd\u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\n\u6211\u4f7f\u7528\u7684jdk version = 1.8.0_60\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/497#issuecomment-190727131.\n. \u8fd8\u662f\u6709\u95ee\u9898\uff0c\nwindows 10 \uff0cjava\u7248\u672c\u5982\u56fe\n\n. \n",
    "myshzzx": "\u7528\u5728\u5e93\u8868\u4e3b\u952e, \u61d2\u5f97\u7528\u5e8f\u5217\u751f\u6210\u4e3b\u952e, \u7528\u57fa\u4e8e\u65f6\u95f4\u7684\u65b9\u5f0f\u751f\u6210\u4e3b\u952e, \u51b2\u7a81\u7684\u6982\u7387\u5f88\u5c0f, \u7528\u5728\u7ba1\u7406\u7cfb\u7edf\u662f\u53ef\u4ee5\u63a5\u53d7\u7684. \u7ed3\u679c\u4e22\u5230\u9875\u9762\u53d1\u73b0\u51fa\u95ee\u9898\u4e86, \u670d\u52a1\u7aef\u8fd4\u56dejson\u6570\u636e, \u9875\u9762\u6e32\u67d3\u540eid\u592a\u5927, \u503c\u5c31\u53d8\u4e86\n(System.currentTimeMillis() * 100 + c.incrementAndGet() % 100) * 10_000 + System.nanoTime() % 10_000\n5\u79d27\u7ebf\u7a0b, \u51b2\u7a81\u7387 8/10699664\n. ",
    "hzl0820": "\u6211\u4eec\u5347\u7ea7\u81f31.2.9\u540e\uff0c\u591a\u7ebf\u7a0b\u8f6c\u6362\u65f6\u51fa\u73b0\u4e86\u65b0\u7684\u5f02\u5e38\uff0c\u91cd\u65b0\u8fd0\u884c\u95ee\u9898\u89e3\u51b3\uff1a\nCaused by: java.lang.NullPointerException\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:206) ~[fastjson-1.2.9.jar:?]\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:477) ~[fastjson-1.2.9.jar:?]\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:201) ~[fastjson-1.2.9.jar:?]\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:477) ~[fastjson-1.2.9.jar:?]\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:338) ~[fastjson-1.2.9.jar:?]\n. ",
    "BlankRain": "\u54c8\u54c8\u54c8,\u4e2d\u6587\u65b9\u6cd5\u548b\u4e86? utf8 \u95ee\u9898\u4e0d\u5927\u5427\u3002\u3002\n\u5176\u5b9e,\u6211\u4e00\u76f4\u671f\u5f85\u4e00\u95e8\u6c49\u8bed\u98ce\u683c\u7684\u7f16\u7a0b\u8bed\u8a00...\u4e0d\u662fvb\u7ffb\u7248\u51fa\u6765\u7684\u6613\u8bed\u8a00\u90a3\u79cd...\n. ",
    "LostKe": "\u627e\u5230\u4e86\uff0c\u5b9e\u73b0ObjectSerializer\u5c31\u597d\u4e86\n. ",
    "yuanmomo": "fastjson version is 1.2.7\n\u00bb java -version\njava version \"1.7.0_76\"\nJava(TM) SE Runtime Environment (build 1.7.0_76-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 24.76-b04, mixed mode)\n. @wenshao Thanks\uff0creally appreciate this.\n. ",
    "sunbeams001": "May be help\nhttps://github.com/alibaba/fastjson/wiki/ParseProcess\n. ",
    "wnli350": "@jialechan \ndemo\u6253\u4e0d\u5f00\u4e86. ",
    "ylx252": "\u5b9e\u73b0\u548c\u96be\u5ea6\u6211\u662f\u4e0d\u77e5\u9053\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u529f\u80fd\u662f\u5f88\u5b9e\u7528\u7684\u3002\n\u6162\u6162\u5f04\u5427\n. ",
    "Humor-er": "\u8fd9\u6837\u80fd\u89e3\u51b3\u8fd9\u4e2a\u9700\u6c42\uff0c\u53ea\u662f\u53c8\u53cd\u5c04\u4e86\u4e00\u4e0b\njava\n@Override\npublic void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n    if (object == null) {\n        serializer.getWriter().writeNull();\n        return;\n    }\n    String text = String.valueOf(object);\n    try {\n        Object ctxObject = serializer.getContext().getObject();\n        Field field = ctxObject.getClass().getDeclaredField(String.valueOf(fieldName));\n        Annotation annotation = field.getAnnotation(LongCurrency.class);\n        if (annotation != null) {\n            Long longVal = (Long) object;\n            text =  Money.getMoneyString(longVal);\n        }\n    } catch (Exception e) {\n    }\n    serializer.write(text);\n}\n. ",
    "suciver": "1.2.6\u4f46\u6362\u6210\u6700\u65b0\u76841.2.8\u95ee\u9898\u4ecd\u7136\u5b58\u5728\n. ",
    "hifor": "\n\u4ec0\u4e48\u7248\u672c\uff1f\n\n1.2.7\u548c1.2.8\u8bd5\u8fc7\uff0c\u5176\u4ed6\u7248\u672c\u6ca1\u6d4b\u8bd5\u8fc7\n. ",
    "lhkzh": "\u8fd9\u4e2a-\u3002- \u4f60\u8bbe\u7f6efinal \u6211\u5c31\u4e0d\u6539\u4e86\u54c8\u54c8\u3002\n\u5f53\u65f6\u8be5\u662f\uff0c\u89c9\u5f97 @ type\u5b57\u7b26\u6709\u70b9\u957f\uff0c\u624b\u8d31\uff0c\u8bd5\u8bd5\u6539\u6210\u81ea\u5b9a\u4e49\u77ed\u70b9\u7684--\u3002\n. ",
    "CrazyBeginner": "\u4f60\u597d\n. ",
    "CLAassistant": " All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  You should sign our Contributor License Agreement in order to get your pull request merged.hanyunfei_iwm seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account (for further information, click here).\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.wenshao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: tenwx:x: wanxin.twxwanxin.twx seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: tenwx:x: wanxin.twxwanxin.twx seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u5b87\u667a seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Jorn Steehouder seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: jarvan4dev:x: GongXunyaoGongXunyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.0 out of 3 committers have signed the CLA.:x: \u9ad8\u94c1:x: VictorZeng:x: wenshao\u9ad8\u94c1 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.0 out of 3 committers have signed the CLA.:x: \u9ad8\u94c1:x: VictorZeng:x: wenshao\u9ad8\u94c1 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.jian.li02 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.jian.li02 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.jian.li02 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.wsq\u6e29\u65af\u7fa4 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.yuchuan seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Bruno seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: neil4dong:x: unknownunknown seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u664b\u5143 seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.maxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.maxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: ma349432587:x: maxiaoyaomaxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.maxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.scvzerng seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.SIX Edge seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.SIX Edge seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.maxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.maxiaoyao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.linzl seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.3 out of 4 committers have signed the CLA.:white_check_mark: LNAmp:white_check_mark: Nextyo:white_check_mark: gaecfov:x: wenshaoYou have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.zhangkepeng seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u738b\u680b seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u738b\u680b seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u738b\u680b seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\u738b\u680b seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Sergio Escalante seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Leon Zeng seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.machunxiao seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it.. ",
    "czjxy881": "throw\u7c7b\n```\n/*\n * @author ShanRen(xinyu.jxy)\n * @version $Id: TestThrow.java, v 0.1 2016-06-23 4:05 PM xinyu.jxy Exp $$\n /\npublic class TestThrow extends RuntimeException {\nprivate String message;\nprivate String exception;\nprivate String javaClassName;\n\npublic TestThrow() {\n}\n\npublic TestThrow(String message, Throwable cause) {\n    super(message, cause);\n    this.message=message;\n}\n\npublic void setMessage(String message) {\n    this.message = message;\n}\npublic void setException(String exception) {\n    this.exception = exception;\n}\npublic void setJavaClassName(String javaClassName) {\n    this.javaClassName = javaClassName;\n}\npublic String getMessage() {\n    return message;\n}\npublic String getException() {\n    return exception;\n}\npublic String getJavaClassName() {\n    return javaClassName;\n}\n\n}\n```\n\u8fd0\u884c\u51fd\u6570\n```\npublic class Main {\n    public static void main(String[] args) {\n        String jsonString=\"{\\\"exception\\\":\\\"FileNotFoundException\\\",\\\"javaClassName\\\":\\\"java.io.FileNotFoundException\\\",\\\"message\\\":\\\"File does not exist: /test001/ok.jpg\\\"}\";\n        TestThrow testThrow= JSON.parseObject(jsonString,TestThrow.class);\n        System.out.println(testThrow.getMessage()); //\u6709\u503c\uff0c\u5229\u7528\u6784\u9020\u51fd\u6570\u5199\u5165\u7684\n        System.out.println(testThrow.getException()); //\u672a\u6ce8\u5165\n        System.out.println(testThrow.getJavaClassName()); //\u672a\u6ce8\u5165\n}\n\n}\n```\n\u5177\u4f53\u5206\u6790\u770b http://www.atatech.org/articles/51285\n. +1. ",
    "whitejava": "\u8d5e\u6548\u7387 :+1: \n. ",
    "cyberdak": "1.2.20\u4e0b\u9762\u662f\u8fd9\u6837\u5b50\uff0c\u81ea\u52a8\u652f\u6301\u4e86 \u4e0b\u5212\u7ebf\u8f6c\u9a7c\u5cf0\n```\npublic class Model {\n    private String messageId;\npublic String getMessageId() {\n    return messageId;\n}\n\npublic void setMessageId(String messageId) {\n    this.messageId = messageId;\n}\n\n@Override\npublic String toString() {\n    StringBuilder builder = new StringBuilder();\n    builder.append(\"Model [messageId=\").append(messageId).append(\"]\");\n    return builder.toString();\n}\n\npublic static void main(String[] args) {\n    Model model =  JSON.parseObject(\"{\\\"message_id\\\":\\\"x\\\"}\",Model.class);\n    System.out.println(model);\n}\n\n}\n```\n. \u6211\u89c9\u5f97\u697c\u4e3b\u7684case\u5e94\u8be5\u662f\u8fd9\u6837\u7684\n```\npackage com.cyberdak.fastjson;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\npublic class Model {\n    private String a;\n    private int b;\n    public String getA() {\n        return a;\n    }\n    public void setA(String a) {\n        this.a = a;\n    }\n    public int getB() {\n        return b;\n    }\n    public void setB(int b) {\n        this.b = b;\n    }\npublic Model() {\n    super();\n}\n\npublic Model(String a, int b) {\n    super();\n    this.a = a;\n    this.b = b;\n}\n\npublic static void main(String[] args) {\n    Model model = new Model(\"a\",1);\n    JSONObject obj = JSONObject.parseObject(JSON.toJSONString(model));\n    obj.put(\"b\", \"v\");\n    Model newModel = JSONObject.parseObject(obj.toString(), Model.class);\n}\n\n}\n```\n\u4f1a\u629b\u51fa\u4e00\u4e0b\u5f02\u5e38\n```\nException in thread \"main\" com.alibaba.fastjson.JSONException: For input string: \"v\"\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:625)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:339)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:243)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:456)\n    at com.cyberdak.fastjson.Model.main(Model.java:44)\nCaused by: java.lang.NumberFormatException: For input string: \"v\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Integer.parseInt(Integer.java:580)\n    at java.lang.Integer.parseInt(Integer.java:615)\n    at com.alibaba.fastjson.util.TypeUtils.castToInt(TypeUtils.java:531)\n    at com.alibaba.fastjson.serializer.IntegerCodec.deserialze(IntegerCodec.java:89)\n    at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:69)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:689)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:570)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:822)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_Model.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:621)\n    ... 4 more\n```\n\u4f46\u662f\u8fd9\u79cd\u629b\u51fa\u5f02\u5e38\u7684\u673a\u5236\u662f fail-fast \u7684\u7406\u5ff5\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a fail-fast \u4e3a false \u7684\u9009\u9879\uff1f\n. \u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u662f\u8fd9\u6837\u7684\npublic class Model {\n    private String a;\n    private int b;\n        getter&setter;\n}\npublic static void main(String[] args) {\n            Model a = new Model();\n            a.setB(1);\n            System.out.println( JSON.toJSONString(a,SerializerFeature.WriteNullStringAsEmpty,\n                    SerializerFeature.WriteNullListAsEmpty,SerializerFeature.SkipTransientField,\n                    SerializerFeature.WriteNonStringKeyAsString,SerializerFeature.WriteDateUseDateFormat,\n                    SerializerFeature.WriteNullBooleanAsFalse\n                    ));//output {\"b\":1} @ 1.2.19\n                    // output {\"a\":\"\",\"b\":1} @ 1.2.20\n        }\n. Add this to wiki ?\n. \u5148\u5173\u95edASM\u5427\uff0c\u6ca1\u6709ASM\u7684\u60c5\u51b5\u4e0b\u662f\u6b63\u5e38\u7684\u3002long\u4e5f\u53ef\u4ee5\u8f6c\u6210string. \u8fd9\u4e2acase\u6211\u8dd1\u8d77\u6765\u6ca1\u95ee\u9898\uff0c\u751a\u81f3\u662f\u75281.2.0\u8dd1\u90fd\u6ca1\u95ee\u9898.\n\u6211\u628acase \u653e\u5230 https://github.com/cyberdak/fastjson-issue \u8fd9\u4e2a\u9879\u76ee\u91cc\u9762\u4e86.  @dengyj3  \u6709\u7a7a\u770b\u770b\u6211\u7684case\u5bf9\u4e0d\u5bf9\u3002\u4f60\u590d\u5236\u5230github\u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u5bf9\uff0c\u6211\u81ea\u5df1\u8865\u5168\u4e86\u4e00\u4e0b\u3002. \u4f60\u4f7f\u7528\u76841.1.46\u662f\u4e00\u4e2a\u5f88\u53e4\u8001\u7684\u7248\u672c\uff0c\u5b83\u7684\u4f9d\u8d56 com.aliyun.odps:odps-sdk-udf:jar 0.13.0 \u7248\u672c\u5df2\u7ecf\u4ecemaven\u5e93\u4e2d\u79fb\u9664\u4e86\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6700\u65b0\u7248\u7684fastjson\u6765build\u3002\u6700\u65b0\u7684\u7248\u672c\u53f7\u662f1.2.21.\n\u5982\u679c\u6709\u7279\u6b8a\u7684\u9700\u6c42\u5fc5\u987b\u8981\u75281.1.46\u7684\u8bdd\uff0c\u53ef\u4ee5\u5347\u7ea7pom.xml\u4e2d odps-sdk-udf \u7684\u7248\u672c\u3002\nodps-sdk-udf \u7684\u6700\u65b0\u7684\u7248\u672c\u53ef\u4ee5\u4ece\u8fd9\u91cc\u770b\u3002\nhttp://mvnrepository.com/artifact/com.aliyun.odps/odps-sdk-udf. \u7248\u672c\u53f7\uff1f\u573a\u666f\uff1f\n2016-12-06 12:05 GMT+08:00 \u51af\u666f\u6da6 notifications@github.com:\n\n\u9879\u76ee\u4e2d\u4e5f\u6709\u5176\u4ed6JSON\u8f6cObject\u7684\uff0c\u90fd\u6ca1\u6709\u95ee\u9898\u3002\nP.S. \u770b\u8fc7\u53cd\u7f16\u8bd1\u4e4b\u540e\u7684\u6e90\u7801\uff0c\u8ddf\u6df7\u6dc6\u6ca1\u5173\u7cfb\uff0c\u4e0d\u77e5\u9053\u8fd9\u662fBUG\u8fd8\u662f\u6211\u54ea\u91cc\u7528\u9519\u4e86\uff1f\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/936, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKAi-8azoz6RMUzl5DIEkl-nvNVG32E8ks5rFN7vgaJpZM4LFAJk\n.\n. \u53ef\u5426\u8bbe\u7f6e\u8fdb\u884c\u4e00\u6b21warmup\uff1f\n\u5728\u5bf9\u9884\u5148\u51c6\u5907\u7684\u5dee\u4e0d\u591a\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\uff0c\u518d\u8ba9\u5e94\u7528\u5f00\u59cb\u63a5\u53d7\u8bf7\u6c42\n. \u8fd9\u79cd\u6570\u636e\u7684\u5904\u7406\u4e5f\u5f88\u7b80\u5355\u554a\uff0c\u5224\u65ad\u4e00\u4e0b\u8f6c\u6362\u51fa\u6765\u7684jsonobject\u5305\u542b\u4e0d\u5305\u542bstatus/msg\u5b57\u6bb5\u5c31\u884c\u4e86\uff0c\u5305\u542b\u5c31\u662f\u9519\u8bef\uff0c\u4e0d\u5305\u542b\u5c31\u662f\u6b63\u5e38\u4fe1\u606f\u3002\n\n\u4e00\u822c\u8fd4\u56de\u7ed3\u679c\u662f\u8bbe\u8ba1\u6210\u8fd9\u6837\u7684\u3002\n{\"code\":\"200/500/400\",\"msg\":\"success/fail/\u8bfb\u53d6\u5931\u8d25/\u8d26\u6237\u4e0d\u5b58\u5728\",\"data\":{\"\u771f\u6b63\u7684\u6570\u636e\"}}\n\u5728 2017\u5e741\u670817\u65e5 \u4e0b\u53481:15\uff0cl12ab notifications@github.com\u5199\u9053\uff1a\n\n\u6211\u9700\u8981\u4ece\u670d\u52a1\u5668\u83b7\u53d6JSON\uff0c\u7136\u540e\u5904\u7406\uff0c\u4f46\u662f\u670d\u52a1\u5668\u8be5\u63a5\u53e3\u53ef\u80fd\u8fd4\u56de\u4e24\u79cd\u7c7b\u578b\u7ed3\u6784\u6570\u636e\u3002\n1\uff1a\n{\"msg\":\"\u9519\u8bef\uff0c\u8bf7\u91cd\u8bd5\",\"status\":1}\n2\uff1a\n[\n{\"date\":\"2011-10-31\",\"expired\":\"1\",\"code\":\"1005\",\"id\":\"241167\"},\n{\"date\":\"2099-12-31\",\"expired\":\"0\",\"code\":\"10051\",\"id\":\"241169\"},\n{\"date\":\"2099-12-31\",\"expired\":\"0\",\"code\":\"10052\",\"id\":\"241170\"}\n]\n\u6211\u8be5\u5982\u4f55\u533a\u522b\u8fd9\u4e24\u79cd\u8fd4\u56de\u7ed3\u679c\u6765\u5904\u7406\uff1f\u96be\u4e0d\u6210\u53ea\u80fd\u8981\u670d\u52a1\u5668\u90a3\u8fb9\u66f4\u6539\u8fd4\u56de\u7684JSON\u6570\u636e\u7ed3\u6784\uff1f\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/1000, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKAi-8EIko2QxQeQTpByo9V4WVLtxVEjks5rTE5sgaJpZM4LlPUp\n.\n. \n",
    "LiLane": "\u60f3\u95ee\u4e00\u4e0b\uff0c\u662f\u54ea\u4e2a\u7248\u672c\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\n. ",
    "GuldanChen": "\u6211\u60f3\u95ee\u4e00\u4e0b \u5f53\u4e00\u4e2a\u5c5e\u6027id\u7c7b\u578b\u4e3aInteger\u65f6\u5019\uff0c \u6570\u636e\u51fa\u73b0\u9519\u8bef id \u53d8\u6210\u4e86\u201cabcd\u201d  \u6211\u4f7f\u7528JSON.parseObject \u65f6\u5019 \u4f1a\u62a5\u9519 parseInt error, field : id  \u8bf7\u95ee\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u8bbe\u7f6e\u4e3a\u7a7a\u5462\uff1f\u6216\u8005\u5176\u4ed6\u7684\u5bb9\u9519\u8bbe\u7f6e. ",
    "neil4dong": "@MRCHENDQ  \u628a\u8fd9\u4e2aInteger\u5b57\u6bb5\u7684setter\u65b9\u6cd5\u5199\u6210\u63a5\u6536String\u5b57\u7b26\u4e32\u7684\uff0c \u7136\u540e\u81ea\u5df1\u5224\u65ad\u4e00\u4e0b. @izern  \u4f60\u9700\u8981\u53bb\u770b\u4e00\u4e0bhibernate \u7684LazyInitializationException\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u8fd9\u4e2a\u9519\u8bef\u4e0d\u662f\u7531\u4e8eFastjson\u5bfc\u81f4\u7684\u3002 \u800c\u662ffastjson\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u8c03\u7528\u4e86\u5c5e\u6027\u7684getXXX\u65b9\u6cd5\u3002  \u4f60\u8c03\u7528\u7684\u5730\u65b9\u6216\u8005\u914d\u7f6e\u4e0d\u5bf9\u3002 \u4f60\u76f4\u63a5\u8c03\u7528getXXX\u4e5f\u662f\u4f1a\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u7684\u3002. @izern  \u4f60\u9700\u8981\u53bb\u770b\u4e00\u4e0bhibernate \u7684LazyInitializationException\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u8fd9\u4e2a\u9519\u8bef\u4e0d\u662f\u7531\u4e8eFastjson\u5bfc\u81f4\u7684\u3002 \u800c\u662ffastjson\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u8c03\u7528\u4e86\u5c5e\u6027\u7684getXXX\u65b9\u6cd5\u3002  \u4f60\u8c03\u7528\u7684\u5730\u65b9\u6216\u8005\u914d\u7f6e\u4e0d\u5bf9\u3002 \u4f60\u76f4\u63a5\u8c03\u7528getXXX\u4e5f\u662f\u4f1a\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u7684\u3002. @wenshao \u662fjavadoc\u4e2d\u5199\u4e86\u81ea\u95ed\u6807\u7b7e\u7684\u539f\u56e0. @VictorZeng https://github.com/alibaba/fastjson/pull/1342 \u4f60\u6dfb\u52a0\u7684\u8fd9\u4e2acase\u53ef\u80fd\u4e0d\u592a\u51c6\u786e\u3002 \u6211\u8c03\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u6709\u591a\u4e2aMessageBodyWriter \uff0c\u7136\u540e\u83b7\u53d6\u5230\u7684\u662fGensonJsonConverter\u5b9e\u73b0\uff0c\u6ca1\u6709\u8c03\u7528FastJsonProvider\u3002 \n\u4f46\u662f\u6211\u8c03\u8bd5\u7684\u65f6\u5019\u624b\u52a8\u6539\u4e3aFastJsonProvider\u4e5f\u6ca1\u80fd\u91cd\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002. \u771f\u662f\u5389\u5bb3\u4e86\u3002 \u770b\u6837\u5b50\u6709\u5fc5\u8981\u52a0\u4e00\u4e9b\u62a5\u6587\u957f\u5ea6\u7684\u5355\u5143\u6d4b\u8bd5. @githublaohu \u65b0\u7248\u7684FastJsonHttpMessageConverter\u662f\u652f\u6301\u7684\uff0c\u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u53d1\u5e03RELEASE. @Luckywb \u4f60\u597d\uff0c\u4f60\u5728\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u4e86\u4ec0\u4e48\u95ee\u9898\u5417\u3002   \u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2a\u5177\u4f53\u4e00\u70b9\u7684\u4f8b\u5b50\u5427\u3002  \u6682\u65f6\u6ca1\u80fd\u7406\u89e3\u4f60\u7684\u8bc9\u6c42\u3002\n. \u770b\u8d77\u6765\u50cf\u662f\u4f60\u5199\u9519\u4e86. \u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u5355\u5143\u6d4b\u8bd5\u5417\u3002 \u4fe1\u606f\u91cf\u6709\u70b9\u5c11\u3002 . \u4e0d\u6307\u5b9a\u7684\u8bdd\u9ed8\u8ba4\u4f1a\u4f7f\u7528FastJsonConfig \u91cc\u8fb9\u7684charset \uff0c\u9ed8\u8ba4\u662fUTF-8\u3002 \u4e0d\u592a\u786e\u5b9a\u4f60\u7684\u4f7f\u7528\u573a\u666f\uff0c \u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u80fd\u8dd1\u7684\u5355\u5143\u6d4b\u8bd5\u5417. \u5347\u7ea7\u5230\u6700\u65b0\u7684 1.2.36 \u7248\u672c\u5c1d\u8bd5\u4e00\u4e0b\u5462\u3002 \u4f30\u8ba1\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u88ab\u89e3\u51b3\u4e86\u3002. \u8fd9\u4e2a\u529f\u80fd\u662f\u6ca1\u6709\u7684\u3002 \u65e2\u7136\u7528String\u63a5\u6536\u4e86\u3002 \u4f60\u4e5f\u4e0d\u5728\u4e4e\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u5e26\u4e86\u5f15\u53f7\u6ca1\u6709\u5427\u3002  \u5efa\u8bae\u6821\u9a8c\u5c31\u4f7f\u7528beanvalidation jsr303 \u6216\u8005jsr349\u4e2d\u7684\u529f\u80fd\u6765\u6821\u9a8c\u662f\u4e0d\u662f\u4f60\u8981\u7684\u5b57\u7b26\u4e32\u5c31\u884c\u4e86\u3002 \n\u4ece\u8fd9\u70b9\u6765\u770b\uff0c\u6709\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\u662f\u65e0\u6240\u8c13\u7684. \u8bbe\u7f6e\u9519\u4e86\u5427 \u662f\nJSON.DEFAULT_GENERATE_FEATURE |= SerializerFeature.DisableCircularReferenceDetect.getMask();\n\u4eb2\u6d4b\u53ef\u7528. \u5982\u679c\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\u5185\u6709\u975e\u6cd5\u5b57\u7b26\uff0c\u90a3\u8fd9\u5c31\u4e0d\u662f\u4e00\u4e2a\u6b63\u786e\u7684json\u5b57\u7b26\u4e32\u3002 . @wenshao \u4e0d\u662f\u8bf4\u5728openjdk\u4e5f\u6709\u95ee\u9898\u5417\u3002 \u6240\u4ee5\u5982\u679c\u9a8c\u8bc1\u786e\u8ba4\u6709\u95ee\u9898\uff0c \u90a3\u4e48\u6240\u6709\u5206\u652f\u90fd\u662f\u9700\u8981\u4fee\u590d\u7684. \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u57281.7\u4ee5\u524d\u7684\u7248\u672c\u6709\u95ee\u9898\u5427\u3002  . JSON.parseObject(json, new TypeReference>( theClassOfT) );\nIn case of more than one ParameterizedType :\nJSON.parseObject(json, new TypeReference>( theClassOfT, theClassOfB) );. @ZYRzyr  \u4f60\u5c1d\u8bd5\u8dd1\u4e00\u4e0b\u8fd9\u4e2atestcase\u8bd5\u8bd5\u5462\u3002 \u770b\u8ddf\u4f60\u7684\u6709\u6ca1\u6709\u5dee\u5f02\u5462. \u8fd9\u4e2a\u5c5e\u4e8ejava\u8bed\u8a00\u7684\u7279\u6027\u54c8\u3002  \u7236\u7c7b\u7684private \u7684\u5c5e\u6027\uff0c \u5728\u5b50\u7c7b\u662f\u4e0d\u53ef\u89c1\u7684. \u770b\u8d77\u6765\u6709\u6ca1\u6709\u5224\u65ad\u90fd\u662f\u4e00\u6837\u7684\u54e6\u3002   \u65e2\u7136\u7528\u4e86\u8fd9\u4e2aJSONPObject \u5c31\u662fjsonp\u4e86. contentType\u662fapplication/json \u4f46\u662f\u8fd4\u56de\u7684\u5185\u5bb9\u5176\u5b9e\u662f\u4e2ajavascript \uff0c\u4f60\u4eec\u524d\u7aef\u90fd\u6ca1\u6709\u95ee\u9898\u5417\uff1f \n\u5982\u679cJSONPObject\u4e2d\u7684function\u5b57\u6bb5\u4e3anull\u6216\u8005\"\" \n\u5c31\u4f1a\u8fd4\u56de\u6570\u636e\nnull({}) \u6216\u8005 ({}). \u63d0\u4f9b\u4e00\u4e0b\u65e7\u7248\u672c\u7684\u7248\u672c\u53f7\u5462\u3002 \u6211\u770b\u4e0b\u80fd\u4e0d\u80fd\u505a\u4e2a\u517c\u5bb9\u3002 . see #1538 \n1538 \u505a\u4e86\u65b0\u7684\u4fee\u6539\uff0c ResponseJSONP\u53ef\u4ee5\u6ce8\u89e3\u5728\u7c7b\u4e0a\u9762\u3002\nMappingFastJsonValue\u6539\u56de\u4e86\u539f\u6765\u5bf9jsonpFunction\u7684\u975e\u7a7a\u5224\u65ad\u3002\nrevert \u4e86\u4e4b\u524d\u4e00\u4f4d\u670b\u53cb\u5bf9JSONPObject\u7684\u4fee\u6539\u3002. \u89e3\u51b3\u65b9\u6848\uff1a\n\n\u5347\u7ea7\u5230Swagger\u65b0\u7248\u672c\u3002\u6211\u770b\u4e86\u65b0\u7248\u672c\u7684swagger\u5df2\u7ecf\u4f7f\u7528\u81ea\u5df1\u7684json\u5e8f\u5217\u5316\u5de5\u5177\u4e86\uff08jackson\uff09\u3002\n\u6216\u8005\uff1a\n2.\u4e0d\u8981\u914d\u7f6e\u5168\u5c40\u7684PropertyNamingStrategy\uff0c \u914d\u7f6e\u4e00\u4e2a\u4e13\u95e8\u7684SerializeConfig \u7ed9FastJsonHttpMessageConverter\n\n\n. \u8fc7\u6ee4\u5668\u662f\u6839\u636e\u7c7b\u578b\u8fc7\u6ee4\u7684\u3002 \u914d\u7f6eUser.class \u7684 \u201cpaswd\u201d \u5b57\u6bb5\u4e3a\u8fc7\u6ee4\u5c31\u53ef\u4ee5\u4e86\ncom.alibaba.fastjson.serializer.SimplePropertyPreFilter. #1538 \u505a\u4e86\u65b0\u7684\u4fee\u6539\uff0c ResponseJSONP\u53ef\u4ee5\u6ce8\u89e3\u5728\u7c7b\u4e0a\u9762\u3002\nMappingFastJsonValue\u6539\u56de\u4e86\u539f\u6765\u5bf9jsonpFunction\u7684\u975e\u7a7a\u5224\u65ad\u3002. \u64cd\u4f5c\u5931\u8bef\u4e86\n\u3002\u3002. \u7531\u4e8e\u4e00\u822c\u60c5\u51b5\u4e0bString \u90fd\u662f\u4f5c\u4e3akey \u6216\u8005value\u6765\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u503c\u662f\u9700\u8981\u5f15\u53f7\u7684 \u201chere is content\u201d  ,\n\u603b\u7684\u6765\u8bf4\u8fd9\u4e2a\u4e0d\u662f\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c \u56e0\u4e3a\u76f4\u63a5\u8fd4\u56deString\u4e5f\u4e0d\u4e00\u4e2a\u7684JSON\u683c\u5f0f\uff0c \u5efa\u8bae\u4f7f\u7528response\u76f4\u63a5 write\uff0c\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5982\u679c\u60f3\u77e5\u9053\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u770b\u4e00\u4e0b com.alibaba.fastjson.serializer.StringCodec. \u8fd9\u4e2a\u8fd8\u662f\u6709\u5fc5\u8981\u505a\u4e00\u4e0b\u5904\u7406\u3002   \u4e0d\u7136\u7528\u6237\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528String\u6765\u8fd4\u56dejson\u5b57\u7b26\u4e32\u4e86\u3002 \n\u6211\u6253\u7b97\u5728\u4e0b\u4e2a\u7248\u672c\u8c03\u6574\u8fd9\u4e2a\u95ee\u9898. \u5176\u5b9e\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3aString\u7684\u65f6\u5019\uff0c \u6ca1\u6709\u5f15\u53f7\u624d\u662f\u5927\u5bb6\u4e00\u81f4\u6240\u671f\u671b\u7684\u3002 \n\u4f46\u662f\u53ef\u80fd\u6709\u4e9b\u4eba\u5df2\u7ecf\u5bf9\u4e4b\u524d\u6709\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\u505a\u8fc7\u5904\u7406\u3002\u6240\u4ee5\u4fee\u6539\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u517c\u5bb9\u3002. \u7f16\u8bd1\u76ee\u6807\u7248\u672c\u662f1.5\uff0c \u4f60\u53ef\u4ee5\u770b\u4e00\u4e0bmaven\u7684\u914d\u7f6e\u3002 . #1568 fixed. \u6211\u6bd4\u8f83\u559c\u6b22\u7b80\u5355\u7c97\u66b4\u7684\u8fd4\u56deObject\u3002  \u4f46\u662f\u5982\u679c\u4f60\u4e00\u5b9a\u7684\u8981\u627e\u4e2a\u7236\u7c7b\u6765\u8fd4\u56de\uff0c \u4f60\u8fd4\u56deJSON\u4e5f\u662f\u53ef\u4ee5\u7684\u3002JSONObject/JSONArray\u90fd\u662f\u7ee7\u627f\u62bd\u8c61\u7c7b JSON\u7684 . \u5b9e\u9645\u4e0a\u4e0d\u592a\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cd\u9700\u6c42\uff0c \u8fd9\u6837\u5bf9\u5ba2\u6237\u7aef\u4e0d\u53cb\u597d. \u4f60\u662f\u6307\u7684\u5ba2\u6237\u7aef\u53cd\u5e8f\u5217\u5316\u5427\uff0c \u800c\u4e0d\u662f\u670d\u52a1\u7aef\u5e8f\u5217\u5316. \u90a3\u8fd9\u4e2a\u95ee\u9898\u548cFastJson\u65e0\u5173\u7684\u561b\u3002. \u90a3\u8fd9\u4e2a\u95ee\u9898\u548cFastJson\u65e0\u5173\u7684\u561b\u3002. \u6211\u4e5f\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002  1.2.47\u4e5f\u662f\u3002 . \u6211\u4e5f\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002  1.2.47\u4e5f\u662f\u3002 . I consider this as a bug. \nThe build-in support for JDK8 java.time package is also not effected by format field.\nsee getPropertyValue() in fastjson/src/main/java/com/alibaba/fastjson/serializer/FieldSerializer.java . I consider this as a bug. \nThe build-in support for JDK8 java.time package is also not effected by format field.\nsee getPropertyValue() in fastjson/src/main/java/com/alibaba/fastjson/serializer/FieldSerializer.java . \u4f7f\u7528\u8fd9\u4e2a\u7c7b\u66ff\u4ee3https://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/support/spring/JSONPResponseBodyAdvice.java. \u4f7f\u7528\u8fd9\u4e2a\u7c7b\u66ff\u4ee3https://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/support/spring/JSONPResponseBodyAdvice.java. \u5b57\u7b26\u4e32\u65f6\u95f4\u662f\u4ee50\u65f6\u533a\u683c\u5f0f\u5316\u51fa\u6765\u7684\uff0c\u5b57\u7b26\u4e32\u672c\u8eab\u4e0d\u5e26\u65f6\u533a\uff0c\u5982\u679c\u670d\u52a1\u5668\u4ee5+8\u65f6\u533a\u53bb\u89e3\u6790\u5b57\u7b26\u4e32 \u5c31\u81ea\u7136\u4f1a\u591a8\u4e2a\u5c0f\u65f6\u554a\u3002 \u6211\u8fd9\u4e48\u7406\u89e3\u7684. \u5b57\u7b26\u4e32\u65f6\u95f4\u662f\u4ee50\u65f6\u533a\u683c\u5f0f\u5316\u51fa\u6765\u7684\uff0c\u5b57\u7b26\u4e32\u672c\u8eab\u4e0d\u5e26\u65f6\u533a\uff0c\u5982\u679c\u670d\u52a1\u5668\u4ee5+8\u65f6\u533a\u53bb\u89e3\u6790\u5b57\u7b26\u4e32 \u5c31\u81ea\u7136\u4f1a\u591a8\u4e2a\u5c0f\u65f6\u554a\u3002 \u6211\u8fd9\u4e48\u7406\u89e3\u7684. \u8fd9\u4e2a\u4fdd\u7559\u5427\u3002 \u8fd9\u4e2a\u662fspring\u7684\u4f9d\u8d56\u3002 spring\u5f3a\u4f9d\u8d56\u3002. \u7528\u7684\u662fspring\u7684Assert. \u8fd9\u91cc\u6f0f\u6389\u4e86\uff0c\u5df2\u4fee\u6539. \u7b2c\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u662f\u4e4b\u524d\u5c31\u6709\u7684\u3002    \u800c\u4e14\u6211\u4e5f\u6ca1\u6253\u7b97\u7ef4\u62a4\u4e86\u3002    \u7b2c\u4e8c\u4e2a\u70b9\u6211\u662f\u8fd9\u6837\u770b\u7684\uff1amappingfastjsonvalue \u662f\u4ee5\u524d\u7684\u903b\u8f91\uff0c\u4fdd\u6301\u4e0d\u53d8\u3002   \u7136\u540ejsonpobject\u8fd9\u4e2a\u7c7b\u672c\u672c\u6765\u4e4b\u524d\u5c31\u4e0d\u652f\u6301\u4e0d\u5199function\u5c31\u8fd4\u56dejson\uff0c \u6240\u4ee5\u4e0d\u5b58\u5728\u5411\u540e\u517c\u5bb9\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u6253\u7b97\u652f\u6301\u8fd9\u79cd\u4e0d\u89c4\u8303\u7684\u7528\u6cd5\u4e86\u3002. ",
    "wiipsp": "\u8d5e\uff01\uff01\n. ",
    "zuoliangliang": "\n\n. \u7528\u7684\u662f1.2.9BigDecimal\u8fd8\u6709\u95ee\u9898\n. \u6362\u6210Double\u5c31\u53ef\u4ee5\u4e86\n. \u8bf7\u95ee\u600e\u4e48\u53d6\u6d88\u9ed8\u8ba4\u90fd\u4f7f\u7528bigDecimal\n. ",
    "dijkspicy": "\u8c22\u5566\n. ",
    "wangsuicheng": "\u6bd4\u5982\u6211\u7684bean\u7c7b\u91cc\u6709\u4e2aA\u7c7b\uff0c\u53ea\u60f3\u60f3\u628a\u8fd9\u4e2aA\u7c7b\u91cc\u7684\u67d0\u4e00\u4e9b\u5c5e\u6027\u53d8\u6210String\u6216\u8005Integer\u8f93\u51fa\u5230jsonString\u91cc \uff0c\u800c\u4e0d\u662f\u6574\u4e2aA\u7c7b\u3002\n\u4f8b\u5982\uff1a\npublic class LocationConverter extends TypeConverter {\n```\npublic String getValue(Location model) {\n    return model == null ? null : String.valueOf(model.getLatitude()) + \",\" + model.getLongitude();\n}\npublic Location putValue(String data) {\n    String[] values = data.split(\",\");\n    if(values.length < 2) {\n        return null;\n    } else {\n        Location location = new Location(\"\");\n        location.setLatitude(Double.parseDouble(values[0]));\n        location.setLongitude(Double.parseDouble(values[1]));\n        return location;\n    }\n}\n```\n}\n. public class A{\n   ...\n  List<B> listVar\n   ...\n}\npublic class B{\n   ...\n   @JSONField(serialize = true,  deserialize = false)\nSpec spec;//\u6765\u81ea\u67d0\u4e00\u4e2ajar\u5305\uff0c\u6ca1\u6709\u63d0\u4f9b\u65e0\u53c2\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5373public Spec(){}\n   ...\n}\n\u5982\u679c\u6211deserialize\u4e86\u8fd9\u4e2afiled\uff0c\u90a3\u4e48\u5728fastjson\u91cc\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5c31\u4e0d\u8be5\u53bbnew Spec()\u4e86\u5427\uff0c\u4e0d\u7136\u80af\u5b9a\u9047\u5230\n\u9519\u8befSpec default constructor not found\uff0c\u4f60\u4eec\u540e\u7eed\u7684\u7248\u672c\u80fd\u5224\u65ad\u5982\u679c\u67d0\u4e2afield deserialize\u4e86\uff0c\u5c31\u4e0d\u7528\u53bbnew xxx() \u4e86\u5427\uff1f\n. 1.1.68.android\u8fd9\u4e2a\u7248\u672c\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f. ",
    "mrdaios": "@wenshao \u4f60\u597d\uff0c\u4e4b\u524d\u95ee\u9898\u6ca1\u63cf\u8ff0\u6e05\u695a\u3002\n\u6211\u7684\u610f\u601d\u662ftoJSONString\u7684\u65f6\u5019JavaBean\u91cc\u9762\u7684\u6709\u5c5e\u6027\u662fList\u6216\u8005List<TestModel>,json\u540e\u7684\u6570\u636e\u90fd\u5e26\u4e0a{\"@type\":\"xx.TestModel\"}\u5417\uff1f\u521a\u521a\u67e5\u8be2\u4e86DisableSpecialKeyDetect\u8fd9\u4e2a\u662f\u89e3\u6790\u7684\u65f6\u5019\u7528\u7684\u5462\uff1f\u8c22\u8c22\n. @wenshao \u4f60\u597d\uff0c\n\u6211\u73b0\u5728\u7684\u5904\u7406\u65b9\u5f0f\u662f\u628aASMSerializerFactory.java\u7684_list\u65b9\u6cd5\u4e2d\njava\n//  if (elementType instanceof Class<?>) {\n//            elementClass = (Class<?>) elementType;\n//        }\n\u628aelementClass\u9ed8\u8ba4\u4e3anull\u3002\u8fd9\u6837\u4e0b\u9762\u7684\u903b\u8f91\u5c31\u751f\u6210\u4e86@type\n. ",
    "feng-ming": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u901a\u8fc7php \u7684json_encode \u8f6c\u5316\u6210\u6807\u51c6json\u683c\u5f0f\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u8fc7\u5927\uff0c\u5219\u4f1a\u62a5 \u201cnot match : expect :\u201d \u9519\u8bef\u3002\n. ",
    "JackFish": "\u8fd9\u4e48\u5927\u4e2abug\u3002\u3002\u3002\n. ",
    "adaJQD": "@wenshao 2015.7.30\u4e4b\u524d\u7684\u7248\u672c \u5177\u4f53\u7248\u672c\u53f7\u4e0d\u6e05\u695a\n. ",
    "kangkona": "Done 2  android branch.\n. ",
    "wangwenyou": "\u62b1\u6b49\uff0c\u8bf4\u5f97\u592a\u7b80\u7565\u4e86\uff0c\u662f\u8fd4\u56de\u7ed9\u524d\u7aef\u4f7f\u7528\u7684\u3002\nwriteLong\u7684\u5224\u65ad\u662f\nif ((isEnabled(SerializerFeature.BrowserCompatible)) && (!isEnabled(SerializerFeature.WriteClassName)))\n\u5f00\u59cb\u542f\u7528\u4e86BrowserCompatible\uff0c\u53d1\u73b02.6M\u7684String to JSON\u7528\u4e8637\u79d2\uff0c\u800c\u5173\u95edBrowserCompatible\u53ea\u9700\u8981\u51e0\u767e\u6beb\u79d2\uff1b\u800c\u4e14BrowserCompatible\u7684\u4e2d\u6587\u8f6c\u7801\u6211\u4e5f\u4e0d\u9700\u8981\u3002\n\u6240\u4ee5\u5173\u95edBrowserCompatible\u4f7f\u7528ValueFilter\u6765\u81ea\u5df1\u5904\u7406\uff0c\u4f46ValueFilter/NameFilter\u4f3c\u4e4e\u662fMap\u4e13\u7528\u7684\uff0c\nJSON.toJSONString(object,new ValueFilter() {\n        // Write Number as String\n        @Override\n        public Object process(Object object, String name, Object value) {\n            if(value instanceof Number && !(value instanceof Integer)){\n                return String.valueOf(value);\n            }\n            return value;\n        }\n    },SerializerFeature.DisableCircularReferenceDetect,\n    // SerializerFeature.BrowserCompatible,\n    SerializerFeature.WriteDateUseDateFormat,\n    SerializerFeature.WriteMapNullValue);\n}\n. ",
    "40lsgy1": "\u989d\uff0c\u8fd9\u4e48\u5de7\uff0c\u597d\u5427\n. ",
    "kamikat": "That is, 1.1.x and 1.2.x are just different release branches?\n. ",
    "ctyytc": "\u8fd9\u4e2a\u9519\u8bef\u662f1.1.48\u7248\u672c\u51fa\u73b0\u7684log\uff0c1.1.49\u7248\u672c\u7684\u9519\u8bef\u65e5\u5fd7\u6211\u6ca1\u6709\u8d34\u51fa\u6765\n. ",
    "codecov-io": "Current coverage is 86.34%\n\nMerging #556 into master will decrease coverage by -0.12% as of 65e676c\n\ndiff\n@@            master    #556   diff @@\n======================================\n  Files          108     108       \n  Stmts        14951   14971    +20\n  Branches      3529    3530     +1\n  Methods          0       0       \n======================================\n  Hit          12927   12927       \n  Partial        746     746       \n- Missed        1278    1298    +20\n\nReview entire Coverage Diff as of 65e676c\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 86.34%\nMerging #557 into master will decrease coverage by -0.12% as of 214539f\n\ndiff\n@@            master    #557   diff @@\n======================================\n  Files          108     108       \n  Stmts        14951   14971    +20\n  Branches      3529    3530     +1\n  Methods          0       0       \n======================================\n  Hit          12927   12927       \n  Partial        746     746       \n- Missed        1278    1298    +20\n\nReview entire Coverage Diff as of 214539f\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 86.27%\nMerging #558 into master will decrease coverage by -0.19% as of bb21d0b\n\ndiff\n@@            master    #558   diff @@\n======================================\n  Files          108     108       \n  Stmts        14951   14983    +32\n  Branches      3529    3532     +3\n  Methods          0       0       \n======================================\n  Hit          12927   12927       \n  Partial        746     746       \n- Missed        1278    1310    +32\n\nReview entire Coverage Diff as of bb21d0b\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 86.35%\nMerging #563 into master will decrease coverage by -0.12% as of f9e7dbb\n\ndiff\n@@            master    #563   diff @@\n======================================\n  Files          109     109       \n  Stmts        14943   14971    +28\n  Branches      3548    3549     +1\n  Methods          0       0       \n======================================\n+ Hit          12922   12928     +6\n- Partial        751     752     +1\n- Missed        1270    1291    +21\n\nReview entire Coverage Diff as of f9e7dbb\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 86.56%\nMerging #571 into master will not affect coverage as of d5f35a9\n\ndiff\n@@            master    #571   diff @@\n======================================\n  Files          106     106       \n  Stmts        14746   14746       \n  Branches      3480    3480       \n  Methods          0       0       \n======================================\n  Hit          12765   12765       \n  Partial        744     744       \n  Missed        1237    1237\n\nReview entire Coverage Diff as of d5f35a9\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 92.98%\nMerging #608 into master will decrease coverage by -<.01%\n\ndiff\n@@             master       #608   diff @@\n==========================================\n  Files           107        107          \n  Lines         15486      15489     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3576       3575     -1   \n==========================================\n+ Hits          14399      14401     +2   \n  Misses          471        471          \n- Partials        616        617     +1\n\nPowered by Codecov. Last updated by 9c4325d...fbb0266\n. ## Current coverage is 92.98%\nMerging #608 into master will decrease coverage by -<.01%\n\ndiff\n@@             master       #608   diff @@\n==========================================\n  Files           107        107          \n  Lines         15486      15489     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3576       3575     -1   \n==========================================\n+ Hits          14399      14401     +2   \n  Misses          471        471          \n- Partials        616        617     +1\n\nPowered by Codecov. Last updated by 9c4325d...fbb0266\n. ## Current coverage is 93.07%\nMerging #625 into master will not change coverage\n\ndiff\n@@             master       #625   diff @@\n==========================================\n  Files           108        108          \n  Lines         15609      15609          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3603       3603          \n==========================================\n  Hits          14527      14527          \n  Misses          468        468          \n  Partials        614        614\n\nPowered by Codecov. Last updated by ce9f04a...2f8c9dd\n. ## Current coverage is 93.00%\nMerging #635 into master will increase coverage by <.01%\n\ndiff\n@@             master       #635   diff @@\n==========================================\n  Files           108        108          \n  Lines         15773      15776     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3648       3648          \n==========================================\n+ Hits          14667      14671     +4   \n  Misses          475        475          \n+ Partials        631        630     -1\n\nPowered by Codecov. Last updated by 6c6a411...8a1e3d9\n. ## Current coverage is 92.61%\nMerging #686 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #686   diff @@\n==========================================\n  Files           108        108          \n  Lines         15886      15899    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3671       3675     +4   \n==========================================\n  Hits          14725      14725          \n- Misses          521        534    +13   \n  Partials        640        640\n\nPowered by Codecov. Last updated by 8d6e905...2e3a974\n. ## Current coverage is 92.61%\nMerging #686 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #686   diff @@\n==========================================\n  Files           108        108          \n  Lines         15886      15899    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3671       3675     +4   \n==========================================\n  Hits          14725      14725          \n- Misses          521        534    +13   \n  Partials        640        640\n\nPowered by Codecov. Last updated by 8d6e905...2e3a974\n. ## Current coverage is 92.61%\nMerging #687 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #687   diff @@\n==========================================\n  Files           108        108          \n  Lines         15886      15899    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3671       3675     +4   \n==========================================\n  Hits          14725      14725          \n- Misses          521        534    +13   \n  Partials        640        640\n\nPowered by Codecov. Last updated by 8d6e905...46fd1b6\n. ## Current coverage is 92.61%\nMerging #687 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #687   diff @@\n==========================================\n  Files           108        108          \n  Lines         15886      15899    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3671       3675     +4   \n==========================================\n  Hits          14725      14725          \n- Misses          521        534    +13   \n  Partials        640        640\n\nPowered by Codecov. Last updated by 8d6e905...46fd1b6\n. ## Current coverage is 92.38%\nMerging #716 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #716   diff @@\n==========================================\n  Files           108        109     +1   \n  Lines         15971      15990    +19   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3701       3701          \n==========================================\n+ Hits          14771      14772     +1   \n- Misses          549        567    +18   \n  Partials        651        651\n\nPowered by Codecov. Last updated by 7960781...12ade0d\n. ## Current coverage is 92.15%\nMerging #731 into master will not change coverage\n\ndiff\n@@             master       #731   diff @@\n==========================================\n  Files           108        108          \n  Lines         16177      16177          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3766       3766          \n==========================================\n  Hits          14908      14908          \n  Misses          594        594          \n  Partials        675        675\n\nPowered by Codecov. Last updated by 93d1c59...444d85c\n. ## Current coverage is 92.15% (diff: 100%)\nMerging #736 into master will not change coverage\n\ndiff\n@@             master       #736   diff @@\n==========================================\n  Files           108        108          \n  Lines         16177      16177          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3766       3766          \n==========================================\n  Hits          14908      14908          \n  Misses          594        594          \n  Partials        675        675\n\nPowered by Codecov. Last update 80400e5...2d97a0e\n. ## Current coverage is 92.15% (diff: 100%)\nMerging #737 into master will not change coverage\n\ndiff\n@@             master       #737   diff @@\n==========================================\n  Files           108        108          \n  Lines         16177      16177          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3766       3766          \n==========================================\n  Hits          14908      14908          \n  Misses          594        594          \n  Partials        675        675\n\nPowered by Codecov. Last update 80400e5...b31c404\n. ## Current coverage is 92.07% (diff: 90.00%)\nMerging #738 into master will decrease coverage by 0.08%\n\ndiff\n@@             master       #738   diff @@\n==========================================\n  Files           108        108          \n  Lines         16177      16213    +36   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3766       3781    +15   \n==========================================\n+ Hits          14908      14928    +20   \n- Misses          594        608    +14   \n- Partials        675        677     +2\n\nPowered by Codecov. Last update 80400e5...289db2e\n. ## Current coverage is 91.63% (diff: 100%)\nMerging #789 into master will not change coverage\n\ndiff\n@@             master       #789   diff @@\n==========================================\n  Files           111        111          \n  Lines         16410      16410          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3845       3845          \n==========================================\n  Hits          15038      15038          \n  Misses          659        659          \n  Partials        713        713\n\nPowered by Codecov. Last update fac1398...226cf08\n. ## Current coverage is 91.57% (diff: 0.00%)\nMerging #790 into master will decrease coverage by 0.06%\n\ndiff\n@@             master       #790   diff @@\n==========================================\n  Files           111        112     +1   \n  Lines         16410      16421    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3845       3848     +3   \n==========================================\n  Hits          15038      15038          \n- Misses          659        670    +11   \n  Partials        713        713\n\nPowered by Codecov. Last update fac1398...1b25601\n. ## Current coverage is 91.64% (diff: 100%)\nMerging #809 into master will not change coverage\n\ndiff\n@@             master       #809   diff @@\n==========================================\n  Files           111        111          \n  Lines         16429      16429          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3853       3853          \n==========================================\n  Hits          15056      15056          \n  Misses          658        658          \n  Partials        715        715\n\nPowered by Codecov. Last update 7aa2f4a...0850a31\n. ## Current coverage is 91.62% (diff: 100%)\nMerging #813 into master will not change coverage\n\ndiff\n@@             master       #813   diff @@\n==========================================\n  Files           111        111          \n  Lines         16478      16478          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3866       3866          \n==========================================\n  Hits          15098      15098          \n  Misses          662        662          \n  Partials        718        718\n\nPowered by Codecov. Last update 59d52da...6459bd8\n. ## Current coverage is 91.62% (diff: 100%)\nMerging #848 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #848   diff @@\n==========================================\n  Files           114        114          \n  Lines         16566      16567     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3878       3878          \n==========================================\n- Hits          15180      15179     -1   \n- Misses          665        666     +1   \n- Partials        721        722     +1\n\nPowered by Codecov. Last update 959bbca...cf38c9b\n. ## Current coverage is 91.62% (diff: 100%)\nMerging #852 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #852   diff @@\n==========================================\n  Files           114        114          \n  Lines         16566      16567     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3878       3878          \n==========================================\n- Hits          15180      15179     -1   \n- Misses          665        666     +1   \n- Partials        721        722     +1\n\nPowered by Codecov. Last update a09dca3...22aa694\n. ## Current coverage is 91.61% (diff: 100%)\nMerging #881 into master will not change coverage\n\ndiff\n@@             master       #881   diff @@\n==========================================\n  Files           114        114          \n  Lines         16631      16631          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3896       3896          \n==========================================\n  Hits          15237      15237          \n  Misses          672        672          \n  Partials        722        722\n\nPowered by Codecov. Last update e1614b5...3d4a7a2\n. ## Current coverage is 91.62% (diff: 100%)\nNo coverage report found for master at 053f130.\nPowered by Codecov. Last update 053f130...ee0a94f\n. ## Current coverage is 91.49% (diff: 0.00%)\nMerging #902 into master will decrease coverage by 0.04%\n\ndiff\n@@             master       #902   diff @@\n==========================================\n  Files           114        114          \n  Lines         16690      16691     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3920       3919     -1   \n==========================================\n- Hits          15279      15272     -7   \n- Misses          684        692     +8   \n  Partials        727        727\n\nPowered by Codecov. Last update 2d59425...aefe3bc\n. ## Current coverage is 91.46% (diff: 66.66%)\nMerging #920 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #920   diff @@\n==========================================\n  Files           114        114          \n  Lines         16724      16725     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3927       3927          \n==========================================\n  Hits          15297      15297          \n  Misses          695        695          \n- Partials        732        733     +1\n\nPowered by Codecov. Last update 335a7ab...ba0d1ad. ## Current coverage is 91.41% (diff: 0.00%)\nMerging #940 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #940   diff @@\n==========================================\n  Files           114        114          \n  Lines         16720      16724     +4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3926       3929     +3   \n==========================================\n  Hits          15289      15289          \n- Misses          700        704     +4   \n  Partials        731        731\n\nPowered by Codecov. Last update a0a2f8f...3999ee9. ## Current coverage is 91.43% (diff: 72.72%)\nMerging #941 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #941   diff @@\n==========================================\n  Files           114        114          \n  Lines         16720      16713     -7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3926       3926          \n==========================================\n- Hits          15289      15282     -7   \n+ Misses          700        693     -7   \n- Partials        731        738     +7\n\nPowered by Codecov. Last update a0a2f8f...e1e49f6. ## Current coverage is 91.42% (diff: 75.00%)\nMerging #947 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #947   diff @@\n==========================================\n  Files           114        114          \n  Lines         16713      16715     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3927       3928     +1   \n==========================================\n  Hits          15281      15281          \n- Misses          693        694     +1   \n- Partials        739        740     +1\n\nPowered by Codecov. Last update d29b6dd...8a1ae11. ## Current coverage is 91.43% (diff: 100%)\nMerging #949 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #949   diff @@\n==========================================\n  Files           114        114          \n  Lines         16715      16714     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3928       3927     -1   \n==========================================\n+ Hits          15280      15282     +2   \n+ Misses          694        692     -2   \n+ Partials        741        740     -1\n\nPowered by Codecov. Last update 3bb7773...f35a2e6. ## Current coverage is 91.47% (diff: 100%)\nMerging #968 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #968   diff @@\n==========================================\n  Files           114        114          \n  Lines         16759      16758     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       3941       3941          \n==========================================\n+ Hits          15324      15330     +6   \n+ Misses          695        688     -7   \n  Partials        740        740\n\nPowered by Codecov. Last update 739360b...f99f402. # Codecov Report\nMerging #1057 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1057      +/-\n===========================================\n+ Coverage     89.99%     90%   +0.01%   \n- Complexity     5107    5108       +1   \n===========================================\n  Files           116     116            \n  Lines         17330   17335       +5   \n  Branches       3789    3789            \n===========================================\n+ Hits          15596   15603       +7   \n+ Misses          907     906       -1   \n+ Partials        827     826       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.48% <100%> (+0.79%) | 108 <0> (+1) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 490213c...e441620. Read the comment docs.. # Codecov Report\nMerging #1070 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1070   +/-\n========================================\n  Coverage      86.8%   86.8%         \n  Complexity     5238    5238         \n========================================\n  Files           122     122         \n  Lines         18362   18362         \n  Branches       4043    4043         \n========================================\n  Hits          15939   15939         \n  Misses         1547    1547         \n  Partials        876     876\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b62e546...cb32475. Read the comment docs.. # Codecov Report\nMerging #1098 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1098      +/-\n============================================\n- Coverage     86.83%   86.81%   -0.02%   \n+ Complexity     5269     5266       -3   \n============================================\n  Files           122      122            \n  Lines         18459    18459            \n  Branches       4071     4071            \n============================================\n- Hits          16028    16025       -3   \n- Misses         1545     1547       +2   \n- Partials        886      887       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 85.33% <100%> (\u00f8) | 31 <0> (\u00f8) | :arrow_down: |\n| ...main/java/com/alibaba/fastjson/util/FieldInfo.java | 84.52% <0%> (-0.4%) | 69% <0%> (-2%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 86.39% <0%> (-0.2%) | 369% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d4de727...18d3836. Read the comment docs.. # Codecov Report\nMerging #1133 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1133      +/-\n============================================\n- Coverage     86.88%   86.86%   -0.02%   \n+ Complexity     5328     5325       -3   \n============================================\n  Files           122      122            \n  Lines         18591    18591            \n  Branches       4113     4113            \n============================================\n- Hits          16153    16150       -3   \n- Misses         1534     1536       +2   \n- Partials        904      905       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.54% <0%> (-1.3%) | 44% <0%> (-1%) | |\n| ...main/java/com/alibaba/fastjson/util/FieldInfo.java | 84.82% <0%> (-0.39%) | 71% <0%> (-2%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 683b02e...1077ec5. Read the comment docs.. # Codecov Report\nMerging #1136 into master will decrease coverage by 0.06%.\nThe diff coverage is 6.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1136      +/-\n============================================\n- Coverage     86.88%   86.82%   -0.07%   \n- Complexity     5328     5330       +2   \n============================================\n  Files           122      122            \n  Lines         18591    18606      +15   \n  Branches       4113     4115       +2   \n============================================\n+ Hits          16153    16154       +1   \n- Misses         1534     1547      +13   \n- Partials        904      905       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSON.java | 88.31% <6.66%> (-3.65%) | 110 <0> (+1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b81533...5d600c5. Read the comment docs.. # Codecov Report\nMerging #1215 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1215      +/-\n============================================\n+ Coverage     86.43%   86.48%   +0.05%   \n- Complexity     5371     5372       +1   \n============================================\n  Files           123      123            \n  Lines         18819    18805      -14   \n  Branches       4171     4164       -7   \n============================================\n- Hits          16266    16264       -2   \n+ Misses         1613     1606       -7   \n+ Partials        940      935       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/serializer/MapSerializer.java | 74.24% <100%> (+5.06%) | 42 <0> (\u00f8) | :arrow_down: |\n| ...ibaba/fastjson/serializer/SerializeFilterable.java | 95.93% <0%> (+0.81%) | 65% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c4fd5b...b753371. Read the comment docs.\n. # Codecov Report\nMerging #1216 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1216      +/-\n============================================\n+ Coverage     86.41%   86.43%   +0.01%   \n- Complexity     5369     5371       +2   \n============================================\n  Files           123      123            \n  Lines         18817    18819       +2   \n  Branches       4171     4171            \n============================================\n+ Hits          16261    16266       +5   \n+ Misses         1614     1613       -1   \n+ Partials        942      940       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSONPath.java | 78.57% <100%> (+0.03%) | 162 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 89.07% <0%> (+0.28%) | 129% <0%> (+1%) | :arrow_up: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bd2f7cb...dc7e7e0. Read the comment docs.\n. # Codecov Report\nMerging #1218 into master will increase coverage by 0.02%.\nThe diff coverage is 67.74%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1218      +/-\n============================================\n+ Coverage     86.43%   86.45%   +0.02%   \n- Complexity     5371     5407      +36   \n============================================\n  Files           123      126       +3   \n  Lines         18819    18893      +74   \n  Branches       4171     4178       +7   \n============================================\n+ Hits          16266    16334      +68   \n- Misses         1613     1632      +19   \n+ Partials        940      927      -13\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../support/spring/FastJsonHttpMessageConverter4.java | 96.96% <100%> (+0.96%) | 8 <0> (+1) | :arrow_up: |\n| ...ba/fastjson/support/spring/PropertyPreFilters.java | 42.85% <42.85%> (\u00f8) | 3 <3> (?) | |\n| ...aba/fastjson/support/spring/FastJsonContainer.java | 77.77% <77.77%> (\u00f8) | 4 <4> (?) | |\n| ...support/spring/FastJsonViewResponseBodyAdvice.java | 87.5% <87.5%> (\u00f8) | 7 <7> (?) | |\n| ...r/deserializer/ArrayListTypeFieldDeserializer.java | 74.73% <0%> (-10.53%) | 19% <0%> (\u00f8) | |\n| ...com/alibaba/fastjson/parser/DefaultJSONParser.java | 95.21% <0%> (\u00f8) | 285% <0%> (+1%) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 88.47% <0%> (+0.19%) | 680% <0%> (+2%) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c4fd5b...319a687. Read the comment docs.\n. # Codecov Report\nMerging #1237 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1237   +/-\n=========================================\n  Coverage     86.48%   86.48%         \n  Complexity     5372     5372         \n=========================================\n  Files           123      123         \n  Lines         18805    18805         \n  Branches       4164     4164         \n=========================================\n  Hits          16264    16264         \n  Misses         1606     1606         \n  Partials        935      935\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.35% <100%> (\u00f8) | 386 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2b7dfda...e3a60cc. Read the comment docs.\n. # Codecov Report\nMerging #1238 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1238      +/-\n============================================\n+ Coverage     86.48%   86.48%   +<.01%   \n- Complexity     5372     5374       +2   \n============================================\n  Files           123      123            \n  Lines         18805    18807       +2   \n  Branches       4164     4165       +1   \n============================================\n+ Hits          16264    16266       +2   \n  Misses         1606     1606            \n  Partials        935      935\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.37% <100%> (+0.02%) | 388 <0> (+2) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2b7dfda...c51a77d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a2f2212). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1239   +/-\n========================================\n  Coverage          ?   86.5%         \n  Complexity        ?    5390         \n========================================\n  Files             ?     123         \n  Lines             ?   18832         \n  Branches          ?    4173         \n========================================\n  Hits              ?   16291         \n  Misses            ?    1614         \n  Partials          ?     927\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2f2212...7005481. Read the comment docs.\n. # Codecov Report\nMerging #1248 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1248   +/-\n=========================================\n  Coverage     86.43%   86.43%         \n  Complexity     5410     5410         \n=========================================\n  Files           126      126         \n  Lines         18899    18899         \n  Branches       4182     4182         \n=========================================\n  Hits          16336    16336         \n  Misses         1634     1634         \n  Partials        929      929\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../parser/deserializer/AbstractDateDeserializer.java | 85.52% <100%> (\u00f8) | 16 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 00433b1...94a0c9e. Read the comment docs.\n. # Codecov Report\nMerging #1257 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1257   +/-\n=========================================\n  Coverage     86.37%   86.37%         \n  Complexity     5437     5437         \n=========================================\n  Files           126      126         \n  Lines         18996    18996         \n  Branches       4209     4209         \n=========================================\n  Hits          16407    16407         \n  Misses         1648     1648         \n  Partials        941      941\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 04ef571...3dd2cd6. Read the comment docs.\n. # Codecov Report\nMerging #1260 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1260   +/-\n=========================================\n  Coverage     86.37%   86.37%         \n  Complexity     5437     5437         \n=========================================\n  Files           126      126         \n  Lines         18996    18996         \n  Branches       4209     4209         \n=========================================\n  Hits          16407    16407         \n  Misses         1648     1648         \n  Partials        941      941\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c603f93...f83a32c. Read the comment docs.\n. # Codecov Report\nMerging #1280 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1280      +/-\n============================================\n- Coverage     86.35%   86.34%   -0.01%   \n  Complexity     5445     5445            \n============================================\n  Files           126      126            \n  Lines         19017    19019       +2   \n  Branches       4217     4218       +1   \n============================================\n  Hits          16422    16422            \n- Misses         1653     1654       +1   \n- Partials        942      943       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...json/parser/deserializer/JavaBeanDeserializer.java | 88.36% <100%> (-0.26%) | 227 <0> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d68ef5...a01133f. Read the comment docs.\n. # Codecov Report\nMerging #1284 into master will increase coverage by <.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1284      +/-\n============================================\n+ Coverage     86.34%   86.34%   +<.01%   \n  Complexity     5445     5445            \n============================================\n  Files           126      126            \n  Lines         19019    19018       -1   \n  Branches       4218     4217       -1   \n============================================\n  Hits          16422    16422            \n+ Misses         1654     1653       -1   \n  Partials        943      943\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...json/parser/deserializer/JavaBeanDeserializer.java | 88.61% <\u00f8> (+0.25%) | 226 <0> (-1) | :arrow_down: |\n| ...om/alibaba/fastjson/serializer/JSONSerializer.java | 89.01% <0%> (-0.58%) | 74 <0> (+1) | |\n| ...alibaba/fastjson/serializer/SerializerFeature.java | 92.85% <100%> (+0.12%) | 9 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ecc72cf...0db4602. Read the comment docs.\n. # Codecov Report\nMerging #1291 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1291      +/-\n============================================\n+ Coverage     86.34%   86.35%   +0.01%   \n  Complexity     5445     5445            \n============================================\n  Files           126      126            \n  Lines         19023    19022       -1   \n  Branches       4218     4218            \n============================================\n+ Hits          16425    16427       +2   \n+ Misses         1654     1653       -1   \n+ Partials        944      942       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...alibaba/fastjson/serializer/SerializerFeature.java | 92.72% <100%> (-0.13%) | 9 <0> (\u00f8) | |\n| ...om/alibaba/fastjson/serializer/JSONSerializer.java | 89.59% <100%> (+0.57%) | 73 <0> (-1) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5d0bf26...d4deda8. Read the comment docs.\n. # Codecov Report\nMerging #1294 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1294      +/-\n============================================\n+ Coverage     86.35%   86.36%   +0.01%   \n- Complexity     5445     5446       +1   \n============================================\n  Files           126      126            \n  Lines         19022    19022            \n  Branches       4218     4218            \n============================================\n+ Hits          16427    16429       +2   \n+ Misses         1653     1651       -2   \n  Partials        942      942\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...json/parser/deserializer/JavaBeanDeserializer.java | 88.9% <0%> (+0.28%) | 227% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d3d8d23...5a08400. Read the comment docs.\n. # Codecov Report\nMerging #1304 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1304      +/-\n============================================\n+ Coverage     86.29%   86.29%   +<.01%   \n  Complexity     5448     5448            \n============================================\n  Files           126      126            \n  Lines         19047    19047            \n  Branches       4230     4230            \n============================================\n+ Hits          16436    16437       +1   \n+ Misses         1658     1657       -1   \n  Partials        953      953\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.1% <0%> (+0.18%) | 404% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10a21cd...3caa1e0. Read the comment docs.\n. # Codecov Report\nMerging #1308 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1308      +/-\n============================================\n- Coverage     86.31%   86.29%   -0.02%   \n+ Complexity     5450     5449       -1   \n============================================\n  Files           126      126            \n  Lines         19047    19047            \n  Branches       4230     4230            \n============================================\n- Hits          16440    16437       -3   \n- Misses         1656     1658       +2   \n- Partials        951      952       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/FieldInfo.java | 86.64% <100%> (+0.38%) | 73 <0> (+1) | :arrow_up: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 84.92% <0%> (-0.19%) | 403% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0c3e9a6...c807e7d. Read the comment docs.\n. # Codecov Report\nMerging #1328 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1328   +/-\n=========================================\n  Coverage     86.05%   86.05%         \n  Complexity     5468     5468         \n=========================================\n  Files           127      127         \n  Lines         19184    19184         \n  Branches       4264     4264         \n=========================================\n  Hits          16509    16509         \n  Misses         1715     1715         \n  Partials        960      960\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/alibaba/fastjson/serializer/MiscCodec.java | 87.19% <100%> (\u00f8) | 52 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f30f51c...026734b. Read the comment docs.\n. # Codecov Report\nMerging #1328 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1328   +/-\n=========================================\n  Coverage     86.05%   86.05%         \n  Complexity     5468     5468         \n=========================================\n  Files           127      127         \n  Lines         19184    19184         \n  Branches       4264     4264         \n=========================================\n  Hits          16509    16509         \n  Misses         1715     1715         \n  Partials        960      960\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/alibaba/fastjson/serializer/MiscCodec.java | 87.19% <100%> (\u00f8) | 52 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f30f51c...026734b. Read the comment docs.\n. # Codecov Report\nMerging #1331 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1331      +/-\n============================================\n- Coverage     86.05%   86.04%   -0.02%   \n+ Complexity     5468     5467       -1   \n============================================\n  Files           127      127            \n  Lines         19184    19184            \n  Branches       4264     4264            \n============================================\n- Hits          16509    16507       -2   \n- Misses         1715     1716       +1   \n- Partials        960      961       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 82.3% <100%> (\u00f8) | 101 <2> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/util/IdentityHashMap.java | 100% <100%> (\u00f8) | 14 <1> (\u00f8) | :arrow_down: |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 84.92% <0%> (-0.19%) | 403% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 77fa39f...8edfa90. Read the comment docs.\n. # Codecov Report\nMerging #1331 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1331      +/-\n============================================\n- Coverage     86.05%   86.04%   -0.02%   \n+ Complexity     5468     5467       -1   \n============================================\n  Files           127      127            \n  Lines         19184    19184            \n  Branches       4264     4264            \n============================================\n- Hits          16509    16507       -2   \n- Misses         1715     1716       +1   \n- Partials        960      961       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 82.3% <100%> (\u00f8) | 101 <2> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/util/IdentityHashMap.java | 100% <100%> (\u00f8) | 14 <1> (\u00f8) | :arrow_down: |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 84.92% <0%> (-0.19%) | 403% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 77fa39f...8edfa90. Read the comment docs.\n. # Codecov Report\nMerging #1337 into master will decrease coverage by 0.01%.\nThe diff coverage is 87.36%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1337      +/-\n============================================\n- Coverage     86.05%   86.04%   -0.02%   \n- Complexity     5468     5476       +8   \n============================================\n  Files           127      128       +1   \n  Lines         19184    19162      -22   \n  Branches       4264     4257       -7   \n============================================\n- Hits          16509    16487      -22   \n- Misses         1715     1716       +1   \n+ Partials        960      959       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../fastjson/support/spring/MappingFastJsonValue.java | 77.77% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...support/spring/FastJsonViewResponseBodyAdvice.java | 87.5% <0%> (\u00f8) | 8 <2> (+1) | :arrow_up: |\n| ...support/spring/FastJsonpHttpMessageConverter4.java | 100% <100%> (+2.04%) | 8 <8> (-7) | :arrow_down: |\n| ...on/support/spring/FastJsonpResponseBodyAdvice.java | 85.18% <100%> (\u00f8) | 11 <1> (\u00f8) | :arrow_down: |\n| .../support/spring/FastJsonHttpMessageConverter4.java | 100% <100%> (+3.03%) | 8 <8> (\u00f8) | :arrow_down: |\n| ...stjson/support/spring/JSONPResponseBodyAdvice.java | 85.71% <85.71%> (\u00f8) | 5 <5> (?) | |\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 90% <85.71%> (+10%) | 33 <15> (+9) | :arrow_up: |\n| ...json/parser/deserializer/JavaBeanDeserializer.java | 86.56% <0%> (-0.63%) | 223% <0%> (-7%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.06% <0%> (-0.05%) | 409% <0%> (+5%) | |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3302cc9...f0d6f19. Read the comment docs.\n. # Codecov Report\nMerging #1342 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1342      +/-\n============================================\n- Coverage     86.05%   86.04%   -0.02%   \n+ Complexity     5478     5477       -1   \n============================================\n  Files           128      128            \n  Lines         19162    19162            \n  Branches       4257     4257            \n============================================\n- Hits          16490    16488       -2   \n- Misses         1715     1716       +1   \n- Partials        957      958       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.06% <0%> (-0.18%) | 409% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2c6cc2...96f55fc. Read the comment docs.\n. # Codecov Report\nMerging #1346 into master will increase coverage by <.01%.\nThe diff coverage is 86.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1346      +/-\n============================================\n+ Coverage     86.04%   86.05%   +<.01%   \n- Complexity     5477     5479       +2   \n============================================\n  Files           128      128            \n  Lines         19162    19168       +6   \n  Branches       4257     4258       +1   \n============================================\n+ Hits          16488    16495       +7   \n+ Misses         1716     1715       -1   \n  Partials        958      958\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 83.95% <86.66%> (-1.39%) | 32 <1> (+1) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.24% <0%> (+0.17%) | 410% <0%> (+1%) | :arrow_up: |\n| ...libaba/fastjson/support/config/FastJsonConfig.java | 100% <0%> (+5%) | 21% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cdbd255...1f28f84. Read the comment docs.\n. # Codecov Report\nMerging #1348 into master will decrease coverage by <.01%.\nThe diff coverage is 80%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1348      +/-\n============================================\n- Coverage     86.05%   86.05%   -0.01%   \n- Complexity     5479     5480       +1   \n============================================\n  Files           128      129       +1   \n  Lines         19167    19172       +5   \n  Branches       4258     4259       +1   \n============================================\n+ Hits          16495    16498       +3   \n  Misses         1715     1715            \n- Partials        957      959       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...fastjson/support/jaxrs/JerseyAutoDiscoverable.java | 80% <80%> (\u00f8) | 2 <2> (?) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2486f9c...9ea1e61. Read the comment docs.\n. # Codecov Report\nMerging #1350 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1350   +/-\n=========================================\n  Coverage     86.05%   86.05%         \n  Complexity     5481     5481         \n=========================================\n  Files           129      129         \n  Lines         19172    19172         \n  Branches       4259     4259         \n=========================================\n  Hits          16499    16499         \n  Misses         1715     1715         \n  Partials        958      958\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be8e759...ccda6c7. Read the comment docs.\n. # Codecov Report\nMerging #1351 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1351      +/-\n============================================\n- Coverage     86.05%   86.05%   -0.01%   \n+ Complexity     5481     5479       -2   \n============================================\n  Files           129      129            \n  Lines         19172    19170       -2   \n  Branches       4259     4258       -1   \n============================================\n- Hits          16499    16496       -3   \n  Misses         1715     1715            \n- Partials        958      959       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 83.54% <\u00f8> (-0.41%) | 31 <0> (-1) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be8e759...6afdf1c. Read the comment docs.\n. # Codecov Report\nMerging #1352 into master will decrease coverage by 0.05%.\nThe diff coverage is 37.5%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1352      +/-\n============================================\n- Coverage     86.03%   85.97%   -0.06%   \n- Complexity     5486     5490       +4   \n============================================\n  Files           129      129            \n  Lines         19202    19226      +24   \n  Branches       4265     4270       +5   \n============================================\n+ Hits          16520    16530      +10   \n- Misses         1721     1731      +10   \n- Partials        961      965       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...baba/fastjson/support/spring/FastJsonJsonView.java | 80.41% <37.5%> (-14.11%) | 29 <4> (+4) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 88.88% <0%> (-0.28%) | 129% <0%> (-1%) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 75c3d5a...33ffea0. Read the comment docs.\n. # Codecov Report\nMerging #1353 into master will increase coverage by 0.01%.\nThe diff coverage is 57.89%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1353      +/-\n============================================\n+ Coverage     85.98%   85.99%   +0.01%   \n- Complexity     5491     5497       +6   \n============================================\n  Files           129      129            \n  Lines         19226    19235       +9   \n  Branches       4270     4273       +3   \n============================================\n+ Hits          16531    16542      +11   \n+ Misses         1731     1727       -4   \n- Partials        964      966       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...baba/fastjson/support/spring/FastJsonJsonView.java | 89.47% <42.85%> (+9.06%) | 32 <0> (+3) | :arrow_up: |\n| ...stjson/support/spring/JSONPResponseBodyAdvice.java | 72.22% <60%> (-13.5%) | 5 <1> (\u00f8) | |\n| ...c/main/java/com/alibaba/fastjson/util/IOUtils.java | 82.9% <71.42%> (-0.21%) | 111 <4> (+4) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f162b0...6513d71. Read the comment docs.\n. # Codecov Report\nMerging #1354 into master will decrease coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1354      +/-\n============================================\n- Coverage     86.04%   85.95%   -0.09%   \n+ Complexity     5515     5514       -1   \n============================================\n  Files           129      130       +1   \n  Lines         19316    19333      +17   \n  Branches       4288     4288            \n============================================\n- Hits          16620    16618       -2   \n- Misses         1723     1741      +18   \n- Partials        973      974       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...stjson/support/spring/FastJsonRedisSerializer.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.4% <0%> (-0.18%) | 414% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1a76328...70c24d7. Read the comment docs.\n. # Codecov Report\nMerging #1355 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1355      +/-\n===========================================\n- Coverage     85.96%   85.9%   -0.06%   \n  Complexity     5515    5515            \n===========================================\n  Files           130     131       +1   \n  Lines         19333   19346      +13   \n  Branches       4288    4288            \n===========================================\n  Hits          16620   16620            \n- Misses         1740    1753      +13   \n  Partials        973     973\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...support/spring/GenericFastJsonRedisSerializer.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8ef93e9...22d9dc9. Read the comment docs.\n. # Codecov Report\nMerging #1356 into master will increase coverage by 0.12%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1356      +/-\n============================================\n+ Coverage      85.9%   86.03%   +0.12%   \n- Complexity     5515     5530      +15   \n============================================\n  Files           131      131            \n  Lines         19346    19346            \n  Branches       4288     4288            \n============================================\n+ Hits          16620    16645      +25   \n+ Misses         1753     1730      -23   \n+ Partials        973      971       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...c/main/java/com/alibaba/fastjson/util/IOUtils.java | 83.41% <0%> (+0.51%) | 112% <0%> (+1%) | :arrow_up: |\n| src/main/java/com/alibaba/fastjson/JSON.java | 90.77% <0%> (+0.57%) | 112% <0%> (+1%) | :arrow_up: |\n| ...stjson/support/spring/FastJsonRedisSerializer.java | 58.82% <0%> (+58.82%) | 6% <0%> (+6%) | :arrow_up: |\n| ...support/spring/GenericFastJsonRedisSerializer.java | 84.61% <0%> (+84.61%) | 7% <0%> (+7%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ca01db0...7f630ca. Read the comment docs.\n. # Codecov Report\nMerging #1359 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1359      +/-\n============================================\n- Coverage     86.03%   86.02%   -0.02%   \n+ Complexity     5530     5529       -1   \n============================================\n  Files           131      131            \n  Lines         19346    19346            \n  Branches       4288     4288            \n============================================\n- Hits          16645    16643       -2   \n- Misses         1730     1731       +1   \n- Partials        971      972       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...support/spring/GenericFastJsonRedisSerializer.java | 84.61% <100%> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aa814de...91ea274. Read the comment docs.\n. # Codecov Report\nMerging #1372 into master will decrease coverage by 0.09%.\nThe diff coverage is 37.83%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1372     +/-\n===========================================\n- Coverage     85.71%   85.61%   -0.1%   \n- Complexity     5581     5587      +6   \n===========================================\n  Files           131      131           \n  Lines         19575    19610     +35   \n  Branches       4371     4382     +11   \n===========================================\n+ Hits          16779    16790     +11   \n- Misses         1811     1830     +19   \n- Partials        985      990      +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...baba/fastjson/support/spring/FastJsonJsonView.java | 89.47% <\u00f8> (\u00f8) | 32 <0> (\u00f8) | :arrow_down: |\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 75.55% <37.83%> (-14.45%) | 39 <8> (+6) | |\n| ...fastjson/support/jaxrs/JerseyAutoDiscoverable.java | 60% <0%> (-20%) | 2% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1af975f...0fcb2ee. Read the comment docs.\n. # Codecov Report\nMerging #1394 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1394      +/-\n============================================\n+ Coverage      85.3%   85.34%   +0.03%   \n- Complexity     5683     5687       +4   \n============================================\n  Files           134      134            \n  Lines         20104    20104            \n  Branches       4489     4489            \n============================================\n+ Hits          17150    17157       +7   \n+ Misses         1921     1918       -3   \n+ Partials       1033     1029       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...baba/fastjson/serializer/ASMSerializerFactory.java | 97.27% <0%> (+0.14%) | 199% <0%> (+1%) | :arrow_up: |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.6% <0%> (+0.24%) | 444% <0%> (+2%) | :arrow_up: |\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 80.26% <0%> (+0.52%) | 106% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5e9d542...33f7ada. Read the comment docs.\n. # Codecov Report\nMerging #1395 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1395      +/-\n============================================\n+ Coverage     85.33%   85.34%   +0.01%   \n+ Complexity     5686     5685       -1   \n============================================\n  Files           134      133       -1   \n  Lines         20104    20099       -5   \n  Branches       4489     4488       -1   \n============================================\n- Hits          17155    17154       -1   \n+ Misses         1919     1917       -2   \n+ Partials       1030     1028       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de37fb2...b06e849. Read the comment docs.\n. # Codecov Report\nMerging #1396 into master will increase coverage by 0.01%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1396      +/-\n============================================\n+ Coverage     85.33%   85.35%   +0.01%   \n- Complexity     5686     5697      +11   \n============================================\n  Files           134      135       +1   \n  Lines         20104    20124      +20   \n  Branches       4489     4493       +4   \n============================================\n+ Hits          17155    17176      +21   \n+ Misses         1919     1918       -1   \n  Partials       1030     1030\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 85.22% <100%> (+1.68%) | 35 <6> (+4) | :arrow_up: |\n| ...libaba/fastjson/support/jaxrs/FastJsonFeature.java | 80% <66.66%> (\u00f8) | 4 <1> (?) | |\n| ...stjson/support/jaxrs/FastJsonAutoDiscoverable.java | 83.33% <83.33%> (\u00f8) | 4 <4> (?) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de37fb2...cac8ef7. Read the comment docs.\n. # Codecov Report\nMerging #1417 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1417      +/-\n============================================\n- Coverage     85.27%   85.26%   -0.01%   \n+ Complexity     5852     5851       -1   \n============================================\n  Files           135      135            \n  Lines         20725    20725            \n  Branches       4661     4661            \n============================================\n- Hits          17673    17672       -1   \n  Misses         1967     1967            \n- Partials       1085     1086       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 86.42% <100%> (\u00f8) | 49 <0> (\u00f8) | :arrow_down: |\n| ...baba/fastjson/serializer/ASMSerializerFactory.java | 96.98% <100%> (\u00f8) | 199 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.21% <100%> (-0.21%) | 164 <0> (-1) | |\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 80.32% <100%> (\u00f8) | 118 <0> (\u00f8) | :arrow_down: |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.69% <100%> (\u00f8) | 451 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6feb056...0c073a0. Read the comment docs.\n. # Codecov Report\nMerging #1427 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1427      +/-\n===========================================\n- Coverage        83%     83%   -0.01%   \n- Complexity     5940    5945       +5   \n===========================================\n  Files           135     135            \n  Lines         21692   21702      +10   \n  Branches       4923    4927       +4   \n===========================================\n+ Hits          18005   18013       +8   \n- Misses         2488    2489       +1   \n- Partials       1199    1200       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 85.64% <\u00f8> (-0.05%) | 455 <0> (+4) | |\n| ...baba/fastjson/serializer/ASMSerializerFactory.java | 96.98% <100%> (\u00f8) | 199 <0> (\u00f8) | :arrow_down: |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 83.78% <100%> (\u00f8) | 157 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.42% <100%> (\u00f8) | 166 <92> (\u00f8) | :arrow_down: |\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 86.42% <100%> (\u00f8) | 49 <0> (\u00f8) | :arrow_down: |\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 80.32% <100%> (\u00f8) | 118 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update abcbc40...601844f. Read the comment docs.\n. # Codecov Report\nMerging #1430 into master will decrease coverage by 0.2%.\nThe diff coverage is 95%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1430      +/-\n===========================================\n- Coverage      82.4%   82.2%   -0.21%   \n- Complexity     5949    5956       +7   \n===========================================\n  Files           136     137       +1   \n  Lines         21880   21947      +67   \n  Branches       4973    4987      +14   \n===========================================\n+ Hits          18031   18042      +11   \n- Misses         2647    2696      +49   \n- Partials       1202    1209       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 83.86% <88.88%> (+0.07%) | 158 <4> (+1) | :arrow_up: |\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 80.16% <92.3%> (-0.17%) | 119 <4> (+1) | |\n| ...com/alibaba/fastjson/util/IdentityWeakHashMap.java | 98.41% <98.41%> (\u00f8) | 24 <24> (?) | |\n| ...ava/com/alibaba/fastjson/util/IdentityHashMap.java | 0% <0%> (-100%) | 0% <0%> (-14%) | |\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 87.75% <0%> (-1.38%) | 366% <0%> (-6%) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 83.54% <0%> (-0.16%) | 454% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.49% <0%> (+0.06%) | 783% <0%> (+2%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1b3e303...1c10c3a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@29ed34b). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1432   +/-\n=========================================\n  Coverage          ?   82.91%         \n  Complexity        ?     5948         \n=========================================\n  Files             ?      135         \n  Lines             ?    21740         \n  Branches          ?     4941         \n=========================================\n  Hits              ?    18025         \n  Misses            ?     2513         \n  Partials          ?     1202\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 83.69% <0%> (\u00f8) | 455 <0> (?) | |\n| .../main/java/com/alibaba/fastjson/TypeReference.java | 90.32% <0%> (\u00f8) | 8 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29ed34b...e46fcd7. Read the comment docs.\n. # Codecov Report\nMerging #1490 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1490      +/-\n============================================\n- Coverage     82.84%   82.83%   -0.02%   \n+ Complexity     6007     6004       -3   \n============================================\n  Files           136      136            \n  Lines         21982    21982            \n  Branches       5009     5009            \n============================================\n- Hits          18212    18209       -3   \n- Misses         2534     2540       +6   \n+ Partials       1236     1233       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.42% <0%> (-0.1%) | 781% <0%> (-3%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0818ecf...13c5ed8. Read the comment docs.\n. # Codecov Report\nMerging #1491 into master will decrease coverage by <.01%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1491      +/-\n============================================\n- Coverage     82.84%   82.83%   -0.01%   \n- Complexity     6007     6009       +2   \n============================================\n  Files           136      136            \n  Lines         21982    21987       +5   \n  Branches       5009     5012       +3   \n============================================\n+ Hits          18212    18214       +2   \n  Misses         2534     2534            \n- Partials       1236     1239       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 75% <50%> (-0.56%) | 40 <0> (+1) | |\n| ...rc/main/java/com/alibaba/fastjson/JSONPObject.java | 90.32% <50%> (-5.98%) | 13 <0> (+1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0818ecf...10eae33. Read the comment docs.\n. # Codecov Report\nMerging #1495 into master will decrease coverage by <.01%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1495      +/-\n============================================\n- Coverage     82.82%   82.82%   -0.01%   \n- Complexity     6008     6010       +2   \n============================================\n  Files           136      136            \n  Lines         21991    21996       +5   \n  Branches       5012     5014       +2   \n============================================\n+ Hits          18214    18218       +4   \n- Misses         2540     2542       +2   \n+ Partials       1237     1236       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 89.14% <100%> (\u00f8) | 373 <3> (+1) | :arrow_up: |\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 86.8% <86.95%> (+0.37%) | 50 <14> (+1) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.48% <0%> (-0.04%) | 783% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac7e495...8bd9765. Read the comment docs.\n. # Codecov Report\nMerging #1501 into master will decrease coverage by 0.01%.\nThe diff coverage is 45.94%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1501      +/-\n============================================\n- Coverage     82.78%   82.76%   -0.02%   \n+ Complexity     6015     6010       -5   \n============================================\n  Files           136      136            \n  Lines         22008    22019      +11   \n  Branches       5021     5023       +2   \n============================================\n+ Hits          18220    18225       +5   \n- Misses         2548     2551       +3   \n- Partials       1240     1243       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 73.46% <45.94%> (-1.54%) | 35 <1> (-5) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.52% <0%> (+0.03%) | 785% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b55cdd4...fe8c660. Read the comment docs.\n. # Codecov Report\nMerging #1506 into master will decrease coverage by <.01%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1506      +/-\n============================================\n- Coverage     82.79%   82.78%   -0.01%   \n+ Complexity     6026     6025       -1   \n============================================\n  Files           136      136            \n  Lines         22043    22049       +6   \n  Branches       5034     5034            \n============================================\n+ Hits          18250    18253       +3   \n  Misses         2552     2552            \n- Partials       1241     1244       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...son/parser/deserializer/ThrowableDeserializer.java | 92% <83.33%> (-0.56%) | 32 <0> (\u00f8) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 89.05% <0%> (-0.09%) | 371% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.52% <0%> (+0.03%) | 785% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d35a1a1...4fc5587. Read the comment docs.\n. # Codecov Report\nMerging #1507 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1507      +/-\n============================================\n+ Coverage     82.79%   82.79%   +<.01%   \n  Complexity     6027     6027            \n============================================\n  Files           136      136            \n  Lines         22049    22051       +2   \n  Branches       5034     5034            \n============================================\n+ Hits          18256    18258       +2   \n  Misses         2551     2551            \n  Partials       1242     1242\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSON.java | 91.08% <100%> (+0.02%) | 117 <0> (\u00f8) | :arrow_down: |\n| ...ba/fastjson/parser/deserializer/Jdk8DateCodec.java | 72.15% <100%> (+0.1%) | 66 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3860da...958cd4c. Read the comment docs.\n. # Codecov Report\nMerging #1508 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1508   +/-\n=========================================\n  Coverage     82.79%   82.79%         \n  Complexity     6027     6027         \n=========================================\n  Files           136      136         \n  Lines         22051    22051         \n  Branches       5034     5034         \n=========================================\n  Hits          18258    18258         \n  Misses         2551     2551         \n  Partials       1242     1242\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10766c9...11753b8. Read the comment docs.\n. # Codecov Report\nMerging #1516 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1516      +/-\n============================================\n+ Coverage     82.79%   82.79%   +<.01%   \n- Complexity     6031     6032       +1   \n============================================\n  Files           136      136            \n  Lines         22056    22060       +4   \n  Branches       5041     5042       +1   \n============================================\n+ Hits          18261    18265       +4   \n  Misses         2550     2550            \n  Partials       1245     1245\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 86.8% <100%> (+0.37%) | 50 <0> (+1) | :arrow_up: |\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 89.13% <100%> (\u00f8) | 372 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cbc2bf5...997a5f0. Read the comment docs.\n. # Codecov Report\nMerging #1537 into master will decrease coverage by 0.03%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1537      +/-\n============================================\n- Coverage     82.75%   82.72%   -0.04%   \n+ Complexity     6055     6048       -7   \n============================================\n  Files           136      136            \n  Lines         22116    22105      -11   \n  Branches       5062     5061       -1   \n============================================\n- Hits          18302    18286      -16   \n- Misses         2559     2566       +7   \n+ Partials       1255     1253       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rc/main/java/com/alibaba/fastjson/JSONPObject.java | 74.07% <\u00f8> (-16.25%) | 9 <0> (-4) | |\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 69.84% <100%> (-3.63%) | 29 <0> (-6) | |\n| ...stjson/support/spring/JSONPResponseBodyAdvice.java | 75% <60%> (+2.77%) | 6 <0> (+1) | :arrow_up: |\n| .../fastjson/support/spring/MappingFastJsonValue.java | 80.95% <91.66%> (+3.17%) | 6 <3> (+2) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c294d31...c6a26ae. Read the comment docs.\n. # Codecov Report\nMerging #1538 into master will decrease coverage by 0.03%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1538      +/-\n============================================\n- Coverage     82.75%   82.71%   -0.04%   \n+ Complexity     6055     6047       -8   \n============================================\n  Files           136      136            \n  Lines         22116    22105      -11   \n  Branches       5062     5061       -1   \n============================================\n- Hits          18302    18285      -17   \n- Misses         2559     2568       +9   \n+ Partials       1255     1252       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rc/main/java/com/alibaba/fastjson/JSONPObject.java | 74.07% <\u00f8> (-16.25%) | 9 <0> (-4) | |\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 69.84% <100%> (-3.63%) | 29 <0> (-6) | |\n| ...stjson/support/spring/JSONPResponseBodyAdvice.java | 75% <60%> (+2.77%) | 6 <0> (+1) | :arrow_up: |\n| .../fastjson/support/spring/MappingFastJsonValue.java | 80.95% <91.66%> (+3.17%) | 6 <3> (+2) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.48% <0%> (-0.04%) | 784% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c294d31...6c1c2bf. Read the comment docs.\n. # Codecov Report\nMerging #1540 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1540      +/-\n============================================\n- Coverage     82.75%   82.74%   -0.01%   \n+ Complexity     6055     6054       -1   \n============================================\n  Files           136      136            \n  Lines         22116    22114       -2   \n  Branches       5062     5062            \n============================================\n- Hits          18302    18299       -3   \n- Misses         2559     2560       +1   \n  Partials       1255     1255\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...on/support/spring/FastJsonpResponseBodyAdvice.java | 80% <100%> (-5.19%) | 10 <0> (-1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c294d31...87b3fe4. Read the comment docs.\n. # Codecov Report\nMerging #1568 into master will increase coverage by <.01%.\nThe diff coverage is 80%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1568      +/-\n============================================\n+ Coverage      81.5%   81.51%   +<.01%   \n- Complexity     6053     6054       +1   \n============================================\n  Files           136      136            \n  Lines         22462    22462            \n  Branches       5144     5144            \n============================================\n+ Hits          18308    18309       +1   \n+ Misses         2888     2887       -1   \n  Partials       1266     1266\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/SerializeConfig.java | 80.85% <100%> (\u00f8) | 120 <0> (\u00f8) | :arrow_down: |\n| ...baba/fastjson/serializer/ASMSerializerFactory.java | 97.12% <75%> (+0.14%) | 200 <0> (+1) | :arrow_up: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.48% <0%> (+0.03%) | 784% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29f9ca6...42ddfc7. Read the comment docs.\n. # Codecov Report\nMerging #1573 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1573      +/-\n============================================\n- Coverage     81.52%   81.52%   -0.01%   \n  Complexity     6056     6056            \n============================================\n  Files           136      136            \n  Lines         22462    22465       +3   \n  Branches       5144     5144            \n============================================\n+ Hits          18312    18314       +2   \n- Misses         2884     2886       +2   \n+ Partials       1266     1265       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 82.41% <100%> (+0.03%) | 475 <0> (+1) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.48% <0%> (-0.04%) | 784% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 33a30bd...f1254a3. Read the comment docs.\n. # Codecov Report\nMerging #1601 into master will increase coverage by <.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1601      +/-\n============================================\n+ Coverage     81.34%   81.35%   +<.01%   \n- Complexity     6093     6094       +1   \n============================================\n  Files           136      136            \n  Lines         22609    22609            \n  Branches       5193     5193            \n============================================\n+ Hits          18391    18393       +2   \n+ Misses         2948     2946       -2   \n  Partials       1270     1270\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 82.61% <66.66%> (\u00f8) | 482 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.46% <0%> (\u00f8) | 784% <0%> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 327cdb9...aac4774. Read the comment docs.\n. # Codecov Report\nMerging #1615 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1615   +/-\n=========================================\n  Coverage     81.35%   81.35%         \n  Complexity     6096     6096         \n=========================================\n  Files           136      136         \n  Lines         22611    22611         \n  Branches       5194     5194         \n=========================================\n  Hits          18396    18396         \n  Misses         2943     2943         \n  Partials       1272     1272\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fcd2ae7...c819040. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (1.1.46@8af0afb). Click here to learn what that means.\nThe diff coverage is 79.03%.\n\n\n```diff\n@@            Coverage Diff            @@\n1.1.46    #1621   +/-\n=========================================\n  Coverage          ?   81.35%         \n  Complexity        ?     6096         \n=========================================\n  Files             ?      136         \n  Lines             ?    22611         \n  Branches          ?     5194         \n=========================================\n  Hits              ?    18396         \n  Misses            ?     2943         \n  Partials          ?     1272\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 70.12% <\u00f8> (\u00f8) | 372 <0> (?) | |\n| ...java/com/alibaba/fastjson/util/ASMClassLoader.java | 85.29% <\u00f8> (\u00f8) | 12 <0> (?) | |\n| ...son/support/spring/FastjsonSockJsMessageCodec.java | 75% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| ...om/alibaba/fastjson/serializer/ClobSeriliazer.java | 91.66% <\u00f8> (\u00f8) | 5 <0> (?) | |\n| ...m/alibaba/fastjson/serializer/ArraySerializer.java | 96.55% <\u00f8> (\u00f8) | 8 <0> (?) | |\n| ...om/alibaba/fastjson/serializer/EnumSerializer.java | 100% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| ...om/alibaba/fastjson/serializer/JSONSerializer.java | 89.59% <\u00f8> (\u00f8) | 74 <0> (?) | |\n| ...m/alibaba/fastjson/serializer/AdderSerializer.java | 90% <\u00f8> (\u00f8) | 4 <0> (?) | |\n| ...main/java/com/alibaba/fastjson/util/FieldInfo.java | 87.87% <\u00f8> (\u00f8) | 78 <0> (?) | |\n| ...n/java/com/alibaba/fastjson/serializer/Labels.java | 88.23% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| ... and 120 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8af0afb...94f80bf. Read the comment docs.\n. # Codecov Report\nMerging #1664 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1664      +/-\n============================================\n+ Coverage     81.27%   81.28%   +<.01%   \n- Complexity     6144     6145       +1   \n============================================\n  Files           136      136            \n  Lines         22781    22781            \n  Branches       5247     5247            \n============================================\n+ Hits          18516    18518       +2   \n+ Misses         2975     2974       -1   \n+ Partials       1290     1289       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.65% <0%> (\u00f8) | 785% <0%> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fbc00d5...4d8a56d. Read the comment docs.\n. # Codecov Report\nMerging #1737 into master will decrease coverage by <.01%.\nThe diff coverage is 78.94%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1737      +/-\n============================================\n- Coverage     81.07%   81.06%   -0.01%   \n- Complexity     6188     6196       +8   \n============================================\n  Files           136      137       +1   \n  Lines         23028    23047      +19   \n  Branches       5328     5330       +2   \n============================================\n+ Hits          18669    18684      +15   \n- Misses         3026     3028       +2   \n- Partials       1333     1335       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ing/messaging/MappingFastJsonMessageConverter.java | 78.94% <78.94%> (\u00f8) | 8 <8> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aef705b...2f45f84. Read the comment docs.\n. # Codecov Report\nMerging #1745 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1745      +/-\n============================================\n- Coverage     81.07%   81.06%   -0.01%   \n+ Complexity     6197     6196       -1   \n============================================\n  Files           137      137            \n  Lines         23047    23047            \n  Branches       5330     5330            \n============================================\n- Hits          18686    18684       -2   \n- Misses         3026     3027       +1   \n- Partials       1335     1336       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 81.23% <0%> (-0.15%) | 491% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ab9cfc2...6b71712. Read the comment docs.\n. # Codecov Report\nMerging #1776 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1776      +/-\n============================================\n- Coverage     81.11%   81.05%   -0.07%   \n+ Complexity     6210     6208       -2   \n============================================\n  Files           137      137            \n  Lines         23067    23081      +14   \n  Branches       5338     5343       +5   \n============================================\n- Hits          18711    18708       -3   \n- Misses         3011     3027      +16   \n- Partials       1345     1346       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../main/java/com/alibaba/fastjson/TypeReference.java | 62.22% <0%> (-28.11%) | 8 <0> (\u00f8) | |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 81.3% <0%> (-0.15%) | 492% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a522561...97e8c19. Read the comment docs.\n. # Codecov Report\nMerging #1796 into master will not change coverage.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1796   +/-\n=========================================\n  Coverage     81.06%   81.06%         \n  Complexity     6210     6210         \n=========================================\n  Files           137      137         \n  Lines         23081    23081         \n  Branches       5343     5343         \n=========================================\n  Hits          18711    18711         \n  Misses         3024     3024         \n  Partials       1346     1346\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSON.java | 90.95% <100%> (\u00f8) | 122 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/serializer/DateCodec.java | 85.18% <100%> (\u00f8) | 32 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/DefaultJSONParser.java | 88.17% <100%> (\u00f8) | 304 <3> (\u00f8) | :arrow_down: |\n| ...ba/fastjson/parser/deserializer/Jdk8DateCodec.java | 72.45% <100%> (\u00f8) | 69 <0> (\u00f8) | :arrow_down: |\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 81.44% <66.66%> (\u00f8) | 493 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9aae9e0...caab059. Read the comment docs.\n. # Codecov Report\nMerging #1826 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1826      +/-\n============================================\n- Coverage     81.06%   81.06%   -0.01%   \n+ Complexity     6210     6209       -1   \n============================================\n  Files           137      137            \n  Lines         23081    23081            \n  Branches       5343     5343            \n============================================\n- Hits          18711    18710       -1   \n- Misses         3024     3026       +2   \n+ Partials       1346     1345       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 85.71% <\u00f8> (\u00f8) | 57 <0> (\u00f8) | :arrow_down: |\n| ...om/alibaba/fastjson/serializer/JSONSerializer.java | 88.23% <\u00f8> (\u00f8) | 76 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/serializer/DateCodec.java | 85.18% <\u00f8> (\u00f8) | 32 <0> (\u00f8) | :arrow_down: |\n| ...om/alibaba/fastjson/serializer/EnumSerializer.java | 100% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/alibaba/fastjson/serializer/Labels.java | 88.23% <\u00f8> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/serializer/MapSerializer.java | 75% <\u00f8> (\u00f8) | 48 <0> (\u00f8) | :arrow_down: |\n| ...a/com/alibaba/fastjson/serializer/StringCodec.java | 100% <\u00f8> (\u00f8) | 17 <0> (\u00f8) | :arrow_down: |\n| ...om/alibaba/fastjson/serializer/ReferenceCodec.java | 100% <\u00f8> (\u00f8) | 9 <0> (\u00f8) | :arrow_down: |\n| ...a/fastjson/serializer/SimplePropertyPreFilter.java | 94.11% <\u00f8> (\u00f8) | 17 <0> (\u00f8) | :arrow_down: |\n| .../com/alibaba/fastjson/serializer/BooleanCodec.java | 91.66% <\u00f8> (\u00f8) | 12 <0> (\u00f8) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9aae9e0...eacf3f4. Read the comment docs.\n. # Codecov Report\nMerging #1836 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1836      +/-\n============================================\n- Coverage     81.06%   81.06%   -0.01%   \n+ Complexity     6210     6209       -1   \n============================================\n  Files           137      137            \n  Lines         23081    23077       -4   \n  Branches       5343     5342       -1   \n============================================\n- Hits          18711    18707       -4   \n- Misses         3024     3026       +2   \n+ Partials       1346     1344       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...r/deserializer/ArrayListTypeFieldDeserializer.java | 73.52% <100%> (-0.06%) | 20 <0> (\u00f8) | |\n| ...com/alibaba/fastjson/parser/DefaultJSONParser.java | 88.17% <100%> (\u00f8) | 304 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update af36516...50558b8. Read the comment docs.\n. # Codecov Report\nMerging #1837 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1837      +/-\n============================================\n- Coverage     81.06%   81.05%   -0.01%   \n+ Complexity     6210     6209       -1   \n============================================\n  Files           137      137            \n  Lines         23081    23081            \n  Branches       5343     5343            \n============================================\n- Hits          18711    18709       -2   \n- Misses         3024     3025       +1   \n- Partials       1346     1347       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 85.71% <100%> (\u00f8) | 57 <0> (\u00f8) | :arrow_down: |\n| ...alibaba/fastjson/serializer/SerializerFeature.java | 92.72% <100%> (\u00f8) | 9 <0> (\u00f8) | :arrow_down: |\n| ...baba/fastjson/serializer/ASMSerializerFactory.java | 97.7% <100%> (\u00f8) | 211 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/serializer/MapSerializer.java | 75% <100%> (\u00f8) | 48 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update af36516...902dd79. Read the comment docs.\n. # Codecov Report\nMerging #1885 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1885      +/-\n============================================\n- Coverage     81.06%   81.06%   -0.01%   \n+ Complexity     6210     6208       -2   \n============================================\n  Files           137      137            \n  Lines         23081    23073       -8   \n  Branches       5343     5340       -3   \n============================================\n- Hits          18711    18703       -8   \n- Misses         3024     3025       +1   \n+ Partials       1346     1345       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../java/com/alibaba/fastjson/parser/JSONScanner.java | 83.51% <100%> (+0.05%) | 409 <0> (-1) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 611c359...d091c7d. Read the comment docs.\n. # Codecov Report\nMerging #1890 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1890      +/-\n============================================\n- Coverage     81.06%   81.06%   -0.01%   \n+ Complexity     6209     6208       -1   \n============================================\n  Files           137      137            \n  Lines         23073    23073            \n  Branches       5340     5340            \n============================================\n- Hits          18705    18703       -2   \n- Misses         3024     3025       +1   \n- Partials       1344     1345       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f174f8b...cb69e0c. Read the comment docs.\n. # Codecov Report\nMerging #1891 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1891      +/-\n============================================\n- Coverage     81.06%   81.06%   -0.01%   \n+ Complexity     6209     6208       -1   \n============================================\n  Files           137      137            \n  Lines         23073    23073            \n  Branches       5340     5340            \n============================================\n- Hits          18705    18703       -2   \n- Misses         3024     3025       +1   \n- Partials       1344     1345       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f174f8b...d50fea9. Read the comment docs.\n. # Codecov Report\nMerging #1916 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1916   +/-\n=========================================\n  Coverage     81.03%   81.03%         \n  Complexity     6210     6210         \n=========================================\n  Files           137      137         \n  Lines         23091    23091         \n  Branches       5348     5348         \n=========================================\n  Hits          18711    18711         \n  Misses         3033     3033         \n  Partials       1347     1347\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c18836b...2646d4f. Read the comment docs.\n. # Codecov Report\nMerging #1936 into master will decrease coverage by 0.01%.\nThe diff coverage is 68.42%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1936      +/-\n============================================\n- Coverage     81.03%   81.02%   -0.02%   \n- Complexity     6210     6214       +4   \n============================================\n  Files           137      137            \n  Lines         23091    23110      +19   \n  Branches       5348     5354       +6   \n============================================\n+ Hits          18711    18724      +13   \n- Misses         3033     3037       +4   \n- Partials       1347     1349       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...libaba/fastjson/serializer/JavaBeanSerializer.java | 83.03% <\u00f8> (\u00f8) | 174 <0> (\u00f8) | :arrow_down: |\n| src/main/java/com/alibaba/fastjson/JSONPath.java | 73.51% <68.42%> (\u00f8) | 179 <5> (+5) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bb0c524...605b1e5. Read the comment docs.\n. # Codecov Report\nMerging #1940 into master will decrease coverage by 0.02%.\nThe diff coverage is 78.94%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1940      +/-\n===========================================\n- Coverage     81.02%     81%   -0.03%   \n- Complexity     6215    6217       +2   \n===========================================\n  Files           137     137            \n  Lines         23110   23125      +15   \n  Branches       5354    5356       +2   \n===========================================\n+ Hits          18725   18732       +7   \n- Misses         3035    3041       +6   \n- Partials       1350    1352       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...libaba/fastjson/serializer/JavaBeanSerializer.java | 83.29% <100%> (+0.25%) | 177 <3> (+3) | :arrow_up: |\n| src/main/java/com/alibaba/fastjson/JSONPath.java | 73.34% <69.23%> (-0.17%) | 180 <3> (+1) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 805231a...fc856c0. Read the comment docs.\n. # Codecov Report\nMerging #1956 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1956      +/-\n===========================================\n- Coverage     81.01%     81%   -0.01%   \n+ Complexity     6220    6218       -2   \n===========================================\n  Files           137     137            \n  Lines         23125   23125            \n  Branches       5356    5356            \n===========================================\n- Hits          18735   18733       -2   \n- Misses         3038    3039       +1   \n- Partials       1352    1353       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 199cd80...2ad8a67. Read the comment docs.\n. # Codecov Report\nMerging #1969 into master will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1969      +/-\n============================================\n- Coverage     81.01%   80.98%   -0.04%   \n+ Complexity     6219     6218       -1   \n============================================\n  Files           137      137            \n  Lines         23125    23133       +8   \n  Branches       5356     5358       +2   \n============================================\n- Hits          18735    18734       -1   \n- Misses         3038     3047       +9   \n  Partials       1352     1352\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSON.java | 89% <0%> (-1.96%) | 122 <0> (\u00f8) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e761a1...9641c73. Read the comment docs.\n. # Codecov Report\nMerging #1980 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1980      +/-\n============================================\n- Coverage     81.02%   81.01%   -0.01%   \n+ Complexity     6220     6219       -1   \n============================================\n  Files           137      137            \n  Lines         23130    23130            \n  Branches       5356     5356            \n============================================\n- Hits          18740    18738       -2   \n- Misses         3039     3040       +1   \n- Partials       1351     1352       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 81.3% <0%> (-0.15%) | 492% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42252b9...4ee37a4. Read the comment docs.\n. # Codecov Report\nMerging #1983 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1983      +/-\n===========================================\n- Coverage     81.02%     81%   -0.02%   \n+ Complexity     6220    6218       -2   \n===========================================\n  Files           137     137            \n  Lines         23130   23130            \n  Branches       5356    5356            \n===========================================\n- Hits          18740   18737       -3   \n- Misses         3039    3042       +3   \n  Partials       1351    1351\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/asm/Type.java | 77.41% <0%> (\u00f8) | 34 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42252b9...cd96bfb. Read the comment docs.\n. # Codecov Report\nMerging #1983 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #1983      +/-\n===========================================\n- Coverage     81.02%     81%   -0.02%   \n+ Complexity     6220    6218       -2   \n===========================================\n  Files           137     137            \n  Lines         23130   23130            \n  Branches       5356    5356            \n===========================================\n- Hits          18740   18737       -3   \n- Misses         3039    3042       +3   \n  Partials       1351    1351\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/asm/Type.java | 77.41% <0%> (\u00f8) | 34 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.82% <0%> (-0.04%) | 787% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42252b9...cd96bfb. Read the comment docs.\n. # Codecov Report\nMerging #2015 into master will increase coverage by 0.03%.\nThe diff coverage is 48.57%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2015      +/-\n============================================\n+ Coverage     80.73%   80.77%   +0.03%   \n- Complexity     6424     6425       +1   \n============================================\n  Files           139      139            \n  Lines         24125    24100      -25   \n  Branches       5655     5630      -25   \n============================================\n- Hits          19478    19466      -12   \n+ Misses         3199     3191       -8   \n+ Partials       1448     1443       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSONPath.java | 73.38% <48.57%> (+0.39%) | 181 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.85% <0%> (+0.06%) | 788% <0%> (+2%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1625b4b...ab3fe06. Read the comment docs.\n. # Codecov Report\nMerging #2015 into master will increase coverage by 0.03%.\nThe diff coverage is 48.57%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2015      +/-\n============================================\n+ Coverage     80.73%   80.77%   +0.03%   \n- Complexity     6424     6425       +1   \n============================================\n  Files           139      139            \n  Lines         24125    24100      -25   \n  Branches       5655     5630      -25   \n============================================\n- Hits          19478    19466      -12   \n+ Misses         3199     3191       -8   \n+ Partials       1448     1443       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSONPath.java | 73.38% <48.57%> (+0.39%) | 181 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.85% <0%> (+0.06%) | 788% <0%> (+2%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1625b4b...ab3fe06. Read the comment docs.\n. # Codecov Report\nMerging #2016 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2016      +/-\n============================================\n+ Coverage     80.73%   80.74%   +<.01%   \n- Complexity     6424     6426       +2   \n============================================\n  Files           139      139            \n  Lines         24125    24125            \n  Branches       5655     5655            \n============================================\n+ Hits          19478    19480       +2   \n+ Misses         3199     3195       -4   \n- Partials       1448     1450       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/alibaba/fastjson/asm/MethodCollector.java | 86.66% <100%> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.85% <0%> (+0.06%) | 788% <0%> (+2%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1625b4b...b531136. Read the comment docs.\n. # Codecov Report\nMerging #2016 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2016      +/-\n============================================\n+ Coverage     80.73%   80.74%   +<.01%   \n- Complexity     6424     6426       +2   \n============================================\n  Files           139      139            \n  Lines         24125    24125            \n  Branches       5655     5655            \n============================================\n+ Hits          19478    19480       +2   \n+ Misses         3199     3195       -4   \n- Partials       1448     1450       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/alibaba/fastjson/asm/MethodCollector.java | 86.66% <100%> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.85% <0%> (+0.06%) | 788% <0%> (+2%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1625b4b...b531136. Read the comment docs.\n. # Codecov Report\nMerging #2148 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2148      +/-\n============================================\n- Coverage     81.67%   81.66%   -0.02%   \n+ Complexity     6784     6780       -4   \n============================================\n  Files           140      140            \n  Lines         25360    25360            \n  Branches       6055     6055            \n============================================\n- Hits          20713    20709       -4   \n- Misses         2930     2931       +1   \n- Partials       1717     1720       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 191% <0%> (-1%) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.38% <0%> (-0.19%) | 185% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6a5adc9...1fb1f23. Read the comment docs.\n. # Codecov Report\nMerging #2148 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2148      +/-\n============================================\n- Coverage     81.67%   81.66%   -0.02%   \n+ Complexity     6784     6780       -4   \n============================================\n  Files           140      140            \n  Lines         25360    25360            \n  Branches       6055     6055            \n============================================\n- Hits          20713    20709       -4   \n- Misses         2930     2931       +1   \n- Partials       1717     1720       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 191% <0%> (-1%) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.38% <0%> (-0.19%) | 185% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6a5adc9...1fb1f23. Read the comment docs.\n. # Codecov Report\nMerging #2149 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2149      +/-\n============================================\n- Coverage     81.67%   81.65%   -0.02%   \n+ Complexity     6784     6780       -4   \n============================================\n  Files           140      141       +1   \n  Lines         25360    25361       +1   \n  Branches       6055     6055            \n============================================\n- Hits          20713    20709       -4   \n- Misses         2930     2936       +6   \n+ Partials       1717     1716       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/alibaba/fastjson/serializer/ByteBufferCodec.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.76% <0%> (-0.07%) | 788% <0%> (-2%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6a5adc9...61b5965. Read the comment docs.\n. # Codecov Report\nMerging #2153 into master will increase coverage by 0.01%.\nThe diff coverage is 80.76%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2153      +/-\n============================================\n+ Coverage     81.74%   81.76%   +0.01%   \n- Complexity     6798     6806       +8   \n============================================\n  Files           140      140            \n  Lines         25372    25391      +19   \n  Branches       6060     6061       +1   \n============================================\n+ Hits          20741    20761      +20   \n  Misses         2910     2910            \n+ Partials       1721     1720       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...stjson/support/spring/FastJsonRedisSerializer.java | 84.61% <100%> (+25.79%) | 8 <0> (+2) | :arrow_up: |\n| src/main/java/com/alibaba/fastjson/JSON.java | 89.83% <66.66%> (-0.63%) | 126 <4> (+4) | |\n| ...libaba/fastjson/support/config/FastJsonConfig.java | 95.34% <66.66%> (-4.66%) | 22 <1> (+1) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (+0.18%) | 186% <0%> (+1%) | :arrow_up: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fc2fa5e...732c951. Read the comment docs.\n. # Codecov Report\nMerging #2163 into master will decrease coverage by <.01%.\nThe diff coverage is 73.91%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2163      +/-\n============================================\n- Coverage     81.77%   81.76%   -0.01%   \n+ Complexity     6811     6808       -3   \n============================================\n  Files           140      140            \n  Lines         25399    25409      +10   \n  Branches       6065     6065            \n============================================\n+ Hits          20770    20776       +6   \n- Misses         2908     2914       +6   \n+ Partials       1721     1719       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/support/spring/FastJsonHttpMessageConverter.java | 70.54% <100%> (+0.7%) | 29 <0> (\u00f8) | :arrow_down: |\n| src/main/java/com/alibaba/fastjson/JSON.java | 89.36% <33.33%> (-0.48%) | 126 <0> (\u00f8) | |\n| ...ing/messaging/MappingFastJsonMessageConverter.java | 76.19% <57.14%> (-2.76%) | 8 <1> (\u00f8) | |\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 86.4% <85.71%> (+1.4%) | 41 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 72.27% <0%> (-0.07%) | 798% <0%> (-2%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7ae329c...2c0be96. Read the comment docs.\n. # Codecov Report\nMerging #2172 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2172      +/-\n============================================\n- Coverage     81.85%   81.84%   -0.01%   \n+ Complexity     6856     6852       -4   \n============================================\n  Files           140      140            \n  Lines         25492    25492            \n  Branches       6088     6088            \n============================================\n- Hits          20867    20865       -2   \n  Misses         2906     2906            \n- Partials       1719     1721       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (-0.19%) | 186% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 194% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d3e2af...b1f4984. Read the comment docs.\n. # Codecov Report\nMerging #2184 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2184      +/-\n============================================\n- Coverage     81.85%   81.84%   -0.01%   \n+ Complexity     6856     6852       -4   \n============================================\n  Files           140      140            \n  Lines         25502    25502            \n  Branches       6088     6088            \n============================================\n- Hits          20875    20873       -2   \n  Misses         2908     2908            \n- Partials       1719     1721       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../alibaba/fastjson/serializer/ObjectArrayCodec.java | 84.92% <100%> (\u00f8) | 31 <0> (\u00f8) | :arrow_down: |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (-0.19%) | 186% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 194% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb5967d...73b9883. Read the comment docs.\n. # Codecov Report\nMerging #2186 into master will decrease coverage by 0.04%.\nThe diff coverage is 41.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2186      +/-\n============================================\n- Coverage     81.85%   81.81%   -0.05%   \n+ Complexity     6856     6853       -3   \n============================================\n  Files           140      140            \n  Lines         25502    25514      +12   \n  Branches       6088     6094       +6   \n============================================\n- Hits          20875    20874       -1   \n- Misses         2908     2916       +8   \n- Partials       1719     1724       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSONArray.java | 88% <37.5%> (-3.02%) | 81 <0> (+1) | |\n| src/main/java/com/alibaba/fastjson/JSONObject.java | 88.38% <50%> (-0.65%) | 90 <0> (+1) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (-0.19%) | 186% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 194% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 72.28% <0%> (-0.04%) | 799% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb5967d...8a97101. Read the comment docs.\n. # Codecov Report\nMerging #2194 into master will decrease coverage by 0.01%.\nThe diff coverage is 76.92%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2194      +/-\n============================================\n- Coverage     81.85%   81.83%   -0.02%   \n+ Complexity     6856     6854       -2   \n============================================\n  Files           140      140            \n  Lines         25502    25510       +8   \n  Branches       6088     6092       +4   \n============================================\n+ Hits          20875    20877       +2   \n- Misses         2908     2910       +2   \n- Partials       1719     1723       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSONObject.java | 88.38% <66.66%> (-0.65%) | 90 <3> (+1) | |\n| src/main/java/com/alibaba/fastjson/JSONArray.java | 90.05% <85.71%> (-0.96%) | 81 <3> (+1) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (-0.19%) | 186% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 194% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb5967d...fb704ac. Read the comment docs.\n. # Codecov Report\nMerging #2195 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2195   +/-\n=========================================\n  Coverage     81.96%   81.96%         \n- Complexity     6871     6872    +1   \n=========================================\n  Files           140      140         \n  Lines         25508    25508         \n  Branches       6091     6091         \n=========================================\n  Hits          20907    20907         \n  Misses         2881     2881         \n  Partials       1720     1720\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/parser/DefaultJSONParser.java | 87.99% <100%> (\u00f8) | 308 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/serializer/SerialContext.java | 72.91% <0%> (-4.17%) | 19% <0%> (\u00f8) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 73.88% <0%> (+1.27%) | 45% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7bf1df2...03c8eb2. Read the comment docs.\n. # Codecov Report\nMerging #2204 into master will increase coverage by 0.02%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2204      +/-\n============================================\n+ Coverage     81.96%   81.98%   +0.02%   \n  Complexity     6875     6875            \n============================================\n  Files           140      140            \n  Lines         25519    25532      +13   \n  Branches       6096     6093       -3   \n============================================\n+ Hits          20916    20932      +16   \n+ Misses         2882     2876       -6   \n- Partials       1721     1724       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...on/support/retrofit/Retrofit2ConverterFactory.java | 90.74% <87.5%> (+22.44%) | 18 <16> (+4) | :arrow_up: |\n| ...com/alibaba/fastjson/serializer/SerialContext.java | 72.91% <0%> (-4.17%) | 19% <0%> (\u00f8) | |\n| ...java/com/alibaba/fastjson/parser/ParserConfig.java | 82.56% <0%> (-0.19%) | 186% <0%> (-1%) | |\n| ...n/java/com/alibaba/fastjson/util/JavaBeanInfo.java | 87.5% <0%> (-0.19%) | 194% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 72.28% <0%> (-0.04%) | 799% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cae68aa...ab1ed0b. Read the comment docs.\n. # Codecov Report\nMerging #2282 into master will decrease coverage by 0.05%.\nThe diff coverage is 63.88%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2282      +/-\n============================================\n- Coverage     81.69%   81.63%   -0.06%   \n- Complexity     6941     6946       +5   \n============================================\n  Files           140      141       +1   \n  Lines         25833    25853      +20   \n  Branches       6168     6170       +2   \n============================================\n+ Hits          21103    21106       +3   \n- Misses         2976     2991      +15   \n- Partials       1754     1756       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/util/TypeUtils.java | 80.26% <100%> (+0.11%) | 559 <4> (+4) | :arrow_up: |\n| ...on/parser/deserializer/JavaObjectDeserializer.java | 88.23% <100%> (-1.24%) | 9 <0> (-1) | |\n| ...om/alibaba/fastjson/util/GenericArrayTypeImpl.java | 27.77% <27.77%> (\u00f8) | 4 <4> (?) | |\n| ...com/alibaba/fastjson/serializer/SerialContext.java | 72.91% <0%> (-4.17%) | 19% <0%> (\u00f8) | |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <0%> (-1.28%) | 44% <0%> (-1%) | |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.43% <0%> (-0.04%) | 804% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9bfb07d...fa0ec04. Read the comment docs.\n. # Codecov Report\nMerging #2309 into master will not change coverage.\nThe diff coverage is 91.78%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2309   +/-\n=========================================\n  Coverage     81.69%   81.69%         \n- Complexity     6940     6941    +1   \n=========================================\n  Files           140      140         \n  Lines         25833    25833         \n  Branches       6168     6168         \n=========================================\n  Hits          21103    21103         \n  Misses         2976     2976         \n  Partials       1754     1754\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/com/alibaba/fastjson/asm/ByteVector.java | 91.78% <91.78%> (\u00f8) | 17 <17> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9bfb07d...b6b49ae. Read the comment docs.\n. # Codecov Report\nMerging #2313 into master will decrease coverage by 0.18%.\nThe diff coverage is 71.59%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #2313      +/-\n===========================================\n- Coverage     81.69%   81.5%   -0.19%   \n- Complexity     6941    6965      +24   \n===========================================\n  Files           140     147       +7   \n  Lines         25833   25941     +108   \n  Branches       6168    6184      +16   \n===========================================\n+ Hits          21103   21142      +39   \n- Misses         2976    3026      +50   \n- Partials       1754    1773      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/alibaba/fastjson/serializer/JodaCodec.java | 46.04% <100%> (-0.77%) | 34 <1> (-1) | |\n| .../fastjson/serializer/formatter/EmptyFormatter.java | 14.28% <14.28%> (\u00f8) | 1 <1> (?) | |\n| ...ain/java/com/alibaba/fastjson/util/ClassUtils.java | 38.46% <38.46%> (\u00f8) | 3 <3> (?) | |\n| .../fastjson/serializer/formatter/TimeFormatters.java | 44.73% <44.73%> (\u00f8) | 4 <4> (?) | |\n| ...a/fastjson/serializer/formatter/DateFormatter.java | 46.66% <46.66%> (\u00f8) | 5 <5> (?) | |\n| ...stjson/serializer/formatter/Jdk8TimeFormatter.java | 47.36% <47.36%> (\u00f8) | 8 <8> (?) | |\n| ...a/fastjson/serializer/formatter/JodaFormatter.java | 50% <50%> (\u00f8) | 4 <4> (?) | |\n| ...in/java/com/alibaba/fastjson/util/JavaVersion.java | 50% <50%> (\u00f8) | 2 <2> (?) | |\n| ...ba/fastjson/parser/deserializer/Jdk8DateCodec.java | 74.41% <71.42%> (-0.42%) | 78 <2> (-1) | |\n| ...m/alibaba/fastjson/serializer/FieldSerializer.java | 79.51% <79.51%> (+0.35%) | 62 <62> (\u00f8) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d4f08f9...86297cb. Read the comment docs.\n. # Codecov Report\nMerging #2320 into master will decrease coverage by 0.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2320      +/-\n============================================\n- Coverage     81.63%   81.61%   -0.02%   \n- Complexity     6952     6953       +1   \n============================================\n  Files           141      141            \n  Lines         25870    25888      +18   \n  Branches       6183     6186       +3   \n============================================\n+ Hits          21119    21129      +10   \n- Misses         2986     2993       +7   \n- Partials       1765     1766       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/alibaba/fastjson/serializer/CalendarCodec.java | 83.16% <61.9%> (-4.05%) | 19 <0> (+1) | |\n| ...ava/com/alibaba/fastjson/serializer/DateCodec.java | 87.14% <83.33%> (+0.28%) | 33 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/serializer/SerialContext.java | 72.91% <0%> (-4.17%) | 19% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 20d96bb...781d3c6. Read the comment docs.\n. # Codecov Report\nMerging #2321 into master will decrease coverage by 0.04%.\nThe diff coverage is 56.98%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2321      +/-\n============================================\n- Coverage     81.63%   81.59%   -0.05%   \n+ Complexity     6952     6948       -4   \n============================================\n  Files           141      141            \n  Lines         25870    25884      +14   \n  Branches       6183     6183            \n============================================\n+ Hits          21119    21120       +1   \n- Misses         2986     2997      +11   \n- Partials       1765     1767       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/main/java/com/alibaba/fastjson/JSON.java | 87.52% <\u00f8> (\u00f8) | 138 <0> (\u00f8) | :arrow_down: |\n| ...om/alibaba/fastjson/serializer/CharacterCodec.java | 100% <\u00f8> (\u00f8) | 8 <0> (\u00f8) | :arrow_down: |\n| ...astjson/serializer/JSONSerializableSerializer.java | 62.5% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| .../com/alibaba/fastjson/serializer/IntegerCodec.java | 89.58% <\u00f8> (\u00f8) | 14 <0> (\u00f8) | :arrow_down: |\n| ...a/com/alibaba/fastjson/serializer/AtomicCodec.java | 100% <\u00f8> (\u00f8) | 19 <0> (\u00f8) | :arrow_down: |\n| ...json/parser/deserializer/JavaBeanDeserializer.java | 81.5% <\u00f8> (\u00f8) | 285 <0> (\u00f8) | :arrow_down: |\n| .../alibaba/fastjson/serializer/PascalNameFilter.java | 100% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...va/com/alibaba/fastjson/serializer/FloatCodec.java | 91.66% <\u00f8> (\u00f8) | 12 <0> (\u00f8) | :arrow_down: |\n| ...com/alibaba/fastjson/parser/JSONReaderScanner.java | 72.61% <\u00f8> (-1.28%) | 44 <0> (-1) | |\n| ...tjson/parser/deserializer/SqlDateDeserializer.java | 93.54% <\u00f8> (\u00f8) | 20 <0> (\u00f8) | :arrow_down: |\n| ... and 93 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 20d96bb...c830150. Read the comment docs.\n. # Codecov Report\nMerging #2322 into master will decrease coverage by 0.01%.\nThe diff coverage is 54.36%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2322      +/-\n============================================\n- Coverage     81.61%   81.59%   -0.02%   \n- Complexity     6952     6953       +1   \n============================================\n  Files           141      141            \n  Lines         25888    25902      +14   \n  Branches       6186     6186            \n============================================\n+ Hits          21128    21136       +8   \n- Misses         2995     3000       +5   \n- Partials       1765     1766       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...on/support/retrofit/Retrofit2ConverterFactory.java | 89.09% <0%> (-1.65%) | 18 <1> (\u00f8) | |\n| ...in/java/com/alibaba/fastjson/util/UTF8Decoder.java | 54.34% <0%> (-2.48%) | 20 <0> (\u00f8) | |\n| ...libaba/fastjson/support/config/FastJsonConfig.java | 95.45% <100%> (+0.1%) | 22 <3> (\u00f8) | :arrow_down: |\n| ...m/alibaba/fastjson/serializer/SerializeWriter.java | 67.94% <100%> (+0.04%) | 364 <0> (\u00f8) | :arrow_down: |\n| ...m/alibaba/fastjson/util/ParameterizedTypeImpl.java | 59.09% <25%> (-7.58%) | 8 <2> (\u00f8) | |\n| ...om/alibaba/fastjson/util/AntiCollisionHashMap.java | 78.65% <51.35%> (+0.16%) | 77 <16> (\u00f8) | :arrow_down: |\n| ...rc/main/java/com/alibaba/fastjson/util/Base64.java | 61.85% <53.84%> (\u00f8) | 14 <0> (\u00f8) | :arrow_down: |\n| ...c/main/java/com/alibaba/fastjson/util/IOUtils.java | 86.5% <72.72%> (+0.13%) | 117 <0> (\u00f8) | :arrow_down: |\n| ...ibaba/fastjson/support/jaxrs/FastJsonProvider.java | 86.4% <80%> (\u00f8) | 41 <8> (\u00f8) | :arrow_down: |\n| ...ava/com/alibaba/fastjson/parser/JSONLexerBase.java | 71.27% <0%> (+0.03%) | 808% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 05fb7c5...349fa70. Read the comment docs.\n. # Codecov Report\nMerging #2324 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2324      +/-\n============================================\n+ Coverage     81.62%   81.63%   +0.01%   \n- Complexity     6952     6955       +3   \n============================================\n  Files           141      141            \n  Lines         25888    25888            \n  Branches       6186     6186            \n============================================\n+ Hits          21131    21134       +3   \n+ Misses         2992     2991       -1   \n+ Partials       1765     1763       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../java/com/alibaba/fastjson/parser/JSONScanner.java | 76.26% <0%> (+0.05%) | 499% <0%> (+1%) | :arrow_up: |\n| ...ava/com/alibaba/fastjson/serializer/DateCodec.java | 88.57% <0%> (+1.42%) | 34% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 05fb7c5...d3c5ebf. Read the comment docs.\n. \n",
    "VictorZeng": "codecov/project \u2014 86.34% (-0.12%) compared to b15fa86 at 86.46%\n\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\uff1f\n. \u5148\u5173\u95ed\u4e86\n. FastJsonHttpMessageConverter  \u5e94\u8be5\u5b9e\u73b0Spring MVC \u4e2dGenericHttpMessageConverter\u7684read\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5982\u679cController\u7684\u5165\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\u96c6\u5408\uff0c\u7ed1\u5b9a\u6570\u636e\u5c31\u4f1a\u6709\u95ee\u9898\u3002\n. Testcase has commited\n. It's succeed in my environment, Why failed? \n. \u8bf7\u5148\u542f\u52a8Restfull Server : FastJsonProviderServer\u7c7b\uff0c\u518d\u8fd0\u884cFastJsonProviderTest \u6d4b\u8bd5\u7528\u4f8b\u3002\n. @wenshao \u597d\u5427\uff0c\u6216\u8005\u6211\u628a\u6d4b\u8bd5\u7684\u6ce8\u89e3\u53bb\u6389\uff0c\u4ee5main\u51fd\u6570\u542f\u52a8\u6d4b\u8bd5\u7528\u4f8b\u5462\n. Thank u for your advice, I will add the new Converter for Spring framework 4.2+.\n. @XiaoSK Please see #575 \n. fixed in #579\n. See applicationContext-rest.xml  this is a Apache Cxf config with spring example\n. See FastJsonProvider wiki. \n. @yancoo \u4f60\u4f7f\u7528\u7684JAR-RS\u5b9e\u73b0\u662f\u4ec0\u4e48\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662fApache CXF.\n. @yancoo https://jersey.java.net/documentation/latest/user-guide.html \u91cc\u9762\u8bf4\u7684\u591f\u6e05\u695a\u4e86\n. @yancoo \u653e\u5047\u8fd9\u51e0\u5929\u6ca1\u6536\u90ae\u4ef6\uff0c\u7b80\u5355\u8bf4\u51e0\u53e5\u5427\u3002\n- \u5173\u4e8e\u6280\u672f\uff1a\u6bcf\u4e2a\u5f00\u53d1\u8005\u90fd\u6709\u81ea\u5df1\u64c5\u957f\u548c\u4e0d\u64c5\u957f\u7684\u9886\u57df\uff0c\u4e13\u5fc3\u505a\u597d\u81ea\u5df1\u60f3\u505a\u7684\u5c31\u5f88\u597d\uff0c\u6e29\u5c11\u5df2\u7ecf\u8d21\u732e\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee(druid/fastjson/...)\uff0c\u5728\u6b64\u8868\u793a\u94a6\u4f69\u3002\n- \u5173\u4e8e\u5f00\u6e90\uff1a\u6709\u6ca1\u6709\u5f00\u6e90\u7cbe\u795e\u5176\u5b9e\u770b\u6001\u5ea6\u5c31\u53ef\u4ee5\uff0c\u4f60\u80fd\u63d0\u51fa\u5efa\u8bae\u5f88\u597d\uff0c\u4f46\u662f\u4f60\u7684\u6001\u5ea6\u8ba9\u6211\u611f\u89c9\u4f60\u662f\u5728\u7ed9\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u63d0\u9700\u6c42\u3002\n- \u5173\u4e8e\u9879\u76ee\uff1aFastJsonProvider\u53ea\u662f\u4e00\u4e2a\u57fa\u4e8eJAX-RS\u6807\u51c6Provider\u7684\u5b9e\u73b0\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u5176\u4ed6\u5f00\u53d1\u8005\u80fd\u5728\u5177\u4f53JAX-RS\u5b9e\u73b0\u6280\u672f\u4e2d\u4f7f\u7528FastJson\u5bf9\u6570\u636eSerialize and Deserialize\uff0c\u4f46FastJson\u5e76\u4e0d\u662fJAX-RS\u7684\u5b9e\u73b0\u6280\u672f\uff0c\u4e0d\u9700\u8981\u4e5f\u4e0d\u5e94\u8be5\u8003\u8651JAX-RS\u4e0eServer\u7684\u96c6\u6210\u95ee\u9898\uff0c\u4f60\u53bb\u770b\u770bJackson\u7684\u6e90\u7801\u91cc\u9762\u6709\u6ca1\u6709\u5b9e\u73b0JAX-RS\u7684Feature\u3002\n- \u5173\u4e8e\u6807\u51c6\uff1aJAX-RS\u7684\u5b9e\u73b0\u6280\u672f\u6709\u5f88\u591a(CXF/Jersey/RESTEasy/...)\uff0cCXF\u6709\u591a\u5c11\u4eba\u7528\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u4f60\u89c9\u5f97\u662f\u7528Apache\u7684\u4eba\u591a\u5462\uff0c\u8fd8\u662fGlassFish\u7684\u591a\u5462\u3002\n- \u5173\u4e8e\u4e2a\u4eba\uff1a\u5982\u679c\u4f60\u7684\u6280\u672f\u67b6\u6784\u4e0d\u53ef\u66f4\u6539\uff0c\u4e5f\u5e0c\u671b\u4f60\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u63d0\u4ea4patch\u5206\u4eab\u4e00\u4e0b\uff0cno coding no life.\n- \u6211\u89c9\u5f97\u8fd9\u4e2aIssue\u53ef\u4ee5\u5173\u95ed\u4e86\u3002\n\u6700\u540e\u53d1\u4e2a\u5e7f\u544a\uff0c\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u7684\u5ba2\u6237\u7aef\u6846\u67b6\uff0c\u6b22\u8fce\u6765\u62cd\u7816~\nhttp://darkphoenixs.org/message-queue-client-framework/ \n. This issue as same as #574 \n. fixed in #579 \n. There is a bug in the FastJsonHttpMessageConverter.addSerializeFilter.\n I will fix this.\n. fixed in #579\n. @wenshao \u3002\u3002\u3002\u90a3\u5e94\u8be5\u53eb\u4ec0\u4e48\u540d\u5b57\u5440\n. @wenshao FastJsonHttpMessageConverterNew?\n. See FastJsonHttpMessageConverter wiki.\n. @plutofei \u76ee\u524dFastJsonHttpMessageConverter\u6ca1\u6709\u4f7f\u7528Class level SerializeFilter, \u5c06\u4f1a\u5728\u4e00\u4e2a\u7248\u672c\u4e2d\u589e\u52a0\u6b64\u529f\u80fd\n. > build error :\n\nFastJsonProvider.java:[182,85] diamond operator is not supported in -source 1.5\n\nfixed this\n. @wenshao wiki \u660e\u5929\u518d\u66f4\u65b0 \u7761\u89c9\u4e86 goodnight~\n. @wenshao \u53ef\u80fd\u4f1a\u7684\uff0c\u9700\u8981\u7528\u6237\u4e5f\u8fdb\u884c\u5347\u7ea7\n. @wenshao \u6216\u8005 \u6211\u5c061.2.10\u7684\u65b9\u6cd5\u56de\u9000 \u7136\u540e\u6807\u6ce8\u5e9f\u5f03 \u8fd9\u6837\u4f1a\u66f4\u597d\n. ??\nBest regards.\nYours sincerely, Victor Zeng.?\n\u5728 2016\u5e744\u670827\u65e5\uff0c\u4e0a\u534812:33\uff0c\u9ad8\u94c1 notifications@github.com<mailto:notifications@github.com> \u5199\u9053\uff1a\n\u4e00\u5b9a\u8981\u517c\u5bb9\uff0c\u5426\u5219\u5c31\u4f1a\u7ed9\u4eba\u5e26\u6765\u9ebb\u70e6\n\u2015\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/alibaba/fastjson/pull/583#issuecomment-214803582\n. @wenshao wiki \u5df2\u66f4\u65b0\n. FastJson 1.2.10 \u76ee\u524d\u4e0d\u517c\u5bb9 Spring 4.2+ \n\u4e0b\u4e00\u7248\u672c\u4e2d\u5c06\u8fdb\u884c\u66f4\u65b0\n. @comenglish Which version of Spring and fastjson  you are using? \n. @comenglish https://github.com/alibaba/fastjson/wiki/FastJsonHttpMessageConverter_EN\n. @lvhao https://github.com/alibaba/fastjson/wiki/FastJsonHttpMessageConverter_CN\n. @comenglish see package /src/test/java/com/alibaba/json/bvt/support/spring/mock/...\nthe testcase https://github.com/alibaba/fastjson/blob/master/src/test/java/com/alibaba/json/bvt/support/spring/mock/testcase/FastJsonHttpMessageConverter4Test.java\n. @comenglish please show your JS file, maybe I will find some reasons.\n. @comenglish First of all, please understand the Spring MVC.\n. @comenglish \u4f60\u770b\u4e00\u4e0b\u5177\u4f53\u7684 mock testcase \u5e94\u8be5\u5c31\u4f1a\u660e\u767d\u4e86 \u6570\u7ec4\u548c\u6cdb\u578b\u90fd\u4e0d\u662f\u95ee\u9898\uff01\n\u4ee3\u7801\u5728\u8fd9\u4e2a\u5305\u4e0b\u9762 /src/test/java/com/alibaba/json/bvt/support/spring/mock/ \n. @ydq \u62a5\u9519\u662f\u6b63\u786e\u7684 \u56e0\u4e3aSpringConverter\u4f1a\u6821\u9a8c\u524d\u53f0\u4f20\u9001\u6570\u636e\u7684\u7c7b\u578b \u7136\u540e\u7ed1\u5b9a\u5b9e\u4f53\u7c7b FastJsonHttpMessageConverter\u662f\u517c\u5bb9Spring4.2\u4ee5\u4e0b\u7248\u672c \u5e76\u6ca1\u6709\u6821\u9a8c\u6570\u636e\u7c7b\u578b\n. @wenshao \u8fd9\u4e2a\u597d\u50cf\u4e0d\u662fspring\u7684\u95ee\u9898\uff0c\u5bf9Retrofit2\u4e5f\u4e0d\u592a\u719f\u6089\uff0c\u4e0d\u597d\u610f\u601d\u3002\n. \u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a https://github.com/ligboy/retrofit-converter-fastjson  from #803\n. @An0nymous0 \n\u4f60\u6240\u6307\u7684Spring\u539f\u751f\u7684HttpMessageConverter, \u5e94\u8be5\u662fMappingJackson2HttpMessageConverter, \u800c\u4f60\u4f7f\u7528Jsonp\u7684AOP\u62bd\u8c61AbstractJsonpResponseBodyAdvice \u7ee7\u627f\u81eaAbstractMappingJacksonResponseBodyAdvice\u7c7b, \u5b83\u4ec5\u4ec5\u652f\u6301Jackson\u7684HttpMessageConverter, \u6240\u4ee5\u5bf9FastJsonHttpMessageConverter\u4e0d\u751f\u6548.\nAbstractMappingJacksonResponseBodyAdvice \u7684\u63a5\u53e3\u662f ResponseBodyAdvice<T> \u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u5df1\u5b9e\u73b0Jsonp AOP\u5207\u9762.\n. @myoss \u6682\u65f6\u65e0\u5176\u4ed6\u65b9\u5f0f\n. @wenshao \u62b1\u6b49 Spring websocket \u6211\u4e5f\u4e0d\u592a\u719f...\n. @suimi FastJsonHttpMessageConverter\u662f\u5bf9\u679a\u4e3e\u7c7b\u578b\u5b8c\u5168\u652f\u6301\u7684, \u8bf7\u89c1testcase #758 FastJsonHttpMessageConverterTest.test5()\n\u8bf7\u7528\u4f7f\u7528\u6807\u51c6JSON\u683c\u5f0f\u8fdb\u884c\u5b9e\u4f53\u5bf9\u8c61\u7684\u6570\u636e\u7ed1\u5b9a\n. @lqs0112 FastJsonHttpMessageConverter\u662f\u5bf9\u6cdb\u578b\u7c7b\u578b\u5b8c\u5168\u652f\u6301\u7684, \u8bf7\u89c1testcase #758.\nFastJsonHttpMessageConverterTest.test4()\n. @lqs0112 \u4e0d\u77e5\u4e3a\u4f55\u597d\u591a\u6cdb\u578b\u4f1a\u51fa\u73b0\u95ee\u9898, \u8bf7\u63d0\u4f9b\u4e00\u4e0b\u6d4b\u8bd5\u6570\u636e\u6216\u6d4b\u8bd5\u7528\u4f8b.\n. @wenshao \u62b1\u6b49\u8fd9\u51e0\u5929outing \u6ca1\u7f51\u7edc...\n@JeffLu \u65b0\u7248\u672c\u7684FastJsonHttpMessageConverter\u5e76\u6ca1\u6709\u6307\u5b9a\u7279\u5b9a\u7684MediaType, \u9ed8\u8ba4\u6240\u6709\u7c7b\u578b\u90fd\u652f\u6301. \u5982\u679c\u9700\u8981\u5bf9ContentType\u505a\u9650\u5b9a\u53ef\u4ee5\u8bbe\u7f6esupportedMediaTypes\u5c5e\u6027. \ne.g.\n<bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>application/json</value>\n            <value>application/*+json</value>\n        </list>\n    </property>\n</bean>\n. @JeffLu \u5bf9\u4e8e\u5728\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6240\u9020\u6210\u7684\u914d\u7f6e\u53d8\u66f4\u6df1\u611f\u62b1\u6b49, \u4f46\u4fdd\u6301\u5f00\u653e\u6027\u7684\u539f\u5219\u66f4\u4e3a\u7406\u60f3.\n. \u9ad8\u94c1\uff0cissue\u4e2d\u5f88\u591a\u5728Spring\u4e2d\u4f7f\u7528FastJsonHttpMessageConverter\u5bf9\u6cdb\u578b\u3001\u679a\u4e3e\u3001\u6570\u7ec4\u7b49\u7ed1\u5b9a\u6570\u636e\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e76\u6ca1\u6709\u51fa\u73b0\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8fd9\u8fb9\u9879\u76ee\u4f7f\u7528FastJson\u4e5f\u6ca1\u6709\u51fa\u73b0\u8fc7\u95ee\u9898\u3002\n\u4e0d\u77e5\u662f\u5426Spring\u4e0d\u540c\u7248\u672c\u5bfc\u81f4\uff0c\u8fd8\u662f\u4f7f\u7528\u975e\u6807\u51c6Json\u683c\u5f0f\u3002\n\u5728 2016\u5e748\u67088\u65e5\uff0c\u4e0b\u53487:34\uff0c\u9ad8\u94c1 notifications@github.com<mailto:notifications@github.com> \u5199\u9053\uff1a\nMerged #758https://github.com/alibaba/fastjson/pull/758.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/alibaba/fastjson/pull/758#event-748256809, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AIsBm6skUbVrmyplwJkWlpBViUvSvgR1ks5qdxRLgaJpZM4Jewky.\n. @WellJay \u8bf7\u63d0\u4f9b\u4e00\u4e0b\u4f60\u7684testcase\n\u6211\u7528FastJson\u548cGson\u5206\u522b\u5728spring mock\u4e2d\u6d4b\u8bd5, response body\u4e2d\u90fd\u662f\u4e00\u81f4\u7684.\nFastJsonHttpMessageConverter\nMockHttpServletResponse:\n           Status = 400\n    Error message = null\n          Headers = {Content-Type=[application/json;charset=UTF-8], Content-Length=[29]}\n     Content type = application/json;charset=UTF-8\n             Body = \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\"\n    Forwarded URL = null\n   Redirected URL = null\n          Cookies = []\nGsonHttpMessageConverter\nMockHttpServletResponse:\n           Status = 400\n    Error message = null\n          Headers = {Content-Type=[application/json;charset=UTF-8]}\n     Content type = application/json;charset=UTF-8\n             Body = \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\"\n    Forwarded URL = null\n   Redirected URL = null\n          Cookies = []\n. @805728578 IOUtils\u4e2d\u7684UTF8\u662f\u4ecefastjson 1.2.10\u7248\u672c\u5c31\u5f00\u59cb\u6709\u4e86 \u786e\u8ba4\u4e00\u4e0b\u662f\u5426\u5b58\u5728\u591a\u4e2afastjson\u7248\u672c\n. @805728578 \u8bf7\u63d0\u4f9b\u4e00\u4e0b\u6d4b\u8bd5\u7528\u4f8b\n. @805728578 \u80fd\u5426\u63d0\u4f9b\u5b8c\u6574\u7684mock testcase \u5305\u62ec\u914d\u7f6e\u6587\u4ef6\u7b49\u7b49 \u8fd9\u4e2a\u95ee\u9898\u5b9e\u5728\u4e0d\u597d\u5b9a\u4f4d\n. @spiritelf spring \u548c fastjson\u90fd\u662f\u4ec0\u4e48\u7248\u672c\n. @yl23250 #671\n. @yl23250 supportedMediaTypes\u7684\u542b\u4e49\u662f\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u63a5\u6536\u548c\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u76f8\u5f53\u4e8e\u6240\u6709\u7c7b\u578b\u90fd\u652f\u6301\uff0c\u5982\u679c\u8bbe\u7f6esupportedMediaTypes \u4e3a application/json\u76f8\u5f53\u4e8e\u4ec5\u4ec5\u652f\u6301Content-Type:application/json\u8fd9\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u4f60\u7684\u95ee\u9898\u5e94\u8be5\u662fContent-Type\u5e76\u6ca1\u6709\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u7684application/x-www-form-urlencoded \uff0c\u6240\u4ee5406\uff0cFastjson1.2.7\u7684\u65f6\u5019\u5bf9\u8fd9\u4e2a\u5e76\u6ca1\u6709\u4e25\u683c\u7684\u63a7\u5236\u3002\n. @805728578 \u8bf7\u95ee\u62a5\u4ec0\u4e48\u9519 \u8bf7\u63d0\u4f9b\u6d4b\u8bd5\u7528\u4f8b\n. @805728578 \u6309\u7167\u4f60\u7684\u65b9\u5f0f\u5199\u4e86\u4e2atestcase \u5e76\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38. see FastJsonControllerTest.test6()\nFastJsonHttpMessageConverterTest.test6()\n. @805728578 \u53ef\u4ee5merge\u4ee5\u4e0a\u4ee3\u7801\u5230\u9879\u76ee\u4e2d\u5417\n. @805728578 \u5728http\u62a5\u6587\u4e2d\uff0c\u901a\u8fc7form\u8868\u5355\u63d0\u4ea4\u7684\u6570\u636e\u683c\u5f0f\u975e\u6807\u51c6JSON\u3002(e.g userId=3&flag=1) \u5982\u679c\u4e0d\u7528spring @RequestBody\u6ce8\u89e3\u5c31\u4e0d\u4f1a\u5bf9\u8d70spring convertor\uff0c\u901a\u8fc7@RequestParam \u76f4\u63a5\u4ece\u8868\u5355\u4e2d\u83b7\u53d6\u6570\u636e\u6216\u76f4\u63a5\u7ed1\u5b9a\u6570\u636e\u5bf9\u8c61\u3002\n@wenshao \u8fd9\u79cd\u683c\u5f0f\u7684\u8868\u5355\u6570\u636e\u662f\u5426\u8003\u8651\u652f\u6301\nCaused by: com.alibaba.fastjson.JSONException: syntax error, pos 6, json : userId=3&flag=1\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1361)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1268)\n    at com.alibaba.fastjson.serializer.StringCodec.deserialze(StringCodec.java:105)\n    at com.alibaba.fastjson.serializer.StringCodec.deserialze(StringCodec.java:87)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:614)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:339)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:307)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:270)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:370)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:452)\n    at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.read(FastJsonHttpMessageConverter.java:190)\n. @805728578 \u8fd9\u5757\u573a\u666fJackson/Gson/Genson \u4e5f\u652f\u6301\u5417 \u975e\u6807\u51c6JSON\u7684\u6570\u636e\n@wenshao \u4ece Spring Converter \u4e2d\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u6570\u636e\u7684\u683c\u5f0f \u5c31\u662f\u4e00\u4e2a\u975e\u6807\u51c6JSON\u7684\u6570\u636e(e.g userId=3&flag=1) FastJson\u76ee\u524d\u4e0d\u652f\u6301\u5440\n. @805728578 \u80fd\u5426merge\u4e00\u4e9b\u8be5\u95ee\u9898\u7684testcase\n. @hadesvip  spring version \u591a\u5c11\n. @hadesvip \n<bean id=\"fastJsonpResponseBodyAdvice\" class=\"com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice\">\n    <constructor-arg>\n        <list>\n            <value>callback</value>\n            <value>jsonp</value>\n        </list>\n    </constructor-arg>\n</bean>\n@myoss \u662f\u5426\u5e94\u8be5\u8bbe\u7f6e\u4e00\u4e2adefault queryParamName\n. @yuanqiangxie \u4f7f\u7528spring4.3.3\u7248\u672c \u5e76\u672a\u590d\u73b0\u6b64\u95ee\u9898 \u8bf7\u63d0\u4f9btestcase\n. @CharkeyQK \u80fd\u63d0\u4f9b\u4e00\u4e0btestcase\u5417. @CharkeyQK \u6309\u7167\u4f60\u63d0\u4f9b\u7684\u6d4b\u8bd5\u7528\u4f8b\u786e\u5b9e\u51fa\u73b0\u4e86\u540c\u6837\u95ee\u9898, fastjson\u76ee\u524d\u5e76\u4e0d\u652f\u6301\u6839\u636e\u672a\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b\u5bf9\u8c61(MsgHeader req)\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728OfferCatalogController\u4e2d\u91cd\u6784get\u65b9\u6cd5\u3002\n```\n@Controller\n@RequestMapping(\"/offerCatalog\")\npublic class OfferCatalogController extends BaseController {\n@Override\npublic MsgHeader<List<OfferCatalogVo>> get(@RequestBody MsgHeader<OfferCatalogVo> req) {\n\n    return super.get(req);\n}\n\n}\n@wenshao Jackson\u7684\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u7279\u6b8a\uff0cJackson\u5c06\u8fd9\u79cd\u672a\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b\u5bf9\u8c61\u91cd\u65b0\u68c0\u67e5\u4e00\u904d\uff0c\u5e76\u6839\u636e\u5176\u5b50\u7c7b\u4ea7\u751f\u65b0\u6570\u636e\u7c7b\u578b\u3002. @Slahser uriInfo \u4e3a\u4ec0\u4e48\u5220\u9664\u4e86. @ITHTT spring \u548c fastjson \u7248\u672c\u5404\u591a\u5c11. @ITHTT \u8bd5\u8bd5 FastJsonHttpMessageConverter4. @darkpower  FastJsonHttpMessageConverter4 \u548c FastJsonHttpMessageConverter \u5bf9\u4e8eSerializerFeature\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e00\u81f4\u7684 \u5982\u679cFastJsonHttpMessageConverter\u597d\u7528 \u7406\u8bba\u4e0aFastJsonHttpMessageConverter4\u4e5f\u5e94\u8be5\u597d\u7528 \u8bf7\u63d0\u4f9b\u4e00\u4e0btestcase\u5427. @myoss support \u4e00\u4e0b \u8c22\u8c22~. @uaufdh MediaType.ALL\u662f\u652f\u6301\u6240\u6709\u8bf7\u6c42\u7c7b\u578b\uff0c\u4fee\u6539\u4e3aMediaType.APPLICATION_JSON, new MediaType(\"application\", \"+json\") \u96be\u5f97\u4ec5\u652f\u6301JSON\u76f8\u5173\u7c7b\u578b\u5417\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u4e0b\u9762\u5c5e\u6027\u7075\u6d3b\u914d\u7f6e\n\n\napplication/json\n\n\n``\nPS: \u5ba2\u6237\u7aef\u8bf7\u6c42\u8bbe\u7f6eContent-Type\u6709\u52a9\u4e8e\u5e2e\u52a9\u670d\u52a1\u7aef\u505a\u51fa\u51c6\u786e\u7684\u9002\u914d\uff0c\u5e76\u4e0d\u4e00\u5b9ajackson\u5c31\u662f\u6700\u5408\u7406\u7684\uff0c\u4e0d\u8981\u5148\u5165\u4e3a\u4e3b\u3002. @uaufdh Content-Type\u8bbe\u7f6e\u4e86\u5417. @282919088 \u5efa\u8bae\u901a\u8fc7FastJsonConfig\u8bbe\u7f6eFilter \u770b\u770b\u80fd\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42. @282919088 \u4f60\u8fd9\u79cd\u9700\u6c42\u786e\u5b9e\u592a\u4e2a\u6027\u5316\u4e86\uff0c\u80fd\u5426\u5728\u4e1a\u52a1\u4e0a\u53bb\u53d8\u66f4\uff0c\u6216\u8005\u5b9a\u4e492\u4e2a\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u628a\u4f60\u60f3\u6cd5merge\u8fdb\u6765\uff0c\u4e00\u8d77\u5b8c\u5584\u3002. \u6211\u5728\u4f7f\u7528CXF\u672a\u53d1\u73b0\u6b64\u95ee\u9898\uff0cCXF\u4e5f\u662f\u57fa\u4e8eJAX-RS\u6807\u51c6\u7684\u5b9e\u73b0\u7684\uff0c\u76ee\u524d\u5728jsr311-api-1.1.1 \u548c javax.ws.rs-api-2.0.1.jar\u4e2d\u7684\u786e\u662fMultivaluedMap<String, Object> httpHeaders\uff0c\u80fd\u5426\u63d0\u4f9b\u4e00\u4e0btestcase. @eoss1990 CXF 3.1.10 \u597d\u5427..... @eoss1990 OK. @wudihaike \u6211\u611f\u89c9\u4f60\u9700\u8981\u7684\u5e94\u8be5\u662f SerializerFeature.WriteNullStringAsEmpty. @wudihaike see https://github.com/alibaba/fastjson/wiki/FastJsonHttpMessageConverter_CN. @DarkRake \u6362\u6210 FastJsonHttpMessageConverter4 \u8bd5\u8bd5. @DarkRake \u6362\u6210 FastJsonHttpMessageConverter4 \u8bd5\u8bd5. @shotdog fastjson\u5bf9Spring\u7684\u652f\u6301\u662f\u4ece1.2.10\u7248\u672c\u5f00\u59cb\u7684 @see [FastJsonHttpMessageConverter](https://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/support/spring/FastJsonHttpMessageConverter.java) 1.1.37 \u4f60\u5e94\u8be5\u662f\u7528\u4e86\u4e0d\u540c\u7684Spring MessageConverter. @yanquanyu [SimplePropertyPreFilter](https://github.com/alibaba/fastjson/wiki/%E4%BD%BF%E7%94%A8SimplePropertyPreFilter%E8%BF%87%E6%BB%A4%E5%B1%9E%E6%80%A7) \u4e0d\u80fd\u6ee1\u8db3\u8fd9\u6837\u7684\u9700\u6c42\u5417\uff1f. @yanquanyu [@JSONField](https://github.com/alibaba/fastjson/wiki/JSONField) \u770b\u770b\u8fd9\u4e2a\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684. @yanquanyu \u6211\u660e\u5929\u4f60\u7684\u610f\u601d\u4e86 \u540c\u4e00\u4e2aPO\u7c7b \u4e0d\u540c\u7684\u65b9\u6cd5\u8fd4\u56de\u7684\u5c5e\u6027\u4e0d\u540c \u76ee\u524dfastjson\u5e94\u8be5\u662f\u4e0d\u884c\u7684 \u4f46\u662f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u75282\u4e2aPO\u6765\u63cf\u8ff0\u8fd9\u4e2a\u573a\u666f\u5462? \u5982\u679c\u5fc5\u987b\u8fd9\u6837\u7684\u8bdd \u8bf7\u63d0\u4f9b\u4e00\u4e0btestcase. @felayman \u4f60\u8fd9\u79cd\u60c5\u51b5\u8c8c\u4f3cSimplePropertyPreFilter \u5c31\u53ef\u4ee5\u5b9e\u73b0\u5427. @wenshao OK \u53ef\u4ee5merge. @liangzhongqiu \u8bf7\u63d0\u4f9b\u4e00\u4e0btest case. @liangzhongqiu \u8fd9\u6837\u6216\u8bb8\u80fd\u5e2e\u5230\u4f60JSON.DEFAULT_GENERATE_FEATURE = SerializerFeature.config(JSON.DEFAULT_GENERATE_FEATURE, SerializerFeature.WriteEnumUsingName, false);\n. Ok \ud83d\udc4d. \u6211\u8fd9\u91cc\u6d4b\u8bd5\u6ca1\u53d1\u73b0\u8be5\u95ee\u9898 jersey 2.23.2 fastjson 1.2.35 \ntestcase see #1342. @tbjinyuan \u80fd\u5426\u63d0\u4ea4\u4e00\u4e0b\u6d4b\u8bd5\u7528\u4f8b \u6211\u8fd9\u91cc\u6ca1\u6cd5\u590d\u73b0\u4f60\u7684\u95ee\u9898 testcase see #1342. @tbjinyuan \u62b1\u6b49\uff0c\u590d\u73b0\u4e0d\u51fa\u6765\u4f60\u4e2a\u95ee\u9898\uff0c\u6211\u7684\u6d4b\u8bd5\u7528\u4f8b\u548c\u4f60\u63d0\u4f9b\u7684\u57fa\u672c\u4e00\u6837\uff0c\u8bf7\u89c1#1342\n\u6216\u8005\u53bb\u6389swagger\u518d\u8bd5\u8bd5. @neil4dong \u62b1\u6b49\uff0c\u6d4b\u8bd5\u7528\u4f8b\u662f\u5728\u672c\u5730\u5de5\u7a0b\u5199\u7684\uff0c\u6ca1\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u7784\u4e86\u4e00\u773cJersey\u6e90\u7801\uff0cGenson\u6709AutoDiscoverable`\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u81ea\u52a8\u52a0\u8f7d\u4e86. @tbjinyuan \u76ee\u524dJersey\u5df2\u6ce8\u518c\u7c7b(Provider/Feature/...)\u662f\u65e0\u6cd5\u8fdb\u884c\u5220\u9664\u7684\uff0cFastJsonFeature \u4e2d\u7684\u4ee3\u7801\u5728Jersey\u4e2d\u5176\u5b9e\u65e0\u6cd5\u5bf9FastJsonProvider\u91cd\u65b0\u6ce8\u518c\uff0c\u5728\u201c\u6ce8\u518c\u5171\u6027\u6269\u5c55\u70b9\u201c\u65f6\uff0c\u5c31\u5e94\u8be5\u76f4\u63a5\u6ce8\u518cFastJsonProvider\uff0ce.g.\n```\nprotected void registerProviders() {\n...\n//use alibaba fastsjon\nFastJsonProvider fastJsonProvider = new FastJsonProvider();\nFastJsonConfig fastJsonConfig = new FastJsonConfig();\nfastJsonConfig.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect,SerializerFeature.BrowserSecure);\nfastJsonProvider.setFastJsonConfig(fastJsonConfig);\nregister(fastJsonProvider);\n...\n}\n. @tbjinyuan \u4f60\u8fd9\u4e2aFastJsonFeature\u4e2d\u7684\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u662f\u6ca1\u6709\u7528\u7684 Jersey register\u7684\u7c7b\u662f\u6ca1\u6cd5\u5220\u9664\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u6ce8\u518c\u4e86\u591a\u4e2aJsonFeature\u6216\u8005JsonProvider\u7684\u8bdd\uff0cJersey\u6bcf\u6b21\u90fd\u4f1a\u904d\u5386\u4e00\u904d\uff0c\u7136\u540e\u6839\u636eMediaType\u627e\u4e00\u4e2a\u6700\u5408\u9002\u7684\u3002. @tbjinyuan \u6240\u4ee5\u53ea\u9009\u62e9\u4e00\u79cdjson\u5de5\u5177\u7c7b\u5427 \u9009\u62e9fastjson\u5c31\u4e0d\u8981\u7528Jackson\u4e86. @tbjinyuan Jackson\u4e0d\u662f\u4e5f\u9ed8\u8ba4\u4e86\u561b. @tbjinyuan \u5f53\u7136\u4e86\uff0c\u51b5\u4e14 1.2.36 FastJsonConfig \u5df2\u7ecf\u9ed8\u8ba4\u4e86SerializerFeature.BrowserSecure . @tbjinyuan \u8fd9\u4e2a\u6211\u9a8c\u8bc1\u8fc7 \u6ca1\u6709\u95ee\u9898\u554a \u4f60\u63d0\u4f9b\u4e00\u4e0b\u6d4b\u8bd5\u7528\u4f8b. @tbjinyuan \u544a\u8bc9\u4e2a\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\u628a jersey-media-json-jackson \u5305\u6392\u9664\u6389 . @tbjinyuan \u90a3\u5c31\u628aFastJsonFeature\u52a0\u4e0a\u5427 \u5927\u5144\u5f1f. @tbjinyuan \u4e3a\u4f60\u91cf\u8eab\u5b9a\u505a\u7684 #1396. @vipcxj \u6211\u4eec\u4e5f\u6b63\u5728\u8003\u8651\u8fd9\u79cd\u6a21\u5757\u5316\u65b9\u5f0f. @tbjinyuan \u8fd9\u4e2a\u5efa\u8bae\u5f88\u597d~. see #1396. @firingsloth In Jersey `FastJsonAutoDiscoverable.autoDiscover = false; ` \nsee https://github.com/alibaba/fastjson/wiki/Integrate-Fastjson-in-JAXRS. @firingsloth \u53ef\u80fdRestEasy\u81ea\u52a8scan\u4e86provider\u5427\uff0c\u8fd9\u6837\u8bd5\u8bd5\u5462xml\n     \nresteasy.scan.providers\nfalse\n\n <context-param>\n     <param-name>resteasy.providers</param-name>\n     <!-- \n     <param-value>com.alibaba.fastjson.support.jaxrs.FastJsonProvider</param-value>\n     -->\n     <param-value>com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider</param-value>\n </context-param>\n\n``. @caorong see #1501 . @rplees  \u4f60\u7684\u8bc9\u6c42\u662f\u5373\u53ef\u4ee5\u4f7f\u7528FastJsonpResponseBodyAdvice\u6765\u4f7f\u7528jsonp\u63a5\u53e3\uff0c\u7136\u540e\u53c8\u80fd\u5728\u6b63\u5e38json\u63a5\u53e3\u8fd4\u56deMediaType.APPLICATION_JSON \u5bf9\u5427. @yizmao \u4f60\u786e\u5b9a\u5c06FastJsonConfig\u6ce8\u5165\u5230FastJsonHttpMessageConverter\uff1f. @yizmao \u670b\u53cb\uff0c\u4f60\u5f97converter.setFastJsonConfig(config);`. @htyoung \n\u8fd9\u662fSpring HttpHeaders\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\njava\n/**\n * Set the {@linkplain MediaType media type} of the body,\n * as specified by the {@code Content-Type} header.\n */\npublic void setContentType(MediaType mediaType) {\n  Assert.isTrue(!mediaType.isWildcardType(), \"'Content-Type' cannot contain wildcard type '*'\");\n  Assert.isTrue(!mediaType.isWildcardSubtype(), \"'Content-Type' cannot contain wildcard subtype '*'\");\n  set(CONTENT_TYPE, mediaType.toString());\n}\n\u914d\u7f6e\u4e00\u4e0bMediaType\u5c31\u597d\u4e86\nxml\n<bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n  <property name=\"supportedMediaTypes\">\n    <list>\n      <value>application/json;charset=UTF-8</value>\n    </list>\n  </property>\n</bean>. @htyoung \u4e0d\u662f\u548cSpring\u4e0d\u517c\u5bb9 \u662fspring\u5f3a\u5236\u9700\u8981\u7528\u6237\u8bbe\u7f6eMediaType \u8fd9\u70b9\u8981\u6e05\u695a. @htyoung \u4f60\u89c9\u5f97\u9ed8\u8ba4\u54ea\u4e2aMediaType\u4f1a\u6bd4MediaType.ALL\u597d\u5462. @htyoung \u7406\u8bba\u4e0aMediaType\u4e0eJSON\u683c\u5f0f\u662f\u65e0\u5173\u7684 \u4efb\u4f55MediaType\u90fd\u53ef\u4ee5\u901a\u8fc7Fastjson\u8f6c\u6362. @xingguang2013 \u5728\u542f\u52a8jersey  \u4e4b\u524d FastJsonAutoDiscoverable.autoDiscover = false; \u8bd5\u8bd5. @xingguang2013 \u4e0d\u597d\u610f\u601d weblogic\u4e0d\u592a\u719f \u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4ec0\u4e48\u914d\u7f6e\u80fd\u66f4\u6539 \u4e0d\u81ea\u52a8scan Provider. @kimmking \u6211\u6240\u8bf4\u7684\u6a21\u5757\u5316\u5c31\u662f\u8fd9\u4e2a\u610f\u601d. https://github.com/alibaba/fastjson/wiki/TypeReference\n```java\n    @Test\n    public void test() {\n    RegResponse<User> userRegResponse = testFastJson(User.class);\n\n    User user = userRegResponse.getResult();\n    System.out.println(user);\n\n}\n\npublic static <T> RegResponse<T> testFastJson(Class<T> clasz) {\n\n    //\u628abody\u89e3\u6790\u6210\u4e00\u4e2a\u5bf9\u8c61\n    String body = \"{\\\"retCode\\\":\\\"200\\\", \\\"result\\\":{\\\"name\\\":\\\"Zhangsan\\\",\\\"password\\\":\\\"123\\\"}}\";\n\n    return JSON.parseObject(body, new TypeReference<RegResponse<T>>(clasz) {});\n}\n\n. @durianskh \u7528\u6700\u65b0\u7248\u8bd5\u8bd5java\n    private Object readType(Type type, HttpInputMessage inputMessage) throws IOException {\n    try {\n        InputStream in = inputMessage.getBody();\n        return JSON.parseObject(in, fastJsonConfig.getCharset(), type, fastJsonConfig.getFeatures());\n    } catch (JSONException ex) {\n        throw new HttpMessageNotReadableException(\"JSON parse error: \" + ex.getMessage(), ex);\n    } catch (IOException ex) {\n        throw new HttpMessageNotReadableException(\"I/O error while reading input message\", ex);\n    }\n}\n\n. @jarvan4dev \u53bb\u6389 SerializerFeature.WriteNullBooleanAsFalse. @jarvan4dev \u53bb\u6389 SerializerFeature.WriteNullBooleanAsFalse. @lichong2  \u5efa\u8bae\u4f7f\u7528\u6ce8\u89e3 `@ResponseJSONP` \u548c `JSONPResponseBodyAdvice`\n  . @helloworldtangxml\n\n\n\n\n\napplication/json\n\n\n\n\n\n. @FlyingPigQAQ supportedMediaTypes.add(MediaType.\u5177\u4f53\u7c7b\u578b); '*' \u4e0d\u5b89\u5168. @FlyingPigQAQ \u8fd9\u4e2a\u662fSpring\u63a7\u5236\u7684.... @zhangfei9734 \u80fd\u5426\u63d0\u4f9b\u4e00\u4e0btestcase \u8bf4\u660e\u4e00\u4e0b\u4f60\u7684\u95ee\u9898. @zhangfei9734 \u95ee\u9898\u5728\u4e8e\u4f60\u7684 Content-Type \u662f application/x-www-form-urlencoded \nhttp\u8bf7\u6c42\u62a5\u6587\u7c7b\u578b\u5982\u679c\u662fapplication/x-www-form-urlencoded \u4f60\u63d0\u4ea4\u7684\u6570\u636e\u4f1a\u683c\u5f0f\u5c31\u4f1a\u662f\u8fd9\u6837\u5b50 \u6839\u672c\u65e0\u6cd5\u89e3\u6790\nParameters = {{\"domain\":\"name\"}=[null]}\nHeaders = {Content-Type=[application/x-www-form-urlencoded]}\n. @zhangfei9734 \n\u5982\u679c\u63d0\u4ea4\u662fJSON\u683c\u5f0f\u7684\u6570\u636e Content-Type \u4f7f\u7528 application/json\n\u800c\u4f7f\u7528 application/x-www-form-urlencoded \u65f6\u4e00\u822c\u662f\u4f7f\u7528form\u8868\u5355\u63d0\u4ea4 \u901a\u8fc7`@RequestParam` \u7ed1\u5b9a\u53c2\u6570 \u800c\u4e0d\u662f`@RequestBody`. @jerry-yuan \u80fd\u5426\u8bf4\u660e\u4e00\u4e0b\u5177\u4f53\u5e94\u7528\u573a\u666f\uff0c\u6216\u8005\u60a8\u7684\u9700\u6c42\uff0c\u9700\u8981\u600e\u6837\u7684JsonView\u529f\u80fd\u5728Fastjson\u4e0a\u5b9e\u73b0. @jerry-yuan @FastJsonView\u548c@FastJsonFilter\u5e94\u8be5\u53ef\u4ee5\u6ee1\u8db3\u4f60 \u4f46\u662f\u9700\u8981\u914d\u7f6eFastJsonViewResponseBodyAdvice\u5728Spring\u4e2d. @lihengming \u9ebb\u70e6\u770b\u4e00\u4e0b. see https://github.com/alibaba/fastjson/wiki/%E5%9C%A8-Spring-%E4%B8%AD%E9%9B%86%E6%88%90-Fastjson#%E5%9C%A8-spring-data-redis-%E4%B8%AD%E9%9B%86%E6%88%90-fastjson. fixed by #2153 . fixed by #2153 . @kkrout \u8bd5\u8bd5java\nString str1 = JSON.parseObject(\"\\\"1111-11-11\\\"\", String.class);\n. JSON\u7684\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u5e2e\u5230\u4f60java\n    public static  T parseObject(InputStream is, //\n                                    Charset charset, //\n                                    Type type, //\n                                    Feature... features) throws IOException {\n        ...\n    }\n```\njava\n    public static final int writeJSONString(OutputStream os, // \n                                             Charset charset, // \n                                             Object object, // \n                                             SerializerFeature... features) throws IOException {\n        ...\n    }. @lihengming \u5e2e\u5fd9\u770b\u4e00\u4e0b. @DreamXiao see https://github.com/alibaba/fastjson/wiki/%E5%9C%A8-Spring-%E4%B8%AD%E9%9B%86%E6%88%90-Fastjson#%E5%9C%A8-spring-data-redis-%E4%B8%AD%E9%9B%86%E6%88%90-fastjson. @DreamXiao \u201c\u901a\u5e38\u4f7f\u7528 GenericFastJsonRedisSerializer \u5373\u53ef\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\uff0c\u5982\u679c\u4f60\u60f3\u5b9a\u4e49\u7279\u5b9a\u7c7b\u578b\u4e13\u7528\u7684 RedisTemplate \u53ef\u4ee5\u4f7f\u7528 FastJsonRedisSerializer \u6765\u4ee3\u66ff GenericFastJsonRedisSerializer\u201d \u4e5f\u5c31\u662f\u8bf4GenericFastJsonRedisSerializer \u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u5bf9\u8c61\u7c7b\u578b\uff0cFastJsonRedisSerializer \u9700\u8981\u81ea\u5b9a\u4e49\u8f6c\u6362\u9700\u8981\u7684\u7c7b\u578b\u3002. fixed  by #2153 . @wenshao PTAL~. @masterchengsheng \u5199\u4e86\u4e2a\u6d4b\u8bd5\u7528\u4f8b \u5e76\u6ca1\u6709\u51fa\u73b0\u95ee\u9898\u554a see  https://github.com/alibaba/fastjson/blob/1c6df2ff6fc9ac320bf8c58519aa58345000d364/src/test/java/com/alibaba/json/bvt/support/spring/GenericFastJsonRedisSerializerTest.java#L61. @masterchengsheng \u80fd\u5426\u628a\u51fa\u95ee\u9898\u7684\u5b8c\u6574JSON\u63d0\u4f9b\u4e00\u4e0b \u6211\u518d\u6d4b\u8bd5\u4e00\u4e0b. \u8fd9\u662f\u6211\u53cd\u5e8f\u5217\u5316\u540e\u7684 \u6ca1\u6709\u95ee\u9898\u554a \n\n. @masterchengsheng \u5144\u5f1f\u513f\uff0c\u770b\u4e0d\u89c1\u4f60\u53d1\u7684\u56fe.... @masterchengsheng \u62b1\u6b49\uff0c\u5b9e\u5728\u65e0\u6cd5\u590d\u73b0\u4f60\u7684\u95ee\u9898. @masterchengsheng \u80fd\u5426\u8ddf\u5230parser.parseObject(clazz, null);\u91cc\u9762\u770b\u770b. @wenshao @masterchengsheng \u53ef\u4ee5close\u4e86. @WolfgangFahl I am very sorry, that the main reason is that  jsr311-api is incompatible with  javax.ws.rs-api, and we have to make a choice.. @WolfgangFahl I think I have a way to be compatible with jsr311-api, Please wait for the next version.. @davichi11  setFastJsonConfig(FastJsonConfig fastJsonConfig) see FastJsonConfig. \u8fd9\u884c\u4ee3\u7801\u518d\u52a0\u4e0a\u5427\u3002\u3002\u3002. OK \u597d\u5427 \u6ca1\u95ee\u9898. \u6216\u8005\u518d\u589e\u52a0\u4e00\u4e2a\u8fd9\u4e2a\u65b9\u6cd5\u5982\u4f55\njava\nJSON.toJSONBytes(Object object, // \n                 SerializeConfig config, // \n                 SerializeFilter[] filters, // \n                 String dateFormat, //\n                 int defaultFeatures, // \n                 SerializerFeature... features);. \u6211\u4e00\u4f1a\u8981\u52a8\u624b\u4e86~. ",
    "yu120": "@wenshao \u4f60\u597d\uff0c\u8fd9\u4e2a\u529f\u80fd\u867d\u7136\u5df2\u7ecf\u5b9e\u73b0\uff0c\u4f46\u53ef\u4ee5\u505a\u5f97\u66f4\u7075\u6d3b\u70b9\u5417\uff1f\npublic static class Model {\n    public int id;\n    @JSONField(jsonDirect=true)\n    public String value;\n}\n\u6bd4\u5982\u8bf4value\u81ea\u52a8\u9002\u914d\uff0c\u5982\u679cvalue\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\u5c31\u4f1a\u81ea\u52a8\u9002\u914d\u8be5\u529f\u80fd\uff0c\u5b9e\u73b0\u6807\u51c6json\u5316\uff1b\u5982\u679cvalue\u4e0d\u662f\u4e00\u4e2ajson\uff0c\u5219\u76f4\u63a5\u4f5c\u4e3aString\u7c7b\u578b\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u629b\u5f02\u5e38\u3002\n\u6216\u8005\u63d0\u4f9b\u4e00\u4e2a\u975e\u6ce8\u89e3\u7684\u65b9\u6cd5\u548c\u4e00\u4e2a\u5feb\u901f\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662fjson\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8be5\u529f\u80fd\u3002\n\u56e0\u4e3a\u6ce8\u89e3\u7684\u8bdd\uff0c\u4e00\u822c\u60c5\u51b5\u8868\u793a\u6ca1\u529e\u6cd5\u52a8\u6001\u7684\u4f7f\u7528\u8be5\u529f\u80fd\u3002\n. ",
    "88567free": "\u6211\u4f7f\u75281.1.51.android \u4e5f\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898 \u8bf7\u95ee\u6709\u89e3\u51b3\u65b9\u6cd5\u5417\n. \u55ef \u80fd\u5426\u5c3d\u5feb\u7ed9\u51fa\u89e3\u51b3\u5305\u5462\n. \u4f60\u597d\u6211\u4f7f\u7528\u4e86\u6700\u65b0\u76841.1.52.android\u53d1\u73b0\u95ee\u9898\u8fd8\u5b58\u5728 \n``` java\npublic class HttpResponse {\n    private int sign = 0 ;\n    private T d ;\n    private String msg = \"\";\n    //\u672c\u5730JsonCache\u662f\u5426\u8fc7\u671f\n    private boolean overdue = false;\n//get/set...\n}\n```\njava\npublic class DiaryDetailModel {\n    private DiaryBookModel diarybook;\n    private DiaryModel diary;\n    private List<ReplyModel> reply;\n//get/set...\n}\n\u89e3\u6790\u662f\u8fd9\u4e48\u89e3\u6790\u7684\njava\nHttpResponse<DiaryDetailModel> response = JSON.parseObject(resp, new TypeReference<HttpResponse<DiaryDetailModel>>() {\n                    });\n\u8fd8\u662f\u4f1a\u51fa\u73b0\u4f7f\u7528 response  \u5bf9\u8c61\u4f1a\u51fa\u73b0 java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to com.vmei.mm.model.DiaryDetailModel\n. ",
    "ding102992": "\u8c22\u8c22\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u53ef\u4ee5\u5173\u95ed\u8fd9\u4e2aissue\u4e86\u3002\n. ",
    "kkkkb": "public static class RequestEntry {\n......\nResult data = JSON.parseObject(result, new TypeReference>(){});\n......\n}\n\u57281.1.52.android\u4e0a\u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u5b58\u5728\uff0c\u8bf7\u95ee\u662f\u5426\u662f\u4f7f\u7528\u65b9\u5f0f\u4e0d\u6b63\u786e\uff1f\n. ",
    "LichFaker": "\u4f60\u597d\uff0c \u6211\u5728Android\u4e0a\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff08\u6cdb\u578b\u5d4c\u5957\uff0c\u8f6c\u6362\u5f02\u5e38\uff09\uff0c \u4f7f\u7528\u7684\u662f1.1.52.android jar\u5305\u3002\n\u8bf4\u660e\uff1a\n\u6211\u4e3b\u8981\u662f\u5728android.test\u5305\u4e0b\uff0c\u4f7f\u7528JUnit\u6846\u67b6\u6d4b\u8bd5\u7684\uff1a\u5f53\u4f7f\u7528Method\u7684\u65b9\u5f0f\u6d4b\u8bd5\u65f6\uff0c \u6ca1\u6709\u51fa\u73b0\u8be5\u5f02\u5e38\uff1b\u5f53\u4f7f\u7528Class\u7684\u65b9\u5f0f\u6d4b\u8bd5\u65f6\uff0c\u4f1a100%\u51fa\u73b0\u3002\n\u6211\u8bd5\u7740\u5728app\u4e2d\u76f4\u63a5parseObject\u662f\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u7684\uff0c\u6240\u4ee5\u6211\u4e0d\u786e\u5b9a\u8fd9\u662f\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u7684\u95ee\u9898\uff0c\u8fd8\u662f\u5728Android\u4e0a\u4e5f\u53ef\u80fd\u5b58\u5728\n. @nziyouren \u76ee\u524d\u6211\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c \u4f60\u53ef\u4ee5\u4e0d\u8981\u4f7f\u7528\u5d4c\u5957\u7684\u6cdb\u578b\u6216\u8005\u4f7f\u7528\u522b\u7684\u89e3\u6790\u5e93\u4ee3\u66ff\n. \u8be5\u95ee\u9898\u662f\u5728\u4f7f\u7528Retrofit2\u63a5\u6536\u670d\u52a1\u7aef\u6570\u636e\u8f6c\u5316\u6210\u5b9e\u4f53\u7c7b\u65f6\u53d1\u751f\uff0c\u63a5\u6536\u8f6c\u6362\u5b8c\u540eRespBase\u4e2d\u7684\u6cdb\u578b\u7684\u7c7b\u578b\u662fJSONObject\u800c\u4e0d\u662f\u5b9a\u4e49\u597d\u7684RespLogin\u3002\uff08\u8be5\u95ee\u9898\u5076\u5c14\u53d1\u751f\uff0c\u6211\u91cd\u65b0\u7f16\u8bd1\u6253\u5305\u5b89\u88c5\u540e\u6682\u65f6\u65e0\u6cd5\u590d\u73b0\u8be5\u95ee\u9898\u3002\u4f46\u662f\u4e0e\u6211\u5728#569\u4e2d\u63cf\u8ff0\u95ee\u9898\u7c7b\u4f3c\uff0c\u5f53\u65f6\u662f\u5728\u6d4b\u8bd5\u5305\u4e0b\uff0c\u6240\u4ee5\u6ca1\u5728\u610f\uff09\n\u90e8\u5206\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\n``` java\npublic class RespBase {\npublic int code;\n\npublic String msg;\n\npublic T data;\n\n}\n```\n``` java\npublic class RespLogin {\npublic String userToken;\npublic String id;\npublic String devAuthoCode;\npublic String phone;\npublic String clientID;\n\n}\n```\n``` java\npublic class FastJsonResponseBodyConverter implements Converter {\nprivate Type mType;\n\npublic FastJsonResponseBodyConverter(Type type) {\n    this.mType = type;\n}\n\n@Override\npublic T convert(ResponseBody value) throws IOException {\n    BufferedSource bufferedSource = Okio.buffer(value.source());\n    String tempStr = bufferedSource.readUtf8();\n    bufferedSource.close();\n    return JSON.parseObject(tempStr, mType);\n}\n\n}\n```\njava\ninterface apiService {\n    @POST(\"userManage/login/1\")\n    public Observable<RespBase<RespLogin>> login(@Body ReqLogin reqLogin);\n}\n. ",
    "wanghj1991": "\u6211\u4f7f\u75281.2.13\u7248\u672c\u8fd8\u662f\u4e0d\u884c\u554a\uff0c\u6211\u4e0d\u662fAndroid\u7684\uff0c\u662f\u7528\u7684\u6b63\u5e38web\u7248\u672c\u3002\n. ",
    "nziyouren": "@LichFaker  \u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\u7528\u7684\u6700\u65b0\u72481.1.52\u8fd8\u662f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u8bf7\u95ee\u4f60\u540e\u6765\u548b\u89e3\u51b3\u7684\uff1f\n. @wenshao \u6211\u53d1\u73b0\u6700\u65b0\u7248android\u5206\u652f\u4f9d\u7136\u5b58\u5728\u95ee\u9898\uff0c\u4f46\u4e0d\u662f\u767e\u5206\u767e\u5fc5\u73b0\u3002\u6211\u53d1\u73b0\u6211\u7684APP\u5954\u6e83\u540e\uff0c\u518d\u6b21\u8fdb\u5165APP\uff0c\u90e8\u5206\u6cdb\u578b\u4e0d\u80fd\u89e3\u6790\u53ef\u80fd\u6027\u8f83\u5927\uff0c\u800c\u4e14\u4e0d\u662f\u6240\u6709\u6cdb\u578b\u90fd\u4e0d\u80fd\u89e3\u6790\u3002\u56e0\u4e3a\u6211\u8fd9\u8fb9\u8c03\u7528\u903b\u8f91\u5f88\u7b80\u5355\uff0c\u8bf7\u95ee\u6211\u80fd\u600e\u4e48\u505a\u624d\u80fd\u51c6\u786e\u590d\u73b0\u8fd9\u4e2abug\uff0c\u5e76\u8ba9\u4f60\u4fee\u590d\uff1f\n. \u6211\u4e5f\u5076\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u5bb6\u4f19\u90fd\u597d\u7684\u89e3\u51b3\u601d\u8def\u5417\uff1f\n@shingohu @wenshao @Witype \n. \u6211\u8ddffastjson\u8017\u4e0d\u8d77\u4e86\uff0c\u5df2\u7ecf\u6362GSON\u4e86\n. ",
    "liuzhigang1237": "\u4f60\u597d 1.2.15\u4e2d\u8fd9\u79cd\u590d\u6742\u7684\u6cdb\u578b\u5d4c\u5957\u8fd8\u672a\u89e3\u51b3,1.2.16 \u57288.14\u53f7\u53d1\u5e03\u80fd\u89e3\u51b3\u8be5\u95ee\u9898\u4e48?\n. \u6211\u73b0\u5728\u75281.2.15\u8fd8\u662f\u63d0\u793a\u8fd9\u4e2a\n\" com.alibaba.fastjson.JSONException: syntax error\n. @wenshao \u5c31\u662f\u5982\u4e0b\u8fd9\u79cd\u7ed3\u6784\u7684:\njava\npublic class ResponseDO<T> {\nprivate String code;\n private T dataResult;\n}\n\u6211\u8981\u5b58\u6210json\u7684\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\nResponseDO<List<Student>>\n. @wenshao \u5c31\u662f\u5982\u4e0b\u8fd9\u79cd\u7ed3\u6784\u7684:\njava\npublic class ResponseDO<T> {\nprivate String code;\n private T dataResult;\n}\n\u6211\u8981\u5b58\u6210json\u7684\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\nResponseDO<List<Student>>\n. ",
    "xuyaqiang": "@wenshao \u4f60\u597d\uff0c\u53cd\u9988\u4e2a\u95ee\u9898\uff0c\u6cdb\u578b\u5d4c\u5957\u8d85\u8fc72\u5c42\u65e0\u6cd5\u6b63\u786e\u89e3\u6790\u6cdb\u578b\u7c7b\u578b\u7684\u95ee\u9898\u4f9d\u7136\u5b58\u5728\n. @wenshao \n\u4f60\u597d\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u91cd\u73b0\u6cdb\u578b\u591a\u5c42\u5d4c\u5957\u4e0d\u80fd\u6b63\u786e\u89e3\u6790\u7684\u95ee\u9898\uff0c\u4f7f\u7528\u7684\u662f1.2.23\u7248\u672c\u7684fastjson\uff0c\u8bf7\u5e2e\u5fd9\u89e3\u51b3\u4e0b\uff0c\u8c22\u8c22\uff01\npublic class App\n{\npublic static void main( String[] args ) throws IOException\n{\nString str1=\"{\\n\" +\n\" \"matches\":77085,\\n\" +\n\" \"groups\":[{\\n\" +\n\" \"groupValue\":1,\\n\" +\n\" \"doclist\":{\"numFound\":8945,\"start\":0,\"docs\":[\\n\" +\n\" {\\n\" +\n\" \"id\":3157808,\\n\" +\n\" \"title\":\"\u6717\u5883 2014\u6b3e 1.6L \u81ea\u52a8\u578b\",\\n\" +\n\" \"provid\":540000,\\n\" +\n\" \"cityid\":542200}]\\n\" +\n\" }},\\n\" +\n\" {\\n\" +\n\" \"groupValue\":15,\\n\" +\n\" \"doclist\":{\"numFound\":2894,\"start\":0,\"docs\":[\\n\" +\n\" {\\n\" +\n\" \"id\":3157809,\\n\" +\n\" \"title\":\"\u5b9d\u9a6c4\u7cfb 2014\u6b3e 428i xDrive\u98ce\u5c1a\u8bbe\u8ba1\u5957\u88c5\",\\n\" +\n\" \"provid\":540000,\\n\" +\n\" \"cityid\":540100}]\\n\" +\n\" }}]}\";\nString str2=\"{\\n\" +\n        \"      \\\"matches\\\":51030,\\n\" +\n        \"      \\\"groups\\\":[{\\n\" +\n        \"          \\\"groupValue\\\":3864,\\n\" +\n        \"          \\\"doclist\\\":{\\\"numFound\\\":35,\\\"start\\\":0,\\\"docs\\\":[\\n\" +\n        \"              {\\n\" +\n        \"                \\\"keyword\\\":\\\"330000_RALLY FIGHTER\\\",\\n\" +\n        \"                \\\"typetag\\\":2}]\\n\" +\n        \"          }},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"groupValue\\\":813,\\n\" +\n        \"          \\\"doclist\\\":{\\\"numFound\\\":35,\\\"start\\\":0,\\\"docs\\\":[\\n\" +\n        \"              {\\n\" +\n        \"                \\\"keyword\\\":\\\"330000_\u8d77\u4e9a \u798f\u745e\u8fea\\\",\\n\" +\n        \"                \\\"typetag\\\":2}]\\n\" +\n        \"          }}]}\";\n\nString str3=\"{\\n\" +\n        \"          \\\"groupValue\\\":1,\\n\" +\n        \"          \\\"doclist\\\":{\\\"numFound\\\":8945,\\\"start\\\":0,\\\"docs\\\":[\\n\" +\n        \"              {\\n\" +\n        \"                \\\"id\\\":3157808,\\n\" +\n        \"                \\\"title\\\":\\\"\u6717\u5883 2014\u6b3e 1.6L \u81ea\u52a8\u578b\\\",\\n\" +\n        \"                \\\"provid\\\":540000,\\n\" +\n        \"                \\\"cityid\\\":542200}]\\n\" +\n        \"          }}\";\n\nString str4=\"{\\n\" +\n        \"          \\\"groupValue\\\":3864,\\n\" +\n        \"          \\\"doclist\\\":{\\\"numFound\\\":35,\\\"start\\\":0,\\\"docs\\\":[\\n\" +\n        \"              {\\n\" +\n        \"                \\\"keyword\\\":\\\"330000_RALLY FIGHTER\\\",\\n\" +\n        \"                \\\"typetag\\\":2}]\\n\" +\n        \"          }}\";\n\n// \u5d4c\u5957\u4e24\u5c42\u53ef\u4ee5\u89e3\u6790\n    Group test3=JSON.parseObject(str3,new TypeReference>(){});\n    Group test4=JSON.parseObject(str4,new TypeReference>(){});\n// \u5d4c\u5957\u4e09\u5c42\u65e0\u6cd5\u89e3\u6790\n//Result<Doc1> test1=JSON.parseObject(str1,new TypeReference<Result<Doc1>>(){});\n//Result<Doc2> test2=JSON.parseObject(str2,new TypeReference<Result<Doc2>>(){});\n\n}\n}\nclass Doc1\n{\nprivate int id;\nprivate String title;\npublic int getId() {\n    return id;\n}\npublic void setId(int id) {\n    this.id = id;\n}\npublic String getTitle() {\n    return title;\n}\npublic void setTitle(String title) {\n    this.title = title;\n}\n}\nclass Doc2\n{\nprivate String keyword;\nprivate int typetag;\npublic String getKeyword() {\n    return keyword;\n}\npublic void setKeyword(String keyword) {\n    this.keyword = keyword;\n}\npublic int getTypetag() {\n    return typetag;\n}\npublic void setTypetag(int cid) {\n    this.typetag = typetag;\n}\n}\nclass Docs\n{\nprivate int numFound;\nprivate int start;\nprivate T[] docs;\npublic int getNumFound() {\n    return numFound;\n}\npublic void setNumFound(int numFound) {\n    this.numFound = numFound;\n}\npublic int getStart() {\n    return start;\n}\npublic void setStart(int start) {\n    this.start = start;\n}\npublic T[] getDocs() {\n    return docs;\n}\npublic void setDocs(T[] docs) {\n    this.docs = docs;\n}\n}\nclass Group\n{\nprivate int groupValue;\nprivate Docs doclist;\npublic int getGroupValue() {\n    return groupValue;\n}\npublic void setGroupValue(int groupValue) {\n    this.groupValue = groupValue;\n}\npublic Docs getDoclist() {\n    return doclist;\n}\npublic void setDoclist(Docs doclist) {\n    this.doclist = doclist;\n}\n}\nclass Result\n{\nprivate int matches;\nprivate Group[] groups;\npublic int getMatches() {\n    return matches;\n}\npublic void setMatches(int matches) {\n    this.matches = matches;\n}\npublic void setGroups(Group[] groups) {\n    this.groups = groups;\n}\npublic Group[] getGroups() {\n    return groups;\n}\n}. ",
    "blackshadowwalker": "\n\u6211\u7684\u4e5f\u51fa\u73b0\u4e86\uff0c\n```\nclass PeiqiResponse {\nBoolean success;\nInteger errCode;\nString  errDes;\nT       result;\n\n}\n```\n\u58f0\u660e\uff1aPeiqiResponse<List<Dept>>\n\u8c03\u8bd5\u5206\u6790\n\u7ecf\u8fc7\u591a\u6b21\u8c03\u8bd5\uff0c\u95ee\u9898\u51fa\u73b0\u5728\u8fd9\u91cc DefaultFieldDeserializer#parseField\n```\n    @Override\n    public void parseField(DefaultJSONParser parser, Object object, Type objectType, Map fieldValues) {\n        if (fieldValueDeserilizer == null) {\n            getFieldValueDeserilizer(parser.getConfig());\n        }\nif (objectType instanceof ParameterizedType) {\n            ParseContext objContext = parser.getContext();\n            objContext.type = objectType;\n            fieldType = FieldInfo.getFieldType(this.clazz, objectType, fieldType);\n }\n```\n\u5982\u6211\u7684\u5bf9\u8c61\u7c7b\u578b result \u7684\u7c7b\u578b\u662f List, \u4f46\u662f\u7ecf\u8fc7 getFieldValueDeserilizer(parser.getConfig()) \u7684\u5904\u7406\u540e fieldValueDeserilizer  ==JavaObjectDeserializer, \u7136\u540e\u5728 68\u884c \u8fdb\u884c\u89e3\u6790\u5904\u7406\n68  value = fieldValueDeserilizer.deserialze(parser, fieldType, fieldInfo.name);\n\u63a5\u7740\u5206\u6790 JavaObjectDeserializer\n```\npublic  T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n        if (type instanceof GenericArrayType) {\n            Type componentType = ((GenericArrayType) type).getGenericComponentType();\n            if (componentType instanceof TypeVariable) {\n                TypeVariable<?> componentVar = (TypeVariable<?>) componentType;\n                componentType = componentVar.getBounds()[0];\n            }\n        List<Object> list = new ArrayList<Object>();\n        parser.parseArray(componentType, list);\n        Class<?> componentClass;\n        if (componentType instanceof Class) {\n            componentClass = (Class<?>) componentType;\n            Object[] array = (Object[]) Array.newInstance(componentClass, list.size());\n            list.toArray(array);\n            return (T) array;\n        } else {\n            return (T) list.toArray();\n        }\n\n    }\n\n    if (type instanceof Class && type != Object.class && type != Serializable.class) {\n        return (T) parser.parseObject(type);    \n    }\n\n    return (T) parser.parse(fieldName);//\u6700\u540e\u5230\u4e86\u8fd9\u91cc\uff0c\n   //\u800c parser == DefaultJSONParser \uff08\u6765\u6e90\u4e8e `DefaultJSONParser (614) return (T) derializer.deserialze(this, type, fieldName);`\uff09\n}\n\n```\n\u7136\u540e\u8fdb\u5165 DefaultJSONParser 1280 \u884c  parse(Object fieldName)  \uff0c\u5728\u8fd9\u91cc\u5c31\u5c06result\u7684\u503c\u89e3\u6790\u6210\u4e86 JSONArray\u5bf9\u8c61\uff0c\u4ece\u800c\u9020\u6210\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\uff0c\u6ca1\u6709\u5f97\u5230\u9884\u671f\u7684\u7c7b\u578b\u3002\n\u89e3\u51b3\u65b9\u6848\uff1a\n\u56de\u5230\u6765\u8fd9\u91cc DefaultFieldDeserializer#parseField\n```\n    @Override\n    public void parseField(DefaultJSONParser parser, Object object, Type objectType, Map fieldValues) {\n        if (fieldValueDeserilizer == null) {\n            getFieldValueDeserilizer(parser.getConfig());\n        }\nif (objectType instanceof ParameterizedType) {\n            ParseContext objContext = parser.getContext();\n            objContext.type = objectType;\n            fieldType = FieldInfo.getFieldType(this.clazz, objectType, fieldType);\n }\n```\n\u65e2\u7136\u662f\u591a\u7ea7\u6cdb\u578b ParameterizedType \u5e76\u4e14\u89e3\u6790\u9664\u4e86\u6cdb\u578b\u7c7b\u578b fieldType \uff0c\u4e3a\u4ec0\u4e48\u4e0d\u52a0\u4e00\u884c\nfieldValueDeserilizer = parser.getConfig().getDeserializer(fieldType)\n\u8fd9\u6837\u4ece\u6211\u8d34\u7684\u6570\u636e\u4e2d\u5c31\u5f97\u5230\u4e86 fieldValueDeserilizer  = CollectionCodec\uff0c\u8fd9\u6837\u5c31\u6839\u636e fieldType\u83b7\u53d6\u5230\u4e86\u6b63\u786e\u7684 fieldValueDeserilizer  \n@wenshao   \u8fd9\u6837\u662f\u5426\u80fd\u89e3\u51b3\uff1f\n.  \n\u6211\u4f1a\u590d\u73b0\u4e86\uff0c\u662f\u7531\u4e8efastjson derializers \u7f13\u5b58\u7684\u95ee\u9898\uff1a\n1. \u590d\u73b0\n\u8fc7\u7a0b\uff1a\n1. \u5b9a\u4e49 \n   mType = new TypeReference<MyResponse<List<Dept>>>() {\n         }.getType();\n       mType1 = new TypeReference<MyResponse>() {\n         }.getType();\n2. \u7b2c\u4e00\u6b21\u8c03\u7528\u53cd\u5e8f\u5217\u5316\u4f7f\u7528MyResponse\uff0c \u6ca1\u6709\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u4f1a\u7f13\u5b58 MyResponse\u7684\u89e3\u6790\u5668\n   JSON.parseObject(jsonData, mType1, configBug569, featureValues,\n               features != null ? features : EMPTY_SERIALIZER_FEATURES);, \u7ed3\u679c\uff1aresp.getResult().getClass()==JSONArray.class\n3. \u7b2c\u800c\u6b21\u8c03\u7528\u53cd\u5e8f\u5217\u5316\u4f7f\u7528\u7684 MyResponse<List<Dept>> JSON.parseObject(jsonData, mType, configBug569, featureValues, features != null ? features : EMPTY_SERIALIZER_FEATURES);  \u7ed3\u679c\uff1aresp.getResult().getClass()==ArrayList.class\n2.\u5206\u6790\n\u7b2c\u4e00\u6b21\u8c03\u7528\u53cd\u5e8f\u5217\u5316\uff0c\u5173\u952e\u70b9\uff1a ParserConfig(460)\n460 putDeserializer(type, derializer);\n\u8fd9\u91cc\u7f13\u5b58\u4e86\u5bf9\u4e8e  MyResponse \u7684\u89e3\u6790\u5668\n\u7b2c\u4e8c\u6b21\u8c03\u7528\u53cd\u5e8f\u5217\u5316\uff1a\nParserConfig(352-354\u884c)\nif (type instanceof WildcardType || type instanceof TypeVariable || type instanceof ParameterizedType) {\n            derializer = derializers.get(clazz);\n        }\n\u8fd9\u91cc\u7ecf\u8fc7\u4ee3\u7801(337 derializers.get(type))\u6ca1\u6709\u627e\u5230\u6307\u5b9atype\u7684\u89e3\u6790\u5668\uff0c\u7136\u540e\u5230352\u884c\u5224\u65ad\u5982\u679ctype\u662f\u6cdb\u578b\uff0c\u5c31\u4f7f\u7528class\u4ee3\u66fftype\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u89e3\u6790\u5668\uff0c\u8fd9\u6837\u5c31\u83b7\u53d6\u5230\u4e86MyResponse\u7684\u89e3\u6790\u5668\uff0c\u800c\u5e76\u975e\u662fMyResponse>\u7684\u89e3\u6790\u5668\u3002\n\u7ed3\u8bba\uff1a\n\u89e3\u6790\u5668\u7f13\u5b58\u5bfc\u81f4\uff0c\u7136\u800cParserConfig\u9ed8\u8ba4\u90fd\u662f\u4f7f\u7528 \u7684 ParserConfig.getGlobalInstance(),\u4ece\u800c\u7f13\u5b58\u9020\u6210\u4e86\u5f71\u54cd\u3002\n3. \u89e3\u51b3\u65b9\u6848\n- \u65b9\u6848\u4e00\uff1a \u5982\u4e0a\u6240\u5199\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u52a0\u4e00\u884cfieldType = FieldInfo.getFieldType(this.clazz, objectType, fieldType);\u3002\n- \u65b9\u6848\u4e8c\uff1a \u4fee\u6539 ParserConfig 352\u884c\u7684\u5224\u65ad\uff0c\u6682\u65f6\u8fd8\u6ca1\u627e\u5230\u5408\u7406\u65b9\u5f0f\u3002\n. \u5df2\u4fee\u590d\uff0c\u590d\u73b0\u8bf7\u770b https://github.com/alibaba/fastjson/issues/569 @LichFaker \n. @imliujun \n\u5e94\u8be5\u662f\u4f60\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\u95ee\u9898\uff0c\u6211\u6d4b\u8bd5\u6ca1\u95ee\u9898\uff0c\u7ecf\u8fc7\u67e5\u770b\u6e90\u7801\u662f\u6709\u505a\u6df1\u5c42\u6cdb\u578b\u89e3\u6790\u7684\uff0c\u770b\u622a\u56fe\n\n\n\n\n. \u6211\u4e5f\u4f7f\u7528retrofit2\u8bd5\u4e86\u4e00\u4e0b\uff0c\u6cdb\u578b\u6211\u8fd9\u4f7f\u7528\u7684\u8fd8\u591a\uff0c\u4e5f\u6ca1\u95ee\u9898\njava\nResponseDto<Page<List<UserInfo>>> ret = JSON.parseObject(jsonData, new TypeReference<ResponseDto<Page<List<UserInfo>>>>(){});\nResponseDto\njava\nclass ResponseDto<T> {\n     int     code;\n    T       data;\n    String  msg;\n    long    timestamp;\n}\nPage\njava\nclass Page<T> {\n    Integer pageNum;\n    Integer pageSize;\n    T result;\n}\njava\n@Bean\npublic Retrofit retrofit(OkHttpClient okHttpClient) {\n        return new Retrofit.Builder()\n                .baseUrl(ENDPOINT)\n                .addConverterFactory(FastJsonConverterFactory.create())\n                .client(okHttpClient)\n                .build();\n}\n\n\n\n\n. \u6211\u4f7f\u7528\u7684\nxml\n <dependency>\n                <groupId>org.ligboy.retrofit2</groupId>\n                <artifactId>converter-fastjson</artifactId>\n                <version>2.1.0</version>\n</dependency>\n\u5982\u679c\u5355\u4e2a\u6d4b\u8bd5\u6ca1\u95ee\u9898\uff0c\u90a3\u4e2a\u4f7f\u7528retrofit2\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u6bd5\u7adfretrofit2\u4e5f\u662fhttp\u534f\u8bae\uff0c\u6700\u540e\u89e3\u6790\u7684\u8fd8\u662fjson\u5b57\u7b26\u4e32\uff0c\u4e0e\u5355\u4e2a\u6d4b\u8bd5\u4e00\u6837\n. \u8fd9\u4e2a\u5c31\u662f\u4f7f\u7528 Retrofit2+okHttp3 + Spring \u5199\u7684\uff0c\u770b\u770b\u5355\u5143\u6d4b\u8bd5\u90e8\u5206\uff0c\u4f7f\u7528\u7684\u6cdb\u578b\uff0c\u5b8c\u5168\u65e0\u538b\u529b\nhttps://github.com/blackshadowwalker/spring-retrofit2\n. \u5df2\u4fee\u590d\uff0c\u590d\u73b0\u8bf7\u770b https://github.com/alibaba/fastjson/issues/569\n. \u662f\u7684\uff0c\u76ee\u524d\u627e\u5230\u4e86\u95ee\u9898\u6240\u5728\uff0c\u8fd8\u6ca1\u5b8c\u5168\u5904\u7406\u6389\n. \u4f60\u770b\u770b\u90a3\u4e2a\u89e3\u6790\u5668\u7f13\u5b58\u5982\u4f55\u4fee\u6539\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n. \u8fd8\u662f\u4f7f\u7528\u6211\u4e4b\u524d\u7684\u89e3\u51b3\u65b9\u6848\u5427\n. ",
    "alaxcc": "<dependency> \n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>1.2.21</version>\n</dependency>\n\u8fd9\u4e2a\u7248\u672c\u4f9d\u7136\u65e0\u6cd5\u8bbf\u95ee\u5f15\u7528\u7684T\u7c7b\u578b\u7684get(). ",
    "Zhangxxl": "@wenshao Android1.1.55.android\u8fd8\u662f\u4f1a\u5076\u53d1, ;\n```java\npublic class ResponseBean {\npublic String apiId;\npublic StatusBean status;\npublic Object page_info;\npublic T bizobj;\n\n}\n//\u89e3\u6790\n{\nresp= JSON.parseObject(respStr, ResponseBean.getTypeArray(LifeServiceBean.class));\n}\n//\u4e3a\u89e3\u6790\u5668\u6307\u5b9atype\npublic static Type getTypeObj(Class... classes) {\n        if (classes == null || classes.length <= 0)\n            return null;\n        else\n            return new ParameterizedTypeImpl(ResponseBean.class, classes);\n }\npublic static Type getTypeArray(Class... classes) {\n        Type listType = new ParameterizedTypeImpl(ArrayList.class, classes);\n        if (listType == null)\n            return null;\n        else\n            return new ParameterizedTypeImpl(ResponseBean.class, new Type[]{listType});\n }\n\u5f53\u6cdb\u578bT\u6307\u5b9a\u4e3a`ArrayList<xxx.class>`\u65f6,\u4f1a\u53d1\u751f`java.lang.ClassCastException: com.alibaba.fastjson.JSONArray cannot be cast to java.util.ArrayList`\u800c\u4e14\u5728\u6211\u7684\u9879\u76ee\u4e2d,app\u6ce8\u518c\u4ee5\u540e\u53d1\u8d77\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u662f\u4f1a\u5fc5\u73b0\u7684,\n\u4e4b\u540e\u5c31\u6b63\u5e38\u4e86;. @wenshao  \n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684`ParameterizedTypeImpl` ;java\npublic class ParameterizedTypeImpl implements ParameterizedType {\n    private final Class raw;\n    private final Type[] args;\npublic ParameterizedTypeImpl(Class raw, Type[] args) {\n    this.raw = raw;\n    this.args = args != null ? args : new Type[0];\n}\n\n@Override\npublic Type[] getActualTypeArguments() {\n    return args;\n}\n\n@Override\npublic Type getRawType() {\n    return raw;\n}\n\n@Override\npublic Type getOwnerType() {\n    return null;\n}\n\n}\n``\n\u800c\u4e14\u8fd9\u4e2aClassCastException`\u53ea\u5728\u7528\u6237\u6ce8\u518c\u540e\u7b2c\u4e00\u6b21\u767b\u9646\u53d1\u751f,\u6211\u4e5f\u6293\u5305\u770b\u8fc7\u4e86,\u670d\u52a1\u5668\u8fd4\u56de\u7684json\u662f\u4e00\u6a21\u4e00\u6837\u7684. ",
    "yuanqiangxie": "\u540c\u6837\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u7528\u7684\u7248\u672c\u662f\u6700\u65b0\u76841.2.24\uff0c\u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4fee\u590d\u5462\uff1f. \u73b0\u5728\u6211\u6682\u65f6\u4f7f\u7528\u4e86Map\u8f6c\u6362\u4e00\u6b21\uff0c\u6709\u6ca1\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u5462\uff1f\n. @githublaohu\n<mvc:annotation-driven enable-matrix-variables=\"true\" conversion-service=\"conversionService\">\n        <mvc:message-converters>\n            <bean class=\"org.springframework.http.converter.BufferedImageHttpMessageConverter\"/>\n            <bean class=\"org.springframework.http.converter.ByteArrayHttpMessageConverter\"/>\n            <bean class=\"org.springframework.http.converter.StringHttpMessageConverter\">\n                <constructor-arg value=\"UTF-8\"/>\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <bean class=\"org.springframework.http.MediaType\">\n                            <constructor-arg index=\"0\" value=\"text\"/>\n                            <constructor-arg index=\"1\" value=\"plain\"/>\n                            <constructor-arg index=\"2\" value=\"UTF-8\"/>\n                        </bean>\n                        <bean class=\"org.springframework.http.MediaType\">\n                            <constructor-arg index=\"0\" value=\"*\"/>\n                            <constructor-arg index=\"1\" value=\"*\"/>\n                            <constructor-arg index=\"2\" value=\"UTF-8\"/>\n                        </bean>\n                    </list>\n                </property>\n            </bean>\n            <bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4\"\n                  id=\"fastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <value>application/json;charset=UTF-8</value>\n                        <value>application/*+json;charset=UTF-8</value>\n                    </list>\n                </property>\n                <!--<property name=\"defaultCharset\" value=\"UTF-8\"/>-->\n                <property name=\"fastJsonConfig\" ref=\"fastJsonConfig\"/>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n\u8fd9\u662f\u5173\u4e8espring mvc\u7684\u914d\u7f6e\uff0cjackson\u6ca1\u6709\u914d\u7f6e\n. @githublaohu @VictorZeng @wenshao \u627e\u5230\u95ee\u9898\u4e86\uff0c\u7531\u4e8e\u4f7f\u7528\u4e86activiti\uff0cactiviti\u4f9d\u8d56jackson\uff0c\u4f46\u662f\u53c8\u51fa\u73b0\u4e86\u5176\u5b83\u95ee\u9898\uff0c\u7ee7\u7eed\u89e3\u51b3\u3002\u3002\u3002\u8c22\u8c22\u5404\u4f4d\u3002\n. ",
    "freecsdn": "\u4e3b\u8981\u662f  \u89e3\u6790\u5668\u7f13\u5b58\u5bfc\u81f4  \u7ed3\u5408retroft\u4ee5\u540e  \u6bcf\u6b21\u8f6c\u6362\u6cdb\u578b\u4f20\u5165\u4e0d\u4e00\u81f4,\u7b2c\u4e8c\u6b21\u89e3\u6790\u7528\u4e86\u4e0a\u6b21\u7684\u7f13\u5b58\u7684\u6cdb\u578b \uff0c\u56e0\u6b64\u8f6c\u6362\u5931\u8d25   \u9700\u8981\u5728\u6ca1\u6709\u4f20\u5165\u6cdb\u578b\u7684\u63a5\u53e3\u4f20\u5165Void\u5c31\u53ef\u4ee5\u4e86  \u4f8b\u5982:ResponseBean<Void>. ",
    "freddmao": "fastjson-1.2.32.jar \u4f9d\u7136\u6ca1\u6709\u89e3\u51b3. ",
    "caosi": "\ncom.alibaba\nfastjson\n1.2.32\n\n\u591a\u5c42\u6cdb\u578b  toJSONString(),  \u51fa\u73b0  classA can not cast to classA  \u8fd9\u79cd\u60c5\u51b5. ",
    "wangsai-silence": "\u540c\u6837\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ee5\u81f3\u641e\u5230\u534a\u591c\u3002\n\u7248\u672c 1.1.58 \u914d\u5408Retrofit2\u4f7f\u7528\uff0c\u7ebf\u4e0a\u5927\u91cf\u5076\u53d1\uff0c\u5747\u4e3a com.alibaba.fastjson.JSONObject cannot be cast to com.***\n\u6839\u636e\u5927\u5bb6\u5efa\u8bae\uff0c\u6682\u65f6\u66ff\u6362\u4e3a\u4e86Gson\uff0c\u5e0c\u671b\u95ee\u9898\u80fd\u591f\u5c3d\u5feb\u89e3\u51b3\uff0c\u8fd8\u662f\u4e60\u60efFastJson\u3002. \u8c22\u8c22\uff0c\u6b63\u662f\u6211\u8981\u627e\u7684\u4e1c\u897f\uff0c\u8f9b\u82e6\u4e86. ",
    "intsilence": "\u6211\u4e5f\u9047\u5230\u89e3\u6790\u5668\u7f13\u5b58\u7684\u95ee\u9898. ",
    "derekcz1991": "@wenshao 1.1.61.android\u8fd8\u662f\u4f1a\u51fa\u73b0\u6cdb\u578b\u89e3\u6790\u4e0d\u5f7b\u5e95\u7684\u60c5\u51b5\npublic class Resource<T> {\n    private Status status;\n    private int ret;\n    private String message;\n    private T data;\n}\n\npublic class App {\n    private String appId;\n}\n\nclass Test<T> {\n    String str= \"{\\\"ret\\\":0,\\\"msg\\\":\\\"ok\\\",\\\"data\\\":[{\\\"appId\\\":\\\"11c53f541dee4f5bbc4f75f99002278c\\\"},{\\\"appId\\\":\\\"c6102275ce5540a59424defa1cccb8ed\\\"}]}\";\n\n    Test() {\n        Resource<T> resource = JSON.parseObject(str, new TypeReference<Resource<T>>(){});\n        Log.d(TAG, resource + \"\");\n    }\n}\n\n\u8c03\u7528\u65b9\u6cd5\u4e3a\uff1a\nnew Test<ArrayList<App>>();\n\n\n. \u4f60\u8fd9\u4e2a\u95ee\u9898\u5982\u4f55\u89e3\u51b3\u7684\u5462\uff1f. @kimmking hello\uff0c\u4f60\u8fd9\u6837\u5199\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5728new TypeReference<Resource<ArrayList<App>>>(){}\u5df2\u7ecf\u6307\u5b9a\u662fArrayList<App>\u4e86\uff0c\n\u6211\u8fd9\u8fb9\u662f\u7528\u7684\u6cdb\u578bnew TypeReference<Resource<T>>(){}\uff0c\u8fd9\u6837\u53ea\u80fd\u89e3\u6210JSONArray. @wenshao @kimmking \u9ebb\u70e6\u770b\u4e0b\u4e0a\u9762\u7684\u95ee\u9898. @lcl6 \u4f60\u8fd9\u4e2a\u6587\u4ef6\u89e3\u51b3\u4e86\u5417\uff0c\u6211\u78b0\u5230\u540c\u6837\u7684\u95ee\u9898. ",
    "jiawn": "1.2.38\u4f9d\u7136\u5b58\u5728. ",
    "singleton7": "\u73b0\u5728\u6cdb\u578b\u591a\u5c42\u5d4c\u5957\u7684\u95ee\u9898\u8fd8\u662f\u6ca1\u6709\u89e3\u51b3\uff1f. ",
    "shuifengYu": "1.1.67\u4ecd\u7136\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bf7\u95ee\u6709\u89e3\u51b3\u65b9\u6848\u4e86\u5417. ",
    "lvdong": "1.2.44 \u8fd8\u662f\u6709\u8fd9\u4e2a\u95ee\u9898. ",
    "dbaxyx": "1.2.44\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a\n```java\npublic class InterfaceResult extends BaseInterfaceResult\n{\n    public T getResult() {\n        return result;\n    }\npublic void setResult(T result) {\n    this.result = result;\n}\n\nprivate T result;\n\n}\n```. @wenshao \n\u95ee\u9898\u51fa\u5728InterfaceResult Citys\u6cdb\u578b\u5bf9\u8c61\u4e2d\u6709\u4e2aList\u96c6\u5408\u5bf9\u8c61\uff0c\u8fd9\u91cc\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u51fa\u6765\uff0c\u5916\u5c42\u53ef\u4ee5\u3002\n```\nInterfaceResult resultObj;\npublic class BaseInterfaceResult\n{\n    private int returncode;\npublic int getReturncode() {\n    return returncode;\n}\n\npublic void setReturncode(int returncode) {\n    this.returncode = returncode;\n}\n\npublic String getMessage() {\n    return message;\n}\n\npublic void setMessage(String message) {\n    this.message = message;\n}\n\nprivate String message;\n\n}\npublic class InterfaceResult extends BaseInterfaceResult\n{\n    public T getResult() {\n        return result;\n    }\npublic void setResult(T result) {\n    this.result = result;\n}\n\nprivate T result;\n\n}\npublic class Citys\n{\n    public List getItems() {\n        return items;\n    }\npublic void setItems(List<City> items) {\n    this.items = items;\n}\n\npublic List<City> items;\n\n}\npublic class City {\n    private int parentid;\n    private String provincename;\n    private int cityid;\n    private String cityname;\n    private int enginenumlen;\n    private int framenumlen;\n    private int support;\n    private String firstletter;\npublic int getParentid() {\n    return parentid;\n}\n\npublic void setParentid(int parentid) {\n    this.parentid = parentid;\n}\n\npublic String getProvincename() {\n    return provincename;\n}\n\npublic void setProvincename(String provincename) {\n    this.provincename = provincename;\n}\n\npublic int getCityid() {\n    return cityid;\n}\n\npublic void setCityid(int cityid) {\n    this.cityid = cityid;\n}\n\npublic String getCityname() {\n    return cityname;\n}\n\npublic void setCityname(String cityname) {\n    this.cityname = cityname;\n}\n\npublic int getEnginenumlen() {\n    return enginenumlen;\n}\n\npublic void setEnginenumlen(int enginenumlen) {\n    this.enginenumlen = enginenumlen;\n}\n\npublic int getFramenumlen() {\n    return framenumlen;\n}\n\npublic void setFramenumlen(int framenumlen) {\n    this.framenumlen = framenumlen;\n}\n\npublic int getSupport() {\n    return support;\n}\n\npublic void setSupport(int support) {\n    this.support = support;\n}\n\npublic String getFirstletter() {\n    return firstletter;\n}\n\npublic void setFirstletter(String firstletter) {\n    this.firstletter = firstletter;\n}\n\n}\n```\njson\u5b57\u7b26\u4e32\u6839\u636e\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\uff0c\u7136\u540e\u53cd\u5e8f\u5217\u5316\u4e00\u4e0b\u518d\u505atest case\n. ",
    "ponyma": "1.2.48 \u8fd8\u5b58\u5728\u8be5\u95ee\u9898, jdk1.8. ",
    "jianzh5": "1.2.47 \u8fd8\u662f\u4e0d\u80fd\u89e3\u6790\u591a\u7ea7\u6cdb\u578b . ",
    "sheyying": "\u6211\u6362\u62101.2.30\u7248\u672c\u7684jar\u5305\uff0c\u80fd\u6b63\u5e38\u89e3\u6790\u591a\u7ea7\u6cdb\u578b\u4e86. ",
    "tain198127": "1.2.39\u95ee\u9898\u4f9d\u65e7\uff0c\u6cdb\u578b\u591a\u91cd\u89e3\u6790\uff0c\u6700\u5e95\u5c42\u7684\u5bf9\u8c61\u53d8\u6210\u4e86HashMap\uff1b\nGson\u53ef\u4ee5\u5e8f\u5217\u5316\uff01\n\u6211\u53ef\u4ee5\u628a\u5177\u4f53\u7684\u6cdb\u578b\u8ba1\u7b97\u51fa\u6765\uff0c\u4f46\u662f\u8be5\u600e\u4e48\u505a\u5462\uff1f. ",
    "JoshShaw": "\u611f\u89c9\u8fd9\u4e2abug\u662f\u4e2a\u65e0\u5e95\u6d1e\u5440. ",
    "bluesatan0-0": "com.alibaba:fastjson:1.2.49\n\u4f9d\u7136\u5b58\u5728\u6b64bug\u2026\u2026. ",
    "PikachuHy": "1.2.49 +1\n// https://mvnrepository.com/artifact/com.alibaba/fastjson\n    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.49'. ",
    "yuxiaoyao7": "version: '1.2.49'  ++++1. ",
    "duyuanbin": "\u4e3a\u4f55\u5230\u4eca\u5929\u6211\u4e0d\u7ba1\u7528\u54ea\u4e2a\u7248\u672c\u6b64\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff1f\u6709\u6b63\u5e38\u4f7f\u7528\u7684\u540c\u5b66\u5417\uff1f\u54ea\u4e2a\u7248\u672c\uff1f\u5b9e\u5728\u4e0d\u884c\u4e5f\u53ea\u6709\u6362Gson\u4e86. ",
    "liyujiang-gzu": "\u662f\u7684\uff0c\u591a\u5c42\u6cdb\u578b\u5d4c\u5957fastjson\u4e0d\u884c\uff0cgson\u5374\u6b63\u5e38\uff0c\u503c\u5f97\u53c2\u8003\u4e0bgson\u7684\u5b9e\u73b0\u65b9\u5f0f. ",
    "ian77777": "\u6211\u57281.2.49\u7248\u672c\u9047\u5230\u7684\u95ee\u9898\uff0c \u7ecf\u6d4b\u8bd5\u57281.2.56\u7248\u672c\u5df2\u88ab\u4fee\u590d. > \u4e3a\u4f55\u5230\u4eca\u5929\u6211\u4e0d\u7ba1\u7528\u54ea\u4e2a\u7248\u672c\u6b64\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff1f\u6709\u6b63\u5e38\u4f7f\u7528\u7684\u540c\u5b66\u5417\uff1f\u54ea\u4e2a\u7248\u672c\uff1f\u5b9e\u5728\u4e0d\u884c\u4e5f\u53ea\u6709\u6362Gson\u4e86\n1.2.56. > \u4e3a\u4f55\u5230\u4eca\u5929\u6211\u4e0d\u7ba1\u7528\u54ea\u4e2a\u7248\u672c\u6b64\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff1f\u6709\u6b63\u5e38\u4f7f\u7528\u7684\u540c\u5b66\u5417\uff1f\u54ea\u4e2a\u7248\u672c\uff1f\u5b9e\u5728\u4e0d\u884c\u4e5f\u53ea\u6709\u6362Gson\u4e86\n1.2.56. ",
    "liuluo129": "\u5bf9\u4e8e\u5e8f\u5217\u5316map\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u6bd4\u5982map.put(\"num\", 3); \u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\u8fd8\u662f{\"num\":3}\n. ",
    "yancoo": "\u8fd9\u4e2a\u95ee\u9898\u4e00\u76f4\u56f0\u6270\u6211\uff0c\u6211\u4eec\u662fnetbeans\u521b\u5efa\u7684maven web\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u7684\u81ea\u5e26\u7684glassfish\u5bb9\u5668\uff0c\u53d1\u73b0\u8f93\u51fa\u7684json\u5404\u79cd\u95ee\u9898\uff0c\u6240\u4ee5\u60f3\u6362\u6210\u719f\u6089\u7684fastjson\u3002\n\u4e0a\u9762\u7684\u7b54\u590d \u8fd8\u6709FastJsonProvider\u539f\u4f5c\u8005\u63d0\u4f9b\u7684\u8bf4\u660e \u90fd\u4e0d\u80fd\u76f4\u63a5\u7528\uff0c\u627e\u4e0d\u5230provider\u548cfeature\u5728\u54earegister\uff0c\u5bb9\u5668\u592a\u5c01\u95ed\u4e86\uff1a\uff08\n. jersey\n. @VictorZeng  \u6700\u597d\u4f60\u80fd\u5728netbeans\u91cc\u8bd5\u8bd5\uff0c\u9ed8\u8ba4\u8f93\u51fa\u7684json\u5f88\u591a\u65f6\u5019\u95ee\u9898\u4e00\u5927\u5806\uff0cjavaee\u7684\u4e1c\u897f\u5305\u88c5\u7684\u592a\u6b7b\u5bfc\u81f4\u8ddf\u4e0d\u8fdb\u53bb\uff08\uff08\n. \u5f88\u9ad8\u5174\u4e24\u4f4d\u91cd\u89c6\u8fd9\u4e2a\u95ee\u9898 \ud83d\udc4d . ",
    "plutofei": "@VictorZeng \u6211\u73b0\u5728\u5c31\u662f\u8fd9\u4e48\u641e\u7684\uff0c\u4f46\u662f\u8fd9\u597d\u50cf\u5e76\u4e0d\u662f1.2.10\u7684\u65b0\u7279\u6027\u7c7b\u7ea7\u522b\u7684SerializeFilter\uff0c\u800c\u662f1.2.9\u5c31\u589e\u52a0\u7684\u529f\u80fd\u5427\uff0c\u6211\u7684\u95ee\u9898\u662f\u5c061.2.10\u7684\u8fd9\u4e2a\u65b0\u7279\u6548\u4e0espringMVC\u6574\u5408\u6ca1\u6709\u6210\u529f\uff0c\u73b0\u5728\u914d\u7f6e\u7684filters\u4f3c\u4e4e\u4f1a\u5728\u6bcf\u6b21\u8f93\u51fa\u65f6\u987a\u5e8f\u8fdb\u884c\u8fc7\u6ee4\uff0c\u6015\u4f1a\u6709\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u60f3\u5c1d\u8bd5\u4e0b1.2.10\u7684\u8fd9\u4e2a\u7c7b\u7ea7\u522b\u7684\u3002\n. \u8c22\u8c22\u89e3\u7b54 @VictorZeng \n. ",
    "luohoufu": "https://github.com/alibaba/fastjson/wiki/FastJsonHttpMessageConverter_CN\n. ",
    "edwardpro": "Thanks\n. ",
    "johnshen1990": "\u592a\u611f\u8c22\u4e86\uff0c\u53ea\u662f\u73b0\u5728\u6709\u4e2a\u7d27\u6025\u7684\u9700\u6c42\u9700\u8981\u5148\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff5e\n\u80fd\u4e0d\u80fd\u544a\u8bc9\u6211\uff0c\u76ee\u524d\u53ef\u4ee5\u5982\u4f55\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u5c31\u662f\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65e5\u671f\u683c\u5f0f\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff1f\n. \u55ef\uff0c\u90a3\u6211\u5148\u53cd\u5e8f\u5217\u5316\u6210\u5b57\u7b26\u4e32\uff0c\u7b80\u5355\u7c97\u66b4\u5730\u8f6c\u5427\uff0c\u56de\u5934\u53d1\u65b0\u7248\u540e\u518d\u6539\uff5e\n. \u652f\u6301\u7684\u3002 \n\u8bf7\u53c2\u8003\uff1ahttps://msdn.microsoft.com/en-us/library/bb412170.aspx  \uff08\u641c\u7d22\uff1a\u201cDateTime Wire Format\u201d\uff09\n. ",
    "digiwizkid": "No English so far for wiki and documentation.... ",
    "Ace8793": "@wenshao \u4e0d\u60f3\u4f7f\u7528\u6ce8\u89e3@JsonTypeInfo\u3001@JsonSubTypes\u3001@JsonTypeName\u3002\n\u662f\u5426\u63d0\u4f9b\u4e86\u5176\u4ed6\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982config\uff0c\u6216\u8005\u914d\u7f6e\u6587\u4ef6\uff1f. @wenshao \u8bf7\u6559\u4e2a\u95ee\u9898\uff0c\n\u4e0d\u540c\u7684json\u5e93\u4e2d\u5f15\u7528($ref)\u7684\u8868\u793a\u65b9\u5f0f\u4e0d\u540c\u7684\u5417\uff1f\n\u6bd4\u5982\u6211\u5c06\u540c\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u5b9e\u4f8b\u4e24\u6b21\u52a0\u5165\u4e00\u4e2alist\u4e2d(\u5373\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u5b9e\u4f8b)\u3002\nfastjson(java\u5e93)\u7f16\u7801\u7684json\u5982\u4e0b\uff1a\n[\n    {\n        \"@type\":\"me.Ace.Test.JsonTest.Stockholder\",\n        \"businesses\":[\n                        {\n                            \"@type\":\"me.Ace.Test.JsonTest.Hotel\",\n                            \"name\":\"Hudson Hotel\",\n                            \"stars\":4\n                        }\n                    ],\n        \"fullName\":\"Steve Stockholder\"\n    },\n    {\"$ref\":\"$[0]\"}\n]\n.net.json(C#\u5e93)\u7f16\u7801\u7684json\u5982\u4e0b\uff1a\n[\n    {\n        \"$id\":\"1\",\n        \"$type\":\"me.Ace.Test.JsonTest.Stockholder\",\n        \"fullName\":\"Steve Stockholder\",\n        \"businesses\":[\n                        {\n                            \"$id\":\"2\",\n                            \"$type\":\"me.Ace.Test.JsonTest.Hotel\",\n                            \"stars\":4,\n                            \"name\":\"Hudson Hotel\"\n                        }\n                    ]\n    },\n    {\"$ref\":\"1\"}\n]\n. @wenshao @VictorZeng \n. \u5728\u6d89\u53ca\u5faa\u73af\u5f15\u7528\u4e0e\u7ee7\u627f\u7c7b\u65f6\uff0c\u4e0d\u80fd\u6dfb\u52a0SerializerFeature.PrettyFormat\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\u3002\n\u8fd9\u91cc\u6709\u6d4b\u8bd5\u8ba8\u8bba\u7ed3\u679c\n. ",
    "Larnoo": "\u662f\u5426\u53ef\u4ee5\u914d\u7f6e\u4e0d\u5e8f\u5217\u5316getter\u65b9\u6cd5 @wenshao \u3002\n\u5728Android\u4e2d\uff0c\u5c5e\u6027\u90fd\u662fpublic\u7684\uff0c\u7136\u540e\u6709\u4e00\u4e9bgetter\u662f\u6839\u636e\u51e0\u4e2a\u5c5e\u6027\u751f\u6210\u7684\uff0c\u4e0d\u60f3\u5e8f\u5217\u5316\u589e\u52a0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u5f00\u9500\n. \u6211\u8fd9\u91cc\u7684Point\u662f\u6211\u81ea\u5df1\u5199\u7684\u4e00\u4e2a\u5b9e\u4f53\u7c7b\uff0c\u4e0d\u662f\u7cfb\u7edf\u7684\u3002\u53ea\u662f\u7b80\u5316\u4e86\u4e00\u4e0b\u3002\u91cc\u8fb9\u6709\u5176\u4ed6\u7684\u5b9e\u4f53\u7c7b\uff08\u8b6c\u5982\u70b9\u7684\u8be6\u60c5\u3010\u540d\u5b57\uff0c\u7c7b\u578b\uff0c\u7b49\u3011\uff09\n. \u5728fastjson\u4e2d\uff0c\u4f1a\u81ea\u52a8\u68c0\u6d4b\u5faa\u73af\u5f15\u7528\n\u6709\u4ec0\u4e48\u65b9\u6cd5\u80fd\u8fdb\u884c\u5168\u5c40\u7684\u8bbe\u7f6e\u5982\uff0c\u5c06\u5173\u95ed\u68c0\u6d4b\u5faa\u73af\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u8981\u914d\u7f6e\n\u5982\u4e0b\uff1a\nJSON.toJSONString(obj, SerializerFeature.DisableCircularReferenceDetect);\n. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c1.2.20\uff0c\u8fd8\u662f\u4f1a\u51fa\u73b0\u5982\u4e0a\u95ee\u9898\n\u6211\u7684Point\u7c7b\nclass Point {\n    public int x;\n    public int y;\n    public Properties properties;\n}\nclass Properties{\n    public String id;\n    public String title;\n}\n. @wenshao \u80fd\u89e3\u91ca\u4e00\u4e0b\u5417\uff1f\u5426\u5219\u8fd9\u4e2a\u5faa\u73af\u5e94\u7528\u76d1\u6d4b\u6211\u53ea\u80fd\u5173\u6389\u4e86\n. ",
    "woodnaonly": "\u6709\u5fc3\u65e0\u529b\n. ",
    "leon90dm": "\u597d\u7684\uff0c\u611f\u8c22\uff01\n. \u597d\u7684\uff0c\u611f\u8c22\uff01\n. \u54a6\uff0c\u5e8f\u5217\u5316\u65f6\u53c8\u4e0d\u5bf9\u4e86\n```\npublic enum OrderActionEnumSerializer implements ObjectSerializer {\n        INSTANCE;\n    @Override\n    public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n        System.out.println(\"object:\" + object + \",fieldName:\" + fieldName + \",fieldType:\" + fieldType);\n        serializer.write(((OrderActionEnum)object).getCode());\n    }\n}\n\n```\nSerializeConfig.getGlobalInstance().put(OrderActionEnum.class, OrderActionEnumSerializer.INSTANCE);\n        Msg ok = new Msg(OrderActionEnum.SUCC, \"ok\");\n        String json = JSON.toJSONString(bean);\n        System.out.println(json);\n\u5f97\u5230{\"actionEnum\":\"SUCC\",\"body\":\"ok\"}. \u81ea\u5b9a\u4e49\u7684OrderActionEnumSerializer\u4f3c\u4e4e\u6ca1\u6709\u7528\u4e0a\uff0c\u662f\u56e0\u4e3aFastjson\u4f18\u5148\u5224\u65ad\u4e86\u7c7b\u578b\u662fenum\u76f4\u63a5\u5ffd\u7565\u4e86\u81ea\u5b9a\u4e49\u914d\u7f6e\u4e48\uff1f\n. \u54a6\uff0c\u5e8f\u5217\u5316\u65f6\u53c8\u4e0d\u5bf9\u4e86\n```\npublic enum OrderActionEnumSerializer implements ObjectSerializer {\n        INSTANCE;\n    @Override\n    public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n        System.out.println(\"object:\" + object + \",fieldName:\" + fieldName + \",fieldType:\" + fieldType);\n        serializer.write(((OrderActionEnum)object).getCode());\n    }\n}\n\n```\nSerializeConfig.getGlobalInstance().put(OrderActionEnum.class, OrderActionEnumSerializer.INSTANCE);\n        Msg ok = new Msg(OrderActionEnum.SUCC, \"ok\");\n        String json = JSON.toJSONString(bean);\n        System.out.println(json);\n\u5f97\u5230{\"actionEnum\":\"SUCC\",\"body\":\"ok\"}. \u81ea\u5b9a\u4e49\u7684OrderActionEnumSerializer\u4f3c\u4e4e\u6ca1\u6709\u7528\u4e0a\uff0c\u662f\u56e0\u4e3aFastjson\u4f18\u5148\u5224\u65ad\u4e86\u7c7b\u578b\u662fenum\u76f4\u63a5\u5ffd\u7565\u4e86\u81ea\u5b9a\u4e49\u914d\u7f6e\u4e48\uff1f\n. ",
    "tenwx": "https://github.com/alibaba/fastjson/pull/606\n. https://github.com/alibaba/fastjson/pull/606\n. #625 \n. #625 \n. ",
    "HeMing16": "\u662f\u6211\u5199\u9519\u4e86   \u662f\u8fd9\u4e2a      getIntValue(\"priority\");\u8fd0\u884c\u5728Linux\u4e0b\u624d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u5728MacOX\u3001windows\u4e0b\u6ca1\u6709\u95ee\u9898\n. \u662f\u6211\u5199\u9519\u4e86   \u662f\u8fd9\u4e2a      getIntValue(\"priority\");\u8fd0\u884c\u5728Linux\u4e0b\u624d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u5728MacOX\u3001windows\u4e0b\u6ca1\u6709\u95ee\u9898\n. \u4f46\u786e\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u7684\u670d\u52a1\u5668\u5c31\u662fLinux\u73af\u5883\uff0c\u6267\u884c\u6b64\u4ee3\u7801\u65f6\u5c31\u662f\u53d6\u4e0d\u5230\u503c\uff0c\u8fd8\u6709\u4e0b\u9762\u8fd9\u4e9b\uff1a\nint isOpenSwitch = jsonResult.getIntValue(\"isInOpenHourSwitch\");//\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c\uff0c\u9ed8\u8ba4\u53d60\nint isNearShopSwitch = jsonResult.getIntValue(\"isNearShopSwitch\");//\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c\uff0c\u9ed8\u8ba4\u53d60\nBoolean isOpenSwitch = jsonResult.getBoolean(\"isInOpenHourSwitch\");//\u53d6\u51fa\u7684\u503c\u4e3anull\n\u6ce8\uff1a{\"isInOpenHourSwitch\":1,\"isNearShopSwitch\":0}\n. \u4f46\u786e\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u7684\u670d\u52a1\u5668\u5c31\u662fLinux\u73af\u5883\uff0c\u6267\u884c\u6b64\u4ee3\u7801\u65f6\u5c31\u662f\u53d6\u4e0d\u5230\u503c\uff0c\u8fd8\u6709\u4e0b\u9762\u8fd9\u4e9b\uff1a\nint isOpenSwitch = jsonResult.getIntValue(\"isInOpenHourSwitch\");//\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c\uff0c\u9ed8\u8ba4\u53d60\nint isNearShopSwitch = jsonResult.getIntValue(\"isNearShopSwitch\");//\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c\uff0c\u9ed8\u8ba4\u53d60\nBoolean isOpenSwitch = jsonResult.getBoolean(\"isInOpenHourSwitch\");//\u53d6\u51fa\u7684\u503c\u4e3anull\n\u6ce8\uff1a{\"isInOpenHourSwitch\":1,\"isNearShopSwitch\":0}\n. \u5b57\u7b26\u4e32\u8f6cjson\u662f\u8fd9\u6837\u7684\uff0c\u7ed3\u679c\u53d6\u503c\u5c31\u662f\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u4e86\ncom.alibaba.fastjson.JSONObject jsonResult = com.alibaba.fastjson.JSONObject.parseObject(\"{\\\"isInOpenHourSwitch\\\":1,\\\"isNearShopSwitch\\\":0}\");\n. \u5b57\u7b26\u4e32\u8f6cjson\u662f\u8fd9\u6837\u7684\uff0c\u7ed3\u679c\u53d6\u503c\u5c31\u662f\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u4e86\ncom.alibaba.fastjson.JSONObject jsonResult = com.alibaba.fastjson.JSONObject.parseObject(\"{\\\"isInOpenHourSwitch\\\":1,\\\"isNearShopSwitch\\\":0}\");\n. \u55ef\uff0c\u8fd9\u79cd\u73b0\u8c61\u786e\u5b9e\u4e0d\u597d\u5b9a\u4f4d\uff0c\u76ee\u524d\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u53c2\u6570\u5c01\u88c5\u4e3a\u5bf9\u8c61\uff0c\u7136\u540ejson\u5b57\u7b26\u4e32\u8f6c\u4f4d\u5bf9\u8c61\u5b9e\u4f53\u518d\u53d6\u53c2\u3002\nParamConfigInfo configInfo = jsonResult.getObject(\"data\",ParamConfigInfo.class);\npackage com.qbao.store.view;\npublic class ParamConfigInfo {\n```\nprivate Integer priority;\nprivate Integer isInOpenHourSwitch;\nprivate Integer isNearShopSwitch;\nprivate Long distanceToShop;\n/*\n * @return the priority\n /\npublic Integer getPriority() {\n    return priority;\n}\n/*\n * @param priority\n *            the priority to set\n /\npublic void setPriority(Integer priority) {\n    this.priority = priority;\n}\n/*\n * @return the isInOpenHourSwitch\n /\npublic Integer getIsInOpenHourSwitch() {\n    return isInOpenHourSwitch;\n}\n/*\n * @param isInOpenHourSwitch\n *            the isInOpenHourSwitch to set\n /\npublic void setIsInOpenHourSwitch(Integer isInOpenHourSwitch) {\n    this.isInOpenHourSwitch = isInOpenHourSwitch;\n}\n/*\n * @return the isNearShopSwitch\n /\npublic Integer getIsNearShopSwitch() {\n    return isNearShopSwitch;\n}\n/*\n * @param isNearShopSwitch\n *            the isNearShopSwitch to set\n /\npublic void setIsNearShopSwitch(Integer isNearShopSwitch) {\n    this.isNearShopSwitch = isNearShopSwitch;\n}\n/*\n * @return the distanceToShop\n /\npublic Long getDistanceToShop() {\n    return distanceToShop;\n}\n/*\n * @param distanceToShop\n *            the distanceToShop to set\n /\npublic void setDistanceToShop(Long distanceToShop) {\n    this.distanceToShop = distanceToShop;\n}\n/\n * (non-Javadoc)\n * \n * @see java.lang.Object#toString()\n /\n@Override\npublic String toString() {\n    return \"ParamConfigInfo [priority=\" + priority\n            + \", isInOpenHourSwitch=\" + isInOpenHourSwitch\n            + \", isNearShopSwitch=\" + isNearShopSwitch\n            + \", distanceToShop=\" + distanceToShop + \"]\";\n}\n```\n}\n. \u55ef\uff0c\u8fd9\u79cd\u73b0\u8c61\u786e\u5b9e\u4e0d\u597d\u5b9a\u4f4d\uff0c\u76ee\u524d\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u53c2\u6570\u5c01\u88c5\u4e3a\u5bf9\u8c61\uff0c\u7136\u540ejson\u5b57\u7b26\u4e32\u8f6c\u4f4d\u5bf9\u8c61\u5b9e\u4f53\u518d\u53d6\u53c2\u3002\nParamConfigInfo configInfo = jsonResult.getObject(\"data\",ParamConfigInfo.class);\npackage com.qbao.store.view;\npublic class ParamConfigInfo {\n```\nprivate Integer priority;\nprivate Integer isInOpenHourSwitch;\nprivate Integer isNearShopSwitch;\nprivate Long distanceToShop;\n/*\n * @return the priority\n /\npublic Integer getPriority() {\n    return priority;\n}\n/*\n * @param priority\n *            the priority to set\n /\npublic void setPriority(Integer priority) {\n    this.priority = priority;\n}\n/*\n * @return the isInOpenHourSwitch\n /\npublic Integer getIsInOpenHourSwitch() {\n    return isInOpenHourSwitch;\n}\n/*\n * @param isInOpenHourSwitch\n *            the isInOpenHourSwitch to set\n /\npublic void setIsInOpenHourSwitch(Integer isInOpenHourSwitch) {\n    this.isInOpenHourSwitch = isInOpenHourSwitch;\n}\n/*\n * @return the isNearShopSwitch\n /\npublic Integer getIsNearShopSwitch() {\n    return isNearShopSwitch;\n}\n/*\n * @param isNearShopSwitch\n *            the isNearShopSwitch to set\n /\npublic void setIsNearShopSwitch(Integer isNearShopSwitch) {\n    this.isNearShopSwitch = isNearShopSwitch;\n}\n/*\n * @return the distanceToShop\n /\npublic Long getDistanceToShop() {\n    return distanceToShop;\n}\n/*\n * @param distanceToShop\n *            the distanceToShop to set\n /\npublic void setDistanceToShop(Long distanceToShop) {\n    this.distanceToShop = distanceToShop;\n}\n/\n * (non-Javadoc)\n * \n * @see java.lang.Object#toString()\n /\n@Override\npublic String toString() {\n    return \"ParamConfigInfo [priority=\" + priority\n            + \", isInOpenHourSwitch=\" + isInOpenHourSwitch\n            + \", isNearShopSwitch=\" + isNearShopSwitch\n            + \", distanceToShop=\" + distanceToShop + \"]\";\n}\n```\n}\n. ",
    "tianshuang": "\u8bf7\u95ee\u73b0\u5728\u5b57\u7b26\u4e32\u8f6c\u4e3aJSON\u548cJSON\u8f6c\u4e3a\u5b57\u7b26\u4e32\u90fd\u652f\u6301\u683c\u5f0f\u201cyyyy-MM-dd HH:mm:ss\u201d\u5417\uff1f\u8fd8\u6709\u5c31\u662f\u60a8\u6700\u65b0\u7684commit\u6211\u672c\u5730\u662f\u600e\u6837\u624d\u80fd\u68c0\u51fa\u4e3ajar\u5462\uff1f\u662f\u5220\u9664\u4ee5\u524d\u7684jar\u91cd\u65b0\u5bfc\u5165\u8fd8\u662f\u6709\u53e6\u5916\u7684\u5feb\u7167\u7248\u672c\uff1f \u8c22\u8c22\n. \u8bf7\u95ee\u73b0\u5728\u5b57\u7b26\u4e32\u8f6c\u4e3aJSON\u548cJSON\u8f6c\u4e3a\u5b57\u7b26\u4e32\u90fd\u652f\u6301\u683c\u5f0f\u201cyyyy-MM-dd HH:mm:ss\u201d\u5417\uff1f\u8fd8\u6709\u5c31\u662f\u60a8\u6700\u65b0\u7684commit\u6211\u672c\u5730\u662f\u600e\u6837\u624d\u80fd\u68c0\u51fa\u4e3ajar\u5462\uff1f\u662f\u5220\u9664\u4ee5\u524d\u7684jar\u91cd\u65b0\u5bfc\u5165\u8fd8\u662f\u6709\u53e6\u5916\u7684\u5feb\u7167\u7248\u672c\uff1f \u8c22\u8c22\n. maven central \u4e2d\u662f5\u67082\u65e5\u7684\u7248\u672c\uff0c\u8bf7\u95ee\u600e\u6837\u624d\u80fd\u83b7\u53d6\u5230\u6700\u65b0\u7684\u7248\u672c\uff1f\n\n. maven central \u4e2d\u662f5\u67082\u65e5\u7684\u7248\u672c\uff0c\u8bf7\u95ee\u600e\u6837\u624d\u80fd\u83b7\u53d6\u5230\u6700\u65b0\u7684\u7248\u672c\uff1f\n\n. \u597d\u7684\uff0c\u4e0b\u4e00\u4e2arealease\u7248\u672c\u5927\u6982\u4ec0\u4e48\u65f6\u5019\u53d1\u5e03\uff1f\u6211\u597d\u5230\u65f6\u66f4\u6362\u4e3arealease\u7248\u672c\u3002\n. \u597d\u7684\uff0c\u4e0b\u4e00\u4e2arealease\u7248\u672c\u5927\u6982\u4ec0\u4e48\u65f6\u5019\u53d1\u5e03\uff1f\u6211\u597d\u5230\u65f6\u66f4\u6362\u4e3arealease\u7248\u672c\u3002\n. \u597d\u7684\uff0c\u518d\u6b21\u611f\u8c22 :joy: \n. ",
    "Janzon": "\u9996\u5148\u975e\u5e38\u611f\u8c22\u4f60\u80fd\u56de\u590d\uff01\n\u6211\u4e4b\u524d\u4f7f\u7528\u7684GSON\uff0cGSON\u7684\u8bbe\u5b9a\u7684\u662f\u53ea\u8981\u8c03\u7528\npublic GsonBuilder excludeFieldsWithoutExposeAnnotation() {\n    excluder = excluder.excludeFieldsWithoutExposeAnnotation();\n    return this;\n}\n\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48\u5c31\u53ea\u4f1a\u5e8f\u5217\u5316\u52a0\u4e86\u58f0\u660e\u7684\u5b57\u6bb5\uff0c\u548c\u662fprivate\u548cprotected\u65e0\u5173\uff0c\u6211\u4eec\u5176\u5b9e\u5728\u6bcf\u4e2ajavabean\u4e2d\u662f\u6709getter\u548csetter\u7684\uff0c\u53ea\u662f\u6211\u4e3a\u4e86\u51cf\u5c11\u9875\u9762\u957f\u5ea6\u7701\u7565\u4e86\u3002\n\u6211\u4e3b\u8981\u662f\u60f3\u77e5\u9053\u6709\u4ec0\u4e48\u51c6\u5219\u53ef\u4ee5\u8ba9fastjson\u5728\u5e8f\u5217\u5316\u5bf9\u8c61\u6210\u5b57\u7b26\u4e32\u65f6\u53ea\u5e8f\u5217\u5316\u52a0\u4e86\u58f0\u660e\u7684\uff0c\u662f\u4f60\u8bf4\u7684\u53ea\u8981\u6211\u5c5e\u6027\u8bbe\u7f6e\u6210public\u7684\u5c31\u884c\u4e86\u5417\uff1f\u5982\u679c\u662f\u7684\u8bdd\uff0c\u90a3\u4e9b\u6211\u4e0d\u60f3\u88ab\u5e8f\u5217\u5316\u7684\uff0c\u4f46\u662f\u5c5e\u6027\u662fpublic\u7684\u4f1a\u5426\u88ab\u5e8f\u5217\u5316\uff1f\u8c22\u8c22\uff01\u53ef\u80fd\u6211\u95ee\u7684\u95ee\u9898\u6bd4\u8f83\u4f4e\u7ea7\uff0c\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u4f7f\u7528fastjson\uff0c\u89c1\u8c05\uff01\n. ```\npublic abstract class CTRequest implements Serializable{\n    public static final int TIMEOUT_SECONDS_DEBUG = 60; \npublic String PROTOCOL_CHARSET = \"utf-8\";\n\n@JSONField(name=\"Head\")\npublic Head head;\n\n}\n```\n\u6bd4\u5982\u4e0a\u9762\u8fd9\u6837\u5462\uff1f\u6211\u53ea\u60f3\u5e8f\u5217\u5316head\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5176\u4ed62\u4e2a\u6211\u90fd\u4e0d\u60f3\u5e8f\u5217\u5316\uff0c\u8bf7\u95ee\u5c31\u8fd9\u4e2a\u5bf9\u8c61\u7c7b\u6211\u8be5\u600e\u4e48\u5199\uff1f\u8c22\u8c22\u6307\u5bfc\uff01\n. \u518d\u591a\u95ee\u4e00\u53e5\uff0c\u5982\u679c\u6211\u4e0d\u60f3\u67d0\u4e2a\u5c5e\u6027\u88ab\u5e8f\u5217\u5316  \u6211\u9664\u4e86\u6dfb\u52a0 @JSONField(serialize=false) \u8fd8\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\u6765\u505a\u5417\uff1f\u8c22\u8c22\uff0c^_^\n. \u8c22\u8c22 \u6211\u7684\u95ee\u9898\u5f97\u5230\u7b54\u6848\u4e86\uff0c\u6dfb\u9ebb\u70e6\u4e86\uff0c\u4e3a\u4f60\u70b9\u8d5e\uff01\n. \u4e3e\u4e2a\u4f8b\u5b50\n```\npublic class Request implements Serializable{\n    @JSONField(name=\"ResponseHead\")\n    public ResponseHead responseHead;\n    @JSONField(name=\"ResponseStatus\")\n    public ResponseStatusType responseStatus;\nprivate long  costTime;\n\npublic long getCostTime() {\n    return costTime;\n }\n\npublic String getBusinessCode() {\n        return BusinessCode.NONE;\n    }\n}\n```\n\u73b0\u5728\u7684\u60c5\u51b5\u662f getCostTime\u548cgetBusinessCode\u90fd\u88ab\u5e8f\u5217\u5316\u4e86\uff0c\u8bf7\u95ee\u6211\u8be5\u600e\u4e48\u505a\uff1f\u90a3\u4e2aJSONTYPE\u6ca1\u7406\u89e3\u597d\uff0cT_T.\n\u6211\u5b9e\u5728\u4e0d\u60f3\u6211\u5728\u4ee3\u7801\u4e2d\u6bcf\u4e2aRequest\u6216\u8005response\u4e2d\u90fd\u52a0\u8fd9\u4e2a@JSONField(serialize = false)\uff0c\n\u56e0\u4e3a\u6d89\u53ca\u5230\u66f4\u6362\u6574\u4e2a\u5de5\u7a0b\u63a5\u8fd1200\u4e2a\u63a5\u53e3\uff0c\u90a3\u4e48\u5982\u679c\u6f0f\u6389\u52a0\u4e00\u4e2a\u5c31\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8c22\u8c22\u3002\n. Hi \u8be6\u7ec6\u7684\u770b\u4e86\u4f60\u8bf4\u7684\u8fd9\u4e2a\u7528\u6cd5\u540e\u5bf9\u6bd4\u6211\u7684\u60c5\u51b5\u8fd9\u4e2a\u5e94\u8be5\u65e0\u6cd5\u6ee1\u8db3\uff0c\u539f\u56e0\u5982\u4e0b:\n1\u3001\u6211\u56e0\u4e3a\u53d7\u5230\u516c\u53f8\u5176\u4ed6\u516c\u5171\u7ec4\u4ef6\u7684\u5f71\u54cd\uff0c\u7248\u672c\u53ea\u80fd\u505c\u7559\u57281.1.34-android\u8fd9\u4e2a\u7248\u672c\u4e0b\uff0c\u6211\u5b9e\u73b0PropertyPreFilter\u8fd9\u4e2a\u63a5\u53e3\u53d1\u73b0\u91cc\u9762\u7684\u65b9\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\npublic interface PropertyPreFilter extends SerializeFilter {\n    boolean apply(JSONSerializer var1, Object var2, String var3);\n}\n\u6211\u65e0\u6cd5\u901a\u8fc7\u8bbe\u7f6eIncludes\u6765\u8ba9\u7c7b\u80fd\u8fc7\u6ee4\u67d0\u4e9b\u5c5e\u6027\uff1b\n2\u3001\u6211\u901a\u8fc7\u7814\u7a76\u4ee3\u7801\u540e\u53d1\u73b0\u5c31\u7b97\u6211\u5e93\u66f4\u65b0\u5230\u6700\u65b0\u7684\u7248\u672c\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u5f97\u5b9e\u73b0\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u5e76\u4e14\u5b9a\u5236\u9700\u8981\u89e3\u6790\u7684key\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u6210\u672c\u7740\u5b9e\u611f\u89c9\u6709\u70b9\u9ad8\u3002\n\u56e0\u4e3a\u7b2c\u4e00\u6b21\u4f7f\u7528fastjson\uff0c\u6ca1\u6709\u80fd\u591f\u627e\u5230\u5bf9\u5e94\u7684\u6587\u6863\u548c\u4e00\u4e9b\u4f8b\u5b50\u6240\u4ee5\u63a5\u5165\u7684\u6709\u70b9\u8270\u96be\uff0c\u6240\u4ee5\u63d0\u51fa\u7684\u95ee\u9898\u53ef\u80fd\u6709\u4e0d\u5408\u7406\u7684\u5730\u65b9\u4e5f\u8bf7\u8c05\u89e3\u3002\n\u4f46\u662f\u6211\u5728\u4f7f\u7528GSON\u65f6\u89c9\u5f97\u6709\u70b9\u633a\u597d\uff0c\u90a3\u5c31\u662f\u4ed6\u53ea\u89e3\u6790\u52a0\u4e86\u58f0\u660e\u7684\u5b57\u6bb5\uff0c\u6ca1\u6709\u52a0\u58f0\u660e\u7684\u5b57\u6bb5\u662f\u4e0d\u4f1a\u89e3\u6790\u7684\uff0c\u6240\u4ee5\u6211\u4e00\u76f4\u60f3\u5bfb\u627e\u5728fastjson\u4e2d\u662f\u5426\u6709\u7c7b\u4f3c\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002\n\u4ee5\u6211\u4e2a\u4eba\u7684\u6d45\u89c1\uff0c\u6211\u4e2a\u4eba\u8ba4\u4e3aGSON\u7684\u8fd9\u79cd\u53ef\u80fd\u66f4\u52a0\u7b26\u5408\u5b9e\u9645\u5e94\u7528\u5230\u751f\u4ea7\u4e2d\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5f53\u524d\u7248\u672c\u4e0b\u5df2\u7ecf\u6709\u6b64\u7c7b\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5341\u5206\u60f3\u5f97\u5230\u4f60\u7684\u6307\u70b9\uff0c\u5982\u679c\u5f53\u524d\u8fd8\u6ca1\u6709\uff0c\u5e0c\u671b\u53ef\u4ee5\u6dfb\u52a0\u4e0a\u8fd9\u79cd\u7279\u6027\u3002\n\u5e0c\u671bFastJson\u8d8a\u6765\u8d8a\u597d\u3002\n. \u770b\u5230JSONTYPE\u4e2d\u6709ignores\uff0c\u8981\u662f\u6709\u4e2aonly\u591a\u597d\u554a\uff0c\u53ea\u9488\u5bf9\u52a0\u4e86\u58f0\u660e\u7684\u8fdb\u884c\u521d\u59cb\u5316\u6216\u8005\u53ea\u9488\u5bf9\u5199\u5728only\u4e2d\u7684\u5e8f\u5217\u5316\uff0c\u53e6\u5916\u7531\u4e8e\u6211\u4eec\u7684\u5bf9\u8c61\u5b9e\u4f53\u548c\u7ed1\u5b9a\u5728request\u4e0a\u7684\uff0c\u73b0\u5728\u7684\u7ed3\u679c\u5c31\u662f\u4f1a\u5c06Android\u4e2dVolley\u4e2d\u7684\u57fa\u7c7bRequest\u4e2d\u7684N\u591a\u4e2aprivate\u7684\u5c5e\u6027\u5168\u90e8\u7ed9\u5e26\u8fdb\u53bb\uff0c\u5f88\u5934\u5927\n. ",
    "pxb1988": "The problem still occur in 1.2.11. I have tested this on MI 4c, android 4.4.4\nI believe it is caused by the Class.getFields()\n\nThe elements in the array returned are not sorted and are not in any particular order.\n\nWhen child and its parent class have a field with same name. the child's field may appear before parent's field on some devices/platforms; while on other devices/platforms, parent's field may appear before  child's field.\nBut fastjson deserialize the value to the first appearance field, which cause an unpredictable situation.\nhere are steps to reproduce\n- create a helloworld app in Android Studio\n- add 1.2.11 as dependence in app/build.gradle\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.3.0'\n    compile 'com.alibaba:fastjson:1.2.11'\n}\n- modify the Activity\n```\npackage com.example.bob.fastjsontest;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport com.alibaba.fastjson.JSON;\npublic class MainActivity extends AppCompatActivity {\npublic static class A extends B {\n    public String extra;\n}\n\npublic static class B {\n    public String extra;\n\n    public String getB() {\n        return extra;\n    }\n}\n\npublic static class C extends B {\n    public String extra;\n}\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    String text = \"{ extra:\\\"yes\\\" }\";\n    A a = JSON.parseObject(text, A.class);\n    Log.d(\"T\", \"A: \" + a.getB());\n    C c = JSON.parseObject(text, C.class);\n    Log.d(\"T\", \"C: \" + c.getB());\n}\n\n}\n```\n-  run it !\nD/T       (20692): A: null\nD/T       (20692): C: yes\n. ",
    "zhihuij": "\u662f\u6709\u4e24\u4e2a\u7248\u672cfastjson\uff0c\u4f7f\u7528\u72ec\u7acb\u7684ClassLoader\u5c31\u662f\u4e3a\u4e86\u907f\u514d\u7248\u672c\u51b2\u7a81\uff0c\u521a\u624d\u8bd5\u4e86\u4e0b\uff0c\u53bb\u6389\u53e6\u5916\u4e00\u4e2afastjson\u7684\u4f9d\u8d56\uff0c\u6ca1\u6709\u8fd9\u4e2a\u5f02\u5e38\uff0c\u6240\u4ee5\u5e94\u8be5\u8fd8\u662fclassloader\u7684\u903b\u8f91\u6709\u95ee\u9898\n. \u8ddf\u8e2a\u4e86\u4e0b\uff0c\u8fd9\u4e2aisExternalClass\u8ddf\u62a5\u7684\u5f02\u5e38MS\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u8fd9\u4e2aisExternalClass\u88ab\u8c03\u7528\u65f6\u7684\u73b0\u573a\uff1a\ncom.alibaba.fastjson.util.ASMClassLoader@39ce89aa => java.net.URLClassLoader@3fa1732d!!!sun.misc.Launcher$AppClassLoader@4aa0560e\ncom.C ===> sun.misc.Launcher$AppClassLoader@4aa0560e !!!!sun.misc.Launcher$ExtClassLoader@6471d768\n\u7b2c\u4e00\u884c\u662f\u89e6\u53d1ASMClassLoader.isExternalClass\u8c03\u7528\u65f6\uff0cASMClassLoader\u7684classloader\u4ee5\u53ca\u5b83\u7684parent\uff1b\n\u7b2c\u4e8c\u884c\u662fisExternalClass\u51fd\u6570\u53c2\u6570\uff0cclass\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u540d\uff0cclassloader\u53caparent\u3002\n. om.alibaba.fastjson.util.ASMClassLoader@1cea9777 => java.net.URLClassLoader@3fa1732d!!!sun.misc.Launcher$AppClassLoader@4aa0560e\ncom.alibaba.fastjson.serializer.ASMSerializer_1_Transaction ===> com.alibaba.fastjson.util.ASMClassLoader@1cea9777 !!!!WebappClassLoader\n\u633a\u8be1\u5f02\u7684\u7ed3\u679c\uff0c\u7b2c\u4e00\u884c\u662f\u8c03\u7528 isExternalClass \u65f6\uff0cASMClassLoader\u7684\u7236\u5b50\u5173\u7cfb\uff1bASMClassLoader\u672c\u8eab\u8fd9\u4e2aClass\u7684classloader\u7684\u7236\u5b50\u5173\u7cfb\uff1b\n\u7b2c\u4e8c\u884c\u662f\u8c03\u7528 defineClassPublic \u65f6 ASMClassLoader\u7684\u7236\u5b50\u5173\u7cfb\uff1a\uff08com.alibaba.fastjson.serializer.ASMSerializer_1_Transaction \u662f \u4f20\u5165 defineClassPublic \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\uff0c\u540e\u9762\u662f\u8fd4\u56de\u7684Class\u5bf9\u8c61\u7684classloader\u53caparent\n\u5728\u4e24\u6b21\u8c03\u7528\u4e4b\u95f4\u6709\u4fee\u6539\u8fc7 ASMClassLoader@1cea9777 \u7684parent\uff1f\n. \u521a\u624d\u7684\u8bc4\u8bba\u6709\u95ee\u9898\uff0c\u6211\u5df2\u7ecf\u5728\u539f\u6765\u7684\u8bc4\u8bba\u4e0a\u7f16\u8f91\u4e86\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u662f\u8ddf ASMClassLoader \u7684 getParentClassLoader\u7684\u903b\u8f91\u6709\u5173\uff0c\u5f53 Thread.currentThread().getContextClassLoader() \u80fd\u52a0\u8f7d\u5230JSON\u8fd9\u4e2a\u7c7b\uff0c\u4f46\u8ddfASMClassLoader \u672c\u8eab\u4e0d\u5728\u4e00\u4e2a\u7248\u672c\u7684\u5305\u91cc\u65f6\uff0c\u5c31\u4f1a\u51fa\u95ee\u9898\u3002\n\u5177\u4f53\u5230\u6211\u8fd9\u4e2a\u573a\u666f\uff1a\nASMClassLoader \u7c7b\uff08fastjson 1.2.11\uff09\u7531 java.net.URLClassLoader \u52a0\u8f7d\uff0c\n\u4f46Thread.currentThread().getContextClassLoader() = WebappClassLoader \uff08\u8fd9\u4e2aClassLoader\u7684classpath\u4e0b\u5305\u542b 1.1.26\u7684fastjson\uff0c\u6240\u4ee5\u80fd\u52a0\u8f7d\u5230JSON\u8fd9\u4e2a\u7c7b\uff09\uff0c\u6240\u4ee5\u521b\u5efa\u51fa\u6765\u7684 ASMClassLoader \u7684parent\u662fWebappClassLoader\uff0c\u5bfc\u81f4\u540e\u9762\u7684\u7c7b\u52a0\u8f7d\u5931\u8d25\u3002\n\u6240\u4ee5\u6211\u89c9\u5f97getParentClassLoader\u903b\u8f91\u9700\u8981\u8c03\u6574\u4e00\u4e0b\uff0c\u7b80\u5355\u7684\u8bbe\u7f6e\u4e3aASMClassLoader\u7c7b\u7684classloader\u5c31\u884c\u4e86\u5427\u3002\nUpdate\uff1a\u770b\u4e86\u4e0bASMClassLoader\u7684\u66f4\u6539\u5386\u53f2\uff0cMS\u4e4b\u524d\u4e3a\u4e86\u4fee\u590d\u4ec0\u4e48bug\u7531\u76f4\u63a5\u7528ASMClassLoader\u7684classloader\u6539\u6210\u4e86\u76ee\u524d\u8fd9\u79cd\u5f62\u5f0f\n. \u8fd9\u4e2a\u6ca1\u5565\u7528\uff0c\u8fd9\u4e2a\u53ef\u80fd\u6539\u53d8ASMDeserializerFactory\u7684ASMClassLoader\uff0c\u5bf9ASMSerializerFactory\u4e0d\u8d77\u4f5c\u7528\uff0chttps://github.com/alibaba/fastjson/blob/708b5c5eb4d2b90d1ee5eba125a77ff3ee8052f4/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java#L36\n\u91cc\u76f4\u63a5new\u4e86ASMClassLoader\n. \u987a\u4fbf\u95ee\u4e00\u4e0b\uff0chttps://github.com/alibaba/fastjson/commit/1d423d223ae5ffa3eee533c5f75a4aefa955a09a \u8fd9\u4e2a\u63d0\u4ea4\u5728\u4fee\u6b63\u4ec0\u4e48\u95ee\u9898\uff1f\n. \u5728\u6211\u7684\u573a\u666f\u4e0b\u8bd5\u4e86\u4e0b\u6700\u65b0\u7684\u63d0\u4ea4\uff0c\u5de5\u4f5c\u6b63\u5e38\n. ",
    "AntShakeTree": "\u6ce8\u89e3\u5ffd\u7565\u3002\n\n\u5728 2016\u5e745\u67088\u65e5\uff0c\u4e0b\u534812:58\uff0cmfma notifications@github.com \u5199\u9053\uff1a\n\u8fd9\u4e24\u5929\u5728\u521d\u5b66Spring\u548cfastjson\u7ed3\u5408\u4f7f\u7528\uff0c\u6211\u4e0b\u8f7d\u4e86fastjson1.2.11\u7248\u672c\uff0cSpring\u4f7f\u7528\u6ce8\u89e3\u8fdb\u884c\u4f7f\u7528\u3002\u4f46\u662f\u5728\u8fd4\u56de\u7684\u6570\u636e\u91cc\u51fa\u73b0$.ref\u5faa\u73af\u5d4c\u5957\u7684\u95ee\u9898\uff0c\u8bf7\u95ee\u5728fastjson1.2.11\u7248\u672c\u91cc\u600e\u4e48\u4e0espring4.2.2\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u89e3\u51b3\u4e00\u5bf9\u591a\u5173\u7cfb\u4e0b\u7684\u5faa\u73af\u5d4c\u5957\u95ee\u9898\u3002\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/alibaba/fastjson/issues/618\n. \n",
    "mfma": "@AntShakeTree \u6ce8\u89e3\u5ffd\u7565\u540e\u4f1a\u51fa\u73b0Sjava.lang.StackOverflowError\n. ",
    "cuter44": "```\nList lfi = TypeUtils.computeGetters(clazz, null, null, false);\nFieldInfo fi = lfi.get(arbitrary);              // ... for example, dname\nSystem.out.println(value);                      // \"\u55b5\u55b5\u55b5\"\nSystem.out.println(fi.fieldClass);              // class java.lang.String \nSystem.out.println(fi.method);                  // public java.lang.String com.kakakj.cafune.user.model.UserBase.getDname()\nfi.set(object, value);                          // boom!\n```\n, where clazz is a standard POJO and object is an instance of it.\n. @wenshao I know, but it's still a flaw. ( \u02d8\u2022\u03c9\u2022\u02d8 )\n. ",
    "githublaohu": "\u83b7\u5f97\u6e90\u7801\uff0c\u7f16\u8bd1JSONField \u679a\u4e3e\u3002\u5e8f\u5217\u5316\u9ed8\u8ba4\u503c\u4e3afalse\u5c31\u884c\u4e86\u3002\n. \u63d0\u5347\u4f60\u7684\u7248\u672c\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n1.1,\u7684\u597d\u50cf\u9ed8\u8ba4\u662f\u6392\u5e8f\u3002\n. \u4f60\u8bd5\u8bd5\uff0cnew B \u51fa\u6765\u770b\u770b\uff0c\u8fd9\u4e2a\u662f\u4f60\u8bed\u6cd5\u95ee\u9898\u3002\u4e0d\u662ffastjson\n\u7136\u540e\u6211\u89c9\u5f97\uff0cfastjson\u4e0d\u9700\u8981\u652f\u6301\u8fd9\u79cd\u95ee\u9898\u3002\n. \u5b9e\u4f53\u7c7b\u9700\u8981\u6df7\u6dc6\u5417\uff1f\n\u8fd9\u4e2a\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n. \u6709\u4e00\u4e2a key\u7684\u62e6\u622a\u5668\uff0c\uff0c\u5199\u8fd9\u4e2a\u62e6\u622a\u5668\u5c31\u884c\u4e86\u3002\n. \u4e00\u4e2a\u4e2a\u5199\u5427\uff0c\u4e0d\u9700\u8981\u7ea0\u7ed3\u4e86\u3002\n\u8fd9\u4e2a\u4e0d\u662ffastjson\u7684\u8bbe\u8ba1\u95ee\u9898\u3002\n\u800c\u662f\u4f60\u4eec\u67b6\u6784\u95ee\u9898\u3002\n. \u4f60\u53ef\u4ee5\u8ba9long \u53d8\u6210 string \u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\njs\u4e0d\u652f\u6301\uff0c\u771f\u6b63\u7684long\u578b\u3002\n. \u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c\n\u7b2c\u4e00\u4e2a\u662f \u6709\u4e2a\u5e8f\u5217\u5316\u53d8\u91cf\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684 \u6570\u5b57\u7c7b\u578b\uff0c\u8f6c\u6210 string\n\u7b2c\u4e8c\u4e2a\u662f \u6709\u4e00\u4e2avalue\u62e6\u622a\u5668\uff0c\u53ef\u4ee5\u4fee\u6539value\u7684\u503c\n. \u53c8\u4e00\u4e2a\u662f\u4e00\u4e2a\u4f60\u4eec\u67b6\u6784\u8bbe\u8ba1\u95ee\u9898\uff0c\n\u4e00\u4e2a\u5e93\uff0c\u4e0d\u53ef\u80fd\u652f\u6301\u4f60\u4eec\u8fd9\u4e48\u591a\u7279\u8bb8\u9700\u6c42\uff0c\n\u5982\u679c\u6570\u636e\u4e3anull\uff0c\u76f4\u63a5\u5728\u6570\u636e\u5e93\u8bbe\u5b9a\u9ed8\u8ba4\u503c\u5c31\u884c\u4e86\u3002\u8fd9\u4e48\u7b80\u5355\u7684\u554a\u3002\n. JSONCreator    \u53bb\u770b\u4e0b\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u5427\n. \u628a\u95ee\u9898\u63cf\u8ff0\u6e05\u695a\u3002\n\u4ece\u5f02\u5e38\u6765\u770b\uff0c\u5e94\u8be5\u662f\u4f60\u63d0\u4f9b\u7684\u6570\u636e\u6709\u95ee\u9898\u3002\n. \u9ebb\u70e6\u63d0\u4f9b\u5b8c\u6574\u7684 \u95ee\u9898\uff0c\u6570\u636e\u3002\u4e0e\u95ee\u9898\u6d4b\u8bd5\u4ee3\u7801\u3002\n. \u9ebb\u70e6\u63d0\u4f9b\u5b8c\u6574\u7684 \u95ee\u9898\uff0c\u6570\u636e\u3002\u4e0e\u95ee\u9898\u6d4b\u8bd5\u4ee3\u7801\u3002\n. \u4f60\u597d\uff01\u6211\u5199\u7684\u6d4b\u8bd5\u4ee3\u7801\u6ca1\u6709\u53d1\u73b0\u95ee\u9898\u3002\nfastjson\u7684\u7248\u672c\u662f 1.2.7\n\u4e0b\u9762\u662f\u6211\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002\n`package com.micromews.user.test.json;\npublic class TestJsonOne {\n```\nprivate String str;\npublic String getStr ( ) {\n    return str ;\n}\npublic void setStr ( String str ) {\n    this.str = str ;\n}\n```\n}\n`\n`package com.micromews.user.test.json;\npublic class TestJsonTwo {\n```\nprivate String str;\nprivate String st;\npublic String getStr ( ) {\n    return str ;\n}\npublic void setStr ( String str ) {\n    this.str = str ;\n}\npublic String getSt ( ) {\n    return st ;\n}\npublic void setSt ( String st ) {\n    this.st = st ;\n}\n```\n}\npackage com.micromews.user.test.json;\nimport org.junit.Test ;\nimport com.alibaba.fastjson.JSON ;\npublic class TestJson {\n```\n@Test\npublic void json(){\n    TestJsonOne tjo =  new TestJsonOne ( );\n    tjo.setStr ( \"111\" );\n    String str = JSON.toJSONString ( tjo );\n    System.out.println ( \"TestJsonOne \u5e8f\u5217\u5316\u5b57\u7b26\u4e32 \uff1a \" + str ) ;\n    TestJsonTwo tjt = JSON.parseObject ( str , TestJsonTwo.class );\nSystem.out.println (\"TestJsonTwo de str \u5c5e\u6027 \uff1a \"  + tjt.getStr ( ) ) ;\n\n}\n```\n}\n. \u4f60\u597d\uff01\u6211\u5199\u7684\u6d4b\u8bd5\u4ee3\u7801\u6ca1\u6709\u53d1\u73b0\u95ee\u9898\u3002\nfastjson\u7684\u7248\u672c\u662f 1.2.7\n\u4e0b\u9762\u662f\u6211\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002package com.micromews.user.test.json;\npublic class TestJsonOne {\n```\nprivate String str;\npublic String getStr ( ) {\n    return str ;\n}\npublic void setStr ( String str ) {\n    this.str = str ;\n}\n```\n}\n`\n`package com.micromews.user.test.json;\npublic class TestJsonTwo {\n```\nprivate String str;\nprivate String st;\npublic String getStr ( ) {\n    return str ;\n}\npublic void setStr ( String str ) {\n    this.str = str ;\n}\npublic String getSt ( ) {\n    return st ;\n}\npublic void setSt ( String st ) {\n    this.st = st ;\n}\n```\n}\npackage com.micromews.user.test.json;\nimport org.junit.Test ;\nimport com.alibaba.fastjson.JSON ;\npublic class TestJson {\n```\n@Test\npublic void json(){\n    TestJsonOne tjo =  new TestJsonOne ( );\n    tjo.setStr ( \"111\" );\n    String str = JSON.toJSONString ( tjo );\n    System.out.println ( \"TestJsonOne \u5e8f\u5217\u5316\u5b57\u7b26\u4e32 \uff1a \" + str ) ;\n    TestJsonTwo tjt = JSON.parseObject ( str , TestJsonTwo.class );\nSystem.out.println (\"TestJsonTwo de str \u5c5e\u6027 \uff1a \"  + tjt.getStr ( ) ) ;\n\n}\n```\n}\n`\n. \u4f60\u7684\u95ee\u9898\uff0c\u6700\u8fd1\u7684\u4e00\u6837\u7684\u95ee\u9898\uff0c\n\u5b9e\u4f53\u5bf9\u8c61\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u6cdb\u578b\u3002\n\u4e2a\u4eba\u8ba4\u4e3a\u662f\u7a0b\u5e8f\u6d4b\u8bd5\u4e0a\u7684\u95ee\u9898\u3002\n. \u4f60\u7684\u95ee\u9898\uff0c\u6700\u8fd1\u7684\u4e00\u6837\u7684\u95ee\u9898\uff0c\n\u5b9e\u4f53\u5bf9\u8c61\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u6cdb\u578b\u3002\n\u4e2a\u4eba\u8ba4\u4e3a\u662f\u7a0b\u5e8f\u6d4b\u8bd5\u4e0a\u7684\u95ee\u9898\u3002\n. \u80fd\u63d0\u4f9b\u5f02\u5e38\u4fe1\u606f \u4e0e \u4ee3\u7801\u4fe1\u606f\u5417\uff1f\n. \u53ef\u4ee5\u4e0d\u7528 \u6cdb\u578b\u5417\uff1f\n. \u53cd\u5e8f\u5217\u5316\uff0cfinal\uff0c\n\u4f9d\u636ejava\u8bed\u8a00\u7279\u6027\uff0cfinal \u5e94\u8be5\u662f\u4e0d\u652f\u6301\u53cd\u5e8f\u5217\u5316\u3002\u4e00\u5b9a\u8981\u5e8f\u5217\u5316 final\u5b57\u6bb5\uff0c\u8fdd\u53cd\u4e86\u8bbe\u8ba1\u539f\u5219\uff0c\u8bed\u8a00\u539f\u5219\u3002\n. \u4f60\u662f\u60f3\uff0c\u5b9e\u73b0jsonp\u5bf9\u5427\uff0c\n\u6211\u89c9\u5f97\uff0c\u4f5c\u8005\u4f1a\u652f\u6301\u8fd9\u4e2a\u7684\u3002\n\u8fd9\u5468\uff0c\u6211\u5c1d\u8bd5\u5199\u4e0b\u3002\n. \u4e00\u4e2a\u662f\u6267\u884c jar\uff0c\u4e00\u4e2a\u662f\u6e90\u7801jar\u3002\n. @wenshao \u8fd9\u4e2a\u9700\u6c42\u6211\u6765\u505a\uff1f\n\u6211\u5728 FastJsonConfig \u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7528\u6237\u8bc6\u522b jsonp\u7684\u6267\u884c\u65b9\u6cd5\u3002\u8ba9\u540e\u4fee\u6539FastJsonHttpMessageConverter4\u7684\u653e\u56de\u5c31\u884c\u4e86\u3002\n. @myoss \u4f60\u5199\u5f97\u597d\u590d\u6742\u554a\u3002\n. \u5efa\u8bae\u3002\u3002\u53ef\u4ee5\u8bf4\u662f\u8981\u6c42\u3002\u4e0d\u8981\u505a\u5f97\u90a3\u4e48\u590d\u6742\u3002\u5c31\u5728\u539f\u6709\u7684\u57fa\u7840\u4e0a\u914d\u7f6e\u4e00\u4e2a callback \u5c31\u884c\u4e86\u3002 @myoss \n. @myoss \u8bf7\u6c42\u4f60\u8fd9\u4e2a\u8bbe\u8ba1\uff0c\u662f\u4e0d\u662f\u6240\u6709\u7684\u8bf7\u6c42\u54cd\u5e94\u7684\u6570\u636e\u90fd\u4f1a\u7ecf\u8fc7\u90a3\u4e9b\u4ee3\u7801\uff1f\n. \u53ef\u4ee5\u89e3\u6790\uff0cfashjson\u652f\u6301\u591a\u79cd\u98ce\u683c\u7684 json\u683c\u5f0f\u3002\n\u4f60\u53ef\u4ee5\u53bb\u770b\u4e0b fashjson\u7684\u6587\u6863\uff0c\u4e0a\u9762\u8bf4\u7684\u5f88\u8be6\u7ec6\u7684\u3002\n\u4e0d\u597d\u610f\u601d\uff0c\u6211\u57fa\u672c\u6ca1\u7528\u8fc7map\u4f5c\u4e3a\u6570\u636e\u683c\u5f0f\u3002\u6240\u4ee5\u4e0d\u77e5\u9053map\u4f1a\u4e0d\u4f1a\u62a5\u9519\u3002\n. \u73b0\u5728\u4e0d\u4f1a\u81ea\u52a8\u89e3\u6790  robj\u7684 key\uff0c\n\u53ef\u4ee5\u628a\u4ee3\u7801\u4fee\u6539\u4e0b\u3002\n   JSONObject json = new JSONObject();\n        json.put(\"robj\", JSON.parseObject(\"{abc: 123}\"));\n        System.out.println(json.getJSONObject(\"robj\"));\n. JSONArray object = JSON.parseArray(\"[{\\\"args\\\":[\\\"150\\\",\\\"change\\\",{\\\"timeStamp\\\":1471595047319,\\\"value\\\":\\\"\\\"},{\\\"attrs\\\":{\\\"value\\\":\\\"\\\"}}],\\\"method\\\":\\\"fireEvent\\\"}]\");\n    System.out.println( object.get(0).toString());\n{\"args\":[\"150\",\"change\",{\"timeStamp\":1471595047319,\"value\":\"\"},{\"attrs\":{\"value\":\"\"}}],\"method\":\"fireEvent\"}\nfashjson \u7248\u672c \u30021.2.7\n. \u4e0d\u597d\u610f\u601d\uff0c\n\u5e2e\u4f60\u627e\u4e86\u4e00\u4e9b\u5730\u65b9\uff0c\u5b9e\u5728\u662f\u6ca1\u627e\u5230\u3002fastjson\u7684\u89e3\u51b3\u65b9\u6848\uff0c\n\u5efa\u8bae\uff0c\u81ea\u5df1\u8f6c\u79fb\u4e0b\uff0c\u5176\u5b9e\u4e5f\u7b80\u5355\u3002\u8fd9\u662f php\u4f20\u8fc7\u6765\u7684\u6570\u636e\u5427\u3002\n. String jsonTest = \"{\\\"properties\\\":{\\\"type\\\":{\\\"items\\\":{\\\"allOf\\\":[{\\\"$ref\\\":\\\"title\\\",\\\"required\\\":[\\\"iconImg\\\"]}]}}}}\";\n    JSONObject object = JSON.parseObject(jsonTest, Feature.DisableSpecialKeyDetect);\n    System.out.println( object.get( \"properties\"));\n{\"type\":{\"items\":{\"allOf\":[{\"$ref\":\"title\",\"required\":[\"iconImg\"]}]}}}\n\u7248\u672c 1.2.7,\u6ca1\u6709\u95ee\u9898\u3002\n. \u7528\u6700\u65b0\u7684\u4e0d\u53ef\u4ee5\u5417?\n. user \u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e86\uff1f\n\u5f00\u59cb\u662f\u4ec0\u4e48\n\u51fa\u73b0\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\n\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\n. user \u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e86\uff1f\n\u5f00\u59cb\u662f\u4ec0\u4e48\n\u51fa\u73b0\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\n\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\n. \u4f60\u770b\u4e86\u3002  SerializeConfig  \u5185\u90e8\u5b9e\u73b0\u5417\uff1f\nSerializeConfig \u8981\u7684\u662f ObjectSerializer \u7684\u5b9e\u73b0\u3002\n\u4f60\u52a0\u5165\u7684  SerializerFeature.SortField \u53ea\u662f\u679a\u4e3e\u3002\n\u7136\u540e \u4f60\u5e94\u8be5\u662f  JSON.toJSONString(user,  SerializerFeature.SortField\uff0cSerializerFeature.PrettyFormat);\n. \u4f60\u770b\u4e86\u3002  SerializeConfig  \u5185\u90e8\u5b9e\u73b0\u5417\uff1f\nSerializeConfig \u8981\u7684\u662f ObjectSerializer \u7684\u5b9e\u73b0\u3002\n\u4f60\u52a0\u5165\u7684  SerializerFeature.SortField \u53ea\u662f\u679a\u4e3e\u3002\n\u7136\u540e \u4f60\u5e94\u8be5\u662f  JSON.toJSONString(user,  SerializerFeature.SortField\uff0cSerializerFeature.PrettyFormat);\n.  \\\"{\\\"name\\\n}]}\\\" \n\u591a\u4e86\u4e00\u4e2a\u53cc\u5f15\u53f7\uff0c\u4e0d\u7b26\u5408 json\u7684\u8bed\u6cd5\u89c4\u5219\u3002\u5982\u679c\u4f60\u53bb\u6389\u8fd9\u5bf9 \u53cc\u5f15\u53f7\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u771f\u5fc3\u96be\u627e\u3002\n.  \\\"{\\\"name\\\n}]}\\\" \n\u591a\u4e86\u4e00\u4e2a\u53cc\u5f15\u53f7\uff0c\u4e0d\u7b26\u5408 json\u7684\u8bed\u6cd5\u89c4\u5219\u3002\u5982\u679c\u4f60\u53bb\u6389\u8fd9\u5bf9 \u53cc\u5f15\u53f7\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u771f\u5fc3\u96be\u627e\u3002\n. ??????????\n. \u597d\u50cf\u76ee\u524d\u4e0d\u652f\u6301.....\n\u5b9e\u5728\u4e0d\u884c\uff0c\u5efa\u8bae\uff0c \u81ea\u5df1\u8f6c\u4e0b\u3002\u522b\u7816\u8fdb\u80e1\u540c\u4e0d\u51fa\u6765\u3002\n. \u4e0d\u4f1a\u7684\uff0c\u5728\u7b2c\u4e00\u6b21\u5c31\u751f\u6210\u4e86\u3002 \u5e8f\u5217\u5316\u65b9\u6848\uff0c\n\u5e94\u8be5\u662f\u4f60 object\u5bf9\u8c61\u662f list \u5c31\u662f[] ,\u5b9e\u4f53\u7c7b\u5c31\u662f null\u4e86\u3002\n. \u80fd\u51fa\u4e00\u4e2a\u5217\u5b50\u5417\uff1f\n. \u8fd9\u662f\u4f60\u81ea\u5df1\u7684\u95ee\u9898\u3002\n\u4e3a\u4ec0\u4e48\u8fd8\u8981 toJsonString \u4e86\uff1f\n\u5df2\u7ecf\u662f \u662f json\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u4e86\u3002\n. \u8bf7\u51fa\u793a\uff0c\u5168\u6574\u7684\u5217\u5b50\uff0c\u4e0e\u5f02\u5e38\u3002\u8fd9\u6839\u672c\u5c31\u4e0d\u77e5\u9053\u3002\u4f60\u8bf4\u4ec0\u4e48\u3002\n\u51fa\u73b0 error\uff0c\u5efa\u8bae\u4f60\u4f7f\u7528\u6700\u65b0\u7248\u672c\uff0c\u6216\u8005\u4f60\u7684\u7248\u672c\u4e0e\u5bf9\u5e94\u7684jdk\u7248\u672c\u4e00\u81f4\u3002\n. \u8bbe\u7f6e\u6210\u6cdb\u578b\u4e0d\u884c\u5417\uff1f\n. JavaBeanDeserializer\n} else if (lexer.matchField(name_chars)) {\n                        matchField = true;\n                    } else {\n\u8fd9\u91cc\u8868\u793a\uff0c list\u7c7b\u578b\uff0c\u662f\u65e0\u6cd5 \u64cd\u4f5c\u7684\uff0c\u57fa\u672c\u7c7b\u578b\uff0c\u4e0estring\u7c7b\u578b\uff0c\u4e5f\u662f\u65e0\u6cd5\u4f7f\u7528  deserializeUsing\n\u5de5\u4f5c\u4e86\u3002\n\u8fd9\u4e2a\u53ea\u80fd\u8ba9 \u4f5c\u8005\u5f04\u3002\n. \u6ca1\u6709\uff0c\uff0c\n\u6211\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u591a\u6570\u636e\u8fdb\u884c\u4e86\u4e00\u6b21\u5904\u7406\uff0c\u8ba9\u540e\u5206\u4e24\u6b21 \u53cd\u5e8f\u5217\u5316\u7684\u3002\n. \u5efa\u8bae\u7684\u65b9\u5f0f\u3002\u662f\u5728\u524d\u6bb5\u8f6c\u4e49\uff0c\u7136\u540e\u5728\u8fdb\u884c\u4f20\u8f93\u3002\n. : com.fasterxml.jackson.databind.ObjectMapper.canSerialize(Ljava/lang/Class;Ljava/util/concurrent/atomic/AtomicReference;)Z\n\u8fd9\u4e2a\u662f\u4f60\u7528\u4e86 jackson\u597d\u5417? \u4e0d\u662f fastjson\u597d\u4e0d\u3002\n. \u8c03\u8bd5\u4e0b\u5427\uff0c\n\u5148\u786e\u5b9a\u4f60\u7684\u914d\u7f6e\u8bfb\u53d6\u6389\u4e86\u3002\u65b9\u6cd5\u88ab\u8c03\u7528\u4e86\u3002\n1\uff0c\u9a8c\u8bc1\u901a\u8fc7\u624d\u662f\u6b63\u9053\u554a\u3002\n2\uff0c\u8c03\u8bd5\u5c31\u77e5\u9053\uff0c\u662f\u4e0d\u662f\u8c03\u7528 fastjson\u4e86\u3002\n3\uff0c\u73af\u5883\u95ee\u9898\u3002\u7684\u786e\u5f88\u5934\u75bc\u3002\n. \u8bf4\u4e86\u3002\u662f\u4f60\u7528 jackjson\u62a5\u9519\u3002......\n. \u8fd9\u662f  \u9a7c\u5cf0\u547d\u540d\u6cd5\u89c4\u5219 \uff0c\u4f60\u6ca1\u6709\u9075\u5faa\uff0c\u8bf7\u9075\u5faa \u9a7c\u5cf0\u547d\u540d\u6cd5\u89c4\u5219\u3002\u57fa\u672c\u6240\u6709json\u5e93\u90fd\u662f \u8fd9\u6837\u7684\u3002\n. 1.2 \u4ee5\u540e\u4e0d\u5728\u652f\u6301 map\u6392\u5e8f\u3002\n\u5efa\u8bae\u53cc\u65b9\u63d0\u5347 fastjson\u7684\u7248\u672c\u3002\n. \u5982\u679c\u6211\u662f\u4f5c\u8005\uff0c\u4e00\u5b9a\u4e0d\u7ef4\u62a4\uff0c\u8fd9\u6837\u7684\u5de5\u4f5c\u3002\u771f\u5fc3\u53d8\u6001\u554a\u3002. uId \uff0cDo not conform to the hump nomenclature.So the parse error\n\u4e0d\u7b26\u5408 \u9a7c\u5cf0\u547d\u540d\u6cd5\u3002\u6240\u4ee5\u89e3\u6790\u9519\u8bef\n. \u591akey \u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u901a\u8fc7\u53cd\u5e8f\u5217\u5316\u5904\u7406\u5668\u89e3\u51b3\u3002\u6bd4\u8f83\u9ebb\u70e6\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u8fde\u63a5\nMany key cases, can only be solved through deserialization processor.More troublesome.Please see the links below\nhttps://github.com/alibaba/fastjson/wiki/ParseProcess. @Override\n    protected void writeInternal(Object obj, Type type, HttpOutputMessage outputMessage) throws IOException,\n            HttpMessageNotWritableException {\n        HttpHeaders headers = outputMessage.getHeaders();\n        ByteArrayOutputStream outnew = new ByteArrayOutputStream();\n        int len = writePrefix(outnew, obj);\n        Object value = obj;\n        if (obj instanceof MappingFastJsonValue) {\n            MappingFastJsonValue container = (MappingFastJsonValue) obj;\n            value = container.getValue();\n        }\n        len += JSON.writeJSONString(outnew, //\n                fastJsonConfig.getCharset(), //\n                value, //\n                fastJsonConfig.getSerializeConfig(), //\n                fastJsonConfig.getSerializeFilters(), //\n                fastJsonConfig.getDateFormat(), //\n                JSON.DEFAULT_GENERATE_FEATURE, //\n                fastJsonConfig.getSerializerFeatures());\n        len += writeSuffix(outnew, obj);\n        if (fastJsonConfig.isWriteContentLength()) {\n            headers.setContentLength(len);\n        }\n        OutputStream out = outputMessage.getBody();\n        outnew.writeTo(out);\n        outnew.close();\n    }\n\u8fd9\u91cc\u53ea\u80fd\u8fd4\u56de\uff0cjsonp\uff0c\n\u901a\u8fc7FastResponseBodyAdvice\u7684\u8fd4\u56de\u503c\u8bc6\u522b\uff0c\u662f\u8fd4\u56dejson\uff0c\u8fd8\u662fjsonp\uff0c. \u591a\u8c22\uff0c\u4f7f\u7528\u5b98\u65b9\u7684\u8fd8\u662f\u7a33\u59a5\u70b9\u3002\u867d\u7136\u81ea\u5df1\u5b9e\u73b0\u4e00\u5957\u6015\u8fc7\u4e0d\u4e0a\u5b98\u65b9\u7684\u6b65\u4f10\u3002\n\u8fd8\u662f\u5927\u795e\u7280\u5229\u3002. ",
    "fjchenmq": "\u55ef\uff0c\u662f\u7684\u3002\ncalzz\u662f\u4e2a\u590d\u6742\u5bf9\u8c61\uff0c\u91cc\u9762\u6709\u5f88\u591a\u81ea\u5b9a\u4e49\u7c7b\u53d8\u91cf\uff0c\u786e\u5b9e\u662f\u63a5\u53e3\u7c7b\uff0c\u4f46\u662f\u6709\u5b9e\u73b0\u7c7b\uff0c1.2.8\u8fd9\u4e2a\u7248\u672c\u5c31\u652f\u6301\u7684\uff1f @wenshao \n. 1.2.11\u7248\u672c\u8fd9\u4e2a\u7248\u672c\u4e0d\u884c\u5462\uff1f \u5f88\u591a\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316\u90fd\u53d8\u6210\u4e86$proxy   \u6c42\u5927\u795e\u6307\u5bfc\n. \u53cd\u5e8f\u5217\u7684\u8bddbean\u662f\u53e6\u5916\u4e00\u4e2a\u90e8\u95e8\u7684jar,\u4f9d\u8d56\u7684jar\u6bd4\u8f83\u591a\uff0c\u6211\u9644\u4ef6\u4e0a\u4f20\u4e0d\u4e86\uff0c\u600e\u4e48\u7ed9\u4f60\uff1f\u65b9\u4fbf\u90ae\u4ef6\u5417\uff1f\n. ",
    "masterchengsheng": "\u6211\u8fd9\u8fb9\u663e\u793a\u7684\u8fd8\u662funicode ,\u4e0d\u662f\u4e2d\u56fd \u540e\u6765\u6362\u4e86\u53e6\u5916\u4e00\u4e2a\u5c31\u597d\u5566\uff01\u8c22\u8c22\u5566\u54c8\n\u53d1\u9001\u81ea\u6211\u7684HTC Phone\n----- \u56de\u590d\u4fe1\u606f -----\n\u53d1\u4ef6\u4eba\uff1a \"\u9ad8\u94c1\" notifications@github.com\n\u6536\u4ef6\u4eba\uff1a \"alibaba/fastjson\" fastjson@noreply.github.com\n\u6284\u9001\uff1a \"masterchengsheng\" chengshengsyxy@live.cn, \"Author\" author@noreply.github.com\n\u4e3b\u9898\uff1a [alibaba/fastjson] \u600e\u4e48\u53bb\u5904\u7406unicode\u8fd9\u7c7b\u7684\u5b57\u7b26 (#624)\n\u65e5\u671f\uff1a \u5468\u4e09, 5\u6708 11 \u65e5, 2016 \u5e74 22:15\n\u8fd9\u4e2a\u4e0d\u5bf9\u4e48\uff1f\u4f60\u671f\u671b\u7684\u7ed3\u679c\u662f\u5565\uff1f\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/alibaba/fastjson/issues/624#issuecomment-218472329\n. {\n  \"@type\": \"com.aimsphm.common.BaseResult\",\n  \"code\": \"1000\",\n  \"data\": [\n    \"\u6309\u624b\u52a8\u63a7\u5236\u6309\u94ae\",\n    \"\u4e0d\u505c\u673a\",\n    \"\u4e0d\u8f6c\u52a8\",\n    \"\u4f20\u52a8\u8f74\u632f\u52a8\u5927\",\n    \"\u7b2c\u4e00\u63a8\u8fdb\u5668\",\n    \"\u7535\u673a\u4e0d\u8fd0\u884c\",\n         ...\n  ],\n  \"msg\": \"success\"\n}\nfindTagsList::SimpleKey [3,0]. @VictorZeng \n\u6211\u5176\u4ed6\u7684\u6ca1\u95ee\u9898 \u5c31\u8fd9\u4e2a\u6709\u95ee\u9898 \u6211\u8ddf\u5230 GenericFastJsonRedisSerializer \u53cd\u5e8f\u5217\u5316\u8fd9\u8fb9 \npublic Object deserialize(byte[] bytes) throws SerializationException {\n        if (bytes != null && bytes.length != 0) {\n            try {\n                return JSON.parseObject(new String(bytes, IOUtils.UTF8), Object.class, defaultRedisConfig, new Feature[0]);\n            } catch (Exception var3) {\n                throw new SerializationException(\"Could not deserialize: \" + var3.getMessage(), var3);\n            }\n        } else {\n            return null;\n        }\n    }\npublic static  T parseObject(String input, Type clazz, ParserConfig config, Feature... features) {\n        return parseObject(input, clazz, config, (ParseProcess)null, DEFAULT_PARSER_FEATURE, features);\n    }\n\u53ef\u4ee5\u770b\u5230 input \u5c31\u662f\u4e0a\u9762\u6211\u53d1\u7684 \u90a3\u4e32json  Type \u4e3a java.lang.Object.class\n@SuppressWarnings(\"unchecked\")\n    public static  T parseObject(String input, Type clazz, ParserConfig config, ParseProcess processor,\n                                          int featureValues, Feature... features) {\n        if (input == null) {\n            return null;\n        }\n    if (features != null) {\n        for (Feature feature : features) {\n            featureValues |= feature.mask;\n        }\n    }\n\n    DefaultJSONParser parser = new DefaultJSONParser(input, config, featureValues);\n\n    if (processor != null) {\n        if (processor instanceof ExtraTypeProvider) {\n            parser.getExtraTypeProviders().add((ExtraTypeProvider) processor);\n        }\n\n        if (processor instanceof ExtraProcessor) {\n            parser.getExtraProcessors().add((ExtraProcessor) processor);\n        }\n\n        if (processor instanceof FieldTypeResolver) {\n            parser.setFieldTypeResolver((FieldTypeResolver) processor);\n        }\n    }\n\n    T value = (T) parser.parseObject(clazz, null);\n\n    parser.handleResovleTask(value);\n\n    parser.close();\n\n    return (T) value;\n}\n\n\u6267\u884c\u5230\u8fd9\u8fb9 \u53d1\u73b0parser\u4e3anull return \u51fa\u6765\u7684value \u5c31\u662f  BaseResult{msg:null,code:null,data:null}\n. \u5b8c\u6574\u7684JSON\n{\n\"@type\": \"com.aimsphm.common.BaseResult\",\n\"code\": \"1000\",\n\"data\": [\n\"\u6309\u624b\u52a8\u63a7\u5236\u6309\u94ae\",\n\"\u4e0d\u505c\u673a\",\n\"\u4e0d\u8f6c\u52a8\",\n\"\u4f20\u52a8\u8f74\u632f\u52a8\u5927\",\n\"\u7b2c\u4e00\u63a8\u8fdb\u5668\",\n\"\u7535\u673a\u4e0d\u8fd0\u884c\",\n\"\u7535\u673a\u58f0\u97f3\u5f02\u5e38\",\n\"\u7535\u673a\u5f02\u54cd\",\n\"\u9632\u62a4\u677f\u78e8\u635f\",\n\"\u540e\u5899\u677f\u6f0f\u6cb9\",\n\"\u6324\u70df\",\n\"\u6405\u62cc\u7535\u673a\",\n\"\u65f7\u91cf\",\n\"\u4e71\u70df\",\n\"\u95e8\u6613\u6253\u5f00\",\n\"\u62cd\u70df\u677f\u4e0d\u52a8\u4f5c\",\n\"\u6392\u7a7a\u624b\u67c4\u65ad\",\n\"\u9a71\u52a8\u5668\u62a5\u8b66\",\n\"\u5931\u6548\",\n\"\u63a8\u6746\u8f74\u6f0f\u6cb9\",\n\"\u65e0\u52a8\u4f5c\",\n\"\u4e0b\u65b9\u6f0f\u6cb9\",\n\"\u4e0b\u70df\u4e0d\u7545\",\n\"\u4e0b\u70df\u9053\u7f3a\u652f\",\n\"\u4e0b\u70df\u5668\",\n\"\u663e\u793a\u9891\u7e41\",\n\"\u7bb1\u5904\u5f02\u58f0\",\n\"\u70df\u5e93\",\n\"\u70df\u5e93\u68c0\u6d4b\u5931\u6548\",\n\"\u70df\u5e93\u7f3a\u70df\",\n\"\u70df\u5e93\u7f3a\u70df\u652f\",\n\"\u70df\u5e93\u5c11\u70df\",\n\"\u70df\u5e93\u5c11\u70df\u4fe1\u53f7\",\n\"\u70df\u5e93\u63a2\u6d4b\u5668\u5931\u6548\",\n\"\u70df\u5e93\u4e0b\u70df\u5668\",\n\"\u70df\u5e93\u4e0b\u70df\u901a\u9053\",\n\"\u70df\u652f\u5b58\u5728\u68c0\u6d4b\u5668\",\n\"\u70df\u652f\u6324\u7d27\u5668\",\n\"\u70df\u652f\u6405\u52a8\u8f8a\",\n\"\u70df\u652f\u7f3a\u5c11\u6216\u963b\u585e\",\n\"\u70df\u652f\u63a8\u70df\u6392\u63a8\u70df\u65f6\",\n\"\u70df\u652f\u70df\u5e93\u7f3a\u652f\",\n\"\u6709\u5f02\u58f0\",\n\"\u53f3\u4fa7\u6cb9\u7bb1\u76d6\u6f0f\u6cb9\",\n\"\u8f74\u6f0f\u6cb9\"\n],\n\"msg\": \"success\"\n}\n\u662f\u4e0d\u662f\u6211redis \u914d\u7f6e\u8fd9\u5757\u6709\u95ee\u9898\n@Configuration\n@EnableCaching\npublic class RedisConfig implements BeanClassLoaderAware {\nprivate static final long TIME_OUT = 600;\n\n@Value(\"${spring.redis.host}\")\nprivate String host;\n@Value(\"${spring.redis.port}\")\nprivate int port;\n@Value(\"${spring.redis.password}\")\nprivate String password;\n@Value(\"${spring.redis.database}\")\nprivate int database;\n\n\nprivate ClassLoader classLoader;\n\n@Bean\npublic LettuceConnectionFactory lettuceConnectionFactory() {\n    LettuceClientConfiguration clientConfig = LettuceClientConfiguration.builder()\n            .commandTimeout(Duration.ofSeconds(2))\n            .shutdownTimeout(Duration.ZERO)\n            .build();\n    RedisStandaloneConfiguration configuration = new RedisStandaloneConfiguration(host, port);\n    configuration.setPassword(RedisPassword.of(password));\n    configuration.setDatabase(database);\n    return new LettuceConnectionFactory(configuration, clientConfig);\n}\n\nGenericFastJsonRedisSerializer redisSerializer = new GenericFastJsonRedisSerializer();\n\n@Bean\npublic RedisTemplate<String, Serializable> redisTemplate() {\n    RedisTemplate<String, Serializable> template = new RedisTemplate<>();\n    template.setKeySerializer(new StringRedisSerializer());\n    template.setValueSerializer(redisSerializer);\n    template.setConnectionFactory(lettuceConnectionFactory());\n    template.setHashValueSerializer(redisSerializer);\n    return template;\n}\n\n@Bean\npublic CacheManager cacheManager() {\n    Duration duration = Duration.of(TIME_OUT, ChronoUnit.SECONDS);\n    RedisCacheWriter redisCacheWriter = RedisCacheWriter.nonLockingRedisCacheWriter(lettuceConnectionFactory());\n    RedisSerializationContext.SerializationPair<Object> pair = RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer);\n    RedisCacheConfiguration defaultCacheConfig = RedisCacheConfiguration.defaultCacheConfig().entryTtl(duration).serializeValuesWith(pair);\n    RedisCacheManager cacheManager = new RedisCacheManager(redisCacheWriter, defaultCacheConfig);\n    return cacheManager;\n}\n\n@Bean(\"keyGenerator\")\npublic KeyGenerator keyGenerator() {\n    return (target, method, params) -> {\n        StringBuilder sb = new StringBuilder();\n        sb.append(target.getClass().getName());\n        sb.append(method.getName());\n        for (Object obj : params) {\n            sb.append(obj.toString());\n        }\n        return sb.toString();\n    };\n}\n\n@Override\npublic void setBeanClassLoader(ClassLoader classLoader) {\n    this.classLoader = classLoader;\n}\n\n}\n\u53d1\u9001\u81ea Windows 10 \u7248\u90ae\u4ef6https://go.microsoft.com/fwlink/?LinkId=550986\u5e94\u7528\n\n\u53d1\u4ef6\u4eba: \u4e1a\u4f59\u5e03\u9053\u5e08 notifications@github.com\n\u53d1\u9001\u65f6\u95f4: Wednesday, November 28, 2018 1:42:36 PM\n\u6536\u4ef6\u4eba: alibaba/fastjson\n\u6284\u9001: \u7a0b\u80dc; Mention\n\u4e3b\u9898: Re: [alibaba/fastjson] fastjson \u65e0\u6cd5\u53cd\u5e8f\u5217\u4f1aredis\u5b58\u50a8\u7684\u5185\u5bb9 (#2155)\n@masterchengshenghttps://github.com/masterchengsheng \u80fd\u5426\u628a\u51fa\u95ee\u9898\u7684\u5b8c\u6574JSON\u63d0\u4f9b\u4e00\u4e0b \u6211\u518d\u6d4b\u8bd5\u4e00\u4e0b\n\u2015\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/alibaba/fastjson/issues/2155#issuecomment-442326909, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ASaHBdntfgkOkDSOMvUxblgg0eu3hnvIks5uziJMgaJpZM4Y1DTt.\n. \n. @VictorZeng  \u6211\u77e5\u9053\u539f\u56e0\u4e86  \u6d6a\u8d39\u60a8\u65f6\u95f4\u5566  BaseResult\u7684 \u4ed6\u6ca1\u6709\u52a0 set \u65b9\u6cd5  . \u4ee3\u7801\u5347\u7ea7\u7684\u65f6\u5019 set\u65b9\u6cd5\u88ab\u540c\u65f6\u7ed9\u5220\u6389\u4e86  \u592a\u5c34\u5c2c\u4e86.  json = JSONObject.toJSONString(new WebSocketResult(TEMPERATURE, new TemperatureCurveVO()),FEATURES);\n                socketSession.sendMessage(new TextMessage(json));\n\u5f53\u4ee3\u7801\u6267\u884c\u8fd9\u5757\u7684\u65f6\u5019  \u8f93\u51fa\u7ed9\u524d\u7aef\u7528\u6237\u7684\u662f \uff1a\n\n\u6b63\u5e38\u60c5\u51b5\u4e0b\u8f93\u51fa\u7684\u662f\uff1a\n\n. \u4e0d\u5bf9 \u8c8c\u4f3c\u7528GSON\u4e5f\u4e00\u6837\u7684  . ",
    "zui-coding": "JSONArray.toJSONString(),\u6ca1\u6709\u8fd9\u4e2a\u91cd\u8f7d\u65b9\u6cd5 \uff0c\u6211\u7684json\u662f[{\"name\":\"\\uxx\"}],\u7ed3\u679c\u7ed9\u6211\u8f6c\u6210 [{\"name\":\"\\\\uxxx\"}]\uff0c\u6211\u4e0d\u60f3\u8fd9\u6837\u8f6c\uff0c\u7ed9\u4f60\u4ec0\u4e48\u683c\u5f0f\uff0c\u5c31\u8fd4\u56de\u4ec0\u4e48\u683c\u5f0f. ",
    "Andecy": "\u975e\u5e38\u5f00\u5fc3\u80fd\u53ca\u65f6\u6536\u5230\u56de\u590d\uff01\n\u5bf9\u65b0\u7248\u672c\u53ef\u4ee5\u652f\u6301\u8fd9\u79cd\u7528\u6cd5\u8868\u793a\u671f\u5f85(\u00af\ufe43\u00af)\n\u518d\u6b21\u611f\u8c22\u4f60\u7684\u4ed8\u51fa\u548c\u52aa\u529b\uff01\n. \u9ed8\u8ba4\u503c\u7684\u60f3\u6cd5\u975e\u5e38\u597d\uff0c\u9002\u5408\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u91cc\n. \u8fd9\u4e2a\u662f\u4fee\u590d\u4e86\uff0c\u6211\u8fd9\u8fb9\u6d4b\u8bd5\u6b63\u5e38\uff0c\u53ea\u6709\u5728Android\u7248\u672c\u4e0b\u624d\u6709\u95ee\u9898\n. \u8bd5\u8bd5 format = \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\"\n. \u683c\u5f0f\u6a21\u5f0f \u8bf4\u660e \n\u3000d \u6708\u4e2d\u7684\u67d0\u4e00\u5929\u3002\u4e00\u4f4d\u6570\u7684\u65e5\u671f\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000dd \u6708\u4e2d\u7684\u67d0\u4e00\u5929\u3002\u4e00\u4f4d\u6570\u7684\u65e5\u671f\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002 \n\u3000ddd \u5468\u4e2d\u67d0\u5929\u7684\u7f29\u5199\u540d\u79f0\uff0c\u5728 AbbreviatedDayNames \u4e2d\u5b9a\u4e49\u3002 \n\u3000dddd \u5468\u4e2d\u67d0\u5929\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u5728 DayNames \u4e2d\u5b9a\u4e49\u3002 \n\u3000M \u6708\u4efd\u6570\u5b57\u3002\u4e00\u4f4d\u6570\u7684\u6708\u4efd\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000MM \u6708\u4efd\u6570\u5b57\u3002\u4e00\u4f4d\u6570\u7684\u6708\u4efd\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002 \n\u3000MMM \u6708\u4efd\u7684\u7f29\u5199\u540d\u79f0\uff0c\u5728 AbbreviatedMonthNames \u4e2d\u5b9a\u4e49\u3002 \n\u3000MMMM \u6708\u4efd\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u5728 MonthNames \u4e2d\u5b9a\u4e49\u3002 \n\u3000y \u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u3002\u5982\u679c\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u5c0f\u4e8e 10\uff0c\u5219\u663e\u793a\u4e0d\u5177\u6709\u524d\u5bfc\u96f6\u7684\u5e74\u4efd\u3002 \n\u3000yy \u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u3002\u5982\u679c\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u5c0f\u4e8e 10\uff0c\u5219\u663e\u793a\u5177\u6709\u524d\u5bfc\u96f6\u7684\u5e74\u4efd\u3002 \n\u3000yyyy \u5305\u62ec\u7eaa\u5143\u7684\u56db\u4f4d\u6570\u7684\u5e74\u4efd\u3002 \n\u3000gg \u65f6\u671f\u6216\u7eaa\u5143\u3002\u5982\u679c\u8981\u8bbe\u7f6e\u683c\u5f0f\u7684\u65e5\u671f\u4e0d\u5177\u6709\u5173\u8054\u7684\u65f6\u671f\u6216\u7eaa\u5143\u5b57\u7b26\u4e32\uff0c\u5219\u5ffd\u7565\u8be5\u6a21\u5f0f\u3002 \n\u3000h 12 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000hh 12 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000H 24 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000HH 24 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000m \u5206\u949f\u3002\u4e00\u4f4d\u6570\u7684\u5206\u949f\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000mm \u5206\u949f\u3002\u4e00\u4f4d\u6570\u7684\u5206\u949f\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002 \n\u3000s \u79d2\u3002\u4e00\u4f4d\u6570\u7684\u79d2\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002 \n\u3000ss \u79d2\u3002\u4e00\u4f4d\u6570\u7684\u79d2\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002 \n\u3000f \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u4e00\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000ff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u4e24\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000fff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u4e09\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000ffff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u56db\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000fffff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u4e94\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000ffffff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u516d\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000fffffff \u79d2\u7684\u5c0f\u6570\u7cbe\u5ea6\u4e3a\u4e03\u4f4d\u3002\u5176\u4f59\u6570\u5b57\u88ab\u622a\u65ad\u3002 \n\u3000t \u5728 AMDesignator \u6216 PMDesignator \u4e2d\u5b9a\u4e49\u7684 AM/PM \u6307\u793a\u9879\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \n\u3000tt \u5728 AMDesignator \u6216 PMDesignator \u4e2d\u5b9a\u4e49\u7684 AM/PM \u6307\u793a\u9879\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \n\u3000z \u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u4ec5\u8ddf\u5c0f\u65f6\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-8\u201d\u3002 \n\u3000zz \u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u4ec5\u8ddf\u5c0f\u65f6\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-08\u201d\u3002 \n\u3000zzz \u5b8c\u6574\u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u8ddf\u6709\u5c0f\u65f6\u548c\u5206\u949f\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u548c\u5206\u949f\u6570\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-08:00\u201d\u3002 \n\u3000: \u5728 TimeSeparator \u4e2d\u5b9a\u4e49\u7684\u9ed8\u8ba4\u65f6\u95f4\u5206\u9694\u7b26\u3002 \n\u3000/ \u5728 DateSeparator \u4e2d\u5b9a\u4e49\u7684\u9ed8\u8ba4\u65e5\u671f\u5206\u9694\u7b26\u3002 \n\u3000% c \u5176\u4e2d c \u662f\u683c\u5f0f\u6a21\u5f0f\uff08\u5982\u679c\u5355\u72ec\u4f7f\u7528\uff09\u3002\u5982\u679c\u683c\u5f0f\u6a21\u5f0f\u4e0e\u539f\u4e49\u5b57\u7b26\u6216\u5176\u4ed6\u683c\u5f0f\u6a21\u5f0f\u5408\u5e76\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u201c%\u201d\u5b57\u7b26\u3002 \n\u3000\\ c \u5176\u4e2d c \u662f\u4efb\u610f\u5b57\u7b26\u3002\u7167\u539f\u4e49\u663e\u793a\u5b57\u7b26\u3002\u82e5\u8981\u663e\u793a\u53cd\u659c\u6760\u5b57\u7b26\uff0c\u8bf7\u4f7f\u7528\u201c\\\u201d\u3002 \n. @wenshao I think it's helpful to add a boolean attr named \"strict\" to JSONFiled or whaterver like simpleXML\n. it's well,thanks\n. \u6211\u914d\u5408Retrofit2+okHttp3\u4f7f\u7528\u4e86\u5927\u534a\u5e74\u4e86\n. @githublaohu hello,it's not the point about alias I think...\nthe point is my java code like this:\njava\n@JSONFiled (name= \"uId\")\npublic String userId;\nbut the jsonStr has 2 or more different key:\njson\n{\n\"userId\":\"hd123\"\n}\nor\njson\n{\n\"uId\":\"hd124\"\n}\nor\njson\n{\n\"accountId\":\"hd125\"\n}\nso I hope like this:\njava\n@JSONFiled(name = {\"uId\",\"userId\",\"accountId\"})\npublic String userId;. @wenshao thank you very much!. ",
    "FunkyYang": "\u89e3\u51b3\u4e86\u3002\u5bf9\u8c61\u7684\u65f6\u5019\u7528user:{}\n. ",
    "hellotiger": "\u6025\uff0c\u6c42\u5927\u795e\u770b\u770b\n. \u6211\u7528getDoubleValue\uff0cgetString\u90fd\u4f1a\u62a5\u9519\uff0c\u540e\u53f0\u8fd4\u56de\u786e\u5b9e\u662fdouble\u7c7b\u578b\uff1b\n\u4f46\u662f\u7b2c\u4e00\u6b21\u8bf7\u6c42\u89e3\u6790json\u4f1a\u62a5\u9519\uff0c\u63a5\u4e0b\u6765\u518d\u8bf7\u6c42\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\uff0c\n\u73b0\u5728try catch \u62a5\u9519\u518dgetDoubleValue\u4e00\u904d\uff0c\u76ee\u524d\u6211\u53ea\u80fd\u8fd9\u4e48\u89e3\u51b3\u3002\n. ",
    "zhaozepeng": "\u6e29\u5c11\uff0c\u89e3\u51b3\u4e86\u4e48\uff1f\u8fd9\u4e2a\u95ee\u9898\u8c8c\u4f3c\u662f \"android 6.0 new BigInteger(byte[])\u51fd\u6570\u4f1a\u5d29\u6e83\"\u7684\u95ee\u9898\uff0c\u53ef\u5426\u5b9a\u4f4d\u4e00\u4e0b\uff1f\n. ",
    "benniaobuguai": "6.0\u7684\u7cfb\u7edf\uff0c\u5728\u4f7f\u7528BigDecimal\u597d\u591a\u95ee\u9898\u5440\uff0c(new BigDecimal(\"50\").divide(new BigDecimal(\"2\"), 0)).intValue()\uff0c\u5176\u5b83\u7248\u672c\u90fd\u6b63\u5e38\u3002\u3002\u3002\u90fd\u6b63\u5e38\u3002\u3002\u3002\n. ",
    "Leessy": "\u53cd\u5e8f\u5217\u5316\u7684\u95ee\u9898\u5f88\u591a\uff0c\u7279\u522b\u662f\u572824\u7684sdk\u4e0b\n. ",
    "lwlzpn84": "\u8c22\u8c22\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e86\u3002\u53e6\u5916\uff0c\u5bf9\u4e8e\u5305\u542b\u5d4c\u5957\u5bf9\u8c61\u7684VO\uff0c\u662f\u4e0d\u662f\u4e0d\u652f\u6301BeanToArray\u7684\u65b9\u5f0f\uff1f\n. \u6211\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u5d4c\u5957\u7684VO\uff0c\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528BeanToArray\u65b9\u5f0f\u7684\u3002\u9879\u76ee\u4e2d\u7684VO\u4f7f\u7528BeanToArray\u65b9\u5f0f\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5019\u63d0\u793a\u8bed\u6cd5\u9519\u8bef\uff0c\u53ef\u80fd\u662f\u9879\u76ee\u4e2d\u7684VO\u6bd4\u8f83\u590d\u6742\uff0c\u67d0\u4e9b\u5b57\u6bb5\u6709\u95ee\u9898\u3002\n. public class Model {\n  private int id;\n  private String name;\n  private String modelName;\n  private boolean isFlay;\n  private List persons;\n}\npublic class Person{\n  private int id;\n  private String name;\n}\nModel model = new Model();\nmodel.setId(123);\nmodel.setName(null);\nmodel.setModelName(null);\nmodel.setIsFlay(false);\n## model.setPersons(null);\nString str = JSON.toJSONString(model, SerializerFeature.BeanToArray);\nSystem.out.println(str);\nJSON.parseObject(str, Model.class, Feature.SupportArrayToBean);\n\u6d4b\u8bd5\u4e2d\u53d1\u73b0\uff0c\u5f53persons\u5b57\u6bb5\u503c\u4e3anull\u7684\u65f6\u5019\uff0cJSON.parseObject(str, Model.class, Feature.SupportArrayToBean);\u51fa\u63d0\u793a\u8bed\u6cd5\u9519\u8bef\n. \u6211\u7528\u7684\u662f1.2.11\uff0cJDK 8\n. \u8d5e\n. ",
    "goduun": "\u77e5\u9053\u539f\u56e0\u4e86\uff0c\u7236\u7c7b\u4e0d\u662f\u6807\u51c6\u7684javabean\uff0c\u4f7f\u7528\u4e86\u6d41\u5f0fsetter\uff1a\npublic A setA(String a) {\nthis.a = a;\nreturn this;\n}\n. ",
    "summer9989": "@wenshao  \u8bf7\u95ee\u6d41\u5f0fsetter \u57281.2.12+\u7684\u7248\u672c\u5982\u4f55\u4f7f\u7528\u5462\uff1f  \u9ed8\u8ba4\u542f\u7528\u4e86\u5417\uff1f  \u6211\u751a\u81f3\u7528\u4e86\u6700\u65b0\u76841.2.49\u7248\u672c\uff0c\u9ed8\u8ba4\u4f9d\u65e7\u4e0d\u80fd\u81ea\u52a8\u8f6c\u6362\u5462 . ",
    "androidImp": "``` java\npackage com.niuniumei.intelligentalarmclock.Bean;\nimport java.util.List;\n/*\n * Created by niuniumei on 16/5/2.\n /\npublic class Weather {\nprivate String resultcode;\nprivate String reason;\n\n\nprivate ResultBean result;\nprivate int error_code;\n\npublic String getResultcode() {\n    return resultcode;\n}\n\npublic void setResultcode(String resultcode) {\n    this.resultcode = resultcode;\n}\n\npublic String getReason() {\n    return reason;\n}\n\npublic void setReason(String reason) {\n    this.reason = reason;\n}\n\npublic ResultBean getResult() {\n    return result;\n}\n\npublic void setResult(ResultBean result) {\n    this.result = result;\n}\n\npublic int getError_code() {\n    return error_code;\n}\n\npublic void setError_code(int error_code) {\n    this.error_code = error_code;\n}\n\npublic static class ResultBean {\n\n\n    private SkBean sk;\n\n\n    private TodayBean today;\n\n\n    private List<FutureBean> future;\n\n    public SkBean getSk() {\n        return sk;\n    }\n\n    public void setSk(SkBean sk) {\n        this.sk = sk;\n    }\n\n    public TodayBean getToday() {\n        return today;\n    }\n\n    public void setToday(TodayBean today) {\n        this.today = today;\n    }\n\n    public List<FutureBean> getFuture() {\n        return future;\n    }\n\n    public void setFuture(List<FutureBean> future) {\n        this.future = future;\n    }\n\n    public static class SkBean {\n        private String temp;\n        private String wind_direction;\n        private String wind_strength;\n        private String humidity;\n        private String time;\n\n        public String getTemp() {\n            return temp;\n        }\n\n        public void setTemp(String temp) {\n            this.temp = temp;\n        }\n\n        public String getWind_direction() {\n            return wind_direction;\n        }\n\n        public void setWind_direction(String wind_direction) {\n            this.wind_direction = wind_direction;\n        }\n\n        public String getWind_strength() {\n            return wind_strength;\n        }\n\n        public void setWind_strength(String wind_strength) {\n            this.wind_strength = wind_strength;\n        }\n\n        public String getHumidity() {\n            return humidity;\n        }\n\n        public void setHumidity(String humidity) {\n            this.humidity = humidity;\n        }\n\n        public String getTime() {\n            return time;\n        }\n\n        public void setTime(String time) {\n            this.time = time;\n        }\n    }\n\n    public static class TodayBean {\n        private String city;\n        private String date_y;\n        private String week;\n        private String temperature;\n        private String weather;\n        /**\n         * fa : 00\n         * fb : 53\n         */\n\n        private WeatherIdBean weather_id;\n        private String wind;\n        private String dressing_index;\n        private String dressing_advice;\n        private String uv_index;\n        private String comfort_index;\n        private String wash_index;\n        private String travel_index;\n        private String exercise_index;\n        private String drying_index;\n\n        public String getCity() {\n            return city;\n        }\n\n        public void setCity(String city) {\n            this.city = city;\n        }\n\n        public String getDate_y() {\n            return date_y;\n        }\n\n        public void setDate_y(String date_y) {\n            this.date_y = date_y;\n        }\n\n        public String getWeek() {\n            return week;\n        }\n\n        public void setWeek(String week) {\n            this.week = week;\n        }\n\n        public String getTemperature() {\n            return temperature;\n        }\n\n        public void setTemperature(String temperature) {\n            this.temperature = temperature;\n        }\n\n        public String getWeather() {\n            return weather;\n        }\n\n        public void setWeather(String weather) {\n            this.weather = weather;\n        }\n\n        public WeatherIdBean getWeather_id() {\n            return weather_id;\n        }\n\n        public void setWeather_id(WeatherIdBean weather_id) {\n            this.weather_id = weather_id;\n        }\n\n        public String getWind() {\n            return wind;\n        }\n\n        public void setWind(String wind) {\n            this.wind = wind;\n        }\n\n        public String getDressing_index() {\n            return dressing_index;\n        }\n\n        public void setDressing_index(String dressing_index) {\n            this.dressing_index = dressing_index;\n        }\n\n        public String getDressing_advice() {\n            return dressing_advice;\n        }\n\n        public void setDressing_advice(String dressing_advice) {\n            this.dressing_advice = dressing_advice;\n        }\n\n        public String getUv_index() {\n            return uv_index;\n        }\n\n        public void setUv_index(String uv_index) {\n            this.uv_index = uv_index;\n        }\n\n        public String getComfort_index() {\n            return comfort_index;\n        }\n\n        public void setComfort_index(String comfort_index) {\n            this.comfort_index = comfort_index;\n        }\n\n        public String getWash_index() {\n            return wash_index;\n        }\n\n        public void setWash_index(String wash_index) {\n            this.wash_index = wash_index;\n        }\n\n        public String getTravel_index() {\n            return travel_index;\n        }\n\n        public void setTravel_index(String travel_index) {\n            this.travel_index = travel_index;\n        }\n\n        public String getExercise_index() {\n            return exercise_index;\n        }\n\n        public void setExercise_index(String exercise_index) {\n            this.exercise_index = exercise_index;\n        }\n\n        public String getDrying_index() {\n            return drying_index;\n        }\n\n        public void setDrying_index(String drying_index) {\n            this.drying_index = drying_index;\n        }\n\n        public static class WeatherIdBean {\n            private String fa;\n            private String fb;\n\n            public String getFa() {\n                return fa;\n            }\n\n            public void setFa(String fa) {\n                this.fa = fa;\n            }\n\n            public String getFb() {\n                return fb;\n            }\n\n            public void setFb(String fb) {\n                this.fb = fb;\n            }\n        }\n    }\n\n    public static class FutureBean {\n        private String temperature;\n        private String weather;\n        /**\n         * fa : 00\n         * fb : 01\n         */\n\n        private WeatherIdBean weather_id;\n        private String wind;\n        private String week;\n        private String date;\n\n        public String getTemperature() {\n            return temperature;\n        }\n\n        public void setTemperature(String temperature) {\n            this.temperature = temperature;\n        }\n\n        public String getWeather() {\n            return weather;\n        }\n\n        public void setWeather(String weather) {\n            this.weather = weather;\n        }\n\n        public WeatherIdBean getWeather_id() {\n            return weather_id;\n        }\n\n        public void setWeather_id(WeatherIdBean weather_id) {\n            this.weather_id = weather_id;\n        }\n\n        public String getWind() {\n            return wind;\n        }\n\n        public void setWind(String wind) {\n            this.wind = wind;\n        }\n\n        public String getWeek() {\n            return week;\n        }\n\n        public void setWeek(String week) {\n            this.week = week;\n        }\n\n        public String getDate() {\n            return date;\n        }\n\n        public void setDate(String date) {\n            this.date = date;\n        }\n\n        public static class WeatherIdBean {\n            private String fa;\n            private String fb;\n\n            public String getFa() {\n                return fa;\n            }\n\n            public void setFa(String fa) {\n                this.fa = fa;\n            }\n\n            public String getFb() {\n                return fb;\n            }\n\n            public void setFb(String fb) {\n                this.fb = fb;\n            }\n        }\n    }\n}\n\n}\n```\n. {\n    \"resultcode\": \"200\",\n    \"reason\": \"\u67e5\u8be2\u6210\u529f!\",\n    \"result\": {\n        \"sk\": { /\u5f53\u524d\u5b9e\u51b5\u5929\u6c14/\n            \"temp\": \"21\",   /\u5f53\u524d\u6e29\u5ea6/\n            \"wind_direction\": \"\u897f\u98ce\", /\u5f53\u524d\u98ce\u5411/\n            \"wind_strength\": \"2\u7ea7\",    /\u5f53\u524d\u98ce\u529b/\n            \"humidity\": \"4%\",   /\u5f53\u524d\u6e7f\u5ea6/\n            \"time\": \"14:25\" /\u66f4\u65b0\u65f6\u95f4/\n        },\n        \"today\": {\n            \"city\": \"\u5929\u6d25\",\n            \"date_y\": \"2014\u5e7403\u670821\u65e5\",\n            \"week\": \"\u661f\u671f\u4e94\",\n            \"temperature\": \"8\u2103~20\u2103\",    /\u4eca\u65e5\u6e29\u5ea6/\n            \"weather\": \"\u6674\u8f6c\u973e\", /\u4eca\u65e5\u5929\u6c14/\n            \"weather_id\": { /\u5929\u6c14\u552f\u4e00\u6807\u8bc6/\n                \"fa\": \"00\", /\u5929\u6c14\u6807\u8bc600\uff1a\u6674/\n                \"fb\": \"53\"  /\u5929\u6c14\u6807\u8bc653\uff1a\u973e \u5982\u679cfa\u4e0d\u7b49\u4e8efb\uff0c\u8bf4\u660e\u662f\u7ec4\u5408\u5929\u6c14/\n            },\n            \"wind\": \"\u897f\u5357\u98ce\u5fae\u98ce\",\n            \"dressing_index\": \"\u8f83\u51b7\", /\u7a7f\u8863\u6307\u6570/\n            \"dressing_advice\": \"\u5efa\u8bae\u7740\u5927\u8863\u3001\u5462\u5916\u5957\u52a0\u6bdb\u8863\u3001\u536b\u8863\u7b49\u670d\u88c5\u3002\", /\u7a7f\u8863\u5efa\u8bae/\n            \"uv_index\": \"\u4e2d\u7b49\",   /\u7d2b\u5916\u7ebf\u5f3a\u5ea6/\n            \"comfort_index\": \"\",/\u8212\u9002\u5ea6\u6307\u6570/\n            \"wash_index\": \"\u8f83\u9002\u5b9c\",  /\u6d17\u8f66\u6307\u6570/\n            \"travel_index\": \"\u9002\u5b9c\",   /\u65c5\u6e38\u6307\u6570/\n            \"exercise_index\": \"\u8f83\u9002\u5b9c\",  /\u6668\u7ec3\u6307\u6570/\n            \"drying_index\": \"\"/\u5e72\u71e5\u6307\u6570/\n        },\n        \"future\": [ /\u672a\u6765\u51e0\u5929\u5929\u6c14/\n            {\n                \"temperature\": \"28\u2103~36\u2103\",\n                \"weather\": \"\u6674\u8f6c\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"00\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u5357\u98ce3-4\u7ea7\",\n                \"week\": \"\u661f\u671f\u4e00\",\n                \"date\": \"20140804\"\n            },\n            {\n                \"temperature\": \"28\u2103~36\u2103\",\n                \"weather\": \"\u6674\u8f6c\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"00\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u4e1c\u5357\u98ce3-4\u7ea7\",\n                \"week\": \"\u661f\u671f\u4e8c\",\n                \"date\": \"20140805\"\n            },\n            {\n                \"temperature\": \"27\u2103~35\u2103\",\n                \"weather\": \"\u6674\u8f6c\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"00\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u4e1c\u5357\u98ce3-4\u7ea7\",\n                \"week\": \"\u661f\u671f\u4e09\",\n                \"date\": \"20140806\"\n            },\n            {\n                \"temperature\": \"27\u2103~34\u2103\",\n                \"weather\": \"\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"01\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u4e1c\u5357\u98ce3-4\u7ea7\",\n                \"week\": \"\u661f\u671f\u56db\",\n                \"date\": \"20140807\"\n            },\n            {\n                \"temperature\": \"27\u2103~33\u2103\",\n                \"weather\": \"\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"01\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u4e1c\u5317\u98ce4-5\u7ea7\",\n                \"week\": \"\u661f\u671f\u4e94\",\n                \"date\": \"20140808\"\n            },\n            {\n                \"temperature\": \"26\u2103~33\u2103\",\n                \"weather\": \"\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"01\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u5317\u98ce4-5\u7ea7\",\n                \"week\": \"\u661f\u671f\u516d\",\n                \"date\": \"20140809\"\n            },\n            {\n                \"temperature\": \"26\u2103~33\u2103\",\n                \"weather\": \"\u591a\u4e91\",\n                \"weather_id\": {\n                    \"fa\": \"01\",\n                    \"fb\": \"01\"\n                },\n                \"wind\": \"\u5317\u98ce4-5\u7ea7\",\n                \"week\": \"\u661f\u671f\u65e5\",\n                \"date\": \"20140810\"\n            }\n        ]\n    },\n    \"error_code\": 0\n}\n. \u8fd9\u79cd\u548c\u7f51\u7edc\u7684\u73af\u5883\u6709\u5173\u7cfb\u5417,\u6211\u6d4b\u8bd5\u7684\u65f6\u5019\u662f\u4f7f\u7528WiFi,\u4f46\u8fd8\u662f\u4e0d\u53ef\u4ee5.\n. \u53ef\u662f\u6211\u8bd5\u4e86WiFi\u548c4G\u90fd\u6709\u95ee\u9898\u554a..\n. \u8fd9\u6bb5\u5185\u5bb9\u4e0d\u662f\u5b8c\u6574\u7684\u5417?\u4e3a\u4ec0\u4e48\u6e29\u5c11\u4f1a\u8bf4\u662f\u88ab\u622a\u65ad\u4e86..\n. \u8fd9\u6bb5\u5185\u5bb9\u662f\u4ece\u7f51\u7edc\u8bf7\u6c42\u4e2d\u83b7\u5f97\u7684.\u4e0d\u662f\u6d4b\u8bd5\u6570\u636e.\n. {\n\"resultcode\":\"200\",\n\"reason\":\"successed!\",\n\"result\":{\n\"sk\":{\n\"temp\":\"23\",\n\"wind_direction\":\"\u4e1c\u98ce\",\n\"wind_strength\":\"2\u7ea7\",\n\"humidity\":\"95%\",\n\"time\":\"23:50\"\n},\n\"today\":{\n\"temperature\":\"22\u2103~27\u2103\",\n\"weather\":\"\u9634\u8f6c\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"02\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u4e00\",\n\"city\":\"\u53a6\u95e8\",\n\"date_y\":\"2016\u5e7405\u670823\u65e5\",\n\"dressing_index\":\"\u70ed\",\n\"dressing_advice\":\"\u5929\u6c14\u70ed\uff0c\u5efa\u8bae\u7740\u77ed\u88d9\u3001\u77ed\u88e4\u3001\u77ed\u8584\u5916\u5957\u3001T\u6064\u7b49\u590f\u5b63\u670d\u88c5\u3002\",\n\"uv_index\":\"\u5f31\",\n\"comfort_index\":\"\",\n\"wash_index\":\"\u8f83\u9002\u5b9c\",\n\"travel_index\":\"\u8f83\u9002\u5b9c\",\n\"exercise_index\":\"\u8f83\u9002\u5b9c\",\n\"drying_index\":\"\"\n},\n\"future\":{\n\"day_20160523\":{\n\"temperature\":\"22\u2103~27\u2103\",\n\"weather\":\"\u9634\u8f6c\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"02\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u4e00\",\n\"date\":\"20160523\"\n},\n\"day_20160524\":{\n\"temperature\":\"22\u2103~29\u2103\",\n\"weather\":\"\u591a\u4e91\u8f6c\u9634\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"02\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u4e8c\",\n\"date\":\"20160524\"\n},\n\"day_20160525\":{\n\"temperature\":\"23\u2103~29\u2103\",\n\"weather\":\"\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u4e09\",\n\"date\":\"20160525\"\n},\n\"day_20160526\":{\n\"temperature\":\"23\u2103~30\u2103\",\n\"weather\":\"\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u56db\",\n\"date\":\"20160526\"\n},\n\"day_20160527\":{\n\"temperature\":\"24\u2103~31\u2103\",\n\"weather\":\"\u591a\u4e91\u8f6c\u9634\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"02\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u4e94\",\n\"date\":\"20160527\"\n},\n\"day_20160528\":{\n\"temperature\":\"23\u2103~29\u2103\",\n\"weather\":\"\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u516d\",\n\"date\":\"20160528\"\n},\n\"day_20160529\":{\n\"temperature\":\"23\u2103~30\u2103\",\n\"weather\":\"\u591a\u4e91\",\n\"weather_id\":{\n\"fa\":\"01\",\n\"fb\":\"01\"\n},\n\"wind\":\"\u5fae\u98ce\",\n\"week\":\"\u661f\u671f\u65e5\",\n\"date\":\"20160529\"\n}\n}\n},\n\"error_code\":0\n}\n. package com.niuniumei.intelligentalarmclock.Bean;\nimport java.util.List;\n/*\n- Created by niuniumei on 16/5/2.\n  /\n  public class Weather {\nprivate String resultcode;\n  private String reason;\nprivate ResultBean result;\n  private int error_code;\npublic String getResultcode() {\n      return resultcode;\n  }\npublic void setResultcode(String resultcode) {\n      this.resultcode = resultcode;\n  }\npublic String getReason() {\n      return reason;\n  }\npublic void setReason(String reason) {\n      this.reason = reason;\n  }\npublic ResultBean getResult() {\n      return result;\n  }\npublic void setResult(ResultBean result) {\n      this.result = result;\n  }\npublic int getError_code() {\n      return error_code;\n  }\npublic void setError_code(int error_code) {\n      this.error_code = error_code;\n  }\npublic static class ResultBean {\n```\n  private SkBean sk;\nprivate TodayBean today;\nprivate List future;\npublic SkBean getSk() {\n      return sk;\n  }\npublic void setSk(SkBean sk) {\n      this.sk = sk;\n  }\npublic TodayBean getToday() {\n      return today;\n  }\npublic void setToday(TodayBean today) {\n      this.today = today;\n  }\npublic List getFuture() {\n      return future;\n  }\npublic void setFuture(List future) {\n      this.future = future;\n  }\npublic static class SkBean {\n      private String temp;\n      private String wind_direction;\n      private String wind_strength;\n      private String humidity;\n      private String time;\n  public String getTemp() {\n      return temp;\n  }\n\n  public void setTemp(String temp) {\n      this.temp = temp;\n  }\n\n  public String getWind_direction() {\n      return wind_direction;\n  }\n\n  public void setWind_direction(String wind_direction) {\n      this.wind_direction = wind_direction;\n  }\n\n  public String getWind_strength() {\n      return wind_strength;\n  }\n\n  public void setWind_strength(String wind_strength) {\n      this.wind_strength = wind_strength;\n  }\n\n  public String getHumidity() {\n      return humidity;\n  }\n\n  public void setHumidity(String humidity) {\n      this.humidity = humidity;\n  }\n\n  public String getTime() {\n      return time;\n  }\n\n  public void setTime(String time) {\n      this.time = time;\n  }\n\n}\npublic static class TodayBean {\n      private String city;\n      private String date_y;\n      private String week;\n      private String temperature;\n      private String weather;\n      /*\n       * fa : 00\n       * fb : 53\n       /\n  private WeatherIdBean weather_id;\n  private String wind;\n  private String dressing_index;\n  private String dressing_advice;\n  private String uv_index;\n  private String comfort_index;\n  private String wash_index;\n  private String travel_index;\n  private String exercise_index;\n  private String drying_index;\n\n  public String getCity() {\n      return city;\n  }\n\n  public void setCity(String city) {\n      this.city = city;\n  }\n\n  public String getDate_y() {\n      return date_y;\n  }\n\n  public void setDate_y(String date_y) {\n      this.date_y = date_y;\n  }\n\n  public String getWeek() {\n      return week;\n  }\n\n  public void setWeek(String week) {\n      this.week = week;\n  }\n\n  public String getTemperature() {\n      return temperature;\n  }\n\n  public void setTemperature(String temperature) {\n      this.temperature = temperature;\n  }\n\n  public String getWeather() {\n      return weather;\n  }\n\n  public void setWeather(String weather) {\n      this.weather = weather;\n  }\n\n  public WeatherIdBean getWeather_id() {\n      return weather_id;\n  }\n\n  public void setWeather_id(WeatherIdBean weather_id) {\n      this.weather_id = weather_id;\n  }\n\n  public String getWind() {\n      return wind;\n  }\n\n  public void setWind(String wind) {\n      this.wind = wind;\n  }\n\n  public String getDressing_index() {\n      return dressing_index;\n  }\n\n  public void setDressing_index(String dressing_index) {\n      this.dressing_index = dressing_index;\n  }\n\n  public String getDressing_advice() {\n      return dressing_advice;\n  }\n\n  public void setDressing_advice(String dressing_advice) {\n      this.dressing_advice = dressing_advice;\n  }\n\n  public String getUv_index() {\n      return uv_index;\n  }\n\n  public void setUv_index(String uv_index) {\n      this.uv_index = uv_index;\n  }\n\n  public String getComfort_index() {\n      return comfort_index;\n  }\n\n  public void setComfort_index(String comfort_index) {\n      this.comfort_index = comfort_index;\n  }\n\n  public String getWash_index() {\n      return wash_index;\n  }\n\n  public void setWash_index(String wash_index) {\n      this.wash_index = wash_index;\n  }\n\n  public String getTravel_index() {\n      return travel_index;\n  }\n\n  public void setTravel_index(String travel_index) {\n      this.travel_index = travel_index;\n  }\n\n  public String getExercise_index() {\n      return exercise_index;\n  }\n\n  public void setExercise_index(String exercise_index) {\n      this.exercise_index = exercise_index;\n  }\n\n  public String getDrying_index() {\n      return drying_index;\n  }\n\n  public void setDrying_index(String drying_index) {\n      this.drying_index = drying_index;\n  }\n\n  public static class WeatherIdBean {\n      private String fa;\n      private String fb;\n\n      public String getFa() {\n          return fa;\n      }\n\n      public void setFa(String fa) {\n          this.fa = fa;\n      }\n\n      public String getFb() {\n          return fb;\n      }\n\n      public void setFb(String fb) {\n          this.fb = fb;\n      }\n  }\n\n}\npublic static class FutureBean {\n      private String temperature;\n      private String weather;\n      /*\n       * fa : 00\n       * fb : 01\n       /\n  private WeatherIdBean weather_id;\n  private String wind;\n  private String week;\n  private String date;\n\n  public String getTemperature() {\n      return temperature;\n  }\n\n  public void setTemperature(String temperature) {\n      this.temperature = temperature;\n  }\n\n  public String getWeather() {\n      return weather;\n  }\n\n  public void setWeather(String weather) {\n      this.weather = weather;\n  }\n\n  public WeatherIdBean getWeather_id() {\n      return weather_id;\n  }\n\n  public void setWeather_id(WeatherIdBean weather_id) {\n      this.weather_id = weather_id;\n  }\n\n  public String getWind() {\n      return wind;\n  }\n\n  public void setWind(String wind) {\n      this.wind = wind;\n  }\n\n  public String getWeek() {\n      return week;\n  }\n\n  public void setWeek(String week) {\n      this.week = week;\n  }\n\n  public String getDate() {\n      return date;\n  }\n\n  public void setDate(String date) {\n      this.date = date;\n  }\n\n  public static class WeatherIdBean {\n      private String fa;\n      private String fb;\n\n      public String getFa() {\n          return fa;\n      }\n\n      public void setFa(String fa) {\n          this.fa = fa;\n      }\n\n      public String getFb() {\n          return fb;\n      }\n\n      public void setFb(String fb) {\n          this.fb = fb;\n      }\n  }\n\n}\n  ```\n}\n  }\n. \u6211\u4e4b\u524d\u63d0\u8fc7\u8fd9\u4e2a\u95ee\u9898,\u4e4b\u524d\u6e29\u5c11\u60a8\u7ed9\u51fa\u7684\u610f\u89c1\u662f\u7f51\u7edc\u4e0d\u597d\u5bfc\u81f4\u5185\u5bb9\u88ab\u622a\u65ad.\u4f46\u662f\u6211\u901a\u8fc74G/WIFI\u6d4b\u8bd5\u8fc7\u591a\u6b21,\u90fd\u4f1a\u62a5\u9519,\u8fd8\u671b\u6e29\u5c11\u80fd\u591f\u91cd\u65b0\u770b\u4e00\u4e0b,\u8c22\u8c22.\n. ",
    "my29": "\u8fd9\u79cd\u60c5\u51b5\uff0c\u662f\u4f60jason \u6570\u636e\u51fa\u73b0\u95ee\u9898\u3001\u8ddffastJson\u6ca1\u6709\u591a\u5927\u7684\u5173\u7cfb\uff0c\u521a\u624d\u6211\u4e5f\u662f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\n com.alibaba.fastjson.JSONException: syntax error, expect {, actual error, pos 6\n\u662f\u6211\u628a\u73af\u5883\u641e\u9519\u4e86\uff0c\u4e00\u4e2a\u662f\u516c\u53f8\u5185\u7f51\uff0c\u4e00\u4e2a\u662f\u5916\u7f51\u6d4b\u8bd5\u73af\u5883\uff0c\u7136\u540e\u75284g\u8bbf\u95ee\uff0c\u7ed3\u679c\u62a5\u9519\u4e86\u3002\u3002\u3002\n. \u5bf9\u7684\uff0c\u4f60\u7528\u5728\u516c\u53f8\u7528wifi\uff0c\u8fde\u5f97\u662f\u516c\u53f8\u7684\u5185\u7f51\u3001\u80af\u5b9a\u642d\u914d\u4e86\u670d\u52a1\u5668\u3001\u800c\u4f60\u75283G/4G \u600e\u80fd\u8bbf\u95ee\u516c\u53f8\u5185\u7f51\u7684\u670d\u52a1\u5668\uff1f\n. ",
    "zhanglijun1217": "\u770b\u4e86\u8bc4\u8bba \u8fd9\u4e2a\u8fd8\u548c\u7f51\u7edc\u6709\u5173\uff1f. ",
    "CharonS": "@jacking124 \ncom.alibaba:fastjson:1.2.11\n. ",
    "sequarius": "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898 1.2.8\u53ef\u4ee5\u5e8f\u5217\u5316org.springframework.data.domain.Page\uff0c\u4f46\u662f1.2.11\u8fd4\u56de\u7684json\u4e3anull~ \n. ",
    "WaTer9527": "\u597d\u7684\n. ",
    "comenglish": "i have the same problem.\nso, i have to use array[], so bad!\n. @VictorZeng \norg.springframework:spring-web:jar:4.2.5.RELEASE\norg.springframework:spring-webmvc:jar:4.2.5.RELEASE\ncom.alibaba:fastjson:jar:1.2.12\n. how can i use it below the junit 4 ?\n. @VictorZeng  how can i use it with the junit 4 ? \n. @VictorZeng   i know how can i do mock test use junit.\nbut, post Object json can't convert to JAVA Object.\nI had to post string and then use fastjson convert string to java Object.\nrun with SpringJUnit4ClassRunner.class do not use configed fastjson converter. \n. i mean this :\n@JSONField(name = \"area_code\")\n    private Integer areaCode;\nthe field of areaCode never be setted value.\n@VictorZeng \n. so i had to submit string data to my controller ,and then convert is by JSON.parseArray()\n\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e5f\u4ec5\u4ec5\u662f\u5728\u6211\u4f7f\u7528Junit  MockMvc \u7684\u65f6\u5019\u51fa\u73b0\u3002\n\u6b63\u5e38\u4f7f\u7528Spring MVC \u7684\u65f6\u5019\uff0c\u7531\u4e8e\u516c\u53f8\u5185\u90e8\u7684\u56e2\u961f\u5176\u4ed6\u6210\u5458\u5c01\u88c5\u7684\u65b9\u6cd5\u6709\u95ee\u9898\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u76f4\u63a5\u4f7f\u7528parseObject\u53bb\u5904\u7406\u7684\u3002\u80fd\u4e0d\u80fd\u5728parseObject\u7684\u65b9\u6cd5\u5185\uff0c\u81ea\u5df1\u53bb\u5224\u65ad\u662f\u6570\u7ec4\u8fd8\u662f\u5bf9\u8c61\uff1f\n\u4f7f\u7528JAVA\u7684List\u4e0d\u6210\u529f\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u662f\u8303\u578b\u9020\u6210\u7684\uff0c\u8303\u578b\u76f4\u63a5\u628a\u5b50\u7c7b\u7684\u7c7b\u578b\u4fe1\u606f\u4e22\u4e86\uff0cSO, Must use array..\nsorry, i use spring from version 1.2.6, has ten years!\nuse spring MVC 7 years..\n. ",
    "lvhao": "java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to T ...\nspring4.2.5 + fastjson 1.2.13\n\u5e94\u8be5\u662f\u9700\u8981\u5b9e\u73b0 spring3.2\u540e\u6dfb\u52a0\u7684 GenericHttpMessageConverter\u63a5\u53e3 \u7528\u6765\u652f\u6301\u6cdb\u578b\u7ed1\u5b9a\n@VictorZeng \n. @comenglish \nyou mean this?\nList> listMap = JSON.parseObject(jsonString, new TypeReference>>(){});\n. ",
    "hzwei206": "\u7ecf\u6d4b\u8bd5\uff0cgson\u3001Jackson\u90fd\u80fd\u53cd\u5e8f\u5217\u5316\u6210\u529f\n. ",
    "qule510": "\u6211\u4f7f\u7528\u7684\u662f1.2.8\u7248\u672c\u3002\n. \u5df2\u7ecf\u89e3\u51b3 \uff0c\u5927\u6982\u6a21\u677f\u662f\u8fd9\u6837\u7684\u3002\nJSONReader reader = new JSONReader(new FileReader(\"/tmp/huge.json\"));\n  reader.startObject();\n  while(reader.hasNext()) {\n        String key = reader.readString();\n        if(\"info\".equals(key)){\n                       reader.startArray();\n                       while(reader.hasNext()) {\n                               VO vo = reader.readObject(VO.class);\n                        }\n                        reader.endArray();\n          }\n  }\n  reader.endObject();\n  reader.close();\n. @foxty  \u6211\u662f\u4f7f\u7528\u6570\u636e\u6d41 \u8bfb\u53d6\u7684\uff0c\u5982\u679c\u662f\u5b9e\u4f53\u53ea\u67093\u4e2a\u5b57\u6bb5\uff0c\u8bfb\u53d610W\u6570\u91cf\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u4f46\u662f\u5b57\u6bb5\u591a\u4e86\uff0c\u5c31\u53ea\u80fd\u8bfb\u53d6\u4e09\u56db\u4e07\u5c31\u4f1a\u5185\u5b58\u79fb\u9664\u4e86\u3002\n. \u4e3b\u8981\u4ee3\u7801\u5982\u4e0b\uff1a\nJSONReader reader = new JSONReader(new FileReader( \"huge.json\"));\n//\u5982\u679c\u662f\u4e0b\u9762\u4f20\u9012class\u5c31\u4f1a\u89e3\u6790\u8d85\u5927json\u65f6\u5019\u89e3\u6790\u4e00\u534a\u5185\u5b58\u7206\u6389\u3002\nModel m= reader.readObject(Model.class);\n//\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u4f20\u9012\u5bf9\u8c61\u7684\u89e3\u6790\u65b9\u5f0f\u5c31\u4e0d\u4f1a\nModel m = new Model();\nreader.readObject(m);\n\u53ef\u4ee5\u8bf4\u8bf4\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5417\uff1f\n. @HVking \u56e0\u4e3a\u5185\u5b58\u5b58\u4e0d\u4e86\uff0c\u8fd9\u4e48\u5927\u7684\u6570\u636e\u5bf9\u8c61\u5217\u8868\uff0c\u6bd4\u5982\uff0c\u6211\u7684\u5e94\u7528\u91cc\u9762\u662f\u51e0\u5341\u4e07\u7684\u5bf9\u8c61\u3002\u76ee\u7684\u662f\u8981\u89e3\u6790\u4fdd\u5b58\u5165\u5e93\u3002\n\u6700\u540e\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u8fb9\u89e3\u6790\u8fb9\u4fdd\u5b58\u3002\n//\u8bb0\u5f55\u89e3\u6790\u7684\u603b\u6570\u91cf\nint count = 0;\n//\u6839\u636ekey\uff0c\u521b\u5efa\u4e0d\u540c\u7684\u5bf9\u8c61\nBaseDataType type = getBaseDataType(key);\nreader.startArray();\nwhile (reader.hasNext()) {\n    BaseModel m = type.getModel();\n    reader.readObject(m);\n    list.add(m);\n    count++;\n    if (count % 2000 == 0) {\n        //\u6bcf\u4e24\u5343\u4fdd\u5b58\u4e00\u6b21\n        savaData(list);\n        list.clear();\n    }\n}\n//2000\u7684\u4f59\u6570\u4fdd\u5b58\u4e00\u6b21\nsavaData(list);\nlist.clear();\nreader.endArray();. ",
    "charlessoft": "\u6211\u4e5f\u9047\u5230\u7c7b\u4f3c\u95ee\u9898.\u6211\u662f\u7528idea maven\u6253\u5305jar, \u540e\u9762\u7528\u5230fastjson\u624d\u52a0\u4e0a,\u4f46\u662fmaven\u5de5\u7a0b\u6ca1\u6709\u81ea\u52a8\u628afastjson\u6dfb\u52a0\u5230classpath\u8def\u5f84,\u9700\u8981\u624b\u52a8\u52a0\u5165\u5c31\u53ef\u4ee5\u4e86,\u6216\u8005\u91cd\u65b0\u5efa\u4e00\u4e2ajar\u5c31\u4f1a\u628a\u5f53\u524d\u4f9d\u8d56\u52a0\u5230classpath\u91cc\u5934,\n. ",
    "calfzhou": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u6709\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u4e48\u3002\u73b0\u5728\u53ea\u80fd\u624b\u52a8\u628afastjson\u7684jar\u5305\u62f7\u8fc7\u6765\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u52a0\u5230classpath\u91cc\u3002\n. ",
    "CocaCola183": "@charlessoft \u8fd9\u4e2a\u65b9\u6cd5\u6709\u6548\n. ",
    "DonaldY": "\u4f1a\u4e0d\u4f1a\u662fpom.xml\u91cc\uff0c \u914d\u7f6e\u7740provided\uff0c\u8fd9\u4e2a\u5220\u53bb\u4e5f\u53ef\u3002. ",
    "nirack": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898,\u770b\u6765\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u53d7\u5230\u5173\u6ce8,\u5efa\u8bae\u697c\u4e3b\u8fd8\u662f\u518d\u5b9a\u4e49\u4e00\u4e2abean,\u4e0d\u8981\u76f4\u63a5\u7528map\u597d\u4e86.\u6211\u5c31\u8fd9\u4e48\u505a\u7684.\n. ",
    "GYiyouth": "\u81f3\u4eca\u4ecd\u672a\u89e3\u51b3\u54ce\u597d\u50cf. ",
    "kirkvicent": "\u8c8c\u4f3c\u6ca1\u6709\u5b9e\u73b0\u5427\uff1f\n\u6211\u7528bigdecimal 0.0000000703 \u4f9d\u65e7\u8f6c\u5316\u6210\u4e86 7.03e-8\n\u540e\u7eed\u66f4\u65b0\n\u53c2\u89c1\nhttps://github.com/alibaba/fastjson/wiki/ObjectSerializer_cn\uff1b\n\u53ef\u4ee5\u5728\u5e94\u7528\u542f\u52a8\u65f6\u5f80fastjson\u52a0\u4e0a\u9488\u5bf9bigdecimal\u7684\u5904\u7406\n. ",
    "aircjm": "\u5b57\u7b26\u4e32\u8f6c\u6362\u6210JSONObject\u65f6\uff0c\u5bf9key\u4f1a\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u4f55\u907f\u514d\u6392\u5e8f\uff1f\uff1f\n. \u4f7f\u7528\u7248\u672c\u4e3a1.1.41\u7684fastJson \uff0c\u7531\u4e8e\u4e1a\u52a1\u8981\u6c42\u53c2\u6570\u683c\u5f0f\u4e0d\u76f8\u540c\uff0c\u53ea\u80fd\u8f6c\u5316\u6210jsonObject\uff0c\u4e0d\u80fd\u8f6c\u6362\u6210Bean\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u65e0\u6cd5\u8fdb\u884c\u5bf9\u5c5e\u6027\u624b\u52a8\u6392\u5e8f\u3002\njava\n        String jsonParams = \"{\\\"name\\\":\\\"Tom\\\",\\\"age\\\":20,\\\"height\\\":180.5,\\\"gender\\\":\\\"Male\\\",\\\"weight\\\":80.5}\";\n        JSONObject jsonObject = JSON.parseObject(jsonParams);\n        System.out.println(jsonObject.toJSONString());\n        // \u8f93\u51fa\u7ed3\u679c\u4e3a{\"age\":20,\"gender\":\"Male\",\"height\":180.5,\"name\":\"Tom\",\"weight\":80.5}\n        // \u8f93\u51fa\u7ed3\u679c\u6309\u7167\u952e\u7684\u987a\u5e8f\u8fdb\u884c\u4e86\u6392\u5e8f\u64cd\u4f5c\uff0c\u5982\u4f55\u8d8a\u8fc7\u6392\u5e8f\uff0c\u8ba9jsonObject\u8fd8\u662f\u6309\u7167{\"name\":\"Tom\",\"age\":20,\"height\":180.5,\"gender\":\"Male\",\"weight\":80.5}\u8be5\u987a\u5e8f\u8f93\u51fa\n\u8c22\u8c22\n. @githublaohu \nString jsonParams = \"{\\\"name\\\":\\\"Tom\\\",\\\"age\\\":20,\\\"height\\\":180.5,\\\"gender\\\":\\\"Male\\\",\\\"weight\\\":80.5}\";\n    JSONObject jsonObject = JSON.parseObject(jsonParams);\n    System.out.println(jsonObject.toJSONString());\n    // \u8f93\u51fa\u7ed3\u679c\u4e3a{\"age\":20,\"gender\":\"Male\",\"height\":180.5,\"name\":\"Tom\",\"weight\":80.5}\n    // \u6211\u60f3\u8981\u7684\u8f93\u51fa\u7ed3\u679c\u6309\u7167\u952e\u7684\u987a\u5e8f\u8fdb\u884c\u4e86\u6392\u5e8f\u64cd\u4f5c\uff0c\u5982\u4f55\u5ffd\u7565\u6389\u9ed8\u8ba4\u7684\u7f3a\u7701field\u6392\u5e8f\uff0c\u8ba9jsonObject\u8fd8\u662f\u6309\u7167{\"name\":\"Tom\",\"age\":20,\"height\":180.5,\"gender\":\"Male\",\"weight\":80.5}\u8be5\u987a\u5e8f\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u4e0a\u9762\u7684\u7ed3\u679c\n\u9700\u8981\u63d0\u9ad8\u5230\u54ea\u4e2a\u7248\u672c\uff1f\uff1f 1.2.12\u6d4b\u8bd5\u4e0d\u884c\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a{\"weight\":80.5,\"height\":180.5,\"age\":20,\"name\":\"Tom\",\"gender\":\"Male\"}\uff0c\u5e94\u8be5\u662f\u6309\u7167hash\u7b97\u6cd5\u6392\u5e8f\u7684\n. \u6ca1\u6709\u7ed3\u679c\u4e86\u5417\uff1f\uff1f\n. \u975e\u5e38\u611f\u8c22\uff0c\u6211\u5728\u4f7f\u7528\u76841.1.41\u4e0d\u652f\u6301JSON.parseObject(\"...\", Feature.OrderedField);\uff0c\u5df2\u7ecf\u5347\u7ea7\u4e3a\u6700\u65b0\u7248\u672c1.2.12\u4e86\n. ",
    "ianate": "Here i provide a easy way to handle it.\nSee https://github.com/ianate/fastjson/blob/directInner/src/main/java/com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer.java\nit's not perfect and you can improve it on your own.\nBut in my opinion, now that you define the class as an inner class, you should use it as an inner.\n\u6211\u89c9\u5f97\u65e2\u7136\u4f60\u8981\u5c06\u5176\u5b9a\u4e49\u4e3a\u5185\u90e8\u7c7b\uff0c\u90a3\u4f60\u5e94\u8be5\u53ea\u628a\u5b83\u4f5c\u4e3a\u5185\u90e8\u7c7b\u6765\u4f7f\u7528\n. ",
    "jameszhangmin": "\u8fd9\u4e2a\u5185\u90e8\u7c7b\u7528static\u7684\u4fee\u9970\n. ",
    "TheNT87": "does it work with\nA a = new A();\n// Have seen this syntax\n// You need an Instance to create the inner Type\nA.B b = a.new B();\nJSONObject.parseObject(\"{}\",a.B.class);. ",
    "chenchongyu": "\u662f\u7684\uff01\u6211\u5df2\u7ecf\u5728\u6df7\u6dc6\u914d\u7f6e\u6587\u4ef6\u91cc\u6dfb\u52a0\u4e86\u5b9e\u4f53\u7c7b\u7684keep\uff0c\u4f46\u662f\u8fd8\u662f\u4e0d\u597d\u4f7f\uff01\u540e\u6765\u6211\u6539\u7528\u4e86fastjson-android\u7248\u5c31\u53ef\u4ee5\u4e86\uff01\n. ",
    "foxty": "\u5bf9\u4e8e\u5927json\u6587\u4ef6\u7684\u89e3\u6790\uff0c\u5efa\u8bae\u4f7f\u7528Streaming API\u3002\u6216\u8005\u589e\u5927\u4f60JVM\u7684heap\u5927\u5c0f\u3002\n. \u7b2c\u4e8c\u6bb5\u4ee3\u7801\u6709\u5b8c\u6574\u70b9\u7684\u5417\uff1fvo\u662f\u4ec0\u4e48\uff1f\u4f60read\u5b8c\u4e4b\u540e\u505a\u4e86\u4ec0\u4e48\uff1f \u5efa\u8bae\u53ef\u4ee5\u505a\u4e2a\u5185\u5b58\u5206\u6790\uff0c\u770b\u770b\u662f\u54ea\u91cc\u5360\u7528\u7684\u5185\u5b58\u6bd4\u8f83\u591a\u3002\n. ",
    "HVking": "\u9ebb\u70e6\u95ee\u4e0b\uff0c\u6700\u7ec8\u662f\u600e\u4e48\u89e3\u51b3\u7684\u5185\u5b58\u6ea2\u51fa\u5462 @qule510 . ",
    "kun1988": "@githublaohu \u6709\u4e00\u4e2anameFilter  \u4f46\u8fd9\u4e2a\u662f\u5e8f\u5217\u5316\u7684\u65f6\u5019\u7528\u7684  \u4e0d\u662f\u53cd\u5e8f\u5217\u5316\u7528\u7684\uff0c  \u6211\u9700\u8981\u7684\u662f\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u7684\u9a7c\u5cf0\u5904\u7406\n. @wenshao \u8001\u5927\uff0c\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5b57\u6bb5\u540d\u4e0b\u5212\u7ebf\u8f6c\u9a7c\u5cf0\u547d\u540d\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u7684JSONField?\u80fd\u56de\u7b54\u4e00\u4e0b\u5417\uff1f\u8c22\u8c22\n. @wenshao \u521a\u521a\u53c8\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8fd8\u662f\u4e0d\u884c\uff0c\u6211\u7528\u7684\u662fandroid\u7248\u672c\u7684\n. @wenshao \u5b89\u5353\u7248\u672c\u662f1.1.52.android\n. @wenshao 1.1.53\u8fd9\u4e2a\u7248\u672c\u8fd8\u662f\u6ca1\u6709\u89e3\u51b3\u53cd\u5e8f\u5217\u5316\u4e0b\u5212\u7ebf\u8f6c\u9a7c\u5cf0\u7684\u95ee\u9898\n. ",
    "yyfrankyy": "\u5982\u679c\u60f3\u8981\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u600e\u4e48\u505a\u6bd4\u8f83\u597d\uff1f\uff08\u5229\u7528\u5de5\u5382\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684 setter \u548c getter \u505a\u4e00\u4e9b\u6269\u5c55\uff09\u3002\n\u5982\u4e0b\u4ee3\u7801\uff0c@JSONCreator \u662f\u8d70\u4e0d\u8fdb\u53bb\u7684\u3002\npublic class A {\n  private int a;\n  public void setA(int a) {this.a = a;}\n  public int getA() {return a;}\n  @JSONCreator\n  public static A create(int a) {\n    A a1 = createFromSomeFactory(); // \u6bd4\u5982\u5bf9\u8c61\u6c60\uff0c\u6216\u8005\u901a\u8fc7\u5de5\u5382\u8fd4\u56de\u7684\u4e1c\u897f\u4fee\u6539\u4e00\u4e0b getter \u548c setter \u7684\u903b\u8f91\n    a1.setA(a);\n    return a1;\n  }\n}\n\u770b\u4e86\u4e0b\u5b9e\u73b0 https://github.com/alibaba/fastjson/blob/1.1.52.android/src/main/java/com/alibaba/fastjson/parser/JavaBeanInfo.java#L194 \uff0c\u4f3c\u4e4e\u662f\u4e00\u5b9a\u9700\u8981\u51c6\u5907\u4e00\u4e2a\u975e\u9ed8\u8ba4\u6784\u9020\u5668\uff0c\u7136\u540e\u624d\u6709\u53ef\u80fd\u8d70\u5230\u8fd9\u4e2a @JSONCreator \u6807\u6ce8\u7684\u65b9\u6cd5\u3002\n. ",
    "Vanyoo": "\u540c\u95ee\uff0c\u8fd8\u6709\uff0c\u5f53\u4f20\u5165\u4e00\u4e2a\u7a7ajson\u5bf9\u8c61\uff0c\u770b\u4ee3\u7801\u76f4\u63a5\u8fd4\u56denull\uff0c\u6ca1\u6709\u8fdb\u5165JSONCreator\u6ce8\u89e3\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6ca1\u6cd5\u6821\u9a8c\u3002. ",
    "Aurorai": "@githublaohu  \u8fd9\u4e2a\u6211\u77e5\u9053\u7684\uff0c  fastjson\u8fd9\u91cc\u65b9\u4fbf\u6269\u5c55\u6539\u53d8\u7c7b\u578b\u5417\uff1f\u6211\u4eec\u8fd9\u91cc\u63a5\u53e3\u7edf\u4e00\u6389\u4e86\u3002\n. \u597d\u7684\uff0c thks\n. @wenshao. \u76ee\u6d4b\u548c\u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u6837\u7684 #125. \u7ecf\u6d4b\u8bd5\uff0c\u90a3\u4e2a\u7a7a\u683c\u914d\u7740 \u6362\u884c\\ n \u5c31\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898. @wenshao . ",
    "cxzl25": "@wenshao \n\u5f53\u6307\u5b9ajson path\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u5982($.c)\uff0c\u8fd4\u56denull\n\u5f53\u6307\u5b9ajson path\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u4e14\u503c\u4e3anull\uff0c\u5982($.a)\uff0c\u8fd4\u56denull\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u6ca1\u6709\u529e\u6cd5\u533a\u5206\uff0c\u6216\u8005\u8bf4\uff0c\u6709\u7c7b\u4f3c\u4e8econtainsKey \u7684api\u53ef\u4f9b\u5224\u65ad\u5417\uff1f\n. ",
    "ydq": "\u539f\u6765\u662f\u8fd9\u6837\u554a\uff0c\u611f\u8c22\u89e3\u7b54\uff01\n. ~~~java\n    static class Model{\n        public Date date;\n    }\npublic static void main(String[] args) throws Exception {\n    String json = \"{\\\"date\\\":\\\"2019-01-25T17:34:13.1920977+08:00\\\"}\";\n\n    System.out.println(\"jackson:\" + new ObjectMapper().readValue(json, Model.class).date);\n    System.out.println(\"fastjson:\" + JSON.parseObject(json, Model.class).date);\n}\n\n~~~\n@wenshao jackson\uff082.9.8\uff09\u53ef\u4ee5\u6b63\u786e\u89e3\u6790\uff0cfastjson\uff081.2.56\uff09\u65e0\u6cd5\u89e3\u6790\n\njackson:Fri Jan 25 17:34:13 CST 2019\nException in thread \"main\" com.alibaba.fastjson.JSONException: For input string: \"2019-01-25T17:34:13.1920977+08:00\"\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:680)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:369)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:273)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:546)\n    at work.darren.Test.main(Test.java:29)\nCaused by: java.lang.NumberFormatException: For input string: \"2019-01-25T17:34:13.1920977+08:00\". \n",
    "fengyapeng": "\u4f7f\u75281.2.11 \u7248\u672c\n. @vipcxj \u55ef\u55ef\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u786e\u5b9a\u662f\u5faa\u73af\u5224\u65ad\u9519\u4e86\uff0c\u8fd8\u662f\u5c31\u662f\u5982\u679c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u51fa\u73b0\u76f8\u540c\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5c31\u91c7\u7528\u8fd9\u6837\u7684\u865a\u5217\u5316\u65b9\u5f0f\u3002 \u7b49\u6709\u7a7a\u4e86\u770b\u770b\u6e90\u7801\u3002. @vipcxj \u6211\u770b\u4e86\u6e90\u7801\uff0c\u6e90\u7801\u4f1a\u5728SerialContext \u4e2d\u4f1a\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3aidentityhashmap \u7684reference \u3002\u5f53\u6ca1\u6709disableCircularReferenceDetect \u5f00\u542f\u8fd9\u4e2a\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u4f1a\u5728reference \u4e2d\u653e\u5165\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002\u4f9d\u636eidentityhashmap \u7684\u7279\u6027\uff0c\u5e8f\u5217\u5316\u662f\u5224\u65ad\u662f\u4e0d\u662f\u542b\u6709\u8be5\u5f15\u7528\u3002\u5982\u679c\u542b\u6709\u5f15\u7528\uff0c\u5219\u6309\u7167$.data\u7684\u5f62\u5f0f\u5e8f\u5217\u5316\u3002. ",
    "xiongchen2012": "\u7528Feature.AllowISO8601DateFormat\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316\nJSON.parseObject(str, YourEntity.class, Feature.AllowISO8601DateFormat);\n. ",
    "xysoko": "\u7c7b\u7ed3\u6784\u5f88\u5927\uff0c\u6574\u4e2a\u6e38\u620f\u73a9\u5bb6\u4e2a\u4f53\u7684\u6240\u6709\u6570\u636e\u90fd\u5728\u8fd9\u4e2a\u7c7b\u4e2d\n. \u4e00\u4e2a\u5b57\u6bb5\n. ",
    "red-leaves": "json\u6570\u636e\u4e3a{\u201cstate\u201d\uff1afalse}\uff0c\u8fd9\u4e2a\u662fAndroid\u6bb5\u89e3\u6790\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6628\u5929\u6211\u67e5\u770b\u4e86\u4e00\u4e0b\u540e\u53f0\u4ee3\u7801\uff0c\u540e\u53f0\u662f\u4f7f\u7528state\u7684object\u7c7b\u578b\u751f\u6210\u7684json\u6570\u636e\uff0c\u6211\u6000\u7591\u662f\u8fd9\u4e2a\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u4f46\u662f\u53c8\u4e0d\u6562\u80af\u5b9a\uff0c\u8fd9\u4e2a\u9519\u8bef\u6bcf\u5929\u90fd\u6709\u597d\u51e0\u5341\u6b21\uff0c\u8bf7\u5927\u795e\u7ed9\u77a7\u77a7 @githublaohu \n. json\u6570\u636e\u4e3a{\u201cstate\u201d\uff1afalse}\uff0c\u8fd9\u4e2a\u662fAndroid\u6bb5\u89e3\u6790\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6628\u5929\u6211\u67e5\u770b\u4e86\u4e00\u4e0b\u540e\u53f0\u4ee3\u7801\uff0c\u540e\u53f0\u662f\u4f7f\u7528state\u7684object\u7c7b\u578b\u751f\u6210\u7684json\u6570\u636e\uff0c\u6211\u6000\u7591\u662f\u8fd9\u4e2a\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u4f46\u662f\u53c8\u4e0d\u6562\u80af\u5b9a\uff0c\u8fd9\u4e2a\u9519\u8bef\u6bcf\u5929\u90fd\u6709\u597d\u51e0\u5341\u6b21\uff0c\u8bf7\u5927\u795e\u7ed9\u77a7\u77a7 @githublaohu \n. \u89e3\u6790\u6570\u636e\u7edf\u4e00\u4f7f\u7528String\u7c7b\u578b\uff0c\u7136\u540e\u4f7f\u7528\u4ec0\u4e48\u7c7b\u578b\u5c31\u8f6c\u4ec0\u4e48\u7c7b\u578b\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\n. ",
    "yqyzxd": "\u89e3\u51b3\u4e86\u5417\uff0c\u6211\u8fd9\u8fb9\u4e5f\u6709\u7c7b\u4f3c\u7684\u95ee\u9898\n. \u89e3\u51b3\u4e86\u5417\uff0c\u6211\u8fd9\u8fb9\u4e5f\u6709\u7c7b\u4f3c\u7684\u95ee\u9898\n. ",
    "yidaxia": "\u6211\u4e0b\u8f7dsample-java\u8fd0\u884cAndroidSampleTest\uff0c\u4e5f\u662f\u76f4\u63a5\u62a5\u8fd9\u4e2a\u9519\uff0cmacaca -v => 2.0.9,\u6709\u8c01\u80fd\u770b\u770b\u5417\uff1f. ",
    "sunshine4me": "@githublaohu \n\u6211\u662f\u5b89\u5353\u7248\u672c:\ncompile 'com.alibaba:fastjson:1.1.52.android'\njava\n String str = \"{\\\"Body\\\":\\\"\u6d4b\u8bd5\u4e00\u4e0b\\\\r\\\\n\\\"}\";\n topicModel tm = JSON.parseObject(str, topicModel.class);\n``` java\npublic class topicModel {\n    private String Body;\npublic String getBody() {\n    return Body;\n}\n\npublic void setBody(String body) {\n    Body = body;\n}\n\n}\n```\ntm.Body \u7684\u5b57\u7b26\u96c6\u4e3a\n\n\u800c\u6211\u60f3\u5f97\u5230\u7684\u662f \n\n. @githublaohu \n\u6211\u662f\u5b89\u5353\u7248\u672c:\ncompile 'com.alibaba:fastjson:1.1.52.android'\njava\n String str = \"{\\\"Body\\\":\\\"\u6d4b\u8bd5\u4e00\u4e0b\\\\r\\\\n\\\"}\";\n topicModel tm = JSON.parseObject(str, topicModel.class);\n``` java\npublic class topicModel {\n    private String Body;\npublic String getBody() {\n    return Body;\n}\n\npublic void setBody(String body) {\n    Body = body;\n}\n\n}\n```\ntm.Body \u7684\u5b57\u7b26\u96c6\u4e3a\n\n\u800c\u6211\u60f3\u5f97\u5230\u7684\u662f \n\n. \u67e5\u770b\u4e86 \u76f8\u5173\u7684\u6e90\u7801 \u662f\u5426\u8f6c\u4e49\u548c  JSONLexer.hasSpecial \u6709\u5173,\u4f46\u6211\u6ca1\u6709\u627e\u5230\u76f8\u5173\u7684\u8bbe\u7f6e\u70b9\n. \u67e5\u770b\u4e86 \u76f8\u5173\u7684\u6e90\u7801 \u662f\u5426\u8f6c\u4e49\u548c  JSONLexer.hasSpecial \u6709\u5173,\u4f46\u6211\u6ca1\u6709\u627e\u5230\u76f8\u5173\u7684\u8bbe\u7f6e\u70b9\n. ",
    "ningsia": "I encountered this issue as well. in version 1.2.12. rollback to 1.2.11 and waiting for bug fixing.\n. I encountered this issue as well. in version 1.2.12. rollback to 1.2.11 and waiting for bug fixing.\n. \u8c22\u8c22\uff0c\u52a0\u4e0a\u5355\u5f15\u53f7\u540e\u6ca1\u95ee\u9898\u4e86\u3002\n. ",
    "lyings": "\u4e0a\u9762\u590d\u5236\u7684\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u53ea\u6709\u90e8\u5206Android\u624b\u673a\u6d4f\u89c8\u5668\u63d0\u4ea4\u540e\u624d\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002\n. \u4e0a\u9762\u590d\u5236\u7684\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u53ea\u6709\u90e8\u5206Android\u624b\u673a\u6d4f\u89c8\u5668\u63d0\u4ea4\u540e\u624d\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002\n. fastjson \u5bf9\u7f51\u9875   \u4e0d\u95f4\u65ad\u7a7a\u683c(\\u00A0)    \u6ca1\u6709\u5904\u7406\u3002\n. fastjson \u5bf9\u7f51\u9875   \u4e0d\u95f4\u65ad\u7a7a\u683c(\\u00A0)    \u6ca1\u6709\u5904\u7406\u3002\n. \u8fd8\u6ca1\u6709\u5904\u7406\u54e6\u3002\u968f\u4fbfandroid \u624b\u673a\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u7a7a\u683c\uff0c\u5c31\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\n. ",
    "z172362753": "\u6211\u4e5f\u78b0\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\\u00A0\u9020\u6210freemark\u89e3\u6790json\u51fa\u9519\n. ",
    "a3349384": "@githublaohu \n\u5305\u91cc\u9762\u4e0d\u662f\u63d0\u4f9b\u4e86TypeReference\u7528\u6765\u53cd\u5e8f\u5217\u5316\u6cdb\u578b\u5417\uff1f\n\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u662f\u4e00\u4e2a\u5076\u7136\u9047\u5230\u7684\u9519\u8bef\uff0c\u6211\u5728\u9879\u76ee\u91cc\u9762\u7528\u4e86\u5f88\u591a\u6cdb\u578b\u53cd\u5e8f\u5217\u5316\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u5c31\u4e0a\u9762\u7684\u60c5\u51b5\u6709\u95ee\u9898\n. @githublaohu \n\u5305\u91cc\u9762\u4e0d\u662f\u63d0\u4f9b\u4e86TypeReference\u7528\u6765\u53cd\u5e8f\u5217\u5316\u6cdb\u578b\u5417\uff1f\n\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u662f\u4e00\u4e2a\u5076\u7136\u9047\u5230\u7684\u9519\u8bef\uff0c\u6211\u5728\u9879\u76ee\u91cc\u9762\u7528\u4e86\u5f88\u591a\u6cdb\u578b\u53cd\u5e8f\u5217\u5316\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u5c31\u4e0a\u9762\u7684\u60c5\u51b5\u6709\u95ee\u9898\n. @javaday2014 \n\u770b\u5b8c#695\u4e4b\u540e\uff0c\u6211\u8fd8\u662f\u6709\u70b9\u7591\u95ee\u3002\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0cCommonHttpResult\u672c\u8eab\u662f\u6cdb\u578b\u7684\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6eT\uff0c\u9ed8\u8ba4\u4e0d\u5c31\u662fCommonHttpResult\u5417\n. @javaday2014 \n\u770b\u5b8c#695\u4e4b\u540e\uff0c\u6211\u8fd8\u662f\u6709\u70b9\u7591\u95ee\u3002\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0cCommonHttpResult\u672c\u8eab\u662f\u6cdb\u578b\u7684\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6eT\uff0c\u9ed8\u8ba4\u4e0d\u5c31\u662fCommonHttpResult\u5417\n. 1.1.52.android @wenshao \n. 1.1.52.android @wenshao \n. \u662f\u8fd9\u6837\u7528\u7684\uff1a\nnew TypeReference<XX>(){}.getType()\n. \u662f\u8fd9\u6837\u7528\u7684\uff1a\nnew TypeReference<XX>(){}.getType()\n. @javaday2014 \u4f5c\u8005\u90a3\u6837\u505a\u5e94\u8be5\u662f\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\n. ",
    "javaday2014": "@a3349384 \n\u8ddf\u6211\u62a5\u7684\u95ee\u9898\u4e00\u6837\uff0chttps://github.com/alibaba/fastjson/issues/695 \n\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\uff1a\n\n\u6216\u8005\u4fee\u6539fastjson\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u4f5c\u8005\u80fd\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u867d\u7136\u901a\u8fc7\u7edf\u4e00\u7684\u4f7f\u7528\u65b9\u5f0f\u80fd\u591f\u907f\u514d\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5927\u5bb6\u90fd\u8fd9\u4e48\u7528\u3002\n. @a3349384 \n\u8ddf\u6211\u62a5\u7684\u95ee\u9898\u4e00\u6837\uff0chttps://github.com/alibaba/fastjson/issues/695 \n\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\uff1a\n\n\u6216\u8005\u4fee\u6539fastjson\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u4f5c\u8005\u80fd\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u867d\u7136\u901a\u8fc7\u7edf\u4e00\u7684\u4f7f\u7528\u65b9\u5f0f\u80fd\u591f\u907f\u514d\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5927\u5bb6\u90fd\u8fd9\u4e48\u7528\u3002\n. @a3349384 \u4e0d\u662f\u7684\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u6cdb\u578b\uff0c\u7f13\u5b58\u4e2d\u5b58\u7684\u662f\u8fd9\u4e2a\u7c7b\u7684rawType\uff0c\u5373xxx.xx.xx. CommonHttpResult\uff0c\u5f53\u4f60\u518d\u6b21\u4f7f\u7528\u6cdb\u578b\u65f6CommonHttpResult\uff0c\u5982\u679c\u5728\u7f13\u5b58\u4e2d\u627e\u4e0d\u5230CommonHttpResult\u7c7b\u578b\u7684\u7f13\u5b58\uff0c\u4f1a\u53bb\u627e\u662f\u5426\u7f13\u5b58\u4e86CommonHttpResult\u5bf9\u8c61\uff0c\u7ed3\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u7ed3\u679c\u4f1a\u8f6c\u6362\u4e3aJSONObject\n. @a3349384 \u4e0d\u662f\u7684\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u6cdb\u578b\uff0c\u7f13\u5b58\u4e2d\u5b58\u7684\u662f\u8fd9\u4e2a\u7c7b\u7684rawType\uff0c\u5373xxx.xx.xx. CommonHttpResult\uff0c\u5f53\u4f60\u518d\u6b21\u4f7f\u7528\u6cdb\u578b\u65f6CommonHttpResult\uff0c\u5982\u679c\u5728\u7f13\u5b58\u4e2d\u627e\u4e0d\u5230CommonHttpResult\u7c7b\u578b\u7684\u7f13\u5b58\uff0c\u4f1a\u53bb\u627e\u662f\u5426\u7f13\u5b58\u4e86CommonHttpResult\u5bf9\u8c61\uff0c\u7ed3\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u7ed3\u679c\u4f1a\u8f6c\u6362\u4e3aJSONObject\n. \u53ef\u4ee5\uff0c\u5982\u4e0b\uff0c\u4f46\u662f\u4e24\u8005\u6df7\u7528\u4ee5\u540e\u5c31\u4f1a\u6709\u95ee\u9898\uff0c\u8fd9\u79cd\u573a\u666f\u5e94\u8be5\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\nI18nResponse res = JSON.parseObject(msg, I18nResponse.class);\n. @wenshao 1.2.9 \n. @wenshao \n1.2.12\u662fOK\u7684 \uff0c\u8bf7\u95ee12\u7248\u672c\u4e2d\u662f\u600e\u4e48\u4fee\u590d\u7684\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u770bgetDeserializer(Class<?> clazz, Type type) \u65b9\u6cd5\u7684\u4ee3\u7801\u4e5f\u6ca1\u53d8\u5316\uff0c\u8c22\u8c22\n. ",
    "hiphonezhu": "3Q, closed\n. 3Q, closed\n. ",
    "AsionReachel": "@githublaohu \u6211\u662f\u8c03\u8bd5\u7684\u65f6\u5019\u51fa\u73b0\u7684\uff0c\u6ca1\u6709\u6253\u5370\u7684\u5f02\u5e38\uff0c\u6211\u7528\u7684\u662f1.2.7\u3002 @wenshao \n. @wenshao \u4f60\u8bd5\u7740\u89e3\u6790\u6211\u4e0a\u9762\u7684json\u770b\u770b\n. @wenshao \u6211\u63621.2.12\u4e5f\u8bd5\u8fc7\uff0c\u8fd8\u662f\u4e0d\u80fd\u89e3\u6790\u3002\u7528string\u53bb\u63a5\u7136\u540e\u518d\u8f6cboolean\u5c31\u53ef\u4ee5\u3002\n. \u8fd9\u4e2abug\u662f\u5426\u5df2\u7ecf\u4fee\u590d\uff1f. ",
    "krmao": "\u6211\u4e5f\u9047\u5230\u6b64\u95ee\u9898,\u5d4c\u5957\u7684\nisMainPoi \u89e3\u6790\u4e3a false\n. ```\npublic class GSMapBusEntity {\n    public ArrayList initialDataList = new ArrayList<>();\n    public ArrayList fixedDataList = new ArrayList<>();\nprivate static Gson gson = new GsonBuilder().create();\n\n@Nullable\npublic static GSMapBusEntity parseFromHotelBus(String allDataJsonString) {\n\n//        return gson.fromJson(allDataJsonString, new TypeToken() {\n//        }.getType());\n        return JSON.parseObject(allDataJsonString, GSMapBusEntity.class);\n    }\n}\n```\n\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u7c7b \n```\nclass GSMapItemBIZEntity{\n    protected boolean isBootomPluginClickable = false;    //\u91d1\u878d\u90e8\u95e8\u5916\u5e01\u5151\u6362\u4e1a\u52a1\u7f51\u70b9    \u70b9\u51fb\u5e95\u90e8\u65e0\u9700\u8df3\u8f6c\n    protected boolean isMainPoi = false;\npublic boolean isBootomPluginClickable() {\n        return isBootomPluginClickable;\n    }\npublic void setBootomPluginClickable(boolean bootomPluginClickable) {\n    isBootomPluginClickable = bootomPluginClickable;\n}\n\npublic boolean isMainPoi() {\n    return isMainPoi;\n}\n\npublic void setMainPoi(boolean mainPoi) {\n    isMainPoi = mainPoi;\n}\n\n}\n```\nisMainPoi isBootomPluginClickable  \u89e3\u6790\u9519\u8bef,\u90fd\u662ffalse\n\u7ecf\u8fc7\u4e0d\u65ad\u5c1d\u8bd5,\u7c7b\u578b\u6539\u6210public \u662f\u6b63\u786e\u7684,GSMapItemBIZEntity\u91cc\u9762\u6709\u597d\u591a\u5176\u4ed6\u5b57\u6bb5,\u90fd\u89e3\u6790\u4e86,\u53ea\u6709is\u5f00\u5934\u7684\u89e3\u6790\u9519\u8bef\n\u7ecf\u6d4b\u8bd5,public\u53ef\u4ee5\n\u8fd9\u4e2abug\u5e0c\u671b\u80fd\u5173\u6ce8\u4e0b\n. so, how to fix this bug? use gson ?. so, how to fix this bug? use gson ?. ",
    "dongh": "\u6211\u4e5f\u9047\u5230\u4e86\uff0cboolean\u4e0d\u80fdis\u5f00\u5934\uff0c\u6362Boolean\u6b63\u5e38. ",
    "yojeajie": "\u5f00\u59cb\u662f1.2.9\u7248\u672c\uff0c\u540e\u6765\u66f4\u6362\u5230\u4e861.2.12\u8fd8\u662f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u770b\u5230\u8fd9\u4e48\u4e00\u7bc7\u535a\u5ba2FastJsonHttpMessageConverter\u8bbe\u7f6edateFormat\u540e\u5bfc\u81f4JSONField\u6ce8\u89e3format\u5931\u6548\u89e3\u51b3\u529e\u6cd5\uff0c\u8bf4\u4e86\u4ed6\u5206\u6790\u7684\u539f\u56e0\n. \u521a\u624d\u6211\u53c8\u91cd\u65b0\u786e\u8ba4\u5e76\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c1.2.12\u7248\u672c\u786e\u5b9e\u8fd8\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u53ea\u8981\u662fFastJsonHttpMessageConverter\u914d\u7f6e\u4e86dateFormat\uff0c\u90a3\u4e48@JSONField(format = \"yyyy-MM-dd\")\u5c31\u5931\u6548\u4e86\uff0c\u5982\u679c\u4e0d\u914d\u7f6edateFormat\uff0c@JSONField(format = \"yyyy-MM-dd\")\u662f\u751f\u6548\u7684\n. \u6211\u91cd\u65b0\u5199\u4e86\u4e00\u4e2a\u7684demo\uff0c\u95ee\u9898\u4f9d\u7136\u5b58\u5728\n\nspring\u7248\u672c\uff1a4.1.4.RELEASE\uff0cfastjson\u7248\u672c\uff1a1.2.12\n\n0\u3001spring mvc\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\uff1a\n\n1\u3001\u8fd4\u56de\u5b9e\u4f53bean\n\n2\u3001\u63a7\u5236\u5668\n\n3\u3001\u6d4f\u89c8\u5668\u67e5\u770b\u5230\u7684\u7ed3\u679c\uff1a\n\n\n\u5982\u679c\u6b63\u5e38\u8fd9\u91cc\u5e94\u8be5\u770b\u5230\u7684\u662f{\"currentDate\":\"2016-06-28\"}\n\n\u5982\u679c\u628aSpring mvc\u7684\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u6539\u6210\u8fd9\u6837\uff08\u53bb\u6389dateFormat\u914d\u7f6e\uff09\n\n\u90a3\u4e48\u5f97\u5230\u7684\u7ed3\u679c\u662f\u6b63\u5e38\u7684\uff08\u4e5f\u5c31\u662f@JSONField\u4e2dformat\u914d\u7f6e\u662f\u751f\u6548\u7684\uff09\n\n\u521a\u624d\u770b\u5230\u53d1\u65b0\u7248\u4e86\uff0c\u6211\u53c8\u4f7f\u75281.2.13\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\u6539\u53d8\u3002\n\u5982\u679c\u65b9\u4fbf\u7684\u8bdd\u80fd\u63d0\u4f9b\u4e00\u4e2a\u6d4b\u8bd5\u6b63\u5e38\u7684demo\u5417\uff0c\u591a\u8c22\uff01\n. ",
    "cxjava": "\u6700\u65b0\u7248\u672c\u4e5f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>1.2.23</version>\n</dependency>. ",
    "yuedaha": "\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff0c\u6211\u4e5f\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002. ",
    "f497196689": "1.2.44\u8fd9\u4e2a\u95ee\u9898\u4f9d\u7136\u5b58\u5728. ",
    "wmcuit": "1.2.47\u8fd8\u5728. ",
    "fuzideng": "1.2.49\u8fd8\u5728. ",
    "cnlinjie": "\u770b\u56fe\uff0c\u8fdb\u6765\u65f6obj \u6709\u503c\uff0c\u5e8f\u5217\u5316\u4e4b\u540e\uff0c_text _\u5c31\u4e3a\u7a7a\u4e86 !\n\n. ",
    "virtuecai": "\u5404\u4f4d\u5927\u4f6c, \u6211\u4e5f\u662f\u67e5\u4e86\u4e00\u5929\u4e86 ,\u7ec8\u4e8e\u53d1\u73b0\u4e86\u662ffastjson \u95ee\u9898. \u6709\u4ec0\u4e48\u89e3\u51b3\u529e\u6cd5? \u8fd8\u662f\u79fb\u9664FastJsonHttpMessageConverter ?\n. 1.2.13 \u90fd\u8bd5\u4e86\n. \u95ee\u9898\u662f\u89e3\u51b3\u4e86, springmvc \u4e0d\u80fd\u4f7f\u7528 FastJsonHttpMessageConverter, \u5177\u4f53\u539f\u56e0\u6ca1\u6709\u8ddf\u8fdb\u6e90\u4ee3\u7801\u4ee3\u7801,  \u662fspringfox \u8fd8\u662f fastjson \u7684\u95ee\u9898, \u8fd8\u6ca1\u6df1\u7a76. MessageConverter \u53ea\u80fd\u7ee7\u7eed\u4f7f\u7528 jackson.\n. ",
    "amwei": "1\uff0cpropertyNamingStrategy\uff1a\n\u8fd9\u79cd\u573a\u666f\u662f\u8bf7\u6c42\u53c2\u6570\u662fuser_name\uff0c\u53ef\u4ee5\u76f4\u63a5\u6620\u5c04\u5230java bean\u7684userName\u5c5e\u6027\u4e0a\uff1b\u54cd\u5e94\u53c2\u6570\u4e5f\u53ef\u4ee5\u628auserName\u6620\u5c04\u4e3auser_name\n2\uff0cAbstractJsonpResponseBodyAdvice\n\u8fd9\u79cd\u573a\u666f\u662f\u5f53\u8bf7\u6c42\u53c2\u6570\u6709?callback=test\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u751f\u6210\u51fd\u6570\u540d\u4e3atest\u7684jsonp\u6570\u636e\uff0c\u800c\u4e0d\u7528\u6bcf\u4e2arequestMapping\u5bf9\u5e94\u7684\u65b9\u6cd5\u90fd\u5199\u4e00\u904d\n. ",
    "littleGnAl": "\u6211\u5c1d\u8bd5\u4e86\uff0c\u4f46\u662f\u4e0d\u662f\u6211\u8981\u7684\u7ed3\u679c\uff0c\u4e0b\u9762\u662f\u6211\u7684\u6d4b\u8bd5\u4ee3\u7801\n``` java\n@JSONType(seeAlso = {SubItemOne.class, SubItemTwo.class})\npublic class Item {\n  private String name;\npublic void setName(String name) {\n    this.name =  name;\n  }\npublic String getName() {\n    return this.name;\n  }\n}\n@JSONType(typeName = \"SubItemOne\")\npublic class SubItemOne extends Item {\n  private int subItemOneId;\npublic void setSubItemOneId(int subItemOneId) {\n    this.subItemOneId = subItemOneId;\n  }\npublic int getSubItemOneId() {\n    return this.subItemOneId;\n  }\n}\n@JSONType(typeName = \"SubItemTwo\")\npublic class SubItemTwo extends Item {\n  private int subItemTwoId;\npublic void setSubItemTwoId(int subItemTwoId) {\n    this.subItemTwoId = subItemTwoId;\n  }\npublic int getSubItemTwoId() {\n    return this.subItemTwoId;\n  }\n}\npublic class SubItemOneList {\n  private List itemList;\npublic List getItemList() {\n    return itemList;\n  }\npublic void setItemList(List itemList) {\n    this.itemList = itemList;\n  }\n}\npublic class SubItemTwoList {\n  private List itemList;\npublic List getItemList() {\n    return itemList;\n  }\npublic void setItemList(List itemList) {\n    this.itemList = itemList;\n  }\n}\n```\njava\n    String dataOne = \"{itemList:[{\\\"subItemOneId\\\":\\\"1\\\", \\\"name\\\":\\\"one1\\\"}, {\\\"subItemOneId\\\":\\\"2\\\", \\\"name\\\":\\\"one2\\\"}]}\";\n    String dataTwo = \"{itemList: [{\\\"subItemTwoId\\\":\\\"1\\\", \\\"name\\\":\\\"Two1\\\"}, {\\\"subItemTwoId\\\":\\\"2\\\", \\\"name\\\":\\\"Two2\\\"}]}\";\n    SubItemOneList subItemOneList = JSON.parseObject(dataOne, SubItemOneList.class);\n    SubItemTwoList subItemTwoList = JSON.parseObject(dataTwo, SubItemTwoList.class);\n\u53ef\u80fd\u662f\u6211\u524d\u9762\u8868\u8ff0\u4e0d\u6e05\u695a\uff0c\u6211\u662f\u60f3SubItemOneList\u4e2d\u7684List<Item>\u8d4b\u503c\u4e3aList<SubItemOne>\uff0c SubItemTwoList\u4e2d\u7684List<Item>\u8d4b\u503c\u4e3aList<SubItemOne>\n\u4e0b\u9762\u662f\u7b49\u4ef7\u7684\u5b9e\u73b0\njava\nJSONObject jsonObject = JSON.parseObject(dataOne);\n    SubItemOneList subItemOneList1 = new SubItemOneList();\n    JSONArray jsonArray = jsonObject.getJSONArray(\"itemList\");\n    List<Item> itemList = new ArrayList<>();\n    for (int i = 0; i < jsonArray.size(); i++) {\n      JSONObject jsonObject1 = jsonArray.getJSONObject(i);\n      SubItemOne subItemOne = new SubItemOne();\n      subItemOne.setSubItemOneId(jsonObject1.getIntValue(\"subItemOneId\"));\n      subItemOne.setName(jsonObject1.getString(\"name\"));\n      itemList.add(subItemOne);\n    }\n    subItemOneList1.setItemList(itemList);\n\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u7684\u7528\u6cd5\u6709\u95ee\u9898\uff0c\u5982\u679c\u662f\u8bf7\u6307\u6b63\n. ",
    "baijian": "\u7c7b\u6bd4\u7684\u4e1a\u52a1\u573a\u666f\u5982\u4e0b:\njavascript\n{\n  \"name\": \"test\",\n  \"members\": [\n    {\n       \"name\": \"name1\"\n       \"age\": 12,\n    },\n    {\n      \"name\": \"name2\",\n      \"age\": 22,\n    }\n  ],\n  \"adminMembers\" [\n   {\n       \"name\": \"name3\"\n       \"age\": 12,\n    },\n    {\n      \"name\": \"name4\",\n      \"age\": 22,\n    }\n  ],\n}\n\u5982\u4e0a\u7684\u4e00\u4e2ajson\uff0c\u6211\u7528\u8fd9\u6837\u7684\u4e00\u4e2ajson\u6765\u5b58\u50a8\u4fe1\u606f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u77e5\u9053path\u53ef\u4ee5\u627e\u51fa\u67d0\u4e2a\u4eba\u7684age\uff0c\u53e6\u5916\u4e00\u79cd\u573a\u666f\u5c31\u662f\u6211\u73b0\u5728\u77e5\u9053\u4e00\u4e2a\u4eba\u7684name\uff0c\u60f3\u77e5\u9053\u4ed6\u7684path\uff0c\u7136\u540e\u4e5f\u5c31\u53ef\u4ee5\u901a\u8fc7path\u77e5\u9053\u8fd9\u4e2a\u4eba\u7684\u4fe1\u606f\u4ee5\u53ca\u5176\u4ed6\u4fe1\u606f\u4e86.\n. \u6ee1\u8db3~\n. \u540c\u65f6JSONPath.set(obj, \"$.10.0.0.1.region\", data);\n\u8fd9\u6837\u8fdb\u884cset\u4e5f\u6709\u95ee\u9898,\u5e76\u4e0d\u80fd\u5f97\u5230\u671f\u671b\u7684{\"10.0.0.1\":{\"region\":\"\"}}\u7ed3\u6784\n. \u5df2\u7ecf\u6d4b\u8bd5\uff0c\u5df2\u4fee\u590d~\n. ",
    "geedys": "\u540c\u6c42\u5b8c\u5584\u7684\u6587\u6863\u3002\u76ee\u524d\u5728\u770b\u6e90\u4ee3\u7801\u6765\u5f00\u53d1\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\u4e0b\u5440\u3002\u3002\n. \u7a7a\u503cnull \u6ca1\u6709\u4e22\uff0c\u53ef\u4ee5\u901a\u8fc7strings[0]\u83b7\u53d6\u5230\u3002\n\u4f60\u8bf4\u7684\u7a7a\u503c\u662f\u6307\u8fde\u7eed\u7684\u9017\u53f7\u7684\u60c5\u51b5\u5417\uff1f. ",
    "jason19659": "\u7a7f\u53c2\u6570\u7528\u8fd9\u4e2a Feature.InitStringFieldAsEmpty\n. ",
    "Aliece": "\u81ea\u5df1\u4f7f\u7528\u9519\u8bef\u5bfc\u81f4\n. ",
    "lmm1990": "Cipher cipher= Cipher.getInstance(\"AES/ECB/PKCS7Padding\", \"BC\");\n\u8fd9\u53e5\u62a5\u9519\n. java\npublic static void main(String[] args) {\n        String jsonString = \"\" +\n                \"{\" +\n                \"    \\\"age\\\": 25,\" +\n                \"    \\\"is_stop\\\":false/*comment*/\" +\n                \"}\";\n        TestUser testUser = JSONObject.parseObject(jsonString, TestUser.class);\n        System.out.println(testUser);\n    }\n\u6d4b\u8bd5\u4e0dok\n1.2.21. \u6b63\u5e38\u7684\u6ce8\u91ca\u5440\uff0cjs\u6267\u884c\uff1aconsole.log({\"is_stop\":true/comment/}.is_stop)\uff0c\u6b63\u5e38. \u6b63\u5219\u5339\u914d\u4e0b/\u661f....\u661f/\uff0c\u5148\u53bb\u6389\u6ce8\u91ca\uff0c\u518d\u89e3\u6790json\u5c31\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\u4e86. \u5bf9\u7684\uff0c\u6211\u6253\u661f\u53f7\u600e\u4e48\u88ab\u5c4f\u853d\u4e86. false/comment/  \u6211\u8981\u7684\u662f\u5355\u884c\u6ce8\u91ca. ",
    "dyc87112": "\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8fd8\u4e0d\u884c\uff0c533\u884c\u8fd9\u8fb9\uff0ccreateJavaBeanSerializer\u8fd4\u56deASMSerializer\uff0c\u4f1a\u5bfc\u81f4\u89e3\u6790\u5931\u8d25\njava\nif (create) {\n    putInternal(clazz, createJavaBeanSerializer(clazz));\n}\n\u662f\u4e0d\u662f\uff0c498\u884c\uff0ctry\u90e8\u5206\uff0cput\u4e4b\u540e\u76f4\u63a5\u8fd4\u56dewrite\uff1f\njava\nif ((!springfoxError) //\n                    && className.equals(\"springfox.documentation.spring.web.json.Json\")) {\n    try {\n        put(Class.forName(\"springfox.documentation.spring.web.json.Json\"), \nSwaggerJsonSerializer.instance);\n        writer = serializers.get(clazz);\n        if (writer != null) {\n            return writer;\n        }\n     } catch (ClassNotFoundException e) {\n        // skip\n        springfoxError = true;\n    }\n}\n. OK\uff0c\u641e\u5b9a~\n. \u8865\u5145\u4e00\u4e0b\u4f8b\u5b50\uff1a\n```java\npublic class TestException extends Exception {\n@JSONCreator\npublic TestException() {\n\n}\n\npublic TestException(String data) {\n    super(\"Data-\" + data);\n}\n\npublic static void main(String[] args) {\n    TestException testException = new TestException(\"aaa\");\n    System.out.println(\"before\uff1a\" + testException.getMessage());\n    String json = JSONObject.toJSONString(testException);\n    TestException o = JSONObject.parseObject(json, TestException.class);\n    System.out.println(\"after\uff1a\" + o.getMessage());\n}\n\n}\n```. \u62b1\u6b49\uff0c\u56de\u590d\u665a\u4e86\u3002\u4e3b\u8981\u662f\u5728\u505afeign\u7684\u6269\u5c55\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u589e\u5f3a\u4f2arpc\u7684\u5f02\u5e38\u6355\u83b7\uff0c\u9700\u8981\u5bf9json\u8f6c\u6210\u5f02\u5e38\u518d\u629b\u51fa\u3002\u7531\u4e8e\u4e1a\u52a1\u5f00\u53d1\u7684\u6709\u4e9b\u5f02\u5e38\u7c7b\u7684message\u62fc\u63a5\u903b\u8f91\u5728\u6784\u9020\u51fd\u6570\u91cc\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u6211\u4e0a\u9762\u4f8b\u5b50\u7684\u73b0\u8c61\u3002\u76ee\u524d\u901a\u8fc7\u7f16\u7801\u89c4\u8303\u6765\u89c4\u907f\u4e86\uff0c\u611f\u8c22\u56de\u590d~. ",
    "yfn020": "``` java\npublic class Group {\n    @JSONField(name = \"ID\")\n    private Long id;\n    private String NAME;\n    @JSONField(serialize = false, deserialize = false)\n    private String AUTHORITY;\n    public Long getId() {\n        return id;\n    }\n    public void setId(Long id) {\n        this.id = id;\n    }\n    public String getNAME() {\n        return NAME;\n    }\n    public void setNAME(String NAME) {\n        this.NAME = NAME;\n    }\n    public String getAUTHORITY() {\n        return AUTHORITY;\n    }\n    public void setAUTHORITY(String AUTHORITY) {\n        this.AUTHORITY = AUTHORITY;\n    }\n}\n    Group group = new Group();\n    group.setId(0L);\n    group.setNAME(\"admin\");\n    group.setAUTHORITY(\"administrors\");\n\n    System.out.println(JSON.toJSONString(group));\n\n```\n\u8fd8\u662f\u4f1a\u6253\u5370AUTHORITY\u5b57\u6bb5\uff1a{\"ID\":0,\"aUTHORITY\":\"administrors\",\"nAME\":\"admin\"}\n. ",
    "Witype": "\u6211\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u6570\u636e\u672c\u8eab\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u5f02\u5e38\u65f6\u5076\u4e5f\u53d1\u751f\uff0c\u771f\u7684\u4f24\u8111\u7b4b\n. \u6211\u76f4\u63a5\u6362Gson\u4e86\uff0c\u6492\u95ee\u9898\u6ca1\u6709\n. ",
    "shingohu": "\u6700\u8fd1\u540c\u4e00\u4e2a\u5730\u65b9\u9891\u7e41\u51fa\u73b0,\u70e6\u554a\n. {\"msg\":\"\u8ba2\u5355\u91d1\u989d\u4fee\u6539\u6210\u529f\",\"metaData\":{\"messageProperty\":\"msg\",\"successProperty\":\"success\",\"dataProperty\":\"data\",\"errorCodeProperty\":\"errorCode\"},\"data\":{},\"success\":true} \u5c31\u662f\u8fd9\u4e2a\u6570\u636e. ",
    "ToniYang": "\u4e3a\u5565\u4e0d\u7528jackson\uff1f\n2016\u5e748\u670817\u65e5\u661f\u671f\u4e09\uff0cnziyouren notifications@github.com \u5199\u9053\uff1a\n\n\u6211\u8ddffastjson\u8017\u4e0d\u8d77\u4e86\uff0c\u5df2\u7ecf\u6362GSON\u4e86\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/alibaba/fastjson/issues/721#issuecomment-240298111,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AK0l6SLqPEVTtMa6cV0W93J127ZUdud8ks5qgnPmgaJpZM4JKPE0\n.\n. \n",
    "seulfish": "\u8fd9\u4e2a\u8981\u5904\u7406\u554a \uff0c\u6211\u4e5f\u9047\u5230\u4e86\n. ",
    "jjhesk": "does it now working well with retrofit2?. ",
    "ChenSen5": "\u9884\u8ba1\u4ec0\u4e48\u65f6\u5019\u4f1a\u51fa1.2.14\u7248\u672c\n. ",
    "haizhiyun": "\u8fd9\u4e2a\u95ee\u9898\u6709\u6ca1\u6709\u89e3\u51b3\u5462 \uff1f\u52a0\u4e0aSerializerFeature.WriteClassName\u540e\uff0cdouble\u3001long\u3001float \u6570\u636e\u540e\u9762\u90fd\u4f1a\u52a0\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bcd\uff0cjson\u8bc6\u522b\u4e0d\u4e86 \uff08\u6700\u65b0\u7248\uff1afastjson-1.2.43\uff09. ",
    "zhangyibao": "Hi,\u6e29\u5c11\u5927\u725b\uff0c\u8fd9\u4e2a\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5417\uff1f\n. ",
    "ZoroXing": "\u5728scala\u4e2d\u4f7f\u7528\n   val list = new ArrayList[ChngVbeln]\n    list.add(ChngVbeln(\"123\", \"V456\", \"T4567\", \"S0976\"))\n    JSON.toJSONString(list)\n\u62a5\u9519\u8be5\u5982\u4f55\u5904\u7406\uff1f\n. ",
    "TommyLemon": "@panxiaoan @hinadong APIJSON\u91cc\u7684JSONObject\u7ee7\u627fFastJSON\u91cc\u7684JSONObject\uff0c\u6309put\u987a\u5e8f\u6392\u5e8f\uff1bJSON\u7c7b\u5c01\u88c5\u4e86FastJSON\u7684\u5e38\u7528\u65b9\u6cd5\uff0cparseObject\u4e5f\u6309\u5df2\u6709\u987a\u5e8f\u89e3\u6790\uff0c\u6b63\u597d\u7b26\u5408\u4f60\u4eec\u7684\u9700\u6c42\u3002\nhttps://github.com/TommyLemon/APIJSON. @jarvan4dev \u8bd5\u8bd5\u8fd9\u4e2a\nString toJSONString(Object object, int defaultFeatures, SerializerFeature... features). @jarvan4dev \u8bd5\u8bd5\u8fd9\u4e2a\nString toJSONString(Object object, int defaultFeatures, SerializerFeature... features). @jarvan4dev \u5e94\u8be5\u53ef\u4ee5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u590d\u5236DEFAULT_GENERATE_FEATURE\uff0c\u7136\u540e\u5220\u9664SortField\uff0c\u518d\u5f53\u6210defaultFeatures\u4f20\u5165. @jarvan4dev \u5e94\u8be5\u53ef\u4ee5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u590d\u5236DEFAULT_GENERATE_FEATURE\uff0c\u7136\u540e\u5220\u9664SortField\uff0c\u518d\u5f53\u6210defaultFeatures\u4f20\u5165. @wenshao \u6211\u4e5f\u60f3\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u8bf7\u95ee\u73b0\u5728\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5417\uff1f. @wenshao \u6211\u4e5f\u60f3\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u8bf7\u95ee\u73b0\u5728\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5417\uff1f. @yu120  a=you,b=2\u4e0d\u7b26\u5408JSON\u89c4\u8303\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\n\u653e\u5230 http://json.cn/ \u8bd5\u8bd5. @littleGnAl \n\u5199javabean\uff1a\nclass Data {\nList\\ rows;\n    public List\\ getRows() {\n        return rows; \n    }\n    public void setRows(List\\ rows) {\n        this.rows = rows;\n    }\n}\nclass Response {\n    Data  data;\n    public Data getData() {\n    if (data == null) {\n        data = new Data();\n    }\n        return data; \n    }\n    public void setData(Data  data) {\n        this.data = data;\n    }\n}\nResponse response = JSON.parseObject(json2, Response.class);\nList\\ rows = response == null ? null : response.getData().getRows();\n. @leveychen Android\u53ef\u4ee5\u7528gradle\u5f00\u542fMultidex\u7684\u65b9\u5f0f\u89e3\u51b3\u5305\u51b2\u7a81\u3002\u6216\u8005\u628a\u4f9d\u8d56compile\u6539\u6210provided\u597d\u50cf\u4e5f\u884c. @wenshao \n\u592a\u9700\u8981\u4e86\uff0cphp\u540e\u53f0\u7ecf\u5e38\u628a {} \u8f6c\u6210 [] \u8fd4\u56de\uff0c\u975e\u5e38\u6076\u5fc3\u3002\n\u4ed6\u4eec\u8bf4\u662fphp\u7684json_encode\u51fd\u6570\u81ea\u52a8\u8f6c\u7684\uff0c\u53ea\u80fd\u6bcf\u4e2a\u7a7a\u5bf9\u8c61\u624b\u52a8\u8f6c\u6210 null \u8fd4\u56de\u3002\n\u4f46\u6709\u6b21php\u6539\u4e86\u63a5\u53e3\uff0c\u8fd9\u4e2a\u95ee\u9898\u53c8\u51fa\u73b0\u4e86\uff0c\u7ebf\u4e0a\u7684app\u6ca1\u6709try-catch\u5c31\u6302\u4e86\u3002\n\u8fd8\u597d\u6302\u7684\u90a3\u6bb5\u4ee3\u7801\u4e0d\u662f\u6211\u5199\u7684/\u6c57\u3002\nfastjson\u76ee\u524d\u6709WriteNullArrayAsEmpty\u8fd9\u79cd\u5c5e\u6027\u4e86\uff0c\u6240\u4ee5\u5e0c\u671b\u52a0\u51e0\u4e2a WriteEmptyArrayAsNull \u8fd9\u6837\u7684\u5c5e\u6027\uff0c\u6bd4\u5ffd\u7565\u5f02\u5e38\u66f4\u7ba1\u7528\uff0c\u975e\u5e38\u611f\u8c22\u3002 . \u6211\u4eec\u76ee\u524d\u662f\u53ea\u80fd\u5728JSON String\u8f6cJavaBean\u524d\n\u5148\u8f6cJSONObject\uff0c\u7136\u540e\u904d\u5386key:value\n\u5982\u679cvalue\u662f\u7a7a\u6570\u7ec4 [] \u5c31remove\u6389\uff0c\n\u518dtoJSONString\uff0c\n\u6700\u540e\u518d\u8f6cJavaBean\u3002. @PromethS \u53ef\u4ee5\u7528JavaBean\u66ff\u6362Map\u518dtoJSONString. @Ryan0923  \u5982\u679cB\u91cc\u9762\u4e5f\u6709id\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\u4e24\u4e2aid\u4e0d\u5c31\u4f1a\u76f8\u4e92\u66ff\u6362\u4e48\uff1f\ud83d\ude02. @doteyzm @wenshao json\u4e32\u4e0d\u5408\u6cd5\uff0c\u6362\u884c\u5e94\u8be5\u7528\\n\n\u590d\u5236\u5230 http://json.cn/ \u6d4b\u8bd5\u5c31\u77e5\u9053\u95ee\u9898\u4e86\uff0c\u6539\u6210\u4ee5\u4e0b\u683c\u5f0f\u5c31OK\u4e86\uff1a\n{\"res\": \"00000\",\"version\": \"1.8.0\",\"des\":\"\u7248\u672c\u66f4\u65b0\uff1a\\n1\u3001\u9080\u8bf7\u6709\u793c\uff1a\u65b0\u529f\u80fd\uff0c\u65b0\u73a9\u6cd5\uff0c\u5feb\u53bb\u4f53\u9a8c\u5427~\\n2\u3001\u76f4\u64ad\u7981\u8a00\uff1a\u4e3b\u64ad\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u5c0f\u9ed1\u7c89\u5566~\\n3\u3001\u84dd\u9cb8\u5e01\u5145\u503c\uff1a\u591a\u79cd\u6a21\u5757\u4efb\u4f60\u9009\uff0c\u591a\u5145\u591a\u9001\uff01\\n4\u3001\u4f18\u5316\u6392\u884c\u699c\uff1a\u4fee\u590d\u76f4\u64ad\u9875\u9762\u7684\u6392\u884c\u699c\uff0c\u8ba9\u5927\u5bb6\u7b2c\u4e00\u65f6\u95f4\u770b\u5230\u4ed8\u51fa\u7684\u4f60~\\n5\u3001\u4fee\u590d\u76f4\u64ad\u804a\u5929\u533a\uff1a\u518d\u4e5f\u4e0d\u62c5\u5fc3\u4e3b\u64ad\u770b\u4e0d\u5230\u4f60\u9001\u7684\u793c\u7269\u548c\u5c0f\u661f\u661f\u5566~\",\"download\":\"http://xxx/android/x/x.apk\"}. @l12ab \njson.trim().startsWith(\"{\")   >   JSONObject\njson.trim().startsWith(\"[\")   >   JSONArray\nelse > \u975e\u6cd5json\u683c\u5f0f. 1.2.21\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898. \u95ee\u9898\u5c31\u5728pictureList\u8fd9\u4e2aJSONArray\u5916\u9762\u52a0\u4e86\u53cc\u5f15\u53f7\uff0c\"[\\\"http://static.oschina...]\"\uff0cMySQL\u8fd9\u8fb9\u4e0d\u7ba1\u7528VarChar\u8fd8\u662fJSON\u5b58\u50a8\uff0c\u53d6\u51fa\u6765\u90fd\u4f1a\u81ea\u52a8\u52a0\u4e0a\u53cc\u5f15\u53f7\uff0c\u8bf7\u95ee\u6709\u6ca1\u6709\u529e\u6cd5\u53bb\u9664\uff08\u4e0d\u5f71\u54cd\u6b63\u5e38\u7684\u5b57\u7b26\u4e32\uff09\uff1f\u5982\u679c\u80fd\u5728MySQL\u8fd9\u8fb9\u89e3\u51b3\u66f4\u597d\u3002. \n. \u83b7\u53d6\u5355\u4e2aUser\u7528parseObject\u4e5f\u662f\u8fd9\u6837. @googleweb \u4f1a\u901a\u8fc7\uff0c\u53ea\u662f\u4f1a\u5f53\u6210\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6570\u7ec4\ud83d\ude02. @shenan4321 org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl cannot be cast to java.lang.String\n\u5f3a\u8f6c\u9519\u8bef\uff0cEStringToStringMapEntryImpl\u4e0d\u80fd\u7528getString\u65b9\u6cd5. @jainh try adding getter and setters in all of your classes which need to be parsed. @heyzhuyue \nJSONObject.java\npublic double getDoubleValue(String key). @LSL1618 \u53ef\u4ee5\u7528APIJSON\u91ccJSON\u7c7b\u7684\u4e24\u4e2a\u65b9\u6cd5\nboolean isJSONObject(Object obj)\nboolean isJSONArray(Object obj)\nhttps://github.com/TommyLemon/APIJSON/blob/master/APIJSON(Server)/APIJSON(Idea)/src/main/java/zuo/biao/apijson/JSON.java. @LSL1618 \u53ef\u4ee5\u7528APIJSON\u91ccJSON\u7c7b\u7684\u4e24\u4e2a\u65b9\u6cd5\nboolean isJSONObject(Object obj)\nboolean isJSONArray(Object obj)\nhttps://github.com/TommyLemon/APIJSON/blob/master/APIJSON(Server)/APIJSON(Idea)/src/main/java/zuo/biao/apijson/JSON.java. User\u53d8\u6210\u4e86\n{\"$ref\":\"$.0.User\"}\n\u539f\u672c\u662f\n{\"id\":38710,\"sex\":0,\"name\":\"TommyLemon\",\"certified\":true,\"tag\":\"Android&Java\",\"phone\":13000038710,\"head\":\"http://static.oschina.net/uploads/user/1218/2437072_100.jpg?t=1461076033000\",\"date\":1485948110000,\"friendIdList\":[82003,82005,90814,82004,82009,70793],\"pictureList\":[\"http://static.oschina.net/uploads/user/1218/2437072_100.jpg?t=1461076033000\",\"http://common.cnblogs.com/images/icon_weibo_24.png\"]}\n. \u53cd\u590d\u5c1d\u8bd5\u591a\u6b21\uff0c\u53d1\u73b0\u5728\u4e0d\u540c\u6570\u5b57key\u5bf9\u5e94\u7684\u503c\u91cc\u6709\u76f8\u540c\u503c\u65f6\u90fd\u4f1a\u51fa\u73b0\u540c\u6837\u7684\u95ee\u9898\u3002\u611f\u89c9\u662fFastJSON\u6839\u636eid\u7684\u538b\u7f29\u7b97\u6cd5\u5bfc\u81f4\u7684\u3002\u6253\u5370\u6709\u95ee\u9898\uff0c\u4f46\u80fd\u6b63\u5e38\u8bfb\u53d6\uff0c\u76ee\u524d\u4e0d\u5f71\u54cd\u4f7f\u7528. @kimmking \u8fd9\u4e2a\u6211\u77e5\u9053\uff0c\u4f46fastjson\u62a5\u9519\u4e0d\u8be6\u7ec6\u4e5f\u662f\u4e2a\u5927\u95ee\u9898\uff0c\u5b57\u6bb5\u592a\u591a\uff0c\u4e1a\u52a1\u592a\u6742\uff0c\u6392\u9664\u6cd5\u7528\u7740\u597d\u7d2f\ud83d\ude0c\nJava\u5c01\u88c5\u7c7b\u578b\u81ea\u52a8\u8f6c\u57fa\u672c\u7c7b\u578b\u90fd\u5751\u4e86\u6211\u597d\u51e0\u6b21\u4e86\uff0c\u6240\u4ee5\u6211\u5728BaseModel\u91cc\u5c01\u88c5\u4e86\u4e00\u4e9b\u5bf9\u5e94\u7684 public type value(Type v) \u51fd\u6570\u6765\u89e3\u51b3\ud83d\ude01\nhttps://github.com/TommyLemon/APIJSON/blob/master/APIJSON-Java-Server/APIJSON-Idea/src/main/java/apijson/demo/server/model/BaseModel.java. @kimmking \u8bed\u6cd5\u7cd6\uff1fkotlin\u52a0\u4e86\u4e00\u5927\u5806\ud83d\ude02. \u88ab\u52a0\u5230fastjson\u6d4b\u8bd5\u7528\u4f8b\u4e86\u54c8\u54c8\uff01. @wenshao @LambdaV5 @destinyd\n\u5509\uff0cfastjson \u4e0e realm \u7684\u517c\u5bb9 \u771f\u662f\u4e2a\u5927\u5751\uff0c\n\u5c1d\u8bd5\u4e86\u5404\u79cd\u65b9\u6cd5\uff0c\u76ee\u524d\u5df2\u89e3\u51b3\uff0c\u5c1a\u672a\u53d1\u73b0\u65b0\u5f15\u5165\u95ee\u9898\n```java\n    /*\u5b9e\u4f53\u7c7b\u8f6cjson\n     * @param obj\n     * @return\n     /\n    public static String toJSONString(final Object obj) {\n        if (obj instanceof String) {\n            return (String) obj;\n        }\n        try {\n            PropertyFilter filter = new PropertyFilter() {\n                @Override\n                public boolean apply(Object object, String name, Object value) {\n                    if (object instanceof Realm\n                            || object instanceof OsSharedRealm\n                            || object instanceof RealmSchema\n                            || object instanceof RealmMigration\n                            || object instanceof RealmNotifier\n                            ) {\n                        return false;\n                    }\n                if (name.equalsIgnoreCase(\"loaded\")\n                        || name.equalsIgnoreCase(\"valid\")\n                        || name.equalsIgnoreCase(\"managed\")\n                        ){\n                    return false;\n                }\n                return true;\n            }\n        };\n\n        return com.alibaba.fastjson.JSON.toJSONString(obj, filter);\n    } catch (Exception e) {\n        Log.e(TAG, \"toJSONString  catch \\n\" + e.getMessage());\n    }\n\n    return null;\n}\n\n```\n\u8003\u8651\u628a\u4ee3\u7801\u63a8\u5230 \n\u81ea\u52a8\u5316\u63a5\u53e3\u4e0e\u6587\u6863 ORM \u5e93 APIJSON\nAndroid \u5feb\u901f\u5f00\u53d1\u6846\u67b6 ZBLibrary\n\u91cc\u9762\u7684 fastjson \u5c01\u88c5\u5de5\u5177\u7c7b JSON.java\uff0c\n\u4f46\u53c8\u4e0d\u60f3\u591a\u5f15\u5165 Realm \u8fd9\u4e2a\u5e93\uff0c\n\u6bd5\u7adf\u6709\u5f88\u591a\u7528\u6237\u4e0d\u7528\u5b83\u3002\u3002\u3002. \u6253\u7b97\u7ed9 fastjson \u53d1 pull request\uff0c\u628a \u6d4b\u8bd5\u7528\u4f8b \u548c \u89e3\u51b3\u65b9\u6848 \u7684\u76f8\u5173\u4ee3\u7801\u63a8\u4e0a\u53bb. ",
    "MapleDev": "\u60a8\u662f\u4e0d\u662f\u4f7f\u7528\u6cdb\u578b\u4e86\uff0c\u4f1a\u6cdb\u578b\u64e6\u9664\u7684\u3002\nLinkedTreeMap cannot be cast to RstLoginBean\n. ",
    "mykite": "\u53ef\u4ee5\u4f7f\u7528TypeReference\n. \u522b\u7684\u7cfb\u7edf\u8fd4\u56de\u7684\u9ed8\u8ba4\u503c 9999 \u8fd8\u662f\u5e26T\u7684\uff0c\u73b0\u5728\u8981\u5bf9\u65b9\u6539\u4e86\n. \u4e0d\u8fc7\u8fd9\u4e2a\u95ee\u9898\u662f\u56e0\u4e3a\u4ec0\u4e48\u539f\u56e0\u4e0d\u652f\u6301\uff0c\u4e0d\u5e26T\u7684\u662f\u53ef\u4ee5\u89e3\u6790\u7684\uff0c\u4fee\u6539\u9ed8\u8ba4\u914d\u7f6e\u540e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6709\u6ca1\u6709\u53ea\u9488\u5bf9\u5f53\u524d\u6709\u6548\u7684\u4e0d\u9700\u8981\u5168\u5c40\u6539\u53d8\u7684\u914d\u7f6e\n. ",
    "wyzssw": "+1  +1 . ",
    "zengcanxiang": "\u53ef\u80fd\u662f\u6211\u770b\u7684\u5730\u65b9\u6709\u95ee\u9898\uff0c\u5728\u8fd9\u4e2a\u754c\u9762\u4e0a\nhttps://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\n. @wenshao  \u989d\uff0c\u9996\u5148\u8fd9\u4e2a\u4ee3\u7801\u6709\u70b9\u95ee\u9898\uff0c\u662f\u901a\u4e0d\u8fc7\u7f16\u8bd1\u7684\uff0c\n\n\u6211\u6839\u636e\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u80fd\u4e0a\u9762\u4ee3\u7801\u7684\u610f\u601d\u662f\u52a0\u4e00\u4e2a\">\"\u5230 \u201cT>\u201d\u540e\u9762\uff0c\u4f46\u662f\uff0c\u9700\u8981class\u4e3a\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u5b9e\u5728\u662f\u627e\u4e0d\u5230 ~~\uff0c\u6211\u8fd9\u8fb9\u7684\u6e90\u7801\u662f\u8fd9\u6837\u7684\n\n\u4f8b\u5b50\u4e2d\u81ea\u5b9a\u4e49\u7684Response\u6ca1\u6709Class\u53c2\u6570\uff0cTypeReference\u4e5f\u65e0\u6cd5\u63a5\u6536Class\u53c2\u6570....\n. @wenshao Android\u7248\u6e90\u7801\u548cjavaWeb\u7248\u4e0d\u4e00\u6837\u554a\uff0c\u8fd9\u4e2aTypeReference Android\u7248\u4e0d\u652f\u6301\u6cdb\u578b\u8f6c\u6362\uff1f\uff1f\uff1f\uff1f \u4e3a\u4ec0\u4e48\u6587\u6863\u8bf41.1.49\u5c31\u53ef\u4ee5\u4e86\n\u8fd9\u4e2a\u662f1.2.9\u7684\u6e90\u7801\uff0c\u4e0a\u9762\u7684\u662f1.1.54\u7684\u6e90\u7801\n\n. \u800c\u4e14\u5728\u6cdb\u578b\u662fList\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u662f\u5982\u4f55\u4f7f\u7528class\u6765\u4f20\u5bfc\u5462\u3002\n. @wenshao \u6211\u5728\u4f7f\u7528\u6700\u65b0\u7248\u76841.55\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u6ca1\u6709\u652f\u6301\u4f20\u5165\u53c2\u6570. \u6211\u82e6\u7b49\u597d\u4e45~. ",
    "azy2": "The flag SortField does not do anything; one expects that when that flag is set the resulting JSON has sorted fields, but that's not the case. So com.alibaba.json.bvt.asm.SortFieldTest#test_1 would fail without our fix that explicitly sorts, since the test expects fields to be sorted.\n@wenshao: Are you saying SortField is deprecated and no longer supported or do you have some other fix in mind?\n. ",
    "github-nays": "\u652f\u6301\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c24\u5176\u662f\u590d\u6742JSON\n. ",
    "fabienrenaud": "This month, I am going to publish an article about the benchmark that will give it a lot more visibility.\nI reran the tests yesterday and the results for fastjson are the same.\nLet me know if you think you can soon provide a solution for this issue and I'll do my best to make sure the latest and the greatest of fastjson makes it to the article. :)\n. ",
    "CodeYouth": "\u91cd\u542f\u5e94\u7528\u540e\uff0c\u53c8\u80fd\u6b63\u5e38\u89e3\u6790\u4e86--||| \u7248\u672c 1.2.14\n. \u91cd\u542f\u5e94\u7528\u540e\uff0c\u53c8\u80fd\u6b63\u5e38\u89e3\u6790\u4e86--||| \u7248\u672c 1.2.14\n. \u5199\u8ddf\u8bfb\u7684\u8fc7\u7a0b\u6ca1\u6709\u4fee\u6539\u8fc7\u6587\u4ef6\uff0c\u683c\u5f0f\u4e3a\u4ec0\u4e48\u4f1a\u4e71\u5462\uff1f\n. \u5199\u8ddf\u8bfb\u7684\u8fc7\u7a0b\u6ca1\u6709\u4fee\u6539\u8fc7\u6587\u4ef6\uff0c\u683c\u5f0f\u4e3a\u4ec0\u4e48\u4f1a\u4e71\u5462\uff1f\n. ",
    "yemengsky": "@wenshao \u8fd9\u4e2a\u6211\u662f\u60f3\u4fdd\u7559\u4e24\u4e2a\u659c\u6760\u7684\u3002\n. \u6211\u8ba4\u4e3aJSON\u89e3\u6790\u7684\u8bdd\uff0c\u8fd8\u662f\u6700\u597d\u4e0d\u8981\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u5427\n. ",
    "wangdao": "@wenshao \u597d\u7684\uff0c\u8c22\u8c22\u4e86\n. ",
    "elsennov": "Wow so fast! Thanks!\n. Has it been released? If it has, i will close it @wenshao \nThanks\n. Ah ok!\n. ",
    "codefan": "1.2.14\u7248\u672c\u8fd8\u662f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728738\u884c\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 0\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:738)\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:919)\n. \u975e\u5e38\u611f\u8c22 wenshao  \u8fd9\u4e48\u53ca\u65f6\u7684\u56de\u590d\u3002 \u6211\u4eca\u5929\u91cd\u5199\u4e86\u4e00\u4e0b\u4ee3\u7801\u5c31\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u9519\u8bef\uff0c\u53ef\u80fd\u662f\u6211\u7406\u89e3\u7684\u95ee\u9898\u3002\u4e24\u6bb5\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n public static void toOptInfo(){\n        try {\n        String text = FileIOOpt.readStringFromFile(\"D:\\Projects\\RunData\\optinfo.josn\");\n        JSONObject jsonMap = (JSONObject)JSON.parse(text);\n        for(String skey : jsonMap.keySet()){\n            String str = JSON.toJSONString(jsonMap.get(skey));\n            OptInfo opt =  JSON.parseObject(str, OptInfo.class); \n            System.out.println(opt.getOptName());\n        } \n    } catch (IOException e) {\n        return;\n    }\n   }\npublic static void toOptInfo2(){\n    try {\n        String text = FileIOOpt.readStringFromFile(\"D:\\Projects\\RunData\\optinfo.josn\");\n        JSONObject jsonMap = (JSONObject)JSON.parse(text);\n        for(String skey : jsonMap.keySet()){              \n            OptInfo opt =  jsonMap.getObject(skey, OptInfo.class);\n            System.out.println(opt.getOptName());\n        } \n    } catch (IOException e) {\n        return;\n    }\n}\n```\n\u4e0a\u9762\u7684 toOptInfo \u662f\u4e0d\u62a5\u9519\u7684\uff0ctoOptInfo2 \u4f1a\u62a5\u9519\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0\u3002\u8fd9\u4e24\u4e2a\u5199\u6cd5\u662f\u4e0d\u662f\u4e0d\u7b49\u4ef7\u7684\uff1f\nRunData.zip\n. \u975e\u5e38\u611f\u8c22 wenshao\u53ca\u65f6\u7684\u56de\u590d\u3002 \u90a3\u4e0b\u9762\u8fd9\u79cd\u62a5\u9519\u7b97\u4e0d\u7b97\u95ee\u9898\u5462\uff1f\u8fd8\u662f\u672c\u6765\u5c31\u4e0d\u80fd\u8fd9\u4e48\u4f7f\u7528\uff1f\n. ",
    "HJKCC": "thank you\n. ",
    "lqs0112": "@wenshao \u591a\u8c22\uff0cspring\u5347\u7ea7\u52304.3\uff0c\u4f7f\u75281.2.15\u7248\u7684FastJsonHttpMessageConverter4\u53c2\u6570\u8f6c\u5316\u6ca1\u6709\u95ee\u9898\n. @VictorZeng \u4e4b\u524d\u4e00\u76f4\u4f7f\u7528\u76844.1.16\u7684spring\uff0c\u4f7f\u7528FastJsonHttpMessageConverter\u786e\u5b9e\u4e0d\u652f\u6301\u6cdb\u578b\u8f6c\u5316\u3002\n\u9875\u9762post\u8bf7\u6c42\u53c2\u6570\uff1a\n{\"pageNo\":1,\"cond\":{\"fltNo\":\"ZH9015\",\"arrdep\":\"D\",\"queryDate\":\"1471708800000\"}}\n\u670d\u52a1\u7aef\u65b9\u6cd5\uff1a\nOpRst getFlightsByFltNoCond(@RequestBody PageCond pageCond){\n}\n/\n- \u5206\u9875\u67e5\u8be2\u6761\u4ef6\n- \n- @author liqingshan\n  \n/\n  public class PageCond {\n  private int pageNo;\n  private int pageSize = 10;\nprivate T cond;\npublic int getPageNo() {\n      return pageNo;\n  }\npublic void setPageNo(int pageNo) {\n      this.pageNo = pageNo;\n  }\npublic int getPageSize() {\n      return pageSize;\n  }\npublic void setPageSize(int pageSize) {\n      this.pageSize = pageSize;\n  }\npublic T getCond() {\n      return cond;\n  }\npublic void setCond(T cond) {\n      this.cond = cond;\n  }\n  }\n/\n- \u822a\u73ed\u53f7\u67e5\u8be2\u6761\u4ef6\n- \n- @author liqingshan 2016-01-12\n  \n/\n  public class FltNoCond {\n  private String fltNo;\n  private ArrdepFlag arrdep;\n  private Date queryDate;\n  public String getFltNo() {\n      return fltNo;\n  }\n  public void setFltNo(String fltNo) {\n      this.fltNo = fltNo;\n  }\n  public ArrdepFlag getArrdep() {\n      return arrdep;\n  }\n  public void setArrdep(ArrdepFlag arrdep) {\n      this.arrdep = arrdep;\n  }\n  public Date getQueryDate() {\n      return queryDate;\n  }\n  public void setQueryDate(Date queryDate) {\n      this.queryDate = queryDate;\n  }\n  }\n\u63a5\u6536\u5230\u7684\u7ed3\u679c\uff1a\npageCond.cond\u4e3a\u7a7a\n. ",
    "wukaikailive": "\u8ba9\u51fd\u6570\u4f20\u4e00\u4e2aClass zClass\u8fc7\u6765\uff0c\u7136\u540enew TypeReference>(){};\u5e94\u8be5\u53ef\u4ee5\u505a\u5230\u3002\n. ",
    "wangxin7": "\u5176\u5b9e\u6211\u4e5f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684json\u662f\u5916\u7cfb\u7edf\u4f20\u8fc7\u6765\u7684\uff0c\u547d\u540d\u4e0d\u53ef\u63a7\uff0c\u9996\u5b57\u6bcd\u6709\u65f6\u5927\u5199\u6709\u65f6\u5c0f\u5199\uff0c\u5e0c\u671bfastjson\u53ef\u4ee5\u4fdd\u6301\u5c5e\u6027\u540d\u4e0d\u53d8\uff0c\u6700\u60b2\u5267\u7684\u662f\u9875\u9762\u4e5f\u65e0\u6cd5\uff08\u4e0d\u5141\u8bb8\uff09\u66f4\u6539\uff0cPropertyNamingStrategy\u7684\u914d\u7f6e\u9879\u5e76\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\u3002\u53ef\u80fd\u662f\u6211\u592a\u8d2a\u5fc3\u4e86\uff0c\u54c8\u54c8\u3002\n. \u7ecf\u8fc7\u6211\u4ed4\u7ec6\u6d4b\u8bd5\uff0cfastjson\u786e\u5b9e\u4e0d\u4f1a\u628a\u5355\u5f15\u53f7\u53d8\u6210\u53cc\u5f15\u53f7\uff0c\u6211\u7684\u95ee\u9898\u51fa\u5728SpringMVC\u8eab\u4e0a\uff0c\u8c22\u8c22\u6e29\u5c11\uff01 @wenshao \n. ",
    "tankle": "\u8fd9\u4e2a\u5e76\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u3002\n. ",
    "JeffLu": "\u591a\u8c22\u8ddf\u8fdb\uff0c\u8fd9\u6837\u8bbe\u7f6e\u80af\u5b9a\u662f\u6ca1\u95ee\u9898\u7684\u3002\u6211\u4eec\u4e4b\u524d1.2.6\u7248\u672c\uff0c\u6ca1\u6709\u8bbe\u7f6esupportedMediaTypes\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u6700\u8fd1\u7531\u4e8e\u5176\u4ed6\u4e00\u4e9b\u539f\u56e0\u5347\u7ea7\u5230\u4e861.2.15\uff0c\u5bfc\u81f4http response\u7684content-type\u5c31\u53d8\u6210application/octet-stream\u4e86\u3002\u611f\u89c9\u8fd8\u662f\u9ed8\u8ba4\u5236\u5b9ajson\u7684MediaType\u5408\u7406\u4e00\u4e9b\n. ",
    "WellJay": "@wenshao\nspringboot+spring data jpa+spring mvc\n``` @MappedSuperclass\npublic abstract class BaseUUIDEntity extends BaseEntity {\nprivate static final long serialVersionUID = 1L;\n\nprivate String id;\n\n@Id\n@GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n@GeneratedValue(generator = \"uuid\")\n@Column(name = \"id\", unique = true, nullable = false, length = 36)\npublic String getId() {\n    return id;\n}\n\npublic void setId(String id) {\n    this.id = id;\n}\n\n}\n```\n```\n@Entity\n@Table(name = \"tb_user\")\n@DynamicUpdate\n@Getter\n@Setter\n@AllArgsConstructor\n@NoArgsConstructor\n@Access(AccessType.FIELD) //\u5f3a\u5236hibernate\u5168\u90e8\u8bbf\u95ee\u5b57\u6bb5\u6ce8\u89e3\n@Accessors(chain = true)\npublic class User extends BaseUUIDEntity implements Serializable {\nprivate static final long serialVersionUID = 1L;\n\npublic enum Sex {\n    @MetaData(\"\u7537\")\n    MAN, //\u7537\n    @MetaData(\"\u5973\")\n    WOMAN //\u5973\n}\n\n@Column(name = \"user_name\", length = 20, nullable = false)\n@MetaData(\"\u7528\u6237\u540d\")\nprivate String userName;\n\n@Column(name = \"pass_word\", length = 32)\n@MetaData(\"\u5bc6\u7801\")\nprivate String passWord;\n\n@Column(length = 12)\n@MetaData(\"\u624b\u673a\u53f7\")\nprivate String phone;\n\n@Column(name = \"head_photo\")\n@MetaData(\"\u5934\u50cf\")\nprivate String headPhoto;\n\n@Enumerated(EnumType.STRING)\n@Column(length = 5, columnDefinition = \"varchar(5) default 'MAN'\")\n@MetaData(\"\u6027\u522b\")\nprivate Sex sex;\n\n@Temporal(TemporalType.DATE)\n@MetaData(\"\u751f\u65e5\")\nprivate Date birthday;\n\n@JSONField(serialize = false)\n@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)\n@JoinColumn(name = \"merchant_id\")\nprivate Merchant merchant;\n\n}\n```\n. \u9ebb\u70e6\u4e86\uff0c\u627e\u5230\u4e86\npublic abstract class BaseServiceImpl<T extends PersistableEntity<? extends Serializable>, ID extends Serializable> implements BaseService<T, ID> {\npublic abstract class PersistableEntity<ID extends Serializable> implements Persistable<ID> {\n```\n/*\n * Simple interface for entities.\n * \n * @param  the type of the identifier\n * @author Oliver Gierke\n /\npublic interface Persistable extends Serializable {\n/**\n * Returns the id of the entity.\n * \n * @return the id\n */\nID getId();\n\n/**\n * Returns if the {@code Persistable} is new or was persisted already.\n * \n * @return if the object is new\n */\nboolean isNew();\n\n}\n```\n\u5b50\u7c7b\u8986\u76d6isNew\u52a0\u4e0a@JSONField\u5c31\u641e\u5b9a\u4e86\uff0c\u8c22\u8c22\u3002\u7c97\u5fc3\u4e86\n. \u89e3\u51b3\u4e86\uff0c\u4e0d\u597d\u610f\u601d\nObject {readyState: 4, responseText: \"\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\"\", responseJSON: \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\", status: 400, statusText: \"Bad Request\"}\n\u7531\u4e8e\u4f7f\u7528json\u8f6c\u7684\u5e94\u8be5\u7528responseJSON\uff0c\u800c\u4e0d\u662f\u7528responseText.\n. ",
    "tianhao": "\n--- \u66f4\u65b0(\u5df2\u89e3\u51b3) ---\n\u6628\u5929\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528\u8fd9\u4e2a\u6ce8\u89e3@JSONField(serialize = false), \u4e00\u76f4\u90fd\u4e0d\u884c, \u4eca\u5929\u91cd\u65b0\u542f\u52a8\u540e\u5c31\u53ef\u4ee5\u4e86, \u53ef\u80fd\u662f\u8001\u7248\u672c\u7684\u7f13\u5b58\u6ca1\u6e05\u7406, \u56e7\n\u4e0d\u597d\u610f\u601d, \u6253\u6270\u4e86!\n@wenshao  1.2.15\u7248\u672c,\u5e94\u8be5\u662f\u6700\u65b0\u7248\u5427, \u8fd8\u662f\u4e0d\u80fd\u8fc7\u6ee4\u6389\n//model\u5bf9\u8c61, \u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u6d4b\u8bd5\u4e86\u52a0\u4e0a\u6216\u4e0d\u52a0JSONField \u6ce8\u89e3\npublic class StatisticsInfo {\n    @JSONField(serialize = false)\n    private String spotName;\n    @JSONField(serialize = false)\n    public String getSpotName() {\n        return spotName;\n    }\n// \u901a\u7528\u8fd4\u56de\u7c7b\npublic class ResultResponse {\n    private boolean result;\n    private String msg;\n    private List list;\nController\n@ResponseBody\n    @RequestMapping(\"query.do\")\n    public ResultResponse query(){\n        ResultResponse resp = new ResultResponse();\n        resp.setList(\u67e5\u8be2\u65b9\u6cd5\u8fd4\u56demodel List);\n        return resp;\n  }\n// springmvc \u914d\u7f6e\n<mvc:annotation-driven conversion-service=\"conversionService\">\n        <mvc:message-converters>\n            <bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\" value=\"text/html;charset=UTF-8\"/>\n                <property name=\"fastJsonConfig\">\n                  <bean class=\"com.alibaba.fastjson.support.config.FastJsonConfig\">\n                      <property name=\"serializerFeatures\">\n                          <list>\n                              <value>WriteMapNullValue</value>\n                          </list>\n                      </property>\n                  </bean>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n. \u54cd\u5e94\u901f\u5ea6\u90a3\u4e48\u5feb!!!  \u671f\u5f85\u65b0\u7248\u672c\u53d1\u5e03\n. \ud83d\udc4d , \u53cd\u5e8f\u5217\u5316\u53ef\u5426\u4e5f\u505a\u4e0a\u53bb, \u6211\u4e4b\u524d\u63d0\u51fa\u7684\u662f\u8f93\u51fa\u8f6c\u5316, \u53ef\u5426\u628a\u8f93\u5165\u8f6c\u5316\u4e5f\u505a\u8fdb\u53bb?\n. \u8865\u5145\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\uff1a\n```JAVA\n    @Test\n    public void testXMLGregorianCalendar() {\n        Date now = new Date();\n        XMLGregorianCalendar calendar = UnitBuilder.convertToXMLGregorianCalendar(now);\n        String jsonString = JSON.toJSONString(calendar);\n        // success\n        calendar = JSON.parseObject(jsonString, XMLGregorianCalendar.class);\n    Object toJSON1 = JSON.toJSON(calendar); // debug\u770b\u5230\u662f Long \u7c7b\u578b\n    // \u6240\u4ee5\u8fd9\u91cc\u4f1a\u62a5\u9519\uff1a\n    // error: java.lang.ClassCastException: java.lang.Long cannot be cast to com.alibaba.fastjson.JSONObject\n    //JSONObject jsonObject = (JSONObject) JSON.toJSON(calendar);\n    // \u6240\u4ee5 \u8fd9\u91cc\u80af\u5b9a\u4f1a\u62a5\u9519\uff0c \u56e0\u4e3a jsonObject \u4e0d\u662fJSONObject\u7c7b\u578b\n    //calendar = jsonObject.toJavaObject(XMLGregorianCalendar.class);\n\n    List<XMLGregorianCalendar> calendarList = new ArrayList<>();\n    calendarList.add(calendar);\n    calendarList.add(calendar);\n    calendarList.add(calendar);\n\n    Object toJSON2 = JSON.toJSON(calendarList); // debug \u770b\u5230\u662f JSONArray \u7c7b\u578b\n\n    // success\uff1a \u901a\u8fc7 JSONArray.parseArray \u65b9\u6cd5\u53ef\u4ee5\u6b63\u786e\u8f6c\u6362\n    JSONArray jsonArray = (JSONArray) JSON.toJSON(calendarList);\n    jsonString = jsonArray.toJSONString();\n    List<XMLGregorianCalendar> calendarList1 = JSONArray.parseArray(jsonString, XMLGregorianCalendar.class);\n\n    // \u901a\u8fc7 jsonArray.toJavaList \u65e0\u6cd5\u8f6c\u6362\n    // error: com.alibaba.fastjson.JSONException: can not cast to : javax.xml.datatype.XMLGregorianCalendar\n    List<XMLGregorianCalendar> calendarList2 = jsonArray.toJavaList(XMLGregorianCalendar.class);\n    System.out.println(\"DONE\");\n}\n\n```. \u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898. ",
    "wyh6635": "@wenshao \n\u53c2\u8003\u5982\u4e0b\uff1a\u6709\u9700\u8981\u53ef\u52a0wyh6635\u5fae\u4fe1\uff0c\u8be6\u7ec6\u6c9f\u901a\uff0c\u8c22\u8c22\uff01\n`import java.util.HashMap;\nimport java.util.Map;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.serializer.SerializeConfig;\nimport com.alibaba.fastjson.serializer.SimplePropertyPreFilter;\npublic class MapSerializeTest {\n```\npublic static void main(String[] args) {\n    Map reqDto = new HashMap<>();\n    reqDto.put(\"name\", \"aaaa\");\n    reqDto.put(\"age\", 50);\n    reqDto.put(\"address\", \"\u6df1\u5733\u5357\u5c71\");\nSimplePropertyPreFilter filter = new SimplePropertyPreFilter();\nfilter.getExcludes().add(\"name\");\n\nSerializeConfig.getGlobalInstance().addFilter(Map.class, filter);\nSystem.out.println(JSON.toJSONString(reqDto));\n\n}\n```\n}\n`\n\u671f\u671b\u503c\uff1a{\"address\":\"\u6df1\u5733\u5357\u5c71\",\"age\":50}\n\u8f93\u51fa\u7684\u7ed3\u679c\uff1a{\"address\":\"\u6df1\u5733\u5357\u5c71\",\"name\":\"aaaa\",\"age\":50}\n. \u73af\u5883\uff1ajdk1.8, fastjson 1.2.10, 1.2.11, 1.2.12\n. ",
    "beiliubei": "@wenshao \nSupportArrayToBean \u90e8\u5206\u91c7\u7528\n. #1730 \u91cd\u590d\uff0c\u5173\u95ed. \u4f7f\u7528\u7684\u7248\u672c  compile 'com.alibaba:fastjson:1.1.67.android'. \u79bb\u7ebf\u7684\u9879\u76ee\u9700\u6c42\uff0c\u4f1a\u4eceapi\u4e0b\u8f7d\u51e0\u5341\u5146\u7684\u4e00\u4e2ajson\u6587\u4ef6. +1 as\u7684instant run \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u652f\u6301 @wenshao wen. ",
    "bing163": "fastjson-1.1.36           fastjson-1.1.52  \u90fd\u8bd5\u4e86\uff0c\u62a5\u4e00\u6837\u7684\u9519\uff0cjava.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to com.xining.app.firecontrol.model.ContentList\n. \u7ec8\u4e8e\u53d1\u73b0\u95ee\u9898\u4e86\uff0c\u6211\u7684\u9519\uff0c -keepattributes Signature   \u4e2d\u5355\u8bcd\u62fc\u9519\u4e86\uff0c\u62fc\u6210Singature  \u4e86\uff1b \u73b0\u5728\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u5173\u4e86\u5427\uff0c\u4e0d\u597d\u610f\u601d\uff0c\u6dfb\u9ebb\u70e6\u4e86\n. ",
    "greaterwinner": "\u5bf9\u7cfb\u7edf\u91cc\u9762\u7684\u6240\u6709\u5f02\u5e38\u8fdb\u884c\u4e86\u7edf\u4e00\u5904\u7406\uff0c\u5728\u63a5\u53e3\u8c03\u7528\u7684\u65f6\u5019\u8f93\u51fa\u6807\u51c6\u5316\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4f46\u662f\u5e76\u4e0d\u5e0c\u671b\u8f93\u51fa\u7c7b\u578b\u4fe1\u606f\u3002\u800c\u4e14\u672c\u8eab\u5c31\u6709WriteClassName\u8fd9\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5\u8fd8\u662f\u89c9\u5f97\u8ba9\u7528\u6237\u81ea\u5df1\u80fd\u591f\u63a7\u5236\u662f\u5426\u8f93\u51fa\u6bd4\u8f83\u597d\u3002\n. ",
    "lujun0918": "\u77e5\u9053BUG\u6240\u5728\u4e86\uff0c\u539f\u6765\u521b\u5efa\u8fd9\u4e2aJSON\u7684\u65f6\u5019\u5f0f\u7528String[]\u521b\u5efa\u7684\uff0c\u540e\u9762\u76f4\u63a5\u62ff\u8fd9\u4e2aString[]\u7684JSON\u53bb\u5e8f\u5217\u5316JavaBean,\u6240\u4ee5\u51fa\u73b0\u4e86\u4e0a\u9762\u7684BUG\u3002\n. \u6709\u4e86\uff0c\u627e\u5230\u4e86\u3002. \u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\uff0c\u7528SerializerFeature.IgnoreNonFieldGetter. ",
    "wanglei10500": "\u4f8b\u5982[{\"price\":22.0},{\u201cprice\u201d:10.0}] JSONArray.toString() \u7ed3\u679c\u4f1a\u53d8\u4e3a\"[{\"price\":22},{\u201cprice\u201d:10}]\" \u7c7b\u4f3c\u8fd9\u6837 .0 \u4f1a\u88ab\u53bb\u6389\uff0c\u5728\u4e00\u4e9b\u4f7f\u7528\u573a\u666f\u4f1a\u51fa\u73b0\u95ee\u9898,\u6bd4\u5982\u9700\u8981\u7528\u8fd9\u4e2a\u4e32\u505a\u7b7e\u540d\u548c\u9a8c\u7b7e\uff0c\u4e32\u4f1a\u4e0d\u4e00\u81f4\n. ",
    "zhuangmofei": "\u591a\u8c22\u60a8\u62bd\u65f6\u95f4\u56de\u7b54\uff0c\u7b49\u5f85\u60a8\u7684\u597d\u6d88\u606f\uff01\n. ",
    "voiddog": "``` java\npublic class JsonParseTest extends AppCompatActivity{\n    public void runTest(){\n        long now = System.currentTimeMillis();\n        JSON.toJSON(new RequestData(){});\n        Log.i(\"PARSE TIME\", \" cost time: \" + (System.currentTimeMillis() - now) + \"ms\");\n    }\n}\nabstract class RequestData{\n}\n```\n\u7136\u540e\u8fd0\u884crunTest\u5c31\u4f1a\u5361\u4e3b\uff0cRequestData(){} \u533f\u540d\u5185\u90e8\u7c7b\u4e2d\u7684 this$0 \u4e3a public final\n. ",
    "spiritelf": "\u4f7f\u7528\u6700\u65b0\u7248\u672c\u53ef\u4ee5\u4e86\n. ",
    "Rocky-Hu": "\u5e8f\u5217\u5316\u540e\u7684\u683c\u5f0f\u5462\uff1f \u600e\u4e48\u8bbe\u7f6e\uff1f\u6bd4\u5982\u8bf4\u751f\u6210json\u7684\u65f6\u5019\u5b57\u7b26\u4e32\u5c55\u793a \u683c\u5f0f\u4e3a\u201cyyyy-MM-dd\u201d\u8fd9\u6837. ",
    "ruobing2009": "\u679c\u7136\u53ef\u4ee5\u4e86\uff0c\u8c22\u8c22\n. ",
    "livem": "\u8001\u9879\u76ee\u8fd8\u5728\u7528\u7684 fastjson 1.2.3 \u7248\u672c\u3002\u3002\u3002\n\u5df2\u7ecf\u5728\u8fd9\u91cc http://repo1.maven.org/maven2/com/alibaba/fastjson/  \u627e\u5230 fastjson 1.2.3 \u7684\u6e90\u7801\u4e86^_^\n. ",
    "jackiehff": "@wenshao \u5355\u4e2a\u8bf7\u6c42\u7684\u8bdd\u6570\u636e\u89e3\u6790\u90fd\u633a\u6b63\u5e38\u7684\n. ",
    "imknown": "@wenshao :D\n. ",
    "xihacode": "\u4e0d\u597d\u610f\u601d\uff0c\u6211\u7684model\u6709\u70b9\u95ee\u9898\n. \u4e0d\u597d\u610f\u601d\uff0c\u6211\u7684model\u6709\u70b9\u95ee\u9898\n. ",
    "jarvan4dev": "@wenshao \n. @wenshao \n. @githublaohu user\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u554a\uff0c\u60f3\u8981\u7684\u662f\u683c\u5f0f\u5316\u548c\u4e0d\u8981sortField\u554a\n. @githublaohu user\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u554a\uff0c\u60f3\u8981\u7684\u662f\u683c\u5f0f\u5316\u548c\u4e0d\u8981sortField\u554a\n. @wenshao \u4e3a\u4ec0\u4e48\u4e0d\u8d77\u4f5c\u7528\u5462\uff1f\n. @wenshao \u4e3a\u4ec0\u4e48\u4e0d\u8d77\u4f5c\u7528\u5462\uff1f\n. @githublaohu \u770b\u4e86\u5185\u90e8\u5b9e\u73b0\u7684\uff0c\u6211\u662f\u4e0d\u8981 sortField\uff0c\u4f46\u662ffastjson\u9ed8\u8ba4\u7684\u662fsortField\n. @githublaohu \u770b\u4e86\u5185\u90e8\u5b9e\u73b0\u7684\uff0c\u6211\u662f\u4e0d\u8981 sortField\uff0c\u4f46\u662ffastjson\u9ed8\u8ba4\u7684\u662fsortField\n. @TommyLemon \nint serializerFeture = JSON.DEFAULT_GENERATE_FEATURE & ~SerializerFeature.SortField.getMask();\ntoJSONString(Object object, int defaultFeatures, SerializerFeature... features). @TommyLemon \nint serializerFeture = JSON.DEFAULT_GENERATE_FEATURE & ~SerializerFeature.SortField.getMask();\ntoJSONString(Object object, int defaultFeatures, SerializerFeature... features). @wenshao \n. @wenshao \u4e0d\u597d\u610f\u601d\uff0c\u4e00\u76f4\u5fd8\u8bb0\u63d0\uff1b\npublic interface ICarInfo {\n    String getCarModelNo();\n    default String getDescrip(){\n        return \"\u4f60\u597d\";\n    }\n}\npublic class VehicleModel implements ICarInfo  {\n    private String carModelNo;\n    private String descrip;\n    private int seatCount;\n    public void setCarModelNo(String carModelNo) {\n        this.carModelNo = carModelNo;\n    }\n    public void setDescrip(String descrip) {\n        this.descrip = descrip;\n    }\n    public int getSeatCount() {\n        return seatCount;\n    }\n    public void setSeatCount(int seatCount) {\n        this.seatCount = seatCount;\n    }\n    public String getCarModelNo() {\n        return carModelNo;\n    }\n}\npublic static void main(String[] args) {\n        VehicleModel vehicleModel = new VehicleModel();\n        vehicleModel.setCarModelNo(\"aaaa\");\n        vehicleModel.setSeatCount(10);\n        String str = JSON.toJSONString(vehicleModel);\n        System.out.println(str);\n    }\n\u7ed3\u679c\uff1a\nException in thread \"main\" java.lang.IncompatibleClassChangeError: Found interface com.zuihuibao.test.ICarInfo, but class was expected\n    at Serializer_1.write1(Unknown Source)\n    at Serializer_1.write(Unknown Source)\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:374)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:394)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:382)\n    at com.zuihuibao.test.Test.main(Test.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\n. @wenshao \n. @wenshao JSONType\u6211\u4e5f\u8bd5\u8fc7\u4e86\uff0c\u4e5f\u4e0d\u884c\u554a. @VictorZeng \u8fd9\u662f\u4e3a\u4ec0\u4e48\u554a\uff0c\u6211\u89c9\u5f97WriteNullBooleanAsFalse\u53ea\u662f\u9488\u5bf9Boolean\u7c7b\u578b\u7684\uff0c\u6211\u7684\u7c7b\u578b\u662fObjective\uff0c\u867d\u7136\u662fBoolean\u7684\u7236\u7c7b. @VictorZeng \u8fd9\u662f\u4e3a\u4ec0\u4e48\u554a\uff0c\u6211\u89c9\u5f97WriteNullBooleanAsFalse\u53ea\u662f\u9488\u5bf9Boolean\u7c7b\u578b\u7684\uff0c\u6211\u7684\u7c7b\u578b\u662fObjective\uff0c\u867d\u7136\u662fBoolean\u7684\u7236\u7c7b. ",
    "imliujun": "{\n    \"code\": \"200\",\n    \"msg\": \"\u64cd\u4f5c\u6210\u529f\",\n    \"token\": \"\",\n    \"data\": {\n        \"accept_push\": 1,\n        \"items\": [\n            {\n                \"relation_id\": 12462,\n                \"nickname\": \"29\",\n                \"gender\": 0,\n                \"grade\": 7,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiucrm-test.oss-cn-beijing.aliyuncs.com/robot/1460705770811\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12463,\n                \"nickname\": \"\u54e61\u54e61\u54e61\u9006\u88adwhy\",\n                \"gender\": 0,\n                \"grade\": 54,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/1226_head_20160831020021\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12367,\n                \"nickname\": \"\u53bb\u5427\ud83e\udd14\",\n                \"gender\": 0,\n                \"grade\": 50,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/test_1269_head_20160824154244\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12488,\n                \"nickname\": \"\u6025\u6025\u5982\u5f8b\u4ee4\",\n                \"gender\": 0,\n                \"grade\": 52,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1396_1471940861545\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12489,\n                \"nickname\": \"\u6bcf\u5929\u6b63\u80fd\u91cf\uff5e\u8a89\",\n                \"gender\": 0,\n                \"grade\": 37,\n                \"signature\": \"\u5de5\u5177\u4e86\u5bb6\u91cc\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1628_1471601607282\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12368,\n                \"nickname\": \"\u62f3\u6015\u5c11\u58ee\",\n                \"gender\": 0,\n                \"grade\": 56,\n                \"signature\": \"\u65e0\u9650\u5236\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1914_1472523618816\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12365,\n                \"nickname\": \"666\",\n                \"gender\": 0,\n                \"grade\": 58,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu2440_1471941930217\",\n                \"accept_push\": 1\n            }\n        ]\n    }\n}\n\u8fd9\u4e2ajson\u683c\u5f0f\u662f\u5408\u6cd5\u7684\u3002\n```\npublic class HttpResult {\npublic String code;\npublic String msg;\npublic String token;\n\npublic T data;\n\n}\npublic class RecommendBean {\n    public int accept_push;\n    public List items;\npublic static class ItemsBean {\n    public int relation_id;\n    public int gender;\n    public int empiric;\n    public String signature;\n    public String photo;\n    public int accept_push;\n    public int user_id;\n    public String nickname;//\u6635\u79f0\n}\n\n}\n```\n\u4e0a\u9762\u90a3\u4e32JSON\u89e3\u6790\u6210 HttpResult<RecommendBean>\uff0cdata\u5c5e\u6027\u53d8\u4e3a\u4e86JsonObject\uff0cdata\u6ca1\u6709\u89e3\u6790\u6210RecommendBean\u5bf9\u8c61\n\n{\"code\":\"200\",\"msg\":\"\",\"token\":\"\",\"data\":{\"liveList\":[],\"replayList\":[]}}\npublic class LiveAttentionInfo {\n    public List<LiveList> liveList;\n    public List<ReplayList> replayList;\n}\n\u8fd9\u4e00\u4e32JSON\u7684data\u89e3\u6790HttpResult<LiveAttentionInfo> \u540c\u6837\u6ca1\u6709\u89e3\u6790\u6210\u6cdb\u578b\u3002\ncompile 'com.alibaba:fastjson:1.1.54.android'\n\u89e3\u6790\u65b9\u6cd5\nJSON.parseObject(jsonString, mType, config, featureValues, features != null ? features : EMPTY_SERIALIZER_FEATURES);\n@wenshao \n. {\n    \"code\": \"200\",\n    \"msg\": \"\u64cd\u4f5c\u6210\u529f\",\n    \"token\": \"\",\n    \"data\": {\n        \"accept_push\": 1,\n        \"items\": [\n            {\n                \"relation_id\": 12462,\n                \"nickname\": \"29\",\n                \"gender\": 0,\n                \"grade\": 7,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiucrm-test.oss-cn-beijing.aliyuncs.com/robot/1460705770811\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12463,\n                \"nickname\": \"\u54e61\u54e61\u54e61\u9006\u88adwhy\",\n                \"gender\": 0,\n                \"grade\": 54,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/1226_head_20160831020021\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12367,\n                \"nickname\": \"\u53bb\u5427\ud83e\udd14\",\n                \"gender\": 0,\n                \"grade\": 50,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/test_1269_head_20160824154244\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12488,\n                \"nickname\": \"\u6025\u6025\u5982\u5f8b\u4ee4\",\n                \"gender\": 0,\n                \"grade\": 52,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1396_1471940861545\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12489,\n                \"nickname\": \"\u6bcf\u5929\u6b63\u80fd\u91cf\uff5e\u8a89\",\n                \"gender\": 0,\n                \"grade\": 37,\n                \"signature\": \"\u5de5\u5177\u4e86\u5bb6\u91cc\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1628_1471601607282\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12368,\n                \"nickname\": \"\u62f3\u6015\u5c11\u58ee\",\n                \"gender\": 0,\n                \"grade\": 56,\n                \"signature\": \"\u65e0\u9650\u5236\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu1914_1472523618816\",\n                \"accept_push\": 1\n            },\n            {\n                \"relation_id\": 12365,\n                \"nickname\": \"666\",\n                \"gender\": 0,\n                \"grade\": 58,\n                \"signature\": \"\",\n                \"photo\": \"http://heixiu.oss-cn-beijing.aliyuncs.com/heixiu2440_1471941930217\",\n                \"accept_push\": 1\n            }\n        ]\n    }\n}\n\u8fd9\u4e2ajson\u683c\u5f0f\u662f\u5408\u6cd5\u7684\u3002\n```\npublic class HttpResult {\npublic String code;\npublic String msg;\npublic String token;\n\npublic T data;\n\n}\npublic class RecommendBean {\n    public int accept_push;\n    public List items;\npublic static class ItemsBean {\n    public int relation_id;\n    public int gender;\n    public int empiric;\n    public String signature;\n    public String photo;\n    public int accept_push;\n    public int user_id;\n    public String nickname;//\u6635\u79f0\n}\n\n}\n```\n\u4e0a\u9762\u90a3\u4e32JSON\u89e3\u6790\u6210 HttpResult<RecommendBean>\uff0cdata\u5c5e\u6027\u53d8\u4e3a\u4e86JsonObject\uff0cdata\u6ca1\u6709\u89e3\u6790\u6210RecommendBean\u5bf9\u8c61\n\n{\"code\":\"200\",\"msg\":\"\",\"token\":\"\",\"data\":{\"liveList\":[],\"replayList\":[]}}\npublic class LiveAttentionInfo {\n    public List<LiveList> liveList;\n    public List<ReplayList> replayList;\n}\n\u8fd9\u4e00\u4e32JSON\u7684data\u89e3\u6790HttpResult<LiveAttentionInfo> \u540c\u6837\u6ca1\u6709\u89e3\u6790\u6210\u6cdb\u578b\u3002\ncompile 'com.alibaba:fastjson:1.1.54.android'\n\u89e3\u6790\u65b9\u6cd5\nJSON.parseObject(jsonString, mType, config, featureValues, features != null ? features : EMPTY_SERIALIZER_FEATURES);\n@wenshao \n. \u672c\u6765\u7528\u7684\u662fGSON\uff0c\u6211\u7ed9\u6362\u6210\u4e86fastJson,\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u6211\u627e\u4e86\u4e00\u5929\u7684\u539f\u56e0\uff0c\u521a\u624d\u53c8\u6362\u56deGSON\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\n. \u6211\u5355\u4e2a\u6d4b\u597d\u50cf\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u914d\u5408retrofit2\u8fdb\u884c\u89e3\u6790\u5c31\u51fa\u95ee\u9898\u4e86\u3002\u6211\u8c03\u8bd5\u5230\nJSON.parseObject(jsonString, mType, config, featureValues, features != null ? features : EMPTY_SERIALIZER_FEATURES);\n\u53d1\u73b0mType\u5e26\u4e86\u6cdb\u578b\uff0c\u53ef\u662f\u89e3\u6790\u51fa\u6765\u53d8\u6210\u4e86JSONObject\u6216\u8005JSONArray.\n\u66f4\u6df1\u7684\u6211\u5c31\u6ca1\u6709\u8ddf\u4e0b\u53bb\u4e86\uff0c\u5177\u4f53\u539f\u56e0\u4e5f\u4e0d\u6e05\u695a\n. \u6211\u4f7f\u7528\u7684\u662f\nhttps://github.com/ligboy/retrofit-converter-fastjson\n\u96be\u9053\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5417\uff1f\n\u6211\u8bd5\u8fc7fastjson 1.2.16\u7248\u672c\u548c1.1.54.android\uff0c\u90fd\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\n. \u90a3\u4e48\u6211\u4eec\u7684\u533a\u522b\u5c31\u5728JDK\u4e0a\u9762\u4e86\uff0c\u6211\u7528\u7684\u662fjdk1.7 \n\u6211\u6709\u65f6\u95f4\u518d\u6d4b\u4e00\u4e0b\uff0c\u73b0\u5728\u9879\u76ee\u7d27\u6ca1\u65f6\u95f4\u53bb\u6d4b\u4e86\n. \u80fd\u5426\u652f\u6301\u8fd9\u79cd\u5b9e\u4f53\u7c7b\u7684\u89e3\u6790\u5462\uff1f\nhttps://github.com/imliujun/Jolyglot \u5e93\u5b9e\u73b0\u4e86Gson\u3001Jackson\u3001Moshi \u5bf9\u8fd9\u79cd\u5b9e\u4f53\u7c7b\u8fdb\u884c\u89e3\u6790\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662fFastJson\u89e3\u6790\u4e0d\u4e86\uff0c\u8fd9\u6837\u5bf9\u5e93\u7684\u63a8\u5e7f\u548c\u4f7f\u7528\u8303\u56f4\u8fd8\u662f\u6709\u4e00\u4e9b\u5f71\u54cd\uff0c\u5e0c\u671b\u80fd\u591f\u8d85\u8fc7\u56fd\u5916\u7684\u5e93\u3002. https://github.com/VictorAlbertos/Jolyglot/issues/9\n\u6839\u636e\u6211\u5b9e\u73b0\u7684FastJsonJolyglot\u8dd1\u4e00\u4e0b\u8fd9\u4e2a\u9879\u76ee\u91cc\u7684\u5355\u5143\u6d4b\u8bd5\u5c31\u77e5\u9053\u7ed3\u679c\u4e86. \u6700\u65b0\u7248\u672c\u7684\u6211\u4eca\u5929\u8bd5\u8fc7\u4e86\uff0c\u8fd8\u662f\u4e0d\u884c. @kimmking @wenshao \nhttps://github.com/imliujun/Jolyglot \u6211\u5c06\u5b8c\u6574\u7684FastJsonJolyglot\u548c\u5355\u5143\u6d4b\u8bd5\u4e0a\u4f20\u5230\u8fd9\u4e2a\u4ed3\u5e93\u4e86\n\u6267\u884cFasrJsonSpeakerGenericsTest \u53ef\u4ee5debug\u67e5\u770b\u89e3\u6790\u5931\u8d25\u7684\u539f\u56e0. compile 'com.alibaba:fastjson:1.2.41'\n\n. ",
    "zhengmingliang": "\u8bf7\u95ee\uff0c\u73b0\u5728\u5b9e\u73b0\u8fd9\u6837\u7684API\u4e86\u5417 @wenshao . \u8bf7\u95ee\uff0c\u73b0\u5728\u5b9e\u73b0\u8fd9\u6837\u7684API\u4e86\u5417 @wenshao . ",
    "klioen": "@wenshao \u53c8\u4e00\u5e74\u8fc7\u53bb\u4e86\uff5e. @wenshao \u53c8\u4e00\u5e74\u8fc7\u53bb\u4e86\uff5e. ",
    "shawn-githubs": "2018\u5e74\u4e5f\u8fc7\u53bb\u4e86\uff5e. 2018\u5e74\u4e5f\u8fc7\u53bb\u4e86\uff5e. ",
    "maxinlei": "Thankyou\n. Thankyou\n. ",
    "Coding-Qiang": "it helps a lot, thanks.. ",
    "dongyeforever": "\u6211\u7528\u7684 fastjson 1.2.16  jdk1.8.0_65  retrofit:2.1.0 \u5076\u5c14\u4e5f\u662f\u8fd4\u73b0\u89e3\u6790\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\n\njava.lang.ClassCastException\ncom.alibaba.fastjson.JSONObject cannot be cast to com.profile.bean.UserBean\n. \u63a5\u53e3\u662f\u7c7b\u4f3c\u8fd9\u6837\u7684\uff1a\n@GET(\"group/getGroupUsers\")\n    Observable<HttpResult<List<UserBean>>> getGroupUsers(\n            @Query(\"groupid\") String groupId\n    );\n\n\u5076\u5c14\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\n. ",
    "parcool": "@blackshadowwalker  \u4f60\u8fd9\u662f\u76f4\u63a5\u5728TypeRefrence\u91cc\u5199\u597d\u4e86\u5168\u90e8\u7c7b\u578b\u3002\u4f46\u662f\u8fd9\u79cd\u5c31\u6ca1\u6cd5\u5199\u5b8c\u5168\u90e8\u4e86\uff1a\nFastJsonResponseBodyConverter.java\n@Override\n    public T convert(ResponseBody value) throws IOException {\n        try {\n            return JSON.parseObject(value.string(),new TypeReference<T>(){});\n        } finally {\n            value.close();\n        }\n    }\n\u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u4f9d\u65e7\u5b58\u5728\u3002\u00b7com.alibaba:fastjson:1.1.54.android\u00b7\n. ",
    "lxfeng": "1.1.56.android \u8fd8\u662f\u4f1a\u5076\u73b0\u8fd9\u4e2a\u95ee\u9898 . ",
    "F1ReKing": "@wenshao    1.1.56.android \u8fd8\u662f\u4f9d\u7136\u4f1a\u5076\u73b0\u8fd9\u4e2a\u95ee\u9898. \u5e94\u8be5\u8ddf#803 \u4e00\u6837\u7684  \u76ee\u524d\u7248\u672c\u8fd8\u662f\u6ca1\u89e3\u51b3. \u76ee\u524d\u53d1\u73b0\u662f\u6211\u6ca1\u6709\u6307\u5b9a\u6cdb\u578b\u89e3\u6790\u7684\u7c7b\u578b\u5bfc\u81f4\u7684\uff0c\u52a0\u4e0a\u7c7b\u578b\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u3002. ",
    "nxSin": "\u6211\u662f\u7528\u7684fastjson-1.2.31.jar\uff0c\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u914d\u5408Rrtrofit\u4f7f\u7528\uff0cretrofit\u7248\u672c2.3.0\n```\npublic class BaseResp {\n/**\n * \u540c\u4f20\u53c2\n */\nprivate String reqMethod;\n/**\n * \u540c\u4f20\u53c2\n */\nprivate String reqParam;\n\n/**\n * 0\u6b63\u5e38\uff0c\u975e0\u5f02\u5e38\n */\nprivate String resStatus;\n\n/**\n * \u63a5\u53e3\u8fd4\u56de\u503c\n */\nprivate T resData;\n\npublic String getReqMethod() {\n    return reqMethod;\n}\n\npublic void setReqMethod(String reqMethod) {\n    this.reqMethod = reqMethod;\n}\n\npublic String getReqParam() {\n    return reqParam;\n}\n\npublic void setReqParam(String reqParam) {\n    this.reqParam = reqParam;\n}\n\npublic String getResStatus() {\n    return resStatus;\n}\n\npublic void setResStatus(String resStatus) {\n    this.resStatus = resStatus;\n}\n\npublic T getResData() {\n    return resData;\n}\n\npublic void setResData(T resData) {\n    this.resData = resData;\n}\n\n@Override\npublic String toString() {\n    return \"BaseResp{\" +\n            \"reqMethod='\" + reqMethod + '\\'' +\n            \", reqParam='\" + reqParam + '\\'' +\n            \", resStatus='\" + resStatus + '\\'' +\n            \", resData=\" + resData +\n            '}';\n}\n\n}\n```\n\u4f20\u5165\u8303\u578b\u662fList\uff0c\u5982\u4f7f\u7528\u7684\u65f6\u5019\uff1aBaseResp>\u3002\u4f46\u662f\u83b7\u53d6\u51fa\u6765\u7684List\u662fJSONArray\uff0c\u5176\u4e2d\u542b\u6709\u7684\u662fJSONObject\u3002\u4f7f\u7528\u65f6\u62a5\u5f3a\u8f6c\u9519\u8bef. ",
    "woailol930910": "\u5982\u679c\u4e0d\u4f7f\u7528\u914d\u7f6e\u5462\n. \u8c22\u8c22 \n. ",
    "hynb": "``` java\npublic class WechatUserInfo implements Serializable {\npublic String unionId;\npublic String openId;\npublic String nickname;\npublic int sex;\npublic String province;\npublic String country;\npublic String headimgurl;\n\n}\n```\n@wenshao  WechatUserInfo\u7c7b\u7ed3\u6784\n. Thank you \ud83d\ude04\ud83d\ude04\ud83d\ude04\n. ",
    "watonyweng": "@wenshao OSGI\n. ",
    "SpriMoon": "\u4ec0\u4e48\u65f6\u5019\u80fd\u652f\u6301bundle\u6253\u5305. ",
    "qssq": "\u55ef\uff0c\u6211\u90fd\u6ca1\u6df7\u6dc6\uff0c\u6df7\u6dc6\u540e\u80fd\u4e0d\u80fd\u7528\u6ca1\u6d4b\u8bd5\uff0c\n. ",
    "zhangchaojiong": "@wenshao \u6211\u6628\u665a\u5199\u4ee3\u7801\u521a\u53d1\u73b0\u7684bug\n. ok. ",
    "firekirin67": "@githublaohu \u8c22\u8c22\u4f60\u7684\u56de\u7b54 \u6211\u4f1a\u7ee7\u7eed\u6d4b\u8bd5\u518d\u6765\u786e\u5b9a\n. @githublaohu [''aaaa\",\"bbbbb\"]\"  \u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u4e0d\u5e26\u8f6c\u4e49\u7684 \u7528String\u5f15\u7528\u8be5\u503c\nJSON.toJSONString(str)\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u6210[\\\"aaaa\\\",\\\"bbbbb\\\"]\n. @githublaohu \u53d1\u73b0\u4f7f\u7528SerializerFeature.UseSingleQuotes\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4f46\u662ffield\u90fd\u662f\u7528\u4e86'\u5355\u5f15\u53f7\u5305\u88f9\n. @githublaohu \u5f88\u662f\u7ea0\u7ed3\u554a  \u672c\u8eab\u662f\u4e2ajson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u4e86 \u4f46\u662f\u7528String\u4fdd\u5b58  \u4e4b\u540e\u518d\u5bf9\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u5c31\u8f6c\u4e49\u4e86  \u54ce\n. ",
    "qiyuey": "\u53ef\u4ee5\u8003\u8651\u652f\u6301\u4e00\u4e0b\u554a\uff0cjava8\u7684\u529f\u80fd\u76f8\u6bd4joda\u7684\u8fd8\u662f\u5dee\u4e00\u4e9b. ",
    "huckhuang": "@wenshao \n\u4f7f\u7528\u7248\u672c\uff1a1.1.58.android\n\u5e0c\u671b\u80fd\u591f\u652f\u6301 joda-time\uff0c\u76ee\u524d Android \u6682\u4e0d\u6b63\u5f0f\u652f\u6301 Java 8\uff0c\u6240\u4ee5\u53ea\u80fd\u5f15\u5165 joda-time \u4f9d\u8d56\uff0cAndroid \u7248\u672c\u7684 JSONField \u4f3c\u4e4e\u4e0d\u652f\u6301 serializeUsing\u3002. ",
    "pink-lucifer": "\u4f60\u597d\uff0c\u4e0d\u786e\u5b9a\u8fd9\u4e2aissue \u662f\u5426\u4ecd\u5728\u6d3b\u8dc3\uff0c\u5076\u7136\u641c\u7d22\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u7279\u5b9a\u573a\u5408\uff0c\u7279\u522b\u662f\u65b0\u8001\u7cfb\u7edf\uff08java6/7\u7cfb\u7edf \u4e0e java8 \u65b0\u7cfb\u7edf\u5e76\u5b58\u7684\u60c5\u5f62\u4e0b\uff09\u4e4b\u95f4\u7684\u4ea4\u4e92\u573a\u666f\u4e0b\uff0cjoda-time\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u4ef7\u503c\u7684\u8f85\u52a9\uff0c\u6545\uff0cfastjson\u5bf9\u65e5\u671f\u683c\u5f0f\u8f6c\u6362\u7684\u652f\u6301\u8fd8\u662f\u6709\u4ef7\u503c\u7684\u3002\nAs quick try out... java8 works pretty well, joda still not working yet. . . \nwhereas ... jackson support well with addtional depenciese on jsr310 and joda datatype... \n\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u53ef\u4ee5\u53c2\u8003 Jdk8DateCodec \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684 codec \u6ee1\u8db3\u81ea\u5df1\u7684\u573a\u666f\u3002\u3002\u3002 \n@Data\npublic class Java8DateTime {\n    @JSONField(format = \"yyyy-MM-dd\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"dd-MM-yyyy\")\n    private LocalDate date;\n    @JSONField(format = \"HH:mm:ss\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"hh:mm:ss\")\n    private LocalTime time;\n    @JSONField(format = \"yyyy-MM-dd HH:mm:ss\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"dd-MM-yyyy hh:mm:ss\")\n    private LocalDateTime dateTime;\n}\n@Data\npublic class JodaDateTime {\n    @JSONField(format = \"yyyy-mm-dd\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"dd-MM-yyyy\")\n    private LocalDate date;\n    @JSONField(format = \"HH:mm:ss\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"hh:mm:ss\")\n    private LocalTime time;\n    @JSONField(format = \"yyyy-MM-dd HH:mm:ss\")\n    @JsonFormat\n            (shape = JsonFormat.Shape.STRING, pattern = \"dd-MM-yyyy hh:mm:ss\")\n    private LocalDateTime dateTime;\n}\njava8:\n{\"date\":\"2017-08-07\",\"dateTime\":\"2017-08-07 20:13:11\",\"time\":\"20:13:11\"}\njoda time:\n{\"date\":{\"centuryOfEra\":20,\"chronology\":{\"zone\":{\"fixed\":true,\"iD\":\"UTC\"}},\"dayOfMonth\":7,\"dayOfWeek\":1,\"dayOfYear\":219,\"era\":1,\"fieldTypes\":[{\"durationType\":{\"name\":\"years\"},\"name\":\"year\"},{\"durationType\":{\"name\":\"months\"},\"name\":\"monthOfYear\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[0].durationType\"}},{\"durationType\":{\"name\":\"days\"},\"name\":\"dayOfMonth\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[1].durationType\"}}],\"fields\":[{\"durationField\":{\"name\":\"years\",\"precise\":false,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[0].durationType\"},\"unitMillis\":31556952000},\"leapDurationField\":{\"name\":\"days\",\"precise\":true,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[2].durationType\"},\"unitMillis\":86400000},\"lenient\":false,\"maximumValue\":292278993,\"minimumValue\":-292275054,\"name\":\"year\",\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[0]\"}},{\"durationField\":{\"name\":\"months\",\"precise\":false,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[1].durationType\"},\"unitMillis\":2629746000},\"leapDurationField\":{\"$ref\":\"$.null.fields[0].leapDurationField\"},\"lenient\":false,\"maximumValue\":12,\"minimumValue\":1,\"name\":\"monthOfYear\",\"rangeDurationField\":{\"$ref\":\"$.null.fields[0].durationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[1]\"}},{\"durationField\":{\"$ref\":\"$.null.fields[0].leapDurationField\"},\"lenient\":false,\"maximumValue\":31,\"minimumValue\":1,\"name\":\"dayOfMonth\",\"rangeDurationField\":{\"$ref\":\"$.null.fields[1].durationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[2]\"},\"unitMillis\":86400000}],\"monthOfYear\":8,\"values\":[2017,8,7],\"weekOfWeekyear\":32,\"weekyear\":2017,\"year\":2017,\"yearOfCentury\":17,\"yearOfEra\":2017},\"dateTime\":{\"centuryOfEra\":20,\"chronology\":{\"$ref\":\"$.null.chronology\"},\"dayOfMonth\":7,\"dayOfWeek\":1,\"dayOfYear\":219,\"era\":1,\"fieldTypes\":[{\"$ref\":\"$.null.fieldTypes[0]\"},{\"$ref\":\"$.null.fieldTypes[1]\"},{\"$ref\":\"$.null.fieldTypes[2]\"},{\"durationType\":{\"name\":\"millis\"},\"name\":\"millisOfDay\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[2].durationType\"}}],\"fields\":[{\"$ref\":\"$.null.fields[0]\"},{\"$ref\":\"$.null.fields[1]\"},{\"$ref\":\"$.null.fields[2]\"},{\"durationField\":{\"name\":\"millis\",\"precise\":true,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[3].durationType\"},\"unitMillis\":1},\"lenient\":false,\"maximumValue\":86399999,\"minimumValue\":0,\"name\":\"millisOfDay\",\"range\":86400000,\"rangeDurationField\":{\"$ref\":\"$.null.fields[0].leapDurationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[3]\"},\"unitMillis\":1}],\"hourOfDay\":20,\"millisOfDay\":72792351,\"millisOfSecond\":351,\"minuteOfHour\":13,\"monthOfYear\":8,\"secondOfMinute\":12,\"values\":[2017,8,7,72792351],\"weekOfWeekyear\":32,\"weekyear\":2017,\"year\":2017,\"yearOfCentury\":17,\"yearOfEra\":2017},\"time\":{\"chronology\":{\"$ref\":\"$.null.chronology\"},\"fieldTypes\":[{\"durationType\":{\"name\":\"hours\"},\"name\":\"hourOfDay\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[2].durationType\"}},{\"durationType\":{\"name\":\"minutes\"},\"name\":\"minuteOfHour\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[0].durationType\"}},{\"durationType\":{\"name\":\"seconds\"},\"name\":\"secondOfMinute\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[1].durationType\"}},{\"durationType\":{\"$ref\":\"$.null.fieldTypes[3].durationType\"},\"name\":\"millisOfSecond\",\"rangeDurationType\":{\"$ref\":\"$.null.fieldTypes[2].durationType\"}}],\"fields\":[{\"durationField\":{\"name\":\"hours\",\"precise\":true,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[0].durationType\"},\"unitMillis\":3600000},\"lenient\":false,\"maximumValue\":23,\"minimumValue\":0,\"name\":\"hourOfDay\",\"range\":24,\"rangeDurationField\":{\"$ref\":\"$.null.fields[0].leapDurationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[0]\"},\"unitMillis\":3600000},{\"durationField\":{\"name\":\"minutes\",\"precise\":true,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[1].durationType\"},\"unitMillis\":60000},\"lenient\":false,\"maximumValue\":59,\"minimumValue\":0,\"name\":\"minuteOfHour\",\"range\":60,\"rangeDurationField\":{\"$ref\":\"$.null.fields[0].durationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[1]\"},\"unitMillis\":60000},{\"durationField\":{\"name\":\"seconds\",\"precise\":true,\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[2].durationType\"},\"unitMillis\":1000},\"lenient\":false,\"maximumValue\":59,\"minimumValue\":0,\"name\":\"secondOfMinute\",\"range\":60,\"rangeDurationField\":{\"$ref\":\"$.null.fields[1].durationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[2]\"},\"unitMillis\":1000},{\"durationField\":{\"$ref\":\"$.null.fields[3].durationField\"},\"lenient\":false,\"maximumValue\":999,\"minimumValue\":0,\"name\":\"millisOfSecond\",\"range\":1000,\"rangeDurationField\":{\"$ref\":\"$.null.fields[2].durationField\"},\"supported\":true,\"type\":{\"$ref\":\"$.null.fieldTypes[3]\"},\"unitMillis\":1}],\"hourOfDay\":20,\"millisOfDay\":72792347,\"millisOfSecond\":347,\"minuteOfHour\":13,\"secondOfMinute\":12,\"values\":[20,13,12,347]}}\\\njackson try:\n    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.0'\n    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'\n@Slf4j\npublic class DateTimeJacksonTest {\n    public static void main(String[] args) throws IOException {\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.registerModule(new JavaTimeModule());\n        objectMapper.registerModule(new JodaModule());\n        objectMapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n    Java8DateTime java8DateTime = new Java8DateTime();\n    java8DateTime.setDate(LocalDate.now());\n    java8DateTime.setTime(LocalTime.now());\n    java8DateTime.setDateTime(LocalDateTime.now());\n\n    String json = objectMapper.writeValueAsString(java8DateTime);\n    System.out.println(json);\n\n    JodaDateTime jodaDateTime = new JodaDateTime();\n    jodaDateTime.setDate(org.joda.time.LocalDate.now());\n    jodaDateTime.setTime(org.joda.time.LocalTime.now());\n    jodaDateTime.setDateTime(org.joda.time.LocalDateTime.now());\n\n    String json2 = objectMapper.writeValueAsString(jodaDateTime);\n    System.out.println(json2);\n\n    JodaDateTime parse = objectMapper.readValue(json, JodaDateTime.class);\n    System.out.println(parse);\n}\n\n}\n--- output:\n{\"date\":\"07-08-2017\",\"time\":\"08:32:00\",\"dateTime\":\"07-08-2017 08:32:00\"}\n{\"date\":\"07-08-2017\",\"time\":\"08:32:00\",\"dateTime\":\"07-08-2017 08:32:00\"}\nJodaDateTime(date=2017-08-07, time=08:32:00.000, dateTime=2017-08-07T08:32:00.000)\n. ",
    "johnmiroki": "\u4f60\u7684 datasource \u7684 getter setter \u600e\u4e48\u5199\u7684\nJavaBean \u7684 property \u6307\u7684\u662f getter setter\uff0c\u4e0d\u662f\u53d8\u91cf\n. ",
    "Alexkun": "getter\u548csetter\u90fd\u662f\u6839\u636e\u53d8\u91cf\u81ea\u52a8\u751f\u6210\u7684\uff0c\u5e94\u8be5\u8fd8\u597d\u554a\n. ",
    "charmfocus": "\u5e0c\u671b\u662f\u5982\u679c\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u5f3a\u8f6c\u6210\u529f\uff0c\u5c31\u8f6c\u6362\u6210null\uff0c\u800c\u4e0d\u8981\u629b\u51fa\u5f02\u5e38\n. \u8bbe\u7f6e\u6cdb\u578b\u662f\u7ed9\u4e0d\u540c\u7c7b\u578b\u7528\u7684\uff0c\u6211\u8fd9\u91cc\u53ea\u662f\u60f3\u628afalse\u8f6c\u6362\u6210null\uff0c\u800c\u5e76\u4e0d\u652f\u6301\u3002\u73b0\u5728fastjson\u5df2\u7ecf\u652f\u6301\u7a7a\u5b57\u7b26\u4e32\u8f6c\u6362\u5230null\u4e86\uff0c\u80fd\u5426\u652f\u6301\u7684\u66f4\u5f7b\u5e95\u4e00\u4e9b\uff0c\u6216\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570\uff0c\u8fdb\u884c\u5bb9\u9519\u5904\u7406\n. ",
    "lveliu": "\u5373\u4f7f\u683c\u5f0f\u662f\uff1a2016-09-20 12:30 \u4e5f\u4e00\u6837\u8f6c\u6362\u4e0d\u4e86\uff01\uff01\n. \u55ef\u55ef\uff0c\u662f\u5c11\u4e86\u79d2\uff0c\u4f46\u662f\u5e0c\u671b\u53ef\u4ee5\u50cfandriod\u90a3\u8fb9\u517c\u5bb9\u4e0b\u3002\n. \u610f\u601d\u5c31\u662f\u8bf4\u628a\u670d\u52a1\u7aef\u7684\u6539\u6210\u548candroid\u7684\u65b9\u6cd5protected T cast(DefaultJSONParser parser, Type clazz, Object fieldName, Object val, String format) {\n```\nif (val == null) {\n    return null;\n}\nif (val instanceof java.util.Date) {\n    return (T) val;\n} else if (val instanceof Number) {\n    return (T) new java.util.Date(((Number) val).longValue());\n} else if (val instanceof String) {\n    String strVal = (String) val;\n    if (strVal.length() == 0) {\n        return null;\n    }\nJSONLexer dateLexer = new JSONLexer(strVal);\ntry {\n    if (dateLexer.scanISO8601DateIfMatch(false)) {\n        Calendar calendar = dateLexer.getCalendar();\n\n        if (clazz == Calendar.class) {\n            return (T) calendar;\n        }\n\n        return (T) calendar.getTime();\n    }\n} finally {\n    dateLexer.close();\n}\n\n**DateFormat dateFormat;\n\nif (format != null) {\n    dateFormat = new SimpleDateFormat(format);\n} else {\n    dateFormat = parser.getDateFormat();    \n}\ntry {\n    return (T) dateFormat.parse(strVal);\n} catch (ParseException e) {\n    // skip\n}**\n\nlong longVal = Long.parseLong(strVal);\nreturn (T) new java.util.Date(longVal);\n\n}\nthrow new JSONException(\"parse error\");\n```\n}\u4e00\u6837\u5c31\u53ef\u4ee5\u4e86\u54c7\n. \u90a3\u5c31\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u5728\u65f6\u95f4\u4f20\u8f93\u4e0a\u9762\u6ce8\u610f\u4e86\n. \u6d4b\u8bd5\u4ee3\u7801\u4fee\u6539\u4e3a\uff1a\nString str = \"[\"\u5e74\"]\";\nType[] types = new Type[]{String.class};\nList strings = JSON.parseArray(str, types);\n\u4e5f\u4e0d\u4f1a\u9519\u8bef\u3002. \u6d4b\u8bd5\u4ee3\u7801\u4fee\u6539\u4e3a\uff1a\nString str = \"[\"\u5e74\"]\";\nType[] types = new Type[]{String.class};\nList strings = JSON.parseArray(str, types);\n\u4e5f\u4e0d\u4f1a\u9519\u8bef\u3002. type \u5199\u6210 Type[] types = new Type[]{String.class,String.class,String.class}; \u4e0d\u4f1a\u9519\u8bef\n\u8be5Type \u662f\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6List \u7684\u7c7b\u578b\uff0c\u53ea\u80fd\u83b7\u53d6\u5230\u4e00\u4e2a\u3002\u5982\u679c\u8fd8\u8981\u6839\u636e\u5b9e\u9645\u6570\u636e\u5728\u6765\u91cd\u65b0\u521b\u5efa\u7684\u8bdd\uff0c\u5c31\u6ca1\u5f97\u5fc5\u8981\u4e86\u3002. type \u5199\u6210 Type[] types = new Type[]{String.class,String.class,String.class}; \u4e0d\u4f1a\u9519\u8bef\n\u8be5Type \u662f\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6List \u7684\u7c7b\u578b\uff0c\u53ea\u80fd\u83b7\u53d6\u5230\u4e00\u4e2a\u3002\u5982\u679c\u8fd8\u8981\u6839\u636e\u5b9e\u9645\u6570\u636e\u5728\u6765\u91cd\u65b0\u521b\u5efa\u7684\u8bdd\uff0c\u5c31\u6ca1\u5f97\u5fc5\u8981\u4e86\u3002. @wenshao \u73b0\u5728\u53ea\u6709\u5224\u65ad\u4e3a\u6cdb\u578bList \u65f6\uff0c\u83b7\u53d6\u51fa\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u6210class\uff0c\u5728\u4f7f\u7528 JSON.parseArray(json, class);\n\u8f6c\u6362\u6210\u5bf9\u5e94\u7c7b\u578b\u6570\u7ec4\u4e86\u3002\n       \u9ebb\u70e6\u6e29\u5c11\u4ecb\u7ecd\u4e0b\uff0c\u8fd9\u4e2a\u5728RPC\u4e0b\u90a3\u4e2a\u573a\u666f\u4f1a\u4f7f\u7528\u5230\uff0c\u540e\u9762\u53ef\u80fd\u4f1a\u7528\u5230\u3002. @wenshao \u73b0\u5728\u53ea\u6709\u5224\u65ad\u4e3a\u6cdb\u578bList \u65f6\uff0c\u83b7\u53d6\u51fa\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u6210class\uff0c\u5728\u4f7f\u7528 JSON.parseArray(json, class);\n\u8f6c\u6362\u6210\u5bf9\u5e94\u7c7b\u578b\u6570\u7ec4\u4e86\u3002\n       \u9ebb\u70e6\u6e29\u5c11\u4ecb\u7ecd\u4e0b\uff0c\u8fd9\u4e2a\u5728RPC\u4e0b\u90a3\u4e2a\u573a\u666f\u4f1a\u4f7f\u7528\u5230\uff0c\u540e\u9762\u53ef\u80fd\u4f1a\u7528\u5230\u3002. thinks 1.2.28 \u662f\u8fd9\u6837  1.2.30 \u5df2\u7ecf\u89e3\u51b3. @wenshao  \u53ef\u4ee5\u5173\u95ed\u6b64\u95ee\u9898\uff01 1.2.30 \u5df2\u7ecf\u89e3\u51b3\u8be5\u95ee\u9898\u3002. ",
    "yinbin1yd": "\u5ffd\u7565\u5427\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ea\u57281.2.16\u4e2d\u51fa\u73b0\uff0c\u5347\u5230\u6700\u65b0\u7248\u53c8\u597d\u4e86\uff01\n. ",
    "LaughXP": "@wenshao \n. ",
    "dexteraquatic": "\u6587\u4ef6\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u662f'{'\n. ",
    "Angela-shi": "\u60a8\u597d\uff0c\u8bf7\u95ee\u60a8\u7684\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417. ",
    "chaunceychan": "\u521a\u770b\u4e86\u4e00\u4e0b\u73b0\u5728\u7684master\u5206\u652f\u4e0b\u8fd8\u662f\u6709\u8fd9\u4e2a\u95ee\u9898\u7684\u554a\uff0cIOUtils.java\u7b2c703\u884c\nif (Character.isSurrogate(c)) {\n        return -1;\n } else {\n        da[dp++] = c;\n }. ",
    "waterdream": "1.2.14\n. \u6211\u4eec\u7684\u4ee3\u7801\u662f\u8fd9\u4e48\u4f7f\u7528\u7684\u3002\npublic static <T> OpenInResponse<T> parse(String text, Class<T> type) {\n        OpenInResponse<T> response = JSON.parseObject(text, new TypeReference<OpenInResponse<T>>(type) {\n        });\n        if (response == null) {\n            response = OpenInResponse.fail(-1, \"unkown_error\", text);\n        }\n        return response;\n    }\nfastjson\u7684\u4ee3\u7801\u91cc\u5982\u622a\u56fe\uff0c\u662f\u6bcf\u6b21\u90fdnew\u4e00\u4e2a\u51fa\u6765\n\n. \u548chttps://github.com/alibaba/fastjson/wiki/TypeReference \u94fe\u63a5\u7ed9\u7684\u4f8b\u5b50\u4e00\u6837\u7684\u7528\u6cd5\n. ",
    "weejulius": "b\u7684\u503c\u662f^http://m.1688.com/touch/member/login/\\?done=.*\n. ",
    "ganbing518": "\u5d4c\u5957\u7684\u6570\u7ec4\u53cd\u5e8f\u5217\u53f7\u4e0d\u4e86\n. {\"data\":[{\"project_id\":1,\"project_name\":\"\u6d4b\u8bd51\"},{\"project_id\":2,\"project_name\":\"\u6d4b\u8bd52\"},{\"project_id\":3,\"project_name\":\"\u6d4b\u8bd53\"}],\"errMsg\":\"\",\"status\":200}\uff0c\u6309\u9053\u7406\u5e8f\u5217\u53f7\u540e\uff0c\u6839\u636edata\u7684\u7c7b\u578b\u5e8f\u5217\u5316\u4e3a\u6539\u7c7b\u578b\u7684List\uff0c\u5b9e\u9645\u4e0a[{\"project_id\":1,\"project_name\":\"\u6d4b\u8bd51\"},{\"project_id\":2,\"project_name\":\"\u6d4b\u8bd52\"},{\"project_id\":3,\"project_name\":\"\u6d4b\u8bd53\"}]\u8fd9\u4e2a\u6ca1\u6709\u88ab\u53cd\u5e8f\u5217\u5316\uff0c\u8fd8\u662f\u5b57\u7b26\u4e32\u5b58\u5728\u7684\n. {\"data\":[{\"project_id\":1,\"project_name\":\"\u6d4b\u8bd51\"}],\"errMsg\":\"\",\"status\":200}\uff0cdata\u53ea\u80fd\u88ab\u5e8f\u5217\u5316\u4e3aJSONArray,\u4e0d\u80fd\u5e8f\u5217\u5316\u4e3aLIst data\u7684\u7c7b\u578b\u7684\u5bf9\u8c61\n. CFSResult first = JSON.parseObject(text, first.getClass());\n. public class CFSResult implements Serializable{\n    private static final long serialVersionUID = -3487969361148363299L;\n    //\u6570\u636e\n    private T data; \n    //\u9519\u8bef\u4fe1\u606f\n    private String errMsg;\n    //\u72b6\u6001\u7801\n    private int status;\n}\nCFSResult first = new CFSResult();\nfirst = JSON.parseObject(text, first.getClass());\n\u672c\u6765T\u6211\u6253\u7b97\u7528\u4e00\u4e2aList\u53bb\u53cd\u5e8f\u5217\u5316\u7684\uff0c\u53ef\u662f\u53d1\u73b0\u4e0d\u7ba1\u4ec0\u4e48\u7c7b\u578b\u662f\uff0cT\u90fd\u53ea\u80fd\u662fJSONArray\uff0c\u60f3\u8981\u5e8f\u5217\u5316\u4e3a\u5bf9\u5e94\u7684data\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u91cd\u65b0\u518d\u5e8f\u5217\u5316\u4e00\u6b21\u3002\n. CFSResult first = new CFSResult();\n        first = JSON.parseObject(text, first.getClass());\n        List data = JSON.parseArray(first.getData().toJSONString(), obj);\n        obj\u662fT\u7684class\n. ",
    "LeosinZhang": "\u6211\u4e5f\u89c9\u5f97\u5bb9\u9519\u673a\u5236\u662f\u4e2a\u4e0d\u9519\u7684\u60f3\u6cd5\u3002\u8fd9\u6837\u5728\u89e3\u6790\u65f6\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u4e00\u6761\u6570\u636e\u7684\u5f02\u5e38\u5bfc\u81f4\u6574\u4e2a\u89e3\u6790\u5931\u8d25\u3002\n. ",
    "THEONE10211024": "\u662f\u7684\uff0c\u7c7b\u4f3cAndroid \u539f\u751fJson\u91cc\u7684opt\u65b9\u6cd5\n. ",
    "hsl727261250": "\u8fd9\u4e2a\u95ee\u9898\u8fd8\u6ca1\u89e3\u51b3\u5417?. ",
    "lollipok": "\u4eca\u5929\u66f4\u65b0\u4e86 1.2.20 \u7248\u672c\u53d1\u73b0\uff0c\u53d1\u73b0\u7a7a\u503c\u7684\u5e8f\u5217\u5316\u4e0e\u4e4b\u524d\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u4e4b\u524d\u9ed8\u8ba4\u4e0d\u5e8f\u5217\u5316\u7a7a\u503c\uff0c\u65b0\u7248\u672c\u5e8f\u5217\u5316\u4e86\u7a7a\u503c\uff0c\u4e0d\u5f97\u4ee5\u53c8\u9000\u56de\u4e86\u4e4b\u524d\u7684\u7248\u672c\uff0c\u8bf7\u95ee\uff0c\u65b0\u7248\u672c\u5c31\u8fd9\u4e2a\u95ee\u9898\u600e\u4e48\u4e0e\u4ee5\u524d\u4fdd\u6301\u4e00\u81f4\u3002\n. \u8fd9\u662f\u6211\u7684\u914d\u7f6e\uff0cSpring\u7248\u672c4.2.8\uff0cController\u4f7f\u7528\u4e86@ResponseBody\u6ce8\u89e3\uff0c\u76f4\u63a5\u4f7f\u7528JSON.toJSONString(obj)\u65b9\u6cd5\u6d4b\u8bd5\u4e86\u4e0b\u8f93\u51fa\u7684\u7ed3\u679c\u4e5f\u662f\u4e00\u6837\u3002\u4f7f\u75281.2.15\u52301.2.19\u7248\u672c\u90fd\u8bd5\u4e86\u4e0b\uff0c\u53ea\u67091.2.20\u4e0d\u5bf9\u3002\n```\n\n\n\n\n\nOrderedField\n\n\n\n\nWriteNullStringAsEmpty\nWriteNullListAsEmpty\nSkipTransientField\nWriteNonStringKeyAsString\nWriteDateUseDateFormat\nWriteNullBooleanAsFalse\n\n\n\n<bean id=\"fastJsonHttpMessageConverter\" class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4\">\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>application/json;charset=UTF-8</value>\n        </list>\n    </property>\n    <property name=\"fastJsonConfig\" ref=\"fastJsonConfig\"/>\n</bean>\n\n```\n. ",
    "waitttttttttttttttttttttttting": "@yqeric \u6211\u61c2\u4f60\u7684\u82e6\u8877\uff0c\u6211\u4eec\u8fd9\u8fb9fastjson\u7684\u4f9d\u8d56\u914d\u7f6e\u5728\u4e00\u4e2acommons\u5305\u91cc\uff0c\u5f88\u591a\u4e1a\u52a1\u7ebf\u90fd\u5728\u4f9d\u8d56\uff0c\u56e0\u4e3a\u4e4b\u524d\u7684\u7248\u672c\u9700\u8981\u540c\u65f6\u914d\u7f6eWriteMapNullValue\uff0c\u4f46\u6211\u4eec\u8fd9\u8fb9\u53d1\u73b0\u597d\u591a\u4e1a\u52a1\u7ebf\u90fd\u53ea\u914d\u7f6eWriteNullStringAsEmpty\uff0c\u5b9e\u9645\u4e0a\u6700\u7ec8\u5e8f\u5217\u5316\u65f6\u8fd8\u662f\u4f1a\u5ffd\u7565\u6389\u503c\u4e3anull\u7684\u5b57\u6bb5\uff0c\u4f46\u524d\u7aef\u56e2\u961f\u6bd4\u5982iOS\u8fd9\u8fb9\uff0c\u5c31\u6839\u636e\u6709\u6ca1\u6709\u8fd4\u56de\u8fd9\u4e2a\u5b57\u6bb5\u6765\u505a\u903b\u8f91\u5904\u7406\uff0c\u6240\u4ee5\u5347\u7ea7\u5230\u65b0\u7248\u672c\u540e\uff0c\u5982\u679c\u4e1a\u52a1\u7ebf\u4e0d\u6539\u4e4b\u524d\u7684Spring MVC HttpMessageConverter\u914d\u7f6e\uff0cWriteNullStringAsEmpty\u5c31\u751f\u6548\u4e86\uff0c\u800c\u4e14\u4f1a\u8fd4\u56denull\u5b57\u6bb5\uff0c\u8fd9\u6837\u5230iOS\u8fd9\u8fb9\u5c31\u89e3\u6790\u6210\u4e86\u4e00\u4e2aNSNull\u5bf9\u8c61\uff0c\u4f46\u4ed6\u4eec\u53c8\u6ca1\u6709\u5bf9NSNull\u505a\u5904\u7406\u3002\u6240\u4ee5\u5728\u5347\u7ea7fastjson\u7248\u672c\u65f6\u9700\u8981\u989d\u5916\u505a\u4e0b\u5904\u7406\uff0c\u91cd\u5199FastJsonHttpMessageConverter#setFeatures\uff1a\n@Override\npublic void setFeatures(SerializerFeature... serializerFeatures) {\n    int currentVersion = Integer.valueOf(JSON.VERSION.replace(\".\",\"\"));\n    if (currentVersion < 1220) {\n        super.setFeatures(serializerFeatures);\n        return;\n    }\n\n    boolean hasWriteNullFeature = false;\n    for (SerializerFeature feature : serializerFeatures) {\n        if (WriteMapNullValue == feature) {\n            hasWriteNullFeature = true;\n            break;\n        }\n    }\n\n    // getFastJsonConfig method\uff08since 1.2.11\uff09\n    FastJsonConfig fastJsonConfig = getFastJsonConfig();\n\n    if (hasWriteNullFeature) {\n        fastJsonConfig.setSerializerFeatures(serializerFeatures);\n        return;\n    }\n\n    List<SerializerFeature> serializerFeatureList = new LinkedList<SerializerFeature>(Arrays.asList(serializerFeatures));\n    Iterator<SerializerFeature> featureIterator = serializerFeatureList.iterator();\n    while (featureIterator.hasNext()) {\n        SerializerFeature feature = featureIterator.next();\n        if (WriteNullBooleanAsFalse == feature || WriteNullStringAsEmpty == feature) {\n            featureIterator.remove();\n        }\n    }\n\n    SerializerFeature[] newSerializerFeatures = {};\n    newSerializerFeatures = serializerFeatureList.toArray(newSerializerFeatures);\n    fastJsonConfig.setSerializerFeatures(newSerializerFeatures);\n}`. \u5347\u7ea7\u524d\u7684\u914d\u7f6e\uff1a\n\n<bean id=\"fastJsonHttpMessageConverter\" class=\"com.xxx.commons.converter.FastJsonHttpMessageConverter\">\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>application/json;charset=UTF-8</value>\n            <value>text/html;charset=UTF-8</value>\n        </list>\n    </property>\n    <property name=\"features\">\n        <list>\n            <value>WriteNullBooleanAsFalse</value>\n            <value>QuoteFieldNames</value>\n            <value>WriteDateUseDateFormat</value>\n            <value>WriteNullStringAsEmpty</value>\n        </list>\n    </property>\n</bean>\n\n<mvc:annotation-driven\n        content-negotiation-manager=\"contentNegotiationManager\">\n    <mvc:message-converters register-defaults=\"true\">\n        <ref bean=\"fastJsonHttpMessageConverter\" />\n    </mvc:message-converters>\n</mvc:annotation-driven>\n\n\u5347\u7ea7\u4e4b\u540e\u7684\u914d\u7f6e\uff1a\n<bean id=\"fastJsonConfig\" class=\"com.alibaba.fastjson.support.config.FastJsonConfig\">\n    <!-- SerializerFeature -->\n    <property name=\"serializerFeatures\">\n        <list>\n            <value>WriteDateUseDateFormat</value>\n        </list>\n    </property>\n</bean>\n\n<bean id=\"fastJsonHttpMessageConverter\" class=\"com.tongbanjie.commons.converter.FastJsonHttpMessageConverter\">\n    <!-- MediaTypes -->\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>application/json;charset=UTF-8</value>\n            <value>text/html;charset=UTF-8</value>\n        </list>\n    </property>\n    <!-- FastJsonConfig -->\n    <property name=\"fastJsonConfig\" ref=\"fastJsonConfig\" />\n</bean>.\n",
    "MoonRune": "@wenshao \u8bf7\u95eeandroid\u7248\u672c\u7684TypeReference \u5165\u53c2\u4ec0\u4e48\u65f6\u5019\u80fd\u8865\u4e0a\u5462\u3002. ",
    "hadesvip": "\u6700\u65b0\u7248\u76844.3.3.RELEASE\n. @VictorZeng \u6700\u65b0\u7248\u76844.3.3.RELEASE\n. @VictorZeng  \u89e3\u51b3\u4e86\uff0c\u8c22\u4e86\uff0c\u5b66\u4e60\u4e86\u3002\n. ",
    "wander2016": "cglib\u6216\u8005javassist!\n\u76ee\u524d\u4f7f\u7528WriteClassName \u7279\u6027\u65f6\uff0c\u5e8f\u5217\u5316\u4e4b\u540e\u7684classname\uff1a\"com.xxxx.bean.MyBean_&&_aa\"\uff0c\u518d\u53cd\u5e8f\u5217\u65f6\u4f1a\u62a5\u9519\uff0c\u76ee\u524d\u4f7f\u7528@JSONType\u914d\u7f6etypeName \u6682\u65f6\u89e3\u51b3\u4e86\uff0c\u4f46\u8fd8\u662f\u5efa\u8bae\u4f18\u5316\u4e0b\uff01\nPS:\nSerializeConfig#getObjectWriter()\u5bf9\u4e8e\u4ee3\u7406class\u7684\u5224\u65ad\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u590d\u7528JavaBeanSerializer#writeClassName()\n. ",
    "wendellxoo": "\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u65e0\u8bba\u5e8f\u5217\u5316\u8fd8\u662f\u53cd\u5e8f\u5217\u5316\uff0c\u90fd\u4e0d\u4f1a\u62a5\u9519\uff0c\u5f53\u7136\u524d\u63d0\u6709\u4e2a\u4e24\u4e2a\uff1a\u4e00\uff0c\u4f7f\u7528\u4e86setSuperclass\u65b9\u6cd5\u5c06\u751f\u6210\u7684\u4ee3\u7406\u7684\u7236\u7c7b\u8bbe\u7f6e\u4e3a\u539f\u59cb\u7c7b\u3002\u4e8c\uff0c\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f7f\u7528\u539f\u59cb\u7c7b\uff08\u751f\u6210\u7684\u4ee3\u7406\u7c7b\u4e5f\u65e0\u6cd5\u5f97\u5230class\uff09\u3002\u6240\u4ee5\uff0c\u6211\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\u4e00\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u62a5type not match\uff0c\u4e8c\uff0c\u4f60\u7684\u8bc9\u6c42\u662f\u662f\u4e0d\u662f\u5e0c\u671bWriteClassName\u7684\u65f6\u5019\u5199\u7684\u662f\u539f\u59cbclass name\u800c\u4e0d\u662f\u4ee3\u7406\u7684class name\uff1f\n. ",
    "Luuuuuu": "SerializerFeature.WriteNullStringAsEmpty \u8fd9\u4e2afeature \u5b57\u9762\u610f\u601d\u5e94\u8be5\u662f\u53ea\u5bf9String\u7c7b\u578b\u505a\u5904\u7406\u5427\uff0c\u4f46\u4e3a\u4ec0\u4e48\u73b0\u5728\u5bf9\u6240\u6709\u7c7b\u578b\u90fd\u505a\u4e86\u5904\u7406\uff0c\u5982\u679c\u662f\u975eString\u7c7b\u578b\u7684value\u4e3anull\uff0c\u5219\u4f1a\u5c06null\u5e8f\u5217\u5316\u6210\u201cnull\u201d\uff0c\u8fd9\u4e2a\u611f\u89c9\u4e0d\u662f\u5f88\u5408\u7406\u5440\u3002. \u540c\u95ee\uff1a\u201c\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0a\u51e0\u79cd\u60c5\u51b5\uff0c\u5373\u5b57\u7b26\u4e32=null\uff0c\u5219\u8fd4\u56de\u201c\u201d\uff0c\u590d\u6742\u7c7b\u578b=null,\u5219\u4e0d\u8fd4\u56de\u201d\uff0c\u8be5\u5982\u4f55\u89e3\u51b3\uff1f\n. ",
    "nei10u": "String string = \"{\\\"description\\\":\\\"\\\\\\\\(^o^)/\\\"}\";\n    JSONObject json = JSON.parseObject(string);\n    System.out.println(JSONObject.toJSONString(json).replace(\"\\\\\\\\\",\"\\\\\"));\n\u8fd9\u79cd\u65b9\u5f0f\u611f\u89c9\u4e0d\u4f18\u96c5\u3002\u3002\u3002\n. ",
    "beming": "\u6709\u76f8\u540c\u60c5\u51b5\u51fa\u73b0\u3002\u660e\u5929\u8865\u5145\u4e00\u4e0b\u4fe1\u606f\u3002\n. \u5bf9\u4e86\uff0ccsdn\u4e0a\u4e5f\u6709\u76f8\u5173\u7684\u63d0\u95ee\u3002\n. \u9000\u52301.2.17\u6b63\u5e38\u542f\u52a8. \u6211\u7684library\u6709Jackson\u7684lib\uff1a\njackson-annotations-2.8.2.jar\njackson-core-2.8.2.jar\njackson-databind-2.8.2.jar\njackson-module-jaxb-annotations-2.8.2.jar. \u5b8c\u6574\u7684lib\uff1a\nantlr-2.7.7.jar\nantlr-runtime-4.4.jar\naopalliance-1.0.jar\naspectjrt-1.7.3.jar\naspectjweaver-1.7.3.jar\ncdi-api-1.1.jar\nclassmate-1.3.1.jar\ncommons-beanutils-1.9.3.jar\ncommons-codec-1.9.jar\ncommons-collections-3.2.1.jar\ncommons-collections4-4.1.jar\ncommons-dbcp2-2.0.1.jar\ncommons-fileupload-1.3.2.jar\ncommons-io-2.4.jar\ncommons-lang3-3.5.jar\ncommons-logging-1.2.jar\ncommons-pool2-2.2.jar\nDataTable.jar\ndbfdriver.jar\ndom4j-1.6.1.jar\ndruid-1.0.27.jar\nehcache-2.10.3.jar\nel-api-2.2.jar\nfastjson-1.2.17.jar\nfreemarker-2.3.19.jar\ngeronimo-jta_1.1_spec-1.1.1.jar\nhibernate-commons-annotations-5.0.1.Final.jar\nhibernate-core-5.2.5.Final.jar\nhibernate-ehcache-5.2.5.Final.jar\nhibernate-jpa-2.1-api-1.0.0.Final.jar\nhibernate-validator-5.3.3.Final.jar\nhibernate-validator-annotation-processor-5.3.3.Final.jar\nhibernate-validator-cdi-5.3.3.Final.jar\nhsqldb.jar\njackcess-2.0.4.jar\njackson-annotations-2.8.2.jar\njackson-core-2.8.2.jar\njackson-databind-2.8.2.jar\njackson-module-jaxb-annotations-2.8.2.jar\njakarta-regexp-1.5.jar\njandex-2.0.3.Final.jar\njavacsv.jar\njavassist-3.20.0-GA.jar\njavax.el-2.2.4.jar\njavax.el-api-2.2.4.jar\njavax.inject-1.jar\njavax.ws.rs-api-2.0.jar\njboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar\njboss-logging-3.3.0.Final.jar\njboss-logging-annotations-1.2.0.Beta1.jar\njboss-transaction-api_1.2_spec-1.0.0.Final.jar\njcl-over-slf4j-1.7.5.jar\njoda-time-2.1.jar\njsoup-1.7.1.jar\njsr250-api-1.0.jar\njstl-1.2.jar\njul-to-slf4j-1.7.5.jar\njunit-4.11.jar\nlog4j-1.2.17.jar\nlog4j-over-slf4j-1.7.5.jar\nlogback-classic-1.0.11.jar\nlogback-core-1.0.11.jar\nmysql-connector-java-5.1.38.jar\nojdbc6.jar\nparanamer-2.5.5.jar\npatchca-0.5.0.jar\npoi-3.15.jar\npoi-excelant-3.15.jar\npoi-ooxml-3.15.jar\npoi-ooxml-schemas-3.15.jar\npoi-scratchpad-3.15.jar\nresolver.jar\nserializer.jar\nshiro-all-1.3.2.jar\nslf4j-api-1.7.7.jar\nspring-aop-4.3.4.RELEASE.jar\nspring-aspects-4.3.4.RELEASE.jar\nspring-beans-4.3.4.RELEASE.jar\nspring-context-4.3.4.RELEASE.jar\nspring-context-support-4.3.4.RELEASE.jar\nspring-core-4.3.4.RELEASE.jar\nspring-data-commons-1.12.5.RELEASE.jar\nspring-data-jpa-1.10.5.RELEASE.jar\nspring-expression-4.3.4.RELEASE.jar\nspring-instrument-4.3.4.RELEASE.jar\nspring-instrument-tomcat-4.3.4.RELEASE.jar\nspring-jdbc-4.3.4.RELEASE.jar\nspring-orm-4.3.4.RELEASE.jar\nspring-tx-4.3.4.RELEASE.jar\nspring-web-4.3.4.RELEASE.jar\nspring-webmvc-4.3.4.RELEASE.jar\nsuper-csv-2.2.0.jar\nucanaccess-2.0.9.jar\nvalidation-api-1.1.0.Final.jar\nxelem.jar\nxercesImpl.jar\nxml-apis.jar\nxmlbeans-2.6.0.jar. @wenshao \u80fd\u5e2e\u5fd9\u770b\u770b\u4e48\uff0c\u8c22\u8c22. \u8bf7\u95eedemo\u600e\u4e48\u53d1\u7ed9\u4f60\u5462 @CharkeyQK . \u597d\u7684\uff0c\u4e2d\u5348\u6211\u641e\u4e00\u4e0b. @myoss \u786e\u5b9e\u53ef\u4ee5\u4e86\uff0c\u975e\u5e38\u611f\u8c22\u3002. ",
    "Slahser": "@smallnest \n. \u6392\u67e5\u5230\u4e86\u4f46\u662f\u4e0d\u786e\u5b9a,\u591a\u8c22\u4fee\u590d.\n\u6211\u56de\u6eda\u5230\u5177\u4f53\u54ea\u4e2a\u7248\u672c\u53ef\u4ee5\u907f\u514d\u8be5\u95ee\u9898\u5462?\n\u6bd4\u5982\u652f\u6301jax-rs\u4e4b\u524d\n. \u5df2\u8d5e,\u5173\u95edissue.\n. @wenshao \n65 \u91cc\u9762\u8fd9\u4e2a\u62f7\u8d1d\u7684\u5f62\u5f0f\u662f\u4e0d\u662f\u4e0d\u592a\u79d1\u5b66?\n\u8981\u4e0d\u8981\u63a5\u53d7 @smallnest \u7684PR,\u5c06\u4ed6\u5438\u6536\u4e3acontributor?\n. \u53ef\u662f\u76ee\u524d\u8be5\u529f\u80fd\u662f\u5728fastjson\u7684support package\u4e0b..\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4f9d\u8d56\u8fdb\u6765\u7684\n. #885 \u6765\u81ea\u8fd9\u91ccprovider\u4f5c\u8005\u7684\u4fee\u590d.. \u6682\u65f6fix\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u4f7f\u75281.2.8\u53ca\u4ee5\u524d\u7248\u672c\u7684fastjson. \u6216\u8005\u7b49\u5f85merge \u540e\u7684\u4e0b\u4e00\u6b21Release.. ",
    "lujijiang": "\u90a3fastjson\u4e2d\u8be5\u5b57\u6bb5\u4ec0\u4e48\u65f6\u5019\u79fb\u9664\uff1f\u5f88\u8d39\u795e\u554a\n. ",
    "zishinan": "\u597d\u5427 \u5df2\u7ecf\u81ea\u5df1\u6539\u4e86\u547d\u540d\n. ",
    "sunkiha": "\u5982\u679c\u7528PromotionPlatform\u4f5c\u4e3akey \u4e0d\u7ba1\u503c\u4e3a\u4ec0\u4e48 \u90fd\u89e3\u6790\u62100\n. ",
    "wuwen5": "\u8fd9\u662fjson\u89c4\u8303\uff0c\u662f\u6b63\u786e\u7684\u3002\n. http://www.json.org/json-zh.html\n. @beming  \u662f\u5426\u91cd\u590d\u7684\u95ee\u9898\uff1f \u53c2\u8003 https://github.com/alibaba/fastjson/issues/871#issuecomment-256218318. \u76ee\u524d\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u662fok\u7684\nJava\nOut<Info> out = JSON.parseObject(jString, new TypeReference<Out<Info>>(){});. @dengyj3  \u8fd9\u4e2a\u95ee\u9898\u662f1.2.18\u7248\u672c \u4fee\u590d\u5185\u5b58\u5360\u7528\u95ee\u9898\u5f15\u5165\u7684.\uff081.2.17\u53ef\u4ee5\u4f7f\u7528\uff09\n\u5efa\u8bae\u4e0d\u8981 \u4f7f\u7528new TypeReference<Out<T>>(c2){}\u6bcf\u6b21new\u7684\u5199\u6cd5\uff0c\u53ef\u4ee5\u81ea\u5df1\u5148\u5f04\u4e2amap\u7f13\u5b58\u4e0b\uff0c\u4e0d\u7136fastjson\u5185\u90e8\u7684\u5168\u5c40ParserConfig\u4e2d\u7684IdentityHashMap\u4f1a\u6491\u7206\u5f97.\uff08\u89c1 #849\uff09\n\u8fd9\u4e2a\u95ee\u9898\u6211\u5df2\u63d0\u4ea4\u4e86pull request\uff0c\u5728\u7b49@wenshao\u5ba1\u6838.\n. @dengyj3  \u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u4fee\u590d\uff0c\u8bf7\u4f7f\u75281.2.22\u7248\u672c\u3002. \u7528\u8fc7\u6ee4\u5668\u662f\u53ef\u4ee5\u5b8c\u6210\u4f60\u7684\u9700\u6c42\u7684\uff08\u4e5f\u8bb8\u4e0d\u662f\u6700\u4f73\u65b9\u6848\uff09.\nJava\nJSON.toJSONString(person, (PropertyFilter) (o, s, o1) -> Stream.of(IPerson.class.getMethods()).anyMatch(m -> m.getName().equalsIgnoreCase(\"get\"+s))). @lmm1990 \u53ef\u4ee5\u4f7f\u7528markdown\u6807\u8bb0\u3002\n\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a https://github.com/LearnShare/Learning-Markdown/blob/master/article/extension/code-blocks-and-highlighting.md\n\n\u4e0e\u539f\u6765\u4f7f\u7528\u7f29\u8fdb\u6765\u6dfb\u52a0\u4ee3\u7801\u5757\u7684\u8bed\u6cd5\u4e0d\u540c\uff0c\u8fd9\u91cc\u4f7f\u7528 ``` ``` \u6765\u5305\u542b\u591a\u884c\u4ee3\u7801\uff1a\n\n/*xxx*/. \u6ca1\u6709\u91cd\u73b0\u4f60\u8bf4\u7684\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u8d34\u4e0b\u6d4b\u8bd5\u4ee3\u7801.. @wenshao \u95ee\u9898\u5df2\u91cd\u73b0\uff0c\u8bf7review #949 . \u53ef\u4ee5\u63d0\u4f9b\u4e0b\u80fd\u91cd\u73b0\u7684\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u7684\u6d4b\u8bd5\u4ee3\u7801\u5417\uff1f\n\u4e4b\u524d\u5e8f\u5217\u5316\u7684\u95ee\u9898\u786e\u91cd\u73b0\u4e86\u4e14\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u4f60\u8bf4\u7684\u8fd9\u4e2a\u597d\u50cf\u6ca1\u6cd5\u91cd\u73b0\u54e6\uff0c\u4ec0\u4e48\u573a\u666f\u4f1a\u89e6\u53d1\u5462\uff1f. ResponseWrapper \u6ca1\u6709getter\u65b9\u6cd5.. \u4e2a\u4eba\u7684\u7406\u89e3:\ntoJSON \u662f\u8f6c\u6210K/V\u7684JSONObject\u5bf9\u8c61\uff0c\u4f7f\u7528\u7684javaBean\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\uff0cvalue\u90fd\u662f\u83b7\u53d6\u539f\u5bf9\u8c61\u7684\u503c\uff0c\u662f\u4e0d\u8fdb\u884cjson\u8f6c\u6362\u7684\uff0c\u6ce8\u89e3\u662f\u4e0d\u751f\u6548\u7684\u3002 \u6b64\u540e\u6267\u884ctoString() -->toJsonString() \u662f\u5bf9JSONObject\u8f6cjsonString\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u4f1a\u5904\u7406\u6ce8\u89e3\u7684\u3002\ntoJSONString \u662f\u76f4\u63a5\u4f7f\u7528json\u5e8f\u5217\u5316\u5904\u7406java bean\u5bf9\u8c61\u7684\uff0c\u6ce8\u89e3\u662f\u751f\u6548\u7684\u3002. \u548c #997  \u662f\u91cd\u590d\u7684\u95ee\u9898\uff0c \u6211\u89c9\u5f97\u662fjson-lib\u7684\u95ee\u9898\u3002. \u8fd9\u4e2a\u7528\u4f8b\u6709\u70b9\u5947\u602a\njava\npublic static class Model {\n        public List<Byte>[] values;\n    }\n\u8fd9\u79cd\u7ed3\u6784\u80fd\u91cd\u73b0\u95ee\u9898. \u5728ObjectArrayCodec\u5904\u7406\u7684\u65f6\u5019\u4e22\u5931\u6389List\u6cdb\u578b\u7c7b\u578b\u4e86. @wenshao  1.2.24 \u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u5b58\u5728, @yb16916962 \u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u96c6\u5408\u6570\u7ec4\u5d4c\u5957\u3002\npublic List<Byte>[] values;\n```java\npublic void test_for_issue() throws Exception {\n        Model model = JSON.parseObject(\"{\\\"values\\\":[[1,2,3]]}\", Model.class);\n        assertNotNull(model.values);\n        assertEquals(3, model.values[0].size());\n        assertEquals(Byte.class, model.values[0].get(0).getClass());\n        assertEquals(Byte.class, model.values[0].get(1).getClass());\n        assertEquals(Byte.class, model.values[0].get(2).getClass());\n    }\npublic static class Model {\n    public List<Byte>[] values;\n}\n\n```. @wenshao \u8fd9\u4e2a\u95ee\u9898\u6211\u5c1d\u8bd5\u505a\u4e86\u4fee\u590d\uff0c\u8bf7review #1008. . \u5728\u8fd9\u4e2a\u7528\u4f8b\u4e2d\uff0c\u7684\u786e\u5e94\u8be5\u4ee5\u539f\u59cbjson\u4e32\u6570\u636e\u4e3a\u51c6\u3002\n\n\u6ca1\u6709setter\u65f6, \"{\"list\":[1]}\" --> TestDomain list \u5e94\u8be5\u662f 1\u4e2a\u5143\u7d20, \u8986\u76d6\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684\u503c.\n\u6ca1\u6709setter\u65f6,  \"{\"list\":[]}\" -->  TestDomain list \u5e94\u8be5\u662f 0\u4e2a\u5143\u7d20, \u8986\u76d6\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684\u503c.\n\u6ca1\u6709setter\u65f6,  \"{\"list\":null}\" -->  TestDomain list \u5e94\u8be5\u662f 1\u4e2a\u5143\u7d20,\u4e0d\u8986\u76d6\uff0c\u4fdd\u7559\u6784\u9020\u51fd\u6570\u4e2d\u52a0\u8f7d\u7684.\n\u6709setter\u65f6,  \"{\"list\":null}\" -->  TestDomain list \u5e94\u8be5\u662f null, (\u8986\u76d6).\n\n\u4e2a\u4eba\u89c2\u70b9\uff0c\u5982\u6709\u4e0d\u5bf9\u8bf7\u6307\u6b63.\n1027 \u4e2d\u63d0\u4ea4\u4e86testcase \u548c \u4fee\u590d\u5efa\u8bae\u3002 \u8bf7review.\n@wenshao . \u6709\u51e0\u70b9\u5efa\u8bae\n\n\u6709\u5bf9\u5e94\u7684\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\uff0c\u91cd\u73b0\u95ee\u9898\npath\u5e94\u8be5\u5355\u6b21\u539f\u5b50\u63d0\u4ea4\uff08\u4e0d\u5e94\u6709\u591a\u6b21commits\uff09\n\n\nUse git rebase --interactive --autosquash, git add --patch, and other tools to \"squash\" multiple commits into a single atomic commit.. \u8fd9\u672c\u5c31\u662fIdentityHashMap\u610f\u4e49\u6240\u5728\uff0c\u7279\u610f\u5b9a\u5236\u7684\uff0c\u4e0d\u80fd\u6539\u6210hashCode\uff0c\u5177\u4f53\u4f7f\u7528\u5730\u65b9\u6211\u60f3\u4e0d\u8d77\u6765\u4e86\uff0c\u4f8b\u5982\u5bf9\u5b57\u7b26\u4e32\u7b26\u53f7\u7684\u5904\u7406\u90fd\u4f1a\u7528\u5230IdentityHashMap. \u4f60\u4f7f\u7528\u7684\u7248\u672c\u53f7\u662f\u591a\u5c11\uff1f\u6211\u57281.2.24\u4e2d\u6d4b\u8bd5\u662fok\u7684\u3002\n\n\u4f60\u7684\u53cd\u5e8f\u5217\u5316\u6cdb\u578b\u95ee\u9898\u53ef\u4ee5\u8fd9\u4e48\u5199\nResult<List<Pojo>> result = JSONObject.parseObject(json, new TypeReference<Result<List<Pojo>>>() {});. \u4f60\u6d4b\u8bd5\u7684jdk \u7248\u672c\u591a\u5c11? \u57281.7\u4ee5\u4e0b\u7248\u672c\u51fa\u73b0\u7684\u4e48\uff1f. \u6211\u57281.7\u4ee5\u4e0a\u7684jdk\u6ca1\u6709\u91cd\u73b0\u95ee\u9898,\u672c\u673a\u4e0a\u6ca1\u6709\u88c51.7\u4ee5\u4e0b\u7684jdk\u6ca1\u6cd5\u91cd\u73b0\u3002. \u4e0d\u597d\u610f\u601d\uff0c\u4e4b\u524d\u6d4b\u8bd5Result\u6ca1\u52a0\u6cdb\u578b\uff0c\u6ca1\u6709\u91cd\u73b0\u95ee\u9898\u3002\u6309\u7167\u4f60\u7684\u4ee3\u7801Result<T>\u52a0\u4e0a\u6cdb\u578b\u540e\u786e\u5b9e\u91cd\u73b0\u4e86\u3002. @wenshao \u5173\u4e8e\u8fd9\u4e2a\u4fee\u6539 \u76ee\u524d\u60f3\u5230\u4e24\u79cd\u65b9\u5f0f.\n\nif (fieldValueDeserilizer.getClass().equals(JavaBeanDeserializer.class))\nif (fieldValueDeserilizer instanceof JavaBeanDeserializer && fieldInfo.parserFeatures != 0)\n\n\u4f60\u5efa\u8bae\u90a3\u79cd\u65b9\u5f0f\u597d\u5462\uff1f \u6216\u8005\u6709\u5176\u4ed6\u4fee\u590d\u65b9\u6cd5\u4e48\uff1f\n. json\u683c\u5f0f\u4e0d\u5bf9\uff0c\u5982\u679c\u4f60\u662f\u5728\u4ee3\u7801\u5b57\u7b26\u4e32\u91cc\u9762\u5199\uff0c\u5e94\u8be5\u662f\\\\\\\\,\u8f6c\u4e49.\n\u5982String test1 = \"{\\\"id\\\": 168986793, \\\"name\\\": \\\"\u62a4\u8212\u5b9d\u77ac\u6d01\u8d34\u8eab\u91cf\u591a\u65e5\u7528\\\\\\\\,\u591c\u7528\u536b\u751f\u5dfe5+1\u7247284mm\\\"}\";\n\u6587\u4ef6\u4e2d\u6d4b\u8bd5ok.\ntest.json \njson\n{\"name\":\"\u62a4\u8212\u5b9d\u77ac\u6d01\u8d34\u8eab\u91cf\u591a\u65e5\u7528\\\\,\u591c\u7528\u536b\u751f\u5dfe5+1\u7247284mm\",\"id\":168986793}\njava\nString test2 = Files.readAllLines(Paths.get(new ClassPathResource(\"test.json\").getURI())).get(0);\n        System.out.println(JSON.parseObject(test2));. \u521a\u770b\u4e86\uff0c1.2.28\u4e2d\u6ca1\u6709\u5305\u542b\u4fee\u590d\u5185\u5bb9\uff1f\u662f\u4e0d\u662f\u5305\u6253\u7684\u6709\u95ee\u9898\u5462\uff1f\nmaster\u4e0a\u4ee3\u7801\u662f\u5bf9\u7684\uff0ctags\u7684\u597d\u50cf\u4e0d\u5bf9.\n@wenshao \nhttps://github.com/alibaba/fastjson/commits/1.2.28\nhttps://github.com/alibaba/fastjson/blob/1.2.28/src/main/java/com/alibaba/fastjson/parser/deserializer/DefaultFieldDeserializer.java#L60. JSON.parseObject(json, Feature.OrderedField);\njava\nMap<String,String> params = JSON.parseObject(\"\", new TypeReference<Map<String, String>>() {\n        }, Feature.OrderedField);. @kimmking  \u540e\u7eed\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u5728pull request\u7684\u65f6\u5019 commit messages \u52a0\u4e0a fixed #1226,\u5f53\u8fd9\u6b21pr merge\u540e\u4f1a\u81ea\u52a8\u5173\u95ed\u5173\u8054\u7684issue.\nhttps://help.github.com/articles/closing-issues-via-commit-messages/. \u8fd9\u662f\u5728\u5b89\u5353\u73af\u5883\u4e0b\u5427\uff1f\u73af\u5883\u4fe1\u606f\u53ef\u4ee5\u63d0\u4f9b\u4e0b\uff0c\u662f\u4e0d\u662f\u5806\u5927\u5c0f\u4e0d\u591f\u5462\uff1f. \u6211\u672c\u5730\u6d4b\u8bd5\u662f\u6b63\u5e38\u7684\u54e6\njdk1.8.0_66.jdk\n\n\njava\nwhile (true) {\n            String responseStr2 = \"{value:{'key':'value'}}\";\n            Result<Map<String, Object>> responseObject = JSON.parseObject(responseStr2, new TypeReference<Result<Map<String, Object>>>() {});\n        }\njava\npublic static class Result<T> {\n        public T value;\n    }\n. @FJCDrome \u6211\u662f\u5728java jdk\u73af\u5883\u6d4b\u8bd5\u7684\uff0c \u5947\u602a \u597d\u50cf\u5b89\u5353\u7684\u73af\u5883\u4e0b\u786e\u5b9e\u6709\u95ee\u9898\uff0c\u6211\u5148\u88c5\u4e2a\u5b89\u5353\u73af\u5883\u518d\u8bd5\u8bd5.\n\u53e6\u5916\u4f60\u53ef\u4ee5\u4f7f\u7528\u591a\u53c2\u6570\u7684\u5199\u6cd5\u6d4b\u8bd5\u4e0b\uff0c\u5e26\u53c2\u6570\u7684\u5199\u6cd5\u5185\u90e8\u4f1a\u81ea\u5df1\u7f13\u5b58.\n\u53c2\u8003 https://github.com/alibaba/fastjson/wiki/TypeReference. \njava\nResult<Map<String, Object>> responseObject = JSON.parseObject(responseStr2, getType(String.class, Object.class));\njava\n<K, V> ParameterizedType getType(Class<K> k, Class<V> v) {\n        return (ParameterizedType)new TypeReference<Result<Map<K, V>>>(k, v) {}.getType();\n    }. \u4f60\u4f7f\u7528\u7684\u7248\u672c\u53f7\u662f\u591a\u5c11\uff1f\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u4fee\u590d\u8fc7\u7684.. @kimmking  \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u5728TypeReference\u89e3\u51b3\u6389\u7684\uff0cIdentityHashMap\u6700\u7ec8\u7684key\u662fType\u5bf9\u8c61\u7c7b\u578b\uff0c\u56fa\u5b9a\u7684\uff0c\u5355\u53c2\u548c\u591a\u53c2\u7684\u65f6\u5019\u662f\u7f13\u5b58\u5728ConcurrentHashMap\u4e2d\u7684\uff0c\u8fd9\u79cd\u6d4b\u8bd5\u573a\u666f\u4e0b\u4e0d\u4f1a\u4e00\u76f4\u9012\u589e\u7684\u3002\n@zilong \u5efa\u8bae\u4f60\u518ddebug\u4ed4\u7ec6\u68c0\u67e5\u4e0b\uff0c\u6bd4\u5982\u5faa\u73af10\u6b21\uff0c\u68c0\u67e5key\u7684\u5730\u5740\uff0c \u6211\u6ca1\u6709\u91cd\u73b0\u4f60\u8bf4\u7684\u95ee\u9898\uff0c\u5982\u679c\u6709\u95ee\u9898\u4f60\u53ef\u4ee5\u518d\u63d0\u4f9b\u8be6\u7ec6\u4fe1\u606f.. see #849 . @zilong \u786e\u8ba4\u4e86\u8fd9\u4e2a\u95ee\u9898\u5728\u5b89\u5353\u7684\u73af\u5883\u4e0b\u5b58\u5728\uff0c\u4e0d\u8fc7\u4f60\u4e4b\u524d\u6d4b\u8bd5\u7684\u7248\u672c\u662f1.2.24 \\1.2.33 \u786e\u8ba4\u4e0b\u4f60\u4e5f\u662f\u5728\u5b89\u5353\u4e0b\u9a8c\u8bc1\u7684\u4e48\uff1f\n\u5b89\u5353\u73af\u5883\u4e0b\u5efa\u8bae\u4f7f\u7528\u5e26\u53c2\u6570\u7684\u5199\u6cd5.\n\u53c2\u8003\u5355\u53c2\u6570 \u548c\u591a\u53c2\u6570\u7684\u4f8b\u5b50. https://github.com/alibaba/fastjson/wiki/TypeReference.\n. @vipcxj  \u81ea\u5df1\u63d0\u7684issue\uff0c\u786e\u8ba4\u6ca1\u95ee\u9898\u540e\uff0c\u81ea\u5df1\u53ef\u4ee5close\u54e6. \u7c7b\u90e8\u7c7b\u662f\u5426\u662f\u9759\u6001\u7684\uff1f\u9700\u8981\u662f\u9759\u6001\u7c7b\u90e8\u7c7b\u624d\u884c\u3002. @ma349432587 \u5efa\u8bae\u91cd\u65b0\u62c9\u4e2a\u5206\u652f\u4fee\u6539\u5427\uff0c\u4e0d\u8981\u683c\u5f0f\u5316\u4ee3\u7801\uff0c\u4fdd\u969c\u539f\u5b50\u6027\u63d0\u4ea4(\u8fd9\u4e2apr\u63d0\u4ea4\u4e865\u6b21)\u3002. \u9605\u8bfb\u4e0bjson\u89c4\u8303 http://www.json.org/json-zh.html\n\u5355\u5b57\u7b26\u4e32\u662f\u7531\u53cc\u5f15\u53f7\u5305\u56f4\u7684\u4efb\u610f\u6570\u91cfUnicode\u5b57\u7b26\u7684\u96c6\u5408. \u548c #1520 \u91cd\u590d\u7684\u95ee\u9898.\n\n\njson \u89c4\u8303.\n   http://www.json.org/json-zh.html\n\n\u5355\u5b57\u7b26\u4e32\u662f\u7531\u53cc\u5f15\u53f7\u5305\u56f4\u7684\u4efb\u610f\u6570\u91cfUnicode\u5b57\u7b26\u7684\u96c6\u5408\n\n\n\n\u5176\u5b9ejackson\u4e5f\u662f\u4e00\u6837\u7684\uff0c\n\n\u5982\u679c\u4e0d\u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u6d4b\u8bd5api\u7684\u8fd4\u56de\u503c\u662f11148622114871172443\n\n\n\n\u89e3\u91ca\u4e0b\u8fd9\u4e2a\u539f\u56e0:  \u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684spring\u96c6\u6210jackson,  \u5728Controller\u8fd4\u56deString\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u4f1a\u8fdb\u884cjson\u8f6c\u6362\uff0c\u975eString\u7684\u7c7b\u578b\u4f1a\u7ecf\u8fc7jackson\u5904\u7406\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4f18\u5148\u7ea7\u7684\u539f\u56e0\uff0cspring\u6839\u636e\u8fd4\u56de\u503c\u7c7b\u578b\u9009\u62e9\u8f6c\u6362\u5668\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u8d70String\u7684\u8f6c\u6362\u5904\u7406StringHttpMessageConverter,\u6240\u4ee5\u5c31\u662f\u4f60\u770b\u5230\u7684\u6ca1\u6709\u52a0\u53cc\u5f15\u53f7\u7684\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662fjson\u7684\u8fd4\u56de, \u4ed6\u662f\u4e2a\u7eaf\u5b57\u7b26\u4e32\u7684\u8fd4\u56de.\n. @helloworldtang \u53c2\u8003spring\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668\u987a\u5e8f\uff0c\u4f60\u7684\u4ee3\u7801\u53ef\u4ee5\u8fd9\u6837\u6539\u4e0b\u6d4b\u8bd5\u3002\n```java\n@Override\n    public void configureMessageConverters(List> converters) {\n        FastJsonHttpMessageConverter httpMessageConverter = new FastJsonHttpMessageConverter();\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.QuoteFieldNames,\n                SerializerFeature.WriteEnumUsingToString,\n                SerializerFeature.WriteMapNullValue,\n                SerializerFeature.WriteDateUseDateFormat,\n                SerializerFeature.DisableCircularReferenceDetect);\n        fastJsonConfig.setSerializeFilters((ValueFilter) (o, s, source) -> {\n            if (source == null) {\n                return \"\";\n            }\n            if (source instanceof Date) {\n                return ((Date) source).getTime();\n            }\n            return source;\n        });\n        httpMessageConverter.setFastJsonConfig(fastJsonConfig);\n StringHttpMessageConverter stringConverter = new StringHttpMessageConverter();\n stringConverter.setWriteAcceptCharset(false);\n   //\u589e\u52a0\u4e24\u4e2a\u4f18\u5148\u5904\u7406\u7684\u8f6c\u6362\u7c7b\u578b.\n   converters.add(new ByteArrayHttpMessageConverter());\n   converters.add(stringConverter);\n   converters.add(httpMessageConverter);\n}\n\n.FastJsonHttpMessageConverter\u672c\u8eab\u662f\u6ca1\u95ee\u9898\u7684,\u73b0\u5728\u8fd9\u79cd\u573a\u666f\u9700\u8981\u7684\u662fString\u800c\u5e76\u4e0d\u662fjson\u3002 \u6211\u89c9\u5f97\u8fd9\u4e0d\u662fFastjson```\u7684\u95ee\u9898\u3002\n\n\u4e0d\u7136\u7528\u6237\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528String\u6765\u8fd4\u56dejson\u5b57\u7b26\u4e32\u4e86\u3002\n\n@neil4dong ,\u7528\u6237\u8981\u7684\u5176\u5b9e\u5e76\u4e0d\u662fjson\u5b57\u7b26\u4e32\u4e86\uff0cjson\u5b57\u7b26\u4e32\u7684\u89c4\u8303\u672c\u6765\u5c31\u662f\u5e26\u53cc\u5f15\u53f7\u7684\u3002\u5982\u679c\u8bf4\u5e26\u53cc\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u6b63\u786e\u5904\u7406\uff0c\u8bf4\u660e\u8fd9\u79cd\u573a\u666f\u9700\u8981\u7684\u662ftext\u5b57\u7b26\u4e32\u800c\u4e0d\u662fjson\u3002\u5355\u5b57\u7b26\u4e32\u4e0d\u52a0\u53cc\u5f15\u53f7\u5b83\u5c31\u4e0d\u662fjson\uff0c\u800c\u662f\u666e\u901atext\u3002\n\u5f53\u7136\u53ef\u4ee5\u4f5c\u4e3a\u65b0\u7684\u7279\u6b8a\u7279\u6027\u52a0\u5165,\u6bd4\u5982\u6392\u9664String\u7684\u8f6c\u6362\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u884c\u4e3a\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5f53\u524d\u7684\u7ed3\u679c\u5c31\u662f\u6b63\u786e\u7684\u3002. Feature.AllowArbitraryCommas \u8fd9\u4e2a\u7279\u6027\u5bf9\u5355\u4e2a\u9017\u53f7\u5728\u524d\u9762\u51fa\u73b0\uff0c\u6216\u8005\u540e\u9762\u51fa\u73b0\u591a\u4e2a\u7684\u65f6\u5019\u652f\u6301\u5bb9\u9519\u3002\u4f46\u89c6\u4e4e\u5728\u8fd9\u4e2a\u7528\u4f8b\u7684\u573a\u666f\uff08\u540e\u9762\u5355\u4e2a\u9017\u53f7\uff09\u5728\u89e3\u6790\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u88ab\u9a8c\u51fa\u65e0\u6548\u3002 \u76ee\u524d\u6ca1\u60f3\u5230\u597d\u7684\u529e\u6cd5\u3002 mark\u4e00\u4e0b\u3002. @wangyudongdom \u5e94\u8be5\u9700\u8981\u505a\u4e0brebase,\u627e\u4e0d\u5230\u4f60\u672c\u6b21\u7684commit\u4e86\u3002\n\u7b80\u5355\u7684\u505a\u6cd5\u53ef\u4ee5\u91cd\u65b0\u4ecemaster\u521b\u5efa\u5206\u652f\u6539\u4e0b\u3002 \u770b\u4e0a\u53bb\u4f60\u8fd9\u4e2a\u662f\u57fa\u4e8e1.1.x\u5206\u652f\u505a\u7684\u3002. >  wangyudongdom  wants to merge 1,850 commits into 1.1.46 from master\n@wangyudongdom \u662f\u4e0d\u662f pull reuqest \u53d1\u9519\u4e86\uff1f \u8fd9\u4e2a\u662f\u5c06master\u5f80 1.1.46\u76f4\u63a5\u53d1\u8d77\u7684.\n\u8fd9\u662f\u4e2a\u65e0\u6548\u9519\u8bef\u7684\u64cd\u4f5c\uff0c\u5efa\u8bae\u5173\u95ed\u6389.. \u89c1784\u884c. String text = lexer.stringVal();\n\u4ece\u4ee3\u7801\u5b9e\u73b0\u4e0a\u770b\uff0c.stringVal()\u6ca1\u6709\u8fd4\u56de\u4e3a\u7a7a\u7684\u53ef\u80fd\u6027\uff0c\u80fd\u63d0\u4f9btext\u4e3anull\u7684\u7528\u4f8b\u4ee3\u7801\u4e48\uff1f. \u6069\uff0c\u7684\u786e\u6709\u7a7a\u4e32\uff0c\u4f46\u662f\u4e0d\u4f1a\u6709null\u3002\n\u6211\u7684\u89c2\u70b9\n1.\u589e\u52a0lexer.token() == JSONToken.NULL\u7684\u5904\u7406\n2.\u53bb\u6389text == null\u7684\u5224\u65ad\n3.\u53bb\u6389trim\u7684\u5904\u7406\uff0c\u4ec5\u4fdd\u7559\u7a7a\u4e32\u7684\u5224\u65ad\uff0c\u5982\u679c\u662f\u591a\u4e2a\u7a7a\u767d\u7b26\uff0c\u662f\u539f\u59cb\u6570\u636e\u9519\u8bef\u3002. \u8fd9\u884c\u662f\u591a\u4f59\u7684\u5417\uff1f. ",
    "antergone": "\u5982\u679c\u662f\u5728{\"name\": \"test\"}\u91cc\u9762\u52a0\u5f15\u53f7\u6bcb\u5eb8\u7f6e\u7591\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4f46\u662f\u53ea\u662f\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u8fd8\u8981\u52a0\u5f15\u53f7\uff0c\u8fd9\u5f88\u4e0d\u65b9\u4fbf\uff0cfastjson\u5e8f\u5217\u5316\u540e\u653e\u5230redis\u7684\u6570\u636e\u5176\u4ed6\u7684\u5de5\u5177\u90fd\u8981\u628a\u5f15\u53f7\u8e22\u51fa\u518d\u89e3\u6790\uff0c\u5176\u4ed6\u5de5\u5177\u5e8f\u5217\u5316\u7684 fastjson\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u90fd\u8981\u8865\u4e00\u5bf9\u5f15\u53f7\u3002\n. ",
    "JacksonTian": "``` js\n$ node\n\nJSON.stringify(\"test\")\n'\"test\"'\n```\n. \n",
    "shijiebei2009": "\u5f88\u7eb3\u95f7\uff0cfastjson\u53cd\u5e8f\u5217\u5316\u51fa\u7684\u5b57\u7b26\u4e32\u4e0d\u5e26\u5f15\u53f7\u5462\uff1f. ",
    "wanwaner": "\u4e0d\u597d\u7528 . ",
    "DreamPWJ": "@JSONType(alphabetic = false)\u52a0\u4e0a\u786e\u5b9e\u4e0d\u751f\u6548. SerializerFeature.MapSortField  \uff0cFeature.OrderedField\u7edf\u4e00\u914d\u7f6e \u80af\u672c\u4e0d\u751f\u6548\n        FastJsonConfig config = new FastJsonConfig();\n        config.setFeatures(\n                Feature.OrderedField\n        );\n        config.setSerializerFeatures(\n                SerializerFeature.MapSortField,\n                //\u4fdd\u7559null\u7684\u5b57\u6bb5\n                SerializerFeature.WriteMapNullValue,\n                //Date\u4f7f\u7528ISO8601\u683c\u5f0f\u8f93\u51fa \u9ed8\u8ba4\u4e3afalse \u4e0d\u4f7f\u7528\u9ed8\u8ba4\u65f6\u95f4\u6233\n                SerializerFeature.UseISO8601DateFormat\n        );. \u4e0d\u662f\u4e0d\u7a33\u5b9a  \u597d\u50cf\u76f4\u63a5\u5c31\u6ca1\u6548\u679c  \u591a\u6a21\u5757\u9879\u76ee  fastjson\u5728core\u6a21\u5757  . @wenshao  \u73b0\u5728\u8bbe\u7f6eMapSortField\u65e0\u6548\u554a  \u80fd\u4e0d\u80fd\u4e0d\u6309\u9996\u5b57\u6bcd\u6392\u5e8f \u6709\u6ca1\u6709\u65b9\u6cd5  \u90fd\u8bd5\u4e86 \u4e0d\u751f\u6548  \u6709\u65f6\u5019\u6309\u7167\u81ea\u5df1\u7684\u987a\u5e8f\u5f00\u53d1\u9636\u6bb5\u8fd8\u662f\u6709\u5f88\u5927\u5fc5\u8981\u7684  \u56e0\u4e3a\u65b9\u4fbf\u67e5\u770b. \n\n\u5df2\u89e3\u51b3  \u4e0a\u4ee3\u7801\u5171\u4eab. \n\n\u5df2\u89e3\u51b3  \u4e0a\u4ee3\u7801\u5171\u4eab. ",
    "lvkangk": "\u6211gitHub\u91cc\u65b0\u5efa\u4e86\u4e00\u4e2a\u9879\u76ee:lvkTest  \u5728test\u8def\u5f84\u4e0b\u5199\u4e86\u4e00\u4e2atestcase \u60a8\u53ef\u4ee5\u770b\u4e00\u770b   \u8fd9\u5c31\u662f\u6211\u8bf4\u7684\u95ee\u9898. \u6211\u6ca1\u6709\u7528asm    \u6211\u8bd5\u7684\u7ed3\u679c\u662f: \u5f53\u5199test\u65f6 \u628a\u5b9e\u4f53\u7c7b\u76f4\u63a5\u5199\u5230test\u7c7b\u91cc,long\u662f\u53ef\u4ee5\u8f6c\u6362\u6210String\u7684,\u4f46\u662f\u53ea\u8981\u5b9e\u4f53\u7c7b\u548c\u8f6c\u6362\u7684test\u4e0d\u5199\u5728\u540c\u4e00\u4e2a\u7c7b\u91cc, long\u5c31\u8f6c\u4e0d\u6210String , \u8981\u6539\u6210Long\u624d\u53ef\u4ee5. ",
    "dongyuanchun": "\u8fd9\u4e48\u9ad8\u5927\u5c1a\u7684\u4e1c\u897f\u6211\u4e0d\u4f1a\u4f7f~~\uff01 \n\u5443~~  \u8981\u4e0d\u4f60\u52a0\u6211\u4e0bQQ\uff1f\n. \u5475\u5475\uff0c\u611f\u89c9\u5230\u4e86\u3002\n\u4e0d\u8fc7\u8c22\u8c22\u4f60\uff0c\u9009\u4e86\u4e00\u4e2a\u4f4e\u7248\u672c\u7684\u5c31\u597d\u4e86\n\u8c22\u8c22\n. @zhaoxilingcheng JAR\u4e0eJAR\u7684\u53d1\u7248\u65e5\u671f\u76f8\u8fd1  \u5c31\u53ef\u4ee5\u4e86  . @zhaoxilingcheng \u5c31\u662f JAR \u7684\u53d1\u5e03\u662f\u6709\u65f6\u95f4\u7684\n\u4e24\u4e2aJAR \u53d1\u7248\u7684\u65f6\u95f4\u76f8\u8fd1 \u57fa\u672c\u4e0a\u5c31\u6ca1\u5565\u95ee\u9898. ",
    "zhaoxilingcheng": "@dongyuanchun  \u4f60\u597d\uff0c\u9009\u4e86\u4e00\u4e2a\u4ec0\u4e48\u4f4e\u7248\u672c\uff1f. @dongyuanchun \u6ca1\u660e\u767d. \u662f\u8981\u66f4\u6362\u54ea\u4e2a\u9879\u76ee\u7684\u7248\u672c\u5417. \u627e\u5230\u539f\u56e0\u4e86\uff0c\u662f\u56e0\u4e3a\u6211\u626b\u63cfcom\u7684\u539f\u56e0. ",
    "wzqiang1332": "\u8fd9\u4e2a\u95ee\u9898\u6700\u65b0\u7248\u672c\u6709\u5b9e\u73b0\u5417\uff1f. ",
    "dengyj3": "\u53cd\u5e8f\u5217\u5316\u65f6\u7684\u65b9\u6cd5\u5c01\u88c5\u5982\u4e0b\uff1a \n//JsonString to JavaBean\n    public static  T getJsonData(String json, Class clazz){\n        T jd=(T)JSON.parseObject(json, clazz,\n                Feature.IgnoreNotMatch,\n                Feature.AutoCloseSource,\n                Feature.UseObjectArray//,\n                //Feature.SupportArrayToBean\n                );\n        return jd;\n    }. 1\u3001String\u4e32\u4e3a\u5982\u4e0b\uff1a\njava\nString allMethods = \"{\\\"mList\\\":[{\\\"className\\\":\\\"com.qa.scftemplate.contract.ISCFServiceForDyjAction\\\",\\\"methodName\\\":\\\"getArrayInt\\\",\\\"parameterSize\\\":1,\\\"parameters\\\":[{\\\"clazz\\\":\\\"[I\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"}],\\\"returnType\\\":\\\"[I\\\",\\\"url\\\":\\\"tcp://SCFServiceForDyj/SCFServiceForDyjActionService\\\"},{\\\"className\\\":\\\"com.qa.scftemplate.contract.ISCFServiceForDyjAction\\\",\\\"methodName\\\":\\\"getArrayPrimative\\\",\\\"parameterSize\\\":7,\\\"parameters\\\":[{\\\"clazz\\\":\\\"[I\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[F\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[S\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[D\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[J\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[B\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"},{\\\"clazz\\\":\\\"[C\\\",\\\"clsList\\\":null,\\\"isGenericity\\\":false,\\\"value\\\":\\\"\\\"}],\\\"returnType\\\":\\\"[Ljava.lang.String;\\\",\\\"url\\\":\\\"tcp://SCFServiceForDyj/SCFServiceForDyjActionService\\\"}]}\";\n2\u3001\u89e3\u6790\u5982\u4e0b\uff1a \njava\nJsonBean jsonBean = getJsonData(allMethods, JsonBean.class);\n3\u3001getJsonData\u65b9\u6cd5\u5982\u4e0b\uff1a\njava\n    public static <T> T getJsonData(String json, Class<T> clazz){\n        T jd=(T)JSON.parseObject(json, clazz,\n                Feature.IgnoreNotMatch,\n                Feature.AutoCloseSource\n                );\n        return jd;\n    }\n4\u3001JsonBean\u7c7b\u5982\u4e0b\uff1a\njava\nimport java.util.List;\nimport com.tfci.interfaceInfo.entity.SCFMethod;\npublic class JsonBean {\n    private List<SCFMethod> mList;\n    public List<SCFMethod> getmList() {\n        return mList;\n    }\n    public void setmList(List<SCFMethod> mList) {\n        this.mList = mList;\n    }\n}\n5\u3001SCFMethod\u5982\u4e0b\uff1a\njava\nimport java.util.LinkedList;\nimport java.util.List;\npublic class SCFMethod  {\n    public String className;\n    public String url;\n    public String methodName;\n    public int parameterSize;\n    public List<SCFMethodParameter> parameters = new LinkedList<SCFMethodParameter>();\n    public Class<?> returnType; \n    public String getUrl() {\n        return url;\n    }\n    public void setUrl(String url) {\n        this.url = url;\n    }\n    public String getClassName() {\n        return className;\n    }\n    public void setClassName(String className) {\n        this.className = className;\n    }\n    public Class<?> getReturnType() {\n        return returnType;\n    }\n    public void setReturnType(Class<?> returnType) {\n        this.returnType = returnType;\n    }\n    public String getMethodName() {\n        return methodName;\n    }\n    public void setMethodName(String methodName) {\n        this.methodName = methodName;\n    }\n    public int getParameterSize() {\n        return parameterSize;\n    }\n    public void setParameterSize(int parameterSize) {\n        this.parameterSize = parameterSize;\n    }\n    public List<SCFMethodParameter> getParameters() {\n        return parameters;\n    }\n    public void setParameters(List<SCFMethodParameter> parameters) {\n        this.parameters = parameters;\n    }\n}\n6\u3001SCFMethodParameter\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a\njava\nimport java.util.List;\npublic class SCFMethodParameter implements Cloneable{\n    public Class<?> clazz;\n    public Object value;\n    public boolean isGenericity = false;\n    public List<Class<?>> clsList;\n    public boolean getIsGenericity() {\n        return isGenericity;\n    }\n    public void setIsGenericity(boolean isGenericity) {\n        this.isGenericity = isGenericity;\n    }\n    public Object getValue() {\n        return value;\n    }\n    public void setValue(Object value) {\n        this.value = value;\n    }\n    public Class<?> getClazz() {\n        return clazz;\n    }\n    public void setClazz(Class<?> clazz) {\n        this.clazz = clazz;\n    }\n    public List<Class<?>> getClsList() {\n        return clsList;\n    }\n    public void setClsList(List<Class<?>> clsList) {\n        this.clsList = clsList;\n    }\n}\n7\u3001\u6d4b\u8bd5\u7c7b\u5373\u628a\u4e0a\u8ff01\u30012\u653e\u5230main\u65b9\u6cd5\u4e2d\u6267\u884c\uff0c\u62a5\u9519\uff1a\n. @cyberdak\uff0c\u60a8\u597d\uff0c\u8c22\u8c22\u4f60\u7684\u56de\u590d\uff0c\n\u6211\u624d\u53d1\u73b0\u63d0\u4ea4\u7684\u4ee3\u7801\u4e2d\u770b\u4e0d\u5230\u6cdb\u578b\uff0c\u53ea\u6709\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u624d\u80fd\u770b\u5230\n1\u3001\u6309\u4f60\u7684case\u8dd1\u8d77\u6765\u786e\u5b9e\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u6211\u7684JsonBean.java\u4e2d\u662f\u7528\u5230\u6cdb\u578b\uff0c\u5373List\u4e2d\u662fSCFMethod\u5bf9\u8c61\uff08\u5373private List mList;\uff09\uff0c\u4f60\u7684\u7c7b\u4e2d\u672a\u52a0\u5177\u4f53\u7684\u6cdb\u578b\u5bf9\u8c61\uff0c\u6211\u628a\u4f60\u7684\u7c7b\u4fee\u6539\u5982\u4e0b\uff1a\nimport java.util.List;\npublic class JsonBean {\n    private List mList;\n    public List getmList() {\n        return mList;\n    }\n    public void setmList(List mList) {\n        this.mList = mList;\n    }\n    @Override\n    public String toString() {\n        return \"JsonBean [mList=\" + mList + \"]\";\n    }\n}\n\u6211\u7528\u4f60\u7684\u4ee3\u7801\uff0c\u52a0\u4e0a\u6cdb\u578b\u53c2\u6570\uff0c\u540c\u6837\u62a5\u9519\uff1a\nException in thread \"main\" com.alibaba.fastjson.JSONException\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:625)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:339)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:243)\n    at fastjson.test.SCFTest.getJsonData(SCFTest.java:15)\n    at fastjson.test.SCFTest.main(SCFTest.java:10)\nCaused by: java.lang.NullPointerException\n    at java.lang.reflect.Array.newArray(Native Method)\n    at java.lang.reflect.Array.newInstance(Array.java:70)\n    at com.alibaba.fastjson.util.TypeUtils.loadClass(TypeUtils.java:994)\n    at com.alibaba.fastjson.serializer.MiscCodec.deserialze(MiscCodec.java:295)\n    at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:69)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:549)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:189)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_JsonBean.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:621)\n    ... 4 more\n2\u3001\u6211\u590d\u5236\u7684\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff0c\u4f60\u628a\u6cdb\u578b\u90fd\u52a0\u4e0a\u8bd5\u8bd5\uff0c\u6211\u770b\u4f60\u7684\u4ee3\u7801\u4e2d\u628a\u6cdb\u578b\u7684\u5177\u4f53\u7c7b\u90fd\u53bb\u6389\u4e86\uff0c\u5728\u6211\u5b9a\u4e49\u7684\u5b9e\u4f53\u4e2d\u662f\u6709\u7684\uff0c\u96be\u9053\u662f\u56e0\u4e3a\u6cdb\u578b\u7684\u95ee\u9898\u5417\uff1f\n3\u3001\u6211\u628ahttps://github.com/cyberdak/fastjson-issue\u8fd9\u91cc\u7684\u4ee3\u7801\u66f4\u65b0\u4e86\u4e00\u4e0b\uff0c\u589e\u52a0\u4e86\u6cdb\u578b\u53c2\u6570\uff0c\u548c\u6211\u672c\u5730\u7684\u4ee3\u7801\u4e00\u81f4\u4e86\uff0c\u770b\u6765\u76f4\u63a5\u590d\u5236\u4ee3\u7801\u4f1a\u628a\u6cdb\u578b\u7684\u5177\u4f53\u7c7b\u578b\u4f1a\u5f04\u4e22\u554a\n\u8be6\u89c1\uff1ahttps://github.com/dengyj3/fastjson-issue/branches\n. @wuwen5 ,\u8fd9\u79cd\u65b9\u5f0f\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\uff0c\u4f46\u662f\u53ef\u80fd\u4e0d\u7b26\u5408\u6211\u7684\u573a\u666f\uff0c\u6211\u7684\u573a\u666f\u4e0b\uff0cInfo\u662f\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u5230\u7684\uff0c\u9700\u8981\u4f20\u4e2a\u53c2\u6570\u8fdb\u53bb\u624d\u80fd\u77e5\u9053\u662fInfo\u7c7b\uff0c\u5c31\u50cf1.2.12\u7248\u672c\u90a3\u6837\uff0c\u8fd9\u6837\u663e\u5f0f\u7684\u6211\u65e0\u6cd5\u901a\u8fc7\u53cd\u5c04\u4f20\u5165Info\u7c7b\u578b\nOut out = JSON.parseObject(jString, new TypeReference>(){});. ",
    "abnerbos": "\u4f60\u7ed9\u7684json\u4e32\u662f\u6570\u7ec4\u5462\uff0c\u8981\u7528 JSON.parseArray \u8f6c\u6362\u6210\u6570\u7ec4\u6765\u83b7\u53d6. ",
    "xuesong123": "\u662f\u6211\u641e\u9519\u4e86. ",
    "whendream": "\u4e0d\u8fc7\u76f4\u63a5return\u7684\u8bdd\uff0c\u4e0d\u7528\u5173\u95edreader\u5417 \uff1f . ",
    "2695691406": "\u66f4\u65b0\u52301.2.16 \u53d1\u73b0\u53cd\u5e8f\u5217\u5316\u56de\u6765  \"account\u7c7b\u578b\"\u7684value \u6210\u4e86 jsonObject(size=0). 1.2.21\u8fd9\u4e2a\u7248\u672c\u6ca1\u89e3\u51b3\uff0c\u800c\u4e14\u53c8\u53d1\u73b0\u4e00\u4e2abug\u3002 \n\u56fe\u7247\u89e3\u91ca\u5730\u5740\n\u65b0bug \uff0c\u81ea\u8eab\u4e00\u4e2aobject\u5c5e\u6027\u50a8\u5b58\u81ea\u8eab\u4f1a\u4e22\u5931\uff0c\u53cd\u5e8f\u5217\u5316\u56de\u6765\u4e3anull\u3002\uff08obj\u4e3aObject \u7c7b\u578b\uff09\n\u56fe\u7247\u89e3\u91ca\u5730\u5740\n`/*\n * Created by ZD on 2016/7/11.\n /\npublic class Account extends Base implements Serializable {\nprivate Object obj;`. ### \u5199\u4e86\u4e00\u4e2a\u793a\u4f8b\n\n`package com.yuantu.other;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\nimport java.io.UnsupportedEncodingException;\nimport java.util.HashMap;\nimport java.util.Map;\n/*\n * Created by zilue on 2016/9/28.\n /\npublic class Other {\npublic static void main(String[] args) throws UnsupportedEncodingException {\n\n    Aob aob=new Aob();\n    aob.setPint(123);\n    aob.setPlon(123L);\n    aob.setPstr(\"string\");\n\n    Map<String,Object> map=new HashMap();\n    map.put(\"Aob\u7c7b\u578b\", aob);\n    aob.setPobj(map);\n\n    byte[] bytes = JSON.toJSONString(aob, SerializerFeature.WriteClassName).getBytes(\"utf-8\");\n    Aob aobDeserialize = JSON.parseObject(new String(bytes, \"utf-8\"), Aob.class);\n\n    //        \u8bf7\u5728\u6b64\u5904\u6253\u65ad\u70b9\u68c0\u67e5\u6570\u636e\n    System.out.println(aobDeserialize);\n\n}\n\n}\nclass Aob{\n    private String  pstr;\n    private long  plon;\n    private Integer  pint;\n    private Object  pobj;\npublic Aob() {\n}\n\npublic String getPstr() {\n    return pstr;\n}\n\npublic void setPstr(String pstr) {\n    this.pstr = pstr;\n}\n\npublic long getPlon() {\n    return plon;\n}\n\npublic void setPlon(long plon) {\n    this.plon = plon;\n}\n\npublic Integer getPint() {\n    return pint;\n}\n\npublic void setPint(Integer pint) {\n    this.pint = pint;\n}\n\npublic Object getPobj() {\n    return pobj;\n}\n\npublic void setPobj(Object pobj) {\n    this.pobj = pobj;\n}\n\n}\nclass AoC extends Aob{\n    private String cstr;\n    private String cobj;\npublic AoC() {\n}\n\npublic String getCstr() {\n    return cstr;\n}\n\npublic void setCstr(String cstr) {\n    this.cstr = cstr;\n}\n\npublic String getCobj() {\n    return cobj;\n}\n\npublic void setCobj(String cobj) {\n    this.cobj = cobj;\n}\n\n}`. ",
    "orika": "DING. ",
    "SavinoYu": "\u975e\u5e38\u611f\u8c22\uff01 @wenshao. ",
    "qianshangding": "\u96be\u9053\u662fjava.lang.Exception\u7684\u5b50\u7c7b\u90fd\u4f1a\u81ea\u5e26\u81ea\u7701\u529f\u80fd\u5417\uff1f. ",
    "leohan1992": "\u6211\u4e5f\u9047\u5230\u8fc7. ",
    "liuxuzxx": "fastjosn\u7684\u7248\u672c\u6362\u62101.2.32\u5c31\u884c\u4e86. ",
    "ITHTT": "spring 4.3.4 fastjson\u662f\u6700\u65b0\u76841.2.21. ",
    "JarenFeng": "\u7248\u672c\uff1afastjson-1.2.3/fastjson-1.2.21\n\u65b9\u6cd5\uff1aJSON.parseObject(jsonStr,A.class);\n\u5177\u4f53\uff1a\n```\nclass A{\n    ...\n    private List b;\n    private List c;\n}\nclass B {\n    private String str;\n    private List c;\n}\nclass C {\n    private String str;\n    ...\n}\n```\nException:com.alibaba.fastjson.JSONObject cannot be cast to B. \u5df2\u786e\u8ba4\u662f\u4ee3\u7801\u6df7\u6dc6\u5bfc\u81f4\u7684\u95ee\u9898\u3002\n\u8c22\u8c22\u56de\u590d\u3002. ",
    "nikorliu": "\u55ef\uff0c\u57fa\u672c\u4e0a\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\u5b9e\u9645\u7684\u662f\u6211\u628a\u8fd9\u4e2a\u5e94\u7528\u5728spring mvc\u91cc\u8fd4\u56dejson\u5bf9\u8c61\uff0c\u7528\u8fc7\u6ee4\u5668\u7684\u8bdd\u8fd9\u6837\u5c31\u8981\u624b\u5de5\u663e\u793a\u5728controller\u91cc\u9762\u663e\u5f0f\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u540e\u518d\u8fd4\u56de\u4e86. ",
    "duwei54": "@nikorliu \u4f60\u597d,\u6211\u4e5f\u6709\u8fd9\u4e2a\u9700\u6c42,springMVC \u5e0c\u671b\u8fd4\u56deInterface\u7684\u65f6\u5019\u6309\u7167\u63a5\u53e3\u5b9a\u4e49\u7684getter\u8fd4\u56de\u5b57\u6bb5,\u8bf7\u95ee\u4f60\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u4e48. \u4e3a\u4f55\u4e0d\u52a0\u5165\u7ee7\u627f\u5462. \u4e3a\u4f55\u4e0d\u52a0\u5165\u7ee7\u627f\u5462. \u4e3a\u4f55\u4e0d\u52a0\u5165\u7ee7\u627f\u5462. @kongweiteng \u80fd\u544a\u77e5\u4e00\u4e0b\u600e\u4e48\u89e3\u51b3\u7684\u4e48  valueFilter\u4f1a\u8986\u76d6\u6389SerializerFeature\u7684\u914d\u7f6e. @kongweiteng \u989d \u6211\u8bd5\u4e86\u4f60\u7684\u4ee3\u7801,\u8fd8\u662f\u6ca1\u6709\u770b\u5230\u7ed3\u679c\u5462.\u539f\u8c05\u6211\u6ca1\u770b\u61c2\u4ee3\u7801\u662f\u600e\u4e48\u5b9e\u73b0\u7a7a\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a{}\u7684. @wenshao \u5927\u795e\u53ef\u4ee5\u52b3\u70e6\u4e00\u4e0b\u4e48. ",
    "sunxiang0918": "\u6d4b\u8bd5\u7528\u4f8b:\n```java\n    @Test\n    public void testCase() throws Exception {\n    System.out.println(\"===\u76f4\u63a5\u5e8f\u5217\u5316LocalDateTime,\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316===\");\n    LocalDateTime dateTime = LocalDateTime.now();\n    System.out.println(JSON.toJSONString(dateTime));\n    /*\u671f\u671b\u662f yyyy-MM-dd HH:mm:ss   \u5b9e\u9645\u662f LocalDateTime.toString() \u7684\u683c\u5f0f */\n    System.out.println(JSON.toJSONString(dateTime,SerializerFeature.WriteDateUseDateFormat));\n    System.out.println(JSON.toJSONStringWithDateFormat(dateTime,\"yyyy-MM-dd HH:mm:ss\"));\n\n    System.out.println(\"===\u76f4\u63a5\u5e8f\u5217\u5316LocalDateTime.withNano(0),\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316===\");\n    dateTime = LocalDateTime.now().withNano(0);\n    System.out.println(JSON.toJSONString(dateTime));\n    /*\u671f\u671b\u662f yyyy-MM-dd HH:mm:ss   \u5b9e\u9645\u662f LocalDateTime.toString() \u7684\u683c\u5f0f */\n    System.out.println(JSON.toJSONString(dateTime,SerializerFeature.WriteDateUseDateFormat));\n    System.out.println(JSON.toJSONStringWithDateFormat(dateTime,\"yyyy-MM-dd HH:mm:ss\"));\n\n    System.out.println(\"==\u5e8f\u5217\u5316VO\u5bf9\u8c61\u4e2d\u5305\u542bLocalDateTime,\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316==\");\n    LocalDateTimeModel localDateTimeModel = new LocalDateTimeModel();\n    System.out.println(JSON.toJSONString(localDateTimeModel));\n    /*\u671f\u671b\u662f yyyy-MM-dd HH:mm:ss   \u5b9e\u9645\u662f LocalDateTime.toString() \u7684\u683c\u5f0f */\n    System.out.println(JSON.toJSONString(localDateTimeModel,SerializerFeature.WriteDateUseDateFormat));\n    System.out.println(JSON.toJSONStringWithDateFormat(localDateTimeModel,\"yyyy-MM-dd HH:mm:ss\"));\n\n    System.out.println(\"==\u5e8f\u5217\u5316VO\u5bf9\u8c61\u4e2d\u5305\u542bLocalDateTime.withNano(0),\u65e5\u671f\u683c\u5f0f\u53d8\u5316\u6b63\u786e==\");\n    localDateTimeModel = new LocalDateTimeModel();\n    localDateTimeModel.setStartDateTime(localDateTimeModel.getStartDateTime().withNano(0));\n    localDateTimeModel.setEndDateTime(localDateTimeModel.getEndDateTime().withNano(0));\n    System.out.println(JSON.toJSONString(localDateTimeModel));\n    System.out.println(JSON.toJSONString(localDateTimeModel,SerializerFeature.WriteDateUseDateFormat));\n    System.out.println(JSON.toJSONStringWithDateFormat(localDateTimeModel,\"yyyy-MM-dd HH:mm:ss\"));     \n}\n\n```\n\u6240\u4f7f\u7528\u7684model:\n```java\nclass LocalDateTimeModel implements Serializable {\nprivate LocalDateTime startDateTime;\n\nprivate LocalDateTime endDateTime;\n\nprivate Date startDate;\n\nprivate Date endDate;\n\npublic LocalDateTimeModel() {\n    startDateTime = LocalDateTime.now();\n    endDateTime = LocalDateTime.now().plusWeeks(1);\n\n    startDate = new Date();\n    endDate = new Date(startDate.getTime()+36000000);\n}\n\npublic LocalDateTime getStartDateTime() {\n    return startDateTime;\n}\n\npublic void setStartDateTime(LocalDateTime startDateTime) {\n    this.startDateTime = startDateTime;\n}\n\npublic LocalDateTime getEndDateTime() {\n    return endDateTime;\n}\n\npublic void setEndDateTime(LocalDateTime endDateTime) {\n    this.endDateTime = endDateTime;\n}\n\npublic Date getStartDate() {\n    return startDate;\n}\n\npublic void setStartDate(Date startDate) {\n    this.startDate = startDate;\n}\n\npublic Date getEndDate() {\n    return endDate;\n}\n\npublic void setEndDate(Date endDate) {\n    this.endDate = endDate;\n}\n\n}\n```\n\u7ed3\u679c:\n```shell\n===\u76f4\u63a5\u5e8f\u5217\u5316LocalDateTime,\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316===\n\"2016-12-10T11:15:33.308\"\n\"2016-12-10T11:15:33.308\"\n\"2016-12-10T11:15:33.308\"\n===\u76f4\u63a5\u5e8f\u5217\u5316LocalDateTime.withNano(0),\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316===\n\"2016-12-10T11:15:33\"\n\"2016-12-10T11:15:33\"\n\"2016-12-10T11:15:33\"\n==\u5e8f\u5217\u5316VO\u5bf9\u8c61\u4e2d\u5305\u542bLocalDateTime,\u65e0\u8bba\u5982\u4f55\u683c\u5f0f\u4e0d\u53ef\u53d8\u5316==\n{\"endDate\":1481375733393,\"endDateTime\":\"2016-12-17T11:15:33.393\",\"startDate\":1481339733393,\"startDateTime\":\"2016-12-10T11:15:33.393\"}\n{\"endDate\":\"2016-12-10 21:15:33\",\"endDateTime\":\"2016-12-17T11:15:33.393\",\"startDate\":\"2016-12-10 11:15:33\",\"startDateTime\":\"2016-12-10T11:15:33.393\"}\n{\"endDate\":\"2016-12-10 21:15:33\",\"endDateTime\":\"2016-12-17T11:15:33.393\",\"startDate\":\"2016-12-10 11:15:33\",\"startDateTime\":\"2016-12-10T11:15:33.393\"}\n==\u5e8f\u5217\u5316VO\u5bf9\u8c61\u4e2d\u5305\u542bLocalDateTime.withNano(0),\u65e5\u671f\u683c\u5f0f\u53d8\u5316\u6b63\u786e==\n{\"endDate\":1481375733428,\"endDateTime\":\"2016-12-17 11:15:33\",\"startDate\":1481339733428,\"startDateTime\":\"2016-12-10 11:15:33\"}\n{\"endDate\":\"2016-12-10 21:15:33\",\"endDateTime\":\"2016-12-17 11:15:33\",\"startDate\":\"2016-12-10 11:15:33\",\"startDateTime\":\"2016-12-10 11:15:33\"}\n{\"endDate\":\"2016-12-10 21:15:33\",\"endDateTime\":\"2016-12-17 11:15:33\",\"startDate\":\"2016-12-10 11:15:33\",\"startDateTime\":\"2016-12-10 11:15:33\"}\n```. ",
    "KeZhimin": "Fastjson\u628a\u5bf9\u8c61\u8f6c\u4e3ajson\u65f6\u5019\uff0cDate\u4f1a\u8f6c\u4e3a\u65f6\u95f4\u6233\uff0c\u90a3LocalDateTime\u600e\u4e48\u8f6c\u4e3a\u65f6\u95f4\u6233\u5462. @helloworldtang thx\u3002\u6211\u56de\u5934\u8bd5\u8bd5\u4e00\u4e0b\u3002. ",
    "dudw": "\u540c\u95ee\uff0cLocalDateTime\u600e\u4e48\u8f6c\u4e3a\u65f6\u95f4\u6233\uff1f. \u540c\u95ee\uff0cLocalDateTime\u600e\u4e48\u8f6c\u4e3a\u65f6\u95f4\u6233\uff1f. ",
    "woovan": "\u53d1\u73b0\u4e86\uff0c\u628ajson\u505a\u6362\u884c\u7f29\u8fdb\u5904\u7406\uff0c\u5c31\u4f1a\u51fa\u8fd9\u4e2a\u95ee\u9898\uff0c\u628a\u7a7a\u683c\u6362\u884c\u5220\u9664\u5c31\u597d\u4e86\uff0c\u8bf7\u95ee\u8fd9\u662fbug\u5417\uff0c\u56e0\u4e3a\u8981\u7528json\u505a\u914d\u7f6e\uff0c\u8fd9\u6837\u5199\u66f4\u65b9\u4fbf\u7ef4\u62a4\u6570\u636e\n{\n    \"symbols\":[\n        {\"id\":1,\"type\":\"NORMAL\"},\n        {\"id\":2,\"type\":\"NORMAL\"},\n        {\"id\":3,\"type\":\"NORMAL\"},\n        {\"id\":4,\"type\":\"NORMAL\"},\n        {\"id\":5,\"type\":\"NORMAL\"},\n        {\"id\":6,\"type\":\"NORMAL\"},\n        {\"id\":7,\"type\":\"NORMAL\"},\n        {\"id\":8,\"type\":\"NORMAL\"},\n        {\"id\":9,\"type\":\"NORMAL\"},\n        {\"id\":10,\"type\":\"NORMAL\"},\n        {\"id\":11,\"type\":\"WILD\"},\n        {\"id\":12,\"type\":\"SCATTER\"},\n        {\"id\":13,\"type\":\"BONUS\"}\n    ]\n}\n\u7c7b\u662f\u8fd9\u6837\u5c31\u4e00\u4e2a\u5c5e\u6027\uff0c\u4e0d\u8d34\u5168\u4e86\npublic class SlotConfig {\nprivate List<Symbol> symbols;\n\n\u53cd\u5e8f\u5217\u5316\u540e\u518d\u8f6c\u6210json\u8f93\u51fa\u5c31\u6210\u4e86\u8fd9\u6837\uff0c\u6700\u540e\u4e00\u4e2atype\u6ca1\u4e86\n{\"symbols\":[{\"id\":1,\"type\":\"NORMAL\"},{\"id\":2,\"type\":\"NORMAL\"},{\"id\":3,\"type\":\"NORMAL\"},{\"id\":4,\"type\":\"NORMAL\"},{\"id\":5,\"type\":\"NORMAL\"},{\"id\":6,\"type\":\"NORMAL\"},{\"id\":7,\"type\":\"NORMAL\"},{\"id\":8,\"type\":\"NORMAL\"},{\"id\":9,\"type\":\"NORMAL\"},{\"id\":10,\"type\":\"NORMAL\"},{\"id\":11,\"type\":\"WILD\"},{\"id\":12,\"type\":\"SCATTER\"},{\"id\":13}]}. \u8865\u5145\u4e00\u4e0b\uff0cjson\u662f\u4ece\u6587\u672c\u6587\u4ef6\u8bfb\u7684\uff0c\u6709\u7f29\u8fdb\u548c\u6362\u884c. ```\npackage com.java.test;\nimport java.util.List;\nimport com.alibaba.fastjson.JSON;\npublic class SlotConfig {\nprivate List<Symbol> symbols;\n\n\npublic static void main(String[] args) {\n\n    String text = \"{\\n\" +\n                             \"\\t\\\"symbols\\\":[\\n\" +\n                             \"\\t    {\\\"id\\\":1,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":2,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":3,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":4,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":5,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":6,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":7,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":8,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":9,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":10,\\\"type\\\":\\\"NORMAL\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":11,\\\"type\\\":\\\"WILD\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":12,\\\"type\\\":\\\"SCATTER\\\"},\\n\" +\n                             \"\\t    {\\\"id\\\":13,\\\"type\\\":\\\"BONUS\\\"}\\n\" +\n                             \"\\t]\\n\" +\n                             \"}\";\n\n    SlotConfig config = JSON.parseObject(text, SlotConfig.class);\n    System.out.println(config);\n}\n\n@Override\npublic String toString() {\n    return JSON.toJSONString(this);\n}\n\npublic List<Symbol> getSymbols() {\n    return symbols;\n}\n\npublic void setSymbols(List<Symbol> symbols) {\n    this.symbols = symbols;\n}\n\nclass Symbol {\n    private int id;\n\n    private SymbolType type;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public SymbolType getType() {\n        return type;\n    }\n\n    public void setType(SymbolType type) {\n        this.type = type;\n    }\n}\n\nenum SymbolType {\n    NORMAL, WILD, SCATTER, BONUS\n}\n\n}\n```\n\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\uff0c\u5e2e\u5fd9\u770b\u4e0b. ",
    "jackmiking": "```java\npublic class JsonObjectTest {\n    private String name;\n    private Integer age;\n    private Date time;\npublic String getName() {\n    return name;\n}\n\npublic void setName(String name) {\n    this.name = name;\n}\n@Transient\npublic Integer getAge() {\n    return age;\n}\n\npublic void setAge(Integer age) {\n    this.age = age;\n}\n\n\npublic Date getTime() {\n    return time;\n}\n\npublic void setTime(Date time) {\n    this.time = time;\n}\n\n\npublic static void main(String[] args) {\n    JsonObjectTest jsonObjectTest = new JsonObjectTest();\n    jsonObjectTest.setTime(new Date());\n    jsonObjectTest.setAge(3);\n    jsonObjectTest.setName(\"abc\");\n    String s=JSONObject.toJSONString(jsonObjectTest, SerializerFeature.SkipTransientField);\n    System.out.println(s);\n}\n\n}\n```\n\u7136\u540e\u8f93\u51fa\u662f\uff1a\n{\"age\":3,\"name\":\"abc\",\"time\":1481535111675}\nage\u662ftransient\u5c5e\u6027\u6765\u7684\uff0c\u5e94\u8be5\u4e0d\u80fd\u591f\u88ab\u5e8f\u5217\u8bdd\u51fa\u6765\u3002\n. ",
    "Bobi-zhou": "\u4f7f\u7528@JSONField(serialize=false)\u540e\u4e0d\u7ba1\u8be5\u5b57\u6bb5\u503c\u662f\u5426\u4e3aNull\u90fd\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\uff0c\u6211\u7684\u8981\u6c42\u662f\u5f53\u5b57\u6bb5\u7684\u503c\u4e3aNull\u65f6 \u4e0d\u5e8f\u5217\u5316\uff0c\u5f53\u4e0d\u4e3aNull\u65f6 \u9700\u8981\u5e8f\u5217\u5316\u3002. @CharkeyQK \u4f7f\u7528\u4f60\u8bf4\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u81ea\u5df1\u624b\u52a8\u8c03\u7528API\u5e8f\u5217\u5316\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u600e\u4e48\u4e0eSpring MVC\u6574\u5408\u8d77\u6765\uff0c\u8ba9Sping MVC \u77e5\u9053\u6211\u54ea\u4e9b\u7c7b \u5e8f\u5217\u5316\u7684\u65f6\u5019\u8981\u5ffd\u7565Null\u503c. @CharkeyQK \u8fd9\u6837\u914d\u7f6e\u540e\u5e94\u8be5\u4f1a\u8986\u76d6WriteMapNullValue\u5c5e\u6027\uff0c\u96be\u9053\u8981\u5728apply\u65b9\u6cd5\u4e2d\u5224\u65ad\u662f\u5426\u662f\u67d0\u4e2a\u7279\u5b9a\u7684\u7c7b\uff1f\u8fd9\u6837\u663e\u5f97\u4e0d\u592a\u7075\u6d3b\uff0c\u540e\u9762\u65b0\u589e\u4e86\u6709\u8fd9\u6837\u9700\u6c42\u7684\u7c7b\uff0c\u5f97\u518d\u6765\u4fee\u6539apply\u65b9\u6cd5\uff0c\u6211\u5e0c\u671b\u80fd\u8bbe\u8ba1\u4e00\u4e2a\u6ce8\u89e3\uff0c\u8be5\u6ce8\u89e3\u7684\u4f18\u5148\u7ea7\u5927\u4e8eSping MVC \u4e2dfastJsonConfig\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u5728\u6211\u4e0d\u5e0c\u671b\u5e8f\u5217\u5316Null\u503c\u7684\u7c7b\u4e0a\uff0c\u6211\u53ea\u9700\u8981\u6ce8\u89e3\u4e00\u4e0b\u5c31ok. \u55ef\uff0c\u9047\u5230\u540c\u6837\u7684\u9519\u8bef. ",
    "chongyangxue": "classSerializeFilters \u662f\u4e00\u4e2aMap, SerializeFilter>\uff0c\u53ea\u80fd\u7ed9\u5177\u4f53\u7684\u7c7b\u52a0\u8fc7\u6ee4\u5668\uff0c\u5982\u679c\u60f3\u901a\u8fc7@CharkeyQK \u8bf4\u7684\u6ce8\u89e3\u7684\u65b9\u5f0f\u7ed9\u6240\u6709\u7684bean\u90fd\u52a0\u4e0aPropertyFilter\u600e\u4e48\u505a\u5462\uff1f. ",
    "liuguangjun": "\u540c\u95ee. ",
    "googleweb": "public Integer in= null;\npublic int ins;\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u8f6c\u6362\u4e3ajson\u65f6in\u662f\u4e0d\u4f1a\u8f93\u51fa\u7684\uff0c\u7b2c\u4e8c\u79cdins\u672a\u8d4b\u503c\u662f0.\n\u770b\u770b\u662f\u5426\u662f\u4e0b\u9762\u56e0\u7d20\u5f71\u54cd\u7684\u5427\nhttps://github.com/alibaba/fastjson/wiki/WriteNull_cn. \u76f4\u63a5\u8f6c\u6210\u5bf9\u8c61\u53ef\u4ee5\u4e48\nimport java.util.Date;\nimport com.alibaba.fastjson.JSON;\npublic class DateTest {\n    private String name;\n    private int age;\n    private Date cdate;\npublic String getName() {\n    return name;\n}\n\npublic void setName(String name) {\n    this.name = name;\n}\n\npublic int getAge() {\n    return age;\n}\n\npublic void setAge(int age) {\n    this.age = age;\n}\n\npublic Date getCdate() {\n    return cdate;\n}\n\npublic void setCdate(Date cdate) {\n    this.cdate = cdate;\n}\n\npublic static void main(String[] args) {\n\n    String text = \"{\\\"name\\\":\\\"zhangsan\\\", \\\"age\\\": 5, \\\"cdate\\\": 1484031543903}\";\n    DateTest ttt = JSON.parseObject(text, DateTest.class);\n\n    System.out.println(ttt.getCdate());\n}\n\n}. 1484031543903\u6d4b\u8bd5\u4e86\uff0c\u6570\u636e\u4e0d\u52a0\u5f15\u53f7\u4e3aLong\u578b\uff0c\u52a0\u4e0a\u5f15\u53f7\u4e3aString\u7c7b\u578b\u3002\n\u4e0d\u8fc7\u5e38\u89c1\u95ee\u9898\u8bf4\u660e\u662f\u652f\u6301\u7684\u3002\n\u53cd\u5e8f\u5217\u5316\u80fd\u591f\u81ea\u52a8\u8bc6\u522b\u5982\u4e0b\u65e5\u671f\u683c\u5f0f\uff1a\n\nISO-8601\u65e5\u671f\u683c\u5f0f\nyyyy-MM-dd\nyyyy-MM-dd HH:mm:ss\nyyyy-MM-dd HH:mm:ss.SSS\n\u6beb\u79d2\u6570\u5b57\n\u6beb\u79d2\u6570\u5b57\u5b57\u7b26\u4e32\n.NET JSON\u65e5\u671f\u683c\u5f0f\nnew Date(198293238)\n. \u4f60\u7684\u610f\u601d\u5e94\u8be5\u662f\u751f\u6210json\u7684\u5b57\u6bb5\u89c4\u5219\u5427\uff0c\u770b\u770b\u4e0b\u9762\u4e24\u6761\u5185\u5bb9\u5427\nhttps://github.com/alibaba/fastjson/wiki/%E5%AE%9A%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96\nhttps://github.com/alibaba/fastjson/wiki/JSONField. @StephenCMZ \nJSON.toJSONString(obj, SerializerFeature.WriteMapNullValue, SerializerFeature.WriteNullListAsEmpty);\nSerializerFeature.WriteNullListAsEmpty\u8fd9\u4e2a\u53c2\u6570. \u8fd9\u5e94\u8be5\u662f\u4e0d\u7b26\u5408json\u6807\u51c6\u5427,[]\u5916\u9762\u518d\u52a0\u53cc\u5f15\u53f7\uff0c\u968f\u4fbf\u4e00\u4e2ajson\u6821\u9a8c\u5de5\u5177\u90fd\u901a\u4e0d\u8fc7. @jqncc \nhttps://github.com/alibaba/fastjson/wiki/LabelFilter\nhttps://github.com/alibaba/fastjson/wiki/JSONField\n\u770b\u770b\u8fd9\u4e24\u4e2a. @xusheng1987 \nhttps://github.com/alibaba/fastjson/wiki/WriteNull_cn\nSerializerFeature.WriteNullStringAsEmpty\u7528\u8fd9\u4e2a\u53c2\u6570\uff0cWriteNonStringValueAsString\u8fd9\u4e2a\u53c2\u6570\u6ca1\u6709\u505a\u8bf4\u660e\u5427. \n",
    "renzhipengmm": "\u7b80\u5355\u7684\u4f7f\u7528 \uff0c\u53ef\u4f7f\u7528 \u6dfb\u52a0\u6ce8\u89e3\u4f7f\u7528\n@JSONField(format = \"yyyy-MM-dd\")\n\u5168\u5c40\u53ef\u76f4\u63a5\u4f7f\u7528\n  writeJSONString(OutputStream os, \n                                             Charset charset, \n                                             Object object, \n                                             SerializeConfig config, \n                                             SerializeFilter[] filters, \n                                             String dateFormat, \n                                             int defaultFeatures, \n                                             SerializerFeature... features) throws IOException\n\u6b64\u65f6\u76f4\u63a5\u6307\u5b9a dateFormat \u683c\u5f0f\u5373\u53ef. 1\u3001\u7b2c\u4e00\u4e2a\u95ee\u9898 \u662f\u6211\u5f97. ",
    "nashtsai": "got it, thanks, however, any plan to make ES2015 conform behavior?. ",
    "limpep": "+1. ",
    "yanbingwei86": "@wenshao  where could i find the changelog?. ",
    "wensiqun": "\u53e6\u5916https://github.com/alibaba/fastjson/issues/901 \u57281.2.22\u4efb\u7136\u5b58\u5728.     Entry entry = new SimpleEntry(\"name\", \"foo\");\n    JSON.toJSONString(entry);\n\u8f93\u51fa\n{\"name\" : \"foo\"}. 1.2.23 1.2.22\u90fd\u6709 \u5e94\u8be5\u5176\u4ed6\u7248\u672c\u4e5f\u6709 \u6ca1\u8bd5\u8fc7.\n",
    "chorar": "@JSONField(serialize = false)\nprivate String name;\nUser \u5bf9\u8c61\u6709name\u5b57\u6bb5\u4e2d\u6709 @JSONField(serialize = false)  \u4f46\u662f\u6211\u60f3\u4e0d\u8ba9\u4ed6\u4e0d\u5ffd\u7565.. ",
    "anjia0532": "@wenshao \u6069\u6069\uff0c\u8c22\u8c22\u6e29\u5c11\u7684\u8010\u5fc3\u8bb2\u89e3. \u56e0\u4e3a\u6211\u662f\u60f3\u5c06jsonobject\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u8f6c\u6362\u6210bean\uff0c\u76ee\u524d\u53ea\u6709\n```java\ngetObject(String key,Class clazz)\nparseObject\ntoJavaObject(JSON json,Class clazz)\n```\n\u5982\u679c\u4e0d\u52a0getClass,getObject(key,new TypeReference(){})\uff0c\u5219\u4f1a\u62a5\u4ee5\u4e0b\u9519\u8bef\uff0c\u7f16\u8bd1\u90fd\u4e0d\u901a\u8fc7\nThe method getObject(String, Class) in the type JSONObject is not applicable for the arguments (String, new TypeReference(){})\n. @wenshao . @wenshao \u6e29\u5c11\uff0c\u65b0\u5e74\u5feb\u4e50\u3002\n\u6211\u8bf4\u7684 JSONObject.getObject(key,type);\u4e2d\u7684JSONObject\u662f\u4e00\u4e2aJSONObject\u5bf9\u8c61\uff0c\u4e0d\u662fcom.alibaba.fastjson.JSONObject\u7c7b\n\u7136\u540e\uff0c\njava\nJSON.parseObject(String)    //(1)\n.getObject(\"key\", new TypeReference<VO>(){}.getType());//(2)\n(1) \u5904\u662f\u5c06\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u6210jsonobject\u5bf9\u8c61\n(2) \u5904\u662f\u4f7f\u7528JSONObject\u5b9e\u4f8b\u7684getObject\u65b9\u6cd5\u5c06\u67d0\u4e2a\u5c5e\u6027\u53cd\u5e8f\u5217\u5316VO\u7c7b\u5b9e\u4f8b\n\u4f46\u662f\u6b64\u65f6\u7f16\u8bd1\u4f1a\u62a5\u9519\uff0c\u5047\u8bbe\u662feclipse\nThe method getObject(String, Class<T>) in the type JSONObject is not applicable for the arguments (String, Type)\n\u4e0d\u652f\u6301 new TypeReference<VO>(){}.getType()\n\u76ee\u524d\u6211\u662f\u4f7f\u7528\njava\nJSON.parseObject(JSON.parseObject(str).getString(key),  //(1)\nnew TypeReference<VO>(){}.getType()); //(2)\n(1)  \u5c06str\u53cd\u5e8f\u5217\u5316\u6210jsonobject\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7key\u8f6c\u6362\u6210string\n(2) \u901a\u8fc7JSON.parseObject(String,Type)\u53cd\u5e8f\u5217\u5316\u6210VO\u7c7b\n. @wenshao \u6c42\u5927\u795e\u6307\u6559. @wenshao \u5728\u7f51\u4e0a\u53ea\u627e\u5230\u4e86\u4e00\u4e2aFastJson\u7684ZonedDateTime\u76f8\u5173\u4ee3\u7801\u7247\u6bb5 http://apiwave.com/java/snippets/addition/java.time.OffsetDateTime. \u8c22\u5566\uff0c\u6e29\u5c11 : ). \u597d\u7684\uff0c\u6e29\u5c11. ",
    "wbfabc": "\n\u4e0d\u77e5\u9053\u4ec0\u4e48\u4ea7\u54c1\u5bf9\u6548\u7387\u8981\u6c42\u5206\u7684\u8fd9\u4e48\u7ec6\uff0c\u611f\u89c9\u73b0\u5728\u90fd\u662f\u5404\u79cd\u9ed2\u522b\u4eba\u7684\uff0c\u627e\u4e00\u4e2a\u80fd\u6ee1\u8db3\u9700\u6c42\u7684\u5c31\u662f\u597d\u7684\u3002\n\n\u5982\u679c\u4f60\u6709\u4e00\u5929\u51e0\u4e2aT\u7684json\u65e5\u5fd7\u8981\u5904\u7406\uff0c\u5c31\u4e0d\u4f1a\u8fd9\u4e48\u8ba4\u4e3a\u4e86\u3002. ",
    "heiliguai": "JSONSerializer  \npublic final void writeWithFormat(Object object, String format) { }\n\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u6807\u8bb0\u4e3afinal\u4e86\u3002\n. ",
    "starfox2016": "\u53e6\u5916\uff0c\u5bf9\u4e8e\"\\\u7ecf\" \u51e1\u662f\u5e26\u6709\\\u7684\u5b57\u7b26\u4e32\uff0c\u90fd\u4f1a\u6709\u89e3\u6790\u9519\u8bef\u201ccom.alibaba.fastjson.JSONException: unclosed string : \u7ecf\u201d\u3002\n. ",
    "wiker001": "\u73b0\u5728 \u662f\u51c6\u5907\u5728\u542f\u52a8\u7684\u65f6\u5019 \u9884\u70ed\u4e86. ",
    "lebron374": "public static ParserConfig pc = new ParserConfig();\npublic static SerializeConfig sc = new SerializeConfig();  . \u53ef\u4ee5\u53c2\u8003\u4e0b\u8fd9\u7bc7\u6587\u7ae0\uff1ahttp://kane-xie.iteye.com/blog/2223837. \u53c2\u8003http://kane-xie.iteye.com/blog/2223837. @wenshao \u6ca1\u592a\u660e\u767d\u4f60\u7684\u610f\u601d\uff0c\u6211\u770b\u4e86\u4e0bfastjson\u5982\u679c\u4e0d\u63d0\u524d\u521d\u59cb\u5316\u4ee5\u4e0b\u7684\u786e\u4f1a\u5f88\u6162\uff0c\u4f46\u662f\u4e5f\u4ec5\u9650\u4e8e\u7b2c\u4e00\u6b21\uff0c\u6211\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u4e0d\u662f\u63d0\u524d\u521d\u59cb\u5316\u7684\u95ee\u9898\u3002. ",
    "wangsikai": "\u6211\u4e5f\u9047\u5230\u4e00\u6837\u7684\u95ee\u9898\uff0c @darkpower @VictorZeng @wenshao  \u6709\u89e3\u4e48\uff1f\u914d\u7f6e\u95ee\u9898\u4e48\uff1f. \u8bbe\u7f6eFastJsonConfig.serializerFeatures \u5c31\u53ef\u4ee5\u4e86\n@wenshao  FastJsonConfig.serializerFeatures  \u548c  FastJsonConfig.features \u6709\u4ec0\u4e48\u533a\u522b\n@VictorZeng . ",
    "izern": "password\u8fd9\u4e2a\u5b57\u6bb5\u88ab\u8fc7\u6ee4\u6389\u4e86\uff0c\u8bf4\u660e\u6ce8\u89e3\u8fd8\u662f\u6709\u7528\u7684. \u8fd8\u662f\u4e0d\u884c\u554a\uff0c\u6211\u5728isProxy \u6253\u65ad\u70b9\uff0c\u6839\u672c\u6ca1\u6709\u8fd0\u884c\u5230\u8fd9\u3002hibernate version4.3.6\uff0c fastjson verison 1.2.33\n\u5e76\u4e14\u5728\u7c7b\u4e2d\u7684\u61d2\u52a0\u8f7d\u7684\u5c5e\u6027\uff0c\u663e\u793a\u7684\u662fXX = persistenBag\n\n. \u8fd8\u662f\u4e0d\u884c\u554a\uff0c\u6211\u5728isProxy \u6253\u65ad\u70b9\uff0c\u6839\u672c\u6ca1\u6709\u8fd0\u884c\u5230\u8fd9\u3002hibernate version4.3.6\uff0c fastjson verison 1.2.33\n\u5e76\u4e14\u5728\u7c7b\u4e2d\u7684\u61d2\u52a0\u8f7d\u7684\u5c5e\u6027\uff0c\u663e\u793a\u7684\u662fXX = persistenBag\n\n. @neil4dong \u8fd9\u4e2a\u5f02\u5e38\u6211\u662f\u77e5\u9053\u7684\u3002 \u4f46\u662ffastjosn\u57281.2.33 \u8bbe\u7f6e\u4e86\u4e0d\u5e8f\u5217\u5316lazy\u7684\u5c5e\u6027\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8be5\u8c03\u7528\u8fd9\u4e2aget\u65b9\u6cd5\uff0c\u4e0d\u5e8f\u5217\u5316\u5c5e\u6027\u3002 \u4f46\u662f\u7ed3\u679c\u8fd8\u662f\u5e8f\u5217\u5316\u4e86. @neil4dong \u8fd9\u4e2a\u5f02\u5e38\u6211\u662f\u77e5\u9053\u7684\u3002 \u4f46\u662ffastjosn\u57281.2.33 \u8bbe\u7f6e\u4e86\u4e0d\u5e8f\u5217\u5316lazy\u7684\u5c5e\u6027\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8be5\u8c03\u7528\u8fd9\u4e2aget\u65b9\u6cd5\uff0c\u4e0d\u5e8f\u5217\u5316\u5c5e\u6027\u3002 \u4f46\u662f\u7ed3\u679c\u8fd8\u662f\u5e8f\u5217\u5316\u4e86. Mark\u4e00\u4e0b. ",
    "leicheng6563": "TypeReference\u53ef\u4ee5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\u5d4c\u5957\u591a\u5c42\u7684List\u6216Map\uff0c\u6bd4\u5982List>\u8fd9\u79cd. ",
    "gMan1990": "@leicheng6563 \u55ef\uff0c\u591a\u5c42\u5d4c\u5957\u4e5f\u662f\u53ef\u4ee5\u7684\uff0cnew ArrayList>(0).getClass()\uff0c\u4e0d\u8fc7\u6709\u7c7b\u578b\u8f6c\u6362\u7684\u8b66\u544a\n\u60f3\u77e5\u9053TypeReference\u8fd8\u6709\u5176\u5b83\u56e0\u7d20\u6ca1~. @weicao \u6709java.util.List\u8fd9\u4e2a\u4e48\uff1f. @kimmking \u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u7684\u610f\u601d\u662fobject\u91cc\u7684ignoreProperties\u5b57\u6bb5\u4e0d\u8f93\u51fa\uff0c\u7c7b\u4f3c\norg.springframework.beans.BeanUtils#copyProperties(Object, Object, String...). \u54e6\uff0c\u6211\u641e\u9519\u4e86\uff0c\u6362\u6210PropertyPreFilter\u5c31\u53ef\u4ee5\u4e86\n\u8fd8\u6709\u4e2a\u95ee\u9898@kimmking \uff1a\u6bd4\u5982\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u63a5\u53e3(A,B\u63a5\u53e3)\uff0c\uff0c\uff0c\u6709\u6728\u6709\u90a3\u79cd\u6309\u67d0\u4e2a\u63a5\u53e3\u6216\u8005\u7c7b(\u6bd4\u5982A)tojsonstring\u7684\uff0c\u800c\u4e0d\u628aB\u63a5\u53e3\u7684\u65b9\u6cd5tosting\u51fa\u6765. @wenshao \u6ce8\u89e3\u8981\u600e\u4e48\u5199\uff1f\uff1f\uff1f. \u6211\u4e4b\u524d\u6d4b\u8fc7Jackson>fastjson>gson\uff0c\u73b0\u5728\u5df2\u7ecf\u4e3b\u7528jackson\u4e86. ",
    "shuohao": "@CharkeyQK\n\n\u8fd9\u4e48\u914d\u5c31\u53ef\u4ee5 \u4e86 \u4e4b\u524d\u5c11\u914d\u4e86StringHttpMessageConverter\uff0c\u6211\u4ee5\u4e3aspring\u9ed8\u8ba4\u521d\u59cb\u53166\u4e2aConverter\u4e0d\u9700\u8981\u914d\u5462\uff0c\u8ddf\u4e86\u4ee3\u7801\u53d1\u73b0\u5982\u679c\u53ea\u914dFastJsonHttpMessageConverter4\u8bdd\uff0c\u6240\u6709\u7684\u89e3\u6790\u90fd\u7531fastjson\u6765\u8f6c\u6362. ",
    "fooololo": "\u6211\u95ee\u9898\u6ca1\u6709\u63cf\u8ff0\u6e05\u695a\uff0c\u6211\u9700\u8981\u7684\u6548\u679c\u662f\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0a\u51e0\u79cd\u60c5\u51b5\uff0c\u5373\u5b57\u7b26\u4e32=null\uff0c\u5219\u8fd4\u56de\u201c\u201d\uff0c\u590d\u6742\u7c7b\u578b=null,\u5219\u4e0d\u8fd4\u56de. ",
    "qulei841026": "\u9047\u5230\u8fc7\u540c\u6837\u95ee\u9898\uff0c\u597d\u50cf\u4e0d\u662fmemory leak\u3002. ",
    "SpeedRn": "\u5982\u679c\u4e0d\u662f\u95ee\u9898\uff0c\u6709\u907f\u514d\u7684\u65b9\u6cd5\u4e48\uff1f\u6211\u4eec\u538b\u529b\u6d4b\u8bd5\uff0c\u4f1a\u6da8\u5230\u51e0\u4e07\u4e2a\u5bf9\u8c61\uff0c\u65f6\u95f4\u957f\u4e86\u8fd8\u662f\u4f1aOOM\u7684. \u4ee5\u4e0b\u662f\u6211\u4eec\u5f00\u53d1\u7684\u5206\u6790\u7ed3\u679c\nIdentityHashMap.java\n  public final V get(K key) {\n        final int hash = System.identityHashCode(key);\n        final int bucket = hash & indexMask;\n        for (Entry entry = buckets[bucket]; entry != null; entry = entry.next) {\n            if (key == entry.key) { //\u6709\u95ee\u9898\u7684\u903b\u8f91\uff0c\u5728\u5904\u7406\u5e26\u8303\u578b\u7684key\u65f6\uff0c\u8fd4\u56de\u4e3afalse\n                return (V) entry.value;\n            }\n        }\n        return null;\n    }\n\u4f8b\u5b50\nTypeReference t1 = new TypeReference>(){};\nTypeReference t2 = new TypeReference>(){};\nTypeReference t3 = new TypeReference(){};\nTypeReference t4 = new TypeReference(){};\nSystem.out.println(\"HashMap t1 == t2 \" + (t1.getType() == t2.getType()));\nSystem.out.println(\"Test t1 == t2 \" + (t3.getType() == t4.getType()));\nHashMap t1 == t2 false\nTest t1 == t2 true\n\u5bfc\u81f4\u5e26\u53cd\u7701\u7684type \u5728\u7f13\u5b58\u67e5\u4e0d\u5230\uff0c\u7f13\u5b58\u5c31\u4f1a\u4e00\u76f4\u589e\u52a0\n@qulei841026 . ",
    "liwenxian": "https://github.com/alibaba/fastjson/issues/849\nhttps://github.com/alibaba/fastjson/commit/ef50a5b756a6cab1ab753f4a661bdfb0ccbd6b7e\n\u5e94\u8be5\u662f\u5347\u7ea7\u6210\u6700\u65b0\u7684\u5427\n. ",
    "guochangFree": "\nParserConfig\u4e0d\u8981\u6bcf\u6b21\u90fdnew\uff0c\u505a\u6210\u5355\u4f8b\n\n\u8fd9\u4e2a\u662fidentityHashMap\u4e0d\u65adput\u7684\u95ee\u9898\uff0c\u505a\u4e0d\u505a\u6210\u5355\u4f8b\u6ca1\u5173\u7cfb\u5427\u3002. ",
    "yuhaocan": "\u662f\u7684 . \u6211\u662f\u5728\u8c03\u7528GankIo\u7684\u516c\u7528\u63a5\u53e3\u65f6\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\uff0cApi\u4f5c\u8005\u5e94\u8be5\u662f\u7528\u4e86ISO 8601\u6269\u5c55\u683c\u5f0f\u5427. ",
    "loongshaw": "Thanks @wenshao .. ",
    "weiqinghang": "\u6211\u5b9a\u4e49\u4e86\u5982\u4e0bfieldResolver\uff1a\n        new FieldTypeResolver() {\n             Type resolve(Object object, String fieldName) {\n                 if (fieldName.equals(\"xxDate\")) {\n                     return Date.class;\n                 }\n             return null;\n         }\n     }\n\n\u4f46\u8c8c\u4f3c\u4e0d\u884c\uff0c\u6587\u6863\u4e2d\u63d0\u5230FieldTypeResolver\u4ec5\u652f\u6301json object\u7c7b\u578b\u7684\u5b57\u6bb5\u3002\n. \u4e0d\u592a\u660e\u767d\u600e\u4e48\u64cd\u4f5c\uff0c\u80fd\u8be6\u7ec6\u8bf4\u8bf4\u5417\uff1f \u5b9a\u4e49\u65b9\u6cd5\uff1a\nJSONObject parse(String o, Map<String, Class> typeMapping) {\n  ...\n}\n\u6bd4\u5982\u8f93\u5165\u662f:\nString s = \"{\\\"name\\\":\\\"zhangsan\\\", \\\"age\\\": 5, \\\"cdate\\\": 1484031543903}\";\nMap mapping = new HashMap();\nmapping.put(\"cdate\", Date.class);\nJSONObject obj = parse(s, mapping);\n\u671f\u671b\u8f93\u51fa\u662f:\nJSONObject m = new JSONObject();\nm.put(\"name\", \"zhangsan\");\nm.put(\"age\", 5);\nm.put(\"cdate\", new Date(1484031543903));\nm;\nAssert.assertEquals(obj, m);. ",
    "HJ20161028": "\u62b1\u6b49\uff0c\u6211\u5bf9Java\u6ca1\u6709\u6df1\u5165\u5b66\u4e60\uff0c\u76ee\u524d\u8fdb\u4e86\u524d\u7aef\u7684\u5751\u3002\u3002\u3002\u4f60\u5728\u95ee\u95ee\u522b\u7684\u670b\u53cb\u5427\u3002\n\u5728 2017-02-07 15:58:53\uff0c\"googleweb\" notifications@github.com \u5199\u9053\uff1a\n\u76f4\u63a5\u8f6c\u6210\u5bf9\u8c61\u53ef\u4ee5\u4e48\nimport java.util.Date;\nimport com.alibaba.fastjson.JSON;\npublic class DateTest {\nprivate String name;\nprivate int age;\nprivate Date cdate;\npublic String getName() {\n    return name;\n}\npublic void setName(String name) {\n    this.name = name;\n}\npublic int getAge() {\n    return age;\n}\npublic void setAge(int age) {\n    this.age = age;\n}\npublic Date getCdate() {\n    return cdate;\n}\npublic void setCdate(Date cdate) {\n    this.cdate = cdate;\n}\npublic static void main(String[] args) {\nString text = \"{\\\"name\\\":\\\"zhangsan\\\", \\\"age\\\": 5, \\\"cdate\\\": 1484031543903}\";\nDateTest ttt = JSON.parseObject(text, DateTest.class);\n\nSystem.out.println(ttt.getCdate());\n\n}\n}\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "zhangyy3": "\u5728fastjson \u5728toString(bean)\u7684\u65f6\u5019\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u6cd5\u628a\u4e00\u4e2along \u7c7b\u578b\u7684\u6570\u636e\u53d8\u6210String ,\u6bd4\u5982{\"a\":123}->{\"a\":\"123\"}. @JSONField(serializeUsing= ToStringSerializer.class)\nprivate Long questionPid = 0L;\n\u8fd9\u4e2a\u662f\u6211\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f60\u53ef\u4ee5\u91cd\u5199\u4e00\u4e2a\u7c7b\u4f3cToStringSerializer\u7684\u7c7b\uff0c\u53ef\u4ee5\u770b\u770bToStringSerializer\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5c31\u660e\u767d\u4e86\n\n\u53d1\u4ef6\u4eba: yangszz notifications@github.com\n\u53d1\u9001\u65f6\u95f4: 2017\u5e746\u67085\u65e5 5:20:12\n\u6536\u4ef6\u4eba: alibaba/fastjson\n\u6284\u9001: zhangyy3; Mention\n\u4e3b\u9898: Re: [alibaba/fastjson] \u8bf7\u95ee\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5982\u4f55\u6307\u5b9a\u5c06\u4e00\u4e2ajson\u4e32\u4e2d\u67d0\u4e2a\u503c\u4e3along\u578b\u7684key\u8f6c\u6362\u4e3aDate\u7c7b\u578b (#990)\n@zhangyy3https://github.com/zhangyy3 \u89e3\u51b3\u4e86\u5417 \u6211\u4e5f\u6709\u8fd9\u4e2a\u9700\u6c42\n\u2015\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/alibaba/fastjson/issues/990#issuecomment-306105370, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYqicfiUHUZvLKw6TGBJhHToIQJdMl8Sks5sA5AMgaJpZM4LfFzu.\n. ",
    "yangszz": "@zhangyy3 \u89e3\u51b3\u4e86\u5417 \u6211\u4e5f\u6709\u8fd9\u4e2a\u9700\u6c42. @zhangyy3 \n\u591a\u8c22! \u6211\u66f4\u65b0\u4e86fastjson\u7684\u65b0\u7248\u672c\u7528\u4e86\u4ed6\u7684SerializerFeature.WriteNonStringValueAsString\u5c5e\u6027\n\u8fd9\u5c5e\u6027\u597d\u50cf\u5bf9map\u4e0d\u652f\u6301,\u4e0d\u8fc7\u5bf9\u6211\u6765\u8bf4\u591f\u7528\u4e86.. ",
    "linapex": "\u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06spring\u7248\u672c\u56de\u9000\u5230 4.3.3.RELEASE \u5219\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\uff0c4.3.5.RELEASE \u4e0e fastjson-1.2.24.jar\u3002 . org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fastJsonpResponseBodyAdvice' defined in URL [jar:file:/C:/Tools/apache-tomcat-7.0.54/webapps/carson-web-mvc-demo/WEB-INF/lib/fastjson-1.2.24.jar!/com/alibaba/fastjson/support/spring/FastJsonpResponseBodyAdvice.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean found for dependency [java.lang.String[]]: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)\n    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1051)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:751)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:861)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:541)\n    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4973)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1247)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1898)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n    at java.lang.Thread.run(Thread.java:722)\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean found for dependency [java.lang.String[]]: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1463)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1094)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1056)\n    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n    ... 29 more\n\u4e8c\u6708 17, 2017 11:43:16 \u4e0b\u5348 org.apache.catalina.core.StandardContext listenerStart\n\u4e25\u91cd: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fastJsonpResponseBodyAdvice' defined in URL [jar:file:/C:/Tools/apache-tomcat-7.0.54/webapps/carson-web-mvc-demo/WEB-INF/lib/fastjson-1.2.24.jar!/com/alibaba/fastjson/support/spring/FastJsonpResponseBodyAdvice.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean found for dependency [java.lang.String[]]: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)\n    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1051)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:751)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:861)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:541)\n    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4973)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1247)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1898)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n    at java.lang.Thread.run(Thread.java:722)\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean found for dependency [java.lang.String[]]: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1463)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1094)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1056)\n    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n    ... 29 more. ",
    "wanghantong": "\u6211\u4e5f\u9047\u5230\u4e86\u3002\u3002\u3002. ",
    "javaXN": "\u4eca\u5929\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff08\u540c\u6837\u7684\u9519\u8bef\uff09\u3002\u9664spring4.3.5+fastjson1.2.16 \u5747\u51fa\u73b0\u76f8\u540c\u95ee\u9898\u3002 fastjson1.2.17~1.2.24 \u5747\u6709\u540c\u6837\u95ee\u9898\u3002. ",
    "ShadowSaint": "\u8bf7\u95ee\u9519\u8bef\u7684\u793a\u4f8b\u5de5\u7a0b\u4ee3\u7801\u600e\u4e48\u53d1\u7ed9\u4f60\u5462?\u63d0\u4f9b\u4e00\u4e2a\u90ae\u7bb1\u5427.\n\u53e6\u5916\u6211\u63cf\u8ff0\u51fa\u9519\u4e86,\u5e94\u8be5\u662fSpringMVC 4.3.5\u7528\u4e0d\u4e86fastjson1.2.23\n @myoss . @wenshao @VictorZeng @myoss \n\u975e\u5e38\u5bf9\u4e0d\u8d77,\u5728myoss\u56de\u590d\u6211\u4f7f\u7528\u6211\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u95ee\u9898\u4ee5\u540e,\n\u6211\u5728\u591a\u4e2a\u540c\u4e8b\u7684\u7535\u8111\u4e0a\u5bfc\u5165\u4e86\u6211\u7684\u9879\u76ee,\u8fd0\u884c,\u679c\u7136\u6ca1\u6709\u95ee\u9898,\u65ad\u5b9a\u662f\u6211\u7535\u8111\u7684\u95ee\u9898.\n\u4e8e\u662f\u6211\u5c06jdk\u5347\u7ea7\u81f31.8.0.121,tomcat\u5347\u7ea7\u81f39.0.0.M17,idea\u5347\u7ea7\u81f32016.3.4,\u91cd\u65b0\u914d\u7f6e\u4ee5\u540e,\u95ee\u9898\u89e3\u51b3\n\u6211\u8fd9\u53f0\u7535\u8111\u5df2\u7ecf\u7528\u6765\u5f00\u53d1\u4e86\u4e00\u5e74\u591a\u4e86,\u4e00\u76f4\u6ca1\u6709\u95ee\u9898,\u51fa\u4e86\u95ee\u9898\u4ee5\u540e\u6211\u6ca1\u60f3\u8fc7\u662f\u7531\u4e8e\u7535\u8111\u5bfc\u81f4\u7684,\u7ed9\u4f60\u4eec\u5e26\u6765\u4e86\u8bf8\u591a\u56f0\u6270,\u6211\u611f\u5230\u975e\u5e38\u7684\u62b1\u6b49.\n\u5bf9\u4e0d\u8d77.\n\u975e\u5e38\u611f\u8c22\u4f60\u4eec\u7ed9\u6211\u4eec\u5f00\u53d1\u8005\u5e26\u6765\u8fd9\u4e48\u597d\u7528\u7684JSON\u5de5\u5177,\u8c22\u8c22.. \u4e4b\u524d\u6211\u4e5f\u9047\u5230\u7c7b\u4f3c\u95ee\u9898\u4e86,\u4f60\u770b\u4e00\u4e0bSpringmvc\u914d\u7f6e\u6587\u4ef6\u91cc:\n<context:component-scan base-package=\"com.XXXXXXX\"/>\n\u8fd9\u91cc\u662f\u4e0d\u662f\u53ea\u6307\u5b9a\u5230\u626b\u63cfcom\u6587\u4ef6\u5939\u4e86(\u6216\u8005\u7c7b\u4f3c\u7684\u539f\u56e0)\n\u540e\u9762\u7cbe\u786e\u5230\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u540d\u6587\u4ef6\u8def\u5f84\u5c31\u597d\u4e86. \u539f\u56e0\u5927\u6982\u662f\u56e0\u4e3a\ncom/alibaba/fastjson/support/spring/FastJsonpResponseBodyAdvice.class\n\u8fd9\u4e2a\u6587\u4ef6\u4e5f\u88ab\u626b\u63cf\u5230\u4e86,\u800cspringmvc\u7684\u914d\u7f6e\u6587\u4ef6\u91cc\u53c8\u6ca1\u6709\u5bf9\u5b83\u9700\u8981\u7684\u53c2\u6570\u8fdb\u884c\u914d\u7f6e.\n\u4f5c\u8005\u8bf4\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684,\u4fee\u590d\u4e4b\u524d\u5c31\u5199\u7ec6\u4e00\u70b9\u5427\n(\u540e\u6765\u6211\u89c9\u5f97\u8fd8\u662f\u5e94\u8be5\u5199\u7684\u7cbe\u786e\u4e00\u70b9,\u641e\u4e0d\u597d\u518d\u5f15\u5165\u4ec0\u4e48\u522b\u7684\u7b2c\u4e09\u65b9\u5305\u7684\u65f6\u5019\u53c8\u51fa\u4ec0\u4e48\u95ee\u9898...). \u5565...?\n\u4e0d..\u4e0d\u5199POC\u554a...\n\u6211\u5c31\u662f\u770b\u770b\u65b0\u7248\u672c\u6709\u6ca1\u6709\u65b0\u529f\u80fd\u7528...\n\u4ece\u524d\u90fd\u6709\u7684,\u6e29\u5927\u795e\u5199\u7684,\u6bcf\u4e2a\u7248\u672c\u51e0\u5341\u5230\u4e00\u767e\u5b57\u5427,\n1,2,3,4,5\u4e00\u6761\u4e00\u6761\u8bf4\u660e\u8fd9\u4e2a\u7248\u672c\u65e5\u5e38\u4fee\u590d\u4e86\u4ec0\u4e48\u4ec0\u4e48BUG\n\u4eca\u5929\u771f\u662f\u627e\u4e86\u5f88\u4e45\u627e\u4e0d\u5230. ",
    "Ccixyj": "\u4f3c\u4e4e\u662fkotlin\u81ea\u52a8\u52a0\u4e0a\u6cdb\u578b\u7684\u4e0a\u9650\u5bfc\u81f4,Address\u7c7b\u6ca1\u6709\u5b50\u7c7b.\u6240\u4ee5\u89e3\u6790\u6709\u95ee\u9898.\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4ec0\u4e48\u53c2\u6570\u8bbe\u7f6e\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n/com/alibaba/fastjson/parser/ParserConfig.java:311 \ntype \u7c7b\u578b\u4e3a ? extends com.cfzx.api.util.Address \u6240\u4ee5\u5224\u65ad\u4e3afalse\ntype \u7c7b\u578b\u4e3a WildcardType  \u5b9e\u73b0\u7c7b\u4e3aWildcardTypeImpl\n. ",
    "xinghalo": "\u6211\u4e5f\u662f\u5185\u90e8\u7c7b\u7684\u539f\u56e0\u5bfc\u81f4\u7684\u3002. ",
    "chenying99": "\u60a8\u597d \u6211\u7684\u6d4b\u8bd5\u6587\u4ef6\u6709\u70b9\u5927\uff0c\u4e0d\u65b9\u4fbf\u8005\u8fd9\u91cc\u8d34\u51fa\u6765\n\u5df2\u4e0a\u4f20\u5230\u5730\u5740\uff1a\nhttp://tlss.space/tmp/test.zip \n\u5176\u4e2djson\u683c\u5f0f\u6570\u636e\u4e2d\u7684htmlContent\u5b57\u6bb5\u7684\u503c \u662f\uff08\u7279\u6b8a\u5b57\u7b26\uff09 \u8f6c\u4e49\u540e\u7684html\u5b57\u7b26\u4e32\uff0c\u662f\u7a0b\u5e8f\u8f93\u51fa\u7684\uff0c\u4e00\u822c\u4e0d\u4f1a\u5b58\u5728\u683c\u5f0f\u95ee\u9898\n\u6211\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5982\u679c\u4fee\u6539htmlContent\u5b57\u6bb5\u7684\u503c\u4e3a \u51e0\u4e2a\u6c49\u5b57\uff0c\u5219fastjson\u7a0b\u5e8f\u80fd\u591f\u6b63\u5e38\u8bfb\u53d6\uff0c\u56e0\u6b64\uff0c\u95ee\u9898\u5728\u4e8efastjson\u8bfb\u53d6 \u8f6c\u4e49\u540e\u7684html\u5b57\u7b26\u4e32 \u5b58\u5728bug\n\u6211\u7684\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a\nJSONReader reader = new JSONReader(new FileReader(\"test.json\"));\n    reader.startObject();\n\n    int i = 0;\n    while (reader.hasNext()) {\n        // reader.readObject();//.readString();\n\n        String key = reader.readString();\n\n        System.out.println(key);\n        System.out.println(\"\u8ba1\u6570\uff1a\" + i);\n\n        if (key.equalsIgnoreCase(\"sd\")) {\n            Object obj = reader.readObject();\n\n        }\n\n        if (key.equalsIgnoreCase(\"data\")) {\n\n            reader.startObject();// start\n            String objectKey = reader.readString();\n            System.out.println(\"objectKey:\" + objectKey);\n            if (objectKey.equalsIgnoreCase(\"node\")) {\n                // System.out.println(\"\u5230\u4e86\u91cc\u9762\u5566\u2026\u2026\");\n                reader.startArray();\n                int count = 0;\n                while (reader.hasNext()) {\n\n                    /*\n                     * reader.startObject(); while (reader.hasNext()) {\n                     * String str = reader.readString();\n                     * System.out.println(str); str = reader.readString();\n                     * System.out.println(str);\n                     * \n                     * } reader.endObject();\n                     */\n\n                    /*\n                     * String str = reader.readString();\n                     * System.out.println(str);\n                     */\n\n                    Map<String, Object> map = Maps.newHashMap();\n\n                    // Object obj=reader.readObject();\n\n                    // String str=reader.readString();\n\n                    reader.readObject(map);\n\n                    Iterator<String> itr = map.keySet().iterator();\n                    // System.out.println(map);\n                    while (itr.hasNext()) {\n                        String key2 = itr.next();\n                        Object value2 = map.get(key2);\n                        System.out.println(key2 + \":\" + value2);\n                    }\n\n                    count++;\n                    System.out.println(\"---------------\" + count + \"-----------------\");\n\n                }\n                reader.endArray();\n            }\n            objectKey = reader.readString();\n            // System.out.println(objectKey+\"\u662f\u4ec0\u4e48\");\n\n            if (objectKey.equalsIgnoreCase(\"event\")) {\n                reader.readObject();\n\n            }\n\n            reader.endObject();// end\n        }\n\n        i++;\n\n    }\n    reader.endObject();\n    reader.close();\n\n}. \u5475\u5475 \u8f9b\u82e6\u4e86  \uff01 \u6211\u53ef\u4ee5\u7528paRserObject\uff0c\u6211\u7684\u5b9e\u9645\u6587\u4ef6\u6bd4\u8fd9\u4e2a\u5927\u4e00\u70b9\u70b9\u554a\uff01\n\n\u4e0d\u8fc7\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u5173\u952e\u7684BUG\uff0c\u4e0d\u89e3\u51b3 \u6240\u6709\u7c7b\u4f3c\u5927\u6587\u4ef6\u90fd\u5904\u7406\u4e0d\u4e86 @wenshao . \u8c22\u8c22 \n\u53ea\u662f\u6211\u89c9\u5f97 \u8fd9\u4e48\u5199\njsonObject\nJSON.toJSONString(jsonObject, true)\n\u4e0d\u5982jsonObject.toJSONString(true)\u65b9\u4fbf. ",
    "yangjq123": "\u6211\u4eec\u6700\u8fd1\u6709\u4e2a\u9700\u6c42\u60f3\u7528\u6a21\u677f\u914d\u7f6e\u7684\u65b9\u5f0f \u5c06\u56fa\u5b9a\u534f\u8bae\u7684json\u8f6c\u6362\u6210xml,\u5176\u4e2d\u89e3\u6790json\u7528\u5230\u4e86jsonPath\u3002$Axxxx.Bxxxx.Cxxxxx[Dxxxxx='14']\u4e2d\u7684Dxxxxx\u4ee3\u8868\u67d0\u79cd\u4e1a\u52a1\uff0c$Axxxx.Bxxxx.data\u8282\u70b9\u5b58\u653e\u5177\u4f53\u7684\u4e1a\u52a1\u6570\u636e.\u6709\u5f88\u591a\u7684Bxxxx\u5206\u652f. \u60a8\u597d:\n         \u5c31\u662f\u7c7b\u4f3cxpath\u91cc\u9762 .. \u7684\u529f\u80fd\u3002\u89e3\u6790jsonPath\u7684\u65f6\u5019\u80af\u5b9a\u4f1a\u5c06\u4e0a\u6b21\u76ee\u5f55\u8bb0\u5f55\u5230\u5185\u5b58\uff0c\u5e94\u8be5\u53ef\u4ee5\u56de\u9000\u5230\u4e0a\u4e2a\u8282\u70b9\u7684\u89e3\u6790\u70b9\u5427\uff1f\n    json\u7684\u5c42\u7ea7\u5173\u7cfb\u5982\u4e0b\u56fe\uff1a\n    a\n      --b{e,f='10',g }\n      --c{h,i,j }\n      --d{}\n\n     a\u662f\u7236\u8282\u70b9\uff0cb\u3001c\u3001d\u662fa\u7684\u540c\u7ea7\u5b50\u8282\u70b9\uff0ce\u3001f\u3001g \u662fb\u7684\u5b50\u8282\u70b9\u3002\u60f3\u83b7\u53d6f=10\u65f6i\u7684\u503c\u3002\u60f3\u50cf\u4e2djsonPath\u662f\uff1a     $.a.b[f='10']...c.b \n    \u73b0\u5728 .. \u5728jsonPath\u5df2\u7ecf\u53e6\u505a\u4ed6\u7528\u4e86\uff0c\u6211\u5199\u7684..\u53ea\u662f\u8868\u8fbe\u8fd4\u56de\u4e0a\u7ea7\u7236\u8282\u70b9\u7684\u610f\u601d\u3002\n\nyang_jie_qi\n\u53d1\u4ef6\u4eba\uff1a \u9ad8\u94c1\n\u53d1\u9001\u65f6\u95f4\uff1a 2017-01-27 15:21\n\u6536\u4ef6\u4eba\uff1a alibaba/fastjson\n\u6284\u9001\uff1a yangjq123; Author\n\u4e3b\u9898\uff1a Re: [alibaba/fastjson] \u83b7\u53d6\u5df2\u6709jsonpath\u7684\u4e0a\u7ea7\u8282\u70b9 (#1002)\n\u6ca1\u60f3\u597d\u600e\u4e48\u5b9e\u73b0\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "iamfeng": "OK \u4fee\u590d\u597d\u4e86\u5c31\u597d\uff0cjson-lib fastjson \u5171\u7528\u90fd\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\u3002 \u8fd9\u4e2a\u201cnull\u201d \u5982\u679c\u662f\u76f4\u63a5 stringSerializer \u662f\u4e0d\u62a5\u9519\uff0c\u53ea\u662f\u5728map\u4e0b\u5728\u8c03\u7528 stringSerializer \u624d\u4f1a\u62a5\u9519\u3002. ",
    "ywlm423": "\u8bfb\u53d6\u7684json\u6587\u672c,\u6bd4\u8f83\u5927,\u8bfb\u7684\u8fc7\u7a0b\u5728 jsonReader.readString()\u65b9\u6cd5\u5c31\u62a5\u4e86java.lang.ArrayIndexOutOfBoundsException: src.length=8192 srcPos=-1 dst.length=8192 dstPos=0 length=8192. \u8bfb\u53d6\u4e0b\u9762\u7684json\u6570\u636e\u65f6,\u8bfb\u5230rows\u6570\u7ec4\u7684\u7b2c4\u6761json\u7684problem_values\u5b57\u6bb5\u5c31\u62a5\u9519\u4e86\n{\"result\":[{\"operation\":\"replace_insert\",\"table\":\"checkquality_problem\",\"rows\":[{\"id\":\"016a8d37-e81f-f189-e403-610c89d2e5c6\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e09\u5c42\u526a\u529b\u5899\u3001\u67f1 \u5b9e\u6d4b\u5782\u76f4\u5ea6\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-283c-e615-6b298d9de5a6\",\"image_file\":\"[]\",\"measurement_points\":\"85\",\"problem_points\":\"26\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-29 14:13:21\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1321.13,\\\"y\\\":293.94},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1147.51,\\\"y\\\":315.12},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1078.61,\\\"y\\\":328.89},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":955.94,\\\"y\\\":329},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1395.68,\\\"y\\\":553.03},{\\\"val\\\":11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1325.27,\\\"y\\\":818.24},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1126.19,\\\"y\\\":1167.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":956.22,\\\"y\\\":1152.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1152.01,\\\"y\\\":1306.09,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1033.88,\\\"y\\\":1438.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":961.69,\\\"y\\\":1685.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1379.87,\\\"y\\\":2052.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":965.48,\\\"y\\\":1838.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":956.05,\\\"y\\\":1943.34,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1318.81,\\\"y\\\":2207.74,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1254.12,\\\"y\\\":2153.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1038.45,\\\"y\\\":2251.3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":959.25,\\\"y\\\":2127.21,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":958.57,\\\"y\\\":2321.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1142.78,\\\"y\\\":2623.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1310.16,\\\"y\\\":2945.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1127.45,\\\"y\\\":2789.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1112.61,\\\"y\\\":2782.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1035.33,\\\"y\\\":2845.15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1126.3,\\\"y\\\":2950.35,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1389.63,\\\"y\\\":2520.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-29 13:49:51\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-29 14:13:23\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac421-1979-907b-27d8-4cb8ebc4460e_orig.jpg\\\",\\\"name\\\":\\\"19-4#-3\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"032616d2-951e-3a1f-2a9f-a8b2db934a80\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e00\u5c42\u526a\u529b\u5899\u3001\u67f1\u5782\u76f4\u5ea6\u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-94ed-7f10-194d881bc021\",\"image_file\":\"[]\",\"measurement_points\":\"93\",\"problem_points\":\"35\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-19 11:29:13\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1345.09,\\\"y\\\":353.46},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1107.33,\\\"y\\\":341.5},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1037.15,\\\"y\\\":361.49},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":910.42,\\\"y\\\":352.61},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1343.27,\\\"y\\\":747.49},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1114.67,\\\"y\\\":602.55},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1112.16,\\\"y\\\":931.9},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1330.46,\\\"y\\\":1062.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1318.9,\\\"y\\\":1276.21,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1084.54,\\\"y\\\":1056.29,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1043.41,\\\"y\\\":1161.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":918.39,\\\"y\\\":1146.15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":926.96,\\\"y\\\":1248.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1118.71,\\\"y\\\":1286.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1001.66,\\\"y\\\":1432.47,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1187.41,\\\"y\\\":1786.36,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1094.88,\\\"y\\\":1910.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1057.83,\\\"y\\\":1942.66,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":939.46,\\\"y\\\":2008.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1351.42,\\\"y\\\":1969.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1183.85,\\\"y\\\":2039.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1073.14,\\\"y\\\":2194.36,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1009.33,\\\"y\\\":2233.33,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":928.02,\\\"y\\\":2233.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":920.04,\\\"y\\\":2427.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1362.34,\\\"y\\\":2162.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1050.21,\\\"y\\\":2346.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1333.72,\\\"y\\\":2616.35,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1082.37,\\\"y\\\":2584.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1274.13,\\\"y\\\":2755.1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1210.33,\\\"y\\\":2719.67,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1077.16,\\\"y\\\":2757.74,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1002.34,\\\"y\\\":2805.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1266.73,\\\"y\\\":2909.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":926.93,\\\"y\\\":2991.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-15 14:45:27\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-19 11:29:14\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac41f-86cd-6a8a-77cb-8bf019edcbd3_orig.jpg\\\",\\\"name\\\":\\\"19-4#-1\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"16209932-bab8-f8a9-d9d6-86b824804a27\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u56db\u5c42\u526a\u529b\u5899\u3001\u67f1\u5e73\u6574\u5ea6\u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-b3cc-758d-dc1f8bd2694f\",\"image_file\":\"[]\",\"measurement_points\":\"61\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 14:26:22\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 14:23:01\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 14:26:23\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3ea-bd59-cc94-dc48-4538be57092d_orig.jpg\\\",\\\"name\\\":\\\"19-1#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"250a432c-7392-d61a-9d0f-6428d20e6958\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-9548-eae9-0f71e2a6c6d2\",\"image_file\":\"[]\",\"measurement_points\":\"64\",\"problem_points\":\"1\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-15 13:58:25\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1497.54,\\\"y\\\":1820.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-15 13:49:34\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-15 14:20:29\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"28df1599-29e4-c6c5-aee2-43a97ba89408\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u56db\u5c42\u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-b3cc-758d-dc1f8bd2694f\",\"image_file\":\"[]\",\"measurement_points\":\"120\",\"problem_points\":\"64\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 15:13:26\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":-2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1425.14,\\\"y\\\":428.87},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1538.69,\\\"y\\\":689.16},{\\\"val\\\":28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1467.94,\\\"y\\\":646.61},{\\\"val\\\":23,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1421.87,\\\"y\\\":609.68},{\\\"val\\\":20,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1399.36,\\\"y\\\":697.84},{\\\"val\\\":20,\\\"x\\\":1571.79,\\\"y\\\":925.19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1574.11,\\\"y\\\":987.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1493.28,\\\"y\\\":964.33,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1438.83,\\\"y\\\":1006.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1585.27,\\\"y\\\":1078.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1574.26,\\\"y\\\":1183.75,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1440.78,\\\"y\\\":1177.09,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1576.49,\\\"y\\\":1323.59,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1578.89,\\\"y\\\":1439.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1439.12,\\\"y\\\":1324.85,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1439.1,\\\"y\\\":1429.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1427.6,\\\"y\\\":1511.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1511.81,\\\"y\\\":2023.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1441.95,\\\"y\\\":1975.9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1569.47,\\\"y\\\":2228.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1508.51,\\\"y\\\":2273.62,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1436.36,\\\"y\\\":2227.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1438.06,\\\"y\\\":2322.67,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1491.19,\\\"y\\\":2439.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1037.07,\\\"y\\\":611.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":956.08,\\\"y\\\":681.34,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1035.51,\\\"y\\\":849.22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":953.46,\\\"y\\\":925.33,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":876.63,\\\"y\\\":1000.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1044.42,\\\"y\\\":1085.15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":960.72,\\\"y\\\":1139.92,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":866.49,\\\"y\\\":1071.09,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":868.13,\\\"y\\\":1219.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1044.31,\\\"y\\\":1292.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1046.19,\\\"y\\\":1424.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":32,\\\"x\\\":964.57,\\\"y\\\":1365.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":883.11,\\\"y\\\":1421.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1041.6,\\\"y\\\":1511.05,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1015.37,\\\"y\\\":1656.96,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":947.17,\\\"y\\\":1579.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":881.43,\\\"y\\\":1512.63,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1047.76,\\\"y\\\":1903.74,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1036.93,\\\"y\\\":1964.55,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1022.61,\\\"y\\\":2099.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":881.77,\\\"y\\\":2113.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":1036.9,\\\"y\\\":2194.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":1031.76,\\\"y\\\":2322.37,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":961.89,\\\"y\\\":2248.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":858.71,\\\"y\\\":2187.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":871.07,\\\"y\\\":2336,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":963.62,\\\"y\\\":2475.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":869.97,\\\"y\\\":2559.19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1025.06,\\\"y\\\":2640.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1028.04,\\\"y\\\":2780.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":958.88,\\\"y\\\":2699.55,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":866.26,\\\"y\\\":2633.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":876.19,\\\"y\\\":2786.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1029.29,\\\"y\\\":3001.62,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":952.92,\\\"y\\\":2942.99,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":884.04,\\\"y\\\":2865.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":861.8,\\\"y\\\":3002.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1434.76,\\\"y\\\":1903.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1569.79,\\\"y\\\":1971.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1574.71,\\\"y\\\":2074.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 14:38:19\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 15:13:27\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3ea-bd59-cc94-dc48-4538be57092d_orig.jpg\\\",\\\"name\\\":\\\"19-1#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"3099dce4-5885-12ae-fa2f-6cb17530bcfe\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-92f8-c87a-016fc9296f97\",\"image_file\":\"[]\",\"measurement_points\":\"45\",\"problem_points\":\"12\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-06 19:45:36\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1193.58,\\\"y\\\":637.13},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":735.76,\\\"y\\\":576},{\\\"val\\\":12,\\\"x\\\":646.92,\\\"y\\\":574.63,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":878.48,\\\"y\\\":1181.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":938.75,\\\"y\\\":1232.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":638.32,\\\"y\\\":1437.77,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":937.7,\\\"y\\\":2400.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":865.87,\\\"y\\\":2323.24,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":658.73,\\\"y\\\":2317.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1209.2,\\\"y\\\":2761.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1498.65,\\\"y\\\":2763.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1559.82,\\\"y\\\":2771.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-06 19:19:12\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-06 19:45:37\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"47adce54-51f5-6d23-3132-c684875c3cc7\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e00\u5c42\u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-94ed-7f10-194d881bc021\",\"image_file\":\"[]\",\"measurement_points\":\"180\",\"problem_points\":\"97\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 14:12:52\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":20,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1252.69,\\\"y\\\":349.87},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1286.85,\\\"y\\\":569.89},{\\\"val\\\":13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1221.36,\\\"y\\\":428.22},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1188.73,\\\"y\\\":568.58},{\\\"val\\\":-6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1219.54,\\\"y\\\":827.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1165.75,\\\"y\\\":1235.36,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-12,\\\"x\\\":1182.03,\\\"y\\\":1302.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-15,\\\"x\\\":1257.98,\\\"y\\\":1729.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-12,\\\"x\\\":1218.52,\\\"y\\\":1767.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1192.14,\\\"y\\\":1723.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1309.97,\\\"y\\\":1827.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1323.32,\\\"y\\\":1900.26,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":37,\\\"x\\\":1346.73,\\\"y\\\":2032.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1358.69,\\\"y\\\":2080.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":1283.73,\\\"y\\\":2070.52,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":35,\\\"x\\\":1272.4,\\\"y\\\":2042.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1274.29,\\\"y\\\":2092.75,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":41,\\\"x\\\":1346.65,\\\"y\\\":2346.65,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1348.34,\\\"y\\\":2389.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1306.83,\\\"y\\\":2359.01,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1259.92,\\\"y\\\":2337.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":1333.47,\\\"y\\\":2443.55,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":39,\\\"x\\\":1347.73,\\\"y\\\":2499.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":1301.08,\\\"y\\\":2472.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1266.76,\\\"y\\\":2445.83,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1282.09,\\\"y\\\":2501.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1348.92,\\\"y\\\":2600.55,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":26,\\\"x\\\":1351.67,\\\"y\\\":2668,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1321.34,\\\"y\\\":2638.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1345.53,\\\"y\\\":2721.85,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1253.26,\\\"y\\\":2865.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":1353.16,\\\"y\\\":2916.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1343.76,\\\"y\\\":2946.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1313.3,\\\"y\\\":2931.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1269.31,\\\"y\\\":2914.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1264,\\\"y\\\":2965.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1349.98,\\\"y\\\":3009.66,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1344.34,\\\"y\\\":3057.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":26,\\\"x\\\":1309.31,\\\"y\\\":3040.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1236.8,\\\"y\\\":3013.05,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":1256.35,\\\"y\\\":3068.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":36,\\\"x\\\":907.66,\\\"y\\\":355.96,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":45,\\\"x\\\":920.06,\\\"y\\\":440.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1030.48,\\\"y\\\":559.58,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":28,\\\"x\\\":1016.5,\\\"y\\\":611.5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1013.36,\\\"y\\\":671.97,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":28,\\\"x\\\":968.62,\\\"y\\\":636.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":918.69,\\\"y\\\":668.92,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":998.05,\\\"y\\\":788.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1013.49,\\\"y\\\":1017.65,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1027.82,\\\"y\\\":1087.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":966.62,\\\"y\\\":1048.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":925.64,\\\"y\\\":1096.11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1014.49,\\\"y\\\":1160.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1032.65,\\\"y\\\":1238.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":914.17,\\\"y\\\":1152.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-15,\\\"x\\\":971.57,\\\"y\\\":1328.07,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-11,\\\"x\\\":926.29,\\\"y\\\":1360.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-19,\\\"x\\\":915.18,\\\"y\\\":1801.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":923.76,\\\"y\\\":1929.62,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":1023.28,\\\"y\\\":2008.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1024.33,\\\"y\\\":2090.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":928.21,\\\"y\\\":2089.77,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1022.24,\\\"y\\\":2153.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":26,\\\"x\\\":1017.34,\\\"y\\\":2241.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":44,\\\"x\\\":972.61,\\\"y\\\":2194.69,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":32,\\\"x\\\":920.78,\\\"y\\\":2148.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":928.96,\\\"y\\\":2226.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1021.16,\\\"y\\\":2293.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":26,\\\"x\\\":1019.68,\\\"y\\\":2394.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":32,\\\"x\\\":965.65,\\\"y\\\":2337.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":926.65,\\\"y\\\":2294.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":918.38,\\\"y\\\":2387.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1029.56,\\\"y\\\":2441.5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1022.65,\\\"y\\\":2512.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":975.46,\\\"y\\\":2474.22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":915.44,\\\"y\\\":2440.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":917.05,\\\"y\\\":2517.15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1016.68,\\\"y\\\":2593.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":26,\\\"x\\\":1023.19,\\\"y\\\":2661.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":43,\\\"x\\\":969.89,\\\"y\\\":2615.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":39,\\\"x\\\":918.61,\\\"y\\\":2580.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":42,\\\"x\\\":920.8,\\\"y\\\":2658.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1021.05,\\\"y\\\":2722.92,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":36,\\\"x\\\":1020.46,\\\"y\\\":2815.37,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":981,\\\"y\\\":2757.11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":38,\\\"x\\\":922.48,\\\"y\\\":2719.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":33,\\\"x\\\":918.42,\\\"y\\\":2803.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":34,\\\"x\\\":1012.43,\\\"y\\\":2861.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1026.7,\\\"y\\\":2967.06,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":35,\\\"x\\\":968.72,\\\"y\\\":2905.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":36,\\\"x\\\":915.44,\\\"y\\\":2863.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":922.45,\\\"y\\\":2950.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1026.85,\\\"y\\\":3023.41,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":40,\\\"x\\\":1026.8,\\\"y\\\":3096.56,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":53,\\\"x\\\":973.34,\\\"y\\\":3041.52,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":45,\\\"x\\\":909.68,\\\"y\\\":3091.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 09:53:27\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 14:12:55\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac41f-86cd-6a8a-77cb-8bf019edcbd3_orig.jpg\\\",\\\"name\\\":\\\"19-4#-1\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"4a61f834-111f-773f-6ba1-8e4da5340120\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e00\u5c42\u5899\u3001\u67f1\u8868\u9762\u5e73\u6574\u5ea6\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-94ed-7f10-194d881bc021\",\"image_file\":\"[]\",\"measurement_points\":\"93\",\"problem_points\":\"1\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-15 15:06:07\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1069.02,\\\"y\\\":2335.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-15 14:45:48\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-15 15:06:08\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"6041c850-ddf3-edd4-22a0-685fb894091c\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u4e94\u5c42\u526a\u529b\u5899\u3001\u67f1\u5b9e\u6d4b \u5e73\u6574\u5ea6\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-69a1-f1f5-efdb9f4d4599\",\"image_file\":\"[]\",\"measurement_points\":\"60\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-23 12:40:49\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-23 12:38:02\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-23 12:40:51\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3eb-06e9-7e96-35ef-28121f0cf9c4_orig.jpg\\\",\\\"name\\\":\\\"19-1#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"74772388-0ce9-528c-6949-2f0875c415e4\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u4e94\u5c42\u526a\u529b\u5899\u3001\u67f1\u5b9e\u6d4b \u5782\u76f4\u5ea6\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-69a1-f1f5-efdb9f4d4599\",\"image_file\":\"[]\",\"measurement_points\":\"60\",\"problem_points\":\"23\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-23 12:56:33\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1573.66,\\\"y\\\":1191.69},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1573.96,\\\"y\\\":1325.11},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1572.45,\\\"y\\\":2086.55},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1574.64,\\\"y\\\":2963.48},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1309.27,\\\"y\\\":445.91},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1164.68,\\\"y\\\":382.35},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1257.29,\\\"y\\\":728.06},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1111.91,\\\"y\\\":705.45},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1114.72,\\\"y\\\":920.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1361.19,\\\"y\\\":1219.56,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1265.54,\\\"y\\\":1612.96,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1117.33,\\\"y\\\":1593.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1037.92,\\\"y\\\":1656.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1188.59,\\\"y\\\":2102.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1312.45,\\\"y\\\":2239.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":888.89,\\\"y\\\":2349.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1039.24,\\\"y\\\":2547.36,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1054.34,\\\"y\\\":2639.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1266.1,\\\"y\\\":2695.92,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1313.08,\\\"y\\\":2948.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1173.45,\\\"y\\\":3033.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":893.57,\\\"y\\\":2848.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":919.64,\\\"y\\\":3002.09,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-23 12:41:08\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-23 12:56:35\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3eb-06e9-7e96-35ef-28121f0cf9c4_orig.jpg\\\",\\\"name\\\":\\\"19-1#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"75d73f07-67e7-fa1f-821f-50087c13c5af\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-9548-eae9-0f71e2a6c6d2\",\"image_file\":\"[]\",\"measurement_points\":\"64\",\"problem_points\":\"26\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-15 14:38:32\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1421.61,\\\"y\\\":411.37},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1197.13,\\\"y\\\":420.1},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1496,\\\"y\\\":751.71},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1497.15,\\\"y\\\":848.92},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1495.1,\\\"y\\\":1063.81},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":998.52,\\\"y\\\":1797.13},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1133.73,\\\"y\\\":710.49},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":783.48,\\\"y\\\":834.45},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":787.09,\\\"y\\\":1215.96},{\\\"val\\\":10,\\\"x\\\":773.09,\\\"y\\\":1443.15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1463.16,\\\"y\\\":1170.1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1476.93,\\\"y\\\":1317.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1497.91,\\\"y\\\":1817.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":994.91,\\\"y\\\":1799.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1060.86,\\\"y\\\":2109.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1495.43,\\\"y\\\":2324.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1154.85,\\\"y\\\":2492.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":994.96,\\\"y\\\":2470.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":945.03,\\\"y\\\":2544.66,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1480.82,\\\"y\\\":2963.99,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1413.81,\\\"y\\\":2973.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1054.09,\\\"y\\\":3022.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":996.63,\\\"y\\\":2685.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":780.32,\\\"y\\\":2999.47,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":820.77,\\\"y\\\":3004.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1502.03,\\\"y\\\":2470.26,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-15 13:59:51\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-15 14:38:33\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"7a6913a5-256a-7d1c-64c7-06e41bb8785d\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2#\u697c\u56db\u5c42\u526a\u529b\u5899\u3001\u67f1\u5e73\u6574\u5ea6\u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-9ffa-a3f5-1ac69423f5e9\",\"image_file\":\"[]\",\"measurement_points\":\"41\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 15:18:52\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 15:15:44\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 15:18:58\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-7339-55d6-9e3f-9f740961d3bd_orig.jpg\\\",\\\"name\\\":\\\"19-2#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"7bb99927-ddbb-fe3e-66ce-e457ce4ca403\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e8c\u5c42\u526a\u529b\u5899\u3001\u67f1\u5782\u76f4\u5ea6\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-2267-7bab-67f81ea93645\",\"image_file\":\"[]\",\"measurement_points\":\"85\",\"problem_points\":\"22\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-22 11:00:58\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1231.82,\\\"y\\\":328.8},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1040.08,\\\"y\\\":570.84},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1430.01,\\\"y\\\":544.55},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1162.66,\\\"y\\\":932.05},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1047.59,\\\"y\\\":789.72},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":960.34,\\\"y\\\":1143.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":964.32,\\\"y\\\":1693.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1377.16,\\\"y\\\":2060.35,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1228.69,\\\"y\\\":2062.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1169.39,\\\"y\\\":2031.24,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":975.37,\\\"y\\\":2034.58,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1114.15,\\\"y\\\":2204.67,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1323.53,\\\"y\\\":2216.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1047.43,\\\"y\\\":2324.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1439.94,\\\"y\\\":2308.09,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1389.6,\\\"y\\\":2513.75,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":955.81,\\\"y\\\":2449.26,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1315.36,\\\"y\\\":2949.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":960.67,\\\"y\\\":2918.58,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":966.28,\\\"y\\\":3131.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1135.31,\\\"y\\\":2800.56,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1039.04,\\\"y\\\":2842.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 16:10:50\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-22 11:01:00\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac420-cc00-7a29-0394-b4778d92bb9f_orig.jpg\\\",\\\"name\\\":\\\"19-4#-2\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"97011c50-055c-e6bb-630f-9ded50a0e2cb\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-92f8-c87a-016fc9296f97\",\"image_file\":\"[]\",\"measurement_points\":\"45\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-06 19:45:57\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-06 18:29:26\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-06 19:45:59\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"9a04def4-db7a-d3de-e12f-d5503850ecaf\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-92f8-c87a-016fc9296f97\",\"image_file\":\"[]\",\"measurement_points\":\"80\",\"problem_points\":\"46\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-06 20:15:17\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1564.03,\\\"y\\\":751.9},{\\\"val\\\":18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1470.35,\\\"y\\\":683.15},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1382.62,\\\"y\\\":765.31},{\\\"val\\\":24,\\\"x\\\":1518.8,\\\"y\\\":848.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1540.08,\\\"y\\\":974.99,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1452.88,\\\"y\\\":904.19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1336.1,\\\"y\\\":870.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1427.25,\\\"y\\\":1318.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1366.34,\\\"y\\\":1382.42,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1565.36,\\\"y\\\":1468.77,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1367.4,\\\"y\\\":1450.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1564.76,\\\"y\\\":1923.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1474.51,\\\"y\\\":1848.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1387.79,\\\"y\\\":1791.13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1377.57,\\\"y\\\":1929.13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1544.55,\\\"y\\\":2025.59,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1538.36,\\\"y\\\":2122.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1472.19,\\\"y\\\":2082.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1525.75,\\\"y\\\":2427.42,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1496.01,\\\"y\\\":2687.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1398.18,\\\"y\\\":2627.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1391.12,\\\"y\\\":2773.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":872.61,\\\"y\\\":580.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":879.69,\\\"y\\\":748.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":756.19,\\\"y\\\":665.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":645.71,\\\"y\\\":590.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":647.75,\\\"y\\\":743.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":876.28,\\\"y\\\":854.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":761.34,\\\"y\\\":940.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":641.68,\\\"y\\\":856.23,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":881.87,\\\"y\\\":1376.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":642.35,\\\"y\\\":1353.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":862.45,\\\"y\\\":1636.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":870.7,\\\"y\\\":1747.76,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":879.68,\\\"y\\\":1938.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":644.74,\\\"y\\\":1750.69,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":746.78,\\\"y\\\":2128.39,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":639.68,\\\"y\\\":2242.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":767.18,\\\"y\\\":2440.02,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":641.67,\\\"y\\\":2331.05,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":640.52,\\\"y\\\":2527.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":878.19,\\\"y\\\":2627.21,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":32,\\\"x\\\":870.86,\\\"y\\\":2811.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":47,\\\"x\\\":752.02,\\\"y\\\":2721.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":640.67,\\\"y\\\":2625.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":639.24,\\\"y\\\":2820.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-06 18:42:40\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-06 20:15:18\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":null,\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"a44e6679-3cdf-fdf2-cd01-cd14f43ee9ec\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e09\u5c42\u526a\u529b\u5899\u3001\u67f1 \u5b9e\u6d4b\u5e73\u6574\u5ea6\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-283c-e615-6b298d9de5a6\",\"image_file\":\"[]\",\"measurement_points\":\"85\",\"problem_points\":\"1\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-29 13:49:34\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1412.8,\\\"y\\\":2679.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-29 13:44:21\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-29 13:49:35\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac421-1979-907b-27d8-4cb8ebc4460e_orig.jpg\\\",\\\"name\\\":\\\"19-4#-3\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"a70326d4-8961-0987-e14a-1a955336bb0a\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2#\u697c\u56db\u5c42\u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-9ffa-a3f5-1ac69423f5e9\",\"image_file\":\"[]\",\"measurement_points\":\"80\",\"problem_points\":\"67\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 15:47:12\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1750.18,\\\"y\\\":739.44},{\\\"val\\\":19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1645.05,\\\"y\\\":660.58},{\\\"val\\\":16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1567.46,\\\"y\\\":600.04},{\\\"val\\\":17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1552.38,\\\"y\\\":740.95},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1697.23,\\\"y\\\":846.03},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1693.06,\\\"y\\\":950.42},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1535.52,\\\"y\\\":950.64},{\\\"val\\\":32,\\\"x\\\":1721.02,\\\"y\\\":1264.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":33,\\\"x\\\":1687.21,\\\"y\\\":941.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1621.07,\\\"y\\\":882.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1528.61,\\\"y\\\":832.76,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1735.29,\\\"y\\\":1608.13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1648.01,\\\"y\\\":1536.04,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1541.17,\\\"y\\\":1456.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1541.68,\\\"y\\\":1616.02,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1735.64,\\\"y\\\":1811.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1742.45,\\\"y\\\":1956.11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":1635.95,\\\"y\\\":1882.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1547.27,\\\"y\\\":1806.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":28,\\\"x\\\":1555.44,\\\"y\\\":1956.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":1708.4,\\\"y\\\":2057.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1701.53,\\\"y\\\":2159.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1613.63,\\\"y\\\":2099.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1542.08,\\\"y\\\":2053.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1538.04,\\\"y\\\":2164.9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":37,\\\"x\\\":1699.57,\\\"y\\\":2470.9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":1695.01,\\\"y\\\":2587.58,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1622.06,\\\"y\\\":2523.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1734.99,\\\"y\\\":2688.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1731.81,\\\"y\\\":2817.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":1650.82,\\\"y\\\":2743.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1556.81,\\\"y\\\":2679.05,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1554.09,\\\"y\\\":2818.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1022.63,\\\"y\\\":551.3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1031.06,\\\"y\\\":743.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":914.48,\\\"y\\\":643.04,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":776.89,\\\"y\\\":534.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1017.88,\\\"y\\\":841.69,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":999.85,\\\"y\\\":1035.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":898.29,\\\"y\\\":947.12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":782.65,\\\"y\\\":839.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":781.03,\\\"y\\\":1043.33,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1012.62,\\\"y\\\":1163.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1029.7,\\\"y\\\":1371.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":906.34,\\\"y\\\":1260.8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":773.63,\\\"y\\\":1144.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":779.31,\\\"y\\\":1365.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1030.02,\\\"y\\\":1467.01,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1016.19,\\\"y\\\":1663.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":897.6,\\\"y\\\":1555.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":789.45,\\\"y\\\":1468.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1020.66,\\\"y\\\":1754.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":1033.64,\\\"y\\\":1970.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":900.89,\\\"y\\\":1868.56,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":781.06,\\\"y\\\":1764.02,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":785.34,\\\"y\\\":1953.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1021.91,\\\"y\\\":2047.66,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":28,\\\"x\\\":910.15,\\\"y\\\":2163.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":798.08,\\\"y\\\":2051.04,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":32,\\\"x\\\":778.24,\\\"y\\\":2268.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1031.05,\\\"y\\\":2581.65,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":33,\\\"x\\\":914.78,\\\"y\\\":2484.34,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":775.51,\\\"y\\\":2362.08,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":780.15,\\\"y\\\":2575.41,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":1021.9,\\\"y\\\":2876.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":896.67,\\\"y\\\":2781.1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":786.93,\\\"y\\\":2877.47,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 15:30:54\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 15:47:13\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-7339-55d6-9e3f-9f740961d3bd_orig.jpg\\\",\\\"name\\\":\\\"19-2#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"a8c443cd-fba6-59c4-1e0b-f75da588d096\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u56db\u5c42\u526a\u529b\u5899\u3001\u67f1\u5782\u76f4\u5ea6 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-b3cc-758d-dc1f8bd2694f\",\"image_file\":\"[]\",\"measurement_points\":\"61\",\"problem_points\":\"20\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 14:37:27\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1536.63,\\\"y\\\":447.7},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1296.79,\\\"y\\\":447.35},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1032.95,\\\"y\\\":766},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1090.25,\\\"y\\\":925.34},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":871.5,\\\"y\\\":1063.73},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1127.92,\\\"y\\\":1209.11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1542.88,\\\"y\\\":1328.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1031.94,\\\"y\\\":1667.67,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":874.48,\\\"y\\\":1665.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1240.35,\\\"y\\\":1783.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1101.22,\\\"y\\\":1829.42,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1030.24,\\\"y\\\":1739.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":879.18,\\\"y\\\":1958.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":895.45,\\\"y\\\":2355.21,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1238.88,\\\"y\\\":2511.85,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1039.54,\\\"y\\\":2550.76,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1091.6,\\\"y\\\":2712.12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1289.71,\\\"y\\\":2950.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":1155.03,\\\"y\\\":3039.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":908.12,\\\"y\\\":3013.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 14:26:50\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 14:37:29\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3ea-bd59-cc94-dc48-4538be57092d_orig.jpg\\\",\\\"name\\\":\\\"19-1#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"aec72480-4564-d174-691d-62f65d90c022\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e8c\u5c42\u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-2267-7bab-67f81ea93645\",\"image_file\":\"[]\",\"measurement_points\":\"135\",\"problem_points\":\"34\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-22 14:46:35\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1325.86,\\\"y\\\":327.76},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1234.62,\\\"y\\\":324.43},{\\\"val\\\":22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1222.64,\\\"y\\\":547.66},{\\\"val\\\":-5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1361.48,\\\"y\\\":815.18},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1304.89,\\\"y\\\":1353.47},{\\\"val\\\":-5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1226.08,\\\"y\\\":1349.19},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1160.55,\\\"y\\\":431.77},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":20,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":957.17,\\\"y\\\":413.01},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1050.17,\\\"y\\\":652.34,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":956.55,\\\"y\\\":530.68,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":956.09,\\\"y\\\":709.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1057.21,\\\"y\\\":936.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1055.76,\\\"y\\\":833.42,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":964.23,\\\"y\\\":1010.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":968.61,\\\"y\\\":1078.32,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1242.74,\\\"y\\\":1756.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1007.69,\\\"y\\\":1752.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1050.01,\\\"y\\\":1945.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1013.13,\\\"y\\\":1902.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":971.15,\\\"y\\\":2035.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":997.44,\\\"y\\\":2219.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":961.01,\\\"y\\\":2176.52,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1047.24,\\\"y\\\":2403.34,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":964.52,\\\"y\\\":2407.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1057.88,\\\"y\\\":2478.27,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1059.81,\\\"y\\\":2548.05,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1058.5,\\\"y\\\":2610.31,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":957,\\\"y\\\":2543.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1057.3,\\\"y\\\":2613.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":959.23,\\\"y\\\":2410.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1365.06,\\\"y\\\":2959.59,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":1369.22,\\\"y\\\":2998.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1313.17,\\\"y\\\":2957.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1299.13,\\\"y\\\":2993.06,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-22 11:02:46\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-22 14:46:36\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac420-cc00-7a29-0394-b4778d92bb9f_orig.jpg\\\",\\\"name\\\":\\\"19-4#-2\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"c1a19d5b-8449-7dd1-15dd-8ae13bd1d254\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2#\u697c\u4e94\u5c42\u526a\u529b\u5899\u3001\u67f1 \u5b9e\u6d4b\u5782\u76f4\u5ea6\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d047-e044-f278-ac1208efffac\",\"image_file\":\"[]\",\"measurement_points\":\"41\",\"problem_points\":\"20\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-27 09:47:39\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1763.27,\\\"y\\\":1250.04},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1713.27,\\\"y\\\":1793.3},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1767.23,\\\"y\\\":1943.37},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1769.34,\\\"y\\\":2467.81},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1717.05,\\\"y\\\":2819.75},{\\\"val\\\":10,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1364.27,\\\"y\\\":599.26},{\\\"val\\\":7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":805.07,\\\"y\\\":543.93},{\\\"val\\\":11,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1281.42,\\\"y\\\":981.48},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1085.13,\\\"y\\\":946.23},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":992.58,\\\"y\\\":1015.65},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1281.67,\\\"y\\\":1211.34},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1085.08,\\\"y\\\":1233.38},{\\\"val\\\":10,\\\"x\\\":989.47,\\\"y\\\":1156.26,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1194.06,\\\"y\\\":1654.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1105.19,\\\"y\\\":1643.13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1016.04,\\\"y\\\":2246.85,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1081.33,\\\"y\\\":2447.84,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1364.66,\\\"y\\\":1817.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1358.62,\\\"y\\\":2803.45,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":805.1,\\\"y\\\":2863.87,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-23 12:58:39\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-27 09:47:40\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-cd74-45c7-a22d-dc5bce580d0e_orig.jpg\\\",\\\"name\\\":\\\"19-2#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"cf235920-1f19-8387-98c8-d3df8d0838e4\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2#\u697c\u4e94\u5c42 \u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d047-e044-f278-ac1208efffac\",\"image_file\":\"[]\",\"measurement_points\":\"80\",\"problem_points\":\"25\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-29 15:53:43\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":-9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":0,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1699.79,\\\"y\\\":939.27},{\\\"val\\\":-2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":-15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1533.4,\\\"y\\\":944.55},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-11,\\\"x\\\":1553.96,\\\"y\\\":1602.37,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1735.46,\\\"y\\\":1801.38,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1745.21,\\\"y\\\":1940.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1653.04,\\\"y\\\":1877.83,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1566.04,\\\"y\\\":1952.43,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1690.95,\\\"y\\\":2464.5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1698.38,\\\"y\\\":2569.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1653.42,\\\"y\\\":2525.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1739.85,\\\"y\\\":2677.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1737.42,\\\"y\\\":2795.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1664.51,\\\"y\\\":2738.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1548.22,\\\"y\\\":2661.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1005.64,\\\"y\\\":1158.59,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1024.14,\\\"y\\\":1470.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":998.77,\\\"y\\\":1756.77,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":887.85,\\\"y\\\":1844.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":911.1,\\\"y\\\":2141.67,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":812.08,\\\"y\\\":2065.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":787.03,\\\"y\\\":2242.55,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":890.42,\\\"y\\\":2471.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":807.3,\\\"y\\\":2233.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1022.11,\\\"y\\\":2676.79,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":909.93,\\\"y\\\":2769.17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-29 15:37:56\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-29 15:53:44\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-cd74-45c7-a22d-dc5bce580d0e_orig.jpg\\\",\\\"name\\\":\\\"19-2#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"dc4e92c9-af0a-99b6-aa71-8b4b7f3929c0\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"1#\u697c\u4e94\u5c42 \u51c0\u9ad8 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d044-fcd8-8d1a-aaa5dd18d2a9\",\"room_id\":\"39dabbed-d045-69a1-f1f5-efdb9f4d4599\",\"image_file\":\"[]\",\"measurement_points\":\"120\",\"problem_points\":\"82\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-29 15:37:00\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1580.87,\\\"y\\\":439.33},{\\\"val\\\":24,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1590.9,\\\"y\\\":548.13},{\\\"val\\\":17,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1519.75,\\\"y\\\":493.44},{\\\"val\\\":13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1467.26,\\\"y\\\":444.12},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1456.58,\\\"y\\\":540.99},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1560.99,\\\"y\\\":623.92},{\\\"val\\\":24,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1560.51,\\\"y\\\":687.83},{\\\"val\\\":18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1457.2,\\\"y\\\":652.07},{\\\"val\\\":23,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1351.32,\\\"y\\\":610.81},{\\\"val\\\":13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1364.45,\\\"y\\\":673.9},{\\\"val\\\":11,\\\"x\\\":1560.19,\\\"y\\\":928.23,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1560.06,\\\"y\\\":1011.77,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":29,\\\"x\\\":1589.05,\\\"y\\\":1078.98,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":33,\\\"x\\\":1586.23,\\\"y\\\":1179.97,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1533.05,\\\"y\\\":1131.22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":1444.61,\\\"y\\\":1075.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":31,\\\"x\\\":1452.27,\\\"y\\\":1186.69,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1582.35,\\\"y\\\":1335.4,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":20,\\\"x\\\":1589.51,\\\"y\\\":1435.75,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1536.84,\\\"y\\\":1552.13,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1458.34,\\\"y\\\":1429.12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1558.15,\\\"y\\\":1519.71,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1501.67,\\\"y\\\":1546.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1448.64,\\\"y\\\":1580.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":1566.2,\\\"y\\\":1822.16,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1562,\\\"y\\\":1890.2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1533.89,\\\"y\\\":1857.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":0,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":19,\\\"x\\\":1438.1,\\\"y\\\":1895.78,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1526,\\\"y\\\":2016.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1458.06,\\\"y\\\":1977.6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1453.89,\\\"y\\\":2083.39,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1581.55,\\\"y\\\":2228.1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1539.6,\\\"y\\\":2283.44,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1457.08,\\\"y\\\":2328,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":25,\\\"x\\\":1561.13,\\\"y\\\":2407.33,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":27,\\\"x\\\":1564.16,\\\"y\\\":2481.51,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1527.47,\\\"y\\\":2438.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1363.98,\\\"y\\\":2405.9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1531.49,\\\"y\\\":2748.64,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1355.68,\\\"y\\\":2788.83,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1593.31,\\\"y\\\":2965.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1062.32,\\\"y\\\":533.61,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":982.12,\\\"y\\\":475.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":899.93,\\\"y\\\":541.82,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1058.47,\\\"y\\\":631.95,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":893.67,\\\"y\\\":628.22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1054.42,\\\"y\\\":855.5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1057.59,\\\"y\\\":989.19,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":978.32,\\\"y\\\":934.93,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":891.51,\\\"y\\\":1081.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":900.04,\\\"y\\\":987.03,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":21,\\\"x\\\":1061.44,\\\"y\\\":1079.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1058.92,\\\"y\\\":1214.63,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":979.81,\\\"y\\\":1152.53,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":23,\\\"x\\\":891.28,\\\"y\\\":1084.54,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":900.29,\\\"y\\\":1204.04,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":1048.12,\\\"y\\\":1300.85,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1039.73,\\\"y\\\":1419.7,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":895.48,\\\"y\\\":1435.22,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1050.15,\\\"y\\\":1524.41,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":970.65,\\\"y\\\":1582.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":890.53,\\\"y\\\":1519.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":1050.33,\\\"y\\\":1743.3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":981.74,\\\"y\\\":1818.72,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":897.54,\\\"y\\\":1747.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":897.43,\\\"y\\\":1890.57,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":1061.49,\\\"y\\\":1978.88,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":35,\\\"x\\\":1052.01,\\\"y\\\":2113.62,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":982.86,\\\"y\\\":2038.36,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":895.52,\\\"y\\\":2100.41,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":1056.11,\\\"y\\\":2198.28,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":30,\\\"x\\\":1061.3,\\\"y\\\":2326.96,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":975.85,\\\"y\\\":2263.97,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":13,\\\"x\\\":899.42,\\\"y\\\":2199.49,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":18,\\\"x\\\":898.95,\\\"y\\\":2318.23,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":22,\\\"x\\\":1046.75,\\\"y\\\":2555.35,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":968.46,\\\"y\\\":2478.18,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":894.67,\\\"y\\\":2553.81,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":24,\\\"x\\\":1050.68,\\\"y\\\":2645.94,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":979.04,\\\"y\\\":2715.14,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":17,\\\"x\\\":895.65,\\\"y\\\":2652.71,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":-1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":16,\\\"x\\\":903.2,\\\"y\\\":2997.48,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-29 14:17:38\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-29 15:37:03\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3eb-06e9-7e96-35ef-28121f0cf9c4_orig.jpg\\\",\\\"name\\\":\\\"19-1#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"eed7e3be-53fb-c02e-12db-b76942264be5\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b31d-16c3-ddab-caefb658d625\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2\u697c\u56db\u5c42\u526a\u529b\u5899\u3001\u67f1\u5782\u76f4\u5ea6\u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d046-9ffa-a3f5-1ac69423f5e9\",\"image_file\":\"[]\",\"measurement_points\":\"41\",\"problem_points\":\"17\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 15:29:01\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1661.66,\\\"y\\\":585.77},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1190.07,\\\"y\\\":508.59},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1284.99,\\\"y\\\":983.23},{\\\"val\\\":15,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1100.29,\\\"y\\\":970.96},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1690.49,\\\"y\\\":1607.8},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":8,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1086.47,\\\"y\\\":1249.47},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":6,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":9,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1691.5,\\\"y\\\":1794.03},{\\\"val\\\":12,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":1773.82,\\\"y\\\":1948.53},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1366.9,\\\"y\\\":1822.25,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":9,\\\"x\\\":785.38,\\\"y\\\":1654.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1086.29,\\\"y\\\":2179.42,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":11,\\\"x\\\":1271.77,\\\"y\\\":2191.86,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1268.45,\\\"y\\\":2429.3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":10,\\\"x\\\":1002.82,\\\"y\\\":2372.1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":12,\\\"x\\\":1703.09,\\\"y\\\":2825.89,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":15,\\\"x\\\":1186.4,\\\"y\\\":2913.73,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":14,\\\"x\\\":847.79,\\\"y\\\":2876.46,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 15:19:06\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 15:29:02\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-5.0\",\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-7339-55d6-9e3f-9f740961d3bd_orig.jpg\\\",\\\"name\\\":\\\"19-2#-4\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"fae860e0-f38b-0621-e335-b4e7a87897e2\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b302-a886-f9e6-b3a418682bd1\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"2#\u697c\u4e94\u5c42\u526a\u529b\u5899\u3001\u67f1 \u5b9e\u6d4b\u5e73\u6574\u5ea6\u3002\",\"building_id\":\"39dabbed-d046-5227-7c2b-ac032d4be0af\",\"room_id\":\"39dabbed-d047-e044-f278-ac1208efffac\",\"image_file\":\"[]\",\"measurement_points\":\"41\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-27 09:37:13\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":5,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-27 09:34:56\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-27 09:37:15\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":null,\"standard_max\":\"8.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac3f1-cd74-45c7-a22d-dc5bce580d0e_orig.jpg\\\",\\\"name\\\":\\\"19-2#-5\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"},{\"id\":\"fb309f87-20c8-e5d4-23bf-7400a6437279\",\"proj_id\":\"39dabbed-cfe8-8123-7d07-abfa6217e9e3\",\"bidsection_id\":\"39dac467-e904-113b-35f5-afcc737ddc62\",\"batch_id\":\"39dac468-2bb8-576a-ce11-7f894f6a59a9\",\"batch_type\":\"\u5b9e\u6d4b\u5b9e\u91cf(\u65b0)\",\"parent_id\":null,\"item_id\":\"39daaab1-b338-186f-bee4-05bcfdc35789\",\"contractor_id\":\"\",\"desc_id\":\"\",\"remark\":\"4#\u697c\u4e8c\u5c42\u526a\u529b\u5899\u3001\u67f1\u5e73\u6574\u5ea6 \u5b9e\u6d4b\u503c\u3002\",\"building_id\":\"39dabbed-d049-17e0-c5f1-e7fe73c68060\",\"room_id\":\"39dabbed-d049-2267-7bab-67f81ea93645\",\"image_file\":\"[]\",\"measurement_points\":\"85\",\"problem_points\":\"0\",\"status\":\"\u5f85\u6574\u6539\",\"emergency_degree\":\"\u4e00\u822c\",\"regist_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"regist_date\":\"2016-12-20 16:07:18\",\"repair_by\":\"\",\"repair_deadline\":null,\"repair_date\":null,\"repair_remark\":\"\",\"problem_values\":\"[{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":1,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":3,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":2,\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\",\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":6,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":8,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":5,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":2,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":1,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":4,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":3,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"},{\\\"val\\\":7,\\\"x\\\":\\\"\\\",\\\"y\\\":\\\"\\\",\\\"area\\\":\\\"\u6d4b\u533a1\\\",\\\"setVal\\\":\\\"\\\"}]\",\"repair_image_file\":\"[]\",\"sent_back_by\":\"\",\"sent_back_date\":null,\"sent_back_times\":null,\"sent_back_remark\":\"\",\"sent_back_image_file\":\"[]\",\"reinspect_by\":\"\",\"reinspect_completed_date\":null,\"close_date\":null,\"close_reason\":\"\",\"created_on\":\"2016-12-20 15:57:50\",\"created_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"modified_by\":\"39dac419-7761-2a70-626f-9baca25a26f5\",\"update_timestamp\":\"2016-12-20 16:07:20\",\"place\":\"\",\"process_check_id\":\"\",\"unit\":\"\u4e3b\u4f53\",\"passrate_mode\":\"1\",\"standard_min\":\"-10.0\",\"standard_max\":\"10.0\",\"entry_requirements\":\"2\",\"drawing_file\":\"[{\\\"url\\\":\\\"http://img.myysq.com.cn/mobilecheckquality/upload/39dac420-cc00-7a29-0394-b4778d92bb9f_orig.jpg\\\",\\\"name\\\":\\\"19-4#-2\u5c42.jpg\\\"}]\",\"download_time\":\"2017-01-17 20:02:09\"}]}]}. ",
    "yb16916962": "\u5bf9 \u6cdb\u578b\u4f1a\u6539\u53d8 List[] \u4f1a\u53d8\u4e3aList[] \u5f53\u904d\u5386\u53d6\u503c\u4f1a\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u9519\u8bef. 1.2.23. @wenshao 1.2.24\u7248\u672c\u4e2d\u8be5\u95ee\u9898\u8fd8\u662f\u5b58\u5728\u3002. ",
    "sluggard6": "\u5f88\u6709\u7528\uff0c\u975e\u5e38\u611f\u8c22\u3002. \u4e0d\u597d\u610f\u601d\uff0c\u53c8\u6765\u9ebb\u70e6\u4e86\u3002\n\u6211\u53d1\u73b0com.alibaba.fastjson.serializer.Labels\u662f\u6ca1\u6709\u6784\u9020\u5668\u7684\uff0c\u60f3\u8bf7\u6559\u5982\u4f55\u53ef\u4ee5\u628a\u5b83\u5f88\u65b9\u4fbf\u7684\u901a\u8fc7spring\u6ce8\u5165\u5230com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\u7c7b\u91cc\u9762\u554a\uff1f. \u8865\u5145\u4e0b\uff0c\u6211\u81ea\u5df1\u5199\u4e86\u4e00\u4e2aLabelProxy\u7684\u4ee3\u7406\u7c7b\u6765\u4ee3\u7406\u4e00\u4e2aLabelFilter\u7684\u5b9e\u4f8b\u6765\u6ce8\u5165FastJsonHttpMessageConverter\uff0c\u5f88\u65b9\u4fbf\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u79cd\u65b9\u6cd5\u5e94\u8be5\u8fd8\u53ef\u4ee5\u6539\u8fdb\u3002. ",
    "pli2014": "\u76ee\u524d\uff0c SerializeConfig.getGlobalInstance().put(MyClass.class, new ExecutionResultSerializer()); \u76ee\u524d\uff0cMyClass\u6709\u5f88\u591a\u5b50\u7c7b\uff0c\u6211\u9700\u8981\u4e00\u4e2a\u4e2a\u6ce8\u518c\u3002\u80fd\u5426\u6709\u4e2a\u9762\u5411Type\u8fdb\u884c\u6ce8\u518c\u7684\u65b9\u5f0f\u3002 \u8b6c\u5982MyInterafce\u63a5\u53e3\u6709A,B,C\u7b49\u3002 \u4e5f\u5c31\u662f\u5f00\u653e\u4e0b\u6761\u4ef6\u5224\u65ad\u7684\u65b9\u5f0f\u7ed9\u5230\u6ce8\u518c\u8005 \n\u8b6c\u5982\nif(object instanceOf MyInterafce}{\n    return new XXObjectSerializer();  \n  }. ",
    "Reginer": "@googleweb \n\u4f60\u597d\uff0c\u4e0d\u662f\u7684\uff0c\u662f\u9632\u6b62\u6df7\u6dc6\u7684\u89c4\u5219\uff0cAS\u914d\u7f6e\u5728proguard-rules.pro\u6587\u4ef6\u4e0b\u3002\n\u6bd4\u5982\u7f51\u4e0a\u6d41\u4f20\u7684\u89c4\u5219\u662f\u8fd9\u4e2a\uff1a\n-dontwarn com.alibaba.fastjson.\n-keep class com.alibaba.fastjson. { ; }\n-keepattributes Signature\n-keepattributes Annotation*\n\u4f46\u662f\u5e76\u4e0d\u597d\u7528\u3002. ",
    "landawn": "\u53bb\u7406\u89e3\u8fd9\u4e2a\u6027\u80fd\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u5bf9\u6211\u6765\uff0c\u6709\u4e9b\u532a\u5937\u6240\u601d\u3002\u6211\u5efa\u8bae\u4f60\u7528\u4e0b\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u6d4b\u4e00\u4e0b\uff1a\npublic static void main(String[] args) {\n    OrderSource source = JSON.parseObject(\n            \"{\\\"field7\\\":0,\\\"field8\\\":1,\\\"field9\\\":3072917514,\\\"field3\\\":\\\"1126892\\\",\\\"field11\\\":\\\"\\\",\\\"field2\\\":\\\"E20170108114143057876586\\\",\\\"field6\\\":\\\"\\\",\\\"field4\\\":\\\"\\\",\\\"field1\\\":76796,\\\"field5\\\":\\\"\\\"}\",\n            OrderSource.class);\n\n    Profiler.run(16, 1000, 3, () -> JSON.toJSON(source)).printResult();\n\n    System.exit(0);\n}\n\nProfiler\u662f\u4e00\u4e2a\u5de5\u5177\u7c7b\uff1a\n\u8fd9\u662f\u6211\u752816\u4e2a\u5e76\u53d1\u7ebf\u7a0b\u6d4b\u4e0b\u6765\u7684\u7ed3\u679c\uff1a\u5e73\u5747\uff1a0.002\u6beb\u79d2\uff0c\u6700\u5927\uff1a0.659\n===================================================================\n(unit: milliseconds)\nthreadNum=16; loops=1000\nstartTime: 2017-02-15 18:05:28.637\nendTime:   2017-02-15 18:05:28.664\ntotalElapsedTime: 26.891\n,  |avg time|, |min time|, |max time|, |0.01% >=|, |0.1% >=|,  |1% >=|,    |10% >=|,   |20% >=|,   |50% >=|,   |80% >=|,   |90% >=|,   |99% >=|,   |99.9% >=|, |99.99% >=|\nrun,            0.002,      0.001,      0.659,      0.134,      0.010,      0.003,      0.002,      0.002,      0.002,      0.002,      0.002,      0.002,      0.002,      0.002,      \n===================================================================\n. \u5982\u679c\u8981\u6d4b\u8bd5100W\uff0c\u6211\u5efa\u8bae\u4fee\u6539\u4e00\u4e0b\u6d4b\u8bd5\u4ee3\u7801\uff0c\u56e0\u4e3a\u5982\u679c\u5faa\u73af100W\uff0c\u5b58\u50a8\u7684100W\u6d4b\u8bd5\u7ed3\u679c\uff0c\u53ef\u80fd\u5360\u7528\u592a\u591a\u7684\u5185\u5b58\u548c\u5f71\u54cd\u6d4b\u8bd5\u7684\u7ed3\u679c\u3002\u540c\u6837\u5faa\u73af1000\u6b21\uff0c\u4f46\u6bcf\u6b21\u505a1000\u6b21\u5e8f\u5217\u5316\uff0c\u4e0b\u9762\u662f\u5728\u6211\u673a\u5b50\uff08OS: windows 7 64 bit, CUP: intel i7-3520M 2.9GHz 4-cores, JDK: jdk 1.8.0_121, memory: 16G)  \u4e0a\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u7ed3\u679c\uff1a16\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u505a1000\u8c03\u7528\uff0c\u6bcf\u6b21\u8c03\u7528\u505a1000\u6b21\u5e8f\u5217\u5316\uff0c\u4e00\u5171\u662f16 \u00d7 1000 \u00d7 1000 = 1600W\u6b21\u5e8f\u5217\u53f7\uff0c\u5171\u7528\u65f6\u4ec5: 6.4\u79d2\uff0c\u5e73\u5747\u4e00\u6b21\u5e8f\u5217\u5316\u7528\u65f6\u4e5f\u4ec5\uff1a5.669 \u6beb\u79d2 / 1000 = 0.005\u6beb\u79d2\uff0c\u8ddf\u6211\u524d\u9762\u6d4b\u8bd5\u7ed3\u679c\u5728\u540c\u4e00\u4e2a\u7ea7\u522b\u3002\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u597d\u597d\u8bbe\u8ba1\u4f60\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\nOrderSource source = JSON.parseObject(\n        \"{\\\"field7\\\":0,\\\"field8\\\":1,\\\"field9\\\":3072917514,\\\"field3\\\":\\\"1126892\\\",\\\"field11\\\":\\\"\\\",\\\"field2\\\":\\\"E20170108114143057876586\\\",\\\"field6\\\":\\\"\\\",\\\"field4\\\":\\\"\\\",\\\"field1\\\":76796,\\\"field5\\\":\\\"\\\"}\",\n        OrderSource.class);\n\nProfiler.run(16, 1000, 3, () -> {\n    for (int i = 0; i < 1000; i++) {\n        JSON.toJSON(source);\n    }\n}).printResult();\n\n===================================================================\n(unit: milliseconds)\nthreadNum=16; loops=1000\nstartTime: 2017-02-17 12:23:21.385\nendTime:   2017-02-17 12:23:27.816\ntotalElapsedTime: 6431.060\n,  |avg time|, |min time|, |max time|, |0.01% >=|, |0.1% >=|,  |1% >=|,    |10% >=|,   |20% >=|,   |50% >=|,   |80% >=|,   |90% >=|,   |99% >=|,   |99.9% >=|, |99.99% >=|\nrun,            5.669,      0.945,      383.287,    351.462,    261.490,    138.683,    1.757,      1.511,      1.451,      1.436,      1.432,      1.333,      0.951,      0.947,      \n===================================================================\n. \u5c31\u95ee\u4f60\u4e00\u4e2a\u95ee\u9898\u5427\uff1a\u4f60\u770b\u61c2\u4e86\u4e0a\u9762\u4f60\u81ea\u5df1\u6027\u80fd\u6d4b\u8bd5\u4ee3\u7801\u5417\uff1f\u81ea\u5df1\u89e3\u91ca\u4e00\u4e0b. \u53cd\u5e8f\u5217\u5316\u4e00\u4e2aJSON\u5b57\u7b26\u4e32\uff1a {\"@type\":\"net.java8.lambda.TestDomainTest$TestDomain\",\"list\":[1]}\n\u6700\u7ec8\u5f97\u5230TestDomain\u7684List\u91cc\u9762\u6709\u4e24\u4e2a\u201c1\u201d\u3002\n\u8fd9\u4e0d\u5e94\u8be5\u770b\u4f5c\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u7ed3\u679c\u3002. \u5bf9\u4e0d\u8d77\uff0c\u524d\u9762\u6211\u6ca1\u6709\u770b\u4ed4\u7ec6\u770b\u6784\u9020\u51fd\u6570\u7684\u4ee3\u7801\uff1a\npublic TestDomain(){\n    list = new ArrayList<Integer>();\n    list.add(1);\n}\n\u8fd9\u6837\u7684\u6784\u9020\u51fd\u6570\u4e0d\u7b26\u5408\u4e00\u4e2a\u7528\u4e8e\u5e8f\u5217\u5316\u7684\u5e38\u7528\u7ed3\u6784\u4f53\u7684\u89c4\u8303\u3002\u867d\u7136\u53cd\u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u4f46fastjson\u672c\u8eab\u5e76\u6ca1\u6709\u9519\uff0c\u6240\u4ee5\u6211\u5e76\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2abug\uff0c\u540c\u65f6\u4e5f\u4e0d\u8ba4\u4e3a\u6709\u5fc5\u8981\u4e3a\u4e00\u4e9b\u4e0d\u89c4\u8303/\u602a\u5f02\u7684\u9700\u6c42\u53bb\u66f4\u6539\u6846\u67b6\uff0c\u5e94\u5c3d\u91cf\u8ba9\u6846\u67b6\u63a5\u5355\u4e00\u4e9b\u3002\n. @VesperHan \u4f60\u8bf4\u7684\u662f\u5728Eclipse\u6216\u5176\u5b83IDE\u7684\u91cc\u9762\uff0c\u5b57\u7b26\u4e32\uff1a \n     \"{\"message\":\"openid or award is empty\",\"status\":1}\"\n\u662f\u8fd9\u6837\u663e\u793a\u7684\uff1a\n     String msg = \"{\\\"message\\\":\\\"openid or award is empty\\\",\\\"status\\\":1}\";\n\u5982\u679c\u95ee\u9898\u662f\u8fd9\u6837\u7684\uff0c\u8fd9\u4e2a\u662f\u4e0d\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a\"\\\"\u5e76\u4e0d\u662f\u5b57\u7b26\u5185\u5bb9\u7684\u4e00\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\nSystem.out.println(msg);\n// print out: {\"message\":\"openid or award is empty\",\"status\":1}. \u6211\u7528v1.2.38\u505a\u4e86\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u572810\u6beb\u79d2\u5de6\u53f3\uff1a\n```java\n@Test\npublic void test_1721() {\n    Map map = new HashMap<>();\n    String val = N.repeat(\"\u957f\u6c5f\u9ec4\u6cb3\", 30000);\n    for (int i = 0; i < 20; i++) {\n        map.put(N.uuid(), val + i + N.uuid());\n    }\nFj.toJSON(new File(\"./test.json\"), map); // Fj is a wrapper of JSON in fastjson. and the file size > 6 MB\n\nProfiler.run(1, 100, 3, () -> Fj.toJSON(map)).printResult();\n\n}\n```. ",
    "StephenCMZ": "\u4f8b\u5982\uff0c\u4e00\u4e2aList\uff0c\u5f53\u6709\u6570\u636e\u65f6\u8fd4\u56de\u7684\u7c7b\u578b\u662f[]\uff0c\u6ca1\u6709\u6570\u636e\u65f6\u8fd4\u56de\u7684\u662f\"\"\u3002. thank you\uff01 @googleweb . ",
    "jqncc": "label\u8fd9\u529f\u80fd\u7c7b\u4f3c\u54e6\uff0c\u6587\u6863\u6ca1\u770b\u5230. \u8868\u793a\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898. 1.2.38-1.2.41\u7248\u672c\u90fd\u8bd5\u8fc7, spring\u914d\u7f6e\n<mvc:annotation-driven validator=\"validator\">\n        <mvc:message-converters register-defaults=\"true\">\n            <bean class=\"org.springframework.http.converter.StringHttpMessageConverter\">\n                <constructor-arg value=\"UTF-8\" />\n            </bean>\n            <bean\n                class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <value>application/json</value>\n                        <value>text/plain</value>\n                    </list>\n                </property>\n                <property name=\"fastJsonConfig\">\n                    <bean class=\"com.alibaba.fastjson.support.config.FastJsonConfig\">\n                        <property name=\"serializerFeatures\">\n                            <list><!--\u8bbe\u7f6enull\u503c\u4e5f\u8981\u8f93\u51fa\uff0cfastjson\u9ed8\u8ba4\u662f\u5173\u95ed\u7684 -->\n                                <!-- <value>WriteMapNullValue</value> -->\n                                <!-- \u8bbe\u7f6e\u4f7f\u7528\u6587\u672c\u65b9\u5f0f\u8f93\u51fa\u65e5\u671f\uff0cfastjson\u9ed8\u8ba4\u662flong -->\n                                <value>WriteDateUseDateFormat</value>\n                                <!-- \u5173\u95ed\u5faa\u73af\u5f15\u7528\u68c0\u6d4b -->\n                                <value>DisableCircularReferenceDetect</value>\n                                <!-- \u517c\u5bb9\u6d4f\u89c8\u5668 -->\n                                <value>BrowserCompatible</value>\n                            </list>\n                        </property>\n                        <property name=\"charset\" value=\"UTF-8\" />\n                        <property name=\"dateFormat\" value=\"yyyy-MM-dd HH:mm:ss\"></property>\n                    </bean>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n@JSONField(format = \"yyyy-MM-dd\")\n    public java.sql.Date getUpdateDate() {\n        return updateDate;\n    }. \u540c\u6837\u95ee\u9898,\u81f3\u4eca\u6ca1\u89e3\u51b3.\u8fd8\u6709\u6807\u51c6\u6ce8\u89e3@Transient\u4e5f\u4e0d\u751f\u6548. \u540c\u6837\u95ee\u9898,\u81f3\u4eca\u6ca1\u89e3\u51b3.\u8fd8\u6709\u6807\u51c6\u6ce8\u89e3@Transient\u4e5f\u4e0d\u751f\u6548. ",
    "5-Ason": "\u5728fastjson-1.2.25\u4e2d\u4f7f\u7528\u201c2017-02-12 01:46:17.0\u201d\u65f6\u6ca1\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u65e5\u671f\u7c7b\u578b\u662f\u6709\u4ec0\u4e48\u9650\u5236\u7684\u5417\uff1f. ",
    "kictto": "\u6211\u6709\u4e00\u4e2ajson\u91cc\u9762\u7684\u65e5\u671f\uff0c\u662f2017/09\u8fd9\u79cd\u683c\u5f0f\u7684\uff0c\u53ea\u6709\u8fd9\u4e48\u591a\uff0c\u9006\u5e8f\u5217\u5316\uff0c\u65e5\u671f\u662fDate\u7c7b\u578b\uff0c\u627e\u4e86\u6587\u6863\uff0c\u90fd\u662f\u63cf\u8ff0\u5e8f\u5217\u5316\u7684\uff0c\u6ca1\u6709\u5173\u4e8e\u9006\u5e8f\u5217\u5316\u7684\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5b8c\u6574\u7684json\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff1f. ",
    "xladykiller": "```java\npublic class JsonTest{\n   @Test\n    public void testJson() {\n    String json = \"{\\\"ld\\\":\\\"2016-11-11\\\"}\";\n\n    Vo vo = JSON.parseObject(json, Vo.class);\n    System.out.println(vo.getLd());\n    json = \"{\\\"ld\\\":\\\"\\\"}\";\n    vo = JSON.parseObject(json, Vo.class);\n    System.out.println(vo.getLd());\n    json = \"{\\\"ld\\\":null}\";\n    vo = JSON.parseObject(json, Vo.class);\n    System.out.println(vo.getLd());\n\n}\n\npublic static class Vo {\n    @JSONField(deserializeUsing = Jdk8DateCodec.class)\n    private LocalDate ld;\n\n    public LocalDate getLd() {\n        return ld;\n    }\n\n    public void setLd(LocalDate ld) {\n        this.ld = ld;\n    }\n}\n\n}\n.java\n  @Test\n    public void testJson() {\n    String json = \"{\\\"ld\\\":\\\"\\\"}\";\n\n    Vo vo = JSON.parseObject(json, Vo.class);\n    System.out.println(vo);\n\n}\n\npublic static class Vo{\n    private LocalDate ld;\n\n    public LocalDate getLd() {\n        return ld;\n    }\n\n    public void setLd(LocalDate ld) {\n        this.ld = ld;\n    }\n}\n\n```\ncom.alibaba.fastjson.JSONException: Text '' could not be parsed at index 0. ",
    "haogrgr": "\u6d4b\u8bd5OK. ",
    "jihch": "\u4f60\u770b\u554a \u6211\u7684list \u91cc\u9762\u662f \u6bcf\u4e00\u4e2a\u5143\u7d20 \u90fd\u662fJSON\u5b57\u7b26\u4e32\uff0c\u5e76\u4e0d\u662f JSONObject \u5bf9\u8c61\uff0c\n\u6211\u662f\u60f3 \u5728 \u628a list \u8f6c\u6210 JSONArray \u7684\u540c\u65f6\uff0c\u628a list \u91cc\u9762 \u6bcf\u4e00\u4e2a JSON \u5b57\u7b26\u4e32 \u8f6c\u6210\u4e00\u4e2a JSONObject \u5bf9\u8c61\uff0c\n\u5c31\u662f \u6700\u7ec8 \u8f6c\u6210\u4e00\u4e2a \u653eJSONObject \u5bf9\u8c61\u4eec \u7684 JSONArray \u5bf9\u8c61\uff0c\u6211 \u7b2c\u4e00\u6b21 \u8868\u8ff0 \u6709\u95ee\u9898\uff0c\u5176\u5b9e \u5e94\u8be5\u662f \u8fd9\u6837\u7684 \uff1a\nList jSONStringList = new ArrayList();\njSONStringList.add(\"{\\\"FieldA\\\":\"xxxx\",\\\"FieldB\\\":\\\"xxxx\\\",\\\"FieldC\\\":\\\"xxxx\\\"}\");\njSONStringList.add(\"{\\\"FieldA\\\":\"xxxx\",\\\"FieldB\\\":\\\"xxxx\\\",\\\"FieldC\\\":\\\"xxxx\\\"}\");\n\u7136\u540e\u5728 \u6211\u60f3\u50cf\u4e2d\uff0c\u662f\u60f3 \u6709\u8fd9\u6837\u7684 \u4ee3\u7801:\nJSONArray jSONArray = JSON.parse(jSONStringList, new TypeReference>() {});\n\u6211\u7559\u610f\u5230\u6709\u4e2aParserConfig\u7684\u7c7b\uff0c\u53ef\u4ee5\u501f\u52a9\u5b83 \u5b9e\u73b0\u5417\uff1f. \u989d~~ \u6cdb\u578b\u7684\u62ec\u53f7 \u88ab\u5c4f\u853d\u4e86 \n\u53ea\u80fd\u4e0a\u56fe\u4e86\n\n. ",
    "Salon-sai": "\u6709\u53e6\u5916\u7684\u65b0\u53d1\u73b0\n\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u628ahttps\u6539\u6210file\u5c31\u4e0d\u53ef\u4ee5\u4e86\u3002\u5982\u4e0b\uff1a\njava\nUri uri = Uri.parse(\"file://haha\");\nString str = JSON.toJSONString(uri);\n\u4e3b\u8981\u56e0\u4e3a\u51fa\u73b0\u4e86\u6b7b\u5faa\u73af\u3002\u56e0\u4e3a\u5728\u5728\u7c7bandroid.net.Uri\u4e2d\u7684getCanonicalUri\u65b9\u6cd5\njava\npublic Uri getCanonicalUri() {\n   if (\"file\".equals(getScheme())) {\n      ...\n      return Uri.fromFile(new File(canonicalPath));\n   } else {\n      return this;\n   }\n}\n\u8fd9\u4f1a\u65e0\u9650\u751f\u6210Uri\u7684\u5b50\u7c7b\u5e76\u4e14\u4e0d\u505c\u89e3\u6790Uri\uff0c\u4ee5\u81f4\u51fa\u73b0\u6b7b\u5faa\u73af\u4e8ecom.alibaba.fastjson.serializer.FieldSerializer\uff0c\u7b2c137\u884c\u3002\njava\nif (valueClass == runtimeInfo.runtimeFieldClass) {\n   runtimeInfo.fieldSerializer.write(serializer, propertyValue, fieldInfo.name, fieldInfo.fieldType);\n   return;\n}\n\u5904\u7406\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u628acanonicalUri\u5f53\u4f5c\u5b57\u6bb5\u4f7f\u7528SimplePropertyPreFilter\u8fc7\u6ee4\u4e4b\u3002\u4e0d\u77e5\u4f5c\u8005\u6709\u65e0\u5176\u4ed6\u66f4\u597d\u7684\u505a\u6cd5\u3002\u6bd5\u7adf\u8fd9\u79cd\u6b7b\u5faa\u73af\u4e0d\u80fd\u4f7f\u7528SerializerFeature.DisableCheckSpecialChar\u5904\u7406\u3002. ",
    "mapingsheng": "\u90a3\u6837\u7684\u8bdd\u4f1a\u51fa\u73b0put(new String(\"username\"),\"zhangsan\");\u7136\u540e\u5728\u5176\u4ed6\u5730\u65b9\u7528get(\"username\")\u53bb\u83b7\u53d6\u4e0d\u5230\u7684\u60c5\u51b5\uff01\u8fd9\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u5427\uff01. OK\uff0c\u6211\u660e\u767dIdentityHashMap\u7684\u4f7f\u7528\u573a\u666f\u4e86\uff01\u8c22\u8c22\u63d0\u9192 @wenshao . ",
    "yukaizhao": "\u8c22\u8c22\u60a8\u7684\u56de\u590d\u3002  \u6211\u7684\u7248\u672c\u4e0d\u5bf9\u3002. ",
    "iluhcm": "\u5c42\u6b21\u5c0f\u4e8e5\u5c42\u65f6\uff0c\u89e3\u6790\u901f\u5ea6\u662f\u6beb\u79d2\u7ea7\u522b\uff0c5\u5c42\u65f6\uff0c\u6d4b\u8bd5\u67094s+\uff0c6\u5c42\u65f6\uff0c10s+. \u4e0d\u597d\u610f\u601d\uff0c\u56de\u590d\u6162\u4e86\u3002\u8fd8\u6709\u4e2a\u6761\u4ef6\u6211\u5fd8\u8bb0\u8bf4\u4e86\uff0c\u662f\u6253release\u5305\uff0c\u4e5f\u5c31\u662f\u6df7\u6dc6\u8fc7\u7684\u3002\u6211\u7a0d\u540e\u7ed9\u51facase\u3002. \u6d4b\u8bd5\u7684\u5de5\u7a0b\u5df2\u6dfb\u52a0\uff1a\nhttps://github.com/iluhcm/FastJsonTest\n\u6709\u51e0\u4e2a\u6761\u4ef6\uff1a\n\n\u5f00\u542fminifyEnable\nModel\u7ee7\u627f\u7684\u5c42\u6b21\u8f83\u6df1\uff08>=4\uff09\n\u9996\u6b21\u89e3\u6790\uff08\u7b2c\u4e8c\u6b21\u53ca\u4ee5\u540e\u5f88\u5feb\uff09\n\u57fa\u7c7b\u6709\u90e8\u5206\u5e38\u91cf\uff08public static final String\u7c7b\u578b\u7684\uff09\n\n\u7ecf\u6d4b\u8bd5\uff0c\u5728\u5305\u542b\u4e09\u56db\u5341\u4e2a\u5e38\u91cf\u7684\u65f6\u5019\uff0c\u89e3\u6790\u901f\u5ea6\u5927\u7ea6\u4e3a7000+ms\uff0c\u628a\u6240\u6709\u7684\u5e38\u91cf\u53bb\u9664\u4ee5\u540e\uff0c\u65f6\u95f4\u4ece7000+ms\u964d\u4f4e\u4e3a1000+ms\u3002\n\u4e0b\u9762\u662f\u6211\u5728\u5c0f\u7c735s\u4e0a\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u4e0a\u4e00\u4e2a\u662f\u4e0b\u4e00\u4e2a\u7684\u5b50\u7c7b\uff0c\u4f8b\u5982GoodsDetail extends SpringGoods\uff0c\u5177\u4f53\u89c1\u6d4b\u8bd5\u5de5\u7a0b\u3002\n(First Time)\n04-11 13:53:54.306 31497-31650/com.kaola.fastjsontest E/a: Time consume: 7759, Decode class: GoodsDetail\n04-11 13:53:55.562 31497-31650/com.kaola.fastjsontest E/a: Time consume: 1256, Decode class: SpringGoods\n04-11 13:53:55.692 31497-31650/com.kaola.fastjsontest E/a: Time consume: 130, Decode class: ListSingleGoods\n04-11 13:53:55.715 31497-31650/com.kaola.fastjsontest E/a: Time consume: 23, Decode class: BaseGoods\n04-11 13:53:55.717 31497-31650/com.kaola.fastjsontest E/a: Time consume: 2, Decode class: SpringSubModule\n(Second Time)\n04-11 13:53:59.875 31497-32048/com.kaola.fastjsontest E/a: Time consume: 4, Decode class: GoodsDetail\n04-11 13:53:59.877 31497-32048/com.kaola.fastjsontest E/a: Time consume: 2, Decode class: SpringGoods\n04-11 13:53:59.879 31497-32048/com.kaola.fastjsontest E/a: Time consume: 2, Decode class: ListSingleGoods\n04-11 13:53:59.880 31497-32048/com.kaola.fastjsontest E/a: Time consume: 1, Decode class: BaseGoods\n04-11 13:53:59.882 31497-32048/com.kaola.fastjsontest E/a: Time consume: 2, Decode class: SpringSubModule. ",
    "lyulianghui": "JSONLexerBase\nscanString()\u65b9\u6cd5\u8fd9\u6837\u6539\u4e0b\uff0c\u8c8c\u4f3c\u5c31\u597d\u4e86\ndefault:\n                        this.ch = ch;\n                        putChar('\\');\n                        putChar(ch);\n                        //throw new JSONException(\"unclosed string : \" + ch);. \u662f\u5355\u659c\u6760\u62a5\u9519. ",
    "crazymongo": "com.alibaba.fastjson:fastjson-1.1.27-android:1.1.27. \u6211\u7528\u7684\u662f1.1.56.android\u7248\u672c\uff0cHttpException\u4e0d\u662f\u8c03\u7528\u7c7b\u7684\u5185\u90e8\u7c7b\uff0c. \u6211\u7528\u7684\u662f1.1.56.android\u7248\u672c\uff0cHttpException\u4e0d\u662f\u8c03\u7528\u7c7b\u7684\u5185\u90e8\u7c7b\uff0c. \u8c22\u8c22\u5566\uff0c\u5df2\u7ecf\u5f88\u5389\u5bb3\u5566. \u8c22\u8c22\u5566\uff0c\u5df2\u7ecf\u5f88\u5389\u5bb3\u5566. ",
    "riceliu": "\u7248\u672c1.2.7 . ",
    "quxiaojing": "\u521a\u521a\u6d4b\u8bd5\u53d1\u73b0\u4f7f\u75281.2.8\u53ca\u4ee5\u4e0b\u7248\u672c\u53cd\u5e8f\u5217\u5316\u6cdb\u578b\u7c7b\u65f6\u4f1aPermgen\u6301\u7eed\u589e\u957f\uff0c\u76f4\u5230OOM\uff0c\n1.2.9\u53ca\u4e4b\u540e\u7684\u7248\u672c\u672a\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898. ",
    "ahmatjan": "\u80fd\u95ee\u4e00\u54c8\u53cd\u5e8f\u5217\u5316\u7684\u6570\u636e\u4fe1\u606f\u662f\uff1f. ",
    "pistol-gao": "\u67e5\u4e86\u4e0bAPI ,@JSONField(jsonDirect=true)\u5373\u53ef. ",
    "coyoteamgyli": "\u5728jdk1.7\u4e2d\u51fa\u6765\u7684\u7ed3\u679c\u662f{result={Key1=Value1}}\uff1b\n\u5728jdk1.8\u4e2d\u7ed3\u679c\u4e3a{result={\u201cKey1\u201d\uff1a\u201cValue1\u201d}}. ",
    "izee": "\u6211\u4f30\u8ba1\u662fjdk8\u4e2d\uff0cLinkedHashMap\u7684toString\u6216\u8005putAll\u7684\u5b9e\u73b0\u548cjdk7\u4e0d\u4e00\u6837\u4e86\u5427. ",
    "liuhongxu": "\u4fee\u590d\u7ee7\u627f\u5173\u7cfb\u83b7\u53d6\u4e0d\u5230\u65b9\u6cd5\u7684\u4e0d\u8fc7. gDeclaredMethods()\u4e0d\u80fd\u83b7\u53d6\u7236\u7c7b\u7684\u53d7\u4fdd\u62a4\u65b9\u6cd5\uff0c\u5982\u7ee7\u7eed\u4fee\u6539\u9700\u8981\u9012\u5f52\u83b7\u53d6superclass\u7684gDeclaredMethods()\u3002\u6548\u7387\u6709\u4e9b\u95ee\u9898\u3002\u53d7\u4fdd\u62a4\u7684\u5185\u90e8\u7c7b\u5728ParserConfig line545\u4e5f\u906d\u5230\u4e86\u8fc7\u6ee4\u3002\u663e\u7136\u4e0e\u539f\u8bbe\u8ba1\u4e0d\u7b26\u3002\n\u524d\u9762\u63d0\u5230\u4e2a\u4eba\u9700\u6c42\u53d1\u73b0@JSONCreator\u6ce8\u89e3\u5b8c\u5168\u53ef\u4ee5\u80dc\u4efb\u3002. ",
    "dstars89": "@JSON.parseObject(\"\\\"\u4e2d\u6587\\\"\", String.class);\u8fd9\u6837\u662fok\u7684\uff0c\u4f46\u662f\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u53ef\u80fd\u5c31\u662f\u5b57\u7b26\u4e32\u4e0d\u5e26\u8f6c\u4e49\u7684\"\uff0c\u53ea\u80fd\u8981\u670d\u52a1\u5668\u7aef\u8fdb\u884c\u5904\u7406\u4e86\u5417\u3002\u3002\u3002\u3002\u53ef\u4e0d\u53ef\u4ee5\u6709\u8fd9\u79cd\u652f\u6301\u5462. ",
    "AndrewHuangMiao": "fastjson 1.2.28\u7248\u672c\u4fee\u590d\u4e86\u5b89\u5168\u6f0f\u6d1e\uff0c\u4f46\u662f\u5728spring4.3.3.REALEASE\u7248\u672c\u4e0b\u521d\u59cb\u5316spring\u5bb9\u5668\u65f6\u5019\u4f1a\u62a5\u9519\uff0c\u5bfc\u81f4\u9879\u76ee\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\uff0c\u6bd4\u8f83\u6025\uff0c\u9ebb\u70e6\u770b\u4e00\u4e0b\n@wenshao @VictorZeng . \u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u6211\u4e5f\u662fcomponent-scan\u4e0a\u52a0\u591a\u4e00\u5c42\u626b\u63cf\u9762\u5c31\u53ef\u4ee5\u4e86\uff0c\u539f\u56e0\u662ffastJsonpResponseBodyAdvice\u8fd9\u4e2a\u7c7b\u4e0a\u9762\u4f1a\u6709spring\u7684bean\u6807\u7b7e\uff0c\u5728com\u5c42\u6b21\u4f1a\u53bb\u626b\u63cf\u8fd9\u4e2a\u7c7b\u521d\u59cb\u5316\u6210spring\u7684beanDefinition\u6ce8\u518c\u5230spring\u7684ioc\u5bb9\u5668\u91cc\u9762\uff0c\u4f46\u662f\u56e0\u4e3a\u9700\u8981\u5728spring\u914d\u7f6e\u4e2d\u914d\u7f6e\u53e6\u5916\u7684\u6587\u4ef6\u8fd9\u4e2abean\u624d\u80fd\u88ab\u6b63\u5e38\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5bfc\u81f4\u62a5\u9519\uff0c\u8c22\u8c22\u5404\u4f4d\u5927\u795e\u7684\u652f\u6301~. ",
    "piaoshidefengrunner": "\u521a\u521a\u9a8c\u8bc1\u4e86\u6ca1\u95ee\u9898 @yue060904 \u80fd\u542f\u52a8  \n\n4.3.3.RELEASE\n1.7.4\n1.2.28\n1.7.6\n1.1.7\n9.4.1.v20170120\n\n. ",
    "yinxiaobai": "spring4.34 fastson1.2.28\u4ecd\u7136\u62a5\u9519\uff0cfastson1.2.24\u4e5f\u662f\uff0c\u6362\u62101.2.17\u5c31\u597d\u4e86. Error creating bean with name 'fastJsonpResponseBodyAdvice' defined in URL [jar:file:/E:/java/tomcat7/webapps/WeiXinOpen/WEB-INF/lib/fastjson-1.2.28.jar!/com/alibaba/fastjson/support/spring/FastJsonpResponseBodyAdvice.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'java.lang.String[]' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}. \u989d\uff0c\u786e\u5b9e\u628a\u6ce8\u89e3\u626b\u63cf\u8def\u5f84\u5728com\u540e\u518d\u52a0\u4e00\u5c42\u5c31\u53ef\u4ee5\u4e86\uff0c\u597d\u5947\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898. ",
    "junegod": "\u4ec0\u4e48\u65f6\u5019\u4fee\u590d\u554a\uff0c\u6211\u4eec\u73b0\u5728\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86. ",
    "kailuncen": "\u540c\u6837\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u539f\u56e0\u662f\u53ea\u5199\u4e86\n\n\u5df2\u89e3\u51b3. ",
    "shenan4321": "\u4e0d\u77e5\u9053\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f. \u76ee\u524d\u7528\u7684\u7248\u672c1.2.28. ",
    "tomtrije": "\nprivate static final long serialVersionUID = -1;\n\ngoodjob!\n. ",
    "yyjt1987": "\u4e0d\u597d\u610f\u601d\uff0c\u662f\u6211\u64cd\u4f5c\u5931\u8bef\uff0c\u6211\u662f\u8981\u628a\u6700\u65b0\u7684\u5408\u5e76\u5230\u6211\u81ea\u5df1\u7684\u5206\u652f\u4e0a\uff0c\u89c1\u8c05\u3002. ",
    "oiccc": "\u60f3\u5199POC\u7684\u8bdd\u76f4\u63a5\u628a\u4e24\u4e2a\u7248\u672c\u90fd\u4e0b\u4e0b\u6765\u5bf9\u6bd4\u4e00\u4e0b\u5457. ",
    "wangread-git": "JSON.parse(\"//123456\");. ",
    "a11900119": "\u4e0d\u884c\u554a ios\u8bbe\u5907\u7684emoji\u8868\u60c5\u7f16\u7801\u90fd\u662f\\U \u5f00\u5934. \u80fd\u53eb\u79fb\u52a8\u7aef\u540c\u5b66\u6539\u6210\\\\U \u6211\u8fd8\u6765\u8fd9\u63d0\u95ee\u5e72\u561b. \u6211\u53ea\u60f3\u5355\u7eaf\u60f3\u8981\u4e00\u4e2a\u53cd\u659c\u6760\u7684\u5b57\u7b26\u4e32 \u8f6c\u7801\u4ec0\u4e48\u7684\u6211\u540e\u7aef\u53bb\u5904\u7406 \u4f46\u662f\u6846\u67b6\u76f4\u63a5\u5c31\u629b\u51fa\u5f02\u5e38\u3002 ,\\u\u5c31\u80fd \u5927\u5199\u7684\u5c31\u62a5\u9519  . \u6ca1\u6709\u4ec0\u4e48\u5728\u53cd\u5e8f\u5217\u5316\u5ba2\u6237\u7aef\u4f20\u6765\u7684\u6570\u636e\u65f6\u5019\u8fc7\u6ee4\u6389\u8fd9\u4e9b\u7279\u6b8a\u7684\u8f6c\u4e49\u7b26\u8bbe\u7f6e\u4e48  \u6211\u770b\u4e86\u6e90\u7801\u6709\u4e2aisSpecxxx\u7684\u53d8\u91cf \u4e0d\u77e5\u9053\u600e\u4e48\u8bbe\u7f6e. \\B\u3001\\T\u3001\\N\u3001\\V\u3001\\R\u3001\\X \u8fd9\u4e9b\u4ee3\u8868\u5565. ",
    "gaboolic": "\\\\U. \u4f60\u8fd9\u4e2a\u672c\u6765\u5c31\u4e0d\u5408\u6cd5\uff0c\u5230http://www.bejson.com/  \u4e5f\u68c0\u6d4b\u8bf4\u4e0d\u5408\u6cd5. ",
    "ky1987": "\u8fd9\u4e2a\u95ee\u9898\u6709\u89e3\u51b3\u7684\u65b9\u6848\u5417\uff1f. ",
    "240668488": "+10086\n\u9519\u8bef\u4e00\u6a21\u4e00\u6837\n\u6ca1\u627e\u5230\u539f\u56e0\u662f\u4e3a\u5565. \u6211\u7684\u8c03\u7528\u4ee3\u7801\u5982\u4e0b\nJSONArray.parseArray(xxxString, Xxx.class);\n\u4f46\u62a5\u7684\u9519\u4e00\u6a21\u4e00\u6837\u3002. \u7ecf\u9a8c\u8bc1\uff0c\u4fee\u590d\u65e0\u8bef\u3002. ",
    "renhongchao": "1.2.29\u6d4b\u8bd5\u6ca1\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898  \u591a\u8c22. ",
    "xticfc": "\u8bf7\u95ee1.2.33\u7248\u672c\u6709\u8ba1\u5212\u53d1\u5e03\u65f6\u95f4\u4e0d\uff0c\u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u5f88\u7740\u6025\u554a. ",
    "uaufdh": "@VictorZeng \u4f60\u597d, \u4e4b\u524d\u6211\u8fd9\u91cc\u5df2\u7ecf\u662f\u5728 org.springframework.http.converter.StringHttpMessageConverter \u4e2d\u914d\u7f6e\u4e86 supportedMediaTypes \u4e3a application/json, \u4f46\u662f\u53ea\u8981\u8bf7\u6c42\u5934\u4e0d\u5e26 accept, \u90a3\u4e48 fastjson \u5c31\u4f1a\u629b\u51fa\u5f02\u5e38, \u800c jackson \u4e0d\u4f1a, \u8bf7\u60a8\u518d\u770b\u770b, \u8c22\u8c22. @VictorZeng \u4f60\u597d, \u6211\u521a\u521a\u53c8\u6d4b\u8bd5\u4e86\u4e00\u904d,\u4ee3\u7801\u6ca1\u6709\u6539,  \u8bf7\u6c42\u6ca1\u6709 accept \u5b57\u6bb5, \u6ca1\u6709\u518d\u53d1\u751f\u4e4b\u524d\u7684\u5f02\u5e38.. @VictorZeng \n\u4f60\u597d, \u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u5b58\u5728\u7684. \u6211\u521a\u521a\u627e\u5230\u4e86\u95ee\u9898\u53d1\u751f\u7684\u60c5\u51b5, \u4f7f\u7528 @ResponseBody \u6ce8\u89e3, \u8fd8\u662f\u4f1a\u6709\u5f02\u5e38.\nspring \u7248\u672c\u662f 4.3.6.RELEASE, fastjson \u662f 1.2.29\n\u5e76\u4e14\u6211\u5728 org.springframework.http.converter.StringHttpMessageConverter \u4e2d\u52a0\u4e86\n<property name=\"supportedMediaTypes\">\n                    <list>\n                        <value>application/json</value>\n                        <value>text/html</value>\n                        <value>text/plain</value>\n                    </list>\n                </property>\n\u4f7f\u7528\u7684\u6ce8\u89e3\u662f @Controller \u548c@RestController, \u8fd4\u56de\u503c\u662f JsonObject \u7c7b\u578b\u90fd\u6709\u8fd9\u79cd\u60c5\u51b5\n\u53ea\u8981\u8bf7\u6c42\u5934\u6ca1\u6709 accept \u5b57\u6bb5, \u90a3\u4e48\u5c31\u76f4\u63a5\u4f1a\u629b\u51fa\u5f02\u5e38\n 'Content-Type' cannot contain wildcard type '*' \u5bf9\u5e94\u7684\u6211\u627e\u5230 \u6e90\u7801 at org.springframework.http.HttpHeaders.setContentType(HttpHeaders.java:733)\n \u91cc\u9762\u6709\u4e24\u884c\nAssert.isTrue(!mediaType.isWildcardType(), \"\\'Content-Type\\' cannot contain wildcard type \\'*\\'\");\n        Assert.isTrue(!mediaType.isWildcardSubtype(), \"\\'Content-Type\\' cannot contain wildcard subtype \\'*\\'\");\n\u5e76\u4e14\u53ea\u8981\u52a0\u4e0a accept \u8bf7\u6c42\u5934, \u6bd4\u5982 accept: application/json, \u90a3\u4e48\u95ee\u9898\u5c31\u6ca1\u6709\u4e86.\n\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u786e\u5b9e\u6ca1\u63d0\u4f9b accept \u8bf7\u6c42\u5934, \u90a3\u4e48\u4e5f\u4e0d\u5e94\u8be5\u51fa\u73b0\u5f02\u5e38. \n\u8bf7\u60a8\u518d\u770b\u770b. @VictorZeng \n\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e48\u591a\u5929\u7684\u56f0\u6270. \u5e94\u8be5\u628a supportedMediaTypes \u5c5e\u6027 \u52a0\u5728 FastJsonHttpMessageConverter4 \u91cc\u9762, \u653e\u5728 StringHttpMessageConverter \u6ca1\u4f5c\u7528. ",
    "lester2010": "java\nGcoderDTO\n        private int status;\n    private String request_id;\n    private String message;\n    private GcoderResultDTO result;\nGcoderResultDTO\n    private String address;\n    private FormattedAddresses formatted_addresses;\n    private AddressComponentDTO address_component;\n    private AdInfoDTO ad_info;\n    private AddressReferenceDTO address_reference;\n    private PoisDTO pois;\nAddressReferenceDTO\n        private FamousAreaDTO famous_area;\n    private TownDTO town;\n    private FamousAreaDTO landmark_l1;\n    private FamousAreaDTO landmark_l2;\n    private FamousAreaDTO street;\n    private FamousAreaDTO street_number;\n    private FamousAreaDTO crossroad;\n    private FamousAreaDTO village;\nFamousAreaDTO\n        private String title;\n    private LocationDTO location;\n    private float  _distance;\n    private String _dir_desc;\nLocationDTO\n        private float lat;\n        private float lng;\nTownDTO\n        private String title;\n    private LocationDTO location;\n    private float  _distance;\n    private String _dir_desc;\nPoisDTO\n        private String id;\n    private String title;\n    private String address;\n    private String category;\n    private LocationDTO location;\n    private float _distance;. java\nGcoderDTO\n        private int status;\n    private String request_id;\n    private String message;\n    private GcoderResultDTO result;\nGcoderResultDTO\n    private String address;\n    private FormattedAddresses formatted_addresses;\n    private AddressComponentDTO address_component;\n    private AdInfoDTO ad_info;\n    private AddressReferenceDTO address_reference;\n    private PoisDTO pois;\nAddressReferenceDTO\n        private FamousAreaDTO famous_area;\n    private TownDTO town;\n    private FamousAreaDTO landmark_l1;\n    private FamousAreaDTO landmark_l2;\n    private FamousAreaDTO street;\n    private FamousAreaDTO street_number;\n    private FamousAreaDTO crossroad;\n    private FamousAreaDTO village;\nFamousAreaDTO\n        private String title;\n    private LocationDTO location;\n    private float  _distance;\n    private String _dir_desc;\nLocationDTO\n        private float lat;\n        private float lng;\nTownDTO\n        private String title;\n    private LocationDTO location;\n    private float  _distance;\n    private String _dir_desc;\nPoisDTO\n        private String id;\n    private String title;\n    private String address;\n    private String category;\n    private LocationDTO location;\n    private float _distance;. json\u6570\u636e\u8f6c\u6362\u540e\uff0c\u5176\u4ed6\u5730\u65b9\u7684\u6570\u636e\u6b63\u5e38\uff0c\u5d4c\u5957location\u5b50\u5c5e\u6027\u5bf9\u5e94\u503clat\uff0clng\u51fa\u73b0\u6570\u503c\u9519\u4f4d\u7684\u73b0\u8c61\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u503c\u6709\u8bef. json\u6570\u636e\u8f6c\u6362\u540e\uff0c\u5176\u4ed6\u5730\u65b9\u7684\u6570\u636e\u6b63\u5e38\uff0c\u5d4c\u5957location\u5b50\u5c5e\u6027\u5bf9\u5e94\u503clat\uff0clng\u51fa\u73b0\u6570\u503c\u9519\u4f4d\u7684\u73b0\u8c61\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u503c\u6709\u8bef. ",
    "282919088": "@VictorZeng \u4e0d\u53ef\u4ee5,FastJsonConfig\u662f\u5168\u5c40\u7684,\u6700\u591a\u8bbe\u7f6e\u4e0b\u7edf\u4e00\u8f6c\u6362\u7684\u6807\u51c6. @limeng32  \u5982\u679c\u662f\u7528hibernate\u7684\u5c31\u4f1a\u5b58\u5728\u95ee\u9898\u4e86.bean\u5bf9\u8c61\u90fd\u662f\u76f8\u4e92\u5173\u8054\u7684. ",
    "limeng32": "\u8fd9\u4e2a\u60c5\u51b5\u6211\u5728\u4f7f\u7528mybatis\u65f6\u9047\u5230\u8fc7\uff0c\u6bd4\u5982\u8d26\u53f7\u8868\u4e2d\u5bc6\u7801\u8fd9\u79cd\u6781\u5c11\u9700\u8981\u663e\u793a\u7684\u5b57\u6bb5\uff0c\u6700\u540e\u662f\u5728mybatis\u63d2\u4ef6\u4e2d\u505a\u4e86\u5904\u7406\uff0c\u5373\u76f8\u5173\u5b57\u6bb5\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6839\u672c\u4e0dselect\uff0c\u5efa\u8bae\u697c\u4e3b\u4e5f\u4ece\u8fd9\u65b9\u9762\u8003\u8651\u4e00\u4e0b\u3002. @282919088 \u6211\u89c9\u5f97\u4f60\u8fd8\u662f\u5e94\u8be5\u4ece\u67e5\u8be2\u5165\u624b\uff0chibernate\u80af\u5b9a\u4e5f\u6709\u6309\u6761\u4ef6\u7b5b\u9009\u7ed3\u679c\u96c6\u5b57\u6bb5\u7684\u65b9\u6cd5\u3002\n\u4e4b\u6240\u4ee5\u8fd9\u4e48\u56de\u7b54\u662f\u56e0\u4e3a\u6211\u4ee5\u524d\u7528\u8fc7 @JSONField(serialize = false) \u7684\u65b9\u5f0f\u6765\u907f\u514d\u67d0\u4e2a\u5b57\u6bb5\u88ab\u5e8f\u5217\u5316\uff0c\u5f53\u65f6\u611f\u89c9\u826f\u597d\uff0c\u4f46\u53e6\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2apojo\u7684\u4eba\u4e0d\u77e5\u60c5\uff0c\u5bf9\u4ed6\u9020\u6210\u4e86\u5f88\u5927\u7684\u9ebb\u70e6\uff08\u5177\u4f53\u90fd\u662f\u6cea\u4e0d\u8bf4\u4e86\uff09\u3002\u6240\u4ee5\u6211\u7684\u7ecf\u9a8c\u662f\u8868\u73b0\u5c42\u5c31\u505a\u597d\u8868\u73b0\u5c42\u7684\u4e8b\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u8ddf\u9650\u5236\u76f8\u5173\u7684\u4e8b\uff0c\u8fd8\u662f\u5e94\u8be5\u4ece\u5b83\u53d1\u751f\u7684\u5730\u65b9\u4e0b\u624b\u3002. \u4f7f\u7528fastjson\u5c31\u662f\u770b\u4e2d\u4e86\u5b83\u7684\"$ref\"\u7279\u6027. \u4f7f\u7528fastjson\u5c31\u662f\u770b\u4e2d\u4e86\u5b83\u7684\"$ref\"\u7279\u6027. ",
    "fish7790714": "\u975e\u5e38\u611f\u8c22. ",
    "tiankongkm": "\u5df2\u4e2d\u67aa\uff0c\u5750\u7b49\u65b0\u5305\u3002\u3002\u3002. \u5df2\u4e2d\u67aa\uff0c\u5750\u7b49\u65b0\u5305\u3002\u3002\u3002. ",
    "JasonJunJun": "@wenshao \u9519\u8bef\u4fe1\u606f\u201cargument type mismatch\u201d\u6709\u70b9\u8bef\u5bfc\u4eba. ",
    "zgzhang": "\u8e29\u5751\uff0c\u6251\u901a\u3002\u3002\u3002. ",
    "yanzishang": "\u8bb0\u5f55\u4e00\u4e0b\u3002. ",
    "zengcheng": "\u8e29\u4e86\u6b64\u5751\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3002\u3002\u3002\u3002\u3002\u3002. ",
    "rc452860": "\u6b64\u5751\u5df2\u5165\uff0c\u6392\u597d\u961f\u884c. ",
    "JPMonty": "\u8c22\u8c22\uff01. \u5df2\u627e\u5230\u89e3\u51b3\u65b9\u6848\uff1a\n\u542f\u52a8\u65f6\u52a0\u5165  JSON.DEFAULT_GENERATE_FEATURE |= SerializerFeature.DisableCircularReferenceDetect.getMask();. ",
    "lasting0001": "\u8c22\u8c22~. \u9ebb\u70e6\u8001\u5927\u770b\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002\u3002\u3002\u5728\u7ebf\u7b49. ",
    "helloword2017": "\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e \u5173\u952e\u5b57\u62e6\u622a java unicode\u7f16\u7801\u4e0d\u8003\u8651\u5417?  WAF\u4e5f\u8981\u8003\u8651\u5440\n    Object obj =  JSON.parse(\"{\\\"@\\u0074\\u0079\\u0070\\u0065\\\":\\\"java.lang.\\u004f\\u0062\\u006a\\u0065\\u0063\\u0074\\\"}\");\n\n    System.out.println(obj);.\n",
    "BarneyWang": "\u7248\u672c 1.2.8. json:\n{\\\"success\\\":true,\\\"errorMsg\\\":{},\\\"data\\\":[\\\"111118\\\"],\\\"singleData\\\":\\\"444444441dsadasdasd\\\"}\nparent abstract class:\n``` \npublic abstract class BaseResponse {\n    private boolean success = true;\n    private Map errorMsg = new HashMap();\n    private List data;\npublic BaseResponse() {\n}\n\npublic List<T> getData() {\n    return this.data;\n}\n\npublic void setData(List<T> data) {\n    this.data = data;\n}\n\npublic boolean isSuccess() {\n    return this.success;\n}\n\npublic void setSuccess(boolean success) {\n    this.success = success;\n}\n\npublic Map<String, String> getErrorMsg() {\n    return this.errorMsg;\n}\n\npublic void setErrorMsg(Map<String, String> errorMsg) {\n    this.errorMsg = errorMsg;\n}\n\npublic Set<String> errorCodes() {\n    return this.errorMsg.keySet();\n}\n\npublic Collection<String> errorMsgs() {\n    return this.errorMsg.values();\n}\n\npublic void addError(String code, String msg) {\n    this.setSuccess(false);\n    this.errorMsg.put(code, msg);\n}\n\npublic void addError(Map<String, String> errorMsgMap) {\n    this.setSuccess(false);\n    this.errorMsg.putAll(errorMsgMap);\n}\n\npublic T getSingleData() {\n    return this.data != null && !this.data.isEmpty()?this.data.get(0):null;\n}\n\npublic void setData(T data) {\n    if(this.data == null) {\n        this.data = new ArrayList();\n    }\n\n    this.data.add(data);\n}\n\npublic String buildMsg(String sep) {\n    StringBuilder sb = new StringBuilder();\n    if(!this.errorMsg.isEmpty()) {\n        Iterator var3 = this.errorMsg.entrySet().iterator();\n\n        while(var3.hasNext()) {\n            Entry entry = (Entry)var3.next();\n            sb.append((String)entry.getKey()).append(\":\");\n            sb.append((String)entry.getValue()).append(sep);\n        }\n    }\n\n    return sb.toString();\n}\n\npublic String toString() {\n    return \"result:\" + this.success + \";\" + this.buildMsg(\";\") + \"data:\" + (this.getData() != null?ToStringBuilder.reflectionToString(this.getData()):\"\");\n}\n\n}\n```\n```\npublic class StringResponse extends BaseResponse {\n    public StringResponse() {\n    }\npublic StringResponse(String data) {\n    this.setData(data);\n}\n\npublic StringResponse(List<String> dataList) {\n    this.setData(dataList);\n}\n\n}\n```\n\u8fd0\u884c\n```\npublic class Test {\npublic static void main(String[] args) {\n    String str = \"{\\\"success\\\":true,\\\"errorMsg\\\":{},\\\"data\\\":[\\\"11111111111112222\\\"],\\\"singleData\\\":\\\"11111111111112222\\\"}\";\n    StringResponse result = JSON.parseObject(str, StringResponse.class);\n    JSONObject o = JSON.parseObject(str);\n    System.out.println(result.getSingleData());\n\n}\n}\n```\n. \u591a\u8fd0\u884c\u51e0\u6b21 \u4f1a\u51fa\u73b0\u5dee\u522b\n<dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.8.sec01</version>\n        </dependency> . @wenshao  \u4ee3\u7801\u5df2\u7ecf\u7ed9\u51fa\u4e86. ",
    "zhaohengheng123": "\u8bf7\u95ee\u89e3\u51b3\u4e86\u6ca1\u554a\uff0c\u8fd9\u7236\u7c7b\u6cdb\u578b\u53cd\u5e8f\u5217\u5316\u80fd\u5426\u652f\u6301\uff0c\u4f46\u662f\u5f53\u524d\u5b50\u7c7b\u662f\u6ca1\u6709\u6cdb\u578b\u7684\u3002\u3002\u3002\u3002. ",
    "eoss1990": "maven dependency\n\norg.apache.cxf\ncxf-rt-rs-client\n3.1.10\n\n\norg.apache.cxf\ncxf-rt-transports-http-jetty\n3.1.10\n\n\ncom.alibaba\nfastjson\n1.2.20\n\n`\n    String address = \"http://localhost:8080/ws/rest\";\n    List providerList = new ArrayList();\n    providerList.add(new FastJsonProvider());\n\n    //for post\n    People people = new People(\"1001\", \"yangyu\", \"chengdu\", \"18088888\", \"man\");\n    List list = WebClient.create(address, providerList).path(\"update\")\n            .type(MediaType.APPLICATION_JSON).accept(MediaType.APPLICATION_JSON)\n            .post(people, List.class);\n\n`\norg.apache.cxf.transport.http.Headers transferProtocolHeadersToURLConnection(URLConnection connection)\n\u65b9\u6cd5\u4f1a\u6709\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\n. \u989d \u6240\u4ee5\u5efa\u8bae\u8fd9\u91cc\u8fd8\u662f\u76f4\u63a5\u4f7f\u7528String\u7c7b\u578b\uff0c\u901a\u7528\u6027\u66f4\u597d\u4e00\u4e9b\uff0c\u907f\u514d\u540e\u7eed\u8f6c\u6362\u95ee\u9898 @VictorZeng . ",
    "wudihaike": "@VictorZeng \u6211\u662f\u7528\u5728Spring4.*\u914d\u7f6e\u7528\u7684,\u662fFastJsonHttpMessageConverter4 \u65e7\u7248\u7684\u662f \n<bean id=\"fastJsonHttpMessageConverter\" class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <!-- \u8fd9\u91cc\u987a\u5e8f\u4e0d\u80fd\u53cd\uff0c\u4e00\u5b9a\u5148\u5199text/html,\u4e0d\u7136ie\u4e0b\u51fa\u73b0\u4e0b\u8f7d\u63d0\u793a -->\n                        <value>application/json;charset=UTF-8</value>\n                    </list>\n                </property>\n                <property name=\"features\">\n                    <array value-type=\"com.alibaba.fastjson.serializer.SerializerFeature\">\n                        <!-- \u907f\u514d\u5faa\u73af\u5f15\u7528 -->\n                        <value>DisableCircularReferenceDetect</value>\n                        <!-- \u662f\u5426\u8f93\u51fa\u503c\u4e3anull\u7684\u5b57\u6bb5 -->\n                        <value>WriteMapNullValue</value>\n                        <!-- \u6570\u503c\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a0,\u800c\u975enull -->\n                        <value>WriteNullNumberAsZero</value>\n                        <!-- \u5b57\u7b26\u7c7b\u578b\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a\"\",\u800c\u975enull  -->\n                        <value>WriteNullStringAsEmpty</value>\n                        <!-- List\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3a[],\u800c\u975enull -->\n                        <value>WriteNullListAsEmpty</value>\n                        <!-- Boolean\u5b57\u6bb5\u5982\u679c\u4e3anull,\u8f93\u51fa\u4e3afalse,\u800c\u975enull -->\n                        <value>WriteNullBooleanAsFalse</value>\n                    </array>\n                </property>\n            </bean>\n\u95ee\u9898\u662f\u6211\u770b\u6e90\u7801\u8fd9\u4e2a\u5df2\u7ecf\u88abDeprecated\u4e86. \u8fd8\u6709\u4ec0\u4e48\u5176\u5b83\u65b9\u6cd5\u914d\u7f6e\u5417?. @VictorZeng @wenshao  \u8c22\u8c22\u89e3\u7b54,\u4eb2\u6d4b\u6210\u529f,\u529f\u80fd\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\u4e86.. \u6211\u73b0\u5728\u662f\u7528\nJSONPObject jsonp = new JSONPObject();\njsonp.setFunction(callback);\nJsonResult json = new JsonResult();\njsonp.addParameter(json);\n\u4ee3\u7801\u5b9e\u73b0\u529f\u80fd,\u4f46\u662f\u5f88\u9ebb\u70e6.... \u6211\u73b0\u5728\u662f\u7528\nJSONPObject jsonp = new JSONPObject();\njsonp.setFunction(callback);\nJsonResult json = new JsonResult();\njsonp.addParameter(json);\n\u4ee3\u7801\u5b9e\u73b0\u529f\u80fd,\u4f46\u662f\u5f88\u9ebb\u70e6.... ",
    "liihu1n": "@wenshao \ncom.huawei.appmarket.cachesys.datamanager.CacheJSONParser:  \u8fd9\u4e2a\u7c7b\u7684\u4ee3\u7801                 \n```java\npublic class CacheJSONParser extends DefaultJSONParser\n{\n    private static HashMap allCacheStr = new HashMap();\npublic CacheJSONParser(String input)\n{\n    super(input);\n}\n\npublic CacheJSONParser(final String input, final ParserConfig config)\n{\n    super(input, config);\n}\n\n@SuppressWarnings(\"rawtypes\")\npublic Object parse(Object fieldName)\n{\n    final JSONLexer lexer = getLexer();\n    switch (lexer.token())\n    {\n    case SET:\n        lexer.nextToken();\n        HashSet<Object> set = new HashSet<Object>();\n        parseArray(set, fieldName);\n        return set;\n    case TREE_SET:\n        lexer.nextToken();\n        TreeSet<Object> treeSet = new TreeSet<Object>();\n        parseArray(treeSet, fieldName);\n        return treeSet;\n    case LBRACKET:\n        List collection = new ArrayList();\n        parseCollection(collection, fieldName);\n        return unmodify(collection);\n    case LBRACE:\n        Map map = new HashMap();\n        return parseMap(map, fieldName);\n    case LITERAL_INT:\n        Number intValue = lexer.integerValue();\n        lexer.nextToken();\n        return intValue;\n    case LITERAL_FLOAT:\n        Object value = lexer.decimalValue(isEnabled(Feature.UseBigDecimal));\n        lexer.nextToken();\n        return value;\n    case LITERAL_STRING:\n        return literalString(lexer);\n    case NULL:\n        lexer.nextToken();\n        return null;\n    case TRUE:\n        lexer.nextToken();\n        return Boolean.TRUE;\n    case FALSE:\n        lexer.nextToken();\n        return Boolean.FALSE;\n    case NEW:\n        lexer.nextToken(JSONToken.IDENTIFIER);\n\n        if (lexer.token() != JSONToken.IDENTIFIER)\n        {\n            throw new JSONException(\"syntax error\");\n        }\n        lexer.nextToken(JSONToken.LPAREN);\n\n        accept(JSONToken.LPAREN);\n        long time = ((Number) lexer.integerValue()).longValue();\n        accept(JSONToken.LITERAL_INT);\n\n        accept(JSONToken.RPAREN);\n\n        return new Date(time);\n    case EOF:\n        if (lexer.isBlankInput())\n        {\n            return null;\n        }\n        throw new JSONException(\"unterminated json string, info: \" + lexer.info());\n    case ERROR:\n    default:\n        throw new JSONException(\"syntax error, info \" + lexer.info());\n    }\n}\n\nprivate Object literalString(final JSONLexer lexer)\n{\n    String stringLiteral = lexer.stringVal();\n    lexer.nextToken(JSONToken.COMMA);\n\n    if (lexer.isEnabled(Feature.AllowISO8601DateFormat))\n    {\n        JSONScanner iso8601Lexer = new JSONScanner(stringLiteral);\n        try\n        {\n            if (iso8601Lexer.scanISO8601DateIfMatch())\n            {\n                return iso8601Lexer.getCalendar().getTime();\n            }\n        }\n        finally\n        {\n            iso8601Lexer.close();\n        }\n    }\n\n    return stringLiteral;\n}\n\n@SuppressWarnings({ \"rawtypes\" })\npublic Object parseMap(final Map object, Object fieldName)\n{\n    JSONScanner lexer = (JSONScanner) this.lexer;\n\n    if (lexer.token() != JSONToken.LBRACE && lexer.token() != JSONToken.COMMA)\n    {\n        throw new JSONException(\"syntax error, expect {, actual \" + lexer.tokenName());\n    }\n\n    ParseContext context = this.getContext();\n    try\n    {\n        boolean setContextFlag = false;\n        for (;;)\n        {\n            lexer.skipWhitespace();\n            char ch = lexer.getCurrent();\n            ch = onAllowAC(lexer, ch);\n\n            boolean isObjectKey = false;\n            Object key;\n            if (ch == '\"')\n            {\n                key = lexer.scanSymbol(symbolTable, '\"');\n                lexer.skipWhitespace();\n                ch = lexer.getCurrent();\n                if (ch != ':')\n                {\n                    throw new JSONException(\"expect ':' at \" + lexer.pos() + \", name \" + key);\n                }\n            }\n            else if (ch == '}')\n            {\n                lexer.next();\n                lexer.resetStringPosition();\n                lexer.nextToken();\n                return unmodify(object);\n            }\n            else if (ch == '\\'')\n            {\n                if (!isEnabled(Feature.AllowSingleQuotes))\n                {\n                    throw new JSONException(\"syntax error\");\n                }\n\n                key = lexer.scanSymbol(symbolTable, '\\'');\n                lexer.skipWhitespace();\n                ch = lexer.getCurrent();\n                if (ch != ':')\n                {\n                    throw new JSONException(\"expect ':' at \" + lexer.pos());\n                }\n            }\n            else if (ch == EOI)\n            {\n                throw new JSONException(\"syntax error\");\n            }\n            else if (ch == ',')\n            {\n                throw new JSONException(\"syntax error\");\n            }\n            else if ((ch >= '0' && ch <= '9') || ch == '-')\n            {\n                lexer.resetStringPosition();\n                lexer.scanNumber();\n                if (lexer.token() == JSONToken.LITERAL_INT)\n                {\n                    key = lexer.integerValue();\n                }\n                else\n                {\n                    key = lexer.decimalValue(true);\n                }\n                ch = lexer.getCurrent();\n                if (ch != ':')\n                {\n                    throw new JSONException(\"expect ':' at \" + lexer.pos() + \", name \" + key);\n                }\n            }\n            else if (ch == '{' || ch == '[')\n            {\n                lexer.nextToken();\n                key = parse();\n                isObjectKey = true;\n            }\n            else\n            {\n                if (!isEnabled(Feature.AllowUnQuotedFieldNames))\n                {\n                    throw new JSONException(\"syntax error\");\n                }\n\n                key = lexer.scanSymbolUnQuoted(symbolTable);\n                lexer.skipWhitespace();\n                ch = lexer.getCurrent();\n                if (ch != ':')\n                {\n                    throw new JSONException(\"expect ':' at \" + lexer.pos() + \", actual \" + ch);\n                }\n            }\n\n            if (!isObjectKey)\n            {\n                lexer.next();\n                lexer.skipWhitespace();\n            }\n\n            ch = lexer.getCurrent();\n\n            lexer.resetStringPosition();\n\n            if (\"@type\".equals(key))\n            {\n                String typeName = lexer.scanSymbol(symbolTable, '\"');\n                Class<?> clazz = TypeUtils.loadClass(typeName);\n\n                if (clazz == null)\n                {\n                    setUnifyStringValue(object, \"@type\", typeName);\n                    continue;\n                }\n\n                lexer.nextToken(JSONToken.COMMA);\n                if (lexer.token() == JSONToken.RBRACE)\n                {\n                    lexer.nextToken(JSONToken.COMMA);\n                    try\n                    {\n                        return unmodify(clazz.newInstance());\n                    }\n                    catch (Exception e)\n                    {\n                        throw new JSONException(\"create instance error\", e);\n                    }\n                }\n\n                this.setResolveStatus(TypeNameRedirect);\n\n                if (this.context != null && !(fieldName instanceof Integer))\n                {\n                    this.popContext();\n                }\n\n                ObjectDeserializer deserializer = config.getDeserializer(clazz);\n                return unmodify(deserializer.deserialze(this, clazz, fieldName));\n            }\n\n            if (\"$ref\".equals(key))\n            {\n                lexer.nextToken(JSONToken.LITERAL_STRING);\n                if (lexer.token() == JSONToken.LITERAL_STRING)\n                {\n                    String ref = lexer.stringVal();\n                    lexer.nextToken(JSONToken.RBRACE);\n\n                    Object refValue = null;\n                    if (\"@\".equals(ref))\n                    {\n                        if (this.getContext() != null)\n                        {\n                            refValue = this.getContext().object;\n                        }\n                    }\n                    else if (\"..\".equals(ref))\n                    {\n                        ParseContext parentContext = context.parent;\n                        if (parentContext.object != null)\n                        {\n                            refValue = this.getContext().object;\n                        }\n                        else\n                        {\n                            addResolveTask(new ResolveTask(parentContext, ref));\n                            setResolveStatus(DefaultJSONParser.NeedToResolve);\n                        }\n                    }\n                    else if (\"$\".equals(ref))\n                    {\n                        ParseContext rootContext = context;\n                        while (rootContext.parent != null)\n                        {\n                            rootContext = rootContext.parent;\n                        }\n\n                        addResolveTask(new ResolveTask(rootContext, ref));\n                        setResolveStatus(DefaultJSONParser.NeedToResolve);\n                    }\n                    else\n                    {\n                        addResolveTask(new ResolveTask(context, ref));\n                        setResolveStatus(DefaultJSONParser.NeedToResolve);\n                    }\n\n                    if (lexer.token() != JSONToken.RBRACE)\n                    {\n                        throw new JSONException(\"syntax error\");\n                    }\n                    lexer.nextToken(JSONToken.COMMA);\n\n                    return unmodify(refValue);\n                }\n                else\n                {\n                    throw new JSONException(\"illegal ref, \" + JSONToken.name(lexer.token()));\n                }\n            }\n\n            if (!setContextFlag)\n            {\n                setContext(object, fieldName);\n                setContextFlag = true;\n            }\n\n            Object value;\n            if (ch == '\"')\n            {\n                lexer.scanString();\n                String strValue = lexer.stringVal();\n                value = strValue;\n\n                if (lexer.isEnabled(Feature.AllowISO8601DateFormat))\n                {\n                    JSONScanner iso8601Lexer = new JSONScanner(strValue);\n                    try\n                    {\n                        if (iso8601Lexer.scanISO8601DateIfMatch())\n                        {\n                            value = iso8601Lexer.getCalendar().getTime();\n                        }\n                    }\n                    finally\n                    {\n                        iso8601Lexer.close();\n                    }\n                }\n\n                if (object.getClass() == JSONObject.class)\n                {\n                    setUnifyStringValue(object, key.toString(), value);\n                }\n                else\n                {\n                    setUnifyStringValue(object, key, value);\n                }\n            }\n            else if (ch >= '0' && ch <= '9' || ch == '-')\n            {\n                lexer.scanNumber();\n                if (lexer.token() == JSONToken.LITERAL_INT)\n                {\n                    value = lexer.integerValue();\n                }\n                else\n                {\n                    value = lexer.decimalValue();\n                }\n\n                setUnifyStringValue(object, key, value);\n            }\n            else if (ch == '[')\n            { // \u9351\u5fd3\u76af\u5a3c\u6ec3\ue6b3\u951b\u5c7d\u540b\u7039\u7b67ndroid\n                lexer.nextToken();\n                List list = new ArrayList();\n                this.parseCollection(list, key);\n                value = list;\n                setUnifyStringValue(object, key, value);\n\n                if (lexer.token() == JSONToken.RBRACE)\n                {\n                    lexer.nextToken();\n                    return unmodify(object);\n                }\n                else if (lexer.token() == JSONToken.COMMA)\n                {\n                    continue;\n                }\n                else\n                {\n                    throw new JSONException(\"syntax error\");\n                }\n            }\n            else if (ch == '{')\n            { // \u9351\u5fd3\u76af\u5a3c\u6ec3\ue6b3\u951b\u5c7d\u540b\u7039\u7b67ndroid\n                lexer.nextToken();\n                Object obj = this.parseMap(new HashMap(), key);\n                checkMapResolve(object, key.toString());\n\n                if (object.getClass() == JSONObject.class)\n                {\n                    setUnifyStringValue(object, key.toString(), obj);\n                }\n                else\n                {\n                    setUnifyStringValue(object, key, obj);\n                }\n\n                setContext(context, obj, key);\n\n                if (lexer.token() == JSONToken.RBRACE)\n                {\n                    lexer.nextToken();\n\n                    setContext(context);\n                    return unmodify(object);\n                }\n                else if (lexer.token() == JSONToken.COMMA)\n                {\n                    continue;\n                }\n                else\n                {\n                    throw new JSONException(\"syntax error, \" + lexer.tokenName());\n                }\n            }\n            else\n            {\n                lexer.nextToken();\n                value = parse();\n                setUnifyStringValue(object, key, value);\n\n                if (lexer.token() == JSONToken.RBRACE)\n                {\n                    lexer.nextToken();\n                    return unmodify(object);\n                }\n                else if (lexer.token() == JSONToken.COMMA)\n                {\n                    continue;\n                }\n                else\n                {\n                    throw new JSONException(\"syntax error, position at \" + lexer.pos() + \", name \" + key);\n                }\n            }\n\n            lexer.skipWhitespace();\n            ch = lexer.getCurrent();\n            if (ch == ',')\n            {\n                lexer.next();\n                continue;\n            }\n            else if (ch == '}')\n            {\n                lexer.next();\n                lexer.resetStringPosition();\n                lexer.nextToken();\n\n                this.setContext(object, fieldName);\n\n                return unmodify(object);\n            }\n            else\n            {\n                throw new JSONException(\"syntax error, position at \" + lexer.pos() + \", name \" + key);\n            }\n\n        }\n    }\n    finally\n    {\n        this.setContext(context);\n    }\n\n}\n\nprivate char onAllowAC(JSONScanner lexer, char ch)\n{\n    if (isEnabled(Feature.AllowArbitraryCommas))\n    {\n        while (ch == ',')\n        {\n            lexer.next();\n            lexer.skipWhitespace();\n            ch = lexer.getCurrent();\n        }\n    }\n    return ch;\n}\n\n@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\npublic void parseCollection(final Collection array, Object fieldName)\n{\n    final JSONLexer lexer = getLexer();\n\n    if (lexer.token() == JSONToken.SET || lexer.token() == JSONToken.TREE_SET)\n    {\n        lexer.nextToken();\n    }\n\n    if (lexer.token() != JSONToken.LBRACKET)\n    {\n        throw new JSONException(\"syntax error, expect [, actual \" + JSONToken.name(lexer.token()));\n    }\n\n    lexer.nextToken(JSONToken.LITERAL_STRING);\n\n    ParseContext context = this.getContext();\n    this.setContext(array, fieldName);\n    try\n    {\n        for (int i = 0;; ++i)\n        {\n            if (isEnabled(Feature.AllowArbitraryCommas))\n            {\n                while (lexer.token() == JSONToken.COMMA)\n                {\n                    lexer.nextToken();\n                    continue;\n                }\n            }\n\n            Object value;\n            switch (lexer.token())\n            {\n            case LITERAL_INT:\n                value = lexer.integerValue();\n                lexer.nextToken(JSONToken.COMMA);\n                break;\n            case LITERAL_FLOAT:\n                if (lexer.isEnabled(Feature.UseBigDecimal))\n                {\n                    value = lexer.decimalValue(true);\n                }\n                else\n                {\n                    value = lexer.decimalValue(false);\n                }\n                lexer.nextToken(JSONToken.COMMA);\n                break;\n            case LITERAL_STRING:\n                String stringLiteral = lexer.stringVal();\n                lexer.nextToken(JSONToken.COMMA);\n\n                if (lexer.isEnabled(Feature.AllowISO8601DateFormat))\n                {\n                    JSONScanner iso8601Lexer = new JSONScanner(stringLiteral);\n                    try\n                    {\n                        if (iso8601Lexer.scanISO8601DateIfMatch())\n                        {\n                            value = iso8601Lexer.getCalendar().getTime();\n                        }\n                        else\n                        {\n                            value = stringLiteral;\n                        }\n                    }\n                    finally\n                    {\n                        iso8601Lexer.close();\n                    }\n                }\n                else\n                {\n                    value = stringLiteral;\n                }\n\n                break;\n            case TRUE:\n                value = Boolean.TRUE;\n                lexer.nextToken(JSONToken.COMMA);\n                break;\n            case FALSE:\n                value = Boolean.FALSE;\n                lexer.nextToken(JSONToken.COMMA);\n                break;\n            case LBRACE:\n                // JSONObject object = new JSONObject();\n                // value = parseObject(object, i);\n                Map map = new HashMap();\n                value = parseMap(map, i);\n                break;\n            case LBRACKET:\n                // Collection items = new JSONArray();\n                // parseArray(items, i);\n                // value = items;\n                List collection = new ArrayList();\n                parseCollection(collection, i);\n                value = unmodify(collection);\n                break;\n            case NULL:\n                value = null;\n                lexer.nextToken(JSONToken.LITERAL_STRING);\n                break;\n            case RBRACKET:\n                lexer.nextToken(JSONToken.COMMA);\n                return;\n            default:\n                value = parse();\n                break;\n            }\n\n            // array.add(value);\n            array.add(getUnifyRef(value));\n            checkListResolve(array);\n\n            if (lexer.token() == JSONToken.COMMA)\n            {\n                lexer.nextToken(JSONToken.LITERAL_STRING);\n                continue;\n            }\n        }\n    }\n    finally\n    {\n        this.setContext(context);\n    }\n}\n\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\nprivate void setUnifyStringValue(Map obj, Object key, Object value)\n{\n    obj.put(getUnifyRef(key), getUnifyRef(value));\n}\n\n/**\n * \u8f6c\u6362String\u5bf9\u8c61\u5f15\u7528\u5730\u5740\uff0c\u6240\u6709\u503c\u76f8\u540c\u7684String\u5bf9\u8c61\u90fd\u8f6c\u6362\u5230\u7edf\u4e00\u7684\u5f15\u7528\u5730\u5740\u4ee5\u8282\u7701\u5185\u5b58\n * \n * @param key\n * @return\n */\nprivate Object getUnifyRef(Object key)\n{\n    if (key == null)\n    {\n        return null;\n    }\n\n    if (!(key instanceof String))\n    {\n        return key;\n    }\n\n    String str = (String) key;\n\n    String value = allCacheStr.get(str);\n    if (value != null)\n    {\n        return value;\n    }\n\n    // \u56e0\u4e3a\u539f\u6765\u7684\u8f93\u5165\u53c2\u6570key\u5f15\u7528\u4e86\u5305\u542b\u6574\u4e2a\u7f13\u5b58\u6587\u4ef6\u7684char\u6570\u7ec4\uff0c\n    // \u5982\u679c\u4e0d\u91cd\u65b0\u521b\u5efa\u4e00\u4e2aString\u5bf9\u8c61\u800c\u4f7f\u7528\u8f93\u5165\u53c2\u6570key\uff0c\u4f1a\u5bfc\u81f4char\u6570\u7ec4\n    // \u4e00\u76f4\u88ab\u5f15\u7528\u800c\u4e0d\u80fd\u91ca\u653e\u3002\n    // \u89e3\u51b3\u529e\u6cd5\u662f\u901a\u8fc7\u6570\u7ec4\u590d\u5236\u521b\u5efa\u4e00\u4e2a\u65b0String\u5bf9\u8c61\n    char[] c = new char[str.length()];\n    str.getChars(0, str.length(), c, 0);\n    str = new String(c);\n    allCacheStr.put(str, str);\n    return str;\n}\n\n/**\n * \u56fa\u5316\u7f13\u5b58\u5185\u5bb9\u4f7f\u5176\u4e0d\u53ef\u4fee\u6539\n * \n * @author z00197812\n * @createDate 2012-11-20\n * @param obj\n * @return\n */\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\nprivate Object unmodify(Object obj)\n{\n    // if (obj instanceof Map)\n    // {\n    // return Collections.unmodifiableMap((Map) obj);\n    // }\n    //\n    // if (obj instanceof List)\n    // {\n    // return Collections.unmodifiableList((List) obj);\n    // }\n\n    return obj;\n}\n\n```                                                             . @wenshao \nMapDeserializer  \u8fd9\u4e2a\u7c7b\u5c31\u662ffastjson 1.2.29 \u91cc\u9762\u7684\u6e90\u7801 \n\u539f\u56e0\u662f\u662f\u8fd9\u6837\uff1a \u6211jar \u4ecefastjson 1.2.7 \u5347\u7ea7\u5230\u4e861.2.29  \n\u6211\u4eec\u4e4b\u524d\u91cd\u5199\u4e86\u4e0a\u9762\u7684\u90a3\u4e2a\u7c7b  \u4f46\u662f\u91cc\u9762\u7684\u4ee3\u7801\u8fd8\u662f\u57fa\u4e8e\u4e4b\u524d1.2.7\u7248\u672c\u7684\uff0c \u6211\u53ea\u662f\u6539\u4e86\u4e0b\u5bf9\u5e94\u7684\u8bed\u6cd5\u62a5\u9519\u3002 \n\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u7248\u672c\u4ee3\u7801\u4e0d\u517c\u5bb9~ \n. @wenshao   \u4e0b\u9762\u8fd9\u4e2a\u62a5\u9519 \u662f\u4e0d\u662f\u4e5f\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6e90\u7801\u4e5f\u5f97\u57fa\u4e8e\u6700\u65b0\u7248\u672c\u7684\u6765\u5199 \uff0c\u662f\u4e0d\u662f\u7248\u672c\u4e0a\u4ee3\u7801\u4e0d\u517c\u5bb9\uff0c\n\u6211\u4eec\u4f7f\u7528\u7684\u65b9\u5f0f 1\\\u4f7f\u7528jar \uff0c 2\u3001 \u540c\u65f6\u4e5f\u91cd\u5199\u4e86\u91cc\u9762\u7684\u7c7b\ncom.alibaba.fastjson.JSONException: autoType is not support. com.huawei.appmarket.cachesys.Utils.CacheValue\n        at com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:869) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:325) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1335) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.JSON.parse(JSON.java:148) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.JSON.parse(JSON.java:139) ~[fastjson-1.2.29.jar:?]\n----  \u8fd9\u4e2a\u8c8c\u4f3c\u8fd9\u6837\u5c31\u80fd\u89e3\u51b3\u3002 https://github.com/alibaba/fastjson/wiki/enable_autotype. @wenshao   \u4e0b\u9762\u8fd9\u4e2a\u62a5\u9519 \u662f\u4e0d\u662f\u4e5f\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6e90\u7801\u4e5f\u5f97\u57fa\u4e8e\u6700\u65b0\u7248\u672c\u7684\u6765\u5199 \uff0c\u662f\u4e0d\u662f\u7248\u672c\u4e0a\u4ee3\u7801\u4e0d\u517c\u5bb9\uff0c\n\u6211\u4eec\u4f7f\u7528\u7684\u65b9\u5f0f 1\\\u4f7f\u7528jar \uff0c 2\u3001 \u540c\u65f6\u4e5f\u91cd\u5199\u4e86\u91cc\u9762\u7684\u7c7b\ncom.alibaba.fastjson.JSONException: autoType is not support. com.huawei.appmarket.cachesys.Utils.CacheValue\n        at com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:869) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:325) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1335) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.JSON.parse(JSON.java:148) ~[fastjson-1.2.29.jar:?]\n        at com.alibaba.fastjson.JSON.parse(JSON.java:139) ~[fastjson-1.2.29.jar:?]\n----  \u8fd9\u4e2a\u8c8c\u4f3c\u8fd9\u6837\u5c31\u80fd\u89e3\u51b3\u3002 https://github.com/alibaba/fastjson/wiki/enable_autotype. @wenshao   \u4e0b\u9762\u662f\u91cd\u5199 ServletOutputStream \u7684write\u65b9\u6cd5\n\u539f\u6765\uff1a\n@Override\n    public void write(byte buf[], int off, int len)\n    {\n       oldStr = new String(buf, CommonUtils.CODE_UTF8);\n\u73b0\u5728\uff1a\n@Override\n    public void write(byte buf[], int off, int len)\n    {\n       oldStr = new String(buf, off, len, CommonUtils.CODE_UTF8);\n\u5347\u7ea7\u5230\u4e861.2.29\u540e \u9700\u8981\u5728\u8f6c\u4e3a\u5b57\u7b26\u4e32\u7684\u65f6\u5019 \u9700\u8981\u5c06\u6309\u7167\u6570\u7ec4\u7684\u5177\u4f53\u7684off\uff0clen\u6765\u53d6\u6570\u636e  \u4e0d\u7136\u5728\u540e\u9762\u5c31\u6709\u4e00\u4e32000000   \u5bfc\u81f4\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\u4e86\u3002 \n\u4ee5\u524d\u7684\u7248\u672c\u662f\u76f4\u63a5\u62ff\u6574\u4e2abyte\u957f\u5ea6\u8f93\u51fa\u7684\n\u8fd9\u662f\u662f\u4e0d\u662ffastjson view \u5728\u8fd4\u56de\u7684\u65f6\u5019 \u8fd9\u4e2abyte[] \u7684\u5904\u7406\u6709\u53d8\u5316\u4e86 . @wenshao   \u4e0b\u9762\u662f\u91cd\u5199 ServletOutputStream \u7684write\u65b9\u6cd5\n\u539f\u6765\uff1a\n@Override\n    public void write(byte buf[], int off, int len)\n    {\n       oldStr = new String(buf, CommonUtils.CODE_UTF8);\n\u73b0\u5728\uff1a\n@Override\n    public void write(byte buf[], int off, int len)\n    {\n       oldStr = new String(buf, off, len, CommonUtils.CODE_UTF8);\n\u5347\u7ea7\u5230\u4e861.2.29\u540e \u9700\u8981\u5728\u8f6c\u4e3a\u5b57\u7b26\u4e32\u7684\u65f6\u5019 \u9700\u8981\u5c06\u6309\u7167\u6570\u7ec4\u7684\u5177\u4f53\u7684off\uff0clen\u6765\u53d6\u6570\u636e  \u4e0d\u7136\u5728\u540e\u9762\u5c31\u6709\u4e00\u4e32000000   \u5bfc\u81f4\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\u4e86\u3002 \n\u4ee5\u524d\u7684\u7248\u672c\u662f\u76f4\u63a5\u62ff\u6574\u4e2abyte\u957f\u5ea6\u8f93\u51fa\u7684\n\u8fd9\u662f\u662f\u4e0d\u662ffastjson view \u5728\u8fd4\u56de\u7684\u65f6\u5019 \u8fd9\u4e2abyte[] \u7684\u5904\u7406\u6709\u53d8\u5316\u4e86 . \u8bf7\u8d50\u6559\u00b7 . \u901a\u8fc7\u5728\u4e1a\u52a1\u4e0a\u7684\u5b9a\u4f4d\uff0c \u770b\u6837\u5b50\u662f\u7f16\u7801\u4e0d\u517c\u5bb9\u7684\u95ee\u9898 \nfastjsonview\u5728\u5199\u6570\u636e\u65f6 \u975eutf8 \u4f1a\u629b\u5f02\u5e38 \u6bd4\u5982emoji\u3002\n. writer.writeToEx(os, charset); \u5230\u5e95\u662f\u5e72\u5565\u5462 \n. @wenshao  . \u73b0\u5728\u770b\u662f\u4e00\u4e9b\u8868\u60c5\u5b57\u7b26\u53ef\u80fd\u6709\u5f71\u54cd\uff0c   \u4e4b\u524d\u75281.2.7\u65f6 \u6ca1\u8fd9\u4e2a\u95ee\u9898 \uff0c\u8868\u60c5\u5b57\u7b26\u5b58\u5728\u7684\u8bdd \u5c31\u5728writer.writeToEx(os, charset); \u5f02\u5e38 \n. \u7528emoji \u8f93\u51fa\u7684\u90fd\u53ef\u4ee5\u91cd\u73b0. ",
    "umi-soft": "FastJsonHttpMessageConverter4\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u8c22\u8c22. FastJsonHttpMessageConverter4\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u8c22\u8c22. ",
    "blankhang": "@ControllerAdvice(basePackages = \"com.test.web\")\npublic class JsonpAdvice extends AbstractJsonpResponseBodyAdvice {\npublic JsonpAdvice(){\n    super(\"callback\", \"jsonp\");\n}\n\n}\n\u4ed6\u60f3\u95ee\u7684\u5e94\u8be5\u662f\u8fd9\u4e2a\u5427..\n\u7c7b\u4f3c spring \u81ea\u5e26\u7684 jsonp \u54cd\u5e94\u914d\u7f6e\nfastjson wiki \u597d\u50cf\u6ca1\u6709\u7c7b\u4f3c\u914d\u7f6e...\n\u6211\u53ea\u627e\u5230\u4e86\u88ab\u6807\u8bb0\u4e3a\u5df2\u8fc7\u65f6\u7684\u914d\u7f6e\nhttps://github.com/alibaba/fastjson/wiki/FastJsonpHttpMessageConverter4_CN\n\u8bf7\u95ee\u6709\u7c7b\u4f3c springboot \u7684\u7c7b\u914d\u7f6e\u7684\u65b9\u6cd5\u5417..\u50cf\u6211\u524d\u9762\u5199\u5f97\u8fd9\u6837\u7684 ...\n\u56e0\u4e3a\u6211\u53d1\u73b0\u5982\u679c\u540c\u65f6\u5199 \u8fd9\u4e2a\u52a0\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n    @Override\n    public void configureMessageConverters(List> converters) {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        //\u81ea\u5b9a\u4e49\u914d\u7f6e...\n        FastJsonConfig config = new FastJsonConfig();\n        config.setCharset(Charset.forName(\"UTF-8\"));\n        converter.setFastJsonConfig(config);\n        converters.add(converter);\n    }\n}\n\u4f1a\u5bfc\u81f4\u8fd4\u56de\u7c7b\u578b\u4e3a TEXT/HTML \u4e86...\n\u6709\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528 fastjson \u914d\u7f6e\u652f\u6301 jsonp? \nSpringBoot 2.0.2 \u7248\u672c\n\u7f51\u4e0a\u641c\u7d22\u4e86\u4e00\u5708 \u6ca1\u6709\u627e\u5230\u6bd4\u8f83\u597d\u7684\u529e\u6cd5 \u9664\u4e86\u6700\u524d\u9762\u6211\u5199\u7684 \n\u4f46\u662f\u8fd9\u6837\u5199\u597d\u50cf \u662f\u7528\u7684 jackson \u800c\u4e0d\u662f fastjson \u4e86\n. @ControllerAdvice(basePackages = \"com.test.web\")\npublic class JsonpAdvice extends AbstractJsonpResponseBodyAdvice {\npublic JsonpAdvice(){\n    super(\"callback\", \"jsonp\");\n}\n\n}\n\u4ed6\u60f3\u95ee\u7684\u5e94\u8be5\u662f\u8fd9\u4e2a\u5427..\n\u7c7b\u4f3c spring \u81ea\u5e26\u7684 jsonp \u54cd\u5e94\u914d\u7f6e\nfastjson wiki \u597d\u50cf\u6ca1\u6709\u7c7b\u4f3c\u914d\u7f6e...\n\u6211\u53ea\u627e\u5230\u4e86\u88ab\u6807\u8bb0\u4e3a\u5df2\u8fc7\u65f6\u7684\u914d\u7f6e\nhttps://github.com/alibaba/fastjson/wiki/FastJsonpHttpMessageConverter4_CN\n\u8bf7\u95ee\u6709\u7c7b\u4f3c springboot \u7684\u7c7b\u914d\u7f6e\u7684\u65b9\u6cd5\u5417..\u50cf\u6211\u524d\u9762\u5199\u5f97\u8fd9\u6837\u7684 ...\n\u56e0\u4e3a\u6211\u53d1\u73b0\u5982\u679c\u540c\u65f6\u5199 \u8fd9\u4e2a\u52a0\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n    @Override\n    public void configureMessageConverters(List> converters) {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        //\u81ea\u5b9a\u4e49\u914d\u7f6e...\n        FastJsonConfig config = new FastJsonConfig();\n        config.setCharset(Charset.forName(\"UTF-8\"));\n        converter.setFastJsonConfig(config);\n        converters.add(converter);\n    }\n}\n\u4f1a\u5bfc\u81f4\u8fd4\u56de\u7c7b\u578b\u4e3a TEXT/HTML \u4e86...\n\u6709\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528 fastjson \u914d\u7f6e\u652f\u6301 jsonp? \nSpringBoot 2.0.2 \u7248\u672c\n\u7f51\u4e0a\u641c\u7d22\u4e86\u4e00\u5708 \u6ca1\u6709\u627e\u5230\u6bd4\u8f83\u597d\u7684\u529e\u6cd5 \u9664\u4e86\u6700\u524d\u9762\u6211\u5199\u7684 \n\u4f46\u662f\u8fd9\u6837\u5199\u597d\u50cf \u662f\u7528\u7684 jackson \u800c\u4e0d\u662f fastjson \u4e86\n. ",
    "LSL1618": "\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u9996\u5b57\u7b26\u6216\u672b\u5b57\u7b26\u7c7b\u4f3c\u5c31\u4e0d\u7528\u8bf4\u4e86\u3002. \u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u9996\u5b57\u7b26\u6216\u672b\u5b57\u7b26\u7c7b\u4f3c\u5c31\u4e0d\u7528\u8bf4\u4e86\u3002. @TommyLemon \uff0c\u597d\u7684\uff0c\u6211\u77a7\u77a7\u53bb\uff01. @TommyLemon \uff0c\u597d\u7684\uff0c\u6211\u77a7\u77a7\u53bb\uff01. @Weirdo-Z \uff0c\u6b63\u89e3\uff0c\u5b57\u7b26\u4e32\u53bbinstanceof JSONArray\u80af\u5b9a\u5339\u914d\u4e0d\u4e0a\u3002. @Weirdo-Z \uff0c\u6b63\u89e3\uff0c\u5b57\u7b26\u4e32\u53bbinstanceof JSONArray\u80af\u5b9a\u5339\u914d\u4e0d\u4e0a\u3002. @JerryX \uff0c\u4f60\u7684\u601d\u8def\u662f\u5148\u89e3\u6790\u518d\u5224\u65ad\u7c7b\u578b\uff0c\u53ef\u884c\u3002\u4e0d\u8fc7\u9700\u8981\u5148\u8fc7\u6ee4\u6389\u975e\u6cd5JSON\u5b57\u7b26\u4e32\uff0c\u8981\u4e0d\u7136\u4f1a\u62a5\u5f02\u5e38\u3002. @JerryX \uff0c\u4f60\u7684\u601d\u8def\u662f\u5148\u89e3\u6790\u518d\u5224\u65ad\u7c7b\u578b\uff0c\u53ef\u884c\u3002\u4e0d\u8fc7\u9700\u8981\u5148\u8fc7\u6ee4\u6389\u975e\u6cd5JSON\u5b57\u7b26\u4e32\uff0c\u8981\u4e0d\u7136\u4f1a\u62a5\u5f02\u5e38\u3002. 3\u697c @TommyLemon \u7684\u94fe\u63a5\u5df2\u5931\u6548\uff0c\u6709\u6548\u7684\u5728\u6b64https://github.com/TommyLemon/APIJSON/blob/master/APIJSON-Java-Server/APIJSONLibrary/src/main/java/zuo/biao/apijson/JSON.java. 3\u697c @TommyLemon \u7684\u94fe\u63a5\u5df2\u5931\u6548\uff0c\u6709\u6548\u7684\u5728\u6b64https://github.com/TommyLemon/APIJSON/blob/master/APIJSON-Java-Server/APIJSONLibrary/src/main/java/zuo/biao/apijson/JSON.java. \u52a0\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u65b9\u6cd5\u5c31\u597d\u5427. JAVA\u65f6\u95f4\u6233\u662f13\u4f4d\u7684\uff0c\u8bc6\u522b\u4e0d\u4e8610\u4f4d\u7684\uff0c\u9700\u8981\u81ea\u5df1\u5904\u7406\u3002. \u53c2\u8003\u4e0b\u8fd9\u4e2a\u5427\nhttps://blog.csdn.net/qq_35873847/article/details/78850528. \u62dc\u6258\uff0c\u5b57\u7b26\u4e32\u8fd8\u9700\u8981JSON.toJSONString()\u561b\uff0c\u518d\u8bf4\u5b57\u7b26\u4e32\u683c\u5f0f\u4e5f\u4e0d\u5bf9\uff0c\u5e94\u8be5\u7c7b\u4f3c{key:value}\u6216\u8005[value]\u8fd9\u6837\u7684\u624d\u53ef\u4ee5\u3002. @dezhonger \uff0c\u73b0\u5728\u6709\u66f4\u65b0\u7684\u7248\u672c\u4e86\u3002. @dezhonger maven\u4ed3\u5e93\u6709\u66f4\u65b0\u7684\u3002. \u6709\u65f6\u5019\u7c7b\u540d\uff0c\u5c5e\u6027\u540d\uff0c\u65b9\u6cd5\u540d\u672c\u8eab\u5c31\u662f\u6ce8\u91ca\u3002. \u524d\u7aef\u65e5\u671f\u683c\u5f0f\u548c\u540e\u7aef\u8bbe\u7f6e\u7684\nfastJsonConfig.setDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u683c\u5f0f\u5bf9\u4e0d\u4e0a\uff0c\u81ea\u7136\u4f1a\u62a5\u9519\u3002\n\u524d\u540e\u7aef\u4fdd\u6301\u7edf\u4e00\u683c\u5f0f\u5c31\u597d\u4e86\u3002. JAVA\u65f6\u95f4\u6233\u662f13\u4f4d\u7684\uff0c\u8bc6\u522b\u4e0d\u4e8610\u4f4d\u7684\uff0c\u9700\u8981\u81ea\u5df1\u5904\u7406\u3002. \u7b80\u5355\uff0c\u6539\u4e00\u4e0bput\u503c\u5c31\u597d\u4e86\uff0c\njson.put(\"info\", value);\njson.put(\"arr\", arr);\nput\u65b9\u6cd5\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e2aObject\u5bf9\u8c61\u3002. @ysdxz207 \uff0c\u90a3\u53ea\u80fd\u8fd9\u6837\u4e86\uff0c\u628aarr\u548cinfo\u7684\u503c\u53d6\u51fa\u6765\u505a\u4e00\u4e0b\u5224\u65ad\uff0c\u5982\u679c\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5c31\u628a\u4ed6\u4eec\u5206\u522bJSON.parse()\uff0c\u7136\u540e\u518d\u91cd\u65b0\u585e\u56de\u53bb\uff0c\u4e0d\u662f\u5b57\u7b26\u4e32\u5c31\u7167\u5e38\u8fd4\u56de\u3002. @ysdxz207 \uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u4e86\uff0c\u6bd5\u7adf\u6709\u7684\u65f6\u5019\u53ef\u80fd\u5c31\u662f\u9700\u8981\u4f20\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u800c\u4e14\u5faa\u73af\u5d4c\u5957\u4e4b\u7c7b\u7684\u4e5f\u4e0d\u597d\u63a7\u5236\u3002. \u5947\u602a\uff0c\u73b0\u5728\u53c8\u53ef\u4ee5\u4e86\uff01. @nanpingwang \uff0c\u5e94\u8be5\u4e0d\u652f\u6301Map\uff0c\u53ea\u652f\u6301\u5b9e\u4f53\u5bf9\u8c61\u5427\nhttps://github.com/alibaba/fastjson/wiki/PropertyNamingStrategy_cn. @nanpingwang \u76ee\u524d\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u65b9\u5f0f\u6765\u5b9e\u73b0\u3002. \u4e0d\u592a\u61c2\u4f60\u662f\u8981\u524d\u7aef\u53d6\u503c\u8fd8\u662f\u540e\u7aef\u53d6\u503c\uff0c\u540e\u7aef\u53c2\u8003\uff1a\nJSONArray list = json.getJSONObject(\"data\").getJSONArray(\"list\");\nJSONArray followSeries = list.getJSONObject(i).getJSONArray(\"followSeries\");//i\u662f\u5faa\u73af\u7684\u4e0b\u6807. \u6ca1\u529e\u6cd5\u4e86\uff0c\u4f60\u53ea\u80fd\u628aJSONPath.read(json, \"$.data.list.followSeries.name\")\u7684\u7ed3\u679c\u8fdb\u884c\u4e8c\u6b21\u5904\u7406\u4e86\u3002. getter\uff0csetter\u65b9\u6cd5\uff1f\uff1f\uff1f. \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u63a5\u53e3\u4f30\u8ba1\u662f\u7528PHP\u6216\u8005\u522b\u7684\u751f\u621010\u4f4d\u65f6\u95f4\u6233\u8bed\u8a00\u5199\u7684\u3002. \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u63a5\u53e3\u4f30\u8ba1\u662f\u7528PHP\u6216\u8005\u522b\u7684\u751f\u621010\u4f4d\u65f6\u95f4\u6233\u8bed\u8a00\u5199\u7684\u3002. fastjson \u8f83\u65b0\u7248\u672c\u4e2d\u7684 FastJsonHttpMessageConverter4 \u53c8\u8fc7\u671f\u4e86\u8bf6\uff0c\u90fd\u63a8\u8350\u4f7f\u7528 FastJsonHttpMessageConverter \u4e86\u3002. ",
    "wujiedong": "paramObj instanceof JSONArray,\u76f4\u63a5\u7528instanceof\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86. paramObj instanceof JSONArray,\u76f4\u63a5\u7528instanceof\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86. ",
    "Weirdo-Z": "@wujiedong \u5b57\u7b26\u4e32\u3002\u3002\u3002\u3002\u4e0d\u53ef\u80fdinstanceof JSONArray\u5427\u3002\u3002\u3002\u3002. ",
    "JerryX": "Object obj = JSON.parse(str);\nif(obj instanceof JSONObject) {\n}else if if(obj instanceof JSONArray) {\n}else {}. Object obj = JSON.parse(str);\nif(obj instanceof JSONObject) {\n}else if if(obj instanceof JSONArray) {\n}else {}. ",
    "ayanamist": "\u6211\u80fd\u786e\u8ba4\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0cfastjson 1.2.24\u7248\u672c\n\u95ee\u9898\u53d1\u751f\u5728com.alibaba.fastjson.serializer.SerializeWriter#writeFieldValueStringWithDoubleQuote\u8fd9\u4e2a\u65b9\u6cd5\u91cc\njava\nvalue.getChars(0, valueLen, buf, valueStart);\n\u8fd9\u91cc\u76f4\u63a5\u7528getChars\u7684\u7ed3\u679c\u586b\u5145\u4e86buf\uff0c\u5bfc\u81f4\u5f15\u53f7\u6ca1\u6709\u8f6c\u4e49\u5c31\u8fdb\u5230\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u4e2d\u3002\n\u521a\u624d\u53c8\u8bd5\u4e86\u4e00\u4e0b1.2.28\u7248\u672c\uff0c\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\uff0c\u539f\u56e0\u4e5f\u662f\u4e00\u6837\u7684\u3002. \u6211\u80fd\u786e\u8ba4\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0cfastjson 1.2.24\u7248\u672c\n\u95ee\u9898\u53d1\u751f\u5728com.alibaba.fastjson.serializer.SerializeWriter#writeFieldValueStringWithDoubleQuote\u8fd9\u4e2a\u65b9\u6cd5\u91cc\njava\nvalue.getChars(0, valueLen, buf, valueStart);\n\u8fd9\u91cc\u76f4\u63a5\u7528getChars\u7684\u7ed3\u679c\u586b\u5145\u4e86buf\uff0c\u5bfc\u81f4\u5f15\u53f7\u6ca1\u6709\u8f6c\u4e49\u5c31\u8fdb\u5230\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u4e2d\u3002\n\u521a\u624d\u53c8\u8bd5\u4e86\u4e00\u4e0b1.2.28\u7248\u672c\uff0c\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\uff0c\u539f\u56e0\u4e5f\u662f\u4e00\u6837\u7684\u3002. \u56e0\u4e3a\u53ea\u6709\u5b9e\u73b0java.util.Map.Entry\u63a5\u53e3\u65f6\uff0cFastJSON\u624d\u4f1a\u5728com.alibaba.fastjson.serializer.MiscCodec\u91cc\u7528\u5230com.alibaba.fastjson.serializer.SerializeWriter#writeFieldValueStringWithDoubleQuote\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7136\u540e\u5c31\u4f1a\u6709\u95ee\u9898\n\u4e0d\u4f9d\u8d56commons-lang3\u7684case\n```groovy\nimport com.alibaba.fastjson.JSON;\nMap.Entry data = new AbstractMap.SimpleImmutableEntry(\"key\", \"\\\"the\\\"content\");\nSystem.out.println(JSON.toJSONString(data));\n``. \u56e0\u4e3a\u53ea\u6709\u5b9e\u73b0java.util.Map.Entry\u63a5\u53e3\u65f6\uff0cFastJSON\u624d\u4f1a\u5728com.alibaba.fastjson.serializer.MiscCodec\u91cc\u7528\u5230com.alibaba.fastjson.serializer.SerializeWriter#writeFieldValueStringWithDoubleQuote`\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7136\u540e\u5c31\u4f1a\u6709\u95ee\u9898\n\u4e0d\u4f9d\u8d56commons-lang3\u7684case\n```groovy\nimport com.alibaba.fastjson.JSON;\nMap.Entry data = new AbstractMap.SimpleImmutableEntry(\"key\", \"\\\"the\\\"content\");\nSystem.out.println(JSON.toJSONString(data));\n```. ",
    "alphta": "\u4e0d\u7b97BUG\uff0c\u539f\u56e0\u6211\u4e5f\u6ca1\u627e\u5230\u3002\n\u6211\u518d\u6b21\u5c01\u88c5\u4e86parseObject\uff0c\u589e\u52a0\u4e86\u53c2\u6570Feature.InitStringFieldAsEmpty\uff0c\u7136\u540e\u5c06json\u5b57\u7b26\u4e32\u8f6c\u6362\u5f15\u7528\u7684jar\u5305\u91cc\u7684\u5bf9\u8c61\u5c31\u4f1a\u5931\u8d25\uff1b1. \u5220\u9664\u53c2\u6570Feature.InitStringFieldAsEmpty\u4f1a\u8f6c\u6362\u6210\u529f\uff1b2. \u5c06\u5bf9\u8c61\u63d0\u51fa\u6765\u8f6c\u6362\u4f1a\u6210\u529f\uff1b\n\u8c22\u8c22\uff01. \u4e0d\u7b97BUG\uff0c\u539f\u56e0\u6211\u4e5f\u6ca1\u627e\u5230\u3002\n\u6211\u518d\u6b21\u5c01\u88c5\u4e86parseObject\uff0c\u589e\u52a0\u4e86\u53c2\u6570Feature.InitStringFieldAsEmpty\uff0c\u7136\u540e\u5c06json\u5b57\u7b26\u4e32\u8f6c\u6362\u5f15\u7528\u7684jar\u5305\u91cc\u7684\u5bf9\u8c61\u5c31\u4f1a\u5931\u8d25\uff1b1. \u5220\u9664\u53c2\u6570Feature.InitStringFieldAsEmpty\u4f1a\u8f6c\u6362\u6210\u529f\uff1b2. \u5c06\u5bf9\u8c61\u63d0\u51fa\u6765\u8f6c\u6362\u4f1a\u6210\u529f\uff1b\n\u8c22\u8c22\uff01. ",
    "xiushao1024": "\u4f60\u597d\uff0c\u6700\u8fd1\u4f7f\u7528JsonPath\u89e3\u6790\u7684\u65f6\u5019\u9047\u5230\u53e6\u4e00\u4e2a\u95ee\u9898\u3002\u5f53json \u7684\u5c5e\u6027\u540d\u4e3a\u6570\u5b57\u5e76\u4e14\u6570\u503c\u8fc7\u5927\u65f6\uff08\u8d85\u8fc7integer.max_value\uff09\uff0c\u76f4\u63a5\u4f7f\u7528JsonPath\u8868\u8fbe\u5f0f\u89e3\u6790\u62a5\u9519\u3002\njava.lang.NumberFormatException: For input string: \"1234567899999\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Integer.parseInt(Integer.java:495)\n    at java.lang.Integer.parseInt(Integer.java:527)\npublic static void main(String[] args) {\n        //\u6b63\u5e38\u89e3\u6790\n        String json1 = \"{\\\"articles\\\":{\\\"2147483647\\\":{\\\"XXX\\\":\\\"xiu\\\"}}}\";\n        String path1 = \"$.articles.2147483647.XXX\";\n        Object read = JSONPath.read(json1, path1);\n            //\u62a5\u9519\n    String json2 = \"{\\\"articles\\\":{\\\"2147483648\\\":{\\\"XXX\\\":\\\"xiu\\\"}}}\";\n    String path2 = \"$.articles.2147483648.XXX\";\n    Object read2 = JSONPath.read(json2, path2);\n}. \u8f9b\u82e6!.\n",
    "manyixu": "\u662f\u76f4\u63a5\u52a0\u5230src\u4e0b\u9762\u5417@wenshao\n. ",
    "eryueming": "\u5165\u53c2\u5b9a\u4e49\u4e3a\u5b9e\u4f53\u6570\u7ec4\u65f6\u53ef\u884c\uff0c\u53ef\u5b9a\u4e49\u4e3aList<\u5b9e\u4f53>\u65f6List\u4e2d\u5bf9\u8c61\u672a\u8f6c\u4e3a\u5b9e\u4f53\u800c\u662fJSONObject. ",
    "hwck": "@wenshao \u8fd9\u4e24\u4e2a\u90fd\u7528\u4e86\uff0c\u9700\u6c42\u662f\u5c06\u6240\u6709\u7684\u57fa\u672c\u7c7b\u578b\u90fd\u6539\u4e3aString\u7c7b\u578b\uff0c\u5982\u679c\u4e3anull \u5c31\u8f6c\u6362\u4e3a\u201c\u201d\u663e\u793a\uff0c\u7528WriteNullNumberAsZero,\u5982\u679c\u4e3anull=0 \u4e0d\u662f\u201c\u201d,\u6240\u4ee5\u5c31\u5728\u60f3\u6709\u4ec0\u4e48\u65b9\u6cd5\u5c06\u6240\u6709\u7684\u7c7b\u578b\u8f6c\u4e3a\u201c\u201d\u3002\u7528valueFilter\u662f\u53ef\u4ee5\u8fbe\u5230\u6548\u679c\uff0c\u8c22\u8c22\uff01. ",
    "GuChuan": "\u6211\u7684\u7248\u672c    \n1.2.22\n. JSON.toJSONString(result, SerializerFeature.PrettyFormat, SerializerFeature.DisableCircularReferenceDetect); \u6709\u8fd9\u51e0\u4e2a\u53c2\u6570\u7684\u8bf4\u660e\u6587\u6863\u5417\uff1f. @wenshao \u662f\u5426\u53ea\u6709\u8fd9\u4e00\u79cd\u89e3\u6cd5\uff1f. \u6211\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u51e1\u662f\u7528\u4e86@Data\u6ce8\u89e3\u7684\u7c7b\uff0cparseObject\u7684\u65f6\u5019\u90fd\u4f1a\u62a5default constructor not found\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u7684\u8fd0\u884c\u673a\u5236\u5e94\u8be5\u548cfastjson \u89e3\u6790\u7684\u903b\u8f91\u51b2\u7a81\u4e86. ",
    "ustcstar06": "1.2.28\u4e5f\u6709\u7c7b\u4f3c\u95ee\u9898. ",
    "xianyongjie": "\u52a0\u8fd9\u4e2a\u53c2\u6570Feature.OrderedField\u8bf4\u660e\u4e0d\u4f1a\u81ea\u52a8\u6392\u5e8f\u7f62\u4e86\uff0c\u8bd5\u8fc7\u8fd8\u662f\u4e0d\u884c. String jsonParams =\"{\\\"param\\\":[{\\\"contractType\\\":\\\"b\\\",\\\"contractId\\\":\\\"a\\\",\\\"contractUrl\\\":\\\"c\\\"}]}\";\n    Map params = JSON.parseObject(jsonParams,new TypeReference>(){},Feature.OrderedField);\n    System.out.println(params);. 1.2.31\u8f93\u51fa\uff1a{param=[{\"contractType\":\"b\",\"contractId\":\"a\",\"contractUrl\":\"c\"}]}. @wenshao \u73b0\u5728\u662f\u53cd\u5e8f\u5217\u5316\u4e0d\u884c\uff0c\u56e0\u4e3a\u52a0\u7b7e\u529f\u80fd\u8981\u7528\u5230. ",
    "samunbest": "@xianyongjie hello \u8fd9\u4e2a\u4f60\u600e\u4e48\u89e3\u51b3\u7684. ",
    "MrYang12": "\uff08\"tag_prefer\": \"\", \"used_decoration\": [],//\u670d\u52a1\u7aef\u4e0b\u53d1\u6570\u636e\u7684\u4e00\u90e8\u5206   \u6b63\u5e38\u7684json\uff09\u6211\u628a\u5bf9\u8c61\u4e2d\u7684 \u201cused_decoration\u201d \u8fd9\u4e2a\u5b57\u6bb5\u53bb\u6389\u4e5f\u4f1a\u51fa\u73b0\u540c\u6837\u7684\u9519\u8bef  ,\u800c\u4e14\u8fd9\u4e2a\u95ee\u9898  \u76ee\u524d\u7684\u8bdd \u6b63\u597d\u662f\u5728\u4e09\u661fnote3\u4e0a\u53d1\u73b0\u7684  \u5176\u4ed6\u673a\u578b\u6ca1\u6709\u95ee\u9898\u3002\u201cused_decoration\u201d \u8be5\u5b57\u6bb5\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u6570\u7ec4\u3002\nexepct '[', but string, type : class com.mengjun.DanNovel.task.data.common.ReaderInfo\n                                                                com.alibaba.fastjson.JSONException: exepct '[', but string, type : class com.mengjun.DanNovel.task.data.common.ReaderInfo\n                                                                    at com.alibaba.fastjson.parser.ListTypeFieldDeserializer.parseArray(ListTypeFieldDeserializer.java:162)\n                                                                    at com.alibaba.fastjson.parser.ListTypeFieldDeserializer.parseField(ListTypeFieldDeserializer.java:63)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:874)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:695)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:95)\n                                                                    at com.alibaba.fastjson.parser.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:45)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:642)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:95)\n                                                                    at com.alibaba.fastjson.parser.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:45)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:642)\n                                                                    at com.alibaba.fastjson.parser.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:95)\n                                                                    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:679)\n                                                                    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:652)\n                                                                    at com.alibaba.fastjson.JSON.parseObject(JSON.java:218)\n                                                                    at com.alibaba.fastjson.JSON.parseObject(JSON.java:190)\n                                                                    at com.alibaba.fastjson.JSON.parseObject(JSON.java:149)\n                                                                    at com.alibaba.fastjson.JSON.parseObject(JSON.java:258). \u8c22\u8c22\u7b54\u7591  \u4e0d\u8fc7\u4f9d\u7136\u6709\u95ee\u9898  \u7248\u672c\u5df2\u7ecf\u66ff\u6362\u8fc7\u4e86\n. ",
    "lvdelu": "\u7279\u6b8a\u8868\u60c5\u51fa\u73b0\u7684\u95ee\u9898\u6bd4\u5982\uff1a\ud83c\udf08\u2744\ufe0f\ud83d\udca7\ud83c\udff3\ufe0f\u200d\ud83c\udf08. ",
    "applerao": "\ud83d\udc51\u540c\u6837\u91cd\u73b0. ",
    "SevenFxm": "\u4e0a\u6e38\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u597d\u50cf\u662fSQLServer \u4ed6\u4eec\u90a3\u8fb9\u4e1a\u52a1\u652f\u6301\u9700\u8981\u8fd9\u4e48\u5927\u7684\u65e5\u671f. \u4e0a\u6e38\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u597d\u50cf\u662fSQLServer \u4ed6\u4eec\u90a3\u8fb9\u4e1a\u52a1\u652f\u6301\u9700\u8981\u8fd9\u4e48\u5927\u7684\u65e5\u671f. \u55ef\u55ef\uff0c\u7406\u89e3\u54af\u975e\u5e38\u611f\u8c22\uff0c\u53e6\u5916\u6211\u5c069999\u8f6c\u6362\u4e0breplace(\"\\\"9999-09-09\\\"\", \"\\\"9999-09-09  00:00:00\\\"\"),\u8c8c\u4f3c\u5c31\u652f\u6301\u4e86,\u662f\u4e0d\u662f\u6211\u8d85\u989d\u7684\u65e5\u671f\u90fd\u8981\u6309\u8fd9\u79cd\u683c\u5f0f\u8f6c\u6362\u4e0b\u5443. \u55ef\u55ef\uff0c\u7406\u89e3\u54af\u975e\u5e38\u611f\u8c22\uff0c\u53e6\u5916\u6211\u5c069999\u8f6c\u6362\u4e0breplace(\"\\\"9999-09-09\\\"\", \"\\\"9999-09-09  00:00:00\\\"\"),\u8c8c\u4f3c\u5c31\u652f\u6301\u4e86,\u662f\u4e0d\u662f\u6211\u8d85\u989d\u7684\u65e5\u671f\u90fd\u8981\u6309\u8fd9\u79cd\u683c\u5f0f\u8f6c\u6362\u4e0b\u5443. \u5e94\u8be5\u662f\u8d85\u8fc73000\u5e74\u90fd\u8981\u8fd9\u4e48\u64cd\u4f5c\u561b\uff1f. \u5e94\u8be5\u662f\u8d85\u8fc73000\u5e74\u90fd\u8981\u8fd9\u4e48\u64cd\u4f5c\u561b\uff1f. ",
    "coodoing": "emoji \u5b57\u7b26\u4e32write\u629b\u5f02\u5e38\uff0c\u8fd9\u4e2a\u95ee\u9898\u6700\u540e\u6709\u7ed3\u8bba\u5417\uff1f\u76ee\u524d\u6d4b\u8bd5\uff1a1.2.28\u30011.2.29\u30011.2.40\u7248\u672c\u90fd\u6709\u95ee\u9898. ",
    "zzrain": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u672c\u5730\u76f4\u63a5\u6d4b\u8bd5fastjson\u6d4b\u8bd5\u4e5f\u6ca1\u6709\u91cd\u73b0\u3002\n\u9047\u5230\u7684\u573a\u666f\uff1a\ndubbo\u63a5\u53e3\u83b7\u53d6\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7fastjson\u5e8f\u5217\u5316\uff0c\u5728\u901a\u8fc7SerializeWriter.toBytes\u7684\u65f6\u5019\uff0c\u629b\u9519\u3002\n\u95ee\u9898\u5b57\u7b26\u5e94\u8be5\u662femoji\uff0c\u4f46\u662f\uff0c\u540c\u6837\u7684\u5b57\u7b26\uff0c\u76f4\u63a5\u7528fastjson\u6d4b\u8bd5\u5374\u6ca1\u6709\u95ee\u9898\uff0c\u6709\u70b9\u61f5\u3002\ndubbo\u5e8f\u5217\u5316\u65b9\u5f0f\u662f\u9ed8\u8ba4hessian\uff0c\nfastjson\u7248\u672c1.2.29.\n@wenshao \n. ",
    "marsqing": "\u6bd4\u5982\u8fd9\u6837\u6784\u9020\u4e00\u4e2aString\uff0cJSON.toJSONString(s)\u4e0d\u4f1a\u629b\u5f02\u5e38\uff0c\u867d\u7136\u628a\u5b57\u7b26\u90fd\u66ff\u6362\u6210\u4e86\u95ee\u53f7\u3002\u4f46\u662fJSON.toJSONBytes(s)\u662f\u4f1a\u629b\u51fa\u5f02\u5e38\u3002JSON.toJSONBytes(s)\u7684\u7ed3\u679c\u662f\u4e0d\u662f\u5e94\u8be5\u548cJSON.toJSONString(s).getBytes(\"utf-8\")\u4fdd\u6301\u4e00\u81f4\uff1f\u6bd4\u5982\u5c06\u65e0\u6cd5\u8868\u793a\u7684\u5b57\u7b26\u7528\u95ee\u53f7\u66ff\u6362\n```java\n@Test\n  public void test() throws Exception {\n    StringBuilder sb = new StringBuilder();\nchar start = '\\uD800';\nchar end = '\\uDFFF';\n\nfor (char i = start; i <= end; i++) {\n  if (Character.isLowSurrogate(i)) {\n    sb.append(i);\n  }\n}\nString s = sb.toString();\n\n// ok\nJSON.toJSONString(s);\n\n// ok\nJSON.toJSONString(s).getBytes(\"utf-8\");\n\n// exception\nJSON.toJSONBytes(s);\n\n}\n```. ",
    "robohorse": "Ok, thanks. I will wait for Kotlin support.. Great! I will do it soon. I use following version\ngroovy\ncompile group: 'com.alibaba', name: 'fastjson', version: '1.2.36'\nI have simple Json string:\njson\n{\"value\":1, \"text\":\"text\"}\nand 2 POJO objects\n1) java\n```java\npublic class ResponseJava{\n@JSONField(name=\"text\")\nprivate String text;\n\n@JSONField(name=\"value\")\nprivate int value;\n\npublic void setText(String text){\n    this.text = text;\n}\n\npublic String getText(){\n    return text;\n}\n\npublic void setValue(int value){\n    this.value = value;\n}\n\npublic int getValue(){\n    return value;\n}\n\n@Override\npublic String toString(){\n    return \n        \"ResponseJava{\" + \n        \"text = '\" + text + '\\'' + \n        \",value = '\" + value + '\\'' + \n        \"}\";\n    }\n\n}\n```\n\nkotlin\n\n```kotlin\ndata class ResponseKotlin(\n@field:JSONField(name=\"text\")\nval text: String? = null,\n\n@field:JSONField(name=\"value\")\nval value: Int? = null\n\n)\n```\nand finally i try to parse it.\nThat works fine:\njava\n ResponseJava response = JSON.parseObject(TEXT, ResponseJava.class);\nthat has empty fields:\nkotlin\n ResponseKotlin response = JSON.parseObject(TEXT, ResponseKotlin.class);\nWhere is my mistake?\n@amorenew @wenshao. yes i will see just a little later. Ok, thanks! After all test will release new version). Sorry for delay. FastJson Kotlin support available in 1.8.5 version - released right now. ",
    "amorenew": "kotlin now officially supported by google so it would be nice if you support it. @robohorse \nval is same as the final could you try var and tell us if it is working?\nhttps://stackoverflow.com/questions/44200075/val-and-var-in-kotlin. ",
    "kevinjmh": "\u6d4b\u8bd5\u4ee3\u7801\n```\n    public static void checkNull(String obj){\n        if(obj == null){\n            System.out.println(\"null Object\");\n        }else if(obj.equals(\"null\")){\n            System.out.println(\"\\\"null\\\" String\");\n        }\n    }\npublic static void main(String[] args){\n    String jsons = \"{\\\"gender\\\":\\\"male\\\"}\";\n    Student stu1 = JSON.parseObject(jsons,Student.class);\n    System.err.println(stu1);\n    checkNull(stu1.getName());\n\n    jsons=\"{\\\"gender\\\":\\\"male\\\",\\\"name\\\":\\\"null\\\"}\";\n    Student stu2 = JSON.parseObject(jsons,Student.class);\n    System.err.println(stu2);\n    checkNull(stu2.getName());\n\n}\n\n```\n\u8f93\u51fa\nStudent [name=null, gender=male]\nnull Object\nStudent [name=null, gender=male]\n\"null\" String\nQA\n\n\u8f6c\u6362\u4e3aStudent\u5bf9\u8c61\u65f6\uff0c\u4e0d\u5b58\u5728\u7684\u5b57\u6bb5\u4e3a\u4ec0\u4e48\u4e0d\u662f\u9ed8\u8ba4\u7684null\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u5b57\u7b26\u4e32\u201cnull\u201d\u5462\uff1f\n\n\n\u5728\u751f\u6210\u7684\u5bf9\u8c61\u91cc\uff0c\u786e\u5b9e\u662f\u4f60\u60f3\u8981\u7684\u201c\u9ed8\u8ba4\u7684null\u201d\uff0c\u4f46\u662fprint\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u6362\u3002\u4e0a\u8ff0\u6d4b\u8bd5\u4ee3\u7801\u5c31\u662f\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\n\n\n\u8fd9\u6837\u662f\u6ca1\u6cd5\u533a\u5206\u5b57\u6bb5\u662f\u5426\u5b58\u5728\u7684\u3002\u8fd8\u662f\u8bf4\u6709\u5176\u4ed6\u65b9\u5f0f\u53ef\u4ee5\u5224\u65ad\u5462\uff1f\n\n\n\u53ef\u4ee5\u4f7f\u7528\"missing\"\u7b49\u5176\u4ed6\u5b57\u7b26\u4e32\u4ee3\u66ff\u4f60\u4ee3\u7801\u4e2d\u7684\"null\"\u5b57\u7b26\u4e32\uff0c\u907f\u514d\u51b2\u7a81\u3002. \n",
    "QinYangFan": "\u4f60\u628ajson\u4e32\u4e2dnumm\u524d\u540e\u7684\u5f15\u53f7\u53bb\u6389. ",
    "xiaochengxuyuan": "@yizeliang  \u8fd9\u4e0d\u662f\u4f60\u76f4\u63a5 try-catch \u4e00\u4e0b\u60f3\u600e\u4e48\u6765\u5c31\u600e\u4e48\u6765\u4e86\u3002\u3002\u3002. ",
    "yizems": "@wenshao \u6211fork\u4e86Android\u5206\u652f\u4e0a\u7684\u9879\u76ee,\u76f4\u63a5\u5728\u629b\u51fa\u5f02\u5e38\u7684\u5730\u65b9 return \u5c31\u80fd\u62ff\u5230\u7a7a\u7684List,\u6211\u8fd9\u91cc\u662f\u9488\u5bf9List,\u5bf9\u6570\u7ec4\u6ca1\u6709\u6d4b\u8bd5 , \u6211\u524d\u6bb5\u65f6\u95f4\u6709\u8bd5\u8fc7master\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u53bb\u89e3\u6790,\u53d1\u73b0\u4f1a\u4ea7\u751f\u4e00\u4e2a \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684List,\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3anull,,\u8fd9\u4e2a\u5c31\u5f88\u5c34\u5c2c\u4e86,,,,\u4e0b\u9762\u662f\u6570\u636e\u6837\u672c:\n\u6b63\u5e38\u6570\u636ejson:\n{\n    \"list\": [\n        \"aaa\",\n        \"bbb\"\n    ]\n}\n\u4e0d\u6b63\u5e38json:\n{\n    \"list\": \"\"\n}\n\u89e3\u6790\u7c7b:\npublic class Demo{\npublic List list;\ngetter...\nsetter...\n}\n\u6069,\u5927\u6982\u5c31\u8fd9\u4e2a\u6837\u5b50,\u603b\u4f53\u6765\u8bf4\u8fd8\u662f \u540e\u53f0\u6570\u636e\u4e0d\u591f\u89c4\u8303\u5f15\u8d77\u7684,\u4e5f\u662f\u51fa\u4e8e\u65e0\u5948,\u63a5\u53e3\u6ca1\u6709\u529e\u6cd5\u53bb\u4fee\u6539,\u6240\u4ee5,,,\u8fd9\u662f\u4e00\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b..... @wenshao \u6211fork\u4e86Android\u5206\u652f\u4e0a\u7684\u9879\u76ee,\u76f4\u63a5\u5728\u629b\u51fa\u5f02\u5e38\u7684\u5730\u65b9 return \u5c31\u80fd\u62ff\u5230\u7a7a\u7684List,\u6211\u8fd9\u91cc\u662f\u9488\u5bf9List,\u5bf9\u6570\u7ec4\u6ca1\u6709\u6d4b\u8bd5 , \u6211\u524d\u6bb5\u65f6\u95f4\u6709\u8bd5\u8fc7master\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u53bb\u89e3\u6790,\u53d1\u73b0\u4f1a\u4ea7\u751f\u4e00\u4e2a \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684List,\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3anull,,\u8fd9\u4e2a\u5c31\u5f88\u5c34\u5c2c\u4e86,,,,\u4e0b\u9762\u662f\u6570\u636e\u6837\u672c:\n\u6b63\u5e38\u6570\u636ejson:\n{\n    \"list\": [\n        \"aaa\",\n        \"bbb\"\n    ]\n}\n\u4e0d\u6b63\u5e38json:\n{\n    \"list\": \"\"\n}\n\u89e3\u6790\u7c7b:\npublic class Demo{\npublic List list;\ngetter...\nsetter...\n}\n\u6069,\u5927\u6982\u5c31\u8fd9\u4e2a\u6837\u5b50,\u603b\u4f53\u6765\u8bf4\u8fd8\u662f \u540e\u53f0\u6570\u636e\u4e0d\u591f\u89c4\u8303\u5f15\u8d77\u7684,\u4e5f\u662f\u51fa\u4e8e\u65e0\u5948,\u63a5\u53e3\u6ca1\u6709\u529e\u6cd5\u53bb\u4fee\u6539,\u6240\u4ee5,,,\u8fd9\u662f\u4e00\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b..... @wenshao 3Q,\u4fee\u590dbug \u901f\u5ea6\u771f\u5feb =.=. @wenshao 3Q,\u4fee\u590dbug \u901f\u5ea6\u771f\u5feb =.=. ",
    "linxingyulxy": "\u8bf7\u6559\u8981\u5199\u81ea\u5b9a\u4e49\u7684deserializeUsing \u8981\u5b9e\u73b0\u54ea\u4e2a\u63a5\u53e3\u5462\uff1f\n. ",
    "accphuangxin": "\u6211\u4eec\u4e5f\u9047\u5230\u6b64\u95ee\u9898\uff0c\u6211\u662f\u5982\u4e0b\u89e3\u51b3\u7684\uff1a\u4fee\u6539\u4e86DateCodec\u7c7b \u7684cast()\u65b9\u6cd5\u4e2d\u5b57\u7b26\u4e32\u8f6c\u4e3aDate \u57fa\u4e8ejodo-time\u5904\u7406\u3002\nParserConfig parserConfig = new ParserConfig();\nparserConfig.putDeserializer(Date.class, com.hujiang.xxx.DateCodec.instance);\nJSON.parseObject(\"{\\\"dateadded\\\":\\\"0001-01-01T00:00:00+08:00\\\"}\", BookConfig.class, parserConfig);. ",
    "viphyy": "\u8d5e\u8d5e\u8d5e. ",
    "wi11du0n": "version: 1.2.35 @wenshao \nDate d = org.joda.time.LocalDateTime.parse(\"2017-07-22\").toDate();\nString json = JSON.toJSONString(d, SerializerFeature.UseISO8601DateFormat);\nSystem.out.println(json);\nExcept: \"2017-07-22T00:00:00.000+08:00\"\nActual: \"2017-07-22+08:00\"\n. ",
    "yongyueli": "demo\u4e2d\u5199\u7684\u5c40\u90e8\u751f\u6548\nint disableDecimalFeature = JSON.DEFAULT_PARSER_FEATURE &= ~Feature.UseBigDecimal.getMask();\n\u4f9d\u7136\u4f1a\u5168\u5c40\u751f\u6548\uff0c\u6211\u89c9\u5f97\u5e94\u8be5\u662f\nint disableDecimalFeature = JSON.DEFAULT_PARSER_FEATURE & ~Feature.UseBigDecimal.getMask();. ",
    "liungkejin": "\u662f\u6211\u7684\u95ee\u9898\uff0c\u4e0d\u597d\u610f\u601d. ",
    "shuiyueIII": "\u4e0d\u662fnumber\u7684\u95ee\u9898\uff0c\u662f\u53d8\u91cf\u540d\u7684\u95ee\u9898\uff0c\u53d8\u91cf\u540d\u4ee5\u4e24\u4e2a\u201c_\u201d\u5f00\u5934\u662f\u6709\u95ee\u9898\u7684\uff0c\u7528toJsonString()\u8f6c\u5c31\u4f1a\u8f6c\u9519. ",
    "jiangyubao": "\nOSGi\u5165\u95e8\uff1a\nhttp://www.360doc.com/content/14/0508/11/16506057_375746663.shtml\n\u91cc\u9762\u5305\u62ec\u4e86\u8fd0\u884c\u65b9\u6cd5\u3002\n\u9700\u8981\u628a\u666e\u901a\u7684jar\u8f6c\u6362\u4e3aosgi\u7684bundle\uff0c\u6211\u8f6c\u6362\u4e862\u4e2a\n\u8fd0\u884c\u65f6\uff0c\u5206\u522b\u52fe\u9009\u4e0d\u540c\u529e\u6cd5\u4f5c\u4e3aosgi\u4f9d\u8d56\u5e93\uff0c\u5728osx\u5e73\u53f0\u4e0b\u8fd0\u884c\u5373\u53ef\u770b\u89c1\u7ed3\u679c\u3002\n\n\u4ece\u76ee\u524d\u7ed3\u679c\u6765\u770b\uff0c\u95ee\u9898\u57281.2.31\u7248\u672c\u5df2\u7ecf\u5f97\u5230\u89e3\u51b3\u4e86\u3002\n`package hello;\nimport org.osgi.framework.BundleActivator;\nimport org.osgi.framework.BundleContext;\nimport com.alibaba.fastjson.JSONArray;\npublic class Activator implements BundleActivator {\npublic void start(BundleContext context) throws Exception {\nSystem.out.println(\"\u5f00\u59cb\u89e3\u6790\uff1aJSONArray.parseArray\");\nJSONArray array = JSONArray.parseArray(\"[1,2]\");\nSystem.out.println(\"\u89e3\u6790\u6210\u529f\");\nSystem.out.println(array.toJSONString());\n}\n\nUploading fast.zip\u2026\npublic void stop(BundleContext context) throws Exception {\n}\n\n}\n`\n\u9644\u4ef6\uff1ahttps://share.weiyun.com/a633392bc598e3608d304e22f6167e4e\n. ",
    "shangmingchao": "\u55ef\uff0c\u597d\u7684\uff0c\u8c22\u8c22\u3002. ",
    "GYGG": "@wenshao \n\u4e0b\u9762\u4e24\u4e2a\u90fd\u8bd5\u8fc7\uff0c\u90fd\u6709\uff1a\ncompile 'com.alibaba:fastjson:1.2.28'\ncompile 'com.alibaba:fastjson:1.1.56.android'\ncompile 'com.alibaba:fastjson:1.2.31'\ncompile 'com.alibaba:fastjson:1.1.56.android'. ",
    "faryang-sh": "\u7f3a\u5c11\u4e86\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5728\u9700\u8981\u5e8f\u5217\u5316\u7684\u7c7b\u4e2d\u52a0\u5165\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5982\u679c\u7528\u4e86liquibase\uff0c\u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u52a0\u5165@NoArgsConstructor \u6ce8\u89e3\n. ",
    "Nevall": "\u89e3\u51b3\u529e\u6cd5\uff1a\n1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5185\u90e8\u7c7b\u5b9e\u73b0implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson\n. \u89e3\u51b3\u529e\u6cd5\uff1a\n1.\u4f7f\u7528static\u7c7b\n2.\u521b\u5efa\u4e00\u4e2ainterface IFastJson\uff0c\u5c06\u6b64\u7c7b\u7684\u5185\u90e8\u7c7b\u5b9e\u73b0implements IFastJson\n3.\u5728proguard.txt\u4e2d\u914d\u7f6e\n-keep class * implements com.xxxx.IFastJson  . ",
    "seefutureLee": "\u662f\u8fd9\u6837 \u5982\u679c\u6211\u7684bean\u6709\u4e86\u5e26\u53c2\u6570\u5e26\u6784\u9020\u65b9\u6cd5  \u90a3\u5fc5\u987b\u518d\u5199\u4e00\u4e2a\u65e0\u53c2\u6570\u5e26\u6784\u9020\u65b9\u6cd5 \u8fd9\u6837\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86. ",
    "bingxuebage": "mark. ",
    "l99xl": "\u679c\u7136\u5982\u6b64\u3002\u975e\u5e38\u611f\u8c22\uff01\n\u4e0d\u8fc7\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u53c8\u9047\u5230\u4e86\u65b0\u7684\u95ee\u9898\uff1a\nString text = \"{\\\"a\\\":{\\\"x\\\":\\\"y\\\"},\\\"b\\\":{\\\"x\\\":\\\"y\\\"}}\";\nJSONObject jsonObject = JSONObject.parseObject(text);\nSystem.out.println(jsonObject);\nString jsonpath = \"$..x\";\nString value=\"y2\";\nJSONPath.set(jsonObject, jsonpath, value);\nSystem.out.println(jsonObject);\n\u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\n\u6211\u671f\u671b\u7684\u7ed3\u679c\u662f\uff1a{\"a\":{\"x\":\"y2\"},\"b\":{\"x\":\"y2\"}}\n\u4f46\u5b9e\u9645\u7ed3\u679c\u5374\u662f\uff1a{\"a\":{\"x\":\"y\"},\"b\":{\"x\":\"y\"},\"x\":\"y2\"}\n\u540c\u6837\u7684\uff0ctext=\"{\\\"a\\\":{\\\"x\\\":[\\\"e1\\\",\\\"e2\\\"]},\\\"b\\\":{\\\"x\\\":[\\\"e1\\\",\\\"e2\\\"]}}\" \u65f6\uff0c\n\u6267\u884c\u7ed3\u679c\u4e3a{\"a\":{\"x\":[\"e1\",\"e2\"]},\"b\":{\"x\":[\"e1\",\"e2\"]},\"x\":\"y\"}\uff0c\u671f\u671b\u7684\u7ed3\u679c\u4f9d\u7136\u662f{\"a\":{\"x\":\"y2\"},\"b\":{\"x\":\"y2\"}}\n\u6240\u4ee5\uff0c\u8bf7\u95eeJSONPath\u662f\u5426\u6709\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u6211\u9884\u671f\u7684\u7ed3\u679c\uff0c\u5373\u6279\u91cf\u66ff\u6362json\u5bf9\u8c61\u53ca\u5176\u5b50\u8282\u70b9\u4e2d\u591a\u4e2a\u76f8\u540ckey\u7684\u503c\u3002\n------------------ Original ------------------\nFrom:  \"\u9ad8\u94c1\"notifications@github.com;\nDate:  Tue, May 2, 2017 11:52 PM\nTo:  \"alibaba/fastjson\"fastjson@noreply.github.com; \nCc:  \"l99xl\"lex@l99.com; \"Author\"author@noreply.github.com; \nSubject:  Re: [alibaba/fastjson] JSONPath \"deepScan\u5c5e\u6027\u8bbf\u95ee\uff0c\u4f8b\u5982$..name\" \u629b\u51fa\u5f02\u5e38 (#1177)\n\u6211\u521a\u6d4b\u8bd5\u8fc7\uff0c\u65b0\u7248\u672c\u662f\u597d\u7684\uff0c\u5347\u7ea7\u5230\u6700\u65b0\u7248\u5427 https://github.com/alibaba/fastjson/releases/tag/1.2.31\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "livnhn": "https://github.com/alibaba/fastjson/issues/260\n\u8c8c\u4f3c\u76ee\u524d\u65e0\u89e3~. \u5df2\u89e3\u51b3.\u91cd\u5199FastJsonHttpMessageConverter4. ",
    "okpoint": "\u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u5668\u5c31\u53ef\u4ee5\u4e86\u3002. ",
    "chyx1990": "\u6211\u4eec\u73b0\u5728\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u9996\u5148\u8bbe\u7f6eParserConfig.getGlobalInstance().setAutoTypeSupport(true);\n\u7136\u540e\u518d\u767d\u540d\u5355\u91cc\u6dfb\u52a0\u4fe1\u4efbfastjson.parser.autoTypeAccept=org.springframework.util.\n\u76ee\u524d\u6d4b\u8bd5\u770b\u8c8c\u4f3c\u6ca1\u5565\u95ee\u9898\uff0c\u60a8\u770b\u770b\u6211\u4eec\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6cd5\u6709\u6ca1\u6709\u95ee\u9898. ",
    "qixiaobo": "\u5e94\u8be5\u662f\u6709\u5faa\u73af\u5f15\u7528\u5427\uff0cSerializerFeature.DisableCircularReferenceDetect. \u53ef\u4ee5\u907f\u514djson\u653b\u51fb\uff0c\u9632\u6b62\u51fa\u73b0stackOverFlow\u5f02\u5e38 \u4e5f\u6709\u90e8\u5206json\u6846\u67b6\u652f\u6301\u7684. ",
    "liyebing": "\u5e8f\u5217\u5316\u51fa\u6765\u7684\u6587\u672c\u4e00\u5806$ref \u8fd8\u662f\u6807\u51c6\u7684JSON\u683c\u5f0f\u5417\uff1f \u80fd\u548c\u5176\u4ed6json\u5e8f\u5217\u5316\u6846\u67b6\u901a\u7528\u5417\uff1f. \u9075\u5b88JSON\u683c\u5f0f\u6807\u51c6\uff0c\u8fd9\u662f\u6700\u57fa\u672c\u7684\u8981\u6c42\u3002\u6700\u57fa\u672c\u7684\u90fd\u505a\u4e0d\u5230\uff0c\u8981\u6765\u5e72\u5565. \u62b1\u6b49\uff0c\u6211\u7684\u8bed\u6c14\u8fc7\u91cd\uff0c\u5f53\u65f6\u786e\u5b9e\u6b63\u5728\u6c14\u5934\u4e0a\uff0c\u8ddf\u4f5c\u8005\u9053\u6b49\u3002\u4e0d\u8fc7\u56e0\u4e3afastjson\u5bfc\u81f4\u7684\u7ebf\u4e0a\u95ee\u9898\u8fd9\u7684\u786e\u4e0d\u662f\u7b2c\u4e00\u6b21\u4e86\u30021.2.7\u7248\u672c\u5e8f\u5217\u5316\u4e22\u5931\u6570\u636e\u5c31\u9020\u6210\u8fc7\u4e00\u6b21\u4e25\u91cd\u7ebf\u4e0a\u6545\u969c\uff0c\u73b0\u5728\u6362\u6210jackson\u5de5\u4f5c\u91cf\u4ee3\u4ef7\u90fd\u975e\u5e38\u5927\uff0c\u56e0\u4e3afastjson\u5e8f\u5217\u5316\u51fa\u6765\u7684\u7ed3\u679c\u6709\u7684\u662f\u4e0d\u517c\u5bb9\u6807\u51c6json\u683c\u5f0f\u7684\u3002\n\u5173\u4e8e1.2.7\u4e22\u5931\u6570\u636e\u7684\u8bf4\u660e\u6211\u5355\u72ec\u8d34\u51fa\u6765\uff1a\n```java\npublic static void main(String[] args) {\n    List conditionGroupPreferentialPairs = Lists.newArrayList();\nConditionGroupModel cg = new ConditionGroupModel();\ncg.setConditionGroupDesc(\"condition group\");\nList<ConditionModel> conditionModels = Lists.newArrayList();\nConditionModel c1 = new ConditionModel();\nc1.setDesc(\"condition\");\n\nDiscountCardRangeConditionModel c2 = new DiscountCardRangeConditionModel();\nc2.setDiscountCardIdSet(Sets.newHashSet(1, 2));\nconditionModels.add(c1);\nconditionModels.add(c2);\ncg.setConditionModels(conditionModels);\n\n\nSettlePriceAndSellPricePreferentialModel pre = new SettlePriceAndSellPricePreferentialModel();\npre.setPreferentialDesc(\"preferential\");\npre.setPriceConfig(new SettlePriceAndSellPricePreferentialModel.PriceConfig());\n\n\nconditionGroupPreferentialPairs.add(ConditionGroupPreferentialPair.of(cg,pre));\nconditionGroupPreferentialPairs.add(ConditionGroupPreferentialPair.of(cg,pre));\n\nString json = JSONHelper.toJSONString(conditionGroupPreferentialPairs);\n\nJSONArray jsonArray = JSONArray.parseArray(json);\nfor(int i=0;i<jsonArray.size();i++){\n    JSONObject jsonObject =jsonArray.getJSONObject(i);\n    System.out.println(jsonObject.toJSONString());\n}\n\n}\n```\n\u6b63\u786e\u7684\u7ed3\u679c\u662f\n{\"preferentialModel\":{\"id\":0,\"preferentialType\":0,\"preferentialDesc\":\"preferential\",\"status\":0,\"priceConfig\":{}},\"conditionGroupModel\":{\"id\":0,\"conditionModels\":[{\"id\":0,\"desc\":\"condition\",\"status\":0,\"conditionType\":0},{\"id\":0,\"status\":0,\"conditionType\":0,\"discountCardIdSet\":[1,2]}],\"status\":0,\"preferentialId\":0,\"conditionGroupDesc\":\"condition group\"}}\n{\"preferentialModel\":{\"id\":0,\"preferentialType\":0,\"preferentialDesc\":\"preferential\",\"status\":0,\"priceConfig\":{}},\"conditionGroupModel\":{\"id\":0,\"conditionModels\":[{\"id\":0,\"desc\":\"condition\",\"status\":0,\"conditionType\":0},{\"id\":0,\"status\":0,\"conditionType\":0,\"discountCardIdSet\":[1,2]}],\"status\":0,\"preferentialId\":0,\"conditionGroupDesc\":\"condition group\"}}\n\u53ef\u662f1.2.7 \u7684\u7ed3\u679c\u5374\u662f\n{\"preferentialModel\":{\"id\":0,\"preferentialType\":0,\"preferentialDesc\":\"preferential\",\"status\":0,\"priceConfig\":{}},\"conditionGroupModel\":{\"id\":0,\"conditionModels\":[{\"id\":0,\"desc\":\"condition\",\"status\":0,\"conditionType\":0},{\"id\":0,\"status\":0,\"conditionType\":0,\"discountCardIdSet\":[1,2]}],\"status\":0,\"preferentialId\":0,\"conditionGroupDesc\":\"condition group\"}}\n{\"conditionGroupModel\":{\"id\":0,\"conditionModels\":[{\"id\":0,\"desc\":\"condition\",\"status\":0,\"conditionType\":0},{\"id\":0,\"status\":0,\"conditionType\":0,\"discountCardIdSet\":[1,2]}],\"status\":0,\"preferentialId\":0,\"conditionGroupDesc\":\"condition group\"}}\n\u7b2c\u4e8c\u884cjson\u7684preferentialModel\u6570\u636e\u90e8\u5206\u88ab\u9519\u8bef\u4e22\u5931\uff01\n. \u6b64\u5916\u5404\u79cd\u5c0f\u95ee\u9898\uff0c\u4e5f\u6709\u5f88\u591a\uff0c\u6709\u5e8f\u5217\u5316\u5904\u7406\u4e0d\u662fjson\u683c\u5f0f\u7684\uff0c\u6709\u5185\u5b58\u6cc4\u9732\u7684\uff0c\u6bd4\u5982\u56e0\u4e3a\u5b89\u5168\u95ee\u9898\u5347\u7ea7\u6700\u65b0\u7248\u4e4b\u540e\uff0c\u5bf9\u7a7a\u5b57\u7b26\u4e32\u7684\u5e8f\u5217\u5316\u4e4b\u540e\u5c45\u7136\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u90fd\u4e0d\u662fjson\u683c\u5f0f\u4e86\u3002\u5bfc\u81f4\u524d\u7aef\u89e3\u6790json\u51fa\u9519\u3002\u3002\u3002\u3002\u7b49\u7b49\u3002\u8fd9\u4e2a\u5e93\u786e\u5b9e\u95ee\u9898\u975e\u5e38\u591a\u3002. 1.2.12 \u7248\u672c\u4e22\u5931\u6570\u636e\u7684\u95ee\u9898\u4fee\u590d\u4e86\u3002. \u9700\u8981\u7c7b\u7ed3\u6784\u590d\u73b0\u95ee\u9898\u7684\u8bdd\uff0c\u53ef\u4ee5\u7559\u4e2a\u90ae\u7bb1\u7ed9\u6211. \u9700\u8981\u7c7b\u7ed3\u6784\u590d\u73b0\u95ee\u9898\u7684\u8bdd\uff0c\u53ef\u4ee5\u7559\u4e2a\u90ae\u7bb1\u7ed9\u6211. ",
    "Xiaobaxi": "wiki\u4e0a\u4e5f\u6709\u660e\u786e\u7684\u95ee\u9898\u63cf\u8ff0\u7684\uff0chttps://github.com/alibaba/fastjson/wiki/%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8. wiki\u4e0a\u4e5f\u6709\u660e\u786e\u7684\u95ee\u9898\u63cf\u8ff0\u7684\uff0chttps://github.com/alibaba/fastjson/wiki/%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8. ",
    "ohalo": "```\n@Entity\n@Table(name = \"sys_role\")\npublic class Role extends BaseEntity {\n/**\n * \n */\nprivate static final long       serialVersionUID = 820694530776191567L;\n\n// fields\nprivate java.lang.String        name;\nprivate java.lang.String        description;\n\n// collections\n@ManyToMany(mappedBy = \"roles\")\nprivate java.util.Set<Admin>    admins;\n\n@ManyToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)\n@JoinTable(name = \"sys_role_function\", joinColumns = { @JoinColumn(name = \"role_id\") }, inverseJoinColumns = { @JoinColumn(name = \"function_id\") })\nprivate java.util.Set<Function> functions;\n\n.\n@Entity\n@Table(name = \"sys_role\")\npublic class Role extends BaseEntity {\n/**\n * \n */\nprivate static final long       serialVersionUID = 820694530776191567L;\n\n// fields\nprivate java.lang.String        name;\nprivate java.lang.String        description;\n\n// collections\n@ManyToMany(mappedBy = \"roles\")\nprivate java.util.Set<Admin>    admins;\n\n@ManyToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)\n@JoinTable(name = \"sys_role_function\", joinColumns = { @JoinColumn(name = \"role_id\") }, inverseJoinColumns = { @JoinColumn(name = \"function_id\") })\nprivate java.util.Set<Function> functions;\n\n.\n@MappedSuperclass\n@EntityListeners({ BaseEntityListener.class })\npublic abstract class BaseEntity extends AbstractAuditable {\nprivate static final long serialVersionUID = -67188388306700736L;\nprivate String delFlag = DEL_FLAG_NORMAL; // \u5220\u9664\u6807\u8bb0\uff080\uff1a\u6b63\u5e38\uff1b1\uff1a\u5220\u9664\uff1b2\uff1a\u5ba1\u6838\uff09\n\npublic static final String FIELD_DEL_FLAG = \"delFlag\";\npublic static final String DEL_FLAG_NORMAL = \"0\";\npublic static final String DEL_FLAG_DELETE = \"1\";\npublic static final String DEL_FLAG_AUDIT = \"2\";\n\n\npublic void setId(Long id) {\n    super.setId(id);\n}\n\n@Length(min = 1, max = 1)\npublic String getDelFlag() {\n    return delFlag;\n}\n\npublic void setDelFlag(String delFlag) {\n    this.delFlag = delFlag;\n}\n\n}\n.\n@MappedSuperclass\n@EntityListeners({ BaseEntityListener.class })\npublic abstract class BaseEntity extends AbstractAuditable {\nprivate static final long serialVersionUID = -67188388306700736L;\nprivate String delFlag = DEL_FLAG_NORMAL; // \u5220\u9664\u6807\u8bb0\uff080\uff1a\u6b63\u5e38\uff1b1\uff1a\u5220\u9664\uff1b2\uff1a\u5ba1\u6838\uff09\n\npublic static final String FIELD_DEL_FLAG = \"delFlag\";\npublic static final String DEL_FLAG_NORMAL = \"0\";\npublic static final String DEL_FLAG_DELETE = \"1\";\npublic static final String DEL_FLAG_AUDIT = \"2\";\n\n\npublic void setId(Long id) {\n    super.setId(id);\n}\n\n@Length(min = 1, max = 1)\npublic String getDelFlag() {\n    return delFlag;\n}\n\npublic void setDelFlag(String delFlag) {\n    this.delFlag = delFlag;\n}\n\n}\n```. \u6211\u4e4b\u524d\u7528\u7684\u662fjdk7\uff0c\u4e4b\u540e\u6211\u6362\u6210jdk8\u5c31\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u662f\u4e0d\u662f\u5e94\u8be5\u770b\u770b\u4ec0\u4e48\u95ee\u9898. \u6211\u4e4b\u524d\u7528\u7684\u662fjdk7\uff0c\u4e4b\u540e\u6211\u6362\u6210jdk8\u5c31\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u662f\u4e0d\u662f\u5e94\u8be5\u770b\u770b\u4ec0\u4e48\u95ee\u9898. ",
    "copy202": "\u4f7f\u75281.2.31\u9047\u5230\u540c\u6837\u7684\u95ee\u9898. \u4f7f\u75281.2.31\u9047\u5230\u540c\u6837\u7684\u95ee\u9898. ",
    "lyh200731": "1.2.31\u7248\u672c \u9047\u5230\u540c\u6837\u95ee\u9898  \u6392\u67e5\u4e86\u4e0b\u5e94\u8be5\u662f\u4ece1.2.9\u7248\u672c\u4ee5\u540e\u90fd\u4f1a\u51fa\u73b0. 1.2.31\u7248\u672c \u9047\u5230\u540c\u6837\u95ee\u9898  \u6392\u67e5\u4e86\u4e0b\u5e94\u8be5\u662f\u4ece1.2.9\u7248\u672c\u4ee5\u540e\u90fd\u4f1a\u51fa\u73b0. ",
    "fkepesc": "\u6b64\u95ee\u9898\u786e\u5b9e\u5b58\u5728\n\u539f\u56e0\u662f JavaBeanInfo.java\u7684154\u884c\uff0c\nMethod[] methods = clazz.getMethods(); \njvm\u8fd4\u56deMethod\u5217\u8868\u4e0d\u4fdd\u8bc1\u4e00\u81f3\u9020\u6210\u3002\n\u539f\u7406\u662f\uff1ahttp://lovestblog.cn/blog/2016/11/02/class-getmethods/.  \u6b64\u95ee\u9898\u786e\u5b9e\u5b58\u5728\n\u539f\u56e0\u662f JavaBeanInfo.java\u7684154\u884c\uff0c\nMethod[] methods = clazz.getMethods(); \njvm\u8fd4\u56deMethod\u5217\u8868\u4e0d\u4fdd\u8bc1\u4e00\u81f3\u9020\u6210\u3002\n\u539f\u7406\u662f\uff1ahttp://lovestblog.cn/blog/2016/11/02/class-getmethods/. 1.2.32\u7248\u672c\u95ee\u9898\u4f9d\u7136\u5b58\u5728. 1.2.32\u7248\u672c\u95ee\u9898\u4f9d\u7136\u5b58\u5728. ",
    "SuperDubbo": "\u8fd9\u4e2a\u7c7b\u7684\u6b63\u5e38JSON\u503c\u5e94\u8be5\u662f\u8fd9\u6837{\"ids\":[1,2],\"name\":\"abc\"}\uff0c\u5982\u679c\u6545\u610f\u6362\u6210{\"ids\":[a1,b2],\"name\":\"abc\"}\u89e3\u6790\u8fd8\u662f\u62a5\u9519\u554a\uff0c\u6e29\u5c11\uff0c\u6211\u521a\u521a\u8bd5\u8fc7\u4e86{\"ids\":\"a1,a2\",\"name\":\"abc\"}\u8fd9\u6837\u7684\u8bdd\uff0c\u7ecf\u8fc7\u4f60\u4fee\u6539JavaBeanInfo\u7684\u5904\u7406\u662f\u53ef\u4ee5\u7684\uff0c\u73b0\u5728\u5c31\u662f\u8fd9\u79cd\u8fd8\u662f\u4e0d\u80fd\u6b63\u5e38\u8f6c\u6362{\"ids\":[a1,b2],\"name\":\"abc\"}\u7684. \u8fd9\u4e2a\u7c7b\u7684\u6b63\u5e38JSON\u503c\u5e94\u8be5\u662f\u8fd9\u6837{\"ids\":[1,2],\"name\":\"abc\"}\uff0c\u5982\u679c\u6545\u610f\u6362\u6210{\"ids\":[a1,b2],\"name\":\"abc\"}\u89e3\u6790\u8fd8\u662f\u62a5\u9519\u554a\uff0c\u6e29\u5c11\uff0c\u6211\u521a\u521a\u8bd5\u8fc7\u4e86{\"ids\":\"a1,a2\",\"name\":\"abc\"}\u8fd9\u6837\u7684\u8bdd\uff0c\u7ecf\u8fc7\u4f60\u4fee\u6539JavaBeanInfo\u7684\u5904\u7406\u662f\u53ef\u4ee5\u7684\uff0c\u73b0\u5728\u5c31\u662f\u8fd9\u79cd\u8fd8\u662f\u4e0d\u80fd\u6b63\u5e38\u8f6c\u6362{\"ids\":[a1,b2],\"name\":\"abc\"}\u7684.         Info info=new Info();\n        info.setName(\"abc\");\n        List list=new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        info.setIds(list);\n        System.out.println(JSON.toJSONString(info));\n        String str=\"{\\\"ids\\\":[a1,a2],\\\"name\\\":\\\"abc\\\"}\";\n//        String str = \"{\\\"ids\\\":\\\"a1,a2\\\",\\\"name\\\":\\\"abc\\\"}\";\n        Info info1=JSON.parseObject(str,Info.class);\n        System.out.println(info1);\n    }\n\"D:\\Program Files\\Java\\jdk1.8.0_101\\bin\\java\" \"-javaagent:D:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 2017.1\\lib\\idea_rt.jar=62507:D:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 2017.1\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\charsets.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\deploy.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\access-bridge-64.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\cldrdata.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\dnsns.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\jaccess.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\jfxrt.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\localedata.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\nashorn.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunec.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunjce_provider.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunmscapi.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunpkcs11.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\zipfs.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\javaws.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jce.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jfr.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jfxswt.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jsse.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\management-agent.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\plugin.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\resources.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\rt.jar;E:\\git_repositoryforplay\\test\\build\\classes\\main;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.5.3\\c37875ff66127d93e5f672708cb2dcc14c8232ab\\jackson-databind-2.5.3.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.alibaba\\fastjson\\1.2.31\\1ca964122c53f03f6fc3938b58c16d63b40490ab\\fastjson-1.2.31.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.5.0\\a2a55a3375bc1cef830ca426d68d2ea22961190e\\jackson-annotations-2.5.0.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.5.3\\a8b8a6dfc8a17890e4c7ff8aed810763d265b68b\\jackson-core-2.5.3.jar\" com.hz.json.bean.T\n{\"ids\":[1,2],\"name\":\"abc\"}\nException in thread \"main\" com.alibaba.fastjson.JSONException: syntax error, pos 9, json : {\"ids\":[a1,a2],\"name\":\"abc\"}\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1394)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:1185)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1328)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseExtra(DefaultJSONParser.java:1506)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:807)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:630)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1010)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_Info.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:208)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:350)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:254)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:467)\n    at com.hz.json.bean.T.main(T.java:22)\n.         Info info=new Info();\n        info.setName(\"abc\");\n        List list=new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        info.setIds(list);\n        System.out.println(JSON.toJSONString(info));\n        String str=\"{\\\"ids\\\":[a1,a2],\\\"name\\\":\\\"abc\\\"}\";\n//        String str = \"{\\\"ids\\\":\\\"a1,a2\\\",\\\"name\\\":\\\"abc\\\"}\";\n        Info info1=JSON.parseObject(str,Info.class);\n        System.out.println(info1);\n    }\n\"D:\\Program Files\\Java\\jdk1.8.0_101\\bin\\java\" \"-javaagent:D:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 2017.1\\lib\\idea_rt.jar=62507:D:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 2017.1\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\charsets.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\deploy.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\access-bridge-64.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\cldrdata.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\dnsns.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\jaccess.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\jfxrt.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\localedata.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\nashorn.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunec.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunjce_provider.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunmscapi.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\sunpkcs11.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\ext\\zipfs.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\javaws.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jce.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jfr.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jfxswt.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\jsse.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\management-agent.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\plugin.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\resources.jar;D:\\Program Files\\Java\\jdk1.8.0_101\\jre\\lib\\rt.jar;E:\\git_repositoryforplay\\test\\build\\classes\\main;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.5.3\\c37875ff66127d93e5f672708cb2dcc14c8232ab\\jackson-databind-2.5.3.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.alibaba\\fastjson\\1.2.31\\1ca964122c53f03f6fc3938b58c16d63b40490ab\\fastjson-1.2.31.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.5.0\\a2a55a3375bc1cef830ca426d68d2ea22961190e\\jackson-annotations-2.5.0.jar;D:\\gradlelib\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.5.3\\a8b8a6dfc8a17890e4c7ff8aed810763d265b68b\\jackson-core-2.5.3.jar\" com.hz.json.bean.T\n{\"ids\":[1,2],\"name\":\"abc\"}\nException in thread \"main\" com.alibaba.fastjson.JSONException: syntax error, pos 9, json : {\"ids\":[a1,a2],\"name\":\"abc\"}\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1394)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:1185)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1328)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseExtra(DefaultJSONParser.java:1506)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:807)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:630)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1010)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_Info.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:208)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:350)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:254)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:467)\n    at com.hz.json.bean.T.main(T.java:22)\n. @chenhongtu\n\u5bf9\uff0c\u662f\u6211\u641e\u9519\u4e86\uff0c\u6211\u8981\u6d4b\u8bd5\u7684\u662f{\"ids\":[\"a1\",\"b2\"],\"name\":\"abc\"}\uff0c\u8c22\u8c22. @chenhongtu\n\u5bf9\uff0c\u662f\u6211\u641e\u9519\u4e86\uff0c\u6211\u8981\u6d4b\u8bd5\u7684\u662f{\"ids\":[\"a1\",\"b2\"],\"name\":\"abc\"}\uff0c\u8c22\u8c22. ",
    "chenhongtu": "@SuperDubbo \n{\"ids\":[a1,b2],\"name\":\"abc\"}\u8fd9\u662fjson\u8bed\u6cd5\u9519\u8bef\u4e86\u5427\uff0c\u4f60\u8981\u6d4b\u8bd5\u7684\u662f{\"ids\":[\"a1\",\"b2\"],\"name\":\"abc\"}\u5427\n. @SuperDubbo \n{\"ids\":[a1,b2],\"name\":\"abc\"}\u8fd9\u662fjson\u8bed\u6cd5\u9519\u8bef\u4e86\u5427\uff0c\u4f60\u8981\u6d4b\u8bd5\u7684\u662f{\"ids\":[\"a1\",\"b2\"],\"name\":\"abc\"}\u5427\n. ",
    "vipcxj": "\u8fd9\u4e2amap\u53d8\u6210\u6570\u7ec4\u662f\u6545\u610f\u5199\u6210\u8fd9\u6837\u7684\uff0c\u8fd8\u662f\u5e8f\u5217\u5316\u540e\u81ea\u7136\u5c31\u53d8\u6210\u8fd9\u6837\u4e86\uff1f. \u8fd9\u4e2amap\u53d8\u6210\u6570\u7ec4\u662f\u6545\u610f\u5199\u6210\u8fd9\u6837\u7684\uff0c\u8fd8\u662f\u5e8f\u5217\u5316\u540e\u81ea\u7136\u5c31\u53d8\u6210\u8fd9\u6837\u4e86\uff1f. \u8bdd\u8bf4\u8fd9\u5b89\u5168\u8f6c\u4e49\u7684\u4f8b\u5b50\u662f\u4e0d\u662f\u6709\u95ee\u9898\uff0c\u5b8c\u5168\u6ca1\u770b\u51fa\u8f6c\u4e49\u524d\u548c\u8f6c\u4e49\u540e\u6709\u4ec0\u4e48\u533a\u522b~. \u53d1\u73b0\u4e0d\u662ffastjson\u7684\u95ee\u9898\uff0c\u6e90\u4ee3\u7801\u4e0b\u9762\u8fd8\u6709\u4e2aAssert\uff0c\u662f\u6d4b\u8bd5xml\u5e8f\u5217\u5316\u7684\uff0c\u51fa\u9519\u7684\u662f\u8fd9\u4e2aassert\uff0c\u6240\u4ee5\u8bf7\u5173\u95ed\u8fd9\u4e2aissure. \u6ca1\u627e\u5230close\u6309\u94ae. \u539f\u6765\u8fd9\u4e2a\u662fclose issure\u554a\uff0c\u6211\u4e00\u76f4\u4ee5\u4e3a\u662fclose \u8bc4\u8bba\uff0c\u548ccancel\u4e00\u4e2a\u4f5c\u7528. \u6ce8\u610f198\u884c\u7684processValue\u65b9\u6cd5\uff0c\u5728219\u4e2d\u5229\u7528beanContext.isJsonDirect()\u4f5c\u4e86\u5224\u65ad\uff0c\u5e76\u76f4\u63a5\u5904\u7406\u4e86\u5e26\u6709jsonDirect\u7684\u5b57\u6bb5\u3002\u7136\u540e\u4ece225\u884c\u5f00\u59cb\u624d\u5f00\u59cb\u4f7f\u7528\u5404\u79cdfilter\u5bf9\u5c5e\u6027\u503c\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u8fd9\u65f6\u5df2\u7ecf\u624d\u8fdf\u4e86\uff0c\u56e0\u4e3a\u5e26\u6709jsonDirect\u7684\u5c5e\u6027\u503c\u5df2\u7ecf\u5728219\u884c\u88ab\u5e8f\u5217\u5316\u4e3ajson object\u4e86\u3002. android\u73b0\u5728\u7528\u7684gradle\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u53ea\u6709android\u7528gradle\uff0c\u6240\u4ee5\u6211\u4e5f\u4e0d\u662f\u5f88\u719f\uff0c\u597d\u50cf\u6ca1profile\n\u5177\u4f53\u9047\u5230\u4e0d\u517c\u5bb9\u4e3b\u8981\u662fObjectSerializer\u548cObjectDeserializer\uff0c\u597d\u50cf\u6709\u6b21break change\uff0c\u6539\u4e86\u8fd9\u4fe9api\uff0c\u4f46android\u7248\u672c\u5374\u6ca1\u6539\uff0c\u4e8e\u662f\u5c31\u676f\u5177\u4e86\u3002\u4e0d\u77e5\u9053\u73b0\u5728\u6700\u65b0\u7248android\u7248\u672c\u6709\u6ca1\u6709\u66f4\u65b0\u3002\u6211\u89c9\u5f97\u628aandroid\u7248\u548cstandard\u4e2d\u516c\u5f00api\u90fd\u63d0\u53d6\u51fa\u6765\u5f04\u6210\u4e00\u4e2a\u5305\uff0c\u5e94\u8be5\u5c31\u4e0d\u5bb9\u6613\u9047\u5230\u8fd9\u79cd\u4e0d\u517c\u5bb9\u95ee\u9898\u4e86\u3002. android\u73b0\u5728\u7528\u7684gradle\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u53ea\u6709android\u7528gradle\uff0c\u6240\u4ee5\u6211\u4e5f\u4e0d\u662f\u5f88\u719f\uff0c\u597d\u50cf\u6ca1profile\n\u5177\u4f53\u9047\u5230\u4e0d\u517c\u5bb9\u4e3b\u8981\u662fObjectSerializer\u548cObjectDeserializer\uff0c\u597d\u50cf\u6709\u6b21break change\uff0c\u6539\u4e86\u8fd9\u4fe9api\uff0c\u4f46android\u7248\u672c\u5374\u6ca1\u6539\uff0c\u4e8e\u662f\u5c31\u676f\u5177\u4e86\u3002\u4e0d\u77e5\u9053\u73b0\u5728\u6700\u65b0\u7248android\u7248\u672c\u6709\u6ca1\u6709\u66f4\u65b0\u3002\u6211\u89c9\u5f97\u628aandroid\u7248\u548cstandard\u4e2d\u516c\u5f00api\u90fd\u63d0\u53d6\u51fa\u6765\u5f04\u6210\u4e00\u4e2a\u5305\uff0c\u5e94\u8be5\u5c31\u4e0d\u5bb9\u6613\u9047\u5230\u8fd9\u79cd\u4e0d\u517c\u5bb9\u95ee\u9898\u4e86\u3002. \u4e3e\u4e2a\u4f8b\u5b50\uff1a\nandroid 1.1.60\uff0c standard 1.2.35\n\u4e0a\u9762\u4e24\u4e2a\u7248\u672c\u4e2dParserConfig\u65b9\u6cd5\u5c31\u6709\u516c\u5f00api\u662f\u4e0d\u540c\u6b65\u7684\uff0c\u7c7b\u4f3c\u4f8b\u5b50\u4f30\u8ba1\u8fd8\u6709\u4e0d\u5c11\uff0c\u56e0\u4e3a\u7248\u672c\u66f4\u65b0\u5f88\u52e4\u5feb\uff0c\u5f88\u5bb9\u6613\u6807\u51c6\u7248\u6539\u53d8\u4e86\u4e00\u4e2a\u516c\u5f00\u7684\u7c7b\uff0c\u800candroid\u7248\u6ca1\u6539\u3002\u6240\u4ee5\u5efa\u8bae\u53ef\u4ee5\u5c06\u516c\u5f00api\u72ec\u7acb\u51fa\u6765\u505a\u6210\u516c\u5171\u5e93. \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684\u516c\u5f00\u65b9\u6cd5\u4e00\u822c\u81ea\u5b9a\u4e49\u7684\u4e0d\u591a\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3e\u4e2a\u66f4\u597d\u7684\u4f8b\u5b50\uff0c\nandroid 1.1.60 \uff0c standard 1.2.35\u3002\n\u4e0a\u9762\u662fObjectSerializer\u5728\u6807\u51c6\u7248\u548candroid\u7248\u4e2d\u7684\u6e90\u7801\u5730\u5740\uff0c\u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d\u76f4\u63a5\u5c31\u4e0d\u517c\u5bb9\u4e86\uff0c\u800c\u4e14\u8fd9\u4e2a\u63a5\u53e3\u5e94\u8be5\u662f\u7528\u5f97\u5f88\u591a\u7684~. \u8fd9\u663e\u7136\u4e0d\u662fbug\u554a\uff0c\u7b2c\u4e8c\u4e2a\u5bf9\u8c61\u7684f1\u786e\u5b9e\u548c\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u7684f1\u662f\u540c\u4e00\u4e2a\u5f15\u7528\u5427~ \u53ea\u8981\u4f60\u53cd\u5e8f\u5217\u5316\u652f\u6301\u89e3\u6790\u8fd9\u5f15\u7528\u5f62\u5f0f\uff0c\u90a3\u5c31\u4e0d\u662f\u95ee\u9898\u5427~ \u5982\u679c\u4f60\u5c31\u662f\u89c9\u5f97\u522b\u626d\uff0c\u5b8c\u5168\u53ef\u4ee5\u5728A\u7684\u6784\u9020\u51fd\u6570\u91cc\u4f7f\u7528\u5165\u53c2\u7684\u62f7\u8d1d\uff0c\u800c\u4e0d\u662f\u5f15\u7528. \u662f\u4e0d\u662f\u76f8\u540c\u5f15\u7528\uff0c\u90fd\u662f\u7528==\u5224\u65ad\u7684\u5427\uff0c\u800c\u4e14java\u6ca1\u6709\u64cd\u4f5c\u7b26\u91cd\u8f7d\uff0c\u6240\u4ee5\u8fd9\u70b9\u5e94\u8be5\u6ca1\u6709\u4f8b\u5916~. \u8fd9\u79cd\u975e\u72ec\u7acb\uff0c\u800c\u662f\u4f9d\u8d56\u67d0\u4e2a\u7279\u5b9a\u73af\u5883\u7684\u589e\u5f3a\u529f\u80fd\u5176\u5b9e\u5f04\u4e2a\u72ec\u7acb\u7684jar\u5305\u5c31\u597d\u4e86\uff0c\u9700\u8981\u5c31\u52a0\u4e0a\u4f9d\u8d56\uff0c\u4e0d\u9700\u8981\u5c31\u4e0d\u52a0~. \u5982\u679c\u53ef\u4ee5\u5f00\u653e\u4e00\u4e9bspi\u5c31\u66f4\u597d\u4e86\uff0c\u6700\u8fd1\u53d1\u73b0\u8fd9\u79cd\u53e4\u8001\u7684\u6807\u51c6\u62d3\u5c55\u65b9\u5f0f\u5176\u5b9e\u633a\u597d\u7528~ . \u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0cArrays.asList\u5f97\u5230\u7684List\u53ea\u662flist\u7684\u89c6\u56fe\uff0c\u6240\u4ee5\u57fa\u672c\u7279\u6027\u548c\u539f\u751f\u6570\u7ec4\u662f\u4e00\u6837\u7684\uff0c\u662f\u4e0d\u5141\u8bb8push\u548cremove\u7b49\u6539\u53d8size\u7684\u64cd\u4f5c\u7684\u3002\u5982\u679c\u6587\u6863\u91cc\u6ca1\u6709\u6ce8\u660e\u8fd9\u70b9\uff0c\u53c8\u4e0d\u770b\u6e90\u7801\uff0c\u53ea\u770b\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u4ee5\u4e3a\u8fd4\u56de\u7684\u662f\u666e\u901aList\uff0c\u5f88\u5bb9\u6613\u4e2d\u62db~. \u6211\u4e5f\u6709\u540c\u611f\uff0c\u9879\u76ee\u5f00\u53d1\u521d\u671f\uff0capi\u53d8\u52a8\u9891\u7e41\uff0c\u65b0\u7279\u6027\u589e\u52a0\u9891\u7387\u9ad8\uff0c\u5b8c\u5584javadoc\u5f88\u56f0\u96be\uff0c\u4f46\u73b0\u5728\u4e5f\u7b97\u662f\u8001\u5e93\u4e86\uff0c\u4e71\u4e03\u516b\u7cdf\u529f\u80fd\u6709\u597d\u591a\uff0c\u4f30\u8ba1\u9664\u4e86\u4f5c\u8005\uff0c\u8d21\u732e\u8005\u4e5f\u5f88\u96be\u8bf4\u6e05\u6240\u6709\u7279\u6027\u4e86\uff0c\u662f\u65f6\u5019\u8865\u5145\u4e0bjavadoc\u4e86. \u8fd9\u662f\u4f60\u770b\u9519\u4e86\u5427\uff0c\u6216\u8005\u6e90\u7801\u5728debug\u65f6\u884c\u6570\u5bf9\u5e94\u9519\u8bef\uff0c\u6216\u8005\u6e90\u7801\u548c\u5b9e\u9645jar\u5305\u4e0d\u5339\u914d~ \u5df2\u7ecfreturn\u4e86\u600e\u4e48\u53ef\u80fd\u7ee7\u7eed\u8d70\u4e0b\u53bb~. A\u6ca1\u5199getter\u65b9\u6cd5\u5427~. \u56e0\u4e3a\u8fd9\u79cd\u52a8\u6001\u6cdb\u578b\u662f\u62ff\u4e0d\u5230\u7684~ \u4f60\u4e00\u5b9a\u8981\u52a8\u6001\u53ef\u4ee5\u81ea\u5df1new\u4e00\u4e2aParameterizedTypeImpl\u5f53\u53c2\u6570\uff0c\u4e0d\u8fc7\u636e\u8bf4\u5982\u679c\u4e0d\u81ea\u5df1\u7f13\u5b58ParameterizedTypeImpl\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732. \u4ed6\u7684\u95ee\u9898\u662fT\u8fd9\u79cd\u4e0d\u786e\u5b9a\u7684\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u662f\u76f4\u63a5\u88ab\u5f53\u4f5cObject\u5bf9\u5f85\u7684\uff0c \u5982\u679c\u5199\u6210\uff0c \u5219T\u4e00\u5f8b\u88ab\u5f53\u4f5cX\u5bf9\u5f85\uff0c\u53cd\u6b63\u5c31\u662f\u5f53\u4e0d\u5230\u771f\u6b63\u7684T\u7684~\n. \u80af\u5b9a\u662f\u6d4b\u8bd5\u65f6\u7684mock\u6570\u636e\u5457~. \u5176\u5b9e\u7528Object\u5c31\u597d~ \u7136\u540e\u7528instance of\u5224\u65adJSONObject\u8fd8\u662fJSONArray. \u6211\u89c9\u5f97\u57fa\u7c7bprivate\u5b57\u6bb5\u4e0d\u4e00\u5b9a\u8981\u652f\u6301\uff0cprotect\u80af\u5b9a\u8981\u652f\u6301\u7684\uff0cpackage\u770b\u60c5\u51b5. \u5982\u679c\u4e0d\u52a0\u5224\u65ad\u76f4\u63a5\u652f\u6301\u7236\u7c7b\u7684private\u5b57\u6bb5\uff0c\u5f88\u5bb9\u6613\u5f15\u53d1\u65b0\u95ee\u9898\u5427\uff0c\u6bd5\u7adf\u7236\u7c7b\u7684private\u5b57\u6bb5\u5bf9\u5b50\u7c7b\u662f\u5b8c\u5168\u4e0d\u53ef\u89c1\u7684\uff0c\u6bd4\u5982\u5b50\u7c7b\u540c\u6837\u53ef\u4ee5\u58f0\u660e\u540c\u540d\u7684\u7236\u7c7b\u7684private\u5b57\u6bb5. \u9519\u8bef\u914d\u7f6e\u6bd4\u8d77\u5ffd\u7565\u9519\u8bef\uff0c\u66f4\u5e94\u8be5\u7ed9\u51fa\u66f4\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u5427~ \u4e0d\u7136\u8fd8\u4ee5\u4e3a\u914d\u7f6e\u662f\u5bf9\u7684\uff0c\u4ee5\u540e\u7ee7\u7eed\u9519\u4e0b\u53bb. \u8c8c\u4f3c\u662f\u4f18\u5148\u7ea7\u6ca1\u9ed8\u8ba4\u7684\u9ad8\uff0c\u6211\u867d\u7136\u7528\u90e8\u7f72\u63cf\u8ff0\u6587\u4ef6\u79fb\u9664\u4e86jackson\u7684\u4f9d\u8d56\uff0c\u4f46\u6ca1\u79fb\u9664jaxb\u7684\u4f9d\u8d56\uff0c\u6700\u540e\u8fd8\u662f\u9012\u5f52\u4f9d\u8d56\u5230jackson\u4e0a\u3002\u4f46\u6211\u662f\u53c8\u9700\u8981jaxb\u4e3a\u6211\u89e3\u6790xml\uff0c\u6ca1\u6cd5\u79fb\u9664\u4ed6\u554a~. @YoveeFisher \u8fd9\u4e2a\u63a5\u53e3\u8c8c\u4f3c\u505a\u4e0d\u5230\uff0c\u53ea\u80fd\u652f\u6301\u5355\u4e00\u7684json\u7684token\uff0c\u8981\u4e48string\uff0c\u8981\u4e48object\uff0c\u56e0\u4e3a\u63a5\u53e3\u91cc\u59da\u6307\u660e\u89e3\u6790\u54ea\u79cdtoken. \u6709\u4e2a\u95ee\u9898\u9700\u8981\u8bf7\u6559\u4e0b\uff0c\u73b0\u5728\u4e0d\u80fd\u9650\u5b9astream\u7684\u7ed3\u6784\u662f\u4ec0\u4e48\u6837\uff0c\u552f\u4e00\u80fd\u786e\u5b9a\u7684\u662f\u67d0\u4e2a\u76f4\u63a5\u7684\u5c5e\u6027\u662f\u6211\u8981\u7684\uff0c\u8fd9\u70b9\u4f60\u7ed9\u7684\u94fe\u63a5\u5e94\u8be5\u5c31\u80fd\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u5c5e\u6027\u6392\u5728\u5f88\u524d\u9762\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u662f\u5426\u4f1a\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u590d\u6742\u5e9e\u5927\u7684\u6211\u4e0d\u9700\u8981\u7684\u5c5e\u6027\u3002\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u79cd\u8bfb\u53d6\u662f\u76f4\u63a5\u6309\u957f\u5ea6\u8bd5\u63a2\u5f0f\u7684\uff0c\u6bd4\u5982\u5148\u8bfb\u53d61024\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u89e3\u6790\u4e0d\u51fa\u9700\u8981\u7684\u5c5e\u6027\uff0c\u76f4\u63a5\u62a5\u9519\u3002\u5982\u679c\u6309\u7167\u4f60\u7ed9\u7684\u8fde\u63a5\uff0c\u8fd9\u79cd\u63a7\u5236\u8c8c\u4f3c\u53ea\u80fd\u5728stream\u4e2d\u8fdb\u884c\u63a7\u5236\u3002\u6211\u5bf9\u4e8eInputStream.mask(n)\u548cInputStream.reset()\u51fd\u6570\u4e0d\u662f\u5f88\u4e86\u89e3\uff0c\u5982\u679cread\u4e86\u8d85\u8fc7n\u4e2a\u5b57\u8282\uff0c\u662f\u7ee7\u7eed\u8bfb\u4e0b\u53bb\uff0c\u53ea\u662f\u4e0d\u4fdd\u8bc1reset\u6210\u529f\uff0c\u8fd8\u662f\u4f1a\u76f4\u63a5\u62a5\u9519\u5462\uff1f. \u6839\u636e\u6e90\u7801\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u53ea\u4f1a\u8fd4\u56denull\uff0c\u5e76\u4e0d\u4f1a\u629b\u5f02\u5e38\uff0c\u6240\u4ee5\u4f60\u8fd9\u6539\u8fdb\u6ca1\u4ec0\u4e48\u610f\u4e49~ \u800c\u4e14\u5047\u8bbekey\u4e0d\u5b58\u5728\uff0cgetString\u4f1a\u629b\u5f02\u5e38\uff0c\u5982\u679c\u5c06\u5176\u6539\u6210\u4e0d\u629b\u5f02\u5e38\uff0c\u800c\u662f\u8fd4\u56denull\uff0c\u4f60\u4e24\u79cd\u5199\u6cd5\u538b\u6839\u5c31\u4e0d\u662f\u7b49\u4ef7\u7684~. \u901a\u8fc7getter\u6216setter\u65b9\u6cd5\uff0c\u751a\u81f3\u76f4\u63a5\u5728\u65e0\u53c2\u6784\u9020\u51fd\u6570\u91cc\u8d4b\u9ed8\u8ba4\u503c\u6216\u8005\u58f0\u660e\u53d8\u91cf\u6210\u5458\u65f6\u8d4b\u4e2a\u9ed8\u8ba4\u503c\u5c31\u53ef\u4ee5\u8fbe\u5230\u4f60\u9700\u8981\u7684\u6548\u679c\uff0c\u800c\u4e14\u660e\u663e\u6bd4\u8003\u4ec0\u4e48@JSONField\u9760\u8c31\uff0c\u6bd5\u7adf\u5c31\u7b97@JSONField\u652f\u6301\uff0c\u4e5f\u4f1a\u8ba9java bean\u548cjson\u7684\u503c\u4e0d\u4e00\u81f4. ",
    "Rozwel-Rozwel": "@wenshao  \u521a\u521a\u5927\u6982\u8c03\u8bd5\u4e86\u4e00\u4e0b\nhibernate\u7684\u7248\u672c\u662f5.2.4.Final\nTypeUtil\u4e2d\u7684\u65ad\u70b9\u4e00\u76f4\u6ca1\u6709\u8fdb\u53bb\uff08\u9664\u4e86\u521a\u5f00\u59cbConfig\u91cc\u8fdb\u4e86\u4e00\u4e0b\uff09\n\u5177\u4f53\u662f\u8fd9\u6837\u7684\u60c5\u51b5\nDepartment\u8fd9\u4e2a\u5b9e\u4f53\u4e2d\u6709FetchType.LAZY\u7684List Employee\n\u5f53spring.jpa.open-in-view\u4fdd\u6301\u9ed8\u8ba4\u7684true\u65f6\n\u5728FiledInfo.class\u4e2d\npublic Object get(Object javaObject) throws IllegalAccessException, InvocationTargetException {\n        if(this.method != null) {\n            Object value = this.method.invoke(javaObject, new Object[0]);\n            return value;\n        } else {\n            return this.field.get(javaObject);\n        }\n    }\ninvoke \u4e86getEmployees\u65b9\u6cd5 \u4ece\u800c\u52a0\u8f7d\u4e86lazy\u7684employees\n\u63a5\u4e0b\u6765\u6211\u5c06spring.jpa.open-in-view\u8bbe\u7f6e\u4e3afalse\n\u540c\u6837\u8fd0\u884c\u5230\u4e0a\u9762\u7684get(Object javaObject)\u65f6 \u6ca1\u6709\u52a0\u8f7dlazy\u7684\u6570\u636e\n\u6b64\u65f6return\u7684value\u662f\u4e00\u4e2aPersistentBag\n\u6700\u7ec8\u5728ListSerializer \u7684write\u65b9\u6cd5\u4e2d\u89e6\u53d1\u4e86LazyInitializationException\u3002\nif(object == null) {\n            out.writeNull(SerializerFeature.WriteNullListAsEmpty);\n        } else {\n            List list = (List)object;\n            if(list.size() == 0) {\n                out.append(\"[]\");\n            } else {\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\u5728\u8c03\u7528list.size()\u7684\u65f6\u5019\u629b\u51fa\u4e86LazyInitializationException\u3002\n. @wenshao  \u521a\u521a\u5927\u6982\u8c03\u8bd5\u4e86\u4e00\u4e0b\nhibernate\u7684\u7248\u672c\u662f5.2.4.Final\nTypeUtil\u4e2d\u7684\u65ad\u70b9\u4e00\u76f4\u6ca1\u6709\u8fdb\u53bb\uff08\u9664\u4e86\u521a\u5f00\u59cbConfig\u91cc\u8fdb\u4e86\u4e00\u4e0b\uff09\n\u5177\u4f53\u662f\u8fd9\u6837\u7684\u60c5\u51b5\nDepartment\u8fd9\u4e2a\u5b9e\u4f53\u4e2d\u6709FetchType.LAZY\u7684List Employee\n\u5f53spring.jpa.open-in-view\u4fdd\u6301\u9ed8\u8ba4\u7684true\u65f6\n\u5728FiledInfo.class\u4e2d\npublic Object get(Object javaObject) throws IllegalAccessException, InvocationTargetException {\n        if(this.method != null) {\n            Object value = this.method.invoke(javaObject, new Object[0]);\n            return value;\n        } else {\n            return this.field.get(javaObject);\n        }\n    }\ninvoke \u4e86getEmployees\u65b9\u6cd5 \u4ece\u800c\u52a0\u8f7d\u4e86lazy\u7684employees\n\u63a5\u4e0b\u6765\u6211\u5c06spring.jpa.open-in-view\u8bbe\u7f6e\u4e3afalse\n\u540c\u6837\u8fd0\u884c\u5230\u4e0a\u9762\u7684get(Object javaObject)\u65f6 \u6ca1\u6709\u52a0\u8f7dlazy\u7684\u6570\u636e\n\u6b64\u65f6return\u7684value\u662f\u4e00\u4e2aPersistentBag\n\u6700\u7ec8\u5728ListSerializer \u7684write\u65b9\u6cd5\u4e2d\u89e6\u53d1\u4e86LazyInitializationException\u3002\nif(object == null) {\n            out.writeNull(SerializerFeature.WriteNullListAsEmpty);\n        } else {\n            List list = (List)object;\n            if(list.size() == 0) {\n                out.append(\"[]\");\n            } else {\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\u5728\u8c03\u7528list.size()\u7684\u65f6\u5019\u629b\u51fa\u4e86LazyInitializationException\u3002\n. \u611f\u8c22 \u5df2\u7ecf\u6ca1\u6709\u95ee\u9898\u4e86\u3002. ",
    "yongsudehanzi": "\u597d\u7684\uff0c\u8c22\u8c22. ",
    "SchiehGuan": "\u901a\u8fc7\u8ffd\u8e2a\u6e90\u7801\uff0c\u53d1\u73b0 com.alibaba.fastjson.serializer.JavaBeanSerializer\u8be5\u7c7b\u4e0b\u7684\nwrite\u65b9\u6cd5\uff1a\n\u7b2c159\u884c\uff1a\nif ((this.beanInfo.features & SerializerFeature.WriteClassName.mask) != 0\n\u8be5\u5224\u65ad\u503c!=0,\u5f02\u5e38\u7c7b\u8be5\u5224\u65ad\u662ftrue,\u56e0\u6b64\u8fdb\u5165\u4e86writeClassName(serializer, object);\u65b9\u6cd5\n\u5982\u679c\u8fdb\u5165writeClassName\u65b9\u6cd5\uff0c\u5219\u4f1a\u628a{\"@type\":\"com.gd.base.result.type.BusinessException\"\u7ed9\u5199\u51fa\u6765\n\u5982\u679c\u662f\u666e\u901a\u7684bean,vo,po\uff0c\u8be5\u5224\u65ad\u4e3afalse\uff0c\u6682\u65f6\u672a\u7406\u89e3\u4e3a\u4f55\uff0c\u5f85\u6df1\u5165\u4e86\u89e3\uff0c\u6709\u5927\u795e\u77e5\u9053\u5e0c\u671b\u80fd\u6307\u5bfc\u4e00\u4e0b\uff0c\u8c22\u8c22. \u627e\u5230\u4e86com.alibaba.fastjson.serializer.SerializeConfig\u7c7b\u7684\n\u7b2c477\u884c\uff1a\nelse if (Throwable.class.isAssignableFrom(clazz)) {\n                SerializeBeanInfo beanInfo = TypeUtils.buildBeanInfo(clazz, null, propertyNamingStrategy);\n                beanInfo.features |= SerializerFeature.WriteClassName.mask;\n                put(clazz, new JavaBeanSerializer(beanInfo));\n\u6b64\u5904\u539f\u6765\u5c31\u5224\u65ad\u4e86\u7c7b\u578b\u5982\u679c\u662f\u5f02\u5e38\u7c7b\uff0c\u5219\u5c06\u539f\u672c\u662fbeanInfo.features=0\u503c\u8fdb\u884c\u4e86\u4f4d\u6216\u8fd0\u7b97\u8d4b\u503c\uff0c\u6240\u4ee5\u5bfc\u81f4\u6b64\u503c\u5927\u4e8e0\uff0c\u5bfc\u81f4\u8fdb\u5165writeClassName\u5199\u7c7b\u540d\n\u73b0\u5728\u95ee\u9898\u662f\u600e\u4e48\u8fbe\u5230\u65e2\u662f\u5f02\u5e38\u7c7b\uff0c\u53c8\u4e0d\u60f3\u5199\u7c7b\u540d\u8fdb\u5165\u5462\uff1f\u8fd9\u4e2a\u5e94\u8be5\u662f\u53ef\u914d\u7f6e\u7684. ",
    "hanelly": "android \u7248release\u5305\u89e3\u6790\u65f6\u95f4\u4e3a\u7a7a\uff1fdebug\u7248\u6b63\u5e38\u89e3\u6790. ",
    "Alvison": "\u6211\u4e5f\u662f\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u9664\u53bb\u5e38\u91cf\uff0cpackage\u7c7b\u7684\u5b57\u6bb5\u6570\u4e3a192\u4e2a\uff0c\u5176\u7236\u7c7b\u67097\u4e2a\u5b57\u6bb5\uff08\u5176\u4e2d\u4e24\u4e2a\u4e3a\u57fa\u672c\u7c7b\u578b\uff0cint,boolean\uff09\u3002\u5f53package \u589e\u52a0\u4e00\u4e2a\u5b57\u6bb5\u65f6\uff0c\u8fd8\u662f\u62a5\u9519\uff0c\u518d\u589e\u52a0\u4e00\u4e2a\u540e\u5c31\u6b63\u5e38\uff08\u6b64\u65f6\u4e3a194\u4e2a\u5b57\u6bb5\uff09. ",
    "gezhiwei8899": "@dongxingong @wenshao issue\u5bf9\u5e94\u4fee\u6539\u4ee3\u7801\u7684\u5730\u65b9\u53ef\u4ee5\u8d34\u51fa\u6765\u4e48\uff1f. ",
    "atoz0": "@kimmking \u8c22\u8c22\u4f60 \u6211\u5148\u6309\u7167\u4f60\u7684\u65b9\u6cd5\u5c1d\u8bd5\u4e00\u4e0b. ",
    "lihengming": "\u6211\u6309\u7167\u4f60\u7684\u4ee3\u7801\u8bd5\u4e86\u4e0b\uff0c\u6ca1\u95ee\u9898\u3002. \u73b0\u5728\u624b\u5934\u6ca1\u7535\u8111\uff0c\u660e\u5929\u5427\u3002. \nString str = \"[\"\u5e74\",\"\u6708\",\"\u65e5\"]\";\nList strings = JSON.parseArray(str, String.class);\n\u8fd9\u79cd\u60c5\u51b5\u7528\u8fd9\u4e2a\u4e0d\u5c31\u884c\u4e86\u4e48. \nString str = \"[\"\u5e74\",\"\u6708\",\"\u65e5\"]\";\nList strings = JSON.parseArray(str, String.class);\n\u8fd9\u79cd\u60c5\u51b5\u7528\u8fd9\u4e2a\u4e0d\u5c31\u884c\u4e86\u4e48. @smallsun848 \u914d\u7f6e FastJsonHttpMessageConverter\u3001FastJsonViewResponseBodyAdvice \u4e86\u5417\uff1f. ```java\n class Demo {\n            private String test;\n            private String _test_test;\n        public String get_test_test () {\n            return _test_test;\n        }\n\n        public void set_test_test (String _test_test) {\n            this._test_test = _test_test;\n        }\n\n        public String getTest () {\n            return test;\n        }\n\n        public void setTest (String test) {\n            this.test = test;\n        }\n    }\n    Demo demo = new Demo();\n    demo.setTest(\"TEST\");\n    demo.set_test_test(\"TEST_TEST\");\n    String text = JSON.toJSONString(demo);\n    Demo obj = JSON.parseObject(text, Demo.class);\n    Assert.assertEquals(\"TEST\",obj.getTest());\n    Assert.assertEquals(\"TEST_TEST\",obj.get_test_test());\n\n```\n\u6211\u6309\u7167\u4f60\u7684\u4f8b\u5b50\u8bd5\u4e86\u4e0b\uff0c\u6ca1\u6709\u95ee\u9898\uff0cfastjson 1.2.36. @fengyuchenglun  \u770b\u4e0b\u8fd9\u4e2a\uff1ahttp://blog.csdn.net/xichenguan/article/details/73741835. @ren-liang  https://github.com/alibaba/fastjson/wiki/%E5%9C%A8-Spring-%E4%B8%AD%E9%9B%86%E6%88%90-Fastjson   . \u63d0\u4f9b\u7684\u6709 FastJsonHttpMessageConverter \u3001GenericFastJsonRedisSerializer \u4f9b\u4f7f\u7528\u7684\uff0c\u914d\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e8f\u5217\u5316\u5668\u5c31\u53d8\u4e3a\u4f7f\u7528Fastjson\u4e86. good.. ",
    "tonychen007": "\u591a\u8a66\u5e7e\u6b21\uff0cdebug\u548crelease\u51fa\u73fe\u7684\u983b\u7387\u4e0d\u4e00\u6a23. ",
    "pingyanghu": "Json.toJsonString\u540e\u548cPOJO\u5b57\u6bb5\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u6709\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u5417. @wenshao . issues\u91cc\u597d\u591a\u7c7b\u4f3c\u7684\u8bc9\u6c42\u5462. ",
    "imyxiao": "@wenshao \u540c\u6837\u7684\u8bc9\u6c42\u3002\u3002. ",
    "cmshome": "\u8fd9\u4e2a\u5bf9\u8c61\u8f6c\u6210json\u4e4b\u540e\uff0c\u5c5e\u6027\u987a\u5e8f\u4e0d\u53d8\uff0c\u8fd9\u4e2a\u9700\u6c42\uff0cfastjson\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\nfastjson\u4e4b@JSONField\u6ce8\u89e3\u7684\u51e0\u4e2a\u7684\u4f7f\u7528\u8be6\u7ec6\u793a\u8303\n\u8fd9\u4e2a\u6ce8\u89e3\u91cc\u9762\u7684ordinal\u5c5e\u6027\uff0c\u53ef\u4ee5\u63a7\u5236\u8f6cjson\u5b57\u7b26\u4e32\u4e4b\u540e\u7684\u5404\u4e2a\u5c5e\u6027\u7684\u987a\u5e8f\u3002\u8981\u662f\u6ca1\u8bbe\u7f6e\u7684\u8bdd\uff0c\u9ed8\u8ba4\u5c31\u662f\u6309\u7167\u5c5e\u6027\u7684\u9996\u5b57\u6bcd\u53bb\u6392\u5e8f\u4e86\u3002\n\u8fd9\u4e2a\u7406\u8bba\uff0c\u5728\u697c\u4e0a\u7684\u95ee\u9898\u91cc\u9762\u53ef\u4ee5\u5f97\u5230\u5370\u8bc1\u3002\n\u8be6\u60c5\uff0c\u53ef\u4ee5\u53c2\u89c2\u4e00\u4e0b\uff0c\u6211\u5206\u4eab\u7684\u90a3\u4e2a\u94fe\u63a5\uff0c\u4eb2\u81ea\u6d4b\u8bd5\u4e86\u3002\u80af\u5b9a\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002. > Json.toJsonString\u540e\u548cPOJO\u5b57\u6bb5\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u6709\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u5417\n\n@wenshao \u540c\u6837\u7684\u8bc9\u6c42\u3002\u3002\n\n[fastjson\u4e4b@JSONField\u6ce8\u89e3\u7684\u51e0\u4e2a\u7684\u4f7f\u7528\u8be6\u7ec6\u793a\u8303]https://blog.csdn.net/qq_27093465/article/details/83381091). ",
    "yanquanyu": "@VictorZeng \u8fd9\u4e2a\u5c31\u662f\u5728\u6839\u636eSimplePropertyPreFilter\u8fdb\u884c\u7684\u6269\u5c55\u3002\n\u5982\u679c\u76f4\u63a5\u4f7f\u7528SimplePropertyPreFilter\u8fd9\u4e2a\u65b9\u5f0f\uff0c\u9700\u8981\u5728controller\u5c42\u8fd4\u56de\u5bf9\u8c61\u4e4b\u524d\u5148\u8f6c\u6362\u6210String\u7c7b\u578b\uff0c\u6216\u8005\u901a\u8fc7\u7c7b\u7ea7\u522b\u7684SerializeConfig\u6307\u5b9a\u9700\u8981\u8fd4\u56de\u7684\u5b57\u6bb5\uff0c\u5927\u5e08\u8fd4\u56de\u7684\u5b57\u6bb5\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u52a8\u6001\u6307\u5b9a\u8fd4\u56de\u7684\u5b57\u6bb5\u3002\n\u8fd9\u5757\u4fee\u6539\u7684\u4ee3\u7801\u662f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5305\u542b\u8fd4\u56de\u7684\u5b57\u6bb5\u6216\u8005\u52a8\u6001\u6392\u9664\u8fd4\u56de\u7684\u5b57\u6bb5\uff0c\u6bd4\u5982\u4e00\u4e2aPerson\u7c7b\uff0c\u91cc\u9762\u6709name\u5c5e\u6027\u548cage\u5c5e\u6027\uff0c\u901a\u8fc7\u6ce8\u89e3\uff0c\u6211\u53ef\u4ee5\u6307\u5b9a\u5728\u4e00\u4e2a\u65b9\u6cd5\u8fd4\u56de\u65f6\u53ea\u8fd4\u56dename\u53e6\u4e00\u4e2a\u65b9\u6cd5\u53ea\u8fd4\u56deage\u5c5e\u6027\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e0a\u9762\u8bf4\u7684\u65b9\u5f0f\u5e94\u8be5\u4e0d\u80fd\u5904\u7406\u3002. @VictorZeng  \u5c31\u662f\u60f3\u7b80\u5316\u4ee3\u7801\uff0c\u5c11\u5199PO,\u76f4\u63a5\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f53bean\u6309\u6307\u5b9a\u7684\u5b57\u6bb5\u8fd4\u56de\uff0c\u4e0d\u7528\u4e2d\u95f4\u5404\u5c42bean\u7684\u8f6c\u6362\u4e86\uff0c\u800c\u4e14\u4e5f\u4e0d\u66b4\u9732\u4e0d\u9700\u8981\u663e\u793a\u7684\u5b57\u6bb5\u4fe1\u606f\u3002. @VictorZeng \u5df2\u63d0\u4ea4testcase. ",
    "felayman": "@VictorZeng  \u6211\u4e5f\u6709\u7ecf\u5e38\u6709\u8fd9\u6837\u7684\u9700\u6c42,\u6839\u636e\u4e0d\u540c\u7684\u573a\u666f\uff0c\u6392\u9664\u6216\u8005\u5305\u62ec\u8fd4\u56de\u5bf9\u8c61\u7684\u5b57\u6bb5,\u6bd4\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801:\nprivate static JSONArray removeUselessUserInfo(JSONArray originJsonArr){\n        JSONArray destJsonArr = new JSONArray();\n        if (originJsonArr != null && !originJsonArr.isEmpty()){\n            for (int i = 0; i < originJsonArr.size(); i++) {\n                JSONObject userJson = originJsonArr.getJSONObject(i);\n                userJson.remove(\"phone\");\n                userJson.remove(\"about\");\n                userJson.remove(\"lastlogin\");\n                userJson.remove(\"lastLoginType\");\n                userJson.remove(\"lastLoginType\");\n                userJson.remove(\"email\");\n                userJson.remove(\"firstlogin\");\n                userJson.remove(\"coverUrl\");\n                userJson.remove(\"createdTime\");\n                userJson.remove(\"state\");\n                userJson.remove(\"equipmentType\");\n                userJson.remove(\"recommendTime\");\n                userJson.remove(\"contestCount\");\n                destJsonArr.add(userJson);\n            }\n        }\n        return destJsonArr;\n    }\n\u5176\u5b9e\u6211\u53ea\u662f\u60f3\u8981JSONObject\u4e2d\u7684\u4e24\u4e2a\u5b57\u6bb5,\u6bd4\u5982 userName,nickeName,\u6211\u4e0d\u5f97\u4e0d\u91c7\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u628aJSONObject\u4e0d\u9700\u8981\u7684key\u5168\u90e8remove\u6389,\u6216\u8005\u91c7\u7528\u5982\u4e0b\u7684\u65b9\u5f0f:\npublic static JSONArray removeUselessTribeContestInfo(JSONArray userArr) {\n        if (userArr != null  && !userArr.isEmpty()){\n            JSONArray destJsonArr = new JSONArray();\n            for (int i = 0; i < userArr.size(); i++) {\n                User User = JSON.toJavaObject(userArr.getJSONObject(i),User.class);\n                SimplePropertyPreFilter filter = new SimplePropertyPreFilter(User.class,\"userName\",\"nickeName\");\n                JSONObject jsonObject = JSON.parseObject(JSON.toJSONString(User,filter));\n                destJsonArr.add(jsonObject);\n            }\n            return destJsonArr;\n        }\n        return userArr;\n    }\n\u6211\u89c9\u5f97\u5982\u679c\u80fd\u591f\u5728JSONObject\u4e2d\u6269\u5c55\u4e00\u4e2aremoveExcept(String... properties),\u8fd9\u6837\u662f\u6700\u597d\u7684\u3002\n\u8fd9\u6837\u5f53\u9700\u8981\u8f6c\u6362\u7684pojo\u4e2d\u7684\u5b57\u6bb5\u5f88\u591a\u7684\u65f6\u5019,\u800c\u6211\u9700\u8981\u4fdd\u7559\u5f88\u591a\u5b57\u6bb5\u7684\u65f6\u5019,\u6211\u53ea\u9700\u8981\u7528remove(String),\u5982\u679c\u6211\u9700\u8981\u4fdd\u7559\u5f88\u5c11\u7684\u5b57\u6bb5\u7684\u65f6\u5019,\u6211\u53ea\u9700\u8981removeExcept(String... properties)\u5373\u53ef,\u8fd9\u6837\u4e0a\u8ff0\u7684\u4ee3\u7801\u5c31\u66f4\u4e3a\u7b80\u6d01\uff1a\npublic static JSONArray removeUselessTribeContestInfo(JSONArray userArr) {\n        if (userArr != null  && !userArr.isEmpty()){\n            JSONArray destJsonArr = new JSONArray();\n            for (int i = 0; i < contestArr.size(); i++) {\n               JSONObject userJson = originJsonArr.getJSONObject(i);\n               userJson.removeExcept(\"userName\",\"nickName\");\n                destJsonArr.add(jsonObject);\n            }\n            return destJsonArr;\n        }\n        return userArr;\n    }. @VictorZeng SimplePropertyPreFilter\u7684\u786e\u53ef\u4ee5,\u4f46\u662f\u603b\u611f\u89c9\u5f88\u602a,\u56e0\u4e3a\u9700\u8981\u8f6c\u6362\u4e24\u6b21,\u9700\u8981\u5148\u628aJSONObject\u8f6c\u6362\u6210pojo,\u7136\u540e\u518d\u628apojo\u8f6c\u5316\u6210JSONObject. \u867d\u7136\u6bcf\u6b21\u90fd\u662f\u8fd9\u6837\u89e3\u51b3\u7684\uff1a\nJSONObject jsonObject = contests.getJSONObject(i);\njsonObject.put(\"appUrl\",jsonObject.getJSONObject(\"webUrl\").clone());\n. ",
    "GaoXiuya": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0cjsonfast \u4e0d\u652f\u6301\u4e2d\u6587key\uff0c\u7ffb\u4e86\u4e0b\u4ee3\u7801\uff0c\u4ed6\u89e3\u6790\u7684\u65f6\u5019\u5bf9\u8def\u5f84\u505a\u4e86\u5224\u65ad\uff0ckey\u53ea\u80fd\u662f\u82f1\u6587\u548c\u4e0b\u5212\u7ebf\u548c$\u5f00\u5934\uff0c\u53ea\u80fd\u6362\u4e00\u79cd\u5199\u6cd5\u4e86. ",
    "IEKR": "\u53ef\u662f1.1.8\u7684\u7248\u672c\u5c31\u662f\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684.\u65b0\u7248\u672c\u91cc\u9762\u505a\u6cd5\u4e0d\u518d\u662f\u4e00\u6837\u7684\u4e86\u5417?\u6709\u6ca1\u6709\u522b\u7684\u529e\u6cd5,\u4e0d\u5728\u81ea\u5df1\u624b\u52a8\u904d\u5386\u7684\u60c5\u51b5\u4e0b,\u505a\u5230\u5d4c\u5957\u7684\u4e5f\u662f\u6309treemap\u90a3\u6837\u81ea\u7136\u6392\u5e8f\u7684?. \u53ef\u662f1.1.8\u7684\u7248\u672c\u5c31\u662f\u6309\u7167\u5347\u5e8f\u6392\u5e8f\u7684.\u65b0\u7248\u672c\u91cc\u9762\u505a\u6cd5\u4e0d\u518d\u662f\u4e00\u6837\u7684\u4e86\u5417?\u6709\u6ca1\u6709\u522b\u7684\u529e\u6cd5,\u4e0d\u5728\u81ea\u5df1\u624b\u52a8\u904d\u5386\u7684\u60c5\u51b5\u4e0b,\u505a\u5230\u5d4c\u5957\u7684\u4e5f\u662f\u6309treemap\u90a3\u6837\u81ea\u7136\u6392\u5e8f\u7684?. \u611f\u8c22\u5404\u4f4d\u5927\u795e\u56de\u7b54,\u4f46\u662f\u6211\u8bd5\u4e86\u4e0b,\u9488\u5bf9\u6211\u4e0a\u9762\u90a3\u4e2amap\u91cc\u9762\u5d4c\u5957list\u7684\u4f8b\u5b50,\u8fd8\u662f\u4e0d\u884c,\u6ca1\u80fd\u505a\u5230\u5d4c\u5957\u7684list\u7684key\u6309\u7167treemap\u7684\u81ea\u7136\u987a\u5e8f\u6392\u5e8f. \u611f\u8c22\u5404\u4f4d\u5927\u795e\u56de\u7b54,\u4f46\u662f\u6211\u8bd5\u4e86\u4e0b,\u9488\u5bf9\u6211\u4e0a\u9762\u90a3\u4e2amap\u91cc\u9762\u5d4c\u5957list\u7684\u4f8b\u5b50,\u8fd8\u662f\u4e0d\u884c,\u6ca1\u80fd\u505a\u5230\u5d4c\u5957\u7684list\u7684key\u6309\u7167treemap\u7684\u81ea\u7136\u987a\u5e8f\u6392\u5e8f. \u8fd9\u662f\u6211\u7684\u4ee3\u7801System.out.println(\"1:\" + responseDataMap);\n        String str = JSONObject.toJSONString(responseDataMap, SerializerFeature.MapSortField);\n        System.out.println(\"2:\" + str);\n        responseDataMap = JSON.parseObject(str,new TypeReference<TreeMap<String, String>>() {});\u6253\u5370\u7ed3\u679c\u4e3a1:{cardlist=[{\"merchantaccount\":\"123456789\",\"cardtype\":2,\"card_last\":\"0564\",\"phone\":\"123\",\"card_top\":\"625976\",\"bankcode\":\"CEB\",\"bindvalidthru\":2145888000,\"card_name\":\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\",\"bindid\":\"88772981\"},{\"merchantaccount\":\"123456789\",\"cardtype\":1,\"card_last\":\"9990\",\"phone\":\"123\",\"card_top\":\"621792\",\"bankcode\":\"SPDB\",\"bindvalidthru\":2145888000,\"card_name\":\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\",\"bindid\":\"89971803\"}], identityid=10002223, identitytype=2, merchantaccount=123456789}\n2:{\"cardlist\":\"[{\\\"merchantaccount\\\":\\\"123456789\\\",\\\"cardtype\\\":2,\\\"card_last\\\":\\\"0564\\\",\\\"phone\\\":\\\"123\\\",\\\"card_top\\\":\\\"625976\\\",\\\"bankcode\\\":\\\"CEB\\\",\\\"bindvalidthru\\\":2145888000,\\\"card_name\\\":\\\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\\\",\\\"bindid\\\":\\\"88772981\\\"},{\\\"merchantaccount\\\":\\\"123456789\\\",\\\"cardtype\\\":1,\\\"card_last\\\":\\\"9990\\\",\\\"phone\\\":\\\"123\\\",\\\"card_top\\\":\\\"621792\\\",\\\"bankcode\\\":\\\"SPDB\\\",\\\"bindvalidthru\\\":2145888000,\\\"card_name\\\":\\\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\\\",\\\"bindid\\\":\\\"89971803\\\"}]\",\"identityid\":\"10002223\",\"identitytype\":\"2\",\"merchantaccount\":\"123456789\"}\n\u5176\u4e2d,\u7b2c\u4e00\u4e2a\u6253\u5370\u7684responseDataMap,\u5c31\u662f\u4e00\u4e2amap\u4e2d\u67d0\u4e2akey\u5d4c\u5957\u4e86\u4e00\u4e2alist\u7684.\u800c\u6b63\u662f\u8fd9\u4e2alist,\u6ca1\u6709\u80fd\u591f\u6309\u7167key\u7684\u5347\u5e8f\u6392\u5217,\u4f7f\u7528 @wenshao \u7684\u65b9\u6cd5\u628amap\u8f6c\u6210string\u7684\u65f6\u5019\u4e5f\u6ca1\u80fd\u628a\u5d4c\u5957\u7684\u503c\u7ed9\u6392\u5e8f.\u7136\u540e\u518d\u8f6c\u56detreemap\u7684\u65f6\u5019\u4e00\u6837,\u4e0d\u884c.\u800c1.1.8\u7684\u7248\u672c\u65f6\u5019,\u53ea\u8981JSON.parseObject(str,new TypeReference<TreeMap<String, String>>()\u8fd9\u4e00\u6b65,\u5c31\u53ef\u4ee5\u505a\u5230\u5305\u62ec\u5d4c\u5957\u7684\u503c\u4e5f\u6392\u5e8f\u4e86.\u65b0\u7248\u672c\u6ca1\u6709\u8fd9\u6837\u7684\u8bbe\u8ba1,\u662f\u8003\u8651\u5230\u6027\u80fd\u95ee\u9898\u5417?\u6211\u7528\u7684\u65b0\u7248\u662f1.2.29\u7248\u672c. \u8fd9\u662f\u6211\u7684\u4ee3\u7801System.out.println(\"1:\" + responseDataMap);\n        String str = JSONObject.toJSONString(responseDataMap, SerializerFeature.MapSortField);\n        System.out.println(\"2:\" + str);\n        responseDataMap = JSON.parseObject(str,new TypeReference<TreeMap<String, String>>() {});\u6253\u5370\u7ed3\u679c\u4e3a1:{cardlist=[{\"merchantaccount\":\"123456789\",\"cardtype\":2,\"card_last\":\"0564\",\"phone\":\"123\",\"card_top\":\"625976\",\"bankcode\":\"CEB\",\"bindvalidthru\":2145888000,\"card_name\":\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\",\"bindid\":\"88772981\"},{\"merchantaccount\":\"123456789\",\"cardtype\":1,\"card_last\":\"9990\",\"phone\":\"123\",\"card_top\":\"621792\",\"bankcode\":\"SPDB\",\"bindvalidthru\":2145888000,\"card_name\":\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\",\"bindid\":\"89971803\"}], identityid=10002223, identitytype=2, merchantaccount=123456789}\n2:{\"cardlist\":\"[{\\\"merchantaccount\\\":\\\"123456789\\\",\\\"cardtype\\\":2,\\\"card_last\\\":\\\"0564\\\",\\\"phone\\\":\\\"123\\\",\\\"card_top\\\":\\\"625976\\\",\\\"bankcode\\\":\\\"CEB\\\",\\\"bindvalidthru\\\":2145888000,\\\"card_name\\\":\\\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\\\",\\\"bindid\\\":\\\"88772981\\\"},{\\\"merchantaccount\\\":\\\"123456789\\\",\\\"cardtype\\\":1,\\\"card_last\\\":\\\"9990\\\",\\\"phone\\\":\\\"123\\\",\\\"card_top\\\":\\\"621792\\\",\\\"bankcode\\\":\\\"SPDB\\\",\\\"bindvalidthru\\\":2145888000,\\\"card_name\\\":\\\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\\\",\\\"bindid\\\":\\\"89971803\\\"}]\",\"identityid\":\"10002223\",\"identitytype\":\"2\",\"merchantaccount\":\"123456789\"}\n\u5176\u4e2d,\u7b2c\u4e00\u4e2a\u6253\u5370\u7684responseDataMap,\u5c31\u662f\u4e00\u4e2amap\u4e2d\u67d0\u4e2akey\u5d4c\u5957\u4e86\u4e00\u4e2alist\u7684.\u800c\u6b63\u662f\u8fd9\u4e2alist,\u6ca1\u6709\u80fd\u591f\u6309\u7167key\u7684\u5347\u5e8f\u6392\u5217,\u4f7f\u7528 @wenshao \u7684\u65b9\u6cd5\u628amap\u8f6c\u6210string\u7684\u65f6\u5019\u4e5f\u6ca1\u80fd\u628a\u5d4c\u5957\u7684\u503c\u7ed9\u6392\u5e8f.\u7136\u540e\u518d\u8f6c\u56detreemap\u7684\u65f6\u5019\u4e00\u6837,\u4e0d\u884c.\u800c1.1.8\u7684\u7248\u672c\u65f6\u5019,\u53ea\u8981JSON.parseObject(str,new TypeReference<TreeMap<String, String>>()\u8fd9\u4e00\u6b65,\u5c31\u53ef\u4ee5\u505a\u5230\u5305\u62ec\u5d4c\u5957\u7684\u503c\u4e5f\u6392\u5e8f\u4e86.\u65b0\u7248\u672c\u6ca1\u6709\u8fd9\u6837\u7684\u8bbe\u8ba1,\u662f\u8003\u8651\u5230\u6027\u80fd\u95ee\u9898\u5417?\u6211\u7528\u7684\u65b0\u7248\u662f1.2.29\u7248\u672c. \u540c\u6837\u7684\u6570\u636e,\u4ee5\u4e0b\u662f\u75281.1.8\u7248\u672c\u8dd1\u8fd9\u6bb5\u4ee3\u7801JSON.parseObject(str,new TypeReference<TreeMap<String, String>>()\u7684\u7ed3\u679c{cardlist=[{\"bankcode\":\"CEB\",\"bindid\":\"88772981\",\"bindvalidthru\":2145888000,\"card_last\":\"0564\",\"card_name\":\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\",\"card_top\":\"625976\",\"cardtype\":2,\"merchantaccount\":\"123456789\",\"phone\":\"123\"},{\"bankcode\":\"SPDB\",\"bindid\":\"89971803\",\"bindvalidthru\":2145888000,\"card_last\":\"9990\",\"card_name\":\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\",\"card_top\":\"621792\",\"cardtype\":1,\"merchantaccount\":\"123456789\",\"phone\":\"123\"}],identityid=10002223, identitytype=2, merchantaccount=123456789}. \u540c\u6837\u7684\u6570\u636e,\u4ee5\u4e0b\u662f\u75281.1.8\u7248\u672c\u8dd1\u8fd9\u6bb5\u4ee3\u7801JSON.parseObject(str,new TypeReference<TreeMap<String, String>>()\u7684\u7ed3\u679c{cardlist=[{\"bankcode\":\"CEB\",\"bindid\":\"88772981\",\"bindvalidthru\":2145888000,\"card_last\":\"0564\",\"card_name\":\"\u5149\u5927\u94f6\u884c\u4fe1\u7528\u5361\",\"card_top\":\"625976\",\"cardtype\":2,\"merchantaccount\":\"123456789\",\"phone\":\"123\"},{\"bankcode\":\"SPDB\",\"bindid\":\"89971803\",\"bindvalidthru\":2145888000,\"card_last\":\"9990\",\"card_name\":\"\u6d66\u53d1\u94f6\u884c\u50a8\u84c4\u5361\",\"card_top\":\"621792\",\"cardtype\":1,\"merchantaccount\":\"123456789\",\"phone\":\"123\"}],identityid=10002223, identitytype=2, merchantaccount=123456789}. ",
    "wenjuanhenxing": "\u5982\u679c\u60f3\u6309\u7167\u539f\u4e32\u7684\u987a\u5e8f\u8f6c\u4e3aMap\u53ef\u4ee5\u7528 JSON.parseObject(jsonStr, new TypeReference<Map<String, Object>>(){}, Feature.OrderedField); , 1.2.29\u7248\u672c\u652f\u6301\u8be5\u64cd\u4f5c. ",
    "zxw0558": "\u589e\u52a0\u6d4b\u8bd5\u7528\u4f8b\n\u5b9a\u4e49bean:\npublic class TestBean {\n    private String name;\n    private Character sex;\n    private Integer age;\n    private Double money;\nget(),set()...\n}\n\u6d4b\u8bd5\u8f6c\u6362\uff1a\n`\nTestBean tb = new TestBean();\n        tb.setName(\"zs\");\n        tb.setSex('M');\n        tb.setAge(20);\n        tb.setMoney(100.5d);\n    try {\n        String jsonStr = JSON.toJSONString(tb);\n        System.out.println(jsonStr);\n\n        TestBean tb2 = JSON.parseObject(jsonStr).toJavaObject(tb.getClass());\n        System.out.println(tb2.toString());\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n`\n\u8f93\u51fa\uff1a\n{\"age\":20,\"money\":100.5,\"name\":\"zs\",\"sex\":\"M\"}\ncom.alibaba.fastjson.JSONException: can not cast to : java.lang.Character\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1052)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:689)\n    at com.alibaba.fastjson.JSON.toJavaObject(JSON.java:961)\n    at yxerp.Test.main(Test.java:23)\nCaused by: com.alibaba.fastjson.JSONException: can not cast to : java.lang.Character\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:818)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:868)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:1010)\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1050)\n    ... 3 more. ",
    "smile2014": "\u597d\u96be\u91cd\u73b0\uff0c\u5076\u5c14\u4f1a\u51fa\u73b0\u51e0\u5355\u3002\u3002\nJSONArray jsonarray = zcckd.getJSONArray(\"WAR_ZCCKDMX\");\n        int iCount = jsonarray.size();\n        for (int i = 0; i < iCount; i++) {\n            insertZCCKDMX(jsonarray.getJSONObject(i), zcckd);\n        }\n  jsonarray = zcckd.getJSONArray(\"WAR_ZCCKDPC\");\n        iCount = jsonarray.size();\n        for (int i = 0; i < iCount; i++) {\n            // \u5199\u8f6c\u50a8\u51fa\u5e93\u5355\u6279\u6b21\u8868\u6570\u636e\n            insertZCCKDPC(jsonarray.getJSONObject(i), zcckd);\n }\n\u8fd9\u79cd\u5199\u6cd5\u5e94\u8be5\u6ca1\u4ec0\u4e48\u95ee\u9898\u5427. \u6ca1\u6709\u4efb\u4f55\u51fa\u9519\uff0c\u8981\u662f\u6709\u9519\u8bef\u5c31\u597d\u529e\u4e86\u3002\u3002\u3002\u6211\u81ea\u5df1\u52a0\u903b\u8f91\u63a7\u5236\uff0c\u56de\u5934\u770b\u770b\u662f\u5426\u80fd\u91cd\u73b0\u4e86\u3002\u8c22\u8c22\u4e86. \u95ee\u9898\u8ddf\u5230\u4e86\uff0c\u8c22\u8c22\u4e86\uff0c. \u914d\u7f6eFeatures\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5728\u4ee3\u7801\u5757\u91cc\u88ab\u6807\u8bc6\u6210\u8fc7\u671f\u4e86. for (int i = 0; i < iCount; i++) {\nmxXSZJE = mxXSZJE + mxArray.getJSONObject(i).getDouble(\"XSDJ\") * mxArray.getJSONObject(i).getDouble(\"XSJS\");\nmxZKZJE = mxZKZJE + mxArray.getJSONObject(i).getDouble(\"ZKJE\");\ninsertXSDDMX(mxArray.getJSONObject(i),flag,sDJLXID, sDJLXMC, sYDDH,sJLBH,sGSID,sBZ);\n}\ninsertXSDDMX \u4ee3\u7801\u5757\u5982\u4e0b\ndouble dXSDJ = xsddmx.getDoubleValue(\"XSDJ\");\ndouble dXSJS = xsddmx.getDouble(\"XSJS\");\ndouble dXSJE = dXSJS * dXSDJ;\nxsddmx.put(\"XSJE\", dXSJE);\n\u8fd9\u4e2a\u6211\u6700\u540e\u62ff\u5230\u7684XSJE\u662f0,\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u9020\u6210\u8fd9\u6837\u963f\uff0c\u6211\u5199\u4e00\u4e2a\u660e\u7ec6\u8868\u91cc10\u884c\u6570\u636e\u5176\u4e2d\u4e00\u884c\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u6708\u5c31\u6709\u90a3\u4e2a\u51e0\u5355\u8fd9\u6837. ",
    "VesperHan": "\u5c31\u662f\u53cd\u659c\u6760 \\ \u683c\u5f0f\u5316\u4e4b\u540e\u7684json \u51fa\u73b0\u4e86\u8f6c\u4e49\u5b57\u7b26,\u8fd9\u4e2a\u8f6c\u4e49\u5b57\u7b26\u5982\u4f55\u80fd\u8fc7\u6ee4\u6389. ",
    "Derek52722": "\u6211\u731c\u697c\u4e3b\u8bf4\u7684\u662f\u8fd9\u4e2a\u610f\u601d\uff1f\nController\uff1a\njava\n@RestController\npublic class testController {\n    public String getStudent() {\n        // get student obj from db\n        return JSONUtils.obj2String(student);\n    }\n}\n\u540c\u65f6\uff0c\u52a0\u5165\u4e86WebMvcConfigurer\njava\n@Configuration\npublic class WebMvcConfigurer extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        converters.add(converter);\n    }\n}\n\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u524d\u7aef\u663e\u793a\u7684\u6570\u636e\u5c31\u53d8\u6210\u4e86\njson\n\"{\\\"gender\\\":0,\\\"id\\\":3,\\\"password\\\":\\\"1234\\\",\\\"student_name\\\":\\\"penny\\\"}\"\n\u4f46\u662f\uff0c\u5e0c\u671b\u8fd4\u56de\u7684\u6570\u636e\u5e94\u8be5\u662f\njson\n{\"gender\":0,\"id\":3,\"password\":\"1234\",\"student_name\":\"penny\"}. ",
    "Log4chen": "@wenshao \u5982\u679cmap\u4e2d\u7684value\u503c\u672c\u8eab\u662fjson\u5b57\u7b26\u4e32\uff0c\u8fd8\u53ef\u4ee5\u53bb\u9664\u8f6c\u4e49\u5b57\u7b26\u5417\uff1f\n    JSONObject result = new JSONObject();\n    result.put(\"resultCode\", \"0\");\n\n    Map<String, String> map = new HashMap<>();  // \u7956\u4f20\u4ee3\u7801\u4e2d\u8d2f\u7a7f\u524d\u540e\u7684map\u3002\u3002\u3002\n    map.put(\"xxx\", \"1\");\n\n    JSONObject person = new JSONObject();\n    person.put(\"name\", \"zhangsan\");\n    person.put(\"age\", \"20\");\n\n    map.put(\"person\", person.toJSONString());\n\n    result.put(\"params\", map);\n\n    System.out.println(result);\n    // {\"resultCode\":\"0\",\"params\":{\"person\":\"{\\\"name\\\":\\\"zhangsan\\\",\\\"age\\\":\\\"20\\\"}\",\"xxx\":\"1\"}}\n\n\n  \u81ea\u95ee\u81ea\u7b54\uff1a\u628a\u6240\u6709\u7684Map<String,String> \u6539\u4e3a Map<String,Object>\uff0c\u7136\u540e\u76f4\u63a5put  JSONObject  map.put(\"person\", person);\n\n. ",
    "uyong": "ParamEntry.txt\nRunParams.txt\nTestCase.txt\n\u65e0\u6cd5\u4e0a\u4f20\u538b\u7f29\u5305\uff0c\u53ea\u80fd\u4e0a\u4f20txt\u4e86. \u6240\u4ee5\u76ee\u524dbean\u4e2d\u7684\u5b57\u6bb5\u53ea\u80fd\u662fpublic\u7684\u624d\u884c\u5417?. ",
    "RojerAlone": "\u8bd5\u4e86\u4e0b\uff0cbean \u4e2d\u7684\u57fa\u672c\u7c7b\u578b\u3001String\u3001\u679a\u4e3e\u662f\u53ef\u4ee5\u5728 private \u4fee\u9970\u4e0b\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\uff0c\u4f46\u662f Map \u53ea\u6709 public \u4fee\u9970\u624d\u53ef\u4ee5. ",
    "JeremyZheng": "Hi kimmking,\nThanks for your response.\n\u6211\u8fd9\u8fb9\u662f\u4f7f\u7528\u4e86SpringMVC\u6846\u67b6controller\u8fd4\u56de\u6570\u636e\u65f6\u53d1\u751f\u4e86issue\u6240\u8ff0\u60c5\u51b5\uff0c\u6709\u5982\u4e0b\u914d\u7f6e\uff0c\u662f\u5426\u4f1a\u6709\u5f71\u54cd\u5462\uff1f\uff1a\nxml\n<bean\n        class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">\n        <property name=\"messageConverters\">\n            <list>\n                <bean\n                    class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n                    <property name=\"supportedMediaTypes\">\n                        <list>\n                            <value>application/json</value>\n                        </list>\n                    </property>\n                    <property name=\"fastJsonConfig\">\n                        <bean class=\"com.alibaba.fastjson.support.config.FastJsonConfig\">\n                            <property name=\"serializerFeatures\">\n                                <list>\n                                    <value>DisableCircularReferenceDetect</value>\n                                </list>\n                            </property>\n                        </bean>\n                    </property>\n                </bean>\n                <bean\n                    class=\"org.springframework.http.converter.StringHttpMessageConverter\" />\n                <bean\n                    class=\"org.springframework.http.converter.ResourceHttpMessageConverter\" />\n            </list>\n        </property>\n    </bean>\nTestCase\u5728\u51c6\u5907~~. \u6211\u53d1\u73b0\u5728springMVC\u7684\u914d\u7f6e\u4e0b\u9762\u8fd8\u6709\u4e2a\u91cc\u9762\u4f1a\u6709\u4e2amessageConverters\u8c8c\u4f3c\u4f1a\u8986\u76d6\u6389\u4e0a\u9762\u914d\u7f6e\u7684FastJsonHttpMessageConverter\u3002\u56e0\u4e3a\u8ddf\u8e2a\u4ee3\u7801\u8ddf\u5230Spring\u81ea\u5e26\u7684fastxml.jackson\u5305\u53bb\u4e86~\u628amessageConverter\u914d\u7f6e\u5168\u90e8\u4ece \u6807\u7b7e\u8f6c\u79fb\u5230 \u6807\u7b7e\u4e0b\uff0c\u95ee\u9898Fix\u3002\nKimmKing\uff0csorry\uff0c\u803d\u8bef\u4e86\u4f60\u7684\u5b9d\u8d35\u65f6\u95f4~~. ",
    "Jandaes": "\u89e3\u51b3\u4e86\uff1a\u4f7f\u7528\u4e0b\u9762\u8fd9\u4e2a\u914d\u7f6e\n<mvc:annotation-driven>\n        <mvc:message-converters register-defaults=\"true\">\n            <bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\" value=\"application/json;charset=UTF-8\"/>\n                <property name=\"features\">\n                    <array>\n                        <value>WriteMapNullValue</value>\n                        <value>WriteNullStringAsEmpty</value>\n                    </array>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>. THX. ",
    "xzk714": "\u540c\u6837\u590d\u73b0\u6b64\u95ee\u9898 \npublic class OrgAllDataResult {\n    private Lis t < OrgItem> all_data;\n    private long new_employee_log_id;\n    private long new_org_unit_log_id;\n\u3002\u3002\u3002}\n\u5176\u4e2dOrgItem\uff1a\npublic class OrgItem implements Parcelable {\n    private String name;\n    @JSONField(name = \"is_staff\")\n    private boolean isStaff;\n    @JSONField(name = \"parent_id\")\n    private String fatherId;\n    private String id;\n    private int staff_count;\n    private String avatar;\n    private String role_name;\n    private boolean isCurrentLevel;\n    private boolean isSelect;\n    @JSONField(name = \"is_manager\")\n    private boolean is_manager;\n    private List sameStaffs;\n\u3002\u3002\u3002\u3002\u3002}\n\u89e3\u6790\uff1a\nT result = JSON.parseObject(\"xxx\", new TypeReference() {});\nT\u4e3aOrgAllDataResult. ",
    "pphh77": "@wenshao \uff0c\u90a3\u8fd9\u6837\u5c31\u592a\u9ebb\u70e6\u4e86 \u6211\u4e0d\u53ef\u80fd\u53bb\u628a\u9879\u76ee\u91cc\u9762\u6240\u6709\u7684\u5b57\u6bb5\u770b\u770b\u6709\u6ca1\u6709_\u5f00\u5934\u7684\u7136\u540e\u90fd\u627e\u51fa\u6765\u52a0\u4e0a@jsonfield\uff0c\u5982\u679c\u6362\u6210\u522b\u7684json\u5e93\u8fd8\u5f97\u6bcf\u4e2a\u53bb\u6389\u3002. ",
    "wizardleeen": "jetty\u7248\u672c\uff1a8.1.16.v20140903\u3002  jetty\u4e5f\u6709bug\uff0c\u4ed6\u7684\u8bbe\u8ba1\u610f\u56fe\u5e94\u8be5\u662f\uff1aWebAppClassLoader\u5148\u81ea\u5df1load\uff0cload\u4e0d\u5230\u518d\u8ba9parent load\uff0c\u5b9e\u9645\u60c5\u51b5\u662f\u81ea\u5df1loadClass\u5931\u8d25\u5c31\u62a5\u5f02\u5e38\u4e86\u3002 \u6700\u65b0\u7248\u672c\u7684jetty\u5df2\u7ecf\u4fee\u590d\u4e86\u3002. ",
    "slankka": "\u6211\u4e5f\u662f1.2.29\uff0c\u4e5f\u662f\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002SpringBoot + Feign+JDK 1.7.0_55\u3002\nJDK1.8\u5c31\u6ca1\u6709\u95ee\u9898\u3002\n//\u6293\u53d6\u6700\u8fd1\u53d1\u73b0\u7684\u6570\u636e\n{\"data\":true,\"code\":200,\"msg\":\"success\",\"success\":true}\n///\u5bf9\u5e94\u7ed3\u6784\npublic class Response {\n    private int code;\n    private String msg;\n    private T data;\n    private String success\n}\n//\u5bf9\u5e94FeignClient\n@FeignClient(name=\"xx\", url=\"xxx\")\npublic interface RemoteCall {\n    @RequestMapping(\"/targetUrl\")\n    Response getData();\n}\n\u7ecf\u8fc7\u6392\u67e5\uff0c\u53d1\u73b0\u662f\u670d\u52a1\u5668jenkins\u6253\u5305\u673a\u5668\u4f7f\u7528\u7684JDK\u662f java version \"1.8.0_144\"\n\u800c\u5e94\u7528\u670d\u52a1\u5668 JDK \u7248\u672c\u662f java version \"1.7.0_55\"\n\u4f46\u662f\u96be\u4ee5\u590d\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u9762\uff0c\u65f6\u800c\u6709\u9519\uff0c\u65f6\u800c\u6b63\u5e38\u3002\n\u4f46\u5efa\u8bae \u8fd8\u662f \u5c3d\u91cf\u6253\u5305\u673a\u5668\u548c\u5e94\u7528\u670d\u52a1\u5668 \u4f7f\u7528\u76f8\u540c\u7248\u672c\u3002\n\u5b8c\u6574\u5f02\u5e38\nCaused by: com.alibaba.fastjson.JSONException: TODO\nat com.alibaba.fastjson.util.TypeUtils.getRawClass(TypeUtils.java:1932)\nat com.alibaba.fastjson.util.TypeUtils.createCollection(TypeUtils.java:1894)\nat com.alibaba.fastjson.serializer.CollectionCodec.deserialze(CollectionCodec.java:117)\nat com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:71)\nat com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:791)\nat com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:596)\nat com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:188)\nat com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:184)\nat com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:350)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:318)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:281)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:381)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:463)\nat com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4.read(FastJsonHttpMessageConverter4.java:69)\nat org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:95)\nat org.springframework.cloud.netflix.feign.support.SpringDecoder.decode(SpringDecoder.java:57)\nat org.springframework.cloud.netflix.feign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:47)\nat feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:161)\n... 25 more\n. @helloworldtang \u4f60\u80fd\u5728\u67d0\u4e00\u53f0\u673a\u5668\u4e0a\u590d\u73b0\u5417\uff1f\u8fd9\u4e24\u53f0\u673a\u5668\u7684JDK\u7248\u672c\u662f\u4e0d\u662f\u4e00\u6837\u7684\uff1f\u6211\u4e00\u76f4\u60f3\u590d\u73b0\u6765\u7740\u3002\u8fd8\u6709\u4f60\u7684Model \u7c7b\uff1f. @helloworldtang \u6211\u600e\u4e48\u6ca1\u6709\u770b\u51fa\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u5730\u65b9\uff1f1.2.31\u548c1.2.49\u4e2dcom.alibaba.fastjson.util.TypeUtils.getRawClass \u524d\u4e24\u884c \u6ca1\u6709\u53d8\u5316\u554a. \n@helloworldtang \u6ca1\u6709\u554a\uff01\uff01\n. ",
    "nicksheng": "\u6211\u662f1.2.22\u7248\u672c\uff0c\u4e5f\u6709\u8fd9\u4e2a\u5f02\u5e38\u3002\u8be1\u5f02\u7684\u662f\u670d\u52a1\u5668\u4e0a\u6709\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5728\u672c\u5730\u6d4b\u8bd5\u5c31\u6b63\u5e38\uff0cJDK\u90fd\u662f1.8\uff0c\u770b\u4e0d\u51fa\u522b\u7684\u95ee\u9898\u3002\ncom.alibaba.fastjson.JSONException: TODO\n        at com.alibaba.fastjson.util.TypeUtils.getRawClass(TypeUtils.java:1735) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.util.TypeUtils.createCollection(TypeUtils.java:1697) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.serializer.CollectionCodec.deserialze(CollectionCodec.java:119) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:71) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:722) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:568) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:187) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:183) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:624) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:339) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:243) ~[fastjson-1.2.22.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:456) ~[fastjson-1.2.22.jar!/:?]. ",
    "helloworldtang": "\u597d\u5947\u602a\uff0c\u4e5f\u62a5\u4e86\u540c\u6837\u7684\u9519\uff1a\nfastjson\u7248\u672c\uff1a1.2.31\njava\n   com.alibaba.fastjson.JSONException: TODO\n\u540c\u6837\u7684spring boot\u7684fat jar\uff0c\u90e8\u7f72\u5728\u4e24\u53f0\u673a\u5668\u4e0a\uff0c\u53ea\u6709\u4e00\u53f0\u673a\u5668\u62a5\u4e0a\u9762\u7684\u9519\u3002\n\u7b49\u8f6c\u6210json\u7684\u5b57\u7b26\u4e32\uff1a\njson\n{\n    \"code\": 0,\n    \"data\": true,\n    \"message\": \"OK\",\n    \"status\": 0\n}\n\u5bf9\u5e94\u7684Java\u5bf9\u8c61\uff1a\n```java\nimport lombok.Data;\nimport java.util.Date;\n@Data\npublic class DataResult {\n    private int status;\n    private String message;\n    private T data;\n    private Date time;\n}\n\u8c03\u7528\u7684API:java\n   com.alibaba.fastjson.JSON.toJSONString()\n\u62a5\u9519\u7684\u4fe1\u606f\uff1ajava\ncom.alibaba.fastjson.JSONException: TODO\n        at com.alibaba.fastjson.util.TypeUtils.getRawClass(TypeUtils.java:2019) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.util.TypeUtils.createCollection(TypeUtils.java:1981) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.serializer.CollectionCodec.deserialze(CollectionCodec.java:117) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:71) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:828) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:630) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:212) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:208) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:350) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:254) ~[fastjson-1.2.31.jar!/:?]\n        at com.alibaba.fastjson.JSON.parseObject(JSON.java:467) ~[fastjson-1.2.31.jar!/:?]\n```\n. @slankka \n\u91cd\u65b0\u53d1\u5e03\u540e\uff0c\u4e24\u53f0\u673a\u5668\u90fd\u5f00\u59cb\u62a5\u9519\u4e86\u3002\u521a\u624d\u628a\u62a5\u9519\u7684\u8be6\u7ec6\u4fe1\u606f\u4e5f\u7c98\u4e0a\u53bb\u4e86. \u6e29\u5c11\u5efa\u8bae\u5347\u7ea7\u52301.2.49\uff0c\u51fa\u73b0\u7c7b\u4f3c\u95ee\u9898\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u8bd5. @su1216  \u8fd9\u79cd\u662f\u5076\u53d1\u7684\uff0c\u600e\u4e48\u8bc1\u660e\u5df2\u7ecf\u89e3\u51b3\u4e86\u5462\uff1f\n\u5bf9\u6bd4\u4e86\u4e0b1.2.31\u548c1.2.49\u4e2dcom.alibaba.fastjson.util.TypeUtils.getRawClass, \u5728\u524d\u4e24\u884c\u4ee3\u7801\u6709\u53d8\u5316\uff1a\njava\n        if (type instanceof  Class<?>) {\n            return (Class<?>) type;\nv1.2.31\u4e2d\uff1a\njava\n    public static Class<?> getRawClass(Type type) {\n        if (type instanceof  Class<?>) {\n            return (Class<?>) type;\n        } else if (type instanceof ParameterizedType) {\n            return getRawClass(((ParameterizedType) type).getRawType());\n        } else {\n            throw new JSONException(\"TODO\");\n        }\n    }\nv1.2.49\u4e2d\uff1a\njava\n    public static Class<?> getRawClass(Type type) {\n        if (type instanceof Class) {\n            return (Class)type;\n        } else if (type instanceof ParameterizedType) {\n            return getRawClass(((ParameterizedType)type).getRawType());\n        } else {\n            throw new JSONException(\"TODO\");\n        }\n    }\n.  @slankka \n       if (type instanceof  Class<?>) {\n\u53d8\u6210 \n        if (type instanceof Class) {\n. @neil4dong \n\u5bf9\u4e0a\u9762\u63cf\u8ff0\u4e2d\u201ckey\u6216\u8005value\u662fstring\u662f\u52a0\u53cc\u5f15\u53f7\u7684\u8bbe\u8ba1\u201d\u4e5f\u8d5e\u540c\u3002  \n\u4f46\u8fd9\u4e2a\u573a\u666f\u4e0e\u4e0a\u9762\u7684\u63cf\u8ff0\u4e0d\u4e00\u81f4\u3002\n\u56e0\u4e3a\u867d\u7136\u8fd4\u56de\u7684content-type\u662fapplication/json\uff0c\u4f46\u5f88\u660e\u663e\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u5b57\u7b26\u4e32\u5e76\u4e0d\u662fjson\uff0c\u4e0a\u9762\u5bf9\u5fc5\u987b\u52a0\u53cc\u5f15\u53f7\u7684\u7406\u7531\uff0c\u4e5f\u4e0d\u9002\u7528\u6b64\u573a\u666f\u3002\n\u5e76\u4e14\u4e1a\u754c\u7684jackson\u4e5f\u6ca1\u6709\u8fd9\u6837\u505a\n. @wuwen5 \n\u7c7b\u4f3c\u7684\u65b9\u6848\u4e5f\u60f3\u5230\u4e86\uff0c\u8b6c\u5982\u4f7f\u7528configureMessageConverters\u3002\u4f46\u9879\u76ee\u76ee\u524d\u5c31\u53ea\u6709\u8fd9\u4e00\u4e2aMessageConverter\uff0c\u5982\u679c\u4f7f\u7528extendMessageConverters\u4f1a\u52a0\u8f7d\u7ea67\u4e2aMessageConverter\uff0c\u8fd9\u4f1a\u5f71\u54cd\u5df2\u4e0a\u7ebf\u63a5\u53e3\u7684\u8fd4\u56de\u503c\u3002\n\u770b\u6765\u53ea\u80fd\u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u66ff\u6362\u65b9\u6848\u4e86\u3002\u4f46\u611f\u89c9\u50cf\u8d34\u4e86\u8865\u4e01\uff0c\u4e0d\u723d. @wuwen5 \u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u7684\u7b2c\u4e00\u4e2a\u53cd\u5e94\uff0c\u4e5f\u662f\u5728\u627e\u662f\u4e0d\u662fconfig\u4e2d\u5c11\u4e86\u4e00\u4e2aFeature. @KeZhimin \u4f7f\u7528ValueFilter. \n```java\n fastJsonConfig.setSerializeFilters((ValueFilter) (o, s, source) -> {\n            if (source == null) {\n                return \"\";\n            }\n            if (source instanceof Date) {\n                return ((Date) source).getTime();\n            }\n            return source;\n        });\n```\nhttp://www.cnblogs.com/softidea/p/6619072.html. ",
    "su1216": "@helloworldtang \u62b1\u6b49\uff0c\u4e4b\u524d\u770b\u6210\u53e6\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\u8fd9\u4e2a\u95ee\u9898\u4e0d\u4e86\u89e3\u3002. \u51fd\u6570\u8c03\u7528:\n\nJSON.toJSONString(object,\n                    SerializerFeature.DisableCircularReferenceDetect,\n                    SerializerFeature.WriteNullStringAsEmpty,\n                    SerializerFeature.WriteNullBooleanAsFalse,\n                    SerializerFeature.WriteNullNumberAsZero,\n                    SerializerFeature.WriteMapNullValue,\n                    SerializerFeature.WriteNullListAsEmpty,\n                    SerializerFeature.PrettyFormat);\n. minifyEnabled true \u914d\u7f6e\uff0c\u4e0d\u6307\u5b9aproguard\u5c31\u4f1a\u5bfc\u81f4fastjson\u5931\u6548. minifyEnabled true \u914d\u7f6e\uff0c\u4e0d\u6307\u5b9aproguard\u5c31\u4f1a\u5bfc\u81f4fastjson\u5931\u6548. @wenshao \u6709\u4ec0\u4e48\u6ce8\u610f\u4e8b\u9879\u4e48\uff5e. @wenshao \u6709\u4ec0\u4e48\u6ce8\u610f\u4e8b\u9879\u4e48\uff5e. \n",
    "nickylin": "\u6211\u670b\u53cb\u4e0a\u5468\u63d0\u4f9b\u4e86case ,\u8ddf\u4ed6\u662f\u540c\u4e2a\u95ee\u9898 ,\u76ee\u524d\u7ed3\u8bba\u6682\u65f6\u662f\u6211\u4eec\u53bb\u9664\u5faa\u73af\u5f15\u7528\u4e86,\u4e0d\u6539json\u7ed3\u6784. \u6211\u8fd9\u8fb9\u4e5f\u9047\u5230\u4e86toJsonString\u89e6\u53d1oom\u95ee\u9898, \u800c\u4e14\u90fd\u96c6\u4e2d\u57284.2.2\u673a\u578b\u4e0a\u9762, \u4e0d\u77e5\u4e3a\u5565\u7533\u8bf7\u4e86100M\u6570\u636e, . ",
    "wqnmlgbe": "@yrom   \u6211\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u6211\u6ca1\u6709\u7528TypeReference\uff0c\u662f\u7528\u7684\u53cd\u5c04\u83b7\u53d6\u7684\u6cdb\u578bType,\u7ed3\u679c\u4e00\u6837\u7684\uff0c\u4e0d\u4f20\u7684\u65f6\u5019\u4f1a\u5f71\u54cd\u4e0b\u4e00\u6b21\u7684\u89e3\u6790. ",
    "yjfnypeu": "\u7ecf\u8fc7\u6d4b\u8bd5\u3002\u53d1\u73b0android\u7248\u672c\u4ecd\u7136\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u7eafjava\u7248\u4f3c\u4e4e\u662f\u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u5bf9Android\u7248\u672c\u4e5f\u8fdb\u884c\u4fee\u590d\u4e00\u4e0b\u5462\uff1f. ",
    "nwpu043814": "Jumeiyoupin has fixed this issue.. ",
    "snfdf": "@kimmking \n\u8fd9\u4e9b\u90fd\u914d\u4e86\uff0c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0c\u53ea\u6709\u4e00\u4e2aDate\u7c7b\u578b\u7684\u5982\u679c\u662f\u7a7a\u8fd8\u662f\u4fdd\u7559\u7684\uff0c\u5176\u5b83\u7684\u8fd8\u662f\u6ca1\u6709\u3002\u73b0\u5728\u5df2\u7ecf\u4e0d\u4f7f\u7528fastjson\u4e86\uff0c\u592a\u9ebb\u70e6\u4e86\u3002. ",
    "erstens": "\u53d6\u503c\u7528MapUtils.getString(map,\"key\",\"default_value\")\u597d\u4e00\u70b9. fastjson\u901f\u5ea6\u8981\u6c42\u9ad8,\u6240\u4ee5\u5176\u5b83\u65b9\u9762\u4e5f\u5c31\u6709\u6240\u635f\u5931\u5427. \u4e0d\u53ef\u4ee5\n\u53c2\u8003\u94fe\u63a5. \u4e0d\u53ef\u4ee5\n\u53c2\u8003\u94fe\u63a5. \"\\\\w\" -> \"\\\\\\\\w\"\nin the source code will check the char '\\' .\nchange:\nString aa = \"{\\\"required\\\":true,\\\"regex\\\"\\:\\\"([\\\\\\\\w-]+\\\\\\\\.)+[\\\\\\\\w-]+(/[\\\\\\\\w-./?%&=]*)?\\\"}\";\nLinkedHashMap ruleMap = JSON.parseObject(aa, LinkedHashMap.class);\nSystem.out.println(MapUtils.getString(ruleMap,\"regex\",\"\"));. ",
    "AlanCheen": "\u8865\u5145\u4e00\u4e0b  \u53c2\u6570\uff0c\u662f\u4e2a HashSet\nJSON.toJSONString(HashSet).  set\u91cc\u53ea\u6709\u51e0\u4e2a String\uff0c\u6000\u7591\u53ef\u80fd\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\u95ee\u9898. \u662f Android \u73af\u5883\uff0c\u4f46\u662f\u7533\u8bf7\u7684\u5185\u5b58\u4e5f\u5fd2\u591a\u4e86. ",
    "idearfly": "----------------------\u4e0b\u9762\u662fjson\u7684\u6570\u636e------------------------\n{\"code\":1,\"message\":\"\",\"data\":[{\"bzfsbm\":\"02\",\"bzfsmc\":\"\u4e00\u6b21\u6027\u533b\u7528\u76b1\u7eb9\u7eb8\",\"dbsl\":0,\"pbczymc\":null,\"pbsj\":\"\",\"qxczymc\":null,\"qxlk\":\"01\",\"qxlkmc\":\"\u6e05\u6d17\u7bee\u7b5001\",\"qxsj\":null,\"sl\":1,\"validterm\":\"180\",\"wlqx\":1,\"xdbid\":191,\"xdbmc\":\"\u6e05\u521b\u5305\",\"xdbmxlist\":null,\"xdbtplist\":[{\"tplx\":\"1\",\"tpnr\":[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,1,244,0,0,1,244,8,6,0,0,0,203,214,223,138,0,0,0,4,103,65,77,65,0,0,177,142,124,251,81,147,0,0,0,32,99,72,82,77,0,0,135,15,0,0,140,15,0,0,253,82,0,0,129,64,0,0,125,121,0,0,233,139,0,0,60,229,0,0,25,204,115,60,133,119,0,0,10,57,105,67,67,80,80,104,111,116,111,115,104,111,112,32,73,67,67,32,112,114,111,102,105,108,101,0,0,72,199,157,150,119,84,84,215,22,135,207,189,119,122,161,205,48,2,82,134,222,187,192,0,210,123,147,94,69,97,152,25,96,40,3,14,51,52,177,33,162,2,17,69,68,154,34,72,80,196,128,209,80,36,86,68,177,16,20,84,176,7,36,8,40,49,24,69,84,44,111,70,214,139,174,172,188,247,242,242,251,227,172,111,237,179,247,185,251,236,189,207,90,23,0,146,167,47,151,151,6,75,1,144,202,19,240,131,60,156,233,17,145,81,116,236,0,128,1,30,96,128,41,0,76,86,70,186,95,176,123,8,16,201,203,205,133,158,33,114,2,95,4,1,240,122,88,188,2,112,211,208,51,128,78,7,255,159,164,89,233,124,129,232,152,0,17,155,179,57,25,44,17,23,136,56,37,75,144,46,182,207,138,152,26,151,44,102,24,37,102,190,40,65,17,203,137,57,97,145,13,62,251,44,178,163,152,217,169,60,182,136,197,57,167,179,83,217,98,238,21,241,182,76,33,71,196,136,175,136,11,51,185,156,44,17,223,18,177,70,138,48,149,43,226,55,226,216,84,14,51,3,0,20,73,108,23,112,88,137,34,54,17,49,137,31,18,228,34,226,229,0,224,72,9,95,113,220,87,44,224,100,11,196,151,114,73,75,207,225,115,19,18,5,116,29,150,46,221,212,218,154,65,247,228,100,165,112,4,2,195,0,38,43,153,201,103,211,93,210,82,211,153,188,28,0,22,239,252,89,50,226,218,210,69,69,182,52,181,182,180,52,52,51,50,253,170,80,255,117,243,111,74,220,219,69,122,25,248,185,103,16,173,255,139,237,175,252,210,26,0,96,204,137,106,179,243,139,45,174,10,128,206,45,0,200,221,251,98,211,56,0,128,164,168,111,29,215,191,186,15,77,60,47,137,2,65,186,141,177,113,86,86,150,17,151,195,50,18,23,244,15,253,79,135,191,161,175,190,103,36,62,238,143,242,208,93,57,241,76,97,138,128,46,174,27,43,45,37,77,200,167,103,164,51,89,28,186,225,159,135,248,31,7,254,117,30,6,65,156,120,14,159,195,19,69,132,137,166,140,203,75,16,181,155,199,230,10,184,105,60,58,151,247,159,154,248,15,195,254,164,197,185,22,137,210,248,17,80,99,140,128,212,117,42,64,126,237,7,40,10,17,32,209,251,197,93,255,163,111,190,248,48,32,126,121,225,42,147,139,115,255,239,55,253,103,193,165,226,37,131,155,240,57,206,37,40,132,206,18,242,51,23,247,196,207,18,160,1,1,72,2,42,144,7,202,64,29,232,0,67,96,6,172,128,45,112,4,110,192,27,248,131,16,16,9,86,3,22,72,4,169,128,15,178,64,30,216,4,10,65,49,216,9,246,128,106,80,7,26,65,51,104,5,199,65,39,56,5,206,131,75,224,26,184,1,110,131,251,96,20,76,128,103,96,22,188,6,11,16,4,97,33,50,68,129,228,33,21,72,19,210,135,204,32,6,100,15,185,65,190,80,16,20,9,197,66,9,16,15,18,66,121,208,102,168,24,42,131,170,161,122,168,25,250,30,58,9,157,135,174,64,131,208,93,104,12,154,134,126,135,222,193,8,76,130,169,176,18,172,5,27,195,12,216,9,246,129,67,224,85,112,2,188,6,206,133,11,224,29,112,37,220,0,31,133,59,224,243,240,53,248,54,60,10,63,131,231,16,128,16,17,26,162,138,24,34,12,196,5,241,71,162,144,120,132,143,172,71,138,144,10,164,1,105,69,186,145,62,228,38,50,138,204,32,111,81,24,20,5,69,71,25,162,108,81,158,168,80,20,11,181,6,181,30,85,130,170,70,29,70,117,160,122,81,55,81,99,168,89,212,71,52,25,173,136,214,71,219,160,189,208,17,232,4,116,22,186,16,93,129,110,66,183,163,47,162,111,163,39,208,175,49,24,12,13,163,141,177,194,120,98,34,49,73,152,181,152,18,204,62,76,27,230,28,102,16,51,142,153,195,98,177,242,88,125,172,29,214,31,203,196,10,176,133,216,42,236,81,236,89,236,16,118,2,251,6,71,196,169,224,204,112,238,184,40,28,15,151,143,171,192,29,193,157,193,13,225,38,113,11,120,41,188,38,222,6,239,143,103,227,115,240,165,248,70,124,55,254,58,126,2,191,64,144,38,104,19,236,8,33,132,36,194,38,66,37,161,149,112,145,240,128,240,146,72,36,170,17,173,137,129,68,46,113,35,177,146,120,140,120,153,56,70,124,75,146,33,233,145,92,72,209,36,33,105,7,233,16,233,28,233,46,233,37,153,76,214,34,59,146,163,200,2,242,14,114,51,249,2,249,17,249,141,4,69,194,72,194,75,130,45,177,65,162,70,162,67,98,72,226,185,36,94,82,83,210,73,114,181,100,174,100,133,228,9,201,235,146,51,82,120,41,45,41,23,41,166,212,122,169,26,169,147,82,35,82,115,210,20,105,83,105,127,233,84,233,18,233,35,210,87,164,167,100,176,50,90,50,110,50,108,153,2,153,131,50,23,100,198,41,8,69,157,226,66,97,81,54,83,26,41,23,41,19,84,12,85,155,234,69,77,162,22,83,191,163,14,80,103,101,101,100,151,201,134,201,102,203,214,200,158,150,29,165,33,52,45,154,23,45,133,86,74,59,78,27,166,189,91,162,180,196,105,9,103,201,246,37,173,75,134,150,204,203,45,149,115,148,227,200,21,201,181,201,221,150,123,39,79,151,119,147,79,150,223,37,223,41,255,80,1,165,160,167,16,168,144,165,176,95,225,162,194,204,82,234,82,219,165,172,165,69,75,143,47,189,167,8,43,234,41,6,41,174,85,60,168,216,175,56,167,164,172,228,161,148,174,84,165,116,65,105,70,153,166,236,168,156,164,92,174,124,70,121,90,133,162,98,175,194,85,41,87,57,171,242,148,46,75,119,162,167,208,43,233,189,244,89,85,69,85,79,85,161,106,189,234,128,234,130,154,182,90,168,90,190,90,155,218,67,117,130,58,67,61,94,189,92,189,71,125,86,67,69,195,79,35,79,163,69,227,158,38,94,147,161,153,168,185,87,179,79,115,94,75,91,43,92,107,171,86,167,214,148,182,156,182,151,118,174,118,139,246,3,29,178,142,131,206,26,157,6,157,91,186,24,93,134,110,178,238,62,221,27,122,176,158,133,94,162,94,141,222,117,125,88,223,82,159,171,191,79,127,208,0,109,96,109,192,51,104,48,24,49,36,25,58,25,102,26,182,24,142,25,209,140,124,141,242,141,58,141,158,27,107,24,71,25,239,50,238,51,254,104,98,97,146,98,210,104,114,223,84,198,212,219,52,223,180,219,244,119,51,61,51,150,89,141,217,45,115,178,185,187,249,6,243,46,243,23,203,244,151,113,150,237,95,118,199,130,98,225,103,177,213,162,199,226,131,165,149,37,223,178,213,114,218,74,195,42,214,170,214,106,132,65,101,4,48,74,24,151,173,209,214,206,214,27,172,79,89,191,181,177,180,17,216,28,183,249,205,214,208,54,217,246,136,237,212,114,237,229,156,229,141,203,199,237,212,236,152,118,245,118,163,246,116,251,88,251,3,246,163,14,170,14,76,135,6,135,199,142,234,142,108,199,38,199,73,39,93,167,36,167,163,78,207,157,77,156,249,206,237,206,243,46,54,46,235,92,206,185,34,174,30,174,69,174,3,110,50,110,161,110,213,110,143,220,213,220,19,220,91,220,103,61,44,60,214,122,156,243,68,123,250,120,238,242,28,241,82,242,98,121,53,123,205,122,91,121,175,243,238,245,33,249,4,251,84,251,60,246,213,243,229,251,118,251,193,126,222,126,187,253,30,172,208,92,193,91,209,233,15,252,189,252,119,251,63,12,208,14,88,19,240,99,32,38,48,32,176,38,240,73,144,105,80,94,80,95,48,37,56,38,248,72,240,235,16,231,144,210,144,251,161,58,161,194,208,158,48,201,176,232,176,230,176,249,112,215,240,178,240,209,8,227,136,117,17,215,34,21,34,185,145,93,81,216,168,176,168,166,168,185,149,110,43,247,172,156,136,182,136,46,140,30,94,165,189,42,123,213,149,213,10,171,83,86,159,142,145,140,97,198,156,136,69,199,134,199,30,137,125,207,244,103,54,48,231,226,188,226,106,227,102,89,46,172,189,172,103,108,71,118,57,123,154,99,199,41,227,76,198,219,197,151,197,79,37,216,37,236,78,152,78,116,72,172,72,156,225,186,112,171,185,47,146,60,147,234,146,230,147,253,147,15,37,127,74,9,79,105,75,197,165,198,166,158,228,201,240,146,121,189,105,202,105,217,105,131,233,250,233,133,233,163,107,108,214,236,89,51,203,247,225,55,101,64,25,171,50,186,4,84,209,207,84,191,80,71,184,69,56,150,105,159,89,147,249,38,43,44,235,68,182,116,54,47,187,63,71,47,103,123,206,100,174,123,238,183,107,81,107,89,107,123,242,84,243,54,229,141,173,115,90,87,191,30,90,31,183,190,103,131,250,134,130,13,19,27,61,54,30,222,68,216,148,188,233,167,124,147,252,178,252,87,155,195,55,119,23,40,21,108,44,24,223,226,177,165,165,80,162,144,95,56,178,213,118,107,221,54,212,54,238,182,129,237,230,219,171,182,127,44,98,23,93,45,54,41,174,40,126,95,194,42,185,250,141,233,55,149,223,124,218,17,191,99,160,212,178,116,255,78,204,78,222,206,225,93,14,187,14,151,73,151,229,150,141,239,246,219,221,81,78,47,47,42,127,181,39,102,207,149,138,101,21,117,123,9,123,133,123,71,43,125,43,187,170,52,170,118,86,189,175,78,172,190,93,227,92,211,86,171,88,187,189,118,126,31,123,223,208,126,199,253,173,117,74,117,197,117,239,14,112,15,220,169,247,168,239,104,208,106,168,56,136,57,152,121,240,73,99,88,99,223,183,140,111,155,155,20,154,138,155,62,28,226,29,26,61,28,116,184,183,217,170,185,249,136,226,145,210,22,184,69,216,50,125,52,250,232,141,239,92,191,235,106,53,108,173,111,163,181,21,31,3,199,132,199,158,126,31,251,253,240,113,159,227,61,39,24,39,90,127,208,252,161,182,157,210,94,212,1,117,228,116,204,118,38,118,142,118,69,118,13,158,244,62,217,211,109,219,221,254,163,209,143,135,78,169,158,170,57,45,123,186,244,12,225,76,193,153,79,103,115,207,206,157,75,63,55,115,62,225,252,120,79,76,207,253,11,17,23,110,245,6,246,14,92,244,185,120,249,146,251,165,11,125,78,125,103,47,219,93,62,117,197,230,202,201,171,140,171,157,215,44,175,117,244,91,244,183,255,100,241,83,251,128,229,64,199,117,171,235,93,55,172,111,116,15,46,31,60,51,228,48,116,254,166,235,205,75,183,188,110,93,187,189,226,246,224,112,232,240,157,145,232,145,209,59,236,59,83,119,83,238,190,184,151,121,111,225,254,198,7,232,7,69,15,165,30,86,60,82,124,212,240,179,238,207,109,163,150,163,167,199,92,199,250,31,7,63,190,63,206,26,127,246,75,198,47,239,39,10,158,144,159,84,76,170,76,54,79,153,77,157,154,118,159,190,241,116,229,211,137,103,233,207,22,102,10,127,149,254,181,246,185,206,243,31,126,115,252,173,127,54,98,118,226,5,255,197,167,223,75,94,202,191,60,244,106,217,171,158,185,128,185,71,175,83,95,47,204,23,189,145,127,115,248,45,227,109,223,187,240,119,147,11,89,239,177,239,43,63,232,126,232,254,232,243,241,193,167,212,79,159,254,5,3,152,243,252,186,196,232,211,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,35,60,73,68,65,84,120,94,237,221,237,138,92,87,150,38,224,134,134,186,149,134,185,155,129,129,134,186,140,249,59,119,48,48,151,81,48,208,23,82,110,209,8,235,135,65,254,160,85,148,167,242,71,186,4,45,156,216,89,200,229,156,181,228,140,114,86,212,74,41,62,246,89,113,226,236,231,129,183,203,173,12,69,156,20,123,243,198,249,218,231,159,30,30,30,68,68,68,228,202,243,225,255,252,254,247,191,175,242,207,145,255,30,249,93,228,63,34,63,69,30,68,68,68,164,37,217,187,217,191,217,195,217,199,217,203,255,208,215,159,42,244,127,137,252,123,164,250,0,17,17,17,233,79,246,114,246,243,223,117,246,199,10,253,127,70,126,136,84,111,38,34,34,34,151,75,246,115,246,244,223,122,251,185,66,255,223,145,234,13,68,68,68,100,61,201,190,126,182,208,255,53,82,253,37,17,17,17,89,95,178,183,255,161,208,127,19,249,127,143,47,16,17,17,145,245,231,235,200,111,246,11,253,183,79,94,32,34,34,34,215,145,223,238,23,122,94,18,95,189,80,68,68,68,214,155,223,237,23,250,235,189,23,136,136,136,200,250,243,159,251,133,254,95,123,47,16,17,17,145,245,231,47,251,133,94,189,72,68,68,68,86,30,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,89,117,161,127,246,217,103,15,95,126,249,229,195,119,223,125,247,112,119,119,247,240,243,207,63,231,6,3,64,171,236,159,236,161,236,163,236,165,236,167,170,183,46,153,176,206,66,255,252,243,207,31,190,255,254,251,220,64,0,88,149,236,167,236,169,170,191,46,149,176,190,66,255,195,31,254,240,240,215,191,254,53,55,14,0,86,41,123,42,251,170,234,177,75,36,172,171,208,255,244,167,63,229,70,1,192,85,200,222,170,250,172,59,97,61,133,254,213,87,95,229,6,1,192,85,201,254,170,122,173,51,97,29,133,158,23,24,252,229,47,127,201,13,2,128,171,242,227,143,63,94,252,66,185,176,142,66,255,250,235,175,115,99,0,224,42,101,143,85,253,214,149,176,142,66,207,91,1,0,224,90,101,143,85,253,214,149,176,142,66,255,225,135,31,114,99,0,224,42,221,223,223,151,253,214,149,176,142,66,255,233,167,159,114,99,0,224,42,229,226,51,85,191,117,37,172,163,208,1,224,218,85,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,135,181,120,255,254,253,195,187,119,239,30,190,253,246,219,135,219,219,219,15,255,157,127,6,92,135,170,223,186,18,20,58,172,65,150,248,139,23,47,202,249,241,234,213,171,135,55,111,222,60,220,221,221,61,190,26,88,163,106,254,118,37,40,116,184,164,220,3,207,194,174,230,69,149,47,190,248,98,181,197,158,71,20,238,239,239,31,255,63,152,79,53,103,187,18,20,58,92,82,22,116,53,39,62,150,220,147,191,100,169,103,105,191,125,251,246,195,81,131,234,203,72,110,223,55,223,124,163,220,153,206,254,92,232,76,80,232,112,41,55,55,55,229,124,56,36,89,154,75,159,95,207,66,206,189,238,220,206,44,239,252,242,241,220,105,129,42,249,218,188,22,0,102,81,205,131,174,4,133,14,75,216,149,225,115,201,61,220,99,202,177,74,158,119,175,222,123,151,79,237,197,231,23,130,44,220,124,159,44,235,93,170,207,58,39,206,253,51,139,106,252,119,37,40,116,24,37,75,244,245,235,215,103,23,245,232,228,97,241,253,61,229,44,217,174,237,204,47,9,48,131,106,252,119,37,40,116,24,33,11,179,26,219,107,202,211,98,125,249,242,101,249,154,165,226,124,58,51,168,198,126,87,130,66,135,115,101,89,85,227,122,141,217,29,166,175,126,182,100,156,75,103,6,213,216,239,74,80,232,112,174,188,96,172,26,215,107,204,238,66,181,234,103,75,38,191,72,192,214,85,99,191,43,65,161,195,185,142,185,143,124,13,201,243,252,213,159,47,153,252,210,3,91,87,141,253,174,4,133,14,231,170,198,244,154,179,196,149,236,159,74,222,151,14,91,87,141,253,174,4,133,14,231,170,198,244,154,115,137,66,119,200,157,25,84,99,191,43,65,161,195,185,170,49,189,230,92,162,208,243,190,123,216,186,106,236,119,37,40,116,56,215,200,91,192,242,189,242,156,124,254,239,254,251,102,17,231,207,206,189,215,189,251,150,181,220,86,152,65,53,254,187,18,20,58,156,107,212,69,102,121,225,216,161,101,155,231,164,79,189,24,175,251,34,62,123,231,204,162,26,255,93,9,10,29,206,53,226,190,238,44,242,99,247,186,243,139,196,177,123,219,221,87,184,187,255,156,153,84,115,160,43,65,161,195,8,185,199,92,141,237,165,115,204,249,240,252,194,208,181,157,185,93,249,69,7,102,82,205,133,174,4,133,14,163,228,149,220,231,156,219,62,37,121,248,252,144,207,204,61,243,165,23,148,201,18,207,39,179,89,230,149,89,85,243,162,43,65,161,195,104,185,103,122,206,163,81,71,38,191,100,236,30,179,154,255,93,189,102,169,228,23,141,221,23,9,152,65,53,15,186,18,20,58,44,225,18,203,171,62,151,221,161,239,75,220,174,182,75,126,246,210,207,111,135,75,171,198,126,87,130,66,135,37,116,95,73,254,177,100,153,166,75,22,122,198,242,175,108,93,53,238,187,18,20,58,140,182,198,167,175,229,54,93,186,208,51,206,175,179,101,213,152,239,74,80,232,48,218,154,14,183,239,146,135,221,215,80,232,121,109,1,108,85,53,230,187,18,20,58,140,214,125,241,217,33,89,75,161,91,211,157,45,171,198,124,87,130,66,135,209,20,250,243,201,171,222,97,171,170,49,223,149,160,208,97,180,181,220,178,246,52,119,119,119,246,208,97,97,213,152,239,74,80,232,48,218,218,46,138,203,229,97,147,66,135,101,85,99,190,43,65,161,195,40,185,23,188,91,41,45,111,209,170,198,250,37,178,187,16,237,82,203,211,62,141,7,181,176,101,213,152,239,74,80,232,48,194,254,97,246,220,27,238,126,16,74,149,220,134,252,114,145,219,115,233,123,227,119,71,10,96,171,170,113,223,149,160,208,225,92,31,59,196,158,37,154,201,50,203,100,177,238,231,220,245,223,243,253,247,223,111,247,103,221,107,203,63,151,220,142,60,130,1,91,86,141,253,174,4,133,14,231,90,211,225,245,181,37,139,60,15,245,91,80,134,25,84,115,160,43,65,161,195,185,114,79,184,26,215,107,205,49,207,80,63,119,15,31,102,82,205,129,174,4,133,14,231,170,198,244,154,115,76,73,159,251,101,5,102,82,205,129,174,4,133,14,231,170,198,244,154,115,76,73,159,123,97,31,204,164,154,3,93,9,10,29,206,85,141,233,53,231,152,66,63,119,213,59,152,73,53,7,186,18,20,58,156,171,26,211,91,73,46,25,91,253,249,161,129,153,84,115,160,43,65,161,195,185,174,237,162,184,67,239,71,207,223,75,161,195,225,170,57,208,149,160,208,225,92,107,124,24,203,115,57,230,156,120,254,94,10,29,14,87,205,129,174,4,133,14,231,122,255,254,253,106,22,112,249,88,114,207,252,152,123,230,115,33,24,133,14,135,171,230,64,87,130,66,135,17,178,252,214,90,234,187,197,93,142,121,10,220,110,153,214,115,10,61,63,23,102,82,205,131,174,4,133,14,163,228,158,122,150,230,167,206,169,239,47,1,123,238,23,129,44,235,60,60,190,159,44,227,252,162,113,123,123,251,201,109,218,79,254,157,116,78,161,231,103,194,76,170,121,208,149,160,208,225,210,206,93,58,54,191,72,84,242,207,15,189,0,238,105,118,95,56,242,127,243,233,104,213,107,14,73,158,175,135,153,84,243,160,43,65,161,67,167,44,217,220,251,221,61,1,45,247,128,207,41,205,44,236,252,251,249,94,187,228,222,249,238,115,170,191,243,169,60,93,26,54,255,251,148,47,5,153,221,99,91,97,22,213,60,232,74,80,232,208,33,15,125,63,119,133,121,30,50,127,90,162,199,228,185,247,204,195,248,167,236,249,87,135,255,79,89,45,46,223,231,185,35,7,176,85,213,92,232,74,80,232,176,180,67,246,148,115,207,186,250,243,143,229,208,189,231,115,207,209,231,231,28,83,234,249,121,30,149,202,140,170,249,208,149,160,208,97,73,31,123,86,250,211,100,9,230,158,250,161,229,155,37,123,232,151,128,221,107,159,59,10,112,200,103,238,182,239,99,239,147,95,46,118,135,251,97,70,213,188,232,74,80,232,176,164,44,193,106,204,63,151,44,204,93,246,127,150,165,154,165,153,121,174,84,63,150,252,59,187,191,191,251,255,15,253,2,241,52,249,247,158,110,231,211,228,97,126,207,62,103,86,213,124,233,74,80,232,176,164,83,10,115,151,253,178,60,231,189,58,147,219,169,212,153,81,53,31,186,18,20,58,44,37,15,61,87,227,125,134,228,158,58,204,166,154,11,93,9,10,29,150,114,238,178,169,215,156,60,172,15,179,169,230,66,87,130,66,135,165,204,92,232,25,152,77,53,15,186,18,20,58,44,69,161,195,92,170,121,208,149,160,208,97,41,10,29,230,82,205,131,174,4,133,14,75,25,89,232,121,149,251,211,7,175,44,149,234,179,79,13,204,166,154,7,93,9,10,29,150,50,178,208,243,126,246,124,191,165,83,125,246,169,129,217,84,243,160,43,65,161,195,82,70,23,228,181,5,102,83,205,131,174,4,133,14,75,81,232,48,151,106,30,116,37,40,116,88,138,66,135,185,84,243,160,43,65,161,195,82,20,58,204,165,154,7,93,9,10,29,150,162,208,97,46,213,60,232,74,80,232,176,20,133,14,115,169,230,65,87,130,66,135,165,40,116,152,75,53,15,186,18,20,58,44,101,100,161,127,236,25,228,35,83,125,246,169,129,217,84,243,160,43,65,161,195,82,70,22,122,174,226,214,161,250,236,83,3,179,169,230,65,87,130,66,135,165,56,228,14,115,169,230,65,87,130,66,135,165,40,116,152,75,53,15,186,18,20,58,44,169,26,239,51,228,197,139,23,143,255,2,48,143,106,46,116,37,40,116,88,82,53,222,103,72,94,96,7,179,169,230,66,87,130,66,135,37,189,122,245,170,28,243,91,207,235,215,175,31,255,5,96,30,213,92,232,74,80,232,176,164,124,236,105,53,230,183,158,174,171,242,97,77,170,185,208,149,160,208,97,73,183,183,183,229,152,223,122,238,238,238,30,255,5,96,30,213,92,232,74,80,232,176,164,247,239,223,127,184,64,172,26,247,91,77,46,130,3,51,170,230,67,87,130,66,135,165,229,225,231,106,220,111,53,111,223,190,125,252,205,97,46,213,124,232,74,80,232,208,33,47,18,171,198,254,214,226,220,57,51,171,230,68,87,130,66,135,46,89,118,91,61,252,158,87,243,231,66,58,48,179,106,110,116,37,40,116,232,148,231,212,243,66,185,188,250,253,90,111,105,219,61,40,38,127,135,155,155,155,135,251,251,251,199,223,14,230,86,205,151,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,161,75,62,180,228,205,155,55,31,86,89,203,213,214,170,185,112,77,201,149,238,242,119,201,37,109,61,46,21,20,250,135,192,150,101,217,109,161,192,63,149,44,247,92,218,22,102,85,205,139,174,4,133,14,75,202,117,206,103,122,30,122,150,58,204,170,154,19,93,9,10,29,150,148,15,48,169,198,252,150,227,169,107,204,170,154,15,93,9,10,29,150,52,211,222,249,46,249,37,6,102,84,205,135,174,4,133,14,75,201,115,231,213,120,223,122,28,118,103,86,213,124,232,74,80,232,176,148,60,244,92,141,247,25,2,51,170,230,66,87,130,66,135,165,220,222,222,150,227,125,134,192,140,170,185,208,149,160,208,97,41,121,127,118,53,222,103,8,204,168,154,11,93,9,10,29,150,162,208,97,46,213,92,232,74,80,232,176,20,133,14,115,169,230,66,87,130,66,135,165,228,82,175,213,120,159,33,48,163,106,46,116,37,40,116,88,202,172,87,185,231,189,247,48,163,106,62,116,37,40,116,88,74,46,251,90,141,247,173,199,125,232,204,170,154,15,93,9,10,29,150,52,195,67,89,246,147,79,148,131,25,85,243,161,43,65,161,195,146,102,188,48,206,163,84,153,85,53,31,186,18,20,58,44,41,31,39,154,207,13,175,198,253,22,99,29,119,102,86,205,137,174,4,133,14,75,203,82,223,250,83,215,242,66,184,60,26,1,51,171,230,70,87,130,66,135,46,121,145,92,46,7,155,231,152,243,194,177,83,82,205,159,83,147,231,247,171,207,56,38,89,226,249,59,229,151,22,152,93,53,207,186,18,20,58,92,147,106,254,156,26,123,212,48,86,53,207,186,18,20,58,92,147,106,254,156,26,133,14,99,85,243,172,43,65,161,195,53,169,230,207,169,81,232,48,86,53,207,186,18,20,58,44,33,207,41,223,220,220,60,188,126,253,122,186,123,209,243,247,205,223,219,185,117,102,83,205,135,174,4,133,14,163,229,26,238,121,213,119,53,214,103,75,254,59,228,191,7,204,160,154,3,93,9,10,29,70,154,249,129,44,31,75,174,107,15,91,87,141,253,174,4,133,14,35,205,184,212,235,33,201,91,220,96,235,170,177,223,149,160,208,97,20,123,231,31,143,37,97,217,186,106,220,119,37,40,116,24,37,23,140,169,198,183,252,146,188,72,16,182,172,26,247,93,9,10,29,70,201,195,202,213,248,150,95,226,41,108,108,93,53,238,187,18,20,58,140,162,208,63,30,231,209,217,186,106,220,119,37,40,116,24,165,26,219,242,107,20,58,91,87,141,251,174,4,133,14,163,84,99,91,126,141,66,103,235,170,113,223,149,160,208,97,148,106,108,203,175,81,232,108,93,53,238,187,18,20,58,140,226,28,250,199,147,203,193,194,150,85,227,190,43,65,161,195,40,10,253,227,241,48,24,182,174,26,247,93,9,10,29,70,201,194,170,198,183,252,18,107,186,179,117,213,184,239,74,80,232,48,74,174,132,86,141,111,249,37,158,188,198,214,85,227,190,43,65,161,195,72,14,187,215,177,168,12,51,168,198,126,87,130,66,135,145,114,47,244,213,171,87,229,56,159,53,249,239,97,239,156,25,84,227,191,43,65,161,195,104,89,94,214,117,255,37,249,239,160,204,153,69,53,7,186,18,20,58,44,37,139,44,47,4,203,139,229,242,150,173,60,28,127,106,170,121,83,229,197,139,23,67,143,16,84,219,242,177,228,239,153,191,239,237,237,173,34,103,58,213,28,234,74,80,232,176,118,249,148,178,106,222,84,201,82,125,247,238,93,249,179,83,2,28,174,154,67,93,9,10,29,214,44,247,114,115,175,187,154,55,85,20,58,92,78,53,135,186,18,20,58,172,89,22,116,53,103,158,75,103,161,231,151,141,60,180,158,231,201,243,115,51,249,223,121,200,61,111,225,131,217,84,115,168,43,65,161,195,90,157,178,80,77,87,161,31,178,109,121,100,33,11,254,254,254,254,241,111,193,182,85,243,160,43,65,161,195,26,229,158,111,53,87,62,149,165,11,61,247,202,79,185,232,46,191,0,192,214,85,99,191,43,65,161,195,218,156,90,230,153,165,11,61,223,191,122,221,33,249,230,155,111,30,223,5,182,169,26,247,93,9,10,29,214,228,156,50,207,44,89,232,231,110,91,38,183,13,182,170,26,243,93,9,10,29,214,32,15,101,231,30,108,53,63,142,201,146,133,254,242,229,203,242,53,199,196,35,84,217,178,106,204,119,37,40,116,184,180,44,224,17,101,153,89,170,208,115,129,156,234,231,167,4,182,170,26,239,93,9,10,29,46,37,175,254,206,61,214,106,78,156,154,165,10,125,228,82,182,14,187,179,85,213,120,239,74,80,232,208,45,15,175,159,114,75,218,33,89,170,208,243,125,171,159,159,18,133,206,86,85,227,189,43,65,161,67,151,220,35,207,61,221,99,86,126,59,54,75,21,122,245,179,83,163,208,217,170,106,188,119,37,40,116,88,90,174,154,54,226,130,183,67,50,186,208,243,75,200,200,243,231,153,60,66,1,91,84,141,247,174,4,133,14,75,89,226,28,249,167,50,186,208,151,8,108,85,53,222,187,18,20,58,44,97,169,115,228,159,202,218,11,61,79,55,192,86,85,99,190,43,65,161,195,72,167,46,141,58,42,121,104,127,205,133,158,95,56,96,171,170,49,223,149,160,208,97,148,75,151,121,38,143,12,172,185,208,243,162,64,216,170,106,204,119,37,40,116,24,97,13,101,158,201,50,95,115,161,231,242,177,176,85,213,152,239,74,80,232,48,194,200,133,87,78,205,238,252,244,154,11,221,163,84,217,178,106,204,119,37,40,116,56,87,150,84,53,174,187,179,123,68,233,90,11,61,151,183,133,45,171,198,125,87,130,66,135,115,221,220,220,148,227,186,51,79,47,54,91,107,161,123,124,42,91,87,141,251,174,4,133,14,231,234,190,215,124,63,121,238,254,233,98,45,107,45,244,92,160,6,182,172,26,247,93,9,10,29,206,149,123,199,213,184,238,200,126,153,167,181,22,250,254,118,194,214,84,227,190,43,65,161,195,185,46,85,232,85,153,239,84,175,191,100,28,110,103,6,213,216,239,74,80,232,112,174,75,92,225,254,169,130,92,242,1,48,167,36,143,26,192,214,85,99,191,43,65,161,195,185,242,222,234,106,92,47,145,44,234,67,238,229,190,244,121,253,167,177,58,28,179,168,198,127,87,130,66,135,115,229,97,239,106,92,143,78,30,98,207,39,183,29,162,243,75,198,167,98,239,156,89,84,227,191,43,65,161,195,8,75,62,30,53,247,202,119,247,152,31,42,191,100,172,225,176,187,165,94,153,73,53,7,186,18,20,58,140,176,212,226,50,249,69,225,212,213,213,46,189,151,238,66,56,102,83,205,131,174,4,133,14,163,140,124,100,106,158,119,30,113,168,250,82,165,110,207,156,25,85,115,161,43,65,161,195,72,231,62,160,229,156,61,242,231,228,251,45,121,74,224,105,242,98,60,231,204,153,85,53,39,186,18,20,58,140,148,231,174,143,189,194,60,191,4,228,242,177,75,47,188,146,239,159,171,181,229,145,132,44,248,60,10,112,110,114,79,124,247,200,214,165,183,31,214,174,154,223,93,9,10,29,150,144,5,151,165,89,93,152,150,69,152,63,203,195,225,163,247,198,129,203,217,159,235,157,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,186,228,163,79,115,69,184,221,42,109,107,120,26,218,169,121,249,242,229,223,86,138,179,64,14,252,162,154,43,93,9,10,29,150,150,133,151,5,88,141,253,45,37,11,62,127,87,152,85,53,47,186,18,20,58,44,37,247,200,103,40,242,253,100,177,91,215,157,25,85,243,161,43,65,161,195,18,178,204,175,249,144,250,185,201,7,206,40,117,102,83,205,133,174,4,133,14,75,152,113,207,124,63,249,212,57,152,73,53,15,186,18,20,58,140,150,231,145,171,113,62,99,242,72,5,204,162,154,3,93,9,10,29,70,203,195,205,213,56,159,49,121,69,63,204,162,154,3,93,9,10,29,70,202,219,183,170,49,62,107,242,58,2,152,69,53,7,186,18,20,58,140,148,247,153,87,99,252,18,89,203,69,121,14,187,51,139,106,252,119,37,40,116,24,41,15,49,87,99,124,230,228,151,28,152,65,53,254,187,18,20,58,140,148,247,96,87,99,124,230,124,251,237,183,143,255,58,176,109,213,248,239,74,80,232,48,210,204,247,158,63,151,252,146,3,51,168,198,127,87,130,66,135,145,170,241,61,123,20,58,179,168,198,127,87,130,66,135,145,170,241,189,166,92,226,28,127,46,178,3,51,168,198,127,87,130,66,135,81,242,106,238,106,124,175,41,121,62,251,221,187,119,31,86,113,235,92,205,14,102,80,141,253,174,4,133,14,163,100,81,86,227,251,152,100,201,230,33,234,253,228,99,74,179,132,171,191,179,68,242,179,222,190,125,251,225,247,26,241,185,48,131,106,236,119,37,40,116,24,101,68,161,87,87,132,231,67,78,178,212,171,215,47,157,60,68,159,219,84,253,236,152,192,12,170,177,223,149,160,208,97,148,37,10,61,247,146,47,125,229,252,136,67,243,48,131,106,236,119,37,40,116,24,101,100,161,231,94,121,231,33,246,165,3,51,168,198,126,87,130,66,135,81,70,20,122,174,170,182,134,189,242,209,129,25,84,99,191,43,65,161,195,40,35,10,253,82,231,202,151,14,204,160,26,251,93,9,10,29,70,25,81,232,91,13,204,160,26,251,93,9,10,29,70,81,232,207,7,102,80,141,253,174,4,133,14,163,40,244,231,3,51,168,198,126,87,130,66,135,81,214,88,232,107,185,184,14,102,80,141,253,174,4,133,14,163,108,117,15,221,125,232,112,152,106,236,119,37,40,116,24,101,139,133,158,101,110,165,56,56,76,53,246,187,18,20,58,140,178,197,66,191,189,189,85,232,112,160,106,236,119,37,40,116,24,101,107,133,158,247,196,39,133,14,135,169,198,126,87,130,66,135,81,182,84,232,121,49,93,62,14,54,41,116,56,76,53,246,187,18,20,58,140,178,165,66,207,67,237,59,10,29,14,83,141,253,174,4,133,14,163,140,40,244,124,32,203,165,151,127,205,71,166,62,165,208,225,48,213,216,239,74,80,232,48,202,168,61,244,251,251,251,15,201,189,228,87,175,94,93,228,94,242,44,245,220,134,148,255,91,189,230,152,192,12,170,177,223,149,160,208,97,148,81,133,158,69,158,133,90,253,172,59,187,98,207,47,22,213,207,15,13,204,160,26,251,93,9,10,29,70,217,210,57,244,253,156,123,164,0,102,80,141,253,174,4,133,14,163,156,83,232,91,123,254,249,126,96,6,213,216,239,74,80,232,48,202,169,133,62,98,105,213,181,7,102,80,141,253,174,4,133,14,163,156,82,232,185,103,126,141,123,231,199,110,51,204,160,26,251,93,9,10,29,70,57,181,208,171,63,95,123,20,58,252,163,106,236,119,37,40,116,24,229,148,66,159,225,112,123,6,102,80,141,253,174,4,133,14,163,204,180,135,126,108,96,6,213,216,239,74,80,232,48,138,66,127,62,48,131,106,236,119,37,40,116,24,229,148,66,159,37,48,131,106,236,119,37,40,116,24,165,187,208,215,178,154,220,33,129,25,84,99,191,43,65,161,195,40,221,133,254,246,237,219,171,185,168,14,102,80,141,253,174,4,133,14,163,116,22,122,158,123,207,53,214,179,212,171,159,175,45,48,131,106,236,119,37,40,116,24,229,82,231,208,71,236,165,31,123,113,222,177,159,9,51,168,198,126,87,130,66,135,81,206,45,244,75,29,62,207,231,175,31,243,217,167,60,175,29,102,80,141,253,174,4,133,14,163,156,91,232,249,68,179,221,163,83,179,52,119,249,246,219,111,79,42,209,67,147,219,125,232,182,231,118,156,114,171,29,204,160,26,251,93,9,10,29,70,25,113,200,61,11,125,95,158,43,175,94,59,34,89,206,187,47,14,249,133,34,255,247,233,222,122,254,119,254,217,235,215,175,207,58,130,0,51,168,198,126,87,130,66,135,81,70,20,122,238,141,239,123,243,230,77,249,218,83,178,219,187,126,238,249,230,55,55,55,143,159,250,171,247,239,223,159,125,58,0,102,80,141,253,174,4,133,14,163,44,85,232,89,190,213,107,79,205,167,202,57,175,156,127,42,143,26,84,175,59,38,48,131,106,236,119,37,40,116,24,101,169,66,175,94,183,100,242,11,196,83,185,77,213,235,142,9,204,160,26,251,93,9,10,29,70,217,74,161,103,158,82,232,112,152,106,236,119,37,40,116,24,101,169,66,63,247,252,245,41,121,74,161,195,97,170,177,223,149,160,208,97,148,165,10,253,18,107,182,63,165,208,225,48,213,216,239,74,80,232,48,202,82,133,62,226,42,243,99,146,159,245,148,66,135,195,84,99,191,43,65,161,195,40,35,10,61,239,249,206,2,221,79,94,105,158,247,130,159,178,168,203,177,201,207,201,47,17,249,153,249,217,185,77,213,235,142,9,204,160,26,251,93,9,10,29,70,25,81,232,107,200,18,95,28,96,6,213,216,239,74,80,232,48,74,238,213,86,227,251,218,50,186,204,243,253,96,6,213,248,239,74,80,232,48,82,53,190,103,79,30,178,135,25,84,227,191,43,65,161,195,72,213,248,190,166,44,113,142,94,161,51,139,106,252,119,37,40,116,24,105,244,50,173,93,201,43,219,151,186,224,46,111,187,131,25,84,227,191,43,65,161,195,72,35,174,8,239,206,210,183,196,229,149,242,48,131,106,252,119,37,40,116,24,41,203,171,26,227,51,39,175,254,135,25,84,227,191,43,65,161,195,72,249,164,178,106,140,207,28,152,69,53,254,187,18,20,58,140,182,212,185,232,107,76,222,211,14,179,168,230,64,87,130,66,135,209,46,177,246,250,90,179,255,108,117,216,178,106,14,116,37,40,116,24,237,254,254,190,28,231,179,101,255,185,234,176,117,213,60,232,74,80,232,176,132,55,111,222,148,99,125,150,228,105,135,187,187,187,199,127,13,152,67,53,23,186,18,20,58,44,101,214,67,239,202,156,89,85,243,161,43,65,161,195,146,110,110,110,166,186,72,46,47,130,203,83,14,48,163,106,78,116,37,40,116,232,208,249,248,211,238,228,185,242,60,197,160,200,153,93,53,63,186,18,20,58,116,203,226,203,197,86,114,239,125,247,188,243,107,75,94,189,110,193,24,248,123,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,102,243,254,253,251,143,222,54,151,247,204,187,37,13,142,87,245,91,87,130,66,135,75,200,123,209,179,56,115,65,150,47,190,248,162,76,254,44,95,51,106,193,150,188,119,60,23,129,169,230,96,149,92,4,39,151,175,181,96,12,28,166,154,71,93,9,10,29,58,229,222,241,41,107,188,159,91,172,231,172,43,111,109,118,56,76,53,127,186,18,20,58,116,201,66,62,103,233,215,252,187,167,148,122,30,62,175,222,239,152,188,124,249,242,241,221,128,231,84,115,167,43,65,161,67,151,60,140,94,141,255,99,146,239,113,172,92,67,190,122,175,99,147,135,255,129,231,85,243,166,43,65,161,67,135,60,100,93,141,253,83,114,236,225,239,234,61,78,73,126,49,0,158,87,205,155,174,4,133,14,29,242,234,241,106,236,159,146,124,175,67,141,252,34,145,23,212,1,207,171,230,77,87,130,66,135,14,231,92,148,182,159,99,246,148,71,156,63,127,26,224,121,213,156,233,74,80,232,208,97,196,249,243,93,142,57,143,174,208,161,79,53,103,186,18,20,58,116,80,232,176,125,213,156,233,74,80,232,208,65,161,195,246,85,115,166,43,65,161,67,7,133,14,219,87,205,153,174,4,133,14,29,20,58,108,95,53,103,186,18,20,58,116,80,232,176,125,213,156,233,74,80,232,208,65,161,195,246,85,115,166,43,65,161,67,7,133,14,219,87,205,153,174,4,133,14,29,70,22,122,174,216,150,69,125,72,242,153,231,213,123,156,154,234,51,246,147,79,148,131,25,85,115,166,43,65,161,67,135,145,133,126,13,201,167,179,121,152,11,179,169,230,66,87,130,66,135,14,179,21,250,46,185,228,45,204,162,154,3,93,9,10,29,58,204,90,232,153,99,30,38,3,215,172,26,255,93,9,10,29,58,204,92,232,47,94,188,120,252,87,128,109,171,198,127,87,130,66,135,14,51,23,122,230,237,219,183,143,255,18,176,93,213,216,239,74,80,232,208,97,246,66,119,216,157,25,84,99,191,43,65,161,67,135,217,11,61,127,127,216,186,106,236,119,37,40,116,232,160,208,21,58,219,87,141,253,174,4,133,14,29,20,186,66,103,251,170,177,223,149,160,208,161,131,66,87,232,108,95,53,246,187,18,20,58,116,80,232,10,157,237,171,198,126,87,130,66,135,14,10,93,161,179,125,213,216,239,74,80,232,208,97,246,66,119,219,26,51,168,198,126,87,130,66,135,14,179,23,186,133,101,152,65,53,246,187,18,20,58,116,152,185,208,115,233,87,143,84,101,6,213,248,239,74,80,232,208,97,230,66,119,184,157,89,84,227,191,43,65,161,67,135,89,11,253,205,155,55,143,255,2,176,125,213,28,232,74,80,232,208,225,213,171,87,229,216,63,37,249,94,249,5,97,205,201,189,242,187,187,187,199,223,30,230,80,205,215,174,4,133,14,29,170,113,127,106,222,189,123,247,248,174,192,154,84,243,181,43,65,161,67,135,106,220,159,26,133,14,235,84,205,215,174,4,133,14,29,170,113,127,106,20,58,172,83,53,95,187,18,20,58,44,45,207,37,87,227,254,90,146,183,157,229,121,241,188,192,205,253,228,240,188,106,254,116,37,40,116,88,90,238,81,87,227,254,90,243,242,229,203,135,219,219,219,199,223,14,216,169,230,75,87,130,66,135,165,229,94,109,53,238,175,61,185,215,110,193,24,248,85,53,79,186,18,20,58,44,45,111,225,170,198,253,22,146,183,208,41,117,248,69,53,71,186,18,20,58,44,45,207,61,87,227,126,43,121,253,250,245,227,111,10,115,171,230,71,87,130,66,135,165,229,161,233,106,220,111,41,174,188,7,133,254,33,176,101,121,17,89,53,238,183,20,123,233,160,208,63,4,182,42,207,47,87,99,126,139,113,46,157,217,85,243,162,43,65,161,195,146,182,118,203,218,199,226,176,59,179,171,230,69,87,130,66,135,37,109,249,10,247,253,120,76,42,179,171,230,69,87,130,66,135,37,229,185,229,106,204,111,49,10,157,217,85,243,162,43,65,161,195,146,114,217,212,106,204,111,49,10,157,217,85,243,162,43,65,161,195,82,174,125,13,247,99,163,208,153,93,53,47,186,18,20,58,44,229,230,230,166,28,239,91,141,66,103,118,213,188,232,74,80,232,176,148,153,206,159,103,20,58,179,171,230,69,87,130,66,135,165,204,116,254,60,163,208,153,93,53,47,186,18,20,58,44,97,171,79,88,251,88,20,58,179,171,230,69,87,130,66,135,37,108,253,129,44,85,20,58,179,171,230,69,87,130,66,135,37,140,94,191,253,246,246,246,241,157,199,25,189,44,173,66,103,118,213,188,232,74,80,232,48,218,18,183,171,45,181,78,122,245,89,167,70,161,51,187,106,94,116,37,40,116,24,109,244,225,246,87,175,94,61,190,243,120,213,231,157,26,133,206,236,170,121,209,149,160,208,97,180,209,135,219,243,11,194,82,170,207,59,53,10,157,217,85,243,162,43,65,161,195,72,75,28,110,95,242,41,102,213,231,157,26,133,206,236,170,121,209,149,160,208,97,164,209,135,219,243,94,246,37,85,159,121,106,20,58,179,171,230,69,87,130,66,135,145,70,47,38,147,171,205,45,169,250,204,83,163,208,153,93,53,47,186,18,20,58,140,178,196,98,50,75,220,174,246,84,245,153,167,70,161,51,187,106,94,116,37,40,116,24,229,155,111,190,41,199,247,57,89,234,118,181,157,234,51,79,141,66,103,118,213,188,232,74,80,232,48,202,181,29,110,79,213,231,158,26,133,206,236,170,121,209,149,160,208,97,132,188,18,189,26,219,231,100,233,195,237,169,250,220,83,163,208,153,93,53,47,186,18,20,58,140,144,101,86,141,237,83,147,123,251,75,31,110,79,213,103,159,26,133,206,236,170,121,209,149,160,208,97,132,209,207,62,207,243,241,29,170,207,62,53,10,157,217,85,243,162,43,65,161,195,8,95,124,241,69,57,182,79,205,146,139,201,60,85,125,246,169,81,232,204,174,154,23,93,9,10,29,70,24,89,232,75,174,221,190,175,250,252,83,163,208,153,93,53,47,186,18,20,58,140,48,114,133,184,142,139,225,118,170,207,63,53,10,157,217,85,243,162,43,65,161,195,8,163,174,114,239,220,59,79,249,121,213,118,156,146,92,88,7,102,86,205,139,174,4,133,14,163,140,56,236,222,117,238,124,103,228,145,133,142,171,242,97,205,170,121,209,149,160,208,97,148,124,210,218,57,139,203,44,249,152,212,231,220,223,223,151,219,114,108,186,174,202,135,53,171,230,70,87,130,66,135,145,178,32,79,217,83,239,62,212,254,84,158,251,174,182,233,208,228,151,152,252,189,97,118,213,252,232,74,80,232,176,132,60,159,124,104,177,231,222,237,165,15,87,231,133,120,167,28,93,200,223,81,153,195,47,170,57,210,149,160,208,97,73,89,118,55,55,55,31,22,158,121,90,240,185,71,158,69,222,125,206,252,83,242,139,72,30,250,207,109,221,255,66,242,242,229,203,15,127,150,191,75,238,213,231,41,6,224,87,79,231,75,119,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,172,163,208,127,250,233,167,220,24,0,184,74,217,99,85,191,117,37,172,163,208,127,248,225,135,220,24,0,184,74,217,99,85,191,117,37,172,163,208,191,251,238,187,220,24,0,184,74,217,99,85,191,117,37,172,163,208,191,254,250,235,220,24,0,184,74,217,99,85,191,117,37,172,163,208,63,251,236,179,135,31,127,252,49,55,8,0,174,202,253,253,253,135,30,171,250,173,43,97,29,133,158,249,234,171,175,114,131,0,224,170,100,127,85,189,214,153,176,158,66,207,220,220,220,228,70,1,192,85,200,222,170,250,172,59,97,93,133,158,135,44,254,248,199,63,62,252,252,243,207,185,113,0,176,74,217,83,217,87,151,62,212,190,75,88,87,161,239,242,249,231,159,63,124,255,253,247,185,129,0,176,42,217,79,217,83,85,127,93,42,97,157,133,158,201,111,61,95,126,249,229,195,159,255,252,231,135,187,187,187,220,88,0,184,136,236,161,183,111,223,126,232,165,181,236,149,63,77,88,111,161,139,136,136,200,97,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,100,191,208,255,107,255,5,34,34,34,178,250,124,191,95,232,175,247,94,32,34,34,34,235,207,235,253,66,255,221,222,11,68,68,68,100,253,249,221,126,161,255,118,239,5,34,34,34,178,254,252,118,191,208,127,19,249,250,201,11,68,68,68,100,221,249,207,200,111,246,11,61,243,175,143,47,16,17,17,145,245,39,123,251,67,143,239,23,122,230,255,68,170,191,36,34,34,34,235,73,246,245,135,238,126,174,208,255,57,242,191,34,127,137,84,111,32,34,34,34,151,75,246,115,246,116,246,245,71,11,125,151,127,137,252,123,164,122,51,17,17,17,233,79,246,242,127,139,252,93,103,127,170,208,51,217,254,255,35,242,127,35,255,17,169,222,92,68,68,68,150,75,246,239,191,69,178,143,255,182,87,254,52,127,87,232,34,34,34,114,221,41,255,80,68,68,68,174,41,15,255,244,255,1,197,169,40,168,140,147,209,125,0,0,0,0,73,69,78,68,174,66,96,130],\"xdbid\":191},{\"tplx\":\"2\",\"tpnr\":[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,1,244,0,0,1,244,8,6,0,0,0,203,214,223,138,0,0,0,4,103,65,77,65,0,0,177,142,124,251,81,147,0,0,0,32,99,72,82,77,0,0,135,15,0,0,140,15,0,0,253,82,0,0,129,64,0,0,125,121,0,0,233,139,0,0,60,229,0,0,25,204,115,60,133,119,0,0,10,57,105,67,67,80,80,104,111,116,111,115,104,111,112,32,73,67,67,32,112,114,111,102,105,108,101,0,0,72,199,157,150,119,84,84,215,22,135,207,189,119,122,161,205,48,2,82,134,222,187,192,0,210,123,147,94,69,97,152,25,96,40,3,14,51,52,177,33,162,2,17,69,68,154,34,72,80,196,128,209,80,36,86,68,177,16,20,84,176,7,36,8,40,49,24,69,84,44,111,70,214,139,174,172,188,247,242,242,251,227,172,111,237,179,247,185,251,236,189,207,90,23,0,146,167,47,151,151,6,75,1,144,202,19,240,131,60,156,233,17,145,81,116,236,0,128,1,30,96,128,41,0,76,86,70,186,95,176,123,8,16,201,203,205,133,158,33,114,2,95,4,1,240,122,88,188,2,112,211,208,51,128,78,7,255,159,164,89,233,124,129,232,152,0,17,155,179,57,25,44,17,23,136,56,37,75,144,46,182,207,138,152,26,151,44,102,24,37,102,190,40,65,17,203,137,57,97,145,13,62,251,44,178,163,152,217,169,60,182,136,197,57,167,179,83,217,98,238,21,241,182,76,33,71,196,136,175,136,11,51,185,156,44,17,223,18,177,70,138,48,149,43,226,55,226,216,84,14,51,3,0,20,73,108,23,112,88,137,34,54,17,49,137,31,18,228,34,226,229,0,224,72,9,95,113,220,87,44,224,100,11,196,151,114,73,75,207,225,115,19,18,5,116,29,150,46,221,212,218,154,65,247,228,100,165,112,4,2,195,0,38,43,153,201,103,211,93,210,82,211,153,188,28,0,22,239,252,89,50,226,218,210,69,69,182,52,181,182,180,52,52,51,50,253,170,80,255,117,243,111,74,220,219,69,122,25,248,185,103,16,173,255,139,237,175,252,210,26,0,96,204,137,106,179,243,139,45,174,10,128,206,45,0,200,221,251,98,211,56,0,128,164,168,111,29,215,191,186,15,77,60,47,137,2,65,186,141,177,113,86,86,150,17,151,195,50,18,23,244,15,253,79,135,191,161,175,190,103,36,62,238,143,242,208,93,57,241,76,97,138,128,46,174,27,43,45,37,77,200,167,103,164,51,89,28,186,225,159,135,248,31,7,254,117,30,6,65,156,120,14,159,195,19,69,132,137,166,140,203,75,16,181,155,199,230,10,184,105,60,58,151,247,159,154,248,15,195,254,164,197,185,22,137,210,248,17,80,99,140,128,212,117,42,64,126,237,7,40,10,17,32,209,251,197,93,255,163,111,190,248,48,32,126,121,225,42,147,139,115,255,239,55,253,103,193,165,226,37,131,155,240,57,206,37,40,132,206,18,242,51,23,247,196,207,18,160,1,1,72,2,42,144,7,202,64,29,232,0,67,96,6,172,128,45,112,4,110,192,27,248,131,16,16,9,86,3,22,72,4,169,128,15,178,64,30,216,4,10,65,49,216,9,246,128,106,80,7,26,65,51,104,5,199,65,39,56,5,206,131,75,224,26,184,1,110,131,251,96,20,76,128,103,96,22,188,6,11,16,4,97,33,50,68,129,228,33,21,72,19,210,135,204,32,6,100,15,185,65,190,80,16,20,9,197,66,9,16,15,18,66,121,208,102,168,24,42,131,170,161,122,168,25,250,30,58,9,157,135,174,64,131,208,93,104,12,154,134,126,135,222,193,8,76,130,169,176,18,172,5,27,195,12,216,9,246,129,67,224,85,112,2,188,6,206,133,11,224,29,112,37,220,0,31,133,59,224,243,240,53,248,54,60,10,63,131,231,16,128,16,17,26,162,138,24,34,12,196,5,241,71,162,144,120,132,143,172,71,138,144,10,164,1,105,69,186,145,62,228,38,50,138,204,32,111,81,24,20,5,69,71,25,162,108,81,158,168,80,20,11,181,6,181,30,85,130,170,70,29,70,117,160,122,81,55,81,99,168,89,212,71,52,25,173,136,214,71,219,160,189,208,17,232,4,116,22,186,16,93,129,110,66,183,163,47,162,111,163,39,208,175,49,24,12,13,163,141,177,194,120,98,34,49,73,152,181,152,18,204,62,76,27,230,28,102,16,51,142,153,195,98,177,242,88,125,172,29,214,31,203,196,10,176,133,216,42,236,81,236,89,236,16,118,2,251,6,71,196,169,224,204,112,238,184,40,28,15,151,143,171,192,29,193,157,193,13,225,38,113,11,120,41,188,38,222,6,239,143,103,227,115,240,165,248,70,124,55,254,58,126,2,191,64,144,38,104,19,236,8,33,132,36,194,38,66,37,161,149,112,145,240,128,240,146,72,36,170,17,173,137,129,68,46,113,35,177,146,120,140,120,153,56,70,124,75,146,33,233,145,92,72,209,36,33,105,7,233,16,233,28,233,46,233,37,153,76,214,34,59,146,163,200,2,242,14,114,51,249,2,249,17,249,141,4,69,194,72,194,75,130,45,177,65,162,70,162,67,98,72,226,185,36,94,82,83,210,73,114,181,100,174,100,133,228,9,201,235,146,51,82,120,41,45,41,23,41,166,212,122,169,26,169,147,82,35,82,115,210,20,105,83,105,127,233,84,233,18,233,35,210,87,164,167,100,176,50,90,50,110,50,108,153,2,153,131,50,23,100,198,41,8,69,157,226,66,97,81,54,83,26,41,23,41,19,84,12,85,155,234,69,77,162,22,83,191,163,14,80,103,101,101,100,151,201,134,201,102,203,214,200,158,150,29,165,33,52,45,154,23,45,133,86,74,59,78,27,166,189,91,162,180,196,105,9,103,201,246,37,173,75,134,150,204,203,45,149,115,148,227,200,21,201,181,201,221,150,123,39,79,151,119,147,79,150,223,37,223,41,255,80,1,165,160,167,16,168,144,165,176,95,225,162,194,204,82,234,82,219,165,172,165,69,75,143,47,189,167,8,43,234,41,6,41,174,85,60,168,216,175,56,167,164,172,228,161,148,174,84,165,116,65,105,70,153,166,236,168,156,164,92,174,124,70,121,90,133,162,98,175,194,85,41,87,57,171,242,148,46,75,119,162,167,208,43,233,189,244,89,85,69,85,79,85,161,106,189,234,128,234,130,154,182,90,168,90,190,90,155,218,67,117,130,58,67,61,94,189,92,189,71,125,86,67,69,195,79,35,79,163,69,227,158,38,94,147,161,153,168,185,87,179,79,115,94,75,91,43,92,107,171,86,167,214,148,182,156,182,151,118,174,118,139,246,3,29,178,142,131,206,26,157,6,157,91,186,24,93,134,110,178,238,62,221,27,122,176,158,133,94,162,94,141,222,117,125,88,223,82,159,171,191,79,127,208,0,109,96,109,192,51,104,48,24,49,36,25,58,25,102,26,182,24,142,25,209,140,124,141,242,141,58,141,158,27,107,24,71,25,239,50,238,51,254,104,98,97,146,98,210,104,114,223,84,198,212,219,52,223,180,219,244,119,51,61,51,150,89,141,217,45,115,178,185,187,249,6,243,46,243,23,203,244,151,113,150,237,95,118,199,130,98,225,103,177,213,162,199,226,131,165,149,37,223,178,213,114,218,74,195,42,214,170,214,106,132,65,101,4,48,74,24,151,173,209,214,206,214,27,172,79,89,191,181,177,180,17,216,28,183,249,205,214,208,54,217,246,136,237,212,114,237,229,156,229,141,203,199,237,212,236,152,118,245,118,163,246,116,251,88,251,3,246,163,14,170,14,76,135,6,135,199,142,234,142,108,199,38,199,73,39,93,167,36,167,163,78,207,157,77,156,249,206,237,206,243,46,54,46,235,92,206,185,34,174,30,174,69,174,3,110,50,110,161,110,213,110,143,220,213,220,19,220,91,220,103,61,44,60,214,122,156,243,68,123,250,120,238,242,28,241,82,242,98,121,53,123,205,122,91,121,175,243,238,245,33,249,4,251,84,251,60,246,213,243,229,251,118,251,193,126,222,126,187,253,30,172,208,92,193,91,209,233,15,252,189,252,119,251,63,12,208,14,88,19,240,99,32,38,48,32,176,38,240,73,144,105,80,94,80,95,48,37,56,38,248,72,240,235,16,231,144,210,144,251,161,58,161,194,208,158,48,201,176,232,176,230,176,249,112,215,240,178,240,209,8,227,136,117,17,215,34,21,34,185,145,93,81,216,168,176,168,166,168,185,149,110,43,247,172,156,136,182,136,46,140,30,94,165,189,42,123,213,149,213,10,171,83,86,159,142,145,140,97,198,156,136,69,199,134,199,30,137,125,207,244,103,54,48,231,226,188,226,106,227,102,89,46,172,189,172,103,108,71,118,57,123,154,99,199,41,227,76,198,219,197,151,197,79,37,216,37,236,78,152,78,116,72,172,72,156,225,186,112,171,185,47,146,60,147,234,146,230,147,253,147,15,37,127,74,9,79,105,75,197,165,198,166,158,228,201,240,146,121,189,105,202,105,217,105,131,233,250,233,133,233,163,107,108,214,236,89,51,203,247,225,55,101,64,25,171,50,186,4,84,209,207,84,191,80,71,184,69,56,150,105,159,89,147,249,38,43,44,235,68,182,116,54,47,187,63,71,47,103,123,206,100,174,123,238,183,107,81,107,89,107,123,242,84,243,54,229,141,173,115,90,87,191,30,90,31,183,190,103,131,250,134,130,13,19,27,61,54,30,222,68,216,148,188,233,167,124,147,252,178,252,87,155,195,55,119,23,40,21,108,44,24,223,226,177,165,165,80,162,144,95,56,178,213,118,107,221,54,212,54,238,182,129,237,230,219,171,182,127,44,98,23,93,45,54,41,174,40,126,95,194,42,185,250,141,233,55,149,223,124,218,17,191,99,160,212,178,116,255,78,204,78,222,206,225,93,14,187,14,151,73,151,229,150,141,239,246,219,221,81,78,47,47,42,127,181,39,102,207,149,138,101,21,117,123,9,123,133,123,71,43,125,43,187,170,52,170,118,86,189,175,78,172,190,93,227,92,211,86,171,88,187,189,118,126,31,123,223,208,126,199,253,173,117,74,117,197,117,239,14,112,15,220,169,247,168,239,104,208,106,168,56,136,57,152,121,240,73,99,88,99,223,183,140,111,155,155,20,154,138,155,62,28,226,29,26,61,28,116,184,183,217,170,185,249,136,226,145,210,22,184,69,216,50,125,52,250,232,141,239,92,191,235,106,53,108,173,111,163,181,21,31,3,199,132,199,158,126,31,251,253,240,113,159,227,61,39,24,39,90,127,208,252,161,182,157,210,94,212,1,117,228,116,204,118,38,118,142,118,69,118,13,158,244,62,217,211,109,219,221,254,163,209,143,135,78,169,158,170,57,45,123,186,244,12,225,76,193,153,79,103,115,207,206,157,75,63,55,115,62,225,252,120,79,76,207,253,11,17,23,110,245,6,246,14,92,244,185,120,249,146,251,165,11,125,78,125,103,47,219,93,62,117,197,230,202,201,171,140,171,157,215,44,175,117,244,91,244,183,255,100,241,83,251,128,229,64,199,117,171,235,93,55,172,111,116,15,46,31,60,51,228,48,116,254,166,235,205,75,183,188,110,93,187,189,226,246,224,112,232,240,157,145,232,145,209,59,236,59,83,119,83,238,190,184,151,121,111,225,254,198,7,232,7,69,15,165,30,86,60,82,124,212,240,179,238,207,109,163,150,163,167,199,92,199,250,31,7,63,190,63,206,26,127,246,75,198,47,239,39,10,158,144,159,84,76,170,76,54,79,153,77,157,154,118,159,190,241,116,229,211,137,103,233,207,22,102,10,127,149,254,181,246,185,206,243,31,126,115,252,173,127,54,98,118,226,5,255,197,167,223,75,94,202,191,60,244,106,217,171,158,185,128,185,71,175,83,95,47,204,23,189,145,127,115,248,45,227,109,223,187,240,119,147,11,89,239,177,239,43,63,232,126,232,254,232,243,241,193,167,212,79,159,254,5,3,152,243,252,186,196,232,211,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,35,60,73,68,65,84,120,94,237,221,237,138,92,87,150,38,224,134,134,186,149,134,185,155,129,129,134,186,140,249,59,119,48,48,151,81,48,208,23,82,110,209,8,235,135,65,254,160,85,148,167,242,71,186,4,45,156,216,89,200,229,156,181,228,140,114,86,212,74,41,62,246,89,113,226,236,231,129,183,203,173,12,69,156,20,123,243,198,249,218,231,159,30,30,30,68,68,68,228,202,243,225,255,252,254,247,191,175,242,207,145,255,30,249,93,228,63,34,63,69,30,68,68,68,164,37,217,187,217,191,217,195,217,199,217,203,255,208,215,159,42,244,127,137,252,123,164,250,0,17,17,17,233,79,246,114,246,243,223,117,246,199,10,253,127,70,126,136,84,111,38,34,34,34,151,75,246,115,246,244,223,122,251,185,66,255,223,145,234,13,68,68,68,100,61,201,190,126,182,208,255,53,82,253,37,17,17,17,89,95,178,183,255,161,208,127,19,249,127,143,47,16,17,17,145,245,231,235,200,111,246,11,253,183,79,94,32,34,34,34,215,145,223,238,23,122,94,18,95,189,80,68,68,68,214,155,223,237,23,250,235,189,23,136,136,136,200,250,243,159,251,133,254,95,123,47,16,17,17,145,245,231,47,251,133,94,189,72,68,68,68,86,30,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,89,117,161,127,246,217,103,15,95,126,249,229,195,119,223,125,247,112,119,119,247,240,243,207,63,231,6,3,64,171,236,159,236,161,236,163,236,165,236,167,170,183,46,153,176,206,66,255,252,243,207,31,190,255,254,251,220,64,0,88,149,236,167,236,169,170,191,46,149,176,190,66,255,195,31,254,240,240,215,191,254,53,55,14,0,86,41,123,42,251,170,234,177,75,36,172,171,208,255,244,167,63,229,70,1,192,85,200,222,170,250,172,59,97,61,133,254,213,87,95,229,6,1,192,85,201,254,170,122,173,51,97,29,133,158,23,24,252,229,47,127,201,13,2,128,171,242,227,143,63,94,252,66,185,176,142,66,255,250,235,175,115,99,0,224,42,101,143,85,253,214,149,176,142,66,207,91,1,0,224,90,101,143,85,253,214,149,176,142,66,255,225,135,31,114,99,0,224,42,221,223,223,151,253,214,149,176,142,66,255,233,167,159,114,99,0,224,42,229,226,51,85,191,117,37,172,163,208,1,224,218,85,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,135,181,120,255,254,253,195,187,119,239,30,190,253,246,219,135,219,219,219,15,255,157,127,6,92,135,170,223,186,18,20,58,172,65,150,248,139,23,47,202,249,241,234,213,171,135,55,111,222,60,220,221,221,61,190,26,88,163,106,254,118,37,40,116,184,164,220,3,207,194,174,230,69,149,47,190,248,98,181,197,158,71,20,238,239,239,31,255,63,152,79,53,103,187,18,20,58,92,82,22,116,53,39,62,150,220,147,191,100,169,103,105,191,125,251,246,195,81,131,234,203,72,110,223,55,223,124,163,220,153,206,254,92,232,76,80,232,112,41,55,55,55,229,124,56,36,89,154,75,159,95,207,66,206,189,238,220,206,44,239,252,242,241,220,105,129,42,249,218,188,22,0,102,81,205,131,174,4,133,14,75,216,149,225,115,201,61,220,99,202,177,74,158,119,175,222,123,151,79,237,197,231,23,130,44,220,124,159,44,235,93,170,207,58,39,206,253,51,139,106,252,119,37,40,116,24,37,75,244,245,235,215,103,23,245,232,228,97,241,253,61,229,44,217,174,237,204,47,9,48,131,106,252,119,37,40,116,24,33,11,179,26,219,107,202,211,98,125,249,242,101,249,154,165,226,124,58,51,168,198,126,87,130,66,135,115,101,89,85,227,122,141,217,29,166,175,126,182,100,156,75,103,6,213,216,239,74,80,232,112,174,188,96,172,26,215,107,204,238,66,181,234,103,75,38,191,72,192,214,85,99,191,43,65,161,195,185,142,185,143,124,13,201,243,252,213,159,47,153,252,210,3,91,87,141,253,174,4,133,14,231,170,198,244,154,179,196,149,236,159,74,222,151,14,91,87,141,253,174,4,133,14,231,170,198,244,154,115,137,66,119,200,157,25,84,99,191,43,65,161,195,185,170,49,189,230,92,162,208,243,190,123,216,186,106,236,119,37,40,116,56,215,200,91,192,242,189,242,156,124,254,239,254,251,102,17,231,207,206,189,215,189,251,150,181,220,86,152,65,53,254,187,18,20,58,156,107,212,69,102,121,225,216,161,101,155,231,164,79,189,24,175,251,34,62,123,231,204,162,26,255,93,9,10,29,206,53,226,190,238,44,242,99,247,186,243,139,196,177,123,219,221,87,184,187,255,156,153,84,115,160,43,65,161,195,8,185,199,92,141,237,165,115,204,249,240,252,194,208,181,157,185,93,249,69,7,102,82,205,133,174,4,133,14,163,228,149,220,231,156,219,62,37,121,248,252,144,207,204,61,243,165,23,148,201,18,207,39,179,89,230,149,89,85,243,162,43,65,161,195,104,185,103,122,206,163,81,71,38,191,100,236,30,179,154,255,93,189,102,169,228,23,141,221,23,9,152,65,53,15,186,18,20,58,44,225,18,203,171,62,151,221,161,239,75,220,174,182,75,126,246,210,207,111,135,75,171,198,126,87,130,66,135,37,116,95,73,254,177,100,153,166,75,22,122,198,242,175,108,93,53,238,187,18,20,58,140,182,198,167,175,229,54,93,186,208,51,206,175,179,101,213,152,239,74,80,232,48,218,154,14,183,239,146,135,221,215,80,232,121,109,1,108,85,53,230,187,18,20,58,140,214,125,241,217,33,89,75,161,91,211,157,45,171,198,124,87,130,66,135,209,20,250,243,201,171,222,97,171,170,49,223,149,160,208,97,180,181,220,178,246,52,119,119,119,246,208,97,97,213,152,239,74,80,232,48,218,218,46,138,203,229,97,147,66,135,101,85,99,190,43,65,161,195,40,185,23,188,91,41,45,111,209,170,198,250,37,178,187,16,237,82,203,211,62,141,7,181,176,101,213,152,239,74,80,232,48,194,254,97,246,220,27,238,126,16,74,149,220,134,252,114,145,219,115,233,123,227,119,71,10,96,171,170,113,223,149,160,208,225,92,31,59,196,158,37,154,201,50,203,100,177,238,231,220,245,223,243,253,247,223,111,247,103,221,107,203,63,151,220,142,60,130,1,91,86,141,253,174,4,133,14,231,90,211,225,245,181,37,139,60,15,245,91,80,134,25,84,115,160,43,65,161,195,185,114,79,184,26,215,107,205,49,207,80,63,119,15,31,102,82,205,129,174,4,133,14,231,170,198,244,154,115,76,73,159,251,101,5,102,82,205,129,174,4,133,14,231,170,198,244,154,115,76,73,159,123,97,31,204,164,154,3,93,9,10,29,206,85,141,233,53,231,152,66,63,119,213,59,152,73,53,7,186,18,20,58,156,171,26,211,91,73,46,25,91,253,249,161,129,153,84,115,160,43,65,161,195,185,174,237,162,184,67,239,71,207,223,75,161,195,225,170,57,208,149,160,208,225,92,107,124,24,203,115,57,230,156,120,254,94,10,29,14,87,205,129,174,4,133,14,231,122,255,254,253,106,22,112,249,88,114,207,252,152,123,230,115,33,24,133,14,135,171,230,64,87,130,66,135,17,178,252,214,90,234,187,197,93,142,121,10,220,110,153,214,115,10,61,63,23,102,82,205,131,174,4,133,14,163,228,158,122,150,230,167,206,169,239,47,1,123,238,23,129,44,235,60,60,190,159,44,227,252,162,113,123,123,251,201,109,218,79,254,157,116,78,161,231,103,194,76,170,121,208,149,160,208,225,210,206,93,58,54,191,72,84,242,207,15,189,0,238,105,118,95,56,242,127,243,233,104,213,107,14,73,158,175,135,153,84,243,160,43,65,161,67,167,44,217,220,251,221,61,1,45,247,128,207,41,205,44,236,252,251,249,94,187,228,222,249,238,115,170,191,243,169,60,93,26,54,255,251,148,47,5,153,221,99,91,97,22,213,60,232,74,80,232,208,33,15,125,63,119,133,121,30,50,127,90,162,199,228,185,247,204,195,248,167,236,249,87,135,255,79,89,45,46,223,231,185,35,7,176,85,213,92,232,74,80,232,176,180,67,246,148,115,207,186,250,243,143,229,208,189,231,115,207,209,231,231,28,83,234,249,121,30,149,202,140,170,249,208,149,160,208,97,73,31,123,86,250,211,100,9,230,158,250,161,229,155,37,123,232,151,128,221,107,159,59,10,112,200,103,238,182,239,99,239,147,95,46,118,135,251,97,70,213,188,232,74,80,232,176,164,44,193,106,204,63,151,44,204,93,246,127,150,165,154,165,153,121,174,84,63,150,252,59,187,191,191,251,255,15,253,2,241,52,249,247,158,110,231,211,228,97,126,207,62,103,86,213,124,233,74,80,232,176,164,83,10,115,151,253,178,60,231,189,58,147,219,169,212,153,81,53,31,186,18,20,58,44,37,15,61,87,227,125,134,228,158,58,204,166,154,11,93,9,10,29,150,114,238,178,169,215,156,60,172,15,179,169,230,66,87,130,66,135,165,204,92,232,25,152,77,53,15,186,18,20,58,44,69,161,195,92,170,121,208,149,160,208,97,41,10,29,230,82,205,131,174,4,133,14,75,25,89,232,121,149,251,211,7,175,44,149,234,179,79,13,204,166,154,7,93,9,10,29,150,50,178,208,243,126,246,124,191,165,83,125,246,169,129,217,84,243,160,43,65,161,195,82,70,23,228,181,5,102,83,205,131,174,4,133,14,75,81,232,48,151,106,30,116,37,40,116,88,138,66,135,185,84,243,160,43,65,161,195,82,20,58,204,165,154,7,93,9,10,29,150,162,208,97,46,213,60,232,74,80,232,176,20,133,14,115,169,230,65,87,130,66,135,165,40,116,152,75,53,15,186,18,20,58,44,101,100,161,127,236,25,228,35,83,125,246,169,129,217,84,243,160,43,65,161,195,82,70,22,122,174,226,214,161,250,236,83,3,179,169,230,65,87,130,66,135,165,56,228,14,115,169,230,65,87,130,66,135,165,40,116,152,75,53,15,186,18,20,58,44,169,26,239,51,228,197,139,23,143,255,2,48,143,106,46,116,37,40,116,88,82,53,222,103,72,94,96,7,179,169,230,66,87,130,66,135,37,189,122,245,170,28,243,91,207,235,215,175,31,255,5,96,30,213,92,232,74,80,232,176,164,124,236,105,53,230,183,158,174,171,242,97,77,170,185,208,149,160,208,97,73,183,183,183,229,152,223,122,238,238,238,30,255,5,96,30,213,92,232,74,80,232,176,164,247,239,223,127,184,64,172,26,247,91,77,46,130,3,51,170,230,67,87,130,66,135,165,229,225,231,106,220,111,53,111,223,190,125,252,205,97,46,213,124,232,74,80,232,208,33,47,18,171,198,254,214,226,220,57,51,171,230,68,87,130,66,135,46,89,118,91,61,252,158,87,243,231,66,58,48,179,106,110,116,37,40,116,232,148,231,212,243,66,185,188,250,253,90,111,105,219,61,40,38,127,135,155,155,155,135,251,251,251,199,223,14,230,86,205,151,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,161,75,62,180,228,205,155,55,31,86,89,203,213,214,170,185,112,77,201,149,238,242,119,201,37,109,61,46,21,20,250,135,192,150,101,217,109,161,192,63,149,44,247,92,218,22,102,85,205,139,174,4,133,14,75,202,117,206,103,122,30,122,150,58,204,170,154,19,93,9,10,29,150,148,15,48,169,198,252,150,227,169,107,204,170,154,15,93,9,10,29,150,52,211,222,249,46,249,37,6,102,84,205,135,174,4,133,14,75,201,115,231,213,120,223,122,28,118,103,86,213,124,232,74,80,232,176,148,60,244,92,141,247,25,2,51,170,230,66,87,130,66,135,165,220,222,222,150,227,125,134,192,140,170,185,208,149,160,208,97,41,121,127,118,53,222,103,8,204,168,154,11,93,9,10,29,150,162,208,97,46,213,92,232,74,80,232,176,20,133,14,115,169,230,66,87,130,66,135,165,228,82,175,213,120,159,33,48,163,106,46,116,37,40,116,88,202,172,87,185,231,189,247,48,163,106,62,116,37,40,116,88,74,46,251,90,141,247,173,199,125,232,204,170,154,15,93,9,10,29,150,52,195,67,89,246,147,79,148,131,25,85,243,161,43,65,161,195,146,102,188,48,206,163,84,153,85,53,31,186,18,20,58,44,41,31,39,154,207,13,175,198,253,22,99,29,119,102,86,205,137,174,4,133,14,75,203,82,223,250,83,215,242,66,184,60,26,1,51,171,230,70,87,130,66,135,46,121,145,92,46,7,155,231,152,243,194,177,83,82,205,159,83,147,231,247,171,207,56,38,89,226,249,59,229,151,22,152,93,53,207,186,18,20,58,92,147,106,254,156,26,123,212,48,86,53,207,186,18,20,58,92,147,106,254,156,26,133,14,99,85,243,172,43,65,161,195,53,169,230,207,169,81,232,48,86,53,207,186,18,20,58,44,33,207,41,223,220,220,60,188,126,253,122,186,123,209,243,247,205,223,219,185,117,102,83,205,135,174,4,133,14,163,229,26,238,121,213,119,53,214,103,75,254,59,228,191,7,204,160,154,3,93,9,10,29,70,154,249,129,44,31,75,174,107,15,91,87,141,253,174,4,133,14,35,205,184,212,235,33,201,91,220,96,235,170,177,223,149,160,208,97,20,123,231,31,143,37,97,217,186,106,220,119,37,40,116,24,37,23,140,169,198,183,252,146,188,72,16,182,172,26,247,93,9,10,29,70,201,195,202,213,248,150,95,226,41,108,108,93,53,238,187,18,20,58,140,162,208,63,30,231,209,217,186,106,220,119,37,40,116,24,165,26,219,242,107,20,58,91,87,141,251,174,4,133,14,163,84,99,91,126,141,66,103,235,170,113,223,149,160,208,97,148,106,108,203,175,81,232,108,93,53,238,187,18,20,58,140,226,28,250,199,147,203,193,194,150,85,227,190,43,65,161,195,40,10,253,227,241,48,24,182,174,26,247,93,9,10,29,70,201,194,170,198,183,252,18,107,186,179,117,213,184,239,74,80,232,48,74,174,132,86,141,111,249,37,158,188,198,214,85,227,190,43,65,161,195,72,14,187,215,177,168,12,51,168,198,126,87,130,66,135,145,114,47,244,213,171,87,229,56,159,53,249,239,97,239,156,25,84,227,191,43,65,161,195,104,89,94,214,117,255,37,249,239,160,204,153,69,53,7,186,18,20,58,44,37,139,44,47,4,203,139,229,242,150,173,60,28,127,106,170,121,83,229,197,139,23,67,143,16,84,219,242,177,228,239,153,191,239,237,237,173,34,103,58,213,28,234,74,80,232,176,118,249,148,178,106,222,84,201,82,125,247,238,93,249,179,83,2,28,174,154,67,93,9,10,29,214,44,247,114,115,175,187,154,55,85,20,58,92,78,53,135,186,18,20,58,172,89,22,116,53,103,158,75,103,161,231,151,141,60,180,158,231,201,243,115,51,249,223,121,200,61,111,225,131,217,84,115,168,43,65,161,195,90,157,178,80,77,87,161,31,178,109,121,100,33,11,254,254,254,254,241,111,193,182,85,243,160,43,65,161,195,26,229,158,111,53,87,62,149,165,11,61,247,202,79,185,232,46,191,0,192,214,85,99,191,43,65,161,195,218,156,90,230,153,165,11,61,223,191,122,221,33,249,230,155,111,30,223,5,182,169,26,247,93,9,10,29,214,228,156,50,207,44,89,232,231,110,91,38,183,13,182,170,26,243,93,9,10,29,214,32,15,101,231,30,108,53,63,142,201,146,133,254,242,229,203,242,53,199,196,35,84,217,178,106,204,119,37,40,116,184,180,44,224,17,101,153,89,170,208,115,129,156,234,231,167,4,182,170,26,239,93,9,10,29,46,37,175,254,206,61,214,106,78,156,154,165,10,125,228,82,182,14,187,179,85,213,120,239,74,80,232,208,45,15,175,159,114,75,218,33,89,170,208,243,125,171,159,159,18,133,206,86,85,227,189,43,65,161,67,151,220,35,207,61,221,99,86,126,59,54,75,21,122,245,179,83,163,208,217,170,106,188,119,37,40,116,88,90,174,154,54,226,130,183,67,50,186,208,243,75,200,200,243,231,153,60,66,1,91,84,141,247,174,4,133,14,75,89,226,28,249,167,50,186,208,151,8,108,85,53,222,187,18,20,58,44,97,169,115,228,159,202,218,11,61,79,55,192,86,85,99,190,43,65,161,195,72,167,46,141,58,42,121,104,127,205,133,158,95,56,96,171,170,49,223,149,160,208,97,148,75,151,121,38,143,12,172,185,208,243,162,64,216,170,106,204,119,37,40,116,24,97,13,101,158,201,50,95,115,161,231,242,177,176,85,213,152,239,74,80,232,48,194,200,133,87,78,205,238,252,244,154,11,221,163,84,217,178,106,204,119,37,40,116,56,87,150,84,53,174,187,179,123,68,233,90,11,61,151,183,133,45,171,198,125,87,130,66,135,115,221,220,220,148,227,186,51,79,47,54,91,107,161,123,124,42,91,87,141,251,174,4,133,14,231,234,190,215,124,63,121,238,254,233,98,45,107,45,244,92,160,6,182,172,26,247,93,9,10,29,206,149,123,199,213,184,238,200,126,153,167,181,22,250,254,118,194,214,84,227,190,43,65,161,195,185,46,85,232,85,153,239,84,175,191,100,28,110,103,6,213,216,239,74,80,232,112,174,75,92,225,254,169,130,92,242,1,48,167,36,143,26,192,214,85,99,191,43,65,161,195,185,242,222,234,106,92,47,145,44,234,67,238,229,190,244,121,253,167,177,58,28,179,168,198,127,87,130,66,135,115,229,97,239,106,92,143,78,30,98,207,39,183,29,162,243,75,198,167,98,239,156,89,84,227,191,43,65,161,195,8,75,62,30,53,247,202,119,247,152,31,42,191,100,172,225,176,187,165,94,153,73,53,7,186,18,20,58,140,176,212,226,50,249,69,225,212,213,213,46,189,151,238,66,56,102,83,205,131,174,4,133,14,163,140,124,100,106,158,119,30,113,168,250,82,165,110,207,156,25,85,115,161,43,65,161,195,72,231,62,160,229,156,61,242,231,228,251,45,121,74,224,105,242,98,60,231,204,153,85,53,39,186,18,20,58,140,148,231,174,143,189,194,60,191,4,228,242,177,75,47,188,146,239,159,171,181,229,145,132,44,248,60,10,112,110,114,79,124,247,200,214,165,183,31,214,174,154,223,93,9,10,29,150,144,5,151,165,89,93,152,150,69,152,63,203,195,225,163,247,198,129,203,217,159,235,157,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,186,228,163,79,115,69,184,221,42,109,107,120,26,218,169,121,249,242,229,223,86,138,179,64,14,252,162,154,43,93,9,10,29,150,150,133,151,5,88,141,253,45,37,11,62,127,87,152,85,53,47,186,18,20,58,44,37,247,200,103,40,242,253,100,177,91,215,157,25,85,243,161,43,65,161,195,18,178,204,175,249,144,250,185,201,7,206,40,117,102,83,205,133,174,4,133,14,75,152,113,207,124,63,249,212,57,152,73,53,15,186,18,20,58,140,150,231,145,171,113,62,99,242,72,5,204,162,154,3,93,9,10,29,70,203,195,205,213,56,159,49,121,69,63,204,162,154,3,93,9,10,29,70,202,219,183,170,49,62,107,242,58,2,152,69,53,7,186,18,20,58,140,148,247,153,87,99,252,18,89,203,69,121,14,187,51,139,106,252,119,37,40,116,24,41,15,49,87,99,124,230,228,151,28,152,65,53,254,187,18,20,58,140,148,247,96,87,99,124,230,124,251,237,183,143,255,58,176,109,213,248,239,74,80,232,48,210,204,247,158,63,151,252,146,3,51,168,198,127,87,130,66,135,145,170,241,61,123,20,58,179,168,198,127,87,130,66,135,145,170,241,189,166,92,226,28,127,46,178,3,51,168,198,127,87,130,66,135,81,242,106,238,106,124,175,41,121,62,251,221,187,119,31,86,113,235,92,205,14,102,80,141,253,174,4,133,14,163,100,81,86,227,251,152,100,201,230,33,234,253,228,99,74,179,132,171,191,179,68,242,179,222,190,125,251,225,247,26,241,185,48,131,106,236,119,37,40,116,24,101,68,161,87,87,132,231,67,78,178,212,171,215,47,157,60,68,159,219,84,253,236,152,192,12,170,177,223,149,160,208,97,148,37,10,61,247,146,47,125,229,252,136,67,243,48,131,106,236,119,37,40,116,24,101,100,161,231,94,121,231,33,246,165,3,51,168,198,126,87,130,66,135,81,70,20,122,174,170,182,134,189,242,209,129,25,84,99,191,43,65,161,195,40,35,10,253,82,231,202,151,14,204,160,26,251,93,9,10,29,70,25,81,232,91,13,204,160,26,251,93,9,10,29,70,81,232,207,7,102,80,141,253,174,4,133,14,163,40,244,231,3,51,168,198,126,87,130,66,135,81,214,88,232,107,185,184,14,102,80,141,253,174,4,133,14,163,108,117,15,221,125,232,112,152,106,236,119,37,40,116,24,101,139,133,158,101,110,165,56,56,76,53,246,187,18,20,58,140,178,197,66,191,189,189,85,232,112,160,106,236,119,37,40,116,24,101,107,133,158,247,196,39,133,14,135,169,198,126,87,130,66,135,81,182,84,232,121,49,93,62,14,54,41,116,56,76,53,246,187,18,20,58,140,178,165,66,207,67,237,59,10,29,14,83,141,253,174,4,133,14,163,140,40,244,124,32,203,165,151,127,205,71,166,62,165,208,225,48,213,216,239,74,80,232,48,202,168,61,244,251,251,251,15,201,189,228,87,175,94,93,228,94,242,44,245,220,134,148,255,91,189,230,152,192,12,170,177,223,149,160,208,97,148,81,133,158,69,158,133,90,253,172,59,187,98,207,47,22,213,207,15,13,204,160,26,251,93,9,10,29,70,217,210,57,244,253,156,123,164,0,102,80,141,253,174,4,133,14,163,156,83,232,91,123,254,249,126,96,6,213,216,239,74,80,232,48,202,169,133,62,98,105,213,181,7,102,80,141,253,174,4,133,14,163,156,82,232,185,103,126,141,123,231,199,110,51,204,160,26,251,93,9,10,29,70,57,181,208,171,63,95,123,20,58,252,163,106,236,119,37,40,116,24,229,148,66,159,225,112,123,6,102,80,141,253,174,4,133,14,163,204,180,135,126,108,96,6,213,216,239,74,80,232,48,138,66,127,62,48,131,106,236,119,37,40,116,24,229,148,66,159,37,48,131,106,236,119,37,40,116,24,165,187,208,215,178,154,220,33,129,25,84,99,191,43,65,161,195,40,221,133,254,246,237,219,171,185,168,14,102,80,141,253,174,4,133,14,163,116,22,122,158,123,207,53,214,179,212,171,159,175,45,48,131,106,236,119,37,40,116,24,229,82,231,208,71,236,165,31,123,113,222,177,159,9,51,168,198,126,87,130,66,135,81,206,45,244,75,29,62,207,231,175,31,243,217,167,60,175,29,102,80,141,253,174,4,133,14,163,156,91,232,249,68,179,221,163,83,179,52,119,249,246,219,111,79,42,209,67,147,219,125,232,182,231,118,156,114,171,29,204,160,26,251,93,9,10,29,70,25,113,200,61,11,125,95,158,43,175,94,59,34,89,206,187,47,14,249,133,34,255,247,233,222,122,254,119,254,217,235,215,175,207,58,130,0,51,168,198,126,87,130,66,135,81,70,20,122,238,141,239,123,243,230,77,249,218,83,178,219,187,126,238,249,230,55,55,55,143,159,250,171,247,239,223,159,125,58,0,102,80,141,253,174,4,133,14,163,44,85,232,89,190,213,107,79,205,167,202,57,175,156,127,42,143,26,84,175,59,38,48,131,106,236,119,37,40,116,24,101,169,66,175,94,183,100,242,11,196,83,185,77,213,235,142,9,204,160,26,251,93,9,10,29,70,217,74,161,103,158,82,232,112,152,106,236,119,37,40,116,24,101,169,66,63,247,252,245,41,121,74,161,195,97,170,177,223,149,160,208,97,148,165,10,253,18,107,182,63,165,208,225,48,213,216,239,74,80,232,48,202,82,133,62,226,42,243,99,146,159,245,148,66,135,195,84,99,191,43,65,161,195,40,35,10,61,239,249,206,2,221,79,94,105,158,247,130,159,178,168,203,177,201,207,201,47,17,249,153,249,217,185,77,213,235,142,9,204,160,26,251,93,9,10,29,70,25,81,232,107,200,18,95,28,96,6,213,216,239,74,80,232,48,74,238,213,86,227,251,218,50,186,204,243,253,96,6,213,248,239,74,80,232,48,82,53,190,103,79,30,178,135,25,84,227,191,43,65,161,195,72,213,248,190,166,44,113,142,94,161,51,139,106,252,119,37,40,116,24,105,244,50,173,93,201,43,219,151,186,224,46,111,187,131,25,84,227,191,43,65,161,195,72,35,174,8,239,206,210,183,196,229,149,242,48,131,106,252,119,37,40,116,24,41,203,171,26,227,51,39,175,254,135,25,84,227,191,43,65,161,195,72,249,164,178,106,140,207,28,152,69,53,254,187,18,20,58,140,182,212,185,232,107,76,222,211,14,179,168,230,64,87,130,66,135,209,46,177,246,250,90,179,255,108,117,216,178,106,14,116,37,40,116,24,237,254,254,190,28,231,179,101,255,185,234,176,117,213,60,232,74,80,232,176,132,55,111,222,148,99,125,150,228,105,135,187,187,187,199,127,13,152,67,53,23,186,18,20,58,44,101,214,67,239,202,156,89,85,243,161,43,65,161,195,146,110,110,110,166,186,72,46,47,130,203,83,14,48,163,106,78,116,37,40,116,232,208,249,248,211,238,228,185,242,60,197,160,200,153,93,53,63,186,18,20,58,116,203,226,203,197,86,114,239,125,247,188,243,107,75,94,189,110,193,24,248,123,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,102,243,254,253,251,143,222,54,151,247,204,187,37,13,142,87,245,91,87,130,66,135,75,200,123,209,179,56,115,65,150,47,190,248,162,76,254,44,95,51,106,193,150,188,119,60,23,129,169,230,96,149,92,4,39,151,175,181,96,12,28,166,154,71,93,9,10,29,58,229,222,241,41,107,188,159,91,172,231,172,43,111,109,118,56,76,53,127,186,18,20,58,116,201,66,62,103,233,215,252,187,167,148,122,30,62,175,222,239,152,188,124,249,242,241,221,128,231,84,115,167,43,65,161,67,151,60,140,94,141,255,99,146,239,113,172,92,67,190,122,175,99,147,135,255,129,231,85,243,166,43,65,161,67,135,60,100,93,141,253,83,114,236,225,239,234,61,78,73,126,49,0,158,87,205,155,174,4,133,14,29,242,234,241,106,236,159,146,124,175,67,141,252,34,145,23,212,1,207,171,230,77,87,130,66,135,14,231,92,148,182,159,99,246,148,71,156,63,127,26,224,121,213,156,233,74,80,232,208,97,196,249,243,93,142,57,143,174,208,161,79,53,103,186,18,20,58,116,80,232,176,125,213,156,233,74,80,232,208,65,161,195,246,85,115,166,43,65,161,67,7,133,14,219,87,205,153,174,4,133,14,29,20,58,108,95,53,103,186,18,20,58,116,80,232,176,125,213,156,233,74,80,232,208,65,161,195,246,85,115,166,43,65,161,67,7,133,14,219,87,205,153,174,4,133,14,29,70,22,122,174,216,150,69,125,72,242,153,231,213,123,156,154,234,51,246,147,79,148,131,25,85,115,166,43,65,161,67,135,145,133,126,13,201,167,179,121,152,11,179,169,230,66,87,130,66,135,14,179,21,250,46,185,228,45,204,162,154,3,93,9,10,29,58,204,90,232,153,99,30,38,3,215,172,26,255,93,9,10,29,58,204,92,232,47,94,188,120,252,87,128,109,171,198,127,87,130,66,135,14,51,23,122,230,237,219,183,143,255,18,176,93,213,216,239,74,80,232,208,97,246,66,119,216,157,25,84,99,191,43,65,161,67,135,217,11,61,127,127,216,186,106,236,119,37,40,116,232,160,208,21,58,219,87,141,253,174,4,133,14,29,20,186,66,103,251,170,177,223,149,160,208,161,131,66,87,232,108,95,53,246,187,18,20,58,116,80,232,10,157,237,171,198,126,87,130,66,135,14,10,93,161,179,125,213,216,239,74,80,232,208,97,246,66,119,219,26,51,168,198,126,87,130,66,135,14,179,23,186,133,101,152,65,53,246,187,18,20,58,116,152,185,208,115,233,87,143,84,101,6,213,248,239,74,80,232,208,97,230,66,119,184,157,89,84,227,191,43,65,161,67,135,89,11,253,205,155,55,143,255,2,176,125,213,28,232,74,80,232,208,225,213,171,87,229,216,63,37,249,94,249,5,97,205,201,189,242,187,187,187,199,223,30,230,80,205,215,174,4,133,14,29,170,113,127,106,222,189,123,247,248,174,192,154,84,243,181,43,65,161,67,135,106,220,159,26,133,14,235,84,205,215,174,4,133,14,29,170,113,127,106,20,58,172,83,53,95,187,18,20,58,44,45,207,37,87,227,254,90,146,183,157,229,121,241,188,192,205,253,228,240,188,106,254,116,37,40,116,88,90,238,81,87,227,254,90,243,242,229,203,135,219,219,219,199,223,14,216,169,230,75,87,130,66,135,165,229,94,109,53,238,175,61,185,215,110,193,24,248,85,53,79,186,18,20,58,44,45,111,225,170,198,253,22,146,183,208,41,117,248,69,53,71,186,18,20,58,44,45,207,61,87,227,126,43,121,253,250,245,227,111,10,115,171,230,71,87,130,66,135,165,229,161,233,106,220,111,41,174,188,7,133,254,33,176,101,121,17,89,53,238,183,20,123,233,160,208,63,4,182,42,207,47,87,99,126,139,113,46,157,217,85,243,162,43,65,161,195,146,182,118,203,218,199,226,176,59,179,171,230,69,87,130,66,135,37,109,249,10,247,253,120,76,42,179,171,230,69,87,130,66,135,37,229,185,229,106,204,111,49,10,157,217,85,243,162,43,65,161,195,146,114,217,212,106,204,111,49,10,157,217,85,243,162,43,65,161,195,82,174,125,13,247,99,163,208,153,93,53,47,186,18,20,58,44,229,230,230,166,28,239,91,141,66,103,118,213,188,232,74,80,232,176,148,153,206,159,103,20,58,179,171,230,69,87,130,66,135,165,204,116,254,60,163,208,153,93,53,47,186,18,20,58,44,97,171,79,88,251,88,20,58,179,171,230,69,87,130,66,135,37,108,253,129,44,85,20,58,179,171,230,69,87,130,66,135,37,140,94,191,253,246,246,246,241,157,199,25,189,44,173,66,103,118,213,188,232,74,80,232,48,218,18,183,171,45,181,78,122,245,89,167,70,161,51,187,106,94,116,37,40,116,24,109,244,225,246,87,175,94,61,190,243,120,213,231,157,26,133,206,236,170,121,209,149,160,208,97,180,209,135,219,243,11,194,82,170,207,59,53,10,157,217,85,243,162,43,65,161,195,72,75,28,110,95,242,41,102,213,231,157,26,133,206,236,170,121,209,149,160,208,97,164,209,135,219,243,94,246,37,85,159,121,106,20,58,179,171,230,69,87,130,66,135,145,70,47,38,147,171,205,45,169,250,204,83,163,208,153,93,53,47,186,18,20,58,140,178,196,98,50,75,220,174,246,84,245,153,167,70,161,51,187,106,94,116,37,40,116,24,229,155,111,190,41,199,247,57,89,234,118,181,157,234,51,79,141,66,103,118,213,188,232,74,80,232,48,202,181,29,110,79,213,231,158,26,133,206,236,170,121,209,149,160,208,97,132,188,18,189,26,219,231,100,233,195,237,169,250,220,83,163,208,153,93,53,47,186,18,20,58,140,144,101,86,141,237,83,147,123,251,75,31,110,79,213,103,159,26,133,206,236,170,121,209,149,160,208,97,132,209,207,62,207,243,241,29,170,207,62,53,10,157,217,85,243,162,43,65,161,195,8,95,124,241,69,57,182,79,205,146,139,201,60,85,125,246,169,81,232,204,174,154,23,93,9,10,29,70,24,89,232,75,174,221,190,175,250,252,83,163,208,153,93,53,47,186,18,20,58,140,48,114,133,184,142,139,225,118,170,207,63,53,10,157,217,85,243,162,43,65,161,195,8,163,174,114,239,220,59,79,249,121,213,118,156,146,92,88,7,102,86,205,139,174,4,133,14,163,140,56,236,222,117,238,124,103,228,145,133,142,171,242,97,205,170,121,209,149,160,208,97,148,124,210,218,57,139,203,44,249,152,212,231,220,223,223,151,219,114,108,186,174,202,135,53,171,230,70,87,130,66,135,145,178,32,79,217,83,239,62,212,254,84,158,251,174,182,233,208,228,151,152,252,189,97,118,213,252,232,74,80,232,176,132,60,159,124,104,177,231,222,237,165,15,87,231,133,120,167,28,93,200,223,81,153,195,47,170,57,210,149,160,208,97,73,89,118,55,55,55,31,22,158,121,90,240,185,71,158,69,222,125,206,252,83,242,139,72,30,250,207,109,221,255,66,242,242,229,203,15,127,150,191,75,238,213,231,41,6,224,87,79,231,75,119,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,40,116,0,24,161,234,183,174,4,133,14,0,35,84,253,214,149,160,208,1,96,132,170,223,186,18,20,58,0,140,80,245,91,87,130,66,7,128,17,170,126,235,74,80,232,0,48,66,213,111,93,9,10,29,0,70,168,250,173,43,65,161,3,192,8,85,191,117,37,172,163,208,127,250,233,167,220,24,0,184,74,217,99,85,191,117,37,172,163,208,127,248,225,135,220,24,0,184,74,217,99,85,191,117,37,172,163,208,191,251,238,187,220,24,0,184,74,217,99,85,191,117,37,172,163,208,191,254,250,235,220,24,0,184,74,217,99,85,191,117,37,172,163,208,63,251,236,179,135,31,127,252,49,55,8,0,174,202,253,253,253,135,30,171,250,173,43,97,29,133,158,249,234,171,175,114,131,0,224,170,100,127,85,189,214,153,176,158,66,207,220,220,220,228,70,1,192,85,200,222,170,250,172,59,97,93,133,158,135,44,254,248,199,63,62,252,252,243,207,185,113,0,176,74,217,83,217,87,151,62,212,190,75,88,87,161,239,242,249,231,159,63,124,255,253,247,185,129,0,176,42,217,79,217,83,85,127,93,42,97,157,133,158,201,111,61,95,126,249,229,195,159,255,252,231,135,187,187,187,220,88,0,184,136,236,161,183,111,223,126,232,165,181,236,149,63,77,88,111,161,139,136,136,200,97,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,68,161,139,136,136,108,32,10,93,68,68,100,3,81,232,34,34,34,27,136,66,23,17,17,217,64,20,186,136,136,200,6,162,208,69,68,68,54,16,133,46,34,34,178,129,40,116,17,17,145,13,100,191,208,255,107,255,5,34,34,34,178,250,124,191,95,232,175,247,94,32,34,34,34,235,207,235,253,66,255,221,222,11,68,68,68,100,253,249,221,126,161,255,118,239,5,34,34,34,178,254,252,118,191,208,127,19,249,250,201,11,68,68,68,100,221,249,207,200,111,246,11,61,243,175,143,47,16,17,17,145,245,39,123,251,67,143,239,23,122,230,255,68,170,191,36,34,34,34,235,73,246,245,135,238,126,174,208,255,57,242,191,34,127,137,84,111,32,34,34,34,151,75,246,115,246,116,246,245,71,11,125,151,127,137,252,123,164,122,51,17,17,17,233,79,246,242,127,139,252,93,103,127,170,208,51,217,254,255,35,242,127,35,255,17,169,222,92,68,68,68,150,75,246,239,191,69,178,143,255,182,87,254,52,127,87,232,34,34,34,114,221,41,255,80,68,68,68,174,41,15,255,244,255,1,197,169,40,168,140,147,209,125,0,0,0,0,73,69,78,68,174,66,96,130],\"xdbid\":191}],\"xh\":0,\"xhList\":[16]}]}. ",
    "dwing4g": "\u6211\u89c9\u5f97\u8fd9\u5df2\u7ecf\u662f\u5f88\u660e\u663e\u7684bug, \u867d\u7136\u590d\u73b0\u96be\u5ea6\u975e\u5e38\u5927.\n\u4f46\u6709\u4ebf\u4e07\u5206\u4e4b\u4e00\u7684\u6982\u7387\u51fa\u9519\u7684\u53ef\u80fd, \u4f5c\u4e3a\u4e00\u4e2a\u5e7f\u6cdb\u63a8\u5e7f\u7684\u5f00\u6e90\u5e93\u96be\u9053\u4e5f\u662f\u4e0d\u8be5\u8003\u8651\u7684\u4e48?\nEntry<K, V> entry = new Entry<K, V>(key, value, hash, buckets[bucket]);\n        buckets[bucket] = entry;  // \u5e76\u53d1\u662f\u5904\u7406\u65f6\u4f1a\u53ef\u80fd\u5bfc\u81f4\u7f13\u5b58\u4e22\u5931\uff0c\u4f46\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\n\u53e6\u5916\u50cf\u8fd9\u79cd\u5199\u6cd5, \u7531\u4e8e\u6ca1\u6709voletile\u6216\u5176\u5b83\u4fdd\u62a4, \u4e71\u5e8f\u6267\u884c\u4f1a\u5bfc\u81f4\u5148\u6267\u884c\u4e0b\u9762\u90a3\u884c\u8d4b\u503c,\u540e\u6267\u884centry.next\u7684\u8d4b\u503c\u4e5f\u662f\u53ef\u80fd\u7684(\u5305\u62eccpu cache\u5728\u4e0d\u540c\u6838\u5fc3\u7684\u540c\u6b65\u95ee\u9898),\u66f4\u5bb9\u6613\u5bfc\u81f4get\u4e0d\u5230.. \u6211\u89c9\u5f97\u8fd9\u91cc\u5c31\u8001\u8001\u5b9e\u5b9e\u7528ConcurrentHashMap\u5c31\u53ef\u4ee5\u4e86, Class\u7c7b\u7684equals\u5e76\u6ca1\u6709\u91cd\u5199, \u7528IdentityHashMap\u4e5f\u6ca1\u4ec0\u4e48\u597d\u5904.. \u91cd\u65b0new\u662f\u6ca1\u95ee\u9898, \u4f46\u5173\u952e\u662fnew\u7684\u5bf9\u8c61\u5c31put\u5230map\u91cc, \u7136\u540e\u540e\u9762\u4e0d\u662f\u8fd4\u56de\u8fd9\u4e2anew\u7684\u5bf9\u8c61, \u800c\u662f\u53c8\u4ecemap\u4e2dget\u4e86\u4e00\u6b21,\u7136\u540e\u5c31\u6ca1\u6709\u5224\u7a7a\u4e86(\u89c1SerializeConfig.java\u7684getObjectWriter(Class<?> clazz, boolean create)\u51fd\u6570\u7684\u6700\u540e\u51e0\u884c). #1279\n\u90a3\u8fd9\u4e2a\u89e3\u51b3\u4e86\u4e48\n@wenshao . parser\u8d4b\u503cprivate\u6210\u5458\u5c31\u5df2\u7ecf\u7834\u574f\u8bed\u8a00\u7279\u6027\u4e86\u5427, \u80af\u5b9a\u7528\u53cd\u5c04\u673a\u5236\u53bb\u8d4b\u503c\u7684,\n\u65e2\u7136\u7528\u4e86\u53cd\u5c04, \u57fa\u7c7b\u4e5f\u5e94\u8be5\u53ef\u4ee5\u53cd\u5c04\u8d4b\u503c\u7684.. @wenshao \n\u73b0\u5728 OpenJDK 11.0.1 \u4e5f\u6ca1\u6709 XmlAccessorType \u4e86, \u8fd9\u4e2a\u8c8c\u4f3c\u662fJavaEE\u7684\u90e8\u5206,\u73b0\u5728\u5df2\u7ecf\u88abJDK11\u79fb\u9664\u4e86.\n\u6211\u8bd5\u4e86 fastjson 1.2.54 \u4ecd\u7136\u4f9d\u8d56\u8fd9\u4e2a.. ",
    "jonenet": "Result> responseObject  \u4f60\u7684\u8fd9\u4e2a\u5f15\u7528\u6bcf\u6b21\u6307\u5411\u7684\u90fd\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u5806\u5185\u5b58\u5751\u5b9a\u7206\u70b8. Result> responseObject  \u4f60\u7684\u8fd9\u4e2a\u5f15\u7528\u6bcf\u6b21\u6307\u5411\u7684\u90fd\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u5806\u5185\u5b58\u5751\u5b9a\u7206\u70b8. ",
    "FJCDrome": "@jonenet \u4e00\u6b21\u5faa\u73af\u7ed3\u675f\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u4e0d\u5c31\u6ca1\u4eba\u5f15\u7528\u4ed6\u4e86\u5417\uff0cGC\u5e94\u8be5\u662f\u53ef\u4ee5\u56de\u6536\u6389\u7684\u554a\uff1f\u5b9e\u9645\u56de\u6536\u4e0d\u4e86\u3002\u6211\u4e0d\u7528TypeReference\u7684\u65f6\u5019\uff0c\u5faa\u73af\u91cc\u9762responseObject\u6bcf\u6b21\u4e5f\u662f\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u8fd9\u65f6\u5019GC\u662f\u53ef\u4ee5\u56de\u6536\u7684\u3002. \n. \u5faa\u73af\u4e00\u6bb5\u65f6\u95f4IdentityHashMap\u91cc\u9762\u4f1a\u8d8a\u5806\u8d8a\u591a. @wuwen5 \u6d4b\u8bd5\u7528\u7684\u662fcom.alibaba:fastjson:1.1.58.android \u8fd9\u4e2a\u7248\u672c\u5417\uff1f. \n. \u6309\u7167\u6211\u7684\u6d4b\u8bd5\njava\nTypeReference<Result<Map<String, Object>>> typeface = new TypeReference<Result<Map<String, Object>>>() {};\n        while (true) {\n            String responseStr2 = \"{value:{'key':'value'}}\";\n            Result<Map<String, Object>> responseObject = JSON.parseObject(responseStr2, typeface);\n        }\n\u8fd9\u6837\u5185\u5b58\u662f\u7a33\u5b9a\u7684\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u5728\u5faa\u73af\u91cc\u9762new\u4e00\u4e2aTypeReference\n```java\nprotected TypeReference(){\n        Type superClass = getClass().getGenericSuperclass();\n    type = ((ParameterizedType) superClass).getActualTypeArguments()[0];\n}\n\n``\ndebug\u770b\u5230\u8fd9\u91cc\u83b7\u53d6\u7684type\u6bcf\u6b21\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u6211\u770b\u5230\u8bf4type\u4f1a\u662fIdentityHashMap\u7684key\u5bf9\u5427\uff0c\u8fd9\u5c31\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6211\u8fd9\u8fb9map\u91cc\u7684\u5bf9\u8c61\u4f1a\u8d8a\u5806\u8d8a\u591a\u4e86\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f60\u5728\u5faa\u73af\u91cc\u9762\u6bcf\u6b21\u4e5f\u662fnew\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6d4b\u8bd5\u4f1a\u6ca1\u95ee\u9898\uff0c\u662f\u6211\u4eec\u7528\u7684fastjson\u7248\u672c\u4e0d\u540c\u5417\n@wuwen5 . \u9488\u5bf9\u6211\u7684\u60c5\u51b5\uff0c\u81ea\u5df1\u6839\u636e\u6cdb\u578b\u7f13\u5b58\u4e00\u4efdTypeReference\n    private static Map<Class,TypeReference> resultMap;\n    public static  <K> TypeReference<Result<K>>  getResultTypeReference(final K k){\n        if(resultMap == null){\n            resultMap = new HashMap<>();\n        }\n        TypeReference<Result<K>> typeReference = resultMap.get(k.getClass());\n        if(typeReference == null){\n            typeReference = new TypeReference<Result<K>>(){};\n            resultMap.put(k.getClass(),typeReference);\n        }\n        return typeReference;\n    }\n\u80fd\u89e3\u51b3\u6211\u73b0\u5728\u9047\u5230\u7684\u95ee\u9898\uff0c\u5148\u4e0d\u7ba1\u4e86..\u5982\u679c\u6709\u4ec0\u4e48\u65b0\u7684\u8fdb\u5c55\uff0cplease @\u6211\u4e00\u4e0b. @wuwen5 \u5e26\u53c2\u6570\u7684\u65b9\u5f0f\u8bd5\u4e86\u4e00\u4e0b\uff0c\u76f4\u63a5\u62f7\u4f8b\u5b50\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5185\u5b58\u6cc4\u9732\u7684\u95ee\u9898\u3002. #1281 \u597d\u50cf\u6211\u7684\u95ee\u9898\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u80fd\u5e2e\u5fd9\u770b\u770b\u5417\uff1f\u751f\u4ea7\u73af\u5883\u8dea\u4e86\u51e0\u5929\u4e86\uff0c\u4e00\u76f4\u6ca1\u4eba\u56de\u590d\u6211. \u53ef\u80fd\u63cf\u8ff0\u7684\u6709\u70b9\u95ee\u9898,\u800c\u4e14\u5f00\u5934\u622a\u56fe\u7684\u5e94\u8be5\u662f\u6211\u4e4b\u524d\u770b\u5230class\u6587\u4ef6,\u73b0\u5728\u91cd\u65b0\u63cf\u8ff0\u4e00\u4e0b\n\u6211\u73b0\u5728\u9047\u5230\u7684\u95ee\u9898\u662f,json\u6570\u636e\u91cc\u7684\u65f6\u95f4\u662fstring\u7c7b\u578b,\u683c\u5f0f\u662fyyyyMMddHHmmssSSSZ \u7528fastjson\u53cd\u5e8f\u5217\u5316\u5931\u8d25.\nfastsjon\u7684\u7248\u672c:1.2.8\n\u81ea\u5df1\u8c03\u8bd5\u540e,\u5728com.alibaba.fastjson.util.TypeUtils\u7684castToDate(Object value) \u65b9\u6cd5\u4e2d\u770b\u5230\u5982\u4e0b\u4ee3\u7801(275\u884c):if (value instanceof String) {\n            String strVal = (String) value;\n        if (strVal.indexOf('-') != -1) {\n            String format;\n            if (strVal.length() == JSON.DEFFAULT_DATE_FORMAT.length()) {\n                format = JSON.DEFFAULT_DATE_FORMAT;\n            } else if (strVal.length() == 10) {\n                format = \"yyyy-MM-dd\";\n            } else if (strVal.length() == \"yyyy-MM-dd HH:mm:ss\".length()) {\n                format = \"yyyy-MM-dd HH:mm:ss\";\n            } else {\n                format = \"yyyy-MM-dd HH:mm:ss.SSS\";\n            }\n\n            SimpleDateFormat dateFormat = new SimpleDateFormat(format);\n            try {\n                return (Date) dateFormat.parse(strVal);\n            } catch (ParseException e) {\n                throw new JSONException(\"can not cast to Date, value : \" + strVal);\n            }\n        }\n\n        if (strVal.length() == 0) {\n            return null;\n        }\n\n        longValue = Long.parseLong(strVal);\n    }`\n\n\u5982\u679c\u662f\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u6210Date,\u9996\u5148\u4f1a\u5224\u65ad\u662f\u5426\u5305\u542b\"-\" \u4f46\u662f\u8fd9\u79cd\u5e26\u65f6\u533a\u7684\u65f6\u95f4\u5b57\u7b26\u4e32,\u4e1c\u534a\u7403\u7684\u65f6\u95f4\u662f\"20181011103607186+0800\"\u4e0d\u5305\u542b\"-\",\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528Long.parseLong(strVal)\u53bb\u6362\u88c5,\u4e00\u5b9a\u662f\u6ca1\u6cd5\u8f6c\u7684.\u800c\u897f\u534a\u7403\u7684\u65f6\u95f4\u867d\u7136\u5305\u542b\"-\" \u4f46\u662f\"20181011103607186-0800\"\u548c\"yyyyMMddHHmmssSSSZ\"\u957f\u5ea6\u5e76\u4e0d\u76f8\u7b49,\u5373\u4f7f\u8bbe\u7f6eJSON.DEFFAULT_DATE_FORMAT=\"yyyyMMddHHmmssSSSZ\" \u4e5f\u4e0d\u80fd\u6b63\u5e38\u6362\u88c5.\n\u73b0\u5728\u91cd\u65b0\u770b\u4e86\u6e90\u7801,\u597d\u50cf\u5c31\u662f\u4e0d\u652f\u6301\u8fd9\u79cd\u683c\u5f0f\u7684\u65f6\u95f4\u53cd\u5e8f\u5217\u5316?\u6211\u5f53\u521d\u770b\u7684class\u6587\u4ef6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u770b\u5230\u4e86\u5bf9size=22\u548cyyyyMMddHHmmssSSSZ\u8fd9\u79cd\u683c\u5f0f\u7684\u7279\u6b8a\u5904\u7406(1\u697c\u622a\u56fe\u7b2c\u4e09\u884c),\u6240\u4ee5\u4ee5\u4e3a\u662f\u4e2abug.\n. ",
    "shijinkui": "\n\u6682\u4e0d\u652f\u6301scala\u7684class/object/caseclass, \u4f60\u53ef\u4ee5\u4f7f\u7528\n\nThanks. scala\u662f\u6709\u4e0d\u5c11\u53ef\u9009\u7684json\u5e93. . ",
    "DecKen": "@shijinkui \u6539\u4e0b\u4ee3\u7801\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\nobject JsonUtil {\n  def main(args: Array[String]): Unit = {\n    val obj = Test(111, \"Ssldjflds\")\n    import com.alibaba.fastjson.JSON\n    val jsonString = JSON.toJSONString(obj, SerializerFeature.EMPTY: )   // \u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u7ed5\u8fc7toJSONString(Object object, SerializerFeature... features), \u539f\u6765\u4ee3\u7801\u5b9e\u9645\u8c03\u7528\u7684\u662ftoJSONString(object, emptyFilters), \u8fd9\u6837\u7528SerializerFeature.EMPTY: _\u4ee3\u66ff, : *\u5c31\u662fscala\u5c06emptyFilters\u8f6c\u6210\u53ef\u53d8\u957f\u53c2\u6570\n    println(jsonString)\n  }\n}\nimport scala.beans.BeanProperty\ncase class Test(@BeanProperty i: Int, @BeanProperty j: String)   //\u52a0\u4e0aBeanProperty\u7684\u76ee\u7684\u662f\u8ba9\u8fd9\u4e2a\u7c7b\u6709getter\u548csetter\u65b9\u6cd5. ",
    "chengxii": "\u4f7f\u7528\u8fd9\u4e2a\u4ee3\u66ff\u4e86\u4e00\u4e0b\nJSON.toJSONString(msg, new SerializeFilter[0])\n\n. ",
    "ddknight": "ok,thanks.\nCould you add this comment to the GitHub README.MD?I think it is helpful.. ",
    "zilong": "1.2.25,1.2.33 \u90fd\u6709. IdentityHashMap \u662f\u7528native Hash\u7684\uff0c\u771f\u6709\u95ee\u9898\uff0c\u4ed4\u7ec6debug\u5c31\u80fd\u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\u4e86\uff08\u73af\u5883JDK8\uff09\u3002@wuwen5 \u4f60\u627e\u4e00\u4e0b\u9ad8\u94c1. ",
    "qiutongyeluo": "\u6240\u4ee5\u8fd9\u4e2a\u89e3\u51b3\u4e86\u4e48\u3002\u3002\u3002native Hash\u867d\u7136\u80fd\u907f\u514d\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u4f46\u662f\u6211\u4eecoverride hashCode\u5c31\u6ca1\u610f\u4e49\u4e86\u989d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u662f\u81ea\u5df1\u5b9e\u73b0ParameterizedType\uff0c\u5e76\u4f7f\u7528JSON.parseObject(str, \u81ea\u5b9a\u4e49\u7684type\u5b9e\u73b0) \u6765\u89e3\u6790\uff0c\u8fd8\u662f\u4f1a\u9020\u6210\u8fd9\u79cd\u5185\u5b58\u6cc4\u6f0f\u3002. @zhuyiren \u6211\u8ddf\u4f60\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\u3002\u4f60\u81ea\u5df1\u7f13\u5b58ParameterizedTypeImpl\u7684\u8bdd\uff0c\u603b\u5f52\u6709\u4e2a\u7f13\u5b58\u7684\u4e0a\u9650\u628a\uff1f\u5982\u679c\u7c7b\u578b\u5f88\u591a\uff0c\u5c82\u4e0d\u662f\u81ea\u5df1\u7f13\u5b58\u4e5f\u4f1a\u5360\u5f88\u5927\u5185\u5b58\uff1f . ",
    "magicnian": "\u540c\u6837\u4e5f\u9047\u5230\u4e86\u76f8\u4f3c\u7684\u95ee\u9898\u2026\u2026\n**One instance of \"java.lang.ref.Finalizer\" loaded by \"\" occupies 396,992,088 (63.02%) bytes. The instance is referenced by com.alibaba.fastjson.util.IdentityHashMap$Entry @ 0x824d3640 , loaded by \"org.apache.catalina.loader.WebappClassLoader @ 0x80627b38\". \nKeywords\norg.apache.catalina.loader.WebappClassLoader @ 0x80627b38\njava.lang.ref.Finalizer**\n\u8fd9\u662f\u4ece\u7ebf\u4e0a\u62c9\u4e0b\u7684dump\u6587\u4ef6\u5206\u6790\u7ed3\u8bba. ",
    "RichieMay": "@kimmking \u5982\u679c\u662fapi\u63a5\u53e3\u63d0\u4f9b\u7ed9\u7528\u6237\uff0c\u5b8c\u5168\u65e0\u6cd5\u9650\u5236\u7528\u6237\u7684\u884c\u4e3a\u800c\u53ea\u80fd\u68c0\u67e5\uff0c\u73b0\u5728\u68c0\u67e5\u7684\u65f6\u5019\u5c31\u9700\u8981\u5feb\u901f\u54cd\u5e94\u4e86\uff01\u6216\u8bb8\u5355\u4e2a\u8bf7\u6c42\u8fd9\u70b9\u8d44\u6e90\u4e0d\u7b97\u5565\uff0c\u5927\u5e76\u53d1\u5904\u7406\uff0c\u8d44\u6e90\u5360\u7528\u4e00\u4e0b\u5c31\u4e0a\u6765\u4e86\uff01. \u6211\u5c31\u60f3\u8bf4\u5728ObjectDeserializer\u7684deserialze\u91cc\u9762\u52a0\u5165\u4e00\u4e2a\u8ba1\u6570\u5668,\u9012\u5f52\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u6700\u5927\u6df1\u5ea6\u5c31\u5b8c\u4e86,\u5c31\u4e24\u4e09\u53e5\u4ee3\u7801,\u81ea\u5df1\u6539\u6e90\u7801\u4e86\uff0c\u53ea\u662f\u4ee5\u540e\u540c\u6b65\u7248\u672c\u607c\u706b\u4e86.... @wenshao \u4e0d\u662f\u54e6\uff0c\u8fd9\u662f\u5e8f\u5217\u5316\u63a5\u53e3\uff01\u6211\u8bf4\u8fd9\u4e2a\u662f\u53cd\u5e8f\u5217\u5316\u63a5\u53e3\u3002\u5047\u8bbe\u7528\u6237POST\u4e00\u4e2ajon\u5b57\u7b26\u4e32\uff0c\u4f60\u662f\u4e0d\u662f\u9700\u8981\u9a8c\u8bc1\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u4e3ajson\uff1f\u90a3\u4e48\u5728\u9a8c\u8bc1\u7684\u65f6\u5019,\u80fd\u5426\u8bbe\u7f6e\u5d4c\u5957\u5c42\u6570\uff0c\u6bd4\u5982\u6211\u7684\u4e1a\u52a1\u6700\u591a\u53ea\u67096\u5c42\uff0c\u800cfastjson\u53ea\u8981\u9a8c\u8bc1\u52306\u5c42\u8fd8\u6709\u5d4c\u5957\u5c42\u7acb\u5373\u8fd4\u56de\u5931\u8d25\u6216\u8005\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u6ca1\u5fc5\u8981\u6d6a\u8d39\u65f6\u95f4\u5728\u591a\u4f59\u7684\u9519\u8bef\u7684\u6f5c\u9003\u5c42\u4e0a\uff01. \u4e2a\u4eba\u89c9\u5f97\u5b8c\u5168\u53ef\u4ee5\u9171\u6c41...\npublic class JSONException... {\n private final ErrorCode  error;\n public JSONException(ErrorCode error, String Message) {\n  this.error = error;\n   ...\n  }\npublic final ErrorCode  getErrorCode () {\n   return error;\n }\n}. ",
    "jiangxinlingdu": "\u8c03\u7528\u7684\u8bed\u53e5\u5982\u4e0b\uff1a JSONObject.parseObject(str). \u7248\u672c\u662ffastjson-1.1.25\uff0c\u5df2\u7ecf\u5728\u7ebf\u4e0a\u73af\u5883\u6dfb\u52a0oom\u4e4b\u540edump\u4e86\uff0c\u5982\u679c\u5728\u9047\u5230\u4f1a\u5206\u6790\u4e0b\uff0c\u5c31\u662f\u544a\u8bc9\u4f60\u4eec\u4e0b\uff0c\u770b\u770b\u662f\u5426\u6709\u8fd9\u65b9\u9762\u7684\u95ee\u9898 \uff0c\u8c22\u8c22. ",
    "jiaoqingbo": "\u548c\u4f60\u8c03\u7528\u7684\u8bed\u53e5\u4e00\u6837  \u7248\u672c1.2.47\u4e5f\u51fa\u73b0\u4e86java heap space. ",
    "YuYuYan": "\u548c\u4f60\u8c03\u7528\u7684\u8bed\u53e5\u4e00\u6837 \u7248\u672c1.2.47\u4e5f\u51fa\u73b0\u4e86java heap space. ",
    "chenzhq": "\u5df2\u7ecf\u901a\u8fc7\u4e00\u4e2a\u5b9e\u73b0ObjectSerializer\u63a5\u53e3\u7684\u7c7b\u89e3\u51b3. ",
    "zhanggang807": "\u7136\u800c\u5e76\u6ca1\u6709\uff0c\u666e\u901a\u5bf9\u8c61pojo. ",
    "z7658329": "\u5176\u5b9e\u633a\u5efa\u8baefastJson\u9488\u5bf9\u4e00\u4e2aparseXXX\u7684\u65b9\u6cd5 \u5bf9\u5916\u53ea\u629b\u51fa\u4e00\u4e2a\u89e3\u6790\u5f02\u5e38\u7684\u8fd9\u6837\u66f4\u53cb\u597d. @wenshao  \u6240\u4ee5\uff0c\u4f60\u4eec\u7684\u89c2\u70b9\u662f\uff1f. ",
    "feixueck": "\u4e0a\u9762\u7684\u95ee\u9898\u5c31\u662f\u9488\u5bf91.2.33\u7248\u672c\u7684 .\n\u4e0d\u8fc7\u6539\u81ea\u5df1\u6539\u9020\u4e86\u4e0b,\u5728\u914d\u7f6efastJsonConfig\u7684\u65f6\u5019,\u5c5e\u6027serializeConfig\u91cc\u9762put\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684DateSerilializer,\u4e13\u95e8\u8f6c\u6362date\u7c7b\u578b\u7684 .\n\u591a\u8c22\u56de\u590d .. \u591a\u8c22\u63d0\u4f9b\u7684\u601d\u8def . \u4f7f\u7528fastjson\u5b9e\u73b0\u4e86\u6cdb\u578b\u548c\u975e\u6cdb\u578b\u7684\u4e24\u79cd\u6df1\u5ea6\u62f7\u8d1d :+1: \n```java\n/\n     * deepCopy \u6df1\u5ea6\u62f7\u8d1d \u63d0\u4f9b\u7ed9\u6cdb\u578b\u7c7b\u578b\u7684\u5bf9\u8c61\u4f7f\u7528 \u6bd4\u5982PageQuery\n     * example:\n     * \u5efa\u8bae \u975e\u6cdb\u578b\u7684\u62f7\u8d1d\u76f4\u63a5\u8c03\u7528 deepCopy(Object source, Class tClass)\n     \n     * @param source\n     * @param \n     * @return\n     /\n    public static  T deepCopy(Object source, TypeReference typeReference) {\n        if (source == null) {\n            return null;\n        }\n        try {\n            T t = JSON.parseObject(JSON.toJSONString(source), typeReference, Feature.IgnoreNotMatch);\n            return t;\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new BizException();\n        }\n    }\n/\n     * \u652f\u6301\u975e\u6cdb\u578b\u7684 \u6df1\u5ea6\u62f7\u8d1d\n     \n     * @param source\n     * @param tClass\n     * @param \n     * @return\n     /\n    public static  T deepCopy(Object source, Class tClass) {\n        if (source == null) {\n            return null;\n        }\n        try {\n            JSONObject t = JSON.parseObject(JSON.toJSONString(source), JSONObject.class, Feature.IgnoreNotMatch);\n            T t1 = JSON.toJavaObject(t, tClass);\n            return t1;\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new BizException();\n        }\n    }\n`. @aqqwiyth \u8fd9\u6837\u662f\u4e0d\u662f\u548c\u67d0\u5177\u4f53\u5bf9\u8c61\u7d27\u8026\u5408\u4e86 . . ",
    "coffee928": "\u4e0d\u8fc7\u6d4b\u8bd5\u65f6\u53d1\u73b0\uff0c\u5982\u679cpublic class UnitsSaveResponse \u8fd9\u4e2a\u6539\u6210 public class UnitsSaveResponse \u53c8\u662f\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u7684\u3002\n\u8fd9\u91cc\u4e4b\u6240\u4ee5\u60f3\u52a0\u4e0a\uff0c\u53ef\u80fd\u662f\u6709\u70b9\u591a\u4f59\uff0c\u4e0d\u8fc7\u4e5f\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u7528\u65b9\u6e05\u695a\u91cc\u9762\u7684\u7c7b\u578b\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u4f5c\u7528\u7684\u3002. UnitsSaveResponse extends ServiceResult  \u8fd9\u6837\u5199\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u3002\nUnitsSaveResponse extends ServiceResult  \u8fd9\u6837\u4e5f\u662f\u4e0d\u80fd\u6b63\u5e38\u8f6c\u6362\u7684\uff0c\u91cc\u9762\u5d4c\u5957\u7684map\u5e76\u4e0d\u80fd\u8f6c\u6362\u6210bean\n. ",
    "keniushadu": "\u5e8f\u5217\u5316\u4e5f\u7528JSONAware \u51fa\u5217\u4e86. \u4f46\u662f\u53cd\u5e8f\u5217\u5316\u770b\u8d77\u6765\u633a\u9ebb\u70e6\u7684. \n\u770b\u4e86\u4ee3\u7801\u662f\u7528System.identifyHashCode() \u505a\u53cd\u5e8f\u5217\u5316\u7c7b\u7684key . \n\u9879\u76ee\u4e2d\u626b\u63cf\u6240\u6709\u679a\u4e3e\u53bb\u5904\u7406\u7684\u65b9\u5f0f\u5f88\u4e0d\u4f18\u96c5\n. ",
    "info-scope": "Java8\u4e2d\u53ef\u4ee5\u5728\u81ea\u5b9a\u4e49\u63a5\u53e3\u7ee7\u627fJSONAware,  \u7528java8\u9ed8\u8ba4\u65b9\u6cd5\u7684\u7279\u6027\u5b9e\u73b0. \u53cd\u5e8f\u5217\u5316\u8c8c\u4f3c\u65e0\u89e3? @wenshao . ",
    "ruiruige": "~~\u5b9e\u5728\u662f\u4e0d\u592a\u597d\u7528\uff0c\u80fd\u4e0d\u80fd\u50cfjackson\u4e00\u6837\uff0c\u7528\u4e24\u4e2a\u6ce8\u89e3\u5b8c\u4e8b\u5462\uff1f JSONCreator \u548c JSONValue\uff0c\u8fd9\u90fd\u662f\u7ed1\u5b9a\u5728\u7c7b\u4e0a\u7684\u3002\n\u53e6\u5916\uff0c\u5e8f\u5217\u5316\u53ef\u4ee5\u7528JSONAware\uff0c\u90a3\u4e48\u53cd\u5e8f\u5217\u5316\u53ef\u4ee5\u7528\u4ec0\u4e48\u5462\uff1f~~\n\u66f4\u65b0\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u540e\u6765\u89e3\u51b3\u4e86\uff0c\u4eca\u5929\u5199\u535a\u5ba2\u65f6\u5019\u987a\u624b\u5199\u4e0a\u4e86\uff0c\u5e0c\u671b\u540e\u6765\u4eba\u770b\u5230\u4e0d\u8981\u6d6a\u8d39\u65f6\u95f4\nhttps://ruiruigeblog.com/2018/08/05/FastJson%E4%BD%BF%E7%94%A8Serializer%E5%92%8CDeserializer%E5%AE%9E%E7%8E%B0%E6%9E%9A%E4%B8%BE%E7%B1%BB%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BA%8F%E5%88%97%E5%8C%96/. ",
    "939347507": "`\nserializeConfig.put(IEnum.class, new ObjectSerializer(){\n//            @Override\n//            public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) {\n//                if (object == null){\n//                    return;\n//                }\n//\n//                SerializeWriter out = serializer.out;\n//                IEnum iEnum = (IEnum) object;\n//                Object value = iEnum.getValue();\n//\n//                if (value instanceof Byte){\n//                    out.write((byte)value);\n//                }\n//                else if (value instanceof Character){\n//                    out.write((Character)value);\n//                }\n//                else if (value instanceof Short){\n//                    out.write((Short)value);\n//                }\n//                else if (value instanceof Integer){\n//                    out.writeInt((Integer) value);\n//                }\n//                else if (value instanceof Float){\n//                    out.writeFloat((float)value, false);\n//                }\n//                else if (value instanceof Double){\n//                    out.writeDouble((double)value, false);\n//                }\n//                else if (value instanceof Long){\n//                    out.writeLong((long)value);\n//                }\n//                else if (value instanceof Boolean){\n//                    out.write((boolean)value);\n//                }\n//                else {\n//                    out.writeString(value.toString());\n//                }\n//            }\n//        });\n\u6211\u73b0\u5728\u4e5f\u662f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c \u6211\u4e5f\u662f\u6240\u6709\u7684\u679a\u4e3e\u90fd\u5b9e\u73b0\u4e86IEnum\u63a5\u53e3\uff0c \u6211\u50cf\u4e0a\u9762\u8fd9\u6837put\uff0c ASMSerializer\u5e76\u6ca1\u6709\u6267\u884c\u6211\u8fd9\u4e2a\u5e8f\u5217\u5316\u5668\uff0c\n\u7136\u540e\u6211\u6362\u6210\u4e86jackson\u662f\u53ef\u4ee5\u7684\nSimpleModule simpleModule = new SimpleModule();\nsimpleModule.addSerializer(IEnum.class, new IEnumSerializer());\nmapper.registerModule(simpleModule);\npublic class IEnumSerializer extends JsonSerializer {\n@Override\npublic void serialize(Object o, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException {\n    IEnum iEnum = (IEnum) o;\n    Serializable value = iEnum.getValue();\n    jsonGenerator.writeObject(value);\n}\n\n}\n`. LocalTime \u5e8f\u5217\u5316\u4e5f\u6709\u95ee\u9898 \nLocalTime localTime = LocalTime.parse(\"09:00:00\");\nSystem.out.println(localTime);\n\u4f1a\u8f93\u51fa09:00\uff0c  \u4f46\u662f\u6211\u671f\u671b\u7684\u662f\u6807\u51c6\u683c\u5f0f09:00:00  \u56e0\u4e3afastjson\u9ed8\u8ba4\u662f\u8d70toString , \u4f46\u662fjdk\u7684LocalTime \u7684toString\u5982\u679c\u79d2\u4e0d\u662f\u5927\u4e8e0\u7684\u5c31\u4e0d\u4f1a\u8f93\u51fa. ",
    "q455694266": "1.2.30-1.2.33  \u90fd\u8bd5\u8fc7   \u4e00\u6837\u7684\u7ed3\u679c   \u66f4\u4f4e\u7684\u7248\u672c\u6ca1\u5c1d\u8bd5\u8fc7\u3002. \u5341\u5206\u611f\u8c22\uff0c\u7ecf\u5efa\u8bae\u628a\u4e24\u4e2a\u5173\u8054\u5c5e\u6027 \u62bd\u79bb\u5230\u4e00VO\u7c7b\u4e2d\u53bb\u4e86\uff0c\u73b0\u5728\u6ca1\u5565\u95ee\u9898\u4e86\u3002. ",
    "huminted": "JSONArray array=new JSONArray(jsonArray);\n            for (int i = 0; i <array.size() ; i++) {\n                JSONObject object=jsonArray.getJSONObject(i);\n                cartlist.add(new CartList(object.getString(\"name\"),\n                                          object.getString(\"imgurl\"),\n                                          (object.getString(\"prices\"))));\n                total=total+ Double.valueOf(object.getString(\"prices\"));\n            }\n            System.out.println(\"total\"+total);\n            tvtotla.setText(String.valueOf(total));\n        adapter =new CartAdapter(cartlist);\n            recyclerView.setAdapter(adapter);\n\n\n\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n\n. [{\"author\":{\"__type\":\"Pointer\",\"className\":\"_User\",\"objectId\":\"a876c49c18\"},\"createdAt\":\"2017-07-02 20:06:13\",\"imgurl\":\"https:\\/\\/ss0.bdstatic.com\\/70cFuHSh_Q1YnxGkpoWK1HF6hhy\\/it\\/u=11075891,34401011&fm=117&gp=0.jpg\",\"name\":\"\u8863\u67b6\",\"objectId\":\"029d5493cd\",\"prices\":\"1\",\"updatedAt\":\"2017-07-02 20:06:13\"}]\n. ",
    "aceshot": "know one key point: different type serialize with different Serializer.ContextValueFilters effected in JavaBeanSerializer ,not in ListSerializer and MapSerializer. use 1.2.35-SNAPSHOT, it works! thank you.. Feature.DisableFieldSmartMatch \u4eb2\u6d4b\u4f7f\u7528\u8fd9\u4e2a\u53ef\u884c\u3002\u7981\u7528smartMatch. ",
    "sangchengjiang": "@JSONField\u5bf9\u6240\u6709\u7684\u89e3\u6790\u90fd\u662f\u5b9a\u6b7b\u7684\uff0c\u6211\u60f3\u53cd\u5e8f\u5217\u5316\u65f6\u52a8\u6001\u51b3\u5b9a\u5b57\u6bb5\u662f\u5426\u53cd\u5e8f\u5217\u5316\u53ef\u4ee5\u505a\u5230\u5417\uff0c\u6211\u7684\u9700\u6c42\u4e2d\u6709\u65f6\u7528\u5230\u5168\u90e8\u6570\u636e\uff0c\u6709\u65f6\u53ea\u7528\u5230\u90e8\u5206\u6570\u636e\uff0c\u7528\u5230\u90e8\u5206\u6570\u636e\u7684\u65f6\u5019\u5c31\u60f3\u53ea\u89e3\u6790\u90e8\u5206\u5b57\u6bb5\uff0c\u8c22\u8c22. ```\nContent content = new GsonBuilder()\n                        .setExclusionStrategies(new ExclusionStrategy() {\n                            @Override\n                            public boolean shouldSkipField(FieldAttributes arg0) {\n                                // \u4e0d\u89e3\u6790test\u5b57\u6bb5\n                                return arg0.getName().equals(\"test\");\n                            }\n                        @Override\n                        public boolean shouldSkipClass(Class<?> arg0) {\n                            return false;\n                        }\n                    })\n                    .create()\n                    .fromJson(json, Content.class);\n\n```\n\u4e4b\u524d\u7528gson\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528ExclusionStrategy\u6765\u8fc7\u6ee4\u6389\u4e0d\u9700\u8981\u89e3\u6790\u7684\u5b57\u6bb5\uff0cJSON\u662f\u5426\u4e5f\u6709\u7c7b\u4f3c\u7684\u65b9\u6cd5. ",
    "yangbo-true": "@wenshao \u4f60\u8bf4\u7684\u8fd9\u4e2a\u662f\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u697c\u4e3b\u8bf4\u7684\u662f\u53cd\u5e8f\u5217\u5316. \u8fd9\u4e2a\u6709\u89e3\u51b3\u65b9\u6848\u4e86\u4e48\uff1f@feixueck. a. ",
    "autismbug92": "-keepattributes Signature\n-dontwarn com.alibaba.fastjson.\n-keep class com.alibaba.fastjson.{*; }. ",
    "ChengJi": "@kimmking \u6240\u4ee5\uff0c\u8fd9\u4e2a\u73b0\u8c61\u662f\u6b63\u5e38\u7684\uff1f. \u95ee\u9898\u627e\u5230\u4e86\uff0c\u662f\u6211\u4eec\u81ea\u5df1\u7a0b\u5e8f\u7684\u95ee\u9898\uff0c\u8c22\u8c22\u5404\u4f4d\u3002. ",
    "xuefenghai": "\u8bed\u6c14\u5f88\u4e0d\u5bf9\uff0c\u6361\u73b0\u6210\u7684\uff0c\u8fd9\u4e48\u6ca1\u54c1. ",
    "lilijreey": "\u8bed\u6c14\u662f\u6709\u70b9\u4e0d\u597d\uff0c\u4f46\u662f\u4f5c\u8005\u65e2\u7136\u505a\u5f00\u6e90\u9879\u76ee\u5c31\u5e94\u8be5\u628a\u6587\u6863\u653e\u5728\u5f88\u91cd\u8981\u7684\u4f4d\u7f6e\u3002 \u6211\u4e2a\u4eba\u7684\u906d\u9047\u662f\u6709\u4e00\u4e9bcase\u534a\u5929\u4e0d\u77e5\u9053\u600e\u6837\u7528fastjson\u5b9e\u73b0\u3002\u6587\u6863\u4e5f\u6ca1\u6709\u4ea4\u4ee3\u3002 \u8981\u4e48\u770b\u6e90\u7801\u8981\u4e48\u4e0a\u7f51\u641c\u3002 \u771f\u5fc3\u7d2f\u4eba\u3002 . ",
    "liangzhongqiu": "package com.alibaba.fastjson.support.spring;\nimport com.alibaba.fastjson.support.config.FastJsonConfig;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.HttpOutputMessage;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport static com.alibaba.fastjson.serializer.SerializerFeature.*;\n/*\n * @author Liangzhongqiu\n * @date 2017/7/19 019\n * @time 21:25\n /\npublic class FastJsonHttpMessageConverter4Test {\n@Test\npublic void write() throws IOException{\n    FastJsonConfig fastJsonConfig = new FastJsonConfig();\n    fastJsonConfig.setSerializerFeatures(QuoteFieldNames,SkipTransientField,SortField,IgnoreNonFieldGetter);\n    FastJsonHttpMessageConverter4 fastJsonHttpMessageConverter4 = new FastJsonHttpMessageConverter4();\n    fastJsonHttpMessageConverter4.setFastJsonConfig(fastJsonConfig);\n    User user = new User(Person.MAN,550101);\n    HttpOutputMessage outputMessage = new HttpOutputMessage() {\n\n        OutputStream outputStream = new ByteArrayOutputStream();\n        HttpHeaders httpHeaders = new HttpHeaders();\n\n        @Override\n        public OutputStream getBody() throws IOException {\n            return outputStream;\n        }\n\n        @Override\n        public HttpHeaders getHeaders() {\n            return httpHeaders;\n        }\n    };\n    fastJsonHttpMessageConverter4.writeInternal(user, User.class, outputMessage);//\u6a21\u62df Spring MVC \u5199\u51fa\n    String jsonString = outputMessage.getBody().toString();//\u8f93\u51fa {\"areaCode\":550101,\"person\":\"MAN\"} \u800c\u4e0d\u662f\u671f\u671b\u7684 {\"areaCode\":550101,\"person\":0}\n    String expectJsonString = \"{\\\"areaCode\\\":550101,\\\"person\\\":0}\";\n    Assert.assertTrue(jsonString.equals(expectJsonString));\n}\n\n}\nenum Person{\n    MAN,WOMAN\n}\nclass User{\nprivate Person person;\n\nprivate Integer areaCode;\n\npublic User(){}\n\npublic User(Person person,Integer areaCode){\n    this();\n    this.person = person;\n    this.areaCode = areaCode;\n}\n\npublic Person getPerson() {\n    return person;\n}\n\npublic void setPerson(Person person) {\n    this.person = person;\n}\n\npublic Integer getAreaCode() {\n    return areaCode;\n}\n\npublic void setAreaCode(Integer areaCode) {\n    this.areaCode = areaCode;\n}\n\n}\n. @VictorZeng \u8c22\u8c22\uff0c\u8fd9\u6837\u53ef\u4ee5. ",
    "Leeforrest": "\u592a\u68d2\u4e86\uff0c\u81f4\u656c. ",
    "ExtremeYu": "```java\n/\n * Copyright (c) 2011-2014, hubin (jobob@qq.com).\n \n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n \n * http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n /\npackage com.baomidou.kisso;\nimport javax.servlet.http.HttpServletRequest;\nimport com.alibaba.fastjson.annotation.JSONField;\nimport com.baomidou.kisso.common.IpHelper;\n/*\n * \n * SSO\u767b\u5f55\u6807\u8bb0Cookie\u57fa\u672c\u4fe1\u606f\u5bf9\u8c61\n * \n * \n * @author hubin\n * @Date 2014-5-8\n /\n@SuppressWarnings(\"serial\")\npublic class SSOToken extends Token {\n/* \u767b\u5f55\u7c7b\u578b */\nprivate Integer type;\n\n/* \u9884\u7559 */\nprivate String data;\n\n/**\n * <p>\n * \u9884\u7559\u5bf9\u8c61\uff0c\u9ed8\u8ba4 fastjson \u4e0d\u53c2\u4e0e\u5e8f\u5217\u5316\uff08\u4e5f\u5c31\u662f\u4e0d\u5b58\u653e\u5728 cookie \u4e2d \uff09\n * </p>\n * <p>\n * \u6b64\u5904\u914d\u5408\u5206\u5e03\u5f0f\u7f13\u5b58\u4f7f\u7528\uff0c\u53ef\u4ee5\u5b58\u653e\u7528\u6237\u5e38\u7528\u57fa\u672c\u4fe1\u606f\n * </p>\n */\n@JSONField(serialize = false)\nprivate Object object;\n\npublic SSOToken() {\n    this.setApp(SSOConfig.getInstance().getRole());\n}\n\npublic SSOToken(HttpServletRequest request) {\n    this.setIp(IpHelper.getIpAddr(request));\n    this.setApp(SSOConfig.getInstance().getRole());\n}\n\npublic SSOToken(HttpServletRequest request, String uid) {\n    this(request);\n    this.setUid(uid);\n}\n\npublic SSOToken(HttpServletRequest request, String uid, Integer type) {\n    this(request, uid);\n    this.setType(type);\n}\n\npublic Integer getType() {\n    return type;\n}\n\npublic void setType(Integer type) {\n    this.type = type;\n}\n\npublic String getData() {\n    return data;\n}\n\npublic void setData(String data) {\n    this.data = data;\n}\n\n/**\n * \u7f13\u5b58\u7528\u6237\u4fe1\u606f\uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\n */\n@SuppressWarnings(\"unchecked\")\npublic <T> T getCacheObject() {\n    return (T) this.getObject();\n}\n\npublic Object getObject() {\n    return object;\n}\n\npublic void setObject(Object object) {\n    this.object = object;\n}\n\n}\n```. @kimmking  \u8fd9\u662f\u88ab\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\n. \u662f\u5565\u539f\u56e0\uff0c\u80fd\u4e0d\u80fd\u8bb2\u4e0b\u3002\u3002\u3002. @wenshao @kimmking \n\u6362\u62101.2.35 \u95ee\u9898\u4f9d\u65e7\uff01\n. ",
    "tbjinyuan": "\u5b89\u5168\u8f6c\u4e49\u540e &lt\n. @vipcxj \u90a3\u662fgithub\u663e\u793a\u95ee\u9898. @kimmking \u4e00\u6837\u7684\u622a\u65ad \nregister(FastJsonFeature.class);\n\u8bf7\u6c42\uff1a\ncurl -HAccept:application/javascript http://localhost:7001/api/books/2\n\u8f93\u51fa:\ncallback({\"data\":{\"bookId\":2,\"bookName\":\"Python\",\"isbn\":\"911122\",\"publishTime\":1501037292943,\"publisher\":\"taibei\"},\"success\":true,\"timestamp\":\"2017-07-26 1%\n\u53e6\u5916\u6211\u6d4b\u8bd5\u4ee3\u7801\u672c\u8eab\u5c31\u662futf-8\u7f16\u7801\uff0c\u6837\u672c\u6570\u636e\n   bookStore.add(new Book(2L,\"Python\",\"taibei\",\"911122\",new Date()));\n\u901a\u7528\u4ee3\u7801\u6362\u6210jackson,\n register(JacksonObjectMapperProvider.class);\n register(JacksonFeature.class);\n\u8f93\u51fa\u6548\u679c\uff1a\ncallback({\n  \"timestamp\" : \"2017-07-25 22:58:02\",\n  \"success\" : true,\n  \"data\" : {\n    \"bookId\" : 2,\n    \"bookName\" : \"Python\u6e90\u7801\u5256\u6790\",\n    \"publisher\" : \"\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\",\n    \"isbn\" : \"911122\",\n    \"publishTime\" : 1500994681985\n  }\n}). JacksonObjectMapperProviderdaima \u4ee3\u7801\u5982\u4e0b\uff0c\u4e3b\u8981\u662f\u53bb\u6389\u5b98\u65b9\u9ed8\u8ba4null\u503c\u7684\u8f93\u51fa\n/\n * @author zhengke(\u664b\u5143)\n * @date 2017/7/25 \u4e0b\u534810:21\n /\n@Provider\npublic class JacksonObjectMapperProvider implements ContextResolver {\nfinal ObjectMapper defaultObjectMapper;\n\npublic JacksonObjectMapperProvider() {\n    defaultObjectMapper = createDefaultMapper();\n}\n\n@Override\npublic ObjectMapper getContext(final Class<?> type) {\n    return defaultObjectMapper;\n}\n\nprivate static ObjectMapper createDefaultMapper() {\n    final ObjectMapper mapper = new ObjectMapper();\n    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n    mapper.enable(SerializationFeature.INDENT_OUTPUT);\n    return mapper;\n}\n\n}\n. /*\n * \u4e66\u7c4d\u8d44\u6e90API\u63a5\u53e3\u7ba1\u7406\u7c7b\n * @author zhengke(\u664b\u5143)\n * @date 2017/5/8 \u4e0b\u53487:43\n /\n@Path(\"books\")\n@Api(value = \"\u4e66\u7c4dweb \u8d44\u6e90\u670d\u52a1\", produces = \"application/json\")\npublic class BookResource extends BaseResource{\nprivate static final List<Book> bookStore = new ArrayList<>();\nprivate static  Map<Long,Book> idBookMaps = new HashMap<>();\nprivate static  Map<String,Book> nameBookMaps = new HashMap<>();\n\nstatic {\n    bookStore.add(new Book(1L,\"<script>Python\u57fa\u7840\u6559\u7a0b;</script>\",\"\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\",\"911122\",new Date()));\n    bookStore.add(new Book(2L,\"Python\",\"taibei\",\"911122\",new Date()));\n    bookStore.add(new Book(3L,\"Python\u5b66\u4e60\u624b\u518c\",\"\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\",\"911122\",new Date()));\n    bookStore.add(new Book(4L,\"\u53ef\u7231\u7684Python\",\"\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\",\"911122\",new Date()));\n    idBookMaps = CollectionConvertUtil.list2Map(bookStore,Book.class,\"bookId\");\n    nameBookMaps = CollectionConvertUtil.list2Map(bookStore,Book.class,\"bookName\");\n}\n\n\n@POST\n@Path(\"{id}\")\n@ApiOperation(value = \"\u65b0\u589e\u4e66\u7c4d\",\n    notes = \"\u4f20\u5165\u4e66\u7c4did\u6765\u4fee\u6539\u4e66\u7c4d\",\n    response = Book.class)\n@ApiResponses(value = { @ApiResponse(code = 400, message = \"id\u4e0d\u5408\u6cd5\"),\n    @ApiResponse(code = 404, message = \"\u672a\u627e\u5230\u670d\u52a1\") })\npublic Book createBook(@ApiParam(\"\u4e66\u7c4did\")@PathParam(\"id\") Long id,@ApiParam(\"updateBook\") Book newBook){\n    newBook.setBookId(6L);\n    return newBook;\n}\n\n@GET\n@Path(\"search\")\n@ApiOperation(value = \"\u6839\u636e\u6761\u4ef6\u67e5\u8be2\u4e66\u7c4d\",response = Book.class,responseContainer = \"List\")\npublic List<Book> searchBooks(@ApiParam(\"\u6761\u4ef6\") @QueryParam(\"q\") String q){\n    return bookStore.stream()\n        .filter(book -> book.getBookName().indexOf(q) > -1)\n        .collect(Collectors.toList());\n}\n\n\n@PUT\n@Path(\"{id}\")\n@ApiOperation(value = \"\u6839\u636eID\u4fee\u6539\u4e66\u7c4d\", response = Book.class)\npublic Book updateBook(@ApiParam(\"\u4e66\u7c4did\")@PathParam(\"id\") Long id, @ApiParam(\"updateBook\") Book updateBook){\n        return updateBook;\n}\n\n@DELETE\n@Path(\"{id}\")\n@ApiOperation(value = \"\u6839\u636eID\u5220\u9664\u4e66\u7c4d\")\npublic boolean delBookById(@ApiParam(\"\u4e66\u7c4did\") @PathParam(\"id\") Long id){\n    idBookMaps.remove(id);\n    return true;\n}\n\n\n@GET\n@ApiOperation(value = \"\u5206\u9875\u67e5\u8be2\",response = Book.class ,responseContainer = \"List\")\npublic List<Book> getByPaging(@ApiParam(\"\u5f53\u524d\u7684\u9875\u7801\") @QueryParam(\"start\") int start,\n                              @ApiParam(\"\u6bcf\u9875\u7684\u6570\u91cf\") @QueryParam(\"size\") int size){\n    return bookStore.subList(start,size);\n}\n\n@GET\n@Path(\"{id}\")\n@ApiOperation(value = \"\u83b7\u53d6\u56fe\u4e66\u4fe1\u606f\",response = Book.class)\n@Produces({\"application/javascript\",\"application/json\"})\n@JSONP(queryParam=\"callback\")\npublic Book getBookById(@PathParam(\"id\")  @ApiParam(\"\u4e66\u7c4did\") Long id){\n    return idBookMaps.get(id);\n}\n\n@GET\n@Path(\"list\")\n@ApiOperation(value = \"\u83b7\u53d6\u6240\u6709\u56fe\u4e66\u4fe1\u606f\",response = Book.class)\n@JSONP(queryParam=\"callback\")\n//@Produces({\"application/json\", \"application/javascript\"})\n@Produces({\"application/javascript\",\"application/json\" })\n\npublic List<Book> getBooks(){\n    List books = new ArrayList();\n    idBookMaps.values().stream().forEach(book -> books.add(book));\n    return books;\n}\n\n@GET\n@Path(\"name\")\n@ApiOperation(value = \"\u83b7\u53d6\u56fe\u4e66\u4fe1\u606f\",response = Book.class)\n@Produces({\"application/javascript\",\"application/json\"})\n@JSONP(queryParam=\"callback\")\npublic String  getBookName(){\n    return \"jinyuan\";\n}\n\n}\n. \u5173\u6ce8jsonp\u8bf7\u6c42   @GET\n    @Path(\"{id}\")\n    @ApiOperation(value = \"\u83b7\u53d6\u56fe\u4e66\u4fe1\u606f\",response = Book.class)\n    @Produces({\"application/javascript\",\"application/json\"})\n    @JSONP(queryParam=\"callback\")\n    public Book getBookById(@PathParam(\"id\")  @ApiParam(\"\u4e66\u7c4did\") Long id){\n        return idBookMaps.get(id);\n    }\uff0cjson\u8bf7\u6c42\u662f\u6ca1\u95ee\u9898\u7684. @wenshao @kimmking @VictorZeng @neil4dong @zhuzhaoyuan \u611f\u8c22\u5404\u4f4d\uff0ckimmking  \u5f88\ud83d\udc4d\uff0c\u524d\u7aef\u65f6\u95f4\u4e00\u76f4\u624e\u6839\u5728\u4e1a\u52a1\u4e00\u4e2a\u5927\u9879\u76ee\u4e2d\uff0c\u6ca1\u53ca\u65f6\u770b\u5230\u6d88\u606f\uff0c\u4eca\u665a\u4e0b\u8f7d\u65b0\u7248\u672c\uff0c\u672c\u5730\u6d4b\u8bd5\u4e86\uff0cok. /\n * Title: JerseyAutoDiscoverable\n * Description: JerseyAutoDiscoverable\n\n * @author Victor.Zxy\n * @see AutoDiscoverable\n * @since 1.2.36\n /\n@Priority(AutoDiscoverable.DEFAULT_PRIORITY + 1)\npublic class JerseyAutoDiscoverable implements AutoDiscoverable {\n@Override\npublic void configure(FeatureContext context) {\n\n    final Configuration config = context.getConfiguration();\n\n    // Register FastJson.\n    if (!config.isRegistered(FastJsonProvider.class)) {\n\n        context.register(FastJsonProvider.class);\n    }\n}\n\n}\n. \u4e0a\u9762\u90a3\u4e2a\u4ee3\u7801\u5f15\u8d77\u7684\u539f\u56e0. @VictorZeng  \u4f60\u524d\u9762\u4e0d\u8981\u6ce8\u518c\u5c31\u597d\u4e86\uff0c\u4f60\u57281.2.36\u65b0\u589eJerseyAutoDiscoverable\u8fd9\u4e2a\u81ea\u52a8\u6ce8\u518c\u7c7b\uff0c\u8fd9\u68371.2.36\u7248\u672c\u5f3a\u5978\u4e86\u7528\u6237\u5fc5\u987b\u7528fastjsonprovider\u628a\u9ed8\u8ba4\u7684JacksonAutoDiscoverable\u7ed9\u6539\u6389\u4e86\uff0c\u800c\u4e14\u7c7b\u540d\u4e5f\u53d6\u7684\u4e0d\u597d\uff0cJerseyAutoDiscoverable\u6539\u6210FastJsonProviderAutoDiscoverable\n\n. register(FastJsonFeature.class);\npublic class FastJsonFeature implements Feature {\nprivate final static String JSON_FEATURE = FastJsonFeature.class.getSimpleName();\n@Override\npublic boolean configure(final FeatureContext context) {\n    final Configuration config = context.getConfiguration();\n    final String jsonFeature = CommonProperties.getValue(config.getProperties(), config.getRuntimeType(), InternalProperties.JSON_FEATURE, JSON_FEATURE,\n        String.class);\n    // Other JSON providers registered.\n    if (!JSON_FEATURE.equalsIgnoreCase(jsonFeature)) {\n        return false;\n    }\n    // Disable other JSON providers.\n    context.property(PropertiesHelper.getPropertyNameForRuntime(InternalProperties.JSON_FEATURE, config.getRuntimeType()), JSON_FEATURE);\n    // Register FastJsonfastJsonProvider.\n    if (!config.isRegistered(FastJsonProvider.class)) {\n        FastJsonProvider fastJsonProvider = new FastJsonProvider();\n        FastJsonConfig fastJsonConfig=new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect,SerializerFeature.BrowserSecure);\n        fastJsonProvider.setFastJsonConfig(fastJsonConfig);\n        context.register(fastJsonProvider, MessageBodyReader.class, MessageBodyWriter.class);\n    }\n    return true;\n}\n\u6211\u8fd9\u6837\u5728\u8fd0\u884c\u65f6\u7b2c\u4e00\u6b21\u6ce8\u518c        context.register(fastJsonProvider, MessageBodyReader.class, MessageBodyWriter.class);\n. \u4e0a\u9762\u90a3\u4e2a\u4e5f\u662f\u53c2\u8003\u4e4b\u524dgoogle\u63d0\u4f9b\u7684\u601d\u8def. @VictorZeng \u8fd9\u4e2a\u8ba9\u7528\u6237\u9009\u62e9\u554a\uff0c\u4f60\u9ed8\u8ba4\u6ce8\u518c\u7684fastjsonprovider\u4e0d\u662f\u6211\u60f3\u8981\u7684\u554a. @VictorZeng  \u6211\u7684\u610f\u601d\u4f60\u9ed8\u8ba4\u6ca1\u5173\u7cfb\uff0c\u6211\u652f\u6301\uff0c\u4f46\u662f\u4f60\u9ed8\u8ba4\u6ce8\u518c\u7684fastjsonprovider\u4e0d\u662f\u6211\u60f3\u8981\u7684\u7c7b\u578b\uff0c\u6211\u9700\u8981\u5728fastjsonprovider\u505a\u6269\u5c55 \u6bd4\u5982xss\u5b89\u5168\u7279\u6027. @VictorZeng \u6211\u91cd\u65b0new \u4e00\u4e2a FastJsonProvider\nFastJsonProvider fastJsonProvider = new FastJsonProvider();\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect,SerializerFeature.BrowserSecure);\n        fastJsonProvider.setFastJsonConfig(fastJsonConfig);\n        register(fastJsonProvider); \u53ef\u4ee5\u8986\u76d6\u6389\u4f60\u5417\uff1f. @VictorZeng \u9ed8\u8ba4xss\u6f0f\u6d1e\u8fd9\u4e2a\u6211\u77e5\u9053\uff0c\u6211\u8ddf\u6e29\u5c11\u6c9f\u901a\u8fc7\uff0c\u6211\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u53e6\u5916in\u5efa\u8bae\u4f60\u6539\u540d\u6210FastJsonProviderAutoDiscoverable. @VictorZeng \u6211\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u538b\u6839\u4e0d\u884c\uff0c\u5982\u679c\u7528\u4e86\nFastJsonProvider fastJsonProvider = new FastJsonProvider();\nFastJsonConfig fastJsonConfig = new FastJsonConfig();\nfastJsonConfig.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect,SerializerFeature.BrowserSecure);\nfastJsonProvider.setFastJsonConfig(fastJsonConfig);\nregister(fastJsonProvider); \u6700\u540e\u76f4\u63a5\u8fdb\u4e0d\u4e86 FastJsonProvider,\u800c\u662fJacksonJsonProvider \n \uff0c\u8fd9\u4e2a\u4f60\u81ea\u5df1\u6ca1\u9a8c\u8bc1\u8fc7. @VictorZeng \u4f60\u627e\u5176\u4ed6\u540c\u5b66\u9a8c\u8bc1\u5427\uff0c\u6211\u592a\u5fd9\u4e86\uff0c\u6211\u8981\u63d0\u4ea4\u4e00\u4e2a\u7248\u672c\u628a\u4f60\u90a3\u4e2a\u7c7b\u53bb\u6389\uff0c\u5f71\u54cd\u5230\u6211\u4eec\u4e1a\u52a1\u4e86. @VictorZeng \n\n\u4e0a\u56fe\u5c31\u662f\u4f60\u8bf4\u7684\u90a3\u79cd\u65b9\u5f0f\u540e\u7684\u6548\u679c\uff0c\u7b49\u4e8e\u6211\u540c\u65f6\u6ce8\u518c\u4e86fastjsonprovider\u548cjersey\u81ea\u5e26\u7684JacksonJsonProvider\n,\u4e5f\u5c31\u662f\u8bf4\u4e4b\u524dFastJsonFeature\u4e2d\u7684// Disable other JSON providers.\ncontext.property(PropertiesHelper.getPropertyNameForRuntime(InternalProperties.JSON_FEATURE, config.getRuntimeType()), JSON_FEATURE); \u8fd9\u4e2a\u4ee3\u7801\u662f\u6709\u610f\u4e49\u7684. @VictorZeng \u4e0d\u641e\u4e2a\u6027\u5316. @kimmking jersey \u5185\u7f6ecallback\u4f7f\u7528\u4e86@JSONP\u6ce8\u89e3\u540e\uff0cJsonWithPaddingInterceptor \u4f1a\u89e3\u6790. \u5728\u5207\u6362\u652f\u6301fastjson\u4e4b\u524d\uff0c\u6211\u662f\u7528jersey\u81ea\u5e26\u7684jackson\u6846\u67b6\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a\n/\n * {@link AutoDiscoverable} registering {@link JacksonFeature} if the feature is not already registered.\n \n * @author Michal Gajdos\n /\n@Priority(AutoDiscoverable.DEFAULT_PRIORITY)\npublic class JacksonAutoDiscoverable implements AutoDiscoverable {\n@Override\npublic void configure(final FeatureContext context) {\n    if (!context.getConfiguration().isRegistered(JacksonFeature.class)) {\n        context.register(JacksonFeature.class);\n    }\n}\n\n}\n\u4f46jackjson\u6709\u4e2a\u7b56\u7565\u662f\u9ed8\u8ba4\u8f93\u51fa\u54ea\u4e9b\u4e3anull\u503c\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u8fd9\u8fb9\u9700\u8981\u4e0d\u8f93\u51fanull\uff0c\u6240\u4ee5\u6211\u7528rs\u63d0\u4f9b\u7684SPI\u6269\u5c55,\u5982\u4e0b\u56fe\n\n    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n-------------\u5206\u5272\u7ebf------------\n\u7c7b\u4f3c\u7684 @VictorZeng \u5982\u679c\u5f3a\u5236\u7ed1\u5b9a\u4e861.2.36\u7248\u672c\u4e2dfastjsonprovider\u4f5c\u4e3a\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u6846\u67b6\uff0c\u90a3\u4e48\u4e5f\u9700\u8981\u63d0\u4f9b\u7c7b\u4f3c\u7684\u6269\u5c55\u4ee3\u7801\uff0c\u8ba9\u4e1a\u52a1\u5207\u5165\u8fdb\u53bb\uff0c\u53c2\u8003\u4e0a\u9762\u7684\u5b9e\u73b0 @vipcxj @wenshao \n. @VictorZeng \u6069\uff0c\u5927\u5144\u5f1f\u54cd\u5e94\u5f88\u5feb\u5f88\u68d2\uff0c\u6211\u665a\u4e0a\u62bd\u7a7a\u9a8c\u8bc1\u4e0b\u529f\u80fd\uff0c\u5bf9\u4e86 @kimmking @VictorZeng @vipcxj @zhuzhaoyuan @ronnin \u5927\u4f19\u8c01\u6709\u4ee3\u7801\u8d70\u8bfb\u8fc7jersey\u6e90\u7801\uff0c\u6709\u6c89\u6dc0\u8bb0\u5f55\u5417 \u8f6c\u6211\u5206\u4eab\u4e0b\uff0c\u6211\u540e\u7eed\u6709\u7a7a\u4e5f\u6df1\u5165\u770b\u4e0b. ",
    "CassielLiu": "\u6ca1\u6709\u54e6\uff0c\u6211\u770b\u4e86\u4e4b\u524d\u7684\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316\u5f02\u5e38\u7c7b\u7684\u95ee\u9898\uff0c\u548c\u6211\u7684\u95ee\u9898\u662f\u4e0d\u4e00\u6837\u7684 . \u6211\u7684\u95ee\u9898\u662f\uff1a\u5f53\u6211\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u5f02\u5e38\u7c7bA\uff0c\u800c\u5f02\u5e38\u7c7bA\u7684cause\u91cc\u9762\u5305\u542b\u4e00\u4e2a\u5f02\u5e38\u7c7b\u5bf9\u8c61B\uff0c\u53cd\u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\u662f\uff1a\u5f02\u5e38\u7c7bA\u662f\u5b8c\u6574\u7684\uff0c\u4f46\u662f\u5f02\u5e38\u7c7bB\u4e2d\u6709stackTrace\u6709\u4fe1\u606f\uff0c\u5176\u4ed6\u7684\u90fd\u4fe1\u606f\u90fd\u4e22\u5931\u4e86\u3002. ",
    "transdoc": "\u611f\u8c22\u56de\u590d+newFeature\uff0c\u65b0\u624b\u4e00\u679a\uff0c\u4e0d\u77e5\u9053\u6211\u80fd\u5426\u81ea\u5df1\u53bb\u505a\u8fd9\u4e2a\u5b9e\u73b0\uff0c\u521d\u6b65\u60f3\u6cd5\u662f\u53c2\u8003jsonschema\u89c4\u8303\u548cJackson\u7684\u5b9e\u73b0\u3002. \u611f\u8c22\u56de\u590d+newFeature\uff0c\u65b0\u624b\u4e00\u679a\uff0c\u4e0d\u77e5\u9053\u6211\u80fd\u5426\u81ea\u5df1\u53bb\u505a\u8fd9\u4e2a\u5b9e\u73b0\uff0c\u521d\u6b65\u60f3\u6cd5\u662f\u53c2\u8003jsonschema\u89c4\u8303\u548cJackson\u7684\u5b9e\u73b0\u3002. ",
    "luoweipeter": "\u8c22\u8c22\uff0c\u7ecf\u63d0\u9192\u68c0\u67e5\u4e86\u901a\u8fc7MyBatis\u81ea\u52a8\u4ee3\u7801\u751f\u6210\u7684Getter\uff0cSetter\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u53d1\u73b0created\u7684getter\u65b9\u6cd5\u9519\u4e86\u3002\u8be5\u65b9\u6cd5\u88ab\u9519\u8bef\u7684\u58f0\u660e\u4e3apublic Date getCreated(Date created)\u3002. \u8c22\u8c22\uff0c\u7ecf\u63d0\u9192\u68c0\u67e5\u4e86\u901a\u8fc7MyBatis\u81ea\u52a8\u4ee3\u7801\u751f\u6210\u7684Getter\uff0cSetter\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u53d1\u73b0created\u7684getter\u65b9\u6cd5\u9519\u4e86\u3002\u8be5\u65b9\u6cd5\u88ab\u9519\u8bef\u7684\u58f0\u660e\u4e3apublic Date getCreated(Date created)\u3002. ",
    "futurespring": "\u6240\u4ee5\u8bf4\u6211\u6709\u70b9\u5f3a\u8feb\u75c7\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u7814\u7a76\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5bf9fastjson\u7684\u5927\u6982\u7684\u67b6\u6784\u6709\u4e86\u4e86\u89e3. \u6240\u4ee5\u8bf4\u6211\u6709\u70b9\u5f3a\u8feb\u75c7\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u7814\u7a76\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5bf9fastjson\u7684\u5927\u6982\u7684\u67b6\u6784\u6709\u4e86\u4e86\u89e3. ",
    "wushancool": "\n1\u3001@jsontype(serialzeFeatures = SerializerFeature.WriteClassName)\n\u8fd9\u4e2a\u8bed\u6cd5\u73b0\u5728\u662f\u4e0d\u62a5\u9519\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u7684\u4f5c\u7528\uff0c\u6211\u60f3\u6307\u5b9a\u67d0\u4e9b\u7c7b\u5b9e\u73b0WriteClassName\uff0c\u800c\u4e0d\u662f\u901a\u8fc7JSON.toJSONString\u4f20\u5165\u4e86SerializerFeature.WriteClassName\uff0c\u7ed3\u679c\u5f88\u591a\u7684\u7c7b\u90fd\u5f97\u5199\u201c@type\u201d\n\n\u8fd9\u4e2a\u529f\u80fd\u5bf9\u6211\u5f88\u6709\u7528\u3002  \n\u6211\u7ecf\u5e38\u78b0\u5230\u7684\u95ee\u9898\uff0c\u5f53\u6211\u5728\u4f7f\u7528\u6cdb\u578b\u7c7b\u7684\u65f6\u5019\uff0c\u5728\u4e00\u4e9b\u5730\u65b9\u4f7f\u7528\u4e86JSON.toJsonString(obj)\uff0c\u5e76\u6ca1\u6709\u5305\u542b\u6cdb\u578b\u7684@type\u5b57\u6bb5\uff0c\u8fd9\u6837\u53cd\u5e8f\u5217\u5316\u56de\u6765\u7684\u65f6\u5019\u662f\u4e0d\u80fd\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u5e94\u7684\u5b50\u7c7b\u7684\uff0c\u5728\u5355\u5143\u6d4b\u8bd5\u8fd8\u6709\u5f88\u591a\u5730\u65b9\u662f\u9700\u8981\u91cd\u590d\u5199JSON.toJsonString(obj,s...WriteClassName).\u8981\u662f\u80fd\u591f\u7528@JsonType(se...WriteClassName)\u5bf9\u6211\u6765\u8bb2\u7279\u522b\u597d\u7528\u3002\u8981\u662f\u80fd\u591f\u5728\u5b57\u6bb5\u4e0a\u4f7f\u7528@JsonField(se...WriteClassName)\u5c31\u66f4\u76f4\u63a5\u4e86\u3002     \n\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u6211\u770b\u4e86\u6587\u6863\u4e2d\u4ecb\u7ecd\u7684\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u4f7f\u7528\u5b9a\u4e49serializer\u6216\u8005filter\u8ba9\u6211\u611f\u89c9\u90fd\u4e0d\u5982\u8fd9\u79cd\u5199\u6cd5\u66f4\u597d\u3002\u4e0d\u77e5\u9053\u662f\u56e0\u4e3a\u5b9e\u73b0\u4e0a\u7684\u96be\u5ea6\u8fd8\u662f\u56e0\u4e3a\u5565\uff0c\u6709\u8fd9\u4e2a\u5c5e\u6027\u5374\u6ca1\u6709\u7528\uff0c\u86ee\u5947\u602a\u7684\u3002. > 1\u3001@jsontype(serialzeFeatures = SerializerFeature.WriteClassName)\n\n\u8fd9\u4e2a\u8bed\u6cd5\u73b0\u5728\u662f\u4e0d\u62a5\u9519\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u7684\u4f5c\u7528\uff0c\u6211\u60f3\u6307\u5b9a\u67d0\u4e9b\u7c7b\u5b9e\u73b0WriteClassName\uff0c\u800c\u4e0d\u662f\u901a\u8fc7JSON.toJSONString\u4f20\u5165\u4e86SerializerFeature.WriteClassName\uff0c\u7ed3\u679c\u5f88\u591a\u7684\u7c7b\u90fd\u5f97\u5199\u201c@type\u201d\n\n\u8fd9\u4e2a\u529f\u80fd\u5bf9\u6211\u5f88\u6709\u7528\u3002  \n\u6211\u7ecf\u5e38\u78b0\u5230\u7684\u95ee\u9898\uff0c\u5f53\u6211\u5728\u4f7f\u7528\u6cdb\u578b\u7c7b\u7684\u65f6\u5019\uff0c\u5728\u4e00\u4e9b\u5730\u65b9\u4f7f\u7528\u4e86JSON.toJsonString(obj)\uff0c\u5e76\u6ca1\u6709\u5305\u542b\u6cdb\u578b\u7684@type\u5b57\u6bb5\uff0c\u8fd9\u6837\u53cd\u5e8f\u5217\u5316\u56de\u6765\u7684\u65f6\u5019\u662f\u4e0d\u80fd\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u5e94\u7684\u5b50\u7c7b\u7684\uff0c\u5728\u5355\u5143\u6d4b\u8bd5\u8fd8\u6709\u5f88\u591a\u5730\u65b9\u662f\u9700\u8981\u91cd\u590d\u5199JSON.toJsonString(obj,s...WriteClassName).\u8981\u662f\u80fd\u591f\u7528@JsonType(se...WriteClassName)\u5bf9\u6211\u6765\u8bb2\u7279\u522b\u597d\u7528\u3002\u8981\u662f\u80fd\u591f\u5728\u5b57\u6bb5\u4e0a\u4f7f\u7528@JsonField(se...WriteClassName)\u5c31\u66f4\u76f4\u63a5\u4e86\u3002     \n\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u6211\u770b\u4e86\u6587\u6863\u4e2d\u4ecb\u7ecd\u7684\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u4f7f\u7528\u5b9a\u4e49serializer\u6216\u8005filter\u8ba9\u6211\u611f\u89c9\u90fd\u4e0d\u5982\u8fd9\u79cd\u5199\u6cd5\u66f4\u597d\u3002\u4e0d\u77e5\u9053\u662f\u56e0\u4e3a\u5b9e\u73b0\u4e0a\u7684\u96be\u5ea6\u8fd8\u662f\u56e0\u4e3a\u5565\uff0c\u6709\u8fd9\u4e2a\u5c5e\u6027\u5374\u6ca1\u6709\u7528\uff0c\u86ee\u5947\u602a\u7684\u3002. ",
    "sailfly": "\u4e0d\u60f3\u52a0\u4e00\u4e2a@type\u8fd9\u6837\u7684\u5b57\u6bb5\u6ce8\u5165\u5230json\u4e2d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\u6ce8\u5165\u5417\uff1f\u6bd4\u5982\u5728\u6bcf\u4e2a\u5177\u4f53\u7684\u5b50\u7c7b\u4e2d\u52a0\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u679a\u4e3e\u4e2d\u6307\u5b9a\u4e86\u6bcf\u79cd\u5b50\u7c7b\u7684\u5b9e\u73b0\u7c7b\u7684clazz\uff0c\u4f46\u662f\u5728\u81ea\u5b9a\u4e49\u7684Deserializer\u4e2d\uff0c\u901a\u8fc7\u7236\u7c7b\u7684clazz\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684\u53cd\u5e8f\u5217\u5316\u5668\uff0c\u5c1d\u8bd5\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u65e0\u6cd5\u5b9e\u73b0\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6700\u540e\u5b9e\u5728\u6ca1\u529e\u6cd5\uff0c\u53ea\u6709\u6839\u636e\u679a\u4e3e\u7c7b\u578b\uff0c\u5f3a\u5236\u53bb\u663e\u793a\u4e00\u4e2a\u4e2a\u7684\u521b\u5efa\u5bf9\u5e94\u7684\u5177\u4f53\u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u3002. \u4e0d\u60f3\u52a0\u4e00\u4e2a@type\u8fd9\u6837\u7684\u5b57\u6bb5\u6ce8\u5165\u5230json\u4e2d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\u6ce8\u5165\u5417\uff1f\u6bd4\u5982\u5728\u6bcf\u4e2a\u5177\u4f53\u7684\u5b50\u7c7b\u4e2d\u52a0\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u679a\u4e3e\u4e2d\u6307\u5b9a\u4e86\u6bcf\u79cd\u5b50\u7c7b\u7684\u5b9e\u73b0\u7c7b\u7684clazz\uff0c\u4f46\u662f\u5728\u81ea\u5b9a\u4e49\u7684Deserializer\u4e2d\uff0c\u901a\u8fc7\u7236\u7c7b\u7684clazz\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684\u53cd\u5e8f\u5217\u5316\u5668\uff0c\u5c1d\u8bd5\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u65e0\u6cd5\u5b9e\u73b0\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6700\u540e\u5b9e\u5728\u6ca1\u529e\u6cd5\uff0c\u53ea\u6709\u6839\u636e\u679a\u4e3e\u7c7b\u578b\uff0c\u5f3a\u5236\u53bb\u663e\u793a\u4e00\u4e2a\u4e2a\u7684\u521b\u5efa\u5bf9\u5e94\u7684\u5177\u4f53\u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u3002. ",
    "zhenjunMa": "\u6211\u4f7f\u75281.2.35\u6700\u65b0\u7248\u672c\u505a\u4e86\u5b9e\u9a8c\u3002\n\u8c03\u7528\u65b9\u5f0f\u4e3a\uff1aJSON.parseObject(\"{\\\"code\\\":500, \\\"message\\\":\\\"sfsffdff\\\"}\", HttpException.class)\n1.\u5982\u679c\u8c03\u7528\u7c7b\u8ddfHttpException\u7c7b\u662f\u4e0d\u662f\u5185\u90e8\u7c7b\u7684\u5173\u7cfb\uff0c\u5219\u89e3\u6790\u6b63\u786e\u3002\n2.\u5982\u679cHttpException\u662f\u8c03\u7528\u7c7b\u7684\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5219\u89e3\u6790\u6b63\u786e\u3002\n3.\u5982\u679cHttpException\u662f\u8c03\u7528\u7c7b\u7684\u975e\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5219\u89e3\u6790\u5931\u8d25\uff0c\u629b\u51fa\u5f02\u5e38\nCan not set int field com.meituan.test.TestJSON$HttpException.code to java.lang.Exception\n\u539f\u56e0\u662fHttpException\u7c7b\u7ee7\u627f\u81eaException,\u6700\u540e\u4f1a\u901a\u8fc7ThrowableDeserializer\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u7531\u4e8e\u5185\u90e8\u7c7b\u7684\u5173\u7cfb\uff0c\u4f1a\u76f4\u63a5\u53d8\u4e3a\u521d\u59cb\u5316Exception\u5bf9\u8c61\uff0c\u56e0\u6b64\u62a5\u9519\u3002. \u6211\u4f7f\u75281.2.35\u6700\u65b0\u7248\u672c\u505a\u4e86\u5b9e\u9a8c\u3002\n\u8c03\u7528\u65b9\u5f0f\u4e3a\uff1aJSON.parseObject(\"{\\\"code\\\":500, \\\"message\\\":\\\"sfsffdff\\\"}\", HttpException.class)\n1.\u5982\u679c\u8c03\u7528\u7c7b\u8ddfHttpException\u7c7b\u662f\u4e0d\u662f\u5185\u90e8\u7c7b\u7684\u5173\u7cfb\uff0c\u5219\u89e3\u6790\u6b63\u786e\u3002\n2.\u5982\u679cHttpException\u662f\u8c03\u7528\u7c7b\u7684\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5219\u89e3\u6790\u6b63\u786e\u3002\n3.\u5982\u679cHttpException\u662f\u8c03\u7528\u7c7b\u7684\u975e\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5219\u89e3\u6790\u5931\u8d25\uff0c\u629b\u51fa\u5f02\u5e38\nCan not set int field com.meituan.test.TestJSON$HttpException.code to java.lang.Exception\n\u539f\u56e0\u662fHttpException\u7c7b\u7ee7\u627f\u81eaException,\u6700\u540e\u4f1a\u901a\u8fc7ThrowableDeserializer\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u7531\u4e8e\u5185\u90e8\u7c7b\u7684\u5173\u7cfb\uff0c\u4f1a\u76f4\u63a5\u53d8\u4e3a\u521d\u59cb\u5316Exception\u5bf9\u8c61\uff0c\u56e0\u6b64\u62a5\u9519\u3002. \u6211\u6d4b\u8bd5\u4f7f\u7528\u7684\u4e0d\u662fandroid\u7248\uff0c  \u8fd8\u662f\u7b49\u9ad8\u624b\u6765\u89e3\u7b54\u5427. \u8fd9\u4e2a\u95ee\u9898\u5f88\u5178\u578b\u554a\uff0c\u662f\u56e0\u4e3afastjson\u5bf9Throwable\u7684\u5b50\u7c7b\u53cd\u5e8f\u5217\u5316\u65f6\u5728\u9009\u62e9\u6784\u9020\u65b9\u6cd5\u7684\u65f6\u5019\u987a\u5e8f\u5b9a\u6b7b\u4e86\uff0c\u4f18\u5148\u542b\u6709cause\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5176\u6b21\u662f\u542b\u6709String\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6700\u540e\u624d\u662f\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c\u5728\u4f60\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53cd\u5e8f\u5217\u5316\u4f7f\u7528\u7684\u662fTestException(String data)   \u53c8\u628a\u4e4b\u524d\u7684message\u4f5c\u4e3avalue\u4f20\u8fdb\u53bb\u4e86\uff0c\u6240\u4ee5\u51fa\u4e86\u4f60\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff0c\u5728\u7c7bThrowableDeserializer\u4e2d\n```\n        for (Constructor<?> constructor : exClass.getConstructors()) {\n            Class<?>[] types = constructor.getParameterTypes();\n            if (types.length == 0) {\n                defaultConstructor = constructor;\n                continue;\n            }\n        if (types.length == 1 && types[0] == String.class) {\n            messageConstructor = constructor;\n            continue;\n        }\n\n        if (types.length == 2 && types[0] == String.class && types[1] == Throwable.class) {\n            causeConstructor = constructor;\n            continue;\n        }\n    }\n\n    if (causeConstructor != null) {\n        return (Throwable) causeConstructor.newInstance(message, cause);\n    }\n\n    if (messageConstructor != null) {\n        return (Throwable) messageConstructor.newInstance(message);\n    }\n\n    if (defaultConstructor != null) {\n        return (Throwable) defaultConstructor.newInstance();\n    }\n\n\u8fd9\u91cc\u5e76\u6ca1\u6709\u8d70\u6ce8\u89e3\u903b\u8f91\uff0c\u6211\u60f3\u60f3\u600e\u4e48\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002. \u53e6\u5916@JSONCreator\u6ce8\u89e3\uff0c\u53ea\u5bf9\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6216\u8005\u5f53\u524d\u7c7b\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\u7684\u65f6\u5019\u624d\u4f1a\u5bf9\u8be5\u6ce8\u89e3\u8fdb\u884c\u89e3\u6790\nboolean isInterfaceOrAbstract = clazz.isInterface() || Modifier.isAbstract(clazz.getModifiers());\n if (defaultConstructor == null || isInterfaceOrAbstract) {\n            creatorConstructor = getCreatorConstructor(clazz);\n//...\u5176\u4ed6\u903b\u8f91\n```. ",
    "muziling": "\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u7c7b\uff0c\u914d\u7f6e\u5230xml\u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\uff0c\u770b\u6765\u4ee3\u7801\u53ea\u8981\u5bf9propertyNamingStrategy\u52a0\u4e00\u4e2aset\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\n`\nimport com.alibaba.fastjson.PropertyNamingStrategy;\nimport com.alibaba.fastjson.serializer.SerializeConfig;\npublic class FastJsonSerializeConfig extends SerializeConfig {\n    public FastJsonSerializeConfig() {\n        super();\n    }\n    public void setPropertyNamingStrategy(PropertyNamingStrategy propertyNamingStrategy) {\n        this.propertyNamingStrategy = propertyNamingStrategy;\n    }\n}\n`. ",
    "superwen0001": "fasjson\u7248\u672c1.2.28. \u55ef,\u5347\u7ea7\u52301.2.35\u6ca1\u95ee\u9898\u4e86. ",
    "ScienJus": "@lveliu \u4f7f\u7528\u7684\u7248\u672c\u662f\uff1f\u5728\u65e7\u7248\u672c\u662f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u65b0\u7248\u672c\u5e94\u8be5\u5df2\u7ecf\u4fee\u590d\u4e86\u3002. FastJson is based on jdk 1.5. . ",
    "gaigeshen": "1.2.35. ",
    "markray": "\u6211\u4e5f\u5728\u627e\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u8bf7\u95ee\u697c\u4e3b\u662f\u4ec0\u4e48\u65b9\u6cd5\uff1f. ",
    "Luckywb": "\u6d4b\u8bd5\u4ee3\u7801\n```java\n@SpringBootApplication\npublic class ControllerTest {\npublic static abstract class GenericEntity<ID extends Serializable> {\n    public abstract ID getId();\n}\n\npublic static class Bean extends GenericEntity<Long> {\n    private Long id;\n\n    @Override\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n}\n\npublic static class AbstractController<ID extends Serializable, PO extends GenericEntity<ID>> {\n\n    @PostMapping(consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n    public ID save(@RequestBody PO dto) {\n        //do something\n        return dto.getId();\n    }\n\n}\n\n@RestController\n@RequestMapping(\"bean\")\npublic static class BeanController extends AbstractController<Long, Bean> {\n\n}\n\n@Configuration\n@Order(Ordered.LOWEST_PRECEDENCE + 1)\npublic static class WebMvcConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        FastJsonpHttpMessageConverter4 converter = new FastJsonpHttpMessageConverter4();\n        converters.add(converter);\n    }\n}\n\npublic static void main(String[] args) {\n    SpringApplication.run(ControllerTest.class, args);\n}\n\n}\nmaven\u4f9d\u8d56xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n4.0.0\n<groupId>com.test.ws</groupId>\n<artifactId>test</artifactId>\n<version>0.0.1-SNAPSHOT</version>\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n        <version>1.4.0.RELEASE</version>\n        <exclusions>\n            <exclusion>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n\n    <dependency>\n        <groupId>com.alibaba</groupId>\n        <artifactId>fastjson</artifactId>\n        <version>1.2.35</version>\n    </dependency>\n\n</dependencies>\n\n\n```\nPOST /bean    content-type:application/json\njson\n{\n    \"id\":1\n}\n```\n2017-08-04 19:08:41.883 ERROR 14074 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: argument type mismatch\nHandlerMethod details: \nController [com.yhtframework.rpc.grpc.utils.ControllerTest$BeanController]\nMethod [public ID com.yhtframework.rpc.grpc.utils.ControllerTest$AbstractController.save(PO)]\nResolved arguments: \n[0] [type=com.alibaba.fastjson.JSONObject] [value={\"id\":1}]\n] with root cause\njava.lang.IllegalArgumentException: argument type mismatch\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_80]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_80]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_80]\n    at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_80]\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_80]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_80]\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.4.jar:8.5.4]\n    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_80]\n.java\npublic Object read(Type type, Class<?> contextClass, HttpInputMessage inputMessage) throws IOException, HttpMessageNotReadableException;\n```\nFastJsonpHttpMessageConverter4\u7684read\u65b9\u6cd5\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u8fd4\u56de\u7684\u662fJSONObject\uff0c\u5b9e\u9645\u5e94\u8be5\u8fd4\u56deBean\nJackson\u7684HttpMessageConverter\u5b9e\u73b0\u662f\u6ca1\u6709\u95ee\u9898\u7684. \u662f\u8fd9\u6837\u7684\uff0c\u4ee5\u524d\u63a5\u53e3\u8981\u4e0d\u8981\u8de8\u57df\u662f\u524d\u7aef\u63a7\u5236\u7684\u524d\u7aef\u5e26\u4e86callback\u53c2\u6570\u5c31\u8fd4\u56dejavascript\uff0c\u4e0d\u5e26\u8fd8\u662f\u6309json\u6570\u636e\u8fd4\u56de\uff0c\u73b0\u5728\u5982\u679c\u4e0d\u505a\u5224\u65ad\u5c31\u4e0d\u80fd\u517c\u5bb9\u8001\u7248\u672c\u4e86. 1.2.35\u53ca\u4e4b\u524d\u7248\u672c\u6ca1\u95ee\u9898\uff0c\u5347\u7ea7\u4e4b\u540e\u5c31\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86.... \u8fd4\u56de\u7684\u6570\u636e\u662fjson\uff0c\u4f46Response header\u4e0d\u5bf9\uff0c\u5e94\u8be5\u662fcontent-type \u2192application/json\n\u73b0\u5728\u53d8\u6210\u4e86content-type \u2192application/javascript. @neil4dong \u524d\u7aef\u51fa\u95ee\u9898\u4e86\u6240\u4ee5\u624d\u6765\u63d0\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e1a\u52a1\u4ee3\u7801\u6ca1\u6709\u505a\u4ec0\u4e48\u53d8\u52a8\uff0c\u53ea\u662f\u5347\u7ea7\u4e86fastjson\u7248\u672c\u5c31\u51fa\u95ee\u9898\uff0c\u5c0f\u7248\u672c\u5347\u7ea7\u5efa\u8bae\u5411\u4e0b\u505a\u4e2a\u517c\u5bb9\n\u73b0\u5728\u6211\u81ea\u5df2\u91cd\u5199\u4e86\u4e0b\u65b9\u6cd5protected void writeInternal(Object object, HttpOutputMessage outputMessage) throws IOException\nif (value instanceof MappingFastJsonValue) {\n    MappingFastJsonValue mfjv = (MappingFastJsonValue) value;\n    if(mfjv.getJsonpFunction() != null && !\"\".equals(mfjv.getJsonpFunction())){\n        isJsonp = true;\n    }\n    value = mfjv.getValue();\n}. 1.2.35\u7248\u672c\u6216\u4e4b\u524d\u7684\u7248\u672c\u90fd\u53ef\u4ee5... \u53ef\u4ee5\u5148\u81ea\u5df2\u91cd\u5199\u4e86\u4e0b\u65b9\u6cd5protected void writeInternal(Object object, HttpOutputMessage outputMessage) throws IOException\uff0c\u52a0\u4e0afunction\u5224\u65ad. \u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u51fa\u4e8e\u5b89\u5168\u6027\u8003\u8651\uff0c\u8001\u7248\u672c\u7684jsonp\u5b9e\u73b0\u7c7b\u90fd\u6807\u8bb0\u4e3aDeprecated\uff0c\u65b0\u7684\u5b9e\u73b0\u65b9\u5f0f\u770b\u6e90\u7801\u597d\u50cf\u90fd\u8981\u52a0ResponseJSONP\u6ce8\u89e3\uff0c\u6709\u70b9\u5c0f\u96be\u7528. ",
    "dudan57": "\u5728\u8fd9\u91cc\u7528JSON.toJSONString(binder);\u7684\u786e\u6ca1\u95ee\u9898\u4e86\uff0c\u4f46\u7528JSON.toJSON(binder);\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\uff1f\n\u5982\u679c\u5199\u4e2aController\uff0cpublic void getSth(String name, String code)\n\u65b9\u6cd5\u4f7f\u7528x-www-form-urlencoded\u4f20\u9012\u53c2\u6570\uff0c\u7136\u540e\u901a\u8fc7AOP\u6253\u5370\u53c2\u6570\nlog.info(\"\\n\u65b9\u6cd5:{}\\n\u53c2\u6570:{}\", joinPoint.getSignature(), JSON.toJSONString(joinPoint.getArgs()));\n\u8fd8\u662f\u4f1a\u629b\u5f02\u5e38\uff0c\u5f02\u5e38\u4fe1\u606f\uff1a\n\ncom.alibaba.fastjson.JSONException: write javaBean error, class org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder, fieldName : 0, write javaBean error, class org.springframework.validation.BeanPropertyBindingResult, fieldName : bindingResult\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:364)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:111)\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:307)\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:285)\n    at com.alibaba.fastjson.serializer.ObjectArrayCodec.write(ObjectArrayCodec.java:118)\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:278)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:652)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:594)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:559)\n    at com.test.config.ControllerLogInterceptor.methodBefore(ControllerLogInterceptor.java:30)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)\n    at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)\n    at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)\n    at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\n    at com.test.account.controller.FundAccountManageController$$EnhancerBySpringCGLIB$$ffd09760.init()\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\n    at org.springframework.web.method.annotation.InitBinderDataBinderFactory.initBinder(InitBinderDataBinderFactory.java:62)\n    at org.springframework.web.bind.support.DefaultDataBinderFactory.createBinder(DefaultDataBinderFactory.java:57)\n    at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:118)\n    at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\n    at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\n    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: com.alibaba.fastjson.JSONException: write javaBean error, class org.springframework.validation.BeanPropertyBindingResult, fieldName : bindingResult\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:364)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:111)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:265)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:332)\n    ... 88 common frames omitted\nCaused by: java.lang.reflect.InvocationTargetException: null\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:476)\n    at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValueDirect(FieldSerializer.java:132)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:213)\n    ... 91 common frames omitted\nCaused by: java.lang.IllegalStateException: Cannot access properties on null bean instance 'clientid'!\n    at org.springframework.util.Assert.state(Assert.java:70)\n    at org.springframework.validation.BeanPropertyBindingResult.createBeanWrapper(BeanPropertyBindingResult.java:105)\n    at org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor(BeanPropertyBindingResult.java:92)\n    ... 98 common frames omitted\n2017-08-04 09:19:58 [http-nio-1314-exec-3] ERROR c.y.f.c.c.ControllerLogInterceptor - AOP methodBefore:\ncom.alibaba.fastjson.JSONException: write javaBean error, class org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder, fieldName : 0, write javaBean error, class org.springframework.validation.BeanPropertyBindingResult, fieldName : bindingResult\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:364)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:111)\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:307)\n    at com.alibaba.fastjson.serializer.JSONSerializer.writeWithFieldName(JSONSerializer.java:285)\n    at com.alibaba.fastjson.serializer.ObjectArrayCodec.write(ObjectArrayCodec.java:118)\n    at com.alibaba.fastjson.serializer.JSONSerializer.write(JSONSerializer.java:278)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:652)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:594)\n    at com.alibaba.fastjson.JSON.toJSONString(JSON.java:559)\n    at com.test.config.ControllerLogInterceptor.methodBefore(ControllerLogInterceptor.java:30)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)\n    at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)\n    at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)\n    at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\n    at com.test.account.controller.FundAccountManageController$$EnhancerBySpringCGLIB$$ffd09760.init()\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\n    at org.springframework.web.method.annotation.InitBinderDataBinderFactory.initBinder(InitBinderDataBinderFactory.java:62)\n    at org.springframework.web.bind.support.DefaultDataBinderFactory.createBinder(DefaultDataBinderFactory.java:57)\n    at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:118)\n    at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\n    at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\n    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: com.alibaba.fastjson.JSONException: write javaBean error, class org.springframework.validation.BeanPropertyBindingResult, fieldName : bindingResult\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:364)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:111)\n    at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:265)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:332)\n    ... 88 common frames omitted\nCaused by: java.lang.reflect.InvocationTargetException: null\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:476)\n    at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValueDirect(FieldSerializer.java:132)\n    at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:213)\n    ... 91 common frames omitted\nCaused by: java.lang.IllegalStateException: Cannot access properties on null bean instance 'certificateno'!\n    at org.springframework.util.Assert.state(Assert.java:70)\n    at org.springframework.validation.BeanPropertyBindingResult.createBeanWrapper(BeanPropertyBindingResult.java:105)\n    at org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor(BeanPropertyBindingResult.java:92)\n    ... 98 common frames omitted\n. ",
    "jwongo": "\u8865\u5145\u4e00\u70b9 \nBar\u662f\u901a\u8fc7\u6cdb\u578b\u63a5\u53e3\u62ff\u5230\u7684\u6570\u636e\ne.g.\n<T> T getBar(String params); \nBar bar = getBar(params);. ",
    "kenhan90": "Use Fastjson  1.2.47\nCaused by: com.alibaba.fastjson.JSONException: can not cast to Timestamp, value : 2006-8-9\n    at com.alibaba.fastjson.util.TypeUtils.castToSqlDate(TypeUtils.java:412)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:750)\n    at com.bcss.poi.excel.utils.ExcelUtils.setProperty(ExcelUtils.java:1414)\n    at com.bcss.poi.excel.utils.ExcelUtils.readRow(ExcelUtils.java:424)\n. ",
    "acxlam": "\u597d\u7684\uff0c\u8bd5\u4e86\u4e0b(Map)JSONObject.parse(oldStyleJson).get(\"1\") \u6b63\u786e\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u5ffd\u7565\u3002\n. ",
    "zxk175": "\u56e0\u4e3a\u5bf9\u8c61\u7684\u67d0\u4e2a\u5b57\u6bb5\u662fjson\uff0c\u8f93\u51fa\u4f1a\u88ab\u8f6c\u4e49\n\n. \u7248\u672c 1.2.38. \u73b0\u5728\u53ef\u4ee5\u4e86  \u4e5f\u6ca1\u6539\u8fc7\u4ee3\u7801 .  \"endTime\": \"2017-11-04 11:10:19\",\n \"startTime\": \"2017-10-05 00:00:00\",. \n. \u5df2\u7ecf\u89e3\u51b3\u4e86\n\u662f\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u9ed8\u8ba4\u65e5\u671f\u683c\u5f0f. \u5df2\u7ecf\u53ef\u4ee5\u4e86  \u53ef\u80fd\u662f\u56e0\u4e3acontroller\u6dfb\u52a0\u4e86\u672a\u4f7f\u7528\u5230\u7684\u81ea\u5b9a\u4e49\u6ce8\u89e3. \n\u8fd9\u6837\u53ef\u4ee5\u89e3\u51b3. ",
    "wenzuowei110": "\n\n\u516c\u53f8\u6709\u4e2aC/S\u7cfb\u7edf\uff0cClient\u662f\u7528\u7684GBK\u89e3\u7801\uff0c\u73b0\u5728Server\u91cd\u6784\u4f46\u9700\u8981\u517c\u5bb9\u8001\u7248\u672cClient\uff0c\u5982\u679c\u4e0d\u7528\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bdd\u82f1\u6587\u62ec\u53f7\u4e4b\u7c7b\u7684\u4f1a\u88ab\u8f6c\u4e49\uff0c\u800c\u5ba2\u6237\u7aef\u4f1a\u8bc6\u522b\u4e3a\u666e\u901a\u6587\u672c\u5bfc\u81f4\u51fa\u9519\u3002\u6240\u4ee5\u6211\u60f3\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u8fd9\u4e2a\u5c5e\u6027\u88abDisable\u7684\u5462\uff1f\u6709\u66ff\u4ee3\u65b9\u6848\u5417\uff1f. \n\u6211\u7684\u95ee\u9898\u4e0d\u662f\u7531\u4e8eDisableCheckSpecialChar\u5bfc\u81f4\u7684\uff0c\u800c\u662fFastJsonConfig\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e2d\u7684SerializerFeature.BrowserSecure\u8d77\u7684\u4f5c\u7528\uff0c\u5e0c\u671b\u5bf9\u4f60\u4eec\u6709\u542f\u53d1\u3002. ",
    "trvps": "\u540c\u6709\u8fd9\u4e2a\u9700\u6c42. ",
    "Gaea-IT": "redis \u4f7f\u7528\u7684fastjson \u4f5c\u4e3a\u5e8f\u5217\u5316\u5de5\u5177\uff0c\n\n\u4e5f\u6709\u8fd9\u79cd\u95ee\u9898\uff0c\u6c42\u89e3\u51b3\n. ",
    "tonycody": "\u4e4b\u524d\u7528\u76841.2.7\uff0c\u7531\u4e8eDisableCheckSpecialChar\u8fd8\u6709\u6548\uff0c\u6b63\u5e38\u7528\u7684\u3002\n\u524d\u51e0\u5929\u5347\u52301.2.47\uff0c\u7531\u4e8eDisableCheckSpecialChar\u5931\u6548\u4e86\uff0c\u53ef\u4ee5\u8bbe\u7f6eSerializerFeature.DisableCheckSpecialChar\uff0c\u4f46\u4e0d\u8d77\u4f5c\u7528\uff0c\u4e0d\u5e94\u8be5\u8f6c\u4e49\u7684\u6570\u636e\u8f6c\u4e49\u4e86. @wenshao \n\u8fd9\u79cd\u5c31\u9700\u8981\u4e0d\u80fd\u518d\u8f6c\u4e49\uff0c\u5426\u5219\u4f20\u7ed9\u5bf9\u65b9\u600e\u4e48\u90fd\u662f\u9519\u7684\uff0c\u652f\u6301\u4e00\u4e0b\u4ee5\u524d\u8fd9\u4e2a\u7279\u6027\u5427\u3002\u6216\u8005\u6709\u6ca1\u6709\u5176\u5b83\u66ff\u4ee3\u65b9\u6848\u3002\n\u6211\u770b\u4ece1.2.11\u7248\u672c\u5f00\u59cb\u5c31\u6807\u8bb0 SerializerFeature.DisableCheckSpecialChar\u3002\u4e4b\u524d\u7528\u76841.2.7 \u7248\u672c\u4e00\u76f4\u6ca1\u95ee\u9898\uff0c\u6362\u6210\u4e861.2.47\u3002\u8fd9\u79cd\u6570\u636e\u5e8f\u5217\u5316\u5c31\u6709\u95ee\u9898\n\n1.2.7 \u6267\u884c\u7ed3\u679c\n\n1.2.47 \u6267\u884c\u7ed3\u679c\n\n. ",
    "limuyang2": "\u8c22\u8c22\uff0c\u4e00\u5c0f\u65f6\u524d\u770b\u5230\u60a8\u53d1\u5e03\u4e8661\u65b0\u7248\u3002\u5e78\u82e6\u4e86\n\u53d1\u81ea\u6211\u7684 iPhone\n\u5728 2017\u5e748\u67089\u65e5\uff0c00:54\uff0c\u9ad8\u94c1 notifications@github.com<mailto:notifications@github.com> \u5199\u9053\uff1a\nhttps://github.com/alibaba/fastjson/releases/tag/1.1.61.android\n\u5df2\u7ecf\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/alibaba/fastjson/issues/1374#issuecomment-321016346, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AZVb2VOAXunN0kSTZLTR2_CRxfDCK495ks5sWJLYgaJpZM4OuZ8R.\n. thank you\uff0cAfter I added this\uff0c@jsonfield this can work\ncompile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\nmy kotlin version is 1.1.51. @livelazily \u6211\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u540e\uff0c@JSONField\u53ef\u4ee5\u5de5\u4f5c\u4e86\uff0ccompile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\". ",
    "whatisgolang": "@neil4dong   my fault. ",
    "kula99": "@wenshao \u6309\u8fd9\u4e48\u5199JSON.parseObject(\"...\", Feature.SortFeidFastMatch)\u6267\u884c\u7ed3\u679c\u8fd8\u662f\u4e0d\u4e00\u81f4\n\u5e76\u4e14DEFAULT_PARSER_FEATURE\u5df2\u7ecf\u5305\u542b\u4e86Feature.SortFeidFastMatch. ",
    "lihua123569": "\u6211\u540e\u7aef\u53d6\u51fa\u7684list\uff0c\u5176\u4e2did\u662fbigint\u7c7b\u578b\u7684\uff0c\u5f53\u8be5id\u957f\u5ea6\u8d85\u8fc716\u4f4d\uff0c\u6bd4\u5982\"expectedSalary\":\"2\",\"id\":911148558063767554,\nid\u957f\u5ea6\u662f18\u4f4d\uff0c\u90a3\u4e48\u524d\u7aefjs\u663e\u793a\u4f1a\u53d8\u6210911148558063767600\uff0c\u8d85\u8fc716\u4f4d\u7684\u4f1a\u56db\u820d\u4e94\u5165\uff0c\n\u5982\u679c\u5e8f\u5217\u5316\u8f93\u51fa\u53ef\u4ee5\u628along\u8f6c\u6210String\u8f93\u51fa\u5c31\u597d\u4e86\"expectedSalary\":\"2\",\"id\":\"911148558063767554\". ",
    "lmovse": "FastJsonConfig \u91cc\u9762\u7684 charset \u662f\u9488\u5bf9 json \u5e8f\u5217\u5316\u65f6\u5019\u4f7f\u7528\u7684\uff0c\u6211\u7684\u610f\u601d\u662f\u901a\u8fc7 response \u5199\u5230\u6d4f\u89c8\u5668\u65f6\u7684 headers \u4e2d\u7684 content-type \u7684\u7f16\u7801. \u770b\u4e86\u4e0b\u65b0\u7248\u7684 FastJsonHttpMessageConverter, \u53d1\u73b0\u662f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6ca1\u6709\u91cd\u5199 write \u65b9\u6cd5\uff0c\u800c\u662f\u8c03\u7528\u4e86 AbstractHttpMessageConverter \u91cc\u7684\uff0c\u8c22\u8c22\u5566. ",
    "1021683053": "@Shadowsay \u4f60\u4e2a\u5927\u50bb\u540a\uff01. ",
    "TomorJM": "\u56e0\u4e3a\u8981\u505a\u4e00\u4e2a\u7cbe\u51c6\u63a7\u5236\u6570\u636e\u7c7b\u578b\u7684\u63a5\u53e3\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u8f6c\u6362\u7684\u65f6\u5019\u5c31\u8981\u6821\u9a8c\u6570\u636e\u7c7b\u578b\u3002\u6bd4\u8bf4\u8bf4\u4e00\u4e2a\u5b57\u6bb5\u6211\u8981\u6c42\u4f20String\u8fc7\u6765\uff0c\u5bf9\u65b9\u7684JSON\u5374\u4f20\u6765\u4e00\u4e2aInt\u7684\u503c\u3002\u5f53\u7136\u4e0d\u5e0c\u671b\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f~ @wenshao . @kimmking \u6240\u4ee5\u8fd9\u4e2a\u9700\u6c42\u80fd\u505a\u5230\u4e48? \u6709\u65f6\u5019\u89e3\u6790\u505a\u7684\u592a\u667a\u80fd\u4e86\u53cd\u800c\u8ba9\u4eba\u5934\u75bc~. @passionke \u90e8\u5206\u8d5e\u540c~\n\u4f46\u662f\u4f60\u4e5f\u63d0\u5230\u4e86\uff0c\u65e2\u7136\u662f\u4e00\u4e2a\u6570\u636e\u534f\u8bae\uff0c\u4f5c\u4e3a\u63a5\u53e3\u63d0\u4f9b\u65b9\uff0c\u6211\u5f53\u7136\u8981\u8003\u8651\u5230\u5f88\u591a\u79cdcase\uff0c\u6ee1\u8db3\u534f\u8bae\u8981\u6c42\u662f\u4e00\u79cd\u5904\u7406\uff0c\u4e0d\u6ee1\u8db3\u662f\u53e6\u4e00\u79cd\u5904\u7406\u3002\n\u6211\u63d0\u7684issue\u662f\u9488\u5bf9\u8fd9\u79cd\u9700\u6c42\u60c5\u51b5\u4e0b\u6846\u67b6\u80fd\u5426\u652f\u6301\uff0c\u5176\u5b9e\u8981\u7684answer\u4e5f\u5f88\u7b80\u5355\u3002\n\u65e2\u7136fastjson\u80fd\u591f\u667a\u80fd\u5730\u5c06\u9519\u8bef\u7c7b\u578b\u7ea0\u6b63\u8fc7\u6765\uff0c\u90a3\u4e48\u4e0d\u505a\u8fd9\u79cd\u7ea0\u6b63\u5c31\u5e94\u8be5\u66f4\u7b80\u5355\u4e86...\n\u6211\u53ea\u662f\u60f3\u77e5\u9053fastjson\u6709\u6ca1\u6709\u5730\u65b9\u53ef\u4ee5\u914d\u7f6e\u8fd9\u4e2a\"\u7ea0\u6b63\"\u529f\u80fd...\u4ec5\u6b64\u800c\u5df2. ",
    "passionke": "@tomorOoO \n\u5728\u6709\u9650\u7684\u7a7a\u95f4\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u53cd\u800c\u5c06\u4e8b\u60c5\u641e\u590d\u6742\u3002 \u65e2\u7136\u662f\u6570\u636e\u534f\u8bae\u4e86\uff0c\u4e3a\u4f55\u8fd9\u8fb9\u662fstring\u63a5\u6536\uff0c\u5916\u90e8\u4f20\u5165\u8981\u7528int\u53d1\u5462\u3002 \n\u8fd9\u79cd\u95ee\u9898\u4e0d\u5355\u7eaf\u662f\u6280\u672f\u95ee\u9898\uff0c\u6240\u4ee5\u4e0d\u8981\u5728\u6280\u672f\u9886\u57df\u4e2d\u627e\u7b54\u6848\u5566. ",
    "rexydimen": "\u53ef\u662f\u4e00\u4e2afield\u7684\u89e3\u6790\u5f02\u5e38\u5bfc\u81f4\u6574\u4e2a\u89e3\u6790\u8fc7\u7a0b\u4e2d\u65ad\uff0c\u4ece\u800c\u62ff\u4e0d\u5230\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u662f\u4e0d\u662f\u4e5f\u4e0d\u5408\u7406\uff1f\u662f\u4e0d\u662f\u53ef\u4ee5\u63d0\u4f9b\u4e2a\u4f9b\u7528\u6237\u9009\u62e9\u662f\u5426\u8981\u4e2d\u65ad\u89e3\u6790\u7684\u9009\u62e9\u3002\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u80fd\u89e3\u6790\u7684\u90fd\u4f1a\u62ff\u5230\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u89e3\u6790\u4e0d\u51fa\u6765\u7684\u5c31\u90fd\u662f\u9ed8\u8ba4\u503c\u3002\u7531\u4e8e\u6211\u662f\u4e2a\u5b89\u5353\u5f00\u53d1\uff0c\u8fd9\u4e2a\u9700\u6c42\u4ea7\u751f\u4e8e\u8fd9\u6837\u7684\u573a\u666f\uff1a\u5728\u5f88\u5feb\u7684\u5f00\u53d1\u901f\u5ea6\u9a71\u52a8\u4e0b\uff0c\u5ba2\u6237\u7aef\u548cserver\u7aef\u7ea6\u5b9a\u7684\u5b57\u6bb5\u534f\u8bae\u4f1a\u5f88\u5feb\u53d8\u66f4\uff0c\u5728\u53d8\u66f4\u4e0d\u540c\u6b65\u7684\u65f6\u5019\uff0c\u5ba2\u6237\u7aef\u7ecf\u5e38\u89e3\u6790\u5230\u5df2\u7ecf\u53d8\u5316\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u4ece\u800c\u5bfc\u81f4\u89e3\u6790\u5f02\u5e38\u4e2d\u65ad\u89e3\u6790\u8fc7\u7a0b\uff0c\u6700\u540e\u4e00\u6574\u4e2a\u9875\u9762\u90fd\u662f\u767d\u9875\u3002. ",
    "rwsbillyang": "1.2.40\u7248\u672c\u4e2d\uff1a\nCaused by: com.alibaba.fastjson.JSONException: autoType is not support. cn.niukid.demo.wechat.Message\n    at com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:952) ~[fastjson-1.2.40.jar!/:na]\n. ",
    "wilddylan": "1.2.47 issue . same issue.. ",
    "x403368945": "\u4e0b\u9762\u662f\u6d4b\u8bd5\u6848\u4f8b\u4ee3\u7801\uff1a\npublic enum Code{\n    SUCCESS, FAILURE\n}\n\npublic static class Result{\n    private int id;\n    private Code code;\n    public int getId() {\n        return id;\n    }\n    public void setId(int id) {\n        this.id = id;\n    }\n    public Code getCode() {\n        return code;\n    }\n    public void setCode(Code code) {\n        this.code = code;\n    }\n    @Override\n    public String toString() {\n        return JSON.toJSONString(this);\n    }\n}\n\npublic static void main(String[] args) {\n    String jsonText = \"\";\n    jsonText = \"{\\\"code\\\":\\\"SUCCESS\\\",\\\"id\\\":1}\";\n    System.out.println(JSON.parseObject(jsonText, Result.class));\n    jsonText = \"{\\\"code\\\":\\\"FAILURE\\\",\\\"id\\\":2}\";\n    System.out.println(JSON.parseObject(jsonText, Result.class));\n    jsonText = \"{\\\"code\\\":\\\"ERROR\\\",\\\"id\\\":3}\";\n    System.out.println(JSON.parseObject(jsonText, Result.class));\n}\n\n\u6d4b\u8bd5\u7ed3\u679c\uff1a\n{\"code\":\"SUCCESS\",\"id\":1}\n{\"code\":\"FAILURE\",\"id\":2}\n{\"id\":3}. ",
    "xiaotown123": "1.2.40\u4e5f\u53d1\u73b0\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u800c\u4e14\u5f53\u7ed3\u6784\u5316Json\u540e\u5c31\u4f1a\u629bJSONException\u5f02\u5e38\uff0c\u4e0d\u7ed3\u6784\u5316\u662f\u4e0d\u629b\u5f02\u5e38\u3002. \u975e\u6cd5\u679a\u4e3e\u503c\u4e0d\u629b\u5f02\u5e38\u95ee\u9898\uff0c\u53d1\u73b0\u53ea\u6709\u5728JsonArray\u4e2d\u5bf9\u8c61\u7684key\u548cvalue\u4e4b\u95f4\u6709\u7a7a\u683c\u7684\u8bdd\u5c31\u4f1a\u629bJSONException\u5f02\u5e38\uff0c\u6ca1\u7a7a\u683c\u7684\u8bdd\u4e0d\u629b\u5f02\u5e38\uff0c\u8d4b\u4e86null\u503c\u3002@wenshao. @wenshao \u611f\u8c22\u56de\u590d\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u5bfc\u81f4\u6211\u4eec\u7a0b\u5e8f\u5728\u5904\u7406\u6709\u7a7a\u683cjson\u548c\u65e0\u7a7a\u683cjson\u7684\u884c\u4e3a\u4e0d\u4e00\u81f4\uff0c\u57281.2.40\u7248\u672c\u4e2d\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u4f7ffastJson\u5904\u7406\u975e\u6cd5\u503c\u65f6\u90fd\u629b\u5f02\u5e38\uff1f. ",
    "PieroYQ": "\u5df2\u89e3\u51b3\uff0c\u8bbe\u7f6eWriteNonStringKeyAsString. ",
    "DreamYa0": "\u7528\u4e861.2.36\u4e5f\u662f\u4f1a\u62a5\u9519\u7684\uff0c\u4f46\u662f\u62a5\u9519\u4e0d\u4e00\u6837\u4e86\ncom.alibaba.fastjson.JSONException: parseBoolean error, field : null\n    at com.alibaba.fastjson.serializer.BooleanCodec.deserialze(BooleanCodec.java:84)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:623)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:361)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:329)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:292)\n    at com.zhubajie.framework.test.util.common.StringUtils.json2Bean(StringUtils.java:110)\n    at com.zhubajie.framework.test.util.common.StringUtils.transferMap2Bean(StringUtils.java:243)\n    at com.zhubajie.framework.test.util.common.CommonInitUtils.commonInit(CommonInitUtils.java:79)\n    at com.zhubajie.framework.test.util.common.CommonInitUtils.commonInit(CommonInitUtils.java:27)\n    at com.zhubajie.framework.test.util.common.ParamUtils.generateParametersNew(ParamUtils.java:418)\n    at com.zhubajie.framework.test.util.common.ParamUtils.getParameters(ParamUtils.java:235)\n    at com.zhubajie.framework.test.BaseDubbo.prepareExecMethod(BaseDubbo.java:214)\n    at com.zhubajie.framework.test.BaseDubbo.lambda$baseDubbo$3(BaseDubbo.java:204)\n    at com.zhubajie.framework.test.BaseDubbo.execMethodMulitTimes(BaseDubbo.java:299)\n    at com.zhubajie.framework.test.BaseDubbo.baseDubbo(BaseDubbo.java:204)\n    at com.zhubajie.framework.test.BaseDubbo.startRunTest(BaseDubbo.java:192)\n    at com.zhubajie.framework.test.BaseDubbo.run(BaseDubbo.java:120)\n    at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:209)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\n    at org.testng.TestRunner.privateRun(TestRunner.java:782)\n    at org.testng.TestRunner.run(TestRunner.java:632)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:268)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\n    at org.testng.TestNG.run(TestNG.java:1064)\n    at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)\nCaused by: com.alibaba.fastjson.JSONException: syntax error, pos 1, json : FALSE\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1381)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1284)\n    at com.alibaba.fastjson.serializer.BooleanCodec.deserialze(BooleanCodec.java:75)\n    ... 35 more. 1.2.28\u662f\u62a5\u5982\u4e0b\u9519\u8bef\ncom.alibaba.fastjson.JSONException: syntax error, pos 1, json : FALSE\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1394)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.serializer.BooleanCodec.deserialze(BooleanCodec.java:72)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:350)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:318)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:281)\n    at com.zhubajie.framework.test.util.common.StringUtils.json2Bean(StringUtils.java:110)\n    at com.zhubajie.framework.test.util.common.StringUtils.transferMap2Bean(StringUtils.java:243)\n    at com.zhubajie.framework.test.util.common.CommonInitUtils.commonInit(CommonInitUtils.java:79)\n    at com.zhubajie.framework.test.util.common.CommonInitUtils.commonInit(CommonInitUtils.java:27)\n    at com.zhubajie.framework.test.util.common.ParamUtils.generateParametersNew(ParamUtils.java:418)\n    at com.zhubajie.framework.test.util.common.ParamUtils.getParameters(ParamUtils.java:235)\n    at com.zhubajie.framework.test.BaseDubbo.prepareExecMethod(BaseDubbo.java:214)\n    at com.zhubajie.framework.test.BaseDubbo.lambda$baseDubbo$3(BaseDubbo.java:204)\n    at com.zhubajie.framework.test.BaseDubbo.execMethodMulitTimes(BaseDubbo.java:299)\n    at com.zhubajie.framework.test.BaseDubbo.baseDubbo(BaseDubbo.java:204)\n    at com.zhubajie.framework.test.BaseDubbo.startRunTest(BaseDubbo.java:192)\n    at com.zhubajie.framework.test.BaseDubbo.run(BaseDubbo.java:120)\n    at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:209)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\n    at org.testng.TestRunner.privateRun(TestRunner.java:782)\n    at org.testng.TestRunner.run(TestRunner.java:632)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:268)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\n    at org.testng.TestNG.run(TestNG.java:1064)\n    at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123). \u4f46\u662f\u9047\u5230\u5927\u4e9bTRUE\u5c31\u4e0d\u4f1a\u62a5\u9519. ",
    "aiwenjiang1990": "\u4f60\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898?. ",
    "aqqwiyth": "\u6211\u4eec\u4e00\u822c\u662f\u5728setXXX\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u662f\u5bc6\u6587,\u5982\u679c\u662f\u5219\u89e3\u5bc6.        \u4e0d\u8fc7\u52a0\u89e3\u5bc6\u7684\u670d\u52a1\u4e00\u822c\u4e0d\u662f\u5728\u672c\u5730. \u8fd8\u8981\u5168\u5c40\u6301\u6709\u52a0\u89e3\u5bc6\u7684\u5bf9\u8c61. . JSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss\"   \u6ca1\u6709\u547d\u4e2dformat,\u4ee3\u7801\u8fdb\u4e00\u6b65\u8fdb\u884c\u4e86long\u8f6c\u6362. getter\u7684\u65f6\u5019\u505a\u5c31\u884c\u4e86. \u8fd9\u79cd\u9700\u6c42\u5982\u679c\u5f00\u53d1\u4e0d\u6309\u987a\u5e8fsetter \u4e5f\u5bb9\u6613\u51faBUG. \u4e4b\u524d\u9047\u5230\u8fc7\u4e00\u4e2a\u95ee\u9898.   fastjson\u7248\u672c\u4e0d\u540c \u5bf9\u4e00\u4e2aJSONObject.toJSONString(hashmap)\u7684\u987a\u5e8f\u4e5f\u4e0d\u4e00\u6837. ",
    "yangliweng": "@neil4dong @kimmking @VictorZeng @wenshao \u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u3002\n\u6b63\u786e\u4ee3\u7801\uff1a\nnew String(request.getRealName().getBytes(),\"utf-8\")\n\u9519\u8bef\u4ee3\u7801\uff1a\nnew String(request.getRealName().getBytes(\"utf-8\"),\"utf-8\")\n\u56e0\u4e3a\u662f\u7f16\u7801\u95ee\u9898\uff0c\u6211\u7684\u7cfb\u7edf\u9ed8\u8ba4getbytes()\u8bfb\u5230\u7684\u662fgbk\u7684\u7f16\u7801\uff0c\u800c\u975eUTF-8\u7f16\u7801\u3002\n\u95ee\u9898Close\u4e86\u5427\uff0c\u8c22\u8c22\u5404\u4f4d\u3002. ",
    "univerz1977": "\u6539\u6210\u8fd9\u6837String kk = (key + ran.nextInt(2)).intern(); \u51fa\u9519\u7684\u6982\u7387\u4f1a\u964d\u4f4e\uff1b\u4e0d\u7ba1\u600e\u6837\u6211\u521aput\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u53bb\uff0c\u5c31\u7acb\u523b\u53d6\u51fa\u6765\uff0ckk\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd4\u56denull\u662f\u6709\u95ee\u9898\u7684\u3002. ",
    "samuelway": "\u4f7f\u7528jsonobject parseArray\u8f6c\u6362\u6811\u5f62\u7ed3\u6784list \u65f6 \u7b2c\u4e00\u5c42\u7684boolean\u7c7b\u578b\uff08\u5c5e\u6027\u662f checked=true \u8fd9\u79cd\u7c7b\u578b\uff09  \u6709\u503c  \u7b2c\u4e8c\u5c42  boolean \u6ca1\u4e86. \u4e5f\u5c31\u662f  boolean \u5c5e\u6027\u4e22\u5931\u4e86. \u5177\u4f53\u793a\u4f8b\u5df2\u7ecf\u4e0a\u4f20\u4e86[JsonParseDemo.zip\n. @wenshao  \u6709\u89e3\u51b3\u65b9\u6cd5\u4e48\uff1f. ",
    "GodzillaHua": "@samuelway SysResources\u4f60\u9019\u500b\u5c11\u4e86checked\u5c5e\u6027\u548cget set\u65b9\u6cd5\u5440. ",
    "oawang": "JSON.DEFAULT_PARSER_FEATURE |= Feature.DisableCircularReferenceDetect.getMask();. https://github.com/alibaba/fastjson/issues/1410. \u914d\u7f6e\u4e86. \u6e29\u5c11\uff0c\u672c\u6765\u6253\u7b97\u7528\u8fd9\u4e2a\u7248\u672c\u5230\u751f\u4ea7\u4e0a\uff0c\u6d4b\u8bd5\u53c8\u53d1\u73b0\u53d1\u73b0\u95ee\u9898\u3002\u3002\u771f\u5fc3\u4e0d\u6562\u4e0a. \u751f\u4ea7\u5efa\u8bae\u628a\u8fd9\u4e2a\u914d\u7f6e\u4e0a\u5417. ",
    "smallsun848": "@lihengming  FastJsonHttpMessageConverter\u914d\u7f6e\u5982\u4e0b\uff0cFastJsonViewResponseBodyAdvice \u9700\u8981\u600e\u4e48\u914d\u7f6e\uff1f\n@SpringBootApplication\n@MapperScan(\"com.example.test1.dao\")\npublic class Test1Application {\npublic static void main(String[] args) {\n    SpringApplication.run(Test1Application.class, args);\n}\n\n@Bean\npublic HttpMessageConverters fastJsonHttpMessageConverters() {\n    FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter();\n    FastJsonConfig fastJsonConfig = new FastJsonConfig();\n    fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat,SerializerFeature.WriteMapNullValue);\n    fastConverter.setFastJsonConfig(fastJsonConfig);\n    HttpMessageConverter<?> converter = fastConverter;\n    return new HttpMessageConverters(converter);\n}\n\n}. \u95ee\u9898\u89e3\u51b3\u4e86\u3002\u56e0\u4e3aFastJsonViewResponseBodyAdvice \u914d\u7f6e\u4e86component\uff0c\u800cspringboot\u9ed8\u8ba4\u4e0d\u4f1a\u53bb\u626b\u63cf\uff0c\u6307\u5b9a\u4e86\u626b\u63cf\u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u4e86\u3002\n@SpringBootApplication\n@MapperScan(\"com.example.test1.dao\")\n@ComponentScan({\"com.alibaba.fastjson.support.spring\",\"com.example.test1.controller\"})\npublic class Test1Application {. ",
    "JohnNiang": "I think so\uff1a\n@ControllerAdvice\nMyFastJsonViewResponseBodyAdvice extends FastJsonViewResponseBodyAdvice{\n}. \u53ef\u4ee5\u8003\u8651\u624b\u52a8\u751f\u6210token\u6d41\u7a0b\uff0c\u5e76\u5728\u6700\u540e\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f7f\u7528Jackson\u7684ObjectMapper\u8fdb\u884c\u5e8f\u5217\u5316\u5e76\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\uff08\u4e4b\u524d\u6211\u7684\u56de\u590d\u8fc7\u4e8e\u6a21\u7cca\uff0c\u5b9e\u5728\u62b1\u6b49\uff09\n```\nimport java.io.IOException;\nimport java.util.Base64;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport org.apache.commons.collections4.MapUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.security.authentication.BadCredentialsException;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.oauth2.common.OAuth2AccessToken;\nimport org.springframework.security.oauth2.common.exceptions.UnapprovedClientAuthenticationException;\nimport org.springframework.security.oauth2.provider.ClientDetails;\nimport org.springframework.security.oauth2.provider.ClientDetailsService;\nimport org.springframework.security.oauth2.provider.OAuth2Authentication;\nimport org.springframework.security.oauth2.provider.OAuth2Request;\nimport org.springframework.security.oauth2.provider.TokenRequest;\nimport org.springframework.security.oauth2.provider.token.AuthorizationServerTokenServices;\nimport org.springframework.security.web.authentication.AuthenticationSuccessHandler;\nimport org.springframework.stereotype.Component;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\n/\n * authentication success handler.\n * \n * @author johnniang\n \n/\n@Component\npublic class *AuthenticationSuccessHandler implements AuthenticationSuccessHandler {\nprivate Logger logger = LoggerFactory.getLogger(getClass());\n\nprivate String credentialsCharset = \"UTF-8\";\n\nprivate final ClientDetailsService clientDetailsService;\n\nprivate final AuthorizationServerTokenServices authorizationServerTokenServices;\n\nprivate final PasswordEncoder passwordEncode;\n\nprivate final ObjectMapper objectMapper;\n\n@Autowired\npublic ***AuthenticationSuccessHandler(ClientDetailsService clientDetailsService,\n        AuthorizationServerTokenServices authorizationServerTokenServices, PasswordEncoder passwordEncode,\n        ObjectMapper objectMapper) {\n    this.clientDetailsService = clientDetailsService;\n    this.authorizationServerTokenServices = authorizationServerTokenServices;\n    this.passwordEncode = passwordEncode;\n    this.objectMapper = objectMapper;\n}\n\n@Override\npublic void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,\n        Authentication authentication) throws IOException, ServletException {\n    logger.info(\"login successfully.\");\n    String header = request.getHeader(\"Authorization\");\n\n    if (header == null || !header.startsWith(\"Basic \")) {\n        throw new UnapprovedClientAuthenticationException(\"There is not client information.\");\n    }\n\n    String[] tokens = extractAndDecodeHeader(header, request);\n    assert tokens.length == 2;\n\n    String clientId = tokens[0];\n    String clientSecret = tokens[1];\n\n    if (logger.isDebugEnabled()) {\n        logger.debug(\"Client Id     : {}\", clientId);\n        logger.debug(\"Client Secret : {}\", clientSecret);\n    }\n\n    ClientDetails clientDetails = clientDetailsService.loadClientByClientId(clientId);\n\n    if (clientDetails == null) {\n        throw new UnapprovedClientAuthenticationException(\"Client information was not found: \" + clientId);\n    }\n    if (!passwordEncode.matches(clientSecret, clientDetails.getClientSecret())) {\n        throw new UnapprovedClientAuthenticationException(\"Client secret was not matched: \" + clientId);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    TokenRequest tokenRequest = new TokenRequest(MapUtils.EMPTY_SORTED_MAP, clientId, clientDetails.getScope(),\n            \"custom\");\n\n    // create a OAuth2Request\n    OAuth2Request oAuth2Request = tokenRequest.createOAuth2Request(clientDetails);\n\n    // create a OAuth2Authentication\n    OAuth2Authentication oAuth2Authorization = new OAuth2Authentication(oAuth2Request, authentication);\n\n    // produce a token\n    OAuth2AccessToken oAuth2AccessToken = authorizationServerTokenServices.createAccessToken(oAuth2Authorization);\n\n    response.setStatus(HttpStatus.OK.value());\n    response.setContentType(\"application/json;charset=UTF-8\");\n\n    // write date as timestamp\n    objectMapper.enable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n    response.getWriter().write(objectMapper.writeValueAsString(oAuth2AccessToken));\n}\n\n/**\n * Decodes the header into a username and password.\n *\n * @throws BadCredentialsException\n *             if the Basic header is not present or is not valid Base64\n */\nprivate String[] extractAndDecodeHeader(String header, HttpServletRequest request) throws IOException {\n\n    byte[] base64Token = header.substring(6).getBytes(\"UTF-8\");\n    byte[] decoded;\n    try {\n        decoded = Base64.getDecoder().decode(base64Token);\n    } catch (IllegalArgumentException e) {\n        throw new BadCredentialsException(\"Failed to decode basic authentication token\");\n    }\n\n    String token = new String(decoded, credentialsCharset);\n\n    int delim = token.indexOf(\":\");\n\n    if (delim == -1) {\n        throw new BadCredentialsException(\"Invalid basic authentication token\");\n    }\n    return new String[] { token.substring(0, delim), token.substring(delim + 1) };\n}\n\n}\n```\n```\n/\n * OAuth2 resource server config\n * \n * @author johnniang\n \n/\n@Component\n@EnableResourceServer\npublic class OAuth2ResourceServerConfig extends ResourceServerConfigurerAdapter {\n    private final AuthenticationSuccessHandler authenticationSuccessHandler;\n    public OAuth2ResourceServerConfig(\n        AuthenticationSuccessHandler authenticationSuccessHandler)\n    this.authenticationSuccessHandler = authenticationSuccessHandler;\n}\n\n@Override\npublic void configure(HttpSecurity http) throws Exception {\n    http //\n            .formLogin() //\n            .loginProcessingUrl(\"/login\") //\n            .successHandler(authenticationSuccessHandler) //\n            .permitAll() //\n            .and() //\n            .logout() //\n                            ***\n    }\n\n}\n```\n\u5e0c\u671b\u80fd\u591f\u89e3\u51b3\u4f60\u4eec\u7684\u95ee\u9898. ",
    "Shenmiu": "springboot\u7248\u672c: 2.0.1.RELEASE\nfastjson\u7248\u672c: 1.2.46\nFastJsonViewResponseBodyAdvice\njava\n@RestControllerAdvice\npublic class MyFastJsonViewResponseBodyAdvice extends FastJsonViewResponseBodyAdvice {\n}\nTsetController\n```java\n@RestController\n@RequestMapping(\"/test\")\npublic class TestController {\nprivate static final Logger logger = Logger.getLogger(TestController.class);\n\n@GetMapping(path = \"address\")\n@FastJsonView(include = @FastJsonFilter(clazz = Address.class, props = {\"city\"}))\npublic Address testFastJsonView() {\n\n    Address address = new Address();\n    address.setCity(\"city\");\n    address.setStreet(\"street\");\n    address.setDistrict(\"district\");\n    address.setNumber(\"number\");\n    address.setComment(\"comment\");\n\n    return address;\n\n}\n\n}\n```\nTest\n```java\n@RunWith(SpringRunner.class)\n@WebMvcTest(TestController.class)\npublic class AddressTest {\n@Autowired\nprivate MockMvc mvc;\n\n@Test\npublic void testExample() throws Exception {\n    MvcResult result = mvc.perform(MockMvcRequestBuilders.get(\"/test/address\")\n            .accept(MediaType.APPLICATION_JSON)).andReturn();\n\n    System.out.println(result.getResponse().getContentAsString());\n}\n\n}\n```\nAddress\u7684\u5b57\u6bb5\u90fd\u8f93\u51fa\u4e86\njson\n{\"city\":\"city\",\"district\":\"district\",\"street\":\"street\",\"number\":\"number\",\"comment\":\"comment\"}\n\u63a7\u5236\u53f0\u4e2d\u8f93\u51fa\u4e86\nDetected ResponseBodyAdvice implementation in myFastJsonViewResponseBodyAdvice\n\u4f46\u662f\u6211\u5728FastJsonViewResponseBodyAdvice\u4e2d\u7684\u65b9\u6cd5\u6253\u65ad\u70b9\uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\u6267\u884c\u5230\u65ad\u70b9\u5904\u3002\n\u8bf7\u95ee\u8fd9\u662f\u4ec0\u4e48\u95ee\u9898\uff1f\u662f\u56e0\u4e3a\u6211\u914d\u7f6e\u6709\u95ee\u9898\u8fd8\u662f\u7a0b\u5e8f\u7684\u95ee\u9898\uff1f\u6709\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u5417\uff1f. \u9700\u8981\u914d\u7f6eFastJsonViewResponseBodyAdvice\uff0c\u4f46\u662f\u6211\u6ca1\u770b\u5230\u5177\u4f53\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u914d\u7f6e\uff0c\u8bf7\u95ee\u627e\u5230\u914d\u7f6e\u7684\u65b9\u6cd5\u4e86\u5417\uff1f. ",
    "binarywang": "\u597d\uff0c\u8fd9\u4e2a\u5bf9\u82f1\u6587\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\u4e9b. \u5443\uff0c\u597d\u5427\uff0c\u603b\u611f\u89c9\u5f88\u522b\u626d. \u597d\u7684\uff0c\u6ca1\u95ee\u9898\uff0c\u6211\u518d\u627e\u627e. ",
    "zhuyiren": "\u7528\u4e861.2.37,\u8fd8\u662f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002. TypeReference\u5728\u6211\u8fd9\u91cc\u4e0d\u9002\u7528\uff0c\u56e0\u4e3a\u4e0d\u786e\u5b9a\u6cdb\u578b\u7684\u5177\u4f53\u53c2\u6570\u3002\u6240\u4ee5\u8fd9\u91cc\u7528\u4e86ParameterizedTypeImpl \uff0c\u6211\u6682\u65f6\u662f\u81ea\u5df1\u505a\u4e86\u7f13\u5b58ParameterizedTypeImpl\u5904\u7406\u3002\u6211\u60f3\u77e5\u9053\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u91c7\u7528IdentityHashMap\u6765\u7f13\u5b58\u7c7b\u578b\uff0c\u800c\u4e0d\u91c7\u7528\u5176\u4ed6\u7684Map\u3002. ",
    "www1350": "static ConcurrentMap<Type, Type> classTypeCache\n            = new ConcurrentHashMap<Type, Type>(16, 0.75f, 1);\n@Test\npublic void fixLeak(){\n    Student student=new Student();\n    student.setName(\"1\");\n    CacheWrapper cacheWrapper = new CacheWrapper();\n    cacheWrapper.setCacheObject(student);\n    byte[] bytes = JSON.toJSONBytes(cacheWrapper);\n    while (true){\n        Type argkey = new ParameterizedTypeImpl(new Type[]{Student.class}, CacheWrapper.class.getDeclaringClass(), CacheWrapper.class);\n        Type cachedType = classTypeCache.get(argkey);\n        if (cachedType == null) {\n            classTypeCache.putIfAbsent(argkey, argkey);\n            cachedType = classTypeCache.get(argkey);\n        }\n        Object o = JSON.parseObject(bytes, cachedType);\n    }\n}. ",
    "notsyncing": "\u597d\u7684\uff0c\u975e\u5e38\u611f\u8c22. \u7528\u6700\u65b0\u7684git\u7248\u672c\u6d4b\u8bd5\u540e\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u518d\u6b21\u611f\u8c22\uff01. \u4f7f\u7528\u573a\u666f\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u7684\u9879\u76ee\u91cc\u6709\u4e00\u4e2a\u63d2\u4ef6\u673a\u5236\uff0c\u4e3a\u4e86\u652f\u6301\u52a8\u6001\u52a0\u8f7d\u548c\u5378\u8f7d\u63d2\u4ef6\uff0c\u4f7f\u7528\u4e86\u6bcf\u4e2a\u63d2\u4ef6jar\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u7684\u673a\u5236\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u4e3b\u6a21\u5757\u4f7f\u7528fastjson\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u5316\u4e86\u63d2\u4ef6\u5185\u7684\u7c7b\u4e4b\u540e\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u88abfastjson\u5185\u90e8\u7684\u7f13\u5b58\u673a\u5236\u5f15\u7528\uff0c\u5bfc\u81f4\u6267\u884c\u5378\u8f7d\u63d2\u4ef6\u64cd\u4f5c\u540e\uff0cgc\u65e0\u6cd5\u56de\u6536\u8fd9\u4e9b\u7c7b. \u5728\u6211\u4eec\u9879\u76ee\u91cc\uff0c\u5e8f\u5217\u5316\u903b\u8f91\u5206\u5e03\u5728\u6846\u67b6\u4e2d\uff0c\u7528\u4e8e\u89e3\u6790\u8bf7\u6c42\u53c2\u6570\u548c\u54cd\u5e94\u6570\u636e\uff0c\u5e76\u4e0d\u5728\u63d2\u4ef6\u91cc\uff1b\u5982\u679c\u9488\u5bf9\u63d2\u4ef6\u5185\u7684\u7c7b\u8fdb\u884c\u5355\u72ec\u5904\u7406\uff0c\u5c31\u9700\u8981\u4fee\u6539\u8fd9\u4e9b\u903b\u8f91\u5e76\u4e14\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u68c0\u67e5\u5176\u7c7b\u52a0\u8f7d\u5668\uff0c\u518d\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u7ef4\u62a4\u5355\u72ec\u7684ParserConfig\u548cSerializeConfig\uff0c\u5c31\u6211\u4e2a\u4eba\u770b\u6cd5\u800c\u8a00\uff0c\u4f3c\u4e4e\u4e0d\u5982\u76f4\u63a5\u6539fastjson\u6765\u5f97\u65b9\u4fbf\u3002\u4e5f\u8bb8\u662f\u6211\u4eec\u67b6\u6784\u8bbe\u8ba1\u4e0a\u5b58\u5728\u95ee\u9898\uff0c\u6211\u518d\u601d\u8003\u4e0b\u6709\u6ca1\u6709\u5176\u4ed6\u7684\u529e\u6cd5\u3002. \u53ef\u80fd\u6211\u6ca1\u6709\u63cf\u8ff0\u6e05\u695a\uff0c\u4f7f\u7528\u573a\u666f\u662f\u8fd9\u6837\u7684\uff1a\u6846\u67b6framework.jar\u4f7f\u7528parentClassLoader\u52a0\u8f7d\uff0c\u5176\u4e2d\u5305\u542b\u4e86fastjson\uff0c\u7136\u540e\u63d2\u4ef6plugin.jar\uff08\u4e0d\u5305\u542bfastjson\uff09\u7531childClassLoader\u52a0\u8f7d\uff0c\u52a0\u8f7d\u540e\uff0cframework.jar\u91cc\u7684\u4ee3\u7801\u4f1a\u626b\u63cfclasspath\uff0c\u5e76\u4f7f\u7528childClassLoader\u52a0\u8f7dplugin.jar\u4e2d\u7684\u7c7bA\uff0c\u540e\u7eed\u4ee3\u7801\u4f1a\u4f7f\u7528fastjson\u5c06A\u5e8f\u5217\u5316\u3002\u73b0\u5728\u7684\u95ee\u9898\u5728\u4e8e\uff0cframework.jar\u4e2d\u7684\u5e8f\u5217\u5316\u76f8\u5173\u7684\u4ee3\u7801\u5e76\u4e0d\u77e5\u9053A\u662f\u4ece\u54ea\u91cc\u52a0\u8f7d\u7684\uff0c\u5c5e\u4e8e\u54ea\u4e2a\u63d2\u4ef6\u3002\u800c\u4e14\uff0c\u82e5plugin.jar\u4e2d\u7684\u4ee3\u7801\u4f7f\u7528\u4e86fastjson\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u56de\u6536\u3002\n\u540e\u7eed\u6211\u4eec\u5c06\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u89e3\u51b3\uff1a\n1. \u4fee\u6539\u6846\u67b6\u4e2d\u7684\u5e8f\u5217\u5316\u903b\u8f91\uff0c\u5e76\u9488\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7c7b\u52a0\u8f7d\u5668\uff08\u4e0d\u662f\u6bcf\u4e00\u4e2a\u7c7b\uff09\u7ef4\u62a4\u5355\u72ec\u7684ParserConfig\u548cSerializeConfig\n2. \u5bf9\u4e8e\u63d2\u4ef6\uff0c\u521d\u59cb\u5316\u65f6\u5373\u4f20\u5165ParserConfig\u548cSerializeConfig\uff0c\u63d2\u4ef6\u4e2d\u7684\u5e8f\u5217\u5316\u903b\u8f91\u5f3a\u5236\u8981\u6c42\u4f7f\u7528\u5b83\u4eec\n\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5bf9fastjson\u7684\u4fee\u6539\u3002\n\u4e0d\u8fc7\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u80fd\u5426\u5f00\u653e\u5bf9IdentityHashMap\u7684\u8bbf\u95ee\uff0c\u8ba9\u4f7f\u7528\u8005\u80fd\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u5220\u9664\u67d0\u4e00\u6761\u76ee\uff1f. ",
    "ARabbitCoder": "\u662f\u7248\u672c\u7684\u95ee\u9898. ",
    "jeck218": "\u6211\u6d4b\u8bd5\u53d1\u73b0\u5df2\u7ecf\u652f\u6301\u4e86\n\\r\\n\u8fd9\u4e9b\u90fd\u53ef\u4ee5. ",
    "NameSpace5": "\u6211\u6d4b\u8bd5\u7684\u662f\u65b0\u7248\u672c\u76841.2.37. ",
    "Nextyo": "\u539f\u672c\u4ee5\u4e3a\u662fandroid\u5e73\u53f0\u4e0a\u7684\u5b58\u5728\u7684\u95ee\u9898\uff0c\u540e\u6765\u987a\u624b\u5728openjdk\u4e0b\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u53d1\u73b0\u548candroid\u4e00\u6837\u7684\u95ee\u9898\uff1a\nnext@next-Lenovo:~/IdeaProjects/fastjson/target/test-classes$ /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java -ea -classpath /home/next/IdeaProjects/fastjson/target/test-classes:/home/next/IdeaProjects/fastjson/target/classes:/home/next/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/next/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar com.alibaba.json.bvt.bug.Bug_for_Next\ntest 1=====================================\n  text : \"dGVzdGJ5dGVhcnJheQ==\"\n  byteArray : 74 65 73 74 62 79 74 65 61 72 72 61 79 \n  text : [[1,2,3],[2,3,4,5]]\n  pii : [[I@2829306c, [I@282a170d]\n  pii0 : [1, 2, 3]\n  pii1 : [2, 3, 4, 5]\ntest 2=====================================\n  text : [\"Ynl0ZVtd\",\"Ymxpc3Q=\"]\ntestPrimitiveArray(com.alibaba.json.bvt.bug.Bug_for_Next): exepct '[', but string, pos 11, json : [\"Ynl0ZVtd\",\"Ymxpc3Q=\"]\n. @neil4dong \u611f\u8c22\u63d0\u9192\uff0c\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u5728jdk 1.6\u4ee5\u4e0b\u5b58\u5728\u95ee\u9898\uff0c\u6d4b\u8bd5\u5230android6.0\u4e5f\u5b58\u5728\u95ee\u9898. ",
    "xiangyubo": "\u6211\u53bb\uff0c\u5144\u53f0\u6b63\u89e3\u554a\uff01\u52a0\u4e86\u9a6c\u4e0a\u5c31\u597d\u4e86\u3002. ",
    "xuguobiao": "\u9047\u5230\u7c7b\u4f3c\u540c\u6837\u7684\u95ee\u9898\u3002\n```java\npublic abstract class VfNetCallback extends AbsCallback> {\n@Override\npublic VfNetResponse<T> parseNetworkResponse(Response response, int id) throws Exception {\n    VfNetResponse<T> netResponse = JSON.parseObject(response.body().toString(), VfNetResponse<T>.class);\n    return netResponse;\n}\n\n}\n```\n\u5982\u4e0a\uff0c\u60f3\u5728parseNetworkResponse\u4e2d\u9488\u5bf9VfNetResponse < T >.class\u8fdb\u884c\u89e3\u6790\uff0c\u6c42\u95ee\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1f\n\u5df2\u77e5\u901a\u8fc7  Class< T > dataClass = (Class < T >) ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0]; \u53ef\u4ee5\u83b7\u53d6T\u5bf9\u5e94\u7684class\u3002\u4f46\u73b0\u5728\u60f3\u83b7\u53d6VfNetResponse< T >.class\u4f20\u5165fastjson\u8fdb\u884c\u76f4\u63a5\u89e3\u6790\u3002. \u627e\u5230\u529e\u6cd5\u4e86\u3002\njava\n    @Override\n    public VfNetResponse<T> parseNetworkResponse(Response response, int id) throws Exception {\n        Type dataType =  ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];\n        Type type = new ParameterizedTypeImpl(new Type[]{dataType}, null, VfNetResponse.class);\n        VfNetResponse<T> netResponse = JSON.parseObject(response.body().string(), type);\n        return netResponse;\n    }. \u627e\u5230\u529e\u6cd5\u4e86\u3002\njava       \n    @Override\n    public VfNetResponse<T> parseNetworkResponse(Response response, int id) throws Exception {\n        Type dataType =  ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];\n        Type type = new ParameterizedTypeImpl(new Type[]{dataType}, null, VfNetResponse.class);\n        VfNetResponse<T> netResponse = JSON.parseObject(response.body().string(), type);\n        return netResponse;\n    }. @wenshao wen \u5355\u53c2\u6570 \u53cc\u53c2\u6570\u9700\u8981\u4f20\u9012Class\uff0c\u4e0d\u662f\u5f88\u65b9\u4fbf\u3002\u73b0\u5728\u6211\u662f\u4f7f\u7528\u53cd\u5c04\u83b7\u53d6\u3002\u5982\u4e0b\uff1a\njava     \n@Override\n    public VfNetResponse<T> parseNetworkResponse(Response response, int id) throws Exception {\n        Type dataType =  ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];\n        Type type = new ParameterizedTypeImpl(new Type[]{dataType}, null, VfNetResponse.class);\n        VfNetResponse<T> netResponse = JSON.parseObject(response.body().string(), type);\n        return netResponse;\n    } . ",
    "gyqGitHub": "[Message over limit size:1000, has been cutted!]\nCaused by:\n6\u00a0com.alibaba.fastjson.JSONException:unclosed str, pos 11820, json : {\"Rows\":[{\"content\":\"\",\"createTimeStr\":\"2017-05-09 17:32:47\"\n7\u00a0[Message over limit size:1000, has been cutted!]\n8\u00a0com.alibaba.fastjson.parser.JSONLexer.scanStringValue(JSONLexer.java:1064)\n9\u00a0com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:432)\n10\u00a0com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:1235)\n11\u00a0com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:467)\n12\u00a0com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1378)\n13\u00a0com.alibaba.fastjson.JSON.parse(JSON.java:103)\n14\u00a0com.alibaba.fastjson.JSON.parse(JSON.java:94)\n15\u00a0com.alibaba.fastjson.JSON.parseObject(JSON.java:134)\n\u8fd9\u4e9b\u662fbugly\u4e0a\u9762\u7684\u4fe1\u606f\uff0c\u4e0d\u77e5\u600e\u4e48\u91cd\u73b0\u8fd9\u4e2abug\uff0c\u4e4b\u524d\u4ee5\u4e3a\u662fjson\u6570\u636e\u8fc7\u957f\uff0c\u4f46\u901a\u8fc7\u4fee\u6539\u5206\u9875\u5927\u5c0f\u8fd4\u56de\u8d85\u957f\u6570\u636e\u540e\u4e5f\u6ca1\u51fa\u73b0\u8fd9\u4e2a\u5f02\u5e38\u3002 @wenshao . com.alibaba.fastjson.JSONException\nsyntax error, expect {, actual pos 4, json : \n<!DOCTYPE html>       \u4e0a\u8ff03\u4e2ameta\u6807\u7b7e*\u5fc5\u987b*\u653e\u5728\u6700\u524d\u9762\uff0c\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u90fd*\u5fc5\u987b*\u8ddf\u968f\u5176\u540e\uff01    \u76ee\u524d\u4ec5\u9650360\u6025\u901f\u6d4f\u89c8 webkit:\u6025\u901f ie-comp:ie\u517c\u5bb9\u6a21\u5f0f ie-stand: ie\u6807\u51c6\u6a21\u5f0f   \u516d\u4f18\u5148- Free NAT64/DNS64 Serivce     Bootstrap\u4e2d\u6587\u5b57\u4f53\u7248    \u81ea\u5b9a\u4e49\u6837\u5f0f   <!-- HTML5 shim and Respond.js for IE8 support [Message over limit siz...too long be cutted!. ",
    "linjh": "\u4e3a\u4ec0\u4e48\u52a0\u4e2aSerializerFeature.WriteClassName\u5c31\u4f1a\u5f71\u54cd\u6d6e\u70b9\u6570\u636e\uff1f\u80fd\u4e0d\u80fd\u4e24\u8005\u5171\u5b58\uff1f. ",
    "qiushui95": "1.2.37. \u90fd\u662f1.2.37   \u4e0d\u662fAndroid\u7248\u7684. \u60a8\u8fd9\u662f\u7528IntelliJ IDEA\u8fd0\u884c\u7684\uff1f\u6211\u7528IntelliJ IDEA\u6d4b\u8bd5\u4e5f\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u662fAndroid Studio\u6d4b\u8bd5\u5c31\u4e0d\u884c. \u5df2\u6d4b\u8bd5\uff0c1.1.63.android\u4e5f\u5b58\u5728\u540c\u6837\u7684\u95ee\u9898. Android  kotlin data class. ",
    "liusilong": "\u6211\u7528Kotlin data class \u5728 AS3.0 \u548c IntelliJ IDEA \u4e2d\u89e3\u6790Json\u7684\u65f6\u5019\u90fd\u62a5\u9519\uff08fastJson\u7248\u672c\u662f1.2.37\uff09\uff1a\ndata class Person(var name: String, var age: Int)\nfun main(args: Array) {\n    val person = Person(\"jack\", 10)\n    val fastStr = JSON.toJSONString(person)\n    println(fastStr)\n    val fastPerson = JSON.parseObject(fastStr, Person::class.javaObjectType)\n    println(fastPerson)\n}\n\u8f93\u51fa\n{\"age\":10,\"name\":\"jack\"}\nException in thread \"main\" com.alibaba.fastjson.JSONException: default constructor not found.class net.println.kotlin.Chapter4.Person\n.... ",
    "VictorChow": "fastjson:1.1.62.android \u4e5f\u662fdefault constructor not found.  \u8bd5\u4e86\u8bd5Gson\u662f\u53ef\u4ee5\u89e3\u6790\u7684. @wenshao @ZYRzyr \n\u6211\u8fd9\u91cc\u4e5f\u662f\u8fd8\u62a5\u9519 default constructor not found.\n\u793a\u4f8b\u4ee3\u7801\ndata class Bean(var name: String, var age: Int)\nval json = \"{\\\"name\\\":\\\"victor\\\",\\\"age\\\":12}\"\nval bean = JSON.parseObject(json, Bean::class.java)\nAndroid Studio Canary 3.0 Beta4\nkotlin version 1.1.4-3\nimplementation 'com.alibaba:fastjson:1.1.63.android'. ",
    "ZYRzyr": "@wenshao \nsorry\uff0c\u53ef\u80fd\u662f\u6211\u4f7f\u7528\u7684\u59ff\u52bf\u4e0d\u5bf9\uff1f\n\u6211\u4f7f\u7528\u4fee\u590d\u540e\u7684\u7248\u672c\u8fd8\u662f\u62a5\u8fd9\u4e2a\u9519\u3002\nAndroid Studio Canary 3.0 Beta4\nkotlin version 1.1.4-3\ncom.alibaba:fastjson:1.2.38\u4e0ecom.alibaba:fastjson:1.1.63.android\u90fd\u662f\u62a5\u8fd9\u4e2a\u9519\u3002. \u540c\u95ee\nAndroid Studio Canary 3.0 Beta4\nkotlin version 1.1.4-3\ncom.alibaba:fastjson:1.2.38\u4e0ecom.alibaba:fastjson:1.1.63.android\u90fd\u662f\u62a5\u8fd9\u4e2a\u9519\u3002. \u90a3\u5c31\u5f88\u5c34\u5c2c\u4e86. @neil4dong \n\u6211\u8fd9\u513f\u4e0d\u884c\u3002\n. \u8c22\u8c22\u63d0\u9192\n\u4f46\u6211\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u5b9e\u4f53\u7c7b\u662fJava\u5199\u7684\uff0c\u5c31\u7b97\u6ca1\u6709desc\uff0c\u4e5f\u4f1a\u9ed8\u8ba4desc\u662fnull\u4e14\u4e0d\u4f1a\u62a5\u9519\uff0c\u90a3\u4e48Kotlin\u5199\u7684\u6570\u636e\u7c7b\u4e5f\u5e94\u8be5\u662f\u8fd9\u6837\uff0c\u4f46\u4e8b\u5b9e\u662f\u4f1a\u62a5\u5f02\u5e38\u3002\n\u5982\u679c\u8fd9\u4e0d\u662fBUG\uff0c\u6211\u5c06\u5173\u95ed\u6b64issuse. ",
    "sstong123": "\u8865\u5145\uff1a\u4f7f\u7528\u7684fastjson\u7248\u672c\u53f7\u4e3a\uff1a1.2.24. \u5df2\u89e3\u51b3\uff0c\u5347\u7ea7fastjson\u7248\u672c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef\uff1a\nPerson person=JSON.parseObject(jsonstr , Person.class, Feature.DisableFieldSmartMatch);. ",
    "merciqiao": "\u6211\u4e4b\u524d\u7528\u76841.2.22,1.2.37\u6ca1\u95ee\u9898,\u8c22\u8c22\u4e86. ",
    "rickenwang": "\u521a\u6d4b\u8bd5\u6700\u8fd1\u7684\u4e24\u4e2a\u7248\u672c compile 'com.alibaba:fastjson:1.2.36'\u548ccompile 'com.alibaba:fastjson:1.2.37'\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u4e4b\u524d\u7684\u7248\u672c\u5c31\u6ca1\u6709\uff0c\u9ebb\u70e6\u770b\u4e0b\u3002. Android Studio\u9ed8\u8ba4\u4f1a\u5728defaultConfig\u4e2d\u6dfb\u52a0AndroidJUnitRunner\u6765\u652f\u6301\u5355\u5143\u6d4b\u8bd5\ntestInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n\u4f46\u662f\u5982\u679c\u5728dependencies\u4e2d\u6dfb\u52a0\u4f9d\u8d56\ncompile 'com.alibaba:fastjson:latest.release'\uff0c\n\u7136\u540e\u8fd0\u884cgradlew createDebugCoverageReport\u65f6\uff0c\u4f1a\u62a5\nNo tests found.[EVA-AL00 - 6.0] FAILED\nNo tests found. This usually means that your test classes are not in the form that your test runner expects (e.g. don't inherit from TestCase or lack @test annotations).\n\u7b80\u5355\u70b9\u8bf4\u5c31\u662f fastjson 1.2.36~37\u548cAndroidJUnitRunner\u4e0d\u517c\u5bb9\uff0c\u4f4635\u4ee5\u53ca\u4e4b\u524d\u7684\u7248\u672c\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002. ",
    "tomsue": "\u95ee\u98981\uff1a\u662f\u5426\u9488\u5bf9JSONArray\u7684parseArray\u52a0\u4e00\u4e2a\u65b9\u6cd5\uff1a\u91cc\u9762\u7684\u5bf9\u8c61data2,data1,data\u7684key\u9ed8\u8ba4\u6709\u5e8f\uff08\u6309\u5148\u540e\u987a\u5e8f\u7ec4\u88c5\u5bf9\u8c61\uff09\u3002\n[\n { \"data2\": {\n    \"data8\": \"206751.82\",\n    \"data7\": \"0\",\n    \"data6\": \"775.32\",\n    \"data5\": \"367.71\",\n    \"data4\": \"201411\",\n    \"data3\": \"6217004260004601308\",\n    \"data2\": \"null\",\n    \"data1\": \"20141121\"\n  }\n},\n { \"data1\": {\n    \"data8\": \"206384.11\",\n    \"data7\": \"0\",\n    \"data6\": \"0\",\n    \"data5\": \"0.54\",\n    \"data4\": \"201412\",\n    \"data3\": \"6217004260004601308\",\n    \"data2\": \"null\",\n    \"data1\": \"20141226\"\n  }\n},\n{\"data9\": {\n    \"data8\": \"206384.11\",\n    \"data7\": \"0\",\n    \"data6\": \"0\",\n    \"data5\": \"0.54\",\n    \"data4\": \"201412\",\n    \"data3\": \"6217004260004601308\",\n    \"data2\": \"null\",\n    \"data1\": \"20141226\"\n  }\n}]\nnote\uff1afastjson v1.2.31\n. ",
    "firingsloth": "@VictorZeng \u975e\u5e38\u611f\u8c22\u60a8\u7684\u56de\u590d\uff0c\u4f46\u662f\u6211\u662f\u7528\u7684\u662fRestEasy\uff0c\u662f\u5426\u6709\u7c7b\u4f3c\u7684\u89e3\u51b3\u65b9\u6848\uff1f\u6216\u8005\u6709\u4ec0\u4e48\u5efa\u8bae\uff1f. @VictorZeng \u62b1\u6b49\u56de\u590d\u7684\u6709\u4e9b\u665a\uff0c\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\n\u8d77\u56e0\u662f\u6211\u5728pom\u4e2d\u5f15\u5165\u4e86\n\norg.jboss.resteasy\nresteasy-servlet-initializer\n\n\u610f\u5473\u7740\u5f00\u542f\u81ea\u52a8\u626b\u63cf\uff0c\u6240\u4ee5FastJsonProvider\u5fc5\u7136\u4f1a\u88ab\u626b\u63cf\u5230\uff08\u8fd9\u4e2a\u6ca1\u6709\u627e\u5230\u89e3\u51b3\u529e\u6cd5\u53bb\u907f\u514d\uff0c\u4f60\u4e0a\u9762\u53d1\u7684\u914d\u7f6e\u65b9\u5f0f\u5728\u81ea\u52a8\u626b\u63cf\u6a21\u5f0f\u4e0b\u4e0d\u751f\u6548\uff09\n\u4f46\u662f\u5982\u679c\u5f15\u5165\n\norg.jboss.resteasy\nresteasy-jackson2-provider\n\nRestEasy\u53ef\u4ee5\u4fdd\u8bc1\u4f18\u5148\u4f7f\u7528\u8fd9\u4e2aProvider\u53bb\u5904\u7406\uff0c\u6211\u7f3a\u5c11\u4e86\u8fd9\u4e2aMaven\u914d\u7f6e\u6240\u4ee5\u4e00\u76f4\u5728\u4f7f\u7528FastJsonProvier\uff1b\nRestEasy\u5b98\u65b9\u6587\u6863\u7ed9\u7684\u7c7b\u4f3c\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u4e5f\u4e0d\u592a\u7406\u60f3\n\n. ",
    "jzoe": "\u5728 1.2.39 \u7248\u672c\u4e2d\u5982\u679c\u4e0d\u5b9e\u73b0JSONSerializable\uff0c\u800c\u662f\u4f7f\u7528 @JSONType(serializeEnumAsJavaBean = true) \u6ce8\u89e3\u7684\u8bdd\uff0c\u4ecd\u7136\u6709\u8be5\u95ee\u9898\u3002\u53ea\u6709toJSONString\u65b9\u6cd5\u6709\u6548\uff0ctoJSON\u65e0\u6548\u3002. ",
    "jarhf": "\u6709\u95ee\u9898\uff0cJdk8DateCodec\u7c7b\u4e2d\u5224\u65ad\u4e86\uff0c\u5982\u679cLocalDateTime\u7c7b\u578b\uff0cgetNano() == 0\u7684\u8bdd\u662f\u4f7f\u7528\u7684 DEFFAULT_DATE_FORMAT \u6216\u8005\u914d\u7f6e\u7684format\uff0c \u5426\u5219\u4f7f\u7528\u7684\u662fLocalDateTime\u81ea\u5df1\u7684toString()\u65b9\u6cd5\u3002 \n\u4f46\u662fDEFFAULT_DATE_FORMAT \u5e8f\u5217\u5316\u51fa\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e2d\u95f4\u4e0d\u5e26\u201cT\u201d\u3002 \n\u8fd9\u5e26\u6765\u7684\u540e\u679c\u662f\uff0cmysql\u6570\u636e\u5e93\uff0cdatetime, datetime(3)\u7c7b\u578b\u7684\u5b57\u6bb5\u5e8f\u5217\u5316\u51fa\u7684\u683c\u5f0f\u4e0d\u4e00\u81f4\uff0c \u800cIE\u6d4f\u89c8\u5668\u7684\u4e0d\u652f\u6301new Date(\"2017-10-01 12:12:12\") \u8fd9\u79cd\u683c\u5f0f\uff0cIE\u8981\u6c42\u65f6\u95f4\u5b57\u7b26\u4e32\u4e2d\u95f4\u5fc5\u987b\u5e26T\n@kimmking  @wenshao . \u8fd8\u6709\u8fd9\u4e2a\u95ee\u9898\u5728 1.2.11\u7248\u4e2d\u662f\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3aJdk8DateCodec.write \u65b9\u6cd5\u5bf9\u6240\u6709\u7c7b\u578b\u90fd\u662f\u8c03\u7528 toString() \u65b9\u6cd5\u6765\u5e8f\u5217\u5316\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u540e\u7eed\u7248\u672c\u5bf9LocalDateTime \u7c7b\u578b\u8fdb\u884c\u4e86\u7279\u6b8a\u5224\u65ad\uff0c\u7ed3\u679c\u5c31\u9020\u6210\u4e86\u683c\u5f0f\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u6c42\u89e3\uff1f. ",
    "lilikk2004": "\u53ef\u4e0d\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u8fd0\u884c\u7684demo\u770b\u770b\u600e\u4e48\u80fd\u7a33\u5b9a\u5728kotlin\u89e3\u6790\uff0c\u73b0\u5728\u6211\u5404\u79cd\u5c1d\u8bd5\u90fd\u6ca1\u6cd5\u8fd0\u884c. ",
    "barryhippo": "\u6211\u7684AS\u91cc\u9762\u4e5f\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u540e\u6765\u53d1\u73b0\u662fClass.forName(\"kotlin.reflect.jvm.internal.KClassImpl\") \u8fd9\u91cc\u51fa\u9519\u4e86\u3002\n\u7136\u540e\u52a0\u4e0acompile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\" \u5c31\u53ef\u4ee5\u4e86. ",
    "shiyan3": "\u660e\u767d\u4e86\uff0c\u8c22\u8c22\u56de\u590d\u3002. ",
    "huanghengmin": "\u8fd4\u56de\u6570\u636e\u5206\u9875\u4e86...... ",
    "cc4dogman": "\u4f7f\u7528JSONField\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u89e3\u51b3\u4e86\uff0c\u4e3b\u8981\u662f\u4e2d\u95f4\u4ef6\u8fd9\u5757\u5bf9\u63a5\u51e0\u4e2a\u7cfb\u7edf\uff0chttp\u5ba2\u6237\u7aef\u4e94\u82b1\u516b\u95e8\u7684\u60f3\u517c\u5bb9\u8fd9\u4e9b\u4e0d\u901a\u7684cookie\uff0cjson\u5316\u540e\u53ef\u4ee5\u76f4\u63a5\u7edf\u4e00\u7528httpclient\u53cd\u5e8f\u5217\u5316\u51fa\u6765. ",
    "i-show": "@kimmking  \u4f46\u662f\u6709\u65f6\u5019\u5c01\u88c5\u5de5\u5177\u7c7b\u7684\u65f6\u5019 \u8c01\u77e5\u9053\u522b\u4eba\u4f1a\u4e0d\u4f1a\u4f20\u5165String.class , \u6211\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u573a\u666f\u8bf4\u660e\u4e00\u4e0b\u5f53\u524d\u7684\u95ee\u9898. Sorry \uff0c\u6211\u5728Demo\u4e2d\u641e\u9519\u4e86 @wenshao . ",
    "deathknight0718": "```java\npublic class Fingerprint implements Serializable {\n// ------------------------------------------------------------------------\n\nprivate final static long serialVersionUID = 1L;\n\nprivate final static Logger logger = LoggerFactory.getLogger(Fingerprint.class);\n\nprivate static FingerprintEngine engine;\n\nprivate final String source;\n\nprivate ImmutableMap<String, String> probes;\n\n// ------------------------------------------------------------------------\n\n@JSONCreator\npublic Fingerprint(@JSONField(name = \"source\") String fingerprint) {\n    this.source = fingerprint;\n\n//        this.probes = getEngine().map(fingerprint);\n    }\n// ------------------------------------------------------------------------\n\npublic static FingerprintEngine getEngine() {\n    if (engine == null) {\n        engine = InstanceFactory.getInstance(FingerprintEngine.class);\n    }\n    return engine;\n}\n\n// ------------------------------------------------------------------------\n\n@Override\npublic String toString() {\n    return MoreObjects.toStringHelper(getClass()) //\n        .addValue(source)                    //\n        .toString();\n}\n\npublic boolean sameTo(Fingerprint obj) {\n    for (String key : probes.keySet()) {\n        System.out.println(key);\n    }\n    return false;\n}\n\n// ------------------------------------------------------------------------\n\npublic String getSource() {\n    return source;\n}\n\n}\n``.\ngroupId:com.alibaba\nartifactId:fastjson\nversion:1.2.24-1.2.38\n`. @wenshao \u8fd9\u6837\u8bbe\u8ba1\u7684\u521d\u8877\u662f\uff1f\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u662f\u5426\u4f1a\u6539\u53d8\uff1f. ",
    "jerrypanda": "\u975e\u5e38\u611f\u8c22 @wenshao \u53ca\u65f6\u7684\u56de\u7b54\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\u3002\n\u5728xml\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff0c\u8bbe\u7f6eDisableFieldSmartMatch\nxml\n<bean id=\"fastJsonHttpMessageConverter\" class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\">\n    <property name=\"supportedMediaTypes\">\n        <list>\n            <value>text/html;charset=UTF-8</value>\n            <value>text/plain;charset=UTF-8</value>\n            <value>application/json;charset=UTF-8</value>\n        </list>\n    </property>\n    <property name=\"fastJsonConfig\" ref=\"fastJsonConfig\"/>\n</bean>\n<bean id=\"fastJsonConfig\" class=\"com.alibaba.fastjson.support.config.FastJsonConfig\">\n    <property name=\"features\">\n        <list>\n            <value>DisableCircularReferenceDetect</value>\n            <value>DisableFieldSmartMatch</value>\n        </list>\n    </property>\n    <property name=\"serializerFeatures\">\n        <list>\n            <!-- Date\u7684\u65e5\u671f\u8f6c\u6362\u5668 \u9ed8\u8ba4\u662f\ufeffyyyy-MM-dd HH:mm:ss \u683c\u5f0f-->\n            <value>WriteDateUseDateFormat</value>\n        </list>\n    </property>\n</bean>\n. ",
    "HackenHYJ": "As a technician, we should always be modest !\nSo I agree with you !. ",
    "jiangyuanyuan": "As a technician, we should always be modest !\nSo I agree with you !. ",
    "daquexian": "It is annoying. And I think many programmers(e.g myself) will think badly of both fastjson and alibaba because of this.. ",
    "Richard-Cao": "@kimmking \ud83d\udc4d. ",
    "sw4655315": "\u5728 setB() \u65b9\u6cd5\u4e0a\uff0c\u52a0\u4e0a@JSONField \u6ce8\u89e3\u4e5f\u4e0d\u884c\u3002. ",
    "Ycocol": "oh yeah!it is I need \u3002. ",
    "LNAmp": "fixed. \u7b7e\u7f72\u4e86CLA\u4e86\uff0c\u589e\u52a0\u4e86testcase\uff0c\u6e29\u5c11\u5927\u5927\u770b\u770b\u884c\u4e0d\u884c. ",
    "androiddk1": "@wenshao \u55ef\uff0c\u8c22\u8c22\u60a8\u7684\u5efa\u8bae\u3002\u76ee\u524d\u8fd9\u4e2acrash\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u800c\u89e3\u51b3\u529e\u6cd5\u662f\u4e07\u4e07\u6ca1\u60f3\u5230\u7684\u3002\u6211\u4eec\u5c1d\u8bd5\u66f4\u6362\u4e86json\u6570\u636e\u7684\u89e3\u6790\u65b9\u5f0f\uff0c\u6539\u7528\u4e86Android\u7cfb\u7edf\u81ea\u5e26\u7684JsonObject\u5bf9\u8c61\u6765\u89e3\u6790\uff0c\u540e\u6765\u5c31\u4e0dcrash\u4e86\u3002\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u8be1\u5f02\uff0c\u4e5f\u4e00\u76f4\u6392\u67e5\u4e86\u5f88\u4e45\uff0c\u4e0d\u77e5\u9053\u662f\u56e0\u4e3a\u7ebf\u7a0b\u5904\u7406\u95ee\u9898\u6ca1\u5904\u7406\u597d\uff0c\u8fd8\u662ffastjson\u89e3\u6790\u5e93\u672c\u8eab\u5bfc\u81f4\u7684\u3002\u56e0\u4e3a\u4ece\u65e5\u5fd7\u4fe1\u606f\u91cc\u9762\u4e5f\u6293\u53d6\u4e0d\u5230Exception\u7b49\u9519\u8bef\u4fe1\u606f\u3002\u5176\u6b21\u7684\u8bdd\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u4eec\u7248\u672c\u6ca1\u7528\u5bf9\u3002\u6839\u636e\u60a8\u6240\u8bf4\uff0c\u5e94\u8be5\u4f7f\u7528Android\u4e13\u7248\u53ef\u80fd\u4f1a\u597d\u70b9\u3002\u8fd9\u662f\u6211\u8fd9\u4e2a\u95ee\u9898\u7684\u5927\u6982\u60c5\u51b5\u3002\u518d\u6b21\u8c22\u8c22\u6e29\u5c11\u5927\u795e\uff01. ",
    "zenochan": "\u60f3\u641c\u7d22\u7684\u624b\u592a\u5feb\uff0c1.1.63.android kotlin \u6709noArgs \u6784\u9020\u65b9\u6cd5\u8fd8\u662f\u8dd1\u4e86 default constructor not found \u5f02\u5e38\uff0c 1.1.61.android \u80fd\u6b63\u5e38\u89e3\u6790\uff0c\u4e0d\u77e5\u9053\u662f\u5565\u53d8\u5316\u4e86\ndefault constructor not found. class com.churgo.market.data.models.Res\nat com.alibaba.fastjson.parser.JavaBeanInfo.build(JavaBeanInfo.java:475)\nat com.alibaba.fastjson.parser.JavaBeanDeserializer.<init>(JavaBeanDeserializer.java:35)\nat com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:216)\nat com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:150)\nat com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:683)\nat com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:659)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:212)\nat com.alibaba.fastjson.JSON.parseObject(JSON.java:184)\n. #1451 \u5e94\u8be5\u4e0e\u8fd9\u4e2a\u662f\u76f8\u540c\u7684\u95ee\u9898. ",
    "ltigers": "\u597d\u5efa\u8bae. \u6211\u66f4\u65b0\u4e86\u540efastjson\u540e\u6211\u7684bean\u90fd\u4e0d\u8d77\u4f5c\u7528\u4e86. \u7b2c\u4e09\u65b9leancloud\u7684SDK\u4f7f\u7528\u7684\uff0c\u6211\u6ca1\u529e\u6cd5\u554a. ",
    "liupengpop": "\u53ef\u4ee5\u8bd5\u4e0b\nInjectedBean parseObject = JSON.parseObject(json,InjectedBean.class,Feature.OrderedField);. \u770b\u4e86\u4e0bAndroid\u7248\u672c\u7684\u6e90\u7801\uff0c\u95ee\u9898\u51fa\u5728\ncom.alibaba.fastjson.serializer.MapSerializer\n```\nMap<?, ?> map = (Map<?, ?>) object;\n        Class<?> mapClass = map.getClass();\n        boolean containsKey = (mapClass == JSONObject.class || mapClass == HashMap.class || mapClass == LinkedHashMap.class) \n                && map.containsKey(JSON.DEFAULT_TYPE_KEY);\n    if ((out.features & SerializerFeature.SortField.mask) != 0) {\n        if ((!(map instanceof SortedMap)) && !(map instanceof LinkedHashMap)) {\n            try {\n                map = new TreeMap(map);\n            } catch (Exception ex) {\n                // skip\n            }\n        }\n    }\n\n```\n\u4f20\u5165\u7684object\u4e3aJSONObject\u5bf9\u8c61\u91cc\u8fb9\u867d\u7136\u5b58\u7684linkedHashMap\u4f46\u662f\u5bf9\u8c61\u672c\u8eab\nif ((!(map instanceof SortedMap)) && !(map instanceof LinkedHashMap)) {\n\u5224\u65ad\u4e3atrue\uff0c\u6240\u4ee5\u5c31\u628amap\u7684\u987a\u5e8f\u641e\u4e71\u4e86\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662fbug\uff0c\u5728\u666e\u901a\u7248\u672c\u4e2d\u8fd9\u5757\u88ab\u6ce8\u91ca\u6389\u4e86\u3002. ",
    "zhouclcode": "\u4f9d\u7136\u88ab\u4ea4\u6362\u4e86 , \u4f7f\u7528\u975eAndroid\u7248\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898. \u77e5\u9053\u95ee\u9898\u6e90\u4e86 , \u671f\u671b\u786e\u5b9a\u4e00\u4e0b\u662f\u4e0d\u662fBUG. \u6709\u53ef\u80fd\u63d0\u4f9b\u4e00\u79cd\u914d\u7f6e\u8ba9\u4f4d\u7f6e\u4e0d\u8981\u4ea4\u6362\u5462. ",
    "dawangzai": "@wenshao \n\u4ee5\u524d\u662f\u8fd9\u4e48\u5199\u7684\npublic String getMD5() {\n    return md5;\n}\n\npublic void setMD5(String md5) {\n    this.md5 = md5;\n}\n\n\u521a\u624d\u6539\u6210\u4e0b\u9762\u8fd9\u6837\u7684 getter \u548c setter\uff0c\u8bd5\u4e86\u4e00\u4e0b\u5c31\u6210\u529f\u4e86\u8f6c\u5316\u6210\u4e86 \u201cMD5\u201d\npublic String getMd5() {\n    return md5;\n}\n\npublic void setMd5(String md5) {\n    this.md5 = md5;\n}. @kimmking \u5b83\u628a\u5c0f\u6570\u70b9\u540e\u9762\u7684 \u201c0\u201d \u7ed9\u62b9\u6389\u4e86 \uff0c\u6211\u8fd9\u8fb9\u8c03\u63a5\u53e3\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u9519\u4e86.\n",
    "plaxj": "Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"2017-06-27T07:12:41.000+05:30\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Long.parseLong(Long.java:589)\n    at java.lang.Long.parseLong(Long.java:631)\n    at com.alibaba.fastjson.serializer.DateCodec.cast(DateCodec.java:202)\n    at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:142)\n    at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:19)\n    at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:71)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:888)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:633)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1070). ",
    "iykzhang": "data class Person(var name: String?, var age: Int?, var desc: String?)\n\u52a0\u4e0a\u95ee\u53f7\u5c31\u53ef\u4ee5\u4e86. ",
    "fnwib": "1.2.32 \nException in thread \"main\" com.alibaba.fastjson.JSONException: syntax error, expect {, actual string, pos 917\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:370)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1070)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_2_DigitalSongPlatform.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:211)\n    at com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer.parseArray(ArrayListTypeFieldDeserializer.java:178)\n    at com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer.parseField(ArrayListTypeFieldDeserializer.java:65)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:888)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:633)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1070)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_DigitalAlbumPlatform.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:211)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:726)\n    at com.alibaba.fastjson.serializer.CollectionCodec.deserialze(CollectionCodec.java:120)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:642)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:354)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:322)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:236)\n        at com.XXX.service.XXX.XXX(XXX.java:97)\n1.2.36\nException in thread \"main\" com.alibaba.fastjson.JSONException\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:627)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:361)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:329)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:243)\n    at com.XXX.service.XXX.XXX(XXX.java:97)\nCaused by: java.lang.NullPointerException\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:413)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1146)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_2_DigitalSongPlatform.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:268)\n    at com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer.parseArray(ArrayListTypeFieldDeserializer.java:178)\n    at com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer.parseField(ArrayListTypeFieldDeserializer.java:65)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:973)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:718)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseRest(JavaBeanDeserializer.java:1146)\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_DigitalAlbumPlatform.deserialze(Unknown Source)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:268)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:709)\n    at com.alibaba.fastjson.serializer.CollectionCodec.deserialze(CollectionCodec.java:120)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:623)\n    ... 5 more. 1.2.32\n\u4ee3\u7801\u662f\u8fd9\u4e2a\u6837\u5b50\u7684  \u5982\u679c\u6ce8\u91ca\u6389songlist\u5c5e\u6027,\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4e0d\u6ce8\u91ca songList\u5c5e\u6027\u4e3anull\n```java\npublic static void main(String[] args) {\n    String json = \"[{\\\"song_list\\\":[{\\\"val\\\":1,\\\"v_al\\\":2},{\\\"val\\\":2,\\\"v_al\\\":2},{\\\"val\\\":3,\\\"v_al\\\":2}],\\\"songlist\\\":\\\"v_al\\\"}]\";\n    List<Value> parseObject = JSON.parseObject(json, new TypeReference<List<Value>>() {\n    });\n    for (Value value : parseObject) {\n        System.out.println(value.songList + \"  \" );\n    }\n\n}\n\npublic static class Value {\n    @JSONField(alternateNames = {\"song_list\", \"songList\"})\n    List<Value2> songList;\n\n    @JSONField(alternateNames = {\"songlist\"})\n    String songlist;\n\n    public List<Value2> getSongList() {\n        return songList;\n    }\n\n    public void setSongList(List<Value2> songList) {\n        this.songList = songList;\n    }\n\n        public String getSonglist() {\n            return songlist;\n        }\n\n        public void setSonglist(String songlist) {\n            this.songlist = songlist;\n        }\n}\n\npublic static class Value2 {\n    int val;\n\n    int v_al;\n\n    public int getVal() {\n        return val;\n    }\n\n    public void setVal(int val) {\n        this.val = val;\n    }\n\n    public int getV_al() {\n        return v_al;\n    }\n\n    public void setV_al(int v_al) {\n        this.v_al = v_al;\n    }\n\n    @Override\n    public String toString() {\n        return \"Value2{\" +\n                \"val=\" + val +\n                \", v_al=\" + v_al +\n                '}';\n    }\n}\n\n```. ",
    "yangbo637829": "\u597d\u7684\uff0c\u8c22\u8c22\uff01. ",
    "chen623": "\u52a0\u4e86testcase\n\u53ef\u80fd\u8fd9\u4e2a\u4e0d\u662f\u5f88\u5fc5\u8981  \u56e0\u4e3ajsonp\u51fd\u6570\u540d\u79f0\u5b8c\u5168\u53ef\u4ee5\u4eba\u4e3a\u53bb\u63a7\u5236\n\u4e4b\u6240\u4ee5\u6539\u4e86\u5b83  \u662f\u56e0\u4e3a\u6211\u5728\u7528JSONPResponseBodyAdvice  \u6765\u914d\u7f6ejsonp\u65f6   \u5982\u679c\u4e0d\u63d0\u4f9bcallback  \u4f1a\u8fd4\u56denull(..). /**/null({})        \u5c31\u662f\u5728\u89e3\u51b3\u8fd9\u4e2a\u51fa\u73b0\u7684\u554a   \u5f53\u7136\u4e0d\u80fd\u8fc7. \u597d\u4e86. ",
    "ma349432587": "\u8001\u5927\u770b\u770b\u6709\u4ec0\u4e48\u95ee\u9898\u4e48\uff1f. \u597d\u7684\u597d\u7684\uff0c\u521a\u624d\u4e00\u770b\u771f\u662f\u7834\u574f\u4e86\u4ee3\u7801\u539f\u6765\u7684\u98ce\u683c\u3002. \u54e5\uff0c\u6211\u53c8\u91cd\u5199\u4e86\u4e2atest case\u3002. \u80fd\u80fd\u80fd \uff0c\u6211\u662f\u4f60\u7684\u7c89\u4e1d. \u4e2a\u4eba\u89c9\u5f97\u5bf9\u9519\u8befJSON\u7684\u517c\u5bb9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7279\u6027\u3002\nhttps://github.com/alibaba/fastjson/issues/825 \u8fd9\u4e2aissue\u7684\u63d0\u51fa\u662f\u7f3a\u4e4f\u601d\u8003\u7684\uff0c\u4e0d\u505a\u8bc4\u4ef7\u3002\nhttps://github.com/alibaba/fastjson/issues/1853 \u7684\u63d0\u51fa\u4e0e\u6211\u9047\u5230\u95ee\u9898\u7c7b\u4f3c\uff0c\u90fd\u662f\u5bf9\u4e0d\u89c4\u8303JSON\u8bed\u6cd5\u505a\u4e86\u517c\u5bb9\u800c\u5f15\u53d1\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u9047\u5230\u7684\u8fd9\u4e2aissue\u5728\u67d0\u79cd\u5c42\u9762\u4e0a\u770b\u6765\u5c31\u662f\u4e00\u4e2a\u53ef\u653b\u51fb\u7684\u6f0f\u6d1e\u3002\n. \u8fd9\u4e71\u7801\u5e94\u8be5\u4e0d\u662f\u6846\u67b6\u4ea7\u751f\u7684 \u662f\u63d0\u4ea4\u7ed9\u6846\u67b6\u5904\u7406\u7684\u6570\u636e\uff0c\u52a0\u65e5\u5fd7\u770b\u770b\u5427\uff0c\u518d\u770b\u770b\u63a5\u53c2\u6570\u7684\u5bf9\u8c61\u662fNumber\u7c7b\u578b\u8fd8\u662fString\u7c7b\u578b\u3002. \u6253\u65ad\u70b9\u770b\u770b\u4f20\u7a7a\u5b57\u7b26\u4e32\u7684\u65f6\u5019 val\u7684\u65f6\u5019\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u6216\u8005\u53ef\u80fd\u6839\u672c\u6ca1\u8d70\u4f60\u8fd9\u4e2a\u89e3\u6790\u5668. \u53d7\u6559\u4e86\uff0c\u8c22\u8c22\u6307\u70b9\u3002. ",
    "cnkker": "\u6211\u641e\u9519\u4e86\uff01\u4e0d\u597d\u610f\u601d. \u5173\u95ed. ",
    "Dracula1984": "1.2.38 \u7248\u672c. ",
    "liqinwyyx": "@zxk175 \u600e\u4e48\u89e3\u51b3\u7684. ",
    "dongzhanwen": "\u6211\u627e\u5230\u539f\u56e0\u4e86\uff0c \u628a\u90a3\u4e2a\u5b57\u6bb5\u8bbe\u7f6e\u6210PUBLIC \u5c31\u53ef\u4ee5\u5e8f\u5217\u5316\u4e86\uff0c\uff0c \u4e3a\u5565\u79c1\u6709\u7684\u4e0d\u884c\uff0c \u96be\u9053\u6709setter\uff0c getter\u4e5f\u4e0d\u884c\u5417\uff1f\uff1f\uff1f \u6ca1\u7406\u89e3\u3002. \u8fd8\u6709\u5c31\u662f\u5176\u4ed6\u7684\u4e3a\u5565\u53ef\u4ee5\u5e8f\u5217\u5316\uff1f. \u540c\u6837\u662f\u79c1\u6709 \u5c5e\u6027\uff0c \u4e3a\u4ec0\u4e48nodeId \u5c31\u53ef\u4ee5\u5e8f\u5217\u5316\u6210\u529f\uff0c\u800clist \u5c31\u4e0d\u884c\u3002. \u83ab\u540d\u5176\u5999\u7684\u95ee\u9898\u592a\u591a\u4e86\u3002\u3002. ",
    "youbeiwuhuan": "\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u4fee\u6539\u6216\u8986\u76d6FastJsonHttpMessageConverter\u7684writeInternal\u65b9\u6cd5\u89e3\u51b3\uff0c\u53e6\u5916JSONField\u6ce8\u89e3\u5e94\u8be5\u653e\u5728getter\u6216setter\u4e0a\u5206\u522b\u8868\u793a\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65f6\u5019\u7684\u683c\u5f0f\uff0c\u653e\u5728\u5c5e\u6027\u4e0afastjson\u73b0\u5728\u7248\u672c\u5df2\u7ecf\u4e0d\u518d\u652f\u6301\u3002\u4fee\u6539writeInternal\u4ee3\u7801\u5982\u4e0b\uff08\u5206\u652fmaster\uff0c\u65e0\u6cd5\u63d0\u4ea4\uff0c\u5e0c\u671b\u6709\u8001\u94c1\u80fd\u8054\u7cfb\u963f\u91cc\u5df4\u5df4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff09\uff1a\n@Override\nprotected void writeInternal(Object object, HttpOutputMessage outputMessage) throws IOException, HttpMessageNotWritableException {\n\n    ByteArrayOutputStream outnew = new ByteArrayOutputStream();\n    try {\n        HttpHeaders headers = outputMessage.getHeaders();\n\n        //\u83b7\u53d6\u5168\u5c40\u914d\u7f6e\u7684filter\n        SerializeFilter[] globalFilters = fastJsonConfig.getSerializeFilters();\n        List<SerializeFilter> allFilters = new ArrayList<SerializeFilter>(Arrays.asList(globalFilters));\n\n        boolean isJsonp = false;\n\n        //\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u884c\u4ee3\u7801\uff0c \u4f46\u662f\u4e3a\u4e86\u4fdd\u6301\u548c\u539f\u6765\u7684\u884c\u4e3a\u4e00\u81f4\uff0c\u8fd8\u662f\u4fdd\u7559\u4e0b\u6765\n        Object value = strangeCodeForJackson(object);\n\n        if (value instanceof FastJsonContainer) {\n            FastJsonContainer fastJsonContainer = (FastJsonContainer) value;\n            PropertyPreFilters filters = fastJsonContainer.getFilters();\n            allFilters.addAll(filters.getFilters());\n            value = fastJsonContainer.getValue();\n        }\n\n        //jsonp\uff0c\u4fdd\u7559\u5bf9\u539f\u672c\u76f4\u63a5\u8fd4\u56deMappingFastJsonValue\u65b9\u6cd5\u7684\u652f\u6301\n        //\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u8fd4\u56decom.alibaba.fastjson.JSONPObject\n        if (value instanceof MappingFastJsonValue) {\n            isJsonp = true;\n            value = ((MappingFastJsonValue) value).getValue();\n        } else if (value instanceof JSONPObject) {\n            if(!(((JSONPObject) value).getFunction() == null) && !(\"\".equals(((JSONPObject) value).getFunction()))){\n                isJsonp = true;\n            }\n\n        }\n\n\n        int len = writePrefix(outnew, object);\n\n\n        /* these codes are  repair by Frank Fan\n\n         len += JSON.writeJSONString(outnew, //\n                fastJsonConfig.getCharset(), //\n                value, //\n                fastJsonConfig.getSerializeConfig(), //\n                //fastJsonConfig.getSerializeFilters(), //\n                allFilters.toArray(new SerializeFilter[allFilters.size()]),\n                fastJsonConfig.getDateFormat(), //\n                JSON.DEFAULT_GENERATE_FEATURE, //\n                fastJsonConfig.getSerializerFeatures());\n\n         */\n\n\n\n        /**\n         * solve the problem that @JSONField(format = \"yyyy-MM-dd\") doesn't take effect \n         * after set global date format by the code \" fastJsonConfig.setDateFormat(\"yyyy-MM-dd HH:mm:ss\");\"\n         * \n         */\n        //Frank Fan code start \n        if(JSON.DEFFAULT_DATE_FORMAT != fastJsonConfig.getDateFormat()){\n            JSON.DEFFAULT_DATE_FORMAT = fastJsonConfig.getDateFormat();\n        }\n\n        String json = JSON.toJSONString(object, //\n                fastJsonConfig.getSerializeConfig(), /*\u82e5\u662f\u7ee7\u627f\u8986\u76d6\u628a\u8fd9\u91cc\u7684fastJsonConfig\u6362\u6210getFastJsonConfig()\u5373\u53ef*/\n                fastJsonConfig.getSerializeFilters(), //\n                null, //\n                JSON.DEFAULT_GENERATE_FEATURE, //\n                fastJsonConfig.getSerializerFeatures());\n        byte[] bytes = json.getBytes(getFastJsonConfig().getCharset());\n        outnew.write(bytes);\n        len += bytes.length;\n        headers.setContentLength(len);\n        OutputStream out = outputMessage.getBody();\n        outnew.writeTo(out);\n        outnew.close();\n        //Frank Fan code start\n\n\n        len += writeSuffix(outnew, object);\n\n        if (isJsonp) {\n            headers.setContentType(APPLICATION_JAVASCRIPT);\n        }\n        if (fastJsonConfig.isWriteContentLength()) {\n            headers.setContentLength(len);\n        }\n\n        outnew.writeTo(outputMessage.getBody());\n\n    } catch (JSONException ex) {\n        throw new HttpMessageNotWritableException(\"Could not write JSON: \" + ex.getMessage(), ex);\n    } finally {\n        outnew.close();\n    }\n}.\n",
    "FrankBian": "\u4ece1.1.X \u5347\u52301.2.38 \u4e4b\u540e\uff0c\u4e4b\u524d\u7684\u6ce8\u89e3\u5728Date\u7c7b\u578bField\u4e0a\u7684JSONField\uff08format\uff09\u90fd\u5931\u6548\u4e86\uff0cDate\u5410\u51fa\u53bb\u7684\u53d8\u6210 long\u4e86. ",
    "WindStill": "\u8868\u793a\u6700\u65b0\u7248\u672c\uff081.2.44\uff09\u4ecd\u7136\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898. ",
    "youngking28": "@wenshao \n\u539f\u697c\u4e3b\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u5728#1511\u4e2d\u3002\n\n. ",
    "ErCargo": "\u6211\u76841.2.45\u7248\u672c\u4e5f\u662f\u65e0\u6548\u7684\uff1a\n\n@Bean\n    public HttpMessageConverters fastJsonHttpMessageConverters(){\n        FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter();\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);\n        fastConverter.setFastJsonConfig(fastJsonConfig);\n        HttpMessageConverter<?> converter = fastConverter;\n        return new HttpMessageConverters(converter);\n    }\nDate now = new Date();\nrequestModel.setTimestamp(now);\n\u5c31\u8fd9\u6837\u7b80\u5355\u8c03\u7528\u4e86\u4e00\u4e0b\uff1a\ndebug \u7ed3\u679c\uff1a\n\n. ",
    "zhouzx23": "@fengxueye  \u4e00\u6837\u7684\u95ee\u9898\n```\n    @Bean\n    public FastJsonHttpMessageConverter fastJsonHttpMessageConverter() {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        SerializeConfig serializeConfig = SerializeConfig.globalInstance;\n        serializeConfig.put(BigInteger.class, ToStringSerializer.instance);\n        serializeConfig.put(Long.class, ToStringSerializer.instance);\n        serializeConfig.put(Long.TYPE, ToStringSerializer.instance);\n        fastJsonConfig.setSerializeConfig(serializeConfig);\n        converter.setFastJsonConfig(fastJsonConfig);\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.WriteMapNullValue,\n            SerializerFeature.WriteBigDecimalAsPlain);\n        fastJsonConfig.setDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        converter.setFastJsonConfig(fastJsonConfig);\n        List supportedMediaTypes = new ArrayList();\n        supportedMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n        converter.setSupportedMediaTypes(supportedMediaTypes);\n    return converter;\n}\n\n```\nspringboot\u4e2d\u8bbe\u7f6e\u5168\u5c40\u7684fastjsonconfig dataformat\uff0c VO\u4e2d\u4f7f\u7528@JSONField(format = \"yyyy-MM-dd\")  \u65e0\u6548\uff0c\u8fd8\u662f\u683c\u5f0f\u5316yyyy-MM-dd HH:mm:ss \u683c\u5f0f\u4e86\u3002. ",
    "liwenhe1993": "\u5f53\u524dfastjson\u505a\u4e86\u5904\u7406\uff0c\u9ed8\u8ba4\u4e3a\uff08\u5373jsonp\uff09\uff1a\npublic static final MediaType APPLICATION_JAVASCRIPT = new MediaType(\"application\", \"javascript\");\n\u5982\u679c\u4f60\u60f3\u8fd4\u56de\u7eafjson\u5bf9\u8c61\uff0c\u8bf7\u5728\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0a\u52a0\u5165@JsonView\u6ce8\u89e3\uff0c\u6216\u8005\u4f60\u901a\u8fc7spring\u6ce8\u89e3@ControllerAdvice\u81ea\u5b9a\u4e49ResponseBodyAdvice. ",
    "ITcathyh": "\u611f\u8c22\u89e3\u7b54~. ",
    "xiaojiahuo": "\u6d4b\u8bd5\u7a0b\u5e8f\uff1a\npublic class ExampleExample {\n    public static void main(String[] args) {\n        Result result = new Result();\n        result.setName(\"huang\");\n        result.setDate(new Date());\n        result.setApplyOperation(ApplyOperation.CANCEL);\n        SerializeFilter[] filters = new SerializeFilter[]{new FastJsonHumpToUnderline()};\n        log.info(JSON.toJSONString(result, filters));\n        log.info(JSON.toJSONString(result));\n    }\n    @Data\n    static class Result {\n        String name;\n        String age;\n        @JSONField(format = \"yyyy-MM-dd HH:mm:ss\")\n        Date date;\n        @JSONField( serializeUsing = IntEnumValueSerializer.class)\n        ApplyOperation applyOperation;\n    }\n    @AllArgsConstructor\n    enum ApplyOperation implements BaseIntEnum {\n        DELETE(0, \"\u5220\u9664\"),\n        PUSH(1,\"\u786e\u8ba4\u63d0\u4ea4\"),\n        CANCEL(2, \"\u8fd4\u56de\u4fee\u6539\"),\n        ;\n        @Getter\n        private final int value;\n        @Getter\n        private final String name;\n    }\n}\nIntEnumValueSerializer\u7c7b\n```\npublic class IntEnumValueSerializer implements ObjectSerializer {\n@Override\npublic void write(JSONSerializer jsonSerializer, Object o, Object o1, Type type, int i) throws IOException {\n    if (o != null && o instanceof BaseIntEnum) {\n        BaseIntEnum baseIntEnum = (BaseIntEnum) o;\n        jsonSerializer.write(baseIntEnum.getName());\n    }\n}\n\n}\n```\nFastJsonHumpToUnderline\u7c7b\n```\npublic class FastJsonHumpToUnderline implements NameFilter {\n@Override\npublic String process(Object o, String s, Object o1) {\n    if (StringUtils.isEmpty(s)){\n        return \"\";\n    }\n    StringBuilder stringBuilder = new StringBuilder();\n    for(int i = 0; i < s.length() ; ++i){\n        char c = s.charAt(i);\n        if (Character.isUpperCase(c)){\n            stringBuilder.append(\"_\");\n            stringBuilder.append(Character.toLowerCase(c));\n        }else{\n            stringBuilder.append(c);\n        }\n    }\n    return stringBuilder.toString();\n}\n\n}\n```\n\u8f93\u51fa\u7ed3\u679c\n[ExampleExample.java:38] {\"apply_operation\":\"CANCEL\",\"date\":1508081134608,\"name\":\"huang\"}\n [ExampleExample.java:39] {\"applyOperation\":\"\u8fd4\u56de\u4fee\u6539\",\"date\":\"2017-10-15 23:25:34\",\"name\":\"huang\"}\n. ",
    "Knight-xiaolu": "\u6709\u4eba\u78b0\u5230\u4e48. swagger\u4f7f\u7528\u7684\u662f2.7.0\u7248\u672c  fastjson \u4f7f\u7528\u7684\u662f1.2.39\u7248\u672c. ",
    "ccdd4ever": "\u6211\u8fd9\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898/api-docs\u63a5\u53e3\u6ca1\u95ee\u9898\uff0c\u662f/ui\u63a5\u53e3\u8fd4\u56de\u503c\u7684name\u4ece\u9a7c\u5cf0\u8f6c\u6210\u4e86\u4e0b\u5212\u7ebf\n\n. ",
    "livelazily": "\u52a0\u4e86\ncompile \"org.jetbrains.kotlin:kotlin-reflect\"\n\u4f9d\u65e7\u662f\u4e0d\u884c,\n\u5df2\u7ecf\u6539\u7528 @field:JSONField \u7684\u65b9\u6cd5\u6682\u65f6\u4f7f\u7528\u7740. @kimmking \u8fd9\u6837\u5199\u662f ok \u7684, \u4f46\u5c31\u50cf #1476 \u8bf4\u7684, wiki \u4e0a\u8c8c\u4f3c\u662f2\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\n\u73b0\u5728\u5c31\u4e0d\u6e05\u695a\u8fd9\u4e2a\u73b0\u8c61\u662f bug \u8fd8\u662f feature \u4e86. @limuyang2 \u6211\u5efa\u7acb\u4e86\u4e2a\u6d4b\u8bd5\u4ed3\u5e93\nhttps://github.com/livelazily/fastjson-kotlin\n\u52a0\u4e86 compile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\" \u4e4b\u540e\u4f9d\u65e7\u662f\u4e0d\u884c\uff0c\n\u8f93\u51fa\u4ecd\u65e7\u662f\njson\n{\"aa\":\"ccc\",\"bb\":\"ddd\"}. ",
    "wanggang0813": "1.1.59\u53ca\u65e9\u671f\u7248\u672c\u6ca1\u6709\u8be5\u95ee\u9898\uff0c\u8bd5\u4e86\u5c06isId \u6362\u6210 isname \u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u5c06isId\u6362\u6210 isheight \u4f1a\u6709\u95ee\u9898; \u63a8\u6d4b\u57fa\u672c\u6570\u636e\u7c7b\u578b\u89e3\u6790\u6709\u95ee\u9898\uff0c\u671f\u5f85\u5c0a\u656c\u7684\u5f00\u53d1\u540c\u5b66\u65e9\u65e5\u4fee\u590d\u8be5\u95ee\u9898\u3002 \u8c22\u8c22\uff01. When to publish android-1.1.65?. @wenshao  \u4f5c\u8005\u60a8\u597d\uff0c\u60a8\u6709\u6ca1\u6709\u6536\u5230\u56fd\u5185\u5382\u5546\u6bd4\u65b9\u8bf4\u534e\u4e3a\u9002\u914dAndroid O \u7684fastjson\u89e3\u6790\u5931\u8d25\u7684\u76f8\u5173\u53cd\u9988\uff1f. ",
    "rplees": "@Luckywb \u55ef,\u6211\u4e5f\u662f\u81ea\u5df1\u8fd9\u6837\u89e3\u51b3\u7684. . @VictorZeng \u4e0d\u597d\u610f\u601d,\u73b0\u5728\u624d\u770b\u5230\u4fe1\u606f, \u6211\u7684\u610f\u601d\u662f xxx.json Response Content Type\u7684\u662fMediaType.APPLICATION_JSON,xxx.json?callback=foo Response Content Type \u662fapplication/javascript, \u6211\u7684\u505a\u6cd5\u8ddf @Luckywb \u662f\u4e00\u6837\u7684 . ",
    "mrccao": "json_simple1.1\u4e0d\u4f1a\u6709\u95ee\u9898. \u8fd8\u662fjson_simple\u53fc\u70b8\u5929. ",
    "LambdaV5": "java.lang.StackOverflowError: stack size 8MB\n                      at java.lang.reflect.Method.invoke(Native Method)\n                      at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:351)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:92)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:352)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146).    java.lang.StackOverflowError: stack size 8MB\n                      at java.lang.reflect.Method.invoke(Native Method)\n                      at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:351)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:92)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:352)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\nE/AndroidRuntime:     at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146)\n                      at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:611)\n                      at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:146). \nheap.zip\n. \nheap.zip\n. 4.1.0\u7684RealmObject\u91cc\u9762\u591a\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5,3.7.2\u6ca1\u6709,\u6240\u4ee54.1.0\u7248\u672c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u628arealm\u5bf9\u8c61\u5e8f\u5217\u5316\u51fa\u6765\n    /\n     * Returns {@link Realm} instance where this {@link RealmObject} belongs.\n     * \n     * You must not call {@link Realm#close()} against returned instance.\n     \n     * @return {@link Realm} instance where this object belongs to or {@code null} if this object is unmanaged.\n     * @throws IllegalStateException if this object is an instance of {@link DynamicRealmObject}\n     * or this object was already deleted or the corresponding {@link Realm} was already closed.\n     /\n    public Realm getRealm() {\n        return getRealm(this);\n    }\n/**\n * returns {@link Realm} instance where the {@code model} belongs.\n * <p>\n * You <b>must not</b> call {@link Realm#close()} against returned instance.\n *\n * @param model an {@link RealmModel} instance other than {@link DynamicRealmObject}.\n * @return {@link Realm} instance where the {@code model} belongs or {@code null} if the {@code model} is unmanaged.\n * @throws IllegalArgumentException if the {@code model} is {@code null}.\n * @throws IllegalStateException if the {@code model}  is an instance of {@link DynamicRealmObject}\n * or this object was already deleted or the corresponding {@link Realm} was already closed.\n */\npublic static Realm getRealm(RealmModel model) {\n    if (model == null) {\n        throw new IllegalArgumentException(MSG_NULL_OBJECT);\n    }\n    if (model instanceof DynamicRealmObject) {\n        throw new IllegalStateException(MSG_DYNAMIC_OBJECT);\n    }\n    if (!(model instanceof RealmObjectProxy)) {\n        return null;\n    }\n    final BaseRealm realm = ((RealmObjectProxy) model).realmGet$proxyState().getRealm$realm();\n    realm.checkIfValid();\n    if (!RealmObject.isValid(model)) {\n        throw new IllegalStateException(MSG_DELETED_OBJECT);\n    }\n\n    return (Realm) realm;\n}. 4.1.0\u7684RealmObject\u91cc\u9762\u591a\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5,3.7.2\u6ca1\u6709,\u6240\u4ee54.1.0\u7248\u672c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u628arealm\u5bf9\u8c61\u5e8f\u5217\u5316\u51fa\u6765\n/**\n * Returns {@link Realm} instance where this {@link RealmObject} belongs.\n * <p>\n * You <b>must not</b> call {@link Realm#close()} against returned instance.\n *\n * @return {@link Realm} instance where this object belongs to or {@code null} if this object is unmanaged.\n * @throws IllegalStateException if this object is an instance of {@link DynamicRealmObject}\n * or this object was already deleted or the corresponding {@link Realm} was already closed.\n */\npublic Realm getRealm() {\n    return getRealm(this);\n}\n\n/**\n * returns {@link Realm} instance where the {@code model} belongs.\n * <p>\n * You <b>must not</b> call {@link Realm#close()} against returned instance.\n *\n * @param model an {@link RealmModel} instance other than {@link DynamicRealmObject}.\n * @return {@link Realm} instance where the {@code model} belongs or {@code null} if the {@code model} is unmanaged.\n * @throws IllegalArgumentException if the {@code model} is {@code null}.\n * @throws IllegalStateException if the {@code model}  is an instance of {@link DynamicRealmObject}\n * or this object was already deleted or the corresponding {@link Realm} was already closed.\n */\npublic static Realm getRealm(RealmModel model) {\n    if (model == null) {\n        throw new IllegalArgumentException(MSG_NULL_OBJECT);\n    }\n    if (model instanceof DynamicRealmObject) {\n        throw new IllegalStateException(MSG_DYNAMIC_OBJECT);\n    }\n    if (!(model instanceof RealmObjectProxy)) {\n        return null;\n    }\n    final BaseRealm realm = ((RealmObjectProxy) model).realmGet$proxyState().getRealm$realm();\n    realm.checkIfValid();\n    if (!RealmObject.isValid(model)) {\n        throw new IllegalStateException(MSG_DELETED_OBJECT);\n    }\n\n    return (Realm) realm;\n}. \u4f60\u770b\u770b\u662f\u4e0d\u662f\u4f60\u6709\u4ec0\u4e48get\u65b9\u6cd5\u88ab\u6b7b\u5faa\u73af\u8c03\u7528\u4e86. public Realm getRealm() {\n\nreturn getRealm(this);\n}\n\u8fd9\u4e2a\u662f\u56e0\u4e3a\u91cc\u9762\u7684getrealm\u5f15\u7528\u4e86this,\u6240\u4ee5\u53c8\u4f1a\u5e8f\u5217\u5316\u8fd9\u4e2a\u5bf9\u8c61,\u7136\u540e\u5c31\u6b7b\u5faa\u73af\u4e86.     private class NamePropertyFilter implements PropertyPreFilter, ValueFilter {\n    @Override\n    public boolean apply(JSONSerializer serializer, Object object, String name) {\n        return !TextUtils.equals(\"realm\", name);\n    }\n\n    @Override\n    public Object process(Object object, String name, Object value) {\n        return value == null ? \"\" : value;\n    }\n}\n\n\u5e8f\u5217\u5316\u7684\u65f6\u5019,\u4f20\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u53bb\u4e5f\u53ef\u4ee5.     private class NamePropertyFilter implements PropertyPreFilter, ValueFilter {\n    @Override\n    public boolean apply(JSONSerializer serializer, Object object, String name) {\n        return !TextUtils.equals(\"realm\", name);\n    }\n\n    @Override\n    public Object process(Object object, String name, Object value) {\n        return value == null ? \"\" : value;\n    }\n}\n\n\u5e8f\u5217\u5316\u7684\u65f6\u5019,\u4f20\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u53bb\u4e5f\u53ef\u4ee5. ",
    "destinyd": "@wenshao \nget\u91cc\u9762\u6ca1\u6709new\u5bf9\u8c61\n\u6211\u73b0\u5728\u5904\u7406\u7684\u529e\u6cd5\uff0c\u662f\u4e2d\u95f4\u518d\u5efa\u7acb\u4e00\u4e2a\u975e\u7ee7\u627fRealmObject\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u624b\u52a8\u8f6c\u79fb\u6570\u636e\uff0c\u7136\u540etoJSONString \u624d\u6ca1\u6709\u95ee\u9898. ",
    "zhou-hao": "\u540c\u6837\u7684\u95ee\u9898 can not get javaBeanDeserializer. java.lang.Integer. \u4f7f\u7528DisableCircularReferenceDetect\u5173\u6389\u5faa\u73af\u5f15\u7528\njava\nJSON.toJSONString(object,SerializerFeature.DisableCircularReferenceDetect). ",
    "alonWang": "\u4e5f\u662f\u540c\u6837\u7684\u95ee\u9898. ",
    "Huang-Jinxian": "\u6211\u7528gson\u89e3\u51b3\u4e86\uff0c\u5b8c\u5168\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898. ",
    "aaa87621990": "@wuwen5  \u4f60\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u4e0d\u662ffastjson\uff08core\uff09\u7684\u95ee\u9898\uff0c\u662ffastjsonConverter\u7684\u95ee\u9898\uff0c\u4ece\u5e90\u5c71\u4ee5\u5916\u6765\u770b\uff1a\u8fd9\u5c31\u662f\u4e2a\u95ee\u9898\uff0c\u4f60\u7684converter\u8981\u548cspring\u7684\u9ed8\u8ba4\u7684jackson converter\u5b58\u5728\u7684\u65f6\u5019\u5bf9\u4e0d\u8be5\u7531jsonconverter\u5904\u7406\u7684\u4e1c\u897f\u5904\u7406\u903b\u8f91\u4e00\u81f4\uff0c\u5904\u7406\u903b\u8f91\u4e0d\u4e00\u81f4\u90a3\u5c31\u662fwrong\uff0c\u6700\u5e38\u89c1\u7684\u7528\u4f8b\u4e0a\u8fb9\u5df2\u7ecf\u6709\u4eba\u8bf4\u4e86\uff0c\u597d\u591a\u4eba\u90fd\u5728\u76f4\u63a5\u7528string\u6765return \u5b57\u7b26\u4e32\u6570\u636e\uff0c\u73b0\u5728\u8fd9\u6837\u4f60\u8ba9\u6211\u53d8\u6210response.write()\u771f\u7684\u5f88\u4e0d\u597d\uff0c\u6211\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e5f\u662f\u56e0\u4e3a\u6211\u6709\u4e9b\u5bf9\u5916crontroller\u4e0d\u80fd\u4f7f\u7528\u975e\u6807\u51c6\u7684json\u683c\u5f0f\u6765\u8f93\u51fa\uff0c\u53c8\u6211\u627e\u4e0d\u5230\u53ef\u4ee5\u591a\u4e2ajsonconverter\u5171\u5b58\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u628a\u8fd9\u4e9bjson\u6765\u7279\u6b8a\u5904\u7406\uff0c\u8fd4\u56destring\u5b57\u7b26\u4e32\n\u53e6\u5916\uff1a\u8fd9\u5f53\u7136\u662f\u8981\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u5b9e\u73b0\uff0c\u7406\u7531\u4e0a\u8fb9\u5df2\u7ecf\u8bf4\u4e86\u3002\n. ",
    "blade254353074": "\u9664\u4e86\u4f18\u5148\u5904\u7406 String Converter\uff0c\u73b0\u5728\u6709\u66f4\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u5417\uff1f. ",
    "291700351": "fastjson: com.alibaba:fastjson:1.1.64.android\nAndroidStudio2.3 and AndroidStudio3.0\nBean:\nkotlin\nclass Head {\n    var msg: String = \"\" //mock\n    var code: String = \"\" //0000\n    override fun toString(): String = \"Head(msg='$msg', code='$code')\"\n}\nkotlin\nval head = JSON.parseObject<Head>(headStr, Head::class.java)`\nException Message:\ncom.alibaba.fastjson.JSONException: default constructor not found. class com.yaomi.yzd.entity.Head\n. ",
    "malagebi": "\u4f60\u7684 \u5b9a\u4e49 channel  version osVersion ... \u8fd9\u4e9b\u5c5e\u6027\u5427\nprivate  entity  data = new entity();. ",
    "Fan4J": "@funset \n\u52a0\u4e0aget/set\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86. ",
    "yizmao": "@Configuration\npublic class HttpMessageConverterConfig {\n@Bean\npublic WebMvcConfigurer configureMessageConverters(){\n\n    return new WebMvcConfigurer() {\n        @Override\n        public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n\n            FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n\n            FastJsonConfig config = new FastJsonConfig();\n\n            config.setDateFormat(\"yy-MM-dd HH:mm:ss\");\n            converters.add(converter);\n\n        }\n    };\n}\n\n}\n@VictorZeng . @VictorZeng  \u8c22\u8c22\u8001\u54e5\uff0c\u662f\u6211\u8111\u5b50\u62bd\u4e86\u6ca1\u770b\u5230. ",
    "htyoung": "\u6211\u77e5\u9053\u8fd9\u662f\u4fdd\u62a4\u673a\u5236\uff0c\u4f46\u662f\u5728\u6b63\u5e38\u53d1\u9001\u8868\u5355\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6eHeader\u4e2d\u7684Accept\uff08\u4e00\u822c\u4e5f\u4e0d\u4f1a\u8bbe\u7f6e\uff09\uff0c\u800cfastjon\u662f\u9ed8\u8ba4\u652f\u6301\u6240\u6709MediaType\u7684\uff0c\u8fd9\u4e00\u70b9\u4ece\u903b\u8f91\u4e0a\u6765\u8bf4\u5176\u5b9e\u662f\u548cSpring\u4e0d\u517c\u5bb9\u7684. \u65e2\u7136spring\u5f3a\u5236\u8981\u6c42\u4e86\uff0cfastjson\u662f\u4e0d\u662f\u53ef\u4ee5\u7ed9\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u975eMediaType.ALL\u7684\u9009\u62e9\u5462\uff1f. \u6709\u4e2a\u7591\u95ee\uff0c\u65e9\u671f\u7248\u672c\u7684fastjson MediaType\u9ed8\u8ba4\u8bbe\u7f6e\u7684MediaType.APPLICATION_JSON\u548cMediaType.APPLICATION_FORM_URLENCODED\uff0c\u4e00\u822c\u6765\u8bf4fastjson\u4e5f\u4e0d\u80fd\u8fdb\u884c\u5176\u5b83MediaType\u7c7b\u578b\u7684\u6d88\u606f\u8f6c\u6362\uff0c\u4e3a\u4ec0\u4e48\u8981\u628a\u9ed8\u8ba4\u8bbe\u7f6e\u6539\u6210MediaType.ALL\u5462. ",
    "starbnu": "\u6c42\u6307\u6559 \u8fd9\u4e2a\u95ee\u9898\u5982\u4f55\u89e3 . \u81ea\u5df1\u9876\u8d77\u6765  \u65e0\u4eba\u95ee\u6d25\u554a. \u4e0d\u8981\u6c89 @wenshao . 1.2.30. \u7528\u6d4b\u8bd5\u4ee3\u7801 1.2.30 \u6211\u672c\u5730\u8dd1\u8fd8\u662f\u4f1a\u6709\u95ee\u9898   1.2.39 \u89e3\u51b3\u4e86 \u662fOK\u7684. \u5f15\u7528\u7684jar \uff0c\u57fa\u672c\u6539\u4e0d\u52a8\u3002 \u770b\u4e86\u4e0b\u4f3c\u4e4e Serializer \u589e\u52a0\u81ea\u5b9a\u4e49\u4e5f\u505a\u4e0d\u4e86 \uff0cSerializer \u4f3c\u4e4e\u90fd\u662fvalue\u8fdb\u884c\u5904\u7406\uff0c\u6e90\u7801\u6ca1\u5b8c\u5168\u641e\u660e\u767d\uff0c\u8bf7\u6559\u6709\u65e0\u529e\u6cd5. ",
    "aruanruan": "sorry, i use 1.2.10, it is too old. \u7248\u672c: 1.2.39 \n       com.alibaba.fastjson.JSONException: create instance error\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:350)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1335)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:151)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:161)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:130)\n\u51fa\u9519\u5728DefaultJSONParser.java\u7684332\u884c\nfieldDeserializer.setValue(instance, entry.getValue());\nCaused by: com.alibaba.fastjson.JSONException: set property error, params\n    at com.alibaba.fastjson.parser.deserializer.FieldDeserializer.setValue(FieldDeserializer.java:136)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:332)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: argument type mismatch\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.alibaba.fastjson.parser.deserializer.FieldDeserializer.setValue(FieldDeserializer.java:96)\n. data:\n{\"id\": \"33c1da69-bc18-4c2e-8227-86398bef0319\", \"instance\": \"v1\", \"interface\": \"com.xxx.dcp.Echo\", \"method\": \"sayHi\", \"params\": [\"tony\"], \"@type\": \"com.xxx.dcp.rpc.core.Request\"}\nstack:\n2017-11-04 15:44:06,626 ERROR (WebSocketFrameHandler.java:50)- unsupported frame content: \ncom.alibaba.fastjson.JSONException: create instance error\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:350)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1335)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1301)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:151)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:161)\n    at com.alibaba.fastjson.JSON.parse(JSON.java:130)\n    at com.xxx.dcp.serialize.json.FastJsonObjectInput.readObject(FastJsonObjectInput.java:103)\n    at com.xxx.dcp.serialize.SerializerUtils.deserialize(SerializerUtils.java:75)\n    at com.xxx.ate.aplan.ms.netty.WebSocketFrameHandler.channelRead0(WebSocketFrameHandler.java:38)\n    at com.xxx.ate.aplan.ms.netty.WebSocketFrameHandler.channelRead0(WebSocketFrameHandler.java:1)\n    at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.handler.codec.http.websocketx.Utf8FrameValidator.channelRead(Utf8FrameValidator.java:77)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1.channelRead(WebSocketServerProtocolHandler.java:192)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:651)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:574)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:488)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:450)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: com.alibaba.fastjson.JSONException: set property error, params\n    at com.alibaba.fastjson.parser.deserializer.FieldDeserializer.setValue(FieldDeserializer.java:136)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:332)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: argument type mismatch\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.alibaba.fastjson.parser.deserializer.FieldDeserializer.setValue(FieldDeserializer.java:96)\n    ... 47 more\n2017-11-04 15:44:06,631 WARN (Slf4JLogger.java:151)- An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\njava.lang.UnsupportedOperationException: unsupported frame content: \n    at com.xxx.ate.aplan.ms.netty.WebSocketFrameHandler.channelRead0(WebSocketFrameHandler.java:52)\n    at com.xxx.ate.aplan.ms.netty.WebSocketFrameHandler.channelRead0(WebSocketFrameHandler.java:1)\n    at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.handler.codec.http.websocketx.Utf8FrameValidator.channelRead(Utf8FrameValidator.java:77)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1.channelRead(WebSocketServerProtocolHandler.java:192)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:651)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:574)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:488)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:450)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)\n    at java.lang.Thread.run(Thread.java:745)\n. ",
    "maotan": "@wenshao JSONObject \u76f8\u5f53\u4e8ejackson\u4e2d\u7684ObjectNode,  JSONArray\u76f8\u5f53\u4e8ejackson\u4e2d\u7684ArrayNode\uff0c \u4f46jackson\u4e2d\u8fd8\u6709JsonNode\u53ef\u4ee5\u540c\u65f6\u8868\u793a\u4e24\u8005\uff0c\u76f8\u540c\u4e8e\u4e00\u4e2a\u7236\u7c7b\uff0cfastxml\u4e2d\u6709\u8fd9\u4e2a\u7236\u7c7b\u53ef\u4ee5\u540c\u65f6\u8868\u793aJSONObject/JSONArray\u5417. \u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e2a\u9700\u6c42\u5462\uff1f \u6bd4\u5982http\u8bf7\u6c42\u7684\u8fd4\u56de\u503c\uff0c\u5728\u4e0d\u77e5\u9053\u5177\u4f53\u4f1a\u8fd4\u56deObjectNode\u8fd8\u662fArrayNode\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7528jsonNode\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\u4f46\u5728fastxml\u4e2d\u4e0d\u77e5\u9053\u7528\u4ec0\u4e48. \n\u6211\u7528\u7684\u4e00\u4e2a\u4e09\u65b9\u5e93\uff0chttp\u8fd4\u56dejsonnode\u6211\u89c9\u5f97\u8fd8\u662f\u975e\u5e38\u5408\u7406\uff0c\u8c03\u7528\u63a5\u53e3\u7684\u4eba\u624d\u77e5\u9053\u8fd4\u56de\u7684\u662f \u5217\u8868\u8fd8\u662f\u5b57\u5178. \u4f60\u4eec\u5e93\u4e2d\u7684JSONObject\u7684get\u63a5\u53e3\u8fd4\u56de\u7684\u662fJSONObject\u4e0eJSONArray, \u5982\u679c\u7528JSON\u53d6\u4ee3\uff0cJSON\u7c7b\u91cc\u9762\u672c\u8eab\u53c8\u4e0d\u5177\u6709\u83b7\u53d6\u503c\u7684\u65b9\u6cd5\uff0c\u5c34\u5c2c. \u4e2a\u4eba\u611f\u89c9fastjson\u5728\u4f7f\u7528\u59ff\u52bf\u4e0a\u6bd4jackson\u7b80\u5355\u4e86\u5f88\u591a, \u5982\u679c\u80fd\u652f\u6301\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u5b8c\u7f8e\u4e86........ @neil4dong \u7b80\u5355\u7c97\u66b4\u5730\u8fd4\u56deObject\uff0c\u4f1a\u8ba9\u4f7f\u7528\u9ebb\u70e6\u5f88\u591a. @neil4dong \u5982\u679c\u662f\u4e4b\u524d\u7684\u8fd4\u56deJsonNode\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u662f\u4e0d\u9700\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5427\uff0c \u6211\u7684\u7406\u89e3\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u7279\u522b\u7684\u521b\u5efa\u4e00\u4e2a\u7c7b\u53bb\u53cd\u5e8f\u5217\u5316. \u50cfgson\u90a3\u79cd\u6bcf\u6b21\u53cd\u5e8f\u5217\u5316\u65f6\u90fd\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\uff0c\u662f\u4e00\u79cd\u5f88\u9ebb\u70e6\u7684\u4e8b\u60c5. \u6211\u7684\u610f\u601d\u662f\u6709\u4e00\u4e2aJsonNode\u80fd\u50cf\u5b57\u5178\u4e00\u6837\u4f7f\u7528json\uff0c\u5927\u591a\u6570\u65f6\u5019\u4e5f\u5c31\u4e0d\u9700\u8981\u53bb\u6267\u884c\u7279\u6b8a\u7684\u53cd\u5e8f\u5217\u5316\u3002. ",
    "about-bob": "appRequestVO = JSON.toJavaObject(JSONObject.parseObject(params.toJSONString()), AppRequestVO.class);\n\u8fd9\u4e00\u6761\u8bed\u53e5\u6ca1\u6709\u4e22\u5931\uff0c\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48. ",
    "xdongliang": "\u901a\u8fc7\u6d4b\u8bd5\uff0c\u53d1\u73b01.2.37\u8fd9\u4e2a\u7248\u672c\u5f00\u59cb\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c1.2.37\u4ee5\u4e0b\u7248\u672c\u6ca1\u6709\u95ee\u9898\u3002. \u8fd9\u96be\u9053\u4e0d\u662f\u4e2abug\u5417\uff1f\u600e\u4e48\u6ca1\u4eba\u5173\u6ce8\u56de\u5e94\uff1f. @wenshao \u95ee\u9898\u57281.2.41\u4e2d\u4f9d\u7136\u5b58\u5728\uff0c \u5c31\u6211\u63d0\u4f9b\u7684\u7528\u4f8b\u90fd\u6ca1\u8dd1\u8fc7. \u6211\u4ee5\u4e3a\u4f7f\u7528\uff1aFeature.SupportNonPublicField\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5f53\u6211\u8fd9\u6837\u5199\u65f6\uff1a\n```\nopen class BaseUser {\n    var name: String? = null\n        protected set\n}\nclass User : BaseUser()\nfun main(args: Array) {\n    val user = JSONObject.parseObject(\"{\\\"name\\\":\\\"fastjson\\\"}\", User::class.java, Feature.SupportNonPublicField)\n    println(user.name)\n}\n```\n\u7ee7\u627f\u57fa\u7c7b\u7684\u4e00\u4e2aprotected\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5c5e\u6027\u5c31\u4e0d\u80fd\u88ab\u6b63\u786e\u8bbe\u7f6e\u3002\n@wenshao \u8bf7\u89e3\u51b3\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\n. \u7279\u6027\u8d8a\u591a\uff0c\u95ee\u9898\u8d8a\u591a\uff0c\u6700\u8fd1\u6df1\u5ea6\u4f7f\u7528\u7684\u65f6\u5019\u5df2\u7ecf\u53d1\u73b0\u8fd9\u6837\u7c7b\u4f3c\u7684\u95ee\u9898\u591a\u4e2a\u3002\n\u80fd\u529b\u8d8a\u5927\uff0c\u8d23\u4efb\u8d8a\u5927~ \u5e0c\u671b\u4f5c\u8005\u80fd\u53ca\u65f6\u4fee\u590d\uff0c\u628a\u8fd9\u4e2a\u5e93\u505a\u7684\u8d8a\u6765\u8d8a\u597d\u3002. ",
    "StanNing": "@wenshao \u6211\u4e5f\u51fa\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u6c42\u89e3\u51b3\u3002\u6211\u662f\u4e3a\u4e86\u89e3\u51b3\u53cd\u5e8f\u5217\u65f6\u670d\u52a1\u5668\u8fd4\u56de\u7684Json\u4e2d\u6709\u5b57\u6bb5\u4e3aNull\u9020\u6210\u7684\u6570\u636e\u6a21\u578b\u5bf9\u5e94\u5b57\u6bb5\u7a7a\u6307\u9488\u7684\u9519\u8bef\uff0c\u624d\u60f3\u5347\u7ea7\u7684\u3002\u7ed3\u679c\u5347\u7ea7\u540e\u5c31\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u987a\u4fbf\u95ee\u4e00\u4e0b\uff0c\u78b0\u5230\u53cd\u5e8f\u5217\u5316\u670d\u52a1\u5668\u6570\u636e\u8fd4\u56de\u67d0\u4e2a\u5b57\u6bb5\u4e3aNull\u65f6\uff0c\u5982\u4f55\u907f\u514dkotlin\u4e2d\u7a7a\u68c0\u67e5\u62a5\u9519\u7684\u95ee\u9898\u554a\uff1f. \u8fd9\u4e2a\u95ee\u9898\u7ecf\u8fc7\u9a8c\u8bc1\u4f9d\u7136\u5b58\u5728\uff0c @wenshao \u95ee\u4e00\u4e0b\u4ec0\u4e48\u7248\u672c\u53ef\u4ee5\u89e3\u51b3\u554a\uff1fdata class \u4f7f\u7528\u7684\u573a\u666f\u5b9e\u5728\u592a\u591a\u4e86. @wenshao \ndata class JsonDemo1(var a: JsonDemo2 = JsonDemo2())\ndata class JsonDemo2(var b: String = \"\")\n````\n    @Test\n    fun test2() {\n        val s1 = \"{\\\"a\\\":{\\\"b\\\":123}}\"\n        val demo = s1.toJsonObject(JsonDemo1::class.java)\n        logd(demo?.toJson())\n    }\nfun <T> String.toJsonObject(parseClass: Class<T>): T? {\n        var t: T? = null\n        try {\n            t = JSON.parseObject(this, parseClass)\n        } catch (e: Exception) {\n            loge(e)\n        }\n        return t\n    }\n    fun Any.toJson(): String {\n        var jsonStr = \"\"\n        try {\n            jsonStr = JSON.toJSONString(this) //\u73b0\u5728\u66ff\u6362\u4e3aFastJson\n        } catch (e: Exception) {\n            loge(e)\n        }\n        return jsonStr\n    }\n\u5728Android\u9879\u76ee\u4e2d\nimplementation \"com.alibaba:fastjson:1.2.41\" \u4e0a\u9762\u62a5\u9519 default constructor not found.\n\u6362\u56de1.2.31\u5c31\u6b63\u5e38\u4e86\u3002\ncompile 'com.alibaba:fastjson:1.1.67.android' \u4f7f\u7528Android\u5e73\u53f0\u7684\u540c\u6837\u4f1a\u51fa\u73b0\u4e0a\u9762\u8fd9\u4e2a\u9519\u8bef\u3002\n. ",
    "0604hx": "@wenshao \u7ecf\u6d4b\u8bd5\uff0c\u7248\u672c 1.2.37+\u5728\u89e3\u6790 kotlin \u7c7b\u65f6\uff0c\u8fd8\u662f\u62a5 default constructor not found Exception\nkotlin \u7248\u672c kotlin-stdlib-jre8:1.1.61\u3001kotlin-stdlib-jre8:1.1.50\u3001kotlin-stdlib-jre8:1.1.4 \u90fd\u662f\u5982\u6b64. @wenshao \u7528\u539f\u6765\u7684\u4ee3\u7801\u6d4b\u8bd5 1.2.44 \u7248\u672c\uff0c\u95ee\u9898\u4f9d\u65e7 @.@. ",
    "SystemTce": "android 1.1.67 \u8fd8\u662f\u4f1a\u62a5\u9519 = =. ",
    "zhuyonghao": "17\u5e74\u5230\u73b0\u572818\u5e741\u670831\u53f7\uff0c\u8fd8\u6ca1\u4fee\u590d\u3002\u3002\u3002. https://github.com/alibaba/fastjson/wiki/Use-Fastjson-in-Kotlin \u76f4\u63a5\u7528\u4f60\u4eec\u7684case\u90fd\u8dd1\u4e0d\u901a\uff0c1.2.44\u548c1.2.45\u4e24\u4e2a\u7248\u672c\u90fd\u8dd1\u4e0d\u901a. ",
    "exhui": "\u4f7f\u7528\u6700\u65b0\u7248\u672c1.2.46\n\u7528\u4f8b\u4e00 data class JsonVo(@JSONField(name = \"id\")val id: String = \"\", @JSONField(name = \"name\")val name: String = \"\")\n\u7528\u4f8b\u4e8c data class JsonVo(val id: String = \"\", @JSONField(name = \"name\")val name: String = \"\")\nfun main(args: Array) {\n    val jsonStr = \"[{\\\"id\\\":\\\"1\\\", \\\"name\\\":\\\"1\\\"}, {\\\"id\\\":\\\"2\\\", \\\"name\\\":\\\"2\\\"}]\"\n    val jsonList = JSON.parseArray(jsonStr, JsonVo::class.java)\n}\n\u4f7f\u7528\u7528\u4f8b\u4e8c\u5219\u62a5\u9519 default constructor not found \uff0c\u7528\u4f8b\u4e00\u5219\u6b63\u5e38\uff0c\u533a\u522b\u662f\u7528\u4f8b\u4e8c\u90e8\u5206\u6709JSONField\n. ",
    "faith-hb": "\u5e26\u4e0a\u9ed8\u8ba4\u53c2\u6570\u6ca1\u95ee\u9898\uff0c\u57281.1.65\u7248\u672c\u4e0a\uff1b\u4f46\u540c\u65f6\u518d\u52a0\u4e0a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u53c8\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\uff08\u627e\u4e0d\u5230\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\uff09\uff1b. ",
    "heiyeliuying": "\u7248\u672c\u5207\u6362\u52301.2.35 \u540c\u65f6\u589e\u52a0 compile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\" \u53cd\u5c04\u7684\u4f9d\u8d56. \u6211\u5c31\u53ef\u4ee5\u4e86. \u7528\u6700\u65b0\u76841.2.46 \u8fd8\u662f\u4e0d\u53ef\u4ee5\u7684. . ",
    "kongqueshi": "\u4e0d\u589e\u52a0 compile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\" \u53cd\u5c04\u7684\u4f9d\u8d56\uff0c1.2.35\u7248\u672c\u53ef\u4ee5\uff0c1.2.4\u7248\u672c\u4e0d\u884c\u3002. ",
    "yangxiaobinhaoshuai": "1.2.49 fastJson \u548c 1.1.70 android \u7248\u672c\uff0c\u666e\u901a kotlin data class \u8fd8\u662f\u4f1a\u62a5 \u2018default constructor not found.\u2019 \u9700\u8981\u4f9d\u8d56 kotlin-reflect \u624d\u80fd\u89e3\u51b3\u3002 . reflect \u5305 1w+ \u65b9\u6cd5\u6570\uff0c\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a crash \uff0ccompile \u90a3\u4e48\u591a\u65b9\u6cd5\u4e0d\u503c\u5f97\u5427... ",
    "khejing": "@wenshao  \u6211\u5728android\u4e0a\u7528\u4e861.2.49\uff0c\u53ea\u8981\u662frelease\u7248\uff0c\u5df2\u7ecf@Keep\u4e86\u6570\u636e\u7c7b\uff0c\u4f46\u4ecd\u7136\u4f1a\u63d0\u793adefault constructor not found\uff0c\u6211\u4e5f\u52a0\u4e86kotlin-reflect\u5e93\uff0c\u4e00\u70b9\u7528\u6ca1\u6709\u3002\u4f46debug\u7248\u5c31\u6ca1\u95ee\u9898. \u5df2\u7ecf\u627e\u5230\u539f\u56e0\u4e86\uff0c\u662fproguard\u4f7fkotlin-reflect\u5931\u6548\u4e86\uff0c\u5728proguard.pro\u4e2d\u52a0\u4e0a\u5982\u4e0b\u5c31\u6ca1\u95ee\u9898\u4e86\uff1a\n-keepattributes *Annotation*\n-keep class kotlin.** { *; }\n-keep class org.jetbrains.** { *; }.\n",
    "PuGuanyu": "\u8f9b\u82e6\u4e86\uff0c\u591a\u8c22\u652f\u6301\uff01\uff01\uff01\n\u5df2\u6d4b\u8bd5\u4e86\u53cd\u5e8f\u5217\u5316\uff0c\u5e8f\u5217\u5316\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u54cd\u5e94\u7684Feature\u6765\u652f\u6301\u8bbe\u7f6e~. \u73b0\u5728\u662f\u9047\u5230\u522b\u4eba\u7528jackson\u53ef\u4ee5\u8fdb\u884c\u6b63\u5e38\u7684\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\uff0c\u6211\u4eec\u8fd9\u8fb9\u6ca1\u6cd5\u8981\u6c42\u5bf9\u65b9\u4fee\u6539\u6570\u636e. ",
    "MingJunDuan": "\u641c\u4e86\u4e0b\u5176\u5b83\u7684issues\uff0c\u6ca1\u6709\u641c\u5230\u8fd9\u4e2a\u95ee\u9898\u30021.2.29\u7248\u672c\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\u3002. ok. ",
    "MaggieHwang": "@wenshao \u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u6ca1\u6709\u89e3\u51b3\n\u770b\u4e861.2.56\u7248\u672c \u53ea\u6709\u5f53value\u662fString/Number/Date/UUID\u7c7b\u578b\u65f6path\u624d\u4f1a\u52a0\u5165\u7ed3\u679c\u96c6 \u5bf9\u4e8e\u5176\u5b83\u7c7b\u578b\u6bd4\u5982Boolean\u7c7b\u578b \u8fd8\u662f\u5b58\u5728\u95ee\u9898. ",
    "bully1990": "\u5b9e\u4f53\u7c7b:\nNewsDetail.zip\n. ",
    "fengyuchenglun": "\u8c22\u8c22  \u5df2\u7ecf\u627e\u5230\u539f\u56e0  jackjson\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898. ",
    "guowenmeng": "\n\u8c22\u8c22 \u5df2\u7ecf\u627e\u5230\u539f\u56e0 jackjson\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\n\n\u9ebb\u70e6\uff0c\u4ec0\u4e48\u539f\u56e0\u554a\uff1f\u6211\u4e5f\u9047\u5230\u4e86. ",
    "patrickzhe": "\u8865\u5145\uff0c\u4f7f\u7528\u7684\u7248\u672c 1.2.36. \u592a\u597d\u4e86\uff0c\u4f1a\u6d4b\u8bd5\u4e0b. ",
    "StoneRivers": "@wenshao \u611f\u8c22\u60a8\u7684\u56de\u590d\uff0c\u4e4b\u524d\u63cf\u8ff0\u4e0d\u592a\u6e05\u695a\u3002\n\u76f4\u63a5\u4f7f\u7528JSONObject.parseObject(String text, Class<T> clazz)\u65b9\u6cd5\u76f4\u63a5\u53cd\u5e8f\u5217\u5316\u7684\u786e\u80fd\u6ee1\u8db3\u8981\u6c42\nColorContainer colorContainer1 = JSONObject.parseObject(\"{\\\"color\\\":\\\"error\\\"}\", ColorContainer.class);\n\u4f46\u5982\u679c\u5148\u7528JSONObject.parseObject(String text)\u5148\u83b7\u53d6\u4e00\u4e2aJSONObject\uff0c\u518d\u4f7f\u7528\u5176toJavaObject\u83b7\u53d6\u4e00\u4e2ajava\u5bf9\u8c61\u5219\u4f1a\u62a5\u9519\u3002\nJSONObject jsonObject = JSONObject.parseObject(\"{\\\"color\\\":\\\"error\\\"}\");\nColorContainer colorContainer = jsonObject.toJavaObject(ColorContainer.class);\nexception stack trace\u5982\u4e0b\uff1a\n```\ncom.alibaba.fastjson.JSONException: can not cast to : enumjson.Color\nat com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1002)\nat com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:652)\nat com.alibaba.fastjson.JSON.toJavaObject(JSON.java:935)\nat enumjson.FastJson.test(FastJson.java:15)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\nat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\nat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\nat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\n\nCaused by: com.alibaba.fastjson.JSONException: can not cast to : enumjson.Color\n    at com.alibaba.fastjson.util.TypeUtils.castToEnum(TypeUtils.java:818)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:736)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:831)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:889)\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1000)\n    ... 25 more\nCaused by: java.lang.IllegalArgumentException: No enum constant enumjson.Color.error\n    at java.lang.Enum.valueOf(Enum.java:238)\n    at com.alibaba.fastjson.util.TypeUtils.castToEnum(TypeUtils.java:807)\n    ... 29 more\n\u671f\u5f85\u7684\u7ed3\u679c\u662f\u4e00\u4e2aColor\u5c5e\u6027\u4e3anull\u7684ColorContainer\u5bf9\u8c61\u3002\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684\u5bf9\u8c61\u5b9a\u4e49\u5982\u4e0b\uff1a\npackage enumjson;\npublic enum Color {\nred,\nyellow,\ngreen\n\n}\n\npackage enumjson;\npublic class ColorContainer {\n    Color color;\npublic Color getColor() {\n    return color;\n}\n\npublic void setColor(Color color) {\n    this.color = color;\n}\n\n}\n```. ",
    "radcat1987": "\u8bf7\u63d0\u4f9b\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801\uff0c\u6211\u53bb\u75281.2.41\u505a\u4e0b\u6d4b\u8bd5. ",
    "NicholasYG": "\u5e8f\u5217\u5316\nString classObserveContent = JSONArray.toJSONString(list);\n\u53cd\u5e8f\u5217\u5316\u4f7f\u7528\u7684\u662f\nList list = (List) JSONArray.parseArray(classObserveStr,KnowledgeQuestionModel.class);\n. \u662f\u7684\uff0c\u5728\u5e8f\u5217\u5316\u7684\u90a3\u4e00\u6b65\u5c31\u51fa\u73b0\u4e86\u4e71\u7801. @wenshao \n\u5728\u628a\u96c6\u5408\u8f6c\u6362\u6210string\u7684\u65f6\u5019\u4e2d\u6587\u6ca1\u6709\u4e71\u7801\uff0c\u4f46\u662f\u51fa\u73b0\u4e86\u4e00\u4e9b\u539f\u59cb\u6570\u636e\u91cc\u9762\u6ca1\u6709\u7684\u4e1c\u897f\uff0c\u65b0\u589e\u5185\u5bb9\u4e3a\n \"this$0\": {\n                    \"$ref\": \"$[3]\"\n                }\n\uff08\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u6570\u5b57\u6709\u7684\u662f0\u30011\u62162\u3002\uff09\n\u4e4b\u540e\u6211\u628astring\u5b57\u7b26\u4e32\u5b58\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u518d\u4ece\u6587\u4ef6\u91cc\u9762\u8bfb\u53d6\u8fd9\u4e32\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e2d\u6587\u4e71\u7801\uff0c\u800c\u4e14\n\u7c7b\u4f3c\u4e8e\n\"this$0\": {\n                    \"$ref\": \"$[3]\"\n                }\n\u8fd9\u6837\u7684\u6570\u636e\u8fd8\u662f\u5b58\u5728. \u521a\u624d\u6309\u7167\u60a8\u7684\u65b9\u6cd5\u8bd5\u4e86\u4e0b\uff0c\u53d1\u73b0\u5185\u5b58\u6ea2\u51fa\u4e86\nProcess: com.xxx.xxx, PID: 20993\n                                                                       java.lang.StackOverflowError: stack size 8MB\n                                                                           at com.alibaba.fastjson.serializer.SerializeConfig.getObjectWriter(SerializeConfig.java:409)\n                                                                           at com.alibaba.fastjson.serializer.SerializeConfig.getObjectWriter(SerializeConfig.java:405)\n                                                                           at com.alibaba.fastjson.serializer.JSONSerializer.getObjectWriter(JSONSerializer.java:359)\n                                                                           at com.alibaba.fastjson.serializer.ListSerializer.write(ListSerializer.java:130)\n                                                                           at com.alibaba.fastjson.serializer.FieldSerializer.writeValue(FieldSerializer.java:278)\n                                                                           at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:358)\n                                                                           at com.alibaba.fastjson.serializer.JavaBeanSerializer.write(JavaBeanSerializer.java:112)\n                                                                           at com.alibaba.fastjson.serializer.ListSerializer.write(ListSerializer.java:137)\n\uff08\u90e8\u5206log\u65e5\u5fd7\uff09. @wenshao \n\u6e29\u5c11\u60a8\u597d\uff0c\u6628\u5929\u7684\u95ee\u9898\u5728list\u8f6c\u6362string\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\"this$0\": {\"$ref\": \"$[3]\"}\uff0c\u6309\u7167\u60a8\u4e0a\u9762\u8bf4\u7684\u65b9\u6cd5\uff0c\u89e3\u51b3\u4e86\uff0c\u4e71\u7801\u7684\u95ee\u9898\u662f\u6211\u5728\u6570\u636e\u5b58\u53d6\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\uff0c\u5728\u5b58\u53d6\u8fc7\u7a0b\u4e2d\uff0c\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\uff0c\u4e71\u7801\u95ee\u9898\u5c31\u89e3\u51b3\uff0c\u5185\u5b58\u6ea2\u51fa\u7684\u60c5\u51b5\u51fa\u73b0\u4e86\u4e8c\u4e09\u6b21\u5c31\u6ca1\u6709\u518d\u590d\u73b0\u3002\n\u4f46\u662f...\n\u65b0\u7684\u4e71\u7801\u95ee\u9898\u51fa\u73b0\u4e86\uff1a\n\u8fd8\u662f\u628alist\u8f6c\u6362\u6210string\uff0c\u53ea\u662f\u8fd9\u6b21list\u91cc\u9762\u653e\u7f6e\u7684\u6570\u636e\u4e0d\u540c\nprivate List<List<HashMap<String, Object>>> logs\uff08\u5f85\u8f6c\u6362\u6570\u636e\uff09\n\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u6309\u7167\u4e0a\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u7684\u65b9\u6cd5(\u4e00\u4e2a\u53c2\u6570\u7684\u4e5f\u6709\u8bd5)\nString arrayString = JSON.toJSONString(logs, SerializerFeature.DisableCircularReferenceDetect);\n\u8fd9\u6b21\u8f6c\u6362\u540e\u7684\u6570\u636e\uff0c\u6211\u76f4\u63a5\u7684\u6253\u5370\u7684\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u7684\u5904\u7406\uff0c\u4f1a\u6709\u90e8\u5206\u7684\u4e2d\u6587\u4e71\u7801\u3002\n\u4e2d\u95f4\u4e5f\u5c1d\u8bd5\u4e86\u5c06\u8f6c\u6362\u540e\u7684string\u91cd\u65b0\u7f16\u7801\uff0c\u4f46\u662f\u6548\u679c\u4f9d\u65e7\u3002\n\u7ecf\u8fc7\u591a\u6b21\u5c1d\u8bd5\uff0c\u4e71\u7801\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a\n1\u3001\u53ea\u6709\u5728\u5f85\u8f6c\u6570\u636e\u4e2d\u6709\u4e2d\u6587\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u4e71\u7801\n2\u3001\u5f85\u8f6c\u6570\u636e\u91cf\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4f1a\u51fa\u73b0\u4e2a\u522b\u7684\u4e2d\u6587\u4e71\u7801\uff08\u5177\u4f53\u7684\u6570\u91cf\u6211\u4e5f\u8bf4\u4e0d\u51c6\uff0c\u5927\u6982\u7684\u5c31\u662f\u5f53\u96c6\u5408\u4e2d\u7684\u6570\u636e\u5927\u4e8e200+\u6761\u5de6\u53f3\u5c31\u4f1a\u51fa\u73b0\uff09\n3\u3001\u4e71\u7801\u7684\u4e2d\u6587\u5b57\u7b26\u4e0d\u56fa\u5b9a\uff0c\u6bd4\u8f83\u968f\u673a\n\u4ee5\u4e0b\u662f\u4ece\u8f6c\u6362\u597d\u7684\u6570\u636e\u4e2d\u627e\u5230\u7684\u4e71\u7801\u4e2a\u4f8b\n{\"from\":\"\u5b66\ufffd\ufffd\ufffd\u51c6\u5907\",\"x\":\"31103\",\"xx\":\"1510799265216\",\"xxx\":\"48848\",\"xxxx\":\"\"}\n{\"from\":\"\ufffd\ufffd\ufffd\u751f\ufffd\ufffd\ufffd\u5907\",\"x\":\"31102\",\"xx\":\"1510799265216\",\"xxx\":\"5075\",\"xxxx\":[\"2X1\",\"2X2\",\"2X3\",\"2X4\"]}\n{\"from\":\"\u8bfe\u5802\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u5165\",\"x\":\"21102\",\"xx\":\"1510799210682\",\"xxx\":\"44959\",\"xxxx\":[\"2X1\",\"2X4\",\"2X6\",\"2X7\"]}. @wenshao \n\u6e29\u5c11\u80fd\u5426\u7ed9\u4ee5\u4e0a\u63cf\u8ff0\u7684\u95ee\u9898\u7ed9\u70b9\u6307\u70b9\uff0c\u6c34\u5e73\u6709\u9650\uff0c\u770b\u6e90\u7801\u4e5f\u662f\u4e00\u77e5\u534a\u89e3\uff0c\u867d\u7136\u73b0\u5728\u5df2\u7ecf\u7528\u6570\u5b57\u66ff\u4ee3\u4e86\u4e2d\u6587\u5b57\u7b26\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u4ee5\u540e\u96be\u514d\u8fd8\u662f\u4f1a\u51fa\u73b0\u6709\u4e2d\u6587\u5b57\u7b26\u7684\u60c5\u51b5\uff0c\u5e0c\u671b\u60a8\u80fd\u62bd\u7a7a\u770b\u4e00\u4e0b\uff0c\u7ed9\u4e2a\u89e3\u51b3\u601d\u8def\uff0c\u611f\u8c22.. ",
    "kid1412z": "\u591a\u8c22. ",
    "mliu111477": "UseISO8601DateFormat\u8fd9\u79cd\u683c\u5f0f\u5e94\u8be5\u662f\u4e0b\u9762\u8fd9\u79cd\u7684pattern(\"yyyy-MM-dd'T'HH:mm:ssXXX)\uff0c\u4f46\u662f\u8fd9\u91cc\u7f3a\u5c11\u4e86\u65f6\u5206\u79d2\u7684\u4fe1\u606f\u8f93\u51fa\u3002. ",
    "xingguang2013": "@wenshao \u76ee\u524d\u5c31\u662f\u7528\u7684\u6700\u65b0\u7248\u672c1.2.40. @duqicauc  \u4e4b\u524d\u6000\u7591\u8fc7\uff0cweblogic.xml\u52a0\u4e0a<prefer-web-inf-classes>true</prefer-web-inf-classes>\u4e5f\u662f\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u6709\u628afastjson\u5305\u53bb\u6389\u5c31\u597d\u4e86. \u4ece\u5f02\u5e38\u4fe1\u606f\u53ef\u4ee5\u770b\u51fa\u662fweblogic \u626b\u63cf\u5230\u4e86 com.alibaba.fastjson.support.jaxrs\u5305\u4ee5\u53cacom.alibaba.fastjson.support.jaxrs.FastJsonProvider\uff0c\u5bfc\u81f4\u51fa\u73b0\u7684\u95ee\u9898\n\u9a8c\u8bc1\uff1a\u5c06fastjson.jar\u5305\u4e2d\u7684com.alibaba.fastjson.support.jaxrs\u5305\u5220\u9664\u5373\u53ef\u89e3\u51b3\u95ee\u9898. @VictorZeng  \u60a8\u597d\uff0c\u6211\u7684web\u5e94\u7528\u662f\u6ca1\u6709\u7528\u5230jersey\u7684\u3002\u6309\u7167\u60a8\u8bf4\u7684\uff0c\u6211\u5728web.xml\u7684listener\u4e2d\u914d\u7f6e\u4e86FastJsonAutoDiscoverable.autoDiscover = false;\uff0c\u4f46\u8fd8\u662f\u4e0d\u53ef\u4ee5\u3002\u4e0d\u884c\u7684\u8bdd\uff0c\u5148\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\uff0c\u6253\u51fa\u7684war\u5305\u5220\u9664fastjson.jar\u4e2d\u7684com.alibaba.fastjson.support.jaxrs\u5305\u3002\u8c22\u8c22\u60a8. @VictorZeng   \u8c22\u8c22\u60a8\u63d0\u4f9b\u7684\u601d\u8def. @kimmking \u6211\u8fd8\u5728\u67e5\u627e\u914d\u7f6ejersey.config.disableAutoDiscovery\u7684\u5b98\u65b9\u8bf4\u660e\u4ee5\u53ca\u65b9\u5f0f\uff0c\u611f\u8c22\u60a8\u63d0\u4f9b\u7684\u5efa\u8bae. \u611f\u8c22\u5404\u4f4d\uff0c\u5df2\u5728weblogic\u5b98\u7f51https://docs.oracle.com/middleware/12213/wls/RESTF/intro-restful-service.htm\u627e\u5230\u76f8\u5173\u914d\u7f6e\u4fe1\u606f\n\nThe JAX-RS provides support for creating web services according to REST architectural style. JAX-RS uses annotations to simplify the development of RESTful web services. By simply adding annotations to your web service, you can define the resources and the actions that can be performed on those resources. JAX-RS is part of the Java EE 7 full profile, and is integrated with Contexts and Dependency Injection (CDI) for the Java EE Platform (CDI), Enterprise JavaBeans (EJB) technology, and Java Servlet technology.\n\n\u6b63\u5982\u540c@kimmking \u6240\u8bb2\u7684\u3002https://jersey.github.io/documentation/latest/deployment.html#deployment.autodiscoverable\uff0c\u4e0d\u8fc7\u5c1d\u8bd5\u4e86\u5404\u79cd\u914d\u7f6e\u65b9\u5f0f\uff0c\u90fd\u65e0\u6cd5\u6709\u6548\u7684\u8ba9weblogic\u83b7\u53d6\u5230jersey.config.disableAutoDiscovery\u4e3afalse\u7684\u8bbe\u7f6e\u3002\u76ee\u524d\u8fd8\u662f\u7528\u5220\u9664fastjson\u7684com.alibaba.fastjson.support.jaxrs\u5305\u65b9\u5f0f\u89e3\u51b3\u7684\u3002\n. ",
    "doinfi": "\u660e\u767d\u4e86\uff0c\u8c22\u8c22. ",
    "longzl2015": "\u989d\u3002\u3002\u3002\u3002\n\u76ee\u524d\u7684\u5de5\u7a0b\u662f\u8fd9\u6837\u7684\uff0c\u524d\u7aef\u5141\u8bb8\u7528\u6237\u4e0a\u4f20 gbk\u548cutf8\u7684\u6587\u4ef6\uff0c\u4f46\u7528\u6237\u7ecf\u5e38\u4f1a\u628agbk\u6587\u4ef6\u5f53\u6210utf8\u6587\u4ef6\u4e0a\u4f20\u3002\u6240\u4ee5\u51fa\u73b0\u4e86 it = FileUtils.lineIterator(csvFile, \"UTF-8\")\u8fd9\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u5bfc\u81f4fastjson\u51fa\u73b0\u4e86MalformedInputException. \u597d\u5427. ",
    "gam2046": "Thanks for your response.\nBut I've tried using the 1.1.67.android version, and it's still the same problem\nData Class\nkotlin\ndata class JsonBean(val signature: String, val list: List<Lists>)\ndata class Lists(val name: String)\nTest code\n```kotlin\n        val jsonString = \"\"\"\n        {\n          \"signature\": \"8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918\",\n          \"lists\": [\n            {\n                \"name\":\"aaa\"\n            },{\n                \"name\":\"bbb\"\n            }\n          ]\n        }\n        \"\"\"\n    try {\n        val jsonObject = JSON.parseObject(jsonString, JsonBean::class.javaObjectType)\n        println(jsonObject)\n    } catch (e: java.lang.Exception) {\n        Log.e(\"fastjson.test\", e)\n    }\n\n```\nException\ncom.alibaba.fastjson.JSONException: default constructor not found. class .JsonBean\n   at com.alibaba.fastjson.parser.JavaBeanInfo.build(JavaBeanInfo.java:496)\n   at com.alibaba.fastjson.parser.JavaBeanDeserializer.<init>(JavaBeanDeserializer.java:35)\n   at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:229)\n   at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:148)\n   at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:683)\n   at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:659)\n   at com.alibaba.fastjson.JSON.parseObject(JSON.java:238)\n   at com.alibaba.fastjson.JSON.parseObject(JSON.java:210)\n   at com.alibaba.fastjson.JSON.parseObject(JSON.java:169)\n   at com.alibaba.fastjson.JSON.parseObject(JSON.java:278)\nTarget Device\nAndroid 4.4 API 19. @wenshao  the same issue. ",
    "paulhsu": "Please also check JSON.toJavaObject(Class clazz)\nI got the same error on 1.1.67.android\n. thank you so much. @wenshao  thanks, how about the android version?. ",
    "forest-yang": "I am using Springboot 2.1.1, fastjson 1.2.54,  Kotlin 1.3.11, the problem exists as well.\nStackoverflow link\nPS: when I use gson instead, it works.\n/* it will throw exception\n        val state = JSON.parseObject(s, StatesMessage::class.java)\n        */\n        val state = Gson().fromJson(s, StatesMessage::class.java)\n        logger.info(state.states.x)\n        logger.info(state.states.y)\n. ",
    "wolfhan": "Try this. ",
    "seanlees": "SerializerFeature.MapSortField \u5c31\u53ef\u4ee5\u4e86\uff0c\u5c31\u662f\u8001\u7248\u672c\u6ca1\u8fd9\u4e2a\u3002 SerializerFeature.SortField\u4f3c\u4e4e\u53ea\u80fd\u5bf9\u5b9e\u4f53\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f\uff1f . ",
    "duxinglangzi": "@kimmking  \u597d\u7684. ",
    "Caratacus": "@wenshao @duxinglangzi \n\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u5728\u6700\u65b0\u7248\u672c1.2.49\u590d\u73b0\n            if (format == null) {\n\n                if ((features & mask) != 0 || serializer.isEnabled(SerializerFeature.UseISO8601DateFormat)) {\n                    format = formatter_iso8601_pattern;\n                } else {\n                    int nano = dateTime.getNano();\n                    if (nano == 0) {\n                        format = formatter_iso8601_pattern;\n                    } else if (nano % 1000000 == 0) {\n                        format = formatter_iso8601_pattern_23;\n                    } else {\n                        format = formatter_iso8601_pattern_29;\n                    }\n                }\n            }\n\n            if (format != null) {\n                write(out, dateTime, format);\n            } else if (out.isEnabled(SerializerFeature.WriteDateUseDateFormat)) {\n                //\u4f7f\u7528\u56fa\u5b9a\u683c\u5f0f\u8f6c\u5316\u65f6\u95f4\n                write(out, dateTime, JSON.DEFFAULT_DATE_FORMAT);\n            } else {\n                out.writeLong(dateTime.atZone(JSON.defaultTimeZone.toZoneId()).toInstant().toEpochMilli());\n            }\n        }\n\n\u5728format\u7b49\u4e8enull\u7684\u65f6\u5019,\u7ecf\u8fc7\u4e0b\u5217\u4ee3\u7801\u903b\u8f91\u5f97\u77e5 format\u6c38\u8fdc\u4e0d\u4e3a\u7a7a\nout.writeLong(dateTime.atZone(JSON.defaultTimeZone.toZoneId()).toInstant().toEpochMilli()); \n\u8fd9\u6bb5\u4ee3\u7801\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c,\u671b\u4fee\u6b63. ",
    "shiluming": "ths. ",
    "suanping": "\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u662fbug\u4e48\u3002\u6709\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u5efa\u8bae\uff01\uff01. ",
    "gocreater": "\u56e0\u4e3a\u5b9e\u4f53\u88ab\u6df7\u6dc6\u4e86. ",
    "bwzhny": "\u52a0\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u5373\u53ef. \n\n. \n. ",
    "sweet2o09": "ContradictionDetailBean$DataBean\n\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898,\u5728\u7c7b\u91cc\u9762\u5982\u679c\u8fd8\u5305\u542b\u4e00\u4e2a\u7c7b\u7684\u8bdd,\u5185\u90e8\u7c7b\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u51fd\u6570,\u4e0d\u7136\u7684\u8bdd\u5c31\u4f1a\u62a5\u8fd9\u4e2a\u9519\u8bef @wenshao @bwzhny \u8fd9\u4e2a\u5e94\u8be5\u53ef\u4ee5\u4f18\u5316\u7684\u628a...\n\u4f7f\u7528\u7248\u672c\uff1a 'com.alibaba:fastjson:1.1.67.android'\nGson\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898.....\u4e0d\u8fc7\u6211\u8fd8\u662f\u559c\u6b22\u7528\u56fd\u5185\u7684. import com.chad.library.adapter.base.entity.MultiItemEntity;\npublic class ShopBean implements Serializable {\n   ...\nprivate List  dataList;\npublic class ItemBean implements MultiItemEntity, Serializable {\n}\n}\n@wenshao . JSON.parseObject(json, ShopBean .class)\u5c31\u4f1a\u63d0\u793adefault constructor not found. \u6211\u53d1\u73b0\u4e86\u95ee\u9898\u6240\u5728\u4e86,\u6211\u8fd9\u8fb9\u662f\u5728ItemBean\u91cc\u9762\u521b\u5efa\u4e86\u4e00\u4e2a\u4f20\u53c2\u7684\u6784\u9020\u51fd\u6570,\u5bfc\u81f4\u7684default constructor not found,\u5982\u679c\u6211\u4e0d\u521b\u5efa\u6784\u9020\u51fd\u6570\u6216\u8005\u662f\u591a\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u51fd\u6570,\u90fd\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u4e86\n```\npublic class ItemBean implements MultiItemEntity, Serializable {\n    public ItemBean (int itemType) {\n            this.itemType = itemType;\n        }\n}\n````\n\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7b97\u4e0d\u7b97bug\n@wenshao . ",
    "crisLotus": "@sweet2o09 \u8bf7\u95ee\u60a8\u9047\u5230\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f\n\u6211\u8fd9\u8fb9\u4e5f\u9047\u5230\u5185\u90e8\u7c7b\u4e2d\u5b58\u5728\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5bfc\u81f4default constructor not found\n\u9519\u8bef\u65e5\u5fd7\uff1a\ncom.alibaba.fastjson.JSONException: default constructor not found. class java.util.Collections$UnmodifiableMap\n    at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:467)\n    at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:213)\n. ",
    "KingLanding94": "\u62a5\u9519\u65f6\u4f7f\u7528\u7684\u662f fastjson:1.1.67.android\n\u6539\u6210 fastjson:1.2.41 \u7a0b\u5e8f\u5c31\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u4e86\u3002. ",
    "Moyuchen": "\u89e3\u51b3\u4e86\uff0c\u52a0\u4e00\u884ccompile \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\uff0c\u4f7f\u7528\u7684\u65f61.2.54. ",
    "netbuffer": "@wenshao  \u8bd5\u4e86\u4e0b\u529f\u80fd\u6ca1\u95ee\u9898\uff0c\u5c31\u662f\u7528\u8d77\u6765\u4e0d\u592a\u8212\u670d\uff0c\u6574\u5408spring mvc\u5f00\u53d1\u65f6\u5019\uff0c\u5728\u63a7\u5236\u5668\u8f93\u51fajson\u89c6\u56fe\u7684\u65f6\u5019\u5982\u679c\u80fd\u50cfjackson\u7684@JsonView(xxx.class) \u53ef\u4ee5\u58f0\u660e\u5c31\u65b9\u4fbf\u5f88\u591a\u4e86. ",
    "chenzz": "\u4e3a\u5565\u63cf\u8ff0\u4e2d\u7684\u7528\u6cd5\u4e0d\u884c\u5462\uff1f. 666. ",
    "richardxx": "\u963f\u91cc\u5927\u795e\u4eec\u9ebb\u70e6\u62bd\u7a7a\u770b\u770b\uff0c\u591a\u8c22\uff01 \n. ",
    "chinasteel": "\n\u8d5e\u4e00\u4e2a\u5bb9\u9519\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e0d\u662f\u53ef\u4ee5\u6253\u4e00\u4e2aWARN\u51fa\u6765\u5462\u3002. ",
    "mengfan-mm": "\u5bb9\u9519\u662f\u597d\u4e8b\uff0c\u4f46\u662f\u9519\u8bef\u7684json\u5c31\u662f\u9519\u8bef\u7684\uff0c\u6211\u8981\u505ajson\u6821\u9a8c\u7684\u8bdd\uff0c\u6ca1\u6709\u4efb\u4f55\u5f02\u5e38\u4fe1\u606f\uff0c\u6211\u4f1a\u8ba4\u4e3a\u4ed6\u662f\u5bf9\u7684\uff0c\u6240\u4ee5\u5728\u80fd\u5bb9\u9519\u7684\u60c5\u51b5\u4e0b\u628a\u9519\u8bef\u4fe1\u606f\u6253\u51fa\u6765\u4e0d\u662f\u66f4\u597d\u3002. \u6211\u662f\u53d1\u73b0\u7528\u5728\u7ebf\u7684json\u6821\u9a8c\u5de5\u5177\u548cGson\u8f6c\u6362\u90fd\u4e0d\u80fd\u901a\u8fc7\u624d\u63d0\u51fa\u6765\u7684\u3002. ",
    "buzhidaowenwen": "\u8fd9\u662f\u8c03\u7528\u94fe\u548c\u5185\u5b58\u5f53\u65f6\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981dump\u6587\u4ef6\u4fe1\u606f\uff0c\u624d\u80fd\u66f4\u597d\u7684\u5b9a\u4f4d\u95ee\u9898\u4e48\uff1f\n\n\n. \u5982\u679c\u662fmem leak \u5e94\u8be5\u4f1a\u662fjvm\u62a5oom\u7684\u95ee\u9898\uff0c\u5f53\u524d\u662f\u76f4\u63a5crash\u6389\u3002\u5982\u4e0b\u6709\u7cfb\u7edf\u5f53\u524d\u7684\u5185\u5b58\u548cjvm\u5185\u5b58\u914d\u7f6e\u4ee5\u53cagc\u60c5\u51b5\u3002\n\n\n\n. ",
    "DreamXiao": "\u540c\u95ee \u90fd\u6ca1\u4eba\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f. \u540c\u95ee \u90fd\u6ca1\u4eba\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f. \u540c\u95ee\uff0c\u56f0\u6270\u5f88\u4e45\u4e86\u3002\u6211\u662f\u96c6\u6210\u7684spring-data-redis.\u4e5f\u662f\u4f7f\u7528\u7684FastJsonRedisSerializer\u5e8f\u5217\u5316\u3002\n\n\u5b58\u8fdbredis\u7684\u65f6\u5019\u5e8f\u5217\u5316\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u5b58\u7684\u4e5f\u662fjson\u683c\u5f0f\u3002\n\n\n\n\n\u540c\u6837\u7684\u6211\u7528opsForList\u83b7\u53d6\u5217\u8868\u597d\u50cf\u5c31\u6ca1\u4ec0\u4e48\u8f6c\u6362\u7684\u95ee\u9898\u3002\n\u4f7f\u7528opsForValue\u83b7\u53d6\u5b58\u8fdb\u53bb\u7684\u5bf9\u8c61\u5c31\u4f1a\u62a5\u9519ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to XXX\u3002\n\u83ab\u540d\u5176\u5999\u7684 \u4e00\u76f4\u7591\u95ee \u90fd\u5feb\u653e\u5f03\u4f7f\u7528FastJsonRedisSerializer\u4e86\u3002\u7f51\u4e0a\u4e5f\u4e00\u76f4\u627e\u4e0d\u5230\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u770bgit\u597d\u50cf\u4e5f\u6ca1\u4eba\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e5f\u4e0d\u60f3\u50cf\u7f51\u4e0a\u522b\u4eba\u8bf4\u7684\u90a3\u6837\u53bb\u624b\u52a8\u5199\u4e00\u4e2aFastJsonRedisSerializer\u7684serialize\u548cdeserialize\u65b9\u6cd5\u3002\u6211\u770b\u73b0\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u5c31\u60f3\u76f4\u63a5\u7528\u7684\u3002\u6211fastjson\u7684\u7248\u672c\u662f1.2.51\n. \u540c\u95ee\uff0c\u56f0\u6270\u5f88\u4e45\u4e86\u3002\u6211\u662f\u96c6\u6210\u7684spring-data-redis.\u4e5f\u662f\u4f7f\u7528\u7684FastJsonRedisSerializer\u5e8f\u5217\u5316\u3002\n\n\u5b58\u8fdbredis\u7684\u65f6\u5019\u5e8f\u5217\u5316\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u5b58\u7684\u4e5f\u662fjson\u683c\u5f0f\u3002\n\n\n\n\n\u540c\u6837\u7684\u6211\u7528opsForList\u83b7\u53d6\u5217\u8868\u597d\u50cf\u5c31\u6ca1\u4ec0\u4e48\u8f6c\u6362\u7684\u95ee\u9898\u3002\n\u4f7f\u7528opsForValue\u83b7\u53d6\u5b58\u8fdb\u53bb\u7684\u5bf9\u8c61\u5c31\u4f1a\u62a5\u9519ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to XXX\u3002\n\u83ab\u540d\u5176\u5999\u7684 \u4e00\u76f4\u7591\u95ee \u90fd\u5feb\u653e\u5f03\u4f7f\u7528FastJsonRedisSerializer\u4e86\u3002\u7f51\u4e0a\u4e5f\u4e00\u76f4\u627e\u4e0d\u5230\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u770bgit\u597d\u50cf\u4e5f\u6ca1\u4eba\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e5f\u4e0d\u60f3\u50cf\u7f51\u4e0a\u522b\u4eba\u8bf4\u7684\u90a3\u6837\u53bb\u624b\u52a8\u5199\u4e00\u4e2aFastJsonRedisSerializer\u7684serialize\u548cdeserialize\u65b9\u6cd5\u3002\u6211\u770b\u73b0\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u5c31\u60f3\u76f4\u63a5\u7528\u7684\u3002\u6211fastjson\u7684\u7248\u672c\u662f1.2.51\n. https://github.com/alibaba/fastjson/issues/2083#issuecomment-427728000\n\u8fd9\u4e2a\u56de\u7b54\u91cc\u9762\u63d0\u5230FastJsonRedisSerializer\u53cd\u5e8f\u5217\u5316\u8fc7\u6765\u5bf9\u8c61\u4e3aJSONObject\uff0c\u5efa\u8bae\u4f60\u81ea\u5df1\u518d\u8f6c\u6362\u4e00\u6b21\n\u4f46\u662f\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u4e0d\u662f\u5df2\u7ecf\u6709\u6cdb\u578b\u4e86\uff1f\u4e3a\u4ec0\u4e48\u8fd8\u8981\u518d\u91cd\u590d\u7684\u8f6c\u6362\u4e00\u6b21\u5462\uff1f\u5b98\u65b9\u90fd\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f. https://github.com/alibaba/fastjson/issues/2083#issuecomment-427728000\n\u8fd9\u4e2a\u56de\u7b54\u91cc\u9762\u63d0\u5230FastJsonRedisSerializer\u53cd\u5e8f\u5217\u5316\u8fc7\u6765\u5bf9\u8c61\u4e3aJSONObject\uff0c\u5efa\u8bae\u4f60\u81ea\u5df1\u518d\u8f6c\u6362\u4e00\u6b21\n\u4f46\u662f\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u4e0d\u662f\u5df2\u7ecf\u6709\u6cdb\u578b\u4e86\uff1f\u4e3a\u4ec0\u4e48\u8fd8\u8981\u518d\u91cd\u590d\u7684\u8f6c\u6362\u4e00\u6b21\u5462\uff1f\u5b98\u65b9\u90fd\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f. \u4e0a\u9762\u5e8f\u5217\u5316\u540e\u51fa\u73b0@Type\u662f\u56e0\u4e3a\u6211\u7528\u7f51\u4e0a\u7684\u65b9\u6cd5\u624b\u52a8\u5b9e\u73b0\u4e86serialize\u548cdeserialize\u65b9\u6cd5\n\u5982\u679c\u7528fastjson\u9ed8\u8ba4\u7684\u65b9\u6cd5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u662f\u6ca1\u6709\u8fd9\u4e2a@Type\u7684\u3002. \u4e0a\u9762\u5e8f\u5217\u5316\u540e\u51fa\u73b0@Type\u662f\u56e0\u4e3a\u6211\u7528\u7f51\u4e0a\u7684\u65b9\u6cd5\u624b\u52a8\u5b9e\u73b0\u4e86serialize\u548cdeserialize\u65b9\u6cd5\n\u5982\u679c\u7528fastjson\u9ed8\u8ba4\u7684\u65b9\u6cd5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u662f\u6ca1\u6709\u8fd9\u4e2a@Type\u7684\u3002. \u6d4b\u8bd5\u4e86\u51e0\u6b21 \u597d\u50cf\u7528GenericFastJsonRedisSerializer\u53ef\u4ee5\u6b63\u5e38\u5e8f\u5217\u5316\u8ddf\u53cd\u5e8f\u5217\u5316 \u4f1a\u628a@Type\u5199\u5165\u3002\u4f46\u662f\u683c\u5f0f\u4e0a\u4e0d\u5982GenericJackson2JsonRedisSerializer,\u6709class\u7c7b\u578b \u5b57\u6bb5\u4e5f\u662f\u6709\u5e8f\u7684\u3002GenericFastJsonRedisSerializer\u5982\u679c\u6709Double\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u4e0d\u80fd\u6309\u7167json\u683c\u5f0f\u5316\uff0c\u56e0\u4e3a\u6570\u5b57\u540e\u6709D\u3002\u4f46\u662f\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u3002. \u6d4b\u8bd5\u4e86\u51e0\u6b21 \u597d\u50cf\u7528GenericFastJsonRedisSerializer\u53ef\u4ee5\u6b63\u5e38\u5e8f\u5217\u5316\u8ddf\u53cd\u5e8f\u5217\u5316 \u4f1a\u628a@Type\u5199\u5165\u3002\u4f46\u662f\u683c\u5f0f\u4e0a\u4e0d\u5982GenericJackson2JsonRedisSerializer,\u6709class\u7c7b\u578b \u5b57\u6bb5\u4e5f\u662f\u6709\u5e8f\u7684\u3002GenericFastJsonRedisSerializer\u5982\u679c\u6709Double\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u4e0d\u80fd\u6309\u7167json\u683c\u5f0f\u5316\uff0c\u56e0\u4e3a\u6570\u5b57\u540e\u6709D\u3002\u4f46\u662f\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u3002. \n\u83b7\u53d6\u5217\u8868\u6570\u636e\u5e26\u6cdb\u578b\u662fok\u7684  \u53ef\u4ee5\u76f4\u63a5\u8f6c\u6210\u5bf9\u8c61. \n\u83b7\u53d6\u5217\u8868\u6570\u636e\u5e26\u6cdb\u578b\u662fok\u7684  \u53ef\u4ee5\u76f4\u63a5\u8f6c\u6210\u5bf9\u8c61. \u4e0a\u9762\u5e8f\u5217\u5316\u540e\u51fa\u73b0@type\u662f\u56e0\u4e3a\u6211\u7528\u7f51\u4e0a\u7684\u65b9\u6cd5\u624b\u52a8\u5b9e\u73b0\u4e86serialize\u548cdeserialize\u65b9\u6cd5\n\u5982\u679c\u7528fastjson\u9ed8\u8ba4\u7684\u65b9\u6cd5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u662f\u6ca1\u6709\u8fd9\u4e2a@type\u7684\u3002\n\u6d4b\u8bd5\u4e86\u51e0\u6b21 \u597d\u50cf\u7528GenericFastJsonRedisSerializer\u53ef\u4ee5\u6b63\u5e38\u5e8f\u5217\u5316\u8ddf\u53cd\u5e8f\u5217\u5316 \u4f1a\u628a@type\u5199\u5165\u3002\u4f46\u662f\u683c\u5f0f\u4e0a\u4e0d\u5982GenericJackson2JsonRedisSerializer,\u6709class\u7c7b\u578b \u5b57\u6bb5\u4e5f\u662f\u6709\u5e8f\u7684\u3002GenericFastJsonRedisSerializer\u5982\u679c\u6709Double\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u4e0d\u80fd\u6309\u7167json\u683c\u5f0f\u5316\uff0c\u56e0\u4e3a\u6570\u5b57\u540e\u6709D\u3002\u4f46\u662f\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u3002. \u4e0a\u9762\u5e8f\u5217\u5316\u540e\u51fa\u73b0@type\u662f\u56e0\u4e3a\u6211\u7528\u7f51\u4e0a\u7684\u65b9\u6cd5\u624b\u52a8\u5b9e\u73b0\u4e86serialize\u548cdeserialize\u65b9\u6cd5\n\u5982\u679c\u7528fastjson\u9ed8\u8ba4\u7684\u65b9\u6cd5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u662f\u6ca1\u6709\u8fd9\u4e2a@type\u7684\u3002\n\u6d4b\u8bd5\u4e86\u51e0\u6b21 \u597d\u50cf\u7528GenericFastJsonRedisSerializer\u53ef\u4ee5\u6b63\u5e38\u5e8f\u5217\u5316\u8ddf\u53cd\u5e8f\u5217\u5316 \u4f1a\u628a@type\u5199\u5165\u3002\u4f46\u662f\u683c\u5f0f\u4e0a\u4e0d\u5982GenericJackson2JsonRedisSerializer,\u6709class\u7c7b\u578b \u5b57\u6bb5\u4e5f\u662f\u6709\u5e8f\u7684\u3002GenericFastJsonRedisSerializer\u5982\u679c\u6709Double\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u8bdd \u5e8f\u5217\u5316\u540e\u4e0d\u80fd\u6309\u7167json\u683c\u5f0f\u5316\uff0c\u56e0\u4e3a\u6570\u5b57\u540e\u6709D\u3002\u4f46\u662f\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u3002. @VictorZeng \u662f\u8fd9\u6837\u914d\u7f6e\u6ca1\u9519\u7684 \u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\u6211\u7684\u4ee3\u7801\u622a\u56fe \u5177\u4f53\u51e0\u79cd\u4e0d\u540c\u7684\u5e8f\u5217\u5316\u540e\u7684\u5b57\u7b26\u4e32\u5728\u4e0a\u9762\u8bc4\u8bba\u6211\u4e5f\u63d0\u4f9b\u4e86. @VictorZeng \u55ef\u55ef\u8c22\u8c22 \u770b\u8d77\u6765\u683c\u5f0f\u5316\u540e\u8fd8\u662fGenericJackson2JsonRedisSerializer\u8212\u670d \u4e0d\u8fc7\u53ef\u80fdfastjson\u6027\u80fd\u4f1a\u66f4\u4f18\u4e8eGenericJackson2JsonRedisSerializer\u5427\u3002. good. ",
    "haoxunwang": "\u622a\u53d6\u4e86fabric\u7ebf\u4e0a\u7684\uff0c\u9875\u9762\u5e76\u53d1\u8bf7\u6c42\u51e0\u4e2a\u63a5\u53e3\u5c31\u4f1a\u51fa\u73b0\uff0c\u73b0\u5728\u5728callback\u505a\u4e86try{}catch()\u5904\u7406\u4e86\nFatal Exception: java.lang.ClassCastException: com.guazi.crm.business.seller.model.CarSourceOptionModel cannot be cast to com.guazi.crm.business.seller.model.CarSourceListModel\n       at com.guazi.android.sales.base.vl.activity.CarSourceFragment$8.onChanged(CarSourceFragment.java:451)\n       at com.guazi.android.sales.base.vl.activity.CarSourceFragment$8.onChanged(CarSourceFragment.java:446)\n       at android.arch.lifecycle.LiveData.considerNotify(LiveData.java:131)\n       at android.arch.lifecycle.LiveData.dispatchingValue(LiveData.java:148)\n       at android.arch.lifecycle.LiveData.setValue(LiveData.java:294)\n       at android.arch.lifecycle.MutableLiveData.setValue(MutableLiveData.java:33)\n       at com.guazi.crm.business.common.source.CarSourceRepository$2.onSuccess(CarSourceRepository.java:49)\n       at com.guazi.crm.business.common.oknet.retrofitapi.base.ResponseCallback.onResponse(ResponseCallback.java:51)\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1$1.run(ExecutorCallAdapterFactory.java:68)\n       at android.os.Handler.handleCallback(Handler.java:743)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:150)\n       at android.app.ActivityThread.main(ActivityThread.java:5665)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:822)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:712). ",
    "jiahongfei": "\u6709\u89e3\u51b3\u529e\u6cd5\u5417. ",
    "JavaxinYao": "\u8fd9\u4e2a\u95ee\u9898\u6211\u5728\u5207\u9762\u4e2d\u53d6\u63a5\u53e3\u8bbf\u95ee\u53c2\u6570\u65f6\uff0c\u5f53\u5165\u53c2\u662fHttpServeletRequest\u65f6\u4e5f\u4f1a\u9047\u5230\n\u4ee3\u7801\u5982\u4e0b \n   \"\u8bbf\u95ee\u63a5\u53e3\u53c2\u6570:\" + JSONObject.toJSONString(joinPoint.getArgs()[i]). ",
    "ctykwz": "@JavaxinYao thx fro your comment. ",
    "objectboy2016": "@kimmking  \u60a8\u8bf4\u7684\u8fd9\u4e9b\u5176\u5b9e\u90fd\u5df2\u7ecf\u8bd5\u8fc7\u4e86, \u53ef\u80fd\u662f\u548cspringmvc\u6709\u4e00\u4e9b\u51b2\u7a81\u5427,    \u4e0d\u7ba1\u600e\u4e48\u8bbe\u7f6e,  \u5176\u5b9e\u6700\u597d\u8fd8\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u76f4\u63a5\u6709\u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f. @kimmking \u662f\u7684,   \u7f51\u9875\u4e0a\u53f3\u952e\uff0c\u7f16\u7801-\u9009\u62e9UTF-8.......      \u8fd9\u4e2a\u6211\u5df2\u7ecf\u8bd5\u8fc7\u5f88\u591a\u79cd\u53d8\u6cd5\u65b9\u5f0f\nso,  \u8fd9\u4e2a\u4e5f\u8bb8\u4e0d\u7b97\u662f\u4e00\u4e2a\u95ee\u9898\u5427. \u8bf7\u95ee\u8fd9\u662f\u4ec0\u4e48\u95ee\u9898. \u8bf7\u95ee\u8fd9\u662f\u4ec0\u4e48\u95ee\u9898. \u662f\u7684  \u6587\u6863\u4e71\u4e00b. > > \u4f60\u89e3\u51b3\u4e86\u5417\uff1f\u6211\u4eca\u5929\u4e5f\u9047\u5230\u4e86\uff0c\u5751\u6b7b\u6211\u4e86\n\n\u670d\u52a1\u8fd8\u672a\u5b8c\u5168\u542f\u52a8\u65f6\uff0cdubbo\u670d\u52a1\u5df2\u7ecf\u6ce8\u518c\u5230zk\u4e0a\uff0c\u5176\u5b83\u670d\u52a1\u4fbf\u8bf7\u6c42\u8fdb\u6765\u4e86\uff0c\u5bfc\u81f4\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f53\u88ab\u52a0\u8f7d\u5230\u7f13\u5b58\u4e2d(\u4ee3\u7801\u7f16\u5199\u4e0d\u89c4\u8303\uff0c\u6b64\u5b9e\u4f53\u4e0d\u5e94\u8be5\u7528\u5728rpc\u63a5\u53e3\u4e2d)\uff0c\u4ece\u800c\u5bfc\u81f4\u670d\u52a1\u540e\u7eed\u542f\u52a8\u52a0\u8f7d\u7684\u914d\u7f6e\u672a\u751f\u6548\uff0c\u56e0\u6b64\u6ce8\u518c\u767b\u5f55\u8fd4\u56de\u7684\u5b9e\u4f53\u91cc\u9762\u5728json\u5e8f\u5217\u8868\u5316\u540e\u9996\u5b57\u6bcd\u53d8\u6210\u5c0f\u5199\uff0c\u5751- =\n\n\u4e0d\u8981\u5168\u5c40\u8bbe\u7f6e ,  \u8fd8\u662f\u5355\u4e2a\u8bbe\u7f6e\u5427, \u4e00\u4e2a\u5c5e\u6027\u4e00\u4e2a\u5c5e\u6027\u7684\u8bbe\u7f6e, \u6ca1\u529e\u6cd5\u554a. ",
    "YoveeFisher": "\u7ee7\u627fParserConfig\u91cd\u8f7dgetDeserializer\u65b9\u6cd5\u8fd4\u56de\u81ea\u5df1\u5b9a\u4e49\u7c7b\u7684ObjectDeserializer. ",
    "jsuper1980": "# \u96c6\u6210 fastjson \u7684\u914d\u7f6e\u5982\u4e0b:\n@Configuration\npublic class WebMvcConfigurer extends WebMvcConfigurerAdapter {\n    ...\n    /\n     * \u4f7f\u7528 FastJson \u66ff\u6362 Jackson\n     \n     * @param converters\n     /\n    @Override\n    public void configureMessageConverters(List> converters) {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        FastJsonConfig config = new FastJsonConfig();\n        config.setSerializerFeatures(\n                SerializerFeature.DisableCircularReferenceDetect\n        );\n        converter.setFastJsonConfig(config);\n        converters.add(converter);\n        log.info(\"FastJSON enabled\");\n    }\n    ...\n}\n# /oauth/token \u83b7\u53d6\u5230\u7684\u62a5\u6587\u5982\u4e0b\uff08\u5176\u4e2d value \u5373\u662f access token\uff09:\n{\n    \"expiration\": 1513752144897,\n    \"expired\": false,\n    \"expiresIn\": 604799,\n    \"refreshToken\": {\n        \"expiration\": 1515739344897,\n        \"value\": \"dae50004-939c-40f2-98d8-4882374e08c7\"\n    },\n    \"scope\": [\n        \"api\"\n    ],\n    \"tokenType\": \"bearer\",\n    \"value\": \"1e2c4181-01be-4aa1-8042-c2d2f74008d0\"\n}\n# \u800c\u4e0d\u96c6\u6210 fastjson \u65f6\uff0c\u83b7\u53d6\u5230\u7684\u62a5\u6587\u5982\u4e0b\uff1a\n{\n    \"access_token\": \"d83156d4-cec3-4aa9-b9dc-78612ce3cd92\",\n    \"token_type\": \"bearer\",\n    \"refresh_token\": \"37d7638a-8ee2-4a74-8194-cf9673ab1689\",\n    \"expires_in\": 604799,\n    \"scope\": \"api\"\n}\n\u591a\u8c22\uff01. \u8c8c\u4f3c\u8fd8\u6ca1\u89e3\u51b3\uff0c\u5c31\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6362\u56de\u53bb\u7528 jackson \u4e86. ",
    "beykery": "\u8fd9\u4e2abug\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u76ee\u524d\u662f\u628aFastJsonHttpMessageConverter\u53bb\u6389\u4e86\u3002. \u4e0d\u5bf9\uff0c\u6211\u4ee3\u7801\u4e2d\u5e76\u672a\u8f93\u51fa\u5f15\u53f7\"\uff0c\u4f46\u662f\u8c03\u7528test\u540e\u8f93\u51fa\u7684\u5185\u5bb9\u5c31\u5305\u62ec\u5f15\u53f7\"\u3002. ",
    "javais": "\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f. ",
    "nwz5d": "\u6211\u8ddf\u4f60\u78b0\u5230\u7684\u95ee\u9898\u4e00\u6837 \u8bf7\u95ee\u4f60\u6700\u540e\u600e\u4e48\u89e3\u51b3\u7684.",
    "gatspy": "\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u600e\u4e48\u89e3\u51b3\u5462\uff1f \u73b0\u5728\u6211\u662f\u5728\u6bcf\u4e2aspring boot\u9879\u76ee\u7684\u542f\u52a8\u6587\u4ef6\u4e2d\u5355\u72ec\u8bbe\u7f6e\u3002. ",
    "FelixFly": "\u6211\u4e5f\u78b0\u5230\u8fd9\u7c7b\u95ee\u9898\uff0c\u6700\u540e\u901a\u8fc7fastjson \u81ea\u5b9a\u4e86\u4e00\u4e2aSerializeFilter\u8fdb\u884c\u5904\u7406DefaultOAuth2AccessToken\u7684\u5e8f\u5217\u5316\n```java\npublic class CustomSerializeFilter extends BeforeFilter implements PropertyPreFilter {\n@Override\npublic void writeBefore(Object object) {\n    /**\n     * DefaultOAuth2AccessToken \u9ed8\u8ba4\u683c\u5f0f\n     * {\n     *     \"access_token\": \"763d17ee-7847-4d8b-b3e8-207110d094c9\",\n     *     \"token_type\": \"bearer\",\n     *     \"refresh_token\": \"68d85c17-e817-4582-95dd-169dce4a3264\",\n     *     \"expires_in\": 7199,\n     *     \"scope\": \"read write\"\n     * }\n     */\n    if (object instanceof DefaultOAuth2AccessToken) {\n        DefaultOAuth2AccessToken accessToken = (DefaultOAuth2AccessToken) object;\n        writeKeyValue(\"access_token\", accessToken.getValue());\n        writeKeyValue(\"token_type\", accessToken.getTokenType());\n        writeKeyValue(\"refresh_token\", accessToken.getRefreshToken().getValue());\n        writeKeyValue(\"expires_in\", accessToken.getExpiresIn());\n        writeKeyValue(\"scope\", String.join(\" \", accessToken.getScope()));\n    }\n}\n\n\n@Override\npublic boolean apply(JSONSerializer serializer, Object object, String name) {\n    // DefaultOAuth2AccessToken\u3001DefaultExpiringOAuth2RefreshToken\n    // \u539f\u5148\u7684\u6240\u6709\u5c5e\u6027\u90fd\u4e0d\u8fdb\u884c\u5e8f\u5217\u5316\n    return !(object instanceof DefaultOAuth2AccessToken\n            || object instanceof DefaultExpiringOAuth2RefreshToken);\n}\n\n}\n```\nFastJsonHttpMessageConverter\u4e2d\u52a0\u5165\u81ea\u5b9a\u4e49\u7684SerializeFilter\n\u540e\u9762\u53c8\u53d1\u73b0FormOAuth2AccessTokenMessageConverter\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u52a0\u8fdb\u53bb\u6d4b\u8bd5\u4e00\u4e0b. ",
    "guacai": "\n\u7248\u672c\u662f\uff1a1.2.28\n. \u6211\u8fd9\u7248\u672c\u8fd8\u6ca1\u6709\u5347\u7ea7\u3002\u6211\u7684\u670d\u52a1\u662fspring cloud \u4f53\u7cfb \u4e4b\u95f4\u7684\u8c03\u7528\u90fd\u662feureka, \u4ece\u6570\u636e\u5e93\u67e5\u51fa\u7684\u6570\u636e\u76f4\u63a5\u8fd4\u56de\u5230\u4e86\u6211\u7684api\u5c42 \u4e2d\u95f4\u6ca1\u6709\u5b9a\u4e49\u5176\u4ed6\u7684\u6570\u636e\u683c\u5f0f\uff0c\u8fd4\u56de\u7684\u90fd\u662fobject\u3002\u73b0\u5728\u95ee\u9898\u89e3\u51b3\u4e86\uff1a\u8c03\u7528\u94fe\u76f4\u63a5\u516c\u7528\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u8fd4\u56de\u7ed3\u679c\u7533\u660e\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\u4f46\u662f\u4e5f\u4e0d\u77e5\u9053\u5177\u4f53\u539f\u56e0\u95ee\u9898,\u6709\u65f6\u95f4\u770b\u770b\u6e90\u7801\u3002. ",
    "dk-star": "\u5d4c\u5957\u652f\u6301\u6709\u95ee\u9898. ",
    "UncleClover": "\u66ae\u7136\u56de\u9996\u770b\u5230\u4e86\u8fd9\u4e2a\uff1a\nhttps://github.com/alibaba/fastjson/issues/569. \u8fd9\u4e2a\u95ee\u9898\u548c\u95ee\u9898https://github.com/alibaba/fastjson/issues/569 \u5e76\u4e0d\u4e00\u6837\u3002\n\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f7f\u7528new TypeReference<?>() {}\u5373\u53ef\u3002\n\u5bfc\u81f4\u8fd9\u4e00\u95ee\u9898\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u540c\u4e00\u5757\u4ee3\u7801\u5904\u7406\u4e86\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6240\u4ee5\u6ca1\u6709\u4f7f\u7528new TypeReference<?>() {}\u3002\u56fe\u7701\u4e8b\uff0c\u8fde\u7eed\u4e24\u6b21\u53cd\u5e8f\u5217\u5316\u5bfc\u81f4bug\u51fa\u73b0\u3002. ",
    "logow": "\u4eca\u5929\u4e5f\u9047\u5230\u4e86\u6b64\u95ee\u9898\uff0c\u7528\u7684\u662f1.2.28\u7248\u672c\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684debug\uff0c\u627e\u5230\u4e86\u539f\u56e0\uff0c\u51c6\u5907\u63d0\u4ea4 issue \u4e86\uff0c\u53d1\u73b0\u65b0\u7248\u672c\u5df2\u4fee\u590d\u4e86\u3002. \u4eca\u5929\u4e5f\u9047\u5230\u4e86\u6b64\u95ee\u9898\uff0c\u7528\u7684\u662f1.2.28\u7248\u672c\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684debug\uff0c\u627e\u5230\u4e86\u539f\u56e0\uff0c\u51c6\u5907\u63d0\u4ea4 issue \u4e86\uff0c\u53d1\u73b0\u65b0\u7248\u672c\u5df2\u4fee\u590d\u4e86\u3002. ",
    "sxc9870": "\u662feclipse\u95ee\u9898,\u5173\u95ed\u4e86. \u662feclipse\u95ee\u9898,\u5173\u95ed\u4e86. ",
    "ok406lhq": "\uff1f. \uff1f. ",
    "DuLerWeil": "\u8fd9\u3002\u3002\u3002\u52a8\u4f5c\u795e\u901f. \u8fd9\u3002\u3002\u3002\u52a8\u4f5c\u795e\u901f. @wenshao wiki\u7248\u672c\u8c8c\u4f3c\u5e94\u8be5\u6539\u62101.2.44\u5f00\u59cb\u652f\u6301. @wenshao wiki\u7248\u672c\u8c8c\u4f3c\u5e94\u8be5\u6539\u62101.2.44\u5f00\u59cb\u652f\u6301. \u8bd5\u4e86\u4e0b\uff0c\u6709\u70b9\u70b9\u522b\u626d\u3002\u671f\u671b\u6709\u4e0b\u9762\u8fd9\u6837\u7684\u5199\u6cd5\u3002\n\u6211\u7814\u7a76\u4e0b\u6e90\u7801\uff0c\u770b\u80fd\u5426\u63d0PR\u51fa\u70b9\u529b\u3002\n\n. \u8bd5\u4e86\u4e0b\uff0c\u6709\u70b9\u70b9\u522b\u626d\u3002\u671f\u671b\u6709\u4e0b\u9762\u8fd9\u6837\u7684\u5199\u6cd5\u3002\n\u6211\u7814\u7a76\u4e0b\u6e90\u7801\uff0c\u770b\u80fd\u5426\u63d0PR\u51fa\u70b9\u529b\u3002\n\n. ",
    "nothingkill": "\u53d1\u73b0\u662f\u4f7f\u7528kotlin\u5bfc\u81f4\u7684. \u53d1\u73b0\u662f\u4f7f\u7528kotlin\u5bfc\u81f4\u7684. ",
    "programdolt": "\u6211\u73b0\u5728\u4e5f\u6709\u7c7b\u4f3c\u95ee\u9898\uff0c  @VictorZeng  \uff0c @jarvan4dev \u8fd9\u4e2a\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u6837\nJSONObject map = new JSONObject();\n        JSONObject o = null;\n        map.put(\"a\",o);\n        String s = null;\n        map.put(\"s\",s);\n        Integer i = null;\n        map.put(\"i\",i);\n        System.out.println(JSON.toJSONString(map, SerializerFeature.WriteNullNumberAsZero));\n\u8f93\u51fa\uff0c{\"a\":null,\"s\":null,\"i\":null}\n\u73b0\u5728\u53ea\u8981\u540e\u9762\u7684SerializerFeature \u53ea\u8981\u58f0\u660e\u4e86\u4e00\u4e2a NULL\u7684\u679a\u4e3e\uff0c\u4f8b\u5982WriteNullNumberAsZero \u6216 SerializerFeature.WriteNullStringAsEmpty\u7b49\uff0c\u90a3\u6240\u6709NULL\u76f8\u5173\u7684\u679a\u4e3e\uff0c\u5c31\u90fd\u751f\u6548\u4e86. \u6211\u73b0\u5728\u4e5f\u6709\u7c7b\u4f3c\u95ee\u9898\uff0c  @VictorZeng  \uff0c @jarvan4dev \u8fd9\u4e2a\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u6837\nJSONObject map = new JSONObject();\n        JSONObject o = null;\n        map.put(\"a\",o);\n        String s = null;\n        map.put(\"s\",s);\n        Integer i = null;\n        map.put(\"i\",i);\n        System.out.println(JSON.toJSONString(map, SerializerFeature.WriteNullNumberAsZero));\n\u8f93\u51fa\uff0c{\"a\":null,\"s\":null,\"i\":null}\n\u73b0\u5728\u53ea\u8981\u540e\u9762\u7684SerializerFeature \u53ea\u8981\u58f0\u660e\u4e86\u4e00\u4e2a NULL\u7684\u679a\u4e3e\uff0c\u4f8b\u5982WriteNullNumberAsZero \u6216 SerializerFeature.WriteNullStringAsEmpty\u7b49\uff0c\u90a3\u6240\u6709NULL\u76f8\u5173\u7684\u679a\u4e3e\uff0c\u5c31\u90fd\u751f\u6548\u4e86. \u6211\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u628amap\u6362\u6210javabean\u5c31\u6ca1\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u5728FastJsonHttpMessageConverter \u8fd8\u662f\u4e0d\u884c\u3002. \u6211\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u628amap\u6362\u6210javabean\u5c31\u6ca1\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u5728FastJsonHttpMessageConverter \u8fd8\u662f\u4e0d\u884c\u3002. \u8c22\u8c22~ @zhuzhaoyuan @ronnin @stepinto @netroby @pentiumao . ",
    "ChenGuoqing1001": "\u4f60\u597d  \u8fd9\u4e2a\u4f18\u5316  android\u7248\u672c\u66f4\u65b0\u4e86\u5417? . \u4f60\u597d  \u8fd9\u4e2a\u4f18\u5316  android\u7248\u672c\u66f4\u65b0\u4e86\u5417? . \u8c22\u8c22\u4f60  \u5927\u795e. \u8c22\u8c22\u4f60  \u5927\u795e. ",
    "Kmegumi": "\u8bf7\u95ee\u66f4\u65b0\u52301.2.44\u4e4b\u540e\u4e3a\u4ec0\u4e48\u6267\u884cMap map = JSON.parseObject(\"\", HashMap.class);\u4f9d\u65e7\u662f\u62a5JSONException: syntax error, expect {, actual EOF, pos 0, json : . \u8c22\u8c22. ",
    "Harlber": "\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\n - \u7248\u672c\uff1acompile 'com.alibaba:fastjson:1.1.51.android'\n - \u51fa\u73b0\u7684\u95ee\u9898\uff1a\n\u5728\u7ebf\u7a0b\u6c60\u4e2d\u7684\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u5e8f\u5217\u5316\uff0c\njava\n     JSON.toJSONString(data);\n\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u6c60\u4e2d\u7684\u5b9a\u65f6\u4efb\u52a1\u4e0d\u88ab\u89e6\u53d1\n\u8ddf\u8e2a\u4e86\u4e0b\u4ee3\u7801\uff0c\njava\n /**\n     * @since 1.2.9, back port to 1.1.49.android\n     * @return\n     */\n    public static String toJSONString(Object object, // \n                                      SerializeConfig config, // \n                                      SerializeFilter[] filters, // \n                                      String dateFormat, //\n                                      int defaultFeatures, // \n                                      SerializerFeature... features)\n\u66f4\u65b0\uff1a\n\u5df2\u786e\u8ba4\u8f6c\u6362\u8fc7\u7a0b\u6709\u4e2a\u5f02\u5e38\u53d1\u751f\uff0c\u4f46\u6ca1\u6709\u76f8\u5e94\u7684\u5806\u6808\u4fe1\u606f\uff0cdebug\u8fdb\u5165\u624d\u4f1a\u770b\u5230\n. ",
    "salten": "1.2.42\u6211\u770bbuild-jdk\u662f1.8\u7248\u672c\uff0c\u770b\u4ee3\u7801\u91cc\u9762\u597d\u50cf\u4f7f\u7528\u4e86jdk1.8\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u751f\u4ea7\u4e0a\u8fd8\u5728\u4f7f\u7528jdk1.7\uff0c\u6682\u65f6\u8fd8\u4e0d\u80fd\u5347\u7ea7jdk\u30021.2.42\u53ef\u4ee5\u652f\u6301jdk1.7\u4e48\uff1f. \u591a\u8c22\u6e29\u7ecd~~. ",
    "sunchuanleihit": "\u81ea\u5df1\u5199Serializer\u548cDeserializer\u5c31\u597d\u4e86\n```\npublic class ObjectIDSerializer implements ObjectSerializer, ObjectDeserializer {\n    @Override\n    @SuppressWarnings(\"unchecked\")\n    public  T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n        return (T) new ObjectId(parser.parseObject(String.class));\n    }\n@Override\npublic int getFastMatchToken() {\n    return 0;\n}\n\n@Override\npublic void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n    ObjectId id = (ObjectId) object;\n    serializer.write(id.toString());\n}\n\n}\n```\n\u7136\u540e\u6307\u5b9aserializeUsing\u548cdeserializeUsing\n```\nclass Data {\n    @JSONField(serializeUsing = ObjectIDSerializer.class, deserializeUsing = ObjectIDSerializer.class)\n    private ObjectId id;\n    public ObjectId getId() {\n        return this.id;\n    }\n    public void setId(ObjectId id) {\n        this.id = id;\n    }\n@Override\npublic String toString() {\n    return \"{id=\" + this.getId().toHexString() + \"}\";\n}\n\n}\n```\n\u5c31\u89e3\u51b3\u95ee\u9898\u4e86. ",
    "kwame998": "String str = \" { \\\"_id\\\" : \\\"5aeab29ad45ca900017cd1b5\\\"}\";\n\u600e\u4e48\u76f4\u63a5\u8c03\u7528 JSON.parseObject(String txt)  \u5f97\u5230ObjectId\u5bf9\u50cf\uff1f. ",
    "fongx": "\u5982\u679c\u771f\u9700\u8981\u8fd9\u6837\u7528\uff0c\u591a\u9ebb\u70e6\u554a\uff0c\u800c\u4e14\u5b8c\u5168\u8026\u5408\u4e86\u76ee\u6807\u5bf9\u8c61\uff0c@JSONField deserializeUsing  \u5c31\u6709\u70b9\u9e21\u808b\u4e86\u5427\uff0c\u4f5c\u8005\u521d\u8877\u5e94\u8be5\u4e0d\u662f\u8fd9\u6837\u7684\u5427\n. @kimmking  \u8fd9\u884c\u4ee3\u7801\u6211\u662f\u6ce8\u91ca\u6389\u7684\uff0c\u5e76\u6ca1\u6709\u4f7f\u7528\uff1a //ParserConfig.getGlobalInstance().putDeserializer(Model.class, new ModelValueDeserializer());\n\u6211\u662f\u671f\u671b\u80fd\u901a\u8fc7 Deserializer \u5bf9 field \u4ea7\u751f\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u4f5c\u7528\uff0c\u53ef\u80fd\u4f1a\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u591a\u4e2a field \u6307\u5b9a\u81ea\u5b9a\u4e49 Deserializer. ",
    "johnyannj": "\u540e\u6765\u89e3\u51b3\u4e86\u5417\uff1f +1. \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u60f3\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u89e3\u5bc6\u67d0\u4e9b\u5b57\u6bb5\uff0c\u6216\u8005\u5176\u5b83\u52a0\u5de5\u5904\u7406\u3002\n```\npublic class Config\n{\n    @JSONField(name =\"jdbc.password\", deserializeUsing=DecryptDeserializer.class)\n    private String password\n}\n```\n\u5c31\u50cfjackson\u7684 com.fasterxml.jackson.databind.annotation.JsonDeserializer. ",
    "jwu049": "\u8fd8\u662f\u4e0d\u597d\u7528\uff0c\u5355\u7eaf\u9488\u5bf9\u67d0\u4e2a\u5c5e\u6027\u7684\u53cd\u5e8f\u5217\u5316\uff0c\u7528\u7684\u7248\u672c\u4e3a1.2.49\uff0c @wenshao . ",
    "huwei": "1.2.44\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u4fee\u6b63\u4e86\u3002. ",
    "goubo": "\u660e\u767d\u4e86\uff5e\u5148\u624b\u5199\u4e86\u4e00\u4e2a\u9a8c\u8bc1\n```java \npublic static boolean checkJson4Number(String string) {\n        AtomicBoolean flag = new AtomicBoolean(true);\n        String josnString = string.trim();\n        if (josnString.charAt(0) == '{') {\n            JSONObject jsonObject = JSON.parseObject(josnString);\n            jsonObject.values().forEach(o -> {\n                if (!flag.get()) return;\n                if (o instanceof Number) {\n                    Pattern pattern = Pattern.compile(\"[0-9]*\");\n                    Matcher isNum = pattern.matcher(o.toString());\n                    if (!isNum.matches()) {\n                        flag.set(false);\n                        return;\n                    }\n                }\n                if (o instanceof JSONObject) {\n                    flag.set(checkJson4Number(o.toString()));\n                    if (!flag.get())\n                        return;\n                }\n                if (o instanceof JSONArray) {\n                    flag.set(checkJson4Number(o.toString()));\n                    if (!flag.get())\n                        return;\n                }\n        });\n    } else if (josnString.charAt(0) == '[') {\n        JSONArray jsonArray = JSON.parseArray(josnString);\n        jsonArray.forEach(oa -> {\n            if (!flag.get()) return;\n            if (oa instanceof JSONObject) {\n                flag.set(checkJson4Number(oa.toString()));\n                if (!flag.get())\n                    return;\n            }\n            if (oa instanceof JSONArray) {\n                flag.set(checkJson4Number(oa.toString()));\n                if (!flag.get())\n                    return;\n            }\n\n        });\n    }\n\n    return flag.get();\n}\n\n```\n\u7cfb\u7edf\u8bbe\u8ba1\u662f\u6ca1\u6709\u5c0f\u6570\u7684\uff0c\u76f4\u63a5filterHandler\u7edf\u4e00\u5904\u7406\njava\nif (!StringUtil.isEmpty(routingContext.getBodyAsString()) && !StringUtil.checkJson4Number(routingContext.getBodyAsString())) {\n            Result result = new Result(ResultEnum.PARAMFORMALERROR, \"\u7cfb\u7edf\u672a\u5b9a\u4e49\u6d6e\u70b9\u53c2\u6570\u3002\");\n            logger.info(\"\u8bf7\u6c42\u5b8c\u6210 id:\" + requestId + \"\u4efb\u4f55\u53c2\u6570\u4e0d\u5e94\u8be5\u6709\u5c0f\u6570\");\n            routingContext.response().putHeader(\"content-type\", \"application/json; charset=utf-8\").setStatusCode(result.getHttpStatus()).end(result.toString());\n            return;\n        }\n. ",
    "yangchaojiang": "1.1.56.android \u7248\u672c. \u597d\u7684\uff0c\u8c22\u8c22. \u6ca1\u6709\u95ee\u9898\u4e86\u3002\u8c22\u8c22\u4e86\u3002. ",
    "zccccccc": "\u8c22\u8c22\uff0c\u679c\u7136\u628a\u7248\u672c\u964d\u4e0b\u6765\u5c31\u597d\u4e86\uff0cfastjson \u4e0d\u7ef4\u62a4\u4e86\u5417\uff1f \u8fd9\u4e2a\u5e94\u8be5\u662f\u5347\u7ea7\u7684bug\u628a\uff0c\u6211\u770b\u6700\u9ad8\u7248\u672c\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898. 2016-05-19 9:05:08\n2016-05-19 19:05:08\n\u60c5\u51b5\u90fd\u5b58\u5728\uff0c\u6709\u6ca1\u6709\u517c\u5bb9\u70b9\u7684. 2016-05-19 9:05:08\n2016-05-19 19:05:08\n\u60c5\u51b5\u90fd\u5b58\u5728\uff0c\u6709\u6ca1\u6709\u517c\u5bb9\u70b9\u7684. \u5df2\u7ecf\u6d4b\u8bd5\uff0c\u4e0d\u53ef\u4ee5. \u5df2\u7ecf\u6d4b\u8bd5\uff0c\u4e0d\u53ef\u4ee5. ",
    "yuchengyi": "\u6211\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898,\u6709\u641e\u4e86\u4e00\u4e2a\u4e0b\u5348\u4e86,\u53ef\u4ee5\u6307\u70b9\u4e00\u4e0b\u5417?\u5927\u54e5. ",
    "zhukunqian": "test()\u4ee3\u7801\u6709\u53cc\u5f15\u53f7\u554a!\n",
    "cddesire": "\u4f9d\u8d56\u6700\u65b0fastjson\u7248\u672c. \u5b57\u6bb5\u4e2d\u6709tab\u5982\u4f55\u5904\u7406\uff1f\njava\nString line = \"[2, \\\"\u6d6a\u6f2b\u5947\u4fa0\\\\t\\\", \\\"\u96e8\u5929\u4e0d\u6253\u4f1e\\\", 4536]\";\nBookDO book = JSON.parseObject(line, BookDO.class, Feature.SupportArrayToBean);\nException in thread \"main\" com.alibaba.fastjson.JSONException: 14\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:658)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:365)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:269). \u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5\u53bb\u89e3\u51b3\u4e0b\uff1f. ",
    "likaimelody": "but\uff0c\"{\\\"ArrivalDateTime\\\":\\\"\\/Date(1+0800)\\/\\\"}\" this json can be deserialized correctly\u3002. \"/Date(1500000000000-0800)/\",\u8fd9\u79cd\u683c\u5f0f\u7684json\u65e5\u671f\u4e5f\u4e0d\u80fd\u53cd\u5e8f\u5217\u5316\u4e3aCalendar\u6216Date\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u65f6\u95f4\u6233\u6216\u8005\u65f6\u533a\u4e3a\u8d1f\u6570\u65f6\uff0c\u90fd\u4e0d\u80fd\u88abfastjson\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u4e9b\u683c\u5f0f\u662f.net\u5e73\u53f0\u628a\u65f6\u95f4\u5e8f\u5217\u5316\u4e3ajson\u7684\u9ed8\u8ba4\u683c\u5f0f\u3002. ",
    "cqdavidwei": "\u8fd9\u4e2a\u95ee\u9898\u73b0\u5728\u662f\u5426\u6709\u7ed3\u8bba\u5462\uff1f1970\u5e74\u4ee5\u524d\u7684json\u65f6\u95f4\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u3002\u5982\uff1a/Date(-62135596800000+0800)\\/. ",
    "kiikgu": "\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u662f1.2.37\u4e4b\u540e\u90fd\u8fd9\u6837. ",
    "lichong2": "\u8bd5\u4e86FastJsonpHttpMessageConverter4,\u548cfastJsonHttpMessageConverter\u4e00\u6837\u8fd8\u662f\u5728jsonp\u8bf7\u6c42\u65f6\u51fa\u73b0\u4e2d\u6587\u4e71\u7801\u3002\n`@Configuration\npublic class FastJsonConverterConfig extends WebMvcConfigurerAdapter {\n@Override\npublic void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n    //\u521b\u5efafastJson\u7684\u6d88\u606f\u8f6c\u6362\u5668\n    //\u521b\u5efa\u914d\u7f6e\u7c7b\n    FastJsonConfig fastJsonConfig = new FastJsonConfig();\n    //\u4fee\u6539\u914d\u7f6e\u8fd4\u56de\u5185\u5bb9\u7684\u8fc7\u6ee4\n    fastJsonConfig.setSerializerFeatures(\n            SerializerFeature.WriteNullNumberAsZero,\n            SerializerFeature.WriteMapNullValue,\n            SerializerFeature.WriteNullListAsEmpty,\n            SerializerFeature.WriteNullStringAsEmpty,\n            SerializerFeature.DisableCircularReferenceDetect\n    );\n    //\u914d\u7f6e\u65f6\u95f4\u8f6c\u6362\n    SerializeConfig serializeConfig = new SerializeConfig();\n    String dateFormat = \"yyyy-MM-dd HH:mm:ss\";\n    serializeConfig.put(Timestamp.class, new SimpleDateFormatSerializer(dateFormat));\n    fastJsonConfig.setSerializeConfig(serializeConfig);\n    //\u5904\u7406\u4e2d\u6587\u4e71\u7801\u95ee\u9898\n    List<MediaType> fastMediaTypes = new ArrayList<>();\n    fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n    //\u6d88\u606f\u8f6c\u6362\u5668\u88c5\u8f7d\u4e2d\u6587\u4e71\u7801\u914d\u7f6e\n    //fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);\n    //\u6d88\u606f\u8f6c\u6362\u5668\u88c5\u8f7dfastJson\u914d\u7f6e\n    //fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);\n    //converters.add(fastJsonHttpMessageConverter);\n\n    //jsonP\u4fe1\u606f\u8f6c\u6362\n    FastJsonpHttpMessageConverter4 fastJsonpHttpMessageConverter4 = new FastJsonpHttpMessageConverter4();\n    fastJsonpHttpMessageConverter4.setFastJsonConfig(fastJsonConfig);\n    fastJsonpHttpMessageConverter4.setSupportedMediaTypes(fastMediaTypes);\n    converters.add(fastJsonpHttpMessageConverter4);\n    //\u8c03\u7528\u7236\u7c7b\u7684\u914d\u7f6e\n    super.configureMessageConverters(converters);\n}\n\n@Bean\npublic FastJsonpResponseBodyAdvice fastJsonpResponseBodyAdvice() {\n    return new FastJsonpResponseBodyAdvice(\"callback\",\"jsonp\");\n}\n\n}`. ",
    "M-AJ": "ok\n  . Thanks. ",
    "FlyingPigQAQ": "v1.2.49\u662f\u4e00\u6837\u7684\u95ee\u9898,\u914d\u7f6e\u5982\u4e0b\n`java\n    @Bean\n    public HttpMessageConverters customConverters() {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect);\n        converter.setFastJsonConfig(fastJsonConfig);\n        List<MediaType> supportedMediaTypes = new ArrayList<>();\n        supportedMediaTypes.add(MediaType.ALL);\n        converter.setSupportedMediaTypes(supportedMediaTypes);\n        return new HttpMessageConverters(converter);\n    }\n. @VictorZengjava\nsupportedMediaTypes.add(MediaType.APPLICATION_JSON);\n\u6539\u6210\u6b64\u4f9d\u7136\u4e0d\u884c\uff0c\u662f\u4e0d\u662ffastjson\u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\uff0cHttp\u8bf7\u6c42Content-Type='*'\u5c31\u4f1a\u5904\u7406\u5f02\u5e38\uff1f. \u54c8\u54c8\u5c34\u5c2c,\u5f00\u53d1\u8bf4\u548cfastjson\u6709\u5173\uff0c\u4e5f\u6ca1\u4ed4\u7ec6\u770b\u4e0blog\uff0c\u521a\u8c03\u4e86\u51fa\u6765\uff0c\u53d7\u6559\u4e86\u3002\u8fd9\u4e2aissues\u662f\u4e0d\u662f\u53ef\u4ee5\u5173\u95ed\u4e86\u54c8\norg.springframework.http.server.ServletServerHttpRequest.javajava\nif (contentType != null && contentType.getCharset() == null) {\n                    String requestEncoding = this.servletRequest.getCharacterEncoding();\n                    if (StringUtils.hasLength(requestEncoding)) {\n                        Charset charSet = Charset.forName(requestEncoding);\n                        Map params = new LinkedCaseInsensitiveMap<>();\n                        params.putAll(contentType.getParameters());\n                        params.put(\"charset\", charSet.toString());\n                        MediaType mediaType = new MediaType(contentType.getType(), contentType.getSubtype(), params);\n                        this.headers.setContentType(mediaType);\n                    }\n                }\n ```\norg.springframework.http.HttpHeaders.java\njava\npublic void setContentType(@Nullable MediaType mediaType) {\n        if (mediaType != null) {\n            Assert.isTrue(!mediaType.isWildcardType(), \"'Content-Type' cannot contain wildcard type '*'\");\n            Assert.isTrue(!mediaType.isWildcardSubtype(), \"'Content-Type' cannot contain wildcard subtype '*'\");\n            set(CONTENT_TYPE, mediaType.toString());\n        }\n        else {\n            set(CONTENT_TYPE, null);\n        }\n    }. ",
    "Veiintc": "JSON.toJSONString(departments, SerializerFeature.DisableCircularReferenceDetect). ",
    "ZZMarquis": "@Veiintc \u591a\u8c22\u6307\u70b9. ",
    "xkcoding": "\u4e0d\u77e5\u8fd9\u4e2a\u9057\u7559\u95ee\u9898\u4f55\u65f6\u53ef\u4ee5\u89e3\u51b3\uff1f\u80fd\u5426\u8bbe\u8ba1\u6210\u9ed8\u8ba4\u9009\u53d6\u5168\u5c40\u914d\u7f6e\uff0c\u5f53\u914d\u7f6e@JSONField \u7684\u65f6\u5019\uff0c\u7528@JSONField\u914d\u7f6e\u9879\uff1f @kimmking . \u4e0d\u77e5\u8fd9\u4e2a\u9057\u7559\u95ee\u9898\u4f55\u65f6\u53ef\u4ee5\u89e3\u51b3\uff1f\u80fd\u5426\u8bbe\u8ba1\u6210\u9ed8\u8ba4\u9009\u53d6\u5168\u5c40\u914d\u7f6e\uff0c\u5f53\u914d\u7f6e@JSONField \u7684\u65f6\u5019\uff0c\u7528@JSONField\u914d\u7f6e\u9879\uff1f @kimmking . ",
    "chenlang888881": "\u548cSpringmvc\u6df7\u7528\u65f6 jsonfield \u4f1a\u88ab\u5168\u5c40\u8986\u76d6\u600e\u4e48\u529e\u5462 \u662f\u4e0d\u662fbug @kimmking . \u548cSpringmvc\u6df7\u7528\u65f6 jsonfield \u4f1a\u88ab\u5168\u5c40\u8986\u76d6\u600e\u4e48\u529e\u5462 \u662f\u4e0d\u662fbug @kimmking . ",
    "Wadeqin": "\u6700\u540e\u7684\u7ed3\u8bba\u662f\u4ec0\u4e48\uff1f\u540c\u95ee. \u6700\u540e\u7684\u7ed3\u8bba\u662f\u4ec0\u4e48\uff1f\u540c\u95ee. ",
    "zhzy0077": "@wenshao Can you have a look on this ?. @wenshao Can you have a look on this ?. ",
    "GreenPepperForPotato": "I have the same problem too. I have the same problem too. ",
    "shamo42": "same problem here too. Creating empty constructors doesn't help. same problem here too. Creating empty constructors doesn't help. ",
    "ghostjuneyao": "@Test\npublic void testFastJson() {\n    try {\n       ParserConfig.getGlobalInstance().setAutoTypeSupport(true);\n\n        String event1 = \"{\\\"@type\\\":\\\"com.taobao.huijin.hjbase.ratingdetail.dto.RatingDetailReadMTO\\\",\\\"amount\\\":285.600000,\\\"billId\\\":3945,\\\"bizId\\\":\\\"6000007==201712==USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"bizTime\\\":\\\"2017-12-31 00:00:00\\\",\\\"bizType\\\":\\\"6000007\\\",\\\"currency\\\":\\\"CNY\\\",\\\"dealTime\\\":\\\"2017-12-23 14:11:03\\\",\\\"detailType\\\":\\\"CYCLE_CHARGING\\\",\\\"extendInfo\\\":{\\\"@type\\\":\\\"java.util.LinkedHashMap\\\",\\\"BUY_AMOUNT\\\":\\\"3\\\",\\\"P_BIZ_ID\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"SETTLE_SIDE\\\":\\\"654321\\\",\\\"SETTLE_CYCLE_TYPE\\\":\\\"3\\\",\\\"AUCTION_PRICE\\\":\\\"119\\\",\\\"CALCULATE_RANGE\\\":\\\"STORE\\\",\\\"TOTAL_NUM\\\":\\\"1\\\",\\\"BILL_CYCLE\\\":\\\"201712\\\",\\\"IS_PRE_CHARGING\\\":\\\"false\\\",\\\"BRANCH_SHOP\\\":\\\"branchShop1\\\",\\\"CONTRACT_TYPE\\\":\\\"HEMA_CHARGING_PROD\\\",\\\"stepRateType\\\":\\\"3\\\",\\\"SOURCE_TYPE\\\":\\\"PURCHASE_ADJUST\\\",\\\"SETTLE_SIDE_NICK\\\":\\\"\u6d4b\u8bd5\u7ed3\u7b97\u4e3b\u4f53\\\",\\\"express_value\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"BIZ_TIME\\\":\\\"2017-12-22 13:59:05\\\",\\\"TRADE_ID\\\":\\\"1513922344273\\\",\\\"QUANTITY\\\":\\\"3.000000\\\",\\\"MES_RECEIVE_TIME\\\":\\\"2017-12-22 13:59:05\\\",\\\"UN_TAX_UNIT_PRICE\\\":\\\"100.000000\\\",\\\"AUCTION_ID\\\":\\\"123\\\",\\\"AUCTION_NAME\\\":\\\"\u6d4b\u8bd5\u5546\u54c1\\\",\\\"rate_value\\\":\\\"{\\\\\\\"extendInfo\\\\\\\":{},\\\\\\\"intervalValues\\\\\\\":[{\\\\\\\"max\\\\\\\":600.000000,\\\\\\\"min\\\\\\\":0.000000,\\\\\\\"rate\\\\\\\":0.600000},{\\\\\\\"max\\\\\\\":1000.000000,\\\\\\\"min\\\\\\\":600.000000,\\\\\\\"rate\\\\\\\":0.300000},{\\\\\\\"max\\\\\\\":999999999999.000000,\\\\\\\"min\\\\\\\":1000.000000,\\\\\\\"rate\\\\\\\":0.100000}]}\\\",\\\"CAT_ID\\\":\\\"16\\\",\\\"UNIT\\\":\\\"kilometer\\\",\\\"TERM_NAME\\\":\\\"\u76d2\u9a6c.\u5408\u540c\u8fd4\u5229.\u4fc3\u9500\u63a8\u5e7f\u8d39\\\",\\\"USER_ID\\\":\\\"2049884395\\\",\\\"UNIT_PRICE\\\":\\\"119.000000\\\",\\\"tbRuleCode\\\":\\\"HM_SETTLE_CHARGING\\\",\\\"AMOUNT\\\":\\\"357.000000\\\",\\\"CAT_NAME\\\":\\\"\u6c34\u679c\\\",\\\"EXTERNAL_NO\\\":\\\"HM==1513922344273\\\",\\\"CHANNEL\\\":\\\"online\\\",\\\"is_default_rate\\\":\\\"false\\\",\\\"CURRENCY\\\":\\\"CNY\\\",\\\"rate_rule_id\\\":\\\"300000531\\\",\\\"OTHER_USER_NICK\\\":\\\"\u7532\u65b9\\\",\\\"RATE_TYPE\\\":\\\"14\\\",\\\"ITEM_NAME\\\":\\\"\u76d2\u9a6c.\u4fc3\u9500\u63a8\u5e7f\u8d39\\\",\\\"rate_rule_inst_id\\\":\\\"1009129180821\\\",\\\"TAX_RATE\\\":\\\"0.190000\\\",\\\"ITEM_CODE\\\":\\\"BILL_HM_6000007\\\",\\\"CONTRACT_SIDE\\\":\\\"12345\\\",\\\"UNTAX_AMOUNT\\\":\\\"300.000000\\\",\\\"CONTRACT_VERSION\\\":\\\"V001\\\",\\\"CONTRACT_NO\\\":\\\"no1513922344271\\\",\\\"P_TRADE_ID\\\":\\\"1513922344273\\\"},\\\"gmtCreate\\\":\\\"2017-12-23 14:11:03\\\",\\\"gmtModified\\\":\\\"2017-12-23 14:11:03\\\",\\\"id\\\":6235300020395,\\\"indexNum\\\":0,\\\"innerId\\\":6300120395,\\\"innerTable\\\":\\\"SETTLE_DATA\\\",\\\"isJoin\\\":\\\"FALSE\\\",\\\"itemId\\\":90000000007031,\\\"mesId\\\":3235,\\\"mesReceiveTime\\\":\\\"2017-12-22 13:59:05\\\",\\\"outBizId\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"pTradeId\\\":3235,\\\"priority\\\":0,\\\"proration\\\":0.6,\\\"quantity\\\":476.000000,\\\"rateDefineId\\\":40000443,\\\"rateParams\\\":{\\\"@type\\\":\\\"java.util.LinkedHashMap\\\"},\\\"status\\\":\\\"SUCCESS\\\",\\\"tradeId\\\":3761,\\\"userId\\\":2049884395,\\\"userNick\\\":\\\"\u4e59\u65b9\\\",\\\"version\\\":1}\";\n        Serializable obj = JSON.parseObject(event1, Serializable.class);\n        System.out.println(obj);\n    }\n    catch (Exception e) {\n        System.out.println(e.getMessage());\n    }\n}.     @Test\npublic void testFastJson() {\n    try {\n       ParserConfig.getGlobalInstance().setAutoTypeSupport(true);\n\n        String event1 = \"{\\\"@type\\\":\\\"com.taobao.huijin.hjbase.ratingdetail.dto.RatingDetailReadMTO\\\",\\\"amount\\\":285.600000,\\\"billId\\\":3945,\\\"bizId\\\":\\\"6000007==201712==USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"bizTime\\\":\\\"2017-12-31 00:00:00\\\",\\\"bizType\\\":\\\"6000007\\\",\\\"currency\\\":\\\"CNY\\\",\\\"dealTime\\\":\\\"2017-12-23 14:11:03\\\",\\\"detailType\\\":\\\"CYCLE_CHARGING\\\",\\\"extendInfo\\\":{\\\"@type\\\":\\\"java.util.LinkedHashMap\\\",\\\"BUY_AMOUNT\\\":\\\"3\\\",\\\"P_BIZ_ID\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"SETTLE_SIDE\\\":\\\"654321\\\",\\\"SETTLE_CYCLE_TYPE\\\":\\\"3\\\",\\\"AUCTION_PRICE\\\":\\\"119\\\",\\\"CALCULATE_RANGE\\\":\\\"STORE\\\",\\\"TOTAL_NUM\\\":\\\"1\\\",\\\"BILL_CYCLE\\\":\\\"201712\\\",\\\"IS_PRE_CHARGING\\\":\\\"false\\\",\\\"BRANCH_SHOP\\\":\\\"branchShop1\\\",\\\"CONTRACT_TYPE\\\":\\\"HEMA_CHARGING_PROD\\\",\\\"stepRateType\\\":\\\"3\\\",\\\"SOURCE_TYPE\\\":\\\"PURCHASE_ADJUST\\\",\\\"SETTLE_SIDE_NICK\\\":\\\"\u6d4b\u8bd5\u7ed3\u7b97\u4e3b\u4f53\\\",\\\"express_value\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"BIZ_TIME\\\":\\\"2017-12-22 13:59:05\\\",\\\"TRADE_ID\\\":\\\"1513922344273\\\",\\\"QUANTITY\\\":\\\"3.000000\\\",\\\"MES_RECEIVE_TIME\\\":\\\"2017-12-22 13:59:05\\\",\\\"UN_TAX_UNIT_PRICE\\\":\\\"100.000000\\\",\\\"AUCTION_ID\\\":\\\"123\\\",\\\"AUCTION_NAME\\\":\\\"\u6d4b\u8bd5\u5546\u54c1\\\",\\\"rate_value\\\":\\\"{\\\\\\\"extendInfo\\\\\\\":{},\\\\\\\"intervalValues\\\\\\\":[{\\\\\\\"max\\\\\\\":600.000000,\\\\\\\"min\\\\\\\":0.000000,\\\\\\\"rate\\\\\\\":0.600000},{\\\\\\\"max\\\\\\\":1000.000000,\\\\\\\"min\\\\\\\":600.000000,\\\\\\\"rate\\\\\\\":0.300000},{\\\\\\\"max\\\\\\\":999999999999.000000,\\\\\\\"min\\\\\\\":1000.000000,\\\\\\\"rate\\\\\\\":0.100000}]}\\\",\\\"CAT_ID\\\":\\\"16\\\",\\\"UNIT\\\":\\\"kilometer\\\",\\\"TERM_NAME\\\":\\\"\u76d2\u9a6c.\u5408\u540c\u8fd4\u5229.\u4fc3\u9500\u63a8\u5e7f\u8d39\\\",\\\"USER_ID\\\":\\\"2049884395\\\",\\\"UNIT_PRICE\\\":\\\"119.000000\\\",\\\"tbRuleCode\\\":\\\"HM_SETTLE_CHARGING\\\",\\\"AMOUNT\\\":\\\"357.000000\\\",\\\"CAT_NAME\\\":\\\"\u6c34\u679c\\\",\\\"EXTERNAL_NO\\\":\\\"HM==1513922344273\\\",\\\"CHANNEL\\\":\\\"online\\\",\\\"is_default_rate\\\":\\\"false\\\",\\\"CURRENCY\\\":\\\"CNY\\\",\\\"rate_rule_id\\\":\\\"300000531\\\",\\\"OTHER_USER_NICK\\\":\\\"\u7532\u65b9\\\",\\\"RATE_TYPE\\\":\\\"14\\\",\\\"ITEM_NAME\\\":\\\"\u76d2\u9a6c.\u4fc3\u9500\u63a8\u5e7f\u8d39\\\",\\\"rate_rule_inst_id\\\":\\\"1009129180821\\\",\\\"TAX_RATE\\\":\\\"0.190000\\\",\\\"ITEM_CODE\\\":\\\"BILL_HM_6000007\\\",\\\"CONTRACT_SIDE\\\":\\\"12345\\\",\\\"UNTAX_AMOUNT\\\":\\\"300.000000\\\",\\\"CONTRACT_VERSION\\\":\\\"V001\\\",\\\"CONTRACT_NO\\\":\\\"no1513922344271\\\",\\\"P_TRADE_ID\\\":\\\"1513922344273\\\"},\\\"gmtCreate\\\":\\\"2017-12-23 14:11:03\\\",\\\"gmtModified\\\":\\\"2017-12-23 14:11:03\\\",\\\"id\\\":6235300020395,\\\"indexNum\\\":0,\\\"innerId\\\":6300120395,\\\"innerTable\\\":\\\"SETTLE_DATA\\\",\\\"isJoin\\\":\\\"FALSE\\\",\\\"itemId\\\":90000000007031,\\\"mesId\\\":3235,\\\"mesReceiveTime\\\":\\\"2017-12-22 13:59:05\\\",\\\"outBizId\\\":\\\"USER_ID==2049884395&&CONTRACT_NO==\\\\\\\"no1513922344271\\\\\\\"\\\",\\\"pTradeId\\\":3235,\\\"priority\\\":0,\\\"proration\\\":0.6,\\\"quantity\\\":476.000000,\\\"rateDefineId\\\":40000443,\\\"rateParams\\\":{\\\"@type\\\":\\\"java.util.LinkedHashMap\\\"},\\\"status\\\":\\\"SUCCESS\\\",\\\"tradeId\\\":3761,\\\"userId\\\":2049884395,\\\"userNick\\\":\\\"\u4e59\u65b9\\\",\\\"version\\\":1}\";\n        Serializable obj = JSON.parseObject(event1, Serializable.class);\n        System.out.println(obj);\n    }\n    catch (Exception e) {\n        System.out.println(e.getMessage());\n    }\n}. \u6211\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u95ee\u9898\u5e94\u8be5\u662f\u5728\u679a\u4e3e\u7c7b\u7684\u53cd\u5e8f\u5217\u5316\u4e0a\uff0c\u5982\u679c\u679a\u4e3e\u7c7b\u4f5c\u4e3a\u5185\u90e8\u7c7b\u5b9a\u4e49\u5728RatingDetailReadMTO\u4e2d\uff0c\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u8fd9\u4e2a\u8bf7\u5e2e\u5fd9\u770b\u4e0b\u4e3a\u4ec0\u4e48\u57281.2.7\u7248\u672c\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u57281.2.44\u53cd\u5e8f\u5217\u5316\u5c31\u62a5\u9519\u4e86\u3002. \u6211\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u95ee\u9898\u5e94\u8be5\u662f\u5728\u679a\u4e3e\u7c7b\u7684\u53cd\u5e8f\u5217\u5316\u4e0a\uff0c\u5982\u679c\u679a\u4e3e\u7c7b\u4f5c\u4e3a\u5185\u90e8\u7c7b\u5b9a\u4e49\u5728RatingDetailReadMTO\u4e2d\uff0c\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u8fd9\u4e2a\u8bf7\u5e2e\u5fd9\u770b\u4e0b\u4e3a\u4ec0\u4e48\u57281.2.7\u7248\u672c\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u57281.2.44\u53cd\u5e8f\u5217\u5316\u5c31\u62a5\u9519\u4e86\u3002. \u8fd9\u4e2a\u95ee\u9898\u80fd\u5426\u5c3d\u5feb\u5e2e\u5fd9\u786e\u8ba4\u4e0b\u3002\u8c22\u8c22\u4e86\uff01. \u8fd9\u4e2a\u95ee\u9898\u80fd\u5426\u5c3d\u5feb\u5e2e\u5fd9\u786e\u8ba4\u4e0b\u3002\u8c22\u8c22\u4e86\uff01.\n",
    "farsunset": "\u662f\u6709get\u65b9\u6cd5\uff0c\u4f46\u662f\u65b9\u6cd5\u91cc\u9762\u8fd4\u56de\u7684\u662f\u8fd0\u7b97\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5b57\u6bb5\u554a. \u662f\u6709get\u65b9\u6cd5\uff0c\u4f46\u662f\u65b9\u6cd5\u91cc\u9762\u8fd4\u56de\u7684\u662f\u8fd0\u7b97\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5b57\u6bb5\u554a. ",
    "wangkeshan9538": "\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417. \u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417. \u7531\u4e8espringmvc \u7684convert \u6839\u636ehttp\u7684 MediaType \u6765\u5224\u65ad\u662f\u5426\u8981\u8fdb\u884c\u5904\u7406\uff0c\u652f\u6301\u7684MediaType \u7531\u6784\u9020\u65b9\u6cd5\u7ed9\u51fa\u3002\u800cfastjson \u63a5\u53d7\u7684\u662f\u6240\u6709\u7684mediaType,\nAbstractHttpMessageConverter\nprotected AbstractHttpMessageConverter(MediaType supportedMediaType) {\n    setSupportedMediaTypes(Collections.singletonList(supportedMediaType));\n}\nfastjson\npublic FastJsonHttpMessageConverter() {\n        super(MediaType.ALL);\n}\njackson\npublic MappingJackson2HttpMessageConverter(ObjectMapper objectMapper) {\n    super(objectMapper, MediaType.APPLICATION_JSON, new MediaType(\"application\", \"*+json\"));\n}\n\u95ee\u9898\u53ef\u80fd\u51fa\u5728\u8fd9\u91cc. \u7531\u4e8espringmvc \u7684convert \u6839\u636ehttp\u7684 MediaType \u6765\u5224\u65ad\u662f\u5426\u8981\u8fdb\u884c\u5904\u7406\uff0c\u652f\u6301\u7684MediaType \u7531\u6784\u9020\u65b9\u6cd5\u7ed9\u51fa\u3002\u800cfastjson \u63a5\u53d7\u7684\u662f\u6240\u6709\u7684mediaType,\nAbstractHttpMessageConverter\nprotected AbstractHttpMessageConverter(MediaType supportedMediaType) {\n    setSupportedMediaTypes(Collections.singletonList(supportedMediaType));\n}\nfastjson\npublic FastJsonHttpMessageConverter() {\n        super(MediaType.ALL);\n}\njackson\npublic MappingJackson2HttpMessageConverter(ObjectMapper objectMapper) {\n    super(objectMapper, MediaType.APPLICATION_JSON, new MediaType(\"application\", \"*+json\"));\n}\n\u95ee\u9898\u53ef\u80fd\u51fa\u5728\u8fd9\u91cc. ",
    "klniu": "+1 \u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u5417. +1 \u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u5417. ",
    "catchUheart": "\u6211\u4e5f\u78b0\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\u554a\uff0c\u8fd8\u6ca1\u6709\u5927\u54e5\u89e3\u51b3\u4e0b\uff1f. ",
    "iqeq00": "\u8fd9\u4e2a\u662f\u56e0\u4e3a\u5728\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e86\u8fd4\u56de\u683c\u5f0f\uff0c\u53ef\u4ee5\u5728\u8fd4\u56de\u65b9\u6cd5\u4e0a\u66ff\u6362\u4e0b\uff0c\u4f8b\u5982\uff1a@RequestMapping(value = \"/download\", produces = \"application/octet-stream;charset=UTF-8\"). \u8fd9\u4e2a\u662f\u56e0\u4e3a\u5728\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e86\u8fd4\u56de\u683c\u5f0f\uff0c\u53ef\u4ee5\u5728\u8fd4\u56de\u65b9\u6cd5\u4e0a\u66ff\u6362\u4e0b\uff0c\u4f8b\u5982\uff1a@RequestMapping(value = \"/download\", produces = \"application/octet-stream;charset=UTF-8\"). ",
    "ztgreat": "\u4f3c\u4e4e\u5e76\u4e0d\u5b8c\u5168\u662fFastjson \u7684\u95ee\u9898\nSpring \u7248\u672c\uff1a4.3\nfastjson \uff1a 1.2.7\n\u95ee\u9898\u539f\u56e0\uff1a\n\u5173\u952e\u7c7b\uff1aAbstractMessageConverterMethodProcessor->writeWithMessageConverters  \u65b9\u6cd5\nSpring\u4f1a\u83b7\u53d6request\u7684contentType,\u4ee5\u53ca\u914d\u7f6e\u7684converter\u652f\u6301\u7684contentType,\u7136\u540e\u627e\u4e24\u8005\u90fd\u7b26\u5408\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5177\u4f53\u7684\u4e00\u4e2acontentType\uff0c\u90a3\u4e48\u5c31\u9009\u62e9\u8be5contentType, \u968f\u540e\u4f20\u7ed9\u540e\u7eed\u7684MessageConverter\uff0c\u540e\u7eed\u7684converter\u62ff\u5230contentType\u62ff\u5230\u540e\u4f1a\u67e5\u770b\u662f\u5426\u662f\u81ea\u5df1\u652f\u6301\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5219\u4f1a\u8fdb\u884c\u5e8f\u5217\u5316\u64cd\u4f5c\u3002\nHttpServletRequest request = inputMessage.getServletRequest();\nList<MediaType> requestedMediaTypes = getAcceptableMediaTypes(request);\nList<MediaType> producibleMediaTypes = getProducibleMediaTypes(request, valueType, declaredType);\n\u5e38\u89c4\u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cSpring \u4f20\u7ed9Fastjson \u7684contentType\u7684\u7c7b\u578b\u603b\u662ftext/html\u7684\uff0cFastjson \u9ed8\u8ba4\u662f\u652f\u6301all,\u6240\u4ee5\u5c31\u4f1a\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5bfc\u81f4\u51fa\u9519\u3002\n\u89e3\u51b3\u529e\u6cd5\uff1a\n\u6700\u7b80\u5355\u7684\u65b9\u6848\u662f\u5728\u63a7\u5236\u5c42\u914d\u7f6e\uff1a\n@RequestMapping(value = \"/download\", produces = \"application/octet-stream;charset=UTF-8\")\n\u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u5728\u83b7\u53d6 producibleMediaTypes\uff08\u89c1\u4e0a\u9762\u4ee3\u7801\uff09 \u7684\u65f6\u5019\u5c31\u662f\u8be5\u6307\u5b9a\u7684\u7c7b\u578b\u4e86\uff0c\u4ee3\u7801\u903b\u8f91\u5728\u4e0b\u9762\uff1a\nprotected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> valueClass, Type declaredType) {\n    //\u83b7\u53d6\u7528\u6237\u81ea\u5b9a\u7684\u7c7b\u578b\n    Set<MediaType> mediaTypes = (Set<MediaType>) request.getAttribute(HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE);\n    //\u5982\u679c\u6709\u5219\u8fd4\u56de\n     if (!CollectionUtils.isEmpty(mediaTypes)) {\n      return new ArrayList<MediaType>(mediaTypes);\n     }\n     //\u540e\u9762\u4ee3\u7801\u7701\u7565\n}\n\u6700\u540e\u6307\u5b9a\nFastJsonHttpMessageConverter  \u7684supportedMediaTypes\uff0c\u4e0d\u8981\u5305\u542b application/octet-stream;charset=UTF-8\n. ### \u4f3c\u4e4e\u5e76\u4e0d\u5b8c\u5168\u662fFastjson \u7684\u95ee\u9898\nSpring \u7248\u672c\uff1a4.3\nfastjson \uff1a 1.2.7\n\u95ee\u9898\u539f\u56e0\uff1a\n\u5173\u952e\u7c7b\uff1aAbstractMessageConverterMethodProcessor->writeWithMessageConverters  \u65b9\u6cd5\nSpring\u4f1a\u83b7\u53d6request\u7684contentType,\u4ee5\u53ca\u914d\u7f6e\u7684converter\u652f\u6301\u7684contentType,\u7136\u540e\u627e\u4e24\u8005\u90fd\u7b26\u5408\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5177\u4f53\u7684\u4e00\u4e2acontentType\uff0c\u90a3\u4e48\u5c31\u9009\u62e9\u8be5contentType, \u968f\u540e\u4f20\u7ed9\u540e\u7eed\u7684MessageConverter\uff0c\u540e\u7eed\u7684converter\u62ff\u5230contentType\u62ff\u5230\u540e\u4f1a\u67e5\u770b\u662f\u5426\u662f\u81ea\u5df1\u652f\u6301\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5219\u4f1a\u8fdb\u884c\u5e8f\u5217\u5316\u64cd\u4f5c\u3002\nHttpServletRequest request = inputMessage.getServletRequest();\nList<MediaType> requestedMediaTypes = getAcceptableMediaTypes(request);\nList<MediaType> producibleMediaTypes = getProducibleMediaTypes(request, valueType, declaredType);\n\u5e38\u89c4\u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cSpring \u4f20\u7ed9Fastjson \u7684contentType\u7684\u7c7b\u578b\u603b\u662ftext/html\u7684\uff0cFastjson \u9ed8\u8ba4\u662f\u652f\u6301all,\u6240\u4ee5\u5c31\u4f1a\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5bfc\u81f4\u51fa\u9519\u3002\n\u89e3\u51b3\u529e\u6cd5\uff1a\n\u6700\u7b80\u5355\u7684\u65b9\u6848\u662f\u5728\u63a7\u5236\u5c42\u914d\u7f6e\uff1a\n@RequestMapping(value = \"/download\", produces = \"application/octet-stream;charset=UTF-8\")\n\u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u5728\u83b7\u53d6 producibleMediaTypes\uff08\u89c1\u4e0a\u9762\u4ee3\u7801\uff09 \u7684\u65f6\u5019\u5c31\u662f\u8be5\u6307\u5b9a\u7684\u7c7b\u578b\u4e86\uff0c\u4ee3\u7801\u903b\u8f91\u5728\u4e0b\u9762\uff1a\nprotected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> valueClass, Type declaredType) {\n    //\u83b7\u53d6\u7528\u6237\u81ea\u5b9a\u7684\u7c7b\u578b\n    Set<MediaType> mediaTypes = (Set<MediaType>) request.getAttribute(HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE);\n    //\u5982\u679c\u6709\u5219\u8fd4\u56de\n     if (!CollectionUtils.isEmpty(mediaTypes)) {\n      return new ArrayList<MediaType>(mediaTypes);\n     }\n     //\u540e\u9762\u4ee3\u7801\u7701\u7565\n}\n\u6700\u540e\u6307\u5b9a\nFastJsonHttpMessageConverter  \u7684supportedMediaTypes\uff0c\u4e0d\u8981\u5305\u542b application/octet-stream;charset=UTF-8\n. ",
    "scvzerng": "\u662f\u70ed\u90e8\u7f72\u4f9d\u8d56\u7684\u95ee\u9898 \u53ef\u80fd\u662f\u7c7b\u52a0\u8f7d\u5668\u7684\u539f\u56e0\nxml\n <!--<dependency>-->\n            <!--<groupId>org.springframework.boot</groupId>-->\n            <!--<artifactId>spring-boot-devtools</artifactId>-->\n            <!--<optional>true</optional>-->\n        <!--</dependency>-->\n\u6ce8\u91ca\u6389\u5c31\u597d\u4e86. \u662f\u70ed\u90e8\u7f72\u4f9d\u8d56\u7684\u95ee\u9898 \u53ef\u80fd\u662f\u7c7b\u52a0\u8f7d\u5668\u7684\u539f\u56e0\nxml\n <!--<dependency>-->\n            <!--<groupId>org.springframework.boot</groupId>-->\n            <!--<artifactId>spring-boot-devtools</artifactId>-->\n            <!--<optional>true</optional>-->\n        <!--</dependency>-->\n\u6ce8\u91ca\u6389\u5c31\u597d\u4e86. ",
    "phywhm": "\u53e6\uff1a\u6211\u5e76\u4e0d\u60f3\u901a\u8fc7\u4e0d\u63a2\u6d4b\u91cd\u590d/\u5faa\u73af\u5f15\u7528\u6765\u89e3\u51b3\u95ee\u9898. \u53e6\uff1a\u6211\u5e76\u4e0d\u60f3\u901a\u8fc7\u4e0d\u63a2\u6d4b\u91cd\u590d/\u5faa\u73af\u5f15\u7528\u6765\u89e3\u51b3\u95ee\u9898. \u597d\u7684\u3002\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\nimport java.util.ArrayList;\nimport java.util.List;\n/*\n * Created by PHY on 2018/1/12.\n /\npublic class Test {\npublic static void main(String[] args) {\n\n    TestA testA = new TestA();\n    TestB testB = new TestB();\n    testB.setText(\"jefsf\");\n    TestB testB1 = new TestB();\n    List<TestB> list = new ArrayList<>();\n    testA.setB(list);\n    testB1.setText(\"asfssd\");\n    list.add(testB);\n    list.add(testB1);\n    TestC testC = new TestC();\n    testC.setMade(\"cao\");\n    testB.setYouxi(testC);\n    testB1.setYouxi(testC);\n    CarrierT carrierT = new CarrierT();\n    carrierT.setSign(6);\n    carrierT.setResponse(testA);\n    String res = JSON.toJSONString(carrierT, SerializerFeature.WriteClassName);\n    System.out.println(res);\n    CarrierT result = JSONObject.parseObject(res, CarrierT.class);\n    System.out.println(result.getSign());\n    System.out.println(JSON.toJSONString(result));\n    for (TestB tmp :\n            ((TestA)result.getResponse()).getB()) {\n        System.out.println(tmp.getText());\n        System.out.println(tmp.getYouxi().getMade());\n    }\n}\n\nstatic class TestA {\n    int a;\n    `List<TestB>` b;\n\n    TestA() {\n        a = 3;\n    }\n\n    public int getA() {\n        return a;\n    }\n\n    public void setA(int a) {\n        this.a = a;\n    }\n\n    public List<TestB> getB() {\n        return b;\n    }\n\n    public void setB(List<TestB> b) {\n        this.b = b;\n    }\n}\n\nstatic class CarrierT {\n    int sign;\n    Object response;\n\n    public int getSign() {\n        return sign;\n    }\n\n    public void setSign(int sign) {\n        this.sign = sign;\n    }\n\n    public Object getResponse() {\n        return response;\n    }\n\n    public void setResponse(Object response) {\n        this.response = response;\n    }\n}\n\nstatic class TestB {\n    String text;\n    TestC youxi;\n\n    public String getText() {\n        return text;\n    }\n\n    public void setText(String text) {\n        this.text = text;\n    }\n\n    public TestC getYouxi() {\n        return youxi;\n    }\n\n    public void setYouxi(TestC youxi) {\n        this.youxi = youxi;\n    }\n}\n\nstatic class TestC {\n    String made;\n\n    public String getMade() {\n        return made;\n    }\n\n    public void setMade(String made) {\n        this.made = made;\n    }\n}\n\n}\n. \u597d\u7684\u3002\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\nimport java.util.ArrayList;\nimport java.util.List;\n/*\n * Created by PHY on 2018/1/12.\n /\npublic class Test {\npublic static void main(String[] args) {\n\n    TestA testA = new TestA();\n    TestB testB = new TestB();\n    testB.setText(\"jefsf\");\n    TestB testB1 = new TestB();\n    List<TestB> list = new ArrayList<>();\n    testA.setB(list);\n    testB1.setText(\"asfssd\");\n    list.add(testB);\n    list.add(testB1);\n    TestC testC = new TestC();\n    testC.setMade(\"cao\");\n    testB.setYouxi(testC);\n    testB1.setYouxi(testC);\n    CarrierT carrierT = new CarrierT();\n    carrierT.setSign(6);\n    carrierT.setResponse(testA);\n    String res = JSON.toJSONString(carrierT, SerializerFeature.WriteClassName);\n    System.out.println(res);\n    CarrierT result = JSONObject.parseObject(res, CarrierT.class);\n    System.out.println(result.getSign());\n    System.out.println(JSON.toJSONString(result));\n    for (TestB tmp :\n            ((TestA)result.getResponse()).getB()) {\n        System.out.println(tmp.getText());\n        System.out.println(tmp.getYouxi().getMade());\n    }\n}\n\nstatic class TestA {\n    int a;\n    `List<TestB>` b;\n\n    TestA() {\n        a = 3;\n    }\n\n    public int getA() {\n        return a;\n    }\n\n    public void setA(int a) {\n        this.a = a;\n    }\n\n    public List<TestB> getB() {\n        return b;\n    }\n\n    public void setB(List<TestB> b) {\n        this.b = b;\n    }\n}\n\nstatic class CarrierT {\n    int sign;\n    Object response;\n\n    public int getSign() {\n        return sign;\n    }\n\n    public void setSign(int sign) {\n        this.sign = sign;\n    }\n\n    public Object getResponse() {\n        return response;\n    }\n\n    public void setResponse(Object response) {\n        this.response = response;\n    }\n}\n\nstatic class TestB {\n    String text;\n    TestC youxi;\n\n    public String getText() {\n        return text;\n    }\n\n    public void setText(String text) {\n        this.text = text;\n    }\n\n    public TestC getYouxi() {\n        return youxi;\n    }\n\n    public void setYouxi(TestC youxi) {\n        this.youxi = youxi;\n    }\n}\n\nstatic class TestC {\n    String made;\n\n    public String getMade() {\n        return made;\n    }\n\n    public void setMade(String made) {\n        this.made = made;\n    }\n}\n\n}\n. @wenshao \n\u5982\u679cCarriorT\u7684response\u7c7b\u578b\u4e0d\u662fObject\uff0c\u800c\u662fTestA\u7684\u8bdd\uff0c\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u4e24\u79cd\u5e8f\u5217\u5316\u7ed3\u679c\u4e00\u6837\u7684\uff0c\u4e0d\u80fd\u53cd\u5e8f\u5217\u5316\u56de\u6765\u6211\u89c9\u5f97\u8fd8\u662f\u6709\u95ee\u9898\u7684. @wenshao \n\u5982\u679cCarriorT\u7684response\u7c7b\u578b\u4e0d\u662fObject\uff0c\u800c\u662fTestA\u7684\u8bdd\uff0c\u53cd\u5e8f\u5217\u5316\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u4e24\u79cd\u5e8f\u5217\u5316\u7ed3\u679c\u4e00\u6837\u7684\uff0c\u4e0d\u80fd\u53cd\u5e8f\u5217\u5316\u56de\u6765\u6211\u89c9\u5f97\u8fd8\u662f\u6709\u95ee\u9898\u7684. ",
    "zhangfei9734": "@kimmking @wenshao The same parameters, only exception occurred when fastjson parse, which is a bug?. @kimmking @wenshao The same parameters, only exception occurred when fastjson parse, which is a bug?. ```groovy\n@RequestMapping(path = '/test', method = [RequestMethod.POST] )\nMap test(@RequestBody String body){\n    // ...\n}\n// test \ndef body = \"\"\"\n\ndomain: name\n\"\"\"\n RestAssured.given().contentType(ContentType.URLENC).body(body).post('/test')\n```\n\u8fd9\u6837\u5c31\u4f1a\u62a5\u9519\uff0c\u6211\u6ca1\u6709\u6307\u5b9apath\u7684\u8bf7\u6c42\u5934\u4e3ajson\uff0c\u800c\u6211\u5b9e\u9645\u63d0\u4ea4\u7684\u53ea\u662f\u4e00\u4e2aString\u7684\u7c7b\u578b\uff0c\u4f46\u662fFastJsonHttpMessageConverter\u6ca1\u6709\u5224\u65adtest\u89e3\u91ca\u7684\u5b9e\u9645\u7c7b\u578b\u662f\u4ec0\u4e48\u90fd\u8fdb\u884c\u4e86parseObjet\u6240\u4ee5\u51fa\u9519\u4e86\u3002\n@VictorZeng . ",
    "sizzlecar": "\u4f60\u597d\u5728\u4e00\u4e2aMap\u4e2d\u5b58\u5165\u4e00\u4e2abyte[]\uff0c\u7136\u540eJSON.toJSONString(map)\uff0c\u76f4\u63a5\u628a\u8f6c\u6362\u540e\u7684byte[]\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u8c03\u7528JSON.parseObject(\"....\", byte[].class)\u4f1a\u62a5\u9519\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u5904\u7406\u4e48\uff1f. @wenshao . byte[] bytes2 = Base64.decodeFast(str);. BASE64Decoder decoder = new BASE64Decoder();\nbyte[] bytes2 = decoder.decodeBuffer(str);//str\u4e3abyte[]\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32. ",
    "DreamCartier": "GroupFan<User> group3 = JSON.parseObject(jsonString, new TypeReference<GroupFan<User>>(){});\n\u8fd9\u79cd\u65b9\u5f0f\u53cd\u5e8f\u5217\u5316\u540e\uff0c\u91cc\u9762\u7684users\u7684size\u6c38\u8fdc\u90fd\u662f0\uff0c\u8fd9\u662f\u4e3a\u4f55\uff1f\n@wenshao . ",
    "leonchen83": "\u4e0d\u80fd\u7528typereference,\u56e0\u4e3a\u4e0d\u77e5\u9053\u5177\u4f53\u7684type\uff0c\u6211\u7684\u7406\u89e3\u662fmap\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5df2\u7ecf\u5f00\u542f\u4e86WriteClassName, \u90a3\u4e48\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u7528@type\u7684\u4fe1\u606f\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7528\u8fd9\u4e2a\u4fe1\u606f\u800c\u53cd\u5e8f\u5217\u5316\u6210hashmap\u4e86\u5462. ",
    "qinshenghechu": "@wenshao \u4e0d\u597d\u610f\u601d\u4e86\u3002\u6211\u7684\u6570\u636e\u4e0d\u80fd\u9ecf\u8d34\u8fd9\u91cc\u3002\u5927\u6982\u7684\u7ed3\u6784\u5c31\u662f\u4e00\u4e2aJSONObject\u3002\u5f88\u591a\u4e2d\u6587\uff0c\u5e8f\u5217\u5316\u540e\u5927\u6982\u662f5M\u5927\u5c0f\u3002\u662f\u4e0d\u662f\u56e0\u4e3a\u662fMap\u7ed3\u6784\u6027\u80fd\u4f18\u5316\u65e0\u6cd5\u4f53\u73b0\u51fa\u6765\uff1f. @wenshao \u6211\u76ee\u524d\u7684\u7248\u672c\u662f1.2.29\u3002\u6211\u66fe\u5c1d\u8bd5\u66f4\u65b0\u5230\u6700\u65b0\u7248\u4f9d\u7136\u6ca1\u6709\u53d8\u5316\u3002\u6709\u52b3\u4e86~~. ",
    "d4ksn": "@wenshao \n\u4e0d\u597d\u610f\u601d\uff0c\u5347\u7ea7\u52301.2.46\uff0c\u8fd8\u662f\u6709\u4e00\u4e9bcase\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\uff1a\nUser user = JSON.parseObject(\"{\\\"age\\\":8.200000000000001}\", User.class);. ",
    "ren-liang": "@wenshao spring mvc \u9ed8\u8ba4\u7684\u4f7f\u7528jackson\u7684jar\u4e0d\u89c9\u5f97\u4e0d\u597d\u4f7f\u5417\uff1f. @wenshao https://github.com/storezhang/utils/tree/master/spring-boot-starter-fastjson. ",
    "c-s-t-z": "\u5728\u90e8\u5206\u9700\u6c42\u4e2d\u662f\u6709\u5f71\u54cd;\u5047\u5982\u6709\u4e00\u4e2a\u9700\u6c42\u662f \n     \u5982\u679cflag(\u4e0a\u8ff0\u5b9e\u4f53\u7c7b\u4e2d\u7684Flag\u53d8\u91cf \u4ee3\u8868\u6027\u522b)\u662fMAN, \u5728\u5bf9name(\u4e0a\u8ff0\u5b9e\u4f53\u7c7b\u4e2d\u7684Name\u53d8\u91cf \u4ee3\u8868\u6027\u522b)\n            \u8d4b\u503c\u65f6\u9700\u8981\u5c06name\u5c5e\u6027\u8fdb\u884c\u90e8\u5206\u7f8e\u5316\u6216\u8005\u9690\u85cf, \u5982\u5c06\u5c5e\u6027name\u4e3a c-s-t-z \u7f8e\u5316\u4e3a c@s@t@z , \n     \u5982\u679cFlag\u662fWOMAN \u5219\u5c06name\u5c5e\u6027\u7684c-s-t-z\u7f8e\u5316\u4e3a c#s#t#z;\n\u5982\u679c\u5148\u5bf9name\u5c5e\u6027\u8d4b\u503c \u5c31\u65e0\u6cd5\u5728setName\u4e2d\u8fdb\u884cFlag\u5c5e\u6027\u7684\u5224\u65ad ;\u6240\u4ee5\u9700\u8981\u5148\u5bf9 Flag\u8d4b\u503c \u7136\u540e\u5728\u5bf9Name\u8d4b\u503c; \u5728setName\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u5bf9Flag\u5c5e\u6027\u8fdb\u884c\u5224\u65ad\u4e4b\u540e,\u5bf9name\u8fdb\u884c\u9488\u5bf9\u884c\u7684\u7f8e\u5316\u6216\u8005\u9690\u85cf.\n\u4ee5\u4e0a \u662f\u6211\u7684\u8865\u5145\u8bf4\u660e\n  \u8c22\u8c22\u60a8\u7684\u56de\u590d\u548c\u89e3\u7b54\n. \u53ef\u4ee5\u8bb2\u4e00\u4e0b JSON.parseObject  \u4e3a\u53d8\u91cf\u8d4b\u503c\u7684\u903b\u8f91\u5417 ?\n\u56e0\u4e3a\u5728\u8bbe\u8ba1\u65f6 \u5b9e\u4f53\u7c7b\u4e2d\u6ca1\u6709get\u65b9\u6cd5  set\u5b8c\u4e4b\u540e  \u4f1a\u76f4\u63a5\u8c03\u7528\u5b9e\u4f53\u7c7b\u4e2d\u4e00\u4e2a\u81ea\u5b9a\u4e49\u65b9\u6cd5(\u5982MyTest) \u76f4\u63a5\u5c06\u6570\u636e\u8fdb\u884c\u4e86\u5904\u7406\u5728set\u65f6 \u5fc5\u987b\u5bf9\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u8fdb\u884c\u5904\u7406  \u5982\u679c\u518d\u6b21\u5728MyTest\u4e2d\u8fdb\u884c\u5904\u7406  \u4f1a\u5bf9\u7ef4\u62a4\u4e0d\u5229  \u800c\u4e14\u5b9e\u4f53\u7c7b\u5c5e\u6027\u8fc7\u591a\u65f6  \u5728set\u4e2d\u5904\u7406\u8981\u66f4\u6e05\u6670 \n\u73b0\u5728JSON.parseObject\u65f6\u6ca1\u6709\u63d0\u4f9b\u987a\u5e8f\u8d4b\u503c\u81ea\u5b9a\u4e49\u7684feature\u4e4b\u7c7b\u7684\u673a\u5236\u5417 ?\n\u8c22\u8c22\u60a8\u8010\u5fc3\u56de\u7b54\u548c\u63d0\u4f9b\u7684\u601d\u8def. \u597d\u7684  \u4e5f\u5c31\u662f\u8bf4\u73b0\u5728\u4e0d\u80fd\u81ea\u5b9a\u4e49\u8d4b\u503c\u987a\u5e8f\u662f\u5417 , \u4ee5\u540e\u7248\u672c\u7531\u4e8e\u6027\u80fd\u539f\u56e0\u4e5f\u4e0d\u4f1a\u52a0\u5165\u5bf9\u5417\n\u8c22\u8c22\u60a8\u7684\u8010\u5fc3\u89e3\u7b54    . ",
    "wumoyu850921": "\u8fd9\u79cd\u9700\u6c42\u8d85\u51fa\u804c\u8d23\u8303\u56f4\u4e86\u5427\u3002. ",
    "kevin90828": "\u55ef\uff0c\u6211\u77e5\u9053\u73b0\u5728\u662f\u4e0d\u652f\u6301\u7684\uff0c\u5e0c\u671b\u80fd\u505a\u51fa\u6765\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\uff0c\u5f88\u6709\u7528\u3002. \u671f\u5f85\uff01\u4f60\u4eec\u56de\u590d\u771f\u5feb\uff01\u73b0\u5728\u7528\u7684\u662fhttps://github.com/json-path/JsonPath\uff0c\u4e0d\u77e5\u9053\u6027\u80fd\u4f1a\u4e0d\u4f1a\u6bd4\u8fd9\u9ad8. 1.2.47\u7248\u672c\u662f\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e48\uff1f. OK\uff0c\u591a\u8c22\uff01. \u6536\u5230\uff0c\u975e\u5e38\u611f\u8c22\uff01. ",
    "Matrix6677": "@wenshao \u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f88\u591a\u65f6\u5019\u56e0\u4e3a\u4e1a\u52a1\u9700\u8981\u4f7f\u7528\u5230\u679a\u4e3e\uff0c\u4f46\u5b58\u50a8\u7684\u65f6\u5019\u60f3\u5b58\u4e00\u4e2a\u679a\u4e3e\u5bf9\u5e94\u7684id\u5165\u6570\u636e\u5e93\uff0c\u770b\u4e86\u6e90\u7801\uff0c\u53d1\u73b0\u5bf9\u4e8e\u679a\u4e3e\u7c7b\u578b\u7684\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u4e0d\u662f\u50cf\u5176\u4ed6\u7c7b\u578b\u4e00\u6837\u653e\u5230\u4e00\u4e2amap\u91cc\u7edf\u4e00\u5904\u7406\uff0c\u800c\u662f\u5199\u6b7b\u5728\u903b\u8f91\u91cc. ",
    "BossYi": "@kimmking \u8fd9\u91cc\u7684\u95ee\u9898\u5c31\u662f\u65e0\u6cd5\u62ff\u5230A\u7c7b\u578b\uff0c\u8981\u505a\u5230\u901a\u7528\uff0c\u4e0d\u80fd\u901a\u8fc7\u56fa\u5b9a\u7684\u7c7b\u540d\u6765\u53cd\u5c04\u3002. @kimmking \u76ee\u7684\u662f\u8981\u80fd\u591f\u62ff\u5230A\u7c7b\u578b\uff0c\u53cd\u5c04\u51fa\u6765\u62ff\u5230reflect Field b\uff0c\u518d\u83b7\u53d6@UserDefineAnnotation\u4e2d\u5199\u7684\u5b57\u6bb5\u540d\uff0c\u8fbe\u5230\u5e8f\u5217\u5316\u6307\u5b9a\u5b57\u6bb5\u7684\u76ee\u7684\u3002. @wenshao @kimmking \u8bf7\u95ee\u80fd\u4e0d\u80fd\u5728@JsonField\u4e2d\u6269\u5c55\u4e00\u4e2a\u529f\u80fd\uff0c\u5904\u7406\u5728\u4e00\u5bf9\u591a\u548c\u591a\u5bf9\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6ee4\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\u3002. @kimmking jackson @JsonSerialize\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u4e2d  JsonGenerator.getOutPutContext\u8fd4\u56de\u7684\u5c31\u662f\u5f53\u524d\u5e8f\u5217\u5316\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5b57\u6bb5\u7c7b\u578b\u3002\u6240\u4ee5\u5982\u679cfastjson\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316write\u65b9\u6cd5\u4e2d\u7684JsonSerializer\u80fd\u5e26\u4e0a\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6269\u5c55\u6027\u5c31\u5f88\u6709\u5e2e\u52a9\u3002. ",
    "looly": "Sorry\uff0c\u5224\u65ad\u5931\u8bef\u3002\u770b\u5230\u540e\u7eed\u6709\u76f8\u5173\u6bb5\u3002. ",
    "liubailin2017": "\u8c22\u8c22\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\uff0c \u662fwindows\u7684\u63a7\u5236\u53f0\u7684\u5b57\u7b26\u96c6\u7528\u7684\u662fgbk\u6240\u4ee5\u4e71\u7801\u3002 \u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u548cfastjson \u65e0\u5173\u3002 . > \u65e0\u8bba\u52a0\u591a\u5c11\u6ce8\u91ca\uff0c\u4f60\u8be5\u8bfb\u4e0d\u61c2\u8fd8\u662f\u8bfb\u4e0d\u61c2\n\n\u591a\u8bf7\u6559\u4e0b\u9ad8\u624b\u600e\u4e48\u8bfb\u6e90\u7801\u5c82\u4e0d\u662f\u66f4\u597d\uff1f\n\n\u53d7\u6559  :-o. ",
    "realvalkyrie": "something like  auto-value-gson. ",
    "netroby": "ping @wenshao . ",
    "yijun135": "@kimmking \nJSONObject jsonObject = new JSONObject();\njsonObject.put(xxx,xxx)\njsonObject.put(xxx,xxx)\n\u968f\u4fbfput\u51e0\u4e2a\u503c\uff0c\u7136\u540e\u6309\u7167\u4f60put\u8fdb\u53bb\u7684\u503c\u751f\u6210\u4e00\u4e2aJavaBean\u7c7b\uff0c\u6309\u7167\u6240\u8bf4\u7684\u65b9\u5f0f\uff0c\u7ed3\u679c\u5c31\u662fnull\n\u56e0\u4e3aJSONObject\u672c\u8eab\u6765\u8bf4\u662f\u4e00\u4e2aMap\uff0c\u8f6c\u6362\u4e0d\u4e86. ",
    "ysheaven": "\u6dfb\u52a0\u4e00\u4e2akotlin-reflect\u5e93\u8bd5\u8bd5\n implementation \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\". \u53e6\u5916\uff0c\u4e0d\u7ba1\u4f60\u662f\u7528data class\u8fd8\u662fclass\uff0c\u8bb0\u5f97\u5173\u6389as\u7684instant run\u529f\u80fd. \u95ee\u9898\u89e3\u51b3\u4e86\n\u770b\u5230InstantReloadException\u540e\uff0c\u6211\u559d\u4e86\u51e0\u53e382\u5e74\u7684\u53ef\u4e50\u5b9a\u4e86\u5b9a\u795e\uff0c\u7136\u540e\u628aas\u7684instant run\u5173\u6389\uff0c\u4e00\u5207\u5c31\u90fd\u6b63\u5e38\u4e86\u2026\u2026\n\u5e0c\u671b\u4e0b\u4e2a\u7248\u672c\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u628a. \u53e6\u5916\u8865\u5145\u4e00\u53e5\uff0c\u89e3\u6790data class\u662f\u9700\u8981\u6dfb\u52a0kotlin-reflect\u5e93\u7684\uff0c\u8fd9\u4e2a\u6700\u597d\u5728\u6587\u6863\u4e2d\u6ce8\u660e\u4e00\u4e0b\uff0c\u6216\u8005\u66f4\u6362\u5224\u65ad\u65b9\u6cd5\uff0c\u4e0d\u8981\u4f7f\u7528\"kotlin.reflect.jvm.internal.KClassImpl\"\u7c7b. ",
    "zwonb": "\u679c\u7136\uff0c\u6dfb\u52a0kotlin-reflect\u53ef\u4ee5\u89e3\u6790\u4e86\uff01. \u7248\u672c1.1.68.android. \u4f7f\u7528\u76841.2.49\u7684\u7248\u672c @wenshao . \"org.jetbrains.kotlin:kotlin-reflect:1.2.61\"\n\u6709\u6dfb\u52a0\u8fd9\u4e2a\u4e86\uff0c\u8fd8\u662f\u4e0d\u884c\u5462 @wenshao . \u5df2\u7ecf\u53ef\u4ee5\u4e86\uff0c\u7531\u4e8e\u9879\u76ee\u7ec4\u4ef6\u5316\uff0c\u521a\u597d\u5b50\u6a21\u5757\u6ca1\u6709\u5f15\u7528kotlin-reflect\u5bfc\u81f4\u51fa\u95ee\u9898\uff01. json\u6570\u636e \uff1a[{\"name\":\"zwonb\"}]\ndata class TestKotlinB(\n        var name: String,\n        val url: String\n)\n\u8fd9\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38. \u8fd8\u6709\u5982\u679c\u6dfb\u52a0\u591a\u4f59\u7684\u5b57\u6bb5\u4e2d\u7684\u9ed8\u8ba4\u503c\u89e3\u6790\u4e4b\u540e\u662f\u4e0d\u751f\u6548\u7684. @wenshao \n\n. @zqr95518 \u6211\u75281.2.49\u7684\u4e5f\u6ca1\u95ee\u9898\u3002\u3002\u3002\u5230\u65f6\u5019\u4e0d\u60f3\u7528\u8fd9\u4e2a\u5e93\u4e86 \u9879\u76ee\u5df2\u7ecf\u7528kotlin\u91cd\u6784\u5b8c\u6210\uff0c\u6709\u65f6\u95f4\u6362\u6210moshi. @zqr95518 \u4f60\u8bd5\u8bd51.2.53\u770b\u770b\u884c\u4e0d\u884c\uff0c\u6211\u6ca1\u53bb\u8bd5\u8fc7. ",
    "hzxie": "Java Version:\njava version \"9\"\nJava(TM) SE Runtime Environment (build 9+181)\nJava HotSpot(TM) 64-Bit Server VM (build 9+181, mixed mode). I solved it with following statements:\nMap<Long, Map<String, String>> codeSnippet = JSON.parseObject(str,\n    new TypeReference<Map<Long, Map<String, String>>>() {});. ",
    "5z1punch": "\u60a8\u597d\uff0c\u6211\u5728idea \u91cc\u67e5\u770b\u6e90\u7801\u65f6\u53d1\u73b0\uff0cimport kotlin.reflect.jvm.internal.KClassImpl; \u7684\u65f6\u5019\u662f\u62a5\u9519\u7684\uff0cusage of kotlin internal declaration from different module\uff0c\u8fd9\u4e2a\u9519\u8bef\u662f\u600e\u4e48\u56de\u4e8b\u554a\uff0cpom.xml \u91cc\u5df2\u7ecf\u52a0\u4e86dependency \u4e86\uff0c\u6c42\u6559\u3002\n<dependency>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-reflect</artifactId>\n            <version>${kotlin.version}</version>\n            <scope>test</scope>\n        </dependency>. \u64e6\u3002\u3002\u3002\u3002\u770b\u82b1\u773c\u4e86\uff0c idea\u81ea\u52a8\u52a0\u7684test\u3002\u3002\u3002\u3002\u3002. ",
    "myliuyx": "JSON.parseObject(\"00130\",String.class); . ",
    "cnlyml": "@wenshao\uff0c\u4f60\u597d\uff0c\u66f4\u65b0\u52301.2.47\u7248\u672c\u540e\uff0c\u53d1\u73b0\u8fd8\u662f\u6709\u6b64\u95ee\u9898\uff0c\u5728\u89e3\u6790\u591a\u5c42\u6cdb\u578b\u7684\u6700\u540e\u4e00\u4e2alist\u65f6\uff0c\u4f9d\u7136\u4e3aJsonObject\u3002\nclass BaseResult:\n```java\npublic class BaseResult {\n    private static final Integer SUCCESS_CODE = 100;\nprivate Integer code;\nprivate String message;\n@JSONField(name = \"content\")\nprivate T content;\n\n```\nBaseResult\u4e2d\u7684content\u4f7f\u7528PageResult\nclass PageResult:\n```java\npublic class PageResult {\n    private Integer pageNum;\n    private Integer pageSize;\n    private Integer size;\n    private Integer startRow;\n    private Integer endRow;\n    private Integer total;\n    private Integer pages;\nprivate List<T> list;\n\n```\nlist\u4e2d\u7684T\u4f7f\u7528CouponResult\nclass CouponResult:\njava\npublic class CouponResult extends ContentResult {\n    /**\n     * \u4f18\u60e0\u5238ID\n     */\n    private Long id;\n    /**\n     * \u4f18\u60e0\u5238\u540d\u79f0\n     */\n    private String couponName;\n    /**\n     * \u4f18\u60e0\u5238\u56fe\u7247\n     */\n    private String couponImage;\n\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u89e3\u6790\u65f6\uff1a\njava\nBaseResult<PageResult<T>> data = JSON.parseObject(str, new TypeReference<BaseResult<PageResult<T>>>(clazz){}.getType());\n\u5728PageResult\u4e2dList\uff0cT\u4f9d\u7136\u4e3aJsonObject\uff0c\u5e76\u672a\u8f6c\u6362\u4e3a\uff1aCouponResult\u3002\n\u4f46\u4e0d\u4f7f\u7528\u6cdb\u578b\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u7c7b\u578b\u53ef\u8f6c\u6362\u6210\u529f\uff1a\njava\nBaseResult<PageResult<T>> data = JSON.parseObject(str, new TypeReference<BaseResult<PageResult<CouponResult>>>(clazz){}.getType());. @wenshao \u5df2\u7ecf\u627e\u5230\u95ee\u9898\u4e86\uff0c\u5b9e\u9645\u7531\u4e8eTypeReference\u4e2d\u6ca1\u6709\u5224\u65ad\uff1a\nnew TypeReference<BaseResult<PageResult<T>>>(clazz)\n\u8fd9\u6837\u7684\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u4fee\u6539\u7684\u6e90\u7801\uff1a\n```java\npublic class RepairTypeReference extends TypeReference {\n    static ConcurrentMap classTypeCache\n            = new ConcurrentHashMap(16, 0.75f, 1);\nprotected final Type type;\n\n/**\n * Constructs a new type literal. Derives represented class from type\n * parameter.\n *\n * <p>Clients create an empty anonymous subclass. Doing so embeds the type\n * parameter in the anonymous class's type hierarchy so we can reconstitute it\n * at runtime despite erasure.\n */\nprotected RepairTypeReference(){\n    Type superClass = getClass().getGenericSuperclass();\n\n    Type type = ((ParameterizedType) superClass).getActualTypeArguments()[0];\n\n    Type cachedType = classTypeCache.get(type);\n    if (cachedType == null) {\n        classTypeCache.putIfAbsent(type, type);\n        cachedType = classTypeCache.get(type);\n    }\n\n    this.type = cachedType;\n}\n\n/**\n * \n * @since 1.2.9\n * @param actualTypeArguments\n */\nprotected RepairTypeReference(Type... actualTypeArguments){\n    Class<?> thisClass = this.getClass();\n    Type superClass = thisClass.getGenericSuperclass();\n\n    ParameterizedType argType = (ParameterizedType) ((ParameterizedType) superClass).getActualTypeArguments()[0];\n    Type rawType = argType.getRawType();\n    Type[] argTypes = argType.getActualTypeArguments();\n\n    int actualIndex = 0;\n    for (int i = 0; i < argTypes.length; ++i) {\n        if (argTypes[i] instanceof TypeVariable &&\n                actualIndex < actualTypeArguments.length) {\n            argTypes[i] = actualTypeArguments[actualIndex++];\n        }\n        // fix for openjdk and android env\n        if (argTypes[i] instanceof GenericArrayType) {\n            argTypes[i] = TypeUtils.checkPrimitiveArray(\n                    (GenericArrayType) argTypes[i]);\n        }\n\n        // \u5982\u679c\u6709\u591a\u5c42\u6cdb\u578b\u4e14\u8be5\u6cdb\u578b\u5df2\u7ecf\u6ce8\u660e\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\uff0c\u5224\u65ad\u8be5\u6cdb\u578b\u4e0b\u4e00\u5c42\u662f\u5426\u8fd8\u6709\u6cdb\u578b\n        if(argTypes[i] instanceof ParameterizedType) {\n            argTypes[i] = handlerParameterizedType((ParameterizedType) argTypes[i], actualTypeArguments, actualIndex);\n        }\n    }\n\n    Type key = new ParameterizedTypeImpl(argTypes, thisClass, rawType);\n    Type cachedType = classTypeCache.get(key);\n    if (cachedType == null) {\n        classTypeCache.putIfAbsent(key, key);\n        cachedType = classTypeCache.get(key);\n    }\n\n    type = cachedType;\n\n}\n\n/**\n * Gets underlying {@code Type} instance.\n */\n@Override\npublic Type getType() {\n    return type;\n}\n\nprivate Type handlerParameterizedType(ParameterizedType type, Type[] actualTypeArguments, int actualIndex) {\n    Class<?> thisClass = this.getClass();\n    Type rawType = type.getRawType();\n    Type[] argTypes = type.getActualTypeArguments();\n\n    for(int i = 0; i < argTypes.length; ++i) {\n        if (argTypes[i] instanceof TypeVariable && actualIndex < actualTypeArguments.length) {\n            argTypes[i] = actualTypeArguments[actualIndex++];\n        }\n\n        // fix for openjdk and android env\n        if (argTypes[i] instanceof GenericArrayType) {\n            argTypes[i] = TypeUtils.checkPrimitiveArray(\n                    (GenericArrayType) argTypes[i]);\n        }\n\n        // \u5982\u679c\u6709\u591a\u5c42\u6cdb\u578b\u4e14\u8be5\u6cdb\u578b\u5df2\u7ecf\u6ce8\u660e\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\uff0c\u5224\u65ad\u8be5\u6cdb\u578b\u4e0b\u4e00\u5c42\u662f\u5426\u8fd8\u6709\u6cdb\u578b\n        if(argTypes[i] instanceof ParameterizedType) {\n            return handlerParameterizedType((ParameterizedType) argTypes[i], actualTypeArguments, actualIndex);\n        }\n    }\n\n    Type key = new ParameterizedTypeImpl(argTypes, thisClass, rawType);\n    return key;\n}\n\npublic final static Type LIST_STRING = new TypeReference<List<String>>() {}.getType();\n\n}\n```. \u6539\u4e3aJSONArray\u8bd5\u8bd5\u5462. \u6700\u597d\u8fdb\u884c\u7edf\u4e00\u54e6\uff0c\u6bd4\u5982data\u5fc5\u987b\u662fobject\u800c\u975earray\uff0c\u5982\u679c\u9700\u8981\u63a5\u53d7array\uff0c\u5219\u5c06array\u5305\u88c5\u5728data\u4e0b\u7684\u5b57\u6bb5\u4e2d. ",
    "lixiaogang03": "\u6211\u8fd9\u8fb9\u4e5f\u9047\u5230\u4e86,\u597d\u50cf\u662f\u5076\u73b0\u7684\u95ee\u9898. ",
    "horsy945": "\u8bd5\u8fc7\u4e86\uff0c\u89e3\u51b3\u4e86\uff0c\u975e\u5e38\u611f\u8c22\u3002\n|\n\u59d3\u540d\u82cf\u56fd\u5e86\nsuguoqing83@163.com\n\u516c\u53f8\u540d\u79f0\uff1a\u676d\u5dde\u6709\u8d5e\u79d1\u6280\u6709\u9650\u516c\u53f8\n\u5730\u5740\uff1a\n\u624b\u673a\uff1a17706521075\n|\n\u626b\u63cf\u8be5\u4e8c\u7ef4\u7801\uff0c\u53ef\u4ee5\u5c06\u7535\u5b50\u540d\u7247\u8fc5\u901f\u4fdd\u5b58\u5230\u624b\u673a \u4f7f\u7528\u5e2e\u52a9\n|\n\u5728 2018-03-20 00:19:23\uff0c\"\u6e29\u7ecd\u9526\" notifications@github.com \u5199\u9053\uff1a\nhttps://github.com/alibaba/fastjson/releases/tag/1.2.47\n\u80fd\u4f7f\u7528\u65b0\u7248\u672c\u8bd5\u8bd5\u770b\u4e48\uff1f\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "lhwbest": "Activity\u8df3\u8f6c\u7684\u65f6\u5019\u4f1a\u901a\u8fc7instanceof\u5224\u65ad\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u56e0\u4e3aJSONObject\u7ee7\u627f\u81eaMap\uff0c\u6240\u4ee5JSONObject\u5728\u5177\u4f53\u53cd\u5e8f\u5217\u5316\u65f6\u5c31\u88ab\u5e8f\u5217\u5316\u6210\u4e86\u4e00\u4e2aHashMap\u3002\n\u4f60\u53ef\u4ee5\u770b\u4e0b\u8fd9\u4e00\u5757\u7684\u5177\u4f53\u903b\u8f91\uff0c\u56e0\u4e3aActivity\u8df3\u8f6c\u4f1a\u8d70ActivityManagerProxy.startActivity()\u8fd9\u4e2a\u65b9\u6cd5\uff0c\n\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u4f1a\u8c03\u7528intent.writeToParcel(parcel, 0)\uff0c\u4f60\u5206\u6790writeToParcel\u65b9\u6cd5\u5c31\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n. ",
    "yanzhenjie": "This error was caused by me. I did not correspond to the field type on my side.\nThe error hint may also need to be optimized. When GSON parsing is used later, it clearly indicates that the field type does not correspond.. ",
    "hepengju": "\u611f\u8c22\u6e29\u5c11\u56de\u590d, \u90a3\u6709\u5565\u89e3\u51b3\u65b9\u6848\u5417? \n\u6211\u770b\u6700\u65b0\u7248\u5e94\u8be5\u662f\u91c7\u7528FastJsonConfig\u914d\u7f6e, \u91cc\u9762\u7684SerializeConfig, ParserConfig, SerializerFeature, Feature\u5bf9\u5e94\u7684\u914d\u7f6e\u5168\u90e8\u770b\u4e86\u4e00\u904d, \u6ca1\u6709\u53d1\u73b0\u5168\u5c40\u7684\u6309\u7167\u5c5e\u6027\u6392\u5e8f\u7684\u914d\u7f6e.\n. ",
    "bugstack": "\u73b0\u5728\u6211\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e86\uff0c\u53c2\u6570\u79cd\u4e0d\u80fd\u6709request\u5bf9\u8c61\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837. ",
    "sunfeilong": "\u6211\u7528\u7684\u662f tomcat-embed-core-8.5.31.jar\norg.apache.catalina.connector.Request \u91cc\u9762\u7684 getAsyncContext()\u65b9\u6cd5\u5728 asyncContext == null\u6216\u672a\u5f00\u59cb\u72b6\u6001 \u65f6\u4f1a\u629b\u51fa IllegalStateException \u5f02\u5e38\u3002\n\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 getAsyncContext()\uff0c\u53ef\u4ee5\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u52a0\u4e00\u4e2a SerializerFeature.IgnoreNonFieldGetter  \u8fc7\u6ee4\u5668\u3002. @freemanyuan \u5e94\u8be5\u662f\u7248\u672c\u4e0d\u4e00\u6837  IgnoreNonFieldGetter\u662f 1.2.7 \u624d\u52a0\u5165\u7684\u3002\n.\n",
    "freemanyuan": "@sunfeilong \u8c8c\u4f3c\u6211\u770b\u4e86SerializerFeature\u6ca1\u6709IgnoreNonFieldGetter\u8fd9\u4e2a\u5c5e\u6027. ",
    "tanliwei": "\u5207\u9762\u4e2d\u83b7\u53d6HttpServletRequest \nHttpServletRequest request = ((ServletRequestAttributes) \nRequestContextHolder.getRequestAttributes()).getRequest();. ",
    "qimingli": "\u914d\u4e2aFeature.DisableFieldSmartMatch\u5c5e\u6027\u89e3\u51b3\u4e86\uff0cJSON.parseObject(\"{\\\"orderId\\\": \\\"string123123\\\",\\\"tenant_CODe\\\": \\\"STRING\\\"}\", OrderCommonParm.class,Feature.DisableFieldSmartMatch);\n. ",
    "lxfwelldone": "\u611f\u8c22\u60a8\u7684\u56de\u590d\uff01\u6539\u4e3aJSONArray \u662f\u53ef\u4ee5\u89e3\u6790\u7684\u3002\u4f46\u662f\u5462\uff0c\u6211\u8fd9\u8fb9\u662f\u8fd9\u6837\u8bbe\u8ba1\u7684\uff0c\u6574\u4e2a\u9879\u76ee\u4e2d\uff0c\u53ea\u6709AppMessage\u7c7b\uff0c\u5176\u4e2d JSONObject data\u662f\u7528\u6765\u63a5\u6536\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u3002. \u55ef\u3002\u8c22\u8c22. ",
    "yinxiaoling": "\u5bf9\u7684\uff0c\u65b9\u6cd5\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528\uff0c\u4e00\u884c\u884c\u7684put\u4e00\u5806\u540d\u503c\u5bf9\u548cmap\u4f3c\u7684\u4e0d\u65b9\u4fbf\u3002. ",
    "UncleY": "\u4f60\u53ef\u4ee5\u81ea\u5df1\u5199\u4e2a\u7c7b\u7ee7\u627ffastjson\u7684jsonobject\u5373\u53ef\uff0c\u5728\u91cc\u9762\u6784\u9020builder\u6a21\u5f0f\u8fd4\u56de\u5c31\u53ef\u4ee5\u4e86. ",
    "lduffy69": "\u7ecf\u6d4b\u8bd5\uff0c\u91c7\u7528JSONPath\u683c\u5f0f\u4ecd\u7136\u65e0\u6cd5Set\u6216\u8005Read\nJsonPath.read(jsonString, \"$.['valid.key.with.dot']\")\uff1b\u65e0\u6cd5\u83b7\u53d6. @wenshao this works for me\n\u4e0d\u8fc7\u786e\u5b9e\u50cf\u60a8\u8bf4\u7684\uff0c\u5199\u6cd5\u4e0d\u591f\u53cb\u597d\uff0c\u4e0d\u80fd\u539f\u751f\u652f\u6301jsonpath\u7684\u590d\u6742\u683c\u5f0f\uff0c\u76ee\u524d\u5728\u8003\u8651\u7528com.jayway.jsonpath\u7684\u4e0b\u9762\u7684json-path\u5305,\u4e0d\u8fc7\u8fd9\u4e2a\u6846\u67b6\u76ee\u524d\u6ca1\u6709\u5185\u7f6efastjson\u4e2d\u7684\u7f13\u5b58\u8bbe\u8ba1\uff0c\u9700\u5f00\u53d1\u8005\u5355\u72ec\u53bb\u5b9e\u73b0\uff0c\u671f\u5f85\u60a8\u540e\u9762\u7684\u6539\u8fdb. ",
    "wolf51983": "JSONPath\u9664\u4e86\u652f\u6301\u4f7f\u7528\u201c.\u201d\u6765\u5206\u9694\uff0c\u8fd8\u652f\u6301\u4f7f\u7528\u201c[\u2018nodeName\u2019]\u201d\u3002\n\u8def\u5f84\u4e2d\u542b\u6709\u6570\u5b57\u65f6\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\u201c$['aaa'][1]['bbb']['101']['value']\u201d\u3002\n\u5bf9\u5e94\u8def\u5f84\u4e3a\uff1a$.aaa[1].bbb.101.value\n\u4f9b\u53c2\u8003\u3002. ",
    "llh6054": "\\\u672c\u8eab\u4e0d\u7b26\u5408json\u89c4\u8303\uff0c\u6bcf\u4e2a\u5de5\u5177\u7684\u652f\u6301\u90fd\u4e0d\u4e00\u6837\u3002\n\u6d4b\u8bd5\u4e86net.sf.json\u4f1a\u628a\u4e24\u4e2a\u90fd\u53bb\u6389\uff0c\u524d\u7aef\u7684\u8bddjson-handle\u4f1a\u4fdd\u7559\u4e00\u4e2a\uff0cFE\u52a9\u624b\u4fdd\u7559\u4e24\u4e2a\u3002\n\u592a\u60f3\u5f53\u7136\u4e86\uff0c\u8fd8\u662f\u5904\u7406\u6570\u636e\u5427\u3002. ",
    "JiangYongKang": "Ok, thx for your reminder, let's close it.. \u611f\u8c22\u5927\u4f6c!. ",
    "crazyrunsnail": "@kimmking \u5bf9\u4e8e\u5185\u5d4c\u7684\uff0c \u6bd4\u5982\u4e00\u4e2avo\u91cc\u9762\u6709List\\<Account> \uff0c\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u6837\u6709\u6548\u4e48?. ",
    "LuoCang": "Have you solved your problem?\nI have the same problem in java\u3002\nWhen I release my app\u3002. @shangfabao  \u6211\u7684\u7248\u672c\u4e5f\u662f1.2.47 \uff0cjava\u7248\u672c\uff0c \u6211debug\u8fd0\u884c\u9879\u76ee\u6ca1\u6709\u95ee\u9898\uff0c\u5728\u6b63\u5f0f\u6253\u5305\u8fd0\u884c\u540e\uff0c\u51fa\u73b0\u7684\u8fd9\u4e2a\u9519\u8bef\u3002. @wenshao . \u4f7f\u7528\u76841.2.47\u7248\u672c. ",
    "tianfuchao": "\u53d1\u751f\u540c\u6837\u9519\u8bef. ",
    "tbbrave": "\u53d1\u73b0\u540c\u6837\u95ee\u9898. ",
    "xcTorres": "\u540c\u6837\u7684\u95ee\u9898\uff0c\u600e\u4e48\u89e3\u51b3\u7684\u554a. ",
    "stashslash": "\u76f8\u540c\u7684\u95ee\u9898. ",
    "zhouchao910322": "\u76f8\u540c\u7684\u95ee\u9898. ",
    "sclrl220": "good. ",
    "Marviszhao": "@huwei  @sclrl220  \u8fd9\u79cd\u793a\u4f8b\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u8bf7\u95ee\u4e00\u4e0b\u5728\u53cd\u5e8f\u5217\u5316\u4e3abean \u65f6\u5982\u4f55\u4fdd\u7559\u4e3anull \u7684key\nObject jsonObject = JSON.parse(appParmsStr, SerializerFeature.IgnoreNonFieldGetter);. ",
    "everXu": "\u8bf7\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\u5462\uff1f\u600e\u4e48\u89e3\u51b3\u7684\uff1f. ",
    "zufuliu": "\u800c\u4e14\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8c03\u7528\uff1a\n```java\npublic final class MyBlobDeserializer implements ObjectDeserializer {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic <T> T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n    Object val = parser.parse();\n    if (val == null) {\n        return null;\n    }\n\n    return (T) TypeUtils.castToBytes(val);\n}\n\n@Override\npublic int getFastMatchToken() {\n    // TODO Auto-generated method stub\n    return JSONToken.LITERAL_STRING;\n}\n\n}\n@JSONType\npublic class TestEntity2 {\n    @JSONField(name=\"type\")\n    public int type;\n@JSONField(name=\"data\", deserializeUsing=MyBlobDeserializer.class)\npublic byte[] data;\n\n}\nTestEntity2 y4 = JSON.parseObject(j1, TestEntity2.class);\nLog.e(TAG, \"y4=\" + JSON.toJSONString(y4));\n\u5f97\u5230\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff1a\n04-27 09:06:39.943: E/xx(17158): y4={\"data\":\"HuYgMIxwfqdtvOJNv6kK025g5fh3yFHI2kaByO7udKk6FOBC3PGRWkGfwV0/vWQW6roN5ftKDHFZ3PWl0715OYue0rZj/VwrNsMvIL4MqTUNBBUGFU9SgZu87ss7RqmyijH6/sM968cK1Dv5U7Rrw79idl/hW8SILLn1YXvUa60=\",\"type\":800}\n``\n. \u4ece\u73b0\u8c61\u4e0a\u770b\uff0cBase64\u4e2d\u7684\u5b57\u7b26\u8f6c\u4e49\u4ee5\u540e\u90fd\u4e0d\u80fd\u6b63\u786e\u89e3\u6790\u3002\n\u6bd4\u5982\u628a=\u5199\u4e3a\\u003d\u3002. \u53e6\u5916\uff0cSerializerFeature.WriteSlashAsSpecial\u5bf9Base64\uff08\u6216\u5176\u4ed6\u65b9\u5f0f\uff09\u751f\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\u7684/\u4e0d\u751f\u6548\uff08\u751f\u6548\u53ef\u80fd\u4f1a\u4ea7\u751f\u517c\u5bb9\u6027\u95ee\u9898\uff09\uff0c\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97bug\u3002. \u6709\u7684JSON\u5e93\u539f\u751f\u4e0d\u652f\u6301byte[] -> Base64\u5c31\u6309\u4e0b\u9762\u7684\u6d41\u7a0b\u8f6c\u6362\uff1abyte[] -> Base64 Encoded String -> Escaped JSON String`\n\u5c31\u53ef\u80fd\u51fa\u73b0\u3002\n\u6bd4\u5982iOS\u5ba2\u6237\u7aef\u4f7f\u7528NSJSONSerialization, \u7531\u4e8eNSJSONSerialization\u4e0d\u652f\u6301NSData (\u76f8\u5f53\u4e8eJava\u4e2d\u7684byte[]), \u5c31\u5f97\u63d0\u524d\u8f6c\u4e3aBase64\u5b57\u7b26\u4e32\u3002\n\u5176\u4ed6\u4e00\u4e9b\u6ca1\u6709\u539f\u751f\u652f\u6301byte[]\u7684JSON\u5e93\uff0c\u6bd4\u5982GSON\u4e5f\u5f97\u63d0\u524d\u8f6c\u4e3aBase64\u5b57\u7b26\u4e32\u3002. ",
    "lipanpan": "1\u3001fastjson\u5bf9xss\u5b89\u5168\u505a\u4e86\u5904\u7406  \u2014\u2014 \u5177\u4f53\u662f\u6307\u4ec0\u4e48\uff1f\uff0c\u600e\u4e48\u505a\u7684\u5440\uff1f\n2\u3001\u53ef\u4ee5\u8003\u8651\u8d4b\u503c\u4ee5\u540e\u5904\u7406 \u2014\u2014 \u6211\u76ee\u524d\u7684\u505a\u6cd5\u662f\uff0c\u62ff\u5230Bean\u4e4b\u540e\uff0c\u5728\u53cd\u5c04\u8fdb\u884c\u5904\u7406\uff0c\u6211\u5728\u60f3\u80fd\u4e0d\u80fd\u5728fastjson\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5c31\u652f\u6301\u5d4c\u5165\u6211\u7684\u8fd9\u79cd\u8f6c\u6362\u903b\u8f91\uff0c\u907f\u514d\u540e\u7eed\u7684\u6027\u80fd\u635f\u8017. ",
    "lxl94999": "    \nMap<String,Object> resultMap = new HashMap();\nresultMap.put(\"page\",pageInfo);\nresultMap.put(\"detailList\",detailList);\n\n    logger.info(\"pageInfo:{}\",JSONObject.toJSONString(pageInfo));\n    logger.info(\"list:{}\",JSONObject.toJSONString(pageInfo.getList()));\n\n    for(HashMap h : pageInfo.getList()) {\n        logger.info(\"h:{}\",h);\n    }\n\n\u8fd9\u6837\u8f93\u51fa\u90fd\u662f\u6b63\u5e38\u7684\u2026\u2026\n\u4f46\u662f \nreturn JSONObject.toJSONString(resultMap); \n\u5c31\u662f\u89e3\u6790\u4e0d\u51fa\u6765\u2026\u2026. \u5389\u5bb3\uff0c\u53c8\u5b66\u4f1a\u4e00\u62db. ",
    "zqr95518": "\u540c\u95ee\u9898\uff0c\u5e94\u8be5\u662f\u5e8f\u5217\u5316\u6df1\u5ea6\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u6539\u3002. \u5df2\u89e3\u51b3\uff0ctoJSONString\u540e\u9762\u52a0SerializerFeature.DisableCircularReferenceDetect\u5c31\u597d\u4e86\uff0c\u88ab\u5faa\u73af\u68c0\u6d4b\u963b\u6b62\u5e8f\u5217\u5316\u4e86\u3002 @lxl94999 . \u4e00\u6837\u7684\u95ee\u9898 1.2.52\n2018-11-27 14:13:33.711 13410-13410/com.les.tdcode E/AndroidRuntime: FATAL EXCEPTION: main\n    Process: com.les.tdcode, PID: 13410\n    java.lang.NoClassDefFoundError: Failed resolution of: Ljavax/xml/bind/annotation/XmlAccessorType;\n        at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:811)\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.<init>(JavaBeanDeserializer.java:48)\n        at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(ParserConfig.java:772)\n        at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:621)\n        at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:393)\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1210)\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:826)\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:1028)\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:1281)\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1218)\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:826)\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:785)\n        at com.alibaba.fastjson.JSONObject.getObject(JSONObject.java:143)\n        at com.les.tdcode.activity.construct.ConstructViewActivity$2.onResponse(ConstructViewActivity.java:69)\n        at com.les.tdcode.activity.construct.ConstructViewActivity$2.onResponse(ConstructViewActivity.java:66)\n        at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:67)\n        at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:30)\n        at com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable.run(ExecutorDelivery.java:99)\n        at android.os.Handler.handleCallback(Handler.java:808)\n        at android.os.Handler.dispatchMessage(Handler.java:101)\n        at android.os.Looper.loop(Looper.java:166)\n        at android.app.ActivityThread.main(ActivityThread.java:7523)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:245)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:921)\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"javax.xml.bind.annotation.XmlAccessorType\" on path: DexPathList[[zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/base.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_dependencies_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_resources_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_0_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_1_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_2_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_3_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_4_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_5_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_6_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_7_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_8_apk.apk\", zip file \"/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_slice_9_apk.apk\"],nativeLibraryDirectories=[/data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/lib/arm64, /system/lib64, /vendor/lib64, /product/lib64]]\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:93)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\n        at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:811)\u00a0\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.<init>(JavaBeanDeserializer.java:48)\u00a0\n        at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(ParserConfig.java:772)\u00a0\n        at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:621)\u00a0\n        at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:393)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1210)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:826)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:1028)\u00a0\n        at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:1281)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:1218)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:826)\u00a0\n        at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:785)\u00a0\n        at com.alibaba.fastjson.JSONObject.getObject(JSONObject.java:143)\u00a0\n        at com.les.tdcode.activity.construct.ConstructViewActivity$2.onResponse(ConstructViewActivity.java:69)\u00a0\n        at com.les.tdcode.activity.construct.ConstructViewActivity$2.onResponse(ConstructViewActivity.java:66)\u00a0\n        at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:67)\u00a0\n        at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:30)\u00a0\n        at com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable.run(ExecutorDelivery.java:99)\u00a0\n        at android.os.Handler.handleCallback(Handler.java:808)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:101)\u00a0\n        at android.os.Looper.loop(Looper.java:166)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:7523)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:245)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:921)\u00a0\n        Suppressed: java.io.IOException: No original dex files found for dex location /data/app/com.les.tdcode-K6iObTGlXQ92slJjRNpVlw==/split_lib_resources_apk.apk\n        at dalvik.system.DexFile.openDexFileNative(Native Method)\n        at dalvik.system.DexFile.openDexFile(DexFile.java:353)\n        at dalvik.system.DexFile.<init>(DexFile.java:100)\n2018-11-27 14:13:33.713 13410-13410/com.les.tdcode E/AndroidRuntime:     at dalvik.system.DexFile.<init>(DexFile.java:74)\n        at dalvik.system.DexPathList.loadDexFile(DexPathList.java:374)\n        at dalvik.system.DexPathList.makeDexElements(DexPathList.java:337)\n        at dalvik.system.DexPathList.<init>(DexPathList.java:157)\n        at dalvik.system.BaseDexClassLoader.<init>(BaseDexClassLoader.java:65)\n        at dalvik.system.PathClassLoader.<init>(PathClassLoader.java:64)\n        at com.android.internal.os.PathClassLoaderFactory.createClassLoader(PathClassLoaderFactory.java:43)\n        at android.app.ApplicationLoaders.getClassLoader(ApplicationLoaders.java:75)\n        at android.app.ApplicationLoaders.getClassLoader(ApplicationLoaders.java:38)\n        at android.app.LoadedApk.createOrUpdateClassLoaderLocked(LoadedApk.java:719)\n        at android.app.LoadedApk.getClassLoader(LoadedApk.java:752)\n        at android.app.LoadedApk.getResources(LoadedApk.java:1005)\n        at android.app.ContextImpl.createAppContext(ContextImpl.java:2489)\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6491)\n        at android.app.ActivityThread.-wrap2(Unknown Source:0)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2066)\n        at android.os.Handler.dispatchMessage(Handler.java:108)\n                ... 5 more. @zwonb \u6682\u65f6\u628a\u7248\u672c\u56de\u9000\u52301.2.47\u5c31\u6ca1\u6709\u95ee\u9898. ",
    "kongweiteng": "\u627e\u5230\u4e86\u89e3\u51b3\u529e\u6cd5\uff0c\u4f7f\u7528\u4e86fast json \u7684filter. \u660e\u5929\u7ed9\u4f60\u8d34\u4ee3\u7801. @Configuration\npublic class FastJsonConverterConfiguration {\nPropertyFilter filter = new PropertyFilter() {\n\n    @Override\n    public boolean apply(Object source, String name, Object value) {\n        //\u901a\u8fc7\u53cd\u5c04\u751f\u6210\u5b9e\u4f53\u7c7b\n        Object[] filedValues = Reflections.getFiledValues(source);\n        if(filedValues.length>1){\n            for (Object object:filedValues){\n                if(object!=null){\n                    return true;\n                }\n            }\n        }else{\n            return true;\n        }\n        return false;\n    }\n};\n\n\n\n@Bean\npublic HttpMessageConverters fastJsonHttpMessageConverters(){\n    //1.\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aconvert\u8f6c\u6362\u6d88\u606f\u7684\u5bf9\u8c61;\n    FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();\n    //2:\u6dfb\u52a0fastJson\u7684\u914d\u7f6e\u4fe1\u606f;\n    FastJsonConfig fastJsonConfig = new FastJsonConfig();\n    fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat, SerializerFeature.WriteNullStringAsEmpty,SerializerFeature.WriteNullListAsEmpty,SerializerFeature.WriteMapNullValue);\n\n    fastJsonConfig.setSerializeFilters(filter);\n\n\n    //3\u5904\u7406\u4e2d\u6587\u4e71\u7801\u95ee\u9898\n    List<MediaType> fastMediaTypes = new ArrayList<>();\n    fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n    //4.\u5728convert\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f.\n    fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);\n    fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);\n    HttpMessageConverter<?> converter = fastJsonHttpMessageConverter;\n    return new HttpMessageConverters(converter);\n\n}\n\n}. @duwei54 \u8981\u4e0d\u4f60\u52a0\u6211\u5fae\u4fe1\u5427\uff0c\uff0c\uff0c17346518261. ",
    "jsyzthz": "@kongweiteng \u8bd5\u4e86\u4e0b\u4f60\u7684\u4ee3\u7801\u786e\u5b9e\u4e0d\u884c\u3002. ",
    "LoveSleepBear": "\u76f4\u63a5\u653e\u516512\u4e2a\u5143\u7d20\u7684\u987a\u5e8f\n{\n    \"legalName\": \"4\",\n    \"linkPhone\": \"6\",\n    \"entBankPhone\": \"11\",\n    \"entName\": \"2\",\n    \"orgCode\": \"3\",\n    \"entAccount\": \"1\",\n    \"legalIdCard\": \"5\",\n    \"bankDeposit\": \"9\",\n    \"linkIdCard\": \"7\",\n    \"entBankCardNo\": \"10\",\n    \"authTime\": \"12\",\n    \"linkName\": \"8\"\n}. \u653e\u516513\u4e2a\u5143\u7d20\uff0c\u4e4b\u540e\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u4e4b\u540e\u518d\u91cd\u6784\u8fd9\u4e2ajson\u5bf9\u8c61\u7684\u987a\u5e8f\n{\n    \"legalName\": \"4\",\n    \"linkPhone\": \"6\",\n    \"entBankPhone\": \"11\",\n    \"entName\": \"2\",\n    \"orgCode\": \"3\",\n    \"legalIdCard\": \"5\",\n    \"bankDeposit\": \"9\",\n    \"entAccount\": \"1\",\n    \"linkIdCard\": \"7\",\n    \"entBankCardNo\": \"10\",\n    \"authTime\": \"12\",\n    \"linkName\": \"8\"\n}. \u91cd\u6784\u4ee3\u7801\n /*\n     * \u628a13\u4e2a\u53c2\u6570json\u5bf9\u8c61\u53bb\u9664\u4e00\u4e2a\uff0c\u6539\u4e3a12\u4e2a\n     * @return\n     /\n    public JSONObject removeFastJson_12(){\n        // \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u83b7\u53d613\u4e2a\u53c2\u6570\u7684json\uff0c\u987a\u5e8f\u4e0e12\u4e2a\u7684\u4e00\u81f4\n        JSONObject jsonObject = fastJson_13();\n        jsonObject.remove(\"userCategory\");\n        Set> entries = jsonObject.entrySet();\n        JSONObject object = new JSONObject();\n        for (Map.Entry entry : entries) {\n            object.put(entry.getKey(),entry.getValue());\n        }\n        return object;\n    }. \u5b8c\u6574\u7684\u6d4b\u8bd5\u4ee3\u7801\uff1a\npackage com.syb.demo.test_fastjson;\nimport com.alibaba.fastjson.JSONObject;\nimport java.util.Map;\nimport java.util.Set;\n/*\n * @author suyibo\n * @date 2018/5/8 15:49\n /\npublic class TestFastJsonOOM {\nprivate final String entAccount=\"1\";\nprivate final String entName=\"2\";\nprivate final String orgCode=\"3\";\nprivate final String legalName=\"4\";\nprivate final String legalIdCard=\"5\";\nprivate final String linkPhone=\"6\";\nprivate final String linkIdCard=\"7\";\nprivate final String linkName=\"8\";\nprivate final String bankDeposit=\"9\";\nprivate final String entBankCardNo=\"10\";\nprivate final String entBankPhone=\"11\";\nprivate final String authTime=\"12\";\nprivate final String userCategory=\"13\";\n\n\npublic static void main(String[] args) {\n    TestFastJsonOOM testFastJsonOOM = new TestFastJsonOOM();\n    JSONObject fastJson12 = testFastJsonOOM.fastJson_12();\n    JSONObject removeFastJson12 = testFastJsonOOM.removeFastJson_12();\n    System.out.println(\"-------------12\u4e2a\u539f\u751f\u53c2\u6570-------------\");\n    System.out.println(fastJson12);\n    System.out.println(\"--------------------------------------\");\n    System.out.println(\"-------------13\u4e2a\u79fb\u9664\u4e00\u4e2a\u53c2\u6570-------------\");\n    System.out.println(removeFastJson12);\n    System.out.println(\"--------------------------------------\");\n\n}\n\n/**\n * 12\u4e2a\u53c2\u6570\u7684json\u5bf9\u8c61\n */\npublic JSONObject fastJson_12(){\n    JSONObject jsonObject = new JSONObject();\n    jsonObject.put(\"entAccount\",entAccount);\n    jsonObject.put(\"entName\",entName);\n    jsonObject.put(\"orgCode\",orgCode);\n    jsonObject.put(\"legalName\",legalName);\n    jsonObject.put(\"legalIdCard\",legalIdCard);\n    jsonObject.put(\"linkPhone\",linkPhone);\n    jsonObject.put(\"linkIdCard\",linkIdCard);\n    jsonObject.put(\"linkName\",linkName);\n    jsonObject.put(\"bankDeposit\",bankDeposit);\n    jsonObject.put(\"entBankCardNo\",entBankCardNo);\n    jsonObject.put(\"entBankPhone\",entBankPhone);\n    jsonObject.put(\"authTime\",authTime);\n    return jsonObject;\n}\n\n/**\n * 13\u4e2a\u53c2\u6570\u7684json\u5bf9\u8c61\n * @return\n */\npublic JSONObject fastJson_13(){\n    JSONObject jsonObject = fastJson_12();\n    jsonObject.put(\"userCategory\",userCategory);\n    return jsonObject;\n}\n\n/**\n * \u628a13\u4e2a\u53c2\u6570json\u5bf9\u8c61\u53bb\u9664\u4e00\u4e2a\uff0c\u6539\u4e3a12\u4e2a\n * @return\n */\npublic JSONObject removeFastJson_12(){\n    JSONObject jsonObject = fastJson_13();\n    jsonObject.remove(\"userCategory\");\n    Set<Map.Entry<String, Object>> entries = jsonObject.entrySet();\n    JSONObject object = new JSONObject();\n    for (Map.Entry<String, Object> entry : entries) {\n        object.put(entry.getKey(),entry.getValue());\n    }\n    return object;\n}\n\n}\n. ",
    "TimeEraser": "\n\u8fd9\u6837\u5199\u4e5f\u4e0d\u884c\uff0c\u540c\u6837\u7684\u9519\u8bef\uff0c\u662fComparable\u6709\u7279\u6b8a\u5904\u7406\uff1f. ",
    "jasonjoo2010": "update:\nI have seen the latest changes in 1.2.48 and it do make sense for BEANS serialization.\nBut it still don't make sense in serialization of Maps.\nI make some small changes to make it in PR #1837. update:\nI have seen the latest changes in 1.2.48 and it do make sense for BEANS serialization.\nBut it still don't make sense in serialization of Maps.\nI make some small changes to make it in PR #1837. ",
    "SnowOnion": "\u4f60\u52a0\u7684 test case \u91cc\u7684 JSON \u4e32\u662f \"{\\\"sources\\\":\\\"5,6\\\"}\" \uff0c\u5bf9\u5e94\u4e86 JSON {\"sources\": \"5,6\"}\u3002\n\u6211\u5728\u4f60 commit \u4e4b\u524d\u7684\u7248\u672c af3651681be2538878d41ae809dfcf64704c315d \u8bd5\u4e86\uff0c\u4ee5 class ListPropertyBean { List<Integer> sources; } \u4e3a parsing \u76ee\u6807\uff0cparse \"{\\\"sources\\\":\\\"5,6\\\"}\" \u65f6\u786e\u5b9e\u4e0d\u4f1a\u629b\u51fa\u4efb\u4f55 exception\uff0c\u800c\u662f\u5f97\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u5bf9\u8c61\uff08\u8fd9\u91cc\u5199\u5b83\u8f6c\u6210 JSON \u540e\u7684\u5f62\u5f0f\uff09\uff1a{\"sources\": [56]}\u3002\u5403\u60ca\u3002\n\u4f46\u6709\u70b9\u513f\u6000\u7591\u8fd9\u662f\u4e2a\u7528\u4e8e\u6240\u8c13\u201c\u5bb9\u9519\u201d\u7684 feature\uff0c\u5982\uff1a\nhttps://github.com/alibaba/fastjson/issues/825\nhttps://github.com/alibaba/fastjson/issues/1853\n\u867d\u7136\u8fd9\u4fe9 issue \u5c1a\u672a\u88ab\u5b9e\u73b0\u6216\u8ba8\u8bba\u3002\n\u9664\u6b64\u4e4b\u5916\u6211\u8fd8\u770b\u4e86\u4e00\u4e9b issue\uff0c\u60f3\u5230\uff0c\u8fd9\u4e9b\u8fd8\u662f JSON [de]serializer \u7684\u804c\u8d23\u8303\u56f4\u5417 ( \u00b4_\u309d)\n. \u4f60\u80fd\u5426\u786e\u5b9a\u4e00\u4e2abyte[] bs\uff0c\u4f7f\u5f97JSON.parse(bs, Feature.AllowISO8601DateFormat)` \u6709\u65f6\u4f1a\u629b\u5f02\u5e38\uff1f\n\u80fd\u5426\u8fdb\u4e00\u6b65\u7ed9\u4e00\u4e2a\u4f60\u89c9\u5f97\u6709\u53ef\u80fd\u7684\u590d\u73b0\u65b9\u5f0f\uff1f. ",
    "sid-ihycq": "\u53ea\u8981\u6539\u6210\nreturn javaObject;\n\u5c31\u884c\u4e86\u3002\n\u600e\u4e48\u8fd9\u4e48\u4e45\u90fd\u6ca1\u6709\u4eba\u56de\u590d\u554a\u2026\u2026. ",
    "ax1129": "\"2018-05-20 00:50:41\"\n\"2018-05-20\"\n\"00:50:41.394\". ",
    "lousama": "\u6309\u987a\u5e8f\u8f93\u51fa\u4e1a\u52a1\u573a\u666f\u4f1a\u9700\u8981\u5230\uff0c\u6bd4\u5982\u662f\u4e3a\u4e86\u751f\u6210\u4e00\u4e9b\u62a5\u8868\u800c\u4f20\u9012\u6216\u4fdd\u5b58\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8981\u4fdd\u8bc1\u683c\u5f0f\u548c\u5217\u7684\u987a\u5e8f\u4e0e\u4e1a\u52a1\u9700\u6c42\u4e00\u81f4\n. ",
    "HalfWater": "@lousama \u6b63\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u627e\u4e86\u4e00\u5708\u5e76\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u6bd4\u8f83\u76f4\u63a5\u7684\u914d\u7f6e\uff0c\u5b9e\u73b0\u751f\u6210\u7684json\u987a\u5e8f\u548c\u5b9a\u4e49\u7684pojo\u4e2d\u7684field\u7684\u987a\u5e8f\u4e00\u81f4\u7684\uff0c\u4e0d\u8bb8\u8981\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c\u4e5f\u4e0d\u9700\u8981\u6309\u540d\u79f0\u6392\u5e8f\u7684\u3002. ",
    "mofee": "\u6211\u662f\u8fd9\u6837\u8bbe\u7f6e\u7684\uff1a JSON.DEFAULT_GENERATE_FEATURE = JSON.DEFAULT_GENERATE_FEATURE & ~SerializerFeature.SortField.getMask();\n\u4f46\u662f\u4e5f\u6ca1\u6709\u751f\u6548\uff0c\u6240\u4ee5\u6b63\u8981\u6765\u63d0\u95ee\u9898. ",
    "CielDai": "\u548c\u7b2c\u4e09\u65b9\u5bf9\u63a5api\u65f6\u8fd4\u56de\u7684\u65f6\u95f4\u683c\u5f0f\uff0c\u5bf9\u65b9\u662f\u7528C#\u5f00\u53d1\u7684\u3002\n\u76ee\u524d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528LocalDateTime\n```java\n@JSONField(format = \"yyyy-MM-dd'T'HH:mm:ss.SSSSSSSXXX\")\nprivate LocalDateTime xxxDate;\n```\n\u4f46\u662f\u8fd9\u6837\u4e5f\u53ea\u80fd\u89e3\u6790\u548cS\u4e2a\u6570\u76f8\u540c\u7684\u65f6\u95f4\n2018-05-21T14:39:44.9077913+08:00 \u89e3\u6790\u6210\u529f\n2018-05-21T14:39:44.907791+08:00 \u89e3\u6790\u5931\u8d25\n\n\u7b2c\u4e09\u65b9\u8fd4\u56de\u7684S\u957f\u5ea6\u53c8\u4e0d\u56fa\u5b9a\uff0c\u6bd4\u8f83\u96be\u89e3\u51b3\n. ",
    "HarrisHan": "@zhongweng  \njava\n public void setisBool(Boolean bool) {\n            isBool = bool;\n        }. ",
    "zhongweng": "\u5f53\u6211\u4eec\u77e5\u9053\u95ee\u9898\u539f\u56e0\u540e\uff0c\u907f\u514d\u95ee\u9898\u4ea7\u751f\uff0c\u4e00\u822c\u4f1a\uff1a\n1 \u7ed5\u5f00\uff0c\u4e0d\u89e6\u53d1\n2 \u4fee\u6539\u95ee\u9898\n\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e0d\u662f\u65e0\u6cd5\u907f\u514d\u7684\uff0c\u800c\u662f\u53ef\u901a\u8fc7\u6280\u672f\u65b9\u6cd5\u89e3\u51b3\u7684\uff0c1 \u548c2 \u90fd\u884c\n\u53ea\u662f\u6b64\u573a\u666f2\u6210\u672c\u8f83\u5927. ",
    "201314": "@zxk175 \u611f\u89c9\u8fd9\u6837\u6709\u70b9\u53d6\u5de7. @zxk175 \u8fd9\u6837\u64cd\u4f5c\uff0c\u5168\u5c40\u7684\u914d\u7f6e\u65e0\u6cd5\u751f\u6548\uff0c\u76f4\u63a5\u7ed9\u8fd4\u56delong\u7c7b\u578b\u3002\u8fd8\u8981\u6bcf\u4e2a\u53bb\u914d\u7f6e\uff0c\u8d3c\u9ebb\u70e6\u3002. \u76f4\u63a5\u5728github\u4e0a\u7f16\u8f91\u4fee\u6539\uff0c\u4e5f\u901a\u8fc7\u4e0d\u4e86\u2026\u2026. \u76f4\u63a5\u5728github\u4e0a\u7f16\u8f91\u4fee\u6539\uff0c\u4e5f\u901a\u8fc7\u4e0d\u4e86\u2026\u2026. ",
    "cxy376700398": "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002format\u503c\u4f20\u8fdb\u53bb\u4e86\uff0c\u4f46\u662f\u5199\u6b7b\u4e86\uff0c\u4f18\u5148\u4f7f\u7528\u5168\u5c40\u8bbe\u7f6e\u7684dateFormat\u3002\u5f88\u86cb\u75bc\u3002. ",
    "gaojiecai": "\u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u592a\u591a\uff0c\u6ca1\u529e\u6cd5\u4e00\u4e2a\u4e2a\u6392\u67e5\uff0c\u9519\u8bef\u7684log\u53c8\u5b9a\u4f4d\u4e0d\u5230\u5177\u4f53\u54ea\u4e2a\u6570\u636e\u5f02\u5e38. 05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err: Caused by: java.lang.NumberFormatException: For input string: \"7.jpg5b.jpgg\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\n05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err:     at java.lang.Integer.parseInt(Integer.java:521)\n05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err:     at java.lang.Integer.parseInt(Integer.java:556)\n05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err:     at java.math.BigDecimal.(BigDecimal.java:336)\n05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err:     at java.math.BigDecimal.(BigDecimal.java:390)\n05-24 17:54:40.298 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.JSONLexerBase.scanFieldDecimal(JSONLexerBase.java:3594)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:521)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:271)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:267)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:86)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:745)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:271)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:267)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:     at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:661)\n05-24 17:54:40.299 17279-23885/com.thestore.main W/System.err:  ... 30 more\n. ",
    "runhuang": "@ma349432587 \u6b63\u5e38\u7684json\u683c\u5f0f\u786e\u5b9e\u6ca1\u8d70\u81ea\u5df1\u5b9a\u4e49\u7684\u89e3\u6790\u5668\uff0c\u8981\u4e48\u662fasm\u751f\u6210\u7684\u89e3\u6790\u5668\uff0c\u8981\u4e48\u662fjavaBeanDeserializer\u3002\u5947\u602a\u7684\u662f\u5f53\u6211\u8f93\u5165\u4e00\u4e2a{\"notexist\":\"\",\"id\":\"001\",\"desc\":\"\"}\u65f6\uff0c\u5c31\u80fd\u8fdb\u81ea\u5df1\u5b9a\u4e49\u7684\u89e3\u6790\u5668\u3002. ",
    "dikewen": "\u5df2\u627e\u5230\u539f\u56e0\uff0cJSONObject\u88ab\u591a\u4e2a\u7ebf\u7a0b\u4f7f\u7528\uff0cJSONObject\u57fa\u4e8eHashMap\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u3002. ",
    "fatelvde": "\u539f\u7248\u672c1.2.32\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u66f4\u65b0\u52301.2.48\u53d1\u73b0\u7684\u95ee\u9898\n. ",
    "tomriddly": "\u5efa\u8bae\u7c7b\u4f3c\u8fd9\u79cd\u7684\u5355function\u7684interface\u90fd\u52a0\u4e0a\u7c7b\u4f3c\u7684annotation\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u7684\u652f\u63011.8+\u7684java. ",
    "hendrawd": "@kimmking Actually there is an error in my android project. Version that worked well for me is implementation 'com.alibaba:fastjson:1.1.61.android'. When I upgrade to the newest android version, which is implementation 'com.alibaba:fastjson:1.1.68.android', an error will be thrown:\ncom.alibaba.fastjson.JSONException: default constructor not found.\nMaybe related to https://github.com/alibaba/fastjson/issues/1697 and https://github.com/alibaba/fastjson/issues/1804, but I am not using kotlin data class or java POJO like the referenced issues.. And also i found that TypeReference for List is not working for kotlin data class or kotlin class. Maybe related to #1697, #1804 and #1881. ",
    "DaWaJueJi": "\u6211\u4e5f\u78b0\u5230\u4e86\uff0c\u8bf7\u95ee\u89e3\u51b3\u4e86\u5417. ",
    "cnzgray": "\u8be5\u95ee\u9898\u4e0e\u4e4b\u524d\u7684 #376 \u76f8\u4f3c\uff0c\u6211\u5df2\u7ecf\u5b8c\u6210\u4fee\u590d\uff0c\u8bf7\u8bc4\u4f30PR\u8bf7\u6c42\u3002. ",
    "BoomManPro": "\u6709\u4e2a\u95ee\u9898\u54c8\uff0c\u5982\u4f55\u8bbe\u7f6e\u8fd4\u56de\u65f6\u95f4\u6233\uff0c\u56e0\u4e3a\u4e4b\u524d\u548c\u524d\u7aef\u6c9f\u901a\u8fd4\u56de\u65f6\u95f4\u6233\uff0c\u73b0\u5728\u7528\u7684\u7248\u672c\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u5982\u4f55\u8fd4\u56de\u65f6\u95f4\u6233\u5462\u3002. ",
    "Jusenr": "\u8be6\u60c5  \u76f8\u540cAPI\uff0c\u5206\u522b\u7528fastJson\u548cgson \n......\n@Override public void onSuccess(boolean intermediate, JSONObject response) {\n String content = response.toJSONString(); \nLog.i(TAG, \"\u767b\u5f55: \" + content); }\n......\n//fastJson \n    @FormUrlEncoded\n    @POST(BaseApi.Url.URL_GETALLAREAANDCITY)\n    Call<JSONObject> getAllAreaAndCity(@FieldMap Map<String, String> map);\n\u5e8f\u5217\u5316\u540e\uff08response.toJSONString()\uff09\u6570\u636e\uff1a\n{ \"message\": \"\u64cd\u4f5c\u5931\u8d25\", \"statusCode\": 300.0 }\n\n......\n@Override public void onSuccess(boolean intermediate, JsonObject response) {\n String content = response.toString(); \nLog.i(TAG, \"\u767b\u5f55: \" + content); }\n......\n//gson\n    @FormUrlEncoded\n    @POST(BaseApi.Url.URL_GETALLAREAANDCITY)\n    Call<JsonObject> getAllAreaAndCity1(@FieldMap Map<String, String> map);\n\u5e8f\u5217\u5316\u540e\uff08response.toString()\uff09\u6570\u636e\uff1a\n{ \"message\": \"\u64cd\u4f5c\u5931\u8d25\", \"statusCode\": 300 }\n\u5982\u4f55\u8bbe\u7f6e\u8ba9\u4ed6\u4e0d\u4f1a\u81ea\u52a8\u8f6c\u6362\u5462\uff1f\ncompile 'com.alibaba:fastjson:1.2.36'\n. @kimmking  { \"message\": \"\u64cd\u4f5c\u5931\u8d25\", \"statusCode\": 300 }. ",
    "qianxingchuan": "\u56e0\u4e3a\u6211\u5f53\u524d\u4f7f\u7528fastjson\u6765\u4f5c\u4e3a\u7f51\u5173\u5c42\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u6240\u4ee5\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6240\u6709\u4e1a\u52a1\u5c42\u7684\u9886\u57df\uff0c\u8fd9\u8fb9\u4f60\u8bf4\u7684\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5e94\u8be5\u600e\u4e48\u5f04\uff1f\u80fd\u7ed9\u4e2a\u6837\u4f8b\u4e48\uff1f@kimmking. ",
    "Sailfishc": "\u4e4b\u524d\u6e29\u5c11\u7ed9\u4e86\u6587\u6863\uff0c\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u6709\u4e9b\u7528\u6cd5\u6ca1\u6709\u5f88\u597d\u7684\u4f7f\u7528\uff0c\u611f\u8c22. ",
    "cj96248": "@hqw5566 \nPlease help update your config code to below: \nSerializeConfig.getGlobalInstance().addFilter(Test.class, new MValueFilter());\nNote that the Filter is the clazz you are serializing, not the aim clazz.. Your code can't tack effect as you can't parse Object to Array (List).\n```java\n    public static void main(String[] args) {\n        String json = \"{\\\"channelId\\\":\\\"1\\\",\\\"channelName\\\":\\\"\u65b0\u95fb \\\",\\\"contents\\\":[{\\\"articleId\\\":\\\"11\\\",\\\"articleName\\\":\\\"111\\\"},{\\\"articleId\\\":\\\"22\\\",\\\"articleName\\\":\\\"222\\\"}]}\";\n        Channel channel = JSON.parseObject(json, new TypeReference>(){});\n        List article = channel.getContents();\n        article.stream().forEach(System.out::println);\n    }\n```\nYou can using this to do what you want.\n@xiabobin . \u7c7b\u578b\u5f15\u7528\u5fc5\u987b\u5f3a\u5236\u6307\u5b9a\u76ee\u6807\u5bf9\u8c61\u3002\n\u4f5c\u8005\u5728TypeReference\u6ce8\u91ca\u90e8\u5206\u6709\u8bf4\u660e\uff0c\u8fd9\u4e2aTypeReference\u662ffastjson\u4e2d\u63d0\u4f9b\u7684\uff0c\u8bf7\u9075\u5b88\u5176\u7ea6\u5b9a\u3002\n@MrshaoGx . ",
    "hqw5566": "@cj96248  if i want to use all clazz and global config, What shall I do?. ",
    "jschyz": "\u4f60\u89e3\u51b3\u4e86\u5417\uff1f\u6211\u4eca\u5929\u4e5f\u9047\u5230\u4e86\uff0c\u5751\u6b7b\u6211\u4e86. > \u4f60\u89e3\u51b3\u4e86\u5417\uff1f\u6211\u4eca\u5929\u4e5f\u9047\u5230\u4e86\uff0c\u5751\u6b7b\u6211\u4e86\n\u670d\u52a1\u8fd8\u672a\u5b8c\u5168\u542f\u52a8\u65f6\uff0cdubbo\u670d\u52a1\u5df2\u7ecf\u6ce8\u518c\u5230zk\u4e0a\uff0c\u5176\u5b83\u670d\u52a1\u4fbf\u8bf7\u6c42\u8fdb\u6765\u4e86\uff0c\u5bfc\u81f4\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f53\u88ab\u52a0\u8f7d\u5230\u7f13\u5b58\u4e2d(\u4ee3\u7801\u7f16\u5199\u4e0d\u89c4\u8303\uff0c\u6b64\u5b9e\u4f53\u4e0d\u5e94\u8be5\u7528\u5728rpc\u63a5\u53e3\u4e2d)\uff0c\u4ece\u800c\u5bfc\u81f4\u670d\u52a1\u540e\u7eed\u542f\u52a8\u52a0\u8f7d\u7684\u914d\u7f6e\u672a\u751f\u6548\uff0c\u56e0\u6b64\u6ce8\u518c\u767b\u5f55\u8fd4\u56de\u7684\u5b9e\u4f53\u91cc\u9762\u5728json\u5e8f\u5217\u8868\u5316\u540e\u9996\u5b57\u6bcd\u53d8\u6210\u5c0f\u5199\uff0c\u5751- =. ",
    "babay523": "haha , use @JSONField(format = \"yyyy-MM-dd\") can make it work. ",
    "leveychen": "\u591a\u5927\u7684\u6570\u636e\u91cf\uff1f  \u6709\u4e2a\u4e13\u95e8\u5904\u7406\u5927\u6570\u636e\u91cf\u7684\u3002 \u4f60\u53ef\u4ee5\u627e\u627ewiki\u3002\u5177\u4f53\u5fd8\u8bb0\u4e86. @wenshao   \u80fd\u4e0d\u80fd\u4ecb\u7ecd\u4e00\u4e0b \u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5177\u4f53\u4f7f\u7528\u793a\u4f8b\uff1f\n\u76ee\u524d\u6211\u8fd9\u8fb9\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c  msg\u91cc\u9762\u5305\u542b msg (\u542b\u6709 type \u5b57\u6bb5)\uff0c msg \u5b9e\u73b0\u4e86 iMsg (\u6ca1\u6709type\u5b57\u6bb5) \uff0c\u7136\u540e\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u65f6\u5019 msg \u91cc\u9762\u7684 type \u5b57\u6bb5\u4e22\u5931\u4e86\u3002\n\u800c\u4e14\u8fd9\u4e2a iMsg \u662f\u522b\u4eba sdk \u91cc\u9762\u7684\u7c7b\uff0c\u6ca1\u529e\u6cd5\u4fee\u6539\u3002\u8be5\u5982\u4f55\u64cd\u4f5c\uff1f. @wenshao   \u80fd\u4e0d\u80fd\u4ecb\u7ecd\u4e00\u4e0b \u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5177\u4f53\u4f7f\u7528\u793a\u4f8b\uff1f\n\u76ee\u524d\u6211\u8fd9\u8fb9\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c  msg\u91cc\u9762\u5305\u542b msg (\u542b\u6709 type \u5b57\u6bb5)\uff0c msg \u5b9e\u73b0\u4e86 iMsg (\u6ca1\u6709type\u5b57\u6bb5) \uff0c\u7136\u540e\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u65f6\u5019 msg \u91cc\u9762\u7684 type \u5b57\u6bb5\u4e22\u5931\u4e86\u3002\n\u800c\u4e14\u8fd9\u4e2a iMsg \u662f\u522b\u4eba sdk \u91cc\u9762\u7684\u7c7b\uff0c\u6ca1\u529e\u6cd5\u4fee\u6539\u3002\u8be5\u5982\u4f55\u64cd\u4f5c\uff1f. @kimmking \n\u662f\u5728\u4ec0\u4e48\u5730\u65b9\u5904\u7406\uff1f\n\u8fd9\u4e2a CustomAttachment \u662f\u5728  MsgData \u91cc\u9762\u7684\u4e00\u4e2a\u5c5e\u6027\u3002 CustomAttachment \u672c\u8eab\u8fd8\u4e0d\u662f\u6700\u5916\u5c42\n\u80fd\u5426\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1f\n\u8c22\u8c22. @kimmking   thanks \uff0c\u76f4\u63a5\u7528 jsonObj \u9010\u4e2a\u83b7\u53d6\u7136\u540e\u8d4b\u503c\u7ed9\u4e0d\u540c\u96c6\u6210\u7c7b\u89e3\u51b3\u4e86. ",
    "MrshaoGx": "@cj96248 \n\u4e3a\u4ec0\u4e48 new TypeReference<List<T>>(){}.getType();\u8fd9\u6837\u662f\u4e0d\u884c\u7684\uff1f\njava.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to xxx\n\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\nnew TypeReference<List<Friend>>(){}.getType();\n\u8fd9\u6837\u624d\u53ef\u4ee5\n. ",
    "kelunik": "This feature would be really nice to have.. Actually, this feature seems to be supported in recent versions. :tada: . Sorry, I don't speak Chinese. Without this patch, all objects having a set() method will throw on deserialization, as described in the initial post. . ",
    "yinyuxuan2016": "\u8fd9\u662f\u6709\u6982\u7387\u7684,\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u95ee\u9898,\u4f46\u662f\u6211\u8fd9\u8fb9\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e24\u4e09\u6b21\u4e86,\u4f46\u662f\u6709\u53ef\u80fd\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u524d\u8c03\u7528\u4e86\u597d\u51e0\u5343\u6b21\u662f\u6ca1\u6709\u95ee\u9898\u7684. \u6211\u662f\u62ff\u5230\u7ebf\u4e0a\u65e5\u5fd7\u770b\u5230\u7684,\u540c\u6837\u7684\u63a5\u53e3,\u540c\u6837\u7684\u6570\u636e,\u524d\u4e00\u79d2\u662f\u4e0d\u5408\u9002\u7684,\u540e\u4e00\u79d2\u518d\u8bf7\u6c42\u5c31\u6b63\u5e38\u4e86,\u8fd9\u662f\u662f\u4f7f\u7528\u7684\u7248\u672c:1.2.22\u548c1.1.31\u4e24\u4e2a\u7248\u672c,\u8f6c\u6362\u4e3agson\u5c31\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898.\n\u8fd9\u662f\u6211\u770b\u5230\u7684\u4e00\u7bc7\u535a\u5ba2,https://blog.csdn.net/yangstarss/article/details/80705863,\u60c5\u51b5\u548c\u6211\u7c7b\u4f3c,\u521d\u6b65\u5224\u65ad\u662f\u5e8f\u5217\u5316\u95ee\u9898,\u5177\u4f53\u6ca1\u6709\u8fdb\u884c\u6d4b\u8bd5. \u5177\u4f53\u6ca1\u600e\u4e48\u53bb\u770b,\u56e0\u4e3a\u6700\u8fd1\u6bd4\u8f83\u5fd9,\u6ca1\u6709\u592a\u591a\u7684\u7ecf\u5386\u5728\u8fd9\u4e2a\u4e0a\u9762,\u6211\u5f97\u51fa\u7684\u7ed3\u8bba\u5728\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d,\u4f46\u662f\u5177\u4f53\u54ea\u4e2a\u9636\u6bb5\u6ca1\u6709\u5173\u6ce8. ",
    "fireinjava": "\n\u5347\u7ea7\u52301.2.47\u8bd5\u8bd5\u770b\uff1f\n\n\u6211\u4e5f\u78b0\u5230\u8fd9\u95ee\u9898\u3002\u6211fastjson\u662f1.2.54\u7684\uff0c\u4e0d\u8fc7\u5728\u53e6\u4e00\u4e2a\u6587\u7ae0\u91cc\u9762\u770b\u5230\u6e29\u5c11\u63d0\u793a\u8981\u7f13\u5b58\u7b2c\u4e8c\u4e2a\u53c2\u6570\u540e\u4e00\u8bed\u60ca\u9192\uff0c\u6539\u4e0b\u5c31\u597d\u4e86\nBase<XXX> obj = JSON.parseObject(message, new TypeReference<Itg<QuotationDetail>>() {\n    });\n\u6539\u6210\n Base<XXX> obj = JSON.parseObject(message, Constants.TYPE_REFER_XXX);. ",
    "zuohl": "\u8fd9\u6bb5\u4ee3\u7801\u6211\u4e5f\u6ca1\u770b\u61c2...\u4e00\u8138\u61f5\u903c. ",
    "liach": "\u697c\u4e3b\u662f\u4e0d\u662f\u5fd8\u4e86java\u6709\u5783\u573e\u5904\u7406\u5668. there is a method name length check in L668 already, so this is fixing a non-issue\nYou say it'd crash; you should give a unit test to prove it at least.. \u95ee\u4e0b\u4ee5\u540e\u963f\u91cc\u5df4\u5df4\u4ee3\u7801\u89c4\u8303\u5728\u8fd9\u4e2a\u4e0a\u7684\u653f\u7b56\u4f1a\u4e0d\u4f1a\u6539. why changing the indent and making fields public?. ",
    "fzhyzamt": "```java\nimport com.alibaba.fastjson.JSON;\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.annotation.*;\nimport java.io.Serializable;\nimport java.io.StringReader;\nimport java.util.List;\npublic class StackTest {\n    @XmlRootElement(name = \"Container\")\n    @XmlAccessorType(XmlAccessType.FIELD)\n    @XmlType(name = \"\", propOrder = {\n            \"any\"\n    })\n    public static class Container implements Serializable {\n        @XmlAnyElement(lax = true)\n        public List any;\n    }\n    private static final String MESSAGE = \"\" +\n            \"0\" +\n            \"\";\n    public static void main(String[] args) throws Exception {\n        JAXBContext context = JAXBContext.newInstance(Container.class, StackTest.class);\n        Container con = (Container) context.createUnmarshaller().unmarshal(new StringReader(MESSAGE));\n        System.out.println(JSON.toJSON(con));\n    }\n}\n```. @kimmking DisableCircularReferenceDetect\u662f\u4e00\u4e2a\u9ed8\u8ba4\u503c\u5417? \u6211\u5e76\u6ca1\u6709\u4f7f\u7528\u8be5\u503c.. ",
    "betorcs": "Same here for android. ",
    "thinkerFenglm": "// \u8c22\u8c22wenshao\u53ca\u65f6\u56de\u590d\nimport com.alibaba.fastjson.JSON;\npublic enum PartyType {\nuser(1),\nself_company(2),\nother_company(3);\nPartyType(int i) { }\n\n}\nclass enumMain{\npublic static void main(String[] args){\n    String json = \"\\\"user\\\"\";\n    // \u4e0a\u9762\u7684\u679a\u4e3e\u7c7b\u6211\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u4e5f\u53ea\u80fd\u62ff\u5230enum\u7684name\u800c\u65e0\u6cd5\u62ff\u5230\u503c\uff0c\u8bf7\u95ee\u600e\u4e48\u5199json\u4e24\u4e2a\u90fd\u53ef\u4ee5\u62ff\u5230\uff1f\n    PartyType partyType = JSON.parseObject(json, PartyType.class);\n    System.out.println(partyType);\n    System.out.println(partyType.name());\n    PartyType[] values = partyType.values();\n    System.out.println(Arrays.toString(values));\n}\n}. ",
    "LyStormrage": "I find same problem, I used kotlin, and data class. . ",
    "lautumn1990": "ParserConfig.getGlobalInstance().putDeserializer(String.class, new TrimStringDeserializer());\n@kimmking \u8bf7\u95eeTrimStringDeserializer \u5e94\u8be5\u600e\u4e48\u5b9a\u4e49, \u81ea\u5b9a\u4e49\u7684\u4e0d\u751f\u6548\u5440. ",
    "fx1061076658": "\u6211\u91c7\u7528\u7684\u7ee7\u627fFastJsonHttpMessageConverter\u91cd\u5199read\u65b9\u6cd5,\u62ff\u5230Object\u4ee5\u540e\u91c7\u7528ValueFilter \u5728filter\u4e2d\u5904\u7406\u5b57\u7b26\u4e32trim,\u518d\u53cd\u5e8f\u5217\u5316\u4e3aObject,\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u5b57\u7b26\u4e32\u7edf\u4e00trim. ",
    "apegeek": "sorry, \u81ea\u5df1\u5199\u5165\u6570\u636e\u95ee\u9898. ",
    "NickHdx": "\u770b\u4e86\u4e0b\u6e90\u7801\uff0c\u4fee\u6539\u5168\u5c40\u53d8\u91cfJSON.DEFFAULT_DATE_FORMAT\u4e5f\u662f\u53ef\u884c\u7684\u3002\nJSON.DEFFAULT_DATE_FORMAT = \"yyyy-MM-dd hh:mm:ss.SSS\";\n\u8fd8\u6ca1\u627e\u5230\u201c\u5e74\u4efd\u5c0f\u4e8e1000\u5931\u8d25\u201d\u7684\u539f\u56e0\uff0c\u7ee7\u7eed\u770b\u6e90\u7801....... @wenshao\uff0c\u611f\u8c22\u56de\u590d\uff01 \u516c\u53f8\u662f\u505a\u91d1\u878d\u6570\u636e\u5904\u7406\uff0c\u6570\u636e\u5206\u6790\u5458\u4e0d\u61c2\u6280\u672f\uff0c\u6709\u65f6\u5019\u4ed6\u4eec\u4f1a\u5bf9\u6570\u636e\u5904\u7406\u8f6f\u4ef6\u8fdb\u884c\u4e00\u4e9b\u624b\u52a8\u6d4b\u8bd5\uff0c\u6bd4\u5982\u968f\u4fbf\u8f93\u5165\u4e00\u6761\u80a1\u7968\u6570\u636e\uff08\u5176\u4e2d\u5305\u542b\u65e5\u671f\uff09\uff0c\u770b\u770b\u5904\u7406\u7ed3\u679c\u3002\u56e0\u4e3a\u65e5\u671f\u662f\u6570\u636e\u5206\u6790\u5458\u968f\u673a\u8f93\u5165\u7684\uff0c\u800c\u4e14\u8303\u56f4\u662f0001/01/01\u52309999/12/31\uff0c\u6240\u4ee5\u624d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u8fd9\u4e48\u5947\u8469\u7684\u65e5\u671f\u3002\u8fd9\u6837\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u5f53\u4f5c\u771f\u5b9e\u7684\u6570\u636e\u4fdd\u5b58\u5728\u4e3b\u6570\u636e\u5e93\u4e2d\uff0c\u4f46\u662f\u5728\u540e\u53f0\u5904\u7406\u8fc7\u7a0b\u4e2d\u9700\u8981\u88ab\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6240\u4ee5\u624d\u6709\u4e0a\u8ff0\u7684\u9700\u6c42\u3002. ",
    "JohnBergqvist": "@kimmking Hopefully this white paper: https://www.diffblue.com/papers/overview.pdf should explain what Deeptest is. If you would like to know more, we would be happy to arrange a call to discuss further?. ",
    "bglmmz": "\u4e0d\u884c\u554a\uff0cFastJson\u9ed8\u8ba4\u662fbase64\u7f16\u7801/\u8282\u7801byte[]\u6570\u7ec4\u7684. \u697c\u4e0a\u7684\u5144\u5f1f\uff0c\u6211\u7684java bean\u5c31\u662fbyte[]\u554a\u3002. ",
    "superVeitch": "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u8001\u5e08\u7684\u95ee\u9898\u73b0\u5728\u89e3\u51b3\u4e86\u5417\uff1f. ",
    "shangfabao": "\u540c\u6837\u6709\u8fd9\u4e2a\u95ee\u9898,\u4f46\u662f\u662fjava\u7248\u672c,1.2.47\nResolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: default constructor not found. class de.codecentric.boot.admin.server.domain.values.Registration; nested exception is com.alibaba.fastjson.JSONException: default constructor not found. class de.codecentric.boot.admin.server.domain.values.Registration\n\u8fd9\u4e2a\u7c7b\u6ca1\u6709\u65e0\u53c2\u7684\u6784\u9020\u5668. ",
    "xiaolongyuan": "\u4f7f\u7528\u6700\u65b0\u7248  \u4ecd\u7136\u6709\u4e0a\u9762\u7684\u60c5\u51b5\n```\norg.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.security.oauth2.common.util.SerializationException: Could not deserialize: autoType is not support. org.springframework.security.oauth2.provider.code.AuthorizationRequestHolder; nested exception is com.alibaba.fastjson.JSONException: autoType is not support. org.springframework.security.oauth2.provider.code.AuthorizationRequestHolder\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)\n    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:115)\n    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\n    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)\n    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at com.syan.uap.filter.OauthAccessFilter.doFilter(OauthAccessFilter.java:48)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:124)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:167)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\n    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Thread.java:748)\nCaused by: org.springframework.security.oauth2.common.util.SerializationException: Could not deserialize: autoType is not support. org.springframework.security.oauth2.provider.code.AuthorizationRequestHolder; nested exception is com.alibaba.fastjson.JSONException: autoType is not support. org.springframework.security.oauth2.provider.code.AuthorizationRequestHolder\n    at org.springframework.security.oauth2.common.util.GenericFastJsonSerializer.deserialize(GenericFastJsonSerializer.java:30)\n    at org.springframework.security.oauth2.common.util.SerializationUtils.deserialize(SerializationUtils.java:55)\n    at org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices$1.mapRow(JdbcAuthorizationCodeServices.java:54)\n    at org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices$1.mapRow(JdbcAuthorizationCodeServices.java:51)\n    at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:93)\n    at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:60)\n    at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:703)\n    at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:639)\n    at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:690)\n    at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:722)\n    at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:732)\n    at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:806)\n    at org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices.remove(JdbcAuthorizationCodeServices.java:50)\n    at org.springframework.security.oauth2.provider.code.RandomValueAuthorizationCodeServices.consumeAuthorizationCode(RandomValueAuthorizationCodeServices.java:28)\n    at org.springframework.security.oauth2.provider.code.AuthorizationCodeTokenGranter.getOAuth2Authentication(AuthorizationCodeTokenGranter.java:58)\n    at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:64)\n    at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:56)\n    at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:37)\n    at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(TokenEndpoint.java:112)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\n    ... 70 common frames omitted\nCaused by: com.alibaba.fastjson.JSONException: autoType is not support. org.springframework.security.oauth2.provider.code.AuthorizationRequestHolder\n    at com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:975)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:316)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1367)\n    at com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer.deserialze(JavaObjectDeserializer.java:51)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:671)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:365)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:328)\n    at org.springframework.security.oauth2.common.util.GenericFastJsonSerializer.deserialize(GenericFastJsonSerializer.java:28)\n    ... 101 common frames omitted\n```. +1. fastjson\u7248\u672c1.2.49  \u6709\u4e0a\u9762\u95ee\u9898. ",
    "heydaies": "\u4f7f\u75281.2.54\u7248\u672c\uff0c\u62a5\u5982\u4e0b\u5f02\u5e38\uff1a\ncom.alibaba.fastjson.JSONException: autoType is not support. org.springframework.security.oauth2.provider.OAuth2Authentication\n    at com.alibaba.fastjson.parser.ParserConfig.checkAutoType(ParserConfig.java:975)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:316)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parse(DefaultJSONParser.java:1367)\n    at com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer.deserialze(JavaObjectDeserializer.java:51)\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:671)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:365)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:269)\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)\n    at cn.capframework.plus.redis.codec.FastJsonRedisSerializer.deserialize(FastJsonRedisSerializer.java:35)\n    at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:334)\n    at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)\n    at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)\n    at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)\n    at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)\n    at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:48)\n    at cn.ewaytec.capss.upms.autoconfig.RedisTokenStore.readAuthentication(RedisTokenStore.java:84)\n    at cn.ewaytec.capss.upms.autoconfig.RedisTokenStore.getAccessToken(RedisTokenStore.java:71)\n    at org.springframework.security.oauth2.provider.token.DefaultTokenServices.createAccessToken(DefaultTokenServices.java:84)\n    at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:70)\n    at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:65)\n    at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)\n    at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:561)\n    at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\n    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)\n    at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)\n    at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\n    at cn.capframework.common.core.filter.CharacterEncodingIPFilter.doFilterInternal(CharacterEncodingIPFilter.java:25)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)\n    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)\n    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\n    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\n    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Thread.java:745). ",
    "gabrywu": "@wenshao \u597d\u7684\uff0c\u591a\u8c22\u5566\u3002\u53ea\u4e0d\u8fc7\u7684JSONPATH\u662f\u52a8\u6001\u7684\uff0c\u8fd8\u9700\u8981\u5728\u989d\u5916\u5904\u7406\u4e00\u4e0b\u3002. ",
    "jerry-yuan": "\u5b9e\u9645\u4e0a\u5c31\u662f\u7c7b\u4f3c\u4e8ejackson\u90a3\u79cd,\u53ef\u4ee5\u5b9a\u4e49\u82e5\u5e72\u4e2aJSON\u89c6\u56fe(JsonView,\u7528\u63a5\u53e3\u8868\u793a),\u7136\u540e\u5c06\u5404\u4e2a\u5c5e\u6027\u7ed1\u5b9a\u5230JSON\u89c6\u56fe\u4e0a,\u5f53\u81ea\u52a8\u8f6c\u6362POJO\u5bf9\u8c61\u4e3ajson\u5b57\u7b26\u4e32\u65f6,\u5c31\u4f1a\u53ea\u5305\u542b\u7279\u5b9aJSON\u89c6\u56fe\u4e2d\u7ed1\u5b9a\u7684\u5b57\u6bb5.\u4e3b\u8981\u8fd8\u662f\u7528\u5728SpringMVC\u7684\u81ea\u52a8\u8f6c\u6362\u54cd\u5e94\u4e3b\u4f53\u90e8\u5206\u7684\u65f6\u5019.\n\u5177\u4f53\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u501f\u9274\u4e00\u4e0bJackson,\u5f53\u65f6\u9009fastjson\u4e3b\u8981\u8fd8\u662f\u770b\u91cd\u4e86\u8f6c\u6362\u6bd4\u8f83\u65b9\u4fbf,\u7136\u540e\u624d\u53d1\u73b0\u53ea\u652f\u6301\u6307\u5b9a\u663e\u793a\u6216\u8005\u4e0d\u663e\u793a,\u6ca1\u6cd5\u5b9a\u4e49\u591a\u4e2a\u663e\u793a\u7684\u65b9\u6848\u7ec4\u5408.. ",
    "viimas": "1.2.47\u540c\u6837\u6709\u8be5\u95ee\u9898\n\u751a\u81f3\u540c\u4e00\u4e2a\u7c7b\u4e2d\u7531\u591a\u4e2adouble\u7c7b\u578b\u5b57\u6bb5\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u6709\u7684\u662f0.0 \uff0c\u6709\u7684\u662fnull. ",
    "passone": "\u4f60\u53cd\u5e8f\u5217\u5316\u65f6\u4f20\u5165\u7684Class\u5305\u542bbyte[]\u5b57\u6bb5\u662f\u4f1a\u81ea\u52a8\u8f6c\u6362\u7684\uff0c\u5982\u679c\u662f\u53cd\u5e8f\u5217\u5316\u4e3aMap\u4e4b\u7c7b\u7684\u624d\u4f1a\u662fBase64\u621616\u8fdb\u5236\u5b57\u7b26\u4e32. ",
    "willwme": "\u5982\u679c\u662f\u5e8f\u5217\u5316\u7684bean\u5bf9\u8c61\u6709BigDecimal\u5c5e\u6027\u5462\uff0c\u600e\u4e48\u907f\u514d\u51fa\u73b0\u79d1\u5b66\u8ba1\u6570\u6cd5\uff1f\nJSON.toJSONString(bean, SerializerFeature.WriteBigDecimalAsPlain) \u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4ecd\u7136\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u3002. \u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\uff0c\u8bf7\u4f7f\u75281.2.49\u4ee5\u4e0a\u7248\u672c #1982 . nice job :). nice job :). ",
    "zac4201": "\u62b1\u6b49\uff0c\u4eca\u5929\u624d\u770b\u5230\u4f60\u7684\u4fe1\u606f\u3002\n\u5f53\u65f6\u9047\u5230\u8fd9\u4e2a\u60c5\u51b5\u662f\u5e76\u6ca1\u6709\u62a5\u9519\uff0c\u53ea\u662f\u8f6c\u5316\u7684\u7ed3\u679c\u9519\u4e86\u3002\n\u7531\u4e8e\u65f6\u95f4\u592a\u4e45\uff0c\u6211\u4e5f\u5fd8\u4e86\u505a\u7b14\u8bb0\uff0c\u8fd9\u4e2a\u9519\u8bef\u4eca\u5929\u4e0b\u5348\u6211\u590d\u73b0\u65f6\u5e76\u6ca1\u6709\u590d\u73b0\u51fa\u6765\u3002. ",
    "stonesingsong": "@aceshot \u6211\u8fd9\u4e2a\u95ee\u9898\u662f\u524d\u7aef\u56de\u4f20\u7684json\u4e2d\u591a\u4e86\u4e00\u4e2avue\u7ec4\u4ef6\u81ea\u5df1\u4ea7\u751f\u7684_id\uff0c\u8ddf\u4e1a\u52a1\u7684id\u51b2\u7a81\u4e86\uff0cfastjson\u628a_id\u7684\u503c\u53cd\u89e3\u6790\u5230\u4e86dto\u7684id\u4e0a\u4e86\u3002\n\u5f31\u5f31\u95ee\u4e00\u53e5\uff0c\u4f60\u8bf4\u7684\u90a3\u4e2a\u5c5e\u6027\u5728\u54ea\u91cc\u914d\u7f6e\u554a\uff0c\u8c22\u8c22\uff08\u6211\u8fd9\u8fb9\u662fSpringBoot\u9879\u76ee\uff09~. ",
    "ArthurRyan": "@zhuzhaoyuan . @wenshao  \u5927\u795e\uff0c\u6211\u7ffb\u770b\u4e86\u4ee5\u5f80\u7684issue\uff0c\u5b9e\u5728\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5..... ",
    "91wangmeng": "\u5df2\u89e3\u51b3,fastjson\u52a0\u4e0a\u5982\u4e0b\u914d\u7f6e,\u5c06UiConfiguration\u548cSwaggerResource\u8fd9\u4e24\u4e2a\u7c7b\u52a0\u4e0a\u8fc7\u6ee4\u5668,\n    SerializeConfig serializeConfig = new SerializeConfig();\n        NameFilter nameFilter = (object, name, value) -> name;\n        serializeConfig.addFilter(UiConfiguration.class, nameFilter);\n        serializeConfig.addFilter(SwaggerResource.class, nameFilter);\n        fastJsonConfig.setSerializeConfig(serializeConfig);\n\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u5408\u4e0d\u5408\u9002. \u5df2\u89e3\u51b3,fastjson\u52a0\u4e0a\u5982\u4e0b\u914d\u7f6e,\u5c06UiConfiguration\u548cSwaggerResource\u8fd9\u4e24\u4e2a\u7c7b\u52a0\u4e0a\u8fc7\u6ee4\u5668,\n    SerializeConfig serializeConfig = new SerializeConfig();\n        NameFilter nameFilter = (object, name, value) -> name;\n        serializeConfig.addFilter(UiConfiguration.class, nameFilter);\n        serializeConfig.addFilter(SwaggerResource.class, nameFilter);\n        fastJsonConfig.setSerializeConfig(serializeConfig);\n\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u5408\u4e0d\u5408\u9002. ",
    "Mr-LiuDC": "\u597d\u7684\uff0c\u8c22\u8c22\u3002. \u597d\u7684\uff0c\u8c22\u8c22\u3002. ",
    "wangjiablog": "\u73b0\u5728\u60f3\u83b7\u5f97price2\u7684\u4e2a\u6570\u4e3a2\u6709\u5565\u597d\u529e\u6cd5\u6ca1. \u73b0\u5728\u60f3\u83b7\u5f97price2\u7684\u4e2a\u6570\u4e3a2\u6709\u5565\u597d\u529e\u6cd5\u6ca1. ",
    "NaturalL": "\u54e6\uff0c\u8fd9\u6837\u80fd\u4fee\u590d #294. \u54e6\uff0c\u8fd9\u6837\u80fd\u4fee\u590d #294. ",
    "jalena": "\u4e86\u89e3\u3002\u8c22\u8c22\uff01. \u4e86\u89e3\u3002\u8c22\u8c22\uff01. ",
    "thinhorse0410": "\n\n\n\n\n\n",
    "yangsongbao": "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u8bf7\u95ee\u89e3\u51b3\u4e86\u5417\uff1f. ",
    "xiaoma20082008": "@wenshao \n\u8fd9\u662ftoJSONString\u4e4b\u524d\u7684\u5bf9\u8c61\u6570\u636e\n\n\u8fd9\u662f\u8f6c\u4e4b\u540e\u7684String \n\n\u8fd9\u91cc\u7684tableFields\u5b57\u6bb5\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2agetTableFields\u65b9\u6cd5,\u5e76\u6ca1\u6709\u5b57\u6bb5\njava\ncom.alibaba.fastjson.JSONException: set property error, tableFields\n    at com.alibaba.fastjson.parser.deserializer.FieldDeserializer.setValue(FieldDeserializer.java:162) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer.parseField(ArrayListTypeFieldDeserializer.java:71) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:1149) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:801) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:273) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:269) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_14_SqlDesc.deserialze(Unknown Source) ~[na:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:269) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseArray(DefaultJSONParser.java:758) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.serializer.ObjectArrayCodec.deserialze(ObjectArrayCodec.java:183) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_13_RuntimeContext.deserialze(Unknown Source) ~[na:na]\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:269) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:671) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:365) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:269) ~[fastjson-1.2.49.jar:na]\n    at com.alibaba.fastjson.JSON.parseObject(JSON.java:488) ~[fastjson-1.2.49.jar:na]. ",
    "ZhangMingxu": "\u6211\u4e4b\u524d\u4e5f\u6709\u8fd9\u6837\u7684\u95ee\u9898\u3002\n\u53ea\u8981\u662fget set\u5f00\u5934\u7684\u65b9\u6cd5\u90fd\u4f1a\u6267\u884c\uff0c\u4e0d\u7ba1\u6709\u6ca1\u6709\u5bf9\u5e94\u5c5e\u6027\u3002\n\u4e0a\u6b21\u5c31\u56e0\u4e3a\u8d77\u4e86\u4e00\u4e2agetXxx \u5728\u91cc\u9762\u8fdb\u884c\u4e86\u5f88\u591a\u64cd\u4f5c\uff0c\u5bfc\u81f4\u5e8f\u5217\u5316\u4e4b\u540e\u7684\u5bf9\u8c61\u5c5e\u6027\u5df2\u7ecf\u4e0d\u4e00\u6837\u4e86\u3002. ",
    "zhangw1236": "\u6211\u4e5f\u78b0\u5230\u4e86\u76f8\u540c\u7684\u95ee\u9898. ",
    "chinleo": "\u540c\u6837\u9047\u5230\u6709get\u5f00\u5934, \u4f46\u662f\u65e0field\u7684\u5f02\u5e38\u903b\u8f91\u60c5\u51b5, \u671b\u4fee\u590d. ",
    "niuzhiweimr": "\u8fd9\u4e2a\u4e0d\u5e94\u8be5\u52a0\u5427. ",
    "zeason": "\nmodel\u5b9a\u4e49\u662fboolean\u7684\u8bdd\uff0c\u662f\u80fd\u591f\u63a5\u6536int 0\uff0c 1value\u7684\n\n\u8fd9\u4e2a\u5b9e\u73b0\u672c\u8eab\u4f3c\u4e4e\u5e76\u4e0d\u5408\u7406\uff1f. fastjson\u4f3c\u4e4e\u5e0c\u671b\u80fd\u4f7f\u7528\u6240\u6709\u7c7b\u578b\u5305\u62ec\u5bf9\u8c61\u4f5c\u4e3ajson\u7684key\uff0c\u4f30\u8ba1\u53ea\u80fd\u5728\u5e94\u7528\u65f6\u6309\u9700\u8ffd\u52a0WriteNonStringKeyAsString\u4f7fint\u88ab\u5e8f\u5217\u5316\u4e3aString.\nString json = JSON.toJSONString(map, SerializerFeature.WriteNonStringKeyAsString);. \u6211\u5c1d\u8bd5\u6dfb\u52a0\u8fdb\u53bb\u4e4b\u540e\u53d1\u73b0\u592a\u591a\u6d4b\u8bd5\u65e0\u6cd5\u901a\u8fc7\uff0c\u5305\u62ec\u5404\u79cd\u4ee5\u6574\u578b\uff0c\u957f\u6574\u578b\uff0cnull\u751a\u81f3\u662f\u5bf9\u8c61\u4f5c\u4e3akey\u7684\u6d4b\u8bd5\u3002\u6240\u4ee5\u6211\u731c\u6d4b\u8fd9\u4e2a\u9879\u76ee\u6bd4\u8d77\u89c4\u8303\u5316\u66f4\u6ce8\u91cd\u539f\u751f\u6001\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u53ea\u80fd\u95ee\u95eeowner \u662f\u600e\u4e48\u60f3\u7684\u4e86. @wenshao \u8bf7\u95eetest_for_xx(com.alibaba.json.bvt.XX01)\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f\u4f3c\u4e4e\u6d4b\u8bd5\u7684\u5e76\u4e0d\u662f\u5408\u6cd5\u7684json string. ",
    "a1b22003001": "\u5df2\u89e3\u51b3\uff0c\u56e0\u4e3a\u7528\u4e86kotlin-reflect,\u6dfb\u52a0kotlin-reflect\u4e0d\u6df7\u6dc6\u5c31\u6b63\u5e38\u4e86. ",
    "liangzhu1984": "Exception in thread \"main\" java.lang.NoSuchMethodError: java.math.BigInteger.intValueExact()I\n    at com.alibaba.fastjson.util.RyuDouble.(RyuDouble.java:67)\n. Exception in thread \"main\" java.lang.NoSuchMethodError: java.math.BigInteger.intValueExact()I\n    at com.alibaba.fastjson.util.RyuDouble.(RyuDouble.java:67)\n\u4f7f\u7528\u4e86JDK8\u7684\u65b0\u65b9\u6cd5\uff0c\u4f46\u662f\u53d1\u7684\u5305\u662f5.0\u7684\uff0c\u517c\u5bb9\u95ee\u9898\u3002. ",
    "jiao808813": "10254 java.lang.NoSuchMethodError\nNo virtual method intValueExact()I in class Ljava/math/BigInteger; or its super classes (declaration of 'java.math.BigInteger' appears in /system/framework/core-libart.jar)\ncom.alibaba.fastjson.util.RyuDouble.(RyuDouble.java:67). \u770b\u6765\u53ea\u80fd\u505c\u7559\u57281.2.48\u7248\u672c\u4e86. #10254 java.lang.NoSuchMethodError\nNo virtual method intValueExact()I in class Ljava/math/BigInteger; or its super classes (declaration of 'java.math.BigInteger' appears in /system/framework/core-libart.jar)\ncom.alibaba.fastjson.util.RyuDouble.(RyuDouble.java:67). ",
    "wangwang-h": "\u201cjava.lang.NoClassDefFoundError: Could not initialize class com.alibaba.fastjson.util.RyuDouble\",i got the exception when the deserialization operation runs on the 1.7 version jdk,but have not replayed in the 1.8 envirionment.the same as fastjson 1.2.51. ",
    "sccassiel": "\u76ee\u524d\u6709\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u5417\uff1f. ",
    "chainfun": "same question\n{\n  msg: \"success\",\n  code: 0,\n  data: {\n    bigDecimalFloatStr: \"1.23E-17\",\n    bigDecimalStr: \"100000000000000000123\",\n    bigIntegerStr: \"99999999999999999999999999\",\n    longStr: \"9223372036854775807\"\n  }\n}\n\u4e0d\u77e5\u9053\u4e3a\u4f55\u4f7f\u7528\n\u4fee\u590dLong\u7684\u7684\u8fb9\u754c\u7cbe\u5ea6\u95ee\u9898\u65f6\uff0c\u6ca1\u6709\u987a\u4fbf\u4fee\u590d\u4e00\u4e0bBigDecimal\u7684\u3002\n\u867d\u7136\u53ef\u4ee5\u81ea\u5df1\u5199\u5e8f\u5217\u5316\u54af\n. ",
    "guimingyue": "\u8865\u5145\u4e00\u4e2a case\n```java\npublic class FastjsonSortedSet {\npublic static void main(String[] args) {\n    VO v = new VO();\n    SortedSet<String> ss = new TreeSet<>();\n    ss.add(\"1\");\n    ss.add(\"2\");\n    v.setSs(ss);\n    String str = JSON.toJSONString(v);\n    JSONObject jsonObject = JSON.parseObject(str);\n    jsonObject.toJavaObject(VO.class);\n}\n\npublic static class VO {\n\n    private SortedSet<String> ss;\n\n    public SortedSet<String> getSs() {\n        return ss;\n    }\n\n    public void setSs(SortedSet<String> ss) {\n        this.ss = ss;\n    }\n}\n\n}\n\u5f02\u5e38java\nException in thread \"main\" com.alibaba.fastjson.JSONException: can not cast to : java.util.SortedSet\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:927)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:621)\n    at com.alibaba.fastjson.JSON.toJavaObject(JSON.java:924)\n    at FastjsonSortedSet.main(FastjsonSortedSet.java:23)\nCaused by: com.alibaba.fastjson.JSONException: can not cast to : java.util.SortedSet\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:858)\n    at com.alibaba.fastjson.util.TypeUtils.cast(TypeUtils.java:778)\n    at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.createInstance(JavaBeanDeserializer.java:821)\n    at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:925)\n    ... 3 more\n```\n. \u60f3\u5230\u7684\u65b9\u6cd5\u662f\u628a SortedSet \u52a0\u5165\u5230 if \u5224\u65ad\u4e2d\uff0c\u8fd9\u6837\u8fdb\u884c\u4fee\u590d\uff0c\u5982\u4e0b\u9762rawTye == SortedSet.class\u7684\u4ee3\u7801\u3002\njava\npublic static <T> T cast(Object obj, ParameterizedType type, ParserConfig mapping){\n        Type rawTye = type.getRawType();\n        if(rawTye == Set.class || rawTye == HashSet.class //\n                || rawTye == TreeSet.class //\n                || rawTye == Collection.class //\n                || rawTye == List.class //\n                || rawTye == ArrayList.class\n                || rawTye == SortedSet.class){\n            Type itemType = type.getActualTypeArguments()[0];\n            if(obj instanceof Iterable){\n                Collection collection;\n                if(rawTye == Set.class || rawTye == HashSet.class){\n                    collection = new HashSet();\n                } else if(rawTye == SortedSet.class || rawTye == TreeSet.class){\n                    collection = new TreeSet();\n                } else{\n                    collection = new ArrayList();\n                }\n                for(Iterator it = ((Iterable) obj).iterator(); it.hasNext(); ){\n                    Object item = it.next();\n                    collection.add(cast(item, itemType, mapping));\n                }\n                return (T) collection;\n            }\n        }\n  .... \u5728\u6700\u65b0\u7684\u6e90\u7801\u4e2d\u6d4b\u8bd5\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u5728 2017-12-14 \u7684 0f30d9302cf759dcf5756bad5bd27e03ba66f0f8 \u8fd9\u4e2a commit \u4e2d\u4fee\u590d\u4e86\u3002. ",
    "zhuliangxuan": "\u5df2\u89e3\u51b3\nList> datas = JSON.parseObject(jsonStr2,new TypeReference>>(){});. ",
    "guokaiawesome": "\u8865\u5145\u4e00\u4e0b\uff0c\u6211maven update\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e86\uff0c\u4f46\u662f\u8ffd\u8e2a\u8fdb\u53bbSerializeConfig\u8fd9\u4e2a\u7c7b\u4f9d\u7136\u6253\u4e0d\u5f00\uff0c\u63d0\u793ainvalid LOC header(bad signature)\uff0c\u8bd5\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u5305\u4e0b\u9762\u5176\u4ed6\u7c7b\u90fd\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00. ",
    "bifenglin": "\u5e76\u4e14\u6211\u770b\u6e90\u7801 \u53d1\u73b0\u5728GenericFastJsonRedisSerializer\u4e5f\u8bbe\u7f6e\u4e86defaultRedisConfig.setAutoTypeSupport(true)\n\u6e90\u7801\u4ee3\u7801\u5982\u4e0b\n```\npublic class GenericFastJsonRedisSerializer implements RedisSerializer {\n    private final static ParserConfig defaultRedisConfig = new ParserConfig();\n    static { defaultRedisConfig.setAutoTypeSupport(true);}\n@Override\npublic byte[] serialize(Object object) throws SerializationException {\n    if (object == null) {\n        return new byte[0];\n    }\n    try {\n        return JSON.toJSONBytes(object, SerializerFeature.WriteClassName);\n    } catch (Exception ex) {\n        throw new SerializationException(\"Could not serialize: \" + ex.getMessage(), ex);\n    }\n}\n\n@Override\npublic Object deserialize(byte[] bytes) throws SerializationException {\n    if (bytes == null || bytes.length == 0) {\n        return null;\n    }\n    try {\n        return JSON.parseObject(new String(bytes, IOUtils.UTF8), Object.class, defaultRedisConfig);\n    } catch (Exception ex) {\n        throw new SerializationException(\"Could not deserialize: \" + ex.getMessage(), ex);\n    }\n}\n\n}\n```\n\u7248\u672c\u662ffastjson\u7248\u672c\u662f1.2.44. ",
    "gelonggld": "spring boot 2.0.3.RELEASE + kotlin\nfastjson 1.2.49\n\u4e5f\u6709\u4e0a\u9762\u7684\u95ee\u9898\n . ",
    "incompleteTong": "\u95ee\u4e0b \u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417?. ",
    "NightFarmer": "1.2.55\u7248\u672c\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\n\n\u770b\u4e86\u4e0b\u6e90\u7801\uff0c\u662f\u56e0\u4e3a\u5b9e\u4f53\u7c7b\u5b58\u5728\u591a\u53c2\u6784\u9020\u65b9\u6cd5\u624d\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u5b9e\u4f53\u7c7b\u5220\u6389\u591a\u53c2\u6784\u9020\u5668\u5c31\u53ef\u4ee5\u4e86\u3002. ",
    "Cmd-Cmd": "url\u5b57\u6bb5\u4e3aString\u7c7b\u578b\uff0c\u800c\u4e0d\u662fString?\u7c7b\u578b\uff0c\u629b\u5f02\u5e38\u662f\u5408\u7406\u7684\n```kotlin\ndata class TestKotlinB(var name: String, val url: String?)\nfun main(args: Array) {\n    val json = \"\"\"[{\"name\":\"zwonb\"}]\"\"\"\n    val arr = JSON.parseArray(json, TestKotlinB::class.javaObjectType)\n    println(arr)\n}\n\u8fd9\u6837\u5c31\u4e0d\u4f1a\u629b\u5f02\u5e38\u4e86. url\u5b57\u6bb5\u4e3aString\u7c7b\u578b\uff0c\u800c\u4e0d\u662fString?\u7c7b\u578b\uff0c\u629b\u5f02\u5e38\u662f\u5408\u7406\u7684kotlin\ndata class TestKotlinB(var name: String, val url: String?)\nfun main(args: Array) {\n    val json = \"\"\"[{\"name\":\"zwonb\"}]\"\"\"\n    val arr = JSON.parseArray(json, TestKotlinB::class.javaObjectType)\n    println(arr)\n}\n```\n\u8fd9\u6837\u5c31\u4e0d\u4f1a\u629b\u5f02\u5e38\u4e86. ",
    "fate-stay-night": "\u540c\u95ee\u9898. FastJsonRedisSerializer\u53cd\u5e8f\u5217\u5316\u8fc7\u6765\u5bf9\u8c61\u4e3aJSONObject\uff0c\u5efa\u8bae\u4f60\u81ea\u5df1\u518d\u8f6c\u6362\u4e00\u6b21\uff0c\u5982\uff1a\npublic  T get(String key, Class type) {\n        ValueOperations ops = redisTemplate.opsForValue();\n        Object o = ops.get(key);\n        return ((JSONObject) o).toJavaObject(type);\n}\n\u6216\u8005\u662f\u4f7f\u7528GenericFastJsonRedisSerializer\u8fdb\u884c\u5e8f\u5217\u5316. ",
    "liuhao163": "\u7248\u672c\u53f7v1.2.31. ",
    "whitefume": "\u662f\u56e0\u4e3afastjson \u4e0d\u652f\u6301webflux \u5417\uff1f. ",
    "hr3lxphr6j": "\nfastjson\u4f3c\u4e4e\u5e0c\u671b\u80fd\u4f7f\u7528\u6240\u6709\u7c7b\u578b\u5305\u62ec\u5bf9\u8c61\u4f5c\u4e3ajson\u7684key\uff0c\u4f30\u8ba1\u53ea\u80fd\u5728\u5e94\u7528\u65f6\u6309\u9700\u8ffd\u52a0WriteNonStringKeyAsString\u4f7fint\u88ab\u5e8f\u5217\u5316\u4e3aString.\nString json = JSON.toJSONString(map, SerializerFeature.WriteNonStringKeyAsString);\n\nrfc7159\n\u6309\u7167rfc\u7684\u89c4\u5b9a\uff0ckey\u53ea\u5e94\u8be5\u662fstring\uff0cSerializerFeature.WriteNonStringKeyAsString\u5e94\u8be5\u9ed8\u8ba4\u5c31\u6dfb\u52a0\u8fdb\u53bb\u7684\u5427. ",
    "yihuishou": "\u4f60\u5148\u7528 GenericFastJsonRedisSerializer \u8bd5\u8bd5\u5427. ",
    "502647092": "\u7528FastJSON\u89e3\u6790\u963f\u91ccAPI\u8fd4\u56de\u7684\u6570\u636e \u65e5\u671f\u4e5f\u662f\u8f6c\u6362\u5931\u8d25\u7684  20181229162849000+0800. #2216 \u5df2\u7ecf\u590d\u73b0\u4e86 \u7b49\u5f85\u4fee\u590d\u53d1\u5e03. \u5f02\u5e38\u4e3a com.alibaba.fastjson.JSONException: For input string: \\\"20181229162849000+0800\\\"\n\u5177\u4f53\u5904\u7406\u4ee3\u7801\u5728 TypeUtils.java:307\n\n\u56e0\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e0d\u5305\u542b - \u6240\u4ee5\u8fdb\u5165\u4e86\u6570\u5b57\u89e3\u6790\u6d41\u7a0b \u5bfc\u81f4 Long \u89e3\u6790\u9519\u8bef. \u5f02\u5e38\u4e3a com.alibaba.fastjson.JSONException: For input string: \\\"20181229162849000+0800\\\"\n\u5177\u4f53\u5904\u7406\u4ee3\u7801\u5728 TypeUtils.java:307\n\n\u56e0\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e0d\u5305\u542b - \u6240\u4ee5\u8fdb\u5165\u4e86\u6570\u5b57\u89e3\u6790\u6d41\u7a0b \u5bfc\u81f4 Long \u89e3\u6790\u9519\u8bef. \u8865\u5145\u4e00\u4e0b \u662f jsonObject.getJSONArray(\"xxx\").toJavaList() \u89e6\u53d1\u7684 ~~\u5355\u72ec\u7684\u89e3\u6790\u597d\u50cf\u662f\u53ef\u4ee5\u7684~~ \u5355\u72ec\u4e5f\u4e0d\u884c\njava\nList<Order> result = new ArrayList<>(array.size());\narray.forEach(o -> result.add(((JSONObject) o).toJavaObject(Order.class)));\nreturn result;. \u8865\u5145\u4e00\u4e0b \u662f jsonObject.getJSONArray(\"xxx\").toJavaList() \u89e6\u53d1\u7684 ~~\u5355\u72ec\u7684\u89e3\u6790\u597d\u50cf\u662f\u53ef\u4ee5\u7684~~ \u5355\u72ec\u4e5f\u4e0d\u884c\njava\nList<Order> result = new ArrayList<>(array.size());\narray.forEach(o -> result.add(((JSONObject) o).toJavaObject(Order.class)));\nreturn result;. @wenshao \u6211\u914d\u7f6e\u8fc7format\u4e86 \u4f46\u662f\u4f60\u770b\u4e0a\u9762\u7684\u6e90\u7801 \u6ca1\u6709\u8fdb\u5165format\u7684\u683c\u5f0f\u5316\u5224\u65ad \u56e0\u4e3a\u5b57\u7b26\u4e32\u4e0d\u5305\u542b - \u8fd9\u4e2a\u7b26\u53f7 \u7136\u540e\u8fdb\u5165\u4e86 Long.parseLong \u7684\u6d41\u7a0b \u7ed3\u679c\u5c31\u662f Caused by: java.lang.NumberFormatException: For input string: \"20181229162849000+0800\". @wenshao \u6211\u914d\u7f6e\u8fc7format\u4e86 \u4f46\u662f\u4f60\u770b\u4e0a\u9762\u7684\u6e90\u7801 \u6ca1\u6709\u8fdb\u5165format\u7684\u683c\u5f0f\u5316\u5224\u65ad \u56e0\u4e3a\u5b57\u7b26\u4e32\u4e0d\u5305\u542b - \u8fd9\u4e2a\u7b26\u53f7 \u7136\u540e\u8fdb\u5165\u4e86 Long.parseLong \u7684\u6d41\u7a0b \u7ed3\u679c\u5c31\u662f Caused by: java.lang.NumberFormatException: For input string: \"20181229162849000+0800\". ",
    "harkue": "\u8865\u5145\uff1a 1.1.70-android.jar\u662f\u5982\u4f55\u7f16\u8bd1\u51fa\u6765\u7684\uff1f. ",
    "yl-yue": "\u8865\u5145\uff1a\nfastjson\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u4f1a\u683c\u5f0f\u5316\u65f6\u95f4\u683c\u5f0f\u4e3a\uff08yyyy-MM-dd HH:mm:ss\uff09\n\u5982\u679c\u7528\u6b64\u5e8f\u5217\u5316\u540e\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6b64\u5f02\u5e38\u3002. ",
    "decode-life": "\n\u8bf7\u4f7f\u7528JSONField\uff0c\u800c\u4e0d\u662fJsonProperty\n\n\u8fd9\u4e2a\u8bd5\u8fc7\u4e86\uff0c\u6362\u6210JSONFiled\u4e5f\u662f\u4e00\u6837\u7684\u95ee\u9898\uff0c\u6ca1\u6709\u89e3\u51b3. ",
    "BoyK": "\u591a\u8c22[\u62b1\u62f3][\u62b1\u62f3][\u62b1\u62f3]\n| |\n\u8c2d\u5764\n|\n|\ntankun_0000@163.com\n|\n\u7b7e\u540d\u7531\u7f51\u6613\u90ae\u7bb1\u5927\u5e08\u5b9a\u5236\n\u57282018\u5e7411\u670818\u65e5 17:57\uff0c\u6e29\u7ecd\u9526notifications@github.com \u5199\u9053\uff1a\n\u4f7f\u7528JSON.toJSONString(obj, SerializerFeature.BrowserCompatible);\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "liyzay": "@zwonb @zqr95518 \n\u6211\u4e5f\u5728Android\u4e0a\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5927\u81f4\u590d\u73b0\u4e86\u4e00\u4e0b\u6b65\u9aa4\u3002\u7531\u4e8e\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86RxJava2\uff0c\u800cRxJava2\u4e0d\u5141\u8bb8\u4f20null\u5bf9\u8c61\uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u201cEmptyObject\u201d\u6765\u4f7f\u7528\uff0c\u5728\u89e3\u6790\u6210\u201cEmptyObject\u201d\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u9519\uff0c\u5fc5\u5b9a\u91cd\u73b0\uff0c\u5927\u81f4\u8ddf\u4e86\u4e00\u4e0b\u4ee3\u7801\uff0c\u786e\u5b9a\u4e86\u51fa\u9519\u7684\u539f\u56e0\uff1a\n\n\n\u5728JavaBeanInfo\u7684L810\u4f1a\u5bf9\u7a7a\u5bf9\u8c61\u505a\u5224\u65ad\uff0c\u800cXmlAccessorType\u5728Android\u4e0a\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u6545\u6b64\u62a5\u9519\u3002\n\u89e3\u51b3\u65b9\u6848\uff1a\u66ff\u6362\u6210\u6700\u65b0\u7684\u201d1.1.70.android\u2018\u5373\u53ef\u3002. ",
    "WhatAKitty": "@wenshao https://gunnarmorling.github.io/jdk-api-diff/jdk10-jdk11-api-diff.html\nXmlAccessorType \u5df2\u88ab\u79fb\u9664\uff0c\u5e0c\u671b\u80fd\u5c3d\u5feb\u4fee\u590d\uff0c\u76ee\u524d\u53ea\u80fd\u56de\u9000\u5230\u4f4e\u7248\u672c\u4f7f\u7528\u3002. ",
    "Ah39": "\u9700\u8981example\uff0cclass\uff0c\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u3002\u770b\u6709\u6ca1\u6709\u4f7f\u7528\u52a8\u6001\u7c7b\u578b\u7b49\u3002\nhttps://github.com/alibaba/fastjson/issues/2081. \u6709\u4f8b\u5b50\u5417\uff1fclass \u548cjson  string\uff0c\u6216\u8005\u76f4\u63a5\u53ef\u4ee5\u590d\u73b0\u7684\u5355\u5143\u6d4b\u8bd5\u3002\u8fd9\u4e48\u8ba8\u8bba\uff0c\u4e0d\u4f1a\u6709\u7ed3\u8bba\u7684. ",
    "L-Angel": "\u6ca1\u6709\uff0c\u76f4\u63a5\u4f7f\u7528\u7684JSON.parseObject(xxx, xxx.class)\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6253\u5370\u4e86\u4e0b\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\uff0c\u597d\u591aasm\u751f\u6210\u7684\u7c7b. ",
    "howard-huang": "\u662f\u5426\u5df2\u4fee\u590d\uff1f. ",
    "timandy": "\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u652f\u6301\u4f20\u5165\u6cdb\u578b\u7c7b\u578b\n\u67e5\u770b JSON.parseObject() \u7684\u5176\u4ed6\u91cd\u8f7d. \u5176\u5b9e\u8fd9\u4e2a\u6ca1\u5fc5\u8981\u7ea0\u7ed3 JSONArray \u672c\u8eab\u5c31\u662f List, JSONObject \u672c\u8eab\u5c31\u662f Map. @chenzhiguo \u4f60\u6ca1\u61c2\u6211\u7684\u610f\u601d. Map map=element;. - ci \u5931\u8d25\u4e0d\u662f\u6b64 pull request \u5f15\u8d77.\n\n\n\u5982\u679c\u8003\u8651\u591a\u6570\u60c5\u51b5\u4e0b\u7528\u4e0d\u5230\u8fd9\u4e48\u590d\u6742\u7684\u7ee7\u627f\u5173\u7cfb,\u800c\u5bfc\u81f4\u6027\u80fd\u95ee\u9898.\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a Codec \u548c\u4e00\u4e2a\u5bf9\u5e94\u7684\u7279\u6b8a\u7c7b XCollection \u5e76\u9ed8\u8ba4\u6ce8\u518c\u5230 ParserConfig.initDeserializers(). \u4f7f\u7528\u65f6\u5728 bean \u7c7b\u4e0a\u52a0\u6ce8\u89e3 @JSONType(mappingTo = XCollection .class). - ci \u5931\u8d25\u4e0d\u662f\u6b64 pull request \u5f15\u8d77.\n\n\n\u5982\u679c\u8003\u8651\u591a\u6570\u60c5\u51b5\u4e0b\u7528\u4e0d\u5230\u8fd9\u4e48\u590d\u6742\u7684\u7ee7\u627f\u5173\u7cfb,\u800c\u5bfc\u81f4\u6027\u80fd\u95ee\u9898.\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a Codec \u548c\u4e00\u4e2a\u5bf9\u5e94\u7684\u7279\u6b8a\u7c7b XCollection \u5e76\u9ed8\u8ba4\u6ce8\u518c\u5230 ParserConfig.initDeserializers(). \u4f7f\u7528\u65f6\u5728 bean \u7c7b\u4e0a\u52a0\u6ce8\u89e3 @JSONType(mappingTo = XCollection .class). \u91cd\u73b0\u4e0d\u4e86. \u91cd\u73b0\u4e0d\u4e86. - \u4fee\u590d\u53cd\u5e8f\u5217\u5316\u6cdb\u578b\u6570\u7ec4\u8fd4\u56de Object[] \u7684\u95ee\u9898\n\n\u652f\u6301\u53cd\u5e8f\u5217\u5316 Collection \u7684 Item \u4e3a\u6cdb\u578b\u7684\u7c7b\u578b\n\u652f\u6301\u53cd\u5e8f\u5217\u5316 Collection \u7684 Item \u4e3a\u6cdb\u578b\u6570\u7ec4\u7684\u7c7b\u578b. \u63d0\u4f9b\u4e0b UserGroupModel. @noear  \n\u975e\u6807\u51c6 json \u95ee\u9898\u4f7f\u7528 master \u5206\u652f\u6ca1\u6709\u590d\u73b0, \u4e0d\u77e5\u9053\u4f60\u7528\u7684\u54ea\u4e2a\u7248\u672c\n\u53cd\u5e8f\u5217\u5316\u65f6, users2 \u751f\u6210 HashMap \u662f\u5408\u7406\u7684,\u56e0\u4e3a\u4f60\u7684\u6a21\u578b\u4e2d users2 \u58f0\u660e\u7684\u662f Map \u4e0d\u662f LinkedHashMap. \u5e8f\u5217\u5316\u7684\u65f6\u5019\u6ca1\u6709\u751f\u6210 @type . \u53c2\u8003 @JSONField \u6ce8\u89e3. @ysdxz207 \u5c06  @JSONField(serialize=false) \u52a0\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e0a. @liukoo \u5efa\u8bae\u770b\u4e00\u4e0b\u6cdb\u578b\u64e6\u9664\u76f8\u5173\u7684\u77e5\u8bc6, \u8fd9\u4e0d\u662f fastjson \u7684\u8303\u7574. TypeUtils.compatibleWithJavaBean = false;\n        TypeUtils.compatibleWithFieldName = true;\n\u5177\u4f53\u54ea\u4e2a\u914d\u7f6e\u9879\u8bb0\u4e0d\u592a\u6e05\u4e86\uff0c\u624b\u673a\u770b\u6e90\u7801\u4e0d\u65b9\u4fbf. @JOHNHYH  TypeUtils.compatibleWithFieldName = true; \u8bbe\u7f6e\u8fd9\u4e2a\u5168\u5c40\u914d\u7f6e\u9879\u5c31\u53ef\u4ee5\u4e86. \\ \u5728json \u4e2d\u662f\u7279\u6b8a\u5b57\u7b26\u9700\u8981\u8f6c\u4e49\u7684, \u4e0d\u662f fastjson \u7684\u95ee\u9898. @545314690 \u4f60\u53ef\u4ee5\u53cd\u5176\u9053\u800c\u884c\u4e4b,\u5148\u6784\u5efa\u4e00\u4e2a\u5bf9\u8c61,\u7136\u540e\u5e8f\u5217\u5316,\u770b\u770b\u751f\u6210\u7684\u5b57\u7b26\u4e32\u662f\u4ec0\u4e48\u6837\u7684.. \n",
    "chenzhiguo": "\u5982\u679c\u6211\u7684Json\u5c42\u7ea7\u6df1\u5ea6\u4e0d\u56fa\u5b9a\uff0c\u683c\u5f0f\u4e0d\u4e00\u81f4\uff0c\u5c31\u6ca1\u6cd5\u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u4f20\u5165\u6cdb\u578b\u7684\u65b9\u6cd5\u4e86\u3002\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u6709\u53ef\u80fd\u662fHashMap\uff0c\u800c\u8fd9\u4e2aObject\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u6709\u53ef\u80fd\u662fList\uff0c\u6709\u53ef\u80fd\u662fString\uff0c\u4e5f\u6709\u53ef\u80fd\u53c8\u662f\u4e00\u4e2a HashMap.... \u55ef\uff0c\u6240\u4ee5\u76ee\u524d\u6211\u662f\u5148\u505a\u5224\u65ad\u518d\u505a\u53d6\u503c\u3002\nMap map = element instanceof JSONObject ? ((JSONObject) element).getInnerMap() : (HashMap) element;\n\u4f46\u662f\u76ee\u524d\u6ca1\u6709\u901a\u8fc7\u62d3\u5c55\u5b9e\u73b0\u3002. ",
    "weimingjue": "\u867d\u7136\u53ef\u4ee5\u518d\u5305\u4e00\u5c42JSONObject\uff0c\u4f46\u6211\u6b63\u5728\u6539\u6211\u7684\u9879\u76ee\uff0c\u5e76\u4e14\u5f88\u591a\uff0c\u5e0c\u671b\u80fd\u6709\u89e3\u51b3\u65b9\u6848. \u4eca\u5929\u770b\u4e86\u4e00\u4e0b\u5b89\u5353\u7684\u6e90\u7801\uff0c\u539f\u6765\u8c37\u6b4c\u5b9e\u4f8b\u5316Map\u63a5\u53e3\u5bf9\u8c61\u7684\u65f6\u5019\u662f\u76f4\u63a5\u4fdd\u5b58map\u7684keyvalue\u7684\uff0c\u5e76\u6ca1\u6709\u4fdd\u5b58\u539f\u59cb\u5bf9\u8c61\u3002\u5509\u770b\u6765\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u6539\u4e86\u3002. ",
    "laughinglaughing": "\u4f60\u597d\uff0c\u636e\u6211\u6240\u77e5fastjson\u9ed8\u8ba4\u662f\u901a\u8fc7setter\u548cgetter\u65b9\u6cd5\u8fdb\u884c\u8d4b\u503c\u7684\uff0cscala\u9ed8\u8ba4\u867d\u7136\u4f1a\u751f\u6210getter\u548csetter\u65b9\u6cd5\uff0c\u4f46\u662f\u65b9\u6cd5\u540d\u4e0d\u662fJava\u901a\u5e38\u7684setName\u548cgetName\u7c7b\u578b\u7684\uff0c\u5bfc\u81f4\u4e0d\u80fd\u5e8f\u5217\u5316\u6216\u8005\u53cd\u5e8f\u5217\u5316\uff0c\u53ef\u4ee5\u4f7f\u7528@BeanProperty\u4e3a\u5b57\u6bb5\u751f\u6210\u9ed8\u8ba4\u7684getterSetter\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u5176\u5b83\u7684\u5751\uff0cscala\u8fd8\u662f\u8c28\u614e\u4f7f\u7528fastjson. ",
    "palagend": "\u76ee\u524d\u4f7f\u7528\u7684\u7248\u672c\u662f1.2.47. ",
    "leowangxf": "\u540c\u6c42\u89e3\u51b3\u65b9\u6848\uff0c@JSONType \u5b50\u7c7b\u81ea\u5df1\u6ce8\u89e3\u8fd8\u597d\uff0c\u4f46\u662f\u7236\u7c7b\u540c\u6b65\u8981\u52a0 seeAlso \u5c31\u5751\u5927\u4e86\uff0c\u662f\u5426\u8003\u8651\u652f\u6301\u663e\u793a\u6ce8\u518c\u7c7b\u578b\u6620\u5c04\uff0c\u4f8b\u5982\ntypeMappingRegistry.register(someTypeName, SomeConcreteClass.class, SomeAbstractClass.class). ",
    "mattjma": "//This is a Java class\npublic class BaseBean {\n@Override\npublic String toString() {\n    try {\n        return JSONToBeanHandler.toJsonString(this);\n    } catch (JSONFormatException e) {\n        e.printStackTrace();\n    }\n    return super.toString();\n}\n\n}\n//This is the Kotlin data class which may cause crash\ndata class LogoutResult constructor(@JSONField(name = \"msg\") var msg: String): BaseBean()\n//The following is the data received form server\n{\n   \"data\": {\n    \"msg\": \"bye\"\n   },\n   \"meta\": {\n    \"code\": 200\n   }\n}\n//This is the crash information\njava.lang.ArrayIndexOutOfBoundsException: length=1; index=1. @wenshao \u4e0d\u597d\u610f\u601d\uff0c\u9519\u8bef\u65e5\u5fd7\u5df2\u7ecf\u4e0a\u4f20. data class WiFiLoginResult constructor(\n        @JSONField(name = \"wifi_user\") var wifiUser: WiFiUser,\n        @JSONField(name = \"user\") var user: User,\n        @JSONField(name = \"token\") var token: String): BaseBean()\ndata class WiFiUser constructor(\n        @JSONField(name = \"loginPath\") var loginPath: String,\n        @JSONField(name = \"minHeadImgUrl\") var minAvartarUrl: String,\n        @JSONField(name = \"nickname\") var nickname: String,\n        @JSONField(name = \"sex\") var gender: String,\n        @JSONField(name = \"unionId\") var uid: String\n): BaseBean()\n\u670d\u52a1\u7aef\u8fd4\u56de\u7684wifi_user\u6570\u636e\u9879\uff0c\u5982\u679c\u4ec5\u6709\u4e0a\u9762\u7c7b\u4e2d\u7684\u4e00\u90e8\u5206\u7684\u8bdd\uff0c\u4e5f\u4f1a\u53d1\u751f\u5f02\u5e38\n{\n   \"data\": {\n     \"token\": \"2|1:0|10:1541403557|5:token|20:OUJKcjk6OmVhMjg3Zg==|fb6289021515404c7a743bd52ff867de90006c0970d081076f8235ca16666e62\",\n    \"user\": {\n       \"gender\": 2,\n       \"nickname\": \"mattj\",\n       \"uid\": \"9BJr9\"\n     },\n     \"wifi_user\": {\n       \"loginPath\": \"wifi_logged\",\n      \"unionId\": \"470B52CEFD554EE3A6D4C1162D5D2C25\"\n     }\n   },\n   \"meta\": {\n     \"code\": 200\n   }\n }\ncreate instance error, public com.wifi.mask.user.entity.WiFiUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String). ",
    "manyi213": "fastjosn\u5904\u7406\u7684\u5b57\u7b26\u4e32\u80af\u5b9a\u8981\u662f\u4e2a\u5408\u6cd5\u7684json\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a\nJSONObject jsonObject = JSON.parseObject(\"{\\\"str\\\":\\\"1112-1212\\\"}\");\nSystem.out.println(jsonObject.getString(\"str\"));. ",
    "dezhonger": "\n\u4ec0\u4e48\u7248\u672c\u554a\n\n\u4e0d\u597d\u610f\u601d\uff0c\u5f53\u65f6\u6d4b\u8bd5\u7528\u7684\u54ea\u4e2a\u7248\u672c\u5fd8\u8bb0\u4e86\u3002\u521a\u624d\u7528\u4e86\u6700\u65b0\u7684fastjson\u7248\u672c1.2.51\uff0c\u8fd8\u662f\u65e0\u6cd5\u6b63\u786e\u5e8f\u5217\u5316\u3002\u7ed3\u679c\u662f{\"empty\":\"false\"}. > \u4ec0\u4e48\u7248\u672c\u554a\n\u6211\u770b\u5230\u5728\u6700\u65b0\u7684\u4ee3\u7801\u4e2dhttps://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/serializer/SerializeConfig.java \u5df2\u7ecf\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u7c7b(LinkedHashMultimap)\uff0c\u4f46\u662f\u6211\u4f7f\u75281.2.51\u7248\u672c\u4f9d\u7136\u662f\u4e0d\u5305\u542b\u8fd9\u4e2a\u7c7b\u7684\u3002\u662f\u5426\u662f\u6211\u4f7f\u7528\u7684\u7248\u672c\u6709\u8bef\uff1f. > @dezhonger \uff0c\u73b0\u5728\u6709\u66f4\u65b0\u7684\u7248\u672c\u4e86\u3002\n\u6211\u770breadme\u91cc\u5199\u7684\u662f1.2.51\uff0c\u6700\u65b0\u7684\u7248\u672c\u662f\uff1f. > @dezhonger \uff0c\u73b0\u5728\u6709\u66f4\u65b0\u7684\u7248\u672c\u4e86\u3002\n\u6211\u770breadme\u91cc\u5199\u7684\u662f1.2.51\uff0c\u6700\u65b0\u7684\u7248\u672c\u662f\uff1f. \u6211\u5347\u7ea7\u5230\u4e861.2.54\u89e3\u51b3\u4e86\u8be5\u95ee\u9898. \u81ea\u5df1debug\u8bd5\u8bd5\uff1f. ",
    "libinglong": "\nplease tell me which version\n\nthe version is \n1.2.53\nby the way,the assertEquals of Issue2132 may be like  \"cpu\":{\"$ref\":\"$[0].[0]\"}(now the output is \"cpu\":{\"$ref\":\"$[0].null\"). \n\nplease tell me which version\n\nthe version is \n1.2.53\nby the way,the assertEquals of Issue2132 may be like  \"cpu\":{\"$ref\":\"$[0].[0]\"}(now the output is \"cpu\":{\"$ref\":\"$[0].null\"). the class Computer in your Issue2132 test case don't have getters and setters @wenshao \nwith getters and setters,the test failed.the result is:\njunit.framework.ComparisonFailure: \nExpected :[[{\"name\":\"intell\",\"speed\":3.3},{\"height\":9,\"name\":\"samsung\",\"width\":16},\"2\",\"3\"],{}]\nActual   :[[{\"name\":\"intell\",\"speed\":3.3},{\"height\":9,\"name\":\"samsung\",\"width\":16},\"2\",\"3\"],{\"cpu\":{\"$ref\":\"$[0].null\"},\"screen\":{\"$ref\":\"$[0].null\"}}]. \u65e0\u8bba\u52a0\u591a\u5c11\u6ce8\u91ca\uff0c\u4f60\u8be5\u8bfb\u4e0d\u61c2\u8fd8\u662f\u8bfb\u4e0d\u61c2\n\u591a\u8bf7\u6559\u4e0b\u9ad8\u624b\u600e\u4e48\u8bfb\u6e90\u7801\u5c82\u4e0d\u662f\u66f4\u597d\uff1f. \u5efa\u8bae\u628a\u6b64\u9009\u9879\u4f5c\u4e3a\u9ed8\u8ba4\u9009\u9879\u5427 @wenshao . ",
    "CptTZ": "Use SerializerFeature.DisableCircularReferenceDetect.\nSee: https://blog.csdn.net/qq_35873847/article/details/78850528. ",
    "ysdxz207": "\u4ee3\u7801\u53ea\u662f\u65b9\u4fbf\u89c2\u770b\u7684\uff0c\u5b9e\u9645\u7684\u5e94\u7528\u6570\u636e\u662fvalue\u4e2d\u6709json\u5b57\u7b26\u4e32\u3002\n\u5c31\u662f\u8bf4\u6211\u60f3\u628a\n```\n{\n    \"arr\":\"[{\\\"key0\\\":\\\"value0\\\"},{\\\"key1\\\":\\\"value1\\\"},{\\\"key2\\\":\\\"value2\\\"}]\",\n    \"name\":\"zhangsan\",\n    \"info\":\"{\\\"sex\\\":\\\"\u7537\\\",\\\"desc\\\":\\\"\u8fd9\u5bb6\u4f19\u5f88\u61d2\uff0c\u4ec0\u4e48\u4e5f\u6ca1\u7559\u4e0b\\\"}\"\n}\n```\n\u683c\u5f0f\u6210\uff1a\n{\n    \"arr\":[\n        {\n            \"key0\":\"value0\"\n        },\n        {\n            \"key1\":\"value1\"\n        },\n        {\n            \"key2\":\"value2\"\n        }\n    ],\n    \"name\":\"zhangsan\",\n    \"info\":{\n        \"sex\":\"\u7537\",\n        \"desc\":\"\u8fd9\u5bb6\u4f19\u5f88\u61d2\uff0c\u4ec0\u4e48\u4e5f\u6ca1\u7559\u4e0b\"\n    }\n}\njs\u7684JSON.parse\u518dJSON.stringify\u53ef\u4ee5\u505a\u5230\uff0c\u4f46\u6211\u7684\u7a0b\u5e8f\u4e0d\u6d89\u53ca\u524d\u7aef\uff0c\u7eafkotlin. @LSL1618 \u8fd9\u4e2a\u4e0d\u73b0\u5b9e\u7684\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u8fd4\u56de\u7ed3\u679c\u5d4c\u5957\u4e86\u591a\u5c11\u5c42. \u8fd9\u6837\u662f\u53ef\u4ee5\u7684\uff0c\u611f\u8c22\u63d0\u4f9b\u4e86\u9664\u6539\u540d\u5916\u7684\u53e6\u4e00\u4e2a\u65b9\u6848\u3002. ",
    "nanpingwang": "\u4f46\u662f\u6709\u8fd9\u79cd\u9700\u6c42\u5e94\u7528\u573a\u666f\u554a, \u5e0c\u671b\u80fd\u652f\u6301\u6216\u8005\u63d0\u4f9b\u522b\u7684\u8bbe\u7f6e\u65b9\u5f0f\u6765\u652f\u6301. ",
    "scutuyu": "java\nFastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter(){\n            @Override\n            protected void writeInternal(Object object, HttpOutputMessage outputMessage) throws IOException, HttpMessageNotWritableException {\n                if (object instanceof ReturnData) {\n                    // \u5148\u8f6c\u4e3ajson\u5b57\u7b26\u4e32\uff0c\u5728\u89e3\u6790\u4e3ajsonObject\u5bf9\u8c61\uff0c\u6709\u4e9b\u5fae\u6027\u80fd\u5f71\u54cd\uff0c\u4f46\u662f\u4e3a\u4e86\u80fd\u591f\u5c06Map\u4e2d\u7684\u6570\u636e\u7684key\u503c\u4e5f\u8f6c\u4e3a\u86c7\u5f62\u547d\u540d\n                    object = JSON.toJSONString(object, new NameFilter() {\n                        @Override\n                        public String process(Object object, String name, Object value) {\n                            return humpToLine(name);\n                        }\n                    });\n                    object = JSON.parseObject(object.toString());\n                } else if (object instanceof Json) {\n                    object = handleSwaggerWebJson(object);\n                }\n                super.writeInternal(object, outputMessage);\n            }\n        };. ",
    "zhaogeyuan": "\u5728\u522b\u7684\u9879\u76ee\u91cc\u7f8e\u62a5\u9519,\u6211\u5f15\u8fc7\u6765\u5c31\u62a5\u9519\u4e86.\u6000\u7591\u662f\u522b\u7684jar\u5305\u5f15\u8d77.\u8fd9\u4e2a\u662f\u54ea\u4e2ajar\u5f15\u8d77\u7684\u5440?. \u662f\u6211\u672c\u5730jar\u51b2\u7a81\u4e86,\u6253\u6270\u4e86. ",
    "zhcwang": "\nfollowSeries\n\u6211\u60f3\u7528FASTJSON\u81ea\u5e26\u7684JSONPath\u53d6\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n@Test\n    public void testComplicateJsonPath(){\n        String jsonPath = \"$.data.list.followSeries[0].name\";\n        System.out.println(JSONPath.read(Constants.SAMPLE_JSON, jsonPath));\n    }. ",
    "huanghuan": "\u9664\u4e86\u4e0a\u8ff0\u4e24\u79cdDate\uff0c\u5efa\u8bae\u4e5f\u540c\u65f6\u8003\u8651\u4e0bLocalDate\u548cLocalDateTime\u5982\u4f55\u8bbe\u7f6e\u683c\u5f0f\u3002. ",
    "junjun-yang": "\u4f7f\u7528scala.util.parsing.json\u53ef\u4ee5\u5f97\u5230\u9884\u671f\u8f93\u51fa\nval map=Map(\"test1\" -> \"aa\")\n  val result=scala.util.parsing.json.JSONObject.apply(map)\nprintln(result)\n\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a\n{\"test1\" : \"aa\"}\n\u60f3\u8bf7\u6559\u4e0bfastjson\u5e8f\u5217\u5316\u5f02\u5e38\u7684\u539f\u56e0. i didn't solve it. fastjson is designed for Java, maybe it has some special usage on scala. ",
    "huangyunbo": "@Robert114 I have the same problem. How can I solve it?. ",
    "zhangzhaoliuqun": "\u7248\u672c\u4e3a\uff1a1.2.54\uff0credisTemplate\u5bf9\u8c61\u4e3a\uff1aStringRedisTemplate\uff0cmysql \u5b58\u50a8\u7684\u65e5\u671f\u4e3a\uff1a1967-12-11 00:00\n\u9996\u5148\u662f\u7f13\u5b58user\u5bf9\u8c61\uff08\u5305\u542bjava.sql.Timestamp\u7c7b\u578b\uff09:\nsession\u662f\u4e00\u4e2aMap\nredisTemplate.opsForHash().putAll(SystemConstants.SESSION_ID + userId, session);\n\u7136\u540e\u83b7\u53d6\u6570\u636e\uff08StringRedisTemplate\uff09\uff1a\nString user = (String) getSession().get(SystemConstants.USER);\nreturn JSONObject.parseObject(user).toJavaObject(UserVO.class);\n1970-01-01 00:00 \u4e4b\u524d\u7684\u65e5\u671f\u62a5\uff1aCaused by: com.alibaba.fastjson.JSONException: can not cast to Timestamp, value : -65001600000\n1970-01-01 00:00\u4e4b\u540e\u7684\u65e5\u671f\u90fd\u6ca1\u6709\u95ee\u9898. user \u662f\u4e00\u4e2aString\u7c7b\u578b\u7684JSON \u5b57\u7b26\u4e32. ",
    "cykuo3": "\u56e0\u4e3a\u65f6\u95f4\u6233\u538b\u6839\u5c31\u4e0d\u652f\u6301\u90a3\u4e48\u957f\u5f97\u5566. ",
    "Ronustine": "\u76ee\u524d\u5904\u7406\u65b9\u5f0f\uff1a\n// \u5148\u8f6c\uff0c\u4fdd\u7559null\nJSONObject a = JSON.parseObject(str, Feature.IgnoreNotMatch);\n// \u5355\u72ec\u89e3\u6790\u8be5\u5b57\u6bb5\nString desc = JSON.toJSONString(a.get(\"desc\"), SerializerFeature.WriteMapNullValue) ;\n// \u8f6c\u6362\u540e\u76f4\u63a5\u8986\u76d6\u6389\nBean bean = JSON.parseObject(json, Bean.class);\nbean.setDesc(desc);\n\u55ef\u55ef\uff0c\u8fd9\u90fd\u5199\u4e86\u4e9b\u5565\u554a. ",
    "leeaee": "```java\nMultimap multimap = ArrayListMultimap.create();\nmultimap.put(\"a\", \"111\");\nmultimap.put(\"a\", \"222\");\nmultimap.put(\"u\", \"111\");\nmultimap.put(\"u\", \"222\");\nmultimap.put(\"u\", \"333\");\nSystem.out.println(JSON.toJSONString(multimap));\nString s = \"{\\\"a\\\":[\\\"111\\\",\\\"222\\\"],\\\"u\\\":[\\\"111\\\",\\\"222\\\",\\\"333\\\"]}\";\nMultimap map = JSON.parseObject(s, Multimap.class);\nSystem.out.println(map);\n```\n\u8fd0\u884c\u8f93\u51fa\nlog\n{\"a\":[\"111\",\"222\"],\"u\":[\"111\",\"222\",\"333\"]}\n{}\n@wenshao \u8fd9\u79cd\u7c7b\u578b\u7684\u5904\u7406\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u5b9e\u73b0\u5462\uff1f. ",
    "davinwang": "CLA signed.. \n. Here is the fix for #2185 and it is suppose to be faster than the original implementation by avoid serialize/deserialize the Map/List. Any comments are welcomed.\n@wenshao . ",
    "chimisgo": "1.2.55 1.2.56\u4f9d\u65e7\u5b58\u5728. ",
    "jasonhancn": "\u8fdb\u4e00\u6b65\u770b\u4ee3\u7801\u540e\u53d1\u73b0\uff0cJSON.parse\u8fd9\u4e2a\u51fd\u6570\u4e2d\n```\n    public static  T parseObject(byte[] bytes, int offset, int len, Charset charset, Type clazz, Feature... features) {\n        if (charset == null) {\n            charset = IOUtils.UTF8;\n        }\n    String strVal;\n    if (charset == IOUtils.UTF8) {\n        char[] chars = allocateChars(bytes.length);\n        int chars_len = IOUtils.decodeUTF8(bytes, offset, len, chars);\n        if (chars_len < 0) {\n            return null;\n        }\n\n        strVal = new String(chars, 0, chars_len);\n    } else {\n        if (len < 0) {\n            return null;\n        }\n\n        strVal = new String(bytes, offset, len, charset);\n    }\n\n    return parseObject(strVal, clazz, features);\n}\n\n```\nUTF-8 decode\u7684\u7ed3\u679c\u5c0f\u4e8e0\u7684\u65f6\u5019\uff0c\u7ed3\u679c\u662f\u4e3a\u7a7a\uff0c\u76f4\u63a5\u89e3\u6790\u7684\u65f6\u5019\u8fc7\u7a0b\u4e5f\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u8fd9\u4e2aIOUtils.decodeUTF8\u7684\u7ed3\u679c\u663e\u7136\u4e0eJava\u5bf9\u4e8e\u975e\u6cd5\u5b57\u7b26\u7684\u5904\u7406\u65b9\u6848\u4e0d\u540c\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u76f4\u63a5\u5224\u5b9a\u4e3a\u9519\u8bef\uff0c\u800cJava\u65b0\u5efaString\u7684\u65f6\u5019\u4f1a\u5c06\u5b83\u8f6c\u6362\u4e3a\u56fa\u5b9a\u7684\u9519\u8bef\u7b26\u53f7\n. ",
    "WengJim": "\u52a0\u4e86\u4e2a @JSONField( name=\"_expiryDate\") \u5c31\u6b63\u5e38\u4e86\u3002. ",
    "yancheng199287": "\u4f7f\u7528\u6700\u65b0\u72481.5.24. om.alibaba.fastjson.JSONException: parseBoolean error, field : is_call      \nprivate Boolean is_call;\n\n\u8fd9\u4e2a\u53cd\u5e8f\u5217\u5e03\u5c14\u503c\u4e5f\u62a5\u9519. \u95ee\u9898\u89e3\u51b3  \u65e5\u671f\u683c\u5f0f\u7684\u95ee\u9898  \u5355\u4f4d\u6570\u65e5 \u6ca1\u67090\u8865\u4f4d. \u8fd8\u6709\u90a3\u4e2a is_call  \u53cd\u5e8f\u5217\u5316\u4e0d\u77e5\u9053\u5565\u95ee\u9898\uff0c\u6362\u4e2a\u5b57\u6bb5\u5c45\u7136\u5c31\u53ef\u4ee5\uff0c\u5177\u4f53\u6211\u89e3\u51b3\u4e86 \u518d\u6765\u8bf4\u4e0b. ",
    "kickgod": "\u53ef\u4ee5\u4e86  \u8c22\u8c22\u5566 \ud83d\udc4d . ",
    "GaodYang": "\u5fc5\u987b\u8bbe\u7f6e\u503c\u624d\u80fd\u6b63\u786e\u663e\u793a\uff0c\u4f8b\u5982\n\u5b9a\u4e49\u4e86ApiResponse<Long>\n\u4e0dsetData\u7684\u65f6\u5019\u7ed3\u679c\u662f{} \u800c\u4e0d\u662f{data:{}}\nsetDate(123l);\u4e4b\u540e\u6b63\u5e38\u663e\u793a{\"data\":123}\n\u4f60\u6240\u8bf4\u7684{\"data\":{}}\u7ed3\u679c\u5e94\u8be5\u662f\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u8bbe\u7f6e\u5728data\u91cc\u9762\uff0c\u4f46\u662f\u5b9e\u4f8b\u5c5e\u6027\u53c8\u6ca1\u6709\u8d4b\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5bf9\u8c61\u672c\u8eab\u5c31\u5e94\u8be5\u7528{}\u8868\u793a\u3002\n\u5982\u679c\u4f60\u7c7b\u578b\u5185\u5bb9\u7684\u610f\u601d\u662f\u663e\u793a\u5bf9\u8c61\u5b57\u6bb5\u7684\u8bdd\uff0c\u52a0\u4e0aSerializerFeature.WRITE_MAP_NULL_FEATURES\u5c31\u53ef\u4ee5\u4e86. ",
    "huoxudong125": "@GaodYang  Thks. @GaodYang  \u5982\u679c\u5b9a\u4e49\n```\nApiResponse>  response=new ApiResponse>();\nList list=new ArrayList();\nlist.add(\"a\");\nresponse.setData(list)\n```\n\u5e8f\u5217\u5316\u540e{data:{}} . ",
    "huxizhun": "ExtraProcessor\u9ed8\u8ba4\u662f\u7528\u6765\u5904\u7406\u591a\u4f59\u5b57\u6bb5\u7684\u3002\u4e0d\u662f\u7528\u6765\u53cd\u5e8f\u5217\u5316\u65f6\u4fee\u6539\u503c\u7684\u3002\u5982\u679c\u4f60\u60f3\u5728\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\u4fee\u6539date\u7684\u503c\u53ef\u4ee5\u5b9e\u73b0ObjectDeserializer\u3002\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\uff0c\u8bf7\u6307\u6b63\n```\npublic class ProcessTest {\n   /\u7528\u4e8e\u5904\u7406Memo\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316/\n    public static class MemoDeserializer implements ObjectDeserializer {\n        @Override\n        public  T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n            Memo memo = null;\n            if (((Class)type).getName().equals(Memo.class.getName())) {\n                memo = (new JavaBeanDeserializer(parser.getConfig(), Memo.class)).deserialze(parser, type, fieldName);\n                memo.setDate(new Date(memo.getDate().getTime()1000));\n            }\n        return (T) memo;\n    }\n\n    @Override\n    public int getFastMatchToken() {\n        return JSONToken.LBRACE;\n    }\n}\n\n/*Memo\u5b9e\u4f53/\n    public static class Memo {\n        private Date date;\n    public Date getDate() {\n        return date;\n    }\n\n    @JSONField\n    public void setDate(Date date) {\n        this.date = date;\n    }\n}\n\n/*\u4e3b\u65b9\u6cd5/\n    public static void main(String[] args) {\n        List list = new ArrayList<>();\n        Memo memo = new Memo();\n        memo.setDate(new Date());\n        list.add(memo);\n        String data = JSON.toJSONString(list);\n        System.out.println(\"Before:\"+memo.getDate().getTime());\n        System.out.println(\"data:\"+data);\n    ParserConfig config = ParserConfig.getGlobalInstance();\n    config.putDeserializer(Memo.class, new MemoDeserializer());\n\n    List<Memo> memos = Arrays.asList(JSON.parseObject(data, Memo[].class));\n    System.out.println(\"After:\"+memos.get(0).getDate().getTime());\n}\n\n}\n```. ExtraProcessor\u9ed8\u8ba4\u662f\u7528\u6765\u5904\u7406\u591a\u4f59\u5b57\u6bb5\u7684\u3002\u4e0d\u662f\u7528\u6765\u53cd\u5e8f\u5217\u5316\u65f6\u4fee\u6539\u503c\u7684\u3002\u5982\u679c\u4f60\u60f3\u5728\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\u4fee\u6539date\u7684\u503c\u53ef\u4ee5\u5b9e\u73b0ObjectDeserializer\u3002\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\uff0c\u8bf7\u6307\u6b63\n```\npublic class ProcessTest {\n   /\u7528\u4e8e\u5904\u7406Memo\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316/\n    public static class MemoDeserializer implements ObjectDeserializer {\n        @Override\n        public  T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n            Memo memo = null;\n            if (((Class)type).getName().equals(Memo.class.getName())) {\n                memo = (new JavaBeanDeserializer(parser.getConfig(), Memo.class)).deserialze(parser, type, fieldName);\n                memo.setDate(new Date(memo.getDate().getTime()1000));\n            }\n        return (T) memo;\n    }\n\n    @Override\n    public int getFastMatchToken() {\n        return JSONToken.LBRACE;\n    }\n}\n\n/*Memo\u5b9e\u4f53/\n    public static class Memo {\n        private Date date;\n    public Date getDate() {\n        return date;\n    }\n\n    @JSONField\n    public void setDate(Date date) {\n        this.date = date;\n    }\n}\n\n/*\u4e3b\u65b9\u6cd5/\n    public static void main(String[] args) {\n        List list = new ArrayList<>();\n        Memo memo = new Memo();\n        memo.setDate(new Date());\n        list.add(memo);\n        String data = JSON.toJSONString(list);\n        System.out.println(\"Before:\"+memo.getDate().getTime());\n        System.out.println(\"data:\"+data);\n    ParserConfig config = ParserConfig.getGlobalInstance();\n    config.putDeserializer(Memo.class, new MemoDeserializer());\n\n    List<Memo> memos = Arrays.asList(JSON.parseObject(data, Memo[].class));\n    System.out.println(\"After:\"+memos.get(0).getDate().getTime());\n}\n\n}\n```. ExtraProcessor\u9ed8\u8ba4\u662f\u7528\u6765\u5904\u7406\u591a\u4f59\u5b57\u6bb5\u7684\u3002\u4e0d\u662f\u7528\u6765\u53cd\u5e8f\u5217\u5316\u65f6\u4fee\u6539\u503c\u7684\u3002\u5982\u679c\u4f60\u60f3\u5728\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\u4fee\u6539date\u7684\u503c\u53ef\u4ee5\u5b9e\u73b0ObjectDeserializer\u3002\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\uff0c\u8bf7\u6307\u6b63\n```\npublic class ProcessTest {\n   /\u7528\u4e8e\u5904\u7406Memo\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316/\n    public static class MemoDeserializer implements ObjectDeserializer {\n        @Override\n        public  T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {\n            Memo memo = null;\n            if (((Class)type).getName().equals(Memo.class.getName())) {\n                memo = (new JavaBeanDeserializer(parser.getConfig(), Memo.class)).deserialze(parser, type, fieldName);\n                memo.setDate(new Date(memo.getDate().getTime()1000));\n            }\n        return (T) memo;\n    }\n\n    @Override\n    public int getFastMatchToken() {\n        return JSONToken.LBRACE;\n    }\n}\n\n/*Memo\u5b9e\u4f53/\n    public static class Memo {\n        private Date date;\n    public Date getDate() {\n        return date;\n    }\n\n    @JSONField\n    public void setDate(Date date) {\n        this.date = date;\n    }\n}\n\n/*\u4e3b\u65b9\u6cd5/\n    public static void main(String[] args) {\n        List list = new ArrayList<>();\n        Memo memo = new Memo();\n        memo.setDate(new Date());\n        list.add(memo);\n        String data = JSON.toJSONString(list);\n        System.out.println(\"Before:\"+memo.getDate().getTime());\n        System.out.println(\"data:\"+data);\n    ParserConfig config = ParserConfig.getGlobalInstance();\n    config.putDeserializer(Memo.class, new MemoDeserializer());\n\n    List<Memo> memos = Arrays.asList(JSON.parseObject(data, Memo[].class));\n    System.out.println(\"After:\"+memos.get(0).getDate().getTime());\n}\n\n}\n```. ",
    "GreedyPirate": "@huxizhun \u8fd9\u53ef\u4ee5\u5199\u7684\u66f4\u901a\u7528\u4e9b\u5417\uff0c\u6211\u770b\u4f60deserialze\u65b9\u6cd5\u4e2d\u662f\u5199\u6b7b\u4e86\u7c7b\u578b\uff0cset\u65b9\u6cd5\u4e5f\u662f\u5199\u6b7b\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5224\u65ad\u5b57\u6bb5\u7c7b\u578b\u4e3aDate\uff0c\u5c31\u4e58\u4ee51000\u5462\n. @huxizhun \u8fd9\u53ef\u4ee5\u5199\u7684\u66f4\u901a\u7528\u4e9b\u5417\uff0c\u6211\u770b\u4f60deserialze\u65b9\u6cd5\u4e2d\u662f\u5199\u6b7b\u4e86\u7c7b\u578b\uff0cset\u65b9\u6cd5\u4e5f\u662f\u5199\u6b7b\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5224\u65ad\u5b57\u6bb5\u7c7b\u578b\u4e3aDate\uff0c\u5c31\u4e58\u4ee51000\u5462\n. ",
    "jiaruifeng07": "String content = FileCopyUtils.copyToString(er.getReader());\nJSONObject jo = JSON.parseObject(content);\n\n.   String content = FileCopyUtils.copyToString(er.getReader());\n    JSONObject jo = JSON.parseObject(content);\n. ",
    "zhangtianxiao": "\u4ec0\u4e48\u610f\u601d? \u4e0d\u662f\u7f16\u8bd1\u8017\u65f6, \n\u65ad\u70b9\u770b\u4e86, \u4ec5\u5728toJSONString\u8fd9\u4e00\u6b65\u8017\u65f6\u7565\u4e45. \u4ec0\u4e48\u610f\u601d? \u4e0d\u662f\u7f16\u8bd1\u8017\u65f6, \n\u65ad\u70b9\u770b\u4e86, \u4ec5\u5728toJSONString\u8fd9\u4e00\u6b65\u8017\u65f6\u7565\u4e45. ",
    "zgl00838": "\u8fd9\u662f\u56e0\u4e3afastjson\u5bf9\u5e8f\u5217\u5316\u5668\u505a\u4e86\u7f13\u5b58,\u4f60\u53c2\u6570\u6539\u53d8\u540e\u5b83\u8fd8\u662f\u8c03\u7528\u4e4b\u524d\u7684\u5e8f\u5217\u5316\u5668,\u6682\u65f6\u627e\u4e0d\u5230\u89e3\u51b3\u65b9\u6848;\u4f60\u53ef\u4ee5\u7528jackson\u66ff\u4ee3. ",
    "haloxtt": "\u95ee\u9898\uff1a\u4e00\u4e2a\u7ed3\u6784\u4e3a\uff1a{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \u7684Object\uff0c\u76f4\u63a5\u8c03\u7528.toString()\u65b9\u6cd5\u65f6\uff0c\u7ed3\u679c\u4e3a:\"{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \",\u4f46\u662f\u8c03\u7528fastjson\u7684JSON.toJSONString(Object object)\u65f6\u8fd4\u56de\u503c\u4e3a\"\"{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \"\",\u989d\u5916\u5957\u4e86\u4e00\u5c42\u53cc\u5f15\u53f7\uff0c\u662fSerializeWriter\u7684writeStringWithDoubleQuote(String text, final char seperator)\u65b9\u6cd5\u91ccbuf[]\u6570\u7ec4\u5f00\u5934\u548c\u7ed3\u5c3e\u6dfb\u52a0\u4e86\u5f15\u53f7\uff0c\u8fd9\u4e2a\u5f15\u53f7\u662f\u5426\u53ef\u4ee5\u53bb\u6389\uff1f. \u95ee\u9898\uff1a\u4e00\u4e2a\u7ed3\u6784\u4e3a\uff1a{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \u7684Object\uff0c\u76f4\u63a5\u8c03\u7528.toString()\u65b9\u6cd5\u65f6\uff0c\u7ed3\u679c\u4e3a:\"{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \",\u4f46\u662f\u8c03\u7528fastjson\u7684JSON.toJSONString(Object object)\u65f6\u8fd4\u56de\u503c\u4e3a\"\"{\"itemId\":\"SP0000982\",\"notSupportSkuList\":{\"lease\":[]},\"operateType\":\"onShelf\",\"userId\":\"EMq6NMsNT\",\"userName\":\"xtt\"} \"\",\u989d\u5916\u5957\u4e86\u4e00\u5c42\u53cc\u5f15\u53f7\uff0c\u662fSerializeWriter\u7684writeStringWithDoubleQuote(String text, final char seperator)\u65b9\u6cd5\u91ccbuf[]\u6570\u7ec4\u5f00\u5934\u548c\u7ed3\u5c3e\u6dfb\u52a0\u4e86\u5f15\u53f7\uff0c\u8fd9\u4e2a\u5f15\u53f7\u662f\u5426\u53ef\u4ee5\u53bb\u6389\uff1f. ",
    "zxiaofan": "\u4f60\u8fd9\u4e2ajson\u5b57\u7b26\u4e32\u4e0d\u6210\u7acb\u5427\uff0c\u5b57\u7b26\u4e32\u5e94\u8be5\u8f6c\u4e49 String jsonStr =\"{\\\"key\\\":\\\"1\\1\\\"}\";. \u4f60\u8fd9\u4e2ajson\u5b57\u7b26\u4e32\u4e0d\u6210\u7acb\u5427\uff0c\u5b57\u7b26\u4e32\u5e94\u8be5\u8f6c\u4e49 String jsonStr =\"{\\\"key\\\":\\\"1\\1\\\"}\";. ",
    "raoshihong": "\u76f4\u63a5\u7ee7\u627fContextValueFilter\u5c31\u53ef\u4ee5\u4e86. \u76f4\u63a5\u7ee7\u627fContextValueFilter\u5c31\u53ef\u4ee5\u4e86. ",
    "ruancheng77": "\u5bfc\u81f4\u6b64\u5f02\u5e38\u7684\u539f\u56e0\u5e94\u8be5\u662f\u57fa\u7c7b\u91cc\u9762\u7684id\u662f\u6cdb\u578b\u7c7b\u578b\uff0cfastjson \u53ef\u80fd\u5728\u5e95\u5c42\u5904\u7406\u8fd9\u4e2a\u6cdb\u578b\u65f6\u6ca1\u6709\u5904\u7406\u5b8c\u5584\u3002. ",
    "chenfeicqq": "fastjson \u7248\u672c\uff1a1.2.50. ",
    "ALittleDruid": "\n\u80fd\u63d0\u4f9b\u91cd\u73b0\u95ee\u9898\u7684case\u4e48\uff1f\n\nclass TestClass {\n    public float[][] a;\n}\nString jsonString = \"{\\\"a\\\":[1.0,2.0]}\";        //{\"a\":[1.0,2.0]}\nTestClass testClass = JSON.parseObject(jsonString,TestClass.class);. ",
    "Sochene": "```\npackage t;\nimport java.util.Date;\nimport java.util.List;\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\npublic class Test3 {\nprivate List list;\nprivate Date date;\n\npublic List getList() {\n    return list;\n}\n\npublic void setList(List list) {\n    this.list = list;\n}\n\npublic Date getDate() {\n    return date;\n}\n\npublic void setDate(Date date) {\n    this.date = date;\n}\n\npublic static void main(String[] args) {\n\n//        System.setProperty(\"java.vm.name\", \"dalvik\");\n        String string = JSON.toJSONString(new Test3(), SerializerFeature.WriteNullListAsEmpty);\n        System.out.println(string);\n    }\n}\n```\n\u5f53\u4f7f\u7528 \"dalvik\"\u8df3\u8fc7asm\u65f6\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0 @wenshao . \u4ee5\u4e0b\u662f\u5728ASMSerializerFactory\u4f7f\u7528ASM\u751f\u6210JavaBeanSerializer\u5b50\u7c7b\u7684\u4ee3\u7801\u4e2d\uff0c\u5bf9\u5224\u65ad\u503c\u4e3a\u7a7a\u7684\u5b57\u6bb5\u5904\u7406\u51fd\u6570_if_write_null\n\n\u5f53\u4e00\u4e2anull\u5b57\u6bb5\u4e0d\u662fString\\Number\\Collection\\Boolean \u65f6\uff0c\u5b83\u7684\u5e8f\u5217\u5316\u8fc7\u6ee4mask\u662f\nSerializerFeature.WRITE_MAP_NULL_FEATURES\n\n\u800cWriteNullListAsEmpty \u5c31\u88ab\u5305\u542b\u5728 WRITE_MAP_NULL_FEATURES\u4e4b\u4e2d\n@wenshao \u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u8bbe\u7f6e\u4e86WriteNullBooleanAsFalse\u3001WriteNullListAsEmpty\u3001WriteNullNumberAsZero\u3001WriteNullStringAsEmpty\u8fd9\u4e9bfeature\u4e4b\u540e\uff0cnull\u5b57\u6bb5\u9700\u8981\u88ab\u8f93\u51fa\u3002\u800c\u4e14\u53ea\u6709\u5728ASM\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fd9\u6837\uff0c\u800cAndroid\u4e0d\u4f1a\u3002. ",
    "qzmer1104": "\u6216\u8005\u53cd\u8fc7\u6765\uff0c\u5e93\u91cc\u5b58\u4e86\u522b\u4eba\u76f4\u63a5\u5b58\u5230mysql\u7684datetime\u7c7b\u578b\u7684\uff0cutc\u65f6\u95f4\uff0c\u8981\u8f6c\u6362\u6210gmt+8\u7684\u65f6\u95f4\u6765\u663e\u793a\u3002. \u9664\u4e86\u81ea\u5df1\u5199\u5e8f\u5217\u5316. wiki\u91cc\u6709\uff1a\nhttps://github.com/alibaba/fastjson/wiki/%E5%9C%A8-Spring-%E4%B8%AD%E9%9B%86%E6%88%90-Fastjson. ",
    "zhenglzh": "\n\u9664\u4e86\u81ea\u5df1\u5199\u5e8f\u5217\u5316\n\n\u73b0\u5728\u5c31\u662f\u81ea\u5df1\u5f00\u53d1\u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c \u56e0\u4e3a\u7cfb\u7edf\u7684\u65e7\u6709\u7684\u5e95\u5c42\u6a21\u578b\u4e0d\u597d\u53d8\u5316\uff0c\u56e0\u6b64\u53ea\u80fd\u7528\u8fd9\u4e2a\u65b9\u5f0f\u4e86. \u671f\u5f85\u5927\u795e. ",
    "freeseawind": "@wenshao . ",
    "toutoudnf": "\u662f\u76ee\u524d\u7684\u6d4b\u8bd5\u7528\u4f8b\u6709\u95ee\u9898\u5417\uff1f\u4e3a\u4ec0\u4e48\u53ea\u4fee\u6539\u4e86\u4e00\u884c\u5355\u6b21\u62fc\u5199\uff0c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u51fa\u9519\u5462\uff1f. ",
    "zenglian": "\u6709\u4e00\u4e2atest\u9519\u8bef\uff0c\u6709\u7a7a\u518d\u770b. ",
    "freebird2016": "converters.add(0, converter); \u4f7f\u7528spring boot 2.0.1\u4ee5\u4e0a\uff0c\u9700\u8981\u8fd9\u6837\u7528\u624d\u6709\u7528\u3002. converters.add(0, converter); \u4f7f\u7528spring boot 2.0.1\u4ee5\u4e0a\uff0c\u9700\u8981\u8fd9\u6837\u7528\u624d\u6709\u7528\u3002. ",
    "noear": "\u6a21\u578b\n```java\npublic class UserGroupModel {\n    public long id;\n    public List users;\n    public Map users2;\n    public Set users3;\n    public String[] names;\n    public short[] ids;\n    public Integer[] iids;\n    public BigDecimal dd;\n    public Timestamp tt1;\n    public Date tt2;\n}\npublic class UserModel {\n    public int id;\n    public String name;\n    public String note;\n}\n```\n\u6d4b\u8bd5\u6570\u636e\n```java\nUserGroupModel group = new UserGroupModel();\n        group.id = 9999;\n        group.users = new ArrayList<>();\n        group.users2 = new LinkedHashMap<>();\n        group.users3 = new TreeSet<>();\n        group.names = new String[5];\n        group.ids = new short[5];\n        group.iids = new Integer[5];\n        group.dd = new BigDecimal(12);\n        group.tt1 = new Timestamp(new Date().getTime());\n        group.tt2 = new Date();\n    for (short i = 0; i < 5 ; i++) {\n        UserModel user = new UserModel();\n        user.id = i;\n        user.name = \"\u5f20\u4e09\" + i;\n        user.note = null;\n        group.users.add(user);\n        group.users2.put(Integer.valueOf(i),user);\n        group.names[i] = \"\u674e\u56db\" + i;\n        group.ids[i] = i;\n    }\n\n. @timandy\n* \u6211\u7528\u7684\u7248\u672c\u662f\uff1a1.2.29\n* \u751f\u6210HashMap\uff0c\u6211\u89c9\u5f97\u662f\u4e0d\u5408\u7406\u7684\u3002Map\u7684\u539f\u751f\u5b9e\u73b0\u5c31\u6709\u597d\u51e0\u4e2a\uff0c\u518d\u52a0\u4e0a\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7684\u3002\u3002\u3002\u4e0d\u80fd\u968f\u4fbf\u5f04\u4e86\u4e2aMap\u3002\u3002\u3002\u4ece\u4ee3\u7801\u4e0a\u770b\uff0c\u5e8f\u5217\u5316\u65f6\u5df2\u8bb0\u5f55\uff1a@type=LinkedHashMap\u4e86\uff1b\u4f46\u662f\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u6ca1\u7528\u8d77\u6765\u3002\u539f\u56e0\u662f\uff0c\u4ee3\u7801\u6709bug\uff1ajava\n//MapDeserializer\u7c7b,300\u591a\u884c\u5904\uff0c\u5373\u4e0b\u9762\u4e24\u5757\u4ee3\u7801\uff0c\u987a\u5e8f\u6362\u4e00\u4e0b\u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u3002\u3002\u3002\n        if (type == Map.class || type == HashMap.class) {\n            return new HashMap();\n        }\n    if (type == LinkedHashMap.class) {\n        return new LinkedHashMap();\n    }\n\n```\n\u4f46\u662f\uff0c\u4ecd\u7136\u6709\u95ee\u9898\u3002\u3002\u3002\u5982\u679c\u6709\u7533\u660e @type \u7684\uff0c\u8fd8\u662f\u5e94\u8be5\u8981\u4f18\u5316\u7528 clazz.newInstance() \uff08\u89e3\u51b3\u81ea\u5b9a\u4e49\u7684\u4e00\u4e9bMap\u5b9e\u73b0\uff09\u3002\u3002\u3002\u5c31\u662f\u8981\u4f18\u5316\u7528 @type \u7533\u660e\u7684\u7c7b\u578b\u3002. @timandy\n\u53e6\u5916\uff0c\u5e0c\u671b\u8003\u8651\u4e3a [] \u6570\u636e\uff0c\u6dfb\u52a0\u7c7b\u578b\u7533\u660e\u3002\u3002\u3002\u5373\u6211\u63d0\u7684\u90a3\u4e2a\u521b\u610f\u60f3\u6cd5\u3002. \u8fd9\u4e2a\u5e94\u8be5\u4e0d\u662f\u9519\u8bef\u3002\u5982\u679c\u4f60\u5199\u6210\uff1aJSON.parse(\"\\\"81833e8936\\\"\")\uff0c\u5c31\u4f1a\u662f\u5b57\u7b26\u4e32\u4e86\uff1a\uff09. \u8fd9\u4e2a\u5e94\u8be5\u4e0d\u662f\u9519\u8bef\u3002\u5982\u679c\u4f60\u5199\u6210\uff1aJSON.parse(\"\\\"81833e8936\\\"\")\uff0c\u5c31\u4f1a\u662f\u5b57\u7b26\u4e32\u4e86\uff1a\uff09. ",
    "jack-zdl": "\u597d\u50cf\u771f\u662f\u7684\uff0c\u6211\u4e5f\u9047\u5230\u4e86\uff0c\n  String BigDecimalObject = (String) JSON.parse(\"I81833e8936\");\nfastjson\u5f02\u5e38\uff0c\nObject BigDecimalObject = JSON.parse(\"81833e8936\");\nfastjson\u6210\u6570\u5b57\u3002. ",
    "lemon-machine": "\u6e90\u5934\u5728\u4e0e\u6570\u672c\u8eab\u5c31\u6709\u7cbe\u5ea6\u95ee\u9898\n\u6784\u9020\u91cc\u4f20 double \u6709\u9b3c\u7684\n\u6362\u5b57\u7b26\u4e32. ",
    "gongxyu": "@wenshao \u597d\u7684\uff0c\u8c22\u8c22\n. ",
    "coutPKprintf": "\u5e94\u8be5\u8fd9\u6837\u5427\nString jsonStr = \"{\\\"reg\\\":\\\"(\\\\.|\\\\?){3,}\\\"}\";\n JSON.parseObject(jsonStr);. ",
    "JevonYang": "\u91cd\u5199\u5b9e\u73b0HttpMessageConverters\u8fd9\u4e2aBean\u5373\u53ef\uff0c\u4e0b\u9762\u7684\u4f9b\u53c2\u8003\u3002\n```\n@Bean\n    public HttpMessageConverters fastJsonHttpMessageConverters() {\n        //1.\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aconvert\u8f6c\u6362\u6d88\u606f\u7684\u5bf9\u8c61;\n        FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();\n        //2:\u6dfb\u52a0fastJson\u7684\u914d\u7f6e\u4fe1\u606f;\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n     //\u7b2c\u4e00\u4e2aSerializerFeature.PrettyFormat\u53ef\u4ee5\u7701\u7565\uff0c\u6bd5\u7adf\u8fd9\u4f1a\u9020\u6210\u989d\u5916\u7684\u5185\u5b58\u6d88\u8017\u548c\u6d41\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7528\u6765\u6307\u5b9a\u5f53\u5c5e\u6027\u503c\u4e3anull\u662f\u662f\u5426\u8f93\u51fa\uff1apro:null\n     //SerializerFeature.SkipTransientField\n    fastJsonConfig.setSerializerFeatures(SerializerFeature.WriteNullStringAsEmpty);\n    // fastJsonConfig.setSerializerFeatures(SerializerFeature.SkipTransientField);\n    //3\u5904\u7406\u4e2d\u6587\u4e71\u7801\u95ee\u9898\n    List<MediaType> fastMediaTypes = new ArrayList<>();\n    fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n    //4.\u5728convert\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f.\n    fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);\n    fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);\n    HttpMessageConverter<?> converter = fastJsonHttpMessageConverter;\n    return new HttpMessageConverters(converter);\n}\n\n```. ",
    "BARERM": "\n\u91cd\u5199\u5b9e\u73b0HttpMessageConverters\u8fd9\u4e2aBean\u5373\u53ef\uff0c\u4e0b\u9762\u7684\u4f9b\u53c2\u8003\u3002\n```\n@Bean\n    public HttpMessageConverters fastJsonHttpMessageConverters() {\n        //1.\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aconvert\u8f6c\u6362\u6d88\u606f\u7684\u5bf9\u8c61;\n        FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();\n        //2:\u6dfb\u52a0fastJson\u7684\u914d\u7f6e\u4fe1\u606f;\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n     //\u7b2c\u4e00\u4e2aSerializerFeature.PrettyFormat\u53ef\u4ee5\u7701\u7565\uff0c\u6bd5\u7adf\u8fd9\u4f1a\u9020\u6210\u989d\u5916\u7684\u5185\u5b58\u6d88\u8017\u548c\u6d41\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7528\u6765\u6307\u5b9a\u5f53\u5c5e\u6027\u503c\u4e3anull\u662f\u662f\u5426\u8f93\u51fa\uff1apro:null\n     //SerializerFeature.SkipTransientField\n    fastJsonConfig.setSerializerFeatures(SerializerFeature.WriteNullStringAsEmpty);\n    // fastJsonConfig.setSerializerFeatures(SerializerFeature.SkipTransientField);\n    //3\u5904\u7406\u4e2d\u6587\u4e71\u7801\u95ee\u9898\n    List<MediaType> fastMediaTypes = new ArrayList<>();\n    fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\n    //4.\u5728convert\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f.\n    fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);\n    fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);\n    HttpMessageConverter<?> converter = fastJsonHttpMessageConverter;\n    return new HttpMessageConverters(converter);\n}\n\n```\n\n\u975e\u5e38\u611f\u8c22\u60a8\u7684\u56de\u7b54\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u786e\u5b9e\u80fd\u89e3\u51b3\u95ee\u9898\u3002\u8d5e\uff01\n\u4f46\u6211\u8fd8\u662f\u597d\u5947configureMessageConverters\u4e3a\u4f55\u4e0d\u751f\u6548\u3002\n\u518d\u6b21\u8868\u793a\u611f\u8c22\uff5e\n. ",
    "rmfish": "@ JsonFormat \u4e0d\u662ffastjson\u7684\u7279\u6027\n\u8981\u4f7f\u7528@JsonField  \u4e0d\u8fc7\u597d\u50cf\u4e5f\u6709\u95ee\u9898\uff0c\u6211\u63d0\u4ea4PR\u4fee\u590d\u4e86. ",
    "shawzh": "com.alibaba.fastjson.JSONPathException: expect '], but '.'\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.accept(JSONPath.java:1620)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.parseArrayAccessFilter(JSONPath.java:1413)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.parseArrayAccess(JSONPath.java:783)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.readSegement(JSONPath.java:756)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.explain(JSONPath.java:1636)\n        at com.alibaba.fastjson.JSONPath.init(JSONPath.java:61)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:86)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:542)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:548). com.alibaba.fastjson.JSONPathException: expect '], but '.'\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.accept(JSONPath.java:1620)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.parseArrayAccessFilter(JSONPath.java:1413)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.parseArrayAccess(JSONPath.java:783)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.readSegement(JSONPath.java:756)\n        at com.alibaba.fastjson.JSONPath$JSONPathParser.explain(JSONPath.java:1636)\n        at com.alibaba.fastjson.JSONPath.init(JSONPath.java:61)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:86)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:542)\n        at com.alibaba.fastjson.JSONPath.extract(JSONPath.java:548). ",
    "GeekkeeG": "\"[{pattern:/\\d{11}/}]\" isn't a valid json format\uff0cthe reason of  JSONException is fastjson think '/' is the beginning of comment\uff0cbut only the following comment formats are valid:\njava\n// comment\n/* comment */. \u5728ExceptionHandler\u7684\u65b9\u6cd5\u4e0a\u52a0\u4e0a@ResponseJSONP\u5c31\u80fd\u8fd4\u56deJSONP\u4e86\n```java\n    @ResponseJSONP\n    @ExceptionHandler(value = {BindException.class})\n    public final Map handleException(BindException ex, WebRequest request) {\n        Map r = new HashMap();\n        r.put(\"name\", \"error\");\n        return r;\n    }\n````. ",
    "honganan": "\u5efa\u8bae\u63cf\u8ff0\u66f4\u6e05\u695a\u70b9\uff0c\u8d34\u51fa\u90e8\u5206\u4ee3\u7801\u53ef\u80fd\u66f4\u597d. ",
    "545314690": "\u600e\u4e48\u4e0d\u8ba9\u5b83\u7ed9\u6211\u8f6c\u4e49\n JSONObject jsonObject = JSONObject.parseObject(\"{\\\"aaa\\\":\\\"\\001\\\"}\");\n System.out.println(jsonObject);\n\u6211\u60f3\u8981\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a{\"aaa\":\"\\001\"},\u800c\u4e0d\u662f{\"aaa\":\"\\u0001\"}. ",
    "pengcgithub": "\u7ecf\u8fc7\u6392\u67e5\uff0c\u53d1\u73b0\u539f\u5148\u914d\u7f6e\u7684fastjson\u66ff\u6362Jackson\u7684\u65b9\u6848\u6ca1\u6709\u751f\u6548\uff0c\u6240\u4ee5\u5176\u5b9e\u9879\u76ee\u4e2d\u8fd8\u662f\u8d70\u7684Jackson\u8fd9\u5957\u5185\u5bb9\u3002. ",
    "1094582170": "\u4f7f\u7528\u7248\u672c1.2.56. > JSON.toJSONStringWithDateFormat()\n\n\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5 JSON.toJSONStringWithDateFormat()\n\u8fd9\u5e94\u8be5\u662f\u4e2abug, \u4fee\u6539\u5168\u5c40\u683c\u5f0f\u4e0d\u4f1a\u751f\u6548\n2305\n\n\u611f\u8c22\u56de\u590d\n\u4f7f\u7528JSON.toJSONStringWithDateFormat(demo,JSON.DEFFAULT_DATE_FORMAT);\n\u53ef\u4ee5\u8fd9\u6837\u89e3\u51b3,\u4f46\u662fJSON.toJSONString(demo, SerializerFeature.WriteDateUseDateFormat)\u8fd9\u6837\u8c03\u7528\u5e94\u8be5\u4e5f\u8981\u80fd\u751f\u6548,\u5982\u679c\u662f\u4e2abug,\u89e3\u51b3\u597d\u4e86\u9ebb\u70e6\u901a\u77e5\u6211\u4e00\u4e0b\n. ",
    "q1045243113": "\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5    JSON.toJSONStringWithDateFormat()\n\u8fd9\u5e94\u8be5\u662f\u4e2abug, \u4fee\u6539\u5168\u5c40\u683c\u5f0f\u4e0d\u4f1a\u751f\u6548\nhttps://github.com/alibaba/fastjson/issues/2305. ",
    "caoliang1918": "\u55ef\u55ef. ",
    "wxisme": "But I think at least one verification method should be provided . For example : \nboolean validate(String text)\n:)\n. "
}