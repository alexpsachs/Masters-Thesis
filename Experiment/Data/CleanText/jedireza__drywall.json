{
    "jedireza": "@sorced-jim good call. I like it. I've renamed the config to app.set('crypto-key', 'k3yb0ardc4t'); instead. I'll commit the change in a few.\n. @ianwalter, thanks for your contribution. Because users can have multiple 'roles', just linking to '/account/' wouldn't always be the right link (ex: if I'm logged in as an admin that link would be wrong). This is generally a user experience feature, and might be better done in javascript so the front end could be cached and/or served statically.\n. @gbrits @parisforaweekend Thank you. I appreciate the contribution.\n- [ ] An empty file /schema/libpeerconnection.log is included in the commits.\n- [ ] Dependencies were not added to the /package.json file.\n  - Unless the bcrypt module was global on the system, this would cause exceptions.\nI think we should create a page in the drywall/wiki called \"Increased Password Security\" and include the instructions and code diff from your commits. Thoughts?\n. Sorry for the delayed reply. I will remember to get this into the wiki when I add some other very needed content. Closing this issue for now.\n@gbrits I want to thank you again for taking the time to create this pull request.\nBest,\nReza.\n. @iamthechad Thanks.\n. @iamthechad yes, this is a great feature for some websites. I appreciate you contributing this.\nI think it would be better to create a new User field called isVerified instead of piggy backing on the isActive field. But like how @MartijnR said about a user editing their email in Account / Settings... we'd have to re-verify a changed email address to stay consistent.\n@MartijnR so cool to hear you've used Drywall. Thank you both for checking out the project and joining in.\n. Ok let's try this again. Making it optional should suffice for those who want to keep the barrier to entry at a minimum before users gain access to their account. \nI don't think we need to do this with the social signup process. A user would have already needed to create an account with those systems, essentially that is a form of verification. \nAnd I guess the re-verification (after an email is updated in /account/settings/) isn't that important since this is really just a preventative measure against account spam.\nI would like to use a different field on the User collection instead of isActive... I like isVerified.\nThoughts?\n. @iamthechad yes a new PR using a feature branch like we did with your last PR would be excellent. Closing this PR for now.\n. @titaniumlou thanks for your contribution. This actually affects all forms on the site. I'm going to hold off on merging for now so we can fix them all in one shot.\n. I opened a new issue to help us fix this project wide.\nhttps://github.com/jedireza/drywall/issues/32\n. @hankwang thanks for your contribution! I implemented your change instead of merging to preserve formatting.\n. @yoblin that's an interesting point. I was about to pull this when I remembered that I copy/paste these commands in the terminal when I'm setting up a project on services like MongoLab, and the db isn't named drywall.\nI'll see if running use drywall throws errors or does something else undesirable in that scenario.\n. @hankwang I'm not sure what happened with your pull request. Yesterday, I was thinking about using a script for the db setup too, but it really seems like more effort than necessary. Thanks for your contribution btw!\n. @iamthechad thanks so much for doing this. I've successfully tested the installation process on windows and my mac. I noted a few minor things to correct and then I'd be happy to pull in the changes.\n. @iamthechad very cool! Hopefully I can clone and test this evening.\n. I thought the same thing about the account link on successful registration, it is hard to see, this will be easy to fix. Also, good point about adding verification after your system has already had users, that would be a gotcha.\nI experienced a good email verification process this weekend using the moz.com website. I think it's worth changing our process.\n- Let users register and log them in (give them a session) just like before.\n- Create an /account/verification/ route and page. This screen can handle sending and re-sending the verification email.\n- Move the isVerified field from User to Account. Then we can add an isVerified method to the Account schema in /schema/Account.js as follows:\njs\n  accountSchema.methods.isVerified = function() {\n    return this.isVerified === 'yes';\n  };\nNote: I'm thinking about opening an issue for us to change these yes|no string fields into booleans. We could eliminate this method if it wasn't a string.\n- Change the ensureAccount method in /routes.js as follows:\njs\nfunction ensureAccount(req, res, next) {\n  if (req.user.canPlayRoleOf('account')) {\n    if (req.app.get('verify-account-email')) {\n        if (!req.user.roles.account.isVerified() && !/^\\/account\\/verification\\//.test(req.url)) {\n          return res.redirect('/account/verification/');\n        }\n    }\n    return next();\n  }\n  res.redirect('/');\n}\nThis seems like a better flow because users have the ability to have verification emails resent. This also allows us to attach the verification logic to Account and not the User. If you think about it, this setting should not affect Admin roles and it makes sense for it to be separate.\nThis is just scratch pad code, there are likely errors in it. I can probably make these changes this evening.\nThoughts anyone?\n. I think we have a winner and it's shipped on master... please feel free to open new issues. :shipit:\n. :+1: I've been thinking about doing this too.\n. Let's update this to include all the SMTP credentials and not just the password.\njs\n//smtp settings\napp.set('smtp-from-name', process.env.SMTP_FROM_NAME || app.get('project-name')+ ' Website');\napp.set('smtp-from-address', process.env.SMTP_FROM_ADDRESS || 'your@email.addy');\napp.set('smtp-credentials', {\n  user: process.env.SMTP_USERNAME || 'your@email.addy',\n  password: process.env.SMTP_PASSWORD || 'bl4rg!',\n  host: process.env.SMTP_HOST || 'smtp.gmail.com',\n  ssl: /yes|true/.test(process.env.SMTP_USE_SSL) || true\n});\nAs you may have noticed... I think we should update the setting names from email-* to smtp-*.\nThese files need to be updated to reflect the renamed settings:\n/utilities/sendmail.js\n/views/account/verification/index.js\n/views/contact/index.js\n/views/login/forgot/index.js\n/views/signup/index.js\n. @pablodenadai thanks for opening a pull request. Do you know what's causing these tmp files to be created on your machine? \n. This could be from your editor. What are you using? Sublime Text 2?\n. These might be scratch files created by your ST3. If that's the case, I'm not sure if it's the best solution to add your pull request. I think you can disable or change this feature in ST2/3 so it doesn't clutter your project with unnecessary files. Keep me posted.\n. Hey @pablodenadai. I'm going to close this for now since it's not related to the code base. Let me know if you find something new.\n. @gebrits very cool. It didn't take very much code to do that either. I'd prefer to make this a wiki page than to commit it to the project.\n. All set. Let me know if I should make any changes: Added Email Verification with Social Sign Up\n. @myndzi this is neat. Thanks for taking the time to make and share it. I'm not convinced that this needs to be part of the project though.\nThe workflow utility is just an EventEmitter object with a couple of extra properties we use all the time. And yes, the dependencies are a bit smelly.\nAlso keep in mind that your pull request isn't automatically merge-able, which adds friction to the process (in the event we did want to merge).\n. Closing for now. Happy to re-open if we find it's necessary.\n. @titaniumlou thanks for doing this. I'm interested in adding this functionality. I have not had time to test this myself yet. And while we're at it I'd like to do the same thing for Twitter too.\n. @selipso thanks for taking the time to create a pull request. I'm not sure that the changes you propose warrant making the README file longer. Maybe it would be better to create a more in depth installation guide in the future. I'm going to close this pull request for now. Again, thanks for taking the time. \n. @DaveInga thanks for checking out the project and getting involved.\nI'm not sure what you mean when you talk about statuses and categories along with admin groups. Statuses and categories are generic and can be applied to lots of things. Have you seen the wiki page Categories & Statuses?\nI glanced through the changes you made and it looks like you indeed did duplicate the functionality of admin groups for accounts on a schema level and implemented the admin screens for it. Awesome!\nOn the Users, Roles & Groups wiki page I make a note about this.\n\nRoles -vs- Groups\nRoles should be unique enough to deserve their own schema. For example, if I'm a company, I could use my Admin schema to represent my employees. Then, I could add fields to my Admin schema for things like hourly rate, home address and benefits (other roles wouldn't have that type of data). Then I could use AdminGroups like departments (ex: Sales, Support, Manager). Now I can create permissions tied to AdminGroups and change the user experience based on that. Simply adding and removing a user's group memberships automatically changes their access permissions. Pretty sweet!\nCan I use groups with Accounts? Sure. Your project might benefit by extending Accounts with an AccountGroup schema (and permissions). For example, if I built a message board or wiki and I wanted some Accounts to moderate other Accounts or change site content... groups would be the perfect solution. It would be a huge overkill to create a new roll (and schema) for a Moderator, which is like an Account in every way, only differing by a permission.\n\nOne challenge I have is weighing what should be in Drywall by default and what should be extended by developers. With that said, I'm not sure this is something that should be included in the project by default.\n:+1: Thanks again for taking the time to create a pull request!\n. And they shouldn't be admins. Don't forget that everyone is a user and we have two types of roles (Admin and Account) by default. I've built a system where people pay for a subscription. I store the subscription status/details on the Account schema.\n. Please see the comment left on the original issue: https://github.com/jedireza/drywall/issues/124#issuecomment-34415738\n. @gavreh I'm far from offended :v: I appreciate healthy debate.\nSome of the reasons I chose bcryptare:\n- it's repo only has 2 open issues and 205 closed\n- it's been updated sooner and seems to be more actively supported\n- the maintainers of are well known and trusted in the community\nI'm not a security expert, but bcrypt-nodejs's docs say:\n\nNative JS implementation of BCrypt for Node. Has the same functionality as node.bcrypt.js expect for a few tiny differences. Mainly, it doesn't let you set the seed length for creating the random byte array.\n\n... and those tiny differences could mean a lot to someone who knows more than I.\nAs you've shown in your PR it didn't require a lot of changes for you to get it working if that makes you feel comfortable. At the same time, it might be a good time to figure out why you're having issues getting the dependencies installed.\n. @dstroot thanks so much for getting involved and taking the time to create a pull request. The best part about using Passport is that it includes so many strategies.\nI think it's a good idea to include Google as a built-in option. Although most changes seem to be done well, the amount of files-changed/commits does seem a little heavy handed.\nI'm going to close this pull request for now. But I've also opened another issue to add Google as a login option in the near future.\n:+1: Thanks again!!\n. Yes the end result is generally clean. I will be referencing it later. :+1: \n. @JahlomP that's awesome. :+1: \nOne key thing that is removed with this change is the power of having a controlled less build.\nBecause the change is so simple, I suggest that we just make a wiki page for this.\n. @JahlomP it's great to see you so active with the project. For future reference the last 3 pull requests should have been one pull request with 3 commits.\nI'm guessing you wanted to add that because of the navigation. It's probably a better idea to make the current 404 page more generic so it works for the front-end, account and admin areas.\nI'm not sure it's necessary for the project to have separate 404 pages by default. As you demonstrated, it's a simple modification.\n. @compoundpaths I'm not sure why your /bower_components are being placed in an /app directory.\n\nAll package contents are installed in the bower_components directory by default. You should never directly modify the contents of this directory.\n\nAlso see: Custom install directory\nDo you have a .bowerrc file in your project by chance?\n. It could very well be different versions of bower that is causing the inconsistent behavior. The hard part is that I cannot reproduce the problem so it's going to come down to cool people like you to try debugging it.\nYou're more than welcome. Thanks for getting involved. :metal: \n. @compoundpaths you should be able to send email locally as long as you have the correct SMTP settings.\nMy bower version is also 1.2.8.\nI'm gong to close this pull request. Please leave some details on #140 if you find out why your /bower_components directory is being nested inside an `/app' directory.\n. @compoundpaths Yeah there was/is an issue with gmail addresses. See #29.\n. As I mentioned over in #159:\n\nThis is cool. Although I'm just not sure it's the best thing to include by default. In cases like this I'd rather extend the wiki with a guide.\nIf you end up integrating this with Drywall please consider writing a guide on the steps you take so we can add it to the wiki.\n. Closing this for now since it didn't get traction. Happy to revisit another time.\n. thanks @sahat\n. Did you read the wiki page?\n. I've tried searching on a couple occasions now but never found anything comparing the pure Javascript versions to bcrypt. I am interested in knowing the difference for sure. \n\nI created a StackOverflow thread: http://stackoverflow.com/q/22801593/1410672\nLet's try to collect the answers there.\n. Sweet. Thanks.\n. @kahlkevin thanks for getting involved. :metal: \nThis issue has come up before. I just don't think it's something that should be part of the code base. I'd probably like the idea a little bit more if it was a grunt task. But either way, the script would only be used one time and if you accidentally ran it later, you could possibly delete or overwrite data.\nI also think it's reasonable for a developer to be able to use the console and interact with mongo both locally and remotely.\n. @kahlkevin this might be good for demonstration purposes, but in most cases the roles don't go both ways. Thanks again for getting involved and taking the time to submit a PR.\n. @coryarmbrecht thanks for doing this! With a quick glance it looks good. I'll try to review this evening or sometime this weekend at the latest. :metal: \n. @coryarmbrecht you're very welcome. So glad to hear it.\n. @kahlkevin good find. simple fix. awesome. thanks! :metal: \n. @OmgImAlexis thanks for contributing this. I don't have enough experience with CentOS to know if everything you included is up to par. This would probably server better as a wiki page. Feel free to create a markdown gist and post the link here. Then I'll add a page to the wiki for for CentOS.\n. Thanks for taking the time to create a PR for this. In effort to keep dependencies and noob-friction low, I don't think this should be part of master. As you showed it's only a few lines to swap out.\nFor future reference:\n- please keep camelCase; i.e. instead of session_store, let's stay consistent and use sessionStore.\n- let's stay consistent with block statements if else etc...\n:+1: You're awesome. Thanks for spending time with the project.\n. Thanks again for taking the time to create a pull request. Usually when you commit to a repository you would create a feature branch in your fork and create a pull request from that. There are a bunch of content on this, but here are a couple I quickly pulled up:\n- http://scottchacon.com/2011/08/31/github-flow.html\n- https://gun.io/blog/how-to-github-fork-branch-and-pull-request/\nWith that said, the changes you've made don't seem like good candidates to include in the project by default.\nAgain, thanks for being an active user.\n. That's interesting. Since this project is a boilerplate, it's like a starting point. If someone had a decent sized project before using Drywall the changes you described seem appropriate (and expected).\n. @gottaloveit thanks! I'll test locally and let you know if I find anything different.\n. I'm not seeing any issues with bower or npm. FYI, I was prompted to update bower so I did.\nbash\n$ bower -v\n1.3.9\nAlso I cleared my bower cache and deleted the bower_components/ directory. Then I installed.\nbash\n$ bower cache clean\n$ [sudo] rm -r bower_components\n$ bower install\nNo errors. Then I deleted the node_modules/ directory and installed those too.\nbash\n$ npm install\nNo errors. Then I started the app up. Everything is working fine for me.\nSince I was in here I updated font-awesome to v4.1.0\nhttps://github.com/jedireza/drywall/commit/a8a4534f26a9b7a5da1c04c73ec41d5fced7a8eb\n. I guess it's just an alias since they both point to the same repo.\nbash\n$ bower search fontawesome\nSearch results:\n    fontawesome git://github.com/FortAwesome/Font-Awesome.git # exact same repo\n    ...\nbash\n$ bower search font-awesome\nSearch results:\n    font-awesome git://github.com/FortAwesome/Font-Awesome.git # as this one\n    fontawesome git://github.com/FortAwesome/Font-Awesome.git # and here is the non-hyphen one again\n    ...\n. Subjective, but fine. Thanks for taking the time to create a PR.\nhttp://english.stackexchange.com/a/8823\n. Thanks for creating a pull request.\nI've been meaning to use npm instead of bower. Closing this in favor of #241\n. Sorry for taking so long to reply.\nI don't think LinkedIn needs to be included by default. As your code shows it's pretty straight forward to add any of the supported strategies for Passport. \n. Thanks for taking the time to create a pull request. I've been skipping PRs that are adding Passport strategies.\nI do like your idea of making it configurable though. I'm happy to work through the details with you on that.\n:sparkles::+1: \n. Thanks @fourq. The changes look good. I'll test them out locally as soon as I get a chance. I would like to get these four commits squashed into one though before merging.\n. Perfect. I tested locally and everything seems fine. Thanks for taking care of this!\n. Closed in favor of #266 \n. Nope they should both close when I merge this, which I'll do next.\nThanks so much for getting involved and reporting this issue. :sparkles::+1::sparkles:\n. You may need to fix your configuration.\nhttps://help.github.com/articles/error-permission-denied-publickey/\n. Closing. Details here: https://github.com/jedireza/drywall/issues/286#issuecomment-96238423\n. Thanks so much! I left a few comments.\n. :+1: Nice! Let's squash your commits and then we can merge it.\n. Thank you so much!\n. Thanks for creating a PR. I'm not a big fan of adding another dependency grunt-penthouse. Maybe these changes would be better served as a wiki page?\n. Sounds good. Closing.\n. Thanks for opening a PR. Although this is an interesting idea for a business, it's not something I'm willing to add to the project's README.\n. One issue I see is that when you say \"I\" that's coming from an account named @SupportedSource and that GitHub profile doesn't have a name of a person.\nI also feel the same as the people commenting here: https://github.com/sympy/sympy/pull/9754\nGood luck with your idea.\n. Apologies for the delay on this. I've haven't been able to spend time reviewing yet.\n. I don't this this is the solution we're looking for. I'll leave some more comments on #318\n. Thanks :+1: \n. Thanks! :shipit: \n. Thanks for opening a PR! :tada:\nFYI: Because there are not automated tests for Drywall (which is sad but true), I'll have to manually check a running system after we update the deps to make sure everything is working and not throwing exceptions.\n. :smile: sorry I could've been more clear. Let's remove all the ^ characters in the whole package.json file. And be sure to use the version patterns as mentioned before:\n\nLet's remove all the ^ symbols. For modules that have a major version, the versions should be N.x.x, and modules who's major version is 0, the versions should be 0.N.x.\n\nSo for example the moment dependency should be 2.x.x instead of 2.11.2.\n. Sorry for the delay. I just ran through quickly and things seem to be working fine. Thanks again!\n. Hi @ankitiitb1069 thanks for opening a PR. Since it's not obvious from the changes what this PR is for, I'm going to close it. If you need help or some direction about contributing to Drywall please ask, we're happy to help.\nAlso this PR seems to have more changes than GitHub's interface can handle, which makes it hard to review it. I suggest discussing the changes you're proposing before submitting vast changes.\n:+1: \n. Thanks for creating a PR. Maybe not sending the welcome email during singup when requireAccountVerification is set to true is a better solution?\nKeep in mind, these two emails contain different content and serve unique purposes.\n. If we do that without adding a new config settings, I'd probably be for it.\nAs it stands, this kind of change is something consumers could/should change on their own and I'm not sure it adds a lot of value being the default.\n. I'm not sure I follow. The welcome email says hello and includes their username and email address. The verification email only has a link in it.\n. In it's current form these emails are simple and easy to maintain. This is a good example of something that the consumer should customize in their app.\nClosing this PR for now. Thank you again for getting involved. \ud83d\udc4d \n. Thanks for creating a PR. This project is retired. Though you should continue hosting your version @ https://github.com/arthurkao/angular-drywall \ud83d\udc4d  . Let's stay consistent with the other comments. No space after // and all lower case.\n//create the proper command for windows environments\n. How about we use test instead of coercing the match result?\nif (/^win/.test(process.platform)) {\n. I'm pretty sure all (or almost all) files in the project have an empty line at the end.\n. We have the bootstrap variables defined above this. If they are missing from bootstrap-vars.less that's where they should be added. I usually copy the ../vendor/bootstrap/less/variables.less file into bootstrap-vars.less when they update.\n. Let's remove ...\n. Let's remove ...\n. Why is this change needed?\n. Oh haha. I meant let's change alt='Loading ...' to alt='Loading'\n. Ah. Well the p didn't contain a div. That pipe character is a way jade let's us insert text while breaking to the next line. You can verify by inspecting the source of the live demo.\n\n. My bad, yes the buttons are being put in that tag. Let's just pull those buttons back one indention instead.\njs\np.lead\n  | Your Node.js website and user system is running. May the force be with you.\ndiv\n  a.btn.btn-primary.btn-lg(href='/signup/') Create an Account\n  |  or&nbsp;\n  | &nbsp;or&nbsp;\n  a.btn.btn-warning.btn-lg(href='/login/forgot/') Reset Your Password\ndiv.clearfix\n. Let's remove all the ^ symbols. For modules that have a major version, the versions should be N.x.x, and modules who's major version is 0, the versions should be 0.N.x.\n. 1.x.x\n. 1.x.x\n. 1.x.x\n. 1.x.x\n. 1.x.x\n. 1.x.x\n. 1.x.x\n. ",
    "ianwalter": "Yea I actually fixed that issue with the second commit. I can see why it might be better done through JavaScript, maybe I will try that.\n. ",
    "gebrits": "Yeah fine with that. I understand you want to keep the code is tight as possible. \nHow would this work though: \"including code diff in wiki\"? Just the raw code-changes or does github somehow support automatic pulling in those commits?\n. Yep no probs. Glad to contribute,\nOn Sat, Nov 23, 2013 at 2:02 AM, Reza Akhavan notifications@github.comwrote:\n\n@gebrits https://github.com/gebrits very cool. It didn't take very much\ncode to do that either. I'd prefer to make this a wiki page than to commit\nit to the project.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jedireza/drywall/pull/75#issuecomment-29121582\n.\n. looks good Reza. Cheers!\n\nOn Sun, Nov 24, 2013 at 8:17 AM, Reza Akhavan notifications@github.comwrote:\n\nAll set. Let me know if I should make any changes: Added Email\nVerification with Social Sign Uphttps://github.com/jedireza/drywall/wiki/Added-Email-Verification-with-Social-Sign-Up\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jedireza/drywall/pull/75#issuecomment-29150396\n.\n. \n",
    "MartijnR": "awesome, just what we needed in our app that used Drywall (there may also be an issue with changing your email address in /settings, but will confirm later and if necessary create an issue or fix). Thanks thechad and thank you a lot for this awesome tool @jedireza!\n. +1 that for this project, it would seem a very welcome core feature (enabled by default) even if initially without the re-verification after editing.\nIt may be good to take the latter already into account though, and use perhaps a new db field unverifiedEmail instead of isActive (not sure what isActive is used for atm but @jedireza mentioned he preferred not to use that). \nIf an account with an approved email edits their email address, they can log in with their old (verified) address until the unverifiedEmail is verified after which unverifiedEmail is emptied.\n. ",
    "iamthechad": "There would absolutely be more work required to re-verify a changed email address for an existing account, but that provides a much lower security risk than possibly letting a spambot create any number of accounts right off the bat.\nI'm aware that my solution isn't perfect, but it does seem to be a shame to leave out email verification, especially when there's other users out there who'd like the functionality.\n. I don't have any issue removing the verification for social accounts. I agree that there's already been a validation through the social account in that case.\nI think if the need arises to re-verify emails it could be addresses in a separate issue. I certainly don't have any use cases that require it.\nI'm good with a new user field; I'm used to systems that use a single enabled field for everything, which is why I reused isActive. Having a separate field will certainly make it easier to display an appropriate error message.\nBased on the scope of the changes, would it make sense to close this PR and open a new one with just the suggested changes? I made this PR off of master, which means all of the subsequent pushes I've made are showing up, too.\n. I only have a couple of concerns with the changes as they stand:\n- The link to go to your account on successful validation blends in too well with the color of the alert box. It's not obvious it's a link.\n- If I enable email verification, I have to manually add the isVerified field to Mongo for each existing user. Not a huge pain, but could be a gotcha.\n. I like the idea of a user being able to resend the verification email. When the user is logged in after signing up, is the account/verification page the only \"logged-in\" resource they can see?\nWhat's the difference between a User and an Account? I've been creating and deleting a lot of users while testing this PR, but I see that there are lots of accounts left behind.\n. Sounds good. I'll see if I can get these changes made tomorrow.\n. ",
    "hanksudo": "@jedireza How can I only pull request the needed 2 commits? is this pull request mess your reprository?\n. ",
    "pablodenadai": "The .tmp file is created when I change a .jade file.\n.  Sublime Text 3\n. I'll try another editor I'll let you know.\n. ",
    "myndzi": "Figured I'd share it anyway. Don't know why it's not automatically mergable. I think it's a bit silly to require manual entry of commands from a database console in order to make the project usable, so if no setup script, then automatic defaults would be nice.\n. ",
    "titaniumlou": "Doesn't look like similar functionality is possible with Twitter:\nhttps://dev.twitter.com/docs/faq#6718\n. ",
    "solomongifford": "I actually think this should be in by default.  From an orthogonal perspective, people are forced to make any \"advanced users\" an admin.\nImagine the very common subscription scenario where users have to pay for special access to some content/support/etc.    All the users that have purchased the content aren't admins! \n. Agreed that they shouldn't be admins!  I come from the Drupal world where the concept of a Group (what the Drupal world calls a Role) is applicable to every user, regardless of admin status.  Anyway, thanks for the module - for my personal needs I simply forked Drywall and merged DaveInga's in.\n. ",
    "gavinr": "Hi @jedireza, Sorry if I offended you with this pull request - I just have followed the Dependencies guide on my machine multiple times, with no luck, and I thought maybe if I provided you with a working pull request maybe you would be ok with using bcrypt-nodejs. Bcrypt-nodejs is equivalent and has zero dependencies versus bcrypt which has 107. Is there a particular reason you want to go with bcrypt instead of bcrypt-nodejs?\nThanks!\n. ",
    "dstroot": "CRAP!  When I was looking at the pull request it was showing me all the changes together.  Now it is showing them by commit.  Really sorry.\nIf anyone knows how to clean this up I'm all ears - tried an interactive rebase but the fact that I've already pushed the local changes to GitHub just made it difficult.  Now if I do git rebase -i HEAD~17 I get something like 25 commits listed???\n. No worries - the code is messy as I went along as I was playing around and always intended to flatten the commits.\nHowever I did clean everything up at the end so the end result is some pretty clean code (IMHO) and should be exactly what is is needed for #129.\nCheers.\n. ",
    "jahlomp": "ok sure\n. Just a sidebar checkout this blog post:\nhttp://scotch.io/bar-talk/expressjs-4-0-new-features-and-upgrading-from-3-0\n. thanks\n. ",
    "foobahh": "Hey man, I donno.  It was the same issue that everyone else was having - so\nwhat I am wondering is if there was some bower update along the way that\ndid this.\nAnyways, thanks for taking the time to develop drywall.\nOn Fri, Mar 28, 2014 at 11:25 PM, Reza Akhavan notifications@github.comwrote:\n\n@compoundpaths https://github.com/compoundpaths I'm not sure why your\n/bower_components are being install placed in an /app directory.\nAll package contents are installed in the bower_components directory by\ndefault. You should never directly modify the contents of this directory.\nAlso see: Custom install directoryhttps://github.com/bower/bower#custom-install-directory\nDo you have a .bowerrc file in your project by chance?\n\nReply to this email directly or view it on GitHubhttps://github.com/jedireza/drywall/pull/157#issuecomment-38985568\n.\n. Yeah no problem, I have been meaning to build an express admin backend myself but simply have just not had the time.  So this is great.\n\nFYI, my bower version is:  1.2.8\nAlso, quick question - I am setting up the root admin account, finding the emailjs can\u2019t be sent on localhost (per my current config at least) - do I need to push to a heroku instance to set this stuff up?  Or is there an easier way\u2026\nBest,\nEthan\nOn Mar 28, 2014, at 11:33 PM, Reza Akhavan notifications@github.com wrote:\n\nIt could very well be different versions of bower that is causing the inconsistent behavior. The hard part is that I cannot reproduce the problem so it's going to come down to cool people like you to try debugging it.\nYou're more than welcome. Thanks for getting involved. \n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "JohnMcLear": "I don't see the logic or reasoning behind not merging this?  Putting docs doesn't solve the problem it just raises the barrier of installation.  Can you please explain your reasons for not merging?\n. I have now, makes sense :)  Did you raise any of your points in the wiki with the bcryptjs team per chance?  Might make sense to link to issues, I will create an issue to see if they can answer some of the concerns, some may not actually be relevant..\n. Okay issue raised on bcryptjs page, may as well get this solved properly, it could be we're introducing additional complexity on installation for no additional security..  Worth checking imho :)\n. Created a link through: https://github.com/dcodeIO/bcrypt.js/issues/5\n. ",
    "coryarmbrecht": "Sounds good. :) Hopefully it's correct, I believe I got all the header views... \nPS Thanks for this project! My projects are very similar to this, but this has more polish so I'm adopting it into my setup. So far it's lookin' awesome.\n. ",
    "fgruner": "I understand not necessarily wanting the debug statements. I don't understand what the problem is rendering 'index.jade' instead of index. It took me a really long time to merge with my application because I wasn't using jade. This change is no functional change, doesn't kill any readability, but will really help anyone who isn't using jade as their default template engine.\n. That\u2019s me\u2026 I started my project over a year ago, and due to family health reasons, it got put on the shelf for 10 months. I couldn\u2019t find a template for the user account stuff when I started, so I had a basic authentication in it with a couple of  hand inserted accounts in the database. I spent the weekend merging in the drywall views. I would expect more people like me. Now I\u2019ll gradually move the drywall pages to match my template, and add the drywall authentication to my pre-existing pages. The changes I made to explicitly put \u2018.jade\u2019 on the views was necessary to get it working for me, and would help anyone else with a similar situation, which I why I submitted them. Since they aren\u2019t functional for the standard template, it\u2019s hard to see how they would negatively affect anything. For someone new to programming this type of application, it\u2019s a little easier to understand which \u2018index\u2019 item is being referred to when it says \u2018path/path/index.jade\u2019.\nFred\n. ",
    "gottaloveit": "I dont know why I got the error earlier, my apologies.  However, what is difference between bower/font-awesome and bower/fontawesome http://bower.io/search/?q=fontawesome ?\n. ",
    "moklick": "I didn't know about that (i am not a native speaker).. thanks for the info ;)\n. ",
    "CodisRedding": "I updated this PR with another commit because I forgot to update the readme.\nHopefully I squashed them correctly.\n. Sorry, I'm really confused about why I cannot seem to squash these commits. I did this:\ngit rebase -i HEAD~2\nchanged the latest commit to squash\nand then:\ngit push origin feature/from-bower-to-npm\nbut it it looks like I just keep tacking on more and more commits tot this. Should I create a different PR?\n. actually, I think I got it now. I wasn't using --force when I should have been it seems.\n. ",
    "metasection": "Just saw your Frontend fixes.  This is great.  Thanks.  Will retest in the morning.\nShould I delete my fork?  Do I need to do anything with the Pull Request that I created?\nI am learning the software and will try to participate more in the future.\n-Jim\nOn Jan 28, 2015, at 9:16 PM, Reza Akhavan notifications@github.com<mailto:notifications@github.com> wrote:\n-   moved front-end dependencies to devDependencies\n-   updated versions of Bootstrap and Font-Awesome\n-   updated Bootstrap build variables for new version\n-   updated Font-Awesome build for file rename in new version\nResolves #264https://github.com/jedireza/drywall/issues/264 and #265https://github.com/jedireza/drywall/pull/265\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/jedireza/drywall/pull/266\nCommit Summary\n-   moved front-end deps to dev and updated bootstrap and font-awesome\n-   updated boostrap build variables for new version\n-   updated font-awesome build (renamed spinning to animated)\nFile Changes\n-   M package.jsonhttps://github.com/jedireza/drywall/pull/266/files#diff-0 (16)\n-   M public/less/bootstrap-vars.lesshttps://github.com/jedireza/drywall/pull/266/files#diff-1 (114)\n-   M public/less/font-awesome-build.lesshttps://github.com/jedireza/drywall/pull/266/files#diff-2 (2)\nPatch Links:\n-   https://github.com/jedireza/drywall/pull/266.patch\n-   https://github.com/jedireza/drywall/pull/266.diff\n\nReply to this email directly or view it on GitHubhttps://github.com/jedireza/drywall/pull/266.\n. ",
    "benmarten": "should be good now... please check\n. Now we got it ;)\n\nOn 01 Jul 2015, at 20:50, Reza Akhavan notifications@github.com wrote:\nNice! Let's squash your commits and then we can merge it.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/jedireza/drywall/pull/301#issuecomment-117793807.\n. I agree, it will be too complex, especially with all that watch/reload logic going on...\nI will remove it and then we can add it on a wiki page ok?\n. Since the p contains a div, it displays an error in the html validator. Indeed this SO answer clarifies, that it's not valid html: http://stackoverflow.com/a/10763952\n. I'm also not a big fan of it, but the alt tag is still considered required: \"The  tag has two required attributes: src and alt.\" http://www.w3schools.com/tags/tag_img.asp\n. I'm also not a big fan of it, but the alt tag is still considered required: \"The  tag has two required attributes: src and alt.\" http://www.w3schools.com/tags/tag_img.asp\n. Actually I think the inspector is wrong here, please view the plain source and you will see: \n\n. \n",
    "SuperSource": "We're not taking any fees from it... literally just connecting people, and if the job looks interesting, I might respond to the lead myself.\n. ",
    "garfbargle": "I think we should decline this PR and instead use #336 as it follows the recommendations found here https://github.com/twbs/bootstrap/issues/13948.\n. ",
    "robbyoconnor": "At the very least -- update the the moment.js dependency...I doubt these should cause any issues...if they do -- I'll update the PR \n. Addressed in 3f8bc7e\n. Fixed in e2737deabdba6d4565e7482af98b19cc8d903a4b\n. Fixed in bd3c136\n. ",
    "ToastyStoemp": "Perhaps sending a welcome message after a user has been verified as an option would also be interesting?\n. Since both signup and verify - index.js files would require the format of the welcome message, would it be okay for you to move the formatting of both to uti/sendmail and add it to the options as a possible parameter. Maintaining the functionality of sending custom e-mails.\n. If verification by email is disabled. the signup page will send a 'welcome-mail'\nelse the verification page sends a 'verify-mail', when successfully verified it sends a 'welcome-mail'\nHowever this means that the the 'welcome-mail' function is duplicated, thus when you want to customize the 'welcome-mail' you might customize the wrong 'welcome-mail' function.\nHowever if we move the options to the utility/sendmail then there is only 1 version of the 'welcome-mail'\n. "
}