{
    "josevalim": "Won't fix. Rails 3 will include all that is needed to achieve the same results.\n. Won't fix.\n. Agreed and fixed!\n. Dan,\nCurrently you can call \"resource\", that will set both the @sponsor and @brand instance variables.\nBut currently, there is no way to ask inherited resources to load one specific parent. With resource, your example could be rewritten as:\nunless resource.sponsor.brand_managers.include?(@current_user)\nIf that does not solve your issue and you have to keep the filter, I would recommend to cache @sponsor in the instance variable, so Inherited Resources would check for it and do not query the database again:\n@sponsor = Sponsor.find(params[:sponsor_id])\nunless @sponsor.brand_managers.include?(current_user)\n  flash[:failure] = \"Permission denied\"\n  redirect_to root_path\nend\nInherited Resources always check for the instance variable before querying the database.\n. The resource is a controller method, that said, it's available in before_filter.\nGood use of begin_of_association_chain. But wasn't it supposed to do:\ncurrent_user.sponsors.find(params[:sponsor_id])\nIf you are doing a find, you need sponsors and not sponsor.\n. If an user belongs to sponsor, I guess you don't need to send the sponsor_id. So you can you have routes like:\n/sponsor/brands\nAnd your controller:\n```\nclass BrandsController < InheritedResources::Base\nprotected\n    def begin_of_association_chain\n      current_user.sponsor\n    end\nend\n```\nWith that kind of url, you ensure that a user cannot access other users resources.\n. For new and create you can use build_resource, it's resource twin brother for new and create. :)\n. Awesome! Yes, after those months using Inherited Resources, I realized it helps a lot in the code design, including with the use of nested controllers, as you guys from Thoughtbot wrote about some time ago.\nI keep the logic in the model, which is easy to test, and define well the responsibilities and routes.\nAnd talking about testing, I do not test controllers anymore (rspec controller tests which are done with mocking), except those controllers that does not follow Inherited Resources pattern.\nController and different conditions are very well tests in Inherited Resources and all changes we do through Inherited Resources API (like changing the redirection url) are verified in integration specs.\nCan I close this ticket? :)\n. Awesome! Thanks Dan!\n. Done, parent_url. Others will be added as needed.\n. Please open a new ticket or even better, try to provide a patch! ;)\n. This was not fixed, but a warning was added to README.\n. Fixed!\n. Is this still alive?\n. ok, so closing :)\n. Could you please reproduce the error in the test suite or through a sample app?\n. Thanks for the update! :)\n. My bad! :P\nOf course it has low priority, but I will change for end_of_association_chain when I have some time! ;)\n. Hey Paul, I've tried to do the change, non trivial. I will give up on this, unless you want to provide a patch yourself. Thanks!\n. Sorry. Are you sure that you are on the right issue tracking?\n. Closing ;)\n. Thanks Carlos for handling this!\n. YES! I'm going to do that soon :)\n. Done!\n. Wrong project, no?\n. Use belongs_to :league, :optional => true.\nMore info in the README.\nThanks!\n. Closing.\n. If you give belongs_to :parent, it will look for a :parent_id in the params and call parents in the model. Is this what acts_as_tree API expects?\n. Closing.\n. Done.\n. Sorry, I could not understand the issue. Can you please explain it again?\n. Wanderley, eu n\u00e3o consegui reproduzi o erro. Inclusive adicionei mais testes na su\u00edte que garantem que tal erro n\u00e3o acontece. :(\n. No, it's not possible, some people may use it inside their js, but there should be a  config option to change that.\n. Fixed.\n. Ok, I pushed a fix. It may work, but you will have to wait to 1.0 release.\n. Yeah, that definitely should work. Can you please add a failing test case?\n. Closing. Reopen if it's really an issue.\n. Definitely an issue. I will work on that as well when I have sometime.\n. Fixed.\n. Yeah, fixed.\n. This is how it will work with Rails 3, so returning destroy is not enough, you have to add an error:\ndef before_destroy\n  errors.add_to_base(:invalid)\n  false\nend\nAs said here:\nhttp://blog.plataformatec.com.br/2009/12/one-in-three-inherited-resources-has-scope-and-responders/\nI should add it to the README though.\n. Updated readme! Thanks!\n. Touchez! It makes sense!\nSorry, it most have taken a lot of time for you to debug and find the error. Expect a new gem in a couple minutes.\n. 1.0.1 released.\n. Sorry, but I do not understand the error. record.errors.empty? is all that IR does, and it should work in any case.\n. Yes, it's necessary. This is definitely a MongoMapper bug for me:\nrecord.destroy\nrecord.errors # raises an error! wtf!?\nYou can quick hack your MongoMapper to ensure it works. Doing this somewhere might fix it:\ndef destroy\n  errors\n  super\nend\nBut sorry, I cannot do anything in the IR side.\n. Thanks! Happy New Year as well!\n. Why do you say it's not working? The test suite says otherwise, so I need more feedback to really know what is happening.\n. Are you using rspec?\n. Yeah, you need to call build_resources.\nForgive the whining, but whenever you are reporting bugs please try to append information like your environment and some context on what are you doing . Saying that a feature does not work, without any further information, does not help at all, even because we have a test suite to prove otherwise. ;)\nThanks and closing.\n. I have no interest in making Inherited Resources work with bundler in Rails 2.3. Patches are very welcome though.\n. It seems that removing unloadable from Inherited::Base makes it work. This is because unloadable adds it to be removed, but we are not adding IR loads path in AS::Dependencies (which is automatically done for plugins and gems), so it can't be loaded back. I wonder how clearance solved the problem, because they use unloadable as well and you told me they work with bundler just fine.\n. Which InheritedResources version?\n. Are you opening InheritedResources::Responder class to do some tweaking?\n. This is the reason.\nBe sure to require 'inherited_resources/responder' before modifying it. :)\n. Please, which IR version are you using? This should be solved if you are using latest responders version with IR.\n. :( Could you please try adding a failing case to the suite?\n. Please use the mailing list for doubts and questions:\nhttp://groups.google.com/group/inherited_resources\nSomewhere there might be able to help you.\n. Carlos is right! Closing...\n. I'm running the tests now, it seems they are compatible.\n. Please install inherited resources 1.0.3.\n. From the README:\nInherited Resources master branch is now supports Rails 3 and is backward incompatible.\nYes, it's backward incompatible.\n. Are you sure you have the gem responders 0.4.2 or 0.4.3 installed? Can you try to isolate this issue in a fresh app?\n. Are you trying to use flash.now? Or just flash? More info here:\nhttp://groups.google.com/group/inherited_resources/browse_thread/thread/fe6883d5aed98c02\n. This is odd guys. Can you try to isolate in a smaller application, so I can debug it?\n. Guys, I need a way to reproduce this. Because I definitely can't.\n. Yeah, it makes sense. So you were all using flash.now?\n. Funny, this should not happen with standard flash.\n. Inherited Resources forwards all options to respond_with, so you can do:\ndef create\n  create!(:flash_now => true)\nend\nWhat I can do to support is:\ndef create\n  create!(:flash_now => :on_failure)\nend\nI will work on it.\n. FIXED. Install new responders please. :D\n. Mate, any news on this?\n. It needs to be PeopleController.\n. It should be: \"inherit_resources\" and not \"inherited_resources\".\n. This is a Rails bug which was already fixed. :)\n. I cannot reproduce. Can you please try adding a failing test case to IR? In order to run IR tests, you will need a Rails gem from master, which you can get by running rake install on rails git repository.\n. There is no way to pass serialization options, but you don't need to overwrite your whole action, just the required pieces.\nAnd if you have always to pass the same options, you should also consider overwriting your models or creating your own responder.\n. If you need to add the same line in all controllers, you can put the logic in a module and include the module in your controllers:\nmodule ToXmlParameters\n    def index\n      index! do |format|\n        format.xml { render :xml => collection.to_xml(to_xml_parameters) }\n      end\n    end\ndef to_xml_parameters\n  # implement your logic here\nend\nend\nAnd include this module in your controllers. If you want to go the responders road, I would suggest you to inherit from InheritedResources::Responder and add the logic you want. The ActionController::Responder is the one what you should look to know what to overwrite though.\nWhen you are done, do:\nInheritedResources::Base.responder = YourResponder\n. The customization does not belong to Inherited Resources. It should be at the Responders level. Take a look at responders documentation and blog posts available. :)\n. The parents are set in all actions. Which error are you getting? What led you to think otherwise?\n. Update README to include the proper 1.0 version, closed by 1717b44c18da0e91ed3f9034c544c0d9e3f45a89\n. I cannot reproduce it. Just created a new app from Rails source code using Inherited Resources and everything works.\nI also doubt this is an Inherited Resources issues. Are you using Haml? Which Inherited Resources version? Please give me more information.\n. It works fine with ERB. I bet on Haml issue. :) Please let me know!\n. Ok, thanks for reporting back! Closing!\n. Can you please try to reproduce in a smaller application or in IR test suite?\n. I discussed with Grimen and the issue is that he was doing a GET request. Bear in mind that responders are sensible to the HTTP Verb, so the results change depending on the HTTP Verb.\n. You need to add the relationship to your model Site.\n. Please try to reproduce in a smaller application and put it on Github because it works fine here. \n. I am not familiar with any issue with cancan. Please try the mailing list, you may get mre feedback there.\n. Could you please elaborate why it's your fault? I was already bitten by it myself and I was planning to change this API.\n. If we don't undefine them, the responder would call the Object#to_json implemented in the Object, which is definitely not what we want, raising the SystemStackError you got!\n. Patch please! Or fork it and send me a pull request!\n. On 1.0.6, you need to use Rails 2.3. If you have Rails 3 installed, it may cause conflicts. (I recommend you to use RVM with a Rails 2.3 gemset).\n. At the moment you specify a singleton resource, Inherited Resources cannot build the chain anymore, so you need to overwrite begin_of_association_chain or define @project in a before filter.\n. 404 is already sent by default if the user cannot be found (IR does not need to do anything, it works by default in Rails).\n. The way IR works is by checking if you added an error. So basically, you need to ensure errors.empty? return false. We cannot check for #destroy result because the part that calls destroy and the responder (which chooses the behavior), are completely decoupled.\n. Not really, since record.destroyed? is not part of ActiveModel API so I cannot rely on it.\n. IR supports another kind of namespace. Imagine you have a model User views from both UsersController and Admin::UsersController. This is the scenario IR handles by default. In your case, I suggest for you to have a method called namespace_defaults that will call defaults with the proper values.\n. Yeah, it can definitely be implemented apart from Inherited Resources.\n. Yes, you can add \"\" as empty string in your locale file on a case-by-case basis. Please check both Responders and InheritedResources README.\n. Just do in an initializer: InheritedResources::Base.responder = YourResponder. If this does not work, try adding inside a config.to_prepare {  } block.\n. InheritedResources::Base inherits from ApplicationController. That said, the scenario you just described works like a charm here. Which error are you getting?\n. It should also work in Ruby 1.9.2:\nhttp://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/base.rb#L14\nHave you restarted the server and it still does not work?\n. Actually, this is an issue. Server restart should not be required.\n. Patch please!\n. Great suggestions! Patches are welcome! :)\n. The URL it tries to guess is correct. You rather have a different schema. Please check belongs to and defaults documentation to see the options you can pass in.\n. 1) can be done by adding another action to InheritedResources::Actions (I believe). But we have no API for 2). Patches are welcome!\n. Any news here or I can mark this as stale?\n. Patch please!\n. No, there is no way. I recommend to simple don't use Inherited Resources or be verbose in such cases.\n. You need to call clear_respond_to to undefine the previously defined formats.\n. Documented in Rails. It is a public API.\n. Patch please?\n. Ok, closing this. If you can provide a patch, I will happily accept it.\n. Great, looks good! I will try to merge it later.\n. @lda I just realized this pull request had no docs. Could you please send a pull request with basic docs? I am basically interested when should we use optional and when should we use shallow. Thanks!\n. Inherited Resources code is really modular and well tested. Why don't you try out a patch? :)\n. Yeah, that is it. Maybe you guys can provide a patch?\n. Any news here? Can you guys please work on a patch? :)\n. Fixed in master. If you need that in 2.3.x, I recommend you to send a pull request backporting it to Inherited Resources v1.0 branch.\n. From the backtrace, it seems that cancan is forcing the resource to be loaded, which fails since you don't have an id. You need to disable cancan before_filter. This is not an inherited resources bug.\n. Because cancan is calling Inherited Resources resource method. Take a look at the backtrace and see who is calling resource. It is cancan internals.\n. A patch wrapping gem \"ruby-debug\" under platform :ruby is welcome. :)\n. Thanks for the pull request. Could you please include some tests as well?\n. This is a bug and a patch is welcome.\n. Is this an issue just when using rails-dev-boost? So is this fixed now?\n. Fixed in master. Please check! If it works I will release a new version.\n. I have no idea. Maybe you can try out a patch or a test case to IR?\n. Yes. Exactly.\nFor new.html.erb, Inherited Resources will do @tasks.comments.build. Just overwrite your action if this is not what you intend to do.\n. No option. Or you write your own responder or you overwrite all actions.\n. Inherited Resources does not do anything special, it just calls errors.to_json, the errors object in ActiveModel shuold know how to serialize itself. Therefore, if there is a bug, it is in Rails.\n. Applied, Thanks!\n. This has been fixed in later 1.0.x releases.\n. Thanks, applied.\n. I would expect it to automatically call reload. This is something you should handle in your controller, maybe by customizing update_resource action.\n. Maybe you are using attr_accessible in the model or attr_protected?\n. In the second case, Devise is creating another resource and trying to find params[:thread] because this is the instance name you gave. You need to use instance variables as defined in the readme or don't call create! as you did in the first example.\n. Yes, it won't work with datamapper.\n. Inherited Resources has AR methods hardcoded. You can check it out (and change it) by checking InheritedResources::Actions in the source code. Other places may use AR specific methods as well.\n. Awesome, merged!\n. Awesome, applied!\n. I18n 0.5 deprecates {{resource_name}}, you need to use %{resource_name} instead of go back to i18n 0.4.x\n. Hey, could you please send a pull request with this patch plus one test? Thanks a lot!\n. There is no problem, I would still be able to apply your commit. But you probably merged my branch into yours, instead of calling rebase. If you want to start from scratch again, this shuold be your work flow:\n1) Fork on Github\n  2) git clone fork@github\n  3) git checkout -b scoped\n  4) Do your changes\n  5) git checkout master\n  6) git remote add josevalim https://josevalim@github.com/josevalim/inherited_resources.git\n  7) git pull josevalim master\n  8) git checkout scoped\n  9) git rebase master\n  10) Push your branch and send a pull request\nAbout test cases, they all mock Active Record, so if you run tests now, they will probably fail. You just need to fix them and make them pass.\n. Hey, I may do another release soon.  So if you can work out the tests (basically by fixing them) it is likely I can include your patches in the next release! thanks!\n. Sounds perfect, merged! Thanks!\n. Seems to be a bug, maybe you can work on a patch? :)\n. A-ha, so the issue seems to be related with the request_name used.\nBtw, @Sirupsen thanks for adding the feature and for investigating it now. :)\n. Interesting to know that it solves the issue, but I am afraid it may cause side-effects, I will play with it later! Thanks a lot!\n. Applied, thanks\n. Yes, you should use resource_name. collection_name is used only on the index action (which is not available for singletons).\n. Awesome, thanks! (I don't know a way to attach pull requests to existing issues :()\n. Thanks for your pull request, but this is intentional. I am even surprised we have :finder as option. I usually advise people to simply overwrite resource, it is simpler and much clearer in intention.\n. You didn't understand me. I am not saying that it is wrong to use :object_name. I am just saying it is easier and better to overwrite the method resource than changing the key through an option.\n. Sorry, but it is not Inherited Resources current goals to support several ORMs. IR can eventually support it, but not in the current version. You can either monkey patch Mongoid and define scoped or include a module in InheritedResources base that changes collection to use a Mongoid compatible form. The second one is the most appropriate in my opinion.\n. You are right, CollectionResponder won't work with Inherited Resources. This is because in the case of nested resources, CollectionResponder expects such call:\nrespond_with @project, @task\nBut Inherited Resources just gives the current element:\nrespond_with @task, :location => resource_url\nYou can check this here:\nhttps://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/actions.rb#L49\nSo if you want them all to work together, you need:\n1) Fix Inherited Resources to pass all resources in the association_chain to Responders\n2) Then probably overwrite set smart_collection_url and smart_resource_ulr (https://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/actions.rb#L56) to nil, so the CollectionResponder will take place.\n. When you say:\nclass ServersHardwareInformasetionsController < InheritedResources::Base\n  belongs_to :server, :singleton => true\nend\nIt will do the following in new actions:\nServer.find(params[:server_id]).build_servers_hardware_information\nYou can overwrite build_resource to change this behavior. More info the README.\n. Thanks for the pull request. A few things:\n1) public_send is available just on 1.9.2. We need to use send so it also works on 1.8.7\n2) we need tests\nBesides that, everything looks great.\n. Closing this. I am glad to merge it once we have tests.\n. Could you please add a test?\n. They use mocks, so  it is probably choking on the respond_to? call. You just need to mock the appropriate things.\n. Good call Carlos! Although I wouldn't use end, try using a begin/end block:\nget_collection_ivar || begin\n  collection = end_of_association_chain\n  set_collection_ivar(collection.respond_to? :scoped ? collection.scoped : collection.all)\nend\n. Awesome, thanks!\n. Uo-oh :( Maybe you could provide a patch fixing the issue?\n. There is no way inherited resources can know that your to_param value comes from a given column. You need to customize the action.\n. You can simply overwrite the resource method. And there is a configuration option for associations. Pls check te readme!\n. You are right, there is not much we can do here. It is rather an ActiveRecord bug. :(\n. Then you would have to specify that the association is a through\nassociation. That would just increase complexity. Besides, calling create\ndirectly is not a solution that would work for everyone mainly because it is\na common pattern to access and change the resource before passing it to\ncreate_resource. If there will be some effort here, I would put on fixing\nActiveRecord.\n. Which commit do you find relevant in has_scope for a new release? I don't see anything special there. :)\n. Sorry, I don't follow. :) Which gems do you want me to release and why?\n. Done.\n. Could you please try a patch with tests?\n. No. And it likely won't until someone provides a test reproducing the issue or, even better, a pull request.\n. If it works with real models, isn't this rather an rspec mock_model bug? Can you provide a failing test case to INherited Resources suite?\n. Hey mate, sorry for taking long to reply. Could you please rebase this pull request so I can merge it?\n. Test suite has been fixed!\n. I have updated the Gemfile.lock to 3.1.0.rc4 and made the test suite pass.\n. We can fix this issue by simply checking the rescue:\nhttps://github.com/tb/inherited_resources/blob/b21aa27b218aa831592a449e554a2361bfc39d6f/lib/inherited_resources/class_methods.rb#L294\nTo also rescue errors like \"Kb is not missing constant Section!\". Similarly\nto:\nhttps://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/params_wrapper.rb#L150\n. This updated patch looks good. Could you please send a pull request with tests? Tks!\n. perfect pull request, thanks. merged!\nplease ping me when Rails 3.1 is out to release a new version?\n. Done! thanks for reminding me!\n. Why not simply override the as_role method?\n. Could you please try running tests again? If you can't, please let me know what I can do to help you. It would be cool if you can provide a pull request with the fix + tests.\n. Could someone please rebase this patch? It would be a nice addition.\n. You need to have the new template.\n. Thanks for the pull request, but this is actually a view concern. For example, you don't want your JSON/XML response  to have three empty resources.\n. This is a Rails issue/question. You probably want to use :shallow or something like that.\n. As I said in the other issue, the path generation is a Rails concern, not Inherited Resources. So please research Rails docs. We unfortunately do not have docs for shallow in Inherited Resources, pull requests are welcome.\n. The resource_path is supposed to work fine. If not, consider using optional_belongs_to instead of shallow. I do not have time to currently debug the issue, so if you find issues, please try providing a pull request with fixes and tests.\nYes, using IR is an investment of your time. It may be completely worth, or not.\nPS: If you want to continue a conversation, please don't open new issues, use the existing ones.\n. I don't think so. The best solution would be to name it differently.\n. Singleton resources do not generate the index action, not even in the router. If this is your case, I recommend you to add the action yourself. It is just few lines of code. Thanks!\n. Please check the rails documentation for the method layout. This is a rails thing, not inherited resources.\n. You can do layout \"application\", :only => :new at the class level. Or even pass a symbol to specify the layout using a method. Check the layout method docs.\n. Paaaaaaaatch!\n. Charles is correct. I have forgot about this case. Closing.\n. https://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/class_methods.rb#L6\n. Inherited Resources needs to check that the parent module is an isolated engine and properly generate the route then.\n. It works here. Do you have Bundler.require in your config/application.rb?\n. Weird... thanks for reporting. I will take a look.\n. Your ApplicationController should not inherit from InheritedResources::Base.\n. Both.\n. Merged. Thanks @mhfs for actually testing the pull request and giving feedback!\n. Yes, because the show action never redirects by default. The redirect block only works for actions that redirect at some point.\n. It is a rails bug, should be fixed on 3.2.3.\n. There isn't afaik. Notice inherited resources has a deprecation notice though, if you are using it and interested in maintaining it, please let me know. :)\n. Sorry, I no longer maintain Inherited Resources. Try pinging @joelmoss .\n. @kuraga, I no longer maintain inherited resources.\n@joelmoss, are you planning to release a new gem? If so, let me know if you run into any issues!\nThanks everyone!\n. Done!\n. I believe the best way to achieve this is to simply do it as Rails:\nhttps://github.com/rails/rails/blob/master/activemodel/lib/active_model/naming.rb#L91\nSomething like this:\nnamespaces = self.parents\nself.parents.delete_if do |n|\n    n.respond_to?(:use_relative_model_naming?) && n.use_relative_model_naming?\nend\nnamespaces.map!(&:underscore)\nIt will work only on 3.2 though but I believe this is fine.\n. ",
    "bloomper": "May I ask why this should not be allowed? In my case, the destroy method is invoked via AJAX and in order to distinguish a failed destroy from a successful one, I am setting a different status code in the failure block causing a different callback to be executed on client side.\n. Wow, that was fast! Thanks!\n. 1.0.1\n. Yes, I have an initializer that changes the flash keys and adds a method:\nResponders::FlashResponder.flash_keys = [ :success, :failure ]\nclass InheritedResources::Responder\n  def to_js\n    set_flash_message! if set_flash_message?\n    default_render\n  end\nend\n. Doh... thanks for your incredibly fast support!\n. ",
    "croaky": "Okay, that's a good call. Ran it by a couple of guys at work. They pointed out I should be using a finder to return 404.\n```\nclass BrandsController < InheritedResources::Base\n  before_filter :authenticate, :authorize_brand_manager_belongs_to_sponsor\nactions    :new, :create\n  belongs_to :sponsor\nprotected\ndef authorize_brand_manager_belongs_to_sponsor\n    @sponsor = Sponsor.find(params[:sponsor_id])\n    @sponsor.brand_managers.find(current_user.id)\n  end\nend\n```\nThis is looking better. I'd like to be able to use the resource.sponsor style but that's not available in before_filters, right?\nI'd like to kill the before_filter if possible.\n. This would be an awesome option, too:\ndef begin_of_association_chain\n  current_user\nend\nLooks like it tries to do current_user.sponsors, though, instead of current_user.sponsor.\nI think that would be ideal, though:\ncurrent_user.sponsor.find(params[:sponsor_id])\nIs this a potential improvement to IR? If so, any tips on where to patch?\n. The relationship is:\nUser belongs_to :sponsor\nSponsor has_many :brand_managers, :class_name => \"User\"\nSponsor has_many :brands\nSo, in script console, I can do things like:\nuser.sponsor\nuser.sponsor.brands\nI guess begin_of_association_chain isn't the right fit here?\n. Also, I think the problem with \"resource\" I was having in the before_filter was because I'm working with new and create actions where there is no resource established. In that case, I'll always get:\nActiveRecord::RecordNotFound: Couldn't find Brand without an ID\n. Jose,\nSimplifying the routes into a flatter structure was exactly the right move. Great call!\nI'm also now successfully using the begin_of_association_chain approach for access control on another controller that belongs_to :sponsor. Finding it to be very clean, very few lines of code, and easy to test. It also forced me into a nice delegation in the models, keeping my future Law of Demeter violations to a minimum!\n. Absolutely! I tried clicking \"Comment and Close\" after my last one. I wrote up a blog post about this as well, promoting IR a bit. Queued it up, should go live sometime in the next few days.\n. begin_association_chain, end_association_chain would make sense in Ruby. It's the \"ofs\" that make it awkward. An alias of start_of_assocation_chain would also make sense.\n. ",
    "sobrinho": "I don't understand how the github votes works, i tryed to vote +1 but this get -1, damn!\nI guess the child_url are a great option to add to inherited resources. Like that:\nclass MyController < InheritedResources::Base\n  belongs_to :model\nend\nCan you do this? :)\n. Sorry, my suggestion in really are:\nOr really is child_url? I don't know, but you understand the feature that I requested :)\n. Ops, sorry for my error. Formtastic are into another tab, thanks!\n. The route is show when you run rake routes?\n. I have the same issue with Rails 3.0.0.beta, inherited 1.1.0, has_scope 0.4.2 and responders 0.5.4.\nI tried to debug without success. Any updates?\n. I will create a fresh app tonight to reproduce this ;)\n. I trieeeeeeeeeed! :P\nBut something on responders or maybe with respond_with didn't work.\nNote the options[:alert] is a POG to fetch the flash message but do not provide any expected fallback.\nRemoving this gambeta we receive the success message for destroy instead of failure.\n. oh... who is charles?\n. I forget to say, rails 3.2.8 and inherited resources 1.3.1.\n. Found another inconsistency:\n``` ruby\nedit_person_path(:id => 1)\n=> '/slug/people/1/edit'\nedit_resource_path(:id => 1)\n=> No route matches {:action=>\"edit\", :controller=>\"people\", :id=>\"1\", :customer_slug=>nil}\n```\n. ",
    "grimen": "I'm getting this also even with a basic sample similar to the one in the README.\n. I get the same error with 0.9.0 still... Did I miss something?\n. OK, Passenger failed on me. Correct error message shows up now. =)\n. GitHub stripped parts of the output, but it's an instance of a Account that is returned (while calling confirmations_controller/new in my case):\n\nProcessing Accounts::ConfirmationsController#new (for ::1 at 2009-09-11 03:31:30) [GET]\n  Parameters: {\"controller\"=>\"accounts/confirmations\", \"action\"=>\"new\"}\n ...\n\n. I believe so; I never got it to work but I'm not running Ruby 1.9 in production anyway so can't tell - was some time ago I was exploring this. I remember I didn't do any hocus-pocus, it was kinda easy to raise that error with Authlogic + AuthHelpers.\n. +1\n. ",
    "rrouse": "Have you restarted your server? I no longer get that error after the update.\n. ",
    "paulca": "Same behaviour when I use respond_to :html within the controller ... I'm using Rails 2.3.4\n. Hmmmm ... it works fine with a similar arrangement in a fresh app ... I'll have to dig about and figure out what's different in this case.\n. Been using and loving the plugin on a few other projects since this. I'm really not sure what was causing it in the other app, I'll come back to it if it crops up again.\n. @dan Agreed, but I think \"begin_association_chain\" changes the meaning sufficiently to hide the intent ... specifically that this is the first item in the association chain. I think it's just a coincidence that 'end' is a verb and 'beginning' isn't!\nto me 'beginning_of_association_chain' is more expressive than 'start_of_assocation_chain' ....\n@jose I think it would be wise to alias it as Dan suggests, or at least deprecate for a point release!\n. Cool, no worries!\n. ",
    "jo": "The Sorry is mine. You're right!\nthis one belongs to make_resourceful.\nExcuse,\nJohannes\n. ",
    "carlosantoniodasilva": "Hello!\nActually I think you don't need to declare \"belongs_to :user\" in your controller, since \"begin_of_association_chain\" already tell masterpieces will be filtered only by the current_user. Please try removing this belongs_to.\nCarlos.\n. Are you using after_initialize inside private declaration in your model? after_initialize only works if its protected/public.\n. Hello, \nto be considered an invalid record and render failure inside your action, your model must have at least one error added. Responders will check whether your model has errors or not to render success/failure cases. This is why adding the validation works, because there is one error added in the model.\nPlease try stubbing model.errors with at least one error.\nCarlos.\n. This happens because in before_filters InheritedResources haven't invoked yet any method that actually loads the association chain, in you case, question and answer. IR loads it inside the method itself, in this case :new in your AnswersController.\nIf you want to load it by yourself to have the helpers available inside the before_filter, just use the :resource method, that will return a new answer (@answer) for you in this case. All methods would be available after calling it.\nJust for understanding, this method calls association_chain internally, as you did manually.\n. Did you try setting it to nil (or empty) inside the locale file?\n. Applied in 900e915851b5ac994e34c15e7839deb4b500ad56, thanks.\n. It's not an IR issue, what happens is that you're passing the :notice as param to the create method. It's executed before IR takes care of it, so you don't have @attendance variable. And as it's a create method, you're supposed to user build_resource instead of resource. The best way to handle that is how you've done, creating a format block, where you'd have access to all IR helpers.\n. Actually, it depends on the way you build the application, for instance, you might not have access to the person instance while building the resource or sth like that.. Or I just feel more comfortable with that anyway =).\n. Your example should work properly. end_of_association_chain in a normal PostsController (without belongs_to or scopes) would return the model Post, so it'd be kinda same of Post.includes(:comments). \nps.: notice Post.all.includes(:comments) is wrong, you're not supposed to use all.\n. I believe it's possible to give :collection_name as a param to belongs_to, so you could call sth like:\n    belongs_to :node, :collection_name => :documents\nTake a look at the docs inside class_methods to see what's possible to do.\n. @amw This might be because of the operator precedence: && executes first than the assignment:\n```\n\n\nc = 'carlos' && c.upcase\nNoMethodError: undefined method upcase' for nil:NilClass\n    from (irb):9\nc = 'carlos' and c.upcase\n=> \"CARLOS\"\n```\n. Ah sure, I didn't intend to say to useand`, it was just to better explain the operator thing :).\n. I believe that the current implementation expects some error to be added to the model, so IR would consider it a failing destroy case. Just to confirm, are we going to change this?\n. Me! =P\n. Ok, it seems like we're having some problems with the way it works today, by requiring errors to be added to the model to consider a failure destroy scenario. The issue #185 was opened by @derekprior a few hours later relating the same problem.\n\n\nI don't actually remember why we decided to let it this way, whether there was some drawback or not. After discussing with @josevalim, we believe that there seems to be no real problem to change this to check for destroy return value, so if you or @derekprior want to try out a patch, it'd be welcome :)\nThanks.\n. Yeah, we had basically the same issue opened today a few hours ago :). See #181\n. This is how InheritedResources changes this configuration.\nYou should be able to do the same in your app, configuring back to the default :scaffold_controller, by adding this to your application.rb file:\nconfig.app_generators.scaffold_controller = :scaffold_controller\nThat should work.\n. Weird, setting the config in your application should have worked fine. Could you please send which Rails and IR (or ActiveAdmin) version you're using?\n. We're releasing a new version of IR, please try it after the release and let us know if that worked. Thanks\n. Great! :)\n. @jayzes I think there's no special reason to lock this, but you should be able to update responders in your app with a bundle update responders, since inherited resources relies on responders ~> 0.6 and not ~> 0.6.0. In any case, I think it's fine to bump here anyway, if you say everything is passing ;)\n. It'll use the association chain if you use collection or resource, so that you can execute anything you want before calling update!. I don't think there's the need to extend the api with more blocks, since this can already be achieved in other ways. Thank you!\n. resource should be already available for you in that method, since it's a helper method in the controller. There shouldn't be necessary to add a third argument to the block. Thanks!\n. I'd rather not support it directly in IR, since it's nor IR responsibility and goal. Thanks for your contribution.\n. This would be a good fit for a separated gem, though ;)\n. ",
    "millisami": "By removing that belongs_to :user, it works.\n. ",
    "benone": "I have an issue with acts_as_nested_set. An example:\nclass Page < ActiveRecord::Base\n  acts_as_nested_set\nend\nclass PagesController < InheritedResources::Base\n  respond_to :html, :json\nend\nroutes:\n  resources :pages\nend\nWhen I try to open /pages I have an error \"No route matches \"/pages\"..\nIf I remove   acts_as_nested_set its ok\n. ",
    "baldwindavid": "Thanks.  This is handy.\n. ",
    "wanderley": "Ent\u00e3o vai em portugu\u00eas mesmo.\nDentro de um controller se eu dizer as actions que quero tipo:\nactios :index, :show\nele ainda aceita outras actions como por exemplo update e destroy\nQuando eu fa\u00e7o via actions :all, :except => [:updater]\na\u00ed funciona.\n. ",
    "blakechambers": "BTW, here is my update function currently:\n    def update\n      update! do |success, failure|\n        success.js { \n          flash.discard(:notice)\n          render @todo \n        }\n      end\n    end\n. ",
    "jeroenvandijk": "I can confirm InheritedResources (0.9.3) is not working with Datamapper (10.1)\nI have quickly tried to redefine the write_inheritable_attribute method, but that didn't work.\n. ",
    "Odaeus": "H Jose, this is still a problem when the class attempts to determine the model name from the controller name, the code is still the same at:\nhttp://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/class_methods.rb#L229\nIt's a much more informative error message if the begin/rescue block is removed.\nThanks,\nAndrew\n. ",
    "allangrant": "Setting \"DO_NOT_SET_DEPRECATED_FLASH\" fixes it.  Its being set in set_flash_message! (base_helpers.rb).  I don't understand the point of having this behavior in the base gem, and the deprecation warning in the log/readme doesn't make sense.  Perhaps I'm missing the point somewhere?\n. Sweet.  Thanks for the quick fix!\n. I'm using inherited_resources-1.0.2 without responders.  Tried with responders-0.4.2 and the behavior is the same.\n. Although I know it's lame on my part, I'm afraid I don't know how to. :(  I need to get up to speed on Rails TDD/rspec/etc, but won't get to that within any reasonable time.\n. ",
    "boblin": "So it is not a bug, it's a feature :-) \nThanks Jose!\n. ",
    "eugenebolshakov": "Wow! Hey Jose, thanks for such an amazingly fast response/fix. It's working!\n. ",
    "IvanUkhov": "so when the record is already destroyed (like @article.destroy), it is frozen, so can't be modified. when IR calls record.errors, it initializes an instance variable (@errors ||= ....), that method does this, so it modifies the record...\n. is it necessary to check errors after destroy?\n. Yes, you are definitely right, it is not bug of IR as I already said. Thanks for quick responce and Happy New Year! =)\n. Ohh, that's great! I was wrong about the author, he does care about MongoMapper. Now I can freely use it with other my favorite plugins.\n. Ohh wonderful news! I'd better try it on my own before bothering you) It's really should be mentioned on the main page of your great plugin!\n. ",
    "PlasticLizard": "Looks like the cause of this problem (freezing) was just removed from MongoMapper a few hours ago anyway.\n. ",
    "knoopx": "wow that was fast, let me take a look at the tests, but it redirects to resource_url instead of the one I'm providing on successful resource creation (on my app).\n. > Are you using rspec?\nyes, but already found \"my\" problem. i was attempting to append the user to the resource this way, in order to avoid writing the finder code and expecting that \"resource\" method would build the resource for me, but it turns out that, without calling build_resource first, the create method somehow no longer redirects to the location i'm overriding:\ndef create\n  #build_resource #i was missing this line\n  resource.user = current_user\n  create! do\n    parent_path\n  end\nend\ni'm aware that this is not the intended usage of inherited_resources or it is?\n. ok, i've been playing with it and found that :parent, :parent_type, :parent_class and :parent? helpers are only made available for polymorphic associations. I've patched it so they are now available for all types of belong_to's. However I don't know how to run the tests, i'm always getting missing dependencies/constants. I'm working with the v1.0.6 tag but I see test cases depend on rails3 (active_model, railities...), is that correct?\n. not me but lucasmazza, don't know if he already contacted jose. he patched both versions: http://github.com/lucasmazza/inherited_resources/commit/143a464bd6dcff942aa6aff0df7c25c84edee536\n. > Your ApplicationController should not inherit from InheritedResources::Base\nWhy not? I mean, it's currently not supported or it's just a functional requirement?\n. ",
    "qrush": "This still isn't working. Example repo that shows the broken behavior:\nhttp://github.com/qrush/ir_wtf\nMigrate and head to /posts. Works the first time, then fails on another request.\n. ",
    "geoffgarside": "I've noticed that it works find in production mode as things don't get unloaded, but it seems to break in development mode where things are reloaded for each request.\n. ",
    "some1else": "Inherited Resources dependency Responders clashes with newer installed versions of itself when using without Bundler.\nInherited Resources doesn't get loaded when using Bundler with Rails 2.3.\nI guess using RVM and gem-sets is the best solution for these legacy apps. Please add a note that Rails 2.3 support is deprecated in the README\n. ",
    "javierm": "Thank you. It works right.\nNow I see it says so in the Responders documentation, although I guess you have to know a bit of the internals to see the issues are related.\nI'll leave to you if you consider it should be added more explicitly somewhere in the documentation.\nThank you!\n. ",
    "dukex": "Thank you!\n. ",
    "nskeip": "Just for newbies like me got @carlosantoniodasilva right:\nMyModel.any_instance.stub(:errors).and_return([\"Error1\"])  # this is for inherited_resources\nThis works! Yay!\n. ",
    "fuzz": "This fixes it.  Thank you.\n. ",
    "kevwil": "1.1.0 isn't backwards compatible, then? as is claimed in the readme?\n_edit_ oops, read that as \"backward compatible\", sorry for jumping to conclusions.\n. ",
    "curthasselschwert": "I am having the exact same problem, but only in my cucumber steps, not when viewing the site in my browser. Additionally, it's only failing for some of my models, not all of them. It was working fine last night and I did not update any gems on my system. I switched git branches and made a few changes to my CSS, switched back to my master branch, and that's when I started encountering errors.\n. ",
    "retro": "I was using flash[:notice], and then I would do flash.delete[:notice]. I wili check if it is working correctly with setting flash.now\n. I'll try to find some time this week to debug this. \n. ",
    "kejiro": "I believe that the problem is in responders. I had the same problem which I managed to get around by switching the lines in to_html so that set_flash_message comes before super.\ndef to_html\n  set_flash_message! if set_flash_message?\n  super\nend\nTo me, it sounds more logical that the flash message should be set before the view is being rendered.\n. I was using standard flash, or rather, I let inherited_resources handle everything. \nIt would be nice to have it use flash.now on failure, but it would probably require a bit more logic for that seeing that giving the :flash_now in the respond_with call would trigger it for both success and failure.\n. Well, what I meant was that the flash message did show up after a redirect, but when rendering instead (like in case of an validation error) it never showed up. \nI did assume that was what this issue was about since that was what I had problems with, and it seemed similar.\nHowever, it is not using flash.now now since the message is still available for the next action as well. \nMaybe adding a flag @use_flash_now_on_failure would help me in that case, but I don't think that have anything to do with this issue :)\n. ",
    "romanvbabenko": "Sorry, it's my misprint\ni have PeopleController & UserController but error remains\n. O. Yes. It's work.\nBut\nclass PeopleController < ApplicationController\n  inherited_resources_blablala\nend\nshould say something like 'unknown method inherited_resources_blablala' \nbut  ActionController::RoutingError (No route matches \"/people\"):\nonly...\nthanks!\n. ",
    "mrroach": "It's not always the same options, the options depend on parameters passed in by the user. I'm assuming that by overwriting \"the required pieces\" you mean like this:\ndef index\n  index! do |format|\n    format.xml { render :xml => collection.to_xml(to_xml_parameters) }\n  end\nend\nIs that correct? It kind of sucks to have to repeat myself in all my controllers that way; perhaps a responder is a better choice...\nThe stuff under legacy hurts my brain :-). Do I need to create an ActionController::Responder or an ActionController::MimeResponds::Responder?\n. Thanks for your help. I think the responder route is going to work well for me\n. ",
    "jpshackelford": "I too am finding that I am doing--or am about to do--the following in many controllers. \n```\ndef index \n  index! do |format|\n    format.xml{  render :xml  => collection.to_xml(  render_options ) }\n    format.json{ render :json => collection.to_json( render_options ) }      \n  end\nend\ndef show\n  show! do |format|\n    format.xml{ render :xml  => resource.to_xml(  render_options ) }\n    format.xml{ render :json => resource.to_json( render_options ) }\n  end\nend\n```\nmrroach, how did your Respondor solution work out? Care to share a snippet? Jose, these seems a fairly typical scenario. Would you accept a patch to do something about this in inherited_resources itself?\n. Jose,\nI have attempted this at https://github.com/jpshackelford/resource_inclusion . I'll be interested in your feedback.\nJohn-Mason\n. ",
    "pixelvitamina": "thanks for answering this quick.\nyour are right, the parent is set on all views, but its not available on all actions in the controller.\ni've also just found that when i call association_chain, the parent is available corrrectly on all actions.\nclass BaseController < InheritedResources::Base\nbefore_filter :trigger_parent_assignment\ndef trigger_parent_assignment\n    association_chain\n  end\nend\nthanks, anyway!\n. ",
    "cassiomarques": "Sorry Jose, false alarm.\nThe problem has to do with acts_as_audited. Tried an older version and it worked. \nNevermind this issue :)\nThanks!\n. ",
    "argl": "i doubt it as well ;) yes, we're using haml for the html, latest git version as well. heres the relevant ections form the app's gemfile:\ngem \"rails\", :git => \"git://github.com/rails/rails.git\"\ngem 'haml', :git => 'git://github.com/nex3/haml.git'\ngem 'inherited_resources', :git => \"git://github.com/josevalim/inherited_resources.git\"\ni'll try to create a minimal test case to reproduce and report back.\nthanks a 10^6 for the quick response.\n. i think we've found it, we were rendering a haml partial from an erb template (don't ask). switching over to using haml only seems to solve the issue. nothing wrong with inherited_resources.\n. ",
    "Bregor": "Ooops! My fault.\nSorry!\n. ",
    "sauberia": "I've just found out, quite randomly, that if I call association_chain in my controller method where I'm trying to access the parent and parent? variables, they are suddenly available.\n. ",
    "markmcdonald51": "duplicate\n. ",
    "sergio-fry": "oops.. my fault!\n. My AR#to_json was private and I always had \"Missing template error\". I've looked at source code of your plugin and found these undefs and commented them. After restaring server I've noticed, that my AR#to_json is private. I've changed this method to public and got SystemStackError. After uncommenting undefs I've forgotten to restart server. After restarting it works just fine.\nSo, there is no problem to redeclare model to_json method.\nBut I still can't  understand, why we need these lines vendor/gems/inherited_resources-1.0.6/lib/inherited_resources/legacy/responder.rb:\n    # Undefine :to_json and :to_yaml since it's defined on Object\n    undef_method(:to_json) if method_defined?(:to_json)\n    undef_method(:to_yaml) if method_defined?(:to_yaml)\n. I'll try to dig it :) later.\n. ",
    "gmoeck": "I was running on edge capybara, when I switched to the gem, it seems to fix the problem. Going to see if I can spot what changes made the issue occur.\n. For whatever reason, when they changed\n    ActionDispatch::Static\nto\n    use ActionDispatch::Static\nIt gives that error. Likely a capybara issue, not an inherited_resources issue. Not sure what the difference is though, so I've posted a link back to the issue I put here.\n. ",
    "contentfree": "Have you figured out how to send a patch to Jose, knoopx? This is exactly what I'm looking for.\n. Just got bit by this. Any hope of getting a patch for this?\n. I'll see if I can patch it. The simplest \"fix\" is to change line 135 from:\nparams_keys.include? resources_configuration[poly][:param].to_s\nto:\nresources_configuration.include? poly && params_keys.include? resources_configuration[poly][:param].to_s\nNow, I don't know what kind of behavior you'd get if you define the same symbol in multiple controllers, but it seems like it ought to be safe since resources_configuration seems to contain correct info except for the values under the :polymorphic key.\nIt's not a true fix, of course. It would be better to figure out why the values in resources_configuration[:polymorphic][:symbols] isn't unique to the resource config.\n. I'm curious why this issue has been closed. Was it fixed?\n. Looks like specifying multiple polymorphic belongs_to resources doesn't behave the same as specifying multiple NON-polymorphic belongs_to resources. Closing.\n. Ouch. Why not?\n. It ought to work if it was changed to be just ActiveModel-compatible though, right?\n. ",
    "lucasmazza": "Applied, but only on master http://twitter.com/josevalim/status/22621928441\n. ",
    "jonleighton": "Interesting, I had not considered using errors when destroying an object before.\nIt still seems odd not to check the return value of destroy, but thanks for your help. Perhaps the responder could check record.destroyed?\n. ",
    "kossnocorp": "Thanks, I got it\n. ",
    "nowhereman": "You should fork this plugin http://github.com/ianwhite/inherit_views\n. ",
    "fredwu": "Thanks guys. Tada! http://github.com/fredwu/inherited_resources_views :-)\n. Thanks Jose! I just checked the test suite, they run fine on Rails 3.0, but on 3.1 they error out, I suspect my issue is actually related to 3.1's compatibility.\n. ",
    "crystalneth": "I haven't tried that, although I really would like this on a case-by-case basis, not globally.\n. ",
    "rafaelfranca": "both options did not work. Inherited Resources used your default responder\n. I'm using rails 3 with inherited_resources 1.1.2 and responders 0.6.2.\nIn my lib/application_responder.rb I have\nclass ApplicationResponder < ActionController::Responder\n    include Responders::FlashResponder\n    include Responders::HttpCacheResponder\n    include Responders::CollectionResponder\nend\nand in config/initializers/responders.rb i tried\nInheritedResources::Base.responder = ApplicationResponder\nand\nMyApp::Application.config.to_repare { InheritedResources::Base.responder = ApplicationResponder }\nAll the controllers that inherit for InheritedResources::Base only have the defaults responders.\nThe controllers that inherit for ApplicationController use the responder included in ApplicationResponder.\n. Closing because #303 was already merged.\n. It is more a feature request than a bug per si. So I'm closing.\n. This issue is too old. If you have interest on fixing it please submit a pull request.\n. This pull request is broken with the Rails 3.2\n. Rails 3.1 is not supported anymore. If you can reproduce this issue in a modern Rails version please let me know.\n. This need a rebase.\n. Please ask such of questions in the StackOverflow. Use the issue tracker only for issues.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. @tatiC could you try with this new release? Thanks\n. Closing this one\n. Please put in the header of your it.yml\n``` yaml\nencoding: utf-8\n```\n. Yeah.\n. Yeah. This solved the issue?\n. I'm reopening this issue but, as you can see in the README, we are deprecating this gem. So if you want to open a pull request or maybe have interest to maintain this gem please let us know.\n. responders have the CollectionResponders that works like the collection_url helper.\nThe responders generator give to us a perfect balance between hiding and showing logic. We prefer avoid magic methods that can make the code base hard to maintain.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. Hey @atd. We are not maintain this project anymore (See the deprecation notice in the README). If you or anyone want to maintain it, please let us know.\n. Yes, Thanks. @joelmoss all yours now. ;)\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This need a rebase.\n. If it is mass assignment error you need to put :key in the attr_accessible list.\n. Yes, it can, but the error you are getting is not because the attribute is readonly but because it is not allowed for mass assignment.\n.  Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. resource is a method used on inherited resources. If you name a model as resource it will call the resource method inside the resource method causing the infinite loop\n. This is more a feature request. Since this gem is deprecated and in maintenance-only I'll close.\nThanks.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This issue is because custom actions don't take success and failure as block arguments. They behave like new, index etc. So it only accept one block argument.\nThis weird message is because Rails use method_missing to get the mime type you are trying to use and using |success, failure| will call to_ary on the block argument making method_missing try to find Mime::TO_ARY.\n. actions will only tell if the action will be inherited from the inherited controller, not the actions that can be presented. This kind of permission you have to do in the route definition.\n. Even if you inherit your controller from ActionController::Base the view will still be rendered. It is not specific from Inherited Resources.\nAbout allow more arguments, the feature set of this gem is frozen and we are in maintenance-only, only critical bug fixes will be made.\n. It may not be calling because the controller you inherit from may be overriding some action. If you want to see this fixed make sure the problem is on inherited resources and create a sample application reproducing the bug.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. > First, I cannot reproduce this error\nIf you can't, we can't too.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This is new feature and we are in maintenance only mode, so new feature can't be added.\nThank you for the pull request.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n.  Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. I could not reproduce this bug.\n. I don't think this belongs to this project. Thank you for the pull request.\n. The feature set of this project is frozen. We don't take any new feature request. Thanks\n.  Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. > remove 'includes'.\n\nembed can't includes.\n\nRight\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. Fixed by https://github.com/josevalim/inherited_resources/pull/376\n. Could you rebase this pull request and see if this is still needed?\n. @varyonic maybe it would be better if you merge it manually?. Thanks!. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n.  You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Thanks!\n. Fixed by https://github.com/josevalim/inherited_resources/pull/376\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This is new feature and we are in maintenance only mode, so new feature can't be added.\nThank you for the pull request.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This changes the behaviour and may break a lot of applications. That said I prefer to not merge since we are in maintenance only mode.\nThank you for the pull request.\n.  Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. @bitboxer maybe we should just remove it from the default controller. Mind to open a PR?\n. :+1: I missed these tags too, and the only person who knows which commits the tags contains is who released.\n. I think we can consider ae1516a3f1a01f98beac3334f76831a1c793c521 v1.4.1 and 6a94a2c1b45215ee023804979321d889483c87ea v1.4.0. @joelmoss could you confirm?\n. Pushed both tags\n. TL;DR; you should not be using this gem.\nThe set of abstractions this gem includes may look simple to understand but it add complexity, mainly, for newcomers in your code base.\nUsually controllers only have simple code: Call a model method, check some conditions and render a view. Even all controllers do the same thing this is not code duplication worth to remove since you are not duplicating the business logic.\n. This is not inherited_resource issue. If there is an issue here is on bundler\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. You need to keep the ApplicationController without any namespace to inherited resources work.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. This is new feature and we are in maintenance only mode, so new feature can't be added.\nThank you for the pull request.\n.  You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Thanks!\n. This is new feature and we are in maintenance only mode, so new feature can't be added.\nThank you for the pull request.\n. If you don't need to validate the params don't call require\n.  Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. This issue has been automatically closed because of inactivity.\nIf you can still reproduce this error on the newest version, please reply with all of the information you have about it in order to keep the issue open.\nThank you.\n. Fixed by https://github.com/josevalim/inherited_resources/pull/376\n. Could you check with current master? It may be fixed by https://github.com/josevalim/inherited_resources/pull/376\n. Fixed by https://github.com/josevalim/inherited_resources/pull/376\n.  You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Thanks!\n. Right.\n.  Please use StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\n. Inherited resources is deprecated and we will not support it anymore. We recommend active admin to stop using it.\n. We did it before and the maintainer didn't could keep working on it. But for real, we don't want to spread this project anymore. We believe it add unneeded complexity in applications that are not worth.\n. I'll keep maintaining the project to fix bugs and keep the legacy working, but new features will not be developed and we will not support Rails >= 4.2\n. Just implement this code in your application. BTW, we believe this methods give more problems than are useful, and this is the main reason we deprecated this gem\n. @petergoldstein :+1:. I'll review, merge and do the release later.\n. Yes. I can. I'm just going through the issues tracker to see if we can't add more fixes on this release (that I hope it is the last one)\n. Only missing fixing an issue that already have a open pull request (https://github.com/josevalim/inherited_resources/pull/378). I hope I can do this week.\n. 1.5.1 released\n. Could you test with the current master branch? Thanks\n. I think we should only generate it if the application is a Rails 4 application or it is using strong parameters right?\n. Inherited resources is deprecated and will not support Rails 4.2, neither responders 2\n. Was this issue fixed at 1.1 branch of responders? If not it should be.\nWe are not going to support responders 2.0 since it depends on Rails 4.2 and we will not support Rails 4.2, but we still support any version of responders >= 1.0 and < 2.0, so we can fix that issue on responders 1.1.x and you can solve this problem.\n. Just backported the fix to 1-1-stable branch. Could you check with it? If it does fix your problem I'll release a new version\n. 1.1.2 released. Thank you for the report.\n. I already create a branch but I need to understand why the tests are failing randomly. https://github.com/josevalim/inherited_resources/tree/rails-4-2\n. 1.6.0 released.\n. No.\n. Sorry, pressed enter to early. I don't know any test helpers. I don't think you need any test helper for test inherited_resource behavior\n. If you need in only one action is better to override the action to do what you want. end_of_association_chain is only useful if you want all actions to behave in the same way.\n. When you say it fails which failure message you get? Looking at your report I could not see anything wrong. \n. No problem. Thank you for reporting back.\nOn Mon, Dec 22, 2014, 12:22 Luc Donnet notifications@github.com wrote:\n\nMust use inverse_of in my models like that :\nhttp://railsguides.net/belongs-to-association-and-validate-presence-with-nested-attributes/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/josevalim/inherited_resources/issues/385#issuecomment-67841841\n.\n. Can we dynamic declare the controller only in the test that need to change it?\n. to get it working on travis @josevalim need to enable it first. I'll try to get him to enable it.\n. We need tests to work with 3.2/4.0 too.\n. Just to make sure I got the problem, this responders is making the API response to be cached, or it is the HTML response? For what I got in the original report at #342:\nBasically the contents of index and show views are cached (including flash messages) until I forcefully fetch the page again.\n\nIt seems it is blaming this responders to caching HTML pages.\n. Well, it is documented, so it is not surprising :smile:.\nBut I agree we should not include by default at inherited_resources.\n. Thank you for the pull request but what that section wants to explain is already explained in the previous example. I don't see any need to other example.\n. You don't need to use rails-4-2 branch anymore. It is merged at master and it was already released as 1.6.0. Use the released gem.\n. > the gem is going away or headed towards end-of-life\nThis is exactly the case. The last work of this gem was to add support to Rails 4.2. Now no new development will be made and we are only update the code if there is a bug with the integration with Active Admin.\nI made this compromise with Active Admin maintainers to keep Inherited resources maintained until the release of Rails 5.\nWe really don't believe inherit resource is a good choice for new projects and we don't want it to be used. Of course we can't leave our users alone, this is why we will keep maintaining the already released versions.\n. > You will have to delete the repo or someone will make it compatible for Rails 5.\nI'm fine with it. People can fork and release it if they want. This is open source after all.\nWe just don't want to be the people that will advocate about this gem usage. We don't recommend it to be used in new applications.\n.  Can you please provide a sample application that reproduces the error?\n. > When passing the ids of a HABTM relationship, inherited_resources interprets that as trying to create new entries rather than modifying existing ones. This can be mitigated by passing an id attribute in with the attributes for the HABTM relationship.\nYeah, this make a lot of sense. This is how nested attributes works. We are just matching the same behaviour.\nFrom http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html#method-i-accepts_nested_attributes_for.\n\nBy default the :update_only option is false and the nested attributes are used to update the existing record only if they include the record's :id value. Otherwise a new record will be instantiated and used to replace the existing one. However if the :update_only option is true, the nested attributes are used to update the record's attributes always, regardless of whether the :id is present. The option is ignored for collection associations.\n. Could you add a test to it?\n. It is exactly what the README is saying. It is deprecated a d people should not use it. \n\nThank you so much for the question \n. It is because you are including inherit_resources at the ApplicationController and you should not since InheritResources::Base inherit from ApplicationController.\n. Thanks\n. This gem is deprecated and no future support will be given, sorry.\n. Thank you for the pull request. Inherit Resources is not in active development anymore and will not support Rails 5.\n. Thank you for the pull request but this gem is deprecated and not in active development.\n. Thank you for the pull request. Like explained in the README this gem is deprecated and it is not accepting new features.\n. Hey thank you for the pull request. I can do it but can I help you in a better way, removing the inherit_resource dependency? How do you feel about this? Do you think it would be a lot of work?\n. Definitely I don't want to block you, so I'm fine with merging and releasing this. Could you look at the tests failures? If not it is fine, I can find some time to look on then.\n. I'd go with removing support to ruby < 2.1 for the next release.\n. It is still broken with Rails 3.2 but I can fix it later.\n. Thank you for the pull request. We already have one to do the same thing. I'm in the mobile and can't link but you can find it easily in the pull requests tab \n. Oh, This is using inherited_resources 1.3.1 and it doesn't support Rails 5. Make sure you are using the master branch,\n. Sure, but seems that it is causing problem https://github.com/josevalim/inherited_resources/issues/414. I don't have time (neither motivation) to investigate it, could you check?\n. Never mind, found it. I'll release later.\n. Hey thanks for the ping. Like it is already stated in the README for more than 4 years this gem is deprecated. While I know that many of you rely on it, you all should be aware that releases can take ages, since there is no motivation by any of the maintainers to work on this gem. Pinging me on issues will only remove any motivation that I may have to do a release.\n. BTW, I'd love some help to fix this issue since it is what is blocking the Rails 5 release and I don't want to work on it https://github.com/josevalim/inherited_resources/issues/417\n. Closed by the 1.7.0 release.. Can we try to add a test for it? The fix looks good though\n. The gemfile lock is not a problem. Make sure your project is using the master branch of this project.. In this case it is not inherit resources that is dropping support. You are still able to use has_scope 0.6, so we can say that inherit resources still support Ruby < 2.1.7 and didn't dropped support to any version in a minor version update.. I understand it broke the build of your gem, but you still can in your gem to specify the version of has_scope that doesn't break the build. For the point of view of inherit resources not allowing users to use 0.7 because some users may be using a version that 0.7 doesn't support is also an anti-pattern. We still support 0.6 so users can chose which version they want to use.. Done. Could you review the message? https://github.com/activeadmin/inherited_resources/pull/424. My experience working in this project for more than 6 years and in OSS in general is that restricting contributors to do their work without peer review decrease the number of contributions if they are not motivated to do it. In my case I'm not motivated to work in this project but I'd occasionally help, but restricting what I can do will just make me avoid contributing.\nI do agree it is nice to give people opportunity to review, but review can happen in different stages. I personally review after the fact to unblock others.. I can't. I'm not an admin.. BTW, I'm still a contributor of this project. I did agree to move the project to activeadmin org, but I didn't agree to remove me as contributor neither to change the way the project works.. Thanks! Thank you for giving a new home to this project and helping with it.. \ud83d\ude48 I think I broke the build. Let me try to fix. > The only thing I don't quite understand is this part of the second commit message: \"Also move the initialization to an engine\"\nGood point. I moved the initializer to the engine but later I reverted and forgot to remove the text from the commit message. Thanks.\n\nAlso, would I be better to call the engine class Engine instead of Railtie? And if that's a good change, could that break compatibility in any way?\n\nI though about it too. Usually people doesn't reference gem's engines/railties but to avoid a possible breaking change I kept the name because an engine is a railtie so the name is not incorrect, it is only not specific enough.. > That was the potentially breaking change for non-rails users that is not finally happening in this PR, right?\nIn theory it was a breaking change but I don't think users of this gem use it outside a rails app. The main reason I leave it out of this PR is that I'd have to change our test suite because it is a client of this gem that doesn't execute the railtie. Since using on_load already fixed the problem I wanted to fix I kept the move to the railtie out of this. . Fixed. has_scope 0.7.1 was released. @maxexcloo is is already fixed. See the comment right above yours.. Good idea! But we need to change the gemspec indeed.. Right. Closing. Thank you so much for the pull request. In my opinion it is your application responsibility to pass a Hash to that method. So it makes sense to you change your code to: collection_url(params.permit!.to_h.merge(example: true)). Yeah. Let's check of permitted and call to_h if it responds to that.. Thanks!. Can we keep the same pattern for all tags? We use v1.7.1. rake release take care of creating the tag automatically with the right pattern. I just created v1.7.2. Maybe, but maybe not. We could write code that works in 2.2 and 2.5 but not in 2.4 for example.. Why the gemfile.lock was removed? This is an antipattern.. https://bundler.io/blog/2018/01/17/making-gem-development-a-little-better.html. I think they should convince us that it should be removed, not the other way around. This gem has the Gemfile.lock for a long time ago so if we want to remove we should give good argument to why we should remove it, not the opposite. If I was going to add the Gemfile.lock I agree I should need to convince people to do so.. \ud83d\udc4d for this proposal. It is used when you clone the repository and that is what is used when contributors clone this repository and run tests. Without that lockfile contributors may close this repository and get a red build because one of the dependencies is incompatible with the current code, and that is confusing to them since they don't know they should ignore that or if they should fix it. With that lockfile that problem goes away because we know the gem versions that are going to be installed on their machines are the same we used in our machines and we know have a green build.. If we are going to enforce something I prefer to each line to end with punctuation.. I'm fine with a single entry per line to make if that is easier to enforce too.. responders and has_scope are really stable. They are maintained and you don't see activity because they don't require any changes.\nresponders is a gem that always have support to the last version of rails because Shopify uses it an Shopify runs rails from master.\nWe don't use has_scope, but it usually don't require any change after a rails release.. I think before fixing this by rescue exceptions we need to understand why this fails. Creating a class called Base should not affect the way a gem is loaded.. Put everything in the same line please.\n. Could you use ~> 1.0 only? Since we are in the 1.x release the API is stable and all 1.x releases are compatible. Doing this way we don't need to change the gemfile every release of responders.\n. I'll do\n. Why this was changed?\n. This fetch will fail in case the singular_name key is not present. I believe we should change it to require\n. I mean the fact of the hash with key with the same name of singular_name not being present in the params hash. If that is the case the fetch will return a Hash instance that doesn't responds to premit and will failt.\n. :+1:. We could move this to the engine and I think it would be better but I'm not sure if people uses inherit_resources without Rails. Do you think it is fine to us to move it there?. Changed the code to be in the engine.. Do you think it is worth to put this method in a module and use extend here? I'm fine with both bur using a module seems cleaner.. We had to keep this here since we need this behavior in our tests and the railtie is not executed in our tests. I can change it to be a method that include this behavior but I prefer to do in a different PR.. :+1:. I think we need to bump this too since now we don't test with 3.2, 4.0 and 4.1. Just remove this conditional is you want to support API controllers along with the comment above.. 'given_args = given_args.collect { |arg| arg.respond_to?(:permitted?) ? arg.to_h : arg }'. You don't need to check if ActionController::Parameters is defined anymore with the actual code.. 1.8.0 is good for me since there is no breaking change on this release.. I think the rm should be before bundle runs. So a before_install hook like this one? https://github.com/rails/rails/blob/master/.travis.yml#L34. Maybe instead of this loop we can do the two method calls? This array will not grow over time so this change would remove this indirection.. ",
    "evilstreak": "The error I'm getting is:\nNameError (undefined local variable or method `my_filter' for #<ProductsController:0x00000104fb9d48>)\nThere's also a full stack trace if that's useful. I should probably have mentioned already, I'm using Ruby 1.9.2.\n. Now I feel really stupid. Server restarted and it works like a charm. Apologies for wasting your time with this, and thanks for helping out.\n. ",
    "joerichsen": "I had a similar error ie. \"The error occurred while evaluating nil.find\" - and the problem was that I had forgot to add the model class to my app :-|\n. ",
    "andriytyurnikov": "having some parameter for default redirect action sounds nice, indeed\n. This seems to be related to ruby version.\nIn old rubies  \"%{resource_name} \u00e8 stato creato con successo.\" will have ascii encoding if resource_name was a symbol (symbols are stored in 7 bit ASCII, and interpolated string were converted into encoding of first piece of interpolation)\n. gem 'inherited_resources',  github: 'andriytyurnikov/inherited_resources', branch: 'rails_4_2', still work-in-progress though\n. @markmohr15 fork gem dependent on it, and replace original dependency\n. ",
    "jonnii": "No problem\n. ",
    "jostheim": "I'll try to get to it, I just reverted back to not using inherited_resources, because I have deadlines.\n. ",
    "cwinebrinner": "Was this ever resolved somehow?\nMy code:\nruby\n    class BlogPostsController < InheritedResources::Base\n      belongs_to :user, :singleton => true, :finder => :find_by_username!, :param => :user_id do\n        belongs_to :blog\n      end\n    end\nOutput:\nundefined method `blogs' for #<User:0x000000034b80b8>\nIs there a simple workaround?\n. ",
    "chadoh": "I am able to get around this by using\ncreate! do |format|\n    format.html do\n        flash[:notice] = \"#{resource.person.first_name} was there\"\n        redirect_to meeting_url resource.meeting\n    end\nend\n. def create\n    create!(:notice => \"#{build_resource.person.first_name} was there\") { meeting_url resource.meeting}\nend\nworks! And I like how it looks better than the workaround I posted. Why did you say that my workaround was the best way to handle it?\nThanks for the feedback!\n. ",
    "janlimpens": "Very cool. Didn't work as above, but\nclass Admin::PagesController < ApplicationController\n    belongs_to :node\n    defaults :collection_name => 'documents'\n  end\ndid.\nThanks!\n. Very cool, thanks!\nI did not think this was a bug either, but this is the correct channel for\nthis kind of questions, right?\nOn Sun, May 1, 2011 at 12:50 PM, dbkrett \nreply@reply.github.comwrote:\n\nTry this override in the inherited resource controller:\n protected\n   def resource\n     @activity ||= end_of_association_chain.find_by_slug(params[:id])\n   end\nIf you need further information suggest you look at lines 29 to 46 of\nlib/inherited_resources/base_helpers.rb file!\nI dont think this is a bug! or an issue that cannot already be addressed by\nan override\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/138#comment_1083502\n\n\nJan\nhttp://limpens.com\n. Joel Moss@28/062012:\n\nIR is no longer deprecated\n\nInteresting, why is that?\nAbra\u00e7os,\nJan\nJan Limpens\njan@limpens.com\nhttp://limpens.com\nCel: (11) 7909 6066\n. Joel Moss@29/062012:\n\nBecause I still use it, and intend to continue to support it now that I have been given push access.  \n\nThat\u2019s good news!\nThanks,\nCheers,\nJan\nJan Limpens\njan@limpens.com\nhttp://limpens.com\nCel: (11) 7909 6066\n. ",
    "mediavrog": "thanks for this blazing fast answer. I'd like to see this documented somewhere, or did i miss it?\n. Thanks again. Didn't know about that.\n. ",
    "danigb": "My helper methods aren't reloading too (using ruby1.8.7 and Rails3) ... I don't know exactly why, but i'm using inherited_resources...\n. ",
    "RobinBrouwer": "Had the same problem (Ruby 1.8.7 and Rails 3.0.1), but solved it by including the following to the ApplicationController: helper :all\nEDIT: Sorry about that. Somehow it worked a few minutes ago, but now it doesn't work with helper :all. :(\n. When I call inherit_resources inside the Controller instead of inheriting from InheritedResources::Base this problem doesn't occur anymore. I don't need to restart the server to reload the helpers. Just a temporary fix for the ones having the same issue. :)\n. ",
    "alec-c4": "Sent to Google Group\n. There are workaround - http://blog.josemarluedke.com/posts/inherited-resources-with-rails-4-and-strong-parameters\n. There are some problems with IR 1.4 :)\n```\nBundler could not find compatible versions for gem \"railties\":\n  In Gemfile:\n    inherited_resources (>= 1.4.0) ruby depends on\n      railties (~> 3.1) ruby\nrails (= 4.0.0.rc1) ruby depends on\n  railties (4.0.0.rc1)\n\n```\n. not working\n``` ruby\nclass ProjectsController < InheritedResources::Base\n  respond_to :html, :xml, :json\n  before_filter :authenticate_user!\nprivate\ndef permitted_params\n    params.permit(:name, :description, :workspace_id)\n  end\nend\n```\nIn logs i see\nStarted POST \"/projects\" for 127.0.0.1 at 2013-05-11 16:45:47 +0400\nProcessing by ProjectsController#create as HTML\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"rgwdDlsIgqOnViGvi23sSYozRh1e2LwJ9GBNkhjjFBc=\", \"project\"=>{\"name\"=>\"weewrw\", \"description\"=>\"werwer\", \"workspace_id\"=>\"5\"}, \"commit\"=>\"Create Project\"}\nDEPRECATION WARNING: Relation#first with finder options is deprecated. Please build a scope and then call #first on it instead. (called from load at /Users/alec/.rvm/gems/ruby-2.0.0-p0@progressor/bin/unicorn_rails:23)\n  User Load (0.6ms)  SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = 1 ORDER BY \"users\".\"id\" ASC LIMIT 1\nUnpermitted parameters: utf8, authenticity_token, project, commit\n   (0.2ms)  BEGIN\n   (0.2ms)  ROLLBACK\nDEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from block in _app_views_projects__form_html_slim___2193259297966455815_70262466174460 at /Users/alec/Documents/Projects/RubyApps/progressor/app/views/projects/_form.html.slim:7)\n. works perfectly :) :thumbsup: :heart: :dancers: \n. One more problem with overwriting actions:\nruby\n  def create\n    @project = Project.new(permitted_params)\n    @project.workspace = Workspace.first\n    create!\n  end\ncauses error\n```\nStarted POST \"/projects\" for 127.0.0.1 at 2013-05-11 17:27:04 +0400\nProcessing by ProjectsController#create as HTML\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"rgwdDlsIgqOnViGvi23sSYozRh1e2LwJ9GBNkhjjFBc=\", \"project\"=>{\"name\"=>\"ytrrty\", \"description\"=>\"rtyrtytr\", \"workspace_id\"=>\"\"}, \"commit\"=>\"Create Project\"}\nDEPRECATION WARNING: Relation#first with finder options is deprecated. Please build a scope and then call #first on it instead. (called from load at /Users/alec/.rvm/gems/ruby-2.0.0-p0@progressor/bin/unicorn_rails:23)\n  User Load (0.5ms)  SELECT \"users\". FROM \"users\" WHERE \"users\".\"id\" = 1 ORDER BY \"users\".\"id\" ASC LIMIT 1\nUnpermitted parameters: utf8, authenticity_token, commit\nCompleted 500 Internal Server Error in 4ms\n* [Bugsnag] No API key configured, couldn't notify\nActiveRecord::UnknownAttributeError - unknown attribute: project:\n  (gem) activerecord-4.0.0.rc1/lib/active_record/attribute_assignment.rb:47:in rescue in _assign_attribute'\n  (gem) activerecord-4.0.0.rc1/lib/active_record/attribute_assignment.rb:42:in_assign_attribute'\n  (gem) activerecord-4.0.0.rc1/lib/active_record/attribute_assignment.rb:53:in `block in assign_nested_parameter_attributes'\n```\n. @joelmoss could you check?\n. @joelmoss maybe you mean project model? because i'm operating with project. It looks like there are problems with following string\nruby\n@project = Project.new(permitted_params)\nbecause \nruby\n  def create\n    create!\n  end\nworks fine. I cannot get params hash from custom action :(\n. ",
    "aaronchi": "ran into this today :(\n. Hey guys,\nThis is actually really easy. Not sure why everyone is having so much trouble with it. Just drop this into an intitializer\ninherited_resources_strong_parameters.rb\n```\nAdd Strong Attributes suuport to all models (Remove in Rails4)\nActiveRecord::Base.send(:include, ActiveModel::ForbiddenAttributesProtection)\nMonkeyPatch Inherited Resources to support strong parameters\nmodule InheritedResources\n  module BaseHelpers\n    protected\n  def build_resource\n    get_resource_ivar || set_resource_ivar(end_of_association_chain.send(method_for_build, request.get ? {} : resource_params))\n  end\n\n  def update_resource(object, attributes)\n    object.update_attributes(attributes)\n  end\n\nend\nend\n```\nNow just define your params as you would for strong_attributes using resource_params\ndef resource_params\n  params.require(:group).permit(:name, :description)\nend\nThe main issue is that inherited_resources was splatting the attirbutes to support stuff like {params}, {:role => 'admin'}\nSince roles have been removed in Rails4, we just need to remove the splat from the build and update methods and it works fine. We also skip the params for get requests since build_resource runs for new as well.\n. Sure. Just wanted to provide and interim solution for those who were asking. I can make a pull request with tests for Rails 4 as long as it doesn't need to be backwards compatible.\n. +1\nTo address the new issue, you can skip building params if request.get?\n. :+1: \n. would be really nice if this could be merged and a new version released. It is holding up other gems like active_admin from using the latest version of IR\n. @rafaelfranca Why not allow a new maintainer to take over the project? Seems like this is still valuable for a lot of people.\n. ",
    "lda": "denied due new version \n. Hi jackdempsey.\nThis patch is a logical continuation of sviesczs idea\nThe main goal of this patch is reducing amount of code in following common cases:\n- You have not show action. So after create (or update) you must be redirected to index\n- You have not show and index actions, but you have parent controller. So after create you must be redirected to parent_url. \n- You have not show and index actions, and you haven't parent controller. So after create you must be redirected to root_url.\n- Any combination of absent actions.\nThus if we don't know what actions we have in runtime, we must try all of this.  So I introduce two \"smart\" methods: smart_resource_url and smart_collection_url applied only in create, update, and destroy actions accordingly.\nI strongly don't recommendate to alias resource_url and collection_url because you will have complicated views and unpredictable errors after doing this. So if you don't want to redirect to show after create just use this code \ndef create\n  create! { collection_url }\nend\n. Ok, the apprecable solution might be inheritance (or modules). For example:\n```\nApplicationController < InheritedResources::Base\n  def create\n    create! { collection_url }\n  end\nend\nMyCustomController < ApplicationController\nend\n```\nPS: dude, my nick is downcased LDA (not IDA)  :)\n. Or you can introduce some DSL to IR. I think it would be great if we will have nice DSL syntax like \nMyCustomController < InheritedResources::Base\n  redirects_to :index, :after => [:create, :update]\nend\nI'm too busy now to implement this feature\n. oops, stupid me :) yes has_scope is relevant\n. I need latest changes of IR, but  I don't like :git => 'git://github.com/....' in Gemfile. So I want new IR release\n. Hi, @kuraga. @josevalim is right, what do you send in JSON/XML response for articles#new ? PR broken because it is unsupported by me. \n. So, I think the best place for such things is a presenter layer.\n. I think about using presenters, but I don't use its yet. Read more about presenter/decorator pattern in Google :) \nSure, you CAN do this in controller, but probably (as @josevalim points) this is wrong place.\n. :+1: \n. ",
    "tribalvibes": "Documentation??\n. Since I couldn't reopen the issue, I figured you would't get the notice.\nI'm using belongs_to :user optional: true and had to declare the Biscuit as both nested and non-nested in routes. Now things seem set up properly, and resource_path(biscuit) in the partial does generate either the fq or shallow path depending on the route.  Now, how to get it to work for the case where the route is to a user, not to biscuits?   resource_url is either trying to call or is aliased to user_url.  Is there a way to force it to be user_biscuit_url so that the common partial works?\n. ",
    "pfenig": "I'd like to do that.  I just wanted to get this out there first in case somebody else runs into it.\n. ",
    "romanenko": "I ran into it and I don't know how to fix it with a patch.. And I really would like to make an optional nesting..\n. ",
    "nilclass": "I'm having the same problem. Thanks for your workaround, will use it, but would love to see this fixed as well. If I find time, will look into it :)\n. great, thanks josevalim!\n. ",
    "jfirebaugh": "This is a problem for me too.\nThe issue is this line in initialize_resources_class_accessors!:\n    self.resources_configuration[:polymorphic] ||= { :symbols => [], :optional => false }\nAfter the base Admin::AdminController gets this initialized, all the derived classes receive the same :symbols array rather than getting their own. resources_configuration is a class_inheritable attribute, but class_inheritable attributes are not deep copied.\n. :)\nhttps://github.com/bigfix/inherited_resources/commit/923be7ce61f6d520610d159b595ea3cf2f43e498\n. Unfortunately I couldn't get much further due to a JRuby bug:\nhttp://jira.codehaus.org/browse/JRUBY-5183\n. Hmm, :platforms => : ruby_18 does apparently not work how I would expect or is buggy. It still tries to install ruby-debug dependencies on 1.9.2.\n. Ah, bundler 1.0.0 bug. It works with 1.0.3.\n. Unless I'm missing something, ruby-debug is not installable on JRuby at any version:\n```\n$ gem install ruby-debug -v 0.10.3\nBuilding native extensions.  This could take a while...\nERROR:  Error installing ruby-debug:\n    ERROR: Failed to build gem native extension.\n/Users/jfire/.rvm/rubies/jruby-1.5.5/bin/jruby extconf.rb\nWARNING: JRuby does not support native extensions or the mkmf' library.\n         Check http://kenai.com/projects/jruby/pages/Home for alternatives.\nextconf.rb:16: undefined methodcreate_makefile' for main:Object (NoMethodError)\n```\n. ",
    "inherited-klaus": "but why does it work when i replace InheritedResources::Base with ApplicationController (so just disabling inherited_resources)\ncancan is still turned on then and not causing problems?! the test controller and further testing shows, that everything's fine then, makes no sense to me at the moment\n. ",
    "BanzaiMan": "Optionally, you might specify:\ngem \"ruby-debug\", \"0.10.3\", :platform => :jruby\ngem \"ruby-debug\", :platform => :ruby\ninstead, until ruby-debug-base 0.10.4 is released for JRuby.\n. John,\nYou're somehow missing ruby-debug from your RVM installation of JRuby.\nNot sure why RVM didn't do that, but you can follow the instructions in http://debug-commons.rubyforge.org/ to fix that.\n. ",
    "jwilkins": "More details from http://debug-commons.rubyforge.org/\n  Installation\n  (j)ruby-debug-base is available as a Ruby gem. Unfortunately it is still not installable remotely. But installation is easy enough:\nmanually download the ruby-debug-base-0.10.3.1-java.gem to your local directory\n  (grab from http://rubyforge.org/frs/?group_id=3085)\n  install the Gem into your JRuby Gem repository:\n    jruby -S gem install ruby-debug-base-0.10.3.1-java.gem\n  now install ruby-debug with:\n    jruby -S gem install --ignore-dependencies ruby-debug\n. ",
    "railsnerd": "OK so I found this ticket https://github.com/josevalim/inherited_resources/issues/closed#issue/81\nIs inheriting from inside the controller the official solution?  In the comments this is proposed as a temporary fix?\nWould be nice to keep using \"class X < InheritedResources::Base\"\n. ",
    "collin": "I'm not sure how to fix this bug, but maybe this information helps:\nUpon booting a rails console ( with X < InheritedResources::Base )\n```\n\nActiveSupport::Dependencies.autoloaded_constants\n => [\"Ability\", \"Article\", \"Publication\", \"Staff\", \"User\"] \nStaffsController\n => StaffsController \nActiveSupport::Dependencies.autoloaded_constants\n => [\"Ability\", \"Article\", \"Publication\", \"Staff\", \"User\", \"DeviseHelper\", \"LinkHelper\", \"ProfileHelper\", \"ApplicationController\", \"StaffsController\"] \nreload!\nReloading...\n => true \nStaffsController\n => StaffsController \nActiveSupport::Dependencies.autoloaded_constants\n => [\"Ability\", \"Article\", \"Publication\", \"Staff\", \"User\", \"StaffsController\"]\n```\n\nI actually had my first debugging session that involved breaking of constants autoloading. In that case I was using require in a file that was being autoloaded, which short circuited the code in ActiveSupport::Dependencies that would have registered the class for reloading.\nThe fix I employed there was to use Kernel.require instead of require, which implicitly is called on Object. Rails overrides Object.require, and leaves Kernel.require alone.\nI peeked into inherited_resources/base, but that strategy had no effect.\nIf somebody knows a good resource for which actions will short-circuit ActiveSupport::Dependencies that would be a great thing to have when approaching this bug.\n. Oh, hey. Is InheritedResources::Base being autoloaded by the Rails mechanism?\nLooks like it is.\nI wasn't able to find any documentation on this but here is what I discovered through trial and error/going over the Rails source.\nWhen the rails autoloader is invoked, say by accessing a constant that hasn't  been loaded yet, Rails goes out in search for the proper file to load for that constant.\nRails ordinarily marks this constant as reloadable.\nThere is a special case ( there may be more, but I am sure of this one ) that causes the constant to NOT be marked as reloadable.\nThat is, if you call \"require\" in the file that rails is loading for this constant.\nRails does this by redefining the require method. In the redefinition there is a \"short-circuit\" for marking classes as reloadable.\nThere is a way around this. Use \"Kernel.require\" in files for classes you want to be reloadable. Rails leaves that method alone.\nOn May 18, 2011, at 9:58 AM, thedarkonereply@reply.github.com wrote:\n\n@josevalim this is best fixed by turning InheritedResources::Base into \"development mode reloadable\" constant via something like this: https://github.com/thedarkone/inherited_resources/commit/9886f20de211a550ab0d81a98fa11e38676b35c3.\nThis way there is no need to have any helpers related hacks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/95#comment_1197051\n. \n",
    "albertoperdomo": "Is this still an issue? I'm seeing this behaviour as well...\n. ",
    "borisnadion": "looks like it is\n. no, it happens without rails-dev-boost\n. ",
    "marcandre": "+1\n. ",
    "escobera": "Need this too.\n. ",
    "vitaly": "hey, just wasted lots of time debugging this, finally traced to inherited_resource. Any ETA on the fix?\n. @joelmoss @taavo  How is this better then just overriding resource_params in your controller? it doesn't do anything useful when we use strong_parameters as we don't need roles in this case.\n. ",
    "thedarkone": "I think this is the same sure I run into with rails-dev-boost: https://github.com/thedarkone/rails-dev-boost/issues/8\n. @josevalim this is best fixed by turning InheritedResources::Base into \"development mode reloadable\" constant via something like this: https://github.com/thedarkone/inherited_resources/commit/9886f20de211a550ab0d81a98fa11e38676b35c3.\nThis way there is no need to have any helpers related hacks.\n. As it is right now InheritedResources::Base is not being auto-reloaded by Rails because it is in gem's lib directory. However it does inherit from ApplicationController that is an application class, that is auto-reloaded on per request basis.\nSo things look like this:\nApplicationController [reloadable] -> InheritedResources::Base [non-reloadable] -> YourAppController [reloadable].\nOnce you hit refresh ApplicationController and YourAppController is unloaded by Rails.  InheritResources::Base is now inheriting from an ApplicationController class that has been unloaded by Rails and a new ApplicationController has been created/redefined.\nThe new ApplicationController is completely different class than the one InheritedResources::Base inherits from. Therefore any changes made to ApplicationController file are not visible to the classes inheriting from InheritedResources::Base.\nSome more explanation is also in this ticket: https://github.com/thedarkone/rails-dev-boost/issues/8\n. Fix is an pull request: #145.\n. Hey, just a shot in the dark... have you tried restarting the server?\n. This is not by design, it's a bug: #95.\n. ",
    "AdrianTeh": "It's still happening.\n. Just add: defaults :singleton => true above your belongs_to statement like so:\nclass RepliesController < InheritedResources::Base\n  defaults :singleton => true\n  belongs_to :feedback\nend\n. ",
    "volkanunsal": "So what's the fix for this issue? I'm also seeing it in development mode.\n. never mind. i found a problem in my code. \n. ",
    "gamafranco": "+1\n. ",
    "kolo": "Not only in 3.0.3, also appears in 3.0.5\n. ",
    "dalton": "Is it possible that InheritedResource is adding the comment to @task in the new action of the CommentsController?\nPossibly related to this code?\n\n     def build_resource\n        get_resource_ivar || set_resource_ivar(end_of_association_chain.send(method_for_build, params[resource_instance_name] || {}))\n      end\n\nTracing through, it looks like that will call \n\n@comment = @task.build\n\nWhich does indeed appear in @task.comments.each despite still returning 0 for @task.comments.count.\n. ",
    "activestylus": "Ok cool , I suspected as much. Time to write a custom responder...\n. ",
    "andyw8": "Actually, I think this may be an issue with the ActiveResource client. The serialisation is discussed here: https://rails.lighthouseapp.com/projects/8994/tickets/5616-activeresource-error-parsing-support-for-new-json-errors-serialization-format\n. And here shows that Rails expects an :errors key (the from_json method):\nhttps://github.com/rails/rails/blob/master/activeresource/lib/active_resource/validations.rb\n. ",
    "joemsak": "this is also an issue when using bundler -- 0.6.2 is pulled in automatically, crashes the app\n. cool thanks :)\n. ",
    "jpzwarte": "Perhaps a patch something along these lines? (code is untested): https://gist.github.com/771915\n. ",
    "sirupsen": "Thanks for such a quick update. My models are rather default, so this wouldn't be it.\nI tested it out further, the weird thing is that this works:\nclass Forum::ThreadsController < InheritedResources::Base\n    defaults resource_class: ForumThread, collection_name: 'threads', instance_name: 'thread'\n    respond_to :html\n```\ndef create\n  ft = ForumThread.new(params[:forum_thread])\n  ft.user = current_user\n  ft.save\nredirect_to forum_threads_path\nend\n```\nend\nHowever, this doesn't:\nclass Forum::ThreadsController < InheritedResources::Base\n    defaults resource_class: ForumThread, collection_name: 'threads', instance_name: 'thread'\n    respond_to :html\ndef create\n  ft = ForumThread.new(params[:forum_thread])\n  ft.user = current_user\n  create!\nend\nend\n. It's there because some people do not like namespaced models. Although the example could be better, e.g. Forum::Post, ForumPost and Post makes more sense. I have updated with that, better, example.\n. This seems odd, except if you have a model called either Admin::User or AdminUser, which I assume you don't. I just created a test for your exact case, and this test passes.\n. Aha, I will look into this tomorrow!\nJose, no problem!\n. Fixed\n. Request param troubles in namespaced controllers fixed, closed by 283b29bc6248e95f9f46148ca5eb49b2bc52c893\n. ",
    "ashb": "Oh never mind what I want is\nresource_url( r ), :method => :delete\n. ",
    "iain": "+1, although I don't understand why you've put AdminUser in here. It looks out of place.\n. It's actually this commit that Arie is referencing\n. ",
    "jackdempsey": "Ida,\nThanks for this great patch! I'm a bit confused how that example shows off the power of smart redirects. \nI've gotten this working locally when I define a collection_url method that just users the resources _url method. \nHow does actions:all, :except => [:show, :index] demonstrate this? Sorry if I'm being obtuse, but I don't quite see it. Any tips?\nThanks!\n. Looking at this a bit more, it seems that you can use actions :all, :except => [:show] to undef show...and smart_resource_url is smart enough to say \"hey, they don't have a show, how about we try the collection url\"\nBut what if you want that show action? You just don't want to redirect to it after you create. \nSeems you either override resource_url in that controller to point to collection_url or you need to do something like the CollectionResponder?\nAh, and because of this line\noptions[:location] ||= smart_resource_url\ncollection responder will already see a location set and not do it's thing....\nSo in general because of this useful feature, if we want to redirect to the collection we have to override resource_url each time, huh. Not that it's hard, you can easily alias_method :resource_url, :collection_url or something, but I just want to make sure I understand this. \n. Hi Ida,\nThanks for the response, I appreciate it. \nThat all makes good sense. The only piece I don't like is the end solution. I don't want to have to manually define create and update methods in each controller each time I want to redirect to collection_url.\nI don't like aliasing the resource_url to collection_url of course, but think there has to be the possibility for a good solution in between the two. \nDo you have any thoughts on what a good system level solution would look like? Something like the collection responder ability? \n. Ida,\nHmm, I'll have to think about that first idea. I think you might have just triggered a good idea on some other refactorings.\nI like the second one too though. I was thinking about DSL just like that. I'll see if I can put together something for you and Jos\u00e9 to take a peek at. \nThanks!\n. hey Jos\u00e9,\nThx for the note. I care less about getting them all to work together and more about simply telling CUD actions to redirect to the collection url. Trying to see if there's a simple and clean way to do so at the moment. Hope to have a patch at the end of it. \nWas introducing a friend to SimpleForm recently. He was amazed. Seriously great stuff coming from you and the other folks at Plataformatec. As always, much appreicated.\nj\n. ",
    "amw": "There's no problem with the patch, but the tests are an issue. I've noticed you're using fake model objects instead of real ActiveRecord objects. I could create a fake object with \"scoped\" method that would return fake relation, but it's a pointless running around.\nAlso I have to update current tests which produce some errors with my patch and I'm not sure how to do that. Take this as an example:\n       Employee.expects(:all).returns([mock_employee])\nNow I could change this to:\n       Employee.expects(:scoped).returns([mock_employee])\nAnd the test would pass, but that's not how the real \"scoped\" works. The real \"scoped\" returns ActiveRecord::Relation object instead of an Array. It can be used as an array or converted to an array with scoped.all, but it has other methods too.\nYour thoughts?\n. Accidentally closed the issue, but it's ok - there will be a new one with pull request.\nNote to self: next time read the whole button, not just it's first word.\n. I have no idea why there are so many commits in this pull request. When I look on your master branch on github the last commit is dated 29th December, but my fork has 18 commits more, some of them very recent. And I've pulled it directly from your master branch. What's wrong?\n. I'll try to do this today. Cheers\n. This latest commit fixes the existing tests, but it doesn't introduce a new one to catch future commits that could break the scoped collection return value.\nAlso for simplicity I made the :scoped expected return value an array, like the one returned from :all. I think that's ok since ActiveRecord::Relation accepts all the methods that Array responds to.\nAs to the commits count on this pull request - if you add my fork to your remotes you'll see that I haven't done any merges. It's a topic branch on top of your master. It looks like a github issue. Anyway - you shouldn't have any problems pulling to your local repository.\n. Forgive my clueless comment before. I didn't expect inheritedresources to be used with activeresource. I'll check the rails code for activeresource and see how to play nice with it. But maybe we will need to fall back to respond_to? and use \"scoped\" or \"all\" accordingly.\n. I've added a new pull request to work around this. It still needs some work done with tests, but you can track the progress there:\nhttps://github.com/josevalim/inherited_resources/pull/127\n. There's a fix for this in master, but it wasn't released to rubygems yet. You can try using the gem directly from github and I'll ask Jose to release a new version.\n. @ianha Jose released a new gem version. It should contain the fix you're looking for.\n. I will. I also have to investigate why the current tests produce errors. I've checked them only after sending the pull request.\n. You're definitely right. Thanks! I'll commit in a sec.\n. Fixed the commit and added the test.\n. ",
    "kelso": "Thank you, I was searching some method like set_collection_ivar. Thanks for mentioning!\n. ",
    "brodock": "This fix introduced a regression: InheritedResources with ActiveResources returns now: undefined method `scoped' for ModelName:Class\n. Thanks... just to clarify, as you asked me, I'm using with rails 3.0.4\n. ",
    "ianha": "I'm noticing i'm getting the error \"undefined method 'scoped'\" when trying to call UserSessionsContorller#index when using Authlogic.  Everything works fine for my other controllers.\nIs there something Inherited Resources needs that Authlogic for some reason is overriding or not exposing?\nI know it seems weird to index and view all your sessions, but I'm just hacking away to learn things and discovered this.\nThanks in advance!\n. ",
    "diegorv": "Sirupsen,\nMy model is just \"User\".\nIn my view i get \"User\" for  <%= debug(@controller.resource_class) %>\nWithout \"defaults :resource_class => User\", I can enter in http://localhost:3000/admin/users, but after fill the fields and submit the form, i get \"empty fields\" for all the validations.\nWith \"defaults :resource_class => User\", after submit, no problem with \"empty fields\"\n:/\n. ",
    "fschwahn": "Yes, I suspected that it could have side-effects. If it helps you fix the problem properly I'm satisfied!\n. ",
    "AskarZinurov": "Seems like there are no such key for belongs_to association. \n    ArgumentError (Unknown key(s): resource_name)\n. ",
    "samwgoldman": "I can confirm that resource_name does not exist.\n. ",
    "mdub": "The documentation for #belongs_to suggests that :collection_name is a valid option, so this appears to be a valid bug (in the doco, if nothing else).\nUnlike the Askar, my association is not a singleton:\nbelongs_to :program, :collection_name => \"components\"\nbut I cannot get :collection_name (or :resource_name) to work:\nundefined method `program_components' for #<Program:0x000001075f1268>\n. ",
    "abecciu": "+1 this doesn't work for me either.\n. ",
    "paradoja": "Exactly the same for me. :collection_name key does not work and resource_name is not a valid key.\nI'm also not using a singleton.\n. ",
    "voondo": "why closed ? I'm still encounter this bug\n. yes I do (with the current master version).\nExample : \nruby\nclass Sellers::Catalog::VariantsController < InheritedResources::Base\n  belongs_to :seller, collection_name: 'catalog' do\n    belongs_to :product\n  end\nend\nI get undefined method `products' for Seller.... But maybe I missed something ?\n. my bad... collection_param: 'catalog' should be in the product's belongs_to\nyou can re-close, sorry and thanks for your quick answer\n. :+1: \n. +1\n. ",
    "joelmoss": "Can you confirm that this still occurs in the latest version?\n. Fixed in #194 \n. This is a question about Rails, and not IR. But you should be able to call http://localhost:3000/mycontroller/1/edit.js\n. Duplicate of #174\n. Please check with 1.4.0. thx\n. @tmaier Is this still an issue?\n. Any chance you can update your PR please, so it merges cleanly? thx\n. has_scope is also a separate gem, so your issue may be best directed there.\n. Happy to accept a pull request @brodock ;)\n. There are a couple of solutions here (see above) so there is nothing more needed here. thx\n. Please reopen this issue with some code to show us what is happenning, along with any backtraces? thx\n. No. I'm saying I need more info from you in order to investigate further.\n. Can you try removing the #has_scope and self.responder lines and see if you have issues still?\n. @msan are you experiencing this issue?\n. OK no problem. FYI: IR is no longer deprecated and is now bad in active development. \n\nJoel Moss\nDevelop with Style at http://DevelopWithStyle.com\nCall me +44 7791 503309\nhttp://twitter.com/joelmoss\nAIM: joelkmoss\nSkype: joelmoss.info\nOn Thursday, 5 July 2012 at 10:35, Mauro wrote:\n\nI'm not using anymore inherited_resources.\nOn 5 July 2012 11:31, Joel Moss\n\nwrote:\n\n@msan are you experiencing this issue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/215#issuecomment-6774690\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/215#issuecomment-6774756\n. @atd I'm resurrecting inherited_resources. You wanna create a pull request for this?\n. I assume you have created a route for this new action. If you have, try this in your #confirm action...\n\nrender :text => resource.inspect\n. This should do the trick...\nclass ProjectsController < InheritedResources::Base\n  protected\n    def collection\n      @projects ||= end_of_association_chain.includes(:foobar)\n    end\nend\nPlease check the README for more.\n. Or that ;)\n. No, there is no option for this. This is really custom code that IR will not handle.\n. Duplicate of #174\n. Any chance you can write some tests for this please?\n. Please reopen this PR when you have tests. thx\n. This sounds like a problem with your view, and not the controller. IR has no regard for the view.\n. IR is no longer deprecated, so we won't be creating a migration guide to responders gem. But feel free to add one to the wiki.\n. Because I still use it, and intend to continue to support it now that I have been given push access.  \n\nJoel Moss\nDevelop with Style at http://DevelopWithStyle.com\nCall me +44 7791 503309\nhttp://twitter.com/joelmoss\nAIM: joelkmoss\nSkype: joelmoss.info\nOn Friday, 29 June 2012 at 21:47, Jan Limpens wrote:\n\nJoel Moss@28/062012:\n\nIR is no longer deprecated\n\nInteresting, why is that?\nAbra\u00e7os,\nJan\nJan Limpens\njan@limpens.com (mailto:jan@limpens.com)\nhttp://limpens.com\nCel: (11) 7909 6066\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/228#issuecomment-6677728\n. thx @atd \n. thx\n. Passing :back is not supported. But I'd be happy to accept a pull request if you would like to add support for it.\n. Sounds like this is an issue with Spree, and not IR. Sorry.\n. thx\n. This has already been released in v1.4 https://github.com/josevalim/inherited_resources/blob/master/CHANGELOG#L5\n. Even better, please fork and submit a pull request with these changes (along with tests) and we can release it as part of the next IR release.\n. Yes it should be backwards compatible for those wanting to use it with Rails 3 and the Strong Params gem  \n\n\nJoel Moss\nDevelop with Style at http://DevelopWithStyle.com\nCall me +44 7791 503309\nhttp://twitter.com/joelmoss\nAIM: joelkmoss\nSkype: joelmoss.info\nOn Monday, 24 December 2012 at 16:15, aaronchi wrote:\n\nSure. Just wanted to provide and interim solution for those who were asking. I can make a pull request with tests for Rails 4 as long as it doesn't need to be backwards compatible.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/josevalim/inherited_resources/issues/236#issuecomment-11662772).\n. Closing this in favour of using strong parameters. Happy to accept a PR to integrate that. thx\n. thx\n. Please upgrade to the latest version and check this again. You are using 1.2.2, but 1.3.1 is the latest. thx\n. Bumped and released 1.4.0!\n. Yes, I would agree with @heartsentwined. Think this is not within the scope of IR and can be easily done using end_of_association_chain.\n\nThanks anyway.\n. This is an issue with Mongoid.\n. Duplicate of #263 \n. We want to support Rails4, but we should not be requiring it until the final is released.\n. I'm not quite sure what this PR is acheiving? and why it is better.\n. Closing in absence of a reply to my question.\n. Please explain what this does and why it is needed? thx\n. Have you guys tried with IR 1.4, as that has support for Rails4 and strong params?\n. Please use master branch for now, which should work fine...\ngem 'inherited_resources', github: 'josevalim/inherited_resources'\n. You need to use: params.permit(:project => [:name, :description, :workspace_id])\n. Check your workspace model, as this is all about using Strong Params correctly, and nothing to do with IR.\n. Happy to accept a PR - if you fancy it ;)\n. Not possible, so your solution is the best solution.\n. If @prijutme4ty can make the PR merge cleanly, I'd be happy to merge it.\n. LGTM!\n. Resolved in #298 \n. Pretty sure you just answered your own question :wink: The code you included should do the trick.\n. That's a pretty specific request which doesn't really belong in IR. As you pointed out, it can already be done using a before_action.\n. Your controller knows nothing about any relationships that your models have, and shouldn't do.\nWhat do you have in your view?\n. I think you are expecting something of IR that it does not provide. When creating, IR simply accepts the params for the model and calls save. It is your model that determines if any relational data is created at that time.\n. We don't support Ruby anymore 1.8.\n. Yes, sorry guys. That is correct.\n. Tests please\n. Nice, but the default parent controller should still be ::ApplicationController in order to not break anything.\n. We don't want to make Rails 4 beta a requirement. Maybe when final is released we can do that. But a beta release should not be the required version.\n. ",
    "farnoy": "I know conventions, but I don't agree with that. Sometimes is just cleaner to use params[:object_name] than using params[:id], which is a string with name anyway, because you want to provide sweet url's. I understand your desicion, but that defaults to :id, so it wouldn't collide with anything.\n. ",
    "mickeyren": "oops nevermind, my bad, needed to put the controller inside the module\n. ",
    "AlexParamonov": "no tests, sorry\n. ",
    "jinleileiking": "using mongoid\nif you are not using this gem, this code works well:\n  def index\n    @messages = Message.all\nrespond_to do |format|\n  format.html # index.html.erb\n  format.xml  { render :xml => @messages.to_xml }\n  format.json { render :text => @messages.as_json }\nend\nend\n. ",
    "simonc": "Ok, my bad. Using :all, :only => ... is just a non sense...\nactions :new, :create, :destroy   works well.\nSorry :/\n. ",
    "sbwoodside": "Yes, I understand, that makes sense.\nI wonder if this is a common case, that people are using to_param or other methods for aliasing their objects in the URLs. Perhaps I could write a patch to inherited_resources that would allow me to specify the alias column? Where would I look for that code?\n. Thanks. Here's what I did:\n  def edit\n    @product = Product.find_by_upc(params['id'])\n    edit!\n  end\n\n. ",
    "uhees": "What if we had:\ndef create_resource(object)\n   get_resource_ivar ||\nset_resource_ivar(end_of_association_chain.send(:create,\nparams[resource_instance_name] || {}))\nend\nAm 22.03.2011 um 09:54 schrieb josevalim:\n\nYou are right, there is not much we can do here. It is rather an\nActiveRecord bug. :(\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/ \n133#comment_902100\n. \n",
    "martinstreicher": "Was there ever a fix in AR that permitted this to work?\n. ",
    "pirtlj": "did this ever get resolved, i have the same issue\n. ",
    "dbkbali": "Try this override in the inherited resource controller:\n protected\n    def resource\n      @activity ||= end_of_association_chain.find_by_slug(params[:id])\n    end\nIf you need further information suggest you look at lines 29 to 46 of lib/inherited_resources/base_helpers.rb file!\nI dont think this is a bug! or an issue that cannot already be addressed by an override\n. ",
    "AndreiMotinga": "dbkbali's solution almost worked for me, just had to add call to super, and only use this for models that need it. \ndef resource\n      if resource_class.included_modules.include?(Sluggify)\n        @activity ||= end_of_association_chain\n          .any_of({slug: params[:id]}, {id: params[:id]}).first\n      end\n      super\n    end \n. ",
    "DouweM": "I'm having the same problem -- has anyone found a solution since May?\n. Got this to work, and submitted it as pull request #194.\nYour code should work as \nclass TemplatesController < InheritedResources::Base\n  belongs_to :site do\n    belongs_to :theme, :singleton => true\n  end\nend\n. Add this to your TasksController class definition:\ndefaults :resource_class => Task\nYour problem is caused by inherited_resources not respecting subclasses of controllers, as described in #174.\n. Could you go to that URL in your browser, and share with us all of the InheritedResources related lines in the stack trace?\n. From the stack trace it looks like the error lies within Mongoid, not Inherited Resources. Could you see if the same problem occurs when using ActiveRecord?\n. ",
    "grandall": "+1\n. FWIW, I'm using the patch with CanCan and load_and_authorize_resource for each of the parents in the hierarchy without problem.\n. ",
    "evserykh": "Yes, it works :+1:\n. After applying this patch controller does not load parent :cry:\n. Oops, I was inattentive (forgave to write :singleton => true in defaults macros). \nCool patch, bro :cool:\n. :+1: \n. :+1:\n. :+1: default behavior is more expected\n. ",
    "karsthammer": "On 7/27/11 8:05 PM, josevalim wrote:\n\nHey mate, sorry for taking long to reply. Could you please rebase this pull request so I can merge it?\nHi Jose,\n\nNo problem, I will merge it in a couple of days.\nKarst Hammer\n. Hi Jose,\nI've updated the pr branch of my fork.\nKarst\n. ",
    "tmeinlschmidt": "sorry, was my fault - not loading 'rails.js', so the ajax wasn't used. Evth is OK\n. ",
    "strangeement": "That's it! ApplicationController is not reloaded on page reloads, the server has to be restarted. TIL!\nThanks.\n. It would be pretty helpful to add a note to the README meanwhile.\nAs I understand it (after some testing and debugging inside IR), permitted_params must not use params.require(:model).permit(...), but rather params.permit(...). When require is set, IR receives empty parameters from BaseHelpers.build_resource_params so the model is empty.\n. ",
    "jbbarth": "I confirm it works. Any plan to include it in a new release soon ?\n. ",
    "virtualfunction": "Not sure if you've worked round this, but I had to use this 2 days ago.\nIt should work fine as it is with nested model attributes.\nIn your views you need to use form.fields_for :association, :as => :association_attributes do |field| where \"association\" is replaced with the association name.\nIn some cases where you have a 'has_one' relation you might need to have some trickery ... for example:\nWhere a model has_many :addresses, :dependent => :destroy, but has_one :shipping_address, :class_name =>\u00a0'Address', :conditions => { :role => 'shipping' }, :dependent => :destroy (and maybe the same but for billing), you might need to do something like order.build_shipping_address unless order.shipping_address before your view is rendered.\n. Probably not the nicest work around but in base_helpers.rb I amended the collection method to:\nruby\ndef collection\n  get_collection_ivar || begin\n    chain = end_of_association_chain\n    use_scoped = chain.respond_to?(:scoped) && !ActiveRecord.const_defined?(:DeprecatedFinders)\n    items = case\n      when use_scoped then chain.scoped\n      when chain.is_a?(ActiveRecord::Relation) then chain\n      else chain.all\n    end\n    set_collection_ivar items\n  end\nend\n. ",
    "brentkirby": "This is a mongoid problem... see here: https://github.com/mongoid/mongoid/pull/1001\n. ",
    "tb": "Updated patch at https://github.com/tb/inherited_resources/commit/f4b2fca2993a0f6b6fc481376a24d36f875ea0d9\nEngineName::Admin::ArticlesController is conveted into resource_class = EngineName::Article\n. ",
    "ches": "I landed here from a search on how to handle mass assignment roles with inherited_resources, which as far as I can tell isn't documented anywhere yet, and this ticket was closed without reference. For sake of anyone else, the answer is a with_role :admin class method, introduced in 79d4c1e00f890bed3807c1fa50fc179eec97c810.\n. ",
    "amalagaura": "is there any more documentation on the with_role?  Doesn't setting it en masse defeat the purpose ?  Don't we want the controller to set this based on lets say the user accessing it?  Anyway for me, this will work since I have an admin controller which has a filter to only allow admins.\n. It should simply allow a block or proc.  I believe the block will have access to the current_user and the role for assignment can be assigned in that way. \n. ",
    "latortuga": "+1 for taking another look at this issue. I'm using this gem via the active_admin gem and there's not really a good way to support the mass assignment protection without with_role supporting a run-time check.\n. @igorbernstein that's actually exactly how I ended up solving the problem :)\n. ",
    "igorbernstein": "A bit late of an answer but:\nwhy not just override the methods: role_given? and as_role in base_helpers.rb\n. ",
    "somebody32": "ping, rails 3.1 is out\n. ",
    "njakobsen": "How are you supposed to use this? I have multiple users with different roles using the same controller to update models. Some attributes are protected and for admins only.\nI figured I'd make a before filter that runs the following\ndef set_role\n  with_role(current_user.role)\nend\nBut it looks like with_role is a class method you call on the controller. How do you apply this in a real use case?\n. ",
    "Zequez": "Awesome pull! I was about to do it myself until I saw the changelog! ^^\nThanks!\n. Note that if you override the as_role method, you must override role_given? to return true.\n. ",
    "jweir": "@njakobsen and anyone else trying to dynamically set the role\nyou might need to overwrite two instance methods:\ndef role_given?;end # true or false\n def as_role?;end # returns a hash {:as => ROLE}\nAn example with only an :admin role supported\n```\ndef role_given?\n  user.is_admin? \nend\ndef as_role\n  user.is_admin? ? {:as => :admin} : {}\nend\n```\n. ",
    "filipegiusti": "Ok, I will give another try in the next few days and let you know.\n. ",
    "lacco": "Any progress on this issue? It seems that inherited_resources causes the same problems at my application...\n. Just a quick note: I tried\nclass MyController < ApplicationController; inherit_resources; end\ninstead of\nclass MyController < InheritedResources::Base; end\nand that seems to work. I will have a closer look on this tomorrow...\n. ",
    "kirillrdy": "@lacco thanks, I'll give that a try\n. just an update,\nI did full bundle update in my sample app and the issue disappeared.\nHappy coding.\n. ",
    "indrekj": "same problem here\n. I think I found the problem.\n``` ruby\nHere you can use parent in the views\ndef show\n  show!\nend\n```\nruby\ndef show\n  resource\n  # now you can use parent too\nend\nruby\ndef show\n  parent # doesn't work, because it is not loaded. @parent_type is nil. It gets loaded after `resource` and after `show!`\nend\nI added a patch, but its code isn't very nice. Maybe you can get something out of it :).\n. rebased: https://github.com/josevalim/inherited_resources/pull/189\n. ",
    "jujudellago": "I have created a demo application to demonstrate the problem...\nhttps://github.com/jujudellago/Polymorphic-InheritedResources\n. I tried to apply the patch and now it works as expected !\nThank you so so so much !!! \n(I closed the pull request by mistake, I don't think I should be the one doing that ?  anyway the pathe solves my problem...)\n. ",
    "kevynlebouille": "But when i don't override create action, everything it's OK...\n. Seems to be related to ActiveAdmin gem what i use for my project. Sorry\n. ",
    "jcampb": "maybe a \"noob\" question Jose, but when you say this is a view concern, I assume you mean that we should create the nested object within the view rather than the controller. \nWould you mind elaborating on how that might look? \nI'm trying:\n    ...\n    f.simple_fields_for Profile.new, :as=> :profile_attributes  do\n    ...\nbut I get a AssociationTypeMismatch in the create action with ActiveSupport::HashWithIndifferentAccess\n. ",
    "kuraga": "@joelmoss @lda I think this feature is very useful! Isn't it implemented yet?..\nI have comments and attachments in my article. So I need to write\nruby\nclass ArticlesController < InheritedResources::Base\n  def new\n    @article = Article.new(params[:project])\n    @article.build_comment\n    5.times { @article.attachments.build }\n    new!\n  end\nend\n(where 5 is a constant parameter)\nIt's not good... Does this PR (by the way it's broken) build accept_nested_attributes_for's nested objects? What about  has_one and has_many?\n. @lda Sorry, but I don't understand. I use these variables to render a form (HTML).\nIs presentation layer a view? Don't we build associations for fields_for in a controller?\nI don't know where did I learn it. It was long time ago :) But regarding to ASCIIcasts #196:\nruby\n    def new  \n      @survey = Survey.new  \n      3.times { @survey.questions.build }  \n    end\n. @lda @josevalim But many people (and guides' authors) do this. Is this feature as such as the whole thing that inherited resources does - to make controllers shortly, isn't it?\nI think this feature may be optional... Assume build_nested macro...\n. @masterdezign but without this line I don't write new method at all.\n\nI'm not quite sure inherited_resources should handle models like this.\n\nWhy?\n. I'm sorry very much. I haven't read about polymorphic belongs_to...\n. ",
    "masterdezign": "@kuraga do you mean that this feature is needed to avoid just this line?\n3.times { @survey.questions.build }\nHowever, one may consider the following code in survey.rb model\ndef self.build\n  survey = self.new\n  3.times { survey.questions.build }  \n  survey\nend\nNow we just have in survey_controller.rb\ndef new  \n  @survey = Survey.build\n  new!\nend\nHow about that? I'm not quite sure inherited_resources should handle models like this.\n. @kuraga If one chooses any non-trivial model, this model is hard to be automated unless you come across a pattern. \nFor instance, Rails automated many dev tasks, however, inherited_resources provides even more automation since CRUD patterns are defined.\nThe question is, should we extend functionality, write something on top of software we already have (like inherited_resources on top of Rails), or return once again to OOP principles when we are not able to solve the problem in batch?\n. ",
    "richpeck": "As someone with this issue currently, I would recommend the OP's original request was to give a DRY way of handling the accepts_nested_attributes_for function. I'm building a \"resources_controller.rb\" controller - and it would be great if we just had to put \"build_nested_objects\" based on whether the relevant models had the accepts_nested_attributes_for function defined\n. ",
    "ep-wac": "with a class Admin::OxenController and an AttachmentsController belongs_to :ox, :page, :optional => true, and calling collection_url on a /admin/oxen/1/attachments/new request, I'm left with\nundefined method `ox_attachments_url' for #<AttachmentsController:0x007fd30095f120>\n@gaizka I tried this commit but I probably does not understand it 'enough' - it still throws the above error\n. This is perfect! Solved my STI problem - thx for sharing!\n. ",
    "boie0025": ":+1: \n. ",
    "ka8725": ":+1: \n. This code looks complicated because of nested rescue and doesn't contain the tests for changes. I've created other pull request which resolves this problem. I hope it will be merged sometime.\n. Rails doesn't prohibit to name model with Resource. The gem is extension for rails, so it should not break rails conventions\n. Ok, I see that this problem can be fixed with removing method. It means that if you have collision like this you always can delete generated helper methods from the controller:\nruby\nclass ResourcesController < InheritedResources::Base\n  # HACK: delete generated method by inherited resources.\n  # It needs to use real generated method for actual resource\n  remove_method :resource_path\nend\nSo it's not necessary to change inherited_resources code\n. ",
    "eloyesp": "Done that. thanks.\n. ",
    "futbolpal": "If anyone is curious, this seems to be working for me\n```\nmodule OptionalSingleton\n    extend ActiveSupport::Concern\nincluded do  \n    def index \n        super \n    end \nend\n\ndef collection \n    get_collection_ivar || begin \n        c = end_of_association_chain \n        if defined?(ActiveRecord::DeprecatedFinders)\n            set_collection_ivar(c.is_a?(ActiveRecord::Relation) ? c : c.all)\n        else\n            set_collection_ivar(c.respond_to?(:scoped) ? c.scoped : c.all) \n        end \n    end \nend\n\nend \n```\n. added this function also to help with the 'show' action\ndef resource \n    if parent.nil? \n        get_resource_ivar || set_resource_ivar(end_of_association_chain.send(method_for_find, params[:id]))\n    else\n        get_resource_ivar || set_resource_ivar(end_of_association_chain.send(resource_instance_name))\n    end \nend\n. ",
    "gutenye": "yes, I know the rails way.\ndef new\n   @user = User.new\n   render 'new', :layout => 'application'\nend\nBut, if  I use the rails way, then I can't use InheritedResources any more. So I want to know whether I can both use InheritedResources and  custom-layout.\n. thanks, that helps.\n. ",
    "jemmyw": "Actually this seems to be the same as #158\n. ",
    "ahacking": "Why was this closed? Its still broken?!! Subclasses should work without having to override defaults.\nThere is not even a mention of this in the README and its an important enough behaviour wart that it deserves to be covered on the front page where defaults is covered.\n. Avoid using Inherited resources helpers, they really are beyond broken, just use polymorphic_url/path\n. Yeah, route helpers are pretty much unusable with inherited resources.  They don't work with namespaced controllers either and I've had strange behavior when using STI that I had to work around too.\nDefine your own resource_url/collection_url/etc helpers and use polymorphic_url/path to get a sane result. \n. +1 Yep you have to set defaults in subclassed controllers.\nThe way inherited resources \"respond with dual blocks\" handing works, it is also very tricky to handle a particular response type in a subclass and have some default behaviour for everything else in your superclass.\nI've come to the conclusion Inherited Resources is hurting more that helping with so many of these kinds of issues, name-spaced controllers and url helpers are broken too, so by the time you work around and repair things its easier to just use regular ruby class inheritence to get most of the DRY benefit without the convoluted approach.\n. Similar issue here too. I found any namespaced controller cannot generate a sane url helper, it repeats the namespace twice and and you get the undefined error you report above.\n. No problem, I stopped using inherited_resources long ago because of the intractable issues with how it was implemented.\n. @cpuguy83 : You cant use super as that would require the custom action to exist in the inherited controller class. I am guessing you probably wouldn't want every custom action in a specific controller being added to the inherited controller class.\nYou can however use something! since that is an alias method to the generated method which custom_action creates, eg:\n``` ruby\ncustom_action resource: :something\ndef something\n  something! do\n    #stuff\n  end\nend\n```\nor if your custom action is 'update like': \n``` ruby\ncustom_action resource: :something\ndef something\n  #stuff\n  update! do\n    #stuff\n  end\nend\n```\nIMO the use of the super idiom is a bad idea.  I haven't tried it, but using super may not even work if you use the inherit_resources  mix-in approach as opposed to using real class inheritance.\n. ",
    "hrdwdmrbl": "https://github.com/josevalim/inherited_resources/issues/38\nYou must stub the errors. For some reason errors are not being set or read or something, so just stub them and you're get the proper rendering.\n. Better solution:\nhas_scope :foobar, :only => :index, :type => :boolean, :default => true\nMODEL.rb\nscope :foobar, includes(:foobar)\n. > actions will only tell if the action will be inherited from the inherited controller\nBut clearly other actions, like the show action, are being inherited from InheritedResources::Base. Perhaps allow an argument on the end like belongs_to :user, :optional => true, actions: [:index]\n. ",
    "kb": "I tried to duplicate this on a small generic application and everything seems to work. Therefore the issue must be contained to this the specific application I'm seeing the issue on. I'm going to close this issue as I don't believe its something within the Inherited Resources code base at the moment.\n. Yes. If I remember correctly. I believe I just patched it in my application code and never submitted a patch back to rails.\nI will try to find the code for you.\n. I just quickly glanced through the issues on the rails repo and it appears a fix for this is in 3.2, however if you are using 3.1.x try patching rails with the following code.\nmodule ActionController #:nodoc:\n  class Responder\n    # All other formats follow the procedure below. First we try to render a\n    # template, if the template is not available, we verify if the resource\n    # responds to :to_format and display it.\n    #\n    def to_format\n      if get? || !has_errors? || !@default_response.nil?\n        default_render\n      else\n        display_errors\n      end\n    rescue ActionView::MissingTemplate => e\n      api_behavior(e)\n    end\n  end\nend\n. ",
    "lmarburger": "Out of curiosity, did you ever track down the cause of this issue? I happened across this exact behavior during a Rails 3.0.9 to 3.1.4 upgrade.\n. Thanks, @kb. I created a similar monkeypatch but I didn't look closely enough to see that this was changed in 3.2. Good to know.\n. ",
    "nicolasblanco": "What? You're using Ruby 1.9.3 with Rails 2 ? That should be forbidden :beer: !\n. ",
    "jescalante": "This is not from inherited_resources, this is from Rails 2.3.14 with Ruby 1.9.3-p0. Since Rails 2.3.x is not fully supported now I don't know if the core team would be able to fix this (http://groups.google.com/group/rubyonrails-core/browse_thread/thread/81be70a119260e59).\nYou can hack the solution by adding the file with the module asked, e.g. base_helper.rb, that's the way I did it, but I still looking for the real solution.\nGreetings.\n. I found the problem! I forked rails and request a pull (https://github.com/rails/rails/pull/3745), but they rejected it because 2.3 is no longer mantained... :-/\nHowever if you want, you can fork my repo https://github.com/jescalante/rails/tree/patch-1\nHope it works!\n. Hey, I found a less intrusive solution, you can use the original rails, but adding a custom initializer (in config/initializers name it as you want) with a single line: \nMissingSourceFile::REGEXPS << [/^cannot load such file -- (.+)$/i, 1] \nThat should do the trick.\n. ",
    "jmcervera": "Thank you for the information.\nI have downgraded to ruby 1.9.2 and I will be following the issue.\n2011/11/22 jescalante <\nreply@reply.github.com\n\nThis is not from inherited_resources, this is from Rails 2.3.14 with Ruby\n1.9.3-p0. Since Rails 2.3.x is not fully supported now I don't know if the\ncore team would be able to fix this (\nhttp://groups.google.com/group/rubyonrails-core/browse_thread/thread/81be70a119260e59\n).\nYou can hack the solution by adding the file with the module asked, e.g.\nbase_helper.rb, that's the way I did it, but I still looking for the real\nsolution.\nGreetings.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/178#issuecomment-2835922\n. Hi,\nThank you very much.\nI'll try your patch.\n\nJuanma Cervera\n2011/11/24 jescalante <\nreply@reply.github.com\n\nI found the problem! I forked rails and request a pull (\nhttps://github.com/rails/rails/pull/3745), but they rejected it because\n2.3 is no longer mantained... :-/\nHowever if you want, you can fork my repo\nhttps://github.com/jescalante/rails/tree/patch-1\nHope it works!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/178#issuecomment-2866839\n. Much better\nThanks\n\n2011/11/25 jescalante <\nreply@reply.github.com\n\nHey, I found a less intrusive solution, you can use the original rails,\nbut adding a custom initializer (in config/initializers name it as you\nwant) with a single line:\nMissingSourceFile::REGEXPS << [/^cannot load such file -- (.+)$/i, 1]\nThat should do the trick.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/178#issuecomment-2875917\n. \n",
    "codezomb": "The below did what I needed.\nruby\nclass SetsController < InheritedResources::Base\n  belongs_to :parent\n  defaults :resource_class => Collection, :collection_name => 'collections', :instance_name => 'collection' \nend\n. ",
    "jtushman": "Ok figured it out.\nThe AWS/SW gem overwrites Module#const_missing -- and messes with things if you class ends in 'Bucket'.  Man, that was a great use of 6 hrs.  No idea why it only happens when coupled with InheritedResources, but that clearly is the root of the problem.\n. ",
    "derekprior": "I'll give it a shot. I'm trying to wrap my head around what respond_with_dual_blocks is actually doing.\n. Closing as it seems other have opened this issue in the past with the response that something should be added to errors\n. ",
    "marcelloma": "Oh, I should trade the split capitalize join for camelize(duh)... I will refactor, rebase and do another request tomorrow...\n. Closing to do another request.\n. ",
    "knewter": "+1, can this get merged?\n. or +1 on this one :)\n. ",
    "rahult": "+1, for this to be merged\n. ",
    "holacarol": "+1\nSame problem. It even doesn't work with the create! do |format|. Anything inside format.json (for example) is not executed.\n. ",
    "amaierhofer": "Strange .. the sample app only contains what is generated by rails. The bundler related section looks like this \n```\nif defined?(Bundler)\n  # If you precompile assets before deploying to production, use this line\n  Bundler.require(*Rails.groups(:assets => %w(development test)))\n  # If you want your assets lazily compiled in production, use this line\n  # Bundler.require(:default, :assets, Rails.env)\nend\n```\n. ",
    "codez": "As far as I see, there is a cyclic dependency when inherit_resources is called from ApplicationController (or if ApplicationController inherits from InheritedResources), as InheritedResources::Base inherits from ApplicationController. With class reloading in the development environment, this does not seem to matter, but it crashes in production. \nSo InheritedResources should probably not be used in ApplicationController directly.\n. ",
    "mdi": "+1\n. ",
    "mhfs": "@josevalim anything I can do to help this get merged? just faced this same issue.\n. Just confirmed the fix works for my scenario, the branch is 'rebaseble' to master and the tests pass. Hope it helps.\n. Thank you!\n. ",
    "prikha": "Please post any temporary solution for this unless there no way out...\n. ",
    "juniorz": "That is what I made: https://github.com/juniorz/inherited_resources/commit/9b51bc3cf588cd07a67b0dc719fcd075efcd16ef\nBut, it looks like this gem is \"deprecated\" and will no longer be updated...\n. @rafaelfranca any update on this?\n. ",
    "panyamin": "+1 this fix is very needed.\nWorks on mountable engine (rails 4.0.0)\n. ",
    "pusewicz": ":+1:\n. ",
    "geneshuman": "Have you resolved this issue?  I'm running into the exact same problem.\n. ",
    "ryandrake08": "I am experiencing the same issue. The only work-around I have found is to simply disable the tests. Interestingly, everything seems to work on the actual site, i.e. the \"edit\" template does get rendered.\nYet, response.should render_template(\"edit\") (for update) and response.should render_template(\"new\") (for create) tests fail.\n. ",
    "rafaels": "I think I figured out why it is happening. The problem is we are stubbing only the save method and the controller will use respond_with to handle the response.\nThe catch is that respond_with uses to_format, that will check if get? || !has_errors? || response_overridden?. If true, respond with default_renderer, else, display errors.\nThe request isn't a get, neither has_errors, and was not overriden. So, it will try to call url_for with our object (an instance of Encounter) that was not saved, but has no errors and persisted? is false.\nI think it will, somehow, be passed to url_for, that relies on the class name. Encounter is not scoped, and url_for(Encouter.first) will try to call encouter_url(@encounter.id)\nA solution is to stub Encouter.any_instance.stub(:errors).and_return('whatever').\nThe key concept is that respond_with relies on object errors, instead of the return of save.\n. ",
    "jenkek": ":+1: \n. ",
    "seongreen": "+1\n. ",
    "jpwynn": "Though that did not work. I tried adding \nconfig.app_generators.scaffold_controller = :scaffold_controller\nto config/application.rb, then to config/environments/development.rb. In both cases, running 'rails g scaffold' produced the same empty controller with a class based on InheritedResources::Base instead of ApplicationController\n. here is something that does work, although it would be much better to change the setting once in a config file per your suggestion, if we can find the right setting. But for a manual override, this works:\nrails g scaffold Foobar name:string -c=scaffold_controller\nIf anyone knows how to revert to scaffold_controller being the default, please chime in.\n. I have rails 3.1.3, IR gem 1.2.2, activeadmin gem 0.3.4, running on windows xp sp3, doing everything via bash shell. rake is 0.8.7.\n. ",
    "jontonsoup": "Bump. I am having the same issue. \n. Thanks. I was using rails 3.1.x. Upgrading fixed it. \n. ",
    "zetachang": "It seemed fixed now. Using rails 3.2.1 , activeadmin 0.4.0. Add the line to application.rb got it fixed.\n. ",
    "rdetert": "In Rails 4 this still works. \n. Personally, I'm not digging it. Too DRY is too hard to read and can be kind of cumbersome. It works okay for simple cases though.\n. Does the file signup/application_controller.rb exist?\n. ",
    "AlexVentura": "Hey guys, I'm using Rails 5.2 and ruby 2.5.1 and when running the scaffold generator like rails g scaffold agreement folio customer:references. I still getting my controller inheriting from InheritedResources::Base.\nDoes this fix config.app_generators.scaffold_controller = :scaffold_controller will be part of the RubyGems version for ActiveAdmin?\nOr is it better to use the AA git version?. ",
    "Moriort": "\nHola chicos, estoy usando Rails 5.2 y ruby 2.5.1 y cuando ejecuto el generador de andamios como rails g scaffold agreement folio customer:references. Todav\u00eda tengo mi controlador heredado de InheritedResources::Base.\n\u00bfEsta soluci\u00f3n config.app_generators.scaffold_controller = :scaffold_controllerser\u00e1 parte de la versi\u00f3n de RubyGems para ActiveAdmin? \n\u00bfO es mejor usar la versi\u00f3n git AA?\n\nYes.. ",
    "jachenry": "I was able to find a workaround thanks to this post. The alternative to using the helper with the action prepended is passing the action as an option to the resource_(path/url) helper.  \nresource_path( prototype, :action => :unarchive)\nThis is inconsistent with non polymorphic routes but works for now.\n. hold off on this. just pulled locally and tests are failing. I'd still like to get your opinion on my changes.  Maybe you can think of a better solution to the defect.\n. going to close this patch because it breaks too many tests.  I'll rethink a fix.\n. ",
    "tobyhinloopen": "THANKS jachenry. That solved the problem. I had exactly this bug. It occurs when you add custom actions with any kind of polymorhic relation in the controller. (like belongs_to :foo, optional: true)\n. ",
    "ghost": "Hmmm, it doesn't work on ActionController either. I've reproduced it on https://github.com/lecky-ambit/episode-196, which is a fork from Ryan Bates Episode-196 of Nested Model Form...\n. Reported issue on Rails. https://github.com/rails/rails/issues/4839. I think it's an issue on Rails ActionController\n. Well, In my index i have\n```\n- if @organizations.blank?\n  .jumbotron\n    %h3 You Don't Have Any Organizations!\n- else\n  = render 'organizations/organizations'\nwhich loads a partial:\n%table.table.table-bordered{ :id => 'organizations' }\n  %thead\n    %tr\n      %th Name\n  %tbody\n    - @organizations.each do |organization|\n      %tr\n        %td\n          %a{ :href => organization_path(organization) }= organization.name\n        %td\n          %a.pull-right{ :href => edit_organization_path(organization) } Edit\n= paginate @organizations\n```\nI'm just concerned because the joining table remains blank no matter how many organizations are created.\n. ",
    "coneybeare": "I have found that making my ApiController superclass back into an ApplicationController subclass, then adding inherit_resources to the Api::FooControllers cases it to work. Is this the solution to the problem, or just a workaround?\n. ",
    "gevans": "I noticed that extending a controller within the same module seems to fix the problem as well. Creating an Api::BaseController with inherit_resources and extending it for controllers in that namespace/module DRYs it up a little.\n. ",
    "ClayShentrup": "Are you saying you tried the most basic implementation of inheritance as I described, and you couldn't reproduce the bug??\n. class EmployeesController < InheritedResources::Base\nend\nIf you do a create on a new employee, whose type is \"Manager\" (Single Table Inheritance), then it will create an instance of Manager, and will try to redirect to to manager_path instead of employee_path. Which will of course fail, as one would expect. But if you do an XHR request, there's no redirect needed, so it doesn't need to compute the redirect path. So XHR should work fine, but it doesn't. It seems pretty probable to me that the problem is, it's unconditionally computing the redirect path.\n. ",
    "mcfilib": "Did you have any luck with this? I'm having similar issues.\n. ",
    "maxiperezunlam": "+1 \nThis is my backtrace\nUncaught exception: undefined method `generators' for #<Rails::Railtie::Configuration:0x000000045aba00>\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/railties-3.2.1/lib/rails/railtie/configuration.rb:85:in `method_missing'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid/railtie.rb:13:in `<class:Railtie>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid/railtie.rb:11:in `<module:Mongoid>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid/railtie.rb:10:in `<module:Rails>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid/railtie.rb:9:in `<top (required)>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid.rb:89:in `require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/mongoid-2.0.0.beta.19/lib/mongoid.rb:89:in `<top (required)>'\n    /usr/local/rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n    /usr/local/rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler/runtime.rb:68:in `block (2 levels) in require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler/runtime.rb:66:in `each'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler/runtime.rb:66:in `block in require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler/runtime.rb:55:in `each'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler/runtime.rb:55:in `require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.22/lib/bundler.rb:122:in `require'\n    /home/maximiliano/Proyectos/mongoblog/config/application.rb:13:in `<top (required)>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/railties-3.2.1/lib/rails/commands.rb:53:in `require'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/railties-3.2.1/lib/rails/commands.rb:53:in `block in <top (required)>'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/railties-3.2.1/lib/rails/commands.rb:50:in `tap'\n    /usr/local/rvm/gems/ruby-1.9.3-p125@mongoblog1.9.3/gems/railties-3.2.1/lib/rails/commands.rb:50:in `<top (required)>'\n    /home/maximiliano/Proyectos/mongoblog/script/rails:6:in `require'\n    /home/maximiliano/Proyectos/mongoblog/script/rails:6:in `<top (required)>'\n. ",
    "tatiC": "@carlosantoniodasilva and @rafaelfranca just tried with the new release (1.3.1)\nIt's working now! :) Thanks! \nSorry about the delay ;)\n. ",
    "MSch": "@Bazai having the same issue, did you figure out what went wrong?\n. ",
    "Bazai": "@MSch look first and only answer here, it explains everything:\nhttp://stackoverflow.com/questions/9363807/rails-3-inherited-resources-ignores-defaults-setting\n. ",
    "salzig": "+1\n. ",
    "ineu": "Thank you! Looking forward for 3.2.3.\n. ",
    "joevandyk": "man, i just found inherited_resources like two weeks ago and it's already deprecated.  I can't keep up. :)\n. Time to reopen this? \n. ",
    "msan": "On 12 March 2012 15:20, Rafael Mendon\u00e7a Fran\u00e7a\nreply@reply.github.com\nwrote:\n\nPlease put in the header of your it.yml\n``` yaml\nencoding: utf-8\n```\nThe header correspond to the top of the file?\n\nencoding: utf-8\nit:\n  flash:\n    actions:\n      create:\n        notice: \"%{resource_name} \u00e8 stato creato con successo.\"\n      update:\n        notice: \"%{resource_name} \u00e8 stato modificato con successo.\"\n. On 12 March 2012 17:53, Rafael Mendon\u00e7a Fran\u00e7a\nreply@reply.github.com\nwrote:\n\nYeah. This solved the issue?\n\nNo it does not solve.\nThe strange thing is that the problem raises if in the view I have\nspecial characters like \"\u00e0\", \"\u20ac\", etc.\nThat's what happens:\nI have a view with those special characters.\nThat view make no problems, I can display it and I don't have\nincompatible character problems.\nBut when I update or create the model and the action redisplay the\nview It raises the problem.\nIf I put the notice inside the create or update action there are no\nproblems, but if I put the notice in the locales/it.yml file it does\nnot work.\n. On 12 March 2012 20:49, Rafael Mendon\u00e7a Fran\u00e7a\nreply@reply.github.com\nwrote:\n\nI'm reopening this issue but, as you can see in the README, we are deprecating this gem. So if you want to open a pull request or maybe have interest to maintain this gem please let us know.\n\nSorry I had not read the README, so you suggest only use the responder gem?\n. On 13 March 2012 09:19, Mauro mrsanna1@gmail.com wrote:\n\nOn 12 March 2012 20:49, Rafael Mendon\u00e7a Fran\u00e7a\nreply@reply.github.com\nwrote:\n\nI'm reopening this issue but, as you can see in the README, we are deprecating this gem. So if you want to open a pull request or maybe have interest to maintain this gem please let us know.\n\nSorry I had not read the README, so you suggest only use the responder gem?\n\nNot using inherited resources I don't have anymore collection_url,\nresource_url, etc.\nWhat solution do you adopt to avoid the repetition of code in simple\ncrud applications?\n. I'm not using anymore inherited_resources.\nOn 5 July 2012 11:31, Joel Moss\nreply@reply.github.com\nwrote:\n\n@msan are you experiencing this issue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/josevalim/inherited_resources/issues/215#issuecomment-6774690\n. \n",
    "atd": "I'd love to, but I can't :-(\nThanks for your work\n. Did you mean this way?\n. +1\nI also expected the subclasses controllers to just work\nresource_class is filled up in https://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/class_methods.rb#L291\n. ",
    "cj": "ah looks like I just needed to do:\nen:\n  flash:\n    actions:\n      create:\n        alert: \"There were issues creating the %{resource_name}.\"\nStrange this isn't there by default.\n. ",
    "chandresh": "Some success, I am able to do the create! with\n@user = User.new(params[:user], :without_protection => true)\ncreate!\nTrying to find out how to do it for update!\n. For update!, I have to use:\n@user = User.find(params[:id])\n  @user.assign_attributes(params[:user], :without_protection => true)\n  update!\nIs there a shortcut? \n. Seems there is no shortcut :)\n. ",
    "giorgenes": "wrong request, sorry.\n. ",
    "nestegg": "This change breaks my tests.  I can't find anywhere that resource_params ever gets called more than once, so I can't see the value in memoizing.  I rewrote my tests to get around this, but this change seems dangerous.\n. ",
    "cutalion": "This works and looks fine.\n``` ruby\ndef destroy\n  destroy! { :back }\nend\ndef back_url\n  request.referer\nend\n```\n. ",
    "chengdh": "this cancan issule ,not inherited_resources issule\n. ",
    "urkle": "Any idea when new release will be made w/ this functionality included?\n. ",
    "jaredbrown": "I too would love to see this pushed out as a new gem release.\n. Thank you, I realized that after I commented.  I didn't see a tag in your repo for 1.4, which is why I was initially confused.\n. ",
    "khelben": "You need to overwrite the #resource_params method in your controller.\nOne gotcha though, you'll need to wrap the result in an array like this:\nSecond gotcha, IR also calls this method on get #new where the params most off the time is empty and would raise an ParamsRequiredError.\nruby\ndef resource_params\n    return [] if request.get?\n    [ params.require(:employee).permit(:name, :age) ]\nend\nedit: update example, thx to @btucker\nedit2: thx @anlek  for reminding me of the get #new issue\n. @btucker thx for spotting, updated the example\n. That means that your params hash is missing the required ':page' key.\n. You're right. You've hit something I've encountered myself.\nThe thing is: inherited resources also calls #resource_params on a new action, where most of the times the params is empty.\nI've updated the example with some more explanation\n. ",
    "btucker": "@khelben I believe the method name in your example above should be resource_params.\n. ",
    "anlek": "This seems to raise a Required parameter missing: page on the new action when I have this set:\nruby\n  def resource_params\n    [ params.require(:page).permit(:title, :permalink, :content) ]\n  end\n. Understood, but the 'new' action doesn't require the params hash at all. (unless it fail validation)\n. ",
    "xxswingxx": "Hi, I've been trying to use inherited resources with the strong_parameters gem as seen here.\nIt almost works, the only problem is that when the parameters reach the sanitize_for_mass_assignmentmethod from ActiveModel::ForbiddenAttributesProtection it is converted from ActionController::Parameters to Hash, so the method ignores it because it doesn't respond to the method permit. This causes that it allows mass assignment for unpermitted attributes if they are passed as a Hash instead an ActionController::Parameters. Is anyone having the same issue?\nEDIT: Nevermind, it was a problem with mongoid and how it passes multiparameter attributes to the method. I've already fixed it.\n. ",
    "emilford": "@aaronchi,\nI was getting the error \"undefined method get\" and had to change request.get to request.get? in the build_resource method. \n~~I am also still working on getting the permitted parameters working.  Currently updates aren't being made on the resource, despite the attribute being in the list.~~  This works.  The problem was in my code.\n. ",
    "taavo": "Note that @aaronchi's patch above only works if you're using params.require. This patch may be more versatile:\nmodule InheritedResources\n  module BaseHelpers\n    protected\n      def resource_params\n        parameters = respond_to?(:permitted_params) ? permitted_params : params\n        rparams = [parameters[resource_request_name] || parameters[resource_instance_name] || {}]\n        rparams << as_role if role_given?\n        rparams\n      end\n  end\nend\nThen set what parameters are permitted in the controller, in a method named permitted_params:\ndef permitted_params\n  params.permit(:other_parameter, :group => [:name, :description])\nend\n(It seems like a strong_parameters api problem that permit stays at the top of the params hash, but require drills down a level, leaving no way to require one parameter but not the other. Maybe they'll sort that out eventually.)\n. Without #require, strong parameters still prohibits fields other than those marked by #permit, which means someone can update User#email without being able to update User#is_admin, which is most of the point of strong_parameters.\nI still believe that #require should throw an error if the indicated parameter isn't present, but not drill down, but that's an issue for the strong_parameters team. It looks like this came up already, and someone may have come up with a plausible solution, but it's since been reverted.\n. I've come to the conclusion that the API I used in #260 was stupid, and this one is much better. I'll help out if my schedule opens up.\n. ",
    "jodigiordano": "+1. @rubysolo the documentation of strong parameters states that Using a private method to encapsulate the permissible parameters is just a good pattern, so what do you think of respond_to?(whitelist_method, true) instead of respond_to?(whitelist_method) ?\n. ",
    "rubysolo": ":+1: I'm down with that.\n. You're right, this is not Strong Parameters proper, but the ability to do whitelisting in the controller similarly to SP.  This patch should probably be revisited now that SP is more fully-baked and will be included in Rails 4.\n. ",
    "garysweaver": "Sorry if this is way off-topic, but anyone have any experience with using InheritedResources with ActiveAdmin? @latortuga said that this pull request was adding support for StrongParameters in InheritedResources, but looking at it again, I don't see any calls to permit here and it appears to just be adding similar behavior to SP. Is support for SP being added to IR, and if it is, will it support the ability to permit all parameters regardless of whether they relate to actual methods (attribute or otherwise), because that is something that AA needs, because of some password field related behavior it provides, as discussed here were a patch for SP in AA was being discussed (and AA uses IR heavily, so it would be better to do in IR): https://github.com/gregbell/active_admin/issues/1731 Thanks.\n. Just saw: https://github.com/josevalim/inherited_resources/issues/236 - sorry for interrupting. Looks like calls to SP's permits are not getting added but that is something each person can put in themselves.\n. Yeah, since they are axing mass assignment security and SP isn't optional, we're going ahead and using Strong Parameters with Rails 3.2.8 (and ActiveAdmin which uses InheritedResources) and hitting pain head-on: https://github.com/rails/strong_parameters\n. ",
    "mariszin": "Found a solution - You must give full block for this to work\nruby\n  def create\n    create! do |format|\n      format.html { redirect_to edit_resource_path }\n    end\n  end\n. ",
    "tsemana": "@kuraga, could you let me know how you resolved using the belongs_to call with a has_one association? I am running into the same problem. I see you mention polymorphic belongs_to, but I don't have additional models that need the same association.\n. ",
    "jpmckinney": "Yeah, inherited_resources doesn't work well with glob routes either.\n. ",
    "dim": "Any news? This is really quite an annoying bug, even if not many other people seem to be affected by it.\n. Any news? Would love to see this merged.\n. That didn't really do the trick. Calling Model.all returns an ActiveRecord::Relation, while calling parent.children.all returns an Array, which causes inconsistencies down the line. I also filed a ticket with Rails (https://github.com/rails/rails/issues/11310), but I think we may need a fix in inherited resources too, how about:\nruby\ndef collection\n  get_collection_ivar || begin\n    c = end_of_association_chain\n    s = if c.respond_to?(:scoped) && !defined?(ActiveRecord::DeprecatedFinders)\n      c.scoped\n    elsif c.is_a?(ActiveRecord::Relation)\n      c\n    else\n      c.all\n    end\n    set_collection_ivar(s)\n  end\nend\n. I tried to submit a pull request for rails, but it was rejected: https://github.com/rails/rails/issues/11310. Seems like this needs to be fixed in inherited_resources\n. ",
    "bashmish": "+1\nI have STI with three levels of inheritance and controllers for the last two of them.\nresource_class is broken in the second case as it has been already set on the previous level.\nSimply change\nself.resource_class ||= begin\nin first priority into\nself.resource_class = begin\nand everything works as expected.\nIs this pull request be merged sometime? Or some exploration needed?\n. ",
    "wdiechmann": "Me stating that ' if I make a small change' actually means that if I remove the \"messages\" in the [ \"messages\", #Messages::DistributionList id: nil, ox_id: nil, ....> ] then the \nbuild_named_route_call(record_or_hash_or_array, inflection, options)\ndoes what I'd like it to....\nI don't know where that 'extra' \"messages\" in the record_or_hash_or_array comes from, but I'd wish I could just take it out- but I can't :(\n. Like I state in the header to this issue - I came blazing guns in the door, not knowing my way to the bar :(\n. ",
    "sodabrew": "I was under the impression that the first-time creation of an object could set the readonly keys?\n. You dropped support on a micro release. That is irresponsible at a minimum.\n. ",
    "heartsentwined": "Does IR plan to support batch actions?\nUse case will primary be in developing APIs, to reduce round-trips by performing batch requests in CRUD actions.\nIf so, I can help refactor the codebase.\n. ",
    "elfassy": "+1\n. ``` ruby\n  private\ndef self.inherited(base)\n    base.resource_class = nil\n    super(base)\n  end\n```\nit's only called once on app load\n. ",
    "jd-erreape": "The issue is old but maybe this will works for closing it\nI think that what you're trying to do is wrong. \nThe option :collection_name for the :belongs_to is being applied over :user, for your requirements to work you need to use the :collection_name option with the :defaults\nruby\nclass Storage::ItemsController < InheritedResources::Base\n  belongs_to :user\n  defaults :collection_name: :storage_items\nend\nThis is the test that passes\n``` ruby\nrequire File.expand_path('test_helper', File.dirname(FILE))\nclass User\n  extend ActiveModel::Naming\nend\nmodule Storage\nend\nclass Storage::ItemsController < InheritedResources::Base\n  belongs_to :user\n  defaults :collection_name => :storage_items\nend\nclass BelongsToOptionsTest < ActionController::TestCase\n  tests Storage::ItemsController\ndef setup\n    # make public so we can test it\n    Storage::ItemsController.send(:public, *Storage::ItemsController.protected_instance_methods)\n  end\ndef test_that_id_got_the_collection_name_right\n    assert_equal :storage_items, @controller.resources_configuration[:self][:collection_name]\n  end\nend\n```\nHope it helps! :)\n. ",
    "stephenprater": "discovered that the patch does not address the (admittedly a little bizzare) case of multiply nested singleton resources.  fixed it.\n. ",
    "josemarluedke": ":+1:\n. ",
    "brendon": "So weird how something like this is merged just when I needed it! :)\nIt might pay to add in the README that the permitted_params method should be protected and not private as otherwise it won't be found. The strong_parameters gem recommends a pattern whereby the allowed parameters are built in a private method.\nAlternatively the check for the method could include the private space?\n. You're correct @danbob. I just checked my code and my permitted_params is in the public space too. I must have figured that out, changed it, and forgot about my comment here.\nWait, actually, I've noticed that I have it in the public space in my Active Admin controller block, but in my main app I was able to put it in the protected space and it works fine. You don't happen to be using Active Admin?\n. That's fairly strange. But yes, it seems more logical to allow for the recommended SP technique.\n. I've ended up doing:\n``` ruby\n  def create\n    create! { admin_users_path }\n  end\ndef update\n    update! { admin_users_path }\n  end\ndef destroy\n    destroy! { admin_users_path }\n  end\n```\nBut it seems like a lot of repetition?\n. Thanks Joel :)\nOn Fri, Jul 26, 2013 at 7:57 AM, Joel Moss notifications@github.com wrote:\n\nNot possible, so your solution is the best solution.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/josevalim/inherited_resources/issues/284#issuecomment-21580250\n.\n. Lol, I forgot all about this :)\n. It's all good :) I abandoned the project I was inherited_resources for, but I have fond memories of using it otherwise.\n. \n",
    "danbob": "Actually, it doesn't seem to work even when permitted_params is only protected. It isn't being called by IR in my app unless I move it to public.\n. Nope, just IR and CanCan. I second the suggestion to allow it to live in private or at least protected, so I can keep all my non-action controller methods separate.\n. ",
    "VorontsovIE": "Are there any reasons to use strong parameters without #require? May be this behavior should be fixed while not so much people use inherited_resources with rails 4?\nI think it can be done simultaneously with sticking to standard rails 4 #{resource_name}_params method naming because it reduces number of error and simplified integration with such libraries as cancan and others. We can generate to methods: #permitted_params which works in exactly the same way it works now and #{resource_name}_params which overrides #permitted_params and allows params#require to be used.\n. @taavo I only say that it's simplier to allow one use both methods and use strong parameters exactly the same way they do it usually. When you refactor code to use inherited_resources - it's too simple to forget changing allowed parameters to use permitted_resource instead of, say user_params and remove #permit call in preference of deeper nesting which was working before. I just can't understand which profits this way of handling gives us comparing to default rails 4 way of handling params. The only benefit I can see - is that this method named the same for all controllers, but we can do both methods: #user_params (defined by user) and #permitted_params (defined and used in the gem) which will just delegate to #user_params if this method exists or fallback to params[#{resource_name}] (or probably raise an exception) if not.\nMy first concern here is compatibility of code. Because user won't need to change anything in rails4 scaffold code and in old code using inherited_resources too (permitted_params is just already redefined by the user and thus not trying to fallback to user_params). Also cancan and other libraries can rely on rails4 naming when trying to work with strong parameters.\nI'll send a pull request soon to explain my idea with code more explicitly.\n. @taavo Sent a pull request: https://github.com/josevalim/inherited_resources/pull/286\n. It just pass unsplatted parameters separate from options. x=['a','b']; f(*x,'c') does the same as x=['a','b']; f(*(x<<'c')) if you don't care about value of x. Because arguments for unsplatting (options and result of with_chain) are temporary arrays in your case, this modifications makes nothing except increasing readability.\n. @travisp Thank you for a response! Actually I didn't tested it with strong_parameters, and did only testing with stubs. I'll try to fix it.\n. @travisp Can you please show code which caused the failure? In my tests everything works.\n. @travisp Understood the problem. I believe, it's due to inherited_resources using strong_parameter sanitization on new action, while it's not a common practice. I'll try to distinguish new and create action when call #build_resource\n. @travisp @joelmoss Tried to resolve issue with new action by rescuing an exception. More detailed explanation in a comment before #permitted_params method. Is it acceptable?\nEverybody, sorry for such a long delay.\n. @dougo I think it was. I'll close the issue\n. Any comments on this feature?\n. ",
    "corny": "@josevalim Are there any plans to release an new version, or are you looking for a new maintainer?\n. Oh thanks, I failed to notice the second call.\n. ",
    "wyaeld": "+1, ran into this yesterday.  Is there a reason for not publishing a new version of the gem?\n. ",
    "spectator": "Oh well, you can reopen it when Rails 4 is released.\n. @joevandyk \nI guess you can use master branch if you need Rails 4 support and it will work just fine since it has its dependencies updated to release candidates of responders and has_scope.\nMy branch (https://github.com/spectator/inherited_resources/commits/rails4) was mostly dealing with dependencies (fixed in master) and tests (probably not fixed yet).\n. Have you tried using master branch? I think it should work fine.\nruby\ngem 'inherited_resources', github: 'josevalim/inherited_resources'\n. ",
    "whatthewhat": "@joelmoss Hi, would gem 'rails', '>= 3.1' be too open?\nI'm sure a lot of people would like to use inherited_resources with rails 4 beta\n. ",
    "preston": "Has support been added to the mainline? If not, please reopen! :+1: \n. Anyone happen to have a patch branch yet? I bet this is a big issue for a lot people.\n. Ok, I think I've got it working on the master head code, though it took me a few to figure out how to define the permitted_params method correctly. Apparently I didn't RTFM thoroughly. :)  Thanks!\n. ",
    "maioral": "+1\n. ",
    "shlensky": "+1\n. ",
    "versilov": "+1\n. ",
    "gra": "+1\n. ",
    "adamrneary": "+1, whether this PR or another, it would be good to know when we have stable rails 4 support for this lib.\n. ",
    "fny": ":+1: \n. ",
    "cpuguy83": "Nore do they allow you to do\n``` ruby\ncustom_action resource: :something\ndef something\n  super do\n    #stuff\n  end\nend\n```\n. This makes since, I just figured it was automatically generating that action method in the local controller.\n. ",
    "ricardopacheco": "Ignorem o problema, descobri que era um hidden_field enviando um valor fixo para o controller, por isso a valida\u00e7\u00e3o falhava. Sorry and Thanks\n. ",
    "travisp": "I might be doing something wrong, but this causes \"uninitialized constant InheritedResources::BaseHelpers::ActiveRecord\" errors when running the tests for me.\n. I think it's a good idea, but the tests should probably test the \"required\" support. Some quick testing seems to show that it works fine for the \"update\" controller action.. but it fails for me on the \"new\" controller action: a 'Required parameter missing' error occurs on the new action, which isn't normal rails behavior. The new action builds a resource and calls resource_params.\n. @prijutme4ty Your code testing the new action should be \"get :new, {}\" because the new action typically does not have any parameters passed to it.\nThis test fails:\nruby\n  def test_resource_params_from_new\n    get :new, {}\n    assert_response :success\n    assert assigns(:widget)\n  end\nResults in: \"Expected response to be a <:success>, but was <400>\" and response.body after the get request contains \"Required parameter missing: hotel\"\n. @rafaelgoulart The code still hasn't been updated to deal with it. I might take a shot in a few weeks if nobody else gets to it: it would be very nice if inherited_resources could work with standard strong_parameters syntax and would also allow the use of \"requires\". \n. ",
    "dougo": "@travisp: Oops, it should check for the existence of ActiveRecord too.  Sorry about that.  I'll try to submit another pull request this evening, unless someone else beats me to it.\n. I think this issue was fixed by this pull request: https://github.com/josevalim/inherited_resources/pull/288\n. ",
    "mrk08": "+1\n. ",
    "macfanatic": "Noticing this today as well on version1.4.1\n. ",
    "tonyc": "Running into the same problem with the \"new\" action as well. It's complaining about params[:utf8], params[:authenticity_token] etc... am I missing something obvious?\n. ",
    "mcansky": "update ?\n. ",
    "rafaelgoulart": "@tonyc Same here.\n. I'm having the same problem with the new action.\n. ",
    "Erowlin": "Up\n. ",
    "radwas88": "Hi Guys, \nI have a problem with activeadmin and inherited resources. When I try to install activeadmin I get below issue:\nBundler could not find compatible versions for gem \"inherited_resources\":\n  In Gemfile:\n    activeadmin (>= 0) ruby depends on\n      inherited_resources (~> 1.4.1) ruby\n    inherited_resources (1.3.1)\nMy environment versions are:\n- rails 4.1.1\n- ruby 2.0.0p247\n  In Gemfile I have following lines for gems:\n  gem 'activeadmin', github: 'gregbell/active_admin', branch: 'rails4'\n  gem 'inherited_resources', github: 'josevalim/inherited_resources'\nIf anyone could let me know what to do it would be great. I've tried various solutions and any of them helpd.\nRegards\n. ",
    "rolftimmermans": "This proposed API makes so much more sense. The current strong parameters solution is pretty awkward to use correctly.\n. ",
    "abernardes": ":up:\nAny chance of merge for this PR?\n. :heart:\n. ",
    "killthekitten": "Ping @prijutme4ty \n. ",
    "pzuraq": "Figured out that I could override the collection function to add this functionality. It would be nice if this was more clearly outlined in the docs.\n. Ah thanks, that's all I needed :)\n. ",
    "marnen": "Never mind; I see that 1.3.1 isn't the current version as I thought it was. Closing.\n. ",
    "danielgatis": "There is my implementation\n``` ruby\nclass Api::V1::BaseController < ApplicationController\n   inherit_resources\ndef index\n       search = collection.limit(limit)\n                          .offset(offset)\n                          .search q\n       meta = {\n         total: search.result.offset(0).limit(nil).count,\n         limit: limit,\n         offset: offset,\n         q: q\n       }\n   index! do |format|\n     format.json { render json: { meta: meta, results: ActiveModel::ArraySerializer.new(search.result) } }\n   end\n\nend\nend\n```\n. ",
    "gunnarblom": "@pzuraq @danielgatis Suggestion of an improved way letting ActiveModelSerializers work as intended and also working nice with will_paginate and has_scope:\n``` ruby\ndef index(options={}, &block)\n  options = options.merge( { meta: {\n    total_entries: collection.total_entries,\n    current_page: collection.current_page,\n    total_pages: collection.total_pages,\n    per_page: collection.per_page } } )\nindex!(options)\nend\n```\n. ",
    "michaelrkn": "I too would like to see integration with friendly_id, but as a workaround that doesn't require the before_action, you can simply add :use => [:slugged, :finders] to your model to overwrite .find.\n. ",
    "thomasdarde": "Hi,\nYou also can override your controller like this :\ndefaults resource_class: User.friendly\n. ",
    "stereoscott": ":+1: \n. ",
    "seanlinsley": "Hmm, seems I didn't read the docs\n. I just added a commit to require Ruby >= 2.1. I also updated the changelog.\n. ",
    "rafaltrojanowski": "+1\n. ",
    "mcary": "FYI, I was looking for similar behavior.  I agree with @joelmoss in that this is not necessarily inherited_resources's concern.  Perhaps it's a missing feature in habtm associations?\nI found a solution, which was to override the association's build method to link up the parent correctly.  I've published that solution alongside my failed attempts in this repository: mcary/habtm-build.  Each branch has a different solution as the last commit.\n. ",
    "nilcolor": "Ups. Problem found: it wasn't IR fault. It was other gem.\n. In my case it was Gretel (https://github.com/lassebunk/gretel)\nNot new one\u2026 It was our fork btw.\n. ",
    "jlaw90": "What gem was causing this problem?  I'm getting this message when using activeadmin and can't find any information about it.\n. ",
    "evilguc": "I moved it to https://github.com/josevalim/inherited_resources/pull/348.\nClosed\n. ",
    "avsej": "Do not use Resource to name your resources\n. all correct. see definition of SHOULD\nhttp://www.ietf.org/rfc/rfc2119.txt\n\nSHOULD   This word, or the adjective \"RECOMMENDED\", mean that there\n  may exist valid reasons in particular circumstances to ignore a\n  particular item, but the full implications must be understood and\n  carefully weighed before choosing a different course.\n. \n",
    "opsidao": "Nevermind :unamused: \n. ",
    "lukefan": "remove 'includes'.\nembed can't includes.\n. ",
    "jianbo": "My bad..\nForgot to comment out:\nclass ActiveRecord::Base\n  attr_accessible\n  attr_accessor :accessible\nprivate\n  def mass_assignment_authorizer(role = :default)\n    if accessible == :all\n      self.class.protected_attributes\n    else\n      super + (accessible || [])\n    end\n  end\nend\n. Roll back to version 1.4.1 works.\n. ",
    "MrMoins": "(bump)\n. ",
    "fingerco": "If this helps:\nI experienced this problem when switching from the default gem commit:\nhttps://github.com/josevalim/inherited_resources/commit/ae1516a3f1a01f98beac3334f76831a1c793c521\nto the latest commit. Doing a checkout of that previous commit fixed my issue.\n. ",
    "lksv": "Same problem. \nIt happens on belongs to association e.g.:\n```\n module Public\n   class SubscriptionOrdersController < Public::ResourcesController\n     belongs_to :magazine_group, optional: true\n def build_resource\n   build_resource! do |r|  #<--- falls here\n   #....\n\n```\nDigging deep I find out that this issue is cased by regression  in #303 (commit https://github.com/josevalim/inherited_resources/commit/630a2775fab351540fc9bd8aa0ce43d4d039f44a ). The exception is raised (uninitialized constant Public::MagazineGroup) but it is silently ignored by the rescue block in the referenced commit.\nI did a quick fix of this: https://github.com/lksv/inherited_resources/commit/93640c35200fe59f3b8d93fb57da3e0e2916d3d5 but I am not putting it as pull request because of tests needs to be extended and I am not sure of if it solves situations. \n. ",
    "amiel": "Just to cross-reference, I just recently helped someone troubleshoot this issue: http://stackoverflow.com/questions/24958503/belongs-to-on-activerecord-rendering-as-not-found/25028452\n. ",
    "sevaorlov": "@rafaelfranca, yes, the issue is still present in master\n. ",
    "varyonic": "@cheef IR has new maintainers.  Please rebase on the current master if interested.  If not then someone may rebase for you.. Merged manually, see https://github.com/activeadmin/inherited_resources/commit/65a4cea1fb2e58a70abd3f6b00f632b3845543c9. @ashanbrown @timoschilling I believe Rubinius 2.2 is now obsolete and this issue remains unresolved.  Given travis-ci/travis-ci/issues/5294 I would like to drop any efforts to support Rubinius.. Merged manually, see https://github.com/activeadmin/inherited_resources/commit/051b3c9e7b22e3d45c090c1c91f3569eafc13d41. Closing this issue as it's been inactive for several months. Please feel free to open a new issue or reopen this issue. Thanks!. This seems an odd use case with an available workaround, I'm +1 to close.. Closed by #404 . Closed by manual merge of #326.. :shipit: gem push please.. Sorry Rafael, it's just the way we ActiveAdmin maintainers have agreed to work together for now.  As David noted we believe you can override if needed.. See also http://stackoverflow.com/questions/42191475/rails-5-active-admin-installation-issue/. Thanks @deivid-rodriguez Bump version and rake release is down to @rafaelfranca or @timoschilling . See #433 and plataformatec/has_scope#88  Try has_scope from github also.  This should be resolved in the next day or two.. Corrected gemspec and updated CHANGELOG.  I propose a release 1.8 accompanies activeadmin 1.1 when ready.. I'm +1 for declining this new functionality as noted in the README, others can always fork if they find it useful.. > It seems that inherited_resources wraps the new_attributes Hash into an Array\nI would look into that some more, I think it is probably something else.. I\u2019m going to close this since you haven\u2019t responded. Please feel free to update this issue with additional information so it can be reconsidered.. See #443. I'm using\ngem 'inherited_resources', github: 'activeadmin/inherited_resources', branch: 'rails-5.2'\n1.7.2 tag: https://github.com/activeadmin/inherited_resources/tree/1.7.2. My guess is that @fivell did that with GitHub release.  GitHub has its own default behavior.. Resolved by #443. Do we really need to test every version of MRI? Would min (2.2) and max (2.5) be sufficient?. Some sample code might help, I recommend posting on StackOverflow and adding a link here.. Meh, Ruby 2.2 fails on Travis, will drop support and resubmit as 1.9.0.. @rafaelfranca To answer your question as far as I could see this lockfile was not used since 6d034d913bfd9b53ea2e5b31c4056578a1b170a4  @deivid-rodriguez If this is good enough for Rails then it's good enough for Active Admin... all three repos please.. WTF? https://github.com/activeadmin/activeadmin/pull/5126#issuecomment-322049874. OK, I give up. I thought this was settled by #5126. I absolutely test all my branches on Travis before submitting PRs.. Needs\n- rvm: 2.1.9\n      gemfile: test/gemfiles/Gemfile-Rails-5-1. Should this be \"< 5.2.x\"?  < 5.1 was compatible with 5.1.rc2 but not 5.1.0 which was why we did not update sooner.. Agreed, but I'll defer to @rafaelfranca https://github.com/activeadmin/inherited_resources/pull/437#issuecomment-308746524. ",
    "cheef": "Does my request fix this issue? #326 \n. ",
    "Bonias": "It does not. Your modification concerns belongs_to with class_name option.\nMy pull request fixes belongs_to without class_name or parent_class option. In my example resources_configuration[:group][:parent_class] should equal Group, but is nil.\n. ",
    "dmitri-wm": "Sorry, don't know to to link pull request to issue.\nHere is mine https://github.com/josevalim/inherited_resources/pull/378\n. sure, done\n. Yes, I've fixed it at the next commit\nhttps://github.com/dmitri-wm/inherited_resources/commit/1c044c62cee66be8dd6dc4bc5dd18b1179af78aa\n. ",
    "bitboxer": "We hit the same error and it surprised us, too :cry: . We removed the HttpCacheResponder in our Controllers and it worked again.\n. Sure. PR opened.\n. @brendon sorry to bring this back to your memory :wink:\n. Sorry, was not detailed enough.\nIf you look into the HttpCacheResponder you will see that this thing sends a head :not_modified if the browser sends a last modified that is the same as the resources updated_at. BUT only if the response is using to_format, which usually means API requests.\nFor every other request it is not cached and does not return a head :not_modified. This is a surprising behavior.\n. I could not find it when searching for \"cache\" on the readme of inherited_resources. Because of that it surprised me :wink:\n. ",
    "jmuheim": "josh@macbuech:~/Documents/Work/MuheimWebdesign/base (master)$ bundle | grep inheri\nUsing inherited_resources (1.3.1) \njosh@macbuech:~/Documents/Work/MuheimWebdesign/base (master)$ bundle update inherited_resources\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nUsing rake (10.1.1) \nUsing i18n (0.6.9) \nUsing minitest (4.7.5) \nUsing multi_json (1.8.4) \nUsing atomic (1.1.15) \nUsing thread_safe (0.2.0) \nUsing tzinfo (0.3.38) \nUsing activesupport (4.0.3) \nUsing builder (3.1.4) \nUsing erubis (2.7.0) \nUsing rack (1.5.2) \nUsing rack-test (0.6.2) \nUsing actionpack (4.0.3) \nUsing mime-types (1.25.1) \nUsing polyglot (0.3.4) \nUsing treetop (1.4.15) \nUsing mail (2.5.4) \nUsing actionmailer (4.0.3) \nUsing activemodel (4.0.3) \nUsing activerecord-deprecated_finders (1.0.3) \nUsing arel (4.0.2) \nUsing activerecord (4.0.3) \nUsing addressable (2.3.5) \nUsing annotate (2.6.2) \nUsing ast (1.1.0) \nUsing awesome_print (1.2.0) \nUsing bcrypt (3.1.7) \nUsing bcrypt-ruby (3.1.5) \nUsing coderay (1.1.0) \nUsing better_errors (1.1.0) \nUsing debug_inspector (0.0.2) \nUsing binding_of_caller (0.7.2) \nUsing sass (3.2.14) \nUsing bootstrap-sass (3.1.1.0) \nUsing bundler (1.3.5) \nUsing cancancan (1.7.0) \nUsing mini_portile (0.5.2) \nUsing nokogiri (1.6.1) \nUsing xpath (2.0.0) \nUsing capybara (2.2.1) \nUsing launchy (2.4.2) \nUsing capybara-screenshot (0.3.16) \nUsing thor (0.18.1) \nUsing railties (4.0.3) \nUsing cells (3.9.1) \nUsing timers (1.1.0) \nUsing celluloid (0.15.2) \nUsing nio4r (1.0.0) \nUsing celluloid-io (0.15.0) \nUsing ffi (1.9.3) \nUsing childprocess (0.5.1) \nUsing chunky_png (1.3.0) \nUsing cliver (0.3.2) \nUsing coffee-script-source (1.7.0) \nUsing execjs (2.0.2) \nUsing coffee-script (2.2.0) \nUsing coffee-rails (4.0.1) \nUsing colorize (0.6.0) \nUsing columnize (0.3.6) \nUsing fssm (0.2.10) \nUsing compass (0.12.2) \nUsing compass-rails (1.1.3) \nUsing coolline (0.4.3) \nUsing rest-client (1.6.7) \nUsing docile (1.1.3) \nUsing simplecov-html (0.8.0) \nUsing simplecov (0.8.2) \nUsing tins (1.0.0) \nUsing term-ansicolor (1.3.0) \nUsing coveralls (0.7.0) \nUsing css_parser (1.3.5) \nUsing database_cleaner (1.2.0) \nUsing debugger-linecache (1.2.0) \nUsing debugger-ruby_core_source (1.3.2) \nUsing debugger (1.6.6) \nUsing orm_adapter (0.5.0) \nUsing warden (1.2.3) \nUsing devise (3.2.3) \nUsing diff-lcs (1.2.5) \nUsing diffy (3.0.2) \nUsing eventmachine (1.0.3) \nUsing http_parser.rb (0.5.3) \nUsing em-websocket (0.5.0) \nUsing email_spec (1.5.0) \nUsing factory_girl (4.4.0) \nUsing factory_girl_rails (4.4.1) \nUsing ffaker (1.23.0) \nUsing formatador (0.2.4) \nUsing rspec-core (2.14.8) \nUsing rspec-expectations (2.14.5) \nUsing rspec-mocks (2.14.6) \nUsing rspec (2.14.1) \nUsing ruby-progressbar (1.4.1) \nUsing fuubar (1.3.2) \nUsing gherkin (2.12.2) \nUsing posix-spawn (0.3.8) \nUsing grit (2.5.0) \nUsing rb-fsevent (0.9.4) \nUsing rb-inotify (0.9.3) \nUsing listen (2.6.2) \nUsing lumberjack (1.0.4) \nUsing method_source (0.8.2) \nUsing slop (3.4.7) \nUsing pry (0.9.12.6) \nUsing guard (2.5.1) \nUsing guard-annotate (1.1.0) \nUsing guard-bundler (2.0.0) \nUsing guard-livereload (2.1.1) \nUsing guard-migrate (1.0.1) \nUsing guard-pow (2.0.0) \nUsing guard-rspec (4.2.7) \nUsing has_scope (0.5.1) \nUsing hike (1.2.3) \nUsing tilt (1.4.1) \nUsing sprockets (2.11.0) \nUsing sprockets-rails (2.0.1) \nUsing rails (4.0.3) \nUsing headhunter (0.1.8) \nUsing hirb (0.7.1) \nUsing responders (0.6.5) \nUsing inherited_resources (1.3.1) \nUsing pry-debugger (0.2.2) \nUsing yard (0.8.7.3) \nUsing pry-doc (0.4.6) \nUsing pry-git (0.2.3) \nUsing pry-rails (0.3.2) \nUsing pry-remote (0.1.8) \nUsing pry-stack_explorer (0.4.9.1) \nUsing jazz_hands (0.5.2) \nUsing jbuilder (1.5.3) \nUsing jquery-rails (3.1.0) \nUsing json (1.8.1) \nUsing parser (2.1.5) \nUsing websocket-driver (0.3.2) \nUsing poltergeist (1.5.0) \nUsing powder (0.2.1) \nUsing powerpack (0.0.9) \nUsing quiet_assets (1.0.2) \nUsing rack-livereload (0.3.15) \nUsing rainbow (2.0.0) \nUsing rdoc (4.1.1) \nUsing respec (0.5.0) \nUsing rip_hashrocket (0.1.2) from git://github.com/jmuheim/rip_hashrocket (at master) \nUsing rolify (3.4.0) \nUsing rspec-rails (2.14.1) \nUsing rspec-cells (0.1.9) \nUsing rubocop (0.18.1) \nUsing rubyzip (1.1.0) \nUsing sass-rails (4.0.1) \nUsing sdoc (0.4.0) \nUsing websocket (1.0.7) \nUsing selenium-webdriver (2.40.0) \nUsing shoulda-matchers (2.5.0) \nUsing simple_form (3.0.1) \nUsing temple (0.6.7) \nUsing slim (2.0.2) \nUsing slim-rails (2.1.0) \nUsing spring (1.1.0) from git://github.com/guard/spring.git (at listen2) \nUsing spring-commands-rspec (1.0.1) \nUsing sqlite3 (1.3.9) \nUsing terminal-notifier-guard (1.5.3) \nUsing turbolinks (2.2.1) \nUsing turnip (1.2.1) \nUsing uglifier (2.4.0) \nUsing xray-rails (0.1.12) \nYour bundle is updated!\njosh@macbuech:~/Documents/Work/MuheimWebdesign/base (master)$ bundle | grep inheri\nUsing inherited_resources (1.3.1) \njosh@macbuech:~/Documents/Work/MuheimWebdesign/base (master)$\n. I locked my inherited resources version now using gem 'inherited_resources', '>= 1.4.1'.\nStill this seems very odd to me.\n. ",
    "matheusvetor": "The same is happening with me.\nmodule Octopus\n  class Admin::ResourceContoller < Admin::ApplicationController\n    inherit_resources\n  end\nend\nWhen i put a application_controller.rb on controllers/ it works fine\nBut i have:\ncontrollers/octopus/admin\ncontrollers/octopus/frontend\nadmin and frontend have have their own application_contoller\nall controllers that inherit from Admin::ResourceController\nThis is a mountable engine with isolate_namespace\n. Sounds good, lets check the progress on #479. Until them, this PR covers all the steps to add another ruby version test support?. @deivid-rodriguez I just added missing jruby test against rails 6beta. @deivid-rodriguez Lets start again with this PR. @deivid-rodriguez once you merge this i will open another covering rails6beta on jruby92. Sounds great to me. We need also add ruby 2.6. I alread rebased after the previous PR was merged.. A easy way is to cancel this PR and open another with the correct way. ",
    "wvengen": "I'm running into this as well. For inspiration, devise allows to configure it in this way.\n. ",
    "reignmaker": "Hello. I have related issue. In Rails 4.1.0.rc1 (same as 4.1.0.rc2) blank app i'm trying to inherit controller from InheritedResources::Base but keep getting ActiveSupport exception:\nRuntimeError - Circular dependency detected while autoloading constant InheritedResources::Base:\n  activesupport (4.1.0.rc1) lib/active_support/dependencies.rb:478:in load_missing_constant'.\nUsing macro inerit_resources is working though.\n. ",
    "Fudoshiki": "undefined local variable or method `inherit_resources' for Admin::ProjectsController:Class\nclass Admin::ProjectsController < Admin::AdminController\n  inherit_resources\n..\nend\n. ",
    "mlynarczyk": "had same issue, restarting rails server helped\n. ",
    "robertomiranda": "100% agree :+1:. is really annoying inherit everything from ApplicationController. Also agree with @joelmoss pitifully we need to keep ::ApplicationController as default parent \n. ",
    "peterhoeg": "@MichaelSp I'm seeing this too. Did you figure out what was going on?\n. Ah, the fix is to rename the resource_parms method to permitted_parms make it return a hash instead. Check this out: https://github.com/josevalim/inherited_resources/issues/236\n. ",
    "MichaelSp": "I still have no idea. But I have a work-around. Add this to your (Application-) Controller:\ndef update_resource(object, attributes)\n   object.update_attributes(attributes)\nend\n. ",
    "shlima": "The only way I've found is to prevent eager load IH class methods for the test environment, and load them in our anonymous controller:\n``` ruby\nmodule Api\n  class BaseController < ApplicationController\n    def self.load_inherited_resource\n      inherit_resources\n      actions :all, except: %i(new edit)\n    end\n# Prevent IH class methods eager load and load them\n# in anonymous controller from specs by hand\nload_inherited_resource unless Rails.env.test?\n\nend\nend\n```\nAnd spec:\n``` ruby\nrequire 'spec_helper'\ndescribe Api::BaseController do\n  controller do\n    load_inherited_resource\n  end\nend\n```\nBut this is smell :shit: \n. https://github.com/shlima/inherited_resources_light\n. ",
    "pbhogan": ":+1:\n. ",
    "rohitpaulk": "+1\n. @jianbo - Looks like this is related to #325. #367 looks like it solves the problem. For now, what you could do is specify the parent_class manually like this : \nruby\nclass FlagsController < Api::V1::ResourceController\n  belongs_to :deal, :polymorphic => true, :parent_class => Deal\nend\n. @phlegx - You're welcome!\n. @bronislav - True :) I had just copied the OP's code and added the parent class part.\n. ",
    "phlegx": ":+1: \n. @rohitpaulk add parent class works for me! Thank you!\n. ",
    "jasonayre": ":thumbsup:  +1\n@josevalim :)\n. ",
    "bronislav": "There are possible problem with klass.safe_constantize. In my environment it returns correct result starting from second call. First call always returns wrong result. I will come back with MVE if I will found why it's happens.\n. @rohitpaulk polymorphic: true in your example doesn't have much sense, because you have only one possible parent association.\nruby\nmodule Admin\n  class PositionsController < BaseController\n    belongs_to :employee, :assignment, polymorphic: true\n  end\nend\nIn this case you can't use parent_class option to point to the correct parent class\n. ",
    "cknoxrun": "I've tested this with a whole bunch of controllers in my large app, all seems to work\n. ",
    "petergoldstein": "This seems to be relevant to an issue that is locking ActiveAdmin to IR 1.4.x.  You can see the discussion here - https://github.com/activeadmin/activeadmin/pull/3193\n. @josevalim  It would be really nice to get SOME fix for this merged in.  It looks like there are now 3 PRs with various approaches, the earliest of which was submitted almost a year ago.  Specifically:\n1. https://github.com/josevalim/inherited_resources/pull/330\n2. https://github.com/josevalim/inherited_resources/pull/367\n3. https://github.com/josevalim/inherited_resources/pull/369\nThe first and third entries on this list look like VERY low risk PRs, and the second one doesn't look much riskier.  The three approaches differ mostly in a matter of style.\nI don't really have a strong opinion which of these should be merged, but I think it's clear that at least one of them should be merged in soon.\nAnything that I or anyone else can do to expedite this?  I know @rafaelfranca was asking about it over at https://github.com/activeadmin/activeadmin/pull/3193 \nAs noted here and elsewhere, this is impacting some heavily used gems (e.g. ActiveAdmin).  So a merge and a dot release would seriously help those projects.\n. @rafaelfranca Much obliged.\n. @rafaelfranca Any idea when you'll have time to look at this?  Thanks.\n. @rafaelfranca Anything I can do to expedite this?  Thanks.\n. @rafaelfranca Thanks.  I'll do some testing in ActiveAdmin ASAP.\n. @rafaelfranca I've confirmed that this fixes the issue with ActiveAdmin.  With josevalim/inherited_resources master the specs run green.  Can you cut a 1.5.1 soon?  Thanks.\n. @rafaelfranca Great.  Thanks so much for giving this issue some attention.\n. @rafaelfranca How's the process of cutting a 1.5.1 coming?\n. @rafaelfranca Any updates on the timeline for a 1.5.1 release?  Sorry to nag, but it would make AA dev much easier.  Thanks.\n. @rafaelfranca Thanks much.  Appreciate it.\n. ",
    "bamorim": "Oh, I've just realized that It's not this purpuse of the belongs_to collection_name.\nIf I'm right, it is only for nested belongs_to and this is to tell how to fetch the parent. I'm supposed to do like:\nruby\nclass ChildsController < InheritedResources::Base\n  belongs_to :root\n  defaults collection_name: :foos\nend\nRight? If yes, just close this issue. (But that would be a nice feature if I can say how it's fetched and do not change the variable to @foos)\nWell, I'm sorry for this.\n. ",
    "TomK32": "I have quite a few STI models (subclassed from the same parent model) in my app and my approach was to go into build_resource as that is the only place where you really need to get the class right. Other than that my type is the parent class that i subclassed from.\nPS: I'm using mongoid, not sure what activerecord is capable of.\n. Well, if there's no development for it, doesn't that mean it has reached a state of being finished? A strange concept I admit.\nI have written a mere 2 edit methods in my 56 interited_resources controllers,create is the top scorer with 42, update is the runner up with 20, in total it is only 98 methods I had to override, ~25% of what I'd have to without it. I do have a need for this gem to stay alive.\nYou will have to delete the repo or someone will make it compatible for Rails 5.\n. ",
    "markmohr15": "Is there a way around it not letting me install 1.5 because of dependency issues?\n. Fork it and change the dependency\n. I did this a few months ago, so I can' say 100% that this is what it is, but I believe you need to change your inherited resources dependency to inherited_resources (>= 1.4.1) and then use this in your gem file for inherited dependency:  gem \"inherited_resources\", github: \"andriytyurnikov/inherited_resources\", branch: \"rails_4_2\"\n. ",
    "goosetav": "\nadd unneeded complexity in applications\n\nWhile I tend to agree about complexity, some of the dsl (belongs_to, etc...) and utility methods are very valuable -- it'd be great to see those repackaged into a concern or something.\n. ",
    "jeffutter": "Any status update? Rails 4.2 was officially released yesterday.\n. ",
    "thiensubs": "Why this gems isn't support 4.2, i was upgrade rails 4.2, but project is down because this gems.\nRealy readly uncomfortable!\n. ",
    "gkunwar": "I am facing same problem on Rails 4.2, What is the best solution?\n. ",
    "meligatt": "Hello, markmohr15 , can you give us more details about the dependency you are talking about, please. I'm beginner and I want to be sure that I'm changing the right dependency..(if that makes sense) Thank you!\n. ",
    "joost": "Interested in this as well!\n. ",
    "milankubin": "+1\n. ",
    "dankohn": "Yes, using gem 'responders', github: 'plataformatec/responders', ref: '553527f' resolved my issue. I can now use devise 3.4.1. Thanks very much for the fix and the quick turnaround. It would be great if you could release a responders 1.1.2.\n. Thank you for being so responsive.\n. ",
    "timoschilling": "@rafaelfranca any updates on this, or can I help in some way?\n. From my point of view can this ticked be closed, after the 'rails-4-2' branch is merged into master and a new release is happened. @rafaelfranca what do you think?\n. :+1: \n. :+1: \n. Thanks for the offer, but I have tried a year ago and it wasn't easy. We plan it for our 2.0 release. And yes you could help us.\nFor our 1.x it would be great if inherited_resources can support Rails 5.\n. I'm working on a matrix, first try: https://travis-ci.org/activeadmin/has_scope/builds/141531656\n@rafaelfranca it is posible to build a special has_scope version, wich is between 0.6 and 0.7?\n. This PR didn't work or brings new problems. I try to fix them and open a new PR later.\n. @rafaelfranca That automatically happens during the movement from jose to activeadmin. I have invited you now.. Your welcome, we have to thank you for working on inherited_resources for rails 4 and rails 5 \u2764\ufe0f . I will do it. I don't believe that some use inherit_resources without Rails. I think it's fine.. No it's ok. I think you meen ActionController::Base. The dependency relax isn't a minor change, so we will release it under 1.7.2. please don't make a version bump in a PR. ",
    "boxofrad": "@rafaelfranca is this one of the failures you're getting?\nShowActionBaseTest#test_controller_should_render_show:\nNoMethodError: undefined method `show' for #<UsersController:0x007fb9acb356d8>\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/implicit_render.rb:4:in `send_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/abstract_controller/base.rb:189:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/rendering.rb:10:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/abstract_controller/callbacks.rb:20:in `block in process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/activesupport-4.1.5/lib/active_support/callbacks.rb:82:in `run_callbacks'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/abstract_controller/callbacks.rb:19:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/rescue.rb:29:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/instrumentation.rb:31:in `block in process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/activesupport-4.1.5/lib/active_support/notifications.rb:159:in `block in instrument'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/activesupport-4.1.5/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/activesupport-4.1.5/lib/active_support/notifications.rb:159:in `instrument'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/instrumentation.rb:30:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/params_wrapper.rb:250:in `process_action'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/abstract_controller/base.rb:136:in `process'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionview-4.1.5/lib/action_view/rendering.rb:30:in `process'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/test_case.rb:595:in `process'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/test_case.rb:64:in `process'\n    /Users/daniel/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/test_case.rb:495:in `get'\n    /Users/daniel/src/inherited_resources/test/base_test.rb:98:in `test_controller_should_render_show'\nIt seems the setup from test_redirect_to_the_users_list_if_show_undefined isn't torn down / persists between tests.\nruby\ndef test_redirect_to_the_users_list_if_show_undefined\n  @controller.class.send(:actions, :all, :except => :show)\nIf I comment out the entire test it seems to fix the other failures.\n. @scudelletti yeah it's strange that the method is still missing in subsequent tests though...\nGiven the intermittent nature of the test failures, I'd be tempted to think its something to do with the rails autoloader / constants not getting redefined - I've been bitten by this before.\nI'll have a read through the changelog, they may have introduced some caching behaviour or a regression.\n. I should also note that the controller tests on our application have also intermittently started failing, which I believe is a related issue.\n. Actually I think I may've spoken out of turn...\nI have the same test failures on cb178c2 (v1.5.1 / before the 4.2 work) so this is probably a side-issue, sorry guys!\n. ",
    "scudelletti": "@boxofrad we remove the show method when we call .send(:actions, :all, :except => :show) as we can see here, so it not returns.\n. Awesome! o/\n. I really liked this approach, its seems cleaner and it protects all test cases. :purple_heart:\nWhen the class is inherited the name is invoked here, that's why you have to declare the method. :(\nhttps://github.com/josevalim/inherited_resources/blob/master/lib/inherited_resources/class_methods.rb#L392-L396\n. ",
    "ashanbrown": "I've proposed this as an alternative: https://github.com/josevalim/inherited_resources/pull/387\n. I haven't been able to test/upgrade my app to rails 4.2 due to issues with other gems (paper_trail, specifically), so I can't personally comment on whether it works in a real application or not.\n. The paper trail issues are unrelated to this gem.  They just keep me from\nrunning my app on rails 4.2\nOn Sun, Jan 11, 2015, 17:58 Jonathan Allard notifications@github.com\nwrote:\n\n@dontfidget https://github.com/dontfidget I see. Are you able to add\nsome tests about what's failing in PaperTrail?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/josevalim/inherited_resources/issues/381#issuecomment-69523061\n.\n. Rather than restoring the classes to their original state, I've proposed just using dynamic classes at https://github.com/josevalim/inherited_resources/pull/387.\n. A large fraction of the tests send messages that trigger changes in the controller.  I hadn't looked closely, but it appears most of them just appear to reset it afterwards.  Frankly, I'd rather just delete all the code that tries to reset the controller and always dynamically define the class.  Otherwise, I'd just go back to @scudelletti original proposal.\n. I've made changes to make it pass on rails 4.2.  Can't say actually say it works, but the tests pass against rails 4.2 gems now.\n. Cool.  I'm trying to get it to run on travis btw, with multiple rails versions and rubies.  Would you be open to a separate pull request for that?\n. I'm just doing it on my own branch.  I'll let you know if I succeed.\n\nOn Sun Jan 04 2015 at 3:36:36 PM Rafael Mendon\u00e7a Fran\u00e7a \nnotifications@github.com wrote:\n\nto get it working on travis @josevalim https://github.com/josevalim\nneed to enable it first. I'll try to get him to enable it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/josevalim/inherited_resources/pull/387#issuecomment-68654976\n.\n. OK, I'll add those too.  BTW, if you just pull this, I expect that the existence of a .travis.yml file will just cause travis to automatically pick it up for github account josevalim.\n\nCuriously, the tests appear to fail on rubinious.  I don't use rubinious myself so I'm not sure I'll be looking more into it.  Maybe it's just some issue with the mocking library.\n. ",
    "joallard": "Now it passes on Travis, I'm curious, is this 4-2 ready to be merged and released?\n. @dontfidget I see. Are you able to add some tests about what's failing in PaperTrail?\n. ",
    "cpence": "It seems to be working for me on Rails 4.2, though I'm only using inherited_resources indirectly through ActiveAdmin, and I'm not sure how to test whether or not it's behaving as expected.\n. ",
    "deivid-rodriguez": "I just tried this through activeadmin and my test suite fails to start with the following error:\n/home/davidr/.rvm/gems/ruby-2.2.0/bundler/gems/inherited_resources-ff1c991307ff/lib/inherited_resources/responder.rb:2:in `<module:InheritedResources>': uninitialized constant ActionController::Responder (NameError)\n    from /home/davidr/.rvm/gems/ruby-2.2.0/bundler/gems/inherited_resources-ff1c991307ff/lib/inherited_resources/responder.rb:1:in `<top (required)>'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/bundler/gems/inherited_resources-ff1c991307ff/lib/inherited_resources.rb:4:in `<top (required)>'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/bundler/gems/activeadmin-7aef260921d4/lib/active_admin.rb:10:in `<top (required)>'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/bundler/gems/activeadmin-7aef260921d4/lib/activeadmin.rb:1:in `<top (required)>'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:76:in `require'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:76:in `block (2 levels) in require'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:72:in `each'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:72:in `block in require'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:61:in `each'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler/runtime.rb:61:in `require'\n    from /home/davidr/.rvm/gems/ruby-2.2.0/gems/bundler-1.7.11/lib/bundler.rb:134:in `require'\n    from /home/davidr/Proyectos/nipanipa/config/application.rb:7:in `<top (required)>'\n    ...\nSo it seems that it fails to require inherited_resources.\nI just added \ngem 'activeadmin', github: 'activeadmin'\ngem 'inherited_resources', github: 'josevalim/inherited_resources', branch: 'rails-4-2'\nto my Gemfile, not sure if other changes are needed or it's just the support that's not ready.\nThanks to anybody working on this!\n. Nope, I didn't get to it yet.\n. :+1: It seems to be working fine actually.\n. @rafaelfranca I think the way @timoschilling configures this is to allow admins to override the setting. In any case, I find it nice so people get a chance to review even the small changes. In this case, CHANGELOG could've become more confusing for a while if this had landed straight into master.. @rafaelfranca This looks great to me, although I'm not an engines expert! :)\nThe only thing I don't quite understand is this part of the second commit message: \"Also move the initialization to an engine\". Also, would it be better to call the engine class Engine instead of Railtie? And if that's a good change, could that break compatibility in any way?. Ah, I see. That was the potentially breaking change for non-rails users that is not finally happening in this PR, right?. Quick question. Could you show the output of ruby -v? And if not running the latest patch level of your version, could you upgrade your ruby and try again?. Thanks Rafael!. I restarted the build and it installed fine, but the tests didn't pass. So it seems that there's actual work to be done here... :(. Fantastic work @maschwenk, I don't have time to look at the diff right now, but the green checks look great! :). Went ahead and merged this. Only pending a release! :tada:. I think if we officially drop support, we should bump the minimum versions in gemspec. And if we keep it, we should keep testing it.\nI'm up for dropping anything under ruby 2.2 and rails 4.2.. @rafaelfranca I agree with you (it's actually me being mentioned in that blog post :smiley:) but I never managed to convince @varyonic, @timoschilling and the other maintainers... Since the rest of the gemfiles had already been removed in another PR and I didn't want to discuss the same thing again, I approved it.\nBut I'm definitely open to reconsider if we manage to convince the rest!. Yeah, sorry @javierjulio, \"and the other maintainers\" was not accurate. I think only @varyonic and @timoschilling were opposed.\nAnyways, I was not paying any attention to this repo when the gemfiles were removed and that PR was approved and went in, so now I feel I need to convince @varyonic (and not the other way around) if I want to revert the change :sweat_smile:. And I decided to approve this PR and leave that for another time.. I'll propose a workflow to try to fit everyone's taste here:\n\n\nRe-add lock files to the repo. @rafaelfranca will be happy, I'll be happy, @javierjulio will be happy.\n\n\nRemove the lockfiles in CI before running tests. I think this will make @timoschilling happy because his objection was that bug discoverability on latest dependencies would be reduced. Also @rafaelfranca will be happy since I think this technique is used in Rails. Also @varyonic will be happy because one of his objections was that it was too much work to keep them up to date. By testing against latest versions that work will be nice to do but less necessary.\n\n\nUpdate lockfiles not one dependency at a time nor with a bot, but with bundle update --all. I think this will also make @varyonic happy, because another of his objections was that keeping the lockfiles up to date would be a lot of git noise, and with this approach the \"noise\" should be reduced. It will also make @rafaelfranca happy because it's what's done in Rails too I think.\n\n\nIf you like my proposal I can make a PR!. Ok, I'll wait for @varyonic's input and then make the PR. I think he should be ok with this!. Actually I misunderstood e258e88. It was removing Gemfiles, not lock files. So now this repo does not have a Gemfile in the root folder, so running bundle from there will fail... right?\nI'm not sure if this is a problem at all, but I guess some people are too used to running bundle install when cloning a repo so that might surprise them. I think we could put the latest Gemfile in the root folder, so that things work against that by default? Or maybe symlink it? Or maybe tell contributors to do export BUNDLE_GEMFILE=test/gemfiles/Gemfile-5-2? I think that last one is what we do in activeadmin.\nI think I'd go with the first option.. Yeah, actually not only that but it can also happen that they cloned the repo a long time ago, go back to work on it after a while, pull the latest Gemfile and it's so different from the Gemfile.lock they have in their local folder that bundler freaks out. This is no big deal for experienced users, probably, but it can discourage beginners.\nAnyways now I was not talking about lockfiles not being in the repo, but about the repo not having a Gemfile. Right now users cloning the repo and running bundle on it will get  a \"Could not locate Gemfile\" error. In my opinion the easiest fix for that is to move test/gemfiles/Gemfle-5-2 to the root of the repo.. I should say that I'm not a fan of the rm ${BUNDLE_GEMFILE}.lock trick but I wanted to find the middle ground, so here it is!. It should be fixed now!. By the way, I tried running this refactor against ActiveAdmin's master, and it all went well!. @varyonic Do you still plan to get this over the line?. Could you please read the whole thing, starting with https://github.com/activeadmin/activeadmin/pull/5488, and then elaborate a bit more? Thanks.. Then you can continue with https://github.com/activeadmin/arbre/pull/79 where I explicitly mention you asking for your opinion.. @varyonic Why commenting a \"WTF comment\" on a merged PR, instead of giving actual reasons when the change is initially proposed (or on a PR pending review)? You seemed to be trying to point out that I'm contradicting myself, but this is not true, I just accepted the \"let's do what Rails does\" reason and decided to live with it. When I started this series of PRs, I figured I could propose the change again because Rails no longer does this, so that was no longer a reason against it.\nNow I'm doing a deeper git history and I see that you and @timoschilling were opposed to this change because you usually test all your branches before opening a PR. If that's still the case, and you don't to go through the trouble of temporarily adding your working branch when you want to get it tested in CI without a PR, I'm fine with reverting this again, I don't want to impose my workflow to everyone. I just don't get destructive late comments over more constructive and early feedback.. Yeah, this one works for rubocop (where I borrowed these checks from) because each change log entry goes in a single line. So maybe we could enforce that?\nAlso, the original check in rubocop actually enforces punctuation at the end of entries. For activeadmin I removed it because we also include a mention to contributor and PR after the punctuation, so our entries ended without a dot. So, maybe we actually enforce a final dot here? I think it looks better and it also matches our current style.\nThoughts?. Thanks for doing this by the way!. Yes, I guess we could enforce that all lines are either blank lines or start with # or *?. By the way, I'm working on a tool to automatically add changelog entries right after PRs are merged into master, by parsing the PR title and all the rest of the information from the merged PR. So we get a consistent changelog format, and we don't need to bother contributors with changelog entries! :smiley: . @javierjulio Thanks so much for this work! It's great to have a warningless test suite! :muscle:\nI'm on a trip so I'm not sure I'l be able to review until Tuesday, but regarding the parent? warnings, those kind of warning will happen, for example, if you load (not require, load) the same file twice. Not sure if that gives you any clues.. I had a quick look. I think the problem is that the same test class is reused in several tests, calling belongs_to on it several times (see for example usages of Library::SubcategoriesController). Each of these calls redefines these methods. Possible solutions would be to undefine them after each test, or to use different classes for each test.. Also, regarding the addition of minitest-reporters, I think we can maybe get a similar effect with TESTOPTS=--verbose bundle exec rake?. Yes, I just run the test suite and it's overwhelming, wow. It's so much better after this PR.\nRegarding minitest-reporters... sorry, I didn't see the TEMP mark, looks good then! In any case, I think the weird output you're seeing is because of some incompatibility between the gems, if you fully remove the minitest-reporters gem, TESTOPTS=--verbose bundle exec rake should give you a better output like\n(...)\nMountableEngineTest#test_route_prefix_do_not_include_engine_name = 0.00 s = .\nMountableEngineTest#test_route_prefix_present_when_parent_module_is_not_a_engine = 0.00 s = .\nDestroyActionBaseTest#test_show_flash_message_when_user_can_be_deleted = 0.00 s = .\nDestroyActionBaseTest#test_show_flash_message_with_javascript_request_when_user_cannot_be_deleted = 0.01 s = .\nDestroyActionBaseTest#test_redirects_to_the_resource_if_cannot_be_destroyed = 0.01 s = .\nDestroyActionBaseTest#test_show_flash_message_with_javascript_request_when_user_can_be_deleted = 0.00 s = .\nDestroyActionBaseTest#test_the_requested_user_is_destroyed = 0.00 s = .\nDestroyActionBaseTest#test_redirects_to_users_list = 0.00 s = .\nDestroyActionBaseTest#test_show_flash_message_when_user_cannot_be_deleted = 0.00 s = .\nStrongParametersTest#test_with_permitted_and_resource_methods = 0.00 s = .\nStrongParametersTest#test_permitted_params_from_create = 0.00 s = .\nStrongParametersTest#test_permitted_params_from_new = 0.00 s = .\nStrongParametersTest#test_permitted_params_from_update = 0.00 s = .\nStrongParametersIntegrationTest#test_permitted_params_from_new = 0.00 s = .\nStrongParametersIntegrationTest#test_permitted_empty_params_from_new = 0.00 s = .\nStrongParametersIntegrationTest#test_permitted_params_from_create = 0.00 s = .\nStrongParametersIntegrationTest#test_permitted_params_from_update = 0.00 s = .\nPolymorphicCompanyTest#test_polymorphic_helpers = 0.00 s = .\nPolymorphicCompanyTest#test_the_requested_employee_is_destroyed_on_destroy = 0.00 s = .\nPolymorphicCompanyTest#test_update_the_requested_object_on_update = 0.00 s = .\nPolymorphicCompanyTest#test_expose_all_employees_as_instance_variable_on_index = 0.00 s = .\nPolymorphicCompanyTest#test_expose_a_new_employee_on_new = 0.00 s = .\nPolymorphicCompanyTest#test_expose_a_newly_create_employee_on_create = 0.00 s = .\nPolymorphicCompanyTest#test_expose_the_requested_employee_on_show = 0.00 s = .\nPolymorphicCompanyTest#test_expose_the_requested_employee_on_edit = 0.00 s = .\nEngineLoadErrorTest#test_does_not_crash_on_engine_load_error = 0.00 s = .. Sure! Let me have a look!. I'd like to test this against activeadmin since I don't know this library well enough to be sure it won't break anything... It seems to make sense, but still.... @javierjulio Nice job. I wouldn't care about warnings on older versions.. Thanks so much @javierjulio!. Wowowooooow :tada: . I don't have access to any of those repositories, not sure if any other activeadmin maintainer has.\nHowever, they don't seem to need many updates except for major Rails releases and in those cases usually the community takes care of the upgrade and Rafael takes good care of reviewing the PRs, so I think we should be good for now! :+1: . No, that was just a mistake, I meant CHANGELOG indeed! :+1: . @javierjulio I rebased this PR and added a few more cops for style changes that I saw in your other PRs. Only the last one Layout/EmptyLinesAroundClassBody does not match your changes. This is because I tried to apply the style you were introducing (empty line before class ending), but it lead to a lot of offenses, so I preferred to keep the style that's currently there (which is rubocop's default anyways).\nRegarding what you mentioned about dummy class definitions, I like multiline over single line with semicolon as well, so I guess we could add that too, although it's not the most common style from what I've seen so there might be many offenses.. I checked rubocop support for empty class definitions, and it's not there yet, although Gitlab seems to have implemented something. We would need an option to enforce the \"bad\" style :smiley:. Have a look at https://github.com/rubocop-hq/rubocop/issues/4082.. > I don't think you should make that change here though since I'll be updating the tests, but if we can do that I can enable it when I do that update.\nI'm not sure I understood the reason for not doing it here, is it merge conflicts for updating the same region of code? I think that'd be a little more work to rebase but it will free the other PR from unrelated stylistic-only changes, so it's good.\nThis is ready, by the way!. Absolutely, I meant to do it in this PR, if I didn't it's because I forgot :). I'll do a follow up PR!. I think all the changes in #459 that either remove duplicate tests, or rename duplicate tests so that they are actually run can be proposed separately independently from this, yeah :+1:. Regarding the commit fixing indendation, I think it's better to fix that in here, globally. And regarding the calls to request_params, I'm not sure.\nEither way, this PR should be easy to recreate on top of any master, since its commits are mostly automatically generate via bundle exec rubocop --auto-correct, so feel free to propose anything you think it's ready separately, and let's land that first.. I think it also makes sense to include 33de572 in #467!. Yeah, looks like the docker registry is having issues, let's retry later :+1: . Incident statuses at https://status.circleci.com/ and https://status.docker.com.. Done!. No, LintCI is on. It's just having some trouble when branches use an out of date version of rubocop, apparently. I told @timoschilling about it, he'll probably will have a look at it.\nLet me rebase this, and it should be fine.. Done!. Thanks @ionut998!. Thanks @matheusvetor. Since #479 arrived first, I say let's wait for that PR to land, and then use this PR to add ruby 2.6 to our CI. Sounds good?. Yeah, absolutely. Only thing needed as far as I recall is to add one new entry per supported Rails to the CircleCI config that uses the new ruby as the base image.. You can now go ahead and rebase this PR @matheusvetor!. Only thing is that we also need to update the job incorporated in #482 with the changes made here. I'll do a follow up PR :+1:.. Do you mean \"are able\"?. I would either use the same style as existing badges, or extract all bagde links to the bottom.. Oooops, you're right! I'm surprised this solution didn't actually fail!. After all the refactoring ivars is never converted to string, so I think this whole line can just go?. We've introduced this ?_ new style for single character string literals. I didn't know about that style and I don't think many people do, and the change is not applied consistently anways so... I would keep the regular style.. There's still this leftover ?@ thingy.. The magic comment shouldn't be necessary these days... Also, master's bundler uses __dir__ here, which is a little simpler :). I'm aware bundler's default is to shell out to git. My preferred solution though is the current one, since I find it more explicit and it doesn't cause errror messages when building the gem on systems without git installed (like very light docker images). Bundler's default approach is meant for non experienced users creating gems for the first time, because it prevents them from accidentally shipping generated (not source controlled) files with the gem.. Even if these are bundler's default, I don't think we need the prior two lines because this gem has no CLI.. I'm unsure of the difference between test_files and pattern, but if this is what the default gem skeleton uses, I'm good with it! Adding test and lib to the LOAD_PATH seems definitely a good idea :+1:.. Actually, I think I have a reason to prefer pattern over test_files. RSpec also uses a pattern option for the exact same thing, so by using it here too, a new developer doesn't need to learn a new API, no matter what test framework is in use. If you agree, we can change it back and instead propose to change the template in bundler :). I don't think we need the -browser variants here because there are no browser specs in this gem, and I'm not fully sure we need the -node variants either. Can you check?. The indentation here was correct and it seems like a bug in rubocop that it's being changed. I'll revert these changes and report upstream.. Is this still needed now that we dropped Rails 4 support?. I would drop the commit fixing the indentation, I can take care of it in the rubocop PR. But if you'd like to keep it it's ok too! :+1:. I see. I mentioned Rails 4 because it was mentioned in the commit message and it seemed no longer relevant.\n\nWhat do you think is best? Should I do that update now here or merge this in as is, then we merge #466 and I submit a new PR to replace request_params in all our tests and inline the params locally?\n\nI wasn't sure either, so I ended up inlining it myself in https://github.com/activeadmin/inherited_resources/pull/467/commits/8c50ee714ecb91e098a2ebf8251d35355aae435a :smiley: . No, I don't feel strongly, we can update it here! :+1:. I think its good now, only thing is that the diff has a mix of hash key styles that I find a bit distracting. Can be fixed, but no big deal.. Rebased but still pending to remove these changes, I'll ping you when it's done!. I see why we need to do this to avoid all the warnings, and it was such a great job to track which route is needed by each test. :+1: :+1:\nIt'd be great if each test using each route could define & undefine the route on the fly. It would make the tests easier to follow, without having the make all these notes about which test uses which route (comments that definitely make sense in the current situation). But if we can't think of something now, we can leave that improvement for another time.. Hah, so you planned to do this already? :smile: :+1: . Nice strategy to approach this, and also good idea on how to move each route to its own test! :+1: . @javierjulio Done!. Are these really equivalent? Previously, if the instance varaible was nil, we were setting it, now we're just returning nil, right?\nMaybe something like the following would be safer to preserve the behavior?\nruby\np = instance_variable_defined?(\"@#{parent_type}\") && instance_variable_get(\"@#{parent_type}\")\np || instance_variable_set(\"@#{parent_type}\", association_chain[-1]). Exactly! It might not have any real effect since the test suite didn't catch it but as you said, safe is best! :+1: . I guess we can add the whole matrix and test against all supported rubies since we are at it?. You're absolutely right, my bad! This PR is going in then!. This job is already in master. Can you make sure this PR is properly rebased?. I see that now, Github is showing the merged commit in #479 as part of this PR. I'm :astonished:.. Can you try squashing commits to see if it fixes the diff? Feel free to leave the addition of the forgotten jruby + 2.5 entry as a separate commit.. Yeah, no sure what happened here... The other PR looks great! :+1:. I was thinking about this a bit more, and I think this is a good strategy.\nWe allow any prereleases for now, but not the final version. We'll watch for compatibility from now on but hold off a new release until Rails 6.0 is released and we confirm we are compatible. Then bump the upper limit here to 6.1 for example and release a new version. ",
    "PenguinGabe": "Hi @deivid-rodriguez did you manage to resolve the issue in the end? I'm having the exact same problem..\n. ",
    "romansklenar": ":+1: \n. ",
    "ldonnet": "Sorry I havn't explained well my problem. When I edit a station and submit my form it saves all datas station and nested attributes levels.  But when I'm on a new station form with nested attributes and submit  it returns to the new station form with no visible errors.    \nHowerver the guilty is me and my code and not inherited resources. Because it fails when validation run on nested attributes station_id.\n``` ruby\nclass Station < ActiveRecord::Base\n  has_many :levels, :dependent => :destroy\nend\n```\n``` ruby\nclass Level < ActiveRecord::Base\n  belongs_to :station\n  validates :station_id, presence: true # When I comment this submit form with nested attributes works\nend\n```\nI should read some documentation about validation with nested attributes. \nI'm sorry to have disturbed you with this problem.\nLuc Donnet\n. Must use inverse_of in my models like that : http://railsguides.net/belongs-to-association-and-validate-presence-with-nested-attributes/\n. ",
    "nikolai-b": "Yep, this also surprised me. Any progress on this PR or if you are keeping it it would be nice to add it to the inherited_resources readme (happy to do so).\n. ",
    "santumahapatra": "Found the issue while trying to work with ActiveAdmin with Rails 4.2 which recommends using the inherited-resources 'rails-4-2' branch. \nThis issue might affect new users of ActiveAdmin. \n. ",
    "kaibakker": "Sorry wrong repository.. can be removed\n. ",
    "stamm": "@rafaelfranca I try to add test at first, but there are mocks everything, not using ActiveRecord who raise exception on real creating =) https://github.com/rails/rails/blob/d424df0a90a91618965c62ea213781f35bf64eec/activemodel/lib/active_model/forbidden_attributes_protection.rb#L21\n. ",
    "javierjulio": "If you are able to add a test for this, we'd be open to it. Let us know, thanks! For now I'll close this.. We are open to pull requests to address if you think its a bug! I'll close this out for now due to no activity.. Ha and now they are shut down.. For the record haha as one of the other maintainers I've always been convinced to keep it. I agree with @rafaelfranca points.. @deivid-rodriguez no need to apologize! Its fine and easy to correct. I just wanted you and @rafaelfranca to know I support having the Gemfile.lock. \ud83d\udc4d\ud83c\udffb I remember that you worked on this for bundler and thought it was a great improvement! I know since I've had to ask you for help when doing ActiveAdmin dev and it had to do with dependencies being out of sync. \ud83d\ude02. @deivid-rodriguez thanks for doing this for all the repos! And thanks to you @rafaelfranca for helping us straighten this out. Much appreciated! \ud83d\ude4f\ud83c\udffb\u2764\ufe0f. For the record, while I do have a preference for this, I don't want to argue if others feel strongly otherwise. The reason I support this change is that I think its best because:\n\nit uses less resources\nallows more frequent builds \nrequires both contributors and maintainers to be open by creating PRs here\nfeedback is both automated and community based in one place\nconsistent behavior/flow for all involved\n\nWhile it is what I'm used too, this has helped me learn and reason about why I prefer this setup so thanks!. @deivid-rodriguez thanks! \ud83d\ude04. @deivid-rodriguez yes that sounds good to me! I'll circle back and get those changes in. The one addition we'd have to do here though is figure out how to enforce entries to be on a single line?. @rafaelfranca yes I will do that. @deivid-rodriguez pointed that out too and I'm good with that. \ud83d\udc4d\ud83c\udffb I was just going off what we had in ActiveAdmin as a starting point since I wasn't entirely sure which way we'd prefer.. @deivid-rodriguez unless I'm mistaken I realized the test could stay simple. Any list item (line starting with a *) line now has to end with either a \".\" or \":\" so I didn't think how I could include newlines there. In a way they are already taken care of since it won't allow it. Lines that had hard returns I put onto a single line. Do you think that is sufficient for now or you had other ideas for what we can do here?. @deivid-rodriguez great thanks! Let me know as I'm happy to iterate on this too if you have other ideas. I plan to do the same for arbre as well as I have time.. Hmm it seems some test cases have the same name, for example, in nested_belongs_to_test.rb there are 2 cases with the same name of test_assigns_country_and_state_and_city_on_create but only one uses the create action (the second, latter instance). Some I renamed to be unique but after awhile some started to cause a failure. I wasn't sure why at the time but now its clear. The test case (method) really is being discarded, meaning its not even running that test case! Once I rename the test case to be unique I see a change in the number of test cases that run which confirm that. These will be fixed.. Ok after this we are left with just these warnings:\n\nDEPRECATION WARNING: Using a dynamic :controller segment in a route is deprecated and will be removed in Rails 6.0. (test_helper.rb:46 and 47)\nFor the parent method: \n  helpers.rb:66: warning: method redefined; discarding old parent\n  helpers.rb:66: warning: previous definition of parent was here\nFor. the parent? method:\n  helpers.rb:66: warning: method redefined; discarding old parent?\n  helpers.rb:66: warning: previous definition of parent? was here\n\nThe Rails deprecation warning I know how to resolve but I think it will take awhile because the tests are so reliant on requests. I don't know what's wrong with the parent/? methods though.. @deivid-rodriguez thanks! \u2764\ufe0f No rush on this. It just surprised me how many warnings came up when I first ran the test suite. \ud83d\ude33 I felt this was something I could do. We definitely need to do it with Rails 6 on the horizon too.\nRegarding the addition of minitest-reporters, that was only temporary to help me because I was familiar with it. I have the commit marked as TEMP so my plan is to drop them before review/merge.\nI did try the TESTOPTS=--verbose bundle exec rake option and various forms of that but it just outputs times, no test case/class names at all. \ud83d\ude1e So for example, I see a long list of just the following:\n0.00 s = .\n0.00 s = .\n0.01 s = .\n0.01 s = .\n0.00 s = .\n0.00 s = .\n0.00 s = .\n0.00 s = .\n0.00 s = .. @deivid-rodriguez you're right! Great catch! I had just commented out the require/use calls in the test_helper but I didn't actually remove the gem. I didn't think it would still apply but it does. I'll drop that commit now and just use the verbose flag. Thanks! \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez I've tried undefining methods to resolve the parent/parent? warnings but I'm not having any luck, sorry. \ud83d\ude1e Any chance you can help out?. @deivid-rodriguez that did it! Amazing. \ud83d\ude0d I'm glad I asked because I definitely wouldn't have noticed that at all! Such a simple solution too. \ud83d\udc4c\ud83c\udffb Thanks a lot!. @deivid-rodriguez tomorrow I'll start squashing related commits and then look into moving the global test resources/routes into specific tests. Thanks again! \ud83d\udc4d\ud83c\udffb. Ok great, that sounds good. \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez this is ready for review. I inlined in each test only the routes it requires. Would love to know what you think! I edited the commits so we now just have one that removes the global test routes.\nNote that the builds for Rails 5.0 emit a deprecation warning that I don't see on other versions. I'm not sure if this warning is important for us to fix.\n\nDEPRECATION WARNING: Comparing equality between ActionController::Parameters and a Hash is deprecated and will be removed in Rails 5.1. Please only do comparisons between instances of ActionController::Parameters. If you need to compare to a hash, first convert it using ActionController::Parameters#new. (called from build_resource at /home/circleci/project/lib/inherited_resources/base_helpers.rb:52)\n\nDespite this instance saying line 52, other warnings show different line numbers. Some state a different file too, for example, some report:\n\n(called from method_missing at /home/circleci/project/test/base_test.rb:66)\n(called from update_resource at /home/circleci/project/test/customized_base_test.rb:29)\n\nShould we address this?. @deivid-rodriguez ok great thanks! \ud83d\udc4d\ud83c\udffb I'll get this updated for you shortly!. @deivid-rodriguez I rebased again after merging in #469. Thanks! \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez thanks to you! You helped me out with some of the harder issues I had here. Thanks again for all the help and support! \ud83d\udc4f\ud83c\udffb\u2764\ufe0f. @deivid-rodriguez regarding commit 00d1c0bb7054b6994ca4fd7b7ac6bdd4e5c4a9d1 which ran the cases in belongs_to_test.rb in order have to do with the test cases that deal with redirects. I compared that test case against another similar one and I just wasn't noticing any difference that would suggest why it would be failing randomly.\nI noticed the redirect test cases and once I comment those out, several test runs (all random) are all green. Looking more carefully I think it makes sense since it modifies the controller to exclude certain actions. That's why we get failures that there is no index or show action on random test runs.. @deivid-rodriguez no rush on this. I'm not sure what else I can do here so I'm submitting for review. If you have any ideas or suggestions let me know. Thanks!. @deivid-rodriguez no problem at all! I'm more than happy to make any changes. I'll tackle those for you. Thanks again!. @deivid-rodriguez please let me know if I missed anything but this should now have all the changes requested. Thanks! \u2764\ufe0f. @rafaelfranca that's great to know, appreciate all the info, thanks! . @deivid-rodriguez I wasn't sure where or how to address it on the README but I figured you meant to add it to the CHANGELOG. I added it to the unreleased section. If you still want me to add it to the README though let me know. Happy to do it! Thanks! \u2764\ufe0f. @deivid-rodriguez just wanted to say thanks for getting to this so quickly at first! This change will really be a huge help with #459 now. Less Rails changes to account for in tests (e.g. request params) now. Thanks! \ud83d\udc4f\ud83c\udffb. @deivid-rodriguez sorry, since I merged in other changes there is a conflict here now. \ud83d\ude1e No rush on this but let me know when you get to it. Happy to get this in! \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez since I'm updating the tests, I'd like to address some minor inconsistencies, for example, instead of defining a class or module in one line using semi colons (class User; end) to instead require it be multi line. Is this something we could target with Rubocop? Would you be open to that? I don't think you should make that change here though since I'll be updating the tests, but if we can do that I can enable it when I do that update.. @deivid-rodriguez yes I think it was regarding merge conflicts. I don't really remember now. \ud83d\ude02 I believe that I expected to update a lot of those files but I think its fine. I will be splitting up at least one set of changes from #459 anyway. Also I probably thought you wouldn't get to this sooner. Either way its no problem. Thanks! \ud83d\udc4d\ud83c\udffb. Sounds good thanks! \u2764\ufe0f. Wow. Each build ran in less than a minute each on CircleCI, yes even JRuby builds. Recent Travis builds suggest that they regularly take a total of 11-13 minutes. This same build here in CircleCI took less than 3 minutes to complete! The second build then took less 2 minutes. So with CircleCI we'd be having an overall build time of 2-3 minutes.. @deivid-rodriguez the improvement is quite noteworthy that I think this is worth doing. Let me know what you think. If you're good with it I can make a commit to remove Travis builds. For now I've left it so you can also see a comparison here.\nAlso after enabling CircleCI on this repository it seems to have triggered this for the master branch rather than just keeping it only for this PR for now. Sorry about that. That was unintentional.. @deivid-rodriguez we definitely can use the lighter base images! I made the switch and it works great. Super fast. Let me know if you are good with this and I'll get it in, thanks! \u2764\ufe0f. Thanks David! \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez ok sounds good! Thanks. \ud83d\udc4d\ud83c\udffb I just submitted #467 with what I thought would help. I figured you were doing auto correct so I think that will make it easier for both of us. After #467 and this change, the only big merge conflict I should have to deal with is the commit 33de5724c29e9a8b79f134372a034802889ba58f.. @deivid-rodriguez ah yes that makes sense! I thought I'd deal with it but since its a bigger diff and you autocorrect, it would be better to get it in sooner. I'll do that. Thanks David! \ud83d\ude4f\ud83c\udffb. @deivid-rodriguez let me know once this is rebased and ready to go, thanks!. Hmm seems the service is down where prebuilt docker images are downloaded from. I'm seeing all 503 Service Unavailable errors. I'll rerun the workflow later today.. @deivid-rodriguez I reran this a few times and its all good to go now! Docker Hub Registry is back up and the builds are passing. Thanks!. Thanks David! \ud83d\udc4d\ud83c\udffb. Thanks guys! \ud83d\udc4d\ud83c\udffb. @deivid-rodriguez let me know what you think about this solution. You might have a better idea. I'm happy to make any improvements or changes. This is the best I could come up with.\nAlso I ran this against several failed seeds and did full test suite runs (all random order) and there are no failures now with this test running in the default (random) order.. Awesome thanks! \ud83d\udc4d\ud83c\udffb I'll get this in now.. @deivid-rodriguez I tried the \"Update branch\" action GitHub prompted me with thinking it would tell me what it would do and/or to confirm. That didn't happen. \ud83d\ude02 So it updated the branch with a merge commit. Sorry about that. Are you able to rebase? I'll approve and merge in. Thanks!. @deivid-rodriguez awesome thanks! I see Lint CI is failing but didn't Timo turn that off? So I figure it's safe to ignore but I'm now prompted that this branch is out of date with master. Let me know once its ready, thanks!. @ionut998 thanks!\n@deivid-rodriguez I think it's a good time to set up a Rails 6 beta CI build, what do you think?. Sorry I couldn't follow up @ionut998 but thanks a lot for this and the recent updates! Much appreciated. \u2764\ufe0f. Awesome, thanks again! \u2764\ufe0f. @deivid-rodriguez sorry, I may have merged PR's out of order. When I was ready to merge this, the branch showed up out of date so I couldn't merge. I figured since I had time to handle this now I'd rebase myself and get this in. Hope you don't mind. There were no conflicts. \ud83d\udc4d\ud83c\udffb. Wow. I didn't know you could do that! Very cool:\n```\n\n\n['', 'prefix', 'name', :params].compact.join(?)\n=> \"_prefix_name_params\"\n?\n=> \"_\"\n```\n\n\nAgreed though about keeping the regular style.. Yes neither am I. I just went off of past experience making a gem where I noticed regardless of the file location, I could just simply have require 'test_helper' which I liked. I figured this had to do with it which it seems too. Thanks!. Sounds good to me! I will remove them. \ud83d\udc4d\ud83c\udffb. That's what I figured. Great, I will update it to follow that! Thanks!. I have no issue with that too. I will leave it as it was then. Thanks!. @deivid-rodriguez sure that sounds good to me! \ud83d\ude04 I went ahead and made the change. I'll merge this first once the build passes. Thanks! \ud83d\udc4f\ud83c\udffb. Sure! I'll give it a try without both. I couldn't confirm if one exists without -browsers and -node but I think it does.. It worked! That's awesome, thanks! Fastest build yet. I'll squash that change into the first commit.. Sounds good thanks!. No it's just temporary. I still need to inline this in all tests which I will I just haven't gotten around to it and mostly because of #466 which touches a lot of files. I can do that now though, it's no problem. \nWhat do you think is best? Should I do that update now here or merge this in as is, then we merge #466 and I submit a new PR to replace request_params in all our tests and inline the params locally?. Yes I was unsure too. I figured it was best to fix indentation just for this test case (I undid the indentation fix for another piece in this file) as I had to update this test anyway. If you feel strongly about not having this indentation fix here though I will remove.. Ok great thanks! \ud83d\udc4d\ud83c\udffb I'll get this in now.. Thanks! \ud83d\udc4d\ud83c\udffb Some of the tests can be hard to follow and have some crazy resource setups. \ud83d\ude33 I thought I'd never figure them out as I'm not too familiar with singular resources but eventually I got it all to work. \ud83d\ude05 After I had worked my way through several test files I realized that as I added resources for each test file and ran the test suite, I had previous resources from other tests enabled. So I went back to each test file, I commented out all resources and made sure that each test file I listed there, only had what resources that file actually depended on, even if it meant it was duplicated here. This way it would be easier to start moving the resource definitions into each test file and not have them be global.\nHaha yes I had planned to do it for awhile I'm just not sure yet how I will. At most I was going to try to make building routes into a simple helper method that can be called on setup and then another to remove/reset all routes on teardown.\nAs a side note, I tried experimenting by changing the tests to be integration tests but ran into what I think is/was a dependency issue. We might not have the right dependencies to enable that. Not that the tests have to change but it came to mind as we rely on rails-controller-testing.. Ok great thanks! \ud83d\udc4d\ud83c\udffb I'll take a look now. . Resolving this as I dropped all those commits now. I have a commit where I remove all global test routes as they have been inlined in each test case. Thanks!. I think I see what you mean, because the submitted change performed an existence check which it could exist but with a value of nil so it wouldn't be the same behavior. Sure, I have no issue with changing it to that. \ud83d\udc4d\ud83c\udffb Safe is best. Thanks for taking the time! Let me change that now.. Yes I agree! I made the change so this is ready.. Actually beta2 was just released a few days ago!\nsuggestion\ngem 'rails', '6.0.0.beta2'. ",
    "stalcottsmith": "This is actually more of a question.  I used this very effectively some years ago and I am not sure if Rails has changed too much for this to be useful anymore.  What exactly is the status of this project?\n. Fair enough.  I will work on my fork if turns out to be something I want to keep using.  Thanks.\n. ",
    "alexkravets": "+1\n. ",
    "flyfy1": "+1. Got that issue from ActiveAdmin\n. ",
    "Turkish": "+1. ",
    "brianswko": "This addresses the problem in https://github.com/activeadmin/activeadmin/issues/3161\n. ",
    "yhirano55": "NoMethodError: undefined method `spec' for nil:NilClass\nI found this error in TravisCI.\nPlease upgrade bundler ver => 1.10.0.\nhttps://github.com/bundler/bundler/commit/f4481a7e3dbaf7f563e32afbe2cbbb84e3091f16\n. ^ Sorry, I'll make commit to modify .travis.yml in this PR.\n. ",
    "mamantoha": "Ok. I will use my branch :)\n. ",
    "matthewrudy": "A bunch of the tests fail because has_scope [0.7] requires Ruby version >= 2.1.7.\nWhat's the best way to resolve that,\nset all the gemfiles to use 0.6?\nCheck the ruby version and switch between 0.6 and 0.7?\n. ",
    "huerlisi": "I just upgraded my app to Rails 5 and am using this inherited_resources changes. Works like a charm!\nI'd also go with a version that removes support for ruby < 2.1.\n. ",
    "wvteijlingen": "Thanks for this merge! Would it be possible to release a new version on Rubygems so that we don't have to rely on the git feature of Bundler?\n. Any news @rafaelfranca? Would be a great help to have this released :).\n. ",
    "alfmatos": "This breaks the Scaffold generator:\nCould not find \"api_controller.rb\" in any of your source paths. Your current source paths are:\n/Users/alfmatos/.rvm/gems/ruby-2.3.1/bundler/gems/inherited_resources-4434f0ae72f7/lib/generators/rails/templates\nAny ideas?\n. This solves it in application.rb, as per https://github.com/josevalim/inherited_resources/issues/195:\nconfig.app_generators.scaffold_controller = :scaffold_controller\n. ",
    "mrcasals": "Hi @rafaelfranca! This PR addeda Version 1.7.0 entry in the Changelog file, but this version is not released in Rubygems. Could you release this version, please? I'll use the code from master meanwhile.\nThank you!\n. ",
    "krtschmr": "so what was it?\n. simple fix/workaround will be\n```\nuser.rb\nhas_many :sanctions, class_name: \"User::Sanction\"; alias_method :user_sanctions, :sanctions; \n```. give it a try yourself. it's not that this problem isn't occuring anymore with namespacing.. ",
    "hron84": "@rafaelfranca Master has a R5 compatibility? When do you expect it will be released?\n. ",
    "BenFenner": "We're using this too and would appreciate a release that supports Rails 5.\nThanks!\n. ",
    "MrMarvin": "Hi @rafaelfranca,\nthanks again for taking care of this project!\nAny news on this? Can we expect a release anytime soon?\nCheers\n. ",
    "OlegSmelov": "@rafaelfranca Ping \ud83d\ude04 \n. Here's my take on it: #418\n. Is there anything left to do? Can I help with the release somehow?\n. PR build fails the same way and for the same Ruby and Rails versions as the last master build, so I guess I didn't break anything.\n. Updated.\n. ",
    "Frexuz": "Any progress on this (for activeadmin/activeadmin#4532)? Still stopping us from going live :/\nThe fix in #418 works, but since it's not merged, I'm not sure if its safe to use?\n. ",
    "devgoyal": "As per http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/, When developing a gem, do not check your Gemfile.lock into version control. Maybe this is the issue here that Gemfile.lock is checked in. If so, can the author remove this file? Thanks.. ",
    "Fivell": "@varyonic , nice!. has_scope 0.7.1 and inherited_resources 1.7.2 were released. @juanmanuelramallo please check .. ",
    "tf": "Well it broke the build of my gem. I still think, depending on 0.x gems is an anti pattern. But this might be a matter of taste.. Yes, I see. I guess the core issue is that Bundler does not take Ruby version dependencies into consideration. In an ideal world, Bundler should be able to find out that it has to use has_scope 0.6 instead of 0.7 if I am using Ruby 2.1.0. So, while from a strict SemVer perspective, I'd argue that inherited_resource would have only been allowed to permit has_scope 0.7 in a major version update (since that's a potentially breaking change for people using certain Ruby versions), I see the pragmatic choice you made here. Might be worth a changelog entry though.. I think, it should be \"now able\", right?. ",
    "lnaia": "@deivid-rodriguez currently I'm using:\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\nI've installed nvm, w/ latest stable:\nruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-linux]\n$ RAILS_ENV=test bundle exec rails test\n/home/lnaia/.rvm/gems/ruby-2.4.0/gems/activesupport-5.0.1/lib/active_support/xml_mini.rb:51: warning: constant ::Fixnum is deprecated\n/home/lnaia/.rvm/gems/ruby-2.4.0/gems/activesupport-5.0.1/lib/active_support/xml_mini.rb:52: warning: constant ::Bignum is deprecated\n/home/lnaia/.rvm/gems/ruby-2.4.0/gems/activesupport-5.0.1/lib/active_support/core_ext/numeric/conversions.rb:138: warning: constant ::Fixnum is deprecated\n/home/lnaia/.rvm/gems/ruby-2.4.0/bundler/gems/inherited_resources-f04e0422213f/lib/inherited_resources.rb:30:in `block in <top (required)>': break from proc-closure (LocalJumpError)\n. Thank you for the update Rafael!\nOn Wed, 15 Feb 2017, 19:40 David Rodr\u00edguez, notifications@github.com\nwrote:\n\nThanks Rafael!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/activeadmin/inherited_resources/issues/428#issuecomment-280116210,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAFXSJX3SaL8HBQC6giHZilO9p4w03L2ks5rc1SrgaJpZM4MBctf\n.\n. \n",
    "maschwenk": "Ahh yes. Looks like the Rails 5.0 change about putting all params in a params hash. Will fix when home.. Phew! more involved than I had suspected. I'm pretty new to working with this backwards compatibility stuff. Now I understand why Gem owners drop legacy Rails support \ud83d\ude09 . I assume you mean major change. Also, should I leave the changelog alone like the version.rb below? Just keep the actual code changes?. see https://github.com/activeadmin/inherited_resources/pull/433#discussion_r114039528. ",
    "juanmanuelramallo": "Ok thanks @varyonic!. ",
    "maxexcloo": "Any news on this?. ",
    "luismasuelli": "Well, even if my solution is not to be merged as-is (actually it was not my intention an instant merge, but an analysis of the points and a sample attention to the issue), but just an illustrative one.\nHowever, I found quite useful my \"hack\" for my API controller (copying and directly using source lines inside inherit_resources in my custom API controller, using the currently deployed/distributed version of IR - not the line I suggested since that involves a change in IR) and in a near future I'll contribute with a better-suited change in this PR (please keep it open a couple of days until I come with a better suggestion I have in mind right now).\n\nDe: Rafael Fran\u00e7a notifications@github.com\nEnviado: jueves, 15 de junio de 2017 01:13:03 a.m.\nPara: activeadmin/inherited_resources\nCc: luismasuelli; Author\nAsunto: Re: [activeadmin/inherited_resources] Please add support for API controllers. (#438)\n@rafaelfranca requested changes on this pull request.\nI'm not sure if we want to support API controllers. Inherit Resources was made to navigational controllers, the new and edit actions for example doesn't make a lot of sense in APIs, but I'm not totally against.\n\nIn lib/inherited_resources.rbhttps://github.com/activeadmin/inherited_resources/pull/438#discussion_r122116253:\n\n@@ -27,7 +27,7 @@ def self.flash_keys=(array)\n\nActiveSupport.on_load(:action_controller) do\n   # We can remove this check and change to on_load(:action_controller_base) in Rails 5.2.\n-  if self == ActionController::Base\n+  if self == ActionController::Base || self == ActionController::API\nJust remove this conditional is you want to support API controllers along with the comment above.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/activeadmin/inherited_resources/pull/438#pullrequestreview-44201960, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ABuTnLGUtRRydEmipj9x0yitmHp3ZkwIks5sEK9PgaJpZM4N6gEd.\n. ",
    "fernandomm": "Yes, that's an option. But I guess that a lot of people expects the _url and _path methods that are defined by inherited resources to behave like the ones that are defined by Rails.\nAlso, considering that it worked fine in Rails < 5 and now it's silently failing, it looks like a bug and should be fixed. Or at least the type of the parameter should be checked and the developer should see some type of error.\nI spent some time debugging until I figured out what was happening. Others may experience this problem too.. ",
    "lcdss": "Alright! I will add more info when I get at home. Maybe can be a detail to improve the gem or it's just a bad way to do something.. ",
    "jpawlyn": "Please note there's an additional issue with the polyamorous gem - see https://github.com/activerecord-hackery/polyamorous/issues/41. ",
    "sergiogomez": "I agree, and it's related to ActiveAdmin, because it first fails initializing ActiveAdmin::BaseController.. ",
    "ionut998": "@javierjulio I just added the setup for Rails 6 beta CI build . Thanks @javierjulio, Happy to help\nHope to see this in a new release. @deivid-rodriguez according to the guideline Rails 6 requires ruby 2.5 or newer\nhttps://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#ruby-versions\n. ",
    "aratak": "It should be not reversed as @XaMuT described. Got the same issue and was surprised too.\n. ",
    "Empact": "I don't think you want .x here.. ",
    "Onumis": "historically, support for newer versions of rails was done as a patch update (1.7.1 -> 1.7.2 for example).\nsee https://github.com/activeadmin/inherited_resources/blob/master/CHANGELOG\nPerhaps this should be 1.7.4, or 1.8.. "
}