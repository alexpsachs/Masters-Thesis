{
    "johnjelinek": "I added the necessary directories for tracing, but unfortunately I don't see anything that gives me additional clues to this issue. Please let me know how I ought to proceed.\n. I found the issue (that was difficult to debug with ssl turned on):\nHTTP Error 500.19 - Internal Server Error\nThe requested page cannot be accessed because the related configuration data for the page is invalid.\n```\nConfig Error: This configuration section cannot be used at this path.\n              This happens when the section is locked at a parent level.\n              Locking is either by default (overrideModeDefault=\"Deny\"), or set explicitly\n              by a location tag with overrideMode=\"Deny\" or the legacy allowOverride=\"false\". \nConfig Source   34:       \n                35:         \n                36:       \n``\n. Huzzah! Problem solved! You've got to set SSL Settings to Read/Write in IIS.IIS>Server>Feature Delegation>SSL Settings>Read/Write`\n. ",
    "leastprivilege": "Thanks!\nFrom: Jakka Prihatna [mailto:notifications@github.com]\nSent: Donnerstag, 4. Oktober 2012 15:54\nTo: thinktecture/Thinktecture.IdentityServer.45\nSubject: [Thinktecture.IdentityServer.45] Possible Typo in Thinktecture.IdentityServer.Core\\Endpoint.cs (#2)\nHi Dominick,\nI think there's might be a little typo in Thinktecture.IdentityServer.Core\\Endpoint.cs here (07112b1https://github.com/thinktecture/Thinktecture.IdentityServer.45/commit/07112b1c79b8ae8f5f2535f098541a1ae656a829)\nvar hrd = new Uri(baseUriString + Paths.WSFedHRD);\nbuilder = new UriBuilder(passive); // I think line this should be new UriBuilder(hrd);\nbuilder.Scheme = Uri.UriSchemeHttps;\nbuilder.Port = httpsPort;\nep.WSFederationHRD = builder.Uri;\nCMIIW\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.45/issues/2.\n. fixed.\n. They should - all roles that don't start with \"IdentityServer\" should go in the token. \n. This is the right code:\nprotected virtual IEnumerable GetRolesForToken(string userName)\n{\n    var returnedRoles = new List();\n```\nif (Roles.Enabled)\n{\n    var roles = Roles.GetRolesForUser(userName);\n    returnedRoles = roles.Where(role => !(role.StartsWith(Constants.Roles.InternalRolesPrefix))).ToList();\n}\nreturn returnedRoles;\n```\n}\nin ProviderClaimsRepository.cs\n. So I double checked the code - it is working fine here.\n. And you are looking at the wrong code.\nThis is the right file:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core.Repositories/ProviderClaimsRepository.cs\n. The OAuth controller calls into sts.TryIssueToken. This ultimately invokes the logic in TokenService.cs - and this uses the claims repository. Put some breakpoints into TokenService.cs\n. There are two types of roles - the ones that start with IdentityServer are for internal use (authZ in the UI) - all the others are \"for tokens\".\n. And delegation?\n. We will certainly focus on Server/IaaS deployment first. Once v2 is done we might consider a PaaS specific setup and repositories again.\n. Thanks!\nWell - making a PaaS deployment package is significantly different from IaaS/On-Prem. And extra work.\nI want to have a stable On-Prem version first, before i think about PaaS.\n. Hm works for me. Roles that start with \"IdentityServer\" don't make it into the outgoing token. All other roles for a user do.\n. thanks!\nIs the protocol enabled in config?\n. In the admin UI - there is a protocols section where you can enable/disable protocols\n. You might get a 404 when you call the endpoint with the wrong parameters. See the Tests project in the solution for samples how to call the endpoint.\n. Ah you are using the newest build. This requires client authentication by default (the ctor on OAuth2Client that takes a clientId and secret) - otherwise you will get a 400 (plus an error message in the response). You can also turn off client auth for now in the admin UI.\nRight now there is no GUI for configuring clients - but you can have a look at the Clients table in the config DB.\n. Have a look at the constants in the test project. You need to create the corresponding users in your db.\n. super!\n. Which is in accordance with the OAuth2 spec ;)\n. CORS is currently not implemented. In one of the next builds though...\n. Yes, that's CORS. As I said this is not supported right now \n. It is available in the current bits. \n. That's this sample:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API\n. right ;)\n. Cool. Glad it works. Logging is on the todo list ;)\n. What exactly are your use cases?\nMost parts of idsrv v2 are a direct port from the v1 version - v1 has almost 10K download - so these code paths are well tested. Other parts are new.\nI would put it in production - at least for the most parts.\n. OK - pretty all of that is new ;)\nwhat do you mean with \"saml protocol\" - We don't support that.\nOAuth is new - and not done yet.\nFederation is new - and also not fully done.\n. Do you want to comment on the \"SAML protocol\" thing. Or should I close the issue?\n. We are working on it. It is open source - run your tests and if you find a problem let us know.\n. I think you have to do both a 302 + location header and the title bar html code\n. Fix it? Close?\n. does this help?\nhttp://wurfl.sourceforge.net/\n. Good point.\nAlso - Paul - for signout via HRD - i should rather do a redirect e.g. to the ADFS signin endpoint, right?\n. thanks!\n. ClearEndpoint now sets the path.\n. (partially) closed. HRD signout problem will be addressed separately.\n. Done. both.\n. OK. keep it coming ;)\n. OK. Thanks. It is indeed good to have a documentation for that. We won't do any changes for it - if not needed.\n. SignOut is not fully done yet. It's on my todo.\n. I'll look into it. thanks!\n. fixed. thanks!\n. Fork and upstream merge using git. That's how you can do your own changes but keep the link to the original repo.\n. yep.\n. Will do that starting with the RC bits (next week).\n. You can definitely implement that ;) But it requires some of re-work of the current source code. \nWe have not planned to do that in the near future.\n. WebSites do not even support SSL right now...when they start doing that we might consider finding a way to make it all work ;)\n. No. And it doesn't make sense.\n. Yep.\nTLS/SSL is a requirement OAuth and for IdSrv as well. And I don't agree. SSL gives you important features like server authentication, replay protectection etc.\nYou can remove the filter in FilterConfig/ProtocolConfig yourself. But you've been warned.\n. Thanks.\nI want to keep both entities (users and mappings) separate. This is because of the membership legacy and we have to live with that in v2.\n. the redirect URL is missing\n. Hm - No. That could have many reasons...\n. Did you get it to work?\n. JSNotify is deprecated. Use the OAuth2 implicit flow instead.\n. There are two wreply related config settings-\neither specify an explicit return url in the relying party registration in IdSrv\nor specify \"Allow ReplyTo\" on the WS-Federation protocol configuration.\nThe fixed return URL is preferred.\n. Just to close that - no code modification needed.\n. The browser should redirect from the IdP back to the fed gateway - and then back to the RP. Are you sure all return URLs are configured correctly?\n. The IdP RP return URL must point the WS-Fed endpoint of the Fed Gateway.\nThe Fed Gateway IdP WS-Fed endpoint must point to the ws-fed endpoint of your IdP\n. There should be no case where the Issuer URI is used for a redirect - make sure you have configured return URLs everwhere... and maybe start using proper realm/app names - it would be less confusing...\n. but request.Realm is the realm of the RP - when going to an upstream IdP - the realm must be the issuer URI for the fed-gateway.\nSo i still think you have somehow messed up the return URLs somewhere in the chain.\n. So what I think is going is this:\nWhen the Fed-Gateway redirects to the IdP it sends its issuer URI as the realm - which is btw totally correct. \nOn the IdP you don't have a return URL for this realm configured - so IdSrv will use the realm URI to redirect - which would explain why you see a redirect to the issuer URI.\nUse the /issue/hrd endpoint as the return URL on the IdPs. If this is still not solving the issue, I need to repro.\ncorrect?\n. OK - I must repro that exact scenario myself. I am pretty sure it works since I have a similar scenario with ADFS here.\nMaybe it's a same machine issue..\nThis will take some days, I am pretty busy right now.\n. Great!\nHave a look at IClaimsTransformationRulesRepository. There is a default implementation called PassThruTransformationRuleRepository.\nYou can provide your own implementation and register it in repositories.config.\n. Great! I will close this issue.\n. Only users in the \"IdentityServerUsers\" role are able to request tokens. That might be error #1.\nFor the AntiCSRF error message - that is happening in your app - not IdSrv right?\n. And I am asking the same question - where does this error occur? In IdSrv or in your application?\nMy assumption is that it is in your application - and the error message should be quite clear. You have to set a claim / claim pair that uniquely identifies the client for anti CSRF.\n. This is currently not supported. WIF supports it, but it is not implemented in IdSrv.\n. Yes that's the plan. In a few weeks hopefully.\n. Hi Bruno, \nright now we don't have plans to implement i18n. We will look into that after v2 RTM'd.\n. Have a look at the OAuth posts in the wiki.\n. Right now there are some blockers - especially for Azure Web Sites. \na) Web Sites currently don't support SSL for custom domains\nb) There is an open issue with certificate loading in Web Sites\nOnce this is fixed (by Microsoft) this is something we will look into.\n. v2 doesn't have a proper Azure version right now. Maybe after RTM (which is very soon).\nBut you could have a look at v1.\n. Here's a walkthrough:\nhttp://weblogs.thinktecture.com/cweyer/2013/01/running-thinktecture-identityserver-v2-in-a-windows-azure-web-role-from-zero-to-hero-a-walkthrough.html\nHTH\n. That's strange - works for me ;)  Can you confirm you are using the latest source version?\n. OK. Good!\n. I currently have no implementation for wfresh. It's on my feature list, but post v2 RTM.\nAlso I don't think that the main purpose of wfresh is to control token lifetime, but to determine if the user should be re-prompted for authentication at the IdP. (http://docs.oasis-open.org/wsfed/federation/v1.2/os/ws-federation-1.2-spec-os.html).\nThat said - in v2 you can control token lifetime per RP (see the RP registration page).\n. Yes that's indeed useful. We'll discuss if we can add that before v2 RTM or not. thanks!\n. OK. Done.\nIn Admin UI under Users there is now a Profile link.\ntwo caveats:\n- You have to create the profile definition manually though - see configuration\\profile.config.\n- This is hardcoded to use ASP.NET profile - no other data source is supported for now.\nthanks Brock!\n. Hi,\nYes it is planned. But not for very near future. After v2 rtm.\n. There is a prototype for code flow in the Refresh-Tokens branch.\n. It is now in the main branch. Some bits are missing (mainly admin UI). There is also a sample for it:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security/Clients/OAuth2CodeFlow\nIs that what you are looking for?\n. Cool - but I am reluctant to do that, that's a security concern. Facebook was hacked that way.\nhttp://homakov.blogspot.no/2013/02/hacking-facebook-with-oauth2-and-chrome.html\nhttp://homakov.blogspot.no/2012/08/saferweb-oauth2a-or-lets-just-fix-it.html\n. It's anti CSRF protection. That's needed. \nBut does not solve the problem with open redirects.\n. Do you want to post the details here, so I can investigate a little further?\nWhat did you do on the DNOA side, what the callback they are expecting?\nthanks!\n. OK - that sucks. If there is no way to tell DNOA to stop doing that, then this is unfortunate. I will require exact redirect URI matches. \n. Thanks @AArnott - @bob030 does that work for you?\n. A Regex check is what just got Facebook hacked - just saying ;)\nThe URI class gives you the ability to distinguish between the URL and query strings.\nI will close this for now. Maybe we allow query strings in later versions - but would really prefer Microsoft to fix their code.\n. Yep. And yes it is scary.\nRegex is too hard for me, So I can't comment on yours ;)\n. You are right - right now realms, scope and relying parties are the same thing in IdSrv. This has historical reasons.\nWould it be OK to create a realm for each of your tenants, like \nhttps://api.myapp.com/t/tenant1.com\nhttps://api.myapp.com/t/tenant2.com\netc...or do you need more fine grained identifiers?\n. Well - do you really want to use the same signing key for every tenant? I mean you could do that, but then your complete isolation logic hangs off the audience...\nYeah .- to change IdSrv to support that (without affecting other parts) would require some more work..something I will start thinking about when we have released v2 (which is this year).\nAlso keep in mind that right now, IdSrv does not support the code flow - which i think is what you need for web app clients.\n. No bad idea - just make sure validate the audience all the time ;)\n. Well I guess there are two approaches - either IdSrv knows about the user to tenant mapping and issues the corresponding tokens (with e.g. a claim describing the tenant) - \nOr IdSrv issues a more general token and you do the isolation based on user identity in your app code.\nAuthenticating the client is only a protocol detail.\n. The properties collection is for local processing only, it does not get serialized. Only claims get serialized.\n. This is the way it is ;)\n. Thanks. Fixed.\n. Have a look in IIS settings - at the server level \"Feature Delegation\" - some setting might be read only (like SSL) - try changing that to read/write. Let me know.\n. Maybe it is a different section - try setting them all to read/write. You have create an application in IIS don't you?\n. The endpoint would https://localhost/sts/issue/wstrust/mixed/username\nAlso - do you have ws-trust enabled in the admin ui?\n. Yep - this is a bug. thanks!\n. This comes closest:\nhttp://leastprivilege.com/2012/11/01/oauth2-in-thinktecture-identityserver-v2-resource-owner-password-flow/\nBut I recommend using JWT instead of SWT.\n. Have you enabled OAuth2 in the protocol config like shown in the blog post?\n. The /token endpoint.\nI will write a blog post later how to enable tracing in idsrv...this will probably help.\n. http://leastprivilege.com/2012/12/28/enabling-tracing-in-thinktecture-identityserver/\n. Well - I removed SWT support for now. The token handler has some bugs.\n. Hi, \nsorry - i never used the sharepoint object model.\nOr is the question really - \"how to request a SAML token from IdentityServer?\nbtw - the fedauth cookie is NOT a SAML token.\n. That looks like a binding mismatch.\n. Did you update the Nuget as well?\n. So what?\n. Wanna add them?\n. OK. No one seems to be able to reproduce that. Besides my (maybe weird) setup here. Closed for now.\n. yep - thats a bug. already fixed.\nIt's issue/wstrust/mex\n. The /mex endpoint is not browser friendly - it is a SOAP version of /issue/wstrust?wsdl.\nThe WS-Trust protocol and at least one endpoint need to be enabled of course. \n. You were on my todo list ;)\nWanna tell us how you solved it so other can benefit from it?\n. Well - I guess you could hold on to the original token in the app that holds the SL control. Then request that token and use that to authenticate with the service. Use the saveBootstrapContext setting to preserve the token. (just an idea)\n. Message end points don't need ssl. They are available over http only.\n. When you want SSL use the mixed mode endpoint. The whole point of message security is, that no SSL is required.\nI'd go for the mixed endpoints.\n. Can I close this?\n. Thanks! I will look into it.\n. Just to understand - will it be good enough to use the SSL port from config for the redirect?\n. OK - just want to make sure this is what you need.\n. I mean how do you get to the HTTPS config setting in the first place?\n. ah ok. cool. Will fix it.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/5347a8edc1fcbaa8d9597c88085d8a22ac7d0001\nDoes that work for you?\n. Well - works for me ;)\nI have SSL port set to 444. When i come in via\nhttp://idsrv.local\ni get redirected to \nhttps://idsrv.local:444\nWhy do you need the * binding for SSL on port 4567?\nCan you debug?\n. IdSrv uses the machine key session handler by default. We are seeing other issues with the machine key - but more wrt migration of the membership database from local to SQL Azure. We are still investigating on this.\nAs soon as we have a definitive answer from MS we will write a detailed blog post.\nBut as Brock said - IdSrv itself is working fine in a web role with load balancing.\n. Let's keep it open until the blog post is done.\n. @richard-hubert Machine key works fine. you need to synchronize the keys over all nodes of course.\n@esemle which cert is on the load balancer? SSL?\n. Yes and also edit the bindings - if WS-Trust is important for you.\n. This is fixed already.\n@brockallen did you test whr as well?\n. fixed here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/6bf510fd686bc1be69908db8fcba149b10e55e21\n. There will be a 2.1 soon with all the post v2 bugfixes - but in between there's the source code only.\nrun build.bat several times (that should help).\n. ...or open in VS und do a publish (right click the web site project).\n. Thanks! @brockallen will look into that.\n. OK I see - well since this is not part of the WS-Federation spec, I am reluctant to implement that. But I added it to my huge \"features list\". Feel free to add that feature to your own implementation for now.\n. ADFS supports AD accounts only yes. You would need to implement SAML2 yourself. Or buy a product instead (e.g. ping identity).\n. I don't know :) I never implemented SAML2p myself. I can't see where you are validating the token though.\n. and where are you validating the signature?\n. OK.\n. Which code? IdSrv does not support SAML 2.0 idps.\n. .NET/WIF does not support SAML2p - only SAML2 assertions over WS-Fed.\n. Windows FTW!\n. I am pretty sure I used standard ASP.NET profile. But that's a long time ago. \n. ProviderClaimsProvider sounds right.\n. In ADFS you can have the choice between ADDS (ADFS) and ADLDS (StarterSTS) on the home realm discovery page. You can also bypass the hrd page by using the whr parameter in ws-fed.\n. Not really. You would need to modify the claims and claims-transformation repositories for that.\n. What does that mean?\n. Do you have a good use case for it? ;)\n. Well - every issuer has the issuer URI already. And there is also the Issuer property on claims that is used to distinguish between IdPs.\n. Well - if you want your per IdP static data that every RP gets to see. There you go.\nThat's the only solution I have right now.\n. You can enable support for wreply in the ws-federation protocol configuration in the admin section.\n. This lower part is for OAuth2 only - select WS-* in the type dropdown for ADFS.\n. You can add IdSrv itself as an identity provider. Then it will show up in the list as well.\n. OK. Glad you figured it out!\n. Do you have a blog where you want to write about the solution?\n. Not built in. But a generic reverse proxy (e.g. Apache) should be fine as well.\n. Here's a sample that is using identity delegation:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/MVC%20and%20WCF\nI've written a bit about it:\nhttp://leastprivilege.com/2011/05/24/requesting-delegation-actas-tokens-using-wstrustchannel-as-opposed-to-configuration-madness/\nHTH\n. No, sorry.\n. We are currently working on v.next - and yes MFA is \"in\".\n. Could you explain what this means: \"So if I once logged into one of them, I'd like to access other RPs from the code.\"\n. OK.\nWell - the pre-req for all of this is that you establish trust (in all permutations). The easiest would be if all RPs would use the same STS. If that is not possible - you can make them trust several STSes. If this makes sense from a security point of view is up to you to decide.\nYou have to:\n- add all issuers to the issuer name registry\n- accept all combinations of audience URIs\n. This thread is closed. Open a new one.\n. Thanks!\n@brockallen will look into it.\n. Sorry for the delay - we are all super busy right now...\n. For consistency with the signing key thumbprint...\n. Hi, \nthis is currently not supported. And is also not as straightforward.\nI would need to verify the signature of the incoming JWT. But that is RP specific (unlike SAML where there is one (asymmetric) signature for all RPs).\nWhat do you want to do?\n. hm - OK. Well I don't understand why you need delegation at all - you are in a trusted subsystem.\n. Maybe - I haven't tried it.\n. I am closing this for now. Let us know when you made progress. \n. Have fun ;)\n. The fedauth cookie(s) need to be cleared. You can use the signout method on SAM or FAM (iirc).\n. Is that .NET 4.5?\n. .NET 4.5 does not have IClaimsPrincipal. The sample was written against WIF 1.0 i guess.\nUse ClaimsPrincipal instead, and the config option is now called SaveBootstrapContext.\n. That's strange IdSrv v2 does not use the DPAPI session handler anymore. I am using the machine key handler now.\n. Sounds good.\n. I heard that http://simplesamlphp.org/ is what PHP people use for WS-Federation.\n. I don't know how it exactly works for the PHP side - but this seems to be a scenario that other have successfully implemented before.\n. Well - my reply means that I personally haven't tried it. But I know that others were successful with that.\nBut you are right - it is not a point & click experience ;)\nI found this:\nhttp://code.google.com/p/simplesamlphp/source/browse/trunk/www/wsfed/sp/prp.php?r=2237\nWhich makes sense when you know WS-Federation.\n. In MVC you put the [Authorize] attribute on controllers that need authentication.\n. maybe there is an < authorization > element in web.config?\n. Hi, \nsure - \nfirst you need to implement IUserRepository interface for authentication logic. Then IClaimsRepository for returning the claims that should go into the token.\nYou then register your implementation in the web site configuration/repositories.config file.\nLet me know when you have more questions.\n. I never tried it. Why do you want to use SimpleMembership at all?\nAnyhow - you should debug to find out what / where it breaks.\nAlso this might be useful:\nhttp://leastprivilege.com/2012/12/28/enabling-tracing-in-thinktecture-identityserver/\n. Try a dummy ClaimsRepository. See if that changes things. You need to debug i guess.\n. The web site login and a token request a different things. You need to make a token request and check the logs + debug.\n. So - where are all the blog posts?? ;) Can I close this?\n. So what exactly is the problem that's blocking you, @hhrahman ? \nSimply implement the two interfaces and you are done...let me know when you have questions...\n. csharp\nnamespace Thinktecture.IdentityServer.Repositories\n{\n    public interface IUserRepository\n    {\n        bool ValidateUser(string userName, string password);\n        bool ValidateUser(X509Certificate2 clientCertificate, out string userName);\n        IEnumerable<string> GetRoles(string userName);        \n    }\n}\nImplement ValidateUser for authentication (certificates are optional) and GetRoles for returning the roles for IdSrv authorization (should return IdentityServerUsers and/or IdentityServerAdministrators).\n. csharp\nnamespace Thinktecture.IdentityServer.Repositories\n{\n    public interface IClaimsRepository\n    {\n        IEnumerable<Claim> GetClaims(ClaimsPrincipal principal, RequestDetails requestDetails);\n        IEnumerable<string> GetSupportedClaimTypes();\n    }\n}\nImplement GetClaims to return claims for the user and GetSupportedClaimTypes for returning all possible claim types for metadata.\n. At last, register your implementations in the repositories.config. done.\n. OK?\n. Then the type name in repositories.config is wrong.\n. Maybe that's wrong - I can't know :)\n. IdentityServer2 is not based on OWIN.\n. Then you are in the wrong repo ;) Please use the issue tracker of IdentityServer3\n. Yep - you can also reference the nuget and remove the projects.\nJust play around with it - if you have specific question - feel free to ask them here.\n. something like this? \nhttp://leastprivilege.com/2012/11/01/oauth2-in-thinktecture-identityserver-v2-resource-owner-password-flow/\n. http://leastprivilege.com/2012/11/06/oauth2-in-thinktecture-identityserver-v2-using-the-implicit-flow-with-windows-store-clients/\nor maybe this...\n. Or the OAuth code flow...that's almost ready..\n. With \"normal\" you mean WS-Federation?\n. OK - got it. Will reply tomorrow.\n. Well - basically you can use this approach - just with IdSrv instead of ACS:\nhttp://blogs.msdn.com/b/vbertocci/archive/2013/01/09/using-the-jwt-handler-for-implementing-poor-man-s-delegation-actas.aspx\n. I haven't tried it yet - but it should work by setting the \"Default WS* token type\" in global config to:\nurn:ietf:params:oauth:token-type:jwt\nFor the RP side - follow Vittorio's post.\n. In the MVC app you would need to use Microsoft's JWT handler - like in Vittorio's post.\n. OK - that might be a bug in my token handler. I am using base64url encoding (as the spec says) - but for embedding in a ws* binary security token that might be wrong... \nWoud you mind trying to use the Microsoft JWT handler in identity server (you can exchange the impl. in identity.config) - i haven't tried that. \nSorry that you are my beta tester ;)\n. I can also fix my token handler - that would be even preferred ;)\n. I am sure vittorio describes that in his post. Hm - maybe he doesn't...\nI think i found the problem in my handler. I will fix that tomorrow. Would be great if you could give that a try.\n. IdSrv does symmetric only. \nSorry it is so painful. I meant to test it before someone else does ;)\n. Here's a post how to configure the MS handler programmatically: \nhttp://pfelix.wordpress.com/2012/11/27/json-web-tokens-and-the-new-jwtsecuritytokenhandler-class/\nYou could run that from the FederatedAuthentication.ServiceConfigurationCreated event.\n. Inside the event handler you get access to the configuration - especially the token handler configuration. From there, there must be a way to set the symmetric key for validation. That might not be obvious. \nI need to have a look as well - but it is rather late her now. tomorrow.\n. OK - So I can confirm that this is a bug in my JWT handler. I am not encoding correctly to base64 in the case where the token gets embedded into a  element.\nNot sure when I will have the time to fix it.\n. There is definitely a way to configure the Microsoft one...i just had no time to look into it.\nMaybe leave a comment on Vittorio's blog along the lines of \"how to validate a symmetric signature using config\"\n. OK. Keep us posted!\n. It depends how you want to design your system. @jmischel was looking more for an \"identity delegation\" approach. That may not be needed necessarily. You can also authenticate the direct caller and pass the necessary information via the business calls. As I said it depends.\nEither way - we are still at a very early stage with building real systems with these technologies. Expect things to become easier.\n. As you can see in the WS-Federation specification - the wctx (context) paramater is used to roundtrip arbitrary information between relying party and token services. The information is opaque from an STS point of view - and just copied back to the RP.\nThe ReplyTo determines where the STS redirects back after token issuance is done. This typically comes from the RP registration. You can also allow the RP to transmit this value (but you need to enable that in the protocol config).\nThe Microsoft implementation on the RP side (WIF) internally uses the RU parameter to find out where to redirect within the RP.\n. Absolutely. This is what wreply is for. IdSrv fully supports that.\n. In AccountController.SignIn you can pass additional claims to the token engine - these claims should be visible as part of the claims principal in your repositories.\n. query string should work.\n. IClaimsRepository is for generating tokens and metadata only.\nThe frontend calles IUserRepository.\n. You can - but have to do that yourself. I would use the ClaimsTransformer as a starting point, yes.\n. Well - I never tested this - but there are several things you have to change to make it work over clear text.\nThe cookie issue you are seeing is most probably related to the configuration in identityServices.config (cookieHandler has a requireSsl (or similar) attribute)\nIMO you should get proper SSL up and running. You'll need it anyways.\nMaybe this is worth a try\nhttp://www.instantssl.com/ssl-certificate-products/free-ssl-certificate.html\nhttp://www.startssl.com/?app=1\n. You don't need to use localhost. You can use whatever domain - also locally.\nAnyways - right now IdSrv requires HTTPS out of the box. I added it to my \"wishlist\".\nthanks!\n. You can turn off the SSL requirement on the WS-Fed protocol config page.\n. Have you also turned on WCF tracing (System.ServiceModel) ?\n. Eventlog?\n. Sorry - no idea. Can you repro that on another IIS installation? Let us know what you find out.\n. OK?\n. No currently this is \"only\" a federation gateway (very much like ACS). Maybe we add some account linkage features in the future. But maybe not.\nYou can run claims transformation between the ext IdP and the RP though.\n. You can do that by implementing IClaimsRepository.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core/Repositories/IClaimsRepository.cs\n. OK?\n. Yes thats possible.\n. Not sure I follow. This is the wrong repo for idsrv3 Questions\nSent from my iPhone\n\nOn 07.06.2015, at 19:07, Umair Ali notifications@github.com wrote:\nHi Leastprivillege, does that above link is valid for idsvr3...??? If not, is there anything else for v3...???\n\u2014\nReply to this email directly or view it on GitHub.\n. I don't see a reason this should not work.\n. Any news?\n. The protocol is WS-Federation. This is not .net specific at all. You need to check if you have support for that in your various tool kits.\n\nThe fedauth cookie is .net specific. But that's ok, you wouldn't even share that cookie between .net applications.\n. Sure, you can use WCF/WS-Trust for that. \n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core/TokenService/TokenServiceConfiguration.cs\nThe standard ctor requires MEF.\n. Yeah - i need to change the configuration class to allow setting the repository in the ctor.\n. I changed the code. Do you need a Nuget?\n. Sorry, that was the wrong branch. I guess you'll have to wait a few more days.\n. You can PR if you want. But make sure it all still works out of the NuGet/self hosting context ;)\nYeah - MEF is a decision that I regret today. But that's the way it is right now - on my todo list for v3. Amongst many other things ;)\n. So can I close this?\n. OK. But not anytime soon.\n. Oops. Sorry. Wrong thread.\n[AllowAnonymous] is the right way of doing it. What's wrong with it?\n. OK?\n. You would need to modify the signout view in IdentityServer - since I first have to render the iframes, I cannot do the redirect directly - but you could do it in JavaScript.\n. How did it pan out? Should I close this?\n. AFAIK the spec does not state what exactly should happen with the reply URL. So it is up to you.\nYou definitely need the view to contact all RPs - but be sure to check the WS-Fed spec yourself.\n. The signing cert must be in \nMachine/Trusted Root CAs - or you turn off validation in  since you already specified the signing cert in the issuer name registry.\n. This might be related yes - how is that different from the InMemoryHost sample? The sample works.\n. I am currently too busy to look into that. I would suggest you start with my sample (which works) and go from there.\n. OK. Thanks!\n. In theory ws-fed supports this via the wfresh parameter. But this is not implemented in IdSrv.\nYou could sign-out the user first, and then sign him in again. This requires a bit of fiddling with the return urls and the  signout page in IdSrv - but is the only way I can think of with the current code-base.\n. Windows authentication is certainly possible, but I don't have guidance for you. I'd need to go through that as well to test it. \nEspecially if you are looking for an SSO (Windows integrated authentication) experience - if forms style authentication is OK for you - then you could certainly do something like the contrib project. But that would need to be updated to v2.\n. Cool. Do you want to write a blog post about it?\nThe oauth error is unrelated I think. \n. Why do I need to pull anything?\n. any update?\n. So do you want to document what you did - or should I close this?\n. The current version has not AD integration.\n. See the wiki \"Extending IdentityServer\"\n. We need to do that even per client. Windows store apps use a redirect URI for ms-app:// and since this never goes over the \"wire\" it's OK.\n. Could you trace the whole interaction with fiddler and upload the trace file. That would help.\n. Can you provide a trace?\n. OK?\n. Hi, \nthanks a lot. \nAs I said before - I won't merge that all into the core IdSrv. I rather want a separate assembly and we will create interfaces to that.\nBut leave it as is for now - I need to have a look at the code first. As soon as I find some time.\n. Well - the problem is, that the SAML component used in this PR has a license that is incompatible with our license. IOW - SAML support would need to be created as a \"plugin\" and thus separate from core IdSrv. We don't have resources right now to make that happen.\n. Hm - hard to tell. Have you tried v2?\n. any news?\n. OK. thanks for the update.\n. Technically - this is identity model not identity server. But have you tried setting the DefaultAuthenticationScheme like i told you in our email conversation?\n. ?\n. Here's a WCF sample\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/MVC%20and%20WCF\n. OK? Can I close that?\n. Github is the best place. Use the issue tracker.\n. Why do you want the HRD screen of IdSrv - when using ACS this is your HRD.\nMake sure that you don't mix up realms and reply URLs. We do an exact comparison of the realms.\n. Sure, \nwhen you want to send tokens to ACS you need to register it as an RP in IdSrv.\n. Well - you need to set the realm name of your ACS in IdSrv - that's case sensitive IIRC\n. You can of course also enable tracing to see what realm ACS has actually sent. See the wiki for instructions.\n. OK?\n. Well - right now IdSrv does not support Google etc logins for web APIs. So @Ruudvdl  will surely help you out with using ACS.\n. see here for a sample:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/MVC%20and%20WCF\n. IdSrv does WS-Federation only right now - AFAIK SaleForce does SAML2p.\n. As of the newest release we hash the client secret. You won't be able to see it anymore.\nTake note of the secret before you save it to give it to the client dev.\n. It's one way, right.\nThanks a lot - let us think about our next steps. I'll get back to you! Or do you have ideas where you'd like to improve things?\n. the home realm parameter is for the federation gateway. Why do you want to pass it downstream?\n. Have a look at the WS-Fed spec - the home realm parameter gives the federation gateway a hint which identity provider to use instead of showing the HRD screen.\nWhat you are looking for is not specified by ws-fed to my knowledge. You would need to do a non-standard extension with a custom query string... \n. Weird - I already answered that..but github \"swallowed\" it.\nhttp://leastprivilege.com/2012/11/01/oauth2-in-thinktecture-identityserver-v2-resource-owner-password-flow/\nDoes that help?\n. great!\n. What's a source?\nThe profile feature is backed by ASP.NET profile - that means a) you need to use providers (it won't work when you have a different database underneath) and b) you need to define these properties statically in web.config (or in profile.config in our case).\n. You could come up with a list of properties from the standard claim types, like Gender, HomePhone, Country etc...\nAnd then special case them in the provider claims repository to turn them into the their http://schemas.xmlsoap.org/ws/2005/05/identity/claims/... representation.\n. Well - as i said it would be nice to special case the standard ones. But no one needed that feature so far. \nYou also don't need to modify any code for adding new ones, but config needs to be modified - but that's due to how asp.net profile works.\n. I added support for some of the standard claim types. And a way to extend that (in code for now). It's in the \"Microsoft-JWT\" branch for now, but will merge soon.\n. Merged into main.\n. @grahamehorner I agree that this would be a nice feature for certain situations. But understand that strictly speaking, identity server is a protocol head (for various security protocols) over an existing user management system. Many of our customers use it exactly like that. They also don't use membership, roles and profile providers but their own existing databases and libraries.\nYou also have to be aware to you are increasing your attack surface considerably when you enable all these self service features like lost password etc. Not everybody needs that.\nThat said - @Ruudvdl - is your code pluggable enough so we can optionally enable these features in a standard IdSrv installation. If yes - I'd be interested in having a look so we can make this an optional component (with an enable/disable switch in config).\nwrt to metadata - this is not a security risk and many tools (ADFS, VS add-in) require anonymous access to the metadata endpoint. You can disable metadata btw in config. But thats security by obscurity.\n. OK - and the ServiceBus thing - do you actually have a real use case for that - or is that more \"playing around\"?\nWe can create a Contrib project for sucht things - if you are interested. The core idsrv should stay compact (and with  the smallest attack surface as possible).\n. As mentioned earlier, it would be better to provide a plug-in to the original codebase. Otherwise we will end up with two fundamentally different branches. One with more user management features, the other with security updates...\n. I agree with @bob030 - the user management bits should not be part of the core STS. We could create a contrib project if you like to share it.\n. I see 3 options -\na) build something that runs \"inside\" of IdSrv (don't like that too much)\nb) build a separate user management module, that runs independent of IdSrv with shared db access\nc) model user management as a Web API and have a separate app call into that\nopinions?\n. Moved to here for those that want to help out...\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212\n. see https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/152\n. You don't need to supply the user's credentials. The sample supplies the credentials of the middle tier (the party that delegates the identity).\nBut delegation is a WS-Trust feature and is made for SOAP.\nI guess your real scenario is, you want to authorize the web app to access a REST service on behalf of the user. That's OAuth. Have a look at the wiki (code flow).\n. Already supported.\n. No this is not supported. sorry.\n. This is actually an anti-pattern. Users should not be encouraged to enter their google password in your application (as an example). As a consequence, identity providers like google, facebook etc. don't even offer active authentication endpoints.\n. WS-Trust and OAuth2 resource owner flow allow active token requests. This means that you own the user account (e.g. a user database).\nGoogle etc. support passive only.\nRight now IdentityServer supports using your own account database (both passive and active) and federation with Google etc via passive (WS-Federation).\n. Yes - the easiest would probably be WSTrustClient.\n. Did it work. Can I close this?\n. you can turn off the role check globally in the admin UI. Or - if you only want to bypass the role check for Windows users, you can modify the logic in the authorization manager (if it is a WS-Trust request and using the windows endpoint - return true).\n. OK. thanks!\n. Added here \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/ff77175a5f41433339f148f9a7e2c0a49c1458a0\n. Maybe. Never tried it.\nhttp://zamd.net/2013/02/08/federating-a-custom-sts-with-office-365-azure-active-directory/\n. I think the blog post mentions that it does not work by default - Zulfiquar wanted to provide details - but he didn't. Maybe leave him a comment.\n. You need to implement a IClaimsRepository for that.\n. Why would you revoke an access token at the authorization server? That is something the resource server would have to do. The client already acquired the token.\nYou can only use short lived access tokens - then the authorization server can revoke at the point where the client tries to renew.\n. That's not built-in. You'd need to modify the source for that.\n. Not really. You'd rather implement that in the actual application where the resource belongs to.\n. JWT: It is a really early preview (v0.1) - wait 'til May for an update.\nWS-Trust: OAuth2 resource owner password flow can be used instead for most situations.\n. Hm - not sure what's wrong here. You might give tracing a try but this might not be as useful as it could be.\n. What do you mean with example link?\n. I don't think so. There shouldn't be a difference, frankly. Have you tried turning on tracing and have a look yourself via RDP?\n. ...and what was the problem?\n. ok.\nfor the 2nd part - i don't follow..could you explain?\n. What do you mean with \"same token\" - tokens are not the same, at least expiration should be different.\n. No. The token should contain the user's claims. Different users should have different claims.\n. As Brock said - v2 is more or less done. We have tens of thousands of downloads - so I guess it is pretty mature.\n. Hi, \nplease use the relevant product forums for ACS.\n. Could you test with IdSrv first?\n. Thank you very much! Will look into it as well.\n. Thanks!\n. You should really use the OAuth2 Resource Owner flow instead, see here:\nhttp://leastprivilege.com/2012/11/01/oauth2-in-thinktecture-identityserver-v2-resource-owner-password-flow/\n. You either need to enter the credentials on the IdSrv login form or turn the token into a ClaimsPrincipal and then into a SessionSecurityToken. After that you can use the SAM to write the session cookie manually.\n. in 2. the flow should be:\nADFS auth: RP -> IdSrv -> ADSF Proxy -> IdSrv -> RP\nYou need to change the return URL on the ADFS proxy to be the HRD endpoint on IdSrv.\n. Do you emit this claim? And how? \n. You can provide the claim types in IClaimsRepository.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core/Repositories/IClaimsRepository.cs\n. The tests are not designed to pass on a fresh download. The are some pre-reqs. What are you really trying to achieve?\n. Did you make any progress (not with the test, but with your real scenario) ?\n. I can feel your pain. It's indeed a steep  learning curve, but there is not much I can do about it. We already have a pretty smooth setup story, but knowing about certs etc is def a prerequisite. \nThe latest source code version of idsrv uses also the latest idm. \n. Idm uses semantic versioning (http://semver.org/). That means a version bump from 2.3 to 2.4 involves breaking changes.\nAs i said the source code version supports the latest idm version - the \"download\" version (from January) not.\n. I will close this thread. When you have specific questions, let us know.\n. No that's currently no possible.\nThat said - you can short circuit the HDR page via the WS-Fed whr (home realm) parameter. Just the dynamic discovery bit is missing.\n. Right now we have no plans to add twitter. @brockallen owns the feature...Brock what do you think?\n. Does this help?\nhttp://leastprivilege.com/2012/10/26/using-claims-based-authorization-in-mvc-and-web-api/\n. You cannot directly pass the bootstrap token to CreateChannelWithIssuedToken() - this API requires a GenericXmlSecurityToken.\nYou typically go via the ActAs flow in the STS first, since the audience probably would not match in the backend etc. You can also manually convert the SAML token.\n. If it is a trusted subsystem - passing the claims would be probably much easier.\n. I am actually not sure anymore what I meant ;) What do you want to achieve?\n. How about you come up with your own username format like company\\user?\n. Something is wrong with rp registration. See the wiki for how to turn on tracing. \n. ok - and what happens after you sign in into IdSrv?\n. \" Then the log file has what I mentioned earlier.\" - what? The invalid realm?\nSorry you need to work together with me, otherwise I can't help you.\n. Try going to web.config and turn off custom errors () - what error do you see in the browser?\n. ...and is your user in the 'IdentityServerUsers' role?\n. Hm - that's strange - you should see the yellow screen of death instead. What about the realm error - that has gone away?\nEvent log anything?\n. You should really somehow be able to see the YSOD. Try initiating the request from the machine where idsrv is installed on...\n. Try\n https://mydomain.com/adfs/ls/\n(note the trailing slash)\n. You need to construct a SignOutRequestMessage to the STS for federated sign out.\n. yes.\n. https://github.com/thinktecture/Thinktecture.IdentityModel.45/blob/master/Samples/MVC%20and%20WCF/Web/Controllers/UserController.cs\n. Please open a new issue for sign out. \n. Yes that's a breaking change. Will update idsrv later today. \n. OK. fixed.\n. I already answered on StackOverflow. Please continue the conversation here (or on SO) - but not both.\n. So can you confirm that both idsrv and the RP \"delete\" their cookies? How does the fiddler trace look like?\n. this actually looks like the RP cookies not the STS ones...\n. OK - I did a repro. Works for me, thats all I can do right now. I documented the sequence for you, so you can debug yourself to find out whats wrong:\nFiddler trace: https://dl.dropboxusercontent.com/u/77464820/permanent/IdSrv%20signin%20and%20signout.saz\nand the relevant steps:\n1 Start (idsrvrp)\n2 Try to access protected resource, redirect to wsfed endpoint\n3 Not authenticated at sts, redirect to login page\n5 Login successful, set login cookie (idsrvauth)\n6 WS-Fed response, set signout cookie for idsrvrp (wsfedsignout)\n7 Set fedauth cookie in idsrvrp\n8 Access idsrvp protected resource\n9 Start (idsrvrp2)\n10 Try to access protected resource, redirect to wsfed endpoint\n11 Access WS-Fed endpoint (already authenticated via idsrvauth cookie)\nWS-Fed response, add idsrvp2 to wsfedsignout cookie\n12 Set fedauth cookie in idsrvrp2\n13 Access idsrvrp2 protected resource\n14 Sign-out in idsrvrp2\n15 Hit STS signout endpoint\nClear idsrvauth cookie\nClear wsfedsignout cookie\nRender sign-out iframes\n16 Signout cleanup idsrvrp (clear fedauth cookie)\n17 Signout cleanup idsrvrp2 (clear fedauth cookie)\n. IdSrv does not issue this cookie. At least not the \"unmodified\" version. That must be something special about version/environment.\n. Seems so.\nWhat API do you use to \"log them in\" - something like WebSecurity.Authenticate(...) ?\n. There you go. WebSecurity.Login sets the cookie.\nSimple Membership FTW!\n. Reflector\n. Well - rather don't use WebSecurity.Login. That would be the appropriate fix.\n. Why do you use it - and took the burden to change plain IdSrv? ;)\nI don't mean to throw out simple membership - just don't use the Login API since it seems to combine credential validation and setting a cookie. Both operations must be available separately somehow\n. Implementing IUserRepository and IClaimsRepository. Thats totally fine. \nIn IUserRepository you return true/false in ValidateUser - that's all.\n. lol - that's the source code of WebSecurity.Login ;)\npublic static bool Login(string userName, string password, bool persistCookie = false)\n{\n    VerifyProvider();\n    bool flag = Membership.ValidateUser(userName, password);\n    if (flag)\n    {\n        FormsAuthentication.SetAuthCookie(userName, persistCookie);\n    }\n    return flag;\n}\nDo I need so say more? ;) \n. Not with the resource owner flow. Implicit flow could work if the web view in the desktop app and the browser share the same cookie container. haven't tried that.\n. At sign in, IdSrv writes a cookie that keeps track of all sites you log in. Can you verify that this is written correctly - and has the correct content?\n. Wsfedsignout\nIs the name. \n. I have to repro that. This will take some days.\nIf you want to investigate yourself, put a breakpoint in the WSFederationController (in the protocols assembly).\n. OK - I did a repro. Works for me, thats all I can do right now. I documented the sequence for you, so you can debug yourself to find out whats wrong:\nFiddler trace: https://dl.dropboxusercontent.com/u/77464820/permanent/IdSrv%20signin%20and%20signout.saz\nand the relevant steps:\n1  Start (idsrvrp)\n2  Try to access protected resource, redirect to wsfed endpoint\n3  Not authenticated at sts, redirect to login page\n5  Login successful, set login cookie (idsrvauth)\n6  WS-Fed response, set signout cookie for idsrvrp (wsfedsignout)\n7  Set fedauth cookie in idsrvrp\n8  Access idsrvp protected resource\n9  Start (idsrvrp2)\n10 Try to access protected resource, redirect to wsfed endpoint\n11 Access WS-Fed endpoint (already authenticated via idsrvauth cookie)\n    WS-Fed response, add idsrvp2 to wsfedsignout cookie\n12 Set fedauth cookie in idsrvrp2\n13 Access idsrvrp2 protected resource\n14 Sign-out in idsrvrp2\n15 Hit STS signout endpoint\n    Clear idsrvauth cookie\n    Clear wsfedsignout cookie\n    Render sign-out iframes\n16 Signout cleanup idsrvrp (clear fedauth cookie)\n17 Signout cleanup idsrvrp2 (clear fedauth cookie)\n. Any comments?\n. Hi, \nSorry for the confusion, but we have not implemented federation for the WS-trust endpoints.\nDo you need that, what's your use case?\n. But when you have ADFS - why do you need IdSrv in addition?\nSo you are right - right now - the identity providers feature is for passive (ws-fed) only. They could be enabled for ws-trust (but only the WS* type providers - not Google, Facebook etc...)\n. OK - understood. I will put fed support for ws-trust on the todo list...not sure when I will get to it though...\n. Well - if it is only about Windows authentication - it would be easier to add a Windows authenticated WS-Trust endpoint. Is that what you need?\n. Will post-pone to OIDC\n. Will postpone to OIDC\n. The provider claims repo is a special case for the asp.net providers - like role, membership and profile. \nFor everything else - or a variation I would recommend writing an IClaimsRepository from scratch - or make ProviderClaimsRepository more inheritance friendly so you can call the base class and inject your own functionality. \n. No not right now. There are other things that need to be done first. Remind me in a couple of weeks.\n. Well - I would add a new endpoint to the WS-Trust service that accepts tokens from trusted identity providers. I am asking because I need to prioritize new features.\n. We are accepting contributions. But I need to be sure that you know what you are doing ;)\n. Sorry - I don't understand what you are doing.\n\"I have recently Created web api for CreateAccount,ForgotDetails, and signin in IdentityServer. \" - does that mean you are extending IdSrv? Why SignIn then?\n\"WebAPI works fine if i commented out the module\nbut Identity Server stops working as it's working on ClaimBased Identity.\" - What does that mean?\nYou can't simply throw some arbitrary code at me and expect I know how to fix it ;)\n. This uses basic auth for the client - and OAuth2 ROPF for the resource owner credentials.\nWhat do you mean with \"only way to do HTTP Basic Authentication with IdentityServer\"? What do you want to achieve?\n. I will close that for now. I anyone wants to volunteer to build such a web API interface, lemme know.\n. I created a new issue for that..\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212\n. So is that an IdSrv question? How shall we proceed?\n. @brockallen ?\n. Yea - and we have that - it is called \"remember selection\" on the HRD screen.\n. Not sure what you mean with \"without username password\" - but idsrv does not have anything built in to issue \"keys\". You may built on top of it - but nothig out of the box.\n. No. sorry. You need to do that yourself.\n. Have you seen this: http://weblogs.thinktecture.com/cweyer/2013/01/running-thinktecture-identityserver-v2-in-a-windows-azure-web-role-from-zero-to-hero-a-walkthrough.html\n. Can I close this?\n. Here's the documentation - this can be a little overwhelming at first.\nhttp://msdn.microsoft.com/en-us/library/hh598930.aspx\nAlso have a look at this sample:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/MVC%20and%20WCF\n. This is not about seeing what an individual can do. We need to capture requirements - what people really want. Then see how to achieve that in a way that it makes sense.\nThat's an interesting read e.g.: http://www.simplecloud.info/\n. Hi,\nso first of all - Users must be in the IdentityServerUsers role - or you disable that in general config.\nBut the problem seems to be something different - enable tracing to find out more:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/wiki\n. Can I close this?\n. This is not as straightforward as it could be - the setting you mention is for relying parties not IdSrv itself.\nThere are a number of knobs you have to turn (brainstorming - may not be exhaustive)\n- Remove SslRedirectFilter in FilterConfig.cs\n- Remove RequireHttpsHandler in ProtocolConfig.cs\n- Set RequireSsl = false in CreateBasicAuthConfig and CreateClientAuthConfig in Protocols.cs\n- Set RequireSsl = false in identityServices.config\nI might be missing something.\n. Oh - maybe I misunderstood you - it is only about the reply address. Yes in that case set \"require SSL\" to false.\nCan I close this issue?\n. To avoid weird situations, put IdSrv in its own application. You can of course re-use the membership/roles etc. config.\n. So why do you want to use JWT then? SAML would be right choice here.\n. But still - in WCF you would use WS-Trust instead of OAuth.\nIf you wanna go down the JWT/WCF route - there is a JWT token handler from Microsoft. In .NET 4.5 this might work with the new identity pipeline. But haven't tested it.\n. You can also transmit the JWT using normal HTTP, then a service authorization manager picking up the header would be also an option. I think there is a Nuget from Auth0 that does that.\n. see here:\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/\n. Seen the blog post I linked. Does that answer the question?\nThese are the interfaces you can use to customize IdSrv without changing the core source code.\n. They are extensibility points.\nThe site ID is issued in tokens to identify the issuer.\n. I just tried it with a new MVC relying party and it worked for me. Are you sure your IdSrv issuer URI matches the value in web.config?\n. Oh yes - WSTrust must allow insecure transports. So yeah - there are a number of knobs.\n. Who needs that feature?\n. Can't you configure the cookie handler dynamically?\n. Add a dropdown to the RP page\nToken Type:\nSAML 1.1\nSAML 2.0\nJWT\n. You need to synchronize the machineKey element. This holds a key that is used to protect session cookies.\n. No it is called machineKey and it is in web.config. You need to create it. Google knows more.\n. As i said - you need to set a fixed machine key. This key has to be the same on all machines in the farm. \nhttp://stackoverflow.com/questions/2344645/how-to-set-the-machine-key-to-be-the-same-for-2-web-applications\n. It Sets up machine Key Protection. But Does not set a key. The setup part is not necessary in idsrv. Setting the key is. \n. Passwords are typically not encrypted but hashed. \nYou might have changed the hashing algorithm (i think the default is SHA256 which requires a 256 bit key).\n. please open a new issue\n. That's not true - it depends on the key size if membership uses a different hashing algorithm.\n. OK?\n. So IdSrv is running fine?\nThen it is some other issue with your IIS setup. It is definitely possible to build pre 4.5 relying parties.\n. I don't like fedutil. Maybe you want to do the settings manually.\n. or try it on a blank app and migrate the config changes one by one. I don't have a 4.0 sample here right now, sorry.\n. As I said, I don't have a sample right now. Redirection to login.aspx sounds like forms auth is enabled. good luck!\n. see here for enabling tracing https://github.com/thinktecture/Thinktecture.IdentityServer.v2/wiki\n. You need to turn of request validation for the page where the token is posted to. This has nothing really to do with IdSrv - just a general ASP.NET thing. Also please consider googling before posting here ;)\n. Got it working?\n. I did not read the salesforce docs - but they are typically very sensible on security.\nWhy would identityserver need to be extended for that? Producing the short lived token would be rather the job of the actual application (IMO).\n. Tokens in query strings are OK - if they a low privileged and short lived (like yours).\n. Well - you can do that using WS-Trust (server side controller to IdSrv WS-Trust endpoint). You will not get SSO though, as Brock mentioned.\nThis is an older post I've written about, should get you started:\nhttp://leastprivilege.com/2010/04/14/using-an-active-endpoint-to-sign-into-a-web-application/\n. Is this still an issue?\n. Well - then I would simply use the resource owner flow to get the token from within the MVC controller:\nhttp://leastprivilege.com/2012/11/01/oauth2-in-thinktecture-identityserver-v2-resource-owner-password-flow/\nI will close the issue now, open a new issue if necessary.\n. Keep one thread to one question please.\nWhy is your client id a URL? try creating a client with a \"simpler\" name.\n. Right - in Basic Authentication the username cannot contain \":\" characters. Why is your client id a URL? Use something \"simpler\".\ncheers\nDominick\n\nhttp://leastprivilege.com\nhttp://photos.leastprivilege.com\nhttps://twitter.com/leastprivilege\nFrom: Excelsior-Charles notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Mittwoch, 3. Juli 2013 01:18\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nCc: Dominick Baier dbaier@leastprivilege.com<mailto:dbaier@leastprivilege.com>\nSubject: Re: [Thinktecture.IdentityServer.v2] Do I need a custom protocol or is this built-in? (#226)\nFirst let me say thank-you for all your help. This last article I think put me exactly where I needed to be. I've left a comment for you over there regarding the latest issue I found, but since the problem seems to be in the IndentityServer code, I will follow up here as well.\nTo recap, I have the following code for the client side:\n{\n    var client = new OAuth2Client(new Uri(\"https://IdSrv/issue/oauth2/token\"), \"https://localhost:1215/\", \"mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\");\n    AccessTokenResponse response = null;\n```\ntry\n{\n    response = client.RequestAccessTokenUserName(\"username\", \"password\", \"https://localhost:1215/\");\n}\ncatch (Exception ex)\n{\n    Debug.WriteLine(ex);\n    return;\n}\nvar token = response.AccessToken;}\n```\nWhat happens is in the OAuth2TokenController.ValidateClient() method, the ClaimsPrincipal.Current is malformed. Even though I passed in the settings above, they are not resolving correctly within this function.\nprivate bool ValidateClient(out Client client){\n    client = null;\n```\nif (!ClaimsPrincipal.Current.Identity.IsAuthenticated)\n{\n    Tracing.Error(\"Anonymous client.\");\n    return false;\n}\nvar passwordClaim = ClaimsPrincipal.Current.FindFirst(\"password\");\nif (passwordClaim == null)\n{\n    Tracing.Error(\"No client secret provided.\");\n    return false;\n}\nreturn ClientsRepository.ValidateAndGetClient(\n    ClaimsPrincipal.Current.Identity.Name,\n    passwordClaim.Value,\n    out client);}\n```\nWhile in debug mode the following is true:\nClaimsPrincipal.Current.Identity.Name == \"https\";passwordClaim.Value == \"//localhost:1215/:mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\";\nWithin the ClientsRepository.ValidateAndGetClient() function, while in debug mode I can change the following values and everything appears to work fine:\nclientId == \"https://localhost:1215/\"; // was \"https\"clientSecret == \"mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\"; // was \"//localhost:1215/:mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\"\nSo somewhere my ClaimsPrincipal.Current is not being populated correctly based on what I send in through the initial OAuth2 request. BTW: I am using the latest builds of server code.\nAny ideas?\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/226#issuecomment-20385797.\n. Whenever the original access token expires, you can request a new access token/refresh token pair using the refresh token. The old refresh token is then invalidated. You then store the new refresh token locally.\nHow does this defeat the purpose?\n. I see. Does this happen frequently to you?\nMy design is that the refresh toke is one-time use only.\n. And you can absolutely do that. Just be aware that it is one time use only. You get a fresh refresh token after that, that you need to store again.\n. open a new topic. thanks.\nIs the original issue resolved or not?\n. Why is one time use refresh tokens not working for you? What's the difference to multi use? I try to understand the issue.\n. But what is your issue with storing the new refresh token (replacing the old one) whenever you request a new access token?\n. Certainly not. Something that is writable of course.\n. The authentication context simply conveys to the recipient how the entity has logged in. Nothing else.\nIn WIF/IdSrv terms this is the AuthenticationType claim that gets created at login time (password vs x.509).\n. Well - with some cookie trickery and other \"usual\" stuff - sure. Nothing specific to IdSrv I guess. have fun! ;)\n. IUserRepository is for validating credentials yes - but for the \"session management\" you need to do some extra work.\n. The secret is hashed upon storage. So we can't bring the original clear text back. You need to write it down when adding the client.\n. You should first have a look inside - you can use this tool \nhttp://openidtest.uninett.no/jwt\nShow me the contents - and what you want to get rid of.\n. Oh and btw - i think google does not issue a JWT - but only a handle since the receiver is \"google internal\". So they can quite heavily optimize\n. any progress?\n. The signing key is for umm signing ;)\n. you have complete control over the claims by implementing IClaimsRepository.\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/\n. OK? Can I close this?\n. ...and? did it work for you?\n. Yes - the token is self contained. It contains all the claims and a signature. There is no RP to IdSrv communication. This would not work for many scenarios because of firewalls etc.\nYou can actually have a look at JWT tokens using: http://openidtest.uninett.no/jwt\n-Are the claims a part of the Access Token that the client passes to the service?\nyes\n-If so, what if I don't want ALL claims packed in there (this token is sent on EVERY service call)\nwell - then you have to do something custom. Like a back channel to a service that can retrieve claims, or swap the token with a session token at the relying party. But the implementation is up to you.\n-Is the service relying solely on what the client provides about itself? No need to talk to IdSrv?\n-When would the Replying Party talk to the IdSvr, if ever?\nno and never\n. Have fun!\n. Are you sure the user is in the Users role (admin role does not grant permissions to request a token)\n. Yes - realm names must exactly match - you are using a trailing \"/\" in your RP - but not in the IdSrv registration.\n. No the cookie method would not work. Also - you would not use cookies for web apis.\n. Can I close this - or do you have more questions?\n. Any opinions - anyone?\n. Yes you can do that with plain IdSrv - @wscalf would simply add a DSL approach on top of the existing extensibility points.\n. You should probably have an abstraction layer around storage - config files are one thing. But maybe you want to load the rules from a DB - or a service.\nThat said - let's start simple. Do you want to proceed with this?\n. Well - then simply write the code, and maybe a blog post to document how it works ;)\n. Have you ever looked at scriptcs - that would allow to use C# as a rules language...\n. http://clearscript.codeplex.com/\n. I will close this as it never really took off.\n. You are right, if the public key is in the token, the cert is not needed to validate the token. My extension method does not implement it like that. Thats all.\n. wtrealm and wreply are independent. In fact the realm is not even necessarily a URL (could be also a URN).\nWhen IdSrv redirects to an upstream IdP it uses indeed its own site id as realm. You need to have a mapping in your STS for that realm to the physical reply URL.\n. In general it is dangerous to allow wreply - rather stash the app local deeplink into the wctx parameter and do a local redirect once the ws-fed response comes back on the the static reply URL. \nThat said, have you tried selecting \"Allow ReplyTo parameter\" in WS-Federation config.\n. The reply is dangerous because i could send you a link like this (shortened/pseudo):\n/wsfed?realm=trustedsite&wreply=www.chinahackshack.com\nThen the token would be sent to an untrusted site.\nThat's why you typically try to stay away from letting input data specfiy the reply location.\nYour approach of roundtripping the wreply to the idp might work in some cases, but not always. The right way would be to store the wreply in a cookie and re-hydrate on the way back.\nI personally prefer the wctx approach.\n. ??\n. OK - maybe thats a bug. Have a look and let us know.\n. That's exactly how Microsoft does set timestamps as well in WIF...any progress?\n. Any solution? Can I close this?\n. \"Add a Drop Down with TimeZones to the page\"\nWhich page are you talking about?\n. If you can do that in a self contained change - IOW only that view is affected. Sure - why not.\n. The WIF extensions for SAML are dead.\nWhich leaves us with an OSS saml implementation that has an incompatible license and a commercial one. Neither are really good fits for IdSrv.\n. It is possible we never implemented that feature for WS-Federation. WS-Trust does not support federation at all.\nDo you need encrypted tokens?\n. OK - I put it onto the todo list. thanks!\n. You can configure both values independently. \nBut in one - the reason this works is that the cookie for the RP is gone altogether. Hence the redirect.\nIn two the cookie is invalid - hence the exception.\nIn your case you want to the suppress feature to rather redirect to the signin page instead of doing a signout?\n. I guess I don't understand your problem, then.\n. Does that make sense?\n. http://leastprivilege.com/2013/06/16/relationship-between-identityserver-and-authorizationserver/\nI guess the problem is - that I don''t understand your problem ;)\nexplain to me step by step\nI would like to support resource owner flow for a web application using IdSrv. We have a custom login page design that seems to require this. (Is it possible to just restyle the IdSrv page?) \n\n\nWhat does that mean? A login page takes username & password and contacts IdSrv programmatically to validate it?\n\n\nI also want to provide a SSO experience for one or more ADFS, at least one of which is hosted on Azure.\n\n\nDoes that mean you want to add multple ADFS as identity provider to IdSrv? So users can sign in to relying parties registered in IdSrv?\n\n\nThese two requirements don't really fit together.\n. So - \nResource owner pwd flow: credentials in, token out. As simple as that.\nWhat are you planning to do with that token afterwards? I am confused.\nFederation with ADFS - how are you planning to use that? For web SSO? Using WS-Federation?\nWhy do you need both?\n. Ok I get the RO flow scenario - our RO flow implementation only allows to use IdSrv accounts - not accounts from an identity provider (like WAAD) - is that OK?\nThe WS-Fed requirement looks OK too. Should work.\n. Just federate with all the WAAD ADFSes etc... via the \"identity provider\" feature in the admin section\n. Since WAAD is GA I have not tried to federate with it - things have changed from my blog post - for sure.\n. I still have the feeling you are doing something substantially wrong.\nWhy do you say ACS and the RO flow sample? How do you think the two work together?\n. For a walkthrough see the identity model wiki.\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/wiki\n(under Web API security sample)\n. OK - I see. As I said earlier. We only implemented federated login (e.g. with ACS or a social provider) for WS-Federation - not for OAuth2.\nIt looks like you want to use OAuth2 to sign-in, but using a registered identity provider (instead of the IdSrv account database). That's not supported.\n. You can use OAuth2, but the users need to be stored in IdSrv's database. Does that work for you?\n. Please keep the threads separate.\nSo our WS-Federation endpoints support federation, the OAuth2 ones don't. That's something we are looking into, but right now that's the way it is.\nwrt to validation - then one of the 3 values (issuer, audience, signing material) does not match. Also I'd recommend using the latest version of tt.idm where we use the Microsoft JWT handler.\n. I close this for now. Feel free to open a new thread.\n. Why btw is your application starting like this? And why with a returnUrl of / ? You should only see the login page when accessing a token endpoint or the admin area.\n. No.\n. The main page does not need authentication. Do you have a global authorization element in web.config by chance?\n. Then I don't know why the redirect to the login page is happening. Maybe use a real web server.\n. yep\n. I'll close it. Brock will be delighted ;)\n. I don't have any resources - but SSL termination is an issue. Right now IdSrv demands SSL.\n. Who needs that feature? pls vote!\n. Just so I understand your scenario better - why do you need encryption?\n. I added the feature - could you test please\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/e9cc469817c4660f6022f2a7e60bbb607f53c76c\n. Are you using WIF's bootstrap token feature to do delegation?\nI was under the assumption the bootstrap token is already decrypted. But that may have changed in 4.5. \nSince supporting multiple decryption certs would mean a database change - no I don't want add this feature right now. Please open a separate issue for that.\n. And btw - it is common practice that you give out the same public key to multiple IdPs.\n. Have you tested my check-in? is it working for scenario 1?\n. \"This fails because you're passing an encrypted token to the ws-trust endpoint, and there's no SecurityTokenResolver set.\"\nThinking about this - I think you got that wrong, if that token would still be encrypted at this point, it would be encrypted for the RP - how would the STS have that decryption key?\n. No no. For WS-Trust delegation, you pass the decrypted token to the STS during the ActAs request. That's exactly how it work in WIF with the bootstrap context and CreateChannelActAs.\n. Sure - but encrypted for the STS, not the RP.\n. Any news?\n. I am using fam.GetToken. \nOK - strange - it works for me with ADFS encrypted tokens.\n. On that above URI - there is indeed no federation message.\nYou need to access a ws-fed endpoint with the ws-fed query string syntax.\n. Ah I see - your real question is why this code throws an exception?\nWell - yes - that could be improved. Let me look into this.\n. OK - I made the code more robust. Have a look if it works for you.\n. Sorry - my bad. Updated.\n. I don't understand the question.\n. You need the WIF equivalent for Java then. WS-Federation support.\nI don't know how that works for Java though.\n. What are you missing?\n. You get back an authorization code (not a token). right. This code you can exchange with an access token for the scope (resource) you have requested.\nBut we have not implemented OAuth2 signin - if that is your questions - as you surely know - this woud be wrong. \n. In the Web API security sample - there is a code flow client, so you can check out how it works.\n. There is BTW a winrt sample in the clients folder. \n. No. Not with identity server itself. The focus is right now more on token services than on user management / self-service.\nSince it is using membership by default you can use the standard APIs to implement that functionality.\n. The mex URL is wrong. See the application integration page:\nhttps://server/issue/wstrust/mex\n. Sure. The URL is still wrong. See my previous answer. \n. Does it work now?\n. You need to look into the WCF traces\nhttp://leastprivilege.com/2012/12/28/enabling-tracing-in-thinktecture-identityserver/\n. Audience URIs are case sensitive - use the exact value from the client's client/address config element.\nBut yes - as always in WCF, you need to turn on tracing when you want to know what's going on.\n. I guess you are using message security for the service. That expects http not https.\nFor the audience URI / realm - that is just a simple string comparison. That's why they have to match.\n. I am actually not sure - \n@brockallen SignOut.cshtml does the iframe stufe - but SignedOut.cshtml has viewport and more meta tags...do we need both?\n. @brockallen Could you delete it?\n. thanks!\n. Yes - that is a pending feature request. Why do you need encryption?\n. I added the feature - could you test please\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/e9cc469817c4660f6022f2a7e60bbb607f53c76c\n. Well - encryption as always gives you a single feature - confidentiality.\nIf you don't want that the client could see the claims and their values, you need to encrypt them. Otherwise it is just overhead.\n. Any news?\n. Little bit more info maybe?\nIdP? Saml1.1 i assume?\nstack trace...\n. And you are sure you pulled the latest changes from github?\n. OAuth does not specify how authentication works (it's for authorization not authentication) - that means that you have to handroll your \"Oauth\" for every provider you want to use. We chose to support Google, Facebook and Live.\nYou could add support for LinkedIn, but that would be another custom implementation.\n. I guess LinkedIn has some documentation on how their authentication systems works.\n. Make sure you have no typos and the your DLL is in the bin folder.\n. Sorry - I don't understand the question.\n. You could use the OAuth2 implicit flow to request a token from JavaScript. There is a sample here:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security\n. Access tokens are typically very specific to a certain back end - so re-use is not very common. That said - you can  use local storage to store tokens. That is common practice.\n. You can still have SSO (by using the same IdP across applications) - but the access token is often app specific.\n. SSO is IdSrv setting a cookie on the login page - every protocol endpoint uses that implicitly.\n. Can I close this?\n. See the wiki for getting started content.\n. I don't understand the question.\n. Don't know. Never tried that.\nThe whole point of an IdP is, that it is separate from the RP.\n. Good question...\nNothing special AFAIK - \n- move the config DB to a shared SQL Server\n- make sure debugging is turned off in web.config\n- make sure tracing is turned off if you don't need it\n- synchronize the machineKey element on all your nodes\n@brockallen anything else?\n. ...thats the default..\n. Would you like to write a blog post / wiki entry about the deployment process and checklists?\n. Did it work?\n. OK. thanks for the info.\n. Since OAuth is not an authentication protocol, it misses built-in semantics for session management. There is a signout link on the IdSrv homepage that you could trigger though.\n. http://leastprivilege.com/2012/12/28/enabling-tracing-in-thinktecture-identityserver/\n. OK?\n. Not really - it is all about the token expiration time. That's the trade off between security and performance.\n. Maybe there is a deny users=\"?\" in web.config somewhere?\n. Allow users=\"?\" does not exist. Make sure all authorization elements are removed and that not Authorize attribute is on the home controller.\n. Maybe you need to allow anonymous access is your IIS Express (properties on the web project).\nNo IdSrc does not redirect automatically - you need to change the signout page for that.\n. But only do the redirect after the iframes have been rendered.\n. OK?\n. IdentityServer does not run on v4. sorry.\n. This is a very broad question. In general it sounds like you want to learn about OAuth2. Have a look at the spec (RFC6749) and the wiki here.\nThis forum can only help with specific questions regarding the repo.\n. Please create new issues for your specific questions. \n. How is this related to IdentityServer?\n. JWTs are officially supported since v2.2. Everything before that could have problems.\n. V2.2 of idsrv. \n. This is supported - but the problem is in your RP not IdSrv. \nAre you using a symmetric signing key or the IdSrv default x.509 cert to sign the token?\n. ..and the cert needs to be in the trusted people cert store.\nYeah - i am pretty sure it does work, when you find the right config knobs. Would be Microsoft's job to document that.\n. I have seen that before. Using a cert with 2K key size fixed it for me.\n. This thread is closed.\n. You need to setup ADFS as an identity provider in IdSrv\n..and IdSrv as a relying party in ADFS\nThe realm for IdSrv in ADFS would be whatever you have configured as the site ID in IdSrv - the reply URL would be the /hrd endpoint.\n. That's not how you would do it.\nEither program against the database directly (e.g. using the standard membership API) - or add a Web API to IdSrv that internally calls the user mgmt repo and is callable by your app.\n. I guess you have authentication mode=Windows somewhere. Don't know. It's your RP ;)\n. Please open a new thread.\n. http://leastprivilege.com/2013/07/04/identityserver-using-ws-federation-with-jwt-tokens/\n. yep - and that error message is pretty good ;) You need a bigger key (-len parameter in makecert e.g.).\n. What do you mean - if the sign in works - you are already consuming it.\n. Yes - in IClaimsRepository\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/\n. Whatever the claims provider returns - will be put in the outgoing token.\n. ClaimsPrincipal.Current.Claims\n. IClaimsRepository is called every time a token is created. In there you have all information to decided which claims should go to which relying party.\n. RequestDetails has a RelyingParty property - which already has the RP information.\nNot sure why your IClaimsRepository is not called. Put breakpoints into the WsFed controller and the TokenService class.\n. Sounds like your both apps share the fedauth cookie somehow. You can set explicit names for the cookies in the local web.configs (cookieHandler section IIRC).\n. Well - you can change the source code ;)\nWebSite/Controllers/AccountController.cs -> SignIn method would be the right starting point\n. Well - the claims repository is called way too late in the processing pipeline. You would need to do the database checks directly in the UI. You could also add additional claims to the token by adding them from the UI controllern (see the comments in the SignIn action method):\n. The i guess you need to modify the ws-federation controller to show a view when necessary\n. That's standard MVC stuff - I don't have the time right now - but you'll figure it out!\n. I'll close that for now. Open a new thread with a more specific topic when you have questions. thanks!\n. Identity providers only show up when federation is enabled for the WS-Federation protocol.\n. Right - unhashing does not exist ;)\nWe store them hashed, make note of them at creation time. Worked fine so far for us.\n. oh - and extra points for having the balls to send a code snippet that ignores SSL validation errors :p\n. Any progress?\n. You don't need to enable Basic Auth - authentication is handled by IdSrv. See the wiki how to turn on tracing.\n. ok - best set a breakpoint in the token controller. \nplease open a new thread for further questions.\n. Maybe that is related to your other problem?\n. Web API? WS-Federation is for web applications not services. Thus the redirect URL concept does not make sense.\nMaybe you need something like OAuth2 - have a look at the wiki\n. You mean like one site redirects to https://server1 and the to https://server2 ?\nYou can't do that - or what will stop anyone from crafting a request that redirects to https://evil.com. \nCreate multiple RPs and set a static reply parameter on each.\n. I could imagine having a list of valid replyto URLs per RP. I'll add it to my todo list...\n. We won't do wildcards. As I said I could think about a fixed list of allowed redirects.\nOne redirect pro site would be enough - from there you would use wctx to manage deep linking.\n. From a security point of view, the more exact the match the better. Don't wanna end up with an open redirect.\nAnd as I said - if you need to many reply URLs - you are missing the concept of wctx in WS-Federation.\n. Well - it is open source - you could extend it - e.g. allow wildcard characters in the reply URL field.\nI would consider that pull request if it is done in a way that both wildcards and strict matches ares supported.\n. Well - maybe start with documenting the feature the way you like it here.\nWhat kind of URLs would you want to allow - give some examples etc...\n. So the other issue is this: if App1 and App2 share a realm - let's say urn:apps (and let's assume the reply would be allowed back to both apps).\nThen both tokens will have urn:apps as the audience. Meaning there is no way to distinguish between the two tokens and app1 can use bob's token to impersonate bob in app2. \nIs that really what you want?\nThere's a good reason why every RP should have its own realm (and thus audience). \n. The last time I looked at ADFS, they supported multiple audiences per RP - but a single reply URL. Has that changed?\n\"An IP-STS is meant to provide identity to systems that trust it.\" \n- and vice versa. The IdP also needs to trust the RP. And the reply to is part of that decision making.\n\"A system can be defined by a single URL or a set of URLs, like https://student.univ.edu, https://faculty.univ.edu, https://ugradapp.univ.edu, \" \n- I don't agree here, realms a URIs - not URLs. And should not be treated hierarchically. I actually prefer to use URNs these days for realm names, just to make that very clear.\nSo IdSrv behavior to imply structure on a realm is wrong - and something I intend to change. At the same time I could imagine adding new features around reply URL resolution.\nSo again - how would you imagine that should work. Just to capture some requirements.\n. Did you have a look Paul?\n. Well - if it works for Kyle, that's cool. \nI don't think I will change the implementation soon. Other things are more important right now.\nMaybe I can make the realm resolution pluggable.\n. I will close this for now.\nFor a future version I plan to add more flexibility to realm/redirect URI resolution - but for now we'll keep it the way it is.\nThanks for the feedback Kyle - and feel free to report how it goes once the feature is in production at your place.\n. Yep that's the way it works right now.\n. Yeah - that's a limitation right now.\n. Yeah - I heard that before :)\nI forgot the details - but SWT support on its own would not be enough, right? You also need the WRAP protocol - or what exactly would you need?\n. So again - the question would be - what exactly does IdSrv need to do to make SB happy?\n. OK - got it.\n@delpher which type of credential do you want to use to acquire such a token from IdSrv?\n. OK so they are standard IdSrv users with uname/pwd?\n. OK - let me think about it ;)\n. I added SWT support back to IdSrv: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/52cfde89d602aff7733e0358c36174c7999eec07\nYou can request an SWT via the simple HTTP endpoint - you first need to enable the endoint in the admin/protocols UI.\nThen you can send requests to it specifying the realm name and the token type.\nYou can see a sample here:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/blob/master/Samples/Web%20API%20Security/Clients/SimpleHttpClient/Program.cs\nTo get the SB specific claims into the token you need to implement IClaimsRepository - see here:\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/\nDoes that work for you?\n. Browser test:\n\n. I am closing this. Please open a new issue when you have questions. Also let us know when you got it working ;)\n. yes.\n. yes.\n. as always - check the wiki first ;)\n. And at IP-STS i created new Relying party and gave details as\nEnabled\nRealm/ScopeName:https:///website_idsrv2/\nRedirectUrl:Relying party Application Url\nno - you need to rediredt back to the R-STS - and from there to the application.\n. then disable the custom error messages in web.config\n. Sorry - you need to properly describe your problem -\npost all the rp, idp configs etc...\nAlso turn on tracing (see wiki)\n. The RP on the IP-STS is wrong. The realm must match the site ID of the R-STS.\n...and the redirect must go back to the R-STS hrd endpoint.\n. It is OK to open an issue here, no need to use the blog in addition ;)\nAs I told you - the claims provider is called when a token gets generated. Not for login.\n. With tokens I mean \"outgoing\" token like a WS-Federation request. \nFor creating the session cookie, I don't need all these claims, I only need the claims that are relevant for the web site.\nYou could add claims directly in the AccountController if that's what you are looking for (as the comment describes).\n. OK - Let us know when there's an answer.\n. Have you set a fixed machine key?\n. No response. I am closing this.\n. OK. and?\n. You can use OAuth2 Resource Owner Flow, WS-Trust or the Simple HTTP endpoint. Check the wiki.\n. http://leastprivilege.com/2013/07/16/identityserver-using-ws-federation-with-jwt-tokens-and-symmetric-signatures/\n. http://leastprivilege.com/2013/07/16/identityserver-using-ws-federation-with-jwt-tokens-and-symmetric-signatures/\n. I think something is wrong with that PR - over 6000 additions?\nPlease only PR the res file updates.\n. ...or maybe I am wrong. The number just looked wrong.\n@brockallen Can you have a look?\n. I will close this. Please talk to @brockallen first.\n. http://leastprivilege.com/2013/06/16/relationship-between-identityserver-and-authorizationserver/\n. Well - it does what it says - it makes sure no clear text token leaves the server. Since JWT does not support encryption (at least not the MS implementation) - you get an error.\n. It is up to you really - but yes I recommend using NameIdentifier for the immutable user id, and Name for display.\n. What does \"configuring Relying party with thinktecture identity server through OAuth Channel\" actually mean?\n. I still don't understand what you are trying to accomplish.\n. sure.\n. I will close this. Open a new thread when you have questions.\n. I suppose you talk about WAAD and not ADFS.\nhttp://leastprivilege.com/2013/06/24/adding-windows-azure-ad-ga-as-an-identity-provider-in-identityserver/\n. Check the wiki how to enabled tracing in IdSrv. You could also modify web.config to disable custom errors.\n. That basically means that the issuer thumbprint registered for the identity provider does not match the actual one.\n. There's a known issue when you copy thumbrints out of the .cer standard windows dialog. Some invisible unicode character that mess up the string comparison.\n. Ignore the unit tests. They are more integration tests and need a specific setup.\nI have never seen this error before. Looks like something is wrong with MEF - have you played with the interfaces or repositories.config?\n. You run the site in WHAT?\nPlease use a web server.\n. Well - i guess you need to put a breakpoint into ClaimsTransformer to see whats going on.\n. No - didn't do any recent tests - but looking forward to your results.\n. http://leastprivilege.com/2013/07/18/troubleshooting-identityserver/\n. Well - since you refuse to give me more context - I assume this error happens because there are no encryption keys available.\n. I will close this. Feel free to open a more specific thread.\n. Nothing handy right now - but it is the standard procedure:\n- add IdSrv as a claims provider in ADFS\n- add ADFS as a relying party in IdSrv\n. Sorry can't follow you - either you take the time to describe your settings and where exactly it fails or you need to figure it out yourself.\nOpen a new thread for the more specific question please.\n. Hi, \nyou are right the StoredGrant table is new - and we don't have migrations yet for it. @brockallen will take care of it next week.\nIdSrv does not create any user tables. You either connect it to a ASP.NET membership/provider database - or you create your own and customize IdSrv to use it (see the wiki).\n. I haven't looked at VS 2013 in-depth. So I can't comment.\n. I guess i need a complete fiddler trace to repro.\n. hm - that's strange - the hrd endpoint should take care of that... I need to look into it.\n. Not sure what the question is.\n. This error happens on the RP - hard to say. Especially if it really magically stopped working.\nMaybe turn on tracing for System.IdentityModel in the RP.\n. How would the client logs be interesting when the error happens on the server?\n. ...and no - please don't post your complete server log now. Only if you spot an error - and only the necessary information.\n. That was the wrong server ;) Telling from the stack trace in your OP - this happens at the receiving end.\n. ..or maybe I don't understand where exactly the error happens - i don't have enough context. \nAnyways - I would search for the right trace and see if there is more information. I will be mostly offline the next weeks so expect slow responses (if at all). \n. The default lifetime of tokens via WS* is 10 hours. This can be overridden in the RP registration page (this is minutes).\nSsoCookieLifetime specifies the lifetime of the authentication session with IdSrv itself (in hours).\nBy default - the RP receives the token and creates an authentication session with an absolute lifetime of the token. This can be customized (see the various helpers in the wiki). Whenever that session expires, the RP redirects to the IdP. This is all standard WIF stuff.\n. No.\nOAuth2 is not an authentication protocol - that means it has no session semantics.\nAccess tokens need to be short lived, that's how you deal with that.\n. Yes - add ADFS to the HRD endpoint.\n. You can also add IdSrv itself as an identity provider - so users get to choose from the HRD screen.\n. You always have to do a roundtrip to the HRD screen - otherwise you could not request a token for the other RP.\nYou can check the \"remember selection\" checkbox to make it more seamless.\n. You have to give IdSrv a hint (at least the first time) - you could dynamically add the whr parameter in the RP...afterwards the cookie can be used.\n. Cool :)\n. Not sure what your question is. When you are usign WS-Federation, the communication is via the user agent. That's how it works.\n. I don't know. This is not how the WS-Fed protocol works and would require major changes. \nYou need user agent interaction.\n. Not via WS-Fed which is designed for user agents. You might want to look into WS-Trust instead.\n. Yes that is OK to ignore. Maybe I need a better wording for that message.\n. Since you don't want to provide more details - I am assuming you want to programmatically request a token from the WS-Trust endpoint. Correct?\nThis is an old article - some class names have changed in .NET 4.5 - but you get the idea.\nhttp://leastprivilege.com/2010/04/14/using-an-active-endpoint-to-sign-into-a-web-application/\n. No - you need to write code for that. The account controller is where i would start.\nWhy do you want to do that?\n. OK. Well thats an option of course.\nNot sure why the IP-STS SAML is a problem. That could be encrypted e.g.\n. Anyways tell us how it goes. Use a new thread for this. good luck!\n. JWT does not support encryption (at least not the MS implementation).\nAttaching a performance profiler would actually give you better insights.\n. @epicthreedev Let us know when you have more data.\n. Which WS-Trust scenario exactly?\n. Hm - in AuthorizationServer we have something similar to that:\nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/blob/master/source/Libraries/Thinktecture.AuthorizationServer.OAuth2/WSTrustResourceOwnerCredentialValidation.cs\nthat should be all you need.\n. OK?\n. AuthorizationServer or IdentityServer?\n. Then please use the right issue tracker (this is identity server).\n. Have a look around in the Thinktecture.IdentityModel samples folder and wiki (there's a sample called WebApiSecurity) that shows how to consume tokens.\nYou would not get claims for processing an order - you would get claims that describe the identity of the user.\n. Not sure if that was a question - but it looks like it belongs to AuthorizationServer\n. You need to set auto flush to true in the system.diagnostics config element.\n. Never seen that before, sorry.\n. Still haven't seen that error before. Are you using svctraceviewer?\n. Any news?\n. Token has the JWT as a string. That's what you forward.\n. That has changed between the beta and RTM.\n. If the name appears on the top - they are already pulling that data from the principal. Also try Controller.User\n. If Thread.CurrentPrincipal is really null - then something else is fundamentally wrong.\n. yes\n. you can't.\n. Well - as I said. This is not implemented. You'd need to build that from scratch.\n. Well this requires a fundamental re-architecture of many parts in IdSrv. That's why we haven't done it yet.\nYou would start adding the HRD functionality to the login screen. Then go from there.\n. AuthorizationServer may be a better fit for you.\nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/wiki\nhttps://vimeo.com/69407850\n. no. But this does only happen once per \"logon session\".\n. With enrol you mean \"register in the STS user database\" ?\n. OK. Have fun!\n. In federated authentication we don't set a cookie.\n. IdSrv does not issue a fedauth cookie. They are called idsrvauth.\n. Fedauth is probably from your RP - if IdSrv and RP are one the same machine.\nIdSrvAuth cookie only makes sense for users of IdSrv - HRD is just a gateway not a \"native authentication\".\n. On the HRD controller, there is a ProcessWSFedResponse method - in there you get access to the claims coming from the external IdP.\n. Well - that's the wrong way to think about it.\nIdSrv supports a number of protocols - find the corresponding libraries for Java and give it a go.\n. no.\n. The \"remember me\" makes the cookie persistent - otherwise it is a session cookie only.\nYou can control the timeout of the persistent cookie in general settings.\n. Well - the only way to send data from the idp to the RP is via the WS-Fed response message - either inside the token (as a claim) or some extension of the message itself.\nIn HRD there is only one controller involved, the HrdController. Put breakpoints everywhere to understand the flow.\n. You would not use the identity & access tool. And i am sure you have an authorization element in config that denies all anonymous requests. See the wiki for samples of resource owner flow.\n. Yes for WS* the default WS* token type is used.\n. You can't forward a client certificate. You also need the private key. IOW you to access ADFS cert signing page with the browser directly - not via an intermediary.\n. The ADFS proxy is using the WS-Trust OnBehalfOf mechanism for communication with the internal ADFS. I never looked into the details how they make that work.\n. Just different certs. \nTechnically this works, strictly speaking you should use different keys for different concerns.\n. Yes - this is a know issue. Basically WIF and ADFS have some compatibility issues (both from MS of course ;))\nIs this blocking you? I can have a look at my old archives to find the workaround.\n. Well - in a nutshell -\nyou need to derive from the SAML2 security token handler - I think there is a method that writes out the subject confirmation - you can override that. I think it was as \"easy\" as setting the subject confirmation to null.\nI can't find the old source code right now - but that should give you a starting point.\n. We are not doing anything special. All crypto is coming from WIF.\nPlease use the Microsoft forum to find out if WIF can run in FIPS compliant mode (and tell us afterwards ;))\n. v1 is deprecated.\n. Please open a new issue for IdSrv v2 is the problem isn't solved.\n. Yeah - we never tested SAML2 via OAuth2 - since this is a combination that generally does not make sense. Why do you want to do that?\nYou could use the SimpleHttp endpoint as an immediate workaround I guess.\n. Did you solve it?\n. I guess you need to post your IdP/RP config.\n. OK?\n. I wouldn't call that SSO - but technically that could work. In step 3 I guess you want to put the SAML token on the query string? That could be problematic (encoding, length etc).\n. An STS is the abstraction of what you describe. A shared service for creating and signing tokens. So yes.\n. That said - if IdentityServer is immediately applicable to you - depends on many things.\n. Well in our case it is there to make sure the SAM runs for all requests. Is there a problem?\n. Yep we could do that. Have you tried it? Is everything working as expected?\n. well - my observation is this setting is required so that the FAM/SAM protect static files.\n. good question :)\nWell I guess historically we assumed that you will always use an asymmetric signature somewhere (WS* style)...You bring up a valid point though, need to check how easily this can be changed.\n. I don't think we will change that behavior anymore..working on v.next where things are substantially different.\n. The wiki has some articles - especially the one about extensibility might be useful.\n. Yea - i am pretty sure thats a OS/IIS issue. Google for schannel tracing.\n. Can I close this?\n. Check the wiki (as always ;) for ADFS integration.\n. Isn't that what you are looking for:\n(quoting the blog post)\n\"Scenario #3 \u2014 Obtaining JWT for AD users from a native/mobile app:\nImagine you\u2019re building a native mobile application (iOS, Android, etc.) for your company and it needs to invoke a WebAPI with the user\u2019s identity. Same as above, the WebAPI want ADFS to produce the token but wants it in JWT form. These mobile platforms don\u2019t have native AD authentication or WS-Trust libraries and yet need some means to authenticate the user and get a JWT for the WebAPI.\nSolution #3 \u2014 IdentityServer\u2019s ADFS password authentication:\nThe final credential type that the ADFS integration endpoint supports is username and password. The native application will collect the user\u2019s credentials and, similar to the other two scenarios,  it will pass to IdentityServer those credentials and the realm identifier for the WebAPI it wants to invoke. IdentityServer will contact ADFS and return a JWT to the native app. The native app can use that as the token when calling the WebAPI.\"\n. What do you mean with ADFS claims? All claims coming from ADFS are in the access token.\n. But that's not good enough. You need to validate the token before you can use any claims. It is better to have an endpoint in your backend to send the token to - and this returns the claims back.\n. Most config changes require a recycle - theres a \"recycle server\" menuitem in the admin area.\n. Does that work for you?\n. Not sure I understand. What's the question?\nNo roadmap so far no.\n. OAuth2 and user management are not related.\n. Since the user validation is shared by all protocol endpoints - getting context there is not easy,\nWait til Brock is back from holidays - he did multi-tenancy extensions in the past. He might have more to share.\n. Is this still relevant? @brockallen ?\n. Well - the key is to write your own user & claims repository. You need to extend the interfaces for that. Check the wiki - it has an article on extending IdSrv.\n. I wouldn't call it hacking. We don't support multi-tenancy right now. So yes you have to make changes to the source code.\n. In which database? Membership?\n. should work. Let me know if it doesn't.\n. ClaimsPrincipal.Current has all the info. (or Controller.User and downcast to ClaimsPrincipal)\n. Write a web api that returns the claims from ClaimsPrincipal.Current to your client side code.\n. Did you register\nhttps://localhost/IdSrv/issue/hrd/oauth2callback\nas the callback URI at google?\n. Google does not allow you to register .dev i guess. \n. Well - I guess the easiest would be to actually look at the query string that gets send to google. This will include the requested redirect uri - and that has to match with whatever you register at google.\n. User management is optional and IUserRepository is the minimum requirement for implementing authentication.\n. Well - the main job of a security token service is to produce security tokens. Not user management.\nYou can add user management features, but they are not needed for the core server to work.\nWe have a new user management system on our todo list for the next major release - so for the time being you would need to make such changes in your own fork.\n. If they make sense for us - yes. But we are talking like v3. Don't expect anything this year.\n. That's a fair point. But I'd not recommend separating the website and the the libraries. They have a different update frequency.\n. We have not implemented token decryption. Why do you need it? It is a server to server communication.\n. Interesting. We'll look into it.\n. That's for @brockallen \n. Feel free to work on that ;)\n. How far did you get - does WAAD redirect back to IdSrv? \n. I did a quick test - and my WAAD sends me to \nhttps://login.microsoftonline.com\nafter signout - not sure if I can change that behavior. Can I?\n. Can I close this?\n. That's an SSL issue.\n. No it is currently only implemented for WS-Federation. OAuth2 is not an authentication protocol.\nWe will implement it for OpenID Connect in vnext.\n. Not anytime soon.\n. I am talking v3 - not this year - and not early next year.\n. Setting a fixed (per app) machine key on a production machine is always a good idea.\n. Never had that error before. Start from scratch using the sample.\n. Sounds like you want to use identity delegation. Check the WIF docs.\n. They don't have to re-authenticate as long as the authentication cookie with IdSrv is still valid. The browser has to do the redirect dance, though.\n. The HRD endpoint is only a gateway - authentication is handled at the corresponding STS. The IdP needs to establish and maintain the logon session\n. You have a WCF that returns password when I send it a username? Are you sure you want to implement it like that?\nI guess you want to reset page that you can link to from the logon page. Don't bother with return URLs - i would consider the whole logon flow to be terminated when the use cannot signin.\n. You always have to do a redirect to IdSrv to request a token - there is no way around it if you want SSO.\n. No. The SSO cookie is with the user agent and IdSrv - not FedApp2 and IdSrv.\n. 1) you can't\n2) don't know - follow Vittorio's post more closely I guess\n. Yes this is accomplished using WS-Trust and standard WCF federation binding. Check the MSDN docs.\nThere is also a WCF sample in the samples folder.\n. Looks like a clock mismatch between IdSrv and RP.\n. We don't use the cloud services configuration manager. You could write your own configuration repo implementation for that - or use IaaS.\n. Can I close that?\n. But why cloud services? Why don't you use a normal VM?\nI mean I can see some advantages in cloud services as well - but the whole model is just a pain (emulator etc).\n. true - and i like this idea. But as you said - it is not trivial. And I really expect MS to make PaaS easier in the future, because the current model - frankly - sucks.\n. Well - i think it does not work. \nSam tried it before and it did not work - and I can see the problem...\n. Didn't we come to the conclusion that you want to use the simple HTTP endpoint instead or is this all a deja vu? ;)\n. Not sure what you mean with that. The simple HTTP endpoint is similar to the oauth2 token endpoint - just a different wire format.\n. Yea - for SAML the authType must be a URI. That's a \"bug\" (if you want to do SAML with OAuth2 - which I certainly don't ;))\n. Dude, I refuse to answer questions that are not even complete sentences. Either you explain your problem or ask a proper question or we can't help you.\n. Check this sample here:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security\nThat's the Web API part:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/blob/master/Samples/Web%20API%20Security/Common/Security/WebApiConfig.cs\n(especially the JWT part) - also check the Web API parts in the wiki\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/wiki\n. And thats exactly correct - WAAD must redirect to IdSrv and IdSrv must redirect to the application.\n. The reply URL in WAAD must point back to IdSrv's HRD endpoint.\n. thanks!\n. This is not how PRs work, guys. Tell us which problem you are facing and how/why you fixed it. I am not merging other people's source code if they can't even describe the problem.\n. Generally we only support wreply in some limited scenarios - and actually might plan to pull support altogether. wreply has a number of security implications.\nA better approach would be to store any deep links either RP locally or in the wctx parameter and do the final redirect within the RP.\n. Can I close this?\n. We have not implemented that for WS-Federation.\n. Well - that works for WS-Trust. I don't think WIF does automagically turn the wreq in RequestClaims. Though I have never tried.\n. Is this resolved?\n. danke! ;)\n@brockallen can you have a look when you find time?\n. @brock merge or reject\n. Sorry - this repo is not maintained anymore.. What does \"not working\" mean?\n. Any response? Or should I close this?\n. Any update? Can I close this?\n. Is this resolved?\n. Yeah - this cannot work.\nThe ws-fed endpoint is /issue/hrd\nand the identifier is whatever you configured in IdSrv as an issuer URI\n. No we require full trust as well as access to the machine certificate store.\n. IdSrv is not involved in validating tokens. You validate issuer name, audience and digital signature of the token (the token is self contained). I don't know if ServiceStack is doing that for you - or if you need to write that yourself. Hence the comment to take that to the ServiceStack forum ;)\n. on the roadmap for the next major rev\n. We only support GET to the wsfed endpoint - the controller is called WSFederationController (protocols assembly).\n. every time. That is the method implementing the protocol.\n. We have not re-compiled with MVC5/Web API v2 yet. Why do you need it? It works perfectly with MVC4/Web API v1 (and is btw not tested with the new versions).\nAs for your errors, you seem to have a mixture of Web API v1 and v2 in the solution now - in the VS 2013 templates they solve that by adding assembly version redirects.\n. Let us know if you find any issues.\n. Sorry - this repo is not maintained anymore.. You could re-write IdSrv to use Windows integrated auth directly - but OOB - yes - you need ADFS to use AD as an IdP.\n. Yes - Windows auth is a litte special in ASP.NET - you can't easily \"plug it in\" - at least not in addition to other authentication methods - so yes ADFS.\n. that should probably be a blog post - so we can link it in the wiki ;)\n. done\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/1bcceaf08e1e3f59327bd67fced5e28363e38239\n. That's IdentityServer ;)\nyou need to turn on tracing I guess - see the wiki.\n. Is the issue that you are not getting redirected at all - or that you don't need to re-authenticate at the STS?\n. Well - that's not really an IdSrv issue - typically the SAM creates a cookie that has the same lifetime as the SAML token coming from IdSrv.\nFrom that point it's a pure RP thing. Check the cookie expiration time e.g.\n. What do you mean with \"by design\" - they are two different things - \nidsrvauth is the login session cookie with the sts. this decides on how long the use does not need to reauthenticate. Everything else is RP local processing.\n. Default token lifetime == standard lifetime for SAML tokens\nRP token lifetime == if !=0 override default lifetime\n. OK - it's on the todo list. But don't expect that anytime soon.\n. I can't fix that in the forseeable future - you can a PR though.\n. Not sure whats wrong. You don't need to use Powershell anymore - it is now all supported on the portal. Also the IdSrv SiteId should probably be not a physical URL to avoid further confusion.\n. That's closest: http://www.cloudidentity.com/blog/2013/10/03/provisioning-a-windows-azure-active-directory-tenant-as-an-identity-provider-in-an-acs-namespacenow-point-click/\n. http://leastprivilege.com/2013/06/24/adding-windows-azure-ad-ga-as-an-identity-provider-in-identityserver/\n. cool. thanks for the documentation!\n. SPAs typically use resource owner flow or implicit flow. Whatever suits your needs better.\n. yes\n. Admins can't request tokens - you need to put the user also into the IdentityServerUsers role.\n. Hm - no idea whats going on - you can turn on tracing to find out more - check the wiki for instructions.\n. We support ADFS out of the box. Not AD directly.\n. As I told you before we don't support Windows authentication directly. You could write your own support for it (check the wiki for how to extend IdSrv). Or use ADFS.\n. You define them yourself - when you create a relying party / resource. the realm identifier becomes the scope.\n. That's definitely not working ;) What you mention here are cookies? Are you talking to the authorize controller or the token controller? Do you know how OAuth2 works?\n. Not sure how this is related - please open a separat thread for that.\n. The URL looks correct - the authorize endpoint will call you back on the redirect URI with an authorization code.\n. OK?\n. Validate the JWT. Check the wiki for more info.\nI will close this now. Open a new issue when you have more questions.\n. Check out the article series - short version: the client can't do the FB token request on its own - you need to build a server piece for it.\nhttp://leastprivilege.com/2013/11/26/dissecting-the-web-api-individual-accounts-templatepart-3-external-accounts/\n. This is not an IdSrv issue - redirect based auth does not work for Web APIs/AJAX. You need to re-architect your app to use token based authentication via something like OAuth2.\n. OAuth2/JWT for Web APIs - WS-Fed for Web apps.\nYou can do both with IdSrv yes - you might want to have a look at AuthorizationServer as well - since this has the more complete oauth impl (depends on your needs).\n. Without the redirect you won't get single sign on over more than one relying party. If you don't need SSO - then why a STS at all?\n. could you please open different issues for different questions?\n. IdSrv in the current version is a token service - not a user management system. That said - you have the source code and can do whatever modification you want.\nA tough one is indeed Windows integrated authentication - since using WIA and something else is not really supported by ASP.NET.\n. You are doing it again ;) This has nothing to do with the topic. Please open a new issue.\n. Probably because you have a global  element in web.config.\n. http://msdn.microsoft.com/en-us/library/8d82143t(v=vs.85).aspx\nhttp://msdn.microsoft.com/en-us/library/ms178692(v=vs.85).aspx\n. Yeah - that's a know issue. It is missing.\nThe issue is - IIRC you can only have on passive redirect endpoint in the metadata document. But we have two (/wsfed for internal account and /hrd for external).\n. You'd need to change code - yes. Why is it important - you said it works when you manually configure the IdP.\n. I actually never tried that. But IdSrv metadata was never designed with RP in mind. Would be interesting to see what ADFS is exactly missing.\n. Well - i first have to think about that.\nMy typical approach is to not do the FB auth at all on the client - but use an authorization server for that. So everything happens on the server side and the client gets the proper token back using a web view (comparable to the individual accounts sample in vs2013).\n. OK - yea i never had a look at the Facebook SDK for iOS.\nHave a look at the SimpleHTTP endpoint in IdentityServer - this is doing basic auth - you could modify it or add another endpoint to do FB token validation.\n. Is that the right direction?\n. Either that - or create 2 endpoints.\nAs I said - start with the SimpleHttp endpoint (in the protocols assembly). This is doing basic auth and you can see how to issue tokens etc.\nCurrently the basic auth parsing is done my AuthenticationHandler (see protocol.config) - i'd maybe move that logic to the actual controller if you want to distinguish between the schemes.\n. yes\n. no sorry. just read the code. then come back with more questions.\n. 4 answers earlier:\nCurrently the basic auth parsing is done the AuthenticationHandler (see protocolconfig.cs) - i'd maybe move that logic to the actual controller if you want to distinguish between the schemes.\n. yes. But you don't have to do the facebook validation in a handler. you can also do it in the controller itself.\n. There's no such thing as an OAuth token. It will return a JWT and yes - you can put in whatever claims you want.\n. No the web api will validate it using the cert. No web api to idsrv communication required.\n. that looks good to me!\n. I am glad you are making progress. The OAuth2 assertion grant would be the \"official\" approach to combine FB with OAuth2 (google for specs).\nAuthorizationServer is the more complete OAuth2 implementation - in case you want to have a look at that.\nI am on the road for the rest of the week and won't be very responsive.\n. We had not time and use case. That's all.\nI guess the right thing to extend would be AuthorizationServer. \nOr what did you mean with \"enhance identity model\"\n. Well - AS has the more modern OAuth2 implementation - and separates from authentication. \n. Check the wiki for more information on initial setup.\ni guess the flow is:\n1. validate FB token\n2. get corresponding user data and turn into access token\n. That's fine!\n. In AS there are no \"hooks\" - It is just a normal MVC app - by default it is configured to use a WS-Fed IdP. But you can add your own local login page / forms authentication / with your user repository or whatever you like.\n. In WS-Fed federation - the original RP information is not visible to the the upstream IdP. You would have to build something custom for that.\n. Your code seems to be the last in the call stack - so I would start debugging there.\n. I am not sure what that means. But by looking at the stack trace - the exception is happening in YOUR code.\n. The realm is just a name. urn:foo would we a valid realm as well.\n. ..or do it using a web view and UI\n. IdSrv supports only WS-Federation - not SAML (the protocol).\n. No sorry - we explored a number of options - but SAML and .NET are just not good friends.\n. No - I am saying that WS-Fed support is built into .NET - SAML2p support isn't. All .NET based SAML2p libraries I know of either have an incompatible license or are commercial.\n. Ping could work. ADFS would be another example.\n. ADFS is a token service over AD users - IOW AD is your management interface.\nYou can also plugin IdSrv into ADFS to and let ADFS translate between the SAML RP and WS-Fed IdSrv.\n. Right - add IdSrv as a claims provider in ADFS. Add ADFS as a relying party in IdSrv.\nIf you need more help please open a new issue.\n. I'd rather prefer an option on the WS-Fed metadata protocol config page where you can set the \"primary\" passive redirect endpoint.\n. new PR?\n. @brockallen Could you look into that? thanks!\n. @brockallen could you look into that when time permits :)\n. For for the delay, \nthis issue that this will introduce a schema change. I think we leave it as it is right now - in v.next this will be solved since there is no separate hrd endpoint anymore.\n. Well - you definitely need to modify the database schema - there are entity classes that map to domain classes and so on. You need to modify all of them all the way through.\nUnfortunately there is no easier way.\n. Either re-create or look into EF migrations.\n. Saml2SecurityTokenHandler\n. I don't understand the question.\n. Yes OAuth2.\n. Yes. OAuth2 - either resource owner or implicit flow.\n. You can set a web proxy on the channel. That's standard WCF stuff. But I can't find a reference right now.\n. The authorize endpoint is not for resource owner flow. Use the token endpoint instead.\nI strongly advice you read the spec NOW. You need to understand the protocol before you can use it.\n. All roles that don't start with IdentityServer* should be in the token.\n. The only thing i can imagine is, that you turn off the requireSsl flag. Sending authentication cookies over cleartext connections is not recommended at all, though.\n. yes SSL only. It's the most secure - and the easiest btw.\n. I can't see your config. But that you need to register the authZ manager in system.identityModel.\n. no. In web.config - system.identityModel config section. ClaimsAuthorizationManager\n. I guess you can also set the authorization manager using the static on ClaimsAuthorize\n. You need to use the realm name for scope - not the display name.\n. Have a look at the OAuth2 spec to understand scopes http://tools.ietf.org/html/rfc6749\n. The token response has an expires_in parameter. That tells the client how long the token is valid.\n. WS-Fed does not support passing the realm parameter across several sts hops. Is that what you are looking for?\n. You could write a proxy like intermediary - that requests the token from ADFS on behalf of the user (preserving the realm name) - then validate the token (including the audience) and turning it into a JWT.\nI guess you could take the idsrv federation code as a starting point for that.\n. Well - we can issue SAML and JWT via WS-Fed - but we don't do windows authentication.\n. ADFS3 on Windows Server 2012 R2 also does JWT over WS-Fed. \n. good to hear. thanks!\n. The client apps don't work at all without the fed cookies. Is that the case?\n. What I am saying is, I don't think you are seeing the right data. The fedauth cookie must be there - also on IE - otherwise the application would not work at all.\n. Is that resolved?\n. You are mixing things up.\nIdentityServer supports the following token types: JWT, SAML 1.1/2.0\n...and the following protocols: WS-Fed, OAuth2 and WS-Trust\nI don't know Zendesk - if they are not compatible then I don't know a workaround.\n. We don't support the SAML 2 protocol.\n. Yep identity server can do that.\nBut AFAIK the JWT handler from MS does not support encryption - and that's the one we use.\n. When using the WS-Fed - the FAM automatically calls the registered claims authentication manager.\n. Have you turned on tracing?\n. Check the wiki. There's an article on tracing.\n. Progress?\n. Realms and physical adresses are unrelated. Either group your services using logical realm names or make a service accept multiple realms (or audience URIs).\n. ASP.NET doesn't really support Windows + Forms in a single application. That's an issue for us as well.\n. Do you want to describe your solution - so others can benefit from that?\n. both?\n. You need to create the output directory yourself and make sure the IIS worker process has write access to it.\n. Your SPA could use implicit flow to request a JWT token for the API.\n. To get a token from IdSrv you must be in the IdentityServerUsers role (IdentityServerAdministrators are for admin stuff only).\nFrom an AuthorizationServer perspective it doesn't matter in which IdSrv role you are as long as the username matches the admin username you configured.\n. Try using the id & access wizard (vs2012) or the new asp.net change authentication wizard (vs2013) - point it to the metadata endoint and let it generate the config for you. Then copy the config over to AS.\n. If it only happens sometimes. no.\n. You need to enable tracing to see what's going on (tracing.config).\n. Closing this. Open a new issue in AuthorizationServer if necessary.\n. thanks!\n. thanks!\n. thanks!\n. If NetIQ supports WS-Federation - I would recommend using that as the IdP for AuthorizationServer. This gives you a full featured OAuth2 implementation over their existing identity management system.\n. It is not obsolete - but IdSrv is first and foremost an IdP - you already have that with NetIQ.\n. yes\n. Not out of the box. \nThe problem is that .NET does not support SAML 2p - so you would need to use a third party product to integrate that feature.\n. That's the SAML token - not the protocol.\n. No. sorry.\n. You are right - theses features are hardcoded. People wanted that feature - we are also not happy about it. But that's the way it is right now.\n. Is that resolved?\n. It says \"If you are using IIS 7.5, this could be due to the loadUserProfile setting on the Application Pool being set to false.\"\nHave you checked that?\n. IdentityModel has support for CORS - check Brock's blog.\nThe easiest would be probably to use OAuth2 implicit flow.\n. You sure you are tracing the Thinktecture.IdentityModel source as well?\n. There\u2019s a breaking change in MVC5/Web API v2 \u2013 all authorize attributes need to be updated to use RequestContext instead of Thread.CurrentPrincipal.\nI guess that\u2019s what you are seeing \u2013 the updated attribute should be now in Thinktecture.IdentityModel.SystemWeb. @brock can you check that?\ncheers\nDominick\n\nhttp://leastprivilege.com\nhttp://photos.leastprivilege.com\nhttps://twitter.com/leastprivilege\nFrom: rbrowning99 notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Mittwoch, 15. Januar 2014 03:11\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nSubject: [Thinktecture.IdentityServer.v2] ClaimsAuthorize attribute - null principal (#555)\nHey guys,\nI'm sure I'm doing something pretty basic incorrectly - but am stuck. I'm trying to use the ClaimsAuthorize attribute with an MVC controller action. I'm using the MVC template in Visual Studio 2013. If I use ClaimsPrincipalPermission then that correctly calls my AuthorizationManager.CheckAccess so it looks as if that's working OK, although I'm not too happy with the exception which is why I want to switch to ClaimsAuthorize.\nWith this MVC template AuthenticationMode is set to None, and the samples use HttpContext.GetOwinContext().Authentication.SignIn() method but I'm sure anyone reading this knows this much better than me, but I suspect that has something to do with it.\nSo, if I change my ClaimsPrincipalPermission to ClaimsAuthorize, as soon as I hit the code marked with ClaimsAuthorize I get below.\nCan anyone guide me?\nBest\nRay\nServer Error in '/' Application.\nValue cannot be null.\nParameter name: principal\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\nException Details: System.ArgumentNullException: Value cannot be null.\nParameter name: principal\nSource Error:\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\nStack Trace:\n[ArgumentNullException: Value cannot be null.\nParameter name: principal]\nMicrosoft.IdentityModel.Claims.AuthorizationContext..ctor(IClaimsPrincipal principal, Collection1 resource, Collection1 action) +161\nThinktecture.IdentityModel.Authorization.ClaimsAuthorization.CreateAuthorizationContext(ClaimsPrincipal principal, String action, String[] resources) +340\nThinktecture.IdentityModel.Authorization.ClaimsAuthorization.CheckAccess(ClaimsPrincipal principal, String action, String[] resources) +53\nThinktecture.IdentityModel.Authorization.ClaimsAuthorization.CheckAccess(String action, String[] resources) +72\nThinktecture.IdentityModel.Authorization.Mvc.ClaimsAuthorizeAttribute.AuthorizeCore(HttpContextBase httpContext) +86\nSystem.Web.Mvc.AuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext) +379\nThinktecture.IdentityModel.Authorization.Mvc.ClaimsAuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext) +90\nSystem.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(ControllerContext controllerContext, IList1 filters, ActionDescriptor actionDescriptor) +143\nSystem.Web.Mvc.Async.<>c__DisplayClass1e.b__16(AsyncCallback asyncCallback, Object asyncState) +1680\nSystem.Web.Mvc.Async.WrappedAsyncResult1.CallBeginDelegate(AsyncCallback callback, Object callbackState) +59\nSystem.Web.Mvc.Async.WrappedAsyncResultBase1.Begin(AsyncCallback callback, Object state, Int32 timeout) +151\nSystem.Web.Mvc.Async.AsyncResultWrapper.Begin(AsyncCallback callback, Object state, BeginInvokeDelegate beginDelegate, EndInvokeDelegate1 endDelegate, Object tag, Int32 timeout) +94\nSystem.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(ControllerContext controllerContext, String actionName, AsyncCallback callback, Object state) +525\nSystem.Web.Mvc.Controller.b__1c(AsyncCallback asyncCallback, Object asyncState, ExecuteCoreState innerState) +82\nSystem.Web.Mvc.Async.WrappedAsyncVoid1.CallBeginDelegate(AsyncCallback callback, Object callbackState) +73\nSystem.Web.Mvc.Async.WrappedAsyncResultBase1.Begin(AsyncCallback callback, Object state, Int32 timeout) +151\nSystem.Web.Mvc.Async.AsyncResultWrapper.Begin(AsyncCallback callback, Object callbackState, BeginInvokeDelegate1 beginDelegate, EndInvokeVoidDelegate1 endDelegate, TState invokeState, Object tag, Int32 timeout, SynchronizationContext callbackSyncContext) +105\nSystem.Web.Mvc.Controller.BeginExecuteCore(AsyncCallback callback, Object state) +595\nSystem.Web.Mvc.Controller.b__14(AsyncCallback asyncCallback, Object callbackState, Controller controller) +47\nSystem.Web.Mvc.Async.WrappedAsyncVoid1.CallBeginDelegate(AsyncCallback callback, Object callbackState) +65\nSystem.Web.Mvc.Async.WrappedAsyncResultBase1.Begin(AsyncCallback callback, Object state, Int32 timeout) +151\nSystem.Web.Mvc.Async.AsyncResultWrapper.Begin(AsyncCallback callback, Object callbackState, BeginInvokeDelegate1 beginDelegate, EndInvokeVoidDelegate1 endDelegate, TState invokeState, Object tag, Int32 timeout, SynchronizationContext callbackSyncContext) +139\nSystem.Web.Mvc.Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state) +484\nSystem.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state) +50\nSystem.Web.Mvc.MvcHandler.b__3(AsyncCallback asyncCallback, Object asyncState, ProcessRequestState innerState) +98\nSystem.Web.Mvc.Async.WrappedAsyncVoid1.CallBeginDelegate(AsyncCallback callback, Object callbackState) +73\nSystem.Web.Mvc.Async.WrappedAsyncResultBase1.Begin(AsyncCallback callback, Object state, Int32 timeout) +151\nSystem.Web.Mvc.Async.AsyncResultWrapper.Begin(AsyncCallback callback, Object callbackState, BeginInvokeDelegate1 beginDelegate, EndInvokeVoidDelegate1 endDelegate, TState invokeState, Object tag, Int32 timeout, SynchronizationContext callbackSyncContext) +106\nSystem.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContextBase httpContext, AsyncCallback callback, Object state) +446\nSystem.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContext httpContext, AsyncCallback callback, Object state) +88\nSystem.Web.Mvc.MvcHandler.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext context, AsyncCallback cb, Object extraData) +50\nSystem.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +301\nSystem.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +155\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/555.\n. That should be added then..\n. What do you mean with consider?\nI think we need clickjacking protection on the consent screens - but not on the login page - right?\n. Thanks for the PR - we won't do any changes besides bug fixes to v2 - your concerns will be addressed in v3.\n. You must also configure ADFS as a relying party in IdSrv.\n. compare your realms - you need to remove the s in https in IdSrv ;)\n. No of course not.\nThe realm is a name (that has to exactly match). The redirect URI is a physical address.\n. You can use the JWT middleware from Microsoft - see here:\nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/blob/master/samples/Flows/ResourceServer%20(Web%20API%20v2)/App_Start/AuthConfig.cs\n. The JWT middleware validates the token - the user authenticated at the authorization server - the token is the outcome of that.\nYou can manually copy and paste the token from the query string and try to validate it in a little test program you write using the Microsoft JWT handler directly. Maybe that helps to get a better understanding.\n. Check the flows sample in the AuthorizationServer repo - same approach would apply to IdentityServer.\n. You would not use that tool for Web API / JWT. That's only for WS-Fed and web applications.\nFor Web API you use the JWT middleware.\n. Well I can try..\nissuer: the issuer URI of IdSrv (called Site ID in the UI)\naudience: the realm URI configured for the RP\nsigning key: if JWT is selected and a symmetric signing key is configured - the siging key for the RP\n. The realm name of your scope needs to match the audience in the JWT middleware - it does not in your code samples\n. That shouldn't be the problem - So I assume something is wrong - everything is case sensitive and it is indeed annoying to troubleshoot that.\nSo the JWT middleware is from Microsoft - I currently also don't know how trace/debug that. Maybe research that a bit more - there must be a way to figure out why validation failed. You could also try to use the plain JwtSecurityTokenHandler to manually validate the token, this would also give you more insight.\nAlso the source code for the middleware is up on http://katanaproject.codeplex.com\n. Let me give you an answer that has the same amount of context as your question: yes.\n. You could start telling us about the technology, protocol etc - then maybe we can answer your question.\n. ActAs is a concept of WSTrust and does not exist in OAuth2.\nYou could this approach\nhttp://www.cloudidentity.com/blog/2013/01/09/using-the-jwt-handler-for-implementing-poor-man-s-delegation-actas/\nor use assertion flow (in authorization server)\nhttp://leastprivilege.com/2013/12/23/advanced-oauth2-assertion-flow-how/\n. I already gave you two options.\nIt sounds like you simply want to forward the JWT to your backend service. \n. that's OK.\n. We are not planning to do that for IdSrv.\n. No we don't. It's a standard ASP.NET application.\n. no.\n. Don't think so.\n. Try pointing the browser to the wsdl endpoint - it seems that the WCF endpoints don't activate for some reason.\n/issue/wstrust\nah - message endoints are also not enabled by default - I would in any case recommend using the /mixed endpoint\n. You tried what? the WSDL endpoint?\nWhat do you see when you point the browser to:\nhttps://server/issue/wstrust\nThe WCF test page?\n(did you work with WCF before?)\n. sounds like you don't have http binding - try disabing the message endpoints and refresh /issue/wstrust in the browser.\nyou also need to recycle the appool after making changes in idsrv config.\n. the other advice i can give you is - start from scratch.\nCreate a new MVC application - use the identity & access control wizard to hook up to Idsrv. The wiki has some walkthroughs and videos.\n. The WSTrustChanneFactory approach looks good to me. For symmetric proof keys - the relying party must have an encryption certificate configured - you can also try KeyTypes.Bearer - which does not have that requirement.\nAdditionally - you can enable WCF tracing (in tracing.config) - for the System.IdentityModel and System.ServiceModel trace sources.\n. is this a tracelog from IdSrv or one of your WCF services?\n. Can I close this?\n. I guess you need to explain more before we are able to help.\n. Have you written pass through rules for both the claims provider and the relying party trust in ADFS?\n. No. That's an ADFS thing. Check the docs\n. That sounds like you have the wrong thumbprint for the ADFS signing cert. Double check that.\n. What do you mean with \"visit\" ? The token endpoint only allows POST requests...\n. ..and that's happening on the client or IdSrv?\nIn any case - the exception says you are using the DPAPI handler - you need to switch to the machine key based session handler.\n. That should be it. Is it not working?\n. And you have enabled all the sources in tracing.config?\n. Thanks! Will have a look!\n. We compose the container in global.asax Application_Start. How would I have multiple concurrent compositions in that case?\nOr do I have the terminology wrong?\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/OnPremise/WebSite/Global.asax.cs\nWe compose in app_start and use the container throughout the application\n. OK - good to know that we are basically doing it all wrong ;)\nThis is in production for around 2 years at numerous customers going up to 600K logins a day - no one ever complained so far.\n@i-p under which conditions are you seeing problems?\n. And now that you have the right pattern to deal with delegation tokens - do you still see that exception from time to time?\n. @npateman As Glenn said - I asked him for his opinion. He knows a thing or two about MEF ;)\n. @peponeska If you have time, would it be possible to remove the thread safety option again and see if you see any problems in your load testing?\n. OK. thanks!\n. Well - \nhttp://leastprivilege.com/2013/07/12/using-identityserver-to-issue-tokens-for-windows-server-servicebus/\nThis is for on-premise - in Azure you would additionally establish trust with IdSrv via the ACS \"buddy\" namespace.\n. What's a csd?\n. Ah sorry - I typically only use CSD once to generate the section skeleton and then work on the source code only - or IOW I don't have the CSD anymore.\n. see #581 \n. The IdSrv WS-Trust endpoints currently don't support external identity providers.\n. \"How can I find the sub domain using HRD\" - I don't follow.\n. We don't trace IP addresses.\n. No idea - sorry. \n. OIDC also has a spec about session management - but we have not implemented that.\nYou could indeed call the WS-Fed signout endpoint - .NET has a class called SignOutRequestMessage that helps you constructing the right URL. Give that a shot.\n. OK?\n. Maybe in a future version. But no concrete plans right now.\n. thanks!\n. You need to send the client credentials using basic authentication.\n. The client credentials go into basic auth - not the user credentials.\n. http://tools.ietf.org/html/rfc6749#section-4.3\n. \"The Web api knows the client I'd and secret and the user passes the user id and password. That's all working fine and I am able to issue a JWT to \nthe user for future Web api requests.\"\nThis is confusing - could you please exactly expain your flow how you request tokens and use them?\n. Well - have a look here: http://tools.ietf.org/html/rfc6749#section-4.3 - which is slightly different.\nThe typical flow is that the RO flow is initiated by the client - the client talks to IdSrv to authenticate the user and stores away access token and refresh token for later user.\nThe client also keeps track of the token lifetime and knows when to refresh the access token.\n. yes. You can set the persistent cookie lifetime on the admin page.\n. Well - the token logic would ultimately pull claims from for the user from a DB - if the user would not exist anymore, this would fail. But you could make it more explicit of course by checking some flag.\n. Makes sense? Can I close this?\n. It supports the basic client profile.\nv3 is mid year.\n. As Brock said - we don't have plans to add refresh tokens to v2 - in which scenario do you need refresh tokens for the userinfo endpoint?\n. Well - how small is that modification? It would be nice when people would actually contribute back to OSS projects... Can you describe what you did?\n. OK - we won't change our current implementation.\n. The symmetric key on the main config is not used - it is either the symmetric key on the RP config or (if not present) the global x.509 signing cert.\n. I am not sure I understand - are you talking about consulting? Like validating your architecture?\n. Well - it is a standard implementation of WS-Federation - that is the reference architecture.\nHave a look here: http://msdn.microsoft.com/en-us/library/ff423674.aspx\n. WS-Trust is an \"active\" protocol - that means the client must first go to the IdP and then send the token to federation gateway.\nThat said - we currently have not implemented that feature in IdSrv.\n. WS-Trust does not have an HRD concept - rather you add an endpoint to IdSrv that \"understands\" tokens from external STSes and issues new ones.\nAs I said this feature is not implemented right now - but you can add it yourself by extending the WCF part of IdSrv.\n. Is that your real code? With blank audience and issuer?\nThe right key to use would be either the global signing cert - or when you have specified a symmetric key on the RP settings - that key.\n. Well - you have to specify a scope in your OAuth request - that's the RP. (urn:webapisecurity)\n. Right - so now have a look if the web api security RP/resource has a symmetric key configured..\n. :)\n. That's typically not how it works - you rather preserve the deep link as a context parameter (wctx) and roundtrip that to the STS. When the STS response comes back - you do the final redirect locally.\n. That said - if the \"deep link\" is always a sub URL of the realm (if a URL is used for the realm) you might get away with simply removing the fixed reply URL in RP config. But I was planning to remove that feature at some point in the future in favour of the \"proper\" approach I described first.\n. When you use the automatic redirect feature - the wctx gets automatically populated. When you handle the RedirectingToIdentityProvider event - it is your responsibility (or maybe you have to copy it from the event args - can't remember for sure)\n. Yes - I would do user management separate from the STS. The application would be an RP - yes.\n. ...or resource owner flow. But yes \"service accounts\".\n. duplicate with #610 \n. The UI cannot add claims to the token - only the STS can do that. During ActAs - the claims in the bootstrap token are re-issued. You could change that behavior in security token service core class.\n. Yes - send e.g. whr=facebook in the query string.\n. I understand that - but the fact is that in that case idsrv is not the idp - facebook is. We can only broker between the systems. \nThere is the \"remember selection\" checkbox - you could implicitly set that so the HRD screen is not shown for a certain amount of time.\n. From RP1 I then browse across to RP2 (at this point I noticed that I do not get redirected back the STS and so never add the RP2 realm to the tracking cookie)\nSo I would start investigating why you are not redirected to the STS - maybe RP1 and RP2 are sharing the local .fedauth cookie.\n. Well - by default that should not happen. Maybe you have tweaked the cookie handler? Try giving each cookie a different name.\n. Then something is wrong with your cookie between browser and IdSrv (there an .idsrvauth cookie).\n. The typical formula is \nnumberOfCookiesAuthenticationCookies = n + 1\nn = number of relying parties\n...plus one for the STS\n. You mean redirecting to some other RP from within IdentityServer?\nThis is not easily doable - I would rather recommend you inspect the claims in the original RP and redirect from there to the registration web site.\n. Is this resolved?\n. thanks!\n. Sure that possible - but not related to IdSrv - please use the Azure documentation / forum.\nFrom an IdSrv point of view it does not matter if it is a web or worker role.\n. The userinfo requires an access token from the open id connect authorize/token endpoint.\n. Yes this is possible - check MSDN on identity delegation with WCF (aka ActAs).\n. It's a while ago since i tried binary bindings in WCF. I don't know the answer.\nSince this is not really related to IdentityServer I will close this.\n. Yes it is the wrong direction.\nEvery application should have it's own fedauth cookie - sharing them might have other undesirable side effects - e.g. expiration etc...\nThat said - technically it is possible - but you need shared key material - there are samples out there to use a certificate instead of the machine key (e.g. the SSL cert) - maybe you like that better.\n. OK - do you require encrypted tokens?\nIf yes - I think I could make a small change without impacting config/schema etc.\n. OK - I started working on it - but I need to test first (tomorrow or saturday)\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/Feature_Token_decryption_for_HRD\n. OK - so the code on the feature branch worked in my (limited) testing.\nYou need to specify a decryption cert on the global keys admin page. In your IdP configure the correspondig cert/public key for encryption. let me know if it works for you.\n. I'll have a look.\nIn the meantime - what's your IdP - what's the token type? does it work without encryption?\n. Ah I see ;) You are using SAML2p - not WS-Federation. We don't support that protocol.\n. I will add the code anyways. So I leave it open for now.\n. Yes - show me the POST data.\n. I cannot repro it - for me it totally works.\nWho is the issuer? ADFS? or another IdP?\nCould you also post the stack trace and exception?\n. OK. Cool.\nI actually think this has worked since ever and that the code I added in the branch was not needed. Could you test that?\n. ?\n. There's an interface for transforming claims coming from external IdPs - Check the wiki for extending IdSrv.\n. See here http://leastprivilege.com/2013/05/17/customizing-identityserver/\nIt is called IClaimsTransformationRulesRepository\n. No we don't support client credentials flow. AuthorizationServer does support it though.\nBut your use case sounds more like resource owner flow to me.\n. Yes - right now that would be quite a change to IdSrv to support that - we can consider this for v3.\nNeed to do more research if other authentication systems give such information away or simply say \"login failed\" (e.g. active directory).\n. Will close that for now and make it easier in v.next.\n. We weren't aware that people actually use it - can make an update in the next days.\n. updated.\n. IdSrv can have its own account database - ACS can't. IdSrv can run on-premise, ACS can't.\n. Is this resolved?\n. @brockallen resolve or close?\n. The real issue is that with your procedure above, you have multiple certs with the same distinguished name in the store. This can generally cause problems with the certificate APIs in .NET. We made the decision that we use the subject distinguished name instead of the thumbprint (which also has advantages when renewing the certificate - because the name stays the same, the thumbprint changes).\n. Well - I agree this can become an issue. And there are pros and cons to either approach. I don't agree that there are a \"myriad of ways\" how certs can end up on the most important machine in your security system. That should be a very formal process.\nBut the simplest solution would be to not use the IIS to create self signed certs. They will always have the same subject name. Use a proper CA or makecert if you need to create test certificates.\n. Cool. Then fix it and send me a PR.\n. You don't need a private repo - a public one would work as well.\n. Do you want to fix it, or should I close the issue?\n. and authModule.Realm is the urn?\n. wreply is the return URL\n. URN are fine for realms. I think you can pass in whatever return URL you want to the signout endpoint.\n. You would need to modify the HrdController. In there you could look at the IP address and select whatever IdP you want.\n. OK - we will consider it.\n. I don't know - actually - I am tempted to say \"Windows 8 Home Edition is not supported\" ;)\n. whr is supported by the hrd endpoint.\n. Either do the redirect manually - or use the RedirectingToIdentityProvider event - whatever works better for your application.\n. We are currently working on v.next of identity server which does e.g. use autofac and all the other latest and greatest technologies - this is taking all our free time. That also means that right now we can't do such fundamental changes to v2.\n. In my opinion, I had to return to the RelyingParty1 application with a successful authentication. But I stayed on the IdentityServer1 without any auth cookies.\nNo you need to go back to IdSrv1 - and then get redirected to the RP.\n. OK?\n. Maybe you need a proper SSL certificate to make it work :p\n. No that was a joke ;) But you should have proper SSL validation (you turned it off in your code snippet).\nI think we don't issue the nameidentifier via the ws-trust path. That could be considered as a bug - or rather an inconsistency. Do you need it?\n. In IdSrv Name is unique as well - in fact Name and NameId have the same value in our WS-Fed code paths.\n. I have checked in a fix - \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/9d89f1602d94bed46ca36237a435c276c241fd15\nCan you give that a try (download the code from the separate branch)\n. thanks! I will have a look.\n. I have put it on the huge \"to do/consider\" list for idsrv3 - we will open the repo soon, so we can collect that there.\nthanks!\n. 1 This is just a URI - it does not need to point to a physical web address\n2 You can use the \"change authentication\" dialog on the new asp.net template instead\nhttp://leastprivilege.com/2013/10/17/using-identityserver-with-vs2013mvc5one-asp-net/\n. Have a look here\nhttp://leastprivilege.com/2012/11/16/wcf-and-identity-in-net-4-5-external-authentication-with-ws-trust/\n. OK?\n. Yes the WS-Fed endpoint you have to configure in ADFS would be the HRD endpoint in IdSrv\n. 1. yes - that's the issuer thumbprint of the direct IdP of the relying party\n2. yes only one. Why would you need multiple?\n. No need to touch .config - you configure the thumbprint in the identity provider registration\n. OK?\n. You have to setup IdSrv in ADFS as a relying party, and ADFS in IdSrv as an identity provider. Nothing else besides that.\nThis has been solved numerous times - search the old closed issues.\n. Well - in WCF you can implement a ServiceAuthorizationManager that inspects the HTTP headers and uses the JWT handler to set a custom principal (with principalPermissionMode set to custom). This is not specific to IdSrv. Check thw WCF documentation - I don't have a sample right now.\n. 1. IdSrv ignores reply to parameters by default since this is a security issue. You can change that in the admin ui\n2. Use this sample instead https://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security\n. a) the post body must be form/url encoded\nb) i'd need to see what's on the wire\nc) check the trace logs (the wiki has an article on how to enable tracing)\n. Well - then it sounds like the client credentials are incorrect.\n. yes - that's the client id/secret\nput a breakpoint here \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Protocols/OAuth2/Endpoints/OAuth2TokenController.cs#L251a\nYou need to send the id/secret via a basic authentication header.\n. I bet you have basic auth turned on at the IIS level. That would explain it.\n. Not at all - send the JWT token via an HTTP header. It is not hard to do it. I just don't have a sample right now.\n. What do you expect us to do with that information? Your code looks OK.\n. We don't support WebSites right now because we don't have access to the certificate store. You would need to rewrite the config \"repository\" for that.\nIn v3 this will be fully supported.\n. Well - right now I am simply loading the pfx from disk (or an embedded resource) - you could do the same change in your code.\n. @brockallen ?\n. This is not encryption - but signing algorithm.\nIf you set a symmetric signing key on the RP - this is used to sign the JWT - it will use HS256 then.\n. Seen that error before - this started with some ADFS rollup package - not sure what the problem is.\n. Hey @paullem ,\nif you figure out what's wrong with our MD - i can fix it.\n. Update?\n. Just to be clear - all we need is a 2nd fed endpoint for the /hrd scenario?\n. There is no federation support for WS-Trust in IdSrv - you would need to add a WCF endoint that allows authenticating using the ADFS tokens yourself.\n. Unfortunately not - but it is really \"standard WCF\" - You need to add wsFederationHttpBinding endpoint to the WCF host factory. That's where I would start.\n. Yes - here's the factory that creates the various WCF endpoints in IdSrv:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Protocols/WSTrust/TokenServiceHostFactory.cs\nThis currently supports username and client certs. You'd need to add another endpoint that supports the tokens from ADFS.\n. Did you make any progress or should I close this issue?\n. You are on the right track - but I can't really help you - I need to try it myself and I currently don't have the time for it.\n. Did you ever solve that?\n. @StateBarofArizona did you implement it - want to post your solution here?\n. ??\n. Doesn't O365 support WS-Federation?\n. Don't know. sorry.\n. I am not sure I understand what you mean with \"external applications\" or \"another website\" - the OAuth2 feature set in v2 is quite limited and we won't add new features to it anymore - that's why we build v3.\nCould you explain your requirements in more detail? Ideally on the v3 issue tracker.\n. Hard to tell - you obviously did some modification that break the WS-Federation protocol - I recommend you start with a fresh copy of IdSrv to observe the communication in a working state.\nI also don't understand what you mean with \"to prevent access to the admin side of things\" - only users in the IdentityServerAdministrators role have admin access.\n. JWT tokens are validated in the web api backend. What technology are you using for your resource/business services?\n. You can use the JWT middleware from MS to validate the token - here's an example\nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/blob/master/samples/Flows/ResourceServer%20(Web%20API%20v2)/Startup.cs\n. or IOW\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/\n. Can we close this?\n. It's always helpful to quickly describe the solution so other people with a similar problem can benefit from it.\n. Well - hard so say - you can achieve that either way. IdSrv3 is not ready yet and it will still take some time. \n..ah - and this is not a product ;) take the source code and customize it in any way. that's fine.\n. You are right we don't support that. And yes it would require credential caching.\n. The article you posted is unrelated btw - this is about the cookie lifetime in ADFS. I will close this. OK?\n. Check the wiki for extending IdSrv\n. yes\n. OK - thanks! I will have a look.\n. I am sorry that we are so slow right now - can you confirm that this fix works for you? if yes we can merge it...\n. finally! thanks!\n. I don't know what subdomains means in that context.\n. All the code you need is probably in the HRD controller. Just step through it and find out how it works.\n. Yes - I could imagine that ACS does not like that. But that would be really a question for Microsoft...sorry\n. IIRC ACS requires SSL - but I might be wrong.\n. In IdSrv you need to put the id into the token so that your RP can access it.\n. sure. every identity data you want to communicate to the RP you put in the token.\n. Probably the easiest is to get a wildcard certificate for *.ourdomain.com and install that on all your machines. Then do www.ourdomain.com for the RP and idsrv.ourdomain.com for IdSrv.\n. SSO is not a configuration option. Whenever you authenticate with IdSrv - you get a session cookie. As long as this session cookie is valid you will not see the login page again - single sign on. makes sense?\n. we don't support windows transport - and I am not sure which metadata they have in mind - there is WSDL and federation metadata.\n. downloads are here now:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\n. Sorry for the delay - been busy. Did you get it working?\n. That is probably a bug. We are not adding features right now to idsrv2 (busy with v3) - but you can send a PR of course.\n. I have no idea. Do you still have the issue?\n. Refresh tokens are not affected by certificate roll over - only access/identity tokens are.\n. Where do you get that error?\n. resolved?\n. Are you using membership for the login that does not work anymore? They are deriving the hash algorithm from the key size - maybe you new key has a different key size than the default and now hashing fails.\n. Thanks! This is indeed useful. I will look into it...ASAP\n. Hey I am sorry - I never found time to look into it. Are you using those changes in production? any issues? Would you be available for writing some docs for it if I merge it in?\n. Sorry - this repo is not maintained anymore.. Sorry I don't know why ACS is not working for you. Maybe ask Microsoft ;)\n. Where do you have that link from?\nStart here: https://thinktecture.github.io/ and go to releases.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\n. First of all check the wiki.\nIn VS2013 the \"change authentication\" dialog replaces the wizard - try this one to integrate a new app - then migrate the configuration to your existing one.\n. ?\n. 1 - you can't - but you can use the wizard to create the right config and test with a fresh app - then migrate the config to your existing app\n2 - c then point to the metadata endpoint\n. yes. I would recommend you start easy - create a new test app, use the wizard, gain experience.\nThen work on your real app.\n. The wizard added a global authorization element to your web.config (deny users='?'). You need to remove that.\n. That would probably work - but you need to write custom code for that.\n. To retrieve the token - I would use an existing endpoint like OAuth or SimpleHttp. To send it, I would probably add that capability to the login page.\n. The HRD endpoint expects a RP-initiated WS-Fed signin message. If the query string params are missing, it throws an error.\nYou'd need to change the source code to achieve what you are trying to do.\n. IdSrv does not do SAML but WS-Federation. IdP initiated is more a SAML thing - but depending on the implementation - the RP might accept uninitiated responses.\nAnyways - you need custom code.\n. yes\n. You can setup your own instance of IdSrv as a identity provider. Check the issue tracker - this has been solved a number of times.\n. It is already possible in the current version.\n. Anyways - you can use the standard WIF configuration to specify the session token lifetime.\n. Have you configured roles for the user in identity server?\n. You need to create and assign custom roles. Roles starting with 'IdentityServer' are considered internal and are not part of the outgoing token\n. Your user must also be in the IdentityServerUsers role - only users can request tokens.\n. Give the admin also the user role.\n. That's WCF's 'peculiar' way of saying \"invalid credentials\"\n. I think you are using the wrong endpoint. For authentication you want to use /issue/wsfed.\nWhy are you using /hrd?\n. Cool!\nWell v2 focuses on WS-Fed and WS-Trust - v3 on OAuth2 and OpenID Connect (and a WS-Fed plugin).\nDifferent technology waves.\n. What's the URL of the metadata document you use?\n. that's the wrong one\ntry\nhttps://localhost/AITPortalIdentityServer/FederationMetadata/2007-06/FederationMetadata.xml\n. Please open a new issue for that.\n. The federation authentication module (FAM) does that automatically for you. Check the WIF documentation.\n. progress?\n. The behavior is weird - can you verify that you are sending the idsrv authentication cookie to the /wsfed controller when signing out?\n. The flow is that you send the logout message to the idp - yes. Also check the ws-fed spec\n. is it working?\n. resolved?\n. By default we assumed one store for both admin and users.\nBut only users in the \"IdentityServerUsers\" role can request tokens - IOW - if you don't add that role to an admin, he can administrate the STS but not \"use\" it.\n. v4 of the JWT nuget has breaking changes. You can't use that with IdentityServer\n. No - this should work.\n. Progress?\n. progress?\n. Technically you could do that using WS-Trust or OAuth2 (or simple HTTP) - but since there is no front channel round-trip to the STS you won't get a SSO cookie and thus no SSO.\n. I probably would use OAuth2 resource owner flow.\n. ...well - we'd need more details than just \"it fails\" - the full exception / inner exception / stack trace would help.\n. There seems to be missing something:\nMessage: The X.509 certificate CN=auth.lendingtree.com, OU=COMODO EV SSL, OU=\"Hosted by LendingTree, LLC\", O=\"LendingTree, LLC\", STREET=11115 Rushmore Dr, L=Charlotte, S=North Carolina, PostalCode=28277, C=US, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.\nAnyway - seems this issue is in .NET itself - maybe the revocation list is not available or something like that. You can turn on crypto API tracing in Windows - maybe that gives you more information.\n. progress?\n. It is rather the other way round ;)\n4.0 has breaking changes - just stay on 1.0\n. This is an unusual combination - not sure I ever tried that. Try SAML/JWT with certs instead.\nFor JS you would use OAuth2.\n. Do you need to encrypt the token from ADFS to IdSrv? Try without first.\n. Have you also configured the decryption key on the ADFS integration config page.\n. I don't think this is related - \njust to make sure - are you using the \"ADFS integration\" feature or just ADFS as an IdP ?\n. Hm - I am pretty sure we implemented decryption - otherwise there would be no point in having the config UI and setting. I'd need to debug through the code - which I don't have the time right now.\nI'll see what I can find out ASAP\n. OK I see the issue - this cert is not for decrypting incoming tokens - it is rather for encryping outgoing ones.\nSeems we don't have decryption support right now - I can see two possible solutions:\n- Don't encrypt the token - it is server-to-server communication only\n- Add the decryption code. I don't have the time right now to do it, but the code would be similar to:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Protocols/WSFederation/HrdController.cs#L100\nThe token handler has a Configuration property where you can set the resolver in a similar manner IIRC\n. Actually - \ncheck this here:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/e1ff271eae1be2aa798b8a0c13f4d4d60e1d7c67\nThis is in the AdfsBridgeDecryption branch - I haven't tested it, but give it a try. \nYou need to configure the decryption cert on the admin/keys page for that.\n. Cool. If it is tested and works for you - send me a PR.\n(maybe check is the decryption cert in IdSrv is set or not / if it is null.\n. SAML2p is not supported by .NET and would need to be added using commercial third party libraries. This is a substantial amount of work.\nSomeone else here managed to integrate OpenAM IIRC - but using some WS-Fed support there. Maybe check the old issues.\n. IIRC == If I Remember Correctly ;)\nalso try the FederationRP document (there are two links on the front page)\n. thanks!\n. The only reason why identity server would show the login page is because the authentication cookie has expired or is not present - that might be the right direction for more investigation\n. The error is pretty explicit ;)\ntry\nnew Claim(\"http://myclaims/firstName\", \"foo\");\n. SAML 1.1 is different to SAML 2.0 - thats why ;)\n. No. v2 is not designed for that. v3 is - but we are not done yet with ADFS support.\n. well - that would be completely custom development. You would create a token for database use without that user being logged on...\n. No - delegation needs the credentials of the \"middle tier\".\n. Yes - 4.0 has a breaking change - any reason you need 4.0 ?\n. Nuget will only go to 4.0 when you upgrade packages - not during restore. A major version change means breaking change.\nIdSrv3 uses the latest JWT yes.\n. check if Katana logging shows more info: \nhttps://katanaproject.codeplex.com/wikipage?title=Debugging&referringTitle=Documentation\n. Sorry - this repo is not maintained anymore.. We don't support anything beyond true/false - we know that this is a limitation but v2 is \"done\". If you want to add that feature, we can talk about it.\n. No - don't think so.\n. Hi! Cool!\nI think you should rather put that into a separate repo as a community add-on. Let me know where you put it and I will link to it from the wiki.\nOK?\n. Hey, \nsorry for the delay - busy with v3.\nJust package it in a repo that you own. I will link to it from the wiki,\n.\n. We are using WS-Trust 1.3 and whatever WS-Federation version is supported by .NET 4.5 (can't remember). It is not easily possible to change that.\n. V2 has no built-in way to control refresh token lifetime.\n. I actually can't remember - it is such a long time ago. You can of course change the code in any way you want. V3 will be released very soon.\n. v2.5 has no implementation of the OIDC session management spec - it is still in draft. In v3 we have a signout endoint.\n. right - but it is not recommended to have multiple certs with the same name in the same certificate store. No issue with using different names for signing and encryption certs.\n. No - I am saying that you should give each cert a unique name.\n. Only SSL certs have a requirement that the CN matches the DNS name. Signing/encryption certs can be called whatever you like.\n. Every RP should use SSL. And you need a different cert for that (unless it is a wildcard SSL cert).\n. no SSL is not only about encryption. I can still replay an encrypted token e.g.\n. releases are here:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\n. Yes you need to change the source code. In IdSrv3 this is configurable. See here:\nhttps://github.com/IdentityServer/IdentityServer3.WsFederation/blob/master/source/WsFederationPlugin/ResponseHandling/SignInResponseGenerator.cs#L171\nThe signature algorithm gets configured on the signing credentials - in v2 this would be somewhere in the configuration class.\n. This has been discussed many many times before. You can't - or you will lose features like SSO, external IdPs etc..\n. no idea. why not.\n. I am not sure what you are trying to do but the resource parameter is Azure AD specific.\nGenerally we don't recommend to use IdSrv2 for any OIDC or OAuth2 work - it is deprecated in favour of IdentityServer3\n. Well - there is no redirect URI in your request. And as I said before - resource is a MS proprietary parameter supported only by Azure AD.\nSince we don't support IdSrv2 anymore - I would recommend you use the source code and debug through to see what's going on.\n. posting the same issues in multiple repos won't help. sorry.\n. Greetings to the 90ies ;)\nThat's by design - the secrets gets stored hashed. You can't have it back in plain text.. ",
    "benfoster": "Looks like a bug, it is actually including roles that do start with \"identityServer\" :)\n```\n    public IEnumerable GetRoles(string userName)\n    {\n        var returnedRoles = new List();\n    if (Roles.Enabled)\n    {\n        var roles = Roles.GetRolesForUser(userName);\n        returnedRoles = roles.Where(role => role.StartsWith(Constants.Roles.InternalRolesPrefix)).ToList();    \n    }\n\n    return returnedRoles;\n}\n\n```\n. Yes, was going to send a pull request but then you said to not bother until the beta :)\n. Perhaps it hasn't updated on GitHub? The code here is incorrect https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core.Repositories/ProviderUserRepository.cs\n. Yes that file is correct.\nHowever, the instance of IUserRepository injected into ClaimsTransformer for me is of type ProviderUserRepository when requesting an OAuth2 token, not ProviderClaimsRepository.\n. You're right, it does call the ProviderClaimsRepository after calling ProviderUserRepository, I just hadn't stepped in that far. Why does it call Roles.GetRolesForUser twice?\n. Okay, thanks for clarifying, and your patience. I'll close the issue.\n. ",
    "brockallen": "Changed the menu to \"Relying Parties/Resources\"\n. Yep, also done.\n. I removed them from the .csproj. Thanks.\n. This will require more configuration as well.\n. I think we're eventually going to allow the OAuth implicit flow thus there's no need to allow CORS access to the OAuth token endpoint. If you really want this support then you can add the CORS configuration yourself with little effort. Here's a post on how to get started with that: http://brockallen.com/2012/06/28/cors-support-in-webapi-mvc-and-iis-with-thinktecture-identitymodel/\n. Not going to happen for v2. Will re-work in v3.\n. Name/Identitifer is useful as a symbolic name.\n. Thx for the report. I found and fixed the issue.\n. For native clients and implicit grant, token string is now rendered via  in html. Please test in win8 clients and reopen if changes are needed.\n. We do.\n. This is a bug in ASP.NET, IIRC. It's due to a lack of .browser config to match the user agent string.\n. Do we want to take a dependency on this: http://51degrees.codeplex.com/ to address the issue?\n. @ChristianWeyer Can you confirm for me what the real UA string is on your iOS6 device is? I am testing iPhone with:\nMozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\nand it seems to be working (meaning, it seems to be detecting it as a mobile device). Also, for iPad:\nMozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\nThis too is being detected as mobile. So my UA strings I'm using to test might be wrong. I'd like confirmation, please. Thx.\n. Hmm, so with this UA string it also is correctly detected. Maybe MSFT patched something?\n. I know this issue is like a million years old, but can you test again Christian? I used your emulator's UA string and it seems to display the mobile version.\n. Ok, I'll close until I hear otherwise from @ChristianWeyer  :)\n. Thx for the report. Will look into it.\n. Fixed. Thx for the report.\n. Done.\n. Will have to research.\n. Done\n. This is how I make certs:\nmakecert.exe -pe -r -a sha512 -n CN=idsrv.local -sr LocalMachine -ss My -sk y exchange -sk idsrv.local\nDom may have a different way.\n. Oh also, you'll have to grant IIS_IUSRS read access to the key from mmc/certificates.\n. Currently when you use the HRD endpoint to auth users and the identity comes from an external provider (WS-Fed or OAuth2) then that identity is just passed thru -- we do not store it in IdentityServer.\n. Given that you can't upload your own certs into Azure WebSites this is an unsupported scenario.\n. Thanks for the feedback. I'll look into this tomorrow. \n. I reorganized the viewmodel to address this.\n. I renamed some of them in an attempt at consistency.\n. Done\n. Well, it won't be used of course. \n. @sankarapandian18, here ya go: http://brockallen.com/2012/07/08/mvc-4-antiforgerytoken-and-claims/\n. Would you also want it for the decryption cert as well (for symmetry)?\n. Can you send me what you have for  in the config? I'm wondering if it's simply a bad value.\n. The other thought is that this is the exception you'd get if the temp data cookie value was modified or tampered with in some way. So perhaps the cookie is being changed in flight or by some infrastructure?\nAlso, is this happening when just trying to browse the home page of IdentityServer? What URLs?\n. Do you have this in a repo I can download to run locally and debug?\n. Yes, the TempData is what is causing the CookieTempData to get invoked. I'll investigate and let you know when I find out what's going on.\n. I finally had time top repro this. It was an edge case bug in the cookie temp data provider. It's now fixed: https://github.com/brockallen/CookieTempData/commit/a74ced1762e567c03867d1e46ad20265fdd72547\nThanks for reporting it.\n. Only for the CookieTempData package. That's the checkin here -- to update to v1.1.1 of CookieTempData.\n. So the error message should say something like \"Name is required\" or \"Description is required\" like all the other admin screens.\n. Was done as part of this work: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/4bc2db39ee073ef78d16c19260aa013054d109ce\n. Fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/6bf510fd686bc1be69908db8fcba149b10e55e21\n. Oh I meant to make this fix yesterday (I forgot). I'll go do it now.\n. Ok, fixed here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/1f6cfaa5e4a9e657cfa51d0a9c901458b7957096.\nTo change the database being used you should only need to change the connection string and provider for the IdentityServerConfiguration entry in connectionStrings.config.\n. BTW, just added a new admin feature to recycle the appdomain. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/9c071c62aba28801fa0a2423e4287d0756b41117\n. I have successfully deployed IdentityServer as a web role in Azure.\n. Fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/1ba3398a74f8d61543cb350c08a7e842694dea95\n. I tried to repo and could not. I downloaded the latest .zip to a new folder, unzipped and built. It compiled cleanly. \nCan you explain other steps to reproduce the problem?\n. It's supported in IdSvr3.\n. Merged in the change password feature. Thanks for the contribution.\n. Dom, do you think this is needed? I don't remember why I wanted this.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/37017dc743c8f18d532cef5fda2e3fa494aa5c7a\n. If you provide .resx files, then I can do the work to add them into the UI. I guess I'd need you to also do the current/english text as well as the base .resx. \nAny objections, Dom?\n. @BRovito -- perhaps we should chat on email/IM to plan further -- there will have to be some minor design work in the UI to accommodate this. I'll start to look later this evening on what would need to be done.\n. If you want to keep at it, then that's great -- I won't have time to look until this weekend.\n. Ok, I finally got some time to merge this in -- was a big pull request, and a lot of work on your part, so many thanks. I've done a few UI changes since your fork, so I'll have to go back and do some cleanup to track down the new strings and I'll let you know which ones will require translations. Merci!\n. Which protocols do you want to use from IdentityServer? Or do you not care, as long as you can get some token from IdentityServer?\n. I'll be doing a blog post in the next few days on doing this.\n. I don't use the providers in my use of IdentityServer. I've been using my own account management library: https://github.com/brockallen/BrockAllen.MembershipReboot. I still need to write a blog post on building a custom repository to map to another account storage option... it's on my TODO list.\n. Thanks a ton -- I'll get to this as soon as possible (it's a lot to merge).\n. I'll be making a blog post later today on how to mitigate this. The only real option is to use server side session token caching -- it makes the cookie smaller.\n. BTW, here's the post: http://brockallen.com/2013/02/21/server-side-session-token-caching-in-wif-and-thinktecture-identitymodel/\n. @markgmarkg It would depend on how you implement the cache. \n. Fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/70e12d33aa3b42b4e10131ebf295858d4cb3d124\n. We can debug it next week -- I can't repro here.\n. Fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/61801988549a4efa9fa5faffaff88636a31e403d\n. Done here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/d4a121fdf78681baf54c54e6f262c7459f7318ec\n. I see there's a NativeClient setting commented out in the client config class -- can we use this instead? If they're not a native client then we don't do the SSL check? Or do we want to allow no-SSL for browser clients as well?\nOr is this as a setting silly? Meaning, if they want http, then they'll enter http into the redirect URL and if they really want https then they'll enter https?\nI guess I like the automatic enforcement for SSL. Can we get away with just preventing the HTTP scheme (thus allowing anything else) and not have a setting at all?\n. Done here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/d4a121fdf78681baf54c54e6f262c7459f7318ec\n. Done here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/4bc2db39ee073ef78d16c19260aa013054d109ce\n. Ok, I just tried to repo and I can't. My only guess is that you're losing some cookies and that's why the wctx is getting lost. Maybe you can debug a little more and look into the cookie issue as a possibility? \n. Any updates? If I can't get any help in reproducing this, then I'll have to close the issue.\n. I've started to debug the fiddler trace logs. For some reason your ADFS is issuing a different form of wctx than mind. Your ADFS issues \"BaseUrl%3dhttps%253a%252f%252fadfs.infratel.com%252fadfs%252fls%252f%5cwtrealm%3dhttps%253a%252f%252fadfs.infratel.com%252fMvcTestApp%252f%5cwctx%3drm%253d0%2526id%253dpassive%2526ru%253d%25252fMvcTestApp%25252f%5cId%3did-405b1d66-971f-4b74-b266-eb53df1e4ef0\" where as mine only issues a GUID like \"0a5355db-d4a2-4e0f-b486-1fd24ac4b88a\".\nI'm still investigating...\n. Ok, so even though I could not repro your issue due to my ADFS not issuing similar wctx params, I think I did discover a URL encoding bug in the HRD code. It wasn't a problem for WIF when we redirect back to a normal RP, but I'm guessing that ADFS gets cranky when the URL encoding doesn't match exactly. I think that's what you were experiencing so with this check-in (https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/5e130bb107591d557e56703709b3ee57ac25171a), please re-test. Thanks.\n. Ok, I think I'll close this. If @bin0m finds an issue, they can re-open. \n. This is now assigned to me. As for looking at it, I have this scheduled for the end of May. Sorry that it's so far away, but the schedule is very busy.\n. Bah, the WSTrust endpoints don't seems to support Task-friendly async APIs. Too much work :/\n. Are you expecting the user to be logged into both MVC apps just because they log into one? I guess I don't follow the flow that's happening nor do I understand the flow that's expected.\n. Yes, this is one of the goals of using a STS -- to centralize the authentication. Both your MVC apps needs to be configured to trust the same STS. Once the user logs into the first MVC app (via the STS) then they'll also be logged into the STS. So once the second MVC app requires authentication it will redirects them to the STS and the STS should issue the token without any further authentication. This is assuming that you've configured both MVC apps to trust the STS and the STS knows about the 2 MVC apps (RPs) to which it will issue tokens.\nThis is all just basic federation. I don't know if this is your issue or you have something more complex going on. It's hard to tell.\n. I don't know. I can't tell if my last comment was useful to you at all and if not, what else am I missing.\n. Yea, that all looks normal AFAICT. \n. Actually, looks like you're missing the \"s\" in the \"https\" on your config for the audience URI and the realm in the MVC 4.5 app.\n. You have to understand the different between an identifier and a URL. In ADFS for your MVC4.5 app, it looks like the identifier is \"https://MvcDotNet4.5Application/\" but in the MVC 4.5 app you have configured the audience URI and realm to be \"http://MvcDotNet4.5Application/\" (without the \"s\" in \"https\"). Since those are different strings, then as far as ADFS is concerned it's not the same. Just make them all the same and your ADFS should be able to identify your app.\n. Only last thing I can think of is that your 2nd MVC app simply is not issuing a 401, thus the user is not being redirected to the STS. But I think we've established that your problem is not related to Identity Server, so you should take further questions to the MSDN WIF forums. G'dluck.\n. This: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/master/samples/AdfsIntegrationFullSample is the best thing we have right now. I should/will do a blog post sometime in the near future on the new features.\n. Damn git filter. Done.\n. Finally posted here: http://brockallen.com/2013/04/14/getting-json-web-tokens-jwts-from-adfs-via-thinktecture-identityservers-adfs-integration/\n. It's hard to understand what the error is. Can you provide exact steps to repro from a fresh download/install of identity server? \n. Ah, good point @astaykov -- now that error is much more clear. I bet the @vvishnu installed IdentityServer beneath another app in IIS that is already using WIF.\n@vvishnu -- can you confirm? If so, then close out the issue please. thanks.\n. We have DB migrations in the repository project for SqlCe and SqlServer. We've not gotten a lot of feedback on how well they work, so please let me know if you try them and if they work for you.\n. If you're running them from VS then you should use the -SourceMigration switch to tell it where you're coming from.\n. Yea, I only seem to have that issue with SqlServerCompact, thus the need for -SourceMigration. \n. We support OAuth2 refresh tokens and these can be revoked in the admin tokens page.\n. Fixed\n. The Role \"Create\" button was fixed. Thx for reporting it.\n. This is not an issue with IdentityServer -- it's an issue with your web server not having the right privileges to connect to your SQL server.\n. Thx for reporting.\n. Actually, I think I added this recently -- what version of the code are you on?\n. Ok, here's where I added the validation checks: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/56d0513f4c136d63f555e962beefce835216df50 (done some 5 months ago). Are you working with an earlier version?\n. Ok, I'll rephrase: The current version of the code requires a redirect URL for implicit and code flow. I'll close this unless there's a scenario I'm missing.\n. I'm sure Dominick has more to say on the topic, but IdentityServer v2 has become pretty mature and stable. So, what's here is pretty close to whatever you might call \"done\" (at least for version 2). \n. IdentityServer has a few extensibility points. Each of these extensibility points is modeled with an interface and you would just have to configure your class(es) in the ~/configuration/repositories.config.\nI guess the real trick is to determine which piece you need to customize and then which interface is the right one for you to implement.\n. You could always special-case it. But I don't have time for that. Maybe in the future... and maybe by then twitter will support OAuth2 or OIDC.\n. Thanks.\n. Yep, I assigned this to myself to look into later when I get a chance. \n. Ok, I finally looked into this and I don't think I'm following the question. When a user sees HRD and they check \"remember selection\" the cookie \"hrdSelection\" is used to remember the value. The cookie \"hrdidp\" is used for signout.\n. Any comments on this, @bgnt44? If not, then I'll close the issue. Thx.\n. So then it sounds like your approach ignores the user's preference if they check the checkbox or not, yes? In other words, we allow the user to choose the behavior with the checkbox and something about your scenario that approach didn't work.\nOr what am I missing?\n. Also, what do you mean by \"until he is explicitly disconnect\"?\n. So let me ask... what if the user goes to RP1 and comes to HRD and chooses STS1. They then go to RP2 and come to HRD -- you expect STS1 to be automatically used? I think the reason it's implemented the way it is now is that we wanted the user to choose if they pick STS2. If they always wanted STS1, then that's why there's the checkbox. \nSo, given this... in your opinion is there an issue in IdentityServer or not? Or is the behavior just something you needed to change in your fork, but you don't see a need to change the original?\n. Many of these things are already implemented here: \nhttps://github.com/brockallen/BrockAllen.MembershipReboot\nIt's not integrated into IdentityServer, but you could easily implement the interfaces to map from IdentityServer to MembershipReboot (I've done this on a few projects now). \n. Just an update -- we're working internally on a long term solution. Once we have something to share, we'll make an announcement.\n. Not terribly soon, unfortunately :(\n. I don't have an example offhand (that I can share) but it involves implementing the appropriate extensibility interfaces that IdentityServer has and call into MR for the implementation.\n. You mean secret question/answer for password reset? If that's the question, it does.\n. You'd have to check the MR samples. \n. IdentityServer doesn't mandate your user account store. It can be configured to use membership (the default config does this, in fact), so to answer your question, \"yes\". \n. Well, I suppose it depends on how you're using it. An STS is usually meant to provide tokens to other apps (for SSO). Also, IdentityServer has some assumptions about how the user's identity is being modeled (via claims for example) and it has its own login code (see the Account controller).\n. Custom provider for which part? Validating user credentials? Loading claims?\n. Endpoints.cs needs to be changed to show http, perhaps? Not sure if the endpoints will be the same with a SSL device.\nAlso, not sure how WS-Trust will work.\n. Ok, here's what's going to happen with this feature:\nTwo new settings will be added to the global configuration: 1) Disable SSL, and 2) Public Host Name. \nDisable SSL (if enabled) will not reject requests into the web server if they are not using SSL. This is based upon the premise that there is some SSL device in front of the web server, so any URLs returned from the web server (federation metadata, login redirects, etc.) will still point to HTTPS. Also, any cookies that are issued will still keep the secure flag (again, assuming the SSL device will pass it thru to the client browser/user agent).\nPublic Host Name (if set) is used instead of the web server host name when any of those URLs above are returned from the web server. This is useful when the load balancer/SSL device is handling some public host name but the web server that IdentityServer is hosted on is some other internal host name. In other words this tells IdentityServer what its public host name should be.\nIn general this approach tries to make the fewest assumptions about the load balancer or SSL device being used. Really, the only assumption is that the load balancer/SSL device only does the SSL bits and then passes everything else back and forth to and from the web server. \nFeedback appreciated (the sooner the better, since I only have time to work on this in the next couple of days).\n. Ok, here's a branch with the changes: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/nossl\nI've tested everything except WS-Trust.I'm pretty certain WS-Trust won't work without more effort. I saved the worst for last :(\n. I also need to add a new migration for the new DB fields... I'll add that this morning.\n. Ok, I updated the branch with the DB migrations (if you needed them).\n. Did you find any time to test?\n. I look forward to any feedback.\n. I merged the nossl feature branch into master this morning.\n. It's simply code in source control. Releases are indicated on the release page.\n. I don't know when that will be.\n. One thing I came across today was that if the web server has SSL disabled yet still has the cookieHandler set to require SSL (which you should) and you hit the FAM redirecting to the STS it does a SSL check. You can get around this by handling the FAM's AuthorizationFailed and calling the FAM's RedirectToIdentityProvider to force the redirect.\n. No -- you need the requireSSL flag so that when the SAM issues the cookie is sets the secure flag. The FAM is then also checking the requireSSL flag to prevent the RST redirect if the current page (the one that's getting 401) is not using SSL. \n. @epicthreedev  Any feedback on this?\n. Ok, I'll close this due to lack of negative feedback and we'll call it \"implemented\". Thanks.\n. DB/mappings and Admin UI updated.\n. You should be able to use this in a console app as long as you have the appropriate entries for membership and role providers in your .config.\n. Federating is about centralizing the login (which will give you SSO) and centralizing the account management. To get SSO then you need to send the user's browser to the identity provider so they can establish a session. Just because you're building a SPA doesn't mean you can't do this. Jabbr, stackoverflow, and others do this, so you can too.\n. Been meaning to add this, so here ya go: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/b3a605e3e422350417ec89b4cfd60903eb771eee\n. Can you elaborate a bit more on the code performing steps 1 and 2? Is this from server-side code (in a web app)?\nAlso, maybe explain a bit more about the problem and what you're really trying to do.\n. I think I'd rather see the tomcat server (the initial web app) make a WS-Fed signin request to IdentityServer passing the WIF enabled MVC app's realm identifier. That way the user logs into IdentityServer (and not some other backchannel of passwords being passed around) and once they do they are redirected and logged into to the WIF enabled website. This approach also skips the non-WIF middleman web app.\nThis might mean coding all this up differently than you had hoped, but any other custom solution was going to involve changing things anyway.\nAlso, these aren't really issues with IdentityServer, so not sure this is the right place to be asking such questions.\n. Ah so the problem is that you have the user's identity in two places -- one in the tomcat app and another in identity server? That sucks.\nSo then yea, I suppose you can tunnel the WS-Trust call, and then you'd need to POST it to the WIF enabled app. Lots of details to get right. Sounds like a Frankenstein protocol :)\n. Ok, will investigate.\n. Ok, I reworked the migrations code to handle this situation better. Thx.\n. I guess I'm a bit confused -- you want to find out which external IdPs are configured in IdentityServer so you can show them? Here's the pertinent query that the HRD page uses:\nIEnumerable GetVisibleEnabledOAuthIdentityProviders()\n{\n    return IdentityProviderRepository.GetAll().Where(\n        x => x.Enabled && x.Type == IdentityProviderTypes.OAuth2 && x.ShowInHrdSelection);\n}\nLet me know if this isn't what you're looking for.\n. It's a point of ongoing discussion. We'll know what our direction will be in the next month or so, so stay tuned.\n. This is essentially a dup of this issue: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/139\n. If you're doing OAuth2 then you might want to consider switching to AuthorizationServer:\nhttp://leastprivilege.com/2013/06/13/announcing-thinktecture-authorizationserver/\nYou could then use whatever authentication/federation solution you wanted.\n. Well, what I was suggesting was that if you needed OAuth2 resource owner flow then you might want to look into AuthorizationServer. It then defers the authentication to some external IdP and you could use IdentityServer as the IdP.\nIn any event -- IdentityServer supports federation to other IdPs. So you'd want to configure a identity provider for 1) WAAD and 2) IdentityServer itself. This requires the \"Enable Federation\" setting under WS-Fed protocol config.\n. I think this file is left over from IdSvr v1. History shows that Dom did the initial checkin, I updated it for the new layout and Sebastian did the i18n. So yea, prolly not needed.\n. removed\n. Enable machine key session support in the SAM, if that's not already configured.\nhttp://brockallen.com/2013/02/18/configuring-machine-key-protection-of-session-tokens-in-wif-and-thinktecture-identitymodel/\n. This issue tracker is related to issues for IdentityServer. If you're looking for support for ADFS then use the Microsoft forums.\n. Hmm, are you on the latest version of the code? In the latest, OAuthClient/Index.cshtml uses @model OAuthClientIndexViewModel, not OAuthClientViewModel. \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/OnPremise/WebSite/Areas/Admin/Views/OAuthClient/Index.cshtml\n. Yes, wreply is the reply to address. See http://docs.oasis-open.org/wsfed/federation/v1.2/os/ws-federation-1.2-spec-os.html\n. Yea, despite MSFT's claims that a auto generated single server machineKey remains consistent, I've seen numerous reports that they have problems until they set an explicit one in config.\n. I'm unfamiliar with that button. I'd suggest looking in the .config to ensure they have been explicitly set.\n. Some machine key docs: http://msdn.microsoft.com/en-us/library/ff649308.aspx\nScroll down to Web Farm Deployment Considerations\n. Not sure @jasonwest  -- open a new issue if you don't sort it out.\n. Sounds like your questions are more around federation and WIF, so I'd suggest getting started by reading the WIF docs on MSDN:\nhttp://msdn.microsoft.com/en-us/library/ee748484.aspx\nhttp://msdn.microsoft.com/en-us/library/hh377151.aspx\n. I'll get to this PR this week...\n. Under the Protocol Config under WS-Fed you need to enable the Enable Federation checkbox.\n. This configures the STS to encrypt the token in addition to signing it. At the RP side you need to have configured a cert (that contains the private key) for decrypting and in the STS for that RP you need to configure the certificate with the public key (.cer). \nAs for how it affects the OAuth stuff, I'd have to go check the code (or let Dom chime in).\n. Did you check the wiki?\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/wiki\n. I think the main thing to realize is that IdentityServer supports various protocols. So you'd need to identify which protocols your non-.NET clients support and then you'd need to work from there.\n. Done: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/315\n. Done\n. So you want IdentityServer to act as a multi-tenant STS? This would mean that the WS-Fed endpoint would need to be scoped in some way to know the tenant and the login page would also need to know the tenant, as would your identity database. \n. I guess I'm not following.\n. Sorry I wasn't able to put any more time into it today. Glad you got it working.\n. There are some helper APIs in Thinktecture IdentityModel related to some of your questions. See this post:\nhttp://brockallen.com/2013/02/12/wif-session-helper-apis-for-passive-applications-in-thinktecture-identitymodel/\n. I noted your suggestion in the new repository issue tracker for v3. Closing this issue.\n. See this issue: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/331\n. Oh and it's form-url-encoded, not base64 encoded.\n. So yes, SAML is larger than JWT but this is a one-time only thing so I'd not worry about it. JWT is more useful when you have a mobile app that sends the token on each request.  \nNow in your RP if you're using WIF then the user is logged in with the SAM and this means you have a large cookie. You might want to look into ways to reduce the cookie size: \nhttp://brockallen.com/2013/02/21/server-side-session-token-caching-in-wif-and-thinktecture-identitymodel/ \n. Well, in general issuing a token is a one-time thing that's part of using an application (say once a day per user). So in general there's not much demand or load on an STS (compared to the activity of the RP itself). In general this will scale depending upon the hardware you throw at it.\nBut specifically to answer your question, I don't think we've ever load tested IdentityServer, so we don't have any specific numbers for you. \n. Well, wctx is supposed to be opaque to the STS and blindly returned to the RP. If you want some additional data from the RP1 to the STS to RP2 then I'd think you would need to pass additional custom parameters. This would then require the STS to be coded to know about them and the RPs of course as well.\n. I'll look into it. thanks.\n. @khloroform187 -- can we close this then?\n. Issue is fixed from this PR: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/425\nAs for why we're checking, It was a while ago, so I forget the real reason. My recollection was that we weren't getting good messages for the admin page when setting passwords.\n. Yes.\n. I assume you're doing WS-Fed and you're getting to IdentityServer from a RP that needs to log a user in? The flow from RP to WS-Fed endpoint in the STS to Login page needs to keep passing along the original query string values. The reason is once you're past the login page you get redirected back to the WS-Fed endpoint but at this point you'll be logged in so the WS-Fed endpoint can issue the token back to the RP. \nSo to me it sounds like in your modifications of the login page code you've somehow lost the original query string params.\n. Well, I'm not following 100%, but I think I get the gist of what you're saying. Again, it sounds like the query string params which inform the WS-Fed endpoints what to do are getting lost. So somehow you need to make sure those aren't lost across all of your page transitions and 2FA prompts. Are you in agreement that this is the problem?\n. Passing custom \"stuff\" via the query string from the RP to the STS is beyond the WS-Federation spec, so you'd be doing your own protocol at that point. It can be done, it's just now you're customizing all the pieces between the RP and the final STS. Here's an example of how I did it:\nhttp://brockallen.com/2012/05/29/passing-the-rp-realm-identifier-to-an-ip-sts-from-adfs2-as-a-r-sts/\n. Well, it's really up to you, IMO. You have the code for IdSvr (and thus the code int he login page) so it's really up to you how you want to change it.\n. The only built in authentication in identity server is password or client certificate.\n. You'd need to implement the IUserRepository and possibly the IUserManagementRepository and IClaimsRepository interfaces. The wiki has more info: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/wiki\n. Under the WS-Fed configuration you need to enable \"Enable Federation\".\n. The WS-Trust endpoint doesn't use the external identity providers. That's only for the WS-Fed support in IdentityServer.\nI'm going to close this issue. If you have other questions, open new issues.\n. Your error is with your web server not running over SSL or the cert you're using is not trusted by the client machine. That problem is unrelated to the Encrypting Certificate setting for the Relying Party.\n. But the address bar is red -- this tells me the client machine doesn't trust the certificate. You need to establish trust with the cert via the machine certificate store in the \"Trusted Root Certificate Authorities\"\n. As for SSL in IIS, why don't you just use the IIS configuration UI to create a self-signed certificate (instead of makecert)? That should automatically do the certificate store trust. \nSo as I said before, the Encrypting Certification configuration on the relying party is unrelated to SSL. You shouldn't be setting it.\n. So here's what I'd suggest -- build a simple C# app that uses HttpClient to load your web server's home page over SSL and get this working. This takes IdentityServer out of the equation. Once you get the SSL/cert/trust thing sorted out then go back to IdentityServer and the Resource Owner sample. \n. Any progress?\n. I'm working on such a setting as we speak.\n. The code is on the nossl branch: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/nossl\nYou will also need to set requireSsl = false in configuration/identityServices.config.\n. You'd need access to the private key in the cert, and I doubt that azure will give you that access. To be honest, I'm not sure how they're doing the SSL -- it must be in front of the IIS server somehow. Anyway, you want the signing cert to be different than the SSL cert no matter where you deploy. To make this work you'd need to be able to deploy a cert to the certificate store on the machine. Can you?\n. Glad you have a solution working.\n. Nope, they can be hosted independently of each other.\n. Can you let us know what the problem was (and thus why the issue was closed)?\n. These values are based upon the test data that should be pre-populated into the IdentityServer DB. But for a real application, you would configure a new client in the admin UI and provide a unique client ID and generate a client secret (there's a button to generate the secret).\n. If you have the .config value idsrv:CreateTestDataOnInitialization set to true, then yes, on Db create some test values are populated. It's recommended you remove this .config value for production use.\nYou can of course also do all of this configuration via the admin UI.\n. So your original request is basically: I want one app to do two types of authentication. This is a classic problem in ASP.NET and you can search online for the various hacks to achieve this. It boils down to: \"how do you determine from an anonymous request if the user is a windows user or a user in the DB\". It's hard unless you either have some very decisive mechanisms for determining this (say the IP address -- internal vs external, or give the user two URLs -- one for internal users, and one for external users). \nI think you're finding that perhaps thru HRD this distinction can be determined -- which basically is to ask the user. \nAs for IdentityServer, you will need to do some work to get this working since internally the SAM is used to authenticate. You might need a second app in IIS to do the windows auth and issue the same SAM cookie that IdentityServer is using and then redirect back then to the ws-fed endpoint to issue the token. This idea of a second app in IIS is one of the tricks people commonly do to get both forms and windows auth working in the same app (except here we use SAM not forms auth, but I hope you get he idea). \nAnyway, g'dluck.\n. Here's one approach:\nLeave IdSrv as-is and only modify the Account controller and its views. Don't bother with the HRD stuff and don't try to change the authN type of IdSrv. In the AccountController do whatever you need to to determine if they're windows or not. If they're not, then no prob -- IdSrv is already doing the Db stuff. If they are Windows then you need to redirect them to another app in the IIS server that is configured for windows auth and then once they've authenticated in that app you need to use the SAM (Session Authentication Manager) to issue the cookie for the user (you'll need to make sure the cookie protection/machineKey section is sync'd across the two apps). Once your windows auth app logs the user in, you then redirect the user back to the WS-Fed endpoint that they were originally requesting (the ReturnUrl param you see in the account controller). \nHere's some more general info on the SAM: \nhttp://brockallen.com/2013/01/26/replacing-forms-authentication-with-wifs-session-authentication-module-sam-to-enable-claims-aware-identity/\nhttp://msdn.microsoft.com/en-us/library/microsoft.identitymodel.web.sessionauthenticationmodule.aspx\nHere's another approach:\nConfigure IdSrv to act as a federation gateway to two other STSs: 1) IdentityServer itself, and 2) ADFS. Then on the HRD screen the user can choose. This requires you to have setup ADFS, though. I don't know if you have that already.\n. I think we need more profiling to understand what the issue is. But something sounds wrong if it's 15 seconds.\n. So the 15 seconds -- might this be on the first request and thus the real delay is simply the normal IIS app domain loading? You said on another thread that subsequent requests are much faster.\n. Ok. I'm happy to hear IdentityServer's working fine :)\n. Yes, AuthroizationServer implements the OAuth2 flows, so those are all accessible over HTTP.\n. So I just realized you're posting in the wrong project -- this is IdentityServer, not AuthorizationServer. So I'm not sure which project you're really using. \nAs for your issue, you need to either enable tracing (~/Configuration/tracing.config) or debug it.\n. I'm sorry, I don't understand your question.\nDo you mean that you're using the same certificate in IIS for SSL that you're using for signing in IdentityServer? In any event, the thumbprint needs to be trusted by the relying party in your issuer name registry.\nIf this is not it, can you ask again?\n. It sounds like your error is in the RP, not in the STS.\n. None of these issues seems to be problems with IdentityServer -- these seem to just be normal problems you run into when setting up a WS-Federation system. I'd suggest posting to the Microsoft forum for further help.\n. Yahoo don't support OAuth2. It looks like LinkedIn does. We can do LinkedIn. For Yahoo, you can federate with Azure ACS and use whatever they use for federation (it's either OpenID/OAuth1).\n. np -- it's really a matter of adding it here: \nhttps://github.com/brockallen/BrockAllen.OAuth2\n. Added: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/eef7c4a60f2bc6e664092dfdd03009755c67053b\n. Sorry, I don't know sharepoint. One guess is that sharepoint only supports SAML 1.1 tokens and IdentityServer issues SAML 2.0 tokens by default.\n. In the admin UI on the general config page, change the token type to:\nurn:oasis:names:tc:SAML:1.0:assertion\n. So maybe you don't have it configured properly. Again, I don't know how sharepoint does its WS-Fed implementation but if it actually uses WS-Fed then it should work.\n. Yes, Realm is essentially the scope or resource server in OAuth2 terms. For the RO flow there's no redirect URL, so that's not needed. And yes, setting up the realm/resource is a way to identity the scope/RS and associate a signing key. I don't think extra data is used in this scenario at all (I'd have to double check to be sure).\nFor step 3 redirect uri is only needed for code and implicit flows. It's not used in RO flow.\nCurrent Microsoft's JWT handler doesn't support encryption (only signing) so that's perhaps why you didn't see it.\n. There is a per-realm token type setting in the more recent version of the code.\n. If you're on an older version then the only way would be the global configuration that sets the default token types.\n. I added the change here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/3c07186185fbab01ad863ab8e9b5152830253f83\nWhich is later than the latest release. So in short, it's not yet in an official release yet.\nAnd when I say global configuration I'm speaking about the global configuration via the admin UI.\n. You can also use SAML 1.1 or SAML 2.0 tokens.\n. Looks right if you want a SAML 2.0 token. \n. It's the URN that the SAML spec mandates: \nhttps://en.wikipedia.org/wiki/SAML_2.0 \nIt's like a namespace. \nI'm gonna close this issue now since I think your issue is resolved, yes?\n. From the TokenTypes constants:\npublic const string Saml11TokenProfile11 = \"urn:oasis:names:tc:SAML:1.0:assertion\";\n    public const string Saml2TokenProfile11 = \"urn:oasis:names:tc:SAML:2.0:assertion\";\n    public const string JsonWebToken = \"urn:ietf:params:oauth:token-type:jwt\";\n. You'd need to build your own JWT token handler and follow the JWT spec, so it's technically possible.\n. Our JWT handler was written before MSFT's existed. Our implementation is deprecated now in favor of MSFT's.\n. Implicit is perhaps a bad or misleading term. It just meas that the client is typically client-side JS:\nhttp://tools.ietf.org/html/rfc6749#section-1.3.2\n. Right -- that's due to the nature of an implicit client -- it's all publicly visible code, so there's no point in a password.\n. Well, it's one of the weakest OAuth2 flows.\n. Yea, that should work. Are you have issues?\n. In IdentityServer is the user logged in as UserA or UserB?\nIs IdentityServer completing the WS-Fed protocol and POSTing a token to the RP?\n. So sounds like for UserA it's all working correctly. I lost you after that.\nSo you mention the ReturnURL -- this is pretty important when you bounce the user from page to page (like for login). It needs to be preserved since it contains all the info that represents the signin request from the RP. So eventually once you've logged in as UserB then you would need to redirect the user back to that RedirectURL.\nThe other thing I don't know if how is the RP getting to the STS (as in, what endpoint) and then once your login as UserB is done how do you know which RP to return to.\n. That's the WS-Trust, simple http and resource owner OAuth2 flow protocols. So three different protocols that Identity Server supports for getting tokens from uid/pwd.\n. Sorry reading posts out of order... so i see better what you're doing -- you're not doing a browser redirect to identity server to login as UserB. \n. I'm assuming your RP is still separate from IdentityServer -- in other words you didn't merge your RP app code into the IdentityServer project?\nSo assuming the above is true, then you're really just asking how do I allow anonymous users for some parts of my RP? Or are you asking how in the RP to allow both federation and local (soft) logins? I need some clarification.\n. Ah ok -- from the way you said things I wasn't sure if you had merged the two (and you haven't). Also \"soft login\" sounded as if you wanted the login screen as part of your RP, and it doesn't sounds like you want that either.\nSo then I'm confused by what you need -- if all you need is allow anonymous users then make sure you don't have the <deny users=\"?\"> authorization entry in web.config and then in your login button code to redirect to the STS all you'd need is:\nvar fam = FederatedAuthentication.WSFederationAuthenticationModule;\nvar req = fam.CreateSignInRequest(null, null, false);\nreturn Redirect(req.RequestUrl);\n. Well, something in your app is returning a 401 (access denied) and then WIF (via the passiveRedirectEnabled=\"true\") is then redirecting the STS. So you need to find out why/where in your code you're denying access to anonymous users.\n. Ah so sounds like maybe your had an IIS config that was outside of your web.config that perhaps denied anon access. That would explain it. Glad you got it working.\nOh and on a side note we usually develop in IIS since it's a bit more obvious what's going on, plus SSL is much easier to manage.\n. I'm going to let Dominick answer the WS-Trust questions -- he knows that much better than I do.\n. You can either debug IdentityServer itself and break in the TokenService's GetOutputClaimsIdentity or you can look at the token sent back via your browser via fiddler or f12 tools (I'm assuming you're doing ws-fed?). \n. That's used to allow users to authenticate with identity server with client certs. If you don't want or need to support this, you don't have to.\nAs for populating this table, that's not the job of the admin tools in identity server. We specifically don't get involved with the management of user data -- just the config for identity server itself.\n. Umm, no, nothing like that is supported. The extensibility point to customize the claims is by implementing IClaimsRepository and one of the params is the RequestDetails which lets your custom claims repository know about the request coming into IdentityServer (such as the RP).\n. The tokens link allows you to look at (and revoke) the existing refresh tokes that have been issued. \nA refresh tokens is issued based upon the flow being used (and if you have allow refresh token checked).\n. Yes, that flow allows refresh tokens.\n. Yep.\n. Use IIS.\n. You'd use VS and IIS. I only suggest IIS because with IIS Express I've had so many problems in the past so I don't use it. I suspect you can get it to work, but I won't be able to help you.\n. I open my visual studio projects as an administrator then I can just hit F5 and debug right into IIS.\n. Use IIS and use the url of the app as configured in IIS. I use https://idsrv.local for IdentityServer. I've setup a custom website in IIS for this and I have a custom DNS/host entry for this which maps to 127.0.01.\n. Yea, basically.\n. 1. depends. JWT's don't support it now. SAML tokens do.\n2. did you try it?\n3. yes.and this key would also need to be shared by the resource server to validate the token.\n. The global key config basically is used to specify the certificate used by identity server to sign tokens when a asymmetric key is to be used. This works globally because the private key is still private to the server, but many RPs can use the same public key and validate the tokens.\nSymmetric keys need to be per-RP because the key can be used to re-sign the token. So we need this key shared and secret per-RP. We can't have a global symmetric key because then any malicious RP could potentially intercept the token, modify it and then resign it.\n. Corrected: For signing you can either do symmetric keys or asymmetric keys. If you use the asymmetric keys then you'd use the global signing key from the signing certificate. If you use symmetric keys then it's the per-RP symmetric key that's used.\nEncrypting the token is a different operation. We don't support symmetric keys for encrypting. JWTs also don't currently support encrypting. So only SAML tokens can be encrypted with asymmetric keys. To encrypt the token we need the public key of the RP and the RP must have the private key (via a certificate).\nAll of the different configuration at the different levels in IdentityServer reflects what I just described.\n. Sorry -- I was incorrect above. I fixed it (asymmetric signing is supported by Microsoft's JWT handler).\n. The global decryption certificate is used when other STSs issue encrypted tokens to IdentityServer. This is used if you're using the federation gateway feature (HRD).\nThe global symmetric key is unused.\nThe rest of your assumptions seem correct. You'll use the global signing cert for signing and the RP specific cert for encryption. \n. Works for me when I do it this way:\nvoid FederatedAuthentication_FederationConfigurationCreated(object sender, System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs e)\n{\n    // this line to clear is optional -- depends what you want\n    // e.FederationConfiguration.IdentityConfiguration.AudienceRestriction.AllowedAudienceUris.Clear();\n    e.FederationConfiguration.IdentityConfiguration.AudienceRestriction.AllowedAudienceUris.Add(new Uri(\"urn:rp\"));\n}\n. Yes, you are correct. The cofnig stuff is loaded first then your event can tweak the settings after the fact.\nI guess I'm missing what you're doing for audience restriction -- in my sample I pasted above in my config the audience is empty and then I add the item in code and it works.\n. Sure, I understand wanting to do all the config in code. So I just did this in my sample app and it works as well:\nvoid FederatedAuthentication_FederationConfigurationCreated(object sender, System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs e)\n{\n    var inr = e.FederationConfiguration.IdentityConfiguration.IssuerNameRegistry as System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry;\n    inr.AddTrustedIssuer(\"65996154AD39783393A90E5791405D1ECD6940E9\", \"idsrv.local\");\n}\nSo I am not sure what you have mis-configured in your app, but it does work\n. As does this:\nvoid FederatedAuthentication_FederationConfigurationCreated(object sender, System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs e)\n{\n    var inr = new System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry();\n    e.FederationConfiguration.IdentityConfiguration.IssuerNameRegistry = inr;\n    inr.AddTrustedIssuer(\"65996154AD39783393A90E5791405D1ECD6940E9\", \"idsrv.local\");\n}\n. Anyway, this really is a WIF issue and not related to IdentityServer so I'm going to close this issue. If you're having WIF issues, I'd suggest using the Microsoft support forums. Sorry.\n. There are two sets of claims because the STS and the RP are two different apps. It's conceivable that you'd need or want different claims for the two apps. To customize the claims for the STS those can be set in the login code (as you've seen) and to issue claims in the token to a RP you do that in the claims repository.\n. IdentityServer is the STS. And yes, by default (for the most part) IdentityServer issues the claims it has for the logged in user. Those can be augmented by the claims repository, as noted above.\n. If you're federating with ADFS as an external identity provider then you need to use the hrd endpoint, not the wsfed endpoint.\n. Well, different approach for what? If you want IdentityServer to trust another STS then the HRD endpoint is the one for ADFS to submit tokens back to IdentityServer.\n. Well, normally you're not validating the token in the app that's obtaining the token. Normally the app obtains the token and uses it to access some api and uses the token for authorization. IOW, it's an opaque value to the client application.\n. Ok, then use WIF's token handling in your app to validate the token. \n. That's the job of the WIF library. \n. It would look something like this (but again this is WIF code and not specific to IdentityServer and this is not really an issue for this library):\nvar rdr = XmlReader.Create(new StringReader(token));\nvar config = new SecurityTokenHandlerConfiguration();\nconfig.AudienceRestriction.AllowedAudienceUris.Add(new Uri(\"urn:yourRP\"));\nconfig.CertificateValidationMode = System.ServiceModel.Security.X509CertificateValidationMode.None;\nconfig.RevocationMode = X509RevocationMode.NoCheck;\nvar inr = new ConfigurationBasedIssuerNameRegistry();\nvar cert = new X509Certificate2(pathToSigningCert);\ninr.AddTrustedIssuer(cert.Thumbprint, \"STS Name\");\nconfig.IssuerNameRegistry = inr;\nconfig.CertificateValidator = System.IdentityModel.Selectors.X509CertificateValidator.None;\nvar handlers = System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(config);\nif (handlers.CanReadToken(rdr))\n{\n    var token = handlers.ReadToken(rdr);\n    var claimsIds = handlers.ValidateToken(token);\n    var id = claimsIds.FirstOrDefault();\n}\n. These questions are beyond the scope of IdentiyServer issues. I was trying to help you and get you going on your own but at this point you will need to post on the Microsoft support forums for WIF help where paid Microsoft employees can help. \n. I'll have to let Dom speak on this issue.\n. OIDC support is coming, but it's not complete yet. The spec is still in flux itself.\nFor new users, there's a users link in the admin menu and you can set the minimal info, but anything beyond that is up to your own application code (since it's usually so app specific). We deliberately don't have any full user management features. \n. Well, we have plans for the user management. It's just in there now.\n. The \"ru\" you're seeing is part of the wctx param. It's populated by WIF in the RP and sent to the STS. The STS is supposed to echo it back to the RP on signin. wctx is simply a state bag that will be returned to the RP and is used any way the RP wants. You can set this before the request leaves the RP and then you can do something when the user is then logged back into the RP. See here:\nhttp://msdn.microsoft.com/en-us/library/microsoft.identitymodel.web.wsfederationauthenticationmodule_events.aspx\nYou can learn about those params from the WS-Federation spec.\n. Well, I'd ask why you need/want to, but the short answer is \"yes\". \n. Ok, yea, just making sure it was a load balancer scenario. Anyway I just merged the code this morning that allows disabling SSL:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/ab38999d63755f19828eb60e347890111041ad04\nI'm in the process of working on the blog post describing the feature. The only thing that doesn't work at the moment is WS-Trust metadata endpoint, but all the other protocols work.\n. I don't think it matters which way you distribute IdentityServer -- what ever works for you.\nYou should use different certs for SSL and for signing.\nIf you require token encryption then you need to configure an encrypting certificate in the RP configuration. The RP would then need access to the private key of the cert to decrypt the token. Many people don't use this setting if you're already using SSL, but it is an extra layer protection if you don't want the token visible to the user's browser/machine.\nThe symmetric key used for signing is the one configured in the RP, not the global symmetric key.\n. Closing issue due to inactivity.\n. This is done by WIF, not by explicit code in IdentityServer. \n. I did this just recently for the ADFS integration:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/5e3f4e56a2bdf6adf97725bada80fb9e54f5a786\nBut this clears out the subject confirmation data. I guess your issue is that you need it to be provided?\n. Have you tried using SAML 1.1. tokens in IdentityServer? I don't know if this will solve your issue, but I have a vague recollection of others with SAML 2.0 issues thru ADFS and switching to SAML 1.1 tokens solved it. Anyway, it's worth a shot.\n. Logged out of what? The RP? IdentityServer? Or Facebook?\nWhen using external identity providers, you're never really logged into IdentityServer -- it's just passing thru the identity.\n. FederatedAuthentication.SessionAuthenticaionModule.SignOut() should remove the cookie and it's all you need. I'd use this API then check the browser for the response to confirm that the cookie was cleared. \n. Yes, this is known behavior. We store by subject name so that when the certificate store is updated you do not have to make any changes in IdentityServer. I don't have a better answer for you.\n. For social media identity providers we only support OAuth2. \n. Well, the problem is that OAuth2 is not really for authentication and thus each provider is a customization. Right now we only support FB, Google and Live. We will have LinkedIn next week sometime. \n. I've never heard of it -- do you have a link?\n. Well, IdentityServer uses this library for its OAuth2:\nhttps://github.com/brockallen/BrockAllen.OAuth2\nIf you'd like to add support, then make a pull request :)\n. This should work fine - It's a two step process:\n1) You create a new identity provider with the URL to the wsfed endpoint and the certificate thumbprint of the signing certificate (from the key configuration page). \n2) You'd then need to configure IdentityServer as its own RP -- you'd use the hrd endpoint as the RP's redirect URL.\n. Did you also configure the HRD endpoint as a normal RP?\n. In your RSTS (IdSrv1) make sure you're using the hrd endpoints, not the wsfed endpoints. \n. Actually, this already works today if you're ok with using message security (instead of transport). What doesn't work is the metadata (see: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/388).\nSo from the RP if you add the WS-Trust metadata via VS, you get the wrong hostname in the .config file. If you correct it to the public hostname (rather than the backend web server behind your load balancer) then it will work.\n. Also, as a side note -- we have another open issue to allow transport security with SSL offloading for WS-Trust, but it's just not implemented yet: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/\n. We have a sample or two that does some WS-Trust -- look around in the samples folder.\n. Yes, there's a property on the channel factory you need to set.... something like Credentials.SupportInteractive = false -- see if you can find it and give it a try.\n. I'm not sure on this -- WS-Trust is @leastprivilege's specialty. \n. Correct -- active clients don't get the benefit of SSO like you do in a browser.\n. IdentityServer is a STS (that supports several protocols). It's primary purpose is to issue tokens for its users and those users are typically defined in a custom store of some sort (like a database). So if you need a STS for users that aren't in AD, then you will need something like IdentityServer. It has other features as well, but this is one of the most common use cases.\n. If the built-in store work for you then you can use it. But if you have an existing store with rows already then you can implement the appropriate extensibility point and get your custom code involved.\nMulti-tenancy might be tricky since IdentityServer doesn't have that concept. So you might have to do some custom coding to support that.\n. The certificate needs to be trusted/validated by IIS first, so you might need to do some configuration there first. This involves trusting the CA that issues the client certs in the cert store on the machine.\n. Perhaps this link will help:\nhttp://www.aspnetwiki.com/configuring-iis-7-with-self-signed-server-and-client-certifi\n. You will need to implement this yourself.\n. Yes, it's open source. As for updates, that's up to you to merge.\n. To support multi-tenancy you need some way to pass to the WS-Fed controller the tenant you want to use. I changed the routing to introduce a new param which is the tenant ID. Then in the WS-Fed controller if the user is not authenticated I redirect to the account/login controller and explicitly pass the tenant ID. In the login code this tenant ID is then added as a claim. For the rest of the app then any place I needed the tenant (such as in any custom repositories), it's just a claim that's part of the user's claim collection. \n. I think I added a new route param that I accepted into the WS-Fed controller's Issue API. Given that I needed some logic on this param in the Issue action methoid, I removed the [Authorize] attribute and did my authorization login in the method itself. This param models the tenant ID, and so then if the user is not logged in (or logged into a different tenant) then I redirect to the Account controller's Signin and pass the tenant param. The account controller can then use this to know which tenant the user is from for validating credentials and issues the tenant as a claim. Once signed in, redirect the user back to their original requested URL and let the Issue do its job.\n. Fixed from this PR: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/425\n. This won't get done until IdentityServer v3.\n. Closing this since we don't plan to add to v2. As I said, it's on our list for v3.\n. thanks for the pr!\n. @VijayGaddam -- Please email office@thintecture.com for questions related to consulting services. Thanks.\n. Yes, I replied to a few emails today so hopefully one of them was it :)\n. The STS always has the RP's identifier when being asked for a token, so you can potentially change behavior based upon this value.\n. OAuth2 doesn't specify a token type. Most people use JWT.\n. You can set a token type per-RP or a global \"Default HTTP Token\" setting.\n. Yes, a REST management API is on the radar (for vNext), but powershell wasn't. We'll take it under consideration.\n. I noted your suggestion in the new repository issue tracker for v3. Closing this issue.\n. You can add claims in 3 places in IdentityServer:\n1) Account Signin -- in this code you can add extra claims by passing an IEnumerable to the SignIn helper. This only affects the claims in the token for the STS itself (meaning in the cookie).\n2) Claims Transformer -- After the claims from the above Signin are established, they're passed to the configured ClaimsAuthenticationManager. This only affects the claims in the token for the STS itself (meaning in the cookie).\n3) Claims Repository -- This is meant to be the extensibility point for customizing claims when the STS issues a token. The logged in user's claims (form the above 2 steps) are passed in and the returned claims are used to populate the issued token. Also note that in this extensibility point you have the info about which RP is requesting the token, so you can use this to affect the claims you issue.\nAs for authorization, it really depends on your scenario. I'd normally push authorization to the RP, but if the RP needs info from the STS (because that info is centralized) then so be it. I just worry that you'll end up putting too many claims into the token. But again, it's hard to judge from here because it really depends on your scenario.\n. Can you provide a description of the issue/problem and then what your fix does to address it? This way we can evaluate the PR easier.\n. When I use IdentityServer for my clients, we do brand the UI and just modify the web project to do this. If I need to affect the core behavior I add a new project and do the changes in there so that there's no diffs to check when updating the main projects.\n. I noted your suggestion in the new repository issue tracker for v3. Closing this issue.\n. Suggestion noted for v3. Thanks.\n. I noted your suggestion in the new repository issue tracker for v3. Closing this issue.\n. You need to redirect the user to the STS's signout endpoint. There are various ways in WIF:\nhttp://msdn.microsoft.com/en-us/library/microsoft.identitymodel.web.wsfederationauthenticationmodule.federatedsignout.aspx\nI'm closing your issue because it's a .NET question and not an issue in IdentityServer, per-se. \n. I don't plan to download and debug your code. You need to provide more info if we are to help (such as exact steps to repro the problem). Also, make sure it's a problem with IdentityServer and not your code or incorrect use of WIF or .NET, as we won't help with those issues.\n. Yes, you can use MR in IdentityServer. Right now you'd have to code the extensibility points to use it, though.\n. MembershipReboot\n. This is generally a tricky problem to solve. WIF is already the code that's handling the redirect to STS and then redirect back to the pager you requested, so you'd have to remove WIF and write the re-POST logic yourself (in some way). In short, it's not a feature we plan to implement and I don't see Microsoft doing anything about it either. \n. Well, it's not that they're ignoring it; rather, it's a hard problem to solve. The same problem exists with a cookie timing our for forms authentication while the user is POSTing a form. \n. To use your custom implementations for the extensibility points in IdentityServer, you should configure their class name in the ~/Configuration/repositories.config.\n. Use WebEssentials plugin for VS.\n. This might help: http://brockallen.com/2013/02/19/suppress-login-redirects-for-api-clients-in-wif-with-thinktecture-identitymodel/\n. The cookie is protected on the server and thus there's no good way to have your JS open it up and inspect the contents to see what the expiration is. \nOne approach I've seen is that some code in the server issues a response header from each Ajax call to let the client know the remaining seconds the cookie is valid. This way your JS will then be able to do some book keeping client-side. \nOf course, you can always assume that a 401 means the token's expired.\n. Sounds like you want sliding sessions in the RP. Are you doing anything like this?\n. Right, the Ajax will throw things off because WS-Fed and SSO is built all around HTTP redirects. \n. Well, if your ajax gets a 401 response, then it will know the user is no longer authenticated. You'd then need to somehow get the user logged in. Recall, this was your client spec, I believe.\n. Same as if this were any other ASP.NET application using the providers. If the provider you're using auto-creates them, then great. The original provider (IIRC) didn't.\n. Yep.\n. The membership library created the tables itself. The \"aspnet_regsql\" is the old tool for manually creating the tables if yuo're using the old sql providers (and not the newer EF providers).\n. Yep, thanks. I'll get to it as soon as I can.\n. 1. i have not\n2. we support ws-federation and the federation gateway pattern\n3. not currently, but the code is open source :)\n4. this means you can use the membership system for your backing identity store and for validating credentials\n5. no idea\n6. no idea\n7. no idea\n. This might be hard to diagnose because it sounds like an environmental issue.\n. I think it's a good idea to separate the identity management system from the STS (IdentityServer). For the login, though, IdentityServer needs to somehow know who the logged in user is and that's why is has a login page. As part of the login code, there's support for a custom implementation that validates the user's credentials, and you could implement this in terms of MembershipReboot. This is the approach I'd suggest. \n. Yep, to signin you'll need a custom IUserRepository. To view and/or manage the users in the admin page you'll need a custom IUserManagementRepository. If you want to manage certificates for users in the admin page then you'll need IClientCertificatesRepository. And finally to customize the claims that are issued in the token from the STS, you need to implement IClaimsRepository.\nHTH\n. Yes, I hear you :) Putting a sample or project together like this has been on my TODO list for some time.\n. You guys know what - I'll go knock one up real fast and at least that can serve as a starting point. \n. Well, I've gotten as far as File -> New Project.\n. Yea, I don't want to build a whole management UI. I just want to show the smallest code to get MR to work in IdentityServer. I'll go peek, tho, @dealproc.\n. Ok, I'm done coding it... just testing now. Stay tuned.\n. Yes, it was that easy... except... MR requires email addresses, whereas IdentityServer when creating the initial admin screen doesn't allow for an email for the admin, so that's the only hang up right now. I've been toying with the idea of allowing MR to not require emails. So I'm thinking of adding this to MR right now. Thoughts?\n. Ok, here's the check that contains the sample: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/eb09981d28b1b24f62dc413d00e2dc7b3f164929\nThe one thing that won't work is the initial configuration page where you create the admin account -- you will need to change the web project's Controllers\\InitialConfigurationController.cs and on line 152 where it creates the admin account simplypass a 3rd param that has a string that looks like a valid email address (\"admin@admin.com\", for example).\n. Here's the direct URL, if needed:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/master/samples/MembershipRebootUserRepository\n. Yes, good point @mafis. But I recently came across a client that did not want email verification in any way, plus you can already disable email account verification today (but it still requires an email).\n. @mafis look over the sample and if you have questions, then ask. Once you're content, go ahead and close this issue, please. Thanks.\n. @dealproc this sample for MR + IdSrv is unrelated to AuthorizationServer.\n. Well, IdSrv's support and MR's suport are slightly different. IdSrv maintains nothing in its DB about about a user's social logins -- it's really just there to broker (actually that's true for all federation gateway logins). And in fact it doesn't even implement the OAuth2 client protocols -- that's implemented by a different library. MR only maintains data for a user's external login providers. It too does not implement the protocols. \nBut yea, I can see what you're getting at -- instead of setting the external logins via the HRD page, why not just support the social logins directly from the IdSrv login page. \n. I'll see if I can find some time to look into this and try to repro.\n. Thx for the suggestion. I'll add it to my queue.\n. If you have the code public, you can link it for me. Or submit a PR here.\n. Ok, thanks for the report. If you can determine an exact repro, that'd be helpful. thanks.\n. Well, this starts to get into the identity management area, which isn't what IdentityServer does right now. This is something you could simply customize in your deployment.\n. We've not yet looked into supporting MVC 5 or Web API 2. If you discover anything while debugging that could be helpful, feel free to report that back here. Thanks.\n. Read more here:\nhttp://thinktecture.github.io/Thinktecture.AuthorizationServer/\n. Ah, thanks.\n. You can up IdSrv as its own identity provider. You'd need to register IdSrv's wsfed endpoint as an identity provider. And you'd also need to configure IdSrv's hrd endpoint as a RP.\n. RP ===> IdSrv(HRD) ===> IdSrv(WS-Fed)\nSo IdSrv needs a new entry under Identity Providers for itself, and then needs to create a RP entry for itself.\nHere's my IdSrv's general info:\n\nHere's my IdSrv's key info:\n\nThen I setup an Identity Provider for IdSrv:\n\nThis in essence makes the HRD a RP of IdSrv's WS-Fed endpoint, so then IdSrv needs to know about the HRD endpoint as a RP:\n\nHopefully all these pics uploaded.\n. Are you using the default WS-Trust mechanism to validate passwords? If so, did you configure the settings in ~\\WebHost\\Configuration\\autofac.config?\n. We don't do logouts for the OAuth2 providers -- only WS-Fed.\n. Yep, there's a different extensibility point for doing claims transformation when IdentityServer is acting as a R-STS/gateway. Look into the IClaimsTransformationRulesRepository interface and the claimsTransformationRules entry in the ~/configuration/repositories.config file.\n. Can close, @pkaushik23 ?\n. I don't program in PHP, so I'd not be able to produce any samples for you, but the OIDC website lists libraries for different platforms: https://openid.net/developers/libraries/\nI see several PHP libraries listed there. I'd suggest researching one of those.\n. We mainly focus on the .NET community, but it's certainly possible that someone has used PHP or Java.\n. Right, and that's not my space, so I defer to those libraries and their communities.\n. What do you mean? \n. Is there an issue specifically with IdentityServer here?\n. Yep, I repro'd this and will look into a solution.\n. Ok, fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/883dc01886b57a25babee9608e2ec247217bc857\n. No problem -- thanks for reporting it.\n. There's not a lot to go on here. Can you provide any more details on the error (perhaps a call stack)? Also, consider enabling tracing to debug (check the wiki for that).\n. You will need to debug this further yourself. Either debug into the code or check in the wiki how to enable tracing.\n. 1) Tokens have expirations -- is this not sufficient?\n2) If you wanted a mechanism to revoke tokens (beyond the expiration), you'd have to build that yourself.\n. So what (other than time) invalidates a token?\nThere's nothing built-in for this -- you'd have to architect your own solution.\n. Yep, like I said, you'd have to build an access check API into IdentityServer for this.\n. I just tested it in IE10 and it's maintaining the signout cookie just fine.\nIf it's missing the signout cookie then it should also be missing the sam cookie -- does it have that one?\n. When tokens are being issued the IClaimsRepository is used (as configured in ~/configuration/repositories.config). When the user just logs into the IdentityServer UI the ClaimsAuthenticationManager from WIF is used (as configured in ~/configuration/identity.config). Is this what you're looking for?\n. Enable tracing to find out what the actual error is -- see the wiki for more details.\n. Use a key with 2048 bytes. makecert has a -len param:\n-len 2048\n. You can handle the WS-Fed event for signing in and then redirect to the page you want.\nhttp://msdn.microsoft.com/en-us/library/microsoft.identitymodel.web.wsfederationauthenticationmodule.signedin.aspx\n. No -- this would be in your own application's global.asax code.\n. 1) Yes, that interface is how you affect the claims issued in tokens.\n2) This can be set in the general or per-RP configuration.\n3) Depends on what you're doing (I can't tell from the info above). But in general the model is model is that you go back to the STS for another token.\n. Right -- that's the scenario where you go back to the STS for a new token. Are you doing WS-* or OAuth2?\n. Right -- that's what refresh tokens are for in OAuth2. \n. FWIW, I just updated that sample to the latest MR. Also, as you noticed, there were some schema changes in the latest MR so you need to run the migration.\n. If you federate with ADFS then you can use windows accounts for authentication.\n. If it redirects to ADFS, then yes. But your questions are making me wonder why you want to use an STS and not just use windows authentication or ADFS directly?\n. I just went thru the steps needed to do this and it works. Basically, you need to update IdentityServer's repository project to use EF6. \n@leastprivilege -- are we ready to do this?\n. I'll leave this issue open as a reminder to upgrade to EF6, if it makes sense. We will discuss. \n. I have as a task to update IdentityServer to EF6, which should help.\n. EF 6 update now done.\n. How would the user enter their credentials in a hidden iframe? I suspect we need more context from you.\n. I think I prototyped that for ADFS once -- it worked. So perhaps you could do the same for IdenityServer. But now that you raise this, I wonder if we should be emitting X-Frame-Options. Hmm, something to consider.\n. Well, that's what the realm param is used for in WS-Fed (not for the bookmarking issue, but for knowing which RP needs the token once the user is authenticated).\n. If you configured IdentityModel's CORS support then preflight would get handled earlier in the pipeline than the normal web api authorization code.\n. The Simple HTTP endpoint is web api, not MVC.\n. Not sure without more details. You might want to start with a new project in VS to mimic what IdentityServer is doing (to eliminate all other variables).\n. Well, it follows the CORS spec. So for preflight it short circuits the request to render the response.\n. So that makes me wonder if it's not really getting invoked. I can try to repo when I get a chance.\n. Did you enable tracing or debug the code to determine why?\n. Ok, I won't have time to look into this until tomorrow. I'll let you know once I do.\n. In OWIN if the user is not authenticated the User/IPrincipal reference can be null (which is different than in ASP.NET). See this:\nhttps://katanaproject.codeplex.com/workitem/178\nIn any event, I'll look into this in our code and see if there's something we can do if User is null.\n. Also, I just realized you posted this in IdenittyServer, not IdentityModel.\n. Yes, please open a new issue over there.\n. @leastprivilege -- it's using RequestContext.Principal but it's not checking for null.\n. I just mean it's something to think about since we don't have any now. And I'm not sure where we need/want it. Thus the \"consider\" :)\n. The login page/controller is where such customizations are meant to be done.\n. Did you enable federation under the WS-Fed protocol config?\n. Any updates?\n. When you change protocol settings, this requires an app domain restart. There's a button for that in the admin UI. Try this and let us know.\n. So enable tracing to get a detailed output of what's wrong. Check the wiki for instructions.\n. Thanks -- I'll look into this PR tomorrow.\n. Thanks, done!\n. There's not enough information here for us to understand the problem.\n. If the API is in the same app as the MVC, then the cookie should be good enough to authenticate, but this is not ideal. You should consider getting a token for the JS to send as a Bearer token scheme in the HTTP requests to the API. IdentityServer supports OAuth for obtaining a token like this. Look into the implicit flow (assuming the user is already logged into IdentityServer).\n. Return URL should be secure for issuing tokens, thus the requirement.\nI don't follow your second question. Which protocol scenario are you talking about?\n. In the RP once you get a WS-Fed response back, the FAM http module kicks in and processes the submitted token and it then uses the SAM http module to issue a login cookie for the application. Your JS making Ajax calls back to your RP app should already be logged in since they should be automatically passing the cookie.\n. If the website has issued a cookie, then Ajax calls will automatically send the cookie. I don't think your Angular code has to do anything special. \nI'm assuming your Angular code is hosted and calling back to the same MVC server code. If this assumption is not correct, then I need you to explain your setup, because I am unclear on it.\n. So if your API is in another project then you will need to obtain another token. Look into the OAuth2 implicit flow -- IdentityServer supports that.\n. Ok, fixed: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/e801b1f0ad63015a014f2047d3a4403690faedc2\n. I'm confused -- how does your question relate to IdentityServer? You're using identity server to authenticate between these roles?\n. Look into the \"whr\" param in WS-Federation -- this tells the gateway STS which home realm the user should be sent to.\n. It's an ASP.NET application -- implement this as a http module.\n. For OIDC, we have some limited support in IdentityServer v2. We're working on IdentityServer v3 which will be OIDC focused, but that's not available yet.\n. Refresh tokens for OIDC will be in v3.\n. Well, IdentityServer is just an ASP.NET app, so you can customize it as needed to add those features. So you might need to add new pages and then also change the flow once a user is logged in.\nThe main thing is that if the login page is being accessed from the WS-Fed request, then make sure if you do change the flow that you preserve the return url so that once you're done with your own workflow you can return the user to the WS-Fed endpoint so that it can continue to issue the token.\n. For (a) I suspect you have an <authorize><deny users='*' /></authorize>  in your .config. This will trigger auto redirect to the STS. Remove it. Then when you want to redirect return a 401 or create a SignInRequestMessage and use that to generate the redirect URL.\nFor (b), the app will need to somehow know those URLs. Since this is a customization, this is up to you.\n. This will be an option in v3.\nIf you need it for v2, you'll have to customize this yourself. For ideas, you can look at the MembershipReboot samples.\n. Same post from the ASP.NET forums:\nWhat does your code in login.aspx look like? Maybe that's a red herring.\nIn short, when your app needs to get the user logged in you can return a 401 status code and the FAM will redirect to the STS.\n. There is a Context property on the SignInRequestMessage.\n. Sorry, I'm coming in here mid-conversation, so I'll add what I can to help.\nFor the wctx, the point is that you can add it to the signin request. Then once the user is redirected back to the RP and signed in you can handle an event and then do whatever you need to based upon the ctx param.\n. Hmm, not enough info. It needs to be its own application, yes. And it can be deployed as its own website as well in IIS (this is how I develop and work with it on a daily basis).\n. Yes, this configuration is available in IdentityServer. There's a closed issue in the issue tracker on this with some info on what was added. Also, there's this: http://brockallen.com/2013/10/23/identityserver-support-for-disabling-ssl-for-proxy-server-and-load-balancing-scenarios/\n. Does this work for you?\n. thanks\n. Normally I'd suggest that you look into the client credentials flow (it's designed for this scenario), but IdentityServer doesn't support this one. Instead maybe setup a \"service user\" in your identity system and use the simple HTTP protocol or WS-Trust to get a token.\n. The first time the user goes thru HRD to login to facebook, facebook will ask for consent from the user for IdentityServer. But once the user has agreed, then future logins should automatically go thru like you want.\n. Well, what if the user wants to use something different?\nThe only way to skip the HRD screen from the RP is to pass the whr param (which IdentityServer supports) -- read the WS-Fed docs for more info.\n. You can set the path on the cookie (which is done by default IIRC) so that different apps on the same host will get different cookies.\n. Yes, each RP gets its own cookie and that's a good thing because each one might require different claims.\n. I'd suggest looking into AuthorizationServer -- it's better suited for the you describe scenario.\n. Identity server supports WS-Trust delegation. It's enabled under the WS-Trust configuration with the \"Enable Identity Delegation\" checkbox.\n. I'd suggest looking thru the OAuth2 RFC and see in there what leeway there is for additional information.\n. Right -- that was sort of my point. We don't populate that now, but this is a good discussion to have for what would make sense as possible and safe values to put in there. I think if an account is locked, then that might be ok for the error message. Perhaps Dom has a different opinion. \nOnly problem is that the API to validate credentials doesn't provide any output param with that sort of info. You'd have to customize IdentityServer to allow for your scenario. I am not sure if this is sufficiently general purpose for us to make such a change.\nThoughts?\nPerhaps in IdentityServer v3 we can design for this, tho.\n. Well, you're always worried about leaking too much info. I've not thought enough about it.\nBut as Dom said, right now it's a lot of work to implement this in v2.\n. I'd suggest trying to build a simple console application to create users and test if the emails are being sent. This will isolate the code that creates users to you know it's working.\n. If you're using the built-in email notifications for MR then you need the <smtp> settings in web.config and to ensure you've added the EmailAccountEventsHandler as an event handler to the MembershipRebootConfiguration.\n. The only thing I can suggest is to setup tracing for MR to see if you're getting errors from the email notification.\n. If you change any of the protocol settings, you should do an application recycle -- this will open up the URLs in the application for the protocols you've configured.\n. Enable federation.\n. Not sure -- I wasn't able to ever repro this issue. Later this week I can look into it again.\n. Not sure it works this way. The return URL only appears if the RP passes a wreply to the same URL that was used for the redirect URL. It's independent of the realm name.\nAre you doing anything different than WS-Fed?\n. This sounds like a EF issue. It's hard to diagnose form the little information provided. Did you have an old DB and upgrade to a new MR? Is this a custom DbContext?\n. Also, for what it's worth, I just updated the MR sample to the latest NuGets for MR. If you upgrade, then you can convert an existing v6 database to v7 by running the SQL scripts in the ~/packages/MR.Ef/Sql folder.\n. Any update?\n. Yes, from the RP you need to pass the whr param to IdentityServer to get IdentityServer to then pass the user along to the STS you want. Look into the WIF's SignInRequestMessage class -- it allows you to indicate the whr param when redirecting the user to the STS.\n. var fam = FederatedAuthentication.WSFederationAuthenticationModule;\nvar req = fam.CreateSignInRequest(null, null, false);\nreq.HomeRealm = \"ThisIsTheWhrParamValue\";\nvar url = req.WriteQueryString();\nreturn Redirect(url);\n. This is in your RP code where you know you want to send the user to login with the specific IP-STS.\n. Is your RP configured to use the hrd endpoint (instead of wsfed) in your WIF config? \n. IIRC in IdSvr2 we had a 2nd metadata endpoint... i don't recall if that's for this purpose or not. Worse case, you'll have to configure the info manually in the RP.\n. Just copy an existing resx file and rename it.\n. Then I don't know what to tell you -- check the MSDN documentation for creating resource/resx files.\n. Ok, I now see what you're saying. I just created a new file on disk with the new name and added it to the project. I then changed its build action to embedded resource and it created a new satellite assembly.  Also, to get it to show in the tree, i had to add the DependentUpon in the .csproj:\n<EmbeddedResource Include=\"App_LocalResources\\Account\\SignIn.Mobile.cshtml.fr-ca.resx\">\n  <DependentUpon>SignIn.Mobile.cshtml.resx</DependentUpon>\n</EmbeddedResource>\n. You were right  -- there is something odd about it. Glad it's working for you now.\n. This is a security feature and is implemented using MVC's anti-forgery token feature. What's the use-case for a user with two open windows at the same time to login to IdentityServer?\n. Ok, we'll discuss. Thanks.\n. When upgrading from MR v6 to v7 you need to run the SQL scripts included in the NuGet EF package's SQL folder.\n. In that case, I'd run the v7 schema SQL file -- this will create the Db from scratch. But IIRC there's an configuration set to auto-create DB, so I'm not sure why you'd get this error from scratch. I'll see if I can repro.\n. Ok, so you have a temp fix, correct?\nI'll look into the built-in migrations. \n. I'll leave this open to track. Thx.\n. I'm tracking this issue over on the MembershipReboot project: https://github.com/brockallen/BrockAllen.MembershipReboot/issues/304\nIt's unrelated to IdentityServer, so I'll close this issue.\n. Ok, this has been fixed and I updated the sample here with the updated NuGets. Thx.\n. This is a somewhat complicated question. What's the client application and what users do you want to allow to call this API?\n. So you should enforce that authorization in the create user API you've added. Also, then for simplicity, perhaps the security is that you have a single account to model the MVC client and you use those credentials to obtain a token for you API. Seems the simplest. \nI assume the MVC app is a \"registration\" page for new users?\n. From IdentityServer? There's the Simple HTTP endpoint for simple uid/pwd to get a token.\n. I don't think the cert changes in production are a problem. \nMy only guess is that there is some configuration problem for the RPs (just a guess). \nEnable tracing and see if the logs provide any more info (check the wiki for that).\n. The video might be on an older version, so there might be small difference in the current UI. \n. Assuming you have \"Enabled Federation\" configured under WS-Fed, then you'd configure them via the \"Identity Providers\" menu. Maybe that's what's wrong -- you don't have federation enabled?\n. It's possible, but the question is your requirements on how automatic this should be for internal vs. external. It's usually hard to detect if an anonymous user is part of AD/ADFA or external. What's mandatory for your requirements and what's simply acceptable?\n. So yea, I think so... I'm not sure there's a right answer/approach, but IdentityServer is customizable -- such as the login page. You could add your logic here (maybe based on IP) to hide/show this link you're talking about. You'd have to think about how to do that authentication to ADFS, but you could use the built-in HRD functionality of IdSvr, or maybe just re-configuring IdSrv to have a WS-Fed trust relationship with your ADSF. \nSo yes,. I think it can be done, but you'll have to spend some time prototyping to meet your requirements.\n. This was asked recently: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/628\n. Normally we suggest setting up a SSL cert with a formal hostname (not localhost) and then setting up a DNS record in your host file that matches.\n. Sorry, I don't know anything about MySql. If you can find out what the issue is, then let us know.\n. Ok, thanks for the update. The IdSrv DbContext is extensible, with something like this: http://brockallen.com/2013/02/03/integrating-thinktecture-identityserver-database-with-an-existing-database/\nSo you should be all set adding this one to your derived class.\n. You can look into using IdentityManager to populate your MR database: http://brockallen.com/2014/04/09/introducing-thinktecture-identitymanager/\nYou'd just need to add the right roles to the user.\n. Only if the IdSrv DB is empty.\n. Correct -- you need a machine that you can deploy the signing certificate to (in the machine store). This is a different cert than the SSL cert. From what I understand, azure websites don't allow this access/control.\n. You mean this?\nconnectionString=\"Data Source=|DataDirectory|MembershipReboot.sdf\"\n. Huh -- the syntax I have checked in has always worked for me. Odd.\n. This error is from ACS and you've not provided much info for us to help.\n. This is up to the identity management library you use in IdSvr.\n. MR used to disallow that username, but this was recently changed: https://github.com/brockallen/BrockAllen.MembershipReboot/issues/284\nWhat version are you using?\n. What is happening or what are you doing when you see this error? Is this when the app starts, or when a user is logging in or when you are trying to issue a token?\n. Site ID is just a URI. You can end it with a / if you want.\nAs for the error, I still can't tell from what you're saying, so maybe a call stack would help.\n. Did you implement a custom IClaimsRepository? It doesn't seem like it, but that's what defines those claim types in the metadata.\nAlso, have you checked the ADFS server's event log for anything more detailed?\n. Ah good guess on NameID claim -- IIRC we added that at some point. Are you on an older version of IdSvr? Maybe we never added NameID to the metadata.\n. The login page would require customization to do this.\n. We certainly have plans to support a 2fa workflow in IdSvr 3.\n. I don't think that would be a problem -- you'd have to do this as a custom filter on the MVC code in the Admin area.\n. This sounds like an ASP.NET configuration issue and perhaps how WIF's config code is written. This error is not coming from IdSvr, correct? If so, this is the wrong place for your error.\n. Yea, so this isn't really an IdentityServer issue then. I'd suggest asking on the MSDN forums or even the ASP.NET forums as it's almost just a config inheritance issue.\n. Well, if you have membership or membershipreboot then i don't see why you can't tap into those existing databases. If you have an existing database that provides some other interface or API, then you'd need to build an adapter, so to speak, to expose to IdentityServer the features that are needed from your identity implementation. \n. Well, if the user confirmed their email then you could use the password reset feature. Or you can manually use the AdaptivePasswordHasher to gen another password and update your DB with it. Or create a new user and copy the password into the admin. Lots of ways to hack the passwords if you can update the DB.\n. OAuth2 doesn't define anything for this. You would have to build something custom for your requirement.\n. Well, it's just code -- but you might have to spend some time with it making it work the way you want. Some folks just remove the ctor injection and just call into a static factory.\n. So then you can do that -- just do repositories to fit right into the existing code (so no changes needed) and then if they internally have dependencies then you can have them use a static factory.\n. Check the wiki for the info we have. Also, I assume you're using a .NET RP, so check the .NET docs for the library you're using to integrated with IdSvr (such as WIF or the Katana MW -- not sure which of those two you're using).\n. Well, the point of IdSvr is SSO, so you just need to get it setup -- the wiki show that. \n. @elduderino87 yes, that's a common approach (short access tokens + refresh token) to reduce the expose of access tokens and allow a user to remove permissions to the app if/when desired/needed.\n. I can look into this and try to reproduce, but it will be a week or so before I have time. Hopefully you can wait...\n. Hmm, that sounds odd. If your cookie is timed out then you should simply see a 404 to the login page.\n. Yes, that's a WIF issue. This might help:\nhttp://brockallen.com/2013/02/14/configuring-session-token-lifetime-in-wif-with-the-session-authentication-module-sam-and-thinktecture-identitymodel/\n. Well, I think they indicated the issue -- IdSvr supports WS-Federation. I don't know about WebSphere or the other tooling you're using, but it sounds like they do not support WS-Federation.\n. Hmm, very hard to diagnose that. Perhaps a self-signed SSL cert that's not properly trusted?\n. You're mixing up concepts. Do you need to contact the STS to validate credentials or do you just want to issue a cookie with claims in your RP?\nIn any event, this has nothing to do with IdentityServer and is really just using WIF.\n. This shouldn't be any different than doing it without IdentityServer since it's encapsulated behind an interface.\n. Yes, you are correct -- when we do HRD the ReplyTo is not preserved across the redirect to the IdP. We don't support this in gateway mode and we'd prefer for you to use the registered ReplyTo URL in the RP config. \nWhere do you need the reply to? A different server?\n. Also, if you're just using it to redirect back into the RP somewhere, normally it's recommended that you use WIF's RP redirect mechanism via the wctx param.\n. WIF on the RP side will track what the current URL is and will keep track of that so that when you return to the configured Redirect URL in the RP to process the token it will redirect the user to that original URL.\n. And your config looks fine, AFAICT\n. IdSvr has some OAuth2 support -- look into that angle (with the implicit flow).\n. IdentityServer supports OAuth2, so I'd suggest looking into that to issue JWTs. Check the wiki: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/wiki\n. It's passed from the ShowSignOutPage on the HrdController.\n. You can either use WS-Trust or you can use OAuth2 resource owner flow. IdentityServer supports both.\n.  There are lots of samples in github and check the wiki.\n. You still need to implement the UI workflow to allow for this, much like the samples do in MR.\n. Where are you seeing these claims? In the same place or are you seeing one set of claims in one context and another set of claims in another?\n. Where are you seeing these claims? Just in-memory in the debugger in IdSvr you mean?\nBut yes, it sounds like you're mixing the two authentication systems -- IdentityServer issues its own cookie and knows nothing about MR. MR has a helper to also issue a cookie for scenarios where an app wants that feature, but IdSvr is not using it. \n. Fixed, thanks for reporting it.\n. What was the solution/outcome?\n. Dunno -- Double check that it's the right cert and that you have read access to the web server identity.\n. If you got all those other things working, then that would just be normal roles in MVC at that point.\n. You'd need to confirm which claims are being issued. Build a test page that shows the user's claims.\n. Look into the ClaimsPrincipal class and its Claims property. Also these are more basic questions about WIF and no so much about IdentityServer. I'd suggest checking MSDN or the Microsoft support outlets for this sort of information.\n. IdentityServer supports WS-Federation's signout, so you should use that. WIF in the RP has support, so look into that.\n. Sorry for the delay -- we've been working on IdSvrv3 and this lot lost in the mix. \nDo you have consistent steps to repro the issue, or is it just intermittent?\n. 1) Identity Server's configuration has always been in a separate database from the identity management library.\n2) See (1).\n3) This is up to you and how you want to build your hosting architecture. The sample simply sets these settings in the ctor so as to not mandate a DI framework or approach. \n. Yes.\n. I'm not sure what's going on here, as I'd have to understand it better. But the short story is if you customize the login page and redirect the user to another page for workflow purposes it's necessary to maintain the return URL across those redirects so that once you're done you can resume the ws-fed signin process.\n. IIRC, this is not well described.\n. This doesn't sound like an IdenityServer issue and more like an IIS/ASP.NET configuration issue. See the error message.\n. Not sure. It says the config section isn't recognized and needs a section declaration -- this sounds like the app is not configured in IIS properly (or at the right level). Sorry.\n. You only need to trust the signature of the token in the app that's consuming the token.\n. Referrer is unreliable in HTTP. Also the wctx param is meant to be opaque to the STS. In short, technically you shouldn't be looking into either.\n. Oh sorry -- and what you should be looking at in the STS is the realm being requested. This is available in the WS-Fed controller and could be passed to the login page (but you'd have to make this change).\n. IdentityServer has an abstraction for the user and role database being used. Whatever you use for that abstraction you could use yourself to add/remove roles just like the UI is doing. Look into the IUserManagementRepository interface.\n. Well, IdentityServer is providing claims about a user. This is identity information, not necessarily permissions. Permissions are usually checked at authorization time when a resource is being requested, which is typically in an application. Have a look at the ClaimsAuthorizationManager or here: \nhttps://github.com/thinktecture/Thinktecture.IdentityModel/tree/master/source/Owin.ResourceAuthorization.Mvc\nhttps://github.com/thinktecture/Thinktecture.IdentityModel/tree/master/source/Owin.ResourceAuthorization.WebApi\nfor the modern authorization programming model.\n. You can customize the claims issued from IdentityServer based upon the RP requesting the token. Look at the IClaimsRepository extensibility point.\n. Maybe I'm not clear on what you want - do you want to issue different claims to different RPs? Or do you want IdSvr to not issue a token to certain RPs?\n. And you want to make these changes to IdentityServer itself? So you have web pages that allow users to do this management of the data in the DB and you want to control authorization to these updates?\nGiven the size of this and potential complexity, I might suggest making this admin application a separate application. It can be a RP using IdSvr as the STS. Then in the app you can use the resource authorization to the pages that would update your DB. But my main suggestion is to keep this code outside of IdSvr so you don't have to change the main codebase of IdSvr.\n. I don't understand this last question.\n. Using the resource authorization in each RP makes sense -- it's at the RP where you need to implement authorization.\nRight now IdentityServer supports an interface for the configuration system and you can implement this to store the data anywhere you want. We also have a EF implementation, so if your DB supports EF then using that approach might save you time and effort. See this repo: https://github.com/thinktecture/Thinktecture.IdentityServer.v3.EntityFramework\n. Oh, yes, IdentityServer v2... well those repositories are also abstracted out and we do have an EF implementation -- so really the answer I gave above.\n. No, with one. You conifgure IdSvr as it's own identity provider (via wsfed endpoint) and you configure IdSvc as a RP (via the hrd endpoint). There's another issue that describes this setup -- check the archives.\n. The cookie lifetime in IdentityServer is the same value as the Default Token Lifetime configuration in the admin UI.\n. correct. but you realize you're limiting the utility of the STS and the whole point of single sign in?\n. Right, but by setting the STS cookie time at 20 minutes then your users will only get SSO within that narrow 20 minutes.\n. While this is a good idea, it would require a schema change so I am not sure we would want to make this addition unless we were doing other major changes.\n. Well, the UI is in MVC, so you'd have to update that. You'd have to update the model layer to add the property and then you'd have to update the EF code for it. It's not hard -- I'd suggest putting a breakpoint in the UI code and walk thru the call sequence to the DB.\n. 1) in the ws-fed protocol options, enable federation\n2) yes, iirc\n3) there' a sample app in github and the blog post\n. Did you read the README at: Thinktecture.IdentityServer.v2\\samples\\AdfsIntegrationFullSample? That has the details. \n. The mobile views are chosen via MVC's display mode feature: http://msdn.microsoft.com/en-us/magazine/hh975347.aspx\nYou'd have to either remove those views so they're not discovered (and thus rendered) or you'd have to configure the DisplayModeProvider and change its behavior.\n. Via the UI you have to do this manually. Otherwise you'd have to do this in your CreateUser method in your IUserManagementRepository implementation.\n. Have you configured a custom IUserManagementRepository?\n. Look in ~/configuration/repositories.config and see what you have configured for userManagement. That's the class that this is complaining about.\n. Ah... shame on resharper. :)\n. The OAuth2 RFC indicates that refresh tokens aren't supported for implicit clients. The way you get the same behavior is to use the \"remember me\" checkbox on the login screen so the user is not re-prompted each time you need to make the authorization request.\n. Well, it needs to be in a location that's available for users to login. \n. So then I'd say nothing more than what you'd do for any server you put on the DMZ. \n. That sounds like the ASP.NET MembershipProvider -- that's a table owned by that library and not by IdentityServer. Perhaps search for this problem on the MSDN forums or open an issue with Microsoft?\n. Yes, MembershipReboot is a much better choice than the older Membership provider.\nAnd yes, MembershipReboot is supported in IdentityServer v3.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v3/milestones\n. The .pfx file contains the public and private key. It needs to be deployed to the machine store on the server where you're running IdSvr. \nThe .cer file only contains the public key and is needed on the RP for JWTs.\nFor SAML tokens this is not necessary on the RP since the SAML token contains the certificate and it is validated by the thumbprint configuration in web.config on the RP.\n. It's not on the high priority list. What would you suggest? If we can agree on something then you can submit a PR and we can include it.\n. Sorry, not sure what the issue is. Since the tracing doesn't show much, the last option is to debug. Perhaps see if you can repo the issue on a local dev machine first?\n. Ah yes, that old issue -- not sure if that's something I would have been able to detect from here. I'm glad you figured it out.\n. Yes, IdentityServer was originally \"StarterSTS\" on codeplex and then evolved and was moved here to github. The project on codeplex is no longer active.\n. Are you migrating an existing DB or starting from scratch with a new DB?\n. Yep, understood. If the migrations don't work then that default data is a pain. There is also a SQL folder under the migrations and it should contain all the scripts needed. It's located at:\nThinktecture.IdentityServer.v2\\src\\Libraries\\Thinktecture.IdentityServer.Core.Repositories\\Migrations.SqlServer\\Sql\n. Can you explain in detail the steps for reproducing this? Do you do logout form the RP or from the STS? It's not clear from your post exactly the steps, so it's hard to understand the context for the problem.\n. I'm confused why your windows account has anything to do with you being logged in. Perhaps you have windows auth configured when you shouldn't?\n. Do you have \"third party\" cookies disabled in your browser?\n. Is the STS in a different \"internet zone\" than the RP? IE won't load cookies for iframes if the zones are different.\n. IdentityServer does not support the SAML2 protocol (but it does support SAML tokens via the WS-Federation protocol). \n. We don't support client credentials flow in IdentityServer v2. Also, in IdentityServer v2 we don't really allow a single token to be trusted by 3 different RPs -- in other words the client would need to get a new token for each RP.\n. I told you -- from the client make 3 different calls to IdSvr to get the 3 different tokens. You can then cache those tokens for the duration of the tokens.\n. It sounds as if the cert is just not installed in the certificate store on both machines.\n. All I can suggest is that I would write a console app on the second to test that loading the cert works.\n. That's Microsoft's library -- you'd have to speak to them. \nAn alternative is to use MembershipReboot:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/master/samples/MembershipRebootUserRepository\n. Ok, thanks for the description. And you're right -- the logout mechanism for ws-fed with iframes doesn't work if the user's browser doesn't send the cookie because they think it's a 3rd party cookie and that's disabled.\n. It sounds like you need to look into OAuth2 next -- IdentityServer 2 has some limited OAuth2 support, but might be enough for your needs.\n. I'll rephrase:\nNext, it sounds like you need to look into OAuth2 -- IdentityServer 2 has some limited OAuth2 support, but might be enough for your needs.\n. Yes, IdentityServer can issue tokens to client applications that need to use your Web APIs. It's still in development and doesn't yet support ADFS, but we plan to support other identity providers (like ADFS) before we RTM.\n. Your user needs to be in the \"IdentityServerUsers\" role to have the permission to have the token issued for them.\n. No, I meant in IdentityServer itself -- for users to be allowed to use IdentityServer and get tokens they have to be in the IdentityServerUser role.\nThe AuthorizationServerAdministrators  table is for AuthorizationServer to know which users from the STS can configure AuthorizationServer.\n. Hmmm, ok then... we're back to square one. Looking again at your question, these values look strange to me:\nRP redirect url: https://localhost/IdSrv/issue/hrd\nIP wsfed endpoint: https://localhost/IdSrv/issue/wsfed\nAre you using HRD? Why if the RP's return URL the hrd endpoint? \n. The cookies issued by WIF require SSL (by default). \n. https://www.nuget.org/packages/BrockAllen.CookieTempData.dll/\nhttp://brockallen.com/2012/06/11/cookie-based-tempdata-provider/\nhttps://github.com/brockallen/CookieTempData/\n:)\n. The 2fa is a function of the identity provider. If you want 2fa in IdentityServer it is customizable.\n. Not sure -- you'd have to contact Microsoft or ask on the ADFS support forums. \n. Not for IdentityServer v2. We're working on IdentityServer v3 and we have a better extensibility model in the new version (with many samples).\n. It's possible via a custom user service. See the docs over in that repo.\n. Wrong repo for this question.\n. Is the cert for that host correct and trusted?\n. So perhaps the call is failing because you simply don't have the SSL part done right.\n. Good point, @iampez  -- see if you can even browse to the federation metadata in your browser.\n. @austinajit if something \"all of a sudden\" stopped working, then perhaps it's the signing certificate is past its expiration?\n. Ah, thanks for the update!\n. Yes, good idea. We don't have time to add a new feature such as this, but you you can submit a PR and we can review. Thx.\n. This meta tag tells IE to not guess about what version of HTML and instead render with its latest standards mode. This was needed (despite the presence of the DOCTYPE), otherwise we found IE rendering an older mode that caused problems (I can't recall what they were -- either rendering or JS issues).\n. So what would be ideal is to have IdSvr2 support the assertion flow, where you pass one token into the token endpoint and another token comes out. This is not currently supported. You would have to extend IdSvr2 in the OAuth2TokenController to support hat additional flow. You can look at AuthorizationServer as an example.\n. Yes, January is our target for release.\n-Brock \n-----Original Message-----\nFrom: \"TD49\" notifications@github.com\nSent: \u200e11/\u200e8/\u200e2014 4:26 PM\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: Re: [Thinktecture.IdentityServer.v2] Question: Refresh TokenExpiration settings (#820)\nClosed #820.\n\u2014\nReply to this email directly or view it on GitHub.=\n. Like you said, OAuth doesn't define signout. IdentityServer v3 implements OpenID Connect which will have a signout mechanism. Perhaps if you're just getting started with your app, IdentityServer v3 si a better choice to use.\n. Odd. We can look into it when we get back home (I think we're both traveling this week -- at least I am).\n. We've known about this issue and the attitude was that you shouldn't be using the same CN in multiple certs.\n. And you've disabled webdav? http://brockallen.com/2012/10/18/cors-iis-and-webdav/\n. Did you check the CorsSamples for Thinktecture.IdentityModel.45? You'd have to mimic them in IdentityServer's code:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/CorsSamples\n. IIRC: \nThe audience is the \"realm/scope name\" from the RP config.\nThe signing key is the \"Symmetric Signing Key\" from the RP config.\nThe issuer name is the \"Site ID\" from IdSvr's global config.\n. Use the \"Releases\" link: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\n. You want to track the user in your web application? Issue a cookie -- ASP.NET has lots of support for that.\n. Maybe use something more modern:\nhttp://brockallen.com/2013/01/26/replacing-forms-authentication-with-wifs-session-authentication-module-sam-to-enable-claims-aware-identity/\nor \nhttp://brockallen.com/2013/10/24/a-primer-on-owin-cookie-authentication-middleware-for-the-asp-net-developer/\n. We don't have an upgrade path. Mainly because the fundamental protocol(s) being supported is different.\n. It's a new server and a new protocol. I'd say \"yes\".\n. Well, you should limit what claims you put into the cookie. If you need more claims in the app, then look them up dynamically based upon the claims from the cookie.\n. Try an incognito window -- i don't know if the issue is form a single cookie or many cookies.\n. No idea. You'll have to do a lot of HTTP debugging I think to try to follow the trail of working vs. not working.\n. @leastprivilege any thoughts? seems reasonable to me.\n. ok, added. thanks.\n. Sounds like the request is sending the http version of your URL. That's a client problem.\n. Why not just have a page (like the login page) in the IdentityServer host project that allow anonymous access?\n. There is a core DLL on NuGet for IdentityServer2. I don't think we have any samples that show its use, though. Your best bet would be to build something similar to what the current hosting project does.\nAs an alternative, you might want to look at IdentityServer3 as it allows more customization like you're asking for: https://github.com/IdentityServer/IdentityServer3/\n. Your app trusts ADFS. ADFS trusts IdSvr. ADFS uses WS-Fed to connect to IdSvr and in IdSvr you'll need to configure the WS-Fed plugin.\nhttps://github.com/IdentityServer/IdentityServer3.WsFederation/\nhttps://identityserver.github.io/Documentation/docsv2/wsFederation/overview.html\n. I'm not sure what MicroStrategy is. It sounds like a web framework you're using in your RP. You'd need to check with them if they support WS-Federation as a SSO protocol. You can look at Microsoft's Katana WS-Federation middleware as a sample. Beyond that I don't have much else to suggest.\n. Ideally Microstrategy would just implement the RP side of the WS-Fed protocol. This would make the most sense if you or they need to do any custom work to get this SSO behavior you want.\n. Your question is more about PHP libraries that do SOAP. I'd reach out to the PHP developer communities. \n. This is not our code -- it's probably the code in Microsoft's SAM (session authentication module),. That's where the cookie is created, chunked, and read.\n. I don't recall us supporting this in IdSvr2 -- you can either change the source, or somehow hook the outbound response with an http module.\n. Maybe this? https://brockallen.com/2011/06/01/beware-bin-deployment-of-mvc-and-razor-with-formsauthentication/\n. No, no known issues with IdSvr2 except that it targets an older set of security protocols (WS-*). IdSvr3 and IdSvr4 target the newer protocols (OIDC and OAuth2), and thus allows for a wider range of security solutions for the newer types of applications that people are building.\n. thx\n. ",
    "kstreet": "Thank you Dominick.  Is there any particular reason?  Is it because that is what users want?  VM/IaaS is better/has advantages over PaaS?  Easier to code VM way first or?  Mainly just curious to learn why one over the other when using with IdentityServer.\nBTW, I am watching your Pluralsight course on Identity and Access Control in .NET 4.5 right now.  It is great!  Very helpful and easy to follow, thank you for that!  Really like how you start with the history/foundations and then get into why claims are better.\n. ",
    "langell": "Ok, I fixed this. The federationMetaDataLocation url was wrong, and I had a mix of WIF 4.0 and WIF 4.5.. \n. Thanks Dominick.\nI see that now. So If I use ActAs flow, will it delegate the call on behalf of the Identity of the Token? I'm wondering if this is what I want to do, vs, just passing the claims I need on the WCF server. What best practice for this? \n. Ok.\nThe scenrerio is. A external Tomcat Site  will call an ASP.NET site (Non WIF). It will post some information in an encrypted format (userid/pass). Then the ASP.NET site, will make a call to Identity Server to get a a SAML token. I was thinking via WS-Trust. Then the ASP.NET site witll call into a WIF enabled ASP.NET site and pass in the Token ... some how....  to establish trust between the WIF site and the Identity Server.\nA. Is this possible?\nB. is there a better way to achive this?\nHope that makes sense. \n. Yeah, I agree that would be a better approach, the problem is that the Java site is signing on to a different SSO (something custom and Non WS-Fed) . So we are trying to \"Fake\" the Identity Server Authentication without actually being re-directed to the login page.\n. Thanks for the input Brock. It's a total hack but something I need to solve for a customer. When I get a solution to this Frakenstonian issue. I will post the bastardized results..\n. ",
    "vip32": "the idp webconfigs are al standard. can't find anything oauth2 related there. can you specify what i have to enable?\n. in the idp ui oauth2 is enabled (default)\n. the 'token' part seems missing, helps a bit. now its a 400 (bad request). Im not sure if i have to specify 'token', shouldn't that be handled by OAuth2Client?\nstatic Uri _oauth2Address = new Uri(\"https://localhost/idsrv/issue/oauth2/token\");\n....\nprivate static string GetIdentityToken()\n        {\n            \"Requesting token\".ConsoleYellow();\n            var client = new OAuth2Client(_oauth2Address);\n            var response = client.RequestAccessTokenUserName(\"admin\", \"***\", \"https://IdSrv_OAuth2Client\"); // 400 error\n            return response.AccessToken;\n        }\n. i'll have a look at the integration tests and try to run them against my idp...\n. Yes im on the master. the integration test ValidUserNameCredentialValidClientCredential() fails too with a 400. Even after disabling client auth in the admin ui.\n. the integration test is using the clientid and secret ctor, but also fail. where can i add these to the db? OAuth2Configuration table does not have these columns\n. must say that my testapp uses the nuget identitymodel package (2.1.9). which may be out of date with the identityserver (2.1.8). \nbut the integration tests use 2.1.8 and fail in the same way....\n. Great the integration tests works now. I did the following :\n- added user dominick/abc!123\n- upgraded to current master (identityserver) with identitymodel 2.2.0\n- didn't make any changes to the db\nvielen dank :)\n. and indeed, an invalid user gives a 400\n. i investigated the problem some more and it seems its happening client-side. the request doesn't even hit the server. i'm running the client from localhost (iisexpress). maybe that has something to do with the cors negotiation (not there).\n. when will this implicit flow be available, any ideas?\n. correct, i made some implicit flow requests and it's working :) i also got CORS working (thanks Brock) in the idsrv, but implicit flow is much easier.\nthe only grant_type not working is 'client_credentials' (unsupported), but i can use 'passwords' for now.\n. correct (https://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API/Clients/IdSrvOAuth2Client). In that sample a specific endpoint (Callservice > .../webapisecurity/api/identity) is used to get the Identity. This endpoint lives in the selfhost/webhost which is part of the Samples solution. \nHow do i get the same functionality (getting an Identity from a  token) with the 'real' IdentityServer? I can get a token, but that aint the Identity. \n. ... i'm probably not getting it :) must provide the obtained token to my own claims enabled restservice to access the identity (and claims).\n. ha, got it working now. \nhad some trouble with the oauth token. the idp gave me a JWT but i presumed it was SWT and configured my webapi to handle SWT only (AuthenticationConfig). Only after extensive debugging did i found the mistake, the identitymodel framework threw the correct exceptions but they where never visible. Maybe some more logging makes this easier. But i'm not complaining :) it works as expected.\n. thats great to hear, wasn't aware of that. never worked with the v1 version.\nuse cases are:\noauth and saml protocol for token issue\nauthenticated ajax rest service calls (webapi)\nfederation to other idp's\nhooking up a custom user store (OpenLDAP)\nnothing fancy i think\nOn Thu, Oct 25, 2012 at 8:22 PM, Dominick Baier notifications@github.comwrote:\n\nWhat exactly are your use cases?\nMost parts of idsrv v2 are a direct port from the v1 version - v1 has\nalmost 10K download - so these code paths are well tested. Other parts are\nnew.\nI would put it in production - at least for the most parts.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/15#issuecomment-9788308.\n. i meant the ws-* protocol, saml is just the token format (my bad). \n\nbut can you provide an estimate when the oauth stuff will be final? e.g. production ready?\n. ",
    "paullem": "Vincent, what do you use as SAML protocol implementation?\n. I am not done yet with HRD testing. I will report on that one later.\n. The short answer is: YES.\nThe long answer is that an intermediate issuer (federation sts) should remember the upstream IP that has authenticated the user. When wsignout1.0 arrives a redirect (with wsignout1.0) to the upstream RP is required. Typically a memorie cookie (path is application path) is used to remember this.\nBut now trouble ....\nOfficially it is SingleSignOn. So there is only one identity (and therefor only one upstream IP) per DOM session (say IdP-a). But if you allow an authenticated user to also logon have an extra identity (by allowing an extra authentication) by using a whr=IdP-b, then you are in trouble. Because when signout is pressed then this path should be cleared to. It is non-trivial (if possible) to know which identity must be cleared....\nAnd a fork (two identities) cannot be cleared with single signout? ADFS2 - rollup2 - was messing around with this. Lots of people were upset.... \nThe classical way to avoid this is not allow two identities (in a single DOM session). Only allow whr to override realm cookie when the user is not authenticated (yep another memory cookie). But don't be surprised if some people do not like that.\n. :-) I am afraid it is going to be next weekend. Apologies.\n. OK. I played around with it in the Identity server v1 environment.\nWith upstream IdP\n      When wsignout1.0 arrives a redirect to the upstream IP is required. In theory only one per DOM session.\n      But the [optional] wreply parameter of the incoming wsignout1.0 must be copied. That way the upstream\n      IP can go to it in the end.\nIdSrv is the IP\n      IdSrv response is a page that intitates a GET from the browser to all downstream RPs\n                                     (get \"RP-enpoint-url?wa=wsignoutcleunup1.0\" )\n     The response to wsignoutcleanup can be img or html. ADFS v2 uses:\n                          \n                    .NotShown { visibility: hidden; height: 1px; width: 1px; }\n     If there is a wreply=destination-url, then, with some javascript, the IdSrv response page should also redirect to the url in wreply. Typically OnLoad.\nWhen wsignoutcleanup arrives, typically from above, but sometimes from below to clear partial state.\nSame as being the top, but not the wreply thing.....\n. Hmm, my iframe was lost....\nADFSv2 uses per RP an iframe element with class=\"NotShown\" src=\"RP-EndPoint-url?wa=wsignoutcleanup1.0\"\n. This doesn't happen in my test combination (S2008R2) + IE9 or IE10 (december preview on S2008R2)\n. .idsrvauth is cleared. But Vijay has an .ASPXAUTH cookie at IdSrv, where does that come from? It also has the wrong path ('/'). Dominick, do you use that cookie or is it caused by something Vijay did/adapted? \n. He has an issue there too, but this one is from IdSrv. It is set on a response by IdSrv. How did he do that? And why on earth would it influence IdSrv. (I never did ASP.NET without ADFS, that explains my ignorance :-))\n. Knowing what vjragind is trying to achieve, you are both on different paths.\nHis scenario is: RP -> ADFS -> IdSrv. ADFS for AD accounts, IdSrv for external membership accounts.\nHe wants the pages of both IP(s) to appear the same. ADFS being classic ASP.NET forms and IdSrv being MVC, that is non-trivial?\nFrom: vjragind [mailto:notifications@github.com] \nSent: Thursday, May 09, 2013 9:08 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nSubject: Re: [Thinktecture.IdentityServer.v2] Authenticating Users using ADFS from the IdentityServer login page (#207)\nWill this work against a remote AD store? The clients that use AD, will need to validated against their Active Directory and our set up is like this - we have one IdentityServer centrally located\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/207#issuecomment-17683386 . \n. Knowing what vjragind is trying to achieve, let me reformulate his question.\nHis scenario is: RP -> ADFS -> IdSrv. ADFS for AD accounts, IdSrv for external membership accounts.\nHe wants the login pages of both IP(s) to appear the same. ADFS being classic ASP.NET forms and IdSrv being MVC, that is non-trivial?\n. @Kyle: SAML Tokens are meant for specific RPs. Broad targeted cookies and wreply are scary. SSO should solve any user issues. Authenticated provisioning of RPs can be automated. That would solve everything without going down the scary path......\n. For what it is worth, from WS-Fed 1.2 chapter 16 (Security Considerations):\n3939  When using Web messages care should be taken around processing of the wreply parameter as its value\n3940  could be spoofed.  It is RECOMMENDED that implementations do explicit lookup and verification of URL,\n3941  and that these values be passed with transport security.\nA list is one Obvious implementation, but indeed let Kyle specify his requirements.\n@Kyle:\nDo realize that anyone can cause the get with wreply=https://evil.univ.edu/answers/mathexam  Which results in sending your widely usable SAML Token to evil...  So be very careful with your wildcard wishes.... And as Dominick said, you can solve it in wctx too.\n. @Kyle: No need for DNS spoofing. Any Web Site can redirect to the IP with wa=wsignin1.0&wreply=the-evil-URL and thus have the SAML token posted to evil.\nThat is exactly why wreply is so often ignored.....\n. IFF all things are configured properly, then an intentional attack by evil requires some tricks. But misconfiguration (very permissive wildcards) is probably a bigger risk. Students tend to find that remarkably quick. Some report it, some use it for pranks and some abuse it. I think it is scary, just a warning.\nI had read your specs. Maybe it is not just the hostname, probably it has to be something like the algorithm for cookies with domain and path combinations? Otherwise the POST will be sent, but then the session cookies don't match?\nThat means you will have to do something in all RPs too? I still wonder if it is worth the trouble, extra complexity and new corner cases. Certainly given the other possible solutions.\nOn a \"List\": +1. But wildcard is complex and scary, I will not use wildcard :-)\nAnd even with \"List\".  How does Signout work in this scenario? Who clears which Authentication session cookies?\n. @Kyle: I was referring to the RP Authentication session cookies.\n. I am not yet convinced that you are.\nYou could convince me by sending a Fiddler trace of an ADFS server with your setup with a single RP in ADFS (with multiple EndPoint URL on different host names, one RP in ADFS). Another IP than ADFS is OK too.\nThen Signin, Go to the other URL for same RP, then signout.\n:-) Surprise me :-)\n. I saw your challenge with the Thumbprint. I guess everyone I know, unfortunately, had to go through that one.\nCan you make the fiddler trace available to me You can email it directly to my firstname.lastname at mycompany domain (devcon) in the Netherlands (nl). Or email me a message where I can get it.\n. Yes. I still don't see what the advantage would be, certainly not in the light of so many new corner cases. I am scared of people not understanding the implications of open redirects, FedAuth cookies going to the wrong applications, SesAM version differences etc.\nI hope I did understand his requirements, in that case I would solve it differently. Just leverage standard SSO functionality.\nTechnical summary:\n- wsignin: Multiple WS-Fed endpoints (different dns hosts in List, no wild cards) per RP would not be dangerous. But for signout IdSrv would have to handle them as different RPs. Each requires wsignoutcleanup. So more complexitiy in code, minor configuration advantage if you want to give multiple RP the same EntityID and cert. But wreply different from an EndPoint is not usefull, can do it with wctx etc.\n- wsignout: wreply here is dangerous (any bad component can initiate it). I think the only safe thing is a configured list of valid wreply values. On top of that require: wreply.StartsWith(configured_value). It would also require IdSrv to implement staggered wreply signout. And even many in SAML2 are moving away from that one, it is so fragile. Displaying the wreply link at the top was always good enough for me.\nToday I also looked at a trace from Kyle where it did work (including wildcard). No doubts. But I think it is complicated and really dangerous for people with less experience.\n. I talked extensively with Kyle just now.\nSo his requirements can technically be met with SingleSignOn (without the wildcards or dangerous cookie paths). But in his implementation he uses the EntityID (wtrealm) as a application Group identifier. Not as a unique application identifier (a RP for him is the combination of EntityID and EndPoint).\nHe wants Single Sign On within the group (this was a part I had missed until I talked with him). And that is what he has implemented. But then the signout cookie changes to tuples per RP instead of just EntityID or EndPoint per RP.\nI will have to brood some days on this.\n. If you are using signed XML, then XML normalization is relatively heavy on CPU. Numbers in the order of a couple of dozen logons per second per server (10-50 logon/s) are normal for similar implementations. This is just to give an indication and you will have to verify, indeed it depends on so many things.\n. The screenshot displays IP metadata, attempting to load as RP. That will not work.\nWSFED metadata doesn't need NameID specs. ADFS doesn't supply it (take a look at ADFS metadata). SAML2 is another story.\nNone of my ADFS severs (whatever version) have ever complained about missing NameID in metadata. And I have never supplied it from any IP. If someone sends me metadata (out-of-band), then I will analyze on all ADFS versions.\n. I don't think there is anything wrong with the MD. I think it was imported incorrectly. If you import and IdP (like IdSrv, where the account is defined in IdSrv) then you should do \"Add Claims Provider\" in ADFS. If you want to add IdSrv as a Relying Party (when using hrd in IdSrv - as intermediate issuer - OR IdSrv either as SP - Administration of IdSrv -) then you should use \"Add Relying Party\" in ADFS. Sorry for the confusing words, I didn't invent all those synonyms.\nI would be very surprised if it doesn't import without problems. I have worked with IdSrv too. Unless something was accidentally broken later on.\nBut Send it to: first.lastname@company.nl\nwhere company=\"devcon\"\nPaul Lemmers\n. ",
    "ChristianWeyer": "Did you already try it?\nIt it works I think a dep. should be OK...\nAm 09.01.2013 um 01:26 schrieb \"Brock Allen\" notifications@github.com<mailto:notifications@github.com>:\nDo we want to take a dependency on this: http://51degrees.codeplex.com/ to address the issue?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/18#issuecomment-12025201.\n. With the iOS simulator I see this:\nUser-Agent      Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25\nCould not yet test with the real device, though\u2026\nFrom: Brock Allen notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Saturday, January 12, 2013 12:28 AM\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nCc: Christian Weyer christian.weyer@thinktecture.com<mailto:christian.weyer@thinktecture.com>\nSubject: Re: [Thinktecture.IdentityServer.v2] iOS6 user agent not detcted (#18)\n@ChristianWeyerhttps://github.com/ChristianWeyer Can you confirm for me what the real UA string is on your iOS6 device is? I am testing iPhone with:\nMozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\nand it seems to be working (meaning, it seems to be detecting it as a mobile device). Also, for iPad:\nMozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\nThis too is being detected as mobile. So my UA strings I'm using to test might be wrong. I'd like confirmation, please. Thx.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/18#issuecomment-12168686.\n. Andrew,\nThis is an issue which only shows up when running the web site in the Windows Azure Compute Emulator.\nThe Emulator picks up a free port for your web site \u2013 if 443 is taking (e.g. By your 'big' IIS on your machine) it will just try and take the next free port.\nYou can see this in the Compute Emulator UI console.\nOpen it up and try to remove all potentially running deployments there.\nCheers,\n-Christian\nFrom: Andrew Cohen notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Samstag, 16. Februar 2013 19:25\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nSubject: [Thinktecture.IdentityServer.v2] Port used by Azure Emulator (#117)\nI don't think this is an issue with your code. In fact, I'm looking for guidance to figure out why the iisexpress site hosted by azure locally shows a discrepancy with the port the app is running on.\nThe browser shows: 127.0.0.1:444, however, System.Web.HttpContext.Current.Request.Url shows the following (in this example, I am hitting the HrdController at the ProcessRequest method:\nSystem.Web.HttpContext.Current.Request.Url\n{https://localhost:446/issue/hrd?wa=wsignin1.0&wtrealm=https://localhost:444}\nAbsolutePath: \"/issue/hrd\"\nAbsoluteUri: \"https://localhost:446/issue/hrd?wa=wsignin1.0&wtrealm=https://localhost:444\"\nAuthority: \"localhost:446\"\nDnsSafeHost: \"localhost\"\nFragment: \"\"\nHost: \"localhost\"\nHostNameType: Dns\nIsAbsoluteUri: true\nIsDefaultPort: false\nIsFile: false\nIsLoopback: true\nIsUnc: false\nLocalPath: \"/issue/hrd\"\nOriginalString: \"https://localhost:446/issue/hrd?wa=wsignin1.0&wtrealm=https://localhost:444\"\nPathAndQuery: \"/issue/hrd?wa=wsignin1.0&wtrealm=https://localhost:444\"\nPort: 446\nQuery: \"?wa=wsignin1.0&wtrealm=https://localhost:444\"\nScheme: \"https\"\nSegments: {string[3]}\nUserEscaped: false\nUserInfo: \"\"\nHere is the browser:\n[2013-02-16_1223]https://f.cloud.github.com/assets/812671/163928/2800395e-7866-11e2-964c-64ddbf93acc6.png\nBecause of the port discrepancy, the identity providers are not allowing authentication because the redirect url's do not match.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/117.\n. You are using a different cert in the Cloud?\nFrom: satishkbg notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Freitag, 5. April 2013 22:06\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nSubject: [Thinktecture.IdentityServer.v2] Azure deployment with test certificate - HTTP Internal Server Error 500 (#173)\nHi,\nI followed Christian Weyer's blog post to test the V2 in azure - just followed every step, used a self-signed cert on my local machine, tested first locally with azure-sql-db, it worked i.e. database got created, was able to create admin user.\nPublished to Azure cloud service as production, and when I browse https://myservice.cloudapp.net i first get the un-trusted certificate message, and if i choose to continue it gives me 500 error.\nHow to resolve this?\nRegards\n-   Satish\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/173.\n. We had this once when we selected the wrong signing cert locally and then deployed to Azure.\nNow, I think it would be time to RDP into the Azure instance and have a look in event log etc. \u2026\nFrom: satishkbg notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Freitag, 5. April 2013 22:50\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nCc: Christian Weyer christian.weyer@thinktecture.com<mailto:christian.weyer@thinktecture.com>\nSubject: Re: [Thinktecture.IdentityServer.v2] Azure deployment with test certificate - HTTP Internal Server Error 500 (#173)\nNo, i just used the same cert i used for local testing\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/173#issuecomment-15980047.\n. This is exactly what I was referring to \u2013 you have a different signing cert.\nEither dump the DB and start over directly in the Cloud. Or remove the vert manually from the DB.\nFrom: satishkbg notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Samstag, 6. April 2013 10:43\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nCc: Christian Weyer christian.weyer@thinktecture.com<mailto:christian.weyer@thinktecture.com>\nSubject: Re: [Thinktecture.IdentityServer.v2] Azure deployment with test certificate - HTTP Internal Server Error 500 (#173)\nNothing in event log, but in RD, when I try to directly browse the site from IIS, it throws the error\n[InvalidOperationException: Signing certificate not found: CN=127.0.0.1, O=TESTING ONLY, OU=Windows Azure DevFabric]\nThinktecture.IdentityServer.Repositories.Sql.Mappings.ToDomainModel(KeyMaterialConfiguration entity) +575\nThinktecture.IdentityServer.Repositories.Sql.ConfigurationRepository.get_Keys() +137\nThinktecture.IdentityServer.Web.GlobalFilter.InitialConfigurationFilter.OnActionExecuting(ActionExecutingContext filterContext) +188\nSystem.Web.Mvc.Async.AsyncControllerActionInvoker.InvokeActionMethodFilterAsynchronously(IActionFilter filter, ActionExecutingContext preContext, Func`1\nnextInChain) +145\nI tried just a dummy asp.net web role with SSL endpoint with self-issued certificate and published to azure, i can browse it with the warning. Guess the idsrv is looking for something else?\nRegards\nSatish\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/173#issuecomment-15992965.\n. Cool!\nFrom: satishkbg notifications@github.com<mailto:notifications@github.com>\nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Samstag, 6. April 2013 10:54\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com>\nCc: Christian Weyer christian.weyer@thinktecture.com<mailto:christian.weyer@thinktecture.com>\nSubject: Re: [Thinktecture.IdentityServer.v2] Azure deployment with test certificate - HTTP Internal Server Error 500 (#173)\nI see that, i changed the signing certificate setting and selected the other cert i uploaded and now all seems fine.\nThanks for helping and getting me started.\nRegards\nSatish\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/173#issuecomment-15993076.\n. ",
    "apideveloper": "I have one that I can test with later today. \nSent from my iPhone\nOn Jan 12, 2013, at 12:42 PM, \"Christian Weyer\" notifications@github.com wrote:\n\nWith the iOS simulator I see this: \nUser-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25 \nCould not yet test with the real device, though\u2026 \nFrom: Brock Allen notifications@github.com<mailto:notifications@github.com> \nReply-To: \"thinktecture/Thinktecture.IdentityServer.v2\" reply@reply.github.com<mailto:reply@reply.github.com> \nDate: Saturday, January 12, 2013 12:28 AM \nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com<mailto:Thinktecture.IdentityServer.v2@noreply.github.com> \nCc: Christian Weyer christian.weyer@thinktecture.com<mailto:christian.weyer@thinktecture.com> \nSubject: Re: [Thinktecture.IdentityServer.v2] iOS6 user agent not detcted (#18) \n@ChristianWeyerhttps://github.com/ChristianWeyer Can you confirm for me what the real UA string is on your iOS6 device is? I am testing iPhone with: \nMozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25 \nand it seems to be working (meaning, it seems to be detecting it as a mobile device). Also, for iPad: \nMozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25 \nThis too is being detected as mobile. So my UA strings I'm using to test might be wrong. I'd like confirmation, please. Thx. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/18#issuecomment-12168686.\n\u2014\nReply to this email directly or view it on GitHub.\n. I ran into the same error. Like you said . Net 4.5 isn't registered in IIS correctly. \n\nUsually aspnet_regiis.exe -i will fix it\nSent from my iPhone\nOn Dec 20, 2012, at 4:43 PM, \"drewid\" notifications@github.com wrote:\n\nWOOT! Success. One useful thing to know is that even if IIS is enabled on a Windows 2012 server machine, Application Development / Asp.Net still needs to be enabled in Server Manager.\nWeb Server (IIS)\nWeb Server\nApplication Development\nASP.net 4.5\nISAPI Extension\nISAPI Filters\n.Net Extensibility 4.5\n\u2014\nReply to this email directly or view it on GitHub.\n. You need to switch the provider in web.config. \n\nThere's one .cs file that also needs to be changed but I can't remember the name right now. It should be the file where the error is coming from or close to it. \nInstead of sqlce use sql. I'll respond later with the exact changes required. \nSent from my iPhone\nOn Jan 2, 2013, at 6:06 AM, \"mbhattar\" notifications@github.com wrote:\n\nHello\nI am using STS V2, I am trying to use sql 2012  hence i have modified the connection string as bellow\nHere is the error message i got was Keyword not supported: 'initial catalog'.\ncould anyone guide me in this issue.\nThanks a lot\nMurali\n\u2014\nReply to this email directly or view it on GitHub.\n. Thats what I figured. Do you think api developers would like to access that secret when they need to? I can certainly see why they wouldn't need to if they put it into their application or note it right away. \n\nIs it possible to rebuild it or is it a one direction hash? I'm assuming one direction. I'll close after your comment. \nAlso, do you have a wiki or list of things you want help with on this project? My company allocated time for me to start helping out on the project. I'm our Application Architect and can handle just about anything. I can write unit tests to code modules as a start if you have any in mind.\n. None yet. You guys have written a ton of code, so I'm getting to know it. Once I've done that I can let you know if I have any ideas. \nThanks for the fast response.\n. Your second post hit on exactly what I was talking about. I was wondering if it made sense to create a management interface to support any claim type. This would allow implementors of IdServe to create custom types with out modifying code. Just a thought. \n. Can the SIngle sign on support this? I'm not sure if its finished, but that sounds like the trick. \nSent from my iPhone\nOn Mar 24, 2013, at 8:23 AM, \"vjragind\" notifications@github.com wrote:\n\nYes I don't want the user to log on again once they sign in via one of the apps. The flow is this: the user logs in via the first application ( in my case the .net 4.0 app). Now to change their profile information, they go to the application That houses our user store ( in my case the .net 4.5 app). When they do that, I don't want them to have to sign in again.  Hope this makes sense.\n\u2014\nReply to this email directly or view it on GitHub.\n. I tried running entity migration wizard and they fail. You have to comment out the already ran ones. If you run just the SQL it works fine. \n\nSent from my iPhone\nOn Mar 27, 2013, at 8:41 AM, \"Brock Allen\" notifications@github.com wrote:\n\nWe have DB migrations in the repository project for SqlCe and SqlServer. We've not gotten a lot of feedback on how well they work, so please let me know if you try them and if they work for you.\n\u2014\nReply to this email directly or view it on GitHub.\n. Oh thanks Brock. I'll do that next time. \n\nSent from my iPhone\nOn Mar 27, 2013, at 9:20 AM, \"Brock Allen\" notifications@github.com wrote:\n\nIf you're running them from VS then you should use the -SourceMigration switch to tell it where you're coming from.\n\u2014\nReply to this email directly or view it on GitHub.\n. I started creating this as well but we went with Api first on everything using UserManagementRepository as the backing class. \n\nAfter that anyone can make their own client interface. \n. I don\u2019t have any I can share right now. Brock is correct about wrapping your user management portal to the api endpoints of Identity server. You can do this in Identity server or as an external product so long as you reuse endpoints appropriately\nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eThursday\u200e, \u200eSeptember\u200e \u200e5\u200e, \u200e2013 \u200e9\u200e:\u200e26\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nI don't have an example offhand (that I can share) but it involves implementing the appropriate extensibility interfaces that IdentityServer has and call into MR for the implementation.\n\u2014\nReply to this email directly or view it on GitHub.\n. I am in the process of doing this for our integration. We SSL offload everything and our engineers requested it. \nWe are using OAuth2 flows only. We don't have a need for WS-Trust yet. \n. Brock,\nThat sounds great to me. Please let me know when it\u2019s done and I\u2019ll get it tested in our load balance system right away.\nJohn Phillips\nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eThursday\u200e, \u200eAugust\u200e \u200e15\u200e, \u200e2013 \u200e10\u200e:\u200e36\u200e \u200ePM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nOk, here's what's going to happen with this feature:\nTwo new settings will be added to the global configuration: 1) Disable SSL, and 2) Public Host Name. \nDisable SSL (if enabled) will not reject requests into the web server if they are not using SSL. This is based upon the premise that there is some SSL device in front of the web server, so any URLs returned from the web server (federation metadata, login redirects, etc.) will still point to HTTPS. Also, any cookies that are issued will still keep the secure flag (again, assuming the SSL device will pass it thru to the client browser/user agent).\nPublic Host Name (if set) is used instead of the web server host name when any of those URLs above are returned from the web server. This is useful when the load balancer/SSL device is handling some public host name but the web server that IdentityServer is hosted on is some other internal host name. In other words this tells IdentityServer what its public host name should be.\nIn general this approach tries to make the fewest assumptions about the load balancer or SSL device being used. Really, the only assumption is that the load balancer/SSL device only does the SSL bits and then passes everything else back and forth to and from the web server. \nFeedback appreciated (the sooner the better, since I only have time to work on this in the next couple of days).\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you. I'll get this merged this weekend and tested. \nFyi. We are attending vslive @ Redmond next week. If there is a delay that is why. \nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eFriday\u200e, \u200eAugust\u200e \u200e16\u200e, \u200e2013 \u200e2\u200e:\u200e59\u200e \u200ePM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nOk, here's a branch with the changes: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/nossl\nI've tested everything except WS-Trust.I'm pretty certain WS-Trust won't work without more effort. I saved the worst for last :(\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks. I\u2019ll merge that tomorrow night.\nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eSaturday\u200e, \u200eAugust\u200e \u200e17\u200e, \u200e2013 \u200e6\u200e:\u200e37\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nOk, I updated the branch with the DB migrations (if you needed them).\n\u2014\nReply to this email directly or view it on GitHub.\n. I\u2019ll have this complete Thursday.\nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eMonday\u200e, \u200eAugust\u200e \u200e26\u200e, \u200e2013 \u200e5\u200e:\u200e41\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nDid you find any time to test?\n\u2014\nReply to this email directly or view it on GitHub.\n. I had trouble merging in and had to delay my findings. I'll update you Tuesday. \nSent from Windows Mail\nFrom: Brock Allen\nSent: \u200eAugust\u200e \u200e30\u200e, \u200e2013 \u200e4\u200e:\u200e58\u200e \u200ePM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCC: epicthreedev\nSubject: Re: [Thinktecture.IdentityServer.v2] Make IdSrv run over plain text HTTP (for SSL offloading scenarios) (#219)\nI merged the nossl feature branch into master this morning.\n\u2014\nReply to this email directly or view it on GitHub.\n. You will still have to proxy it through an SSL off loader. The changes made make assumptions that you\u2019ve requested the page using SSL and that a middle layer has abstracted the cert. \nI didn\u2019t get to test this with no SSL. I\u2019m using a piece of hardware in the middle to handle SSL off loading\nSent from Windows Mail\nFrom: sam-leung\nSent: \u200eTuesday\u200e, \u200eSeptember\u200e \u200e3\u200e, \u200e2013 \u200e12\u200e:\u200e35\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nthis a great feature to have because i'm having a lot of trouble trying to connect to the server oauth2 endpoints from a client app. just trying to run the identityserver locally and setting up SSL and having a client app hit the endpoint has been very frustrating. still cannot get it to work.\n\u2014\nReply to this email directly or view it on GitHub.\n. The server doesn\u2019t need to be on SSL. You will set it up with out SSL (to my understanding) but the calls assume certain SSL items to be set. Please read Brock Allen\u2019s responses on the subject where this originated at.\nSent from Windows Mail\nFrom: sam-leung\nSent: \u200eTuesday\u200e, \u200eSeptember\u200e \u200e3\u200e, \u200e2013 \u200e9\u200e:\u200e47\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\noh i see. because i was hoping where since ssl is disabled, that calls to the endpoints do not require the calling client app to use https. and the identityserver is not hosted on SSL. in other words, client and server app need not be on ssl .\n\u2014\nReply to this email directly or view it on GitHub.\n. We are testing this weekend. I will let you know what it takes and how it goes. \nSent from Windows Mail\nFrom: sam-leung\nSent: \u200eFriday\u200e, \u200eSeptember\u200e \u200e6\u200e, \u200e2013 \u200e1\u200e:\u200e44\u200e \u200ePM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\ni didn't try out the code that was merged in. I just disabled manually based on the instructions at the top of this post.\n\u2014\nReply to this email directly or view it on GitHub.\n. I realize that I didn't add what I was talking about. Sorry about that.\nOn my setup of Identity Server when I navigate to /Admin/OAuthRefreshToken and show tokens that have been generated. It displays the wrong timestamp when the token was issued. \nI figure it has something to do with UTC and a configuration value somewhere. I haven't looked at this yet but wanted to see what you thought. \nHope the above helps better than my first note. \n. It doesn't look like the issue is with Identity Server its self. The value comes from AuthenticationInstantClaim.Now in AuthenticationHelper.CreatePrincipal(string username, string authenticationMethod, IEnumerable additionalClaims = null)\nAuthenticationInstantClaim comes from IdentityModel.\nI'll look at that code later to figure out the time issue. Just figured that gives us a bit more information.\n. This is not a bug. It works by design.\nIt's using DateTime.UtcNow. Displaying the Utc Timestamp. In order to see this localized to timezone would be pretty simple.\nYou can close it if you don't want this feature. I can add it pretty fast if you want.\nDesign\nAdd a Drop Down with TimeZones to the page\nSend that with the form\nOn creation of .ToDomainObject() set Kind on that DateTime object to the passed in timezone or\nWhen displaying change the Kind and then TimeStamp.ToLocalTime() to display the time according to the selected timezone value passed in.\nAlternate Design\nWhen creating an account set timezone in profile\nuse timezone when displaying timestamp by changing DateTime.Kind to the new timezone setting\nthen use .ToLocalTime() when displaying the value.\n. The first option is less obtrusive to the user and can be done on demand without affecting the system or requiring database interaction. \nThe second gives a one time setting and allows you to change it.\nA third option is to use some ip geolocation api to get the timezone and set it on display but that is overkill. \n. The OAuthTokenRefresh page. \nThe drop down would be there to allow admins to see when tokens should time out for a specific person according to the admins time zone. It\u2019s something our NOC wants. I can add it in on our fork. If you want it upstream, I can send a pull request with it.\nSent from Windows Mail\nFrom: Dominick Baier\nSent: \u200eSunday\u200e, \u200eJune\u200e \u200e30\u200e, \u200e2013 \u200e12\u200e:\u200e51\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\n\"Add a Drop Down with TimeZones to the page\"\nWhich page are you talking about?\n\u2014\nReply to this email directly or view it on GitHub.\n. This scenario is to support instant lock out of a user for all relying parties associated under a trusted scope.\n. I updated our tokens to have a shorter life span. This at least enables us to have a smaller window for users who are deactivated to still access relying parties before needing a token to be refreshed or a new one to be created. Then we would just remove them from a role to remove their rights. \nThis is also a good feature for an Authorization Server not an Authentication Server. \n. Thanks for the quick response. I\u2019ll post our results to this issue. \nSent from Windows Mail\nFrom: Dominick Baier\nSent: \u200eWednesday\u200e, \u200eJuly\u200e \u200e17\u200e, \u200e2013 \u200e9\u200e:\u200e53\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nNo - didn't do any recent tests - but looking forward to your results.\n\u2014\nReply to this email directly or view it on GitHub.\n. using oauth2 token endpoint currently takes 750ms-1.5seconds per request. We are in the process of defining load tests for that particular request cycle. I'll let you know my findings.\nBoth of the above seem kind of high but I'm not sure yet. We haven't enabled token encryption either. We will be enabling that after load tests to see the difference.\nThat's on a single machine with a quad core processor at 3.4ghz. \n. Oh, That's great to know. \nSent from Windows Mail\nFrom: Dominick Baier\nSent: \u200eWednesday\u200e, \u200eJuly\u200e \u200e31\u200e, \u200e2013 \u200e10\u200e:\u200e49\u200e \u200ePM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\nJWT does not support encryption (at least not the MS implementation).\nAttaching a performance profiler would actually give you better insights.\n\u2014\nReply to this email directly or view it on GitHub.\n. We found that the call to Rfc2898 is a designed bottle neck. We should have final load results this week.\nSent from Windows Mail\nFrom: Dominick Baier\nSent: \u200eMonday\u200e, \u200eAugust\u200e \u200e5\u200e, \u200e2013 \u200e9\u200e:\u200e36\u200e \u200eAM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: epicthreedev\n@epicthreedev Let us know when you have more data.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "gistvan": "Hello,\nI have set up Federation between two instances of IdS and use HRD too. I have issues with Federated Sign Out, in both Hrd and WsFederation controllers the SignOutCleanupRequestMessage message types are not handled. The image source in the Federated Sign Out page is the following : https://localhost/FirstIdentityServer/issue/wsfed?wa=wsignoutcleanup1.0 (or https://localhost/FirstIdentityServer/issue/hrd?wa=wsignoutcleanup1.0). \nIs this a bug or I have messed up some configurations?\n. Hello,\nI have exactly the same problem. I'm wondering if all this isn't happening because of the following method :     \nprivate ActionResult RedirectToIdentityProvider(IdentityProvider identityProvider, SignInRequestMessage request)\n        {\n            var message = new SignInRequestMessage(new Uri(identityProvider.WSFederationEndpoint), ConfigurationRepository.Global.IssuerUri);\n            SetContextCookie(request.Context, request.Realm, identityProvider.WSFederationEndpoint);\nreturn new RedirectResult(message.WriteQueryString());\n    }\nBy commenting out the first line and putting this line instead everything works for me .\nvar message = new SignInRequestMessage(new Uri(identityProvider.WSFederationEndpoint), request.Realm);\nNote : I changed the RP Redirect URL back to the the same value as the realm (not the WS-Fed endpoint), I received an exception because of this after changing the code.\nPlease advise if these changes are OK and no other functionality is affected.\n. Thank you for the quick answer, I will come back with a response in a few days, I have also some other issues which I need to figure out. I still have to document myself to understand the whole process.\n. Hello, after understanding the process I have managed to set up federation between two identity servers on localhost. \nHere are the right configurations :\n1. First IdS (Federated Gateway) - https://localhost/FirstIdentityServer/\n   -> General Configuration\n   Site ID : https://localhost/FirstIdentityServer/\n   -> Identity Provider\nIdentifier : SecondIdentityServer\n   Enabled : true\n   Include in Home Realm Discovery : true\n   Type : WSStar\n   WS-Federation Endpoint : https://localhost/SecondIdentityServer/issue/wsfed/\n   Issuer Thumbprint : Thumbrint for Certificate used by Second IdS\n-> Relying Party\n    Enabled : true\n    DisplayName : First Relying Party\n    Realm/Scope Name : http://localhost:port/FirstRP/\n    Redirect URL : http://localhost:port/FirstRP/\n1. Second IdS - https://localhost/SecondIdentityServer\n-> Relying Party\n    Enabled : true\n    DisplayName : First IdS (Federated Gateway)\n    Realm/Scope Name : https://localhost/FirstIdentityServer/\n    Redirect URL : https://localhost/FirstIdentityServer/issue/hrd\n1. Web Config - http://localhost:port/FirstRP/\n requireHttps=\"true\" />\nThe clue was to understand the path of the token : Web App -> First Ids (Fed Gateway) -> Second Ids -> First IdS (Fed Gateway) -> Web App.\nNow I have to do claims transformations when the token is passed back from Second IdS -> First IdS (Fed Gateway), Dominick can you please provide a hint where would be the best place to do this? In you first demo \"Video: Federation and Home Realm Discovery\" you mention about a next demo where you demonstrate this,have you managed to create this demo?\nThank you for considering my request.\n. Thank you Dominick\n. Hello,\nI have tried out the solution that you suggested, but I'm not sure if this is what I really need. I have received the token but I don't know what to do with it :), I think the OAuth2 resource owner flow is not exactly what I need. \nI have a web application which is configured as a relying party for Thinktecture. Most of the users are logging in through Thinktectures login page. But I have some 3rd party application who doesn't know anything about my web apps structure,and they should be able to get logged in by doing a post to my application (to a URL which does not need authentication) with credentials.\nMy question is : \nWhen my app has the credentials ,how can I use those credentials to get logged in into Thinktecture (I want to have the same effect as doing a POST to the AccountController/SignIn action when the user puts in these credentials manually in the browser)?\nThank you! \n. Thank you.\n. Thank you.\n. Hi Dominick,\nUnfortunately there were some changes on the project that I'm working on, so right now all the IdP stuff is put on hold.\n. ",
    "choccybutton": "Many thanks :)\n. Sorry, only just spotted the reply. I was using the HRD endpoint. The RSTS doesn't seem to be passing the return address to the second identity server instance that is playing the IdP role\n. ",
    "mscherpenisse": "This will be handy, when building extensions/ implement other kinds of repository (i.e. my contrib project for v1)\nCheers,\nMarcel\n. ",
    "gmetzker": "I just posted a Pull request so I'll close this one.\n. I'm not sure if you have a better way of doing this.  Basically I wanted to inherit from AccountController and provide some very basic enhancements.  If I can override the .SignIn methods it would make this easy.  So I wanted to make them virtual.\n. ",
    "rmarinho": "Would it make sense to implementthis feature? would it be easy? :)\nI m trying to keep way of storing passwords of the users.\nI think i can make this in my realm..like handlig new users and all but then if i don't have a way to look up the tokens for that users there's no way to revoke, see,what tokens were issued.\nany recomendation?\n. makes sense.\n. Ok found the issue, need to create the Symmetric Signing Key for the realm party..\n. I don't agrree, all other apis like google/ facebook and twitter, support non https connections.. so i really think it makes sense, the only place that it doesn't make sense is if you are putting credeentials like in the authorize or sending the credentials by httppost, but when have using the web flow, where hte user logins via web, and you give back a code to trade for a access token, the token endpoint could be http only... \n. hum, this sounds intersting.. any updates on this Ruud ? \n. Awesome Rammeri it really was what i wslooking for  a while back id does make a lot of sense...\nDo  you want to share code and get a beta tester for your branch ? :)\n. i think i have a similiar issue with this one, but instead of using federation on the mvc web app. i use oauththat redirects the user to the identity server for login, and this way i can get back a code, and then  trade that for a acces token in jwt format from identity server ready to send to the api...\nbut then the Api authenticaion isn't  working... i have this in the configuration:\n#region IdentityServer JWT\n        authentication.AddJsonWebToken(\n            Constants.IdSrv.IssuerUri,\n            Constants.Audience,\n            Constants.IdSrv.SigningKey\n            );\n        #endregion\n.  you are totally right, but for a dev enviroment well i need to test this and imagine you are running localhost and runnign some debugging in identity server, even if u get ssl to work, it won't work on a dev enviriment since windows phone only acept certificates from that root authorities and no one will give u one for localhost.. other is that wp doesn't allo client certificates either..so we are kind of stuck...\nOne thing i like in a framework, is that it get's out of my way so i can focus on writing the code i want .. bussiness related...  and i understadnd that focus in getting https is really the key for identity .. but then again if u don't have devs trying this out because they get stuck right in https workflow.. maybe a simple switch for turning https off for development proposes would be ok.\n. ",
    "dapug": "I am getting plagued with this regardless of what I set up on the server or client.  Any tips?\nAll I am trying to do is simply get the \"OAuth2 Resource Owner Password Flow\" sample working from IdentityModel.45 using v2.1 of the server. \n. oops.  please ignore.  I had Javascript disabled.  My bad!\n. UPDATE:  It turns out that simply adding a MachineKey in web.config of IdentityServer, and a matching one in your Membership Provider web app of choice will result in password encryption/decryption that is in sync!\nExample: (place it inside <system.web>)\n<system.web>\n    <machineKey validationKey=\"BBEA36A1048CAE6414268BDD87B42E6E3E21A21C710C9DD7EF6F333B7EF83504E4837D202E3FB70C0BC02A4E9A332AC3AECA496E639071352123F42A74CD2550\" decryptionKey=\"AB50062FEE97A89DBD3CD74EA6819BEF237C129F05A06661\" validation=\"SHA1\" decryption=\"AES\" />\n  </system.web>\nYou can generate a machine key using a nifty tool here\nI tested this by creating and signing in users from both apps (IdSrv and ASP.NET Membership enabled web app) both pointing to the same Membership DB (IdentityServerUsers), and using the same MachineKey as mentioned.\nVery cool!\nSo now I am contemplating proper architecture...\n-  identity.MyCo.com (Thicktexture.IdentityServer for authentication and claims only)\n-  identity.MyCo.com/Account  (Virtual Dir ASP.NET app strictly for user self-service management: register, edit profile, change password, etc.)\n-  api.MyCo.com   (Resource server - Web API web services)\n-  MyCo.com   (Relying Party - my main web client / company site)\nThe idea here is that api.MyCo.com and MyCo.com would of course not have access to the user DB, but claims/tokens only.  When the user signs in, they are redirected to the Identity server.  When the user click \"edit profile\" they are taken OUT of the client app, and return when finished.  Only the two \"identity\" subdomain apps have access to the DB.\nAnyone else have experience here?  I've never had to set all this up before. I guess my biggest concern is the need for the /Account web app that has access to the Membership DB, despite the fact that it's sole purpose is limited to account management.\nbrock, I think your MembershipReboot project is awesome, btw.\n. Yes, tracing is enabled in the config, and I am getting all sorts of traces as expected when the server is actively used.  No trace when this call is made as described after some length of time idle though.  :(\n. Nothing applicable that I see in the Application log in EventViewer.\n. There are two samples I found worked well for directly authenticating without the browser.  They are in the Thinktecture.IdentityModel.45 project.\nSee MVC and WCF sample here:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples\nAnd also in the above link, you will see the Web API Security sample, where you want to look at the code for OAuth2ResourceOwnerPasswordFlow specifically.\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security/Clients\nNote that neither WCF nor Web API is a requirement.  If you look at the client code to see how a token is acquired, that is all you need!  It's super easy.  Thinktecture has done  great job here.\n. Makes sense to me, thank you.  I've been reading up on WIF, and this helps put things into perspective and conclusion for me.\nThanks for the JWT tool, cool.\nAs for the question about not wanting ALL the claims in the token, I think there is more than one option.  First, if I have control over the IdSvr, I dont have to load a lot of claims in there, thus keeping the data footprint low and it becomes a non-issue I think.  But also, you suggested session tokens, or \"a back channel to a service that can retrieve claims\".  I'd have to do some more research and prototyping to understand how that would work.\nMore reading on session tokens for anyone following this thread:\nhttp://leastprivilege.com/2012/06/19/session-token-support-for-asp-net-web-api/\nThanks.\n. I am using IdSvr from my web app to get a JWT via OAuth2. The reason is, I cannot use ws-trust since my website needs access to the JWT to apply to the header when calling subsequent other independent services (Web API) that are also RP's of the system.\nAnyway, as long as I can do this with AS, I'm good.  In fact, I am hoping that what I am doing is even more proper with AS.\n. Correct, for Membership (ProviderDB) I can change the name in connectionstrings.config as long as I update web.config to match.\nHowever, the real issue here is, even if I put these values (IdentityServerConfiguration) in ServiceConfiguration.Cloud.cscfg, Thinktecture is unaware to look or pull from there, and are ignored.\n. Yes, lets close this.\nThe insight is helpful, just to know its not supported or planned. It is non-trivial to implement (not just a simple config thing), but doable.  Might I suggest that AuthorizationServer be built with Azure deployment in mind?\nThanks!\n. A fair question.  It boils down to TCO. My organization does not want to IT manage a VM. Cloud service is a layer on top of the VM that allows the developers not to \"care\" about the VM... let MS care about that.  We just care about the apps we deploy.\n. ",
    "andrewbadera": "OAuth2 dictates TLS ergo SSL.\n\u221e Andy Badera\n\u221e This email is: [ ] bloggable [x] ask first [ ] private\n\u221e Google me: http://www.google.com/search?q=andrew%20badera\nOn Wed, Nov 7, 2012 at 8:36 AM, Rui Marinho notifications@github.comwrote:\n\nI don't agrree, all other apis like google/ facebook and twitter, support\nnon https connections.. so i really think it makes sense, the only place\nthat it doesn't make sense is if you are putting credeentials like in the\nauthorize or sending the credentials by httppost, but when have using the\nweb flow, where hte user logins via web, and you give back a code to trade\nfor a access token, the token endpoint could be http only...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/37#issuecomment-10150097.\n. \n",
    "mpapas": "Ugh.  Adding https://{{issuer}}/adfs/ls/  as the redirect URL fixed this.  Wow, that was easy.\nThank you\n. ",
    "Supahoopsa": "It worked before I made the \u201cidentity and access\u201d update and now I have that error.\nCan you give me any ideas as to where to start looking, I have no idea \u2639\nRichard.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: 08 November 2012 14:10\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Richard Cairns\nSubject: Re: [Thinktecture.IdentityServer.v2] Access Denied in my Web Application (#44)\nHm - No. That could have many reasons...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/44#issuecomment-10188982.\nThis email and any attachment(s) may contain information\nwhich is personal or otherwise confidential and/or privileged.\nUnauthorised access, use, distribution, reproduction or \ndisclosure is prohibited. If you are not the intended recipient\nand/or received this message in error please tell us by reply\n(or telephone the sender) and delete all copies from your\nsystem. Any privilege, confidentiality or copyright that\nattaches to this email is not waived, lost or destroyed if you\nhave received this email in error.\nWe do not warrant that this email and any attachment(s) is\nfree from viruses or defects and you should scan this email\nfor viruses prior to opening or saving any attachments. The\nHogg Robinson Group accepts no liability for any damage\ncaused by any virus transmitted by this email.\nStatements or opinions expressed in this email may be\npersonal to the sender and do not necessarily represent the\nviews of Hogg Robinson Plc or any other member of the Hogg\nRobinson Group. Unless expressly stated otherwise, no \nmember of the Hogg Robinson Group is bound by any \ncontract or obligation purported to be created by this email or\nits attachment(s).\nHRG and HRG worldwide network are all Hogg Robinson \nGroup trading names and trade marks.\nThis email and any attachment(s) is \u00a9 Hogg Robinson Plc\n(trading as HRG - Incorporated and Registered in England \nand Wales, Registered Office: Global House, Victoria Street, \nBasingstoke, Hampshire RG21 3BT, UK. Company No. \n2107443. VAT No. GB413640679)\n. ",
    "wvdd007": "Ok, that makes a lot of sense.  Thanks for the quick answer !\n. ",
    "canderson2000": "Here are my current settings.  Hopefully I give you all the relevant ones. (fyi these instances are all running on my local machine along with my client app which is at http://localhost:7728/):\nIdP - Relying Party settings:\n- Enabled: true\n- Display Name: MVC test app\n- Realm/Scope Name: http://localhost:7728/\n- Redirect URL: http://localhost:7728/\nFed Gateway - Relying Party Settings:\n- Enabled: true\n- Display Name: MVC test app\n- Realm/Scope Name: http://localhost:7728/\n- Redirect URL: http://localhost:7728/\nFed Gateway - Identity Provider settings:\n- Identifier: IdSrv_IP1\n- Display Name: IdSrv_IP1\n- Enabled: true\n- Include in Home Realm Discovery: true\n- Type: WSStar\n- WS-Federation Endpoint: https://localhost/IdSrv_IP1/issue/wsfed\nCurrently my Fed Gateway's Site ID under the General Configuration is set to http://www.google.com which I did just for grins while trying to figure out the correct settings.  And after I submit my username and password to the IdP it eventually tries to redirect to google.com\nNot sure if it is useful but the url in the browser on the IdP before I submit my username and password is as follows:\nhttps://localhost/IdSrv_IP1/account/signin?ReturnUrl=%2fIdSrv_IP1%2fissue%2fwsfed%3fwa%3dwsignin1.0%26wtrealm%3dhttp%253a%252f%252fwww.google.com%252f&wa=wsignin1.0&wtrealm=http%3a%2f%2fwww.google.com%2f\n. Ok I've changed my IdP RP return url to point to the WS-Fed endpoint of the Fed Gateway.  Now its settings look like the following:\nIdP - Relying Party settings:\nEnabled: true\nDisplay Name: Fed Gateway\nRealm/Scope Name: http://localhost:7728/\nRedirect URL: https://localhost/WebSite/issue/wsfed\nLooks like my Fed Gateway settings already matched what you stated.\nIt still seems to redirect to the value stored in the Site ID setting under the General Configuration of the Fed Gateway.  Should there ever be a reason the General Config Site ID setting is used to redirect?\nCould this be related to how I set my clients reference to the Fed Gateway?  I did that by using the Identity and Access wizard in VS 2012 and initially setting the Path to the STS metadata doc setting to the Fed Gateways metadata doc (which in my case was https://localhost/website/FederationMetadata/2007-06/FederationMetadata.xml).  Then I tweaked the clients web.config settings to point to https://localhost/WebSite/issue/hrd, the Home Realm Discovery Endpoint instead of https://localhost/WebSite/issue/wsfed which was the generated value for the wsfed endpoint.\n. I too really appreciate your quick responses.  \nAt this point I now have my redirect url on the IdP's Relying Party setting set to the /issue/hrd endpoint.  This is the return URL you are talking about, correct?\nMy other settings are the same as I stated before.  \nWith these settings in place, my browser still gets redirected to the Site ID (IssuerUri) of the gateway after I submit my credentials.  Not sure if it should affect anything but I am doing this all locally.  So my client, Fed Gateway and IdPs are all local. \nThanks again for your help and patience.\n. I'll try and get this up on a server or two in the meantime and see if that resolves it.  Thanks.\n. I am still seeing this issue when I moved the Fed Gateway and IdP to a seperate server.  I have redirect url's set on relying party setting.  I'll have to continue to do more research.\n. Thanks for posting your configurations @gistvan.  Looks like my issue was my IdPs Relying Party Realm/scope name value.  I originally had it set to the client apps realm and after looking at what you had, I realized it needed to be set to the  Fed Gateway's value.  It appears to work after doing that.  Thanks for your help guys.\n. ",
    "ryanhelms": "I am also having the same problem, in regards to:\n\"A claim of type 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier' or 'http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider'\" ... I am beating my head . Any advice. \nThanks for all of your great work and tutorials. Once I get this stuff down, it will GREATLY help me on many projects where we have made custom solutions for this.\n. I'm sorry, I was being thick-headed. It was happening on my application and yes you were right , it was completely clear. 2 full-time jobs has my brain fizzling at some points in the day. Thanks for the kickstart, but this will not be the last you've heard from me! ;)\n. One other note, I did subscribe to PluralSight.com simply to have access to your great set of videos. So if there is something in there that I missed, feel free to point me there, I just want to make sure I am doing this the best way possible.\n. Ok, I will take a look.\n. ",
    "sankarapandian18": "hi, i am also having same error. in orchard application. \npublic static MvcHtmlString AntiForgeryTokenOrchard(this HtmlHelper htmlHelper) {\ntry {\n            return htmlHelper.AntiForgeryToken(); // error\nA claim of type 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier' or \n'http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider' was not present on the provided ClaimsIdentity. To enable anti-forgery token \nsupport with claims-based authentication, please verify that the configured claims provider is providing both of these claims on the ClaimsIdentity instances it \ngenerates. If the configured claims provider instead uses a different claim type as a unique identifier, it can be configured by setting the static property \nAntiForgeryConfig.UniqueClaimTypeIdentifier.\nplease advice...\n. ",
    "synesthesia": "Is this only an Azure Web Sites issue, or Azure Web Roles too? I only ask because I came here via http://www.devproconnections.com/article/windows-azure-platform2/azure-identity-federation-142581 looking for the Azure solution :-(\nWill dig back in the old code :-)\n. ",
    "cooplarsh": "Ok, once I went back, re-installed everything from scratch, and made sure everything was properly configured then it worked as expected in both release and debug modes.  After playing around with it some more I believe my problems were due to the fact that I had not properly configured OAuth properly.  Sorry for the unnecessary distraction.\n. ",
    "drewid": "I know you have mentioned elsewhere that you were not setting this up to be user management... but it would be a really, really useful additional capability. Useful X infinity.\n. I also have the same/similar issue that @rageshkrishna has regarding multi-tenancy - how to properly authenticate not just the application but the tenant of the application.\n. That setting was indeed set to read only.  BUT it didn't change the error :(.  In fact I get the error no matter if I use https:// or http://\n. Yes I have created it. - is it better to create a completely different site outside of the default web site?\n. I set all the settings to read/write - gave me a much more informative error:\nHTTP Error 500.21 - Internal Server Error\nHandler \"ExtensionlessUrlHandler-Integrated-4.0\" has a bad module \"ManagedPipelineHandler\" in its module list\nMost likely causes:\nManaged handler is used; however, ASP.NET is not installed or is not installed completely.\nThere is a typographical error in the configuration for the handler module list.\nDuring application initialization, either the application initialization feature has set skipManagedModules to true, or a rewrite rule is setting a URL that maps to a managed handler and is also setting SKIP_MANAGED_MODULES=1.\nThings you can try:\nInstall ASP.NET if you are using managed handler.\nEnsure that the handler module's name is specified correctly. Module names are case-sensitive and use the format modules=\"StaticFileModule,DefaultDocumentModule,DirectoryListingModule\".\nEnsure that any application initialization rewrite rules set SKIP_MANAGED_MODULE=0 when setting a URL that maps to a managed handler (such as .aspx, for example.)\nAs an alternative, ensure that application initialization rewrite rules map the request to an unmanaged handler (for example, to an .htm file, which is mapped to the StaticFileHandler.)\nDetailed Error Information:\nModule     IIS Web Core\nNotification       ExecuteRequestHandler\nHandler    ExtensionlessUrlHandler-Integrated-4.0\nError Code     0x8007000d\nRequested URL      https://auth.dev:443/\nPhysical Path      C:\\dev\\auth\nLogon Method       Anonymous\nLogon User     Anonymous\n. WOOT!  Success.  One useful thing to know is that even if IIS is enabled on a Windows 2012 server machine, Application Development / Asp.Net still needs to be enabled in Server Manager.\nWeb Server (IIS)\n  Web Server\n    Application Development\n      ASP.net 4.5\n      ISAPI Extension\n      ISAPI Filters\n      .Net Extensibility 4.5\n. ",
    "mpseidel": "Thank you! I got it working with the default MVC4-Template.\nTo get it working however I had to change how the server handles the redirect-URI in OAuth2AuthorizeController as DotNetOpenAuth doesn't use a fixed redirect-URI.\nMaybe you could add a feature to choose between the current behavior (use the redirect-URI as configured for the client) and an alternative implementation where the redirect-URI passed in to the controller is used and only the base-URI ist beeing validated aggainst?\n. Yeah, It definetly does not feel right to just remove the validation here.\nOne thing that I am confused about ist that the injection of the sid Parameter ist actually done for security reasons in DotNetOpenAuth in the OpenAuthSecurityManager class:\n            // Guard against XSRF attack by injecting session id into the redirect url and response cookie.\n            // Upon returning from the external provider, we'll compare the session id value in the query \n            // string and the cookie. If they don't match, we'll reject the request.\nWhat do you think about this?\nI definetly have to do some more reading upon this. Thanks for the Links!\n. Sure. When requesting auth with the DNOA OpenAuthClient2 class DNOA appends the sid and providername query string params to the return-url.\nAfter being redirected DNOA verifies the request including the sid parameter.\nBoth happens in the OpenAuthSecurityManager class in DNOA.\nhttps://github.com/DotNetOpenAuth/DotNetOpenAuth/blob/master/src/DotNetOpenAuth.AspNet/OpenAuthSecurityManager.cs\nDo you need more details?\n. Thanks for the backgroud info. For now I guess I will replace the exact match check with a regex-check in my fork to be able to make the mvc4 template integrate nicely with identitiy server and still keep it as secure as possible.\n. Intersting :) Did you mean this ?\nhttp://www.nirgoldshlager.com/2013/02/how-i-hacked-facebook-oauth-to-get-full.html?m=1\nDisturbing how little FB seems to be investing on really hardening their platform..\nI too hope Microsoft does something about the dynamic rediret-uri.\nMy plan with using regex in the meantime was to make the configurable redirect-uri be interpreted as a regex so I could really lock down the variability of the dynamic redirect like\n^mydomain.com/redirect?providername=fixedprovidername&sid=(mostrestrictiveRegexForSidHere)$\n(I havent checked but i guess the geberated sid-parameter is a guid or at least based on one)\nWouldnt that be pretty safe?\nThanks for your time\n. I actually created a very small separate webapi-project that connects to the user-database. This way you can keep identityserver itself be about identities/authentication and not about registration, password-reset, email verification or profile management. Of course its a bit more work to build it separately but it keeps the project more focused and as dominic said with a smaller attack surface.\nHaving said that I agree that the project could be more modular and could itself provide some basic apis for user creation or querying.\n. At the moment there is not much to share as I just started putting it together a few days ago. I can share the few lines of code in a gist though when I get arround to it. \nI think a contrib project is a good idea and I am definetly willing to contribute but I am pretty new to open source, git and github still and would recommend somebody with more experience to take the lead on this.\n. in my opinion\na) waters down IdSrv too much and could open the door for more and more features disctracting the project from its core purpose\nb) does work without changes to IdSrv, but is not great either as a user management module would take a hard dependency on the implementation of IdSrvs user store. I think this option would be a matter of if and how far IdSrv-authors would want to \"support\" this in the long run \nc) could create more possiblities of integration with other systems (like self-service registration, account&profile mgmt) and could be reduced to minimum of necessary operations like getuserbyemail/username, createuser, changepassword, deleteuser. \n@Ruudvdl wouldn't it be possible to build your bits around such an identity-webapi?\n. ",
    "AArnott": "DotNetOpenAuth isn't adding query parameters. That would be DotNetOpenAuth.AspNet, which is a Microsoft library (that DNOA builds, but is still separately distributed). This issue has also come up with Google, whose OAuth 2 auth server also has this same exact match restriction. We have issue 248 tracking this.\nWhat this means for you is you can use DotNetOpenAuth's own OAuthClient class and the redirect_uri will be exactly what you tell it to be.\nAside: IMO, exact matches seems overkill. Additional parameters in the query string seem highly unlikely to ever cause a security problem. It would take a very poor client indeed for that to be exploitable, IMO. In the Facebook exploit, the redirect_uri was allowed to be changed in much more important ways. \n. ",
    "rageshkrishna": "I suppose that would work, but it feels like a lot of work. This would mean configuring a new realm whenever I provision a tenant, right? The thing is that everything else about the realm would be the same except the scope, so at some point this solution would be a nightmare to maintain (assuming hundreds of tenants). Just imagine if I need to change the shared signing key.\nWould it make sense to make the scope an array instead of a single value? What I've got in my mind is that if I could make this an array and have RPRepository.TryGet return the same RP, everything would \"just work\". I have no idea how this would affect other protocols, though.\n. Yes, code flow is something I'll miss. But for the moment, the only client is my own web application so I'm alright with the resource owner flow for now. I'm hoping that by the time I'll have third party integrations we will have worked out the code flow in IdSrv :)\nI'm not clear on your thoughts about having a shared signing key across tenants. Why would this be a bad idea, considering that ultimately it's the same resource server that's handling the request?\n. Hmm, the more that I think about it, the more complications I see. For example, I would now need a way to validate whether a given user has the right to ask for a specific scope (that is, I don't want customers of tenant A asking for and receiving a token with scope for tenant B).\nPerhaps it would be better to just leave the scope at \"https://api.myapp.com/api\" and then do the permissions checks in the API server itself.\nI think I'm just going in circles here because I'm completely new to OAuth. Is this really how things are supposed to work or do I just need to spend more time with the specs to understand things better?\n. ",
    "svolkov99": "This is constraint of the system isn't it? MSDN doesn't have info about it http://msdn.microsoft.com/en-US/library/system.security.claims.claim.properties.aspx\nP.S. Thank you for the fastest reply))) \n. ",
    "khaihon": "Hi there, I still ran into the HTTP Error 500.19 error even after setting feature delegation and registering IIS. I found out the problem is related to certain section in the Web.Server config were locked at the parent level. This Microsoft IIS article has more information. http://www.iis.net/learn/get-started/planning-for-security/how-to-use-locking-in-iis-configuration\nOnce I unlocked the handlers and modules section under system.webserver either under the root web.config or application.config, the server loaded!\n. ",
    "persalmi": "Ok, that solved the problem! The wstrust part was missing from the endpoint.\nIt says https://localhost/sts/issue/mixed/username in the xml metadata when accessing it with a browser and the Application Integration page in the Web UI looks like this, is there a bug as the wstrust part is not in the URLs?\nWS-Federation metadata \n https://localhost/sts/FederationMetadata/2007-06/FederationMetadata.xml \nWS-Federation \n https://localhost/sts/issue/wsfed \nWS-Federation HRD \n https://localhost/sts/issue/hrd \nWS-Trust metadata \n https://localhost/sts/issue/mex \nWS-Trust mixed mode security (user name) \n https://localhost/sts/issue/mixed/username \nWS-Trust mixed mode security (client certificate) \n https://localhost/sts/issue/mixed/certificate \nOAuth2 Authorize \n https://localhost/sts/issue/oauth2/authorize \nOAuth2 Callback \n https://localhost/sts/issue/oauth2/callback \nOAuth2 Token \n https://localhost/sts/issue/oauth2/token \nSimple HTTP \n https://localhost/sts/issue/simple \n. ",
    "lucasnichele": "thanks for the reply,\nI have the following endpoints\nApplication Integration\nWS-Federation metadata \nhttps://lucas-nb/idserver/FederationMetadata/2007-06/FederationMetadata.xml\nWS-Federation \nhttps://lucas-nb/idserver/issue/wsfed\nWS-Trust metadata \nhttps://lucas-nb/idserver/issue/mex\nWS-Trust mixed mode security (user name) \nhttps://lucas-nb/idserver/issue/mixed/username\nOAuth2 Authorize \nhttps://lucas-nb/idserver/issue/oauth2/authorize\nOAuth2 Callback \nhttps://lucas-nb/idserver/issue/oauth2/callback\nOAuth2 Token \nhttps://lucas-nb/idserver/issue/oauth2/token\n\nAnd i try using the OAuth class client:\nvar client = new OAuth2Client(\n                new Uri(\"https://lucas-nb/idserver/issue/oauth2/token\"),\n                \"lucas\",\n                \"ZF4IHbDWW8vpI2FOO0LKhZ3EGNV9ILgYRC9mPXGqD4k=\");\nvar response = client.RequestAccessTokenUserName(\"lucas.nichele\", \"teste@123\", \"http://test.com\");\nps: this symmetric key, is my Client Secret.\nI'm using SSL certificate, and when i call the OAuth Service, i have a exception 400, bad request\nDo you have any idea where I am going wrong?\nLucas\n. exactly like the example Blog. I have to use the endpoint /authorize or /token ??\n. Dominick,\nApparently, the WIF 4.5 does not support SWT. You wrote some class extension for this token type?\nSystem.IdentityModel.UnsupportedTokenTypeBadRequestException, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\nID2014: Requested TokenType 'http://schemas.xmlsoap.org/ws/2009/11/swt-token-profile-1.0' is not supported.\n. ",
    "shashiHUB": "Thank you very much for your reply. Please ignore above c# code I have mentioned. After reading your blogs I acquired more information.  Yes, I want to request SAML token (for sharepoint site) from identity server but in my mobile site I do not have access to password because user is logging in from STS site.  But I can access fedauth cookie in mobile site. \n1. Is it possible to extract security token from mobilesite-fedauth cookie and re-sending it to sharepoint-STS to request for sharepoint-fedauth cookie ?  this question will raise two sub question \na. Can I re-use same STS token for two different sites (same domain  *.sample.com but physically two different machines). \nb. Is fedauth cookie contains security authentication information or only a IClaimsPrincipal wrapper?  \nMy final goal is to programmatically get STS-security-token for sharepoint-site from within the mobile site(mobile site already authenticated from STS) without using the password.\nI really appreciate your help. \nUpdate : I tried one of  your sample but it throws an exception\nprivate static string GetSamlToken()\n        {\n            var factory = new WSTrustChannelFactory(\n                new UserNameWSTrustBinding(System.ServiceModel.SecurityMode.TransportWithMessageCredential),\n                \"https://sts/IdSvr/issue/wsfed\");\n            factory.TrustVersion = TrustVersion.WSTrust13;\n            factory.Credentials.UserName.UserName = \"tss\";\n            factory.Credentials.UserName.Password = \"tss\";\n            var rst = new RequestSecurityToken\n            {\n                RequestType = RequestTypes.Issue,\n                KeyType = KeyTypes.Bearer,\n                TokenType = TokenTypes.Saml11TokenProfile11,\n                AppliesTo = new EndpointReference(\"https://sharepoint.com\")\n            };\n            var token = factory.CreateChannel().Issue(rst) as GenericXmlSecurityToken;\n            return token.TokenXml.OuterXml;\n        }\nException: \"The content type text/html; charset=utf-8 of the response message does not match the content type of the \nbinding (application/soap+xml; charset=utf-8). If using a custom encoder, be sure that the IsContentTypeSupported \nmethod is implemented properly. The first 1024 bytes of the response were: '<!DOCTYPE html>\\n\\n\\n\n. Thank you. I tried before to match the end point on the server still same error. I am not able to fix the issue yet.\n. ",
    "Ruudvdl": "Hi shashiHUB,\nI have previously managed to connect to a sharepoint site reusing a token i used to login to a demo site. It a bit tricki to do since you can only configure sharepoint to trust 1 realm with a trusted audience. I managed to do this by making a broker site. this site extracts the bootstrap token and depending on the variable you pass on to it, it will redirect you to sharepoint or your site. in my example i used ACS but this is also possible with thinktecture identity server.\nhere is a post/discussion of mine while attempting this.\nhttp://stackoverflow.com/questions/12410381/cross-domain-single-sign-on-with-azure-acs-sharepoint-2010-mvc-site-and-webs\nif you have any questions don't hesitate to ask.\n. What you can do is configure your RP's to trust the tokens from all your STS's. Or you can do some sort of Identity Delegation: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/92\n. What I meant with \"configure your RP's to trust the tokens from all your STS's\" is what Dominick said:\n\" If that is not possible - you can make them trust several STSes\". \nYou have to:\nadd all issuers to the issuer name registry\naccept all combinations of audience URIs\nYou can do this in the web config of you RP.\n. I'm not exactly sure what your saying. but if you have configured your RP correctly, It will accept all tokens from all your  STS's. Meaning your token is valid for all your RP's. So if you login to RP1 with STS1, and you need to access a service on RP2, you can just send the token you got from STS1, to RP2. hopefully that clears things up.\n. No you cant have multiple realms in a token. But you can have your other RP accept tokens from another realm. \n. i'm not sure what your using for authentication i'm guessing probably WIF with perhaps thinktecture identitymodel. and if i'm correct all you have to do is add your realms to the audienceUris in the webconfig. and perhaps you will need to add all your STS's to your trusted issuers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHopefully this will speed things up for you! ;)\n. Will do ;)\n. @rmarinho Its going very well. I got it all working now. i have simplemembership implemented and DotNetOpenAuth. I have changed how HRD works a bit now. since I've added the external identity providers to the main log in page, making HRD pretty much useless (also haven't tested if it still works ;). in any case.. anybody that logs in with an external identity provider or with the thinktecture user log in gets registered, so all users become a thinktecture user, the external identity provider users claims no longer just get passed on.. I still need to do some cleanup code and test everything. if you want more info just let me know\n. sorry meant  @rmarinho .... autofill changed the name.. grrr ;). i'll see what i can do to bring this back to the community.\n. will be done shortly. ill have a fork ready in 1/2 weeks\n. @rmarinho took WAY longer ;) other projects ect! but here it is! \nhttps://github.com/MacawNL/Thinktecture.IdentityServer.v2\n. i have implemented simple membership and dotnetopenauth security. for some more advanced user management\nand external identity provider management for users. still need to do some code cleanup, but will share this in the near future\n. i'll see if i can write a blogpost for you tonight\n. me to, been sick all week so didn't get any time yet. hopefully i'll get to it tonight\n. yeah still haven't had time been busy busy at work/freetime hopefully soon!\n. Im thinking thatThinktecture Identity server might causes a bit of overhead in this situation. It might be easier to either use Azure ACS or OAuthWebSecurity to add external identity providers to your site. Its much easier to implement/configure.\n. I have a version that has a lot of this worked out, with use rmanagment, password reset, confirmation emails, and much more. in the coming 1/2 weeks I'll be fixing it up so its nice clean and reusable. If your interested when its done i'll let you know.\n. we will have to see, there are some core changes since i'm using simple membership with the new dotnetopenauth, and external identity providers no-longer just pass on claims, but they become a identity provider user. I still have some work to do to finish everything up. When its all done, we can see if I can make it more of a feature that you can turn on and off, I think it should be possible. On a second note! I have also build a feature that enables synchronization of users using the azure servicebus. this makes it possible to use external user management systems and have it sync with the identity provider.\n. yes at the moment i'm implementing this \"ServiceBus thing\" ;) by a client. they have a huge user database for there stores but a separate one for there online store. since they are stuck with the user management system for there stores, we can use this sync mechanism to create the same profile everywhere, and able to have it managed from both ends.\n. well I do agree that user management is not exactly a core feature of the identity server. But I do think its still a very important part. I personally see the Identity Server not just as a STS but exactly what the name says. And Identity server, Like windows has its Live accounts, and Google its Google accounts. Users are a big part of the identity server, and I think management can be a part of that. I like the idea of having it as a module that can be turned on and off. \nThe user management system I have made is very much integrated with simplemembersship / DotNetOpenAuth. I did this so i can reuse all that functionality, and not have to rebuild it all. \nI'm all for keeping the identity sever light and simple. And i think making this a module, will help with that. It already took me a whole lot of time getting this to work well with not having to build the all the functionality myself. If you want to rebuild it all, your gonna have a whole lot of work to do, not to mention reinventing some weels ;). And i'm not sure that's worth it. \nI am willing to rebuild what i have made as a module in Identity server, but then we do have to make some choices. And if we do choose to got with the module approach we might wanna have a little discussion on how to implement that.\nthis week i'll have a fork ready where you can see what I have done. And i'll appreciate any feedback.\n. I like A or C ;) but that cause what I Have, could be easily rebuild into that. \noption B, is a lot of work!\n. this is my IUserManagementRepository:\n```\npublic interface IUserManagementRepository\n{\n    void CreateUser(string userName, string password);\n    void DeleteUser(string userName);\n    IEnumerable GetUsers();\n    IEnumerable GetUsers(string filter);\nvoid SetRolesForUser(string userName, IEnumerable<string> roles);\n\nIEnumerable<string> GetRolesForUser(string userName);\nIEnumerable<string> GetRoles();\n\nvoid CreateRole(string roleName);\nvoid DeleteRole(string roleName);\nbool CreateOrUpdateOAuthAccount(string provider, string providerUserId, string userName);\nvoid DeleteOAuthAccount(string provider, string providerUserId);\nvoid SetUserDirty(string email);\n\nUserProfile GetByUsername(string username);\nUserProfile GetByExternalKey(string externalKey);\n\nvoid Update(Thinktecture.IdentityServer.Models.UserProfile model);\nIEnumerable<Models.UserProfile> VerifiedDirtyProfiles();\nThinktecture.IdentityServer.Models.UserProfile GetUserProfileByConfirmationId(string id, string user);\nThinktecture.IdentityServer.Models.UserProfile GetUserProfileByPasswordResetId(string id);\n\nbool ValidateTemporarilyValidGeneratedToken(string userName, string Token, EmailFunctionType type);\nbool ResetPassword(string token, string password);\nbool ValidateEmailChange(string token, string email);\nvoid RemoveTemporaryValidToken(string userName, string token);\nbool CheckUserForValidatedTokenOrValidateToken(string email, string token, EmailFunctionType type);\n\nvoid SendConfirmationMail(string email, string token);\nvoid SendPasswordResetMail(string email);\nvoid SendEmailChangeRequestEmail(string oldEmail, string newEmail);\nvoid SendEmailChangeConfirmationMail(string newEmail, string oldEmail);\n\nstring GetNewEmailFromUser(string email);\nbool ChangePassword(string email, string currentPassword, string newPassword);\n\n}\n```\nthis should give some idea whatIi have implemented\n. this is user self management. all these functions a user can initiate him/her self. I put it in the user management Repository since it is user management.\n. I'll see what i can do, i'm almost done opensourcing my version. we can see what we can take form that and reuse it in here.\n. https://github.com/MacawNL/Thinktecture.IdentityServer.v2\nthis is what I have made (with lots of extra's) might help with implementing an API \nI would like to add that everything is not as cleanly coded as I would of liked. but just haven't had the time to get it all pretty! but its a working progress so will get improved on.\n. I have done a bit of changes on the core, since ive implemented simple membership. I haven't used MR, but did all custom work. This was because i didn't want facebook/twitter/windows live etc logins to just pass through the tokens but that those users where then also created. And to accomplish that i had to implement simple membership with dotnetopenauth. this also contained much of the user management such as password reset, and account verification. I also built a 2 step email change option. I can see if i'll have time to update and do a merge, But i'm quite busy with a project at the moment, so it might be a couple of weeks till i get to it.\n. Hmm no not sure, if the elmah log is configured correctly you can check /elmah to see what the 500 error is. I'm thinking its perhaps a configuration issue. If this is a real issue just send me the bug in my fork and i'll have a look at it tomorrow.\n. Ive done this before, I just created a child action in the HDR controller that returns a partial view of the configured Idenity providers(you do have to make sure that the request to the idp is with a SignInRequestMessage). This will get a bit more complicated though if its possible to just login to your identity provider(for user management), since  the thinktecture identity server just passes the claims on from the external identity providers instead of creating a new user. \nThis is what it looks like in my version:\n\n(should be available on github next week.. finally ;)  )\n. https://github.com/MacawNL/Thinktecture.IdentityServer.v2\nFinally have my code decent enough for open source, you can check there what I did for this. hopefully its usefull\n. Well i'm actually expecting that you get an authorization code(token), from the user Agent(browser) which u can use server side to get the access token with a web request.This way i can use some standard libraries like BrockAllen.OAuth2 or DotNetOpenAuth, and then implement my own provider for idsrv. And windows 8 RT supports this as well. And most mobile platforms also like to do it this way.\n. Your right its not a token ;) and i'm gonna have to apologize. I have been Asking questions on behalf of my colleague. I have now looked a bit closer at the code he has produced. And it seems he has been posting his data to the wrong endpoint (I noticed while debugging the breakpoints didn't hit where i expected them to). \nI have noticed that Thinktecture Identity Model hides a bit in the demo. (where using idsv and oauth2 to connect a windows 8 rt application and can't use thinktecture identity model) Apparently we also had to send the client secret and client id in the authorization header. Is this standard protocol? cause I don't recall having to do that with other oauth2 endpoints i have used.\n. thx! gonna close this!\n. As far as i know its not a bug, The key gets hashed and then saved in the database. the idenity server doesn't yet unhash it and show it in the UI. you should check the diagnostic logs why your request is going wrong. Do you also have a Relying party Registered under \"https://localhost/\" ? oauth uses the scope to check if that is registered as a Relying party.\n. well it does exist ofc ;) \n. You can also look at my version here:\nThis has features that include registration, password recovery, and much more:\nhttps://github.com/MacawNL/Thinktecture.IdentityServer.v2\n. I would just take my versions source code, And manually merge the things you might want to use. or if my version is more complete then yours (depending on the functionality) merge it into my version. What extra features are you building into your version might I ask?\n. you mean if my fork will end up in this master branch? then the answer is no, User management is going to be build as a separate feature. I think they are building an API so this can be managed that way. I do every so often merge my fork with the master to get the new features and bug fixes.\n. well i haven't merged for 2 months, but its still pretty up to date. I have also been working on some new features (user profile api) and i will probably do a new merge sometime this or next month\n. how about we put bugs and those kind of issues on my fork so i can fix em. The service bus is a feature which uses the azure servicebus to sync the user database to an external source. for example you might have a CRM that contains all your users, and you want to have those synced with the users from the identity provider. the reference should be fixed with the nuget package from the azure servicebus i'll have a look at that. u can also just remove the reference and the communication folder if u don't want to use that feature.\n. Hi Asadsa,\nI' have already merged the source code, and it isn't that challenging at all. this is because i have completely changed the membership provider and implemented a new version of HDR, so i just don't need to merge those. it would be quite difficult to keep this in a separate project because I have done some changes that aren't interfaces. and because most of the things I have changed just have to do with user management, it doesn't effect new features and bug fixes the other guys do, and I can easily merge those. Anyway thanks for your feedback, and perhaps you can just use the code I have for registration, password recovery, etc in your project! Good luck!\n. I have done this already.\n. ",
    "oualidktata": "For your first question:\nThe web.config is the same as the one I downloaded from github. \nTo give you more context, this error is triggered (the answer to your second question: which URL?) when I added a new action \"Register\" inside the Account controller.\nI added another form inside the view.\nWhat I want to achieve is Having a token created when the user sign in or when the user register for a new account.\nI don't know if the cookie is been modified by the register action. However, this is creating the issue.\nNotice that I call PerformLogin after I create the user.\nPS: this code is not that clean, sorry for the mess arround it.\n[HttpPost]\n        public ActionResult SignIn(SignInAndRegisterModel model)\n        {\n                 return this.PerformLogin(model.SignInModel);\n        }\n// handles the signin\n    [HttpPost]\n    public ActionResult Register(SignInAndRegisterModel model)\n    {\n        return this.PerformRegistering(model.RegisterModel);\n    }\nprivate ActionResult PerformLogin(SignInModel model)\n        {\n```\n       if (model.IsValid())\n        {\n            if (UserRepository.ValidateUser(model.UserName, model.Password))\n            {\n                return SignIn(\n                    model.UserName,\n                    AuthenticationMethods.Password,\n                    model.ReturnUrl,\n                    false, //was model.EnableSSO\n                    ConfigurationRepository.Global.SsoCookieLifetime);\n            }\n        }\n    ModelState.AddModelError(\"\", \"Incorrect credentials or no authorization.\");\n\n    model.ShowClientCertificateLink = ConfigurationRepository.Global.EnableClientCertificateAuthentication;\n    return View(model);\n}\n\nprotected ActionResult PerformRegistering(RegisterModel model)\n{\n    if (model.IsValid())\n    {\n        try\n        {\n            this.UserManagementRepository.CreateUser(model.Username, model.Password, model.Email);\n            this.UserManagementRepository.SetRolesForUser(model.Username, new string[] { Constants.Roles.IdentityServerUsers });\n\n            TempData[\"Message\"] = \"User Created\";\n\n            return this.PerformLogin(new SignInModel()\n                                {   UserName = model.Username,\n                                    Password = model.Password,\n                                    ReturnUrl = model.ReturnUrl,\n                                    EnableSSO = false\n                                });\n        }\n        catch (ValidationException ex)\n        {\n            ModelState.AddModelError(\"\", ex.Message);\n        }\n        catch\n        {\n            ModelState.AddModelError(\"\", \"Error creating user.\");\n        }\n    }\n\n    var signInAndRegisterModel = new SignInAndRegisterModel() {RegisterModel = model,SignInModel = new SignInModel()};\n    return View(\"SignIn\", signInAndRegisterModel);\n}\n\n```\nMy view model is now :\npublic class SignInAndRegisterModel\n    {\n        public SignInModel SignInModel { get; set; }\n        public RegisterModel RegisterModel { get; set; }\n    }\nand register model is \npublic class RegisterModel\n    {\n```\n    [Required]\n    public string Username { get; set; }\n[Required]\n[DataType(DataType.Password)]\npublic string Password { get; set; }\n\n[Required]\n[DataType(DataType.Password)]\npublic string ConfirmPassword { get; set; }\n\n[Required]\npublic string Email { get; set; }\n\n//hidden field\npublic string ReturnUrl { get; set; }\n\n//TODO:To be replaced by MVC validation\npublic bool IsValid()\n{\n    if (string.IsNullOrWhiteSpace(this.Username)||\n        string.IsNullOrWhiteSpace(Password)||\n        !string.Equals(this.Password,this.ConfirmPassword)||\n        string.IsNullOrWhiteSpace(this.Email))\n        return false;\n    return true;\n}\n\n}\n```\n. No, I don't. \nHowever, I did solve the issue.\nI commented this line and now it seems working fine.\nTempData[\"Message\"] = \"User Created\";\nHowever, I don't know what's the problem with that specific line. May be you can clarify it.\nthanks\n. May be I was not so clear in the first post. My concern is more with load balancing than Azure it self.\nWhat I want to be sure of is that the load balancing works fine with identityServer V2.\nI've notieced that there might be issues with load balancing RP, and dominick has suggested to switch to MachineKeySessionSecurityTokenHandler. Which we already did in our RP. \nHowever, I don't know if this is the case with the IdentityServerV2. Let's say I want to load balance 4 instances of IdentityServer V2. Do the token/cookies generated with one server still work with the others.\nThanks brock\n. thanks guys\n. ",
    "mbhattar": "Thanks it worked\n. ok thx\n. Thanks brockallen it worked.\n. Thank you\n. ",
    "aselling": "issue/wstrust/mex just gives me 404 I have downloaded the latest version\n. I tried it but get an error when tying to login\nInvalid realm: urn:federation:MicrosoftOnline \nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \nException Details: System.IdentityModel.Protocols.WSTrust.InvalidRequestException: Invalid realm: urn:federation:MicrosoftOnline\nSource Error: \n. How can I configure attributes to be sent back to Azure AD\nLike ImmutableID which oofice 365 needes And that I have stored as a guid in our db.\n. I managed to do that now I have another question.\nWhat is the MetadataExchangeUri\nIs this the url? /FederationMetadata/2007-06/FederationMetadata.xml\n. Sorry found it. I will write a complete guide after I have completed the integration:\n/issue/wstrust/mex \n. https://server.com/issue/wstrust/mex dont seem to work any idea on why? I get a 404 error when trying to access\nWS-trust is activated under protocols\n. ",
    "giabmf11": "I get this and I have the most recent version as well:\nRequest URL:https://localhost/issue/wstrust/mex\nRequest Method:GET\nStatus Code:400 Bad Request\n. ",
    "adnanw2001": "Hi, thanks for getting back to me. I didn't solve it but will instead revert to Plan B. Rather than redirecting RP2 immediately upon signing out of RP1, the next time the user triggers a service call from RP2, the service will inform the user that he is no longer authenticated which in turn will trigger the redirect.\nThe fly in the ointment is that the service is currently out of the loop as far as authentication is concerned. It's a separate IIS application from that which hosts the SL control, although it's hosted on the same machine. I guess I will have to make the service a relying party of the same STS that handles the other RP's, and use active federation. Though I'm not too sure how to pass the user credentials to the service (obviously the user shouldn't have to re-enter these). I don't want to take up too much of your time, but if  you could give me a few pointers then that would be a big help.\nThanks,\nJames \n. ",
    "jlsfernandez": "Hello\nI fond this i would like to know if you find a way about this \"interaction\".\nMy Architecture is as follows:\nHave identityserver v2 with membershipreboot as a userrepository database. \non other side i have a silverlight application.\nand HTML5 applciation and Itanium Application each one have it's own authentication mechsnism i would like to move to the Identityserver auth and use the membershipreboot storage as a role/claims use.\nI was able to migrate or change any applications the issue is:\nin Titanium Application how to change the WCF login service?\nin HTML5 applications how to use my own login screen instead of Identity Server and (THIS IS WHY I FOUND THIS CONVERASTION) how to move to the silverlight application from the HTML5 authenticated user application\nThanks\n. Excuse have you found/made a solution for this ? could you share?\nThanks\n. ",
    "rossdargan": "Could be a duplication of this bug: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/6bf510fd686bc1be69908db8fcba149b10e55e21\nIs it possible to have both the in-build forms based authentication, and 1 or more external sts providers?\n. This looks like the same issue as I'm experiencing: http://brockallen.com/2012/11/04/oauth2-in-thinktecture-identityserver-oauth2-identity-providers/#comment-416\n. Restarting the app pool fixes it - not a bug, but could do with a hint that you may need to reset the app pool after changing the status\n. ",
    "GaryMcAllister": "Thanks for the reply,  how do I secure that endpoint without SSL?\nAs you feel this is not required, maybe I am breaking the rules?\n. Thanks for the swift response.\nJust trying to get a Trusted exchange to your IDP via ADFS working.\nhttp://leastprivilege.com/2012/11/16/wcf-and-identity-in-net-4-5-external-authentication-with-ws-trust/\n. ",
    "Kralizek": "I guess that's the expected behavior, especially if you explicitly accept a port number in your configuration.\n. I manually browse to the HTTPS url instead of using the HTTP and let the site redirect me to the HTTPS binding. In this way I can normally use the admin UI to configure the service\n. I'll try it up :)\n. Ok i deployed it and it doesn't work.\nI'll try to depict the current status:\nOn a given server we have N web sites, each bound to a specific 2nd level domain. One of these is configured for using SSL connections over the port 443 (site1.domain.com). Please note that we have a *.domain.com certificate.\nAt this point I added a new web site containing IdentityServer and I used these bindings:\n- HTTP auth.domain.com:80\n- HTTPS auth.domain.com:4567\n- HTTPS *:4567\nBefore your change:\n- Browsing to http://auth.domain.com caused a redirect to https://auth.domain.com:443 that showed the site1 login page\nAfter your change:\n- From an external computer: HTTP/1.1 403 Forbidden\n- From the server's browser: as before the change.\n. Apparently, HTTPS *:4567 is the one that makes everything work because if i remove it i can't access the site anymore.\nUPDATE: I recreated the site and now I'm able to run with only two bindings:\nHTTP auth.domain.com :80\nHTTPS auth.domain.com :4567\nI'm trying to set up the server on my machine and debug it.\n. Ok the code works properly, but the problem is somewhere else i guess.\nI tried:\n- on my machine running the code: OK\n- on my machine running the deployed package: OK\n- on the server (deployed package): HTTP 403 Forbidden\n. oh, thanks for the quick reply.\nI see the latest version available here has been built the day before the commit.\nI checked out the source and ran the build.bat script but the resulting \\bin folder contains only a msbuild.txt file. Is there any way to get a ready-to-install package?\n. I just did and worked fine with a single OAuth provider.\nAlthough the problem with whr is still there. Just so you know :)\n. :+1: thanks :)\n. any chance for you to share the code? I'd like to add the possibility to support a SAML 2.0 identity provider\n. the comment was meant to @balajircs :)\n. ok thanks :)\nany chance to have some base support in the application itself?\n. sorry for the bad english =)\nI meant to ask if it's possible to add it as a feature request for some future development.\n. Maybe we're in the case of a \"XY problem\", but the idea is: \nwe have two offices with two distinct AD domains (we didn't manage to connect them yet) and therefore two distinct IdPs.\nSo each IdP will issue a claim like \"http://some/fancy/xml/namespace/office\" with its value being a constant.\n. it would work but it's just a workaround, because instead of passing the information about the office, i'm passing a bit of information that let me understand which office. basically any RP should know how to convert the available data into which office the user is located.\n. ",
    "ghost": "Regarding automagic load balancing and sharding in azure: the solution we use with our thinktecture sts is a common SSL cert across all servers. This assures that the tokens are encrypted using the same key. The machine key won't work -- the cookies will often be encrypted the other machine's key. Also, may need to set up the distributed azure cache to enable shared sessions.\nworks for us :-)\n. Stepping through the src filters showed that the IIS-application route was getting mangled for reasons yet undetermined. To resolve the problem I separated the ID server and test relying party MVC site into to separate websites with different ports (they were initially sibling applications under the default IIS 7.5 web site). Note that the installation video shows the ID-server being installed as an application under the default web site (for simplicity), but the usage video shows the IdSrv as an independent server, not an application web site.\n. Doch, klappt. Danke!\n. Ah. It might be nice if the options not associated with a given option were hidden based on the dropdown selection? Just seems confusing as is.\n. Just found this... moving forward. Thanks for a great framework and these samples.\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/Web%20API%20Security  \nit looks like OAuth2 callbacks is the only way to handle this with out username password. Simplest way?\n. Thanks, I was hoping that the Identity Server could  help me generate and manage my preshared keys (PSK) since I will need them for some of my WebApis, and since PSKs will be distributed to the same users that have an STS/SSO account on the thinktecture STS.\n. Thanks Brock, let me check it out\n. OK got it working now, it's not pretty, but works :)\nApparently, and maybe my limited understanding, ClaimsPrincipal.Current.Claims only grabs Name, Username, Time (I think of the token issue), and AuthScheme. I switched it out to call ClaimsPrincipal.Current.Identities which has an array with all claims, including profile fields, so I can now use them.\n. ",
    "esemle": "I'm researching a similar issue, except that the cert is on the load balancer. Is this configuration supported by IdentityServer?\n. The SSL cert. It looks like I can disable the SSL requirement by:\n1.) Commenting out the SslRedirectFilter in the FilterConfig.cs\n2.) Commenting out the RequireHttpsHandler in the ProtocolConfig.cs\n3.) Updating the identityServices.config with requireSsl=\"false\"\n. Thank you for the help. I added IdSrv as an identity provider and it does show up in the list. I tried it and received an invalid realm exception. So I added IdSrv as a Relying Party. Now I'm getting a new exception:\n\"The provided anti-forgery token was meant for a different claims-based user than the current user.\"\nIs there something that I have missed?\n. I almost have it working. The only issue is that the final redirect is to IdSrv's realm, instead of the clients realm. I'll write back if I find a solution.\n. Okay, I finally figured it out. The issue was that I had to set a Redirect URL for the Relying Party. The Redirect URL should be the HRD (Home Realm Discovery) URL. For example: https://localhost/idsrv/issue/hrd.\nYou might run into an issue with the cookies, if you are not requiring SSL on the site. The \"idsrvcontext\" cookie is hardcoded to require HTTPS. That was a small issue on my localhost machine.\n. ",
    "balajircs": "Hi,\n Thanks for your reply. I've extended Thinktecture IdSrv to support SAML2P. And it is working fine. I've extended the protocol layer on IssueResponse method as below,\n   if (Request.Form.HasKeys())\n            {\n                if (Request.Form[\"SAMLResponse\"] != null)\n                {\n                    var samlResponse = Request.Form[\"SAMLResponse\"];\n                    var responseDecoded = Encoding.UTF8.GetString(Convert.FromBase64String(HttpUtility.HtmlDecode(samlResponse)));\n```\n                Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken token;\n            using (var sr = new StringReader(responseDecoded))\n            {\n                using (var reader = XmlReader.Create(sr))\n                {\n                    reader.ReadToFollowing(\"Assertion\", \"urn:oasis:names:tc:SAML:2.0:assertion\");\n                    var coll = Microsoft.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection();\n                    token = (Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken)coll.ReadToken(reader.ReadSubtree());\n                }\n            }\n\n            var realm = token.Assertion.Conditions.AudienceRestrictions[0].Audiences[0].ToString();\n            var issuer = token.Assertion.Issuer.Value;\n\n            var rstr = new RequestSecurityTokenResponse\n            {\n                TokenType = Constants.TokenKeys.TokenType,\n                RequestType = Constants.TokenKeys.RequestType,\n                KeyType = Constants.TokenKeys.KeyType,\n                Lifetime = new Lifetime(token.Assertion.IssueInstant, token.Assertion.Conditions.NotOnOrAfter),\n                AppliesTo = new System.ServiceModel.EndpointAddress(new Uri(realm)),\n                RequestedSecurityToken = new RequestedSecurityToken(GetElement(responseDecoded))\n            };\n\n            var principal = GetClaimsIdentity(rstr);\n            if (principal != null)\n            {\n                var claimsPrinciple = ClaimsPrincipal.CreateFromPrincipal(principal);\n                var requestMessage = new SignInRequestMessage(new Uri(\"http://foo\"), realm);\n                var ipc = new SamlTokenServiceConfiguration(issuer);\n                SecurityTokenService identityProvider = new SamlTokenService(ipc);\n                var responseMessage = Microsoft.IdentityModel.Web.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(requestMessage, claimsPrinciple, identityProvider);\n                Microsoft.IdentityModel.Web.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInResponse(responseMessage, System.Web.HttpContext.Current.Response);\n            }\n        }\n    }\n\n```\nFrom the above code, I got the response and validate the token and redirected to target application. Is the above code is right to achieve to implement SAML2P?\n. Hi,\n In the first line, i got the response and decoded the response to get the information like claims identity,issuer name, uri  etc. I didnt posted the code for validating, but in the above code, i just parsing to get the information. The below code to get the claims information from the token,\nprivate static IClaimsPrincipal GetClaimsIdentity(RequestSecurityTokenResponse rstr)\n        {\n            var rstrXml = rstr.RequestedSecurityToken.SecurityTokenXml;\n```\n        if (rstrXml.OwnerDocument != null)\n        {\n            var xnm = new XmlNamespaceManager(rstrXml.OwnerDocument.NameTable);\n        xnm.AddNamespace(Microsoft.IdentityModel.Tokens.Saml2.Saml2Constants.Prefix, Microsoft.IdentityModel.Tokens.Saml2.Saml2Constants.Namespace);\n    }\n\n    XNamespace ast = \"urn:oasis:names:tc:SAML:2.0:assertion\";\n    var xElement = ToXElement(rstrXml);\n\n    var xElement1 = xElement.Element(ast + \"Assertion\");\n    if (xElement1 != null)\n    {\n        var attributeStatement1 = xElement1.Element(ast + \"AttributeStatement\");\n        if (attributeStatement1 != null)\n        {\n            var attributes1 = attributeStatement1.Elements(ast + \"Attribute\");\n            IClaimsIdentity claimsIdentity1 = new ClaimsIdentity();\n            foreach (var element in attributes1)\n            {\n                var claimType = element.Attribute(\"NameFormat\") + \"/\" + element.Attribute(\"Name\");\n                var value = element.Value;\n\n                var xAttribute = element.Attribute(\"Name\");\n                if (xAttribute != null && xAttribute.Value == \"urn:FirstName\")\n                    claimsIdentity1.Claims.Add(new Claim(ClaimTypes.Name, element.Value));\n                claimsIdentity1.Claims.Add(new Claim(claimType, value));\n            }\n            var claimsIdentitycol = new ClaimsIdentityCollection(new[] { claimsIdentity1 });\n            return ClaimsPrincipal.CreateFromIdentities(claimsIdentitycol);\n        }\n    }\n    return null;\n}\n\n```\n. Hi ,\nIn the above code, \n var ipc = new SamlTokenServiceConfiguration(issuer);\n SecurityTokenService identityProvider = new SamlTokenService(ipc);\nSamltokenservice validate the signature and return the valid response.\n. Hi Dominick,\nYou're welcome. I've hardcoded some values to get identity provider details and default login page of OIOSAML.Net. I've processed the SAML response with XLinq. Please go through the document which I've mentioned about all details.\nWe need to rewrite some generic code to process the SAML request/response. Hope this will be the initial step to implement SAML 2P in ThinkTecture IdSrv.\nPlease let me know if you have any clarifications. Thanks for your support and response.\nRegards,\nBalaji R\nDate: Wed, 6 Mar 2013 03:22:35 -0800\nFrom: notifications@github.com\nTo: Thinktecture.IdentityServer.v2@noreply.github.com\nCC: balaji_rcs@hotmail.com\nSubject: Re: [Thinktecture.IdentityServer.v2] Saml2P implementation (#139)\nHi, \nthanks a lot. \nAs I said before - I won't merge that all into the core IdSrv. I rather want a separate assembly and we will create interfaces to that.\nBut leave it as is for now - I need to have a look at the code first. As soon as I find some time.\n\u2014\nReply to this email directly or view it on GitHub.                  \n. ",
    "camel028": "Hi balajircs, could you share code for validation in Samltokenservice? Thanx!\n. ",
    "ryantj": "@balajircs any chance you forked the code or we can get your code for SAML idps?\n. ",
    "Prom001": "Hi,\nIs the SAML2P Authentication POSTrequest also implemented? I read that the SAML2 token handler of WIF is not able to generate this token. Does the default MS SAML2 token handler process a SAML2.0 reponse belonging to such SAML2P request or is the reponse different also. And does it work with POST instead of GET messages? I see in the WSFederation no option set POST as request and reponse either.\nAny help appreciated.\nJ.\n. Hi,\nI also need SAML 2.0 protocol in simple setup. I want to use setup in web.config to accomplish that. Is WSFederation to do that automatically? See from the request message that a SAML2.0 should be returned? Do you have sample of SAML2SecurityTokenHandler (setup in web.config)?\nJ.\n. Fixed, added Exchange:\nmakecert -a sha256 -n \"cn=mycompany:dev.sso.mycompany.nl\" -ss my -pe -len 4096 -sr localmachine -r -sky exchange\n. Thank you. I indead read that it will do that. I will refine my question. \nI receive a kind of 'userid' back from a IP as an attribute/ claim. I want to lookup this 'userid' in my database first and if present, I want to connect it to a role and/or authorize the user so it can get his/her data from the database. I do not get a user/ username back from the IP. I have the idea I need to integrate ClaimAuthorizeManager (http://msdn.microsoft.com/en-us/library/system.security.claims.claimsauthorizationmanager.checkaccess(v=vs.110).aspx) \nJ.\n. ",
    "jcdekoning": "I had the same problem. I extracted the source code within my download folder making the path depth for some items longer than 256 characters. This is not supported by Visual Studio. So moving the code to a folder which has a shorter directory name (ie c:\\projects\\identity) this issue was solved.\n. ",
    "deeptechtons": "hmm may be is there a way I can do i manually from User Store. I don't use Profile Provider, btw I was trying to go through all the videos but then the links are dead. Is the domain down ? If yes could you create a repo here for the videos or put then on your Vimeo account please.\nI can see some code in the \nThinktecture.Identity.Core library in ProviderClaimsProvider.cs could you confirm is this is right file to edit ? also is there any other step after this i need to do to make the claim be issued to a RelyingParty\n. +1 thanks Dominic. Btw is ADFS 2.0 required for a Single Sign On Scenario ? we want to allow people to authenticate against Active Directory and Active Directory LDS through Starter STS. But authentication for ADDS is already present in ADFS 2.0, is there we can reuse that functionality without going through HomeRealmDiscovery.aspx page right now i got the StarterSTS as Claims Provider Trust in ADFS 2.0 and set it as default in the HomeRealmDiscovery.aspx page code behind. So AD LDS login works great through StarterSTS but then how do i for ADDS. any suggestions or Ideas you can give me !!\n. ",
    "dealproc": "Is there any way to add this to the To-Do list for v.Next of Identity Server, or can you provide guidance on how someone can do this so that we can provide a pull request?\n. @KyleFulton the way your code snippet (from above) works... did you still have to register each {host}.domain.com within IdSvr, or did you create a single entry that took you to {site1}.domain.com; {site2}.domain.com and {site3}.domain.com?\n. @gagoole -\n@brockallen worked up a sample linked on this issue: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/466\n. Unfortunate... I'm struggling with this exact issue right now... wondering if we cannot all band together and get one last OSS project out that ties Identity Server, Authorization Server, and Membership Reboot into a cohesive solution that we can all just build our business applications from with this \"cohesive solution\" as the root.\n. Well... as of right now, I have the idea of the following implemented:\n- users\n- accounts (as in tenants within an application)\n- resellers\n- (stolen from TeamCity)\n  * roles\n  * groups\n  ** permissions\nI have to add the hierarchical org. of an \"Application\" in the system, since i have many apps that need to draw from this... then accounts, roles, groups, and permissions need to all become children of an Application.  This is all implemented using DurandalJS and WebAPI with a Postgres db.\nWith what I have above, and the re-org for \"Application\".... if I just implement the custom repos from MembershipReboot, what all would IdSrv and AuthServ need to have to be able to re-namespace and push this out as OSS?  I'm so tired of thinking of this that I'm willing to put it out as OSS just so that I don't have to do it again!\nThe only other item I'm unclear on is how, on a per-application basis, I'd link to a central \"user\".\n. Outside of the tie-ins to the thinktecture bits + Brock's Membership Reboot, I have most of it built... my git-fu is abysmal @mafis but I think I can probably give you most of the UI and db bits in appx 1 wk.  And it's in the SPA style... so someone could build a phone app that works much like what DNSimple did for dns management.\nI have a mercurial repo on my business DCVS that has all of this in there https://tailoredpos.kilnhg.com/Code/Public/Samples/CredentialManagement (or it did... have to pull the bits out of the production app and merge into this \"public\" repo).  The only thing I'll possibly be missing is an invoicing mechanism... but the data bits could be scraped into another tool, like dotnetopeninvoice or whatever.  \nin the sample project, i'm using SQLite, but its abstracted out into its own implementation... we can do the same for postgres, EF, etc.\nThoughts on next steps?\n. why don't you fellas scrape my credential management project as a starting point... it makes no sense to re-invent the already cut wheel here.\n. Seriously, it was that easy?!  O_o\n. If you're asking... go for it.  If we can align these 3 projects that they can co-mingle, that'd be the end goal of it all.\n. so this gets tucked into Identity Server, we still take membership reboot and flesh that out, and we need authorization server if we want to enable mobile clients?\n. cool.  apparently this is on tonights task to get this all in place.  Thanks for the sample to kick-start it.\n. Going through the MR samples, specifically the MR SingleTenant sample, I notice that MR has the capability of associating my credentials with facebook/google/etc.  Knowing that Identity Server has similar capabilities, are we able to extend the sample to include those bits at some point, or at least document the direction someone would need to take on the IdSrv end in order to fully utilize MR with IdSrv?\nAfter evaluation, although we wont be doing it now, we will be spec'ing out to do an integration project to use all of the MR features with IdSrv, where they fit (2-factor auth, etc.)\n. right... IdSrv is meant for controlling Identity within our ecosystem, and it seems only right that you support all the login UI's there, even for the HRD logins (facebook, github, etc.)\nSomeone did do just this (move the HRD buttons into the login) and it's on github, but i'd almost like to see it in the base tools, instead of each user of this tooling having to re-script it.\nIt would be nice to get 2-factor auth into IdSrv as well, since again, it's part of the login story.  We can use MR to manage the data, which makes sense.\n. change in direction... nevermind.\n. Correct.  Hoping that this could have made it as a feature request, as it's a bit bigger than just using MR for the scenario.  It would be slightly more pleasant to have it interfaced within the product.\nI'm in the process of integrating MR into IdSrv, and will, once my user management bits are complete, be looking at the same thing for AuthSvr as well.\n. That's fine, and is my intention.  My point being that if you protect all the apps through using identity server, and you are now forcing users to reset their password... other than on Identity Server, how do you propose the user is to reset their credential password other than Identity Server?  It's part of the login processs\n1. login\n2. authenticate credentials are good to go\n3. a) if they need to reset credentials, ask them to, then redirect them to the site/service they requested.\n    b) if it's a service call, throw whatever to tell the client app to re-authenticate\n4. proceed\nI realize that Identity Server is not in the business of doing Identity Management, but there have to be some basic bits that it does take on, I would think.  Storing a huge user profile, it should not, but the basics, I would think Identity Server should provide.\nI can see how to do it with MR, but need to see how/if it can be done with the other username/password type providers that Identity Server provides.  I'd rather see this done via a reusable interface, as compared to hacking it into a private repo version of the same product.\n. yea, realized that it doesn't matter.  to do the auto-config setup we want to do, we need to provide an internal api that does this setup either way, so it's no real loss.  Thx anyhow.\n. token is passed through the header.\nIt sounds like you want resourceownerpasswordflow on the outside applications (partners) stuff, so you may want to use IdSrv for your apps in-house, and AuthSrv for your 3rd party partners.  You can then apply scopes to their integration and what areas of the system they can/cannot access to get a rough cut of what they can do.  You'll probably have to do finer grained permissions within your application, as we did, but the scopes give a nice rough-cut of things.\n. Sorry... if you're doing this with a javascript application, that is Implicit authorization, as i recall. You have to redirect your app to either Identity Server or Authorization server, and when that system redirects back to your *.js app, you have to capture the token it puts in the querystring and subequently post that token to your web service (as you have shown).\nScopes, from my understanding thus far (I'm new to all of this as well... @brockallen or @leastprivilege correct me if i am wrong here) are a rough-cut of permissions... basically saying, for third party API users, what portions of the site that the 3rd party is permitted access to.  You then implement the ClaimsAuthorizationManager with your custom logic so you can get finer grained permissions on your site.  You may even need to employ a ClaimsTranformation on the initial token as part of the pipeline to get to your service, so you can properly load up the right permissions, per application.\nWe had to do custom work with claims transformation, since we needed to have really crazy fine grained control of permissions per action (e.g. i can only act on account 'x' and run reports, but account 'y', i am an administrator of.)\nI know Brock/Dominick have a lot on their respective blogs on most of what you are struggling with... most of it is a good read, and a good starting point.\nHTH\n. It sounds like your story is backward - MVC app should be able to use the WSFed signout, I believe, and your Angular app i would think would be more of your issue...\nOpenIDConnect I think is going to be your saving grace.  Dominick (may have been brock, to be honest) mentioned that the current implementation in v2 isn't quite where you'd want to use it, since it was built using the draft specifications.\nNot sure if i have this right, but this is what my current understanding of things are in this world.\n. so OAuth tokens != WSFed... two different areas of concern.\nOAuth tokens are more for accessing services as part of an integration (Connecting your TV to Netflix) where WSFed is more like you accessing Netflix from http://www.netflix.com/ to add movies to your account's queue.  Your problem with deleting the token from the HTTP request header is that someone can still copy and present the token and be considered as 'valid' until the token expires.  Realistically, you're going to want to invalidate the token on the STS to make sure it's dead.\nThe OpenID Connect thing is an OAuth token with some protocols that are established to handle the login/logout scenarios.  Ignore the IdSrv v2 OpenID Connect stuff... it's not baked.  I am not an expert on this stuff, and would refer you to the recordings that Dominick did, hoping that his examples can further guide you in what you are looking for.\nIn our implementation, we are taking an OAuth token and using it, but we do have an inherit security risk for now, until IdSrv v3 comes out and we can use the OpenID Connect protocol.  I'm considering grabbing a refresh token from IdSrv, then subsequently grabbing a short-lived token for each request i need to make to the data apis on our stuff, then the logout button would simply invalidate the refresh token, and then kick me back to a login page, but haven't explored that yet.\nHoping that Dominick/Brock see this and can shed further light..\n. That'll do.  Phew.\n. @RanaNoureddin I did a similar concept as you... We modeled how TeamCity provides permissions by roles and groups to accounts.  I'm chatting with a few of the folks on JabbR with regard to refactoring that work into a generic project to publish to github once we are satisfied with it.  I cannot provide an ETA at the moment, but will warn that it's not the easiest thing to get in place.\n. There are videos in the wiki that can show you this...\nNamely: https://vimeo.com/51666380\n. ",
    "pashute": "Where is it now (2015)? \n- This was answered in 2013 that it will be implemented in the next version. Two years passed since..\n. ",
    "Lanayx": "Thank you for the reply! I haven't thought of Identity Delegation, will try this today.\nYou wrote: \"configure your RP's to trust the tokens from all your STS's\". Could you please explain how to do this, or provide a reference to the example of how this can be done? I've spent a day on trying to find the information about how to accomplish this, but found nothing.\n. I planned to do this workflow: \n1) Go to the first RP and login to the associated STS\n2) Reuse the recieved token for calling WCF websevices or WebAPI of other RP's that should be aware of the validity of this token.\n3) To be able to do this starting from any RP\n. Thank's a lot! That seems to work. The only question left is does this scheme mean that I need to get 3 tokens for each RP as soon as one token can only be appliedTo one realm?\n. Well, when requesting the token I need to pass the realm in appliesTo parameter:\nvar token = WSTrustClient.Issue(\n                new EndpointAddress(stsUrl),\n                new EndpointAddress(appliesToUrl),\n                binding,\n                credentials);\nAfter I got this token for one RP it failed when calling another RP. It worked only if I got another token with the appliesToUrl of another RP. That's why I'm asking if there is a way to pass several realms while requesting the token.\n. Thank you! I'll continue trying to build the right configuration to make this work.\n. Yes, all your suggestions were right and that's a great thing to have a knowledge that this SHOULD work! Managed to get this working\n. ",
    "Wolfium": "Hi, I am really glad to read that the same expected conclusion had worked, I was pretty sure should work as Lanayx stated.\nI am trying to recreate same scenario using a MVC web site and another WCF service in another website (different realm), so, I am trying to use token obtained when logging in the MVC application to be resent to the WCF calls.\nI am not being able to get the recieved token to be able to resend it to within the WCF pipeline.\nI got it to manage getting a new issued token using the UserNameWSTrustBinding with no issue, but I want to share same identity as previously logged in with the WCF service call.\nAny clues on where to look on deep, I did serveral tests and no luck at all reusing identity...\nThanks in advance for any help.\nNestor\n. Regarding comment, we have modified stated view to make a redirect if a reply realm was provided, that works as expected and now the logoff happend at both sides, IdSrv and the client application also.\nHowever, I would like to ask if this is the expected behavior regading standars, I mean, shall it be a rendered view that makes the redirect (or cross postback to the reply provided), later way would be able to post parameters back if needed and may be is more secure from the security client browser warnings.\nThanks in advance for any feedback.\n. Just my humble opinion, I went into the same issue and I figured out what Dominick suggested and it worked like a charm without any issue.\nAs you last comment looks like you have the redirect value pointing to a metadata endpoint.\nRealm would be \"https://localhost/idsrv/\" and the redirect would be \"https://localhost/idsrv/issue/hrd\".\nHope this helps.\n. Thanks Brock for your prompt response.\nUnderstand, was not sure regarding SAML2 protocol.\nHowever, OpenAM expects a metadata using idpssodescriptor tag but IdentityServer produce roledescriptor tags and from what I reviewed the former inherit from the later one, would be possible to manually create expected tags from the generated one?\nOn the other hand, how hard, difficult or impossible would be to add SAML2 protocol support to IdentityServer?\nI am really needing to integrate both federeations as the external service provider application uses OpenAm as their security layer.\nAny hints...?\nThanks in advance for all your help\n. Clear regarding SAML2p .NET support and skipped for now.\nGreat tip for the OpenAm integration, my first issue is that a am not being\nable to register IdSrv with WSFED metadata generated, but will investigate\nold issues as stated.\nBy the way, apologies for my missing, but what IIRC stand for? it is a\nOpenAM product?\nThanks again...\n. LOL... while a am not an english native speaker I never read that\nacronym.\nThanks for the federationRP hint, will do that...\nRegards\n. ",
    "astaykov": "no worries. it is not something special/urgent. Thanks for considering.\n. Also, for a fresh start make sure you install Identity Server in its own WebSite under IIS, or as Virtual Application within the Default WebSite. Considering Default WebSite under your development IIS will be \"empty\". \nThis kind of errors (Duplicate XXXXX element) are very often seen when you install Identity Server as a Virtual Appliction inside a live WebSite, which already has some Identity configuration.\n. It is practical and very valid scenario. For that case I will suggest that you run your Identity Server as a separate Virtual Application within same WebRole (and Cloud Service). For this you will need to have a bit of advanced IIS skills.\nHere is description of how to add Virtual Application within existing WebRole: \nhttp://msdn.microsoft.com/en-us/library/windowsazure/gg433110.aspx \nThey also describe how to add additional WebSite, but you need to use VirtualApplication - the last sample on the page.\nThe idea is that with a final deployment you will have:\n1. Your application running on https://www.yourappdomain.com/\n2. Identity Server Running on http://www.yourappdomain.com/idsvr/\nHowever this is a bit complicated scenario and please make sure you run it locally, before trying to port to Azure. The complication comes from the fact that your Virtual Application will have all the settings in web.config inherited from the main site. And you (most probably) will have to explicitly remove some sections, etc. This all will show up once you create this scenario in an in-house IIS deployment.\n. This feature is not implemented out-of-the-box. You can implement it yourself using the configured IUserManagementRepository implementation. You can create additional controller to handle this action. All you need is a reference to the IUserManagementRepository. Something like:\n[Import]\n    public IUserManagementRepository UserManagementRepository { get; set; }\nthen you can use this property (UserManagementRepository) in all your Actions (register, password reset, etc.)\nAlso check out this issue: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/152 as it is very relevant to your question.\n. ",
    "delpher": "Hi, Dominick. Thanks for the response.\nHere is basicly what I'm trying to achieve: .\nThe web applications are just configured in a different way. For service implementations they share same code and interfaces.\nSo it is obvious that because of shared services implementation I need to abstract away from token type and implement delegation in some common way.\nThat's why I need ActAs delegation with JWT tokens.\nMay be I can figure-out how to implement asymmetric signing in JsonWebToken, just need a starting point.\nAny help will be appreciated.\nP.S. The part with SAML tokens and Windows .NET client works as a charm. And JWT issuing/validation on RP too. I'm really stuck on JWT delegation.\n. Oh! Sorry. Forgot to mention. As this is the distributed application the back-end and front-end could be in a different trust boundaries (domains). Or even one service from front-end can invoke different services on back-end on different servers with their own STS's.\nThis would be a better picture: \n\nP.S. May be this picture is also not very good. The main reason why I need delegation is authorization of front-end to back-end calls depending on client identity.\n. Is ti possible to replace JsonWebTokenHandler from IdentityModel with JSON Web Token Handler for the Microsoft .NET Framework 4.5?\n. I've enabled Basic authentication in IIS site settings and getting 401 Unauthorized error. This is the only progress I have for now.\n. With tracing enabled I have thinktectureIdentityServer.svclog but it is incomplete. Last message I see is \"HTTP Authentication: Authentication successfull\" and the log file ends with opened xml tag.\nI also enabled Failed Request Tracing for IIS - no errors there.\nI think It would be better for me to download end debug IdentityServer source code to figure out where the problem comes from.\n. I'm not sure about WRAP (it has been deprecated since OAuth 2.0). In my scenario I need a STS that can issue SWT, used to access Service Bus for Windows Server. Service bus has it's own STS that can be federated with any other STS that can issue SWT, as Clemens Vasters explained to me. But this scenario is not documented and not yet tested. As far as I know Service Bus STS can be federated with Azure Access Control Service that supports SWT, but I need on-premises solution and IdentityServer is the best option I have.\n. I'm using custom authentication database, so I need, as I understand, user/password credentials.\n. Yes. But I'm planning to configure IdSrv to use custom authentication credentials database (if it is important).\n. Thank You so much, Dominick! Unfortunately it's midnight here in Ukraine. I'll test this tomorrow and write You back as soon as possible.\nMany thanks to You and Clemens!\n. ",
    "LordSmacker": "delper ... have you found a solution to your problem ?\nI posted a very similar question on StackOverflow regarding the same issue ...\nhttps://stackoverflow.com/questions/28498579/howto-request-an-actastoken-from-idenityserver-holding-an-oauth2-jwt-bearer-tok\nKind regards,\n. ",
    "klkkeio": "That is wonderful if you would share for us. I have the same idea and that's why I found this post. may try the same way to integrate simplemembership and customize the providers for it. I am looking forward to see it. If possible, please let me know at the first time!! :+1: \n. ",
    "mdemarco1234": "I also tried to remove all cookies on the client and still i am able to access functionality on the client\n. Dominick,\nThanks a bunch. If you ever need help developing new features for the product I can help you out. \nMichael\n.   IClaimsPrincipal icp = iid as IClaimsPrincipal; returns null.\n. Yes it is. In fact the controller actions are secured using some code I garnered from \none of your MVC C# rely\u200cing party applications. So, everything is working pefectly in\ntandem with IdentityServer. The road block is the IClaimsPrincipal. Now I understand\nthere is a configuration setting that needs to be set to 'SaveBootStrap' token so that\nthe bootstrap token can be gleaned. I tried it but i was getting a config section error\nwhich i am investigating. I think their is a programmatic way of doing the same via the\nFAM if I am not mistaken. I don't think that is causing my problem though.  At any rate the sticking point is the IClaimsPrincipal. If you\nwant, after I am done with this exercise I can post the whole relying party app if you\nwant for others who want to secure controller and wcf service all in one. Please let me know.\n. ",
    "shootingstar1512": "Hi Leastprivilege,\nI have same problem: IClaimsPrincipal icp = iid as IClaimsPrincipal; returns null, event use ClaimsPrincipal instead. \nMy application is .NET 4.0, WIF 3.5. Can I get ClaimsPrincipal from .NET 4.5/WIF 4.5?\nMany Thanks!. ",
    "feinoujc": "True, I'm closing this, it has nothing to do with Identity Server. \nThis is on the site that is federated with our STS, which is using Identity Server. The issue was the cookie was generated prior to the upgrade. I get a similar issue if I change the token handler to the machine key handler from the DPAPI (the default). There is really no graceful way to change the session token handlers, since some people will always have the old cookie in their browser, and either don't close their browser, or use chrome with the setting that doesn't clear session cookies between restarts.\nBy the way, an easy workaround I came up with was to change the cookie name in the system.identitymodel.services configuration for that relying party, if anyone else runs into this issue when upgrading. \n. Thanks Dominick, that makes sense. I was able to get this to work. :+1: \n. Thanks :+1: I use it! We pull the libraries in but host the web site ourselves, and add some customization (Bridge our IoC with IdSrv's MEF, use NHibernate instead of Entity Framework...)\n. ",
    "BRovito": "Thank you! I will keep you posted on the progress of our work\n. ok\n. Hi Brock, Dominick,\nMy collegue will be collaborating with performing the changes. His github account is \"sebastien-allard\". Both he and I would like to contribute directly on github under a new branch. \n.resx and .fr.resx files will be added to the OnPremise.WebSite project under App_LocalResources. Cshtml, models, and cs files will also be updated to refer to the resources.\nHere's a quick overview of the changes proposed:\n- In cshtml:\n  @using Thinktecture.IdentityServer.Web.App_LocalResources.Account\n  @{\n  ViewBag.Title = SignInResource.UsernamePasswordSignIn;\n  }\n- In models:\n  [Display(Name = \"UserName\", ResourceType = typeof(Resources.SignInModelResource))]\n  public string UserName { get; set; }\n- In controllers:\n  ModelState.AddModelError(\"\", Resources.AccountResource.InvalidCredentials);\n. ",
    "sebastien-allard": "Hello Dominick and Brock,\nI've translated the public views, controllers, and models. Do you have any comments on the changes before I proceed to the Admin area?\nMy folk: https://github.com/sebastien-allard/Thinktecture.IdentityServer.v2\nThank you!\nS\u00e9bastien\n. Ok, I'll move on to the admin views and refactor according to your comments.\nOverall, each view, controller and model have their own (embedded) resource.\n. My pleasure! I expected as much since some areas are still under development. Let me know when you need translation and I'll parse the resx files. It's easy to locate untranslated strings using Zeta Resource Editor. \n. My pleasure!\nAbout 100 files were modified. Two things I couldn't localize:\n- <input file=\"type\"> has labels controlled by the browser. Custom components would need to be used instead. It's not really an issue, since administrators will most likely have their browser in the language of their choice.\n- In GlobalConfiguration.cs,\n      [Display(Name = \"Only Users in the '\" + Constants.Roles.IdentityServerUsers + \"' role can request tokens\")]\n      would require a custom DisplayAttribute with an extra \"params string[] nameArgs\" for string formatting.\nPerhaps its worth mentioning for documentation purpose, since .NET exception messages are exposed, Microsoft .NET Framework 4.5 Language Packs may be installed on the servers to provide localized messages.\nZeta Resource Editor was used for editing the resources side-by-side. I've left the project's file at the solution level if anyone is willing to contribute other languages.\nIf you have any comments, I'll be more than happy to refactor accordingly. It's a great project and I'm glad to contribute.\n. It seems the folk sync made the pull request to include all commits made to your repository. I'll clean this up. Sorry, I'm new to Github and still need to hit that learning curve.\nHow's the i18n so far? Is it to your liking or would you suggest refactoring?\nDominick Baier notifications@github.com wrote:\nI think something is wrong with that PR - over 6000 additions?\nPlease only PR the res file updates.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/298#issuecomment-20916446\n. @brockallen if it helps... this pull request only contains 126 new resources files. I could include in their respective project files on my next pass, after both PL 462 and 482 are merged.\n. ",
    "neilhosey": "I've been trying to get a hold on this for the past few days.  My problem is I have 2 or more subdomains, a.mydomain.com running a MVC asp.net app,  and b.mydomain running a PHP or Java app.  I need to have some kind of SSO up and running, but I'm finding it quite difficult getting the information i need.\nCould you suggest which protocol would suit this setup?  or if it is even possible with IdentityServer\nAnd thanks for the reply!!\n. Could the following work.\n1. If i setup the Idsrv to use WS-Federation.\n2. Then (through the video you have on setting up a simple mvc app.), add the STS metadata to the MVC proj.\n3. allow the php developer to use simplesamlphp  and give him the WS-Federation link (ie. \n   https://127.0.0.1/idsrv/issue/wsfed)\n4.  Then can he login through IdentityServer?\n:/  Im quite new to this, and trying to get something up and running quite quick.\nAny advice is greatly appreciated.\nNeil\n. Im guessing by your reply, its not going to be a trivial task, as I cant find any examples on the web of php/simplesamlphp being used with the IdentityServer or WS-Federation..\n. ",
    "netflakes": "I have done this - but the app is defaulting to send all requests to the Identity Server which seems odd\n. Thanks - that was it... much obliged\n. ",
    "vjragind": "I did the first part with Simple membership.  Do I HAVE to implement the IClaimsRepository too or can I use the existing Claims repository for just a proof of concept?\n Basically my setup is where IdentityServer is ONLY my Identity Provider and I am using ADFS for everything else.  I was using Gary McAllister's blog as help. (http://garymcallisteronline.blogspot.com/2013/01/aspnet-mvc-4-adfs-20-and-3rd-party-sts_20.html).\n  After I changed the authentication logic with my custom user repository the sign in via his ADFS helper breaks.  However I can sign in via thinktecture's login page.\nThank you very very much for your quick response and help.  It is greatly appreciated!\n. Thanks again.  All our relying parties will be MVC4 applications we want to use Simple Membership, as thats what gets shipped by default.  Also heard somewhere that support for ASP.Net Membership Provider will no longer be supported? (don't know how valid this information is).  We will be using our custom MVC4 web application to register users.\nI did turn on tracing and the last message I get from IdentityServer is this: \"PolicyOptions creation done\". So I'm assuming everything is being returned okay from IdentityServer.\n. OK will do.  But based on the last message I posted doesn't it seem like IdentityServer is authenticating me properly and issuing a token?  Also like I said I can login from IdentityServer's login page.  It just doesn't work when I use ADFS's formslogin page using Gary's ADFS helper dll.\nI hate posting huge errors on forums but since I'm lost - Here is the stack trace of the error I get while I try to log in:\nSystem.ServiceModel.FaultException: The server was unable to process the request due to an internal error. For more information about the error, either turn on IncludeExceptionDetailInFaults (either from ServiceBehaviorAttribute or from the configuration behavior) on the server in order to send the exception information back to the client, or turn on tracing as per the Microsoft .NET Framework SDK documentation and inspect the server trace logs. at System.ServiceModel.Security.WSTrustChannel.ReadResponse(Message response) at System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken rst, RequestSecurityTokenResponse& rstr) at Gm.Adfs.Helper.RemoteSignIn.SignIn(String wsTrustAddress, String applicationRealm, String username, String password, Boolean ignoreCertificateErrors, X509CertificateValidationMode authenticationCertificateMode, RequestClaim[] claims) at FormsSignIn.SubmitButton_Click(Object sender, EventArgs e)\n. @brockallen  and Ruudvdl - That is awesome guys.  Gary McAllister is also going to do something like this.  However we are working against a deadline and I am trying my best to get this done soon.\nIs there anyway you can share your code with me sooner? If not, Can't wait for your posts :) ! Thanks\n. Ruudvdl - that's awesome! Did you have a chance to read my setup?\n\"Basically my setup is where IdentityServer is ONLY my Identity Provider and I am using ADFS for everything else. I was using Gary McAllister's blog as help. (http://garymcallisteronline.blogspot.com/2013/01/aspnet-mvc-4-adfs-20-and-3rd-party-sts_20.html).\nAfter I changed the authentication logic with my custom user repository the sign in via his ADFS helper breaks. However I can sign in via thinktecture's login page.\"\n. Yes I don't want the user to log on again once they sign in via one of the apps.  The flow is this: the user logs in via the first application ( in my case the .net 4.0 app).  Now to change their profile information, they go to the application That houses our user store ( in my case the .net 4.5 app).  When they do that, I don't want them to have to sign in again.  Hope this makes sense.\n. Will it help if I attach screenshots from Adfs showing my claims provider and relying party sections?\n. It was totally useful! I think I have everything setup the way it should be, I just wanted to make sure and get an extra pair( maybe more) of eyes.\n. Here you go. Sorry for the information dump:\n\n\n\n\n. Not to be dense, will that cause the problem of having to re sign in? I can attach the adfs configuration ASAP.\n. Brock, I apologize, I had copied an older webconfig for the 4.5 Application.  The realm and the audience url are configured as https.  My bad.  Here is the correct webconfig.  I am also attaching the ADFS identifier tab.  Also both the applications were updated in ADFS by pointing the ADFS server to the federation metadata of the 2 relying parties.\nThe fact that I can sign into both relying parties separately and see the claims tells me that the setup with ADFS is correct.  I just dont understand why I have to sign in separately. Signing into to the first one should be enough when I navigate to the second one using  a link from application 1. (https://mvcdotnet4.5application/controller/action)\n\n\n. I already turned on tracing and I saw that error in the thinktectureidentityserver.svclog file.  However after I did an iisreset, I got past that error and now I am getting this error: \"Authorization for token issuance failed because the user is anonymous\".\nWhats confusing is that there is another entry in the trace file that says that the \"Policy validation was successful\" and \"Issuing identity token\"\nJust to clarify - I see the Home Realm discovery page of ADFS - then get redirected to the \"sign in\" page of IdentityServer.\n. I get a page that says an error has occurred. Then the log file has what I mentioned earlier.  However when I go back to the log in page by clicking the back button in the browser, I see the message \"username is authenticated but you are authorized........\".\n. Would it help if I just send you the svclog file?  I'm guessing I am not explaining myself properly.  The first entry in the log file is this:\n \"Authorization for token issuance failed because the user is anonymous\".\nThen the second entry has \"WS-Federation endpoint called.\" ... \"Configuring token service\"...\"Issuing identity token\"...\nLet me know if this makes sense. Otherwise I will just send you the svclog file\n. Yes my user is in the \"IdentityServerUsers\" role. Plus I have unchecked the \"Only Users in the IdentityServerUsers role can request tokens\"\nI turned off custom errors in IdentityServer's webconfig and I still get the same \"Sorry, an error occurred while processing your request.\"\n. Nothing in the event logs ( regular windows and ADFS ).  The realm error went away after I performed an iisreset.\nSent from my iPad\nOn Apr 26, 2013, at 9:35 AM, \"Dominick Baier\" notifications@github.com wrote:\n\nHm - that's strange - you should see the yellow screen of death instead. What about the realm error - that has gone away?\nEvent log anything?\n\u2014\nReply to this email directly or view it on GitHub.\n. Dominick, you are correct.  When I set the mode of the custom errors tag, I set it to \"off\".  When I tried the request directly on the machine where IdentityServer was installed it said incorrect configuration value.  I changed it to \"Off\" and now I do see the YOSD.\nI see this now (and I am working on trying to fix it):\n\n[InvalidRequestException: Return URL must be SSL.]\n   Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationResult..ctor(SignInResponseMessage message, Boolean requireSsl) +176\n   Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationController.ProcessWSFederationSignIn(SignInRequestMessage message, ClaimsPrincipal principal) +403\n. Could you help me figure this out?  It's probably because my configuration is wrong.\nMy realm in IdentityServer is this: https://mydomain.com/adfs/services/trust\nWhat should my Redirect URL in IdentityServer be? \nI tried : https://mydomain.com/adfs/ls - it gives me the error:\n405 - HTTP verb used to access this page is not allowed.\nThe page you are looking for cannot be displayed because an invalid method (HTTP verb) was used to attempt access.\nI am sure its a configuration problem and I just need some help understand the way ADFS calls IdentityServer using WSFed.\n. That seemed to fix the FIRST problem, phew! thank you very much.  \nIs there documentation on how \"sign out\" works in IdentityServer?  I am using a custom user store and with your help from a couple of months ago, I implemented my own version of \"IClaimsRepository\" and \"Thinktecture.IdentityServer.Repositories.IUserRepository\" to log people in using SimpleMembership.\nNow when the user hits log off from the web application - I call this piece of code:\nWSFederationAuthenticationModule.FederatedSignOut(new Uri(Url.Action(\"CompleteLogOff\", \"Account\", routeValues: null, protocol: Request.Url.Scheme)), null);\nbut the next time I click log in - it logs me in automatically. This is not what I expected.  I expect it to log me off of all relying parties.\n. So this SignOutRequestMessage would be constructed from the Relying Party when someone clicks log out?\n. Could you please point me towards an example? (Right now one of my Relying Parties is .net 4.0 and the other .net 4.5)\n. thanks - isnt one created for me when I call the \"FederatedSignOut\" method of the WSFederationAuthenticationModule.  I tried a couple of variations of SignOutRequestMessage, but nothing seems to work for me.\nJust a little more steps that I did:\nIn \"Chrome\" when I delete ONLY the cookies using the developer tools, that still does not fix the problem.  However when I delete the entire browsing data (cache, cookies...) it seems to work fine.\n. Any ideas?\n. Done.\nHere you go: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/195\n. Looks like my RP is deleting the cookies. Here are the cookies before and after log off\n\nAfter Log Off:\n\nHere is what I see in the trace:\nI call a controller Action that initiates the federated sign out:\nI see a 302 that calls my controller action mentioned above.\nhttp://RelyingPartyDomain/Account/LogOff \nThen i see another 302 \n https://adfsdomain.com/adfs/ls/?wa=wsignout1.0&wreply=http%3a%2f%2fRelyingPartyDomain%2fAccount%2fCompleteLogOff \nThen I see a 200\nhttps://adfsdomain.com/Idsrv/issue/wsfed?wa=wsignout1.0\nAnother 200\nhttps://adfsdomaincom/adfs/ls/?wa=wsignoutcleanup1.0\n. Dominick - thanks for the trace.  When I compare it to mine, everything looks the same except for a \"ASPXAuth\" cookie thats being set by IdSrv\n\"Set-Cookie: .ASPXAUTH=F46DE7ABCD034845FD535FFB793BB86177C1472A2171442FF1BE539A73B077E27E991469F2377336B4A9CC7A8E4CBD5484E4B3CB98B7B45B9BABC8691225BC89C8087F3F1744C8DF95049A9E0D8D67B3C36CF23ED95684F8CE53B1BE249251D3B99543A57E7E282E34D96EC8E2F33XD8A41ED10797.......; path=/; HttpOnly\"\nDuring the signout process this is not being cleared. As soon as I clear this cookie from my browser I am signed out.\n. You are correct.  The modification I made like I mentioned in the initial forum post is implementing my own version of \"IClaimsRepository\" and \"Thinktecture.IdentityServer.Repositories.IUserRepository\" to log people in using SimpleMembership.\nCan this cause the problem?\n. Here is the code (sorry for the extra fluff)\n```\npublic bool ValidateUser(string userName, string password)\n{\n  if (!WebSecurity.IsAccountLockedOut(userName, AllowedLoginAttempts, TimeframeBetweenAttempts))\n  {\n    return WebSecurity.Login(userName, password);\n  }\nreturn false;\n }\n```\n. Darn! Thank you so much for helping me with this.  Paul and you are awesome!\nBTW what software do you use for \"looking into the code\" of a microsoft dll? Paul gave me a suggestion too...\n. Thank you again.  \nI fixed the signout problem by calling \"FormsAuthentication.SignOut\" in IdentityServer's WSFederationController - Process WSFederationSignOut.\n. We had this conversation a couple of months ago.  This is more out of ignorance than anything else. Could you tell me why you suggest that I rather not use SimpleMembership?  I am curious to know so I can talk to the Sr.Architect on the project about this.\n. We changed identity server only because we needed to authenticate against a custom user store. That's why we use simple membership. Now how would I go about using my custom \"user\" table and still use the login methods of identity server ?\nSent from my iPad\nOn May 2, 2013, at 1:00 PM, \"Dominick Baier\" notifications@github.com wrote:\n\nWhy do you use it - and took the burden to change plain IdSrv? ;)\nI don't mean to throw out simple membership - just don't use the Login API since it seems to combine credential validation and setting a cookie. Both operations must be available separately somehow\n\u2014\nReply to this email directly or view it on GitHub.\n. ok I took your advice and since there arent any methods to ONLY validate a user and not sign them in, in SimpleMembership, I log them in and log them off immediately.  I know this is a \"hack\", but can't think of anything else (other than checking the username and decrypted password myself).  Thank you again for your help\n\n```\npublic bool ValidateUser(string userName, string password)\n{\n  bool validUser = false;\n  if (WebSecurity.Login(userName, password))\n  {\n    WebSecurity.Logout();\n    validUser = true;\n  }\nreturn validUser;\n}\n```\n. Horner - thanks for your response - I do know what realm/provider they have to be authenticated against - however I need to know how the sign in page of IdentityServer needs to change.  Would it be possible for you to paste some sample code to help me out?\n. I am already overwriting the ValidateUser in my custom IUserRepository interface.  I am also dynamically getting the domain of the Active Directory they need to be authenticated against (this is because we could have a different Active Directory domain for each customer). \nSo this additional value in the SignIn View/Account controller is for the AD domain right?\nThe only thing I still dont follow is the webconfig value and the LDAP connection string.\n. Will this work against a remote AD store? The clients that use AD, will need to validated against their Active Directory and our set up is like this - we have one IdentityServer centrally located\n. I used wstrust to sign in using Active directory from identity server - in the user repository that I am overwriting\n. ",
    "tonysneed": "I'm going to do a blog post fairly soon.\n- Tony Sneed\n. ",
    "hhrahman": "Hey everyone. Any updates on this? I need to implement the same and would really appreciate the forthcoming blog post(s) on this. Thanks in advance!\n. Thanks for the direction Dominick! I followed your steps but I'm getting the following error:\nType not found for interface: Thinktecture.IdentityServer.Repositories.IClaimsRepository\nFor the time being I have created a test IClaimsRepository class:\nnamespace Thinktecture.IdentityServer.Web\n{\n    public class CustomClaimsRepository : IClaimsRepository\n    {\n        public IEnumerable GetClaims(System.Security.Claims.ClaimsPrincipal principal, TokenService.RequestDetails requestDetails)\n        {\n            var claims = new List\n            {\n                new Claim(ClaimTypes.Name, \"bob\"),\n                new Claim(ClaimTypes.Email, \"bob@objectifi.com\"),\n                new Claim(ClaimTypes.Role, \"Developer\"),\n                //new Claim(\"http://myclaims/location\", \"Toronto\")\n            };\n```\n        return claims;\n    }\npublic IEnumerable<string> GetSupportedClaimTypes()\n{\n    var supportedClaims = new List<string> \n    {\n        ClaimTypes.Name,\n        ClaimTypes.Email,\n        ClaimTypes.Role,\n        //\"http://myclaims/location\"\n    };\n\n    return supportedClaims;\n}\n\n}\n```\n}\n. I have it set to:\nclaimsRepository=\"Thinktecture.IdentityServer.Web.CustomClaimsRepository, Thinktecture.IdentityServer.Core.Repositories\"\n. I had the namespace wrong in my class :S\nWorking now. Thanks!\n. Thanks!\n. ",
    "Prasanth37": "I have a doubt. By implementing these interfaces do we need Owin and configuration on Startup of the application.\nCan you send me the link for this sample project.\nThanks in advance!\n. Thanks for the reply Dominick.\nActually I'm implementing IdentityServer3 with my MVC application for authentication and authorization. But I wanted to use my own repository service for authentication. \nSince I'm new to Thinktecture facing difficulties in implementing that one. Can you please share a link with sample project.\nThanks!\n. ",
    "jmischel": "That's good to know. Thank you for the quick response.\n. Similar to that, I think, although I do want IdentityServer to do the actual log in. That is, I want the user to enter his user name and password in the IdentityServer login screen. In addition, we have future plans to allow client/vendor access to some services via some type of federation (i.e. our STS trusts the vendor's STS).\nThe blog post you linked mentions that this flow is discouraged because it uses \"the password anti-pattern.\" How serious of a security concern is that?\nI do need to read more about this stuff. Back to the books . . .\n. I'm beginning to think that I'm making this more complicated than it really is. In simple (and probably technically incorrect) terms, I want the \"normal\" WIF login flow, but I want to use a JWT rather than a SAML token. Does that make sense? If that means I need to use OAuth, that's fine. I can figure out how to add vendor/client login later.\n. I think so. Perhaps I should explain how the app works, and you can point me in the right direction for securing it. I have an MVC Web application that users access through a browser. In the course of that application doing its work, it sometimes needs to call some Web API services. So here's what I envisioned:\n1. User accesses application\n2. Application redirects user to STS for login\n3. STS authenticates user, gets claims, and returns a token.\n4. Browser is redirected to the MVC application.\n5. In the course of doing its work, the MVC application sometimes must access a Web API service. I need to pass a security token from the MVC application to the Web API service. This is where I get stuck.\nSteps 1-4 are, as I understand it, the normal WS-Federation data flow. I have the above working, no problem. IdentityServer made that very easy to implement. It's #5 that I'm having trouble understanding.\nI know that I can pass the token in the Authorization header, but my understanding is that I shouldn't be using a SAML token there. So my question is really how do I construct a token that I can pass from the MVC application to the Web API service in the HTTP Authorization header?\nThis would be much easier if I could just secure the Web API service behind a firewall so that only the MVC application servers can access it. Unfortunately, that's not possible. The service and the application might be in different physical locations and serve requests from multiple applications at different sites. I can, however, configure the Web API service to accept tokens only from specific issuing parties.\n. That sounds like exactly what I need. If I understand correctly, I just need to configure IdSrv to return a JWT instead of the SAML token. Is there a sample that shows how that's done, and a sample RP that accesses it?\n. I'm making progress with that, thanks. I'm running into a problem in the MVC app getting the token. It looks like IdSrv is returning the token, but then I get this exception in the MVC app:\n[NotImplementedException: The method or operation is not implemented.]\n   Thinktecture.IdentityModel.Tokens.JsonWebToken.get_SecurityKeys() in c:\\etc\\Dropbox\\source\\Thinktecture\\Thinktecture.IdentityModel.45IdentityModel\\Thinktecture.IdentityModel\\Tokens\\JsonWebToken.cs:29\n   System.IdentityModel.Services.TokenReceiver.AuthenticateToken(SecurityToken token, Boolean ensureBearerToken, String endpointUri) +50\n   System.IdentityModel.Services.WSFederationAuthenticationModule.SignInWithResponseMessage(HttpRequestBase request) +698\n   System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs args) +123924\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +80\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +165\nThe method in question is public override System.Collections.ObjectModel.ReadOnlyCollection<SecurityKey> SecurityKeys.\nThis could be my error. When I configured the RP in IdSrv, I had to create a Symmetric Signing Key. But I don't know how to set that key in the web.config for the MVC app. Or perhaps I should be using a certificate?\n. That appears to get me closer to a solution. Now I run into a Base64 error. It appears that either the string returned is not padded like it should be (it's 781 bytes long rather than 783) or it contains illegal characters (note the period character that appears at least twice in the string).\n[XmlException: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjEzNjAxMjc4ODcsImlzcyI6Imh0dHBzOi8vbG9jYWxob3N0L2lkc3J2IiwiYXVkIjoiaHR0cHM6Ly9sb2NhbGhvc3QvVGVzdFJlbHlpbmdQYXJ0eSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJqbWlzY2hlbCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvYXV0aGVudGljYXRpb25tZXRob2QiOiJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvYXV0aGVudGljYXRpb25tZXRob2QvcGFzc3dvcmQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2F1dGhlbnRpY2F0aW9uaW5zdGFudCI6IjIwMTMtMDItMDVUMTc6MzU6MzAuODA0WiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2VtYWlsYWRkcmVzcyI6ImptaXNjaGVsQHByb2ZkYXRhLmNvbSJ9.vdecfS9HYNLSx6AhlfbsjJvFxwBUSaJnYbpjSGJoKfQ' is not a valid Base64 text sequence. Line 1, position 271.]\n   System.Xml.XmlTextReaderImpl.ReThrow(Exception e, Int32 lineNo, Int32 linePos) +3675117\n   System.Xml.XmlTextReaderImpl.ReadContentAsBinary(Byte[] buffer, Int32 index, Int32 count) +3725115\n   System.Xml.XmlDictionaryReader.ReadContentAsBytes(Boolean base64, Int32 maxByteArrayContentLength) +186\n   System.Xml.XmlDictionaryReader.ReadContentAsBase64(Int32 maxByteArrayContentLength, Int32 maxInitialCount) +2451637\n   System.Xml.XmlDictionaryReader.ReadElementContentAsBase64() +91\n   Microsoft.IdentityModel.Tokens.JWT.JWTSecurityTokenHandler.ReadToken(XmlReader reader) +132\n   System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader reader) +114\n   System.IdentityModel.Services.TokenReceiver.ReadToken(String tokenXml, XmlDictionaryReaderQuotas readerQuotas, FederationConfiguration federationConfiguration) +356\n   System.IdentityModel.Services.WSFederationAuthenticationModule.SignInWithResponseMessage(HttpRequestBase request) +388\n   System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs args) +123924\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +80\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +165\nI'm in the process of trying to identify where things are getting munged.\n. No problem. I'll give it a shot and will let you know.\n. Replacing the JWT handler with Microsoft's JWT handler appears to solve the immediate problem. Now I get an error about being unable to validate the signature. That's probably because I don't have the symmetric signing key set in the RP. Wonder how I do that . . .\n[SecurityTokenValidationException: JWT10310: Unable to validate signature. validationParameters.SigningTokenResolver type: 'System.IdentityModel.Tokens.IssuerTokenResolver', was unable to resolve key to a token.\nThe SecurityKeyIdentifier is: \n'SecurityKeyIdentifier\n    (\n    IsReadOnly = False,\n    Count = 1,\n    Clause[0] = Microsoft.IdentityModel.Tokens.JWT.NamedKeyIdentifierClause\n    )\n'. validationParameters.SigningToken was null.]\n   Microsoft.IdentityModel.Tokens.JWT.JWTSecurityTokenHandler.ValidateSignature(JWTSecurityToken jwt, TokenValidationParameters validationParameters) +2111\n. Vittorio's post links to another post where he shows how to set up a certificate. He makes no mention of how to use a symmetric signing key. IdSrv requires me to enter a key there. Or maybe not, if I install a certificate. I'll give that a shot.\nI'll be happy to give your fixed handler a try.\n. I don't mind being the beta tester. I've certainly put enough people through testing my stuff before.\nI'm having trouble understanding what I need to add to the FederatedAuthentication.FederationConfigurationCreated event. That's the closest thing I see to FederatedAuthentication.ServiceConfigurationCreated in .NET 4.5.\nIt seems like I want to somehow set the default validation parameters for the JWTSecurityTokenHandler, or perhaps hook the call so that I can insert my parameters. But I really don't understand where I'd do that.\n. I suppose I could create my own CustomJWTSecurityTokenHandler class that's derived from Microsoft's JWTSecurityTokenHandler. There I could override the ValidateToken method and insert my own validation parameters. Seems like there should be an easier way, though.\n. Good idea. Hopefully he'll reply soon. I'll be sure to copy the relevant portions of his reply here.\n. Digging around, I found the NamedKeyIssuerTokenResolver for the Microsoft JWT. I'm pretty sure that I can use that to configure the symmetric key in the  section for the handler. But there's no documentation on the configuration schema, and trying to dig it out of the IL is maddening. Perhaps somebody on StackOverflow knows.\n. Posted to StackOverflow: http://stackoverflow.com/q/14735753/56778\n. That turned out to be an interesting trip through Microsoft's JWT stuff. I ended up creating a custom JWT token handler and injecting a few things into the ValidationParameters. See my Stackoverflow answer: http://stackoverflow.com/a/14837906/56778\n. The problem is that I need to pass information to UserRepository.ValidateUser. The ValidateUser method in my custom IUserRepository implementation has to know which user repository to look in.\nMy idea was to just tack some information onto the initial request to IdSrv, either in the query string or in the post data. That information is just an organization identifier, so it'd be something like \"&orgid=7734\".\nAssuming I can get access to that information in AccountController.SignIn, I could just append it to the user name that's passed to ValidateUser. That is, something like:\nIf (UserRepository.ValidateUser(model.UserName + \":\" + orgid, model.Password))\nAnd my ValidateUser method would know to split the string.\nSo I guess I just need to see if I can access the query string or post data from the initial request in the SignIn method.\n. I think that will do it. I got pulled away onto another issue, so haven't had time to implement this. But it should do the trick. I'll report when I get back to this project, but I think you can mark this as resolved.\n. Just a follow up. That worked perfectly. Thank you very much.\n. Please add me to the list of people who are interested in this functionality. I'm not really interested in retrieving lost passwords (our users can contact an admin for a reset), but password expiration and allowing the user to change his password are essential.\nI'm very interested in this. Since it's on my current to-do list, I'm highly motivated to help out if I can. Feel free to contact me if you think I can be of some help.\n. Unfortunately that's not an option. I suppose I could put something on the request url if I had to, and access it from my IUserRepository implementation through HttpContext.Current. I'd really rather not, though.\nI could also do something really ugly like have the WebSite code set a public property in my IUserRepository implementation. That's likely the way I'll end up going if I can't find something a little cleaner.\n. Throwing my hat into the ring here. What's being done and how can I help out?\n. The SCIM stuff is interesting, although overkill for what I need in my application. I can see, though, where it would be generally useful, and I would not oppose making the necessary changes to the internal interface to support it. There's more work on the external interface, having to make the compatible REST services.\nMy needs for the user management API are fairly simple: I need to support password expiration (user's password is 90 days old, so user must change it before the STS will issue a token), and password reset (user clicks \"Forgot password\", enters user name, and we email a password reset link that is good for 24 hours). I don't have to support user-initiated password change in the first version, but I'm betting that the requirement will be imposed before we ship.\nThat said, I like the IUserManagementRegistry that Ruudvdl posted in the linked thread, and I'm happy to help design and implement other parts of the system as long as I get my password change/reset functionality.\nOther things that people might wait.\nUser name recovery - If user doesn't remember his login name, supply email address and the system will email the user id. An alternative for some systems might be to let the user log in with his email address and user password. In effect, an email address is considered equivalent to a user name. Not all systems store users' email addresses, of course, so this functionality can't be required.\nPassword recovery (rather than reset) - Some systems store encrypted passwords rather than salted hashes, and they'll email the clear text password to the user in response to a \"forgot password\" request. This is obviously a huge security risk, but changing those systems can be an expensive proposition. Some people might want this password recovery functionality. I would argue against implementing it due to security considerations and that the password reset thing can be done almost as easily and much more securely.\nSecurity question support. \"What was your first pet's name?\" and all that kind of thing. I don't know how prevalent those things are, but some of our customers seem to think it's a good idea to have them. A related but not necessarily mutually exclusive feature would be password hints.\nLockout after N (configurable) attempts at answering security question or verifying new password.\nEditing other user profile information should all be done with an IUserProfile interface of some kind. The SCIM stuff defines what looks like a reasonable standard set of information, and allows for application-specific extensions.\n. ",
    "Tim12": "Is this a reasonable / appropriate approach?  My (very small) team is gearing up to convert an existing application to MVC4 and Web API.  The Web API will be will also be called by clients outside of the MVC app so it seems reasonable to use the same security setup if possible.  Would I be saving myself alot of headachs if I just create an \"account\" for the MVC app to use to authentic/authorize to WebAPI?\n. I've had 3 sets of eye's look at the code and we have not been able to see the difference.   The point of failure seems to be with the between these to lines:\n(Thinktecture.IdentityServer.Protocols.STS)\npublic STS() : this(TokenServiceConfiguration.Current.CreateSecurityTokenService())\n(Thinktecture.IdentityServer.TokenService.TokenServiceConfiguration)\n private static Lazy _configuration = new Lazy();\nThe failure is related to the TokenServiceConfiguration being null, which I am assuming is related to the Lazy loading not being configured correctly?\n. ",
    "haf": "Working link (for us with FF) to Vittorio's blog post: http://www.cloudidentity.com/blog/2013/01/09/using-the-jwt-handler-for-implementing-poor-man-s-delegation-actas/\n. If you can't solve your production problems with the logs, it's time to add more logging.\n. You'd not be guessing more than you'd be doing debugging. Inspection of state is overrated. ;) I'm saying that if you can't solve the problem with the logs, then you haven't done your job as a programmer.\nBut yes, of course you can run IdSrv locally, just \n1. Download the code\n2. Start VS, set it to IIS Express\n3. Try starting once\n4. Now you have an app in IIS Express, follow http://www.hanselman.com/blog/WorkingWithSSLAtDevelopmentTimeIsEasierWithIISExpress.aspx to add a SSL certificate to it\n5. Debug to your heart's content\n. Glad to be of service!\n. Without using the built in WIF http modules? Or what do you mean?\n. ",
    "PeterBurke": "Thanks Dominick. Yes the wctx is opaqe and I did read somewhere where the WIF Module in the RP is supposed to use it to redirect the browser back to the ru address if present. I want to avoid redirections as they impact performance, especially when running in Azure. This reference (http://msdn.microsoft.com/en-us/library/bb608217.aspx) indicates that the wreply parameter can be used to cause the STS (IP) to reply directly.\n. Thanks Dominick. Yes I got it working.\nI am working very hard right now to get a site kick started. It contains two web projects: www and your identity server, distinguished by host headers and I am developing with a wild card certificate. I am using IIS Express 8 X64 and have a solution with muliple startup projects. I don't turn require SSL off, but may do so later to make it easier for the styling developer.\nI do have some time to put back into Identity Server and could help any beginners who are having issues getting started.\n. ",
    "OrganizationalBehavior": "..but there's no (longer) a getClaims method on IUserRepository - can we not have a claims-aware frontend ?\n. ",
    "andrasnemes": "Found it, thanks a lot!\n//Andras\n. OK, thanks.\n. Do you mean the cookie called idsrvauth? The contents of that cookie are encrypted. How can I verify that the contents are correct?\n. that is always set to the URL where i pressed the signout button. \nI'm trying to do the following: \n- i have two localhost apps, localhost:2533 and localhost:2534. \n- i run localhost:2533 and localhost:2534\n- i log on from localhost:2533 and select the rememberme option\n- i get logged on to localhost:2534 as well\n- i press Logoff in localhost:2533 and i'm redirected to the idsvr signout page\n- the wsfedsignout cookie is set to localhost:2533, nothing else. Is this correct? I don't see localhost:2534 in that cookie \n- I don't see the cleanup message for localhost:2534 in the html of the signout page\n- i'm still logged in on localhost:2534 and can view all protected pages\nWhat am I doing wrong?\n. I pressed the close button by mistake...\n. OK. \nIn the meantime I want to check something with you. At which step is the wsfedsignout cookie supposed to be set exactly? Fiddler is telling me the following:\n- the first cookie, which is idsrvauth is set after signing in at URL https://andras1/idsrv/issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%3a2533%2f&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fHome%252fAbout&wct=2013-04-30T12%3a02%3a44Z\n- there's no sign of the wsfedsignout cookie at this step\n- when I'm redirected to the localhost page I get the FedAuth cookies\n- the wsfedsignout cookie only appears after i've logged out at URL https://andras1/idsrv/issue/wsfed?wa=wsignout1.0&wreply=http%3a%2f%2flocalhost%3a2533%2f\nIs the wsfedsignout cookie supposed to be set at sign in or sign out?\n. I'm currently working on installing Idsrv using the latest update of the Identity and Access Tool in Visual Studio. I'll close this thread and open a new one if necessary after redoing the whole setup chain.\n. sorry, my bad, it was a mismatch between the issuer names, as you suggested,\n. ",
    "dirksmith": "Hi\nI am also facing the same issue for the line of code\n                               var st = factory.CreateChannel().Issue(rst);\nException Details:\nThe requested service, 'https://myapp.cloudapp.net/issue/wstrust/mixed/username' could not be activated. See the server's diagnostic trace logs for more information.\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\nException Details: System.ServiceModel.ServiceActivationException: The requested service, 'https://myapp.cloudapp.net/issue/wstrust/mixed/username' could not be activated. See the server's diagnostic trace logs for more information.\nI have set up a thinktecture identity server on Azure VM.\n. Kindly help regarding the above mentioned issue.\nIs there any one who answers this link or is it closed?\n. Hi,\nI am also facing the same issue at \nif (!userName.StartsWith(\"TT\\\"))\n            {\n                UserRepository.GetUserRoles(userName).ToList().ForEach(p => claims.Add(new Claim(ClaimTypes.Role, p)));\n                return claims;\n            }\nThe UserRepository is null.  Hence GetUserRoles is not getting called and giving the exception\nObject reference not set to an instance of an object. \nKindly, give your suggestions to fix this out.\nThanks.\n. ",
    "msepahvand": "I just ran into this on our local server, checking the error on the server itself, this is the exception it gives:\nMemory gates checking failed because the free memory (283615232 bytes) is less than 5% of total memory.  As a result, the service will not be available for incoming requests.  To resolve this, either reduce the load on the machine or adjust the value of minFreeMemoryPercentageToActivateService on the serviceHostingEnvironment config element.\nInteresting, checking the server resources, it only  has 100MB of free RAM left.\n. Yea for sure, the problem turned out to be that I hadn't configured a Token type for my relying party (the MVC4 app), you have 3 options there, I chose SAML 2 and it worked fine, so if you get this error, define a Token type for your client app!\n. Closing this for now, although I still haven't managed to resolve this, as a workaround I'm manually creating anew instance of IADMUserRepository in the constructor of my ADMClaimsRepository:\npublic ADMClaimsRepository (){\n    if(UserRepository == null{\n          UserRepository = new ADMUserRepository();\n    }\n}\n. Check if your repositories.config paths are correct. Otherwise you could just create a defaulrt constructor and do a null check on UserRepository:\n        Public MyClaimsRepository(){\n              UserRepository = UserRepository ?? new UserRepository();\n            }\nHowever what I ended up doing was just adding this to the default constructor\npublic MyClaimsRepository()\n    {\n      Thinktecture.IdentityServer.Repositories.Container.Current.SatisfyImportsOnce(this);\n    }\nGod I hate MEF.\n. Thanks dominick, another small and somewhat unrelated question but I'd be grateful if you could just give me some direction: Is it possible for my RP to access other fields that I've added to my users table in my client app? i.e. location, gender etc? so I have to put those in a token as well? Thanks a lot btw.\n. Thanks a million Dominick. I'm reading pretty much all of your comments and articles regarding customizing IdentityServer. Just read that \"Whatever the claims provider returns - will be put in the outgoing token.\" from this issue (https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/278). Thanks again!\n. Thanks. The MVC app signs out successfully yea, but this is not supposed to clear/invalidate any OAuth tokens right? The way to deal with that it seems is simply deleting the tokens from the client's HTTP request headers, and giving the tokens a short lifetime in general. Regarding OIDC, I have seen it mentioned here n there in these issues, but I'm not entirely sure what it is and what its supposed to do, i also see it in the IDSRV config page, any resources/documentation you can point me to? Thanks.\n. Thanks a lot for your help. I did a quick read up on OIDC, seems that OIDC supports session Management which will including log out functionality. Yea that makes a lot of sense. regarding deleting the token from the clients HTTP request headers, what you say about others grabbing that token which is valid (although I imagine that'd be extremely difficult) is right but for now I think it's a viable workaround. So you suggest that in the meantime I assign extremely short lived tokens and grab a refresh cookie from Idsrv on future requests?\n. Thanks brock.\n. ",
    "iamandycohen": "I'm sure this is an Azure issue.  Yes it's OK.  I just no longer run in the emulator locally.\n. ",
    "rathcale": "Thanks.. Is it possible to create a dll that contains my IClaimsRespository implementation, put it in the Idsrv bin directory, and configure the repositories.config to point to the new Class so it gets dynamically loaded?  Or do I need to recompile the entire Idsrv with my implementation included?\n. Thanks.  I have enough information to be 'dangerous' now :-). \n. Ok. So are you indicating the only way to revoke a user's access is to obtain a new access token from the authorization server prior to each resource server request?  Or, I may be a bit confused.  \nTake the following example.   Let's say I have an access token with a 10 hour expiration.  As an administrator, 2 hours after the user has been granted the access token, I decide that I need to revoke their access.  Even with a refresh token, the access token is still valid because it has 8 more hours until expiration and the resource server is unaware of this.\nI'm guessing that since ASP.NET membership is being used, I'm going to have to switch some flags in the DB to revoke access rather than handle revoking access via tokens.  Agreed?\n. I decided to handle revoking users in my resource server.  Thanks for the speedy replies!\n. I'm using the 2.1 release.\n. ",
    "umair-ali": "Hi Leastprivillege, does that above link is valid for idsvr3...??? If not, is there anything else for v3...???\n. What is the solution to this issue, i could't see anything other than question here...\n. ",
    "pascalstl": "It works like a charm, as always.\nSo we had 3 issues with our configuration.\nThe first is about the clock, when the clock on the server and the client side has a difference higher than 5 minutes, a validation exception is thrown. I saw this in the trace logs.\nThe second is about the resolution of our domain name.  Because our server is in a DMZ and have no DNS or direct internet access.\nAnd finally, the custom authentication url was not resolved.  For this point and the second, we have add the entries in the Windows Hosts file.\nThanks again!\n. Ok thanks, you're right.  My certificate for signing, is an internal (Company) signed certificate. When the certificate is placed in the right store, everything works fine.\nWe cannot disable validation for security reasons.\nThanks\n. ",
    "markgmarkg": "... small update...\nThe load balancer has nothing to do with this problem.\nThe problem happens when the user\u2019s security tokens have been serialized into cookies and are intercepted by the SessionAuthenticationModule on the \"next\" server in the farm or after AppPool recycle on the same server (so the reproduction is quite easy).\nIt looks like Safari do \"cut\" the cookies all the time, however SessionAuthenticationModule behaves differently on initial request, and extracts security token from the cookies properly.\nAny ideas how to mitigate this Safari issue?\n. Thank you a lot - it's very helpful.\nBTW, do you have some insights regarding performance implications of server side session token caching?\n. ",
    "damianh": "So I need to copy this https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/src/Libraries/Thinktecture.IdentityServer.Core/Repositories/RepositoryExportProvider.cs#L15 into the InMemoryHost project, remove the ConfigurationManager line and adjust the mapping dict?\n. I implemented an ExportProvider base on Repository ExportProvider https://github.com/damianh/Thinktecture.IdentityServer.v2/commit/de2997c8c2073a22041b3cd3524066bbe08f4e04#L2R1 \nThis works, but is not intuitive and feels fragile. Is there a better way using plain constuctors?\n. App.config-less https://github.com/damianh/Thinktecture.IdentityServer.v2/commit/14c98b9e1bcdb846e2d2b6a2256a83ef6314e7b2 \nI am exploring this so I can use the in-memory sts in acceptance tests where app.configs are problematic.\nThx for the quick responses and reviews.\nEdit: am also considering porting the web UI to Nancy so it can be hosted in a owin compliant application.\n. It's cool, I can wait. Cheers.\n. Just to add, the dependency on a static composition container makes things difficult from a testing perspective.\n. I've had some more time to work with this, if I may offer my opinion. First, big thanks for the work gone into this, I'm learning a lot from it. This is opinion is coming from someone who is trying to consume the nuget packages and I hope it's taken constructively.\nIt appears that you are using MEF as a DI/IoC container, the usage of which is  makes it look like a service locator and, thus, is opaque. Example:\n1. TokenService declares it's dependencies in an overload.\n2. TokenService depends on being able to create a new Request instance, using the ctor that takes an IConfigurationRepository.\n3. This ctor depends on static composition container to get the the other dependencies, IRelyingPartyRepository and IDelegationRepository, even though there is a ctor that explicitly declares these.\n4. So a developer creating a new instance of TokenService is given no indication that further down the chain the static composition container will be called (resulting in a NRE) or that an implementation of an IRelyingPartyRepository and IDelegationRepository is required.\nHow I would address this:\n1. Add IRelyingPartyRepository and IDelegationRepository as explicit dependencies to TokenService ctor so these can be passed into the corresponding Request ctor. \n2. Alternatively, have TokenService depend on a Request factory (Func) \n3. Remove the (mutable) property imports and dependency on static mef container - leave that sort of work to the composition root.\nI'm more than willing to a PR.\n. Since you said there will be a major refactor, I won't be doing anything further. Thx.\n. NP, I'll just take the bits I need - only using it for testing purposes.\n. ",
    "hcabnettek": "Yes. Thanks sir!\n. Yes this works as designed.  I think I was not setting wsrealm correctly.  I'm able to redirect when using the active model.  How does passive sign out work? That's a different issue entirely. Thanks. Yes please close. =)\n. ",
    "jonstelly": "Ok.  I've started trying to implement.  I've made a bit of progress by:\n1) Replacing DefaultMembershipProvider with ActiveDirectoryMembershipProvider\n2) Replacing DefaultRoleProvider with SqlRoleProvider (DefaultRoleProvider seems to have an assumption that when adding a user to a role, the user has been imported into the Role database already... Which isn't the case, not sure why).\nI can now log on using AD credentials in the login form and manage users / roles as I'd expect.  I'm getting an error about invalid_scope when trying to perform an oauth2 authorization\nI'll keep at it.\n. I got past the oauth error.  I've got some of the changes in My Fork but it needs some cleanup before it's ready to be pulled.  Let me work on it a bit, I'm sure I'll have it working in a week or so.\n. ",
    "jackkjhsu": "Hi Jon and Dominick,\nI'm also looking to implement such an Active Directory integration with the Identity Server. If this is already been done, could someone update the source code with it?\nThank you.\n. Thanks Dominick. I found the following active directory implementation for v1 of identity server:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v1.Contrib/tree/master/ActiveDirectory\nDo you think this can be modified/converted for Identity Server v2? If so, could you outline at a high level what needs to be done?\nMy goal is to replace the existing user store implementation using SQL CE/SQL Server with an implementation that hooks up to AD. \nThanks\n. Thanks Dominick!\n. The issue is it is not getting redirected at the right time when the RP token lifetime ends at the local time. It does get redirected to re-authenticate at the STS eventually but it seems to occur at the UTC time when the RP token life time ends. \n. So i guess it's more of a question whether the idsrvauth cookie from the IdSvr should stay in sync with the FedAuth cookie issued to the RP. \nI currently have the global default token lifetime set at 10 hours and for the RP it's set at 30 minutes. Is it by design that I should expect the idsrvauth cookie to last for 10 hours while the FedAuth cookie on the RP side will live for only 30 minutes?\nThanks\n. Thanks for your replies Dominick.\nCould you confirm the following settings with respect to \"token mapping\"?\nRP token lifetime -> FedAuth cookie with RP\nDefault token lifetime -> idsrvauth cookie with STS\nSetting RP token lifetime does not override the Default token lifetime.\n. Thanks for clearing that up Dominick.\nIt looks like the idsrvauth cookie's lifetime is set by the SsoCookieLifetime, which determines RP's authentication session with the IdSrv. Is there a way to set the SsoCookieLifetime in minutes as opposed to in hours?\n. Hi Dominick, \nFrom what I can tell the SsoCookieLifetime is set in hours, and this unit cannot be changed from an extensibility point. Can I proposed for the following settings to be changed in minutes or as TimeSpan?\nDefaultTokenLifetime\nSsoCookieLifetime\nMaximumTokenLifetime\nThanks\n. Thanks Dominick \n. ",
    "nazeemkhan": "The problem was in the Saml token with AudienceUri was set as http://localhost:61825/api/ instead of http://localhost:61825/. Also the thumbrint copied from the Key Configuration has some invalid (invisible) characters. Manually typing it resolved the issue.\n. ",
    "bin0m": "I looked into Idsrv code. Didn't find anything suspicious. It just seems like HRD (in Idsrv) doesn't support something in federation protocol, that's why ADFS throws 'wctx' exception.\nBut I don't know those protocols good enough, to see what is missing.\nTell me how can I help to reproduce it?\nP.S. Meanwhile, I managed to switch IP-STS to Azure ACS 2.0, which works fine in the same flow.\n. Sorry for late response. Was very busy this week.\nHere is fiddler trace: \nhttp://www.speedyshare.com/FXH6e/adfs-idsrv-hrd2.saz\nHere is ADFS error in eventviewer:\nEncountered error during federation passive request. \nAdditional Data \nException details: \nMicrosoft.IdentityServer.Web.InvalidWSFederationContextException: MSIS7045: The WS-Federation Passive protocol parameter 'wctx' was not found or not valid. If the context was stored in cookies, the cookies that were presented by the client were not valid. Ensure that the client browser is configured to accept cookies from this website and retry this request.\n   at Microsoft.IdentityServer.Web.EncodedContext.GetContextParamValue(String contextPart, String paramName, ContextType contextType)\n   at Microsoft.IdentityServer.Web.EncodedContext.InitializeWSFederationPassiveProtocolContext(Uri baseUrl, String encodedValue)\n   at Microsoft.IdentityServer.Web.EncodedContext..ctor(String encodedValue, Boolean samlEnabled, Boolean wsFederationEnabled)\n   at Microsoft.IdentityServer.Web.FederationPassiveAuthentication.ParseRelyingPartyInfoFromWCtx(String wctx, Boolean deleteCookie, String& contextId)\n   at Microsoft.IdentityServer.Web.FederationPassiveAuthentication.GetOriginalRequest(FederationPassiveContext federationPassiveContext, Boolean deleteCookie, String& requestId)\n   at Microsoft.IdentityServer.Web.FederationPassiveAuthentication.GetOriginalRequest(Boolean deleteCookie, String& requestId)\n. ",
    "williamwsmith": "Sorry to be a pest.  I am hoping this is being looked at again.  I don't know enough about it to contribute technically.\nIs there a new priority to this item?\n. ",
    "jamiejamie": "Will try it.\n. FYI, I finally got around to debugging this.  I found the issue to be that the firewall was terminating SSL connection before routing to the server.  Admin swears it is not, but IIS log clearly shows that the request is coming in on port 80, not 443.  This caused the SslRedirectFilter to redirect to SSL and the loop continued until the browser finally aborted.\nline 19 from SslRedirectFilter:\nif (!filterContext.HttpContext.Request.IsSecureConnection)\n. ",
    "EmraanSiddiqui": "Or i am doing something wrong to make WEB API secure using Identity Server.\n. Hello sir,\nThanks your suggestion worked and now web API working fine by setting DefaultAuthenticationScheme =\"JWT\".\nThanks\n. Can you give me any example link which use thinktecture oAuth and hosted on Azure.\n. Is there any Web API example which using thinktecture oauth Flow like tuds exazple posted by you and hosted on Azure?\n. actually i really new in using ASP.NET web api and azure and i tested asp.net web api  on local it's working fine but as i hosted this service on azure it's giving me 401 unauthorized when i call ny service via my test page.\ni try to enable tracing on ASP.NET Web API.\n. It's now woking thanks for help and direction.\n. actually i forgot to change Symmetric signing key for that on web config as per relying party.\nOne more question I have saved token on per requests in my db in a table all the tokens are same is there any way to creating new token in every request.\n. As blog posted by one of your team member in \nhttp://weblogs.thinktecture.com/cweyer/2012/11/oauth2-in-thinktecture-identityserver-v2-implicit-grant-flow-with-javascript.html\ni have used this example as i Login with thinktecture and allow grant in redirection i got same token every time.\nSo i just wanna know is there any way so for every user it generate different token.\n. Yepp I had reviewed that the token expiration is different, but as i login with different users in Identity Server it's gave same token in every requests but with different expiration time.\nSo in what basis it generate token.\n. I didn't understand the User's claims means.\nActually  we have just set of users in Identity sever now when i just login with these users i redirect into other application where i get token but i got same token for every user.\n. Actually I have extended Identity Server.\nActually to secure my app I have Created ASP .NET Web API through which i can Create account,SignIn,ResetPassword  in Identity Server DB.\nSo for that i have created the method which i have pasted on above comment but mean time i want to generate token which i can use in my app further.\n. ",
    "geekmarine72": "Yes, thanks!  I found a number of your other articles that helped out.\nI have other questions but I was going to post to GIT unless there is a\nbetter forum for support / discussion around STS and it's usage.\nThanks,\nPaul V.\nOn Thu, Mar 21, 2013 at 10:57 PM, Dominick Baier\nnotifications@github.comwrote:\n\nOK? Can I close that?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/142#issuecomment-15282435\n.\n\n\nPaul Vilevac\nVilevac Consulting\n(925) 400-7537\n. ",
    "tatsean": "Hi leastprivilege\ncan you explain more on \"mix up realms and reply URLs\"? i actually faced the similar issue, which is Invalid Realm\n1. I setup the IdentityServer in Azure following the article from \nhttp://weblogs.thinktecture.com/cweyer/2013/01/running-thinktecture-identityserver-v2-in-a-windows-azure-web-role-from-zero-to-hero-a-walkthrough.html\n1. Then, i setup my application (RP) in Azure as well. \n2. I configured the application integration between RP and IDP in Azure ACS. \n3. When i used Windows Live/Google as Idp, my RP can get the token successfully. However if we use IdentityServer, i get [Invalid Realm \"https://{servicenamespace}.accesscontrol.windows.net/\"]\nquestion is after setting up the IdentityServer in Azure, do we still need to create a relying party using the IdentityServer portal as mentioned by mrinalpandya in Step 8?\n. Hi  mrinalpandya\nwhen you create the RP in Thinktecture in Step 8, try to set the [Redirect URL:] to \n\"https://acsdemotatsean.accesscontrol.windows.net/v2/wsfederation/\"\n. ",
    "mrinalpandya": "HI leastprivilege,\nThanks for you response, \nFirst thing regarding the HRD in ThinkTecture, what we are looking for is that we will have more Identity providers in ThinkTecture and when the user select the ThinkTecture than it should show the ThinkTecture HRD screen, but I guess thats not much important.\nbut do you see any issues with the configurations that we have in our system.\nWhy am I getting the Invalid realm error? do you feel that the URL that we are using is not the one which should be configured in the thinkTecture identity server as realm for Azure ACS?\nwe are stuck with it, please help.\n. Hi tatsean,\nno matter what I enter in the Redirect URL and Realm, I always get following error:\n[InvalidRequestException: Invalid realm: https://thinktectureidentityservice.accesscontrol.windows.net/]\n   Thinktecture.IdentityServer.TokenService.Request.ValidateKnownRealm(RequestDetails details) +173\n   Thinktecture.IdentityServer.TokenService.TokenService.GetScope(ClaimsPrincipal principal, RequestSecurityToken rst) +316\n. sorry accidently closed the issue, now reopened.\n. ",
    "styxington": "Thank you so much.\nAfter my original post I discovered I was going about things all wrong by trying to use the bootstrap token directly to call the WCF, but I couldn't get my proof-of-concept running just from the code snippets I found elsewhere.\nTo have a working example like that is so incredibly useful when there's such little concrete documentation out there for this stuff (from MS).  I really appreciate all the work you've done putting this stuff together, and it's really going to help drive adoption when people can get a working example going to play with.\nAnyway, after a week of trying to understand WIF and especially delegation, it's now 5:30 on Friday and I finally feel I have at least made some decent progress (most of which was in the last hour).   Thank you again.\n. Thanks for your quick reply.\nWe have been playing with this stuff all afternoon and it appears that by the time the event gets fired the IdentityConfiguration has already been processed.\nWe have tried using both the IssuerNameRegistry and AudienceRestriction properties on the SecurityTokenHandler property of the IdentityConfiguration instead of the ones directly on the IdentityConfiguration, as we read that the direct one are deprecated.   Both the SecurityTokenHandler and the direct ones work perfectly in from the config file, but when set in code, they are ignored.  I've debugged through the event handler method to prove that the properties are getting set correctly, and the object is altered to the point where it appears to have the same configuration as when set through config.  The only difference is that those properties seem to have no effect when set in the event handler, rather than when set before the event is fired, via config.\nThis is what has lead us to think that the FederationConfiguration.IdentityConfiguration is actually read before the event is fired, so no matter what properties you change after that, they will have no effect.\nThat seems to defy the point of having the event handler, but that's what we are seeing!\n. Thanks Brock.  What we're trying to do is to be able to programatically set up the same configuration that is currently set via the config files.  In our real scenario the audience URIs are less important than the IssuerNameRegistry.  In that case what I'm aiming to do is load the thumbprint and name from a configuration web service when the application starts up, rather than having to have it \"hardcoded\" into the config file.\nIt seems that all the settings accessible via the IdentityConfiguration property have been read, and perhaps cached somewhere, by the time the event is fired, so no matter what you alter on the objects, the actual settings used (in this case when requesting an ActAs token) are the ones which were there before the event is fired, not the values afterwards.\n. Thanks for your help Brock.  I think we have got a bit closer to the issue, so I'll explain in case it helps anyone else reading this.\nIn the MVC and WCF sample, the web service being called with the ActAs token is part of the same project (and hence IIS application) as the MVC site.   This means they are sharing the same config files.  So when we removed the config for the MVC site, and replaced it with the code in the event handler, the WCF configuration also got affected.  It appears though, that the event handler in the Application_Start() of the MVC site wasn't affecting the WCF service.  Perhaps that reads the config from the file before the MVC site fires up?\nAnyway, when we switched the sample to call a WCF service in a separate project, and therefore configured totally separately to the MVC app, the changes to the MVC app config file no longer messed up the config to the WCF service, so everything worked fine.\nThanks again.\n. ",
    "infinity-g": "Thanks for feedback - I'll probably look at getting ADFS set up to test my prototype.\n. ",
    "Fujivato": "It may be to do with the way IIS Express does not by default recognize https bindings; check out this page and see if it helps: http://www.hanselman.com/blog/WorkingWithSSLAtDevelopmentTimeIsEasierWithIISExpress.aspx \n. ",
    "janbalcarik": "Thank you, that's it\n. My mistake. In \"Relying Parties & Resources\" in the \"Redirect URL\" I had https://lictocloud.accesscontrol.windows.net value should be https://lictocloud.accesscontrol.windows.net/v2/wsfederation\nthank you john\n. ",
    "cmgambino": "We are trying to write multiple apps, with tenancy, and figured Home Realm Discovery would be appropriate.\nHere is the problem we are trying to solve:\nWe have a shared concept of tenancy across multiple applications, along with multiple authentication methods.\nWe have multiple identity providers:\n1) A generic identity provider (using Sql Membership Provider), that takes tenant, username, password to authenticate\n2) An active directory identity provider, that takes tenant, username, password and is configured to go to specific active directory domains.\n3) An \"oauth\" identity provider, which is configured to trust the signature itself, as long as the signed request can be verified with a shared secret key.\nSo using the federation gateway, we need to decide which identity provider to use.  However, in many cases, the identity provider is written generically, so it needs the \"tenant\" information as well (which is what the application has set as the Home Realm).\nIn addition, we would really like choose which Identity Provider is used as a combination of Realm and Home Realm, but that would probably take some modification (but this may not be completely correct usage of these terms; I'm just getting familiar with this system).\n. Okay, I'll review the spec and see what I make of it.  If all else fails, we can configure separate identity providers with appropriate query strings for each home realm.\n. Is this something that I could write, and submit for inclusion? Or does something like this go against WS-Trust / WS-Federation?\n. ",
    "Napkin41": "May I mooch from this thread?\nI'm also doing something similar, but I'm doing it within a WCF service. I've looked at the above example thoroughly, but my question is, can we include claims when generating an access token like in the example above?\nI know it's four years later, but that's probably a testament to the client's need to upgrade. Thanks in advance!\nP.S. I probably need to create a \"new issue\" for this question, but I thought I'd try here first.. Oh, I feel silly. So then I suppose that means we have to remember what we\nset it to before it goes into the void. Thank you for your reply!\nOn Tue, Aug 22, 2017 at 11:50 PM, Dominick Baier notifications@github.com\nwrote:\n\nGreetings to the 90ies ;)\nThat's by design - the secrets gets stored hashed. You can't have it back\nin plain text.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer2/issues/890#issuecomment-324220321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Adz9MpqOfbA4o4tClCmLwFrHDnqG6iZIks5sa6-igaJpZM4O_QrL\n.\n. \n",
    "grahamehorner": "I most definitely would be interested in your implementation of these features; as I think these should be core features of an identity server.  I was thinking of changing the IUserRepository and the IUserManagementRepository to allow password change/reset and the ability for an administrator to enable/disable a user account or unlock a locked account.\nI'd be happy to test and give feedback with regards to the implementation; look forward to seeing your work.\ncheers\nGrahame\n. It sound like you need to exchange the SAML token with a SWT or JWT as a these are lightweight tokens for accessing web services from a client application (browser).  \n. ",
    "fbrem": "Count me in, i'm also keen to get such a plug-in...\n. @bob030 are you willing to share this project? I could help out as well if there is a need for customizing the project.\n. At least i figured out, why there haven't been any claims. It seems, that the JWTSecurityTokenHandler expects a NameIdentifier-Claim. Without that something goes wrong and the ValidateToken-Method creates no claims for the ClaimsIdentity. I don't know, if this is a IdentityServer-Issue or a JWTSecurityTokenHandler-Issue.\n. Thank you for the infos, Dominik...\n. ",
    "HornerG": "@leastprivilege @Ruudvdl If the IUserRepository/IUserManagementRepository was extended with interface (IUserRepositoryV2/IUserManagementRepositoryV2) we could indicate which features the implementation supported.  features like user registration/change password/password reset etc.. I do agree not everyone need these however an Identity Server is not also just a STS provider and in some deployments require users to manage their account password/profile information; like google/windows live/facebook etc.\n. Ok, thanks but not exactly what i had in mind as i was looking for user self management, rather than extension of the  management interface which is for the administrator roles.\nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"Ruudvdl\" notifications@github.com\nSent: \u200e01/\u200e05/\u200e2013 09:00\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nCc: \"Grahame Horner\" Grahame.Horner@btinternet.com\nSubject: Re: [Thinktecture.IdentityServer.v2] User Password/Profile (#152)\nthis is my IUserManagementRepository:\npublic interface IUserManagementRepository\n{\n    void CreateUser(string userName, string password);\n    void DeleteUser(string userName);\n    IEnumerable GetUsers();\n    IEnumerable GetUsers(string filter);\n```\nvoid SetRolesForUser(string userName, IEnumerable roles);\nIEnumerable GetRolesForUser(string userName);\nIEnumerable GetRoles();\nvoid CreateRole(string roleName);\nvoid DeleteRole(string roleName);\nbool CreateOrUpdateOAuthAccount(string provider, string providerUserId, string userName);\nvoid DeleteOAuthAccount(string provider, string providerUserId);\nvoid SetUserDirty(string email);\nUserProfile GetByUsername(string username);\nUserProfile GetByExternalKey(string externalKey);\nvoid Update(Thinktecture.IdentityServer.Models.UserProfile model);\nIEnumerable VerifiedDirtyProfiles();\nThinktecture.IdentityServer.Models.UserProfile GetUserProfileByConfirmationId(string id, string user);\nThinktecture.IdentityServer.Models.UserProfile GetUserProfileByPasswordResetId(string id);\nbool ValidateTemporarilyValidGeneratedToken(string userName, string Token, EmailFunctionType type);\nbool ResetPassword(string token, string password);\nbool ValidateEmailChange(string token, string email);\nvoid RemoveTemporaryValidToken(string userName, string token);\nbool CheckUserForValidatedTokenOrValidateToken(string email, string token, EmailFunctionType type);\nvoid SendConfirmationMail(string email, string token);\nvoid SendPasswordResetMail(string email);\nvoid SendEmailChangeRequestEmail(string oldEmail, string newEmail);\nvoid SendEmailChangeConfirmationMail(string newEmail, string oldEmail);\nstring GetNewEmailFromUser(string email);\nbool ChangePassword(string email, string currentPassword, string newPassword);\n```\n}\nthis should give some idea whatIi have implemented\n\u2014\nReply to this email directly or view it on GitHub.\n. Personally i don't like SimpleMembership at all, I've had issues with this when using sql azure as the backing store amongst other issues with its dependancies.\nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"vjragind\" notifications@github.com\nSent: \u200e02/\u200e05/\u200e2013 20:12\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: Re: [Thinktecture.IdentityServer.v2] Single sign out issue ADFSidentity server integration (#195)\nWe changed identity server only because we needed to authenticate against a custom user store. That's why we use simple membership. Now how would I go about using my custom \"user\" table and still use the login methods of identity server ? \nSent from my iPad \nOn May 2, 2013, at 1:00 PM, \"Dominick Baier\" notifications@github.com wrote: \n\nWhy do you use it - and took the burden to change plain IdSrv? ;) \nI don't mean to throw out simple membership - just don't use the Login API since it seems to combine credential validation and setting a cookie. Both operations must be available separately somehow \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014\nReply to this email directly or view it on GitHub.\n. I'd be happy to contribute.\ncheers\nGrahame\nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"Dominick Baier\" notifications@github.com\nSent: \u200e14/\u200e05/\u200e2013 17:14\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: Re: [Thinktecture.IdentityServer.v2] Programmatically registering newusers (#205)\nI will close that for now. I anyone wants to volunteer to build such a web API interface, lemme know.\n\u2014\nReply to this email directly or view it on GitHub.\n. You could change the login page to have an additional value domain/realm this is then used to determine which authentication provider you should valid against. I've done this in a few projects and it works well.\nThe domain/realm list is populates from the membership.providers in my implementation.\nGrahame \nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"vjragind\" notifications@github.com\nSent: \u200e09/\u200e05/\u200e2013 16:42\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: [Thinktecture.IdentityServer.v2] Authenticating Users using ADFS fromthe IdentityServer login page (#207)\nI am using IdentityServer's login page to authenticate users against a custom user store(thanks to Dominick and Paul Lemmers) and it seems to work great.\nHowever I have a quick question (more of a question than an issue). Lets say user2 of the same application needs to authenticated using Active Directory instead of the custom user store - is there a way to use the same login page in Identity Server but authenticate using Active Directory? (maybe using WSTrust)?\nI hope this question makes sense, if not I can explain better.\n\u2014\nReply to this email directly or view it on GitHub.\n. I have created an interface IUserRepositoryEx which has the additional method signature of bool ValidateUser(string userName, string password, string domain).\nThe implementation is basic (exception handling removed for brevity, see below)\npublic bool ValidateUser(string userName, string password, string domain)\n{ return Membership.Providers[domain].ValidateUser(userName, password); }\nThe SignIn method on the AccountController needs modification as will the SignIn view to supply the additional value; also you'll need to add the additional Membership provider to the Web.config  I used an LDAP connectionstring to allow signin using active directory. \n. That's correct; the additional value is used to select which Membership provider to use; the web.config LDAP connectionstring setup can be found at http://msdn.microsoft.com/en-us/library/ff648345.aspx\n. Q: are you offloading ssl at the proxy, and using plain http for idsrv ?\nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"bodayit\" notifications@github.com\nSent: \u200e15/\u200e05/\u200e2013 13:09\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: [Thinktecture.IdentityServer.v2] thinktecture reply address withproxy (#214)\nI am trying to get thinktecture id server v2 to run behind an apache reverse proxy. \nI installed the ssl certificate in apache, the proxy will forward the requests with http to the iis in the dmz.\nBut when accessing the www.external.com/IdSrv/ address it will redirect to the internal ip of the iis server.. https://192.168.1.2/IdSrv/ the result is a timeout.\nmy entry in the ssl default virtualhost of apache looks like this\nProxyRequests off\nProxyPreserveHost On\nSSLProxyEngine on\nProxyPass /IdSrv/ http://192.168.1.2/IdSrv/\nProxyPassReverse /IdSrv/ http://192.168.1.2/IdSrv/\ndoes anyone has a working config for this szenario?\nBest Regards\nBastian\n\u2014\nReply to this email directly or view it on GitHub.\n. I've seen this before when the web.config of the web application has incorrectly been setup, check the thumb print etc. of the web application and the RP settings on id server.\nSent using an HTC 8x Windows Phone 8\n-----Original Message-----\nFrom: \"Chris Keenan\" notifications@github.com\nSent: \u200e30/\u200e05/\u200e2013 21:59\nTo: \"thinktecture/Thinktecture.IdentityServer.v2\" Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: [Thinktecture.IdentityServer.v2] Issue with setting up a test RP(#233)\nUsing this video as the basis for setting up the RP (http://vimeo.com/51666380 - Thinktecture IdentityServer v2 Tutorial: The 1st Web Application). Here is the scenario:\n1) Make request to RP\n2) Receive a 302 to IdentityServer to account/signin\n3) Try to log in with the admin account I created on IdentityServer (roles: IdentityServerAdministrators and IdentityServerUsers) \nThe login page redirects to issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%3a560 etc. I get a 302 to the account/signin page again.\nI get this message:\nYou are currenty logged in as xxxxx, but you requested a resource that you were not authorized for. Either provide credentials that do have access or contact your administrator to grant you access.\nI'm sorry if this question has been asked 1000 times. I did try this on 2 machines and realize that it's probably an IIS setting or a cert problem locally (I changed Protocal settings on WSFed to not require SSL).\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "rlsmallwood": "Great!  Thanks for clearing that up.  I guess I was coming to the same conclusions but I'm at a place where this confirmation (on OAuth) was desperately needed.\nSo many thanks for all of your efforts.  Can't imagine how much work you've put into this.\n. ",
    "rolyv": "Since I'm still just getting my feet wet with Claims based authentication, pardon if my question doesn't make sense. What would be the correct pattern then to have active authentication against your own internal identity provider with an option for passive authentication with identity providers like Google or Facebook? Wouldn't that be a mixture of the two? And would Identity Server support such a scenario?\n. I've done quite a bit of Googling and I haven't found any examples showing what I need to do in my MVC4 application for active authentication. So when someone types in their credentials on my app's login page, I don't fully understand how my MVC app should interacts with Identity Server. Should my MVC app be using a WSTrustClient to request a token? The token I get back from Identity Server should have all the claims already on it? I apologize if this isn't the best place for this discussion. Let me know if there's another forum I should direct my question to.\n. So in my AccountController, I have an action called SignIn that calls WSTrustClient.Isue(...). That returns a SecurityToken object. How does that get turned into a ClaimsPrincipal?\n. ",
    "ronnelsantiago": "cool thanks for that, will wait for that write up then..\n. Hi, Im getting another build err for a missing nuget.exe.. can u kindly add nuget.exe to the \"Thinktecture.IdentityServer.v2\\samples\\AdfsIntegrationFullSample\" sln.. thanks appreciate it..\n. ",
    "vvishnu": "Thanks @astaykov ...That was the problem.\n. ",
    "Hamels": "@astaykov I have the same problem here. Is it not possible with:\nlocation path=\".\" inheritInChildApplications=\"false\"\n         Stuff that shouldn't be inherited goes in here \n /location\n(I had to remove the angle brackets or the code snippet didnt show)\nMy ssl certificate forces me to have my main application as a website and the Idsrv as a application within the main application. Or is there an other way to make it work?\nThank you\n. @leastprivilege you wrote \" You can also manually convert the SAML token.\" a few posts above. Do you have an example on how to do this? Im very interested. Thanx\n. Hi Dominic, I found my solution here. http://stackoverflow.com/questions/11312314/cannot-serialize-saml2assertionkeyidentifierclause\nThanx\n. FYI, i got it working.\n. ",
    "johncrim": "I get this error if I, in VS 2013: \n- Create a new ASP.NET MVC app, of the Internet (forms) auth variety\n- In project properties set the URL to a virtual directory in IIS express (eg http://localhost:1234/LoginApp )\n- Install the EmbeddedSts NuGet package\n- Follow the web.config intergration instructions in the EmbeddedSts readme.txt\nThe error goes away if I change from a virtual directory URL to a root URL (eg http://localhost1234/).\n. ",
    "satishkbg": "Thanks for the pointers, will try the approach. \nRegards\n. Well i haven't, but guess it will work as per msdn w.r.t virtual apps.\nRegards\n. No, i just used the same cert i used for local testing\nALSO: I see in the cloud service configuration it has set the operating system to windows server 2012, will this make a difference i.e. the OS family?\n. Nothing in event log, but in RD, when I try to directly browse the site from IIS, it throws the error\n[InvalidOperationException: Signing certificate not found: CN=127.0.0.1, O=TESTING ONLY, OU=Windows Azure DevFabric]\n   Thinktecture.IdentityServer.Repositories.Sql.Mappings.ToDomainModel(KeyMaterialConfiguration entity) +575\n   Thinktecture.IdentityServer.Repositories.Sql.ConfigurationRepository.get_Keys() +137\n   Thinktecture.IdentityServer.Web.GlobalFilter.InitialConfigurationFilter.OnActionExecuting(ActionExecutingContext filterContext) +188\n   System.Web.Mvc.Async.AsyncControllerActionInvoker.InvokeActionMethodFilterAsynchronously(IActionFilter filter, ActionExecutingContext preContext, Func`1 \nnextInChain) +145\nI tried just a dummy asp.net web role with SSL endpoint with self-issued certificate and published to azure, i can browse it with the warning. Guess the idsrv is looking for something else?\nRegards\nSatish\n. I see that, i changed the signing certificate setting and selected the other cert i uploaded and now all seems fine.\nThanks for helping and getting me started.\nRegards\nSatish\n. Ok, I see if I create a new role and add the user to that, then it does  emit the role claim.\nPLS NOTE: In the V2 roles administration page, for new role BOTH BUTTONS SAYS CANCEL :)\n. Yes, I did just that - added a Password management page and linked it from SignIn page.\nThanks\n. OK, so the service.svc-->ClaimsService is the one I guess you're pointing to which is configured to federate to the idsrv WS-Trust ?\n. ..and do I need the Thinktecture.IdentityModel?\n. I get an error Could not find a base address that matches scheme http for the endpoint with binding CertificateWSTrustBinding. Registered base address schemes are [https]. when the client calls. \nIf I browse to the WS-Trust mex endpoint on my local dev machine (which is currently hosting the id-server at https://satideawin7ult/idsrvv2src/ip-sts) below if the FederationMetadata.xml\nxml version=\"1.0\"?\n-----PePZ+W631Qzo41J+aN7elMFzgpNi+UfQguKD6D+B3PU=Vg==--=-fed:TokenTypesOffered/fed:TokenTypesOffered-fed:ClaimTypesOffered/fed:ClaimTypesOffered-fed:SecurityTokenServiceEndpoint-wsa:Addresshttp://127.0.0.1/issue/wstrust/message/username/wsa:Address/wsa:EndpointReference/fed:SecurityTokenServiceEndpoint-fed:SecurityTokenServiceEndpoint-wsa:Addresshttp://127.0.0.1/issue/wstrust/message/certificate/wsa:Address/wsa:EndpointReference/fed:SecurityTokenServiceEndpoint-fed:SecurityTokenServiceEndpoint-wsa:Addresshttps://127.0.0.1/issue/wstrust/mixed/username/wsa:Address/wsa:EndpointReference/fed:SecurityTokenServiceEndpoint-fed:SecurityTokenServiceEndpoint-wsa:Addresshttps://127.0.0.1/issue/wstrust/mixed/certificate/wsa:Address/wsa:EndpointReference/fed:SecurityTokenServiceEndpoint-fed:PassiveRequestorEndpoint-wsa:Addresshttps://127.0.0.1/issue/wsfed/wsa:Address/wsa:EndpointReference/fed:PassiveRequestorEndpoint\nHere's the RP wcf service's web.config binding details\n\n\n\n\n\n\n\n\n\nand the system.identityModel config\n\n\n```\n \n\n\n\n\n\n\n\n\n```\n\n\nand the system.identityModel.services config\n\n\n\n<!-- need to change the 'reply' to match your local machine -->\n<wsFederation passiveRedirectEnabled=\"true\"\n              issuer=\"https://127.0.0.1:444/issue/wsfed\"\n              realm=\"https://localhost/FederatedWcf/Services/\"                  \n              requireHttps=\"true\" />\n\n\n. Ok, I have managed to get it working, It was my URL's causing the problem. I should say it was rather simple.\nThanks Dominick as always.\n. Ok thanks. will try that.\n. I tried that, but I still don't see any trace logs in the folder.\nI have set AutoFlush=\"true\", and given the IIS_IUSRS WRITE permissions to that folder.\nSince this is in azure emulator, i.e. running in IIS Express, I have given MyMachine\\Myself also write permissions.\nStill no effect.\n. Sorry, it's working now, somehow the folder still had read only set. Thanks.\n. Sorry I missed some details - the web-role is secured by the ID-Server and so are some of its wcf services, which are accessed by worker-roles. I know the first question is more related to azure SBUS. I understand SBUS are treated as endpoints which are secured by ACS, and in general the shared-secret approach is used. But I wanted to be sure, if this was sufficient, or, if not then how about securing the SBUS endpoints with ID-Server through ACS.\n. Thanks Will look into that.\n. Thanks for clearing it :)\n. Hi Dominick\nsorry to ask on same again. I have been trying to set up federated security for a wcf service on net.tcp . This is what i've been trying using custom binding (see below my service config)\nI'm able to host the service in worker role. I'm also able to generate client service config through add service reference in vs2012. Just like to know what would be the programmatic way to pass the token creds for IdSrv v2.\nService host config:\n\n\n\n\n\n\n\n\n<endpoint address=\"net.tcp://127.255.0.1:8080/STIMEExternal\" binding=\"customBinding\" bindingConfiguration=\"FederationNetTcp\"\n              contract=\"Services.IServerTime\"/>\n    <endpoint address=\"mex\" binding=\"mexTcpBinding\" contract=\"IMetadataExchange\"/>\n  </service>\n</services>\n<bindings>\n  <customBinding>\n    <binding name=\"FederationNetTcp\">\n      <security authenticationMode=\"SecureConversation\" requireSecurityContextCancellation=\"true\">\n        <secureConversationBootstrap authenticationMode=\"IssuedToken\">\n          <issuedTokenParameters tokenType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1\">\n            <issuer address=\"https://localhost/V2IdServer/issue/wsfed\" binding=\"ws2007HttpBinding\" bindingConfiguration=\"STSBinding\">                  \n            </issuer>\n            <issuerMetadata address=\"https://localhost/V2IdServer/issue/wstrust/mex\" />\n          </issuedTokenParameters>\n        </secureConversationBootstrap>\n      </security>\n      <binaryMessageEncoding />\n      <tcpTransport />\n    </binding>\n  </customBinding>\n  <ws2007HttpBinding>\n    <binding name=\"STSBinding\">\n      <security mode=\"TransportWithMessageCredential\">            \n        <message establishSecurityContext=\"false\"/>\n      </security>\n    </binding>\n  </ws2007HttpBinding>\n\n\nRequest Token method in client:\nprivate static SecurityToken RequestToken()\n        {\n            var binding = new UserNameWSTrustBinding(SecurityMode.TransportWithMessageCredential);\n```\n        var credentials = new ClientCredentials();\n        credentials.UserName.UserName = \"satish\";\n        credentials.UserName.Password = \"password\";\n    return WSTrustClient.Issue(\n           new EndpointAddress(_idsrvEndpoint),\n           new EndpointAddress(_realm),\n           binding,\n           credentials);\n}\n\n```\nIf you can point me in the right direction/place/sample.\nRegards\n. Here's the generated client app.config\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<client>\n        <endpoint address=\"net.tcp://localhost:8000/wcfservice/Service.svc\"\n            binding=\"customBinding\" bindingConfiguration=\"CustomBinding_IRemoteTime\"\n            contract=\"Services.IRemoteTime\" name=\"clientendpoint\" />\n    </client>\n. Thanks , that's one option I was going to consider, glad I'm right track.\n. Ok, I finally found the solution, just sharing for anyone else who come across the same.\n- All settings and configs remain the same. Except that I  had to use the hrd endpoint in place of wsfed endpoint in the RP web app's web.config. But I had read somewhere not to use hrd ep, so it was a bit confusing to use it or not, in the end it worked out though. \n- In Azure app, the App Id point to the STS issuer uri. Here all paths point to IdSvr since that will be the RP to Azure. That's it. It works seamlessly now.\n. ",
    "t2r": "2) I imagine that I could establish some kind of mapping bridge... a windows group ==> IdentityServerRoles.  But where would I do this?  Maybe I need to implement a RepositoryWindowsSecurityTokenHandler ???\n3) It looks like I need to add functionality to the Mapping.cs, WSTrustConfiguration, and probably a database column which is all part of the EntityModel...\n. Simple.  Thank you.  \nYou might still want to review 1) above.  Understand you are supporting the most generic, simplistic configuration as most will replace it with an LDAP component of some sort.  You may just want to do a character check before the user can be created.  Or leave as is... it's such a low priority.\n. I did it via modifying the logic in the authorization manager (because I want to leave the original functionality as is).\nThis led to a Null Reference Exception in ProviderClaimsRepository... you have a dependency on an MembershipUserCollection Email property.  I added an extra if-stmt check to isolate the null-reference exception, which definitely can't hurt adding it to the baseline...\n... GetClaims Method...\n...\n            // email address\n            var membership = Membership.FindUsersByName(userName)[userName];\n            if (membership != null)\n            {\n                string email = membership.Email;\n                if (!String.IsNullOrEmpty(email))\n                {\n                    claims.Add(new Claim(ClaimTypes.Email, email));\n                }\n            }\n. ",
    "lawrencek76": "So the way I addressed this was by creating a new validate method in the IUserRepository that returned the correct information and some claims that could then be set in the Account controller and passed to the Account controllers base SignIn method.\nNot sure if that's the way this was intended but it is meeting the need\n. ",
    "bzbetty": "Microsoft have announced official SAML 2.0 federation support for office 365 - http://blogs.office.com/2014/03/06/announcing-support-for-saml-2-0-federation-with-office-365/\nAlso with some help from Zamd we got thinktecture working with office 365 using SAML 1.1.  Needed to add claims for UPN and ImmutableId but no other code changes were needed.  Error 80045C17 was the missing claims error.\nWe also had a few issues with mismatching issuer urls and the issuer url may have needed to be http instead of https (although the site needs to be entirely https).\n. We created a IClaimsTransformationRulesRepository and in the ProcessClaims method added the following\nyield return new Claim(\"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod\", \"urn:oasis:names:tc:SAML:1.0:am:password\");\n            yield return new Claim(\"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\", XmlConvert.ToString(DateTime.UtcNow, XmlDateTimeSerializationMode.Utc));\nyield return new Claim(\"http://schemas.xmlsoap.org/claims/UPN\", upn);\nyield return new Claim(\"http://schemas.microsoft.com/LiveID/Federation/2008/05/ImmutableID\", immutableId);\n. ",
    "lafriks": "@bzbetty How did you add UPN and ImmutableId claims?\n. ",
    "spbreed": "Hi BzBetty do  you have any blogs or articles which explains this?\n. ",
    "aruss": "Thank you\n. The question is more, can I just render them there and link to actions in HRD page? Or would I need to do more than just that?\n. Thanks, I'll definitely take a closer look at it. For my solution I use MembershipReboot instead of SimpleMembership, but the rest looks the same at the first view.\n. ",
    "nickpateman": "Hi there, I'm having the same issue but believe I have selected the correct cert and uploaded it but its still complaining about the missing test cert.  I must be doing something stupid, I have my wildcard cert selected inthe role certificates section and applied to the endpoint, the thumbnail is the same.  Do I have to set it somewhere else too aside from uploading to the cloud service in the azure console.\n. I'm trying with a fresh DB as i'm guessing you're referring to a cert in the DB itself.  I tried dropping all the tables but that just broke it completely so I'll try from scratch now.\n. Yup that worked.\n. Thanks for the reply, that's the article I followed but Azure has changed a little on the app side of things so I may of done something wrong, I'll run through again, thanks :) \n. Okay I've run through again, but now I'm getting a 500 error.\nAnd yup sorry I'm getting my acronyms mixed up WAAD indeed.  The app configuration page seems to have a bunch of different stuff from the screenshots in the article since they updated the site so maybe I'm missing something.\nI used firebug to check the network activity that causes the 500 error, a cookie is posted up to the server and then the error occurs.  Maybe I need to do remote diagnostics with the azure role to find the error, I'll give that a go unless you have any other ideas of thing I should check.\n. I tried remote diagnostics but there was nothing of relevance to the 500 error in there so I might need to RDP in.\nInterestingly enough when I'm taken to the WAAD login page it takes 2 clicks to bounce back to the server for a 500, the first click makes a call elsewhere to obtain the realm of the user but doesn't proceed unless I click again.\nhttps://login.microsoftonline.com/GetUserRealm.srf?login=bob%40foobar.onmicrosoft.com&handler=1&extended=1\nNick.\n. Mybe it's got something to do with the \"keys\" section when configuring the app? I have a key in there apparently which expires in 1 year and that's not been entered anywhere on the STS.\n. If I use Chrome I don't get the standard IE \"Something went wrong error.  I get one line of text in a bold font.\n\"Sorry, an error occurred while processing your request.\"\n. Cheers, done that and located one thrown exception\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer. \n. https://login.windows.net/tennant id removed/wsfed\n\u200e3464c5bdd2be7f2b6112e2f08e9c0024e33d9fe0\nIt's strange as I made sure it matched yours too hmmm\n. \njust for sanity checking lol\n. Also I don't know if this is worth mentioning but in the Trace log, the entry before the exception contains no references to login.windows.net, but sts.windows.net.  The audience attribute contains my STS ID URI.  This is probably irrelevant but just thought I'd mention it just incase.\nBTW, sorry to hassle you so much over this.\n. I just tried the following URL too\nhttps://accounts.accesscontrol.windows.net/tenant id removed/v2/wsfederation\nsame issue as before.  I thought i'd try it as accounts.accescontrol.windows.net is what's mentioned in the x059 cert.\n. okay I found the issue.  It needed to be in caps.  I changed the case to caps and it logged me in.\n. Hey Paul,\nI had to wrote the thumbprint in caps before it would work. Can you send the rest of the info for your identity provider, but remove your tenant id.\nSent from my iPhone\nOn 22 Jul 2013, at 19:28, \"Poul S?rensen\" notifications@github.com<mailto:notifications@github.com> wrote:\nWhat needs to be caps?\nI have thumbprint: ?3464C5BDD2BE7F2B6112E2F08E9C0024E33D9FE0\nand also gets\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\n( i will close this again when i resolve it, just hoping to get nickpatemans help).\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/306#issuecomment-21364927.\n. Good to hear you got it working!\nSent from my iPhone\nOn 22 Jul 2013, at 21:22, \"Poul S?rensen\" notifications@github.com<mailto:notifications@github.com> wrote:\nYe, found StringComparison.OrdinalIgnoreCase in the GetIssuerName.\nI ended up configuring it local and enabling debugger and took the correct issuer thumbprint from the debug window :=) I still cant see when i compare them what the issue was.\nIts working now.\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/306#issuecomment-21372556.\n. Oh okay, my conversion routine must of stripped it out.  Cheers for the info.\nSent from Windows Mail\nFrom: Dominick Baier\nSent: ?Monday?, ?22? ?July? ?2013 ?22?:?33\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Nick Pateman\nThere's a known issue when you copy thumbrints out of the .cer standard windows dialog. Some invisible unicode character that mess up the string comparison.\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/306#issuecomment-21377444.\n. Excellent many thanks that worked great.\n. Yeah so I programmatically create them an account so they can sign in just on the sts without using the 3rd party.  I'm not going to be storing any passwords, just their username / identity.\n. I've managed to progress by creating an enrol action on the sts with the following code,\nByte[] pBytCookie = Convert.FromBase64String(Request.Cookies[\"idsrvauth\"].Value);\n        SessionSecurityToken pSSTToken = FederatedAuthentication.SessionAuthenticationModule.ReadSessionTokenFromCookie(pBytCookie);\nI should be able to create the account programmatically now and proceed many thanks :)\n. Hi Dominic,\nMaybe I'm getting confused as to where the 2 cookies are coming from the I currently have,  named FedAuth and FedAuth1.\nIs there any other way to redirect back to the STS, i'm mainly after their validated identity, or at least some form of identity such as email so that I can perform a few steps in order to setup 2 factor authentication for them\nNick.\n. Is there any way I can get it to issue one anyway?  Or is this not possible?\nI have no idea what those 2 cookies are then but they definitely exist.\n. Hi Dominick,\nWhat I would like to achieve is once the id server (STS) knows the user was successfully authenticated, pass them through an additional step staged on the STS.  This is why I originally thought I'd have to pass a token back for validation.  Is this possible anyway?  I understand the STS gets hit again after authentication takes place, maybe I can intercept there?\nNick.\n. Excellent I shall look at that, thanks again for your time!\n. Thanks Dominick :) I ended up using an existing claim, the OID. I feel this is unique enough to complete the process for now so no additional claims need be added.  Many thanks for your time.\n. Hi Brock,\nI'll describe my work flow as it's got an extra step in there.\n1.  User selects to login using the Home Real Discovery page\n2.  User authenticates and is redirected back to the site during this step, when the federation token passes through the HRD controller, I grab their identity and store it  (this is the bit that can break the flow)\n3.  The site the user then gets authenticated to checks their authentication method, if it's not my specific solution it redirects them back to the STS in order to finish setting up their 2 factor authentication token (in browser).\n4.  Once setup the user is bounced back to the site under their new context, not the original HRD choice.\nThis all works if, in step 2 I use the membership provider to create their account... i.e.\nif (Membership.GetUser((String)pStrEmail, true) == null)\n{\n    Membership.CreateUser(pStrEmail, Guid.NewGuid().ToString());\n    Roles.AddUserToRole(pStrEmail, \"IdentityServerUsers\");\n}\nthat enables the following to work in step 4....\nActionResult pArtSignInResult = SignIn(\n  pTokToken.EndUserID,  << users email \n  \"myauthenticationmethodstring\",\n  String.Empty,\n  true,\n  ConfigurationRepository.Global.SsoCookieLifetime,\n  null);\nOne problem with this of course is that although I may have a secure account that requires 2 factor authentication, I also have a normal account with a random password.  What I'm trying to do to resolve this is (for now) to move it into a separate azure table that just holds the email addresses (identities), nothing else.\nProblem is if I don't create the user using the Membership provider the same workflow doesn't work as the SignIn method fails.  Is there any way to circumvent this?\nI hope this makes things slightly clearer, many thanks for your time.\n. I'll take another look specifically at the query strings to see if they are getting lost and get back to you.\n. Hi Brock,\nI noticed an issue further down in my code that sorted this out, as you said, it was screwing with the query string so all is working now or so it seems, many thanks for your time :)\n. ",
    "ChrisSimmons": "My apologies on the duplicate issue coming from the pull request (issue #181)\n. Moved detail over to issue #181.  Closing this one.\n. My apologies.  I didn't realize this would create a new issue altogether.\n. Will do.\n. I can confirm that this issue exists and that the proposed fix works.  My process:\n- Pulled down current code for IdSrv and set up on https://localhost/IdSrv\n- Created a new, blank MVC4 Relying Party app at http://localhost:50986/RelyingPartyCaseSensitive/\n- Created a new, blank MVC4 Relying Party app at http://localhost:50986/relyingpartycaseinsensitive/\n- Set up each as a registered relying party at https://localhost/IdSrv\n- Log into both RP apps\n- The STS wsfedsignout cookie is now http://localhost:50986/relyingpartycasesensitive/|http://localhost:50986/relyingpartycaseinsensitive/.  Note the forced lower-case values.\n- Turning to http://localhost:50986/relyingpartycaseinsensitive/, I fire a FederatedSignOut() which sends wa=wsignout1.0 to the STS and I get the expected \"Sign Out\" view with the \"Return to application\" link.\n- As expected, if I try to access http://localhost:50986/relyingpartycaseinsensitive/, I am immediately redirected to the STS sign-in view.\n- However, I can still access http://localhost:50986/RelyingPartyCaseSensitive/ (i.e. the Fedauth cookie local to the RP is still there;  the wsignoutcleanup1.0 call back to that RP didn't work.)\n- I can verify this by looking at the hidden IFRAME code in IdSrv's signout view:\nhtml\n<iframe style=\"visibility: hidden; width: 1px; height: 1px\" src=\"http://localhost:50986/relyingpartycasesensitive/?wa=wsignoutcleanup1.0\"></iframe>\n<iframe style=\"visibility: hidden; width: 1px; height: 1px\" src=\"http://localhost:50986/relyingpartycaseinsensitive/?wa=wsignoutcleanup1.0\"></iframe>\n- Notice that instead of calling the mixed-case http://localhost:50986/RelyingPartyCaseSensitive/?wa=wsignoutcleanup1.0 it calls the whole thing forced lower-case.\n- Now I replace SignInSessionsManager in IdSrv with the proposed change (essentially remove all calls to String.ToLowerInvariant())\n- Again, log into both RP apps\n- The STS signout cookie is now http://localhost:50986/relyingpartycaseinsensitive/|http://localhost:50986/RelyingPartyCaseSensitive/.  Note the RelyingPartyCaseSensitive app's URL is now unmodified, with case differences retained.\n- Once again, turning to http://localhost:50986/relyingpartycaseinsensitive/, I fire a FederatedSignOut() and I get the \"Sign Out\" view.\n- This time, in the hidden IFRAME code the varying case for RelyingPartyCaseSensitive is retained:\nhtml\n<iframe style=\"visibility: hidden; width: 1px; height: 1px\" src=\"http://localhost:50986/relyingpartycaseinsensitive/?wa=wsignoutcleanup1.0\"></iframe>\n<iframe style=\"visibility: hidden; width: 1px; height: 1px\" src=\"http://localhost:50986/RelyingPartyCaseSensitive/?wa=wsignoutcleanup1.0\"></iframe>\n- And, as I expected, both apps are now signed out\nIn my opinion, this situation is confused by the fact that, no matter if the signout cleanup actually works, you still get back a green checkmark image.  The WIF functionality there is misleading, at best.\n. Of course!  I hope this helps.\n. ",
    "khloroform187": "Right now I am a little confused with the authentication options. From what\nI understand, there are two approach: 1- Role authorization 2- Claim\nauthorization.\nRole authentication seems not enough granular to do the low-level\nauthorization in my application. Claims authorization seems a better\npattern for what I want to do. Looking in the source code of the\nIdentityServer (AccountController SignIn method), I see that it is possible\nto add claims in the SessionSecutiryToken. But it implies that the\nauthentication server would know all the claims (permissions in my\nvocabulary) of all the applications that will use the authentication\nserver. This makes no sense because of the high number of permissions in\nthe different applications.\nMy feeing is that I could modify the SignIn method to includes Claims that\nin reality, will be roles (roles managed by the authentication server, and\npermissions managed by the specific applications).\nDoes it makes sense? Do I mixed up basic concepts?\nOn Tue, Apr 16, 2013 at 6:16 PM, Brock Allen notifications@github.comwrote:\n\nIdentityServer has a few extensibility points. Each of these extensibility\npoints is modeled with an interface and you would just have to configure\nyour class(es) in the ~/configuration/repositories.config.\nI guess the real trick is to determine which piece you need to customize\nand then which interface is the right one for you to implement.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/183#issuecomment-16475290\n.\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n. http://vimeo.com/43549130\nThis presentation answer many of my questions :)\nOn Wed, Apr 17, 2013 at 9:30 AM, Normand B\u00e9dard normand.bedard@gmail.comwrote:\n\nRight now I am a little confused with the authentication options. From\nwhat I understand, there are two approach: 1- Role authorization 2- Claim\nauthorization.\nRole authentication seems not enough granular to do the low-level\nauthorization in my application. Claims authorization seems a better\npattern for what I want to do. Looking in the source code of the\nIdentityServer (AccountController SignIn method), I see that it is possible\nto add claims in the SessionSecutiryToken. But it implies that the\nauthentication server would know all the claims (permissions in my\nvocabulary) of all the applications that will use the authentication\nserver. This makes no sense because of the high number of permissions in\nthe different applications.\nMy feeing is that I could modify the SignIn method to includes Claims that\nin reality, will be roles (roles managed by the authentication server, and\npermissions managed by the specific applications).\nDoes it makes sense? Do I mixed up basic concepts?\nOn Tue, Apr 16, 2013 at 6:16 PM, Brock Allen notifications@github.comwrote:\n\nIdentityServer has a few extensibility points. Each of these\nextensibility points is modeled with an interface and you would just have\nto configure your class(es) in the ~/configuration/repositories.config.\nI guess the real trick is to determine which piece you need to customize\nand then which interface is the right one for you to implement.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/183#issuecomment-16475290\n.\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n. Yes!!\nThank you!!!\nOn Mon, Apr 22, 2013 at 9:28 AM, Dominick Baier notifications@github.comwrote:\n\nDoes this help?\nhttp://leastprivilege.com/2012/10/26/using-claims-based-authorization-in-mvc-and-web-api/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/189#issuecomment-16785575\n.\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n. I got some interesting informations.\nThis is the code from the SAM (http://dotnetinside.com/framework/v4.0.30319/framework/v4.0.30319/System.IdentityModel.Services/SessionAuthenticationModule). We can see that the method WriteSessionTokenToCookie calls the CookieHandler.Write,\nAnd in the cookieHandler code (http://dotnetinside.com/framework/v4.0.30319/System.IdentityModel.Services/CookieHandler), if IsPersistent is false, it sets the DateTime.MinValue.\nAfter that, in the ChunkedCookieHandler (http://dotnetinside.com/framework/v4.0.30319/System.IdentityModel.Services/ChunkedCookieHandler) in the WriteCore method, the httpCookie.Expires is only set when the provided expirationDate is different from DateTime.MinValue. Looks like the IsPersistent attribute name on the SessionSecurityToken is misleading. \nAlso, from the documentation from MSDN, we can see that: \"If the IsPersistent property is true, the cookie is written as a persistent cookie. Persistent cookies remain valid after the browser is closed until they expire.\". The IsPersistent seems to only determine if the cookie will be deleted from the browser, and is not related to the length of the expiration date.\nLetting the remember me uncheck will in fact let the httpCookie.Expires not set, so this can explains the 1 year expiration length (probably the maximum default lenthg when not specified?).\n. Thank you!\nOn Thu, Aug 8, 2013 at 4:30 AM, Dominick Baier notifications@github.comwrote:\n\nThe \"remember me\" makes the cookie persistent - otherwise it is a session\ncookie only.\nYou can control the timeout of the persistent cookie in general settings.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/344#issuecomment-22309654\n.\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n. Sure.\nOn Wed, Aug 14, 2013 at 10:29 AM, Brock Allen notifications@github.comwrote:\n\n@khloroform187 https://github.com/khloroform187 -- can we close this\nthen?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/344#issuecomment-22639442\n.\n\n\nNormand B\u00e9dard  |  1.819.290.4335\n. ",
    "SlawekN": "Thanks Dominick for the valuable input!\nSo I actually modified ADFS server configuration and the path is as follows:\nADFS management console > Trust Relationship > Relying Party Trust > On the Properties of the RP > Endpoints tab changed the URL to the HRD endpoint of the IdSrv.\nWorks as expected :)\n. I transform them by implementing IClaimsTransformationRulesRepository.\n. Thanks Dominick! Works perfect. This is awesome you guys made it so extensible :+1: \n. Thx! I checked wiki and samples but I think this does not suit my needs.\nAdfsIntegrationSampleClient - app calls ADFS endpoint directly and then validates the token in Identity Server.\nAdfsIntegrationFullSample - WebRP app - user first is redirected to login page and then the AdfsIntegrationProxy can do its job.\nPerhaps I am missing something?\nI would like to have Identity Server working as the only authorization point (without redirection to ADFS or other identity providers).\nShall I do some custom development to achieve this?\n. Indeed Dominick, this is what I am looking for :)\nI have not found it in examples, though. But after second look into AdfsIntegrationProxy class I think I got it:\nThis is the code for future reference:\nvar adfsIntegrationUrl = \"https://IdSrv.com/issue/adfs\";\nvar adfsProxy = new AdfsIntegrationProxy(adfsIntegrationUrl);\nTask tokenResult = adfsProxy.UsernameToJwtAsync(\"username\", \"password\", \"realm\");\nreturn tokenResult.result;\nOne more question - if I want to retrieve also ADFS claims I need to modify TokenResponse class, right?\n. I mean claims coming from ADFS. Base 64 decoding access token revealed the claims :) \nThank you so much for all the hints!\n. This makes sense. Thanks.\n. ",
    "Dutchboy": "oh, I forgot to mention, I've activated tracing (in the configuration subdir) and the thinktectureIdentityServer.svclog shows \"useful\" info for the above...\nAuthorization for token issuance failed because the user is anonymous - where you'll see the above user/pwd is set...\n. !!.... I just added a \"Client Credential\" - on user-level on both \"dominick\" and on \"admin\" added the .cer file certificate.....!!!!\nAnd now - running the tests, shows some changes.....\noriginal - OAuth2Test - green, last three red - no valid client credentials, no token validation\n..... only one red - the last one - ValidUserNameCredentialWithTokenValidation\n..... two LESS red....!\nStill all red are PolicyEnforcementTest and ReplyToHandlingTest\noriginal - SimpleHttp - green, except ValidUserNameCredential, ValidUserNameCredentialJwt\n.... and now all green, incl the above, but now the last two are red - Saml11 and Saml2\nWSTrust - still all red\noriginal Passed 15, failed 33\nNow Passed 17, failed 31\n. Wow.... Dominick, thanks for the quick response....\nSince I'm in the process of finding out what IdentityServer really is (and is not) - and Ive been in the blind for so long during my searches - I think I'm going to make a document on it - but since I'm not doing a blog, I'll pass on my document to you....\nOkay - what I'm really after....\nSSO for all my systems\n- be it a web \"site\" (more a websystem) \n  ... for end users - but I do not want them to go to the Thinktecture IdentityServer, but login from my own websystem...\n  ... for webservers to be acknowledged by one and the other\n- be it a windows app, an iPhone app, an Android app\nOnly for authentication, since for authorization, I'll use the netsqlazman library...\nOh, by the way, the console app POC is able to logon OAuth2\nOAuth2 means that the credentials (SSL certificates) are on user-level... correct? (Maybe good for the server2server, but not on user-level.....)\nAny suggestions?\nthe tests.... I didn't know they weren't designed for fresh installs... although there are pre-reqs - which all of these do not pass :-) it is a difficult learning curve..... my first steps into the x509 area.....\nOh, by the way, have you heard about Servicestack? Your thoughts on it?\nThnx, Lars\n. Dominick,\nCan you please tell me - thing is, I'm confused.....\nI've synced through GIT - both the idsrv and the model.... thinking the a latest code is the greatest code - but the two do not like to work together at the moment..... loads of test errors when referring to eachother, whereas when idsrv solely comiled, there are less errors......\nthe OAuth2 and SimpleHTTP most/all get done...... but the WSTrust is none....\n. ... No, not really, but I've learned a lot - info is scattered all over the 'net - there is NO \"golden bullet\" that configures / troubleshoots a given scenario.... the traces are mystic - \"Keyset does not exist\" is followed by \"ID4022: The key needed to decrypt the encrypted security token could not be resolved. Ensure that the SecurityTokenResolver is populated with the required key.\"\nA lot having to do with .... ..... configuration.... which shouldn't be too hard to describe..... All....\nI'm seeing that in the Idsrv you're using an older IdModel than the 2.4.2 (which in gihub is called 4.5 - why is that?)\n..... A lot / some of the problems are caused by wrong-certificate usage / installs..... Why isn't there a tool which throroughly tests EVERY aspect - which store, which credentials (is a key viewable?).....\nA lot of times, I almost decided to throw away the whole \"security\" - how ridiculous it can be - I've spent WEEKS on it.... I even thought to shrow away the whole thinktecture thing - searching for another STS..... There is none - yeah, pay-for.... Which is mystical too....\n. ...... well..... I just wanted to mention this - about the idsrv and the idm... I'm struggling still - found out that when mixing the two - updating the idm within the idsrv from 2.3.2 to 2.4.2, you'll get a (few ) error(s).... Ok.... I'm going to struggle again.....\n. oh wow - that's quick!.....\n..... no, I know - I'm syncing from here (git).......\n. ahh.... NOOO.... You've changed the database schema again....... :-((\n. .... is it alright to NuGet the Newtonsoft.JSON package within the idm?.... In the Git it is not there - and NuGet says \"there is a newer version\" 5.0.4, while version 4.5.11 is (not)  installed.....\nbesides json, NuGet also loves to update Razor version 2 - from 2.0.20710.0 to 2.0.20715.0\n. ",
    "NhatTanVu": "ok, thanks. I'll find another way.\n. ",
    "SergeyKhutornoy": "The parameters of FederatedSignOut method are:\nsignOutUrl: The URL of the STS to receive the WS-Federation sign-out request message. Cannot be null.\nreplyUrl: The URL to be sent as the wreply value in the sign-out request message.\nTo start federated sign out process call this method in next way:\n            WSFederationAuthenticationModule.FederatedSignOut(\n                new Uri(FederatedAuthentication.WSFederationAuthenticationModule.Issuer), \n                new Uri(FederatedAuthentication.WSFederationAuthenticationModule.Reply));\n. ",
    "thk23": "Hi,\nthanks for the response.\nBasically we need to replace our old authentication system, since it no longer fits our needs.\nAt the moment we have on the one side about 15 Desktop Applications, mainly WPF, some WinForms.\nThey need to authenticate (at least) against the domain and then only need some additional basic authorization stuff like \"a user is allowed to use that application or not\". Nothing complicated.\nOne the other hand, some of the old systems and some new need to be build up newly from the ground.\nThe authentication requirements are the same as before, but on the authorization side we need a more fine granular system.\ne.g. like your UIClaims example from the Basta in Mainz about 2? years ago.\n(Permissions on Resource and Operation)\nSince the new applications consist of multiple client types, the business layer is encapsulated via WCF/Web services.\nSo i need to be able to perform authenticated service calls from a desktop application (e.g. a wpf client).\nFor the domain authentication i've setup the adfs server on a different machine and added it as IdP to the Identity Server.\nMy plan was to use the identity server for all the authentication & federation stuff.\nThen to extend it with custom implementations of IClaimsTransformationRulesRepository and IClaimsRepository for the basic authorization stuff.\nMaybe even a custom implementation of IRelyingPartyRepository since they're already defined in a own configuration database.\nRealizing that via only the ADFS service without Identity Server looks quite painful/awful to me.\nA custom attribute store, defining all the relying parties, setup all the claims send/pass though rules isn't only a hell of a work but also quite error prone and not at all maintainable.\nIdeally i'd like to authenticate directly against the identity server, but i don't think i'm able to specify an IdP in this case. Thats why i tried the ADFS -> IdSrv way above.\nAnd i'm (at least not yet) deep enough inside of the identity server to add a custom protocol for it.\nin short, i need:\nDesktop Client -> IdP -> Custom Claims\nDesktop Client -> IdP -> WCF/Web Service call \nIf i get it right at the moment, the IdP's configured within the identity server can be used for the passive federation authentication ?\nPlease tell me I'm wrong.\nIs it maybe possible to use the passive federation within a web browser client inside of a wpf application and then somehow capture the identity / security token ?\n. It's more the other way around.\nPrimarily i'd like to use the IdSrv only, since its nicely extendable and allows me to do the fancy claims transformation & relying party registration stuff in an easy and clean fashion.\nBut i need to support authentication against a windows domain too.\n. That would be enough, it's only about the windows authentication.\nThanks a lot for your help, you save my day.\n. ",
    "vamsyshine": "I have the same requirement with two identity providers( Idsrv and ADFS)\nFlows : \nIdsrv provider    web app-->HRD-->Idsrv-->HRD--->Web app \nADFS                web app-->HRD-->ADFS-->HRD--->Web app\nAbove flows works fine in web. Is it possible for WPF client?\nHow can I configure wcf service?\nIt should be configured with Idsrv details.\nwhich endpoint I will use to get the token?\nHow can I specify the identity provider in wpf client?\n. ",
    "VladimirMakaev": "Hi Dominick, do you have any timeline when this issue will be resolved? It looks like I finally found that the problem we're facing is not resolvable... \n. ",
    "danwinters": "Do you know how you plan to implement this?  I found myself needing this feature earlier this week.\nI was forced to create a \"dirty\" solution that connects to a remote ws-trust endpoint to validate the user.  It was implemented in the ValidateUser method of IUserRepository, which doesn't allow any claims to pass through.\n. Personally, i would use this right away, but obviously a feature like saml 2.0p support is more important. Are you accepting code contributions for somethng like this?\n. Is it possible to have transformation rules based on the idp?  That's one thing I miss after switching my RP-STS from ADFS to IdentityServer.\n. Any chance for custom issuer support?  I've unfortunately had to create custom attribute stores for adfs. While it's a true corner-case (mine was net.tcp wcf service), any type of support would be a plus.\n. It's not a hard requirement, but it would be nice for WS-Federation passive requests to support that.  I believe I can add a securityTokenHandlerConfiguration section to identity.config to handle this, but I was hoping that it was supported by the UI.\n. me :)  I'd use them for WS-Federation passive requestor and also with WS-Trust delegation.  I was using both with ADFS previously.\n. I'm using IdentityServer as an RP-STS, and I have 2 scenarios I need to use it for:\n1.  I have an exernal IP that I don't control with IdentityServer set as an relying party (with encrypted tokens).  When I use the passive profile to sign in, IdSrv would need to decrypt the token.  ADFS' behavior here is to search for the certificate (I believe by thumbprint) to decrypt. \n   Your update should solve this problem. but only as long as any IP uses one encryption certificate.\n2.  I retrieve a token from IdentityServer's certificate WS-Trust endpoint for an RP that requires encryption.  Next, I use delegation to exchange for a securitytoken for another RP.  This fails because you're passing an encrypted token to the ws-trust endpoint, and there's no SecurityTokenResolver set.\n   Your update doesn't solve this problem, but since I have code control here, I can decrypt myself before sending to get an actas token.\nIs there a chance there could be a list of decryption certificates instead of only one?\n. I'll test #1 later today or tonight.\nFor #2, you're right, the STS wouldn't have that decryption key normally, except idsrv does have a default decryption cert in general config.  You could use it as you did in the HRD Controller. I would be limited to one encryption certificate, but that's far better than none.\nWouldn't this work in both cases if you added a resolver when reading the tokens into a ClaimsPrincipal?  The error in both cases occurs in the handler.ValidateToken(token) call.\nMy work-around does work for now, but when you add federation support for ws-trust, you could run into this problem again.\n. That makes sense, I'll continue to decrypt before sending to the STS.\nWhen you create an \"issuedtoken\" endpoint for ws-trust in the future, will it support encrypted tokens?\n. Ok, I will test your commit and will also check the bootstrap token in wif 4.5 to see it's still encrypted (for RPs with encryption).  I will get back to you in a few hours.\n. It didn't work, but adding the resolver to validatetoken method on the HRD controller did work for me.  This is basically what I was doing already outside of your code.   Your validatetoken method isn't using the FAM, so I assume that's why the commit didn't work.\nFrom what I can see, you're only using the fam for fam.GetSignInResponseMessage(Request), which will still work with encrypted assertions (confirmed).\n. Ok, I see it now, sorry, temporary blindness :(  Let me do more testing later.  I'm not sure why decrypting further down the pipe should matter.  It's possible my customizations are the problem on my end.\nLet me try standing up a clean copy of identityserver and get back to you.\n. ok, this worked.  I see where my mistake is too.  Go ahead and close this one, +1\n. put a vote under the issue \"support encryption for ws-*\". identityserver doesn't decrypt incoming tokens, but I think Dominic is considering it as an enhancement. \nif it's a hard requirement for you, I could help you make a source modification to use the default decryption certificate listed in \"general\" settings. \n. ",
    "bgnt44": "I've just trying changing the hrdselection logic to handle that, quite easy in fact ,and work pretty well btw really good software here, good job\n. i think it wasn't a bug but more an enhancement..\nHrdselection cookie is persistent until explicitly deleted... i've change the code so hrdselection keep the current choice of the user.. for example if he's connected with facebook, he wont see the thinktecture login screen /hrd selection until he explicitly disconnect from one of the third party site.. It's just to prevent the hrdselection screen to show if the user is already connnected with a valid claims token\n. actually, my approach ignore the current hrd selection* mecanism just to provide the single sign on (hrd selection + credentials) over a complete session ... the disconnection mecanism erase the hrd selection just as it erase the credentials with a single sign out mecanism. So the first step is always choosing an identity provider and then enter credentials. once that's done the user will never be asked for hrd or credential until he (signout)from one app (or the cookie time  out) \n*but saving hrd selection is good too, so that's not perfect at all but at the time it was just a workaround\n. There is no issue in IdentityServer :) .. \nI just think that could be an option in the admin section ...  Considering this use case \nOne big website is composed of multiple iis site (or sharepoint or ...) in fact multiple RP. \nThe site design is unified,  so basically you dont want the user to authenticate when he goes to another section (another RP). You want him to be automatically authenticated by identity server. But when he leave or be disconnected, he may want to authenticated with another account from another STS.. \nThat can be done in a fork, but i think this feature could be interesting to others too\nThanks\n. the client application is an mvc application (clientapp), the call is made server-side with an httpclient object(but i can change to something else) to idsrv web api (idsrvapi)\nMoreover the client app security is provided by idsrv (jwt token and session token)\nif i understand well, the credentials are only stored in my idsrv cookie (web session/ in my browser),\nthe think is clientapp has no idea of my credentials (that the point) but idsrvapi need to be able to identify / authenticate me for exemple logging who do what\n. actually its a registration page (in clientapp) for new user but accessible only by administrators, and i want to track the registration owner in idsrv, that's why i try to pass its credentials to webapi (idsrvapi). a single account would mean impersonate the registration owner if im not mistaken and that's what i try to avoid...\nafter some though i think i could pass the registration owner id to the  idsrvapi just as another property and still using a super user credentials to issue a token... but i like the idea of protected the functionnality both ways\n. just a last question, what is the easiest way to request a token with login + password hardcoded ?\n. thanks, that work well (i've choose oauth as token issuer to make this a little better ), \n. ",
    "yakhawkes": "This was the functionality I have just been looking for and for that use case too. I was expecting Identity Server to have the option to remember the STS used for that browser session as well as let the user set the STS selection manually for a month. \n. ",
    "ciaranj": "Perhaps an option to specify whether 'remember selection' is checked by default would satisfy these wishes (I stumbled here as this was a design choice that I was pondering after a few demos of the RP->IP relationship to colleagues for a future strategy)\n. Fwiw I ran into a potentially confusing issue with the code-flow in this area, in the InitialConfigurationController#Index method, the CreateDefaultAccounts code executes and completes successfully before testing the permissions on the private key for the specified certificate.\nIf the private key is not accessible it errors and makes you choose another certificate and also the username + password for the default account, but will disallow you to re-specify the previously used username.\nNow obv. this is not a big deal as once you realise what's going on you can delete the extra users you created, however I imagine it would confuse someone.  I'm not particularly familiar enough with the code to understand immediately how one would make that code transactional, but a brief eyeball suggests that just testing the private key can be accessed before creating the default account would address that (minor) issue ?\n. ",
    "knockoutuser": "@brockallen. That's good news :). \nIf I'm not asking too much... any idea about when we might see a first draft or working prototype of this new feature?\nThanks!\n. Just one thing I noticed. When the application starts at address https://localhost:44399/account/signin?ReturnUrl=%2f the page is wrongly displaying. But if I press refresh a couple of times the CSS and JSs eventually load and the page is displayed correctly....\nAny clue of what's happening or why?\n. I don't think I understand your question. \nI installed the app in VS2012 and I'm using IISExpress to run it. When It starts it goes to https://localhost:44399/ then I get redirected to https://localhost:44399/account/signin?ReturnUrl=%2f and then page loads in error.\nIt's not supposed to do that?\n. There is no authorization element in the web.config. I just downloaded the ZIP from github, extracted it and opened the .sln file...\n. Just realized... My development IIS is setup with:\nAnonymous Authentication = Disabled\nWindows Authentication = Enabled\nI'm thinking that should be the other way around? Or...??!!\n. Made the change and it now works as you describe. Doh... talk about having a dumb moment.\nHow should I handle this github issue? Others might stumble on the same behavior... and it it's marked as a bug by @brockallen?!\n. :)\n. I understand that the method needs a proper query string but when I use AuthenticationHelper.GetRelyingPartyDetailsFromReturnUrl shouldn't the method return null? (since there is no relying party involved).\nThe application starts with an error page which ain't nice :). \nI can manage this case but thought that maybe it could be handled by the application itself... I mean, is there actually a reason why the code does CreateFromUri instead of TryCreateFromUri?\n. Nope, it doesn't work. I get this error:\n\nThis operation is not supported for a relative URI.\nLine 286:                WSFederationMessage message;>\nLine 287:\nLine 288:                if (WSFederationMessage.TryCreateFromUri(uri, out message))\nLine 289:                {\nLine 290:                    var signin = message as SignInRequestMessage;\n\nThat's what the 'http://foo.com/' was used for maybe?\n. Looks good. Thanks!\nI updated my solution.\n. ",
    "shiranGinige": "@brockallen , \"It's not integrated into IdentityServer, but you could easily implement the interfaces to map from IdentityServer to MembershipReboot (I've done this on a few projects now). \" - would you be kind enough to show us a sample ? \n. ",
    "jtolar": "I am trying to implement this myself, the problem I am running into is that MembershipReboot implements EF6 where  Identity Server does not. When will IdentityServer implement EF 6? I am updating my instance to EF6 but updates will more than likely overwrite my changes.\n. ",
    "bkottapally": "Does anyone know if MembershipReboot supports more than one security questions?\n. @brockallen Thanks for the info. Is there any document, that helps me how to do it please?\n. So, what the is option for me configure my external identity provider now? I am sorry but I don't find that.\n. You re right. \"Enable Federation\" was the problem. Thanks. I will close this now.\n. I would like to create a user from IdSrv rather than from MR. Is there a way I can reinitiate my initial configuration from IdSrv?\n. I think that is the only way out. I will close this now.\n. ",
    "StateBarofArizona": "@Ruudvdl I downloaded your solution.  It looks pretty good, I like the Bootstrap.  Makes it look more modern. It appears you haven't updated it much lately as it appears to run against some older code.  Basically, you dropped the MR sample web onto the IS website?  It looks like you were able to do all the work in the Website project and leave the core bits alone?\n. Any idea why I was able to create the first, admin user but trying to add additional users generates a 500 server error?\nFrom: Ruudvdl [mailto:notifications@github.com]\nSent: Tuesday, April 22, 2014 2:46 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Create User Management Web API & UI (#212)\nI have done a bit of changes on the core, since ive implemented simple membership. I haven't used MR, but did all custom work. This was because i didn't want facebook/twitter/windows live etc logins to just pass through the tokens but that those users where then also created. And to accomplish that i had to implement simple membership with dotnetopenauth. this also contained much of the user management such as password reset, and account verification. I also built a 2 step email change option. I can see if i'll have time to update and do a merge, But i'm quite busy with a project at the moment, so it might be a couple of weeks till i get to it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212#issuecomment-41099908.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\nEmbracing Our Future - SBA 2014 Annual Convention\nWestin La Paloma Resort & Spa, Tucson  http://azbar.org/Convention\n. That would be great.  It looks like Elmah is not logging anything (maybe that\u2019s the error?).  The Elmah.mdf database is there but not updating.\nFrom: Ruudvdl [mailto:notifications@github.com]\nSent: Tuesday, April 22, 2014 3:36 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Create User Management Web API & UI (#212)\nHmm no not sure, if the elmah log is configured correctly you can check /elmah to see what the 500 error is. I'm thinking its perhaps a configuration issue. If this is a real issue just send me the bug in my fork and i'll have a look at it tomorrow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212#issuecomment-41104426.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\nEmbracing Our Future - SBA 2014 Annual Convention\nWestin La Paloma Resort & Spa, Tucson  http://azbar.org/Convention\n. Somewhere in here is giving the 500 error:  this.UserManagementRepository.CreateUser(model.Username, model.Password);\nFrom: Ruudvdl [mailto:notifications@github.com]\nSent: Tuesday, April 22, 2014 3:36 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Create User Management Web API & UI (#212)\nHmm no not sure, if the elmah log is configured correctly you can check /elmah to see what the 500 error is. I'm thinking its perhaps a configuration issue. If this is a real issue just send me the bug in my fork and i'll have a look at it tomorrow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212#issuecomment-41104426.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\nEmbracing Our Future - SBA 2014 Annual Convention\nWestin La Paloma Resort & Spa, Tucson  http://azbar.org/Convention\n. It was hanging up on the email.\nFrom: Ruudvdl [mailto:notifications@github.com]\nSent: Tuesday, April 22, 2014 3:36 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Create User Management Web API & UI (#212)\nHmm no not sure, if the elmah log is configured correctly you can check /elmah to see what the 500 error is. I'm thinking its perhaps a configuration issue. If this is a real issue just send me the bug in my fork and i'll have a look at it tomorrow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/212#issuecomment-41104426.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\nEmbracing Our Future - SBA 2014 Annual Convention\nWestin La Paloma Resort & Spa, Tucson  http://azbar.org/Convention\n. Are you saying the claims are different based on how/where I login?  If I login to the IdentityServer UI I see different claims than if I login from my app via an endpoint?\n. Which one do you use for SSO and get all the protections offered by MR?  I need my login form protected by all that MR offers but I also want SSO and a token issued.\n. As I recall, yes.  I added a slash and it then worked.\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: Thursday, May 08, 2014 9:57 AM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] MembershipReboot Sample missing slash before DB name (#666)\nYou mean this?\nconnectionString=\"Data Source=|DataDirectory|MembershipReboot.sdf\"\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/666#issuecomment-42575278.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\nEmbracing Our Future - SBA 2014 Annual Convention\nWestin La Paloma Resort & Spa, Tucson  http://azbar.org/Convention\n. I'm entering the user through the Identity Server admin screen.  We're using MembershipReboot for the repository.  I don't see any configuration anywhere on the server that would allow me to configure that setting.  I would need to modify the code for that form?\n. I was using v.7.0 but just updated to v.7.1.  I can now use a dot in a username.\n. I ended up blowing away the configuration tables and let IS recreate them.  All works now.  It appears that one of the entries I changed, IS did not like.  I think it was changing my Site ID to \"http://m.azbar.dev/idSrv/\".  Did it not like the trailing slash or ???  What should go there?\n. It happens when trying to login.\n. Can you consider adding this as a standard feature in v.3?\n. Where is this information located?  I see similar information but nothing that answers the above question.\n. Ignore.  I failed to realize I wasn't using https after restarting my browser.  Doh!\n. Nevermind, it works the same in the sample app as in the IdSrv home page.\n. Seeing a different set of claims based on how you get logged in.\nWhen you login via the login page, you see one set of claims.\nWhen you get auto logged in after confirming your email, a different set of claims is displayed.\nAre the different logins for MR and IdSrv or one combined login / login controller?\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: Thursday, June 26, 2014 4:16 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Claims different when auto logged in after email confirm (#730)\nWhere are you seeing these claims? In the same place or are you seeing one set of claims in one context and another set of claims in another?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/730#issuecomment-47291863.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\n. The more I look, it now seems it might not be the returnURL as I would expect I could manually go back to the app page and be logged in.  However, even when doing that, I get kicked to the login page.  It\u2019s as if the test app never sees the user is authenticated.  Now I wonder if I screwed up the token.  Frustrating when you know it worked at one time.\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: Monday, July 14, 2014 10:01 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Connie DeCinko\nSubject: Re: [Thinktecture.IdentityServer.v2] Keeps going back to login page (#747)\nI'm not sure what's going on here, as I'd have to understand it better. But the short story is if you customize the login page and redirect the user to another page for workflow purposes it's necessary to maintain the return URL across those redirects so that once you're done you can resume the ws-fed signin process.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/747#issuecomment-48990797.\nTop-notch continuing legal education on your summer vacation.\nJoin us for CLE by the Sea! http://azbar.org/CLEbytheSea\n. Appears to have been an issue with an old Thumbprint for our SSL cert.  Works now.\n. I added this to my register controller and it works.\nIEnumerable<string> roleAssignments = new string[] { \"IdentityServerUsers\" };\n                this.UserManagementRepository.SetRolesForUser(account.Username, roleAssignments);\n. Looks like IdSrv is not compatible with System.IdentityModel.Tokens.Jwt version 4.  I \"rolled back\" to the latest version of IdSrv from github and applied all but System.IdentityModel.Tokens.Jwt update.  Left it at version 1.  Now my project builds.\n. ",
    "mahmoud-samy": "OK\n. ",
    "bodayit": "Yes this is what I am trying, I set \"Require SSL\" to false \n. Yes I guess I only need to handle the rewrite of the reply address in proxy config.. had no time to test but should work, you can close the issue.\nThanks!\n. Yes, is working perfect! Thanks!\n. ",
    "panesofglass": "Perfect!\n. Extending this a bit more, is it possible and advisable to host the core Identity Server module within an existing web application, again leveraging the existing membership model?\n. Thanks!\n. I'm not sure how that helps me. I thought my question was directed at the authentication mechanism. In other words, how do I allow two different authN mechanisms that appear to work differently. Apologies that this wasn't clear.\nI want to allow a SSO experience for those in Windows Azure AD and use a form to authenticate non-AD users. I want to obtain a JWT from both that will be used to authorize calls to Web APIs.\n. Not really. Authorization Server just confuses me more. Doesn't IdSrv already do authZ?\nWAAD application integration would give me SSO, but everything would have to go through WAAD, which I don't want.\nI need to use tokens, so ASP.NET membership is insufficient for portal auth, thus I still need IdSrv. Right? Or can I pass credentials to Authorization Server for that? I don't know where authN would fall in there.\nI plan to follow your post to federate WAAD with IdSrv and then try to figure out what it means to add IdSrv as an IdP. The latter doesn't look complicated.\nWhat am I missing? I still feel like I am looking at a mix of legos that should fit together, but I know longer have the box or instructions.\n. > These two requirements don't really fit together.\nThen that's my problem. :) Yes, I want to allow a login page to programmatically send credentials and retrieve a token. I also want to federate one or more ADFS as indentity providers to IdSrv.\nWhat about these requirements don't fit? That is something I don't understand. Is there a way to alter what I want to do so that these can fit? In other words, could I use OAuth2 Implicit Flow to leverage IdSrv as an IdP alongside the federated ADFS?\n. > Why do you need both?\nThe portal application exposes a front-end used by external users. The front-end shares services with CRM that both internal and external users will use. Internal users authenticate through WAAD. External users authenticate in the portal. What options do I have here?\n\nResource owner pwd flow: credentials in, token out. As simple as that.\nWhat are you planning to do with that token afterwards? I am confused.\n\nThe browser client retrieves the token (in JavaScript). We store the token and pass it along with every request to the services. This happens both on the portal and in CRM (web resources, though this uses the WAAD identity).\n\nFederation with ADFS - how are you planning to use that? For web SSO? Using WS-Federation?\n\nYes, I'd like to use the ADFS for web SSO from CRM. I was planning on using WS-Federation. I thought I could use the ADFS Integration in IdSrv to convert the SAML token to JWT.\nThanks for sticking with me. I'm open to alternatives. I just don't know what the alternatives are. I also don't entirely follow how to separate authN and authZ. I know the conceptual separation but not the applied separation.\n. > Ok I get the RO flow scenario - our RO flow implementation only allows to use IdSrv accounts - not accounts from an identity provider (like WAAD) - is that OK?\nThat's all I need.\n\nThe WS-Fed requirement looks OK too. Should work.\n\nExcellent! Is my understanding of ADFS Integration correct, or do I just need to do the WS-Fed with WAAD?\nAlso, should I go ahead and add AuthorizationServer into the mix? If so, how? I'm on a tight deadline (Wednesday), so I'd prefer to delay unless it greatly simplifies things.\n. I've got ACS tied into my application. Now I'm trying to get Resource Owner Flow working. I feel as though I've wasted another day. The OAuth2Client throws an exception telling me that I received a 400. If I switch to using HttpClient, I get back an invalid_grant message. I think I've matched the sample shown in the Thinktecture.IdentityModel repo, but the constants used make it very difficult to see everything in one place. Do you happen to have a complete walk-through for how to set up everything?\n. I agree I think I'm doing something substantially wrong. I just added ACS as an Identity Provider. I have a client with code flow and implicit flow enabled. I went ahead and used the Identity and Access wizard, though I did not really want to. I was able to authenticate with IdSrv using implicit flow, but I did not get ACS as an option.\nI can't understand what I've missed. This doesn't seem that difficult. What am I missing? At this point, I don't care how I get the pieces integrated, I just want something to work. Any help is appreciated.\n. As I mentioned, I'm just trying to find anything that will work. I'm not married to OAuth, though I initially wanted to use JWT. Do you have any suggestions?\n. No. My fundamental need is to accept both local identities (Forms Auth or IdSrv) and federated identities (ACS, WAAD). I wanted to stick to a token-based approach, but I can even break away from that approach if it turns out Forms Auth is part of the solution. (I realize my use of \"local\" and \"federated\" are inconsistent; that is just how I think of them with respect to the web application.)\n. Another, slightly related question: I can retrieve a token from IdSrv, but the token is rejected somewhere along the way. I used Thinktecture.IdentityModel to set the valid tokens, but it isn't letting my token through.\n. ",
    "khanhtc": "Because I want to use OAuth2.0 as the authorization server, asp.net mvc as the client application and wcf as the resource server. In your demo, you used to OAuth2.0 issues JWT and asp.net web api to decode JWT. I wonder how can I use OAuth 2.0 with WCF (not restful api)? Please let me know what I have to refer.\nThanks.\n. ",
    "scharada": "Hello Brock\nActually I would like to do both. I have a case where implementing an ADFS is not possible at the moment. I would like to be able to register and authenticate users for different applications , issue tokens with custom claims\u2026\nWhile we are here , what would be the best way to implement user groups and rights for each application in identity Server ?\nWe are also working on a project where mobile POS terminals connect to a ACF service for executing transactions \u2026. Would there be a way to authenticate terminals based on S/N Mac address or anyotherway without user input ? I know we can with certificates , but certificates can be found on the terminal and can be used to access the service \u2026 any advice ?\nThank you \nSouheil. \nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Thursday, May 16, 2013 6:34 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: scharada\nSubject: Re: [Thinktecture.IdentityServer.v2] Custom Provider (#217)\nCustom provider for which part? Validating user credentials? Loading claims?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/217#issuecomment-18012679 .  https://github.com/notifications/beacon/Cfjyo4q-7GJznKdG6OMPrkxDUc851v81QDQnzVnxlABaiEyBifSaZLRjQoztJKbZ.gif \n. Hi dominick.\nYes I am looking a t it. Since it is not  a true repository, I suppose I can wire it to  any custom code or use the asp.net repository for users and membership storage ..\nOne question though : what\u2019s the role of  the Site ID (http://identityserver.v2.thinktecture.com/trust/) as shown on the admin section ?\nThank you.\nFrom: Dominick Baier [mailto:notifications@github.com] \nSent: Friday, May 17, 2013 3:01 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: scharada\nSubject: Re: [Thinktecture.IdentityServer.v2] Custom Provider (#217)\nSeen the blog post I linked. Does that answer the question?\nThese are the interfaces you can use to customize IdSrv without changing the core source code.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/217#issuecomment-18059885 .  https://github.com/notifications/beacon/Cfjyo4q-7GJznKdG6OMPrkxDUc851v81QDQnzVnxlABaiEyBifSaZLRjQoztJKbZ.gif \n. Thank you.\nFrom: Dominick Baier [mailto:notifications@github.com] \nSent: Friday, May 17, 2013 3:33 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: scharada\nSubject: Re: [Thinktecture.IdentityServer.v2] Custom Provider (#217)\nThey are extensibility points.\nThe site ID is issued in tokens to identify the issuer.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/217#issuecomment-18061472 .  https://github.com/notifications/beacon/Cfjyo4q-7GJznKdG6OMPrkxDUc851v81QDQnzVnxlABaiEyBifSaZLRjQoztJKbZ.gif \n. ",
    "sam-leung": "what is the current status of this feature at the moment?  i'm also doing trying to do the same thing where i just turn off all the ssl so any requests coming in over http can just do that.\n. would this be considered a release?\n. when might the next release be?\n. sounds good, thank mr. allen.\n. this a great feature to have because i'm having a lot of trouble trying to connect to the server oauth2 endpoints from a client app.  just trying to run the identityserver locally and setting up SSL and having a client app hit the endpoint has been very frustrating.  still cannot get it to work.  hoping this could be released soon....  but thank you for adding this in.\n. oh i see.  because i was hoping where since ssl is disabled, that calls to the endpoints do not require the calling client app to use https.  and the identityserver is not hosted on SSL.  in other words, client and server app need not be on ssl .\n. i didn't try out the code that was merged in.  I just disabled manually based on the instructions at the top of this post.\n. the server is currently running on SSL.\n\nhow do set it up so the client machine trusts the certificate?\nthank yoiu\n. i've created a certificate called \"IdentityServerCATest.cer\" and \"IdentityServerCATest.pvk\" using the makecert.exe command in command prompt.  this is different from the \"server certificates\" created in IIS as instructed in the tutorial video:\nhttp://vimeo.com/51088126\n\ni've installed the \"IdentityServerCATest.cer\" to \"Certificates  - Current User -> Trusted Root Certification Authorities\" and to \"Certificates (Local Computer) - Trusted Root Certification Authorities\" .  \nI still get the same error when debugging the test method: ValidUserNameCredentialValidClientCredentialSymmetric()\nThe browser address bar is still red.\n\nI was able to now upload a \"Encrypting Certificate\" using the created \"IdentityServerCATest.cer\".\n\nIs there something else I am missing?\nThank you\n. so ultimately, i'm still getting this exception error when unit testing the method\nThe underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.  The remote certificate is invalid according to the validation procedure.\nis there a value or constant or some code i needs to set in the source code of the identity server?\n. unfortunately, no.  is there a web config setting to turn off the requirement of the IdentityServer to always run on HTTPS protocol, to not use SSL.  This is strictly only for testing purposes.\n. thank you very much for the quick response, much appreciate it.  in the mean time while the turning on/off the requirement to run on HTTPS and have SSL functionality is being built, is there a way currently where we can manually through the source code, turn it off?\n. thank you mr. allen .\n. do you mean when the database is first created, insert statements during the db creation workflow, will insert values of \"test\" and \"secret\"???  or is it through the Admin UI to set those as default test values like how on the example screenshot it shows through the UI, the clientID and ClientSecret values are set?\nThank you\n. Thank you very much for such a quick response and the answers.\nHow would i make it so that the token is not in JWT format?\n. i'm using v2-2.2.1, how would i set that for token type setting?\n. from the following URL, it seems v2.2.1 is the latest version which is what I'mn using.\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\nwhen you mean global configuration, you mean the \"identity.config\" file in the \"Configuration\" folder, is that correct?\nand if yes, it would be uncommenting the \"SWT\" and commenting out the \"JWT\", is that correct?\n JWT \n```\n  \n SWT \n<add type=\"Thinktecture.IdentityModel.Tokens.SimpleWebTokenHandler, Thinktecture.IdentityModel\" />\n```\n. what are the possible \"Default Http Token\" that we can set aside jwt?\ni am seeing the default value in the input field:  \"urn:ietf:params:oauth:token-type:jwt\"\non the ~/Admin/General page\n. so i assume the value will be \"urn:ietf:params:oauth:token-type:SAML:2.0\"\n. i've always wondered, what do each of the colon delimited values mean?\n1.  urn\n2.  ietf\n3.  oauth - saying it's using oauth , correct?\n4.  oasis\nthank you\n. actually then if that's the case, shouldn't the value for the \"Default Http Token\" field be \"urn:oasis:names:tc:SAML:2.0:assertion\" and not \"urn:ietf:params:oauth:token-type:SAML:2.0\" if i wanted to use SAML 2.0 instead of JWT?  it should be using oasis instead of ietf?\n. going back to the above comment where it states \"Current Microsoft's JWT handler doesn't support encryption\" and that it does only signing.  so it's using the certificate to do signing.  is it possible to manually ourselves through code to encrypt the token with the certificate's public key?  so this way, there's encryption on the token and not just signing.\n. but from the examples, i didn't see any username and password passed.  there is no authentication involved.\n. oh i see.  so i guess it's not a secure implementation to use.\n. no.  i wanted to ask first before i tried out the sample code that was in the examples in my own code to see if SAML 2.0 tokens would be returned.\nthank you.  i will try it out.\n. actually i think i may have found a sample that is shorter that uses the Thinktecture.IdentityModel framework to do this.  but still would like to know how to set this up in the web.config if possible.\nprivate static SecurityToken RequestToken()\n        {\n            var binding = new UserNameWSTrustBinding(SecurityMode.TransportWithMessageCredential);\n```\n        var credentials = new ClientCredentials();\n        credentials.UserName.UserName = \"bob\";\n        credentials.UserName.Password = \"abc!123\";\n    return WSTrustClient.Issue(\n        new EndpointAddress(_idsrvEndpoint),\n        new EndpointAddress(_realm),\n        binding,\n        credentials);\n}\n\n```\nit is located in:\n\n\n. so i am looking at the static method definition of WSTrustClient.Issue() based from the above posting's sample code, and i see that it has code to create a \"RequestSecurityToken\".  the code to create that object does not specify the tokentype.  so on that note, how will the Identity Server know what type of token to return?  a jwt or saml 2.0 token?  is there a default value it uses if there is no token type specified?  or does it grab that default value from the \"Default WS* Token\" field of the \"General Configuration\" in the IdentityServer?\n\n\n. sounds good, thank you mr. allen.  hopefully he'll see this post, hehe...\n. I'm using Resource Owner Password Flow, would that return back a refresh token?\n. is there sample code to submit the refresh token to the identity server to get a response object that contains a new token?  i assume that we can use the same refresh token to get a new token every time the refresh token is submitted to the IdentityServer.\ni was trying to find sample codes from the different downloadable projects on Thinktecture's github site and unable to locate it.\n. i could get refresh token out of the response:\nvar client = new OAuth2Client(\n                    new Uri(baseAddress),\n                    Constants.Credentials.ValidClientId,\n                    Constants.Credentials.ValidClientSecret);\n```\n            var response = client.RequestAccessTokenUserName(\n                Constants.Credentials.ValidUserName,\n                Constants.Credentials.ValidPassword,\n                scopeSymmetric);\n        var accessToken = response.AccessToken;\n        var refreshToken = response.RefreshToken;\n\n```\nbut how would i be able to submit the refresh token to get a new token (access token)?\n. i think i may have found it, is it this method call?\nvar newToken = client.RequestAccessTokenRefreshToken(refreshToken);\nand i just pass in the refresh token right?\n. so basically, i can't use VS or IIS express?\n. i see so i use IIS to run it.  then i use VS to attach process in order to start debugging?\nor do you mean where i set it up in IIS, and in VS, i go to the properties page of the IdentityServer website project and select \"Use Local IIS Web Server\" and just indicate the project url?  then start debugging.\n\n. what's the settings in your properties page of the website project?\n. i see, so you basically in VS on the properties page of the website project, \n1.  selected \"Use Local IIS Web Server\"\n2.  project url field specified \"https://idsrv.local\"\nis that correct?\n. i'll give it a try and see if i could get it to debug.\n. i think i'm a little confused about the setup, i'm very sorry about this inconvenience.  if possible, could the answers be listed with the bullet pointed questions?  that way, i think i will be able to better understand and be on the same page as everyone else.  i'm very sorry about this mr. allen.\nOn the \"Key Configuration\" page has 4 fields:\n1.  Signing Certificate field - used by identity server to sign tokens whether a private asymmetric or private symmetric key is used, is this correct?\n2.  Signing Thumbprint field - not sure if this is used by the identity server.  i just use it as reference to check in IIS what certificate it corresponds with.\n3.  Decryption Certificate field - private key in the selected certificate used by the Identity server to encrypt the token, is this correct?\n4.  Symmetic Signing Key field - private key generated from the certificate selected in the \"Signing Certificate\" dropdown field, used to sign tokens on the identity server side, is this correct?  \nOn the \"Relying Party & Resource\" page, it has several fields:\n1.  Symmetric Signing Key field - public key generated from the certificate selected in the \"Signing Certificate\" dropdown field of the \"Key Configuration\" page, used for validating the signed token on the resource server, is this correct?\nfrom the answer in bullet point 3 in the post:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/376\nthe value in this field is also a private key to sign the token on the identity server side?  or there is no notion of private and public key for this field where this is just a key that can sign the token on the identity server side and validate the token on the resource server side?  that the value for this 1 key is used and shared by both identity server and resource server?\n1.  Encrypting Certificate - public key of the certificate selected in the \"Decryption Certificate\" dropdown field of the \"Key Configuration\" page, used for decrypting the token on the resource server, is this correct?\nthank you mr. allen for helping me get on the same page.\n. yes, i will be using SAML 2.0\n. since i am using SAML 2.0 and the token returned from the identityServer needs to be encrypted, then i need to be using asymmetric keys.\nSo on the \"Key Configuration\" page , the following needs to be filled?\n1.  Signing Certificate - yes, need to select a certificate to sign on the identity server side, is this correct?  the certificate will have a private asymmetric key that is used for the signing process, is this correct?\n2.  Decryption Certificate -  no, the decryption will occur directly on resource server with the private key.  what is this field used for?\n3.  Symmetric Signing Key - no, could be left empty since need to encrypt token so will be using asymmetric key\nOn the \"Relying Party & Resource\", the following needs to be filled?\n1.  Symmetric Signing Key - no, could be left empty since need to encrypt token so will be using asymmetric key.\n2.  Encrypting Certificate - yes, this certificate will have the public asymmetric key used to encrypt the token.  i assume that i need to upload cer file because cer files usually contain the public keys and when i tried to upload, it only accepts cer file, is this correct?\n. i see, just the signing portion for JWT but not encryption.  i see...\nso going back to my above most recent post, what i mentioned and assumptions, are they correct?  are all those pretty much my setup to get a SAML 2.0 token?\nthank you mr. allen \n. COOL THANK YOU MR. ALLEN.   this clears up a lot of stuff.\n. 1.  i plan to authenticate and authorize the user in the IdentityServer.\n2.  identityserver will return an encrypted token\n3.  the app that receives the token will need to decrypt it because the token will have additional claims information that is used.\nso on that note, i need to be able to decrypt the token in the app that receives it\n. sounds good, i'm not familiar with WIF but i'll do some research into it and use it to decrypt the token.\nyou know how on the identity server, the private key of the signing certificate was used to sign the token on the identityserver side, do we need to validate now using the public key of the signing certificate?  i just need to decrypt and check the information in the decrypted token.\n. mr. allen,\ncan the identityserver decrypt its own generated, issued token?  \nthank yo8u\n. if i wanted to use the \"Saml2SecurityTokenHandler\" i could right?  it is a child class of \"SecurityTokenHandler\".\n. \"STS Name\" - is that the name of the IdentityServer?\n. or is it the value in the \"Site ID:\" of the \"General COnfiguration\"?\n\n. by the by mr. allen, thank you very much for the sample code in the post:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/383\n. for the code sample in post #383 , var cert = new X509Certificate2(pathToSigningCert);\nthis is the path to certificate \"A\" (has a public key) of which the identity server used the private key of certificate \"A\" to sign the token - this part i'm on the same page.  \ndoesn't the code example need to reference and use the private key of certificate \"B\" of which the identity server used the public key of certificate \"B\" to encrypt the token, in order to decrypt the token?\n. i think i found it.  it is in the STS class in the \"Thinktecture.IdentityServer.Protocols\" project under the \"Shared\" folder\n```\npublic bool TryIssueToken(EndpointReference appliesTo, ClaimsPrincipal principal, string tokenType, out SecurityToken token)\n    {\n        token = null;\n    var rst = new RequestSecurityToken\n    {\n        RequestType = RequestTypes.Issue,\n        AppliesTo = appliesTo,\n        KeyType = KeyTypes.Bearer,\n        TokenType = tokenType\n    };\n\n    try\n    {\n        var rstr = _sts.Issue(principal, rst);\n        token = rstr.RequestedSecurityToken.SecurityToken;\n        return true;\n    }\n    catch (Exception e)\n    {\n        Tracing.Error(\"Failed to issue token. An exception occurred. \" + e);\n        return false;\n    }\n}\n\n```\n. I think this could be closed.\n. SimpleHttp?  is that the basic authentication?\nI'm kind of new to the SAML2.  why would that combination not make sense?  Is it because with OAuth2, it doesn't usually return SAML2?\nWith SimpleHttp, does it return a SAML2 token?\n. For the OAuth2, what type of token is it suppose to return?  JWT?\n. To fix the combination of OAuth2 returning SAML2, what should parts of the IdentityServer code should I be looking at to do so, if this is even possible?\n. is there a way in the identity server to make the OAuth2 protocol generate SAML 2.0 token?  when I tried to do that, it gave an exception and blew up.\n. yup you are correct.  i decided to use simple http endpoint.  but i think i may need to circle back on the OAuth2 because it offers federated service.\n. at a previous post:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/397#issuecomment-23766666\nit mentions the error i received.\n. i just realized, after studying some more about the code of the IdentityServer and better understanding token generation and authentication, the cause of the error could be at the following method in the OAuth2TokenController.\n```\nprivate HttpResponseMessage CreateTokenResponse(string userName, Client client, EndpointReference scope, string tokenType, bool includeRefreshToken)\n    {\n        var auth = new AuthenticationHelper();\n    var principal = auth.CreatePrincipal(userName, \"OAuth2\",\n            new Claim[]\n                {\n                    new Claim(Constants.Claims.Client, client.Name),\n                    new Claim(Constants.Claims.Scope, scope.Uri.AbsoluteUri)\n                });\n\n    if (!ClaimsAuthorization.CheckAccess(principal, Constants.Actions.Issue, Constants.Resources.OAuth2))\n    {\n        Tracing.Error(\"OAuth2 endpoint authorization failed for user: \" + userName);\n        return OAuthErrorResponseMessage(OAuth2Constants.Errors.InvalidGrant);\n    }\n\n    var sts = new STS();\n    TokenResponse tokenResponse;\n    if (sts.TryIssueToken(scope, principal, tokenType, out tokenResponse))\n    {\n        if (includeRefreshToken)\n        {\n            tokenResponse.RefreshToken = CodeTokenRepository.AddCode(CodeTokenType.RefreshTokenIdentifier, client.ID, userName, scope.Uri.AbsoluteUri);\n        }\n\n        var resp = Request.CreateResponse<TokenResponse>(HttpStatusCode.OK, tokenResponse);\n        return resp;\n    }\n    else\n    {\n        return OAuthErrorResponseMessage(OAuth2Constants.Errors.InvalidRequest);\n    }\n}\n\n```\nWhere it is calling the auth.CreatePrincipal(.....) method, i think the value of the second parameter is incorrect.  i think the const  System.IdentityModel.Tokens.AuthenticationMethods.Password needs to passed when the grant type is password based on the error response i got when it mentioned \"Change the AuthenticationMethod Claim to be an absolute URI.\"\ni haven't tested this theory yet.  the problem with this change to the 2nd parameter is that the \"CreateTokenResponse()\" method is used and reused by the following grantypes:\n// switch over the grant type\n        if (tokenRequest.Grant_Type.Equals(OAuth2Constants.GrantTypes.Password))\n        {\n            return ProcessResourceOwnerCredentialRequest(tokenRequest, tokenType, client);\n        }\n        else if (tokenRequest.Grant_Type.Equals(OAuth2Constants.GrantTypes.AuthorizationCode))\n        {\n            return ProcessAuthorizationCodeRequest(client, tokenRequest.Code, tokenType);\n        }\n        else if (string.Equals(tokenRequest.Grant_Type, OAuth2Constants.GrantTypes.RefreshToken, System.StringComparison.Ordinal))\n        {\n            return ProcessRefreshTokenRequest(client, tokenRequest.Refresh_Token, tokenType);\n        }\nso other than the password grant type, the other grant types do not use password .  so there may need to be a conditional check where it could be as follows (psuedo code):\n```\nvar auth = new AuthenticationHelper();\n    string authenticationMethod = \"OAuth2\";\n\n    if (grantType.Equals(OAuth2Constants.GrantTypes.Password))\n        authenticationMethod = System.IdentityModel.Tokens.AuthenticationMethods.Password;\n\n    var principal = auth.CreatePrincipal(userName, authenticationMethod,\n            new Claim[]\n                {\n                    new Claim(Constants.Claims.Client, client.Name),\n                    new Claim(Constants.Claims.Scope, scope.Uri.AbsoluteUri)\n                });\n\n```\ncould this be a possibility?\nthank you mr. baier and mr. allen.\n. i didn't use any custom provider or do anything to auto-create the database.  I just used the out-of-the-box code.  so where in the out-of-the-box code does it auto-create the db during the initial setup?\nthank you\n. ????  did any of the out-of-the-box \"IdentityServer\" code create the Membership tables?  or just the .net framework did for us automatically?\n. i know that using the \" aspnet_regsql.exe\"  tool , we can create the membership tables.  does any of the \"IDentityServer\" code call and use the \"aspnet_regsql.exe\" tool?\n. i am assuming the out-of-the-box \"IDentityServer\" is set up to use the newer EF providers, is that correct?\n. i see, the \"IdentityServer\" is using the \"Microsoft ASP.NET Universal Providers Core Libraries\" nuget package.\n. i found the post where it talks about the universal providers:\nhttp://www.hanselman.com/blog/IntroducingSystemWebProvidersASPNETUniversalProvidersForSessionMembershipRolesAndUserProfileOnSQLCompactAndSQLAzure.aspx\n. so i'm on the same page, the code built by thinktecture for the identity server v2 doesn't pre-allocate and reserve 2 gbs of memory?\n. i see, it doesn't reserve and pre-allocate 2gbs....  okay, i need to dig into this.  quick question, wasn't there at one point a post a while back of another developer who had this similar issue?\n. ",
    "b1alpha": "How did this go it was merged, is mainline pretty stable, can I just build it? Also where are the build instructions for this project I didnt see them just on a glance. Thanks. \n. Use case\nWe are testing with karma, and having the ID server being in ssl violates the iframe constraint so we are looking to run the id server in non-ssl for automated testing. \n. ",
    "kylewuolle": "I've confirmed the merged code works. The key thing is the Set RequireSsl = false in identityServices.config\n. ",
    "lestersconyers": "What element are you referring to? They both use the same signing certificate if that's what you mean.\n. Thanks for the quick replies. I followed a couple of your blog posts and it hasn't helped. I've called PassiveSessionConfiguration.ConfigureDefaultSessionDuration(TimeSpan.FromHours(1)) & PassiveSessionConfiguration.ConfigureMackineKeyProtectionForSessionTokens(); in the Application_Start with no luck. Am I missing something else?\n. Well...I changed the order of the calls. I'm calling ConfigureMachineKeyProtectionforSessionTokens first then calling the other. That appears to have fixed things so I hope that's the correct order (is that correct?). Either way thanks for the help!\n. Ok. That makes sense but I ran across a blog post (http://brockallen.com/2013/02/18/configuring-machine-key-protection-of-session-tokens-in-wif-and-thinktecture-identitymodel/) suggesting that the two methods I mentioned would do the same thing. If that's not the case what do those methods do?\n. Makes perfect sense. Thanks. As an FYI to others, this changes the de/encryption of user passwords so users created through identity server won't be able to log in immediately. Not a huge deal for me but others beware.\nThanks.\n. The machine key alters the hashing algorithm of your passwords. So existing\npasswords will no longer match after being hashed. I had to recreate all\nthe users and give them all new passwords.\nOn Tuesday, March 4, 2014, Dominick Baier notifications@github.com wrote:\n\nplease open a new issue\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/221#issuecomment-36716271\n.\n\n\nLester\nLook who's talking now @ http://www.lestersconyers.com\n. I've done something similar to this with very little code. I had a few different Identity Providers: ADFS, Google, and of course Identity Server. I enabled Home Realm discovery but only set Identity Server to show on hrd. So when the user hits the hrd endpoint they are immediately redirected to the login page of the only idp shown in hrd which in this case would be the Identity Server login page. \nI then modified the login page to show the other idp's. When the user clicks the icon for the other idp, they are redirected back to the hrd page with a wtr=ADFS query string parameter. When the hrd sees this endpoint it goes directly to that identity providers home page. \nI hope that makes sense.\n. Excuse me, that query string parameter is whr, not wtr.\n. That's cool. I'm calling AuthenticationHelper.GetReylingPartyDetailsFromReturnUrl in the SignIn action and it's giving my Identity Server as the relying party which makes sense. Unfortunately I'm trying to get the details of the application that initiated the request.\n. Great. Thanks for the prompt reply.\n. FYI, I noticed that ADFS users are missing 2 cookies when they request the signout: idsrvauth and wsfedsignout. I'm guessing the idsrvauth is the reason they're being redirected to login. Not sure why the cookie is missing though.\n. It contains my client's servers so I'm not sure I can send that over to\ngithub. Can I send it to you another way?\nLester\nOn Jul 22, 2013 12:13 PM, \"Dominick Baier\" notifications@github.com wrote:\n\nI guess i need a complete fiddler trace to repro.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/317#issuecomment-21368233\n.\n. OK. I think I'm making progress. We're using the home realm discovery so it looks like I need to send them through /idsvr/issue/hrd?wa=wsignout1.0. This then redirects them to the ADFS wsignout endpoint. The ADFS page renders the iframes for identity server cleanup /idsvr/issue/hrd/?wa=wsignoutcleanup1.0. Unfortunately the HRD page doesn't render the iframes for wsignoutcleanup of Identity Server's relying parties. Looks like I need ADFS to render an iframe for /idsvr/issue/wsfed?wa=wignoutcleanup1.0 which will cleanup relying parties.\n. I found the problem. It does take care of it. To make a long story short, our ADFS instance uses https. The identity server relying parties are using http. When the users were hitting the adfs signout page, they were prompted with the mixed schema security warning stating \"Do you want to view only the webpage content that was delivered securely?\"  They clicked yes, which blocked the wsignoutcleanup requests to the relying parties over http. Case closed. \n\nThanks for the help again Dominick.\n. Got it. Thank you sir.\n. ",
    "osanimmweb": "we changed the machine key, but users are not able to login now, what we are doing wrong?\n. Hi, I have the same problem about Cryptographic Error, after I read some posts, I noticed that we must sync machine key, I did that in my web.config, but, now my users can't loggin... (error: password doesn't match)\nI did what said in this post: http://brockallen.com/2013/02/18/configuring-machine-key-protection-of-session-tokens-in-wif-and-thinktecture-identitymodel/\nBut, actually the Identity Server already has that configuration. \nmaybe I'm doing something wrong?\n. I found the problem, \n\nI was using  validation=\"SHA1\" decryption=\"AES\", so the app changes encrypt algorithm, so i needed tom remove... and all works! \n. I did that, I have a load balanced and all work prefect, but, when session expire I get: \"Error occurred during a cryptographic operation.\" again... what I have to do to avoid get that?\n. ",
    "grz3gorz": "Otherwise, is there a possibility to make as relying party services if they are written in .NET Framework <4.5. If yes then how.\n. IdSrv is running fine. \nMy ASP Web App is also running fine, but after i registered Idserv in my App according to http://msdn.microsoft.com/en-us/library/ee517285.aspx (point 2) when i run my App insted of redirection to IdServ I see an information as i wrote above.\n. Actually I did but after my manually changes of web.config file my App is running without redirection to IdServ, so I had to do sth wrong.\n. I am not sure if i should use wif 4.0 or 3.5 in my web.config file... In both cases it goes wrong.\n\n\n\n\n\n ...\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. ok thanks a lot anyway! fighting ;)\n. Actually, with ASP MVC 2 Web App .net 4 (what is acceptable for me by now) when i used fedutil, it is redirecting me to IdServ, but after authentication i see information as follows:\n\"Sorry, an error occurred while processing your request.\" \nNothing more. Even when RequireSSL option is down. How could i get more information about the issue. Any idea what could be the reason?\n. Thanks, damn.. no i am getting:\nSystem.Web.HttpRequestValidationException: A potentially dangerous Request.Form value was detected from the client (wresult=\"<trust:RequestSecuri...\").\nStacktrace:\n[HttpRequestValidationException (0x80004005): A potentially dangerous Request.Form value was detected from the client (wresult=\"<trust:RequestSecuri...\").]\n   System.Web.HttpRequest.ValidateString(String value, String collectionKey, RequestValidationSource requestCollection) +12602837\n   System.Web.HttpRequest.ValidateHttpValueCollection(HttpValueCollection collection, RequestValidationSource requestCollection) +132\n   System.Web.HttpRequest.get_Form() +100\n   Microsoft.IdentityModel.Web.WSFederationAuthenticationModule.IsSignInResponse(HttpRequest request) +26\n   Microsoft.IdentityModel.Web.WSFederationAuthenticationModule.CanReadSignInResponse(HttpRequest request, Boolean onPage) +145\n   Microsoft.IdentityModel.Web.WSFederationAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs args) +108\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +80\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +165\nAnd svcLogs are saying: Authorization for token issuance failed because user  is not in the IdentityServerUsers role. But in fact he is.\n. Yes, that's true. Sorry for disturbance, I am quite new with mvc stuff. I saw that you posted about it (http://identityserver.codeplex.com/discussions/271399), but your post seems to be expire http://www.leastprivilege.com/WIFASPNET40AndRequestValidation.aspx. but I will fix it. Thx\n. Yes, thanks for you attention. I would have forgotten.\nI needed to override IsValidRequestString method from RequestValidator. I found the solution here:\nhttp://volkanuzun.com/blog/post/2010/10/14/A-potentially-dangerous-RequestForm-value-was-detected-from-the-client-(wresult3d3ctrustRequestSecuri).aspx\nIt should be useful if someone would have the same problem. I still wondering why i had a problem with mvc 4... anyway by now it is ok.\nThanks and cheers :). \n. Something is still wrong:\nObtaining metadata from issuer 'https://sts.....pl/idsrv/issue/mex' failed with error 'System.InvalidOperationException: Metadata contains a reference that cannot be resolved: 'https://sts.....pl/idsrv/issue/mex'. ---> System.ServiceModel.EndpointNotFoundException: There was no endpoint listening at https://sts.....pl/idsrv/issue/mex that could accept the message. This is often caused by an incorrect address or SOAP action. See InnerException, if present, for more details. ---> System.Net.WebException: The remote server returned an error: (404) Not Found. at System.Net.HttpWebRequest.GetResponse() at System.ServiceModel.Channels.HttpChannelFactory`1.HttpRequestChannel.HttpChannelRequest.WaitForReply(TimeSpan timeout)\n(as appintegration said: WS-Trust metadata \nhttps://sts.....pl/idsrv/issue/mex)\nWhen I browse it i got: The resource you are looking for might have been removed, had its name changed, or is temporarily unavailable.\nI think that sth is wrong with iis (on sts side) configuration, but i have no idea what should I change..? Any idea?\n. No. The mex URL is ok now, but I am getting such exception:\n\"The server was unable to process the request due to an internal error.  For more information about the error, either turn on IncludeExceptionDetailInFaults (either from ServiceBehaviorAttribute or from the  configuration behavior) on the server in order to send the exception information back to the client, or turn on tracing as per the Microsoft .NET Framework SDK documentation and inspect the server trace logs.\"\nI analized ThinktectureIdentityServer.svclog file and found that policy was created and validated :\n\"Policy Validation succeeded.\"\nUnfortunately wcfmessageas.svclog is saying as above.\nI am still trying to figure how to trace to get more information about exception... But maybe U have any idea what could be wrong? \n. wcfTrace.svclog \"said\" that exepcion is a result of lack of symetric key encryption. so I updated party from \"Relying Parties & Resources\" by pointing a certificate (exported version - without prv key) that i used (full version) during  making WCF STS Reference. \nNow i am getting message security exception:\n\"An unsecured or incorrectly secured fault was received from the other party. \nID3242: The security token could not be authenticated or authorized.\"\ntracing on sts side didn't give additional info (what seems to be clear as WCF is the one which authenticate token). i read that could be due to missing allowed audience URIs in the service config, but i am not really sure what does it mean?\nmy audienceUris node seems to by right:\naudienceUris\n        add value=\"https://fun.....pl/WcfServ/ServiceName.svc\" /\n/audienceUris\nand i am stuck now a little bit.should I add tracing (system.diagnostic node) to the web config of my WCF node(similar as it is in IdServ) to get more info?\n. Yes, that was it. Hundred times THX!! The size of lettres was right, but in Web.config was https address and in app.config was http address. I had to set both to http. I didn't notice the difference and I was tracing-dancing ;)... \nAnyway, I am still curious why I can not use https address in client app.config client node address attribute. I am getting ArgumentException then. Message: \"The provided URI scheme 'https' is invalid; expected 'http'.Parameter name: via\".\nAs I am using: issuer address=\"https://sts.....pl/idsrv/issue/wstrust/mixed/username\"\n                                    binding=\"ws2007HttpBinding\"\n                                    bindingConfiguration=\"https://sts.....pl/idsrv/issue/wstrust/mixed/username\"\nand binding is: \n                    binding name=\"https://sts.....pl/idsrv/issue/wstrust/mixed/username\"\n                    security mode=\"TransportWithMessageCredential\"\n                        transport clientCredentialType=\"None\" /\n                        message clientCredentialType=\"UserName\" establishSecurityContext=\"false\" /\n                    /security\n                /binding\nI tried to modify clientCredentialType and establishSecurityContext attributes but without luck.\n. ",
    "jsancho": "Hi Dominick, \nI guess that I could add that setup as part of the application logic, but that would somehow feel like replicating a fair chunk of the logic behind Identity Server.\nMy train of thought was to add a secondary Relaying Party to IS with the following config.\n- (no change) standard token life time (set to 20 minutes)\n- (new option) \"valid\" URL list; a set of URLs for which tokens can be generated.\n  This would typically be limited names of the controllers that provide static resources (images) within the api.\n- (new option) disable the consent page on a RP-basis, as opposed to the oAuth2 protocol as a whole.\n  The process of generating an image token would be automatically be managed by the JS-client, we would not want to trigger a consent page per every page request with secured images.\nMy biggest concern on my original question was related to the use of tokens as a parameter within the querystring itself. \nIs this something that should be supported by the current version of Identity Server?  or that you would strongly advise against using?\nthanks\n. ",
    "Excelsior-Charles": "Yes, I am looking to centralize the account management.  What I don't want to do is send the user's browser to the identity provider to establish the session, I want the MVC controller to send over the username and password and retrieve a token containing claims that I can pass back to the user's browser for all future requests.  This is all done in SSL to ensure security.\n. Dominick,\nI've been on a hiatus for few days from security, and now I am back on it again.  Thank-you for the link to your post regarding \"using-an-active-endpoint-to-sign-into-a-web-application\".  Unfortunately I could not get the code to compile and my guess was that it was written so long ago that the framework has changed regarding the errors I get below.\nIs it possible for you to update the posting with code that will actually compile with the latest bits?\nI get the errors with the following lines:\n- RequestSecurityToken.AppliesTo\n- FederatedAuthentication.ServiceConfiguration\n- ClaimsPrincipal.CreateFromIdentity\n. Please give me some time to work through the code still.. I have pieces of the puzzle.. just need to tie them all together and see if we get back what we are expecting.  \nHere's basically what I'm doing...  1) customize the ThinkServer to get claims / authentication from our data source (in progress), 2) retrieve token via MVC controller (works getting xml token, but I will need a JWT that includes the claims); and 3) attach to the AJAX header so that authorization can take place with the Claims-Attribute on the API controller (I've played with the example doing Basic Auth, but will need to implement claims).\nWhile I wish I had a continuous block of time to spend on this, I have legacy coding issues that force me to multi-task (albeit slowly)\nAny thoughts on my scenario are always helpful.\n. First let me say thank-you for all your help.  This last article I think put me exactly where I needed to be.  I've left a comment for you over there regarding the latest issue I found, but since the problem seems to be in the IndentityServer code, I will follow up here as well.\nTo recap, I have the following code for the client side:\n``` javascript\n{\n    var client = new OAuth2Client(new Uri(\"https://IdSrv/issue/oauth2/token\"), \"https://localhost:1215/\", \"mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\");\n    AccessTokenResponse response = null;\ntry\n{\n    response = client.RequestAccessTokenUserName(\"username\", \"password\", \"https://localhost:1215/\");\n}\ncatch (Exception ex)\n{\n    Debug.WriteLine(ex);\n    return;\n}\n\nvar token = response.AccessToken;\n\n}\n```\nWhat happens is in the OAuth2TokenController.ValidateClient() method, the ClaimsPrincipal.Current is malformed.  Even though I passed in the settings above, they are not resolving correctly within this function.\n``` javascript\nprivate bool ValidateClient(out Client client)\n{\n    client = null;\nif (!ClaimsPrincipal.Current.Identity.IsAuthenticated)\n{\n    Tracing.Error(\"Anonymous client.\");\n    return false;\n}\n\nvar passwordClaim = ClaimsPrincipal.Current.FindFirst(\"password\");\nif (passwordClaim == null)\n{\n    Tracing.Error(\"No client secret provided.\");\n    return false;\n}\n\nreturn ClientsRepository.ValidateAndGetClient(\n    ClaimsPrincipal.Current.Identity.Name,\n    passwordClaim.Value,\n    out client);\n\n}\n```\nWhile in debug mode the following is true:\njavascript\nClaimsPrincipal.Current.Identity.Name == \"https\";\npasswordClaim.Value == \"//localhost:1215/:mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\";\nWithin the ClientsRepository.ValidateAndGetClient() function, while in debug mode I can change the following values and everything appears to work fine:\njavascript\nclientId == \"https://localhost:1215/\"; // was \"https\"\nclientSecret == \"mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\"; // was \"//localhost:1215/:mTwev3zbTwResG8ffQmR61p92xBiQWZXW+e7AYjHoD8=\"\nSo somewhere my ClaimsPrincipal.Current is not being populated correctly based on what I send in through the initial OAuth2 request.  BTW: I am using the latest builds of server code.\nAny ideas?\nAlso, just one other question.  On my deployment of IdentityServer, when I'm not logged in, I notice that I am denied access to the CSS and the Images, so the signin screen is missing all style and images.  Once I login, everything shows up as expected...  How do I set those folders to not require authentication?\n. Thank-you Sir!\nFor some reason I thought it had to match the Realm/Scope, which must be a uri.\n. Thank you sir!\nUpon further review the DLL was actually called  My.Authentication.Data, not  My.Authentication.Data.Providers.\n. Ok, \nI just watched your new PluralSight module...  Very good.  Yet I'm still disconnected on some issues.  Ok, so I setup using Identity and Access to my IdSrv, and removed the deny=\"?\" and told it not to automatically redirect.  This got rid of the windows claims.\nOk, so I'm doing an SPA, and I want to handle all the login myself, yet leverage the federation services.  So I have my api method that takes the username/password and get a token from the OAuth2 token endpoint.  This works as I now have a jwt token.\nFirst question is how I take this jwt token and stuff it into the session via the FederatedAuthentication.SessionAuthenticationModule.WriteSessionTokenToCookie(sessionToken);\nSecond question is how I take this response.AccessToken which I get from the OAuth2 token endpoint and extract the claims from this encrypted value?\n. Ok, so I found the following articles that showed how to achieve what I am trying to achieve:\nhttp://leastprivilege.com/2013/07/04/identityserver-using-ws-federation-with-jwt-tokens/\nhttp://www.cloudidentity.com/blog/2013/01/09/using-the-jwt-handler-for-implementing-poor-man-s-delegation-actas/\nExcept now I get the following error which I have created an issue for in the IdentityModel Project as it seems to be a problem with the IdentityModel's JwtSecurityTokenHandler().ValidateToken() ability here:\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/issues/93\nHopefully this will be the last wall I need to get over (knock on wood)\n. This is on the IDS website project.  The other problems are all on the client side, but I am trying to replace the sha1 cert with a new sha256 cert for this server to see if that makes a difference with the client side issues...   \nMaybe that has something to do with it.. but would seem the problem is telling the IDS project that anonymous access is allowed on the content folder so that all CSS and IMAGES can be shown without authentication, when redirected to IDS and prompted for login credentials...  currently the screen shows without any CSS or IMAGES....  Once you authenticate.. all appears fine again.\n. Ok, I was able to add the preCondition=\"managed\" option and that removed the redirect link, but still the ~/content folder is being protected and thus does not allow any access until you are authenticated.\nIs there a way to override this so that I can tell the web project to allow anonymous access to the ~/content folder?\n. Ok.  This has finally been resolved.  It appears the network guy had some conflicting NTFS permissions that once resolved, allows the content folder to be viewed by anonymous users.\n. This should probably be in the IdentityModel Project...  I will close and repost over there :)\n. I'm opened a StackOverflow question regarding this here:\nhttp://stackoverflow.com/questions/17556879/what-makes-the-federatedauthentication-sessionauthenticationmodule-return-null\n. Ok.  This one has been resolved.  Apparently the SAM only gets instantiated when running on IIS.   If you are debugging with the built-in Casini server, then SAM is NULL.\nThe solution was to make the project use IIS, and not the built-in web server.\n. ",
    "wqweto": "It's too fragile. If I use the refresh token but the connection fails to deliver response I'll have to ask for user consent out of nowhere. Most of others refresh tokens implementation treat it as equivalent to user/pass pair, i.e. should be stored securely and does not expire (soon) unless explicitly revoked.\n. Never actually but I'm planning on abusing the refresh tokens by storing one in a config file instead of user/pass credentials :-))\n. As an off-topic (as I got your attention) OAuth2 access tokens I get from my IdSrv config are ~900 bytes long. Isn't this a bit excessive as it's going to be used on each call? How can I peak what gets encoded in there?\n. I'll have to do it myself. 10x for the input.\n. It's like user's password changing on each log on. This is a nice feature if the client requests it. Now the client can't just get an access token w/o new refresh token -- other implementations allow for this use case and it's the default one (new refresh tokens are opt-in).\nIf more persistent, refresh tokens can easily be abused for user/pass pair which was my original plan.\n. In web.config?\n. Ahaa, I saw the table content differed and thought it's encrypted (reversibly) only.\nSeem to recall the original binary distro showed the secret in edit client screen too.\n. I thought the access token is encrypted with Symmetric Signing Key setting of the Relying Party.\nHere is the content\n    {\n        \"aud\": \"urn:test_service\",\n        \"iss\": \"http://identityserver.saas.bg/trust/saas\",\n        \"nbf\": 1369657428,\n        \"exp\": 1369693428,\n        \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\": \"user\",\n        \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod\": \"OAuth2\",\n        \"http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant\": \"2013-05-27T12:23:48.165Z\",\n        \"http://identityserver.thinktecture.com/claims/client\": \"Test\",\n        \"http://identityserver.thinktecture.com/claims/scope\": \"urn:test_service\",\n        \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\": \"user@saas.bg\"\n    }\nCan I remove some of the claims after \"exp\"?\n. ",
    "cdycdr": "Thanks for your reply.\nAny suggestions how this task could be accomplished?\n. Well... ^^\nWe're using idsrv for sso. So we have to trick idsrv in a way, that it accepts employee log ins just if the customer account is logged on. IUSerRepository would be the extension point of choice, i guess.\n. Hi.\nMaybe there's something obvious in the (client-side) log...?\n<log removed>\n. Okay. Sorry for that.\nOn the Server I don't see any Errors in the log.\nWhat I see is:\n\nConfiguring token service\nConfiguring identity delegation support\nStarting token request from Gf11620136 for http://localhost:9901/\nAuthentication method: http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/password\nStarting PolicyOptions creation\nToken Type: not specified, falling back to default token type\nRequested KeyType: http://schemas.microsoft.com/idfx/keytype/bearer\nPassive request\nRelying Party found in registry - Realm: http://localhost:9901/ (http://localhost:9901/)\nToken encryption: False\nReplyTo address set to realm address\nSSL used:False\nNo request claims\nPolicyOptions creation done.\nStarting policy validation\nPolicy Validation succeeded\nIssuing identity token\n\n...followed by the response...\n<trust:RequestSecurityTokenResponseCollection xmlns:trust=\"http://docs.oasis-open.org/ws-sx/ws-trust/200512\">\n\u00a0<trust:RequestSecurityTokenResponse Context=\"rm=0&id=passive&ru=%2f\">\n...remarkebly maybe (not shure) these data ends with </Assertion>, leaving the Tags above (RequestSecurityTokenResponseCollection & RequestSecurityTokenResponse) unclosed. Doesn't look like wellformed XML to me.\nAt last I see:\n<Assertion ID=\"_e7a0c602-4362-4446-afb3-7f3867379431\" IssueInstant=\"2013-07-24T10:18:12.773Z\" Version=\"2.0\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\">...</Assertion>\n. The Error occures if one tries to sign in to an Application on the RP.\nThe first log was systemIdentityModel on the RP-Side. The second thinktectureIdentityServer on the STS. systemIdentityModel on the STS also contains no Errors Just \"Encoding cookie using deflate streamm\" and \"Validating SecurityToken\".\nOn the RP-Side only the Exception above shows up as Error in the log. Nothing else.\nBtw: The RP is configured using Identity & Access Tool with the Metadata-Link. So Configuration should be okay I think. Or is it possible, that any known Missconfiguration leeds to this Exception?\n. Since the Error only occures, if I apply TAN-Validation... After that the User is normally signed in.\nI Removed the Redirect and integrated the Validation-Logic into the SignIn-Action. With no success.\nThat's the current code:\n\n// handles the signin\n[HttpPost]\npublic ActionResult SignIn(SignInModel model) {\n    if (!ModelState.IsValid)\n        return View(model);\n    if (!UserRepository.ValidateUser(model.UserName, model.Password)) {\n        ModelState.AddModelError(\"\", Resources.AccountController.IncorrectCredentialsNoAuthorization);\n        model.ShowClientCertificateLink = ConfigurationRepository.Global.EnableClientCertificateAuthentication;\n        return View(model);\n    }\n    var tanAction = TanFactory.Actions.SignIn;\n    var validator = TanFactory.GetValidator();\n    if (validator.IsValidationRequired(tanAction, model.UserName)) {\n        if (!model.IsInTanValidation) {\n            var tanInfo = validator.Begin(tanAction, model.UserName);\n#if DEBUG\n            ViewBag.CurrentTan = tanInfo.Tan;\n#endif\n            //return this.RedirectToTanValidation(TanFactory.Actions.SignIn, model.UserName, Url.Action(\"signin\", \"account\", new { area = \"\" }), model);\n            model.IsInTanValidation = true;\n            model.Action = (string)tanAction;\n            model.Method = validator.Method;\n            return View(model);\n        }\n        try {\n#if DEBUG\n            ViewBag.CurrentTan = validator.GetCurrentTan(tanAction, model.UserName);\n#endif\n            validator.End(tanAction, model.UserName, model.Tan);\n        } catch {\n            model.IsInTanValidation = true;\n            model.Action = (string)tanAction;\n            model.Method = validator.Method;\n            ModelState.AddModelError(\"\", SignIn_cshtml.TanValidationFailed);\n            return View(model);\n        }\n    }\n    // establishes a principal, set the session cookie and redirects\n    // you can also pass additional claims to signin, which will be embedded in the session token\n    return SignIn(\n        model.UserName,\n        AuthenticationMethods.Password,\n        model.ReturnUrl,\n        model.EnableSSO,\n        ConfigurationRepository.Global.SsoCookieLifetime);\n}\n\n. FYI: The Exception was caused by line breaks inside of Tags (Profile) in the XML of the Token.\n. ",
    "ebonato": "Hi madwhistler,\nIf this added line by Brock Allen solves your quest with simplesamlphp, could you please share your used configurations, simplesamlphp versions, etc? I tried to figure out how to integrate both last week, without sucess...\n. Sorry, but I cannot get a way to get things to work...\ndoing a deep research on simplesamlphp, it states wsfed was made in na \"old authentication framework\".\nhttps://groups.google.com/forum/?fromgroups#!searchin/simplesamlphp/wsfed/simplesamlphp/w-1pKC8bZOg/IFFl5UoOUFQJ\nUsing a modified version of your login code into /www/example-simple/wsfed-example.php (as I don't have a base_url()) \n``` php\nif (!$session->isValid('wsfed') ) {\n    SimpleSAML_Utilities::redirect(\n        '/' . $config->getBaseURL() . 'wsfed/sp/initSSO.php',\n        array('RelayState' => SimpleSAML_Utilities::selfURL(),\n        'spentityid' => SimpleSAML_Utilities::selfURLhost() . '/' . $config->getBaseURL() . 'wsfed/sp/prp.php')\n    );\n}\n```\nI was able to get the SAML assertion submitted correctly (via POST)  to wsfed/sp/prp.php (didn't reach this point earlier, as I was using the new SAML2 modules, not the wsfed \"old ones\")\nGetting hands dirty with this Assertion Consumer (prp.php), I was able to check it's only ready for SAML1.0.\nAssertions made by Identity Server are in SAML 2.0.\nI don't have a history background on SAML versions, but this prp expects an SAML inside of an wst:RequestSecurityTokenResponse, but IdSrv writes using trust:RequestSecurityTokenResponse (just beggining, there are mode problems ahead in the code), so i got and SimpleSAML_Error_Error: PROCESSASSERTION\nAlso, I couldn't figure out why revision 2237 of prp.php is referenced on begining. Is there anything wrong with the last revision\n. ",
    "madwhistler": "Sure. I struggled with some SHA256 issues -- support for SHA256 wasn't added until PHP5.3 -- but after dropping back to a SHA1 token encoding, we managed to get a redirect with a digestible SAML token, except for this one tag issue.\nConfiguration of wsfed-idp-remote.php is an issue. In general it looks something like:\n$metadata['http://myidserver/trust/issue'] = array(\n  'prp' =>'https://myidserver/IdentityLogin/issue/wsfed',\n  'certificate' => 'public.pem' );\nNote the certificate is actually a .pem file (public key) which isn't clear in the wsfed docs.\nconfig.php needs:\n    'enable.wsfed-sp'       => true,\nand\n    'default-wsfed-idp' => 'http://myidserver/trust/issue',\nand a certain amount of tearing of hair and debug statements after that. Happy to help further if I can, will post here if the fix works for me.\n. Oh, this is simplesamlphp v1.10 btw. Also here's a code snip for you for the actual login:\n    $config = SimpleSAML_Configuration::getInstance();\n    $session = SimpleSAML_Session::getInstance();\nif (!$session->isValid('wsfed') ) {\n  SimpleSAML_Utilities::redirect(\n      '/' . $config->getBaseURL() . 'wsfed/sp/initSSO.php',\n      array('RelayState' =>  SimpleSAML_Utilities::selfURL(),\n            'spentityid' => base_url() . $config->getBaseURL() . 'wsfed/sp/prp.php'')\n  );\n} \n$attributes = $session->getAuthData('wsfed', 'Attributes');\nwhere base_url() gives a fully-qualified base URL to tack your path onto. Hope this is helpful...\n. Brock's fix seems to work like a champ. prp.php is now happy with the token. Thanks!\n. No, we had to drop back to modifying the auth server to send SAML 1 tokens. \n. ",
    "dragond81": "I'm working on a similar setup with IdSrv and simpleSAMLphp and running into the same issue with prp.php not handling the SAML 2 response. Did you find a solution for handling the SAML 2 Assertions?\n. Thanks for the quick reply. Switching to SAML 1 tokens worked.\n. ",
    "christolo": "Yes, that user was. However, I created a new user with just the user role, and it worked. Sorry to bother you. Incredible job with this framework.\n. ",
    "rushdan": "Dear sir,\nI have same problem as above and try to solve it following your guide.\nI have set the user as 'Mutaz' and set in IdentityServerUsers roles . \n\nAnd then I set the Relying Party \n\nWhen I browse with http://localhost/webapp, the error shown below:\n\nWhat the reason and how to fix ?\nThank you\nFrom\nRushdan\n. this is not question. Links here for my reference.\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/233\n. Thank you for your feedback.\nReference to issue #233 ,\nI have change the url to match the link in RP in Thinktecture configuration.\nin webapp application :\n\nIn Thinktecture configuration :\n\nBut when I browse http://localhost/webapps, the error happen below :\n\nI found this issue has been asked by other members but I don't know how to fix , refer to https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/311\nCan you help me to solve this or give me the links on how to fix this ? \nThank you\nFrom \nRushdan\n. Thank you @leastprivilege ,\nI will try to solve.\nYour help is very appreciated.\nThank you\nFrom\nRushdan\n. Thank you @leastprivilege .\nNow currently thinking on how to solve for connecting Thinktecture to Active Directory\nFrom\nRushdan\n. I'm also want to know how to see the token expired data?  Anyone knows how to do ?\n. Thank you @leastprivilege  , I will explore , If any problem I will message here.\n. which files to write the code ? is it I need to fork your Thinktecture code ? \nI'm new in WIF. A lot of things I learn. Please guide me.\nHow to execute event after I put the url of Redirect URL in the RealParty configuration ?\nThank you\n. ",
    "mickdelaney": "ill close it off. i guess i need a bit more research before i come back. i'm subscribed to the pluralsight so am watching your courses there at the moment. \nregards\n. ",
    "wscalf": "That's part of my design, actually! RuleSets can match against both the IdP and the RP to determine which ones apply in a given situation. :)\n. It's actually somewhat abstract already. My design is incidentally similar to what Martin Fowler describes in the first chapter on his book on Domain-Specific Languages: there's a descriptive model that's actually executable which is constructed from some external representation by another component.\nFor my first draft, there's a static constructor on the ClaimsTransformationRepository class that calls into another constellation of classes to populate the model from an XML file, but that could be redirected to whatever seems appropriate, or could be abstracted further with another level of indirection (say, by first looking at a configuration to decide where to go for its actual configuration and then proceeding.)\nAnnnnnnnd, sure! I'd love to. \n. Makes sense!\nI also think I'm most of the way to an initial preview/revision/etc. I have a more formal task list in a Drive document that I've been keeping updated, but my pending work looks something like this:\n- Configuration. Currently, the executable model that performs the actual work is completely decoupled from the composition mechanism that populates it. It's so decoupled, in fact, that I haven't even implemented a composition mechanism yet.. I'm intending to use a ConfigurationSection for the first pass, that way it hooks into the framework's configuration pipeline (including that handy auto-restart-on-configuration-change feature) as well as some basic intellisense and syntax checking in Visual Studio (as long as an XSD is provided.) I'm considering modeling this (loosely) after NLog's configuration schema.\n- Specific parts. There are a handful of parts I have in mind that I'd like to include but aren't ready yet (like an ADO.NET issuer and a ReplacementPatternSegment.) There is a list of these that I'll be working down shortly. And odds are, if anyone actually uses it, that list will grow. \n- ..And documentation, now that you mention it. There will need to be a lot of documentation.\nAnd..that's about it. \n. Well, IdentityServer already allows arbitrary attribute store logic (it's what the IClaimsTransformationRulesRepository contract - the one I'm implementing - is meant for.) So, in a sense, support for custom attribute stores is already a feature.\nThat said, I intend to make all of the part types extensible - selectors, rules, and issuers - that way, if you encounter something where no existing part really fits, you can add just your own (and not have to throw away the rest of the framework!) I can't promise that that'll make it into R1, but your interest is definitely noted. :)\n. Both could be options.. Although, I used a NuGet package to execute JavaScript in-process for my initial proof-of-concept, but then questioned the value of it. Stock IdSrv already allows C# to be used as a rules language by writing a plugin, and I don't know that writing the transformation rules in JavaScript would be that different.\nUnless it would? Would folks be interested in something like that?\n(Note: the declarative approach is still being developed, albeit somewhat less actively at the moment.)\n. I'd been on a bit of a hiatus for a while, so I hadn't been directly working on this, but I've been following the thread.\nAdding support for scripts was actually what I did as my first pass, and it's simple enough, but I didn't feel like it added much value over offering an interface for developers to implement, since you're still asking for developers to code your transforms. Although, at the same time, you still need developers to code particularly complex transforms, and no transformation framework is likely to foresee every possible conversion. I know I haven't.\nI had considered actually creating a variety of transformation plugins, and it might make sense to go back to that, but what I currently have is designed to be used declaratively (ie: by defining relationships between inbound and outbound claims, not dissimilarly from the above post.) Last night and today I mocked up a sample configuration file for what I'd intended:\n<routes>\n  <route>\n    <identityProvider name=\"Idp\" />\n    <relyingParty name=\"Rp\" />\n    <rules>\n      <when> <!--Rename-->\n        <claim type=\"http://claims.com/claim\" />\n        <issue>\n          <claim type=\"http://otherclaims.com/claim\" value=\"${firstMatched.value}\" />\n        </issue>\n      </when>\n      <when> <!--Regex split/rename-->\n        <claim type=\"http://someotherclaim.com/claim\" valueRegex=\"(?'hour'(1[012])|[123456789]))\\:(?'minute'[123456][0123456789])\" />\n        <issue>\n          <claim type=\"http://timeclaims.com/hour\" value=\"${var:hour}\" />\n          <claim type=\"http://timeclaims.com/minute\" value=\"${var:minute}\" />\n        </issue>\n      </when>\n      <whenAll> <!-- Combine -->\n        <claims>\n          <claim type=\"http://claims.com/givenname\" alias=\"first\" />\n          <claim type=\"http://claims.com/surname\" alias=\"last\" />\n        </claims>\n        <issue>\n          <claim type=\"http://claims.com/displayname\" value=\"${matched[first].value} ${matched[last].value}\" />\n        </issue>\n      </whenAll>\n      <when> <!-- From database -->\n        <claim type=\"http://claims.com/username\" alias=\"username\" />\n        <issue>\n          <fromDb connectionStringName=\"ProviderDB\" selectCommand=\"SELECT FirstName, LastName, Email FROM [User] WHERE UserName = @UserName\">\n            <parameters>\n              <parameter name=\"UserName\" value=\"${claims[username].value\" />\n            </parameters>\n            <claim type=\"http://claims.com/firstname\" value=\"${data[FirstName]}\" />\n            <claim type=\"http://claims.com/lastname\" value=\"${data[LastName]}\" />\n            <claim type=\"http://claims.com/email\" value=\"${data[Email]}\" />\n          </fromDb>\n        </issue>\n      </when>\n      <when> <!-- Conditional issuance -->\n        <claim type=\"http://claims.com/role\" value=\"administrator\" />\n        <issue>\n          <claim type=\"http://claims.com/permissions/administer_application\" value=\"true\" />\n        </issue>\n        <else>\n          <claim type=\"http://claims.com/permissions/administer_application\" value=\"false\" />\n        </else>\n      </when>\n    </rules>\n  </route>\n</routes>\nAlthough, if the group at large would rather see a clearscript-based implementation, I have some ideas on how that might work similarly (ie: still allow route declarations like above, so that those details don't have to be handled in scripts and the scripts can focus on issuing claims.) Something like that could be banged out in a day or few, I think (my original JavaScript prototype only took a few hours), and it wouldn't preclude coming back to this.\nThoughts?\nEdit/PS: Actually, a clearscript handler would fit perfectly at the Issuer level (ie: a rule checks that everything it needs is present + assigns aliases + potentially does some pre-parsing, then the script is executed against the result and can issue claims as-desired) + I have some revisions to that configuration file layout that'll make it more friendly to .NET's configuration loader. Plus, it continues the general design philosophy we've got going here - \n- IdSrv already lets you do anything you want by implementing the IClaimsTransformationRulesRepository interface, and that option will still be available to users. \n- The next phase would allow you to write concise scripts to do specific transforms on in-memory data and wire it all up with a configuration file, which reduces the number of cases that require implementing a plugin and greatly reduces what you have to take into account in your own code, but you still can implement your own plugin if your requirements aren't met (ie: if you need to perform I/O.)\n- It might make sense to allow .NET classes to be used in place of scripts, which could cover the I/O case, but that segues into partial trust territory and would require a CAS profile that describes what user code is and isn't allowed to do. This isn't something I currently have planned, but it might be worth revisiting.\n- Then the next phase preserves the scripting option but offers various declarative options (as described above) for handling common cases + some built in I/O (like the database query issuer.) These objects are mostly implemented, but their configuration is not (I've been using a static constructor as my composer.) \n- When it's all said and done, simple text parsing only requires Regex, simple database queries only require SQL, and complex logic only requires JavaScript ... but if a requirement is completely beyond the scope of this add-in, a user can still write their own.\n..Yeah?\n. Additional question/observation: I'm getting close to a point where it'd make sense to put the code out there were people can see it. What would make sense..?\nCurrently, I'm keeping my source history in a local Git repository that's backed up on Dropbox, but I'm wondering if it would make more sense to fork IdSrv, or possibly create a separate GitHub project. Since what I'm working on is an add-in, I don't know that it belongs in the IdSrv solution, but it does depend on Thinktecture.IdentityServer.Core in order to get contracts and models. (Although, I suppose it could reference the Thinktecture.IdentityServer.Core NuGet package as well..)\nI dunno.. Thoughts?\n. We're planning to use it in the future!\n. ",
    "larsw": "Just a thought, could http://tjanczuk.github.io/edge be used, and transformation scripts be written in javascript?\n. It would be nice to be able to edit and maintain transformation scripts with an editor like ACE; http://ace.c9.io/. Functionality for custom scripts should also be backed by a really simple versioning system/backup in case of human errors. \n. @leastprivilege high five!\n. I've dropped in the test-CA-cert into the Trusted Root Certification Authorities on the sole web role instance, but I still  get the vanilla IIS 500 Internal Server Error message.\n(The test-CA-cert is of course the root of the client cert I've configured for a specific user in IdSrv).\n. It's on my todo list :)\n. I've tried a couple of strategies, the latest gives me:\nAdditional technical information:\nTrace ID: 11b49d42-baca-4368-9392-d2455b46fb12\nTimestamp: 2013-09-20 06:33:04Z\nACS20028: The requested redirection URL is invalid.\nhttps://login.windows.net/0c45021a-6a20-4da9-8965-640117142210/wsfed?wa=wsignout1.0&wreply=https%3a%2f%2fmy-app.cloudapp.net%2f\nI think I've experienced \"Unknown Reply URL\" error messages as well.\n. There's a Sign Out link on the error page, that brings me to:\nhttps://accounts.accesscontrol.windows.net/0c45021a-6a20-4da9-8965-640117142210/wsfed?wa=wsignout1.0\nWhich yields:\nAdditional technical information:\nTrace ID: 0449cc82-5ba8-4fd0-a698-9bf2991a11e1\nTimestamp: 2013-09-20 06:37:21Z\nACS20026: The wtrealm parameter is missing or incorrect.\n. Hi,\nI haven't really solved it - but I guess it's outside the scope of IdSrv and more of a general WS-Fed question -> yes.\n. I set up this recently. I've also extended IdSrv to reach back to the WAAD tentant via the Graph API to enrich the claimset with role claims (which WAAD doesn't provide) before sending it down to the RP.\nI've looked through the config of the IP (WAAD) and the RP, and there's really nothing special, just remember to use the /issue/hrd and not the /issue/wsfed endpoint in the RP's WS-Fed config.\nWhat I haven't figured out yet, is how to properly do Single-Sign Out against WAAD via IdSrv. I have found now way to flow the Reply URL to the RP to the WAAD yet.\n. Well, there we have it, you have configured the WAAD wrong, IdSrv is an RP of WAAD, so you need to set it up to reply to IdSrv's /issue/hrd endpoint.\n--larsw\n. Gah, Dominick beat me by some seconds.\n. Oh, an please regenerate that Symmetric Signing key, since it's now compromised :)\n. Hi,\nIdSrv v2 does not support uploading custom login pages or CSS like ACS.\nThe IdentityServer is a standard ASP.NET MVC solution, and the views are created with Razor/HTML/CSS (LESS) -> I suggest you fork the source code and modify the Views you want to adjust according to your CI/CD in src\\OnPremise\\WebSite\\Views and src\\OnPremise\\WebSite\\Areas\\Admin\\Views.\nOne tip: keep your company modifications on a separate git branch, so it's easier to merge in new commits to the master source branch.\n. Well, guess that's up to you; I personally would go for the solution that had least effort & cost, and that may depend how much you want to tweak. In other words; Your Mileage May Vary.\n. +1 for vNext.\n. Hi,\na) That is really a general Visual Studio question and not related to Identity Server.\n b) As far as I can tell, RegisterClientValidationExtensions is not a part of Identity Server, or any referenced assembly.\nIn general, if I breakpoint isn't hit, open the Debug -> Windows -> Module window, and check that the debugging symbol is loaded for the assembly where the type reside.\n. Thanks. That was a quick reply :)\n. Turn on Failed Request Tracing in IIS to see if it will give you any hints.\nHave you tried deploying a Debug build with customErrors = Off to production?\n. @brockallen \nI have a changeset in my display-users-emailaddresses branch of my fork that fixes this. I tried to attach the pull request to the existing issue (this one / 470) with \"hub pull-request\", but apparently, I don't have the right permissions. Should I a) create a new Pull request / issue, b) you look at my fork/branch and decide if it's good enough or not.\n. Branch:\nhttps://github.com/larsw/Thinktecture.IdentityServer.v2/tree/display-users-emailaddresses\nCommit:\nhttps://github.com/larsw/Thinktecture.IdentityServer.v2/commit/7fd9b876986d438b8d05403ae5a96ffa5ccbf3cc\nIMHO a tabular view (e.g. HTML table) would be better to display the user index page.\n. Sounds to me that you should be asking this question in the ServiceStack Google+ group, if you have problems getting it to handle the Authorization header. https://plus.google.com/u/0/communities/112445368900682590445\n. :) So, in general, I would look at using Thinktecture.IdentityModel and/or the JWT Token Handler (from Microsoft) directly or in cooperation with ServiceStack to validate the token (if it's JWT-based, that is).\n. Hi,\nI think you are correct that there's no code in the IdSrv codebase to support password reset etc.\nA possibility (check other recent Issues) is to integrate Membership.Reboot (https://github.com/brockallen/BrockAllen.MembershipReboot) by @brockallen instead of the out-of-the-box functionality. Alternatively, you can add the password reset functionality yourself to the code.\n. I suggest you move this question to the Thinktecture.IdentityModel repository / Issues section, it's off topic here.\n. There's a reason why the certificates are read from the certificate store; security - proper ACLs controlling access to the private key w/o the need for exposing the password in clear text.\nAre you telling us that we can now navigate download your certificate at https://MyCerts/azure.pfx ? At least create the appropriate entries in web.config to deny access to that file via an HTTP request.\n. Hi,\nYou might be able to redirect the assembly versions\n http://msdn.microsoft.com/en-us/library/7wd6ex19(v=vs.110).aspx\nIf that fails, you can try to clone the git repo and upgrade the .Core / .Repository / WebSite projects\n to all use ASP.NET MVC 5 / Web API 2.\n. Although I gave some hints on how you can solve it, it doesn't mean I think it's good idea either :-P\n. 401: Unauthorized. Given the incoming claims, have you used the ClaimsAuthorizeAttribute to decorate any controllers/actions to specify which one to allow? Or imperative checking with ClaimsPrincipal.Current... ?\n. In the Identity Provider configuration, have you checked the \"Include in Home Realm Discovery\" check box?\n. And is \"Enable Home Realm Discovery\" checked under Protocols -> WS-Federation? In addition, AFAIK \"Enable Federation\" in the same section needs to be checked in order to see the Identity Providers in the configuration three view.\n. Vidar: I'm larswil on Skype.\n. @vidarkongsli Is the user you are signing in with a member of the Identity Server's IdentityServerUsers role?\n. Need to test this better before I create a new PR.\n. ",
    "SteveSyfuhs": "Not sure if you guys are still looking at adding this feature, but I saw this thread and may have a relatively simple suggestion if this hasn't progressed much. Ignore me, otherwise. :) \nIn our STS we use JSON to describe a given transform:\nJavaScript\n{\n    \"From\": \"Some.Named.Attribute.Somewhere\",\n    \"FromType\": null, // a hint, e.g. Int32, NS.Some.ComplexType, etc\n    \"Properties\": [{ \"http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/format\":\n\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n    }],\n    \"To\": \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\",\n    \"ToType\": null // e.g. some type that can have a format\n}\nWe went this way because it was simple to parse, simple-ish to write, and wasn't really a new DSL for someone to learn. It's also easy enough to create a UI for non-devs to master.\nThe gist of the JSON is to take a given attribute from some location be it currently on the ClaimsIdentity or from an attribute store somewhere and then write it out as a claim of a given type. In our case a rule is tied to an attribute provider (or whatever it should be called) and relying party, so for each relying party you can have a relationship to one or more attribute providers through a give rule. Though you might want to reverse that a bit by making the attribute provider accessible in the rule itself if you needed to access multiple providers from a single rule.\nI think you could extend it further by adding the RuleSets Dominick was talking about earlier too, by maybe making one rule a subset of another rule. E.g.\nJavaScript\n{\n    \"From\": \"Some.Named.Attribute.Somewhere\",\n    \"FromType\": null, // a hint, e.g. Int32, NS.Some.ComplexType, etc\n    \"Properties\": [{ \"http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/format\":\n\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n    }],\n    \"To\": {\n          if: { \"^*$RegEx/\" } // a filter maybe\n     }\n}\nJust a crazy idea. Not sure if it's any good, or applicable. :)\n. ",
    "jkrlin": "So the issue still remains; when we use home realm discovery with the \"wreply\" paramater, after login, we are not redirected back based on the \"wreply\". It is ignored and instead we are redirected to the Redirect URL specified in the Relying Party configuration. \nIs this something that can be fixed?\nThanks again\n. I'm not sure why it would be dangerous to use it in a federated scenario but OK in a non-federated one? Why put it in the xctx param; isn't that what wreply is for?\nYes, I tried enabling it in WS-Federation config and it works fine except when using home realm discovery. \nI made a modification to our local copy of IdentityServer to pass the wreply up to the STS and read it back in on the SignInResponse. I'm not sure if that is the right way to do it but it works for our needs for now. An official solution would be appreciated though. \nThese are the changes I made to HrdController.cs:\nAdded Line 249;\n    message.Reply = request.Reply;\nModified Line 289;\n    var reply = responseMessage.Parameters.FirstOrDefault(p => p.Key == \"wreply\").Value;\n    var message = new SignInRequestMessage(new Uri(\"http://foo\"), context.Realm, reply);\n. hmmm... Either I'm doing something wrong or this quite doesn't work with a custom STS. \n1) https://myidsrv.com/issue/hrd?wa=wsignin1.0&wtrealm=urn%3aMyRelyingParty&wctx=rm%3d0%26id%3dpassive%26ru%3d%252f&wct=2013-09-24T23%3a34%3a09Z&whr=MyHomeRealm\n2) After the redirects I sign into the STS, authenticate and am redirected to my relying party.\n3) After some time I again hit the URL from 1. above but again I am brought to the STS login page. A new token is not issued unless I sign in again. \nSo... does the STS need to have some special logic to handle this? Also, we are using token cashing with the bootstrap method.\n. ",
    "rklachko": "The problem is that redirecting back to STS sign-in page will cause a new token and re-login to RP both when choosing SSO and when not, which then won't allow to limit the length of the user session by limiting the token life time.\n. I guess I misunderstood the purpose of setting \"Token life time\" for a RP, I thought it could be used for limiting the length of a user's session. Isn't it?\nAs far as I understand, since it doesn't affect the expiration time of the IDP cookie, it doesn't really limit the users session length. Am I correct?\nAnyhow, I removed my Federated sign-out call when handling a SessionAuthenticationModule_SignedOut (I kind of understood it's not a correct thing to do...). And that solved my issue.\n. Moved. My bad!\n. I went through those steps as well. In addition to upgrading Identity Server to EF6, I had to upgrade the \"ASP.Net Universal  Providers\" to V2.0.0 and fix a little problem in MR (see https://github.com/brockallen/BrockAllen.MembershipReboot/pull/226)\n. The current content of your web.config is a bit unclear to me... but the connection string & the profile config sections in IDP, are configured in the files connectionStrings.config & profile.config accordingly and included in the main web.config using a \"configSource\" section, so your main web.config should not contain additional connection string or profile provider configuration.\n. It didn't happen to me when I upgraded, so I can't help you here. But try\nto remove them if you want things to work.\nOn Tue, Jan 14, 2014 at 5:39 PM, UkraineTrain notifications@github.comwrote:\n\nIt looks like those extra lines were added by upgrading \"ASP.Net Universal\nProviders\" to V2.0.0. I didn't put them there explicitly.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/546#issuecomment-32274964\n.\n. Are you sure you have a reference from the IDP website to MembershipRebootUserRepository?\n. \n",
    "jhested": "I had the same issues... Solved it by enabling Static Content in IIS\nhttp://stackoverflow.com/questions/6089070/resource-interpreted-as-stylesheet-but-transferred-with-mime-type-text-html-in-a \n. ",
    "yperry": "Is there a way to authenticate my request to a java web app.\nMy IIS sends a request to a java container, therefor, can I configure it (the java container) to read the claims and to trust the specific  claims provider though it has no wif.\n. ",
    "thj-dk": "I wanted the token encrypted to heighten the security, but I am actually a bit in doubt whether or not it is necessary to encrypt this type of token? I am of course encrypting the token ultimately issued by Identity Server to the RP.\nThank you very much for the added feature! I will be testing it later today or first thing tomorrow.\n. Sorry man. I've been busy with another task at work. I will look into it later today hopefully. I have definitely not forgot about it.\n. I finally got to test it. I'm getting the following exception:\nID4014: A SecurityTokenHandler is not registered to read security token ('EncryptedData', 'http://www.w3.org/2001/04/xmlenc#'). \n. Sorry, yes. ADFS 2.0, SAML 1.1 token.\nFails at \"fam.GetSecurityToken(Request)\"\nStack trace:\n[SecurityTokenException: ID4014: A SecurityTokenHandler is not registered to read security token ('EncryptedData', 'http://www.w3.org/2001/04/xmlenc#').]\n   System.IdentityModel.Services.TokenReceiver.ReadToken(String tokenXml, XmlDictionaryReaderQuotas readerQuotas, FederationConfiguration federationConfiguration) +519\n   Thinktecture.IdentityServer.Protocols.WSFederation.HrdController.ProcessWSFedResponse(String wreply) in ...\\Protocols\\WsFederation\\HrdController.cs:101\n   lambda_method(Closure , ControllerBase , Object[] ) +127\n   System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters) +248\n   System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters) +39\n   System.Web.Mvc.Async.<>c__DisplayClass39.b__33() +120\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass37.b__36(IAsyncResult asyncResult) +15\n   System.Web.Mvc.Async.<>c__DisplayClass2a.b__20() +31\n   System.Web.Mvc.Async.<>c__DisplayClass25.b__22(IAsyncResult asyncResult) +230\n   System.Web.Mvc.<>c__DisplayClass1d.b__18(IAsyncResult asyncResult) +28\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +53\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.<>c__DisplayClass8.b__3(IAsyncResult asyncResult) +42\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +606\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +288\n. I manually applied the changes to the HrdController from the changeset you linked to. I've got some customizations and I can't pull in all the changes at the moment. I will dig a bit more, trying to figure out if I'm missing another change.\n. ",
    "davewoodward": "Was this ever resolved?  I am trying to support the exact same scenario.\n. As much as anything I wanted to make sure that this was the case and that I wasn't missing anything.\nIn my particular test case, I have been accessing a relying party configuration setup within ADFS through a .Net application via WS-Trust to obtain a SAML token.  From everything I've read and tried requires the token to be configured as encrypted in ADFS.  This was working fine but I really needed the token in the JWT format to interact with a RESTful service.  That is when I ran across your product.  I basically tried to access the same relying party configuration through identity server's ADFS integration capabiltites and received this error.  Once I removed the token encryption from the ADFS configuration everything worked fine.  I don't know that this is an issue necessarily because I can't think of any use cases off hand where you would want to obtain a token in two different formats for the same relying party.  I just couldn't find anywhere that it explicitely stated that this wasn't supported.  Hopefully this thread can be used to help anyone who runs across this scenario in the future.\nThanks for your help!\n. ",
    "envitraux": "Okay. I saw that azure acs does not support LinkedIn at the moment. I do not believe my knowledge is good enough at the moment to do this myself. How would I ramp up on making a custom implementation?\nKeith\nOn Jun 24, 2013, at 2:20 AM, \"Dominick Baier\" notifications@github.com<mailto:notifications@github.com> wrote:\nOAuth does not specify how authentication works (it's for authorization not authentication) - that means that you have to handroll your \"Oauth\" for every provider you want to use. We chose to support Google, Facebook and Live.\nYou could add support for LinkedIn, but that would be another custom implementation.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/257#issuecomment-19890789.\n. ",
    "bmingles": "Thank you for the response. I'm starting to read more on OAuth2 implicit flow. One thing that I'm trying to understand is how the token needs to be persisted in the browser for the sake of SSO. All of the JS samples I have seen just set a Bearer authorization header and pass the token with a request. If I were to switch to another app hoping to use the token for SSO, I'm guessing I lose the token right? Does this mean that it needs to be stored in a cookie or some sort of client storage, or is there a better way?\n. Thank you again for being so responsive. Just to make sure, is this the best forum for these types of questions, or is there a better place?\nIf token re-use is not very common, what is a standard way of implementing single sign on using Identity Server for both JS clients and server side clients? Does this involve issuing multiple tokens?\n. So if I am using Thinktecture Identity Server as my IdP, is it possible to configure SSO using OAuth, or do I have to use WS-Federation? If so, are there any SSO examples using OAuth?\n. Yes. Thank you again for your prompt responses. They helped me find the solution I needed.\n. ",
    "4deeptech": "I removed the deny users entry by replacing it with allow users=\"?\".  In debug it is using IIS Express...not sure if that matters but it is strange that no matter what I do it does not work. I have tried removing all instances of the authorization element as well.\n. I made some progress with this.  Just for the heck of it I unchecked Use IIS Express in the project settings and magically it all worked properly.  Not sure what's going on with IIS Express(8.0 on Win 7 Pro).  Now I have a different issue related to federated signout.  I set the reply url but it Identityserver does not redirect back the the reply url specified in wreply.  It displays a page with a link that says Return to application.  Can I tell IdSrv to return automatically?\n. OK. I just changed the Code such that if a reply param is not empty or null it redirects to the reply url.  Thanks for your help.  BTW, I am running Identity server against customized MembershipProvider, RoleProvider, and customized IdSrv Repositories using Redis as the store. I did it as a mechanism for learning both Redis and IdSrv.\n. ",
    "kocakden": "Thanks for the response.\nIs there any alternative for .Net 4 WebAPI?\nD\n. ",
    "mayoori": "Okay Thanks a million!!\nNow I am trying to create users from my mvc application which will be saved in Thinktecture User table\nAfter analyzing the code I understood that I need to use Create method in IUserRepository .\nHow can I use this create method in my MVC application?\nI also installed the Thinktecture.IdentityServer.Core using nuget. Can you please suggest how to create users in that table?\n. Okay thank you for your help!\n. ",
    "wandelson": "is not related to identityServer is related to Active Directory Federation Services business solution from microsoft.\nenvironment:\nasp mvc consumes wcf .\nWhat do I need?\nImplement security in wcf and pass the token from client to wcf.\nI want to implement the example below, only using ADFS.\nhttps://github.com/thinktecture/Thinktecture.IdentityModel.45/tree/master/Samples/MVC%20and%20WCF\nCan you help me? but do not know what to do ?\n. I can not copy the SignIn.cshtml.fr.resx it is locked\n. I know how to create resource / resx files! \nI just think that these resource / resx were created in another ide Zeta Resource Editor. \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/115\nConfused.\nif you try to copy the file SignIn.cshtml.fr.resx \nwill not get it seems that it is locked.\n\nhelp me\n. sebastien-allard\nonly he should know how to do .. kkkkk \n?????\n. Thank you very much!\n. really was ok. \nIt was an    Thinktecture identity server  error\nShared / SignOut.cshtml \nWas not compiling. \nResolved. \nThank you very much.\n. \n\nHelp pliss.... I do not know what to do\nif I delete the cookies. \nFedAuth\nFedAuth1\nBack up and running..\n. brockallen,\nThank very much!\n. Brock,\nagain the problem.\n. not solved.\n=/\nAzure - Application has two instances.\nwhat to do?\n. did not work\n\n\n\nF5\n. still to no avail\nenable chache?\nhttp://onwindowsazure.com/storing-session-state-in-windows-azure-co-located-cache/\n\n\n. Is already set with\n<customErrors mode=\"Off\" />\n\n. \n. Thank you very much.\n(;\nYou helped me a lot.\nsolved.\nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/issues/114\n. is complex upgrade?\n. ok. thanks\n. ",
    "geetar85": "v2.2 of IdentityModel? The IdentityServer we are using had 2.3.2 of Thinktecture.IdentityModel originally.\n. Gotcha, I'll update and see if the issue goes away. Thanks!\n. I swapped it out, and I'm still getting the error. I'm using the same DB so I'll try starting completely from scratch to see if anything changes, but it looks like I'm still getting it. I must be missing something on the client side.\nThis is my configuration for the RP:\n``` XML\n\n\n\n\n\n\n<add type=\"MvcApplication3.TokenHandler.CustomSecurityTokenHandler, MvcApplication3\" />\n\n\n\n\n<add type=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n        <remove type=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\n\n\n\n\n\ncertificationValidationMode set to \"None\" by the the Identity and Access Tool for Visual Studio. For development purposes.\n<certificateValidation certificateValidationMode=\"None\" />\n\n\n\n\n\n\n\n\n```\n. Tried starting from scratch and I am still getting the error. The only thing that changed was setting the Default WS* Token to urn:ietf:params:oauth:token-type:jwt. That is supported, right?\n. I was trying to use the x.509 cert and doing it all in the config section. I set the certificateValidation to PeerTrust and added the Cert Thumbprint in the TrustedIssuers section. Got most of this from Vittorio's blog post: http://www.cloudidentity.com/blog/2013/01/09/USING-THE-JWT-HANDLER-FOR-IMPLEMENTING-POOR-MAN-S-DELEGATION-ACTAS/\n. I made some progress. I think I had my relying party misconfigured so it was trying to do symmetric signing instead of using a cert. As soon as I removed the symmetric key from the relying party configuration in identity server, it looks to be attempting to use a cert. However, I have a new error, this time occurring in IdentityServer. Have you seen this before?\n``` C#\n[ArgumentOutOfRangeException: Jwt10530: The 'System.IdentityModel.Tokens.X509AsymmetricSecurityKey' for signing cannot be smaller than '2048' bits.\nParameter name: key.KeySize\nActual value was 1024.]\n   System.IdentityModel.Tokens.SignatureProviderFactory.CreateProvider(SecurityKey key, String algorithm, Boolean willCreateSignatures) +963\n   System.IdentityModel.Tokens.SignatureProviderFactory.CreateForSigning(SecurityKey key, String algorithm) +47\n   System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateSignature(String inputString, SecurityKey key, String algorithm, SignatureProvider signatureProvider) +254\n   System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateToken(String issuer, String audience, ClaimsIdentity subject, Lifetime lifetime, SigningCredentials signingCredentials, SignatureProvider signatureProvider) +1702\n   System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor) +197\n   System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal principal, RequestSecurityToken request) +424\n   System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(SignInRequestMessage requestMessage, ClaimsPrincipal principal, SecurityTokenService sts, WSFederationSerializer federationSerializer) +317\n   System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(SignInRequestMessage requestMessage, ClaimsPrincipal principal, SecurityTokenService sts) +42\n   Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationController.ProcessWSFederationSignIn(SignInRequestMessage message, ClaimsPrincipal principal) in c:\\Users\\brett.grosvenor\\Documents\\GitHub\\Thinktecture.IdentityServer.v2\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\WSFederationController.cs:67\n```\nMy cert is valid and the public key is definitely 2048 not 1024...\n. Got it working. After I realized I needed to restart the server after changing certs, things starting falling in line. The biggest hurdle was I had the symmetric key set for the relying party instead of it being blank, so it wasn't trying to use the cert for signing. Thanks for all the help!\n. Sorry, was out on vacation for a couple of weeks. I did not set a fixed machine key since it was just one server, but I will try that.\n. We have a machine key setup on our Identity Server, even though it's only one server and we aren't seeing the problem anymore.\n. Fedauth cookies being gone after you close the browser doesn't sound like an issue to me. If you are using session cookies and not persisting them to disk that is the correct behavior.\n. ",
    "rgupta77": "How do i make this work with the symmetric signing key?\nIn the IdServer i have configured the replying party with the symmetric key (using the Generate button)\nwhat should i do in the MVC4 application to make this work?\nI have this working with the X509 certificate. However I want to make this work with the symmetric signing key\n. I have successfully been able to integrate my MVC app with the Thinktecture identity server. however currently i am using X509 certificates for the token encryption. I want to use symmetric key for the encryption of the JWT tokens.\nI have tried using the following configuration:\nsecurityTokenHandlers\nadd type=\"Microsoft.IdentityModel.Tokens.JWT.JWTSecurityTokenHandler,Microsoft.IdentityModel.Tokens.JWT\" \n securityTokenHandlerConfiguration\n    issuerTokenResolver\n      type=\"Microsoft.IdentityModel.Tokens.JWT.NamedKeyIssuerTokenResolver,\n        Microsoft.IdentityModel.Tokens.JWT\"\n      securityKey\n          symmetricKey=\"+zqf97FD/xyzzyplugh42ploverFeeFieFoeFooxqjE=\"\n             name=\"https://localhost/TestRelyingParty\" \n    issuerTokenResolver\n  securityTokenHandlerConfiguration\nsecurityTokenHandlers\nin the system.identityModel config.however the identity server is unable to redirect back to the Replying party after authentication.\nCan you suggest if this is the way to go:\nhttp://stackoverflow.com/questions/14735753/how-to-configure-microsoft-jwt-with-symmetric-key\nThanks,\nRohit\n. ",
    "KyleFulton": "As mentioned originally, \"I have configured my ADFS instance as an identity provider within IdentityServer. I have configured my site to be a Relying Party on Identity Server\".\nThanks for the info - I will check the config when I get back to my computer.\n. With some additional planet alignment, it is working.  Thanks.\n. It looks like my reply was lost, so if this ends up doubling up, sorry.\nAbsolutely not -- all reply to addresses will be in the same realm (https://x.com, for instance).  For a single SSRS, instance, you can end up with https://x.com/ReportServer and https://x.com/Reports.  In my product, we will have an admin site, several supporting portal sites, etc which we support with SSO.  evil.com is not within the realm, which is one of the restrictions enforced.\nI currently support these with domain restricted session cookies.  \nIf I own x.com, then I also own y.x.com -- by default, any x.com request will route to me, barring some client-side hosts file edits or DNS issues.\n. It would nice for realms to support hosts and/or wildcards, but that seems out of scope so I can cope with having uglier URLs for now\n. How would the client specify the target replyTo?  Is that the wreply querystring arg?  Would a wildcard be allowed?\n. Once the contract is specified between the RP and the STS, wiggle within that contract should be allowed, IMHO.  Explicit wildcards allow that wiggle where it is needed, but limit it where it is not desired.\n. I do not want to pester, but what is wrong with explicit wildcards?  Is it too open in some insecure way that I am missing?\n. Thank you for your point of view.  I am working on projects with pretty large topologies that can legitimately be covered by a single token.  Session cookies have robustly handled wildcards for a long time.  I do not need an unlimited number, but if someone uses a supported CMS to add a new portal for an existing community and they want to use a host name, no one in IT should be required to reconfigure the STS.  \nA wildcard allows for that - I would never expect a wildcard that was open, so an open redirect is unlikely and easily prevented.  If you fear that, a list is fine, but increases configuration burden.  I want to keep things secure, but decrease maintenance or extension burdens.  In a large horizontal organization (like a university), empowering employees, while keeping trusts secure, requires an accessible, extensible structure.\nBut this is your product, so it is obviously yours to define, etc.  I am torn between abandoning it and extending it.\nRegards,\nKyle\nOn Jul 6, 2013, at 12:11 PM, \"Dominick Baier\" notifications@github.com wrote:\n\nFrom a security point of view, the more exact the match the better. Don't wanna end up with an open redirect.\nAnd as I said - if you need to many reply URLs - you are missing the concept of wctx in WS-Federation.\n\u2014\nReply to this email directly or view it on GitHub.\n. I like the list construct you proposed, with the default behavior.  But the wildcard would give me more bang for the buck in the short term.  \n\nDoing a pull and setting up another repository is your recommendation?  I would not need to change many of your files to support the behavior.  How would you propose I do this?  If you want to take this conversation off of the thread, feel free.\nRegards,\nKyle\nSent from my phone\nOn Jul 6, 2013, at 1:35 PM, \"Dominick Baier\" notifications@github.com wrote:\n\nWell - it is open source - you could extend it - e.g. allow wildcard characters in the reply URL field.\nI would accept that pull request if it is done in a way that both wildcards and strict matches ares supported.\n\u2014\nReply to this email directly or view it on GitHub.\n. The RP can be a broader concept than the current implementation allows. If the STS RP is configured to allow it, then yes, this is desired behavior. But I would expect a single token that both variants within the RP (app1 and app2) trust. \nThe basic concept is that it is possible to have a broadly defined RP, like a university. Once I have used an STS to establish identity with a single university site, I should be able to navigate within other parts of the university site without being challenged, given appropriate authorizations. \nAre you familiar with session cookie domains? The use case seems broadly applicable to me, but obviously it is not required to have a wild card reply to. The RP can then use the token within a session cookie that has a domain defined in it that will allow the cookie to be reused across multiple university sites.\nRegards,\nKyle\n\nSent from my phone\nOn Jul 6, 2013, at 3:06 PM, \"Dominick Baier\" notifications@github.com wrote:\n\nSo the other issue is this: if App1 and App2 share a realm - let's say urn:apps (and let's assume the reply would be allowed back to both apps).\nThen both tokens will have urn:apps as the audience. Meaning there is no way to distinguish between the two tokens and app1 can use bob's token to impersonate bob in app2.\nIs that really what you want?\nThere's a good reason why every RP should have its own realm (and thus audience).\n\u2014\nReply to this email directly or view it on GitHub.\n. So a relying party is a single website identified by a single URL?  Seems extremely limited and not reflective of modern topologies, but I am trying to look at this from a technical and philosophical meta way.  How is it scary?  \n\nThe enhancement we are talking about will impose a tight boundary around the valid reply to addresses.  Broad, targeted cookies are only stored in the session encrypted, are http cookies and are only sent to web addresses within the domain, so their existence can be identified by a client, but not their details.  I do not know of tech that can hijack those cookies and repurpose them.  How are the cookies scary?\nAn IP-STS is meant to provide identity to systems that trust it.  A system can be defined by a single URL or a set of URLs, like https://student.univ.edu, https://faculty.univ.edu, https://ugradapp.univ.edu, etc.  The point of the wildcard is to prevent the need to write another component to auto-provision when that seems unnecessary.  In the use cases I am referencing, the RPs all have a single domain, so any sub domain URL will still be under the RP's control, never being capable of being routed to evil.com.  They could also use paths, which would be supported by your concept of the RP, but leads to uglier URLs.\nOnce identity has been established, authorization takes over within the RP.  I create a claims principal built on return claims bolstered by RP information to give a full picture of the security context affiliated with that identity.  Does Amy have access to faculty.univ.edu?  Can she see Bob's grades?  Is she an active student?  Is she a grad assistant?  Etc.\nGoogle's Open ID seems to support wildcards, fwiw.  ADFS has similar constructs, with different audiences.  The wreply context seems to be exactly the breadcrumb needed to lay the appropriate return from the IP-STS and seems to be used by several well constructed STS's.\nOn Jul 7, 2013, at 4:51 AM, \"Paul Lemmers\" notifications@github.com wrote:\n\n@Kyle: SAML Tokens are meant for specific RPs. Broad targeted cookies and wreply are scary. SSO should solve any user issues. Authenticated provisioning of RPs can be automated. That would solve everything without going down the scary path......\n\u2014\nReply to this email directly or view it on GitHub.\n. I only looked into ADFS long enough to know that I did not want it to use it as my root IP-STS.  It seemed to honor the wreply param as long as it was in the audience list.\n\nI do not disagree about the reciprocity, which is why valid reply to addresses should be used to limit allowed reply to's.\nSingle realm identified by URI is correct and ideal.  I was not referring to a realm by its URI, but referring based on the scope of its relevance.  A university's realm might be urn:univ.edu, but there might be several URLs.\nTo requirements:\nAny replyto URL in IdSrv.v2 will support sub domain wildcards.\nAny reply to URL wild card has to occur at a sub domain.  So https://.sub.domain.com/app1 is supported (https://sub..domain.com/app2 could be supported, but I would be fine limiting the wildcard to the lowest sub domain.\nThe sub domain wildcard can substitute for one or more sub domains, including www.\nMatching reply to URLs will now include wildcard considerations.\nIf no wreply is submitted, then default behavior is implemented.\nIf no wreply is submitted and there are only wildcard reply to's, a 400 Bad Request should be returned.\nIf wreply is supplied and does not match a reply to URL, an appropriate HTTP code should be returned (403 Forbidden).\nIf wreply is supplied and matches an RP reply to, then the redirect will be to the wreply address.\nSent from my phone\nOn Jul 7, 2013, at 9:55 AM, \"Dominick Baier\" notifications@github.com wrote:\n\nThe last time I looked at ADFS, they supported multiple audiences per RP - but a single reply URL. Has that changed?\n\"An IP-STS is meant to provide identity to systems that trust it.\"\nand vice versa. The IdP also needs to trust the RP. And the reply to is part of that decision making.\n\"A system can be defined by a single URL or a set of URLs, like https://student.univ.edu, https://faculty.univ.edu, https://ugradapp.univ.edu, \"\nI don't agree here, realms a URIs - not URLs. And should not be treated hierarchically. I actually prefer to use URNs these days for realm names, just to make that very clear.\nSo IdSrv behavior to imply structure on a realm is wrong - and something I intend to change. At the same time I could imagine adding new features around reply URL resolution.\nSo again - how would you imagine that should work. Just to capture some requirements.\n\u2014\nReply to this email directly or view it on GitHub.\n. I appreciate this group looking at my comments and reqs.  DNS spoofing invalidates the wildcard .   The list approach seems warranted.\n\nOn Jul 7, 2013, at 9:40 AM, \"Paul Lemmers\" notifications@github.com wrote:\n\nFor what it is worth, from WS-Fed 1.2 chapter 16 (Security Considerations):\n3939 When using Web messages care should be taken around processing of the wreply parameter as its value\n3940 could be spoofed. It is RECOMMENDED that implementations do explicit lookup and verification of URL,\n3941 and that these values be passed with transport security.\nA list is one Obvious implementation, but indeed let Kyle specify his requirements.\n@Kyle:\nDo realize that anyone can cause the get with wreply=https://evil.univ.edu/answers/mathexam Which results in sending your widely usable SAML Token to evil... So be very careful with your wildcard wishes.... And as Dominick said, you can solve it in wctx too.\n\u2014\nReply to this email directly or view it on GitHub.\n. But if the reply to URL does not match, it will not get past the filters as proposed, by my withdrawn wildcard spec or Dominick's list spec.  So a reply to of https://evil.univ.edu would match a wildcard of https://\u2022.univ.edu and route to https://evil.univ.edu.  But https://evil.com would be rejected.\n\nIf univ.edu is registered and SSL is being used, then evil.univ.edu would have to have an appropriate cert.  And would have to get by the DNS routing.\nSpoofing would need to occur for that to route to successfully load.  Or could someone spoof https;//evil.univ.edu through traditional routes?\nOn Jul 7, 2013, at 10:37 AM, \"Paul Lemmers\" notifications@github.com wrote:\n\n@Kyle: No need for DNS spoofing. Any Web Site can redirect to the IP with wa=wsignin1.0&wreply=the-evil-URL and thus have the SAML token posted to evil.\nThat is exactly why wreply is so often ignored.....\n\u2014\nReply to this email directly or view it on GitHub.\n. I think your concern is true if there are no limits imposed on wreply and it is always honored.\n\nOtherwise, please read my spec and comment.  My spec seems problematic to me if someone can route https://evil.univ.edu to something not controlled by univ.edu.\nSent from my phone\nOn Jul 7, 2013, at 10:37 AM, \"Paul Lemmers\" notifications@github.com wrote:\n\n@Kyle: No need for DNS spoofing. Any Web Site can redirect to the IP with wa=wsignin1.0&wreply=the-evil-URL and thus have the SAML token posted to evil.\nThat is exactly why wreply is so often ignored.....\n\u2014\nReply to this email directly or view it on GitHub.\n. The wildcards I specified have to be subdomains.  So https://\u2022.com should be invalid.  Misconfiguration is possible, but will always resolve to the main domain, so it can be tracked/fixed.  I am not sure it is as permissive as you fear.\n\nYou write: Maybe it is not just the hostname, probably it has to be something like the algorithm for cookies with domain and path combinations?\nI am not sure I understand.  It is not just the host name.  The RP just gives me generic info.  Are you referring to the STS cookie?  My SSO cookies tend to be at the / path, although the CMS cookies are more narrowly targeted sometimes.  If you are referring to the IP-STS cookie passed back to the RP, I would like to be able to configure the domain and path of the STS cookie - I have not looked at the impl for it in IdSrv.  Within the RP security infrastructure, I create a WIF SAM cookie, which seems to fit the bill.\nYes, the config for any RP, conceptually that is the correct scope.  You would have to specify appropriate reply to addresses per RP.\nTo me, it simplifies SSO, since I can rely on the IP-STS across related sites, like SSRS Report Manager and Report Server.\nI think it is important not require this behavior, so feel free to ignore, obviously.  I also wanted to make it unobtrusive, so you can ignore in peace.\nAfter further review, I would like to implement.  I would like to review the cookie code, but my memory of the cookies are that it is within the IP-STS domain, which is appropriate and does not require changes.\nOn Jul 7, 2013, at 11:38 AM, \"Paul Lemmers\" notifications@github.com wrote:\n\nIFF all things are configured properly, then an intentional attack by evil requires some tricks. But misconfiguration (very permissive wildcards) is probably a bigger risk. Students tend to find that remarkably quick. Some report it, some use it for pranks and some abuse it. I think it is scary, just a warning.\nI had read your specs. Maybe it is not just the hostname, probably it has to be something like the algorithm for cookies with domain and path combinations? Otherwise the POST will be sent, but then the session cookies don't match?\nThat means you will have to do something in all RPs too? I still wonder if it is worth the trouble, extra complexity and new corner cases. Certainly given the other possible solutions.\nOn a \"List\": +1. But wildcard is complex and scary, I will not use wildcard :-)\nAnd even with \"List\". How does Signout work in this scenario? Who clears which Authentication session cookies?\n\u2014\nReply to this email directly or view it on GitHub.\n. Ok.  I think I am ok there, but I have been confirming with the WIF SAM cookies to see if I need to bolster/configure them.\n\nSent from my phone\nOn Jul 7, 2013, at 1:03 PM, \"Paul Lemmers\" notifications@github.com wrote:\n\n@Kyle: I was referring to the RP Authentication session cookies.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is conceptual right now, so no fiddler traces, yet.  I am driving home, stuck in construction traffic on I-24 and hours from home, alternating between stopped and 5mph.  I will extend IdSrv locally and prove out the cookie flow, etc.  So it should become verifiable in the next day or so, depending on my other sprint responsibilities.  For some tests, I will turn off TLS/SSL so that Fiddler will give a better trace.  I will be happy to share those with the identity server team before requesting a pull.\n\nI have ADFS configured as an IP for IdSrv.  And Facebook, fwiw.  I will also configure IdSrv with an extant membership provider in the near term that I currently use for db and LDAP authentication.\nMy wife is typing, btw.  So no flaming is necessary.\nOn Jul 7, 2013, at 2:35 PM, \"Paul Lemmers\" notifications@github.com wrote:\n\nI am not yet convinced that you are.\nYou could convince me by sending a Fiddler trace of an ADFS server with your setup with a single RP in ADFS (with multiple EndPoint URL on different host names, one RP in ADFS). Another IP than ADFS is OK too.\nThen Signin, Go to the other URL for same RP, then signout.\n:-) Surprise me :-)\n\u2014\nReply to this email directly or view it on GitHub.\n. Jist a quick update...  I am running into a certificate problem which is preventing my cookies from being able to be shared from IIS with SSRS, but the wild cards are working well within IdSrv within IIS or SSRS, but using DPAPI encryption is failing, hence the need for the certs.  Once I resolve my certificate error, I will post more results and get that Fiddler trace out.\n. I have IdSrv working with the wildcard in a realm that includes a website and SSRS 2012 Report Server/Report Manager.\nThe fiddler log records browsing to the website, logging in via ADFS, opening a new tab and browsing to the SSRS Report Manager.  Then going back to the admin website and signing out.\n\n\nIf you want me to give you the Fiddler .saz Session Archive, I am happy to share it upon request.\nBasically, the most significant and disappointing snag I ran into (other than a null char at the beginning of my thumbprint that Notepad++ would not show) was a difference in cookie format between WIF3.5 and WIF4.0, which lead me to roll back my admin site, which is written with .NET 45, to use the WIF3.5 binaries, etc.\nSomeday, MS might upgrade SSRS to use modern .NET.  In the meantime, unless I write my own SAM token infrastructure, I can live with WIF3.5.\n. BTW, the Redirect URL in my modified IdSrv v2 Reply Party is: \nhttps://.trsstl.threerivers-cams.com/\nwith a realm of: \nurn:trs-kf-d.trsstl.threerivers-cams/CAMSMosaic\nThe wctx.wu used by ADFS to supply the requested reply to for signin messages is parsed and compared against the reply to mask using regular expressions formed by anchoring beginning and end, and replacing wildcards with  a '.*'  I will likely add a few additional protections, but we can discuss those.\n. Two comments\n1.)  I am using host app separation, not path, so my path can be root without a problem.  I will likely add a shared path that every app in the app group realm can share.\n2.)  I think there are other changes that would also need to be made, beyond the realm resolution.\nFor instance, I changed how the signout cookie is handled and managed when additional signin requests are handled.  I had to modify the SignInSessionsManager class.\nThis method implementation is from the HrdController class.\n```\n    private ActionResult ProcessSignInRequest(SignInRequestMessage message)\n    {\n        if (!string.IsNullOrWhiteSpace(message.HomeRealm))\n        {\n            var idp = GetEnabledIdentityProvider(message.HomeRealm);\n            if (idp != null)\n            {\n                // code Kyle added\n                var mgr = new SignInSessionsManager(HttpContext, _cookieName);\n                if (mgr.GetEndpoints().ContainsKey(message.Realm))\n                {\n                    if (!string.IsNullOrEmpty(message.Reply))\n                    {\n                        mgr.AddEndpoint(message.Realm, message.Reply);\n                        return new RedirectResult(message.Reply);\n                    }\n                }\n                // end of code Kyle added\n                if (idp.Type == IdentityProviderTypes.WSStar)\n                {\n                    return RedirectToWSFedIdentityProvider(message);\n                }\n                else if (idp.Type == IdentityProviderTypes.OAuth2)\n                {\n                    return RedirectToOAuth2IdentityProvider(idp, message);\n                }\n            }\n        }\n        else\n        {\n            var pastHRDSelection = GetRememberHRDCookieValue();\n            if (String.IsNullOrWhiteSpace(pastHRDSelection))\n            {\n                return ShowHomeRealmSelection(message);\n            }\n            else\n            {\n                return ProcessHomeRealmFromCookieValue(message, pastHRDSelection);\n            }\n        }\n    return View(\"Error\");\n}\n\n```\nAgain, thank you.  I will keep it branched and look at changes as they are added.  What I have now will work going forward.  I would like to get back into the fold sometime, but thank you very much for this STS that the dev community can use as a starting point.\nDate: Fri, 19 Jul 2013 11:04:54 -0700\nFrom: notifications@github.com\nTo: Thinktecture.IdentityServer.v2@noreply.github.com\nCC: kylefulton@outlook.com\nSubject: Re: [Thinktecture.IdentityServer.v2] WS-Federation: Allow a list of valid replyto URLs (#287)\nWell - if it works for Kyle, that's cool. \nI don't think I will change the implementation soon. Other things are more important right now.\nMaybe I can make the realm resolution pluggable.\n\u2014\nReply to this email directly or view it on GitHub.                  \n. That worked like a charm.  Thanks.\n. ",
    "joshuapeterson": "I am on the latest, I was looking through the code and noticed that as well.  I'll keep digging and try to figure out what is going wrong.\n. I must have had a problem in my latest deployment of it.  I redeployed everything and it's working fine now.\n. ",
    "prasadnadendla": "Thank you very much for the reply Dom.\nBut am getting the error like this\nJwt10530: The 'System.IdentityModel.Tokens.X509AsymmetricSecurityKey' for signing cannot be smaller than '2048' bits.\nParameter name: key.KeySize\nActual value was 1024.\n. Thank you dom.\nI created new certificate and am using when am running Relying party am getting the error like \nA SecurityTokenHandler is not registered to read security token ('BinarySecurityToken', 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'). \n. Got it Dom,Thank you very much for giving help\nCould you please say how can i consume the receiving JWT token which is coming from thinktecture identity server\n. After the token is returning from thinktecture identity server to relying party.Can i retrieve the claims directly from thread.currentprincipal at relying party\n. Got it Dom.Thanks a lot for everything\n. Thank you Dom.\nCan i use one copy of thinktecture identity server as IP-STS and another one as RP-STS?\n. Thank you Dom\nCould you please tell me about the configuration how can i achieve?\n. Thank you  Dom.\nI gone through wiki and according to my understanding ,i Configured the IP-STS at R-STS as\nIn Identity providers i created new provider and gave the details as\nEnabled\nWS FederationEndPoint:https:///idsrv/issue/wsfed\nissuer thumbprint:thumbprint of IP-STS certificate\nAnd at IP-STS i created new Relying party and gave details as\nEnabled\nRealm/ScopeName:https:///website_idsrv2/\nRedirectUrl:Relying party Application Url\nI did mistake,I don't know where it is, Please suggest me\n. Thank you Dom,\nI updated the configurations.when i am running relying party am getting the error as \"Sorry an error occurred while processing your request\"\n. At IP-STS am getting this error \"Sorry an error occurred while processing your request\"\n. Dom am getting this error\nInvalid realm:\u00a0http://identityserver.v2.thinktecture.com/trust/changethis\n. Thank you dom,\nAfter I disable custom error in web.config.I got the error message like this\n\" Invalid realm: http://identityserver.v2.thinktecture.com/trust/changethis\n \"\nI tried to give wsfederation tag with realm details in identityservices.config.But still am getting same error.I was not able to figure out this.will you please tell me where can i change the realm details and what should i need to give?\n. hi Dominick I was waiting for your reply.I find that, it is site id of R-STS(thinktecture identity server).If i changed the value of site id of R-STS  \" http://identityserver.v2.thinktecture.com/trust/changethis \" to ip address of R-STS then it is redirecting to R-STS home page.\nI thought some where i have to configure at IP_STS or R-STS,but not able to find out where it is?\n. ## configuration at R-STS(using thinktecture identity server):\nCreated new identity provider with the following config\nidentifier:IP\nDisplay Name:IP-STS\nEnabled\nInculded in home realm discovery\nType:wsstar\nWS Federation EndPoint: https:///Idsrv/issue/wsfed\nThumbprint:thumbprint of IP-STS Cert\nconfiguration at IP-STS(using thinktecture identity server):\nCreated new relying Party with the following config:\nEnabled\nDisplay Name:R-STS\nRealm/Scope Name:http:///idsrv/\nRedirect Url:http:///idsrv/\nWhen am running my relying party am getting the error like this\n\" Invalid realm :http://identityserver.v2.thinktecture.com/trust/changethis \"\nThank you very much for giving support\n. Thank you very much Dom.I got it.\n. how could i make call from Relying party(MVC App) to thinktecture identity server(RP-STS) using OAuth Channel.Here the relying party had been already configured to communicate with thinktecture identity server(RP-STS) using ws fedeartion channel?\n. i am extremely sorry for that i was poor in english please excuse,we would like to use OAuth channel between RP-STS(thinktecture identity server) and Relying Party(MVC App) for mobile requests and for desktop requests would like to use ws federation channel between RP-STS(thinktecture identity server) and Relying party(MVC App).Is it possible?\n. Thanks for reply Dominick.\nI set auto flush to true in system.diagnostics.Now i am getting another error in log file as \"An error occurred while parsing entity name\"\n. I found that, it is because of some symbols (like &,<,>...) in xml file.Will you please tell me how can i bypass this error\n. yes\n. Ok.Thank you Dom.I am using thinktecure identity server as RP-STS .My Relying party is communicating with thinktecture identity server via OAuth Channel.It's working fine.How can i communicate to identity server via Oauth channel but through HRD end point?\n. If i want home realm discovery by communicating my RP with thinktecture identity server(RP-STS) via OAuth channel what should i have to do?\n. Could please tell me some basic things where can i do in thinktecture identity server and how to start?\n. Thanks for suggestion .If i use Authorization server in between RP-STS and RP.When token generated from RP-STS and it is sending to the Authorization server ,at authorization server the token is regenerating again and sending to the Relying party. i am bothering about the generating token two times , one time at RP-STS and another time at Authorization server.Is there any possibility to avoid this?\n. When i was calling authorization server from my Relying party which is java application.i am receiving invalid_request  error as a query string at Relying party.Will you please tell me why i am getting this error?\n. Change realm in your application web.config  to \"http://localhost/test2/\"\n. When can we expect this feature with Identity Server?\n. what is vnext?\n. Shall i have to pass the same token to the back end service which i recieved in my service from the thinktecture identity server or anything else i have to do?\n. By using OAuth2 channel we are making a call to thinktecture AS and we are able to get JWT token to my service1. From my service1 ,we would like to call service2 (back end service).In order to protect service2 , we would like to use \"Delegation ActAs \" Concept.\n. Hi ,In my case we have the scenario like after my application(using CodeFlow) got token(JWT) from the Thinktecture IS through OAuth2 Channel,it may call back end (REST)services (same domain)which are also trusting Thinktecture IS,we want the single sign on concept here.we want to pass the bearer token(which we recieved into my application and specific to user) to the back end services.\nDo you think this will work out and is it the best way of doing?If not please suggest me the best scenario\n. yes Dominick.Do you think it's the correct way?\n. Rather than displaying hrd page for selection we planned to redirect to the identity provider by using subdomain of client\n. Thank you.I want to use Thinktecture IS as my identity provider.As you told so many people came with up this idea, It will be great if  this will be a feature with the next version. could we expect this as feature with the next release?\n. you mean to say using two instances of identity Server.\n. Well Thanks for your response.Could you please tell me the how to do it?\n. ",
    "NatalCoder1": "Yeah.. I tried that. I modified some code in ProviderClaimsRepository.cs under Core.Repositories. Is it possible to modify User's Identity?\n. Thanks for the reply. So If I add a new claim to the userClaims, when the token reaches the relying party, how do I extract it? Does it go under Request.LoginUserIdentity.Claims? or somewhere else?\n. Thanks again. \nWhen I passed the customized userclaims to the relying party, it executed successfully. But when I add another relying party to IdentityServer, it is passing the same token to the second relying party as well. When the user is already authenticated, does it not do any claims transformation?\n. Yes. It is being called every time. But the requestDetails variable in ProviderClaimsRepository.cs is not getting updated. Any help in getting the current relying party's Id? I used this requestDetails variable to query against the database to get the current relying party's id, but it is not working. (requestDetails.Realm)\n. When I click on second relying party, identity server is not issuing a new token. The control is not reaching to IClaimsRepository. Can you please let me know the flow of the application? (what is called first, and what is next... etc..)\n. Yeah.. I have put the break points in the program and analyzed it and it was not called for the next relying party (not even WsFed). But what I observed from Fiddler is this, the first application is as usual redirected to the IdentityServer, but when I click on the second application, the browser is instantaneously authenticating it without actually redirecting it to the IdentityServer and displaying the homepage of the second application and with the same claims as that were passed to the first application. Since the browser already has a token from IdentityServer, is it using that token to authenticate the second application? How do I fix this, Dominick?\n. Thank You very much! :)\n I just have one more thing left to ask, Suppose a user wants to send a customized claim to the application which is not previously stored in the database (may be adding a new claim) which requires to take the input from the user before or just after authenticating him. Is there a way for the server to interact with the user?\n. Yeah.. that sounds good! But what if, the server first checks for that claim in the database, and if it finds a null, then prompts the user to enter the value?\nLike, there is a claim called 'favorite color' in user claims, when issuing a token, the server checks for his favorite color in the database and if it finds a null value for that user, it prompts the user to enter his favorite color and then add it to the claims sent to the application? \nI guess, this should be done in IClaimsRepository (ProviderClaimsRepository.cs). How can this be done?\n. If the user is already authenticated (he clicks on the second relying party and that customized claim is missing), then the control won't reach here, right? Then how do I pass that additional claim? \n. Yes! I can add claims in ws-federation controller, but I'm still unable to return the view here (so that the user can input the value)!\n'cause my views are in \"WebSite\" and the WSFederationController is in \"IdentityServer.Protocols\"\n. Thank you very much for your help! :)\n. ",
    "pksorensen": "Noticed i deployed with 1.8 Azure Tools from october(was using server and not laptop). Installing newest Azure tools and redeploying. Cant see that changing anything important, other than i gave me the new tracing stuff so i can monitor it from visual studio if any errors are thrown. \n. No errors thown in the deployment period as from what i can see. It looks like it didnt deploy all the data to the database from the beginning. \nCopyed database files from local to remote and the missing features showed up. \nCould it be related to some dlls not being present for MEF to load the plugins (just some assumptions here, think i saw some Import attributes at some point in the coed). \n. The site crashes when i try to use hdr. so someting have not been configured properly. Trying to figure out what.\nthis guy got it working it seems.\nhttp://weblogs.thinktecture.com/cweyer/2013/01/running-thinktecture-identityserver-v2-in-a-windows-azure-web-role-from-zero-to-hero-a-walkthrough.html\nonly difference is he changed to SQL and i have not (and its half a year ago he did it).\n. Just returned from vacation. \nI will try to reproduce the error then.\nI just don't understand how it all works under local IIS and when deploying to Azure, no changes made, the menu entries was missing. (ect WS-Federation had been disabled - will look into that tonight).\n. What needs to be caps?\nI have thumbprint: \u200e3464C5BDD2BE7F2B6112E2F08E9C0024E33D9FE0\nand also gets\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\n. Ye, found StringComparison.OrdinalIgnoreCase in the GetIssuerName. \nI ended up configuring it local and enabling debugger and took the correct issuer thumbprint from the debug window :=) I still cant see when i compare them what the issue was.\nMust have had a typo or something.\nIts working now.\n. haha, thats a nice one! explains it.\n. Wont WAAD take care of most of it.\nin the VS2013 preview asp.net sample, the application is set up with federation with issuer \nhttps://login.windows.net/common/wsfed and a realm of \"https://s-innovations.net/WebApplication6\"\nThen for the issuerNameRegistry its using a MultiTenantIssuerNameRegistry , which is just an implementation ontop of an xml document that has a list of tenants that have given consent.\nAll the stuff about giving consent is done on microsoft end, so i just assumed that it was a small change needed to get this into identity server.\nI can send a sample project from vs2013 preview if its any help in understanding what i mean.\n. Maybe its not the right way to say multitenant (got that from the sample project somewhere).\nI created a 5min video showing the multiply organizational SSO from the VS2013 Sample. If you have 5min to watch that it might be more clear what I am talking about. http://chilp.it/6d5eb0\nIn the video users from two WAAD can sign in to the application. I would like to add the same behavior to the Identity Provider section of identity server. Such my application uses identity server for federated authentication, and then I can get the behaviour that both facebook users can sign in together with WAAD users.\nHope it makes more sense now.\nWhat I believe needs to be implemented is a endpoint for information coming back when a WAAD administrator grants access:\nhttp://g.microsoftonline.com/0AX00en/172?ClientID=f43baa25-f9d4-48f9-af61-634e7943ae1b&RequestedPermissions=DirectoryReaders&ConsentReturnURL=https%3A%2F%2Flocalhost%3A44305%2F\n-> https://localhost:44305/?Consent=Granted&TenantId=008c37b3-087c-4341-8630-55457f6dbfb5\nand then a option to add a W* identity provider like now, but it need to accept users from multiply sts's.\nI dont mind using the time to implement it, but would like to hear from you experts if it makes sense and any points on where I would start to add it :)\n. http://chilp.it/3cc1f4 A little better quality video. (New to video recording)\n. Its not specific to VS2013, the video shows (if interested, and only 5min) the sample that comes with vs2013 for organization signin.\nThe project could run under 2012 also. Its just easy to make vs13 setup all the application stuff in WAAD.\nThe video is online here now: https://vimeo.com/70785111\n. A little coding tonight, it seems that identity server can be used as it is. using http://leastprivilege.com/2013/06/24/adding-windows-azure-ad-ga-as-an-identity-provider-in-identityserver/ and setting it up for WAAD like told, with the metadata from my WAAD tenant: https://login.windows.net/s-innovations.net/FederationMetadata/2007-06/FederationMetadata.xml I get the same behavior as I did on ACS with the error.\nIn the VS13 sample the issuer was set to https://login.windows.net/common/wsfed, and changing this in identity server instead of the tenant endpoint, I was able to log in from both my organizational WAADs. \nProblem in ACS is that it parses the metadata it self and I cannot set the federation endpoint manually. (Guess i just can download the xmlfile and give it a fake xml file with fixed endpoitns).\nGoing to test this a little more tomorrow. Feel free to close it if its not interesting for IdentityServer or leave it open and I will put some more info here.\nThis works because the thumbprint for all the tenants are the same. ( i dont know if that holds for all - but the vs2013 sample is build on the same assumption )\n. Finally. Authorization Server with federated sigin from identity server that allows users to login with either their organizational account or a social account: Took some time to figure all this out, mostly because of wasting time trying to get it working with ACS. \nhttps://authz.s-innovations.net/\nhttps://identity.s-innovations.net/\nAnd you can give consent to the identity server for all identities in a WAAD by giving consent here:\nhttp://g.microsoftonline.com/0AX00en/172?ClientID=af6c5f5b-eee8-4794-bb30-f2109f7a59ac&ConsentReturnURL=https%3A%2F%2Fidentity.s-innovations.net%2F\n. ",
    "jasonwest": "I quite can't get this to work. What does your identity provider and relying party configuration look like?\nAfter I log in, I'm sitting on the \n/issue/wsfed?wa=wsignin1.0&wtrealm=urn%3aeecppc%3afederated%3aidentity\nof Identity Server as a RP instead of back to the application.\nOK -- got it, had to set the redirect URL on the rp config for the Identity Server to its HRD end point.\nThank you!\n. After setting the machine key, and I am not in a farm, I still get the ID1074 Cryptographic Error. The load profile is set to true as well.\nAny ideas?\n--Thanks\n. I ended up having to go into IIS Manager and manually set the keys for each application.\nFor the SPA and the Web API2 RP applications I used the generator for one application\nand then hand copied the keys to the other so they are both the same.\n. Thank you so much for your quick reply. It ended up being the web.config, in particular the handler and module sections. I copied the sections from the sample app and it started working.\n. Excellent, I'll wait for v.next.\nThank you again\n. ",
    "clemensv": "It needs to issue SWTs with one or more of the Manage, Send, or Listen claims. SB Server can be configured with the respective primary/secondary symmetric signing key, see http://msdn.microsoft.com/en-us/library/windowsazure/jj248750(v=azure.10).aspx and http://blogs.msdn.com/b/willpe/archive/2011/05/12/getting-access-control-service-tokens-via-http.aspx - SB doesn't care about how the token is acquired, it just cares about it being a SWT. \n. ",
    "ionutcalin": "The comment on blog was just because I came accross it when searching the wiki :)\nNow coming back to the topic, I'm not sure what token generation you refer above. In this case (forms authentication) a session token gets created but the IClaimsRepository is not used during the process.\nFrom what I can see in the code the session token generation has the following sequence\nAccountController.SignId -> AccountControllerBase.SigIn -> AuthenticationHelper.SetSessionToken -> AuthenticationHelper.CreatePrincipal which delegates the authentication to FederatedAuthentication.FederationConfiguration.IdentityConfiguration.ClaimsAuthenticationManager that is implemented by ClaimsTransformer and here in the authentication method only UserRepository.GetRoles are taken into account and transformed to claims, but profile properties are not\nOf course I can override ClaimsTransformer but after this I have another problem as the implementation of ClaimsAuthenticationManager is not injected via MEF but is directly instantiated in ProtocolConfig.CreateBasicAuthConfig static method :(\n. It's exactly for passive WS-Federation login request where I need claims from profile (like e-mail address or preferred language for instance)\nAnyway, doesn't matter, we are going to change something in the flow to get the profiel and add claims as necessary\n. ",
    "peterswallow": "Did you figure out what the problem was? I'm having the same issue. A single IDP server and after the initial login expires, it redirects back to the IDP and then gives the same error?\n. The machineKey sorted it for us! :+1: \n. I've previously had this issue when server datetimes where out of sync. But I'm now getting it when accessing it via the .NET WebBrowser control.\nCan you think of any reason, why it would be happening?\nIt seems to occur, after a period of inactivity.\n. How do you set the wctx? Or do you just create the URL manually?\n. The URLs I listed earlier don't even include a wctx querystring parameter. Am I creating it in the wrong way\n. Thanks for your help. I tried what you said and so here is what I did...\nWhen I generate the original SignInRequestMessage, I now do:\nvar signInMessage = new SignInRequestMessage(new Uri(issuer), realm, \"\");\nsignInMessage.Context = originalUrl;\nreturn signInMessage;\nwhich adds the Return URL to the wctx querystring value.\nAfter a successful SignIn, the Identity Server POSTs back to the Redirect URL specified in the Relying Party configuration in ThinkTecture. This POST contains a Form parameter of wctx which I detect using the FederatedAuthentication.WSFederationAuthenticationModule.SignedIn event:\nprotected void Application_Init()\n        {\n            if (FederatedAuthentication.WSFederationAuthenticationModule != null)\n            {\n                FederatedAuthentication.WSFederationAuthenticationModule.SignedIn += WSFederationAuthenticationModule_SignedIn;\n            }\n        }\nThis event calls the code below, which detects the wctx parameter from the SignInResponseMessage and does the appropriate redirect.\nvar request = new HttpContextWrapper(HttpContext.Current).Request;\n            if (FederatedAuthentication.WSFederationAuthenticationModule.IsSignInResponse(request))\n            {\n                var signInResponse = FederatedAuthentication.WSFederationAuthenticationModule.GetSignInResponseMessage(request);\n                var uri = new Uri(signInResponse.Context);\n                var response = HttpContext.Current.Response;\n                response.Redirect(response.Context);\n            }\nThanks for your help.\n. ",
    "punkologist": "Hi, I'm also having this issue.\nI added the machine key to the system.web part of the web.config for the IDP:\nI produced the machine key in iis on the web server. as below:\n\nIt doesn't seem to have fixed the issue. What am I doing wrong?\n. OK so what exactly am I looking for?? I set the machine key within system.web of the web.config for the identity server. Do I need to do anything on the relying parties? Can you please explain exactly what is meant by explicitly setting the machine key? Assume I know nothing about machine keys.\n. @peterswallow where did you put the machine key and how did you generate it?\nShould it be in the web.config of all relying party applications as well as the IDP or just he IDP?\n. ok, just so i know I am getting this right (i doubt it as it's now asking to log on again if you colose and reopen the browser).\nMy setup is as follows:\nI have the IDP and 2 RP applications on the same web server. I generated keys in IIS under the IDP.\nI have then copied those keys to the RP apps and applied that in IIS.\nI have then pasted the same keys in all 3 apps in the web.config.\nNow it asks to login again and the fedauth cookies are gone after closing and reopening the browser.\nShould I be generating a different key for the 2 RP apps?\n. never mind.. I'm tired today! forgot to tick \"remember me\" on the login screen. duh. Seems ok so far..\n. ",
    "jd4u": "I appreciate the info and very clear on it now.\n. Yes, there is scope to separate Password Strength validation from the SetPassword function, as suggested in second post.\nYes, the first post is pointing to a bug. The first param of IsMatch must be the input to validate and second param must be pattern. \nCorrect: !System.Text.RegularExpressions.Regex.IsMatch(password, provider.PasswordStrengthRegularExpression)\n. Pull request is created for the above bug fix.\n. http://leastprivilege.com/2013/06/16/relationship-between-identityserver-and-authorizationserver/\nOnce the oAuth is removed from the IdentityServer, what can change in User Management?\nIdv has its own standard implementation for User Management, based on Membership framework. Will the current implementation be removed during the oAuth removal?\n. IUserRepository implementation can have additional IMPORT that can satisfy additional details required for validating the user in current instance.\nLike IClientCertificatesRepository, add ICurrentContext that may have references to HttpRequestMessage or directly a list of values prepared at the time of construction. \n. - How do plan to implement relying parties who is sending realm? There need to be dynamic selection before creating the token request url.\n. > The implementation of IUserRepository and IClaimsRepository would then determine which user repository to connect to\nYou are already prepared to customize idsrv. The problem as I understand is to access the \"realm\" in the IUserRepository, you are already able to access in the IClaimsRepository. \nidsrv has already displayed the use of MEF for the dependency of IClientCertificatesRepository, in the ProviderUserRepository. You just need to use the same approach for additional data. Ofcouse, in your custom implementation, you need to register your interface and its implementation binding. \nLet me know if I understood it wrong.\n. This sample has more details for you. Look into api folder.\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/tree/master/samples/AdfsIntegrationFullSample/WebAPIApp\n. As I understand you want to use gmail as IdentityProvider to authenticate the user. If so, try setting up \"Identity Provider\" instead of Relying Party. (You will need to register proper \"return url\" at gmail too.)\nIn case, I'm wrong in understanding, brief more on your setup and steps followed.\n. @walidward can you check again as follows.\n1. Google Console has registered redirect url https://localhost/IdSrv/issue/hrd/oauth2callback. Note there is no trailing slash. Do no put \"/\" at the end of url.\n2. IdP is setup to work on https://localhost/IdSrv\n. As suggested above, it is good to check the request url for the best match.\nBased on the screens, I can suggest to change the URL to all lower case in Google console. (IdSrv to idsrv)\n. AccountControllerBase has only 1 method that is public: Signout.\nFor customization in WebSite project, AccountController itself has all the features.\nFor even second thought you can make one level of inheritance to support your abstractions.\n. C#\nnew public ActionResult SignOut()\n{\n  /*Put your customization*/\n  return base.SignOut();\n}\n. Try adding cache: false next to url: url,  in the ajax function in \"/Areas/Scripts/Admin.js\" file can solve the issue.\n. - Check the configuration folder having *.config files including connectionstrings.config.\n- You can change web.config's Membership and roleManager connectionStringName under system.web.\n. Review Customizing IdentityServer. for all the interface details. \nAlso check the tokenServiceConfiguration in repositories.config as suggested above. \n. Format: JWT\n. ",
    "epasho": "that worked, thanks.\n. ",
    "mb-ib": "I shall ignore the unit tests! \nI haven't made any changes - I wanted to get a basic build working before making any changes, all all interfaces and the config file are as they are from the pull. \nI have the get nuget packages on build option enabled and i also get the same issue if i just hit F5 and run the site in cassinni.\nIs there anything MEF specific i should check?\nThanks for the quick response!\n. I am running the site in IIS, it was just to exclude the possibility of something being broken in IIS.\n. After a machine restart for something else, I can no longer reproduce this issue at all. I''ll raise again if it comes back.\nthanks,\nIain\n. This is related to the slow authentication issue I've raised in another issue. I added a diagnostic stopwatch and some extra tracing to the serializer code which I observed several times reporting a 15 second completion time. However on multiple other runs of the same issue after this was raised I could not reproduce it, it reported completion in 1 - 2 ms but still with the authentication delay. Therefore, I assumed this issue ticket was probably just misleading. \nApologies though - should have added a comment when closing the issue\n. Accidental duplicate - closed issue.\n. Can I provide any further information? This is a snip from the code profiler showing some signs of the delay\n\nthis is the Fiddler output where (mb00246.mbs.local is the IDP and RP1 is the relying party). As you can see there is a 15 second delay in response.\n\n. It is a 15 seconds delay for each and every request and oddly 15 seconds consistently, it doesn't seem to vary at all.  The other (closed) thread was talking specifically about the serializer which I believe I have ruled out as a cause. the same delay appears to be present if i use the IDP or if i use Facebook to auth the user.\nI have used Fiddler multiple times and the delay always appears to be in the same place between the GET /issue/wsfed.... and the return to the RP.\nI have built a second test RP and it still occurs.\nIt feels like it's a timeout of some sort - though I don't see anything in the code that would obviously indicate there's a 15 second timeout. As the dev set up is local, the RPs are in my hosts file as is the IDP address. I'm not convinced this is a DNS timeout.\n. Hi Brock, \nAfter analysing the traffic between the IDP and the RP with a packet analyser I have traced this issue to an obscure problem combination of DNS and a VPN. Thinktecture is working amazingly quickly. \nthanks for your time\n. Deleting the row completely from the table has allowed me to get back to the initial configuration screen.\nIssue resolved.\n. Fixed - this seemed to be an issue wit the local machine.config and adding an entry for localSqlserver to connectionstrings.config has fixed the issue.\n. I have edited my setup so I have as you described above\nA WSStar identity provider that points to the idsvr federation endpoint and the thumbprint from the key config screen. home realm discovery and enabled are both checked. \nI have an RP setup - the realm is the hrd URL as is the redirect URL\nThe button appears on the hrd screen, but instead of the signin page, the button takes me to the federation xml\nAm i still configuring something incorrectly\n. Yes, I have an RP that has a realm/scope and redirect url of \nhttps://host/issue/hrd\nIt has a token timeout of 60 and is enabled.\n. No, it is configured as you advise but clicking the associated button just opens the xml page. Can you suggest anything else?\n. Yes, this works - the realm was set to /hrd and it seems to be this that was causing the problem. \nThnks\n. I was just going to change the UserName field in the Users table, the memberships table only seems to be GUIDs. I don't want to change the primary key - just the name they login with.\n. ",
    "Mark-A-Jones": "If you experience this problem, check first that you have a GLOBAL.ASAX file in the root of the site, you may need to set it to copy Always in Visual Studio. \nThe code is compiled into the Website.dll, but ASP.net needs the global.asax to point to it, or the MVC framework is not initialized. This missing file manifests itself by calling the wrong version of  SatisfyImportsOnce  (AttributedModelServices instead of Composition Container) \n. For others that may have a similar question \n- to modify the Login page - is easy, but requires many files to be customized. The WebSite will need to be recompiled (published) from source using Visual Studio.\nFiles to Modify\n- The Views - /Views/Account  Signin.cshtml\n- also the mobile view ?\n- Add a new layout to /Views/Shared\n- Add new CSS /Content - images in /Content/images\n- Bundle the Css in App_Start\\BundleConfig.cs\n- modify the Model in /ViewModels SignInModel.cs to have Email property, and lookup code for username\n- Resources for the view and pages /Resources SignInModel.resx  App_LocalResources/Account/SignIn.Cshtml.resx\nI did not modify the Controller or any of the Libraries - I did not change the ProviderUserRepository\n. ",
    "nobre-wandelson": "resolved\n. The configuration following \nI think you're missing some setting on the adfs server(azure ) .??\nI am not able to log. --\"\n\n\n\n\n\n\n. \n. ",
    "briansboyd": "Right, aspnet_regsql.exe, sorry for extra work ... TIA for StoredGrant table migration ...\n. Thanks Brock for your quick response.  I have the RP and IdentityServer on separate boxes.  The IdentityServer will handle all logins.\nI would like the RP to allow anonymous users, but also provide a Login button so that they are forwarded to the IdentityServer to login (this is what I\u2019m calling a Soft Login).\nI would like the Login button to act just like the automatic forwarding that currently occurs, sending along the same info that is currently being sent from the below config entry:\n\n\n\n\n\n\nDoes this provide you with enough info?\nThanks again,\nBrian\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 12:58 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\nI'm assuming your RP is still separate from IdentityServer -- in other words you didn't merge your RP app code into the IdentityServer project?\nSo assuming the above is true, then you're really just asking how do I allow anonymous users for some parts of my RP? Or are you asking how in the RP to allow both federation and local (soft) logins? I need some clarification.\n\u2014\nReply to this email directly or  https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23442731 view it on GitHub.  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. (I eventually want the login screen in the RP, but one step at a time: I\u2019m fairly new to STS and Claims-based security, and this allows me to see how different approaches work.)\nWhen I comment out the authorization entry, I\u2019m still being forwarded to my IdentityServer.\nI\u2019ve taken the liberty to include my web.config below, I suspect that I\u2019m overlooking something very basic, and can\u2019t find what is triggering the automatic redirect to the STS login page.\nAny help is appreciated \u2026 Brian\nxml version=\"1.0\" encoding=\"utf-8\"?\n\n  For more information on how to configure your ASP.NET application, please visit\n  http://go.microsoft.com/fwlink/?LinkId=169433\n  \n\n\n```\n For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 \n\n\n\n```\n\n  \n\n\n```\n\n\n\n\n\n\n\n\n```\n\n  \n\n\n```\n<system.web>\n\n  <authorization>\n\n    <allow users=\"*\" />\n\n  </authorization>\n\n</system.web>\n```\n\n  \n\n\n```\n\n\n\nCommented by Identity and Access VS Package\n<authentication mode=\"Windows\" />\nThe below is commented out to support anonymous users.\n<authorization>\n\n  <deny users=\"?\" />\n\n</authorization>\n\n\n\n\n\n\n\n\n\n\n\n```\n\n  \n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n  \n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n  \n\n\n```\n\n```\n\n  \n\n\n```\n\n\n\n\n type: [namespace].[class name], [project assembly name (see project's Applications tab)] \n\n\n\n\n\n\n\n\n\n\n\ncertificationValidationMode set to \"None\" by the the Identity and Access Tool for Visual Studio. For development purposes.\n\nThis allows for the session to be encrypted using the MachineKey, which is webfarm friendly.\n\n\n\n\n\n\n```\n\n  \n\n\n```\n\n\n\n\n```\n\n  \n\n\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 1:34 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nAh ok -- from the way you said things I wasn't sure if you had merged the two (and you haven't). Also \"soft login\" sounded as if you wanted the login screen as part of your RP, and it doesn't sounds like you want that either.\n\nSo then I'm confused by what you need -- if all you need is allow anonymous users then make sure you don't have the authorization entry in web.config and then in your login button code to redirect to the STS all you'd need is:\n\nvar fam = FederatedAuthentication.WSFederationAuthenticationModule;\nvar req = fam.CreateSignInRequest(null, null, false);\nreturn Redirect(req.RequestUrl);\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23445238 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. yea, its a skeleton of a project at this point, built to develop our security strategy, created using the intranet template.  I haven't been able to find out why this redirect is happening (not yet using attributes), so I was hoping I was simply overlooking something in the web.config associated with some default behavior of the ws-federation entries.  thanks for your time!\n\nSent from my Windows Phone 7\n\n---\n\nFrom: Brock Allen\nSent: 8/28/2013 2:00 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nWell, something in your app is returning a 401 (access denied) and then WIF (via the passiveRedirectEnabled=\"true\") is then redirecting the STS. So you need to find out why/where in your code you're denying access to anonymous users.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23447225\n. Well, I otherwise took up bandwidth here, so I might as well post the solution that I found: after tweaking and commenting and uncommenting various entries on the web.config, I found that by selecting the Project in solution explorer, and pressing F4, I\u2019m able to enable \u2018Anonymous Authentication\u2019 \u2026 [sigh]\n\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 2:00 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nWell, something in your app is returning a 401 (access denied) and then WIF (via the passiveRedirectEnabled=\"true\") is then redirecting the STS. So you need to find out why/where in your code you're denying access to anonymous users.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23447225 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. I didn\u2019t explicitly put it outside the web.config, but maybe it\u2019s just what the MVC4 \u2018Intranet Application\u2019 template does.  I haven\u2019t yet looked into the mechanism associated with the changing of this parameter from the property page.\n\nAnd thanks for the dev tips, experience speaks volumes!  Cheers \u2026\n\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 5:24 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nAh so sounds like maybe your had an IIS config that was outside of your web.config that perhaps denied anon access. That would explain it. Glad you got it working.\n\nOh and on a side note we usually develop in IIS since it's a bit more obvious what's going on, plus SSL is much easier to manage.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23459072 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. \u2026 thank you IIS Express \u2026\n\nFrom: Brian Boyd [mailto:briansboyd@hotmail.com] \nSent: Wednesday, August 28, 2013 5:32 PM\nTo: 'thinktecture/Thinktecture.IdentityServer.v2'\nSubject: RE: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nI didn\u2019t explicitly put it outside the web.config, but maybe it\u2019s just what the MVC4 \u2018Intranet Application\u2019 template does.  I haven\u2019t yet looked into the mechanism associated with the changing of this parameter from the property page.\n\nAnd thanks for the dev tips, experience speaks volumes!  Cheers \u2026\n\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 5:24 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nAh so sounds like maybe your had an IIS config that was outside of your web.config that perhaps denied anon access. That would explain it. Glad you got it working.\n\nOh and on a side note we usually develop in IIS since it's a bit more obvious what's going on, plus SSL is much easier to manage.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23459072 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. Hi Brock,\n\nI read your post about creating the local DNS entry for idsrv.local and I have also done similar to enable debugging RP to IdSrv via OAuth2 Identity Providers FB and Live Connect.  I noticed that you also got this working with Live Connect, but were you able to get this approach to also work with Google?  (Neither FB nor Live actually check that the redirect URL is reachable, but Google does.)  It would be great to be able to test all three in the development environment.\n\nCheers,\n\nBrian\n\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Wednesday, August 28, 2013 5:24 PM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nCc: Brian S Boyd; Brian S Boyd\nSubject: Re: [Thinktecture.IdentityServer.v2] Soft Login: mix of anonymous and ws-federated users (#369)\n\nAh so sounds like maybe your had an IIS config that was outside of your web.config that perhaps denied anon access. That would explain it. Glad you got it working.\n\nOh and on a side note we usually develop in IIS since it's a bit more obvious what's going on, plus SSL is much easier to manage.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/369#issuecomment-23459072 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmnBrcyyGNNzP1E0vJV_WXKdSNq9yAmBSjXRWCZEkushT.gif \n. Unlike Facebook and Live Connect, Google validates the redirect uri before allowing a save \u2026 Brian\n\nFrom: Dominick Baier [mailto:notifications@github.com] \nSent: Friday, September 20, 2013 7:56 AM\nTo: thinktecture/Thinktecture.IdentityServer.v2; thinktecture/Thinktecture.IdentityServer.v2\nSubject: Re: [Thinktecture.IdentityServer.v2] Error with external Identity provider like gmail while configuring relying party mvc4 app and oauth2 (#417)\n\nGoogle does not allow you to register .dev i guess. \n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/417#issuecomment-24816221 .  https://github.com/notifications/beacon/PxOB5tOKVIqV4ymoKLVzmjfhALFAXcutAXeGKdyM1cM125s77eTNKPZCCADpQUiD.gif \n. Thanks for the quick response, and below is more info on the error.\n\nI downloaded your OAuth2 project from GitHub and plugged it into IdentityServer directly, referencing this rather than the NuGet library.  I was able to step into the OAuth2Client.ProcessCallbackAsync() method and saw this error:\n\nresult.ErrorDetails:\n\n{\"error\":\"invalid_request\",\"error_description\":\"missing required parameters, includes an invalid parameter value, parameter more then once. : Unable to retrieve access token : appId or redirect uri does not match authorization code or authorization code expired\"}\n\nI then again attempted the login, using the exact same credentials, and it worked.  I did not sign back in to LinkedIn in-between these requests.\n\nNotice also that the source code returned an error within the result object, whereas the NuGet package caused a null reference exception to be thrown.\n\nStill no pattern as to when it happens, and when it doesn\u2019t.\n\nHope this helps,\n\nBrian\n. I checked the LinkedIn forums and this was likely caused by a network issue on their end, so I'm closing this;\n\nhttps://developer.linkedin.com/forum/experiencing-network-issue\n\nCheers,\nBrian\n.",
    "simon01": "Thanks for your prompt response.\nI have to add ADFS as an Identity Server in Thinktecture IdSrv. For users from ADFS, they are redirected to HRD endpoint for login. For users from user repository, they log in via the login page in IdSrv.\nDo I understand right?\nThanks\n. I have added IdSrv itself as an identity provider and it shows in the HRD screen. I tired and got an invalid realm exception. Then I added IdSrv as a Relying Party. Now I am getting another exception.\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\nAny suggestion on what I have missed?\nThanks\n. Actually I put a wrong Issuer Thumbprint in the identity server. Now it works.\n. In my HRD screen, I have two identity servers(ADFS and IdSrv itself) now. Also, I have two RPs pointing to the HRD endpoint on my IdSrv. Both RPs can redirect users to HRD for authentication. \nWhen I log into one RP and try to access the other one. It still redirects me to the HRD screen. I thought I should be able to SSO into the other RP.\nPlease help.. thanks\n. Sorry I deleted my previous comment, because I thought I didn't explain my question properly.\nHowever, you have actually understood what I asked about.\n. I have my variable in wctx parameter and attempt to access it in RP2. \nHowever, WSFederationAuthenticationModule.CanReadSignInResponse always return false. Is this because WsFederationAuthenticationModule can only be used for WS-Fed protocol rather than SAML?\n. I am happy to use wctx parameter to roundtrip additional data. I just could not figure out a way to retrieve the data in RP2.\n. I end up passing data through query string.\n. thanks\n. Thanks Brock,\nThis is really a nice article to show how I can pass custom \"stuff\" from RP to IdSvr via ADFS.\nOnce the custom \"stuff\" is passed into IdSvr, what would you do to bypass the login page in IdSvr?\nThanks\n. Hi Brock,\nI just want to find out whether it is an existing feature or not. If it isn't, I will change it by myself.\nThanks\n. Thank you Brock for the help.\n. ",
    "utsavvishnoi": "Hi Dom,\nYes when we are using WS-Federation the communication is done via User Agent(Client). My scenario is once the HRD is done through identity server (RP STS)  and once i select the IDP and entered my credentials i am redirected back to RP STS. So in between that i want to introduce the Proxy(Web API) service call that hold the SAML token and pass to RP-STS because i don't want to  download the SAML in the client browser . How to achieve that using Identity Server.\n. Hi Dom, \nThanks for your response and suggestion. So i think you  meant that it is not possible to receive a SAML token from IP-STS  using any direct service(Web API or WCF ).\n. Thanks Brock\n. I need a Username token profile scenario.\n. Thanks Dom, \nI think this example is fine for me from this I understand how to validate using username and password in WS - Trust.\ncurrently working on the same so if I have any issue will get back to you soon. \n. Thanks Dom, \nSo generally Claims will only used to describe the Identity of the user. After identifying the user's identity i can write my own business logic to perform multiple task as per the requirement. If i consider the scenario of Facebook then in the consent screen we take certain permissions from the user that my app is allowed to access particular details not all details. So in such a case some where we implement validation that take cares of all these things. So i can't use claims like the above scenario which i explains means extracting the claims and checking on the controller ActionResult in Web Api.\n. Thanks Dom,\nIdentity Server is a individual system for authentication that will work for all kind of applications whether it will be in java or .net. I just want to know is their any build of Identity Server in Java or may be will come in future that can be hosted in Linux server.\n. here i have a scenario where i have to implement the dynamic HRD, I have to redirect the user to their IP-STS dynamically.\n. thanks dom , but i have a scenario where i have to trace the IP address of requestor so where i will inject my code in identity server to catch the IP address.\n. can you please tale a look at this issue \nhttps://github.com/thinktecture/Thinktecture.AuthorizationServer/issues/133\n. Actually i am using  Windows 8 Home Edition in which i have  IIS 8 by default , so let me try this settings which you shared once then if i found any issues i will post again . Thanks for suggestion.\n. Yes you are right as mention in the given link and Dom mentioned that the \"Windows 8 home edition  \" is not providing the feature of Windows Authentication.\n. ",
    "NaveenRayappa": "is it possible to use WS-Trust channel between my RP-STS(thinktecture) and IP-STS ?\n. Thanks a lot Dominick... am using thinktecture identity server as my RP-STS.\ni have used WS-FED  between my relying party and RP-STS.\nnow, i want to use WS-TRUST between my RP-STS  and IP-STS..\nis there any way i can configure my RP-STS(Thinktecture Idsrv) to interact with WS-TRUST channel with IP-STS ?\n. we do not want to download SAML to client browser from IPSTS ( which is mobile App in our case).\nso we thought using WS-TRUST between RP-STS and IP-STS and avoid downloading big SAML to mobile .\ndo you think we are in right path ? or what would  you suggest ?\n. authorization server .\n. sorry DOM,\n i should  have ask this question in authorization server thread . \n. not exactly , i need a validated design and keeping that as a reference i want to design my architecture.   As we have not finalized with the architecture, we need a validated design so that we can understand  the best usage of Thinktecture .\n. External user wants to consume my service and i want  to authenticate him .  In this scenario user has his own IdSrv and we are supposed to get token from his IdSrv . But, My service implementation accepts  the token which is issued from only our RP-STS . so, i  thought of authenticating  him using WS-TRUST doing HRD  at RP-STS. As it is not possible with current implementation of  Thinktecture , can you suggest  how we can achieve this . \n. Sorry , Got the solution . I forgot to enable the WS-federation settings .\n. ",
    "tfaust": "Thanks for the response. I was thinking along those lines too but didn't want to just assume in case there was something not obvious.\n. ",
    "dwein": "Ok. Thanks for the information. I will give it a by using Token. May I ask where the SecurityToken is coming from in the examples Vittorio is showing and why I don't have it? At least for my humble understanding I should be fairly close to what he is doing. Frontend web app, STS for authentication and the need for forwarding the token internally to an internal service.\n. ",
    "270sun": "yes you can . ",
    "acquire16": "I also had some general questions about that method.  Why is it doing so much manual checking of the password for validation when the MembershipUser's ChangePassword method checks all of that?\nI also noticed there's not method to validate a password change based on the old password.\nSomething along the lines of this.\n``` c#\npublic void SetPassword(string userName, string oldPassword, string newPassword)\n        {\n            if (!Membership.ValidateUser(userName, oldPassword))\n            {\n                throw new ArgumentException(string.Format(\"User and password combination not found\"));\n            }\n        var user = Membership.GetUser(userName);\n\n        if (user != null)\n        {\n            user.ChangePassword(oldPassword, newPassword);\n        }\n    }\n\n```\n. ",
    "samarthraman": "Thanks a lot for your reply. As you correctly pointed out the identity and access tool had a redirect that was the reason behind the issue. Once I took that out and added the Authentication handler I have the setup behaving as needed. \n. ",
    "gerry2978": "Thank you for the information. I have identity server installed in my environment. When I go to the configuration page, I don't see \"Identity Providers\" option in the left side navigation items. I am logged in as admin user and part of \"identityserveradministrators\" role. Tried changing my role etc but didn't work. Any clue what may be wrong here? Thanks!\n. Hello brockallen, Thank you for immediate response. I understand now that I have to implement these interfaces and provide my own implementation. Put the types in repositories.config and we are good to go for default implementation. Now I am planning to do Active federation with this STS with a direct call to wstrust endpoint. If there are multiple identity providers configured in this STS and with a direct call I want to look into default identity provider(which I will extend as mentioned above), what do I do at the replying party side to make this happen?\n. Thank you for your support!!\n. well, for now we have installed thinktecture behind the firewall and is not exposed to outside world. Infrastructure team is not really willing to put SSL cert for it in production. We were looking for options and trying to make sure it works without SSL.\n. i guess I need to alter this setting in config file.\n\n\n\n\n\n. sslFlags=\"Ssl, SslNegotiateCert, SslRequireCert\"\n. ",
    "lmaran": "As I know, with Azure WebSites I'm not able to direct access the certificate store or other SO specific details. All configurations are made through Azure portal. On the other hand, today I have switched the Identity Server deploy from Azure WebSites to Azure VM. In this last case I was able to install a new certif. to the certificate store, assign permissions to private keys etc. and everything works fine (tested with a self signed certif).\nThank you for your quickly and useful response!\n. ",
    "richb8": "Cool, cheers.\nRich\n. ",
    "davidmullin": "I have determined that if I use HRD instead of WSFED, and I change the web.config for IdS to use Windows mode authentication, then the current identity in HrdController.ProcessRequest is a WindowsPrincipal.  Unfortunately, it is not the principal for the current user (it is an empty, unauthenticated principal).  I also changed the web.config of my MVC App, but that had no impact.\nAlso, in case there is some magic that is impacted by this, I added this to the wsFederation tag in the web.config of my MVC App:\nauthenticationType=\"urn:federation:authentication:windows\"\nNot surprisingly, this had no impact.\nSo, I'm a little bit closer, but not quite there.  I suspect that there is something simple but very important that I am missing.\nDavid\n. I'm willing to ask the user, or to know via some means (like the IP address of the user's workstation) - in fact, that's my plan.  The thing that I can't figure out how to do is to get the Windows Identity to flow through to IdentityServer.  As I said in my second post, if I change IdentityServer's web.config to use Windows mode authentication, it does get a Windows Identity (rather than a Generic Identity) flowing into it.  But not one of the current user.\nWhat seems to be happening is that the passive redirection (via the wsFederation configuration) is happening prior to the authentication mode setting in the MVC app taking effect, so that the setting in the MVC app's web.config doesn't matter.  As a result, an anonymous request is getting redirected.  \nThe solution that I think I'm being left with is to remove the passive redirection, and instead do explicit redirection in the Page_Load event of the MVC app (like the original code indicated in this link: http://blogs.msdn.com/b/mcsuksoldev/archive/2010/09/22/windows-identity-foundation-101-s-ws-federation-passive-requestor-profile-part-2-of-2.aspx).  I assume that the Windows Identity would then flow into my MVC app, and I would programmatically decide to use it, or to redirect to IdentityServer.  I don't love this plan, however, because then I don't get to fully offload the identity management to an external IdP, which is the whole point.  Or, as I think you are suggesting, to have a second MVC app that does not do passive redirection, whose singular function is to redirect to IdentityServer with the Windows Identity intact (if I understood you correctly).\nExtending or modifying IdentityServer is not overly daunting to me, once I have a somewhat better understanding of what's going on.  I think I have a pretty good handle on the overall process, but some of the ramifications of WSFederation and passive redirection are a little murky to me (I think, really, that it's the passive redirection - when I was doing things with WCF, it all seemed much clearer).\nIn this context, by \"SAM\", do you mean \"SAML\"?  If not, what do you mean? (I'm not familiar with that acronym).\nThanks.\n. ",
    "ghalebbadran": "I have walked around the issue by creating an OWIN middleware that uses NTLM windows authentication http://ghalebbadran.com/identityserver-v3-and-windows-authentication/\nI hope it helps.\n. ",
    "kumarsai": "I created \"Self signed certificated\" in iis and that same certificate using for Identity Server. \n\nis this Warning leads to below error-\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\n. Thanks for your quick reply. Could you please let me know who can i change the STS SAML 2.0 version of the project to 1.1?\n. The actual problem is after authenticating the customSTS site is not redirecting to sharepoint portal, where actually from i got redirected here after selecting the provider to login from the dropdown. Instead it is redirecting to customSTS home page. Yes you are right that sharepoint would not accept SAML 2.0 token\nBTW, i have cnahged the value from \"urn:oasis:names:tc:SAML:2.0:assertion\" to \"urn:oasis:names:tc:SAML:1.0:assertion\" and also tried with \"urn:oasis:names:tc:SAML:1.1:assertion\"\nIn that case can we this customSTS project with SharePoint at all?\n. ",
    "nathanflood": "Thanks for the speedy reply! My mistake about Yahoo, sorry. I will give it a go via Azure. Having the option to use LinkedIn would be great if possible.\n. ",
    "pedropablo": "Hi, I had the same problem with the new version 2.0\nThe problem is in your url, you need to change \"https://localhost/account/signin\" for \"https://localhost/issue/wsfed\" because sharepoint uses that protocol to do the authentication. And you're right about the SAML 2.0 token, if you don't change it, you will see the error on sharepoint side.\nAnother thing, I see you're using the return url _trust on http, not https. For that case you need to turn off the validation in the protocol WS-Federation, so it doesn't requires SSL in the returning url.\nA little late, but I hope it helps somebody :)\n. ",
    "osswe": "A little more research:\nMy application, no one logged in and I hit the protected area, I get redirected to the IS login page.  After providing username/pw it goes through the motions, and at the end, redirects to what appears to be the WSFederationController Issue action, then through the TokenService, and eventually dumps me back to my application, authenticated as UserA.\nI then hit a button that makes an HttpWebRequest to the SignIn(model) passing UserB's information, and it starts to go through the sign in motions.  At the end, where the previous process redirected me to the WSFederationController, this one redirects me to the IS login page.\nI've changed the model.ReturnURL on the second call to match the one on the first, looks like basic information, but when it redirects on the second (UserB's call) it drops me at the IS login screen.\n. Yeah, so UserA's authentication steps go the normal route, just like anyone setting up IS for their web application, and yes, this all works fine.  Once UserA is authenticated, I have a function in the application that I'm working on trying to get to make a call to IS to swap from being UserA to UserB.  So in this function, in my app, I build the call like so:\nHttpWebRequest req = WebRequest.CreateHttp(\"https://localhost/idsrv/account/signin\");\nHttpWebResponse response;\nstring postdata = \"username=billy&password=billyuser&enablesso=false\";\npostdata += \"&returnurl='/idsrv/issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%3a53238%2f&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fHome%252fAbout&wct=2013-08-28T16%3a43%3a35Z'\";\nWhen it makes the call, I'm inside the IS WebSite's AccountController.cs, at the SignIn(model) action.  At this point, the appearance of the model object for UserB looks just like the one that I had at the same point when UserA above logged in through the normal IS login page (except UserB has a different provided username/password).  And all the way up to the redirect to the WSFederation, the information looks the same, including when you get back to the IS WebSite's AccountControllerBase.cs SignIn() and it does the RedirectToLocal(returnUrl) call.  However, at this point, for UserA (who signed in the normal way to IS) the next step is the WSFederationController, but for UserB he ends up at the IS login page.  I don't see what's different.\nnote: When I get to the AccountControllerBase RedirectToLocal() call, the returnUrl for UserA's call is:\n\"/idsrv/issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%3a53238%2f&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fHome%252fAbout&wct=2013-08-28T21%3a07%3a44Z\"\nfor UserB's call it's:\n\"/idsrv/issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%3a53238%2f&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fHome%252fAbout&wct=2013-08-28T16%3a43%3a35Z\"\nDoes that help?\n. Is there an example anywhere showing how to authenticate with Identity Server by making a web request call from the application, passing the username/password?  I mean, if the use case was something like:\nCustomApplication already knows UserA's username and password, and wants to call IS, providing the username and password, to authenticate the user and get their Principal/Identity.  This should happen without user involvement (no IS login screen).\nHow would one go about implementing that?\n. Yeah, and that might be the problem, I'll try redirecting instead of doing a web request.\n. @brockallen - thanks, that was it.  Once I set it to redirect (and got the urlencoding of the returnUrl right) it's working like a charm.  Thanks for taking the time to help me work through it!  :+1: \n. The two sets of claims are from the IS website application and the STS, is that what you're talking about?  The claims in my app (I assume that's the RP?) are similar to the ones in the STS.\n. Thanks for the responses.  I figured I could rewrite the web front-end of Identity Server  to authenticate the login against AD before passing it to the STS, but I was thinking there should be a way to plug in AD like you can plug in MS Live or Google accounts.  So in that scenario ADFS would be required, correct?\n. ",
    "jamieide": "Thank you for your reply, that solved one issue. I am federating ADFS as an external IdP. Is there a different approach?\n. ",
    "pwil301": "Hm - thanks for the input guys. I wonder, though, how do folks handle STS communication in a multi-tier, DMZ configuration where your browser can't be redirected between zones? The ADFS Proxy role is supposed to handle this for ADFS. I'm not sure this works when ADFS is relying on a different IdP (IdentityServer) in the same internal tier. Any ideas or links?\n. Thanks Dominic - I'll investigate this further. If I find anything good, I'll bring it back for you. Closing.\n. Make sure you don't have \"debug=true\" in the web.config. That'll sometimes cause FIPS errors to pop up. I've got a FIPS protected machine running it right now.\n. Hmmmm...that IS curious. Did you extend the package in any way (for example, implementing IUserRepository)? If you did, are you or any subsystem you are accessing using a non-FIPS compliant algorithm?\n. Sorry - I just noticed in your original post you are using v1 of the product. I'm using v2 on FIPS machines and haven't tried v1. Any chance you can upgrade and try again?\n. ",
    "0vermind": "That's a pity. I think the project would be more popular with some already made user management system.\nLooking forward for the OIDC support, and thanks for the replay!\n. ",
    "VijayGaddam": "Hi Allen,\nWe are trying to testour app along with the thinktecture STS in to our test environment which is load balanced and SSL offloaded. we got all the metadata working and everything seemed to be fine but requesting an ActAs token via WS-Trust is failing with error below. looked at all the traces but nothing more info than this. \nas you said, we are using the message security endpoint and we didn't have problem downloading the metadata though when we configured the publichostname in the admin app setting.\nSecurity processor was unable to find a security header in the message. This might be because the message is an unsecured fault or because there is a binding mismatch between the communicating parties.   This can occur if the service is configured for security and the client is not using security.\n. Awesome. Thanks much for the prompt response. I think we can happily live with message security and the config update. In fact it's our company policy to use message level security.\nbtwn, do you know of any article/blogpost that describes how to access user tokens programatically using WS-Trust protocol\n. allen, i was following this article \nhttp://leastprivilege.com/2010/04/14/using-an-active-endpoint-to-sign-into-a-web-application/\nand was able to compile successfully and when running the mvc app, it is failing with the following error at the line \nand strangely a cardspace window opened up at the time of error.\nar genericToken = channel.Issue(rst) as System.IdentityModel.Tokens.GenericXmlSecurityToken;\nany idea?\n{\"The incoming policy could not be validated. For more information, please see the event log.\"}\nstacktrace:\nServer stack trace: \n   at System.IdentityModel.Selectors.ExceptionHelper.ThrowIfCardSpaceException(Int32 status)\n   at System.IdentityModel.Selectors.CardSpaceSelector.GetToken(CardSpacePolicyElement[] policyChain, SecurityTokenSerializer tokenSerializer)\n   at System.ServiceModel.Description.ClientCredentials.GetInfoCardSecurityToken(Boolean requiresInfoCard, CardSpacePolicyElement[] chain, SecurityTokenSerializer tokenSerializer)\n   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs)\n   at System.Runtime.Remoting.Messaging.StackBuilderSink.AsyncProcessMessage(IMessage msg, IMessageSink replySink)\nException rethrown at [0]: \n   at System.Runtime.AsyncResult.EndTAsyncResult\n   at System.ServiceModel.Channels.ServiceChannel.DisplayInitializationUI()\n   at System.ServiceModel.Channels.ServiceChannel.CallDisplayUIOnce.System.ServiceModel.Channels.ServiceChannel.ICallOnce.Call(ServiceChannel channel, TimeSpan timeout)\n   at System.ServiceModel.Channels.ServiceChannel.CallOnceManager.CallOnce(TimeSpan timeout, CallOnceManager cascade)\n   at System.ServiceModel.Channels.ServiceChannel.EnsureDisplayUI()\n   at System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)\n   at System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)\n   at System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)\nException rethrown at [1]: \n   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\n   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\n   at System.ServiceModel.Security.IWSTrustContract.Issue(Message message)\n   at System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken rst, RequestSecurityTokenResponse& rstr)\n   at System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken rst)\n   at MVCTestApp.Controllers.AccountController.Login(LoginModel model, String returnUrl) in \\Documents\\Visual Studio 2012\\Projects\\MVCTestApp\\MVCTestApp\\Controllers\\AccountController.cs:line 70\n   at lambda_method(Closure , ControllerBase , Object[] )\n   at System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)\n   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters)\n   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters)\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.InvokeSynchronousActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters)\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass42.<BeginInvokeSynchronousActionMethod>b__41()\n   at System.Web.Mvc.Async.AsyncResultWrapper.<>c__DisplayClass81.b__7(IAsyncResult _)\n   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.End()\n   at System.Web.Mvc.Async.AsyncResultWrapper.EndTResult\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<>c__DisplayClass39.b__33()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass4f.b__49()\n. this is everything i have in code to call the WS-Trust endpoint of STS. do you see anything wrong?\npublic ActionResult Login(LoginModel model, string returnUrl)\n        {\n            if (ModelState.IsValid)\n            {\n                // authenticate with WS-Trust endpoint\n                var factory = new WSTrustChannelFactory(\n                    new WS2007FederationHttpBinding(WSFederationHttpSecurityMode.Message),\n                    new EndpointAddress(\"xyz/Idsrv/issue/wstrust/message/username\"));\n```\n            factory.Credentials.UserName.UserName = model.UserName;\n            factory.Credentials.UserName.Password = model.Password;\n        var channel = factory.CreateChannel();\n\n        var rst = new RequestSecurityToken\n        {\n            RequestType = RequestTypes.Issue,\n            AppliesTo = new System.IdentityModel.Protocols.WSTrust.EndpointReference(\"http://localhost:22554/\"),\n            KeyType = KeyTypes.Bearer\n        };\n\n        var genericToken = channel.Issue(rst) as System.IdentityModel.Tokens.GenericXmlSecurityToken;\n\n        // parse token\n        var handlers = FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers;\n        var token = handlers.ReadToken(new XmlTextReader(\n           new StringReader(genericToken.TokenXml.OuterXml)));\n        var identity = handlers.ValidateToken(token).First();\n\n        // create session token\n        var sessionToken = new SessionSecurityToken(\n           new ClaimsPrincipal(identity));\n        FederatedAuthentication.SessionAuthenticationModule.WriteSessionTokenToCookie(sessionToken);\n\n        return RedirectToLocal(returnUrl);\n    }\n\n    // If we got this far, something failed, redisplay form\n    ModelState.AddModelError(\"\", \"The user name or password provided is incorrect.\");\n    return View(model);\n}\n\n```\n. allen, i have decided to use micfosoft.IdentityModel instead of system.identitymodle namespace to use the code in the above article as is and was able to successfully get the token back. However after getting the token back and executing the following line it gives the error:\nvar identity = handlers.ValidateToken(token).First();\nID1032: At least one 'audienceUri' must be specified in the SamlSecurityTokenRequirement when the AudienceUriMode is set to 'Always' or 'BearerKeyOnly'. Either add the valid URI values to the AudienceUris property of SamlSecurityTokenRequirement,  or turn off checking by specifying an AudienceUriMode of 'Never' on the SamlSecurityTokenRequirement.\n. here is the token got back from the service. is there any thing you suspect is wrong. to me the last line goto url in the token smells wrong. it has my username attached to the RP realm\nalso the above issue still exists. could you please take a look at it.\nhttp://identityserver.v2.thinktecture.com/trust/xyzweb5EUBKV72cP+rJ3u6wvxpnZ/t9J+d8UxqVF3Mmu442AY=SYXOA/5/T8Gn7RanLTa1d0JlKqKfM5RZpRWa1a0Rxna3YggeWCE/hpVSteEeas13KVkrQjzg7Bg3OXb7NwQPrJN6Xae+WdN8ziflTC2yaXmf9XEROdq/nM4kQMPZ7UwVofYWEm6Vnrn+3GC96GmeG2TL98Wr0XpTAc+IillJqgHkHzD5tdy96tUEVpf+iwzTQ7HA7i32EbLVj8UxZHSOQSFbqgpE2ZKnqNafoWWrTTkc97fV2PTsnFshBFLACAJA/EslzRIhKbqJWVr0aHsAms0Y3GDE7ZThP2O/rLs6AwHrgzh0UgucJDEiQx7gKPEWVxgp2PQx/WcgLXZG0Q/83w==MIIGlzCCBX+gAwIBAgIKE4DORgAAAAAAGzANBgkqhkiG9w0BAQUFADBkMRMwEQYKCZImiZPyLGQBGRYDY29tMRUwEwYKCZImiZPyLGQBGRYFaGhpbjExFDASBgoJkiaJk/IsZAEZFgRjb3JwMSAwHgYDVQQDExdob24xMTAwOS5jb3JwLmhoaW4xLmNvbTAeFw0xMzA3MTUyMDQ1MTdaFw0xNTA3MTUyMDQ1MTdaMCIxIDAeBgNVBAMTF2hvbjExMjgyLmNvcnAuaGhpbjEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApTb6zJm6OMeZCOeqqN1zEtmMoNR/0+T6mxJnf32t2A/rUsbkMYCZA0avtbp/fF9APxNJehMm4n+rcECjGVZRQwAXk0VSbOFfk2oN2hlB/Nj0FZN3ZEdWLKXq478YXX7LpXFcbZxp+2dtN9qCRQDTw5cwUlEUkQyy1P+tWrpuK8wIEbyOxMQRws2hcZY139e8EEuSDgva3UF/WWs2hw3klqtOIc58Ob+zUpTnqJ5m7wYSufUbFK9YAdKrHVpusD52ZRZhXk7QjNGwu72FajTyeiZ+10bRHiE+mzuRZuEGMhcywU5aDTX3juyI0jShgxdYsg8ytyY4vpIwIM7SFhOhGQIDAQABo4IDizCCA4cwOwYJKwYBBAGCNxUHBC4wLAYkKwYBBAGCNxUI4IlKhemtZoONgyrZhx6CqdwbBIOWqSqCjsEoAgFkAgECMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjALBgNVHQ8EBAMCBaAwJwYJKwYBBAGCNxUKBBowGDAKBggrBgEFBQcDATAKBggrBgEFBQcDAjAdBgNVHQ4EFgQUuGMTyiUfBWUFHlLP3O4gHd0eoPAwRwYDVR0RBEAwPoIXaG9uMTEyODIuY29ycC5oaGluMS5jb22CCGhvbjExMjgyghNhZGZzLmNvcnAuaGhpbjEuY29tggRhZGZzMB8GA1UdIwQYMBaAFJCFFjt6DzP93T9qUxcFSw7slggyMIIBKAYDVR0fBIIBHzCCARswggEXoIIBE6CCAQ+GgcVsZGFwOi8vL0NOPWhvbjExMDA5LmNvcnAuaGhpbjEuY29tLENOPWhvbjExMDA5LENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPWNvcnAsREM9aGhpbjEsREM9Y29tP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT9vYmplY3RDbGFzcz1jUkxEaXN0cmlidXRpb25Qb2ludIZFaHR0cDovL2hvbjExMDA5LmNvcnAuaGhpbjEuY29tL0NlcnRFbnJvbGwvaG9uMTEwMDkuY29ycC5oaGluMS5jb20uY3JsMIIBPAYIKwYBBQUHAQEEggEuMIIBKjCBvAYIKwYBBQUHMAKGga9sZGFwOi8vL0NOPWhvbjExMDA5LmNvcnAuaGhpbjEuY29tLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPWNvcnAsREM9aGhpbjEsREM9Y29tP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MGkGCCsGAQUFBzAChl1odHRwOi8vaG9uMTEwMDkuY29ycC5oaGluMS5jb20vQ2VydEVucm9sbC9ob24xMTAwOS5jb3JwLmhoaW4xLmNvbV9ob24xMTAwOS5jb3JwLmhoaW4xLmNvbS5jcnQwDQYJKoZIhvcNAQEFBQADggEBAJsYwzyew448gHtKx6YqoIGsuTwhDEHfkYzRXlBJIXjg8jwT+4PFe1ZDXRtZrFs4SgpoAaUDra+4rHu1/1CLGAb9mhVguA9kXcbBPU9WSOAD/YvKz0nxVb/MevA3EMVSt8F/ByVYoy0OqyM3OrKeWZi6gRI4qMqfi2nDmBu8KhtHIuwB5d83mm7FPKBqaRjbrL4HmicsPz0sjhhM7uisL/8pNsDiv9QNhOAUt83zsRNPKYiLXKvcw5k68DkfTAGHoq1vqrt/Uo+A1SABJPh7hZkljFK2BPxJxbJXCwbhX/gFqln9uNObETE9+GiBZvbNXOqOara3HMQXLB+vN/wt8go=http://localhost:22554/vijay@test.comvijay@test.comurn:oasis:names:tc:SAML:2.0:ac:classes:Password\n. allen, I will wait for domnick to answer the question.\nI was reading your answers from other posts which states that using WS-Trust wouldn't support SSO? is that true?\n. Can SSO be achieved using WS-Trust with the following request flow?\n1) user logged in to my website and click the button on my website\n2) on button click my web app calls the STS using WS-Trust with appliesTo url set to a different/partner's website and get a SAML token.\n3) redirect the user to the partner's site with the SAML token it got back from STS.\n4) partner's site accepts the SAML token and log in the user with out having to enter credentials again.\nassuming the trust is established between my site STS and partner's site STS.\nexcuse me if this is the dumbest question you ever heard. I'm new to this whole web world.\n. Thanks Dominick. Is using STS a good idea for an organization who is the identity provider itself that has portals for external users or is it only meant to be used for applications with in the firewalls of an organization?\n. adding more context to the above post. our company external portal have many links to other partner sites when user clicks on the links, we manually construct a SAML token, sign, encrypt using the public key provided by partners with the help of a third party library and do a http post to the partner site so user would have a single sign on experience.\nCan this be done better with IdentityServer\n. Mahalo to you and allen for being so patient with me and answering all my questions. I have success in programatically retrieving the token using WS-Trust from my mvc app and able to convert them to claims. Now i would like to play around web SSO and WS-Federation. I will be in touch if i have any further questions.\n. allen/dominick,\nwhat will be the endpoint identity for the ws trust message username security endpoint of Idsrv STS\nhttp://xyz/Idsrv/issue/wstrust/message/username.\nIsn't that the app pool identity of IIS under which the Idsrv is running uder?\n. I decided not use the default configuration created by the svcutil and following the code from samples MVC and WCF.\nI modified the code to use message security instead of transportWithMessageCredential and able to get the token back from STS with appliesTo value set to WCF service url xyz.svc. when used this token to call WCF service got the following error;\n\"Derived Key Token cannot derive key from the secret.\"\nI added the WCF service server certificate public key as the encryption key in the wcf service relyingparty configuration.\n. Thanks Dominick, i got it working when i set the keytype to symmetric.\nHowever, since the backend service is protected by the same STS as web front end and need the same claims, \nwhat are my options for my web app front end to get the token to call the backend wcf, Since user gets authenticated at STS before landing on the web app front end, my web app don't have the password of the user to get the token for backend wcf service from STS.\nIs there a way i can get symmetric key token for backend wcf service based on the bearer token i have in hand for my front end web app?\n. Hi Domonick. All is well now after i found this link \nhttp://leastprivilege.com/2011/05/24/requesting-delegation-actas-tokens-using-wstrustchannel-as-opposed-to-configuration-madness/\nLooks like i can also cache the delegated token to use if for further calls to the same service. Do you think it is a bad idea?\non a seperate note, since we are a US based company, our management prefers to contract with a US based company or individual professionals who can offer 24 hour consulting services on this product. I don't know all the legal issues they are concerned about but that is what stopping them from giving us a green light to proceed with the product. we developers feel comfortable and think it is an awesome product but management's concerns need to be alleviated before we get a green light.\nwhat are the options do we have? also my management has been trying to contact thinktecture via email for the same reason but haven't got any response.\nI apologize if this is not the right place or right question to ask you.\n. Hi Allen, we did email couple of times but no response.\n. ",
    "kaush76": "Hi Brock,\nApologies to reopen, as I wanted to ask an extended question on the above.\nWhen you say: \"You should use different certs for SSL and for signing.\"\nDid you mean different SSL certificate and \"Code Sign\" Certificates or just two different certs?\nI have a wild card domain validation cert, would that be fine for both cases?\nCheers,\n--Kaush,\n. ",
    "rmsselva": "Thank you for your response. \nYes, this is blocking us to proceed further. if you could help us by providing some examples from your archives would be great.\n. Hi Dominick, \nI am following up on my earlier request for any workaround that may help us get over this block. Just for added context, we have been battling this issue for over a week and I have people in management hitting me up every couple of hours to ascertain if I have made any progress. This has turned into a mission-critical issue for us and if there is any suggestion that you may have for us to try while you look for a potential solution in your archives, it would be a HUGE favor for us. I will look forward to a response from you at your earliest convenience!\nMany thanks in advance!\n. Yes Allen. in our case, after getting the token from  Thinktecture through issue/mixed/username endpoint from ADFS Formssignin page. i need to pass the token to ADFS signin method. It is complaining about missing subjectconfirmationdata element. \n. Thank you Allen. I tried it with SAML 1.1 , it is working now.BIG thank you :) IdpInitiatedSignon request are working without any issue. \nHowever from RP side, seems like it expecting some \"AuthnContext\". we are start analyzing that issue now. Thanks again. \n. Hi Allen/Dominick, \nFinally we were able to made this using this post (http://social.msdn.microsoft.com/Forums/vstudio/en-US/df1510a7-4635-4a3f-abc3-7aeb6a8cc668/issuedtokenwstrustbinding-with-adfs-20). Thanks for your extended support and help.\n. Thank you Domick & pwil301 . Let me try this web.config change option.\n. Hi pwil301 , after disabling the debug flag also this FIPS issue persists. do you have any other suggestions to avoid this error. thanks in advance.\n. Hi .. Sorry for the late update. yes we are doing upgrade, will see if issue persists or not. mean while, we are also trying to solve with in V1.0. \n. ",
    "mrblarg": "The RP.\nOn 3 Sep 2013, at 17:59, Brock Allen notifications@github.com wrote:\n\nLogged out of what? The RP? IdentityServer? Or Facebook?\nWhen using external identity providers, you're never really logged into IdentityServer -- it's just passing thru the identity.\n\u2014\nReply to this email directly or view it on GitHub.\n. As I said above I tried that, it results in a null reference exception.  I'll get the entire exception message...\n. [NullReferenceException: Object reference not set to an instance of an object.]\n   MyFedAppTest.Controllers.HomeController.LogOut() +22\n   System.Web.Mvc.<>c__DisplayClass1.b__0(ControllerBase controller, Object[] parameters) +14\n   System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters) +247\n   System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters) +38\n   System.Web.Mvc.Async.<>c__DisplayClass39.b__33() +119\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass37.b__36(IAsyncResult asyncResult) +15\n   System.Web.Mvc.Async.<>c__DisplayClass2a.b__20() +31\n   System.Web.Mvc.Async.<>c__DisplayClass25.b__22(IAsyncResult asyncResult) +230\n   System.Web.Mvc.<>c__DisplayClass1d.b__18(IAsyncResult asyncResult) +28\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +53\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.<>c__DisplayClass8.b__3(IAsyncResult asyncResult) +42\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +606\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +288\n. I've also tried the following,\n\n```\n        //Does nothing\n        //Response.Cookies.Clear();\n        //Session.Clear();\n    //Does nothing\n    //Session.Abandon();\n\n    //Does nothing\n    //Response.Cookies.Clear();\n\n```\n. I have a working solution,\nSession.Clear();\n        Session.Abandon();\n        if (Request.Cookies[\"FedAuth\"] != null)\n        {\n            HttpCookie pHCeExpired = Request.Cookies[\"FedAuth\"] ;\n            pHCeExpired.Expires = DateTime.Now.Subtract(new TimeSpan(1,0,0));\n            Response.SetCookie(pHCeExpired);\n        }\n        if (Request.Cookies[\"FedAuth1\"] != null)\n        {\n            HttpCookie pHCeExpired = Request.Cookies[\"FedAuth1\"];\n            pHCeExpired.Expires = DateTime.Now.Subtract(new TimeSpan(1, 0, 0));\n            Response.SetCookie(pHCeExpired);\n        }\nNot sure if I need the session calls but they're in there anyway...\n. ",
    "Sarafian": "I actually found a solution for the problematic subject names.\nYou can put quotes around the part with the problem, for example SN = \"1 2 3\".\nAs long as the certificate isn't stored in the database and having the above solution, I also believe that is best to use the subject name for certificate rollover if the important detail that there is no rollover period to have both certificates in the Certificate store!\n. ",
    "highsierra": "Yes, this other IP I want to use uses oAuth2.  I already have a STS integration with it working using some older Microsoft code.  Want to switch to use ThinkTecture.  Any reason that the Identity Providers link doesn't show up in v2.2.1?  Is this merely a UI issue or is the federation capability fully implemented?\nthanks again\n. Right.  Please consider adding QQ too.  It's the largest social media outside of the US.\n. The main site: www.qq.com.  It's app integration/SDK site is connect.qq.com  It's all in Chinese though, LOL.  It's a $100 billion market cap company\n. ",
    "npateman": "I think I've just found the answer here...\nhttp://sharepintblog.com/2011/10/26/adding-additional-claims-to-a-trusted-identity-token-issuer/\n. It's okay i found it by typecasting the context parameter to OAuthContext.\n. Excellent thanks!\n. Glen, how about you pull the repo and make your own branch rather than insult the developers?\nSent from my Windows Phone\n\nFrom: Glenn Blockmailto:notifications@github.com\nSent: \u00fd14/\u00fd02/\u00fd2014 18:31\nTo: thinktecture/Thinktecture.IdentityServer.v2mailto:Thinktecture.IdentityServer.v2@noreply.github.com\nSubject: Re: [Thinktecture.IdentityServer.v2] MEF CompositionContainer is created without IsThreadSafe option (#577)\nI see you have a Container.Current. That's generally a bad idea for web apps. If you want to use that design and there are multiple requests each pulling things from the container resulting in part creation, then you want to enable the thread safety switch. I'd suggest profiling though to see how big of a perf impact that is as it results in a giant lock on the container.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/577#issuecomment-35110958.\n. ",
    "m-athijs": "Well, yes, there is a problem but I'm not at all sure it has anything to do with the \"core\" IdentityServer (IDS) code. Most likely it has something to do with some add-on code of my own. I'm using IDS on several websites and now I'm experiencing problem in the sense that the cpu of the server goes to 100% in steps and then finally the website gives up altogether. An IIS reset usually does the trick, but the busier the sites get, the sooner it happens again. And I read somewhere that setting the runAllManagedModulesForAllRequests attribute to true caused these kind of problems for others. However, I removed the setting, and as it turns out this is not the cause of my problems.\n. Oh, and isn't runAllManagedModulesForAllRequests sort of a \"catch-all\" solution? Wouldn't it be better just to add the SAM to the web.config?\n. I'm quite sure everything will work as expected, but we're running on Windows Server 2008 with SP1 and then you probably don't need the setting at all. Before SP1, native routing was not supported in IIS but they fixed that with SP1.\n. ",
    "bradwilson": "Thanks for verifying. :) For the time being, we'll just issue a long-lived self-signed cert that never actually gets used. ;)\n. ",
    "bhtm": "Apologies for the continued newbie questions,  I have read all the documentation, have the service up and running and have been modifying the configuration to add profile items, create users, roles, etc.  Just not understanding what parts of IdentityServer are just default implementations, meant to be replaced with a \"real\" implementations.\nFor instanc, is the built in user store and profile definition is just for demos?  Or is it appropriate to roll out to production assuming I point the DB connection to a real production instance of SQL Server (not SQL Server Compact)?  \nMy business requirement is for an HA multi-tenant user store of less than 10K users that can be federated to our corporate or customer identity systems (usually AD).  The claims requirements for the user store are very minimal, not much more than email and name. ADFS fits us perfectly for federation.  AD on the other hand is deemed to complicated a system to maintain by our production IT for our very simple user store needs.  For whatever reason they say an LDAP solution is fine; or if we build our own store against a production DB (clustered already for HA). this is fine too.\nHoping the out of the box user store + profile + roles in IdentityServer will allow us to avoid an LDAP cluster in production.  If these out of the box implementation are not intended for production, my next choice would be to integrate with LDAP. Given LDAP is a widely used user repository, has anyone pointed IdentityServer at LDAP?\nThanks\n. ",
    "mikeandersun": "Can I modify source code?. how I can get new updates?!\n. Thanks Ruudvdl,\nI know fork causes lost private change in source, and I have to merge my private code after any commit and build it myself. How I can use of your work without this challenge? \nI copy your work to my local version and build it?\n. Do your fork update to master branch?. I have not any implemented features at now, I talk about change in master branch.\n. So if I use of your fork, I have almost latest updates from master too? If so I change my repository location to your fork in GitHub windows I have on my PC. Am I right?\n. OK, \nI start with your fork, and waiting to your merge with master branch.\nDo you have a live demo or production?\nThanks a lot.\n. I clone your fork , but I got 4 compile error:\nError   3   The type or namespace name 'ServiceBus' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?)    ...\\Thinktecture.IdentityServer.v2\\src\\OnPremise\\WebSite\\Communication\\DynamicsSendJob.cs   1   17  WebSite\nWhere I can find this reference and why we need it?\n. Hi Ruudvdl,\nFYI, I try to use your work, but in my opinion you MUST NOT change the exiting providers when we have a provider model. As I know changing in the main source of an open source has merging challenges. \nYou can implement your membership provider in a separated project and config if in the repositories.config file so the framework invoke it in runtime. I do an elementary work on my membership provider and work fine. \n. Thanks a lot for clear subject. I will use your code in my project. I am new to this project.Good luck!\n. The main my confuse is that I use AngularJS and I have a SPA application, I have only one home page that have a razor view and a controller and other my view are client side AngularJS that inter operate with my Web API on server.\nUser redirect to IdSrv login  page and then return to my site but I don't now how I can get user information(Claims) from client.\nExcuse me for this confuse. \nAny help will be appreciated. \n. Hi Raj,\nThe Identity project support provider model and you can develop your identityProvider and set it up in the repositories.config file. The registration page is not implemented , you can do it yourself. \nHTH\n. Thanks you for attention.Can I use these flows for native mobile(Android, ...)? Or there is another way?\n. Sorry, How I can reqeust and get token from Identity Server V2 in an JavaScript app like a SPA? I should use OAuth2? please give me some point.\n. OAuth2 is the only way? excuse me. I would like to be sure that I am in a right way. I 'am in studying Pro ASP.Net Web API Security that you have foreword on it. I think after reading it I understand many things an concepts. \n. yous means this line?\nclaimsAuthenticationManager type=\"MyWenApiProject.ClaimsTransformer, mywebapiAssembly\"\n. Work fine. \nThanks a lot for your time. \n. I enable tracing and this is the error:\nFailed to issue token. An exception occurred. System.ArgumentOutOfRangeException: Jwt10530: The 'System.IdentityModel.Tokens.X509AsymmetricSecurityKey' for signing cannot be smaller than '2048' bits.\nParameter name: key.KeySize\nActual value was 1024.\n   at System.IdentityModel.Tokens.SignatureProviderFactory.CreateProvider(SecurityKey key, String algorithm, Boolean willCreateSignatures)\n   at System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateSignature(String inputString, SecurityKey key, String algorithm, SignatureProvider signatureProvider)\n   at System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateToken(String issuer, String audience, ClaimsIdentity subject, Lifetime lifetime, SigningCredentials signingCredentials, SignatureProvider signatureProvider)\n   at System.IdentityModel.Tokens.JwtSecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)\n   at System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal principal, RequestSecurityToken request)\n   at Thinktecture.IdentityServer.Protocols.STS.TryIssueToken(EndpointReference appliesTo, ClaimsPrincipal principal, String tokenType, SecurityToken& token)\nCan you suggest me a directions?\nThanks\n. Worked fine. \nThanks\n. Yes.\n. It seems the Identity server don't accepts http:// protocol as return url and return url must be https. Is the a way I set http?\nCan I get Token from the cookie in home controller of the MVC project and set it in a ViewBag variable? Then I cunsume it in the JS files.\nBest,\n. WS-Federation. The MVC site is a Relay Party for Identity Server with following config in identityModel.services.config\n \n\n. So, I can't retrieve the issued token from the cookie? \nIt seems I don't need it when the APIs (Resource Server) in the MVC web site that hosted JS files and APIs. I can call APIs without sending token in header?\nIf I need token must get it from Identity server by implicit flow of OAuth2?\nThanks a lot  for clarify me.\n. Yes, your assumption is correct. I would like to separate api in another hosting space , I can't get token without having SSL , so for now I merge APIs and JS in one project.\n. ",
    "ppoliani": "Yes it does work for me. Thanks a lot. But why don't simply do this automatically do this. I mean isn't a bit more obvious to bring the cached version of FederationMetadata.xml only when the corresponding models remain intact. I guess there is a reason behind explicitly recycling the application.\nIn any case, thanks for you help\n. Could you briefly explain why User management is optional? I mean the IUserManagementRepository provides an interface for managing users, shouldn't it be compulsory. \nOn that note i would like to ask you the CreateUser method of IUserManagementRepository: I want to create a custom user manager but the problem is that i want to store more data than simply the username, password and email. \nWouldn't it be better to add one simple parameter to that method e.g. IUserProfile so that we can pass any information we want\n. I'm glad to hear that your planing to implement a management system. By the way, are you planning to use the katana security modules?\n. Cheers!\n. Is that mean that instead of using WS-Federation and SAML i should use OAuth2 and SWT/JWT? If so, is IdSrv the correct tool for me?\n. Cheers for the guidance; That was really helpful. I'll definitely have a go with the AuthorizationServer. \n. ",
    "rinkeb": "No problem, i'll wait for his input.\n. Well, it's still relevant for me. Patiently waiting..\n. Sure, making my own implementation of the user & claims repository is no problem. \nBut maybe Brock has some ideas about getting context from IdSrv into my IUserRepository implementation, to enable me choosing the right userdatabase. \n. @jd4u\nThanx for your input. Your solution requires me to hack my own version of idsrv, doesn't it? Not sure if i want to go that far.\nDynamic selection would happen via the request hostname. Each customer has a unique subdomain, but all of these subdomains are bound to the same website instance. The request hostname allows me to discriminate between them. Then i would specify a customer specific realm/scope and redirect to my idsrv instance. \n. @jd4u I'm new to MEF, but if i understand it right then your solution can make MEF fill my predefined property with import attribute (for example RequestDetails) with the desired value?  Sounds good.\nThank you both for your suggestions!\n. ",
    "cmarques-zz": "@brockallen, can you share some code on how you changed the routing to get the tenant ID to the controller?  Also, will the tenant ID make it all the way to the IUserRepository (which is what rintje is asking)?\n. ",
    "walidward": "Yes you are right , gmail is my Identity Provider i did the following steps :\n-i have setup gmail account and got client id and secrent code and i put the redirect url to be idsrv (thinktecture website).\n-i have created web app (mvc 4) as relying party\n-i have configured thinktecture relying party to trust my wep app and i have configured oauth2 for google params as IDP .\n-i have added metadata link of thinktecture through identity and access tool in Visual studio to build trust in my mvc4 web app\n-i ran my web app and got the below error : \n\"Error: redirect_uri_mismatch\nThe redirect URI in the request: https://localhost/IdSrv/issue/hrd/oauth2callback did not match a registered redirect URI\"\nplease help me in that issue 4 days and can't solve the issue.\n. It was like that and i tried to change the domain in my computer and using host name to be https://IdSrv.dev/ but still not work ,\ni saw your vedio about home realm discovery (its great) but we hope you made another veido (or snapshots) showing the oauth2 with google/live/facebook or twitter .\nin my case i tried to put the redirect URI in google but still coudn't fix the issue and i have the same erro msg : \"Invalid parameter value for redirect_uri: Non-public domains not allowed: https://idsrv.dev/issue/hrd/oauth2callback\"\n. I tried to make host on my machine (.com / .dev / etc ) all give me same error :) .\n@jd4u i have tried to update the redirect URI in google console but got error \"The redirect URI in the request: https://localhost/idsrv/issue/hrd/oauth2callback did not match a registered redirect URI\"\nPlease look at the attached images, it will show you my case scenario , i'm waiting your advice's . \n\n\n\n\n\n\n\n\n. I have tried to open fiddler and check what is going on , and i tried to change to lower case , still not fixed the issue.\nFinally i tried some changes to make host name on my (System32\\Drivers\\etc) (127.0.0.1 idsrv.com), also if i put idsrv.example.com it will work. then i changed IIS setting from application to web site with SSL and pool identity to be network service , its working now :) \n\nactually i tried that scenario before and it wasn't work that time, but now working , i'm happy , \nthank you sooo much  @leastprivilege  @jd4u @briansboyd .\n. ",
    "brandonm-atiba": "Well, right after posting that and spending so much time i figured out it's the site id in the idsrv.local config... :)\n. ",
    "dajomo": "Thanks @jd4u, I can confirm that your recommended solution work as expected.\n. ",
    "mathew007": "Thanks for the quick response!\nCan I use WebReuest in Session_Start() of FedApp2 to achieve this.\nWebRequest.CreateHttp(\"https://localhost/idsrv/issue/wsfed?wa=wsignin1.0&wtrealm=http%3a%2f%2flocalhost%...\n. Ok Thanks!\n. ",
    "senj": "Thanks for your answer.\n1) seems to be a thing that i have to live with.\n2) was caused by signature problems with ValidateToken(). My symmetric signing doesn't work but there are enough infos out there.\n. I see you've got the AnalyzeRequestClaims(details) method in Request.cs. Is it only checking against null values instead of the rst? Or why can't i use it?\n. okey thank you\n. okey thank you can you tell me if the Issue() method in there is called everytime or only if i'm logged in?\n. thx\n. oh okey, thought this must match the url.\nthank you\n. Yes i tried that, doesn't work and i don't want to use it anyway.\nIf i send cookie via ssl and switch to http afterwards, is it exposed?\nYou recommend to use only ssl?\nthanks\n. roger that. thank you\n. no, no files are getting created\n. oh that's it.. thank you\n. ",
    "tslinkard": "?  not really sure what that means.  so we can't run it locally?  simply add logs and guess at stuff?\n. Thank you.  that got me working.  I was trying to create my own seperate website and use it.\n. Sorry, I didn't mean a hidden iframe.  pulling the IdentityServer pages into an iframe on another site.  so basically I go to site1.com but I need to login.  instead of a full redirect to the idsvr, i go to a page say site1.com/login that has an iframe that contains the idsvr.  Just curious if you had ever done anything like that before.  I'm hoping to play around with it this week and try it.  just curious if you thought it would work.\n. Ah.  that reference made me learn about clickjacking.  thanks for that.  so maybe the way to do it would still be to do a redirect but pass in a parameter of what site it's coming from so if the user does bookmark it, we will know where to redirect them back to after authentication.  and with that parameter maybe show our own custom views on the idsvr.  so basically what gmail is doing.  does that sound correct?\n. ",
    "rajn91": "Thank you jd4u and asadsa. I am working on these and will get back, if i have any further queries. Appreciate the quick response. \nJust fyi - i managed to implement my own claims and user management by following this post:\nhttp://garymcallisteronline.blogspot.sg/2013/03/extending-thinktectureidentity-server.html?showComment=1380637248730#c2955918364772633267\nHope this is the correct way.\n. ",
    "gagoole": "verify token that is valid or not?\n. 1-Is Token Portable?\n2- How to authurize a web api by the token that get from server?\n3- If a token Use in other machin how to verying the token?\nPlease Help me about SDK.I see sdk in google ,facebook ?\n. Tokens are Portable\nOne important aspect to understand about user tokens - and access tokens in general - is that they are portable. Once you have an access token you can use it to make calls from a mobile client, a web browser, or from your server to Facebook's servers. If a token is obtained on a client, you can ship that token back to your server and use it in server-to-server calls. If a token is obtained via a server call, you can also ship that token down to a client and then make the calls from the client.\nhttps://developers.facebook.com/docs/facebook-login/access-tokens/\n. Thank you so much..\n. MR??\nPlease explain more about MR.\n. oooh...!! \n. The vs web server will restart the applcation every time you run the website from vs hitting the break point on the app start but IIS will only start the application the first time it is called. That's why it doesn't hit the break point again until you do a iisreset.\n. ",
    "robthejedi": "Thanks for the replies. If this is the wrong place for this discussion please let me know.  @larsw based on your last paragraph it sounds like you may be seeing the same thing? I appreciate the time and help. I am wondering where I have configured the set up incorrectly to make the final redirect to the application. Is it perhaps the configuration of IdSrv with the WAAD in azure? I have included all relevant data. Just not sure where I crossed something.\nI was expecting the flow in this case to be\nRP -> IdSrv Hrd ->WAAD\nRP <- IdSrv <- WAAD\nBut the response terminates at the IdSrv (/fp/ in the snippets below) rather than being redirected all the way back to the RP (localhost:44303)\nAs this is most likely a configuration issue, I have included relevant information below. \n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncertificationValidationMode set to \"None\" by the the Identity and Access Tool for Visual Studio. For development purposes.\n\n\n\n\n\n\n\n\n\n```\nWAAD  Config in Idsrv\n\nRelying Party Config in IdSrv\n\nAzure Application Registration\n\n\n. Thank you both so much, I thought I had tried that at one point but apparently it must be public and late and night and it works. I have learned a lot from all of this and appreciate the prompt feedback. Now have running samples with it as an IdP and FP. \n@larsw Yes I have regenerated the key.\n. Hi Brock,\nIs it possible the issue is that it's not exposing a nameidentifier claim?\nNo we didn't implement a custom IClaimsRepository. \nI have checked the AD FS server's event log (Application and AD FS Admin) and haven't seen any additional details. I'm an AD FS newbie, so not sure where else to check.\nThanks,\n. @paullem I appreciate the help. What is the best way to contact you out of band?\n. Hi @paullem, I got the email info you can remove the email from your comment.  I will send the metadata soon.  Thanks again.\nI was trying to import the metadata using \"Add Relying Party\" as a Relying Party / intermediate issuer (R-STS ?).  In the metadata it points to the wsfed endpoint should this be the hrd endpoint of IdSrv?\n. Paul was able to load the metadata as a claims provider trust but not as a relying party. We have exchanged some emails and it looks like adding an endpoint to the metadata for the hrd endpoint in IdSrv may be needed. Paul has given me some pointers and I am going to try to build it out this week to see if it resolves the issue.\n. Took a first pass at this yesterday, added an ApplicationServiceDescriptor to the metadata. I think the code is incomplete but it did appear to allow AD FS to consume the metadata. I will keep testing today. I'm a total newbie at git so once I feel comfortable I will get the code  committed for review.\nSummary of changes.\n1. Add new method GetApplicationServiceDescriptor to WSFederationMetadataGenerator.\n2. Add call to the new method to the Generate method.\n\n. @leastprivilege Yes, I have a change ready and have tested with AD FS. This is my first time using git so I want to make sure I don't mess something up. I will try to get a pull request ready today.  After discussion with @paullem we agreed to implement a second federation metadata xml endpoint, leaving the existing one untouched.\n. Yes adding the second endpoint with metadata configured to use the HRD endpoint resolve the issue for us and we were able to import the metadata successfully.\n. Is the relying party application setup to use the MachineKeySessionSecurityTokenHandler? Setting the machine keys the same in a load balanced environment will help, but without using the MachineKeySessionSecurityTokenHandler I think it still will use the plain old SessionSecurityTokenHandler which relies on DPAPI for encryption and decryption of the fedauth cookie.\n. ",
    "dougbradbury": "I was able to get the token to pass through by adding the claims from the incomingPrincipal to the principal returned from the Authenticate method in ClaimsTransformerBase.cs in the Authorization server.  I selected Claims based on an OriginalIssuer name that I chose in the IdServer side.\nIs there anything wrong with doing this?  Why aren't all the claims just forwarded along anyway?  What am I missing here?\n. ",
    "gpickell": "My apologies....\nSo here is what I did. I setup a \"Facebook Identity Provider\" and this works. What I mean by works is that I use the HRD endpoint with the home realm parameter assigned and I observe my application receiving the callback with the security token supplied. So doing the exact same thing, I now supply a wreply parameter to the hrd endpoint and it is lost. As far as I can tell, wreply is normally honored except when using an OAUTH2 based IDP, and I was able to track down the reason why... it is simply not being remembered as part of the book keeping for OAUTH2 based IDPs (facebook / google).\n. ",
    "dei79": "Hi,\nso what is the solution idsrv is designed for? Is the right way to fork and customise or is it the right way to embed the core into my own MVC app and build my workflows in that?\n. ",
    "jugster": "Thanks, we're going to overcome this by using GET.\nGood to know that Microsoft refuse to recognize the existence of POST in HTTP protocol.\n. Thanks for that, it does help to be able to get 401 at least, but it doesn't actually solve our problem.\nLet me explain the situation we have here at the moment.\nOur system is configured for the client app cookie to expire in 5 mins and IdentityServer cookie in 10. The Ajax call in question happens between 5 and 10, so it's a valid request that should be processed normally without user noticing the cookie getting refreshed, as he wouldn't if it was regular HTTP browser request.\nThis means that we would want some way of checking if the cookie expired with javascript on client side, then refreshing the cookie and only then processing the Ajax request as it is now.\nIs this scenario somehow possible, or is there any other way to still process those ajax calls after the local 5 min cookie expires?\n. Okay, here's the situation.\nWhen signed in, I can see the following cookies (SSO related):\nOn Chrome and Firefox: \nIdentityServer - idsrvauth, wsfedsignout\nClient App 1 - FedAuth, FedAuth1\nClient App 2 - FedAuth, FedAuth1\nOn IE10:\nIdentityServer - idsvrauth\nClient App 1 - (none)\nClient App 2 - (none)\n. Everything works just fine and as expected, except for the sign out on IE 10.\nWhen you do the sign out on one App the user stays logged on on the other. Again, this only happens on IE10.\n. I know, and it is there somewhere, but it's if it was stored on a different place then the other cookies.\nAs I mentioned previously the signout cookie gets passed to the ProcessWSFederationSignOut action. You can clearly see that the relevant realms in which to process sign out are there. The problem is that the sign out happens only on one from which you initiated the sign out. On the other, the cookie is there and you can continue to use the app. When you try to do the sign out from there, it first presents you with the sign in form, and after you get authenticated it then returns to the sign out action. \n. ",
    "mikicaradojcic": "Is there any news on this subject?\n. No, I turned it off. On each 15 minutes when RP cookie expires my app is redirected to ID server, where ID server cookie is extended for 30 minutes and RP get new 15 minutes cookie. It is kine of sliding with a little help of ID server.\nClient specification was exact no unlimited session lifetime and I found it much more secure since while user is working we will keep his RP session as well as ID server session but if users stop working for 30 mins he will lost all of those. \nAll works fine until I introduced AJAX. \n. Huh, no some workaround to make things happening?\n. Yes and no, I'm getting 401 for local application but I still have ID server cookie which makes me feel that I'm able to renew local RP session out of it and that is going on with no AJAX.\nThe question is how to renew local RP Session out of live ID servers session with AJAX. \nSorry for bugging you, I get the feeling that you don't understand my problem and I'm trying to give you more insights. \nThanks\n. ",
    "thomastvedt": "I realize that this was a lot of questions at once..What I really want to know the answer to is question 2. Any thoughts? :-) \n. ",
    "mafis": "Ok, with Login Code you mean the \"Repositories\" Interfaces or something other?\n. An OOS Project Sounds Great. \nI think i will start an easy Usermangement System based on Membership Reboot. And the Repositories for Identity Server and bring it to Github. \n. @brockallen that would be fantastic :+1: \nWhat is real fast for you :) ?\nI have something in mind, but you are a real pro at that topic.\n. @dealproc i think (hope) @brockallen & i have something other i mind which would be easier to create within a new project\n. The question for me is what makes an Identity Management System (IMS) an IMS.\nUsers, Roles & Groups or ?\n. I think it's ok without require an Email.\nBut also it cuts out a lot of things that MR does. Hmm\n. The example looks great. \nA good starting point for the identitymanager is the Membership Reboot Sample App.\nI get in some trouble with the MembershipReboot NuGet Packages, but that's another topic so i create a issue within MembershipReboot.\nBut this could be closed now.\n. ",
    "mergut": "In step 3) inside IdentityServer2 configuration, when setting up IdentityServer1 as a relying party, set the hrd endpoint url (https://localhost/IdentityServer1/issue/hrd) as \"Redirect Url\".\n. ",
    "jalex": "I set \"Redirect Url\" to \"https://localhost/IdentityServer1/issue/hrd\", but it doesn't work. \nI received an error:\n[InvalidOperationException: cookie]\n   Thinktecture.IdentityServer.Protocols.WSFederation.HrdController.GetContextCookie() in c:\\work\\IdTests\\IdentityServer1\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\HrdController.cs:525\n   Thinktecture.IdentityServer.Protocols.WSFederation.HrdController.ProcessWSFedSignInResponse(SignInResponseMessage responseMessage, SecurityToken token) in c:\\work\\IdTests\\IdentityServer1\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\HrdController.cs:345\n   Thinktecture.IdentityServer.Protocols.WSFederation.HrdController.ProcessWSFedResponse() in c:\\work\\IdTests\\IdentityServer1\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\HrdController.cs:106\n   lambda_method(Closure , ControllerBase , Object[] ) +79\n   System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters) +274\n   System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters) +39\n   System.Web.Mvc.Async.<>c__DisplayClass39.b__33() +120\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +452\n   System.Web.Mvc.Async.<>c__DisplayClass37.b__36(IAsyncResult asyncResult) +15\n   System.Web.Mvc.Async.<>c__DisplayClass2a.b__20() +33\n   System.Web.Mvc.Async.<>c__DisplayClass25.b__22(IAsyncResult asyncResult) +240\n   System.Web.Mvc.<>c__DisplayClass1d.b__18(IAsyncResult asyncResult) +28\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +53\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.<>c__DisplayClass8.b__3(IAsyncResult asyncResult) +42\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +606\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +288\n\n. This still does not work\n. I tried add ADFS 2.0 as identity provider for IdentityServer1 (as it is told in this video: http://vimeo.com/51666379), but I received same problem.\nWhen ADSF is sending POST with a token back to the IdentityServer1 then it is not redirecting me to the RelyingParty1.\nIn ADFS configurations I added IdentityServer1 to \"Relying Party Trusts\" list:\n- Select Data Source: choose \"Enter data about the relying party manually\"\n- Specify Display Name: \"Display Name\" = \"identityServer1\"\n- Choose Profile: choose \"AD FS 2.0 profile\"\n- \u0421onfigure \u0421ertificate: do not change anything\n- Configure URL: check \"Enable support for the WS-Federation Passive protocol\" and in the \"Relying party WS-Federation Passive protocol URL\" enter \"https://localhost/identityServer1/\"\n- Configure Identifiers: do not change anything\n- Choose Issuance Authorization Rules: choose \"Permit all users to access this relying party\"\n- finish\n. Oh, yes, of course. \nI tried both of mine scenarios again but with another configuration. And now it works!\nThanks for your help! Please close that issue.\n. ",
    "HakTeck": "Hi Jalex,\nHow have you managed to get it resolved? I'm facing the same issue you had explained earlier and i'm struggling to get it solved. I appreciate your help.\n. ",
    "omardelgado": "Jalex,\nI had everything configured to use internal addresses and everything worked.  The moment I switched to the public url, the request reaches identityserver and returns the dreaded \"InvalidOperationException : cookie\".  My stacktrace is pretty much similar to yours.  How did you manage to resolve the issue?\n. awood20, I was stuck, but thanks to your post I figured it out.\n. ",
    "mat145": "I belive that I have an approach for my problem.\n1) Create a SamlSecurityToken on the client-side, in the token I add claims that is used on IdentityServer for authentication.\n2) Create an IssuedTokenWSTrustBinding and create a channel with the token I created in step 1). And call the Issue-method with an RST.\n- On the IdentityServer I have subclassed the SamlSecurityHandler. Removed the default SamlSecurityTokenHandler and added the CustomSamlSecurityHandler. \n3) The call gets to my CustomSamlSecurityHandler. The ValidateToken is called where I can validate the user that is calling depending of the claims from the SecurityToken.\n4) After this I get a get an exception on the client\n\"MessageSecurityException was unhandled\nAn unsecured or incorrectly secured fault was received from the other party. See the inner FaultException for the fault code and detail.\"\nI have enabled tracing on the IdentityServer. From the wcftrace-log I got this exception:\nExceptionType:     System.ServiceModel.Security.MessageSecurityException, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\nMessage:     The supporting token provided for parameters 'System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters:\nInclusionMode: AlwaysToRecipient\nReferenceStyle: Internal\nRequireDerivedKeys: False\nTokenType: null\nKeyType: SymmetricKey\nKeySize: 256\nIssuerAddress: null\nIssuerMetadataAddress: null\nDefaultMessgeSecurityVersion: null\nUseStrTransform: False\nIssuerBinding: null\nClaimTypeRequirements: none' did not endorse the primary signature.\nIs there something obvious that I'm missing?\n. I have resolved the issue. \nThe solution to the MessageSecurityException that I had was resolved by adding the same KeyType of the binding on both the client and IdentityServer.\nHope this can help someone else.\n. ",
    "nyankov": "I've got the exact same problem today against Facebook OAuth. The problem still exists. I can't understand is it related with connection problem or anything else. At the same time the OAuth agains Google works perfectly. \n\nI will try to find out more details and will share them here.\n. ",
    "harmeetsra": "I know how to get handle to Authorization header in service stack, but not sure how to validate that token with Identity Server Once I have token from headers.\nCan you please help on how I can validate token with identity Server?\n. Thanks Dominick!! It works like charm, I wasn't using any custom roles.\n. ",
    "koder217": "Azure Websites doesnt allow the use of certificate store. just wanted to show a workaround. Obviously one has to secure the certificate from public access.\n. ",
    "doggyde": "I must admit this happened by accident: I added the sources to my solution and some time later I told the solution to update ALL packages (stupid me). But since I'm in an early stage of brand new project I was thinking \"hey, why not? try it. sooner or later they will go mvc 5/web api 2 anyway.\"\nIn my project I only use a limited set of features. I would like to use the IdSrv for authentication for some own mvc 5/ web api 2 sites only - no delegeation, no OAuth, nothing special, just authentication and probably claims. Therefore I have two options: take the sources of the IdSrv and customize the (user-/ not admin-)interface (which will make updates painfull) or write an own minimalistic IdSrv which than would preferably be written in mvc 5 and use nuget package versions of core as shown in the samples - more effort in the beginning. Both ways I would customize user authentication and authorisation (claims) to retrieve values from an existing database. I haven't decided which way to go yet - I'm still evaluating.\nI'm aware of the fact that IdSrv hasn't been tested agains the new versions of mvc/web api yet and that there is definitly a version mixture. We got some months to go before we reach production so I can just give it a try. ;)\nI'll try to upgrade .core and .protocols. I've just been confused by the fact that there is no app.config and was too tired to simply add one - it's been some long days ;)\nThank you so far. I'll give it a try and of course report back if I got it to work and how easy it's been.\n. Yeah, I know. I will definitly not be using this in production. It's just part of my evaluation. I now managed to get it running by simply adding a bindingRedirect on System.Web.Http. Using ILSpy it turned out that it is the IdentityModel (pulled in via nuget) which requires v4.\nAfter a first simple test it looks like everything working. I am aware of the fact that this shouldn't be used for production and also wouldn't recommend to use this untested. I don't think this is a good idea either, but you know it's the geek/child inside me or it has to do with \"there is no 'this won't work'!\" ;)\nIt's just good for some early evalution/tests and simplifies my playground for easily using libraries for customization in the same solution quickly without the need for buildscripts/dependencies etc. Also it will force me to really setup some clean solutions ;)\nThanks you.\n2 b closed\n. ",
    "jmarler2010": "From what I saw, the answer is yes. ADFS will only work with AD or federated with another IDP/STS. That is why I looked into Thinktecture\u2019s Identity Server. If someone has a different answer please chime in.\nFrom: Mike [mailto:notifications@github.com]\nSent: Monday, November 11, 2013 10:50 AM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nSubject: [Thinktecture.IdentityServer.v2] Is ADFS required to use AD as a provider with Identity Server? (#483)\nI'm sure this is a pretty simple question. I'm trying to determine if ADFS is required in order to use AD as a federated provider for Identity Server. Every reference I see of using AD with Identity Server is talking about ADFS, so I believe it is, but am just wanting to make sure.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/483.\n. ",
    "bartek4c": "Hi Brock, I cannot get my head around the concept. I've registered IdSrv wsfed endpoint as an identity provider, but how can I configure the IdSrv hrd as a RP? At the moment I'm getting invalid realm server error. The realm is actually equal to Site ID from General Configuration panel?\n. Thanks very much for your help, and for the screenshots especially!\n. I found the reason, my requireHttps parameter was set to false\n. ",
    "yichingwu": "hi brockallen,\nCould you do me a favor? \nI was also used the HRD in My identity services client application with your screenshot.\nfacebook ,linkedin, windows live are working fine now, but when I click the form login that I setup with your approach then the page was redirected to the Thinkecture Identity server \"account signin\" page and I can login successfully with the correct username and password and then it always redirect to the Thinkecture Identity server default administration \"Home\" page not redirect to the Client application original page. I don't know what wrong in my configuration .\nthe form login url is : https://xxx.xxx/IdentityServer/account/signin?ReturnUrl=%2fIdentityServer%2fissue%2fwsfed%3fwa%3dwsignin1.0%26wtrealm%3dhttp%253a%252f%252fxxx.xxx%252fTMIdentityServer&wa=wsignin1.0&wtrealm=http%3a%2f%2fxxx.xxx%2fTMIdentityServer\nthank you.\n. Sorry I can't post images on Stackoverflow , so I post it here.\nI would like to Thanks Pepo first, you saved my life again. it is working fine now. the following is my configuration and screen shot.\nMy Use case:\n1.(APP Client)abc.cloudapp.net/oauthclient2/\n2.=> Thinktecture identity server \"hrd\" page (https://def.cloudapp.net/identityserver/ )\n3.=> login with facebook or IDP(identity server) if successful then\n4.=> redirect to (APP Client)abc.cloudapp.net/oauthclient2/\n\nstep 1. IdSrv's general info\n\nstep 2. IdSrv's key info\n\nstep 3. create a new Identity Provider names\n\nstep 4. create a new Relying Parties & Resources names\n\nstep 5. Web Application Client(abc.cloudapp.net/oauthclient2/) Web.config should be configured (part 1.)\n\nstep 6. Web Application Client(abc.cloudapp.net/oauthclient2/) Web.config should be configured(part 2.)\n\n. I will use ASP.NET for my business services and the other web site will just use javascript&HTML . I would like to know which web api I can use?\n. ",
    "sisko612": "boosterwu- did you get this to work?  I'm having a similar issue.\n. I have a user named \"authadmin\" which is in the IdentityServerUsers role.  That is the only user in the AuthorizationServerAdministrators table.  I'm still getting the same error.  Is there something else I can try?\n. OK, that's how I configured the user in IdentityServer:\n\nThis is the user that is in the AuthorizationServerAdministrators table.\n. Yes I am using HRD.\nI followed your screencaps from issue 484 - in the RP config for IdSrv, you have the hrd endpoint specified for the Redirect URL:\n\n. I have some new information based on additional evaluation & testing.\nOn a hunch, I downloaded the distributable version of IdSrv 2.5 and deployed it locally.  The only change I made was to the connection strings to point to my existing IdSrv databases.\nNow, when I try to run AS, I get the IdSrv login prompt!  However when I enter the \"authadmin\" credentials I get the following error within AS:\n\"ID4022: The key needed to decrypt the encrypted security token could not be resolved. Ensure that the SecurityTokenResolver is populated with the required key.\"\nSo it looks like I have some more work to do with encryption cert configs somewhere...?\nAs to why the distributable version of IdSrv works and the source version does not, I can only think of 2 possibilities:\n1) An update to one or more NuGet packages contained a breaking change\n2) The IdSrv source & distributable codebases are out-of-sync\nMy money is on #1 :)\n. More good news - if I remove the encryption cert from the AS & IdSrv RP's, then I can login to AS successfully - no more ID4022 errors. :)\nAlso, possibility #1 above doesn't seem to be the case.  I compared all of the packages.config's between the source version that is broken and the distributable version that works, and they are identical.\n. I have found the reason why the IdSrv source was not working as expected so I will close this ticket.\nIn the web.config for IdSrv, the authentication mode was changed from \"Forms\" to \"Windows\" (I honestly do not remember making that change, there would have been no reason for me to do so, but there it is nonetheless).  When I changed it back to Forms I was able to login to AS while running the IdSrv source in VS2012.\nThanks Brock and Dominick.\n. ",
    "dushantha80": "Thanks guys. Solved it by setting up identity server in autofact,\n ",
    "mickyfinn007": "Brilliant thank you. \n. ",
    "pkaushik23": "Thank you for the reply, I will re-install Thintecture identity server and will check this again.\nOne more thing, does the powershell script above corresponds to adding an application to an active directory (from the portal UI) If not, please can you guide me to a article where it is explained. \nThanks again for the help.\n. Thanks for the link.I will check the re installation over the weekend.\n. I think for the ThinkTecture identity server i still have to do the Powershell way.Sorry if i am asking a very basic question. Thanks.\n. actually i did that before but i think i might have missed something very basic, i will redo all the steps.Thanks.\n. Hi,\nI am sorry for being very late on this.\n- After i re-installed identity server, this issue not reproducible. (should have been some configuration issue when i first set it up).\n- This time, I did not used powershell scripts instead followed the guide from Dominick.(http://leastprivilege.com/2013/06/24/adding-windows-azure-ad-ga-as-an-identity-provider-in-identityserver/)\n  while doing above step i had an issue which is resolved and documented here https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/306 \nSide notes:\n- Configured relying party as my mvc4 application\n- As my app was not running on https , so had to turn off \"Require SSL\" attribute for \"Ws-Federation\" under the Protocol section.\nA big thanks for all you help.\nScreen shots from my sandbox environment.\n\n\n\n\n\n. ",
    "martinherr3": "Hi, \nMy name is Martin and I'm trying to implement a PHP \"Client: (from the IDS perspective), for the Thinktecture IdentityServer3 Identity Server\nI have seen that you were working on something similar\nI have no experience in PHP, but we need to a simpler demo, as it is already working with .Net apps.\nSo, it would be great and I'll be very grateful if you please could provide me some info/example/material/experience to achieve this.\nThanks a lot,\nMartin\n. Hi @brockallen , thanks a lot for the link. \nYes, I willl take a look and work with those libraries and let you know the progress. Do you know someone that has implemented a PHP or Java client for IdentityServer3? I was hoping that @jghistory  could help with this point.\nThanks again and congrats for the project!\n. Hi, thanks for the fast reply.\nI'm also part of the .Net Community. I could perform the implementation of the IdentityServer3 with a MVC .Net client and a WebAPI as a resource.  My challenge is to implement clients for demo in those technologies, so we can use a centralized Identity Server in our organization.\nCheers,\n. I forgot to mention that the .Net implementation is working great!!   :+1: \n. ",
    "jghistory": "Thanks!  That's now working.and  the client is getting two encrypted\ntokens back,\none called __RequestVerificationToken_L2lkc3J20, and one called idsrvauth.\nWhich of these should be given to the resource server, and how should the\nresource server validate the token?\nAlso, I don't see a refresh token there, even though my config says there\nshould be one.  The admin page of the identity server also shows no refresh\ntokens.  What needs to be done to include a refresh token--or is it one of\nthe tokens above?\nMany thanks!\nOn Tue, 26 Nov 2013 01:40:23 -0800, Dominick Baier\nnotifications@github.com wrote:\n\nYou define them yourself - when you create a relying party / resource.\nthe realm identifier becomes the scope. \n\nReply to this email directly or view it on GitHub [1].\nLinks:\n[1]\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/496#issuecomment-29278694\n. Well, I thought I knew how OAuth2 works, because I've read the spec and\nused it before. Perhaps I need to know more.\nI've set up for Authorized\nCode Flow, and used a php client of the net to test it with.\nThe PHP client\nis intended to connect to https://localhost/idsrv/issue/oauth2/authorize\nin\norder to authorize the user, then connect to\nhttps://localhost/idsrv/issue/oauth2/token\nin order to get an access\ntoken.\n\nHowever, what I see using fiddler is that it connects to\nhttps://localhost/idsrv/issue/oauth2/authorize,\nwhere the full URL\nis:\nhttps://localhost/idsrv/issue/oauth2/authorize?response_type=code&client_id=112233445566778899&redirect_uri=https://localhost/MyTest/Success.html&scope=https://localhost/MyTest/Success.html)\nWhat you mention here are cookies? Are > you talking to the authorize\ncontroller or the token controller? Do you > know how OAuth2 works? > > --\n\nReply to this email directly or view it on GitHub [1]. > > Links: >\n------ > [1] >\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/496#issuecomment-29323262\n. Yes.  Or better.  When the client sends the token that it got from the\nidentity server  to the resource server, what should the client be dong\nwith it to verify that it is valid, and to know that it should grant access\nto the resource?\n\nOn Fri, 29 Nov 2013 02:32:48 -0800, Dominick Baier\nnotifications@github.com wrote:\n\nOK? \n\nReply to this email directly or view it on GitHub [1].\nLinks:\n[1]\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/496#issuecomment-29508003\n. \n",
    "damooooooooooh": "Can I weigh in here but how can I handle a access token received from ios app? Should I create a custom handler to validate the token directly with FB and then if successful validate and issue a token from identity server? \n. Hi Dominic, I did try ACS to abstract away the Facebook authentication, however the ACS tokens cannot be refreshed and most mobile apps don't require you to reauthenticate everyday.  Additionally ACS doesn't fit well with the IOS Facebook integration and SSO, most apps now do not require web views etc to perform oauth, these are farmed out to the Facebook SDK as per their guidelines.  \nI have to try and compete with other apps on the app store so have to offer similar flows that exist with most other IOS apps.  I can't see any security issue with what I am trying to do either but technically not sure how I can achieve it in identity server.  \nBasically my identity server instance needs to accommodate two authentication flows in order to issue an oauth token that can then be used with my web api.\n1) Authorization: Basic email:password\n2) Authorization: FB \nIf you have an IOS device, take a look at the Snapguide app to see how simple the Facebook auth is without any webviews etc.\nI hope you can help.\n. I think so yes. Because I am offering two authentication mechanisms, Facebook token and Basic I need to be able to issue the same token type from identity server so that it it's abstract to my web api which auth mechanism was used. I want to just put a claim into the token when specifies what auth mechanism was used so the client can offer additional functionality for facebook users such as sharing to the timeline etc.\nI'm just not sure where I need to extend in Identity server. I'm assuming I need to validate the incoming authorization header  to see what scheme is being used either Basic or FB so I can them implement my validation logic before issuing the oauth token.\nSome pointers would be helpful :)\n. So the simple http endpoint can issue JWT token?\n. Great. Do you have any blog posts related to this Dominick? Ie customising endpoints\n. Hi Dominick,\nI've just looked at the SimpleHTTPController and can't see any authentication logic in there.  Does the authentication to the datastore happen before this in the Identity Server pipeline?\n. Hi Dominick,\nI've just looked at the SimpleHTTPController and can't see any authentication logic in there.  Does the authentication to the datastore happen before this in the Identity Server pipeline?\n. Ok, I think I need to step through a basic authentication request and see whats going on. Thanks for your time and help on this, its very much appreciated.\n. So you mean these two sections?\n```\n// simple http endpoint\nif (configuration.SimpleHttp.Enabled)\n{\nroutes.MapHttpRoute(\nname: \"simplehttp\",\nrouteTemplate: Thinktecture.IdentityServer.Endpoints.Paths.SimpleHttp,\ndefaults: new { controller = \"SimpleHttp\" },\nconstraints: null,\nhandler: new AuthenticationHandler(CreateBasicAuthConfig(configuration, users),     httpConfiguration)\n);\n}\npublic static AuthenticationConfiguration CreateBasicAuthConfig (IConfigurationRepository configuration, IUserRepository userRepository)\n```\n{\n    var authConfig = new AuthenticationConfiguration\n    {\n    InheritHostClientIdentity = false,\n    RequireSsl = !configuration.Global.DisableSSL,\n    ClaimsAuthenticationManager = new ClaimsTransformer()\n    };\n    authConfig.AddBasicAuthentication((userName, password) => userRepository.ValidateUser(userName, password));\n    return authConfig;\n    }\n. So I can Add a new endpoint into the route like this\n// simple http endpoint\nif (configuration.SimpleHttp.Enabled)\n{\nroutes.MapHttpRoute(\nname: \"simplehttp\",\nrouteTemplate: Thinktecture.IdentityServer.Endpoints.Paths.SimpleHttp,\ndefaults: new { controller = \"FacebookHttp\" },\nconstraints: null,\nhandler: new AuthenticationHandler(CreateFacebookAuthConfig(configuration, users),     httpConfiguration)\n);\n}\n. Cool. I'll try and do that when I get home. Will this issue an oauth token? And can I put a claim into the token such as AuthProvider = Facebook for facebook authenticated users or AuthProvider = Basic for basic authenticated users? \n. Ok, so when the JWT token comes back to my web api eventually, Identity server will validate it using thumbprint of the issuing cert?\n. Ok Dominick, I gave this a go and created a brand new Endpoint which is receiving requests.   See code below:\n```\n        // facebook access token http endpoint\n        if (configuration.FacebookAccessToken.Enabled)\n        {\n            routes.MapHttpRoute(\n                name: \"facebookaccesstoken\",\n                routeTemplate: Thinktecture.IdentityServer.Endpoints.Paths.FacebookAccessToken,\n                defaults: new { controller = \"FacebookAccessToken\" },\n                constraints: null,\n                handler: new AuthenticationHandler(CreateFacebookAuthenticationConfiguration(configuration, users), httpConfiguration)\n            );\n        }\npublic static AuthenticationConfiguration CreateFacebookAuthenticationConfiguration(IConfigurationRepository configuration, IUserRepository userRepository)\n{\n    var authConfig = new AuthenticationConfiguration\n    {\n        RequireSsl = !configuration.Global.DisableSSL,\n        InheritHostClientIdentity = false\n    };\n\n    var handler = new SimpleSecurityTokenHandler(\"fbAccessToken\", token =>\n    {\n        //Generate the HMAC require to access users data on FB by hashing the accessToken with AppSecret\n        //Facebook app requires appsecret_proof for all access\n        var encoding = new UTF8Encoding();\n        byte[] keyBytes = encoding.GetBytes(\"<FACEBOOK APP SECRET>\");\n        byte[] dataBytes = encoding.GetBytes(token);\n        HMACSHA256 hmac = new HMACSHA256(keyBytes);\n        byte[] hmacBytes = hmac.ComputeHash(dataBytes);\n\n        //Create Facebook Client\n        FacebookClient client = new FacebookClient(token);\n\n        //Adding appsecret_Proof to Facebook request\n        var parameters = new Dictionary<string, object>();\n        string hexAppSecretProof = System.BitConverter.ToString(hmacBytes).Replace(\"-\", \"\").ToLower();\n        parameters[\"appsecret_proof\"] = hexAppSecretProof.ToLower();\n\n        //Get the users data from facebook\n        try\n        {\n            dynamic me = client.Get(\"me?fields=id,email,first_name,last_name,about,location,website\", parameters);\n            ClaimsPrincipal principle =\n                new ClaimsPrincipal(new GenericPrincipal(new GenericIdentity(me.id, Constants.AuthenticationType), new string[] { \"IdentityServerUsers\" }));\n            return principle;\n        }\n        catch (FacebookApiException ex)\n        {\n\n        }\n\n        return null;\n    });\n\n    authConfig.AddAccessKey(handler, AuthenticationOptions.ForAuthorizationHeader(\"FB\"));\n\n    return authConfig;\n}\n\n```\nthis seems to work, for some reason when I return the principal I need to add the users with a role of IdentityServerUsers.  Does it look on the correct path to you?\n. Hi Dominc,  I can extract the token from the Idsvr and sending it to my webapi from fiddler as below\nAuthorization: Bearer {\"access_token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaWRlbnRpdHlzZXJ2ZXIudjIudGhpbmt0ZWN0dXJlLmNvbS9zYW1wbGVzIiwiYXVkIjoidXJuOmtpbldlYkFwaSIsIm5iZiI6MTM4NTg0MDY2OCwiZXhwIjoxNDIxODM3MDY4LCJ1bmlxdWVfbmFtZSI6IjYyNzg5MzI2MyIsInJvbGUiOiJJZGVudGl0eVNlcnZlclVzZXJzIn0.fGeTcEATMxp3mTmeiSNcHVOZX84HbFSs_1vYlEMkBXw\",\"token_type\":\"urn:ietf:params:oauth:token-type:jwt\",\"expires_in\":35996398,\"refresh_token\":null}\nI am using the following code to try and extract the principal from the token but it is failing and returning a 401.\n#region IdentityServer JWT\n        authentication.AddJsonWebToken(\n            issuer: \"http://identityserver.v2.thinktecture.com/samples\",\n            audience: \"urn:kinWebApi\",\n            signingKey: \"bneXbx2Z5YkuUQnQRfrOfJdD67v7yCZNrizrIoKbA8k=\");\n        #endregion\nI have checked that the issue matches the Site ID on the general config page, the audience is the realm on the relying party and the signing key matches the Symmetric Signing Key in the same Relying party.\nWhat have I missed?\n. Hi, the CliamsPrincipal isn't getting populated.  Here's my code for a SecurityConfig which I have registered in global.asx\nnamespace JWTTest\n{\n    public class SecurityConfig\n    {\n        public static void Register(HttpConfiguration config)\n        {\n            // authentication configuration for identity controller\n            var authentication = CreateAuthenticationConfiguration();\n            config.MessageHandlers.Add(new AuthenticationHandler(authentication));\n```\n        //config.EnableSystemDiagnosticsTracing();\n    }\nprivate static AuthenticationConfiguration CreateAuthenticationConfiguration()\n{\n    var authentication = new AuthenticationConfiguration\n    {\n        ClaimsAuthenticationManager = new ClaimsTransformer(),\n        RequireSsl = true,\n        EnableSessionToken = true\n    };\n\n    #region IdentityServer JWT\n    authentication.AddJsonWebToken(\n        issuer: \"http://identityserver.v2.thinktecture.com/samples\",\n        audience: \"urn:jwtTest\",\n        signingKey: \"bneXbx2Z5YkuUQnQRfrOfJdD67v7yCZNrizrIoKbA8k=\");\n    #endregion\n\n    return authentication;\n}\n\n}\n```\n}\nI am using the ClaimsTransformer class as below and the incoming principal is \"\" \n//\nusing System.Linq;\nusing System.Security.Claims;\nnamespace JWTTest.Security\n{\n    public class ClaimsTransformer : ClaimsAuthenticationManager\n    {\n        public override ClaimsPrincipal Authenticate(string resourceName, ClaimsPrincipal incomingPrincipal)\n        {\n            if (!incomingPrincipal.Identity.IsAuthenticated)\n            {\n                return base.Authenticate(resourceName, incomingPrincipal);\n            }\n```\n        incomingPrincipal.Identities.First().AddClaim(\n            new Claim(\"localClaim\", \"someValue\"));\n    return incomingPrincipal;\n}\n\n}\n```\n}\nHere is a summary of the incoming principal properties:\nincomingPrincipal.Identity.Name = \"\"\nincomingPrincipal.Claims.Count() = 1\nincomingPrincipal.Claims.FirstOrDefault().Issuer = \"LOCAL AUTHORITY\"\nincomingPrincipal.Claims.FirstOrDefault().OriginalIssuer = \"LOCAL AUTHORITY\"\nincomingPrincipal.Claims.FirstOrDefault().Type = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"\nIts as if its not getting Transformed to a claim whatsoever.........\n. Stupid me JWT token needs to be send to web api by extracting the accesstoken, not sending the whole thing like so\nAuthorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaWRlbnRpdHlzZXJ2ZXIudjIudGhpbmt0ZWN0dXJlLmNvbS9zYW1wbGVzIiwiYXVkIjoidXJuOmtpbldlYkFwaSIsIm5iZiI6MTM4NTkyOTkxNiwiZXhwIjoxNDIxOTI2MzE2LCJ1bmlxdWVfbmFtZSI6IjYyNzg5MzI2MyIsInJvbGUiOiJJZGVudGl0eVNlcnZlclVzZXJzIn0.Rlh75W2cImlvbT7Wzp0O9mws3FT--gKpUur-E5iWuvI\n. Dominick, my last question is any pointers how I add a refresh token to JWT token?\n. I have it pretty much down using simplehttp endpoint but now working it into the oauth endpoints to benefit from refresh tokens. I'm also extending with my own database provider.  I can grant you access to my fork if you need it.\n. Dominic, after a little research I found spotify and songkick using oauth for the same thing using the assertion grant_type which I see is not defined in the identity model oauth2constants.  I plan to enhance identity model with this but just wanted to check why you left it out as I see its defined in http://tools.ietf.org/search/draft-ietf-oauth-v2-07#page-13 Section 2.5.\nI'll go ahead and make the enhancements, but the assertion model looks like I can make my authentication mechanisms extensible and also offer the possibility of Twitter auth as well.\nWhat about Facebook?\nAs I mentioned, Songkick lets people log in using Facebook, and we needed to continue to let them do that in our native apps so they could access the same account everywhere. OAuth has two features that help with implementing this and we\u2019ve tried both of them.\nASSERTIONS\nThe first of these features is assertions. Instead of sending the user to the provider\u2019s site to make them log in, the client can just pass some authentication token it already has from somewhere else. If that token is unguessable and can be used to identify the user, it can take the place of the code in the exchange request. Say the client app has somehow acquired a Facebook access token for the user (Facebook also implement OAuth 2.0 for their Open Graph system), it can then make one request to authenticate the user with Songkick, using the grant_type=assertion exchange:\ncurl -X POST https://www.songkick.com/oauth/exchange \\\n     -d 'client_id=2sb8nskp5ijmallhnbtvj2p2u' \\\n     -d 'client_secret=d6khk8prcdpeh0zcq97pftaqz' \\\n     -d 'redirect_uri=https%3A%2F%2Fwww.example.com%2Foauth%2Fcallback' \\\n     -d 'grant_type=assertion' \\\n     -d 'assertion_type=https%3A%2F%2Fgraph.facebook.com%2Fme'\n     -d 'assertion=the_facebook_access_token'\n{\"access_token\":\"4x02z6xy2c40lrn7lmt9ejnx5\"}\nThe assertion_type is some arbitrary URI the provider uses to identify the type of credential being used in the assertion. When Songkick receives this, it makes a call to the Facebook Open Graph:\ncurl https://graph.facebook.com/me?oauth_token=the_facebook_access_token\nThis gives us the user\u2019s details and we map those to a Songkick account; we then return our own access token for that account and the iPhone app can then interact with the user\u2019s data. To get the user\u2019s Facebook token it interacts with the Facebook application on the device before communicating with Songkick\u2019s servers.\n. I have extended identity server but also had to enhance the identity model oauth2constants to add the assertion grant type that's all.\n. Should I be using authorization server? \n. Ok. I've overhauled Id server to accommodate this with custom user repository. Tried hooking as server up to a clean instance of is server but it says when I try to login to as server that not correct privileges or something. How should the two hook together in my implementation?\n1 - app presents facebook assertions to auth server?\n2 - auth server validates the user with identity server and the issues the token to app?\n. Is there any disadvantage to what I've already done?\nI've enhanced the oauth endpoint in identity server to integrate with facebook plus added support for my own implementation of user and claims repositories. So identity server is now handling the complete flow.  Any bad practice there?\n. Dominick, from what I gather Authorization can be enhanced to use any identity provider?  Can you suggest how to achieve this?  What I would like to do after reading your plans for Authorization server is to enable it to bolt onto my User Repositories and use my membership and roles provider. Can you tell me where the relevant hooks are and I think I can close this down.  It seems I have customized Identity Server too deeply and if authorization server can feed off my own user database then that's great.  Your help is appreciated as always.\nPS, I don't want to use an identity server of any kind as that is overkill for my needs, I just need to issue and validate tokens on the resource owner flow.  Thanks!\n. ",
    "kkgaurav1983": "I have a website which can be hosted with Forms and Windows Authentication both while Single STS will be used. Is this possible to support both type of Authentication in STS for different Replying Parties?\nOne more query : Can we implement the windows like password control functionalities within STS like \"lock password after 3 unsuccessful attempt\", \"Change Password\" etc?\nI was planning to pass user credentials username, password and Authentication Type(Forms | Windows Authentication) from my application to STS and then collecting the response from STS without showing STS screen.\nAll other functionalities to be implemented within website itself on basis of claims returned from STS. \nPlease suggest if this is achievable?\nRegards,\nKrishan\n. Opened a new for this at below link\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/500\n. In my website, I have some secure pages while other pages are non secure. After integrating STS, I cannot access non-secure pages without login to STS. Is it possible to configure the website for enabling STS for secure pages only?\nRegards, \n. We have below given configuration section in web.config\n\n\n\n\n\n\n\nCan you please give me some detailed instruction on implementing STS security for only few folders in website?\nRegards,\nKrishan\n. ",
    "cluggas": "Ok thanks Dominick. Is there any easy way I can change \"issue/wsfed\" to \"issue/hrd\"? I would need to modify the metadata and resign. Am I going to have to delve into the code?\nWhat would you recommend in this situation?\n. The IdPs will be our customers. I was hoping to just be able to give them a metadata file, but I suppose it's not the end of the world if they have to make a small change after importing it.I'll give that some more though and ask a few of them. Thanks again.\nThis is sort of off topic, but I have been testing the metadata produced by IdServer with ADFS as the IdP, When I try and import it into a Claims Provider Trust it works fine, but when I try it in a Relying Party Trust is won't import. ADFS says there is \"no valid endpoints for a RP Trust\". I presume IdServer can be both a Claims provider and Relying Party within ADFS, depending on which direction the claims are flowing.\nApologies in advance if this is specific to ADFS.\n. Ok I'll see what I can find out.\nCould it be about Bindings, HTTP-POST, HTTP-REDIRECT, etc, or are they specific to the Saml protocol (not WS-Fed). I know that ADFS forces a RP Trust to use POST for its WS-Fed response endpoint, which you would expect given it will send tokens there, but for a CP Trust it is a REDIRECT. Just wondering if that plays a part at all.\n. Ignore that last comment. Just read it again and I'm wrong.\n. If I only ever plan to use the IdServer as a RP-STS, I wonder if a change along these lines would be suitable and safe:\n``` c#\n    public class WSFederationMetadataGenerator\n    {\n        ...\n        private SecurityTokenServiceDescriptor GetTokenServiceDescriptor()\n        {\n            var tokenService = new SecurityTokenServiceDescriptor();\n            tokenService.ServiceDescription = ConfigurationRepository.Global.SiteName;\n            tokenService.Keys.Add(GetSigningKeyDescriptor());\n        // If federation is enabled, use the HRD endpoint, otherwise use the WsFed endpoint\n        if (ConfigurationRepository.WSFederation.EnableFederation)\n        {\n            tokenService.PassiveRequestorEndpoints.Add(new EndpointReference(_endpoints.WSFederationHRD.AbsoluteUri));\n        }\n        else\n        {\n            tokenService.PassiveRequestorEndpoints.Add(new EndpointReference(_endpoints.WSFederation.AbsoluteUri));\n        }\n...\n\n```\n. It is possible that you might want a single instance of IdServer to be both an IdP-STS and RP-STS at the same time, but I'm not sure the metadata can describe that using two different endpoints. Maybe a better solution would be for IdServer to support both on a single endpoint, which gets round the metadata problem.\nAlso, basing this choice on an existing flag EnableFederation could be a bad idea. Maybe a specific flag would be better.\nFYI: original issue here - https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/502\n. > I'd rather prefer an option on the WS-Fed metadata protocol config page where you can set the \"primary\" passive redirect endpoint.\nSure. I guess that is the most flexible.\n. No separate Hrd endpoint is a much better solution in the long run I think, so I'm happy with that.\nUnfortunately I have been unable to pursue using IdServer in a Live situation. It turned out that most of our customers wanted to use Saml 2.0p instead of WS-Fed and so had to go with ADFS for now. I really wanted to use IdServer for the flexibility in using an open source project, but also didn't have the time to devote to implementing this myself,\nThanks for getting back to me.\n. ",
    "wonderxboy": "I actually need to solve exactly the same issue, but I am researching on how to solve it with IdentityModel45\n. Sounds great! Thanks\n. ",
    "BoasE": "Is this currently supported out of the box for V3 (or maybe v4) any samples for this ? Espescially when looking at android devices where everyone has a associated google account it would be nice to use the data from this association instead of a webview. ",
    "prasadks1989": "There is no issue specifically with IdentityServer. But i hope you have a solution for this.\n. Thanks.. Its working.. :)\n. the error is:\n The given key was not present in the dictionary.\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\nException Details: System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\nSource Error:\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\nStack Trace:\n[KeyNotFoundException: The given key was not present in the dictionary.]\n   System.Collections.Generic.Dictionary2.get_Item(TKey key) +14122715\n   HealthUnity.ThinktectureExtentions.HUAuthentication.GetRole(String userName) in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\HealthUnity.ThinktectureExtentions\\HUAuthentication.cs:34\n   Thinktecture.IdentityServer.Repositories.HUClaimsRepository.GetClaims(ClaimsPrincipal principal, RequestDetails requestDetails) in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\src\\Libraries\\Thinktecture.IdentityServer.Core.Repositories\\HUClaimsRepository.cs:19\n   Thinktecture.IdentityServer.TokenService.TokenService.GetOutputClaims(ClaimsPrincipal principal, RequestDetails requestDetails, IClaimsRepository claimsRepository) in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\src\\Libraries\\Thinktecture.IdentityServer.Core\\TokenService\\TokenService.cs:151\n   Thinktecture.IdentityServer.TokenService.TokenService.GetOutputClaimsIdentity(ClaimsPrincipal principal, RequestSecurityToken request, Scope scope) in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\src\\Libraries\\Thinktecture.IdentityServer.Core\\TokenService\\TokenService.cs:134\n   System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal principal, RequestSecurityToken request) +558\n   System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(SignInRequestMessage requestMessage, ClaimsPrincipal principal, SecurityTokenService sts, WSFederationSerializer federationSerializer) +362\n   Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationController.ProcessWSFederationSignIn(SignInRequestMessage message, ClaimsPrincipal principal) in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\WSFederationController.cs:67\n   Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationController.Issue() in c:\\Work\\ETLFramework\\R1.0.0\\HealthUnity.Thinktecture.IdentityServer\\src\\Libraries\\Thinktecture.IdentityServer.Protocols\\WSFederation\\WSFederationController.cs:50\n   lambda_method(Closure , ControllerBase , Object[] ) +79\n   System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters) +261\n   System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters) +39\n   System.Web.Mvc.Async.<>c__DisplayClass42.b__41() +34\n   System.Web.Mvc.Async.<>c__DisplayClass39.b__33() +124\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +837307\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +837307\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +837307\n   System.Web.Mvc.Async.<>c__DisplayClass4f.b__49() +837307\n   System.Web.Mvc.Async.<>c__DisplayClass37.b__36(IAsyncResult asyncResult) +15\n   System.Web.Mvc.Async.<>c__DisplayClass2a.b__20() +33\n   System.Web.Mvc.Async.<>c__DisplayClass25.b__22(IAsyncResult asyncResult) +837892\n   System.Web.Mvc.<>c__DisplayClass1d.b__18(IAsyncResult asyncResult) +28\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +65\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.Controller.EndExecute(IAsyncResult asyncResult) +51\n   System.Web.Mvc.<>c__DisplayClass8.b__3(IAsyncResult asyncResult) +42\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +15\n   System.Web.Mvc.MvcHandler.EndProcessRequest(IAsyncResult asyncResult) +51\n   System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +606\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +288\nI think during session logout, i am not peforming cleaning up process on identity server. If this is the case, let me know how to do that...\nthanks & regards,\nprasad\n. Is my code is accessible to everyone.? if yes, i want to delete my previous comment. if no, let me know how to cleanup identity server information in my application before redirecting to identity server login page after session timeout without calling identity server signout method.\n. oh ok. will debug that..\n. ",
    "lighthouse37": "Is support for the SAML protocol anywhere on the roadmap? Integrating with apps inside AWS would be a great value.\nCheers!\nMike\n. Thanks Dominick! One last clarification, ADFS does support SAML though, correct? Are you saying however that it probably isn't clean and is more complex, etc? I know configuring it for SAML is definitely more difficult...\n. OK, understood - thanks for the clarification!\n. One more related question. What I love about IdSrv is all the extensibility points and simple configuration while of course, natively supporting the same claims-based approach via WIF as the RP app. However, one if not two current projects, there is a need to be able to support the SAML protocol.\nRegardless of license or commercial, are there any providers you could recommend that could be stood up in the middle to bridge the two worlds? For example, I hear good things about PingFederate which appear at a very quick blush to be one such bridge between both protocols.\nCan you confirm that and/or provide any other recommendations to meet my requirements?\nThanks so much!\nMike\n. LOL, I am an idiot. As one Ping sales rep person stated elegantly, \"if you have to ask how much Ping is, it is too expensive\" - and dang were they right! Tens of thousands likely ... who knew.\nSo ADFS might be a way to go. But can I manage the AD users externally through an interface that I have built, like I can with IdSrv (since it has externalized and can share a user store)? Right now I have a single interface that manages the identity store as well as claims for different tenants, with one tenant being the IdP-STS (IdSrv) and another being the different RPs but served up based on realm by an RP-STS (another instance of IdSrv). \nIn other words, would ADFS support in any way, my centralized mgmt of this, able to push users into AD or pull users from another store (I think I know this answer but I haven't worked with ADFS directly yet so don't want to assume I know all the capabilities).\nThank you again for any insights; they are immeasurable to a project or two that I might be in trouble with due to SAML protocol rqmts.\n. Sorry, wasn't using specific terms. Yup, I understand AD is where they are managed. It did however just hit me, that over 10 years ago, I wrote a user provisioning app that created a new account in several systems, AD being one of them. I used ADSI for AD, Novell and another LDAP store. So I guess I know it is possible to externally add users to the store, but would prefer to not have to interact at that level.\nHowever, the scenario you mention last seems exactly what I want. If not too much trouble, can you point me further down that path? If I understand it right, it essentially would be trusting IdSrv as an external identity provider to ADFS and configured as such in both places (I have set up the inverse of this before). But additionally, would have another relationship where ADFS is the identity provider for another RP or RP-STS that ADFS would in turn, rely on the identities provided by IdSrv - kinda like HRD the other direction.\nI am sure that is an over simplification so if so, a quick pointer to more info would be awesome.\nThanks!\nMike\n. Sounds great; I will move forward accordingly. Sorry for derailing the OP topic if I was. I felt this was keeping in line with the original topic since same constraint, but either way, I think I have enough to go on now.\nThanks again for all the insight!\n. ",
    "krippz": "Ok, I 'll start working on that :) \nThe thing is that I have not much experiance with EF or other ORM:s for that matter.\nI would like to confim the files I need to change:\nThinktecture.IdentityServer.Repositories.Sql.Configuration.GlobalConfiguration\nThinktecture.IdentityServer.Models.Configuration.GlobalConfiguration\nAnd how do I update the db schema? remove the datebase and recreate or is there another way of doing it?\nThank you in advance!\n. ",
    "DiegoGermano": "Hi How Can I register it?\n. ",
    "camping89": "Thanks, can you explain more about what is realm name, and what is scope?\n. Thanks, I got it.\n. I meant that I need a way to manually check if that token is expired or not? By sending the token from WCF method to IdSrv as an parameters or something like that.\n. For e.g. WCF has a pre-decision/condition that if the token isn't expired and then allow to call the method.\nThe pre-decision/condition is may be related to IdSrv, may be not. I just want to take control of that.\n. Okay, I got it. Thanks :) \n. Great, that sounds good, really good. We can have more discussion. Currently, I move the OAuth2 part to Authorization Server here: https://github.com/thinktecture/Thinktecture.AuthorizationServer.\nThe Identity Server take part of authentication and the Authorization Server take part of authorization, and I'm working with configuration part for Authorization Server.\nIf you need more information, please mention here.\nP.S. I don't know if this is the right place to discuss :)\n. Thanks for the response, I understand that username should be matched the admin username I configured in InitialConfiguration.\nI tried with admin but no luck. Then, I reseted the AuthorizationServerContext database.  and when I logged in with another user. I get this error.\n\nI search and got this but it didn't help: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/218\nPlease walk me through this.\nThanks, you are going to save my day.\n. It is worked with configuration generated from id & access wizard (vs2012). Thanks.\n. One more thing, sometime, I got this error and when I refreshed or went to /Admin/Global, it worked again.\nI wonder if there is anything wrong. Do you have any idea?\n\n. Closed. Thank you a lot Dominick.\n. Can you please move this question to Authorization Server Issue Tracker. I think I posted in wrong place.\nBy the way, I will enable tracing to get more details and follow up with you here. But while I do that, can you guess that what I missed? I leave all setting to default.\n. The tracing did not show any error. I think the problem is not about server error. Something must be missed, but I followed exactly the video \nVideo: Initial Setup https://vimeo.com/69300053\nVideo: Sample Walkthrough https://vimeo.com/69313963\nDo you have any suggestion?\n. Hi,\nLast time, I disabled the Anonymous Authentication. When I enableb again, it seems that I passed through the 401 error. And I got this:\nThanks,\n\nThis is the stackstrace:\n[JsonReaderException: Unexpected character encountered while parsing value: <. Path '', line 0, position 0.]\n   Newtonsoft.Json.JsonTextReader.ParseValue() +1325\n   Newtonsoft.Json.JsonTextReader.ReadInternal() +84\n   Newtonsoft.Json.JsonTextReader.Read() +41\n   Newtonsoft.Json.Linq.JObject.Load(JsonReader reader) +91\n   Newtonsoft.Json.Linq.JObject.Parse(String json) +114\n   Thinktecture.IdentityModel.Client.TokenResponse..ctor(String raw) in c:\\etc\\Dropbox\\source\\Thinktecture\\Thinktecture.IdentityModel\\source\\Thinktecture.IdentityModel.Client\\TokenResponse.cs:18\n   Thinktecture.IdentityModel.Client.d__1d.MoveNext() in c:\\etc\\Dropbox\\source\\Thinktecture\\Thinktecture.IdentityModel\\source\\Thinktecture.IdentityModel.Client\\OAuth2Client.cs:186\n   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52\n   System.Runtime.CompilerServices.TaskAwaiter1.GetResult() +24\n   Thinktecture.IdentityModel.Client.<RequestAuthorizationCodeAsync>d__a.MoveNext() in c:\\etc\\Dropbox\\source\\Thinktecture\\Thinktecture.IdentityModel\\source\\Thinktecture.IdentityModel.Client\\OAuth2Client.cs:135\n   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52\n   System.Runtime.CompilerServices.TaskAwaiter1.GetResult() +24\n   OAuth2CodeFlow.Controllers.d__3.MoveNext() in c:\\Thinktecture.AuthorizationServer-master\\samples\\Flows\\Clients\\OAuth2 CodeFlow\\Controllers\\CallbackController.cs:36\n   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52\n   System.Runtime.CompilerServices.TaskAwaiter.GetResult() +21\n   lambda_method(Closure , Task ) +64\n   System.Threading.Tasks.TaskHelpersExtensions.ThrowIfFaulted(Task task) +31\n   System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult) +67\n   System.Web.Mvc.Async.<>c__DisplayClass3f.b__3e(IAsyncResult asyncResult) +16\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +57\n   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult) +48\n   System.Web.Mvc.Async.<>c__DisplayClass39.<BeginInvokeActionMethodWithFilters>b__33() +57\n   System.Web.Mvc.Async.<>c__DisplayClass4f.<InvokeActionMethodFilterAsynchronously>b__49() +223\n   System.Web.Mvc.Async.<>c__DisplayClass37.<BeginInvokeActionMethodWithFilters>b__36(IAsyncResult asyncResult) +10\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +57\n   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult) +48\n   System.Web.Mvc.Async.<>c__DisplayClass2a.b__20() +24\n   System.Web.Mvc.Async.<>c__DisplayClass25.b__22(IAsyncResult asyncResult) +102\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +57\n   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(IAsyncResult asyncResult) +43\n   System.Web.Mvc.<>c__DisplayClass1d.<BeginExecuteCore>b__18(IAsyncResult asyncResult) +14\n   System.Web.Mvc.Async.<>c__DisplayClass4.<MakeVoidDelegate>b__3(IAsyncResult ar) +23\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +62\n   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +57\n   System.Web.Mvc.Async.<>c__DisplayClass4.b__3(IAsyncResult ar) +23\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +62\n   System.Web.Mvc.Controller.EndExecute(IAsyncResult asyncResult) +47\n   System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute(IAsyncResult asyncResult) +10\n   System.Web.Mvc.<>c__DisplayClass8.<BeginProcessRequest>b__3(IAsyncResult asyncResult) +25\n   System.Web.Mvc.Async.<>c__DisplayClass4.<MakeVoidDelegate>b__3(IAsyncResult ar) +23\n   System.Web.Mvc.Async.WrappedAsyncResult1.End() +62\n   System.Web.Mvc.MvcHandler.EndProcessRequest(IAsyncResult asyncResult) +47\n   System.Web.Mvc.MvcHandler.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult result) +9\n   System.Web.CallHandlerExecutionStep.OnAsyncHandlerCompletion(IAsyncResult ar) +129\n. After deleting the authorization element below, I got error 404 Bad Request.\n<authorization>\n  <deny users=\"?\" />\n</authorization>\nI will search more, and follow up here.\nThanks\n. ",
    "pelerano": "It helped me, thanks\n. Folder permissions?\n. ",
    "jmuker": "Hi camping89, just wondering if you managed to implement this in your API ? I am in the same situation and would like to know how you tackled this. \nCheers\n. ",
    "Innggi": "Hi, I work with Gary. We have implemented Claims Based Identity management using AD/ADFS with our Web application through WS-FED. ADFS (STS) issues a SAML token to represent the users claims. The sub domain component of the URL is used to identify the users home realm. It is used within ADFS as the replying party trust and forms the basis of the tenant identification. This approach works, however we would like the STS to issue a JWT token as opposed to a SAML token for efficiency reasons to pass to one of the replying parties. To achieve this we initially  redirect to ThinkTecture (STS) which in turn needs to communicate with ADFS (STS) to get the SAML token and convert it into a JWT token. If we cannot pass the realm parameter across the STS components then what approach should we be taking here?\n. My initial preference would be to avoid having to write any code if possible. Is ThinkTecture able to completely replace ADFS and generate both SAML and JWT tokens through WS-Fed.\nBy idsrv federation code do you mean the ThinkTecture.IdentityServer v2 code?\n. Thank you will look into ADFS3.\nWe could also use ThinkTecture to get JWT tokens in the delegation scenario 1 described here, http://brockallen.com/2013/04/14/getting-json-web-tokens-jwts-from-adfs-via-thinktecture-identityservers-adfs-integration/.\nWe could maintain a map and then redirect browser to the appropriate home realm using the Identity Provider setup within ThinkTecture. This would allow us to federate to an external identity provider or use ThinkTecture's integration with ADFS as needed.\n. ",
    "alippai": "I think they are asking for SAML 2.0 protocol but not for tokens, which you don't support, right?\nSee this screenshot: http://collabshot.com/show/ucDcn1\nIf I set up the WS-Fed endpoint I get urls with params like SAMLRequest from Zendesk which (by design) Thinktecture IdServ can't handle. Right?\n. ",
    "vidarkongsli": "Thanks a lot, Lars\nChecking \"Enable Federation\" in the WS-Federation section did the trick!\n. The problem was that the Redirect URL back from the Identity Provider to the federation sever was not on HTTPS.\n. ",
    "awood20": "Hi Guys,\nJust getting back to this now. I have a couple of queries for you on customising IdentityServer. Referencing the outlined plan above...\n1). With regards to building the custom JWT. Is the only way to customise the structure of the token to implement IClaimsRepository to determine which claims are returned within the token?\n2). Where would I specify the validity (timeout) period of the token being created?\n3). Is there no way of keeping alive a token for instance you make a call to the web api with an issued token (token is still within it's expiry timeframe) that call would then update the token expiry timeframe so you have a sliding window of x mins/hours that is refreshed with each use of the token. The token would only become invalid if the expiry timeframe has passed without a call being made in that timeframe?\n. Hi Brook, \nThanks for the reply. With regards to point 3. All I am attempting to do is keep a token from timing out whilst it is still being used by the client application. The timeout for a token would refresh itself when a call to the Web api is made. So if we have an issued token that times out after 30 mins and within that time frame calls are made. When a call is made and the time out window is shifted forward to 30 mins after the point of the call ie it is kept alive for another 30 mins and is continually kept alive as long as calls are being made. Is this scenario possible? \n. Sorry for misspelling your name Brock :) \n. OAuth2 within identity server issuing JWT. \n. OK cool, thanks for the info. \n. Sorry for the confusion... \nI have a client created in identity server (resource owner flow with refresh tokens enabled). I also have users setup. My Web api knows this identity server client id and secret. When another application initially calls into my Web api to get a token e.g. Logging on, they specify a identity server registered username and password. My Web api then uses the client id and secret (it already knows) and the supplied username and password to request a token via the oauth2client class. This gets a JWT which I pass back to the application calling into the Web api. Every subsequent call from that application to my Web api passes along the token for authentication.\nNow, the token has a finite lifetime and will expire. What I want to happen is that when the application calling my Web api makes a request and passes a valid token in then the Web api sends back whatever data was requested but also sends back a new token that has been got using a refresh token so that I keep the application's token alive for as long as he makes request with a valid token. Maybe I am looking at this wrongly? \n. OK, so when my Web api requests a token for a login request from another application then it's going to have to store that token and refresh token so that on next request by that other application it can look up the refresh token using the valid token that has been passed on the request. I think I know how to move forward now. Thanks\n. No, I removed the more sensitive parts of the code before posting...\n- The audience would have been \"urn:webapisecurity\"\n- The issuer would have been the site id from IdSvr admin configuration\nThe global signing cert? Is that different from the cert you setup when installing IdSvr (I followed the video you put up for getting started). If that is the global signing cert then I was using that in the first part above. I confirmed that the thumbprints were the same.\nI don't have relying parties in use so can't use those.\n. Yes that's correct. My OAuth2 request in my Web API was using the correct scope...\nvar client = new OAuth2Client(new Uri(ConfigurationManager.AppSettings[\"tokenEndPointUrl\"]), \"client id from IdSvr\", \"client secret\");\nAccessTokenResponse response = client.RequestAccessTokenUserName(username, password, \"urn:webapisecurity\");\nreturn response.AccessToken;\nThis code works fine and I get a JWT without any issues from IdSvr.\n. The penny has dropped. You must have heard that on the other side of the world :) lol\n. Houston we have lift off! Thank Dominick :) \nI'll close this out. For other looking at this problem you must use the cert or symmetric key specified in your RP which is specified by your scope when calling into Identity Server.\n. ",
    "dirose4": "I did, but I don't see any logs.  Where should they be writing to?\n. ",
    "bharder": "I recently had the same issue, and it was caused by an internal exception when validating the token (which was seen after enabling tracing).  The solution was to add the signing certificate to the Trusted People store of the Local Computer in mmc's Certificates snap-in.\n\nException while validating the token: System.IdentityModel.Tokens.SecurityTokenValidationException: The X.509 certificate CN=localhost is not in the trusted people store. The X.509 certificate CN=localhost chain building failed. The certificate that was used has a trust chain that cannot be verified. Replace the certificate or change the certificateValidationMode. A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.. \n",
    "UkraineTrain": "Yeah, I had noticed that there was a schema change. That's why I closed the issue right away. But, thanks a lot for your quick reaction.\n. Upgrading to EF6 didn't resolve the issue for me. So, per rklachko's suggestion, I upgraded \"ASP.Net Universal Providers\" to V2.0.0 and now I'm getting a different error:\nParser Error Message: A section using 'configSource' may contain no other attributes or elements.\nSource Error: \nLine 15:   \nLine 16:   \nLine 17:     \nLine 18:   \nLine 19:   \nSource File: C:\\IdentityServer\\Thinktecture.IdentityServer.v2-master\\src\\OnPremise\\WebSite\\web.config    Line: 17 \nOnce I comment out line 17 in web.config, I get \nParser Error Message: A section using 'configSource' may contain no other attributes or elements.\nSource Error: \nLine 57:     \nLine 58:     \nLine 59:     \nLine 60:       \nLine 61:         \nSource File: C:\\IdentityServer\\Thinktecture.IdentityServer.v2-master\\src\\OnPremise\\WebSite\\web.config    Line: 59 \nI noticed that upgrading \"ASP.Net Universal Providers\" to V2.0.0 had introduced those failing lines in my web.config.\nHow can I fix it?\n. Oops, for some reason the web.config lines didn't render in the above post. So, let me try again:\n\nconnectionStrings configSource=\"configuration\\connectionStrings.config\">\n17 \n\n\nand the other snippet is:\n\n\n\n\n59 <add name=\"DefaultProfileProvider\" type=\"System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf\n. Dammit, it's not letting me post contents of my web.config. So, let me try posting line 17 one more time:\n<add name=\"DefaultConnection\" providerName=\"System.Data.SqlClient\" connectionString=\"Data Source=.\\SQLEXPRESS;Initial Catalog=aspnet-WebSite-20140113194516;Integrated Security=SSPI\n. It looks like those extra lines were added by upgrading \"ASP.Net Universal Providers\" to V2.0.0. I didn't put them there explicitly.\n. Ok, I removed the changes to my web.config, but the original issue still remains: I'm getting \"Type not found for interface: Thinktecture.IdentityServer.Repositories.IUserRepository\" exception.\nIt happens in RepositoryExportProviders.cs under Thinktecture.IdentityServer.Core\\Repositories because on line 49:\nvar t = Type.GetType(implementingType);\nType.GetType returns a null even though \"implementingType\" varible at that point is \"MembershipRebootUserRepository.IdentityRepository, MembershipRebootUserRepository\", which is what it should be.\nPlease, help, because I'm really out of ideas here.\n. I had updated it to EF6 already.\n. It was extremely dumb of me, but I did forget to include MembershipRebootUserRepository. So, thanks a lot, rklachko. This is especially dumb since I already got MembershipRebootUserRepository to work with IdentityServer before by including a reference  from the IDP website to MembershipRebootUserRepository. But, with all of the changes taking place I forgot to perform this basic step.\nSo, anyways, I would like to thank you, rklachko, and brockallen for all your guys' help.\n. Yeah, I understand I have to do all of that customization, but I need a little bit more specific guidance on how to\na) stop redirecting to IdentityServer when my main app starts. Instead, I want to go to IdentityServer when I click Login link, for example.\nb) i need to know how to redirect to IdentityServer clicking other links such as Register or Change Name: can it be handled just inside the web.config somehow by specifying the urls which should trigger redirection to IdentityServer or do I have to build urls for IdentityServer programmatically inside the main app's controllers?\n. Thanks a lot for your response. However, when I try to redirect from the Account controller to a Register Controller using the following code inside SignIn action:\nif(!String.IsNullOrEmpty(returnUrl))\n            {\n                if (returnUrl.Contains(\"Register\"))\n                {\n                    return RedirectToAction(\"Create\", \"Register\");\n                }\n            }\ninstead of redirecting me to https://mysite:81/idsrv/issue/Register/Create, it redirects me to\nhttps://mysite:81/idsrv/issue/wstrust?action=Create&controller=Register\nand gives me the following error:\n\"You have created a service.\nTo test this service, you will need to create a client and use it to call the service. You can do this using the svcutil.exe tool from the command line with the following syntax:\nsvcutil.exe https://mysite:81/idsrv/issue/wstrust?wsdl\nYou can also access the service description as a single file:\nhttps://mysite:81/idsrv/issue/wstrust?singleWsdl\"\nWhen I just try to navigate to https://mysite:81/idsrv/issue/Register/Create by entering it into the address bar, I get:\n\"HTTP Error 404.0 - Not Found\nThe resource you are looking for has been removed, had its name changed, or is temporarily unavailable.\"\nPhysical Path      C:\\IdentityServer\\Thinktecture.IdentityServer.v2-master\\src\\OnPremise\\WebSite\\Register\\Create\neven though the actual physical path should be \nPhysical Path      C:\\IdentityServer\\Thinktecture.IdentityServer.v2-master\\src\\OnPremise\\WebSite\\Controller\\Register\\Create\nSo, basically, it's skipping the Controller folder when looking for physical path. However, when navigating to the SignIn page, it finds the Account controller located in the same folder just fine, as you already know. Any ideas how to fix these issues?\n. Fixed it by adding the following in RouteConfig.cs:\nroutes.MapRoute(\n                \"Register\",\n                \"Register/{action}\",\n                new { controller = \"Register\", action = \"Index\", id = UrlParameter.Optional }\n            );\n. The part creating a user in the database(registration) is working fine. The only part not working is receiving Account Created emails. I had this working fine in the standalone MembershipReboot application by adding the correct mailsettings in the web.config. Adding it in the IdentityServer app, plus the rest of the stuff mentioned above didn't make it work.\nAny ideas what am I missing? Which code and settings outside of MembershipRebootConfiguration.cs, NinjectWebCommon.cs and web.config is responsible for emails?\n. As I mentioned, I had added the necessary mailsettings in web.config. Also, the EmailAccountEventsHandler is added to MembershipRebootConfiguration inside MembershipRebootConfiguration.cs, which, as I mentioned above, I had already added to the App_Start folder inside the Website project of the IdentityServer, just as I added the NinjectWebCommon.cs that initializes MembershipRebootConfiguration.\nBut, the email notification is still not working. Any ideas?\n. ",
    "khemchandsharma": "Thanks, Can we avoid Login page to take user name password in case of windows authentication with Thinktecture STS?\n. Thanks Brokallen. i just thinking of single security solution for Form authentication and windows authentication (without login page) with STS. but it seems difficult with thinktecture solution \n. Thanks you very much Mr Mohammad Younes. You have nicely describe combine approach but my requirement is bit different we found solution\nFrom: Mohammad Younes [mailto:notifications@github.com]\nSent: Sunday, January 12, 2014 4:59 AM\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Khemchand Sharma\nSubject: Re: [Thinktecture.IdentityServer.v2] Windows authentication with Thinktecture solution (#538)\n@khemchandsharmahttps://github.com/khemchandsharma I made a solution that makes it look like an external provider, you can view it here: https://github.com/MohammadYounes/MVC5-MixedAuth\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/538#issuecomment-32110493.\n. ",
    "MohammadYounes": "@khemchandsharma I made a solution that makes it look like an external provider, you can view it here: https://github.com/MohammadYounes/MVC5-MixedAuth\n.  Me or the OP?\n. Well, I thought the code was self explanatory! Once I get a chance I'll update the repo with more details.\n. @adelkontar Yes, see this comparison\nto get started, If you need more help plz open a new issue at the repo.\nThanks.\nOn Fri, Oct 10, 2014 at 12:36 PM, adelkontar notifications@github.com\nwrote:\n\nThank you Mohammad, can this work with ASP.Net web forms? and how?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/538#issuecomment-58633434\n.\n. \n",
    "ryzam": "My mistake, change audienceUri value in identityModel.config then is now working  \n\n\n\n. ",
    "odd32": "Having the same problem, even though I added the audienceUri to the config section: \n<identityConfiguration>\n      <audienceUris>\n        <add value=\"urn:workdammit\" />\n      </audienceUris>\n...\n</identityConfiguration>\n. ",
    "unipeg": "Thanks for your reply!\nWould this mean that IdSrv is obsolete in the case where I NetIQ as IdP?\n. Ok. I'll have a closer look at AuthorizationServer. I will need to make some custom claim additions, but I can see that this is also possible with AuthorizationServer as it was with IClaimsRepository on IdSrv.\nIs AuthorizationServer using JWT as default token type?\n. Case was closed, but I do have an additional question:\nAssuming that the NetIQ is configured to support only SAML 2.0 (and not WS-federation), would it then be possible for Authorization Server to use the NetIQ instance as IdP?\n. .NET 4.5 should have support for SAML 2.0 (http://stackoverflow.com/questions/15530184/working-with-saml-2-0-in-c-sharp-net-4-5), or am I wrong?\n. Ok. Next question - would .NET/AuthZSrv have support for ealier versions of the SAML protocol - NetIQ does have support for both SAML 1.0, 1.1 and 2.0.\n. I know of Brock's very nice CORS work, but the problem is not as much CORS as it is the need to disable authentication for the issue/simple OPTIONS request specifically. \nWith an OAuth2 approach, my jquery clients would have a problem with the implicit flow, I guess. Does the IdSrv provide an endpoint where I can supply username/password and have the access token as response directly? It sounds a bit like the case of the \"resource owner password credentials grant\".\n. Thanks for your reply. I'll give it another go then :).\n. As IdSrv is MVC based, I've followed the MVC sample of Brock's Cors documentation adding the following to my Global.asax.cs:\nIn Application_Start():\nRegisterCors(MvcCorsConfiguration.Configuration);\nAnd I've added a method:\nprivate void RegisterCors(MvcCorsConfiguration corsConfig)\n    {\n        Tracing.Information(\"Registering Cors\");\n        corsConfig\n            .ForAllResources()\n            .ForOrigins(\"http://localhost\")\n            .AllowAll();\n    }\nI've also removed my Options implementation of the SimpleHttpController in IdSrv hoping that Cors would handle that request.\nNext, I've hit my issue/simple endpoint with an OPTIONS request and I get an HTTP 405 (Method not allowed) - so apparently the Cors library is not handling the OPTIONS request.\nAm I doing anything wrong?\n. Ok. Thanks. I disabled WebDAV, followed the WebAPI Cors module configuration, and managed to get the Cors module to supply Cors headers to at least OPTIONS requests (they're absent for GET requests).\nBut still, if I don't supply the SimpleHttpController with a Options implementation, I'll get a HTTP 405, and if I do supply it, a HTTP 401 is returned due to an expected basic auth header. If the header is supplied, the request goes through, but browsers don't supply auth headers as the Cors spec tells you not to do so.\nWhat can I be missing?\n. Ok. I'll try that. But is it possible with the Cors module to specify whether or not to continue further pipeline processing? I would like to hijack the pipeline...\n. Nevertheless, this is not the case when I use it with IdSrv. It does append the Cors headers, but IdSrv's SimpleController gets the request which failes due to missing authorization.\n. That would be great. I'm looking forward to your experiment :)\n@leastprivilege: Meanwhile, I wonder if the IdSrv have an (OAuth2-)endpoint where I can supply username/password and have the access token as response directly? Without having to supply HTTP Authorization, that is :).\n. I look at the CORS samples included in the IdentityModel.45 project, configured CORS for WebAPI, and then everything work like a charm. Also, my problem was that I tested with a rest client (Postman) and I didn't manage to simulate the proper ajax call. As soon as I used a real browser I saw that the CORS library was in action and working.\n. Thanks.\nSo, if it is crutial to my consuming applications both to have a fairly long lasting persistent SSO cookie as well as to ensure that the user is not banned in the meantime, I would have to add that functionality myself, right? For instance by adding a simple IsUserReallyValid-webservice? :)\n. Yup. Thanks for your replies.\n. Super. Thanks.\n. Unfortunately, no. This is still an issue.\n. I'll look into this. But I take it my flow is okay?\n. It works now! My problem was that I needed to url encode the whole signout-endpoint, from the first wreply.\nAlso, I needed to check \"remember me\", so that the persistent cookie was delivered to the signout endpoint also.\nAll is well now.\n. ",
    "eldiosyeldiablo": "Also, I turned on tracing in the tracing.config file by removing the comment out tag on all of the listeners but there is nothing in the logging location. :(\n. Very good point of course. I found the \"Load User Profile\" for the app pool and retested. \n[[Updated]]\nI did initially get an error in EventViewer for this but a app pool recycle removed the error.\nNow I have the token endpoint returning 401 unauthorized. The user has been given the IdentityServerUsers role.\nIn OidcClient.cs the 401 is happening at:\nvar response = await client.PostAsync(\"\", new FormUrlEncodedContent(parameter));\nresponse.EnsureSuccessStatusCode();\n. Closing for a dedicated \"ticket\" for 401 on token request\n. Also, just incase this was an issue with a difference between running on my machine with a self signed cert and on the server with an issued cert from Comodo I created I self signed cert on the server and retested.\nEven with the self signed cert for the KeyConfiguration-> Signing Certificate being set to my recently created self signed cert I get the same 401 unauthorized response when trying to get the token.\n. Yes tracing is enabled. It never hits \nOidcTokenController.cs\nprivate HttpResponseMessage ProcessAuthorizationCodeRequest(ValidatedRequest validatedRequest)\nThe last tracing message written out is Processing authorization code request\nNote: This is the same trace message as OidcTokenController's ProcessAuthorizationCodeRequest but I did change that message to be:\nTracing.Information(\"Processing token authorization code request\");\nAnd it never gets there\n. We have been performing remote debugging sessions today and when the client makes the call to exchange the code for the token it is never hitting System.Web.Mvc.MvcHandler.BeginProcessRequest\n. Yes. I even downloaded the latest from GitHub for Thinktecture.IdentityModel.45 and directly added that as a reference to the various projects instead of the nuget package.\n. Problem has been identified.\nUpon creation of the Identity Server in IIS you have to make sure that Basic Auth is turned off. In IIS 7.5 the web.config needs this:\n<system.webServer>\n...\n       <security>\n            <authentication>\n                <basicAuthentication enabled=\"false\" />\n            </authentication>\n        </security>\n</system.webServer>\n. Issue resolved. I had to work backwards by removing changes that we had done but by bit.\nThe root problem was that I had added a WebAPI controller in the IdSvr app. The registering of that caused the userinfo request/post from the oidc client to get a 401.\n. It is happening on the client application. Is that in a config setting?\nI don't think we have our client app configured with the identity config so I will add that with the settings per WilliamDoman and report back.\n. Thank you @WilliamDoman. The securityTokenHandlers was what needed to be set and we needed to use the MachineKeySessionSecurityTokenHandler like you suggested.\n. Essentially we have a oidc client web site that calls another web api application. They exist under different subdomains.\nUnder IdSvr's identityServices.config we have added to the cookieHander the domain=\".mydomain.com\"\nAre there any settings that need to be done for the client application(s) for when it writes out the session token to the cookie?\nIn the OpenIdConnectAuthenticationModule:\nFederatedAuthentication.SessionAuthenticationModule.WriteSessionTokenToCookie(sessionToken);\n. Sorry for the delay.\nThe https://github.com/thinktecture/Thinktecture.IdentityServer.v2/blob/master/samples/OIDC/Thinktecture.IdentityModel.Oidc/OidcClientConfigurationSection.cs?source=cc file was generated using tool called  CsdFileGenerator (http://csd.codeplex.com/).\nIt would be nice to have those files that it uses too in the repo.\n. Yes please share!\n. With a certificate we would have to install the cert on every machine but that will be too maintenance heavy. I believe it would be possible for us to serialize out a certificate to a local file and deploy it with the applications but the code to handle that will probably not be \"nice\".\n[Edit]\nI verified that the OIDC flow will not prompt the user to login again by testing with two web applications with different subdomains. Ex: local.mydomain.com and mylocal.mydomain.com\nMy next test will be to have local.mydomain.com javascript call a web api endpoint on mylocal.mydomain.com where the endpoint has [Authorize] attribute.\n. Thank you. I will implement as we deem appropriate.\n. Sure no problem. I just didn't want to give too much until needed.\nException Details\nType:   exception\nException Class:    System.IdentityModel.Tokens.SecurityTokenValidationException\nMessage:    The X.509 certificate CN=[[Deleted]].\nAgent:  LT-WEB-MCMY[autodeploy.mc.lendingtree.com]@ip-ac102617:2572\nAPI:    Exception\nThread Name:     <31>\nException StackTrace\nMethod  Class   Line    File Name\nTryValidate System.IdentityModel.Selectors.X509CertificateValidator+PeerTrustValidator  0\nValidate    System.IdentityModel.Selectors.X509CertificateValidator+PeerOrChainTrustValidator   0\nValidate    System.IdentityModel.X509CertificateValidatorEx 0\nValidateToken   System.IdentityModel.Tokens.JwtSecurityTokenHandler 0\nValidateIdentityToken   TreeAuth.Client.UI.Oidc.OidcClient  0\nMoveNext    TreeAuth.Client.UI.Oidc.OpenIdConnectAuthenticationModule+d__32   0\nStart   System.Runtime.CompilerServices.AsyncMethodBuilderCore  0\nAuthenticateWork    TreeAuth.Client.UI.Oidc.OpenIdConnectAuthenticationModule   0\nMoveNext    TreeAuth.Client.UI.Oidc.OpenIdConnectAuthenticationModule+d__1f   0\nStart   System.Runtime.CompilerServices.AsyncMethodBuilderCore  0\nAutoAuthIfExistingAuthed    TreeAuth.Client.UI.Oidc.OpenIdConnectAuthenticationModule   0\nOnEndRequest    TreeAuth.Client.UI.Oidc.OpenIdConnectAuthenticationModule   0\nSystem.Web.HttpApplication.IExecutionStep.Execute   System.Web.HttpApplication+SyncEventExecutionStep   0\nExecuteStep System.Web.HttpApplication  0\nResumeSteps System.Web.HttpApplication+PipelineStepManager  0\nBeginProcessRequestNotification System.Web.HttpApplication  0\nProcessRequestNotificationPrivate   System.Web.HttpRuntime  0\nProcessRequestNotificationHelper    System.Web.Hosting.PipelineRuntime  0\nProcessRequestNotification  System.Web.Hosting.PipelineRuntime  0\nMgdIndicateCompletion   System.Web.Hosting.UnsafeIISMethods 0\nMgdIndicateCompletion   System.Web.Hosting.UnsafeIISMethods 0\nProcessRequestNotificationHelper    System.Web.Hosting.PipelineRuntime  0\nProcessRequestNotification  System.Web.Hosting.PipelineRuntime  0 \n. Ok I'll do some searching on turning on cypto API tracing. I have never done that.\nTo test the cert I used https://www.digicert.com/help/ to double check the certs coming back from our servers. They seem fine plus this error does not always occur.\n. ",
    "rbrowning99": "Hi Brock,\nSorry for posting in wrong place - shall I repost in correct section? Thanks for looking onto this.\nI think there might be something else going on as even when Authenticated I'm still getting the issue.\nThanks\nRay\n. ",
    "anilkumarj": "Thank You for your prompt response. Yes, I have configured the ADFS as a relying party in Thinktecture Idsrv.\nHere the details:\nRealm/Scope Name : https://adfssrv.mydomain.com/adfs/services/trust \nRedirect URL : https://adfssrv.mydomain.coml/adfs/ls/\nAny configurations are missing?\n. Awesome!! Its working after removing the s in https in Realm.\nDo I need to remove s in htts in redirect url?\nThank You very much for your kind support.\n. ",
    "brickwyckoff": "OK, that's got me closer, thanks. But since this is all a bit unclear to me I have to ask - that will authenticate the user based on the token passed? Or (as the names imply) is that just for authorization? And how much of this do I need to add into my project? Is the custom ClaimsTransformer essential (it doesn't seem like it). \nI've hooked this in, I can set a breakpoint and see that your extension method is being invoked, but still no joy. I always get a 401. I've carefully copied the issuer, audience, and symmetric key from IDSrv. My tokens are coming in as part of the query string (I don't yet understand how to get them into the auth header for the request), and I've found and used your 'QueryStringOAuthBearerProvider' class to extract the token, that's happening just fine. \nI perpetually receive \"{\"Message\":\"Authorization has been denied for this request.\"}\" Because so much of the code is middleware these days, I at a loss as to where I can set a breakpoint to see where it's falling down. This is being generated somewhere, but I don't see where. Is there an event I can subscribe to another way to peek into why my token is being rejected?\nMany, many thanks. I really appreciate all your work and support.\n. Let me back up a step: do I need wsFederation to do this? If it's not 100% required for this flow (browser already has its token and can pass it as part of its first API service GET request) I'd rather eliminate that variable and pare it all the way down to the essentials. Currently I have removed that node from the web.config for WIF.\nSorry - what MS class would I use in a simple test program as you suggested if I were to do so? And what do I need to do to bootstrap that mini-environment? \n. ",
    "santo2": "Hi, the link above is not valid anymore. where can I find the most recent blog post or informaton on how to configure a web api? the \"Identity and access\" extension is not available for VS2013 so the tutorial doesn't work for me :)\n. Hi, when I use only the settings in the startup, it will tell me that there is no system.identitymodel part in the configuration. I didn't find an example which still contains that configuration like you would build with VS2012 using \"Identity and access\" extension. Has that been changed? Or where could I find an example for how the configuration is set?\n. Ok clear; I started my new test with the ResourceServer (Web API2) from the flows samples in AuthServer\nNote: I'm not using Authorization server, I'm validating my OAuth trough IdServer\n- I have an Oauth client in IdentityServer. Every flow enabled, refresh tokens enabled\n- I have a relying party, token type JWT, no certificate\n- I request a token trough Resource owner flow, receive a token for my user\n- I call the relying party with that bearer token using Header \"Authorization\" with value \"Bearer \" + accessToken\nSettings:\napp.UseJsonWebToken(\n   issuer: Constants.AS.IssuerName, --> what is this? I filled in the Realm of the RP, is that correct?\n   audience: Constants.Audience, --> I'm not sure that this is something that I can use by only using IdentityServer?\n   signingKey: Constants.AS.SigningKey); --> Signing key for Relying party\nWhen I call the relying party, I'm not getting an empty identity in the claimstransformer. I'm not sure where to check what is happening with my bearer token? Or should I add some more code to read that bearer token into the authorization context?\n. Hi,\nIs anyone able to help me get on with this \"small\" problem? :)\n. ok that helped a bit, I didn't know what the audience was. However I'm still not getting an identity in web api.\nIdentityServer settings:\n- site ID: http://identityserver.x.com/\n- default token: urn:ietf:params:oauth:token-type:jwt\n- no token encryption required\n- no RP registration required\n- client certificates not enabled\n- all protocols enabled, every option of OAuth enabled\nRelying party settings:\n- name: platform\n- realm/scope name: http://platform.x.com/services/\n- redirect URI: https://localhost/platform.example/\nOauth Client\n- name and id: PlatformWeb\n- redirect URI: https://localhost/platform.example/\n- everything allowed\nResource service settings (Resource Server Web API v2 example in flows solution)\n``` C#\n    ClaimsAuthorization.CustomAuthorizationManager = new AuthorizationManager();\n// no mapping of incoming claims to Microsoft types\nJwtSecurityTokenHandler.InboundClaimTypeMap = ClaimMappings.None;\napp.UseJsonWebToken(\n            issuer: \"http://identityserver.x.com/\",  // Idsrv site id\n            audience: \"http://platform.x.com/services/\",\n            signingKey: Constants.AS.SigningKey); // symmetric signing key in \"Key Configuration\"\n\napp.UseClaimsTransformation(new ClaimsTransformer().Transform);\n\n```\nClient (Resource owner password credential)\n- client asks for access token using the idsrv oauth2/token endpoint, this is working\n``` JavaScript\n   $.ajax({\n                url: \"https://localhost/idsrv/issue/oauth2/token\",\n                type: \"POST\",\n                data: {\n                    \"grant_type\": \"password\",\n                    \"scope\": \"http://platform.x.com/services/\",\n                    \"username\": username,\n                    \"password\": password\n                },\n            beforeSend: function (xhr) {\n                xhr.setRequestHeader('Authorization', \"Basic \" + Base64.encode(\"Client:Secret\"));\n            },\n            success: function (data) {\n                window.token = data;\n            },\n            dataType: \"json\"\n        });\n\n```\n- I send this token to the resource server in my request \nJavaScript\n            $.ajax({\n                url: \"https://localhost/ResourceServerTest/api/test\",\n                type: \"GET\",\n                beforeSend: function (xhr) {\n                    **xhr.setRequestHeader('Authorization', \"Bearer \" + window.token.access_token);**\n                },\n                dataType: \"json\"\n            });\nwhen debugging this last request, the identity is empty at all times. What am I doing wrong, or wat am I missing? I can't seem to find any info on extra settings which I should have set.\nSorry for the long story, I'm really doing my best to get this up & running :)\n. sorry, typo in the description above. I checked it in code and changed it above.\n. I was not very clear in my previous comment, what I meant to say is that it was already correct in my code, but I'm still not getting a result :)\n. What I do see in the asp.net examples for web api 2 is that when they request an access token, that the returned token type is \"bearer\", in my case this is \"....jwt\" so I suppose that this is a point in which I could have a diffirent setting then I suppose to.\n. should I add the basic authentication header to that same request then?\nI just tried this but I'm still getting Authenticated false\n```\n$(\"#frm\").submit(function () {\n    var username = $(\"#username\").val();\n    var password = $(\"#password\").val();\n    var auth = username + \":\" + password;\n    auth = \"Basic \" + Base64.encode(auth);\n\n    $.ajax({\n        url: \"https://localhost/idsrv/issue/oauth2/token\",\n        type: \"POST\",\n        data: {\n            \"grant_type\": \"password\",\n            \"username\": username,\n            \"password\": password,\n            \"client_id\": \"client\",\n            \"client_secret\": \"secret\",\n            \"scope\": \"http://...com\"\n        },\n        beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', auth); },\n        success: function (data) {\n            $(\"#result\").html(data);\n        },\n        error: function (data) {\n            $(\"#result\").html(data.responseText);\n        },\n        dataType: \"json\"\n    });\n});\n\n```\n. great! working! thanks allot for your help. Appreciate it\n. ",
    "Telaran": "Hi there, \nThanks for your feedback.\nI've tried it but maybe I'm missing something?\nAll \"found\" Settings for IdSrv:\n\nApplication Infos from IdSrv (I guess there is a Bug with 2 missing the port)\n\nConfiguration of WS-Trust (so I've already enabled them)\n\nCurrently I'm starting the Web-Project (in Debug) and after it's running I'm starting the Client as a second Instance. Maybe thats a problem or what approach make sense? Would it help to put the service on the hosted IIS?\n. Okay, \nOn the \"MVC and WCF\"-Sample:\n- I'm running the \"Web\"-Project from the \"MVC and WCF\"-Sample.\n  \n- The Webpage (http://localhost:52501/) is shown. Clicking on a Link will get an empty page.\n  \n- The Service can be discovered, but the Metadata is not available.\n  \nOn the IdentityServer:\nI've checked the URL and I'm receiving an error which also explain why the endpoint not react.\nURL: https://internaliis:4436/idsrv2/issue/wstrust\n```\n[InvalidOperationException: Could not find a base address that matches scheme http for the endpoint with binding CertificateWSTrustBinding. Registered base address schemes are [https].]\n   System.ServiceModel.ServiceHostBase.MakeAbsoluteUri(Uri relativeOrAbsoluteUri, Binding binding, UriSchemeKeyedCollection baseAddresses) +16937995\n   System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String implementedContract, Binding binding, Uri address, Uri listenUri) +104\n   System.ServiceModel.ServiceHost.AddServiceEndpoint(Type implementedContract, Binding binding, Uri address, Uri listenUri) +151\n   System.ServiceModel.ServiceHost.AddServiceEndpoint(Type implementedContract, Binding binding, String address, Uri listenUri) +86\n   System.ServiceModel.ServiceHost.AddServiceEndpoint(Type implementedContract, Binding binding, String address) +18\n   Thinktecture.IdentityServer.Protocols.WSTrust.TokenServiceHostFactory.CreateServiceHost(String constructorString, Uri[] baseAddresses) +731\n   System.ServiceModel.HostingManager.CreateService(String normalizedVirtualPath, EventTraceActivity eventTraceActivity) +1435\n   System.ServiceModel.HostingManager.ActivateService(ServiceActivationInfo serviceActivationInfo, EventTraceActivity eventTraceActivity) +76\n   System.ServiceModel.HostingManager.EnsureServiceAvailable(String normalizedVirtualPath, EventTraceActivity eventTraceActivity) +901\n[ServiceActivationException: The service '/idsrv2/issue/wstrust' cannot be activated due to an exception during compilation.  The exception message is: Could not find a base address that matches scheme http for the endpoint with binding CertificateWSTrustBinding. Registered base address schemes are [https]..]\n   System.Runtime.AsyncResult.End(IAsyncResult result) +622882\n   System.ServiceModel.Activation.HostedHttpRequestAsyncResult.End(IAsyncResult result) +196075\n   System.Web.CallHandlerExecutionStep.OnAsyncHandlerCompletion(IAsyncResult ar) +282\n```\nI don't know why. The only thing what I've changed from the default IdSrv2 Installation: Activate tracing. The IIS was set up by a sysadmin and should be as \"usual\".\nSo where's the configuration issue? If you need trace or any logs -> I will get them.\nThe IdSrv itself seems running. I can create a simple ASP Webpage and with \"Identiy and Access\" and can wire up  the IdSrv and it's running. \nFor example: The \"AdfsIntegrationFullSample\" (RP Project) also runs. It gets an \"ID1038: AudienceRestrictionCondition\" error, but this is more likely due some missing config in the project rather than from idsrv.\nAbout your question of my WCF experience:\nIn an older company I made some simple WCF Services: C# client connect to it, WCF makes a DB call (read only) and send back simple object (often just some strings). Everything within Intranet and therefore Windows Authentication. Nothing fancy, nothing complex and (Yes I'm afraid) no real security/authentication/authorization.\nNow in the current company I'd like to increase my knowledge and also focus on new security aspect. So I've read some books about WCF and WebAPI, watched your PluralSight courses and now try to make a Test-Environment (for determine what we need, how we implement/migrate and how to handle legacy programs). So that's why I'm trying first to get your samples running.\n. Hello I've tried your mentioned approaches. \nAfter disabling some of the endpoints in the WS-Trust Protocol I was able to receive the default \"You have created a service.\"-Page and it was reachable\nSo I was able to create a new WinForm App (just a Button to hit yet) and add the Service Reference.\nBut now I'm stuck with the work flow (and probably to less knowledge in WCF mechanics)\nIn the Webpage-Example it would be like:\nC#\n        WSTrust13SyncClient client = new WSTrust13SyncClient();\n        //DoSomething like: \n        // client.Trust13Issue(?)\n        client.Close();\nBecause this is in your MVC/WCF Example not used I tried with \n``` C#\n            var binding = new UserNameWSTrustBinding(SecurityMode.TransportWithMessageCredential);\n        var credentials = new ClientCredentials();\n        credentials.UserName.UserName = \"User01\";\n        credentials.UserName.Password = \"secret\";\n\n        var test  = WSTrustClient.Issue(\n            new EndpointAddress(\"https://internaliisserver.ch:4436/idsrv2/issue/wstrust/mixed/username\"),\n            new EndpointAddress(\"urn:ThinkTecture_ClientExample\"),\n            binding,\n            credentials);\n\n```\nbut this cause a \"At least one security token in the message could not be validated.\" Error and wasn't sure whats the issue.\nSo I've tried\n``` C#\n            var factory = new WSTrustChannelFactory(\n                new UserNameWSTrustBinding(SecurityMode.TransportWithMessageCredential),\n                new EndpointAddress(\"https://internaliisserver.ch:4436/idsrv2/issue/wstrust/mixed/username\"));\n            factory.Credentials.UserName.UserName = \"User01\";\n            factory.Credentials.UserName.Password = \"secret\";\n            factory.Credentials.SupportInteractive = false;\n        var channel = factory.CreateChannel();\n\n        var rst = new RequestSecurityToken\n        {\n            RequestType = RequestTypes.Issue,\n            AppliesTo = new System.IdentityModel.Protocols.WSTrust.EndpointReference(\"urn:ThinkTecture_ClientExample\"),\n            KeyType = KeyTypes.Symmetric\n        };\n\n        var genericToken = channel.Issue(rst);\n        ....\n\n```\nBut there I've getting the also the \"At least one security token in the message could not be validated.\" Error\nSome Google Result state that I should change my config, but mine looks quite different (maybe because I use a WCF service which generated the config and because of the WinForm app?)\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n    <startup> \n        <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n    </startup>\n    <system.serviceModel>\n        <bindings>\n            <ws2007HttpBinding>\n                <binding name=\"UserNameWSTrustBinding_IWSTrust13Sync\">\n                    <security mode=\"TransportWithMessageCredential\">\n                        <transport clientCredentialType=\"None\" />\n                        <message clientCredentialType=\"UserName\" establishSecurityContext=\"false\" />\n                    </security>\n                </binding>\n            </ws2007HttpBinding>\n        </bindings>\n        <client>\n            <endpoint address=\"https://internaliisserver.ch:4436/idsrv2/issue/wstrust/mixed/username\"\n                binding=\"ws2007HttpBinding\" bindingConfiguration=\"UserNameWSTrustBinding_IWSTrust13Sync\"\n                contract=\"ServiceReference.IWSTrust13Sync\" name=\"UserNameWSTrustBinding_IWSTrust13Sync\" />\n        </client>\n    </system.serviceModel>\n</configuration>\nSo I'm still stuck.\nAbout your suggestions for starting from scratch:\nMVC Application was never an issue. The walkthrough and videos are in this scenario just perfect. I was able to setup within 10-15 minutes a MVC with Google and MS-Live ID Login.\nWhat I'd like to try is to accomplish a Desktop-Client Authentication through WCF or at least try if that would be possible and which pro/cons it has. About the question \"Why\": Curiosity and a longer story which would not fit here.\n. Thanks for the feedback. I'm glad the WSTrsutChannelFactory seems good.\nI also checked the configuration and removed the \"Symmetric Signing Key\" which was set. There was no encryption certificate.\nOkay I changed to\nC#\n            var rst = new RequestSecurityToken\n            {\n                RequestType = RequestTypes.Issue,\n                AppliesTo = new System.IdentityModel.Protocols.WSTrust.EndpointReference(\"urn:ThinkTecture_ClientExample\"),\n                KeyType = KeyTypes.Bearer\n            };\nI'm also checked the trace logs.\n\nFirst it get the Warning (ServiceModel):\n<Description>The security protocol cannot verify the incoming message.</Description>\nAfter that it cause a exception (ServiceModel)\n<Message>Message security verification failed.</Message>\nThe Message itself looked alright.\nSo something still is missing. Maybe the Certificate Thumbprint in the app.config as a Servicebehavior? Or what else could be missing? I think we getting closer (and my debt to you increase ;) Thanks for your patience and help)\n. Hi there, \nThe logs were from IdSrv2-Service (on a Server with IIS).\nI will try to work today again on this case. I will update if I've got anything new on it. \n. Yes, I didn't had any time for this case and technology. \nSo as for now: It can be closed. \nStill I'd like to thank you for your effort in this case. \n. ",
    "XVincentX": "I guess you are right, I'm sorry. Let's start from scratch.\nActually, using your identity Server as STS, I use your login page and your default repository.\nhttps://mywebsite -> No auth -> https://sts. Insert username and password and then we can log in. We're happy.\nThe flow of auth should be a bit modified (and I'd like to handle it into identity server rather than in my application), and since we are working on a crappy old legacy system, I really cannot make any change on the \"system context\"\nAccess to my application -> No auth -> Redirect to STS.\nIdentity Server should then\n1) Check for particular header on the request. If found (and checked) a valid token should be issued.\n2) If no header is present, I should present a login page through Windows Authentication (no ADFS available, so I cannot use an additiona identity provider). If works, a valid token should be issued.\n3) If no header and auth fails, the usual login screen should be displayed. \nActually I have already managed this issue, but I think I made it in the worst possible mode.\nI tweaked AccountController to check the header presence, and if yes, call the SignIn overload. If not, a redirect to a page (protected using Windows auth in web.config). If its login succeed, then the same SignIn overload gets called. Else, a simple redirect Is performed.\nDo you think is there a better, cleaner, clever way to handle this scenario?\nThank you,\nVincenzo\n. ",
    "ti178": "Hello Allen,\nThank you for your advice (and please ignore my previous post (already deleted), I got mixed up with a different thread on completely different matter).\nUnder:\nhttps://my.id.server:55443/Admin/Protocol/Protocol/WS-Federation\nI've set [Enable Sign-in], [Enable Federation] and [Enable Home Realm Discovery] to TRUE which resolved issue no. 1.\nYet, issue no. 2 (see my original post) is still not resolved yet.\nAny idea how to move forward?\nthank you very much for your support.\nTIL\n. Hello Allen,\nthanks again.\nIt seems that I'm one step forward now :)\nI've reset the application pool at:\nhttps://my.id.server:55443/Admin/General/Recycle\nYet now I get the following message when accessing the HRD:\n\"Sorry, an error occurred while processing your request.\"\nhttps://my.id.server:55443/issue/hrd\n. All Issues are resolved.\nThank you very much :)\n. ",
    "coz1978": "Don't believe so.  Do I need ADFS integration enabled to do that?\n. Ok, got it.  Thanks for the information.\n. ",
    "EmperorMollusk": "I had tried the \"Token Signing\" certificate to no avail. What I hadn't tried was the token signing certificate with an ending slash on the WS-Federation Endpoint address. One added slash and all is well.\nThank you so much for the advice and thanks for making this excellent software.\n. ",
    "TrueGeek": "Ah ha! I was able to get a token! The user I had created was not a member of IdentityServerUsers.\nI'm still not sure why tracing isn't working, although that's certainly not as urgent an issue now.\n. Oh, doh! I knew that too.\nIn my defense - in Chrome the error message says such. In IE (which is all I had on the server) it just returns \"Error 405\".\nEither way - it's working now and I thank you so very much!\nIf you are ever in Atlanta I've got a snow cone for you.\n. ",
    "WilliamDoman": "In Azure, with multiple instances has the same issue, following his his post on how to host it in azure, we did the following... FYI,  I think you can do it in the IIS machine configuration instead of the webconfig of the project, but that's not the same in azure, so we didn't try it that way.  You can have the dotnet framework to encrypt parts of your web.config if you need to hide the keys.\nIn web.config -> system.web\nXML\n<system.web>\n    <!-- Be sure to change the validation/decryption keys using a tool such as http://chaos.aspnet.cz/ -->\n    <machineKey validation=\"HMACSHA256\" \n                decryption=\"AES\" \n                validationKey=\"key\" \n                decryptionKey=\"key\" />\n  ...\n</system.web>\nand it the identity config, be sure the MachineKey handler is registered.  I think it should be there by default.\nXML\n<securityTokenHandlers>\n   ...\n    <add type=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n. Thanks\n. @dealproc, Sorry I'm a bit new to this.  \nAs for token is passed through the header, does you mean I would send down the saml token to the browser and send it back in something like a ajax header?  Wouldn't I want that to be a jwt bearer token instead?  Can I convert tokens?\nSomething like \njavascript\n beforeSend: function (xhr) {\n                    xhr.setRequestHeader(\"Authorization\", scheme + \" \" + token);\n                }\nOr on the server side, I would create an http client and something like this?  (Not tested)\nC#\n            var client = new HttpClient\n            {\n                BaseAddress = _baseAddress\n            };\n            client.SetToken(\"SAML\", token)\n            // or this but I don't have a bearer\n            client.SetBearerToken(token);\nI'll have to look at the resourceownerpasswordflow  stuff.  For my clarity, I thought scopes were essentially permissions but you speak about them as if they are a bit higher.  If that's the case, what gives you the more precise permissions?  With auth server can I still have something like a claimsAuthorizationManager ??  In one of the examples I saw these attributes.  Is that the magic?\nC#\n        [ResourceActionAuthorize(\"action\", \"resource\")]\n        [ScopeAuthorize(\"read\")]\n        public string Get()\n        {\n            return \"ok\";\n        }\n. I'm not sure yet how they want to go from the MVC website to the API yet.  JS or Controller actions, so I was questioning both.  =)\nI'm been reading the blogs, and watching the videos and I agree, great stuff.  VERY GRATEFUL of Brock and Leastprivilege . \nI will continue to muddle with your suggestions.  Thanks!\n. ",
    "sachmahajan": "Hi,\nWe found the solution, Adding cookies domain like this at client side.\nFederatedAuthentication.SessionAuthenticationModule.CookieHandler.Domain = \"Domain name\"\nthanks\n. yes, WS-Fed end point is the way to go. But I create a new endpoint in OIDC for logging off at server side and clearing the cookies in that and exposing that endpoint to the client side.\n. ",
    "glennblock": "@leastprivilege If there are multiple compositions happening across threads in the same container, then yes you need to enable thread safety.\nIn general for a web app though you should not use a shared container for composition, instead you should use a pre-request container this way there are no thread safety issues as there are no longer threading contention issues.\nHave you considered using a parent container for shared services across requests and then having child containers per-request?\n. You are saying you only ever retrieve exports from the container during Application_Start?\n. @leastprivilege \"use\" is what I mean :-) If you are calling GetExports / GetExportedValue / GetExportedValues all of those are performing \"composition\" / can be mutating the state of the container. Are the parts shared or non-shared?\n. I see you have a Container.Current. That's generally a bad idea for web apps if that is a singleton. If you want to use that design and there are multiple requests each pulling things from the container resulting in part creation, then you want to enable the thread safety switch. I'd suggest profiling though to see how big of a perf impact that is as it results in a giant lock on the container.\n. Why not use something like this? https://github.com/WebApiContrib/WebApiContrib.IoC.Mef and just have per-request containers?\n@leastprivilege I'd also suggest looking into MEF 2 which was designed more with web scenarios in mind: http://www.nuget.org/packages/Microsoft.Composition/. It is a much more scaled back MEF, and appears to be threadsafe with far less perf impact. There are a bunch of tradeoffs though like no recomposition, no catalogs even.\n. @leastprivilege well it has obviously worked for you, so wrong is relative :-) \n. Uh Nick I wasn't insulting anyone. Dominick asked me for my opinion and to\nweigh in. I said it is not a good idea. I don't remember casting any\ninsults. Also it is a single line of code to change it.\nKthxbye\nOn Saturday, February 15, 2014, Nick Pateman notifications@github.com\nwrote:\n\nGlen, how about you pull the repo and make your own branch rather than\ninsult the developers?\nSent from my Windows Phone\n\nFrom: Glenn Blocknotifications@github.com<javascript:_e(%7B%7D,'cvml','notifications@github.com');>\nSent: \u00fd14/\u00fd02/\u00fd2014 18:31\nTo: thinktecture/Thinktecture.IdentityServer.v2\nThinktecture.IdentityServer.v2@noreply.github.com<javascript:_e(%7B%7D,'cvml','Thinktecture.IdentityServer.v2@noreply.github.com');>\nSubject: Re: [Thinktecture.IdentityServer.v2] MEF CompositionContainer is\ncreated without IsThreadSafe option (#577)\nI see you have a Container.Current. That's generally a bad idea for web\napps. If you want to use that design and there are multiple requests each\npulling things from the container resulting in part creation, then you want\nto enable the thread safety switch. I'd suggest profiling though to see how\nbig of a perf impact that is as it results in a giant lock on the\ncontainer.\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/577#issuecomment-35110958>.\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/577#issuecomment-35157005\n.\n. Ha ha yeah and I remember that adding thread safety was a lot of work! It\nwas not designed that way initially.\n\nOn Saturday, February 15, 2014, Dominick Baier notifications@github.com\nwrote:\n\n@npateman https://github.com/npateman As Glenn said - I asked him for\nhis opinion. He knows a thing or two about MEF ;)\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/577#issuecomment-35160679\n.\n. \n",
    "peponeska": "@leastprivilege @i-p is on vacation.\nWe discovered this bug by chance. Our system was designed to be a Portal frontend with WCF backend. We needed to get identity of user accessing Portal to WCF. Therefore when user authenticated against IdentityServer at Portal we took this token and Portal requested an ActAs token from IdentityServer. \nWe made a mistake and requested ActAs token every time user accessed Portal. Result was that 100 users working with Portal generated many ActAs requests (we didn't count them) that IdentityServer stopped issuing tokens. Exception that @i-p has sent was eventually received by every user accessing Portal. \nWhen we restarted IdentityServer everything worked again. I should mention that the bug occurred after i.e. 7 hours of work but it might be only luck. \n. @leastprivilege We don't know. We fixed both bugs pattern and MEF thread safety. To this day we did not get the error again.\n. Well, we did try that with the code @i-p pasted but it was not tested against whole IdentityServer. That code was enough proof for us to accept this fix. \n I'll talk to my boss and we will see.\n. @leastprivilege We have discovered the problem in our production system and we don't have proper multiuser test environment for reproducing this issue. Additionally, we don't see any big point in doing so. It might be quite difficult to reproduce the problem under lower load and if we don't see any troubles during our test it doesn't necessarily mean the problem isn't there. In fact, we know it is there, we solved it and @glennblock confirmed our solution. IAM is not a load critical system for us and it doesn't matter if a token is issued in 100 millis or in 3 seconds. What does matter is that the token will be issued correctly and the system is stable.\n. ",
    "mynkow": "Will try to make better pull request\n. ",
    "vinayakbhadage": "I need to do same thing. I saw the OIDC session managment. But it depends on OIDC discovery.\nhttp://openid.net/specs/openid-connect-session-1_0.html#OpenID.Core\n. ",
    "cerickard2": "What does the limited support entail?  Does is handle OIDC Core?  That would probably be enough for my basic case.\nAlso, what is the ETA for v3?\n. Great!  I got the basic flow working in my test client.\nOne thing though...  It looks like refresh token is not implemented for OIDC.  Is this coming sooner rather later?\nThank you!\n. On our side, we will be the identity provider, authorization server and protected resource.  On their side, they will have a mobile app and a web service.  They want the mobile app to authenticate with our servers and pass the identity to their servers, creating a session in their environment. Their mobile app will make calls to their web service, which will in turn make calls to our API on behalf of the user.  This seems like OIDC flow to me.  The reason for a refresh token is that they don't want to make the app continually go through the web flow after access tokens expire.  Plus, they would also like offline access to the user's information.\nIs there another combination of authentication and authorization technologies I should be using instead?  I'm brand new to WS-Federation but have done OAUTH a bunch of times before.  I'm totally open to doing thus another way.\nOh, and thank you for your responses!  I am thoroughly impressed with both of your blogs and your code is incredibly impressive!  It's truly fantastic stuff!  :-)\n. I noticed something that you probably already know about, but I thought I would mention it anyway to be sure.  I was looking at the code for generating OAUTH2 token responses in IdentityServer and AuthorizationServer.  It looks like a new refresh token is created and stored for each request.  While this is fine for infrequent actions such as authorizations, I think it would be a problem with OIDC since that flow would be called for every authentication request (login).  If a new refresh token is generated and stored with each login, the database would get filled with refresh tokens that never get used and possibly never go away if you have no expiration date.  I'm guessing that's why the OIDC flow doesn't have refresh tokens yet, right?  Are you planning on implementing it the way Google does?  Meaning that the refresh token is only provided on the first authorization and is blank in subsequent ones.  Generating a new refresh token requires a special parameter at the start of the authorization flow.  If a new one is generated, then the old one(s) are revoked automatically.\n. I figured out why I wasn't seeing a refresh token.  I stupidly missed where the OIDC spec added an \"offline_access\" scope and forgot to add it.  Now, the only issue is with multiple refresh tokens being generated.  I made a few small modifications to the IdSrv source and was able to have it reuse existing refresh tokens before making new ones.  Works like a champ now!  Thanks!\n. Sorry for the delay in getting back.  I didn't realize it was so long since the last comment.  I was trying to finish up the work in this sprint and time got away from me.\nThinktecture.IdentityServer.Repositories.IStoredGrantRepository\nC#\n    public interface IStoredGrantRepository\n    {\n        void Add(StoredGrant grant);\n        StoredGrant Get(string id);\n        // Added find grant by existing Grant definition\n        StoredGrant Get(StoredGrant grant);\n        void Delete(string id);\n    }\nThinktecture.IdentityServer.Repositories.Sql.StoredGrantRepository\n``` C#\n    // Locates a grant based on a grant definition\n    public Models.StoredGrant Get(Models.StoredGrant grant)\n    {\n        using (var entities = IdentityServerConfigurationContext.Get())\n        {\n            // Get list of grants based on index-friendly properties\n            var result = (from sg in entities.StoredGrants\n                          where sg.ClientId == grant.ClientId && sg.Subject == grant.Subject\n                          select sg);\n        if (result != null && result.Count() > 0)\n        {\n            // Check each candidate for a match\n            foreach (var entityItem in result)\n            {\n                var item = entityItem.ToDomainModel();\n                if (item.GrantType == grant.GrantType && item.Scopes == grant.Scopes)\n                {\n                    return item;\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\n```\nThinktecture.IdentityServer.Protocols.OpenIdConnect.OidcTokenController\n``` C#\n    private HttpResponseMessage ProcessAuthorizationCodeRequest(ValidatedRequest validatedRequest)\n    {\n        Tracing.Information(\"Processing authorization code request\");\n    var tokenService = new OidcTokenService(\n        ServerConfiguration.Global.IssuerUri, \n        ServerConfiguration.Keys.SigningCertificate);\n\n    var response = tokenService.CreateTokenResponse(validatedRequest.Grant, validatedRequest.Client.AccessTokenLifetime);\n    Grants.Delete(validatedRequest.Grant.GrantId);\n\n    if (validatedRequest.Grant.Scopes.Contains(OidcConstants.Scopes.OfflineAccess) &&\n        validatedRequest.Client.AllowRefreshToken)\n    {\n        var refreshToken = StoredGrant.CreateRefreshToken(\n            validatedRequest.Grant.ClientId,\n            validatedRequest.Grant.Subject,\n            validatedRequest.Grant.Scopes,\n            validatedRequest.Client.RefreshTokenLifetime);\n\n        // Look for an existing refresh token and use it if found\n        var existing = Grants.Get(refreshToken);\n        if (existing == null)\n        {\n            Grants.Add(refreshToken);\n        }\n        else\n        {\n            refreshToken = existing;\n        }\n        response.RefreshToken = refreshToken.GrantId;\n    }\n\n    return Request.CreateTokenResponse(response);\n}\n\n```\nI want to look into adding more of the Google OIDC extensions in a few weeks once we get the core  functionality deployed.\nThanks again!\nChuck\n. One other thing...  This is a total hack.  It only works when refresh tokens do not expire, which is my use case.  It needs logic to either check the expiration date and regenerate as necessary or slide the expiration date on each login.\n. ",
    "johnlee": "Sorry, I'm also not a frequent github user. How do I mark this as a question rather than an issue?\n. ha, didnt see this and just replied on the asp forums. I suppose we can let the conversation run in there instead duplicating the post...\n. ",
    "davecromberge": "Thanks Dominick, that approach allows us to keep the STS clean from custom code.  The only custom code is styling the login page which looks like quite a common requirement.\n. ",
    "StevenReachSoftware": "Just so I'm sure we're saying the same thing.  I tried to set this up on a new website on IIS.  I would get an error page in the browser but NOT the yellow screen of death.  Just the generic error page in the browser.  When I created a web app underneath the existing root (Default) website it worked fine.  I'm not using the source code but rather the \"binaries\".  I'm running Win 8.1.  I'll attempt to setup again this weekend but here is the error from the event log.  I appreciate any assist.\nHere is my stack trace.\nException information: \n    Exception type: InvalidRequestException \n    Exception message: Invalid realm: urn:authorizationserver\n   at Thinktecture.IdentityServer.TokenService.Request.ValidateKnownRealm(RequestDetails details)\n   at Thinktecture.IdentityServer.TokenService.TokenService.GetScope(ClaimsPrincipal principal, RequestSecurityToken rst)\n   at System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal principal, RequestSecurityToken request)\n   at System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(SignInRequestMessage requestMessage, ClaimsPrincipal principal, SecurityTokenService sts, WSFederationSerializer federationSerializer)\n   at Thinktecture.IdentityServer.Protocols.WSFederation.WSFederationController.ProcessWSFederationSignIn(SignInRequestMessage message, ClaimsPrincipal principal)\n   at lambda_method(Closure , ControllerBase , Object[] )\n   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary2 parameters)\n   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary2 parameters)\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass42.b__41()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<>c__DisplayClass39.b__33()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass4f.b__49()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass4f.b__49()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass4f.b__49()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass4f.b__49()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.b__36(IAsyncResult asyncResult)\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass25.<>c__DisplayClass2a.b__20()\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass25.b__22(IAsyncResult asyncResult)\n   at System.Web.Mvc.Controller.<>c__DisplayClass1d.b__18(IAsyncResult asyncResult)\n   at System.Web.Mvc.Async.AsyncResultWrapper.<>c__DisplayClass4.b__3(IAsyncResult ar)\n   at System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult)\n   at System.Web.Mvc.Async.AsyncResultWrapper.<>c__DisplayClass4.b__3(IAsyncResult ar)\n   at System.Web.Mvc.Controller.EndExecute(IAsyncResult asyncResult)\n   at System.Web.Mvc.MvcHandler.<>c__DisplayClass8.b__3(IAsyncResult asyncResult)\n   at System.Web.Mvc.Async.AsyncResultWrapper.<>c__DisplayClass4.b__3(IAsyncResult ar)\n   at System.Web.Mvc.MvcHandler.EndProcessRequest(IAsyncResult asyncResult)\n   at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)\n. In reviewing this stack trace again it seems obvious it has to do with an invalid realm, but why did it work by simply moving the whole thing to an Application under the default site.  Appreciate the assist.\n. yep, my mistake.  started from a clean slate and all went well.\n. completely recycled IIS and still no link.\nHere are my settings for WS-Fed\n\nand my relaying party setup.\n\n. doh!!  That worked, now I just have to figure out all the fields in that screen.  thank you sir!\n. Sorry perhaps I'm particularly slow here and I probably have my terms mixed up, but what does that mean?  If I describe my scenario a bit better maybe that would help.\nI set my application to use IdSrv as the Authentication provider.  In IdSrv I setup several Identity Providers (1 for each client).\nWhen a user arrives at my site, using a particular url (e.g. mysite.com/adatum) I want to send them to IDSrv with the appropriate information so they get redirected to the appropriate id provider, ADFS or whatever their company is configured to use.\nI'm still trying to sort all the terms in my head so perhaps I've got them mixed up but some gentle correction and guidance on setting my app to talk to IdSrv in this fashion is appreciated.\n. Thanks for the quick responses. \nI see that from here (http://msdn.microsoft.com/en-us/library/system.identitymodel.services.signinrequestmessage(v=vs.110).aspx) but where in my application do I intercept and override what is currently happening automagically in my application just by setting the web.config up correctly?  I guess I grab the AuthenticateRequest and do it all manually?  Does Identity Model help with this?\nDo one of the samples have an example of this?  I have looked but I feel I must be missing something fundamental because I don't see it and I don't think my scenario is that different.\n. lol!  you are on it today sir!  thank you.  Can you tell me where this goes?  I guess in an MVC application I would guess in a custom Authorize attribute correct?\nIt also looks like I can capture the WSFederationAuthenticationModule_RedirectingToIdentityProvider event and modify it there.  Is there a drawback to that?\nThank you so much for helping out today.\n. ok, got it.  thank you for your help.  Now I'm having a different issue with the reply parameter but I'll open a separate ticket for that once I've better understood what may be happening.\n. hey guys, sorry to reopen this, but I'm not having a lot of luck getting this to work and I think it is on my side.  This is what I'm doing can you point me in the right direction?\nI've configured a sample mvc app with WSFederation.  The configuration settings point to my idsrv.  I'm able to login to my idsrv users with this plain setup.\nNext I added a WAAD Identity Provider named barry.  My expectation is that when I pass barry as the whr parameter that I will get redirected to my WAAD provider instead of the IdSrv.  I use the following code to modify the home realm.\nvoid WSFederationAuthenticationModule_RedirectingToIdentityProvider(object sender, RedirectingToIdentityProviderEventArgs e)\n        {\n            e.SignInRequestMessage.HomeRealm = \"barry\";\n        }\nI can see that the whr parameter is on the querystring so I know this code worked.  What am I doing wrong in IdSrv that it does not send me to my WAAD application?\n. D'OH!.  Thank you Brock.  I'm digging this product, but still trying to grasp all the (for me) new terms.\n. ",
    "jonahsimpson": "Thanks, Gentlemen!\n. ",
    "pavanputhra": "May be I was not clear with question.\nYes, Facebook won't ask for log in screen for Website 2. But while using HRD endpoint, IdSrv will show screen which shows IdProvider list i.e., \"Facebook\", \"Google\", etc. I wan't skip this screen once I have already log in.\n. Requirement here is single sign on experience. So if user logs in with, for example with Facebook, he will have same identity for website 1, website 2 or website n, till he logs out from our IdServer (not Facebook).\nAm looking achieve similar behavior if RPs are pointing to wsfed endpoint. Here if user is logged in and if user tries to log in in from website 2 couple of redirect happens but log in screen is not show.\n. Yes, I mean redirecting to some other RP from within Identity Server.\nRe-directing form original RP would cause maintenance problem, because i have to share same functionality with many RP. It would be better if I could achieve detecting new user from central place.\n. Ya, am trying to implement your idea, redirecting to registration site from each RP\n. ",
    "seanta": "It does looks like I am sharing the fedauth cookie.  I did a claims transformation on RP1 and added some extra claims.  Then I redirected to RP2 and I could see the same additional claims in the cookie on the other site (plus i didnt redirect back to the sts).  I am not sure why though or how to remedy it? \nI have all three as seperate sites in IIS - STS, RP1, RP2. Is there any other setting on the cookie handler that I am missing?\n(I was wondering if I named each fedauth cookie differently on each RP.  But when I did this it required me to login each time for each RP.)\nThanks for your help.\n\n. i have just tried giving each RP's cookie a different name.  This does then redirect me to the STS, but I have to login again for each RP.\n. Actually that is working now!  I renamed the cookies and redployed to IIS and I am now seeing the redirect to the STS when I browse to the second RP, and also now the two iframes in the logout.\nI think IIS Express was muddying the waters. Thanks so much for your help.\n. That makes sense. Thanks\n. ",
    "someaccountidontuse": "Hi, I Just had a further question about this issue I experienced - re auth cookies being copied between RP's.\nWhen I name each of my RP auth cookies differently, I now redirect to the STS each time I visit a new RP (for the first time). So this means I get 1 or 2 authcookies per new RP.\nI was wondering is this the expected/desired behaviour for RP's on the same domain? I was concerned that this means some requests will be carrying around more of data with them? \n(Although on the plus side it allows me to track my RP's and add app specific claims.)\nThanks for your time on this.\n. I am seeing each RP getting their own cookie now, after naming them differently.  However, I wondered if this was a good thing, because now I get more cookies (2 per RP)? Is this the normal outcome - each RP has their own fed auth cookies?   thanks\n. ",
    "horsdal": "Yes, I do I'm afraid.\nIf you're able to do something that would be great! Again let me know how I can help out.\n. That's absolutely awesome :heart: \nThanks a bunch!\n. Once again thanks, so much. Will test soon.\n. I still get the same exception. The exception is thrown on l. 107 in HrdController at the call fam.GetSecurityToken(Request);.I.e. before ProcessWSFedSignInResponse is called.\nThe decryption cert seems to be correctly registered since the if at l.96 is entered and the decrypt cert is added to idConfig.ServiceTokenResolver on l. 100.\n. Again: Thanks for doing this!\nIt's an Active Directory.\nI'm not sure what the answer to what the token type is, but you can see the public metadata for the IdP here https://fioltest.odense.dk/runtime/saml2/metadata.idp \nI don't have control over the IdP I'm afraid, so I haven't tried turning signing off.\n. That  explains it then. My bad :blush: \n. So I had the third party reconfigure their idp, to use WS-Fed, but I still get the exact same exception from inside of IdentityModel during the call made l. 107 in HrdController.\nIn case it's relevant the updated metadata is here\nIf it's relevant I could show you what the idp posts back to /issue/hrd.\nTo be clear: I'm running the code in Feature_Token_decryption_for_HRD branch.\n. This is the POST request as captured in Chrome:\nRequest URL: https://myidsrv.com/issue/hrd\nRequest Method:POST\nStatus Code:500 Internal Server Error\nRequest Headersview source\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding:gzip,deflate,sdch\nAccept-Language:en-US,en;q=0.8,da;q=0.6,nb;q=0.4\nCache-Control:max-age=0\nConnection:keep-alive\nContent-Length:11414\nContent-Type:application/x-www-form-urlencoded\nCookie:__RequestVerificationToken=qLfQg7UlN3x6ID4pxWs3ZjIVV_nndWi9oJpPX1mXwMJ2lkvt8GnvhKT0AILQT9KNYzCgMcyQTnpqn6wYvGwsVR5SJ4G9xJExN3nMy7UqPjUGlIGmKXo0yl8J4L9VYGYWucrop3YiGJdlf5RR2M7bSsb-XQgZexNQXqVEeYf9MhI1; idsrvcontext=%7b%0d%0a++%22Wctx%22%3a+%22rm%3d0%26id%3dpassive%26ru%3d%252f%22%2c%0d%0a++%22Realm%22%3a+%22https%3a%2f%2f100.92.178.27%3a80%2f%22%2c%0d%0a++%22WsFedEndpoint%22%3a+%22https%3a%2f%2ffioltest.odense.dk%2fruntime%2fWSFederation%2fWSFederation.idp%22%0d%0a%7d\nHost:auth-preprod.sekoia.dk\nOrigin:https://fioltest.odense.dk\nReferer:https://fioltest.odense.dk/runtime/usernamepasswordauth/login.idp\nUser-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.146 Safari/537.36\nForm Dataview sourceview URL encoded\nwa:wsignin1.0\nwresult:<trust:RequestSecurityTokenResponseCollection xmlns:trust=\"http://docs.oasis-open.org/ws-sx/ws-trust/200512\"><trust:RequestSecurityTokenResponse><trust:Lifetime><wsu:Created xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">2014-03-13T07:21:39.430Z</wsu:Created><wsu:Expires xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">2014-03-13T08:21:39.430Z</wsu:Expires></trust:Lifetime><wsp:AppliesTo xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><EndpointReference xmlns=\"http://www.w3.org/2005/08/addressing\"><Address>http://identityserver.v2.thinktecture.com/trust/sekoiaauth-preprod</Address></EndpointReference></wsp:AppliesTo><trust:RequestedSecurityToken><EncryptedAssertion xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"><xenc:EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\"><xenc:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes256-cbc\" /><KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><e:EncryptedKey xmlns:e=\"http://www.w3.org/2001/04/xmlenc#\"><e:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\" /></e:EncryptionMethod><KeyInfo><o:SecurityTokenReference xmlns:o=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"><X509Data><X509IssuerSerial><X509IssuerName>CN=AlphaSSL CA - G2, O=AlphaSSL</X509IssuerName><X509SerialNumber>1492356115127099794520143608467901390172921</X509SerialNumber></X509IssuerSerial></X509Data></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>a5JIGZatsGFzzoKyerPcv385sw2l7RQl6xzdWAF/oJ8XRd+F5FRdW+VPTXHTNgsMpoDX6AiJh0pxHzgZ64T0O1SPfl85nt1rDgCGxubhgz/BU7HE6P1KTxGuI0Kkkf2bORliRNCidkp/iR6nLxzgpEy/38cNMUz/qaI8UqLZVRmqIctFdYXe2Hx2CKrqMMQAfO2MbmxnwyMAFCnnB+iixDjl8ZaYpxARx/aRsVwlZiPQpoUf51kINyn97OhDXCMOKtpfovYNwogRwefUWWOobJqZZSphpre2YGiKOI4325dU3KuOrvUYP7cRPPOH/zgogh+Uxk0FrliAizpM+DLs6w==</e:CipherValue></e:CipherData></e:EncryptedKey></KeyInfo><xenc:CipherData><xenc:CipherValue>7l/He3XVi0O2R5i3lC7eMAiMoFNEU0LCItYMSUnEYm4+EhwfMzDCYYmGea/bfu6GHxJOoKBgWwEow3H6NC1FnZsdEMPm/WnEzKSf4PyoAAezTEPGml0HlNV3/xYSC/tGhlMvhwh75G5lLNT6/6QL5RykKIE06tGRDOk/eiGpsuMq5TyToL0HuGFtcyPhuvo+rl+ztIU8YHkPhPQ+HkuXUh+laG+z/9nbqEj3TdGWCIXYhQdzkgjyTKcifR06WOJxqCImMo3aXjaddW8HawbWPpaJSPYqwIKKrZHU8Q2CwaaCnEWBo77/lJQVL0pND8IqA2kpqfS1CZrar4oNucV9YV23VRDo73svqtnJHfOoHBfDl5B083qe2qsNbnO3mqaAi0J/0bm+LcdgkkmwnAC0L/zgaOWodsqX8RgoJMxKkTsSR0i7rzbXuXzwuXjcTyNVj+TCwu7O+1kqveNZpPgyhMgPiru9vT+8QY9mD7VHpctyIGS7RFYwCTTjETOqxmIOGu7nnJd6Bg000ehF3QIVAXSDPm2nbymJGJrl5+APObZdCKSNlrrdWsjvVt+YB8FZkwxdU33Fwq9z25mPBcMz3gB5oDtUMFjIW2AQ1yQoMxW/NawBRzhcccoZB00HgCNGNGMxHMhhyWqM3gCpU8X4ADOmvl98aSYOJxFS7Gdf1vcc8KmnyJzaBt32oP7jxx+EinkdTcaGE1ksgqISETPKRg7nU5o8mpJEd+Eq5svfAwiSuQiTvXQONMxdzD+qZStMASYUt85oeH66MKJj3HpW7Wt/Qj4N7mTsUOcgUGdde8Qh3XZUEb6XFbjE7UP1esFkXTygT2dQx3zcheC0SSEQWVK7K7u/ZvwfIN0/+6m5d5pYbcQaYyDL0UdDII7N7XT6OjrhZjN4JK8iX27ncbSbMrgIhAr9BGDgR3WT/66b5Zxfkmalw0pVY0CfbWP+dvOh39DR0Mo1Aq7aCBRt+uMLNtNCGsPqIQ56IwCBkFjaeWPDm1nhupy/khJtSXNjJj6QtkcxzI8YQK8d+hzbSTShf60okiFJNjqI1v7moWW0bN3Z9aUpcrPXHLqKyCW5ypdcfiBMNIMRv5J3yydxbZBLPZtUiSwG2LHZHu/lFkKvYAg+csZj7n1tS/cJnFPnUox9wldpbhSnRinF4pX2AbqpMbyixqzRAa7t/eBd3nn0yR3wC20mGvWM+ZCz31twO6F0sY/rrzwG5Yp9Q+rskNWGS5vu/QXY2pzG5xJ8L/Jmva2kNl4eVo6zX78x9bg2XT3i+qOzep2TDFndPRVFiOKPfNFhTfpONJUvkE9aK5+qS5Wa7/Pgj1olxD2rmnhDqD2ZauGdlnXQMKGqc6FgzPjMC2q4/16Lte4bk+BtHuFggHF9XxhrDxxHQSeT42uiWthtqQPIUxkyDybNJEzIZUJyvtIHoPK/JbDWF4BPyfm/o1GN5P6kaVxI+/+t8miQVrD5HiOX6TfLZq1CUGe2mvD37tZ8jvAQmDZHG6SDKmrSzWYZx5aKwXb7NE7GQiM39MY8lPLceQUuhEkT6dbB3pxHYQLmE7tRdmLSaTCJroPFN4XM9JW+EzjsPPPGYYvAo9/Dho8mzcnaH65najgm+VTcLP00tA5VpvbC95J8q1u/IjFpcncmsTLgVPR/PWqR1VqcCQjDSVG1YuM0tfjb39Bd/TM9ml3KzxDPYz5pcePRwCBqBVwZJjCxwL77jBvjsv0nhMy/DerjacZh04+n0lg9xY1zfBCL03JWVMOMlE7uMRj4+QpB8qp7aT35vLyXHqiBoMkJVNb56+8O4aK7zw6uoK3Ykskk8o+kEBuW5tDYZFPdfXcuds/aILS8Xh3STcaIngpSs7zt2rPdCGnSBYkjYctg4JgK8UtYlro9+KtkPDflhPCW+OTK5hLNGMav0ofcv5GnlT8EI6aOKLitUItDlRWOptaDDfF4HXW6mjU/pG3fj1tWB8WJC/js+7JKruu2Ko5RWQKtlddZ6Kf2LA7ZU9EKGBWDZXz2qNyumtWNzTGZzX2Ud5C4A2fKXCFxOUxLHfofONHxE4RRRFmltPG7XYJvfpNCn85M1NuLsqkqOAqeieBoT/fwoxvICADnwG3PGd+AFiBPFoQqLFV5P9gAri7Uq9AGBUfrO8J67Rezbkg6HQC/YIdjAwVXxbqB47UkaFW4lpDaLNyiTMcseChhttwixupvrBB1CcR+eS14QDbdKT8RjNoEIvoiBD7sQSHUA84gMudN4urm+7r3dUcc4f8irHYru7nPP7GHwd4cW3HUa1PpWEnwYDKqCyUfH7o1hsQgFtzqT09zsYV4UhmD9b++LyStIKxPOt/XRzOPz5LrTLR1KcFPn34NhzPDppO/X9Av++pgwOkaVL972v7LRE20aw9L1TEEhStbbTZy7gm5Ozjq18dU/OhlirteriO9WMkC8nhu3gPQvKvCbdq6fnUaOkzwQoTBScxJlTls3CS3GAErf934fWpppvhq5+qUlWiZGk4y07tT25UdTle1wYKHrpugzitQY7kpSR1lUcHS4OYm1zA0zrLyuqav6S/5wM1mDZ8wrY5I3AOAztwtZQM/MEzrE7yn8GRF2xS4yoWIgLoJUjhkmlcoPXENH6OqGheijjPTBQSYiCWO0frlXgsf7jWMHQRjcsIq8UveuRdmD6E/Jfq0GaJwHyNokdkkLaIp8N21RhnbwvwJ7b/oPASO6TZOf45+a+UvkTDLHSVecpFb/VM8MJhTHgtDKAUXzAKKBs/OdV/2MV4zgBfkvetjL3EWU0PkCCDV0Z7dJTXs6xUp0cA9jtfjs1TStn5yXtEGssBG9l9hMok+rQdPueK4rXrGRDLLQ46xkREfc4vgRjYkP91Ioy2RnlQ7KgUsRdzHKklmTudW9LNsF9aGeetVwpaYS+pXqf0Y51BbY7+eQSWOxlIIIcUYV4/IixvwjuTD2NUj0Ib7pPhgXho1FgW+Hu8qXDeRp7tXm2L2EROveo0U3zrd/0tFW4zG9LUOrNNYrAZysafqlzoF95h9QV7dNy8sX5YJKBMca+8XzXbqU3YbAc0kGFy0nxWKhGgB6jKcbO+QyJwFaXBilVf7wLepyH5QA9rd96i7WUXWuFxXtQLNc5/bc8XxTBCX2HWx/yjf7dURogSTcGfqcqXh4ZBZPvifbx9FbtL73+prKB4KtXdPbAx4bfPdI3FX5cAE0Gh2KNyVA14qSzIBmD5liyzieldQHbbFF8rLRi/wX41e94ok8Gw/MqPG7Vy1c2CVVO4SV39xjIusXxPmhvOhcP+uaEy2XlVau80XX8VLioc/C+a4s8UMAmsKjanSF/Rgcbe5h0djqc48g1m4J0QF9PW2mOrba1xVTuOgK8RWv5cN350rUJeGpoiBTh/uYIj4D5xD33Yr05HyzFV2e1o6A8IbwBPUw4kUJRAPYt8lHYQfcNhtyPPP+PAwCmg1C2V8JVC7dvkeKsGjSeSiWxDbQDQCQObjNbyBhXOOkMOLQvDgKe7eHdzICSZf8Ije4a3UZGYOhtw8+C5+mmfVFr7SNTmONbMcfssx6NdSwRaO0a3HFOSL/N5z/UEp/ZEcXJHO3dh4joDqPffZlRv2bmCGd0zy0poBXcX7xKMLRgbLKXuZO9+wSje3dsrt+izKys/ri1F7nDYEWLF8G6iOFbj016yZpFjccWPX/6DTZW7z85pa65wOy/PU+rte8j9CKF8sA6OzHoM/hRdCvirYz0ZKxOc9/NJdmV71gDJ/u610ZhsEaU+runS0qy19iOW9Nnz7VBmn8Ucn/UN4l719E6RF0nTyq7CF58WdnJJZGBywZlNscg14klG6uWW4ITqdO0rVUeWapj6YN4KVTr8/dNaag7V7drzeagyX9+QbYXD0q7wmyoi7BZQTVLxkml+HHG3PD8uj0YPBX7JWtoqfM67qFDzg9nnTiKnahqKZb8IMTVyz1BpO5wRwK0Mw3DUNEMWwHMihPXl/xX64000ipLd+wh9bvD3LWnlEe+U5QDLLuBMsZe8Zyo0Rw3r9Ajw/WNCW7by8LrZxF/Iw6+iKBGgv/GvFroeWVSri9OFdmA/HxkAXo/C9P+A0xwUzmxB9VIyH5sL09gJ9VaYEfBJib2BL60SSPl7Ws/8gT1aladh3frhwAD5DrOskDzAbEMxXnQYFCKmj0uysExNdoAidYxrAXbcnLeuS4CcNt/EfWfbVkmAqS3EjcctB7Q44sglUHMOgXNfTgffhUTS91dvZSzz5jCcljoaYN7iIxlNockxf9BZZziGtf0DxfpFz3y8dusxc8JJzmb3kiw4QYUkDFeL6yZQWeqjJeSmVf7rGJGwxy1bGuVVRnH1pPQTo5oEN7k6M4yOBWA7meQYNRBt+re59pbyU4lZa8tWLubzTGWUox4gqVrIrAAz5hwS221eSVu+SzUvWYCs2p+aQg1i1Y+gGIAVcqotyCP0t8LNePr49YuwjNchXRmvM89atfBM+G+JeVOeUKUUF9nbbdSNN32YoqedW0ISldBsBuOvj0dpewdnBKzLCbG1HTp238uq/d/2h5oeomP5HezD4oTkmAtYNKX1BUrCszPv6MOR7ZE7LRAXQI+AQ5CFWy/y8HO9sfTeEK0kjvRiFCkq43Km9yicT5jIt3vhheGEN6d8TSIXlbz1aASOFJdFkV/wwCfnIkQrf/Kvwdwn0Wojs/EKkQdslB68JFHP+rttkizbPX2tfYbped1/DMuO6MbX64JuxRrMLChyOF9RF7tS8iqVUoLncawSuef8MmJHC7F6E7qW3m6Ch9mEDovXxeLeVhKmMRxXOUiyB2T6C63FB8eQrcE/5UnX79XB9Des0T4MyqLNSHbwaGzM09tVzOy72scH34FW0FmE2OeSLDUzVl2u4fsVqj6fT+MTDtOPc7iCpQNgq7Kfi9GyN1dFDZpqQxHAnxZztOZmjPTEy1U+0jo3DkDkl5HSJ21qa7s332W0ymDembw7jgc/sLyvl3ttK4hn1XhmicfTbir92aSIWTfv9AtHDormMurMhHnionDL9dMHtSF8fR07SYY8yCo/J9v6yQDOtCO/qtfjzDKyeP/lq7ud7sR+SwqaZNEy5rOny//q5m9efmFD32S6clY6LbOZmlorg9xg/lwsvddDrkx6g/sMG6okfMSnTZBhmxFqOG9r1K/YI2FLtwrOu0qs/n3Tw18AWRU5YqT1Z5Dtf72oJW2Y/2dtB26K1l6iD3JQ21pHiK5SaYqcewAFNNV5nc6F+Mjd/RMnoMQq7R/zNz68+V8HyA14XSYmu/sTlS0lig4vkyGIA902hlcfvtulzH3d/d91+tLdv19mEUOQ5QOC4zzUdEg6f5L9gTiz/bbluYBiJ3wksifgfRwmm81bt1aWF8y41AsIq1MiDphg1yNIjhQWdshS15uzvPYBc7LLJBGettmkSQ5uW+2w6HwdpaidtxQNZO02592V84MA7w6y5YFPl15TLaQSLhxBZpMlPN4NuU4fuhGKHDZ/cqb+RT7gRBvNwosynp5kYl2J7iECH9/BGsy+vYiLeUDcEGcvmOaauefhzEjvjub2wu8DHX102csrz0CSk1QGK+BjVmhTGjBlSjsAUV2YABYJvXq215F86SBS5nk4NrFsRRCkrWjF4nYr4CCb3ChWzpVvmWLBSfcbPP/4RpJLR2Yv7BYVjBOvsZCOCnKt8fG4JXus845iVbVmDgHRt5MGrv0IxPmz97liDXDvLBwG8i3KfOQjhGVzKGjWW6yMutGIIxwsR6xomyy61ip9Ul2C7Je6/FT7D6chRGeITNAYKbI3kKFI0omHJKQ0GFQ3KkNC+5cjVhcPXfHJTEB9l+/A3V8uNQ7hvoVYVipTaETwVbee39LBaDKwpGerdzfDo7LnPtAzvjuFCyeLYfUy45ZE5dEkNrCtGS4CQOd8jwPhypaDHCSVNrM4v/V46yp9Qqm9sN6etDM4Uvm2Lb/wTWqS7mNlEk3vXz2VKSTmIX0okeYq+L54VTKdTDzhF9FYLoZH3oDmF0HQJBl/pLlmJ0G9FIOgg0uJKAuPgP+HWLJq6SCg2mB/BsoSadOm5VDWEo6WPAlJnV+ui/gvfb824r7iebaKTmxLzbbYcGxIgl5QPzLtvyIMiF/BhB7jZTtzQCpcm6v8OHRgl1ECRJgc/5SquGP+49zlFN203o5rXr1ddxwOgA9h8ABBEe/yOrmvvXexb5/tUb4DqYmYM30MXq39QuFhUwubyAv06SckGPwr5x4TwfmdXSDuvIsBLCOZ9Wbh1OYBfCKqZBC6LH0EKj/fDWP1vTN2XDD8tJzanKvn3kxZ7G26RmbPdV5pVa5REd5TYkJgVg2UbSVycFB4Fi6dLfD5gAUG9IGbUrE/pVv7KpazbfMecnUX6UAY=</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></EncryptedAssertion></trust:RequestedSecurityToken><trust:RequestedAttachedReference><SecurityTokenReference d4p1:TokenType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0\" xmlns:d4p1=\"http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd\" xmlns=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"><KeyIdentifier ValueType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID\">_1e54342e-1deb-4d46-b58e-2e6fecb62ca2</KeyIdentifier></SecurityTokenReference></trust:RequestedAttachedReference><trust:RequestedUnattachedReference><SecurityTokenReference d4p1:TokenType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0\" xmlns:d4p1=\"http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd\" xmlns=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"><KeyIdentifier ValueType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID\">_1e54342e-1deb-4d46-b58e-2e6fecb62ca2</KeyIdentifier></SecurityTokenReference></trust:RequestedUnattachedReference><trust:TokenType>urn:oasis:names:tc:SAML:2.0:assertion</trust:TokenType><trust:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</trust:RequestType><trust:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer</trust:KeyType></trust:RequestSecurityTokenResponse></trust:RequestSecurityTokenResponseCollection>\ni hope this makes sense... :confused: \n. Turns out to be a configuration problem that was left at this point.\nThanks again for creating this! My setup now works.\n. sorry about the radio silence. I'll test. Probably tonight.\n. started looking, no conclusion yet. probably wont get back to this before the weekend, but will let you know when I do.\n. you are right. it works on master too.\nI'll close the issue. And again say thanks a lot for your help!\n. ",
    "mdelgadodiaz83": "Hi ,\nI'm so sorry for my late reply. About your response, i'm using the claimstranformer for perform the claims normalization, but when i choose google like a IP for example, after login with they, in my Identity server doesn't throw my claimtransformer .\nWhat am i doing wrong???\nThanks so mutch!!\n. Dominick ,\nOh!!! thanks , with that i can normalize all response token obviating the provider. I had not found this point for me is a little bit confus the location but it's ok.\nThanks , thanks!!!\n. ",
    "pargatchhina": "Thanks for the reply,\nWe want this new API not only used by our on iPhone App but we also wants to give this API to our users/clients who can consume our data and can build their own App/website.\nOur website/APP should be able to see everything (FULL Access) but our clients should only be able to see some set of data which we authorize them to see it. I am new to oAuth and I don't know how exactly I should approach to this scenario.\n. ",
    "JoeSimmonds": "Thanks for the reply, as I understand it the RFC mandates an invalid_grant in the error field of the response but allows for another optional field called error_description which I think is intended to allow consuming clients to differentiate between the reasons for the failure.  Looking at the source for  Identity server I can't see anywhere that the error_description field gets populated but I thought it worth asking if identity server supported it as an option.\nI think my question was more around what Identity server supports from a clean install than what the OAuth RFC allows for.\nthanks\n    Joe\n. Looking at the code I can see the problem with implementing this.  I'm not sure how other systems manage this internally. Within a windows network there is obviously feedback to the user when their account is locked out but I'm unsure whether this comes directly from the authentication or some other mechanism.\nI'll see if I can find out how this is handled in other systems.\nWhat information would you be concerned about leaking? Would it be the fact that the user account  is locked or simply the confirmation that the username is a real account?\nJoe\n. ",
    "angularsen": "According to this article one motivation for using IdentityServer is to provide ACS with a login based on user data in SQL Membership.\n. Thank you, simple and to the point.\n. I don't think so. I log in via Facebook in the HRD endpoint then I log out via the HRD end point.\nHere is a sample of signing in and signing out:\nRP: myapp.com\nIdP: id.myapp.com\nRedirect to HRD endpoint to log in\nGET 302 https://myapp.com/Licenses\nRedirect to: https://id.myapp.com/issue/hrd?wa=wsignin1.0&wtrealm=urn%3amyapp&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fLicenses&wct=2014-03-12T21%3a12%3a06Z\nGET 200 text/html   https://id.myapp.com/issue/hrd?wa=wsignin1.0&wtrealm=urn%3amyapp&wctx=rm%3d0%26id%3dpassive%26ru%3d%252fLicenses&wct=2014-03-12T21%3a12%3a06Z\nLog in with Facebook\nPOST    302 https://id.myapp.com/issue/hrd/select\nRedirect to: https://www.facebook.com/dialog/oauth?client_id=163750776990052&redirect_uri=https://id.myapp.com/issue/hrd/oauth2callback&state=3TfET5qEplVfJA&response_type=code&scope=email\nGET 302 https://www.facebook.com/dialog/oauth?client_id=163750776990052&redirect_uri=https://id.myapp.com/issue/hrd/oauth2callback&state=3TfET5qEplVfJA&response_type=code&scope=email\nRedirect to: https://id.myapp.com/issue/hrd/oauth2callback?code=XXXX#=\nGET 200 text/html   https://id.myapp.com/issue/hrd/oauth2callback?code=XXXX\nPOST    302 https://myapp.com/\nRedirect to: /Licenses  \nLogged in to app\nGET 200 text/html   https://myapp.com/Licenses\nSign out\nPOST    302 Redirect to: https://id.myapp.com/issue/hrd?wa=wsignout1.0&wreply=urn%3amyapp   https://myapp.com/Account/LogOff\nGET 200 text/html   https://id.myapp.com/issue/hrd?wa=wsignout1.0&wreply=urn%3amyapp\nGET 200 image/gif   https://myapp.com/?wa=wsignoutcleanup1.0\nRelevant settings\n``` xml\n\n\n\n ... \n\n\n\n ... \n\n\n\n\n\n\n ... \n\n\n ... \n```\nMVC controller\n``` c#\n        public ActionResult LogOff()\n        {\n            WSFederationAuthenticationModule authModule = FederatedAuthentication.WSFederationAuthenticationModule;\n        // Clear local cookie\n        authModule.SignOut(false);\n\n        // Initiate federated sign out request to the STS\n        var signOutRequestMessage = new SignOutRequestMessage(new Uri(authModule.Issuer), authModule.Realm);\n        String queryString = signOutRequestMessage.WriteQueryString();\n        return new RedirectResult(queryString);\n    }\n\n```\n. Yes. I just took a look at WSFederationController.cs and there is a check for whether wreply parameter is an URL or not. \nc#\n// check for return url\n            if (!string.IsNullOrWhiteSpace(message.Reply) && mgr.ContainsUrl(message.Reply))\n            {\n                ViewBag.ReturnUrl = message.Reply;\n            }\nAnd in SignOut.cshtml:\nc#\n@if (!string.IsNullOrWhiteSpace(ViewBag.ReturnUrl))\n{\n    <p>\n        <a href='@ViewBag.ReturnUrl'>@SignOut_cshtml.ReturnToRP</a>\n    </p>\n}\nShould wreply have been my return URL or is it correct that it is my realm value (urn)? \nIf the former, what configuration error does that indicate?\nIf the latter, where is the return URL retrieved based on realm?\nThe only place I have configured an URL is in the RP configuration on IdSrv. The RP app's web.config only has urn values in it, no URLs to itself.\n. So this sounds like a configuration error on my part. Do you have any idea on what that might be? \nIn both Authorization Server and Identity Server I see mostly urn values being used for realm/audience URI, similar to mine in the config files. I can't spot the difference. Any pointers would be welcome.\n. ",
    "levia7han": "I was unable to find a solution. I still believe that it could be a setup issue on my end. I am calling adfs and validating in my code. But the test project still errors out on me. \n. ",
    "clintirving": "I made a fix for this - it involves storing the SigningCertificateThumbprint in the IdentityServerConfiguration DB instead of the SigningCertificateName.  Also, the SELECT list now contains key value pairs of friendly name and thumbprint.  I'm happy to push the commit.\n. Hmmm... I can understand your reasoning behind the decision to use the subject-distinguished-name (I have gone through the pain of renewing certificates and changing corresponding thumbprints in the past), although I suspect the good-intentions with this decision may have caused a larger problem.  The issue I've logged here was actually in response to a more sinister issue that I came across in IdentityServer.  My scenario was as follows:\n1. Create a self-signed certificate in IIS\n2. Configure IdentityServer to use this as the signing certificate.\n3. Add the thumbprint from this certificate to the trustedIssuers list of all interested parties.\n(Everything at this point works as intended)\n4. Now...  create another self-signed certificate in IIS.  This certificate gets the same subject-distinguished-name as the other certificate.  (Why would I possibly want to do this?  In my case I wanted to be able to use this new certificate to authenticate a specific user in IdentityServer...  but equally so, some other application/developer might want to add another certificate with the same subject-distinguished-name on this machine for an entirely different purpose as there's certainly nothing to prevent this from happening)\n5. When IdentityServer goes to retrieve the certificate by subject-distinguished-name, depending on the iteration through the certificate store, the old self-signed-certificate may be returned by the Find method (which happened on one of my dev machines)...  OR the new self-signed-certificate may be returned by the Find method (which happened on another of my dev machines).\n6. If the new certificate is found in step 5, the STS returns tokens signed with this certificate...  which has a different thumbprint to that configured in all of the trustedIssuers elements and thus none of the interested parties actually trust the security token issued by the STS.\nPerhaps there's another way to fix the above issue, but I do believe the root issue lies with the explicit decision to use the subject-distinguished-name instead of the thumbprint.  Here's a summary of my reasons:\n1. Thumbprints are used elsewhere already as the identifying attribute of a certificate.  It is the lack of consistency with this that led to my above issue.\n2. Perhaps a moot point, however, you can only create self-signed certificates in IIS with the same subject-distinguished-name - which makes things a little harder to set up multiple certificates if IdentityServer imposes a restriction that no other certificate may have the same subject-distinguished-name as the one configured for encryption (or decryption) in IdentityServer. yes yes - there are other ways to create certificates that don't result in this restriction that IIS self-signed certificates have\n3. There are a myriad of ways that a second certificate with the same subject-distinguished-name could end up on the IdentityServer machine.  This makes it very hard to enforce the above implicit restriction that IdentityServer imposes.\nAs I said though, there may perhaps be another way to fix this issue, so please let me know your thoughts.  Thanks very much for the assistance.\n. Thanks for getting back to me on this issue Dominick.  I'll go down the path of using makecert for now for my test certificates, as it sounds like your decision to use the subject-distinguished-name is there to stay.  As for the installation of certs - I couldn't agree more that there should be a very formal process - and on servers within a controlled environment this certainly should hold true.  However, in my previous organization we sold server + client systems, and the customers always found new and exciting ways to break the software with what they installed on the same machines - thus I tend to red-flag issues like this.  May I suggest that you at least add a warning-message or some indication that the signing certificate must have a unique subject-distinguished-name to the configuration UI?\n. ",
    "Dan7el": "Actually, after further investigation, the way to fix this is as follows:\n1. Download the new .NET Framework JSON Web Token assemblies from Microsoft:\n   http://msdn.microsoft.com/en-us/library/dn205064(v=vs.110).aspx\n2. Add the System.IdentityModel.Tokens.Jwt as a referenced assembly.\n3. Add \"using System.IdentityModel.Tokens\" to the MainWindow.xaml.cs file.\n4. Modify the CreateTokenButton_Click(...) method:\n   var tokenString = new JwtSecurityTokenHandler().WriteToken(token);\ninstead of what it was prior.\nThis will build.\n. Well, it doesn't run correctly. There is a configuration issue. Once I fix that, I'll pass it along.\n. I got it running. I don't know about setting up a private repository. I'm not ready to pay for a GitHub account just yet. Here are the instructions for fixing the sample:\nSteps:\n1. Open the Package Manager Console.\n     a. Type \"update-package\".\n     b. Let it finish.\n2. Under the Repositories folder, open ConfigurationRepository.cs.\n     a. Right-click on IConfigurationRepository. \n     b. Select Implement Interface --> Implement Interface.\n     c. I will add the accessor for \"AdfsIntegration\".\n3. Add a reference to \"System.ComponentModel.DataAnnotations\".\n4. Open MainWindow.xaml.cs\n     a. In the CreateTokenButton_Click(..) method, change the following line from:\n             var tokenString = new JsonWebTokenHandler().WriteToken(token);\n          to\n             var tokenString = new JwtSecurityTokenHandler().WriteToken(token);\n5. In the App.Config file, make the following changes:\n     a. Remove this line:\n <add type=\"Thinktecture.IdentityModel.Tokens.JsonWebTokenHandler, Thinktecture.IdentityModel\" />\n     b. Add this line in the same location:\n <add type=\"System.IdentityModel.Tokens.JwtSecurityTokenHandler, System.IdentityModel.Tokens.Jwt\"/>\n. Just close it. Thanks.\nDate: Tue, 6 May 2014 02:14:51 -0700\nFrom: notifications@github.com\nTo: Thinktecture.IdentityServer.v2@noreply.github.com\nCC: danvdw03@hotmail.com\nSubject: Re: [Thinktecture.IdentityServer.v2] InMemoryHost Sample Doesn't Build (#631)\nDo you want to fix it, or should I close the issue?\n\u2014\nReply to this email directly or view it on GitHub.                  \n. ",
    "DinoDen": "Thanks Dominick , I have investigated that and I found that the controller which you discussed is present inside the Thinktecture.Protocols DLL , if I am right I have to go and change there . Apologies if I am wrong , I have observed many Q&A on dynamic HRD or domain based HRD in Thinktecture Identity server issues List. It will be great if we have this feature in the next  release as a enhancement or new feature so that from the control panel of Thinktecture admin can select the Option for Dynamic and Static (User Selection) HRD. \nSo that in case if ThinkTecture is coming up with new versions we don't need to go and change there every time. \n. thanks for considering it as a enhancement....\n. ",
    "wileyveteran": "Is there a W8 Home Edition? I thought there was Windows 8 vs Windows 8 Pro. Windows 7 never supported windows authentication in Home edition http://technet.microsoft.com/en-us/library/cc753473.aspx \nso I assume the non Pro version of Windows 8 is the same\n. .. and while this is not an authoritative reference, the comments here suggest this assumption is correct http://blogs.msdn.com/b/david_burgs_blog/archive/2013/11/05/installing-adding-iis-windows-authentication-feature-in-windows-8.aspx\n. ",
    "huysentruitw": "Sorry to wake this old post, but when using the wsfed metadata endpoint (using OWIN Security WSFederation authentication middleware), only the wsfed endpoint will be used (because that's the endpoint that's listed in the metadata xml file). However, the wsfed endpoint ignores the whr parameter, is there a reason for this? Also, any solution without having to manually configure the token endpoint and signing certificate on the middleware?\n(Remember this tweet? https://twitter.com/BrockLAllen/status/710650811492257792 :) )\n. I've hacked the code a little so I can configure the WS-Federation endpoint with additional ?whr=whatever parameter. Then this value gets extracted and used to set the message.HomeRealm property during sign-in.\n. ",
    "Ticalie": "Hi,\nThanks for your response.\nI'm using a self-signed certificate on the STS - shouldn't that do the trick?\nAlso, I find it kind of strange, that the only claim, I'm not getting is the nameIdentifier; the SAML2 token does validate.\n. I need it for unique identification of a user. As far as i know, the nameIdentifier is the only parameter, which provides the possibility to do that?\n. Cool!\nThen problem occurs in my backend, where I need to bind a STS users to a local db user. \nI do the check:\nif (!incomingPrincipal.HasClaim(x => x.Type == ClaimTypes.NameIdentifier))\n   throw new SecurityException(\"Unauthorized\");\ndbAccount.GetClaimsPrincipal(nameIdentifier);\nThe plan is to allow several providers (i.e.: IdSrv, Live, LinkedIn etc.) thus is would be great to be able to handle all cases (including ws-trust) in the same way.\nAlso: Thanks for the quick replies!\n. Works perfect! Thanks for your time!\n. ",
    "jwpear": "Found solution here: https://github.com/thinktecture/Thinktecture.IdentityServer.v2/commit/883dc01886b57a25babee9608e2ec247217bc857\n. ",
    "israelpereira": "Can anyone help me? Please ?\n. it is not an use case.. but it can happen.. because the user can open multiple tabs of login page ...\nNow if the user do this, an error page is displayed but I think it is not user friendly.. \n. anyway, I used this solution, adding a new filter to idsrv, and it worked perfectly to me.\nhttp://stackoverflow.com/questions/9881157/mvc3-antiforgery-token-multi-tabs/18596994#18596994\nThanks.\n. ",
    "adriatic": "Thank you Dominick, My problem was in \"manually incorporating metadata\ninformation\" into Authentication Server's web.config file(s). This was\nreally a trivial issue and I am sorry to create some havoc with you and\nyour partner, instead of learning more about how your software works.\nNik\nP.S. How about adding the ability to to Authorization Server to process the\nmetadata file created by Authentication Server?\nOn Tue, Apr 1, 2014 at 10:35 AM, Dominick Baier notifications@github.comwrote:\n\nClosed #645https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/645\n.\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/645\n.\n. \n",
    "mmercure": "I'm not upgrading, it's a new project started today, simply using Thintecture IdentityServer v2 and MembershipReboot from sample. \nDo I still have to run that script? \nIt's not included in the existing migrations of Membership Reboot?\n. It's working fine the first time I run the application. It creates the database and everything seems to work fine. The problem occurs when Application_Start runs again. and if I remove the static constructor in IdentityRepository, I get :\nThe model backing the 'DefaultMembershipRebootDatabase' context has changed since the database was created. Consider using Code First Migrations to update the database \nI've only added the project MembershipRebootUserRepository to the Thinktecture.IdentityServer and changed configuration to use IdentityRepository. Still using SqlCE.\nBTW Thanks for the quick reply.\n. Works fine if I use the script 'v7_schema.sql' to create the db, but still... it should work using migrations with the sample.\nThanks\n. Yes I have a temp fix.\nbut looking forward for a fix in the built-in migrations\nthank you.\n. It works\nthanks a lot\nOn Wed, Mar 26, 2014 at 10:24 AM, Brock Allen notifications@github.comwrote:\n\nOk, this has been fixed and I updated the sample here with the updated\nNuGets. Thx.\n\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/646#issuecomment-38689070\n.\n. \n",
    "nhowerton": "Hey Brock, thanks for the response. Whether the link will be shown is going to be based on whether they are on an internal network, so I'm thinking it will be based on the user's IP address. As far as how those users want to login, that will be a choice that they make. We present the user a link on the first page of login. They can click that link (which should redirect them to ADFS, where they are logged in using the domain\\username they used to login to the machine they are at) or go through the normal login process. Does that answer your question?\n. So I've done a few things for research. I've setup my Thinktecture solution as a relying party in ADFS (and setup ADFS as an Identity Provider in Thinktecture). I've also played with the HRD functionality. How do I tell ADFS to post back to Thinktecture so that we can transform the claims ADFS returns and then redirect to the relying party application for Thinktecture? Would it post back to the HrdController in Thinktecture to then transform the claims and generate a token?\n. Dominick, thanks for helping me out. I really appreciate it. I know that you and Brock have your own things going on so I appreciate you taking some time to help me understand Thinktecture.\nI've run into some certificate issues while setting up ADFS as a relying party so I was wondering if you could give me some explanation. \n1. Is the IssuerThumbprint that is defined with the relying party used for validating that the token received from the IP actually came from the IP?\n2. Upon return to Thinktecture from ADFS the HrdController is trying to decrypt the token, however, it is using the certificate defined in the KeyMaterialConfiguration table. Is there only one decryption certificate for the entire Thinktecture application? (I know I can extend the framework to handle multiple decryption certificates, but I want to understand the framework before I start making changes to it).\n. 1. Ok that makes sense. \n2. The more I thought about it the more I realized that question didn't make sense.\n. I've run into an issue. I keep getting the following error after I have logged into ADFS and it is redirecting back to the Hrd endpoint in Thinktecture.\nID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. \nTo accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\nAfter looking into the error, I've added the following configuration into the <system.identityModel> section:\n<issuerNameRegistry type=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\">\n    <trustedIssuers>\n        <add name=\"xxxx\" thumbprint=\".......\"/>\n    </trustedIssuers>\n </issuerNameRegistry>\nHowever, I'm still getting the above error. Does that mean that I don't have the correct issuer name? Is that the Federation Service Identifier from ADFS or is it a different value? \n. Hey Dominick, sorry for the delayed response, I got pulled onto something else so I haven't gotten to work on this in awhile. The reason that I added the configuration from my previous post is because I got the follow error. \n\nSystem.IdentityModel.Tokens.SecurityTokenException: ID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.\n\nAm I missing some other thinktecture configuration? Thanks again for all your help. \n. Any updates on my previous comment? \n. ",
    "cdarrigo": "nevermind.. I screwed up the app pool and had it running the wrong version of .net\n. is there a way to disable the SSL Requirement while in development mode?\n. ",
    "sonnyk22": "I did set up the SSL on the hostname as instructed in the Setup Video.  it gives me the same issue when I browse to https://{MachineName}/idsrv.\nwould you give me an example of this DNS record that i need to add?\n. I found out where the issue was.  A few weeks back I installed 64bit of the OpenSSL on my machine; I just uninstalled it, and I am glad to say that the IdSrv is now working.\n. ",
    "pollax": "Ok, so I found out the cause of this.\nMySQL and EntityFrameworks migrations do not get along very well. Specifically, the MigrationHistory table has a primary key that is too large for MySQL. This can be handled by overriding the default key length. This is explained here: http://www.asp.net/mvc/tutorials/security/aspnet-identity-using-mysql-storage-with-an-entityframework-mysql-provider\nHere's the CodePlex issue: https://entityframework.codeplex.com/workitem/536\nTl-dr; If you want to use MySQL, you'll have to add these classes to your project:\n```\npublic class MySqlHistoryContext : HistoryContext\n  {\n    public MySqlHistoryContext(\n      DbConnection existingConnection,\n      string defaultSchema)\n    : base(existingConnection, defaultSchema)\n    {\n    }\nprotected override void OnModelCreating(DbModelBuilder modelBuilder)\n{\n  base.OnModelCreating(modelBuilder);\n  modelBuilder.Entity<HistoryRow>().Property(h => h.MigrationId).HasMaxLength(100).IsRequired();\n  modelBuilder.Entity<HistoryRow>().Property(h => h.ContextKey).HasMaxLength(200).IsRequired();\n}\n\n}\npublic class MySqlConfiguration : DbConfiguration\n  {\n    public MySqlConfiguration()\n    {\n      SetHistoryContext(\n      \"MySql.Data.MySqlClient\", (conn, schema) => new MySqlHistoryContext(conn, schema));\n    }\n  }\n```\n. ",
    "pantonis": "Currently Im debugging identityserver. Once I remove authentication header I dont get 401 status. I can see that request reaches Post action of OAuth2TokenController with the parameters that I pass but it fails on the ValidateClient like this case from the link https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/590 \nFrom what I understand it is not authorised. \nIf I use authorization header with the clientid, clientsecret it does not even reach this point\n. To better understand. Client credentials are ClientId and Clientsecret right?\n\n. Im curious to know how these credentials are authenticated when calling the identityserver\n. I put a breakpoint but the request does not even reach the Post action. I just get \nhtml PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"\n\n\n\n401 - Unauthorized: Access is denied due to invalid credentials.\n\n<!--\nbody{margin:0;font-size:.7em;font-family:Verdana, Arial, Helvetica, sans-serif;background:#EEEEEE;}\nfieldset{padding:0 15px 10px 15px;} \nh1{font-size:2.4em;margin:0;color:#FFF;}\nh2{font-size:1.7em;margin:0;color:#CC0000;} \nh3{font-size:1.2em;margin:10px 0 0 0;color:#000000;} \n#header{width:96%;margin:0 0 0 0;padding:6px 2% 6px 2%;font-family:\"trebuchet MS\", Verdana, sans-serif;color:#FFF;\nbackground-color:#555555;}\n#content{margin:0 0 0 2%;position:relative;}\n.content-container{background:#FFF;width:96%;margin-top:8px;padding:10px;position:relative;}\n-->\n\n\n\nServer Error\n\n\n401 - Unauthorized: Access is denied due to invalid credentials.\nYou do not have permission to view this directory or page using the credentials that you supplied.\n\n\n\n\n. Yes that was the case. You could be a great bookmaker :) Thanks a lot for your help\n. ",
    "mciureanu": "Sorry, I wasn't very clear, but I was talking about SOAP HTTP bindings, and I was thinking since it's HTTP, why not call the service with a bearer token the same way Web Api services are called (with OAuth) instead of the whole WS Federation stuff... Is it stupid to ask that?\n. Thank you. For now I am investigating AuthorizationServer, since I need client credentials flow, which I understand it is not supported in IdentityServer... \n. ",
    "waleedBekheet": "awesome thanks! we have made some changes to the identity website so upgrade might not be straight forward, any advise on just merging that functionality?\n. ",
    "truonguit2010": "Hi,\n- What is the account I can use? My english is not good. So I do not know.\nThanks.\n. Hi, my stupid question. I solved it.\n. ",
    "ianb00th": "Thanks. That worked a treat.\nAs soon as I added the symmetric key to the RP in identity server and debugged the code, the \"alg\" parameter in the JWT had automatically changed to HS256. Setting the value of \"jwt:SymmetricKey\" in the web.config appSettings, which is used by Auth0, caused the token validation to pass within the service authorization manager.\nHope this information helps someone else as it's been a real headache getting this working.\n. ",
    "jonathancassar": "Same issue for me, using an adfs on windows 2012 r2 latest version in azure vm role. scenario is using IdSrv as a Relying Party (when using hrd in IdSrv)\n. ",
    "dhtek": "How can I do that ? Have you got an example ?\n. So, if I understand what you suggests me, I have to create a new WCF Service with an wsFederationHttpBinding endpoint like this the service will receive my ADFS token then the service enriches this token with the desired claims ? \nSorry if it's a stupid question but it's new for me...\n. Yes it's working great now ...\nThis is the code that I used to configure my endpoint but can you tell me how can I use the encryption certificate defined in the RP configuration because if I have 2 different RP with different Encryption certificate my code is wrong ?! \n\nThanks\n. No problem... I found another way to achieve this, I looped on all RP's and if I find a encryption certificate I add it to the behavior.\nDo I need to set the IssuerAddress and the IssuerMetadataAddress in the IssuedSecurityTokenParameters for my custombinding ? \nBecause it works fine without setting them. By the way, the security could be compromised ?\nI have already define the trustedIssuers and audienceUris in the identity.config file.\n. Yes everything is Ok . I released on production :)\nThanks for your help !\n. ",
    "adamjbradley": "Apologies, just noticed this. Yes, it supports WS-Fed, but I'm trying to work out how to achieve the login-flow listed above. Like I said, I can do this with SAMLP - WS-Fed is SP initiated and doesn't allow the IdP initiated flow mentioned above - and I'm really, really keen to be able to get this working in a non-Federated namespace. Any thoughts/suggestions on if/how this might be achieved?\nThanks in advance!\n. No problem, the quest continues (:\n. ",
    "mithun-daa": "No, the error is by the application - the one that is inside the virtual directory. I also tried to create a new federationConfiguration section with a name and override the config but the FederatedAuthentication.FederationConfigurationCreated never gets fired.\n. No,  it's a self signed cert. \n. It works just fine if I point to the IdSrv from a MVC app. Exception only when i use OWIN.\n. Not get any trace info. Maybe it is happening even before all that kick in?\n. I can.  I have a regular MVC app that works just fine talking the same\nIdSrv. Just doesn't work if set up as OWIN/Katana pipeline.\nOn Nov 8, 2014 8:28 AM, \"Brock Allen\" notifications@github.com wrote:\n\nGood point, @iampez https://github.com/iampez -- see if you can even\nbrowse to the federation metadata in your browser.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/810#issuecomment-62259238\n.\n. \n",
    "ChewYoungPen": "Sorry for the delay in the update.\nYes, you are absolutely correct. Nothing wrong with identity server. I replaced the modified repositories with the original and found config issues with ADFS.\nResolved those and re-added new repositories and everything is back to being groovy!\n. On the New Relying Party screen. Click Browse, select the certificate and click Create/Save.\nI have a machinekey in the web config that uses validation=\"SHA1\" decryption=\"AES\". Could that be connected?\n. Thanks - yes. Membership is being used by those that don't work, entirely different (external) method for those that do work.\nI'll check and report back.\n. ",
    "gallagherg": "Yes, you can close the incident.  I will refer to it as I build out the Idp\n. ",
    "zaparker": "Thanks for the feedback. We are going to try some form of credential caching and a plugin system for adding new grant types (such as refresh). \n. Thank you for the quick response,\nLooking through the AdfsBridge code it appears the only ver that it uses for those steps is the ADFS Encryption cert. I had to modify my version of the IdServer site so that the ADFS cert is chosen from the local certificate store via a drop down. It then uses the same code for grabbing the cert that you had for grabbing the signing cert from the personal certificate store. Are there any special permissions I need to set for the app pool identity in order to get all the pieces it needs from the ADFS cert? Since that cert is public key only I wouldn't think I need any other permissions besides access to the store itself, which I can confirm it has since the IdServer signing cert can be accessed and used just fine. Are there any more trust steps that I may be missing?\n. I'm embarrassed to admit that I found out the problem was just a matter of different certificates being used. ADFS was expecting a temp cert I had set up before, but IdServer was using a newer cert instead, so the issue step was failing. \n. ",
    "jonespen": "Ok, thanks :)\n. ",
    "darrenfurr": "Hey Brock -.  \nI probably should have been a little more specific.  My initial plan was to just extend the existing Repositories without having to modify the source.  Based on what you're saying, it sounds like I have no choice, but to modify the source.\nWould you recommend just removing the IUserRepository & IUserManagementRepository mapping from RepositoryExportProvider?\nThanks again for the help on this,\n-Darren\n. ",
    "lubushyn": "Unfortunately can not find info in wiki about SSO. How to configure this thing.\n. Yes. Thank you.\n. ",
    "galaxyware": "turned out was simple as turning the application pool to integrated. solved :)\n. ",
    "TheJayMann": "As it turns out, WebSphere and TAI does not support WS-Federation.  An in between layer has to be installed.  IBM actually provides such a middle layer, called Tivoli Federated Identity Manager, but, the IBM support, instead of telling us that this is the product we need for this integration, simply said that TAI doesn't support WS-Federation.  Right now we are evaluating two different products, Tivoli FIM and Ping Federate.  Anyway, this question is now answered.\n. ",
    "davidhaner": "Thanks for the quick response!\nOn Thu, May 29, 2014 at 2:37 AM, Dominick Baier notifications@github.com\nwrote:\n\ndownloads are here now:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/releases\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/710#issuecomment-44502605\n.\n. \n",
    "sidhu688": "I am having the exact same issue and its driving me nuts..  Can you please detail the resolution that you have since I am not able to understand this statement \nThis was resolved by telling IE to present the cookie by adding the custom header \"\" into the STS web config.\n. ",
    "mtuplin": "Indeed this is to redirect the user back into the RP so I will look at the context parameter.  I assume this context will get passed to the IdP, then back through the gateway to my RP where I can pull it out using the authentication module?\nGoing down that route it will be fine for me to use the registered ReplyTo URL in the RP config.  Have I done something wrong as I have set-up the config as per the below and it still only sends me back to https://localhost/ThinktectureIdSrv not https://localhost/MyWebApp/?\n\n. ",
    "PJPollard": "I am now leaving Identity Server to do its thing, and doing my own redirect (based on a missing claim) to obtain and store the additional data, which ultimately will drive a set of new claims that I can then add using IClaimsTransformationRulesRepository.\nOnce I've got the data from the user, I need to sign out and sign in again in order to get the new claims coming through.\n. Thanks, that's great, much appreciated!\n. ",
    "cjmcnaught": "Thanks for the tip brock, have you got any examples or articles to follow?\n. ",
    "jnmoons": "Thanks. That seems logical indeed. I have just managed to integrate the two, and it is now clear for me.\n. ",
    "rcooney": "Thanks for the quick action!\n. ",
    "claassen": "Turns out I wasn't quite doing it right. I found correct way here:\nhttp://leastprivilege.com/2011/05/24/requesting-delegation-actas-tokens-using-wstrustchannel-as-opposed-to-configuration-madness/,\nalthough its giving me a 500 error now, need to look into it some more.\nOn Thu, Jul 3, 2014 at 12:25 PM, Brock Allen notifications@github.com\nwrote:\n\nWhat was the solution/outcome?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/733#issuecomment-47952131\n.\n. \n",
    "Zapnologica": "Oh great thank you so much,\nI don't know, I found it on a few sites. But the link you sent me works hundreds.\nSorry for the confusion.\n. Would you care to point it out in the wiki? As that is where I found the initial video and I didn't see that.\nDo I just change the details in the identityModel.config\n. You said check the wiki? I cant find any info on implementing into an application except for that initial video. Hence I asked if you could refer me to the page you are speaking of.\n. I have found the  change authentication dialogue you refer to.\nI have two questions,\n1, how do I get this dialogue on an already existing project? I found it on create new project,\n2, Which option should I choose?\n     a, Cloud - Single Organization\n     b, Cloud - Multiple Organizations\n     c, On-Premises\n. Oh ok i see,\nSo the process of adding it to an existing server is literally adding the correct components in the already existing web.config file ?\n. Thanks, That worked just great,\nI also realised that if i put in Localhost;5445 as the realm it still works, So I can now test with and without auth. Thanks again\n. Oh okay, how would I do this? \nI currently have added my roles on the sts server and added the role to my user.  With the page showing the user's claims.  How exactly do I get the user's claim? \n. ",
    "ericlink": "Thanks Dominick... is there a good place to plug this into the thinktecture server, or is it just amount to implementing a new custom controller?\n. ",
    "cotepatrice": "Duh !!! I just didn't point to the correct cert in Identity Server. Once changed everything is working fine. My mystake, sorry.\n. Do you mean by setting the same issuer, audience and signinKey in the appbuilder extension in the web API ? \n. Good ! That's what I tought but it wasn't working yesterday. I probably missed something. I give it another try and close the issue afterward if it works.\nThanks !\n. Thanks !\n. OK, so yes, we have to define the RP also in ADFS. Thanks !\n. I think the problem might be the fact that I use a BinarySecretSecurityToken (or a SymmetricKeyIssuerSecurityTokenProvider in the ClaimsTransformer middleware case). Since the singnin key in IdentityServer is a X509 certificate, I guess I should use this kind of validation ? Which means I should deploy the certificate on the client machine so it can validate the signin key ?\n. As a matter of fact, we need the signin certificate of IdentityServer (the one specified under Key configuration). Then, we just use this as the SingninToken property in the TokenValidationsParameters like this : \n```\nvar validationParameters = new TokenValidationParameters()\n            {\n                AllowedAudience = ConfigurationManager.AppSettings[\"IdSrvScope\"],\n                SigningToken = new X509SecurityToken(\n                   X509\n                   .LocalMachine\n                   .My\n                   .Thumbprint\n                   .Find(certificateThumprint, false)\n                   .First()),\n                ValidIssuer = \"https://my-server/trust/issuer\",\n                ValidateExpiration = true\n            };\n```\nOr in the OWIN authentication extension \n```\nvar options = new JwtBearerAuthenticationOptions\n            {\n                AllowedAudiences = new[] { audience },\n                IssuerSecurityTokenProviders = new IIssuerSecurityTokenProvider[] \n                    {\n                        new X509CertificateSecurityTokenProvider(\n                            issuer,\n                            X509\n                               .LocalMachine\n                               .My\n                               .Thumbprint\n                               .Find(certificateThumbprint, false)\n                               .First()),\n                     new SymmetricKeyIssuerSecurityTokenProvider(\n                        issuer,\n                        signingKey)\n\n                }\n        };\n\n```\nNote that I also kept the SymmetricKeyIssuerSecurityTokenProvider so that my API accept calls from the 2 types of tokens : one initialy issued by ADFS and one coming from the OAuth2 endpoint of IdentityServer \n. Well, we do encrypt all our tokens from every RP in ADFS. It's a company standard.  But when I remove encryption, the JWT token gets created and returned by IdSrv. I know this is a certificate problem more than an IdSrv problem, but I must admit I'm totally lost on this one. Like I said, everything seems to be set correctly as for access to the private key. This is the correct certificate (same thumprint, IssuerName, etc...).\n. OUpsss... I didn't upload the cer. Now it's done but still same error. Do I need the private key in a pfx ?\n. And in the Key configuration section of IdSrv, do I need to select the certificate there too or is it just for assertion flow scenarios ?\n. Even with encryption certificate loaded in IdSrv, private key access to the user set to \"Full control\" + \"Read\", still no luck at all. The certificates are in \"My\" store and I copied it to \"Trusted Root CA\" too. It is always the same error in the log file. \nThe error happens in the \"ToSecurityToken()\" extension method in the Thinktecture.IdentityModel.Extensions.SecurityTokensExtensions class, called from the Thinktecture.IdentityServer.Protocols.AdfsIntegration.AdfsController.CreateTokenResponse() method. I didn't manage to debug it inside, but that's where it happens.\n. I've found this thread to be exactly the same problem that I have. So it means this doesn't work with encrypted SAML token I guess. Do you have plans to fix this with v3 ?\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/420\n. Yes, it's \"ADFS integration\", not ADFS as an idP. The issue #420 is the exact same case from what I read. Works withour encryption, but get the same error when adding a certificate.\nHere's a batch of print screens that shows my configuration and the debug values in Identity Server source code :\nADFS :\n\n\nIdentity Server machine :\n\n\nVisual Studio debug infos :\n\n. Good ! I'll give it a try today (it's 8:00 AM here) and let you know if it works ASAP. Thanks for your help !\n. OK. The problem is that the AdfsBridge.ConvertSamlToJwt() takes a SecurityToken as parameter and we have a GenerixXmlSecurityToken. So the code inside the controller method CreateTokenResponse is like this right now :\n\nprivate HttpResponseMessage CreateTokenResponse(GenericXmlSecurityToken token, string scope)\n        {\n            var response = new TokenResponse();\n```\n        if (ConfigurationRepository.AdfsIntegration.PassThruAuthenticationToken)\n        {\n            response.AccessToken = token.TokenXml.OuterXml;\n            response.ExpiresIn = (int)(token.ValidTo.Subtract(DateTime.UtcNow).TotalSeconds);\n        }\n        else\n        {\n            var bridge = new AdfsBridge(ConfigurationRepository);\n            response = bridge.ConvertSamlToJwt(token.ToSecurityToken(), scope);\n        }\n    return Request.CreateResponse<TokenResponse>(HttpStatusCode.OK, response);\n}\n\n```\n\nAs you can see, it uses the extension method ToSecurityToken() to convert it to security token before calling ConvertSamlToJwt(). This extension method fails when we use an encrypted token since it uses a default security token handler if we don't give it one. But since there is an overload where we can pass it an handler, here is the modified code that I put inside the AdfsController : \n\nprivate HttpResponseMessage CreateTokenResponse(GenericXmlSecurityToken token, string scope)\n        {\n            var response = new TokenResponse();\n```\n        if (ConfigurationRepository.AdfsIntegration.PassThruAuthenticationToken)\n        {\n            response.AccessToken = token.TokenXml.OuterXml;\n            response.ExpiresIn = (int)(token.ValidTo.Subtract(DateTime.UtcNow).TotalSeconds);\n        }\n        else\n        {\n            var bridge = new AdfsBridge(ConfigurationRepository);\n            if (ConfigurationRepository.Keys.DecryptionCertificate != null)\n            {\n                var configuration = new SecurityTokenHandlerConfiguration\n                    {\n                        AudienceRestriction = {AudienceMode = AudienceUriMode.Never},\n                        CertificateValidationMode = X509CertificateValidationMode.None,\n                        RevocationMode = X509RevocationMode.NoCheck,\n                        CertificateValidator = X509CertificateValidator.None,\n                        ServiceTokenResolver = SecurityTokenResolver.CreateDefaultSecurityTokenResolver(\n                            new ReadOnlyCollection(new SecurityToken[]\n                                {new X509SecurityToken(ConfigurationRepository.Keys.DecryptionCertificate)}), false)\n                    };\n                var handler = SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(configuration);\n                response = bridge.ConvertSamlToJwt(token.ToSecurityToken(handler), scope);\n            }\n            else\n            {\n                response = bridge.ConvertSamlToJwt(token.ToSecurityToken(), scope);\n            }\n        }\n    return Request.CreateResponse<TokenResponse>(HttpStatusCode.OK, response);\n}\n\n```\n\nTested with these scenarios : \n\nencryption certificate setup both in ADFS and in the key configuration page (decryption certificate) of IdSrv\nwith the configuration page (decryption certificate) of IdSrv set but no encryption on ADFS\nwhitout any encryption setup (no key and no encryption in RP of ADFS)\n\nI don't know if this logic shoud go there, but that's the fastest way I found so that we don't break any compatibility. I'll wait for your comments on this.\n. For the null check, I thougt that's what this line was doing ? \nif (ConfigurationRepository.Keys.DecryptionCertificate != null)\n. Thanks guys ! If I find anything in the meantime, I'll let you know.\n. Did you got time to take a look at it ?  I still have the problem and no solution in view. \nThanks !\n. Finally solved this ! It was a plain stupid bad thumbprint because it probably had been copied directly from the certificate window on the ADFS server.\n. What should I put in that cookie ? For now I use FormsAuthentication.SetAuthCookie(userName, false) but I don't even know what it actually keep in it. MSDN documentation is quite thin on the subject...\n. Ah ! Thanks Brock ! That was exactly the kind of thing I was looking for to get me started. I give it a try and close the thread if I don't need anything else.\n. ",
    "ewanmilne": "Thanks for the prompt response.\nIn fact I had also been trying to add signin parameters, but I am sure that I haven't handcrafted a valid signin message.\nBut more importantly, can you confirm my understanding regarding my aim of using IdSrv for IdP-initiated SSO? I am trying to get IdSrv to act as the initiator, and send an unsolicited SAML Response to the R-STS in our setup. This is not possible out of the box? If not we can change focus to working out the code changes needed.\n. ",
    "homam1": "What is the custom code needed to implement IdP-initiated SSO?\nWhen I open a new ASP.Net application and use the Out of the box tools in VS to connect to the IdP, the IdP-imitated works fine with me, but in my old ASP.Net application it is not working and the event handler WSFederationAuthenticationModule_AuthorizationFailed is being called. Although the exact same token is being sent from the STS and the only difference is that it does not contain a context.\nAny suggestion ?\n. ",
    "Alakaj": "Hi!\nhave the same issue with Linkedin as OAuth2 IdP. A temporary solution is to clean my browser cache and try to log again.\n. ",
    "shcherbachev": "Yep, clearing browser cache works for us too. However, this still looks like a bug. We recently updated to most recent version from sources.. still the same. \n. ",
    "juzkuz": "Any progress made on this? I am still seeing this on every LinkedIn provided that is available...\n. ",
    "MJurmo": "I am currently experiencing what seems to be at least a very similar issue.  We can wire up facebook as an Identity Provider and login to to register Relying Parties using hrd, however when we try to do the same with our google credentials we get the 'Sorry, an error occurred while processing your request.' message.  Was there ever a resolution to the above mentioned using v2?\nOur problem seems different in that it is not intermittent.\nOur current setup is we have IdSrv behind a load balancer which handles SSL.\nSo, we have IdSrv configured with SSL disabled.\n. ",
    "BhagiLimbu": "Thank you Brock!, It means i can able to manage user information from MembershipReboot database  instead of Identity Server database . But Identity Server's configuration should keep in it's own database.\n. Many Thanks Brock, Finally i set up Membershipreboot with Identityserver.V2.It work as my expectation. I am thinking to change database from Sql CE to MSSQL database.\n. Thank you Dominick, after i create a new account and provide IdentityServerUsers role. It redirect to the website. So it means IdentityServerAdministrators roles can't request the tokens. Quick question, if user who have  IdentityServerAdministrators roles want to access in such scenario, how can we handle  it ? \n. Sorry I resolved this issue, please close the ticket.\n. ",
    "nathantruant": "I suspect you are correct, but I'm at a total loss as to how or why this is occurring.  Do you have any suggestions?\n. It makes no sense, considering I can run the app just fine outside of the Azure project.  But the moment I run the Azure project with the IdentityServer WebSite role, I get that error.\n. I have the exact same error flow. When refreshing the page, I get a\nseparate IIS error.\nOn Tue, Jul 29, 2014 at 3:27 PM, Blake notifications@github.com wrote:\n\nAfter digging into this for a few does, Nathantruant, I have a couple\nquestions about the situation you are running into. Can you tell me if the\nerror you posted is the FIRST error you when it initially starts, or is\nthat the error you see after re-loading or re-opening the page? I've\nnoticed the error message changes for me between the initial page opening\nand subsequent access attempts. Initially it says: Config Error: Cannot\nread configuration file and gives an error code of 0x80070002. On\nsubsequent access attempts I get the exact same message you do.\nAlso, does the file applicationHost.config exist at the location specified\nin your error message? Mine appears to be missing.\nHere is the error I get upon initially running the project. It's very\nsimilar, but slightly different:\n[image: error]\nhttps://cloud.githubusercontent.com/assets/2112423/3742228/0fa19cb2-1767-11e4-89d7-0025a624d2ae.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/749#issuecomment-50541348\n.\n. I also gave up. After spinning my wheels for weeks, I ended up losing my\ncontract. Oh well.\nOn Aug 5, 2014 11:46 AM, \"Blake\" notifications@github.com wrote:\nWell, I'm afraid I'm going to have to give up on IdentityServer for Azure.\nThe documentation for getting it running on Azure appears to be out of date\ni.e. It's focused on VS 2012 and it seems older versions of Azure. Things\nappear to have changed significantly, and the features that made the\ntutorial work no longer seems to exist in VS 2013. And this topic is\ngetting no attentions. Guess we'll have to try and find another solution.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/749#issuecomment-51233328\n.\n. \n",
    "riplikash": "I've been running into the exact same issue when following the Azure walkthrough here: Running thinktecture IdentityServer v2 in a Windows Azure Web Role \u2013 from zero to hero (a walkthrough). At the very least it seems the walkthrough may be missing something. Any updates or ideas on how to solve the issue would be greatly appreciated.\nI would note I can run a great many other Azure Cloud projects just fine, as well as empty ones. It's only the Thinktecture IdentityServer that seems to cause problems.\n. After digging into this for a few does, Nathantruant, I have a couple questions about the situation you are running into. Can you tell me if the error you posted is the FIRST error you when it initially starts, or is that the error you see after re-loading or re-opening the page? I've noticed the error message changes for me between the initial page opening and subsequent access attempts. Initially it says: Config Error: Cannot read configuration file and gives an error code of  0x80070002. On subsequent access attempts I get the exact same message you do.\nAlso, does the file applicationHost.config exist at the location specified in your error message? Mine appears to be missing.\nHere is the error I get upon initially running the project. It's very similar, but slightly different:\n\n. Another small update on my debugging. In the windows event viewer I'm getting the IIS Express error: The worker process for application pool '6bb5570b-090c-44b7-b67a-bdbd3571e360' encountered an error 'Cannot read configuration file\n' trying to read global module configuration data from file '\\?\\C:\\Users\\XXXXXXX\\AppData\\Local\\dftmp\\Resources\\614f06db-bd71-4d83-b2d8-9e7e88d9b82b\\temp\\temp\\RoleTemp\\applicationHost.config', line number '0'.  Worker process startup aborted.\nI do think the issue has something to do with how the IdentityServer project is set up.\nSome additional information: I'm running Visual Studios 2013. I found some posts indicating that VS2013 is missing a local STS service that existed in VS2012, so I tried using Thinktecture's Embedded STS package, though it didn't seem to make any meaningful impact on the problem.\n. Well, I'm afraid I'm going to have to give up on IdentityServer for Azure. The documentation for getting it running on Azure appears to be out of date i.e. It's focused on VS 2012 and it seems older versions of Azure. Things appear to have changed significantly, and the features that made the tutorial work no longer seems to exist in VS 2013. And this topic is getting no attentions. Guess we'll have to try and find another solution.\n. ",
    "RanaNoureddin": "Thanks for the quick response!\nCan I modify AuthorizationManager/AuthorizeTokenIssuance method to verify relying party user's permissions since IdentityServer check access at authorization time  when a resource is being requested.\nis that possible?\nBest Regards,\n. @brockallen Sorry, did you mean modifying IClaimsRepository by adding permission, or I misunderstand you.\nThanks in advance.\n. @brockallen I want to apply ResourceAuthorization.Mvc technique with Identity Server, for example a teacher (role) can  add (action) course (resource), i.e. my permission here is add course.\nso I thought the solution is modifying Identity Server\\ AuthorizationManager to check if the current user role has the requested  permission (action-resource) or not.\nof course I need to modify the data base by adding permission.\nI hope everything is clear now. If not, let me know.\nThanks in advance...\n. @brockallen if I create this admin app and install thinktecture.IdentityModel to use authorization manger, how to make it  like IdSvr,i.e. each request from any app will process by the previous app.\nThanks in advance...\n. @brockallen you suggested to me to build a new app to control authorization process,but I need to centralize this app to make sure that every request from any RP will be handled with it like IdSrv exactly, my question how to do that.  \nfor example I should build the RP A as suggested, which handles authorization process using resource authorization, and RP B, when I request a page from B, of course the request will be handled with IdSrv first to be authenticated, after that I want the request to be authorized by A, then if succeeded it should returned to B, how this could be done.\nThanks in advance...\n. @brockallen I think I 'm gonna use thinnktecture.IdentityModel with each RP to implement authorization manager, but still I need a way to bind Identity Server roles with my couple (action,resource).\nyou have talked about  Integrating Thinktecture IdentityServer database with an existing database, does  IdSrv support Oracle.ManagedDataAccess.Client provider?\nThanks in advance...\n. @brockallen Thank you for your really kind cooperation, just I want to know which version that supports what you have said, by the way I am working on version 2.\nand I know that EF is database independent but it requires EF ADO.NET provider to be supplied for the database, in my case I use Oracle.ManagedDataAccess.Client provider as I mentioned earlier, then my DB supports EF, is that correct?\nThanks in advance...\n. ",
    "mmbont0": "I believe it will only let me set the value in hours and not mins.\n. My understanding or Single Sign On is I would like all the relying parties to Sign in automatically when i sign in once. I definitely want to do that but i also want to force the user to relogin at the STS if he is timed out on the RP. I am a little confused with your comment earlier. Why does my requirement invalidate the whole point of SSO? \n. ",
    "metaboy": "please see http://blogs.msdn.com/b/davidmcg/archive/2011/04/05/publishing-a-acs-v2-federated-identity-web-role.aspx\n. ",
    "prampalli": "Can some one help me on this?\n. Yes, user is in IdentityServerUSers role.\n. Thank you. That helped.\n. ",
    "mhdhammod": "in the stack trace : \n[InvalidOperationException: An error occurred when trying to create a controller of type 'Thinktecture.IdentityServer.Web.Areas.Admin.Controllers.RoleController'. Make sure that the controller has a parameterless public constructor.]\nthere is a parameterless public constructor defined as : \npublic RoleController()\n    {\n        Container.Current.SatisfyImportsOnce(this);\n    }\n. this is the code of the main website of thinktecture , it was running very good with no problems , today I opened the site to see this problem , I did not touch the code of the libraries where the exception is happening!\n. this is the config line : \n                                          userManagement=\"Thinktecture.IdentityServer.Repositories.ProviderUserManagementRepository, Thinktecture.IdentityServer.Core.Repositories\"\n. the class ProviderUserManagementRepository is located in namespace Thinktecture.IdentityServer.Core.Repositories and the code inside this file is like the one in the original installation project without any modifications\n. it worked now! the problem was from ReSharper Extension, it renamed the namespaces for the classes to reflect the current file location.\nthanks.\n. ",
    "chiprock": "Somehow managed not to bring over the new Thinktecture.IdentityServer.Core.Repositories.dll file.  Brought that over and now we are good.\n. @dealproc - yeah wow.  feeling dumb.  not sure why I didn't connect those dots... clearly I am still working my way thru some of these concepts.  Many thanks!\n. ",
    "erikdfb": "Thanks for your reply Brock. I'm aware of that. I'm just wondering what would be the best practice as to avoid having the STS hijacked. I'm currently using WSTrustChannel to send an issue message to the IdentityServer so the process is transparent to the users.\n. Thanks again Brock. I'll try and test using a routing service to see if I can adhere to a SOA scenario.\n. Many thanks for your feedback Brock! It all makes sense now.\n. I thought of something in the dropdown list as to not interfere with the UI too much. Something like:\nSigning certificate: [FriendlyName] [CN=localhost] or something that can be easily split.\nUnfortunately I'm in the middle of an implementation and haven't got the time to make the changes, otherwise it'd be my pleasure.\n. ",
    "ctshwetam": "Can you suggest an alternative to ASP.NET MembershipProvider which will work with IdentityServer? Shall i consider MembershipReboot as an alternative?\nDoes IdentityServer v3 also use ASP.NET MembershipProvider? \n. When is general release for IdentityServer v3 planned? I understand It is in Beta 1 right now.\n. ",
    "nathan-alden": "I figured out the issue. I had copy/pasted the certificate thumbprint of my ADFS token-signing certificate directly from MMC into Identity Server's administration page. Due to http://support.microsoft.com/kb/2023835, I wasn't pasting what I thought I was pasting.\n. ",
    "nikolayarhangelov": "I also stumbled upon \"An error has occurred.\" - in my case the App Pool account did not have permissions to read the certificate that was used to create the token.\nTo grant permissions, in the Certificates in MMC, right click on the certificate All Tasks > Manage Private Keys... and add you App Pool account.\n. ",
    "omidkrad": "I'm getting the same generic error: \"An error has occurred.\" Not very informative. It is producing when I try to open the IdentityManager page on a remote server that I don't have direct access to. Do you know if there is a way to make it show the actual exception that is throwing?\n. ",
    "nstubi": "I\u2019m starting from scratch with a new DB.\nI had to manually insert default data. I used the following code in ConfigurationDatabaseInitializer.cs to refer to needed default configuration and it was painful:\n// default configuration\n        if (!context.GlobalConfiguration.Any()) context.GlobalConfiguration.Add(CreateDefaultGlobalConfiguration());\n        if (!context.WSFederation.Any()) context.WSFederation.Add(CreateDefaultWSFederationConfiguration());\n        if (!context.WSTrust.Any()) context.WSTrust.Add(CreateDefaultWSTrustConfiguration());\n        if (!context.FederationMetadata.Any()) context.FederationMetadata.Add(CreateDefaultFederationMetadataConfiguration());\n        if (!context.OAuth2.Any()) context.OAuth2.Add(CreateDefaultOAuth2Configuration());\n        if (!context.AdfsIntegration.Any()) context.AdfsIntegration.Add(CreateDefaultAdfsIntegrationConfiguration());\n        if (!context.SimpleHttp.Any()) context.SimpleHttp.Add(CreateDefaultSimpleHttpConfiguration());\n        if (!context.Diagnostics.Any()) context.Diagnostics.Add(CreateDefaultDiagnosticsConfiguration());\n        if (!context.OpenIdConnect.Any()) context.OpenIdConnect.Add(CreateOpenIdConnectConfiguration());\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: lundi 25 ao\u00fbt 2014 18:23\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] Invalid column names (#777)\nAre you migrating an existing DB or starting from scratch with a new DB?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/777#issuecomment-53287142.\n. Maybe because the configuration.WSFederation.EnableFederation was set to false by default?\n. In the file ConfigurationDatabaseInitializer, the EnableHrd seems to be problematic (false):\nprivate static WSFederationConfiguration CreateDefaultWSFederationConfiguration()\n        {\n            return new WSFederationConfiguration\n            {\n                AllowReplyTo = false,\n                EnableAuthentication = true,\n                Enabled = true,\n                EnableFederation = false,\n                EnableHrd = false,\n                RequireReplyToWithinRealm = true,\n                RequireSslForReplyTo = true\n            };\n        }\nBy the way, what is HRD?\nBest Regards,\nNicolas\n. EnableFederation = false is problematic, sorry.\nI had to set it to true.\n. Now I get the following response from IDS when trying to login with my 1st application:\nChoose an Identity Provider to Login\nNo Identity Providers configured. Contact your administrator.\nPlease Help,\nBest Regards,\nNicolas Stubi\n. Hi Dominick,\nYou\u2019re right, I was using the wrong endpoint. It\u2019s working fine now.\nI\u2019m now modifying IdentityServer to use it against our own users management database. This is great project, very useful and well architected.\nDo you have any ideas on the release date (v1, not beta) of IdentityServer v3?\nApart from using the latest technologies (OWIN/katana self-hosting), why would you recommend to replace IdentityServer v2 by v3?\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: mercredi 27 ao\u00fbt 2014 22:01\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] 1st web application 404 error (#778)\nI think you are using the wrong endpoint. For authentication you want to use /issue/wsfed.\nWhy are you using /hrd?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778#issuecomment-53631664.\n. Thank you.\nNow I remember why I used HRD: when using Identity and Access Tool and uploading the WS Federation Metadata document, by default my client configuration is done with HRD. This is because of the metadata (as you can see in attached file).\nI guess this is a configuration on IdentityServer that should specify to use HRD by default.\nCould you please point me to the configuration change I need to do to in order to use wsfed by default and have it in the metadata document?\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: jeudi 28 ao\u00fbt 2014 11:15\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] 1st web application 404 error (#778)\nCool!\nWell v2 focuses on WS-Fed and WS-Trust - v3 on OAuth2 and OpenID Connect (and a WS-Fed plugin).\nDifferent technology waves.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778#issuecomment-53692086.\n. https://localhost/AITPortalIdentityServer/FederationMetadataRP/2007-06/FederationMetadata.xml\nlocally on my development workstation.\nBUT because I\u2019m having some trouble using it directly, I save the file locally (C:\\Temp...) and it\u2019s only working like this.\nTrouble when using the URL (a stupid 401 error):\n[cid:image001.png@01CFC2B5.D2CC0990]\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: jeudi 28 ao\u00fbt 2014 11:41\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] 1st web application 404 error (#778)\nWhat's the URL of the metadata document you use?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778#issuecomment-53696669.\n. Working fine \u2013 thanks. Still having the 401 error but by saving the file locally it worked.\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: jeudi 28 ao\u00fbt 2014 11:49\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] 1st web application 404 error (#778)\nthat's the wrong one\ntry\nhttps://localhost/AITPortalIdentityServer/FederationMetadata/2007-06/FederationMetadata.xml\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778#issuecomment-53697549.\n. Hello,\nMay I ask you to have a look at my question here:\nhttp://leastprivilege.com/2013/05/17/customizing-identityserver/comment-page-1/#comment-33572\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: jeudi 28 ao\u00fbt 2014 11:59\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] 1st web application 404 error (#778)\nClosed #778https://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/778#event-158316943.\n. Fair enough.\nThank you!\n. OK \u2013 thank you\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: vendredi 29 ao\u00fbt 2014 12:36\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] Update of nuget packages - compilation errors (#784)\nv4 of the JWT nuget has breaking changes. You can't use that with IdentityServer\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/784#issuecomment-53860809.\n. Hello,\nHere are the steps:\n1)      Launch the STS website in debug from my dev. Environment\n2)      Here I\u2019m connected as my windows user. Not really a problem, as I can logon with another user\n3)      I open a new session with an user \u201cadmin\u201d. Here I\u2019m connected as \u201cadmin\u201d, no problem.\n4)      I click on \u201cclose session\u201d\n5)      Here I\u2019m connected again as my windows user. I\u2019m still on the Welcome page, and I don\u2019t have the possibility to logon with another username again.\n6)      I can click on \u201chome\u201d or \u201cclose session\u201d, but nothing happens. I can\u2019t logon as another user anymore. I\u2019m force to close IE, and restart a new instance.\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: lundi 1 septembre 2014 17:36\nTo: thinktecture/Thinktecture.IdentityServer.v2\nSubject: Re: [Thinktecture.IdentityServer.v2] Logout operation not proper some time (#786)\nCan you explain in detail the steps for reproducing this? Do you do logout form the RP or from the STS? It's not clear from your post exactly the steps, so it's hard to understand the context for the problem.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/786#issuecomment-54072661.\n. I didn\u2019t change your default web.config:\n\n\n\nBest Regards,\nNicolas Stubi\nPHILIP MORRIS INTERNATIONAL MANAGEMENT SA\nIllicit Trade Strategies & Prevention Technology Center\nAvenue de Rhodanie 50\n1007 Lausanne, Switzerland\nPhone: +41 (0)58 242 63 48\nEmail: nicolas.stubi@pmi.commailto:nicolas.stubi@pmi.com\nPlease think of the environment before printing this email\n\nNOTICE: This e-mail may contain confidential information, which should not be copied or distributed without authorization. If you have received this e-mail message by mistake, please inform the sender and delete it from your system. Please note that, for the efficient preservation of Company records that may be required for litigation, e-mail messages sent to the author of this message will be copied and may be retained in a secure repository.\nFrom: Brock Allen [mailto:notifications@github.com]\nSent: lundi 1 septembre 2014 18:16\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] Logout operation not proper some time (#786)\nI'm confused why your windows account has anything to do with you being logged in. Perhaps you have windows auth configured when you shouldn't?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/786#issuecomment-54076050.\n. If I\u2019m not interested in SSO, is it an issue?\nWould you recommend ws-trust, oauth2, or simple http?\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: mardi 2 septembre 2014 09:52\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] create a security token request and send to Identity Server (#787)\nTechnically you could do that using WS-Trust or OAuth2 (or simple HTTP) - but since there is no front channel round-trip to the STS you won't get a SSO cookie and thus no SSO.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/787#issuecomment-54119446.\n. And I can use the oAuth2 token endpoint of IDS to do that ?\npublic const string OAuth2Token = \"issue/oauth2/token\";\nFor the time being, I replaced default IUserRepository implementation by my own implementation accessing to my users management db.\nDo I have to consider any other changes to IDS or will it work out of the box? For the time being, I only tested authentication from a RP using the wsfed endpoint. And it works fine \u263a\nIn parallel, I would like to use oAuth2 resource owner flow (as you suggested) to authenticate an old mobile application that is not claims-based compliant today. Idea is that this mobile application will call a web api (2) with custom security, and then get a token from the STS to get correct claims for the specific user.\nI know it\u2019s complicated but I think it\u2019s possible \u263a\nFrom: Dominick Baier [mailto:notifications@github.com]\nSent: mardi 2 septembre 2014 09:58\nTo: thinktecture/Thinktecture.IdentityServer.v2\nCc: Stubi, Nicolas\nSubject: Re: [Thinktecture.IdentityServer.v2] create a security token request and send to Identity Server (#787)\nI probably would use OAuth2 resource owner flow.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/787#issuecomment-54119969.\n. ",
    "sbadriprasad": "Hi brockallen,\nFYI. For our MVC application, we are using the Thinktecture Identity server. \nHere is the steps to replicate\n1. From our Application we click Login\n2. The control redirects to ID Server Login Page and give credentials and it will redirect to our MVC application.\n3. Now click logout(see the code for log out in our application)\n```\n   public ActionResult Logout()\n   {\n       var fam = FederatedAuthentication.WSFederationAuthenticationModule;\n       FederatedAuthentication.SessionAuthenticationModule.DeleteSessionTokenCookie();\n   fam.SignOut(false);\n\n   var signOutRequestMessage = new SignOutRequestMessage(new Uri(fam.Issuer), fam.Realm);\n   ViewBag.SignOutUrl = signOutRequestMessage.WriteQueryString();\n\n   return View();\n\n}\n   ```\nIn the View we redirect it to the Sign out URL..\n<script>\n    window.signOutUrl = \"@ViewBag.SignOutUrl\";\n</script>\n1. Now the control goes to the home page(our application) and we can see the Login button\n2. But when we press login button with out giving the credentials it takes to the loged in page. By right it should have taken to the Login Screen (of the ID Server)\n3. This is not happening at all time this is happening some time randomly which makes this issue critical. \n4. So we doubt on log out process which we follow and whether for some scenario the cookie is not deleted properly like that.\nIs this the recommended way for logout? or do we have a better way of log out process?\nAlso any one has faced this issue before? \nNote : We are NOT using 'Remember my user name / password.' option in the browser.\nAny inputs will help us a lot. Thanks in advance.\n. No. we haven't disabled in the browser.\nAlso this is happening frequently in IE (My version is 9)\nWhen we encounter this issue(randomly some times), At this point the cookie is not deleted even after we click log out.\nIs there a different approach we need to follow for IE (Please check our log out code above)\n. To add to this, This is repeatedly happening in IE browsers.\nThe FedAuth cokkie is not deleted when we logout from the RP application using IE Browser.\nIs there any IE specific fix available?\nOur Log out code is...\n```\npublic ActionResult Logout()\n{\n   var fam = FederatedAuthentication.WSFederationAuthenticationModule;\n   FederatedAuthentication.SessionAuthenticationModule.DeleteSessionTokenCookie();\nfam.SignOut(false);\nvar signOutRequestMessage = new SignOutRequestMessage(new Uri(fam.Issuer), fam.Realm);\n   ViewBag.SignOutUrl = signOutRequestMessage.WriteQueryString();\nreturn View();\n  }\n```\nIn the View (script block) we redirect it to the Sign out URL..\nwindow.signOutUrl = \"@ViewBag.SignOutUrl\";\nIs there any IE specific fix available?\n. At-last we are able to fix this logout issue in IE !!!!\nThe issue is with the window.signOutUrl (as we doubted it) It doesn't work in IE for some reason.\nThe work around is\n   $(function () {\n            $.get(\"@(ViewBag.SignOutUrl)\", { \"_\": $.now() }, function () {\n                window.location = \"@Url.Content(\"~/\")\";\n            });\n        });\nThank you guys for all your Support...\nIt's a great product, enjoyed working in it.\n. ",
    "asanjeevak": "Thanks for your reply. Can you suggest us with Identity Server v2, what would be best fit that works for our scenario?\n. Thanks for your suggestion, we are going with resourceownerflow and oauth client and we are getting single token for individual relying party.\n. Okay, Is there any approach or any ideas how to solve this issue?\n. ",
    "salims": "Thank you for your quick reply,\nBut we have installed the same certificate on both the machine, also configure it with https port in IIS. Its running on first machine but getting error only on second machine.\n. ",
    "hpals": "What is oauth2 next? is that something in identiyserver 3?\n. Does Identityserver 3 suits for my need at all? Sorry I am new to the STS world and I am still learning the concepts. I am not able to check whether there is any customization I can do with IDSRV3. Also once I have the above setup done, I have to extend the STS to allow user login via ADFS as well.\n. ",
    "btormey": "Two questions.\n1. Isn't that already specified in the federation metadata such as\n<auth:ClaimType xmlns:auth=\"http://docs.oasis-open.org/wsfed/authorization/200706\" Uri=\"http://identityserver.thinktecture.com/claims/profileclaims/firstname\"/>\n1. Why is this change necessary for SAML 1.1, but not needed for SAML 2.0?\n. ",
    "apacherose": "Thank you.\n. ",
    "hansarnevartdal": "When i have seen similar stuff before (not Azure) it's because the machine key changes on deploy, which means the application can't read the cookies encrypted by the previous deploy any more (the key is used for cookie-crypto-stuff). You should define the machine key in your web.config to keep it consistent.\nThis might be relevant as trigger reasons in Azure: http://stackoverflow.com/questions/19085726/with-azure-auto-scaling-do-i-need-to-specify-a-machinekey-in-web-config?rq=1\n. There are several reasons why the machine key might be regenerated every time your application restarts (iisreset), and if it changes the cookies will become invalid. Here are some reasons:\nhttp://support2.microsoft.com/kb/2915218\nThe easy solution is to define it in web.config, thus making it consistent for you application.\n. Load balancing? Use the same machine key for both instances of the application and they can both read the cookie regardless of who created it. If you have several environments you should have a machine key per environment config (to avoid the use of test-cookies in production etc..).\n. From the screenshot it looks like you have set the machine key under the FederationMetadata location. It should be in the  \"root\" element to work for the entire application. (It does not show in the screenshot, so can't tell if you tried that as well).\n. Maybe you should turn custom errors off to see the actual exception?\n-----Original Message-----\nFrom: \"wandelson\" notifications@github.com\nSent: \u200e29/\u200e01/\u200e2015 17:59\nTo: \"IdentityServer/Thinktecture.IdentityServer2\" Thinktecture.IdentityServer2@noreply.github.com\nCc: \"Hans Arne Vartdal\" hans.arne.vartdal@gmail.com\nSubject: Re: [Thinktecture.IdentityServer2] publisher cloud service azurecookie federation  (#805)\nyou must enable session caching?\n\u2014\nReply to this email directly or view it on GitHub.=\n. This is also in location \"FederationMetadata\".\n. Well, http://lmgtfy.com/?q=ID1073\nYou have an exceptional exception description there. Both the description, and the top result from google (http://blogs.msdn.com/b/distributedservices/archive/2012/10/29/wif-1-0-id1073-a-cryptographicexception-occurred-when-attempting-to-decrypt-the-cookie-using-the-protecteddata-api.aspx) points to exactly what I have written earlier. I still think what they defined as \"workaround #3\" is easiest. You should go over your configurations again and read up on this, the solution is there.\n. Nice! Happy to help :-)\n. Added this a while back https://github.com/thinktecture/Thinktecture.IdentityServer.v2/pull/814 , but now I am thinking it should be looked at with the Global.DisableSSL flag. Then again i think the DisableSSL should follow the cookie handler settings.\nA IdSrv requireing SSL for cookies, but not for its endpoints make little sense for me. Is there a case for disabling secure cookies, still using SSL?\nUsing my PR we would still have to disable SSL two places, so i would probably just set the DisableSSL flag based on the same cookie handler settings as well.\nDisableSSL = SystemIdentityModelServicesSection.DefaultFederationConfigurationElement.CookieHandler.RequireSsl;\n. SSO requires a common context, e.g. your browser, as it is based on cookies. Your windows forms application will not be able to run in that context.\n. Disabling SSL behind the load balancer just removes the SSL Redirect filter. You should still use SSL outside the LB.\nAnd you should definitely sign and validate your tokens, that's not related to SSL at all.\nIf you want to run without SSL entirely in development you need to set requireSsl=\"false\" on your cookieHandler in identityServices.config. Unless the idsrv cookies will not be set, as secure cookies requireSsl.\n. ",
    "82edwards": "Not urgently.  Nuget automatically delivers the 4.0.0 version, so for new\nprojects, it will appear that they do not work.  Is this something that you\nare fixing in the v3 version that is in beta?  Should we upgrade to that\nfor development?\nOn Wed, Oct 8, 2014 at 12:03 PM, Dominick Baier notifications@github.com\nwrote:\n\nYes - 4.0 has a breaking change - any reason you need 4.0 ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v2/issues/807#issuecomment-58382056\n.\n. \n",
    "kiernoz": "Brock,\nI was under the impression that ADFS 3.0 allows for configuring Multi-Factor provider outside of identity provider:\nhttp://blogs.msdn.com/b/ramical/archive/2014/01/30/under-the-hood-tour-on-multi-factor-authentication-in-ad-fs-part-1-policy.aspx\n. Brock,\nThanks for such a quick response. You mentioned that Identity Server can be customized to support 2-factor authentication. Do you have any references on how to do that?\nRegards,\nKamil\n. I see. Thanks again for all your help!\n. ",
    "vdeshpande123": "Is Multi Factor Authentication supported in IdentityServer v3? If so can you point me to API documentation or a sample?\n. I looked into the docs of custom user service and it appears that this can be achieved using partial login. Is that what you meant?\nOn Dec 30, 2014 10:37 PM, Brock Allen notifications@github.com wrote:It's possible via a custom user service. See the docs over in that repo.\n\u2014Reply to this email directly or view it on GitHub.\n. ",
    "iampez": "You may have already resolved this issue, but for future readers, I had the same problem today and it turned out to be my company's proxy server settings, so the issue was that the federationmetadata.xml file was not even being read. Hope this helps.\n. ",
    "sevdaakgun": "@iampez I use token authentication and have same issue with company's proxy server. How did you resolve your issue? Is there a way to pass proxy server as an option? Is it possible to configure it for accepting proxy?\n. ",
    "austinajit": "we are also having the same problem starting today. We have all SSL set correctly and the same setting is working for one site and not the other. Any suggestions? \n. ",
    "KahuKirikiri": "I know I'm a bit late here but if anyone is still experiencing this issue then you can resolve it by providing your own \"proxy aware\" implementation of the WsFederationAuthenticationOptions.BackchannelHttpHandler.\n`\npublic partial class Startup\n    {\n        private static string realm = ConfigurationManager.AppSettings[\"ida:Wtrealm\"];\n        private static string adfsMetadata = ConfigurationManager.AppSettings[\"ida:ADFSMetadata\"];\n        private static string proxyAddress = ConfigurationManager.AppSettings[\"ida:ProxyAddress\"];\n        private static string proxyPort = ConfigurationManager.AppSettings[\"ida:ProxyPort\"];\n```\n    public void ConfigureAuth(IAppBuilder app)\n    {\n        app.SetDefaultSignInAsAuthenticationType(CookieAuthenticationDefaults.AuthenticationType);\n    app.UseCookieAuthentication(new CookieAuthenticationOptions());\n\n    app.UseWsFederationAuthentication(\n        new WsFederationAuthenticationOptions\n        {\n            Wtrealm = realm,\n            MetadataAddress = adfsMetadata,\n            BackchannelHttpHandler = GetProxyAwareHttpMessageHandler()\n        });\n}\n\nprivate HttpMessageHandler GetProxyAwareHttpMessageHandler()\n{\n    if (string.IsNullOrWhiteSpace(proxyAddress) || string.IsNullOrWhiteSpace(proxyPort))\n        return null;\n\n    var address = string.Format(\"{0}:{1}\", proxyAddress, proxyPort);\n    var proxy = new WebProxy(address, false)\n    {\n        UseDefaultCredentials = true\n    };\n\n    return new HttpClientHandler()\n    {\n        Proxy = proxy,\n        UseDefaultCredentials = true\n    };\n}\n\n}\n```\n`\n. ",
    "DAnsell": "Ok, thanks Dominick. I wasn't expecting any changes in v2, it was more along the lines of whether there was any type of exception we could throw within ValidateUser that could propagate back to the client with information intact. \n. ",
    "jsucupira": "Would you have an example on how to create a repo for it as just and add-on?\nJonathas Sucupira\nhttp://about.me/jsucupira\n\nOn Nov 3, 2014, at 8:53 AM, Dominick Baier notifications@github.com wrote:\nHi! Cool!\nI think you should rather put that into a separate repo as a community add-on. Let me know where you put it and I will link to it from the wiki.\nOK?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "TD49": "I understand that V2 refresh tokens usage is a one-time use only.  Until we can migrate to V3 RTM in the future, I could modify local source code to allow to allow setting an absolute max lifetime programatically or at least through config.\nI found the StoredGrant model in your source code.  You have two static methods, one of which is a CreateRefreshToken method.  Doesn't appear to be used or referenced, so couldn't trace how the \"ttl\" argument is set when applying what appears to be a max lifetime setting.  \nIs this deprecated code and I'm on the wrong track here?\n. Great news re: \"very soon\".  If V3 goes RTM by January or sooner, I have a case with higher-ups to officially begin migration away from V2 and not have to customize too much source code.   I'll keep a look out for your roadmap.\n. ",
    "rdosanjh": "Ok I see identity server 2.5 has an option for OpenID connect would that provide the capability to sign out.\n. ",
    "aluri2": "Can some please let me know the resolution for this issue. We have the same issue currently with the ADFS\n. ",
    "OferLevi85": "I know it's about a year later but still. If anyone come across this issue, know that copying the thumbprint directly from the certificate window may cause additional invisible characters to be added to the beginning of the thumbprint string.\nUse Notepad++ to view the file. Select \"Encoding-> Encode in ANSI\". You will see the hidden characters. Delete them and save. \n. You welcome @ccellar  :) glad I could help :)\n. ",
    "ccellar": "@OferLevi85 you saved my day \ud83d\udc4d Thank you\n. ",
    "arulkumar4": "@OferLevi85 It solves my problem. Thank You.. ",
    "Silverlight42": "@OferLevi85 Thanks man!. ",
    "davisnw": "From the following links, it is recommended to use different keys for signing than for encryption, which would seem to contradict the assertion that you shouldn't be using the same CN in multiple certs.\n- http://security.stackexchange.com/questions/3111/should-one-sign-and-encrypt-using-the-same-key-the-azure-training-labs-are-taki\n- http://security.stackexchange.com/questions/1806/why-should-one-not-use-the-same-asymmetric-key-for-encryption-as-they-do-for-sig\n. If I understand what you're saying, you're suggesting that if we have two certs for different purposes (signing vs encryption) for the same CN, then they should each be in a different certificate store.\nMaybe I'm missing something - but I don't see that IdentityServer allows you to specify which certificate store to retrieve the certificate from.\nAlso, other applications seem to support selecting a specific cert when two certs with the same CN are present.  For example, IIS has no problem picking up the correct cert (I assume it finds by ThumbPrint).  SharePoint 2013 also appears to locate certificates via ThumbPrint for its \"Trusted Identity Provider\" functionality.\n. I'm not sure giving each cert a unique name is viable.  I think external applications require the CN of the certificate to match the realm.  I'll do a little testing against an IdentityServer/SharePoint installation I have.\nAlso, when you say \"it is not recommended to have multiple certs with the same name in the same certificate store\" upon what is that based?  Is it just because IdentityServer doesn't support it, or are their larger issues of which you are thinking?\n. Ok, I see.  And I verified that it works in my environment by specifying an arbitrary unique CN for the certificate shared between KeyMaterialConfiguration and my SharePoint trusted identity provider.\nThanks for your help - I really appreciate your quick responses.\n. ",
    "selganor74": "Removed WebDAV module and handler but no luck.\nWhen CORS is enabled I get a straight 200, no tracing no clue on where the code is passing through...\nAny clues ?\n. I've managed to obtain a Token in CORS by configuring CORS as explained before (this will allow for OPTIONS Method) and then adding custom headers in the httpProtocol section of system.webserver in web.config. Dirty but working solution ...\n```\n   \n\n\n</handlers>\n<httpProtocol>\n    <customHeaders>\n        <add name=\"Access-Control-Allow-Methods\" value=\"*\" />\n        <add name=\"Access-Control-Allow-Origin\" value=\"*\" />\n        <add name=\"Access-Control-Allow-Headers\" value=\"Authorization, Content-Type\" />\n    </customHeaders>\n</httpProtocol>\n\n```\n. Maybe ma I missing some CorsEnabling on Token Controllers? \n. Ok, I managed to setup according to the samples provided\n. thank you!\n. YRC: \nThank you very much ! It worked perfectly.\nJust to give all information: in my test set up the \"Symmetric Signing Key\" in the RP config is the same entered in Global \"Key Configuration\".\n. ",
    "christophebourguignon": "Thanks. There is an option \"Require Token Encryption\". Isn't it enough to encrypt the token to the RP without using SSL ?\n. Thanks for your help.\n. ",
    "dlutz52": "Thank you, Brock, for the quick response. I was getting these links from a Google search after watching Dominick's courses on Identity in .NET 4.5 on Pluralsight. Issue now closed.\n. ",
    "azharkiani": "Can some one please reply? It would be really appreciated.\n. ",
    "pravinbhosale01": "If you are using JWT type of token, There are online JWT token decoder, one of them is http://jwt.io paste your token in textbox there and see decoded claims.\nIf you want to do that using code, you can find that in HttpActionContext.Request.GetClaimsPrincipal().Claims on Authorization level.\n. ",
    "hyousuf": "Can I not validate the token against the Audience URI without SSL ?\n. ",
    "bridgethuck": "Thanks Brock!\nOddly enough this is when using the thinktecture IdentityServer admin console application when doing configuration changes or adding other users.  Whenever I make a change to a RP or IP or reset a user password, it blocks the \"successful\" message coming back as the header cookie is too large. In my thinking none of them would be much bigger than this one (4143) so maybe I just request the web admin to double the size allowed .  The two blocks they found were just a couple hundred over the limit.   I started with you because the process and paperwork for these updates to shared appliances like the Netscaler at my company are very painful and can take weeks and I am hoping to do this once and not have to look back.  That might just be my wishful thinking though.\nThanks,\nBridget\n. I think I am good...we are going to double the size of the header cookie.  I do pretty much always use incognito since I have many users I test with and have to start clean every time.\nThanks for your fast responses!  Have a great day!\nBridget\n. ",
    "zinov": "Also I am trying to pass the user name and password to the website that I want to redirect, an there I can call my authentication service and I am writting this code but the cookie is not present at the end\n```\n           var service = new AuthenticationServiceAgent(user.Username, user.Password);\n           GenericXmlSecurityToken token = service.GetToken() as GenericXmlSecurityToken;\n        ClaimsPrincipal cPrincipal = GetClaimsPrincipal(token, user);\n\n        var sesionToken = new SessionSecurityToken(cPrincipal)\n        {\n            IsReferenceMode = true,\n            IsPersistent = true\n        };\n\n        FederatedAuthentication.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(\n                    sesionToken, true);\n\n        FederatedAuthentication.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects = true;\n        FederatedAuthentication.SessionAuthenticationModule.WriteSessionTokenToCookie(sesionToken);\n\n```\n. I opened a chat room too http://chat.stackoverflow.com/rooms/77736/windows-identity-federation\n. Do I need to create a cookie manually? If that is the solution, which are the values that I need to store?\n. ",
    "dolkensp": "I was originally going to do these 2 commits as separate pull requests, but it seems github decided to include both in this package.\nLet me know if you have any issues with either of the 2, simple changes.\n. Any chance we can get the nuget package updated too?\nFor now I'm going the long (Provider-bound) way in our project, as I don't want to tear out the existing nuget references.\n. ",
    "DeeDeeLee": "Thank you very much for your quick reply.\nActually I am trying to do the single sign-on for .Net, SharePoint and Moodle sites using Identity Server V2.5 . Now I can authenticate .Net and Sharepoint by using WS_Federation. For Moodle, I am trying to use \"OpenID Connect\" or \"OAuth Client\", but they both give me the errors. If these two are not recommended, what is your suggestion? For IdentityServer3, are there any release versions? I couldn't find Administration tool for it yet.\nThanks again.\n. B.T.W I was hosting identity server 2 in Azure before. Now I moved it to out local server, but I still get the same error. \nMissing redirect URI\nthe url is:\nhttps://idserver/issue/oidc/authorize?response_type=code&client_id=MoodleTest&scope=openid%20profile%20email&nonce=N559eb3ee6334f&response_mode=form_post&resource=https%3A%2F%2Fgraph.windows.net&state=9G4swwGUJSXRY6n\n. Here is the more explanation of what we are doing:\n\" We did start with ID server v3, but the lack of an administration console that V2 has made it difficult for us to set up things. So we reverted back to ID server v2 since our use case doesn\u2019t require any of the advanced features in V3. We are trying to set up an SSO between a SharePoint application which uses .NET Membership based FBA with a Moodle site\n. ",
    "ntaylor95": "Great idea. This is my duh moment! Will work on it now \ud83d\ude04 thanks so much.\nOn Saturday, August 1, 2015, Brock Allen notifications@github.com wrote:\n\nWhy not just have a page (like the login page) in the HdentityServer host\nproject that allow anonymous access?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer2/issues/855#issuecomment-126938389\n.\n. I reset my password from my website using the API call: api/Password/reset/{guid}... I now have this public facing page on the Identity Server but all the API call are stored in the API project and I cannot call to the API becuase I am not an authorized user. I need the same exact behavior as with the API call: api/Password/reset/{guid}... anyway I can get that inside IdentityServer as an unauthenticated user who only knows their email address??????\n. I found the public facing call in the API api/Password/reset/{email} = this returns a valid response, no email is being sent though.\n. \n",
    "mnavidh": "Microstrategy is a BI product solution. They have 2 major components in that product. First one is the web portal through which users can login using username/password and access reports. These reports are pulled from their intelligence server (which is the second component and has the data). .\nOur requirement is to develop a .net MVC application which will use the Identity server to login the users. We already have an existing RP application which uses the same STS for logging in users. We are going to add this new RP. This new application should be able to access the microstrategy web portal and perform a SSO. Now Microstrategy web portal has a customization option to read the security token, map the credentials against their user mappings and SSO the user to the web portal. \nMicrostrategy web portal needs the claim token to be included in the redirect URL so that their custom component can read it.\nBut my question is how can the MicroStrategy Web portal verify and validate the information (tokens) passed by our RP? Is there a WEB API that can be exposed from our STS?\n. ",
    "ShubhraBakshi": "This got resolved, as the issue was the namespace for the claim was different which was supplied from pingfederate.It needs to be same. . "
}