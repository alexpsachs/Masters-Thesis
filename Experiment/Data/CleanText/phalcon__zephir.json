{
    "phalcon": "Thank you\n. Thanks!\n. Just make a new commit on your fork, Github will automatically pick up it to this PR\n. thanks\n. thanks!\n. Regarding __call and __callStatic, to avoid that Zephir validates the existence of a method the syntax is:\nphp\n$x->{\"hello\"}();\nSomeClass::{\"hello\"}();\n. thanks!\n. It would not check the existence of __call, because the method call be called via call or the method can be implemented in an extended class, so that syntax must be used if you want to tell Zephir that it must not check the existence of a method, but it must generate the call in the c-code.\n. Thanks\n. thanks\n. I can't still understand this proposed structure, Phalcon 2.0 is not compiling due to this, what are the advantages of this structure? \n. I'm restoring the old behavior\n. We need to keep the current behavior where we can do:\nsh\ncd cphalcon\nzephir compile\nThe file structure must be kept:\nsh\next/\n #c-code\nphalcon/\n  #zephir code\nUsing your changes we got errors:\n``` sh\ncd cphalcon\nzephir compile \nUnexpectedValueException: RecursiveDirectoryIterator::__construct(../phalcon): failed to open dir: No such file or directory\nat Library/Compiler.php(94)\n0 Library/Compiler.php(94): RecursiveDirectoryIterator->__construct('../phalcon')\n1 Library/Compiler.php(319): Compiler->_recursivePreCompile('phalcon')\n2 Library/Compiler.php(785): Compiler->generate(Object(Config), Object(Logger))\n3 compiler.php(74): Compiler::boot()\n4 {main}\n```\nIt seems that it assumes that cphalcon must be phalcon, which is something we can't change.\nThen, classes can't be extended:\nphp\nCompilerException: Cannot locate class \"Phalcon\\Acl\\Adapter\" when extending class \"Phalcon\\Acl\\Adapter\\Memory\"\nAlso classes have a double namespace:\nphp\nstring(26) \"Phalcon\\Phalcon\\Validation\"\nstring(36) \"Phalcon\\Phalcon\\Validation\\Exception\"\nstring(34) \"Phalcon\\Phalcon\\Validation\\Message\"\nSo, Phalcon 2.0 is our priority and if we have changes that affect our progress in the migration to Zephir, we need to review them again, hoping you understand our position\n. Thank you, can you test your changes before submitting them with Phalcon 2?\n. I like the idea, however, this would sometimes make things harder for the compiler, because there could be unregistered activity the language cannot track, for instance:\nc\n %{\na = fibonacci(MAX_FACTOR);\n}%\nThe variable 'a' is mutated inside a \"shadow\" block of code, for Zephir, the variable wasn't mutated so the variable will be reported as unused, but the variable was actually used!\nOur idea of integrate C-functions into Zephir is via optimizers. Check this example: \nhttps://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/StrlenOptimizer.php#L25\nIt intercepts calls to 'strlen' and replaces the generated code by a call to a c-function. \nIt also adds the proper header: \nhttps://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/StrlenOptimizer.php#L43\nReturns a 'compiled expression' which has the right data-type Zephir can understand.\nhttps://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/StrlenOptimizer.php#L46\n. I'm not opposed on allowing integrate 3rd party libraries in Zephir or call C-code, I think this is obviously something required. But just embed c-code wherever a developer wants looks ugly and it makes Zephir completely unusable. That would restrict us to make optimizations just because there could be hidden code that Zephir can't understand or analyze.\nThe idea is allow the developer to write his own optimizers having clean interfaces allowing Zephir to know the kind of parameters that must be passed to C-functions and also which data-types are returned. \nFor example, you could have the following file structure.\nphp\noptimizers/\n  fibonacci.php # this intercepts calls to function \"fibonacci\" telling Zephir which header include and the c-code\next/\n  test/\n    myclass.c # code generated\n  kernel/\n  my-fibonacci.h # fibonacci prototype\n  my-fibonacci.c # here is implemented the fibonacci in \"c\"\ntest/\n  myclass.zep # here we call a function \"fibonnacci\" calling the c version\nfibonacci.php:\n``` php\n<?php\nclass FibonacciOptimizer\n{ \n    public function optimize(array $expression, Call $call, CompilationContext $context)\n    {\n        $context->headersManager->add('my-fibonnaci.h');\n    $resolvedParams = $call->getReadOnlyResolvedParams($expression['parameters'], $context, $expression);\n    return new CompiledExpression('int', 'fibonacci(' . $resolvedParams[0] . ')', $expression);\n}\n\n}\n```\nmy-fibonacci.h:\nc\nint fibonacci(int n);\nmy-fibonacci.c:\nc\nint fibonacci(long n) {\n        if (n < 2) return n;\n        else return fibonacci(n - 2) + fibonacci(n - 1);\n}\nmyclass.zep\n``` js\nnamespace Test;\nclass MyClass\n{\npublic function someMethod()\n{\n    int a;\n\n    a = fibonacci(40);\n    return a;\n}\n\n}\n```\nThis will be an structured way of integrate C functions in a way that Zephir can understand. Zephir can mutate the variable 'a' in a controlled way.\nEven if you do the following, Zephir will do the right thing:\njs\nint a;\na = fibonacci(40);\nreturn a;\njs\nvar a;\na = fibonacci(40);\nreturn a;\njs\ndouble a;\na = fibonacci(40);\nreturn a;\njs\nreturn fibonacci(40);\njs\nvar a = [];\nlet a = [fibonnaci(1), fibonnaci(2)];\nreturn a;\nAll this without have to write C-code! \n. Could you please rebase against the current master?\n. Thanks\n. thank you\n. Fixed DeclareStatement issuing a warning when declaring a variable without default value?\n. Thanks!\n. @mobli thanks for helping us out, could you please open a issue with your ideas? We can discuss them there, thanks\n. thanks\n. You can use self()\n. No, it creates a class of the current class. Note, that we're not implementing features that we would not need in Phalcon 2.0.\n. Yes, it was a temporary solution but it needs to use the absolute path. Thanks\n. I think the current file structure is ok since zephir is the test extension itself:\nproject-name\n |- ext\n |- extension-name\n |- unit-tests\n. Thanks\n. Fixed in latest commits\n. Thanks\n. Thanks for writing us, it seems that PHP is faster, \n. Thanks Emmanuel\n. Could you try again using latest Zephir?\n. Thank you\n. Could you please merge this against current master?\n. Thanks\n. No example was provided\n. Thanks!, Also I added the right implementation\n. Please check my implementation, it must work with most cases: https://github.com/phalcon/zephir/blob/master/Library/Operators/Other/EmptyOperator.php\n. Could you try again using latest zephir?\n. We need to update the ZEPHIR_IS_EMPTY macro to check for empty arrays too.\n. This is fixed\n. Fixed in latest versions\n. Thanks\n. Why move checkAndWriteIfNeeded to utils?\n. That's ok, could you please change this part: https://github.com/zaets28rus/zephir/commit/e6a08cf70c1e488d75e88863d2bcd0bc9133a048#library-compiler-php-P7\n. Could you please rebase this against master?\n. Thanks\n. Thanks!\n. Could you please generate prototypes for the gd extension?\n. This is implemented in latest commits.\n. You must always use brackets to avoid this:\nphp\nelse {\n   if ($z == 1) {\n   }\n}\n. Not a problem, but in Zephir, parentheses are optional in 'if' evaluations, so implementing a block like this will cause several parser conflicts.\n. Thanks\n. I added a fix for this in the latest commit\n. Thanks\n. What is the problem?\n. Thanks\n. Not sure why he needs DIR and FILE, they're probably useless in zephir code\n. Thanks\n. This is now implemented by @racklin\n. Thanks!\n. This PR can't be merged also Travis is reporting the build is failing\n. Thank you!\n. Thanks, could you please rebase the PR?\n. Thank you!\n. Thanks!\n. Thanks Kamil, some minutes ago I uploaded a fix to fallback to the standard function generation when a second parameter is passed. Could you please rebase against master/head?\n. I already fixed the problem with phalcon_set_symbol. Could you please try using the latest zephir?\n. Yes, maybe we could disable the tests for Phalcon 2.0 since there is a high number of tests failing and just leave the extension compilation.\n. Thank you, we now have a green: https://travis-ci.org/phalcon/cphalcon/builds/17035716\n. Thanks, could you please add the operators header?\nphp\n$context->headersManager->add('kernel/operators');\n. Thanks\n. Thanks\n. Thank you\n. Could you please rebase against master?\n. Thank you!\n. try/catch is still not supported\n. @marciopaiva thanks for the link\nWe have to address this functionality for sure, the phalcon's dispatcher needs this to work as in 1.x\n. @zaets28rus which kind of implementation will you do?\n. This is now implemented in master branch\n. why is this a bug?\n. That's the way parsers work\n. But 'int' is not a reserved word of php\n. Try this way:\njavascript\nclass $Boolean {}\n. @zaets28rus that's right, however, can you restore this code removed: https://github.com/phalcon/zephir/commit/e3c1bd69ef8f4822b7aa3995da364547c9b77860#diff-3651dfbd59d11ea1f4ed9b9062c95e7aL1172\nWe only need to assign the default value if the parameter wasn't passed to the method\n. Thanks!\n. Thanks\n. I updated the parser to address this, could you check?\n. Thanks!\n. I uploaded a fix for this in the last commit, could you please check?\n. @racklin No :(, As we need to check if there is an optimizer available for every function called in a project they can't be autoloaded. \nDetermine the order in which optimizers are loaded is hard because it depends on the order in which they're called in Zephir code.\n. Thanks\n. Could you try again using the latest zephir?\n. It must be:\n``` javascript\npublic function mysql_func(var id)\n{\n    var result, key, value;\nmysql_connect(\"localhost\", \"root\", \"\");\nmysql_select_db(\"cdcol\");\n\nlet result = mysql_query(\"SELECT * cds WHERE id=\" . id);\n\nloop {\n    let row = mysql_fetch_assoc(result);\n    if !row {\n        break;\n    } else {\n        echo row[\"key\"] . \" \" . row[\"value\"] . \"\\n\";\n    }\n}\n\n}\n```\n. Thanks\n. :+1: \n. Great!\n. Thanks\n. Could you try again using latest Zephir?\n. I'd prefer\nlet (a, b, c) = arr;\nWe can use this syntax in the future to assign the same value to every index in the array:\nphp\nlet [0, 1, 2] = null;\n. @mruz I can't reproduce your problem, could you please post a full example?\n@golovanov This must be fixed in latest commits\n. In PHP 5.3, Zephir requires more memory about 256MB to compile Phalcon 2.0\n. @racklin @zaets28rus Check this out http://blog.zephir-lang.com/post/74447458690/whats-new-in-zephir-iv\n. Eval is not a function, it's a PHP's language construction\n. Could you try again using latest zephir?\n. I think this behavior is correct, did you regenerate the parser? ./install ?\n. Could you try again?\n. The first part of the condition is false so the remaining conditions aren't checked\n. 'AND' and 'OR' have the same precedence and they're evaluated from left to right. Maybe you can add parentheses to obtain the behavior you want.\n. Could you try again using latest zephir?\n. Great\n. Could you try again using the latest zephir?\n. Great\n. Could you try again using the latest zephir?\n. Nice, I forget notify you about the commit.\n. Thanks\n. Could you try again using the latest zephir?\n. I removed the function which produce the second warning. Thanks\n. Implemented by @zaets28rus \n. Thanks\n. In Zephir, /* */ comments are used as docblocks, and they're part of the language, this is why you're getting a parse exception. http://zephir-lang.com/language.html#comments\n. Could you try again using the latest zephir?\n. Could you try again?\n. Thanks\n. Thanks\n. Also is needed to add an \"optimizers\" directory where Zephir can pick up your definition. \nhttps://github.com/phalcon/cphalcon/blob/2.0.0/config.json#L15\nAnd, the C implementation of the function itself in an external file:\nhttps://github.com/phalcon/cphalcon/blob/2.0.0/config.json#L24\n. @ramsey The way you're returning the generated code implies that my_foobar() returns an string.\nYou may want to see how existing optimisers are implemented in Zephir: \nhttps://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/VarDumpOptimizer.php#L103-L106\n. Could you try again with the latest zephir?\n. Could you try again using the latest zephir?\n. Could you try again using the latest zephir?\n. Could you try again using the latest zephir?\n. Could you try again using the latest zephir?\n. Could you try again using latest Zephir?\n. Fetch is a reserved word, you have to escape it by prepending a $:\nphp\nstmt->$fetch(\\PDO::FETCH_ASSOC);\n. Could you try again using the latest zephir?\n. @racklin could you take a look please?\n. It wasn't working well, so I disabled temporarily, need some more time to track the problem down.\n. Could you try again using latest zephir?\n. These initializations before zephir_fetch_nproperty_this aren't needed\nhttps://github.com/phalcon/zephir/pull/146/files#diff-53b0996534637d6b7375067c9aad69e3R87\nhttps://github.com/phalcon/zephir/pull/146/files#diff-53b0996534637d6b7375067c9aad69e3R87\n. I think the method should be named initNonReferenced instead of initHref\n. I think we just have to throw an exception instead of initialize the variable.\n. Could you try using the latest Zephir?\n. I don't know if we must fix this, maybe the root of the problem is elsewhere. \n. Thanks\n. 1) Could you please install the gmp extension and regenerate the C-code?\n2) Properties with a default boolean \"false\" seem to be bad declared https://github.com/zaets28rus/zephir/commit/a9473f0c88e26858015166fadbd96dfc18517807\n. https://github.com/zaets28rus/zephir/commit/a3c7a110a2d044667a48fd1c031edd3e669d955a\nIt must be TSRMLS_CC instead of TSRMLS_DC\n. Thanks\n. Thanks\n. Could you please try again using the latest zephir?\n. Thanks\n. Thanks Dario, could you please use tabs instead of spaces?\n. Thanks\n. Could you please reinstall your zephir parser it seems to be producing a different output for logical operators than mine\n. Thanks\n. Could you try again using the latest Zephir?\n. I don't think remove the PH_SEPARATE is the right way of fixing that. Properly separate variables before modify them is part of the proper copy-on-write process. \n. What are namespace constants?\n. I'm not sure if these ones can be exported in a c-extension. Why not use class constants?\n. I agree with do not add those files to the repository. Also an option to export the stubs to a different directory would be great\n. Could you please rebase?\n. Thanks\n. PSR-2, however I prefer tabs over spaces\n. Travis reports:\nbash\n/home/travis/build.sh: line 165: phpcs: command not found\nThe command \"phpcs --standard=PSR2 --report=emacs --extensions=php --warning-severity=0 Library/\" failed and exited with 127 during before_script.\n. Zephir time looks good: 0.45 < 0.69\n. I agree with adopt the current way in which PHP handles namespaces. I will add support in the parser for the \"use\" keyword allowing users to rename classes.\n. I added support for the USE statement in the parser.\n. Could you please install php5-gmp and resubmit the regenerated c-code?\n. phpcs does not complain about blank lines between case clauses\n. Travis build has failed, could you please take a look?\n. An ucfirst could be missing here: https://github.com/hell0w0rd/zephir/blob/af513ccecee345428b1d2d815d90739a5c0a4772/Library/MethodCall.php#L89\n. Actually this works because classes are already loaded when class_exists($builtInTypeClass); is executed. With the autoloader it needs a class name with proper case allowing the autoloader to load it.\n. It's ok in master: \nhttps://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L89\nhttps://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L92\nhttps://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L94\n. Thank you!\n. Could you please update README.md with instructions about installation via composer?\n. Done: https://packagist.org/packages/phalcon/zephir\n. I have tested the installation, and it works with:\nbash\nphp composer.phar require phalcon/zephir dev-master\nHowever, it does not run ./install thus the parser and zephir script is not available.\n. Yes, that would be great :)\n. This cannot be supported due to a limitation in the Zend Engine\n. Because of this: http://lxr.php.net/xref/PHP_5_4/Zend/zend_API.c#3388\n. Could you please rebase against master?\n. Could you please rebase against master?\n. Thanks\n. Thank you all for your comments, suggestions, time and votes!\nIt is clear that the majority of votes are for B and C. Of course, implementing this now would delay the development and this is not desirable. I personally vote for B, however, it's important to know that Zephir will probably offer this feature at some point in the future. Adding a second backend (PHP) would change the current identity of the project and it's for that reason that I wanted to discuss this with all of you.\nComplete the generation and creation of extensions is obviously our priority. Both achieve a stable version of Zephir as Phalcon 2 are also priorities, however, with an open mind and for multiple reasons, it would be good to have the ability to use PHP as backend sooner or later.\nFor those who contribute to Zephir: Keep in mind that this could be implemented later and it would be interesting (if possible) prepare the future changes for this.\nThanks!\n. @flip111 Zephir FUD?\n. Could you please rename unit-tests/Exstension to unit-tests/Extension?\n. Travis build is broken\n. I'm closing it\n. I think this must be implemented, while this solution works it is not elegant\n. In the current implementation, we don't have control over the properties updated from the PHP side, you can create a class:\nphp\nclass MyClass\n{\n    protected boolean myProperty2 = false;\n}\nThen in PHP\n``` php\n<?php\nclass X extends MyClass\n{\n     public function __construct()\n     {\n           $this->myProperty2 = \"hello\";\n     }\n}\n```\n. Zephir can use any PHP function you may need: https://docs.zephir-lang.com/en/latest/functions.html\n. This was fixed in #220\n. Could you please pull the latest changes added to the master branch and test again?\n. Actually, we haven't made any optimization for static methods or static properties since Phalcon make minimal use of them. They're just implemented in the slowest possible way.\n. Original PHP code does not use object-oriented programming, also I see unfair things like: this->setPp(1) instead of this->PP++ which is faster.\n. Using this code (https://gist.github.com/phalcon/0b323e9088a771d27700), I'm getting:\nZEPHIR - 0.16490006446838\nPHP - 0.20854711532593\n. @zaets28rus Could you please add some tests for try/catch according to this: https://github.com/phalcon/zephir/blob/master/test/trytest.zep\n. This is fixed in latest versions of Zephir\n. Done https://coveralls.io/r/phalcon/zephir\n. Could you please rebase?\n. I suggest this syntax:\n``` javascript\nclass MyClass\n{\n    private x;\nprivate y;\n\npublic function __construct(this->x, this->y);\n\n}\n```\nWith casts:\n``` javascript\nclass MyClass\n{\n    private x;\nprivate y;\n\npublic function __construct(<MyInterface> this->x, string! this->y);\n\n}\n```\nWith default parameters:\n``` javascript\nclass MyClass\n{\n    private x;\nprivate y;\n\npublic function __construct(this->x = 100, this->y = false);\n\n}\n```\nPassing additional parameters:\n``` javascript\nclass MyClass\n{\n    private x;\nprivate y;\n\nprivate a;\n\npublic function __construct(this->x, this->y, a)\n{\n    let this->a = a + 100;\n}\n\n}\n```\n. Could you please add some tests?\n. OK, now I understand the purpose of this\n. Adding the cast would silent any exception generated when toString is not returning a string so it would make harder debug bugs associated to this since the language is taking actions in the name of the developer. In my opinion it must only return the property as it is.\n. The automatic cast to string is still there could you please remove it?\n. Could you try again using latest Zephir?\n. @ovr it supports multidimensional arrays, why do you say that?\n. This is fixed in master\n. This is fixed in master\n. This is fixed in master\n. This happens because !values returns a boolean value which cannot be used in a 'instanceof' operation.\nPHP allows to do this because 'instanceof' has a difference precedence, but the code looks less than natural:\nphp\n$a = null;\nvar_dump(!$a instanceof stdClass); // bool(true)\n. This is fixed in master\n. Could you try again using the latest zephir?\n. Maybe because is not supported?\n. @ovr What kind of extension you need to load? Zephir can resolve any class/function in runtime if it's not present at compile time\n. But you can use any external extension from Zephir, Phalcon 2 relies on many extensions and you don't even need them installed in your system.\n. Can we change that method to 'rev' or 'reversed'?\n. What about\nphp\nlet fruit = [\"a\" : \"apple\", \"b\" : \"banana\", \"c\" : \"cranberry\"];\nfor key, val in fruit {\n   echo key . \" => \" . val . \"\\n\";\n}\n?\n. This implementation does not ensure that every trace in the method return the expected return types , the current implementation ensures that because it checks for instructions that leave the execution. \nphp\npublic function myMethod() -> boolean\n{\n    if 0 == 1 {\n        return false;\n    }\n    // expected return value is never returned\n}\n. This is fixed in master\n. Could you try again using the latest Zephir?\n. @jails You don't need it because extensions are always loaded in memory and they will not be loaded using autoloaders. PHP class names are case insensitive once they are loaded.\nVendor\\PackageMyNamespace\\ClassName  == vendor\\PackagemyNamespace\\className == vendor\\Package\\myNamESpace\\Classname == vendor\\package\\mynamespace\\classname\n. Great, Zephir code is now coloured by github :) \nhttps://github.com/phalcon/zephir/blob/master/test/bench/foo.zep\n. But ext/ also has C user code like this in Phalcon 2: https://github.com/phalcon/cphalcon/blob/2.0.0/ext/phalcon/annotations/base.c \nThe idea is ignore the C generated code?\n. Perphaps generating the C files as .zep.c ? Could that pattern can be ignored?\n. Yes, it will work, I think that also you need the same version of OS\n. Fixed in master\n. This is fixed in master\n. This cannot be implemented, I think this must be closed\n. This is supported in master\n. Closing since no tests were added for this PR\n. This is fixed in master\n. This is fixed in master\n. This is fixed in master\n. This is fixed in master\n. Zephir does not have a method symbol table, what the documentation says is that you can use that syntax to export a variable to the PHP userland\n. This is fixed in master\n. This is fixed in master\n. @ovr Let me review the code before merging it\n. No, I didn't\n. This is fixed in master\n. Thanks\n. This is fixed in master\n. How the assert will throw a ZE exception?\n. Build is broken, could you please check?\n. This is fixed in master\n. \"I review it\"\n. There was a comment there to avoid changing this: https://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L280\n. We need to keep also arrow for return type hints, I can't understand why do we need this\n. I uploaded a fix, so this must no be necessary.\n. Thanks\n. +1\n. Thanks\n. But, executing ./unit-tests/ci/before_install.sh before ./install would only work in Ubuntu... What about MacOSX and other linux distributions?\n. No, Zephir compiles down to C code and it does not have a symbol table\n. Great, another PR that no one reviews...\n. So basically, you added these changes without reviewing because unrelated messages are without answer?\n. > Yeah, because I am not interested to wait you review if you can't answer my messages\nAgain, I can't understand why is that related, the rule is simple, you wait for someone to review before merging the PRs into the repository\n. I think the problem is we have to check if the method properly implements parameters' types according to the implemented interface to produce a human readable message at compile time. Here: https://github.com/phalcon/zephir/blob/master/Library/ClassDefinition.php#L601. Only methods are currently checked. Parameters checking is remaining.\n. Thanks for the detailed description of this issue.\n. :-1: Not sure why is this a priority now\n. OMG such tragedy!!\n. Thanks\n. This is fixed in master\n. I don't think this is a good idea, Zephir is an opportunity to improve the performance of critical code running for PHP applications in 5.3 when upgrade is not an option. Maybe, the watch command could be a PHP 5.4 >= only optional feature?\n. You can use:\n``` zephir\nnamespace Hello;\nclass World {\n    public function test() -> string\n    {\n        return \"Hello!\";\n    }\npublic function say() {\n    string monTexte;\n    let monTexte = (string) self::test();\n}\n\n}\n```\nI think we could only avoid the compiler exception if the method is marked final, so a user can't extend the class in PHP and return something different than a \"string\" possible causing a segfault.\n. This is fixed in master\n. Do you have the GMP extension installed?\n. Build is broken in Travis\n. This is not a bug, you have to allocate memory in \"matches\" before passing it as a reference:\nzephir\nlet matches = null;\npreg_match(\"/[a-z]/\", \"string\", matches);\nPS: I know PHP does not work this way\n. Check how constants are read in Phalcon 2:\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/db/adapter/pdo/mysql.zep#L22\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/db/column.zep#L54\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/db/adapter/pdo/mysql.zep#L129\n. Why not use Wbase::NAME instead of widget::NAME?\n. 5.3 does not support Traits, so this will not probably implemented soon\n. I know, it does not mean no one it's using it\n. It's a different class type, only available in PHP >= 5.4\nhttp://lxr.php.net/xref/PHP_5_5/Zend/zend_compile.h#161\n. Yeah, implementing traits would be easy as you describe, I mean exposing traits as part of the extension will not be possible. They will look as standard classes.\n. Merging without review again?\n. It always fails in this test: \n``` bash\nStarting test 'Extension\\Oo\\DeprecatedMethodsTest::testPrivateMethodThrowsDeprecatedWarning'.\nhome/travis/build.sh: line 41: 24988 Segmentation fault      (core dumped) valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\nThe command \"valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\" exited with 139.\n```\n. Another:\nbash\nStarting test 'Extension\\TryTest::testThrow2'.\n/home/travis/build.sh: line 41: 25017 Segmentation fault      valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\nThe command \"valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\" exited with 139.\n. Random segfaults started in this commit: https://github.com/phalcon/zephir/pull/486\n. Already did this change in https://github.com/phalcon/zephir/commit/b68fdc702c65c5abefdeae8ce69d4ad2aa3b7300\n. Yes, it was amazing quite welcome\n. Single quotes are also escaped, I think they must be left as they were\n. Please re-open this if you're still experiencing this problem\n. This is already fixed\n. This is already implemented, thanks\n. @merlinyang521 Phalcon 2 does not have any php ini directive activated yet\n. @merlinyang521 Zephir does support it but Phalcon 2 does not currently use it\nhttp://zephir-lang.com/phpinfo.html\n. It shows:\nphp\nobject(Zafiro\\Test)#2 (1) {\n  [\"_tmp\":protected]=>\n  string(12) \"some service\"\n}\nobject(Zafiro\\Test)#3 (1) {\n  [\"_tmp\":protected]=>\n  string(12) \"some service\"\n}\n. We're using tabs for C files and spaces for PHP as this is a requirement of PSR2, I don't know if we need to start a discussion now, we have been working this way since the start of both projects\n. Current implementation does not work well with this structure:\n``` zephir\nnamespace Test;\nclass X\n{\n        public static function x(a)\n        {\n                if a == 1 {\n                        echo \"x\";\n                } elseif a == 2 {\n                        echo \"y\";\n                } elseif a == 3 {\n                        echo \"z\";\n                } else {\n                        echo \"?\";\n                }\n        }\n}\n```\n. Yeah, I know, it's not about compilation, it's about parsing:\nbash\n$ bin/zephir-parser a.zep \n{ \"type\": \"error\", \"message\": \"Syntax error\", \"file\": \"a.zep\", \"line\": 4, \"char\": 7 }\n. :cry: you're right lol\n. I'm ok with elseif \n. It's now fixed, thanks for reporting it\n. Could you please rebase?\n. @ovr ping\n. Could you please rebase?\n. Travis says it's failing in an 'elseif' test:\n``` php\n1) Extension\\StatementsTest::test544Issue\nFailed asserting that two strings are identical.\n--- Expected\n+++ Actual\n@@ @@\n-====>...............................................................................................\n+>...................................................................................................\n/home/travis/build/phalcon/zephir/unit-tests/Extension/StatementsTest.php:58\nFAILURES!                              \nTests: 169, Assertions: 944, Failures: 1.\n```\n. How using a function in divisions can affect the 'elseif' statement?\n. Division is now fixed https://travis-ci.org/phalcon/zephir/builds/39056460\n. InterfaceA and InterfaceB are good names, neutral meaning related to what he's trying to test\n. Thanks\n. Sure? Last time we tried, composer didn't execute hooks to compile the parser. https://github.com/phalcon/zephir/blob/master/composer.json#L34\n. I think this a good idea :+1:\n. You have to set up an avatar in Gravatar: https://en.gravatar.com/\n. Zephir uses static code analysis to report possible misspelled method names or report runtime exceptions in advance. \nYou can bypass these validations using:\nphp\nclass->{methodName}(); \nclass->{\"methodName\"}();\n. Why do we need to throw a number as exception?\n. Is it throwing a base \\Exception there?\n. Is this working as 'static' binding in PHP or it just works like 'self'?\n. I've tested it and I'm getting:\nphp\nstring(1) \"a\"\nstring(1) \"b\"\n. Build is now passing: https://travis-ci.org/phalcon/zephir/builds/37873866, can you try again?\n. Could you please fix the indentation? (use tabs)\n. Thanks\n. That commit avoids memory leaks, so it's the correct implementation, I don't think it causes segfaults\n. Do you understand what that commit does?\n. This won't be merged\n. This is now fixed in master\n. - Single quotes are for chars: http://en.wikipedia.org/wiki/Character_(computing)\n- Double quotes are for strings: http://en.wikipedia.org/wiki/String_(computer_science)\n. http://zephir-lang.com/types.html#string\n\nIn Zephir, string literals can only be specified using double quotes (like in C), single quotes are reserved for chars.\n. You can use <Class> x = null\n. Like this: https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/mvc/model/resultset/simple.zep#L52\n. This way:\n\nphp\n<Class> | null\n. Maybe there is no entry[0] but an element in another position or with a different index?\n. Zephir does not check for chars less or equan than 3 characters because they can be escape sequences:\nphp\nlet a = '\\x0';\n. I've added a fix for this in master\n. In Zephir, [ ] does not implicitly calls offsetSet and offsetGet, it assumes the parameter is an array\n. It can but the generated code will have more overhead if it's not assuming the variable is an array.\n. if the object implements \\Iterator you can use:\nphp\nfor route in iterator(this->routes) {\n   // ...\n}\n. I agree\n. It's working for me:\nphp\n$ php test.php \nint(0)\n. This must be fixed now in master\n. Automerge?\n. I've added an extra fix for this. Note that this is the right behaviour, as the variable is defined \"array\" it remains \"array\" all the time, so there's no way it has another type. Declaring the variable this way:\npublic function __construct(array data = null)\nit's the same as:\nphp\npublic function __construct(array data = [])\npublic function __construct(string data = null)\npublic function __construct(string data = \"\")\npublic function __construct(int data = null)\npublic function __construct(int data = 0)\nMaintain the same type across execution allows Zephir to produce specialised code for every static type.\n. I'm getting the expected result:\n``` php\nFatal error: Uncaught exception 'InvalidArgumentException' with message 'Parameter 'test' must be an instance of 'Zafiro\\Test2'' in /Users/scott/zafiro/a.php:4\nStack trace:\n0 [internal function]: Zafiro\\Test2->set(NULL)\n1 /Users/scott/zafiro/a.php(4): Zafiro\\Test2->autoSet()\n2 {main}\nthrown in /Users/scott/zafiro/a.php on line 4\n```\n. I think this should allow to extend/implement any missing class/interface. Could you please rebase against master?\n. Which question? \n\nhow can I avoid runtime test with Phalcon\\Application?\n. I think that exception could be converted into a warning\n. Could you please add a test?\n. @golovanov ping\n. You have to define the logic behind making the connection in some method of the extension. Also, for questions like these you can better use the forum: http://forum.zephir-lang.com/\n. Thanks\n. Could you please add tests?\n. This class is declared static http://lxr.php.net/xref/PHP_5_5/Zend/zend_exceptions.c#33, I don't think it can be used within an extension\n. Yeah, but the class entry is not visible to an external extension\n. Thanks\n. Could you please submit a full script/class/method that allow us to reproduce the problem?\n. I'll give it a check, maybe already freed closure function caches are being stored globally causing this problem\n. Could you please try again using Zephir in master?\n. Related to #203 \n. sudo ln -s /build/php/bin/phpize /usr/bin/phpize\n. This way:\n\nphp\nfor token in iterator(tokens) {\n    var_dump(token);\n}\nRemember that for questions like this you can better use the forum: http://forum.zephir-lang.com/\n. You mean at compile time or runtime?\n. It seems fixed now\n. Thanks\n. array_fill must be added here: https://github.com/phalcon/zephir/blob/master/Library/FunctionCall.php#L100\n. that would great, could you please submit the PR?\n. Thanks\n. Thanks\n. Thanks\n. I think that happens because the dynamic-property-access is not in this list: https://github.com/phalcon/zephir/blob/master/Library/Passes/LocalContextPass.php#L177\n. Yes, thanks\n. Thanks\n. Thanks\n. How this would work with VC9/VC11 required for PHP 5.3/5.4/5.5?\n. Thanks\n. Builds are broken in every PHP version, could you please check that?\n. Why submit a PR that breaks the repo without a fix instead of simply report the bug?\n. I think implement the same behaviour as in PHP will break Phalcon\n. @ogarbe I've submitted a change providing the same behaviour as PHP\n. Thanks\n. It would be great if it throws a BadParameterException/InvalidArgumentException instead of Catchable fatal error :cry:\n. Thanks\n. PHP Parse error:  syntax error, unexpected '[' in /home/travis/build/phalcon/zephir/Library/Stubs/MethodDocBlock.php on line 87 in PHP 5.3\n/home/travis/build/phalcon/zephir/Library/Stubs/MethodDocBlock.php:85:17: error - Expected \"if (...) {\\n\"; found \"if(...) {\\n\"\n/home/travis/build/phalcon/zephir/Library/Stubs/Generator.php:224:24: error - Line indented incorrectly; expected at least 24 spaces, found 23\n/home/travis/build/phalcon/zephir/Library/Stubs/Generator.php:226:24: error - Line indented incorrectly; expected at least 24 spaces, found 23\n. Use:\n./install -c\n. It's not required but recommended if you want to automatically make the executable available in PATH\n. It should be: zephir not zephyr\n. Did you install it with './install -c' ?\n. This happens when a class does not have the property you're trying to access\n. No, the parent class does not have that property, it's injected dynamically from the dependency injector\n. Zephir is not PHP, to access a dynamic property you have to use:\nzep\nthis->{\"view\"}\nhttp://zephir-lang.com/oop.html#updating-properties\n. Thanks\n. Mostly because it's not recommended, Zephir is unable to analyse the code inside c-blocks making the whole compiler useless. You only must use it if you need to do something that only works in C.\n. Feel free to use the tool you think it's more appropriate for your work\n. Yes, it's required\n. Duplicate of #660 \n. It's not a stupid error\n. All languages implement conventions, for instance, in Ruby:\nruby\nclass nazarpc\nend\nBut this gives you the following error:\n$ ruby test.rb \ntest.rb:2: class/module name must be CONSTANT\nInstead of that, you can use:\nruby\nclass Nazarpc\nend\nThis works perfectly, but maybe the authors didn't want to see lowercased class names.\n. PHP automatically transforms values that can't be stored as long/double into strings (or gmp objects) using the gmp. You can achieve the same result by using it:\nzep\nvar y;\nlet y = gmp_mul(141427 * 24 * 60, 60);\nerror_log( y ); // result : 12219292800\n. The warning raised happen because the class name has a namespace like Mvc\\User so clang thinks the \\U must be escaped\n. The fix does not solve the problem\n. Thanks\n. @fezfez Great job!\n. Comments are part of the language this is mentioned in the docs: http://zephir-lang.com/language.html#comments\n. You might want to use a 'while' instead of a 'for'\n. Zephir (as PHP) uses reference counting to release allocated resources, if a resource is referenced somewhere Zephir/PHP can't release it.\n. It's http://zephir-lang.com/\n. Thanks, but this is not the official website, just a demo,\n. Thanks\n. These warnings are generated on purpose, also, you don't have to install the test.so extension unless you're interested on internal development.\n. Thanks!\n. Thanks\n. Thanks\n. variable b must be an array\n. arg0 is defines as string and its type is never changed to other type\n. Static variables aren't supported by Zephir\n. @ovr Can you please built this command directly as a zephir command?\n. Are you getting an error or something?\n. Please move it to the top of the file, also we should use an autoloader now that we have namespaces.\n. Could you please remove this hardcoded path to the extension?\n. ",
    "niden": "Thanks!\n. Thank you!!\n. Thank you all for the votes and the feedback. \nFor the record my vote was going to be B :)\n. @ovr @nkt @thaJeztah \nZephir is a new language that we are all developing and developing with. It is imperative that we start with a good structure in terms of standards so that we don't end up with technical debt later on.\n@nkt the idea is really good. I like it but I would like to see spaces not tabs.\n@ovr Also great idea to add the coding standards for the project.\nIf people want to contribute to Zephir they can do so by following the coding standards that we specify.\nI will open a new issue where we can discuss the coding standards we are introducing and come up with a final decision.\n. Generating plain php from Zephir has been discussed since the early days of Zephir development. I agree with Andres that a refactoring of the compiler will provide tremendous functionality. \nOne output will be php5, one 7, one C and who knows what else. ;)\n. @KorsaR-ZN Thank you for this! \nWould you mind checking the branch? It appears there is a conflict in parser.lemon that needs to be resolved.\nWe will check this as soon as we can.. I need to convert the zephir blog to our blog platform and move it out of tumblr. Because it is in tumblr for now, the certificate does not work\n. I am by no means an expert in C and how PHP internals work, so thank you for this explanation!\nIt is unfortunate that this automatic coercion happens, I would have loved this not to be the case.\nHowever I think we can leave this as is and ensuring that whoever wants strict types, will have to use declare(strict_types=1) at the top of their PHP file. \nIs it even desired to export these type hints to Zend and PHP? If so, would it be acceptable to omit them when strict typing is desired (that is, not tell PHP what the types are expected to be, so Zephir can reject them rather than allow them to be converted)? Assuming we want such hints, but aren't willing to leave them out for strict types, we'll need to figure out how to get PHP to tell us what type was originally passed to us, if not how to make it simply pass the original value itself.\nI think that would be great to export the type hints to Zephir and PHP and follow your suggestion to reject them etc. Sadly I don't really know how to do what you suggested but that is my 2 cents.. We need to add this in the documentation.\n. You can also run\nzephir fullclean\nbefore running\nzephir build. No I actually never did. I circumvented the issue by putting the actual value of the constant :)\nThis can be closed.. @sergeyklay There you go buddy. Thanks. Yes locally all tests pass just fine :/. ",
    "ghost": "Thank you!\n. Thank you!\n. Thank you!\n. Thank you!\n. @zaets28rus it is not really defined in the core; the compiler substitutes FILE, DIR etc with the actual values when compiling the source code.\n. @zaets28rus if you need __FILE__, this will be the name of the script being processed, __DIR__ is the directory name where that script is located.\n. /home/vladimir/workspace/zephir/ext/test/constants.c: In function \u2018zim_Test_Constants_testPHPVersionEnvConstant\u2019:\n/home/vladimir/workspace/zephir/ext/test/constants.c:64:2: warning: passing argument 3 of \u2018zend_get_constant\u2019 from incompatible pointer type [enabled by default]\n  ZEPHIR_GET_CONSTANT(return_value, \"PHP_VERSION\");\n  ^\nIn file included from /home/vladimir/.phpenv/versions/5.4.10/include/php/main/php.h:404:0,\n                 from /home/vladimir/workspace/zephir/ext/test/constants.c:6:\n/home/vladimir/.phpenv/versions/5.4.10/include/php/Zend/zend_constants.h:63:14: note: expected \u2018struct zval *\u2019 but argument is of type \u2018struct zval **\u2019\n ZEND_API int zend_get_constant(const char *name, uint name_len, zval *result TSRMLS_DC);\n              ^\n/home/vladimir/workspace/zephir/ext/test/constants.c: In function \u2018zim_Test_Constants_testPHPVersionEnvConstantInExpValue\u2019:\n/home/vladimir/workspace/zephir/ext/test/constants.c:111:2: warning: passing argument 3 of \u2018zend_get_constant\u2019 from incompatible pointer type [enabled by default]\n  ZEPHIR_GET_CONSTANT(a, \"PHP_VERSION\");\n  ^\nIn file included from /home/vladimir/.phpenv/versions/5.4.10/include/php/main/php.h:404:0,\n                 from /home/vladimir/workspace/zephir/ext/test/constants.c:6:\n/home/vladimir/.phpenv/versions/5.4.10/include/php/Zend/zend_constants.h:63:14: note: expected \u2018struct zval *\u2019 but argument is of type \u2018struct zval **\u2019\n ZEND_API int zend_get_constant(const char *name, uint name_len, zval *result TSRMLS_DC);\n              ^\n. Please try:\n``` patch\ndiff --git a/ext/kernel/main.h b/ext/kernel/main.h\nindex 4c1b7d6..af4ddcf 100755\n--- a/ext/kernel/main.h\n+++ b/ext/kernel/main.h\n@@ -419,7 +419,7 @@ int zephir_fetch_parameters(int num_args TSRMLS_DC, int required_args, int optio\n#define ZEPHIR_GET_CONSTANT(return_value, const_name) \\\n        do { \\\n-               if (FAILURE == zend_get_constant(SL(const_name), &return_value TSRMLS_CC)) { \\\n+               if (FAILURE == zend_get_constant(SL(const_name), return_value TSRMLS_CC)) { \\\n                        ZEPHIR_MM_RESTORE(); \\\n                        return; \\\n                } \\\n```\n. > After run make clean in ext folder\nModifications to header files do not cause the source code to be rebuilt\u00a0\u2014 this is a shortcoming of the PHP build system. You either have to run make clean && make or make -B.\n. Thanks!\n. Awesome, thanks!\n. This will do:\n``` c\nchar strndup(const char s, size_t len)\n{\n    if (s) {\n        char *ns = malloc(len + 1);\n        if (ns) {\n            ns[len] = 0;\n            return strncpy(ns, s, len);\n        }\n    }\nreturn NULL;\n\n}\n```\n. @zaets28rus \u0410 \u043a\u0430\u043a \u044d\u0442\u043e \u043f\u043e-\u0440\u0443\u0441\u0441\u043a\u0438 \u0437\u0432\u0443\u0447\u0438\u0442? :-) \u042f \u043d\u0430 \u0430\u043d\u0433\u0435\u043b\u044c\u0441\u043a\u043e\u043c \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u043d\u044f\u043b.\n. @phalcon \n\nI'm not sure if these ones can be exported in a c-extension.\n\nYes, they can: http://lxr.php.net/xref/PHP_5_5/Zend/zend_constants.h#46\nYou just need to call REGISTER_NS_xxx_CONSTANT from MINIT function.\n. Thanks!\n. \u041d\u043e \u0431\u0440\u0430\u043d\u0447\u0438 \u043b\u0443\u0447\u0448\u0435 \u0432\u0441\u0451 \u0436\u0435 \u0446\u0435\u043d\u0437\u0443\u0440\u043d\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c\n. Thanks\n. ./configure CFLAGS=\"-O0 -g3\" && make, then run valgrind and you will see more details.\n. me to\n. I vote B,\n. \u5e38\u91cf\u6211\u8bb0\u5f97\u4e0d\u80fd\u8fd9\u4e48\u5199\n. \u5982\u679c\u4e0d\u652f\u6301\u5c31\u8001\u8001\u5b9e\u5b9e\u5199\u5168\u5c31\u662f\u4e86\uff0c\u88c5\u4ec0\u4e48B\uff1f\n. \u6587\u6863\u4e2d\u6ca1\u6709\u8bf4\u652f\u6301\u8fd9\u79cd\u5199\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5199\u5168\u5728\u8bd5\u4e00\u4e0b\uff01\n. \u4e0d\u9519\uff0c\u611f\u8c22\u4f60\u7684\u4ed8\u51fa\uff01\n. @nkt \u6211\u82f1\u8bed\u4e0d\u662f\u5f88\u597d\u554a\uff0c\u770b\u61c2\u4f60\u4eec\u7684\u4ea4\u6d41\u662f\u6ca1\u95ee\u9898\u7684\u3002\u4f60\u4eec\u770b\u6211\u5199\u7684\u82f1\u8bed\u4f30\u8ba1\u5c31\u8ddf\u770b\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u6837\u3002\u3002\u3002\n. @prisis very good!\n. In our country, the Google site is not open....\n. Syntax error http://www.zephir-lang.cn/operators.html#fetch\n. @serg-deep I understand.I thank you very much.\n. @serg-deep Is there a timeline or alternative solutions?\n. thx\n. ths\n. @ovr \nclass Logger  \n{\n    public messages = [ ];\n}\nzephir build\nZephir\\CompilerException: Property '_servers' is not defined on class 'Leaps\\Log\n\\Logger' in E:\\leaps\\leaps\\Cache\\MemCache.zep on line 114\nprivate _servers = [];\n    -------------------------^\nos Centos 6.5 X64\nZephir version 0.5.9\n. \u8fd9\u4e24\u4e2a\u6587\u4ef6\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u8c03\u7528\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ed3\u679c\u5c31\u6709\u70b9\u83ab\u540d\u5947\u5999\u4e86\uff0c\u5982\u679c\u5220\u9664\u4e86logger\u5728\u7f16\u8bd1\u662f\u901a\u8fc7\u7684\u3002\n. @ovr  These two documents are not related, does not call between them, so the results are a bit strange, if you delete a logger in the compiler is passed.\n. @ovr  After my test as long as I write \n\u00b7\u00b7\u00b7\npublic messages = [];\n\u00b7\u00b7\u00b7\nThe Baocuo\n. @hylent thx\n. Thank You!\n. for ($i = 0; $i <= 10; $i++) {\n    echo $i;\n}\n\u78b0\u5230\u8fd9\u79cd\u5f88\u90c1\u95f7\n. @steffengy \u6211\u5728Windows 8.1 VC11\u4e0b\u7f16\u8bd1\u63d0\u793a\u6211\u65e0\u6cd5\u6267\u884cJS\uff0c\u53c2\u8003PHP\u7684\u7f16\u8bd1\u811a\u672c\u53d1\u73b0\u7528BAT\u6765\u542f\u52a8JS\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\n. @OVR ....\n. @OVR In fact I am at home using the Macbook in the company are required to work under Windows, very helpless...\n. @ovr I was testing\n. @ovr  \nshell\nobject.c\nE:\\Projects\\leaps\\ext\\kernel\\object.c(116) : error C2143: \u8bed\u6cd5\u9519\u8bef : \u7f3a\u5c11\u201c;\u201d(\u5728\u201c\u7c7b\u578b\u201d\u7684\u524d\u9762)\nE:\\Projects\\leaps\\ext\\kernel\\object.c(118) : error C2065: \u201ci\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\nE:\\Projects\\leaps\\ext\\kernel\\object.c(118) : warning C4018: \u201c<\u201d: \u6709\u7b26\u53f7/\u65e0\u7b26\u53f7\u4e0d\u5339\u914d\nE:\\Projects\\leaps\\ext\\kernel\\object.c(119) : error C2065: \u201ci\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\n. @ovr The error message is that syntax error\nI checked the grammar, sure no mistake. I change the variable declaration position again test!\n. @ovr Declare a variable in the beginning can be compiled through, thank you!\n. Which branch is the initial support in?\n. Great. How would one compile the extension when using 7? Are there any options to set?\n. After running generate and build under Zephir, the compilation fails. Where do I specify a backend?\n. Who can help me \n. Oh....\nthanks\n. @niden Yes, but then build time takes longer.\nEdit: The biggest problem is that I just make a small change and build time takes longer.. ",
    "andresgutierrez": "thanks!\n. I've been working on this, and I ended up with a possible better solution, it's partially tested with Phalcon, this is already pushed into master, so you can try the changes out if you want, first of all you have to install Phalcon 2 this way:\nphp\nzephir build --export-classes\nThis command installs Phalcon exporting class entries' symbols which are needed to dynamically load classes from an external shared library also copies headers to the shared include directory making classes available to other extensions.\nThen, in the extension you want to use Phalcon 2, edit the config.json and add the following:\njson\n\"external-dependencies\": {\n        \"phalcon\": \"/Users/andres/cphalcon\"\n}\nThis will add an external dependency to the project allowing to use Phalcon's classes as they were internal classes in the extension. As you can see, this approach allows to use any number of external Zephir extensions. This strategy also has more advantages, static analysis is available taking into account external classes, and other optimizations like constant propagation and method caches as well.\n```\nZephir\\CompilerException: Class 'Phalcon\\Version' does not implement method: 'hello' in /Users/andres/zafiro/zafiro/functional.zep on line 117\n  version->hello();\n------------------^\n\n```\nNote that extensions that depend on symbols exported in external extensions must be loaded after their dependencies:\nphp\nextension=phalcon.so\nextension=myext.so\nThe procedure must work for other extensions created with Zephir. This method does not work with non-Zephir extensions.\n. @darkgaro It must now work with extensions getting the class entry in runtime\n. There are many things we want to do. Personally and overall, I want to finish all the planned stuff, implement missing features, improve performance and stability so we can release a working beta. Also, our priority is Phalcon 2. An important number of tests are passing and most functionality in 1.3 is implemented so I think we could have a working release there soon.\nUnfortunately I can not tell you the date that certain features be ready because as you know we have regular jobs and we aren't full time dedicated to these projects, so any date I tell you could not be accomplished.\nIn general, features in the near future I want to work are:\n- Improve Branch Manager: Many programmer oversights are currently resulting in segfaults. This is because the compiler is not detecting that variables are assigned in conditional branches and is not reporting any warning that helps the developer to fix them. Currently doing this analysis on the AST is not ideal because the jumps between a branch and another are difficult to analyze, so probably the best is translate the code from an AST into an new intermediate representation and perform the analysis on this.\n- JIT Compiler: I started to implement a JIT compiler with @carvajaldiazeduar, now available in the runtimedirectory as a separate extension. This runtime will probably improve the experience of developing with Zephir and will allow us to implement adaptive optimizations which are only available through profile based compilation using the current AOT compiler. However there are many things to do there and technical challenges to overcome so I'm postponing this for a while until the AOT compiler is almost complete and ready to work.\n- Inline methods/functions: This is an optimization I want to implement. It will replace calls by inlining the full implementation of the method, possibly improving performance as method call overhead could be easily become a bottleneck in cpu-bound applications. Probably an easy way to start developing this is just inline those methods the developer has explicitly marked as inline but it would be probably good to add some kind of built-in analysis to promote small or very often called methods into \"inlined\" methods.\n- Record and replay debugger: As some weird scenarios are hard to debug and this was probably the reason why I started working in the JIT runtime. I think this kind of debugger would be also a great sub-project to start working to. A recorder would be great when debugging non-deterministic bugs, like random test failures, also Zephir users can upload these recordings somewhere to help us out to reproduce problems.\nAnd much more. For now, thanks to the help of @mruz and @kjdev, Phalcon 2 has made great progress  and once completed we'll have more time to venture into these projects.\n. I think we have to focus our energy into releasing the best tool for creating ZE extensions. This task is far from complete, what I see is that a lot of energy is spent on tasks that are not priority now. \nLike any open source project, I understand that contributors are free to work on problems in which they are motivated to. However, I would like to emphasize some issues that in my opinion are priority right now:\n- Unit tests: Unit tests are never enough, the current suite is only taking into account basic functionality and there are many features that don't even have tests. The test suite is very small for the magnitude of a project like a programming language. We need a much more extensive test suite if we're thinking of producing code for different backends. Phalcon 2 has helped us to identify several issues but I think Zephir must have their own tests and not depend on whether Phalcon 2 works or does not. We have to create some documentation that clearly explains how to submit unit-tests to Zephir.\n- Missing Functionality: Basic functionality is not fully covered, for example: let b = (string) 'A' Sometimes Zephir produces code that cannot be compiled without any notice. This is mostly happening due to the basic unit-tests suite that does not allow to identity these problems in advance. Some issues that lead to currently compilation errors or segfaults:\n  - Using the iterator optimizer in for`` statements is buggy because it [does not handle exceptions correctly](https://github.com/phalcon/zephir/blob/master/ext/test/flow.zep.c#L1588)\n  - Code that traverses arrays usingforis also buggy [because it's not identifying when to duplicate the internal hash or not](https://github.com/phalcon/zephir/blob/master/Library/Statements/ForStatement.php#L646)\n  - Interfaces implemented by classes [are not checking](https://github.com/phalcon/zephir/blob/master/Library/ClassDefinition.php#L601) the parameter types meet the ones defined on the interface also the return types\n  - [Read/Write](https://github.com/phalcon/zephir/blob/master/Library/Detectors/WriteDetector.php#L29) detectors are very weak because they do not check if parameters are modified in function/methods that pass parameters by reference. Also whenfetchare used over them.\n- **Windows Support**: One of the project's promises is the production and compilation of extensions in Windows. However, we are not moving in this direction. #471 is a great contribution but we need to implement a way to produce the extension using justzephir build` like in the Unix based operating systems. Also we need to write documentation here on how to set up MSVC and integrate it with Zephir.\n- Optimizers: Many common PHP functions does not have optimizers and others that are currently implemented do not work or they're disabled. Optimizers are an incredible weapon that Zephir has in order to improve performance and take advantage of low-level compilation. We need to identity functions that potentially need optimizers and start implementing them. Also, most optimizers does not have unit-tests.\n- Documentation: Documentation is still quite basic, again we need a more extensive documentation full covering all the functionality provided by Zephir. For example, current documentation does not mention how to use exceptions and no mentions to the array/object/callable types, no mentions about the stub generation functionality and so on.\nRegarding Zephir's architecture, I agree we have/need to split and refactor the current to compiler to support more code generation backends. However, before heading this goal, I think the only viable translator we can create now is a Zephir to PHP generator. Additionally, we have not made a detailed study whether all the current functionality in Zephir can be successfully translated to PHP and whether it will have full compatibility. I don't know and I'm not sure if we have the expertise to build other extensions different than ZE extensions. Also, I don't know if we have the human resources and knowledge to tackle more types of extensions and whether we can commit to this. \nCurrently, the parser is a different component that produces JSON and can be used by anyone to create a code generator, again I don't see the need of moving it to a different repository, if it's just aesthetic reasons this could be postponed to another moment.\nRegarding, using @zephir-lang, I also don't understand the reasons behind this, if it's again aesthetic reasons I don't think it's a strong argument. I don't know who is the owner of that account I only have received collaborator access to that account. I really do not see any problem seeing the user @phalcon here, this project was created for us to create Phalcon 2 and help others to create their own extensions in an easier way, I do not see why it can't be here. What are the strong arguments to move it to another user?\n. @carvajaldiazeduar Good catch, hadn't thought about it.\nAlso, we need to think how memory will be managed on references, if the original memory a reference points to is freed we probably will have a segfault, so we need to increase the ref-count in the original variables and track references in the memory frame to release them properly. \n. @ovr Maybe my explanation was not clear, but:\n- Implement a C++ layer is not viable now anyway, and not sure why it fixes the problem or what problem fixes, Zephir already has a memory manager to track and release variables\n- The problem is solved using a double pointer to a zval instead of a simple zval pointer\nWhat problem are you trying to solve?\n. You're right, not sure why PHP 5.3 builds aren't complaining on the missing INTERNED_LEN macro.\n. Zephir provides many aids to find errors and problems in advance (static type analysis, warnings, etc) which would help us a lot to improve the quality of the compiler. The parser (which is currently in C) could be part of a single extension increasing the performance as the overhead of calling zephir-parse executable is removed. This is a goal we're pursuing also in #552\nAdditionally represents another major project that would serve as an example to improve Zephir and serves as an example of its potential. I have no doubt that this would be a great project and now is not the time to address this. Just letting this for the sake of discussion.\n. @nkt you can take the parser in Zephir JIT as example: https://github.com/phalcon/zephir/tree/master/runtime\n. What error are you getting?\n. A recent commit introduces a compilation pass that determines whether the key must be copied or not potentially saving memory. If you can determine the exact scenario in which the key is not being copied the problem can be fixed.\n. Thanks, I think I can reproduce the issue now\n. I'm working on this, going to disable it until the code generation is safer\n. @alanwillms If anyone wants to submit a change implementing this I'll be happy in merging it\n. @alanwillms You don't need to know C, Zephir is written in PHP\n. I've checked the code and there are some differences between code bases, Zephir validates types and perform implicit type coercion while PHP does not:\n- https://github.com/dgafka/Php-BookStore/blob/master/src/Dgafka/BookStore/Business/Model/Entity/Author.php#L63\n- https://github.com/dgafka/zephir-BookStore/blob/master/dgafka/dgafka/bookStore/business/model/entity/author.zep#L41\nAlso, this kind of dynamic dispatch is hard to optimize for both Zephir/PHP: https://github.com/dgafka/Php-BookStore/blob/master/src/Dgafka/BookStore/Business/Service/Service/CommandQueryBus.php#L16\nI've modified a bit the Zephir test to take advantage of how Zephir currently does work: https://gist.github.com/phalcon/f464a7c753a15393720b\nRunning 9,000 iterations, it's giving me the following: \n```\nPHP\ntime php src/test/test.php > /dev/null\nreal    0m43.017s\nuser    0m42.699s\nsys 0m0.154s\nZephir\ntime php test/test.php\nreal    0m36.779s\nuser    0m36.620s\nsys 0m0.083s\n```\nIn this case Zephir is 17% faster than plain PHP.\nIn general, Zephir makes use of most of the C structures that PHP does for arrays/objects so majority of the time doing operations in one language or another will lead to almost the same performance, in regards to OOP/Array manipulation. \nPHP implements guards to avoid re-looking up properties info and method information while Zephir does implement this differently. Zephir uses compilation heuristics to avoid looking up properties when possible, if no opportunities are found out it's likely that Zephir performance will be less or worse than PHP. \nI think Zephir is only in the ability to improve performance between 1% and 25% in this type high-level object-oriented code bases. \n. ping @ovr\n. ping @ovr\n. Automerge?\n. This is fixed in master\n. Closing this, leaving #952\n. @masums Are you compiling a custom Zephir project?\n. Can you please try again?\n. ping @ovr\n. Those properties use magic getters to ensure the properties aren't writable to the PHP userland.\n. :+1: \n. @steffengy I think we have to manually update it before tag a new version\n. ping @nkt \n. The more errors you get, the better you application can be\n. -1\nWe need to easily check the code generated for discussing purposes \n. You need a visibility before 'function': public, protected, private, etc\n. @steffengy yes, could you please submit a regenerated parser?\n. Could you please try again using latest master?\n. Thanks\n. Uppercase identifiers are reserved for constants\n. It does not work passing an array as first parameter\n. Thanks\n. This was fixed in the latest commit\n. Thanks\n. If you want multiples types you need to use var instead of string\n. Variables can only be of the defined type, this ensures type safety, there is no NULL in the string universe of values so an empty string is the most approximate value for it. \n. Thanks\n. Thanks\n. ping @ovr\n. Thanks\n. It seems the problem happens because PDO::prepare returns a reference with refcount=1, can you try again using master?\n. Thanks\n. Thanks\n. I've added tests for calling __call magic methods in:\nhttps://github.com/phalcon/zephir/blob/master/test/mcalldynamic.zep\nhttps://github.com/phalcon/zephir/blob/master/unit-tests/Extension/MCallDynamicTest.php\nThey're passing:\nhttps://travis-ci.org/phalcon/zephir/builds/57385594\n. Did you install the dependencies?\nphp\ncomposer install\n. You have to add at the beginning of the file /home/wskdf/coba/optimizers/TahedeTesOptimizer.php:\nphp\nuse Zephir\\CompiledExpression;\n. You have to add the C source file where my_tahede_tes is implemented to your project, like this: https://github.com/phalcon/cphalcon/blob/2.0.0/config.json#L23-L34\n. Your parser needs to be recompiled:\nbash\n./install\n. You need 0.6.1 as it's generating the missing parameter TSRMLS_CC your compiler is asking for:\n- https://github.com/phalcon/zephir/blob/3d91448b188b49d1354e8843d86c2c716cc2e334/ext/kernel/operators.h#L169\n- https://github.com/phalcon/zephir/blob/b54c88832a60b593f9cdfdeb2d34f36af0bf3169/Library/Optimizers/FunctionCall/FloorOptimizer.php#L70\n- https://github.com/phalcon/zephir/blob/959818a694b1cbe1ecf0e01f09375ca179efab80/ext/kernel/operators.c#L896\n. Are you copying the files in ext/kernel/ ?\n. Thanks\n. Can we translate the build account to phalcon or zephir-lang?\n. OK, this is great, thanks!!\n. Thanks\n. Could you please post the code that shows the problem?\n. Can you try again using the latest commit in master?\n. Thanks!\n. This way:\nphp\nthis->{\"read\"}(this->getId())\n. or: \nphp\npublic function something(<\\Closure> arg)\n. A closure is not a type, it's a class:\n- http://php.net/manual/en/language.types.php\n- http://php.net/manual/en/class.closure.php\n- http://php.net/manual/en/functions.anonymous.php\n. Change it by:\nphp\nthis->{\"write\"}(sprintf(\"// line %d\\\\n\", node->getLine()));\n. I guess it's not clear in the docs, if you want to collaborate feel free to add it here: https://github.com/phalcon/zephir-docs/blob/master/en/oop.rst#calling-methods\n. Thanks\n. I think to make it work you have to add the arguments it receives\n. What do you want to fix by adding this option?\n. @kjdev why not update the prototypes instead to match the signature in the extension?\n. @kjdev if you have the extension loaded it will ignore the prototypes\n. It's probably the @, that operator does not exist in Zephir\n. It must be:\n``` php\nnamespace TwigZ;\nclass Test {\npublic function anotherMethod(testVar)\n{\n    if !(testVar instanceof \\TwigZ\\SimpleFilter) {\n        return false;\n    }\n}\n\n}\n```\n. What is the backtrace of this segfault?\n. I think the solution is not clean, maybe would be better to check here:\nhttps://github.com/phalcon/zephir/blob/master/ext/kernel/exception.c#L55\nif variable object is not an object and then create an exception there:\nc\nif (Z_TYPE_P(object) != IS_OBJECT) {\n    object_copy = object;\n    ALLOC_INIT_ZVAL(object);\n    object_init_ex(object, zend_exception_get_default(TSRMLS_C));\n    // ... call the constructor passing object_copy as parameter\n}\nThis will convert any non-object to an exception\n. Yes please\n. 'empty' does not work as in php, maybe you want to use 'isset'?\n. Thanks\n. Yes, it should be treated as constructor: http://php.net/manual/en/oop4.constructor.php\n. I think it could be related to the redis extension, Zephir is written in PHP no custom C code is executed when generating the extensions.\n. :+1: \n. mixed is not a type, maybe use var?\n. If the constant does not exist at compile time what would be the behaviour? I think it should throw an exception\n. It's there https://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/MemstrOptimizer.php\n. Using curent version of Zephir + this code:\n``` zep\nclass Geometry\n{\n  public static function run(array list, int count) -> void\n  {\n    int i = 0; var item;\n    while i < count {\n      let item = list[i];\n      self::distanceStatic(item[0], item[1], item[2], item[3]);\n      let i++;\n    }\n  }\npublic static function distanceStatic(float x1, float y1, float x2, float y2) -> float\n  {\n    return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n  }\n}\n```\nMy results are:\n2.4679141044617 # Zephir run\n3.2887589931488 # Zephir static\n3.4268410205841 # PHP\n$ zephir version\n0.6.2a\n$ php -v\nPHP 5.6.8 (cli) (built: Apr 17 2015 19:44:16) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2015 Zend Technologies\n    with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies\n. Maybe give it a try using internal methods? https://github.com/phalcon/zephir/pull/962\n. @ping ovr\n. @steffengy I think we could fetch super-globals in the branch zero, so they will be available for any branch +1\n. Old issue https://github.com/phalcon/zephir/issues/756\n. @steffengy I like your approach, however I think now is the right moment to refactor the compiler to allow more than one output backend so we can generate extensions for php5, php7 and probably generate plain php in the future\n. The main idea is, create a directory called: Library/Backends\nLibrary/Backends\n     ZendEngine2/\n       Expressions/\n         Operators/\n         Statements/\n         Backend.php\n     ZendEngine3\n       Expressions/\n         Operators/\n         Statements/\n         Backend.php\n     PHP\n       Expressions/\n        Operators/\n        Statements/\n        Backend.php\n     ...\nFor the kernel:\nkernels/\n      ZendEngine2/\n            memory.c\n            ...\n      ZendEngine3/\n            memory.c\n            ...\nSo, instead of generating the code, we ask a \"backend instance to do it\":\n``` php\n//Before\n$codePrinter->out('ZEPHIR_CPY_WRT(' . $variable1->getName() . ', ' . $variable2->getName() . ');');\n//Now\n$this->backend->genCopyOnWrite($variable1, $variable2);\n```\nIn this case the implementation of \"how to generate the copy on write\" is independent per backend.\n. @steffengy Yes, this is the idea I have, would you mind submit a PR?\n. @Izopi4a  I think the progress of Phalcon + PHP7 must be followed in the Phalcon repository. There are couple of C sections that must be migrated to PHP7.\n. You can use any PHP function or Class within a Zephir extension: https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/cache/backend/libmemcached.zep\n. Thanks\n. Thanks\n. Thanks for the PRs\n. Do you have mongo extension >= 1.3.0 loaded?\n. It does not like that, however you can change it to:\nzep\nconnect->{\"setReadPreference\"}(readPreference);\n. Nice!\n. Could you please provide the code that produces the issue at first instance?\n. It means the method getAvailableDrivers was defined more than once in a class\n. It's because of the @ https://github.com/AlloVince/zephir-test/blob/master/symfony/component/process/pipes/unixpipes.zep#L121\n. Is this still repro using latest Zephir?\n. getpwd() should give you the current path\n. Yes, it must be getcwd\n. Thanks\n. Thanks\n. Implemented in #985\n. Could you please use fix the PSR2 style? https://travis-ci.org/phalcon/zephir/jobs/65245051#L2116\n. Thanks\n. Could you please rebase? What would happen if there is a default value in config.json?\n. Thanks\n. Thanks\n. Thanks\n. IS_CONSTANT_ARRAY is available since PHP 5.3 http://lxr.php.net/xref/PHP_5_3/Zend/zend.h#520\n. Thanks\n. @ovr What do I have to do?\n. @ovr It's added, what do you mean by \"budget\"?\n. Thanks\n. Thanks\n. ``` php\n<?php\nclass Math\n{\n        function check()\n        {\n                return method_exists(self, \"fibo\");\n        }\n}\n$n = new Math();\nvar_dump($n->check())\n```\nPHP Notice:  Use of undefined constant self - assumed 'self' in /Users/andres/zephir/a.php on line 7\n. Longs cannot be used in concat operations\n. You can write it as:\nzep\nif isset data[\"test\"] {\n  return 1;\n}\nlet dataStr = implode(\"-\", data);\nreturn (int)sizeof(data);\n. @SliceOfLife Can be closed?\n. \"chaos\"\n. Nice, it seems the build is failing because of slowness in a Travis box, it looks good so far\n. Did you finish the work on this?\n. Thanks!\n. After this commit, compilation is taking a lot of memory, do you have any idea?\n``` php\n\nzephir build\nPHP Fatal error:  Allowed memory size of 268435456 bytes exhausted (tried to allocate 130968 bytes) in /Users/andresgutierrez/zephir/Library/ClassMethod.php on line 1138\n```\n. It looks it's caused by a recursive calculateDependencies() with circular references.\n. I found the problem, as now the classes are compiled in a different order, class constants were not compiled when expected causing cyclic compilations.\n. Thanks\n. Thanks\n. Thanks\n. Nice\n. @steffengy Looking at this right now :)\n. @steffengy Do you have more incoming changes?\n. Thanks!\n. Thanks\n. Identifiers in uppercase are reserved for constants, you have to use: Ip\n. Could you please elaborate why the default namespace \u2018\u2019 has better performance ?\n. I execute your script and I get:\n\nRunning Time:0.022134065628052 // aa()\nRunning Time:0.009253978729248 // ns\\aa()\nIn my case, ns\\aa() is 4.5x faster than aa() according to your example \n. Fixed in https://github.com/phalcon/cphalcon/pull/10612\n. @guweigang Foo is created in the current scope where the variable is created, in the case of test():\n``` php\nfunction test()\n{\n  $util = new Util\\Greeting();\n  $util->say();\n  echo $foo;\n}\n```\n. @guweigang it creates variable in the scope where the function say() was created\n. Thanks\n. Fixed in master\n. Does Ice\\Config a property called 'messages'?\n. Thank you!, I think it's time to introduce a development branch?\n. I'm going to create a new branch (development), would you mind to submit your PR there?\n. @steffengy Could you please submit this against https://github.com/phalcon/zephir/tree/development ?\n. Thanks\n. Zephir does not have specialized structured for arrays different than the same structures for arrays provided by PHP so it's likely the same speed. Probably when PHP7 support is available it would improve.\n. Huge thanks!\n. Could you please submit this to the development branch?\n. Could you please submit this to the development branch?\n. Thanks. I'm wondering if we should freeze master branch\n. This is the intended usage, as it's an array of chars, it returns a char like in C, it does not return another string like in PHP, it isn't an array of strings.\n. Yeah, but Zephir is not PHP\n. @ovr OMG, and get things merged without reviewing?\n. > Sometime it's needed 1000500 pings(s) to get your attention\nYou don't have to do that, I'll review things when I have time whatever you ping me or not. I can't understand that anxiety of merge things for versions that aren't soon to be released.\n\nLike a big* problem to create 2.1.x branch in Phalcon\n\nFor the 70th time, Why do I have to do things just because you want it? \nRegarding copy-paste a private conversation here, It's too unprofessional. \n\nYou can cancel my contributor access, what is a problem?\n\nI'll do\n. I don't have password or control over zephir-lang organization. I guess that was created by @ovr. I've asked him several times transfer me the control of that organization but I'm still waiting.\n. @Green-Cat Your PRs were submitted to master branch which have code freeze. However, @ovr says that it does not have code freeze because he doesn't agree which sends contradictory messages. Please submit them to development and we're good to go.\nIf you ask me, just ignore everything under zephir-lang organization as we don't have password or control over it.\n. @steffengy Thank you, reviewing help in the development branch is more than welcome, keep up the good work\n. > Because you will w8 development as stable, 3-5 month\nWhy?\n. > assumption\nOk, that's an assumption, better\n. @fezfez Could you please push to dev?\n. In which case these are needed?\n. This repository is only intended to support Zephir, you can better use the forum for questions like this: https://forum.phalconphp.com/\n. This is the expected behavior. There is no property declared with that name. You have to use:\n``` php\nthis->getDi()->get(\"security\")->getSessionToken();\n```\n. @steffengy Let's merge development into master\n. @nekulin Please change your branch to development\ncd zephir\ngit checkout development\ngit pull -u\n. Sure, please send me your gtalk to andres@phalconphp.com\n. It's a reserved word, you have to escape it: public $resource;\n. +1\n. good job!\n. Try escaping it:\nlet regex = \"/[\\\\x{1F600}-\\\\x{1F64F}]/u\",\n. Thanks\n. :+1: \n. +1\n. What version of php is this?\n. You have to compile the file along the extension: https://github.com/phalcon/cphalcon/blob/master/config.json#L26-L37\n. Phalcon has plain C files that are compiled alongside regular zephir files. You can add those files as the example in the link.\n. This is probably only happening on external classes\n. This only seem to happen on php5\n. We'll use is_numeric in Phalcon to fix the issue, thanks!\n. I'm not able to reproduce this, can you please post a small zephir code that shows up the problem?\n. ...without having to depend on Phalcon?\n. This way:\nbash\nzephir fullclean\nzephir builddev --backend=ZendEngine3\n. Executing this code using latest Zephir does not segfault:\n``` php\n<?php\nuse Phalcon\\Mvc\\View;\n$di = new \\Phalcon\\Di\\FactoryDefault();\n$di->set('view',function(){\n    $view=new \\Phalcon\\Mvc\\View\\Simple;\n    $view->registerEngines([\n        '.volt'=>'Phalcon\\Mvc\\View\\Engine\\Volt' // this will produce error beacause it will be passed here as string https://github.com/phalcon/cphalcon/blob/2.1.x/phalcon/di.zep#L235(name parameter)\n    ]);\n    return $view;\n});\nvar_dump($di->get('view'));\n```\nCould you please confirm using latest version?\n. Running the same code works as expected:\nphp\nobject(Phalcon\\Mvc\\View\\Simple)#26 (12) {  [\"_dependencyInjector\":protected]=>  object(Phalcon\\Di\\FactoryDefault)#1 (4) {    [\"_services\":protected]=>    array(23) {      [\"router\"]=>      object(Phalcon\\Di\\Service)#2 (5) {        [\"_name\":protected]=>        string(6) \"router\"        [\"_definition\":protected]=>        string(18) \"Phalcon\\Mvc\\Router\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"dispatcher\"]=>      object(Phalcon\\Di\\Service)#3 (5) {        [\"_name\":protected]=>        string(10) \"dispatcher\"        [\"_definition\":protected]=>        string(22) \"Phalcon\\Mvc\\Dispatcher\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"url\"]=>      object(Phalcon\\Di\\Service)#4 (5) {        [\"_name\":protected]=>        string(3) \"url\"        [\"_definition\":protected]=>        string(15) \"Phalcon\\Mvc\\Url\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"modelsManager\"]=>      object(Phalcon\\Di\\Service)#5 (5) {        [\"_name\":protected]=>        string(13) \"modelsManager\"        [\"_definition\":protected]=>        string(25) \"Phalcon\\Mvc\\Model\\Manager\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"modelsMetadata\"]=>      object(Phalcon\\Di\\Service)#6 (5) {        [\"_name\":protected]=>        string(14) \"modelsMetadata\"        [\"_definition\":protected]=>        string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"response\"]=>      object(Phalcon\\Di\\Service)#7 (5) {        [\"_name\":protected]=>        string(8) \"response\"        [\"_definition\":protected]=>        string(21) \"Phalcon\\Http\\Response\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"cookies\"]=>      object(Phalcon\\Di\\Service)#8 (5) {        [\"_name\":protected]=>        string(7) \"cookies\"        [\"_definition\":protected]=>        string(29) \"Phalcon\\Http\\Response\\Cookies\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"request\"]=>      object(Phalcon\\Di\\Service)#9 (5) {        [\"_name\":protected]=>        string(7) \"request\"        [\"_definition\":protected]=>        string(20) \"Phalcon\\Http\\Request\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"filter\"]=>      object(Phalcon\\Di\\Service)#10 (5) {        [\"_name\":protected]=>        string(6) \"filter\"        [\"_definition\":protected]=>        string(14) \"Phalcon\\Filter\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"escaper\"]=>      object(Phalcon\\Di\\Service)#11 (5) {        [\"_name\":protected]=>        string(7) \"escaper\"        [\"_definition\":protected]=>        string(15) \"Phalcon\\Escaper\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"security\"]=>      object(Phalcon\\Di\\Service)#12 (5) {        [\"_name\":protected]=>        string(8) \"security\"        [\"_definition\":protected]=>        string(16) \"Phalcon\\Security\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"crypt\"]=>      object(Phalcon\\Di\\Service)#13 (5) {        [\"_name\":protected]=>        string(5) \"crypt\"        [\"_definition\":protected]=>        string(13) \"Phalcon\\Crypt\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"annotations\"]=>      object(Phalcon\\Di\\Service)#14 (5) {        [\"_name\":protected]=>        string(11) \"annotations\"        [\"_definition\":protected]=>        string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"flash\"]=>      object(Phalcon\\Di\\Service)#15 (5) {        [\"_name\":protected]=>        string(5) \"flash\"        [\"_definition\":protected]=>        string(20) \"Phalcon\\Flash\\Direct\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"flashSession\"]=>      object(Phalcon\\Di\\Service)#16 (5) {        [\"_name\":protected]=>        string(12) \"flashSession\"        [\"_definition\":protected]=>        string(21) \"Phalcon\\Flash\\Session\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"tag\"]=>      object(Phalcon\\Di\\Service)#17 (5) {        [\"_name\":protected]=>        string(3) \"tag\"        [\"_definition\":protected]=>        string(11) \"Phalcon\\Tag\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"session\"]=>      object(Phalcon\\Di\\Service)#18 (5) {        [\"_name\":protected]=>        string(7) \"session\"        [\"_definition\":protected]=>        string(29) \"Phalcon\\Session\\Adapter\\Files\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"sessionBag\"]=>      object(Phalcon\\Di\\Service)#19 (5) {        [\"_name\":protected]=>        string(10) \"sessionBag\"        [\"_definition\":protected]=>        string(19) \"Phalcon\\Session\\Bag\"        [\"_shared\":protected]=>        bool(false)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"eventsManager\"]=>      object(Phalcon\\Di\\Service)#20 (5) {        [\"_name\":protected]=>        string(13) \"eventsManager\"        [\"_definition\":protected]=>        string(22) \"Phalcon\\Events\\Manager\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"transactionManager\"]=>      object(Phalcon\\Di\\Service)#21 (5) {        [\"_name\":protected]=>        string(18) \"transactionManager\"        [\"_definition\":protected]=>        string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"assets\"]=>      object(Phalcon\\Di\\Service)#22 (5) {        [\"_name\":protected]=>        string(6) \"assets\"        [\"_definition\":protected]=>        string(22) \"Phalcon\\Assets\\Manager\"        [\"_shared\":protected]=>        bool(true)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }      [\"view\"]=>      object(Phalcon\\Di\\Service)#24 (5) {        [\"_name\":protected]=>        string(4) \"view\"        [\"_definition\":protected]=>        object(Closure)#23 (0) {        }        [\"_shared\":protected]=>        bool(false)        [\"_resolved\":protected]=>        bool(true)        [\"_sharedInstance\":protected]=>        NULL      }      [\"content\"]=>      object(Phalcon\\Di\\Service)#28 (5) {        [\"_name\":protected]=>        string(7) \"content\"        [\"_definition\":protected]=>        string(5) \"hello\"        [\"_shared\":protected]=>        bool(false)        [\"_resolved\":protected]=>        bool(false)        [\"_sharedInstance\":protected]=>        NULL      }    }    [\"_sharedInstances\":protected]=>    array(1) {      [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>      object(Phalcon\\Mvc\\View\\Engine\\Volt)#25 (6) {        [\"_dependencyInjector\":protected]=>        *RECURSION*        [\"_eventsManager\":protected]=>        NULL        [\"_view\":protected]=>        *RECURSION*        [\"_options\":protected]=>        NULL        [\"_compiler\":protected]=>        object(Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler)#27 (22) {          [\"_dependencyInjector\":protected]=>          *RECURSION*          [\"_view\":protected]=>          *RECURSION*          [\"_options\":protected]=>          NULL          [\"_arrayHelpers\":protected]=>          NULL          [\"_level\":protected]=>          int(0)          [\"_foreachLevel\":protected]=>          int(0)          [\"_blockLevel\":protected]=>          int(0)          [\"_exprLevel\":protected]=>          int(0)          [\"_extended\":protected]=>          bool(false)          [\"_autoescape\":protected]=>          bool(false)          [\"_extendedBlocks\":protected]=>          bool(false)          [\"_currentBlock\":protected]=>          NULL          [\"_blocks\":protected]=>          NULL          [\"_forElsePointers\":protected]=>          NULL          [\"_loopPointers\":protected]=>          NULL          [\"_extensions\":protected]=>          NULL          [\"_functions\":protected]=>          NULL          [\"_filters\":protected]=>          NULL          [\"_macros\":protected]=>          NULL          [\"_prefix\":protected]=>          NULL          [\"_currentPath\":protected]=>          NULL          [\"_compiledTemplatePath\":protected]=>          string(13) \"test.volt.php\"        }        [\"_macros\":protected]=>        NULL      }    }    [\"_freshInstance\":protected]=>    bool(true)    [\"_eventsManager\":protected]=>    NULL  }  [\"_eventsManager\":protected]=>  NULL  [\"_options\":protected]=>  array(0) {  }  [\"_viewsDir\":protected]=>  NULL  [\"_partialsDir\":protected]=>  NULL  [\"_viewParams\":protected]=>  NULL  [\"_engines\":protected]=>  array(1) {    [\".volt\"]=>    object(Phalcon\\Mvc\\View\\Engine\\Volt)#25 (6) {      [\"_dependencyInjector\":protected]=>      object(Phalcon\\Di\\FactoryDefault)#1 (4) {        [\"_services\":protected]=>        array(23) {          [\"router\"]=>          object(Phalcon\\Di\\Service)#2 (5) {            [\"_name\":protected]=>            string(6) \"router\"            [\"_definition\":protected]=>            string(18) \"Phalcon\\Mvc\\Router\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"dispatcher\"]=>          object(Phalcon\\Di\\Service)#3 (5) {            [\"_name\":protected]=>            string(10) \"dispatcher\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Mvc\\Dispatcher\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"url\"]=>          object(Phalcon\\Di\\Service)#4 (5) {            [\"_name\":protected]=>            string(3) \"url\"            [\"_definition\":protected]=>            string(15) \"Phalcon\\Mvc\\Url\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"modelsManager\"]=>          object(Phalcon\\Di\\Service)#5 (5) {            [\"_name\":protected]=>            string(13) \"modelsManager\"            [\"_definition\":protected]=>            string(25) \"Phalcon\\Mvc\\Model\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"modelsMetadata\"]=>          object(Phalcon\\Di\\Service)#6 (5) {            [\"_name\":protected]=>            string(14) \"modelsMetadata\"            [\"_definition\":protected]=>            string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"response\"]=>          object(Phalcon\\Di\\Service)#7 (5) {            [\"_name\":protected]=>            string(8) \"response\"            [\"_definition\":protected]=>            string(21) \"Phalcon\\Http\\Response\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"cookies\"]=>          object(Phalcon\\Di\\Service)#8 (5) {            [\"_name\":protected]=>            string(7) \"cookies\"            [\"_definition\":protected]=>            string(29) \"Phalcon\\Http\\Response\\Cookies\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"request\"]=>          object(Phalcon\\Di\\Service)#9 (5) {            [\"_name\":protected]=>            string(7) \"request\"            [\"_definition\":protected]=>            string(20) \"Phalcon\\Http\\Request\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"filter\"]=>          object(Phalcon\\Di\\Service)#10 (5) {            [\"_name\":protected]=>            string(6) \"filter\"            [\"_definition\":protected]=>            string(14) \"Phalcon\\Filter\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"escaper\"]=>          object(Phalcon\\Di\\Service)#11 (5) {            [\"_name\":protected]=>            string(7) \"escaper\"            [\"_definition\":protected]=>            string(15) \"Phalcon\\Escaper\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"security\"]=>          object(Phalcon\\Di\\Service)#12 (5) {            [\"_name\":protected]=>            string(8) \"security\"            [\"_definition\":protected]=>            string(16) \"Phalcon\\Security\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"crypt\"]=>          object(Phalcon\\Di\\Service)#13 (5) {            [\"_name\":protected]=>            string(5) \"crypt\"            [\"_definition\":protected]=>            string(13) \"Phalcon\\Crypt\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"annotations\"]=>          object(Phalcon\\Di\\Service)#14 (5) {            [\"_name\":protected]=>            string(11) \"annotations\"            [\"_definition\":protected]=>            string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"flash\"]=>          object(Phalcon\\Di\\Service)#15 (5) {            [\"_name\":protected]=>            string(5) \"flash\"            [\"_definition\":protected]=>            string(20) \"Phalcon\\Flash\\Direct\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"flashSession\"]=>          object(Phalcon\\Di\\Service)#16 (5) {            [\"_name\":protected]=>            string(12) \"flashSession\"            [\"_definition\":protected]=>            string(21) \"Phalcon\\Flash\\Session\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"tag\"]=>          object(Phalcon\\Di\\Service)#17 (5) {            [\"_name\":protected]=>            string(3) \"tag\"            [\"_definition\":protected]=>            string(11) \"Phalcon\\Tag\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"session\"]=>          object(Phalcon\\Di\\Service)#18 (5) {            [\"_name\":protected]=>            string(7) \"session\"            [\"_definition\":protected]=>            string(29) \"Phalcon\\Session\\Adapter\\Files\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"sessionBag\"]=>          object(Phalcon\\Di\\Service)#19 (5) {            [\"_name\":protected]=>            string(10) \"sessionBag\"            [\"_definition\":protected]=>            string(19) \"Phalcon\\Session\\Bag\"            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"eventsManager\"]=>          object(Phalcon\\Di\\Service)#20 (5) {            [\"_name\":protected]=>            string(13) \"eventsManager\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Events\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"transactionManager\"]=>          object(Phalcon\\Di\\Service)#21 (5) {            [\"_name\":protected]=>            string(18) \"transactionManager\"            [\"_definition\":protected]=>            string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"assets\"]=>          object(Phalcon\\Di\\Service)#22 (5) {            [\"_name\":protected]=>            string(6) \"assets\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Assets\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"view\"]=>          object(Phalcon\\Di\\Service)#24 (5) {            [\"_name\":protected]=>            string(4) \"view\"            [\"_definition\":protected]=>            object(Closure)#23 (0) {            }            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(true)            [\"_sharedInstance\":protected]=>            NULL          }          [\"content\"]=>          object(Phalcon\\Di\\Service)#28 (5) {            [\"_name\":protected]=>            string(7) \"content\"            [\"_definition\":protected]=>            string(5) \"hello\"            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }        }        [\"_sharedInstances\":protected]=>        array(1) {          [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>          *RECURSION*        }        [\"_freshInstance\":protected]=>        bool(true)        [\"_eventsManager\":protected]=>        NULL      }      [\"_eventsManager\":protected]=>      NULL      [\"_view\":protected]=>      object(Phalcon\\Di\\FactoryDefault)#1 (4) {        [\"_services\":protected]=>        array(23) {          [\"router\"]=>          object(Phalcon\\Di\\Service)#2 (5) {            [\"_name\":protected]=>            string(6) \"router\"            [\"_definition\":protected]=>            string(18) \"Phalcon\\Mvc\\Router\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"dispatcher\"]=>          object(Phalcon\\Di\\Service)#3 (5) {            [\"_name\":protected]=>            string(10) \"dispatcher\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Mvc\\Dispatcher\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"url\"]=>          object(Phalcon\\Di\\Service)#4 (5) {            [\"_name\":protected]=>            string(3) \"url\"            [\"_definition\":protected]=>            string(15) \"Phalcon\\Mvc\\Url\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"modelsManager\"]=>          object(Phalcon\\Di\\Service)#5 (5) {            [\"_name\":protected]=>            string(13) \"modelsManager\"            [\"_definition\":protected]=>            string(25) \"Phalcon\\Mvc\\Model\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"modelsMetadata\"]=>          object(Phalcon\\Di\\Service)#6 (5) {            [\"_name\":protected]=>            string(14) \"modelsMetadata\"            [\"_definition\":protected]=>            string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"response\"]=>          object(Phalcon\\Di\\Service)#7 (5) {            [\"_name\":protected]=>            string(8) \"response\"            [\"_definition\":protected]=>            string(21) \"Phalcon\\Http\\Response\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"cookies\"]=>          object(Phalcon\\Di\\Service)#8 (5) {            [\"_name\":protected]=>            string(7) \"cookies\"            [\"_definition\":protected]=>            string(29) \"Phalcon\\Http\\Response\\Cookies\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"request\"]=>          object(Phalcon\\Di\\Service)#9 (5) {            [\"_name\":protected]=>            string(7) \"request\"            [\"_definition\":protected]=>            string(20) \"Phalcon\\Http\\Request\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"filter\"]=>          object(Phalcon\\Di\\Service)#10 (5) {            [\"_name\":protected]=>            string(6) \"filter\"            [\"_definition\":protected]=>            string(14) \"Phalcon\\Filter\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"escaper\"]=>          object(Phalcon\\Di\\Service)#11 (5) {            [\"_name\":protected]=>            string(7) \"escaper\"            [\"_definition\":protected]=>            string(15) \"Phalcon\\Escaper\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"security\"]=>          object(Phalcon\\Di\\Service)#12 (5) {            [\"_name\":protected]=>            string(8) \"security\"            [\"_definition\":protected]=>            string(16) \"Phalcon\\Security\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"crypt\"]=>          object(Phalcon\\Di\\Service)#13 (5) {            [\"_name\":protected]=>            string(5) \"crypt\"            [\"_definition\":protected]=>            string(13) \"Phalcon\\Crypt\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"annotations\"]=>          object(Phalcon\\Di\\Service)#14 (5) {            [\"_name\":protected]=>            string(11) \"annotations\"            [\"_definition\":protected]=>            string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"flash\"]=>          object(Phalcon\\Di\\Service)#15 (5) {            [\"_name\":protected]=>            string(5) \"flash\"            [\"_definition\":protected]=>            string(20) \"Phalcon\\Flash\\Direct\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"flashSession\"]=>          object(Phalcon\\Di\\Service)#16 (5) {            [\"_name\":protected]=>            string(12) \"flashSession\"            [\"_definition\":protected]=>            string(21) \"Phalcon\\Flash\\Session\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"tag\"]=>          object(Phalcon\\Di\\Service)#17 (5) {            [\"_name\":protected]=>            string(3) \"tag\"            [\"_definition\":protected]=>            string(11) \"Phalcon\\Tag\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"session\"]=>          object(Phalcon\\Di\\Service)#18 (5) {            [\"_name\":protected]=>            string(7) \"session\"            [\"_definition\":protected]=>            string(29) \"Phalcon\\Session\\Adapter\\Files\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"sessionBag\"]=>          object(Phalcon\\Di\\Service)#19 (5) {            [\"_name\":protected]=>            string(10) \"sessionBag\"            [\"_definition\":protected]=>            string(19) \"Phalcon\\Session\\Bag\"            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"eventsManager\"]=>          object(Phalcon\\Di\\Service)#20 (5) {            [\"_name\":protected]=>            string(13) \"eventsManager\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Events\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"transactionManager\"]=>          object(Phalcon\\Di\\Service)#21 (5) {            [\"_name\":protected]=>            string(18) \"transactionManager\"            [\"_definition\":protected]=>            string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"assets\"]=>          object(Phalcon\\Di\\Service)#22 (5) {            [\"_name\":protected]=>            string(6) \"assets\"            [\"_definition\":protected]=>            string(22) \"Phalcon\\Assets\\Manager\"            [\"_shared\":protected]=>            bool(true)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }          [\"view\"]=>          object(Phalcon\\Di\\Service)#24 (5) {            [\"_name\":protected]=>            string(4) \"view\"            [\"_definition\":protected]=>            object(Closure)#23 (0) {            }            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(true)            [\"_sharedInstance\":protected]=>            NULL          }          [\"content\"]=>          object(Phalcon\\Di\\Service)#28 (5) {            [\"_name\":protected]=>            string(7) \"content\"            [\"_definition\":protected]=>            string(5) \"hello\"            [\"_shared\":protected]=>            bool(false)            [\"_resolved\":protected]=>            bool(false)            [\"_sharedInstance\":protected]=>            NULL          }        }        [\"_sharedInstances\":protected]=>        array(1) {          [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>          *RECURSION*        }        [\"_freshInstance\":protected]=>        bool(true)        [\"_eventsManager\":protected]=>        NULL      }      [\"_options\":protected]=>      NULL      [\"_compiler\":protected]=>      object(Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler)#27 (22) {        [\"_dependencyInjector\":protected]=>        object(Phalcon\\Di\\FactoryDefault)#1 (4) {          [\"_services\":protected]=>          array(23) {            [\"router\"]=>            object(Phalcon\\Di\\Service)#2 (5) {              [\"_name\":protected]=>              string(6) \"router\"              [\"_definition\":protected]=>              string(18) \"Phalcon\\Mvc\\Router\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"dispatcher\"]=>            object(Phalcon\\Di\\Service)#3 (5) {              [\"_name\":protected]=>              string(10) \"dispatcher\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Mvc\\Dispatcher\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"url\"]=>            object(Phalcon\\Di\\Service)#4 (5) {              [\"_name\":protected]=>              string(3) \"url\"              [\"_definition\":protected]=>              string(15) \"Phalcon\\Mvc\\Url\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"modelsManager\"]=>            object(Phalcon\\Di\\Service)#5 (5) {              [\"_name\":protected]=>              string(13) \"modelsManager\"              [\"_definition\":protected]=>              string(25) \"Phalcon\\Mvc\\Model\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"modelsMetadata\"]=>            object(Phalcon\\Di\\Service)#6 (5) {              [\"_name\":protected]=>              string(14) \"modelsMetadata\"              [\"_definition\":protected]=>              string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"response\"]=>            object(Phalcon\\Di\\Service)#7 (5) {              [\"_name\":protected]=>              string(8) \"response\"              [\"_definition\":protected]=>              string(21) \"Phalcon\\Http\\Response\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"cookies\"]=>            object(Phalcon\\Di\\Service)#8 (5) {              [\"_name\":protected]=>              string(7) \"cookies\"              [\"_definition\":protected]=>              string(29) \"Phalcon\\Http\\Response\\Cookies\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"request\"]=>            object(Phalcon\\Di\\Service)#9 (5) {              [\"_name\":protected]=>              string(7) \"request\"              [\"_definition\":protected]=>              string(20) \"Phalcon\\Http\\Request\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"filter\"]=>            object(Phalcon\\Di\\Service)#10 (5) {              [\"_name\":protected]=>              string(6) \"filter\"              [\"_definition\":protected]=>              string(14) \"Phalcon\\Filter\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"escaper\"]=>            object(Phalcon\\Di\\Service)#11 (5) {              [\"_name\":protected]=>              string(7) \"escaper\"              [\"_definition\":protected]=>              string(15) \"Phalcon\\Escaper\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"security\"]=>            object(Phalcon\\Di\\Service)#12 (5) {              [\"_name\":protected]=>              string(8) \"security\"              [\"_definition\":protected]=>              string(16) \"Phalcon\\Security\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"crypt\"]=>            object(Phalcon\\Di\\Service)#13 (5) {              [\"_name\":protected]=>              string(5) \"crypt\"              [\"_definition\":protected]=>              string(13) \"Phalcon\\Crypt\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"annotations\"]=>            object(Phalcon\\Di\\Service)#14 (5) {              [\"_name\":protected]=>              string(11) \"annotations\"              [\"_definition\":protected]=>              string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"flash\"]=>            object(Phalcon\\Di\\Service)#15 (5) {              [\"_name\":protected]=>              string(5) \"flash\"              [\"_definition\":protected]=>              string(20) \"Phalcon\\Flash\\Direct\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"flashSession\"]=>            object(Phalcon\\Di\\Service)#16 (5) {              [\"_name\":protected]=>              string(12) \"flashSession\"              [\"_definition\":protected]=>              string(21) \"Phalcon\\Flash\\Session\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"tag\"]=>            object(Phalcon\\Di\\Service)#17 (5) {              [\"_name\":protected]=>              string(3) \"tag\"              [\"_definition\":protected]=>              string(11) \"Phalcon\\Tag\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"session\"]=>            object(Phalcon\\Di\\Service)#18 (5) {              [\"_name\":protected]=>              string(7) \"session\"              [\"_definition\":protected]=>              string(29) \"Phalcon\\Session\\Adapter\\Files\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"sessionBag\"]=>            object(Phalcon\\Di\\Service)#19 (5) {              [\"_name\":protected]=>              string(10) \"sessionBag\"              [\"_definition\":protected]=>              string(19) \"Phalcon\\Session\\Bag\"              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"eventsManager\"]=>            object(Phalcon\\Di\\Service)#20 (5) {              [\"_name\":protected]=>              string(13) \"eventsManager\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Events\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"transactionManager\"]=>            object(Phalcon\\Di\\Service)#21 (5) {              [\"_name\":protected]=>              string(18) \"transactionManager\"              [\"_definition\":protected]=>              string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"assets\"]=>            object(Phalcon\\Di\\Service)#22 (5) {              [\"_name\":protected]=>              string(6) \"assets\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Assets\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"view\"]=>            object(Phalcon\\Di\\Service)#24 (5) {              [\"_name\":protected]=>              string(4) \"view\"              [\"_definition\":protected]=>              object(Closure)#23 (0) {              }              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(true)              [\"_sharedInstance\":protected]=>              NULL            }            [\"content\"]=>            object(Phalcon\\Di\\Service)#28 (5) {              [\"_name\":protected]=>              string(7) \"content\"              [\"_definition\":protected]=>              string(5) \"hello\"              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }          }          [\"_sharedInstances\":protected]=>          array(1) {            [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>            *RECURSION*          }          [\"_freshInstance\":protected]=>          bool(true)          [\"_eventsManager\":protected]=>          NULL        }        [\"_view\":protected]=>        object(Phalcon\\Di\\FactoryDefault)#1 (4) {          [\"_services\":protected]=>          array(23) {            [\"router\"]=>            object(Phalcon\\Di\\Service)#2 (5) {              [\"_name\":protected]=>              string(6) \"router\"              [\"_definition\":protected]=>              string(18) \"Phalcon\\Mvc\\Router\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"dispatcher\"]=>            object(Phalcon\\Di\\Service)#3 (5) {              [\"_name\":protected]=>              string(10) \"dispatcher\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Mvc\\Dispatcher\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"url\"]=>            object(Phalcon\\Di\\Service)#4 (5) {              [\"_name\":protected]=>              string(3) \"url\"              [\"_definition\":protected]=>              string(15) \"Phalcon\\Mvc\\Url\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"modelsManager\"]=>            object(Phalcon\\Di\\Service)#5 (5) {              [\"_name\":protected]=>              string(13) \"modelsManager\"              [\"_definition\":protected]=>              string(25) \"Phalcon\\Mvc\\Model\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"modelsMetadata\"]=>            object(Phalcon\\Di\\Service)#6 (5) {              [\"_name\":protected]=>              string(14) \"modelsMetadata\"              [\"_definition\":protected]=>              string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"response\"]=>            object(Phalcon\\Di\\Service)#7 (5) {              [\"_name\":protected]=>              string(8) \"response\"              [\"_definition\":protected]=>              string(21) \"Phalcon\\Http\\Response\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"cookies\"]=>            object(Phalcon\\Di\\Service)#8 (5) {              [\"_name\":protected]=>              string(7) \"cookies\"              [\"_definition\":protected]=>              string(29) \"Phalcon\\Http\\Response\\Cookies\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"request\"]=>            object(Phalcon\\Di\\Service)#9 (5) {              [\"_name\":protected]=>              string(7) \"request\"              [\"_definition\":protected]=>              string(20) \"Phalcon\\Http\\Request\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"filter\"]=>            object(Phalcon\\Di\\Service)#10 (5) {              [\"_name\":protected]=>              string(6) \"filter\"              [\"_definition\":protected]=>              string(14) \"Phalcon\\Filter\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"escaper\"]=>            object(Phalcon\\Di\\Service)#11 (5) {              [\"_name\":protected]=>              string(7) \"escaper\"              [\"_definition\":protected]=>              string(15) \"Phalcon\\Escaper\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"security\"]=>            object(Phalcon\\Di\\Service)#12 (5) {              [\"_name\":protected]=>              string(8) \"security\"              [\"_definition\":protected]=>              string(16) \"Phalcon\\Security\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"crypt\"]=>            object(Phalcon\\Di\\Service)#13 (5) {              [\"_name\":protected]=>              string(5) \"crypt\"              [\"_definition\":protected]=>              string(13) \"Phalcon\\Crypt\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"annotations\"]=>            object(Phalcon\\Di\\Service)#14 (5) {              [\"_name\":protected]=>              string(11) \"annotations\"              [\"_definition\":protected]=>              string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"flash\"]=>            object(Phalcon\\Di\\Service)#15 (5) {              [\"_name\":protected]=>              string(5) \"flash\"              [\"_definition\":protected]=>              string(20) \"Phalcon\\Flash\\Direct\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"flashSession\"]=>            object(Phalcon\\Di\\Service)#16 (5) {              [\"_name\":protected]=>              string(12) \"flashSession\"              [\"_definition\":protected]=>              string(21) \"Phalcon\\Flash\\Session\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"tag\"]=>            object(Phalcon\\Di\\Service)#17 (5) {              [\"_name\":protected]=>              string(3) \"tag\"              [\"_definition\":protected]=>              string(11) \"Phalcon\\Tag\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"session\"]=>            object(Phalcon\\Di\\Service)#18 (5) {              [\"_name\":protected]=>              string(7) \"session\"              [\"_definition\":protected]=>              string(29) \"Phalcon\\Session\\Adapter\\Files\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"sessionBag\"]=>            object(Phalcon\\Di\\Service)#19 (5) {              [\"_name\":protected]=>              string(10) \"sessionBag\"              [\"_definition\":protected]=>              string(19) \"Phalcon\\Session\\Bag\"              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"eventsManager\"]=>            object(Phalcon\\Di\\Service)#20 (5) {              [\"_name\":protected]=>              string(13) \"eventsManager\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Events\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"transactionManager\"]=>            object(Phalcon\\Di\\Service)#21 (5) {              [\"_name\":protected]=>              string(18) \"transactionManager\"              [\"_definition\":protected]=>              string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"assets\"]=>            object(Phalcon\\Di\\Service)#22 (5) {              [\"_name\":protected]=>              string(6) \"assets\"              [\"_definition\":protected]=>              string(22) \"Phalcon\\Assets\\Manager\"              [\"_shared\":protected]=>              bool(true)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }            [\"view\"]=>            object(Phalcon\\Di\\Service)#24 (5) {              [\"_name\":protected]=>              string(4) \"view\"              [\"_definition\":protected]=>              object(Closure)#23 (0) {              }              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(true)              [\"_sharedInstance\":protected]=>              NULL            }            [\"content\"]=>            object(Phalcon\\Di\\Service)#28 (5) {              [\"_name\":protected]=>              string(7) \"content\"              [\"_definition\":protected]=>              string(5) \"hello\"              [\"_shared\":protected]=>              bool(false)              [\"_resolved\":protected]=>              bool(false)              [\"_sharedInstance\":protected]=>              NULL            }          }          [\"_sharedInstances\":protected]=>          array(1) {            [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>            *RECURSION*          }          [\"_freshInstance\":protected]=>          bool(true)          [\"_eventsManager\":protected]=>          NULL        }        [\"_options\":protected]=>        NULL        [\"_arrayHelpers\":protected]=>        NULL        [\"_level\":protected]=>        int(0)        [\"_foreachLevel\":protected]=>        int(0)        [\"_blockLevel\":protected]=>        int(0)        [\"_exprLevel\":protected]=>        int(0)        [\"_extended\":protected]=>        bool(false)        [\"_autoescape\":protected]=>        bool(false)        [\"_extendedBlocks\":protected]=>        bool(false)        [\"_currentBlock\":protected]=>        NULL        [\"_blocks\":protected]=>        NULL        [\"_forElsePointers\":protected]=>        NULL        [\"_loopPointers\":protected]=>        NULL        [\"_extensions\":protected]=>        NULL        [\"_functions\":protected]=>        NULL        [\"_filters\":protected]=>        NULL        [\"_macros\":protected]=>        NULL        [\"_prefix\":protected]=>        NULL        [\"_currentPath\":protected]=>        NULL        [\"_compiledTemplatePath\":protected]=>        string(13) \"test.volt.php\"      }      [\"_macros\":protected]=>      NULL    }  }  [\"_registeredEngines\":protected]=>  array(1) {    [\".volt\"]=>    string(28) \"Phalcon\\Mvc\\View\\Engine\\Volt\"  }  [\"_activeRenderPath\":protected]=>  NULL  [\"_content\":protected]=>  NULL  [\"_cache\":protected]=>  bool(false)  [\"_cacheOptions\":protected]=>  NULL}object(Phalcon\\Di\\FactoryDefault)#1 (4) {  [\"_services\":protected]=>  array(23) {    [\"router\"]=>    object(Phalcon\\Di\\Service)#2 (5) {      [\"_name\":protected]=>      string(6) \"router\"      [\"_definition\":protected]=>      string(18) \"Phalcon\\Mvc\\Router\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"dispatcher\"]=>    object(Phalcon\\Di\\Service)#3 (5) {      [\"_name\":protected]=>      string(10) \"dispatcher\"      [\"_definition\":protected]=>      string(22) \"Phalcon\\Mvc\\Dispatcher\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"url\"]=>    object(Phalcon\\Di\\Service)#4 (5) {      [\"_name\":protected]=>      string(3) \"url\"      [\"_definition\":protected]=>      string(15) \"Phalcon\\Mvc\\Url\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"modelsManager\"]=>    object(Phalcon\\Di\\Service)#5 (5) {      [\"_name\":protected]=>      string(13) \"modelsManager\"      [\"_definition\":protected]=>      string(25) \"Phalcon\\Mvc\\Model\\Manager\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"modelsMetadata\"]=>    object(Phalcon\\Di\\Service)#6 (5) {      [\"_name\":protected]=>      string(14) \"modelsMetadata\"      [\"_definition\":protected]=>      string(33) \"Phalcon\\Mvc\\Model\\MetaData\\Memory\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"response\"]=>    object(Phalcon\\Di\\Service)#7 (5) {      [\"_name\":protected]=>      string(8) \"response\"      [\"_definition\":protected]=>      string(21) \"Phalcon\\Http\\Response\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"cookies\"]=>    object(Phalcon\\Di\\Service)#8 (5) {      [\"_name\":protected]=>      string(7) \"cookies\"      [\"_definition\":protected]=>      string(29) \"Phalcon\\Http\\Response\\Cookies\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"request\"]=>    object(Phalcon\\Di\\Service)#9 (5) {      [\"_name\":protected]=>      string(7) \"request\"      [\"_definition\":protected]=>      string(20) \"Phalcon\\Http\\Request\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"filter\"]=>    object(Phalcon\\Di\\Service)#10 (5) {      [\"_name\":protected]=>      string(6) \"filter\"      [\"_definition\":protected]=>      string(14) \"Phalcon\\Filter\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"escaper\"]=>    object(Phalcon\\Di\\Service)#11 (5) {      [\"_name\":protected]=>      string(7) \"escaper\"      [\"_definition\":protected]=>      string(15) \"Phalcon\\Escaper\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"security\"]=>    object(Phalcon\\Di\\Service)#12 (5) {      [\"_name\":protected]=>      string(8) \"security\"      [\"_definition\":protected]=>      string(16) \"Phalcon\\Security\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"crypt\"]=>    object(Phalcon\\Di\\Service)#13 (5) {      [\"_name\":protected]=>      string(5) \"crypt\"      [\"_definition\":protected]=>      string(13) \"Phalcon\\Crypt\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"annotations\"]=>    object(Phalcon\\Di\\Service)#14 (5) {      [\"_name\":protected]=>      string(11) \"annotations\"      [\"_definition\":protected]=>      string(34) \"Phalcon\\Annotations\\Adapter\\Memory\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"flash\"]=>    object(Phalcon\\Di\\Service)#15 (5) {      [\"_name\":protected]=>      string(5) \"flash\"      [\"_definition\":protected]=>      string(20) \"Phalcon\\Flash\\Direct\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"flashSession\"]=>    object(Phalcon\\Di\\Service)#16 (5) {      [\"_name\":protected]=>      string(12) \"flashSession\"      [\"_definition\":protected]=>      string(21) \"Phalcon\\Flash\\Session\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"tag\"]=>    object(Phalcon\\Di\\Service)#17 (5) {      [\"_name\":protected]=>      string(3) \"tag\"      [\"_definition\":protected]=>      string(11) \"Phalcon\\Tag\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"session\"]=>    object(Phalcon\\Di\\Service)#18 (5) {      [\"_name\":protected]=>      string(7) \"session\"      [\"_definition\":protected]=>      string(29) \"Phalcon\\Session\\Adapter\\Files\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"sessionBag\"]=>    object(Phalcon\\Di\\Service)#19 (5) {      [\"_name\":protected]=>      string(10) \"sessionBag\"      [\"_definition\":protected]=>      string(19) \"Phalcon\\Session\\Bag\"      [\"_shared\":protected]=>      bool(false)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"eventsManager\"]=>    object(Phalcon\\Di\\Service)#20 (5) {      [\"_name\":protected]=>      string(13) \"eventsManager\"      [\"_definition\":protected]=>      string(22) \"Phalcon\\Events\\Manager\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"transactionManager\"]=>    object(Phalcon\\Di\\Service)#21 (5) {      [\"_name\":protected]=>      string(18) \"transactionManager\"      [\"_definition\":protected]=>      string(37) \"Phalcon\\Mvc\\Model\\Transaction\\Manager\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"assets\"]=>    object(Phalcon\\Di\\Service)#22 (5) {      [\"_name\":protected]=>      string(6) \"assets\"      [\"_definition\":protected]=>      string(22) \"Phalcon\\Assets\\Manager\"      [\"_shared\":protected]=>      bool(true)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }    [\"view\"]=>    object(Phalcon\\Di\\Service)#24 (5) {      [\"_name\":protected]=>      string(4) \"view\"      [\"_definition\":protected]=>      object(Closure)#23 (0) {      }      [\"_shared\":protected]=>      bool(false)      [\"_resolved\":protected]=>      bool(true)      [\"_sharedInstance\":protected]=>      NULL    }    [\"content\"]=>    object(Phalcon\\Di\\Service)#28 (5) {      [\"_name\":protected]=>      string(7) \"content\"      [\"_definition\":protected]=>      string(5) \"hello\"      [\"_shared\":protected]=>      bool(false)      [\"_resolved\":protected]=>      bool(false)      [\"_sharedInstance\":protected]=>      NULL    }  }  [\"_sharedInstances\":protected]=>  array(1) {    [\"Phalcon\\Mvc\\View\\Engine\\Volt\"]=>    object(Phalcon\\Mvc\\View\\Engine\\Volt)#25 (6) {      [\"_dependencyInjector\":protected]=>      *RECURSION*      [\"_eventsManager\":protected]=>      NULL      [\"_view\":protected]=>      *RECURSION*      [\"_options\":protected]=>      NULL      [\"_compiler\":protected]=>      object(Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler)#27 (22) {        [\"_dependencyInjector\":protected]=>        *RECURSION*        [\"_view\":protected]=>        *RECURSION*        [\"_options\":protected]=>        NULL        [\"_arrayHelpers\":protected]=>        NULL        [\"_level\":protected]=>        int(0)        [\"_foreachLevel\":protected]=>        int(0)        [\"_blockLevel\":protected]=>        int(0)        [\"_exprLevel\":protected]=>        int(0)        [\"_extended\":protected]=>        bool(false)        [\"_autoescape\":protected]=>        bool(false)        [\"_extendedBlocks\":protected]=>        bool(false)        [\"_currentBlock\":protected]=>        NULL        [\"_blocks\":protected]=>        NULL        [\"_forElsePointers\":protected]=>        NULL        [\"_loopPointers\":protected]=>        NULL        [\"_extensions\":protected]=>        NULL        [\"_functions\":protected]=>        NULL        [\"_filters\":protected]=>        NULL        [\"_macros\":protected]=>        NULL        [\"_prefix\":protected]=>        NULL        [\"_currentPath\":protected]=>        NULL        [\"_compiledTemplatePath\":protected]=>        string(13) \"test.volt.php\"      }      [\"_macros\":protected]=>      NULL    }  }  [\"_freshInstance\":protected]=>  bool(true)  [\"_eventsManager\":protected]=>  NULL}\n. Are you on the latest commit in Zephir? https://github.com/phalcon/zephir/commit/413db9143fb9e28eb2d436aa02d6b9ad882195cd\n. I'll try compiling on Ubuntu tomorrow, currently working on OSX\nWeb framework delivered as a C-extension for PHP\nphalcon => enabled\nAuthor => Phalcon Team and contributors\nVersion => 2.1.0r\nBuild Date => Apr 24 2016 21:18:39\nPowered by Zephir => Version 0.9.2a-dev\n. On Ubuntu I'm getting a possible cause of the issue:\n``` php\nBreakpoint 1, zephir_memory_restore_stack_common (g=0x87d1c40)\n    at /home/vagrant/php-7.0.5/ext/phalcon/kernel/memory.c:129\n129                     fprintf(stderr, \"%s: observed variable #%d (%p) has invalid type %u [%s]\\n\", func, (int)i, var, Z_TYPE_P(var), active_memory->func);\n(gdb) bt\n0  zephir_memory_restore_stack_common (g=0x87d1c40) at /home/vagrant/php-7.0.5/ext/phalcon/kernel/memory.c:129\n1  0x00000000005d728f in zephir_memory_restore_stack (func=0x0)\nat /home/vagrant/php-7.0.5/ext/phalcon/kernel/memory.c:243\n\n2  0x00000000007d5399 in zim_Phalcon_Di_Service_resolve (execute_data=0x7ffff1e141a0,\nreturn_value=0x7fffffffac10) at /home/vagrant/php-7.0.5/ext/phalcon/phalcon/di/service.zep.c:342\n\n3  0x00000000005eb986 in zephir_call_function_opt (fci=0x7fffffffa950, fci_cache=0x7fffffffa920,\ninfo=0x7fffffffaa30, params=0x7fffffffaca0)\nat /home/vagrant/php-7.0.5/ext/phalcon/kernel/extended/fcall.c:1150\n\n4  0x00000000005e4d1f in zephir_call_user_function (object_pp=0x7fffffffabf0, obj_ce=0x89543e0,\ntype=zephir_fcall_method, function_name=0x0, retval_ptr=0x7fffffffac10, cache_entry=0x0, cache_slot=0, \nparam_count=2, params=0x7fffffffaca0, info=0x7fffffffaa30)\nat /home/vagrant/php-7.0.5/ext/phalcon/kernel/fcall.c:453\n\n5  0x00000000005e5565 in zephir_call_class_method_aparams (return_value_ptr=0x7fffffffac10, ce=0x89543e0,\ntype=zephir_fcall_method, object=0x7fffffffabf0, method_name=0x11a3e57 \"resolve\", method_len=7, \ncache_entry=0x0, cache_slot=0, param_count=2, params=0x7fffffffaca0)\nat /home/vagrant/php-7.0.5/ext/phalcon/kernel/fcall.c:653\n\n6  0x0000000000671428 in zim_Phalcon_Di_get (execute_data=0x7ffff1e14130, return_value=0x7ffff1e14100)\nat /home/vagrant/php-7.0.5/ext/phalcon/phalcon/di.zep.c:519\n\n``\n. Latest fix to Zephir (master) fixes my problem, can you please try again using latest Zephir + fullclean + build?\n. OK, leaving this open if anyone can provide a small test that reproduces the problem.\n. @steffengy found the bug, thanks!\n. Development builds have most structures and pointers automatically zero'ed (and/or initalized to null) which could lead to unexpected safety when running a program causing that some bugs don't show up when trying to reproduce a bug.\n. I\u00b4ll take a look on this, I think several issues are caused by the same reason\n. Fixed in latest commit on master\n. Try addinguse Phalcon\\Firewall\\AdapterInterface;` to the top of the file\n. Make sure you have 0.9.2a installed\n. You have to place all the properties together and all the consts together\n. This is fixed in latest master\n. Camelize tests are failing on php7: https://travis-ci.org/phalcon/zephir/jobs/125447795\n. Following warnings maybe have to be checked:\n/Users/gutierrezandresfelipe/zafiro/ext/kernel/string.c:586:9: warning: incompatible integer to pointer conversion assigning to 'char *' from 'int' [-Wint-conversion]\n                delim = '_';\n                      ^ ~~~\n/Users/gutierrezandresfelipe/zafiro/ext/kernel/string.c:588:9: warning: incompatible integer to pointer conversion assigning to 'char *' from 'char'; remove * [-Wint-conversion]\n                delim = *(Z_STRVAL_P(delimiter));\n                      ^ ~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/gutierrezandresfelipe/zafiro/ext/kernel/string.c:603:11: warning: comparison between pointer and integer ('int' and 'char *')\n                        if (ch == delim) {\n                            ~~ ^  ~~~~~\n/Users/gutierrezandresfelipe/zafiro/ext/kernel/string.c:612:10: warning: comparison between pointer and integer ('int' and 'char *')\n                if (ch == delim) {\n                    ~~ ^  ~~~~~\n. Can you please try again using latest master?\n. Yes, that's the approach I will pursue on PHQL, if everything works fine I'll port it back to Zephir\n. This is not the size of the executable but the peak memory used in RAM to generate the code.\n. @mruz If you are running build_linux.sh manually now you have to pass the parser you want to build: build_linux.sh php5 and build_linux.sh php7\n. The PHQL parser is not fully ported to php7, so I think this might cause segfaults, I wouldn't blame Zephir for this.\n. I'm currently porting parsers in Phalcon to a new structure, hopefully it will provide us a more safe php7 execution.\n. I mean this: https://github.com/phalcon/zephir/pull/1248, create a specialized parser for php5 and other for php7 in phql/volt/annotations. I already started this work on this branch, if you want to take a look: https://github.com/phalcon/cphalcon/tree/php7-parsers\n. Not now, maybe in a couple of days\n. No, that's another issue, create_symbol_table optimizer must be fixed in order to make that work. \n. Could you please submit a full script we can use to reproduce the issue?\n. Thanks\n. Thanks\n. Thanks\n. Can you please provide a backtrace?\nphp\ngdb php\ngdb> run my-script.php\n. Can you run btafter run please?\nphp\ngdb> run /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $*\ngdb> bt\n. Make sure you have that function available in php first\n. It seems you have to rebuild the parser using the proper configuration:\ncd zephir/parser\nphpize --clean\ncd ..\nzephir build\n. The problem is not the if, but probably that matches must have memory allocated for it, it wasn't done in the second case: matches = null\n. Getting correct values in php7:\n$ php test.php \nbool(false)\nstring(4) \"test\"\nbool(false)\nstring(4) \"test\"\n. This is a compiler, and the class does not exist when it tries to read it\n. Will take a look\n. Fixed in master\n. https://github.com/phalcon/zephir/commit/a6c99e093845ee221609350fca6416e6e1928b02\n. \ud83d\udc4d \n. Follow these steps:\ngit clone https://github.com/phalcon/cphalcon\ncd cphalcon\ngit checkout 3.0.x\nzephir build --backend=ZendEngine3\n. Can you please post the generated code by Zephir?\n. C code generated at ext/<your extension name>/\n. Method toHex uses %X as format:\n\nX - the argument is treated as an integer and presented as a hexadecimal number (with uppercase letters).\n\nhttp://php.net/manual/en/function.sprintf.php\n. The problem is that ord works for strings but the parameter you're passing is of type char which works like an int. So in fact what you're doing is sprintf(\"%02x\", ord(97)) instead of sprintf(\"%02x\", ord(\"a\"))\n. Implemented in master\n. Code generated for php5 is not compatible with php7. You have to generate code for php7 first:\nzephir generate --backend=ZendEngine3\ncd ext/\n./configure --with-php-config=/home/alex/opt/php/bin/php-config\nmake\n. Can you please post the code you're using that causes this issue?\n. Thanks, can you please point me to one of the lines where this bug does affect Phalcon?\n. Thanks\n. Please don't introduce new static methods, you can use compilation context to pass global state\n. @jockchou You have to use the json extension before yours\n. Can you please enable tests for PHP 7.1?\n. Thanks\n. It's strange that it's trying to observe status again after its first use.\n. Ah, it's already used in the call, but probably still null\n. It was removed in php 7.1?\n. How do yo know this is caused by Zephir?. I'm trying a different approach and will review this in a few days.. ",
    "ilyk": "but if you will use  $x->{\"hello\"}(); would Zephir check existance of method \"__call\"?\n. ",
    "ovr": "Fix Fatal error: Call to undefined method Variable::getDynamicType() in /home/travis/build/phalcon/zephir/Library/Statements/LetStatement.php on line 1209!\n. @WooDzu 85 is not recent about this. this about ifStatements '(' . $condition . ')' in code\n. Work on this ...\n. Can your test latest master?\n. Can you create example for test it?\n. I fixed bug about it Notice, cant you check now code and if it currect close the issues? \n. @phalcon I update this macros soon and write tests for empty\n. It works\n``` zep\nstring b;\nlet b = \"fsdfsdfsdf\";\nmb_strpos(b, \"\\x00\");\n```\n. i close it, if it is relevant reopen it @kirilltitov \n. Hi, What version of gcc you use? OS?\n. @phalcon Because it duplicates in two places and i cant create class for it in my mind and think that static function in Utils is the best place for it\n. Compiler\n-  protected function _checkAndWriteIfNeeded($content, $path)\n -  {\n -    if (file_exists($path)) {\n -      $contentMd5 = md5($content);\n -      $existingMd5 = md5_file($path);\n -      if ($contentMd5 != $existingMd5) {\n -        file_put_contents($path, $content);\n -        return true;\n -      }\n -    } else {\n -      file_put_contents($path, $content);\n -      return true;\n -    }\n -    return false;\n -  }\nStringsManager.php\n-  protected function _checkAndWriteIfNeeded($content, $path)\n -  {\n -    if (file_exists($path)) {\n -      $content_md5 = md5($content);\n -      $existing_md5 = md5_file($path);\n -\n -      if ($content_md5 != $existing_md5) {\n -        file_put_contents($path, $content);\n -        return true;\n -      }\n -    }\n -\n -    return false;\n -  }\nCurrent in utils\nphp\n +  static public function checkAndWriteIfNeeded($content, $path)\n +  {\n +    if (file_exists($path)) {\n +      $content_md5 = md5($content);\n +      $existing_md5 = md5_file($path);\n +\n +      if ($content_md5 != $existing_md5) {\n +        file_put_contents($path, $content);\n +        return true;\n +      }\n +    } else {\n +      file_put_contents($path, $content);\n +      return true;\n +    }\n +\n +    return false;\n +  }\nIn compiler in always be like before\n In String manager it would create file if it doesnt exit i think it would be right\n In what class checkAndWriteIfNeeded is wrong?\n. @phalcon Sorry i was mistaken in |= doesnt see this statement in docs)) I reset that commit and force push to my branch.\n. @phalcon I rebase it\n. I think we need phpunit tests for library code\n. @phalcon kk. Start work on this. push soon\n. @mruz bcfea1d7b9441e77dfd71a3ef6637e651e4f1923 this version your use?\n. @mruz what version of gd you use?\n. I ll fix it. Now work on it\n. I added support for METHOD, NAMESPACE, FUNCTION, CLASS i think now your can close this issue? (another magic constants support i doesnt added because i agree with @phalcon it is useless)\n. @mruzis not supported. @phalcon Where is **FILE** constant defined in php core?\n. @sjinks Thx for answer.\n@phalcon Okey i write support for expectingVariable and then it can be merged.\n. @sjinks I will not write code for support **FILE** and **DIR**  because now i agree with @phalcon _useless in zephir code_.\nI write code for support but i have find fail of RETURN_CCTOR macros \nMy run the code https://gist.github.com/zaets28rus/23c126e3473aaefdf96e\nI work on it but i am so newbie in c\\zend _links and dynamic pointers_ and cant fix this\nHelp anyone\n. @sjinks I also try this variant buy it doesn`t work in local machine. After run make clean in ext folder - it work. Thx for help.\n@phalcon i think it now can be merged\n. Hi, thx for report. I take work on this.\n. Fixed, can you test latest master version? And close the issue?\n. update zephir and run ./install to recompile you parser in root dir of zephir project\n. rebased\n. Phalcon it is really important can your add exception statement for parser and i add support for it?\n. @phalcon now i am work about parser will push commits for this issue soon\n. @phalcon Now, I am only trying to understand how parser works\nhttps://github.com/zaets28rus/zephir/commits/86_try_catch\nit's really hard to understand\n. i ask about handling exceptions in php in c code @sjinks answer that i can meditate on it\nhttps://github.com/zaets28rus/zephir/commits/86_try_catch\n. Work on this.\n. @phalcon i think we need more tests for requred and optional parameters because i cant test all variants in my mind. hmm..... but now it works w8 for build\n. @phalcon +- 6hours i create patch for optional parameters and create tests for it\n. @jaimz22 I agree with your. Thx for report.\n. @jaimz22 can your test my latest commit?\n. @jaimz22 Zephir also convert null (default value for optional parameter) for not var type to his empty like boolean to 0, string to empty because zephir is dynamic/static typing.\n@phalcon help us bro )\n. Next \nCant normal parse\nzep\nreturn _SERVER[\"REQUEST_METHOD\"] == \"POST\" && empty _POST && empty _FILES && _SERVER[\"CONTENT_LENGTH\"] > 0;\nnormal parser\nzep\nreturn _SERVER[\"REQUEST_METHOD\"] == \"POST\" && (empty(_POST)) && (empty(_FILES)) && _SERVER[\"CONTENT_LENGTH\"] > 0;\n. @phalcon close this issue\n. Work on this.\n. ``` zep\n        public function mysql_func(var id)\n        {\n            var result, key, value;\n            mysql_connect(\"localhost\", \"root\", \"\");\n            mysql_select_db(\"cdcol\");\n            let result = mysql_query(\"SELECT * cds WHERE id=\" . id);\n        for key, value in mysql_fetch_assoc(result) {\n            echo key.' '.value.'\\n';\n        }\n    }\n\n```\n. Work on this\n. w8 for merge\n. Vote for\nlet a, b, c = arr;\n. @nkt \nNope :smile: \n. zaets28rus@web-server:~/projects/zephir$ gcc --version\ngcc (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n. work on this\n. Work on this\n. work on this....\n. @mruz paste code plz for test\n. @mruz open new issue dont write in closed issue!\n. work on this\n. implimented can you test it?\n. i test it. yes your can call func_get_args in class method.\n@phalcon add to roadmap create optimizer for func_get_args and need to add to zephir-docs\n. @phalcon now i havnt time to implement zephir_get_arrval callend in https://github.com/phalcon/zephir/blob/master/Library/ClassMethod.php#L797 and ci passed properties test lol)\n. macros i think if type is not array it would be converted to array() else copy it\n. Hacked const :smile_cat:\n@racklin cherry-pick commit from my branch plz \n. Updated we don't copy the current namespace to class if it has a slash like\nzep\nnew \\UnitOfWork()\nBecause now we call new class of global namespace\n. work about full support for all\n. @phalcon if we have two variable of types int and zval* but in moment we have 2 variables types what  we need to block converstation or what we need?\n. @phalcon @sjinks \nIn php code we have two variables of variable type\nin then end of method we try to convert our type to native\nvar a would be converted to int but be b is the zval structure\nwhat wee need to do?\ntry to write a macros for native types and zval or block conversation to int of var a\n\u0412 \u043f\u0445\u043f \u043a\u043e\u0434\u0435 \u0443 \u043d\u0430\u0441 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 int \u0447\u0438\u0441\u043b\u043e \u0438 \u0432\u0442\u043e\u0440\u0430\u044f \u043f\u0435\u0440\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u0441\u0442\u0430\u0435\u0442\u044c\u0441\u044f \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 zval\n\u043a\u0430\u043a \u043d\u0430\u043c \u0441\u0440\u0430\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043c\u0430\u043a\u0440\u043e\u0441 \u0438\u043b\u0438 \u0436\u0435 \u0437\u0430\u043f\u0440\u0435\u0442\u0438\u0442\u044c a \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0432 int (\u0442\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0441 \u0446\u0435\u043b\u044c\u044e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438)\n\u042f \u0442\u0430\u043a\u043e\u0439 \u043c\u0430\u0441\u0442\u0435\u0440 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e :D\n. work on this\n. @phalcon Sorry about my mistake in init href for all temp variables\nMaybe this variant would be better for use?\n. Rebased and fixed\n. np, recoded and rebased\n. rewrite for exception style\n. try this https://github.com/phalcon/zephir/pull/151 i think it help\n. paste zep and c code for review bug\n. 1) install, regenerate now okey\n2) https://travis-ci.org/zaets28rus/zephir/builds/18380417 recommit and w8 for it\n. i hate this HOW MANY TIME YOU NEED TO UNDERSTAND THAT FAIL MASTER BRANCH BAD! \n. rebased fixed\n. I added test for it. it work maybe you paste  all c listing with zephir latest version?\n. test it agree with you work for fix it\n. okey, reinstall parser and recommit it\n. Rebase i think now its okey withou separating for global variables\n. @phalcon recoded thanks @sjink for help and curation me in c code ^_^\n. Soon i will continue to write full support but now i need only base support without docblocks and etc.\n. We can tests stubs only by generating and review it. review without system version controll i think will be difficult.\n. 39 kb maybe future it up to 1 mb. it is not big i think.\nfor normal test it need to be a library like Code/Builder/Class, Method and etc\nit is a big work to create library and tests for all about it. now a havn`t time and interest about this\n@phalcon what about you point on this?\n. Rebased\n to a different directory would be great\nadded support fo method docblock\nfixes\nadded option for generate stubs auto after generate\n. rebased\n. Cat it be merge?\n. w8 plz for build\n. What standard we will chose psr1 psr2 or Zend?\n. Rebased now phpcs work maybe it need to be merged because you now we migrate to namespace and PSR2\n. First!\n. i think this warning about (( 2 brackets - low qualite code. i will push fix for #69 soon\n. Hi, thx for report. fixed https://github.com/phalcon/zephir/pull/172\n. @dario1985 see latest master\n. Now it works currently with all variants\n. see https://github.com/phalcon/cphalcon/pull/2026\n. I didn`t uderstand your. What is the main question? implement algthoritm more faster or what?\nyour can create optimizer for function call and create code in c for it if your need more faster\n. if phalcon create support for parse i can create support after it\n. \u0425\u043e\u0440\u043e\u0448\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c\u0441\u044f\n. https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md#52-switch-case\nintersting story in ci sniffer is 1.5.2 i have 1.5.0 and it shows errors\nhttps://gist.github.com/zaets28rus/dcb63e63d73d93f8f299\nnow i watch about maybe it travis error\n. w8 plz i watch about error code if it have errors\n. @phalcon Now travis show errors and failed build because\nThe command \"phpcs --standard=PSR2 --extensions=php Library/\" exited with 1.\nin phpcs\n``` php\n!/usr/bin/php\n<?php\n/\n * PHP_CodeSniffer tokenises PHP code and detects violations of a\n * defined set of coding standards.\n \n * PHP version 5\n \n * @category  PHP\n * @package   PHP_CodeSniffer\n * @author    Greg Sherwood gsherwood@squiz.net\n * @author    Marc McIntyre mmcintyre@squiz.net\n * @copyright 2006-2012 Squiz Pty Ltd (ABN 77 084 670 600)\n * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence\n * @link      http://pear.php.net/package/PHP_CodeSniffer\n */\nerror_reporting(E_ALL | E_STRICT);\n// Optionally use PHP_Timer to print time/memory stats for the run.\n// Note that the reports are the ones who actually print the data\n// as they decide if it is ok to print this data to screen.\n@include_once 'PHP/Timer.php';\nif (class_exists('PHP_Timer', false) === true) {\n    PHP_Timer::start();\n}\nif (is_file(dirname(FILE).'/../CodeSniffer/CLI.php') === true) {\n    include_once dirname(FILE).'/../CodeSniffer/CLI.php';\n} else {\n    include_once 'PHP/CodeSniffer/CLI.php';\n}\n$phpcs = new PHP_CodeSniffer_CLI();\n$phpcs->checkRequirements();\n$numErrors = $phpcs->process();\nif ($numErrors === 0) {\n    exit(0);\n} else {\n    exit(1);\n}\n```\nIt looks okey (0_0)\n. hi np start work on this\n. problem that php core can't do it https://github.com/php/php-src/blob/PHP-5.5.9/Zend/zend_API.c#L3455\n. \u0427\u0442\u043e?\n. @pigochu good idea\nnow i work for define non static variables with type empty array in costructor soon added support for static when create more beutifal idea about it\nand we have magic method __callStatic\n. @pigochu Can you test this https://github.com/zaets28rus/zephir/commit/22e59729ae10d9da961c1d1b2de2ae448805f167?\n. https://github.com/phalcon/zephir/commit/f6e72b02601a45ce817b869dfa687928c2660283\nno tests\n. d) Release 0.4 after few months start developing it, not 1.0. stupid numbering versions on phalcon and zephir. See for example nginx after 8 years it = 1.0 stable! we don't need marketing way like chrome browser.\n. @kkamkou \n1 tabs are better\n2 echo is more faster because it has 3 opcodes vs 4 opcodes (print)\nI think the best way for coding style is creating a new standard for Zephir extending from PSR2 with some fixes (tabs case with no enters and etc)\n. have error on coveralls will fix when return home\n. @phalcon https://coveralls.io/ enable for zephir project it\n. See another pull request @nkt fix it\n. @phalcon ping ^_^\n. @phalcon i work on this push soon after test all\n. could you test latest master?\n. +1 :D\n. @nkt  set/get* get? get always would return value without type cast.\nit would be usefull when all php classes would be written on c++ classes.\n. C++ native types in classes not zval or next language generation - runtime or Zephir language VM\n. @nkt\nhttp://www.php-cpp.com/documentation/classes-and-objects\nhttp://devzone.zend.com/1435/wrapping-c-classes-in-a-php-extension/\nc++ class and zend object handling\ngoogle it\n. :-1:\nUsless idea plz close issue\n. @andrusender First create a repository for you project!\n2 this opensource wait and all will be fixed\n3 @phalcon we need to create define for functions not in class it's very important (and anonymous) if you create support in parser I'll add support in php\nnow i will port microbench from php to phalcon for test speed\n. @phalcon str_len is not defined\n. @phalcon soon now havn`t time\n. https://github.com/phalcon/zephir/issues/188 Will be supported soon, now i create only for not static empty array\n. @phalcon rebased\n. this segafult on \nc\nPHP_METHOD(Symfony_Component_EventDispatcher_ContainerAwareEventDispatcher, dispatch) {\non zephir_check_call_status()!\nzephir_call_method_p1_noret(this_ptr, \"lazyload\", eventName);\n    zephir_check_call_status();\n    zephir_call_parent_p2(return_value, this_ptr, symfony_component_eventdispatcher_containerawareeventdispatcher_ce, \"dispatch\", eventName, event);\n    zephir_check_call_status();\n    RETURN_MM();\n. @phalcon \n==6137== Invalid read of size 4\n==6137==    at 0x6891D57: zephir_memory_restore_stack_common.isra.6.4286.2851 (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x68932FF: zephir_memory_restore_stack (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x688D464: zim_Symfony_Component_EventDispatcher_ContainerAwareEventDispatcher_dispatch (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x661BBBC: phalcon_execute_internal (in /usr/lib/php5/20121212/phalcon.so)\n==6137==    by 0x4E20E49: xdebug_execute_internal (xdebug.c:1551)\n==6137==    by 0x841BB1F: ??? (in /usr/bin/php5)\n==6137==    by 0x838F0C5: execute_ex (in /usr/bin/php5)\n==6137==    by 0x4E20393: xdebug_execute_ex (xdebug.c:1437)\n==6137==    by 0x8419C2B: zend_execute (in /usr/bin/php5)\n==6137==    by 0x8354AA6: zend_call_function (in /usr/bin/php5)\n==6137==  Address 0xc is not stack'd, malloc'd or (recently) free'd\n==6137==\n==6137==\n==6137== Process terminating with default action of signal 11 (SIGSEGV)\n==6137==  Access not within mapped region at address 0xC\n==6137==    at 0x6891D57: zephir_memory_restore_stack_common.isra.6.4286.2851 (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x68932FF: zephir_memory_restore_stack (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x688D464: zim_Symfony_Component_EventDispatcher_ContainerAwareEventDispatcher_dispatch (in /usr/lib/php5/20121212/symfony.so)\n==6137==    by 0x661BBBC: phalcon_execute_internal (in /usr/lib/php5/20121212/phalcon.so)\n==6137==    by 0x4E20E49: xdebug_execute_internal (xdebug.c:1551)\n==6137==    by 0x841BB1F: ??? (in /usr/bin/php5)\n==6137==    by 0x838F0C5: execute_ex (in /usr/bin/php5)\n==6137==    by 0x4E20393: xdebug_execute_ex (xdebug.c:1437)\n==6137==    by 0x8419C2B: zend_execute (in /usr/bin/php5)\n==6137==    by 0x8354AA6: zend_call_function (in /usr/bin/php5)\n==6137==  If you believe this happened as a result of a stack\n==6137==  overflow in your program's main thread (unlikely but\n==6137==  possible), you can try to increase the size of the\n==6137==  main thread stack using the --main-stacksize= flag.\n==6137==  The main thread stack size used in this run was 8388608.\n==6137==\n==6137== HEAP SUMMARY:\n==6137==     in use at exit: 7,174,657 bytes in 45,367 blocks\n==6137==   total heap usage: 89,761 allocs, 44,394 frees, 9,673,685 bytes allocated\n==6137==\n==6137== LEAK SUMMARY:\n==6137==    definitely lost: 0 bytes in 0 blocks\n==6137==    indirectly lost: 0 bytes in 0 blocks\n==6137==      possibly lost: 0 bytes in 0 blocks\n==6137==    still reachable: 7,174,657 bytes in 45,367 blocks\n==6137==         suppressed: 0 bytes in 0 blocks\n==6137== Rerun with --leak-check=full to see details of leaked memory\n==6137==\n==6137== For counts of detected and suppressed errors, rerun with: -v\n==6137== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\ncaused from this\nzephir_call_method_p1_noret(this_ptr, \"lazyload\", eventName);\nand next get in \ndefine zephir_check_call_status() \\\ndo \\\n    if (ZEPHIR_LAST_CALL_STATUS == FAILURE) { \\\n        ZEPHIR_MM_RESTORE(); \\\n        return; \\\n    } \\\nwhile(0)\n\nZEPHIR_MM_RESTORE after failture status\nbut why we get seg fault in wrong address? but we stack memory frame\n``` c\nPHP_METHOD(Symfony_Component_EventDispatcher_ContainerAwareEventDispatcher, dispatch) {\nint ZEPHIR_LAST_CALL_STATUS;\nzend_bool _0;\nzval *eventName_param = NULL, *event = NULL;\nzval *eventName = NULL;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 1, 1, &eventName_param, &event);\n\nzephir_get_strval(eventName, eventName_param);\nif (!event) {\n    event = ZEPHIR_GLOBAL(global_null);\n}\n\n\n_0 = Z_TYPE_P(event) != IS_NULL;\nif (_0) {\n    _0 = !zephir_instance_of_ev(event, symfony_component_eventdispatcher_event_ce TSRMLS_CC);\n}\nif (_0) {\n    ZEPHIR_THROW_EXCEPTION_STR(spl_ce_InvalidArgumentException, \"Parameter 'event' must be an instance of 'Symfony\\\\Component\\\\EventDispatcher\\\\Event'\");\n    return;\n}\nzephir_call_method_p1_noret(this_ptr, \"lazyload\", eventName);\nzephir_check_call_status();\nzephir_call_parent_p2(return_value, this_ptr, symfony_component_eventdispatcher_containerawareeventdispatcher_ce, \"dispatch\", eventName, event);\nzephir_check_call_status();\nRETURN_MM();\n\n}\n```\n. https://github.com/marciopaiva/zephir/commit/afb20a68cabf34eed90bb42f41515d3557b1fdbd not you changes reset it.\nhttps://github.com/marciopaiva/zephir/commit/54bbd75c556ba7d2c6a1729a4c25f903f146ecc3\nhttps://github.com/marciopaiva/zephir/commit/4c2af6b7d1238310127e4a27399768cff4ecbbeb\nneed rebase not merge\n. now example\ngit reset --hard HEAD~10\ngit pull origin master\ngit cherry-pick f4bdaf8\nnext get you changes from commit like copy past from it https://github.com/marciopaiva/zephir/commit/afb20a68cabf34eed90bb42f41515d3557b1fdbd\ngit add .\ngit commit -m \"More try/catch tests\"\nand push force you branch\ngit push you remote master -f\nnext changes in another branch not master in you local repository!\n. @nkt & will be refrenced link. not this task\n. @phalcon your vote?\n. @andresgutierrez \nCan you help with implementing this in parser?\n. I think we need to implement 4 option (Phalcon's)\n. Why [add] prefix for commit? All commits we add :D\n. i think it would be useless in web.\n. I ll fix it in my pull request.https://github.com/phalcon/zephir/pull/250\n@phalcon maybe create support for all types?\n. @nkt i think magic method __toString for class would be better\npublic function __toString() -> this->property\n. @phalcon help us. if i not true i will refix this.\n. @phalcon ping\n. mmmmm\ni remove it https://github.com/zaets28rus/zephir/blob/0c563a44d5bf0b1cac2968c432149cc6fee9b4f2/Library/CompilerFile.php#L313\n. private can`t be called in php, tested with @nkt. Thx our super amazing Collaborator @nkt. <3\n. @damienalexandre because we can't use foo name for name. \nThis caused because foo method would be a construct for class\n. This is a bug, thx for report, i ll fix it soon\n. Hi\nBefore write check search on google\n\n\nIs zephir compile dll file on linux?\nhttp://en.wikipedia.org/wiki/Dynamic-link_library only windows\nCan i compile extension for windows.\nyes, you can but i didnt think that anyone have tried to compile on windows\n. 1 zephir doesn't support multiple arrays\n2 bug in parser https://github.com/phalcon/zephir/blob/master/parser/scanner.re#L568\n@phalcon can you change parser for pass variable context?\n. @phalcon \noh sorry i am wrong i create test with ['key': []], '' -> chars...\n. Work on this\n. @phalcon dont merge before test pass this failed ((((((((()\n. @phalcon w8 plz. i failed stupid bug))))\n. @phalcon ping\n. hi, I will fix it soon, thx for report\n. See my pull\n. W8 Work on this\n. This bug is caused by left side not right!\ninstance off success work with Traversable\ncould you paste more code?\n. i agree with @phalcon (it works like in php)\n\n\n@nkt i don't think so\nwrite php code when instanceof would be higher than operator not\n. For index you need to use variable type but it need fix in zephir core.\n[Index][] use array push because not it is 1 work variant\n. @phalcon How many time it need to give me collaborator?)\n. @phalcon ping\n. @mruz rebase and repush it plz\n. @phalcon ping\n. @nkt \nThere is one problem with callable type.\nin php docs gettype function cann`t return callable type and in my practice this only return object for callable type\nthis bugs only on your local machine https://github.com/nkt/zephir/commit/ecc08c7df620adca529822f11fcc58568df2f66e#diff-c70f5a0a1d6c070e381ce0d53f872b47R83\nbecause code for zephir_gettype copy patsted from original core https://github.com/php/php-src/blob/PHP-5.5.11/ext/standard/type.c#L35\nrun it under valgrind for see place where it throws\n. @nkt \nzaets28rus@web-server:~/projects/zephir$ php -r \"var_dump(gettype(function() {}));\"\nstring(6) \"object\"\nsee php-src for understand why it before wtite docs\nvar_dump(is_callable('phpinfo'), gettype('phpinfo')); // true, string\nLOL\nphpinfo is a function this a callable because this gets function like\nphp -r \"function testnktmind() {}; var_dump(is_callable('testnktmind'));\" // true\nbut gettype(variable $var) this only fetch Z_TYPE_P from variable not see global scope for search functon by name\n\n\nIt's throws directly for commented code.\nalready tested on my local machine its okay run zephir fullclean maybe it helps\n\n\nvar_dump(is_callable(array(new \\ArrayObject, 'count')),\n         gettype(array(new \\ArrayObject, 'count'))); // true, array\n:dancer: \nzaets28rus@web-server:~/projects/crm$ php -r \"var_dump(gettype(array()));\"\nstring(5) \"array\"\nyou declare array != callable\nbefore write something read the docs and test it\n. @nkt \nI already see it (Markdown docs)\nWhat is the question?\nFor first you can't use it\nzep\n (\"callable\" == typeof cb)\nBecause its doesn't support it now\n. Hi @n0nag0n \nThx you for reported issue, i fix it w8 @Phalcon will merge it\nHappy coding with Zephir ^_^\n. Hi, Copy paste more code because now it cann`t be understanding.\n. @n0nag0n \nit is so hard for review and find bug update to the lastest Zephir version\nand try to compile if build fail then create a gist with zep file where we can see the problem\nand we will help you\n. this is a bug w8 @phalcon merge it soon as posible\n. this would be supported but not now i think\nthis is an opensource you can implement it if now it needed\n. @wapmorgan ping\n. Demo https://github.com/phalcon/zephir/pull/599\n. @andresgutierrez \n(If I understand correctly) This way supports only Zephir exts, And how can I load another extensions?\n. @phalcon ping\n. Script fault only under apache?\n. Because this world already defined for another operator in Zephir language and cant be defined for method. @phalcon Can we change parser for support it in methods?\n. @hgati create issue for it and run under valgrind for see details\n. this is not implemented. now i am working on this.\n. Oh this is a bug i will fix it\n. Good news i fixed it ^^\nhttps://github.com/phalcon/zephir/pull/332\nw8 @phalcon it would be merged as soon as he can\nHappy coding with Zephir <3\n. Plz rebase to latest\n. /home/travis/build/phalcon/zephir/Library/ClassMethod.php:1871:61: error - Opening brace should be on a new line\n/home/travis/build/phalcon/zephir/Library/ClassMethod.php:1877:9: error - Expected \"foreach (...) {\\n\"; found \"foreach(...) {\\n\"\nFix code for PSR2 style\n. @dreamsxin Nice :)\n@phalcon ping\n. Plz rebase to latest\n. Fix amespace Test; to namespace Test;\nRecommit to 1 commit\nFix author name and email in git config\n. ```\n/home/travis/build/phalcon/zephir/Library/MethodCall.php:72:25: error - Expected \"foreach (...) {\\n\"; found \"foreach(...) {\\n\"\n```\n. @phalcon ping. \n. Now zephir dont support it\n. Why you close it? Maybe if @phalcon accept NFR we will support it\n. @phalcon ping\n. @phalcon ping\n. w8\n. @phalcon need we cast (zend_bool) 1; or (zend_bool) 0; and why?\n. @phalcon ping\n. > I have one more question but I didn't want to start another issue. How do you update zephir when you release a new version?\ngit pull origin\n./install -c\ncd /path/to/your/project\nzephir fullclean\nzephir install\n. nice :+1: \n. Yeap but i feel that it break manual install with -c flag\n. @pennycoders ping\n. @nkt \n/usr/loca/bin in all unix systems is under root\ndrwxr-xr-x  2 root root 4096 May 16 10:45 bin\nif we remove this sudo it need to be run like this:\nsudo ./install -c\nbut all compiled source code would be under root\nthis bug like cphalcon project install script\n. @phalcon what do you think about cphalcon and zephir install script?\n. @nkt agree with you, we need to link but link or copy is not main problem. ln -s is need to be under root user too :)\n. @phalcon maybe now can i merge my small pull requests?\n. To create portable extensions you need that in developer machine \ndeveloper os = server os\ndeveloper  php version = server php version\nHappy coding with Zephir ^^\n. @nkt np\n. @phalcon ping\n. @phalcon W8 dont merge\n. Write code for test\n. Your example compile correctly.\n. Can you please added test for it ?)\n. @phalcon ping\n. @danbruce \nUsing git bisect shows b275db3 as the guilty commit.\nmm what?\n. @danbruce fix your email address in git settings\n. @nkt yeap, i forgot to add support for static empty-array and array(((\n. @phalcon is it okey?\n. 3 commits, lol \nrefresh to one commit like\ngit reset --soft HEAD~1\ngit commit -m \"Fix errorexception ce\"\n. @netyum ping\n. @3axap4eHko Can you please add simple test for it?\n. Why? I think it's easy and takes 5-10 minutes.\n. I merge you fix with my test to master\nThanks :)\n. @netyum ping\n. @netyum ping\n. @nkt \nGood force\nhttp://i.gyazo.com/79cd84a395ca204628b0419d94e9ded7.png\n. @netyum \nCommit your changes under user not root :)\nAnd fix build\n. @netyum Thank you :) @nkt nice contribute\n. @nkt I agree with you. I think it would be nice :)\n. Please paste example c and zep code, and i will try to help you :)\n. nice but can you please explode second commit  d59b846 to another pull request?\n. please reabase and will\nhttp://gyazo.com/69bf41a8069634a5b3d094a4738f5d56\n. and I love it. super fast english writer. like rebase -> reabase :D\n. Thank you :)\n. I think it is not implemented :(\n. Yes, it will be implemented. i mark this issue as bug becase its main core functionality. if i have free time i will implement it\n. @nkt what is the question for me?\n. i will create support for second variant now\n. @taophp :) Happy coding with Zephir\n. @nkt nice, will review as soon as i can :)\nbut paste examples that doesnt work\n. @nkt output zend_mm_heap corrupted\n. @nkt try to rebuild i can't explain why this fault\n. @nkt https://bugs.php.net/bugs-getting-valgrind-log.php\n. Lol, this bug i think caused by hardware problems\n. Thank you\n. @nkt ooops ) will try to fix now\n. i think we can create support only for non-dynamic class variables in Zephir core\nI marked this as NFR\n. \\n\\t mm?\n. thank you\n. Tested, Mark this issue as bug\n. Mark this issue as bug \n. @nkt why your close this issue?\ni tried to return a string in a if statement from a function with return type-hint .\n. I will create test for it and rebase this commit now https://github.com/phalcon/zephir/pull/323\n. @nkt reopen request\n@dreamsxin thx you for fix and please  don`t close requests next time\n. @ircrash i will fix it now\n. @ircrash \nthis code works correct\npublic function test(aa){\n    trim(aa);\n}\ntry to \n./install -c && zephir fullclean && zephir install\n. pase more code for tests\ncurrent passed code is not break place i think there is another place with trim\n.  @ovr take your code, and creates fix for it.\nwat?\n. @ircrash i find bug\nthis is global bug with function call without returning value (with optimizers) :)\nfor current moment Zephir doesn`t support \nzep\ntrim(a);\nbut support\nzep\n1\nreturn trim();\n2\nlet variable = trim();\n3 function in function\nvar_dump(trim(a));\ni will fix it as soon as i can\n. I create patch for it. if expeted return value is not defined create temp for function call (optimizers)\n@niden @phalcon @nkt\nWhat would be better way\n1 Create temp value (returning value) for function call without exp value\n2 Throw exception with text Functions can be called only by assigned return value\n3 or notice with 2 variant text\n. @niden @phalcon @nkt ping!\n. Can you please rebase it to 1 commit\nwithout \nMerge remote-tracking branch 'phalcon/master' into method_return\nUpdated\nUpdated\nby run commands for example\ngit reset --soft EHAD~4\ngit commit -m \"Fix ClassMehod::hasChildReturnStatementType\"\ngit push you_remote you_branch -f\nIt would be more beautiful\n. @dreamsxin why closed?(((\n. @dreamsxin don`t worry you can easy return it back for example\n1 create new branch from original zephir repo\nit checkout origin/master -b you_branch\nbut only if origin remote is zephir not you :)\n2 cherry-pick commits by hash\nHash and what did you do you can see by\ncat .git/logs/HEAD\n. i review this code, that seems like okay\nThank you :)\n. @phalcon did you review it?\n. Marked this as bug, thx you for report :) will try to fix this now\n. Fixed, w8 @phalcon review :)\n. @phalcon ping\n. @phalcon ping\n. Nope, no support for this :(\n. Thank you for bug report, try latest master :)\n. My opinion about this issue:\nif we work with 1 zvals or 2 zvals:\nuse https://github.com/php/php-src/blob/master/Zend/zend_operators.c#L1059\nif we work with native c types:\ndeveloper need check about != 0\ni think now zephir works like this\n. I don`t know anything about asserts :D\ni think if you rly want to use this, implement this :)\n. @nkt I tried, oh now I understand your idea.\n. @phalcon it is demo about 404 issus, answer question in 404 issue first!\n. @andycheg \nPlease fix PHP 5.3 BC\n. I review it\nSeems like okey\n@andycheg Thank you, happy coding with Zephir ^^\n. @mruz \nWhy do you create comment for this pull request?\n. This pr is not merged yet\n. I create path in phalcon for it, I will create pull in 10m\n. Your error is caused by wrong parameter passed\nsetOption($key, $value) but passed only 1 argument\nBut it is not end of bugs\nMemcache extension works wrong with Reflection class (((\n. I create patch for Memcache\nPlease Vote for it https://bugs.php.net/bug.php?id=67529 :+1: \n. We have new problem\n```\nZephir\\CompilerException: Method '\\PDO::query' called with a wrong number of parameters, the method has: 0, passed: 1 in /media/projects/phalcon_2/phalcon/db/adapter/pdo.zep on line 272\n       let statement = pdo->query(sqlStatement);\n\n```\n. @nkt why? somebugs in PHP not in Zephir!\n. @phalcon Yeap I see maybe we write notice not error m?\n30 \u0418\u044e\u043d 2014 \u0433. 6:01 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Phalcon\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\nThere was a comment there to avoid changing this:\nhttps://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L280\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/pull/428#issuecomment-47471997.\n. i see that you break BC in code for old return type\nfix bc!\n. @nkt ping\n. :+1: \n@phalcon ping\nCan we delete these comments?\n. @phalcon ping\n. LOL. Write example code to see errors in Zephir\n. Hi\nuse\n\nzephir\nquery->{\"fetch\"}(\\PDO::FETCH_ASSOC);\nCan it be closed?\n. Thank you\n. @nkt \nStop write docs with your perfect english skill\n. @nkt \nStop to write docs with amazing typos in it :)\n. I think you can try \ngit submodule update --init\nAnd why do we need it? \n. Sorry I forget about this issue will fix as soon as I can :)\n. @phalcon \nStill waiting for your review\n. @phalcon ping\n. I don't know about lambda functions in C# :(\n. Andres didn't answer to my emails and messages on hangout\nNikolaos didn't answer in hangout.\n@phalcon didn't answer who is sitting under him\nNoone didn't answer about migration this project to zephir-lang \n@nkt I didn't add tests because i w8 457_issus branch\nhttps://github.com/ovr/zephir/commit/aad6e0c05b0910b9473dcda21f2a672d6f17a8b1\n$this->getReflection()->getMethod($this->getName())->isDeprecated()\n@nkt\n\u0423 \u0442\u0435\u0431\u044f \u0435\u0441\u0442\u044c \u043c\u043e\u0439 \u0441\u043a\u0430\u0439\u043f \u043d\u0430\u0447\u043d\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0442\u044c \u043d\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438 \u043f\u0438\u0441\u0430\u0442\u044c \"\u0447\u0442\u043e \u0414\u0438\u043c\u0430 \u0433\u0434\u0435 \u0442\u0435\u0441\u0442\u044b!?\", \u0430 \u044f \u0442\u0435\u0431\u0435 \u043e\u0442\u0432\u0435\u0447\u0443 \u043f\u043e\u0447\u0435\u043c\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u043d\u0435\u0442.\nNot a problem I can w8 reviewers but if I see answers for my messages first!\n@phalcon\nYou can remove me from collaborator`s group if I am really doing something bad at the current moment\n. @phalcon \nYeah, because I am not interested to wait you review if you can't answer my messages\nAnd most of all pull requests you didn't say anything after review\nHow can I understand that you reviewed pull request?\n. > @phalcon \n\nYeah, because I am not interested to wait you review if you can't answer my messages\nAnd most of all pull requests you didn't say anything after review\n@phalcon\nYou can remove me from collaborator`s group if I am really doing something bad at the current moment\n@phalcon didn't answer who is sitting under him!\n. @nkt @phalcon \n what do you think about\nif we will throw exceptions with code and links to docs? :)\n. As you can see I proposed it in my message :)\n27 \u0418\u044e\u043b 2014 \u0433. 19:17 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Nikita Gusakov\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n@ovr https://github.com/ovr we can create error system with error\ncodes, that helps google this errors in future. Zephir error 94 for\nexample.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/issues/464#issuecomment-50259709.\n. @Barbery \nYou don`t build project inside the project dir\n\nIts okay\n```\nzaets28rus@web-server:~/projects$ cd myzephir/\nzaets28rus@web-server:~/projects/myzephir$ zephir install\nWarning: Variable \"value2\" declared but not used in Myzephir\\Kmeans::_euclidean in /media/projects/myzephir/myzephir/kmeans.zep on 135 [unused-variable]\n            var key, value, value2;\n    ------------------------------^\n\nCompiling...\n```\nBut you build in the parent dir like\nzaets28rus@web-server:~/projects$ zephir install\nZephir\\Exception: Extension namespace cannot be loaded\n. I think something broken in .objects files\nI don`t know any functions from Zend core or C stdlibs called test_globals\nI saw this functions in ext\\kernel.libs\nExecute\nzephir fullclean\nzephir install\nIt would be okay after it\n. You can compile zephir runtime from runtime folder in this project\n. @loint \nFor current time Zephir Runtime support minimal of code expressions\\statements, i think you dont need to try playing with it\nIt is a developer preview :)\n. It's a developer preview (demo) to see powerfull of runtime compilation\n. 1\nYou interface Xx, implements setMethod with body text\n2\nYeap, We need\n. Master branch code? WTF!&!&!&!!&!& :-1: \nGood job!\nhttp://www.youtube.com/watch?v=R-DkW9fP4JM\n. @phalcon ping, i think it would be better way\n. @nkt Dont release new versions without any messages yet\n. @phalcon ahahahah nice joke :+1: \n@boxbillinggit https://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#bugs\n. Code to reproduce the bug.\nm?\nMethod '__toString' was defined more than one time\nm?\nI think only wizzards can help you with this description :smiley: \n. @nkt \nKernel is Compononent of Zephir written on C (not autogenerated by zephir)\nMaybe another developer will use this project to write extension for php with Zephir.\nIt isn't correct way to avoid detetion by changing files ext's for components.\nWhy you hate git submodules?\n. First, You can install zephir without Composer\nThis commit doesn`t add submodules to zephir project or zephir's projects\nIt splits only, and move autogenerated files from kernel as you can see.\n\nComposer is a tool for dependency management in PHP.\n\nComposer is not best way to install system libs.\n. @phalcon \nWithout kernel submodule my project marked as c language!\n. @phalcon okey, not a problem\n. I'll w8 for merge this commit\nBecase I need kernel component without autogenereated files\n. http://www.mingw.org/\nYou can use for compiler\n. > Maybe you should use http://php.net/manual/en/book.inotify.php, and just suggest it in composer.json?\nIt is not a popular lib, I hate this functional code without async\n. @nkt \nasynchronous*\nStop skyped with me and then say:\n\nFor now you doesn't stop build if files changed\n\n1 You lib is not supported yet\n2 Last update 2012\n3 Hosted on pecl not github\n4 procedure  style\n5 no community\n. See last commit 2012 year\nReact can work without any lib\nIt is not a wrapper\nFirst read something about it and then write\nBrew is not official package manager\nInotify is linux kernel component\nMaybe I need write command for you?)\nI cant support all os because I dont have macos and dont run it under\nWindows\nI will change hard code for ionotify\n 06 \u0410\u0432\u0433 2014 \u0433. 22:02 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Nikita Gusakov\" \nnotifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n@ovr https://github.com/ovr so what? Who said you that this lib doesn't\nsupport?\nreact is just wrapper for http://php.net/manual/ru/ref.libevent.php. You\nalso use inotifywait, that is not very popular tool. For example there is\nno inotifywait on OS X.\n$ brew search inotifywait\nNo formula found for \"inotifywait\".\nSearching pull requests...\nYou wrote command just for you, working just with your environment. This\nis not ok.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/pull/472#issuecomment-51325406.\n. @nkt \nhttps://github.com/reactphp/react/blob/split/composer.json#L26\nIt works with 3 exstensions But you suggest only 1\n\nAs I can see you only writting messages and contribute issues\nIt's amazing when you send  :-1: on my pull requests\nBut who will write code and added new futures?\nI think it would be nice when only @phalcon contributes Zephir :+1: \n. https://github.com/phalcon/zephir/graphs/contributors?from=2014-02-11&to=2014-08-07&type=c\nAfter i start to contibue\nWill open this topic soon\n. What pull requests do you like to see from me and other contributors?\nMaybe you* will assign tasks to someone?\n. http://gyazo.com/a75b3063d51e1a43e2a4f5a312370231\n. Because It is not impemented yet\nhttps://github.com/phalcon/zephir/blob/473d5395bbed79446d4f4d464b1f9d0a501e1d49/ext/kernel/object.c#L301\nYou can copy and paste from PHP source code to Zephir kernel https://github.com/php/php-src/blob/8b66d64b2343bc4fd8aeabb690024edb850a0155/Zend/zend_builtin_functions.c#L1285\nRecompile and It will works\n. @nkt \nAnd why we need optimizers with your logic?)\nThis fix takes <= 10 minutes, but disable is more priority in your suggestion, why?\n. Maybe you should use implements word?\n. @nkt \nMaybe it works\n. Can you try the latest master? (i think @phalcon fix it in 1c8129b5b95da4651a1f0d82d28aac5d4a4719a6)\n. Okey i will try to fix it now\n. @mruz \nTry to use https://github.com/phalcon/zephir/pull/486\n. I will add tests for array_merge optimizer\n. So I found bug in var_dump with array type\n. i will recompile with gmp\n. @phalcon ping\n. @phalcon \nFor not it is not valid\n\n. @phalcon PHP 5.3 tests failed with seg fault\nCan you help me because I cant fix this\n. I think that PHP 5.3 failture build is not related with my code changes\n. @phalcon ping\n. @phalcon ping\n. > I think that PHP 5.3 failture build is not related with my code changes\nSuccess without any changes\n. @phalcon ?\n. Done\n@phalcon Review?\n. Done\n. \u042f \u043f\u0438\u0441\u0430\u043b \u043e \u043d\u0435\u043c \u043a\u0430\u043a \u0442\u043e https://github.com/phalcon/zephir/issues/459\n\u041a\u043e\u0433\u0434\u0430 \u0444\u0438\u043a\u0441\u0438\u043b \u0442\u043e\u0447\u043d\u043e \u0442\u0430\u043a\u0443\u044e \u0436\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c\u0438\n. Started to work on this\n. \u0421\u043c\u0435\u0440\u0434\u0436\u0438\u043b\u0438 \u0440\u0430\u043d\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 pull request, \u0435\u0449\u0435 \u043d\u0435 \u0434\u043e\u0434\u0435\u043b\u0430\u043b \u0434\u043e \u043a\u043e\u043d\u0446\u0430\n. Pong?)\n. @serg-deep \nI think the best way\nUpload your code on github like a project\n. \u042f \u0433\u043b\u044f\u043d\u0443\u043b \u043d\u0430 \u043a\u043e\u0434, \u0443\u0432\u0438\u0434\u0435\u043b \u0447\u0442\u043e \u0442\u043e \u043d\u0435\u043c\u044b\u0441\u043b\u0438\u043c\u043e\u0435\n\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u0430\u043c\u0438 \u0438 \u0442\u0435\u0441\u0442\u0438\u0442\u044c \u043c\u043d\u0435 \u0432 \u043b\u043e\u043c\n\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0442\u0435\u0431\u0435 \u0437\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0435\u043a\u0442 \u043d\u0430 Github\n\u041a\u0430\u043a \u043f\u043e\u043c\u043e\u0447\u044c \u0442\u0435\u0431\u0435 \u043d\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u044e \u043a\u043e\u0434 \u043d\u0435 \u0437\u043d\u0430\u044e\n\u0412 \u043f\u0440\u0438\u043d\u0446\u0435\u043f\u0435 \u043e\u043d \u043f\u0440\u043e\u0441\u0442\u043e \u0432 Constant Expression \u0431\u0430\u0436\u0438\u0442 \u0442\u0430\u043c \u043d\u0430\u0434\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0434\u043e\u043f\u0438\u0441\u0430\u0442\u044c. \u043c\u043e\u0436\u0435\u0448\u044c \u0441\u0430\u043c \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u044c\n. @hylent ^_^\n. > Todo:\n\nInternal class\nClass with another namespaces\n\nWhy you merge it?(\n. \u041f\u0440\u043e\u0432\u0435\u0440\u044c \u0447\u0442\u043e \u0440\u0430\u0441\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 Core  \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e \u0438 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0443 \u043d\u0435\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u0443 App\n. \u0422\u043e\u0433\u0434\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u043d\u0435 \u043f\u0440\u0438\u0447\u0435\u043c\n\u0412\u043a\u0440\u0430\u0442\u0446\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0447\u0435\u043a \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c true \u0438 \u0432\u044b\u0432\u043e\u043b\u0438\u0442\u044c entiy \u0438\u0437 runtime \u043a\u0430\u043a \u044f \u0434\u043b\u044f pdo \u0434\u0435\u043b\u0430\u043b\nphp\n$classEntry = 'zephir_get_internal_ce(SS(\"pdostatement\") TSRMLS_CC)';\n. > \u0432\u044b\u0432\u043e\u043b\u0438\u0442\u044c entiy \u0438\u0437 runtime \u043a\u0430\u043a \u044f \u0434\u043b\u044f pdo \u0434\u0435\u043b\u0430\u043b\n\u041a\u0430\u043a\u0438\u0435 \u0440\u0443\u043a\u0438? \u042f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0444\u0443\u043d\u043a\u0446\u0438\u044e zephir_get_internal_ce\n. \n\n\u0412\u043a\u0440\u0430\u0442\u0446\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0447\u0435\u043a \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c true \u0438 \u0432\u044b\u0432\u043e\u043b\u0438\u0442\u044c entiy \u0438\u0437 runtime \u043a\u0430\u043a \u044f \u0434\u043b\u044f pdo \u0434\u0435\u043b\u0430\u043b\n\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0447\u0435\u043a \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c true\n. Started to work on this problem\n. @ogarbe Yeap, I found solution but sometimes It was crashed\nSorry for long delay\n. @ogarbe I created demo for Phalcon\\Mvc\\Application https://github.com/phalcon/zephir/pull/599\nI will create tests and complete PR as soon as I can\n. This was implemented and merged\n. Fixed c sting escaping and added tests with relative namespace in object declaration\n@phalcon \nIt can be merged\n. Maybe this Segmentation fault was caused by another extension? (not Zephir)\nGDB log is not related with Zephir as i see\n\ntry to test\nphp -r \"echo 1;\"\nFault?\n. Already exists https://github.com/phalcon/zephir/pull/494\n. Fixed in master\n. http://php.net/manual/en/splfileinfo.getbasename.php\nIt's required one parameter $suffix at least\n. I will check as soon as I can\n. @phalcon ping\n. It's not related to this pull request because It's global bug with PHP 5.3\n. @phalcon ping\n. Yeap. It's not supported now\n. @phalcon \nNotify about use newer version? 5.3 is not supported at the global community EQL\nhttp://php.net/archive/2014.php#id2014-08-14-1\n. Yeap, This issue is related to #493 \nNoone cant read russian ;)\n. Sorry guys wrong matching models when git push\n. Unspecial\n``` bash\novr@ovr-desktop:~/projects/phalcon/zephir$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges not staged for commit:\n  (use \"git add ...\" to update what will be committed)\n  (use \"git checkout -- ...\" to discard changes in working directory)\nmodified:   ext/config.m4\nmodified:   ext/test.c\nmodified:   ext/test.h\nmodified:   test/closures.zep\n\nUntracked files:\n  (use \"git add ...\" to include in what will be committed)\next/test/closures.zep.c\next/test/closures.zep.h\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\novr@ovr-desktop:~/projects/phalcon/zephir$ git add .\novr@ovr-desktop:~/projects/phalcon/zephir$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD ...\" to unstage)\nmodified:   ext/config.m4\nmodified:   ext/test.c\nmodified:   ext/test.h\nnew file:   ext/test/closures.zep.c\nnew file:   ext/test/closures.zep.h\nmodified:   test/closures.zep\n\novr@ovr-desktop:~/projects/phalcon/zephir$ git commit -m \"More tests for Closures\"\n[master f338cb2] More tests for Closures\n 6 files changed, 113 insertions(+), 1 deletion(-)\n create mode 100644 ext/test/closures.zep.c\n create mode 100644 ext/test/closures.zep.h\novr@ovr-desktop:~/projects/phalcon/zephir$ git pu^C\novr@ovr-desktop:~/projects/phalcon/zephir$ git checkout -b closures_tests\nSwitched to a new branch 'closures_tests'\novr@ovr-desktop:~/projects/phalcon/zephir$ git push ovr closures_tests \nCounting objects: 192, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (55/55), done.\nWriting objects: 100% (55/55), 6.12 KiB | 0 bytes/s, done.\nTotal 55 (delta 43), reused 0 (delta 0)\nTo git@github.com:ovr/zephir.git\n * [new branch]      closures_tests -> closures_tests\novr@ovr-desktop:~/projects/phalcon/zephir$ git status\nOn branch closures_tests\nChanges not staged for commit:\n  (use \"git add ...\" to update what will be committed)\n  (use \"git checkout -- ...\" to discard changes in working directory)\nmodified:   Library/Expression/Closure.php\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\novr@ovr-desktop:~/projects/phalcon/zephir$ git add .\novr@ovr-desktop:~/projects/phalcon/zephir$ git status\nOn branch closures_tests\nChanges to be committed:\n  (use \"git reset HEAD ...\" to unstage)\nmodified:   Library/Expression/Closure.php\n\novr@ovr-desktop:~/projects/phalcon/zephir$ git commit -m \"Expression\\Closue fixes\" -m \"- Use LiteralCompiledExpression\" -m \"- Fix doclbock\" -m \"- Remove underscore style for protected variables\"\n[closures_tests c5bc2c0] Expression\\Closue fixes\n 1 file changed, 10 insertions(+), 9 deletions(-)\novr@ovr-desktop:~/projects/phalcon/zephir$ git push\nCounting objects: 74, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (11/11), done.\nWriting objects: 100% (11/11), 1.40 KiB | 0 bytes/s, done.\nTotal 11 (delta 7), reused 0 (delta 0)\nTo git@github.com:phalcon/zephir.git\n   63491cd..f338cb2  master -> master\novr@ovr-desktop:~/projects/phalcon/zephir$ git branch\n  485_issue\n  490\n  490_fix\n  490_issue\n  498_issue\n  after_phalcon\n* closures_tests\n  master\n  stubs_support_array_type\novr@ovr-desktop:~/projects/phalcon/zephir$ git push ovr closures_tests \nCounting objects: 34, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (5/5), done.\nWriting objects: 100% (5/5), 598 bytes | 0 bytes/s, done.\nTotal 5 (delta 4), reused 0 (delta 0)\nTo git@github.com:ovr/zephir.git\n   f338cb2..c5bc2c0  closures_tests -> closures_tests\novr@ovr-desktop:~/projects/phalcon/zephir$\n```\nI can revert if something is going wrong\n. Not only this\nphp\nStarting test 'Extension\\RouterTest::testRouter'.\n/home/travis/build.sh: line 41: 24832 Segmentation fault      (core dumped) valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\n. Last test\nphp\nStarting test 'Extension\\TryTest::testThrow2'.\n/home/travis/build.sh: line 41: 24972 Segmentation fault      (core dumped) valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\nlike random\nI think this caused by  HKEY or MKEY macroses https://github.com/phalcon/zephir/blob/497d37adf243cf6ff2f80ab02ed9809651022b56/ext/kernel/main.h#L312\n. It was founded by this PR but not related as I can see\nSome errors like current problem https://travis-ci.org/phalcon/zephir/builds/33388285\nhttps://github.com/phalcon/zephir/commit/497d37adf243cf6ff2f80ab02ed9809651022b56#diff-542f850ea1e50d8fadcafbf59d458530R339\nZEPHIR_GET_IMKEY is used in ForStatement\n. Fixed, I will close\n. @phalcon ping\n. Thanks you for this step\nI think its amazing When you saw pull request and then edit code without merge\nAnd closed my PR\n. +1 :smile_cat: \n. I cant do anything without debug information from fpm\nTry to compile php with +debug option and \nExt by the way:\nbash\ncd ext && phpize && ./configure CFLAGS=\"-O2 -finline-functions -fomit-frame-pointer -fvisibility=hidden\" && make clean && make -B && sudo make install\nI only see this information\n`` bash\novr@ovr-desktop:~/projects/ovr/phalcon-module-skeleton$ gdb --core=~/Wallpapers/core-php-fpm.11487 \nGNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\".\n[New LWP 11487]\nCore was generated byphp-fpm: pool pool_1                                                          '.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f1cc3dd9704 in ?? ()\n(gdb) bt\n0  0x00007f1cc3dd9704 in ?? ()\n1  0x00007fffcc5b5a20 in ?? ()\n2  0x00007f1cca865ee0 in ?? ()\n3  0x0000000000fe8ac0 in ?? ()\n4  0x00007fffcc5b5a38 in ?? ()\n5  0x00007fffcc5b5a20 in ?? ()\n6  0x00007f1cc3dd9849 in ?? ()\n7  0x00007fffcc5b5a48 in ?? ()\n8  0x00007f1cc3df9c88 in ?? ()\n9  0x0000000000000000 in ?? ()\n(gdb) bt full\n0  0x00007f1cc3dd9704 in ?? ()\nNo symbol table info available.\n1  0x00007fffcc5b5a20 in ?? ()\nNo symbol table info available.\n2  0x00007f1cca865ee0 in ?? ()\nNo symbol table info available.\n3  0x0000000000fe8ac0 in ?? ()\nNo symbol table info available.\n4  0x00007fffcc5b5a38 in ?? ()\nNo symbol table info available.\n5  0x00007fffcc5b5a20 in ?? ()\nNo symbol table info available.\n6  0x00007f1cc3dd9849 in ?? ()\nNo symbol table info available.\n7  0x00007fffcc5b5a48 in ?? ()\nNo symbol table info available.\n8  0x00007f1cc3df9c88 in ?? ()\nNo symbol table info available.\n9  0x0000000000000000 in ?? ()\nNo symbol table info available.\n(gdb) thread apply all bt full\nThread 1 (LWP 11487):\n0  0x00007f1cc3dd9704 in ?? ()\nNo symbol table info available.\n1  0x00007fffcc5b5a20 in ?? ()\nNo symbol table info available.\n2  0x00007f1cca865ee0 in ?? ()\nNo symbol table info available.\n3  0x0000000000fe8ac0 in ?? ()\nNo symbol table info available.\n4  0x00007fffcc5b5a38 in ?? ()\nNo symbol table info available.\n5  0x00007fffcc5b5a20 in ?? ()\nNo symbol table info available.\n6  0x00007f1cc3dd9849 in ?? ()\nNo symbol table info available.\n7  0x00007fffcc5b5a48 in ?? ()\nNo symbol table info available.\n8  0x00007f1cc3df9c88 in ?? ()\nNo symbol table info available.\n9  0x0000000000000000 in ?? ()\nNo symbol table info available.\n```\nNo symbol table info available.\n. \u041d\u043e \u0442\u0443 \u0441\u0442\u0440\u043e\u0447\u043a\u0443 \u043a\u0438\u043d\u0443\u043b \u043f\u0435\u0440\u0435\u0441\u043e\u0431\u0435\u0440\u0438 \u0440\u0430\u0441\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0441 \n./configure CFLAGS=\"-g3 -O1 -fno-delete-null-pointer-checks -Wall -fvisibility=hidden\"\n\u0418 \u0434\u0430\u0439 \u043a\u043e\u0434 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043a\u043b\u0430\u0441\u043e\u0432\n. This bug is caused because PHP is not support default array value for properties\nAnd we assign default array value in __constructor\nI added fix bug soon we need to added optimizer for it\n. Not a problem,  Happy coding with Zephir :smile_cat: \n. Open new issue please, I will try to fix it as soon as I can\n. @phalcon ping\n. PHP 5.3\nStarting test 'Extension\\RouterTest::testRouter'.\n/home/travis/build.sh: line 41: 25350 Segmentation fault      (core dumped) valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\n. @phalcon ping\n. As I understand this problem was solved by @dreamsxin \n. @kshvakov \nCan you test my branch (pull request)?\nbash\ncd zephir\ngit remote add ovr https://github.com/ovr/zephir.git\ngit fetch ovr\ngit cherry-pick c14efc0a60d1bb8baab7374f92183f3fda28e89e\n. ping @nkt \n. Are you interested to fix implementation of this feature?\n. http://zephir-lang.com/phpinfo.html?\n. @mruz Will check as  soon as I can\n. Good idea, but useless\nMost of all coders use IDE, for example Idea\nAnd it's not supported by default\n\nIt's helps us exclude issues about tabs and spaces\n)))))) \n\nMaybe it helps own you and + 2-3 developers\n:-1: \n. > And it's not supported by default\nFor all IDEs and Editors\n. I suggest to write this in README\nCode Style Guide\n. @thaJeztah\nLol. Guy it`s needed for core developers. Who will use it? only @nkt? Who?  And why you need this file? You write code?\n. More priority to write code style section\nAbout PSR2 and Tabs in c code\n. I suggest to create Zephir Standard instance of PSR2 for PHP code\nChange:\n- Change all to tabs\n- Remove 1 empty line in the end of file\n. http://programmers.stackexchange.com/a/2037\n\nTabs\n- allow mistakes to be more noticeable, it's annoying to micro manage to spaces.\n- are consistent, they are only used for indentation, unless you are commenting wrong.\n- are customizable, you can specify in the options of the editor how wide they are.\n- are more productive, why type 4 spaces when ye can hit 1 tab.\n- take less size than multiple spaces.\n- take more space than a space.\n- take less time to go through.\n- tend to work better in IDEs.\n\n\n. Tabs as indentation for structuration in code\n\nare the animated blocks using tabs? (If so, then tabs are not only used for indentation)\ny\nif so, does that mean that the tab-width is dynamically adjusted?\nYou change tabs and spaces width\nWe you use tab button for identity and spaces for alignment\n\nSee you keyboard you use tabs button for 4 spaces, but it's designed for 1 character (tab)\nhttp://vim.wikia.com/wiki/Indent_with_tabs,_align_with_spaces\nIt's not a big problem for all programmers because you already use tab button for identity your code\nMost of all IDE's setup tab for 4 spaces but we can get this indentation by 1 char (tab)\n. @phalcon \n\nwe have been working this way since the start of both projects\nhttps://github.com/phalcon/zephir/commit/fbbebc80686534183d475b312fbeac7d694210e3\n\nBefore my commit your prefer tabs....\n@nkt \n\nexclude every advantages of tabs. Great!\n\n\n. elseif = else if?\n. Compile from\nZephir elseif\nto\nC code else if\nFunny\n. You need to install php5-dev or php-devel\n. @wapmorgan Can you tests https://github.com/ovr/zephir/commit/a9802d16942152e5b2771c44c2fdf51a92bb16ee?\n. So, I will test this PR on @wapmorgan 's project as soon as I can, after It'l will rebase\nw8 1-3 day(s)\n. Good new, Now elseif(s) works but I need to fix Optimizer about init skip....\n. > but I need to fix Optimizer about init skip....\n@nkt \n\u0421\u0434\u0435\u043b\u0430\u043b \u0431\u0430\u0433\n\u041d\u0435 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0448\u044c\u0441\u044f, \u0432\u043b\u0435\u0437\u0430\u0435\u0448\u044c\n\u0421\u043d\u0430\u0447\u0430\u043b\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0439, \u043f\u043e\u0442\u043e\u043c \u043f\u0438\u0448\u0438\n\u0414\u0430\u0432\u0430\u0439 \u0432\u043c\u0435\u0441\u0442\u0435\n1 \u0427\u0438\u0442\u0430\u0435\u043c\n2 \u0414\u0443\u043c\u0430\u0435\u043c\n3 \u041f\u0438\u0448\u0435\u043c\n\u0418 \u0435\u0449\u0435 \u0440\u0430\u0437\u0438\u043a\n1 \u0427\u0438\u0442\u0430\u0435\u043c\n2 \u0414\u0443\u043c\u0430\u0435\u043c\n3 \u041f\u0438\u0448\u0435\u043c\n. @phalcon \nI fixed bug elseif support\nBut all time we have a bug in tmp variable for property-access\nMy suggestion to avoid this by naming tmpVariables in\nNow\n``` zephir\nthis->property\n_0 = .....('property');\n_1 = .....('property');\n```\nSuggest\n``` zephir\nthis->property\nthisProperty = .....('property');\nthisProperty = .....('property');\n```\nAfter naming tmp variables for property-access\nwe can check \nDo we have a tmp variable for property-access?\nto avoid 2 tmp variables\nBut it's another bug and not releated to this\nSee code generated code for https://github.com/phalcon/zephir/commit/2a0725eb8624718dc20ff1f9a932b2822ed4fd66#diff-a648e389fb3aa83ebcf1057a95e64be9R72\nno dublications\n. @nkt \n\nplease respect people who doesn't know Russian\n\nThis message was related only to you\n\nNext time instead of thinking about how much you cool\n\nNot a problem, but where did I say this?\n\ntry to understand, that not only you can add this fix\n\n10 days left, you can call in skype and say @ovr i will fix it, not a problem? or fix it in another PR\n\nI've tried to fix this, but got the same result.\n\n1 Lol, Elseif support already fixed in this PR and 2 tmp vars is not related to this\n   It's a global bug with tmp variables\n2 Where i can find fix for it from you?\n3 Proof?\n. > ovr commented 12 minutes ago\n\nnkt commented 13 minutes ago\n. > nkt created branch bugfix/elseif at nkt/zephir  35 minutes ago\n\nNice proof\nMy proff\nhttps://github.com/ovr/zephir/commit/1941bc925410f6f3b073a59117f42c13ad2e6798\novr authored on 1 Jan 2014\no0 Andres fix it prevent\nhttps://github.com/ovr/zephir/commit/8fc589040a021a75a95019c7efd08285de576747\n:smile:\n. wow, we use git... realy :santa: \n. @phalcon ping\n. Rebased\n. @phalcon ping\n@steffengy yeap, my fail :smile:\n. @phalcon ping\n. @phalcon ping\nLatest test fails because something is broken in arithmetics via latests master commits\n. Yeap, I saw this but I didn`t change code for this tests\nThis caused after rebase and regenerate sources..\n. Maybe this bugged after https://github.com/phalcon/zephir/commit/c78fa3fabde44338de57802a6db16a02752fcd78\nrefs https://github.com/phalcon/zephir/pull/594\n. https://github.com/ovr/zephir/blob/44700acb381c2b6fabb997db2292142727818292/test/statements.zep#L76\nThis tests code was copy-pasted from user's issue\n. And we dont have any divisions test right now\nhttps://github.com/phalcon/zephir/pull/594\nPlease merge and fix division...\n. @phalcon Rebased, Now it works\n. > I don't think nkt.zep is a good name for a class, it doesn't mean anything\nSuggest to added andres.zep :smile:\nIt's not a problem, InterfaceA and InterfaceB don't mean anything\n@phalcon \nWhat do you suggest to use instead of Nkt?\n. We have a bug in master branch, I think more priority (test and merge this pr)\n. Good idea \nMaybe, Best way would be to use tags (releases) as stable version(s) with Composer\nAnd users can use Zephir version as they like\n~0.5.1 or * or dev-master\nComposer is the best way to compile ext\n. @phalcon \nAs I see it's a bug in composer or we need to change ./install -> install\n. Hmmm\n```\novr@ovr-desktop:~/projects/phalcon/zephir$ composer run-script post-install-cmd\nParser statistics: 120 terminals, 98 nonterminals, 433 rules\n                   881 states, 0 parser table entries, 0 conflicts\n```\nWe need to use another event name for install\n. @nkt Yeap, I saw but We can implement this in PR for Composer\n. Closed via project created on https://github.com/zephir-lang/parser\n. Good Idea, but phosforum doesn't save my avatar from github((\n. The fatal flaw\n. @phalcon ping\n. Add more tests for special characters\nzephir\necho \"\\w\\r\\t echo' \\\"\"\nAnd see notify in compilation log\n. Omg typo, Add :smile:\n. Duplicate of #203 \nPlease use search\n. @phalcon ping\n. https://github.com/phalcon/zephir/commit/85e54fe0ac44fa12d8d0be37441434773caaf416#diff-248ceabfa20d5576b00171e114ec5d3dL737\nYep, Auto comment?\n2014-10-26 10:33 GMT+09:00 Phalcon notifications@github.com:\n\nAutomerge?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/pull/593#issuecomment-60503419.\n. @phalcon \nSo how can I avoid runtime test with Phalcon\\Application?\n\n1 I can load Phalcon ext\n2 I can load Phalcon ext with 1 class\n3 Remove this test\n. @darkgaro \nSo i think It works with interfaces\nI will work on this tomorrow\n@phalcon \n\n@phalcon \nSo how can I avoid runtime test with Phalcon\\Application?\n1 I can load Phalcon ext\n2 I can load Phalcon ext with 1 class\n3 Remove this test\n. @andresgutierrez \n. @phalcon Answer the question please, rebased\n. @phalcon yeap\n. Guys, Maybe someone knows about PHP CPP\n\n@andresgutierrez \nI think, C++ layer can help our to track variables (memory allocation/deallocation)\nLike In PHP-CPP\nhttps://github.com/CopernicaMarketingSoftware/PHP-CPP/blob/master/zend/value.cpp#L298\nproviders more easy way to allocate/deallocate memory\n~ 5 month ago, @sjinks write PHP C++ exstension with \nAllocation Strategy for Zval\nping @sjinks\n. @andresgutierrez \nI was trying to say\nThat if We use C++ it will be more clearly in code (not only for this task, for all Zephir kernel component)\n. Yeap, still w8ing for https://wiki.php.net/rfc/engine_exceptions_for_php7\n. PHP 5.3 is broken via prev commit\n. @andresgutierrez \nIt's a perfect idea to write Zephir on Zephir lanuage\nBut I think We need to split CodeGenerator and Parser into other components before \"We migrate Zephir To Zephir\". It's more priority.\nIf we create a PHP Parser Component for Zephir, It can give more popularity for project and new contributors.\n. 2 commits to fix code and 2 to fix your PSR2 mistakes  :smile: \nPlease rebase it to one commit, it would be more clearly variant\n. globals_set is commented\nhttps://github.com/phalcon/zephir/blob/master/Library/Optimizers/FunctionCall/GlobalsSetOptimizer.php#L66\n. I did'nt test It but i think this bug is caused byslash\nZephir is not php\nPlease use\nuse Phalcon\\Config;\nwithout slash!\nThx for bug report :+1: \n. It's a statement name\nplease use hack with $\nzephir\npublic function int$() {\n}\nI think It helps you to avoid this error\n. Started to work on this\n. @phalcon \nhttp://en.cppreference.com/w/cpp/language/escape\nBut what is wrong with this PR?\n. @phalcon \nPing-Pong\n. @nkt \ntry/hard :smile_cat: \n. @SliceOfLife \nPlease test latest master, if it's not success please reopen this issue\nThanks for feedback\n. I am working on this problem now\n. refs https://github.com/phalcon/zephir/issues/609\nI will close it, via It's not implemented yet\n. Please use forum to ask questions\nhttp://forum.zephir-lang.com/\n. @dgafka did you compile your app with production mod?\nFor example with this\n-O2 -fvisibility=hidden -Wparentheses -flto -DZEPHIR_RELEASE=1\nIf you compile ext by using zephir install, this will be in production mod\n. Test for Zephir Variant for 100\nbash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nOutput\n``` bash\nElapsed time: 0.842635 sec\nreal    0m0.885s\nuser    0m0.860s\nsys 0m0.019s\n```\nfor 1000\nbash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 1000 test/test.php > /dev/null\nOutput\n``` bash\nElapsed time: 8.397634 sec\nreal    0m8.438s\nuser    0m8.319s\nsys 0m0.099\n```\nZephir function calls\n\n<= 10% of all time\nFor PHP Version\nbash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\n``` bash\nElapsed time: 21.947820 sec\nreal    0m21.988s\nuser    0m21.666s\nsys 0m0.250s\n```\nbash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 1000 src/test/test.php > /dev/null\n``` bash\nElapsed time: 215.880088 sec\nreal    3m35.920s\nuser    3m33.352s\nsys 0m2.109s\n```\n100:  0.842635 vs 21.947820 /= 2600%\n1000: 8.4 vs 215s /= ~2505.5%\nWTF!?\n@dgafka \nYour opinion..\n. https://github.com/dgafka/zephir-BookStore/blob/master/dgafka/dgafka/test/test.zep#L18\nhttps://github.com/dgafka/Php-BookStore/blob/master/src/test/test.php#L35\n@dgafka \nIn PHP 1000 vs Zephir 100?\n. Upd:\n5 Rounds for PHP - 100 iteractions\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\nElapsed time: 21.587466 sec\nreal    0m21.715s\nuser    0m21.387s\nsys 0m0.208s\n```\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\nElapsed time: 21.630587 sec\nreal    0m21.671s\nuser    0m21.440s\nsys 0m0.196s\n```\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\nElapsed time: 22.620733 sec\nreal    0m22.663s\nuser    0m22.122s\nsys 0m0.276s\n```\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\nElapsed time: 21.659788 sec\nreal    0m21.793s\nuser    0m21.428s\nsys 0m0.226s\n```\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 src/test/test.php > /dev/null\nElapsed time: 22.345781 sec\nreal    0m22.389s\nuser    0m22.052s\nsys 0m0.246s\n```\n5 Rounds for Zephir - 100 iteractions\n\n-O2 -fvisibility=hidden -Wparentheses -flto -DZEPHIR_RELEASE=1\n\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 23.767460 sec\nreal    0m23.811s\nuser    0m23.520s\nsys 0m0.168s\n```\n`````` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 22.851209 sec\nreal    0m22.977s\nuser    0m22.754s\nsys 0m0.111s\n```bash\n```bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 23.033572 sec\nreal    0m23.074s\nuser    0m22.920s\nsys 0m0.111s\n``````\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 23.150557 sec\nreal    0m23.188s\nuser    0m22.953s\nsys 0m0.140s\n```\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 23.102235 sec\nreal    0m23.140s\nuser    0m22.947s\nsys 0m0.125s\n```\n1 Round For Zephir in Debug\n\nDebug\n\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 26.587201 sec\nreal    0m26.676s\nuser    0m26.343s\nsys 0m0.168s\n```\n1 Round For Zephir in O3\n\n-O3 -fvisibility=hidden -Wparentheses -flto -DZEPHIR_RELEASE=1\n\n``` bash\ntime ~/.phpbrew/php/php-5.6.3/bin/php-cgi -T 100 test/test.php > /dev/null\nElapsed time: 23.216488 sec\nreal    0m23.295s\nuser    0m23.044s\nsys 0m0.136s\n```\nResults\n| Test Name | Min+Max/2 | Min | Max |\n| --- | --- | --- | --- |\n| PHP 5.6.3 | 22,483 | 22.345 | 22.620 |\n| Zephir Production | 23.309 | 22.851 | 23.767 |\n| Zephir Production -03 | 23.216 | 23.216 | 23.216 |\n| Zephir Debug | 26.587 | 26.587 | 26.587 |\n:crying_cat_face: \n. https://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#bugs\n\n\nCode to reproduce the bug\nYour environment: OS, compiler\nZephir version, if your version is outdated - try updating the latest version\n. Please show full class, I dont know\n\n: Property '_servers' is not defined on class 'Leaps\\Log\n\\Logger' in E:\\leaps\\leaps\\Cache\\MemCache.zep on line 114\n\n114 line.\nYou show me 3 lines at all\n. https://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#bugs\n\n\nCode to reproduce the bug\nYour environment: OS, compiler\nZephir version, if your version is outdated - try updating the latest version\n. I was trying to fix this, but I cant :anguished: \nMaybe when i was debugging I miss something\n\n\n@serg-deep\nPlease load this project on GitHub\n. Closed by https://github.com/phalcon/zephir/pull/751\nThank @steffengy \n. @phalcon \ncan it be an official?\n. @TuxLyn \nThanks, img fixed\n. greeting.zep must be in utils dir.\n\u0441\u0440, 7 \u042f\u043d\u0432 2015, 22:34, Guido Contreras Woda notifications@github.com:\n. cc @andresgutierrez\n. As I know It's not implement now\nYou cant generate source code for only 1 file\n. @mruz Yeap, I will close this\n. I was running the code but in console for main page\nand all is okey\nPlease show bt for the seg fault\n. It works and in pr_28\nbut i run it in console\n``` sh\n$ php website/public/index.php\nPHP Warning:  array_unshift() expects parameter 1 to be array, null given in /Users/ovr/projects/tests/website/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 31\nWarning: array_unshift() expects parameter 1 to be array, null given in /Users/ovr/projects/tests/website/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 31\n<!DOCTYPE html>\n\n\n\nStatus 405 | Ice framework\n\n\n\n\n\n\nbody { background: #f5f5f5 }\n\n\n\n\n\n\nStatus 405\n\nMethod Not Allowed\n\n\n\n\n\n\nIce framework \u00a9 2015                    \n\n\n\n\n\n``\n. In my opinion. It's not the main priority but soon it can be implemented\nYou can use cblocks and optimizers for it \n. refs https://github.com/ovr/phalcon2-stubs/commit/247460a4909e6449541d7ca8361d430788a6425b#diff-a11dde09ce34931f73865f21b34dea3cL5\n. @sergeyklay :smile_cat: \n. I am working on it\n. @sergeyklay \nhttps://github.com/phalcon/zephir/pull/723 I started but didnt finish\nI will try to finish it, tomorrow 8 november\n. ping @steffengy \n. @steffengy \nNice, thank you :smile_cat: \n. Merge is not a good way\nRead aboutgit rebase`\nAnd rebase it\n. cc @andresgutierrez @nkt @andresgutierrez \nOpinion?\n. Please added more tests for all types\n. @steffengy \nI think this can be bugged when you will use\nzep\nlet _GET[12345] = \"my test\";\n. @steffengy \nI mean this case, seems like okey\n. @phalcon @andresgutierrez Review it please\n. Will be closed automatically after merge\n. What do you think about it? int type for a\npublic function test(int a = null) ->int\n. @mruz \nI will push fix ASAP, in 3 days When I will be at home\n. Start working on this ;)\n. refs https://github.com/phalcon/zephir/pull/719\n. Seems like okey, thanks\n. :+1: \n. @steffengy \nCan you please add tests? This will be helpful ;)\n. @olivier-monaco \nCan you please added tests for it?\n. Thank you\n. Please fix PSR 2 https://travis-ci.org/phalcon/zephir/jobs/49236399#L1223\n. Closed via your PR :)\n. @steffengy \nCan you please add a small test case?\n. Thank you\n. This PR is bugged\nhttps://github.com/owl-framework/owl\n```\nPHP Notice:  Undefined index: \\Exception in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nNotice: Undefined index: \\Exception in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nPHP Warning:  Invalid argument supplied for foreach() in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nWarning: Invalid argument supplied for foreach() in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nPHP Notice:  Undefined index: \\Exception in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nNotice: Undefined index: \\Exception in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nPHP Warning:  Invalid argument supplied for foreach() in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\nWarning: Invalid argument supplied for foreach() in /Users/ovr/projects/zephir/zephir/Library/Compiler.php on line 1558\n```\nAnd Phalcon 2....\nPlease fix notices, and retest it\n. @steffengy \n:+1:\nAnd please add a test case from #702 \n. @steffengy \n\nWould \"test/ooimpl\" be appropriate? \n\nYeap\n. Tested on projects:\nPhalcon 2\nIce\nOwl\nThank @steffengy for this PR :+1: \n. Fix was merged into PHP 5.5+\nWill be released in upcoming minors versions\n5.6.7\n5.5.23\n. @nkt It's not a Zephir bug, but we need to create optimizers for it (better perfomance)\n. Yeap, we plan to support PHP 7, and next versions but not now.\n. Good job @steffengy :+1: \n. Thank you\n. Closed via good answer from @steffengy \n. Awesome :+1: \nBut what's about NS for functions?\n. @steffengy \nThank for answer\n. @steffengy \nkk, I will review it ASAP\nWill merge this with \n765\n751\nand release 0.6\n. Thank you\n. Duplicated\nrefs https://github.com/phalcon/zephir/issues/677\n. @tmihalik It's fixed, check latest master\n. Seems to be okey\nThank you :smiley: \n. Nope\n. It's not implemented\nWhy do you need it?\nphp\ncase 1 > 0\nCan you show a good example?\n. Thank for feedback\nWill be reviewed ASAP\n. Fixed by @steffengy\n. @serg-deep \nThis bug was closed after PR's (fix for bug's subject) was merged\n\nNow It's bugged in Magic const, report new bug\n. Pong?\n. I think it's not implemented, I will try\n. Implemented, check latest master\n. @steffengy \nThank you for notify ;)\n. @steffengy You are welcome (help with PHP 7 support)\n. Thank you @mruz \n. Seems to be okey\nThank you\n. Closed via Duplicate\n. It's already supported\n. I will close, comment if it's not okey\n. So I think It cant be implemented via Array type declaration is worked in PHP Core\nI mean\nZEND_ARG_INFO_ARRAY\nAnd this error\n\nPHP Catchable fatal error:  Argument 1 passed to %%%::method000() must be of the type array, %%% given in\nIs caused from Core before php function will be called\n. cC @serg-deep\nCan you review it?\n. Hm\n\n. @xutongle \nIt's a joke, not a problem\n. @xutongle\nIs it work for you?\n. Pull it please again\n. @steffengy \nNo progress\nWill be perfect, if you will implement it ;)\n. > manually update it\nSteps before releases\n- Generate parser\n- Bump version in core\n- Release new tag\n. Will close issue, via implemented by @steffengy \n. Heh, thank you\n. For Phalcon 2 I am going :+1:,\nbut for development of Zephir\nSee what's changed in latests commits (i mean regenerated code with new optimization) is rly needed\nI think We need to create unchanged tracker for CI to prevent not regenerated sources from commits\n. Did you recompile a parser?\n. @steffengy \nCan you please create PR with latest regenerated parser?\n. Seems to be okey, will close\n. I think memory was leaked\nCan you run this script under valgrind with PHP CLI SAPI?\nsh\n$ valgrind php script.php\nAnd fix bug report please\nhttps://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#bugs\n. It's not possible to detect bug without code\n. It's not implemented, I will fix it\n. Good job, thank you \n. thank you\n. cC @andresgutierrez \n. ping @andresgutierrez\n. https://github.com/phalcon/zephir/blob/master/ext/kernel/operators.h#L67\n. Oh, Sorry my miss\n. refs https://github.com/phalcon/zephir/pull/861\n. Thank you, for bug reporting ;)\n. I didnt fix it\n$compilationContext:\nhttps://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L1786\n. @tmihalik \nNot a problem, just w8  a patch\n. cC @andresgutierrez Can you please review and merge this?\n. @steffengy will create more tests, in next PR\n. \u0441\u0421 @steffengy \n. @steffengy \nAt all, you fixed it, good job :+1: \n. Thank you, appreciate you work ;)\n. Thank you\n. need a small review cC @andresgutierrez \n. refs https://github.com/owl-framework/owl/commit/f9b65a95338e2b902dc9fa759209e0336523e718\n. Thank you\n. Awesome, good job :+1: \n. cc @andresgutierrez \n. :-1: \nUse c language layer for parser(s) and optimizer(s) to work with it\n. Thank you\n. ping @kjdev \n. Seems to be a bug\n. I will implement it in 1 hour\n. @valVk :smiley_cat: Not a problem\n. I think warning was caused by \\Class_From_Elsewhere does not exist\nYou need to use prototype with autoload for it class\nCan you show full compiler exception?\n. ping @Stormwing \n. Thank you\n. Thank you\n. Seems to be okey\n. Can you add a test case for it? (use super global) to see warning\nThanks\n. Thank you, but I am going to suggest\nAdd = null by default to allow pass null values when We disable this optimizer\n. Thank you\n. Thank you\n. Thank you :+1: \n. Thanks @andresgutierrez This error was caused by redis ext...\n. It's caused by zephir_fetch_parameters\nhttps://github.com/phalcon/zephir/blob/master/ext/kernel/main.c#L345\nFor example we can use it in strict mod and in not strict mod use similar function without this checks\ncC @andresgutierrez \n. @valVk What does it mean static var? Maybe const?\n. @steffengy o0, thanks\n. ping @andresgutierrez \n. Sqrt is called from PHP Core by ZEPHIR_CALL_FUNC, It's a bug. I will create Math Optimizers...\n. @steffengy I am working for full math optimizers now\n. About sqrt Optimizer https://github.com/phalcon/zephir/pull/949\nIn test branch Zephir now generates \nhttps://github.com/ovr/zephir/blob/d3732e965263158e541c72db57ee4673d844db5e/ext/test/geometry.zep.c#L95\n```\nzval x1_param = NULL, y1_param = NULL, x2_param = NULL, y2_param = NULL;\ndouble x1, y1, x2, y2;\nzephir_fetch_params(0, 4, 0, &x1_param, &y1_param, &x2_param, &y2_param);\nx1 = zephir_get_doubleval(x1_param);\ny1 = zephir_get_doubleval(y1_param);\nx2 = zephir_get_doubleval(x2_param);\ny2 = zephir_get_doubleval(y2_param);\nRETURN_LONG(sqrt(((((x1 - x2)) * ((x1 - x2))) + (((y1 - y2)) * ((y1 - y2))))));\n```\nWith sqrt optimizer\n0.35381698608398 // Zephir run\n0.34931993484497 // Zephir Andres run code\n0.38261699676514 // Zephir static\nNow without sqrt optimizer\n0.6163969039917  // Zephir run\n0.61504697799683 // Zephir Andres run code\n0.65234708786011 // Zephir static\nI will work on all math optimizers, all variants I mean variable input, static value input and etc\nPHP 5.6.6 (cli) (built: Apr  6 2015 15:03:58) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2015 Zend Technologies\nAt all I think\n\nIt's a trap\n\n\nhttp://coub.com/view/573hq\nhttps://youtu.be/HmsKhOzkfng?t=9s\n. For native PHP\nphp\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n0.68999695777893\n0.69558095932007\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n0.74488401412964\n0.75124001502991\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n0.74855613708496\n0.76589107513428\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n0.75789093971252\n1.2065131664276\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n1.2144310474396\n0.71098494529724\n ovr \ue0b0 ovr \ue0b0 ~ \ue0b0 projects \ue0b1 zephir \ue0b1 zephir \ue0b0 948_issue \ue0b0 $ \ue0b0 php 2.php \n0.6937518119812\n0.71211791038513\nSlow...\n. ping @forx \nCan you tests latest master?\n. @andresgutierrez \nSorry for the long delay, I'll complete this PR ASAP\n. Thank you\n. But at all we need to copy all\n```\nPHP Warning:  file_get_contents(/home/ovr/projects/zephir/zephir/Library/../ext/clean): failed to open stream: No such file or directory in /home/ovr/projects/zephir/zephir/Library/Compiler.php on line 1301\nPHP Stack trace:\nPHP   1. {main}() /home/ovr/projects/zephir/zephir/compiler.php:0\nPHP   2. Zephir\\Bootstrap::boot() /home/ovr/projects/zephir/zephir/compiler.php:21\nPHP   3. Zephir\\Commands\\CommandAbstract->execute() /home/ovr/projects/zephir/zephir/Library/Bootstrap.php:200\nPHP   4. Zephir\\Compiler->install() /home/ovr/projects/zephir/zephir/Library/Commands/CommandAbstract.php:71\nPHP   5. Zephir\\Compiler->compile() /home/ovr/projects/zephir/zephir/Library/Compiler.php:999\nPHP   6. Zephir\\Compiler->generate() /home/ovr/projects/zephir/zephir/Library/Compiler.php:893\nPHP   7. Zephir\\Compiler->createConfigFiles() /home/ovr/projects/zephir/zephir/Library/Compiler.php:850\nPHP   8. file_get_contents() /home/ovr/projects/zephir/zephir/Library/Compiler.php:1301\nZephir\\Exception: Clean file doesn't exist\nat Library/Compiler.php(1303)\n0 Library/Compiler.php(850): Zephir\\Compiler->createConfigFiles('test')\n1 Library/Compiler.php(893): Zephir\\Compiler->generate(Object(Zephir\\Commands\\CommandInstall))\n2 Library/Compiler.php(999): Zephir\\Compiler->compile(Object(Zephir\\Commands\\CommandInstall), false)\n3 Library/Commands/CommandAbstract.php(71): Zephir\\Compiler->install(Object(Zephir\\Commands\\CommandInstall))\n4 Library/Bootstrap.php(200): Zephir\\Commands\\CommandAbstract->execute(Object(Zephir\\Config), Object(Zephir\\Logger))\n5 compiler.php(21): Zephir\\Bootstrap::boot()\n6 {main}\n```\n. Thank you\n. Before\nself::f()          2.245\nself::f() -> true  2.285\nNow\nsh\nself::f()          2.165\nself::f() -> true  2.218\n. Valgrind\n@andresgutierrez \n==16185== Conditional jump or move depends on uninitialised value(s)\n==16185==    at 0x7348D1: zend_std_get_static_method (in /usr/bin/php5)\n==16185==    by 0x753BBE: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B3CDB: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B3CDB: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==  Uninitialised value was created by a stack allocation\n==16185==    at 0x734850: zend_std_get_static_method (in /usr/bin/php5)\n==16185== \n==16185== Conditional jump or move depends on uninitialised value(s)\n==16185==    at 0x6F91B3: zend_lookup_class_ex (in /usr/bin/php5)\n==16185==    by 0x6F9882: zend_fetch_class_by_name (in /usr/bin/php5)\n==16185==    by 0x757518: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B507D: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B3CDB: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==  Uninitialised value was created by a stack allocation\n==16185==    at 0x6F8BE0: zend_lookup_class_ex (in /usr/bin/php5)\n==16185== \n==16185== Conditional jump or move depends on uninitialised value(s)\n==16185==    at 0x73443E: ??? (in /usr/bin/php5)\n==16185==    by 0x754517: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B507D: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x7B3CDB: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==  Uninitialised value was created by a stack allocation\n==16185==    at 0x734340: ??? (in /usr/bin/php5)\n==16185== \n==16185== Conditional jump or move depends on uninitialised value(s)\n==16185==    at 0x73443E: ??? (in /usr/bin/php5)\n==16185==    by 0x754FA7: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x6F8809: zend_call_function (in /usr/bin/php5)\n==16185==    by 0x71FF46: zend_call_method (in /usr/bin/php5)\n==16185==    by 0x5E9C69: zif_spl_autoload_call (in /usr/bin/php5)\n==16185==    by 0x6F6AD9: dtrace_execute_internal (in /usr/bin/php5)\n==16185==    by 0x9EF9775: xdebug_execute_internal (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1553)\n==16185==    by 0x6F8948: zend_call_function (in /usr/bin/php5)\n==16185==    by 0x6F9145: zend_lookup_class_ex (in /usr/bin/php5)\n==16185==  Uninitialised value was created by a stack allocation\n==16185==    at 0x734340: ??? (in /usr/bin/php5)\n==16185== \n==16185== Conditional jump or move depends on uninitialised value(s)\n==16185==    at 0x6F91B3: zend_lookup_class_ex (in /usr/bin/php5)\n==16185==    by 0x6F9882: zend_fetch_class_by_name (in /usr/bin/php5)\n==16185==    by 0x757F11: ??? (in /usr/bin/php5)\n==16185==    by 0x744B8F: execute_ex (in /usr/bin/php5)\n==16185==    by 0x6F6977: dtrace_execute_ex (in /usr/bin/php5)\n==16185==    by 0x9EF8CFB: xdebug_execute_ex (/build/buildd/xdebug-2.2.6/xdebug-2.2.6/xdebug.c:1439)\n==16185==    by 0x70936F: zend_execute_scripts (in /usr/bin/php5)\n==16185==    by 0x6A511A: php_execute_script (in /usr/bin/php5)\n==16185==    by 0x7B6AEF: ??? (in /usr/bin/php5)\n==16185==    by 0x463A2C: main (in /usr/bin/php5)\n==16185==  Uninitialised value was created by a stack allocation\n==16185==    at 0x6F8BE0: zend_lookup_class_ex (in /usr/bin/php5)\n==16185==\n. @andresgutierrez Can you help with fixing it?\n. Nice work :+1: \n. :+1: \n. I think we need tests on it\n. Nice :+1: \n. Thank you\nAwesome work :cat: \n. Thank you\nNice work :+1: \n. @baszczewski \nhttps://travis-ci.org/phalcon/zephir/jobs/65291681#L2132\n. ping @andresgutierrez \n. @andresgutierrez \nLogin in https://scrutinizer-ci.com/ and add project from github phalcon/zephir\n- check php project\n- disable phpunit tests on it\nNext add badge to the project to see project's metrics\n. @andresgutierrez \nBadge*\nFor example\n\n. ping @andresgutierrez \n. Thank you\n. I can't reproduce it...\nCan you help with it?\n. Seems to be fixed\n. > Exception: Cannot resolve constant\n@mruz \nIt's not possible to get this error, Did you update Zephir to latest master?\nI tested \nzep\n//works\nconst STAGE = self::STABLE;\n//works\nconst STAGE = Version::STABLE;\nAttention: ice/framework builds is not working correctly\nhttps://travis-ci.org/ice/framework/jobs/68460844#L411\n. @steffengy \nI was working on different PCs, and It's takes more than 1 hour....\nAnd I reviewed it per commit via 155 files changed :)\n. ping @andresgutierrez \n. ping @andresgutierrez \n. ping @andresgutierrez \nCan you review?\n. ping @andresgutierrez \n. ping @andresgutierrez \n. @steffengy +1 :beer: \n@coollider \nhttps://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#bugs\nWhen submitting bugs to the issue tracker make sure your issue includes:\n- Code to reproduce the bug\n- Your environment: OS, compiler\n- Zephir version, if your version is outdated - try updating the latest version\n. @steffengy \nGood work :beer: :cake: \n. @steffengy \nstay calm, it's notice ;)\n. @KorsaR-ZN \nCan you please fix the PSR2 errors?\nhttps://travis-ci.org/phalcon/zephir/jobs/73762830#L2694\n. ping @andresgutierrez \n. Not a problem, i will add it\n. Thanks\n. @andresgutierrez It's not needed,\nI suggest to use development for BC changes like main future PHP 7\n. It's not needed to freeze master,\nFor example I can merge master to develop....\n. @andresgutierrez \nMaybe it's time to give write access to @steffengy ?\nHe can works in development branch\n. @steffengy \nWrite access is needed\nYou can push PHP 7 changes directly to development branch\n. It's not implemented in parser \n. Will do it tomorrow\n. Started, I am working on this problem now\nWill create optimizer for Zephir\nAnd NFR for PHP core\n. refs https://github.com/php/php-src/pull/1489\n. Can you push a test for it?\n. ping @andresgutierrez \n. Thanks @andresgutierrez \n. Ping @andresgutierrez \nOMG, Give him write access!\n. @andresgutierrez OMG, without your review? Sometime it's needed 1000500 pings(s) to get your attention\nYou can cancel my contributor access, what is a problem?\n[22:28:56] Dmitry Patsura: Hey!\n[23:21:10] Dmitry Patsura: https://github.com/phalcon/zephir/pull/1053 Can you give him a write access?\n[23:21:35] Dmitry Patsura: @steffengy is rly cool guy, and him aimed to help Zephir with PHP 7 support\n \u043f\u044f\u0442\u043d\u0438\u0446\u0430, 21 \u0430\u0432\u0433\u0443\u0441\u0442\u0430 2015\u00a0\u0433.\n[0:58:10] Andres Gutierrez: he said he doesn\u2019t want him be added as collaborator\n \u0441\u0443\u0431\u0431\u043e\u0442\u0430, 22 \u0430\u0432\u0433\u0443\u0441\u0442\u0430 2015\u00a0\u0433.\n[20:04:40] Dmitry Patsura: Please give him\n[20:04:42] Dmitry Patsura: It's needed\nHow many time is needed to explore you (to give him access)?\n10, 100, 1000?)\nLike a big* problem to create 2.1.x branch in Phalcon\n. > You don't have to do that, I'll review things when I have time whatever you ping me or not. I can't understand that anxiety of merge things for versions that aren't soon to be released.\nSometimes you are not interested to get attention about PR\nYou can merge 10 another PRs\nBut it's not a problem\nIt takes 1 m to give him write access\nbut think about this a little be more\n@steffengy \n- good developer\n- aimed to write PHP7 support\nNow @steffengy is working on PHP7 and It's your time to help him with write access, question and etc\nWhy? Because you are a maintainer\nGood maintainer = good manager + good developer\nnot a good developer + good manager...\n\nFor the 70th time, Why do I have to do things just because you want it?\n\nhttps://github.com/phalcon/cphalcon/issues/10759\nI explain everything about\n- Explanation\n- Explanation about semver\n- 2 big examples about interface BC and why we need to use minnor version not patch\nIf you are using semver number please obey it\nI spent time on it, to explain\nIt's rly simple to do\ngit checkout -b 2.1.x\ngit push origin 2.1.x\nMaybe, you hate me? What is a problem? Say it to me\nBut create branch if it's needed\nAnd after 1005000 messages you do it, omg, impossible\nI will give you :beer: \n\nRegarding copy-paste a private conversation here, It's too unprofessional.\n\nSo it's an amazing private conversation without any relation about open source project, rly? Maybe it's time for NDA?)\nMaybe I am wrong, sorry me\n\nIt's too unprofessional.\nYeap, but it's not private via I've send this message to get yours attention about this\n\nYou ignore me about organization for zephir\nIf you are interested to be a king of repository\n\nYou can cancel my contributor access, what is a problem?\nI'll do\n\n\nI will use Zephir organazation\n. > @Green-Cat Your PRs were submitted to master branch which have code freeze. However, @ovr says that it does not have code freeze because he doesn't agree which sends contradictory messages. Please submit them to development and we're good to go.\nSo it's impossible to do parallel worflow on 2 branches\nSee PHP\nMaster - development\nPHP 5.6, 5.5 branches\nWith my worflow, it's possible to do minnor and patch releases on master without php 7 support\nWith your freeze idea it's not possible, and stop stable releases\nBecause you will w8 development as stable, 3-5 month\nMaybe it's time for you to read about git merge & git cherry-pick?\n. @andresgutierrez \nVia PHP7 is not full supported or something can be broken\n\n3-5 month\nassumption, I dont know how many time it's needed to develope and test\n\nFor example I will do a refactroing an broke something in development\nMaybe you would like to say tests, okey\n- [ ] Zephir compiler is not tested\n- [ ] C output is not tested\n- [X] Unit tests on Zephir ext with 20% coverage....\n. Not a problem it's a development branch :+1: \n. @fezfez \nI was kicked by @andresgutierrez, he is the owner\nAsk him about it\n. Working on it!. Problem is here\n\nBecause, Compiler is trying to optimize conditions  for (for/elseif/if) in IfStatement\n\nbut it write code before first if. @steffengy \n. @steffengy \nCurrent CI fails is not releated to this PR\n. ping @steffengy\n. For now Zephir is using this methods from Backed\nFor most cases $backend property defined as BaseBackend\nAnd this methods is needed...\n. Hey @Izopi4a \nCan you try https://github.com/phalcon/zephir/pull/1261, seems this will fix this issue on PHP7\nThanks\n. @Izopi4a Can you open a new issue?\n. ping @andresgutierrez \n. LGTM, but I cannot explain who will use it in Zephir :). @Jurigag Will be cool to move this project-subtree to another project, and add tests\nBut in near feature, after porting it to PHP7\n. > Also is it even worth to trying to do this runtime thing with JIT coming to php? I mean will there be any performance reason to use it, or just for fun?\nFor Fun, it's an idea\n. i doesn`t think so i use this class only in stub method not all for class\n. php is not c\n. w8 @phalcon comment\n. There is no difference, copy pasted from micro bench.php in Zend folder of php-src\n. 1 no matter\n2 not needed.\n3 algorithm without loop would be faster!\n. @nkt this is not a bug. I wrote it specifically\n. \u0442\u043e\u0433\u0434\u0430 \u0441\u0432\u0438\u0442\u0447 \u043a\u0435\u0439\u0441 \u043f\u0440\u043e\u0439\u0434\u0435\u0442 \u0438 \u043f\u043e\u0439\u0434\u0435\u0442 \u0434\u0430\u043b\u044c\u0448\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c\n. np\n. You said \"delete stubs it is not needed in repo\" :)))\nzep\n    /**\n     * Bla bla my method\n     */\n     public function method() {}\nand see output without patch\nzep\n/**\n  * * Bla bla my method\n */\n. https://github.com/phalcon/zephir/issues/475\n. Will move this hardcode to config.json\n. ?\n. I think nb project is not needed\n. I see this\nFixed via file name\n. It's needed to work with method\ngetMethodFirstParameter\nhttps://travis-ci.org/phalcon/zephir/jobs/54495259#L1597\n. Can you fix it?\n. Can you fix? I mean spaces\nWe are using tabs for C-code\nhttps://github.com/phalcon/zephir/blob/master/.editorconfig#L15\n. @sergeyklay \nJust give me 1s\n. @sergeyklay \nIt's notice that it can breaks some applications but for now it's working and most of all projects are using it\nFor example I am using inline plugin for phpstorm and atom for it\n\n\nReview sf2\nhttps://github.com/symfony/symfony/search?utf8=%E2%9C%93&q=%7B%40inheritDoc%7D\n\nor Zf2 component\nhttps://github.com/zendframework/zend-paginator/search?utf8=%E2%9C%93&q=%7B%40inheritDoc%7D\n\n. Original zend_function_call in PHP 7.1 are fixing EG(current_execute_data)->This without fcc->object and this thing can be \"null\", I think fcc->object is needed only for callable. Comment about for this optimizer about method\n\nTransforms calls to method \"toHex\" to sprintf('%X') call\n\nLooks like should be changed, or removed because it's pretty simple. @sjinks Why it was = {0} by default? Maybe you will give a cool explanation, because I am rly interested in this. [Why I change]\nIn PHP 7+, zend_hash_get_current_data_ex accept only 2 params and return value by position, check should != Null (null because C lang doesnot support nullptr and NULL is (void) *0)\n. [Why I change]\nBecause PHP7 introduce zend_string and php_stream_copy_to_mem return zend_string. [Why I change]\nZSTR_LEN is similar to contents->len, (len is a field of zend_string structure). @sjinks What flag should I use? PHP_STREAM_COPY_ALL is it okey?\nThanks. ping @sjinks, can you help me\nShould I change zend_uint to uint, or it's wrong?\nThanks. ",
    "racklin": "@sjinks You are welcome.\nHere is another PR for zephir help, i Added ASCII Art Logo like 'Composer' for Zephir. #16 :)\n. @mobli Just like npm / composer do, NOT everybody happy to install it to /usr/local/bin.\nSo with origin zephir shell script it will auto detect ZEPHIRDIR enviroment is set? \nIf set , using user's ZEPHIRDIR (Like yours).\nIf not set, using the current shell script's parent path.\nIt's behavior like yours, but more flexible. right?\nAnd you are welcome.\n. @mobli @phalcon  zephir init <namespace> will create subdir from current directory with namespace name and put the ext and config.json to subdir , that was wrong structure.\nAnd, zephir init with default namespace, that don't create  subdir.\nso, with this pr, zephir init will not initial workable project structure . \n. @phalcon Original structure is good. Like Composer.\nUser create there own project directory, and init only create config.json , ext and [namespace] subdir.\nBut now, zephir init [namespace] has difference behaviors, one will create nest subdir, and the another not ..\n. @phalcon And https://github.com/mobli/zephir/commit/1b3b620787aa81a9abf7bbd0e0719e9595a7e08b#diff-803edc27a0dcbb56c0d1a6ac3128a3a4L79 \nThe original code using ZEPHIRDIR ENV for running zephir-parser, but with this patch, the \nzephir-parser must in running search $PATH or /usr/local/bin . Original is better.\n. @phalcon @mobli I am very sorry that i am review  the wrong commit-id.\nThe zephir-parser using ZEPHIRDIR ENV that @mobli had fixed in commit  894022c.\n. @mobli My original question is the new zephir init project structure changed , and have difference behaviors. \nSo, i suggest to consider like Composer and npm,  only create config files in current directory. And zephir init namespace only setting specified namespace to config.json and created specified namespace sub-directory.\nThe other question is my old extension can't compile due to this , so I reviewed CompilerFile.php but with the wrong commit-id.\n@phalcon @mobli Sorry again!\n. @phalcon I agree.\nIn the most case, Zephir user should use Optimized Function Calls we provided.\nAnd we will implementing populate and general function calls to Optimized c-function.\nZephir is a DSL and Generate to c . \nSo i think it should have an ability to calling 3rd c libraries.\nIt will make Zephir more flexible and powerful.\nFor instance\n1. Declare the interfaces for c libraries - like VALA .\n2. Embedded codeblock to generated target files. like XPIDL, CoffeeScript.\n-  CoffeeScript Embedded Javascript - http://coffeescript.org/#embedded\n  And just like CoffeeScript Document says:\n\nHopefully, you'll never need to use it, but if you ever need to intersperse snippets of JavaScript within your CoffeeScript, you can use backticks to pass it straight through. \n\nGo back to my example cblock.zep https://github.com/racklin/zephir/blob/d6b1e3651151c0e1c66cd58ff024be967b190ab0/test/cblock.zep\nfibonacci(40) is very slow in PHP - benchmark [http://fengmk2.github.io/blog/2011/fibonacci/nodejs-python-php-ruby-lua.html]\nBut Zephir with CBLOCK, we can implement simple c-function fibonacci in zephir CBLOCK. and calling in zephir . NOW with Zephir extension, fibonacii(40) only used 0.8s in my MBP.\nAnd the other example is Zephir currently not support require php file.\nWith cblock , we can #include \"kernel/require.h\" and calling zephir_require or zephir_require_ret in cblock.\nSo, with Optimizer FunctionCall + CBLOCK will make Zephir more flexible and these two features were complementary not mutex .  \nFinally, You CAN calling c-function, implements c-function in CBLOCK, not mean You SHOULD.\n:smile: \n. @phalcon I agree and understand your concerns.\nPlease consider that CBLOCK or (c-code with comments) is part of Zephir features, It make Zephir flexible.\nThe most projects(and Phalcon 2.0) developers SHOULD NOT using CBLOCK to implements or calling c-function.\nBut sometimes or special extensions,they CAN use CBLOCK and that is helpful.\nAs list before, XPIDL , CoffeeScript support embedded target code modifiers.\nGoogle's Go  (http://golang.org/) also have a c-code embedded by comments, called \nc-go . (http://golang.org/cmd/cgo/) .\nThanks.\n. @phalcon Hi, I have rebase and push again. Thanks.\n. :+1: \n. @phalcon Hi, I have fixed and resent PR!  Thanks.\n. @phalcon Finally , build passed :)\nIs this PR can be merged now?\n. @phalcon Sure!  ;) \n. @phalcon rebase done! \n. @phalcon ;) Next optimizer will be substr to make all test/router.zep use all internal functions, NO userland PHP function call!\nMaybe zephir router will faster then https://github.com/c9s/Pux :+1: \n. @phalcon added opterators header. \n. @jaimz22  Hi ,  PregMatchAllOptimizer extends from PregMatchOptimizer class, and it should be autoload by PHP's class loader.\nWhich PHP version you used? \nI should be Ok, because Travis-CI 5.3, 5.4, 5.5 tests passed\nhttps://travis-ci.org/phalcon/zephir/builds/17284635\n. @jaimz22 Sorry! my mistake. Maybe i should review all codes. \n@phalcon We should require or include manually if Optimizer not extends from OptimizerAbstract ?\nOptimizers not register by spl_autoload mechanism ?\n. @phalcon OK! I have send new PR #94 for ltrim and rtrim, that have the same issues.\n. @phalcon I am sorry that  I found typos shift_left_function / shift_right_function of PHPAPI functions . \nAnd @zaets28rus 's  https://github.com/zaets28rus/zephir/commit/dee51bb1630519a7d7ff707730fb85451cb1d631 fixed it \nPlease merge it to fixes. Thanks.\n. @phalcon :+1: \n. @tamaranga Hi, I can't reproduce this issue.\ncould you using my commit branch and regenerate c code.\nThe PREG_PATTERN_ORDER must be 1, and PREG_SET_ORDER must be 2 in ext/test/pregmatch.c \ncommit: https://github.com/racklin/zephir/commit/138aa52753cdbb43703a1d82b75c9f1d3874c83b\nbranch: https://github.com/racklin/zephir/tree/bugfix/144 \n. @tamaranga hmm.... strangely.\nMy OUTPUT is different. \n```\nArray\n(\n    [0] => Array\n        (\n            [0] => test1\n            [1] => test2\n        )\n[1] => Array\n    (\n        [0] => test1\n        [1] => test2\n    )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => test1\n            [1] => test1\n        )\n[1] => Array\n    (\n        [0] => test2\n        [1] => test2\n    )\n\n)\n```\nCould you tell me which pcre and php version you are using???\n. I vote B.\nStable Zephir and Stable Phalcon2 and implemented more userland php functions to c for better performance.  \n. @phalcon Here is the example project that calling libcurl 's curl_version from zephir.\nUsing zephir to writing php extensions are really quite easy and fun... \nhttps://github.com/racklin/zephir-testcurl\n. @IngwiePhoenix I am contributor of cblock and extern-libraries supports.\nI am using Zephir to writing PHP Extensions that wrapper exists linux system calls and APIs.\nZephir supports Optimizers could do  the same thinks  to generate target c codes, and easier debugging for Zephir, you must consider it first.\nAnd cblock only to be used at small codes, sometimes less than 10 lines for including c headers / \ndefine c struct , or declare c variables. \nZephir Compiler (zep to c) can not analyse the code inside c-blocks, the warnings and errors are throws \nfrom Compiler (GCC / LLVM) ,but sometimes with 3rd libraries, there are over 100 lines warnings throws from GCC , that's why i say not easier for debugging.\nBut, if you are C guys , this was piece of cake .\nHere is the other one example of CURL php-extension written by Zephir (https://github.com/racklin/zephir-testcurl)\n. @phalcon \nCould we consider add a document for cblock and extern-libraries supports and with warning messages there are extreme features. \nI can't found where to send document PR. \nFor cblock syntax: https://github.com/phalcon/zephir/pull/21\nFor extern-libraries syntax: https://github.com/phalcon/zephir/pull/636 \nThanks . \n. @phalcon @IngwiePhoenix  cblock idea is inspired by golang cgo http://blog.golang.org/c-go-cgo\n. Yes. Zephir-Lang supports using c libraries. \nPlease reffer http://docs.zephir-lang.com/en/latest/config.html#extra-cflags\n. ",
    "mobli": "Hi there,\nThanks for the feedback and questions.\nWhat the ./install script is doing with my mod is to simply install zephir in /usr/local/bin, which should be in your path. the /usr/local/bin/zephir script knows where to find zephir, no need for environment variables.\nTherefore, you can just type commands as such:\ncd /where/ever\nzephir init myext\ncd /where/ever/myext\n\nzephir generate\nzephir compile\nzephir install\nWith all your code in /where/ever/myext, the extension will be built into /where/ever/myext/ext.\nGood idea using basename(getcwd()) as default namespace.\nDecoupling zephir itself from the extension you're building is much easier - try building a new extension as it stands, it's hard :-)\n. It doesn't really matter to me how it's done, as long as I can decouple zephir from the work I'm doing now.\nSo for instance, I might install zephir in /opt but work in ~/projects. I don't want to have to change my .profile file every time I add a new tool, which is what I need to do to make ZEPHIRDIR sticky.\nI can the mods as you requested so as not to install zephir in /usr/local/bin because I really need that pull request to go through, but I'd prefer if you could reconsider your position on that. Please let me know ;-)\nThanks\n. @racklin I've restored the install process as you requested. I've simply added an option on the install script that will copy zephir to /usr/local/bin for those who want (like me :-).\n. Thanks! That was really quick, fantastic!\n. It works like a charm in fact:\n1) Install Zephir:\ncd /opt\ngit clone https://github.com/phalcon/zephir.git\ncd zephir\n./install -c\n2) Create a new project:\ncd /projects\nzephir init newproject\ncd newproject\nor\ncd /projects\nmkdir newproject\ncd newproject\nzephir init\nconfig.json is created in /projects/newproject.\nWrite your code in /projects/newproject and subdirectories.\nThen, in /projects/newproject:\nzephir <generate|compile|install>\nA new directory is created /projects/newproject/ext. The new extension is built in there and installed if required.\nIt's closer to how the ext_skel utility works from PHP than to composer and it's much more comfortable this way. Also, note how the test included with Zephir is self contained: it doesn't pollute the ext directory anymore.\n. @racklin @phalcon \nFrom @racklin:\n\"The original code using ZEPHIRDIR ENV for running zephir-parser, but with this patch, the \nzephir-parser must in running search $PATH or /usr/local/bin . Original is better.\"\nThat's not actually how it works.\nIf you install zephir the normal way using ./install then you will have to set the ZEPHIRDIR as before.\nIf you install zephir with ./install -c then you get the behaviour you describe.\nFor the rest, it stayed the same.\nIt's a shame you reverted these additions, a lot of work went into pleasing you, @racklin.\n. I fact, I'm re-reading all the comments from @racklin and I'm very surprised by the rather aggressive reaction to what was a very legitimate modification. I even went out of my way to make sure that the old behaviour was preserved while at the same time making things clearer.\nWay to go! And I thought open source was about improving things through discussion...\n@phalcon I hope you'll give my changes a thorough review anyway and try to understand the changes. Good old ZEPHIRDIR was still in use for those who wanted, while making a cleaner decoupling between zephir and the extensions you build. Why so much resistance is beyond me.\n. @racklin Thanks, but you're not saying if it's good for you or not, @phalcon has already reverted all the changes so he will have double the work to do now to restore them...\n. @phalcon I'm sorry, of course I didn't realise that ir would impact your work on Phalcon 2. Zephir is still version 0.2.1a after all :-)\nShould I provide a fix for full backward compatibility, would you consider reintegrating my changes?\nI'll do my best to minimise your efforts, I promise, including trying compiling Phalcon 2 myself before submitting a pr.\n. Yes, specifically on line 86:\n            if (isset($variable['expr'])) {\nchanged to:\n            if (isset($variable['expr']['value'])) {\nsince on line 87:\n                $defaultValue = $variable['expr']['value'];\nIn declarations without a default value then $variable['expr'] is defined but $variable['expr']['value'] is not.\n. Just let me know how you want it, I'm used to classes being named this way, similar to spacing or the way Doctrine do it.\nIf you feel more comfortable the other way round, for me it's same same.\nI didn't change the file names though.\n. @phalcon: Thanks! You're doing an incredible job. Every time I look at your code it blows me away!\nFor your information, I'm currently looking at using Zephir as one of our main development tools in Mobli.\nWhat is the best way to exchange ideas and help you take it forward?\n. You mean that new self() in Zephir behaves like new static() in PHP?\n. I understand, thanks for the answer.\n. I have a question regarding the use of namespaces. I've noticed that you always remove the leading \\ before looking up class names (specifically, in Library/Expression.php line 238). Is there a reason? Why not using an absolute namespace instead? Could that not lead to confusion in the future?\n. ",
    "tyler-sommer": "User chiming in.\nThe change in name of the commands is strange. It is fairly standard to suffix the class name rather than prefix it: HelpCommand instead of CommandHelp. This is even seen in other parts of zephir: \nhttps://github.com/phalcon/zephir/tree/master/Library/Detectors\nhttps://github.com/phalcon/zephir/blob/master/Library/Builder/VariableBuilder.php\nAdditionally, I think the filenames should be the same as the class name contained. The CompileCommand class file should be called CompileCommand.php, or if the new naming sticks, CommandCompile.php.\n. ",
    "mcuadros": "Same behaviour there :(\n. @jaimz22 we are testing zephir too and i think that depends a lot of what are you testing. \nOn our case, we have ported a little part of our framework and our results are pretty different from yours, calling this method:\nhttps://github.com/mcuadros/zephir/blob/master/mongator/document/zephirdocument.zep#L142\nIn 10000 iterations, we have improvement  in times between 20% to 40%\n. ",
    "WooDzu": "This could've been fixed in the recent PR https://github.com/phalcon/zephir/pull/85\n. That's a very good point @lukaszlach. I think whichever option is easier/possible to implement would make Zephir a nice competitor to Zend and IonCube.\n. Does anyone have any experience with obfuscating to suggest a solution?\n. I think the idea is very good. It solves the main issue.\nHaving said that, compressed strings will keep type of the compression in the first few bytes of the string (eg. 1F8B0808 for gzip) leaving an easy way for auto cracking and extracting them.\nStill very valuable note\n. +1. Note there is a solution file for vc9 in win32 folder, though i havent tried it yet I hope vc11 should pick it up. It's however 2 years old and might've been added before json-c + re2c were introduced into zephir. In the ideal world there would be a configure.js script in zephir like for phalcon 1.3 so it can be build under Visual Studio Express command line tools which is free\n. Holy smokes!\nI've tried to give it a test but I'm not sure how to compile it without a Makefile.\nCould you give some instructions? I've been using nmake + VC11 x86 on Windows 7 for Phalcon 1.2 and 1.3\n. That worked great for a few home-grown Zephir extensions. Nice work and +1\nUnfortunately, it couldn't get on with Phalcon 2.0.0\nAlso when building extensions as shared --enable-utils=shared I faced linking issues:\n```\nEnabled extensions:\n| Extension  | Mode   |\n| ........   | static |\n| utils      | shared |\n\nEnabled SAPI:\n| Sapi Name |\n| cli       |\n\n|               |                          |\n| Build type    | Release                  |\n| Thread Safety | Yes                      |\n| Compiler      | MSVC11 (Visual C++ 2012) |\n| Architecture  | x86                      |\n\nType 'nmake' to build PHP\nMicrosoft (R) Program Maintenance Utility Version 11.00.50727.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\nRecreating build dirs\ninternal_functions.c\n   Creating library Release_TS\\php5ts.lib and object Release_TS\\php5ts.exp\nutils.w32.obj : error LNK2019: unresolved external symbol _zend_new_interned_string referenced in function _zephir_Utils_Greeting_init\nutils.w32.obj : error LNK2019: unresolved external symbol _zval_used_for_init referenced in function _zephir_throw_exception_string_debug\nutils.w32.obj : error LNK2019: unresolved external symbol _compiler_globals_id referenced in function _zephir_function_exists\nutils.w32.obj : error LNK2019: unresolved external symbol _executor_globals_id referenced in function _zend_vm_stack_top\nutils.w32.obj : error LNK2019: unresolved external symbol _zend_compile_file referenced in function _zephir_require_ret\nutils.w32.obj : error LNK2019: unresolved external symbol _core_globals_id referenced in function _zephir_init_global\nutils.w32.obj : error LNK2019: unresolved external symbol _spl_ce_BadMethodCallException referenced in function _zephir_fetch_parameters\nutils.w32.obj : error LNK2019: unresolved external symbol _spl_ce_RuntimeException referenced in function _zephir_create_instance\nutils.w32.obj : error LNK2019: unresolved external symbol _spl_ce_Countable referenced in function _zephir_fast_count\nutils.w32.obj : error LNK2019: unresolved external symbol _basic_globals_id referenced in function _zephir_random_string\nutils.w32.obj : error LNK2019: unresolved external symbol _file_globals_id referenced in function _zephir_file_get_contents\nRelease_TS\\php_utils.dll : fatal error LNK1120: 11 unresolved externals\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\VC\\BIN\\cl.exe\"' : return code '0x2'\nStop.\n```\nAny idea what I'm missing?\n. Thanks! This might be a good excuse to give it another try\n. :-1: \nPlease keep support for 5.3 for the reasons phalcon described above.\nI've still got servers running under 5.3 which I can't update but have to maintain.\n. That's great to hear! Thanks for clarification\n. See Null Object Pattern:\nhttp://www.sitepoint.com/the-null-object-pattern-polymorphism-in-domain-models/\nThe principle in Zephir stays the same\n. ",
    "nkt": "Fixed\n. @macnibblet could you please describe your problem?\nPlease add repository link and latest zephir error message.\n. I sent you PR.\nI think you did something wrong, while porting zf from php to zephir.\nTry to add zf tests\n. @ghost please try with the latest zephir version.\n. @ghost Please try with the latest version of Zephir.\n. Zephir using php 5.3+ namespace mechanism. If you use class from global scope add \\ before class name, or export into current scope using use keyword.\n. @kirilltitov is it still relevant?\nIf it is, please describe you issue more, show some more code, update zephir\n. @ovr still relevant?\n. I think you should not blindly to port code from php on zephir. Sometimes you should reorganise statements in method, add likely/unlikely statements, instead of remove $ and add let statements before assigns.\n. @lstrojny :+1:\nI think there is no o need to add new keyword.\nzep\nvar a, b, c;\nlet c = [1, 2];\nlet a, b = c;\n. So, i've added support in parser for syntax like:\nzep\nlet [a, b, c] = arr;\n@phalcon, @ovr, @mruz what do you think about this syntax?\nI've tried to add support for\nzep\nlet a, b, c = arr;\nBut failed.\n. @ovr I agree with your vote, but do u know how to add this in parser?\n. Windows support already added.\nHere is instructions https://github.com/phalcon/zephir/blob/master/WINDOWS.md\n. @gggeek I tried to support this feature, but have some problems.\nFor zephir not enough just load php-code, its require to compile parser. What do you suggests?\n187 there is PR for docs about installation, you can add your ideas about that.\nActually I have just one idea:\n- add zephir self-install command\n- add composer-plugin for installing extensions (I work on this) \n. @phalcon this issue almost solved by #187 \n. @wicaksono Try with the latest zephir.\n//missing means that this feature was not implemented yet.\n. @wicaksono please try with the latest Zephir.\n. @tamaranga I am not sure, but you should show some of the code that causes this behaviour\n. As I know, @phalcon removed preg_match optimiser for now.\n@phalcon am I right?\n. Do you really need stubs of zephir tests in git-repo?\nCommand is very helpful, :+1:\n. @zaets28rus maybe for checking you should to create class just for that? Because tests will be more and more and stubs will be grown up\n. You can use array_push.\nIn my opinion such code can be avoided altogether.\nzep\nvar t, a;\nlet t = [], a = [];\nlet a[] = b;\n// ... some code with a\nlet t[] = a;\n. Update Zephir to the latest version.\n. I think this behaviour could be optimised by splitting checks, args-resolving and method body into inline functions.\nBut it's hard work, so you can add your own C function and calls it from zephir. For now - it's the best solution.\nMy example:\n``` php\n// test.php\nclass Fibonacci {\n    public function calculate($n) {\n        if ($n >= 2) {\n           return $this->calculate($n - 1) + $this->calculate($n - 2);\n       }\n       return $n;\n    }\n}\n$fib = new \\Test\\Bench\\Fibonacci;\n$startTime = microtime(true);\n$fib->calculate(30);\n$total = microtime(true) - $startTime;\necho 'Zephir time: ', $total, PHP_EOL;\n$startTime = microtime(true);\n$fib->calculateNonOptimise(30);\n$total = microtime(true) - $startTime;\necho 'Zephir without C time: ', $total, PHP_EOL;\n$fib = new Fibonacci;\n$startTime = microtime(true);\n$fib->calculate(30);\n$total = microtime(true) - $startTime;\necho 'PHP time: ', $total, PHP_EOL;\n```\n``` php\nnamespace Test\\Bench;\n%{\n    static inline int test_bench_fibonacci(int n)\n    {\n        if (n >= 2) {\n            return test_bench_fibonacci(n - 1) + test_bench_fibonacci(n - 2);\n        }\n        return n;\n    }\n}%\nclass Fibonacci\n{\n    public function calculate(int n)\n    {\n        int result = 0;\n    %{\n        result = test_bench_fibonacci(n);\n    }%\n\n    return result;\n}\n\npublic function calculateNonOptimise(int n) -> int\n{\n    if n >= 2 {\n        return this->calculateNonOptimise(n - 1) + $this->calculateNonOptimise(n - 2);\n    }\n    return n;\n}\n\n} \n```\nZephir time: 0.0059828758239746\nZephir without C time: 23.107372999191\nPHP time: 22.278899908066\nAs you can see php zend-vm may be optimise code inside recursions, but gcc do it better, so until zephir can not split methods - you have to add your own optimisations. Thanks Zephir team, that we have this opportunity.\n. @phalcon may you tag this version as 0.3.5a? https://github.com/phalcon/zephir/commit/b5c6719e0bb58124767d30c9078c0b03469f2904\nOr next commit with stubs-PR merge https://github.com/phalcon/zephir/commit/ae862e360cff4f88ef53fac1491c9dedb67dc72c\n. @phalcon I don't understand why this error occurs.\nThere is no errors on my local machine\n. @phalcon whou! That is very bad code. I don't know what author means, a think switch statement inside first switch should be outside.\n``` php\n$variableVariable = $compilationContext->symbolTable->getVariableForRead($exprCompiledVariable->getCode(), $compilationContext, $expression);\nswitch ($variableVariable->getType()) {\ncase 'variable':\n    $caller = $variableVariable;\n    break;\n\ndefault:\n\n    /* Check if there is a built-in type optimizer available */\n    $builtInTypeClass = 'Zephir\\Types\\\\' . ucfirst($variableVariable->getType()) . 'Type';\n    if (class_exists($builtInTypeClass)) {\n        $builtInType = new $builtInTypeClass;\n        $caller = $exprCompiledVariable;\n    } else {\n        throw new CompilerException(\"Methods cannot be called on variable type: \" . $variableVariable->getType(), $expression);\n    }\n\n}\n```\nMay someone fix it in master, then i merge it\n. @phalcon just look at this code\n``` php\npublic function compile(Expression $expr, CompilationContext $compilationContext)\n{\n$expression = $expr->getExpression();\n\n$exprVariable = new Expression($expression['variable']);\n$exprVariable->setReadOnly(true);\n$exprCompiledVariable = $exprVariable->compile($compilationContext);\n\n$builtInType = false;\nswitch ($exprCompiledVariable->getType()) {\n\n    case 'variable':\n        $variableVariable = $compilationContext->symbolTable->getVariableForRead($exprCompiledVariable->getCode(), $compilationContext, $expression);\n        switch ($variableVariable->getType()) {\n\n            case 'variable':\n                $caller = $variableVariable;\n                break;\n\n            default:\n\n                /* Check if there is a built-in type optimizer available */\n                $builtInTypeClass = 'Zephir\\Types\\\\' . ucfirst($variableVariable->getType()) . 'Type';\n                if (class_exists($builtInTypeClass)) {\n                    $builtInType = new $builtInTypeClass;\n                    $caller = $exprCompiledVariable;\n                } else {\n                    throw new CompilerException(\"Methods cannot be called on variable type: \" . $variableVariable->getType(), $expression);\n                }\n        }\n        break;\n\n    default:\n\n        /* Check if there is a built-in type optimizer available */\n        $builtInTypeClass = 'Zephir\\Types\\\\' . ucfirst($variableVariable->getType()) . 'Type';\n        if (class_exists($builtInTypeClass)) {\n            $builtInType = new $builtInTypeClass;\n            $caller = $exprCompiledVariable;\n        } else {\n            throw new CompilerException(\"Cannot use expression: \" . $exprCompiledVariable->getType() . \" as method caller\", $expression['variable']);\n        }\n}\n\n```\nvariableVariable in second case does not exists. \n. @phalcon That is was my mistake, thanks.\nnow tests passed - should I rebase commits?\n. Ok, but you should add its there: https://packagist.org/packages/submit\n. I see.\nI'll fix it\n. > NOTE: Only scripts defined in the root package's composer.json are executed. If a dependency of the root package specifies its own scripts, Composer does not execute those additional scripts.\nSo we need to add command like zephir self-install or add custom installer\nWhat do you prefer?\n. @phalcon I added a small dialog if zephir-parser not exists:\n```\n$ vendor/bin/zephir \nYou didn't install zephir. Install?\nParser statistics: 112 terminals, 91 nonterminals, 365 rules\n                   744 states, 0 parser table entries, 0 conflicts\nZephir version 0.3.6a\nUsage: \n    command [options]\nAvailable commands:\n    build               Generate/Compile/Install a Zephir extension\n    clean               Cleans the generated object files in compilation\n    compile             Compile a Zephir extension\n    fullclean           Cleans the generated object files in compilation\n    generate            Generates C code from the Zephir code\n    help                Displays this help\n    init [namespace]    Initializes a Zephir extension\n    install             Installs the extension (requires root password)\n    stubs               Generates stubs\n    version             Shows Zephir version\n``\n. @phalcon that is allready great :) You just have to merge it\n. As I understand, zephir recognise variable type and if you do not initialise var as array, zephir generates code, that does it\n. There is no need to maintain two branches (Project has no stable version, just alpha). There is enough to tag all version bumps. I suggests its there #181 \n. Now I tag every release, I think that is enough, for now.\n. @mruz I've added all new tags.\n. #191 include this PR\n. @phalcon I've done\n. Right now - I'm against.\nZephir really good make one thing - it creates php C-extensions. But it could be better!\ninline-keyword, exception-handling, simple c/c++ code-wrapping.\nIf it's a simple library, for example router, string-type library or DI - ok. But if it is a big project, like Phalcon - you inevitably would lose some functionality. Volt template language, for example.\nSo I vote **b**\n. And about other php implementations, I think you means hhvm. I do not sure, but hhvm should has some extension-system, and may be more important translate zephir into hhvm-extension, instead of PHP.\n. I've [translate this post into Russian](http://habrahabr.ru/post/212975/), and create voting. \n. @phalcon for now I changed my opinion. I think we should split Zephir into parser, AST-builder and code-printer. If we do it, we can easily implement any compiler: Zephir -> extension, Zephir -> PHP, PHP -> extension, PHP -> Zephir(very helpful for big projects), PHP -> PHP (5.4 to 5.3), Zephir -> hhvm extension, etc. \n. \u0421ould you format your code? please.\n. @mruz references still not supported. Also I think we will add support for assignments and method's arguments, but not call-time arguments due this behaviour have been removed in PHP.\n. @mruz but that is just one case of references usage, specified in zephir parser :smile: that's why you successfully compiled this code.\n. @mruz of course, because there is no grammar for these cases in parser\n. Actually I think this issue is irrelevant due #609.\n. You should show some code, to be able to reproduce the bug\nAnd maybe OS and compiler names with versions.\n. Maybe you can take access to repository with this code?\nDoes your compiler version is stable?\n. Duplicate of #203 \n. @andrusender do you want to help implement it?\n. @wapmorganncurses_initreturnsvoid.\nAs I remember, you have issues aboutncurses*` functions and they are related with the passing arguments by reference. That is another issue and we know about this problem.\nAm I right?\n. Yes. Because there is no functionality for that code:\nzep\npublic function a(var &b) {}\nMaybe I should close this PR before someone implement this feature?\n. This syntax does not supported, because after else and if expected {.\nSo I suggests just make elseif support. Because supporting statements without brackets will allow you to write code smells.\n. @phalcon is that right way?\nhttps://github.com/nkt/zephir/commit/8433a44c023305ccb9671ee3f3c713b23ecc0b20#diff-dd0577e181bf828c44081dfd4c83c864R1901\nAnd how to add nesting else-if support?\n. @phalcon can you look at https://github.com/nkt/zephir/commit/8433a44c023305ccb9671ee3f3c713b23ecc0b20#diff-dd0577e181bf828c44081dfd4c83c864R1901\nDoes it right way?\n. @phalcon I think this feature could be very useful. For example for set/get snippets.\n. > it would be usefull when all php classes would be written on c++ classes.\nHow it is related?\n. @ovr I don't understand how you suggest connect c++ class and php class.\nAnd C also have native types.\n. @Evgsurf private properties in C++ are private just in compile time.\n. the \"var\" is the reduction from variable, and \"variable\" in Russian is \"\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f/\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439/\u0438\u0437\u043c\u0435\u043d\u0447\u0438\u0432\u044b\u0439/\u043d\u0435\u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439\". Also this is a standard keyword in php, javascript and maybe other in languages.\nSo, :-1:\n. The \"dynamic\" do you mean something different from the \"var\"?\n. What are the advantages?\n\"var\" - is short, understandable, simple, standard keyword.\n. I just now realise that Zephir supports void return type. That is the same as null.\n. Proofs?\nPlease show php and zephir code.\n. Zephir is just a tool. For writing optimized code you need to add their optimizers.\nYou also could help zephir become faster by implementing inline keyword.\n. Duplicate of #188\n. Symfony EventDispatcher implementation of priority is not very good\nYou can use SplPriorityQueue. I've did it there: https://github.com/boostphp/event/blob/master/boost/event/eventdispatcher.zep#L14\n. I think you should rebase instead of merge\n. I vote 2, ref.\nIt's shorter then reference.\nBut what about &? \n. I understand.\nSo I suggests internal\n. There is two ways - add nested namespace into zephir-test extension, or I can show you another project, that use this branch: \nhttps://github.com/boostphp/event/blob/master/config.json#L2\nhttps://github.com/boostphp/event/blob/master/ext/php_boost_event.h#L20\n. @dreamsxin ?\n. You are not right implementing this feature.\nPlease take look at the docs.\n``` php\nnamespace Test;\nclass MyClass\n{\n    protected myProperty;\n    ...\n    public function __toString()\n    {\n        return this->myProperty;\n    }\n}\n```\nAnd it can be shortened to:\nphp\nclass MyClass\n{\n    protected myProperty {\n        ..., toString\n    };\n}\n. @ovr right. That is not zephir mistake - it is how php works. Try to run this code in php:\n``` php\n<?php\nclass Foo\n{\n    public function bar()\n    {\n        $this->foo();\n    }\nprivate function foo()\n{\n    echo 1;\n}\n\n}\nclass Bar extends Foo\n{\n    public function test()\n    {\n        $this->bar();\n    }\n}\n$b = new Bar;\n$b->test();\n``\n. Yes. You are right.\n. Can you post some more code? Personally I don't know class namedStreams.\n. I see. Thanks for this issue.\nDuplicate of #203 \n. You should look at the generated code.\nIf you writestring!, zephir adds checks, that variable type is string. Juststringwill fetch variable as string, and actually in this time php-core throws warning.\nJuststringcould be useful, if you expectedint,floatorobjectwith__toStringmethod.\n. Added\n. You have to update your previous issue #260  \n. Thedieis alias ofexit`.\nBut for what do you need that?\nI am :-1:\n. @wapmorgan Move it into method:\nphp\nprivate function run()\n{\n  var child_pid;\n  loop {\n    let child_pid = pcntl_fork();\n    if child_pid > 0 {\n      return;\n    }\n    posix_setsid();\n  }\n}\nAlso you can thow an exception.\ndie/exit is old method if you call it - you never understand why you script died.\n. I know just one use case.\nIf you write something like PHPUnit and you have to return status code.\nBut there is one problem - you can not write scripts with Zephir. Zephir lets you create classes, so you have to run your tool from php script and you can also exit process there.\n``` php\n!/usr/bin/env php\n$app = new \\Wapmorgan\\Application();\nexit($app->run());\n``\n. I am not see there method namedgetOriginal. Can you show more code (full repository would be wonderful).\nAlso actually you should to usetypeof` operator.\nphp\nprivate function parseClassConstants(array tokens) {\n  if typeof tokens[0] == \"array\" {\n    // do something\n  }\n}\n. As I see the difference:\ndiff\n-        return isset arr[\"key\"] ? arr[\"key\"] : \"\";\n+        if isset arr[\"key\"] {\n+            return arr[\"key\"];\n+        } else {\n+            return \"\";\n+        }\ndiff\n        if (zephir_array_isset_string(arr, SS(\"key\"))) {\n                zephir_array_fetch_string(&_1, arr, SL(\"key\"), PH_NOISY | PH_READONLY TSRMLS_CC);\n-               ZEPHIR_CPY_WRT(return_value, _1);\n+               RETURN_CTOR(_1);\n        } else {\n-               ZVAL_STRING(return_value, \"\", 1);\n+               RETURN_MM_STRING(\"\", 1);\n        }\n-       RETURN_MM();\n+       ZEPHIR_MM_RESTORE();\n. @redfire1539 Please try again with latest zephir\n. Fixed\n. Do you know about sublime and atom highlight support?\nhttps://github.com/phalcon/zephir-sublime\nhttps://github.com/phalcon/zephir-atom\n. @DaveM2011 you can use array syntax for creating closures:\n``` php\nclass Foo\n{\n    public function method()\n    {\n        // do somth\n    }\npublic function callMethod()\n{\n    call_user_func([this, 'method']);\n}\n\n}\n``\n. In PHPinstanceofhas higher operator precedence than!.\nI think that is could be fixed, but that is not priority task, for now.\n. @ovr please read comments in php manual aboutinstanceof`\nActually phalcon write the same opinion.\n\nPHP allows to do this because 'instanceof' has a difference precedence, but the code looks less than natural\n\nExamples:\nhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/CollectionValidator.php#L30\nhttps://github.com/zendframework/zf2/blob/master/library/Zend/Db/Sql/Platform/AbstractPlatform.php#L64\n. @serebro Please try with latest Zephir version\n. As I understood its works fine.\n. I've added test. It's works fine. @3axap4eHko pull last changes\n. Please open new issue for this problem.\nYou should add more details: OS, compiler, Zephir version(tag or commit)\n. Now pass by reference doesn't working.\nDuplicate of #203 \n. Traits doesn't support yet.\n. @Barbery please show more code about first post.\nSecond problem related to #170 issue\n. Now you have to initialise variable, before use it. If #292 pull will be merged, this code will works fine.\n. There is one problem with callable type.\nIf we write code like this\nphp\npublic function getType(var obj)\n{\n    return typeof obj;\n}\nAnd call this method with callable - we get an array or object or string. I think this behaviour should be documented. \n. If gettype doesn't works fine of my local machine means that it is the bug.\nIt's throws directly for commented code.\n. @ovr about callable.\nphp\nvar_dump(is_callable('phpinfo'), gettype('phpinfo')); // true, string\nvar_dump(is_callable(array(new \\ArrayObject, 'count')),\n         gettype(array(new \\ArrayObject, 'count'))); // true, array\nSo callable is not just object.\nActually i've added docs phalcon/zephir-docs#17 for typeof.\n. @ovr https://help.github.com/articles/markdown-basics docs for you :wink: \nI undersand why is_callable returns true or false. But I created behaviour, when in zephir typeof operator returns true for callable objects if it's using as comparison operator.\ntypeof cb == \"callable\" != \"callable\" == typeof cb\n. @ovr That is just example.\nI mean, that if typeof works like gettype we can not check is object callable. But we can do it using typeof as comparison operator\n. As I can see configure required file utility, that you doesn't have.\nCopying new kernel files...\nPreparing for PHP compilation...\nPreparing configuration file...\n./configure: line 6533: /usr/bin/file: No such file or directory\n. Maybe duplicate of #273\n. Actually it is related another problem #170 \n. @darkgaro what for do you need it?\nYou can return [this, 'methodName'] or ClassName::methodName. There is no clean ability to implement this feature\n. Could you please more to describe your question?\n. @wapmorgan for now - no. I think for now main goal is create first stable release, with all planned features, and then try to increase performance and decrease memory usage\nAlso I do not really understand, how implement this feature. Zend HashTable store just zval values, so we have to store this objects in other container, hence we need own GC...\n. Build failed by phpcs of new let-statements builders, all tests are passed correctly\n. Try to replace your get implementation by this:\nphp\n    public static function get(string name, default_var = null) -> int|string|bool {\n        var value;\n        if fetch value, self::config[name] {\n            return value;\n        } else {\n            return default_var;\n        }\n    }\nAnd update your Zephir to the latest version\n. I close it. If you have some questions, I'll reopen it.\n. @mruz Can you try with latest zephir version and maybe create test for this bug?\n. Please read this docs http://zephir-lang.com/optimizers.html\n. @dreamsxin Please move your test into test/builtin/arraymethods.zep\n. This feature is not implemented yet. NFR is #358 \n. I think Zephir should support PSR rules, so you have to use CamelCase in your namespace names.\nBut in php you can get all classes using lowercase style. PHP support it\n. So, what do u thinking about ext directory renaming?\n. Yes. It's possible.\nSo for stubs .zep.php\n. Also now github index zephir's repositories.\nhttps://github.com/trending?l=zephir\n. So, I've implemented .zep prefixes, waiting for github/linguist#1132 merge.\n. Please see https://github.com/phalcon/zephir/issues/106\n. A close it. Discussion could be continue in PR issue #345 \n. What if we can not write into /usr/local/bin? I think we should check this, and copy with sudo if it's really needs.\n. But actually I think we should not copy. We have to link it\n. @ovr we could suggest some variants:\nmd\n[0] /usr/local/bin\n[1] ~/bin\n. @ovr Actually on OS X /usr/local/bin under current user.\nbash\n$ touch foobar\n$ cp foobar /usr/local/bin\n$ chmod +x /usr/local/bin/foobar \n$ which foobar \n/usr/local/bin/foobar\nBut not in Ubuntu 12.04\nbash\ncp foobar /usr/local/bin\ncp: cannot create regular file `/usr/local/bin/foobar': Permission denied\n. I think the best solution install zephir from composer and add ~/.composer/vendor/bin into $PATH.\nIf you are not installed parser, script suggest you to do it at first. I've add this ability long time ago. https://github.com/phalcon/zephir/commit/66f1772c326ba54da2f254d3aefc72d8b1032879\nPS\nCopy, or symlink into /usr/local/bin is not best solution, because we do it for every user in the system.\n. @phalcon so what we should to do with this?\n. Sudo requires for linux based systems. In future we will use extension as parser and everyone could install zephir using composer without any hacks.\n. @phalcon please do not merge it\n. @ovr I've fixed small error, and add more tests.\n. Use $in, instead of in. in reserved for loops: for a in b {}\n. It's just not implemented.\n. Fixed in #366\n. Could you add test for this change?\n. @danbruce only @phalcon could to merge.\n. @ovr I can't find issue, you added arrays support for non-static properties, and promised to add support for static. Or this issue closed?\n. This is not implemented.\nDuplicate of #203 \n. Please add tests for this PR.\n. @netyum ping\n. I think you just should send PR.\n. Actually I've said everything in #263.\nUse exit for debugging - dirty hook, use for return some program code not works, because you can't write any cli-tools using just Zephir, you need something, that runs Zephir's generated code.\nBut now I think, that debugging extensions is not so simple, so exit could helps sometimes. And you suggest code that works fine, so why not merge it into master.\nI :+1: \n. @ovr yep, I'm sorry. I'll be more careful\n. @netyum Add script:\nphp\n<?php\n// unit-tests/Extension/fixtures/exit.php\n$t = new \\Test\\ExitDie();\n$t->testExit($argv[1]);\nAnd test it using exec\n. If you change any commit, you have to push changes with -f (or --force) flag\nAnd now you have to rebase your changes in one or two commits, and git push -f\n. @netyum please rebase your PR, there are some conflicts\n. Nope.\nDo this things:\ngit\ngit remote fetch phalcon\ngit rebase phalcon/master\nAnd git shows you conflicts.\n. Please show more code.\nhttps://github.com/phalcon/zephir/blob/master/test/unsettest.zep#L29 - unset works fine.\n. I've created PR,  the discussion continue there #430\n. Please submit code, and someone reopen your issue.\n. @ovr I can, but this will produce conflict, after merge one of requests.\n. @phalcon ping.\nI've already three times rebased this PR\n. @ovr can you merge this pull?\n. @ovr done. Love your English :smile: \n. @ovr finally, thanks!\n. @netyum please add var a; at the start of method.\n. @netyum yep. But that is not a reason for segfault. There is should be RuntimeException, like in PHP.\n. No. This is bug.\n. @netyum this could be assert, that you can disable in production. But this check should be.\n. @ovr I think we should allow compile this code:\n``` php\nnamespace Test;\nclass Iss394\n{\n    public function __get(const string prop)\n    {\n        return \"This is \" . prop;\n    }\npublic function testit()\n{\n    return this->myProperty;\n}\n\n}\n```\nAnd throw warning, instead of compilation error, if property does not exists\n```\nWarning: Class 'Test\\Iss394' does not have a property called: 'myProperty' [magic-variables]\n  return this->myProperty;\n--------------^\n\n``\n. @ovr That isn't question, it's suggestion.\n@phalcon what do you think about it? \nI think we should implement similar behavior for methods\n. @taophp if you want.\n. @ovr any code that is more complex than in test.\nForecho \"hello world!\";, PHP throws:Parse error: syntax error, unexpected 'echo' (T_ECHO) in echo \"hello world!\" on line 1. @ovr you are right. Added context.\n. https://travis-ci.org/phalcon/zephir/jobs/25145593\nOmg. Build failed by router tests.... nice.\n@ovr why valgrind doesn't show any trace?\n. @ovr yep, I saw it... But where is trace? Do you understand why build failed, fromzend_mm_heap corruptedmessage?\n. @ovr what for?) It's not works fine\n. @ovr ok\n. @ovr done\n. Please show compiled C code\n. Can you exclude right comparisons?\n. @jrbassoempty boolTrueworks fine, as I see. Exclude this and another one.\n. Usetypeofoperator, instead ofis_` functions.\n. @ircrash try with HEAD commit.\n. @ircrash I suggest you create PR with test, that fail build, @ovr take your code, and creates fix for it.\n. > wat?\n\n@ircrash i will fix it now\n\nI just kidding :smile: \n. Try with the latest Zephir.\n. Duplicate of #203 \nPlease use search\n. Zephir doesn't controll runtime right now\n. I think we should think about asserts, for this cases.\n. @ircrash asserts - just because you can disable it in production.\nI think you should check it by yourself because you can handle this like you want, instead of zephir-generated behaviour.\nBut, if we talking about Zephir-runtime, we have to do this checks, but not in C-code\n. @dogstarTest for every new issues you should create your own issue. Please do it.\nPS Also please take it easy, we do not promise anyone, that do something exactly like someone wants. You should add some code, that reproduce your problem, and suggest your solution.\n. @dreamsxin please add tests for this.\n. @dreamsxin thank you!:+1:\n. @ovr just try to compile and run following code:\n``` c\n// test.c\ninclude \nint main ()\n{\n    assert(1==0);\n    return 0;\n}\n``\n. @darkgaro can you create PR with tests on this?\n. Can you try with the latest Zephir?\n. @andycheg I think that is ok. Please rungit commit --amend && git push --force`\n. Maybe that means, we should revert this PR?\n. @ovr of course we can, we are inside CVS.\n. So do you suggest write:\nphp\nclassName FooBar {}\n?\n. use $this->$fetch(123).\nThese words are reserved, so you can not use them for variable's names. In php we have $ character for all variables. Zephir is too close with C, so you can use className, callback, etc.\n. Please split your not correctly working code.\nAlso you write tests in wrong way. You should mock object and check does set method call, or not. If phpunit could not mock built-in classes, you can compare objects for example like this:\n``` php\npublic function testMagicCall()\n{\n    $obj = new Foo();\n    $obj->set('foo', 'bar');\n    $obj2 = new Foo();\n    $obj2->setFoo('bar');\n$this->assertEquals($obj, $obj2);\n\n}\n``\n. Please read https://help.github.com/articles/github-flavored-markdown, and wrap your code by right tags for highlighting.\n. About your issue, please show generated **C** code for methods__callandset, thanks for your report\n. @dogstarTest I see. But you use unit tests, as functional tests. It's ok, but you should understand it.\nAlso, I know, that phpunit often doesn't help catch bugs, because it's creates many magic with your code e.g. temporary files with wrappers.\nAlso the best solution - create pull request with test, or add repository link with code, produced bugs.\nThanks for understanding!\n. Install GMP extension and rebuild, please\n. Why you can not just add your extension to php.ini?\n. @rodrigorm you do not have to copy extension, Zephir do it for you. You have to edit your php.ini just one time.\n. As I see, all memory leaks in Zend libs?\n. yep. Try to upgrade your PHP, or send bug-report to PHP itself\n. Zephir is a language. Report this issue into phalcon/cphalcon\n. @ovr stop merge your PRs without review from @phalcon, please.\n. Please read this https://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md#general.\n. I don't see anything looks like bug\n. @ovr may you add small description (code example) for your suggestions?\n. You can write LINQ implementation inside Zephir. But you shouldn't use it in Zephir. First of all you're writing extensions for PHP.\n. @angay9 because you should write core-level code with Zephir. So you can write LINQ with Zephir, but you shouldn't use it with Zephir.\n@phalcon maybe you have another point on this?\n. :+1:, but where are the tests?\n. @phalcon, :+1:\n@ovr wait for review from someone, let's do not merge self-posted PRs\n. Where is theMyZephir\\MyClassof relativelyconfig.json?\n. Andnamespaceinsideconfig.jsonismyzephir?\n. @Barbery please create repository with your project. This is looks like magic\n. @ovr we can create error system with error codes, that helps google this errors in future.Zephir error 94` for example.\n. @Barbery everything is ok for me.\n```\nzephir build\nWarning: Variable \"value2\" declared but not used in Myzephir\\Kmeans::_euclidean in /private/tmp/myzephir/myzephir/kmeans.zep on 135 [unused-variable]\n        var key, value, value2;\n------------------------------^\n\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nExtension installed!\nAdd extension=myzephir.so to your php.ini\nDon't forget to restart your web server\n```\nWhat is your OS, compiler, php version, etc.\n. This exception throws just if you not define namespace inside config.json.\nhttps://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L381\nI haven't more ideas. @ovr your turn\n. @Barbery update to latest commit.\n. As I know @phalcon is doing something to resolve this problem.\nhttp://vimeo.com/91588214\n. :+1: to split kernel from Zephir\n:-1: add it as submodule to every project.\nIf you are worry about Github language mark - let's change kernel-files extension to zep.h/zep.c\n. @ovr I don't hate submodules. I don't like do something, that someone have to do instead of me. In this case I have to control kernel version instead of composer.\nAnd actually kernel files is written for Zephir. In every Zephir project - it's generated files. It similar to STL in C++.\n. Maybe you should use http://php.net/manual/en/book.inotify.php, and just suggest it in composer.json?\n. @ovr this is not functional code, this is procedure code.\nWhat you expect from asynchrony? For now you doesn't stop build if files changed, so you doesn't use this functionality.\n. @ovr so what? Who said you that this lib doesn't support?\nreact is just wrapper for http://php.net/manual/ru/ref.libevent.php. You also use inotifywait, that is not very popular tool. For example there is no inotifywait on OS X.\n$ brew search inotifywait\nNo formula found for \"inotifywait\".\nSearching pull requests...\nYou wrote command just for you, working just with your environment. This is not ok. \n. @ovr of course it works. But not asynchronously https://github.com/reactphp/event-loop/blob/master/src/StreamSelectLoop.php#L250\nBrew is most popular package manager. Macports also not supports this package.\nSo, I am :-1:\n. @mruz this is happens, because typeof works with gettype, which returns boolean, integer, dobule (that's why you can not use float) https://github.com/phalcon/zephir/blob/master/ext/kernel/main.c#L379.\nI can add hack into operator, but it's will not working correctly with dynamic checking:\nzep\nstring a;\nlet a = \"int\";\nif b typeof a {}\nSo if looking deeper, we have to replace ZEPHIR_IS_STRING(_0, \"int\") to something like ZEPHIR_IS_TYPE_EQUALS(_0, \"int\").\n@phalcon, @ovr what do you think?\n. Actually for now compiler throws warning, if use typeof with variables, maybe this is enough.\n. @phalcon what we will to do with this?\nI thought about adding hack into parser:\nzep\nif typeof a == int {}\nI mean use keywords for types in expressions\n. @mruz please open another issue. This bug not related to previous.\n. Look at #201 \nI think everyone of us thought about it, and if it possible - we'll do it\n. It's ok;)\n. @phalcon we could write watch without 5.4 requirement.\n@WooDzu if we drop 5.3 support for Zephir itself - that doesn't mean that generated extensions won't be supported 5.3\n. @andresgutierrez \n@ovr and me thought about Zephir architecture. We thought it would be good to split Zephir into 2 parts:\n- Parser: input is Zephir code, output is AST tree\n- Compiler: input is set of AST trees, output is the code\nThis gives us ability to translate any language into any language. For example:\n- PHP to Zephir, for projects with large code base, that wants to optimize something\n- Zephir to PHP, to be able to use the library everywhere\n- Zephir to HHVM/HippyVM extensions\n- Zephir to PHPng extension, we can support it with macros, but for now it's already too hard (5.3, 5.4, 5.5, 5.6)\nTo do this I suggest create base interfaces right now and change the structure of the project on a more modular:\n``` php\n/*\n * The base interface for all AST nodes\n /\ninterface Definition\n{\n    public function getFile();\n    public function getLine();\n    public function getCharacter();\n/**\n * @return Definition\n */\npublic function getParent();\n\n/**\n * @return Definition[]\n */\npublic function getChildren();\n\n}\n```\nphp\ninterface Parser\n{\n    /**\n     * @param string $filename\n     *\n     * @return Definition[]\n     */\n    public function parse($filename);    \n}\n``` php\n/\n * The base interface for every compilier.\n * At first we pass all definitions into setDefinitions method.\n * Then every Definition one by one passes into compile method.\n */\ninterface Compiler\n{\n    /\n     * @param Definition[] $definitions\n     */\n    public function setDefinitions(array $definitions);\n/**\n * @param Definition $definition\n *\n * @return CompiledCode[]\n */\npublic function compile(Definition $definition);\n\n}\n```\nphp\ninterface CompiledCode\n{\n    /**\n     * @return string\n     */\n    public function getFilename();\n    /**\n     * @return string\n     */\n    public function getCode();\n}\nWe have to implement AST, and everyone can write compiler from whatever he wants to Zephir, or PHP, or C-extension for PHP. For now this classes already exists, but we should standardise this.\n``` php\nnamespace Zephir\\Ast;\nuse Zephir\\Common\\Definition;\nclass VariableDefinition implements Definition {}\nclass ClassDefinition implements Definition {}\nclass MethodDefinition implements Definition {}\nclass PropertyDefinition extends VariableDefinition {}\nclass ClassConstantDefinition extends PropertyDefinition {}\nclass CodeDefinition implements Definition {}\n```\n``` php\nnamespace Zephir\\Ast;\nuse Zephir\\Common\\Definition\\Code;\nclass LetDefinition implements Definition {}\nclass LoopDefinition implements Definition {}\nclass ThrowDefinition implements Definition {}\nclass BranchDefinition implements Definition {}\nclass ReturnDefinition implements Definition {}\nclass ThrowDefinition implements Definition {}\n// and another for every expression that could be used inside methods\n```\nAlso this methodology helps us to write more tests, result will be more predictable, code will be cleaner.\n. @andresgutierrez also we repeatedly asked to transfer zephir to the organization.\nIf you worry about watchers - GitHub save everything that we have today. Also GitHub will redirect everyone from phalcon/zephir to zephir-lang/zephir.\nWe lose just @phalcon followers, but I think if someone wants - he will subscribe to @zephir-lang.\n. @andresgutierrez for now we working with raw parser output, and it's gives us many problems.\n- we don't have autocomplete ($expression['something'] instead of $expression->something())\n- we have to writing boilerplate code (1, 2 and other)\n- our code is inconsistent at all\nAbout organisation. For now owner is @ovr, I think he would be happy gives you this organisation. Also organisation helps us to split phalcon from zephir, you have told about it, it's should be different projects, I think.\n. @ovr I think if second parameter is specified, we should call php method.\n. Thanks!\n. We support _GET, _POST, etc. What exactly variables are you talking about?\nIf you mean global keyword - no.\n. No.\nhttps://github.com/phalcon/zephir/blob/master/parser/scanner.re#L559\nYou can create class with static variables/methods if you need. I think globals are evil, Zephir created for good.\n. Duplicate of #358\n. @ovr for interface?\nhttp://php.net/manual/en/language.oop5.interfaces.php look at Example #3 Multiple interface inheritance section\n. @ovr no, it's not.\nhttps://github.com/phalcon/zephir/blob/master/parser/parser.lemon#L1257\n. Duplicate of #105 \n. You haven't add \\ at importing class. PHP let's this, Zephir - not.\n@phalcon, @ovr I think we should close this.\n. Build failed due segmentation fault:\n/home/travis/build.sh: line 41: 23623 Segmentation fault      (core dumped) valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\nThe command \"valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes phpunit --debug\" exited with 139.\nhttps://travis-ci.org/phalcon/zephir/jobs/34552560#L1221\n. Does Zend Core support traits? As I know (from opcodes), traits just merges methods into class definition. So we can do the same thing at least in php5.3.\n. @phalcon so we could merge trait's methods into every class that uses it for 5.3.\n. @ogarbe for now we have couple plugins for highlighting syntax: for sublime/text mate and for atom. If you want just highlighting, you can add tmbundle using IDEA plugin (tmbundle-support).\nIf you want add full or partial support for go-to-definition feature and autocomplete - there is parser written on C, that gives you raw AST-tree in json. \n. @ogarbe actually I love this idea, I think every new language have to care about IDE and IDEA is a good platform for it.\nSo, we have unofficial organisation zephir-lang, I've created initial support from docs posted by you: https://github.com/zephir-lang/idea-plugin. Await for your PR's!\n. @ogarbe i've added basic highlighting and written grammars. I think on the next week plugin will have full grammar support, so you can start help me implement intel-features like competition, go-to-definition and another.\nSo I close it.\n. I don't know is it possible to support this feature for extensions. It's could be supported just for PHP\n. @ogarbe we compile Zephir code into C code that works with PHP extensions api (Zend core).\nI guess we can not implement the same behaviour for static as in PHP.\n. self and parent are not reserved in parser, this words reserve ride inside php code.\n. @ogarbe I see. I've added support in parser, rebase your code on feature/late-static-binding branch.\n. Failed due great 5.3 bug\n. Guys, if you need support for Russian - ask in chat. Here the English language, there is already the case when the person is a duplicate of the issue due to the fact that the discussion is not the English\n. @mruz try to disable xdebug.\n. @mruz I think there is something wrong in zephir shutdown callbacks, phpunit prints result and just after that it fails.\n. > Many bugs are raised because users are not running the latest version. Please visit the download page, download/clone the latest available version (or compile it) and confirm if the issue you are experiencing is indeed a bug. When submitting bugs to the issue tracker make sure your issue includes:\n\n\nCode to reproduce the bug\nYour environment: OS, compiler\nZephir version, if your version is outdated - try updating the latest version\n. @ovr, @phalcon why valgrind doesn't catch this? Maybe we should configure it?\n. @ovr pong\n. @ovr yep.\n. Please format your code using GitHub markdown and post your environment (OS, zephir version, etc.)\n. @ThanhNhan2103 https://guides.github.com/features/mastering-markdown/ - simple tutorial.\n. @thaJeztah you are right.\n@ThanhNhan2103 if you have some problems with Zephir, try to check this problem using PHP.\n. Problem solved?\n. There are plugins for all popular IDEs: vim, sublime, IDEA, atom, textmate and other. There is no problem to install it.\nhttp://editorconfig.org/#download\n. @ovr ok, what do you suggest? By default every editor uses spaces or tabs for every language. If someone doesn't want to install this plugin, this file is a manual how to configure settings by own way\n. @ovr ok, that is your choice. I hate do something, that computer could do for me.\nThere are many famous projects who uses editorconfig: angular, symfony, gulp and another.\n. @ovr :-1:\nSpaces and new line at the end - is close to be a standard.\nWhen you cat file, if it doesn't have the trailing line, you got something like this:\n\n\n}nkt@nkt $\nInstead of\n}\nnkt@nkt $\nAlso spaces helps to format code, like you want. Tabs not allowed this.\n@niden :+1:\nAs I know @phalcon prefer tabs for C code.\n. @ovr so you suggest to use tabs and exclude every advantages of tabs. Great!\n. @ovr I thought about it, I don't like it.\n@phalcon, @niden, @dreamsxin, @mruz what do you prefer, elseif, else if or both?\n. @phalcon why do you think that? There is no a defined.\nZephir compile this code into:\n``` c\nPHP_METHOD(Test_Statements, echoElseifTest) {\nzval *a_param = NULL;\nint a;\n\nzephir_fetch_params(0, 1, 0, &a_param);\n\na = zephir_get_intval(a_param);\n\n\nif (a == 1) {\n    php_printf(\"x\");\n} else if (a == 2) {\n    php_printf(\"y\");\n} else if (a == 3) {\n    php_printf(\"z\");\n} else {\n    php_printf(\"?\");\n}\n\n}\n``\n. @phalcon that is not problem of this PR, that is problem related toUPPERCASED_NAMESdefines as constants, so classes and method names can not be in uppercase, likeX` :smile: \n. @phalcon look at #141\n. @ovr C and PHP also lets write code like:\nc\nif (a < b) foo();\nelse bar();\nAnd I hate this style, it helps to create stupid mistakes. else if is one possible use-case for C that I allow for me.\n. @phalcon are you going to merge this?\n. Every extension should be compiled right there, where it's using. Please install extensions using zephir build command, and if something wrong at first run zephir fullclean.\nIf you have problem on OS X try to install php using homebrew, and check is it working right in terminal.\nphp -m | grep <you_ext_name>.\n. Again 5.3, again testRouter\n. please show full code for generated function\n. Yep. That is my mistake. I'l fix it as soon as I can.\n. @ovr please, just add the test on this case\n. @ovr please respect people who doesn't know Russian. Next time instead of thinking about how much you cool, try to understand, that not only you can add this fix. I've tried to fix this, but got the same result.\n. Actually this is not problem of SkipVariantInit. This optimizer for statements, not for expressions.\n. > proof\nhttps://github.com/nkt/zephir/commit/4d2f0e66973a63062f605f5c4f1375f807954740\n. Read about how git works, part about remote and local branches ;)\n. Please add tests on this.\nAnd what did you change? Please rewrite commit with generated code.\n. @phalcon why did you merge it? There are no generated code :(\n. Duplicate of #513 \n. Actually I am :-1:\nEverything in master is a dev. I am and @ovr draft new releases every time, when it needed. If someone use code from master, instead of last tagged commit - it's himself problem.\nAlso we haven't stable version, so we don't need branches for major versions.\n. @ovr composer not execute hooks, for vendors. Try to composer require phalcon/zephir:*\n. @ovr when I added composer support in this project, I've asked about that: composer/composer#2707.\nFor now there is PR for this feature, but not completed: composer/composer#2898.\n. Actually, I think it would be better to implement bin/zephir-parser --version command, and compare it with current compiler version, and throws warning in case they are different.\n. Duplicate of #544 \n. @phalcon @ovr \nPlease review it.\n. Ok. I think we should close this due today we have the forum :smile:\n. For discussions we are using forum.\n. @phalcon ping\n. Actually I think this feature good for fast debugging. Throw exception is better, then die().\nzep\nthrow 1;\nthrow \"1\";\nThis is equals. Maybe in some cases there are many steps, and fastly enumerate this cases in exception.\n. Yes.\n. php\nswitch(type) {\n    case \"string\":\n        throw \"Test\";\n    case \"char\":\n        throw 't';\n    case \"int\":\n        throw 123;\n    case \"double\":\n        throw 123.123;\n}\nThis code will produce:\nc\nif (ZEPHIR_IS_STRING(type, \"string\")) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"Test\", \"test/exceptions.zep\", 45);\n    return;\n}\nif (ZEPHIR_IS_STRING(type, \"char\")) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"t\", \"test/exceptions.zep\", 47);\n    return;\n}\nif (ZEPHIR_IS_STRING(type, \"int\")) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"123\", \"test/exceptions.zep\", 49);\n    return;\n}\nif (ZEPHIR_IS_STRING(type, \"double\")) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"123.123\", \"test/exceptions.zep\", 51);\n    return;\n}\n. https://travis-ci.org/phalcon/zephir/jobs/37378460#L978\n. @phalcon seem like ok in PHP.\nPlease review my parser changes, is this ok?\n. @phalcon ping\n. @phalcon it's working like static in PHP.\nhttps://github.com/phalcon/zephir/pull/565/files#diff-3598a738cb18c5a1db28030cdea1061eR51\n. Please add tests.\n. > Added \nWho added? :smile: \n. For now - there is no way for this. Zephir works pretty fast, try to run time zephir generate. zephir build is a wrapper for phpize && ./configure && make && make install so it's gcc works not so fast.\nIn future maybe will be available JIT version of Zephir and you can require Zephir files ride inside php.\n. Also please use forum for discussions.\nhttp://forum.zephir-lang.com/\n. @steffengy you should ping @phalcon ;)\n. @steffengy in future you can use editorconfig which helps you not thinking about identation style.\n. Could you add C code, please?\nMaybe we not call zval_copy_ctor in first case.\n. Please use GitHub markdown in future.\nAlso please show the code.\n. @phalcon actually I think we should document this difference from PHP.\n. It's already exists. Also we have resource and object\n. Could you also post generated C code?\n. Duplicate of #573.\n. I've tried to split parser into extension, but my knowledge is not enough. Here is my trying everybody welcome to help me.\n. @andresgutierrez I steal some pieces of code from runtime, phalcon annotations, but it steal fails.\n. You can use c-blocks:\n``` zep\n%{\nifdef TOKEN_NAME\nendif\n}%\n. zep\n%{\nifdef TOKEN_NAME\n}%\n    return \"foo\";\n%{\nendif\n}%\n%{\nifndef TOKEN_NAME\n}%\n    return \"bar\";\n%{\nendif\n}%\n``\n. @xutongle Hi. We use English for communication inside project, so can you translate your messages to English, please?\n. Duplicate of #123 \n. @brainformatik can you post C code?\n. @ovr so it's not Zephir bug?\n. Zephir is not PHP. Zephir not required$for variables and requires uppercase for constants.\n. @ovr I guess this is bug. In parser IDENTIFIER is matches to[\\_\\$]?[_a-zA-Z\\][a-zA-Z0-9_\\]*. @mruz you're right, but this is a big hack. @andresgutierrez we should remove defining constants in parser.\n. Ok, why do you need that? Usecasefor cases anddefaultfor default case. In your case,1is the default case.\n. I guess this is the bug, empty conditions beforedefaultgoes to start.\nBut I don't understand why you need this. Use justdefault` without other cases.\n. Yep, I'm completely right.\nc\ndo {\n    if (ZEPHIR_IS_LONG(variant, 1) || ZEPHIR_IS_LONG(variant, 2)) {\n        RETURN_LONG(2);\n    }\n    if (ZEPHIR_IS_LONG(variant, 3)) {\n        RETURN_LONG(3);\n    }\n    if (ZEPHIR_IS_LONG(variant, 4)) {\n        RETURN_LONG(4);\n    }\n    RETURN_LONG(1);\n} while(0);\nParser works correct.\njson\n\"clauses\": [\n    {\n      \"type\": \"case\",\n      \"expr\": {\n        \"type\": \"int\",\n        \"value\": \"1\",\n        \"file\": \"foo\\/foo.zep\",\n        \"line\": 7,\n        \"char\": 19\n      },\n      \"file\": \"foo\\/foo.zep\",\n      \"line\": 8,\n      \"char\": 19\n    },\n    {\n      \"type\": \"default\",\n      \"statements\": [\n        {\n          \"type\": \"return\",\n          \"expr\": {\n            \"type\": \"int\",\n            \"value\": \"1\",\n            \"file\": \"foo\\/foo.zep\",\n            \"line\": 9,\n            \"char\": 25\n          },\n          \"file\": \"foo\\/foo.zep\",\n          \"line\": 11,\n          \"char\": 16\n        }\n      ],\n      \"file\": \"foo\\/foo.zep\",\n      \"line\": 11,\n      \"char\": 16\n    },\n    {\n      \"type\": \"case\",\n      \"expr\": {\n        \"type\": \"int\",\n        \"value\": \"2\",\n        \"file\": \"foo\\/foo.zep\",\n        \"line\": 11,\n        \"char\": 19\n      },\n      \"statements\": [\n        {\n          \"type\": \"return\",\n          \"expr\": {\n            \"type\": \"int\",\n            \"value\": \"2\",\n            \"file\": \"foo\\/foo.zep\",\n            \"line\": 12,\n            \"char\": 25\n          },\n          \"file\": \"foo\\/foo.zep\",\n          \"line\": 14,\n          \"char\": 16\n        }\n      ],\n      \"file\": \"foo\\/foo.zep\",\n      \"line\": 14,\n      \"char\": 16\n    }\n]\n. Duplicate of #732\n. Generated code should be compiled, Zephir not supports runtime (for now). So you can output\nzep\n%{goto foo;}%\nAnd this code will be compiled successfully.\n. @andresgutierrez I didn't get any segfault. Actually it's weird, I've tested this case before PR and got:\nUncaught exception 'RuntimeException' with message 'Trying to call method getline on a non-object' in php shell code:1\nInstead of segfault.\n. @andresgutierrez yep, you're right, I'll fix it.\n. @andresgutierrez yep, it works fine. Should I rebase this?\n. @andresgutierrez done\n. @andresgutierrez ping\n. I suggest to mark this as won't fix, because there is no possible usage of this \"missing\" feature.\nAlso Zephir is not PHP, it's language for extensions, and this is standard behaviour for extension:\nstr_repeat('z', 2, 3, 4);\nPHP Warning:  str_repeat() expects exactly 2 parameters, 4 given in php shell code on line 1\n. Great! :+1:\n. I guess we should update version.\n. it's not right, you should move it to start of file\n. Ok. If you in c use library just in one function do you include its inside this function?\n. this is not a reason for writing code smells\n. use assertFalse\n. use assertFalse\n. use assertInternalType($expected, $actual[, $message = ''])\n. wtf?\nMay be you should create class?\n. Why not microtime(true)?\n. You write benchmark. There is important speed of benchmark itself. I think you should replace getmicrotime by microtime(true)\n. Why not an interface?\n. Please remove first slash\n. typo\n. Please remove repeated array\n. Maybe change it to break?\n. So, please, add comment about that.\n. Please replace it by variable and add unit-test.\n. That is conflict\n. Conflict again\n. Can you add test on this.\nI can not understand what for you adds this replacing:(\n. Please remove comparison.\n. Please use assertSame\n. Please remove this hardcode.\n. yes, you are.\n. yep\n. OMG. Why we should drop 5.3 support?\n. :-1:\nMaybe you can split this code in another project?\n. This is very bad hardcode.\nWe can add before-build, after-build sections, and add this code there. For example there is no service in OS X\n. You can replace it by react/event-loop\n. Maybe concat this statement with previous?\n. diff\n- $paramStr .= ' = ';\n- $paramStr .= $this->wrapPHPValue($parameter);\n+ $paramStr .= ' = ' .  $this->wrapPHPValue($parameter);\n. Actually this is not good working implementation.\n. This code duplicate mine. Remove one of variants, please.\n. Why do you replace zephir_update_property_this by zephir_update_property_zval. I don't know difference, but it's weird. \n. ",
    "ihor": "As I understand it is happening because unset statement is commented for some reason (https://github.com/phalcon/zephir/blob/d276733cea5816640da816de4a326d90f2d022bc/Library/Statements/UnsetStatement.php)\nTry to use array_splice() (http://us.php.net/manual/en/function.array-splice.php).\nGuys, are you planning to fix unset? Can I help you somehow? Thanks.\n. ",
    "hkdobrev": "The UnsetStatement is not commented out anymore in latest master. However I have a an uncaught exception if I use unset on a variable instead of an array element. Should I file a separate issue?\n. ",
    "jaimz22": "Don't get my wrong, I'm going to continue to work with Zephir, I'm not wanting to convey a message of \"Zephir is slow\" that's not the case.\nIt did give me an extremely interesting idea however. (it's pretty far outside the box) What if, the calls to internal PHP functions (at least the simple ones, like trim(), explode(), etc) used the actual PHP internals call for the specified function instead of the zephir_call_func_p* methods?\nNearly all the PHP source is documented with method calls and their signatures, so what if there was a way to do some type of reflection, or 'read' the code's documentation? \nFor example, the explode function has the following signature:\nproto array explode(string separator, string str [, int limit])\nhaving that signature, and knowing that the internal functions are named php_, you could deduce that you can call php_explode(zval delim, zval str, zval *return_value, long limit)\nI imagine I could also just use the cblock abilities to call php_explode myself however.\n. I see that. I believe my findings are the way they are because of the fact that my php code and my zephir code are calling the same native php functions the same number of times, in the same ways. The overhead i'm seeing is, most likely, the calls made to the native functions.\n. I've had this issue once before. I found that if I assigned the static property to a variable that's local to the method, then at the end, assign the local method back to the static property it would work;\n``` php\n    public static function register(key, value, graceful = false) -> void\n    {\n        if self::_registry === null { let self::_registry = []; }\n        var isset,locRegistry;\n        let locRegistry = self::_registry;\n    if fetch __isset__, locRegistry[key] {\n        if (graceful){ return; }\n        self::throwException(\"Mage registry key \\\"\".key.\"\\\" already exists\");\n    }\n    let locRegistry[key] = value;\n    let self::_registry = locRegistry;\n}\n\n```\n. because the parser thinks i'm trying to use a type keyword, instead of defining a class.\n. in PHP you can create a class named int, while int is a data type in PHP.\n. I don't think it's too far fetched to believe that at some point in the life of Zephir, someone is going to want to make a class named any of the following:\nInteger\nInt\nUint\nLong\nChar\nUchar\nDouble\nFloat\nBool\nBoolean\nString\n. Perfect. This might be worth a mention in the docs.\nThank you.\n. Oh, I'd like to add. I'm using php 5.5.6 (running as php-fpm behind nginx 2)\nWhile it shows as a warning in the logs, this actually halts php's execution, causing Nginx to return a 502\n. oh yeah, this only happens when you pass a value to the type hinted default parameter, if you don't pass a second parameter to test() the fault doesn't happen.\n. verified that it's fixed! thanks\n. this is broken now:\nphp\npublic function __construct(boolean! start = true)\n{\n}\n. Also:\nin zephir:\nphp\npublic function testMethod(param1,param2 = null)\n{\n    var_dump(param1);\n    var_dump(param2);\n}\nthen, in php:\nphp\n$obj->testMethod('testVal1','testVal2'); // outputs string 'testVal1' NULL\nAnything that defaults null stays null when a value is given to it\n. it still seams to be failing. \nTry this zep file:\n``` php\nnamespace Tests;\nclass TestDefaultParamValues\n{\n    public function test1(value)\n    {\n        echo value;\n    }\npublic function test2(bool value)\n{\n    echo value;\n}\n\npublic function test3(bool! value)\n{\n    echo value;\n}\n\npublic function test4(value = null)\n{\n    echo value;\n}\n\npublic function test5(bool value = null)\n{\n    echo value;\n}\n\npublic function test6(bool! value = null)\n{\n    echo value;\n}\n\npublic function test7(string value)\n{\n    echo value;\n}\n\npublic function test8(string value = null)\n{\n    echo value;\n}\n\npublic function test9(string value = \"string\")\n{\n    echo value;\n}\n\npublic function test10(string! value = null)\n{\n    echo value;\n}\n\npublic function test11(string! value = \"string\")\n{\n    echo value;\n}\n\n}\n```\n( I used echo because var_dump seems seriously messed up right at the moment)\n. Part of the issues is that if I compile with a defaulted type hinted parameter, PHP's execution will halt as soon as the class is initialized in php userland.\nNULL really should be NULL regardless of what the type is. NULL is the absence of a value, not a value, nor a type.\n. This happens:\nPHP Fatal error:  Class 'PregMatchOptimizer' not found in /root/Development/zephir/Library/Optimizers/FunctionCall/PregMatchAllOptimizer.php on line 29\nPHP Stack trace:\nPHP   1. {main}() /root/Development/zephir/compiler.php:0\nPHP   2. Bootstrap::boot() /root/Development/zephir/compiler.php:81\nPHP   3. CommandAbstract->execute() /root/Development/zephir/Library/Bootstrap.php:169\nPHP   4. Compiler->build() /root/Development/zephir/Library/Commands/Abstract.php:85\nPHP   5. Compiler->generate() /root/Development/zephir/Library/Compiler.php:632\nPHP   6. CompilerFile->compile() /root/Development/zephir/Library/Compiler.php:480\nPHP   7. CompilerFile->compileClass() /root/Development/zephir/Library/CompilerFile.php:559\nPHP   8. ClassDefinition->compile() /root/Development/zephir/Library/CompilerFile.php:112\nPHP   9. ClassMethod->compile() /root/Development/zephir/Library/ClassDefinition.php:724\nPHP  10. StatementsBlock->compile() /root/Development/zephir/Library/ClassMethod.php:967\nPHP  11. IfStatement->compile() /root/Development/zephir/Library/StatementsBlock.php:110\nPHP  12. StatementsBlock->compile() /root/Development/zephir/Library/Statements/IfStatement.php:69\nPHP  13. ForStatement->compile() /root/Development/zephir/Library/StatementsBlock.php:126\nPHP  14. ForStatement->compileHashTraverse() /root/Development/zephir/Library/Statements/ForStatement.php:611\nPHP  15. StatementsBlock->compile() /root/Development/zephir/Library/Statements/ForStatement.php:569\nPHP  16. FunctionCall->compile() /root/Development/zephir/Library/StatementsBlock.php:175\nPHP  17. FunctionCall->_callNormal() /root/Development/zephir/Library/FunctionCall.php:546\nPHP  18. FunctionCall->optimize() /root/Development/zephir/Library/FunctionCall.php:280\nPHP  19. require() /root/Development/zephir/Library/FunctionCall.php:193\n. Working just fine now.\n@racklin I'm using 5.5.6 FPM\n. If, in Zephir, I do this:\nphp\nclass SomeKindOfLoader {\n     // the method in a zephir class\n     public function createInstance(className) \n     {\n          let refl = new ReflectionClass(className);\n          return refl->newInstance();\n     }\n}\nIt will run the constructor, but it does not run the constructor when called in a dynamic way\n. Zephir is not PHP.\n. ",
    "aurora": "i would be interested in your code @jaimz22 because i am currently delving into zephir myself. could you create a gist of it? thanks very much in advance!\n. Is this issue closed because it's already implemented or won't operator overloading make it into zephir?\n. ",
    "lukaszlach": "Why choose explicitly which variables/consts to obfuscate? I don't think there would be a situation where you would like to obfuscate just some of all variables. But the idea is nice, in my opinion it would be better to add a compiler switch to command line, that will either obfuscate all or none.\n. anyway guys :+1: keep calm and good job!\n. ",
    "cvsguimaraes": ":+1: \n. @fezfez agreed\n-1 for now\n. ",
    "DaveM2011": ":+1: \n. I have a bit but nothing that would be any use in this situation sorry\n. Yea i brought it a few weeks ago then asked for my money back as loading a 56kb javascript file using it would make the app halt i am not saying its a bad app but i have an 8 core PC with 16gb ram apps like that should not halt when opening a file like that so i went back to using phpDesigner as i have been using that for the last 4 years Ive been looking though the compiler code and think i could actually add it my self if its something that wont be added on the plus side Ive managed to get most of the base-app 2.0 into a php module its so fast lol, on a side note i wish phpDesigner supported zephir and erlang then my life would be forever awesome :)\n. Also will there be support for anon functions in the future for example\nvolt->setOptions([\"compiledPath\": funtion(var){ ... }]);\nunless there is better way todo this\nlet cls = new \\ReflectionClass(\"Rapid\\\\Library\\\\Tool\");\nlet method = cls->getMethod(\"compilePath\");\nlet callback = method->getClosure();\nvolt->setOptions([\"compiledPath\": callback]);\n. yep i know this i also know about the create_instance and the array one thanks\n. off topic what does create_symbol_table(); do i looked at source and still does not make sence to me\n. I did make a little progress making it read the model class but then it fails with \n```\nZephir\\CompilerException: Method 'Rapid\\Model\\Tokens::belongsTo' called with a w\nrong number of parameters, the method has: 0, passed: 4 in /root/rapid/rapid/mod\nel/tokens.zep on line 29\nthis->belongsTo(\"user_id\", \"\\Rapid\\Model\\Users\", \"id\", [\"alias\": \"User\", \"foreignKey\": true]);\n-----------------------------------------------------------------------------------------------^\n```\nMethodCall.php Line: 209\nI have no idea how to fix it ive tried adding headers, adjusting the bottom of ClassDefinition.php adding\ncase 'phalcon\\mvc\\model':\n                $compilationContext->headersManager->add('ext/phalcon/phalcon/mvc/model');\n                $classEntry = 'phalcon_mvc_model_ce';\n                break;\nStill no luck :(\n. And when i do manage to get it to compile i get\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib/php5/20100525/rapid.so' - /usr/lib/php5/20100525/rapid.so: undefined symbol: phalcon_mvc_model_ce in Unknown on line 0\n. Im sure it is yeah when i managed to get it to compile it to said the class was not there even though i had included the headers\n. OMG thats great i will try your fix shortly i have to take a look at other software most of today but should be able to test it later on and ill let you know :)\n\nFor every phalcon class you want to extend you will have to find it's header file and add PHPAPI right after extern and before zend_class_entry\n\ni wondered why PHPAPI was not in the header files i thought maybe zephir added it elsewhere :)\n. Well i have 4 words for you... YOU ARE THE MAN :+1:\nCould we get this added to the core Mr Zephir guy :)\n. I reopened as i think it still is a while away before full use of phalcon in zephir im having a little trouble using the\nnamespace Rapid\\Backend;\nclass Module implements \\Phalcon\\Mvc\\ModuleDefinitionInterface {}\nIm going to try fix myself ill post if i manage todo it :)\n. OMG heres me trying todo it myself totally unaware at github telling me there new comments\nSo sweet thanks dude im sure it will work so no point saying ill test it now :dancers: \n. Yup works great thanks so much dude for me and for you :+1: \n. ill keep this open for now if we could get this into the master a feature like this would prove very useful.\nThanks again\nDave\n. Yea it didnt take me long to figure that out also :) if anything its even better that first\n. I saw no notable errors when using base-app 2.0 on any of the servers Ive tried it on but i use nginx but web sever has nothing to do with that.\nIt relates to\n/* Traverse all zvals allocated, reduce the reference counting or free them */\nwould this not be better as a phalcon issue as i cant see it being a zephir error\n. what about nginx and php 5.4 i say this because i just cant see it being a apache issue sorry\n. Awesome im glad you got it sorted i too had problems with I8ln so i rewrote it to suit my needs but im converting base-app 2.0 to pure zephir code the base app is a good starting point but if i could get it all in one module that be even better :)\n. preg_replace works fine though so at least i can continue with what i was doing as i get the same result using that\n. The files i edited was\nLibrary/Operators/Other/InstanceOfOperator.php\nLibrary/Optimizers/FunctionCall/StripslashesOptimizer.php\nAll i did was add &(amperstand) becuase the only errors i got was due to Z_STRVAL_P wanting a pointer not a z_val\nafter that it compiled with no errors\nI suppose i might create a blank test module while i have the chance\n. Well a blank test module works fine so it must be something inside mine :(\nalso i re installed zephir and didnt need to make any edits for the test module to compile\n```\nnamespace Testmodule;\nclass Test_me {\n  public function __construct() {\n}\n  public function testit() {\n    echo \"Test_me::testit()\";\n  }\n}\n```\n. I figured out the php7.0-fpm hanging was due to one class being extended both classes having a method named set but one was static and the extended class was not but got no warnings \n. And now its all working if anyone wants changes made ill post them thanks for the help guys :+1: \n. Sure i will pretty it up i made a few changes for myself i think would benifit from it also. ",
    "Siguza": "How about compression? For someone looking at it in a hex editor, this has the same effect as obfuscation.\nFor names (variables, functions, classes) the allowed characters are: _, a-z, A-Z and 0-9. That is 1 + 26 + 26 + 10 = 63 characters out of the 256 a byte can hold.\nSo you could encode names to 6-bit chunks instead of 8-bit, hiding them from hexedit-spies and reducing the space they take up.\nFor string literals (where any character is allowed), I think the best way would be to go with some existing compression algorithm.\n. You could strip the magic header during compilation and add it again at runtime since it's static...\n. ",
    "mrqaidi": "i have this issue too .  i have an code  and i dont want anyone to see it .  any trick to hide  ?\n. ",
    "macnibblet": "Ill try and update my project during the weekend and see what it says\n. PHP Fatal error:  Uncaught exception 'RuntimeException' with message 'Call to undefined function xx()'\n. I have updated the github project, note it's in a branch called zf3, regular php still runs circles around this project. :-/\n. @nkt It's all in the initial comment \n. ",
    "Cinderella-Man": "To replicate seg fault run the following (current master Phalcon 2.0):\n```\n<?php\n$factoryDefault = new Phalcon\\DI\\FactoryDefault();\n$request = $factoryDefault->get('request');\n$response = $factoryDefault->get('response');\n$filter = $factoryDefault->get('filter');\n$escaper = $factoryDefault->get('escaper');\n$url = $factoryDefault->get('url');\n$flash = $factoryDefault->get('flash');\n$dispatcher = $factoryDefault->get('dispatcher');\n$modelsManager = $factoryDefault->get('modelsManager');\n```\nI'm getting following output from gdb:\n```\n(gdb) run test.php\nStarting program: /usr/bin/php test.php\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/i386-linux-gnu/libthread_db.so.1\".\nwarning: the debug information found in \"/usr/lib/debug//usr/lib/php5/20100525+lfs/mysql.so\" does not match \"/usr/lib/php5/20100525+lfs/mysql.so\" (CRC mismatch).\nwarning: the debug information found in \"/usr/lib/debug/usr/lib/php5/20100525+lfs/mysql.so\" does not match \"/usr/lib/php5/20100525+lfs/mysql.so\" (CRC mismatch).\nwarning: the debug information found in \"/usr/lib/debug//usr/lib/php5/20100525+lfs/mysqli.so\" does not match \"/usr/lib/php5/20100525+lfs/mysqli.so\" (CRC mismatch).\nwarning: the debug information found in \"/usr/lib/debug/usr/lib/php5/20100525+lfs/mysqli.so\" does not match \"/usr/lib/php5/20100525+lfs/mysqli.so\" (CRC mismatch).\nwarning: the debug information found in \"/usr/lib/debug//usr/lib/php5/20100525+lfs/pdo_mysql.so\" does not match \"/usr/lib/php5/20100525+lfs/pdo_mysql.so\" (CRC mismatch).\nwarning: the debug information found in \"/usr/lib/debug/usr/lib/php5/20100525+lfs/pdo_mysql.so\" does not match \"/usr/lib/php5/20100525+lfs/pdo_mysql.so\" (CRC mismatch).\n[New Thread 0xb6a9eb40 (LWP 23553)]\n[Thread 0xb6a9eb40 (LWP 23553) exited]\nProgram received signal SIGSEGV, Segmentation fault.\n0x0834c3bd in gc_zval_possible_root (zv=0xb77935d8) at /build/buildd/php5-5.4.22/Zend/zend_gc.c:143\n143 /build/buildd/php5-5.4.22/Zend/zend_gc.c: No such file or directory\n```\n. I merged and rebased with master - it should be fine now.\n. @mruz thanks for pointing out the bug - before my changes it was hardcoded to\nif ((0 == 0)) {}\nNow it returns 'kind of' expected results as long as ZVAL will be passed. I also added unit test to prove it works.\n. @andresgutierrez Could you please enlighten us what should be the intended behaviour? Empty function is treated in special way - is it still valid?\nLink: https://github.com/phalcon/zephir/blame/master/Library/Expression.php#L972\nThanks in advance,\nKamil\n. Thanks for PR merge, could you please give me a hint how to resolve the issue that both\nif empty(x)\nand\nif empty x\nare treated as special expression operator and generated in C as ZEPHIR_IS_EMPTY(). Surely if they are different first example should be changed to normal fcall as any other function?(zephir_call_static_p1). TestIf16 added by me shows the issue.\nThanks in advance,\nKamil\n. Thanks for your quick reply. Implementation looks good and I'm sure that will convert all occurrences of both empty x and empty(x) to ZEPHIR_IS_EMPTY. My only concern is that ZEPHIR_IS_EMPTY won't work for some cases like the one from here:\nhttps://github.com/phalcon/zephir/blob/master/unit-tests/flow.php#L19\nPassing empty array as argument to if empty(a) should probably give true? I think that the question is like that:\n1) would we really like to convert both empty x and empty(x) to ZEPHIR_IS_EMPTY?\nand\n2) if yes - probably the implementation of `ZEPHIR_IS_EMPTY should be changed as it doesn't count in for empty arrays:\nhttps://github.com/phalcon/zephir/blob/master/ext/kernel/operators.h#L35\nThanks in advance,\nKamil\n. @zaets28rus Yes, I know, but I wasn't even sure will it be merged/accepted so my commits were more explicit when merging and committing instead of rebasing. Normally I would rebase if I would be sure that's the right implementation. PS. My changes are clearly visible in 'Files Changed' tab. Thanks, Kamil\n. @kirilltitov have you tried to use standard PHP's empty() method? It should work out of box.\nBtw. Is there any logic reason why syntax like if empty x should be supported at all?\n. Do you mean that inside Phalcon 2.0 there's if empty x syntax?\nI saw it as I tried to compile and test new version, I even created a fix but if documentation doesn't point to that syntax there's no need to support it? I prefer to change phalcon code. Makes sense?\n. Of course, with this return false normal method_func_call_p2 will be used?\nI rebased leaving only unit test as the rest is not needed(I wasn't aware of the trick with return false ;) )\nAny replies about my concerns(questions)? getting Phalcon 2.0 compiling at least? \n. Thanks for quick reply. I tried again, this time everything gone well. Thanks a lot!\nSo when now it's at least possible to load the Phalcon 2.0 module - could we please agree on thing that it would be nice if changes would be checked(is it compiling) before merging?(including my changes). Travis(for Phalcon 2.0) would be the best option but at this moment quick compile is totally enough. What do you think?\n. It's totally fine(compilation only at this moment) - I believe that at this moment successful compilation will bring more contributors. Thanks for this conversation :+1:\n. ",
    "kurtpayne": "I also have problems with bitwise operators:\na & 1\na =& 1\na | 1\na =| 1\na > 2\na >> 2\na < 2\na << 2\n. ",
    "treffynnon": "Looks like this issue can now be closed given pull request: https://github.com/phalcon/zephir/pull/102\n. Combining information from the manual (file/function naming standards), the\npull request comments I mentioned above and your response to this issue I\nhave an optimizer that builds! Just have to sort out some type juggling on\nan argument to the 3rd party function now at least I think that is the\nissue - no compiler messages, but goes into an infinite loop when executed\nfrom PHP (should only do 1,000 iterations).\n. Is there anything special I need to do for string parameters and return\nvalues in Zephir for optimizers? My optimizer expects to get and return\nchar* so I think this is causing the issue.\n. OK I have figured out a way round this now and it is building! :)\n. @ramsey I was working on this project at the time https://github.com/treffynnon/Benchmark-PHP-HHVM-Zephir\nPerhaps a squiz at https://github.com/treffynnon/Benchmark-PHP-HHVM-Zephir/tree/master/cli-php-zephir-optimizer might help you. Unfortunately, I cannot remember what I did now although this looks like it might be the commit I fixed it in https://github.com/treffynnon/Benchmark-PHP-HHVM-Zephir/commit/ed9848abdda2541946a202681494eb864f2c864f\n. So the obvious work around is to use substr(somechars, 0, 1) instead, which appears to work, but now I am getting a seg fault from some where in the code. I have no idea where so will have track that down to see if the substr is actually work as I assume.\n. I have reverted my code, updated Zephir and installed it. It now builds and runs as expected. Oh and my seg fault has mysteriously gone away too!\n. ",
    "mruz": "Now if empty message {} condition is converted to if ((0 == 0)) {} and always true.\n. Can I check if php superglobal variables are empty?\nif empty _POST && empty _FILES {\n. There is some bug with if empty condition. It is always true now, https://github.com/phalcon/zephir/pull/42\n. @Cinderella-Man standard PHP's empty() is also converterd to if ((0 == 0)) {}\n. https://github.com/phalcon/zephir/blob/master/Library/MethodCall.php#L397-L468\nI see not cached method call is when Function is called using a dynamic variable as method name\n. During zephir generate I'm getting:\nPHP Fatal error:  Cannot redeclare getimagesizefromstring() in /zephir-master/prototypes/gd.php on line 29\n. Yes.\n. > GD Version: bundled (2.1.0 compatible)\n. works like a charm, thanks\n. @ovr I would like to set __ROOT__ constant for root path in the di contructor, to dir where di is created, can I access to php's __DIR__ or __FILE__?\nzep\nif !defined(\"__ROOT__\") {\n    define(\"__ROOT__\", dirname(__DIR__), false);\n}\nAs you know:\n\nWarning: Magic constant __DIR__ is not supported in /home/mruz/Dropbox/git/ice/framework/ice/di.zep on 28 [not-supported-magic-constant]\n. Any chance to add support? enough __FILE__, it can be useful.\n. > let [a, b, c] = arr;\n\nIs enough for me.\n. In the latest Zephir not all methods from extended class are inherited, eg:\nclass StringLength extends \\Phalcon\\Validation\\Validator implements \\Phalcon\\Validation\\ValidatorInterface\n{\n    ...\n    let minimum = this->getOption(\"min\");\nin Phalcon\\Validation\\Validator method getOption() exist, but I'm getting:\n\nFatal error:  Phalcon\\Validation::validate(): Call to undefined method Phalcon\\Validation\\Validator\\StringLength::getOption()\n\nbut isSetOption() not throws error. @phalcon could you look at this?\n. Just tried validate sth in phalcon 2.0.0:\nphp\n$validation = new \\Phalcon\\Validation();\n$validation->add('username', new \\Phalcon\\Validation\\Validator\\StringLength(array(\n    'min' => 10,\n)));\n$validation->validate(array('username' => ''));\n$messages = $validation->getMessages();\nI don't know how it is now, because during compiling I'm getting:\n\nPHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 32 bytes) in /home/abuild/rpmbuild/BUILD/php5-phalcon-zephir-2.0.0.d4f9a30/zephir-master/Library/Builder/Statements/IfStatementBuilder.php on line 58\n. Thanks for the info. It seems to https://github.com/mruz/cphalcon/commit/7d6888cfebf39c685ea325156ffedf9efd75ee68 solves the problem.\n. I'm getting now:\n\n/usr/sbin/httpd2-prefork: symbol lookup error: /usr/lib64/php5/extensions/phalcon.so: undefined symbol: zend_hash_get_current_key_zval_ex\n. You can check type first:\nif typeof match == \"array\" {\n    if count(match) == 2 && strlen(match[0]) >= minLength {\n    }\n}\nbut if you also have or conditions it is difficult:\nif condition || condition2 || typeof value == \"array\" && isset value[\"error\"] && value[\"error\"] === 1 {\n}\n. Looks like it works well. Thanks.\n. But if the or conditions occurs it should break only if no one pass:\nlet first = 0;\nlet second = 1;\n// Should pass but does not pass\nif first && second || second {\n    echo \"ok\";\n} else {\n    echo \"wrong\";\n}\n. It seems to me that, yes, but I'm trying to clone and compile again and I'm getting:\n/var/tmp/build-root/openSUSE_13.1-x86_64/.build.packages/BUILD/php5-phalcon-zephir-2.0.0.fbfebfa/ext/phalcon/di/service/builder.c: In function 'zim_Phalcon_Di_Service_Builder__buildParameters':\n/var/tmp/build-root/openSUSE_13.1-x86_64/.build.packages/BUILD/php5-phalcon-zephir-2.0.0.fbfebfa/ext/phalcon/di/service/builder.c:211:3: error: stray '\\' in program\n   zephir_call_internal_method_p3(_3, this_ptr, \"_buildparameter\", ZEND_MN(Phalcon\\\\Di\\\\Service_Builder__buildParameter), dependencyInjector, position, argument);\n   ^\n/var/tmp/build-root/openSUSE_13.1-x86_64/.build.packages/BUILD/php5-phalcon-zephir-2.0.0.fbfebfa/ext/phalcon/di/service/builder.c:211:3: error: stray '\\' in program\nIn file included from /var/tmp/build-root/openSUSE_13.1-x86_64/.build.packages/BUILD/php5-phalcon-zephir-2.0.0.fbfebfa/ext/phalcon/di/service/builder.c:17:0:\n/usr/include/php5/Zend/zend_API.h:66:23: error: 'zim_Phalcon' undeclared (first use in this function)\n #define ZEND_MN(name) zim_##name\n                       ^\n./kernel/fcall.h:91:109: note: in definition of macro 'ZEPHIR_CALL_INTERNAL_METHOD'\n    if (zephir_call_internal_method_params(return_value, return_value_ptr, object, method, sizeof(method)-1, function_ptr TSRMLS_CC, nparams, __VA_ARGS__) == FAILURE) { \\\n                                                                                                             ^\n./kernel/fcall.h:864:139: note: in expansion of macro 'zephir_call_internal_method_p3_ex'\n #define zephir_call_internal_method_p3(return_value, object, method, function_ptr, p1, p2, p3)                                            zephir_call_internal_method_p3_ex(return_value, NULL, object, method, function_ptr, p1, p2, p3)\n                                                                                                                                           ^\n/var/tmp/build-root/openSUSE_13.1-x86_64/.build.packages/BUILD/php5-phalcon-zephir-2.0.0.fbfebfa/ext/phalcon/di/service/builder.c:211:3: note: in expansion of macro 'zephir_call_internal_method_p3'\n   zephir_call_internal_method_p3(_3, this_ptr, \"_buildparameter\", ZEND_MN(Phalcon\\\\Di\\\\Service_Builder__buildParameter), dependencyInjector, position, argument);\n. I did try, but I'm getting: echo \"wrong\";, so first condition breaks and or condition is not checked?\n. I think it should break checking first part of conditions with and, but not whole if because or condition can pass.\n. It seems that now works well. Thanks!\n. I have last question about ! operator. Is it required to use parentheses during negation? because\n```\n// not pass\nif !1 || 1 {\necho \"OK\\n\";\n}\n// pass\nif (!1) || 1 {\necho \"OK\\n\";\n}\n```\n. I'm getting segmentation fault in increment_function(), zephir_is_iterable_ex() is this related?\n. I'm getting the errors with phalcon 2.0.0 and base-app 2.0\nJust ran the index.php, but gdb php and run index.php does not say too much:\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff2c4399d in zephir_is_iterable_ex () from /usr/lib64/php5/extensions/phalcon.so\n. I'm getting segmentation fault in compiler.zep#L2045 now. \n. It works. It started working a few days ago, Thanks!\n. Also append the string not working properly:\nlet self::_documentTitle .= title;\nThis overwrites the _documentTitle.\n. The generated code looks ok in C. Thanks\nBut I'm trying to compile phalcon 2.0 and I'm getting now:\nI: Program returns random data in a function\nE: php5-phalcon-zephir no-return-in-nonvoid-function /home/abuild/rpmbuild/BUILD/php5-phalcon-zephir-2.0.0.8e3b57c/ext/kernel/fcall.c:57\nI'm not sure if this is related\n. Looks like it works well. Thanks.\n. public function testGlobal(string key, value)\n{\n    let _POST[key] = value;\n}\nIf $_POST is not previously been used, code below not working:\nphp\n<?php\n$test->testGlobal('key', 'value');\nvar_dump($POST);\nbut if there is something in the post it works\nphp\n<?php\n$_POST['something'] = 'before'\n$test->testGlobal('key', 'value');\nvar_dump($POST);\nAlso https://github.com/phalcon/cphalcon/pull/1993#issuecomment-34538994\n. Public static property still throw Zephir\\CompilerException if default empty or non-empty array is defined.\n. @nkt could you add missing 0.5.8 tag? I'm using composer and I don't see later version of 0.5.5.\n. Now when I try to compile Phalcon 2.0.0 I get:\n\nZephir\\CompilerException: Cannot locate class \"Phalcon\\Acl\\Adapter\\Phalcon\\Acl\\Adapter\" when extending class \"Phalcon\\Acl\\Adapter\\Memory\"\n. Release stable Zephir, stable Phalcon 2 versions and focus on them. After few months start thinking on this.\n\nFor me the biggest advantage is performance. I vote C.\n. @ovr @phalcon any progress on this issue?\n. I have the Arr helper:\n``` zep\nclass Arr\n{\nprotected _data = [] { get };\n\npublic function __construct(array data = [])\n{\n    let this->_data = data;\n}\n\npublic function has(string key) -> boolean\n{\n    return isset this->_data[key];\n}\n\npublic function get(string key, var defaultValue = null)\n{\n    var value;\n\n    if fetch value, this->_data[key] {\n        return value;\n    }\n\n    return defaultValue;\n}\n\npublic function set(string key, var value)\n{\n    let this->_data[key] = value;\n}\n\n}\n```\nAnd I would like to set some data by reference\n``` zep\nclass Session extends Arr\n{\npublic function __construct()\n{\n    session_start();\n    parent::__construct(&_SESSION);\n}\n\n}\n```\nor\n``` zep\nclass Request extends Arr\n{\n    protected _post { get };\n    protected _get { get };\npublic function __construct()\n{\n    let this->_post = new Arr(&_POST),\n        this->_get = new Arr(&_POST);\n\n    parent::__construct(&_REQUEST);\n}\n\n}\n```\nCompiles but does not work. If I set:\nphp\n$session->set('key', 'value');\nit exists on the Session's _data, but not in the global $_SESSION\n. You are right. \n\nCall-time pass-by-reference has been removed.\n. I tried with \n\nzep\npublic function __construct(& data)\n//or\nthis->_data = &_SESSION;\nbut compiler threw an error :)\n. I found Passing by reference in C. I need only access global variables like _SESSION, _POST by reference for the Arr helper, @nkt is it any way to do it?\n. It seems that this error is gone. Thanks.\n. Done.\n. @ovr yes, on nginx works fine. But I tested on different phps: Apache/2.4.6 & PHP 5.4.20, nginx/1.4.7 & PHP 5.5.10\n. On nginx/1.4.7 & PHP 5.4.20 it works.\nIf I run on php CLI (Apache/2.4.6 & PHP 5.4.20) it works too:\n```\ncd base-app/public/\ngdb /usr/bin/php\n(gdb) run index.php\n[Inferior 1 (process 27463) exited normally]\n```\nBut if I run on web browser I'm getting Segmentation fault.\n. OK, I located the problem: https://github.com/mruz/base-app/blob/2.0/app/frontend/controllers/IndexController.php#L59\n. How about protected property:\n``` zep\nclass Test\n{\n    protected a = \"\" { set };\n    protected output = \"\" { get };\npublic function append()\n{\n    let this->output .= this->a;\n}\n\n```\nphp\n$t = new Test();\n$t->setA('a');\n$t->append();\n$t->setA('b');\n$t->append();\necho $t->getOutput(); //only `b` now\n. As @alkana said, the setter shortcut doesn't return current object, so this code not working:\nphp\n$scripts = $assets\n    ->collection('header')\n    ->setPrefix('http:://cdn.example.com/')\n    ->setLocal(false)\n    ->addJs('js/jquery.js')\n    ->addJs('js/bootstrap.min.js');\nShould set shortcut return this or we shouldn't use set here or maybe something like this:\n``` zephir\nprotected _prefix { get, add };\nprotected _local = true { get, add };\n```\n@phalcon what is your opinion?\n. When I try to compile Phalcon 2.0, for the internal class and optional params the compiler throws:\nlet memcache = new \\Memcached();\n\nZephir\\CompilerException: Method '\\Memcached::__construct' called with a wrong number of parameters, the method has: 1, passed: 0 in /home/abuild/rpmbuild/BUILD/php5-phalcon-zephir-2.0.0.eac3fd7/phalcon/cache/backend/libmemcached.zep on line 97\n. Because it's happened after this pr.\n. > ovr merged commit 1820e3b into phalcon:master  from andycheg:master  3 days ago\n. So, what do you think about this implementation?\n. I'm trying to automatically get zephir and regenerate /ext  at phalcon 2.0 travis-ci\n\n```\ninstall:\n - composer --prefer-source install\n - composer require phalcon/zephir:dev-master\nbefore_script:\n - git submodule --quiet update --init --recursive\n - (cd php-tests/library/Mustache; git checkout master)\n - (cd php-tests/library/Twig; git checkout master)\n - (cd phalcon; echo \"Y\" | ../vendor/bin/zephir generate)\n - (cd ext; export CFLAGS=\"-g3 -O1 -std=gnu90 -Wall\"; phpize && ./configure --enable-phalcon && make --silent -j4 && sudo make --silent install && phpenv config-add ../unit-tests/ci/phalcon.ini)\n - ulimit -c unlimited || true\n```\nBut I'm getting\n\nparser.c:9:25: fatal error: json-c/json.h: No such file or directory\n\nThen after add PR to phalcon 2.0 it will regenerate /ext and show real errors during tests.\n. > And why we need it?\nBecause installing via composer doesn't work now.\n. I added https://github.com/mruz/cphalcon/commit/2943be0fef18576eee3cc5fbc0899f4f0b420dc5\n- composer require phalcon/zephir:dev-master\n- (cd vendor/phalcon/zephir; ./unit-tests/ci/before_install.sh; ./install)\n- ./vendor/bin/zephir generate\nI just wanted to get rid of the second line.\nWhat about if I only need to install zephir via composer? When I try to run zephir on local machine, it always ask me:\n\nYou didn't install zephir. Install?\n\nMaybe info about installation is needed?\n. So, can we move apt-get install from before_install.sh  to require section in the composer.json?\n. It seems that it works now.\n. So, during checking type we should use full syntax: boolean, integer instead of short: bool, int.\n. With the latest zephir:\nzep\nclass Dump\n{\n    public function __construct(boolean detailed = false, array styles = [])\n    {\n        var_dump(styles);\n        if typeof styles != \"array\" {\n            throw new Exception(\"The styles must be an array\");\n        }\n    }\nphp\n$dump = new Dump(true);\nAnd I'm getting:\n\narray(0) { } array(0) { }\n\nand\n\nFatal error: Uncaught exception 'Pro\\Exception' with message 'The styles must be an array'\n. Seems to it works with the latest zephir.\n. I updated to a351a5e and still getting:\nZephir\\CompilerException: Unknown type: array\n. The error is gone now, but after array_merge I'm getting empty array:\narray(0) { } \n\nif I remove array type from declaration it's ok:\nzephir\npublic function test(options = [])\n\narray(1) { [\"key\"]=> string(5) \"value\" }\n. But if I remove var_dump(), the options is still empty.\n. @ovr @nkt could you help me to generate useful backtrace and locate the problem in https://github.com/ice/framework/pull/11?\n. I tried https://github.com/mruz/framework/commit/42f034b133dd886d504f38b835c82d7f65ba1514\n\nscript:\n+  - phpenv config-rm xdebug.ini\n   - ./vendor/bin/phpunit --debug -c tests/phpunit.xml --testsuite=all\n. @phalcon maybe you have any idea why backtrace does not say too much? travis jobs\n. If I disable TagTest.php then Segmentation fault doesn't occurs.. This is simple framework and require some work, so maybe there is some error, but I couldn't find where because backtrace doesn't say too much. Also on the local machine (php 5.6.2) all tests pass (TagTest too), but on travis fails.\n. https://github.com/ice/framework/pull/13 similar to https://github.com/phalcon/zephir/issues/510 but not only for php 5.3\n. @phalcon I think https://github.com/phalcon/zephir/issues/480 is not fixed and provide segmentation fault, see https://github.com/ice/framework/pull/16 please.\n. Thanks @ovr\n. One more small related issue :) I can't set the default data if extends:\n``` php\n<?php\nclass Users extends Test\n{\nprotected $_data = [\n    'id', \n    'username', \n    'password', \n];\n\n}\n```\nphp\n$user = new Users();\nvar_dump($user->getData())\nI'm trying without constructor now:\n``` zep\nclass Test\n{\nprotected _data = [\"key\": \"value\"] { set, get };\n\n}\n```\n. @phalcon does Zephir really support it?\nconfig.json\njson\n\"globals\": {\n        \"my_setting_1\": {\n            \"type\": \"bool\",\n            \"default\": true\n        },\n        \"my_setting_2\": {\n            \"type\": \"int\",\n            \"default\": 10\n        }\n    },\nand there are no directives in phpinfo() or\nphp\nvar_dump(ini_get_all('phalcon'));\n\narray(0) { }\n. @ovr can you check if it works for you?\n. @nkt maybe you have any idea?\n. gdb displays:\n\n```\nGot object file from memory but can't read symbols: File truncated.\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff6551bda in strlen () from /lib64/libc.so.6\n(gdb) bt full\n0  0x00007ffff6551bda in strlen () from /lib64/libc.so.6\nNo symbol table info available.\n1  0x0000555555b091ae in ?? ()\nNo symbol table info available.\n2  0x0000555555b09ed4 in vspprintf ()\nNo symbol table info available.\n3  0x0000555555b035d1 in ?? ()\nNo symbol table info available.\n4  0x0000555555b70c8c in zend_error ()\nNo symbol table info available.\n5  0x0000555555b6038a in zend_call_function ()\nNo symbol table info available.\n6  0x00007ffff20d430a in zephir_call_user_function () from /usr/lib64/php5/extensions/ice.so\nNo symbol table info available.\n7  0x00007ffff20d49db in zephir_call_class_method_aparams () from /usr/lib64/php5/extensions/ice.so\nNo symbol table info available.\n8  0x00007ffff2049243 in zim_Ice_Test___construct () from /usr/lib64/php5/extensions/ice.so\nNo symbol table info available.\n9  0x0000555555c27c30 in ?? ()\nNo symbol table info available.\n10 0x0000555555bad1b8 in execute_ex ()\nNo symbol table info available.\n11 0x0000555555b71bae in zend_execute_scripts ()\nNo symbol table info available.\n12 0x0000555555b06575 in php_execute_script ()\nNo symbol table info available.\n13 0x0000555555c29a9f in ?? ()\nNo symbol table info available.\n14 0x00005555559c07bb in ?? ()\nNo symbol table info available.\n15 0x00007ffff64f1b05 in __libc_start_main () from /lib64/libc.so.6\nNo symbol table info available.\n16 0x00005555559c0859 in _start ()\nNo symbol table info available.\n```\n@phalcon could you try to run this code?\n. Thanks.\nI updated zephir, run zephir fullclean and delete ext\\project folder and seems it's working now :)\n. I prefer elseif thanks for this support.\n. @ovr any progress on this issue?\n. Also if Test use eg. Di in the __constructor:\n``` zep\nnamespace Pro\\Di;\nuse Pro\\Di;\nclass Test\n{\nprotected _di;\n\npublic function __construct()\n{\n        let this->_di = Di::getDefault();\n}\n\n}\n```\nI get something like this:\n\nZephir\\CompilerException: Class name: Pro\\Users\\Di does not exist\n\nIt occurs if I set some default attribute as array in the Pro\\Users.\n. > This bug is caused because PHP is not support default array value for properties\n\nAnd we assign default array value in __constructor\n\nIt looks like it calls this assign after extends, @ovr could you confirm?\n. @steffengy could user construct calls parent construct before user?\n\nNote: Parent constructors are not called implicitly if the child class defines a constructor. In order to run a parent constructor, a call to parent::__construct() within the child constructor is required. If the child does not define a constructor then it may be inherited from the parent class just like a normal class method (if it was not declared as private).\n. ```\nPHP_METHOD(Pro_Dump, __construct) {\n\nint ZEPHIR_LAST_CALL_STATUS;\nzval *styles = NULL;\nzval *detailed_param = NULL, *styles_param = NULL, *_0, *_1;\nzend_bool detailed;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 0, 2, &detailed_param, &styles_param);\n\nif (!detailed_param) {\n    detailed = 0;\n} else {\n    detailed = zephir_get_boolval(detailed_param);\n}\nif (!styles_param) {\n    ZEPHIR_INIT_VAR(styles);\n    array_init(styles);\n} else {\n    zephir_get_arrval(styles, styles_param);\n}\n\n\nZEPHIR_INIT_VAR(_0);\narray_init(_0);\nzephir_update_property_this(this_ptr, SL(\"_styles\"), _0 TSRMLS_CC);\nZEPHIR_INIT_VAR(_1);\narray_init(_1);\nzephir_update_property_this(this_ptr, SL(\"_methods\"), _1 TSRMLS_CC);\nzephir_var_dump(&styles TSRMLS_CC);\nif (1) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(pro_exception_ce, \"The styles must be an array\", \"ice/dump.zep\", 36);\n    return;\n}\nZEPHIR_CALL_METHOD(NULL, this_ptr, \"setstyles\", NULL, styles);\nzephir_check_call_status();\nzephir_update_property_this(this_ptr, SL(\"_detailed\"), detailed ? ZEPHIR_GLOBAL(global_true) : ZEPHIR_GLOBAL(global_false) TSRMLS_CC);\nZEPHIR_MM_RESTORE();\n\n}\n``\n. Ok, thanks. It works in php so I reported this.\n. Also to const access bystatic::` https://github.com/phalcon/zephir/issues/1011\n``` zep\nclass Version\n{\n    const BUILD = 1;\npublic static function getBuild() {\n    return static::BUILD;\n}\n\n}\n```\n``` php\n<?php\nclass MyVersion extends Version\n{\n    const BUILD = 2;\n}\n```\nphp\nvar_dump(MyVersion::getBuild()); //2\n. @steffengy can I use static:: for constant/property? There is https://github.com/phalcon/zephir/pull/565 but I'm getting:\n```\nZephir\\ParseException: Syntax error in /home/mruz/Dropbox/git/ice/framework/ice/version.zep on line 30\n            return static::BUILD;\n    ---------------------------^\n\n```\n. Thanks, I didn't know about the forum.\nCould Zephir auto-detect if object have getIterator() method? What do you think?\n. At compile time, before error check if argument has iterator.\n. Also for inline code, it works for zephir but stop working for zep\n``` zep\nclass Test\n{\n    protected _tmp { get, set };\n    public function __construct()\n    {\n        var tmp;\n    let tmp = \"test\",\n        this->_tmp = tmp;\n}\n\n}\n```\n``` zephir\nclass Test\n{\n    protected _tmp { get, set };\n    public function __construct()\n    {\n        var tmp;\n    let tmp = \"test\",\n        this->_tmp = tmp;\n}\n\n}\n``\n. I'm doing that now..\n. I think this is a bug. \nIt should usei` in the loop:\nc\nfor (i = 0; i < Z_STRLEN_P(str); i++) {\nor replace inside loop:\nzep\nlet i++;\nto\nzep\n_0++;\nbecause now i++ is useless. @ovr @nkt what do you think?\n. Similar to my issue https://github.com/phalcon/zephir/issues/537\n. +1\n. I think this is done via https://github.com/phalcon/zephir/commit/cefdc33b28c674b8caf09fe1a15e488dd53cae8e.\n. Did you fetch latest zephir and run zephir generate before?\nOr try with pull request 28:\ngit fetch origin pull/28/head:pr_28\ngit checkout pr_28\n. This is parsedown bug.\nStrange, now it works fine for me too (but I reinstalled os in the meantime), so I close this issue.\n. I thought about ice/base, @ovr could you try again? Looks like this issue is by calling di->{\"getSession\"}()\n```\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff655deba in strlen () from /lib64/libc.so.6\n(gdb) bt\n0  0x00007ffff655deba in strlen () from /lib64/libc.so.6\n1  0x0000555555b0998e in ?? ()\n2  0x0000555555b0a6b4 in vspprintf ()\n3  0x0000555555b03e41 in ?? ()\n4  0x0000555555b716ac in zend_error ()\n5  0x0000555555b611aa in zend_call_function ()\n6  0x00007ffff1f0ea1d in zephir_call_user_function () from /usr/lib64/php5/extensions/ice.so\n7  0x00007ffff1f1b805 in zephir_call_class_method_aparams () from /usr/lib64/php5/extensions/ice.so\n8  0x00007ffff1e5fa44 in zim_Ice_Flash___construct () from /usr/lib64/php5/extensions/ice.so\n9  0x0000555555c27690 in ?? ()\n10 0x0000555555bad658 in execute_ex ()\n11 0x0000555555b725ce in zend_execute_scripts ()\n12 0x0000555555b06de5 in php_execute_script ()\n13 0x0000555555c292cf in ?? ()\n14 0x00005555559c09eb in ?? ()\n15 0x00007ffff64feb45 in __libc_start_main () from /lib64/libc.so.6\n16 0x00005555559c0a89 in _start ()\n```\n. As @steffengy said https://github.com/phalcon/zephir/commit/e1a78ce707b408d1ce80740890478aef56a764ad#commitcomment-9085572 maybe it calls wrong method?\n@andresgutierrez why this was previously:\nc\n    /* Cache Enabled */\n-#if PHP_VERSION_ID < 50600\n    zephir_globals->cache_enabled = 1;\n-#else\n-   zephir_globals->cache_enabled = 0;\n-#endif\n. The same issue https://github.com/phalcon/zephir/issues/721\n. On the latest zephir I'm still getting Segmentation fault:\n```\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000000000 in ?? ()\n(gdb) bt\n0  0x0000000000000000 in ?? ()\n1  0x0000555555b61023 in zend_call_function ()\n2  0x00007ffff1f3352d in zephir_call_user_function () from /usr/lib64/php5/extensions/ice.so\n3  0x00007ffff1f3b205 in zephir_call_class_method_aparams () from /usr/lib64/php5/extensions/ice.so\n4  0x00007ffff1ec8ae4 in zim_Ice_Flash___construct () from /usr/lib64/php5/extensions/ice.so\n5  0x0000555555c276a0 in ?? ()\n6  0x0000555555bad668 in execute_ex ()\n7  0x0000555555b725de in zend_execute_scripts ()\n8  0x0000555555b06df5 in php_execute_script ()\n9  0x0000555555c292df in ?? ()\n10 0x00005555559c09fb in ?? ()\n11 0x00007ffff64fdb45 in __libc_start_main () from /lib64/libc.so.6\n12 0x00005555559c0a99 in _start ()\n```\nPHP 5.6.4\nnginx/1.6.2\nI also tried with PHP 5.6.5\n. First calling getSession is in the auth/driver.zep and it's OK, but second (in the Flash constructor) not. I think fcache is responsible for that. The body of magic call is in the di.zep.\n. I fetch the changes:\ngit fetch origin pull/738/head:fix_fcache\ngit checkout fix_fcache\nand seems that it works. Thanks ;)\n. @gsouf can I access to version from config.json in the main layout?\n. @gsouf OK thanks, I'm waiting for the update.\nI have one more question, how to display docblock for the classes? I did try:\nphp\n<?= $classDefinition->getParsedDocBlock()->getDescription() ?>\n. @gsouf thanks!\n. @gsouf stubs already parsing docblock https://github.com/phalcon/zephir/issues/713\n. In the themes/ice/partials/class/content.phtml I'm using:\nphp\n<?php $docblock = $classDefinition->getParsedDocBlock(); ?>\nand\nphp\n<?php if ($docblock) { ?>\n    <div class=\"text-muted\">\n    <?= $docblock->getSummary() ?>\n    </div>\n    <div>\n    <?= $docblock->getDescription() ?>\n    </div>\n<?php } ?>\nAnd now it works ;) but there is no spaces in the docs:\n\n$validation=newIce\\Validation();$validation->rules(['fullName'=>'required','email'=>'required|email','repeatEmail'=>'same:email','about'=>'required|length:10,5000',]);$valid=$validation->validate($_POST);if(!$valid){$messages=$validation->getMessages();}\n\n@gsouf @ovr any idea?\n. Yes, no new lines and no spaces. In the source code:\nhtml\n<pre><code>$validation=newIce\\Validation();$validation->rules(['fullName'=>'required','email'=>'required|email','repeatEmail'=>'same:email','about'=>'required|length:10,5000',]);$valid=$validation->validate($_POST);if(!$valid){$messages=$validation->getMessages();}</code></pre>\n. I found it occurs if some tags exists, eg. @package:\n* @package     Ice/Validation\n *\n * <pre><code>\n *  $validation = new Ice\\Validation();\n *  \n *  $validation->rules([\n *      'fullName' => 'required',\n *      'email' => 'required|email',\n *      'repeatEmail' => 'same:email',\n *      'about' => 'required|length:10,5000',\n *  ]);\n *  \n *  $valid = $validation->validate($_POST);\n *  \n *  if (!$valid) {\n *      $messages = $validation->getMessages();\n *  }\n * </code></pre>\n */\n. @gsouf you can see it at my theme. I added docblock, but it looks like in http://doc.iceframework.org/latest/class/Ice/Validation.html. If I remove tags @package, category, etc. from the source http://doc.iceframework.org/latest/source/Ice/Validation.html it generates properly with spaces.\n. Also if I have subarray:\n``` zep\nclass Test\n{\nprotected _options = [\n    \"success\": [\"class\": \"alert alert-success\"],\n    \"info\": [\"class\": \"alert alert-info\"],\n    \"warning\": [\"class\": \"alert alert-warning\"],\n    \"danger\": [\"class\": \"alert alert-danger\"]\n];\n\n```\n\nPHP Notice:  Undefined index: value in /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/Library/ClassProperty.php on line 104\nNULL\n\nand\n``` php\nprotected $_options = array( , , , );\n``\n. @ovr any progress on this?\n. @phalcon  for thestr_replace` see the https://github.com/phalcon/zephir/issues/516#issuecomment-65607999 also, please.\n. What about?\nzep\nfor i in range(0, 9) {\n    echo i;\n}\n. @steffengy can I add checking if global function with this name exist before?\n. With single _ char works, also with other name like t, but I just like to use __ :) \nThe $ does not change anything, because it is used for zephir reserved words only.\n. @phalcon https://github.com/phalcon/zephir/commit/425385e4287ff0b6c0929110753a8881e9bb86d0 any idea to also allow double underscores as identifier?\n. @andresgutierrez Is it enough to add this to the parser/scanner.re?\nif (token->len == 2 && !memcmp(token->value, \"__\", sizeof(\"__\")-1)) {\n        token->opcode = XX_T_IDENTIFIER;\n        return 0;\n}\n. ``` zep\npublic function s(int b)\n    {\n        string a = \"\";\n    switch b {\n        case 1:\n            let a .= \"1\";\n        case 2:\n            let a .= \"2\";\n        case 3:\n            let a .= \"3\";\n    }\n\n    return a;\n}\n\n```\nRunning s(1) should return 123, s(2) should return 23 but it works like with break; and returns 1 for s(1), 2 for s(2).\n. Duplicated https://github.com/phalcon/zephir/issues/732\n. Temporarily you can use loop like in friendlyTitle https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/tag.zep#L1370\n. I'm aware of this, I just wanted to see what stops the compilation.\n. Instead of throwing error it could assume false:\nzep\nif typeof this->validation == \"object\" && (this->validation instanceof Validation)  && this->validation->valid() {\n}\nzep\nif this->validation instanceof Validation  && this->validation->valid() {}\nAlso https://github.com/phalcon/zephir/issues/277 would be helpful:\nzep\nif !validation instanceof Validation {}\n. Could you try to run ice/framework and ice/hello?\n. I did back to https://github.com/phalcon/zephir/commit/9ba79125bc59f65aedd40f840b33a5a4b3ff8af8, so update composer.json before run zephir build please:\n\"phalcon/zephir\": \"dev-master\"\n. Thanks.\n. How about to specify the types?\nzep\npublic function foo() -> int | boolean\n{\n   ...\n}\n. After this commit I receive:\n```\nvar 0 string (49) \"ErrorException[2]: First argument is not an array\"\nvar 1 string (55) \"/home/mruz/Dropbox/git/ice/base/app/Application.php[110]\"\nvar 2 string (297) \"Trace: \n0 /home/mruz/Dropbox/git/ice/base/app/Application.php(110): Ice\\Auth\\Driver->__construct(Array)\n1 /home/mruz/Dropbox/git/ice/base/app/Application.php(73): App\\Application->registerServices()\n2 /home/mruz/Dropbox/git/ice/base/public/index.php(30): App\\Application->initialize()\n```\nI'm running ice/base and in the Application.php[110] it create new auth model\nice/auth/driver/model.zep which extends ice/auth/driver.zep\n. @steffengy it seems that it works\n. But:\n```\nvar 0 string (80) \"ErrorException[2]: array_fill_keys() expects parameter 1 to be array, null given\"\n0 [internal function]: array_fill_keys(NULL, NULL)\n1 [internal function]: Ice\\Mvc\\Model->__construct(Array)\n2 [internal function]: Ice\\Mvc\\Model::findOne(Array)\n3 /app/modules/frontend/controllers/UserController.php(700): Ice\\Auth\\Driver\\Model->login('user', 'user', false)\n```\nIn the ice/mvc/model.zep _fields attribute should be an empty array.\n. ```\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000555555b92710 in gc_remove_zval_from_buffer ()\n(gdb) bt full\n0  0x0000555555b92710 in gc_remove_zval_from_buffer ()\nNo symbol table info available.\n1  0x0000555555b5ec98 in _zval_ptr_dtor ()\nNo symbol table info available.\n2  0x00007ffff0f32b5d in zephir_memory_restore_stack_common.4592.constprop () from /usr/lib64/php5/extensions/ice.so\nNo symbol table info available.\n3  0x00007ffff0f32c0d in zm_deactivate_ice () from /usr/lib64/php5/extensions/ice.so\nNo symbol table info available.\n4  0x0000555555b77854 in zend_deactivate_modules ()\nNo symbol table info available.\n5  0x0000555555b04c0d in php_request_shutdown ()\nNo symbol table info available.\n6  0x0000555555c2948a in ?? ()\nNo symbol table info available.\n7  0x00005555559bf29b in ?? ()\nNo symbol table info available.\n8  0x00007ffff648b8c5 in __libc_start_main () from /lib64/libc.so.6\nNo symbol table info available.\n9  0x00005555559bf339 in _start ()\nNo symbol table info available.\n```\n. I'm sending model's constructor:\n``` c\n/\n * Model constructor. Fetch Di and set it as a property.\n \n * @param mixed filters\n * @param array data\n /\nPHP_METHOD(Ice_Mvc_Model, __construct) {\n    int ZEPHIR_LAST_CALL_STATUS;\n    zephir_fcall_cache_entry *_0 = NULL, *_7 = NULL;\n    zval *data = NULL;\n    zval *filters = NULL, *data_param = NULL, *di = NULL, *_1 = NULL, *_2 = NULL, *_3 = NULL, *_4 = NULL, *_5, *_6 = NULL, *_8, *_9, *_10, *_11 = NULL;\n\n    ZEPHIR_MM_GROW();\n    zephir_fetch_params(1, 0, 2, &filters, &data_param);\n\n    if (!filters) {\n            filters = ZEPHIR_GLOBAL(global_null);\n    }\n    if (!data_param) {\n            ZEPHIR_INIT_VAR(data);\n            array_init(data);\n    } else {\n            zephir_get_arrval(data, data_param);\n    }\n\n\n    if (EG(called_scope) == ice_mvc_model_ce || EG(scope) == NULL) {\n            zephir_init_properties(this_ptr TSRMLS_CC);\n    }\n    ZEPHIR_CALL_CE_STATIC(&di, ice_di_ce, \"fetch\", &_0, 8);\n    zephir_check_call_status();\n    zephir_update_property_this(this_ptr, SL(\"_di\"), di TSRMLS_CC);\n    ZEPHIR_INIT_VAR(_2);\n    ZVAL_STRING(_2, \"db\", ZEPHIR_TEMP_PARAM_COPY);\n    ZEPHIR_INIT_VAR(_3);\n    ZVAL_NULL(_3);\n    ZEPHIR_INIT_VAR(_4);\n    ZVAL_BOOL(_4, 1);\n    ZEPHIR_CALL_METHOD(&_1, di, \"get\", NULL, 0, _2, _3, _4);\n    zephir_check_temp_parameter(_2);\n    zephir_check_call_status();\n    zephir_update_property_this(this_ptr, SL(\"_db\"), _1 TSRMLS_CC);\n    ZEPHIR_INIT_NVAR(_2);\n    _5 = zephir_fetch_nproperty_this(this_ptr, SL(\"_fields\"), PH_NOISY_CC);\n    ZEPHIR_CALL_FUNCTION(&_6, \"array_fill_keys\", NULL, 107, _5, ZEPHIR_GLOBAL(global_null));\n    zephir_check_call_status();\n    zephir_fast_array_merge(_2, &(_6), &(data) TSRMLS_CC);\n    ZEPHIR_CPY_WRT(data, _2);\n    ZEPHIR_CALL_PARENT(NULL, ice_mvc_model_ce, this_ptr, \"__construct\", &_7, 6, data);\n    zephir_check_call_status();\n    _8 = zephir_fetch_nproperty_this(this_ptr, SL(\"_from\"), PH_NOISY_CC);\n    if (!(zephir_is_true(_8))) {\n            ZEPHIR_INIT_NVAR(_3);\n            ZEPHIR_INIT_NVAR(_4);\n            zephir_get_class_ns(_4, this_ptr, 0 TSRMLS_CC);\n            zephir_uncamelize(_3, _4);\n            zephir_update_property_this(this_ptr, SL(\"_from\"), _3 TSRMLS_CC);\n    }\n    _9 = zephir_fetch_nproperty_this(this_ptr, SL(\"_primary\"), PH_NOISY_CC);\n    if (!(zephir_is_true(_9))) {\n            _10 = zephir_fetch_nproperty_this(this_ptr, SL(\"_db\"), PH_NOISY_CC);\n            ZEPHIR_CALL_METHOD(&_11, _10, \"getid\", NULL, 0);\n            zephir_check_call_status();\n            zephir_update_property_this(this_ptr, SL(\"_primary\"), _11 TSRMLS_CC);\n    }\n    if ((zephir_method_exists_ex(this_ptr, SS(\"onconstruct\") TSRMLS_CC) == SUCCESS)) {\n            ZEPHIR_CALL_METHOD(NULL, this_ptr, \"onconstruct\", NULL, 0);\n            zephir_check_call_status();\n    }\n    if (zephir_is_true(filters)) {\n            ZEPHIR_CALL_METHOD(NULL, this_ptr, \"loadone\", NULL, 0, filters);\n            zephir_check_call_status();\n    }\n    if ((zephir_method_exists_ex(this_ptr, SS(\"initialize\") TSRMLS_CC) == SUCCESS)) {\n            ZEPHIR_CALL_METHOD(NULL, this_ptr, \"initialize\", NULL, 0);\n            zephir_check_call_status();\n    }\n    ZEPHIR_MM_RESTORE();\n\n}\n```\nYou can run ice framework and base. I can give you the steps. Also for me the trace is useless in this case.\n. ``` sh\nInstall ice\ncomposer create-project iceframework/framework\ncd framework/vendor/phalcon/zephir\ngit fetch origin pull/1005/head:pr_1005\ngit checkout pr_1005\n./install-json\n./install\ncd ../../../\n./vendor/bin/zephir fullclean \n./vendor/bin/zephir build\nAdd ice to php.ini and don't forget to restart your web server\nGet the ice/base\ncomposer create-project iceframework/base --no-dev\ncd base/\nCreate db\nmysql -u root -p\nCREATE DATABASE demo_base CHARACTER SET utf8 COLLATE utf8_general_ci;\nGRANT USAGE ON demo_base. TO demo@localhost;\nGRANT ALL ON demo_base. TO demo@localhost IDENTIFIED BY 'demo';\nflush privileges;\nuse demo_base;\nsource auth.sql;\nquit;\nPrepare chmod\nphp private/index.php --handler=prepare --action=chmod\nSwitch to root\nsu\nRun as webserver\nsudo -u wwwrun gdb php\nrun public/index.php\nbt full\n``\n. Again looks like_fields` attribute is not initialized before (it's array):\n```\nvar 0 string (80) \"ErrorException[2]: array_fill_keys() expects parameter 1 to be array, null given\"\nvar 1 string (87) \"/home/mruz/Dropbox/git/ice/base/app/modules/frontend/controllers/UserController.php[88]\"\nvar 2 string (712) \"Trace: \n0 [internal function]: array_fill_keys(NULL, NULL)\n1 [internal function]: Ice\\Mvc\\Model->__construct()\n2 [internal function]: Ice\\Auth\\Driver\\Model\\Users->__construct(Array)\n3 [internal function]: Ice\\Mvc\\Model::findOne(Array)\n4 /home/mruz/Dropbox/git/ice/base/app/modules/frontend/controllers/UserController.php(88): Ice\\Auth\\Driver\\Model->login('user', 'user', false)\n5 [internal function]: App\\Modules\\Frontend\\Controllers\\UserController->signinAction()\n6 [internal function]: Ice\\Dispatcher->dispatch()\n7 /home/mruz/Dropbox/git/ice/base/app/Application.php(203): Ice\\Mvc\\App->handle(NULL, NULL)\n8 /home/mruz/Dropbox/git/ice/base/public/index.php(31): App\\Application->handle()\n9 {main}\n``\n. The same error witharray_fill_keys()during user login, yes I ranzephir fullclean.\n. I have problem with [config/ini.zep](https://github.com/ice/framework/blob/dev/ice/config/ini.zep) constructor_data` is empty\nobject(Ice\\Config\\Ini)#6 (1) {\n  [\"_data\":protected]=>\n  array(0) {\n  }\n}\nhttp://pastebin.com/Sms4WDwY\n. I think loadOne() not work in the constructor, it should overwrite the _data, but there is empty array.\n``` c\n/\n * Model constructor. Fetch Di and set it as a property.\n \n * @param mixed filters\n * @param array data\n /\nPHP_METHOD(Ice_Mvc_Model, __construct) {\nint ZEPHIR_LAST_CALL_STATUS;\nzephir_fcall_cache_entry *_0 = NULL, *_7 = NULL;\nzval *data = NULL;\nzval *filters = NULL, *data_param = NULL, *di = NULL, *_1 = NULL, *_2 = NULL, *_3 = NULL, *_4 = NULL, *_5, *_6 = NULL, *_8, *_9, *_10, *_11 = NULL;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 0, 2, &filters, &data_param);\n\nif (!filters) {\n    filters = ZEPHIR_GLOBAL(global_null);\n}\nif (!data_param) {\n    ZEPHIR_INIT_VAR(data);\n    array_init(data);\n} else {\n    zephir_get_arrval(data, data_param);\n}\n\n\nif (EG(called_scope) == ice_mvc_model_ce) {\n    zephir_init_properties(this_ptr TSRMLS_CC);\n}\nZEPHIR_CALL_CE_STATIC(&di, ice_di_ce, \"fetch\", &_0, 8);\nzephir_check_call_status();\nzephir_update_property_this(this_ptr, SL(\"_di\"), di TSRMLS_CC);\nZEPHIR_INIT_VAR(_2);\nZVAL_STRING(_2, \"db\", ZEPHIR_TEMP_PARAM_COPY);\nZEPHIR_INIT_VAR(_3);\nZVAL_NULL(_3);\nZEPHIR_INIT_VAR(_4);\nZVAL_BOOL(_4, 1);\nZEPHIR_CALL_METHOD(&_1, di, \"get\", NULL, 0, _2, _3, _4);\nzephir_check_temp_parameter(_2);\nzephir_check_call_status();\nzephir_update_property_this(this_ptr, SL(\"_db\"), _1 TSRMLS_CC);\nZEPHIR_INIT_NVAR(_2);\n_5 = zephir_fetch_nproperty_this(this_ptr, SL(\"_fields\"), PH_NOISY_CC);\nZEPHIR_CALL_FUNCTION(&_6, \"array_fill_keys\", NULL, 105, _5, ZEPHIR_GLOBAL(global_null));\nzephir_check_call_status();\nzephir_fast_array_merge(_2, &(_6), &(data) TSRMLS_CC);\nZEPHIR_CPY_WRT(data, _2);\nZEPHIR_CALL_PARENT(NULL, ice_mvc_model_ce, this_ptr, \"__construct\", &_7, 6, data);\nzephir_check_call_status();\n_8 = zephir_fetch_nproperty_this(this_ptr, SL(\"_from\"), PH_NOISY_CC);\nif (!(zephir_is_true(_8))) {\n    ZEPHIR_INIT_NVAR(_3);\n    ZEPHIR_INIT_NVAR(_4);\n    zephir_get_class_ns(_4, this_ptr, 0 TSRMLS_CC);\n    zephir_uncamelize(_3, _4);\n    zephir_update_property_this(this_ptr, SL(\"_from\"), _3 TSRMLS_CC);\n}\n_9 = zephir_fetch_nproperty_this(this_ptr, SL(\"_primary\"), PH_NOISY_CC);\nif (!(zephir_is_true(_9))) {\n    _10 = zephir_fetch_nproperty_this(this_ptr, SL(\"_db\"), PH_NOISY_CC);\n    ZEPHIR_CALL_METHOD(&_11, _10, \"getid\", NULL, 0);\n    zephir_check_call_status();\n    zephir_update_property_this(this_ptr, SL(\"_primary\"), _11 TSRMLS_CC);\n}\nif ((zephir_method_exists_ex(this_ptr, SS(\"onconstruct\") TSRMLS_CC) == SUCCESS)) {\n    ZEPHIR_CALL_METHOD(NULL, this_ptr, \"onconstruct\", NULL, 0);\n    zephir_check_call_status();\n}\nif (zephir_is_true(filters)) {\n    ZEPHIR_CALL_METHOD(NULL, this_ptr, \"loadone\", NULL, 0, filters);\n    zephir_check_call_status();\n}\nif ((zephir_method_exists_ex(this_ptr, SS(\"initialize\") TSRMLS_CC) == SUCCESS)) {\n    ZEPHIR_CALL_METHOD(NULL, this_ptr, \"initialize\", NULL, 0);\n    zephir_check_call_status();\n}\nZEPHIR_MM_RESTORE();\n\n}\n```\n. Is called on auth/driver/model/users.zep, eg.\nphp\n$user = new \\Ice\\Auth\\Driver\\Model\\Users([\"username\" => 'user']);\n// or\n$user = \\Ice\\Auth\\Driver\\Model\\Users::findOne([\"username\" => 'user']);\n. Not everything works:\n```\nvar 0 string (80) \"ErrorException[2]: array_fill_keys() expects parameter 1 to be array, null given\"\nvar 1 string (84) \"/app/modules/frontend/controllers/UserController.php[90]\"\nvar 2 string (660) \"Trace: \n0 [internal function]: array_fill_keys(NULL, NULL)\n1 [internal function]: Ice\\Mvc\\Model->__construct('1', Array)\n2 [internal function]: Ice\\Auth\\Driver\\Model\\Users->__construct('1')\n3 /app/modules/frontend/controllers/UController.php(90): Ice\\Mvc\\Model::findOne('1')\n4 [internal function]: App\\Modules\\Frontend\\Controllers\\UserController->activationAction('1', '065ff0949c7403c28ff75960e242e62a')\n```\nIn the 90 line \nphp\n$user = App\\Models\\Users::findOne($id);\nApp\\Models\\Users extends Ice\\Auth\\Driver\\Model\\Users, but in the #3 Ice\\Mvc\\Model is called first\n. > App\\Models\\Users is a PHP defined-class?\nYes\n. Well you guessed, there is no constructor in the App\\Models\\Users.\n. Why in the trace step3 is Ice\\Mvc\\Model::findOne('1') instead of App\\Models\\Users::findOne('1')?\n. All my test pass, it seems it works now.\nThanks for fixing ;)\nI will test #537 if working now.\n. I think \"Can't overwrite the default array data if extends\" issue sitll occurs, but I worked it out with this by onConstruct() and setRules(), Users.php.\n. How about if extends in php scope?\n``` php\n<?php\nclass PhpPublicPropertiesTest extends \\Test\\Properties\\PublicProperties\n{\nprotected someGetterSetterArray = ['doly'];\n\n}\n```\nphp\n$test = new PhpPublicPropertiesTest();\nvar_dump($test->getSomeGetterSetterArray());\n. @steffengy yes this is fixed, I see #537 too. \nThanks for your work and cooperation :)\n. Also it could be nice to can acces to const by static https://github.com/phalcon/cphalcon/pull/10515\n``` zep\nclass A\n{\n    const VERSION = 1;\npublic static function getVersion()\n{\n    return static::VERSION;\n}\n\n}\nclass B extends A\n{\n    const VERSION = 2;\n}\n```\nphp\nvar_dump(B::getVersion()); //2\n@ogarbe is this related to https://github.com/phalcon/zephir/issues/513?\n. ``` zep\nclass Version\n{\nconst DEV = 0;\nconst ALPHA = 1;\nconst BETA = 2;\nconst RC = 3;\nconst STABLE = 4;\n\nconst MAJOR = 1;\nconst MINOR = 0;\nconst PATCH = 14;\nconst STAGE = self::STABLE;\nconst BUILD = 1;\n\n```\n\nException: Cannot resolve constant\n\nIf I replace by class name:\nzep\n    const STAGE = Version::STABLE;\n\nPHP Warning:  require(/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/LibraryVersion.php): failed to open stream: No such file or directory in /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/Library/Loader.php on line 48\nPHP Fatal error:  require(): Failed opening required '/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/LibraryVersion.php' (include_path='.:/usr/share/php5:/usr/share/php5/PEAR') in /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/Library/Loader.php on line 48\n. After updating version works, thanks ;)\n. I see it happens after https://github.com/phalcon/zephir/commit/e50499b5d8c872526b4dc0615b6d27a08780154b @andresgutierrez could you look at this?\n. No. I also don't have a reference to the messages property in Ice\\Config.\n. @ovr @steffengy any idea? Can you try to build the ice/framework with the latest zephir?\n. @steffengy this is related to your changes https://github.com/phalcon/zephir/pull/980 @andresgutierrez removed it in https://github.com/phalcon/zephir/commit/e50499b5d8c872526b4dc0615b6d27a08780154b.\nI see compiler throw exception about Config property, but the messages property is from Ice\\Mvc\\Model. Maybe not clean access before?\n\nIf I add messages to Config, then:\n\nZephir\\CompilerException: Class 'Ice\\Config' does not have a property called: 'rules'\n\nIf I add rules, then\n\nZephir\\CompilerException: Class 'Ice\\Config' does not have a property called: 'labels'\n\n...\n\nZephir\\CompilerException: Class 'Ice\\Config' does not have a property called: 'relations'\n. What is the difference to get and getFallback()?\n\n``` zep\nnamespace App;\nclass MyClass\n{\n    protected fallback = true {\n        set, get\n    };\n}\n``\n. @steffengy I see it happens after https://github.com/phalcon/zephir/commit/a131818066ac296acb7e558e6b475cffd6fb5a38\n. It seems that it works, but I have other issuse,zephir_create_array(&_1$$3` looks strange:\n``` c\nstatic zend_object zephir_init_properties_Ice_Http_Response(zend_class_entry class_type TSRMLS_DC) {\n            zval _1$$3;\n    zval _0;\n            ZVAL_UNDEF(&_0);\n    ZVAL_UNDEF(&_1$$3);\n\n            ZEPHIR_MM_GROW();\n\n    {\n            zval local_this_ptr, *this_ptr = &local_this_ptr;\n            ZEPHIR_CREATE_OBJECT(this_ptr, class_type);\n            zephir_read_property(&_0, this_ptr, SL(\"messages\"), PH_NOISY_CC | PH_READONLY);\n            if (Z_TYPE_P(&_0) == IS_NULL) {\n                    ZEPHIR_INIT_VAR(&_1$$3);\n                    zephir_create_array(&_1$$3, 60, 0 TSRMLS_CC);\n                    add_index_stringl(&_1$$3, 100, SL(\"Continue\"));\n\n```\n/home/travis/build/ice/framework/ext/ice/http/response.zep.c: In function \u2018zephir_init_properties_Ice_Http_Response\u2019:\n/home/travis/build/ice/framework/ext/ice/http/response.zep.c:1069:4: error: incompatible type for argument 1 of \u2018zephir_create_array\u2019\n./kernel/array.h:30:22: note: expected \u2018struct zval *\u2019 but argument is of type \u2018zval\u2019\n/home/travis/build/ice/framework/ext/ice/http/response.zep.c: At top level:\n. You are right, I probably took the error from https://travis-ci.org/ice/framework/jobs/91078089#L1927 but code from the local machine.\n. I added debug to the travis: cat ext/ice/http/response.zep.c\ncode\nhttps://travis-ci.org/ice/framework/jobs/91106235#L1333\nerror\nhttps://travis-ci.org/ice/framework/jobs/91106235#L3065\nit's _1$$3, not &_1$$3 and why this strange name? before https://github.com/phalcon/zephir/commit/f68701626f413379565b6e1ebc33df23c8e41bcb was just _1\nhttps://github.com/ice/framework/blob/dev/ext/ice/http/response.zep.c#L785\n. Do you mean https://github.com/phalcon/zephir/issues/1099?\n. OK. \nI see difference, on travis error and _1$$3, on local no error and &_1$$3 on PHP 7.0.0RC6 (cli) ( NTS )\n. Also I have problem with getValue() and global _POST:\n``` zep\npublic function getValue(string name)\n    {\n        var value;\n    // Check if there is a predefined value for it\n    if !fetch value, _POST[name] {\n        // Check if there is a post value for the item\n        if !fetch value, this->values[name] {\n            return null;\n        }\n    }\n\n    return value;\n}\n\n```\nPHP7\n``` c\nPHP_METHOD(Ice_Tag, getValue) {\n    zval *name_param = NULL, _POST, value, _0$$3;\n    zval name;\n            zval this_zv;\n    zval *this_ptr = getThis();\n    if (EXPECTED(this_ptr)) {\n            ZVAL_OBJ(&this_zv, Z_OBJ_P(this_ptr));\n            this_ptr = &this_zv;\n    } else this_ptr = NULL;\n\n    ZVAL_UNDEF(&name);\n    ZVAL_UNDEF(&_POST);\n    ZVAL_UNDEF(&value);\n    ZVAL_UNDEF(&_0$$3);\n\n    ZEPHIR_MM_GROW();\n    zephir_get_global(&_POST, SL(\"_POST\"));\n    zephir_fetch_params(1, 1, 0, &name_param);\n\n    zephir_get_strval(&name, name_param);\n\n\n    ZEPHIR_OBS_VAR(&value);\n    if (!(zephir_array_isset_fetch(&value, &_POST, &name, 0 TSRMLS_CC))) {\n            ZEPHIR_OBS_NVAR(&value);\n            zephir_read_property(&_0$$3, this_ptr, SL(\"values\"), PH_NOISY_CC | PH_READONLY);\n            if (!(zephir_array_isset_fetch(&value, &_0$$3, &name, 0 TSRMLS_CC))) {\n                    RETURN_MM_NULL();\n            }\n    }\n    RETURN_CCTOR(value);\n\n}\n```\nPHP5.6\n``` c\nPHP_METHOD(Ice_Tag, getValue) {\nzval *name_param = NULL, *_POST, *value = NULL, *_0$$3;\nzval *name = NULL;\n\nZEPHIR_MM_GROW();\nzephir_get_global(&_POST, SS(\"_POST\") TSRMLS_CC);\nzephir_fetch_params(1, 1, 0, &name_param);\n\nzephir_get_strval(name, name_param);\n\n\nZEPHIR_OBS_VAR(value);\nif (!(zephir_array_isset_fetch(&value, _POST, name, 0 TSRMLS_CC))) {\n    ZEPHIR_OBS_NVAR(value);\n    _0$$3 = zephir_fetch_nproperty_this(this_ptr, SL(\"values\"), PH_NOISY_CC);\n    if (!(zephir_array_isset_fetch(&value, _0$$3, name, 0 TSRMLS_CC))) {\n        RETURN_MM_NULL();\n    }\n}\nRETURN_CCTOR(value);\n\n}\n```\nLooks like fetch value, _POST[name] not fetching on PHP7, but fetching from this->values.\n. PHP7: Strange, #1131 on the local machine and similar code on ice https://travis-ci.org/ice/framework/jobs/91370787 fails, but if I add some reference to _POST before fetch it works, similar to https://github.com/phalcon/zephir/issues/159\n``` php\n    public function testPost()\n    {\n        $t = new \\Test\\FetchTest();\n    $_POST = array(\n        1 => 'one',\n        'two' => 2,\n        'three' => array(3)\n    );\n\n    // add some reference before fetch, then tests pass\n    var_dump($POST);\n\n    $this->assertEquals($t->testFetchPost(1), 'one');\n    $this->assertEquals($t->testFetchPost('two'), 2);\n    $this->assertEquals($t->testFetchPost('three'), array(3));\n}\n\n```\n@steffengy @ovr any ideas?\nI see if there is no reference eg. var_dump($POST); before and run fetch then the _POST is empty\n. Could you try to add:\n``` zep\n/*\n * Fetch statement tests\n /\nnamespace Ice;\nclass FetchTest\n{\npublic function testFetchPost(var b)\n{\n    var c;\n    if !fetch c, _POST[b] {\n        return false;\n    }\n\n    return c;\n}\n\n}\n```\nAnd run test on PHP7:\n``` php\npublic function testPost()\n    {\n        $t = new \\Ice\\FetchTest();\n    $_POST = array(\n        1 => 'one',\n        'two' => 2,\n        'three' => array(3)\n    );\n\n    $this->assertEquals($t->testFetchPost(1), 'one');\n    $this->assertEquals($t->testFetchPost('two'), 2);\n    $this->assertEquals($t->testFetchPost('three'), array(3));\n}\n\n```\n. I know, but it fails on local machine, so could you try to build ice on PHP7 and run test TagTest?:\ncd framework/\n./vendor/bin/zephir build\n./vendor/bin/phpunit --configuration tests/phpunit.xml tests/TagTest.php\n. I do not know what more I can do, I did copy fetchtest.zep and FetchTest.php into ice https://github.com/mruz/framework/commit/b87f5b3606d4950905498353c394d1c73dc93464 and build fails on PHP7 https://travis-ci.org/ice/framework/builds/92916552.\n. I reproduced it at https://travis-ci.org/phalcon/zephir/builds/93311637, so @steffengy is this a phpunit issue or what?\n. Also\n``` zep\nprotected function dispatchVariableRoute(routeData, uri)\n    {\n        var data, matches, handler, varName, varNames, vars;\n        int i, j;\n    let matches = [];\n\n    for data in routeData {\n        if !preg_match(data[\"regex\"], uri, matches) {\n            continue;\n        }\n\n        let j = count(matches),\n            handler = data[\"routeMap\"][j][0],\n            varNames = data[\"routeMap\"][j][1];\n\n        let vars = [],\n            i = 0;\n\n        for varName in varNames {\n            let i++,\n                vars[varName] = matches[i];\n        }\n\n        return [Router::FOUND, handler, vars];\n    }\n\n    return [Router::NOT_FOUND];\n}\n\n```\n``` c\nPHP_METHOD(Ice_Mvc_Route_Dispatcher_GroupCount, dispatchVariableRoute) {\n    int i = 0, j = 0;\n    zval *routeData, routeData_sub, *uri, uri_sub, data, matches, handler, varName, varNames, vars, *_0, _10, _1$$3, _2$$3, _3$$3, _4$$3, _5$$3, _6$$3, *_7$$3, _9$$3, _8$$5;\n            zval this_zv;\n    zval *this_ptr = getThis();\n    if (EXPECTED(this_ptr)) {\n            ZVAL_OBJ(&this_zv, Z_OBJ_P(this_ptr));\n            this_ptr = &this_zv;\n    } else this_ptr = NULL;\n\n    ZVAL_UNDEF(&routeData_sub);\n    ZVAL_UNDEF(&uri_sub);\n    ZVAL_UNDEF(&data);\n    ZVAL_UNDEF(&matches);\n    ZVAL_UNDEF(&handler);\n    ZVAL_UNDEF(&varName);\n    ZVAL_UNDEF(&varNames);\n    ZVAL_UNDEF(&vars);\n    ZVAL_UNDEF(&_10);\n    ZVAL_UNDEF(&_1$$3);\n    ZVAL_UNDEF(&_2$$3);\n    ZVAL_UNDEF(&_3$$3);\n    ZVAL_UNDEF(&_4$$3);\n    ZVAL_UNDEF(&_5$$3);\n    ZVAL_UNDEF(&_6$$3);\n    ZVAL_UNDEF(&_9$$3);\n    ZVAL_UNDEF(&_8$$5);\n\n    ZEPHIR_MM_GROW();\n    zephir_fetch_params(1, 2, 0, &routeData, &uri);\n\n    ZEPHIR_INIT_VAR(&matches);\n    array_init(&matches);\n    zephir_is_iterable(routeData, 0, \"ice/mvc/route/dispatcher/groupcount.zep\", 48);\n    ZEND_HASH_FOREACH_VAL(Z_ARRVAL_P(routeData), _0)\n    {\n            ZEPHIR_INIT_NVAR(&data);\n            ZVAL_COPY(&data, _0);\n            ZEPHIR_INIT_NVAR(&_1$$3);\n            zephir_array_fetch_string(&_2$$3, &data, SL(\"regex\"), PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 29 TSRMLS_CC);\n            zephir_preg_match(&_1$$3, &_2$$3, uri, &matches, 0, 0 , 0  TSRMLS_CC);\n            if (!(zephir_is_true(&_1$$3))) {\n                    continue;\n            }\n            j = zephir_fast_count_int(&matches TSRMLS_CC);\n            zephir_array_fetch_string(&_3$$3, &data, SL(\"routeMap\"), PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 34 TSRMLS_CC);\n            zephir_array_fetch_long(&_4$$3, &_3$$3, j, PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 34 TSRMLS_CC);\n            zephir_array_fetch_long(&handler, &_4$$3, 0, PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 34 TSRMLS_CC);\n            zephir_array_fetch_string(&_5$$3, &data, SL(\"routeMap\"), PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 35 TSRMLS_CC);\n            zephir_array_fetch_long(&_6$$3, &_5$$3, j, PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 35 TSRMLS_CC);\n            zephir_array_fetch_long(&varNames, &_6$$3, 1, PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 35 TSRMLS_CC);\n            ZEPHIR_INIT_NVAR(&vars);\n            array_init(&vars);\n            i = 0;\n            zephir_is_iterable(&varNames, 0, \"ice/mvc/route/dispatcher/groupcount.zep\", 45);\n            ZEND_HASH_FOREACH_VAL(Z_ARRVAL_P(&varNames), _7$$3)\n            {\n                    ZEPHIR_INIT_NVAR(&varName);\n                    ZVAL_COPY(&varName, _7$$3);\n                    i++;\n                    zephir_array_fetch_long(&_8$$5, &matches, i, PH_NOISY | PH_READONLY, \"ice/mvc/route/dispatcher/groupcount.zep\", 42 TSRMLS_CC);\n                    zephir_array_update_zval(&vars, &varName, &_8$$5, PH_COPY | PH_SEPARATE);\n            } ZEND_HASH_FOREACH_END();\n            ZEPHIR_INIT_NVAR(&varName);\n            zephir_create_array(return_value, 3, 0 TSRMLS_CC);\n            ZEPHIR_INIT_NVAR(&_9$$3);\n            ZVAL_LONG(&_9$$3, 1);\n            zephir_array_fast_append(return_value, &_9$$3);\n            zephir_array_fast_append(return_value, &handler);\n            zephir_array_fast_append(return_value, &vars);\n            RETURN_MM();\n    } ZEND_HASH_FOREACH_END();\n    ZEPHIR_INIT_NVAR(&data);\n    zephir_create_array(return_value, 1, 0 TSRMLS_CC);\n    ZEPHIR_INIT_VAR(&_10);\n    ZVAL_LONG(&_10, 0);\n    zephir_array_fast_append(return_value, &_10);\n    RETURN_MM();\n\n```\n``` sh\n(gdb) run ./vendor/bin/phpunit --configuration tests/phpunit.xml.dist --color=always --testsuite=all\nStarting program: /usr/bin/php ./vendor/bin/phpunit --configuration tests/phpunit.xml.dist --color=always --testsuite=all\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\nPHPUnit 5.0.9 by Sebastian Bergmann and contributors.\n.....\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff657eeea in strlen () from /lib64/libc.so.6\n(gdb) bt full\n0  0x00007ffff657eeea in strlen () from /lib64/libc.so.6\nNo symbol table info available.\n1  0x000055555583502b in xbuf_format_converter ()\nNo symbol table info available.\n2  0x0000555555836400 in vspprintf ()\nNo symbol table info available.\n3  0x00005555558db797 in zend_error_noreturn ()\nNo symbol table info available.\n4  0x00007ffff314c4e7 in zephir_array_fetch_long () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n5  0x00007ffff30c9f64 in zim_Ice_Mvc_Route_Dispatcher_GroupCount_dispatchVariableRoute () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n6  0x00007ffff311bf38 in zephir_call_user_function.constprop.106 () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n7  0x00007ffff311cfc6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n8  0x00007ffff3065649 in zim_Ice_Mvc_Route_Dispatcher_Regex_dispatch () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n9  0x00007ffff311bf38 in zephir_call_user_function.constprop.106 () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n10 0x00007ffff311cfc6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n11 0x00007ffff30887f9 in zim_Ice_Mvc_Router_handle () from /usr/lib64/php7/extensions/ice.so\nNo symbol table info available.\n12 0x000055555596bf10 in ZEND_DO_FCALL_SPEC_HANDLER ()\nNo symbol table info available.\n---Type  to continue, or q  to quit---\n```\n. OK, I'll try to produce the small code sample :wink: \nbut how about https://github.com/phalcon/zephir/pull/1131?\n. It happens even if I disable regular tests https://travis-ci.org/phalcon/zephir/builds/94102721:\nxdebug.dump.POST => no value => no value\nhttps://github.com/phalcon/zephir/issues/1126#issuecomment-158327470\n. OK. Thanks!\n. I'm trying to test https://github.com/phalcon/zephir/issues/1126#issuecomment-156712584 on PHP7, but for now PHP7 fails due to https://github.com/travis-ci/travis-ci/issues/5111#issuecomment-157913545\n. It seems that it works. Thanks!\n. Bad to hear, maybe it's related to fetching array. I had a problem with https://github.com/phalcon/zephir/issues/1126#issuecomment-159898236\nzep\nlet handler = data[\"routeMap\"][j][0],\n    varNames = data[\"routeMap\"][j][1];\n. @andresgutierrez @ovr any idea to resolve this?\n. @steffengy this is temporary fix for me, but I kept it open\nzep\n        // initialize the namespace prefix array\n        if !isset this->prefixes[prefix] {\n            let this->prefixes[prefix] = [utf8_encode(baseDir)];\n            return this;\n        }\n. But I'm still getting:\n``` log\n ./vendor/bin/zephir build            \nzephir_parser extension not loaded, compiling it\nParser statistics: 127 terminals, 99 nonterminals, 459 rules\n                   947 states, 0 parser table entries, 0 conflicts\nPreparing for parser compilation...\nCompiling the parser...\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c: In function \u2018yy_reduce\u2019:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:8763:38: warning: passing argument 2 of \u2018xx_ret_scall\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-6].minor.yy0, 1, yymsp[-3].minor.yy0, NULL, status->scanner_state);\n                                      ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:1189:14: note: expected \u2018char \u2019 but argument is of type \u2018xx_parser_token * {aka struct _xx_parser_token }\u2019\n static zval xx_ret_scall(int dynamic_class, char class_name, int dynamic_method, xx_parser_token M, zval parameters, xx_scanner_state state)\n              ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:8775:38: warning: passing argument 2 of \u2018xx_ret_scall\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-7].minor.yy0, 1, yymsp[-4].minor.yy0, yymsp[-1].minor.yy132, status->scanner_state);\n                                      ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:1189:14: note: expected \u2018char \u2019 but argument is of type \u2018xx_parser_token * {aka struct _xx_parser_token }\u2019\n static zval xx_ret_scall(int dynamic_class, char class_name, int dynamic_method, xx_parser_token M, zval parameters, xx_scanner_state state)\n              ^\nIn file included from /usr/include/string.h:630:0,\n                 from /usr/include/php5/main/../main/php_config.h:2554,\n                 from /usr/include/php5/Zend/zend_config.h:1,\n                 from /usr/include/php5/Zend/zend.h:51,\n                 from /usr/include/php5/main/php.h:35,\n                 from /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c: At top level:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9258:7: error: expected identifier or \u2018(\u2019 before \u2018extension\u2019\n char strndup(const char s, size_t len)\n       ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c: In function \u2018xx_parse_program\u2019:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9235:17: warning: return makes pointer from integer without a cast [-Wint-conversion]\n #define SUCCESS 1\n                 ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9352:10: note: in expansion of macro \u2018SUCCESS\u2019\n   return SUCCESS;\n          ^\nmake:  [parser/parser.lo] B\u0142\u0105d 1\nmake:  Oczekiwanie na niezako\u0144czone zadania....\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/scanner.c: In function \u2018xx_get_token\u2019:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/scanner.c:1274:4: warning: implicit declaration of function \u2018free\u2019 [-Wimplicit-function-declaration]\n    free(token->value);\n    ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/scanner.c:1274:4: warning: incompatible implicit declaration of built-in function \u2018free\u2019\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/scanner.c:1274:4: note: include \u2018\u2019 or provide a declaration of \u2018free\u2019\nlibtool: compile:  gcc -I. -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -DPHP_ATOM_INC -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/include -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/main -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/zephir_parser.c  -fPIC -DPIC -o .libs/zephir_parser.o\nlibtool: compile:  gcc -I. -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -DPHP_ATOM_INC -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/include -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/main -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c  -fPIC -DPIC -o parser/.libs/parser.o\nlibtool: compile:  gcc -I. -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -DPHP_ATOM_INC -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/include -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/main -I/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/scanner.c  -fPIC -DPIC -o parser/.libs/scanner.o\nMakefile:183: polecenia dla obiektu 'parser/parser.lo' nie powiod\u0142y si\u0119\nPHP Warning:  copy(modules/zephir_parser.so): failed to open stream: No such file or directory in /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/Library/Compiler.php on line 251\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n```\n. I've removed whole zephir directory from vendor/ and reinstall by composer.\nI'm using openSUSE Tumbleweed 20151201\nPHP 5.6.15 (cli)\ngcc version 5.2.1 20151008\n. > Hmmm... did you remove composer.lock? Because this file can freeze version.\n\nAnyway I did git clone from this repository maybe this is the difference.\n\nI have:\njson\n    \"require-dev\": {\n        \"phalcon/zephir\": \"dev-master\"\n    },\nAnd I checked that changes https://github.com/phalcon/zephir/commit/61530908da0989fe37af47535a767ec32dc70883 are present, so this is not  the composer fault.\n. Yes, they are present.\n. parser.txt @steffengy exactly. @valVk check :9258 line after ./zephir/bin compile\n. On the openSUSE I see in the /usr/include/string.h\n``` c\nif defined __USE_XOPEN2K8\nextern char strndup (const char string, size_t __n)\n     __THROW __attribute_malloc __nonnull ((1));\nendif\n```\nSo if I add in base.c https://github.com/phalcon/zephir/commit/61530908da0989fe37af47535a767ec32dc70883\n``` c\nif !defined HAVE_STRNDUP && !defined __USE_XOPEN2K8\n```\nThen I can compile.\n. The https://github.com/phalcon/zephir/issues/1148#issuecomment-165713670 is related to #1142. What is your environment?\nAlso there is a some troubles with array fetching on PHP7 #1140.\n. I can confirm this bug, also this works:\nzep\nvar tmp = variable;\nlet variable = [tmp];\n. @steffengy did you reproduce it? I have problem to bulid phalcon on opensuse:\nOn local:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c: In function \u2018xx_parse_program\u2019:\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9235:17: warning: return makes pointer from integer without a cast [-Wint-conversion]\n #define SUCCESS 1\n                 ^\n/home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9352:10: note: in expansion of macro \u2018SUCCESS\u2019\n   return SUCCESS;\n``` c\ndefine SUCCESS 1\ndefine FAILURE 0\n//...\n/\n * Parses a comment returning an intermediate array representation\n /\nzval xx_parse_program(char program, unsigned int program_length, char file_path) {\n//...\nif (program_length < 2) {\n    return SUCCESS;\n}\n\n```\nit should be cast to the proper pointer type at least\n. @andresgutierrez any help?\n. Yes, thanks!\n. Also when I'm trying resolve Ice\\Filter I'm getting:\n```\nProgram received signal SIGSEGV, Segmentation fault.\n0x000055555589f4d2 in _emalloc ()\n(gdb) bt\n0  0x000055555589f4d2 in _emalloc ()\n1  0x000055555594be1f in zend_objects_new ()\n2  0x00005555558e36ac in _object_and_properties_init ()\n3  0x00005555558e3752 in _object_init_ex ()\n4  0x00007ffff3058889 in zim_Ice_Di_build () from /usr/lib64/php7/extensions/ice.so\n5  0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n6  0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n7  0x00007ffff30e7ae2 in zim_Ice_Di_resolve () from /usr/lib64/php7/extensions/ice.so\n8  0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n9  0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n10 0x00007ffff3071d26 in zim_Ice_Di_set () from /usr/lib64/php7/extensions/ice.so\n11 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n12 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n13 0x00007ffff3057ab1 in zim_Ice_Di_get () from /usr/lib64/php7/extensions/ice.so\n14 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n15 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n16 0x00007ffff308b693 in zim_Ice_Assets_minify () from /usr/lib64/php7/extensions/ice.so\n17 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n18 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n19 0x00007ffff31103ca in zim_Ice_Assets_prepare () from /usr/lib64/php7/extensions/ice.so\n20 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n21 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n22 0x00007ffff3089b81 in zim_Ice_Assets_addCss () from /usr/lib64/php7/extensions/ice.so\n23 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n24 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n25 0x00007ffff310f725 in zim_Ice_Assets_add () from /usr/lib64/php7/extensions/ice.so\n26 0x000055555596e01e in ZEND_DO_FCALL_SPEC_HANDLER ()\n27 0x0000555555969deb in execute_ex ()\n28 0x00007ffff312186d in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n29 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n30 0x00007ffff304f905 in zim_Ice_Dispatcher_dispatch () from /usr/lib64/php7/extensions/ice.so\n31 0x00007ffff3121938 in zephir_call_user_function.constprop.107 () from /usr/lib64/php7/extensions/ice.so\n32 0x00007ffff31229c6 in zephir_call_class_method_aparams () from /usr/lib64/php7/extensions/ice.so\n33 0x00007ffff30a7e3f in zim_Ice_Mvc_App_handle () from /usr/lib64/php7/extensions/ice.so\n34 0x000055555596e01e in ZEND_DO_FCALL_SPEC_HANDLER ()\n35 0x0000555555969deb in execute_ex ()\n36 0x000055555596a77f in zend_execute ()\n37 0x00005555558ddd0c in zend_execute_scripts ()\n38 0x0000555555830f6a in php_execute_script ()\n39 0x0000555555a43515 in do_cli ()\n40 0x0000555555a448e0 in main ()\n```\nI will try to debug it tomorrow.\n. @steffengy what do you think about this? Refs https://github.com/phalcon/zephir/issues/417\n. @andresgutierrez what do you think about it?\n. Originally there was only add \"magic shortcuts\" in this PR.\nI asked about difference between is and get https://github.com/phalcon/zephir/issues/1121#issuecomment-177171607 @sergeyklay just said:\n\nbetter than\n\nso I just created an alias to get. I didn't know about uncertainties, I'll push a new implementation for is.. @steffengy do we need to use backend->fetchProperty for returning bool in is shortcut? https://github.com/mruz/zephir/blob/e94c202b9a690234d6d4dbdceb919bb066123eb8/Library/Statements/ReturnStatement.php#L73. @steffengy how about this implementation for the is?. When I created it, set did not return anything, so I added add, is should return bool https://github.com/phalcon/zephir/pull/1174/files#diff-6831a39c4308ea680610729532fc6bb7R43.. @sergeyklay I can't rebuild failed build https://travis-ci.org/phalcon/zephir/builds/425215861?utm_source=github_status&utm_medium=notification, could you? or do we still need that PR? . I think alwaysCompileParser is unnecessary due to parser-compiled\nsh\nzephir generate --parser-compiled=force\n. Also you can add docblock for classes https://github.com/phalcon/zephir/pull/724#issuecomment-122554227 and try to sort classes/namespaces by name on the list.\n. How about load order? https://github.com/phalcon/cphalcon/issues/2224\n. Yes, but maybe it isn't a reason.\n. @steffengy I think something strange is in method_len https://github.com/phalcon/zephir/blob/master/kernels/ZendEngine3/object.c#L801. Could you confirm this?\n. As I described in #1162 I think return SUCCESS; should be cast to the proper pointer type in zval *xx_parse_program() because on the build.opensuse.org I'm receiving (now it builds because I'm using https://github.com/mruz/zephir):\n\n[ 158s] E: php5-phalcon 64bit-portability-issue /home/abuild/rpmbuild/BUILD/php5-phalcon-2.0.10/zephir-master/parser/parser/parser.c:9352\n\nPreviously it was https://github.com/phalcon/zephir/commit/98e661d67d73a5325ae47b33646911b75d8b61f2#commitcomment-15360283\n. Builds fails https://build.opensuse.org/package/show/home:mruz/php5-phalcon\n. Do you mean:\n``` c\nif (!program_length) {\n    return NULL;\n}\nif (program_length < 2) {\n    return NULL;\n}\n```\n?\n. Yes, builds https://build.opensuse.org/package/show/home:mruz/php5-phalcon are succeeded now.\n. If all right, please merge, then I can rebuild packages.\n. Done.\n. @Jurigag could you dump test before loop?\nzep\nvar_dump(test);\nfor key, value in test {\n    var_dump(key);\n    var_dump(value);\n}\n. I dumped get_object_vars($config);\nphp -r \"var_dump(get_object_vars(new Phalcon\\Config(['keys' => ['peter']])));\"\narray(1) {\n  [\"keys\"]=>\n  object(Phalcon\\Config)#2 (1) {\n    [\"0\"]=>\n    string(5) \"peter\"\n  }\n}\nSo key can't be integer here https://github.com/phalcon/cphalcon/blob/master/phalcon/config.zep#L238 and php7 works fine, but I think hash_key is wrongly detected in php5 https://github.com/phalcon/zephir/blob/e904aba279e139f4954def75cff2bfc5db19bcd0/kernels/ZendEngine2/main.h#L378, eg.\n``` zep\npublic static function test()\n    {\n        var test = [\"0\": 1, \"1\": 2];\n        var key, value;\n    for key, value in test {\n        var_dump(key);\n    }\n}\n\n```\nint(0)\nint(1)\n@andresgutierrez numeric strings are casted to long in hash table?\n. I think key shouldn't be casted on php5. \n``` zep\npublic static function test()\n    {\n        var test = [\"0\": 1, \"1\": 2];\n        var key, value;\n    for key, value in test {\n        var_dump(key);\n    }\n}\n\n```\nint(0)\nint(1)\nAndy, is it intentional behaviour? if the key won't be casted we should fix the tests otherwise they not pass on php5 also.\n. Yes, I meant about phalcon code config.zep#L227 and casting after get_object_vars, also using non-assoc array in config is rare.\n. Similar to https://github.com/phalcon/zephir/issues/1142#issuecomment-164560287\n. After PhalconPHP and PHP7 article a lots of people trying to build phalcon 2.1 on php7, but there are not fixed php7 issues, so it could compile but is very unstable.\n\nAfter a few months we are finally delivered PhalconPHP 2.1 and Zephir 0.9.x which brings PHP7 support.\n\nThis is not true, Phalcon 2.1 and fully php7 support are not delivered yet, so article misleading.\n. Now when I'm trying to build phalcon on php5 I'm receiving:\nlog\nsh build_linux.sh\n[   52s] parser..lemon: Can't open this file for reading.\n[   52s] error: couldn't generate parser\n[   52s] error: Bad exit status from /var/tmp/rpm-tmp.YgjNB6 (%build)\nhttps://build.opensuse.org/package/live_build_log/home:mruz/php5-phalcon/openSUSE_13.2/x86_64 \n. Ok, thanks. I'll try.\n----- Reply message -----\nOd: \"Andy Gutierrez\" notifications@github.com\nDo: \"phalcon/zephir\" zephir@noreply.github.com\nDW: \"Mariusz \u0141\u0105czak\" mruz@poczta.onet.pl, \"Mention\" mention@noreply.github.com\nTemat: [phalcon/zephir] New specialized parser (#1248)\nData: czw., kwi 28, 2016 17:08\n@mruz If you are running build_linux.sh manually now you have to pass the parser you want to build: build_linux.sh php5 and build_linux.sh php7\n\u2014You are receiving this because you were mentioned.Reply to this email directly or view it on GitHub\n. Wojtek, only when you rebulid the parser manually, eg.\nsh\ncd zephir/parser/parser\nsh build_linux.sh php5\ncd ..\nphpize\n./configure --enable-zephir_parser\nmake\n. openSUSE Tumbleweed\nPHP 5.6.20\n. 64bit, Zephir version 0.9.2a-dev\nDid you try to reproduce?\n. Try with $fetch:\nzep\nreturn this->statement->$fetch( \\PDO::FETCH_OBJ );\n. I'm using long tmp right now.\nMaybe for php5 it is modified by default and this is the reason why it's working for php5, but not for php7?. It's only on PHP 7.1 https://travis-ci.org/phalcon/zephir it also fails on iceframework https://travis-ci.org/ice/framework/jobs/195692404#L821. This is fixed, but I'm getting\n\nCannot call extract() dynamically\n\nI'll try to provide a code to reproduce.. OK, but it worked couple of days ago on php7 and previous zephir.. Cool, thanks.. @sergeyklay I had #1255 on PHP 5.6. So why we separated them if there isn't user-friendly solution?\nHow about if we have composer package for the parser? and in zephir's composer.json specify the version in the require \"phalcon/php-zephir-parser\": \"1.1.2\" which should install the parser.\nThen we won't need \"install_zephir_parser.sh\" on zephir/phalcon/ice etc.. yes, something like that should work:\n\"scripts\": {\n        \"post-install-cmd\": [\"./install\"]\n    }\nI think it will ask for root password if needed.. In my opinion even if it's only for Linux it's worth simplifying. It will cover TravisCI too. How about https://github.com/phalcon/zephir/issues/1471#issuecomment-291013327?. hmm I see it's because I compiled without -DZEPHIR_RELEASE=1, but https://github.com/phalcon/zephir/issues/1463#issuecomment-290952921. > Installing phalcon/zephir (dev-master a5f5854): Cloning a5f585482b. It was working on this one https://github.com/phalcon/zephir/commit/a5f585482bf9c1f6a37d8162936765ebb3d9bfea. I haven't tested later versions, just the latest one.. Hmm, manual is saying it is superglobal http://pl1.php.net/manual/en/reserved.variables.post.php#refsect1-reserved.variables.post-notes\n\nThis is a 'superglobal', or automatic global, variable. This simply means that it is available in all scopes throughout a script. There is no need to do global $variable; to access it within functions or methods.. No, I have a default value var_dump(ini_get('enable_post_data_reading'));\nstring(1) \"1\". \n",
    "kirilltitov": "Sure. Official Phalcon 2.0 branch.\n. It's critical for my STOMP implementation.\n. ",
    "IngwiePhoenix": "GCC 4.8.2 - but I went to clang and got the same amount of errors.\nOS is Mac OS X 10.9\nAm 27.12.2013 um 09:03 schrieb \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041f\u0430\u0446\u0443\u0440\u0430 notifications@github.com:\n\nHi, What version of gcc you use? Os?\n\u2014\nReply to this email directly or view it on GitHub.\n. So effectively, I can not use Zephir in order to build a C extension with a better OO layer? Oh\u2026 Because, I thought that this would be a really cool feature of Zephir - being able to create an OO wrapper of an existing API without all the zend hassle. The only other alternative is PHP-CPP, though\u2026\n\nMaybe Zephir will implement a similar feature in the future?\n\nAm 28.11.2014 um 21:29 schrieb Phalcon notifications@github.com:\nMostly because it's not recommended, Zephir is unable to analyse the code inside c-blocks making the whole compiler useless. You only must use it if you need to do something that only works in C.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/phalcon/zephir/issues/654#issuecomment-64926546.\n. @racklin\n\nThat example of using libcurl within Zephir is very awesome! I am glad your PRs got merged.\n. ",
    "padraic": "See also: http://www.reddit.com/r/PHP/comments/1vnvr3/zephir_language_write_php_extensions_the_easy_way/ceufs73\nI'm doing a fullclean before each build which works.\n. The use of for instead of foreach is fine, it's the same way in other languages and IMO, I prefer it.\n. Having the same issue here after checking if something is an array. Looks like all of the conditions are evaluated even if an earlier one fails. My condition is as follows:\nif is_array(match) && count(match) == 2 && strlen(match[0]) >= minLength {\nThe first check should fail and end that branch, but instead it evaluates the second (should also fail) and the third (which will net me a scalar as array error). The exact error occurs when using the extension from PHP with a PHP notice:\nPHP Notice:  Cannot use a scalar value as an array in /home/padraic/Projects/play/test.php on line 4\n. @mruz Yep, I ended up doing the first suggestion myself and it works fine now. Just adds to a lot of if...else nesting what with the lack of elseif.\n. @phalcon That seems to have done the trick! The branch is being executed as expected.\n. ",
    "nevernet": "i got same error:\n./bin/zephir compile\nPHP Parse error:  syntax error, unexpected '[' in /home/root/zephir/Library/Expression/PropertyAccess.php on line 111\n. my php version is 5.3.x\n. ",
    "denji": "@phalcon But why? in C there is support for \"else if\" and \"elseif\" or a problem in the design of the parser?\n. ",
    "fightingbamboo": "when to add full support?\n. when will zephir support  default array values?. ",
    "romizone": "dirname( FILE ) \nAnybody knows whether it is supported by Zephir ?\nI have problem placing those code inside Zephir in Eval() functions. Why zephir eval () evaluate inside in *.zep file not the php code who call Zephir Extension ?. Thisis the code\n```zep\nnamespace Cryptcode_runner;\nclass App\n{\n    private static _validCiphers = [\n        \"aes-128-cbc\": 16,\n        \"aes-192-cbc\": 24,\n        \"aes-256-cbc\": 32\n    ];\nprivate static function _testRequirements()\n{\n    if(!extension_loaded(\"openssl\")) { throw new \\Exception(\"OpenSSL extension must be loaded!\"); }\n    if(!function_exists(\"openssl_encrypt\")) { throw new \\Exception(\"Could not find function openssl_encrypt!\"); }\n    if(!function_exists(\"openssl_decrypt\")) { throw new \\Exception(\"Could not find function openssl_decrypt!\"); }\n}\n\nprivate static function getKey(string cipher)\n{\n  var key = \"Secr3t123!\";\n  var cipherLength;\n  let cipherLength = App::_validCiphers[cipher];\n  return substr(sha1(key), 0, cipherLength); \n}\n\nprivate static function decrypt(string cipher, string code)\n{\n    // Make sure all requirements are met\n    App::_testRequirements();\n\n    let cipher = cipher->lower();\n    if(!array_key_exists(cipher, App::_validCiphers))\n    {\n      throw new \\Exception(cipher . \" is not among the list of valid ciphers: \" . join(\", \",App::_validCiphers)); \n    }\n\n    var tmp = base64_decode(code);\n    var iv = substr(tmp,0,openssl_cipher_iv_length(cipher));\n    var enc = substr(tmp,openssl_cipher_iv_length(cipher));\n    return openssl_decrypt(enc, cipher, App::getKey(cipher), OPENSSL_RAW_DATA, iv);\n}\n\npublic static function run(string cipher, string code)\n{\n    return eval(App::decrypt(cipher, code));\n}\n\n}\n```\nThe above code is to encrypt \n```php\n<?php\n/\n * Front to the WordPress application. This file doesn't do anything, but loads\n * wp-blog-header.php which does and tells WordPress to load the theme.\n \n * @package WordPress\n /\n/\n * Tells WordPress to load the WordPress theme and output it.\n \n * @var bool\n /\ndefine('WP_USE_THEMES', true);\n/* Loads the WordPress Environment and Template /\nrequire( dirname( FILE ) . '/wp-blog-header.php' );\n```\nIf we run eval() inside Zephir which have \"require( dirname( FILE ) \".\nThere would be an error because Zepir acessed the *.Zep file location , not the php location which running inside zephir functions .. PHP Version 7.0\nWhen we eval() this code require( dirname( __FILE__ ) . '/wp-blog-header.php' )\nThere is always an error where Zephir locate magic constant __FILE__\n. Yup inside eval () has the code __FILE__,\n. ",
    "sergeyklay": "@romizone Could you please open a new issue with script to reproduce. This issue was moved to phalcon/php-zephir-parser#18. This issue was moved to phalcon/php-zephir-parser#17. This issue was moved to phalcon/php-zephir-parser#22. @pentagonal Could you please open a new issues with a code to reproduce your issue.. Calling parent's private methods from the child's public ones doesn't provided for PHP < 5.6. This feature works well now for PHP 5.6, 7.0, 7.1, 7.2 and even for 7.3 (nightly build)  For older PHP versions like PHP 5.5 this will not be implemented. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.\nRefs:\n- https://github.com/phalcon/zephir/pull/1467\n- https://github.com/phalcon/zephir/pull/1429\n- https://github.com/phalcon/zephir/issues/251. As I know this feature has been implemented. If there are bugs, we can follow up in separate issues.. Judging by this infographic http://php.net/supported-versions.php Soon we will lose the support of 5.4. Maybe it's time to use Traits? :)\n. @Green-Cat +1\n. +1\n. This issue was moved to phalcon/php-zephir-parser#16. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. To become a Turing-complete (or Turing-powerful) Zephir has to be written on Zephir. To achieve this we can introduce a brand new backed (say C++Backend, or GolangBackend). This will allow us to create programs that can work without Zend Engine support.. This is fixed. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. This issue was moved to phalcon/php-zephir-parser#15. fetch is reserved keyword\nhttps://github.com/phalcon/zephir/issues/1269\n. fetch is reserved keyword\nhttps://github.com/phalcon/zephir/issues/1269\n. PHP doesn't support default array values https://github.com/phalcon/zephir/issues/1255. \ud83d\udc4e for traits. There is more important part to implement and bugs to fix.. :+1: \n. Is there any progress?\n. Is there any progress?\n. @ovr @steffengy any progress?\n. :+1: \nafter 3df6d846470c7eee9e4278568a56c2b87617d36c all work fine for self::B and Bar::B\n. :+1: \n. ```\nZephir\\CompilerException: Cannot compare variable: int with: null in \n on line 10\n                if a === null\n    ----------------------^\n\n```\n. Fixed in master\n. I noticed incorrect behavior only for arrays:\nZephir:\n``` zephir\nnamespace Foo;\nclass Bar\n{\n    public function test()\n    {\n        array  patterns     = [\"/quick/\", \"/brown/\", \"/fox/\"];\n        array  replacements = \"FOO\";\n        string subject      = \"The quick brown fox jumped over the lazy dog.\";\n    return preg_replace(patterns, replacements, subject);\n}\n\n}\n```\nTest:\nbash\nphp -r '$test = new Foo\\bar; echo $test->test() . PHP_EOL;'\nResult: \nThe quick brown fox jumped over the lazy dog.\nZephir:\n``` zephir\nnamespace Foo;\nclass Bar\n{\n    public function test() ->string\n    {\n        string patterns     = \"#[quick|brown|fox]#\";\n        string replacements = \"FOO\";\n        string subject      = \"The quick brown fox jumped over the lazy dog.\";\n    return preg_replace(patterns, replacements, subject);\n}\n\n}\n```\nTest:\nbash\nphp -r '$test = new Foo\\bar; echo $test->test() . PHP_EOL;'\nResult:\nThe FOOFOOFOOFOOFOO FOOFOOFOOFOOFOO FOOFOOFOO jFOOmped FOOveFOO the lazy dFOOg.\n. There are any changes?\n. @ovr @andresgutierrez Guys, what's with this issue?\n. @steffengy It seems this is fixed in development branch. Am I right?\n. @steffengy \nTest1\n``` zephir\nnamespace Utils;\nclass Greeting\n{\n    public static function testStrReplace()\n    {\n        return str_replace([\"fruits\", \"vegetables\", \"fiber\"], [\"pizza\", \"beer\", \"ice cream\"], \"You should eat fruits, vegetables, and fiber every day.\");\n    }\npublic static function testPregReplace()\n{\n    return  preg_replace([\"/quick/\", \"/brown/\", \"/fox/\"], [\"bear\", \"black\", \"slow\"], \"The quick brown fox jumped over the lazy dog.\");\n}\n\n}\n```\n``` sh\n$ php -r 'echo str_replace([\"fruits\", \"vegetables\", \"fiber\"], [\"pizza\", \"beer\", \"ice cream\"], \"You should eat fruits, vegetables, and fiber every day.\"), PHP_EOL;'\nYou should eat pizza, beer, and ice cream every day.\n$ php -r 'echo Utils\\Greeting::testStrReplace(), PHP_EOL;'\nYou should eat pizza, beer, and ice cream every day.\n$ php -r 'echo preg_replace([\"/quick/\", \"/brown/\", \"/fox/\"], [\"bear\", \"black\", \"slow\"], \"The quick brown fox jumped over the lazy dog.\"), PHP_EOL;'\nThe bear black slow jumped over the lazy dog.\n$ php -r 'echo Utils\\Greeting::testPregReplace(), PHP_EOL;'\nThe bear black slow jumped over the lazy dog.\n```\nTest2\n``` zephir\nnamespace Utils;\nclass Greeting\n{\n    public static function testStrReplace()\n    {\n        array search = [\"fruits\", \"vegetables\", \"fiber\"];\n        array replace = [\"pizza\", \"beer\", \"ice cream\"];\n        string str = \"You should eat fruits, vegetables, and fiber every day.\";\n    return str_replace(search, replace, str);\n}\n\npublic static function testPregReplace()\n{\n    array search = [\"/quick/\", \"/brown/\", \"/fox/\"];\n    array replace = [\"bear\", \"black\", \"slow\"];\n    string str = \"The quick brown fox jumped over the lazy dog.\";\n\n    return  preg_replace(search, replace, str);\n}\n\n}\n```\n``` sh\n$ php -r 'echo Utils\\Greeting::testStrReplace(), PHP_EOL;'\nYou should eat fruits, vegetables, and fiber every day.\n$ php -r 'echo Utils\\Greeting::testPregReplace(), PHP_EOL;'\nThe quick brown fox jumped over the lazy dog.\n```\n. Yes\n. @steffengy Confirm. Fixed.\nThanks.\n. Fixed in master\n. But in the documentation nothing is said about the types of:\n\nA \u2018switch\u2019 evalutes an expression against a series of predefined literal values executing the corresponding \u2018case\u2019 block or falling back to the \u2018default\u2019 block case:\n. I beg your pardon!\n\nMy mistake\n. Probably it has common problems\nzephir\n    public function testThrow()\n    {\n        throw __NAMESPACE__ .\"\\\\\". __CLASS__;\n    }\nError at compiling time:\n```\n$ zephir build\nZephir\\CompilerException: Variable 'string' cannot be used as exception\nin /home/klay/projects/zephir/test/foo/bar.zep on line 32\n        throw __NAMESPACE__ .\"\\\\\". __CLASS__;\n--------------------------------------------^\n\n```\nzephir\n    public function test()\n    {\n        throw sprintf(\"%s\\n\", __CLASS__);\n    }\nThen\n$ zephir build\n$ php -r '$test = new Foo\\Bar; echo $test->test();'\nSegmentation fault (core dumped)\nzephir\n    public function test()\n    {\n        throw sprintf(\"%s\\n\", \"Foo Bar\");\n    }\nThen\n$ zephir build\n$ php -r '$test = new Foo\\Bar; echo $test->test();'\nSegmentation fault (core dumped)\n. @phalcon @ovr  It seems throw + sprintf doesn't work correctly\n. :+1: \n. @mruz yes, you're right, exactly in this example current implementation of for is enough.\nBut, when need to increase the counter not by 1?\nOr, another example:\n``` php\nfor($col = 'R'; $col != 'AD'; $col++) {\n    echo $col.' ';\n}\n// returns: R S T U V W X Y Z AA AB AC\n```\n. another php example\nphp\nfor( ; $iterator->valid(); $iterator->next()) {\n    // something\n}\nOf course, this is solved by a while, but the flexibility of language lies in the diversity of its methods and timely using of these methods\n. The Code\n```zep\nnamespace Test;\nclass CatchException\n{\n    public function __construct()\n    {\n        var b, i, d, e;\n    try {\n        let b = nonexistentfunction();\n\n        for i in b {\n            let d = i;\n        }\n    } catch \\Throwable, e {\n        echo \"Throwable: \"  . e->getMessage();\n    } catch \\Exception, e {\n        echo \"Exception: \" . e->getMessage();\n    }\n}\n\n}\n```\nTest\nphp\n<?php\nnew Test\\CatchException();\nThrowable: Call to undefined function nonexistentfunction()\nzephir version\n0.9.10-d6f3deed23. Implemented in the master branch. @dreamsxin Could you please take a look. @Niko9911 Yes. Fixed in the development branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. good catch :+1: \n. This issue was moved to phalcon/php-zephir-parser#23. > I've started develop zephir-ide, plugin for Atom.\nWow :+1: \n. @hylent Hmm.. public function $baz() has the same effect?\n. > /usr/local/bin/zephir: line 39:  8098 Segmentation fault      (core dumped) php $ZEPHIRDIR/compiler.php $*\nI always see this. Each  compilation of Phalcon 2\nBut it still work :)\n. Thanks\n. Open because var is not implemented in Zephir yet\n. @mruz :+1: \n. Close  because var is already implemented in Zephir\n. If @gsouf's solution is work, I agree\n. :+1: \n. Benchmark for php/hhvm http://3v4l.org/luMgY\n. :+1: \n. @andresgutierrez it seems badge :smile_cat: \n. Where?\n. Most likely yes, but I don't tested yet. @KorsaR-ZN \n. Confirm. Fixed\n. @ovr +1\n. Dublicate https://github.com/phalcon/zephir/issues/732\n. This issue was moved to phalcon/php-zephir-parser#14. Ok. But in PHP I can use something like:\nphp\n$str = \"abc\";\n$str[0] = 'z';\necho $str; // zbc\nHowever in Zephir can't\n``` zephir\nnamespace Test;\nclass Test\n{\n    public function test()\n    {\n        var str;\n        let str = \"abc\";\n        let str[0] = ord(\"z\");\n    return str;\n}\n\n}\n```\n``` sh\nphp -r '$a = new Test; var_dump($a->test());'\nWarning: Cannot use a scalar value as an array ...\nstring(3) \"abc\"\n```\n. In any case, thanks for the clarification :)\n. :+1: \n. any progress?\n. Done\n. @lolo32 \n. Closed in favor of https://github.com/phalcon/zephir/issues/1400. @andresgutierrez what about this PR?\n. Happy end :)\n. Already in master\n. :+1: \n. Possible refs #732\n. @MarkBaker\nFixed in current master.\n``` zephir\nnamespace Utils;\nclass Greeting\n{\n    private fromReplace = [\"+-\", \"-+\", \"++\", \"--\"];\n    private toReplace = [\"-\", \"-\", \"+\", \"+\"];\npublic static function fixComplex1()\n{\n    var complexNumber;\n    let complexNumber = \"1.23e-4--2.34e-5i\";\n\n    return str_replace([\"+-\", \"-+\", \"++\", \"--\"], [\"-\", \"-\", \"+\", \"+\"], complexNumber);\n}\n\npublic static function fixComplex2()\n{\n    var complexNumber;\n    array search = [\"+-\", \"-+\", \"++\", \"--\"];\n    array replace = [\"-\", \"-\", \"+\", \"+\"];\n\n    let complexNumber = \"1.23e-4--2.34e-5i\";\n\n    return str_replace(search, replace, complexNumber);\n}\n\npublic function fixComplex3()\n{\n    var complexNumber, fromReplace, toReplace, key, value;\n\n    let complexNumber =  \"1.23e-4--2.34e-5i\";\n    let fromReplace = this->fromReplace;\n    let toReplace = this->toReplace;\n\n    for key, value in fromReplace {\n        let complexNumber = str_replace(value, toReplace[key], complexNumber);\n    }\n\n    return complexNumber;\n}\n\n}\n```\n``` sh\n$ php -r 'echo Utils\\Greeting::fixComplex1(), PHP_EOL;'\n1.23e-4+2.34e-5i\n$ php -r 'echo Utils\\Greeting::fixComplex2(), PHP_EOL;'\n1.23e-4+2.34e-5i\n$ php -r '$u = new Utils\\Greeting; echo $u->fixComplex3(), PHP_EOL;'\n1.23e-4+2.34e-5i\n```\n. @GavinMcL Create please separated issue at Devtools repo\n. Could you please explain the benefits of nested closures?\n. @MarkBaker :+1: \n. :+1: \n. @fezfez\nZephir isn't a full copy of PHP. Particularly, it isn't a fully dynamic language. Though it supports some dynamic structures.\nOften when you write your program on Zephir, the habit of programming in the manner of PHP only harms. You've faced exactly with a case in point. The problem here is the following:\nWhen you write\nzep\n        if is_string(myvar) {\n            return \"is a var\";\n        } elseif is_string(myvar[0]) {\n            return \"is an array and the first element is a string\";\n        }\nyou expect that the code would be executed in linear fashion, literally from top to bottom. Not all languages function in such manner. I'd like to give you an example in PHP:\nphp\nTRUE || some_non_existent_function_here();\nIn this case (on PHP) the error will apparently never occur. The explanation here is simple: because of its dynamic nature PHP won\u2019t resolve the expression in the second part of the condition, since the first part of that expression is TRUE. However, there is a pitfall here \u2014 you will never get to know about errors of such kind until you run the given above (broken) code.\nZephir, like other static languages, uses static typing checking. This method is in common use in programming languages. One of the most popular aspects of static typing is strong typing when the variable type can\u2019t be changed later. It means that the compiler \u201cknows\u201d which particular variable type will be used. In dynamic typing, all types are determined during the program execution.\nIn short: In a statically typed language, type checking is performed at compile time; in a dynamically typed language type checking is performed at run time. In practice, weakly typed languages are usually dynamically typed.\nYes, for the record, we added type checking into Zephir like:\n```zep\nfunction foo (array parameter) {\n}\n```\nBut you use the dynamic type. Note the:\n```zep\nfunction foo (parameter) {\n}\n```\nthe same as:\n```zep\nfunction foo (var parameter) {\n}\n```\nOn top of everything else, Zephir tries to optimize code even before the compilation stage. The optimization process is crucially important. It enables creating programs with higher performing rate or lower memory consuming.\nNote that when you use instructions of type myvar[0] you likely admit that a variable could be an array. As you get the value by index you admit that it is possible. But, of course, you are not sure of it. \nPut it otherwise, you consider the operand type as a variable one, that means, it can be either a string, or an array. The problem is that Zephir hasn't got information about it. Zephir isn't able to figure out or suppose. If it sees that you use instructions of type myvar[0] it believes you. After all, you are the programmer, and you do write the code.\nBy optimizing the instruction of type is_string(myvar[0]) Zephir tries to build more efficient code:\n```c\n// Initialize the &_0 with value of myvar[0]\nzephir_array_fetch_long(&_0, myvar, 0, ...);\n// ...\nif (Z_TYPE_P(&_0) == IS_STRING) {\n    // ...\n}\n```\nActually, when you come to think of it, you could write something like the following:\nzep\nif  is_string(myvar[0]) {\n    // ...\n} else if is_int(myvar[0]) {\n    // ...\n} else if is_bool(myvar[0]) {\n    // ...\n} // ...\nAs you understand we can't fetch the value in each condition. Frankly speaking it is expensive.\nThis particular hinders your code. The optimized code is put before conditional operators and the error occurs in this very string.\nI've rewritten your code using pseudo code for a good understanding. It may seem that the program is executed this way:\n1. if VAR is string\n2. do work\n3. otherwise\n4. check first element of the VAR\nBut in fact it is executed this way:\n1. initialize the BAR variable from the firts index of VAR\n2. if VAR is string\n3. do work\n4. otherwise\n5. check the BAR from #1\n\nP.S. I don't think that we'll find enough time in the near future to invent a trick which could help with solving similar problems. Actually such solution would be quite expensive. I recommend to avoid using such approach as you described in your example. Instead, you can use something like this:\n```zep\npublic function whatsisMyvar(myvar)\n{\n    if is_array(myvar) {\n        return this->inspectArrayVar(myvar);\n    } else if is_object(myvar) {\n        return this->inspectObject(myvar);\n    }\n// ...\n\n}\n```\nor better with using switch/case approach.\nThank you for the report, and for helping us make Zephir better.\nCc: @coollider . Actually there is no problem with control flow like else if. Please read carefully my answer.. It is not a bug. It is a ugly coding style borrowed from PHP. Why do you call:\nzep\nis_string(myvar[0])\nAre you sure that this is array? No. Why you do not use:\nzep\nis_array(myvar) && isset(myvar[0]) && is_string(myvar[0])\nActually it is language feature - attempt to optimize code before compilation. And please don't mix static and dynamic language approaches. Do you want to use dynamic approach? No problem, but Zephir does not support Pattern Matching yet.  So you have implement it by hand.\nWhat do you think about this code:\n```zep\nvar a = \"5\";\nif is_string(a) {\n    return \"string\";\n} else if is_array(a) {\n    return \"array\";\n}\n```\n\nIs there a problem with elseif? No.\nIs there elseif not supported? No, it is supported.\nIs elseif is evaluated when is not needed? No.. zep\npublic function whatsisMyvar(myvar)\n{\n    if is_string(myvar) {\n        return this->inspectString(myvar);\n    } elseif is_array(myvar) {\n        return this->inspectArray(myvar);\n    } elseif ( /* ... */ ) {\n        // ..\n    } \n}\n\nDo the magic without programming the programming language.. Well, this is very tricky to fix, won't happen soon. If anyone wants to get started, I'd love that.. Looks good to me\n. +1\n. +1\n. @sandrokeil I'll take look in the next week. @sandrokeil I'm work on #1779 right now. Next I want to close some other urgent issues. If anyone wants to get started, I'd love that.. @KorsaR-ZN Could you please rebase. @joeyhub Could you please rebase\n. @joeyhub. Fortunately I am unable to reproduce this issue\n. Could you please provide the code that produces the issue?\n. @steffengy Can be closed?\n. php\nif ($component->isFalback())\nbetter than\nphp\nif ($component->getFalback())\n. :+1: \n. :+1: \n. Are you enabled phalcon.so for php-cli ?\n. @steffengy done\n. Issue still actual\n. This issue was moved to phalcon/ide-stubs#4. :+1: \n. master? Phalcon 2.0.x no longer will be compiled with new Zephir versions?\n. @dreamsxin Could you please take a look. Fixed in the 0.11.11 version. Feel free to open a new issue if the problem appears again. Thank you for contributing.. :+1: \n. Right now tested on my VPS:\n- Ubuntu 14.04.3\n- PHP 5.6.16\n- gcc 4.8.4\nAll ok\n. Refs: https://github.com/phalcon/cphalcon/pull/11212\n. This issue was moved to phalcon/php-zephir-parser#13. @steffengy Can you please review?\n. https://github.com/phalcon/zephir-docs/pull/39\n. @zinovyev Hello\nZephir no longer depends on json-c.\n- https://github.com/phalcon/zephir/pull/1144\n- https://github.com/phalcon/zephir/pull/1141\n. @jenalgit \n\n'cl' is not recognized as an internal or external command,\n'lemon' is not recognized as an internal or external command,\n\nLooks like you have unsatisfied dependencies. >  \"cl.exe\" /D COMPILE_DL_ZEPHIR_PARSER /D ZEPHIR_PARSER_EXPORTS=1 -IC:\\zephir\\parser /nologo /I c:\\php-dev/include /I c:\\php-dev/include/main /I c:\\php-dev/include/Zend /I c:\\php-dev/include/TSRM /I c:\\php-dev/include/ext /D _WINDOWS /D ZEND_WIN32=1 /D PHP_WIN32=1 /D WIN32 /D _MBCS /W3 /FD /wd4996 /D_USE_32BIT_TIME_T=1 /guard:cf /MP /LD /MD /W3 /Ox /D NDebug /D NDEBUG /D ZEND_WIN32_FORCE_INLINE /GF /D ZEND_DEBUG=0 /I \"C:\\zephir\\parser\\no\\include\" /FoC:\\zephir\\parser\\Release\\ /FpC:\\zephir\\parser\\Release\\ /FRC:\\zephir\\parser\\Release\\ /FdC:\\zephir\\parser\\Release\\ /c C:\\zephir\\parser\\zephir_parser.c\nzephir_parser.c\n\nC:\\zephir\\parser\\zephir_parser.c: fatal error C1041: \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b C:\\zephir\\parser\\Release\\vc140.idb; \u0435\u0441\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u043e\u0432 CL.EXE \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u044e\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 PDB-\u0444\u0430\u0439\u043b, \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c /FS\n\n@mzf Could you please translate this message in English for all participants. IMHO, best choice at this time it is 5.6 \n. @dreamsxin Could you please take a look. Fixed in the 0.11.11 version. Feel free to open a new issue if the problem appears again. Thank you for contributing.. Looks good to me\n. So we have Phalcon Beanstalk component that usually slower than native  PHP\n. What about this PR? :)\n. :+1: \n. Refs https://github.com/phalcon/zephir/issues/1121\n. @Jurigag https://github.com/phalcon/zephir/issues/1121#issuecomment-154507884. Because there are no enough quorum. Cc: @phalcon/zephir-team . @mruz Could you please submit this PR to the 0.10.x branch? Also could you please squash commits into one to keep history clean.. Before:\n\nAfter:\n\n. @steffengy Can you please review this?\n. Before:\n\nAfter:\n\n. I've created a demo with these changes: http://phalcon-api.klay.me/\n. @steffengy What with this PR?\n. @flip111 What issue does it solve?\n. This issue was moved to phalcon/php-zephir-parser#30. @steffengy \n. Looks good to me\n. Latest Zephir 58d81e22e88a8959a8ea0bf0ec32df2958a05116\nPHP 7.0.9\n```\nzephir_memory_restore_stack_common: observed variable #0 (0x7ffd1dcc5440) has too many references (1000001), type=6  [(null)]\n0  0x7fd2d8313b53 [/usr/lib/php/20151012/utils.so(zephir_print_backtrace+0x2e) [0x7fd2d8313b53]]\n1  0x7fd2d8311e17 [/usr/lib/php/20151012/utils.so(+0xfe17) [0x7fd2d8311e17]]\n2  0x7fd2d8311f13 [/usr/lib/php/20151012/utils.so(zephir_memory_restore_stack+0xfa) [0x7fd2d8311f13]]\n3  0x7fd2d8335339 [/usr/lib/php/20151012/utils.so(zim_Greeting_Utils_test+0x3b5) [0x7fd2d8335339]]\n4  0x55fdc466e93b [php(dtrace_execute_internal+0x2b) [0x55fdc466e93b]]\n5  0x7fd2ef99ad61 [/usr/lib/php/20151012/xdebug.so(xdebug_execute_internal+0x161) [0x7fd2ef99ad61]]\n6  0x55fdc46f7e64 [php(+0x2cfe64) [0x55fdc46f7e64]]\n7  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n8  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n9  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n10  0x55fdc4670173 [php(zend_call_function+0x613) [0x55fdc4670173]]\n11  0x55fdc457a9ee [php(zim_reflection_method_invokeArgs+0x26e) [0x55fdc457a9ee]]\n12  0x55fdc466e93b [php(dtrace_execute_internal+0x2b) [0x55fdc466e93b]]\n13  0x7fd2ef99ad61 [/usr/lib/php/20151012/xdebug.so(xdebug_execute_internal+0x161) [0x7fd2ef99ad61]]\n14  0x55fdc46f7e64 [php(+0x2cfe64) [0x55fdc46f7e64]]\n15  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n16  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n17  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n18  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n19  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n20  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n21  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n22  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n23  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n24  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n25  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n26  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n27  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n28  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n29  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n30  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n31  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n32  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n33  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n34  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n35  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n36  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n37  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n38  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n39  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n40  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n41  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n42  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n43  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n44  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n45  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n46  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n47  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n48  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n49  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n50  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n51  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n52  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n53  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n54  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n55  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n56  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n57  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n58  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n59  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n60  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n61  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n62  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n63  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n64  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n65  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n66  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n67  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n68  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n69  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n70  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n71  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n72  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n73  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n74  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n75  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n76  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n77  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n78  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n79  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n80  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n81  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n82  0x55fdc46f7b30 [php(+0x2cfb30) [0x55fdc46f7b30]]\n83  0x55fdc46ba3fb [php(execute_ex+0x1b) [0x55fdc46ba3fb]]\n84  0x55fdc466e839 [php(dtrace_execute_ex+0x69) [0x55fdc466e839]]\n85  0x7fd2ef99a3ef [/usr/lib/php/20151012/xdebug.so(xdebug_execute_ex+0x2df) [0x7fd2ef99a3ef]]\n86  0x55fdc470380f [php(zend_execute+0x1af) [0x55fdc470380f]]\n87  0x55fdc467de74 [php(zend_execute_scripts+0xb4) [0x55fdc467de74]]\n88  0x55fdc4621938 [php(php_execute_script+0x2d8) [0x55fdc4621938]]\n89  0x55fdc47053e9 [php(+0x2dd3e9) [0x55fdc47053e9]]\n90  0x55fdc4510c00 [php(main+0x510) [0x55fdc4510c00]]\n91  0x7fd2f0333f45 [/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fd2f0333f45]]\n92  0x55fdc4510c9b [php(+0xe8c9b) [0x55fdc4510c9b]]\n```\nPHP 5.6.24\n```\nzephir_memory_restore_stack_common: observed variable #2 (0x55c888feab50) has too many references (1000001), type=6  [(null)]\n```\n. Zephir\n``` zephir\nnamespace Beanspeak;\nclass Greeting\n{\n    protected _queue = [];\npublic function __construct()\n{\n     let this->_queue = array_fill(0, 1000000, \"message\");\n}\n\n}\n```\nGenerated code PHP 7:\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/fcall.h\"\ninclude \"kernel/object.h\"\ninclude \"kernel/operators.h\"\nZEPHIR_INIT_CLASS(Beanspeak_Greeting) {\nZEPHIR_REGISTER_CLASS(Beanspeak, Greeting, beanspeak, greeting, beanspeak_greeting_method_entry, 0);\n\nzend_declare_property_null(beanspeak_greeting_ce, SL(\"_queue\"), ZEND_ACC_PROTECTED TSRMLS_CC);\n\nbeanspeak_greeting_ce->create_object = zephir_init_properties_Beanspeak_Greeting;\nreturn SUCCESS;\n\n}\nPHP_METHOD(Beanspeak_Greeting, __construct) {\nzval _0, _1, _2, _3;\nint ZEPHIR_LAST_CALL_STATUS;\nZEPHIR_INIT_THIS();\n\nZVAL_UNDEF(&_0);\nZVAL_UNDEF(&_1);\nZVAL_UNDEF(&_2);\nZVAL_UNDEF(&_3);\n\nZEPHIR_MM_GROW();\n\nZVAL_LONG(&_0, 0);\nZVAL_LONG(&_1, 1000000);\nZEPHIR_INIT_VAR(&_2);\nZVAL_STRING(&_2, \"message\");\nZEPHIR_CALL_FUNCTION(&_3, \"array_fill\", NULL, 18, &_0, &_1, &_2);\nzephir_check_call_status();\nzephir_update_property_zval(this_ptr, SL(\"_queue\"), &_3);\nZEPHIR_MM_RESTORE();\n\n}\nzend_object zephir_init_properties_Beanspeak_Greeting(zend_class_entry class_type TSRMLS_DC) {\n    zval _0, _1$$3;\n    ZVAL_UNDEF(&_0);\nZVAL_UNDEF(&_1$$3);\n\n    ZEPHIR_MM_GROW();\n\n{\n    zval local_this_ptr, *this_ptr = &local_this_ptr;\n    ZEPHIR_CREATE_OBJECT(this_ptr, class_type);\n    zephir_read_property(&_0, this_ptr, SL(\"_queue\"), PH_NOISY_CC | PH_READONLY);\n    if (Z_TYPE_P(&_0) == IS_NULL) {\n        ZEPHIR_INIT_VAR(&_1$$3);\n        array_init(&_1$$3);\n        zephir_update_property_zval(this_ptr, SL(\"_queue\"), &_1$$3);\n    }\n    ZEPHIR_MM_RESTORE();\n    return Z_OBJ_P(this_ptr);\n}\n\n}\n```\nGenerated code PHP 5.6:\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/fcall.h\"\ninclude \"kernel/object.h\"\ninclude \"kernel/operators.h\"\nZEPHIR_INIT_CLASS(Beanspeak_Greeting) {\nZEPHIR_REGISTER_CLASS(Beanspeak, Greeting, beanspeak, greeting, beanspeak_greeting_method_entry, 0);\n\nzend_declare_property_null(beanspeak_greeting_ce, SL(\"_queue\"), ZEND_ACC_PROTECTED TSRMLS_CC);\n\nbeanspeak_greeting_ce->create_object = zephir_init_properties_Beanspeak_Greeting;\nreturn SUCCESS;\n\n}\nPHP_METHOD(Beanspeak_Greeting, __construct) {\nzval *_0, *_1, *_2, *_3 = NULL;\nint ZEPHIR_LAST_CALL_STATUS;\n\nZEPHIR_MM_GROW();\n\nZEPHIR_INIT_VAR(_0);\nZVAL_LONG(_0, 0);\nZEPHIR_INIT_VAR(_1);\nZVAL_LONG(_1, 1000000);\nZEPHIR_INIT_VAR(_2);\nZVAL_STRING(_2, \"message\", ZEPHIR_TEMP_PARAM_COPY);\nZEPHIR_CALL_FUNCTION(&_3, \"array_fill\", NULL, 18, _0, _1, _2);\nzephir_check_temp_parameter(_2);\nzephir_check_call_status();\nzephir_update_property_this(this_ptr, SL(\"_queue\"), _3 TSRMLS_CC);\nZEPHIR_MM_RESTORE();\n\n}\nzend_object_value zephir_init_properties_Beanspeak_Greeting(zend_class_entry *class_type TSRMLS_DC) {\n    zval *_0, *_1$$3;\n\n    ZEPHIR_MM_GROW();\n\n{\n    zval *this_ptr = NULL;\n    ZEPHIR_CREATE_OBJECT(this_ptr, class_type);\n    _0 = zephir_fetch_nproperty_this(this_ptr, SL(\"_queue\"), PH_NOISY_CC);\n    if (Z_TYPE_P(_0) == IS_NULL) {\n        ZEPHIR_INIT_VAR(_1$$3);\n        array_init(_1$$3);\n        zephir_update_property_this(this_ptr, SL(\"_queue\"), _1$$3 TSRMLS_CC);\n    }\n    ZEPHIR_MM_RESTORE();\n    return Z_OBJVAL_P(this_ptr);\n}\n\n}\n```\nBacktrace without Xdebug (PHP 7)\n```\nzephir_memory_restore_stack_common: observed variable #0 (0x7fffe42f3cf0) has too many references (1000001), type=6  [(null)]\n0  0x7f258d54e95e [/usr/lib/php/20151012/beanspeak.so(zephir_print_backtrace+0x2e) [0x7f258d54e95e]]\n1  0x7f258d54cc22 [/usr/lib/php/20151012/beanspeak.so(+0x10c22) [0x7f258d54cc22]]\n2  0x7f258d54cd1e [/usr/lib/php/20151012/beanspeak.so(zephir_memory_restore_stack+0xfa) [0x7f258d54cd1e]]\n3  0x7f258d587471 [/usr/lib/php/20151012/beanspeak.so(zim_Beanspeak_Greeting___construct+0x3b5) [0x7f258d587471]]\n4  0x561138a5293b [php(dtrace_execute_internal+0x2b) [0x561138a5293b]]\n5  0x561138adbe64 [php(+0x2cfe64) [0x561138adbe64]]\n6  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n7  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n8  0x561138a54173 [php(zend_call_function+0x613) [0x561138a54173]]\n9  0x56113895e9ee [php(zim_reflection_method_invokeArgs+0x26e) [0x56113895e9ee]]\n10  0x561138a5293b [php(dtrace_execute_internal+0x2b) [0x561138a5293b]]\n11  0x561138adbe64 [php(+0x2cfe64) [0x561138adbe64]]\n12  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n13  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n14  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n15  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n16  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n17  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n18  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n19  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n20  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n21  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n22  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n23  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n24  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n25  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n26  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n27  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n28  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n29  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n30  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n31  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n32  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n33  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n34  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n35  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n36  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n37  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n38  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n39  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n40  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n41  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n42  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n43  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n44  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n45  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n46  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n47  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n48  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n49  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n50  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n51  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n52  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n53  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n54  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n55  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n56  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n57  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n58  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n59  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n60  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n61  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n62  0x561138adbb30 [php(+0x2cfb30) [0x561138adbb30]]\n63  0x561138a9e3fb [php(execute_ex+0x1b) [0x561138a9e3fb]]\n64  0x561138a52839 [php(dtrace_execute_ex+0x69) [0x561138a52839]]\n65  0x561138ae780f [php(zend_execute+0x1af) [0x561138ae780f]]\n66  0x561138a61e74 [php(zend_execute_scripts+0xb4) [0x561138a61e74]]\n67  0x561138a05938 [php(php_execute_script+0x2d8) [0x561138a05938]]\n68  0x561138ae93e9 [php(+0x2dd3e9) [0x561138ae93e9]]\n69  0x5611388f4c00 [php(main+0x510) [0x5611388f4c00]]\n70  0x7f25a52caf45 [/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7f25a52caf45]]\n71  0x5611388f4c9b [php(+0xe8c9b) [0x5611388f4c9b]]\n``\n. Refs #304\n. @steffengy Could you please deal with this\n. @mervick Thanks\n. Could you please explain a bit more?\n. Nope :) Only classes I guess\n. Oh! \n. This has been addressed. And usemaster` branch :)\n. The Zephir language syntax is similar to PHP but it is not equal to PHP. This means for example that not all things from PHP will also work well in Zephir\n. I think this is related to:\nhttps://github.com/phalcon/zephir/issues/988\nhttps://github.com/phalcon/zephir/issues/1119\nAnd yes, you need to use static instead self\n. @Jurigag . @steffengy Could you please explain. This is solution to reduce these warnings http://www.phalcon.io/phalconphp-and-php7 (see build log)?\n. Thanks\n. @steffengy These warnings occur even when the libsodium is enabled. Zephir  doesn't know anything about namespaced functions. And attempting to add the prototypes:\n``` php\nnamespace Sodium\n{\n    function randombytes_buf($number)\n    {}\nfunction randombytes_uniform($range)\n{}\n\n}\n```\nthrows fatal error:\n```\nPHP Fatal error:  Cannot redeclare Sodium\\randombytes_buf() in /zephir/prototypes/libsodium/libsodium.php on line 6\nPHP Stack trace:\nPHP   1. {main}() /usr/share/zephir/compiler.php:0\nPHP   2. Zephir\\Bootstrap::boot() /usr/share/zephir/compiler.php:21\nPHP   3. Zephir\\Commands\\CommandAbstract->execute() /usr/share/zephir/Library/Bootstrap.php:200\nPHP   4. Zephir\\Compiler->buildDev() /usr/share/zephir/Library/Commands/CommandAbstract.php:108\nPHP   5. Zephir\\Compiler->install() /usr/share/zephir/Library/Compiler.php:1358\nPHP   6. Zephir\\Compiler->compile() /usr/share/zephir/Library/Compiler.php:1267\nPHP   7. Zephir\\Compiler->generate() /usr/share/zephir/Library/Compiler.php:1131\nFatal error: Cannot redeclare Sodium\\randombytes_buf() in /zephir/prototypes/libsodium/libsodium.php on line 6\nCall Stack:\n    0.0001     218024   1. {main}() /usr/share/zephir/compiler.php:0\n    0.0010     271888   2. Zephir\\Bootstrap::boot() /usr/share/zephir/compiler.php:21\n    0.0047     459832   3. Zephir\\Commands\\CommandAbstract->execute() /usr/share/zephir/Library/Bootstrap.php:200\n    0.0148    1636104   4. Zephir\\Compiler->buildDev() /usr/share/zephir/Library/Commands/CommandAbstract.php:108\n    0.0148    1636464   5. Zephir\\Compiler->install() /usr/share/zephir/Library/Compiler.php:1358\n    0.0150    1637648   6. Zephir\\Compiler->compile() /usr/share/zephir/Library/Compiler.php:1267\n    0.0150    1639576   7. Zephir\\Compiler->generate() /usr/share/zephir/Library/Compiler.php:1131\n```\nany workaround to solve this?\n. ``` zephir\n    public function test1()\n    {\n        var format;\n    let format = \"some string\";\n\n    return memstr(format, \"some\");\n}\n\npublic function test2()\n{\n    var format;\n\n    let format = \"some string\";\n\n    return memstr(format, \"another\");\n}\n\n```\nphp\nvar_dump($test->test1()); // true\nvar_dump($test->test2()); // false\n$ php --version\nPHP 7.0.5-3+donate.sury.org~trusty+1 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies\n    with Xdebug v2.4.0, Copyright (c) 2002-2016, by Derick Rethans\n$ zephir version\n0.9.2a-dev\n. Confirm this issue. \n$ php -v\nPHP 7.0.5-3+donate.sury.org~trusty+1 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies\n    with Xdebug v2.4.0, Copyright (c) 2002-2016, by Derick Rethans\n$ zephir version\n0.9.2a-dev\n. Introduced in the development branch. Could you please provide script to reproduce?\n. This issue was moved to phalcon/php-zephir-parser#12. @steffengy \n. Note: The segmentation fault happens only after connect. In this case:\n``` php\nclass ConnectTest extends \\PHPUnit_Framework_TestCase\n{\n    public function testConnection()\n    {\n        $client = new \\Beanspeak\\Fclose;\n    $client->disconnect();\n}\n\n}\n```\nall OK\n. Used zephir builddev --ZendEngine3, zephir build --ZendEngine3, zephir builddev, zephir build \nall the same.\n$ zephir version\n0.9.2a-dev\n. I simplified the code\n``` zephir\nnamespace Beanspeak;\nclass Fclose\n{\n    protected socket;\npublic function connect() -> void\n{\n    var socket;\n\n    let socket = pfsockopen(\"172.24.0.1\", 11300, null, null, 5);\n\n    if typeof socket != \"resource\" {\n        throw new \\Exception(\"Can't estabilish connection.\");\n    }\n\n    stream_set_timeout(socket, -1, null);\n\n    let this->socket = socket;\n}\n\npublic function disconnect() -> boolean\n{\n    fclose(this->socket);\n    let this->socket = null;\n\n    return true;\n}\n\n}\n```\nresult:\n``\nReading symbols from /usr/local/phpenv/versions/7.0.5/bin/php...done.\n[New LWP 188]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated byphp /app/vendor/bin/phpunit tests/ConnectTest.php'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  zend_mm_alloc_small (size=, bin_num=2, heap=0x7f50b6a00040) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1295\n1295    /tmp/php-build/source/7.0.5/Zend/zend_alloc.c: No such file or directory.\n(gdb) (gdb) #0  zend_mm_alloc_small (size=, bin_num=2, heap=0x7f50b6a00040) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1295\n        p = 0x7f50b610845000\n1  zend_mm_alloc_heap (size=, heap=0x7f50b6a00040) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1366\n    ptr = 0x7f50b6a00050\n\n2  zend_mm_realloc_heap (heap=0x7f50b6a00040, ptr=0x7f50b6145580, size=, copy_size=24) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1644\n    orig_peak = 3352160\n    orig_real_peak = 4194304\n    page_offset = 1332608\n    old_size = 128\n    new_size = <optimized out>\n\n3  0x00000000008057da in pass_two (op_array=0x7f50b6151498) at /tmp/php-build/source/7.0.5/Zend/zend_opcode.c:594\n    opline = <optimized out>\n    end = <optimized out>\n\n4  0x00000000007feb51 in zend_compile_func_decl (result=result@entry=0x0, ast=ast@entry=0x7f50b615e678) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:4912\n    decl = 0x7f50b615e678\n    params_ast = 0x7f50b615e1a0\n    uses_ast = 0x0\n    stmt_ast = 0x7f50b615e1d0\n    return_type_ast = 0x0\n    is_method = 1 '\\001'\n    orig_op_array = 0x7f50b60f89a0\n    op_array = 0x7f50b6151498\n    orig_oparray_context = {opcodes_size = 64, vars_size = 0, literals_size = 16, current_brk_cont = -1, backpatch_count = 0, in_finally = 0, fast_call_var = 4294967295, labels = 0x0}\n\n5  0x00000000007fcc8a in zend_compile_stmt (ast=0x7f50b615e678) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7065\nNo locals.\n6  0x00000000007fd4f7 in zend_compile_stmt_list (ast=ast@entry=0x7f50b615e108) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:4358\n    i = 0\n\n7  0x00000000007fcb0e in zend_compile_stmt (ast=ast@entry=0x7f50b615e108) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7009\nNo locals.\n8  0x00000000007fd82d in zend_compile_class_decl (ast=ast@entry=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:5305\n    decl = 0x7f50b6161200\n    extends_ast = 0x0\n    implements_ast = 0x0\n    stmt_ast = 0x7f50b615e108\n    name = <optimized out>\n    lcname = <optimized out>\n    import_name = <optimized out>\n    ce = 0x7f50b61512a0\n    opline = 0x7f50b6a7e060\n    declare_node = {op_type = 4 '\\004', flag = 226 '\\342', u = {op = {constant = 0, var = 0, num = 0, opline_num = 0, jmp_offset = 0}, constant = {value = {lval = 139981574111232, dval = 6.9160086819140155e-310, counted = 0x7f5000000000, str = 0x7f5000000000, arr = 0x7f5000000000, obj = 0x7f5000000000, res = 0x7f5000000000, ref = 0x7f5000000000, ast = 0x7f5000000000, zv = 0x7f5000000000, ptr = 0x7f5000000000, ce = 0x7f5000000000, func = 0x7f5000000000, ww = {w1 = 0, w2 = 32592}}, u1 = {v = {type = 240 '\\360', type_flags = 140 '\\214', const_flags = 9 '\\t', reserved = 182 '\\266'}, type_info = 3054079216}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}}}\n    extends_node = {op_type = 224 '\\340', flag = 215 '\\327', u = {op = {constant = 3054775264, var = 3054775264, num = 3054775264, opline_num = 3054775264, jmp_offset = 3054775264}, constant = {value = {lval = 139984628886496, dval = 6.9161596078653863e-310, counted = 0x7f50b6142be0, str = 0x7f50b6142be0, arr = 0x7f50b6142be0, obj = 0x7f50b6142be0, res = 0x7f50b6142be0, ref = 0x7f50b6142be0, ast = 0x7f50b6142be0, zv = 0x7f50b6142be0, ptr = 0x7f50b6142be0, ce = 0x7f50b6142be0, func = 0x7f50b6142be0, ww = {w1 = 3054775264, w2 = 32592}}, u1 = {v = {type = 240 '\\360', type_flags = 140 '\\214', const_flags = 9 '\\t', reserved = 182 '\\266'}, type_info = 3054079216}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}}}\n    original_ce = 0x0\n    original_implementing_class = {op_type = 0 '\\000', flag = 0 '\\000', u = {op = {constant = 0, var = 0, num = 0, opline_num = 0, jmp_offset = 0}, constant = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}}}\n\n9  0x00000000007fcc28 in zend_compile_stmt (ast=ast@entry=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7077\nNo locals.\n10 0x00000000007fee4a in zend_compile_top_stmt (ast=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:6983\nNo locals.\n11 0x00000000007fee8f in zend_compile_top_stmt (ast=0x7f50b615e018) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:6978\n    i = 2\n\n12 0x00000000007dad06 in compile_file (file_handle=, type=) at Zend/zend_language_scanner.l:607\n    retval_zv = {value = {lval = 1, dval = 4.9406564584124654e-324, counted = 0x1, str = 0x1, arr = 0x1, obj = 0x1, res = 0x1, ref = 0x1, ast = 0x1, zv = 0x1, ptr = 0x1, ce = 0x1, func = 0x1, ww = {w1 = 1, w2 = 0}}, u1 = {v = {type = 4 '\\004', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 4}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}\n    original_file_context = {declarables = {ticks = 0}, implementing_class = {op_type = 0 '\\000', flag = 0 '\\000', u = {op = {constant = 0, var = 0, num = 0, opline_num = 0, jmp_offset = 0}, constant = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}}}, current_namespace = 0x0, in_namespace = 0 '\\000', has_bracketed_namespaces = 0 '\\000', imports = 0x0, imports_function = 0x0, imports_const = 0x0}\n    original_oparray_context = {opcodes_size = 0, vars_size = 0, literals_size = 0, current_brk_cont = 0, backpatch_count = 0, in_finally = 0, fast_call_var = 0, labels = 0x0}\n    original_active_op_array = 0x0\n    original_in_compilation = 0 '\\000'\n    original_lex_state = {yy_leng = 0, yy_start = 0x0, yy_text = 0x0, yy_cursor = 0x0, yy_marker = 0x0, yy_limit = 0x0, yy_state = 0, state_stack = {size = 4, top = 0, max = 0, elements = 0x0}, heredoc_label_stack = {top = 0, max = 0, elements = 0x0, top_element = 0x0, persistent = 0 '\\000'}, in = 0x0, lineno = 0, filename = 0x0, script_org = 0x0, script_org_size = 0, script_filtered = 0x0, script_filtered_size = 0, input_filter = 0x0, output_filter = 0x0, script_encoding = 0x0, on_event = 0x0, ast = 0x0, ast_arena = 0x0}\n    op_array = 0x7f50b60f89a0\n\n13 0x000000000065a7b0 in phar_compile_file (file_handle=, type=) at /tmp/php-build/source/7.0.5/ext/phar/phar.c:3322\n    __orig_bailout = 0x7ffeade0a760\n    __bailout = {{__jmpbuf = {139984638759576, 2640496700650178104, 140731815592912, 140731815592928, 139984638145200, 139984638515072, -2640879580765993416, 2640495905233847864}, __mask_was_saved = 0, __saved_mask = {__val = {140731815592735, 139984638146208, 139984756922390, 140728898420860, 140731815592784, 139984630913888, 140731815593056, 139984630924112, 139984633349592, 139984638146112, 139984718141280, 64, 36, 140731815593200, 139984638146016, 139984639967872}}}}\n    res = <optimized out>\n    name = 0x0\n    failed = 0\n    phar = 0x5\n\n14 0x00007f50b659c8bd in xdebug_compile_file (file_handle=, type=) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:2112\n    op_array = <optimized out>\n\n15 0x00000000007dae05 in compile_filename (type=2, filename=filename@entry=0x7f50b6a17310) at Zend/zend_language_scanner.l:647\n    file_handle = {handle = {fd = -1240490752, fp = 0x7f50b60f9d00, stream = {handle = 0x7f50b60f9d00, isatty = 0, mmap = {len = 4519, pos = 0, map = 0x0, buf = 0x7f50bdd6e000 <error: Cannot access memory at address 0x7f50bdd6e000>, old_handle = 0x0, old_closer = 0x0}, reader = 0x7c9dd0 <_php_stream_read>, fsizer = 0x7b1a10 <php_zend_stream_fsizer>, closer = 0x7b19f0 <php_zend_stream_mmap_closer>}}, filename = 0x7f50b6aad298 \"/app/vendor/sebastian/global-state/src/Restorer.php\", opened_path = 0x7f50b6142b90, type = ZEND_HANDLE_MAPPED, free_filename = 0 '\\000'}\n    tmp = {value = {lval = 390880811760, dval = 1.9312078070915512e-312, counted = 0x5b024fdaf0, str = 0x5b024fdaf0, arr = 0x5b024fdaf0, obj = 0x5b024fdaf0, res = 0x5b024fdaf0, ref = 0x5b024fdaf0, ast = 0x5b024fdaf0, zv = 0x5b024fdaf0, ptr = 0x5b024fdaf0, ce = 0x5b024fdaf0, func = 0x5b024fdaf0, ww = {w1 = 38787824, w2 = 91}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}\n    retval = <optimized out>\n    opened_path = 0x0\n\n16 0x0000000000891737 in ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:29215\n    new_op_array = 0x0\n    inc_filename = 0x7f50b6a17310\n    tmp_inc_filename = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}\n    failure_retval = 0 '\\000'\n\n17 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a04938\n    orig_execute_data = 0x7f50b6a17200\n\n18 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a172b0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6a71780\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266e1c0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23914\n    le = <optimized out>\n\n19 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a172b0\n    fbc = 0x7f50b6a04938\n    object = <optimized out>\n    ret = <optimized out>\n\n20 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a045f8\n    orig_execute_data = 0x11767c0 <executor_globals>\n\n21 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a17200) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6a65bc0\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266fc50\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23912\n    le = <optimized out>\n\n22 0x0000000000802074 in zend_call_function (fci=fci@entry=0x7ffeade08890, fci_cache=fci_cache@entry=0x7ffeade08860) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:863\n    call_via_handler = 0\n    i = <optimized out>\n    calling_scope = <optimized out>\n    call = 0x6e\n    dummy_execute_data = {opline = 0x25afa40, call = 0x0, return_value = 0x0, func = 0x7ffeade087d0, This = {value = {lval = 139984628602624, dval = 6.916159593840246e-310, counted = 0x7f50b60fd700, str = 0x7f50b60fd700, arr = 0x7f50b60fd700, obj = 0x7f50b60fd700, res = 0x7f50b60fd700, ref = 0x7f50b60fd700, ast = 0x7f50b60fd700, zv = 0x7f50b60fd700, ptr = 0x7f50b60fd700, ce = 0x7f50b60fd700, func = 0x7f50b60fd700, ww = {w1 = 3054491392, w2 = 32592}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}, called_scope = 0x7ffeade08848, prev_execute_data = 0x0, symbol_table = 0x0, run_time_cache = 0x0, literals = 0x1}\n    fci_cache_local = {initialized = 16 '\\020', function_handler = 0x6011767c0, calling_scope = 0x7f50b637cade, called_scope = 0x7ffeade08830, object = 0x100000000}\n    func = 0x7f50b6a045f8\n    orig_scope = 0x0\n\n23 0x000000000082bd24 in zend_call_method (object=0x7f50b6a5c908, obj_ce=, fn_proxy=0x7f50b6a5c900, function_name=0x7f50b6aad478 \"composer\\autoload\\classloader::loadclass\\001\", function_name_len=, retval_ptr=retval_ptr@entry=0x0, param_count=param_count@entry=1, arg1=0x7f50b6a171f0, arg2=arg2@entry=0x0) at /tmp/php-build/source/7.0.5/Zend/zend_interfaces.c:104\n    fcic = {initialized = 1 '\\001', function_handler = 0x7f50b6a045f8, calling_scope = 0x7f50b6a03600, called_scope = 0x7f50b6a03600, object = 0x7f50b6a709c0}\n    result = <optimized out>\n    fci = {size = 72, function_table = 0x26362c0, function_name = {value = {lval = 139984628884976, dval = 6.9161596077902884e-310, counted = 0x7f50b61425f0, str = 0x7f50b61425f0, arr = 0x7f50b61425f0, obj = 0x7f50b61425f0, res = 0x7f50b61425f0, ref = 0x7f50b61425f0, ast = 0x7f50b61425f0, zv = 0x7f50b61425f0, ptr = 0x7f50b61425f0, ce = 0x7f50b61425f0, func = 0x7f50b61425f0, ww = {w1 = 3054773744, w2 = 32592}}, u1 = {v = {type = 6 '\\006', type_flags = 20 '\\024', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 5126}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}, symbol_table = 0x0, retval = 0x7ffeade08830, params = 0x7ffeade08840, object = 0x7f50b6a709c0, no_separation = 1 '\\001', param_count = 1}\n    retval = {value = {lval = 139984635730336, dval = 6.9161599459960093e-310, counted = 0x7f50b67c99a0 <xdebug_globals>, str = 0x7f50b67c99a0 <xdebug_globals>, arr = 0x7f50b67c99a0 <xdebug_globals>, obj = 0x7f50b67c99a0 <xdebug_globals>, res = 0x7f50b67c99a0 <xdebug_globals>, ref = 0x7f50b67c99a0 <xdebug_globals>, ast = 0x7f50b67c99a0 <xdebug_globals>, zv = 0x7f50b67c99a0 <xdebug_globals>, ptr = 0x7f50b67c99a0 <xdebug_globals>, ce = 0x7f50b67c99a0 <xdebug_globals>, func = 0x7f50b67c99a0 <xdebug_globals>, ww = {w1 = 3061619104, w2 = 32592}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}\n    function_table = <optimized out>\n    params = {{value = {lval = 139984638812720, dval = 6.9161600982860135e-310, counted = 0x7f50b6aba230, str = 0x7f50b6aba230, arr = 0x7f50b6aba230, obj = 0x7f50b6aba230, res = 0x7f50b6aba230, ref = 0x7f50b6aba230, ast = 0x7f50b6aba230, zv = 0x7f50b6aba230, ptr = 0x7f50b6aba230, ce = 0x7f50b6aba230, func = 0x7f50b6aba230, ww = {w1 = 3064701488, w2 = 32592}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 6}, u2 = {var_flags = 48, next = 48, cache_slot = 48, lineno = 48, num_args = 48, fe_pos = 48, fe_iter_idx = 48}}, {value = {lval = 140731815594272, dval = 6.9530755361995208e-310, counted = 0x7ffeade08920, str = 0x7ffeade08920, arr = 0x7ffeade08920, obj = 0x7ffeade08920, res = 0x7ffeade08920, ref = 0x7ffeade08920, ast = 0x7ffeade08920, zv = 0x7ffeade08920, ptr = 0x7ffeade08920, ce = 0x7ffeade08920, func = 0x7ffeade08920, ww = {w1 = 2917173536, w2 = 32766}}, u1 = {v = {type = 96 '`', type_flags = 136 '\\210', const_flags = 224 '\\340', reserved = 173 '\\255'}, type_info = 2917173344}, u2 = {var_flags = 32766, next = 32766, cache_slot = 32766, lineno = 32766, num_args = 32766, fe_pos = 32766, fe_iter_idx = 32766}}}\n\n24 0x00000000006cecf4 in zif_spl_autoload_call (execute_data=, return_value=) at /tmp/php-build/source/7.0.5/ext/spl/php_spl.c:429\n    pos = 0\n    num_idx = 139984638144912\n    l_autoload_running = 0\n    class_name = 0x7f50b6a171f0\n    lc_name = 0x7f50b60d9800\n    func_name = 0x7f50b6aad460\n\n25 0x00007f50b659ded5 in xdebug_execute_internal (current_execute_data=0x7f50b6a17190, return_value=0x7ffeade08b00) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:2037\n    edata = <optimized out>\n    fse = 0x266de10\n    do_return = 0\n    function_nr = 23911\n    restore_error_handler_situation = 0\n    tmp_error_cb = 0x0\n\n26 0x00000000008024c8 in zend_call_function (fci=fci@entry=0x7ffeade08b40, fci_cache=fci_cache@entry=0x7ffeade08b10) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:884\n    call_via_handler = 0\n    i = <optimized out>\n    calling_scope = <optimized out>\n    call = 0x6e\n    dummy_execute_data = {opline = 0x0, call = 0x0, return_value = 0x0, func = 0x0, This = {value = {lval = 139984627691392, dval = 6.9161595488194034e-310, counted = 0x7f50b601ef80, str = 0x7f50b601ef80, arr = 0x7f50b601ef80, obj = 0x7f50b601ef80, res = 0x7f50b601ef80, ref = 0x7f50b601ef80, ast = 0x7f50b601ef80, zv = 0x7f50b601ef80, ptr = 0x7f50b601ef80, ce = 0x7f50b601ef80, func = 0x7f50b601ef80, ww = {w1 = 3053580160, w2 = 32592}}, u1 = {v = {type = 8 '\\b', type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 2 '\\002'}, type_info = 33557512}, u2 = {var_flags = 0, next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0}}, called_scope = 0x7f50b609b7a0, prev_execute_data = 0x7f50b6a16fa0, symbol_table = 0x0, run_time_cache = 0x7f50b61511b8, literals = 0x7f50b6beb700}\n    fci_cache_local = {initialized = 56 '8', function_handler = 0x4746454443424100, calling_scope = 0x4f4e4d4c4b4a4948, called_scope = 0x5756555453525150, object = 0x5f00005c005a5958}\n    func = 0x24cef50\n    orig_scope = 0x7f50b6bb7410\n\n27 0x0000000000802792 in zend_lookup_class_ex (name=name@entry=0x7f50b6aba230, key=0x7f50b6beb810, use_autoload=use_autoload@entry=1) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:1044\n    ce = <optimized out>\n    args = {{value = {lval = 139984638812720, dval = 6.9161600982860135e-310, counted = 0x7f50b6aba230, str = 0x7f50b6aba230, arr = 0x7f50b6aba230, obj = 0x7f50b6aba230, res = 0x7f50b6aba230, ref = 0x7f50b6aba230, ast = 0x7f50b6aba230, zv = 0x7f50b6aba230, ptr = 0x7f50b6aba230, ce = 0x7f50b6aba230, func = 0x7f50b6aba230, ww = {w1 = 3064701488, w2 = 32592}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 6}, u2 = {var_flags = 32766, next = 32766, cache_slot = 32766, lineno = 32766, num_args = 32766, fe_pos = 32766, fe_iter_idx = 32766}}}\n    local_retval = {value = {lval = 139984640063264, dval = 6.9161601600710964e-310, counted = 0x7f50b6beb720, str = 0x7f50b6beb720, arr = 0x7f50b6beb720, obj = 0x7f50b6beb720, res = 0x7f50b6beb720, ref = 0x7f50b6beb720, ast = 0x7f50b6beb720, zv = 0x7f50b6beb720, ptr = 0x7f50b6beb720, ce = 0x7f50b6beb720, func = 0x7f50b6beb720, ww = {w1 = 3065952032, w2 = 32592}}, u1 = {v = {type = 1 '\\001', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 1}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}\n    lc_name = 0x7f50b6b2ed40\n    fcall_info = {size = 72, function_table = 0x248c9c0, function_name = {value = {lval = 38596192, dval = 1.9069052527492753e-316, counted = 0x24cee60, str = 0x24cee60, arr = 0x24cee60, obj = 0x24cee60, res = 0x24cee60, ref = 0x24cee60, ast = 0x24cee60, zv = 0x24cee60, ptr = 0x24cee60, ce = 0x24cee60, func = 0x24cee60, ww = {w1 = 38596192, w2 = 0}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 6}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}, symbol_table = 0x0, retval = 0x7ffeade08b00, params = 0x7ffeade08af0, object = 0x0, no_separation = 1 '\\001', param_count = 1}\n    fcall_cache = {initialized = 1 '\\001', function_handler = 0x24cef50, calling_scope = 0x0, called_scope = 0x0, object = 0x0}\n\n28 0x00000000008030d8 in zend_fetch_class_by_name (class_name=0x7f50b6aba230, key=, fetch_type=fetch_type@entry=512) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:1390\n    ce = <optimized out>\n\n29 0x0000000000892958 in ZEND_NEW_SPEC_CONST_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:3354\n    object_zval = {value = {lval = 139984640119392, dval = 6.916160162844188e-310, counted = 0x7f50b6bf9260, str = 0x7f50b6bf9260, arr = 0x7f50b6bf9260, obj = 0x7f50b6bf9260, res = 0x7f50b6bf9260, ref = 0x7f50b6bf9260, ast = 0x7f50b6bf9260, zv = 0x7f50b6bf9260, ptr = 0x7f50b6bf9260, ce = 0x7f50b6bf9260, func = 0x7f50b6bf9260, ww = {w1 = 3066008160, w2 = 32592}}, u1 = {v = {type = 168 '\\250', type_flags = 190 '\\276', const_flags = 187 '\\273', reserved = 182 '\\266'}, type_info = 3065757352}, u2 = {var_flags = 32592, next = 32592, cache_slot = 32592, lineno = 32592, num_args = 32592, fe_pos = 32592, fe_iter_idx = 32592}}\n    constructor = <optimized out>\n    ce = 0x0\n\n30 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6bbbea8\n    orig_execute_data = 0x7f50b6a167d0\n\n31 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a16fa0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6bf9280\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266f370\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23910\n    le = <optimized out>\n\n32 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a16fa0\n    fbc = 0x7f50b6bbbea8\n    object = <optimized out>\n    ret = <optimized out>\n\n33 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6bb8d18\n    orig_execute_data = 0x7f50b6a15d20\n\n34 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a167d0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6bf20c0\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266e740\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23731\n    le = <optimized out>\n\n35 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a167d0\n    fbc = 0x7f50b6bb8d18\n    object = <optimized out>\n    ret = <optimized out>\n\n36 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b60a5198\n    orig_execute_data = 0x7f50b6a152e0\n\n37 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a15d20) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b613f860\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266e0a0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23687\n    le = <optimized out>\n\n38 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a15d20\n    fbc = 0x7f50b60a5198\n    object = <optimized out>\n    ret = <optimized out>\n\n39 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6bb8c48\n    orig_execute_data = 0x7f50b6a14d00\n\n40 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a152e0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6bef140\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x266f240\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 23679\n    le = <optimized out>\n\n41 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a152e0\n    fbc = 0x7f50b6bb8c48\n    object = <optimized out>\n    ret = <optimized out>\n\n42 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b609cc30\n    orig_execute_data = 0x7f50b6a136b0\n\n43 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a14d00) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b60f3040\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x25c0610\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 20721\n    le = <optimized out>\n\n44 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a14d00\n    fbc = 0x7f50b609cc30\n    object = <optimized out>\n    ret = <optimized out>\n\n45 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a0fd40\n    orig_execute_data = 0x7f50b6a13290\n\n46 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a136b0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6b537e0\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x25bfda0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 20651\n    le = <optimized out>\n\n47 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a136b0\n    fbc = 0x7f50b6a0fd40\n    object = <optimized out>\n    ret = <optimized out>\n\n48 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a0dbe8\n    orig_execute_data = 0x7f50b6a131a0\n\n49 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a13290) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6b15c80\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x2635fb0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 102\n    le = <optimized out>\n\n50 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a13290\n    fbc = 0x7f50b6a0dbe8\n    object = <optimized out>\n    ret = <optimized out>\n\n51 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a0db18\n    orig_execute_data = 0x7f50b6a13030\n\n52 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a131a0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6a87300\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x2635dd0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 101\n    le = <optimized out>\n\n53 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n    call = 0x7f50b6a131a0\n    fbc = 0x7f50b6a0db18\n    object = <optimized out>\n    ret = <optimized out>\n\n54 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n    orig_opline = 0x7f50b6a6a0e0\n    orig_execute_data = 0x0\n\n55 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a13030) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n    op_array = 0x7f50b6a889e0\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x25ba180\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 0\n    le = <optimized out>\n\n56 0x0000000000894e47 in zend_execute (op_array=op_array@entry=0x7f50b6a6a0e0, return_value=return_value@entry=0x0) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:458\n    execute_data = 0x7f50b6a13030\n\n57 0x000000000080fd44 in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x0, file_count=file_count@entry=3) at /tmp/php-build/source/7.0.5/Zend/zend.c:1427\n    files = {{gp_offset = 40, fp_offset = 0, overflow_arg_area = 0x7ffeade09650, reg_save_area = 0x7ffeade095e0}}\n    i = 1\n    file_handle = 0x7ffeade0b9b0\n    op_array = 0x7f50b6a6a0e0\n\n58 0x00000000007b3f28 in php_execute_script (primary_file=primary_file@entry=0x7ffeade0b9b0) at /tmp/php-build/source/7.0.5/main/main.c:2487\n    realfile = \"/app/vendor/phpunit/phpunit/phpunit\\000[\", '\\000' <repeats 19 times>, \"n\\000\\000\\000w\", '\\000' <repeats 11 times>, \"\\237\\250\\340\\255\\376\\177\\000\\000|\\000\\000\\000\\000\\000\\000\\000\\300\\251\\340\\255\\376\\177\\000\\000|\\000\\000\\000\\000\\000\\000\\000`iN\\002\\000\\000\\000\\000\\340m\\027\\001\\000\\000\\000\\000\\320\\324P\\002\\000\\000\\000\\000\\022\\000\\000\\000\\022\", '\\000' <repeats 11 times>, \"\\003\\000\\000\\000\\003\", '\\000' <repeats 24 times>, \"\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\066\\000\\000\\000\\000\\000\\000\\000\\320\\247\\340\\255\", '\\000' <repeats 32 times>...\n    __orig_bailout = 0x7ffeade0ba20\n    __bailout = {{__jmpbuf = {1, -2640879582204639688, 38323824, 39430416, 0, 38323824, -2640879581191715272, 2640496089565906488}, __mask_was_saved = 0, __saved_mask = {__val = {1, 395581719604, 288, 18446603341893949377, 511101108243, 4, 140728898420788, 140731815602240, 8021971102622984448, 390842024060, 140731815607024, 38323824, 140731815606528, 0, 0, 38323824}}}}\n    prepend_file_p = 0x0\n    append_file_p = 0x0\n    prepend_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    append_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    old_cwd = 0x7ffeade09650 \"\"\n    retval = 0\n\n59 0x0000000000896a18 in do_cli (argc=3, argv=0x248c620) at /tmp/php-build/source/7.0.5/sapi/cli/php_cli.c:974\n    __orig_bailout = 0x7ffeade0cbc0\n    __bailout = {{__jmpbuf = {0, -2640879578319665608, 140731815611316, 0, 0, 18156032, -2640879582202542536, 2640495663217133112}, __mask_was_saved = 0, __saved_mask = {__val = {14454017, 14454041, 14315321, 14315342, 14454054, 14454074, 14454091, 14454655, 14454112, 14454126, 14454148, 14454167, 14454194, 14454223, 0, 7165064483209180463}}}}\n    c = <optimized out>\n    file_handle = {handle = {fd = -1230557168, fp = 0x7f50b6a73010, stream = {handle = 0x7f50b6a73010, isatty = 0, mmap = {len = 1133, pos = 0, map = 0x7f50bdd6f000, buf = 0x7f50bdd6f013 <error: Cannot access memory at address 0x7f50bdd6f013>, old_handle = 0x25ba150, old_closer = 0x82aca0 <zend_stream_stdio_closer>}, reader = 0x82acd0 <zend_stream_stdio_reader>, fsizer = 0x82ac40 <zend_stream_stdio_fsizer>, closer = 0x82abc0 <zend_stream_mmap_closer>}}, filename = 0x248c670 \"/app/vendor/bin/phpunit\", opened_path = 0x0, type = ZEND_HANDLE_MAPPED, free_filename = 0 '\\000'}\n    behavior = <optimized out>\n    reflection_what = 0x0\n    request_started = 1\n    exit_status = 0\n    php_optarg = 0x0\n    php_optind = 2\n    exec_direct = 0x0\n    exec_run = 0x0\n    exec_begin = 0x0\n    exec_end = 0x0\n    arg_free = <optimized out>\n    arg_excp = <optimized out>\n    script_file = <optimized out>\n    translated_path = <optimized out>\n    interactive = 0\n    lineno = 2\n    param_error = <optimized out>\n    hide_argv = 0\n\n60 0x00000000004419c0 in main (argc=3, argv=0x248c620) at /tmp/php-build/source/7.0.5/sapi/cli/php_cli.c:1344\n    __orig_bailout = 0x0\n    __bailout = {{__jmpbuf = {38324432, -2640879578319665608, 140731815611316, 0, 0, 18156032, -2640879578341685704, 2640496184907417144}, __mask_was_saved = 0, __saved_mask = {__val = {0, 390842023936, 0, 0, 139984759125280, 140731815611488, 140731815611472, 4131212846, 4310786, 4294967295, 139984756942167, 139984714281384, 139984759055592, 139984759055560, 139984714262184, 1}}}}\n    c = <optimized out>\n    exit_status = 0\n    module_started = 1\n    sapi_started = 1\n    php_optarg = 0x0\n    php_optind = 1\n    use_extended_info = 0\n    ini_path_override = 0x0\n    ini_entries = 0x248c8d0 \"html_errors=0\\nregister_argc_argv=1\\nimplicit_flush=1\\noutput_buffering=0\\nmax_execution_time=0\\nmax_input_time=-1\\n\"\n    ini_entries_len = 0\n    ini_ignore = 0\n    sapi_module = <optimized out>\n\n(gdb) rax            0x7f50b6a00050 139984638050384\nrbx            0x7f50b6a00040   139984638050368\nrcx            0xb  11\nrdx            0x2  2\nrsi            0x2  2\nrdi            0x17 23\nrbp            0x7f50b6145580   0x7f50b6145580\nrsp            0x7ffeade07d20   0x7ffeade07d20\nr8             0x7ffeade07d8f   140731815591311\nr9             0x6e 110\nr10            0x80 128\nr11            0x18 24\nr12            0x7f50b610845000 35836064933629952\nr13            0x145580 1332608\nr14            0x400000 4194304\nr15            0x332660 3352160\nrip            0x7ec316 0x7ec316 \neflags         0x10206  [ PF IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7ec316 :   mov    (%r12),%rdx\n   0x7ec31a : mov    %rdx,0x20(%rax)\n   0x7ec31e : jmp    0x7ec38a \n   0x7ec320 : mov    0x10(%rdi),%rax\n   0x7ec324 : test   %rax,%rax\n   0x7ec327 : je     0x7ec350 \n   0x7ec329 : mov    %r11,0x10(%rsp)\n   0x7ec32e : mov    %r10,%rdx\n   0x7ec331 : mov    %r10,0x8(%rsp)\n   0x7ec336 : mov    %r14,%rcx\n   0x7ec339 : mov    %rbp,%rsi\n   0x7ec33c : callq  *%rax\n   0x7ec33e : test   %eax,%eax\n   0x7ec340 : mov    0x8(%rsp),%r10\n   0x7ec345 : mov    0x10(%rsp),%r11\n   0x7ec34a : jne    0x7ecbd2 \n(gdb) \nThread 1 (Thread 0x7f50bdd54780 (LWP 188)):\n0  zend_mm_alloc_small (size=, bin_num=2, heap=0x7f50b6a00040) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1295\n1  zend_mm_alloc_heap (size=, heap=0x7f50b6a00040) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1366\n2  zend_mm_realloc_heap (heap=0x7f50b6a00040, ptr=0x7f50b6145580, size=, copy_size=24) at /tmp/php-build/source/7.0.5/Zend/zend_alloc.c:1644\n3  0x00000000008057da in pass_two (op_array=0x7f50b6151498) at /tmp/php-build/source/7.0.5/Zend/zend_opcode.c:594\n4  0x00000000007feb51 in zend_compile_func_decl (result=result@entry=0x0, ast=ast@entry=0x7f50b615e678) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:4912\n5  0x00000000007fcc8a in zend_compile_stmt (ast=0x7f50b615e678) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7065\n6  0x00000000007fd4f7 in zend_compile_stmt_list (ast=ast@entry=0x7f50b615e108) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:4358\n7  0x00000000007fcb0e in zend_compile_stmt (ast=ast@entry=0x7f50b615e108) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7009\n8  0x00000000007fd82d in zend_compile_class_decl (ast=ast@entry=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:5305\n9  0x00000000007fcc28 in zend_compile_stmt (ast=ast@entry=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:7077\n10 0x00000000007fee4a in zend_compile_top_stmt (ast=0x7f50b6161200) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:6983\n11 0x00000000007fee8f in zend_compile_top_stmt (ast=0x7f50b615e018) at /tmp/php-build/source/7.0.5/Zend/zend_compile.c:6978\n12 0x00000000007dad06 in compile_file (file_handle=, type=) at Zend/zend_language_scanner.l:607\n13 0x000000000065a7b0 in phar_compile_file (file_handle=, type=) at /tmp/php-build/source/7.0.5/ext/phar/phar.c:3322\n14 0x00007f50b659c8bd in xdebug_compile_file (file_handle=, type=) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:2112\n15 0x00000000007dae05 in compile_filename (type=2, filename=filename@entry=0x7f50b6a17310) at Zend/zend_language_scanner.l:647\n16 0x0000000000891737 in ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:29215\n17 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n18 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a172b0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n19 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n20 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n21 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a17200) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n22 0x0000000000802074 in zend_call_function (fci=fci@entry=0x7ffeade08890, fci_cache=fci_cache@entry=0x7ffeade08860) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:863\n23 0x000000000082bd24 in zend_call_method (object=0x7f50b6a5c908, obj_ce=, fn_proxy=0x7f50b6a5c900, function_name=0x7f50b6aad478 \"composer\\autoload\\classloader::loadclass\\001\", function_name_len=, retval_ptr=retval_ptr@entry=0x0, param_count=param_count@entry=1, arg1=0x7f50b6a171f0, arg2=arg2@entry=0x0) at /tmp/php-build/source/7.0.5/Zend/zend_interfaces.c:104\n24 0x00000000006cecf4 in zif_spl_autoload_call (execute_data=, return_value=) at /tmp/php-build/source/7.0.5/ext/spl/php_spl.c:429\n25 0x00007f50b659ded5 in xdebug_execute_internal (current_execute_data=0x7f50b6a17190, return_value=0x7ffeade08b00) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:2037\n26 0x00000000008024c8 in zend_call_function (fci=fci@entry=0x7ffeade08b40, fci_cache=fci_cache@entry=0x7ffeade08b10) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:884\n27 0x0000000000802792 in zend_lookup_class_ex (name=name@entry=0x7f50b6aba230, key=0x7f50b6beb810, use_autoload=use_autoload@entry=1) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:1044\n28 0x00000000008030d8 in zend_fetch_class_by_name (class_name=0x7f50b6aba230, key=, fetch_type=fetch_type@entry=512) at /tmp/php-build/source/7.0.5/Zend/zend_execute_API.c:1390\n29 0x0000000000892958 in ZEND_NEW_SPEC_CONST_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:3354\n30 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n31 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a16fa0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n32 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n33 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n34 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a167d0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n35 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n36 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n37 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a15d20) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n38 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n39 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n40 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a152e0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n41 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n42 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n43 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a14d00) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n44 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n45 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n46 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a136b0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n47 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n48 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n49 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a13290) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n50 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n51 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n52 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a131a0) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n53 0x0000000000889690 in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:800\n54 0x000000000084be8b in execute_ex (ex=) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:414\n55 0x00007f50b659d3ef in xdebug_execute_ex (execute_data=0x7f50b6a13030) at /tmp/php-build/source/xdebug-2.4.0/xdebug.c:1890\n56 0x0000000000894e47 in zend_execute (op_array=op_array@entry=0x7f50b6a6a0e0, return_value=return_value@entry=0x0) at /tmp/php-build/source/7.0.5/Zend/zend_vm_execute.h:458\n57 0x000000000080fd44 in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x0, file_count=file_count@entry=3) at /tmp/php-build/source/7.0.5/Zend/zend.c:1427\n58 0x00000000007b3f28 in php_execute_script (primary_file=primary_file@entry=0x7ffeade0b9b0) at /tmp/php-build/source/7.0.5/main/main.c:2487\n59 0x0000000000896a18 in do_cli (argc=3, argv=0x248c620) at /tmp/php-build/source/7.0.5/sapi/cli/php_cli.c:974\n60 0x00000000004419c0 in main (argc=3, argv=0x248c620) at /tmp/php-build/source/7.0.5/sapi/cli/php_cli.c:1344\n```\nIn php 5.4 - 5.6 all OK\n. ```\n/usr/local/phpenv/versions/$(phpenv global)/bin/php-config\nUsage: /usr/local/phpenv/versions/7.0.5/bin/php-config [OPTION]\nOptions:\n  --prefix            [/usr/local/phpenv/versions/7.0.5]\n  --includes          [-I/usr/local/phpenv/versions/7.0.5/include/php -I/usr/local/phpenv/versions/7.0.5/include/php/main -I/usr/local/phpenv/versions/7.0.5/include/php/TSRM -I/usr/local/phpenv/versions/7.0.5/include/php/Zend -I/usr/local/phpenv/versions/7.0.5/include/php/ext -I/usr/local/phpenv/versions/7.0.5/include/php/ext/date/lib]\n  --ldflags           [ -L/usr/lib/x86_64-linux-gnu]\n  --libs              [-lcrypt   -lz -lexslt -ltidy -lresolv -lcrypt -lreadline -ltermcap -lrt -lmcrypt -lpng -lz -ljpeg -lcurl -lz -lrt -lm -ldl -lnsl  -lxml2 -lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err -lssl -lcrypto -lcurl -lxml2 -lssl -lcrypto -lxml2 -lxml2 -lcrypt -lxml2 -lxml2 -lxml2 -lxml2 -lxslt -lxml2 -lssl -lcrypto -lcrypt ]\n  --extension-dir     [/usr/local/phpenv/versions/7.0.5/lib/php/extensions/no-debug-non-zts-20151012]\n  --include-dir       [/usr/local/phpenv/versions/7.0.5/include/php]\n  --man-dir           [/usr/local/phpenv/versions/7.0.5/php/man]\n  --php-binary        [/usr/local/phpenv/versions/7.0.5/bin/php]\n  --php-sapis         [ cli fpm phpdbg cgi]\n  --configure-options [--with-config-file-path=/usr/local/phpenv/versions/7.0.5/etc --with-config-file-scan-dir=/usr/local/phpenv/versions/7.0.5/etc/conf.d --prefix=/usr/local/phpenv/versions/7.0.5 --libexecdir=/usr/local/phpenv/versions/7.0.5/libexec --without-pear --with-gd --enable-sockets --with-jpeg-dir=/usr --with-png-dir=/usr --enable-exif --enable-zip --with-zlib --with-zlib-dir=/usr --with-kerberos --with-openssl --with-mcrypt=/usr --enable-soap --enable-xmlreader --with-xsl --enable-ftp --enable-cgi --with-curl=/usr --with-tidy --with-xmlrpc --enable-sysvsem --enable-sysvshm --enable-shmop --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pdo-sqlite --enable-pcntl --with-readline --enable-mbstring --disable-debug --enable-fpm --enable-bcmath --with-libdir=lib64]\n  --version           [7.0.5]\n  --vernum            [70005]\n```\n. Possible refs #1187\n. For this code\n``` zephir\n    public function disconnect() -> boolean\n    {\n        fclose(this->socket);\n        let this->socket = null;\n    return true;\n}\n\n```\nwas generated\nzephir build:\nzephir build --ZendEngine3:\n``` c\nPHP_METHOD(Beanspeak_Fclose, disconnect) {\nzval __$null, _0;\nZEPHIR_INIT_THIS();\n\nZVAL_NULL(&__$null);\nZVAL_UNDEF(&_0);\n\n\nzephir_read_property(&_0, this_ptr, SL(\"socket\"), PH_NOISY_CC | PH_READONLY);\nzephir_fclose(&_0 TSRMLS_CC);\nzephir_update_property_zval(this_ptr, SL(\"socket\"), &__$null);\nRETURN_BOOL(1);\n\n}\n```\nFor this code\n``` zephir\n    public function disconnect() -> boolean\n    {\n        var socket;\n        let socket = this->socket;\n    if typeof socket != \"resource\"  {\n        return false;\n    }\n\n    fclose(socket);\n    let this->socket = null;\n\n    return true;\n}\n\n```\nwas generated\nzephir build:\nzephir build --ZendEngine3:\n``` c\nPHP_METHOD(Beanspeak_Fclose, disconnect) {\nzval __$null, socket, _0;\nZEPHIR_INIT_THIS();\n\nZVAL_NULL(&__$null);\nZVAL_UNDEF(&socket);\nZVAL_UNDEF(&_0);\n\nZEPHIR_MM_GROW();\n\nzephir_read_property(&_0, this_ptr, SL(\"socket\"), PH_NOISY_CC | PH_READONLY);\nZEPHIR_CPY_WRT(&socket, &_0);\nif (Z_TYPE_P(&socket) != IS_RESOURCE) {\n    RETURN_MM_BOOL(0);\n}\nzephir_fclose(&socket TSRMLS_CC);\nzephir_update_property_zval(this_ptr, SL(\"socket\"), &__$null);\nRETURN_MM_BOOL(1);\n\n}\n```\nboth cases throw segmentation fault on PHP 7.\nI also noticed that this happens when using PHPUnit.\nThis code:\n``` zephir\nnamespace Beanspeak;\nclass Fclose\n{\n    protected socket;\npublic function connect() -> resource\n{\n    var socket;\n\n    let socket = pfsockopen(\"172.24.0.1\", 11300, null, null, 5);\n\n    if typeof socket != \"resource\" {\n        throw new \\Exception(\"Can't establish connection.\");\n    }\n\n    stream_set_timeout(socket, -1, null);\n\n    let this->socket = socket;\n\n    return socket;\n}\n\npublic function disconnect() -> boolean\n{\n    fclose(this->socket);\n    let this->socket = null;\n\n    return true;\n}\n\n}\n```\nand this test:\n``` php\n<?php\nerror_reporting(-1);\nini_set('display_errors', 1);\nini_set('display_startup_errors', 1);\n$client = new \\Beanspeak\\Fclose;\nvar_dump($client->connect());\nvar_dump($client->disconnect());\n```\nworks ok:\n```\nphp tests/php7.php\n/app/tests/php7.php:10:\nresource(4) of type (persistent stream)\n/app/tests/php7.php:11:\nbool(true)\n```\n. For code\n``` zephir\nnamespace Beanspeak;\nclass Fclose\n{\n    protected socket;\npublic function connect() -> resource\n{\n    var socket;\n\n    let socket = pfsockopen(\"172.24.0.1\", 11300, null, null, 5);\n\n    if typeof socket != \"resource\" {\n        throw new \\Exception(\"Can't establish connection.\");\n    }\n\n    stream_set_timeout(socket, -1, null);\n\n    let this->socket = socket;\n\n    return socket;\n}\n\npublic function disconnect() -> boolean\n{\n    fclose(this->socket);\n    let this->socket = null;\n\n    return true;\n}\n\n}\n```\ncode was generated for PHP 5.6:\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/fcall.h\"\ninclude \"kernel/exception.h\"\ninclude \"kernel/object.h\"\ninclude \"kernel/file.h\"\nZEPHIR_INIT_CLASS(Beanspeak_Fclose) {\nZEPHIR_REGISTER_CLASS(Beanspeak, Fclose, beanspeak, fclose, beanspeak_fclose_method_entry, 0);\n\nzend_declare_property_null(beanspeak_fclose_ce, SL(\"socket\"), ZEND_ACC_PROTECTED TSRMLS_CC);\n\nreturn SUCCESS;\n\n}\nPHP_METHOD(Beanspeak_Fclose, connect) {\nzval *socket = NULL, *_0, *_1, *_2, *_3, *_4, _5;\nint ZEPHIR_LAST_CALL_STATUS;\n\nZEPHIR_MM_GROW();\n\nZEPHIR_INIT_VAR(_0);\nZVAL_STRING(_0, \"172.24.0.1\", ZEPHIR_TEMP_PARAM_COPY);\nZEPHIR_INIT_VAR(_1);\nZVAL_LONG(_1, 11300);\nZEPHIR_INIT_VAR(_2);\nZVAL_NULL(_2);\nZEPHIR_INIT_VAR(_3);\nZVAL_NULL(_3);\nZEPHIR_INIT_VAR(_4);\nZVAL_LONG(_4, 5);\nZEPHIR_MAKE_REF(_2);\nZEPHIR_CALL_FUNCTION(&socket, \"pfsockopen\", NULL, 1, _0, _1, _2, _3, _4);\nzephir_check_temp_parameter(_0);\nZEPHIR_UNREF(_2);\nzephir_check_call_status();\nif (Z_TYPE_P(socket) != IS_RESOURCE) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"Can't establish connection.\", \"beanspeak/fclose.zep\", 14);\n    return;\n}\nZEPHIR_SINIT_VAR(_5);\nZVAL_LONG(&_5, -1);\nZEPHIR_CALL_FUNCTION(NULL, \"stream_set_timeout\", NULL, 4, socket, &_5, ZEPHIR_GLOBAL(global_null));\nzephir_check_call_status();\nzephir_update_property_this(this_ptr, SL(\"socket\"), socket TSRMLS_CC);\nRETURN_CCTOR(socket);\n\n}\nPHP_METHOD(Beanspeak_Fclose, disconnect) {\nzval *_0;\n\n\n_0 = zephir_fetch_nproperty_this(this_ptr, SL(\"socket\"), PH_NOISY_CC);\nzephir_fclose(_0 TSRMLS_CC);\nzephir_update_property_this(this_ptr, SL(\"socket\"), ZEPHIR_GLOBAL(global_null) TSRMLS_CC);\nRETURN_BOOL(1);\n\n}\n```\nfor PHP 7:\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/fcall.h\"\ninclude \"kernel/exception.h\"\ninclude \"kernel/object.h\"\ninclude \"kernel/file.h\"\nZEPHIR_INIT_CLASS(Beanspeak_Fclose) {\nZEPHIR_REGISTER_CLASS(Beanspeak, Fclose, beanspeak, fclose, beanspeak_fclose_method_entry, 0);\n\nzend_declare_property_null(beanspeak_fclose_ce, SL(\"socket\"), ZEND_ACC_PROTECTED TSRMLS_CC);\n\nreturn SUCCESS;\n\n}\nPHP_METHOD(Beanspeak_Fclose, connect) {\nzval __$null, socket, _0, _1, _2, _3, _4;\nint ZEPHIR_LAST_CALL_STATUS;\nZEPHIR_INIT_THIS();\n\nZVAL_NULL(&__$null);\nZVAL_UNDEF(&socket);\nZVAL_UNDEF(&_0);\nZVAL_UNDEF(&_1);\nZVAL_UNDEF(&_2);\nZVAL_UNDEF(&_3);\nZVAL_UNDEF(&_4);\n\nZEPHIR_MM_GROW();\n\nZEPHIR_INIT_VAR(&_0);\nZVAL_STRING(&_0, \"172.24.0.1\");\nZVAL_LONG(&_1, 11300);\nZVAL_NULL(&_2);\nZVAL_NULL(&_3);\nZVAL_LONG(&_4, 5);\nZEPHIR_MAKE_REF(&_2);\nZEPHIR_CALL_FUNCTION(&socket, \"pfsockopen\", NULL, 1, &_0, &_1, &_2, &_3, &_4);\nZEPHIR_UNREF(&_2);\nzephir_check_call_status();\nif (Z_TYPE_P(&socket) != IS_RESOURCE) {\n    ZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"Can't establish connection.\", \"beanspeak/fclose.zep\", 14);\n    return;\n}\nZVAL_LONG(&_1, -1);\nZEPHIR_CALL_FUNCTION(NULL, \"stream_set_timeout\", NULL, 4, &socket, &_1, &__$null);\nzephir_check_call_status();\nzephir_update_property_zval(this_ptr, SL(\"socket\"), &socket);\nRETURN_CCTOR(socket);\n\n}\nPHP_METHOD(Beanspeak_Fclose, disconnect) {\nzval __$null, _0;\nZEPHIR_INIT_THIS();\n\nZVAL_NULL(&__$null);\nZVAL_UNDEF(&_0);\n\n\nzephir_read_property(&_0, this_ptr, SL(\"socket\"), PH_NOISY_CC | PH_READONLY);\nzephir_fclose(&_0 TSRMLS_CC);\nzephir_update_property_zval(this_ptr, SL(\"socket\"), &__$null);\nRETURN_BOOL(1);\n\n}\n```\n. @steffengy What other information should I provide so that this issue could be addressed?\n. @phalcon Thanks!\n. @steffengy Could you please take a look\n. @steffengy ping :)\n. Could you please explain what risks are you talking about?\n. Frankly I never faced with such situation. But yes, it's a risk we're taking.\n. can't reproduce\n. It need to work with strings of an arbitrary size? \n. @steffengy \nAh :) I understand. No, I would like to add ability to use custom delimiter. One char, no more. So I need to refactor this.\n. @steffengy Could you please explain why now tests fails? I've tested this PR on my PC (PHP 5.4, 5.5, 5.6)  - all ok \n. @steffengy \nNevertheless could you take a look at the current version of PR?\n. @steffengy I would like to ask you how about the fact that both functions return the same result in case of error.\nNow zephir_uncamelize returns void but zephir_camelize returns RETURN_EMPTY_STRING().\n. Well I can to use RETURN_EMPTY_STRING() in both cases?\n. @steffengy Okay. I've took into account your advice and now the code looks really logical. Unfortunately the tests still failed. Frankly I'm not sure what exactly this test fails, but on my local machine everything works fine, including this test. \nCould you please take another look at the result?  :)\n. @steffengy gotcha :)  It seems to me test fails here: https://github.com/phalcon/zephir/blob/master/test/router/route.zep#L327\nzephir\n// Always pass the controller to lowercase\nlet routePaths[\"controller\"] = uncamelize(realClassName);\nnote uncamelize(realClassName) instead of realClassName->uncamelize().\nI examined the generated C code and found that in this place is generated:\nc\nzephir_uncamelize(_1$$10, realClassName);\ninstead of:\nc\nzephir_uncamelize(_1$$10, realClassName, NULL);\nSee my changes in Library/Optimizers/FunctionCall/UncamelizeOptimizer.php.\nI have no idea why this is happening. May be you have any idea?\nP.S. Also I've updated runtime (see latest commit).\n. @steffengy \n1. Should I rollback the changes from runtime? \n2. Yes, I did fullclean. Travis didn't?\nhttps://github.com/phalcon/zephir/blob/master/generated/ZendEngine_2/router/route.zep.c#L485\nhttps://github.com/phalcon/zephir/blob/master/.travis.yml#L33\n. @steffengy Well, tests (PHP 5.4 - 5.6) passes. Build fails on ZE3 but this is parser issue\n. @andresgutierrez @steffengy Fixed here https://github.com/phalcon/zephir/pull/1246\n. ``` zephir\nnamespace Summer;\nclass Summer\n{\n    public static function run()\n    {\n        var myObject;\n    let myObject = new \\stdClass();\n}\n\n}\n```\n. Compile custom extension with latest Zephir and PHP 7:\n```\nmmap() failed: [12] Cannot allocate memory\nSegmentation fault (core dumped)\nReading symbols from /usr/bin/php...(no debugging symbols found)...done.\n[New LWP 2007]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `/usr/bin/php7.0 -dextension=/usr/share/zephir/Library/../parser/zephir_parser.s'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f6d289b326a in zend_mm_gc ()\n(gdb) (gdb) #0  0x00007f6d289b326a in zend_mm_gc ()\nNo symbol table info available.\n1  0x00007f6d289b3bbc in ?? ()\nNo symbol table info available.\n2  0x00007f6d289b3e4d in ?? ()\nNo symbol table info available.\n3  0x00007f6d28a1396f in smart_str_erealloc ()\nNo symbol table info available.\n4  0x00007f6d17271482 in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n5  0x00007f6d17272b06 in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n6  0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n7  0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n8  0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n9  0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n10 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n11 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n12 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n13 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n14 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n15 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n16 0x00007f6d172706ab in ?? () from /usr/lib/php/20151012/json.so\nNo symbol table info available.\n17 0x00007f6d289c853b in dtrace_execute_internal ()\nNo symbol table info available.\n18 0x00007f6d2619ad61 in xdebug_execute_internal (current_execute_data=0x7f6d26616e00, return_value=0x7f6d26616c20) at /tmp/pear/temp/xdebug/xdebug.c:2035\n    edata = <optimized out>\n    fse = 0x7f6d2a55dfb0\n    do_return = 0\n    function_nr = 409\n    restore_error_handler_situation = 0\n    tmp_error_cb = 0x0\n\n19 0x00007f6d28a517e4 in ?? ()\nNo symbol table info available.\n20 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n21 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n22 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26616940) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26790528\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55e240\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 400\n    le = <optimized out>\n\n23 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n24 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n25 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n26 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26615f70) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26790ba8\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55e390\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 399\n    le = <optimized out>\n\n27 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n28 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n29 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n30 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26615bf0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26612090\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55dd30\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 375\n    le = <optimized out>\n\n31 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n32 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n33 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n34 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266159e0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26612230\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a6c33d0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 334\n    le = <optimized out>\n\n35 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n36 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n37 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n38 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266146a0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d2678b5c8\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55d160\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 320\n    le = <optimized out>\n\n39 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n40 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n41 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n42 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26614040) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d2678b698\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55d420\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 312\n    le = <optimized out>\n\n43 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n44 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n45 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n46 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613cb0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d2678b908\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55d9d0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 298\n    le = <optimized out>\n\n47 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n48 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n49 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n50 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613c30) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d2678bc48\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a55cf50\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 297\n    le = <optimized out>\n\n51 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n52 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n53 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n54 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613940) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26604ef8\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a6cc420\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 224\n    le = <optimized out>\n\n55 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n56 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n57 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n58 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266130b0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d26603798\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a6c3140\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 15\n    le = <optimized out>\n\n59 0x00007f6d28a514b0 in ?? ()\nNo symbol table info available.\n60 0x00007f6d28a13bbb in execute_ex ()\nNo symbol table info available.\n61 0x00007f6d289c8439 in dtrace_execute_ex ()\nNo symbol table info available.\n62 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613030) at /tmp/pear/temp/xdebug/xdebug.c:1890\n    op_array = 0x7f6d2667a000\n    edata = <optimized out>\n    dummy = <optimized out>\n    fse = 0x7f6d2a6a29a0\n    xfse = <optimized out>\n    magic_cookie = <optimized out>\n    do_return = 0\n    function_nr = 0\n    le = <optimized out>\n\n63 0x00007f6d28a5cc5f in zend_execute ()\nNo symbol table info available.\n64 0x00007f6d289d7a84 in zend_execute_scripts ()\nNo symbol table info available.\n65 0x00007f6d2897b8e8 in php_execute_script ()\nNo symbol table info available.\n66 0x00007f6d28a5e839 in ?? ()\nNo symbol table info available.\n67 0x00007f6d2886b620 in main ()\nNo symbol table info available.\n(gdb) rax            0x80020000 2147614720\nrbx            0x7f6d26600040   140106771988544\nrcx            0x20000  131072\nrdx            0x7f6d00001c07   140106128169991\nrsi            0x7f6d00000000   140106128162816\nrdi            0x6  6\nrbp            0x7f6d26600060   0x7f6d26600060\nrsp            0x7ffdb38a6000   0x7ffdb38a6000\nr8             0x0  0\nr9             0x200    512\nr10            0x1  1\nr11            0x7f6d26600060   140106771988576\nr12            0x0  0\nr13            0x7f6d0dc15000   140106358935552\nr14            0x400000 4194304\nr15            0x2f4778 3098488\nrip            0x7f6d289b326a   0x7f6d289b326a \neflags         0x10206  [ PF IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7f6d289b326a :   cmp    (%rsi),%rbx\n   0x7f6d289b326d : jne    0x7f6d289b3601 \n   0x7f6d289b3273 : mov    %rdx,%rax\n   0x7f6d289b3276 : and    $0x1fffff,%eax\n   0x7f6d289b327b : shr    $0xc,%rax\n   0x7f6d289b327f : mov    0x1f8(%rsi,%rax,4),%ecx\n   0x7f6d289b3286 : movslq %eax,%rdi\n   0x7f6d289b3289 : test   $0x40000000,%ecx\n   0x7f6d289b328f : je     0x7f6d289b32a8 \n   0x7f6d289b3291 : and    $0x1ff0000,%ecx\n   0x7f6d289b3297 : mov    %eax,%edi\n   0x7f6d289b3299 : shr    $0x10,%ecx\n   0x7f6d289b329c : sub    %ecx,%edi\n   0x7f6d289b329e : movslq %edi,%rdi\n   0x7f6d289b32a1 : mov    0x1f8(%rsi,%rdi,4),%ecx\n   0x7f6d289b32a8 : mov    %ecx,%eax\n(gdb) \nThread 1 (Thread 0x7f6d28cff740 (LWP 2007)):\n0  0x00007f6d289b326a in zend_mm_gc ()\n1  0x00007f6d289b3bbc in ?? ()\n2  0x00007f6d289b3e4d in ?? ()\n3  0x00007f6d28a1396f in smart_str_erealloc ()\n4  0x00007f6d17271482 in ?? () from /usr/lib/php/20151012/json.so\n5  0x00007f6d17272b06 in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n6  0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\n7  0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n8  0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\n9  0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n10 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\n11 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n12 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\n13 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n14 0x00007f6d17271edf in ?? () from /usr/lib/php/20151012/json.so\n15 0x00007f6d1727295c in php_json_encode_zval () from /usr/lib/php/20151012/json.so\n16 0x00007f6d172706ab in ?? () from /usr/lib/php/20151012/json.so\n17 0x00007f6d289c853b in dtrace_execute_internal ()\n18 0x00007f6d2619ad61 in xdebug_execute_internal (current_execute_data=0x7f6d26616e00, return_value=0x7f6d26616c20) at /tmp/pear/temp/xdebug/xdebug.c:2035\n19 0x00007f6d28a517e4 in ?? ()\n20 0x00007f6d28a13bbb in execute_ex ()\n21 0x00007f6d289c8439 in dtrace_execute_ex ()\n22 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26616940) at /tmp/pear/temp/xdebug/xdebug.c:1890\n23 0x00007f6d28a514b0 in ?? ()\n24 0x00007f6d28a13bbb in execute_ex ()\n25 0x00007f6d289c8439 in dtrace_execute_ex ()\n26 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26615f70) at /tmp/pear/temp/xdebug/xdebug.c:1890\n27 0x00007f6d28a514b0 in ?? ()\n28 0x00007f6d28a13bbb in execute_ex ()\n29 0x00007f6d289c8439 in dtrace_execute_ex ()\n30 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26615bf0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n31 0x00007f6d28a514b0 in ?? ()\n32 0x00007f6d28a13bbb in execute_ex ()\n33 0x00007f6d289c8439 in dtrace_execute_ex ()\n34 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266159e0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n35 0x00007f6d28a514b0 in ?? ()\n36 0x00007f6d28a13bbb in execute_ex ()\n37 0x00007f6d289c8439 in dtrace_execute_ex ()\n38 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266146a0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n39 0x00007f6d28a514b0 in ?? ()\n40 0x00007f6d28a13bbb in execute_ex ()\n41 0x00007f6d289c8439 in dtrace_execute_ex ()\n42 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26614040) at /tmp/pear/temp/xdebug/xdebug.c:1890\n43 0x00007f6d28a514b0 in ?? ()\n44 0x00007f6d28a13bbb in execute_ex ()\n45 0x00007f6d289c8439 in dtrace_execute_ex ()\n46 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613cb0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n47 0x00007f6d28a514b0 in ?? ()\n48 0x00007f6d28a13bbb in execute_ex ()\n49 0x00007f6d289c8439 in dtrace_execute_ex ()\n50 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613c30) at /tmp/pear/temp/xdebug/xdebug.c:1890\n51 0x00007f6d28a514b0 in ?? ()\n52 0x00007f6d28a13bbb in execute_ex ()\n53 0x00007f6d289c8439 in dtrace_execute_ex ()\n54 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613940) at /tmp/pear/temp/xdebug/xdebug.c:1890\n55 0x00007f6d28a514b0 in ?? ()\n56 0x00007f6d28a13bbb in execute_ex ()\n57 0x00007f6d289c8439 in dtrace_execute_ex ()\n58 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d266130b0) at /tmp/pear/temp/xdebug/xdebug.c:1890\n59 0x00007f6d28a514b0 in ?? ()\n60 0x00007f6d28a13bbb in execute_ex ()\n61 0x00007f6d289c8439 in dtrace_execute_ex ()\n62 0x00007f6d2619a3ef in xdebug_execute_ex (execute_data=0x7f6d26613030) at /tmp/pear/temp/xdebug/xdebug.c:1890\n63 0x00007f6d28a5cc5f in zend_execute ()\n64 0x00007f6d289d7a84 in zend_execute_scripts ()\n65 0x00007f6d2897b8e8 in php_execute_script ()\n66 0x00007f6d28a5e839 in ?? ()\n67 0x00007f6d2886b620 in main ()\n``\n. it seems to me this check need to refactor so use something like$(which re2c)`\n. @steffengy Could you please take a look\n. @steffengy Sorry, it is my typo (missed semicolon). I've fixed the PR.\nYes, I totally agree with you about the coding style, but I think it's the most painless way to restore the old behavior.\n. @steffengy Ok. I hope now is more appropriate. Could you please review?\n. @steffengy I think your changes again will break backwards compatibility because actually zephir_camelise didn't normalize string, as you do\n. @steffengy What happened with Appveyor?\n. @steffengy No, actually nothing in phalcon not rely on this behavior. But we have public api here https://github.com/phalcon/cphalcon/blob/master/phalcon/text.zep#L47\n. @steffengy Well, I like your solution :) What solution do you think should be merged?\n. @virgofx Yes. We'll do it\n. @steffengy What do you think #1090 \n. @steffengy Yeah, creating the 0.9.2 tag a great solution that allows to return the old behavior. Indeed, we can now choose the best solution. It seems to me the #1090 can be fixed by removing https://github.com/sergeyklay/zephir/blob/3b2a283d881ca811f1717ef09ddf8a2412c3b89b/kernels/ZendEngine2/string.c#L304\n. @steffengy No, if you are talking about concrete testing, I didn't do it. But at first glance looks good to me. You can get current (un)camelize tests and run them\n. I ran 3040 iterations.\nPHP 7.0.13\n```\nphp test.php\n350760\n350792\n350792\n350792\n350792\n350792\n...\n350792\n350792\n350792\n```\nPHP 5.6.29\n```\nphp test.php\n220288\n220384\n220432\n220480\n220528\n220576\n...\n366160\n366208\n366256\n```\nZephir 0.9.5a-dev. @mruz . sh\nexport ZEPHIRDIR=/usr/share/zephir\nsudo mkdir -p $ZEPHIRDIR\ncd /tmp\ngit clone git@github.com:phalcon/zephir.git\ncd zephir\n./install -c\nsudo chown -R vagrant:vagrant $ZEPHIRDIR\n. @Handyman @chilimatic Could you please provide your environment settings, OS, installed dependencies and steps to reproduce\n. To build a PHP extension and use Zephir you need the following requirements:\n\ngcc >= 4.x/clang >= 3.x\nre2c 0.13 or later\ngnu make 3.81 or later\nautoconf 2.31 or later\nautomake 1.14 or later\nlibpcre3\nphp development headers and tools\n\nFor more refer to the documentation page: https://docs.zephir-lang.com/en/latest/install.html#prerequisites. @dreamsxin Could you please take a look?. @steffengy Could you please take a look\n. Looks good to me\n. @hervems Could you please fix build?\n. @hervems  ping\n. @steffengy Could you please sort out with appveyor issue?\n. @hervems How about something like this https://hub.docker.com/r/ambakshi/wine-x11-vcpython27/\n. @steffengy Could you please take a look?\n. @surjit Could you please provide script to reproduce?\n. Ya, fetch reserved keyword\n. Use $fetch instead fetch\n. You have to install/enable xml extension\nhttp://php.net/manual/en/function.utf8-decode.php\n. runtime is at a very experimental stage and nowhere near usable.\n@steffengy \n. Have you used latest Zephir from master branch?\n. @steffengy ?\n. @mahmoud-eskandari yes. but this question is not related to this problem\n. @steffengy Could you please take a look\n. @steffengy https://github.com/phalcon/phalcon-devtools/pull/705 \ud83d\udc4d \n. Zephir (latest commit from master)\n``` zephir\nnamespace BoolIssue;\nclass Test\n{\n    public function testBool(varTrue, varFalse)\n    {\n        var var1 = true;\n        var var2 = false;\n    var_dump(\n      varTrue == var1,\n      varTrue === var1,\n      varFalse == var2,\n      varFalse === var2,\n      varTrue != var2,\n      varTrue !== var2,\n      varFalse != var1,\n      varFalse !== var1\n    );\n}\n\n}\n```\nPHP 7.0.8 Test\nphp\n$test = new BoolIssue\\Test;\n// The same as\n// $test->testBool(true, false);\n$test->testBool(1, 0);\n\nbool(false)\nphp: symbol lookup error: /usr/lib/php/20151012/boolissue.so: undefined symbol: ZEPHIR_IS_BOOL_IDENTICAL\nCommand exited with non-zero status 127\n\nPHP 5.6.23. Test\nsh\nzephir fullclean && zephir builddev\n```\nCopying new kernel files...\nGenerating stubs...\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nZephir\\CompilerException: Internal extension compilation failed. Check compile-errors.log for more information\nat Library/Compiler.php(1350)\n0 Library/Compiler.php(1424): Zephir\\Compiler->install(Object(Zephir\\Commands\\CommandBuildDev), true)\n1 Library/Commands/CommandAbstract.php(108): Zephir\\Compiler->buildDev(Object(Zephir\\Commands\\CommandBuildDev))\n2 Library/Bootstrap.php(200): Zephir\\Commands\\CommandAbstract->execute(Object(Zephir\\Config), Object(Zephir\\Logger))\n3 compiler.php(21): Zephir\\Bootstrap::boot()\n4 {main}\nIn file included from /usr/include/php/20131226/main/php.h:40:0,\n                 from /zephir/ext/boolissue/test.zep.c:6:\n/zephir/ext/boolissue/test.zep.c: In function 'zim_boolissue_Test_testBool1':\n./kernel/operators.h:46:59: error: 'IS_TRUE' undeclared (first use in this function)\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                           ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\n./kernel/operators.h:46:59: note: each undeclared identifier is reported only once for each function it appears in\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                           ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\n./kernel/operators.h:46:87: error: 'IS_FALSE' undeclared (first use in this function)\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                                                       ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\nmake:  [boolissue/test.lo] Error 1\nIn file included from /usr/include/php/20131226/main/php.h:40:0,\n                 from /zephir/ext/boolissue/test.zep.c:6:\n/zephir/ext/boolissue/test.zep.c: In function 'zim_boolissue_Test_testBool1':\n./kernel/operators.h:46:59: error: 'IS_TRUE' undeclared (first use in this function)\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                           ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\n./kernel/operators.h:46:59: note: each undeclared identifier is reported only once for each function it appears in\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                           ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\n./kernel/operators.h:46:87: error: 'IS_FALSE' undeclared (first use in this function)\n #define ZEPHIR_IS_BOOL_VALUE(op1, op2) ((Z_TYPE_P(op1) == IS_TRUE || Z_TYPE_P(op1) == IS_FALSE) && zephir_compare_strict_bool(op1, op2))\n                                                                                       ^\n/usr/include/php/20131226/Zend/zend_API.h:557:21: note: in definition of macro 'ZVAL_BOOL'\n   Z_LVAL_P(__z) = ((b) != 0); \\\n                     ^\n/zephir/ext/boolissue/test.zep.c:42:16: note: in expansion of macro 'ZEPHIR_IS_BOOL_VALUE'\n  ZVAL_BOOL(_0, ZEPHIR_IS_BOOL_VALUE(varTrue, var1));\n                ^\nmake:  [boolissue/test.lo] Error 1\n```\n@steffengy @andresgutierrez  Could you please take a look at this\n. @steffengy This is bug?\n. @andresgutierrez could you please provide a small test?\n. var $object\n. @amichelins Could you please provide a bit more code to reproduce.. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. @alisovpv What says compile-errors.log?\nAlso could you please locate the issue and provide code to reproduce?\n. @dreamsxin Should I reopen issue?. Fixed in the master branch.\n. The sizeof (char) is required to be 1 (i.e. one byte), but a byte could in theory be for example 32 bits. sizeof would still be report its size as 1 - meaning that you could have sizeof (char) == sizeof (long) == 1.\nThe char and unsigned char aren't guaranteed to be 8-bit types on all platforms \u2014 they are guaranteed to be 8-bit or larger. Some platforms have 9-bit, 32-bit, or 64-bit bytes. . @niel I'll try to sort out. @andresgutierrez Can you please review?\n. @andresgutierrez Could you please review?\n. @Izopi4a This is Phalcon issue. Could you please opene an issue in appropriate repository?\n. Zephir !== PHP\nThe fact that Zephir's syntax is similar to PHP's one doesn't mean that Zephir is PHP.So Zephir syntax isn't obligated to support all stuff from PHP. \n. how about call_user_func?\n. Could you please submit a full script we can use to reproduce the issue?\n. @vovagp https://github.com/phalcon/zephir/blob/master/parser/parser/base.c#L592-L602\n. Snail?\n. As I can see the issue already fixed\nhttps://github.com/jockchou/Snail/commit/0f325040d21169c30d459461ecc752360729a6d9#diff-f2becfca8af22967af7cec4041539e81R22\n. @andresgutierrez Could you please take a look\n. Could you please provide output of:\n$ php -r 'var_dump(function_exists(\"utf8_decode\"));'\n. @Johngtrs Yes, it is right way. You have to install xml extension\n. Thanks\n. Refs: https://github.com/phalcon/zephir/issues/1318\n. Refs: https://github.com/phalcon/zephir/issues/888\n. @mervick Could you please fix it?\n. zephir\nlet code = (int) code;\nlet reasonPhrase = self::messages[code];\n. clode?\n. https://github.com/phalcon/cphalcon/blob/master/phalcon/http/response.zep#L211-L213\n. Try:\n``` zephir\nvar phrase;\nlet phrase = self::messages[code];\nlet reasonPhrase = phrase;\n``\n. @surjit Did you see https://github.com/phalcon/zephir/issues/304#issuecomment-61341940\n. @josh4trunks I like this approach\n. @andresgutierrez \n. @josh4trunks Any progress?. Also see: phalcon/cphalcon#12473. @josh4trunks Thanks for contributing. I'll test as soon as I can. \n. Thanks\n. Thanks\n. Fixed by reinstalling Zephir\n. Thanks\n. Fixed in themaster` branch.. I'll try to sort out. As I can see fixed for now. @SidRoberts Could you please explain a bit more. Do you mean Phalcon or Zephir project?. This issue was moved to phalcon/ide-stubs#3. @andresgutierrez As I can see yes\nhttps://github.com/php/php-src/commit/ccf18da450881bee09e966c0a7fa4d67840d9e38\n. Thanks\n. Thanks. @steffengy Could you please take a look\n. @mervick Is it possible in PHP?\n```\nroot@0803a71b0001:/project# php -a\nInteractive mode enabled\nphp > class A {}\nphp > class B extends A { function foo() { call_user_func([\"parent\", \"__construct\"]); } }\nphp > $b = new B();\nphp > $b->foo();\nPHP Warning:  call_user_func() expects parameter 1 to be a valid callback, class 'A' does not have a method '__construct' in php shell code on line 1\nPHP Stack trace:\nPHP   1. {main}() php shell code:0\nPHP   2. B->foo() php shell code:1\n``\n. PHP version, OS?\n. As you probably understand I need to reprodiuce your issue. So please provide all that is needed, eg script to reproduce\n. @mervick . Confirm. Fixed in themasterbranch.. not\n.fetch` is reserved keyword\nhttps://github.com/phalcon/zephir/issues/1269\n. Thanks\n. Thanks. Just released 0.9.5 now. PHP_ZEPHIR_PARSER_VERSION !== VERSION, but yes, 0.9.4a-dev should be fixed\n. Fixed. Cc: @andresgutierrez . Fixed in the master branch.. Fixed in the master branch.. Yes as I see all zep files use tabs instead spaces, but editorconfig uses spaces instead tabs.. PSR-2 relate only to the PHP . > 'c:\\php_devpack\\phpize' is not recognized as an internal or external command\nIt seems you have to install  php devel pack from\nhttp://windows.php.net/downloads/releases/. \n\nparser.php5.lemon(93): error C2440\nparser.php5.lemon(80)\n\nNow you use PHP 5 sources for PHP 7. @Jurigag Could you please provide a minimal script to reproduce? I'll try to sort out.  > any method in phalcon\nThis does not mean 100% that the problem in Zephir. For example about 3 months ago I managed to successfully build the extension using Zephir and PHP 7.1 https://travis-ci.org/phalcongelist/beanspeak. @zhiephie \n```zephir\nstring characters = \"23345233405343234352335536837633839432034334\";\nvar idx, charactersLength, randomString;\nlet charactersLength = characters->length();\nlet idx = rand(0, charactersLength - 1);\n// ...\nlet randomString .= characters[(int) idx];\n``. https://github.com/phalcon/cphalcon/blob/master/phalcon/security/random.zep#L187-L206. Yes. \nWe only accept bug reports, new feature requests and pull requests in GitHub. For questions regarding the usage of the framework, support requests, and questions like this please visit the [official forums](https://forum.zephir-lang.com/).. @tanboname Could you please provide PHP version and OS?. Fixed in themasterbranch.. Duplicate https://github.com/phalcon/zephir/issues/1313. 1.public $testVar = \"testvarText\";=>public testVar = \"testvarText\";2.$this->testVar=>this->testVar3.this->testVar=>let this->testVar4.return ($this->testVar);=>return this->testVar;`. @joseph-montanez @mahmoud-eskandari \nWe created a separated repository with precompiled DLLs. \nPlease check the mentioned repository and re-open this if you continue experiencing problems using Zephir.. @dreamsxin Could you please explain a bit more. Thanks. @dreamsxin Could you please provide the minimal script to reproduce. Fixed in the master branch.. Could you please provide PHP version and OS?. Program received signal SIGSEGV, Segmentation fault.\n0x00007ffff2c40dd8 in zephir_do_memory_observe (var=0x7fffffffa6c0, g=0x7ffff2e626c0 <group_globals>) at /home/vagrant/projects/c/Issue1394/ext/kernel/memory.c:520\n520     if (UNEXPECTED(frame->pointer == frame->capacity)) {\n```gdb\n0  0x00007ffff2c40dd8 in zephir_do_memory_observe (var=0x7fffffffa6c0, g=0x7ffff2e626c0 ) at /home/vagrant/projects/c/Issue1394/ext/kernel/memory.c:520\n    frame = 0x0\n\n1  0x00007ffff2c40e86 in zephir_memory_alloc (var=0x7fffffffa6c0) at /home/vagrant/projects/c/Issue1394/ext/kernel/memory.c:556\n    g = 0x7ffff2e626c0 <group_globals>\n\n2  0x00007ffff2c5a926 in zim_Group_Lconstruct_die (execute_data=0x7ffff38130a0, return_value=0x7fffffffa710) at /home/vagrant/projects/c/Issue1394/ext/group/lconstruct.zep.c:37\n    _0 = {value = {lval = 140736893489448, dval = 6.9533264175554852e-310, counted = 0x7fffdc8b1128, str = 0x7fffdc8b1128, arr = 0x7fffdc8b1128, obj = 0x7fffdc8b1128, res = 0x7fffdc8b1128,\n        ref = 0x7fffdc8b1128, ast = 0x7fffdc8b1128, zv = 0x7fffdc8b1128, ptr = 0x7fffdc8b1128, ce = 0x7fffdc8b1128, func = 0x7fffdc8b1128, ww = {w1 = 3700101416, w2 = 32767}}, u1 = {v = {\n          type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32767, cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767,\n        fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}\n    this_zv = {value = {lval = 140737279011048, dval = 6.9533454648533142e-310, counted = 0x7ffff385a8e8, str = 0x7ffff385a8e8, arr = 0x7ffff385a8e8, obj = 0x7ffff385a8e8, res = 0x7ffff385a8e8,\n        ref = 0x7ffff385a8e8, ast = 0x7ffff385a8e8, zv = 0x7ffff385a8e8, ptr = 0x7ffff385a8e8, ce = 0x7ffff385a8e8, func = 0x7ffff385a8e8, ww = {w1 = 4085623016, w2 = 32767}}, u1 = {v = {type = 8 '\\b',\n          type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 3080}, u2 = {next = 32767, cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767,\n        fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}\n    this_ptr = 0x7fffffffa6d0\n\n3  0x000055555586440a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /build/php7.1-4DnRfe/php7.1-7.1.3+/Zend/zend_vm_execute.h:972\n    retval = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {\n          type = 1 '\\001', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 1}, u2 = {next = 21845, cache_slot = 21845, lineno = 21845, num_args = 21845, fe_pos = 21845,\n        fe_iter_idx = 21845, access_flags = 21845, property_guard = 21845, extra = 21845}}\n    call = 0x7ffff38130a0\n    fbc = 0x555555d47880\n    object = <optimized out>\n    ret = 0x7fffffffa710\n\n4  0x000055555580b79b in execute_ex (ex=) at /build/php7.1-4DnRfe/php7.1-7.1.3+/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff386f0e0\n    orig_execute_data = 0x0\n\n5  0x00005555558665e0 in zend_execute (op_array=0x7ffff386f0e0, op_array@entry=0x7fffdc8b1290, return_value=return_value@entry=0x7ffff3813030)\nat /build/php7.1-4DnRfe/php7.1-7.1.3+/Zend/zend_vm_execute.h:474\n\nNo locals.\n6  0x00005555557c1ff3 in zend_execute_scripts (type=type@entry=8, retval=0x7ffff3813030, retval@entry=0x0, file_count=file_count@entry=3) at /build/php7.1-4DnRfe/php7.1-7.1.3+/Zend/zend.c:1476\n    files = <error reading variable files (Attempt to dereference a generic pointer.)>\n    i = 1\n    file_handle = 0x7fffffffcd30\n    op_array = 0x7fffdc8b1290\n\n7  0x000055555575e530 in php_execute_script (primary_file=0x7fffffffcd30) at /build/php7.1-4DnRfe/php7.1-7.1.3+/main/main.c:2537\n    realfile = \"/home/vagrant/projects/c/Issue1394/tests/test3.php\\000tests\\000\\000\\000\\000\\000\\000\\000\\000\\200\\062\\355\\351\\377\\177\", '\\000' <repeats 11 times>, \"\\275\\377\\377\\377\\177\\000\\000\\275\\206M\\366\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\200\\066\\355\\351\\377\\177\", '\\000' <repeats 82 times>, \"\\001\", '\\000' <repeats 19 times>...\n    __orig_bailout = 0x7fffffffcda0\n    __bailout = {{__jmpbuf = {0, -7547627184786756851, 93824999091840, 93824995854656, 1, 0, -7547627185764029683, -4461901727693001971}, __mask_was_saved = 0, __saved_mask = {__val = {0,\n            18374780304672583120, 140737488337744, 93825000959440, 140737325649206, 0, 140737488336314, 72058139498774530, 93824999124752, 4294949704, 140737351915855, 2, 93824999129360, 0, 25769803777,\n            0}}}}\n    prepend_file_p = 0x0\n    append_file_p = 0x0\n    prepend_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0,\n          closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    append_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0,\n          closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    old_cwd = 0x7fffffffa850 \"\"\n    retval = 0\n\n---Type  to continue, or q  to quit---\n8  0x0000555555868867 in do_cli (argc=2, argv=0x555555bdee40) at /build/php7.1-4DnRfe/php7.1-7.1.3+/sapi/cli/php_cli.c:993\n    __orig_bailout = 0x7fffffffdf50\n    __bailout = {{__jmpbuf = {93824998874720, -7547627184121435379, 0, 0, 140737488346952, 0, -7547627184793048307, -4461899670075069683}, __mask_was_saved = 0, __saved_mask = {__val = {93824995731825,\n            93824995731849, 93824995637310, 93824995637331, 93824995731862, 93824995731882, 93824995731899, 93824995732463, 93824995731920, 93824995731934, 93824995731956, 93824995731975,\n            93824995732002, 93824995732031, 0, 0}}}}\n    c = <optimized out>\n    file_handle = {handle = {fd = -209223664, fp = 0x7ffff3878010, stream = {handle = 0x7ffff3878010, isatty = 0, mmap = {len = 58, pos = 0, map = 0x7ffff7fe5000,\n            buf = 0x7ffff7fe5000 <error: Cannot access memory at address 0x7ffff7fe5000>, old_handle = 0x555555ecfc70, old_closer = 0x5555557df5b0 <zend_stream_stdio_closer>},\n          reader = 0x5555557df5e0 <zend_stream_stdio_reader>, fsizer = 0x5555557df530 <zend_stream_stdio_fsizer>, closer = 0x5555557df4b0 <zend_stream_mmap_closer>}},\n      filename = 0x555555bdee80 \"test3.php\", opened_path = 0x0, type = ZEND_HANDLE_MAPPED, free_filename = 0 '\\000'}\n    behavior = <optimized out>\n    reflection_what = 0x0\n    request_started = 1\n    exit_status = 0\n    php_optarg = 0x0\n    php_optind = 2\n    exec_direct = <optimized out>\n    exec_run = <optimized out>\n    exec_begin = <optimized out>\n    exec_end = <optimized out>\n    arg_free = <optimized out>\n    arg_excp = <optimized out>\n    script_file = <optimized out>\n    translated_path = 0x555555dd7c00 \"/home/vagrant/projects/c/Issue1394/tests/test3.php\"\n    lineno = 1\n    param_error = 0x0\n\n9  0x000055555563a94c in main (argc=2, argv=0x555555bdee40) at /build/php7.1-4DnRfe/php7.1-7.1.3+/sapi/cli/php_cli.c:1381\n    __orig_bailout = 0x0\n    __bailout = {{__jmpbuf = {93824998874720, -7547627184121435379, 0, 0, 140737488346952, 0, -7547627184105182451, -4461901575397692659}, __mask_was_saved = 0, __saved_mask = {__val = {0, 0, 0, 0, 0,\n            0, 0, 0, 0, 18446603336221204433, 140737488347183, 1136, 5085241283009, 142, 17, 1}}}}\n    c = <optimized out>\n    exit_status = 0\n    module_started = 1\n    sapi_started = 1\n    php_optarg = 0x0\n    php_optind = 1\n    use_extended_info = 0\n    ini_path_override = 0x0\n    ini_entries = 0x555555bdf0c0 \"html_errors=0\\nregister_argc_argv=1\\nimplicit_flush=1\\noutput_buffering=0\\nmax_execution_time=0\\nmax_input_time=-1\\n\"\n    ini_entries_len = 0\n    ini_ignore = 0\n    sapi_module = <optimized out>\n\n.\nzephir fullclean\nzephir build\n``. have you install php?. We need steps to reproduce. Fixed inmaster` branch.. Could you please cover your changes by test?. @steffengy Could you please take a look. Cc: @andresgutierrez . @rafmichalak84 @dreamsxin I'm going to merge this PR. So I need your opinion guys. Is it ready to merge or not?\n. I ve created test environment: https://github.com/phalcon/dockerfiles/tree/master/php/7.1-dev with cppcheck, gdb, valgrind, etc.\nSo I'm able to compile Phalcon. But php -m produces segfault:\n``\nReading symbols from /usr/local/bin/php...(no debugging symbols found)...done.\n[New LWP 20010]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated byphp -m'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x0000562fbe90c980 in zend_do_implement_interface ()\n0  0x0000562fbe90c980 in zend_do_implement_interface ()\nNo symbol table info available.\n1  0x0000562fbe8ce108 in zend_class_implements ()\nNo symbol table info available.\n2  0x00007fad22e79744 in zephir_Phalcon_Mvc_Model_Query_Builder_init (type=type@entry=1, module_number=module_number@entry=33) at /app/ext/phalcon/mvc/model/query/builder.zep.c:99\nNo locals.\n3  0x00007fad22c4c9d2 in zm_startup_phalcon (type=1, module_number=33) at /app/ext/phalcon.c:712\nNo locals.\n4  0x0000562fbe8cbc0b in zend_startup_module_ex ()\nNo symbol table info available.\n5  0x0000562fbe8cbcec in ?? ()\nNo symbol table info available.\n6  0x0000562fbe8d9bcc in zend_hash_apply ()\nNo symbol table info available.\n7  0x0000562fbe8cbfda in zend_startup_modules ()\nNo symbol table info available.\n8  0x0000562fbe8532ab in php_module_startup ()\nNo symbol table info available.\n9  0x0000562fbe97b82d in ?? ()\nNo symbol table info available.\n10 0x0000562fbe53075b in ?? ()\nNo symbol table info available.\n11 0x00007fad26a04b45 in __libc_start_main (main=0x562fbe530470, argc=2, argv=0x7ffe56cf3788, init=, fini=, rtld_fini=, stack_end=0x7ffe56cf3778) at libc-start.c:287\n    result = <optimized out>\n    unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -1657490804047050535, 94763056564970, 140730354841472, 0, 0, 1658386221269551321, 1703809427510298841}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x562fbe985690 <__libc_csu_init>, 0x7ffe56cf3788}, data = {prev = 0x0, cleanup = 0x0, canceltype = -1097312624}}}\n    not_first_call = <optimized out>\n\n12 0x0000562fbe530b13 in _start ()\nNo symbol table info available.\nrax            0xa00000001  42949672961\nrbx            0x562fbf4dad50   94763072990544\nrcx            0x562fbf4d8dd8   94763072982488\nrdx            0xffffffff   4294967295\nrsi            0x562fbf4dad50   94763072990544\nrdi            0x562fbf612fc0   94763074269120\nrbp            0x562fbf4d8dd0   0x562fbf4d8dd0\nrsp            0x7ffe56cf1db0   0x7ffe56cf1db0\nr8             0x250    592\nr9             0xfffffffffffff9d0   -1584\nr10            0xfffffffffffff9c0   -1600\nr11            0x7fad26b4ff90   140381655465872\nr12            0x562fbf49a710   94763072726800\nr13            0x562fbf612fc0   94763074269120\nr14            0x562fbf4dac30   94763072990256\nr15            0x562fbf612f10   94763074268944\nrip            0x562fbe90c980   0x562fbe90c980 \neflags         0x10202  [ IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n=> 0x562fbe90c980 :    addl   $0x1,(%rax)\n   0x562fbe90c983 :    mov    $0x20,%edi\n   0x562fbe90c988 :    callq  0x562fbe8967c0 <__zend_malloc>\n   0x562fbe90c98d :    mov    (%r12),%rdx\n   0x562fbe90c991 :    mov    %rdx,(%rax)\n   0x562fbe90c994 :    mov    0x8(%r12),%rdx\n   0x562fbe90c999 :    mov    %rdx,0x8(%rax)\n   0x562fbe90c99d :    mov    0x10(%r12),%rdx\n   0x562fbe90c9a2 :    mov    %rdx,0x10(%rax)\n   0x562fbe90c9a6 :    mov    0x18(%r12),%rdx\n   0x562fbe90c9ab :    mov    %rdx,0x18(%rax)\n   0x562fbe90c9af :    mov    0x18(%rsp),%rdx\n   0x562fbe90c9b4 :    mov    %rbx,%rsi\n   0x562fbe90c9b7 :    mov    %r13,%rdi\n   0x562fbe90c9ba :    mov    %rax,0x20(%rsp)\n   0x562fbe90c9bf :    movl   $0x11,0x28(%rsp)\nThread 1 (Thread 0x7fad291d9800 (LWP 20010)):\n0  0x0000562fbe90c980 in zend_do_implement_interface ()\n1  0x0000562fbe8ce108 in zend_class_implements ()\n2  0x00007fad22e79744 in zephir_Phalcon_Mvc_Model_Query_Builder_init (type=type@entry=1, module_number=module_number@entry=33) at /app/ext/phalcon/mvc/model/query/builder.zep.c:99\n3  0x00007fad22c4c9d2 in zm_startup_phalcon (type=1, module_number=33) at /app/ext/phalcon.c:712\n4  0x0000562fbe8cbc0b in zend_startup_module_ex ()\n5  0x0000562fbe8cbcec in ?? ()\n6  0x0000562fbe8d9bcc in zend_hash_apply ()\n7  0x0000562fbe8cbfda in zend_startup_modules ()\n8  0x0000562fbe8532ab in php_module_startup ()\n9  0x0000562fbe97b82d in ?? ()\n10 0x0000562fbe53075b in ?? ()\n11 0x00007fad26a04b45 in __libc_start_main (main=0x562fbe530470, argc=2, argv=0x7ffe56cf3788, init=, fini=, rtld_fini=, stack_end=0x7ffe56cf3778) at libc-start.c:287\n12 0x0000562fbe530b13 in _start ()\n```. @rafmichalak84 @dreamsxin Thank you for contributing!. Thanks. @dreamsxin \nZephir\n```zep\nnamespace Group;\nabstract class Model\n{\n    public function testCalled()\n    {\n        return self::testCalled3();\n    }\npublic static function testCalled2()\n{\n    return self::testCalled3();\n}\n\nprotected static function testCalled3()\n{\n    return get_called_class();\n}\n\n}\n```\ntest.php\n```php\nclass Phpized extends Group\\Model {\n}\n$test = new Phpized();\necho $test->testCalled() . PHP_EOL;\n```\nWith xdebug\n```gdb\nReading symbols from /usr/local/bin/php...(no debugging symbols found)...done.\n[New LWP 25915]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by 'php test.php'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007fe6d90c3087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n175     if (ZSTR_IS_INTERNED(s)) {\n(gdb) (gdb) #0  0x00007fe6d90c3087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\nNo locals.\n1  0x00007fe6d90c3525 in zephir_get_called_class (return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n    __z = 0x7fe6d9c140a0\n    __s = 0xfec0f800\n    called_scope = 0x7fe6d9c73640\n\n2  0x00007fe6d90dbc20 in zim_Group_Model_testCalled3 (execute_data=0x7fe6d9c14100, return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n    this_zv = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 19 '\\023', type_flags = 8 '\\b', const_flags = 13 '\\r', reserved = 217 '\\331'}, type_info = 3641509907}, u2 = {next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n    this_ptr = 0x0\n\n3  0x000055ead9c382c4 in execute_internal ()\nNo symbol table info available.\n4  0x00007fe6d9717f01 in xdebug_execute_internal (current_execute_data=0x7fe6d9c14100, return_value=0x7fe6d9c140a0) at /tmp/pear/temp/xdebug/xdebug.c:2147\n    edata = 0x7fe6d9c14100\n    fse = 0x55eadb3dffb0\n    do_return = 0\n    function_nr = 3\n    restore_error_handler_situation = 0\n    tmp_error_cb = 0x0\n\n5  0x00007fe6d90d575e in zephir_call_function_opt (fci=0x7ffc92976c50, fci_cache=0x7ffc92976c20, info=0x7ffc92976d50, params=0x7ffc92976e80) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1264\n    call_via_handler = 0\n    i = 0\n    calling_scope = 0x55eadafa9340\n    call = 0x7fe6d9c14100\n    dummy_execute_data = {opline = 0x7ffc92976bd0, call = 0x7fe6df95bdc7 <_dl_fixup+247>, return_value = 0xd3385ed6eed95c77, func = 0x7fe6d92e3550, This = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 144 '\\220', type_flags = 170 '\\252', const_flags = 151 '\\227', reserved = 146 '\\222'}, type_info = 2459413136}, u2 = {next = 32764, cache_slot = 32764, lineno = 32764, num_args = 32764, fe_pos = 32764, fe_iter_idx = 32764, access_flags = 32764, property_guard = 32764, extra = 32764}}, prev_execute_data = 0x7fe6d9c14030, symbol_table = 0x7fe6b0de77b8, run_time_cache = 0x7ffc92976cf0, literals = 0x7fe6df95bdc7 <_dl_fixup+247>}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fe6d92e3898, calling_scope = 0x0, called_scope = 0x7ffc9297aa90, object = 0x7fe6d9c14030}\n    func = 0x55eadafacdf0\n    __PRETTY_FUNCTION__ = \"zephir_call_function_opt\"\n\n6  0x00007fe6d90cf1cf in zephir_call_user_function (object_pp=0x7fe6d9c140d0, obj_ce=0x7fe6d9c03240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe6d9c140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80, info=0x7ffc92976d50) at /usr/src/cphalcon/example/ext/kernel/fcall.c:498\n    local_retval_ptr = {value = {lval = 2, dval = 9.8813129168249309e-324, counted = 0x2, str = 0x2, arr = 0x2, obj = 0x2, res = 0x2, ref = 0x2, ast = 0x2, zv = 0x2, ptr = 0x2, ce = 0x2, func = 0x2, ww = {w1 = 2, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32764, cache_slot = 32764, lineno = 32764, num_args = 32764, fe_pos = 32764, fe_iter_idx = 32764, access_flags = 32764, property_guard = 32764, extra = 32764}}\n    status = 0\n    fci = {size = 56, function_name = {value = {lval = 140628786575288, dval = 6.9479852263190487e-310, counted = 0x7fe6b0de77b8, str = 0x7fe6b0de77b8, arr = 0x7fe6b0de77b8, obj = 0x7fe6b0de77b8, res = 0x7fe6b0de77b8, ref = 0x7fe6b0de77b8, ast = 0x7fe6b0de77b8, zv = 0x7fe6b0de77b8, ptr = 0x7fe6b0de77b8, ce = 0x7fe6b0de77b8, func = 0x7fe6b0de77b8, ww = {w1 = 2967369656, w2 = 32742}}, u1 = {v = {type = 192 '\\300', type_flags = 109 'm', const_flags = 151 '\\227', reserved = 146 '\\222'}, type_info = 2459397568}, u2 = {next = 32764, cache_slot = 32764, lineno = 32764, num_args = 32764, fe_pos = 32764, fe_iter_idx = 32764, access_flags = 32764, property_guard = 32764, extra = 32764}}, retval = 0x7fe6d9c140a0, params = 0x0, object = 0x0, no_separation = 1 '\\001', param_count = 0}\n    fcic = {initialized = 1 '\\001', function_handler = 0x55eadafacdf0, calling_scope = 0x55eadafa9340, called_scope = 0x7fe6d9c03240, object = 0x7fe6d9c73640}\n    zephir_globals_ptr = 0x55eadafabc80\n    fcall_key = 0x7fe6d9c74400 \"\\004testcalled3\"\n    fcall_key_hash = 15220019217921825911\n    fcall_key_len = 30\n    temp_cache_entry = 0x0\n    reload_cache = 1\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n7  0x00007fe6d90cf878 in zephir_call_class_method_aparams (return_value_ptr=0x7fe6d9c140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe6d90df152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80) at /usr/src/cphalcon/example/ext/kernel/fcall.c:705\n    possible_method = 0x55eadadf5780 \"\"\n    rv = {value = {lval = 1, dval = 4.9406564584124654e-324, counted = 0x1, str = 0x1, arr = 0x1, obj = 0x1, res = 0x1, ref = 0x1, ast = 0x1, zv = 0x1, ptr = 0x1, ce = 0x1, func = 0x1, ww = {w1 = 1, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n    rvp = 0x7fe6d9c140a0\n    fn = 0x0\n    status = 0\n    info = {type = 4, ce = 0x7fe6d90b9cb8, object_ptr = 0x2, class_name = 0x7ffc92976e40 \"\\260n\\227\\222\\374\\177\", class_length = -648021120, func_name = 0x7fe6d90df152 \"testcalled3\", func_length = 11}\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n8  0x00007fe6d90db79d in zephir_return_call_class_method (return_value=0x7fe6d9c140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe6d90df152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80) at ./kernel/fcall.h:417\n    rv = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 21994, cache_slot = 21994, lineno = 21994, num_args = 21994, fe_pos = 21994, fe_iter_idx = 21994, access_flags = 21994, property_guard = 21994, extra = 21994}}\n    rvp = 0x7fe6d9c140a0\n    status = 32742\n\n9  0x00007fe6d90dba97 in zim_Group_Model_testCalled (execute_data=0x7fe6d9c140b0, return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n    params_ = 0x7ffc92976e80\n    ZEPHIR_LAST_CALL_STATUS = 0\n    this_zv = {value = {lval = 140629472917056, dval = 6.9480191361079362e-310, counted = 0x7fe6d9c73640, str = 0x7fe6d9c73640, arr = 0x7fe6d9c73640, obj = 0x7fe6d9c73640, res = 0x7fe6d9c73640, ref = 0x7fe6d9c73640, ast = 0x7fe6d9c73640, zv = 0x7fe6d9c73640, ptr = 0x7fe6d9c73640, ce = 0x7fe6d9c73640, func = 0x7fe6d9c73640, ww = {w1 = 3653711424, w2 = 32742}}, u1 = {v = {type = 8 '\\b', type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 3080}, u2 = {next = 32742, cache_slot = 32742, lineno = 32742, num_args = 32742, fe_pos = 32742, fe_iter_idx = 32742, access_flags = 32742, property_guard = 32742, extra = 32742}}\n    this_ptr = 0x7ffc92976e80\n\n10 0x000055ead9c382c4 in execute_internal ()\nNo symbol table info available.\n11 0x00007fe6d9717f01 in xdebug_execute_internal (current_execute_data=0x7fe6d9c140b0, return_value=0x7fe6d9c140a0) at /tmp/pear/temp/xdebug/xdebug.c:2147\n    edata = 0x7fe6d9c140b0\n    fse = 0x55eadb3dfeb0\n    do_return = 0\n    function_nr = 2\n    restore_error_handler_situation = 0\n    tmp_error_cb = 0x0\n\n12 0x000055ead9c3d039 in ?? ()\nNo symbol table info available.\n13 0x000055ead9c3fcb6 in ?? ()\nNo symbol table info available.\n14 0x000055ead9c3aae6 in execute_ex ()\nNo symbol table info available.\n15 0x00007fe6d97174ed in xdebug_execute_ex (execute_data=0x7fe6d9c14030) at /tmp/pear/temp/xdebug/xdebug.c:1995\n    op_array = 0x7fe6d9c81000\n    edata = 0x0\n    dummy = 0x0\n    fse = 0x55eadb37b580\n    xfse = 0x8000000013\n    magic_cookie = 0x0\n    do_return = 0\n    function_nr = 0\n    le = 0x0\n    code_coverage_func_info = {class = 0x7fe6d9c81000 \"\\002\", function = 0x7fe6d9c14030 \"\\270w\\336\\260\\346\\177\", type = -641200128, internal = 32742}\n    code_coverage_function_name = 0x0\n    code_coverage_file_name = 0x0\n    code_coverage_init = 0\n\n16 0x000055ead9c3aceb in zend_execute ()\nNo symbol table info available.\n17 0x000055ead9bd11f4 in zend_execute_scripts ()\nNo symbol table info available.\n18 0x000055ead9b100ea in php_execute_script ()\nNo symbol table info available.\n19 0x000055ead9cc533f in ?? ()\nNo symbol table info available.\n20 0x000055ead9cc65bd in ?? ()\nNo symbol table info available.\n21 0x00007fe6dd37eb45 in __libc_start_main (main=0x55ead9cc5e20, argc=2, argv=0x7ffc9297aa98, init=, fini=, rtld_fini=, stack_end=0x7ffc9297aa88) at libc-start.c:287\n    result = <optimized out>\n    unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -9179680314510981072, 94467157654400, 140722767899280, 0, 0, 9178930105532893232, 9175665378378336304}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x55ead9cd08d0 <__libc_csu_init>, 0x7ffc9297aa98}, data = {prev = 0x0, cleanup = 0x0, canceltype = -640874288}}}\n    not_first_call = <optimized out>\n\n22 0x000055ead95ffba9 in _start ()\nNo symbol table info available.\n(gdb) rax            0xf273140400000001 -976414686796840959\nrbx            0x3  3\nrcx            0x7fe6de5582e0   140629549351648\nrdx            0x55eadaeeceb0   94467183791792\nrsi            0x0  0\nrdi            0xf273140400000001   -976414686796840959\nrbp            0x7ffc92976990   0x7ffc92976990\nrsp            0x7ffc92976980   0x7ffc92976980\nr8             0xfec0f800   4274059264\nr9             0x0  0\nr10            0x7ffc929767a0   140722767882144\nr11            0x7fe6d90c34c1   140629460661441\nr12            0x55ead95ffb80   94467157654400\nr13            0x7ffc9297aa90   140722767899280\nr14            0x7fe6d9c14030   140629472526384\nr15            0x7fe6b0de77b8   140628786575288\nrip            0x7fe6d90c3087   0x7fe6d90c3087 \neflags         0x10202  [ IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7fe6d90c3087 :   movzbl 0x5(%rax),%eax\n   0x7fe6d90c308b : movzbl %al,%eax\n   0x7fe6d90c308e : and    $0x2,%eax\n   0x7fe6d90c3091 : test   %eax,%eax\n   0x7fe6d90c3093 : je     0x7fe6d90c309b \n   0x7fe6d90c3095 : mov    -0x8(%rbp),%rax\n   0x7fe6d90c3099 : jmp    0x7fe6d90c30b9 \n   0x7fe6d90c309b : mov    -0x8(%rbp),%rax\n   0x7fe6d90c309f : mov    0x10(%rax),%rax\n   0x7fe6d90c30a3 : mov    -0x8(%rbp),%rdx\n   0x7fe6d90c30a7 : lea    0x18(%rdx),%rcx\n   0x7fe6d90c30ab : mov    -0xc(%rbp),%edx\n   0x7fe6d90c30ae : mov    %rax,%rsi\n   0x7fe6d90c30b1 : mov    %rcx,%rdi\n   0x7fe6d90c30b4 : callq  0x7fe6d90c3018 \n   0x7fe6d90c30b9 : leaveq\n(gdb)\nThread 1 (Thread 0x7fe6dfb50800 (LWP 25915)):\n0  0x00007fe6d90c3087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n1  0x00007fe6d90c3525 in zephir_get_called_class (return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n2  0x00007fe6d90dbc20 in zim_Group_Model_testCalled3 (execute_data=0x7fe6d9c14100, return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n3  0x000055ead9c382c4 in execute_internal ()\n4  0x00007fe6d9717f01 in xdebug_execute_internal (current_execute_data=0x7fe6d9c14100, return_value=0x7fe6d9c140a0) at /tmp/pear/temp/xdebug/xdebug.c:2147\n5  0x00007fe6d90d575e in zephir_call_function_opt (fci=0x7ffc92976c50, fci_cache=0x7ffc92976c20, info=0x7ffc92976d50, params=0x7ffc92976e80) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1264\n6  0x00007fe6d90cf1cf in zephir_call_user_function (object_pp=0x7fe6d9c140d0, obj_ce=0x7fe6d9c03240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe6d9c140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80, info=0x7ffc92976d50) at /usr/src/cphalcon/example/ext/kernel/fcall.c:498\n7  0x00007fe6d90cf878 in zephir_call_class_method_aparams (return_value_ptr=0x7fe6d9c140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe6d90df152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80) at /usr/src/cphalcon/example/ext/kernel/fcall.c:705\n8  0x00007fe6d90db79d in zephir_return_call_class_method (return_value=0x7fe6d9c140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe6d90df152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffc92976e80) at ./kernel/fcall.h:417\n9  0x00007fe6d90dba97 in zim_Group_Model_testCalled (execute_data=0x7fe6d9c140b0, return_value=0x7fe6d9c140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n10 0x000055ead9c382c4 in execute_internal ()\n11 0x00007fe6d9717f01 in xdebug_execute_internal (current_execute_data=0x7fe6d9c140b0, return_value=0x7fe6d9c140a0) at /tmp/pear/temp/xdebug/xdebug.c:2147\n12 0x000055ead9c3d039 in ?? ()\n13 0x000055ead9c3fcb6 in ?? ()\n14 0x000055ead9c3aae6 in execute_ex ()\n15 0x00007fe6d97174ed in xdebug_execute_ex (execute_data=0x7fe6d9c14030) at /tmp/pear/temp/xdebug/xdebug.c:1995\n16 0x000055ead9c3aceb in zend_execute ()\n17 0x000055ead9bd11f4 in zend_execute_scripts ()\n18 0x000055ead9b100ea in php_execute_script ()\n19 0x000055ead9cc533f in ?? ()\n20 0x000055ead9cc65bd in ?? ()\n21 0x00007fe6dd37eb45 in __libc_start_main (main=0x55ead9cc5e20, argc=2, argv=0x7ffc9297aa98, init=, fini=, rtld_fini=, stack_end=0x7ffc9297aa88) at libc-start.c:287\n22 0x000055ead95ffba9 in _start ()\n```\nWithout xdebug\n```gdb\nReading symbols from /usr/local/bin/php...(no debugging symbols found)...done.\n[New LWP 25926]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by 'php test.php'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f1969d1e087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n175     if (ZSTR_IS_INTERNED(s)) {\n(gdb) (gdb) #0  0x00007f1969d1e087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\nNo locals.\n1  0x00007f1969d1e525 in zephir_get_called_class (return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n    __z = 0x7f196a6140a0\n    __s = 0x7f196a603240\n    called_scope = 0x7f196a6726e0\n\n2  0x00007f1969d36c20 in zim_Group_Model_testCalled3 (execute_data=0x7f196a614100, return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n    this_zv = {value = {lval = 94230627370704, dval = 4.6556115769932715e-310, counted = 0x55b3c71246d0, str = 0x55b3c71246d0, arr = 0x55b3c71246d0, obj = 0x55b3c71246d0, res = 0x55b3c71246d0, ref = 0x55b3c71246d0, ast = 0x55b3c71246d0, zv = 0x55b3c71246d0, ptr = 0x55b3c71246d0, ce = 0x55b3c71246d0, func = 0x55b3c71246d0, ww = {w1 = 3339863760, w2 = 21939}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 2, cache_slot = 2, lineno = 2, num_args = 2, fe_pos = 2, fe_iter_idx = 2, access_flags = 2, property_guard = 2, extra = 2}}\n    this_ptr = 0x0\n\n3  0x00007f1969d3073b in zephir_call_function_opt (fci=0x7ffd7d0e58a0, fci_cache=0x7ffd7d0e5870, info=0x7ffd7d0e59a0, params=0x7ffd7d0e5ad0) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n    call_via_handler = 0\n    i = 0\n    calling_scope = 0x55b3c7120c20\n    call = 0x7f196a614100\n    dummy_execute_data = {opline = 0x7ffd7d0e5820, call = 0x7f1970398dc7 <_dl_fixup+247>, return_value = 0xd40142a0a67bd9a2, func = 0x7f1969f3e550, This = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 160 '\\240', type_flags = 149 '\\225', const_flags = 14 '\\016', reserved = 125 '}'}, type_info = 2098107808}, u2 = {next = 32765, cache_slot = 32765, lineno = 32765, num_args = 32765, fe_pos = 32765, fe_iter_idx = 32765, access_flags = 32765, property_guard = 32765, extra = 32765}}, prev_execute_data = 0x7f196a614030, symbol_table = 0x7f1941a426f8, run_time_cache = 0x7ffd7d0e5940, literals = 0x7f1970398dc7 <_dl_fixup+247>}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7f1969f3e898, calling_scope = 0x0, called_scope = 0x7ffd7d0e95a0, object = 0x7f196a614030}\n    func = 0x55b3c71246d0\n    __PRETTY_FUNCTION__ = \"zephir_call_function_opt\"\n\n4  0x00007f1969d2a1cf in zephir_call_user_function (object_pp=0x7f196a6140d0, obj_ce=0x7f196a603240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7f196a6140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0, info=0x7ffd7d0e59a0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:498\n    local_retval_ptr = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32765, cache_slot = 32765, lineno = 32765, num_args = 32765, fe_pos = 32765, fe_iter_idx = 32765, access_flags = 32765, property_guard = 32765, extra = 32765}}\n    status = 0\n    fci = {size = 56, function_name = {value = {lval = 139746452186872, dval = 6.9043921153729795e-310, counted = 0x7f1941a426f8, str = 0x7f1941a426f8, arr = 0x7f1941a426f8, obj = 0x7f1941a426f8, res = 0x7f1941a426f8, ref = 0x7f1941a426f8, ast = 0x7f1941a426f8, zv = 0x7f1941a426f8, ptr = 0x7f1941a426f8, ce = 0x7f1941a426f8, func = 0x7f1941a426f8, ww = {w1 = 1101276920, w2 = 32537}}, u1 = {v = {type = 16 '\\020', type_flags = 90 'Z', const_flags = 14 '\\016', reserved = 125 '}'}, type_info = 2098092560}, u2 = {next = 32765, cache_slot = 32765, lineno = 32765, num_args = 32765, fe_pos = 32765, fe_iter_idx = 32765, access_flags = 32765, property_guard = 32765, extra = 32765}}, retval = 0x7f196a6140a0, params = 0x0, object = 0x0, no_separation = 1 '\\001', param_count = 0}\n    fcic = {initialized = 1 '\\001', function_handler = 0x55b3c71246d0, calling_scope = 0x55b3c7120c20, called_scope = 0x7f196a603240, object = 0x7f196a6726e0}\n    zephir_globals_ptr = 0x55b3c7123560\n    fcall_key = 0x7f196a601c00 \"\\004testcalled3\"\n    fcall_key_hash = 15276564668772768162\n    fcall_key_len = 30\n    temp_cache_entry = 0x0\n    reload_cache = 1\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n5  0x00007f1969d2a878 in zephir_call_class_method_aparams (return_value_ptr=0x7f196a6140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7f1969d3a152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:705\n    possible_method = 0x55b3c6f6d040 \"\"\n    rv = {value = {lval = 1, dval = 4.9406564584124654e-324, counted = 0x1, str = 0x1, arr = 0x1, obj = 0x1, res = 0x1, ref = 0x1, ast = 0x1, zv = 0x1, ptr = 0x1, ce = 0x1, func = 0x1, ww = {w1 = 1, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n    rvp = 0x7f196a6140a0\n    fn = 0x0\n    status = 0\n    info = {type = 4, ce = 0x7f1969d14cb8, object_ptr = 0x0, class_name = 0x7ffd7d0e5a90 \"\", class_length = -984523904, func_name = 0x7f1969d3a152 \"testcalled3\", func_length = 11}\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n6  0x00007f1969d3679d in zephir_return_call_class_method (return_value=0x7f196a6140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7f1969d3a152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0) at ./kernel/fcall.h:417\n    rv = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 21939, cache_slot = 21939, lineno = 21939, num_args = 21939, fe_pos = 21939, fe_iter_idx = 21939, access_flags = 21939, property_guard = 21939, extra = 21939}}\n    rvp = 0x7f196a6140a0\n    status = 32537\n\n7  0x00007f1969d36a97 in zim_Group_Model_testCalled (execute_data=0x7f196a6140b0, return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n    params_ = 0x7ffd7d0e5ad0\n    ZEPHIR_LAST_CALL_STATUS = 80\n    this_zv = {value = {lval = 139747136055008, dval = 6.9044259029482078e-310, counted = 0x7f196a6726e0, str = 0x7f196a6726e0, arr = 0x7f196a6726e0, obj = 0x7f196a6726e0, res = 0x7f196a6726e0, ref = 0x7f196a6726e0, ast = 0x7f196a6726e0, zv = 0x7f196a6726e0, ptr = 0x7f196a6726e0, ce = 0x7f196a6726e0, func = 0x7f196a6726e0, ww = {w1 = 1785145056, w2 = 32537}}, u1 = {v = {type = 8 '\\b', type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 3080}, u2 = {next = 64, cache_slot = 64, lineno = 64, num_args = 64, fe_pos = 64, fe_iter_idx = 64, access_flags = 64, property_guard = 64, extra = 64}}\n    this_ptr = 0x7ffd7d0e5ad0\n\n8  0x000055b3c5b5301d in ?? ()\nNo symbol table info available.\n9  0x000055b3c5b50ae6 in execute_ex ()\nNo symbol table info available.\n10 0x000055b3c5b50ceb in zend_execute ()\nNo symbol table info available.\n11 0x000055b3c5ae71f4 in zend_execute_scripts ()\nNo symbol table info available.\n12 0x000055b3c5a260ea in php_execute_script ()\nNo symbol table info available.\n13 0x000055b3c5bdb33f in ?? ()\nNo symbol table info available.\n14 0x000055b3c5bdc5bd in ?? ()\nNo symbol table info available.\n15 0x00007f196ddbbb45 in __libc_start_main (main=0x55b3c5bdbe20, argc=2, argv=0x7ffd7d0e95a8, init=, fini=, rtld_fini=, stack_end=0x7ffd7d0e9598) at libc-start.c:287\n    result = <optimized out>\n    unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, 5061757463585601933, 94230597950336, 140726701561248, 0, 0, -5060916209653663347, -5184731484916172403}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x55b3c5be68d0 <__libc_csu_init>, 0x7ffd7d0e95a8}, data = {prev = 0x0, cleanup = 0x0, canceltype = -977377072}}}\n    not_first_call = <optimized out>\n\n16 0x000055b3c5515ba9 in _start ()\nNo symbol table info available.\n(gdb) rax            0xf273140400000001 -976414686796840959\nrbx            0x0  0\nrcx            0x7f196ef952e0   139747212743392\nrdx            0x55b3c7064790   94230626584464\nrsi            0x0  0\nrdi            0xf273140400000001   -976414686796840959\nrbp            0x7ffd7d0e5660   0x7ffd7d0e5660\nrsp            0x7ffd7d0e5650   0x7ffd7d0e5650\nr8             0x7f196a603240   139747135599168\nr9             0x0  0\nr10            0x7ffd7d0e5470   140726701544560\nr11            0x7f1969d1e4c1   139747126273217\nr12            0x55b3c5515b80   94230597950336\nr13            0x7ffd7d0e95a0   140726701561248\nr14            0x7f196a614030   139747135668272\nr15            0x7f1941a426f8   139746452186872\nrip            0x7f1969d1e087   0x7f1969d1e087 \neflags         0x10206  [ PF IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7f1969d1e087 :   movzbl 0x5(%rax),%eax\n   0x7f1969d1e08b : movzbl %al,%eax\n   0x7f1969d1e08e : and    $0x2,%eax\n   0x7f1969d1e091 : test   %eax,%eax\n   0x7f1969d1e093 : je     0x7f1969d1e09b \n   0x7f1969d1e095 : mov    -0x8(%rbp),%rax\n   0x7f1969d1e099 : jmp    0x7f1969d1e0b9 \n   0x7f1969d1e09b : mov    -0x8(%rbp),%rax\n   0x7f1969d1e09f : mov    0x10(%rax),%rax\n   0x7f1969d1e0a3 : mov    -0x8(%rbp),%rdx\n   0x7f1969d1e0a7 : lea    0x18(%rdx),%rcx\n   0x7f1969d1e0ab : mov    -0xc(%rbp),%edx\n   0x7f1969d1e0ae : mov    %rax,%rsi\n   0x7f1969d1e0b1 : mov    %rcx,%rdi\n   0x7f1969d1e0b4 : callq  0x7f1969d1e018 \n   0x7f1969d1e0b9 : leaveq\n(gdb)\nThread 1 (Thread 0x7f197058d800 (LWP 25926)):\n0  0x00007f1969d1e087 in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n1  0x00007f1969d1e525 in zephir_get_called_class (return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n2  0x00007f1969d36c20 in zim_Group_Model_testCalled3 (execute_data=0x7f196a614100, return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n3  0x00007f1969d3073b in zephir_call_function_opt (fci=0x7ffd7d0e58a0, fci_cache=0x7ffd7d0e5870, info=0x7ffd7d0e59a0, params=0x7ffd7d0e5ad0) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n4  0x00007f1969d2a1cf in zephir_call_user_function (object_pp=0x7f196a6140d0, obj_ce=0x7f196a603240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7f196a6140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0, info=0x7ffd7d0e59a0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:498\n5  0x00007f1969d2a878 in zephir_call_class_method_aparams (return_value_ptr=0x7f196a6140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7f1969d3a152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:705\n6  0x00007f1969d3679d in zephir_return_call_class_method (return_value=0x7f196a6140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7f1969d3a152 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffd7d0e5ad0) at ./kernel/fcall.h:417\n7  0x00007f1969d36a97 in zim_Group_Model_testCalled (execute_data=0x7f196a6140b0, return_value=0x7f196a6140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n8  0x000055b3c5b5301d in ?? ()\n9  0x000055b3c5b50ae6 in execute_ex ()\n10 0x000055b3c5b50ceb in zend_execute ()\n11 0x000055b3c5ae71f4 in zend_execute_scripts ()\n12 0x000055b3c5a260ea in php_execute_script ()\n13 0x000055b3c5bdb33f in ?? ()\n14 0x000055b3c5bdc5bd in ?? ()\n15 0x00007f196ddbbb45 in __libc_start_main (main=0x55b3c5bdbe20, argc=2, argv=0x7ffd7d0e95a8, init=, fini=, rtld_fini=, stack_end=0x7ffd7d0e9598) at libc-start.c:287\n16 0x000055b3c5515ba9 in _start ()\n```\nSo yes,\nzim_Group_Model_testCalled ->\nzephir_return_call_class_method ->\nzephir_call_class_method_aparams ->\nzephir_call_user_function ->\nzephir_call_function_opt ->\nzim_Group_Model_testCalled3 ->\nzephir_get_called_class ->\nzend_string_dup\nphp-config\nOptions:\n  --prefix            [/usr/local]\n  --includes          [-I/usr/local/include/php -I/usr/local/include/php/main -I/usr/local/include/php/TSRM -I/usr/local/include/php/Zend -I/usr/local/include/php/ext -I/usr/local/include/php/ext/date/lib]\n  --ldflags           [ -Wl,-O1 -Wl,--hash-style=both -pie -L/usr/lib/x86_64-linux-gnu]\n  --libs              [-lcrypt   -lresolv -lcrypt -ledit -ltermcap -lrt -lcurl -lz -lrt -lm -ldl -lnsl  -lpthread -lxml2 -lssl -lcrypto -lcurl -lxml2 -lssl -lcrypto -lxml2 -lcrypt -lxml2 -lxml2 -lxml2 -lssl -lcrypto -lcrypt ]\n  --extension-dir     [/usr/local/lib/php/extensions/debug-zts-20160303]\n  --include-dir       [/usr/local/include/php]\n  --man-dir           [/usr/local/php/man]\n  --php-binary        [/usr/local/bin/php]\n  --php-sapis         [ cli phpdbg cgi]\n  --configure-options [--with-config-file-path=/usr/local/etc/php --with-config-file-scan-dir=/usr/local/etc/php/conf.d --enable-debug --enable-cgi --enable-cli --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib --enable-maintainer-zts]\n  --version           [7.1.3]\n  --vernum            [70103]. Cc: @rafmichalak84 . I've modified this for my example:\n```diff\nif PHP_VERSION_ID >= 70100\n---                fcic.called_scope = obj_ce ? obj_ce : (EG(current_execute_data) ? Z_OBJ(EG(current_execute_data)->This) : NULL);\n+++                fcic.called_scope = obj_ce ? obj_ce : (EG(current_execute_data) ? Z_OBJCE(EG(current_execute_data)->This) : NULL);\nendif\n``` \nand got this trace:\n```gdb\nReading symbols from /usr/local/bin/php...(no debugging symbols found)...done.\n[New LWP 24389]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by 'php test.php'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007fe4e0f1d8cf in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n175     if (ZSTR_IS_INTERNED(s)) {\n(gdb) (gdb) #0  0x00007fe4e0f1d8cf in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\nNo locals.\n1  0x00007fe4e0f1dd6d in zephir_get_called_class (return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n    __z = 0x7fe4e18140a0\n    __s = 0x7fe4e1814100\n    called_scope = 0x7fe4e18726e0\n\n2  0x00007fe4e0f3646c in zim_Group_Model_testCalled3 (execute_data=0x7fe4e1814100, return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n    this_zv = {value = {lval = 94749969974992, dval = 4.6812705109133141e-310, counted = 0x562cb24d86d0, str = 0x562cb24d86d0, arr = 0x562cb24d86d0, obj = 0x562cb24d86d0, res = 0x562cb24d86d0, ref = 0x562cb24d86d0, ast = 0x562cb24d86d0, zv = 0x562cb24d86d0, ptr = 0x562cb24d86d0, ce = 0x562cb24d86d0, func = 0x562cb24d86d0, ww = {w1 = 2991425232, w2 = 22060}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 2, cache_slot = 2, lineno = 2, num_args = 2, fe_pos = 2, fe_iter_idx = 2, access_flags = 2, property_guard = 2, extra = 2}}\n    this_ptr = 0x0\n\n3  0x00007fe4e0f2ff87 in zephir_call_function_opt (fci=0x7ffe415a4e50, fci_cache=0x7ffe415a4e20, info=0x7ffe415a4f50, params=0x7ffe415a5080) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n    call_via_handler = 0\n    i = 0\n    calling_scope = 0x562cb24d4c20\n    call = 0x7fe4e1814100\n    dummy_execute_data = {opline = 0x7ffe415a4dd0, call = 0x7fe4e73fadc7 <_dl_fixup+247>, return_value = 0xf401f5188f8ec4c4, func = 0x1e, This = {value = {lval = 140621012540416, dval = 6.947601137963066e-310, counted = 0x7fe4e1801c00, str = 0x7fe4e1801c00, arr = 0x7fe4e1801c00, obj = 0x7fe4e1801c00, res = 0x7fe4e1801c00, ref = 0x7fe4e1801c00, ast = 0x7fe4e1801c00, zv = 0x7fe4e1801c00, ptr = 0x7fe4e1801c00, ce = 0x7fe4e1801c00, func = 0x7fe4e1801c00, ww = {w1 = 3783269376, w2 = 32740}}, u1 = {v = {type = 160 '\\240', type_flags = 228 '\\344', const_flags = 141 '\\215', reserved = 178 '\\262'}, type_info = 2995643552}, u2 = {next = 22060, cache_slot = 22060, lineno = 22060, num_args = 22060, fe_pos = 22060, fe_iter_idx = 22060, access_flags = 22060, property_guard = 22060, extra = 22060}}, prev_execute_data = 0x6, symbol_table = 0xfffffffee1801c1e, run_time_cache = 0x562cb05048dc, literals = 0xffffffff8f8ec4c4}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fe4e113e7a8, calling_scope = 0x0, called_scope = 0x7ffe415a8b50, object = 0x7fe4e1814030}\n    func = 0x562cb24d86d0\n    __PRETTY_FUNCTION__ = \"zephir_call_function_opt\"\n\n4  0x00007fe4e0f29a1b in zephir_call_user_function (object_pp=0x7fe4e18140d0, obj_ce=0x7fe4e1803240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe4e18140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080, info=0x7ffe415a4f50) at /usr/src/cphalcon/example/ext/kernel/fcall.c:499\n    local_retval_ptr = {value = {lval = 140729994858176, dval = 6.9529855798840031e-310, counted = 0x7ffe415a4ec0, str = 0x7ffe415a4ec0, arr = 0x7ffe415a4ec0, obj = 0x7ffe415a4ec0, res = 0x7ffe415a4ec0, ref = 0x7ffe415a4ec0, ast = 0x7ffe415a4ec0, zv = 0x7ffe415a4ec0, ptr = 0x7ffe415a4ec0, ce = 0x7ffe415a4ec0, func = 0x7ffe415a4ec0, ww = {w1 = 1096437440, w2 = 32766}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32766, cache_slot = 32766, lineno = 32766, num_args = 32766, fe_pos = 32766, fe_iter_idx = 32766, access_flags = 32766, property_guard = 32766, extra = 32766}}\n    status = -1\n    fci = {size = 56, function_name = {value = {lval = 94749968175168, dval = 4.6812704219901934e-310, counted = 0x562cb2321040, str = 0x562cb2321040, arr = 0x562cb2321040, obj = 0x562cb2321040, res = 0x562cb2321040, ref = 0x562cb2321040, ast = 0x562cb2321040, zv = 0x562cb2321040, ptr = 0x562cb2321040, ce = 0x562cb2321040, func = 0x562cb2321040, ww = {w1 = 2989625408, w2 = 22060}}, u1 = {v = {type = 128 '\\200', type_flags = 2 '\\002', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 640}, u2 = {next = 32740, cache_slot = 32740, lineno = 32740, num_args = 32740, fe_pos = 32740, fe_iter_idx = 32740, access_flags = 32740, property_guard = 32740, extra = 32740}}, retval = 0x7fe4e18140a0, params = 0x0, object = 0x0, no_separation = 1 '\\001', param_count = 0}\n    fcic = {initialized = 1 '\\001', function_handler = 0x562cb24d86d0, calling_scope = 0x562cb24d4c20, called_scope = 0x7fe4e1803240, object = 0x7fe4e18726e0}\n    zephir_globals_ptr = 0x562cb24d7560\n    fcall_key = 0x7fe4e1801c00 \"\\004testcalled3\"\n    fcall_key_hash = 8359231869212869828\n    fcall_key_len = 30\n    temp_cache_entry = 0x0\n    reload_cache = 1\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n5  0x00007fe4e0f2a0c4 in zephir_call_class_method_aparams (return_value_ptr=0x7fe4e18140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe4e0f39992 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080) at /usr/src/cphalcon/example/ext/kernel/fcall.c:706\n    possible_method = 0x562cafe6f449 <_zval_ptr_dtor+41> \"\\311\\303UH\\211\\345H\\203\\354 H\\211}\\370H\\211u\\360\\211U\\354H\\213E\\370\\017\\266@\\t\\017\\266\\300\\203\\340\\004\\205\\300t4H\\213E\\370H\\211\\307\\350z\\305\\377\\377H\\213E\\370H\\211\\307\\350\\305\\304\\377\\377\\205\\300u\\030H\\213E\\370\\272/\\002\"\n    rv = {value = {lval = 94749923720064, dval = 4.6812682256162265e-310, counted = 0x562caf8bbb80 <_start>, str = 0x562caf8bbb80 <_start>, arr = 0x562caf8bbb80 <_start>, obj = 0x562caf8bbb80 <_start>, res = 0x562caf8bbb80 <_start>, ref = 0x562caf8bbb80 <_start>, ast = 0x562caf8bbb80 <_start>, zv = 0x562caf8bbb80 <_start>, ptr = 0x562caf8bbb80 <_start>, ce = 0x562caf8bbb80 <_start>, func = 0x562caf8bbb80 <_start>, ww = {w1 = 2945170304, w2 = 22060}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 413, cache_slot = 413, lineno = 413, num_args = 413, fe_pos = 413, fe_iter_idx = 413, access_flags = 413, property_guard = 413, extra = 413}}\n    rvp = 0x7fe4e18140a0\n    fn = 0x0\n    status = 32766\n    info = {type = 4, ce = 0x7fe4e73fadc7 <_dl_fixup+247>, object_ptr = 0x7fe400000001, class_name = 0x0, class_length = 592200, func_name = 0x7fe4e0f39992 \"testcalled3\", func_length = 11}\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n6  0x00007fe4e0f35fe9 in zephir_return_call_class_method (return_value=0x7fe4e18140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe4e0f39992 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080) at ./kernel/fcall.h:417\n    rv = {value = {lval = 140621012546112, dval = 6.9476011382444858e-310, counted = 0x7fe4e1803240, str = 0x7fe4e1803240, arr = 0x7fe4e1803240, obj = 0x7fe4e1803240, res = 0x7fe4e1803240, ref = 0x7fe4e1803240, ast = 0x7fe4e1803240, zv = 0x7fe4e1803240, ptr = 0x7fe4e1803240, ce = 0x7fe4e1803240, func = 0x7fe4e1803240, ww = {w1 = 3783275072, w2 = 32740}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 22060, cache_slot = 22060, lineno = 22060, num_args = 22060, fe_pos = 22060, fe_iter_idx = 22060, access_flags = 22060, property_guard = 22060, extra = 22060}}\n    rvp = 0x7fe4e18140a0\n    status = 32740\n\n7  0x00007fe4e0f362e3 in zim_Group_Model_testCalled (execute_data=0x7fe4e18140b0, return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n    params_ = 0x7ffe415a5080\n    ZEPHIR_LAST_CALL_STATUS = 80\n    this_zv = {value = {lval = 140621013001952, dval = 6.9476011607659742e-310, counted = 0x7fe4e18726e0, str = 0x7fe4e18726e0, arr = 0x7fe4e18726e0, obj = 0x7fe4e18726e0, res = 0x7fe4e18726e0, ref = 0x7fe4e18726e0, ast = 0x7fe4e18726e0, zv = 0x7fe4e18726e0, ptr = 0x7fe4e18726e0, ce = 0x7fe4e18726e0, func = 0x7fe4e18726e0, ww = {w1 = 3783730912, w2 = 32740}}, u1 = {v = {type = 8 '\\b', type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 3080}, u2 = {next = 64, cache_slot = 64, lineno = 64, num_args = 64, fe_pos = 64, fe_iter_idx = 64, access_flags = 64, property_guard = 64, extra = 64}}\n    this_ptr = 0x7ffe415a5080\n\n8  0x0000562cafef901d in ?? ()\nNo symbol table info available.\n9  0x0000562cafef6ae6 in execute_ex ()\nNo symbol table info available.\n10 0x0000562cafef6ceb in zend_execute ()\nNo symbol table info available.\n11 0x0000562cafe8d1f4 in zend_execute_scripts ()\nNo symbol table info available.\n12 0x0000562cafdcc0ea in php_execute_script ()\nNo symbol table info available.\n13 0x0000562caff8133f in ?? ()\nNo symbol table info available.\n14 0x0000562caff825bd in ?? ()\nNo symbol table info available.\n15 0x00007fe4e4e1db45 in __libc_start_main (main=0x562caff81e20, argc=2, argv=0x7ffe415a8b58, init=, fini=, rtld_fini=, stack_end=0x7ffe415a8b48) at libc-start.c:287\n    result = <optimized out>\n    unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, 133306455996490140, 94749923720064, 140729994873680, 0, 0, -133670691320897124, -139523351464517220}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x562caff8c8d0 <__libc_csu_init>, 0x7ffe415a8b58}, data = {prev = 0x0, cleanup = 0x0, canceltype = -1342650160}}}\n    not_first_call = <optimized out>\n\n16 0x0000562caf8bbba9 in _start ()\nNo symbol table info available.\n(gdb) rax            0xf273140400000001 -976414686796840959\nrbx            0x0  0\nrcx            0x7fe4e5ff72e0   140621087994592\nrdx            0x562cb2418790   94749969188752\nrsi            0x0  0\nrdi            0xf273140400000001   -976414686796840959\nrbp            0x7ffe415a4c10   0x7ffe415a4c10\nrsp            0x7ffe415a4c00   0x7ffe415a4c00\nr8             0x7fe4e1803240   140621012546112\nr9             0x0  0\nr10            0x7ffe415a49e0   140729994856928\nr11            0x7fe4e4f68f90   140621070634896\nr12            0x562caf8bbb80   94749923720064\nr13            0x7ffe415a8b50   140729994873680\nr14            0x7fe4e1814030   140621012615216\nr15            0x7fe4b8c456f8   140620329146104\nrip            0x7fe4e0f1d8cf   0x7fe4e0f1d8cf \neflags         0x10206  [ PF IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7fe4e0f1d8cf :   movzbl 0x5(%rax),%eax\n   0x7fe4e0f1d8d3 : movzbl %al,%eax\n   0x7fe4e0f1d8d6 : and    $0x2,%eax\n   0x7fe4e0f1d8d9 : test   %eax,%eax\n   0x7fe4e0f1d8db : je     0x7fe4e0f1d8e3 \n   0x7fe4e0f1d8dd : mov    -0x8(%rbp),%rax\n   0x7fe4e0f1d8e1 : jmp    0x7fe4e0f1d901 \n   0x7fe4e0f1d8e3 : mov    -0x8(%rbp),%rax\n   0x7fe4e0f1d8e7 : mov    0x10(%rax),%rax\n   0x7fe4e0f1d8eb : mov    -0x8(%rbp),%rdx\n   0x7fe4e0f1d8ef : lea    0x18(%rdx),%rcx\n   0x7fe4e0f1d8f3 : mov    -0xc(%rbp),%edx\n   0x7fe4e0f1d8f6 : mov    %rax,%rsi\n   0x7fe4e0f1d8f9 : mov    %rcx,%rdi\n   0x7fe4e0f1d8fc : callq  0x7fe4e0f1d860 \n   0x7fe4e0f1d901 : leaveq\n(gdb)\nThread 1 (Thread 0x7fe4e75ef800 (LWP 24389)):\n0  0x00007fe4e0f1d8cf in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n1  0x00007fe4e0f1dd6d in zephir_get_called_class (return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/kernel/object.c:107\n2  0x00007fe4e0f3646c in zim_Group_Model_testCalled3 (execute_data=0x7fe4e1814100, return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:61\n3  0x00007fe4e0f2ff87 in zephir_call_function_opt (fci=0x7ffe415a4e50, fci_cache=0x7ffe415a4e20, info=0x7ffe415a4f50, params=0x7ffe415a5080) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n4  0x00007fe4e0f29a1b in zephir_call_user_function (object_pp=0x7fe4e18140d0, obj_ce=0x7fe4e1803240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe4e18140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080, info=0x7ffe415a4f50) at /usr/src/cphalcon/example/ext/kernel/fcall.c:499\n5  0x00007fe4e0f2a0c4 in zephir_call_class_method_aparams (return_value_ptr=0x7fe4e18140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe4e0f39992 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080) at /usr/src/cphalcon/example/ext/kernel/fcall.c:706\n6  0x00007fe4e0f35fe9 in zephir_return_call_class_method (return_value=0x7fe4e18140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe4e0f39992 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7ffe415a5080) at ./kernel/fcall.h:417\n7  0x00007fe4e0f362e3 in zim_Group_Model_testCalled (execute_data=0x7fe4e18140b0, return_value=0x7fe4e18140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n8  0x0000562cafef901d in ?? ()\n9  0x0000562cafef6ae6 in execute_ex ()\n10 0x0000562cafef6ceb in zend_execute ()\n11 0x0000562cafe8d1f4 in zend_execute_scripts ()\n12 0x0000562cafdcc0ea in php_execute_script ()\n13 0x0000562caff8133f in ?? ()\n14 0x0000562caff825bd in ?? ()\n15 0x00007fe4e4e1db45 in __libc_start_main (main=0x562caff81e20, argc=2, argv=0x7ffe415a8b58, init=, fini=, rtld_fini=, stack_end=0x7ffe415a8b48) at libc-start.c:287\n16 0x0000562caf8bbba9 in _start ()\n```\n\n==24397== Invalid read of size 1\n==24397==    at 0xB6C88CF: zend_string_dup (/usr/local/include/php/Zend/zend_string.h:175)\n==24397==    by 0xB6C8D6C: zephir_get_called_class (/usr/src/cphalcon/example/ext/kernel/object.c:107)\n==24397==    by 0xB6E146B: zim_Group_Model_testCalled3 (/usr/src/cphalcon/example/ext/group/model.zep.c:61)\n==24397==    by 0xB6DAF86: zephir_call_function_opt (/usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262)\n==24397==    by 0xB6D4A1A: zephir_call_user_function (/usr/src/cphalcon/example/ext/kernel/fcall.c:499)\n==24397==    by 0xB6D50C3: zephir_call_class_method_aparams (/usr/src/cphalcon/example/ext/kernel/fcall.c:706)\n==24397==    by 0xB6E0FE8: zephir_return_call_class_method (/usr/src/cphalcon/example/ext/./kernel/fcall.h:417)\n==24397==    by 0xB6E12E2: zim_Group_Model_testCalled (/usr/src/cphalcon/example/ext/group/model.zep.c:36)\n==24397==    by 0x85701C: ??? (in /usr/local/bin/php)\n==24397==    by 0x854AE5: execute_ex (in /usr/local/bin/php)\n==24397==    by 0x854CEA: zend_execute (in /usr/local/bin/php)\n==24397==    by 0x7EB1F3: zend_execute_scripts (in /usr/local/bin/php)\n==24397==  Address 0xf273140400000006 is not stack'd, malloc'd or (recently) free'd. Well, what we tested (with @ovr )\nThis pasted directly in generated code, to avoid calling zephir_get_called_class\n```diff\nPHP_METHOD(Group_Model, testCalled3) {\nZEPHIR_INIT_THIS();\n\n+++ zend_class_entry *called_scope = zend_get_called_scope(EG(current_execute_data));\n+++ if (called_scope) {\n+++     ZVAL_STR(return_value, zend_string_dup(called_scope->name, 0));\n+++ }\n--- zephir_get_called_class(return_value TSRMLS_CC);\n    return;\n}\n```\nbit different issue, but I've fixed it too\n```diff\nif PHP_VERSION_ID >= 70100\n+++                fcic.called_scope = obj_ce ? obj_ce : (EG(current_execute_data) ? Z_OBJCE(EG(current_execute_data)->This) : NULL);\n---                fcic.called_scope = obj_ce ? obj_ce : (EG(current_execute_data) ? Z_OBJ(EG(current_execute_data)->This) : NULL);\nendif\n``` \nzephir_call_user_function\ndiff\n    if (type != zephir_fcall_function && !object_pp) {\n+++     object_pp = EG(current_execute_data) && Z_OBJCE(EG(current_execute_data)->This) ? &EG(current_execute_data)->This : NULL;\n---     object_pp = EG(current_execute_data) && Z_OBJ(EG(current_execute_data)->This) ? &EG(current_execute_data)->This : NULL;\n        if (!obj_ce && object_pp) {\n            obj_ce = Z_OBJCE_P(object_pp);\n        }\n    }\nLets debug:\ngdb --args /usr/bin/php test.php # Contents of test.php see ^\n```\n(gdb) run\nStarting program: /usr/bin/php test.php\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib/php/20160303/phalcon.so' - /usr/lib/php/20160303/phalcon.so: cannot open shared object file: No such file or directory in Unknown on line 0\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff598e838 in zend_string_dup (persistent=0, s=0xf273140400000001) at /usr/include/php/20160303/Zend/zend_string.h:175\n175     if (ZSTR_IS_INTERNED(s)) {\n```\nOk\n(gdb) print execute_data.This\n$2 = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000',\n      const_flags = 19 '\\023', reserved = 0 '\\000'}, type_info = 1245184}, u2 = {next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\nEmpty This. Just checked frames from 1 to 9. This always empty. The same for current_execute_data.\nOk, lets return back to the 1st frame and see executor_globals. \n(gdb) f 1\n(gdb) print executor_globals.current_execute_data.This\n$10 = {value = {lval = 140737318496128, dval = 6.9533474156754693e-310, counted = 0x7ffff5e02780, str = 0x7ffff5e02780, arr = 0x7ffff5e02780, obj = 0x7ffff5e02780, res = 0x7ffff5e02780, ref = 0x7ffff5e02780, ast = 0x7ffff5e02780,\n    zv = 0x7ffff5e02780, ptr = 0x7ffff5e02780, ce = 0x7ffff5e02780, func = 0x7ffff5e02780, ww = {w1 = 4125108096, w2 = 32767}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 2 '\\002', reserved = 0 '\\000'},\n    type_info = 131072}, u2 = {next = 0, cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n. So now bt is\n```gdb\n[New LWP 19239]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by '/usr/local/bin/php test.php'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007fe583935f6e in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n175     if (ZSTR_IS_INTERNED(s)) {\n(gdb) (gdb) #0  0x00007fe583935f6e in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\nNo locals.\n1  0x00007fe583936503 in zim_Group_Model_testCalled3 (execute_data=0x7fe584214100, return_value=0x7fe5842140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:62\n    __z = 0x7fe5842140a0\n    __s = 0x7fe584203240\n    this_zv = {value = {lval = 140734817501424, dval = 6.9532238501191016e-310, counted = 0x7fff60ce00f0, str = 0x7fff60ce00f0, arr = 0x7fff60ce00f0, obj = 0x7fff60ce00f0, res = 0x7fff60ce00f0, ref = 0x7fff60ce00f0, ast = 0x7fff60ce00f0, zv = 0x7fff60ce00f0, ptr = 0x7fff60ce00f0, ce = 0x7fff60ce00f0, func = 0x7fff60ce00f0, ww = {w1 = 1624113392, w2 = 32767}}, u1 = {v = {type = 29 '\\035', type_flags = 177 '\\261', const_flags = 146 '\\222', reserved = 131 '\\203'}, type_info = 2207428893}, u2 = {next = 32741, cache_slot = 32741, lineno = 32741, num_args = 32741, fe_pos = 32741, fe_iter_idx = 32741, access_flags = 32741, property_guard = 32741, extra = 32741}}\n    this_ptr = 0x0\n    called_scope = 0x7fe5842726e0\n\n2  0x00007fe58392ff8b in zephir_call_function_opt (fci=0x7fff60ce02b0, fci_cache=0x7fff60ce0280, info=0x7fff60ce03b0, params=0x7fff60ce04e0) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n    call_via_handler = 0\n    i = 0\n    calling_scope = 0x55aecfb02c20\n    call = 0x7fe584214100\n    dummy_execute_data = {opline = 0x7fff60ce0230, call = 0x7fe589ec3dc7 <_dl_fixup+247>, return_value = 0xd0b062499e308449, func = 0x1e, This = {value = {lval = 140623740935168, dval = 6.9477359385745917e-310, counted = 0x7fe584201c00, str = 0x7fe584201c00, arr = 0x7fe584201c00, obj = 0x7fe584201c00, res = 0x7fe584201c00, ref = 0x7fe584201c00, ast = 0x7fe584201c00, zv = 0x7fe584201c00, ptr = 0x7fe584201c00, ce = 0x7fe584201c00, func = 0x7fe584201c00, ww = {w1 = 2216696832, w2 = 32741}}, u1 = {v = {type = 160 '\\240', type_flags = 196 '\\304', const_flags = 240 '\\360', reserved = 207 '\\317'}, type_info = 3488662688}, u2 = {next = 21934, cache_slot = 21934, lineno = 21934, num_args = 21934, fe_pos = 21934, fe_iter_idx = 21934, access_flags = 21934, property_guard = 21934, extra = 21934}}, prev_execute_data = 0x6, symbol_table = 0xffffffff84201c1e, run_time_cache = 0x55aecf1a28dc, literals = 0xffffffff9e308449}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fe583b3e7a8, calling_scope = 0x0, called_scope = 0x7fff60ce3fb0, object = 0x7fe584214030}\n    func = 0x55aecfb066d0\n    __PRETTY_FUNCTION__ = \"zephir_call_function_opt\"\n\n3  0x00007fe583929a1f in zephir_call_user_function (object_pp=0x7fe5842140d0, obj_ce=0x7fe584203240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe5842140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0, info=0x7fff60ce03b0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:499\n    local_retval_ptr = {value = {lval = 140734817501984, dval = 6.9532238501467693e-310, counted = 0x7fff60ce0320, str = 0x7fff60ce0320, arr = 0x7fff60ce0320, obj = 0x7fff60ce0320, res = 0x7fff60ce0320, ref = 0x7fff60ce0320, ast = 0x7fff60ce0320, zv = 0x7fff60ce0320, ptr = 0x7fff60ce0320, ce = 0x7fff60ce0320, func = 0x7fff60ce0320, ww = {w1 = 1624113952, w2 = 32767}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32767, cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}\n    status = -1\n    fci = {size = 56, function_name = {value = {lval = 94209295315008, dval = 4.654557633405815e-310, counted = 0x55aecf94f040, str = 0x55aecf94f040, arr = 0x55aecf94f040, obj = 0x55aecf94f040, res = 0x55aecf94f040, ref = 0x55aecf94f040, ast = 0x55aecf94f040, zv = 0x55aecf94f040, ptr = 0x55aecf94f040, ce = 0x55aecf94f040, func = 0x55aecf94f040, ww = {w1 = 3482644544, w2 = 21934}}, u1 = {v = {type = 128 '\\200', type_flags = 2 '\\002', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 640}, u2 = {next = 32741, cache_slot = 32741, lineno = 32741, num_args = 32741, fe_pos = 32741, fe_iter_idx = 32741, access_flags = 32741, property_guard = 32741, extra = 32741}}, retval = 0x7fe5842140a0, params = 0x0, object = 0x0, no_separation = 1 '\\001', param_count = 0}\n    fcic = {initialized = 1 '\\001', function_handler = 0x55aecfb066d0, calling_scope = 0x55aecfb02c20, called_scope = 0x7fe584203240, object = 0x7fe5842726e0}\n    zephir_globals_ptr = 0x55aecfb05560\n    fcall_key = 0x7fe584201c00 \"\\004testcalled3\"\n    fcall_key_hash = 5814255187261424713\n    fcall_key_len = 30\n    temp_cache_entry = 0x0\n    reload_cache = 1\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n4  0x00007fe58392a0c8 in zephir_call_class_method_aparams (return_value_ptr=0x7fe5842140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe583939a92 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:706\n    possible_method = 0x55aeceb0d449 <_zval_ptr_dtor+41> \"\\311\\303UH\\211\\345H\\203\\354 H\\211}\\370H\\211u\\360\\211U\\354H\\213E\\370\\017\\266@\\t\\017\\266\\300\\203\\340\\004\\205\\300t4H\\213E\\370H\\211\\307\\350z\\305\\377\\377H\\213E\\370H\\211\\307\\350\\305\\304\\377\\377\\205\\300u\\030H\\213E\\370\\272/\\002\"\n    rv = {value = {lval = 94209274387328, dval = 4.6545565994410415e-310, counted = 0x55aece559b80 <_start>, str = 0x55aece559b80 <_start>, arr = 0x55aece559b80 <_start>, obj = 0x55aece559b80 <_start>, res = 0x55aece559b80 <_start>, ref = 0x55aece559b80 <_start>, ast = 0x55aece559b80 <_start>, zv = 0x55aece559b80 <_start>, ptr = 0x55aece559b80 <_start>, ce = 0x55aece559b80 <_start>, func = 0x55aece559b80 <_start>, ww = {w1 = 3461716864, w2 = 21934}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 413, cache_slot = 413, lineno = 413, num_args = 413, fe_pos = 413, fe_iter_idx = 413, access_flags = 413, property_guard = 413, extra = 413}}\n    rvp = 0x7fe5842140a0\n    fn = 0x0\n    status = 32767\n    info = {type = 4, ce = 0x7fe589ec3dc7 <_dl_fixup+247>, object_ptr = 0x7fe500000001, class_name = 0x0, class_length = 592200, func_name = 0x7fe583939a92 \"testcalled3\", func_length = 11}\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n5  0x00007fe583936034 in zephir_return_call_class_method (return_value=0x7fe5842140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe583939a92 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0) at ./kernel/fcall.h:417\n    rv = {value = {lval = 140623740940864, dval = 6.9477359388560115e-310, counted = 0x7fe584203240, str = 0x7fe584203240, arr = 0x7fe584203240, obj = 0x7fe584203240, res = 0x7fe584203240, ref = 0x7fe584203240, ast = 0x7fe584203240, zv = 0x7fe584203240, ptr = 0x7fe584203240, ce = 0x7fe584203240, func = 0x7fe584203240, ww = {w1 = 2216702528, w2 = 32741}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 21934, cache_slot = 21934, lineno = 21934, num_args = 21934, fe_pos = 21934, fe_iter_idx = 21934, access_flags = 21934, property_guard = 21934, extra = 21934}}\n    rvp = 0x7fe5842140a0\n    status = 32741\n\n6  0x00007fe58393632e in zim_Group_Model_testCalled (execute_data=0x7fe5842140b0, return_value=0x7fe5842140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n    params_ = 0x7fff60ce04e0\n    ZEPHIR_LAST_CALL_STATUS = 80\n    this_zv = {value = {lval = 140623741396704, dval = 6.9477359613774999e-310, counted = 0x7fe5842726e0, str = 0x7fe5842726e0, arr = 0x7fe5842726e0, obj = 0x7fe5842726e0, res = 0x7fe5842726e0, ref = 0x7fe5842726e0, ast = 0x7fe5842726e0, zv = 0x7fe5842726e0, ptr = 0x7fe5842726e0, ce = 0x7fe5842726e0, func = 0x7fe5842726e0, ww = {w1 = 2217158368, w2 = 32741}}, u1 = {v = {type = 8 '\\b', type_flags = 12 '\\f', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 3080}, u2 = {next = 64, cache_slot = 64, lineno = 64, num_args = 64, fe_pos = 64, fe_iter_idx = 64, access_flags = 64, property_guard = 64, extra = 64}}\n    this_ptr = 0x7fff60ce04e0\n\n7  0x000055aeceb9701d in ?? ()\nNo symbol table info available.\n8  0x000055aeceb94ae6 in execute_ex ()\nNo symbol table info available.\n9  0x000055aeceb94ceb in zend_execute ()\nNo symbol table info available.\n10 0x000055aeceb2b1f4 in zend_execute_scripts ()\nNo symbol table info available.\n11 0x000055aecea6a0ea in php_execute_script ()\nNo symbol table info available.\n12 0x000055aecec1f33f in ?? ()\nNo symbol table info available.\n13 0x000055aecec205bd in ?? ()\nNo symbol table info available.\n14 0x00007fe5878e6b45 in __libc_start_main (main=0x55aecec1fe20, argc=2, argv=0x7fff60ce3fb8, init=, fini=, rtld_fini=, stack_end=0x7fff60ce3fa8) at libc-start.c:287\n    result = <optimized out>\n    unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, 1088537785083350436, 94209274387328, 140734817517488, 0, 0, -1088319950814458460, -1094290846162760284}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x55aecec2a8d0 <__libc_csu_init>, 0x7fff60ce3fb8}, data = {prev = 0x0, cleanup = 0x0, canceltype = -826103600}}}\n    not_first_call = <optimized out>\n\n15 0x000055aece559ba9 in _start ()\nNo symbol table info available.\n(gdb) rax            0xf273140400000001 -976414686796840959\nrbx            0x0  0\nrcx            0x7fe588ac02e0   140623817212640\nrdx            0x55aecfa46790   94209296328592\nrsi            0x0  0\nrdi            0xf273140400000001   -976414686796840959\nrbp            0x7fff60ce0090   0x7fff60ce0090\nrsp            0x7fff60ce0080   0x7fff60ce0080\nr8             0x7fe584203240   140623740940864\nr9             0x0  0\nr10            0x7fff60cdfe40   140734817500736\nr11            0x7fe587a31f90   140623799852944\nr12            0x55aece559b80   94209274387328\nr13            0x7fff60ce3fb0   140734817517488\nr14            0x7fe584214030   140623741009968\nr15            0x7fe55b6456f8   140623057540856\nrip            0x7fe583935f6e   0x7fe583935f6e \neflags         0x10202  [ IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) => 0x7fe583935f6e :   movzbl 0x5(%rax),%eax\n   0x7fe583935f72 : movzbl %al,%eax\n   0x7fe583935f75 : and    $0x2,%eax\n   0x7fe583935f78 : test   %eax,%eax\n   0x7fe583935f7a : je     0x7fe583935f82 \n   0x7fe583935f7c : mov    -0x8(%rbp),%rax\n   0x7fe583935f80 : jmp    0x7fe583935fa0 \n   0x7fe583935f82 : mov    -0x8(%rbp),%rax\n   0x7fe583935f86 : mov    0x10(%rax),%rax\n   0x7fe583935f8a : mov    -0x8(%rbp),%rdx\n   0x7fe583935f8e : lea    0x18(%rdx),%rcx\n   0x7fe583935f92 : mov    -0xc(%rbp),%edx\n   0x7fe583935f95 : mov    %rax,%rsi\n   0x7fe583935f98 : mov    %rcx,%rdi\n   0x7fe583935f9b : callq  0x7fe583935eff \n   0x7fe583935fa0 : leaveq\n(gdb)\nThread 1 (Thread 0x7fe58a0b7800 (LWP 19239)):\n0  0x00007fe583935f6e in zend_string_dup (s=0xf273140400000001, persistent=0) at /usr/local/include/php/Zend/zend_string.h:175\n1  0x00007fe583936503 in zim_Group_Model_testCalled3 (execute_data=0x7fe584214100, return_value=0x7fe5842140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:62\n2  0x00007fe58392ff8b in zephir_call_function_opt (fci=0x7fff60ce02b0, fci_cache=0x7fff60ce0280, info=0x7fff60ce03b0, params=0x7fff60ce04e0) at /usr/src/cphalcon/example/ext/kernel/extended/fcall.c:1262\n3  0x00007fe583929a1f in zephir_call_user_function (object_pp=0x7fe5842140d0, obj_ce=0x7fe584203240, type=zephir_fcall_self, function_name=0x0, retval_ptr=0x7fe5842140a0, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0, info=0x7fff60ce03b0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:499\n4  0x00007fe58392a0c8 in zephir_call_class_method_aparams (return_value_ptr=0x7fe5842140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe583939a92 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0) at /usr/src/cphalcon/example/ext/kernel/fcall.c:706\n5  0x00007fe583936034 in zephir_return_call_class_method (return_value=0x7fe5842140a0, ce=0x0, type=zephir_fcall_self, object=0x0, method_name=0x7fe583939a92 \"testcalled3\", method_len=11, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fff60ce04e0) at ./kernel/fcall.h:417\n6  0x00007fe58393632e in zim_Group_Model_testCalled (execute_data=0x7fe5842140b0, return_value=0x7fe5842140a0) at /usr/src/cphalcon/example/ext/group/model.zep.c:36\n7  0x000055aeceb9701d in ?? ()\n8  0x000055aeceb94ae6 in execute_ex ()\n9  0x000055aeceb94ceb in zend_execute ()\n10 0x000055aeceb2b1f4 in zend_execute_scripts ()\n11 0x000055aecea6a0ea in php_execute_script ()\n12 0x000055aecec1f33f in ?? ()\n13 0x000055aecec205bd in ?? ()\n14 0x00007fe5878e6b45 in __libc_start_main (main=0x55aecec1fe20, argc=2, argv=0x7fff60ce3fb8, init=, fini=, rtld_fini=, stack_end=0x7fff60ce3fa8) at libc-start.c:287\n15 0x000055aece559ba9 in _start ()\n```. @sjinks note:\n(gdb) print executor_globals.current_execute_data.This.value.obj.ce.name.val\n$10 = \"P\"\n(gdb) print executor_globals.current_execute_data.This.value.obj.ce.name.len\n$11 = 7. @sjinks @dreamsxin \nI created a separate repo for testing and debugging current issues: https://github.com/sergeyklay/issue1394\nMy last PR https://github.com/phalcon/zephir/pull/1407 fixes partially the current PHP 7.1 issue. At least I thought so.  But after I merged into the master, I found that, nevertheless, the tests fall for PHP 7.1. Now for another use case (see https://travis-ci.org/phalcon/zephir/jobs/212483707)\nIn order to simplify debugging and to narrow the search we can edit the kernel directly in this repository.\nWithin half an hour I'll set up the automated tests for Travis CI\nCc: @ovr . Fixed in master branch.. > zephir_parser extension not loaded, compiling it\n\"cl\" \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0438\u043b\u0438 \u0432\u043d\u0435\u0448\u043d\u0435\u0439\n\u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439, \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043e\u0439 \u0438\u043b\u0438 \u043f\u0430\u043a\u0435\u0442\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c.\n\"lemon\" \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0438\u043b\u0438 \u0432\u043d\u0435\u0448\u043d\u0435\u0439\n\u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439, \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043e\u0439 \u0438\u043b\u0438 \u043f\u0430\u043a\u0435\u0442\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c.\n\nhttps://github.com/phalcon/zephir/issues/1366\n\nhttps://github.com/phalcon/zephir/issues/1154. Can't reproduce\n\n\nPHP 7.1.3-3+deb.sury.org~xenial+1 (cli) (built: Mar 25 2017 14:00:03) ( NTS )\n\nZephir 0.9.6a-dev-ec52b83e7f. This issue was moved to phalcon/ide-stubs#2. @Cinderella-Man Try to use \nzep\n{\"predicate\"}(value). @dreamsxin Could you please take a look. Hello @SimBioT1954\n\nThis is NFR (new feature request) related to the Phalcon project, not Zephir. \nI'm closing this issue here. Feel free to open a NFR at the appropriate repository.\nThank you. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. I like the second option for now. version_compare? in C? could you please provide example. I still don't completely understand. What kind of problem you want to solve. Can you elaborate on that. So, it is just a Zephir bug (may be). There is no reason to introduce new internal API. Could you please create tests for Zephir?. ```c\ninclude \ndefine PHP_VERSION_ID 70100\ndefine zephir_is_php_version(id) (PHP_VERSION_ID / 10 == id / 10 ?  1 : 0)\nmain ()\n{ \n    int id_int = 70100;\n    float id_float = 70100.0;\nif (zephir_is_php_version(id_int)) {\n  printf(\"using for int\\n\");\n}\n\nif (zephir_is_php_version(id_float)) {\n  printf(\"using for float\\n\");\n}\n\n}\n``. Fixed in thedevelopment` branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. Thank you. Thanks to @ovr . @dreamsxin But tests now failed. I've rollback in this repo https://github.com/sergeyklay/issue1394. @sjinks @dreamsxin @ovr Could you please take a view. Fixed in https://github.com/sergeyklay/issue1394/pull/6. Try to check log file.. Is it posible to see source to reproduce?. This issue was moved to phalcon/php-zephir-parser#19. Could you please provide config.json to reproduce. #1415. Thank you. Thank you. Yes please. @sjinks Merged #1414 and #1411 into one branch\nAlso could you please take a look  ffd356c. Just removed zephir_call_func_aparams_fast because it no longer used.. @sjinks Lets continue here instead of example repo. @sjinks I think we can skip optimization through caching right now for >= 70100. @sjinks  As I can see we can keep caching for ZE2 and do not use for ZE3. At least for first time, to localize issue. \n. @sjinks What do you think about disabling caching at all for ZE3?. @sjinks Let me see what we can. @sjinks Let me 15 min to provide some test. @Jurigag We\u2019ll use for this a separated PR\n. @sjinks Good work! Thank you \ud83d\udc4d . Yes. I will keep this open until this not done.. ```\nThere were 4 errors:\n1) Extension\\Integral\\RegexDNATest::testProcess\nParameter 3 to preg_match_all() expected to be a reference, value given\n/home/vagrant/projects/c/zephir/unit-tests/Extension/Integral/RegexDNATest.php:29\n2) Extension\\PregmatchTest::testPregMatch\nParameter 3 to preg_match() expected to be a reference, value given\n/home/vagrant/projects/c/zephir/unit-tests/Extension/PregmatchTest.php:29\n3) Extension\\PregmatchTest::testCollectMatches\nParameter 3 to preg_match() expected to be a reference, value given\n/home/vagrant/projects/c/zephir/unit-tests/Extension/PregmatchTest.php:82\n4) Extension\\RouterTest::testRouter\nParameter 3 to preg_match() expected to be a reference, value given\n/home/vagrant/projects/c/zephir/unit-tests/Extension/RouterTest.php:191\n```. Cant realize why on Travis all ok. @Jurigag https://github.com/phalcon/zephir/pull/1419\nCould you please check again?. @sjinks\n\nCannot call func_get_arg() dynamically\n\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/text.zep#L245\nand\nhttps://github.com/phalcon/zephir/pull/1100. Is it ready to merging?. Good catch! Thank you \ud83d\udc4d. Refs: https://github.com/sergeyklay/issue1394/pull/6#issuecomment-288876333. Fixed in master branch. Thank you. Calling parent's private methods from the child's public ones doesn't provided for PHP < 5.6. This feature works well now for PHP 5.6, 7.0, 7.1, 7.2 and even for 7.3 (nightly build)  For older PHP versions like PHP 5.5 this will not be implemented. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.\nRefs:\n- https://github.com/phalcon/zephir/pull/1467\n- https://github.com/phalcon/zephir/pull/1429\n- https://github.com/phalcon/zephir/issues/251. We'll do it after release Phalcon 4.0.0. Phalcon  3.x support 5.5. Yes, we plan support only 7.x for Phalcon 4.x. @sjinks I'm not sure. Lets try to do it. Good work!. @Jurigag https://github.com/phalcon/cphalcon/blob/master/phalcon/config.zep#L238. We fixed this few days ago :). Thank you!. Good catch! . In my opinion we can just throw compilation exception during compilation. Looks good to me. As I can see there is code generation issue. Thank you. Fixed in master. Thank you. Thank you. Implemented in the master branch. Used Zephir repo for module example (test.so). @sjinks Any idea? :confused:. Note: This bug does not related to clang. I was able to reproduce it gcc. @Jurigag No, this only happens on 7.1, and only for this code:\n```zep\nclass StaticPropertyArray\n{\n    public static someEmptyArray = [];\npublic static someArray = [1, 2, 3, 4];\n\n}\n```\nRefs: https://github.com/phalcon/zephir/issues/367, https://github.com/phalcon/zephir/issues/188, https://github.com/phalcon/zephir/issues/1255. @sjinks See https://github.com/phalcon/zephir/pull/970. @sjinks Yes, without ZEPHIR_RELEASE all ok. Good work. Fine!. @sjinks @Izopi4a We don't support 5.4. The 5.5 support needed for Phalcon 3.x (LTS). Calling parent's private methods from the child's public ones doesn't provided for PHP < 5.6. This feature works well now for PHP 5.6, 7.0, 7.1, 7.2 and even for 7.3 (nightly build)  For older PHP versions like PHP 5.5 this will not be implemented. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.\nRefs:\n- https://github.com/phalcon/zephir/pull/1467\n- https://github.com/phalcon/zephir/pull/1429\n- https://github.com/phalcon/zephir/issues/251. @steffengy \nI managed to prepare releases for Windows (TS and NTS) and PHP 5.5 - 7.2\nhttps://github.com/phalcon/php-zephir-parser/releases/tag/v1.0.1. @mruz anyway  in this case we'll need call some script to install parser from using composer hooks. Right? Also this may require root privileges.. Actually I'm pretty sure this will not simplify the task. The provided post-install-cmd will work for Linux but not for Windows. Think about it this way: I need to install the software (dependency) once to install Zephir. For example, I need to install Java as dependency to be able to install PhpStorm.. Thank you. $ gdb --args php ./vendor/bin/phpunit -c phpunit.xml.dist \\\n    --debug \\\n    --filter shouldCorrectHandleUseCaseWithExceptionOnMethodAssignment \n    unit-tests/Extension/ExceptionsTest.php\nProgram received signal SIGSEGV, Segmentation fault.\nzend_mm_alloc_small (bin_num=<optimized out>, size=32, heap=0x7ffff3800040) at /usr/local/share/php/7.1.3/Zend/zend_alloc.c:1261\nwarning: Source file is more recent than executable.\n1261            heap->free_slot[bin_num] = p->next_free_slot;\n```gdb\n0  zend_mm_alloc_small (bin_num=, size=32, heap=0x7ffff3800040) at /usr/local/share/php/7.1.3/Zend/zend_alloc.c:1261\n    p = 0x7fffd2e18ea000\n\n1  zend_mm_alloc_heap (size=32, heap=0x7ffff3800040) at /usr/local/share/php/7.1.3/Zend/zend_alloc.c:1332\n    ptr = 0x7fffd2e18ea000\n\n2  _emalloc (size=size@entry=32) at /usr/local/share/php/7.1.3/Zend/zend_alloc.c:2417\nNo locals.\n3  0x000055555578f9d1 in zend_string_alloc (persistent=0, len=5) at /usr/local/share/php/7.1.3/Zend/zend_string.h:122\n    ret = <optimized out>\n\n4  zend_string_init (persistent=0, len=5,\nstr=0x7ffff7fe53b1 \"value)\\n    {\\n        parent::__construct();\\n        $this->value = $value;\\n    }\\n\\n    /**\\n     * Evaluates the constraint for parameter $other\\n     *\\n     * If $returnResult is set to false (the defau\"...) at /usr/local/share/php/7.1.3/Zend/zend_string.h:158\n\nNo locals.\n5  lex_scan (zendlval=zendlval@entry=0x7fffffff8c20) at Zend/zend_language_scanner.l:1870\n    __z = 0x7fffffff8c20\n    yybm = \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\300@\\000\\000@\", '\\000' <repeats 18 times>, \"\\300\", '\\000' <repeats 15 times>, \"<<,,,,,,,,\\000\\000\\000\\000\\000\\000\\000$$$$$$\", '\\004' <repeats 20 times>, \"\\000\\000\\000\\000\\004\\000$$$$$$\", '\\004' <repeats 20 times>, \"\\000\\000\\000\\000\\000\", '\\004' <repeats 128 times>\n    yych = <optimized out>\n    yyaccept = 0\n    start_line = 39\n\n6  0x00005555557a00bb in zendlex (elem=elem@entry=0x7fffffff8ce0) at /usr/local/share/php/7.1.3/Zend/zend_compile.c:1701\n    zv = {value = {lval = 140737280183984, dval = 6.9533455228040524e-310, counted = 0x7ffff3978eb0, str = 0x7ffff3978eb0, arr = 0x7ffff3978eb0, obj = 0x7ffff3978eb0,\n        res = 0x7ffff3978eb0, ref = 0x7ffff3978eb0, ast = 0x7ffff3978eb0, zv = 0x7ffff3978eb0, ptr = 0x7ffff3978eb0, ce = 0x7ffff3978eb0, func = 0x7ffff3978eb0, ww = {\n          w1 = 4086795952, w2 = 32767}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 21845,\n        cache_slot = 21845, lineno = 21845, num_args = 21845, fe_pos = 21845, fe_iter_idx = 21845, access_flags = 21845, property_guard = 21845, extra = 21845}}\n    retval = <optimized out>\n\n7  0x000055555578374f in zendparse () at /usr/local/share/php/7.1.3/Zend/zend_language_parser.c:4452\n    zendchar = -2\n    zendlval = {ast = 0x7fffd2eed1c0, str = 0x7fffd2eed1c0, num = 140736732254656}\n    zendnerrs = <optimized out>\n    yystate = <optimized out>\n    yyerrstatus = 0\n    yyssa = {0, 2, 61, 203, 356, 585, 664, 725, 769, 815, 781, 821, 855, 888, 909, 922, -29280, -1, 32767, 0, 12032, 21622, 10790, -5057, 0, 0, 0, 0, 27702, 22026, 21845, 0, 146,\n      0, 0, 0, 15048, -2184, 32767, 0, -28928, -1, 32767, 0, -28948, -1, 32767, 0, -28896, -1, 32767, 0, 16505, -2189, 32767, 0, 91, 0, 110, 0, -29264, -1, 32767, 0, 0, 0, 0, 0,\n      15243, -2189, 32767, 0, 27568, 22026, 0, 0, 64, 0, 0, 0, -29248, -1, 32767, 0, 33, 0, 32767, 0, 27504, 22026, 21845, 0, -16464, -2189, 32767, 0, 0, 0, 0, 0, 12032, 21622,\n      10790, -5057, -28960, -1, 32767, 0, 27760, 22026, 21845, 0, 27568, 22026, 21845, 0, 27739, 22026, 21845, 0, 27759, 22026, 21845, 0, -28928, -1, 32767, 0, 27504, 22026,\n      21845, 0, -15781, -2189, 32767, 0, -24188, -1, 32767, 0, 0, 0, 0, 0, -24184, -1, 32767, 0, 0, 0, 32767, 0, 27568, 22026, 21845, 0, -28948, -1, 32767, 0, -28896, -1, 32767,\n      0, -29024, -1, 32767, 0, 0, 0, 32767, 0, -27872, 0, 32767, 0, -28968, -1, 32767, 0, 0, 0, 0, 0, -28964, -1, 32767, 0, -28960, -1, 32767, 0, -28956, -1, 32767, 0, -28952, -1,\n      32767, 0}\n    yyss = 0x7fffffff8d10\n    yyssp = 0x7fffffff8d2e\n    yyvsa = {{ast = 0x7fffffff8ef0, str = 0x7fffffff8ef0, num = 140737488326384}, {ast = 0x7fffd2eed018, str = 0x7fffd2eed018, num = 140736732254232}, {ast = 0x73, str = 0x73,\n        num = 115}, {ast = 0x18, str = 0x18, num = 24}, {ast = 0x7fffd2eed048, str = 0x7fffd2eed048, num = 140736732254280}, {ast = 0x7fffd2eed060, str = 0x7fffd2eed060,\n        num = 140736732254304}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7fffd2efd200, str = 0x7fffd2efd200, num = 140736732320256}, {ast = 0x7fffd2eed060, str = 0x7fffd2eed060,\n        num = 140736732254304}, {ast = 0x7fffd2eed078, str = 0x7fffd2eed078, num = 140736732254328}, {ast = 0x100, str = 0x100, num = 256}, {ast = 0x27, str = 0x27, num = 39}, {\n        ast = 0x0, str = 0x0, num = 0}, {ast = 0x7fffd2eed1c0, str = 0x7fffd2eed1c0, num = 140736732254656}, {ast = 0x7fffd2e6b9c0, str = 0x7fffd2e6b9c0, num = 140736731724224}, {\n        ast = 0x7fffd2eed1c0, str = 0x7fffd2eed1c0, num = 140736732254656}, {ast = 0x7ffff779b540, str = 0x7ffff779b540, num = 140737345336640}, {ast = 0x7ffff779b640,\n        str = 0x7ffff779b640, num = 140737345336896}, {ast = 0x7ffff779b740, str = 0x7ffff779b740, num = 140737345337152}, {ast = 0x7ffff779b880, str = 0x7ffff779b880,\n        num = 140737345337472}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x5555560a6bb0, str = 0x5555560a6bb0, num = 93825004104624}, {ast = 0x7fffd2e9aaf0, str = 0x7fffd2e9aaf0,\n        num = 140736731917040}, {ast = 0x7fffd2e9ab3c, str = 0x7fffd2e9ab3c, num = 140736731917116}, {ast = 0x7fffffff9120, str = 0x7fffffff9120, num = 140737488326944}, {\n        ast = 0x0, str = 0x0, num = 0}, {ast = 0x7fffffff8fe0, str = 0x7fffffff8fe0, num = 140737488326624}, {ast = 0x5555560a6bb0, str = 0x5555560a6bb0, num = 93825004104624}, {\n        ast = 0x0, str = 0x0, num = 0}, {ast = 0x100000000014, str = 0x100000000014, num = 17592186044436}, {ast = 0x300000003, str = 0x300000003, num = 12884901891}, {ast = 0x0,\n        str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x2, str = 0x2, num = 2}, {ast = 0x2, str = 0x2, num = 2}, {ast = 0x0,\n        str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0xa00000001, str = 0xa00000001, num = 42949672961}, {ast = 0x7fffffffa338,\n        str = 0x7fffffffa338, num = 140737488331576}, {ast = 0x7fff00000000, str = 0x7fff00000000, num = 140733193388032}, {ast = 0x5555560a6900, str = 0x5555560a6900,\n        num = 93825004103936}, {ast = 0x7fffffff909c, str = 0x7fffffff909c, num = 140737488326812}, {ast = 0x7fffffff90d0, str = 0x7fffffff90d0, num = 140737488326864}, {\n        ast = 0x7, str = 0x7, num = 7}, {ast = 0x700000000, str = 0x700000000, num = 30064771072}, {ast = 0x7fffffff91b0, str = 0x7fffffff91b0, num = 140737488327088}, {\n        ast = 0x7fffffff9088, str = 0x7fffffff9088, num = 140737488326792}, {ast = 0x2, str = 0x2, num = 2}, {ast = 0x7fffffff908c, str = 0x7fffffff908c, num = 140737488326796}, {\n        ast = 0x7fffffff9090, str = 0x7fffffff9090, num = 140737488326800}, {ast = 0x7fffffff9094, str = 0x7fffffff9094, num = 140737488326804}, {ast = 0x7fffffff9098,\n        str = 0x7fffffff9098, num = 140737488326808}, {ast = 0x7fffffff90a0, str = 0x7fffffff90a0, num = 140737488326816}, {ast = 0x7fffffff90a8, str = 0x7fffffff90a8,\n        num = 140737488326824}, {ast = 0x7fffd2e9a550, str = 0x7fffd2e9a550, num = 140736731915600}, {ast = 0x5555560a68b0, str = 0x5555560a68b0, num = 93825004103856}, {\n        ast = 0x7fffd2e9a550, str = 0x7fffd2e9a550, num = 140736731915600}, {ast = 0x200000008, str = 0x200000008, num = 8589934600}, {ast = 0x81d2eac7e0, str = 0x81d2eac7e0,\n        num = 557589383136}, {ast = 0x200000000, str = 0x200000000, num = 8589934592}, {ast = 0x6e00000040, str = 0x6e00000040, num = 472446402624}, {ast = 0x3e700000000,\n        str = 0x3e700000000, num = 4290672328704}, {ast = 0x5555560a6981, str = 0x5555560a6981, num = 93825004104065}, {ast = 0x7fffd2e9a598, str = 0x7fffd2e9a598,\n        num = 140736731915672}, {ast = 0x10000001d, str = 0x10000001d, num = 4294967325}, {ast = 0xffffffff0000000d, str = 0xffffffff0000000d, num = 18446744069414584333}, {\n        ast = 0x7fffffff95f0, str = 0x7fffffff95f0, num = 140737488328176}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7ffff779b540, str = 0x7ffff779b540, num = 140737345336640}, {\n        ast = 0x7ffff779b640, str = 0x7ffff779b640, num = 140737345336896}, {ast = 0x7ffff779b740, str = 0x7ffff779b740, num = 140737345337152}, {ast = 0x7ffff779b880,\n        str = 0x7ffff779b880, num = 140737345337472}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x5555560a6900, str = 0x5555560a6900, num = 93825004103936}, {ast = 0x7fffd2e9a550,\n        str = 0x7fffd2e9a550, num = 140736731915600}, {ast = 0x7fffd2e9a598, str = 0x7fffd2e9a598, num = 140736731915672}, {ast = 0x7fffffff92d0, str = 0x7fffffff92d0,\n        num = 140737488327376}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7803030078000083, str = 0x7803030078000083, num = 8647759010029633667}, {ast = 0x7809007803000300,\n        str = 0x7809007803000300, num = 8649445074788156160}, {ast = 0x900780300, str = 0x900780300, num = 38662570752}, {ast = 0x100000000014, str = 0x100000000014,\n        num = 17592186044436}, {ast = 0x6400000300000003, str = 0x6400000300000003, num = 7205759416677695491}, {ast = 0x640000006400, str = 0x640000006400,\n        num = 109951162803200}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x80000000002, str = 0x80000000002, num = 8796093022210}, {ast = 0x2,\n        str = 0x2, num = 2}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7f0a00000001, str = 0x7f0a00000001,\n        num = 139680926400513}, {ast = 0x7fffd2e9a560, str = 0x7fffd2e9a560, num = 140736731915616}, {ast = 0x100000004, str = 0x100000004, num = 4294967300}, {\n        ast = 0x7fffd2e9a57f, str = 0x7fffd2e9a57f, num = 140736731915647}, {ast = 0x200000005, str = 0x200000005, num = 8589934597}, {ast = 0x1, str = 0x1, num = 1}, {\n        ast = 0x5555558aa688, str = 0x5555558aa688, num = 93824995731080}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0x20, str = 0x20, num = 32}, {ast = 0x7fffffff9700,\n        str = 0x7fffffff9700, num = 140737488328448}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x55555576143b <xbuf_format_converter+1339>,\n        str = 0x55555576143b <xbuf_format_converter+1339>, num = 93824994382907}, {ast = 0x7fffffff9730, str = 0x7fffffff9730, num = 140737488328496}, {ast = 0x555500000000,\n        str = 0x555500000000, num = 93823560581120}, {ast = 0x7fffffff9740, str = 0x7fffffff9740, num = 140737488328512}, {ast = 0x3d, str = 0x3d, num = 61}, {ast = 0x1000000,\n        str = 0x1000000, num = 16777216}, {ast = 0x7fffffff96b5, str = 0x7fffffff96b5, num = 140737488328373}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7fffffff9280,\n        str = 0x7fffffff9280, num = 140737488327296}, {ast = 0xc, str = 0xc, num = 12}, {ast = 0x7ffff3978dd8, str = 0x7ffff3978dd8, num = 140737280183768}, {\n        ast = 0x10b4de16ffff92d0, str = 0x10b4de16ffff92d0, num = 1203831190780351184}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x2f, str = 0x2f,\n        num = 47}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0x7fffffff9328, str = 0x7fffffff9328, num = 140737488327464}, {ast = 0x7ffff3978dc0, str = 0x7ffff3978dc0,\n        num = 140737280183744}, {ast = 0x555555bc7700 <compiler_globals>, str = 0x555555bc7700 <compiler_globals>, num = 93824998995712}, {ast = 0xad, str = 0xad, num = 173}, {\n        ast = 0x55555579d6bf <zend_add_literal+191>, str = 0x55555579d6bf <zend_add_literal+191>, num = 93824994629311}, {ast = 0x200, str = 0x200, num = 512}, {ast = 0x0,\n        str = 0x0, num = 0}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0x7ffff7de0b70 <check_match+112>, str = 0x7ffff7de0b70 <check_match+112>, num = 140737351912304}, {\n        ast = 0x7fffffff97e0, str = 0x7fffffff97e0, num = 140737488328672}, {ast = 0x570, str = 0x570, num = 1392}, {ast = 0x7ffff7ffe168, str = 0x7ffff7ffe168,\n        num = 140737354129768}, {ast = 0x55555555aad8, str = 0x55555555aad8, num = 93824992258776}, {ast = 0x555555573d20, str = 0x555555573d20, num = 93824992361760}, {\n        ast = 0x7ffff7de147b <do_lookup_x+2011>, str = 0x7ffff7de147b <do_lookup_x+2011>, num = 140737351914619}, {ast = 0x570, str = 0x570, num = 1392}, {ast = 0x555555573d20,\n        str = 0x555555573d20, num = 93824992361760}, {ast = 0x7ffff7ffe168, str = 0x7ffff7ffe168, num = 140737354129768}, {ast = 0x7fffffff9398, str = 0x7fffffff9398,\n        num = 140737488327576}, {ast = 0x7fffffff9394, str = 0x7fffffff9394, num = 140737488327572}, {ast = 0x1f, str = 0x1f, num = 31}, {ast = 0x555555c1de90,\n        str = 0x555555c1de90, num = 93824999349904}, {ast = 0x7fffe3ef7c36, str = 0x7fffe3ef7c36, num = 140737017510966}, {ast = 0x7fffe3ef7250, str = 0x7fffe3ef7250,\n        num = 140737017508432}, {ast = 0x7fffffff9398, str = 0x7fffffff9398, num = 140737488327576}, {ast = 0xe2134d94, str = 0xe2134d94, num = 3792915860}, {ast = 0x3884d36,\n        str = 0x3884d36, num = 59264310}, {ast = 0x14, str = 0x14, num = 20}, {ast = 0xec3f2a2654762f00, str = 0xec3f2a2654762f00, num = 17023371460597919488}, {\n        ast = 0x555555573d20, str = 0x555555573d20, num = 93824992361760}, {ast = 0x7fffffff93c0, str = 0x7fffffff93c0, num = 140737488327616}, {\n        ast = 0x7fffe7d00cc0 <phar_globals>, str = 0x7fffe7d00cc0 <phar_globals>, num = 140737082559680}, {ast = 0x7fffffff9940, str = 0x7fffffff9940, num = 140737488329024}, {\n        ast = 0x7ffff3877a18, str = 0x7ffff3877a18, num = 140737279130136}, {ast = 0x6b, str = 0x6b, num = 107}, {ast = 0x0, str = 0x0, num = 0}, {\n        ast = 0x5555557778d6 <php_stream_locate_url_wrapper+86>, str = 0x5555557778d6 <php_stream_locate_url_wrapper+86>, num = 93824994474198}, {ast = 0x7ffff7ffe168,\n        str = 0x7ffff7ffe168, num = 140737354129768}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0x7fffffff9434, str = 0x7fffffff9434, num = 140737488327732}, {ast = 0x0, str = 0x0,\n        num = 0}, {ast = 0x7fffffff9440, str = 0x7fffffff9440, num = 140737488327744}, {ast = 0x7fffd2edcc00, str = 0x7fffd2edcc00, num = 140736732187648}, {ast = 0x7fffd2e9bc00,\n        str = 0x7fffd2e9bc00, num = 140736731921408}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0x4, str = 0x4, num = 4}, {ast = 0x55555577b336 <php_stdiop_set_option+870>,\n        str = 0x55555577b336 <php_stdiop_set_option+870>, num = 93824994489142}, {ast = 0x7fffd2f04a18, str = 0x7fffd2f04a18, num = 140736732351000}, {ast = 0x7fffd2e9bc00,\n        str = 0x7fffd2e9bc00, num = 140736731921408}, {ast = 0x9, str = 0x9, num = 9}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0xed5, str = 0xed5, num = 3797}, {\n        ast = 0x7ffff3817820, str = 0x7ffff3817820, num = 140737278736416}, {ast = 0x7ffff3862a40, str = 0x7ffff3862a40, num = 140737279044160}, {\n        ast = 0x555555776b9d <_php_stream_set_option+29>, str = 0x555555776b9d <_php_stream_set_option+29>, num = 93824994470813}, {ast = 0x7fffffff9488, str = 0x7fffffff9488,\n        num = 140737488327816}, {ast = 0xfe0, str = 0xfe0, num = 4064}, {ast = 0x7fffd2e9bc00, str = 0x7fffd2e9bc00, num = 140736731921408}, {\n        ast = 0x555555782819 <_php_stream_mmap_range+73>, str = 0x555555782819 <_php_stream_mmap_range+73>, num = 93824994519065}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0xed5,\n        str = 0xed5, num = 3797}, {ast = 0x7fff00000002, str = 0x7fff00000002, num = 140733193388034}, {ast = 0x7ffff7fe5000, str = 0x7ffff7fe5000, num = 140737354027008}, {\n        ast = 0x7fffffff9940, str = 0x7fffffff9940, num = 140737488329024}, {ast = 0xec3f2a2654762f00, str = 0xec3f2a2654762f00, num = 17023371460597919488}, {\n        ast = 0x7fffffff9940, str = 0x7fffffff9940, num = 140737488329024}, {ast = 0x55555575c874 <php_stream_open_for_zend_ex+340>,\n        str = 0x55555575c874 <php_stream_open_for_zend_ex+340>, num = 93824994363508}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0xed5, str = 0xed5, num = 3797}, {ast = 0x2c,\n        str = 0x2c, num = 44}, {ast = 0x2784, str = 0x2784, num = 10116}, {ast = 0x1, str = 0x1, num = 1}, {ast = 0x3e8000081b4, str = 0x3e8000081b4, num = 4294967329204}, {\n        ast = 0x3e8, str = 0x3e8, num = 1000}, {ast = 0x0, str = 0x0, num = 0}, {ast = 0xed5, str = 0xed5, num = 3797}, {ast = 0x1000, str = 0x1000, num = 4096}, {ast = 0x8,\n        str = 0x8, num = 8}, {ast = 0x58e6962e, str = 0x58e6962e, num = 1491506734}}\n    yyvs = 0x7fffffff8ea0\n    yyvsp = 0x7fffffff8f18\n    yystacksize = 200\n    yyn = 287\n    yyresult = <optimized out>\n    yytoken = <optimized out>\n    yyval = <optimized out>\n    yymsgbuf = \"\\000\\000\\000\\000\\000\\000\\000\\000\\017\\a\\230X\", '\\000' <repeats 12 times>, \"\\242\\336\\327X\", '\\000' <repeats 36 times>, \" \\000\\000\\000\\060\\000\\000\\000\\000/vT&*?\\354`\\037\\313UUU\\000\\000H\\226\\377\\377\\377\\177\\000\\000P\\226\\377\\377\\377\\177\\000\\000@\\231\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\324\\367}UUU\\000\"\n    yymsg = 0x7fffffff94e0 \"\"\n    yymsg_alloc = 128\n    yylen = 0\n\n8  0x0000555555785e8a in zend_compile (type=type@entry=2) at Zend/zend_language_scanner.l:585\n    op_array = 0x0\n    original_in_compilation = 0 '\\000'\n\n9  0x00005555557873a6 in compile_file (file_handle=0x7fffffff9940, type=2) at Zend/zend_language_scanner.l:635\n    original_lex_state = {yy_leng = 0, yy_start = 0x0, yy_text = 0x0, yy_cursor = 0x0, yy_marker = 0x0, yy_limit = 0x0, yy_state = 0, state_stack = {size = 4, top = 0, max = 0,\n        elements = 0x0}, heredoc_label_stack = {top = 0, max = 0, elements = 0x0, top_element = 0x0, persistent = 0 '\\000'}, in = 0x0, lineno = 0, filename = 0x0,\n      script_org = 0x0, script_org_size = 0, script_filtered = 0x0, script_filtered_size = 0, input_filter = 0x0, output_filter = 0x0, script_encoding = 0x0, on_event = 0x0,\n      on_event_context = 0x0, ast = 0x0, ast_arena = 0x0}\n    op_array = 0x0\n\n10 0x00007fffe7ae23d8 in phar_compile_file (file_handle=, type=) at /usr/local/share/php/7.1.3/ext/phar/phar.c:3320\n    __orig_bailout = 0x7fffffffb8b0\n    __bailout = {{__jmpbuf = {140737279130136, 2095129479050467347, 2, 140737279130136, 140737278736416, 140737279044160, 2095129479373428755, 2095112304217462803},\n        __mask_was_saved = 0, __saved_mask = {__val = {140737351936246, 1, 0, 140737488329216, 93824992311888, 140737488329280, 140737351968595, 0, 0, 0, 0, 0, 280375465082880, 0,\n            0, 1095216660480}}}}\n    res = <optimized out>\n    name = 0x0\n    failed = 0\n    phar = 0x7fffffff97e0\n\n11 0x000055555578759b in compile_filename (type=type@entry=2, filename=filename@entry=0x7ffff3817870) at Zend/zend_language_scanner.l:662\n    file_handle = {handle = {fd = -756433920, fp = 0x7fffd2e9bc00, stream = {handle = 0x7fffd2e9bc00, isatty = 0, mmap = {len = 3797, pos = 0, map = 0x0,\n            buf = 0x7ffff7fe5000 \"<?php\\n/*\\n * This file is part of PHPUnit.\\n *\\n * (c) Sebastian Bergmann <sebastian@phpunit.de>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed\"..., old_handle = 0x0, old_closer = 0x0}, reader = 0x555555775b60 <_php_stream_read>,\n          fsizer = 0x55555575bed0 <php_zend_stream_fsizer>, closer = 0x55555575beb0 <php_zend_stream_mmap_closer>}},\n      filename = 0x7ffff3877a18 \"/home/klay/projects/zephir/vendor/composer/../phpunit/phpunit/src/Framework/Constraint/IsIdentical.php\", opened_path = 0x7fffd2f04980,\n      type = ZEND_HANDLE_MAPPED, free_filename = 0 '\\000'}\n    tmp = {value = {lval = 0, dval = 0, counted = 0x0, str = 0x0, arr = 0x0, obj = 0x0, res = 0x0, ref = 0x0, ast = 0x0, zv = 0x0, ptr = 0x0, ce = 0x0, func = 0x0, ww = {w1 = 0,\n          w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 0, cache_slot = 0, lineno = 0,\n        num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n    retval = <optimized out>\n    opened_path = 0x0\n\n12 0x000055555582656a in zend_include_or_eval (inc_filename=0x7ffff3817870, type=2) at /usr/local/share/php/7.1.3/Zend/zend_execute.c:2846\n    new_op_array = 0x0\n    tmp_inc_filename = {value = {lval = 93824999953712, dval = 4.6355709198185646e-310, counted = 0x555555cb1530, str = 0x555555cb1530, arr = 0x555555cb1530, obj = 0x555555cb1530,\n        res = 0x555555cb1530, ref = 0x555555cb1530, ast = 0x555555cb1530, zv = 0x555555cb1530, ptr = 0x555555cb1530, ce = 0x555555cb1530, func = 0x555555cb1530, ww = {\n          w1 = 1439372592, w2 = 21845}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 32767,\n        cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}\n\n13 0x000055555586074f in ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:35461\n    new_op_array = <optimized out>\n\n14 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff3879580\n    orig_execute_data = 0x7ffff3817780\n\n15 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3817820\n    fbc = 0x7ffff3804998\n    object = <optimized out>\n    ret = 0x0\n\n16 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff3817780\n    orig_execute_data = 0x7fffffff9d00\n\n17 0x00005555557b1d6b in zend_call_function (fci=0x7ffff3817820, fci@entry=0x7fffffff9d00, fci_cache=fci_cache@entry=0x7fffffff9cd0)\nat /usr/local/share/php/7.1.3/Zend/zend_execute_API.c:846\n    call_via_handler = 0\n    current_opline_before_exception = 0x7ffff3909200\n    i = <optimized out>\n    dummy_execute_data = {opline = 0x7f, call = 0x5555557c9619 <zend_is_callable_ex+1545>, return_value = 0xf457f3e5, func = 0x0, This = {value = {lval = 140737488330240,\n          dval = 6.9533558065954924e-310, counted = 0x7fffffff9e00, str = 0x7fffffff9e00, arr = 0x7fffffff9e00, obj = 0x7fffffff9e00, res = 0x7fffffff9e00, ref = 0x7fffffff9e00,\n          ast = 0x7fffffff9e00, zv = 0x7fffffff9e00, ptr = 0x7fffffff9e00, ce = 0x7fffffff9e00, func = 0x7fffffff9e00, ww = {w1 = 4294942208, w2 = 32767}}, u1 = {v = {\n            type = 122 'z', type_flags = 84 'T', const_flags = 202 '\\312', reserved = 85 'U'}, type_info = 1439323258}, u2 = {next = 21845, cache_slot = 21845, lineno = 21845,\n          num_args = 21845, fe_pos = 21845, fe_iter_idx = 21845, access_flags = 21845, property_guard = 21845, extra = 21845}}, prev_execute_data = 0x100000000,\n      symbol_table = 0x0, run_time_cache = 0x0, literals = 0x0}\n    fci_cache_local = {initialized = 32 ' ', function_handler = 0x55555555aad8, calling_scope = 0x7fffffff9c14, called_scope = 0x7fffffff9ce0, object = 0x555555cabe20}\n    func = 0x7ffff3804658\n\n18 0x00005555557e0499 in zend_call_method (object=0x7ffff38be938, obj_ce=, fn_proxy=,\nfunction_name=0x7ffff38d07e8 \"composer\\\\autoload\\\\classloader::loadclass\\001\", function_name_len=<optimized out>, retval_ptr=retval_ptr@entry=0x0, param_count=1,\narg1=0x7ffff3817770, arg2=0x0) at /usr/local/share/php/7.1.3/Zend/zend_interfaces.c:99\n    fcic = {initialized = 1 '\\001', function_handler = 0x7ffff3804658, calling_scope = 0x7ffff3803480, called_scope = 0x7ffff3803480, object = 0x7ffff3871460}\n    result = <optimized out>\n    fci = {size = 56, function_name = {value = {lval = -1423372613111632128, dval = -2.6228844876967055e+213, counted = 0xec3f2a2654762f00, str = 0xec3f2a2654762f00,\n          arr = 0xec3f2a2654762f00, obj = 0xec3f2a2654762f00, res = 0xec3f2a2654762f00, ref = 0xec3f2a2654762f00, ast = 0xec3f2a2654762f00, zv = 0xec3f2a2654762f00,\n          ptr = 0xec3f2a2654762f00, ce = 0xec3f2a2654762f00, func = 0xec3f2a2654762f00, ww = {w1 = 1417031424, w2 = 3963562534}}, u1 = {v = {type = 0 '\\000',\n            type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 1, cache_slot = 1, lineno = 1, num_args = 1, fe_pos = 1,\n          fe_iter_idx = 1, access_flags = 1, property_guard = 1, extra = 1}}, retval = 0x7fffffff9cc0, params = 0x7fffffff9d40, object = 0x7ffff3871460, no_separation = 1 '\\001',\n      param_count = 1}\n    retval = {value = {lval = 140737488330720, dval = 6.9533558066192076e-310, counted = 0x7fffffff9fe0, str = 0x7fffffff9fe0, arr = 0x7fffffff9fe0, obj = 0x7fffffff9fe0,\n        res = 0x7fffffff9fe0, ref = 0x7fffffff9fe0, ast = 0x7fffffff9fe0, zv = 0x7fffffff9fe0, ptr = 0x7fffffff9fe0, ce = 0x7fffffff9fe0, func = 0x7fffffff9fe0, ww = {\n          w1 = 4294942688, w2 = 32767}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 21845,\n        cache_slot = 21845, lineno = 21845, num_args = 21845, fe_pos = 21845, fe_iter_idx = 21845, access_flags = 21845, property_guard = 21845, extra = 21845}}\n    params = {{value = {lval = 140737280698640, dval = 6.9533455482314373e-310, counted = 0x7ffff39f6910, str = 0x7ffff39f6910, arr = 0x7ffff39f6910, obj = 0x7ffff39f6910,\n          res = 0x7ffff39f6910, ref = 0x7ffff39f6910, ast = 0x7ffff39f6910, zv = 0x7ffff39f6910, ptr = 0x7ffff39f6910, ce = 0x7ffff39f6910, func = 0x7ffff39f6910, ww = {\n            w1 = 4087310608, w2 = 32767}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 6}, u2 = {next = 32767,\n          cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}, {value = {\n          lval = 2095129479199365139, dval = 1.2848007893634002e-168, counted = 0x1d1365292e209813, str = 0x1d1365292e209813, arr = 0x1d1365292e209813, obj = 0x1d1365292e209813,\n          res = 0x1d1365292e209813, ref = 0x1d1365292e209813, ast = 0x1d1365292e209813, zv = 0x1d1365292e209813, ptr = 0x1d1365292e209813, ce = 0x1d1365292e209813,\n          func = 0x1d1365292e209813, ww = {w1 = 773888019, w2 = 487810345}}, u1 = {v = {type = 19 '\\023', type_flags = 152 '\\230', const_flags = 252 '\\374', reserved = 1 '\\001'},\n          type_info = 33331219}, u2 = {next = 1212559830, cache_slot = 1212559830, lineno = 1212559830, num_args = 1212559830, fe_pos = 1212559830, fe_iter_idx = 1212559830,\n          access_flags = 1212559830, property_guard = 1212559830, extra = 1212559830}}}\n\n19 0x00005555556bdbbe in zif_spl_autoload_call (execute_data=, return_value=) at /usr/local/share/php/7.1.3/ext/spl/php_spl.c:420\n    pos = 0\n    num_idx = 2095129479117576211\n    l_autoload_running = <optimized out>\n    class_name = 0x7ffff3817770\n    lc_name = 0x7fffd2e6ae10\n    func_name = 0x7ffff38d07d0\n\n20 0x00005555557b1f73 in zend_call_function (fci=fci@entry=0x7fffffff9fa0, fci_cache=fci_cache@entry=0x7fffffff9f70) at /usr/local/share/php/7.1.3/Zend/zend_execute_API.c:862\n    call_via_handler = 0\n    i = <optimized out>\n    dummy_execute_data = {opline = 0x0, call = 0x0, return_value = 0x0, func = 0x0, This = {value = {lval = 140736731532376, dval = 6.9533184158129476e-310,\n          counted = 0x7fffd2e3cc58, str = 0x7fffd2e3cc58, arr = 0x7fffd2e3cc58, obj = 0x7fffd2e3cc58, res = 0x7fffd2e3cc58, ref = 0x7fffd2e3cc58, ast = 0x7fffd2e3cc58,\n          zv = 0x7fffd2e3cc58, ptr = 0x7fffd2e3cc58, ce = 0x7fffd2e3cc58, func = 0x7fffd2e3cc58, ww = {w1 = 3538144344, w2 = 32767}}, u1 = {v = {type = 0 '\\000',\n            type_flags = 0 '\\000', const_flags = 2 '\\002', reserved = 0 '\\000'}, type_info = 131072}, u2 = {next = 2, cache_slot = 2, lineno = 2, num_args = 2, fe_pos = 2,\n          fe_iter_idx = 2, access_flags = 2, property_guard = 2, extra = 2}}, prev_execute_data = 0x7ffff3817620, symbol_table = 0x1406, run_time_cache = 0x7fffd2ebd080,\n      literals = 0x7fffd2e3f000}\n    fci_cache_local = {initialized = 56 '8', function_handler = 0x4746454443424100, calling_scope = 0x4f4e4d4c4b4a4948, called_scope = 0x5756555453525150,\n      object = 0x5f00005c005a5958}\n    func = 0x555555c0e690\n\n21 0x00005555557b2311 in zend_lookup_class_ex (name=name@entry=0x7ffff39f6910, key=0x7fffd2e3f040, use_autoload=use_autoload@entry=1)\nat /usr/local/share/php/7.1.3/Zend/zend_execute_API.c:1019\n    ce = <optimized out>\n    args = {{value = {lval = 140737280698640, dval = 6.9533455482314373e-310, counted = 0x7ffff39f6910, str = 0x7ffff39f6910, arr = 0x7ffff39f6910, obj = 0x7ffff39f6910,\n          res = 0x7ffff39f6910, ref = 0x7ffff39f6910, ast = 0x7ffff39f6910, zv = 0x7ffff39f6910, ptr = 0x7ffff39f6910, ce = 0x7ffff39f6910, func = 0x7ffff39f6910, ww = {\n            w1 = 4087310608, w2 = 32767}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 6}, u2 = {next = 32767,\n          cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}}\n    local_retval = {value = {lval = 140737278735872, dval = 6.9533454512578134e-310, counted = 0x7ffff3817600, str = 0x7ffff3817600, arr = 0x7ffff3817600, obj = 0x7ffff3817600,\n        res = 0x7ffff3817600, ref = 0x7ffff3817600, ast = 0x7ffff3817600, zv = 0x7ffff3817600, ptr = 0x7ffff3817600, ce = 0x7ffff3817600, func = 0x7ffff3817600, ww = {\n          w1 = 4085347840, w2 = 32767}}, u1 = {v = {type = 1 '\\001', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 1}, u2 = {next = 32767,\n        cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767, property_guard = 32767, extra = 32767}}\n    lc_name = 0x7fffd2e0bd70\n    fcall_info = {size = 56, function_name = {value = {lval = 93824999286176, dval = 4.6355708868379041e-310, counted = 0x555555c0e5a0, str = 0x555555c0e5a0, arr = 0x555555c0e5a0,\n          obj = 0x555555c0e5a0, res = 0x555555c0e5a0, ref = 0x555555c0e5a0, ast = 0x555555c0e5a0, zv = 0x555555c0e5a0, ptr = 0x555555c0e5a0, ce = 0x555555c0e5a0,\n          func = 0x555555c0e5a0, ww = {w1 = 1438705056, w2 = 21845}}, u1 = {v = {type = 6 '\\006', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'},\n          type_info = 6}, u2 = {next = 32767, cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767,\n          property_guard = 32767, extra = 32767}}, retval = 0x7fffffff9f60, params = 0x7fffffff9fe0, object = 0x0, no_separation = 1 '\\001', param_count = 1}\n    fcall_cache = {initialized = 1 '\\001', function_handler = 0x555555c0e690, calling_scope = 0x0, called_scope = 0x0, object = 0x0}\n\n22 0x00005555557b2cc8 in zend_fetch_class_by_name (class_name=0x7ffff39f6910, key=, fetch_type=fetch_type@entry=512)\nat /usr/local/share/php/7.1.3/Zend/zend_execute_API.c:1454\n    ce = <optimized out>\n\n23 0x0000555555861877 in ZEND_NEW_SPEC_CONST_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:3199\n    result = <optimized out>\n    constructor = <optimized out>\n    ce = 0x0\n    call = <optimized out>\n\n24 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7fffd2e4cf80\n    orig_execute_data = 0x7ffff3817570\n\n25 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3817620\n    fbc = 0x7fffd2e2ec48\n    object = <optimized out>\n    ret = 0x0\n\n26 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff3817570\n    orig_execute_data = 0x7fffffffa2a0\n\n27 0x00005555557b1d6b in zend_call_function (fci=0x7ffff3817620, fci@entry=0x7fffffffa2a0, fci_cache=fci_cache@entry=0x7fffffffa270)\nat /usr/local/share/php/7.1.3/Zend/zend_execute_API.c:846\n    call_via_handler = 0\n    current_opline_before_exception = 0x7ffff3909200\n    i = <optimized out>\n    dummy_execute_data = {opline = 0x7ffff38b9640, call = 0x555555bc70e0 <executor_globals>, return_value = 0x7ffff39f01e0, func = 0x7fff00000000, This = {value = {\n          lval = 93824999657184, dval = 4.6355709051681349e-310, counted = 0x555555c68ee0, str = 0x555555c68ee0, arr = 0x555555c68ee0, obj = 0x555555c68ee0, res = 0x555555c68ee0,\n          ref = 0x555555c68ee0, ast = 0x555555c68ee0, zv = 0x555555c68ee0, ptr = 0x555555c68ee0, ce = 0x555555c68ee0, func = 0x555555c68ee0, ww = {w1 = 1439076064, w2 = 21845}},\n        u1 = {v = {type = 26 '\\032', type_flags = 183 '\\267', const_flags = 127 '\\177', reserved = 85 'U'}, type_info = 1434433306}, u2 = {next = 21845, cache_slot = 21845,\n          lineno = 21845, num_args = 21845, fe_pos = 21845, fe_iter_idx = 21845, access_flags = 21845, property_guard = 21845, extra = 21845}}, prev_execute_data = 0x555555c68ee0,\n      symbol_table = 0x555555c68ee0, run_time_cache = 0x7fffd2f04ab8, literals = 0xec3f2a2654762f00}\n    fci_cache_local = {initialized = 128 '\\200', function_handler = 0xec3f2a2654762f00, calling_scope = 0x7ffff39f0140, called_scope = 0x7fffd2e18f00, object = 0x7fffffffa250}\n    func = 0x7fffd2e3db50\n\n28 0x00005555556a8c84 in reflection_method_invoke (execute_data=, return_value=0x7ffff3817190, variadic=)\nat /usr/local/share/php/7.1.3/ext/reflection/php_reflection.c:3325\n    retval = {value = {lval = 140736731532376, dval = 6.9533184158129476e-310, counted = 0x7fffd2e3cc58, str = 0x7fffd2e3cc58, arr = 0x7fffd2e3cc58, obj = 0x7fffd2e3cc58,\n        res = 0x7fffd2e3cc58, ref = 0x7fffd2e3cc58, ast = 0x7fffd2e3cc58, zv = 0x7fffd2e3cc58, ptr = 0x7fffd2e3cc58, ce = 0x7fffd2e3cc58, func = 0x7fffd2e3cc58, ww = {\n          w1 = 3538144344, w2 = 32767}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'}, type_info = 0}, u2 = {next = 0,\n        cache_slot = 0, lineno = 0, num_args = 0, fe_pos = 0, fe_iter_idx = 0, access_flags = 0, property_guard = 0, extra = 0}}\n    params = 0x7ffff3873010\n    val = <optimized out>\n    object = 0x7ffff3817550\n    mptr = 0x7fffd2e3db50\n    i = <optimized out>\n    argc = 0\n    result = <optimized out>\n    fci = {size = 56, function_name = {value = {lval = 2, dval = 9.8813129168249309e-324, counted = 0x2, str = 0x2, arr = 0x2, obj = 0x2, res = 0x2, ref = 0x2, ast = 0x2,\n          zv = 0x2, ptr = 0x2, ce = 0x2, func = 0x2, ww = {w1 = 2, w2 = 0}}, u1 = {v = {type = 0 '\\000', type_flags = 0 '\\000', const_flags = 0 '\\000', reserved = 0 '\\000'},\n          type_info = 0}, u2 = {next = 32767, cache_slot = 32767, lineno = 32767, num_args = 32767, fe_pos = 32767, fe_iter_idx = 32767, access_flags = 32767,\n          property_guard = 32767, extra = 32767}}, retval = 0x7fffffffa260, params = 0x7ffff3873010, object = 0x7fffd2e96300, no_separation = 1 '\\001', param_count = 0}\n    fcc = {initialized = 1 '\\001', function_handler = 0x7fffd2e3db50, calling_scope = 0x7fffd2e3cc58, called_scope = 0x7fffd2e3cc58, object = 0x7fffd2e96300}\n    obj_ce = <optimized out>\n    param_array = 0x7ffff3817560\n\n29 0x0000555555863f2c in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:1099\n    call = 0x7ffff3817500\n    fbc = 0x555555c69cc0\n    object = <optimized out>\n    ret = <optimized out>\n\n30 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff39ea580\n    orig_execute_data = 0x7ffff3816860\n\n31 0x0000555555863ffe in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:1076\n    call = 0x7ffff3816fc0\n    fbc = 0x7ffff39b5c70\n    object = <optimized out>\n    ret = <optimized out>\n\n32 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7fffd2efef40\n    orig_execute_data = 0x7ffff3815dc0\n\n33 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3816860\n    fbc = 0x7ffff39b5ba0\n    object = <optimized out>\n    ret = 0x0\n\n34 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff39ef140\n    orig_execute_data = 0x7ffff3815340\n\n35 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3815dc0\n    fbc = 0x7fffd2eb9048\n    object = <optimized out>\n    ret = 0x0\n\n36 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7fffd2ec4560\n    orig_execute_data = 0x7ffff3814cb0\n\n37 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3815340\n    fbc = 0x7ffff39b5ad0\n    object = <optimized out>\n    ret = 0x0\n\n38 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff394f7a0\n    orig_execute_data = 0x7ffff3813690\n\n39 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff3814cb0\n    fbc = 0x7fffd2eaee20\n    object = <optimized out>\n    ret = 0x0\n\n40 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff38d4860\n    orig_execute_data = 0x7ffff3813280\n\n41 0x0000555555863ffe in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:1076\n    call = 0x7ffff3813690\n    fbc = 0x7ffff380d548\n    object = <optimized out>\n    ret = <optimized out>\n\n42 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff3879720\n    orig_execute_data = 0x7ffff38131b0\n\n43 0x0000555555863ffe in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:1076\n    call = 0x7ffff3813280\n    fbc = 0x7ffff3805368\n    object = <optimized out>\n    ret = <optimized out>\n\n44 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff3880700\n    orig_execute_data = 0x7ffff3813030\n\n45 0x000055555586446a in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:949\n    call = 0x7ffff38131b0\n    fbc = 0x7ffff3805298\n    object = <optimized out>\n    ret = 0x0\n\n46 0x000055555580b79b in execute_ex (ex=) at /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:429\n    orig_opline = 0x7ffff38710e0\n    orig_execute_data = 0x0\n\n47 0x00005555558665e0 in zend_execute (op_array=0x7ffff38710e0, op_array@entry=0x7ffff39f0440, return_value=return_value@entry=0x7ffff3816fc0)\nat /usr/local/share/php/7.1.3/Zend/zend_vm_execute.h:474\n\nNo locals.\n48 0x00005555557c1ff3 in zend_execute_scripts (type=type@entry=8, retval=0x7ffff3816fc0, retval@entry=0x0, file_count=file_count@entry=3)\nat /usr/local/share/php/7.1.3/Zend/zend.c:1476\n    files = <error reading variable files (Attempt to dereference a generic pointer.)>\n    i = 1\n    file_handle = 0x7fffffffcc80\n    op_array = 0x7ffff39f0440\n\n49 0x000055555575e530 in php_execute_script (primary_file=0x7fffffffcc80) at /usr/local/share/php/7.1.3/main/main.c:2537\n    realfile = \"/home/klay/projects/zephir/vendor/phpunit/phpunit/phpunit\\000\\000\\200\\322\\023\\352\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000P\\274\\377\\377\\377\\177\\000\\000\\275\\206M\\366\\377\\177\\000\\000@\\274\\377\\377\\377\\177\\000\\000\\200\\326\\023\\352\\377\\177\", '\\000' <repeats 82 times>, \"\\001\", '\\000' <repeats 19 times>...\n    __orig_bailout = 0x7fffffffccf0\n    __bailout = {{__jmpbuf = {0, 2095129480619137043, 93824999091840, 93824995854656, 1, 0, 2095129479910299667, 5207903061178882067}, __mask_was_saved = 0, __saved_mask = {\n          __val = {0, 18374780304672583168, 140737488337568, 93825000959488, 140737325649206, 0, 140737488336138, 72058139498774530, 93824999129600, 0, 93824999124992,\n            140737488337576, 140737351915855, 0, 25769803777, 0}}}}\n    prepend_file_p = 0x0\n    append_file_p = 0x0\n    prepend_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0},\n          reader = 0x0, fsizer = 0x0, closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    append_file = {handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0},\n          reader = 0x0, fsizer = 0x0, closer = 0x0}}, filename = 0x0, opened_path = 0x0, type = ZEND_HANDLE_FILENAME, free_filename = 0 '\\000'}\n    old_cwd = 0x7fffffffa7a0 \"\"\n    retval = 0\n\n50 0x0000555555868867 in do_cli (argc=8, argv=0x555555bdee10) at /usr/local/share/php/7.1.3/sapi/cli/php_cli.c:993\n    __orig_bailout = 0x7fffffffdea0\n    __bailout = {{__jmpbuf = {93824998874720, 2095129481292847123, 0, 0, 140737488346776, 0, 2095129480621234195, 5207904835326351379}, __mask_was_saved = 0, __saved_mask = {\n          __val = {93824995731825, 93824995731849, 93824995637310, 93824995637331, 93824995731862, 93824995731882, 93824995731899, 93824995732463, 93824995731920, 93824995731934,\n            93824995731956, 93824995731975, 93824995732002, 93824995732031, 0, 0}}}}\n    c = <optimized out>\n    file_handle = {handle = {fd = -209227760, fp = 0x7ffff3877010, stream = {handle = 0x7ffff3877010, isatty = 0, mmap = {len = 1307, pos = 0, map = 0x7ffff7fe5000,\n            buf = 0x7ffff7fe5013 \"le is part of PHPUnit.\\n *\\n * (c) Sebastian Bergmann <sebastian@phpunit.de>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source c\"..., old_handle = 0x5555560660e0, old_closer = 0x5555557df5b0 <zend_stream_stdio_closer>},\n          reader = 0x5555557df5e0 <zend_stream_stdio_reader>, fsizer = 0x5555557df530 <zend_stream_stdio_fsizer>, closer = 0x5555557df4b0 <zend_stream_mmap_closer>}},\n      filename = 0x555555bdee80 \"./vendor/bin/phpunit\", opened_path = 0x0, type = ZEND_HANDLE_MAPPED, free_filename = 0 '\\000'}\n    behavior = <optimized out>\n    reflection_what = 0x0\n    request_started = 1\n    exit_status = 0\n    php_optarg = 0x0\n    php_optind = 2\n    exec_direct = <optimized out>\n    exec_run = <optimized out>\n    exec_begin = <optimized out>\n    exec_end = <optimized out>\n    arg_free = <optimized out>\n    arg_excp = <optimized out>\n    script_file = <optimized out>\n    translated_path = 0x5555560678c0 \"/home/klay/projects/zephir/vendor/phpunit/phpunit/phpunit\"\n    lineno = 2\n    param_error = 0x0\n\n51 0x000055555563a94c in main (argc=8, argv=0x555555bdee10) at /usr/local/share/php/7.1.3/sapi/cli/php_cli.c:1381\n    __orig_bailout = 0x0\n    __bailout = {{__jmpbuf = {93824998874720, 2095129481292847123, 0, 0, 140737488346776, 0, 2095129481309100051, 5207902869876807699}, __mask_was_saved = 0, __saved_mask = {\n          __val = {0, 0, 0, 0, 0, 0, 0, 0, 140737488347016, 18446603336221204609, 140737488347007, 1136, 5085241283009, 142, 17, 1}}}}\n    c = <optimized out>\n    exit_status = 0\n    module_started = 1\n    sapi_started = 1\n    php_optarg = 0x0\n    php_optind = 1\n    use_extended_info = 0\n    ini_path_override = 0x0\n    ini_entries = 0x555555bdf1c0 \"html_errors=0\\nregister_argc_argv=1\\nimplicit_flush=1\\noutput_buffering=0\\nmax_execution_time=0\\nmax_input_time=-1\\n\"\n    ini_entries_len = 0\n    ini_ignore = 0\n    sapi_module = <optimized out>\n\n. **segfault**php\n    public function shouldCorrectHandleUseCaseWithExceptionOnMethodAssignment()\n    {\n        $t = new Exceptions();\n        $actual   = $t->testMemoryExceptionOnAssignment();\n    $this->assertSame(\"A\" , \"A\");\n}\n\n```\nOK\n```php\n    public function shouldCorrectHandleUseCaseWithExceptionOnMethodAssignment()\n    {\n        $t = new Exceptions();\n        $actual   = $t->testMemoryExceptionOnAssignment();\n    // $this->assertSame(\"A\" , \"A\");\n}\n\n```\nsegfault\n```php\n    public function shouldCorrectHandleUseCaseWithExceptionOnMethodAssignment()\n    {\n        $t = new Exceptions();\n    $actual   = $t->testMemoryExceptionOnAssignment();\n\n    ini_set('zend.assertions', 1);\n    assert(\"A\" == \"A\");\n}\n\n```\nOK\n```php\n    public function shouldCorrectHandleUseCaseWithExceptionOnMethodAssignment()\n    {\n        $t = new Exceptions();\n        $actual   = $t->testMemoryExceptionOnAssignment();\n    ini_set('zend.assertions', -1);\n    assert(\"A\" == \"A\");\n}\n\n```\nCc: @sjinks . Fixed in the master branch.. @sjinks I've refactored our test runner and main bootstrap. Could you take a look (75619398817657b837ea37ab78553e6827775b30).\nbash\n./unit-tests/phpunit --not-exit -c phpunit.xml.dist --debug unit-tests/. \ud83d\udc4d . Thank you!. @sjinks Should we submit this to the development branch?. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. Thank you!. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. Looks like something went wrong. At least for PHP 7.1 (ZTS): https://travis-ci.org/phalcon/cphalcon/jobs/220252922#L1882. Note: when you run tests separately there is no problem\n```\n$ vendor/bin/codecept run -vvv tests/unit/Mvc/ViewTest.php\nCodeception PHP Testing Framework v2.2.10\nPowered by PHPUnit 4.8.35 by Sebastian Bergmann and contributors.\nUnit Tests (24) ------------------------------------------------------------\nModules: Db, Asserts, Phalcon, Filesystem, \\Helper\\Unit\n\n\u2714 ViewTest: Get active render path (0.05s)\n\u2714 ViewTest: Get current render level (0.01s)\n\u2714 ViewTest: Get registered engines (0.00s)\n\u2714 ViewTest: Mustache engine (0.07s)\n\u2714 ViewTest: Twig engine (0.25s)\n\u2714 ViewTest: Mustache mixed engine (0.00s)\n\u2714 ViewTest: Twig mixed engine (0.01s)\n\u2714 ViewTest: Mustache mixed engine partials (0.01s)\n\u2714 ViewTest: Twig mixed engine partials (0.01s)\n\u2714 ViewTest: Override layout (0.00s)\n\u2714 ViewTest: Layout and pick (0.00s)\n\u2714 ViewTest: Missing partial (0.01s)\n\u2714 ViewTest: Exists (0.00s)\n\u2714 ViewTest: Standard render (0.02s)\n\u2714 ViewTest: Override main view (0.00s)\n\u2714 ViewTest: Rendering with partials (0.02s)\n\u2714 ViewTest: Get render (0.01s)\n\u2714 ViewTest: Setters and getters (0.00s)\n\u2714 ViewTest: View param isset (0.00s)\n\u2714 ViewTest: Disable levels (0.02s)\n\u2714 ViewTest: Cache di (1.02s)\n\u2714 ViewTest: View cache independency (0.01s)\n\u2714 ViewTest: View options (1.01s)\n\u2714 ViewTest: Issue12648 (0.01s)\n\nTime: 5.09 seconds, Memory: 8.00MB\n```\n$ php -v\nPHP 7.1.3 (cli) (built: Apr  9 2017 13:09:23) ( ZTS DEBUG )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.1.3, Copyright (c) 1999-2017, by Zend Technologies. \ud83d\udc4d . Thank you!. \ud83d\udc4d \n. How it works (I hope): https://github.com/phalcon/cphalcon/blob/master/phalcon/db/dialect/mysql.zep#L206. Thank you!. @Jurigag Could you please provide the git commit (SHA-1)?. I propose do release after closing this https://github.com/phalcon/zephir/pull/1479. Looks good to me. Awesome job man \ud83d\udc4d . Reverted. \ud83d\udc4d \n. \ud83d\udc4d . Implemented in the 0.11.x branch. Thank you. Fixed in the 0.10.11 version. Thank you for the report, and for helping us make Zephir better.. Refs:\n https://github.com/phalcon/cphalcon/issues/12056\n https://github.com/phalcon/cphalcon/issues/12803\n https://github.com/phalcon/cphalcon/issues/12791\n https://github.com/phalcon/cphalcon/issues/12110\n https://github.com/phalcon/cphalcon/issues/12065\n https://github.com/phalcon/cphalcon/issues/12329. @sjinks Could you please take a look. @php318 Could you change your code to:\n```diff\nnamespace XqKeji;\nclass Di\n{\n    private static _default;\npublic static function getInstance()\n{\n\n\nvar di\n\nlet di = self::_default;\n\n\nif !di {\n\nif typeof self::_default !== \"object\" {\nlet di = new self();\nlet self::_default = di;\nlet self::_default = new self();\n        }return self::_default;\n\n}\n}\n```\n\n\nand test it. / cc: @hakimio, @afbora . I'm going to solve this issue so I need code to reproduce guys. Could someone provide a worked (badly) example?. I need to locate problem. So it is too complex to use full framework to debug this. Actually I need an example as small as possible. Currently I'm working on PHP 7.3 support: https://github.com/phalcon/zephir/pull/1674. Next in my plans is https://github.com/phalcon/zephir/issues/1621. You will probably have to wait if no one will not fix this before.. @dreamsxin It seems we need you here. Could you please take a look. @dreamsxin You have to use Zephir 0.10.x for Phalcon 3.x and Zephir 0.11.x for Phalcon 4.x. This is why you get \"PHP Fatal error\" for Phalcon v3.4.0 using Zephir 0.11.x\nDid you use Thread-Safe extension with Apache ? It is important here. @dreamsxin Is there any chance that you will be able to use a Docker or any VM?. For Zephir code:\nzep\n    public function remove(string index)\n    {\n        unset _SESSION[index];\n    }\nthe following C-code was generated:\n```c\nPHP_METHOD(Test_Globals_Session_Base, remove) {\nzval *index_param = NULL, *_SESSION;\nzval *index = NULL;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 1, 0, &index_param);\n\nzephir_get_strval(index, index_param);\n\n\nzephir_array_unset(&_SESSION, index, PH_SEPARATE);\nZEPHIR_MM_RESTORE();\n\n}\n```\nWell, it should be:\n```diff\nPHP_METHOD(Test_Globals_Session_Base, remove) {\nzval *index_param = NULL, *_SESSION;\nzval *index = NULL;\n\nZEPHIR_MM_GROW();\n\n++  zephir_get_global(&_SESSION, SS(\"_SESSION\") TSRMLS_CC);\n    zephir_fetch_params(1, 1, 0, &index_param);\nzephir_get_strval(index, index_param);\n\n\nzephir_array_unset(&_SESSION, index, PH_SEPARATE);\nZEPHIR_MM_RESTORE();\n\n}\n```\nCc: @sjinks . @sarwarcse Did you use master or development branch? Could you please provide zephir version output. I'm not sure that this is Zephir issue. At least I managed to test this use case using different versions of PHP (#1543). I'm closing this issue because I can't to reproduce it. Feel free to add any relevant information if you believe that actually there is an issue.. @mruz Wich version / commit do you use. @mruz Is it still actual? Could you please provide the way to reproduce?. This issue was moved to phalcon/zephir-blog#1. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. Could you please provide script to reproduce, Zephir version (commit) and PHP version.. So var tmp = base64_decode(code); has the __FILE__, right?. Well, it is impossible for now to pass PHP code inside Zephir and then eval it with __FILE__.  I want to close this issue because I don't want a bunch of these lying around. If anyone wants to get started, I'd love that.. You can provide prototype. In the configuration file:\njson\n{\n    \"prototype-dir\": {\n        \"soap\": \"prototypes/soap\"\n    }\n}\nThen you will need to create the SoapClient stub.\nAnother way is to provide header files. Also see Extension Configuration File.. Actually there is no ability to import a static library.  I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. The issue is:\n```zep\nvar func = \"substr\";\nfunction_exists(\"substr\"); // TRUE\nfunction_exists(func); // FALSE\n```\nThis issue affected Zend Engine 3 only.. Fixed in the version 0.9.10. Thank you for contributing.. https://github.com/phalcon/zephir/issues/888. Thank you!. I'll do it today. @remicollet done https://github.com/phalcon/zephir/releases/tag/0.9.9. I'll try to sort out. Fixed in the development branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. We only accept bug reports, new feature requests and pull requests in GitHub. For questions regarding the usage of the Zephir, support requests, and questions like this please visit the official forums.. Actually there is no ability to get value using dynamic name. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. @shootzy Could you please provide PHP version (TS/NTS), OS and Zephir version. Test:\n```php\n<?php\nerror_reporting(-1);\n$test = new Test\\Memleak();\n$pattern = '|test|i';\n$subject = 'test';\nfor ($i = 0; $i < 100000; $i++) {\n    $test->match($pattern, $subject);\n}\necho 'Memory usage: ' . memory_get_usage() . PHP_EOL;\necho 'Memory peak usage: ' . memory_get_peak_usage() . PHP_EOL;\n```\nThe Code:\n```zep\nnamespace Test;\nclass Memleak\n{\n    public function match (var pattern, subject) -> int\n    {\n        var retval, matches;\n    let retval = preg_match(pattern, subject, matches);\n\n    return retval;\n}\n\n}\n```\nResult:\nMemory usage: 48378984\nMemory peack usage: 48379208\ndiff\n-       var retval, matches;\n+       var retval, matches = null;\nMemory usage: 378984\nMemory peack usage: 530848. Refs: https://github.com/phalcon/zephir/issues/487. I apologize @ilhansubasi for completely overlooking this. Thank you for your report. FYI: I'm not a Windows user so often I find it hard to understand how to reproduce the issue. But now I have a Windows system and I hope things will go better. Is the issue still actual for you? So thanks again for the report, and again I am sorry about the delay.. Could you please provide code to reproduce?. I'll try to sort out ASAP. Thank you!. Please provide steps to reproduce. What exactly happens to get dll. I want to close this issue because I don't want a bunch of these lying around. I'd like to know what happens on Windows too, but keeping the issue open doesn't answer to question and doesn't determine the real issue (if any). If anyone wants to get started to investigate, I'd love that. I propose to continue this discussion at the specialized forums dedicated to optimizing compilation PHP (and extensions) for Windows. Anyway your question is too abstract.. This is how zephir stubs works right now https://github.com/phalcon/ide-stubs/blob/master/src/Phalcon/mvc/Application.php#L56-L64\nClosing. Thank you for contributting. @AlexNDRmac There also some issue with variables like:\nZephir\nzep\nprotected tokenKeySessionID = \"$SOME/CSRF/KEY$\";\nNote: The generated stub should have code like:\nPHP\nphp\nprotected $tokenKeySessionID = '$SOME/CSRF/KEY$';\n\" => '. Fixed in the development branch. . Can you provide a bit more information and describe the error. From the README:\n\nFirst, you have to get Zephir Parser.. Fixed in the latest stable release. Feel free to open a new issue if the problem appears again. Thank you for contributing.. @erickmajor Which \"PHP code import\" do you mean? Could you please explain a bit more. Any examples and/or pseudo-code?. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. You have to install/enable xml extension:\nsh\nsudo apt-get install php7.0-xml. Can you check if you have all the deps installed?\n\n\ngcc\nmake\nautoconf\nautomake\npkg-config. @rodriguescr Which PHP version do you use?. \ud83e\udd14  interesting.. Actually as you can see there is no problem with building / compiling / testing. I have to dig in this a bit more.. @rodriguescr Could you please provide re2c version. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. @ninjapanzer Could you please provide compiler version?. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. @JABirchall  We don't add changes directly to stable branches or master. Could you please send this PR to the development branch?. Hm.. yes, we should update CONTRIBUTING.md too.. Thank you. @wisegoodvin Yes, there is no_GLOBALS support: https://github.com/phalcon/php-zephir-parser/blob/development/parser/scanner.re#L596-L637. Do we really need this in Zephir?. I want to close this issue because I don't want a bunch of these lying around. I'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. :) If anyone wants to get started, I'd love that.. Fixed in the latest stable release. Feel free to open a new issue if the problem appears again. Thank you for contributing.. This issue was moved to phalcon/php-zephir-parser#26. Thank you!. I'll try to sort out ASAP. @temuri416 I need complete script to reproduce. Send me a mail please. @temuri416 Is issue still actual?. There is no support yet for PHP 7.2. We'll plan to introduce 7.2 support in the Phalcon 4.0.0.. From @Fisiu on October 11, 2017 15:20\n\nI played around that issue. I build php-zephir-parser, invoked zephir compiler and passed generate option. Once C code has been generated, I tried to compile it and I get errors posted above.\nHowever, if I try to compile extension directly from build/php7/$arch directory \u2192 it succeeds.\nIn both cases I used the same toolchain with gcc 7.2.. Well, as I can see the first version of GCC 7.x was released on May 2, 2017. I did a little research and made sure that most of LTS OS don't use even the 6.x branch.  I'm sorry, but I want to close this issue for now. There are several reasons for this:\n\nThis issue is related to Zephir not Phalcon\nIt would be rash right now to waste time to solve this (not trivial) problem\nUsers always can have multiple versions of the compiler - it is not hard to install one more GCC (for example 5.x)\n\nI'd like to add support for anything/everything at some point, but keeping the issue open doesn't help that. If anyone wants to get started, I'd love that.\nThank you for contributing. @Fisiu Could you provide re2c --version output. Gotcha! \ud83d\ude04 \nTry downgrade re2c.\nFor example:\n$ re2c --version\nre2c 0.16. @Fisiu I've prepared a patch for Zephir Parser to work with re2c >= 1.0. Could you please reinstall Zephir Parser from development branch?. Fixed in the latest stable release of Zephir Parser. Feel free to open a new issue if the problem appears again. Thank you for the report, and for helping us make Zephir Parser better.. In fact, I'm aware of the problem root. This PR just debug, not solution. And I have all of required ;)\n$ ls -1 $(phpenv root)/versions/\n5.5.38-nts-debug\n5.6.31-nts-debug\n5.6.31-zts-debug\n7.0.25-nts-debug\n7.0.25-zts-debug\n7.1.11-nts-debug\n7.1.11-zts-debug\nsystem. Fixed in the development branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. @3amprogrammer Did you tried latest stable Phalcon? Also I need a Zephir version used to reproduce the issue.. @3amprogrammer any news?. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. https://github.com/phalcon/zephir/issues/304. Could you please provide versions:\n\nre2c\ngcc/clang\nmake\nautotools\nautoconf\nautomake\npkg-config\nZephir\nZephir Parser\n\nAnd second: Did you use Xcode?. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. Fixed in the development branch. Thank you for contributing. Variables are by default immutable. You have to use let:\nzep\nlet this->manager = manager;. @php318 Could you please provide PHP version, OS and Zephir version. This code:\nlet params = json_decode(json_encode(params), 1);\njust gets all public vars from the object (if any) because here params is var (any variable type) not just array. . For forum login issue please use https://github.com/phalcon/zephir/issues/1610. @pentagonal \nActually as workaround you can use something like that:\n```zep\nstring zero = \"0\";\narray itoA64 = [\".\", \"/\", zero, \"1\", \"2\", \"3\", \"4\", \"value\", \"OtherValue\"];\nvar pos = array_search(\"value\", itoA64);\n```\nI'll try to sort out as soon as I can. @pentagonal Could you please try development branch. /cc @niden . Fixed for now. Thank you for contributing. This issue was moved to phalcon/cphalcon#13206. Thank you. You have to install/enable Zephir Parser for CLI SAPI. Could you please provide output of:\nphp --ri \"Zephir Parser\". I'm sorry, I do not know Chinese. @chrysanthemum This PR has conflicts that should be resolved. Could you please rebase?. Thank you. @dreamsxin Another strange issue that seems to have always been. Could you please look at this. We plan to introduce this in in future. But now there is no way to run zephir code without php. @zacek Could you please explain a bit more. Is there any code example?. As I know @AlexNDRmac tries to sort out in these days.. Fixed here:\n\n0.11.6: https://github.com/phalcon/zephir/releases/tag/0.11.6\n0.10.13: https://github.com/phalcon/zephir/releases/tag/0.10.13\n\nThank you for the report, and for helping us make Zephir better.. @xEsk Could you please provide minimal code to reproduce. Fixed in the development branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. @mruz Could you please provide worked Zephir version / commit  . @mruz I was managed to reproduce this issue\nCode\n```zep\nnamespace Test\\Globals;\nclass Post {\n    public function hasValue(string name) -> boolean {\n        return isset _POST[name];\n    }\n}\n```\nTests\nThe $_POST superglobal exists:\n```php\n$post = new Post();\nvar_dump(isset($_POST)); // true\nvar_dump($post->hasValue('abc')); // false\n```\nThe $_POST superglobal does not exist exists:\n```php\n$post = new Post();\nunset($_POST);\nvar_dump(isset($_POST)); // false\nvar_dump($post->hasValue('abc'));\n/*\nPHP Fatal error:  Uncaught Exception: Invalid superglobal in /home/klay/workspace/c/zephir/manual.php:23\nStack trace:\n0 /home/klay/workspace/c/zephir/manual.php(23): Test\\Globals\\Post->hasValue('abc')\n1 {main}\nthrown in /home/klay/workspace/c/zephir/manual.php on line 23\nFatal error: Uncaught Exception: Invalid superglobal in /home/klay/workspace/c/zephir/manual.php:23\nStack trace:\n0 /home/klay/workspace/c/zephir/manual.php(23): Test\\Globals\\Post->hasValue('abc')\n1 {main}\nthrown in /home/klay/workspace/c/zephir/manual.php on line 23\n*/\n```\nGenerated code for PHP 7.2.1\n```c\nPHP_METHOD(Test_Globals_Post, hasValue) {\nzval *name_param = NULL, *_POST;\nzval name;\nzval *this_ptr = getThis();\n\nZVAL_UNDEF(&name);\n\nZEPHIR_MM_GROW();\nzephir_get_global(&_POST, SL(\"_POST\"));\nif (!_POST) {\n    ZEPHIR_THROW_EXCEPTION_STR(zend_exception_get_default(), \"Invalid superglobal\");\n    return;\n}\nzephir_fetch_params(1, 1, 0, &name_param);\n\nzephir_get_strval(&name, name_param);\n\n\nRETURN_MM_BOOL(zephir_array_isset(_POST, &name));\n\n}\n```\n. @mruz Well, there is no $_POST superglobal. Should we trigger E_USER_NOTICE instead?. /cc @hufersil @phalcon/zephir-team . @mruz\n\nThis is a 'superglobal', or automatic global, variable. This simply means that it is available in all scopes throughout a script.\n\nIn PHP but not in Zephir. Anyway even for PHP it is untruth as you can see:\n```php\nisset($_POST); // true\nunset($_POST);\nisset($_POST); // false\n```\nJust created a small workaround #1630. Could you please take a look? . Fixed in the development branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. @ger-hard Could you please provide code to reproduce?. @ger-hard Is there any code to reproduce that? :). @flyingangel Why do we need transform particular data type to another one? At least using such unobvious way. As I know there is no issue when we use var ch; (variable data type). Right?. @mruz Fixed. Take a look at tests :). I'll fix AppVeyor builds a bit later. Closing, this is implemented.. Well, how about empty(str) ?. Closed in favor of https://github.com/phalcon/zephir/issues/1323. @symfonyluxury We'll need a PHP script to reproduce. Also please provide Zephir code. And lastly do you see the same results on PHP 7.x ?\n. Usually we use valgrind for that https://github.com/phalcon/zephir/blob/development/.travis.yml#L91-L102 to detect the memory leak.. Yes, but all of this - Zend Engine and / or PHP leaks. There is no Zephir functions. Also ??? in the report means that you're use non-development version of the PHP.. Thank you!. Thank you. Fixed in the development branch.. Thank you!. @zhangyaohui1986 The phalcon7 is not an official Phalcon Framework. Just disable it or create your own phalcon7.php optimizer. Thank you!. Thank you. /cc @phalcon/zephir-team . Hello @danhunsaker,\nThank you for raising this issue. Sorry it took this long.\nThe meaning of export is too extensive. First I want to understand exactly what do you mean saying zephir export something. I'm afraid that your opinion about the whole language results from using specific tools  for your tasks. For example, the zephir stubs (the IDE stubs generation tool) command could lead you up the path. Could you please elaborate on that.\nAlso I want to say you that we have an old branch where we (@andresgutierrez) started work on strict type hinting: https://github.com/phalcon/zephir/tree/strict-type-hints. So you can get some ideas from it. Additionally, I'd like to see in such fundamental issues some code examples, like \"this is how it works currently...\" and \"this is how it could work ....\". Unfortunately, we can't give you the correct feedback without your code examples or/and prototypes (what you expect to get as a result).\nAnswering your first question, I'd like to say that actually there are at least three patterns to create programs using Zephir. Right now you can use:\nzephir\npublic function hello (name) -> string {\n    return \"Hello \" . name;\n}\nor \nzephir\npublic function hello (string name) -> string {\n    return \"Hello \" . name;\n}\nor even\nzephir\npublic function hello (string! name) -> string {\n    return \"Hello \" . name;\n}\nTake a look at last example. I used the strict type hinting here. It works for now. Zephir will throw an exception if passed type does not match expected type. The developer would see (most likely) this error on compiling time. Please note, I'd like the developers to have the possibility to use generics in case of demand. I'd like to show you one more example which vividly demonstrates the feature that is still absent in PHP but present in Zephir for many years:\n```zephir\npublic function hello (string! name) -> string {\n    var eventsManager, dependencyInjector;\nlet eventsManager = <ManagerInterface> this->eventsManager;\nlet dependencyInjector = <DiInterface> this->getDI();\n\n// ...\nreturn \"Hello \" . name;\n\n}\n```\nPlease note we hint the compiler of the expected data types. Should we design the feature to cast (automatic coerce) some type to the desired? I'm no sure. Zephir still does not have all features we want to see in it. Partially this is so because we don't develop Zephir for the full working day.\nMay be we should hurry up with Zephir frontend refactoring (that is to rewrite it from PHP to C++ or Rust) (https://github.com/zephir-lang/zephir/issues/1). I'm planning to move the greater part of the language to the shared library (https://github.com/zephir-lang/libzephir). This would allow us to integrate Zephir into many third party applications, e.g. IDEs and Language Servers.\nSo, as you can see there are a much of important work. And what you are proposing is too abstract for me. Try to explain the issue more specifically, maybe on a concrete example. I'm sorry, frankly speaking I don't understand the problem now.\n/cc @nevernet, @lividgreen, @AlexNDRmac. Got it :) Well, we can drop any old macro of course. Many of the things we use were chosen solely because of compatibility with Zend Engine 2.x. But as you know we plan to drop support of PHP 5. So yes, we can improve type control through the introduction of specialized ZE macros. This work should lead to the release of the major version. I'm still not sure about Zephir 1.0.0 but anyway we should get rid of PHP 5.x. Could you send PR so that we can review proposed approach and tests?. Right now there is Zephir's type checking with using the ! sign. We can completely rely on ZE type checking with using PHP >= 7.0. But note, in this case we'll may need to drop our type checking to avoid doing this work twice. There are also some types like uint, ulong, char, etc which do not exist in ZE, so we'll need to sort out with these types. I'm not against the introduction any ZE3 macros to avoid redundant or not obvious behavior in Zephir or to provide strict type checking in userspace. But I would not like to lose the possibility to have functions strict to their types directly in Zephir. Let's imagine that we call one function from another directly in Zephir.\nCan we have something like this:\n\n\nUsing ZEND_ARG_INFO.\n    zephir\n    public function hello (name) -> string\n\n\nUsing ZEND_ARG_TYPE_INFO allowing PHP to coerce the value to the desired type. Also note, in this case Zephir already tries to coerce the value to the desired type.\n    zephir\n    public function hello (string name) -> string\n\n\nUsing ZEND_ARG_TYPE_INFO allowing PHP to coerce the value to the desired type, but we should still receive an exception here in case of type mismatches. We can throw an exception on our own as we did this before, or allow to throw an exception the Zend Engine.\n    zephir\n    public function hello (string! name) -> string. @danhunsaker \nI just compiled current Phalcon using commands from the phalcon/cphalcon project root as follows:\nshell\nzephir fullclean\nzephir generate\ncd ./build\n./install\nPHP version\nPHP 7.2.1 (cli) (built: Feb  8 2018 17:01:26) ( NTS DEBUG )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.2.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.2.1, Copyright (c) 1999-2017, by Zend Technologies\n    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans\n\n\nPhalcon version\nThe 3.4.x branch\nGit Commit 3513faca14fa4d8e2e0f5f0650fa842b827f679a\nZephir version\nThe development branch\nGit Commit: 1e930a53f015561b05914714bd691f5601f75343\nSo something went wrong:\n```shell\n$ php -v\nPHP Fatal error:  Declaration of Phalcon\\Forms\\Element::getAttribute(string $attribute, $defaultValue = NULL) must be compatible with Phalcon\\Forms\\ElementInterface::getAttribute($attribute, $defaultValue = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Forms\\Element::getAttribute(string $attribute, $defaultValue = NULL) must be compatible with Phalcon\\Forms\\ElementInterface::getAttribute($attribute, $defaultValue = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Forms\\Element::clear(): Phalcon\\Forms\\Element must be compatible with Phalcon\\Forms\\ElementInterface::clear(): Phalcon\\Forms\\ElementInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Forms\\Element::clear(): Phalcon\\Forms\\Element must be compatible with Phalcon\\Forms\\ElementInterface::clear(): Phalcon\\Forms\\ElementInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend::stop(?bool $stopBuffer = NULL) must be compatible with Phalcon\\Cache\\BackendInterface::stop($stopBuffer = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend::stop(?bool $stopBuffer = NULL) must be compatible with Phalcon\\Cache\\BackendInterface::stop($stopBuffer = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData::readMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, int $index) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::readMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, $index) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData::readMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, int $index) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::readMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, $index) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData::writeMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, int $index, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::writeMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, $index, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData::writeMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, int $index, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::writeMetaDataIndex(Phalcon\\Mvc\\ModelInterface $model, $index, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData::readColumnMapIndex(Phalcon\\Mvc\\ModelInterface $model, int $index) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::readColumnMapIndex(Phalcon\\Mvc\\ModelInterface $model, $index) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData::readColumnMapIndex(Phalcon\\Mvc\\ModelInterface $model, int $index) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::readColumnMapIndex(Phalcon\\Mvc\\ModelInterface $model, $index) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter::limit(string $sqlQuery, int $number): string must be compatible with Phalcon\\Db\\AdapterInterface::limit($sqlQuery, $number) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter::limit(string $sqlQuery, int $number): string must be compatible with Phalcon\\Db\\AdapterInterface::limit($sqlQuery, $number) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter::createView(string $viewName, array $definition, $schemaName = NULL): bool must be compatible with Phalcon\\Db\\AdapterInterface::createView(string $viewName, array $definition, ?string $schemaName = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter::createView(string $viewName, array $definition, $schemaName = NULL): bool must be compatible with Phalcon\\Db\\AdapterInterface::createView(string $viewName, array $definition, ?string $schemaName = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index must be compatible with Phalcon\\Db\\AdapterInterface::describeIndexes(string $table, ?string $schema = NULL): Phalcon\\Db\\IndexInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index must be compatible with Phalcon\\Db\\AdapterInterface::describeIndexes(string $table, ?string $schema = NULL): Phalcon\\Db\\IndexInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\Reference must be compatible with Phalcon\\Db\\AdapterInterface::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\ReferenceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\Reference must be compatible with Phalcon\\Db\\AdapterInterface::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\ReferenceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Adapter::regenerateId(?bool $deleteOldSession = NULL): Phalcon\\Session\\Adapter must be compatible with Phalcon\\Session\\AdapterInterface::regenerateId(?bool $deleteOldSession = NULL): Phalcon\\Session\\AdapterInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Adapter::regenerateId(?bool $deleteOldSession = NULL): Phalcon\\Session\\Adapter must be compatible with Phalcon\\Session\\AdapterInterface::regenerateId(?bool $deleteOldSession = NULL): Phalcon\\Session\\AdapterInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::setType(string $type): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setType(string $type): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::setType(string $type): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setType(string $type): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::getType() must be compatible with Phalcon\\Assets\\ResourceInterface::getType(): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::getType() must be compatible with Phalcon\\Assets\\ResourceInterface::getType(): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::setFilter(bool $filter): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setFilter(bool $filter): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::setFilter(bool $filter): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setFilter(bool $filter): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::getFilter() must be compatible with Phalcon\\Assets\\ResourceInterface::getFilter(): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::getFilter() must be compatible with Phalcon\\Assets\\ResourceInterface::getFilter(): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::setAttributes(array $attributes): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setAttributes(array $attributes): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::setAttributes(array $attributes): Phalcon\\Assets\\Inline must be compatible with Phalcon\\Assets\\ResourceInterface::setAttributes(array $attributes): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Inline::getAttributes() must be compatible with Phalcon\\Assets\\ResourceInterface::getAttributes(): ?null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Inline::getAttributes() must be compatible with Phalcon\\Assets\\ResourceInterface::getAttributes(): ?null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Resource::setType(string $type): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setType(string $type): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Resource::setType(string $type): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setType(string $type): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Resource::setFilter(bool $filter): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setFilter(bool $filter): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Resource::setFilter(bool $filter): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setFilter(bool $filter): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Resource::getFilter(): null must be compatible with Phalcon\\Assets\\ResourceInterface::getFilter(): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Resource::getFilter(): null must be compatible with Phalcon\\Assets\\ResourceInterface::getFilter(): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Assets\\Resource::setAttributes(array $attributes): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setAttributes(array $attributes): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Assets\\Resource::setAttributes(array $attributes): Phalcon\\Assets\\Resource must be compatible with Phalcon\\Assets\\ResourceInterface::setAttributes(array $attributes): Phalcon\\Assets\\ResourceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di::offsetExists(string $name): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di::offsetExists(string $name): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di::offsetGet(string $name): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di::offsetGet(string $name): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di::offsetSet(string $name, $definition): bool must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di::offsetSet(string $name, $definition): bool must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di::offsetUnset(string $name): bool must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di::offsetUnset(string $name): bool must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Image\\Adapter::text(string $text, $offsetX = NULL, $offsetY = NULL, ?int $opacity = NULL, ?string $color = NULL, ?int $size = NULL, ?string $fontfile = NULL): Phalcon\\Image\\Adapter must be compatible with Phalcon\\Image\\AdapterInterface::text(string $text, ?int $offsetX = NULL, ?int $offsetY = NULL, ?int $opacity = NULL, ?string $color = NULL, ?int $size = NULL, ?string $fontfile = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Image\\Adapter::text(string $text, $offsetX = NULL, $offsetY = NULL, ?int $opacity = NULL, ?string $color = NULL, ?int $size = NULL, ?string $fontfile = NULL): Phalcon\\Image\\Adapter must be compatible with Phalcon\\Image\\AdapterInterface::text(string $text, ?int $offsetX = NULL, ?int $offsetY = NULL, ?int $opacity = NULL, ?string $color = NULL, ?int $size = NULL, ?string $fontfile = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset::seek(int $position) must be compatible with SeekableIterator::seek($position) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset::seek(int $position) must be compatible with SeekableIterator::seek($position) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetExists(int $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetExists(int $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetGet(int $index): Phalcon\\Mvc\\ModelInterface must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetGet(int $index): Phalcon\\Mvc\\ModelInterface must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetUnset(int $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset::offsetUnset(int $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\View\\Engine::getContent(): string must be compatible with Phalcon\\Mvc\\View\\EngineInterface::getContent(): null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\View\\Engine::getContent(): string must be compatible with Phalcon\\Mvc\\View\\EngineInterface::getContent(): null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Acl\\Adapter::getActiveRole(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveRole(): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Acl\\Adapter::getActiveRole(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveRole(): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Acl\\Adapter::getActiveResource(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveResource(): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Acl\\Adapter::getActiveResource(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveResource(): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Acl\\Adapter::getActiveAccess(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveAccess(): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Acl\\Adapter::getActiveAccess(): null must be compatible with Phalcon\\Acl\\AdapterInterface::getActiveAccess(): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Acl\\Adapter\\Memory::isAllowed($roleName, $resourceName, string $access, ?array $parameters = NULL): bool must be compatible with Phalcon\\Acl\\AdapterInterface::isAllowed($roleName, $resourceName, $access, ?array $parameters = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Acl\\Adapter\\Memory::isAllowed($roleName, $resourceName, string $access, ?array $parameters = NULL): bool must be compatible with Phalcon\\Acl\\AdapterInterface::isAllowed($roleName, $resourceName, $access, ?array $parameters = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Annotations\\Factory::load($config): Phalcon\\Annotations\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Annotations\\Factory::load($config): Phalcon\\Annotations\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apc::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apc::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apc::delete(string $keyName): bool must be compatible with Phalcon\\Cache\\BackendInterface::delete($keyName) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apc::delete(string $keyName): bool must be compatible with Phalcon\\Cache\\BackendInterface::delete($keyName) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apc::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apc::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apcu::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apcu::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apcu::delete(string $keyName): bool must be compatible with Phalcon\\Cache\\BackendInterface::delete($keyName) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apcu::delete(string $keyName): bool must be compatible with Phalcon\\Cache\\BackendInterface::delete($keyName) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Apcu::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Apcu::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Factory::load($config): Phalcon\\Cache\\BackendInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Factory::load($config): Phalcon\\Cache\\BackendInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\File::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\File::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\File::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\File::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\File::exists($keyName = NULL, ?int $lifetime = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::exists($keyName = NULL, $lifetime = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\File::exists($keyName = NULL, ?int $lifetime = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::exists($keyName = NULL, $lifetime = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Libmemcached::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Libmemcached::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Libmemcached::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Libmemcached::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Memcache::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Memcache::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Memcache::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Memcache::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Memory::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Memory::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Memory::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Memory::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Mongo::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Mongo::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Mongo::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Mongo::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Redis::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Redis::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Redis::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Redis::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Xcache::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Xcache::save($keyName = NULL, $content = NULL, $lifetime = NULL, ?bool $stopBuffer = NULL): bool must be compatible with Phalcon\\Cache\\BackendInterface::save($keyName = NULL, $content = NULL, $lifetime = NULL, $stopBuffer = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Backend\\Xcache::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Backend\\Xcache::queryKeys(?string $prefix = NULL): null must be compatible with Phalcon\\Cache\\BackendInterface::queryKeys($prefix = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Cache\\Frontend\\Factory::load($config): Phalcon\\Cache\\FrontendInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Cache\\Frontend\\Factory::load($config): Phalcon\\Cache\\FrontendInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Config\\Factory::load($config): Phalcon\\Config must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Config\\Factory::load($config): Phalcon\\Config must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Crypt::setCipher(string $cipher): Phalcon\\Crypt must be compatible with Phalcon\\CryptInterface::setCipher(string $cipher): Phalcon\\CryptInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Crypt::setCipher(string $cipher): Phalcon\\Crypt must be compatible with Phalcon\\CryptInterface::setCipher(string $cipher): Phalcon\\CryptInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Crypt::setKey(string $key): Phalcon\\Crypt must be compatible with Phalcon\\CryptInterface::setKey(string $key): Phalcon\\CryptInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Crypt::setKey(string $key): Phalcon\\Crypt must be compatible with Phalcon\\CryptInterface::setKey(string $key): Phalcon\\CryptInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Crypt::encrypt(string $text, ?string $key = NULL): string must be compatible with Phalcon\\CryptInterface::encrypt(string $text, $key = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Crypt::encrypt(string $text, ?string $key = NULL): string must be compatible with Phalcon\\CryptInterface::encrypt(string $text, $key = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Factory::load($config): Phalcon\\Db\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Factory::load($config): Phalcon\\Db\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\IndexInterface must be compatible with Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\IndexInterface must be compatible with Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeIndexes($table, $schema = NULL): Phalcon\\Db\\IndexInterface must be compatible with Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeIndexes($table, $schema = NULL): Phalcon\\Db\\IndexInterface must be compatible with Phalcon\\Db\\Adapter::describeIndexes(string $table, $schema = NULL): Phalcon\\Db\\Index in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeReferences($table, $schema = NULL): Phalcon\\Db\\ReferenceInterface must be compatible with Phalcon\\Db\\Adapter::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\Reference in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeReferences($table, $schema = NULL): Phalcon\\Db\\ReferenceInterface must be compatible with Phalcon\\Db\\Adapter::describeReferences(string $table, ?string $schema = NULL): Phalcon\\Db\\Reference in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\AdapterInterface::describeColumns(string $table, ?string $schema = NULL): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Column::__set_state(array $data): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\ColumnInterface::__set_state(array $data): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Column::__set_state(array $data): Phalcon\\Db\\Column must be compatible with Phalcon\\Db\\ColumnInterface::__set_state(array $data): Phalcon\\Db\\ColumnInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Index::__set_state(array $data): Phalcon\\Db\\Index must be compatible with Phalcon\\Db\\IndexInterface::__set_state(array $data): Phalcon\\Db\\IndexInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Index::__set_state(array $data): Phalcon\\Db\\Index must be compatible with Phalcon\\Db\\IndexInterface::__set_state(array $data): Phalcon\\Db\\IndexInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Reference::__set_state(array $data): Phalcon\\Db\\Reference must be compatible with Phalcon\\Db\\ReferenceInterface::__set_state(array $data): Phalcon\\Db\\ReferenceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Reference::__set_state(array $data): Phalcon\\Db\\Reference must be compatible with Phalcon\\Db\\ReferenceInterface::__set_state(array $data): Phalcon\\Db\\ReferenceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Result\\Pdo::dataSeek(int $number) must be compatible with Phalcon\\Db\\ResultInterface::dataSeek($number) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Result\\Pdo::dataSeek(int $number) must be compatible with Phalcon\\Db\\ResultInterface::dataSeek($number) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Db\\Result\\Pdo::setFetchMode(int $fetchMode, $colNoOrClassNameOrObject = NULL, $ctorargs = NULL): bool must be compatible with Phalcon\\Db\\ResultInterface::setFetchMode($fetchMode): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Result\\Pdo::setFetchMode(int $fetchMode, $colNoOrClassNameOrObject = NULL, $ctorargs = NULL): bool must be compatible with Phalcon\\Db\\ResultInterface::setFetchMode($fetchMode): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di\\Service::setParameter(int $position, array $parameter): Phalcon\\Di\\Service must be compatible with Phalcon\\Di\\ServiceInterface::setParameter(int $position, array $parameter): Phalcon\\Di\\ServiceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di\\Service::setParameter(int $position, array $parameter): Phalcon\\Di\\Service must be compatible with Phalcon\\Di\\ServiceInterface::setParameter(int $position, array $parameter): Phalcon\\Di\\ServiceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Di\\Service::__set_state(array $attributes): Phalcon\\Di\\Service must be compatible with Phalcon\\Di\\ServiceInterface::__set_state(array $attributes): Phalcon\\Di\\ServiceInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di\\Service::__set_state(array $attributes): Phalcon\\Di\\Service must be compatible with Phalcon\\Di\\ServiceInterface::__set_state(array $attributes): Phalcon\\Di\\ServiceInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::setEncoding(string $encoding) must be compatible with Phalcon\\EscaperInterface::setEncoding($encoding) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::setEncoding(string $encoding) must be compatible with Phalcon\\EscaperInterface::setEncoding($encoding) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::setHtmlQuoteType(int $quoteType) must be compatible with Phalcon\\EscaperInterface::setHtmlQuoteType($quoteType) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::setHtmlQuoteType(int $quoteType) must be compatible with Phalcon\\EscaperInterface::setHtmlQuoteType($quoteType) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::escapeHtml(string $text): string must be compatible with Phalcon\\EscaperInterface::escapeHtml($text) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::escapeHtml(string $text): string must be compatible with Phalcon\\EscaperInterface::escapeHtml($text) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::escapeHtmlAttr(string $attribute): string must be compatible with Phalcon\\EscaperInterface::escapeHtmlAttr($text) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::escapeHtmlAttr(string $attribute): string must be compatible with Phalcon\\EscaperInterface::escapeHtmlAttr($text) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::escapeCss(string $css): string must be compatible with Phalcon\\EscaperInterface::escapeCss($css) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::escapeCss(string $css): string must be compatible with Phalcon\\EscaperInterface::escapeCss($css) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::escapeJs(string $js): string must be compatible with Phalcon\\EscaperInterface::escapeJs($js) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::escapeJs(string $js): string must be compatible with Phalcon\\EscaperInterface::escapeJs($js) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Escaper::escapeUrl(string $url): string must be compatible with Phalcon\\EscaperInterface::escapeUrl($url) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Escaper::escapeUrl(string $url): string must be compatible with Phalcon\\EscaperInterface::escapeUrl($url) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Events\\Event::getType(): string must be compatible with Phalcon\\Events\\EventInterface::getType(): null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Events\\Event::getType(): string must be compatible with Phalcon\\Events\\EventInterface::getType(): null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Filter::add(string $name, $handler): Phalcon\\Filter must be compatible with Phalcon\\FilterInterface::add(string $name, $handler): Phalcon\\FilterInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Filter::add(string $name, $handler): Phalcon\\Filter must be compatible with Phalcon\\FilterInterface::add(string $name, $handler): Phalcon\\FilterInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Flash\\Session::message(string $type, string $message) must be compatible with Phalcon\\FlashInterface::message(string $type, $message) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Flash\\Session::message(string $type, string $message) must be compatible with Phalcon\\FlashInterface::message(string $type, $message) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Request::hasFiles(?bool $onlySuccessful = NULL): int must be compatible with Phalcon\\Http\\RequestInterface::hasFiles($onlySuccessful = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Request::hasFiles(?bool $onlySuccessful = NULL): int must be compatible with Phalcon\\Http\\RequestInterface::hasFiles($onlySuccessful = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Request::getUploadedFiles(?bool $onlySuccessful = NULL): Phalcon\\Http\\Request\\File must be compatible with Phalcon\\Http\\RequestInterface::getUploadedFiles(?bool $onlySuccessful = NULL): Phalcon\\Http\\Request\\FileInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Request::getUploadedFiles(?bool $onlySuccessful = NULL): Phalcon\\Http\\Request\\File must be compatible with Phalcon\\Http\\RequestInterface::getUploadedFiles(?bool $onlySuccessful = NULL): Phalcon\\Http\\Request\\FileInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setStatusCode(int $code, ?string $message = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setStatusCode(int $code, ?string $message = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setStatusCode(int $code, ?string $message = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setStatusCode(int $code, ?string $message = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setHeader(string $name, $value): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setHeader(string $name, $value): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setHeader(string $name, $value): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setHeader(string $name, $value): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setRawHeader(string $header): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setRawHeader(string $header): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setRawHeader(string $header): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setRawHeader(string $header): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::resetHeaders(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::resetHeaders(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::resetHeaders(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::resetHeaders(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setExpires(DateTime $datetime): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setExpires(DateTime $datetime): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setExpires(DateTime $datetime): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setExpires(DateTime $datetime): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setNotModified(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setNotModified(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setNotModified(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setNotModified(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setContentType(string $contentType, $charset = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContentType(string $contentType, $charset = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setContentType(string $contentType, $charset = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContentType(string $contentType, $charset = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setContentLength(int $contentLength): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContentLength(int $contentLength): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setContentLength(int $contentLength): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContentLength(int $contentLength): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::redirect($location = NULL, ?bool $externalRedirect = NULL, ?int $statusCode = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::redirect($location = NULL, ?bool $externalRedirect = NULL, ?int $statusCode = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::redirect($location = NULL, ?bool $externalRedirect = NULL, ?int $statusCode = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::redirect($location = NULL, ?bool $externalRedirect = NULL, ?int $statusCode = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setContent(string $content): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContent(string $content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setContent(string $content): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setContent(string $content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setJsonContent($content, ?int $jsonOptions = NULL, ?int $depth = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setJsonContent($content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setJsonContent($content, ?int $jsonOptions = NULL, ?int $depth = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setJsonContent($content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::appendContent($content): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::appendContent($content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::appendContent($content): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::appendContent($content): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::sendHeaders(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::sendHeaders(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::sendHeaders(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::sendHeaders(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::sendCookies(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::sendCookies(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::sendCookies(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::sendCookies(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::send(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::send(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::send(): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::send(): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response::setFileToSend(string $filePath, $attachmentName = NULL, $attachment = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setFileToSend(string $filePath, $attachmentName = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response::setFileToSend(string $filePath, $attachmentName = NULL, $attachment = NULL): Phalcon\\Http\\Response must be compatible with Phalcon\\Http\\ResponseInterface::setFileToSend(string $filePath, $attachmentName = NULL): Phalcon\\Http\\ResponseInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response\\Cookies::useEncryption(bool $useEncryption): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::useEncryption(bool $useEncryption): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response\\Cookies::useEncryption(bool $useEncryption): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::useEncryption(bool $useEncryption): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response\\Cookies::set(string $name, $value = NULL, ?int $expire = NULL, ?string $path = NULL, ?bool $secure = NULL, ?string $domain = NULL, ?bool $httpOnly = NULL): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::set(string $name, $value = NULL, ?int $expire = NULL, ?string $path = NULL, ?bool $secure = NULL, ?string $domain = NULL, ?bool $httpOnly = NULL): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response\\Cookies::set(string $name, $value = NULL, ?int $expire = NULL, ?string $path = NULL, ?bool $secure = NULL, ?string $domain = NULL, ?bool $httpOnly = NULL): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::set(string $name, $value = NULL, ?int $expire = NULL, ?string $path = NULL, ?bool $secure = NULL, ?string $domain = NULL, ?bool $httpOnly = NULL): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response\\Cookies::get(string $name): Phalcon\\Http\\CookieInterface must be compatible with Phalcon\\Http\\Response\\CookiesInterface::get(string $name): Phalcon\\Http\\Cookie in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response\\Cookies::get(string $name): Phalcon\\Http\\CookieInterface must be compatible with Phalcon\\Http\\Response\\CookiesInterface::get(string $name): Phalcon\\Http\\Cookie in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response\\Cookies::reset(): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::reset(): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response\\Cookies::reset(): Phalcon\\Http\\Response\\Cookies must be compatible with Phalcon\\Http\\Response\\CookiesInterface::reset(): Phalcon\\Http\\Response\\CookiesInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Http\\Response\\Headers::__set_state(array $data): Phalcon\\Http\\Response\\Headers must be compatible with Phalcon\\Http\\Response\\HeadersInterface::__set_state(array $data): Phalcon\\Http\\Response\\HeadersInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Http\\Response\\Headers::__set_state(array $data): Phalcon\\Http\\Response\\Headers must be compatible with Phalcon\\Http\\Response\\HeadersInterface::__set_state(array $data): Phalcon\\Http\\Response\\HeadersInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Image\\Factory::load($config): Phalcon\\Image\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Image\\Factory::load($config): Phalcon\\Image\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Logger\\Adapter\\Syslog::getFormatter(): Phalcon\\Logger\\Formatter\\Syslog must be compatible with Phalcon\\Logger\\AdapterInterface::getFormatter(): Phalcon\\Logger\\FormatterInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Logger\\Adapter\\Syslog::getFormatter(): Phalcon\\Logger\\Formatter\\Syslog must be compatible with Phalcon\\Logger\\AdapterInterface::getFormatter(): Phalcon\\Logger\\FormatterInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Logger\\Factory::load($config): Phalcon\\Logger\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Logger\\Factory::load($config): Phalcon\\Logger\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Logger\\Formatter\\Syslog::format($message, int $type, int $timestamp, $context = NULL): null must be compatible with Phalcon\\Logger\\FormatterInterface::format(string $message, int $type, int $timestamp, $context = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Logger\\Formatter\\Syslog::format($message, int $type, int $timestamp, $context = NULL): null must be compatible with Phalcon\\Logger\\FormatterInterface::format(string $message, int $type, int $timestamp, $context = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Collection::findById($id): ?Phalcon\\Mvc\\Collection must be compatible with Phalcon\\Mvc\\CollectionInterface::findById($id): Phalcon\\Mvc\\CollectionInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Collection::findById($id): ?Phalcon\\Mvc\\Collection must be compatible with Phalcon\\Mvc\\CollectionInterface::findById($id): Phalcon\\Mvc\\CollectionInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Collection::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Collection::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Collection\\Document::offsetExists(string $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Collection\\Document::offsetExists(string $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Collection\\Document::offsetGet(string $index) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Collection\\Document::offsetGet(string $index) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Collection\\Document::offsetSet(string $index, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Collection\\Document::offsetSet(string $index, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Micro\\Collection::setPrefix(string $prefix): Phalcon\\Mvc\\Micro\\Collection must be compatible with Phalcon\\Mvc\\Micro\\CollectionInterface::setPrefix(string $prefix): Phalcon\\Mvc\\Micro\\CollectionInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Micro\\Collection::setPrefix(string $prefix): Phalcon\\Mvc\\Micro\\Collection must be compatible with Phalcon\\Mvc\\Micro\\CollectionInterface::setPrefix(string $prefix): Phalcon\\Mvc\\Micro\\CollectionInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Micro\\Collection::setLazy(bool $lazy): Phalcon\\Mvc\\Micro\\Collection must be compatible with Phalcon\\Mvc\\Micro\\CollectionInterface::setLazy(bool $lazy): Phalcon\\Mvc\\Micro\\CollectionInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Micro\\Collection::setLazy(bool $lazy): Phalcon\\Mvc\\Micro\\Collection must be compatible with Phalcon\\Mvc\\Micro\\CollectionInterface::setLazy(bool $lazy): Phalcon\\Mvc\\Micro\\CollectionInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::setTransaction(Phalcon\\Mvc\\Model\\TransactionInterface $transaction): Phalcon\\Mvc\\Model must be compatible with Phalcon\\Mvc\\ModelInterface::setTransaction(Phalcon\\Mvc\\Model\\TransactionInterface $transaction): Phalcon\\Mvc\\ModelInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::setTransaction(Phalcon\\Mvc\\Model\\TransactionInterface $transaction): Phalcon\\Mvc\\Model must be compatible with Phalcon\\Mvc\\ModelInterface::setTransaction(Phalcon\\Mvc\\Model\\TransactionInterface $transaction): Phalcon\\Mvc\\ModelInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::cloneResultMap($base, array $data, $columnMap, ?int $dirtyState = NULL, ?bool $keepSnapshots = NULL): Phalcon\\Mvc\\Model must be compatible with Phalcon\\Mvc\\ModelInterface::cloneResultMap($base, array $data, $columnMap, $dirtyState = NULL, $keepSnapshots = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::cloneResultMap($base, array $data, $columnMap, ?int $dirtyState = NULL, ?bool $keepSnapshots = NULL): Phalcon\\Mvc\\Model must be compatible with Phalcon\\Mvc\\ModelInterface::cloneResultMap($base, array $data, $columnMap, $dirtyState = NULL, $keepSnapshots = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::cloneResult(Phalcon\\Mvc\\ModelInterface $base, array $data, ?int $dirtyState = NULL) must be compatible with Phalcon\\Mvc\\ModelInterface::cloneResult(Phalcon\\Mvc\\ModelInterface $base, array $data, $dirtyState = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::cloneResult(Phalcon\\Mvc\\ModelInterface $base, array $data, ?int $dirtyState = NULL) must be compatible with Phalcon\\Mvc\\ModelInterface::cloneResult(Phalcon\\Mvc\\ModelInterface $base, array $data, $dirtyState = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::fireEvent(string $eventName): bool must be compatible with Phalcon\\Mvc\\ModelInterface::fireEvent($eventName) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::fireEvent(string $eventName): bool must be compatible with Phalcon\\Mvc\\ModelInterface::fireEvent($eventName) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::fireEventCancel(string $eventName): bool must be compatible with Phalcon\\Mvc\\ModelInterface::fireEventCancel($eventName) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::fireEventCancel(string $eventName): bool must be compatible with Phalcon\\Mvc\\ModelInterface::fireEventCancel($eventName) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::getRelated(string $alias, $arguments = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\ModelInterface::getRelated($alias, $arguments = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::getRelated(string $alias, $arguments = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\ModelInterface::getRelated($alias, $arguments = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::setDirtyState(int $dirtyState): Phalcon\\Mvc\\ModelInterface must be compatible with Phalcon\\Mvc\\Model\\ResultInterface::setDirtyState($dirtyState) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::setDirtyState(int $dirtyState): Phalcon\\Mvc\\ModelInterface must be compatible with Phalcon\\Mvc\\Model\\ResultInterface::setDirtyState($dirtyState) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Binder::bindToHandler($handler, array $params, string $cacheKey, $methodName = NULL): null must be compatible with Phalcon\\Mvc\\Model\\BinderInterface::bindToHandler($handler, array $params, string $cacheKey, ?string $methodName = NULL): null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Binder::bindToHandler($handler, array $params, string $cacheKey, $methodName = NULL): null must be compatible with Phalcon\\Mvc\\Model\\BinderInterface::bindToHandler($handler, array $params, string $cacheKey, ?string $methodName = NULL): null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::setModelName(string $modelName): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::setModelName(string $modelName): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::setModelName(string $modelName): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::setModelName(string $modelName): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::bind(array $bindParams, ?bool $merge = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bind(array $bindParams): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::bind(array $bindParams, ?bool $merge = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bind(array $bindParams): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::bindTypes(array $bindTypes): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bindTypes(array $bindTypes): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::bindTypes(array $bindTypes): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bindTypes(array $bindTypes): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::where(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::where(string $conditions): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::where(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::where(string $conditions): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::conditions(string $conditions): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::conditions(string $conditions): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::conditions(string $conditions): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::conditions(string $conditions): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::orderBy(string $orderColumns): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::orderBy(string $orderColumns): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::orderBy(string $orderColumns): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::orderBy(string $orderColumns): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::limit(int $limit, $offset = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::limit(int $limit, $offset = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::limit(int $limit, $offset = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::limit(int $limit, $offset = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::forUpdate(?bool $forUpdate = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::forUpdate(?bool $forUpdate = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::forUpdate(?bool $forUpdate = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::forUpdate(?bool $forUpdate = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::sharedLock(?bool $sharedLock = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::sharedLock(?bool $sharedLock = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::sharedLock(?bool $sharedLock = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::sharedLock(?bool $sharedLock = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::betweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::betweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::betweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::betweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::notBetweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::notBetweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::notBetweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::notBetweenWhere(string $expr, $minimum, $maximum): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::inWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::inWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::inWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::inWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::notInWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::notInWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::notInWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\Criteria must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::notInWhere(string $expr, array $values): Phalcon\\Mvc\\Model\\CriteriaInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Criteria::getDI(): ?Phalcon\\DiInterface must be compatible with Phalcon\\Di\\InjectionAwareInterface::getDI(): Phalcon\\DiInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::getDI(): ?Phalcon\\DiInterface must be compatible with Phalcon\\Di\\InjectionAwareInterface::getDI(): Phalcon\\DiInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::addHasOne(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addHasOne(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::addHasOne(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addHasOne(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::addBelongsTo(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addBelongsTo(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::addBelongsTo(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addBelongsTo(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::addHasMany(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addHasMany(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::addHasMany(Phalcon\\Mvc\\ModelInterface $model, $fields, string $referencedModel, $referencedFields, $options = NULL): Phalcon\\Mvc\\Model\\Relation must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::addHasMany(Phalcon\\Mvc\\ModelInterface $model, $fields, $referencedModel, $referencedFields, $options = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::existsBelongsTo(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsBelongsTo($modelName, $modelRelation) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::existsBelongsTo(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsBelongsTo($modelName, $modelRelation) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::existsHasMany(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsHasMany($modelName, $modelRelation) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::existsHasMany(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsHasMany($modelName, $modelRelation) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::existsHasOne(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsHasOne($modelName, $modelRelation) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::existsHasOne(string $modelName, string $modelRelation): bool must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::existsHasOne($modelName, $modelRelation) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::getBelongsToRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getBelongsToRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::getBelongsToRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getBelongsToRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::getHasManyRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getHasManyRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::getHasManyRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\Model\\ResultsetInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getHasManyRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::getHasOneRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\ModelInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getHasOneRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::getHasOneRecords(string $method, string $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL): Phalcon\\Mvc\\ModelInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getHasOneRecords($method, $modelName, $modelRelation, Phalcon\\Mvc\\ModelInterface $record, $parameters = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::getRelations(string $modelName): Phalcon\\Mvc\\Model\\RelationInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getRelations($modelName) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::getRelations(string $modelName): Phalcon\\Mvc\\Model\\RelationInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getRelations($modelName) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::getRelationsBetween(string $first, string $second): Phalcon\\Mvc\\Model\\RelationInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getRelationsBetween($first, $second) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::getRelationsBetween(string $first, string $second): Phalcon\\Mvc\\Model\\RelationInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::getRelationsBetween($first, $second) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::createQuery(string $phql): Phalcon\\Mvc\\Model\\QueryInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::createQuery($phql) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::createQuery(string $phql): Phalcon\\Mvc\\Model\\QueryInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::createQuery($phql) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::executeQuery(string $phql, $placeholders = NULL, $types = NULL): Phalcon\\Mvc\\Model\\QueryInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::executeQuery($phql, $placeholders = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::executeQuery(string $phql, $placeholders = NULL, $types = NULL): Phalcon\\Mvc\\Model\\QueryInterface must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::executeQuery($phql, $placeholders = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::notifyEvent(string $eventName, Phalcon\\Mvc\\ModelInterface $model) must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::notifyEvent($eventName, Phalcon\\Mvc\\ModelInterface $model) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::notifyEvent(string $eventName, Phalcon\\Mvc\\ModelInterface $model) must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::notifyEvent($eventName, Phalcon\\Mvc\\ModelInterface $model) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Manager::missingMethod(Phalcon\\Mvc\\ModelInterface $model, string $eventName, $data) must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::missingMethod(Phalcon\\Mvc\\ModelInterface $model, $eventName, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Manager::missingMethod(Phalcon\\Mvc\\ModelInterface $model, string $eventName, $data) must be compatible with Phalcon\\Mvc\\Model\\ManagerInterface::missingMethod(Phalcon\\Mvc\\ModelInterface $model, $eventName, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Message::setType(string $type): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::setType($type) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Message::setType(string $type): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::setType($type) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Message::setMessage(string $message): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::setMessage($message) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Message::setMessage(string $message): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::setMessage($message) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Message::__set_state(array $message): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::__set_state(array $message): Phalcon\\Mvc\\Model\\MessageInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Message::__set_state(array $message): Phalcon\\Mvc\\Model\\Message must be compatible with Phalcon\\Mvc\\Model\\MessageInterface::__set_state(array $message): Phalcon\\Mvc\\Model\\MessageInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apc::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apc::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apc::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apc::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apcu::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apcu::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apcu::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Apcu::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Files::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Files::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Files::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Files::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Libmemcached::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Libmemcached::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Libmemcached::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Libmemcached::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memcache::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memcache::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memcache::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memcache::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memory::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memory::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memory::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Memory::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Redis::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Redis::read(string $key): ?null must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Redis::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Redis::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Session::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Session::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Session::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Session::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Xcache::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Xcache::read(string $key) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::read($key) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\MetaData\\Xcache::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\MetaData\\Xcache::write(string $key, $data) must be compatible with Phalcon\\Mvc\\Model\\MetaDataInterface::write($key, $data) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::join(string $model, $conditions = NULL, $alias = NULL, $type = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::join($model, $conditions = NULL, $alias = NULL, $type = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::join(string $model, $conditions = NULL, $alias = NULL, $type = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::join($model, $conditions = NULL, $alias = NULL, $type = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::innerJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::innerJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::innerJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::innerJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::leftJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::leftJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::leftJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::leftJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::rightJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::rightJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::rightJoin(string $model, $conditions = NULL, $alias = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::rightJoin($model, $conditions = NULL, $alias = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::andWhere($conditions, $bindParams = NULL, $bindTypes = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::andWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::andWhere($conditions, $bindParams = NULL, $bindTypes = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::orWhere($conditions, $bindParams = NULL, $bindTypes = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::orWhere(string $conditions, $bindParams = NULL, $bindTypes = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::orWhere($conditions, $bindParams = NULL, $bindTypes = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::betweenWhere(string $expr, $minimum, $maximum, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::betweenWhere($expr, $minimum, $maximum, ?string $operator = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::betweenWhere(string $expr, $minimum, $maximum, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::betweenWhere($expr, $minimum, $maximum, ?string $operator = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::notBetweenWhere(string $expr, $minimum, $maximum, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::notBetweenWhere($expr, $minimum, $maximum, ?string $operator = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::notBetweenWhere(string $expr, $minimum, $maximum, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::notBetweenWhere($expr, $minimum, $maximum, ?string $operator = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::inWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::inWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\BuilderInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::inWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::inWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\BuilderInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::notInWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::notInWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\BuilderInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Query\\Builder::notInWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\Builder must be compatible with Phalcon\\Mvc\\Model\\Query\\BuilderInterface::notInWhere(string $expr, array $values, ?string $operator = NULL): Phalcon\\Mvc\\Model\\Query\\BuilderInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Resultset\\Simple::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Resultset\\Simple::unserialize(string $data) must be compatible with Serializable::unserialize($serialized) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Row::setDirtyState(int $dirtyState): bool must be compatible with Phalcon\\Mvc\\Model\\ResultInterface::setDirtyState($dirtyState) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Row::setDirtyState(int $dirtyState): bool must be compatible with Phalcon\\Mvc\\Model\\ResultInterface::setDirtyState($dirtyState) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Row::offsetUnset(int $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Row::offsetUnset(int $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Model\\Transaction::rollback($rollbackMessage = NULL, ?Phalcon\\Mvc\\ModelInterface $rollbackRecord = NULL): bool must be compatible with Phalcon\\Mvc\\Model\\TransactionInterface::rollback(?string $rollbackMessage = NULL, ?Phalcon\\Mvc\\ModelInterface $rollbackRecord = NULL) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Transaction::rollback($rollbackMessage = NULL, ?Phalcon\\Mvc\\ModelInterface $rollbackRecord = NULL): bool must be compatible with Phalcon\\Mvc\\Model\\TransactionInterface::rollback(?string $rollbackMessage = NULL, ?Phalcon\\Mvc\\ModelInterface $rollbackRecord = NULL) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Router\\Route::setHostname(string $hostname): Phalcon\\Mvc\\Router\\Route must be compatible with Phalcon\\Mvc\\Router\\RouteInterface::setHostname(string $hostname): Phalcon\\Mvc\\Router\\RouteInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Router\\Route::setHostname(string $hostname): Phalcon\\Mvc\\Router\\Route must be compatible with Phalcon\\Mvc\\Router\\RouteInterface::setHostname(string $hostname): Phalcon\\Mvc\\Router\\RouteInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Router\\Route::setHttpMethods($httpMethods): Phalcon\\Mvc\\Router\\Route must be compatible with Phalcon\\Mvc\\Router\\RouteInterface::setHttpMethods($httpMethods): Phalcon\\Mvc\\Router\\RouteInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Router\\Route::setHttpMethods($httpMethods): Phalcon\\Mvc\\Router\\Route must be compatible with Phalcon\\Mvc\\Router\\RouteInterface::setHttpMethods($httpMethods): Phalcon\\Mvc\\Router\\RouteInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Url::get($uri = NULL, $args = NULL, $local = NULL, $baseUri = NULL): string must be compatible with Phalcon\\Mvc\\UrlInterface::get($uri = NULL, $args = NULL, ?bool $local = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Url::get($uri = NULL, $args = NULL, $local = NULL, $baseUri = NULL): string must be compatible with Phalcon\\Mvc\\UrlInterface::get($uri = NULL, $args = NULL, ?bool $local = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Url::path(?string $path = NULL): string must be compatible with Phalcon\\Mvc\\UrlInterface::path($path = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Url::path(?string $path = NULL): string must be compatible with Phalcon\\Mvc\\UrlInterface::path($path = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\View::setRenderLevel(int $level): Phalcon\\Mvc\\View must be compatible with Phalcon\\Mvc\\ViewInterface::setRenderLevel(string $level) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\View::setRenderLevel(int $level): Phalcon\\Mvc\\View must be compatible with Phalcon\\Mvc\\ViewInterface::setRenderLevel(string $level) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\View::partial(string $partialPath, $params = NULL) must be compatible with Phalcon\\Mvc\\ViewBaseInterface::partial(string $partialPath, $params = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\View::partial(string $partialPath, $params = NULL) must be compatible with Phalcon\\Mvc\\ViewBaseInterface::partial(string $partialPath, $params = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\View\\Simple::getParamsToView() must be compatible with Phalcon\\Mvc\\ViewBaseInterface::getParamsToView(): null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\View\\Simple::getParamsToView() must be compatible with Phalcon\\Mvc\\ViewBaseInterface::getParamsToView(): null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\View\\Simple::partial(string $partialPath, $params = NULL) must be compatible with Phalcon\\Mvc\\ViewBaseInterface::partial(string $partialPath, $params = NULL): string in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\View\\Simple::partial(string $partialPath, $params = NULL) must be compatible with Phalcon\\Mvc\\ViewBaseInterface::partial(string $partialPath, $params = NULL): string in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Paginator\\Factory::load($config): Phalcon\\Paginator\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Paginator\\Factory::load($config): Phalcon\\Paginator\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Registry::offsetExists(string $offset): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Registry::offsetExists(string $offset): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Registry::offsetGet(string $offset): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Registry::offsetGet(string $offset): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Registry::offsetSet(string $offset, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Registry::offsetSet(string $offset, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Registry::offsetUnset(string $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Registry::offsetUnset(string $offset) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Adapter\\Libmemcached::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Adapter\\Libmemcached::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Adapter\\Memcache::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Adapter\\Memcache::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Adapter\\Redis::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Adapter\\Redis::destroy(?string $sessionId = NULL): bool must be compatible with Phalcon\\Session\\Adapter::destroy(?bool $removeData = NULL): bool in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Bag::get(string $property, $defaultValue = NULL) must be compatible with Phalcon\\Session\\BagInterface::get(string $property, $defaultValue = NULL): null in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Bag::get(string $property, $defaultValue = NULL) must be compatible with Phalcon\\Session\\BagInterface::get(string $property, $defaultValue = NULL): null in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Bag::offsetExists(string $property): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Bag::offsetExists(string $property): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Bag::offsetGet(string $property): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Bag::offsetGet(string $property): null must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Bag::offsetSet(string $property, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Bag::offsetSet(string $property, $value) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Bag::offsetUnset(string $property) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Bag::offsetUnset(string $property) must be compatible with ArrayAccess::offsetUnset($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Session\\Factory::load($config): Phalcon\\Session\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Session\\Factory::load($config): Phalcon\\Session\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetExists(string $translateKey): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Adapter::offsetGet(string $translateKey) must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Translate\\Factory::load($config): Phalcon\\Translate\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nFatal error: Declaration of Phalcon\\Translate\\Factory::load($config): Phalcon\\Translate\\AdapterInterface must be compatible with Phalcon\\FactoryInterface::load($config): NULL in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Validation\\Message::__set_state(array $message): Phalcon\\Validation\\Message must be compatible with Phalcon\\Validation\\MessageInterface::__set_state(array $message): Phalcon\\Validation\\MessageInterface in Unknown on line 0\nFatal error: Declaration of Phalcon\\Validation\\Message::__set_state(array $message): Phalcon\\Validation\\Message must be compatible with Phalcon\\Validation\\MessageInterface::__set_state(array $message): Phalcon\\Validation\\MessageInterface in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Validation\\Message\\Group::offsetExists(string $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Validation\\Message\\Group::offsetExists(string $index): bool must be compatible with ArrayAccess::offsetExists($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Validation\\Message\\Group::offsetGet(int $index): Phalcon\\Validation\\Message must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Validation\\Message\\Group::offsetGet(int $index): Phalcon\\Validation\\Message must be compatible with ArrayAccess::offsetGet($offset) in Unknown on line 0\nPHP Fatal error:  Declaration of Phalcon\\Validation\\Message\\Group::offsetSet(int $index, $message) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Validation\\Message\\Group::offsetSet(int $index, $message) must be compatible with ArrayAccess::offsetSet($offset, $value) in Unknown on line 0\nPHP 7.2.1 (cli) (built: Feb  8 2018 17:01:26) ( NTS DEBUG )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.2.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.2.1, Copyright (c) 1999-2017, by Zend Technologies\n    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans\n``. Well, we can do this in Phalcon for 4.0.x branch only. So I'll cherry pick some commits from the current Zephir'sdevelopmentbranch to create a minor (patch) release without type casting/hinting. @tumour \u042f \u043f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u043e\u0431\u0438\u0442\u0430\u044e \u0432 \u043d\u0430\u0448\u0435\u043c Discord \u0447\u0430\u0442\u0438\u043a\u0435. \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0441\u0440\u043e\u0447\u043d\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441, \u043c\u043e\u0436\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u0447\u0435\u0440\u0435\u0437 https://phalcon.link/discord . Thank you!. To call any c-function you can embed c-code in tags, like so:%{ // c-code }%.` (check https://github.com/phalcon/zephir/blob/master/test/cblock.zep as an example). A bit more elegant, but also more work, are custom optimizers. An \u2018optimizer\u2019 works like an interceptor for function calls. An \u2018optimizer\u2019 replaces the call for the function in the PHP userland by direct C-calls which are faster and have a lower overhead improving performance. Please check https://github.com/phalcon/zephir/pull/21#issuecomment-26178522 and https://docs.zephir-lang.com/en/latest/optimizers.html.\nTo return a string from your C-function you will may have something like this: \n```c\n// RETURN_MM_STRING(str);\nRETVAL_STRING(str);\nZEPHIR_MM_RESTORE();\nreturn;\n```\nPlease take a look at https://github.com/phalcon/cphalcon/blob/master/phalcon/kernel.zep. @piotrkardasz  The main mistake is to pass zval as int . Just fixed your example. \next/my-fibonacci.c\ndiff\n--- a/ext/my-fibonacci.c\n+++ b/ext/my-fibonacci.c\n@@ -1,4 +1,5 @@\n-int fibonacci(long n) {\n+unsigned int fibonacci(unsigned int n) {\n         if (n < 2) return n;\n-        else return fibonacci(n - 2) + fibonacci(n - 1);\n+\n+        return fibonacci(n - 1) + fibonacci(n - 2);\n }\next/my-fibonacci.h\n```diff\n--- a/ext/my-fibonacci.h\n+++ b/ext/my-fibonacci.h\n@@ -5,4 +5,4 @@\n #include \"php.h\"\n #include \"php_ext.h\"\n-int fibonacci(int n);\n+unsigned int fibonacci(unsigned int n);\n```\noptimizers/FibonacciOptimizer.php\n```diff\n--- a/optimizers/FibonacciOptimizer.php\n+++ b/optimizers/FibonacciOptimizer.php\n@@ -6,16 +6,69 @@ use Zephir\\Call;\n use Zephir\\CompilationContext;\n use Zephir\\CompiledExpression;\n use Zephir\\Optimizers\\OptimizerAbstract;\n-use Zephir\\CompilerException;\n+use Zephir\\Compiler\\CompilerException;\nclass FibonacciOptimizer extends OptimizerAbstract\n-{ \n+{\n     public function optimize(array $expression, Call $call, CompilationContext $context)\n     {\n+       if (!isset($expression['parameters']) || count($expression['parameters']) > 1) {\n+           throw new CompilerException(\"'fibonacci' requires one parameter\", $expression);\n+        }\n+\n+        $call->processExpectedReturn($context);\n+\n         $context->headersManager->add('my-fibonacci');\n\n$resolvedParams = $call->getReadOnlyResolvedParams($expression['parameters'], $context, $expression);\nreturn new CompiledExpression('int', 'fibonacci(' . $resolvedParams[0] . ')', $expression);\n$resolvedParams = $call->getResolvedParamsAsExpr($expression['parameters'], $context, $expression);\n$compiledExpression = $resolvedParams[0];\n+\nswitch ($compiledExpression->getType()) {\ncase 'int':\nreturn $this->passNativeFCall($compiledExpression, $expression);\nbreak;\ncase 'variable':\n$variable = $context->symbolTable->getVariable($compiledExpression->getCode());\nswitch ($variable->getType()) {\ncase 'int':\nreturn $this->passNativeFCall($compiledExpression, $expression);\nbreak;\ncase 'variable':\nreturn new CompiledExpression(\n'uint',\n'fibonacci(' . $context->backend->getVariableCode($variable) . ' TSRMLS_CC)',\n$expression\n);\nbreak;\n}\nbreak;\n}\n+\nreturn false;\n}\n+\n/**\n\n\n@param CompiledExpression $compiledExpression\n\n\n\n\n@param array $expression\n\n\n\n\n@return CompiledExpression\n\n\n*/\nprotected function passNativeFCall($compiledExpression, $expression)\n{\nreturn new CompiledExpression(\n'uint',\n'fibonacci(' . $compiledExpression->getCode() . ')',\n$expression\n);\n     }\n }\n```\n\nsamples/math.zep\n```diff\n--- a/samples/math.zep\n+++ b/samples/math.zep\n@@ -15,7 +15,7 @@ class Math\npublic static function someMethod()\n {\n\n\nint a;\nvar a; let a = fibonacci(40);\n return a;\n\n```\n\n\nOutput\nbash\n$ php test.php\nstart \n0\n102334155\nend. We only accept bug reports, new feature requests and pull requests in GitHub. For questions regarding the usage of the Zephir Language, support requests, and questions like this please visit the official forums.. This issue was moved to phalcon/zephir-docs#80. Refs: https://github.com/phalcon/zephir/issues/938. Thank you\n. @DaveM2011 Looks great! Could you add it as a good PowerShell example to the WINDOWS.md file?. @Jurigag Phalcon does not use 0.11.x branch. @hellobbq Could you downgrade to the 0.10.11 and test again?. Just fixed this bug for 0.11.x branch in the #1685. @mikachou It is common parser issue - using all-uppercase names.. This issue was moved to phalcon/php-zephir-parser#39. Fixed. Thank you for contributing. As you can see there is no issue at all #1700 \nI'm closing this issue but if I have made an oversight, please do get back in touch. Thanks. Fixed. Thank you. I created a PR  (#1687) to show community the approach to use 3rd party extensions as a project dependencies. \nhttps://travis-ci.org/phalcon/zephir/builds/445511734\n/cc @danielspk @niden . @rodriguescr Someone from the @phalcon/zephir-team (or I) will take a look in the next days.. @rodriguescr The matches variable should be declared before usage.\n```diff\n    public function match(url)\n    {\n    var route = \"\";\n    var params = \"\";\n\n\narray matches;for route, params in this->routes  {\n    if (preg_match(route, url, matches)) {\n        for key, match in matches {\n            if (is_string(key)) {\n              let  params[key] = match;\n            }\n        }\n        let this->params = params;\n        return true;\n    }\n}\nreturn false;\n\n}\n```\n\n\nHowever, I agree that the error message must be correct and clear. I'll fix the error message in the future releases.. @dschissler Could you please create a new issue with code to reproduce? I'll try to sort out. Thank you. @dschissler Yes, this is exactly what i want to do. Sorry, too much painstaking replacement in many places. I will do it gradually. @dschissler The compiler's messages was divided into streams in the development branch. Thus, now it is possible to redirect compiler's output as follows:\nsh\nzephir generate 2> errors.log 1> /dev/null\nI would like to remove coloring for compiler output at all because it is just a markup that will remains in the file after the redirection, eg:\n$ cat errors.log\n\\033[0;31mSome compiler's message\\033[0m\nThis will not affect to standard commands' output.. Yes. So I propose think about coloring for compiler output as a low priority feature that may be implemented or not.. @fire-falcon Could you please provide full log/output? Please use something like http://vpaste.net for this. Hmm.. I'm sorry but this is not enough. Could you provide config.w32 I'll try to sort out. @fire-falcon Could you provide PHP version?. I'm closing this issue due to the lack of any reaction. I'll open it again if the need arises. This issue has been around for about two years. All us well know (and long ago) about it. @AlexNDRmac  and I are involved in solving this bug.. @dschissler Could you please provide code to reproduce? I need the code that did work previously. Also please provide exact worked Zephir version.. I'll try to figure it out, but if just require phar:///tmp/1.phar is not enough I can't fix it without a code to reproduce. And I strongly doubt that this issue and  #1621 are different problems.. @dschissler Do you need a patch for the 0.10.x branch or the 0.11.x is satisfied your needs?. @dschissler \n\nThe \"--backend\" option does not exist.  \n\nIt is the bug. Open please an issue. I'll fix it asap.\n\nIt would be really nice if zephir could only use sudo on the specific necessary commands like most projects. \n\nI constantly forget about the sudo... Please open a new issue so that I do not forget about it. I'll try to deal with this in the near future. @niuxiongwen Could yoi please provide Zephir version and steps to reproduce. Yeah, I think so. We will consider your proposal. Thank you for reaching out to us to point this.. It is root of the problem:\nconfigure: error: Cannot find php-config. Please use --with-php-config=PATH\nYou should add path to php-config to the $PATH variable. You are reading my mind. A few days ago, I thought that it would be good to change this.\nThat's what these commands actually do:\n- generate: Generates the C sources from Zephir without compiling them\n- compile: Compiles the extension without installing it (always calls generate command)\n- install: Compiles and installs the extension (always calls compile command)\n- build: Calls the install command\nI want to change this so that it will works in such way\n\ngenerate: Generates the C sources from Zephir without compiling them\ncompile: Compiles the extension without installing it (if there is no generated code will raise an error)\ninstall: Only installs the extension (if there is no compiled code will raise an error)\nbuild: Should call generate, compile then install\n\n\nBTW, I don't think this is related to this issue's topic  :). Thank you. I'll fix this asap. @remicollet Yeah, there was a confusion with the versions. My bad. I will fix 0.11.x here: #1743 + #1744 The 0.10.x branch will be fixed a bit later. I need a day or two to fix Phalcon blocking issue. - 0.11.6: https://github.com/phalcon/zephir/releases/tag/0.11.6\n- 0.10.14: https://github.com/phalcon/zephir/releases/tag/0.10.14\nThank you for the report, and for helping us make Zephir better.. In this case you can use a bit modified  while:\n```zep\nvar result;\nlet result = this->wait();\nwhile result {\n    // ...\n}\n```\nor  loop:\n```zep\nvar result;\nloop {\n    let result = this->wait();\n    if !result {\n        break;\n    }\n// ...\n\n}\n```\nor do / while:\n```zep\nvar result;\ndo {\n    let result = this->wait();\n    if !result {\n        break;\n    }\n// ...\n\n} while (result);\n```\nlet statement in the condition place is not supported. @zuozhehao I'll take a look a bit later. Most likely in the next week. Thank you for the report.. @dreamsxin Could you please take a look. Anyway it is issue I guess (although not critical).. @sandrokeil Thank you for the report. I'll try to sort out ASAP.. @sandrokeil I found a bug. Thinking about a possible solution.. Fixed in current development branch. Thank you for the report, and for helping us make Zephir better.. @nawawi  We don't add changes directly to stable branches or master. Could you please send this PR to the 0.10.x branch? I'll cherry-pick it to all required branches later. Also could you provide a small test which covers your changes. . @benant Could you please try latest changes from development branch? It seems I fixed this a few days ago. You have to clone this repo, then run composer install from the project run. Then use ./zephir as a entrypoint. I hope this fixed in the latest release. Feel free to open a new issue if the problem appears again. Thank you for contributing.. What do you think about such syntax guys:\n```zep\narray langs = [ \"php\", \"ruby\", \"perl\" ];\nvar lang1, lang2, lang3;\nlet lang1, lang2, _     = langs;\nlet _,     lang2, _     = langs;\nlet lang1, lang2, lang3 = langs;\n. Nope. I just thinking about it. This is not implemented yet, but we do not have to consciously over-complicate the end-user syntax, isn't?. In other hand parentheses are used for `IF`, `ELSEIF`, `CATCH`, `WHILE`, etc  in PHP, and ES6 Javascript, but not in Zephir :). Anyway, I'm not debating that we don't need brackets in Zephir at all. It is more a discussion and just my personal opinion. @dly667 The documentation you use refers to the 0.10.x branch. The documentation for the 0.11.x (current, actual branch) is not updated yet. I bring my apologies for this. Please take a look at https://github.com/phalcon/zephir-docs/issues/175. @danhunsaker I agree. For example we can add a note to the 0.10 docs like \"note that you need to get a relevant docs version branch using git clone\". @arkanSoul  There is no `foreach` control flow statement for traversing items in a collection/arrays. As @sandrokeil mentioned you have to use `for` instead.. @dreamsxin In fact, this is an annoying problem with superglobals. It seems I have already solved this issue once. But as we can see - not. Maybe you will be able to see what I didn't see.. Fixed in the `development` branch. Feel free to open a new issue if the problem appears again. Thank you for contributing.. @chet0xhenry I found a bug. Working on possible solution. Fixed in the `development` branch. I'll release new version ASAP. Feel free to open a new issue if the problem appears again. And thank you for contributing.. @CameronHall I'm unable to reproduce. Could you please provide the `cache/IR` directory contents?. @niden Yes, it is old issue. First of all this may not work if you trying to compile with disabled memcached extension.  Theoretically you can even compile it, but I want to draw your attention that Zephir is not PHP and the value of the constant will not calculate dynamically. The value of the constant will be calculated once, at compile time. Thus, if the user updates the memcached, he may be unpleasantly surprised to realize that the extension continue use old constant values (previous version). Btw, did you try `constant(\"\\Memcached::OPT_PREFIX_KEY\")`?. @mrtwj We only accept bug reports, new feature requests and pull requests in GitHub. For questions regarding the usage of the framework, support requests, and questions like this please visit the [official forums](https://forum.phalconphp.com) as well as [Discord server](https://phalcon.link/discord). Sorry it took this long. @npfedwards Could you please provide a full (not modified) bt ? And secondly, is there any chance to locate test that leads to the segfault? An I'll need Zephir version. @npfedwards What Zephir version did you use? Also I'll need the code/test to reproduce. @zachleigh Could you please disable Xdebug and try to get backtrace again? And yes, I'll need code to reproduce. As I know Phalcon has thousands of tests. @dongasai The initial idea was that only maintainers add these files. Perhaps this will be changed in the future. Any modern project written on Zephir, can completely ignore the `ext` directory. Btw, Phalcon has a lot of C files inside `ext` directory which are created by hand.. backtracegdb\n0  0x00007fffe86da869 in zend_gc_refcount (p=0x1e) at /home/klay/.phpenv/versions/7.3.0-zts-debug/include/php/Zend/zend_types.h:981\n1  0x00007fffe86da901 in zval_refcount_p (pz=0x7fffffffa5d0) at /home/klay/.phpenv/versions/7.3.0-zts-debug/include/php/Zend/zend_types.h:1015\n2  0x00007fffe86db006 in zephir_memory_restore_stack_common (g=0x1b5ea60) at /home/klay/workspace/c/zephir-issue-1802/ext/kernel/memory.c:159\n3  0x00007fffe86db50a in zephir_memory_restore_stack (func=0x0) at /home/klay/workspace/c/zephir-issue-1802/ext/kernel/memory.c:259\n4  0x00007fffe86f2083 in zim_Issue1802_Factory_createRequest (execute_data=0x7fffed4220f0, return_value=0x7fffed4220d0) at /home/klay/workspace/c/zephir-issue-1802/ext/issue1802/factory.zep.c:47\n5  0x0000000000ce8b06 in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /tmp/php-build/source/7.3.0/Zend/zend_vm_execute.h:1102\n6  0x0000000000d5b40e in execute_ex (ex=0x7fffed422030) at /tmp/php-build/source/7.3.0/Zend/zend_vm_execute.h:55442\n7  0x0000000000d60af0 in zend_execute (op_array=0x7fffed484300, return_value=0x0) at /tmp/php-build/source/7.3.0/Zend/zend_vm_execute.h:60834\n8  0x0000000000c7541d in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /tmp/php-build/source/7.3.0/Zend/zend.c:1568\n9  0x0000000000baea60 in php_execute_script (primary_file=0x7fffffffc3e0) at /tmp/php-build/source/7.3.0/main/main.c:2630\n10 0x0000000000d63b4a in do_cli (argc=4, argv=0x19c1f80) at /tmp/php-build/source/7.3.0/sapi/cli/php_cli.c:997\n11 0x0000000000d64f95 in main (argc=4, argv=0x19c1f80) at /tmp/php-build/source/7.3.0/sapi/cli/php_cli.c:1389\n``. In C (Zend Engine) thestringdata type is _not scalar_ type. It is complex type. So we have to grow memory stack to handle each complex variable. Besides this we must free the memory. I researched yourRequest` class and saw that you pass a string variable to the constructor, but do not use it.\nzep\nclass Request implements RequestInterface\n{\n  public function __construct(var uri = null, string method = null, var body = \"php://temp\", array headers = [])\n  {\n  }\n}\nAfter this fix\n```diff\nclass Request implements RequestInterface\n{\n+  protected method;\npublic function __construct(var uri = null, string method = null, var body = \"php://temp\", array headers = [])\n  {\n+    let this->method = method;\n  }\n}\n```\nthe problem was resolved\n\n. @pejman-hkh Could you please provide a code to reproduce. @dreamsxin Could you please send this patch to the development branch?. @dreamsxin Could you please send this patch to the development branch?. @dreamsxin As I know @AlexNDRmac already done some work in this direction. Maybe he should do a PR on which we could work together.. @dreamsxin I'm going to close this on in favor of https://github.com/phalcon/zephir/pull/1809. Thank you for contributing and helping finding the bug. Thank you. Could you take a look at Travis build. There is few places you should fix. Thank you. @dreamsxin Segmentation fault (core dumped) on Travis for all PHP 7.x versions. Did you see. Thank you. @dreamsxin This code seems to be incompatible with the Windows compiler. At least we have the following:\nconcat.c\nC:\\projects\\zephir\\ext\\kernel\\array.c(98): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(166): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(167): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(169): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(170): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(170): warning C4133: 'function': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(172): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(167): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(169): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(172): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(204): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(205): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(207): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(209): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(205): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(207): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(209): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(245): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(286): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(287): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(289): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(290): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(290): warning C4133: 'function': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(287): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(289): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(307): error C2059: syntax error: '}'\nC:\\projects\\zephir\\ext\\kernel\\array.c(308): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(310): error C2065: 'offset': undeclared identifier\nC:\\projects\\zephir\\ext\\kernel\\array.c(308): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\nC:\\projects\\zephir\\ext\\kernel\\array.c(310): warning C4133: 'initializing': incompatible types - from 'int *' to 'zval *'\ndebug.c\nI think this can be made more portable. Could you take a look? \nhttps://ci.appveyor.com/project/sergeyklay/zephir/builds/22545498/job/eqfm2ltqtgtcex0c?fullLog=true#L61. Thank you. It more looks like a pattern matching. Thank you!. What about null ? :)\n. rly?\n. > Currently some applications have DocBlocks containing just the {@inheritDoc} inline tag to indicate that their complete contents should be inherited. This usage breaks with the PHPDoc Standard as summaries cannot contain inline tags and inheritance is automatic; you do not need to define a special tag for it.\n\nHowever, it does make clear that an element has been explicitly documented (and thus not forgotten). As such we are working to include a new (normal) tag in the PHPDoc Standard @inheritDoc that will serve that purpose.\n\nhttp://phpdoc.org/docs/latest/guides/inheritance.html\n. Thanks. Fixed\n. Thanks. Improved\n. do you mean throw warning on Z_STRLEN_P(str) <= 1 ?\n. I think you mean something else or I've misunderstood :) Because it's pointless\nc\n    if (Z_TYPE_P(str) != IS_STRING || Z_STRLEN_P(str) > 1) {\n        zend_error(E_WARNING, \"Invalid arguments supplied for uncamelize()\");\n        return;\n    }\n. Probably you meant?\nc\nif (Z_TYPE_P(str) != IS_STRING || Z_STRLEN_P(str) < 1) {\n. @steffengy str is string that must be camelized/uncamelized. So length of str shouldn't be in particular size. At least str length might be greater than 1\n. @steffengy What do you think about delim = *(Z_STRVAL_P(delimiter)); in your opinion it is OK?\n. @hervems It seems to me this may be cleaned safely due to the fact that latest Zephir does not support PHP < 5.4\n. Spaces must be used to indent lines; tabs are not allowed\n. Opening brace should be on a new line\n. @josh4trunks \nsh\nzephir fullclean && zephir build --backend=ZendEngine3\n/usr/local/bin/zephir: 22: [: -a: unexpected operator\nAre you sure about #!/bin/sh and -a ?\n. https://github.com/phalcon/zephir/pull/1332\n. > Spaces must be used to indent lines; tabs are not allowed\n. @dreamsxin \n```gdb\n(gdb) print fci.object.ce\nCannot access memory at address 0x10\n(gdb) print fci.object.properties\nCannot access memory at address 0x20\n(gdb) print fci.object.properties_table\nCannot access memory at address 0x28\n(gdb) print fci.object\n$8 = (zend_object *) 0x0\n(gdb) print fci.size\n$11 = 56\n(gdb) print fci_cache.object.ce\n$15 = (zend_class_entry *) 0x7ffff3803240\n```\nSo looks like fci.object empty here. Code before \n```c\nif PHP_VERSION_ID >= 70100\nfci->object = (func->common.fn_flags & ZEND_ACC_STATIC) ? NULL : fci_cache->object;\ncall = zend_vm_stack_push_call_frame(ZEND_CALL_TOP_FUNCTION, func, fci->param_count, fci_cache->called_scope, fci->object);\n\nelse\n```\nLets see\n```gdb\n(gdb) print func.common.fn_flags\n$18 = 513\n(gdb) print ZEND_ACC_STATIC\n$19 = 1\n(gdb) print 513 & 1\n$21 = 1\n```\nSo fci->object is NULL . You have a good memory :smiley:. Could you please follow .editorconfig. Do you use mixed indents? We use tabs for C files. \n. Works fine. See https://github.com/phalcon/zephir/blob/master/.travis.yml#L68. Good catch! . Okay. Could you please follow common code style. \ud83d\udc4d . Yes, and fix braces. Cc: @ovr . \ud83d\udc4d . @sjinks In fact the presence of -DZEPHIR_RELEASE flag could help to identify potential problems at development stage. isn't it?. \ud83d\udc4d . Sill can't understand..\nWe have a lot of such logic:\n```c\nifndef ZEPHIR_RELEASE\nzend_error(E_WARNING, \"Invalid arguments supplied for memnstr in %s on line %d\", file, line);\nelse\nzend_error(E_WARNING, \"Invalid arguments supplied for memnstr()\");\nendif\n```\nHere ZEPHIR_RELEASE can help at development stage. Right? Probably we have to refactor this or use another identifier... Oh! I'm sorry \ud83d\ude10 . Can we use this globally ?\nyaml\nenv:\n  global:\n    - LD_LIBRARY_PATH=\"$TRAVIS_BUILD_DIR/build/lib\":$LD_LIBRARY_PATH\n    - LIBRARY_PATH=\"$TRAVIS_BUILD_DIR/build/lib\":$LIBRARY_PATH\n    - C_INCLUDE_PATH=\"$TRAVIS_BUILD_DIR/build/include\"\n    - CFLAGS=\"-g3 -O0 -Wall -fvisibility=hidden\"\n    - ZEND_DONT_UNLOAD_MODULES=1\n. Actually I like more something like:\n```php\n$cleanup  = '';\n$callback = function($variable) use (&$cleanup) {\n    /// ...\n};\narray_map($callback, $context->symbolTable->getVariables());\n. Could we incapsulate this into something likephp\n$variable->haveToBeCleaned();\n```\nI'd like to cover this by tests in near future and have an ability to mock this. ```php\nprotected $complexVariables = [\n    'variable' => true,\n    'string'   => true,\n    // ..\n];\npublic function isComplex()\n{\n    return isset($this->complexVariables[$this->type]);\n}. Could we use an template file for all this?. could we introduce a small factory function to incapsulate this logic and/or increment refcount. Thank you!. \ud83d\udc4d . I mean something like (not sure about macros name)\n```c\ndefine CREATE_OBJECT_OR_ADD_REF(zval_ptr) \\\nif (Z_TYPE_P(zval_ptr) != IS_OBJECT) { \\\n    zval *arg = object; \\\n    ALLOC_INIT_ZVAL(object); \\\n    object_init_ex(object, zend_exception_get_default(TSRMLS_C)); \\\n    ZEPHIR_CALL_METHOD(NULL, object, \"__construct\", NULL, 0, arg); \\\n} else { \\\n    Z_ADDREF_P(zval_ptr); \\\n}\n\n``. Well, never mind then \ud83d\udc4d . Could you add- phpenv config-rm xdebug.ini || true. No, I suggest to use something liketemplates/ZendEngine2/zephir_init_properties.tpl`. I'm still not sure. Just wondering your opinion. @sjinks Could we add something like this: https://github.com/phalcon/php-zephir-parser/blob/development/unit-tests/Extension/TestCase.php#L54-L77\nrelated to the https://github.com/phalcon/zephir/issues/1462. https://github.com/phalcon/zephir/blob/master/Library/FileSystem/HardDisk.php#L166. What about https://help.github.com/articles/ignoring-files/#create-a-global-gitignore \nSee top of this file :). \ud83d\udc4d . self::complexTypes => self::$complexTypes. @sjinks Do not use static variables/methods as log as it possible. @sjinks I'm pretty sure that it doesn't resolve the issue for the PHP 7.0 (ZE3) because it is ZE2. Also it seems this may cause performance regression for PHP 5.6. . @sjinks Just inspected this in ZE2 and ZE3.\nZE2 (before zend_call_function):\nprint fcic.called_scope.name.val   # (zend_class_entry *) 0x0\nprint fcic.calling_scope.name.val  # (zend_class_entry *) 0x0\nprint fcic.object_ptr              # (zval *) 0x0\nprint print fcic.function_handler  # (zend_function *) 0x0\nZE3 (before zend_call_function):\nprintf \"%s\\n\", fcic.called_scope.name.val                     # Group\\PrivateCaller\nprintf \"%s\\n\", fcic.calling_scope.name.val                    # Group\\PrivateCaller\nprintf \"%s\\n\", fcic.object.ce.name.val                        # Group\\PrivateCaller\nprintf \"%s\\n\", fcic.function_handler.common.function_name.val # runBar\nActually I like your solution with populate_fcic and resolve_callable for ZE3. Could you please try to backport they to the ZE2?. > Method name \"Issue1404Test::is_php_version\" is not in camel caps format\n. a parameter list without types is only allowed in a function definition. diff\n-   int php_major = PHP_VERSION_ID / 10000;\n+   int php_major = PHP_MAJOR_VERSION;\n-   int php_minor = PHP_VERSION_ID / 100 - php_major * 100;\n+   int php_minor = PHP_MINOR_VERSION;\n- int php_release = PHP_VERSION_ID - (php_major * 10000 + php_minor * 100);\n+   int php_release = PHP_RELEASE_VERSION;. @danhunsaker This deprecated feature will certainly be removed in the future: http://php.net/manual/en/info.configuration.php Why do we need this?. Could you please create an ini file like:\nini\nvariables_order=EGPCS\nand then add this file via:\nyaml\n- phpenv config-add unit-tests/ci/zephir.ini\nThis approach will allow us to add more settings in future to this file without using echo. Also as you can see the enable_dl is deprecated feature and will be removed in the future: http://php.net/manual/en/info.configuration.php Why do we need this?. This change led to problem:\nPHP Strict standards:  Declaration of Extension\\Issue1404Test::onNotSuccessfulTest() should be compatible with PHPUnit_Framework_TestCase::onNotSuccessfulTest(Exception $e) in /home/travis/build/phalcon/zephir/unit-tests/Extension/Issue1404Test.php on line 250\nPHP Stack trace:\nPHP   1. {main}() /home/travis/build/phalcon/zephir/unit-tests/phpunit:0\nPHP   2. PHPUnit_TextUI_Command::main() /home/travis/build/phalcon/zephir/unit-tests/phpunit:38\nPHP   3. PHPUnit_TextUI_Command->run() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/TextUI/Command.php:100\nPHP   4. PHPUnit_Runner_BaseTestRunner->getTest() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/TextUI/Command.php:123\nPHP   5. PHPUnit_Framework_TestSuite->addTestFiles() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Runner/BaseTestRunner.php:58\nPHP   6. PHPUnit_Framework_TestSuite->addTestFile() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Framework/TestSuite.php:384\nPHP   7. PHPUnit_Util_Fileloader::checkAndLoad() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Framework/TestSuite.php:310\nPHP   8. PHPUnit_Util_Fileloader::load() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Util/Fileloader.php:38\nStrict standards: Declaration of Extension\\Issue1404Test::onNotSuccessfulTest() should be compatible with PHPUnit_Framework_TestCase::onNotSuccessfulTest(Exception $e) in /home/travis/build/phalcon/zephir/unit-tests/Extension/Issue1404Test.php on line 250\nCall Stack:\n    0.0002          0   1. {main}() /home/travis/build/phalcon/zephir/unit-tests/phpunit:0\n    0.0136          0   2. PHPUnit_TextUI_Command::main() /home/travis/build/phalcon/zephir/unit-tests/phpunit:38\n    0.0137          0   3. PHPUnit_TextUI_Command->run() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/TextUI/Command.php:100\n    0.2155          0   4. PHPUnit_Runner_BaseTestRunner->getTest() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/TextUI/Command.php:123\n    0.2470          0   5. PHPUnit_Framework_TestSuite->addTestFiles() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Runner/BaseTestRunner.php:58\n    0.7182          0   6. PHPUnit_Framework_TestSuite->addTestFile() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Framework/TestSuite.php:384\n    0.7187          0   7. PHPUnit_Util_Fileloader::checkAndLoad() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Framework/TestSuite.php:310\n    0.7188          0   8. PHPUnit_Util_Fileloader::load() /home/travis/build/phalcon/zephir/vendor/phpunit/phpunit/src/Util/Fileloader.php:38\nPlease take a look at https://travis-ci.org/phalcon/zephir/jobs/387499801. Actually I don't know why do we need these changes. As I know YAML works fine with string w/o spaces and they do not need escaping. Could you elaborate on this?. @danhunsaker Can you please try to sort out with this?. Could you adopt this to use in AppVeyor (Windows) too. suggestion\n            php \\. suggestion\n        - ./zephir.phar compile. @danhunsaker I simplified the .bat file. It's using %PHP_PEAR_PHP_BIN% because that's a global variable which may be set by PEAR. I just figure, if it's available anyway, why not use it; and in the other case, it will just try php, assuming most Windows users will have added that to their PATH.. suggestion\n     * @see https://docs.zephir-lang.com/latest/en/globals. suggestion. suggestion\n    \"description\": \"Description test for<br\\/>Test Extension\",. It is not Zephir. It is test extension. suggestion#define PHP_TEST_DESCRIPTION \"Description test for<br/>Test Extension\"\nIt is not Zephir. It is test extension. ```suggestion\ndefine PHP_TEST_NAME        \"Test Extension\"\n.suggestion\n    \"name\": \"Test Extension\",\n``. My bad I'll revert. @danhunsakerstriposthe same asstrtoupper(strtolower) +substr`, isn't. ",
    "Skpd": "./unit-tests/run_tests does not contain unit-tests/bitwise.php and I'm still getting erorrs when trying to compile bitwise tests:\n```\nParseException: Syntax error in zephir/test/bitwise.zep on line 18\n   c = a & b;\n---------^\n\n``\n. Agreed with @mruz, php codevar_dump(0 && 1 || 1);will producebool(true). Thanks, didn't see anything in docs about escaping operators.\n. os:Linux skpd-home 3.8.0-35-generic #50-Ubuntu SMP Tue Dec 3 01:24:59 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux`\ncompiler version '0e163bbbf0c620f06670e5b1def5c2766cf931b5' from 09-02-2014\nI can't show the code because it too big to dig it. This why I asking about the reasons why this can happened\n. fixed after update to the latest master\n. ",
    "marciopaiva": "@phalcon check this http://code.google.com/p/exceptions4c/\n. I vote B\nMaybe one tool to convert php to c extension :)\n. +1\n. plz post code.\n. Sry, i have not see that... trying to use stupid gui client and rebase make merge.\nReturning to command line.\n. CLOSED.\n. ",
    "endeveit": "@phalcon is it on a project roadmap?\n. ",
    "odiel": "I'm not an expert on Zephir, but I think you need to use 'let' like here:\nhttps://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/db/adapter.zep#L118\n. Ahh, great!\n. Ok, good, thanks.\n. For example: unset(_array[\"class\"]);\nSeems like the error is related to assoc arrays.\n. why it is required to use a namespace? \nyou should research about \"why you should use namespaces\", the good reasons will answer your question.\n. ",
    "musaulker": "Thank you @odiel . I've tried several things to pass syntax problem but also 'let' keyword didn't solved it. \nAlso you can learn more about let from documentation: http://zephir-lang.com/control.html#let\n. Thanks @zaets28rus but it looks like I cannot iterate result set coming from mysql.. \n. ",
    "wapmorgan": "Agree.\n. +1\n. works fine.\n. But also this constant does not work properly: STDSCR from ncurses extension.\nIt has variable value: before calling ncurses_init() it is null, after - resource. \n. yes\n. var is old, if zephir brings new features for developers (like fetch statement), dynamic can be one of these things. What you think?\n. It depends on what difference is. Same meaning in code, just another word. \n. ok\n. ``` php\nnamespace Shell;\nclass Test {\n    public function __construct() {\n        ncurses_init();\n    }\n    public function run() {\n        var window;\n        let window = ncurses_newwin(0, 0, 0, 0);\n        var width = 0, height = 0;\n        ncurses_getmaxyx(window, height, width);\n        return [height, width];\n    }\n    public function __destruct() {\n        ncurses_end();\n    }\n}\n```\nresult:\narray(2) {\n  [0] =>\n  int(0)\n  [1] =>\n  int(0)\n}\n. @nkt to make daemon at least.\nvar child_pid;\n        let child_pid = pcntl_fork();\n        if child_pid > 0 {\n            die();\n        }\n        posix_setsid();\n. @nkt thanks. I used anonymous function declared in php which beeing called in Zephir.\nThanks for Zephir. It's pretty cool!\n. Also, let statement does not work with dynamic class and property:\nlet {className}::{name} = value;\n. +1 preg_match_all\n. i though about something like this\nstruct Car {\n    string brand;\n    string model;\n    string engine;\n    int date;\n    ...\n}\nUsing it can be better for memory consumption.\n. and:\ngetObject() : null|Object\n. More likely we will see php 8 rather than traits. @nkt https://github.com/wapmorgan/php-shell-sources/blob/25a5a78f4d29597e0fd1d61711abdb608a3953f8/shell/widgets/progressbar.zep.c#L155\n. $ zephir version\n0.5.2a\n$ zephir build\nCompiling...\nInstalling...\nExtension installed!\nDon't forget to restart your web server\n$ php progress_test.php\nSegmentation fault (core dumped)....................................................................\n$ grep -A999 \"PHP_METHOD(Shell_Widgets_ProgressBar, progress) {\" ext/shell/widgets/progressbar.zep.c\n``` c\n    PHP_METHOD(Shell_Widgets_ProgressBar, progress) {\nzephir_nts_static zephir_fcall_cache_entry *_7 = NULL;\nzval *step_param = NULL, *_0, *_1, *_2, *_3, *_4, _5 = zval_used_for_init, *_6 = NULL, *_8, *_9, *_10 = NULL, *_11 = NULL;\nint step, filledWidth, unfilledWidth, ZEPHIR_LAST_CALL_STATUS;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 1, 0, &step_param);\n\nif (unlikely(Z_TYPE_P(step_param) != IS_LONG)) {\n    zephir_throw_exception_string(spl_ce_InvalidArgumentException, SL(\"Parameter 'step' must be a long/integer\") TSRMLS_CC);\n    RETURN_MM_NULL();\n}\n\nstep = Z_LVAL_P(step_param);\n\nphp_printf(\"\\r\");\n_0 = zephir_fetch_nproperty_this(this_ptr, SL(\"totalSteps\"), PH_NOISY_CC);\nif (ZEPHIR_GT_LONG(_0, step)) {\n    _1 = zephir_fetch_nproperty_this(this_ptr, SL(\"width\"), PH_NOISY_CC);\n    _2 = zephir_fetch_nproperty_this(this_ptr, SL(\"totalSteps\"), PH_NOISY_CC);\n    filledWidth = ((((zephir_get_numberval(_1) - 1)) / zephir_get_numberval(_2)) * step);\n    _3 = zephir_fetch_nproperty_this(this_ptr, SL(\"width\"), PH_NOISY_CC);\n    unfilledWidth = (((zephir_get_numberval(_3) - 1)) - filledWidth);\n    _4 = zephir_fetch_nproperty_this(this_ptr, SL(\"filledChar\"), PH_NOISY_CC);\n    ZEPHIR_SINIT_VAR(_5);\n    ZVAL_LONG(&_5, filledWidth);\n    ZEPHIR_CALL_FUNCTION(&_6, \"str_repeat\", &_7, _4, &_5);\n    zephir_check_call_status();\n    _8 = zephir_fetch_nproperty_this(this_ptr, SL(\"arrow\"), PH_NOISY_CC);\n    _9 = zephir_fetch_nproperty_this(this_ptr, SL(\"unfilledChar\"), PH_NOISY_CC);\n    ZEPHIR_SINIT_NVAR(_5);\n    ZVAL_LONG(&_5, unfilledWidth);\n    ZEPHIR_CALL_FUNCTION(&_10, \"str_repeat\", &_7, _9, &_5);\n    zephir_check_call_status();\n    ZEPHIR_INIT_VAR(_11);\n    ZEPHIR_CONCAT_VVV(_11, _6, _8, _10);\n    zend_print_zval(_11, 0);\n_1 = zephir_fetch_nproperty_this(this_ptr, SL(\"totalSteps\"), PH_NOISY_CC);\n} else if (ZEPHIR_IS_LONG_IDENTICAL(_1, step)) {\n    _2 = zephir_fetch_nproperty_this(this_ptr, SL(\"filledChar\"), PH_NOISY_CC);\n    _3 = zephir_fetch_nproperty_this(this_ptr, SL(\"width\"), PH_NOISY_CC);\n    ZEPHIR_CALL_FUNCTION(&_6, \"str_repeat\", &_7, _2, _3);\n    zephir_check_call_status();\n    ZEPHIR_INIT_LNVAR(_11);\n    ZEPHIR_CONCAT_VS(_11, _6, \"\\n\");\n    zend_print_zval(_11, 0);\n} else {\n    _1 = zephir_fetch_nproperty_this(this_ptr, SL(\"unfilledChar\"), PH_NOISY_CC);\n    _2 = zephir_fetch_nproperty_this(this_ptr, SL(\"width\"), PH_NOISY_CC);\n    ZEPHIR_CALL_FUNCTION(&_6, \"str_repeat\", &_7, _1, _2);\n    zephir_check_call_status();\n    zend_print_zval(_6, 0);\n}\nZEPHIR_MM_RESTORE();\n\n}\n\n```\n. compile language by itself. It's good idea. \nI am not sure what it's called: https://en.wikipedia.org/wiki/Interpreter_(computing)#Self-interpreter, https://en.wikipedia.org/wiki/Self-hosting or https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BA%D1%80%D1%83%D1%82%D0%BA%D0%B0_%D0%BA%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%B0\n. phalcon, how?\n. no, I need null in return statement.\n. I already tried\nzephir\n<Class> ins = null;\nif ... {\n        ins = new Class();\n}\nreturn ins;\nok.\n. What type of test I should do? I say, if I add var_dump before returning an object, it shows array with all indexes.\narray(7) {\n  [0]=>\n  string(4) \"root\"\n  [1]=>\n  string(1) \"x\"\n  [2]=>\n  string(1) \"0\"\n  [3]=>\n  string(1) \"0\"\n  [4]=>\n  string(4) \"root\"\n  [5]=>\n  string(5) \"/root\"\n  [6]=>\n  string(9) \"/bin/bash\"\n}\n. steffengy, Have downloaded latest zephir-parser.exe and replaced original one.\nManually removed .temp dir.\nfullclean command says \"system can't found that path\" three times.\nResult of build didn't change.\n. steffengy, Yes, it is Windows-related.\nExample code that does not work under win, but does under linux.\nhttps://github.com/php-fa/zephir-test\nOn linux:\nsh\ngit clone https://github.com/php-fa/zephir-test wapmorgan\nzephir init wapmorgan\ncd wapmorgan\nzephir compile\nAnd result is\nPreparing for PHP compilation ...\n...\nUnder windows:\nsh\ngit clone https://github.com/php-fa/zephir-test wapmorgan\nzephir init wapmorgan\ncd wapmorgan\nzephir compile\nAnd output is\nZephir\\Exception: Cannot parse file: C:\\Users\\...\\Documents\\wapmorgan\\wapmorg\nan\\zephirtranslator\\FileSearcher.zep\n. ",
    "lstrojny": "Wouldn\u2019t proper destructuring be more desirable?\nleft, right = getimagesize(...}\n. ",
    "thaJeztah": "I may actually prefer let [a, b, c] = arr.\nIt may be just me, but I would (at a glance) interpret \nlet a, b, c = arr \nas\nlet a = arr; let b = arr; let c = arr;\nThe extra brackets would hint at 'something extra is performed here' when scanning code.\n. Seem like this /(http|https|ftp):\\\\/\\\\/([a-z0-9\\\\-\\\\.\\\\/]+))/ has one ) too many and should be /(http|https|ftp):\\\\/\\\\/([a-z0-9\\\\-\\\\.\\\\/]+)/ (just at a glance)\nHowever, I don't think these questions really belong in the zephir issue tracker, as these are common regexp and escaping issues. I doubt the same code worked correctly on plain PHP.\n. @ovr and what, exactly is the problem of having an .editorconfig, I don't think adding just one file will be problematic. If your IDE doesn't support it, or you decide not to use it, that's fine, others might use it.\nI do agree that adding an .editorconfig does not say that a \"coding style / standards\" section shouldn't be included in the docs. Adding such a section is (IMO) something that must always be present in an open source project.\n. @ovr well;\n\n..... in contributed code.\n\nI do write code. So far, not in this project, but having an open source project on GitHub and allowing people to contribute via PR's, I don't think this will only apply to 'core' developers?\nAnyway, I'm fine with either decision (I'm currently only following the project, no contributing so far), was just a bit surprised by your aversion to a .editorconfig file. Sure, it doesn't solve all things, but if somebody decides to fork the project and his/her editor does support it, it may prevent some formatting-errors and (thus) some time.\n:smile:\n. > It is imperative that we start with a good structure in terms of standards so that we don't end up with technical debt later on.\n:+1: \n. Just an \"outsider\" opinion, and I cannot comment on C code styling (not a C code);\nI'm :+1: on spaces;\n- as mentioned, they are becoming the standard and (with modern IDE's) just as easy to use as tabs\n- less confusion over the tab-width being used (3 or 4), because that's directly visible when using spaces (with tabs this may not become directly visible)\n- formatting is always correct, in any editor/viewer/diff-tool\n- subjective; \"cleaner\" look when having white space \"visible\" in the IDE, because tabs/spaces are not mixed. For example, when using tabs, it's always necessary to have a tab followed by a space to correctly indent a \"DockBlock\";\n[tab]/**\n[tab] *   <- tab + space\n[tab] *   <- tab + space\n[tab] */  <- tab + space\nAs said, just my opinion and I'm basically an \"outsider\", so feel welcome to ignore!\n. I don't want to start yet-another tabs vs spaces flame-war. I was 100% in the 'tabs' camp in the past (and for some of the reasons mentioned), but in the end switched to spaces. I'll try to explain by commenting on those points;\nFirst of all I mentioned this;\n\n...and (with modern IDE's) just as easy to use as tabs\n\nWhich probably \"solves\" these points; \"are more productive, why type 4 spaces when ye can hit 1 tab.\", \"take less time to go through.\" and \"tend to work better in IDEs.\"\n\nthey are customizable..\n\nWhen defining a coding standard, that's exactly what you don't want to happen. Code on my screen should look the same as on your screen. Don't get me wrong here, I used to think like that, but discovered that developers started to correct other things (re-flowing / wrapping lines because the 80 character limit) because they used a different tab-width, or adjusting tab-width (2 spaces) so that more code could fit on a line.\n\n..they are only used for indentation, \n\nNot sure if that's the case. When using tabs, I found that tabs were also used to align code, causing the code to re-flow when viewing it with a different tab-width than the developer who wrote it.\nI'm not really sure how to interpret the animation (it does look nice);\n- are the animated blocks using tabs? (If so, then tabs are not only used for indentation)\n- if so, does that mean that the tab-width is dynamically adjusted?\n- if the tab-width is dynamically adjusted, how is the red block adjusted without affecting the yellow indentation (which is in the same \"position\")? This seems technically not possible, unless tab-width is adjusted on a line-by-line basis (and how to save that setting together with your code, without using a meta-data sidecar file)\nIn practice, what I see happening is (assuming \"fred\" and \"wilma\" are aligned with tabs)\n```\nint someDemoCode( int fred,\n                  int wilma)\n// adding some code, will make Fred jump to the next tab-stop\nint someDemoCodemm(    int fred,\n                  int wilma)\n```\nOr, if there's a [space] before Fred, but [tabs] before Wilma\nint someDemoCodemm( int fred,\n                    int wilma) // <- added two spaces to make wilma align again\n                               //    so now there's mixed [tabs] and [spaces] \n                               //    for indentation\nHope these comments are useful for you to make a decision.\n. ",
    "aschwin": "Is there a decision already for this issue?\n. I figure there are three ways to use traits within Zephir:\n1. As Zephir traits to add functionality for Zephir classes\n2. As PHP traits to add functionality for PHP classes\n3. As a combination of both\nI think no.3 is powerful, but confusing. I think no.1 is nice, but I think most useful would be no.2? Best would be both no.1 and no.2, where 1 trait is not both for Zephir and PHP.\nLike suggested it would be good to make them distinct: mixin for Zephir (no.1), trait for PHP (no.2). No.3 would be implicit be no.1 and no.2. That is confusing. I think if functionality is shared, a no.2 that implements no.1 for example would be better maintainable.\n. What is the status of this? It is not closed yet, but is someone still working on this?\n. Thanks @steffengy. Sorry, that I didn't find the duplicate myself.\n. ",
    "gggeek": "will give it a spin (try to get a vc11 build) if I have enough time - dont hold your breath though\n. Mmm, 1st blocker: usage of strndup, which is not in windows.\nIt seems that 2 workarounds would be possible:\n1. rewrite code to avoid it\n2. implement it directly inside zefir, inside an ifdef\nFor 2, I found different versions online, not sure which one could/should be picked:\nhttp://research.microsoft.com/en-us/um/redmond/projects/invisible/src/crt/strndup.c.htm (nonfree?)\nhttps://github.com/zeromq/czmq/pull/275/files\nhttp://bytes.com/topic/c/answers/572347-strndup-rfc\nhttp://code.google.com/p/madp-win/source/browse/src/argp-standalone-1.3/strndup.c\nhttp://hg.pdclib.e43.eu/pdclib/src/d3ee6af748fa/functions/string/strndup.c\nhttp://svn.abisource.com/link-grammar/trunk/link-grammar/utilities.c\nhttp://www.zomeon.com/2375041/how-do-i-fix-the-build-for-mod_mono-when-it-cannot-find-strndup-on-freebsd\n. ",
    "damienalexandre": "I have a similar issue with this code;\n``` php\nnamespace Jolicoucou;\nclass Coucou\n{\n    private test;\npublic function __construct()\n{\n    let this->test = [];\n}\n\npublic function test(string! name, long! order, string data)\n{\n    // Zephir\\ParseException: Syntax error\n    //let this->test[name][order][] = data;\n\n    var tmp;\n\n\n    if isset this->test[name][order] {\n        let tmp = this->test[name][order];\n    } else {\n        let tmp = [];\n    }\n\n    let tmp[] = data;\n    let this->test[name][order] = tmp;\n}\n\n}\n```\nBeside the fact we can't use let this->test[name][order][] = data;, the main issue is that when the key is numeric, array in test does not get replaced by tmp but completed. Here is an example:\n\nphp -r '$t = new Jolicoucou\\Coucou(); $t->test(\"foo.bar\", 22, \"VALUE1\");$t->test(\"foo.bar\", 22, \"VALUE2\");'\n\nI expect to have:\narray(2) {\n  [0]=>\n  string(6) \"VALUE1\"\n  [1]=>\n  string(6) \"VALUE2\"\n}\nin the this->test[name][order] value, but instead I have:\narray(2) {\n  [0]=>\n  string(6) \"VALUE1\"\n  [22]=>\n  array(2) {\n    [0]=>\n    string(6) \"VALUE1\"\n    [1]=>\n    string(6) \"VALUE2\"\n  }\n}\n. :+1: \nThis is throwing this error: ParseException: Unexpected EOF with this end of file:\n```\n/*\nThis produces parse error\n\n*/\n}\n```\n. Looks better but still errored; I got this as output:\nCopying new kernel files...\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\n/home/dalexandre/Dev/Zephir/jolicoucou/ext/jolicoucou/coucou.c: In function 'zephir_Jolicoucou_Coucou_init':\n/home/dalexandre/Dev/Zephir/jolicoucou/ext/jolicoucou/coucou.c:23:59: error: 'zend_ce_IteratorAggregate' undeclared (first use in this function)\n  zend_class_implements(jolicoucou_coucou_ce TSRMLS_CC, 1, zend_ce_IteratorAggregate);\n                                                           ^\n/home/dalexandre/Dev/Zephir/jolicoucou/ext/jolicoucou/coucou.c:23:59: note: each undeclared identifier is reported only once for each function it appears in\nmake: *** [jolicoucou/coucou.lo] Error 1\nInstalling...\nExtension installed!\nDon't forget to restart your web server\nAlso I had to change a little bit the code used because of an CompilerException: Invalid data type: empty-array error, there is the new test class:\n```\nnamespace Jolicoucou;\nclass Coucou implements \\IteratorAggregate\n{\n    public function getIterator()\n    {\n        var test;\n        let test = [];\n        return new \\ArrayIterator(test);\n    }\n}\n```\n. Looks better! Compilation is passing now! :+1: \n. Do not know if the choice is made already but I vote c;\nI do not see any valid use-case for a Zephir to PHP translation, framework like Phalcon are chosen because of the extension mode and speed in the first place,\nand having both PHP mode & C extensions will introduce a lot of new bugs (I do not think relying on unit test will be enough).\nWhat I want for the future of Zephir is more tooling for a PHP to Zephir rewrite: that's how we can help the community: allowing fast extension creation for PHP librairies and frameworks.\nMy 2cts :metal: \n. Guys I'm pleased to announce that the SegFault is gone! I just updated to the latest master and the code run smoothly now - :beers: !\nI have another issue now with private methods that look messed up (https://travis-ci.org/jolicode/symfony2-eventdispatcher-extension/builds/19743223), but this is another issue. I close this one. Thx!\n. Thx \\o/\n. My PHP example is running, but your's is not; maybe I need a coffee but I do not see what is the difference between the two PHP examples :neckbeard: \n. Ah yes didn't see that thank.\nMy issue is not about trying to call a constructor. Renaming foo to toto make this code works in PHP:\n``` php\n<?php\nclass Foo\n{\n    public function bar()\n    {\n        $this->toto();\n    }\nprivate function toto()\n{\n    echo 1;\n}\n\n}\nclass Bar extends Foo\n{\n    public function test()\n    {\n        $this->bar();\n    }\n}\n$b = new Bar;\n$b->test();\n```\nBut Zephir is handling private method differently and we can't implement this example with it. \n. ",
    "tamaranga": "@phalcon in php 'AND' precedence is higher than 'OR'\nhttp://www.php.net/manual/en/language.operators.precedence.php\nas i understood 0 && 1 || 1 must be the same as (0 && 1) || 1\n. to reproduce:\nvar a = 0, b;\nlet b = ceil(2 / 2);\nif a == b {\n    // some code\n}\n. Now it's correct.\nAs i understood, from now, parameter will be cast to the appropriate type and where is no need to check it with \"typeof\", if type was mentioned.\n. @racklin, hi\nc code generated by branch: https://github.com/racklin/zephir/tree/bugfix/144:\n```\n    zval m1, m2, *_0;\nZEPHIR_MM_GROW();\n\nZEPHIR_INIT_VAR(_0);\nZVAL_LONG(_0, 1);\nZEPHIR_INIT_VAR(m1);\nzephir_call_method_p1(m1, this_ptr, \"testmatchall\", _0);\nZEPHIR_INIT_BNVAR(_0);\nZVAL_LONG(_0, 2);\nZEPHIR_INIT_VAR(m2);\nzephir_call_method_p1(m2, this_ptr, \"testmatchall\", _0);\nzephir_call_func_p1_noret(\"print_r\", m1);\nzephir_call_func_p1_noret(\"print_r\", m2);\nZEPHIR_MM_RESTORE();\n\n```\nAs we can see flags are correct: (PREG_PATTERN_ORDER = 1, PREG_SET_ORDER = 2)\nBut testMatchAllInZep returns:\nArray ( \n  [0] => Array ( [0] => test1 [1] => test2 ) \n  [1] => Array ( [0] => test1 [1] => test2 ) \n) \nArray ( \n  [0] => Array ( [0] => test1 [1] => test2 ) \n  [1] => Array ( [0] => test1 [1] => test2 ) \n)\nSo results are the same, but must be different.\n. @racklin\nphp 5.3.15\npcre 8.02 2010-03-19 (phpinfo)\nInteresting that in \"php\" preg_match_all returns correct results.\nMaybe i have wrong pcre version, whitch is used by zephir (if different), i do not know where to see this one.\n. it's ok now\n. I vote 4, prop.\nOther variants are similar to Passing by Reference and that is wrong.\n. Very important feature.\nhttp://php.net/manual/en/language.oop5.late-static-bindings.php\n. ",
    "MarkBaker": "It's executing the loop now, which is the good news; but executing one more iteration than it should (as though testing for <= rather than <: I added another echo i immediately after the echo \"In while loop\" of my previous example, and am getting the following output:\nkey=[adder]\nkeyLen=[5]\ni=[0]\nIn while loop\ni=[0]\nIn while loop\ni=[1]\nIn while loop\ni=[2]\nIn while loop\ni=[3]\nIn while loop\ni=[4]\nIn while loop\ni=[5]\n. I can't make any guarantees that it will work in all such comparisons, but commit 2727dc8e54f0c5a5d503547be2e2c37c230ec813 seems to have resolved my problem with the while (i < keyLen) loop, which now executes the correct number of iteration.\nThanks\n. There's a whole lot more code, that was just one class that comprised part of the evaluator package, I was just guessing that it might be the problem because it was the only class that used the PHP pow() function. However, power.zep.c is\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../../ext_config.h\"\nendif\ninclude \ninclude \"../../php_ext.h\"\ninclude \"../../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/fcall.h\"\ninclude \"kernel/math.h\"\nZEPHIR_INIT_CLASS(Evaluator_Operators_Power) {\n    ZEPHIR_REGISTER_CLASS_EX(Evaluator\\\\Operators, Power, evaluator, operators_power, evaluator_operators_operator_ce, evaluator_operators_power_method_entry, 0);\n\n    zend_declare_property_long(evaluator_operators_power_ce, SL(\"precedence\"), 6, ZEND_ACC_PROTECTED TSRMLS_CC);\n\n    return SUCCESS;\n\n}\nPHP_METHOD(Evaluator_Operators_Power, operate) {\n    int ZEPHIR_LAST_CALL_STATUS;\n    zval *stack, *left = NULL, *right = NULL, *_0 = NULL, *_1 = NULL;\n\n    ZEPHIR_MM_GROW();\n    zephir_fetch_params(1, 1, 0, &stack);\n\n\n\n    ZEPHIR_CALL_METHOD(&_0, stack, \"pop\", NULL, 0);\n    zephir_check_call_status();\n    ZEPHIR_CALL_METHOD(&left, _0, \"operate\", NULL, 0, stack);\n    zephir_check_call_status();\n    ZEPHIR_CALL_METHOD(&_1, stack, \"pop\", NULL, 4);\n    zephir_check_call_status();\n    ZEPHIR_CALL_METHOD(&right, _1, \"operate\", NULL, 0, stack);\n    zephir_check_call_status();\n    zephir_pow_function(return_value, right, left);\n    RETURN_MM();\n\n}\n```\nand does indeed contain the call to zephir_pow_function()\n. The power.zep.c file now has\n```\ninclude \"kernel/operators.h\"\n```\ninstead of\n```\ninclude \"kernel/math.h\"\n```\nJust need to figure out why the zephir install is failing on me\n. I've moved the evaluator.so manually from ext/modules to /usr/lib/php5/20131226/evaluator.so and added evaluator.so back into my php.ini.\nA php -m now runs correctly, and reports that evaluator is installed as a module.\nRunning my tests now fails with a runtime exception, but I guess that's an error in my conversion from native PHP and implementation of the classes in the Zephir language.\n. Confirming that the change to kernel/operators from kernel/math worked. I'm guessing that it's related to the fact that ** is now an operator in PHP > 5.6.0, and I'm using 5.6\n. Not easily, because it's a fairly large script, and I can't easily identify what part of my code is triggering that call to Zephir\\Operators\\Comparison\\GreaterOperator to generate the notice; but I'll try to track it down based on the assumption that it's being triggered by a >\nThe most likely (guessing) is a block of code:\n```\n    public function add(key, value = null)\n    {\n        var trieNodeEntry;\n    if key > \"\" {\n        let trieNodeEntry = this->getTrieNodeByKey(key, true);\n\n        if trieNodeEntry->value === null {\n            let trieNodeEntry->value = [value];\n        } else {\n            array_push(trieNodeEntry->value, value);\n        }\n    } else {\n        throw new \\InvalidArgumentException(\"Key value must not be empty\");\n    }\n}\n\n```\nand the\nif key > \"\" {\ncheck inside that\nChanging that line of code to\nif !empty(key) {\neliminates the compiler notice\n. It may not be good practise, but it's common practise; and should perhaps at the very least be documented suggesting to use !empty as an alternative for those who are used to using > '' in PHP.... but I wouldn't expect the compiler to give a notice either, but perhaps flag it as an error when compiling so that it's more obvious that the comparison should be changed\n. Bingo, that works thanks.... is it documented anywhere?\n. Thanks for that.\nI'm still using the tagged 0.7.1 release, but I've put a TODO in my code noting that it will be available when I move on to 0.8\n. From a git pull of the master branch:\nWhen I run zephir compile I'm seeing\nPHP Notice:  Undefined property: Zephir\\Operators\\Comparison\\GreaterEqualOperator::$_zvalDoubleNegOperator in /home/vagrant/zephir/Library/Operators/Comparison/ComparisonBaseOperator.php on line 459\nPHP Notice:  Undefined property: Zephir\\Operators\\Comparison\\LessEqualOperator::$_zvalDoubleNegOperator in /home/vagrant/zephir/Library/Operators/Comparison/ComparisonBaseOperator.php on line 459\nPHP Notice:  Undefined property: Zephir\\Operators\\Comparison\\GreaterEqualOperator::$_zvalDoubleNegOperator in /home/vagrant/zephir/Library/Operators/Comparison/ComparisonBaseOperator.php on line 459\nPHP Notice:  Undefined property: Zephir\\Operators\\Comparison\\LessEqualOperator::$_zvalDoubleNegOperator in /home/vagrant/zephir/Library/Operators/Comparison/ComparisonBaseOperator.php on line 459\nGenerates code in the zep.c file now reads:\n```\nPHP_METHOD(QuadTrees_QuadTreeBoundingBox, isXinRange) {\n    zend_bool _6;\n    zephir_fcall_cache_entry *_1 = NULL, *_3 = NULL;\n    int ZEPHIR_LAST_CALL_STATUS;\n    zval *pointX_param = NULL, *_0 = NULL, *_2 = NULL, *_4, *_5 = NULL, *_7 = NULL;\n    double pointX;\n\n    ZEPHIR_MM_GROW();\n    zephir_fetch_params(1, 1, 0, &pointX_param);\n\n    pointX = zephir_get_doubleval(pointX_param);\n\n\n    php_printf(\"%s\", \"Testing \");\n    php_printf(\"%f\", pointX);\n    php_printf(\"%s\", \" is between \");\n    ZEPHIR_CALL_METHOD(&_0, this_ptr, \"startx\", &_1, 0);\n    zephir_check_call_status();\n    zend_print_zval(_0, 0);\n    php_printf(\"%s\", \" and \");\n    ZEPHIR_CALL_METHOD(&_2, this_ptr, \"endx\", &_3, 0);\n    zephir_check_call_status();\n    zend_print_zval(_2, 0);\n    ZEPHIR_INIT_VAR(_4);\n    ZEPHIR_GET_CONSTANT(_4, \"PHP_EOL\");\n    zend_print_zval(_4, 0);\n    ZEPHIR_CALL_METHOD(&_5, this_ptr, \"startx\", &_1, 0);\n    zephir_check_call_status();\n    _6 = (_5, pointX);\n    if (_6) {\n            ZEPHIR_CALL_METHOD(&_7, this_ptr, \"endx\", &_3, 0);\n            zephir_check_call_status();\n            _6 = (_7, pointX);\n    }\n    RETURN_MM_BOOL(_6);\n\n}\n``\n. Patching theLibrary/Operators/Comparison/ComparisonBaseOperator.phpcode with_zvalLongNegOperatorinstead of_zvalDoubleNegOperator` works for me; though I don't know if that's the correct solution for all situations.\nNow I just need to figure out why my original PHP implementation is missing the first matching record for the search whereas the zephir version (correctly) retrieves it.\n. That's what concerned me: for the simple comparison to return a Boolean in my case, it isn't an issue, and allows me to test the rest of my library, but I don't believe that it's a solution for all cases\n. That's working well now thanks. The library builds cleanly, and all tests run successfully, returning exactly the expected result.\nThank you for your quick response, and all your hard work on Zephir: it is much appreciated\n. I'll certainly provide more feedback/issues/bugs\nI'm running a workshop on using Zephir to build PHP extensions (converting from basic PHP Classes) at the PHPNW2015 conference in Manchester next weekend, so I needed to ensure that all my examples worked before putting them to the delegates.... for posterity, I'm posting them on github as well (https://github.com/MarkBaker?tab=repositories) and this completes the QuadTree implementation that I'll be pushing up there later this evening\n. ",
    "amnuts": "I have to admit to not seeing that paragraph!  In which case the documentation may need a little tweak because the sentence reads, \"In Zephir, multi-line comments are also used as docblocks...\" - the keyword there being 'also', suggesting they can be used as normal comment as well as docblocks.\nAlso, think about this rather pointless example:\n``` zephir\nnamespace Test;\n/\n * Helpful docblock\n \n * @todo Code this thing\n /\nclass PointlessClass\n{\n    public function isarray(var arr)\n    {\n        if (is_array(arr)) {\n            echo \"Yes, this is an array\";\n        } else {\n            echo \"Nope, not an array\";\n        }\n   /**\n    Probably not useful here\n    */\n}\n\n}\n/\nProbably quite pointless docblock here, too\n/\n```\nAll valid, but possibly not useful docblocks?\nWhat I thought was a valid use of multi-line comments, and the reason why I stumbled on this, was being able to comment out blocks of code for I quickly tried something without having to delete all the code and put it back again:\n``` zephir\nnamespace Test;\nclass PointlessClass\n{\n    public function isarray(var arr)\n    {\n        if (is_array(arr)) {\n            echo \"Yes, this is an array\";\n        } else {\n            echo \"Nope, not an array\";\n        }\n    }\n/*\n    private function notReady()\n    {\n        // lots of code here\n    }\npublic function keepForNowButDoNotUse()\n{\n    // lots of code here\n}\n\npublic function loadsMore()\n{\n    // lots of code here\n}\n\n*/\n}\n```\nJust my opinion, of course, but if you can support both uses that'd be great! ;-)\n. ",
    "seb777": "I agree with @amnuts\n. +1\n. ",
    "sjinks": "Works in the most current master, closing. Right now only PHP 5.4, 5.5, and 7.0 is affected. This has been implemented, closing.. Closing in favor of #1503. ==32349== Conditional jump or move depends on uninitialised value(s)\n==32349==    at 0x10837BE9: zim_Test_Bench_Foo_assignAddProp (/home/vladimir/workspace/zephir/ext/test/bench/foo.zep.c:347)\n==32349==    by 0x9B3EAC: ZEND_DO_FCALL_SPEC_HANDLER (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:842)\n==32349==    by 0x9B27B3: execute_ex (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:414)\n==32349==    by 0x9B29B4: zend_execute (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:458)\n==32349==    by 0x9498AF: zend_execute_scripts (/tmp/php-build/source/7.0.17/Zend/zend.c:1443)\n==32349==    by 0x884197: php_execute_script (/tmp/php-build/source/7.0.17/main/main.c:2492)\n==32349==    by 0xA225FF: do_cli (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:977)\n==32349==    by 0xA23AA2: main (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:1347)\n==32349==  Uninitialised value was created by a stack allocation\n==32349==    at 0x108376F2: zim_Test_Bench_Foo_assignAddProp (/home/vladimir/workspace/zephir/ext/test/bench/foo.zep.c:312)\n==32349==\n==32349== Conditional jump or move depends on uninitialised value(s)\n==32349==    at 0x10837C03: zim_Test_Bench_Foo_assignAddProp (/home/vladimir/workspace/zephir/ext/test/bench/foo.zep.c:347)\n==32349==    by 0x9B3EAC: ZEND_DO_FCALL_SPEC_HANDLER (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:842)\n==32349==    by 0x9B27B3: execute_ex (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:414)\n==32349==    by 0x9B29B4: zend_execute (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:458)\n==32349==    by 0x9498AF: zend_execute_scripts (/tmp/php-build/source/7.0.17/Zend/zend.c:1443)\n==32349==    by 0x884197: php_execute_script (/tmp/php-build/source/7.0.17/main/main.c:2492)\n==32349==    by 0xA225FF: do_cli (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:977)\n==32349==    by 0xA23AA2: main (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:1347)\n==32349==  Uninitialised value was created by a stack allocation\n==32349==    at 0x108376F2: zim_Test_Bench_Foo_assignAddProp (/home/vladimir/workspace/zephir/ext/test/bench/foo.zep.c:312)\n==32349==\n. ```\nPHP Fatal error:  Uncaught Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trac in /home/vladimir/workspace/zephir/unit-tests/microbench.php on line 79\nFatal error: Uncaught Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\nStack trace:\n0 /home/vladimir/workspace/zephir/unit-tests/microbench.php(79): Test\\Bench\\Foo->assignAddProp(500)\n1 {main}\nNext Error: Unsupported operand types in /home/vladimir/workspace/zephir/unit-tests/microbench.php:79\n```. Closing, see #1499\n. I don't think that the fix is correct. start_memory and end_memory were the bounds for the preallocated memory frames. Preallocated memory frames persist between requests and were used to improve performance (memory allocation is not cheap).\nc\nint persistent = (frame >= g->start_memory && frame < g->end_memory);\nvoid *buf = perealloc(frame->addresses, sizeof(zval **) * (frame->capacity + 16), persistent);\n. Fixed in efeaa0ee6c1bd005fe3d175e83444b7ec93603da. OK, what we have right now:\n```c\nPHP_METHOD(Test_Exceptions, issue1325) {\n        zval e = NULL, status = NULL, *_0;\n        int ZEPHIR_LAST_CALL_STATUS;\n    ZEPHIR_MM_GROW();\n\n    /* try_start_1: */\n\n            ZEPHIR_CALL_METHOD(&status, this_ptr, \"donoopexception\", NULL, 25);\n            zephir_check_call_status_or_jump(try_end_1);\n\n    try_end_1:\n\n    if (EG(exception)) {\n            ZEPHIR_INIT_VAR(_0);\n            ZEPHIR_CPY_WRT(_0, EG(exception));\n            if (zephir_instance_of_ev(_0, zend_exception_get_default(TSRMLS_C) TSRMLS_CC)) {\n                    zend_clear_exception(TSRMLS_C);\n                    ZEPHIR_CPY_WRT(e, _0);\n                    ZEPHIR_INIT_NVAR(status);\n                    ZVAL_STRING(status, \"woop\", 1);\n            }\n    }\n    RETURN_MM_LONG(1);\n\n}\nPHP_METHOD(Test_Exceptions, doNoopException) {\n        ZEPHIR_THROW_EXCEPTION_DEBUG_STRW(zend_exception_get_default(TSRMLS_C), \"I am exception\", \"test/exceptions.zep\", 140);\n        return;\n}\n```\n. Fixed in b7fa2f45bb281039d56f7421ae90dfc2edfcf9d7. The issue with multiple catch blocks has been fixed in 122853b3d1babeb41bab07865e6593daaea82359. In ZE3 (php 7.x) this should work, I believe. Does the crash still happen in ZE2?. Well, at least after #1415 is merged. I think PHP does that at compile time\u2026\nNot sure if it is possible to implement this in Zephir as namespaced functions are mangled.\nSay, test\\test_func becomes test_test_func.\nAnd it seems like test\\test\\func becomes test_test_func either :-)\n. Namespace is a syntactic sugar, there is no notion of namespaces at run time :-(. PHP 7.0:\n```c\n    zval _0;\n    int tmp;\n    zval *this_ptr = getThis();\nZVAL_UNDEF(&_0);\n\nZEPHIR_MM_GROW();\n\ntmp = 2147483648;\nZEPHIR_INIT_VAR(&_0);\nZEPHIR_INIT_NVAR(&_0);\nZVAL_LONG(&_0, tmp);\nzephir_var_dump(&_0 TSRMLS_CC);\nZEPHIR_MM_RESTORE();\n\n```\nzend_long should be used instead of int.\n. ```\nZEPHIR_MM_GROW() must be called before using any of MM functions or macros!\n0  0x7f4d11391825 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/lib/php/extensions/debug-zts-20151012/test.so(zephir_print_backtrace+0x2b) [0x7f4d11391825]]\n1  0x7f4d1139035e [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/lib/php/extensions/debug-zts-20151012/test.so(+0xe0e35e) [0x7f4d1139035e]]\n2  0x7f4d113904ad [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/lib/php/extensions/debug-zts-20151012/test.so(zephir_memory_alloc+0x44) [0x7f4d113904ad]]\n3  0x7f4d113b69ef [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/lib/php/extensions/debug-zts-20151012/test.so(zim_Test_Assign_testAssign1+0xa9) [0x7f4d113b69ef]]\n4  0x55c0407490bf [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(+0x8720bf) [0x55c0407490bf]]\n5  0x55c0407479c6 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(execute_ex+0x29) [0x55c0407479c6]]\n6  0x55c0406c41a8 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(zend_call_function+0xf67) [0x55c0406c41a8]]\n7  0x55c04039caa1 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(+0x4c5aa1) [0x55c04039caa1]]\n8  0x55c0407490bf [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(+0x8720bf) [0x55c0407490bf]]\n9  0x55c0407479c6 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(execute_ex+0x29) [0x55c0407479c6]]\n10  0x55c040747bc7 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(zend_execute+0x1e5) [0x55c040747bc7]]\n11  0x55c0406df3cf [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(zend_execute_scripts+0x1b7) [0x55c0406df3cf]]\n12  0x55c0406198e4 [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(php_execute_script+0x70b) [0x55c0406198e4]]\n13  0x55c0407b6feb [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(+0x8dffeb) [0x55c0407b6feb]]\n14  0x55c0407b848e [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(+0x8e148e) [0x55c0407b848e]]\n15  0x7f4d1a1ef3f1 [/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf1) [0x7f4d1a1ef3f1]]\n16  0x55c03fffc6ca [/home/vladimir/.phpenv/versions/7.0.9-zts-debug/bin/php(_start+0x2a) [0x55c03fffc6ca]]\n\u041f\u0435\u0440\u0435\u0440\u0432\u0430\u043d\u043e (\u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043d\u043e \u0437\u043d\u0456\u043c\u043e\u043a \u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0457 \u043f\u0430\u043c\u2019\u044f\u0442\u0456)\n```. testAssign because of\ndiff\n        public function testAssign1()\n        {\n-               int a;\n-               let a = 1;\n-               return a;\n+//             int a;\n+//             let a = 1;\n+               die(\"HELLo!\");\n+//             return a;\n        }. Generated code:\n```\n        zval _0;\n        ZEPHIR_INIT_THIS();\n    ZVAL_UNDEF(&_0);\n\n    ZEPHIR_MM_GROW();\n\n    ZEPHIR_MM_RESTORE();\n    ZEPHIR_INIT_VAR(&_0);\n    ZVAL_STRING(&_0, \"HELLo!\");\n    zephir_exit(&_0);\n    ZEPHIR_MM_RESTORE();\n\n```\nThe issue is in ZEPHIR_MM_RESTORE(); right before ZEPHIR_INIT_VAR.\n. Fixed in 1a3eb4bfaba11c104a2673746b98b52e509247a4. ==8101== Invalid read of size 1\n==8101==    at 0xF7B5A05: zend_string_dup (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF7B5EA2: zephir_get_called_class (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF79EAC3: zim_Issue1392_Model_testCalled3 (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF7A3D5B: zephir_call_function_opt (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF7AA886: zephir_call_user_function (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF7AAF38: zephir_call_class_method_aparams (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF79E64E: zephir_return_call_class_method (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0xF79E93C: zim_Issue1392_Model_testCalled (in /home/vladimir/workspace/zephir/1/issue1392/ext/issue1392.so)\n==8101==    by 0x9C0AD3: ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER (zend_vm_execute.h:1097)\n==8101==    by 0x9BE4D6: execute_ex (zend_vm_execute.h:429)\n==8101==    by 0x9BE6D7: zend_execute (zend_vm_execute.h:474)\n==8101==    by 0x950C79: zend_execute_scripts (zend.c:1474)\n==8101==  Address 0xfcd88e6a00000006 is not stack'd, malloc'd or (recently) free'd. No. As far as I can tell, the issue lies somewhere in zephir_call_user_function. If I replace testCalled's body with\n```c\n        zend_fcall_info fci;\n    fci.size = sizeof(fci);\n    fci.object = getThis() ? Z_OBJ_P(getThis()) : NULL;\n    ZVAL_STRING(&fci.function_name, \"testcalled3\");\n    fci.retval = return_value;\n    fci.param_count = 0;\n    fci.params = NULL;\n    fci.no_separation = 1;\n\n    zend_call_function(&fci, NULL);\n    return;\n\n```\nI get the expected behavior.\n. One of the issues:\n```c\nif PHP_VERSION_ID >= 70100\n            fcic.called_scope = obj_ce ? obj_ce : (EG(current_execute_data) ? Z_OBJ(EG(current_execute_data)->This) : NULL);\n\nendif\n```\nZ_OBJ returns zend_object* but zend_class_entry* is expected. That's a bit different issue (yet still a bug), I am still trying to find out where the scope is misset.. I suspect that this happens in zephir_call_function_opt, as commenting out all FCI cache-related things still produce the same result. It seems that the bad data come in zephir_fcall_info* parameter. Just to clarify: your extension and Zephir extension are two different extensions, correct?. Could you please make sure that your other extension has a dependency on your Zephir extension (ie, you have ZEND_MOD_REQUIRED() in your other extension)?\nThe most likely issue for the crash is that Zephir extension has not yet completed RINIT call and therefore has not initialized its internal structures; when your other extension calls a Zephir function, it crashes somewhere in ZEPHIR_MM_GROW() because Zephir's internal structures have not been initialized yet.. As far as I can tell, symbol tables in ZE3 are linked to the execution context, and it is not trivial to replace the existing symbol table with a newly created one.\nWhat I suggest is: because new symbol tables are used mostly to create an isolated scope for require and company, we add a new argument to zephir_require family:\nc\nint zephir_require_ret(zval *return_value_ptr, const char *require_path, zval * symbol_table) ZEPHIR_ATTR_NONNULL1(2);\nsymbol_table is supposed to be an array or NULL; if it is an array, it is used as a symbol table for the require'd file.\nThe issue is that this would introduce a change to Zephir syntax:\nrequire path, symtable\nor, as an alternative, we can create an optimizer for a function (say, require_with_symtable($file, $symtable = NULL)).\nWhat do you guys think?\n. php\n$symtable = ['var1' => 1, 'var2' => true, /* ... */];\nrequire_with_symtable('somefile.php', $symtable);\n// somefile.php sees only variables passed in the $symtable as local ones. Good question. No idea until I test. ```c\nstatic zend_array add_symtable(zend_execute_data ex)\n{\n    zend_array old_table;\n    zend_array symbol_table = (zend_array*)emalloc(sizeof(zend_array));\n    zend_hash_init(symbol_table, 0, NULL, ZVAL_PTR_DTOR, 0);\n    zend_hash_real_init(symbol_table, 0);\nzend_rebuild_symbol_table();\nzend_detach_symbol_table(ex);\nold_table = ex->symbol_table;\nex->symbol_table = symbol_table;\n\nreturn old_table;\n\n}\nstatic void restore_symtable(zend_execute_data ex, zend_array tbl)\n{\n    zend_hash_destroy(ex->symbol_table);\n    efree(ex->symbol_table);\n    ex->symbol_table = tbl;\n    zend_attach_symbol_table(ex);\n    zend_rebuild_symbol_table();\n}\n```\nIf add_symtable and del_symtable are implemented as Zend functions, they will need to use ex->prev_execute_data instead of ex.. OK, let us move to #1488 to discuss this further.. Looks good to me. Well done!. Looks like I should have committed this to #1411. Yes, sure - this is why I closed that PR and went to bed :-). It looks like\nc\ntest_globals->cache_enabled = 0;\nsolves the issue.\nBack to the drawing board :-(\n. If we disable cache slots, everything works. \n```patch\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 0e920e6..75fe800 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -206,15 +206,15 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n        }\n    if ((!cache_entry || !*cache_entry) && zephir_globals_ptr->cache_enabled) {\n\n\nif (cache_slot > 0) {\nif (zephir_globals_ptr->scache[cache_slot]) {\nreload_cache = 0;\ntemp_cache_entry = zephir_globals_ptr->scache[cache_slot];\nif (cache_entry) {\n*cache_entry = temp_cache_entry;\n}\n}\n}\n+//             if (cache_slot > 0) {\n+//                     if (zephir_globals_ptr->scache[cache_slot]) {\n+//                             reload_cache = 0;\n+//                             temp_cache_entry = zephir_globals_ptr->scache[cache_slot];\n+//                             if (cache_entry) {\n+//                                     *cache_entry = temp_cache_entry;\n+//                             }\n+//                     }\n+//             }        if (reload_cache) {\n                fcall_key_hash = zephir_make_fcall_key(&fcall_key, &fcall_key_len, (object_pp && type != zephir_fcall_ce ? Z_OBJCE_P(object_pp) : obj_ce), type, function_name);\n\n```\n. I would say the issue is in this part:\n\n\n```c\n    if (cache_entry && cache_entry) {\n    / We have a cache record, initialize scope */\n        fcic.initialized   = 1;\n        fcic.calling_scope = obj_ce;\n    if (object_pp) {\n        fcic.called_scope = Z_OBJCE_P(object_pp);\n    }\n    else {\n        zend_class_entry *called_scope;\n\nif PHP_VERSION_ID >= 70100\n        called_scope = zend_get_called_scope(EG(current_execute_data));\n\nelse\n        called_scope = EG(current_execute_data)->called_scope;\n\nendif\n        if (obj_ce && (!called_scope || instanceof_function(called_scope, obj_ce))) {\n            fcic.called_scope = obj_ce;\n        }\n        else {\n            fcic.called_scope = called_scope;\n        }\n    }\n\n    fcic.object = object_pp ? Z_OBJ_P(object_pp) : NULL;\n\nifndef ZEPHIR_RELEASE\n    fcic.function_handler = (*cache_entry)->f;\n    ++(*cache_entry)->times;\n\nelse\n    fcic.function_handler = *cache_entry;\n\nendif\n}\n\n```\nThis basically corresponds to the following code from zend_call_method:\n```c\n                zend_fcall_info_cache fcic;\n                ZVAL_UNDEF(&fci.function_name); / Unused /\n            fcic.initialized = 1;\n            if (!obj_ce) {\n                    obj_ce = object ? Z_OBJCE_P(object) : NULL;\n            }\n            if (!fn_proxy || !*fn_proxy) {\n                    HashTable *function_table = obj_ce ? &obj_ce->function_table : EG(function_table);\n                    fcic.function_handler = zend_hash_str_find_ptr(\n                            function_table, function_name, function_name_len);\n                    if (fcic.function_handler == NULL) {\n                            /* error at c-level */\n                            zend_error_noreturn(E_CORE_ERROR, \"Couldn't find implementation for method %s%s%s\", obj_ce ? ZSTR_VAL(obj_ce->name) : \"\", obj_ce ? \"::\" : \"\", function_name);\n                    }\n                    if (fn_proxy) {\n                            *fn_proxy = fcic.function_handler;\n                    }\n            } else {\n                    fcic.function_handler = *fn_proxy;\n            }\n\n            fcic.calling_scope = obj_ce;\n            if (object) {\n                    fcic.called_scope = Z_OBJCE_P(object);\n            } else {\n                    zend_class_entry *called_scope = zend_get_called_scope(EG(current_execute_data));\n\n                    if (obj_ce &&\n                        (!called_scope ||\n                         !instanceof_function(called_scope, obj_ce))) {\n                            fcic.called_scope = obj_ce;\n                    } else {\n                            fcic.called_scope = called_scope;\n                    }\n            }\n            fcic.object = object ? Z_OBJ_P(object) : NULL;\n\n```\n. With caching:\nTest\\Oo\\OoDynamicA::getnew\nTest\\Oo\\OoDynamicB::getnew\nWithout caching:\nTest\\Oo\\OoDynamicA::call1 => self::call2 => self::getnew. I have added the following debug code:\nc\n    fcic.initialized = 0;\n    zval tmp;\n    zephir_var_export_ex(&tmp, function_name);\n    fprintf(stderr, \"> %s called: %p, calling: %p, obj: %p\\n\", Z_STRVAL(tmp), fcic.called_scope, fcic.calling_scope, fcic.object);\n    status = zend_call_function(&fci, &fcic);\n    fprintf(stderr, \"< called: %p, calling: %p, obj: %p\\n\", fcic.called_scope, fcic.calling_scope, fcic.object);\nWith fcic.initialized = 0 everything works as expected BUT i cannot understand why I have a different call sequence in this case.\nWith fcic.initialized = 0:\n```\n\narray (\n  0 => 'Test\\Oo\\OoDynamicA',\n  1 => 'call1',\n) called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\narray (\n  0 => 'self',\n  1 => 'call2',\n) called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\narray (\n  0 => 'self',\n  1 => 'getnew',\n) called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\n< called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\n< called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\n< called: 0x5572c4287290, calling: 0x5572c4287290, obj: (nil)\n```\n\nWithout:\n```\n< called: 0x56289892db10, calling: 0x56289892db10, obj: 0x7f708aaf1b60\n\narray (\n  0 => 'Test\\Oo\\OoDynamicA',\n  1 => 'getnew',\n) called: 0x5628988c1290, calling: 0x5628988c1290, obj: (nil)\n< called: 0x5628988c1290, calling: 0x5628988c1290, obj: (nil)\narray (\n  0 => 'Test\\Oo\\OoDynamicB',\n  1 => 'getnew',\n) called: 0x562898909aa0, calling: 0x56289892e3b0, obj: (nil)\n< called: 0x562898909aa0, calling: 0x56289892e3b0, obj: (nil)\n. Test case:php\n$t = new \\Test\\Oo();\n$obj9 = $t->testInstance9();\n$this->assertTrue(is_object($obj9));\n$this->assertInstanceOf('Test\\Oo\\OoDynamicA', $obj9);\n\n$obj10 = $t->testInstance10();\n$this->assertTrue(is_object($obj10));\n$this->assertInstanceOf('Test\\Oo\\OoDynamicB', $obj10);\n. GOOD:\n\narray (\n  0 => 'Test\\Oo\\OoDynamicA',\n  1 => 'getnew',\n) called: 0x55c9846f5290, calling: 0x55c9846f5290, obj: (nil), h: 0x55c9846f5530\n< called: 0x55c9846f5290, calling: 0x55c9846f5290, obj: (nil), h: 0x55c9846f5530\narray (\n  0 => 'Test\\Oo\\OoDynamicB',\n  1 => 'getnew',\n) called: 0x55c98473daa0, calling: 0x55c9847623b0, obj: (nil), h: 0x55c9846f5530\n< called: 0x55c9847623b0, calling: 0x55c9847623b0, obj: (nil), h: 0x55c984762720\n```\n\nBAD:\n```\n\narray (\n  0 => 'Test\\Oo\\OoDynamicA',\n  1 => 'getnew',\n) called: 0x561358edd290, calling: 0x561358edd290, obj: (nil), h: 0x561358edd530\n< called: 0x561358edd290, calling: 0x561358edd290, obj: (nil), h: 0x561358edd530\narray (\n  0 => 'Test\\Oo\\OoDynamicB',\n  1 => 'getnew',\n) called: 0x561358f25aa0, calling: 0x561358f4a3b0, obj: (nil), h: 0x561358edd530\n< called: 0x561358f25aa0, calling: 0x561358f4a3b0, obj: (nil), h: 0x561358edd530\n```\n\nIn the BAD case, the function handler for Test\\\\Oo\\\\OoDynamicA::getnew and Test\\\\Oo\\\\OoDynamicB::getnew is the same, which is a bug.\nSince the bug manifests itself only in ZE3, it makes me think zephir_make_fcall_key is to blame, possibly:\n```c\n    else if (type == zephir_fcall_static) {\nif PHP_VERSION_ID >= 70100\n    calling_scope = zend_get_called_scope(EG(current_execute_data));\n\nelse\n    calling_scope = EG(current_execute_data)->called_scope;\n\nendif\n    if (UNEXPECTED(!calling_scope)) {\n        return 0;\n    }\n}\n\n```. Actually, this is not a bug in the Kernel, this is a bug in the translator.\n```c\nPHP_METHOD(Test_Oo, testInstance9) {\n    zval o;\n    int ZEPHIR_LAST_CALL_STATUS;\n    zephir_fcall_cache_entry *_0 = NULL;\n    ZEPHIR_INIT_THIS();\n\n    ZVAL_UNDEF(&o);\n\n    ZEPHIR_MM_GROW();\n\n    ZEPHIR_CALL_CE_STATIC(&o, test_oo_oodynamica_ce, \"getnew\", &_0, 48);\n    zephir_check_call_status();\n    RETURN_CCTOR(o);\n\n}\nPHP_METHOD(Test_Oo, testInstance10) {\n    zval o;\n    int ZEPHIR_LAST_CALL_STATUS;\n    zephir_fcall_cache_entry *_0 = NULL;\n    ZEPHIR_INIT_THIS();\n\n    ZVAL_UNDEF(&o);\n\n    ZEPHIR_MM_GROW();\n\n    ZEPHIR_CALL_CE_STATIC(&o, test_oo_oodynamicb_ce, \"getnew\", &_0, 48);\n    zephir_check_call_status();\n    RETURN_CCTOR(o);\n\n}\n```\nBoth methods share the same cache slot (48), yet they are called from different contexts.\n. @sergeyklay as far as I can tell, caching issue affects ZE3 (that is, PHP_VERSION_ID >= 70000) :-(. Just tested ZE2: Test\\Oo\\OoDynamicA::getnew and Test\\Oo\\OoDynamicB::getnew do have the same function handler. In ZE3 this is no longer the case.. ```\nobj_ce: Test\\Oo\\OoDynamicA\n\ncalled: (nil), calling: (nil), obj: (nil), h: (nil), type=3\n< called: 0x55c80e3f3e50, calling: 0x55c80e3f3e50, obj: (nil), h: 0x55c80e3f4100\nobj_ce: Test\\Oo\\OoDynamicB\n called: 0x55c80e492bb0, calling: 0x55c80e492bb0, obj: (nil), h: 0x55c80e3f4100, type=3\n< called: 0x55c80e492bb0, calling: 0x55c80e492bb0, obj: (nil), h: 0x55c80e3f4100\n```\n. Probably we will have to do that :-(\n\nI think I have found the place to fix in the compiler but I don't know its internals good enough\nphp\n// StaticMethodCache::get()\n        $mustBeCached = false;\n        if (!$compilationContext->insideCycle) {\n            if (!($method instanceof \\ReflectionMethod)) {\n                $classDefinition = $method->getClassDefinition();\n                if (!$classDefinition->isBundled() && $allowNtsCache) {\n                    $mustBeCached = true;\n                } else {\n                    if (!$method->isPrivate() && !$method->isFinal()) {\n                        return 'NULL, 0';\n                    }\n                }\n            } else {\n                if (!$method->isPrivate() && !$method->isFinal()) {\n                    return 'NULL, 0';\n                }\n            }\n        }\nThe place where $mustBeCached is set to true: ideally we need to check whether the calling and the called classes are the same. However, $classDefinition->getName() returns OoDynamicA in both cases (understandable, as the method is defined in OoDynamicA), but $compilationContext->classDefinition->getName() returns Oo.\nWhat I wanted to do was to find out if OoDynamicB is available somewhere (call context), and check whether call context matches $classDefinition->getName(). If it does not, do not set $mustBeCached.\n. It is called from StaticCall::callFromClass. Looks like I need $classDefinition passed to it, but it is not passed to StaticMethodCache::get(). \u0411\u0435\u0434\u0430-\u043f\u0435\u0447\u0430\u043b\u044c :-( . I think / hope we are good to go now :-). Sqlite? Number of connections exceeded? Sounds weird.... Agreed.. After 3.2.0?. I have an idea.. Hope so. I have restarted failed builds in Travis, let's see. As far as I can see, the issues with ZVAL_COPY was that it created a copy of a zval which was never destroyed.. But I still see other failures\u2026 are they expected?. Mmm OK. OK. @Jurigag the fix has just landed to master, please take a look. I was able to reproduce this :-) NTS build of PHP 7.0, and the extension must be compiled with gcc 4.8.x series. Starting test 'Extension\\InstanceTest::testIssue1339'.\n==8777== Warning: client switching stacks?  SP change: 0xffeffbcc0 --> 0x133f4600\n==8777==          to suppress, use: --max-stackframe=68379768512 or greater\n==8777== Invalid read of size 8\n==8777==    at 0x106801E3: zim_Test_Instance_testIssue1339 (instance.zep.c:150)\n==8777==    by 0xFFFFFFFF00000C07: ???\n==8777==    by 0xAC: ???\n==8777==    by 0x1190FF3F: ???\n==8777==    by 0x12C2D9F: ??? (in /home/vladimir/.phpenv/versions/7.1.0-nts-debug/bin/php)\n==8777==  Address 0x133f4600 is 384 bytes inside a block of size 576 free'd\n==8777==    at 0x4C2DD6B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==8777==    by 0x86D399: _efree (zend_alloc.c:2428)\n==8777==    by 0x8BA802: zend_array_destroy (zend_hash.c:1330)\n==8777==    by 0x8A0B1D: _zval_dtor_func (zend_variables.c:43)\n==8777==    by 0x889637: i_zval_ptr_dtor (zend_variables.h:48)\n==8777==    by 0x88B21B: _zval_ptr_dtor (zend_execute_API.c:550)\n==8777==    by 0x10606E7B: zephir_memory_restore_stack_common (memory.c:163)\n==8777==    by 0x1060720A: zephir_memory_restore_stack (memory.c:244)\n==8777==    by 0x106801E1: zim_Test_Instance_testIssue1339 (instance.zep.c:148)\n==8777==  Block was alloc'd at\n==8777==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==8777==    by 0x86E029: __zend_malloc (zend_alloc.c:2820)\n==8777==    by 0x86D2F2: _emalloc (zend_alloc.c:2413)\n==8777==    by 0x8B6A3A: zend_hash_real_init_ex (zend_hash.c:138)\n==8777==    by 0x8B6DE5: zend_hash_real_init (zend_hash.c:201)\n==8777==    by 0x1060D1E6: zephir_create_array (array.c:48)\n==8777==    by 0x1067EDF3: zim_Test_Instance_testIssue1339 (instance.zep.c:68)\n==8777==    by 0x908EF2: ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER (zend_vm_execute.h:1097)\n==8777==    by 0x90728E: execute_ex (zend_vm_execute.h:429)\n==8777==    by 0x88C4F7: zend_call_function (zend_execute_API.c:828)\n==8777==    by 0x5F5C01: reflection_method_invoke (php_reflection.c:3316)\n==8777==    by 0x5F5DD1: zim_reflection_method_invokeArgs (php_reflection.c:3352)\n==8777==\n==8777== Invalid read of size 8\n==8777==    at 0x106801E4: zim_Test_Instance_testIssue1339 (instance.zep.c:150)\n==8777==    by 0xFFFFFFFF00000C07: ???\n==8777==    by 0xAC: ???\n==8777==    by 0x1190FF3F: ???\n==8777==    by 0x12C2D9F: ??? (in /home/vladimir/.phpenv/versions/7.1.0-nts-debug/bin/php)\n==8777==  Address 0x133f4608 is 392 bytes inside a block of size 576 free'd\n==8777==    at 0x4C2DD6B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==8777==    by 0x86D399: _efree (zend_alloc.c:2428)\n==8777==    by 0x8BA802: zend_array_destroy (zend_hash.c:1330)\n==8777==    by 0x8A0B1D: _zval_dtor_func (zend_variables.c:43)\n==8777==    by 0x889637: i_zval_ptr_dtor (zend_variables.h:48)\n==8777==    by 0x88B21B: _zval_ptr_dtor (zend_execute_API.c:550)\n==8777==    by 0x10606E7B: zephir_memory_restore_stack_common (memory.c:163)\n==8777==    by 0x1060720A: zephir_memory_restore_stack (memory.c:244)\n==8777==    by 0x106801E1: zim_Test_Instance_testIssue1339 (instance.zep.c:148)\n==8777==  Block was alloc'd at\n==8777==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==8777==    by 0x86E029: __zend_malloc (zend_alloc.c:2820)\n==8777==    by 0x86D2F2: _emalloc (zend_alloc.c:2413)\n==8777==    by 0x8B6A3A: zend_hash_real_init_ex (zend_hash.c:138)\n==8777==    by 0x8B6DE5: zend_hash_real_init (zend_hash.c:201)\n==8777==    by 0x1060D1E6: zephir_create_array (array.c:48)\n==8777==    by 0x1067EDF3: zim_Test_Instance_testIssue1339 (instance.zep.c:68)\n==8777==    by 0x908EF2: ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER (zend_vm_execute.h:1097)\n==8777==    by 0x90728E: execute_ex (zend_vm_execute.h:429)\n==8777==    by 0x88C4F7: zend_call_function (zend_execute_API.c:828)\n==8777==    by 0x5F5C01: reflection_method_invoke (php_reflection.c:3316)\n==8777==    by 0x5F5DD1: zim_reflection_method_invokeArgs (php_reflection.c:3352)\n==8777==\n==8777== Jump to the invalid address stated on the next line\n==8777==    at 0xFFFFFFFF00000C08: ???\n==8777==    by 0xAC: ???\n==8777==    by 0x1190FF3F: ???\n==8777==    by 0x12C2D9F: ??? (in /home/vladimir/.phpenv/versions/7.1.0-nts-debug/bin/php)\n==8777==  Address 0xffffffff00000c08 is not stack'd, malloc'd or (recently) free'd\n==8777==\n==8777==\n==8777== Process terminating with default action of signal 11 (SIGSEGV)\n==8777==  Bad permissions for mapped region at address 0xFFFFFFFF00000C08\n==8777==    at 0xFFFFFFFF00000C08: ???\n==8777==    by 0xAC: ???\n==8777==    by 0x1190FF3F: ???\n==8777==    by 0x12C2D9F: ??? (in /home/vladimir/.phpenv/versions/7.1.0-nts-debug/bin/php). You won't believe how stupid the error is:\nc\n                        if (likely(param_count) <= 10) {\n                                params_ptr = static_params;\n                        } else {\n                                params_arr = emalloc(param_count * sizeof(zval*));\n                                params_ptr = params_arr;\n                        }\nThis line:\nc\nlikely(param_count) <= 10\nlikely(param_count) is __builtin_expect(!!(param_count), 1) and it evaluates to 1. Then the first branch is taken, as 1 <= 10.\n. Related: #251 (the reason for the bug is the same). Related: #1507 (the fix should be ported to ZE2 kernel). In my opinion, Zephir should follow PHP behavior\u00a0\u2014 that is, call to a protected/private method of another class should fail.. The question is, if we port ZE3 behavior into ZE2, will it break a lot of code?. I fixed scope issues for PHP 7.1 only, and tries not to touch PHP 7.0 code assuming it works :-). 7.0 now works the same way as 7.1.. Closing in favor of #1429 . No, that fix is fine. However, it will still crash if, say, you pass 100 parameters.\nThe issue is the same:\nc\nif (likely(param_count) <= 10) {\nIt may work because of the stack layout (say, it overwrites another variable) but if you have enough parameters, it will overwrite the stack pointer and the app will crash.. Both your and my fixes address typos in the code, and it is great that we finally have tests that cover those cases.. Looks like the issue is somewhere else:\npublic function testIssue1442()\n        {\n                var instance;\n                let instance = this;\n                return instance;\n        }\nThis works and does not crash.\nI will be very grateful for the simple test case :-)\n. #1446 has been fixed. Could you please check if your explode issue is gone?. Happens when Zephir is compiled without ZEPHIR_USE_PHP_PCRE. @mruz Could you please check with latest Zephir's master?. Yes, that's compiler's issue:\nzephir/ext/test/spropertyaccess.zep.c:94:34: warning: passing argument 1 of \u2018zephir_read_static_property_ce\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n   zephir_read_static_property_ce(&delimiter, test_spropertyaccess_ce, SL(\"_delimiterWithUnderscore\"), PH_NOISY_CC);\nplus possible memory corruption. Fixed in 6c6f7bf0d145f3a3091acc32606fe2857e98ff4b. Let's move to #1450. get_defined_vars() is useless in Zephir: since all methods will be compiled to C functions, there is no way for the ZE to get information about variables.\nget_defined_vars() will return variables defined in the most recent userland function down the call stack.. See 4d5b616c143e45dc7a3b73d952116243b5ed2cdd. For the same reason compact() is also useless: there is no local symbol table in Zephir/C functions.\nIn theory, compact() can be implemented in the parser (because only the parser knows the current symbol table) but I am not familiar with the parser good enough to implement this.\nextract() won't work in Zephir for the very same reason: there is no symbol table, there is nowhere to extract the variables. Moreover, when used on untrusted input, extract poses a security risk.\n. In ZE3 only assert(\"string\") is forbidden, but it can be easily replaced with smth like assert(eval(\"string\")). But again, this is not useful in Zephir, because eval() won't have access to local variables as there is no symbol table.. (mb_)parse_str() with one parameter also does not make sense in Zephir, and poses a security risk.. Throw an exception during compilation?. get_defined_vars() implemented in #1452 . The code works, I am therefore merging it into master, but if someone has a better idea how to handle this, that would be great.. I would cherry-pick 386c85c and 3670cdf though anyway.. The issue is that superglobals should not be separated.. @Jurigag if you happen to have more private tests, could you please check that this change does not break them?\n. How did you manage to create array properties? IIRC, this is not supported by Zend. I have a feeling that Zephir is built from object files compiled with different flags.\n```c\nifndef ZEPHIR_RELEASE\n/\n * Finishes the current memory stack by releasing allocated memory\n /\nint ZEPHIR_FASTCALL zephir_memory_restore_stack(const char func TSRMLS_DC)\n{\n    zend_zephir_globals_def *zephir_globals_ptr = ZEPHIR_VGLOBAL;\nif (UNEXPECTED(zephir_globals_ptr->active_memory == NULL)) {\n    fprintf(stderr, \"WARNING: calling zephir_memory_restore_stack() without an active memory frame!\\n\");\n    zephir_print_backtrace();\n    return FAILURE;\n}\n\nif (UNEXPECTED(zephir_globals_ptr->active_memory->func != func)) {\n    fprintf(stderr, \"Trying to free someone else's memory frame!\\n\");\n    fprintf(stderr, \"The frame was created by %s\\n\", zephir_globals_ptr->active_memory->func);\n    fprintf(stderr, \"Calling function: %s\\n\", func);\n    zephir_print_backtrace();\n}\n\nzephir_memory_restore_stack_common(zephir_globals_ptr);\nreturn SUCCESS;\n\n}\n```\nThat is, for the error to trigger, ZEPHIR_RELEASE should not be defined. At that your CFLAGS include -DZEPHIR_RELEASE=1.\nCould you please try to rebuild Zephir from scratch and see if the error is still there?. I don't see a way how to write a test with PHPUnit for this\u2026. fcall.c:323:\nc\nzephir_fcall_cache_entry *cache_entry_temp = malloc(sizeof(zephir_fcall_cache_entry));\n```c\n        if (zephir_globals_ptr->cache_enabled) {\n            /* TODO: maybe construct zend_string (we do have a valid fcall_key) to avoid hash recalculation /\n            if (NULL == zend_hash_str_add_ptr(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, cache_entry_temp)) {\n                add_failed = 1;\n            }\n        }\n    if (cache_entry) {\n        if (cache_slot > 0) {\n            *cache_entry = cache_entry_temp;\n            zephir_globals_ptr->scache[cache_slot] = *cache_entry;\n        }\n    }\n    else if (add_failed) {\n\nifndef ZEPHIR_RELEASE\n        free(cache_entry_temp);\n\nendif\n    }\n\n``\n.zephir_preg_match` patch:\n```diff\ndiff --git a/kernels/ZendEngine3/string.c b/kernels/ZendEngine3/string.c\nindex 3a1a9e1..3a4d67c 100644\n--- a/kernels/ZendEngine3/string.c\n+++ b/kernels/ZendEngine3/string.c\n@@ -1085,6 +1085,7 @@ void zephir_preg_match(zval return_value, zval regex, zval subject, zval mat\n        if (matches) {\n                zval *php_matches = &tmp_matches;\n\nzval_dtor(matches);\n                ZVAL_DEREF(php_matches);\n                ZVAL_COPY(matches, php_matches);\n        }\n```\n. This fixes the most of the leaks in fcall.c:\n\n```diff\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 4a99688..3449616 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -327,23 +327,29 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n                zephir_fcall_cache_entry *cache_entry_temp = fcic.function_handler;\n #endif\n\nif (zephir_globals_ptr->cache_enabled) {\n/* TODO: maybe construct zend_string (we do have a valid fcall_key) to avoid hash recalculation /\nif (NULL == zend_hash_str_add_ptr(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, cache_entry_temp)) {\nadd_failed = 1;\n}\n\n}\n        if (cache_entry) {\n                if (cache_slot > 0) {\n\n+#ifndef ZEPHIR_RELEASE\n\nzephir_fcall_cache_entry t;\n+#endif\n                                cache_entry = cache_entry_temp;\n                                zephir_globals_ptr->scache[cache_slot] = *cache_entry;\n+#ifndef ZEPHIR_RELEASE\nt = malloc(sizeof(zephir_fcall_cache_entry));\nt->f     = fcic.function_handler;\nt->times = 0;\ncache_entry_temp = t;\n+#endif\n                        }\n                }\nelse if (add_failed) {\n+\nif (zephir_globals_ptr->cache_enabled) {\n/* TODO: maybe construct zend_string (we do have a valid fcall_key) to avoid hash recalculation /\nif (NULL == zend_hash_str_add_ptr(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, cache_entry_temp)) {\n #ifndef ZEPHIR_RELEASE\nfree(cache_entry_temp);\nfree(cache_entry_temp);\n #endif\n}\n                }\n        }\n\ndiff --git a/kernels/ZendEngine3/memory.c b/kernels/ZendEngine3/memory.c\nindex eea08e8..e319955 100644\n--- a/kernels/ZendEngine3/memory.c\n+++ b/kernels/ZendEngine3/memory.c\n@@ -346,6 +346,13 @@ void zephir_deinitialize_memory()\n#ifndef ZEPHIR_RELEASE\n        {\n+               size_t i;\n+               for (i=0; iscache[i];\n+                       if (e) {\n+                               free(e);\n+                       }\n+               }\n                zephir_fcall_cache_entry cache_entry_temp = NULL;\n                ZEND_HASH_FOREACH_PTR(zephir_globals_ptr->fcache, cache_entry_temp) {\n                        free(cache_entry_temp);\n. This fixes the leak in recursive calls:diff\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 3449616..8c0b85a 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -331,6 +331,9 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n                        if (cache_slot > 0) {\n #ifndef ZEPHIR_RELEASE\n                                zephir_fcall_cache_entry t;\n+                               if (zephir_globals_ptr->scache[cache_slot]) {\n+                                       free(zephir_globals_ptr->scache[cache_slot]);\n+                               }\n #endif\n                                cache_entry = cache_entry_temp;\n                                zephir_globals_ptr->scache[cache_slot] = cache_entry;\n```. This is what remains:\n==15356== HEAP SUMMARY:\n==15356==     in use at exit: 8,639 bytes in 62 blocks\n==15356==   total heap usage: 313,049 allocs, 312,987 frees, 66,390,573 bytes allocated\n==15356==\n==15356== 96 bytes in 2 blocks are definitely lost in loss record 32 of 55\n==15356==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==15356==    by 0x82AE2E: _emalloc (zend_alloc.c:2446)\n==15356==    by 0x8A7FFB: zend_objects_new (zend_objects.c:162)\n==15356==    by 0x8666C9: _object_and_properties_init (zend_API.c:1301)\n==15356==    by 0x866786: _object_init_ex (zend_API.c:1316)\n==15356==    by 0x8C6DB4: ZEND_NEW_SPEC_CONST_HANDLER (zend_vm_execute.h:3342)\n==15356==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==15356==    by 0x8483F1: zend_call_function (zend_execute_API.c:866)\n==15356==    by 0x5AF943: zim_reflection_method_invokeArgs (php_reflection.c:3348)\n==15356==    by 0x8C052B: ZEND_DO_FCALL_SPEC_HANDLER (zend_vm_execute.h:842)\n==15356==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==15356==    by 0x8BF4BC: zend_execute (zend_vm_execute.h:458)\n==15356==    by 0x8605FB: zend_execute_scripts (zend.c:1427)\n==15356==    by 0x7C8D9F: php_execute_script (main.c:2494)\n==15356==    by 0x928556: do_cli (php_cli.c:974)\n==15356==    by 0x929724: main (php_cli.c:1344)\n==15356==\n==15356== 152 bytes in 1 blocks are indirectly lost in loss record 41 of 55\n==15356==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==15356==    by 0x82AE2E: _emalloc (zend_alloc.c:2446)\n==15356==    by 0x8A7FFB: zend_objects_new (zend_objects.c:162)\n==15356==    by 0x8666C9: _object_and_properties_init (zend_API.c:1301)\n==15356==    by 0x866786: _object_init_ex (zend_API.c:1316)\n==15356==    by 0x8C6DB4: ZEND_NEW_SPEC_CONST_HANDLER (zend_vm_execute.h:3342)\n==15356==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==15356==    by 0x8BF4BC: zend_execute (zend_vm_execute.h:458)\n==15356==    by 0x8605FB: zend_execute_scripts (zend.c:1427)\n==15356==    by 0x7C8D9F: php_execute_script (main.c:2494)\n==15356==    by 0x928556: do_cli (php_cli.c:974)\n==15356==    by 0x929724: main (php_cli.c:1344)\n==15356==\n==15356== 736 (584 direct, 152 indirect) bytes in 3 blocks are definitely lost in loss record 51 of 55\n==15356==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==15356==    by 0x82AE2E: _emalloc (zend_alloc.c:2446)\n==15356==    by 0x8A7FFB: zend_objects_new (zend_objects.c:162)\n==15356==    by 0x8666C9: _object_and_properties_init (zend_API.c:1301)\n==15356==    by 0x866786: _object_init_ex (zend_API.c:1316)\n==15356==    by 0x8C6DB4: ZEND_NEW_SPEC_CONST_HANDLER (zend_vm_execute.h:3342)\n==15356==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==15356==    by 0x8BF4BC: zend_execute (zend_vm_execute.h:458)\n==15356==    by 0x8605FB: zend_execute_scripts (zend.c:1427)\n==15356==    by 0x7C8D9F: php_execute_script (main.c:2494)\n==15356==    by 0x928556: do_cli (php_cli.c:974)\n==15356==    by 0x929724: main (php_cli.c:1344)\n==15356==\n==15356== LEAK SUMMARY:\n==15356==    definitely lost: 680 bytes in 5 blocks\n==15356==    indirectly lost: 152 bytes in 1 blocks\n==15356==      possibly lost: 0 bytes in 0 blocks\n==15356==    still reachable: 0 bytes in 0 blocks\n==15356==         suppressed: 7,807 bytes in 56 blocks\n. These two leaks:\n==17055== 152 bytes in 1 blocks are indirectly lost in loss record 41 of 55\n==17055==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==17055==    by 0x82AE2E: _emalloc (zend_alloc.c:2446)\n==17055==    by 0x8A7FFB: zend_objects_new (zend_objects.c:162)\n==17055==    by 0x8666C9: _object_and_properties_init (zend_API.c:1301)\n==17055==    by 0x866786: _object_init_ex (zend_API.c:1316)\n==17055==    by 0x8C6DB4: ZEND_NEW_SPEC_CONST_HANDLER (zend_vm_execute.h:3342)\n==17055==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==17055==    by 0x8BF4BC: zend_execute (zend_vm_execute.h:458)\n==17055==    by 0x8605FB: zend_execute_scripts (zend.c:1427)\n==17055==    by 0x7C8D9F: php_execute_script (main.c:2494)\n==17055==    by 0x928556: do_cli (php_cli.c:974)\n==17055==    by 0x929724: main (php_cli.c:1344)\n==17055== \n==17055== 736 (584 direct, 152 indirect) bytes in 3 blocks are definitely lost in loss record 51 of 55\n==17055==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==17055==    by 0x82AE2E: _emalloc (zend_alloc.c:2446)\n==17055==    by 0x8A7FFB: zend_objects_new (zend_objects.c:162)\n==17055==    by 0x8666C9: _object_and_properties_init (zend_API.c:1301)\n==17055==    by 0x866786: _object_init_ex (zend_API.c:1316)\n==17055==    by 0x8C6DB4: ZEND_NEW_SPEC_CONST_HANDLER (zend_vm_execute.h:3342)\n==17055==    by 0x8BF3AB: execute_ex (zend_vm_execute.h:414)\n==17055==    by 0x8BF4BC: zend_execute (zend_vm_execute.h:458)\n==17055==    by 0x8605FB: zend_execute_scripts (zend.c:1427)\n==17055==    by 0x7C8D9F: php_execute_script (main.c:2494)\n==17055==    by 0x928556: do_cli (php_cli.c:974)\n==17055==    by 0x929724: main (php_cli.c:1344)\nare caused by PHPUnit\nIf I change zephir/vendor/phpunit/phpunit/composer/bin this way:\n```diff\n--- phpunit.orig        2017-04-07 10:13:54.746283917 +0300\n+++ phpunit     2017-04-07 10:11:39.018822972 +0300\n@@ -60,4 +60,4 @@\n     );\n }\n-PHPUnit_TextUI_Command::main();\n+PHPUnit_TextUI_Command::main(false);\n```\nthese leaks are gone.\n@ovr @sergeyklay any idea how to patch / override vendor/phpunit/phpunit/composer/bin?. The other leak comes from DeprecatedMethodsTest::testPublicMethodThrowsDeprecatedWarning. Cool! Really love it!. Looking at the macros, I see that f70ca78 is not a good solution :-(\n\nif there is an exception in the middle of the method, there will be a leak\nif there is a return in the middle of the method, there will be a leak\n\nIt looks like I will have to mess with the memory manager to add another kind of observed variables for which zval_dtor will need to be called, not zval_ptr_dtor. Sigh.\n. Rebased against the most current master. Honestly, I think this is a different issue.. Actually we have another issue:\nhttps://travis-ci.org/sjinks/zephir/jobs/219949579\nThat is, we still need to use exit() but only if there are failures :-)\n. ```c\ndefine ZEPHIR_INIT_ZVAL_NREF(z) \\\nALLOC_ZVAL(z); \\\nZ_SET_REFCOUNT_P(z, 0); \\\nZ_UNSET_ISREF_P(z);\n\ndefine ZEPHIR_OBS_VAR(z) \\\nzephir_memory_observe(&z TSRMLS_CC)\n\n. Could be related to #1486 . Yes, `test/requires.zep`. It created a symtable but only for PHP 5. I removed PHP 5 check, the test still passes..\n(gdb) frame 4\n(gdb) print (char)((zend_class_entry)zv->value.ptr)->name->val\n$1 = 0x7fffeb24cd98 \"PHPUnit_Framework_Constraint_IsType\"\n. Related to #1488 .diff\n--- a/kernels/ZendEngine3/memory.c\n+++ b/kernels/ZendEngine3/memory.c\n@@ -400,7 +400,7 @@ void zephir_create_symbol_table()\n    entry->symbol_table = ex->symbol_table;\n    entry->prev         = gptr->active_symbol_table;\n\nsymbol_table = (zend_array)emalloc(sizeof(zend_array ));\nsymbol_table = (zend_array*)emalloc(sizeof(zend_array));\n    zend_hash_init(symbol_table, 0, NULL, ZVAL_PTR_DTOR, 0);\n    zend_hash_real_init(symbol_table, 0);\n``\n. Looks like the issue is somewhere inDeprecatedMethodsTest::testPublicMethodThrowsDeprecatedWarning`. Looks like a false positive:\n\nphp\n$test = new \\Test\\Oo\\DeprecatedMethods;\n$test->deprecatedMethod();\ndoes not leak.\n. But this leaks:\n```php\n<?php\nfunction exception_error_handler($severity, $message, $file, $line)\n{\n    throw new ErrorException($message, 0, $severity, $file, $line);\n}\nset_error_handler(\"exception_error_handler\");\ntry {\n    $test = new \\Test\\Oo\\DeprecatedMethods;\n    $test->deprecatedMethod();\n}\ncatch (ErrorException $e) {\n    echo $e, PHP_EOL;\n}\n```\n```\nErrorException: Function Test\\Oo\\DeprecatedMethods::deprecatedMethod() is deprecated in /home/vladimir/workspace/zephir/x.php:12\nStack trace:\n0 /home/vladimir/workspace/zephir/x.php(12): exception_error_handler(8192, 'Function Test\\O...', '/home/vladimir/...', 12, Array)\n1 {main}\n[Sun Apr  9 21:03:52 2017]  Script:  '/home/vladimir/workspace/zephir/x.php'\n/tmp/php-build/source/7.0.17/Zend/zend_objects.c(162) :  Freeing 0x7F032A675CD0 (40 bytes), script=/home/vladimir/workspace/zephir/x.php\n=== Total 1 memory leaks detected ===\n``. Still, it looks like an error in ZE. Setting a breakpoint on zend_objects.c(162) shows thatTest\\Oo\\DeprecatedMethodsleaks; it is created in PHP userland, and there is no way we can free it.. More to come. It looks like the code was copied'n'pasted fromAddslashesOptimizer`:\nphp\n        if (count($expression['parameters']) > 1) {\n            return false;\n        }\nIn PHP, addcslashes() expects two parameters.\n. @sergeyklay what do you think if I remove this optimizer, as it does not work anyway?. No idea\u2026 git grep cannot find zephir_addcslashes(). Ah, I know. That call has two parameters, the optimizer can handle only one.. c\nZEPHIR_SINIT_NVAR(_8$$10);\nZVAL_STRING(&_8$$10, \"\\\"\", 0);\nZEPHIR_CALL_FUNCTION(&_9$$10, \"addcslashes\", &_10, 150, defaultValue, &_8$$10);\n. What PHP version did you use?. 0.9.6a-dev, what git revision was that?\nWant to try to test locally.. @Jurigag please take a look #1509. It is still slower than 72dbb20:\n72dbb20:\n$this->f()         0.192\nself::f()          0.189\nself::f() -> true  0.193\n1509\n$this->f()         0.381\nself::f()          0.468\nself::f() -> true  0.467\nbut that's the price for correctness\u00a0\u2014 the checks to make sure that the proper method is called in static/self contexts.\n. I have fixed the 5.x thing, now looking at 7.x.. Judging by https://github.com/phalcon/cphalcon/pull/12825, 7.x also works now.. #1519 if I am not mistaken. Are you looking at Travis builds or do you run benchmark yourself?\n```\nBenchmark Zephir 0.9.7\nempty for in range 0.100\n$x = $this->x      0.828\n$this->x = 0       0.846\nself::a = 0        0.762\n$this->x += 2      1.679\n$this->x++         1.721\n$this->x--         1.757\nisset($this->x)    0.186\nisset(self::A)     0.105\nempty($this->x)    0.943\nempty(self::a)     0.772\n$this->f()         2.134\nself::f()          2.282\nself::f() -> true  2.292\n$x = Foo::TEST     0.115\n\nTotal             16.521\n.\nBenchmark Zephir 0.9.6a-dev\nempty for in range 0.103\n$x = $this->x      0.854\n$this->x = 0       0.876\nself::a = 0        0.410\n$this->x++         1.743\n$this->x--         1.742\nisset($this->x)    0.189\nisset(self::A)     0.093\nempty($this->x)    0.932\nempty(self::a)     0.819\n$this->f()         1.369\nself::f()          1.405\nself::f() -> true  1.407\n$x = Foo::TEST     0.116\n\nTotal             12.057\n``\n. At that, I am running a debug build of PHP, release version is faster\u2026. PHP 7.0.17 (cli) (built: Apr  9 2017 20:37:39) ( ZTS DEBUG ). Are we on the same master? a5f585482bf9c1f6a37d8162936765ebb3d9bfea. That's the price for #251 and #1429 :-(. #1522 slowed things down but just a bit.. Are you building Zephir with-O2or-O0`?\nOn our end there is almost no difference between self:: and $this->, the difference comes from ZE.. What we add to zend_call_function() is zephir_make_fcall_key() and populate_fcic()\u00a0\u2014 they add some overhead comparing to 061fec5d7bb6d0338d6295c1ed516dc0900ee51b. Please try this patch, does it make any measurable difference for you?\n```diff\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 4bbc9a5..63940b0 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -47,9 +47,9 @@ int zephir_has_constructor_ce(const zend_class_entry ce)\n /\n  * Creates a unique key to cache the current method/function call address for the current scope\n  /\n-static zend_string zephir_make_fcall_key(zephir_call_type type, zend_class_entry ce, zval function)\n+static zend_string zephir_make_fcall_key(zephir_call_type type, zend_class_entry ce, zval function, zend_class_entry called_scope)\n {\n-       const zend_class_entry calling_scope, called_scope;\n+       const zend_class_entry calling_scope;\n        zend_string res = NULL;\n        char buf = NULL, c;\n        size_t l = 0, len = 0;\n@@ -61,8 +61,6 @@ static zend_string zephir_make_fcall_key(zephir_call_type type, zend_class_entr\n        calling_scope = EG(scope);\n #endif\n-       called_scope = zend_get_called_scope(EG(current_execute_data));\n    switch (type) {\n            case zephir_fcall_parent:\n                    if (UNEXPECTED(!calling_scope || !calling_scope->parent)) {\n\n@@ -209,7 +207,7 @@ static void resolve_callable(zval* retval, zephir_call_type type, zend_class_ent\n        } ZEND_HASH_FILL_END();\n }\n-static void populate_fcic(zend_fcall_info_cache fcic, zephir_call_type type, zend_class_entry ce, zval this_ptr, zval func)\n+static void populate_fcic(zend_fcall_info_cache fcic, zephir_call_type type, zend_class_entry ce, zval this_ptr, zval func, zend_class_entry called_scope)\n {\n        zend_class_entry calling_scope;\n        fcic->initialized      = 0;\n@@ -223,7 +221,7 @@ static void populate_fcic(zend_fcall_info_cache* fcic, zephir_call_type type, ze\n                return;\n        }\n\nfcic->called_scope = zend_get_called_scope(EG(current_execute_data));\nfcic->called_scope = called_scope;\n\n#if PHP_VERSION_ID >= 70100\n        calling_scope = zend_get_executed_scope();\n@@ -296,6 +294,7 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n        zephir_fcall_cache_entry temp_cache_entry = NULL;\n        zval callable;\n        int reload_cache = 1, i;\n+       zend_class_entry called_scope = zend_get_called_scope(EG(current_execute_data));\n    assert(obj_ce || !object_pp);\n    ZVAL_UNDEF(&callable);\n\n@@ -323,7 +322,7 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n                }\n            if (reload_cache) {\n\n\nfcall_key = zephir_make_fcall_key(type, (object_pp && type != zephir_fcall_ce ? Z_OBJCE_P(object_pp) : obj_ce), function_name);\nfcall_key = zephir_make_fcall_key(type, (object_pp && type != zephir_fcall_ce ? Z_OBJCE_P(object_pp) : obj_ce), function_name, called_scope);\n                        if (fcall_key) {\n                                temp_cache_entry = zend_hash_find_ptr(zephir_globals_ptr->fcache, fcall_key);\n                                if (temp_cache_entry) {\n@@ -348,7 +347,7 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n        fcic.initialized = 0;\n        if (cache_entry && cache_entry) {\n        / We have a cache record, initialize scope */\npopulate_fcic(&fcic, type, obj_ce, object_pp, function_name);\npopulate_fcic(&fcic, type, obj_ce, object_pp, function_name, called_scope);\n                if (!fcic.function_handler) {\n                        fcic.function_handler = *cache_entry;\n                }\n```\n. @Jurigag could you please benchmark this branch?. The current implementation is very simple:\n\n```c\nvoid fcall_init(zval return_value, zval callable)\n{\n    zephir_fci info = ecalloc(1, sizeof(zephir_fci));\n    char error = NULL;\nif (FAILURE == zend_fcall_info_init(callable, IS_CALLABLE_STRICT, &info->fci, &info->fcc, NULL, &error)) {\n    zend_throw_exception_ex(zend_exception_get_default(), 0, \"Error: %s\", error);\n    efree(error);\n    RETURN_NULL();\n}\n\nZVAL_PTR(return_value, info);\n\n}\nvoid fcall_call(zval return_value, zval fcall, zval *parameters)\n{\n    if (parameters && Z_TYPE_P(parameters) != IS_ARRAY && Z_TYPE_P(parameters) != IS_NULL) {\n        zend_throw_exception_ex(zend_exception_get_default(), 0, \"fcall_call: parameters must be array or NULL\");\n        RETURN_NULL();\n    }\nif (IS_PTR == Z_TYPE_P(fcall)) {\n    zephir_fci *info = Z_PTR_P(fcall);\n\n    if (info->fci.size == sizeof(info->fci)) {\n        if (parameters && IS_ARRAY == Z_TYPE_P(parameters)) {\n            zend_fcall_info_args_ex(&info->fci, info->fcc.initialized ? info->fcc.function_handler : NULL, parameters);\n        }\n\n        zend_fcall_info_call(&info->fci, &info->fcc, return_value, NULL);\n\n        if (parameters && IS_ARRAY == Z_TYPE_P(parameters)) {\n            zend_fcall_info_args_clear(&info->fci, 1);\n        }\n\n        return;\n    }\n}\n\nzend_throw_exception_ex(zend_exception_get_default(), 0, \"Bad parameter passed to fcall_call()\");\nRETURN_NULL();\n\n}\nvoid fcall_done(zval *fcall)\n{\n    if (IS_PTR == Z_TYPE_P(fcall)) {\n        efree(Z_PTR_P(fcall));\n        ZVAL_NULL(fcall);\n        return;\n    }\nzend_throw_exception_ex(zend_exception_get_default(), 0, \"Bad parameter passed to fcall_done()\");\n\n}\n. PHP 7.0.17 ZTS DEBUG\n$this->f()                 5.162\nself::f()                  6.259\nself::f() -> true          6.289\n$this->f() [slow]          3.973\n$this->f() [fast]          0.647\nself::f() [fast]           0.645\nself::f() -> true [fast]   0.643\n```\nPHP 7.0.17 ZTS DEBUG, #1509:\n$this->f()         2.074\nself::f()          2.210\nself::f() -> true  2.222\n. 7.0.17 NTS RELEASE\n1509\n$this->f()         0.381\nself::f()          0.468\nself::f() -> true  0.467\nfastcall\n$this->f()                 1.187\nself::f()                  1.453\nself::f() -> true          1.467\n$this->f() [slow]          0.650\n$this->f() [fast]          0.118\nself::f() [fast]           0.117\nself::f() -> true [fast]   0.118\n. Not sure. The reason is that the optimizer does not have enough information about the environment.\nFor example,\n```php\nclass A\n{\n    public function someMethod()\n    {\n        / ... /\n    }\npublic function test()\n{\n    $this->someMethod();\n}\n\n}\n```\nThe optimizer does not know which someMethod() is called: A's or of some other derived class. The developer may know that, and therefore is able to optimize this.. Basically, I see only two safe cases:\n1. A plain function is called.\n2. A private final method or private static function is called.. Yes. They are both applicable. #1509 is ready to use, this one is yet to be discussed :-). @Jurigag it depends\nFor example, in this case:\nphp\nforeach ($array as $value) {\n    $class->doSomething($value);\n}\nfcall can help. If the same method is going to be used more than once, fcall can help.\nIts advantage over our current call API is that it does not waste time maintaining caches and setting up call contexts. The setup is performed once in fcall_init. facll_call just passes parameters to the method/function and calls its handler, nothing more, this is why it is fast. However, if you pass a fcall variable to another method in another class (it is technically possible), that method will be able to call the cached method even if it is protected or private or is otherwise not callable from the current context.\nThe disadvantages are that it is too low-level (fcall_done() must be called manually for every fcall_init()\u00a0\u2014 I failed to make the compiler understand a custom type, it converts it to zval :-( ), lacks error checking (by design), and currently have to be used only manually.. Yes. You just need to make sure that fcall_init() is called only once.\nSmth like that:\n```php\nfunciton f($fci = null)\n{\n    $cleanup = false;\n    if (fci === null) {\n        $fci = fcall_init('f');\n        $cleanup = true;\n    }\n/* Recursion */\n$result = fcall_call($fci, [$fci, $other, $parameters]);\n\nif ($cleanup) {\n    fcall_done($fci);\n}\n\n}\n```\n. This thing is very complex to implement it properly :-(\nWhen PHP compiles the code, it can calculate FCI fields in advance and make every suitable FCALL reference the respective FCI structure. If we populate the FCI at runtime, there are several challenges:\n  * FCI depends on the method visibility (i.e., if we call a protected or private method, we must take into account relationships between classes);\n  * we need to take into account magic methods (__invoke, __call, __callStatic), as they allow us to call methods which are not visible to the caller;\n  * we store FCIs in a hash; the more elements in that hash, the more expensive cache lookups are (they affect performance; PHP has a pointer to a FCI structure, access time is roughly O(1); we have a hash, access time is roughly O(log n)).\nOne possible solution is to make Zephir collect all function / method calls in the method being processed, and add the code to populate their FCIs. However,\n  * if a method / function is called only sometimes (say, when some condition is true), we will have performance penalty for FCI calculation;\n  * FCI won't be shared between methods (say, two methods call str_replace() - its FCI will be calculated twice);\n  * need to take care of protected / private contexts.\nAnother solution is to use low-level API, as described above :-(\n. ==17716== 64 bytes in 2 blocks are definitely lost in loss record 32 of 45\n==17716==    at 0x4C2CB3F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==17716==    by 0x908083: __zend_malloc (/tmp/php-build/source/7.0.17/Zend/zend_alloc.c:2864)\n==17716==    by 0x906E2A: _emalloc (/tmp/php-build/source/7.0.17/Zend/zend_alloc.c:2457)\n==17716==    by 0x9439C7: zend_string_alloc (/tmp/php-build/source/7.0.17/Zend/zend_string.h:121)\n==17716==    by 0x943A30: zend_string_init (/tmp/php-build/source/7.0.17/Zend/zend_string.h:157)\n==17716==    by 0x943AAC: zend_string_dup (/tmp/php-build/source/7.0.17/Zend/zend_string.h:177)\n==17716==    by 0x9443FF: _zval_copy_ctor_func (/tmp/php-build/source/7.0.17/Zend/zend_variables.c:225)\n==17716==    by 0x9BB76B: ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:3327)\n==17716==    by 0x9B27B3: execute_ex (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:414)\n==17716==    by 0x92CAD5: zend_call_function (/tmp/php-build/source/7.0.17/Zend/zend_execute_API.c:858)\n==17716==    by 0x603E61: zim_reflection_method_invokeArgs (/tmp/php-build/source/7.0.17/ext/reflection/php_reflection.c:3355)\n==17716==    by 0x9B3EAC: ZEND_DO_FCALL_SPEC_HANDLER (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:842)\n==17716==    by 0x9B27B3: execute_ex (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:414)\n==17716==    by 0x9B29B4: zend_execute (/tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:458)\n==17716==    by 0x9498AF: zend_execute_scripts (/tmp/php-build/source/7.0.17/Zend/zend.c:1443)\n==17716==    by 0x884197: php_execute_script (/tmp/php-build/source/7.0.17/main/main.c:2492)\n==17716==    by 0xA225FF: do_cli (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:977)\n==17716==    by 0xA23AA2: main (/tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:1347). To confirm:\n```c\nzval res, lhs, tmp;\nZVAL_STRING(&res, \"test\\n\");\nZVAL_STRING(&lhs, \"\");\nZVAL_COPY_VALUE(&tmp, &res);\nconcat_function(&res, &lhs, &tmp);\nzval_ptr_dtor(&res);\nzval_ptr_dtor(&lhs);\n```\nleaks.. Same happens in ZE2.. The bug still exists for ZE2, reopening.. php\nif (PHP_DEBUG) {\n// ...\n}\nPHP_DEBUG constant is available since PHP 5.2.7\n. ```\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffed3ebf2f in zval_get_type (pz=0x0) at /home/vladimir/.phpenv/versions/7.0.17-zts-debug/include/php/Zend/zend_types.h:327\n327             return pz->u1.v.type;\n0  0x00007fffed3ebf2f in zval_get_type (pz=0x0) at /home/vladimir/.phpenv/versions/7.0.17-zts-debug/include/php/Zend/zend_types.h:327\n1  0x00007fffed3ed2cd in zephir_read_property (result=0x7fffffff98f0, object=0x0, property_name=0x7fffed40494d \"a\", property_length=1, flags=4352) at /home/vladimir/workspace/zephir_sigsegv/ext/kernel/object.c:436\n2  0x00007fffed400c6c in zim_Aaa_Test2___invoke (execute_data=0x7fffee0131a0, return_value=0x7fffffff9d30) at /home/vladimir/workspace/zephir_sigsegv/ext/aaa/test2.zep.c:78\n3  0x0000555555d78cb1 in zend_call_function (fci=0x7fffffff9c40, fci_cache=0x7fffffff9c10) at /tmp/php-build/source/7.0.17/Zend/zend_execute_API.c:878\n4  0x00007fffed3f8e38 in zephir_call_user_function (object_pp=0x0, obj_ce=0x0, type=zephir_fcall_function, function_name=0x7fffffff9d90, retval_ptr=0x7fffffff9d30, cache_entry=0x7fffffff9b90, cache_slot=0, param_count=0, params=0x7fffffff9da0)\nat /home/vladimir/workspace/zephir_sigsegv/ext/kernel/fcall.c:376\n\n5  0x00007fffed3f92ed in zephir_call_zval_func_aparams (return_value_ptr=0x0, func_name=0x7fffffff9d90, cache_entry=0x0, cache_slot=0, param_count=0, params=0x7fffffff9da0) at /home/vladimir/workspace/zephir_sigsegv/ext/kernel/fcall.c:478\n6  0x00007fffed400454 in zim_Aaa_Test_process (execute_data=0x7fffee013140, return_value=0x7fffffff9fe0) at /home/vladimir/workspace/zephir_sigsegv/ext/aaa/test.zep.c:58\n7  0x0000555555d78cb1 in zend_call_function (fci=0x7fffffffa030, fci_cache=0x7fffffffa000) at /tmp/php-build/source/7.0.17/Zend/zend_execute_API.c:878\n8  0x00007fffed3f8e38 in zephir_call_user_function (object_pp=0x7fffee013100, obj_ce=0x555556930000, type=zephir_fcall_method, function_name=0x7fffffffa140, retval_ptr=0x0, cache_entry=0x7fffffff9f80, cache_slot=0, param_count=0, params=0x7fffffffa1d0)\nat /home/vladimir/workspace/zephir_sigsegv/ext/kernel/fcall.c:376\n\n9  0x00007fffed3f951a in zephir_call_class_method_aparams (return_value=0x0, ce=0x555556930000, type=zephir_fcall_method, object=0x7fffee013100, method_name=0x7fffed40473e \"process\", method_len=7, cache_entry=0x7fffffffa1a8, cache_slot=0, param_count=0,\nparams=0x7fffffffa1d0) at /home/vladimir/workspace/zephir_sigsegv/ext/kernel/fcall.c:518\n\n10 0x00007fffed400261 in zim_Aaa_Test_start (execute_data=0x7fffee0130e0, return_value=0x7fffee0130d0) at /home/vladimir/workspace/zephir_sigsegv/ext/aaa/test.zep.c:38\n11 0x0000555555dffead in ZEND_DO_FCALL_SPEC_HANDLER () at /tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:842\n12 0x0000555555dfe7b4 in execute_ex (ex=0x7fffee013030) at /tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:414\n13 0x0000555555dfe9b5 in zend_execute (op_array=0x7fffee087000, return_value=0x0) at /tmp/php-build/source/7.0.17/Zend/zend_vm_execute.h:458\n14 0x0000555555d958b0 in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /tmp/php-build/source/7.0.17/Zend/zend.c:1443\n15 0x0000555555cd0198 in php_execute_script (primary_file=0x7fffffffc900) at /tmp/php-build/source/7.0.17/main/main.c:2492\n16 0x0000555555e6e600 in do_cli (argc=2, argv=0x5555567dd600) at /tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:977\n17 0x0000555555e6faa3 in main (argc=2, argv=0x5555567dd600) at /tmp/php-build/source/7.0.17/sapi/cli/php_cli.c:1347\n```. Here is the patch for ZE3 if you want to try it out, I will commit the fix later after I write a test case\n```diff\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 71cff03..1678dee 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -201,12 +201,13 @@ static void resolve_callable(zval* retval, zephir_call_type type, zend_class_ent\n        } ZEND_HASH_FILL_END();\n }\n-static void populate_fcic(zend_fcall_info_cache fcic, zephir_call_type type, zend_class_entry ce, zval this_ptr)\n+static void populate_fcic(zend_fcall_info_cache fcic, zephir_call_type type, zend_class_entry ce, zval this_ptr, zval func)\n {\n        zend_class_entry calling_scope;\n-       fcic->initialized = 0;\n+       fcic->initialized      = 0;\n+       fcic->function_handler = NULL;\n\nif (type == zephir_fcall_function) {\n\nif (type == zephir_fcall_function && Z_TYPE_P(func) != IS_OBJECT) {\n                fcic->initialized   = 1;\n                fcic->called_scope  = NULL;\n                fcic->calling_scope = NULL;\n@@ -222,6 +223,7 @@ static void populate_fcic(zend_fcall_info_cache* fcic, zephir_call_type type, ze\n        calling_scope = EG(scope);\n #endif\n\n\nfcic->object = this_ptr ? Z_OBJ_P(this_ptr) : NULL;\n        switch (type) {\n                case zephir_fcall_parent:\n                        if (UNEXPECTED(!calling_scope || !calling_scope->parent)) {\n@@ -244,7 +246,15 @@ static void populate_fcic(zend_fcall_info_cache* fcic, zephir_call_type type, ze\n                        break;\n        case zephir_fcall_function:\n\n\n/ already handled /\nif (Z_TYPE_P(func) == IS_OBJECT) {\nif (Z_OBJ_HANDLER_P(func, get_closure) && Z_OBJ_HANDLER_P(func, get_closure)(func, &fcic->calling_scope, &fcic->function_handler, &fcic->object) == SUCCESS) {\nfcic->called_scope = fcic->calling_scope;\nbreak;\n}\n+\nreturn;\n\n}\n+\n                    break;\n    case zephir_fcall_ce:\n\n@@ -253,6 +263,15 @@ static void populate_fcic(zend_fcall_info_cache* fcic, zephir_call_type type, ze\n                break;\n    case zephir_fcall_method:\n\n\nif (Z_TYPE_P(func) == IS_OBJECT) {\nif (Z_OBJ_HANDLER_P(func, get_closure) && Z_OBJ_HANDLER_P(func, get_closure)(func, &fcic->calling_scope, &fcic->function_handler, &fcic->object) == SUCCESS) {\nfcic->called_scope = fcic->calling_scope;\nbreak;\n}\n+\nreturn;\n}\n+\n                fcic->calling_scope = Z_OBJCE_P(this_ptr);\n                fcic->called_scope  = fcic->calling_scope;\n                break;\n@@ -262,7 +281,6 @@ static void populate_fcic(zend_fcall_info_cache* fcic, zephir_call_type type, ze\n}\n\nfcic->initialized = 1;\n-       fcic->object = this_ptr ? Z_OBJ_P(this_ptr) : NULL;\n }\n\n\n\n\n/\n@@ -333,8 +351,11 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n        fcic.initialized = 0;\n        if (cache_entry && cache_entry) {\n        / We have a cache record, initialize scope /\n-               populate_fcic(&fcic, type, obj_ce, object_pp);\n-               fcic.function_handler = cache_entry;\n+               populate_fcic(&fcic, type, obj_ce, object_pp, function_name);\n+               if (!fcic.function_handler) {\n+                       fcic.function_handler = cache_entry;\n+               }\n+\n                ZVAL_UNDEF(&fci.function_name);\n        }\n        else if ((cache_entry && !cache_entry) || zephir_globals_ptr->cache_enabled) {\n@@ -362,7 +383,7 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n #if 0\n /\n        fcic.initialized = 0;\n-       if (Z_TYPE_P(callable) == IS_NULL) {\n+       if (Z_TYPE(callable) == IS_NULL) {\n                resolve_callable(&callable, type, (object_pp && type != zephir_fcall_ce ? Z_OBJCE_P(object_pp) : obj_ce), object_pp, function_name);\n        }\n /\n. :-) I was about to ask you to benchmark this PR. I have eliminated zend_string allocation in `zephir_make_fcall_key()` (it is on hot path) and use static buffer instead. *In theory*, this should not break anything as I have not changed any logic..\n$this->f()         1.809\nself::f()          1.917\nself::f() -> true  1.931\n``\n. With the latest changes (eliminated onememcpy`):\n$this->f()         1.717\nself::f()          1.846\nself::f() -> true  1.841\n. $this->f()         2.134\nself::f()          2.282\nself::f() -> true  2.292\n. ~20% faster now. What are your figures for 0.9.6a-dev?. 3x difference :-( . I had an enlightenment. Could you please test sjinks/zephir@6ad6016?. diff\n    ZEND_HASH_FOREACH_KEY_VAL(Z_ARRVAL_P(&_SESSION), _2, _3, _1)\n    {\n        ZEPHIR_INIT_NVAR(&key);\n        if (_3 != NULL) { \n            ZVAL_STR_COPY(&key, _3);\n        } else {\n            ZVAL_LONG(&key, _2);\n        }\n        ZEPHIR_INIT_NVAR(&_0);\n        ZVAL_COPY(&_0, _1);\n-       zephir_array_unset(&_SESSION, &key, PH_SEPARATE);\n+       zephir_array_unset(&_SESSION, &key, 0);\n    } ZEND_HASH_FOREACH_END();\n:-(\n. Closing in favor of #1532 . The issue is:\nZEPHIR_OBS_VAR(&content);\nif (Z_TYPE_P(parameters) == IS_STRING) {\n// ... \n} else if (!(zephir_array_isset_string_fetch(&content, parameters, SL(\"content\"), 0))) {\n        ZEPHIR_OBS_NVAR(&content);\n// ...\n}\nZEPHIR_OBS_VAR(z) => zephir_memory_observe(z)\nZEPHIR_OBS_NVAR(z) when Z_TYPE_P(z) == IS_UNDEF: zephir_memory_observe(z);\nWhen the same variable gets observed two times and z is reference counted, this is an error: zval_ptr_dtor() will be called twice leading to hard to detect memory corruptions.\n. It's not a good idea to call a C++ function from C.\n```c++\ninclude \ninclude \nextern \"C\" {\nchar myoutput_wrapper(const char s)\n{\n    std::string r = myoutput(s);\n    char* ret = static_cast(std::calloc(r.size() + 1), 1);\n    if (ret) {\n        std::memcpy(ret, r.c_str(), r.size());\n    }\nreturn ret;\n\n}\n}\n```\nand then call output_wrapper() from Zephir. It will be your responsibility to free() the return value when you no longer need it.\n. @sergeyklay I think this happens in ZE3 kernel:\n$ grep -RF zephir_greater_double *\noperators.h:#define ZEPHIR_GT_DOUBLE(op1, op2)  ((Z_TYPE_P(op1) == IS_DOUBLE && Z_DVAL_P(op1) > op2) || zephir_greater_double(op1, op2))\noperators.h:int zephir_greater_double(zval *op1, double op2);\nThat is, we have a forward declaration of zephir_greater_double and it is even used in ZEPHIR_GT_DOUBLE, yet we have no definition of zephir_greater_double() in the source.. Quick fix:\n```c\nint zephir_greater_double(zval *op1, double op2)\n{\n        zval result, op2_zval;\n        ZVAL_DOUBLE(&op2_zval, op2);\n    is_smaller_or_equal_function(&result, op1, &op2_zval);\n    return Z_TYPE(result) == IS_FALSE;\n\n}\n.c\nint zephir_less_double(zval *op1, double op2)\n{\n        zval result, op2_zval;\n        ZVAL_DOUBLE(&op2_zval, op2);\n    is_smaller_function(&result, op1, &op2_zval);\n    return Z_TYPE(result) == IS_TRUE;\n\n}\n```\n. Yes, I saw Scrutinizer failed but had no time to investigate why.. http://php.net/manual/en/function.utf8-decode.php\nYou probably don't have XML Parser extension (php-xml). php -m should show xml, like this:\n```\n[PHP Modules]\ncalendar\nCore\nctype\ncurl\ndate\ndom\nexif\nfileinfo\nfilter\nftp\ngd\ngeoip\ngettext\nhash\niconv\nigbinary\nimagick\nimap\nintl\njson\nlibxml\nmbstring\nmcrypt\nmemcached\nmysql\nmysqli\nmysqlnd\nopenssl\npcntl\npcre\nPDO\npdo_mysql\npdo_sqlite\nPhar\nposix\nreadline\nReflection\nsession\nshmop\nSimpleXML\nsockets\nSPL\nsqlite3\nstandard\nsysvmsg\nsysvsem\nsysvshm\ntokenizer\nwddx\nxml\nxmlreader\nxmlwriter\nxsl\nZend OPcache\nzip\nzlib\n[Zend Modules]\nZend OPcache\n```\nYou may have it enabled for another SAPI (Apache, FPM) but not for cli.. Hint: the file /etc/php/7.0/cli/conf.d/15-xml.ini should exist.. What are the versions of autotools and automake on the system where you build the extension?. What is croct, and are there sources to look into?. Just experience :-) I had a similar issue in PHP-CPP. \"Parameter 3 to preg_match_all() expected to be a reference, value given\" - this was the clue. Does it work this way? Last time I checked, Travis ignored \"compiler\" if language: php is set. This check probably needs to go away as well. I have pushed the same fix to ZE2 directly to master to save some time.. oops, to my master. @Jurigag no, your fix is fine, too. Your fix addresses the issue with the way how parameters are passed, my fix addresses the case when there are too many parameters and they corrupt the stack.\nYour test case passes 11 parameters, the 11th one possibly overwrites static_params variable (it depends on the stack layout and how the compiler arranged local variables). But if you increase the number of parameters, they will eventually overwrite the stack pointer and crash the application.\nActually this is why the issue is compiler-specific: VC does not have __builtin_constant_p therefore the code works. clang could probably lay out the local variables differently, and the app does not crash. But gcc 4.8 does what it does, and the 11th parameter overwrites the stack pointer.. Is there a cleaner way to do this?\nRight now this generates something like:\n```\u0441\nif (...) {\n} else {\n    if (...) {\n    } else {\n        if (...) {\n            ...\n        }\n    }\n}. Is there a cleaner way?\n$compilationContext->backend->copyOnWrite() writes the code, what I need is the assignment operator as this probably won't compile on ZE2\n. Just wonder why line number is 8.\nThe test says it is 11, I thought it should be 83.\n@Jurigag any idea?. Make sense\u2026 Your test patch added 3 lines to the top of test/exceptions.zep this is why the number is 11 now. The above is a dirty hack, but I failed to make this:\nphp\n$exprBuilder->statements()->let(array(\n     $exprBuilder->operators()->assignVariable($variable->getName(), $exprBuilder->variable($exc_var->getName()))\n))->build(),\nor similar constructs work :-(\nIf someone knows how to make them work, I would prefer it to this code.. @Jurigag nah, the test will fail :-) I think PHPUnit is calling ob_clean() after the test and since there is no output buffer any longer, it throws an exception.. ob_get_clean() is ob_get_contents() + ob_end_clean(), not ob_clean(). typedef uint32_t HashPosition in PHP 7\ntypedef Bucket* HashPosition in PHP 5\nI would assign it to plain 0, not sure why { 0 } was used.\nBracketed initialization also works though: http://rextester.com/GXS88393\n. Why do we cast to (char*)? Is it const char*?. Line numbers in zend_exception.c are zend_long. No, just the opposite\u00a0\u2014 ZEPHIR_RELEASE disables the debug code. PHALCON_RELEASE / ZEPHIR_RELEASE were used for production builds.. #ifndef\nThat is, if ZEPHIR_RELEASE is NOT defined\u2026. Yes.. @sergeyklay could you please review this?. The entire block :-). This gathers all used variables (the code is from https://github.com/phalcon/zephir/blob/master/Library/ClassMethod.php#L1999), then retrieves only those which are initialized with zval_used_for_init (https://github.com/phalcon/zephir/blob/master/Library/Backends/ZendEngine2/Backend.php#L268).\n. The only issue is that this is ZE2-specific method :-(. This is specific only to this method. The current implementation is much like a hack :-(\nThere is no cleanup() method or something like this, therefore we have to (ab)use onPostCompile(). But the issue is that in postCompile() the entire method has already been generated, and we have to deal with the code in the text form.\nThe current logic is as follows:\n we get the list of all used variables and filter only the local ones;\n for every local variable we add a call to zval_dtor();\n all these calls are saved into a string;\n then we get the text code from the code printer and insert out string with zval_dtor()s right before the RETURN_xxx statement.\nI know that this is not an elegant solution, but with the current implementation of the compiler I was unable to come up with something more beautiful :-(\n. You mean, a macro?. Thanks. Please take a look. ",
    "dario1985": "Should be solved by https://github.com/phalcon/zephir/pull/160. Can you try again using the latest version?\n. Should be ok now, I removed spaces and used unix line endings. Right?\n. Hi,\nI detected that with this PR, implementing external interfaces stop working.\nMaybe for https://github.com/zaets28rus/zephir/commit/7b3dc58385f60e7d6d262d3dedf3dc898b13d56b? \nDebugging tests I see that interface name never is prefixed with . \nI added a test in https://github.com/dario1985/zephir/blob/master/test/oo/oonativeimplements.zep (> https://travis-ci.org/dario1985/zephir)\n. Thank you! I will PR the complete test.\nBut... In which case the FQN come with \\ prefix? I seen that all code in zephir use namespace without the \\ prefix. And all tests (f.e. accessing statics properties and constants, calling functions, and extends / implements classes and interfaces) repeat the current namespace.\n\nnamespace test;\nclass Foo extends test\\Bar\n{\n}\n\ninstead of php-like:\n\nnamespace test;\nclass Foo extends Bar # same namespace, or \\test\\Bar\n{\n}\n\nThis should be consistent in all cases.\n. Ok sorry, fixed.\n. I think there are no need to change the parser, only to change how namespaces are handled in the PHP compiler (but maybe I'm wrong) \nI opened the NFR because I think this change could be big (and all current tests have to be updated) and before start coding I prefer talk before.\n. Ok I start implement this way to permit use relative and absolute namespaces.\n. I just done a pull request with these changes in #194. Can you check if is ok?\nI moved the init of the AliasManager in precompile-time because I needed it for \"normalize\" names.\n. Sure, I will rebase too.\n. Ok, pushed\n. ",
    "SamHennessy": "Just eye balling this. You've not assigned a value to i.\n\"Only long and string values can be used as keys\" - http://zephir-lang.com/types.html#arrays\n. This complies for me:\nint i;   \n        double x;\n        var v;\n        let x = 7.5, v = [], i = 0;\n        while i < 10{\n            let v[i] = x*x*5.5;\n        }\n. Complies and runs. Thanks!\n. ",
    "duythien": "I hope zephir feature like C like double v[];\n. Hi all\nlet v[i] = x_x_5.5; //not working but\nlet v[i] = [x_x_5.5];//is working, \nand i can use it by v[i][0] It can meet necessary needs.\n. ",
    "ramsey": "@treffynnon What was your solution for working around the string return values in Zephir optimizers? I think I'm running into the same or a similar issue as you describe here. It's returning the name of the function (i.e. \"my_foobar()\") rather than running and returning the value of the C function my_foobar().\nMy optimizer looks like this:\nclass FoobarOptimizer extends OptimizerAbstract\n{\n    public function optimize(array $expression, Call $call, CompilationContext $context)\n    {\n        return new CompiledExpression('string', 'my_foobar()', $expression);\n    }\n}\nMy ZEP method looks like:\npublic static function foobar() -> string\n    {\n        return foobar();\n    }\nIn the generated code, I see the following:\nPHP_METHOD(Myext_Foobar, foobar) {\n    RETURN_STRING(\"my_foobar()\", 1);\n}\nI think I'm expecting to see something more like:\nRETURN_STRING(my_foobar(), 1);\n. Thanks, @phalcon. After looking through the existing optimizers, I was able to get things working by using the codePrinter with code that passes the zval into a custom C function and uses ZVAL_STRING() to set the string on the zval. I was going about it wrong, thinking that the compiled expression would turn into some structure like I mentioned above.\n. ",
    "swen100": "i get the same error :-(\n. great, thanks!\n. vote B\nfirst we need stability, completion and speed\n. :+1: \n. ",
    "nazar-pc": "I'm also wondering about this, just wanted to create such class.\nWhat is the actual limitation for this?\n. I'm currently installing it in Docker container, but in official Ubuntu build there is not sudo at all.\nI need to edit files manually.\n. What the reason behind it?\nComposer style allows to use such format, and it seems there is no technical reason for this error.\n. OK, I understand that this is just a convention. Thankfully, I can still hack compiler to get rid of this error.\n. @alanwillms initially I've edited source code, but I've encountered few other problems afterwards.\nSince no one answered for some of them and I wasn't able to solve them - I just gave up.\nZephir is not currently usable for me.\n. As I said in first message - just commenting check that namespace should start with capital letter worked for me.\n. ",
    "pigochu": "sorry , I update zephir and run again\nzephir_is_iterable_ex looks like be fixed.\nBut zephir_fast_count_int has Segment fault now.\n(gdb) run /srv/www/boostyii/demo/web/index-boost.php\nStarting program: /usr/bin/php /srv/www/boostyii/demo/web/index-boost.php\nwarning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000\n[Thread debugging using libthread_db enabled]\n[New Thread 0x7fffe4b92700 (LWP 4093)]\n[Thread 0x7fffe4b92700 (LWP 4093) exited]\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffe5622073 in zephir_fast_count_int () from /usr/lib64/php/modules/boostyii.so\n(gdb)\n. I just updated latest version , now working fine :+1:\nI will continue to observe , thank you\n. Ah...\ni have a idea. If i define a static function like __initstatic() in my class . The function only be call once when loading this extension .\n. Zephir\\CompilerException: Can`t to define static property with default value: empty-array\nclass Test {\n    private static b=[];\n}\n. ",
    "taophp": "Fine for me now! Thanks.\n. Thanks to netyum I change my code this way:\n```\nnamespace Taophp;\nclass test\n{\n    protected adapter;\npublic function setAdapter(var adapter)\n{\n    let this->adapter = adapter;\n}\n\npublic function someMethod(var methodName)\n{\n    this->setAdapter(this);\n    return this->adapter->{methodName}();\n}\n\npublic function testit()\n{\n    echo \"test\";\n}\n\n}\n```\nand now it works as expected. May be the documentation should be updated.\n. @ovr Maybe, but if yes, will it be ?\n. Great!\n. @nkt yes, it would be even better and more \"php-like\".\n. @nkt Implementing similar behaviour for methods would be great and would make Zephir as \"magical\" as PHP! :+1: \n. @ovr Thx for so fast action!\n. @nkt Do you want me to create an new issue asking to port the \"magic\" (i.e. allowing dynamic calls of properties or methods without quotes and braces) of PHP into Zephir ?\n. Great! And sorry to have duplicating...\n. You are right. I didn't think about the eventuality of extending the Zephir class in PHP and changing the return type.\n. ",
    "jmalloc": "Tested against 092b6d1 and this looks good now, thanks :)\n. ",
    "dschissler": "Example #2 \"Constant inside of a namespace\"\nhttp://www.php.net/manual/en/language.namespaces.fallback.php\nphp\nnamespace A\\B\\C;\n\n<pconst E_ERROR = 45;\n. Well I wouldn't kick my super model girlfriend out of bed for using them but its just not what an existing project already uses and I was hoping to be able to do a very painless class by class port to zephir.  Ulogin is all clever and everything and I want to be be able to just lag behind the authors work a bit to have two implementations.  I suppose that worst case I could include a PHP file with those constants in the namespace.  Not too many kittens would die that way.\n[removed a \"don't\" to mean not the opposite of what I wanted to say]\n. You know if its just not possible then I could advise the author not to use a \"constant in a namespace\".  I'm sort of assuming that he would do it that way since it would be most similar to his existing code but he might not.\nIs there an advantage to having it in the class for autoloading?\n. Any updates on this?  Is it difficult to implement?\n. It would be really amazing to have Traits for the Phalcon 4 era.  Not having them is really affecting the design of my extension.. Probably fixed.\n. @sergeyklay You closed my other issue but it is not the same.  You broke usage using phar:// protocol when called from within a phar between version 0.10.11 and 0.10.12.  This is recent new breakage.  That said, if you fix it all at once then great.. I don't understand.  You want to mix .zep files in with .php?  What is the use case for that?. Just so that we're clear I think that isn't really an operator when used for variadic arguments in the method signature.  Splat operator would be for inside function code and its probably two separate C codes that need to be written for each.  They are both pretty nice but for me the actual splat operator along with array deconstruction is something that I really miss in PHP when coming from Javascript.. Oh boy, another non-reporting issue which has caught me is having a function variable named the same as a parameter.  PHP or Javascript helps out more for example by telling you that something is not correct with that value but Zephir fails with weird error messages.   Its caught me a few times during refactors and I end up having to comment out a bunch of code to find it.  Now I know to look for so when I see that weird error I know what it means.. This just struck me again during a refactor.  Its difficult because not many languages require you to declare variable beforehand but then don't offer assistance around that.. The Solarized theme is a good compromise between a light background and being able to see the error messages.  It should definitely be able to just work on a default white terminal though.. I think that simply changing the yellow to the orange that you use when displaying \" ! [NOTE] Don't forget to restart your web server\" would be ideal.  Any chance that you can find the time to fit in this very small quality of life improvement?. You can do fancy stuff with posix_isatty to then strip the colors but that seems like a waste of time considering how much work Zephir needs.  Also it would hurt platform compatibility.. Good enough.  Don't even consider this until you've spent half a year adding operators and language structure.. For now I'll beusing the latest Zephir and ignoring this one broken aspect for now and when I need to be working with phars then I'll revert to the 0.10.11 version.. Additionally I've discovered that the implementation of Zephir require is quite odd in that if it fails to find a file then it will immediately halt the current method and then it will return a null to the previous method.  I see that Phalcon has also needed to write some odd code to work around this, (if you are aware of that or not).  I think that some more sane behavior should take place there like for starters not halting the calling function immediately if the file doesn't exist.  Or if it does halt then halt the entire program or something sane like that so that a file check would need to be called first (I don't prefer this option but its at least understandable).  Its just very odd non-intuitive hacky behavior as it is now.  Then its behavior when used for templating is broken (there is a bug around here somewhere) and now its broken when used in phar.  It sounds to me like require could use a complete overhaul.  Perhaps that is what you have been working on, I have no idea.. After thinking about it I think that I prefer that require halts if it can't load the file, possibly throwing a low level exception.  This is in line with PHP and the \"require\" word.  You'd probably have to write new code to get it to work like.  Probably the current behavior could be salvaged for use for a include language feature.. Related bug with require: #1621.. I'm sorry but my extension code is not yet public and the setup required is too much.  Simply 0.10.11 works and 0.10.12 does not work for zephir code doing a require call on something stored within the phar archive (so using phar:// protocol).  That is the best that I can provide at the moment.. Perhaps its a protocol issue? Try require \"file:///asdfasdf\" (file system protocol).\nBut called via unoptimized string of course.. @sergeyklay The latest development branch source works with with the phar so the revert worked.  Thanks.\nI'm liking the new zephir direction and I was never a fan of the old kind-of-broken install methods.  However, I had a problem with zephir build:\n```\ndschissler@host:/opt/project$ zephir build\nThe \"--backend\" option does not exist.  \nbuild [--backend BACKEND] [--dev] [--no-dev]\n```\nI was able to get it working by using zephir compile and then sudo zephir install.. It would be really nice if zephir could only use sudo on the specific necessary commands like most projects.  It would be great if for example I could just type zephir install and it would call sudo only at the one relevant command instead of running the entire script as sudo.  It seems to me that most projects do that.  The same with zephir build in that it can compile without root and then only needs root for the installation copy portion.. I want to add that Phalcon 3 already supports PHP 7.1 and 7.2 so the more conservative people already have quite a lot of room to get onto recent PHP versions and they can continue using Phalcon 3 just the same.  Considering that Phalcon 4 will be coming off a Phalcon LTS I think that you have room to be edgier with this next release.\nLook at this article about PHP 7.1 features. That looks like a hell of a lot of internal PHP changes to me.  Are you prepared to not be able to offer great new Zephir constructs and operators because you need to support PHP 7.0?. Has anyone investigated the internals of PHP 7.0 vs 7.1 in terms of new operators?  How much actual investigation has gone into getting an idea of how to add newer features into modern PHP Zephir?  It seems to me that 97% of that work goes back to the Andres days of PHP 5 and that PHP 7.0 was just shoe horned in and left to bit rot.  I see it that PHP 7.0 was a pretty boring feature release but it had a radically new engine but PHP 7.1 brought in tons of new operators and language features.  I find it unlikely that none of those new code paths have any value.. RHEL 8.0 beta is out and it supports PHP 7.2.\nhttps://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/. @niden @sergeyklay \nFrom the Phalcon blog:\n\nNOTE: This is the last release for the v3.x series. Our next version will only support PHP version 7.2 or later. If you are using PHP < 7.2 then you will need to use this version\n\nLike a drunken philosopher prophet - this best kind.  If you want to know about the Wall then I'll break that down for you as well.. @sergeyklay the latest 0.11.4-eb5db1a works perfectly in this regard for zephir build in that it asks for sudo only at the appropriate location.  However zephir compile and then zephir install don't work as I expect them to.  What is the intended behavior of compile and install?  I expected compile to only compile the zephir -> C -> binary without installing it.  Then I expected install to not try to compile the source and only to install the extension.  As it is now the install subcommand requires root to be used in its entirety but build is working in a more intelligent manner.\nPerhaps the problem is only with zephir install?  I'm thinking that it should say:\ninstall    Installs the compiled extension in the extension directory\nNotice that I added \"compiled\" and removed the disclaimer about root.  The sudo prompt takes care of this and also you aren't currently advertising this for build either.\nI don't think that install should attempt to compile the source if it has not been compiled.  Actually I don't think that it should even check that the extension is up to date.  IMO just keep it simple and install the extension.  So really that is just short hand for a few shell commands.  Otherwise you have essentially build and install doing the same thing but with install being more primitive and broken in regards to sudo.\nSo perhaps everything is good and you should only simplify/rework the install subcommand.\nSo in my mind zephir build really does the following:\nzephir generate\nzephir compile (also generates)\nzephir install\n. I think that to be completely consistent that:\n\ninstall shouldn't try to generate or build,\ncompile shouldn't try to generate\n\nThese commands can be strung together manually for intense customization and debugging and 95% of Zephir developers just will use zephir build.  Again, I can't say that its common sense now and the commands try to do too much, more than they advertise.\nYou could even put a small help on the zephir build description (start here), (use this) or something like that since its non-obvious on first use which command to use to just build and install the damn extension.  I really like how you've removed the poop in the Zephir setup in this 0.11.4 and if you clean up the commands themselves a bit then I can say that Zephir is user friendly.  As it is now it just falls a little bit short.. In fact I'd like you to add \"bug\" to this instead of just \"enhancement\".  To use zephir install I need to call it as root sudo zephir install and then my ext directory is owned by root and so I can't work with it as my normal user.  That is just all broken to hell.. I changed the title.  The \"and other broken things\" covers it.. On a partially positive note, it seems that you made the compilation of an extension to be dramatically faster than it was before when very little was changed.  The problem with it is that I can't trust the compile process / cache at the moment unless I see it doing some real work.\nI've also experienced that my zephir cache build stuff can get into a state where I need to do a fullclean before it will attempt to rebuild.  Possibly the same or similar issue but not having to do with a namespace.  It displays a message in block red about a/the file already existing but I didn't it down at the time.\nSo my impression is that you reworked the build cache and that it works fantastically until it doesn't.. I just wasted 15-20 minutes going through logs trying to find a web server config bug only to discover that zephir build did not either build or install the latest code.  In this instance I had not done any renaming of files or namespaces.  There is something wrong and I can't trust the cache at all.. Also I'll add that lets face it, a warning is basically a full on error in this case.  Nobody is going to put something into production that spews warnings into the logs.  A warning in this case is effectively as prohibiting as a full on halt error.. > That said, are you running a custom compile of Phalcon built with Zephir 0.11.x? Because that's unsupported entirely - Phalcon should always be built with Zephir 0.10.x.\nIf that is the case then it really should be written out in a more obvious way.  I can't say that is not written out somewhere but I've never seen it.\nHowever, my Phalcon is coming from the Ubuntu package and my extension is currently built with 0.11.6.\nPerhaps the merge method could be relaxed to var config and then it could attempt to case an object to array or just to expand it to also accepting an array.\nphp\n    return $config\n        ->merge(new Config([\n            'paths' => [\n                'otherDir' => '/abc'\n            ]\n        ]));\ncould become the following in user code:\nphp\n    return $config\n        ->merge([\n            'paths' => [\n                'otherDir' => '/abc'\n            ]\n        ]);. Yeah. @danhunsaker As a member of the Phalcon team I'd hope that you could get on top of that pretty screwed situation of quietly not supporting the latest version of Zephir when there are no visible (or at least prominent) notifications or labellings for such a situation.  That seems to me like something that should make its way out of the chat room and into public knowledge.. You are a a Github Phalcon \"People\".  I just assumed.  That is about 99% why I removed myself from that list.  I found it to be a totally pointless designation without significance.. @zuozhehao You should be able to get it to work for now by changing it to:\nzephir\nlet result = \\Work\\Task\\Timer::wait();\nIts because the thingy thing can't get up to the thing.\nOther than that Yeaaah baby yeeaah, I've loving the new anon functions.  @sergeyklay @dreamsxin You guys make drinking fun again. :beer: :beers: :beer: :beer: :beer:\nAs you can see I'm doing all kinds of wonderful that wasn't possible until recently.\n```zephir\n    protected function attachEventsManager( di)\n    {\n        var em, eventFunc;\n    let em = new EventsManager();\n\n    let eventFunc = function(event, di, data) {\n        var instance = data[\"instance\"];\n\n        if typeof instance == \"object\" {\n            // if instance instanceof AutosetupInterface {\n            if instance instanceof \\Perch\\Di\\Service\\AutosetupInterface {\n                instance->autosetup();\n            }\n        }\n    };\n\n    em->attach(\"di:afterServiceResolve\", \\Closure::bind(eventFunc, di));\n    di->setInternalEventsManager(em);\n}\n\n``. Maybe whoever tackles that can get::classworking since there may be some overlap in research.  With this bug fix and that new feature then Zephir pretty much has all of the basics.. I say skip the funkylistlanguage construct masquerading as function and just go to the proper destructuring syntax.  That is unless the[and]` tokens are done so inflexible in Zephir that it would require a major refactor.\nSo:\n```zephir\nvar firstName, lastName;\nlet [firstName, lastName] = param;\n```\nexpands to:\n```zephir\nvar firstName, lastName;\nlet firstName = param[0];\nlet lastName = param[1];\n```\nand then later see if it can somehow be improved ever so slightly in performance by hooking into how PHP 7.1+ does it.  It probably quite irrelevant though since its so simple.\nAnyways I say do it as quickly as possible and then worry about the tiniest optimizations later.. Is there a problem reusing the bracket tokens?. Well brackets are used for destructuring in PHP and ES6 Javascript.  So why model it on some other language or reinvent the wheel?. If it uses brackets then it would be easier to expand the destructuring to map arrays (someday) without adding another form.  I can't think of a syntax for that which wouldn't benefit from being enclosed in brackets.  Sure, it could be done but its then starting to look too yamlish in code for my liking.\nFor example of just one possibility:\nlet [\"LANG_ONE\": lang1, \"LANG_TWO\": lang2]     = langs;\nSo what do you do without brackets?\nlet \"LANG_ONE\": lang1, \"LANG_TWO\": lang2     = langs;\nI've personally been moving away from that last trend of super loose languages.\nAnother point is that Zephir is very easy to read.  The brackets immediately tell first time readers what is going on.\nIs there any other language that you are drawing inspiration from for the bracketless syntax?  For if there are many other languages that don't use parenthesis and so its easy to know if there are downsides to that.  Its not exactly exotic to do if cond {, its just not used in C type languages.  Big difference IMO.. Another weird point:\n\nAs of PHP 5.3.3, methods with the same name as the last element of a namespaced class name will no longer be treated as constructor. This change doesn't affect non-namespaced classes.\n\nSo all Zephir could have this removed since Zephir classes will always be namespaced.  So this has basically never been relevant in the lifetime of Zephir, which is PHP 5.3.3+.\nNow I have to rename either my Gettext class and namespace or the gettext method.  Really annoying!  I've had to bleed all over the damn place to get my extension to the place it is now.. Correction, I can compile it but it crashes PHP and so I have to delete my installed extension to be able to continue.  So somehow PHP is treating classes from the Zephir compiled .so as different than normal PHP.  At any rate with whatever solution this is bad behaviour.. Of course it can be done without new language features.. Man I wish that I knew how to do all the Z_ stuff.. @dreamsxin I was making a fluff comment that I want to learn how to write the C some day.  I already do quite a lot of .zep programming.  I'm learning Rust now so I'll come back around to C someday.. Thanks, that is a good one.  There is also a good PHP extension in Rust article somewhere.  I think that Rust is a good fit because I can use it for WASM, PHP extensions and it will be growing a lot over the next several years.  I will learn PHP extensions using Rust and then later I should be able to read all of the C code for Zephir and that only the boilerplate will be different.. of course.  Thanks.. ",
    "chefchef": "The main question if It's possible to optimize the recursion functions in general cases or I need to create a specific optimizer (only valid for this algorithm). Thanks!\n. Edited. Logically it was an error to create the issue. In other computer the result is approximate:\nPHP 0.55 sec\nZEPHIR 1 sec\n. ",
    "richardh68": "It looks like to me the issue isn't recursive functions specifically. The problem appears to be the cost of function calls and the problem is exacerbated in recursive functions due to the repeated function calls..\nMay be there is a way to reduce the overall cost of a function call\n. ",
    "fezfez": "I have the same issue \nZephir\\CompilerException: Cannot define static property with default value: array in /var/www/default/php/php-to-zephir/symfony/component/yaml/escaper.zep on line 32\nprivate static $escaped  = ['\\\\\\\\', '\\\\\"', '\\\\\\\\', '\\\\\"',\n    ----------^\nZephir version 0.5.5a and same probleme with 054f45b\n. I don't understand why, because i try to translate a php code.\nYou can see the php line here : https://github.com/symfony/Yaml/blob/master/Escaper.php#L29\nThanks in advance\n. Close ?\n. Hi,\nI'm facing with the same issue, could you try to fix it ?\nThanks for your awesome work !\n. :-1: There is more important part to implement, like references.\nI think it would be more interessting to stabilize the language before adding this type of feature.\n. @baszczewski : :+1: \n. Any news ?\n. With B option :  \nPhp \n``` php\n$myArray = array(1, 2, 3, 4);\nforeach ($myArray as &$value) {\n    $value = $value * 2;\n}\n// $myArray is now array(2, 4, 6, 8)\n```\nZephir\n``` zephir\nvar myArray;\nlet myArray = [1, 2, 3, 4];\nfor ref value in myArray {\n    value = value * 2;\n}\n// myArray is now [2, 4, 6, 8]\n```\n@andresgutierrez, @phalcon : Would be a correct translation ?\n. any news ?. @mervick Why dont you make a PR ? . @prisis Why not ! I will try later this day. A new base of code is not a bad idea. is it Framework ?\n. Close, not an issue.\n. It's not possible.\nI encounter this case with php-to-zephir translator and symfony/event-dispatcher. The solution was to translate switch to if.\n. ping @ovr \n. Any news ?\n. Close ?\n. @andresgutierrez  How to catch notice/warning then ?\nA sample of usefull @ \n``` php\n$isUnlink = @unlink('file');\nif ($isUnlink === false) {\n    echo 'Not unlink';\n}\n// output \n// Not unlink\n// Without @\n$isUnlink = unlink('file');\nif ($isUnlink === false) {\n    echo 'Not unlink';\n}\n// output \n// Warning: unlink('file') [function.unlink]: No such file or directory in ...\n// Not unlink\n```\n. A sample of good use of '@' https://github.com/symfony/Filesystem/blob/master/Filesystem.php#L95 \nOf course you have to test the return of the method who have the silent error...\nIn PHP7 the notice/warning etc... are catchable. the silent symbole is no more usefull but in PHP5....\n. Or maybe add exception system like PHP7 ?\n. Duplicate #609 \n. Zephir version ?\n. Sorry for the mistake... i thought that was possible.\nClose\n. :-1: \n. see : https://github.com/phalcon/zephir/blob/master/CONTRIBUTING.md\n. Duplicate, see #888 \n. Wow, great job :beers: !\n. Using the dev branch throw an exception.\n```\nZephir\\CompilerException: Cannot locate interface Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface when implementing interfaces on Symfony\\Component\\EventDispatcher\\DependencyInjection\\RegisterListenersPass\nat Library/ClassDefinition.php(1104)\n```\n. @lajosbencz : Could you please submit a sample of your code ?\n. @steffengy : God point, the case happen on direct translation a package with php-to-zephir with a suggested package, i do have to ignore this class.\nThanks !\n. @ovr : Re push to dev ?\n. So @andresgutierrez re push to dev ?\n. @andresgutierrez Done ! Could you take a look ?\n. @andresgutierrez @steffengy : Any chance to merge this PR ? :beers: \n. Ooops.. create PR in master... \n. @andresgutierrez @steffengy : Any chance to merge this PR ? :beers:\n. @steffengy : First you have to activate the coverage in you scrutinizer config (https://scrutinizer-ci.com/docs/tools/external-code-coverage/#changes-in-scrutinizer-configuration) but i think if the total configuration (scrutinizer config + send coverage) is not in master scrutinizer will not show coverage.\n. Can you add a sample code ?\n. try\nzephir\nvar lala = \"asdasdasda\";\nvar_dump(length(lala));\n. Sorry, i made a typo... try :\nzephir\nvar lala = \"asdasdasda\";\nvar_dump(strlen(lala));\n. This is my actual reserved word list, is it ok ?\n- inline\n- Inline\n- array\n- class\n- var\n- bool\n- namespace\n- const\n- enum\n- interface\n- loop\n- for\n- foreach\n- if\n- elseif\n- else\n- function\n- private\n- protected\n- public\n- boolean\n- return\n- abstract\n- resource\n- callable\n- string\n- float\n- int\n. @Green-Cat Thanks :+1: \n. zephir\nthis->_di->set(\"service\",  = function(){\nWhy there is an equal ?\n. Yep , thanks :+1: \n. @nkt , @phalcon , @steffengy ping !\n. @steffengy if every one is ok with the concept, i can make a POC :)\n. First POC available https://github.com/fezfez/zephir-testcase.\n. See #1104\n. :+1: \n. Can you explain a little bit more ?\n. Description from php doc : \nphp\nmixed preg_replace_callback (mixed $pattern, callable $callback, mixed $subject [, int $limit = -1 [, int &$count]])\nThe second argument must a callable not a string\n. close ?\n. Same error here https://travis-ci.org/fezfez/php-to-zephir-samples/jobs/101381866#L362\n. RTFM http://docs.zephir-lang.com/en/latest/oop.html#implementing-properties\n. PHP_BINARY seem available since php 5.4, which version do you use ?\n. So how to optimize with gcc ? (i'm not a c programmer...)\n. With 03 option\n``` bash\ntime php -d extension=/usr/lib/php5/20131226/toto.so testzep.php \nreal    0m5.549s\nuser    0m0.140s\nsys 0m3.040s\n```\nWith 0s option\n``` bash\ntime php -d extension=/usr/lib/php5/20131226/toto.so testzep.php \nreal    0m4.199s\nuser    0m0.136s\nsys 0m3.064s\n```\nApparently, even with flag optimisation, it's better to write optimized code.\n. It will be great if we can unit test this method https://github.com/phalcon/zephir/blob/b335770d414aaee3a7b8a214d2b0c9041e731399/Library/Statements/ForStatement.php\nCan we translate a piece of zephir code into $statement ?\n. I have change the alias manager instantiation just for not to be force to call \"preCompile\" method\n. You should use data provider (https://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers)\n. ",
    "Swader": "If time permits, I vote a), do it. This would allow Phalcon to exist on shared hosts that have a PHP version that's modern enough, enhancing reach greatly. It would also let people use Phalcon on GAE, and then simply keep their code intact when GAE finally does adopt Phalcon as a proper extension (at least in theory, right?).\nHow much would this implementation slow down Zephir's development? If by a lot, I vote b).\nRegarding not being able to export C blocks and integrations with low level C libs, not sure how to approach that other than devs declaring their project for export to C, PHP or both.\n. ",
    "DavertMik": "This idea looks great. For instance, when I develop a library I want it to be available to all the PHP community and not only to those who can install extensions. As you said, extensions are not so widely adopted. So it would be cool if a PHP library can be used, and replaced with C-library in production. If that's possible to keep the complete compatibility that would be awesome. If a library can be distributed in both ways... Yeah, cool\nAlso I think PHP comes to era where it will get some metalanguages, as there was CoffeeScript for JS. If you can't deal with all the old dirty stuff with PHP and you need better structure, better syntax, etc, you can choose this metalanguage and not wait for PHP 5.XXX to have static typing, or short function calls. There are already few coffee-script-like projects for PHP but they are not so widely popular, just because they do not provide any benefits nor build tools for smooth development. \nSo I think that is really good direction to move on. I can't insist, I'm not sure that as a library developer I will use Zephir in nearest future. But I really like the ideas! \n. ",
    "wlejon": "I love the idea.\nIn the near term, I think it's more important to become a DSL than a new scripting language.\nThe likelihood of adoption for a better programming language that runs in existing environments is much higher than a completely new language. Languages have been solved. Competing in that realm would be difficult.\nTool support will already be a long task to complete, adding another layer of compilation (including existing libraries in PHP) will only slow down potential adoption. \nI vote B.\n. ",
    "ywliu": "I am thinking about short-, middle- and long-term scenarios.\nOur ambition decides its future. But so far, Zephir is still at its infancy. It's hard to decide to what or how it will grow. \nIn the short term, Zephir is definitely the coolest tool available in the PHP world. Now the threshold to create a C-extension is lowered dramatically. It's where it started.\nIn the middle and long terms, I cannot envision how it will evolve.  \nBut in terms of  \"parents' hopes\", maybe it can replace PHP as a new platform, with the PHP compatible syntax but as fast as C. Who knows (BTW, wasn't  this HipHop supposed to do ? :) Or a PHP with steroids, like Scala, Groovy on JVM ? A new PHP with all the language beauties borrowed from Python or Ruby ?\nI suggest we focus on the short term and near future, to make Zephir the coolest tool for PHP ever. Keep our brainstorming here and let's see how it will grow. Then we will know how to restructure our code base.\nAs for now, I vote B.\n. ",
    "jimmycdinata": "I vote B.\nWe need test Zephir first in real world. Adding more time to add 'cool' feature, doesn't change the current situation.\nIMHO, launch Zephir, launch Zephir, launch Zephir.\n. ",
    "ikandars": "I vote b\nFirst thing first. Make Zaphir stable then go to next feature.\n. ",
    "dioramayuanito": "i vote b\n. ",
    "asp24": "I vote C.\n. ",
    "carlosbuenosvinos": "Release and the ask again :)\n. ",
    "SliceOfLife": "I vote C.\n. Yes, but the parent class has.\n. OK, it means, that the compatibility with Phalcon 1.3.x is not full. Because stubs for 1.3.x has this properties.\nSo, is it possible to compile .zep code with this magic callings?\n. OK, sorry for false alarm.\n. Also += is unsupported too.\n. So... I can't use multiple comments to comment my code?..\n. Yes, you are right.\n. I already rewrite the code to use if instead of switch, but it looks ugly :(\n. For example\n``` zep\nswitch (true) {\n    case var1 > 10 && var1 < 20:\n    case var2 == var1:\n    case var2 > 100500:\n        return sprintf(\"var1 = %d, var2 = %d\", var1, var2);\ncase var2 < 0:\ncase var1 <= 10 || var1 >= 20:\n    throw new \\Exception();\n\n}\n```\nInstead of this I should use if:\nzep\nif (var1 > 10 && var1 < 20) || (var2 == var1) || (var2 > 100500) {\n    return sprintf(\"var1 = %d, var2 = %d\", var1, var2);\n} elseif (var2 < 0) || (var1 <= 10 || var1 >= 20) {\n    throw new \\Exception();\n}\nIt's similar, but looks not so clearly.\n. Why this switch returns \"2\"?\n. Yes, yes, we can.\nBut this behavior violations broke ported PHP code in unexpected points without any compiler or parser warnings.\n. Thanks\n. Yes, this is not a blocker bug, but we see a parser issue anyway.\n. I think, this is Mac OS-specific error, because file system is not case-sensitive.\nI put \nphp\n echo \"{$path}\\n\";\nbefore\nphp\nrequire_once $path;\nin .../zephir/Library/FunctionCall.php::optimize() at line 210 and got this:\n.../zephir/Library/Optimizers/FunctionCall/JsonEncodeOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/ExplodeOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/FwriteOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/FcloseOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/ArrayKeysOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/ImplodeOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/UcfirstOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/MethodExistsOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/ExitOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/RtrimOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/CountOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/ClassExistsOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/FunctionExistsOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/VarDumpOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/StrLenOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/MtRandOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/StrReplaceOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/IsArrayOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/FloorOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/TimeOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/StrtolowerOptimizer.php\n.../zephir/Library/Optimizers/FunctionCall/StrlenOptimizer.php\nPHP Fatal error:  require_once(): Cannot redeclare class zephir\\optimizers\\functioncall\\strlenoptimizer in .../zephir/Library/FunctionCall.php on line 211\nFirstly we call StrLenOptimizer.php and then StrlenOptimizer.php\n. I'm stupid.\nNo function str_len in PHP, but strlen exists.\n. Probably yes. But we can see a minor trouble with this on Mac OS anyway.\nIn .../zephir/Library/FunctionCall.php::optimize() we have code:\nphp\n$camelizeFunctionName = Utils::camelize($funcName);\nIf we use incorrect str_len function instead of correct strlen, Zephir will try to include StrLenOptimizer.php instead of StrlenOptimizer.php.\nOn case-sensetive FS this is not a trouble, because file_exists() will return false, but for Mac OS file will be included.\n. Nohow. Compile, run, see the exception. Meditate.\n. All my project in my mind :) Meditation is really works for me.\n. ",
    "alekciy": "I vote C.\nP.S. habr.ru same (nkt comment link).\n. ",
    "Agent-J": "My vote for B.\nYou should focus on stable version first.\n. ",
    "ValeriySelitskiyViber": "Stabilize it for production use first. its a great aim for a major update, though.\n. ",
    "jodator": "Delivering working stuff earlier is better then polishing stuff to the finest and releasing it later. So I think that main concern should be releasing stable Zephir & Phalcon 2.0. Don't see any use for generating PHP code for shared hosting. Cool feature as a bonus but not obligatory in my opinion.\nMy vote for C (or later on B if this kind of features are desired by others).\nps.: option A is a worst case scenario - Zephir & Phalcon 2.0 should be released as soon as possible\n. ",
    "xavierleune": "I vote B\nWe really need to see phalcon and zephir 2 live.\nI think you have to be focused on the first goal : have a way to write php extensions easily.\n. ",
    "levani": "I vote C.\nZephir is great but not for writing php code. My personal opinion.\n. ",
    "kkamkou": "@DavertMik the PHP avg. level is really low, almost like JS community. I think that It is not a good idea to allow such developers to code extensions on C. Besides of that, try to code normal JS after the CoffeeScript. And if you know it very well I'm pretty sure you know that a more complex application looks ugly.\nYou are absolutely right about a library distribution. ZF3, Sf and other frameworks can be \"packed\" to native extensions. Great!\n@phalcon, the community is huge. The idea is perfect. Voting for B, because I think you have to have a clear picture about your solution and the future of it. And it is all about ideas/help and proposals you can gather after release.\np.s. @ovr tabs are less important than spaces and print is faster than echo. or what do you think?\n. ",
    "oleg578": "I vote C . And only C. Better develop the main functionality.  Good luck!\n. :)\n. ",
    "xboston": "I vote B =)\n. ",
    "brandonlamb": "Also B (I think).\nI am loving zephir so far. Already released a php hal library (https://github.com/brandonlamb/hal-1) and am now working on converting Spot ORM to zephir.\nI really like the idea of just having this sort-of like php meta language, I am finding it pretty easy and trivial to write in. I would love to see more features added like returning references, static::method() and overall stabilization.\nA CoffeeScript for PHP project seems like (to me) it should be its own project, keep zephir a metalanguage to build c code and optimize the hell out of it.\n. +1\n. Sweet!\n. Ah ok, cool, thanks!\nedit - closed, then thought maybe it would be used for bug tracking so reopened\n. As a follow-up and just for regurgitating, is it ok to have:\nphp\npublic function blah(string! name) {\n    let name = \"New value\";\n}\nAre there different rules for different types? Is it ok to reassign an array?\nphp\npublic function blah(array config) {\n    let config[\"name\"] = \"A new element\";\n}\nI ran into some odd issues where it made me wonder if the \"array\" type hint expects only a numerically indexed array and not a map/hash?\n. +1\n. Oh sorry, no maybe that was not clear. Here are some examples\nclass Foo {\n   public function get(string class);\n   public function setResource(<\\Ns\\Resource> resource);\n   public function set(callable);\n}\npublic function bar() {\n    return this->fetch(2);\n}\nThe use of \"class\", \"resource\", \"callable\", \"fetch\" are common names that cannot be used.\nBasically along the same vein as how in php you can have $class, $array = array(1, 2), $string = 'blah', $function = 'doThing', etc\n. I have yet to figure out good rule of thumb for when to use actual array type versus var.\nIt seems you have to use a var (must define a zval?) to use the variable with php functions, or isset, empty, not sure about fetch.\nI have had some weirdness when using array typed method parameters.\nAlso, not sure what \"const array args = null\" does, using const for method param seems odd?\nQuick fix, change to var and then have a check for \nphp\nif typeof args != \"array\" {\n    throw new \\Exception(\"must be array\");\n}\n. ",
    "darkgaro": "I love what you guys are doing and I would love to see more of zephir bugs fixed and more  functionality built out first, so I vote for B. \n. I am experiencing similar problem,  with mine what is happening is that when assigning an element to index of an array that lives as static property , it just assigns it directly to the static property and overwriting the array. \n``` php\nclass Test {\nprotected static _cachedContainers;\n\npublic static function setCachedContainer(string id, value)\n{\n    let self::_cachedContainers[id] = value;\n}\n\npublic static function getCachedContainer(string id)\n{\n    return self::_cachedContainers[id];\n}\n\npublic static function run() \n   {\n       self::setCachedContainer(\"test\", \"name\");\n       var_dump(self::_cachedContainers);  // string(4) \"name\"\n}\n]\n``\n. I briefly looked at /zephir/Library/MethodCall.php and first thing that jumped out is that while zephir parser is correctly marking the expression as CALL_DYNAMIC (2)   inside MethodCall class I see tons of code that takes care of case ::php $type == self::CALL_NORMAL || $type == self::CALL_DYNAMIC_STRINGbut no checks or specific code that handles CALL_DYNAMIC. \nWithout looking digging deeper into I don't know if that that is supposed to be like that, but looks suspicious.  \n. I was able kind of to get the dynamic method working by adding code at the end of MethodCall.php that generates C code. Again I am not that familiar with the internal workings so I am not sure if this would be the proper way since it is relying onphp $variableMethod->getPossibleValue()->getCode();` and not sure how accurate that is or how deep up the scope it follows. \n``` php\n        /\n         * Generate the code according to the call type\n         */\n        if ($type == self::CALL_NORMAL || $type == self::CALL_DYNAMIC_STRING) {\n          /// .....  existing code \n        } else if (@strlen($variableMethod->getPossibleValue()->getCode())){\n            /\n             * Check if the method call can have an inline cache\n             */\n            $methodCache = $compilationContext->cacheManager->getMethodCache();\n            $cachePointer = $methodCache->get($compilationContext, isset($method) ? $method : null);\n        if (!count($params)) {\n\n            if ($isExpecting) {\n                if ($symbolVariable->getName() == 'return_value') {\n                    $codePrinter->output('ZEPHIR_RETURN_CALL_METHOD(' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\", ' . $cachePointer . ');');\n                } else {\n                    $codePrinter->output('ZEPHIR_CALL_METHOD(&' . $symbolVariable->getName() . ', ' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\",  ' . $cachePointer . ');');\n                }\n            } else {\n                $codePrinter->output('ZEPHIR_CALL_METHOD(NULL, ' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\", ' . $cachePointer . ');');\n            }\n\n        } else {\n\n            if ($isExpecting) {\n                if ($symbolVariable->getName() == 'return_value') {\n                    $codePrinter->output('ZEPHIR_RETURN_CALL_METHOD(' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\", ' . $cachePointer . ', ' . join(', ', $params) . ');');\n                } else {\n                    $codePrinter->output('ZEPHIR_CALL_METHOD(&' . $symbolVariable->getName() . ', ' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\", ' . $cachePointer . ', ' . join(', ', $params) . ');');\n                }\n            } else {\n                $codePrinter->output('ZEPHIR_CALL_METHOD(NULL, ' . $variableVariable->getName() . ',  \"' . $variableMethod->getPossibleValue()->getCode() . '\", ' . $cachePointer . ', ' . join(', ', $params) . ');');\n            }\n\n        }\n    }\n\n```\n. K I realized that above code doesn't take into consideration variables set at runtime so I made a change that uses it\n``` php\n       /*\n         * Generate the code according to the call type\n         /\n        if ($type == self::CALL_NORMAL || $type == self::CALL_DYNAMIC_STRING) {\n         /// .....  existing code \n    } else if (@strlen($variableMethod->getPossibleValue()->getCode())){\n        /**\n         * Check if the method call can have an inline cache\n         */\n        $methodCache = $compilationContext->cacheManager->getMethodCache();\n        $cachePointer = $methodCache->get($compilationContext, isset($method) ? $method : null);\n\n        $methodName = $expression['name'];\n\n        if (!count($params)) {\n\n            if ($isExpecting) {\n                if ($symbolVariable->getName() == 'return_value') {\n                    $codePrinter->output('ZEPHIR_RETURN_CALL_METHOD(' . $variableVariable->getName() . ',  Z_STRVAL_P(' . $methodName. '), ' . $cachePointer . ');');\n                } else {\n                    $codePrinter->output('ZEPHIR_CALL_METHOD(&' . $symbolVariable->getName() . ', ' . $variableVariable->getName() . ', Z_STRVAL_P(' . $methodName. '),  ' . $cachePointer . ');');\n                }\n            } else {\n                $codePrinter->output('ZEPHIR_CALL_METHOD(NULL, ' . $variableVariable->getName() . ',  Z_STRVAL_P(' . $methodName. '), ' . $cachePointer . ');');\n            }\n\n        } else {\n\n            if ($isExpecting) {\n                if ($symbolVariable->getName() == 'return_value') {\n                    $codePrinter->output('ZEPHIR_RETURN_CALL_METHOD(' . $variableVariable->getName() . ',  Z_STRVAL_P(' . $methodName. '), ' . $cachePointer . ', ' . join(', ', $params) . ');');\n                } else {\n                    $codePrinter->output('ZEPHIR_CALL_METHOD(&' . $symbolVariable->getName() . ', ' . $variableVariable->getName() . ', Z_STRVAL_P(' . $methodName. '), ' . $cachePointer . ', ' . join(', ', $params) . ');');\n                }\n            } else {\n                $codePrinter->output('ZEPHIR_CALL_METHOD(NULL, ' . $variableVariable->getName() . ',  Z_STRVAL_P(' . $methodName. '), ' . $cachePointer . ', ' . join(', ', $params) . ');');\n            }\n\n        }\n    }\n\n```\n. Got the latest and I've encountered this one in my code before but forgot to post it , but at least in my project there are cases when dynamic method variable is local so expecting a pointer fails the compilation : \n/usr/include/php5/Zend/zend_operators.h:458:38: error: invalid type argument of unary '*' (have 'zval')\n #define Z_STRVAL_P(zval_p)  Z_STRVAL(*zval_p)\n                                      ^\n./kernel/fcall.h:195:28: note: in definition of macro 'ZEPHIR_CALL_METHOD'\n   if (__builtin_constant_p(method)) { \\\n                            ^\nI have a fix in my fork for it where I have a check if its a local var. \nphp\n                if ($variableMethod->isLocalOnly()) {\n                    $strValType = \"Z_STRVAL\";\n                }\n                else {\n                    $strValType = \"Z_STRVAL_P\";\n                }\n....\nYou can pull at and see if its a good enough fix.  https://github.com/darkgaro/zephir/commit/33810c4018ca3aa2f135e2f261579e574bcf9c19\n. Phalcon, any plans to have support for it?\n. Yes I am already using it that way, its just a lot of work especially if I need to simulate the ability of 'use' keyword php function () use ($var, $var2...) {}.  Most of the times I solve it by creating a custom object to act as a closure object and then passing that around. \nI understand it might be difficult to implement, and there are probably other more important features that would come in first. \n. I would like to know too if it was possible?\n. I have tried to mess little bit with this too but no success, I was trying to use : zend_register_internal_class_ex(&ce,NULL , \"Phalcon\\\\Mvc\\\\Collection\" TSRMLS_CC)\nand it would compile fine but I would get an error when launching php that it could not find the class that it was trying to extend from, I made sure that Phalcon module was loaded first. I am not that familiar with php extensions workings so I am not sure how one would extend a class across modules, and if its even possible. \n. K I was able to figure out how to extend from phalcon extension. \nThere is one caveat and that is that it requires you to modify original phalcon ext .h files and recompile phalcon module.\nThere are few smaller changes I had to make to zephir compiler code as well. Its all little bit hackish and I haven't spent tons of times testing it so decide to use this at your own risk. \nIf you are interested you can get the code from my zephir fork at : https://github.com/darkgaro/zephir,  which has the latest original phalcon/zephir changes merged in.\nIf you are only interested in commit that fixes it : https://github.com/darkgaro/zephir/commit/9327a67fcdae2b65e375ca50768efd26e9c0754f\nOnce you are using my fork you will have to add this your custom extension config.json \n\"compiler_directives\": {\n        \"extend_external\" : true\n    },\nThat will enable the code I added in zephir\nAnd ofcourse you will have to make changes to phalcon ext code and recompile it. \nFor every phalcon class you want to extend you will have to find it's header file and add PHPAPI right after extern and before zend_class_entry\nSo in case of ext/mvc/model.h file \nYou would have \nC\nextern PHPAPI zend_class_entry *phalcon_mvc_model_ce;\nAnd lastly in your php extension loading configuration you will need to make sure that phalcon module is loaded always before yours. \n. Oh yeah forgot to tell you , if you are trying to implement phalcon interface it will not work, my solution will only work for classes.\nI actually need to implement few phalcon interfaces for my project so I am looking into it as well. \n. K I think I have figured it out,   I committed the changes to my zephir fork : https://github.com/darkgaro/zephir\nYou have to do the same for interfaces , added PHPAPI as for classes. \nLet me know if it works for you, I didn't have too much testing for it. \n. No problem, glad you found it useful. \n. Just to add to this, I have also realized that because of the way I am extending the classes \"by class name\"  there is no need to add \"PHPAPI\" to phalcon.  My understanding is that would only be needed if extending classes by \"ce\". \n. @jymboche \nAs far as I understand is that extending it by name doesn't require that you have to link phalcon header files when you are compiling your extension. You just have to make sure that phalcon extension is always loaded first.\nFor example to extend interface there was no PHP provided way to extend by name so I had to write in c a lookup of interface by name, which is what my code does when extending an interface.\n Of course extending like this doesn't give you error catching at compile time.\nI have not synced up my zephir fork in a little while, been working on another area of my project, and was going to come back and do it little bit later but if @phalcon and team wants it maybe I will sync it up and submit for pull request.\n. I've synced up my fork to the latest zephir\n. Sorry I haven't had a chance to work on preparing it to be pulled in. in order to contribute my code I needed to get the unit testing done for it, since that is the requirement for any contribution. I was actually trying to get the unit testing done on another issue/bug, but there isn't much documentation on how to properly setup unit testing for zephir and I don't have too much time to tinker with it so I haven't tried to figure it out on my own.\nPlus I am not sure if this would be even accepted to the main repo, I have never heard them say they would want it in, so I didn't want to go spend all the time preparing it if they didn't want it.\n@phalcon Would you want this to be pulled in?  Also is there a proper documentation / instructions on how to properly setup unit testing and prepare the code for contribution that will pass the pull request and CI?  I know there is a page for contributors but that doesn't have much on unit testing requirements. \n@rushmorem since I actively use the fork for my own development I try to keep my fork synced up whenever there are significant bug fixes and features in the main repo\n. It's been a while since I messed with it, but I think you should be able to extend any extension as long as that extension is loaded as module in php before your own.\n. @ogarbe have you tried using my fork, extending in my fork should work, however I haven't synced it up with main rep in little while, I've been busy.\n. @andresgutierrez  I agree the linking strategy that you implemented is much better and more proper.\nMaybe for those extensions that are not built with zephir we can also make available the non-linkining strategy that I've originally implemented, I believe that should allow to extend from any extension.\n. @phalcon  are you talking about using the extensions or being able to inherit / extend from those extension classes ?\n. I actually coded around the issue so I don't have the same case to test with. But If you added then it should probably work now. Thanks\n. Any idea when this might get fixed ?\n. I'll see if I have time in next few days. \n. @nkt I got the test setup, but wanted to do the phpunit test before I submit it my self,\nWhat is the procedure when you want to unit test zephir?  how do you compile the test classes ? Not much info in Contributor section on this. \nAlso I was able to establish little bit more on what exactly is going on with the error:\nPrivate arrays are not working only if parent class is being inherited  by some other class and call is being made through the child class. \n``` php\nclass DeTest extends Test {\n}\nclass Test\n{\nprivate _privateJustString;\nprivate _privateJustArray;\nprotected _protectedJustString;\nprotected _protectedJustArray;\n\nprotected function test() {\n\n    let this->_privateJustArray = [];\n    let this->_protectedJustArray = [];\n\n    let this->_privateJustString = \"private\";\n    let this->_privateJustArray[\"sub\"] = [\"private\",\"array\"];\n\n    let this->_protectedJustString = \"protected\";\n    let this->_protectedJustArray[\"sub\"] = [\"protected\",\"array\"];\n\n    var_dump(this->_privateJustString);\n    var_dump(this->_privateJustArray);\n    var_dump(this->_protectedJustString);\n    var_dump(this->_protectedJustArray);\n\n}\n\npublic function ptest() {\n\n    this->test();\n\n}\n\n}\n```\nSo then in php\nphp\n$test = new DeTest();\n$test->ptest();\nRESULT: Will not work\nArray that should have something is empty\nstring(7) \"private\"\narray(0) {\n}\nstring(9) \"protected\"\narray(1) {\n  [\"sub\"]=>\n  array(2) {\n    [0]=>\n    string(9) \"protected\"\n    [1]=>\n    string(5) \"array\"\n  }\n}\nbut if we call the parent class directly , all is fine\n``` php\n$test = new \\PHPContainer\\Framework\\Lib\\Core\\Classes\\Test();\n$test->ptest();\n```\nRESULT: Will work\nArray is now showing data\nstring(7) \"private\"\narray(1) {\n  [\"sub\"]=>\n  array(2) {\n    [0]=>\n    string(7) \"private\"\n    [1]=>\n    string(5) \"array\"\n  }\n}\nstring(9) \"protected\"\narray(1) {\n  [\"sub\"]=>\n  array(2) {\n    [0]=>\n    string(9) \"protected\"\n    [1]=>\n    string(5) \"array\"\n  }\n}\nThis is really an annoying and to me pretty serious bug, since you can't hide any array properties from children classes. And there is no access errors or anything like that, it just returns no data.\nI was digging through the built C code for the classes and both cases for private and protected vars are using same 'zephir_update_property_array' code, so bug must be somewhere deeper in . \ntest.zep.c\n``` c\nPHP_METHOD(PHPContainer_Framework_Lib_Core_Classes_Test, teste) {\nzval *_3;\nzval *_0, *_1, *_2, *_4, *_5, *_6 = NULL, *_7 = NULL, *_8 = NULL, *_9 = NULL;\n\nZEPHIR_MM_GROW();\n\nZEPHIR_INIT_VAR(_0);\narray_init(_0);\nzephir_update_property_this(this_ptr, SL(\"_privateJustArray\"), _0 TSRMLS_CC);\nZEPHIR_INIT_VAR(_1);\narray_init(_1);\nzephir_update_property_this(this_ptr, SL(\"_protectedJustArray\"), _1 TSRMLS_CC);\nZEPHIR_INIT_ZVAL_NREF(_2);\nZVAL_STRING(_2, \"private\", 1);\nzephir_update_property_this(this_ptr, SL(\"_privateJustString\"), _2 TSRMLS_CC);\nZEPHIR_INIT_VAR(_3);\narray_init_size(_3, 3);\nZEPHIR_INIT_VAR(_4);\nZVAL_STRING(_4, \"private\", 1);\nzephir_array_fast_append(_3, _4);\nZEPHIR_INIT_BNVAR(_4);\nZVAL_STRING(_4, \"array\", 1);\nzephir_array_fast_append(_3, _4);\nZEPHIR_INIT_BNVAR(_4);\nZVAL_STRING(_4, \"sub\", 1);\nzephir_update_property_array(this_ptr, SL(\"_privateJustArray\"), _4, _3 TSRMLS_CC);\nZEPHIR_INIT_ZVAL_NREF(_2);\nZVAL_STRING(_2, \"protected\", 1);\nzephir_update_property_this(this_ptr, SL(\"_protectedJustString\"), _2 TSRMLS_CC);\nZEPHIR_INIT_BNVAR(_3);\narray_init_size(_3, 3);\nZEPHIR_INIT_VAR(_5);\nZVAL_STRING(_5, \"protected\", 1);\nzephir_array_fast_append(_3, _5);\nZEPHIR_INIT_BNVAR(_5);\nZVAL_STRING(_5, \"array\", 1);\nzephir_array_fast_append(_3, _5);\nZEPHIR_INIT_BNVAR(_5);\nZVAL_STRING(_5, \"sub\", 1);\nzephir_update_property_array(this_ptr, SL(\"_protectedJustArray\"), _5, _3 TSRMLS_CC);\n_2 = zephir_fetch_nproperty_this(this_ptr, SL(\"_privateJustString\"), PH_NOISY_CC);\nZEPHIR_CPY_WRT(_6, _2);\nzephir_var_dump(&_6 TSRMLS_CC);\n_2 = zephir_fetch_nproperty_this(this_ptr, SL(\"_privateJustArray\"), PH_NOISY_CC);\nZEPHIR_CPY_WRT(_7, _2);\nzephir_var_dump(&_7 TSRMLS_CC);\n_2 = zephir_fetch_nproperty_this(this_ptr, SL(\"_protectedJustString\"), PH_NOISY_CC);\nZEPHIR_CPY_WRT(_8, _2);\nzephir_var_dump(&_8 TSRMLS_CC);\n_2 = zephir_fetch_nproperty_this(this_ptr, SL(\"_protectedJustArray\"), PH_NOISY_CC);\nZEPHIR_CPY_WRT(_9, _2);\nzephir_var_dump(&_9 TSRMLS_CC);\nZEPHIR_MM_RESTORE();\n\n}\n```\n. @ovr  does your PR also support extending from interfaces as well ? \nThis is what I did to solve extending from classes darkgaro@9327a67  and interfaces darkgaro@7ff0cbf0a5534b975b8f632b4d0ca073d82f226b, \nThat was my first stab at zephir few months back so I wasn't sure if it was all 100% proper, but it worked for my use case. I also never had chance to add unit testing for it. Check it out don't know if you will find use for it. \n. K so I was able to attach gdc to the process when it fails, here is when I was stepping thru the code and where it actually failed when executing zend_call_function   in /ext/kernel/fcall.c\n```\n.\n.\n.\n(gdb) n\n431     if (!cache_entry || !cache_entry) {\n(gdb) n\n432         if (fcall_key && zend_hash_quick_find(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, fcall_key_hash, (void)&temp_cache_entry) != FAILURE) {\n(gdb) n\n433             zephir_fcall_populate_fci_cache(&fcic, &fci, type TSRMLS_CC);\n(gdb) n\n436             fcic.function_handler = (temp_cache_entry)->f;\n(gdb) n\n437             ++(temp_cache_entry)->times;\n(gdb) n\n432         if (fcall_key && zend_hash_quick_find(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, fcall_key_hash, (void)&temp_cache_entry) != FAILURE) {\n(gdb) n\n461     status = ZEPHIR_ZEND_CALL_FUNCTION_WRAPPER(&fci, &fcic TSRMLS_CC);\n(gdb) p &fci\n$1 = (zend_fcall_info ) 0x7fff38a51b80\n(gdb) p fci\n$2 = {size = 72, function_table = 0x2068c10, function_name = 0x7f7a6572d598, symbol_table = 0x0, retval_ptr_ptr = 0x7fff38a51ca8, param_count = 2, params = 0x7fff38a51b30, object_ptr = 0x0, no_separation = 1 '\\001'}\n(gdb) p fcic\n$3 = {initialized = 1 '\\001', function_handler = 0x7f7a6571f610, calling_scope = 0x0, called_scope = 0x0, object_ptr = 0x0}\n(gdb) s\nzend_call_function (fci=0x7fff38a51b80, fci_cache=0x7fff38a51bd0) at /build/buildd/php5-5.5.18+dfsg/Zend/zend_execute_API.c:730\n730 /build/buildd/php5-5.5.18+dfsg/Zend/zend_execute_API.c: No such file or directory.,\n```\n. The real codebase that is failing is quite large and I can't share it publicly, so I have been trying to setup a slim down use case scenario that does stuff similar to real code but I have not been able to replicate the issue in the slim down use case scenario. \nSo I am now left with re-introducing elements from real one into use case until it breaks. Real code base has a lot of abstraction and multiple levels of objects so its not easy to replicate  it. \nAnother option for me is to use git bisect until I find the last good working version and see what has changed in zephir that started breaking it. \nHas there been any changes in how zephir handles closures and function calling ?\n. K I went the bisect route and narrowed it down to this commit : https://github.com/phalcon/zephir/commit/bf857a94cda02f7c9f26fbb2fdac3f1718e82c7d\nLuckily it is a small commit so I was able to pinpoint the exact line (424) of the problem in ext/kernel/fcall.c for that commit\nC\n424 - if (EXPECTED(status != FAILURE) && fcall_key && !temp_cache_entry && fcic.initialized) {\nSo I reverted it back to previous one on top of the latest head and it all started working\n``` C\n    EG(scope) = old_scope;\nif (!cache_entry || !*cache_entry) {\n    if (EXPECTED(status != FAILURE) && fcall_key && !temp_cache_entry && fcic.initialized) {\n    //if (EXPECTED(status != FAILURE) && fcall_key && !temp_cache_entry) {\n\nifndef ZEPHIR_RELEASE\n        zephir_fcall_cache_entry *temp_cache_entry = malloc(sizeof(zephir_fcall_cache_entry));\n        temp_cache_entry->f     = fcic.function_handler;\n        temp_cache_entry->times = 0;\n\nelse\n        zephir_fcall_cache_entry *temp_cache_entry = fcic.function_handler;\n\nendif\n        if (FAILURE == zend_hash_quick_add(zephir_globals_ptr->fcache, fcall_key, fcall_key_len, fcall_key_hash, &temp_cache_entry, sizeof(zephir_fcall_cache_entry*), NULL)) {\n\nifndef ZEPHIR_RELEASE\n            free(temp_cache_entry);\n\nendif\n        } else {\n\nifdef ZEPHIR_RELEASE\n            if (cache_entry) {\n                *cache_entry = temp_cache_entry;\n            }\n\nendif\n        }\n    }\n}\n\n```\nAny idea why that would be causing issue ?  I not familiar with that code, does that deal with call caching ?\n. Thanks, my code uses quite a few closures so probably why it's noticed. \n. K that works. \n. ",
    "rushmorem": "@nkt I like this idea. Breaking Zephir into loosely coupled components that do one thing well will make it more flexible and trivial to implement additional features later.\nOnce we proceed with that mindset, we can then concentrate on bringing out a stable version knowing that our effort will pay off later on when we decide to add other features, including those that we would not have conceptualised now.\nZephir is an awesome project and a dream language come true.\n. @darkgaro I know it's been a while since you guys last discussed this issue. However, still this functionality is not in core. Did you try sending a pull request after you synced on the 28th of April?\n@phalcon It would be awesome if we have this in core.\n. @darkgaro I understand. Been using your fork without any problems so far as I use Phalcon as my framework. If this is not eventually pulled into the main repo or similar functionality implemented I hope there will at least be documentation on how to extend another third party extension from Zephir.\n. @andresgutierrez Good points you made there. I haven't had time to dig into Zephir's architecture yet. When I first saw the guys proposing to split the components I concurred with them because loose coupling is always a good idea. However, like you have already pointed out, it's not about moving into separate repos. If the components are already loosely coupled then that's fine.\nBeing able to compile to various sources is nice but, like I think was already concluded before, the first priority should be making the current version stable. I think I speak for most of us here when I say the main reason we are even here is the need to create compiled PHP extensions fast. For me, its the only reason I'm here. Let's make that goal happen first before we think about diverting our focus.\nPHP itself is not a bad language. Personally I'm not excited at all about being able to compile to PHP but I understand some developers might be. To each his own.\n. ",
    "boussou": "Then, if you decided to go in that direction, why not thinking in implementing a new cleaner & consistent version of the language itself? & producing a spec of what the language should be?\nI mean for example get rid of array() and use [] only, native utf-8, allow dot instead of this wierd \"\\\" for namespaces. Remove the use directive. And the nice features of Hack.\nAnd remove all of the useless features or weird syntax of PHP that makes it inconsistent.\n. ",
    "netyum": "OK\uff0cif define parameter\uff0c  \nfunction (& config)\nparser level\nthen compiler not using ZEPHIR_SEPARATE_PARAM\uff0c bu using Z_SET_ISREF_P\n. Not only is it, \nstart->in(this);\nAlso \n```\nZephir\\ParseException: Syntax error in\n            let a = start->in(this);\n    ------------------------^\n\n```\nMay be in a reserved word in the 'for' expression.\nShould fix it.\n. I'm not sure if needed, so just a suggestion. \nBut I was in my project has been used.\n. PR\n. I am sorry for not very familiar with git\n. ok\n. @nkt  or not yet?\n. fixed . OK?\n. @nkt  I've rebase\n. @nkt My question, how try?\n. @nkt I found only ref_count> 2, after using ZEPHIR_MM_RESTORE, this will become a zval's ref_count=1, can be used in php\n. Because you did not call setAdapter method, so this->adapter is null, not an object.\n. gdb\n```\nProgram terminated with signal 11, Segmentation fault.\n0  0x0000000000a0b860 in zend_get_class_entry (zobject=0x31be990) at /root/php-5.5.12/Zend/zend_API.c:237\n237             if (Z_OBJ_HT_P(zobject)->get_class_entry) {\n```\n. @taophp  After modify code is ok.\n. @ntk Really should be judged, but some of the underlying relative zephir, users should avoid these errors.\n. ",
    "soliveira-vouga": "Just wanted to add an assignment by reference example, which also doesn't work:\n```\nint a = 5;\nvar b;\nlet b = &a\n```\nThrows a syntax error.\n. Any update on this issue?\n. ",
    "zeran86": "Very useful! For example, i can't use some functions correct, like stream_socket_server, because they use pass by reference.\n :+1: \n. Almost year ...\nIs any progress by this ticket? Please, give us a hope )\n. ",
    "igorgolovanov": "+1\n. +1\n. I had the same problem in my project - https://github.com/golovanov/php-ext-zendframework\nI had to use namespace = \"Zend\" but extension name as \"zendframework\". (in C-Code prefix zendframework instead of zend too).\nSo overloaded some classes for decide this issue. Works as-is, but works :( \nYou can see my code and maybe you will find solution :) \n. +1\n. +1\n. LSB for properties not implemented yet, but you can use C-injections like in...\nRead - https://github.com/golovanov/php-ext-zendframework/blob/master/zendframework/stdlib/stringutils.zep#L65\nUpdate - https://github.com/golovanov/php-ext-zendframework/blob/master/zendframework/stdlib/stringutils.zep#L84\n. :+1: \n. +1\n. o.O\n. :+1:\n. +1\n. -1\n. ",
    "ilei": "when Support reference parameters?\n. ",
    "dahweng": "Hi everyone, I have a simple solution for this problem: use a PHP function for the task of returning a reference.\nI have been searching for a solution to this problem for the past couple of days, and managed to get the function that requires references to work by doing the following;\n```\n<php\n// In your PHP\nfunction refValue( $val )\n{\n    $ref = &$val;\n    return $ref;\n}\n?>\n```\nAfter you have created the refValue function in your PHP file, you can then use it in Zephir as follows;\n```\n// In your Zephir source code\nvar avar = \"passed by value\";\nvar bvar = \"passed by reference\";\nsome_function( avar, refValue( bvar ) );\n```\nI have successfully used this method to get a function that requires references ($mysqli->bind_param()) to work in Zephir.\nGoodluck people! HTH\n. (I'm posting my response from the other issue #203)\nHi everyone, I have a simple solution for this problem: use a PHP function for the task of returning a reference.\nI have been searching for a solution to this problem for the past couple of days, and managed to get the function that requires references to work by doing the following;\n```\n<php\n// In your PHP\nfunction refValue( $val )\n{\n    $ref = &$val;\n    return $ref;\n}\n?>\n```\nAfter you have created the refValue function in your PHP file, you can then use it in Zephir as follows;\n```\n// In your Zephir source code\nvar avar = \"passed by value\";\nvar bvar = \"passed by reference\";\nsome_function( avar, refValue( bvar ) );\n```\nI have successfully used this method to get a function that requires references ($mysqli->bind_param()) to work in Zephir.\nGoodluck people! HTH\n. ",
    "andrusender": "But when it will POSSIBLE?\n. @nkt yes\n. It work! But very slowly! Every time i got error of max execution time!\n. I Emailed u guys w/ files .php, .zep + test.php\n. If u did not get my email here archive w/ codes\nhttps://www.dropbox.com/s/2h5k4nqxgbvz829/zephir2x_slower_php.rar\n. I changed all from static 2 object properties but zephir again slower php\nPHP - 0.010461807250977\nZEPHIR - 0.01166296005249\n- if i do many iterations( or have many data(500 & more) ), my php crashed if i'm using Zephir code\nnew code:\nhttps://www.dropbox.com/s/3zo49uho2ph9gh8/new_zephir2x_slower_php.rar\n. ",
    "hgati": "+5\n. thanks\n. Yes, It seems to be not supported.\n. I'll try all convert from \"while (list(key, val) = each(fruit)) {\" to \"for key, val in fruit {\"\n. php\nnamespace Myext;\nclass Test\n{\n    public static function check()\n    {\n        var arr = [0,1,2,3,4,5];\n        let arr = arr->rev();\n        //let arr = arr->reversed();\n        //let arr = range(0, 5)->rev();\n        //let arr = range(0, 5)->reversed();\n    var_dump(arr);\n    }\n}\nbuild is OK.\nbut when call from a php script.\nphp\n<?php\n    Myext\\Test::check();\n?>\nIt occurs error.\nsh\nSegmentation Fault!\n. valgrind?\nok, yes...\n. great~~\n. ahh~~sorry..\nI am unfamiliar with github. (I'm novise)\nI knew what I have to close.\n. Ok, redownload and building success now...\n. ",
    "yohgaki": "Any update for this? \"else if\" support is mandatory. IMHO.\n. ",
    "Evgsurf": "What about private properties. It maybe possible to use real C++ property with static type.\n. ",
    "JavaMachine": "@phalcon given above link is broken, where I can see documentation on using PHP functions?\n. ",
    "steffengy": "just as in PHP.\nhttps://docs.zephir-lang.com/en/latest/functions.html\n. @phalcon @ovr\nThis is resolved, this should be closed.\n. That is a general issue regarding phalcon and the development branch,\nsince the refactoring process is not complete and \ntherefore not all functionality is yet supported again.\nThat specific error Zephir\\CompilerException: updateArray: variable\nabove should now be fixed.\n. @ovr @andresgutierrez \nThis and the other issue now indeed should be closed :)\n(dont quite get why the merged commit didn't...)\n. @flip111 \nWould be cool if you share the instructions to build the parser.\nCurrently my build batch contains under windows something like:\n(reduzed for readability)\ncd %PHP_PATH%\\ext\\extName\nphp.exe %ZEPHIR_PATH%\\compiler.php generate || exit /b\ncd %PHP_PATH%\ncall %VS_PATH%\\Tools\\VsDevCmd.bat\ncall %PHP_SDK%\\bin\\phpsdk_setvars.bat\ncall buildconf --force\nIf you want to build into the php-exe\ncall configure --enable-extname\nIf you want to build as php-ext.dll\ncall configure --enable-extname=shared\nBuild\nnmake\nHopefully that is not reduced too much and still works in that lite-version.\nHopefully it's helpful to you\n. @ovr \nthis is implemented now, issue should be closed.\n. @mruz Sure it does:\nUser::construct calls parent::construct (Test::construct), \nwhich it has to ensure that parent properties are set.\n(which leads to the behavior you're experiencing)\nCan't think of a solution, which wouldn't require refactoring how it currently works.\n. @ovr \n(FYI Merge conflicts on current changes as it seems.)\nAnd what is the general state of this PR?\nDoes it fix elseif constructs entirely?\nThese elseif bugs really annoy me, since\nthey break a lot of code on my end...\n. @ovr \nseems like you removed a testElseIf2 in f2df27cdefa9176dea943f2e893566a069ef0808\nwhich now causes a test failure, because that method isn't defined anymore\nYou should probably fix that xD\n. @ovr \nSince I think this is something quite important, is there any update on this?\nBesides the variable duplication, one should also take a look at code duplication\nwithin zephir generally. This makes updating to PHP7 increasingly more difficult.\n(Kernel and Compiler wise there are many code duplications, leading to worse maintainability, \nrequiring bugs to be fixed at several places, ...)\n. @phalcon ping\n. @nkt Is that sufficient and ok like that?\n. @ovr\nYou cannot use addSlashes($str, true, Types::STRING) \nbecause that would break special characters!\nphp echo \"\\w\\r\\t echo' \\\"\" results in php php_printf(\"\\\\w\\\\r\\\\t echo' \\\"\")\n-->  does not produce the expected output.\nAtleast if I'm not totally mistaken just omitting the addSlasshes call,\nlike currently, seems to work correctly with special characters.\n--> Producing php php_printf(\"\\w\\r\\t echo' \\\"\");\nIf I'm right I guess, I should still add the mentioned test-case?\n. @phalcon \nCould you take a look at this? \nSeems to be not breaking anything and fixing a really fundamental issue.\n. @phalcon \nWould be nice, if someone could review this\n. I do not think anyone wouldn't want this feature but it's unfortunately\nanything but easy to implement and would either consume very much time\nor cause a very big performance degradation.\nIt's also not foreseeable at this point, when someone will have time for it, unfortunately.\n. @nkt @ovr \nNo idea who I should ping to get some feedback on this.\nIt seems to work pretty well currently, so if you have any\nedge cases or other caveats/bugs regarding this implementation\nlet me know.\nThe tests failing is not related to this PR,\n the failing is caused by changes regarding PHP 5.6 introduced by 24dd5ebc3ed2ca42b8828d8014d4c820c6812ac2\n(which also fails in current master)\n. @phalcon seems to be alright now.\n. @nkt That's actually a pretty good tip, thanks :+1: \n@phalcon Replaced the spaces in all files except the php test file \n(atleast if my editor is not trolling me)\n. @phalcon \nIt is enough to revert the changes to Library/Expression/StaticPropertyAccess.php\nthe segfault is not happening anymore (tested it more than 10 times)\nI also don't quite get why it's happening, but investigating...\n. @phalcon \nThe array_update_multi part seems logical, and isn't the problem here since it's fine.\nIf I said I understood what the PHP part changes about behavior, which would\nlead to such a segfault, it would be a lie.\nBut anyways, do you have an idea how reverting that specific change to that file,\ncould lead to a working result?\n. @phalcon\nWrapping both\nif ($symbolVariable->getName() != 'return_value') {\n      $symbolVariable->observeVariant($compilationContext);\n}\nblocks by this if-block\nif ($this->_expecting) {\n      if ($this->_expectingVariable) {\nlike in PropertyAccess or PropertyDynamicAccess\nseems to fix the Segmentation fault.\nWhile I do not exactly know the internals behind this,\nI'm not quite sure, if that's not causing unwanted\nbehavior.\nI will probably just go with that work-around locally for now...\nHopefully it doesn't break too much\n. Seems fixed by 7c973e00694bd875999bd29edf1ffb509499f222\n. @phalcon \nThis is strange. (Because it should have to return int(1) like if you run it in PHP)\nJust pulled latest master:\nvar_dump(\\Debug\\ZephirDebug::test());\nresults in \nNULL\nand strangely\n\\Debug\\ZephirDebug::test()\nin the segfault.\nSo probably this is why it didn't crash for you?\nHopefully this time our behavior\nis identical xD\n. Seems fixed.\n. @phalcon \nCan this just be fixed by checking or super globals in the symbol table or is this a more fundamental problem?\n. that just was implemented for functions/methods afaik.\n. Origin of that message: https://github.com/phalcon/zephir/blob/506325c4a25a826cde07cbd238a4466d681bc289/ext/kernel/object.c#L1511\n. @phalcon \nAfter compiling as shared it fails after completing the first seven tests or so with \n+       msg 0x0183d034 \"The variable 'a' is being used without being initialized.\"  const char *\"\nand\nhttp://pastebin.com/bxiwNRnV\n(Call history copied from VS, wasn't really readable when posting that on github)\nAny idea why that is happening?\n. Compiles to\n*Doesn't crash when omitting the last ZEPHIR_SINIT_NVAR(_2);\n```\nint ZEPHIR_LAST_CALL_STATUS;\n    zephir_nts_static zephir_fcall_cache_entry _3 = NULL;\n    zval v1 = NULL, *v2 = NULL, _0 = zval_used_for_init, _1 = zval_used_for_init, _2 = zval_used_for_init;\nZEPHIR_MM_GROW();\n\nZEPHIR_SINIT_VAR(_0);\nZVAL_LONG(&_0, 0);\nZEPHIR_SINIT_VAR(_1);\nZVAL_LONG(&_1, 5);\nZEPHIR_SINIT_VAR(_2);\nZVAL_STRING(&_2, \"?\", 0);\nZEPHIR_CALL_FUNCTION(&v1, \"array_fill\", &_3, &_0, &_1, &_2);\nzephir_check_call_status();\nZEPHIR_SINIT_NVAR(_0);\nZVAL_LONG(&_0, 0);\nZEPHIR_SINIT_NVAR(_1);\nZVAL_LONG(&_1, 6);\nZEPHIR_SINIT_NVAR(_2);\nZVAL_STRING(&_2, \"?\", 0);\nZEPHIR_CALL_FUNCTION(&v2, \"array_fill\", &_3, &_0, &_1, &_2);\nzephir_check_call_status();\nZEPHIR_MM_RESTORE();\n\n```\nError Trace:\n```\ngc_remove_zval_from_buffer (zv=zv@entry=0x7fffffffa280)\n    at /media/rdata/projects/XXX/php-5.6.2/Zend/zend_gc.c:265\n265             GC_REMOVE_FROM_BUFFER(root_buffer);\n(gdb) bt\n0  gc_remove_zval_from_buffer (zv=zv@entry=0x7fffffffa280)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_gc.c:265\n\n1  0x000000000073ab78 in i_zval_ptr_dtor (zval_ptr=0x7fffffffa280)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_execute.h:78\n\n2  _zval_ptr_dtor (zval_ptr=)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_execute_API.c:427\n\n3  0x00000000007591b8 in zend_hash_destroy (ht=0x16f6210)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_hash.c:548\n\n4  0x000000000074a743 in _zval_dtor_func (zvalue=0x16f8f48)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_variables.c:45\n\n5  0x000000000073ab60 in _zval_dtor (zvalue=0x16f8f48)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_variables.h:35\n\n6  i_zval_ptr_dtor (zval_ptr=0x16f8f48)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_execute.h:79\n\n7  _zval_ptr_dtor (zval_ptr=)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_execute_API.c:427\n\n8  0x00007ffff584f907 in zephir_memory_restore_stack_common.constprop ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/test.so\n9  0x00007ffff584fa49 in zephir_memory_restore_stack ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/test.so\n10 0x00007ffff589aa23 in zim_Test_XXX_XXX ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/test.so\n```\n. @phalcon\nAre you doing it or do you want it as PR, including a test?\n. sure will be submitted soon\n. @phalcon \nEverything ok?\n. @phalcon \nNot sure if that's the proper way to fix this?\nThe tests atleast still pass^^\n. @phalcon\nThanks for pointing me in the right direction :)\nWasn't quite that wording, but pretty close xD\nOk like this?\n. Probably a duplicate of #573\n. @phalcon \nAny feedback is welcome\n. @phalcon\nI haven't tested with VC9, but it should work quite similar, \nexcept that you have to install further requirements\nbecause you need to install additional software like:\n- VC9 of course xD\n- Windows SDK 6.1 for < 5.5\n(as documented in https://wiki.php.net/internals/windows/stepbystepbuild )\n(If that is needed, I could set up an additional VM and test with VC9, including documentation)\nCurrently looking into it\n. @phalcon \nAdded VC9 instructions and generally reformated windows.md a bit.\nLet me know if anything else needs improvement.\n. If PHP<->Zephir was supported, the compiler would be available in both environments.\nGenerally i'm interested in that point: \n- What advantage do you gain from having the compiler in zephir? \n- Except that it somehow is another pretty big project, which is a good testcase? (And performance)\n- Just interested, so would be nice to know, if I'm missing something essential\n. Reverting the changes to ForStatement makes the bug disappear,\nstill no clue what exactly triggers it.\nI just get an array where the last key gets replaced to \"\\u0000\\u0000\\u0000\\u0000\"\nand after reloading the page the value changes (what should not happen because the array\nis a result of parsing code with the same input - \nrestarting php-cli \nresults in the exact same behavior first the unicode-zeros and then a change\n)\nStill trying to determine a small snippet triggering the bug (currently it is too much code)\n. @andresgutierrez @phalcon \nc\nzephir_read_property(&_20, _19, SL(\"units\"), PH_NOISY_CC);\n    ZEPHIR_CALL_METHOD(&_21, _20, \"getall\", NULL);\n    zephir_check_call_status();\n    zephir_is_iterable(_21, &_23, &_22, 0, 0, \"xxx/model/world/village.zep\", 100);\n    for (\n      ; zephir_hash_get_current_data_ex(_23, (void**) &_24, &_22) == SUCCESS\n      ; zephir_hash_move_forward_ex(_23, &_22)\n    ) {\nZEPHIR_GET_HKEY(k, _23, _22);\nZEPHIR_GET_HVALUE(v, _24);\nZEPHIR_CALL_METHOD(&_25, v, \"canberesearched\", NULL);\nzephir_check_call_status();\nif (!(zephir_is_true(_25))) {\n      continue;\n}\nZEPHIR_INIT_LNVAR(_11);\nZEPHIR_CONCAT_SV(_11, \"research_\", k);\nZEPHIR_INIT_NVAR(_12);\nZVAL_STRING(_12, \"int\", 1);\nzephir_update_property_array(this_ptr, SL(\"_meta\"), _11, _12 TSRMLS_CC);\n}\nChanging ZEPHIR_GET_HKEY to ZEPHIR_GET_HMKEY only on that \ncode example works.\nThis is the content of a public method of a class,\nwhere k is not accessed or passed to anything\nafter that block of code.\nThe array ,stored in the property of the object,  which is iterated ,changes.\n(I found ZEPHIR_GET_HKEY like 70 times and tested which one triggers the\nerror in my code resulting in a weird DB error while building\na query)\nCan you pin the bug down using this? \nWhat additional steps would you propose?\nI still hadn't the time yet to try to reduce it to a small example, triggering said bug.\n. @phalcon @andresgutierrez \nWhen adding a k = NULL; below this block the error disappears\nMay there be something wrong with destruction of zvals after a method\nor something similar?\nStill not much progress yet\n. Closing this since the comments were only presumptions\nand this issue is pretty much spammed.\nOpening a new one, with reproduction steps soon.\n. @phalcon \nAny update on this?\nI think the problem is that key is a zval * when ZEPHIR_GET_HKEY is called, insteadof a zval ** and then gets cleaned by the garbage collection?\nAm I right in that point?\n. @andresgutierrez Alright, thanks.\n. Probably related to some limitations like here: https://github.com/phalcon/zephir/issues/573\n. @ovr @phalcon\nHas anybody an idea what the bootleneck there seems to be?\n. Just tried that and\nthe problem here is that in that specific case the following happens:\n- Pointer to arrElem is taken\n- arr is set to Pointer from above\n- old arr stuff gets freed -> that random data\nNo copy is used in that case: Currently no real idea how to fix that properly\nYou could use that workaround.\nBetter would probably be to enable copy in that specifc scenarios?\nAgain something to leave for somebody who knows the internals...\n@phalcon @andresgutierrez \n. @ovr\nIs that fixed?\nWhen I tried php benchmark.php it just created the records, without crashing.\n. @mruz \n721 is resolved now, maybe you should check again.\n. It seems like you are calling a deprectated function, which triggers a null pointer derefence in zend_execute_api.c (strlen), which is probably because zephir is not populating all needed structs for printing that deprecated message, resulting in the dereference.\nThe real issue here is probably though that fcache_entry (and therefor the function handler) is null, because the method was not looked up or something like that\n```\n0  strlen () at ../sysdeps/x86_64/strlen.S:106\n1  0x00000000006edc54 in xbuf_format_converter (xbuf=xbuf@entry=0x7fffffffbc00, fmt=0xc7197e \"s() is deprecated\",\nap=0x7fffffffbd78) at /media/rdata/projects/XXX/php-5.6.2/main/spprintf.c:576\n\n2  0x00000000006eea34 in vspprintf (pbuf=0x7ffff5288f58, max_len=0, format=, ap=)\nat /media/rdata/projects/XXX/php-5.6.2/main/spprintf.c:799\n\n3  0x000000000074bb13 in zend_error (type=type@entry=8192,\nformat=format@entry=0xc71970 \"Function %s%s%s() is deprecated\")\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend.c:1167\n\n4  0x000000000073c2ea in zend_call_function (fci=0x7fffffffc080, fci_cache=0x7fffffffc050)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_execute_API.c:714\n\n5  0x00007ffff52ca7ba in zephir_call_user_function ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ice.so\n6  0x00007ffff52cb076 in zephir_call_class_method_aparams ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ice.so\n7  0x00007ffff5312d5b in zim_Ice_Flash___construct ()\nfrom /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ice.so\n8  0x00000000007ef21e in zend_do_fcall_common_helper_SPEC (execute_data=)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_vm_execute.h:558\n\n9  0x0000000000785dd8 in execute_ex (execute_data=0x7ffff7f9c720)\nat /media/rdata/projects/XXX/php-5.6.2/Zend/zend_vm_execute.h:363\n\n10 0x000000000074cfe0 in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x7fffffffd518,\nfile_count=file_count@entry=1) at /media/rdata/projects/XXX/php-5.6.2/Zend/zend.c:1344\n\n11 0x00000000007f6c02 in php_cli_server_dispatch_router (client=, server=)\n```\nI would generally advise you to post small codebases, which can trigger a bug, insteadof specifying such a big project, because finding such a bug in a large code base, is time consuming.\nEdit: \nInteresting, it's indeed the getSession call which get's flagged as deprectated\nIt seems like the fcache is indeed responsible for that, don't know how yet...\nCould have something todo with that it's a magic method, which\nis as far as I know currently not supported (calling them from within zephir).\n. Very interesting, I try to figure out what's going on there, if I should have time :)\n. It's simply not done by the looks of it, and also does not contain any specification.\n. @phalcon @andresgutierrez \nDoes my assumption there make sense?\nIf not, could you please take a look at this? :)\n. Merged manually without the regenerated test files since before \ncommitting all regenerated stuff I want to minimize the differences (which requires restoring old behavior and keeping benefits of the new code, which is a bit tricky)\n. @ovr Done. Just didn't get to it yesterday\n. @ovr \nAnything else I should change on this PR?\n. @ovr\njust like that it seems to work for me:\n(and yes that's dumped after the function call, which sets _GET[12345])\narray(1) { [12345]=> string(7) \"my test\" }\nOr do you mean a specific case, where it might bug?\n. It's probably because you use array insteadof var which causes the default values to simply be ignored.\n```\nZEPHIR_INIT_VAR(search);\n    array_init(search);\n    ZEPHIR_INIT_VAR(replace);\n    array_init(replace);\n    ZEPHIR_INIT_VAR(subject);\n    ZVAL_STRING(subject, \"A\", 1);\nzephir_fast_str_replace(&return_value, search, replace, subject TSRMLS_CC);\n\n```\n. I'm not quite sure, it's possible though.\n. @sergeyklay Can you verify if this is totally fixed now?\n. @sergeyklay \nSo Test1 works as expected, and tests2 fails due to the array initialization bug,\nif I understand that correctly?\n. @sergeyklay should be fixed in master. can you confirm?\n. This version is unfortunately bugged.\n. @ovr sure, is that sufficient?\n. Please use the search next time:\nhttps://github.com/phalcon/zephir/issues/140\n. @ovr\nTested it so far with \n- pretty big (private) project\n- the mentioned testcase of #702\n- an autogenerated random testbase ( https://gist.github.com/steffengy/67b6b2af2efeaf0d0a26 )\nAny other ideas? \nUntil now everything seems to work perfectly.\n. @phalcon @andresgutierrez\nCould you take a look at this?\n. @ovr \nthe warnings should be fixed, it was just a minor missing check.\n. @ovr \nI'm not quite sure where to place the files.\nWould \"test/ooimpl\" be appropriate? \n(Since it seems to have similiar tests testing extend functionality)\n. @ovr \nHopefully the files are located fine there :)\n. @ovr\ntest/ooimpl is not appropriate :)\n(since it is for interfaces where implements functionality is tested)\nI think they are fine, where I put them though :)\nHopefully now the formatting is alright now...\n. @ovr \nHopefully this won't be as much commit spam as the phalcon repository received issues xD\nBut now it hopefully is correct xD\n. I dislike this for various reasons:\nIf you run it multiple times your file will contain the same lines for n times. \n(Where n is the amount of times run, after it was initially created)\nIf you run it initially, it creates a useless file (containing the var declarations)\nIt also does not make sense to create the configure.bat, \nbecause that is a file that is created by phpize.\nWhat is the reasoning behind these changes?\n. @ovr \nI already have a version, which provides basic functionality against php-src (current PHP 7 state - master branch).\nThe differences are huge and I'm not quite sure if providing backwards compatibility is even possible, without adding very much additional boilerplate-versionchecking code,\nbut nevertheless an update until release should be possible.\n(If they do not make some more fundamental changes)\n. I will probably put my experiment on github, when all tests pass.\n(Except if that's not desired)\nCurrent state (with not all tests enabled yet):\nOK, but incomplete, skipped, or risky tests!\nTests: 89, Assertions: 509, Risky: 8.\nHopefully I'll manage to get this done, since it will probably be a helpful \nreference when updating zephir to PHP 7.\n. https://github.com/steffengy/zephir/tree/zephir-ngexp\nIt is far from perfect, but as an initial attempt pretty good.\nIt runs (pretty much) all tests on win32/linux \n(except the interface-constant-inheritance/preg_match as described\nin the readme)\nand I'm pretty satisfied for an initial attempt (a week of work).\nI will probably not continue this experiment for now.\nSome of the linux tests on travis somehow unfortunately fail.\n(valgrind -> memory corruption? could not reproduce locally with linux)\nFeel free to use it as reference when preparing for PHP 7, \nif it shouldn't have changed significantly until then.\n. @ovr\nTravis build now also passes as sucessful!\n(Fixed some (annoying) heap corruption)\nFurthermore I encountered the following problems, while conducting this experiment:\n- Limited tests\nThe zephir tests only check for very basic functionality, ignoring complex programs.\n- Code duplication\nThe compiler contains much code duplication, requiring more adjustments.\nAlso it does affect readability.\nAlso there's room for improvement in the \"kernel sector\", since some stuff is just copy & pasted\nand existing multiple times.\nAlso on a long term, zephir should generate more efficient code, like reusing temp variables or performing more optimizations on the generated code.\n. @loint there probably is not much to try, since large-scale projects likely will not work correctly.\nI will probably test with something pretty big,\nwhen I have more spare time.\nIf you want to help, implementing more complex unit tests is probably more effective :)\nNevertheless testing stuff is never bad and could help too - please let me know what your testings show :)\n. @andresgutierrez \nIs there already an official plan/timeline for this feature?\nAlso do you already have an idea how to ensure backwards-compatibility/dual-implementation for\nall the functions using zval ** (which should be zval * if done the same way as in PHP7) ?\n(since that is pretty much not used anymore in PHP7 - \nor will zephir regardless of the rest of the PHP-Code still implement it that way?)\nAlso ALLOC_INIT_ZVAL does not exist anymore and zval's are allocated\nmostly on stack, which also may require different code generation.\n(Is there an easy way to do this? How will that work with function calls, which have incosistent checks for \"stack-only\" variables (isLocalOnly - which then most is?)\nTLDR: Code-generation results in chaos and would need more checks/abstraction\nKernel-wise it also seems like you'll have very much ifdef's in the code.\nMaybe having multiple versions of files for < 7 and >= 7 makes sense for some files?\n(with guards which check the PHP_VERSION)\nFeel free to take a look at the experiment I conducted earlier (mentioned somewhere above),\nwhere I tried to migrate everything. (No BC - the code is far from working properly at some places though)\nNevertheless it will be much work, do you see anything what would prevent\npreparations/start of the work (which needs this initial planning, which unfortunately\nwon't be trivial)\nWorking on antother experiment with BC: https://github.com/steffengy/zephir/tree/zephir-ngexp2\n. That sounds like a toolchain problem, which is not related to any PHP version or zephir version,\nit just shows the lack of an appropriate tooling on your system.\n. I do not know why people still try to compile phalcon under PHP7,\nI said several times that it cannot work at this point.\n. something like\nvar tmp;\nlet tmp = arr[i];\nlet arr[i] = arr[i + 1];\nlet arr[i + 1] = tmp;\nshould work fine, doesn't it?\n. try public function $in(string dir) since in is a keyword in zephir.\n. @ovr \nwhat do you mean?\nIf you declare a function before the namespace declaration,\nit will be declared as global.\nIf you declare it after the namespace declaration,\nit will be declared in said namespace\nI think the test cases I added explain it pretty good: \nhttps://github.com/steffengy/zephir/blob/08ccaf120d2cdc0d5953b9d8788127615f0fbadc/test/fcall.zep#l7-17\nhttps://github.com/steffengy/zephir/blob/08ccaf120d2cdc0d5953b9d8788127615f0fbadc/unit-tests/Extension/FcallTest.php#l56-57\n. @ovr\nNo problem :)\nIt will hopefully not take very much time to get this reviewed and (hopefully) merged.\n. @ovr \nSounds good :)\n. @mruz \nYeah I think currently it only checks that per-file.\nI think for a namespace/global scope it's still missing (should be somewhere in Compiler)\n. Works for me (5.6), what PHP version are you using?\n. I think not and hope it's just because something else is priority right now ^^\n. theoretically sure. \nIt's currently unlikely that somebody has enough time to actually implement this though. \nI guess you'll have to use get_object_vars for now.\n. @Jurigag for ArrayObject $arrobj->getArrayCopy() might work as a workaround.\n. It might be that _ is reserved or something.\nHave you tried using $__ and does that work?\nit does work when you use a name not only consisting of _ right?\n. @loint \nI would just try to understand what goes wrong in a specific case. \n(Which requires reading a lot of code and much testing and debugging)\nIn that case it's simply that unset is not \"meant\" for normal variables:\nUnset is pretty much the \"opposite\" (in terms of action) as \"isset\"\nIsset is defined (by the zephir specifcation) as: \nThis operator checks whether a property or index has been defined in an array or object:\nand while isset (more or less) works with variables, unset does not.\nThe usage of unset in your example code is also unnecessary, since\nthe variable is not accessed after. \n(which makes the statement totally redundant as key  is destroyed \nby the memory frame implementation \nanways after the function has completed)\n. Grab a debugger such as GDB or the one of Visual Studio and analyze why it crashes.\nThe problem here is that you should understand PHP and zephir internals,\nwhich require a lot of work to get into and understand some relations.\nIt's also a good idea to take a look at the generated C-Code before.\nUsually these kinds of bugs also consume a lot of time figuring out why something goes wrong,\nso it's most of the time the opposite of trivial.\nMost segmentation faults I fixed in zephir were caused by invalid pointers.\n(trying to write to NULL pointers and similar kinds of problems)\nSo I do not think that an unset implementation would help you with that.\nGenerally it's best if you try to consolidate your specific crash into\na small sample of code and then step by step analyze what is the\nexact source of the crash.\n. The problem here is, that thats a rather complex topic.\nYou should probably google to get familar with it (using some tutorials or whatever)\nAnd even if you can use it, it only is a powerful tool to get behind a specific bug,\nbut you still have to do the figuring-out part, which requires indepth knowledge.\nIt's nothing I can shortly express here, it's something that requires a very large\namount of work to get familiar with the codebases and internals aswell as the tools.\n. @ovr \nthis is probably resolved now? If so this ticket should be closed :)\n. Why would you try to use zephir with PHP7?\nIt just does not compile, so why would you want to run tests?\nOr do you just use the zephir compiler/composer with PHP7?\n(And no upgrading zephir to PHPNG is not very trivial, see the issue on the matter)\n. Fundamental changes to the zend engine ^^\n(They require fundamental changes (weeks of work atleast)\nto zephir, I will probably release my experiment soonish,\nwhich will provide atleast 100% working tests of zephir)\nEnabling tests for something that only fails (and cannot work) does just not make sense.\nThat's something that should be done when implementing PHP7 support.\n. ' is for char literals, please use \" for strings instead.\n. Please use the search before posting issues.\nDuplicate of #398 .\n. +1 But probably unit tests wont pass yet, see #608 (as debug build, release mode works fine)\n. @ovr \nany progress on this?\nI'm also open to implement this.\n(Especially since that's something that could be used\nfor automatic parser builds/updates)\n. @ovr hopefully the major part is be done (see PR)\n. I think this is pretty much implemented now.\nDoes anybody have an idea how to solve updating the zephir-parser.exe binary?\nPossibilities:\n- keep it as it is, manually update it\n- use appveyor to update it automatically, if the binary changes (which is eventually hard to detect)\n- store the binary separately and use a \"wrapper script\" which always checks (if internet is available) if a newer version is available (and downloads one if so)\n@andresgutierrez  any better idea/preference?\n. @ovr\nAlso a possibility (hasn't happened for 0.6.1 though).\nThe only problem I see, is the situation we currently have:\nThe parser get's updated and the tests/new syntax and you\ncan't test/use it on win32, without rebuilding or fetching\na rebuilt executable from appveyor.\n. @andresgutierrez \nOk, it should be done consequently then though :)\nIt's also pretty easy now, since you just can download the latest parser from the latest appveyor build :)\n. PHP behavior is that you can call instanceof on anything except constants.\nSo something like\nvar_dump(\"test\" instanceof STDClass);\nfails, but when using a variable, any type is ok.\nI do not see why we shouldn't adopt that behavior.\nSo I think it's safe to remove that warning/error.\n. Then I think it would atleast be better to use separate commits that actual changes are clearly visible.\n@ovr what do you think about that proposition?\n. @andresgutierrez i understand what you mean but when you have a commit consisting of multiple changes and regenerated code in between, it makes it harder to see what actually changed.\nBut as I understand, you are also against splitting it into multiple commits?\nIf so it should atleast be ensured that the most current version of generated code is commited.\n. Its because the windows zephir parser binary hasnt been updated yet.\n@andresgutierrez Is it ok to replace the cygwin binaries with native msvc binaries? (As my jsonc patch allows)\nIf so, I could do the PR for that.\n. You need a newer version of the win32 parser, which you could build yourself\nElse you will have to wait until somebody updates the binary or use the one from my zephir-ng branch.\n. Ok I Will commit it with instructions very soon :)\n. @ping ovr\n. Yeah but the WINDOWS.md assumes that you use the already built parser.\n(because building the parser is annoying)\nThe section about building the parser is just for information,\nif you want to do it yourself.\nAtleast that's why I added it like that^^\n. Yeah I admit that it's not very intuitive,\nbut I just added the instructions there quickly, \nthat if somebody wanted to build it, he could, even though he wouldn't need to.\nIt should be definitely marked as optional with explanation,\nthat you could also just use the .exe from the repository :)\n. @andresgutierrez \nPHP's behavior is to just throw a warning and return null:\nsubstr() expects parameter 1 to be string, array given on line\ncurrent behavior (with pached #834) is to cause:\nNotice: Array to string conversion\nshould that be adjusted?\n. addresses #833 and hopefully fixed all of the \"mentioned\" bugs.\n. @ovr \nSeems like my editor was a bit rebellious and just ignored the editorconfig,\nsometimes happens, sorry for that.\nI also added some trivial changes \n(is_int optimizer and zephir_fetch_nproperty_this_quick fix)\nIf anything else has to be changed, please let me know :)\n. @andresgutierrez \nCan you take a look at this and elaborate on the choice of using ecalloc?\n. This is not fixed, the function \"zephir_greater_double\" is missing not the macro!\n@ovr @andresgutierrez please reopen\n. @ovr Is this now also resolved? If so, another issue you can close :)\n. I would really like to understand why people want to allow builds for things that can't work...\n-1\n. +1, especially for more tests :)\n. @ovr \nany reason why this was CC'ed to me? Can't remember touching anything in that area.\nAnways PR referenced above.\n. @valVk \nShould be fixed in master now.\nAny further problems with str_replace?\n. @andresgutierrez \nCould you review this please?\n. Crash seems to be resolved by 0d420b55c3c4f00a82967b99c9536488e195e973\nBut memory \"leak\"/\"loss\" still occuring.\n. Since the crash is resolved, creating a followup ticket with steps to reproduce for the memory leak.\n. seems to be fixed, thanks :)\n. latest master works fine for me on win32, generating the proper code.\n. @andresgutierrez \nYou can use whatever account you want, there is nothing specific in the configuration.\nThe only thing required to setup is that someone with access to the repository\nlogs into appveyor and enables the repository (which essentially setup's hooks)\nand then it builds using the config from the .yml file.\n(Additionally some of the mentioned todos above would be a good idea)\nI hope I understood your question correctly, if not please let me know.\n. @andresgutierrez \nAnything else wrong with the preg_match optimizer?\n. @andresgutierrez \nAny idea what might be wrong there?\n. @andresgutierrez \nStill working on producing a small testcase, the current code base is rather complex,\nwhich is a part of a reason, why I don't exactly know what's causing this behavior.\n. @andresgutierrez \nCan you take a look at this?\nSo I think I was able to track down the cause of the bug:\nIt seems like it happens when return_value = object_ptr (not necessarily identical zval's but identical underlying objects) on a method call:\nIn some cases it's possible that because of OBSERVE_OR_NULLIFY_ZVAL\nan object_ptr is destroyed during a method call. (That's why adding a reference fixes it)\nThis probably leads to the strange bugs I discovered before (since the object \"gets broken\")\nThe codebase I used locally fails because of Z_OBJCE_P (in ZEPHIR_CALL_METHOD) using a garbage-collected zval,\nwhich is very likely related to this.\nSome example code which illustrates the issue\n(I'm not entirely sure this is the same bug, but it atleast is somehow similar to what I'm experiencing locally (except that it's exactly the same zval, while locally only sharing the same underlying object))\n```\nclass AADebug\n{\n    public static function run()\n    {\n        var g;\n        let g = new AADebug();\n        let g = g->a();\n        var_dump(g);\n    }\npublic function a() -> <AADebug>\n{\n    return this;\n}\n\n}\n```\nPHP: return AADebug::run();\n. Atleast my local case (not the example code) works \nwhen disabling fcache or reverting changes to before\n0d420b55c3c4f00a82967b99c9536488e195e973 (which may just be luck)\n. My example code works now, but it seems like that's not all to it,\nsince my local code still fails.\nSeems like I will have to try harder, but this bug is really confusing so far.\nI don't really see how disabling function cache prevents the zval from being\ngarbage collected in one case...\n. @andresgutierrez \nFinally managed to produce a low/medium sized test-case... (That bug is still confusing)\nhttps://github.com/steffengy/zephir_crash_sample\nI would really appreciate if if you would take a look at this, since I can't\nseem to understand what exactly is going on xD\n. Currently only by using 3rd-party extensions.\n(This also isn't feasible to implement (especially in TS-builds), which makes most\n3rd-party extensions better implementations than we could provide)\n. The problem here is that zephir initializes properties using a constructor,\nwhich isn't called when unserializing.\n. In that case it would be clever to first check if the file exists.\nIt is generally wise not to mute errors of a function, because\nyou won't notice when it fails for a different reason, than expected, \nwhich is a pretty good example of bad design.\n. Ofcourse there are possibilities to use it somehow \"good\", but even that example you point out,\ncould fail and provide a wrong error in an edge case where an error occurs between the mkdir and error_get_last.\nI do not think it is worth the effort implementing this in zephir, \nsince it is in my opinion one of PHP's worse features.\nYou can still check for the success of the statement, without the operator.\nThe problem of the error being shown to the user is solved by disabling\nerror output and reducing it to logging only, which is the better design\nchoice.\n. Maybe that will solve itself with future version of PHP, which migrate errors/warnings to exceptions,\nunfortuntately thats not quite done yet.\n. Alternatively: \\Class_From_Elsewhere::{\"someMethod\"}(\"foo\"); should work\n. Also what PHP versions are you using?\n. You just need to use something really basic like:\nif unlikely isset _GET[\"id\"] {\n    let _POST[\"id\"] = _GET[\"id\"];\n}\nif isset _POST[\"id\"] {\n    echo \"g\";\n}\n. @andresgutierrez \nDoes \"not tested\" in that context mean that the solution hasn't been tested yet,\nor that tests are missing?\nIf tests are missing, how do you test this specific issue, because\nyou would basically have to ensure that specific warnings do not appear.\n. Seems to work like this, PR adapted.\n. seems resolved.\n. The question is if you want to use php's inconsistent behavior or only treat __construct as constructor - which I would prefer.\n. That segfault is pretty weird because it crashes in glibc.\nDo you have any way how to reproduce yet?\nHow often is sometimes?\n. Duplicate of #741\n. @ovr that's something completely different\nhttp://php.net/manual/en/language.variables.scope.php#language.variables.scope.static\n. My results for this:\n(multiple runs, taken only the slowest result for zephir and fastest for php)\nZephir Geometry Class:\n0.41979813575745 (29% faster)\n0.40830683708191 (19% faster)\n0.40620112419128 (20% faster)\nPHP Geometry Class:\n0.54211807250977\n0.48700189590454\n0.48770308494568\nIt's not that fast but\nif you take into respect what that code has to do (multiple iterations within itertations)\nit does not seem that bad...\n@ovr it also is not a bug but simply not implemented yet.\n. @ovr ok, will be interesting how big the impact is :)\n. It seems like this is parser related.\n(The windows parser binary is still outdated)\nYou can try to grab the latest one from appveyor and replace bin/zephir-parser.exe with it,\nand it should most likely work (if it does under linux)\nAnother possibility could be that you previously aborted a build, which requires a fullclean \n(deleting the .temp folder should be the important part here)\n. fullclean is not implemented on win32 yet. (as far as I recall)\nA fullclean should be something like:\n- Delete .temp (which you did)\n- Delete all files in ext/\n- Delete the folder named after your extension in ext (e.g. ext/test)\nAlso is this really a win32 problem (does it work using the linux version?)\nCould you share the code producing that crash?\nIf not, could you share a sample which triggers the same crash?\n. I do not get such error, it compiles perfectly for me.\n. Workaround referenced above, currently no real idea how to fix it properly,\nsince you either have to do it as in the workaround or you have to track expressions and\nbranches/conditions where it already has been set...\n@andresgutierrez Any idea?\n. @andresgutierrez \nAny idea how to fix this properly?\nI only can think of\n- Fetch superglobals at the start of the method (making them branch independent)\n- The workaround referenced above, which checks if they were already fetched.\nI actually prefer the first one, since the proper fix is probably not really easy to implement,\nsince you would have to modify large parts of operator behavior and somehow track branches/conditional paths where\nthe superglobal has already fetched or still is/could be unitialized.\n. @andresgutierrez \n\nA separate kernel specifically focused on PHP7\nA new memory manager designed to address the reference counting changes in PHP7\nA new approach on reusing zval variables\nIt would be hard to have a common generated code for both PHP5 and PHP7\n\nTotally agree on this points, as that matches the result of experiments I conducted.\n\nA new approach on generating method/function calls\n\nThis actually has not changed very much, what problem do you see here?\nI think another issue will be that currently we have localOnly and \"global\" (heap) zval's,\nwhich result in different handling on the compiler side (PHP).\nAny idea how to implement the different code generation for PHP7?\nIt seems like it will require huge amounts of changes (and removing some duplicated code)\nto achieve that. (And therefore could easily result in a mess with very much if's)\nAnother interesting example for that is basically the StringsManager, which creates C code for concatenation, which also has to be changed for PHP7 (zend_string, no `zval **).\nSome examples of kernel functions can be taken from my first/second experiment,\nwhile it should only be used as reference, since some implementations are kept\ntoo simple to not consume all my time by porting that complexity \n(e.g. array multi update in first experiment).\nI still think the most important part will be to find a good way to implement the code generation\nfor PHP5/PHP7 in the compiler, which will require a smart way to solve it, since you basically\ncan not leave many places untouched... \nAlso let me know if/how I can help :)\n. @andresgutierrez \nWhat do you think about the approach in 6d20cad7e6637c5825c07f0bdc9149644a0272f7\nBasically it's a separate bare kernel, which is used when compiling using PHP7, \nwith a basic \"skeleton\" needed to compile an empty extension,\nwhich should allow porting feature by feature.\nOn the compiler side we can use Utils::isNG() to check for PHP7.\n. @andresgutierrez First Alpha is announced for Jun 11 2015 \nhttps://wiki.php.net/todo/php70#timetable\nso what's the further course of action?\nAlso is there already a plan of what's to be done to support multiple backends? \n. Is the goal there then to completly abstract code generation to method calls\nor will backend code \n(for example ZendEngine2/Statements/LetStatement) still output code directly\n(except for stuff that's needed as abstraction like genCopyOnWrite)\nI guess the plan is to abstract it completly leading to probably more readable code?\n(Easier changes than replacing a string everywhere)\nWon't total abstracting of operators/statements generate much \"common\" (->code duplication) code between the backends?\nOr is the plan to have a \"root\" level of Statements/Operators which only delegate output specifc tasks to the backend, which probably makes more sense (keep the main execution logic, which should be equal for each interface, at a root level)\nAlso what's the schedule on this?\nIt seems like a very extensive refactoring operation, which will probably need very much time.\nIs this operation already in progress or is this only a plan (or to be planned to be exact) for now?\n. I also agree that refactoring the compiler generally is very much needed.\n(not only in that regard)\nWith the first alpha of PHP 7 released, this is still something that should\nbe started as soon as possible, requiring a clear plan for implementation.\nCurrently it seems like this is in a kind of \"postponed\" state, which\nalso delays the actual PHP7 support in a near future. \n. @andresgutierrez \nWhat do you think of 6eb1503e5b6f460a33b44eee75a2fdbcb82d0709 ?\nChanges include:\n- Template/Kernel files dependant on backend\n- Active backend detection (PHP5->ZE2,PHP7->ZE3), \n  if no backend is specified via --backend ZendEngine2 for example\n- Bare kernel for ZE3 and basic templates\n. @hylent \nIn that draft it will generate the ext folder according to the active backend.\nSo if you decide to compile for PHP7 you would logically get that kernel as output.\nAnything else also does not make very much sense since the generated\ncode will anyways not be very compatible with other kernels.\n. @finchcn \nWhat are you talking about?\nzend_uint is bc'ed ages ago due to 2750ecb3bcc090f13373e0d1965af88b9fd438dd (main.h)\nzval_object_value is not even used anywhere.\nThe issues you mention have nothing to do with this PR and probably\nare due to phalcon's C components, which also have to be updated,\nto compile it for PHP7.\n. @finchcn \nSorry but you are looking at regular zephir sources and mentioning old issues\nhere and frankly wasting my time, since you probably haven't even looked at PR's?\nzend_uint is defined by zephir, so it's no problem, as mentioned above.\nzend_object_value is not used in ClassDefinition, where you probably\nhave not checked my PR or since recently the development branch but the current zephir sources (master).\n( https://github.com/phalcon/zephir/blob/development/Library/ClassDefinition.php )\nPlease do not mention old issues multiple times.\n. There is initial support available. Might work fine for your project or not at all\n. It's available in master.\n. If you're using PHP7 to run zephir, it should work with the same steps as for PHP5.\nIf not you have to specify the backend manually, as described in the related PR.\n. zephir generate --backend ZendEngine3 or zephir build --backend ZendEngine3\nIt's just another argument.\nBe aware that zephir has to find PHP7 for build to work (since installing/building against PHP5 with a PHP7 extension can't work)\n. zephir build --backend ZendEngine3 works fine for me.\nzephir build --backend=ZendEngine3 might solve the issue, but shouldn't be necessary.\nOr just running it using a PHP7 is generally the best option to go, since it makes that argument\nnot necessary.\n. It's impossible that phalcon will build without modifications, since it uses C-code (for some stuff).\n. zephir atleast works for some cases with PHP7.\nclosing this now, since this is anyways not used anymore to track any issues.\nIf you experience anything which doesn't work for PHP7, please open a separate issue.\n. Thats because it shouldn' delete ext/kernel - use zephir fullclean instead\n. I do not say that its no bug - but it is workaroundable by creating the folder or using zephir init.\nAnd your tests do not pass.\n. Something like\nzep\nvar g = 5;\nlet g = round(g / 2);\nshould be enough to trigger it.\n``` c\n    zval *g = NULL, _0;\nZEPHIR_MM_GROW();\nZEPHIR_INIT_VAR(g);\nZVAL_LONG(g, 5);\n\nZEPHIR_INIT_NVAR(g); //here\nZEPHIR_SINIT_VAR(_0);\nZVAL_DOUBLE(&_0, zephir_safe_div_zval_long(g, 2 TSRMLS_CC));\nzephir_round(g, &_0, NULL, NULL TSRMLS_CC);\nZEPHIR_MM_RESTORE();\n\n``\n. Until this there's still inconsistency on when a constructor is called, \nbecause if you have a constructor that echoes something and a child\nclass that uses a constructor to initialize it's properties it will nevertheless\nalso echo something without aparent::__construct` being used in the\nchild's constructor.\nThis solution also calls the parent constructor if the child does\nnot have a constructor and initializes properties, as PHP does.\nThe initialization logic in the constructor checks for the called scope\nto ensure that properties aren't overwritten in for example `parent:: calls.\n(e.g. the auto generated parent call if a constructor was defined by zephir, \nas mentioned in the previous paragraph)\n. @ovr @andresgutierrez \nShould be ready now, need a review on this.\n. @andresgutierrez ping\n. @mruz\nCan you retry using https://github.com/phalcon/zephir/pull/1005 ?\n. @mruz Can you retry again?\n. @mruz \nthat trace unfortunately is not very useful and propabably only indirectly related.\ncould you provide the generated c-sources/\n(optimally) a test case that triggers said crash, since setting up and debugging\n ice framework takes a quite extensive amount of time.\n. @mruz What are the steps required to trigger it?\n. I'll probably need some time for this (potentially a few days), \ni have a idea what's going on but don't know why.\n(The crash is triggered in DI::set (within the closure, new Dispatcher), \nsince somehow memory frames seem to get corrupted?)\nEDIT: NVM:\n```\nPHP_METHOD(Ice_Mvc_Dispatcher, __construct) {\nint ZEPHIR_LAST_CALL_STATUS;\nzephir_fcall_cache_entry *_0 = NULL;\n\nZEPHIR_MM_GROW();\n\nif (EG(called_scope) == ice_mvc_dispatcher_ce || EG(scope) == NULL) {\n    zephir_init_properties(this_ptr TSRMLS_CC);\n}\n\nZEPHIR_CALL_PARENT(NULL, ice_mvc_dispatcher_ce, this_ptr, \"__construct\", &_0, 106);\nzephir_check_call_status();\n}\n```\nWill look into why this happens... (missing ZEPHIR_MM_RESTORE() -> broken memory frame)\n. @mruz updated PR, please try again :)\n. @mruz Please try again using latest PR \n(fixed something else, eventually unrelated?), \nif it still fails please try a zephir fullclean and let me know\n. This is strange\nI'll probably have to take a look at this, when\nI have more time, since it doesn't seem trivial at all and my tests\nso far haven't showed similar bugs...\n. @mruz \nShould be fixed now, can you confirm?\n. @mruz\nYeah my fault there, should also be fixed now.\nSorry to trouble you through all that :)\nPlease let me know if anything else fails.\n. @mruz\non what class is the constructor called, user?\nI think the problem might be that it is called by a class which doesn't define a constructor\n(-> auto generated parent zephir constructor call, doesnt pass params to parent constructor), \nwhich means that filters is probably null.\nCan you confirm my theory?\n. @mruz\nThanks, it's exactly what I thought of. Will look into it asap\n. @mruz Hopefully also fixed now\n. @mruz\nApp\\Models\\Users is a PHP defined-class?\nAnd the stacktrace order seems correct except \nthat App\\Models\\Users::__construct should be called first, if existing?\n. Does that class define a constructor? (I guess no?)\nDoes that constructor call the parent explicitly?\n. because the method is inherited but still belongs to the \"physical\" parent class entry of Mvc\\Model (since it was defined for that class), \nbut is called with another scope (App\\Models\\Users). It is an internal function, therefore the different behavior. (And the stacktrace uses the ce->name insteadof the scope name)\n. @mruz\nDid some refactoring and changed how property initialization generally works to a\nbetter solution (initialize propertys once at object initialization not in the constructor)\nCan you check if that works for you?\nThanks for your testing :)\n. @mruz \nCan't reproduce that using the example code in #537 (since that definitely works for me)\nAlso there's a test for it, which passes\n. @hylent\nin php they are initiialized during object_init, \nin my implementation they will be initialized as you described it.\n@mruz\nCan you confirm whether this is now fixed by the latest state of the PR?\n. should work just as in PHP: http://php.net/manual/de/function.ini-get.php\n. I think you should rebase & squash the commits.\nAlso maybe the commit message should have a short summary in the title\n(first 75 characters) of the changes insteadof a generic \"Update Compiler.php\".\n. PHP also does not support something like that.\nMaybe try something like:\n1) method_exists(__CLASS__, foo);\n2) method_exists(get_class(), foo);\n3) method_exists(get_called_class(), foo); (static::)\n. Probably because mt_rand has an optimizer and rand doesn't.\nSeems like that's why something goes wrong there, even if it shouldnt\n. @andresgutierrez\nreworded that, since it didn't really describe the problem as accurately as it should.\n. @andresgutierrez \nYeah the failing travis builds are strange,\nwaiting for feedback from @mruz.\nHopefully there is not more broken with property initialization ^^\n. @andresgutierrez \nYeah seems to work fine\n. That is strange, haven't noticed something like that.\nI`ll look into it as soon as possible\n. @andresgutierrez \ncould you review this?\n. using some var_dumps for simple cases is sufficient and fairly effective.\nthe easy bugs are also easy to spot when you just look at the code/function flow.\nFor heavy cases, where zephir bugs are in play, you can spot a fair amount by\njust looking at the generated code or using a dedicated C Debugger.\n. ping @andresgutierrez \nHere you go, the PR you wanted.\nthe travis fail is due to a build timeout (>10 mins, whyever they seem to happen now...)\n. @andresgutierrez \nCan you take a look at this?\nIt's a direct PR of what you wanted as such in #952\n. @andresgutierrez\nDid you already take a look at it? :)\n. @andresgutierrez \nI am working on refactoring the parts required for PHP7 compatibility.\nBasically introducing support for PHP7 feature by feature and refactoring part by part \nuntil 100% is reached, which is what I'm working on at a separate branch\n( https://github.com/steffengy/zephir/tree/ng-refactor2 )\nI think it makes sense to first merge this as a preparation.\nThis also isn't very dangerous in terms of BC.\nRolling in new changes as they are stable in regards of BC\n(currently that other tree is failing compilation on 5.X, because it's very heavily in\ndevelopment and in the progress stuff during that unfortunately sometimes breaks)\nmakes probably more sense and should be handled as a/multiple separate PRs.\n. To clarify: \nThat means no there won't be any more changes regarding that in this PR\nand I would like this merged, if there isn't any problem.\n. Im not quite sure if it makes sense why not to squash some of these fix psr commits...\n. You cannot execute code without a method/function.\nIf you just want to ensure that this constant is being initialized, you could do this by using a\ncustom initializer function (requires C).\nThe (probably) more maintainable solution would be to\nimplement this using class constants,\nfor example with a parent class of Calculate.\n. If you had that like that in PHP it would be executed when the file is required,\nwhich isn't possible in zephir, since the classes are all registered at the same time.\nA solution could be\na) define some kind of an init method/function, which you simply call at startup \nb) move the constant to a parent class (which probably is anyways the cleaner solution)\nThat's atleast anything I could think of at the moment.\n. This is like an exact duplicate of #1026.\nTherefor the same answer applies:\nYou need an entrypoint to run code in zephir,\nyou cannot run code without a scope.\nThat means you could for example move that code to an initialize method, which you call at the\nstart of your application lifetime, which performs\nthese checks, which relay on code being executed.\nAccording to your problem description the problem lies with the defined function, which does not really match the code you provide, since you do something that's not possible in zephir (running code outside a function)\n. What is the reasoning behind this?\nI cant really see the sense here, because you need the root permissions,\nto install in /usr/local/lib/ , which is what this very likely tries to do.\nThe only reason it works for the travis parts is because they use a separate prefix,\nto prevent this permission conflict.\nOr is it just that you could assign these permissions and call sudo ./install-jsonc?\n. Json-C isn't the problem there, since it's installed to /home/travis/build/phalcon/cphalcon/build/lib/.\nA fix is in 2.0X as far as I seen, it also could've been solved by adding\n- export LD_LIBRARY_PATH=\"$TRAVIS_BUILD_DIR/build/lib\":$LD_LIBRARY_PATH\n - export LIBRARY_PATH=\"$TRAVIS_BUILD_DIR/build/lib\":$LIBRARY_PATH\n - export C_INCLUDE_PATH=\"$TRAVIS_BUILD_DIR/build/include\"\nto the install section in travis.yml (cphalcon)\n. It is not, the problem is simply that phalcon had the wrong lookup paths for libraries (as you also see due to the nature of the error message \nparser.c:9:25: fatal error: json-c/json.h: No such file or directory),\nwhich is fixed by either setting the environment variables mentioned above or by doing the\nfix applied: https://github.com/phalcon/cphalcon/commit/d6f25fcaef3d46c03ebf2a7ee4de2d2062286a16\nIt is fixed upstream (not the way I would fix it but fixed), as you can also see as phalcon's travis tests pass. ( https://travis-ci.org/phalcon/cphalcon/builds/71014441 )\n. Why would you call it stupid?\nIt means less work for us trying to reproduce that issue and therefore is \na very valid guideline.\nThanks for providing an example, but I just cannot appreciate your ignorance.\nI think it would be beneficial for everyone if you would refrain from such comments,\nwithout clarifying why you think it's stupid - which you could express less negative.\n. @ovr \nThere is much polishing and cleanup to do, as mentioned in the todos above also.\nultimatively all backend dependant code should be in the respective backend,\nif it doesn't require complicating the codebase too much.\nGenerally this PR isn't quite ready yet, so reviewing does only make limited sense.\n. @ovr\nI just didn't want you to waste your time, but it's ofcourse appreciated :)\n. @andresgutierrez\nCould make sense, yes, especially since there's still pretty much to do,\nand this is nowhere near total stability for ZE2 (BC) and ZE3.\nWhat do you propose?\n. @andresgutierrez \nSure, will have to resubmit it though https://github.com/isaacs/github/issues/18\n. @andresgutierrez \nAgainst which branch do you want the PR to be? Just \"development\"?\n. @andresgutierrez Sure\n. Closed since that is unpreventable with the current array implementation.\n. @flip111 It's the same as before\n. No but you can grab the most current one from appveyor and I mean it hasn't changed for PHP7\n. @flip111 \nseems like you are compiling for PHP5 and trying to compile that with PHP7, which cant work\n. The problem is that if you do not specify a target version,\nthe target version is assumed to be your PHP version (the version of the PHP running your compiler).\nYou still can use a PHP5 version for compilation \nif you explicitly specify zephir build --backend ZendEngine3\n. On windows you can also use phpize,\n thats what zephir build does, see Windows.md even though it might be outdated for now.\n. @flip111 \nIt's just not documented how it works, but it does work.\nYou need to build/download a devpack first though and use the built phpize\n. No I mean you need a devel-pack which contains a working version of phpize.\nYou get this by building a release archive ( nmake snap or simply nmake build-devel ) and then for example use <Build_Dir>\\Release\\php-7.0.0beta3-devel-VC14-x86\\phpize.bat as phpize\n. @flip111 \nzephir install is not supported but zephir compile is, there's a difference.\nIt also cannot work from a regular prompt, since a compiler cannot be found like that.\nthe first output seems correct, are you sure that the build hasn't worked - since for me anything seems fine, since it passed compilation and reached installation and aborted there since that isn't implemented for windows. \nWas no .dll file created or how do you come to the conclusion that the build for your full output failed?\n. 1. shouldn't matter since it isn't compiling PHP\n2. probably absolute paths\n3. cannot say\ndoes D:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\ contain a .dll file?\nHave you checked the compile_errors / compile output file?\n. Just tested it locally, for me it works perfectly generating a dll file, so there's likely something\nfailing during compilation on your end.\nPlease check the logs for more errors\n(.lib in that case is an object file library and no statically linked binary)\n. You are causing total chaos in your build tree.\nIt seems like you have used a Debug devpack to build a release extension? \nDebug_TS\\php-7.0.0beta3-devel-VC14-x86\nProbably you have built with --enable-debug before you used nmake build-devel.\nwhich also would mean that you've used Debug_TS\\php-7.0.0beta3-devel-VC14-x86\\phpize\nas command?\nDo you want to build a debug extension or what is your aim here?\n. @flip111 \nYou could also have debug symbols with release builds but thats another story.\n(If you wanted to put zephir into debug mode, which is rarely necessary to track an issue down,\nthat would also be a bit harder on windows.)\nSo the problem here is that when windows support was added, the builddev option\nhasn't existed yet. \n(So there is basically no comfortable way to build a development extension yet)\nSo you would probably have to do the build steps manually.\ncd extFolder\\ext && configure --enable-extname --enable-debug && nmake\nshould cover it (requiring a VS-cmd)\n. @sergeyklay @KorsaR-ZN is this still an issue?\n. @andresgutierrez \nThat would atleast reduce the amount of possible merge conflicts later on, right?\nAnd also provide a pretty stable build in master\n. @ovr\nOf course it's not needed and works without, but the main reasons I think would be to\n- keep master stable\n- reduce the amount of merges, by introducing all changes in development (insteadof master)\n  and then merging one time, once it's deemed stable\nI also wouldn't mind write access, but that is also no requirement :)\n. @ovr \nI agree that if I had those rights, it would make some stuff much easier.\nBut until then I guess I'll have to create some PRs regularily.\n. Fixed in development.\n. Fixed in development.\n. Could you try using the development branch?\n. It's probably a simpler case only depending on class extension,\nI think with interface extension you have the problem, that if it can't be evaluated on\nruntime, zephir won't validate if a method is actually implemented\non the class implementing interfaces. I'm currently unsure if it's technically advisable\nto allow that behavior and if it's trivially doable.\nGenerally it is advisable, to make sure classes / interface implementations\nare known at compiletime (via autoloading, ...) to ensure not only better\nvalidation of inheritance but also better code generation (better type-choices,\nleading to better performance and less probability of bugs)\n. Could you squash/rebase these two commits? \n. Thanks\n. Just to clarify [0:58:10] Andres Gutierrez: he said he doesn\u2019t want him be added as collaborator,\nquote of me from the last PR:\n\nI also wouldn't mind write access, but that is also no requirement :)\n\n@ovr\nFirst I really appreciate what your trying to do, still\nplease do not start a \"war\"/massive conflict because of me :smile:\nI'm fine with either situation (direct push to development / indirect via PRs).\nEven though I agree that the first would be preferable.\n@andresgutierrez \nI honestly do not see why it's such a big deal,\nespecially all changes (which don't break tests) anyways end up in development \n(except bumping an php (win32) version to ensure tests passing again or something trivial like that).\n. Thinking about the future of zephir, since I guess we will see some \"splitting\" into two/multiple forks, I see several options for me:\nSome options\n\n1. pushing to my branch ng-refactor2 and zephir-lang/zephir (development branch) \n  and still trying to keep phalcon/zephir (development) up to date through regular PRs\n2. pushing to my branch ng-refactor2 and zephir-lang/zephir and hoping that everything stays in sync/the situation resolves itself\n3. pushing gto my branch ng-refactor2 and keeping phalcon/zephir (development) up to date through regular PRs\n4. just \"maintaining\" my branch ng-refactor2 and not worrying about future trouble/other unprofessional behavior, and just keeping it work for what I need it to do\n\nGeneral problems despite the choice:\n\ndisparity between the \"forks\"\ndisaster, more work (maybe just as when node/io.js split up and then decided to \"merge\" again)\n\nI currently tend to option 2 or 3.\n\n2 is less work for me, but could be negative for the progress of zephir, but generally I like the organization think, since it makes zephir more independent, which also might again have negative consequences regarding the amount of contributions [and unhappy users].\n3 is more work for me, but might mitigate a bit of this \"split up\", and might be the more\n  stable/futureproof choice? \n\nother remarks\n\nGenerally, I'm shocked that such a little detail\n  escalated that quickly, due to mistakes/problems on every side.\n  I really expected more premediated decisions here...\n  I hope that in the end I won't blame myself, that indirectly\n  I caused this split up. [which would be stupid of me]\n\nI will have to think about that for a while... \n@ovr @andresgutierrez \nIf somebody has some good arguments, please let me know.\n. @sergeyklay \n\nAs with last PR, it would be good to wait about a week with the merge,\nto minimize the amount of PRs I have to create.\n\nIt just was used as a \"spam PR\" with content not really belonging to the PR,\nwhich is also a bit debatable, but I guess there isn't really another\nmedium of dev-discussion for zephir.\n. @andresgutierrez \nThanks for providing access now, I also didn't know you had no control over zephir-lang.\nWith access now, I won't have to choose any of the suboptimal choices, I mentioned above.\nI will try to improve ZE3 support even more, if I have time I'll also take a look at improving\nbuilding under windows and general refactoring.\nIf you're fine with it, I also could review/merge PRs into development,\ndepending on how you want that handled in the future.\n. I'm not quite sure if it makes sense to make micro-optimizations in that area \n(improvement of 0,5 ms on 10k iterations), but I'll merge this anyways.\n. Thanks\n. Thanks, seems like I missed that.\n. @Xon \nShould be fixed in development.\n. Currently you should PR against development, since master is frozen.\nGenerally it would also be good, if you rebase/squash before resubmitting your PR.\n. Should be fine to merge.\nI was a bit sceptical at first, since you moved the aliasManager initialization\nto the constructor, which itself is no problem.\nBut if the alias manager would contain information that's different per compilation,\nyou wouldn't be able to call preCompile multiple times (if that's ever needed)\non a compilation file. \nSince alias managing should not be able to produce conflicts of any kinds, on multiple\nruns, I'll merge this.\n. @fezfez \nThanks for your effort, but I think that currently does not much, since scrutinizer does not seem enabled for the development branch, or am I misreading that?\n. That seems strance since zephir_pow_function is actually a macro.\nCould you provide the generated code (ext/evaluator/operators/power.zep.c)?\n. I might have an idea what causes this:\ncan you replace \n$context->headersManager->add('kernel/math');\nwith \n$context->headersManager->add('kernel/operators');\n in Zephir\\Library\\Optimizers\\PowOptimizer.php\nand report if that fixes it?\n. It's just a typo in the regarding source code, the macros were defined as operators for a long time.\nIt just wasn't noticed because people mostly use other operators in any form, so it would be automatically included.\nEdit. Fixed in development.\n. I think to compare strings using > is not really a good practice.\nIs there any advantage of using that insteadof !empty that I'm not seeing there?\n. I didn't say it wasn't a bug, it very likely is \n(or to be exact, greater/lower comparisons not being implemented for strings properly),\nI just personally wondered if there's any advantage of using it.\n. You should never get an warning of the runtime that's running the compiler.\nThat's why it's marked as bug.\n. Does\nfor value in iterator(collection) {\n      this->add(value);\n}\nwork?\n. I think it's indeed missing in the official documentation, \nso the only \"documentation\" would unfortunately be a test case and the implementation for it.\n. Could you maybe explain your issue a bit more?\nIf you mean including zephir files, then that would be absolutely not necessary,\nsince they are anyways loaded.\nIf you mean including php files, that just works as in php.\n. It doesn't work because you call it on a variable, and not a string.\nIt also isn't better but just another way of calling strlen.\nstring lala = \"asdasdasda\";\nvar_dump(lala->length());\nshould work.\n. Are you using the development branch?\n. This doesn't happen when using development.\n. @andresgutierrez\nI literally thought the same thing :)\nIt also maybe makes sense to exchange some kind of private contact information (Instant Messaging or IRC or similar), to discuss\nsome future steps.\nGenerally I think the next step after merging development into master would be to push the version and then getting cphalcon to compile. \n(which I haven't done yet, since I'm mainly using windows and that's a bit tricky to set up)\n. That is indeed strange, since it works for me on 5.6,\nwhich PHP version are you using?\n. I just added the code from your issue to the tests and they all pass for PHP5.X - PHP 7.\nHow did you declare filtered and sanitize ?\n. I cannot reproduce this.\n```\nstring filtered;\narray sanitize;\nlet filtered = \"test_test\";\nlet sanitize = [\"/\", \"'\", \"\\\"\", \"?\", \"!\", \"%\", \"$\", \"&\"];\nlet filtered = str_replace(sanitize, \"\", filtered);\nvar_dump(filtered);\nexit();\n```\nresults in string(9) \"test_test\" for me.\nMaybe retry using master, after the merge now (and possibly a zephir clean / zephir fullclean)\n. Generally you can consider any part of the syntax an reserved keyword.\nIf you need a list, you could extract it from the lexer definition.\n. Yeah that seems broken. Working on a fix\n. It might be fixed in master now. @MarkBaker Can you confirm?\n. That would convert the OP2-Double into a Long, so it might work for some cases but not for all.\n. It actually probably is a codegeneration bug since the functionality behind that should\nbe implemented:\nZEPHIR_LE_DOUBLE can be realised as !ZEPHIR_GT_DOUBLE\nZEPHIR_GE_DOUBLE -> !ZEPHIR_LT_DOUBLE\nwhich just is missing for GreaterEquals and LowerEquals, in combination\nwith some in consistent code (see my reverted commit from today and the code in that area)\nWill try to find some time to look at this properly\n. I just implemented the approach mentioned above, @MarkBaker\ncould you please test again, if that fixes your issue?\n. Thanks aswell for reporting that and in general for testing it for me.\nWe really need more tests in that area :)\n. @KorsaR-ZN\nSeems fine on the first look.\nCould you provide a small test case, to show that the bug is resolved and prevent it from reappearing?\n. Thank you!\n. Thanks\n. @fezfez resolved?\n. I don't think the advantages to the current solution, are that big that I would invest\ntime into implementing this. I think more important would currently be to convert\nPHP tests to zephir and add them to zephirs functionality tests (where applicable).\n. @fezfez you can do that of course, the advantage of this solution would be that you have php (test-code) and zephir code (implementation) in one file and do not have to take a look at multiple files.\nThis would also require converting the existing tests, which is not a trivial amount of work :)\n. Initial support available through https://github.com/phalcon/zephir/pull/1109 .\n. should be available in master.\n. That looks great, will review it later.\n. If that's implemented, regarding the current (not modular) architecture, it shouldn't be as an external component but directly implemented into zephir, effectively superseding the old tests.\n. Nice catch\n. 5 commits with 1 line change each?\nThat really should be squashed.\n. I think its unlikely that there's a memory leak, \nthat would just appear in too many situations, which it doesn't.\nMaybe it's some case of an edge case.\nAlso do you have a small code sample to reproduce?\nAre you by any change using a debug build (of zephir)?\n. I can't really do much without a code sample.\nI need to understand the circumstances (call types, which code is run) to see what could happen.\nFinding the cause is the next step, after reproducing an issue.\nAgain: Have you built a debug or production build of your extension?\n. Your assumption \nThere is an option to disable the cache but it does not stop this. It only applies to reading the cache.\nis btw wrong, it also disables writing the cache (since no fcall hash/cache key is generated)\nMost of the time in that situation it's either not a memory leak, or just something you'll have fun searching for. As a tip, focus on getting a small test case, even if that seems impossible, with a high amount of complexity it is certainly more unlikely to understand these kind of problems.\nJust comment some stuff out and see if it still leaks, maybe try using USE_ZEND_ALLOC=0 and try to let valgrind find something (which might not work, since disabling the allocator might just free nothing on cleanup - effectively delegating that to the kernel).\nProbably using a debug build of PHP (no debug build of the zephir extension though, since that for sure causes memleaks for the sake of debugging) and take a look at the memory leak output from the allocator\n(and yeah -DZEPHIR_RELEASE / build -> prod build, builddev -> dev build)\n. Your first code sample doesn't compile.\nThere are also multiple problems:\n`let value = explode(\"|\", str);should bevar let value = explode(\"|\", str);andfor v in str``` doesn't work since str is a string (strings are not iterable)\nIs that just a wrong sample, if so please correct it so I can use the exact same code\nwhich triggers it for you.\nAlso how are you calling the function? (from php/zephir also typewise: static call, object call, ...)\n. Thanks,\nmemory leak seems to come from zephir_is_iterable(value, &_2, &_1, 1, 0, \"\", 535); / separation.\nIt also seems sensitive to timing.\nI think it's the following:\nIt is a bug with zephir_is_iterable, since you modify the array you're iterating over within\nthe for loop, which causes the array to be duplicated and not freed or updated after.\nSo that is just not entirely implemented yet.\n. Yeah this unfortunately is just an incomplete implementation,\nwhen the array being iterated on is modified.\nWill fix it as soon as I get to it.\n. Should be fixed for ZE2.\n. Any other information?\n/bin/bash: /home/klay/projects/zephir/phalcon/cphalcon/ext/libtool: No such file or directory\nhints a wrongly setup build environment. Do phalcon's tests still pass or is this a general problem?\n. Cannot reproduce.\n. Duplicate of #653\n. The self scope isn't valid in this context.\nYou'll have to rely on a LSB, use static::_myMap, which seems to require public as visibility, which is related to the same scope limitation here.\nGenerally using an closure\nreturn preg_replace_callback(regex, function (array matches) {\n            return matches[0];\n        }, str);\nmight be favorable, if that's possible for your case.\n. I personally think that this is not necessary, \nI won't implement it for now, which doesn't mean that this won't be merged.\n. Unfortunately we only offer support in english.\n. Yeah it's a more general problem, unfortunately not very trivial to fix.\n. @baszczewski \nmaster is by no means stable, this bug is unfortunately another limitation of it.\n0.9 generally is not as stable as previously. There also is no release for it on github,\nso I for now consider it as \"experimtal RC\" and advise to fallback to 0.8 for code which\ndoesn't work as expected on 0.9.\nMoving backward would also delay fixing this, since there would be no priority on it,\nIt also would make all 0.9 code incompatible with future 0.9 versions, which leaves another\nBC break which is not advisable at this stage.\nIn an ideal case it will be fixed very soon and some other limitations will be resolved as well.\nIt also only effect a small portion of cases, array_push for example\nis by no means broken in every case.\n. Nvm, this is not the issue I was thinking about, fixed in master.\n. Thanks for reporting that, could you try again using master?\n. That compiler error makes no sense.\nincompatible type for argument 1: expected \u2018struct zval *\u2019 but argument is of type \u2018zval\u2019\nargument 1 is zval _1$$3; and create_array gets &_1$$3 (therefor zval *),\nso this is either the wrong line or there's some magic going on.\n. @mruz \nThe name includes the branch if it's not a root-declaration, because of possible variable shadowing,\nas specified in the respective PR.\n. yes\n. @mruz \nIt might be fixed in the latest master now.\n. @mruz \nSo how to get #1131 you submitted to actually fail, so that I can reproduce the issue?\n. That's exactly the content of #1131 , which passes.\nSo I don't see how that could fail.\n. @mruz \nIt's probably an edge case that relys on a specific memory layout/code flow,\nwhich makes it hard to reproduce.\nI unfortunately currently do not have the time to setup ICE and figure out\nwhat constellation of the code crashes standalone (effectively figuring out the origin of the error, which will probably take some hours)\nand then fixing it.\nIf you can produce a small code sample, which crashes without external dependencies,\nI'll gladly take a look at it.\nIf not, this might take quite a while longer, sorry.\n. That's interesting. It seems like it doesn't happen during regular tests, since some code that runs before somehow affects the state whether it crashes (probably some kind of global modification, which prevents the bug to show (probably wrong reference counting, which doesn't appear since the respective value has \"enough\" references)).\n. Fixed that fail you mentioned previously. ( #1131 )\nSince this issue contains multiple bug reports and is not very clear,\nclosing this for now.\nIf any issue is not fixed, that's mentioned here, please open a separate issue\nregarding only that concern.\n. @sergeyklay \nyou'll have to rebase against master, then the tests should pass.\nalso it might be good to change the commit message to something more verbose (since you can't guess what actually was changed by just looking at the history, without looking up the issue or the changes).\n. Do you have more information?\nHelpful would be:\n- sample code to trigger it (short, if possible)\n  (you maybe lucky that it happens only recently, to track down the change with triggers it and narrow it down to this bug)\n- php stack trace (output when using zephir with verbose=true)\n. Since here aren't enough informaton to fix this, I'll close this.\nIf a similar error pops up, it can be diagnosed as described above and\nshould be filed as a separate issue.\n. This breaks all travis builds, so it obviously isn't correct that way.\n. That is much better. Thank you!\nI would also have merged the previous version of this fix, if it wasn't breaking more than it's fixing.\n. undefined symbol: ZEPHIR_CALL_USER_FUNC should be fixed.\nLet me know if the second part also works now\n. @sergeyklay \nI talked with @andresgutierrez about that, and he also was sharing my\nopionion that anyone using PHP 5.3 is pretty much reckless (many security issues and no EOL since more than a year).\nI guess that either means that phalcon is also dropping PHP5.3 or that it\nmight be (as I mentioned several times) make sense to use tagged releases\ninstead of the master branch for phalcon.\n. First off thanks for helping making PHP7 support better :)\nI'll try to take a look at this soon\n. minimal sample:\nzep\n public function addNamespace(string prefix, string baseDir)\n    {\n        if !isset this->prefixes[prefix] {\n            let this->prefixes[prefix] = [];\n        }\n        array_push(this->prefixes[prefix], baseDir);\n    }\nThis is very tricky to fix, won't happen soon.\n. It is indeed related to array fetching.\nIf you're interested in an explanation:\nif !isset this->prefixes[prefix] {\n            let this->prefixes[prefix] = [];\n        }\ncauses the refcount of the new array to be 2 \n(1 for the current method scope and 1 for being assigned as array member of an objects property)\nwhich only gets lowered at the end of the method \n(since then the memory frames are \"garbage collected\").\narray_push(this->prefixes[prefix], baseDir);\nHere the array with refcount 2 is separated (since the refcount should actually be 1,\nwhich would only be possible if we had garbage collection after each scope or if the compiler would determine to generate code that reuses the array created above) -> \na new_array is created (and the current array gets refcount 1 as a result of separation)\nwhich is filled with your values but never used (since it has no \"connection\" to object properties)\nThen at then end of the method, values are \"garbage collected\" and the old array (which is still an property-array member), get's destroyed since the refcount is only 1.\nThe method now points to uninitizalized memory, which is what you see in your var_dump.\nI cannot quite think of a way to fix this without the ways described above,\nwhich are very tricky to implement...\n. It's because install_zephir.sh contains the part, which compiles & installs the parser, remove that and it should work.\n. That output doesn't seem complete, can you post the entire output?\nBefore Makefile:183: recipe for target 'parser/parser.lo' failed should be some  more detailed error output.\n. @mruz @valVk \nCould you please try the latest master?\n. Does the generated parser.c file contain the changes of 6153090 ? (Search for strndup and check if the ifndef guards are present)\n. So just to absolutely clarify: you see the #ifndef HAVE_STRNDUP around /home/mruz/Dropbox/git/ice/framework/vendor/phalcon/zephir/parser/parser/parser.c:9258 ?\n. Thanks\n. Could you provide any of the following:\n- a detailed stack trace (debug build)\n- a small code sample which triggers the segfault\nI unfortunately can't really do much without knowing where to search.\n. Closed due to missing information.\n. ## 1.\nIf you expect it to work that way you seem to have a fundamentally wrong understanding of what should work. If you want it to work on any linux, you need to ensure to either only use components of libc which are provided by the older libc versions (and therefore no linking against newer versions happens) or compile against an older libc version. This is a general issue of compiling portable binaries and not at all specific to zephir.\n2.\nYou can simply compile re2c for your linux distribution, or take the binary from an linux, where it was compiled using equal or lower libc features regarding versioning.\n. Not a zephir bug.\nZephir tries to execute shell commands,\nwhich results in the output variables not being\nset due to your php security settings.\nAdjust them and it will work. (If you dont know how, google the warning about exec being disabled)\n. Cannot reproduce.\nProbably you just compiled using a PHP5 without a specified backend?\n. Since there really aren't any other people with this issue and travis passes\nwithout problems, this has to be some local issue of any sort.\n. I do not quite totally understand your question.\nGenerally most stuff works like in PHP.\n. you can just do it as zephir does it (read the source)\nor just manually include the built .so file (which will stop a compilation) (also in the source)\nSorry that I won't document it here, but I'll have to overhaul it in the future anyways\n(so that it only compiles when changes/etc.)\n. That seems like you're using/running a PHP7 somewhere?\nElse zend_hash_str_add wouldn't be used.\n. You probably just skipped the PHP-sdk step, which explains\nwhy bison is not found and also why you haven't copied re2c.exe over as described in the Windows.md...\n. No, php_sdk should not point to the bin folder. (And %PHP_SDK%\\bin\\bison.exe should exist, else your %PHP_SDK% does not point to a php sdk)\nAnd re2c.exe should be copied to parser/parser/re2c.exe\n. vcruntime_new.h might sound like you're using an old version of visual studio?\n(since c2 might be connected to that)\n. If you already tried to repair, I can't really think of anything going wrong there.\nBut since cl : Command line error D8027 : cannot execute 'c2' is no zephir issue but an issue with your dev environment, I'll have to close this.\n. That actually makes sense...\nBefore PHP 7 there were no windows builds,\nso zephir doesn't support building the parser (or any library) against that yet.\nDoes simply using the VC x64 Native Tools CMD insteadof %VS140COMNTOOLS%\\VsDevCmd work?\n. 5.6 should work yes, 7.0 x86 should work too\nand 7.0 x64 (what you have) might work using \"VC x64 Native Tools CMD \"\n. It's logical that it doesn't find it.\nSince it's additionally nested into another folder, copying x64\\Release_TS to Release_TS should workaround it.\n. anybody else having issues with x64 using windows and PHP7?\n. @Dev2-PracticeProvider \nBuilding PHP 5.X x64 under windows was never supported and is\ngenerally considered unstable.\nSince there aren't any official PHP 5.X x64 builds, we also do not support that.\nLet me know if there are any issues regarding PHP7 x64.\n. @Dev2-PracticeProvider \n\"Installation is not implemented for windows yet! Aborting!\"  just means that installation \n(adding the .dll file to php.ini) is not supported on Win and you have to do that yourself.\n\nI was not able to compile parser using php7 x64\n\nAny more details on what failed?\n\nand no dll file for that extension\n\nthere should be one in a Release or Release_TS folder, make sure to check properly.\nalso make sure to check compile-errors.log and compile.log for additional hints.\n. seems like the same issue in #1202 \nI'll look into it\n. @Dev2-PracticeProvider\nworks for me now using master.\nsome problems i ran into:\n- Make sure to update PHP_DEVPACK if you build for x64, since a DEVPACK is specific to the architecture\n- Make sure that x64 dependencies for PHP are available (since PHP will try to link against a x86 library else and that logically doesn't work due to different calling conventions it expects)\nAnother important point would be to use VC14 (visual studio 2015) since PHP7 doesn't support anything else officially.\n. @Dev2-PracticeProvider \nyou are probably missing a PHP 7 x86 in the path, which you currently need to compile&run the parser.\nOther than that when you see \"Installation is not implemented for windows yet! Aborting!\" there should be either an dll generated or an error in compile-errors.dll\n. @Dev2-PracticeProvider and compile.log ?\n. @Dev2-PracticeProvider \nAgain, this is merely a symptom of phpize being broken on windows.\nthats also why \"manual building\" (the extension within a php source tree) works.\nI'll look into fixing the obstacles of this. The windows build system of PHP generally is really a piece of scrap.\n. @Dev2-PracticeProvider \nshould be fixed now...\nmake sure to use zephir fullclean (or rather delete the ext/ folder)\n. @Dev2-PracticeProvider \nthe path isn't \"normal\", but it anyways doesn't matter since zephir doesn't support installing\nso it's always the user, who grabs the file. Feel free to fix it, if you figure out why that happens.\n. @umermalik129\nThat fix likely does only work when building using phpize but not when building\nwithin a PHP source root (for e.g. compiling the extension statically)\n. That is interesting but also not a complete fix (you're missing EXTRA_FILES/COMPILED_FILES which still use other pathing and slashes aswell as %PROJECT_LOWER% is somehow replaced with app).\n. @umermalik129\nIf you can confirm that this works properly with phpize and in-tree/static builds,\nplease file a PR, if it works +1\n. pseudo-commands, which should compile the extension into the php binary\ncopy app/ext php_src/ext \nbuildconf --force\nconfigure --enable-app=static\nnmake\n. duplicate #573\n. all caps is reserved for constants and therefore doesn't work for property names.\n. PHP7 support is not complete yet, for best PHP7 support also it would be good to use the most recent development version(0.9.1a-dev which is essentially the master branch since it's not ready yet)\n. Thanks\n. Zephir itself doesn't really optimize generated code.\nThe for loops there should be optimized by GCC though \n(except in debug builds where -O3 is not specified).\nThe code generation there could still be subject to optimizations\nin the future, if somebody gets to implement it.\n. you could just edit Compiler.php and replace -O2 with -O3 at https://github.com/phalcon/zephir/blob/b335770d414aaee3a7b8a214d2b0c9041e731399/Library/Compiler.php#L736\nand see if that helps. (Also make sure to use zephir build so that these flags are used)\nIf not, then zephir produces code GCC cannot optimize...\n. it's not really tough to figure out, it is  just easier in terms of code generation.\nThe performance problem also does not really require looking at assembly,\nas you can see additional temp variables are used which results in a higher\namount of assignment operations, which GCC for some reason doesn't optimize.\n. Didn't take a look at this because of the failing tests (annoying test breakage).\nThanks\n. thanks\n. > The documentation on http://docs.zephir-lang.com/en/latest/optimizers.html doesn't explain how to call the created zephir function.\nIt actually does An \u2018optimizer\u2019 works like an interceptor for function calls..\nIn your case it just doesn't work because you're using an echo, which creates a temporary\nZVAL, while calculate_pi expects a double variable as a return value.\nAlso:\neven the error message Calculated PI values only can be stored... can be\nfound on the documentation page.\nStill, this is an area which requires a bit more than basic knowledge of zephirs internals,\nand is subject to changes in the future.\n. Of course it does:\n\nImplementation of optimizers highly depends on the kind of code you want to generate. In our example, we\u2019re going to replace the call to this function by a call to a c-function. In Zephir, the code used to call this function is:\nlet pi = calculate_pi(1000);\n\ndouble pi = calculate_pi(1000); might work\n. @mruz this should be fixed in the latest master.\n. that sounds like tricky to debug (It might be helpful to set USE_ZEND_MM=0 (environmental variable) and some kind of debug heap to get a better stack trace to the actual cause)\n. also the implementation of adding is as alias for get is quite strange.\nis should always explicitly return a boolean.\nBefore merging this we should also come to a consensus\non what \"magic shortcuts\" we want.\nI do not want several hundreds of them, but do not see an issue with adding\nthose reducing boilerplate.\nThese uncertainties in terms of the design are the main reason\nthis is still not merged (and also the reason why this should not be merged\nuntil these are resolved).\n. @mruz depends if the generated code is different for ZE3.\nsince it currently isn't in any backend-specific class, I guess it's not.. I do not quite see a point for adding a configuration for phpize/php-config.\nThe alwaysCompileParser stuff is unnecessary: A proper parser detection\nimplementation, which currently unfortunately nobody seems to have time to implement,\nwould just make it unnecessary.\n. It doesn't make sense to configure the path to PHP in a configuration which is specific to zephir,\nas this introduces a dependency to your local system or to a specific directory layout, which isn't what project-specific configuration files are for. That is like trying to use a makefile configured on another system...\nIf you want to use a custom path to php-config/phpize that's something to be configured by modifying your path (as zephir doesn't support environmental variables for this kind of stuff).\nAlternatively you should'be fine to use zephir generate --backend=ZendEngine3\nand do the compilation step manually, which is probably the worse solution, except\nif you need more flexibility anyways.\n. > Many people are compiling their php's\nAgain this isn't a problem at all.\nIt's more than trivial to setup a short wrapper script, which makes sure everything is setup\nfor the correct PHP version and then calls zephir build (or passes your arguments to zephir).\nIt could make sense though to allow users to specify something like --php_dir=/tmp/php7 like the\nPHP build system uses, which wouldn't misuse project settings for system-specific settings.\n. sorry, seems like I missed that one because of the failing PHP7 tests during that time.\n. thanks\n. Actually every string in PHP is null terminated: https://github.com/php/php-src/blob/563659822de1e22d835df94e13cc66a34e7261b2/Zend/zend_string.h#L160\nThe scanner should be relatively safe, the parser is anything but memory safe though\n(although I'm only aware of memory leaks, I wouldn't say it's safe), which fortunately\nisn't a very big problem.\n. Does using something like LDFLAGS=<CONTENT> zephir build not work?\n. is ParseAlloc something from the library you want to use, I guess yes?\n. I'm still not quite sure if that's a good idea.\nTheoretically a backend wouldn't necessarily need to define these methods,\nsince that's specific to zend or rather C backends, which might also\ndepend further on the implementation.\nFor now it seems appropriate though, since additional backend support seems very unlikely.\n. For the current case I agree with you, the code base is anyways too close to Zend,\nso it is anyways a wasted effort to try to separate that, while leaving the other areas\nuntouched.\n. http://php.net/manual/de/function.utf8-decode.php\nmake sure you have the xml extension installed, since it may be required\nthat utf8_decode is available for your system.\n. It's a little easier than trying to decompile C, where it's impossible to get the original source code.\nIt's still possible to determine some function or method calls, string literals, call graphs etc.\nZephir doesn't really provide anything to help you in that regards.\nTLDR: Making reverse engineering or cracking impossible is always impossible with enough effort put in. Relying on security through obscurity is never a good idea. If you have to protect something, it's generally advisable to do that with licensing, wherever possible.\n. seems useful. thanks\n. actually you can write functions for quite a while: https://github.com/phalcon/zephir/pull/762\nhttps://github.com/phalcon/zephir/blob/master/test/fcall.zep#L7\n. PHP_BINARY is available since PHP5.4.\nIf you get that error you're using an older version, which is not supported by zephir.\n. then travis is probably not using PHP5.4 there.\nhttps://3v4l.org/h4RDb\nedit issue found:\nyou install another PHP via apt get, which isn't very clever in that situation:\nGet:7 http://us-central1.gce.archive.ubuntu.com/ubuntu/ precise-updates/main php5-common amd64 5.3.10-1ubuntu3.21 [1,776 kB]\n. PHP_BINARY is available in all recent PHP versions (since 2014)\n. that seems fine & like a very good idea.\nCould you please squash your commits though?\n. I'm not really having an idea what's causing that failure on your end.\nFrom the symptoms it seems like extended/fcall.c is not compiled.\n(Your file changes above are not recommended, that will simply prevent most function calls from working)\nDoes the file fcall.c in ext/kernel/ exist?\nIs there a line like ADD_SOURCES(... + \"/kernel/extended\", \"array.c fcall.c\",\") in config.w32?\n. You only need to specify a backend if it differs from the PHP version running zephir.\n. cannot reproduce that now.\nAn x64 extension for PHP7 builds flawlessy here.\nshould be fixed therefore.\n. should be fixed\n. runtime is at a very experimental stage and nowhere near usable.\n. what is the issue with building on opensuse?\n. @mruz \ncan you try replacing unsigned int with size_t in\nhttps://github.com/phalcon/zephir/blob/0e8ebec057045b9b07f27c19c947385174dea73d/parser/parser/base.c#L119\nand\nhttps://github.com/phalcon/zephir/blob/c9735cc7ceb1e80908165c3eded57206f5a7319e/parser/zephir_parser.c#L30\n?\n. I think both checks should be merged anyways and return NULL, since else it doesn't really make sense. Then the build should also be fine.\n. just\nif (program_length < 2) {\n    return NULL;\n}\nshould be enough\n. yeah, can you remove \nif (!program_length) {\n    return NULL;\n}\n(since that also handled by that case) and squash?\n. seems fine so far, could you still squash it?\njust not a very big fan of polluting the commit history with several reverts of old attempts.\n. That depends on a few things.\nAs long as PHP's dependencies and an older or more recent version version of libc\nruns on the target system, you'll be fine.\nThere isn't really anything specific to binary compatibility for zephir,\nas it literally just \"extends\" some PHP code, so the same things that apply\nto PHP apply to ZEPHIR in terms of binary portability.\n. no there isn't.\nit also was a direct design decision, since polluting the global namespace should\nbe avoided by any cause to prevent things from breaking with newer versions.\nWe allow global functions since that can be helpful for helper functions like for localization,\nbut that also shouldn't be used with any function name that might be generic enough\nto be used in later versions of PHP.\n. I'm not sure if we want to support this, I personally do not think it's necessary.\nThe segmentation fault in the parser is something we should eventually address though.\n. Thanks :)\n. @sergeyklay \nThis basically allows to load 3rd party prototypes on a project-basis.\nSo yes you could add sodium prototypes to phalcon and load them without touching zephir\nand therefore fix these warnings.\n. It is not really clear whether the behavior of get_object_vars is the issue or the for loop, could you please clarify?\n. None of the above statements are actually the real issue here.\nSurely it's true that the hashtable implementation is quite different, \nbut that has really nothing to do with the issue here.\nproperty-names cannot be integers\nThis is a known fact and also addressed by passing them to strval in offsetSet there.\nWhy did it work?\nThe only reason it works in PHP5 is because get_object_vars uses add_assoc_zval,\nwhich internally uses a symtable update.\n\nFor the people unaware of what a symtable in PHP guarantees:\nIt basically statically checks if a string is a number and if so converts it to that number, so\nthat \"5\" and 5 are resolved to the same \"storage location\" in the underlying hashtable.\n\nThis behavior actually is the same in PHP7 but doesn't work due to a different implementation of get_object_vars.\nSo what is different in PHP7?\nWe all knew that properties cannot be integers, but PHP7's get_object_vars implementation actually profits from it by not passing strings to a symtable_update but a simple hashtable string update, which is actually the appropriate thing to do. \n(if something cannot be numeric, you shouldn't waste time to check if it's numeric right?)\nHow to fix it?\na) Do not map arrays to properties in offsetSet\nb) check using is_numeric rather than typeof x == integer\nAnd also please look at the code instead of speculating, which some people\nthen might believe.\n. thanks, I guess this is now relevant since PHP7 supports x64 on Win.\n. @Jurigag @Izopi4a can you test again and confirm it's fixed?\n. @Izopi4a \nthat is another issue though, right? (it atleast seems so, if so there might be another separate report for it already?)\n. @Izopi4a \nif it's so generic as zend_xxx in the stacktrace it's literally impossible^^\nyou might be lucky if it's an obvious bug within zephir, but thats usually also \nvery unlikely it only points you into an initial direction but usually the stacktrace\nitself is useless to fix bugs of that nature...\n. this is something that should be filed as a phalcon bug report as long\nas there isn't any concrete connection to wrong behavior on zephir's part.\nduplicate of #1218\n. generally that makes sense, but not as long as it isn't clearly linked to what's causing the failure.\n. It likely is a zephir problem, but the circumstances leading to the crash aren't clear\nenough for anyone to analyze why it might happen, so the issue as it is/was\nis just incomplete and nobody would be able to figure out what to do to reproduce the crash and deduce why it's crashing.\n. just link this issue to the issue in phalcon, @andresgutierrez might get around to fixing it when he gets to work on completing PHP7 support for phalcon.\n. @Jurigag generally yes, but anyhow it makes sense to post phalcon specific issues with phalcon, because the people there generally have phalcon and zephir installed and are able to track it down.\nI for example only seldomly grab phalcon to figure out why a bug is happening,\nthat's also why reduced examples of bugs are generally best, because they do not\ninclude any dependency to another project.\n. @Jurigag \nStrictly speaking it would actually belong to phalcon\nbecause simply you require phalcon to debug and analyze it that way.\nAny useful bug report would be reproducible (or atleast descriptive enough)\nthat you'd be able to fix it without requiring any 3rd-party application.\nThe only reason when bug reports from phalcon are tolerated is\na) when there are sufficient instructions to reproduce\nb) since phalcon and zephir are pretty coupled\nSome of the current phalcon bug reports include an initial hint of what might\nbe causing the problem and some don't.\nGenerally I'm not really liking such bug reports ending up here,\nsince in the last few months they tend to get overlooked here and cannot\nbe really fixed without taking a look at immense phalcon internal cascades.\n. @Jurigag\nAs you might have noticed the crash happens in zephir_call_user_function\nthat alone is not anywhere near useful since that mehtod is literally called by any method or\nfunction call.\nThe problem with fixing it is figuring out the context in which it actually crashes, which\nrequires attaching a debugger and analyzing the bug (or steps that lead to the crash).\nIf you do that with an extensive amount of code like with a whole phalcon framework loaded,\nyou might end up chasing one ghost after the other since it's just too easy to get lost in a complex\nlogic cycle than in a simple test program.\nIn the past when I had more time for bugs like these, I usually also just produced smaller test cases and fixed them and could also directly integrate them into zephir's unit tests, which has the advantage to prevent the same bugs from occurring again.\n. @Jurigag\njust to clarify: That doesn't mean that you have to produce a smaller test case to fix it,\nonly that it's advisable and that I won't be able to afford time to look into bugs\noccurring in complex 3rd-party situations.\n. @ulfims Thanks, good summary of the issue, was able to trace this down within minutes :)\nAlso thanks to everyone else reporting this.\n. thanks\n. The issue is indeed known, but not quite that simple, since you also have to ensure that the parser is recompiled for changes. It surely is a part of a solution, but not a complete one.\nNot sure if this will get implemented soon, any contributions here are welcome.\n. @Jurigag\n\nWhy just not put zephir_parser.so into extensions folder in php ?\n\nBecause it isn't smart to assume a standard setup of PHP.\nThere might simply not be an extensions folder (or one differently named),\nwhich is annoying to handle. It also isn't nice in terms of permission,\nbecause a user might not want, and doesn't give permission like when using zephir install\nto tamper with his PHP installation(s). Therefore staying within the zephir buildtree and\nbuildroot is the cleaner option.\n. Since this seems like the cleanest way to fix it (even though there're still problems with parser-compilation), i'll merge this. We might still have to improve i later on.\n. @sergeyklay \nstacktraces are unfortunately only semi-helpful for issues of that kind.\none would need to deduce the origin of the value (zval which has a wrong refcount),\nand then figure out where the refcounting goes wrong (usually a debugger with a breakpoint\non the refcount and then stepping it through is the fastest)\n. @umermalik129 doesn't seem to work, tests (appveyor) are failing.\n. https://ci.appveyor.com/project/phalcon/zephir/build/1.0.628\n. I think you should probably take a look at the context (it just means it couldnt load the DLL - so the class does not exist - in that case because compilation fails)\nC:\\projects\\zephir\\ext\\test\\testinterface.zep.c : fatal error C1083: Cannot open compiler generated file: 'Release_TS\\projects\\zephir\\ext\\test\\testinterface.zep.obj': No such file or directory\nwhich hints that compilation fails ^^\n. @umermalik129 \nyou could try to compile the zephir test extension yourself (appveyor.yml should hint at that)\nany commit you add to the PR (push to your winfix branch) also gets automatically tested by the CI.\n. yeah sure tests work, but static builds are broken, just as before, without patching the configure script.\n. No I mean by reverting the changes you did you effectively get appveyor to work, but\nbreak in case of #1202.\nAnyways the current state in master works in all cases I'm aware of,\nand you really shouldn't waste your time in fixing something that isn't broken,\natleast if not being done systematically.\n. just noting the possible dangers of adding constants for prototypes.\nbut since we did it before, I guess it's a risk we're taking.\n. @sergeyklay \nBasically the possible risk when you add constants is something like the following scenario:\n1. <=Version A of e.g. APC: defines CONSTANT_A to 0x01\n2. >=Version B of e.g. APC: changes defintion of CONSTANT_A to 0x02\nAs a result, compiled code might break using specific versions of the extension\n(atleast if I'm right, that zephir doesn't use FETCH_CONSTANT for prototypes)\nGenerally the issue in such a case is that it's quite possible that it'll be outdated one day.\n. @sergeyklay \nIt seems like the function generally would not work with delimiters with a length>1 (since there're many char-deref compares etc. (won't work with strings of an arbitrary size imo)\n. @sergeyklay\nNormally not necessarily (even though that could make sense in rare cases of test__test2)\nbut since you do delim = \"_\\0\"; that pretty much implies that it should work with arbitrary size\ndoesn't it? (since you declare it as a string (char) and later only check one char that seems inconsistent asfar as I noticed when skimming the commit)\n. @sergeyklay likely related to @andresgutierrez currently fixing some parser stuff\n(at the moment still broken), but it's something that's long overdue :)\nI'll guess we'll have to wait a bit until that's sorted out, no hurry :)\n. @sergeyklay \nRETURN_EMPTY_STRING actually only modifies return_value \n(the function-argument passed as zval *)\nto point to an empty string.\n. Since you have \nvoid zephir_camelize(zval *return_value, const zval *str, const zval *delimiter) {\nvoid zephir_uncamelize(zval *return_value, const zval *str, const zval *delimiter) {\nwhich are identical signature wise, sure you can.\n. multiple reasons:\n- parser still seems broken (for the PHP7 build)\n- PSR-2 failures (take a look at any travis build)\n- uncamelize during the route test seems to fail (segfault)\n. I wouldn't do any changes on runtime since it's anyways massively outdated and might be broken entirley that way.\nHave you done a fullclean? (zephir_uncamelize(_1$$10, realClassName); would indicate that you haven't?)\nThe segfault likely btw is:\nif (Z_TYPE_P(delimiter) == IS_NULL) {\nshould be\nif (delimiter == NULL || Z_TYPE_P(delimiter) == IS_NULL) {\n. @sergeyklay \n1. Travis doesn't need a fullclean, since it always creates a new ext-folder (the ext folder is on gitignore)\n2. Reverting that makes sense, since it's unmaintained for 10 months.\n3. Take a look at that null-pointer dereferences mentioned above, that's likely the issue why travis fails.\n. @surjit \nyour answer isn't really specific to zephir and may not answer the question entirely.\nIf I understand correctly, which is really difficult with that lack of details,\nhe simply wants to use zephir to declare a function which\nIt should be self-explanatory on how to define a function\nglobally or within a namespace.\n. This also doesn't have anything to do with zephir.\nFrom within zephir you can easily eval code.\nStill to answer your requestion:\nIt seems you might not be familiar with C or zephir-internals\nbut passing a char * as zval * cannot work and is particular dangerous.\nfcall.h:\nzephir_eval_php(zval *str, zval *retval_ptr, char *context)\n. You might've wanted something like\n ZVAL_STRING(str, \"<?php echo 'display'; ?>\", 1)\ninsteadof the strcpy.\nThis is really something related to zend internals (and also changes depending on whether you're using PHP 5/7)\nIf you really want to write PHP-extensions in C (which I do not really understand since you're looking at zephir which is about to ease the process by introducing an intermediate language which is transpiled into C), you'll have a very hard time as a beginner, since knowledge of C is the very basic requirement but an immense knowledge of zend internals pretty much essential.\n. @andresgutierrez \nThe travis PHP7 build still seems to segfault.\n. it seems like EG(scope) isn't being set correctly.\nhere\nNote: This is only an assumption based on the situation.\n. at the moment not really.\n. @andresgutierrez \nOn the long term, we should aim for PHP_VERSION_ID or similar\n insteadof php5/php7 since you'll also need a recompilation of the parser\nif you update PHP (or it get's updated)\n. @sergeyklay \n. @sergeyklay \ntests don't seem to pass.\nI somehow do not quite like it in terms of coding style, but I think it cannot really\nbe improved in terms of easily finding a nicer way to \"write it down\".\n. @sergeyklay \nWhat do you think of turning the delimiter parameter to a character mask as in ltrim?\nThis essentially would be using a char * with the default value of -_.\nI think that'd be the cleanest solution and actually not hard to refactor.\nIf you don't want to do it that way yet, you can merge this to fix the upstream breakage\nand please file a new issue :)\n. @sergeyklay \nYeah thanks for that, I'm stil not sure if I should merge your changes with my rewrite,\nsince that code seems a lot clearer to me.\nhttps://github.com/steffengy/zephir/commit/f50e6b75c028d6de3cf5cd6289ae298e650a3e36\nWhat do you think?\n. @sergeyklay \nseems like a connection-drop to github.\nThe only thing that actually changes is that something like __test wouldn't get transformed to _test but to Test, which is actually what you'd expect.\nIs there anything in phalcon relying on the old malicious behavior in these rare cases?\n. @sergeyklay I'll take a look at how much relies on that and will discuss with @andresgutierrez soon.\n. @sergeyklay \nWhat is with #1090, does by any chance your or my solution fix that (or is it already fixed)?\nAndres seems to have tagged 0.9.2 now, so that we can decide for either solution,\nso we should choose the \"most-working\" one. \n. @sergeyklay \nthat line is surely elementary.\nhave you checked if my rewritten solution works for that?\n. duplicate of #573\n. PHP doesn\u2018t support default array values,\nwhich we do not use.\nThe custom constructor assigns a property value just as any other property assignment would.\nSo the issue here, if valid, is likely something entirely different.\n. it does support default values, if it didn't this issue couldn't be about a memory leak when using them..  +1 from me, @andresgutierrez any objection?\n. You actually do not need a full visual studio since quite a while, but only a rather small part of it available here:\nhttp://landinghub.visualstudio.com/visual-cpp-build-tools\n. runtime is not supported anymore and very outdated.\n. Duplicate #1204 .\nTLDR: That code is very experimental and wasn't touched a very long time, so there's no support for it at the time aswell as no focus on it.\n. @Jurigag \nThe issue that still exists for PHP7 only occurs when passing atleast 10 parameters?\n. Thanks, I don't quite get how it's already fixed in the PHP7 version, \nsince the PHP5 version is older and the version the PHP7 version is based on.\n. what error message does this cause when something from an external extension\ncannot be found in any path?\n. just FYI: \nThere is no reason this was not implemented (except being not important enough for the initial port).\nAnd yes it's technically possible (and not really different to how it's done for ZE2).. I think we agreed on master being NOT stable ages ago?\nThat's what tags are for... so you can tag against a specific version,\nupdate & check and go back if necessary.... In my oppinion the parser and zephir itself are still too intertwened.\nI think the user-friendliest way would be the following changes:\n1. move the building of the parser entirely to the parser repository \n(shell-scripts, batch-scripts, instructions)\n2. setup CI for the parser which builds .dlls and .so files for 5.6.X, 7.0.X, 7.1.X\n3. (auto-)publish those artifacts on travis & appveyor\n    (we actually do this for appveyor already, but only for x64 afaik)\n4. keep a commit reference (hash) in the zephir repository as a \"parser-tag\". \n    So basically when there isn't any parser loaded,\n     zephir can look up the current php version and download the resulting\n     .dll/.so file for the stored commit-hash from Travis/Appveyor.\nIf a user prefers to build the parser himself, \nhe can easily look up the instructions on the parser repository.\nIf he doesn't care about it (we should still do some signing for security purposes),\nhe won't have to waste any time to wait for a parser build.\nThis also allows a composer install to fastly get a working state and smooth user experience.\nIf anyone has any questions about this, feel free to ask me.\n. @sergeyklay \nYeah my suggestion is basically something like that automatized and also for linux.\nOn startup zephir just has to download and load the appropriate DLL/SO if there isn't\na loaded parser extension or fail and tell the user to deal with the parser installation\nsince he seems to be running some unconventional OS/PHP-version.\n. @sergeyklay \nI just noticed that the appveyor builds are already automatized.\nThen the only thing missing is doing the same for linux/travis.\nAnd ofcourse modifying zephir to download the correct ones of a given parser release \n(which thanks to deterministic github release URLs \ne.g. https://github.com/phalcon/php-zephir-parser/releases/download/v1.0.1/FILENAME\nis quite trivial). @nkt\nusing zephir_update_property_this in that context caused a weird bug with values not ending up where they belong (I do not exactly recall, but I think it just didnt work). \nUnfortunately I'm only certain that there was a pretty good reason to change this, not what this reason was...\nAnyways it worked and seemed to have no negative effects.\n. @nkt \nwithout update_zval the first of my unit tests fails:\n$class->setPropertyInt(\"property\");\nvar_dump($class);\nresults in\n[\"test\"] => bool(false)\nSo i seem to recall the issue correctly.\n. looks good so far, I think it could make sense to add Z_STRLEN_P(str)>1 here aswell.\n(to catch invalid input)\nI would recommend holding back this commit until master is fixed again,\nthen you can use that minor change to trigger the CI builds ^^\n(which very likely will pass and make this mergeable)\n. I'd just do if (Z_TYPE_P(str) != IS_STRING || Z_STRLEN_P(str) > 1) {\n. @sergeyklay \nIf you want to be exact it'd be \nif (Z_TYPE_P(str) != IS_STRING || Z_STRLEN_P(str) != 1) {\nsince only string of length 1 are supported.\n. @sergeyklay \noops, ofcourse you're right.\nI actually meant \nif (Z_TYPE_P(delimiter) != IS_STRING || Z_STRLEN_P(delimiter) != 1) { <ERROR_MESSAGE> }\n. @sergeyklay \nyeah that part is fine, I would just like some error checking before as in my last comment,\nsince when someone would be to lazy to read the source code and passes something\nunexpected the function will not do what he wants it to do, without him figuring out,\nlikely leading to unnecessary issues and wasted time on his part.\n. is there any reason you removed this line?\n. Just because you saw no impact it doesn't mean there won't be one.\nRemoving that would be ok if there was no 7.X version using it.\nEven your own code example shows why it's not a good idea:\nZEND_ASSERT(fci->symbol_table == NULL); might fail since ->symbol_table\nmight be initialized to a not-null value (due to not-zeroed memory allocation).\nSo we'll have to wrap this into ifdef's for 7.1.X. \n(since that won't land in PHP7.0.X exactly for that backwards-compatibility argument above)\n. In that case that might be true, but generally you should always prefer the safe approach insteadof the one where you might miss additional dependencies.\n. ",
    "coveralls": "\nCoverage remained the same when pulling e712f5429fb81d26954a3ad6256fb95d437cc719 on nkt:add_pdo_class_defenition into b41c274c73fdb37c2682c7a92d3d8ca18579e493 on phalcon:master.\n. \nCoverage remained the same when pulling 01ea537e652fc3c49f70403e4b4186583942263f on nkt:add_pdo_class_defenition into b41c274c73fdb37c2682c7a92d3d8ca18579e493 on phalcon:master.\n. \nChanges Unknown when pulling c837d084488778504cee92de0e62014a36542828 on steffengy:fix_initorder into * on phalcon:master*.\n. \nChanges Unknown when pulling 9d7662c4e703b26762c24d0d07055916d09f5b85 on ovr:841_final_fix into * on phalcon:master*.\n. \n\nChanges Unknown when pulling 360bb5a54e538e242311f00076da58c78fa4f2e9 on steffengy:nfr_static_properties into  on phalcon:master.\n. ",
    "kandy": "hhvm use \npublic function __construct(public $x, protected $y, private $a) {}\nas same as\nclass MyClass\n{\n    public x;\n    protected y;\n    private a;\n    public function __construct(x, y, a)\n   {\nthis->x = x\nthis->y = y\nthis->a = a\n   }\n. ",
    "serebro": "I vote for option hhvm, if this is not possible, then option 4.\n. No matter what class is used (Traversable, MyClass, etc).\nThere is problem in the priority of operations. Before INSTANCEOF, after NOT.\nThis is not essential, but in the feature may make a problem.\n. Thanks\n. +1\n. ",
    "waaghals": "fwiw, Phalcon\u00b4s for sure.\nvote this->x\n. ",
    "avevlad": ":+1: \n. @boxbillinggit my brother died the result of this error :cry: \n. ",
    "dreamsxin": "Overloading\n. Like this ok.\nzephir\nclass Test\n{\n        public static function check()\n        {\n                array arr = [];\n                var ret;\n                let arr = [0, 1, 2, 3, 4, 5];\n                let ret = arr->rev();\n                var_dump(ret);\n        }\n}\n. I test it this ok:\n``` php\nnamespace Test;\nclass Parent {\n        public function say() {\n                echo \"Hello parent\";\n        }\n}\n```\n``` php\nnamespace Test;\nclass Child extends \\Test\\Parent {\n        public function say() {\n                parent::say();\n                echo \"Hello child\";\n        }\n}\n```\nrun\n``` php\n<?php\n$parent = new Test\\Parent;\n$parent->say();\n$f = new Test\\Child();\n$f->say();\n. I update.\n. @phalcon You said it this https://github.com/phalcon/zephir/pull/323?\nI fix it https://github.com/phalcon/zephir/pull/409.\n. If  can not call `StrReplaceOptimizer` hasn't this problem. @ovr You see.\n. Can you try again, in lasted version, it's ok.\n. @ovr Thank you. \n. @ovr Back too much, I rearrange. :(\n. @ovr I learned a new operation method, thank you for your guidance. \n. @ovr I new open.\n. @ovr Not at all :)\n. Sorry.\n. Using zephir with C language way of thinking, we must determine whether divisor of 0.\n. @nkt Thanks\n. This only happen when use zephir, I'll test under.\n. output\n [Symfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException]\ncoverage_clover XML file is not readable \n```\n. Can say when an error occurs, the code for build? \n. @andresgutierrez Zephir processing power for the context  should be strengthened \n. @andresgutierrez Yes, If the constant does not exist will still throw an exception.\nphp\nif (defined($name)) {\n}\n. @niden +1\nAccording to different output types, choose different generation engine, it can meet the demand of the current and future development. \n. See https://github.com/phalcon/zephir/blob/master/templates/project.c\n. php\nself::head\n. @sergeyklay Yes sir.. At PHP-5.5.38 test not happen, checks whether it has been fix?\nzep\nstatic protected function testMethodStatic()\n{\n       var file;\n       let file = new \\SplFileObject(\"test.php\");\n       return \"hello Scall\";\n}. You can add file vendor/autoload.php in zephir dir, and autoload the class.\n. You extension should after loading  on dom loaded.\nCan write php config:\nini\nextension=dom.so\nextension=your extension.so. Whether to load test extensions in other configuration files?\nI test PHP7.1 it's ok.. You can test create /etc/php/7.0/mods-available/tests.ini and run\nshll\nln -s /etc/php/7.0/mods-available/tests.ini /etc/php/7.0/cli/conf/25-tests.ini\nLet's lasted to load.. @sergeyklay I test again the question is still, Is a mistake when I test the code.. @sergeyklay dom judge the class type\nshell\n    while (base_class->type != ZEND_INTERNAL_CLASS && base_class->parent != NULL) {\n        base_class = base_class->parent;\n    }. You can update zephir and reinstall it:\nshell\n./install -c\nand rm your project kernel\nshell\nrm ext/kernel/\n. OK, now just compiled through for PHP7.1, after add it.\n. This bug it's fix, can test again and close.. @sergeyklay It'sfix.\n. If like in C, the must be define like like this long tmp = 2147483648 or var tmp = 2147483648,  If like php must modify generate code int to long or zend_long.. At Linux,\nLP64: long long int 64bit, unsigned long int 64bit\nLLP64: long long int 64bit, long int 32bit\nMay be check PHP version use zend_long, \n```c\nd(x86_64) || defined(LP64) || defined(_LP64) || defined(_WIN64)\ndefine ZEND_ENABLE_ZVAL_LONG64 1\nendif\n/ Integer types. /\nifdef ZEND_ENABLE_ZVAL_LONG64\ntypedef int64_t zend_long;\ntypedef uint64_t zend_ulong;\ntypedef int64_t zend_off_t;\ndefine ZEND_LONG_MAX INT64_MAX\ndefine ZEND_LONG_MIN INT64_MIN\ndefine ZEND_ULONG_MAX UINT64_MAX\ndefine Z_L(i) INT64_C(i)\ndefine Z_UL(i) UINT64_C(i)\ndefine SIZEOF_ZEND_LONG 8\nelse\ntypedef int32_t zend_long;\ntypedef uint32_t zend_ulong;\ntypedef int32_t zend_off_t;\ndefine ZEND_LONG_MAX INT32_MAX\ndefine ZEND_LONG_MIN INT32_MIN\ndefine ZEND_ULONG_MAX UINT32_MAX\ndefine Z_L(i) INT32_C(i)\ndefine Z_UL(i) UINT32_C(i)\ndefine SIZEOF_ZEND_LONG 4\nendif\n``. @sergeyklay Error operationZVAL_LONG `, \nc\n        i = 0;\n        ZEPHIR_INIT_VAR(ret);\n        ZVAL_EMPTY_STRING(ret);\n        while (1) {\n                if (!(i < zephir_fast_strlen_ev(value))) {\n                        break;\n                }\n                _1$$3 = ZEPHIR_STRING_OFFSET(value, i);\n                ZEPHIR_SINIT_NVAR(_2$$3);\n                ZVAL_LONG(&_2$$3, _1$$3);\n                ZEPHIR_CALL_FUNCTION(&_3$$3, \"ord\", &_4, 61, &_2$$3);\n                zephir_check_call_status();\n                ZEPHIR_CALL_FUNCTION(&_5$$3, \"dechex\", &_6, 7, _3$$3);\n                zephir_check_call_status();\n                zephir_concat_self(&ret, _5$$3 TSRMLS_CC);\n                i++;\n        }\n        RETURN_CTOR(ret);\nThe lemon rule:\nlemon\nxx_array_offset(R) ::= SBRACKET_OPEN xx_index_expr(I) SBRACKET_CLOSE . {\n    R = I;\n}\n@zhiephie You can test this:\nzep\npublic function strToHex(string value) -> string\n{\n     int i = 0;\n     string ret = \"\";\n     string c = \"\";\n     while (i < value->length()) {\n           c = value[i];\n       let ret .= dechex(ord(c));\n       let i++;\n    }\n   return ret;\n}. @zhiephie My pleasure, Keep open, that's bug.. Can follow this:\n```zep\n    public static function func() {\n    }\npublic static function func1() {\n    Sdk::func();\n}\n\n```. @sergeyklay https://github.com/php/php-src/blob/master/NEWS \n\nCore:\n  . Removed IS_TYPE_IMMUTABLE (it's the same as COPYABLE & !REFCOUNTED). (Dmitry). @sergeyklay No script, Only install zephir test extension, and run php -m.\nI guess only happen PHP >= 7.1. Can clean multi commit merge to one.. How to reproduce this error?\nI see the Travis CI build succes.. Reference method zend_call_function, \nWhen change the following code  test in php7.1.1 it's ok:\n```diff\n--- a/kernels/ZendEngine3/extended/fcall.c\n+++ b/kernels/ZendEngine3/extended/fcall.c\n@@ -1177,28 +1177,16 @@ int zephir_call_function_opt(zend_fcall_info fci, zend_fcall_info_cache fci_ca\n                ZVAL_COPY_VALUE(param, arg);\n        }\n\n-#if PHP_VERSION_ID >= 70100\n-       EG(fake_scope) = calling_scope;\n-#else\n-       EG(scope) = calling_scope;\n-#endif\n+       if (UNEXPECTED(func->op_array.fn_flags & ZEND_ACC_CLOSURE)) {\n+               ZEND_ASSERT(GC_TYPE((zend_object)func->op_array.prototype) == IS_OBJECT);\n+               GC_REFCOUNT((zend_object)func->op_array.prototype)++;\n+               ZEND_ADD_CALL_FLAG(call, ZEND_CALL_CLOSURE);\n+       }\n    if (func->type == ZEND_USER_FUNCTION) {\n            int call_via_handler = (func->common.fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE) != 0;\n\n#if PHP_VERSION_ID >= 70100\n-               EG(fake_scope) = func->common.scope;\n-               call->symbol_table = NULL;\n-#else\n-               EG(scope) = func->common.scope;\n-               call->symbol_table = fci->symbol_table;\n-#endif\n-               if (UNEXPECTED(func->op_array.fn_flags & ZEND_ACC_CLOSURE)) {\n-                       ZEND_ASSERT(GC_TYPE((zend_object)func->op_array.prototype) == IS_OBJECT);\n-                       GC_REFCOUNT((zend_object)func->op_array.prototype)++;\n-                       ZEND_ADD_CALL_FLAG(call, ZEND_CALL_CLOSURE);\n-               }\n-#if PHP_VERSION_ID >= 70100\n                zend_init_execute_data(call, &func->op_array, fci->retval);\n                zend_execute_ex(call);\n #else\n@@ -1216,13 +1204,6 @@ int zephir_call_function_opt(zend_fcall_info fci, zend_fcall_info_cache fci_ca\n        } else if (func->type == ZEND_INTERNAL_FUNCTION) {\n                int call_via_handler = (func->common.fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE) != 0;\n                ZVAL_NULL(fci->retval);\n-               if (func->common.scope) {\n-#if PHP_VERSION_ID >= 70100\n-                       EG(fake_scope) = func->common.scope;\n-#else\n-                       EG(scope) = func->common.scope;\n-#endif\n-               }\n                call->prev_execute_data = EG(current_execute_data);\n                call->return_value = NULL; / this is not a constructor call /\n                EG(current_execute_data) = call;\n@@ -1276,11 +1257,6 @@ int zephir_call_function_opt(zend_fcall_info fci, zend_fcall_info_cache fci_ca\n                }\n        }\n-#if PHP_VERSION_ID >= 70100\n-       EG(fake_scope) = orig_scope;\n-#else\n-       EG(scope) = orig_scope;\n-#endif\n        zend_vm_stack_free_call_frame(call);\n    if (EG(current_execute_data) == &dummy_execute_data) {\n\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 1357752..9cc44d8 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -417,14 +417,6 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n                }\n        }\n\nif (obj_ce) {\n-#if PHP_VERSION_ID >= 70100\nEG(fake_scope) = obj_ce;\n-#else\nEG(scope) = obj_ce;\n-#endif\n\n}\nif (!cache_entry || !*cache_entry) {\n        if (zephir_globals_ptr->cache_enabled) {\n\n\n\n@@ -493,12 +485,6 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n        //status = ZEPHIR_ZEND_CALL_FUNCTION_WRAPPER(&fci, &fcic, info);\n        status = zephir_call_function_opt(&fci, &fcic, info, params);\n-#if PHP_VERSION_ID >= 70100\n-               EG(fake_scope) = old_scope;\n-#else\n-               EG(scope) = old_scope;\n-#endif\n-\n. Use Cache, the second will happen can,t get called classshell\nPHP_METHOD(Test_Oo, testInstance9) {\n...\n        ZEPHIR_CALL_CE_STATIC(&o, test_oo_oodynamica_ce, \"getnew\", &_0, 49);\n...\n}\nPHP_METHOD(Test_Oo, testInstance10) {\n...\n        ZEPHIR_CALL_CE_STATIC(&o, test_oo_oodynamicb_ce, \"getnew\", &_0, 49);\n...\n}\n```\nChange:\ndiff\ndiff --git a/kernels/ZendEngine3/fcall.c b/kernels/ZendEngine3/fcall.c\nindex 7a7e944..3986050 100644\n--- a/kernels/ZendEngine3/fcall.c\n+++ b/kernels/ZendEngine3/fcall.c\n@@ -474,6 +474,7 @@ int zephir_call_user_function(zval *object_pp, zend_class_entry *obj_ce, zephir_\n #else\n                fcic.function_handler = *cache_entry;\n #endif\n+               fcic.called_scope = obj_ce ? obj_ce : Z_OBJCE(EG(current_execute_data)->This);\n        }\nBut php-7.0 test failed.. My test branch https://github.com/dreamsxin/phalcon7-zephir/blob/master/kernels/ZendEngine3/\n. I test in PHP 7.1.1, And not full test,  May be check       EG(current_execute_data):\nc\nEG(current_execute_data) ? Z_OBJ(EG(current_execute_data)->This) : NULL. I suggest trying use zend_call_function replace zephir_call_user_function reduce complexity.. But there is a big difference bewteen PHP-7.0 and PHP-7.1. Can only be re combed to find out the problem.. What is the progress of the work?. @sergeyklay When the Phalcon tests it's passed,  It can be merge.. I will try use PHP Built-in methods zend_call_function test again.. @Jurigag The least, Narrow search range.. @sjinks Help, check the bug.. @sergeyklay I use zend_call_function replace test it's work fine.\n```c\nint zephir_call_class_method_aparams(zval return_value_ptr, zend_class_entry ce, zephir_call_type type, zval object,\n    const char method_name, uint method_len,\n    zephir_fcall_cache_entry cache_entry, int cache_slot,\n    uint param_count, zval params)\n{\n    char possible_method;\n    zval rv, rvp = return_value_ptr ? return_value_ptr : &rv, func_name = {}, arguments;\n    zval fn = NULL;\n    int i, status;\n    zend_fcall_info fci;\n    zend_fcall_info_cache fcc;\nZVAL_UNDEF(&rv);\n\narray_init_size(&func_name, 2);\nswitch (type) {\n    case zephir_fcall_ce:\n        assert(ce != NULL);\n        add_next_index_string(&func_name, ce->name->val);\n        break;\n    case zephir_fcall_parent:\n        assert(ce != NULL);\n        add_next_index_string(&func_name, \"parent\");\n        break;\n    case zephir_fcall_self:\n        add_next_index_string(&func_name, \"self\");\n        break;\n    case zephir_fcall_static:\n        add_next_index_string(&func_name, \"static\");\n        break;\n    case zephir_fcall_method:\n        Z_TRY_ADDREF_P(object);\n        add_next_index_zval(&func_name, object);\n        break;\n    default:\n        phalcon_throw_exception_format(spl_ce_RuntimeException, \"Error call type %d for cmethod %s\", type, method_name);\n        return FAILURE;\n}\nadd_next_index_stringl(&func_name, method_name, method_len);\n\narguments = param_count ? safe_emalloc(sizeof(zval), param_count, 0) : NULL;\n\ni = 0;\nwhile(i < param_count) {\n    ZVAL_COPY_VALUE(&arguments[i], params[i]);\n    i++;\n}\n\nfci.size = sizeof(fci);\nfci.object = object ? Z_OBJ_P(object) : NULL;\nZVAL_COPY_VALUE(&fci.function_name, &func_name);\nfci.retval = rvp;\nfci.param_count = param_count;\nfci.params = arguments;\nfci.no_separation = 1;\n\nstatus = zend_call_function(&fci, NULL);\n\n``. Set thescope, likeop_array->scope = Z_OBJCE_P(object);`. Good job. It's more controllable for me.. It is better to directly call the kernel method or the \u00c7 function to reduce the use of zend_call_*. I can't  reproduce, \n\nUbuntu 16.04\nZephir 0.11.10\nPHP 7.2.15 (cli) (built: Feb 19 2019 16:14:30) ( ZTS DEBUG )\nPhalcon v4.0.0-alpha.2 \n\nshell\nab -c 20 -n 200 http://localhost:8181/\nAnother test code:\n```zephir\nnamespace Mytest;\nclass Di\n{\n    private static _default;\npublic static function getInstance()\n{\n    var di;\n    let di = self::_default;\n\n    if !di {\n        let di = new self();\n        let self::_default = di;\n    }\n\n    return self::_default;\n}\n\n}\nclass App\n{\n    public function __construct()\n    {\n        var di;\n        let di = Di::getInstance();\n    }\n}\n```\nPhalcon v3.4.0\noutput\nPHP Fatal error:  Declaration of Phalcon\\Forms\\Element::getAttribute(string $attribute, $defaultValue = NULL) must be compatible with Phalcon\\Forms\\ElementInterface::getAttribute($attribute, $defaultValue = NULL) in Unknown on line 0\n.... @sergeyklay I don't have an apache environment.. @sergeyklay I'm not sure that under Linux, libapache-mod-php uses thread safe, and my computer is too old. It would be great if you can test and get core dump.. @hakimio Can't reproduce, Previously tested in CLI\nUbuntu 16.04\nZephir 0.11.10\nPHP 7.2.15 (cli) (built: Feb 19 2019 16:14:30) ( ZTS DEBUG )\nPhalcon v4.0.0-alpha.2\n. I will feedback. @CameronHall  Unfortunately, my computer is not Windows.\nAnd the use of virtual machines (xp systems), as shown below\n\nDebugDiag Analysis cannot be performed against a 64-bit dump file from a 32-bit analysis machine. Please run the analysis on a 64-bit machine to get analysis details. \n\nI want to admire that the document is too big.. I can't see the problem from this information. If I can reproduce it from linux, I can write different code to test it.. PHP 7.2\nZephir 0.11.10 can't reproduce, it's initialize:\nc\nZVAL_UNDEF(&myValue);\n@chilimatic You can test again use Zephir 0.11.10. @dschissler You are right.\nIt's just a matter of parsers.\noutput\nWarning: Class \"xxx\" does not exist at compile time in /home/myleft/work/mytest/mytest/app.zep on line 25 [nonexistent-class]. @sergeyklay How did you solve it?\nOption one, change zephir_array_update_* check it is null, and throw a warning.\nOption two, use copy:\n```c\nzval _SESSION;\nzephir_get_global(&_SESSION, SL(\"_SESSION\"));\nint zephir_get_global(zval arr, const char global, unsigned int global_length)\n{\n    zval gv;\n    zend_bool jit_initialization = PG(auto_globals_jit);\n    zend_string *str = zend_string_init(global, global_length, 0);\nif (jit_initialization) {\n    zend_is_auto_global(str);\n}\n\nif (&EG(symbol_table)) {\n    if ((gv = zend_hash_find_ind(&EG(symbol_table), str)) != NULL) {\n        ZVAL_DEREF(gv);\n        if (Z_TYPE_P(gv) == IS_ARRAY) {\n            ZVAL_COPY(*arr, gv);\n            zend_string_release(str);\n            return SUCCESS;\n        }\n    }\n}\n\narray_init(*arr);\n\nzend_string_release(str);\nreturn FAILURE;\n\n}\n```. Fixed in the development branch. Feel free to open a new issue if the problem appears again. And thank you for contributing.. Please give some Exmaples.. Mybe same \nhttps://github.com/phalcon/zephir/issues/1775\nhttps://github.com/phalcon/cphalcon/issues/13703. The error may be caused  by conflicts of enabling short_open_tag = on.\nxml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>. Download url https://github.com/phalcon/php-zephir-parser/releases/tag/v1.2.0\nSupported PHP versions: 7.0, 7.1, 7.2, 7.3 and 7.4 (nightly).\n. Install and compile must be manual compilation.. @danhunsaker In the future, if we allow kernel variables to be used directly and call kernel functions in Zephir, it would not be a good idea to modify variable names.. It is possible to prefix all variables instead of modifying return_value individually. @sergeyklay . @sergeyklay @AlexNDRmac \nWe can discuss the rules for adding prefixes, about containing or without points.\n1. xx.xx\nphp\n$namespace.'.'.$name;\n2. xx\nphp\n$namespace.'.'.$name;. I close that.. This config \njson\n    \"globals\": {\n        \"test.my_setting_1\": {\n            \"type\": \"bool\",\n            \"default\": false\n        },\n    },\nchange to:\njson\n    \"globals\": {\n        \"my_setting_1\": {\n            \"type\": \"bool\",\n            \"default\": false\n        },\n    },\nwill generate test.my_setting_1.. Pass context to Closure's compiler. @sergeyklay . @sergeyklay It's Ok. @sergeyklay It's ok.. @sergeyklay Check. I will try to implement.. PHP 5.x will be supported today.. @sergeyklay All right. @sergeyklay Check. @sergeyklay Change a little bit of code, be smarter.\n```zephir\nclass App\n{\n    public function test()\n    {\n        var k, v;\n        var arr;\n    let arr = [];\n    for k, v in arr {\n        echo k, v, \"\\n\";\n    }\n}\n\n}\norzephir\nclass App\n{\n    public function test()\n    {\n        var k, v;\n        var arr;\n    let arr = new Arr();\n    for k, v in arr {\n        echo k, v, \"\\n\";\n    }\n}\n\n}\n. @sergeyklay It's difficult to make accurate judgments through possibleValue.. Like this?zephir\nif fetch blah, options[\"blah\"] {\n    if typeof blah == 'string' {\n       // ...\n    }\n}\n```. @sergeyklay Please help check.. I will test. @sergeyklay Please help check . @dschissler \nCan see \nhttps://docs.zephir-lang.com/0.11/en/welcome\nand \nhttps://docs.zephir-lang.com/0.11/en/installation\nInstall\n```shell\ngit clone https://github.com/phalcon/php-zephir-parser.git\ncd php-zephir-parser\nphpize\n./configure\nmake\nsudo make install\ngit clone https://github.com/phalcon/zephir\ncd zephir\ncomposer install\n. You can see http://php.net/manual/en/internals2.ze1.zendapi.php\nAnd Google search.. Oh, I will correct it, ths.\n. Fllow `zend_get_called_scope`,  If there is no `object` then use `ce` set to `This`c\nZEND_API zend_class_entry zend_get_called_scope(zend_execute_data ex) / {{{ /\n{\n    while (ex) {\n        if (Z_TYPE(ex->This) == IS_OBJECT) {\n            return Z_OBJCE(ex->This);\n        } else if (Z_CE(ex->This)) {\n            return Z_CE(ex->This);\n        } else if (ex->func) {\n            if (ex->func->type != ZEND_INTERNAL_FUNCTION || ex->func->common.scope) {\n                return NULL;\n            }\n        }\n        ex = ex->prev_execute_data;\n    }\n    return NULL;\n}\n``. c\nstatic zend_always_inline void zend_vm_init_call_frame(zend_execute_data *call, uint32_t call_info, zend_function *func, uint32_t num_args, zend_class_entry *called_scope, zend_object *object)\n{\n    call->func = func;\n    if (object) {\n        Z_OBJ(call->This) = object;\n        ZEND_SET_CALL_INFO(call, 1, call_info);\n    } else {\n        Z_CE(call->This) = called_scope;\n        ZEND_SET_CALL_INFO(call, 0, call_info);\n    }\n    ZEND_CALL_NUM_ARGS(call) = num_args;\n}. The reason for the #1604 duplication is that namespace and prefix use the same word. The correct treatment is to add namespace.\nContain dot  will add namespace in Code\\Builder\\Struct::getInitEntry.\n. I don't understand what you mean, Ccustom prefix name,  should use ini-entry, Otherwise, namespace is prefixed.. ",
    "pentagonal": "PHP-7.0\nTest using Pimple\\Container implements ArrayAccess\nExtended by Slim Container class. (Affected By Magic Method)\n\n\nLooks like the the code has jumping...\nThe magic method called first than constructor.\nThis is affected when the parent constructor contains private properties...\n. ",
    "waplet": "Tested a bit more;;\nIt happens when array is being initialized in definition.\n``` php\n    public function failing() {\n        var arr = [\"keyfails\" : \"val\"];\n        var val = \"\";\n        let val = isset arr[\"keyfails\"] ? arr[\"keyfails\"] : \"\"; // compiler fails \n    }\npublic function working() {\n    var arr;\n    let arr = [\"keyworks\" : \"val\"];\n    var val = \"\";\n    let val = isset arr[\"keyworks\"] ? arr[\"keyworks\"] : \"\"; // compiler works; \n}\n\n```\n. ",
    "redfire1539": "Working with latest version. Thanks!\n. ",
    "wardlem": "Ok, I figured out how to resolve the issue.\nI was comparing a ZVal double with a constant double.  A little confusing, but I understand.  I still feel as though my original code should have been able to work though.\n. ",
    "3axap4eHko": "Now it doesn't work correctly. The expression\nvar matches;\nvar_dump(preg_match(\"#asd#\", \"asd\", matches));\nthrow  message \"Variable 'matches' cannot be read because it's not initialized\". According to manual, matches can be not initialized. And sometime ago it worked correctly.\n. class A {\n    const QUOTE_DOUBLE = \"\\\"\";\n}\nthis is doesn't compiling with error\nerror: missing terminating \" character\n. Yes I can, but it will be not soon(((\n. I will not soon near my laptop\n2014-05-06 15:02 GMT+03:00 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041f\u0430\u0446\u0443\u0440\u0430 notifications@github.com:\n\nWhy? I think it's easy and takes 5-10 minutes.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/phalcon/zephir/pull/376#issuecomment-42294008\n.\n\n\nBest Regards,\nIvan Zakharchenko\nhttp://www.zend.com/en/yellow-pages#show-ClientCandidateID=ZEND022406\nHabr: 3axap4eHko http://habrahabr.ru/users/3axap4ehko/\nlinked in: 3axap4eHko http://www.linkedin.com/in/3axap4ehko\nGitHub CV__:* 3axap4eHko http://3axap4ehko.github.com/CV/*\nskype: battlebit\ne-mail: 3axap4eHko@gmail.com 3axap4eHko@gmail.com\n. \u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u0414\u043c\u0438\u0442\u0440\u0438\u0439)\n. I test it on Ubuntu x64 14.04 zephir 0.5.6a\n. ",
    "Barbery": "and i have a another question....\nwhy append a element like this let point_list[] = point is ok, but like this let point_list[index][] = point will throw exception:\"Syntax error\"... why? should i change it to array_push(point_list[index], point) ?\n. @nkt \n```\nprivate function _kmeans(array points, int k=3, int min_diff=1)\n{\n    int point_len, i, smallest_distance, distance, diff;\n    let point_len = count(points);\n    var clusters = [];\n    var index;\nlet i = k;\nwhile i {\n    let index = mt_rand(1, point_len);\n    let clusters[] = points[index];\n    let i -= 1;\n}\n\n// more code....\n\n}\n```\nZephir\\CompilerException: Resolved expression is not valid in /vagrant/Dropbox/myzephir/myzephir/kmeans.zep on line 71\nlet clusters[] = points[index];\n------------------------------------------^\n. my code like below..\n``` php\nnamespace MyZephir;\nclass MyClass\n{\npublic static function say()\n{\n    echo \"hello world!\";\n}\n\n}\n```\n. the folder is generated by zephir init command... \nmyzephir\n|-ext\n|-myzephir\n   |-myclass.zep\n|-config.json\n. yes, already have...\nmy config.json:\n{\n    \"stubs\": {\n        \"path\": \"ide\\/%version%\\/%namespace%\\/\",\n        \"stubs-run-after-generate\": false\n    },\n    \"warnings\": {\n        \"unused-variable\": true,\n        \"unused-variable-external\": false,\n        \"possible-wrong-parameter-undefined\": false,\n        \"nonexistent-function\": true,\n        \"nonexistent-class\": true,\n        \"non-valid-isset\": true,\n        \"non-array-update\": true,\n        \"non-valid-objectupdate\": true,\n        \"non-valid-fetch\": true,\n        \"invalid-array-index\": true,\n        \"non-array-append\": true,\n        \"invalid-return-type\": true,\n        \"unreachable-code\": true,\n        \"nonexistent-constant\": true,\n        \"not-supported-magic-constant\": true,\n        \"non-valid-decrement\": true,\n        \"non-valid-increment\": true,\n        \"non-valid-clone\": true,\n        \"non-valid-new\": true,\n        \"non-array-access\": true,\n        \"invalid-reference\": true,\n        \"invalid-typeof-comparison\": true,\n        \"conditional-initialization\": true\n    },\n    \"optimizations\": {\n        \"static-type-inference\": true,\n        \"static-type-inference-second-pass\": true,\n        \"local-context-pass\": true,\n        \"constant-folding\": true,\n        \"static-constant-class-folding\": true,\n        \"call-gatherer-pass\": true,\n        \"check-invalid-reads\": false\n    },\n    \"namespace\": \"myzephir\",\n    \"name\": \"myzephir\",\n    \"description\": \"\",\n    \"author\": \"\",\n    \"version\": \"0.0.1\",\n    \"verbose\": false\n}\n. ok... please wait a minutes\n. here: https://github.com/Barbery/myzephir.git \n. my os :Linux precise64 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\nzephir is 0.4.2a\nphp version is PHP 5.5.9-1+sury.org~precise+1 (cli) (built: Feb 13 2014 15:53:53) \ni don't know how to get the compiler version...\n. I remember,  before I update to new zephir version, build is fine, but after I update to v0.4.2a, this error occurred...  I am not sure whether is that problem...\n. I clone the zephir and update to latest commit in master branch... and run sudo ./install -c, output message: \nParser statistics: 119 terminals, 96 nonterminals, 398 rules\n                   801 states, 0 parser table entries, 0 conflicts\nand then I run sudo zephir build myclass.zep in myzephir folder, still output the same error message...\n. So that, thanks very much... the problem is solved\n. @ovr , when I run MyZephir\\MyClass::say(); in php script, will output error:\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib/php5/20121212/myzephir.so' - /usr/lib/php5/20121212/myzephir.so: undefined symbol: test_globals in Unknown on line 0\nPHP Fatal error:  Class 'MyZephir\\MyClass' not found in /vagrant/Dropbox/myzephir/test.php on line 4\nmy php script:\n``` php\n<?php\nMyZephir\\MyClass::say();\n```\nand I already have add extension=myzephir.so to the php.ini\n. ",
    "n0nag0n": "Well I didn't have file installed so I installed that, and that one line went away, so that's probably good.\nThe error I get back now is:\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib64/php/modules/classes.so' - /usr/lib64/php/modules/classes.so: cannot open shared object file: No such file or directory in Unknown on line 0\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\n/root/zephir_proj/classes/ext/classes.c: In function \u2018zm_startup_classes\u2019:\n/root/zephir_proj/classes/ext/classes.c:50: warning: passing argument 1 of \u2018free\u2019 discards qualifiers from pointer target type\n/usr/include/stdlib.h:488: note: expected \u2018void *\u2019 but argument is of type \u2018const char *\u2019\n/root/zephir_proj/classes/ext/classes/database.c: In function \u2018zim_Classes_Database_selectDb\u2019:\n/root/zephir_proj/classes/ext/classes/database.c:331: error: incompatible type for argument 2 of \u2018zephir_concat_vs\u2019\n./kernel/concat.h:35: note: expected \u2018struct zval *\u2019 but argument is of type \u2018zval\u2019\n/root/zephir_proj/classes/ext/classes/database.c:340: error: incompatible type for argument 2 of \u2018zephir_concat_vs\u2019\n./kernel/concat.h:35: note: expected \u2018struct zval *\u2019 but argument is of type \u2018zval\u2019\n/root/zephir_proj/classes/ext/classes/database.c:363: error: incompatible type for argument 2 of \u2018zephir_concat_vv\u2019\n./kernel/concat.h:37: note: expected \u2018struct zval *\u2019 but argument is of type \u2018zval\u2019\nmake: *** [classes/database.lo] Error 1\nInstalling...\nExtension installed!\nAdd extension=classes.so to your php.ini\nDon't forget to restart your web server\nI've ran zephir fullclean and I've also deleted any generated files for my classes (config and database) that were not cleaned out with fullclean. It seems like the code is stopping around one of my functions so I'll include that function below (selectDb) and the function above it just in case it tells you anything.\n```\n public function getConnection(string sql = \"\") -> boolean {\n                var explode, statement, is_true;\n                if(sql == \"\") {\n                        let sql = this->sql;\n                }\n                let is_true = true;\n                let explode = explode(\" \", trim(sql), 2);\n                let statement = strtolower(explode[0]);\n                switch(statement) {\n                        case \"update\":\n                        case \"insert\":\n                        case \"delete\":\n                        case \"truncate\":\n                                let this->connection_type = \"master\";\n                                break;\n                    case \"drop\":\n                            this->addError(\"Don\\\"t you dare drop anything!\");\n                            let is_true = false;\n                            break;\n\n                    default:\n                            let this->connection_type = \"slave\";\n            }\n\n            return is_true;\n\n    }\n\n```\n```\npublic function selectDb(string database = \"main\") -> string {\n                var prefix;\n                switch(database) {\n                        case \"main\":\n                        case \"\":\n                                let this->database = \"main\";\n                                break;\n                        case \"report\":\n                                let this->database = \"report\";\n                                break;\n                    default:\n                            let prefix = strtolower(substr(database, 0, 3));\n                            let this->database = prefix.database;\n            }\n\n            return this->database;\n    }\n\n```\nOne concern that I have is that returned variables are dynamic in the cases where I am getting data from my database and that may be causing part of the problem. If I have a method called\nfetchData() -> array|string {\n    // code\n    data = mysqli_fetch_assoc(query);\n    return data;\n}\nWhen I run zephir build it says that Zephir can't determine the return value of the function, so it leaves me with the only option to just remove the -> array|string portion.....maybe that's where some of my problems could be coming from? Just a thought @ovr @nkt \n. Oh and the reason why I get the Unable to load dynamic library '/usr/lib64/php/modules/classes.so' error is because I tried deleting the .so file in hopes that that would help solve the problem.\n. I re-fetched from the repo and re-installed it. Whatever you did (if anything) worked like a charm. :+1: \n. @nkt   I finally felt brave enough to re-visit Zephir and it's changed a LOT in the past couple of months! Anyway, your suggestion worked great!\nAlso is it possible in zephir to create standalone functions (no classes, no namespaces, just regular functions such as the function apc_store() that comes when you install APC)?\n. ",
    "jymboche": "@darkgaro \nHow is compiling by class name different exactly? I was adding, for example, \"phalcon_forms_form_ce\" but I see your patches output \"phalcon\\forms\\form\". Have you thought about submitting a pull request? It would be cool if this was officially supported. I think most people who use zephir would like to extend/implement a phalcon class at some point.\n. ",
    "ogarbe": "linked to #493 \n. @darkgaro any update on this ?\n. no I haven't, but if you have one method to do it, you should PR your changes so that they'll be included in core Zephir.\n. i think @darkgaro is right, @andresgutierrez method is very good when extending other zephir ext, but we should be able to extend also non zephir ext. Having both ways would be perfect.\n. @ovr have you found how to work on this ?\n. Seems the same than #493 but i can't read russian :)\n. Thanks for these infos. I'll look at it.\nThe main idea was to create a full support.\n. don't understand @nkt comment.\nFor me it's only to add a new word in the language : static which works as the static word in php ;)\n. here is a sample of static call done in phalcon , so it's quite easy to do ;)\nhttps://github.com/vpg/cphalcon/commit/e3429630f2ebe0864cc677efab0b7a0794bbea56#diff-7ea3be3b036ed49c5eec8c4a33ae9de7R725\n. @nkt : i've worked on the code and it seems quite easy to write, but i've got a problem with the parser, i don't know how to make it accept \"static\" as a new keyword, as \"self\".\nany idea ?\nhere is the first commit on method, we need properties and instantiation : https://github.com/vpg/zephir/commit/48026fdf9534518e79efb422ca74dc77a24bd94f\n. that's what i don't get\nhere is the error i get\nshell\nbin/zephir-parser test/scallparent.zep\njson\n{ \"type\": \"error\", \"message\": \"Syntax error\", \"file\": \"test\\/scallparent.zep\", \"line\": 23, \"char\": 29 }\n``` zephir\n/*\n * Static Function calls\n /\nnamespace Test;\nclass ScallParent\n{\nstatic public function testMethod1()\n{\n    return \"hello parent public\";\n}\n\nstatic protected function testMethod2()\n{\n    return \"hello parent protected\";\n}\n\n    static public function testMethod3()\n    {\n            return static::testMethodStatic();\n    }\n\n    static protected function testMethodStatic()\n    {\n            return \"hello ScallParent\";\n    }\n\n}\n```\n. Close with https://github.com/phalcon/zephir/pull/565 merge.\nThanks !\n. For my 2 cents : use 4 spaces for PHP is the PSR2 standard which tends to be THE php standard. \n. don't understand why Travis CI failed as all tests are ok\n. ok found !\nthx\nThe command \"vendor/bin/phpcs --standard=PSR2 --report=emacs --extensions=php --warning-severity=0 Library/ unit-tests/Extension/ unit-tests/Zephir/\" exited with 1.\n. @phalcon : \"The PR does not fix the problem but unit test it\" , i haven't found the method to fix.\n. because i wanted to help and add the unit test\n. @ovr Main difference is that Zephir use typed variables, and the string \"0\" is not an empty string, so in my opinion zephir shouldn't consider the string \"0\" to be empty.\n. In my opinion you shouldn't add the command line argument parser (copyed from https://github.com/pwfisher/CommandLine.php) but use composer to add it to the project.\n. i don't understand why but ... so be it...\nBitwise if i look in zephir there is some composer requirements of external dependencies : https://github.com/phalcon/zephir/blob/master/composer.json#L20-L32\n. i don't get why using composer for external dependencies prevent to be a standalone (creating a phar with all libraries + vendors would work completely), but if it's the desired design, it's ok :-)\n. @andresgutierrez what do you think of this ?\n. the default value is used from config.json, and can be override in php.ini\n. done\n. pretty bad but didn't manage not to overwrite value otherwise\n. ",
    "OpenEX": "Based on what has been already said here, i've been thinking about making my Zephir AaaaaaController class visible from PHP with Phalcon on board. All compiles great (installed/ini/extension order), but the class is not visible when i write http://domainwiththeapp/aaaaaa  . What i wouldn't like to do is to create a class in PHP extending my AaaaaaController class - this i did with success. . I guess the problem is with namespace. Is there a way to make this class visible for this address and for phalcon. Any suggestions would be appreciated. I have just noticed this is most often wise in most cases to have such a class not demanding to be extended from PHP, because it would be visible for more applications if they are installed. But there are some cases it would be useful.\n. ",
    "freshman20": "zephir build --export-classes\ndon't work to compile phalcon anymore (testet with branches 2.0.0, 2.0.x and 2.1.x and Zephir 0.7.1b) . Compilation stops with:\nZephir\\CompilerException: updateArray: variable\nIs there a equivalent for  --export-classes  in:\n\ncd cphalcon/build\n\n\n./install\n\n. Thanks. Your right, exception has gone for another one\nPHP Catchable fatal error:  Object of class Zephir\\CompiledExpression could not be converted to string in /opt/zephir/Library/SymbolTable.php on line 207\ncaused by Phalcon\\Di\\Service  in line 238\nlet arguments = [position: parameter];\nIf i change this the compiler throws\nCompiling...\nInstalling...\nZephir\\CompilerException: Internal extension compilation failed. Check compile-errors.log for more information\ncompile-errors.log:\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlColumn':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:402:61: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:410:60: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlTable':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:624:53: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:626:52: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlExpressionList':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:1198:58: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlExpressionOrderBy':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:1710:53: error: expected expression before ',' token\nmake: * [phalcon/db/dialect.lo] Error 1\nmake: * Waiting for unfinished jobs....\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlColumn':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:402:61: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:410:60: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlTable':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:624:53: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:626:52: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlExpressionList':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:1198:58: error: expected expression before ',' token\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c: In function 'zim_Phalcon_Db_Dialect_getSqlExpressionOrderBy':\n/opt/cphalcon/ext/phalcon/db/dialect.zep.c:1710:53: error: expected expression before ',' token\nmake: *** [phalcon/db/dialect.lo] Error 1\nTestet with Zephir version 0.7.1b and Phalcon 2.1.x\n. Compiling own extensions with Zephir (>= 7) which extends other libraries like Phalcon (only from source) fails.\nFirst example:\nPhalcon 2.1.0b\nZephir Version 0.9.1a-dev\nUtils 0.0.1\nZephir Version 0.9.1a-dev\nutils config.json\n```\n...\n\"external-dependencies\": {\n    \"phalcon\": \"/opt/cphalcon\"\n}\n\n...\n```\nutils/utils/greeting.zep\n```\nclass Greeting extends \\Phalcon\\Mvc\\User\\Component {\nprotected function getFoo() {\n    return this->getDi()->getShared(\"foo\");\n}\n\n}\n```\nError\n```\n/usr/bin/php5 -dextension=\"/opt/zephir/Library/../parser/zephir_parser.so\" /opt/zephir/compiler.php build --parser-compiledZephir\\CompilerException: Class 'Utils\\Greeting' does not implement method: 'getDi' in /opt/utils/utils/Greeting.zep on line 11\n  return this->getDi()->getShared(\"foo\");\n\n```\nSecond example:\nPhalcon 2.1.0b\nZephir Version 0.9.1a-dev\nUtils 0.0.1\nZephir Version 0.6.1a\n\nWarning: Class \"Utils\\DiInterface\" does not exist at compile time in /opt/utils/utils/Greeting.zep on 11 [nonexistent-class]\nreturn this->getDi()->getShared(\"foo\");\n----------------------------------------^\nCopying new kernel files...\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nExtension installed!\nAdd extension=utils.so to your php.ini\nDon't forget to restart your web server\n\nCode is exact the same as in the first example and it works. Testet with Debian and compiled phalcon with \"zephir build --export-classes\"\n. ",
    "danbruce": "Yes, you are right. I don't know what I did wrong. My apologies.\n. The bug doesn't appear before b275db3f14e94470bdd7bf7ab94d28f78c955251. That's all I meant.\n. Verified my new email with github.\n. ",
    "lukaszwit": "Calling php native functions should act exactly as in php.\n. ",
    "kse300489": "@lukaszwit y can use simple hack in zephir:\n``` php\nvar\n  content, http_response_header;\nlet\n  content = file_get_contents('http://google.com/'),\n  http_response_header = eval('$http_response_header');\n```\nIt's ugly, but it work.\n. Ping?\n. I check it, and not found answer.\nphp\nif name == \"*\" || name == widget::NAME\nwidget it is not name of class, it is object of class WBase.\nNew example:\n``` php\nnamespace It;\nclass WBase{\n    const NAME = NULL;\npublic function test() -> void{\nvar widget, name;\nlet widget = new WBase();\nlet name   = widget::NAME;\n}\n\n}\nZephir\\CompilerException: Cannot locate class 'It\\widget' in /var/tmp/it/it/WBase.zep on line 9\n let name   = widget::NAME;\n--------------------------^\n\n```\n. Because can be many objects with different types, and i need filter it by NAME.\nExample:\n``` php\nnamespace It;\nclass WBase{\n    const NAME = NULL;\n}\nclass WText extends WBase{\n    const NAME = \"text\";\n}\nclass WTextarea extends WText{\n    const NAME = \"textarea\";\n}\nclass WBox{\n    protected _children = [];\n    public function addChild( widget) -> {\n        let this->_widgets[] = widget;\n        return widget;\n    }\n    public function getWidgetByName(const string! name) -> array{\n        var child;\n        var result = [];\n        for child in this->_children {\n            if name == child::NAME {\n                result[] = child;\n            }             \n        }\n        return result;\n    }\n}\nvar box = new WBox(), \n      text;\nbox->addChild(new WText());\nbox->addChild(new WTextarea());\nbox->addChild(new WText());\nlet text = box->getWidgetByName(\"text\");\n```\n. \u041d\u0443 \u0431\u043b\u0438\u043d... \u043f\u0430\u0446\u0430\u043d\u044b) \u042d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0435 \u0432 \u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u0435 \u0438 \u0432\u0441\u0435)\n. @kshvakov \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0435\u043f\u043b\u043e\u0445\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435. \u041d\u043e \u0432\u043e\u043f\u0440\u043e\u0441 \u0442\u0430\u043a \u0438\u043b\u0438 \u0438\u043d\u0430\u0447\u0435 \u0432 \u0441\u0438\u043b\u0435. \u0412 zephir \u044f \u0442\u0430\u043a \u043f\u043e\u043d\u0438\u043c\u0430\u044e \u043d\u0435\u043b\u044c\u0437\u044f \u0438\u0437 \"\u043e\u0431\u044a\u043a\u0442\u0430\" \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443 \u0435\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430.\n. Zephir not support any functions)\n. Thank you. This is really great feature.\n. Any progress?\n. Yes, i am too(. \nzephir version\n0.5.9a\n. @andresgutierrez ping\nphp\nclass Arr{\n    public function isEmpty(const array args = NULL) -> bool{\n        if empty args {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nThis code still throws error.\n. Ty\n. 'var' mean that argument bbb is 'zval' (can be any php type)\n. Reference is not supported yet.\n. AFAIK, right now not.\n. Implementing references in zephir, is on discussion state.\n. @wirasto, this it not solution how to solve this problem, this is hack.\n. Explanation of this bug:\nZephir code:\n``` php\n    public function test(var arg = NULL){\n        if NULL === arg{\n    }\n\n    if arg === NULL{\n\n    }\n}\n\n```\nC code:\n``` c\nPHP_METHOD(Test_test, test) {\n    zval *arg = NULL;\nzephir_fetch_params(0, 0, 1, &arg);\n\nif (!arg) {\n    arg = ZEPHIR_GLOBAL(global_null);\n}\n\nif (Z_TYPE_P(arg) != IS_NULL) {\n}\nif (Z_TYPE_P(arg) == IS_NULL) {\n}\n\n}\n```\nI think this is bug.\nZephir version 0.5.9a.\n. I think he compile it with default options, from zephir build.\n. That's awful :crying_cat_face:\n. OS: debian 6\nGCC: 4.4.5 (Debian 4.4.5-8)\nZephir: 0.5.9a\nThis is archive of extension http://rghost.net/60111229.\nExtension structure:\nphp\n| - it\n    | - Exception.zep\n    | - db\n          | - Exception.zep\n          | - query\n               | - Exception.zep\n               | - placeholder\n                    | - Exception.zep\nFile it\\Exception.zep\n``` php\nnamespace It;\nuse \\Exception as PHPException;\nclass Exception extends PHPException{\n}\n```\nFile it\\db\\Exception.zep\n``` php\nnamespace It\\Db;\nuse It\\Exception as ItException;\nclass Exception extends ItException{\n}\n```\nFile it\\db\\query\\Exception.zep\n``` php\nnamespace It\\Db\\Query;\nuse It\\Db\\Exception as ItDbException;\nclass Exception extends ItDbException{\n}\n```\nFile it\\db\\query\\Placeholder\\Exception.zep\n``` php\nnamespace It\\Db\\Query\\Placeholder;\nuse It\\Db\\Query\\Exception as ItDbQueryException; \nclass Exception extends ItDbQueryException{\n}\n```\nIf u compile it and add to php.ini, u get the error:\nphp\nCan't register class It\\Db::Exception with null parent\nPHP Fatal error:  Unable to start it module in Unknown on line 0\nIf delete it\\db\\query\\Placeholder\\Exception.zep extension will successful compiled.\n. Any activity on this issue?\n. Ty )\n. Thanks!\n. @hylent \nAlso empty string.\n. Ty\n.  CLASS  it is namespace and class name, but zephir generate only class name without namespace.\nPhp example:\n``` php\nnamespace N0{\n  class SimpleClass{\n    const className = CLASS;\n  }\n}\necho N0\\SimpleClass::className;\n```\nOutput:\ntext\n'N0\\SimpleClass'\nZephir will output:\ntext\n'SimpleClass'\n NAMESPACE  value is wrong.\nExample:\nphp\nnamespace N0\\N1{\n  class SimpleClass{\n    const className = __NAMESPACE__;\n  }\n}\nThis php code:\nphp\necho N0\\N1::className;\nwill output:\ntext\n'N0_N1'\n. Why it vlosed?\n. Ping ?\n. Ty. This is a very useful feature.\n. +1\nMaybe delete str_replace optimizer and use native php function?\nU can delete str_replace optimizer class 'zephir/Library/Optimizers/FunctionCall/StrReplaceOptimizer.php' and zephir will use native php function 'str_replace'.\nUpdate: It does't work, steal get error when use array as replace argument.\n. @ovr Any ideas? I am really need this feature. This code unset(obj->property); is working, but this unset(obj->{property}); not. I can't remove object properties in loop.\n. Ty. I did not know about it. You can close this issue.\n. I know about ZEND_ARG_INFO_ARRAY.\nIt can be used if we use strict type checking. Like this:\nphp\npublic function methodArray(array! argument){\n}\nBut maybe array safe cast can be implemented on zephir type checking layer. Like this:\nphp\npublic function methodBool(bool argument){\n  var_dump(argument);\n}\nZephir automatically cast all not bool argumets to bool. So if we run this code:\nphp\n$this->methodBool('');\n$this->methodBoo(0);\n$this->methodBool(NULL);\n$this->methodBool(FALSE);\nWe get ouput:\ntext\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nAlso and this case:\nphp\npublic function methodArray(array argument){\n  var_dump(argument);\n}\nZephir will automatically cast all not array arguments to array. Example:\nphp\n$this->methodArray('');\n$this->methodArray(0);\n$this->methodArray(NULL);\n$this->methodArray(FALSE);\n$this->methodArray([]);\nOutput:\ntext\narray(1) {\n  [0] =>\n  string(0) \"\"\n}\narray(1) {\n  [0] =>\n  int(0)\n}\narray(1) {\n  [0] =>\n  NULL\n}\narray(1) {\n  [0] =>\n  bool(false)\n}\narray(0) {\n}\nOf \u0441ourse we can't use ZEND_ARG_INFO_ARRAY right now, but we can use simple ZEND_ARG_INFO(0, argument) and then check and cast argument by generated C code.\n. It worked. Thanks\n. Ok. Ty.\n. Zephir generated code:\nphp\n        if FALSE !== tmp {\n            var_dump(tmp.\"-1\");\n        }\nc\n    if (ZEPHIR_IS_BOOL(tmp, 0)) {\n        ZEPHIR_CHECK_POINTER(tmp);\n        ZEPHIR_INIT_VAR(_2);\n        ZEPHIR_CONCAT_VS(_2, tmp, \"-1\");\n        zephir_var_dump(&_2 TSRMLS_CC);\n    }\n\nphp\n        if tmp !== FALSE {\n            var_dump(tmp.\"-1\");\n        }\nc\n    if (!ZEPHIR_IS_FALSE_IDENTICAL(tmp)) {\n        ZEPHIR_CHECK_POINTER(tmp);\n        ZEPHIR_INIT_LNVAR(_2);\n        ZEPHIR_CONCAT_VS(_2, tmp, \"-1\");\n        zephir_var_dump(&_2 TSRMLS_CC);\n    }\nIn first example also must be !ZEPHIR_IS_FALSE_IDENTICAL(tmp), not ZEPHIR_IS_BOOL(tmp, 0).\n. Thanks\n. Thanks.\n. +1\n. Ty\n. arg0 is defines as string and its type is never changed to other type but how i can detect that arg0 was NULL, if it always string?\n. I know, but it is error. If i set arg0 = NULL default value NULL, this mean that input argument can be NULL. Or i am wrong?\n. @nkt ty. I think it can solve my problem.\n. Right now it can't be added to zephir, becouse anonimus functions in zephir it is not Closure like in php, it is simple function name. When you write in zephir:\nphp\nreturn array_map(function(var item){ return item + 1; }, value);\nZephir simple create new function with unredable name, like: \nphp\nfunction func_101193d7181cc88340ae5b2b17bba8a1(var item) {\n  return item + 1;\n}\nand then use it like this\nphp\nreturn array_map('func_101193d7181cc88340ae5b2b17bba8a1', value);\nSo anonimus functions in zephir it simple named functions.\n. @maxgalbu of course DOM extension installed.\n@steffengy my php version PHP 5.4.36-0+deb7u3.\nVery strange this code successful work on:\nLinux nettop 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt7-1 (2015-03-01) x86_64 GNU/Linux\ngcc version 4.9.2 (Debian 4.9.2-10)\nPHP 5.6.7-1\n. I know, but zephir successfully compiles this code:\nphp\npublic static function testMemstr() -> bool{\n    return memstr(\"asd 111 asd\", \"111\");\n}\nBut when i try call it from php:\n%class%::testMemstr();\nI get error:\ntext\nPHP Fatal error:  Uncaught exception 'RuntimeException' with message 'Call to undefined function memstr()\nFor example functions start_with, ends_with works fine.\n. @fezfez and? I must add stupid example with call_user_func usage? Ok.\n`````` php\nnamespace Tns;\nclass CallUserFuncTest{\n  protected _argument;\n  protected _function;\npublic function setArgument(var argument){\n    let\n      this->_argument = argument;\n  }\npublic function setFunction(callable _function){\n    let\n      this->_function = _function;\n  }\npublic function call(){\n    return call_user_func(this->_function, this->_argument);\n  }\n}\nPhp test:\n```php\n$CallUserFuncTest = new Tns\\CallUserFuncTest();\n$CallUserFuncTest->setArgument(TRUE);\n$CallUserFuncTest->setFunction(function($argument){\n  return $argument;\n});\n$CallUserFuncTest->call();\nProcess finished with exit code 139\n`````\n. I asked a very simple but at the same time a very detailed question aboutcall_user_func. But in response, I received a link to a list of rules. It looks like ignorance. ALL knows how to usecall_user_func`, an example in this case is superfluous.\n. @ovr \nI add iformation about environment at the first post.\nCompiler: gcc version 4.9.2 (Debian 4.9.2-10) \nZephir version: 0.7.1b\nWorking code in third post.\n. I confirm, current version and lower versions has this bug\n. Ok. Pls add to documentation that elseif not supported. And beeter disable elseif in parser. This bug create much problems.. No. This is problem, when code executed when it not must executed, it is exactly bug. If you can't do that else if currently working, convert it to nested if. Or disable in parser on show error when user use else if. I spent a lot of time with debugging and analyzing generated C code to find this bug.. Ty, nice feature\n. Yes, because default value, generate C code when method called. I think this error cannot be resolved.\n. Ping?\n. In php5 and php7 hashTables is diffrent, new hashTable in php7 is one of many reasons why php7 is faster then php5.\n. @steffengy good explanation\n. ``` zephir\nconst VERSION0 = \"2.2\";\nconst VERSION1 = \"2.2\";\nconst VERSION2 = \"2.2\";\nprotected static instance = null;\nprotected myTokenizer, parser, helpers, loader, partialsLoader, cache;\nprotected escape = \"htmlspecialchars\";\nprotected escapeArgs = [ENT_COMPAT, \"UTF-8\"];\nprotected aliases = [];\n```\nFirst consts, then properties.\n. What version of OS and PHP?\n. OS 32 or 64? zephir version?\n. I try to check on my 32bit with 0.9.2 stable.\n. ",
    "ariskemper": "Issue is solved with pull request #339 \n. ",
    "jails": "This issue has been closed, does that mean Zephir fully support PSR-0 rules now ?\n. Oh ok thank you for the clarification !\n. ",
    "pennycoders": "I totally agree with you, @nkt, I am also thinking maybe we could use something like \nbash\ncp bin/zephir-cmd ~/bin/zephir\nWhat do you guys think ? \nCheers,\nAlex.\n. ",
    "Stasmo": "Yoda conditions.\nJust adding this comment as a search term.\n. ",
    "danielstjules": "@ovr @nkt any plans to merge? :)\n. ",
    "MartinHelmut": "+1 This is a great suggestion!\n. ",
    "arthurpro": "I believe that magic methods in Zephir would be very useful.\nI'd like to port one PHP library to Zephir but I got stuck with magic methods being heavily used in the library.\nI'm  new to Zephir though, perhaps I can contribute to that feature development.\nHowever, I'm not sure where to start at thia point.\nPlease advise!. ",
    "doanguyen": "Hi,\nJust curious what's the status of this issue?. ",
    "jrbasso": "``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\nZEPHIR_INIT_CLASS(Xxx_Buggy) {\nZEPHIR_REGISTER_CLASS(Xxx, Buggy, xxx, buggy, xxx_buggy_method_entry, 0);\n\nreturn SUCCESS;\n\n}\nPHP_METHOD(Xxx_Buggy, unusedCode) {\nzend_bool open = 0;\n\n\nif (!(open)) {\n    open = 1;\n}\nif (open) {\n    RETURN_LONG(1);\n}\nRETURN_LONG(0);\n\n}\n``\n. I noticed that doingif open === false {instead ofif !open {the warning message is not displayed and the C code becomeif (open == 0) {`. It seems to be a workaround for the warning.\n. I forgot to include the generated c file:\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/array.h\"\nZEPHIR_INIT_CLASS(Xxx_Buggy) {\nZEPHIR_REGISTER_CLASS(Xxx, Buggy, xxx, buggy, xxx_buggy_method_entry, 0);\n\nreturn SUCCESS;\n\n}\nPHP_METHOD(Xxx_Buggy, bugType) {\nzval *list, *_0, *_1;\n\nZEPHIR_MM_GROW();\nZEPHIR_INIT_VAR(list);\narray_init(list);\n\nZEPHIR_INIT_VAR(_0);\narray_init(_0);\nzephir_array_update_string(&list, SL(\"initialized\"), &_0, PH_COPY | PH_SEPARATE);\nZEPHIR_INIT_VAR(_1);\nZVAL_STRING(_1, \"NOK\", 1);\nzephir_array_update_multi(&list, &_1 TSRMLS_CC, SL(\"ss\"), 4, SL(\"initialized\"), SL(\"test\"));\nZEPHIR_INIT_BNVAR(_1);\nZVAL_STRING(_1, \"OK\", 1);\nzephir_array_update_multi(&list, &_1 TSRMLS_CC, SL(\"ss\"), 4, SL(\"not-initialized\"), SL(\"test\"));\nRETURN_CCTOR(list);\n\n}\n```\n. @nkt What do you mean with right comparisons?\n. I see what you mean, to remove what is working as expected. I will edit the original issue description.\n. ",
    "fereidani": "this bug is very dangerous and could cause many  vulnerabilities and instabilities.\ni have problem with this in my code too :\n    public static function test(){\n        if(strpos(\"something\",\"asome\")===0){\n            echo(\"invalid comparison\");\n        }else{\n            echo(\"succesfull comparison\");\n        }\n    }\nstrpos will return FALSE but in exact type comparison with 0 it produce TRUE , which expected to be FALSE .\njust think in some security check something like this happened , please give this bug high priority .\n. @nkt : it was a sample , try anything and return from if statement ....\n@ovr : thank you .\n. fixed ... thank you ;)\n. i got tested again , it's not fixed yet ...\n. sorry i can't confirm this patch , i even deleted zephir and clone project again ,\ni received following error again : \nPHP Fatal error:  Call to a member function isNotVariableAndString() on a non-object in /home/username/zephir/Library/Optimizers/FunctionCall/TrimOptimizer.php on line 64\n. it's my code : \nnamespace Newone;\nclass library{\n    public static function test(a){\n        trim(a);\n    }\n}\ni got tested several times , maybe it's local problem that i can't solve it by now , so if you can compile this code please close issue by yourself .\nthank you .\n. @ovr thank you ,\nyes using trim value without destination is meanless at all but its better to produce warning with exact problem location in these cases .\nfor example i wrote a 1000 lines program and forget to save return value in some variable ,\ni just recieved : \nPHP Fatal error: Call to a member function isNotVariableAndString() on a non-object in /home/username/zephir/Library/Optimizers/FunctionCall/TrimOptimizer.php on line 64\nits very unclear error , its better to schedule a patch for this bug .\n. as mentioned in zephir project description title(README) :\n1. Zephir - Ze(nd Engine) Ph(p) I(nt)r(mediate) - is a high level language ...\nand as it mentioned in Main features :\n2. it's a memory safe language\nand this bug is in inconsistency with these terms.\nif zephir generate php extension it should observe php standards .\n. i hope you understand i try to make zephir safer and more stable as a security researcher ,\ni start a opensource security project  with zephir and i need my project stable and crash safe ,\nso i don't want to static analyse my project generated c code again after using a high level language ,\nsomething like this vulnerability can easily patched by adding simple inline function instead use of c  division operator directly ,\ni did not read zephir source code completely yet but i guess team can do something like this Pseudocode :\ninline type zephir_division(type a,type b){\nif(b==0){\ngenerate php warning and exit crash safe .(better to use external function for performance reasons)\n}else{\nreturn a/b;\n}\n}\nit's simple and will help zephir to get next level .\nthis kind of crash in high level languages is unusual .\nplease test this script  to see as how php act in these situations.\nphp\nfunction test($a){\n    return 10/$a;\n}\necho test(0);\n. @nkt : why asserts ? i think they stop program execution and maybe cause problems too , we need safe php exit ( webserver will terminate connection if php closed unexpectedly ) . and if i'm not wrong asserts used only for debugging purposes .\n@ovr : can we know your opinion about this bug ?\n. you can simply use following code if you want to make this patch configurable ( I DON'T REALLY SUGGEST TO MAKE IT DISABLEABLE )\n\n<p```\nifdef PROTECT_DIV_BY_ZERO\n.... div by zero ....\nendif\n```\nfor more information : http://gcc.gnu.org/onlinedocs/cpp/Ifdef.html\ni think it's what you looking for ,\nasserts used only for debugging purposes ...\nand also i should correct my previous suggested patch :\ninline type zephir_division(type a,type b){\nif(b==0){\ngenerate php warning and return PHP false .(better to use external function for performance reasons)\n}else{\nreturn a/b;\n}\n}\nin new php versions , php generate a warning (instead of fatal error) and return FALSE as value of div operator and continue execution of script.\nit's impossible to patch this bug in PHP code , you have to correct zephir runtime behavior if you want to patch this code ..\n. ",
    "christiaan": "This is the only thing I ran into while working with Zephir on Debian Squeeze running PHP 5.3.3-7+squeeze19\nAwesome work!\n. ",
    "dogstarTest": "My new issue about CORE DUMP after runnig extendsions written with Zephir:\n1. Can we use Error/Warning not core dump? \nFor example, when I try to call method on a NULL object, it show me an error.\n2. IF Q1 not supported, can we show the trace when core dump?\nWhan I exploded with Zephir, if it core dump, it's difficult for me to locate the question, expecially after I worte so many codes even though with phpunit.\nSince that Zephir is a HIGH LEVEL language, I should use it to explore easiy and do not need to worry why I core dump suddenly? Will that heppen in my production?!\nI think the PHP extensions, no matter written in Zephir, or in C, or in any other new language, is safe to use for PHPers. Just like PEAR, no matter how you use it, it will never core dump, but instead error/warning/exception.\n. @nkt \nI try to run the tests in 3 ways as bellow:\n1. SPLIT PHPUNIT TEST BUT CORE DUMP\n   //test_MagicDi_Spilt.php\n   <?php\n   class MagicDiSpilt_Test extends PHPUnit_Framework_Testcase\n   {\n   public function testMagicMethod()\n   {\n       $di = new Dogstar\\MagicDi();\n$di->setName('phalcon');\n   $this->assertEquals('phalcon', $di->getName());\n}\n   }\nphpunit ./test_MagicDi_Spilt.php \nPHPUnit 4.0.17 by Sebastian Bergmann.\nSegmentation fault (core dumped)\n1. NOT SPLIT PHPUNIT TEST PASS! (NOT PASS before)\n   //test_MagicDi_NotSpilt.php\n   <?php\nclass MagicDiNotSpilt_Test extends PHPUnit_Framework_Testcase\n{\n    public $fdi;\n```\npublic function setUp()\n{\n    $this->fdi = new Dogstar\\MagicDi();\n}\npublic function testMagicMethod()\n{\n    $di = $this->fdi;\n$di->setName('phalcon');\n$this->assertEquals('phalcon', $di->getName());\n\n}\n```\n}\n1. NOT THE WAY!\n   <?php\n$di = new Dogstar\\MagicDi();\n$di->setName('phalcon');\nvar_dump($di->getName());\nNULL output!!!              \n. Thanks @nkt , I will attach the C code later.\nAnd I think it is not about the phpunit business, if I write the DI class with PHP, it will pass all the tests, no matter how I use or test the code.\n. ``` C\nPHP_METHOD(Dogstar_MagicDi, __call) {\nint ZEPHIR_LAST_CALL_STATUS;\nzephir_nts_static zephir_fcall_cache_entry *_2 = NULL, *_4 = NULL;\nzval *name, *params, *prefix = NULL, _0 = zval_used_for_init, _1 = zval_used_for_init, *key = NULL, *_3 = NULL, *value = NULL, *_5, *_6, *_7;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 2, 0, &name, &params);\n\nZEPHIR_INIT_VAR(value);\nZVAL_NULL(value);\n\n\nZEPHIR_SINIT_VAR(_0);\nZVAL_LONG(&_0, 0);\nZEPHIR_SINIT_VAR(_1);\nZVAL_LONG(&_1, 3);\nZEPHIR_CALL_FUNCTION(&prefix, \"substr\", &_2, name, &_0, &_1);\nzephir_check_call_status();\nZEPHIR_SINIT_NVAR(_0);\nZVAL_LONG(&_0, 3);\nZEPHIR_SINIT_NVAR(_1);\nZVAL_LONG(&_1, zephir_fast_strlen_ev(name));\nZEPHIR_CALL_FUNCTION(&_3, \"substr\", &_2, name, &_0, &_1);\nzephir_check_call_status();\nZEPHIR_CALL_FUNCTION(&key, \"lcfirst\", &_4, _3);\nzephir_check_call_status();\nZEPHIR_OBS_VAR(value);\nzephir_array_isset_long_fetch(&value, params, 0, 0 TSRMLS_CC);\nZEPHIR_INIT_VAR(_5);\nZEPHIR_CONCAT_SVSVSVS(_5, \"#__call# method = \", prefix, \"; key = \", key, \"; value = \", value, \"\\n \");\nzend_print_zval(_5, 0);\nif (ZEPHIR_IS_STRING(prefix, \"get\")) {\n    ZEPHIR_RETURN_CALL_METHOD(this_ptr, \"get\", NULL, key, value);\n    zephir_check_call_status();\n    RETURN_MM();\n}\nif (ZEPHIR_IS_STRING(prefix, \"set\")) {\n    ZEPHIR_CALL_METHOD(NULL, this_ptr, \"set\", NULL, key, value);\n    zephir_check_call_status();\n    RETURN_MM_NULL();\n}\nZEPHIR_INIT_VAR(_6);\nobject_init_ex(_6, zend_exception_get_default(TSRMLS_C));\nZEPHIR_INIT_VAR(_7);\nZEPHIR_CONCAT_SVS(_7, \"Call to undefined method Di::\", name, \"()\");\nZEPHIR_CALL_METHOD(NULL, _6, \"__construct\", NULL, _7);\nzephir_check_call_status();\nzephir_throw_exception_debug(_6, \"dogstar/MagicDi.zep\", 78 TSRMLS_CC);\nZEPHIR_MM_RESTORE();\nreturn;\n\n}\n. C\nPHP_METHOD(Dogstar_MagicDi, set) {\nHashTable *_3;\nHashPosition _2;\nint ZEPHIR_LAST_CALL_STATUS;\nzval *key, *value, *_0, *kk = NULL, *vv = NULL, *_1, **_4, *_5 = NULL;\n\nZEPHIR_MM_GROW();\nzephir_fetch_params(1, 2, 0, &key, &value);\n\n\n\nZEPHIR_INIT_VAR(_0);\nZEPHIR_CONCAT_SVSVS(_0, \"#set# key = \", key, \"; value = \", value, \"\\n\");\nzend_print_zval(_0, 0);\nZEPHIR_CALL_METHOD(NULL, this_ptr, \"_checkkey\", NULL, key);\nzephir_check_call_status();\nzephir_update_property_array(this_ptr, SL(\"_data\"), key, value TSRMLS_CC);\nphp_printf(\"#data after set# \");\n_1 = zephir_fetch_nproperty_this(this_ptr, SL(\"_data\"), PH_NOISY_CC);\nzephir_is_iterable(_1, &_3, &_2, 0, 0);\nfor (\n  ; zephir_hash_get_current_data_ex(_3, (void**) &_4, &_2) == SUCCESS\n  ; zephir_hash_move_forward_ex(_3, &_2)\n) {\n    ZEPHIR_GET_HMKEY(kk, _3, _2);\n    ZEPHIR_GET_HVALUE(vv, _4);\n    ZEPHIR_INIT_LNVAR(_5);\n    ZEPHIR_CONCAT_VSVS(_5, kk, \" -> \", value, \"\\t\");\n    zend_print_zval(_5, 0);\n}\nphp_printf(\"\\n\");\nZEPHIR_MM_RESTORE();\n\n}\n```\n.  Thanks @nkt again! You are so nice and smart. As you know, English is not my first language, maybe I will show my option not correctly, never mind.\n__call and set function in C have been attached.\n. Another fatal question about core dump. When I try to new another instance and use it, it will crash.\n``` PHP\n<?php\n$di = new Dogstar\\MagicDi();\n$di->setName('201407');\nvar_dump($di->getName());\n$di2 = new Dogstar\\MagicDi();\n$di2->setName('201408');\nvar_dump($di2->getName());\n```\n``` Shell\nstrace php ./test_MagicDi_Spilt_WithoutUnit.php \n--- SIGSEGV (Segmentation fault) @ 0 (0) ---\n+++ killed by SIGSEGV (core dumped) +++\nSegmentation fault (core dumped)\n```\nAt first, I wonder any class with __call method will run crash when create serveral instance. But I found it is not after I verify the point with code and test.\n. ",
    "andycheg": "I've fixed 5.3 compatibility in arrays initializations. But Travis php-5.3 build failed anyway. In my 5.3 environment no segfault occurs.\n. ",
    "vefaliahmet": "thank you..\n. can we add object to _GLOBAL ?\n. thank you.\n. ",
    "rodrigorm": "I already have the newest version.\n$ php -i | grep gmp\n/etc/php5/cli/conf.d/20-gmp.ini,\ngmp\ngmp support => enabled\n. The main idea is to run the tests without add the extension, instead of:\n$ ./bin/zephir build\n$ cp ext/modules/test.so /usr/lib/php5/20121212\n$ cp unit-tests/ci/test.ini /etc/php5/cli/conf.d\n$ phpunit\nI would like:\n$ make test\nEasy, right?\n. I got you. Shall I close the PR?\n. I have removed the hardcoded path and squashed the commits.\n. Can I remove all the comparisons?\n. Can I change all asserts?\n. If I remove this the build fails.\n. ",
    "hylent": "i'v wrote the zep file in php, there are still memory leaks, it seems to be the problem of php itself ;-(\n. you should ensure that your code can be build on Linux first.\n- zephir can only run on Linux for now, so firstly use zephir generate on Linux to generate c codes of your extension.\n- copy the generated ext folder to proper path on windows, for example c:\\php-sdk\\phpdev\\vc11\\x86\\pecl\\your-ext-name or c:\\php-sdk\\phpdev\\vc11\\x86\\php-5.5.15\\ext\\your-ext-name.\n- then build your extension in a vc11 developer command prompt as normal, buildconf --force && configure  --disable-all --enable-cli --enable-your-ext-name && nmake.\nall c files (generated by the original zephir) are included in one new c file (added in my pull request) named your-ext-name.w32.c, this is an ugly but effective way of building Linux sources on win32.\n. @@\n. i got the same error, it seems to be caused by the phpredis extension, I'v pulled a request to phpredis.\nsee https://github.com/nicolasff/phpredis/pull/499\n. How about giving up PHP5.3 support?\n. I mean Zephir giving up support for PHP 5.3.\nThere are problems when running Zephir extensions on PHP 5.3, which I can hardly trace.\nBy giving up support for PHP 5.3, Traits are reasonable features for Zephir.\n. manually code return; in the empty method would avoid this issue, but I think it's a bug @@\n. fixed\n. \\ should be written as \\\nbesides, a new variable should be declared \n\u53d1\u9001\u81ea\u6211\u7684HTC Phone\n----- Reply message -----\n\u53d1\u4ef6\u4eba\uff1a \"ThanhNhan2103\" notifications@github.com\n\u6536\u4ef6\u4eba\uff1a \"phalcon/zephir\" zephir@noreply.github.com\n\u4e3b\u9898\uff1a [zephir] Can't compile .zep to extension with zephir (#528)\n\u65e5\u671f\uff1a \u5468\u516d, 9\u6708 13 \u65e5, 2014 \u5e74 01:27\nHi everybody,\nI try to compile .zep to extension with can't do it\nI type command: zephir mylib --init\nI cd to mylib/mylib and create filter,zep\nmy code in filter.zep\nnamespace Mylib;\nclass Filter\n{\npublic static function xssClean(string data) -> string\n{\nvar pattern, subject;\n// Fix &entity\\n;\nlet pattern = \"/(&#*\\w+)[\\x00-\\x20]+;/u\", subject = \"$1;\";\nlet data = preg_replace(pattern, subject, $data);\nlet data = data . \"\\n\";\nreturn data;\n}\n}\nAnd then, I try command zephir build. In console output: warning: unknow escape sequence '\\w' but compile success\nI don't care and I add my extension to php.ini and create test.php file and my code below:\nphp\n\n<pMylib\\Filter::xssClean('asdl#j_a@djklj29aslkdj');\n?>\nI run command: php test.php\nIn console output: PHP warning: preg_replace():  No ending delimeter '/' found in test.php on line x\nWho can show me problem in my code?? my mistake?\nAnd solution to solve it if we don't use preg_replace in this case\n\u2014\nReply to this email directly or view it on GitHub.\n. @ThanhNhan2103\n```\nnamespace Mylib;\nclass Filter\n{\n    public static function xssClean(string data) -> string\n    {\n        var pattern, subject;\n    // a new variable must be declared to avoid memory leaks in the in-place `let` statement\n    var newData;\n\n    // all `\\` to `\\\\`\n    let pattern = \"/(&#*\\\\w+)[\\\\x00-\\\\x20]+;/u\", subject = \"$1;\";\n\n    // use the newly declared variable\n    let newData = preg_replace(pattern, subject, data);\n\n    let newData .= \"\\n\";\n    return newData;\n}\n\n}\n``\n. same problem.\nwhysudo phpize? isphpize` not right?\n. oh I see, my phpize is in /usr/local/bin witch is not in sudoers' PATH\n----- Reply message -----\n\u53d1\u4ef6\u4eba\uff1a \"\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041f\u0430\u0446\u0443\u0440\u0430\" notifications@github.com\n\u6536\u4ef6\u4eba\uff1a \"phalcon/zephir\" zephir@noreply.github.com\n\u6284\u9001\uff1a \"hylent\" hylent@gmail.com\n\u4e3b\u9898\uff1a [zephir] sudo: phpize: command not found (#540)\n\u65e5\u671f\uff1a \u5468\u4e8c, 9\u6708 16 \u65e5, 2014 \u5e74 12:07\nYou need to install php5-dev or php-devel\n\u2014\nReply to this email directly or view it on GitHub.\n. just saw your comments after my pushing\n. variable text is not assigned to any value in your elseif statement\n. public function test(var arr)\n{\n    if typeof arr == \"array\" || (arr instanceof \\Traversable) {\n    }\n}\nI aways put instanceof statement into ()\n. how about\nreset(this->data);\nbefore\nlet entry = current(this->data);\n. In our cases, we give our customers .so and .dll libs built for all platforms and all PHP versions.\n. We build .so libs for PHP-5.{3,4,5,6} x86_64 with gcc, these .so libs can fit almost all kind of Linux distributions. It's our customer that choose which PHP version he use.\n@chrismervyn \n. Use globals_set.\n. :fearful: \n. @xutongle \n\u4e0d\u80fd\u7528\u6570\u7ec4\u4f5c\u4e3a\u7c7b\u5c5e\u6027\u7684\u521d\u59cb\u503c\u3002\nArray is not a valid type of the initial value of a class property.\n\u6ca1\u6709\u521d\u59cb\u503c\u7684\u7c7b\u5c5e\u6027\u53ef\u4ee5\u50cf\u6570\u7ec4\u90a3\u6837\u53bb\u4f7f\u7528\u3002\nClass properties with no initial value can be used just as arrays.\nnamespace Foo;\nclass Bar\n{\n    protected data;\n    public function addItem(var item) -> void\n    {\n        let this->data[] = item;\n    }\n    // \u5982\u679caddItem\u65b9\u6cd5\u6ca1\u88ab\u8c03\u7528 \u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56denull\n    // This method will return `null` if `addItem` is not called at all\n    public function getData() -> array\n    {\n        return this->data;\n    }\n}\n. :+1: \n. Feature var type casting to array type\n +1\n. So as __NAMESPACE__\n. :+1: \n. var simpleVar = 1;\nIt is already supported, am I right?\n. +1\n. If using some method which is in some extension but not in the zephir prototype class, there will be errors\n. As of PHP 5.3.3, methods with the same name as the last element of a namespaced class name will no longer be treated as constructor. This change doesn't affect non-namespaced classes. \nhttp://php.net/manual/en/language.oop5.decon.php\n. @sergeyklay the same effect..\n. https://github.com/phalcon/zephir/issues/495\n. Why don't you generate c code on Linux, then compile it on Windows?\n. :+1:\n. Will zephir generate generates separate ext folders for both PHP5 and PHP7?\n. rm -rf ext\nmkdir -p ext/kernel\nzephyr generate\n. :+1: \n. I guess object properties are initialized after object_init and before invoking __construct\n. :+1: \n. :+1: \n. extract([\"foo\": this->foo]);\n. See optimizers http://docs.zephir-lang.com/en/latest/optimizers.html\nConnect PHP variables to C data types.\n. It's time to support Trait :smiley: \n. See #1172\n. In my case, I install zephir_parser.so into PHP extension folder.\nEverytime i update zephir, i recompile and reinstall zephir parser.\n. types_count is the last parameter before ..., not types_length\n. types_count is the last parameter before ..., not types_length\n. types_count is the last parameter before ..., not types_length.\nBesides, there is a va_start(ap, types_count); statement in the following code.\n. ",
    "angay9": "They are the callbacks. For instance, lets say you wan't to query a sort of a collection in C# like so:\nC#\n    List<object> myColl = ... //assing some data to it. Let's say a list of user objects where each user has a name and last name\n       //grab all objects with name of \"John\"\n       myColl\n           //here is the lamba function. it has a nice short syntax in C#.\n           .Where(u => u.firstName == \"John\")\n           .FirstOrDefault();\n          // .Where(u => u.firstName == \"John\") equals to something like this in php\n         // ->Where(function ($u) {\n                      if ($u->firstName === \"John\") {\n                          return $u;\n                      }\n                  }\n. I hope you can see that they are really nice and powerful. And LINQ is a great technology. I would really like to see something like this in Zephir\n. Why shouldn't you use it in Zephir? It would make life much easier.\n. ",
    "loint": "@nkt  Thank you, but I don't know how to enable zephir in php.ini because I did not find an extension name \"zephir.so\" ?\n. @ovr  Thank you. Let's me give a try, so interesting. :+1: \n. I installed LLVM 3.4, Clang 3.4 in My Centos 6.4. Then I complie runtime folder:\nphpize\n./configure\nmake\nIt's run very well but when I try to \"make test\" to use the zephir.so. It occurs errors :(\n```\nPHP Deprecated:  Comments starting with '#' are deprecated in /tmp/zephir-master/runtime/tmp-php.ini on line 2039 in Unknown on line 0\nPHP Deprecated:  Comments starting with '#' are deprecated in /tmp/zephir-master/runtime/tmp-php.ini on line 2039 in Unknown on line 0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/tmp/zephir-master/runtime/modules/zephir.so' - /tmp/zephir-master/runtime/modules/zephir.so: undefined symbol: unlikely in Unknown on line 0\nPHP Deprecated:  Comments starting with '#' are deprecated in /tmp/zephir-master/runtime/tmp-php.ini on line 2039 in Unknown on line 0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/tmp/zephir-master/runtime/modules/zephir.so' - /tmp/zephir-master/runtime/modules/zephir.so: undefined symbol: unlikely in Unknown on line 0\n=====================================================================\nPHP         : /usr/bin/php\nWarning: PHP Startup: Unable to load dynamic library '/tmp/zephir-master/runtime/modules/zephir.so' - /tmp/zephir-master/runtime/modules/zephir.so: undefined symbol: unlikely in Unknown on line 0\nPHP_SAPI    : cli\nPHP_VERSION : 5.5.14\nZEND_VERSION: 2.5.0\nPHP_OS      : Linux - Linux server 2.6.32-431.23.3.el6.x86_64 #1 SMP Thu Jul 31 17:20:51 UTC 2014 x86_64\nINI actual  : /tmp/zephir-master/runtime/tmp-php.ini\nMore .INIs  :\nCWD         : /tmp/zephir-master/runtime\nExtra dirs  :\nVALGRIND    : Not used\n```\nI spent a longtime to find the problem but no result. It's still wrong. \n. I can't find any instruction about zephir runtime extension.\nIt will be great if attached with instructions, how to setup and system requirements. Thank you.\n. :+1:  great to hear that. We 're using zephir as our main language :)\n. Yeah, let me try it :+1: \n. yes, it's interesting . I will do it later . :)\n. @ovr  I'm very interesting with zephir and want to help zephir team to fix bug and implement more useful feature but I don't have much experience with zephir compiler. How I can start with it ?\n. @steffengy  My source code sometimes fail with Segment Fault (only \"Segment Fault\" without warning) with simple code such as declaring new variable :( . I think the problem is memory leak, so I want to unset some variables to reduce memory and I found unset  function like I used in PHP but not. \nHow can I release variable memory in zephir and how can I debug if \"zephir builddev\" occurs with Segment Fault ?\n. @steffengy thank you for your explanation but I haven't used gdb with zephir. Can you help me with some instructions, I had just worked with zephir command and optimizers to write C code.\n. Thank you very much, I understood. \n. yes, I think it 's great if we can use this syntax. @ovr Do you have any idea for this case ?\n. :+1: \n. ",
    "feryardiant": "@ovr is it already available now?\nI can't find anything about debugging zephir anywhere.. ",
    "Elyn-Enes": "@WooDzu  Had the same issue with shared compilations. I have no idea how I fixed it, but I made a clean PHP build env somewhere on the way and it fixed itself. Works like a charm out of the box.\nCurrently building with the same config you pasted earlier.\nBy the way, was quite surprised to see that compiling on windows works way faster for me than a native *nix machine. Not sure why, seems weird. Just be sure not to recompile the whole PHP every time - simply drop the required /Release_TS/ext/{folder} and nmake.\nIt's not ideal, but good enough to deploy dependencies to my fellow Windows developer machines.\n. ",
    "flip111": "Would be interesting to know the steps required to go from zephir source to a dll on windows. Also it would be nice to be able to use visual studio as it comes recommended to build PHP on windows. AFAIK the steps are:\n1. build the zephir parser. DONE in commit https://github.com/phalcon/zephir/commit/7b20ff1d12e755b285a27261efcae053d8d2b0a7 No instructions have been given in case you want to build the zephir parser yourself. I managed to do it as well (VS) so please ask if interested.\n2. zephir generate DONE\n3. zephir build. Possibly can be done with GCC in windows? VS is not supported for sure https://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L877\nAre those basically the steps required or am i missing something here? I'm not totally sure how this commit helps (i guess it helps in step 3) and why it was closed.\n. +1\n. @aschwin zephir is like a layer on top of C with zend Api. Imo it would be best to make it as transparent as possible so that a class in zephir is a class in php and a trait in zephir a trait in php. If you want to hide stuff from php it would be best to use a technique like optimizers. This technique could probably be extended with more funtionality (on the part of the zephir programmer), but implementing this can be much harder. For example if you want to hide a zephir class from php, because all the classes are registered with the zend api, it would require custom logic so that they can not be used in php.\n. :+1: Awesome, eager for the zephir-parser.exe :)\n. You mean the binary file has been updated in the development branch?\nI check this yesterday and i got some errors so i assumed the file was not updated.\n. These are the errors i was talking about\nGenerating Code...\n        \"cl.exe\" /D _USRDLL /D PHP7DLLTS_EXPORTS /D PHP_EXPORTS /D LIBZEND_EXPORTS /D TSRM_EXPORTS /D SAPI_EXPORTS /D WINVER=0x0600 /D COMPILE_DL_FTP /D COMPILE\n_DL_OPCACHE -Ipecl\\zep\\utils\\ext /D ZEPHIR_RELEASE /nologo /I . /I main /I Zend /I TSRM /I ext /D _WINDOWS /D ZEND_WIN32=1 /D PHP_WIN32=1 /D WIN32 /D _MBCS /W3\n/FD /wd4996 /D_USE_32BIT_TIME_T=1 /RTC1 /MP /LDd /MDd /W3 /Gm /Od /D _DEBUG /D ZEND_DEBUG=1 /ZI /D ZTS=1 /I \"D:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\no\\include\" /D FD_S\nETSIZE=256 /FoD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\Debug_TS\\pecl\\zep\\utils\\ext\\ /FpD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\Debug_TS\\pecl\\zep\\utils\\ext\\ /FRD:\\dev\\php7\\bin\\ph\npdev\\vc14\\x86\\Debug_TS\\pecl\\zep\\utils\\ext\\ /FdD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\Debug_TS\\pecl\\zep\\utils\\ext\\ /c pecl\\zep\\utils\\ext\\utils.c\nutils.c\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.h(90): warning C4013: 'Z_REFCOUNT_PP' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.h(90): warning C4013: 'Z_ISREF_PP' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.h(93): warning C4013: 'ALLOC_ZVAL' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.h(94): warning C4013: 'Z_UNSET_ISREF_P' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(748): warning C4047: 'function': 'zval *' differs in levels of indirection from 'zval **'\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(748): warning C4024: '_zval_ptr_dtor': different types for formal and actual parameter 1\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(756): warning C4013: 'ALLOC_INIT_ZVAL' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(763): warning C4013: 'COPY_PZVAL_TO_ZVAL' undefined; assuming extern returning int\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(785): warning C4047: 'function': 'zval *' differs in levels of indirection from 'zval **'\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(785): warning C4024: '_zval_ptr_dtor': different types for formal and actual parameter 1\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(826): warning C4047: 'function': 'zval *' differs in levels of indirection from 'zval **'\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.h(826): warning C4024: '_zval_ptr_dtor': different types for formal and actual parameter 1\nd:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils.c(103): error C2065: 'tsrm_ls': undeclared identifier\nNMAKE : fatal error U1077: '\"D:\\dev\\Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe\"' : return code '0x2'\nStop.\nI have been able to build an hello world extension (without zephir) so i'm pretty confident my toolchain is setup right ... though i might have made some mistakes on the zephir part.\n. How can i compile for PHP7? is there a switch on zephir to turn it on? PHP sources retrieved as such\ngit clone -b PHP-7.0.0 --single-branch https://github.com/php/php-src.git . (so no PHP5 sources should be present AFAIK)\n. @steffengy thank you very much. Great work. The zephir hello world demo works now!\nFYI i think on windows you can not issue zephir build directly (it will give some errors). I found that the build process on windows is different than on linux (where you can use phpize). My zephir build commands:\nmkdir zep\ncd zep\nzephir init utils --backend ZendEngine3\ncd utils\ncp ../../greeting.zep utils\\greeting.zep\nzephir generate --backend ZendEngine3\nAnd then to generate core + extensions again:\nCD ..\nCD pecl\\zep\\utils\\utils\nzephir generate --backend ZendEngine3\nCD ../../../../\nnmake clean\nCALL buildconf --force --add-modules-dir=%CD%\\pecl\\zep\\utils\nCALL configure --enable-debug --enable-phpdbg --enable-utils=shared\nnmake\nCD Debug_TS\n(echo extension_dir = %CD% && echo extension = php_utils.dll) > php.ini\necho.\necho.\nphp -r \"echo Utils\\Greeting::say();\"\nthe zephir extension will be compiled along with it.\nIt's very frustrating (build times) not being able to compile a single extension on windows. Perhaps i could just call cl.exe myself because there doesn't seem to be a script for this (but this is a php issue, not zephir)\n. @steffengy that's good to know. Would you know how to use phpize on windows? Some sources claim it's not possible\nThe windows version of phpize seems to be broken (2012)\nOn Windows, you don't call phpize but instead you call buildconf.bat. (2015)\nMyself if i run phpize.bat i get:\nInput Error: Can not find script file \"D:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\win32\\build\\script\\phpize.js\".\nNow run 'configure --help'\nBecause of https://github.com/php/php-src/blob/PHP-7.0.0/win32/build/phpize.bat#L2-L3 where it sets the current directory and then the script directory is not available in the current directory.\nIs this a candidate for the php bugtracker, or am i doing wrong here and it should be possible like you say?\n. @steffengy devpack? Are you refering to these steps? bin\\phpsdk_buildtree.bat phpdev ?? I have done this..\nI noticed documentation is missing, i'm trying to write down the full procedure somewhere, but i got stuck at phpize...\n. Hi, thanks for your support again. I've been able to build phpize on windows with the instructions you gave me. Though it doesn't work yet (the makefile is incomplete) ... i'm still working on tracking down the problem with phpize. As for zephir i believe the build command in not supported on windows because of\nhttps://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L1178\nand\nhttps://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L1099\nThe WINDOWS.md file seems to be outdated indeed ...\nThe full output:\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils>zephir build\nCopying new kernel files...\nThe system cannot find the path specified.\nPreparing for PHP compilation...\nThe system cannot find the path specified.\nPreparing configuration file...\nCompiling...\nInstallation is not implemented for windows yet! Aborting!\nAlso when i didn't launch from the compiler environment but a regular prompt:\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils>zephir build\nCopying new kernel files...\nThe system cannot find the path specified.\nPreparing for PHP compilation...\nThe system cannot find the path specified.\nPreparing configuration file...\nERROR: Compiler not found\nCompiling...\nInstallation is not implemented for windows yet! Aborting!\nAt least there seems to be missing some logic there with messages like Compiler not found --> Compiling...\nPerhaps worth to open an issue for this?\n. @steffengy\nI think i was a bit too quick to come to the conclusion that the output failed. After i tried in the right environment (with compiler setup) i didn't check the files anymore. Anyway .. there seem to have been some files created:\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\vc140.idb\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\resp\\UTILS_GLOBAL_OBJS.txt\nSome questions about this:\n1. How can i build the DLL (extension as shared library). I noticed the config.w32 file which gets generated has EXTENSION(\"utils\", \"utils.c\", null, \"-I\"+configure_module_dirname); with 3rd parameter to null (should be true for shared library)\n2. Why are the path names so incredibly long? Seems to have taken a wrong basepath?\n3. Why am i getting those The system cannot find the path specified. messages, and which files are they referring to?\n. about 2. and 3. i will try to find this later ...\nabout 1. this is still a problem ... yes i made another mistake by forgetting to set the backend ... (checking the compiler logs was a good idea) ... though still no DLL file. php_utils.lib seems like a static binary.\nFile present:\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\php_utils.dll.manifest\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\php_utils.dll.res\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\php_utils.exp\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\php_utils.lib\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\vc140.idb\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\array.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\array.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\backtrace.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\backtrace.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\concat.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\concat.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\debug.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\debug.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\exception.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\exception.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\exit.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\exit.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\fcall.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\file.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\file.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\filter.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\filter.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\hash.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\hash.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\iterator.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\iterator.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\main.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\math.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\math.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\memory.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\memory.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\object.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\object.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\operators.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\operators.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\require.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\require.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\string.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\string.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\time.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\time.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\variables.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\variables.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\vc140.idb\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\extended\\array.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\extended\\array.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\extended\\fcall.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\extended\\fcall.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\kernel\\extended\\vc140.idb\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils\\greeting.zep.obj\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils\\greeting.zep.sbr\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\utils\\vc140.idb\nD:\\dev\\php7\\bin\\phpdev\\vc14\\x86\\pecl\\zep\\utils\\ext\\Release_TS\\resp\\UTILS_GLOBAL_OBJS.txt\ncompile.log\ncompile-errors.log\n. yes there is a problem with the linker ... i edited my previous comment and put the logs at the bottom. I have an itchy feeling it's because of the weird path ...\n. @steffengy yes you are right ... i would like to put everything on Debug until code is ready for Release. (I might need debug symbols for debugging)\n. @fezfez it's tough to figure out why the ForStatement class was written in this way. I mean why not use for like you suggested instead of while. So i think any optimization of this code needs first understanding of why it was written in such a way.\nIt would also be nice to compare assembly output of both solutions that way we can know what is the computational load on the cpu after gcc has done it's optimizations.\n. https://github.com/phalcon/zephir-docs/pull/41\n. PR got merged so this is resolved\n. > It actually does An \u2018optimizer\u2019 works like an interceptor for function calls..\nYes it's an interceptor, but the documentation doesn't show the actual function call which is then intercepted.\nLooking at your answer i would guess you have to store it in a double. Then looking at the documentation for doubles, i see i should use var number = 5.0; so i tried this, but then i couldn't assign the result of calculate_pi to number\n. ah yes you're right, i missed that piece\n. I tried\nvar pi;\nlet pi = calculate_pi(1000);\necho pi;\nwhich outputs 1\nand\ndouble pi = calculate_pi(1000);\necho pi;\nwhich output 2063507712.000000\nand\ndouble pi;\nlet pi = calculate_pi(1000);\necho pi;\nwhich output -1348910848.000000\nand my c code is:\n```\nifdef HAVE_CONFIG_H\ninclude \"config.h\"\nendif\ninclude \"php.h\"\ninclude \"php_ext.h\"\ndouble my_calculate_pi(zval *accuracy) {\n    return 0.0;\n}\n```\nso it doesn't seem to be functioning properly\nWhen i put this\necho calculate_pi(1);\nit works. I noticed in the last case zend_print_zval is used and in other cases php_printf(\"%f\", something-here); is used\n. I think these errors occurred because i didn't properly set the return type of the C function\n. Issue #1172 is about that preg_match is allowed (by the entire compiler) to produce code that segfaults. This issue is about the problem in the PregMatchOptimizer. If (and i don't know if this is so or not) Optimizers and responsible for the resulting code (without security by another part of the compiler) then these issues can be merged.\n. Why was this closed?\n. putting\nvar regs;\nlet regs = null;\nfixes the problem. However it would be better if the zephir compiler warns about this case\n. Being able to write code that parses correctly but segfaults seems like a clear bug to me. Why is this not considered a bug?\n. I forgot the specific case, but in case you have several optimizers calling the same function you can now pass information to C which function it was.\n. Ok worries for nothing ^^\n. Unfortunately not php: symbol lookup error: /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ext.so: undefined symbol: ParseAlloc\n. yes\n. @andresgutierrez i don't understand your comment. What do you mean \"alongside the extension\"? The source files? The objects files? The .so file?\nThe link you provide shows a list of source files, how is that related to linking with an object file??\nThis issue is still relevant to me.\n. At the moment i want a lot of control over the compiler flags i'm setting:\nsh\ngcc \\\n    -fPIC \\\n    -g3 \\\n    -c \\\n    -Wall\\\n    -Werror \\\n    -Wextra \\\n    -pedantic \\\n    -Wno-unused-but-set-variable \\\n    -Wno-unused-variable \\\n    -Wno-unused-parameter \\\n    -Wno-implicit-function-declaration \\\n    -std=c11 parser.c $(php-config --includes | sed 's/-I/-isystem /g')\nLater i was planning to use zephir to call into some Rust code (with C ABI). So the plain C files is really not a solution.\nBy the way ... i've read that instead of LDFLAGS it's better to use LDLIBS but i haven't tried that yet.\n. ",
    "listepo": "When the support hhvm?\n. ",
    "kshvakov": "D'oh! \nthanks\n. @ovr @nkt ping\n\u0415\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u043d\u0438\u0431\u0443\u0434\u044c \u043c\u044b\u0441\u043b\u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u0432\u043e\u0434\u0443 \u0438, \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0444\u0438\u043a\u0441 \u0438\u043b\u0438 \u043f\u043e\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u0430\u043a \u0444\u0438\u0447\u0443 ? )\n. \u0422\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u0432\u0430\u043b\u0435\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \nlogger/abstractlogger.zep.h:64:70: warning: unknown escape sequence: '\\H' [enabled by default]\n\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \"\u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\" )\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u0433\u0435\u043d\u0435\u0440\u0435\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \nZEND_BEGIN_ARG_INFO_EX(arginfo_test_logger_abstractlogger_sethandler, 0, 0, 1)\n    ZEND_ARG_OBJ_INFO(0, handler, Test\\Logger\\Handler\\HandlerInterface, 0)\nZEND_END_ARG_INFO()\n. @ovr \u043e\u0431\u043d\u043e\u0432\u0438\u043b \u043f\u043e\u0441\u043b\u0435 https://github.com/phalcon/zephir/commit/01703d88840f0f0a8347e1c12ca0229f925ab4c9 \n\u043e\u043a \n. @serg-deep \u0442\u0443\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441 \u043c\u0435\u0442\u043e\u0434\u043e\u043c getName(), \u0430 \u043d\u0435 \u043f\u044b\u0442\u0430\u0442\u044c\u0441\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443 \u0443 \"\u0447\u0435\u0433\u043e-\u0442\u043e\" \n. \u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u043f\u0438\u0448\u0435\u0442 \"Cannot locate class\", \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u043e\u043f\u0440\u043e\u0441, \u0447\u0442\u043e \u0437\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0438 \u043a\u0430\u043a \u0435\u0433\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c ? \nOutput  \u0441 verbose \n```\nZephir\\CompilerException: Unknown class entry for \"Core\\App\\Decorators\\AbstractDecorator\"\nat Library/ClassDefinition.php(1137)\n0 Library/ClassDefinition.php(673): Zephir\\ClassDefinition->getClassEntryByClassName('Core\\App\\Decorat...', Object(Zephir\\CompilationContext))\n1 Library/CompilerFile.php(136): Zephir\\ClassDefinition->compile(Object(Zephir\\CompilationContext))\n2 Library/CompilerFile.php(655): Zephir\\CompilerFile->compileClass(Object(Zephir\\CompilationContext), 'App\\Middleware\\...', Array)\n3 Library/Compiler.php(565): Zephir\\CompilerFile->compile(Object(Zephir\\Compiler), Object(Zephir\\StringsManager))\n4 Library/Compiler.php(636): Zephir\\Compiler->generate(Object(Zephir\\Commands\\CommandBuild))\n5 Library/Compiler.php(703): Zephir\\Compiler->compile(Object(Zephir\\Commands\\CommandBuild))\n6 Library/Compiler.php(771): Zephir\\Compiler->install(Object(Zephir\\Commands\\CommandBuild))\n7 Library/Commands/CommandAbstract.php(72): Zephir\\Compiler->build(Object(Zephir\\Commands\\CommandBuild))\n8 Library/Bootstrap.php(180): Zephir\\Commands\\CommandAbstract->execute(Object(Zephir\\Config), Object(Zephir\\Logger))\n9 compiler.php(21): Zephir\\Bootstrap::boot()\n10 {main}\n```\ngetClassEntryByClassName \u0435\u0433\u043e \u0442\u043e\u0447\u043d\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \n. \u0430\u0433\u0430, \u043d\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f \u044d\u0442\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u0435 \u0443\u0434\u043e\u0431\u043d\u043e, \u0435\u0441\u043b\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e getClassEntryByClassName \n. switch \u0432 getClassEntryByClassName\n. \u0430\u0433\u0430, \u043d\u043e \u0434\u043b\u044f pdo \nphp\n            case 'pdo':\n                $compilationContext->headersManager->add('ext/pdo/php_pdo_driver');\n                $classEntry = 'php_pdo_get_dbh_ce()';\n                break;\n            case 'pdostatement':\n                $compilationContext->headersManager->add('kernel/main');\n                $classEntry = 'zephir_get_internal_ce(SS(\"pdostatement\") TSRMLS_CC)';\n                break;\n            case 'pdoexception':\n                $compilationContext->headersManager->add('ext/pdo/php_pdo_driver');\n                $classEntry = 'php_pdo_get_exception()';\n                break;\n+\nphp\n            default:\n                if (!$check) {\n                    throw new CompilerException('Unknown class entry for \"' . $className . '\"');\n                } else {\n                    return false;\n                }\n\u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0438 \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u043b: \"\u043a\u0430\u043a \u0434\u043b\u044f \"pdo\" - \u044d\u0442\u043e \u0432\u0445\u0430\u0440\u0434\u043a\u043e\u0434\u0438\u0442\u044c \u0432  getClassEntryByClassName \u0438\u043b\u0438 \u043e\u043d\u043e \u0432\u0441\u0435 \u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 NS \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c ?\") \n. replace \nwhile getopts $options option\ndo\n  if [[ \"$option\" == \"c\" ]]; then\n    ZEPHIRDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n    sed \"s#%ZEPHIRDIR%#$ZEPHIRDIR#g\" bin/zephir > bin/zephir-cmd\n    chmod 755 bin/zephir-cmd\n    sudo cp bin/zephir-cmd /usr/local/bin/zephir\n    rm bin/zephir-cmd\n    exit 0\n  fi\ndone\nto\nwhile getopts $options option\ndo\n  if [[ \"$option\" == \"c\" ]]; then\n    cd ..\n    ZEPHIRDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n    sed \"s#%ZEPHIRDIR%#$ZEPHIRDIR#g\" bin/zephir > bin/zephir-cmd\n    chmod 755 bin/zephir-cmd\n    sudo cp bin/zephir-cmd /usr/local/bin/zephir\n    rm bin/zephir-cmd\n    exit 0\n  fi\ndone\nhttps://github.com/phalcon/zephir/commit/fa2fcccb016c718eb3af1932cf2bea052a6f782b#diff-19ad89bc3e3c9d7ef68b89523eff1987L27\n. \u041f\u0435\u0440\u0435\u0441\u043e\u0431\u0440\u0430\u043b https://yadi.sk/d/29Qga1ZGbHzNe\n. ```\nkshvakov@kshvakov-EX58-UD3R:~$ gdb /usr/local/sbin/php-fpm core-php-fpm.29317\nGNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\nhttp://www.gnu.org/software/gdb/bugs/.\nFind the GDB manual and other documentation resources online at:\nhttp://www.gnu.org/software/gdb/documentation/.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /usr/local/sbin/php-fpm...done.\n[New LWP 29317]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `php-fpm: pool pool_1                                                          '.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f31e29f65f0 in zval_refcount_p () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\n(gdb) bt full\n0  0x00007f31e29f65f0 in zval_refcount_p () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n1  0x00007f31e29f6b05 in zephir_memory_restore_stack_common () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n2  0x00007f31e29f6cd4 in zephir_memory_restore_stack () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n3  0x00007f31e2a28eb4 in zim_Akd_App_Execute__runController () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n4  0x0000000000946b96 in zend_call_function (fci=0x7fffa4088100, fci_cache=0x7fffa40880d0) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n    i = 1\n    original_return_value = 0x922a4b <_ecalloc+187>\n    calling_symbol_table = 0x7fffa4087f70\n    original_op_array = 0x7fff00000000\n    original_opline_ptr = 0x0\n    current_scope = 0x1852190\n    current_called_scope = 0x1852190\n    calling_scope = 0x1852190\n    called_scope = 0x1852190\n    current_this = 0x7f31e189c930\n    execute_data = {opline = 0x0, function_state = {function = 0x1853090, arguments = 0x7f31e952aae8}, op_array = 0x0, object = 0x7f31e189c930, \n      symbol_table = 0x1243d68 <executor_globals+360>, prev_execute_data = 0x7fffa4088600, old_error_reporting = 0x0, nested = 0 '\\000', \n      original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n      call_slots = 0x7f31e952aa88, call = 0x7f31e952aa88}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7f31e2a4eca0, calling_scope = 0x1f, called_scope = 0x1, object_ptr = 0x1a408d840}\n\n5  0x00007f31e2a09a8e in zephir_call_user_function () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n6  0x00007f31e2a0a2da in zephir_call_class_method_aparams () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n7  0x00007f31e2a27136 in zim_Akd_App_Execute__prepareControllerDecorators () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n8  0x0000000000946b96 in zend_call_function (fci=0x7fffa4088790, fci_cache=0x7fffa4088760) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n    i = 0\n    original_return_value = 0x922a4b <_ecalloc+187>\n    calling_symbol_table = 0x7fffa4088600\n    original_op_array = 0x7fff00000000\n    original_opline_ptr = 0x0\n    current_scope = 0x1852190\n    current_called_scope = 0x1852190\n    calling_scope = 0x1852190\n    called_scope = 0x1852190\n    current_this = 0x7f31e189c930\n\n---Type  to continue, or q  to quit---\n        execute_data = {opline = 0x0, function_state = {function = 0x1852f00, arguments = 0x7f31e952aad8}, op_array = 0x0, object = 0x7f31e189c930, \n          symbol_table = 0x1243d68 , prev_execute_data = 0x7fffa4088a40, old_error_reporting = 0x0, nested = 0 '\\000', \n          original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n          call_slots = 0x7f31e952aa88, call = 0x7f31e952aa88}\n        fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7f31e2a4eca0, calling_scope = 0x2d, called_scope = 0x1, object_ptr = 0x1a408d840}\n9  0x00007f31e2a09a8e in zephir_call_user_function () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n10 0x00007f31e2a0a2da in zephir_call_class_method_aparams () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n11 0x00007f31e2a2455f in zim_Akd_App_Execute_getData () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n12 0x0000000000946b96 in zend_call_function (fci=0x7fffa4088bd0, fci_cache=0x7fffa4088ba0) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n    i = 0\n    original_return_value = 0x922a4b <_ecalloc+187>\n    calling_symbol_table = 0x7fffa4088a40\n    original_op_array = 0x7fff00000000\n    original_opline_ptr = 0x0\n    current_scope = 0x1852190\n    current_called_scope = 0x184d270\n    calling_scope = 0x1852190\n    called_scope = 0x1852190\n    current_this = 0x7f31e1877540\n    execute_data = {opline = 0x0, function_state = {function = 0x1852870, arguments = 0x7f31e952aad0}, op_array = 0x0, object = 0x7f31e189c930, \n      symbol_table = 0x1243d68 <executor_globals+360>, prev_execute_data = 0x7f31e952a9f8, old_error_reporting = 0x0, nested = 0 '\\000', \n      original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n      call_slots = 0x7f31e952aa88, call = 0x7f31e952aa88}\n    fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7f31e2a4eca0, calling_scope = 0x18, called_scope = 0x1, object_ptr = 0x1a408d840}\n\n13 0x00007f31e2a09a8e in zephir_call_user_function () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n14 0x00007f31e2a0a2da in zephir_call_class_method_aparams () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n15 0x00007f31e2a1efe4 in zim_Akd_App_run () from /usr/local/lib/php/extensions/debug-non-zts-20131226/akd.so\nNo symbol table info available.\n16 0x00000000009a09bc in zend_do_fcall_common_helper_SPEC (execute_data=0x7f31e952a9f8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:558\n    ret = 0x7f31e952a598\n    opline = 0x7f31e9563b30\n    should_change_scope = 1 '\\001'\n    fbc = 0x184e170\n    num_args = 0\n\n17 0x00000000009a1193 in ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER (execute_data=0x7f31e952a9f8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:693\nNo locals.\n18 0x00000000009a0031 in execute_ex (execute_data=0x7f31e952a9f8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:363\n---Type  to continue, or q  to quit---\n        ret = 0\n        original_in_execution = 0 '\\000'\n19 0x00000000009a00ba in zend_execute (op_array=0x7f31e9562e18) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:388\nNo locals.\n20 0x000000000095bfab in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend.c:1330\n    files = {{gp_offset = 40, fp_offset = 48, overflow_arg_area = 0x7fffa4089180, reg_save_area = 0x7fffa40890c0}}\n    i = 1\n    file_handle = 0x7fffa408b4e0\n    orig_op_array = 0x0\n    orig_retval_ptr_ptr = 0x0\n    orig_interactive = 0\n\n21 0x00000000008c3ab3 in php_execute_script (primary_file=0x7fffa408b4e0) at /home/kshvakov/BUILD/php-5.6.0/main/main.c:2584\n    realfile = \"\\000\\000\\000\\000\\000\\000\\000\\000\\240\\361\\377\\177\\003\\000\\000\\000\\060\\245\\b\\244\\377\\177\\000\\000\\340\\244\\b\\244\\377\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\017\\244\\b\\244\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000 \\245\\b\\244\\377\\177\\000\\000|\", '\\000' <repeats 23 times>, \"\\210(\\254\\341\\061\\177\\000\\000\\340\\243\\b\\244\\377\\177\\000\\000\\260l\\207\\001\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000q\u0309\\347\\061\\177\\000\\000\\240\\221Y\\351\\061\\177\\000\\000p\\246\\b\\244\\377\\177\\000\\000\\340\\246\\b\\244\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\270\\244\\b\\244\\377\\177\\000\\000P\\250\\b\\244\\377\\177\\000\\000\u0124\\b\\244\\377\\177\\000\\000\\225\\060\\213\\347\\061\\177\\000\\000 \\245\\b\\244\\377\\177\\000\\000\\340\\254\"...\n    __orig_bailout = 0x7fffa408b560\n    __bailout = {{__jmpbuf = {16, 309534166724494921, 4375712, 140735945431104, 0, 0, 309534165587838537, -309368872437037495}, __mask_was_saved = 0, \n        __saved_mask = {__val = {25658272, 2, 139852314997296, 17, 40, 47, 139852342889881, 0, 25652400, 40, 139852216289077, 8589934596, 139852342911492, \n            7091318039310988591, 139852314551612, 0}}}}\n    prepend_file_p = 0x0\n    append_file_p = 0x0\n    prepend_file = {type = ZEND_HANDLE_FILENAME, filename = 0x0, opened_path = 0x0, handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {\n            len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, free_filename = 0 '\\000'}\n    append_file = {type = ZEND_HANDLE_FILENAME, filename = 0x0, opened_path = 0x0, handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {\n            len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, free_filename = 0 '\\000'}\n    old_cwd = 0x7fffa40891a0 \"/www/app/Lib/Extension/ext\"\n    use_heap = 0 '\\000'\n    retval = 0\n\n22 0x0000000000a1be99 in main (argc=6, argv=0x7fffa408d848) at /home/kshvakov/BUILD/php-5.6.0/sapi/fpm/fpm/fpm_main.c:1949\n    primary_script = 0x7f31e9562880 \"/www/srm/index.php\"\n    __orig_bailout = 0x0\n    __bailout = {{__jmpbuf = {0, 309534167915677257, 4375712, 140735945431104, 0, 0, 309534166722397769, -309368498659408311}, __mask_was_saved = 0, \n        __saved_mask = {__val = {0 <repeats 16 times>}}}}\n    exit_status = 0\n    cgi = 0\n    c = -1\n    use_extended_info = 0\n    file_handle = {type = ZEND_HANDLE_MAPPED, filename = 0x7f31e952a4b0 \"/www/srm/index.php\", opened_path = 0x0, handle = {fd = -380228792, fp = 0x7f31e9562b48, \n        stream = {handle = 0x7f31e9562b48, isatty = 0, mmap = {len = 772, pos = 0, map = 0x0, \n            buf = 0x7f31e9582000 <error: Cannot access memory at address 0x7f31e9582000>, old_handle = 0x0, old_closer = 0x0}, \n          reader = 0x8e02dc <_php_stream_read>, fsizer = 0x8c124e <php_zend_stream_fsizer>, closer = 0x8c1228 <php_zend_stream_mmap_closer>}},\n\n---Type  to continue, or q  to quit---\n          free_filename = 0 '\\000'}\n        orig_optind = 1\n        orig_optarg = 0x0\n        ini_entries_len = 0\n        max_requests = 1000\n        requests = 0\n        fcgi_fd = 0\n        request = {listen_socket = 0, fd = 3, id = 1, keep = 0, closed = 0, in_len = 0, in_pad = 0, out_hdr = 0x7fffa408b730, out_pos = 0x7fffa408b857 \"\", \n          out_buf = \"\\000\\006\\000\\000\\000\\000\\000\\000X-Powered-By: PHP/5.6.0\\r\\nContent-type: text/html; charset=UTF-8\\r\\n\\r\\narray(3) {\\n  [\\\"jsonrpc\\\"]=>\\n  string(3) \\\"2.0\\\"\\n  [\\\"id\\\"]=>\\n  string(13) \\\"540ec6502c293\\\"\\n  [\\\"error\\\"]=>\\n  array(2) {\\n    [\\\"co\"..., reserved = '\\000' , \n          env = 0x7f31e95281e0}\n        fpm_config = 0x7fffa408e900 \"\"\n        fpm_prefix = 0x0\n        fpm_pid = 0x7fffa408e918 \"\"\n        test_conf = 0\n        force_daemon = 1\n        force_stderr = 0\n        php_information = 0\n        php_allow_to_run_as_root = 0\n        func = \"main\"\n(gdb) \n.\n0  0x00007fccf7ed5459 in zval_refcount_p (pz=0x4) at /usr/local/include/php/Zend/zend.h:399\nNo locals.\n1  0x00007fccf7ed5934 in zephir_memory_restore_stack_common (g=0x7fccf81fea40 ) at /home/kshvakov/www/lib/Extension/ext/kernel/memory.c:156\n    i = 8\n    prev = 0x0\n    active_memory = 0x19d5300\n    active_symbol_table = 0x7fccf6d2cd70\n    __PRETTY_FUNCTION__ = \"zephir_memory_restore_stack_common\"\n\n2  0x00007fccf7ed5ae3 in zephir_memory_restore_stack () at /home/kshvakov/www/lib/Extension/ext/kernel/memory.c:325\nNo locals.\n3  0x00007fccf7f05db4 in zim_Akd_App_Execute__runController (ht=1, return_value=0x7fccf6d6ff10, return_value_ptr=0x7fffac2477d8, this_ptr=0x7fccf6d285b8,\nreturn_value_used=1) at /home/kshvakov/www/lib/Extension/ext/akd/app/execute.zep.c:487\n    _4 = 0x7fccf6d29c30\n    ZEPHIR_LAST_CALL_STATUS = 0\n    params = 0x7fccf6d68ca0\n    _1 = 0x7fccf6d70168\n    _5 = 0x7fccf6d28c00\n    _7 = 0x7fccf6d2d4a0\n    _8 = 0x7fccf6d6d488\n    method = 0x7fccf6d6f7b0\n    params_param = 0x0\n    methodArgs = 0x7fccf6d68b08\n    controllerData = 0x7fccf6d2d8c0\n    controller = 0x7fccf6d2c858\n    className = 0x7fccf6d67518\n    _0 = 0x19ae510\n    _2 = 0x7fccf6d256c0\n    _3 = 0x7fccf6d605f8\n    _6 = 0x7fccf6d3c328\n    _9 = 0x7fccf6d3c328\n    _10 = 0x7fccf6d256c0\n\n4  0x0000000000946b96 in zend_call_function (fci=0x7fffac2476d0, fci_cache=0x7fffac2476a0) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n    i = 1\n    original_return_value = 0x922a4b <_ecalloc+187>\n    calling_symbol_table = 0x7fffac247540\n    original_op_array = 0x7fff00000000\n    original_opline_ptr = 0x0\n    current_scope = 0x19ad190\n    current_called_scope = 0x19ad190\n    calling_scope = 0x19ad190\n    called_scope = 0x19ad190\n    current_this = 0x7fccf6d285b8\n\n---Type  to continue, or q  to quit---\n        execute_data = {opline = 0x0, function_state = {function = 0x19ae090, arguments = 0x7fccfea06c98}, op_array = 0x0, object = 0x7fccf6d285b8, \n          symbol_table = 0x1243d68 , prev_execute_data = 0x7fffac247be0, old_error_reporting = 0x0, nested = 0 '\\000', \n          original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n          call_slots = 0x7fccfea06c38, call = 0x7fccfea06c38}\n        fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fccf7f296a0, calling_scope = 0x1f, called_scope = 0x1, object_ptr = 0x1ac24ce30}\n5  0x00007fccf7ee7ab3 in zephir_call_user_function (object_pp=0x7fffac2477a0, obj_ce=0x19ad190, type=zephir_fcall_method, function_name=0x7fffac247810,\nretval_ptr_ptr=0x7fffac2477d8, cache_entry=0x7fffac2478b8, param_count=1, params=0x7fffac247ad0) at /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:400\n    params_ptr = 0x7fffac247720\n    params_array = 0x0\n    static_params_array = {0x7fffac247ad0, 0x7fccf6d6d0c8, 0x1f7f296a0, 0x7fccf6d2d698, 0x7fffac247770, 0x96215f <add_next_index_zval+76>, 0xedcd08, \n      0x251000005bd, 0x7fccf6d2ca88, 0x7fffac247810}\n    local_retval_ptr = 0x0\n    status = 0\n    fci = {size = 72, function_table = 0x19ad1b8, function_name = 0x7fffac247810, symbol_table = 0x0, retval_ptr_ptr = 0x7fffac2477d8, param_count = 1, \n      params = 0x7fffac247720, object_ptr = 0x7fccf6d285b8, no_separation = 1 '\\001'}\n    fcic = {initialized = 1 '\\001', function_handler = 0x19ae090, calling_scope = 0x19ad190, called_scope = 0x19ad190, object_ptr = 0x7fccf6d285b8}\n    zephir_globals_ptr = 0x7fccf81fea40 <akd_globals>\n    fcall_key = 0x7fccf6d29a60 \"_runcontroller\"\n    fcall_key_len = 31\n    fcall_key_hash = 10384784574749516437\n    temp_cache_entry = 0x0\n    old_scope = 0x19ad190\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n6  0x00007fccf7ee826f in zephir_call_class_method_aparams (return_value_ptr=0x0, ce=0x19ad190, type=zephir_fcall_method, object=0x7fccf6d285b8,\nmethod_name=0x7fccf7f32855 \"_runcontroller\", method_len=14, cache_entry=0x7fffac2478b8, param_count=1, params=0x7fffac247ad0)\nat /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:601\n    rv = 0x7fccf6d6ff10\n    rvp = 0x7fffac2477d8\n    fn = {value = {lval = 140518291329224, dval = 6,942526035808149e-310, str = {val = 0x7fccf6d6d0c8 \"\\b\", len = 0}, ht = 0x7fccf6d6d0c8, obj = {\n          handle = 4141273288, handlers = 0x0}, ast = 0x7fccf6d6d0c8}, refcount__gc = 1, type = 4 '\\004', is_ref__gc = 0 '\\000'}\n    mn = 0x7fccf6d2ca88\n    status = 0\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n7  0x00007fccf7f0421c in zim_Akd_App_Execute__prepareControllerDecorators (ht=0, return_value=0x7fccf6d27920, return_value_ptr=0x7fffac247e78,\nthis_ptr=0x7fccf6d285b8, return_value_used=1) at /home/kshvakov/www/lib/Extension/ext/akd/app/execute.zep.c:353\n    params_ = {0x7fccf6d6f7b0}\n    _25 = 0x0\n    _11 = 0x0\n    _20 = 0x0\n    _8 = 0x7fccf6d69800\n    _13 = 0x7fccf6d698a0\n    _22 = 0x7fccf6d297c0\n    _7 = 0x7fccf6d68928\n\n---Type  to continue, or q  to quit---\n        _12 = 0x7fccf6d68470\n        _21 = 0x9211a0 <_zend_mm_free_int+246>\n        ZEPHIR_LAST_CALL_STATUS = 0\n        found = 1 '\\001'\n        isAllowHttpMethod = 1 '\\001'\n        _17 = 1 '\\001'\n        currentLocation = 0x7fccf6d6c508\n        type = 0x7fccf6d6c238\n        items = 0x7fccf6d28968\n        method = 0x7fccf6d6f7b0\n        annotations = 0x7fccf6d2d738\n        requestMethod = 0x0\n        match = 0x0\n        matches = 0x0\n        params = 0x0\n        pattern = 0x0\n        key = 0x0\n        value = 0x0\n        _0 = 0x19ae510\n        _1 = 0x7fccf6d256c0\n        _2 = 0x7fccf6d605f8\n        _3 = 0x7fccf6d6cac0\n        _4 = 0x7fccf6d297c0\n        _5 = 0x7fccf6d67518\n        _6 = 0x7fccf6d6d310\n        _9 = 0x7fccf6d68940\n        _10 = 0x19ae510\n        _14 = 0x7fccf6d68488\n        _15 = 0x7fccf6d278d0\n        _16 = 0x0\n        _18 = 0x0\n        _19 = 0x7fccf6d74730\n        _23 = 0x7fffac247aa0\n        _24 = 0x0\n        _26 = 0xeda788\n8  0x0000000000946b96 in zend_call_function (fci=0x7fffac247d70, fci_cache=0x7fffac247d40) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n    i = 0\n    original_return_value = 0x922a4b <_ecalloc+187>\n    calling_symbol_table = 0x7fffac247be0\n    original_op_array = 0x7fff00000000\n    original_opline_ptr = 0x0\n    current_scope = 0x19ad190\n\n---Type  to continue, or q  to quit---\n        current_called_scope = 0x19ad190\n        calling_scope = 0x19ad190\n        called_scope = 0x19ad190\n        current_this = 0x7fccf6d285b8\n        execute_data = {opline = 0x0, function_state = {function = 0x19adf00, arguments = 0x7fccfea06c88}, op_array = 0x0, object = 0x7fccf6d285b8, \n          symbol_table = 0x1243d68 , prev_execute_data = 0x7fffac248020, old_error_reporting = 0x0, nested = 0 '\\000', \n          original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n          call_slots = 0x7fccfea06c38, call = 0x7fccfea06c38}\n        fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fccf7f296a0, calling_scope = 0x2d, called_scope = 0x1, object_ptr = 0x1ac24ce30}\n9  0x00007fccf7ee7ab3 in zephir_call_user_function (object_pp=0x7fffac247e40, obj_ce=0x19ad190, type=zephir_fcall_method, function_name=0x7fffac247eb0,\nretval_ptr_ptr=0x7fffac247e78, cache_entry=0x0, param_count=0, params=0x7fffac247f28) at /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:400\n    params_ptr = 0x0\n    params_array = 0x0\n    static_params_array = {0x1, 0x7fccf6d27db8, 0x1f7f296a0, 0x7fccf6d693f0, 0x7fffac247e10, 0x96215f <add_next_index_zval+76>, 0xedcd08, 0x251000005bd, \n      0x7fccf6d280a8, 0x7fffac247eb0}\n    local_retval_ptr = 0x0\n    status = 0\n    fci = {size = 72, function_table = 0x19ad1b8, function_name = 0x7fffac247eb0, symbol_table = 0x0, retval_ptr_ptr = 0x7fffac247e78, param_count = 0, \n      params = 0x0, object_ptr = 0x7fccf6d285b8, no_separation = 1 '\\001'}\n    fcic = {initialized = 1 '\\001', function_handler = 0x19adf00, calling_scope = 0x19ad190, called_scope = 0x19ad190, object_ptr = 0x7fccf6d285b8}\n    zephir_globals_ptr = 0x7fccf81fea40 <akd_globals>\n    fcall_key = 0x7fccf6d22340 \"_preparecontrollerdecorators\"\n    fcall_key_len = 45\n    fcall_key_hash = 14742411762346798437\n    temp_cache_entry = 0x0\n    old_scope = 0x19ad190\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n10 0x00007fccf7ee826f in zephir_call_class_method_aparams (return_value_ptr=0x0, ce=0x19ad190, type=zephir_fcall_method, object=0x7fccf6d285b8,\nmethod_name=0x7fccf7f3276b \"_preparecontrollerdecorators\", method_len=28, cache_entry=0x0, param_count=0, params=0x7fffac247f28)\nat /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:601\n    rv = 0x7fccf6d27920\n    rvp = 0x7fffac247e78\n    fn = {value = {lval = 140518291045816, dval = 6,9425260218059333e-310, str = {val = 0x7fccf6d27db8 \"\\b\", len = 0}, ht = 0x7fccf6d27db8, obj = {\n          handle = 4140989880, handlers = 0x0}, ast = 0x7fccf6d27db8}, refcount__gc = 1, type = 4 '\\004', is_ref__gc = 0 '\\000'}\n    mn = 0x7fccf6d280a8\n    status = 0\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n11 0x00007fccf7f01868 in zim_Akd_App_Execute_getData (ht=0, return_value=0x7fccf6d278a8, return_value_ptr=0x7fffac2483e0, this_ptr=0x7fccf6d285b8,\nreturn_value_used=1) at /home/kshvakov/www/lib/Extension/ext/akd/app/execute.zep.c:141\n    params_ = 0x7fffac247f28\n    ZEPHIR_LAST_CALL_STATUS = 0\n\n12 0x0000000000946b96 in zend_call_function (fci=0x7fffac2481b0, fci_cache=0x7fffac248180) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_execute_API.c:850\n    call_via_handler = 0\n\n---Type  to continue, or q  to quit---\n        i = 0\n        original_return_value = 0x922a4b <_ecalloc+187>\n        calling_symbol_table = 0x7fffac248020\n        original_op_array = 0x7fff00000000\n        original_opline_ptr = 0x0\n        current_scope = 0x19ad190\n        current_called_scope = 0x19a8270\n        calling_scope = 0x19ad190\n        called_scope = 0x19ad190\n        current_this = 0x7fccf6d256c0\n        execute_data = {opline = 0x0, function_state = {function = 0x19ad870, arguments = 0x7fccfea06c80}, op_array = 0x0, object = 0x7fccf6d285b8, \n          symbol_table = 0x1243d68 , prev_execute_data = 0x7fccfea06ba8, old_error_reporting = 0x0, nested = 0 '\\000', \n          original_return_value = 0x0, current_scope = 0x0, current_called_scope = 0x0, current_this = 0x0, fast_ret = 0x5a5a5a5a5a5a5a5a, delayed_exception = 0x0, \n          call_slots = 0x7fccfea06c38, call = 0x7fccfea06c38}\n        fci_cache_local = {initialized = 0 '\\000', function_handler = 0x7fccf7f296a0, calling_scope = 0x18, called_scope = 0x1, object_ptr = 0x1ac24ce30}\n13 0x00007fccf7ee7ab3 in zephir_call_user_function (object_pp=0x7fffac248280, obj_ce=0x19ad190, type=zephir_fcall_method, function_name=0x7fffac2482f0,\nretval_ptr_ptr=0x7fffac2483e0, cache_entry=0x7fffac248388, param_count=0, params=0x7fffac2484e0) at /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:400\n    params_ptr = 0x0\n    params_array = 0x0\n    static_params_array = {0x1, 0x7fccf6d27b40, 0x1f7f296a0, 0x7fccf6d27d18, 0x7fffac248250, 0x96215f <add_next_index_zval+76>, 0xedcd08, 0x251000005bd, \n      0x7fccf6d69040, 0x7fffac2482f0}\n    local_retval_ptr = 0x0\n    status = 0\n    fci = {size = 72, function_table = 0x19ad1b8, function_name = 0x7fffac2482f0, symbol_table = 0x0, retval_ptr_ptr = 0x7fffac2483e0, param_count = 0, \n      params = 0x0, object_ptr = 0x7fccf6d285b8, no_separation = 1 '\\001'}\n    fcic = {initialized = 1 '\\001', function_handler = 0x19ad870, calling_scope = 0x19ad190, called_scope = 0x19ad190, object_ptr = 0x7fccf6d285b8}\n    zephir_globals_ptr = 0x7fccf81fea40 <akd_globals>\n    fcall_key = 0x7fccf6d56630 \"getdata\"\n    fcall_key_len = 24\n    fcall_key_hash = 3682089691576051127\n    temp_cache_entry = 0x0\n    old_scope = 0x0\n    __PRETTY_FUNCTION__ = \"zephir_call_user_function\"\n\n14 0x00007fccf7ee826f in zephir_call_class_method_aparams (return_value_ptr=0x7fffac2483e0, ce=0x19ad190, type=zephir_fcall_method, object=0x7fccf6d285b8,\nmethod_name=0x7fccf7f2c9e4 \"getdata\", method_len=7, cache_entry=0x7fffac248388, param_count=0, params=0x7fffac2484e0)\nat /home/kshvakov/www/lib/Extension/ext/kernel/fcall.c:601\n    rv = 0x0\n    rvp = 0x7fffac2483e0\n    fn = {value = {lval = 140518291045184, dval = 6,9425260217747084e-310, str = {val = 0x7fccf6d27b40 \"\\b\", len = 0}, ht = 0x7fccf6d27b40, obj = {\n          handle = 4140989248, handlers = 0x0}, ast = 0x7fccf6d27b40}, refcount__gc = 1, type = 4 '\\004', is_ref__gc = 0 '\\000'}\n    mn = 0x7fccf6d69040\n    status = 0\n    __PRETTY_FUNCTION__ = \"zephir_call_class_method_aparams\"\n\n---Type  to continue, or q  to quit---\n15 0x00007fccf7efc87b in zim_Akd_App_run (ht=0, return_value=0x7fccf6d622c0, return_value_ptr=0x7fccfea066d0, this_ptr=0x7fccf6d256c0, return_value_used=0)\nat /home/kshvakov/www/lib/Extension/ext/akd/app.zep.c:282\n    params_ = 0x7fffac2484e0\n    _11 = 0x19ad480\n    _13 = 0x19ad5d0\n    _14 = 0x0\n    _16 = 0x0\n    _19 = 0x0\n    _21 = 0x0\n    _8 = 0x7fccf6d650c0\n    _7 = 0x7fccf6d276d0\n    ZEPHIR_LAST_CALL_STATUS = 0\n    _3 = 0x1808420\n    _1 = 0x7fccf6d257b0\n    currentLocation = 0x7fccf6d25a88\n    location = 0x7fccf6d25920\n    controllerName = 0x7fccf6d67518\n    exec = 0x7fccf6d285b8\n    data = 0x7fccf6d278a8\n    _0 = 0x7fccf6d653b0\n    _2 = 0x7fccf6d28120\n    _4 = 0x7fccf6d605f8\n    _5 = 0x7fccf6d27780\n    _6 = 0x7fccf6d653b0\n    _9 = 0x7fccf6d276e8\n    _10 = 0x7fccf6d62038\n    _12 = 0x7fccf6d65298\n    _15 = 0x0\n    _17 = 0x0\n    _18 = 0x7fccf6d55b38\n    _20 = 0x0\n    _22 = 0x0\n\n16 0x00000000009a09bc in zend_do_fcall_common_helper_SPEC (execute_data=0x7fccfea06ba8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:558\n    ret = 0x7fccfea066c8\n    opline = 0x7fccf6d14c10\n    should_change_scope = 1 '\\001'\n    fbc = 0x19a9170\n    num_args = 0\n\n17 0x00000000009a1193 in ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER (execute_data=0x7fccfea06ba8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:693\nNo locals.\n18 0x00000000009a0031 in execute_ex (execute_data=0x7fccfea06ba8) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:363\n    ret = 0\n    original_in_execution = 0 '\\000'\n\n---Type  to continue, or q  to quit---\n19 0x00000000009a00ba in zend_execute (op_array=0x7fccfea3f298) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend_vm_execute.h:388\nNo locals.\n20 0x000000000095bfab in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /home/kshvakov/BUILD/php-5.6.0/Zend/zend.c:1330\n    files = {{gp_offset = 40, fp_offset = 48, overflow_arg_area = 0x7fffac248770, reg_save_area = 0x7fffac2486b0}}\n    i = 1\n    file_handle = 0x7fffac24aad0\n    orig_op_array = 0x0\n    orig_retval_ptr_ptr = 0x0\n    orig_interactive = 0\n\n21 0x00000000008c3ab3 in php_execute_script (primary_file=0x7fffac24aad0) at /home/kshvakov/BUILD/php-5.6.0/main/main.c:2584\n    realfile = \"\\000\\000\\000\\000\\000\\000\\000\\000\\240\\361\\377\\177\\003\\000\\000\\000 \\233$\\254\\377\\177\\000\\000\u041a$\\254\\377\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\377\\231$\\254\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\020\\233$\\254\\377\\177\\000\\000|\", '\\000' <repeats 23 times>, \"\\210\\030\\372\\366\\314\\177\\000\\000\u0419$\\254\\377\\177\\000\\000\\260\\034\\235\\001\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000q\\214\\327\\374\\314\\177\\000\\000\\240Q\\247\\376\\314\\177\\000\\000`\\234$\\254\\377\\177\\000\\000\u041c$\\254\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\250\\232$\\254\\377\\177\\000\\000@\\236$\\254\\377\\177\\000\\000\\264\\232$\\254\\377\\177\\000\\000\\225\\360\\330\\374\\314\\177\\000\\000\\020\\233$\\254\\377\\177\\000\\000\u0422$\\254\"...\n    __orig_bailout = 0x7fffac24ab50\n    __bailout = {{__jmpbuf = {16, 290787723972535842, 4375712, 140736081481264, 0, 0, 290787722844268066, -290960782212241886}, __mask_was_saved = 0, \n        __saved_mask = {__val = {27079584, 2, 140518392345136, 17, 40, 47, 140518420237721, 0, 27073712, 40, 140518293649205, 8589934596, 140518420259332, \n            7091318039310988591, 140518391899452, 0}}}}\n    prepend_file_p = 0x0\n    append_file_p = 0x0\n    prepend_file = {type = ZEND_HANDLE_FILENAME, filename = 0x0, opened_path = 0x0, handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {\n            len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, free_filename = 0 '\\000'}\n    append_file = {type = ZEND_HANDLE_FILENAME, filename = 0x0, opened_path = 0x0, handle = {fd = 0, fp = 0x0, stream = {handle = 0x0, isatty = 0, mmap = {\n            len = 0, pos = 0, map = 0x0, buf = 0x0, old_handle = 0x0, old_closer = 0x0}, reader = 0x0, fsizer = 0x0, closer = 0x0}}, free_filename = 0 '\\000'}\n    old_cwd = 0x7fffac248790 \"/www/app/Lib/Extension/ext\"\n    use_heap = 0 '\\000'\n    retval = 0\n\n22 0x0000000000a1be99 in main (argc=6, argv=0x7fffac24ce38) at /home/kshvakov/BUILD/php-5.6.0/sapi/fpm/fpm/fpm_main.c:1949\n    primary_script = 0x7fccfea3ed00 \"/www/srm/index.php\"\n    __orig_bailout = 0x0\n    __bailout = {{__jmpbuf = {0, 290787720902305314, 4375712, 140736081481264, 0, 0, 290787723966244386, -290960537245882846}, __mask_was_saved = 0, \n        __saved_mask = {__val = {0 <repeats 16 times>}}}}\n    exit_status = 0\n    cgi = 0\n    c = -1\n    use_extended_info = 0\n    file_handle = {type = ZEND_HANDLE_MAPPED, filename = 0x7fccfea065e0 \"/www/srm/index.php\", opened_path = 0x0, handle = {fd = -22810680, fp = 0x7fccfea3efc8, \n        stream = {handle = 0x7fccfea3efc8, isatty = 0, mmap = {len = 950, pos = 0, map = 0x0, \n            buf = 0x7fccfea5e000 <error: Cannot access memory at address 0x7fccfea5e000>, old_handle = 0x0, old_closer = 0x0}, \n          reader = 0x8e02dc <_php_stream_read>, fsizer = 0x8c124e <php_zend_stream_fsizer>, closer = 0x8c1228 <php_zend_stream_mmap_closer>}}, \n      free_filename = 0 '\\000'}\n    orig_optind = 1\n\n---Type  to continue, or q  to quit---\n        orig_optarg = 0x0\n        ini_entries_len = 0\n        max_requests = 1000\n        requests = 0\n        fcgi_fd = 0\n        request = {listen_socket = 0, fd = 3, id = 1, keep = 0, closed = 0, in_len = 0, in_pad = 0, out_hdr = 0x7fffac24ad20, out_pos = 0x7fffac24ae47 \"\", \n          out_buf = \"\\000\\006\\000\\000\\000\\000\\000\\000X-Powered-By: PHP/5.6.0\\r\\nContent-type: text/html; charset=UTF-8\\r\\n\\r\\narray(3) {\\n  [\\\"jsonrpc\\\"]=>\\n  string(3) \\\"2.0\\\"\\n  [\\\"id\\\"]=>\\n  string(13) \\\"540ede2aacf1c\\\"\\n  [\\\"error\\\"]=>\\n  array(2) {\\n    [\\\"co\"..., reserved = '\\000' , \n          env = 0x7fccfea041e0}\n        fpm_config = 0x7fffac24d900 \"\"\n        fpm_prefix = 0x0\n        fpm_pid = 0x7fffac24d918 \"\"\n        test_conf = 0\n        force_daemon = 1\n        force_stderr = 0\n        php_information = 0\n        php_allow_to_run_as_root = 0\n        func = \"main\"\n```\n\u041a\u043e\u0434 \u0441\u043e\u0431\u0435\u0440\u0443 \u043d\u0430 zaets28rus@ \u0432\u044b\u0448\u043b\u044e \n. Zephir version 0.4.6a (master)\n. ",
    "fireburnheart2005": "It is working,thank you\n. I don't know your problem.But i only run zephir build and add file .so to php.ini,restart server and everything is successful.@ThanhNhan2103 please use markdown\n. Hi @ovr,I compile php version 5.5 and apache from source,i can run command phpize,this is my result:\nCannot find config.m4\nMake sure that you run '/build/php/bin/phpize' in the top level source directory of the module\nAnd this is root folder i compile php /build/php.I can build extension sucessful with zephir build .How can i compile php with zephir  ? Do i need setup zephir to new server linux which it does not  compile php and apache?\n. I had installed php5-dev and the command zephir fullclean was ok.\n. It is working,thank you @phalcon \n. ",
    "paulovitin": "I apply this fix @ovr and look:\n```\nZephir\\CompilerException: Method 'Myfile\\File::getBasename' called with a wrong number of parameters, the method has: 1, passed: 0 in /home/paulovitin/myfile/myfile/file.zep on line 7\n  return this->getBasename();\n----------------------------^\n\n```\nThis is my class for test:\n```\nnamespace Myfile;\nclass File extends \\SplFileInfo\n{\n    public function getBname()\n    {\n        return this->getBasename();\n    }\n}\n```\n. But the parameter is optional.\n. ",
    "prisis": ":+1: \n. Google translation  xD\nMy English is not very good , ah, understand your communication is not the problem. You see what I wrote in English estimate just look like regular expressions . . .\n. Off topic\nThx haha\n@fezfez really nice work,  now I can try to convert  my framework :D\n. Yeah but is only the fork :) https://github.com/narrowspark/framework/tree/develop, but first I need to finish some stuffs, than I will try it :) \n. ",
    "gsouf": "Trait is an usefull and powerfull feature, though it's only compatible with 5.4 and latter, it mays be used.\nTrait are very new in php and people dont use it a lot, mainly cause of 5.3 not being compatible, but i mays change over the years\nAnd we cant just merge trait method in the class that use it at the compilation because we wont be able to use the trait from the php code.\nI'm up to implement it because it's now in the core of php\n. By only merging traits into classes, you wlil break the API. Traits are not used only inside the library, they are also usable outside a library. Better no implement them rather than merge methods.\n. Trait are definitively not supported in php 5.3, right ?\n. Traits are not aimed to be merged into class.\nIf you want zephir to support this feature , just create another type specific to zephir, and call it mixin for instance.\nA php class that uses a trait is NOT compatible with php 5.3 and so should go for zephir.\nYou should see traits as a part of the public API, not as something used internaly in the library.\nSometimes traits are even not used internaly in the library, they are just utilities available for everyone that use the library.\nBelieve me or not, but merging traits into classes and throwing them away from the final extension will bring a lot of confusions.\n. @flip111 is problably one of the few to understand what a is a trait: a trait is a trait. \n. Sounds better like that !\n. Nice to see it merged ! I still have to provide docblocks parsing for class before going further\n. Hi @mruz \nThis is not the best option (and i highly deprecat it), but it's the only one you have right now : \n<?php echo $this->themeOption('version'); ?>\nSee the example here : https://github.com/phalcon/zephir/blob/master/templates/Api/themes/zephir/layout/layout.phtml#L40\nAn update is on the way. I will improve the access to variables like the version\n. @mruz When I writted the generator Zephir was missing the feature of the class docblock. Unfortunately i didnt have the time to learn how the parser works. \n@phalcon what's about the class docblock parsing ?\n. @mruz In the master branch, method projectConfig is available now in templates, see the example : \nhttps://github.com/phalcon/zephir/blob/master/templates/Api/themes/zephir/layout/layout.phtml#L43\n. @mruz it doesnt fit the needings\n. Now class docblock are available : \ncompilerFile->getClassDefinition()->getDocBlock() or compilerFile->getClassDefinition()->getParsedDocBlock()\n. You mean no new line ?  In your css use \u00b4\u00b4white-space : pre\u00b4\u00b4\n. I'll take care of this, just give me some time, i'll be very busy this week.\n. Or a global configurable sniffer !!\n. The error was still here. If you dont want to ship ext directory with your VCS it's good to be able to create it again. \nExt directory is the same for any project, it should be possible to create it again. That's the purpose of this method. \nCleaning the repository was not my purpose\n. It's not related to my commit : https://ci.appveyor.com/project/phalcon/zephir/build/97-\n. Is your goal to find real solution or to find workarround forever  ? Of course we can create file by hand, but we want zephir to do it for us, as it does when we do zephir init.\n. Thanks @phalcon, do you mean getcwd() instead ? \nI'm on the purpose to add a standard way to access it, maybe on the future it can be helpful and will avoid a whole refactoring, what's your though about that ?\n. @phalcon @ovr can you review it please ? \n. @ogarbe since the begining of zephir we want to avoid using composer or external dependencies. Instead we want to package everything in zephir itself. \nThat's why we even have written custom code for template generation instead of using some twig, or other template engine\n. The goal is to make zephir available as a standalone.\nIndeed there are composer depencies. The composer depencies are : \n- in require : the extensions that zephir needs to run. However composer cant install extension, it's only to make the composer.json correct with real dependencies for people that install it with composer.\n- in require-dev : it's the dependencies needed when we want to develop and contribute to zephir.\n. Only @phalcon will give you the reasons why, I think the most important is to keep things clear !\n. yes indeed, going to remove it\n. ",
    "jimthunderbird": "I tend to agree with what fezfez said. We might want to stabilize zephir before adding new features. With php parser and abstract syntax tree, we will always be able to merge the code in trait into individual classes.\n. In my tool PHP-To-C-Ext, it now allows using trait to build zephir based php extensions. Under the hood it just merge all functions in the trait into individual classes.\nhttps://github.com/jimthunderbird/php-to-c-extension#example-07\n. It would be nice if zephir support trait as a built-in structure, if not, right now I am still going the method merging ways, developers have options not to use trait.\nhttps://github.com/jimthunderbird/php-to-c-extension\n. Fezfez, I created a tool on top of the PHP Parser and your work, just making developers to more comfortably write php extension with php, feel  free to check out:\nhttps://github.com/jimthunderbird/php-to-c-extension\n. Yes, you can always convert your for loop into equivalent while loop. Check out my tool:\nhttps://github.com/jimthunderbird/php-to-c-extension#example-04\n. Yes that works great.\n. I figured it out, it's not a zephir issue, it is because the array that is passed in a empty.\n. I guess I figured it out...\nI was doing [path/to/zephir] install before to install zephir, when I am doing that, the built process is not working. But if I do: ./[path/to/zephir]/install-json and ./[path/to/zephir]/install, things start working...\n. ",
    "Nirlah": "+1\n. ",
    "aurimasniekis": "Any update on this?\n. ",
    "Green-Cat": "Should be possible now that support for php 5.3 is dropped.\n. I am encountering the same error. Is there any work around?\nMy reproduction code:\nphp\n        if (!isset(this->abc[this->i + this->peek])) {\n            //...\n        }\n. :+1: \n. :+1: \n. It works using \"fetch element, this->elements[key];\" instead of \"let element = this->elements[key];\"\n. :-1:\n. 0.6.0 is tagged (https://github.com/phalcon/zephir/tree/0.6.0), so you can just revert to it using git, then run ./install again.\nBut I think it would be much better to identify and solve the bug instead.\n. Zephir does not support use() for closures.\nAs a work around you can put the parameters in an array and use call_user_func_array.\n. Redis is really useful though. Many sites use it in production.\n. :+1: \n. :+1:\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Resubmitted against dev #1067.\n. Done, see #1064\n. Resubmited against dev #1068.\n. Done, see #1063\n. Resubmited against dev #1069.\n. @ovt oops, you're right.\n. Fixed\n. @steffengy rebased.\n. @andresgutierrez That is exactly what @steffengy is debating here, the zephir-lang org could serve as a fork of phalcon/zephir, but managed by @ovr. It's just a question of whether @ovr would approve PRs on the zephir-lang/zephir repo. I think that php7 support is a very pressing issue. How fast zephir supports php7 is likely to determine the popularity and future of the zephir project. So I would be strongly in support of whatever means necessary for accomplishing that support faster be it giving @steffengy (who by the way has done remarkable work so far on this) write access to the repo or using the zephir-lang organisation as a fork. I do not think that PRs with a massive number of commits are the most efficient way of accomplishing it though.\nAlso on the topic, I've had some very simple PRs pending for about 3 weeks now. I have some other CS and other misc improvement PRs lined up, depending on how these ones go, but at this point I am losing hope of anyone ever looking at them.\n. @andresgutierrez Okay thanks, I will resubmit them to the development branch.\n. :+1: \n. It is just a good practice, since a loose comparison (==) will match 0 to false and any positive integer or string to true. It can create bugs which are really hard to detect in cases where (for example) false is passed as a string or another similar small error.\n. Major :+1: \n. There is autoloading\n. There is also internal and deprecated.\n. :+1: \n. :+1: \n. phalcon/zephir-docs#39\n. php 5.3 has been EOL'd since august 2014 (over a year ago!).\nIt contains numerous bugs and security flaws, I would recommend upgrading regardless.\nEven php 5.4 has been EOL'd as of this September, so it is really time to upgrade to 5.5 at least.\nSee http://php.net/supported-versions.php\n. :+1: \n. Name of the class or self should work.\n. ",
    "baohanddd": "Hope implement traits soon +1\n. ",
    "Izopi4a": "+1\n. zephir build --backend ZendEngine3\ngives me\n```\nException: Unrecognized action \"ZendEngine3\"\n.\n=\n```\nmakes a difference. I wanted to check if phalcon will build, but unfortunatly it does not.\nI install my PHPs seperatly, but i can easily hack php and phpize to point to php7 directory.\nOr at least this is what i saw in zephir/Compiler.php.\nBut anyways, enough spam, I hope you can make phalcon run on php7 soon ( seems to me its out of my league to help you out.. :( )\n. Andres seems very busy lately, hopefully he is on it. \nI see a lot of packages across the web, almost ready with it. Waiting for salary to donate again to phalcon :D ( if it makes any difference )\n. I am very sorry for the spam, but because i am super exited, and constantly checking Phalcon repository  for commits about php 7, do you think you can say a very rough date, @andresgutierrez ?\n. yes, i have this [https://github.com/phalcon/cphalcon/branches] on bookmark and i am checking it like 20 times per day :-). I was just curious if you can just say a very rough estimation. Unfortunately i suck with C, but maybe you can tell if you need any help with some parts, and I will do my best to help you out.\n. ```\nWarning: Function \"length\" does not exist at compile time ....\n```\n```\nPHP Fatal error:  Uncaught exception 'RuntimeException' with message 'Call to undefined function length()'\n```\n. yes this works, it's what i am using, but according to this : http://docs.zephir-lang.com/en/latest/builtin-methods.html#string, its better to use build in methods\n. aha... so that's the secret.\nOk thanks :D\n. it doesnt work like that, as far as I know. If you want this to work, you have to use references. \nhowever if you try using references you get this message:\nZephir\\CompilerException: Zephir not support reference parameters for now. Stay tuned for https://github.com/phalcon/zephir/issues/203\nNow you can always try this:\n```\npublic static function test1(array params)\n    {\n        let params[\"test2\"] = 1234;\n        return params;\n    }\npublic static function test()\n{\n    array params;\n    let params = [];\n    let params[\"test\"] = 123;\n\n    let params = self::test1(params);\n\n    var_dump(params);\n    die();\n\n}\n```\n. pfff sorry didnt see that detail :D\nbut yea... same behavior for me aswell \n. i can confirm str_replace array works now\n. ok so, i made it for zephir to compile, it has to be use Phalcon\\Forms\\Form; not use \\Phalcon\\Forms\\Form;\nhowever i get an error while compiling the extension\n```\n cc -I. -I/home/user/myApp-zephir-ext/myApp/ext -DPHP_ATOM_INC -I/home/user/myApp-zephir-ext/myApp/ext/include -I/home/user/myApp-zephir-ext/myApp/ext/main -I/home/user/myApp-zephir-ext/myApp/ext -I/opt/php-5615/include/php -I/opt/php-5615/include/php/main -I/opt/php-5615/include/php/TSRM -I/opt/php-5615/include/php/Zend -I/opt/php-5615/include/php/ext -I/opt/php-5615/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /home/user/myApp-zephir-ext/myApp/ext/myApp/home/forms/newcars.zep.c  -fPIC -DPIC -o myApp/home/forms/.libs/newcars.o\n/home/user/myApp-zephir-ext/myApp/ext/myApp/home/forms/newcars.zep.c:17:48: fatal error: ext/phalcon/phalcon/forms/form.zep.h: No such file or directory\n #include \"ext/phalcon/phalcon/forms/form.zep.h\"\n                                                ^\ncompilation terminated.\nmake: *** [myApp/home/forms/newcars.lo] Error 1\n```\nwell there are 2 x phalcon in this path ext/phalcon/phalcon/forms/form.zep.h, but even if copy & paste the code so this path is legit in both, my app, and the phlacon location, still doesnt work.\nWould be awesome if someone can explain what does it want and where does it wants it\n. hmm, i dont know what php-cli is. but if i type /opt/php-5615/bin/php -m | grep \"phalcon\" i see it enabled there.\nbtw I made it work this way, but i think there is something fishy.\nonce you are inside the main folder of your zephir extendsion:\n1. create folder : ext/ext/phalcon/phalcon/\n2. copy all the files from github repo: cphalcon/ext/phalcon inside\n3. Voaya it's working like a charm\n. i think i got it.\ngo to zephir/parser ( directory )\n```\nmake clean\nphpize --clean\nphpize // this shouild php7 phpize, or user /opt/php7/bin/phpize\n./configure # or ./configure --with-php-config=_PATH_TO_php-config \n```\nafter that it will compile normally. \n. pfff, turns out to be an error in other file that i did not see. \nJust so i can use the same issue ... how can i  compile the parser extension manually so it doesn't compile every time ?\n. The way i fixed the same error : \ngo to zephir/parser ( directory )\n```\nmake clean\nphpize --clean\nphpize\n./configure\n```\nafter that it will compile normally when needed\n. i saw the force compile option, however i think project specific stuff can make the developer live easier. \nEasy to remove if you want. \n. the point is that my ubuntu comes with php 5.3 and no updates.\nI am always running latest php version, since in php 7 you have to use zephir build i am not able to specify my php version. In this way i can specify where the extension should be installed. \nhttps://github.com/phalcon/cphalcon/issues/11203#issuecomment-173178890\n. i am not gonna argue, but i am pretty sure people will start crying over this. Many people are compiling their php's. I am pretty sure i am not the only one, now i am force to edit my /etc/alternatives directory every single time i want to compile a php7 extension. \nThank you for the feedback. \n. also when i removed Phalcon\\Exception from my code this poped up\n```\nPHP Warning:  PHP Startup: Unable to load dynamic library '/opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/xxx.so' - /opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/xxx.so: undefined symbol: phalcon_validation_validator_presenceof_ce in Unknown on line 0\nPHP 7.0.4 (cli) (built: Mar  8 2016 10:14:21) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n```\n. ;extension=/opt/php-7001/lib/php/extensions/no-debug-non-zts-20151012/phalcon.so\nextension=/opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/phalcon.so\nextension=/opt/php-7001/lib/php/extensions/no-debug-non-zts-20151012/apcu.so\n;extension=/opt/php-7001/lib/php/extensions/no-debug-non-zts-20151012/zephir_parser.so\nextension=/opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/xxx.so\nphp -m\nroot@server1:/home/izopi4a/phalcon/ext (2.1.x)$> php -m\n[PHP Modules]\napcu\ncalendar\nCore\nctype\ncurl\ndate\ndom\nexif\nfileinfo\nfilter\ngd\nhash\niconv\nintl\njson\nlibxml\nmbstring\nmcrypt\nmysqli\nmysqlnd\nopenssl\npcre\nPDO\npdo_mysql\npdo_sqlite\nphalcon\nPhar\nposix\nReflection\nsession\nSimpleXML\nsockets\nSPL\nsqlite3\nstandard\ntidy\ntokenizer\nxml\nxmlreader\nxmlwriter\nzip\n[Zend Modules]\nxxx is not present.\nAs far as I understood you mean i need to load phalcon first and then my extension right ?\n. i will try with a blank app in 1 hour and update the issue, since its not clear at the moment\n. strangely enough if i create a Test app with Hello.zep\n```\nnamespace Test;\n/\n * This is a sample class\n */\nclass Hello extends \\Phalcon\\Mvc\\Model {\n    /\n     * This is a sample method\n     */\n    static public function say()\n    {\n        echo \"Hello World!\";\n    throw new \\Phalcon\\Exception();\n}\n\n}\n```\nwithout even adding anything to the config file it works perfect, i will take a close look tomorrow cuz i dont have enough time atm. and will update you.\n. so yea...\nif I remove this from my config everything works like a charm for me .... for whatever reason...\n```\n\"external-dependencies\": {\n        \"phalcon\": \"/home/izopi4a/phalcon\",\n }\n```\n. and probably same as my issue here : https://github.com/phalcon/zephir/issues/1191\n. http://docs.zephir-lang.com/en/latest/operators.html#fetch\n. i will report in 10 mins\n. great, thanks a lot.\nif someone could assist with https://github.com/phalcon/zephir/issues/1191 also i would love you forever :D\n. first go to zehpir/praser dir \nmake clean\nphpize --clean\nalso make sure it is not loaded in your php.ini\n. oh its a different thing, soz\n. @andresgutierrez just a reminder that you said you gonna look into this, i think after this one there should be something working afterwards.\n. on my way\n. my app doesnt work aswell. Still trying to remember how to show details about a core dump :D\nthis is what my coredump says \n``\nCore was generated by/opt/php-7004/bin/php-cgi'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f5f833dfc96 in zephir_call_function_opt () from /opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/phalcon.so\n```\n. tomorrow i will try to provide something indipendant if possible \n. this creates a seg fault for me, i will keep trying to find a proper indipendant way to crash it \n```\n$di = new \\Phalcon\\Di\\FactoryDefault();\nclass koko extends \\Phalcon\\Mvc\\Model {\n}\n$t = koko::find();\n```\nbut i dont get it ... @andresgutierrez does this code that I paste works for you ? And if it does how is it possible... there are many people getting the same error ... its very strange... If I give you teamviewer to my PC ( with ssh to my server ) to use it as much as you want to figure out what is wrong ? \nps. Jurigag example doesnt crash for me... \n. this crates a seg fault for me using @Jurigag example:\n```\nnamespace Test;\nclass Test extends AbstractExample\n{\n    public static function test2(<\\stdclass> test, <\\ArrayObject> test2)\n    {\n        var parameters, name, obj;\n        let parameters = [test, test2];\n        let name = \"Test\\Test\";\n    let obj = create_instance_params(name, [1,2]);\n    return obj;\n}\n\n}\n```\nif you put strings in it \nlet obj = create_instance_params(name, [\"aaaa\",\"bbbbb\"]);\nit does not crash but \n```\nstring(3) \"aaaa\"\nNULL\nobject(Test\\Test)#3 (2) {\n  [\"test2\"]=>\n  NULL\n  [\"test1\"]=>\n  string(3) \"aaaa\"\n}\n```\n. no crashes in this case, only when its \nlet obj = create_instance_params(name, [1,2]);\nperhaps i am stupid, and its normal do crash in this case ( i doubt but i have to ask )?\n. ``\nCore was generated by/opt/php-7004/bin/php-cgi'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007f180c91f716 in zephir_call_function_opt () from /opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/test.so\n```\n. when I try [1,2] this is what I get\n. holding refresh for 5 mins ( and tail -f the access log so approx 1000 requests ) no core dumps when\nlet obj = create_instance_params(name, [\"aaaa\",\"bbbbb\"]);\nif i put let obj = create_instance_params(name, [1,2,3]); \ni get this every single request:\n``\nroot@server1:/var/www/xxxxxxx/public (master)$> gdb /opt/php-7004/bin/php-cgi coredump-php-cgi.6239\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /opt/php-7004/bin/php-cgi...done.\n[New LWP 6239]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by/opt/php-7004/bin/php-cgi'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  0x00007fe07f31f716 in zephir_call_function_opt () from /opt/php-7004/lib/php/extensions/no-debug-non-zts-20151012/test.so\n```\n. https://github.com/Izopi4a/zephir_problem\nhere is the php i am running https://github.com/Izopi4a/zephir_problem/blob/master/php/run.php\nthe output is:\n```\nstring(5) \"bbbbb\"\nNULL\nobject(Test\\Test)#3 (2) {\n  [\"test2\"]=>\n  NULL\n  [\"test1\"]=>\n  string(5) \"bbbbb\"\n}\n```\n. internal server error ... \n[Tue Apr 26 13:16:25.913947 2016] [cgid:error] [pid 6232] [client xxxxxxxxxx:56125] End of script output before headers: php7-cgi\n. maybe you can give it a try before we give it to mr. Andres \n```\ngit clone https://github.com/Izopi4a/zephir_problem\nzephir fullclean\nzephir build --zendEngine=3\ncd php\nPHP7_EXECUTABLE run.php\n```\nme ... I am getting:\n```\nroot@server1:/home/izopi4a/test_zephir/test/php (master)$> php run.php\nSegmentation fault\n``\n. only when[1,2,3]` otherwise no\n. this is my output with your code\nobject(ArrayObject)#2 (1) {\n  [\"storage\":\"ArrayObject\":private]=>\n  array(2) {\n    [0]=>\n    string(3) \"asd\"\n    [1]=>\n    string(3) \"bcx\"\n  }\n}\nNULL\nobject(Test\\Test)#3 (2) {\n  [\"test2\"]=>\n  NULL\n  [\"test1\"]=>\n  object(ArrayObject)#2 (1) {\n    [\"storage\":\"ArrayObject\":private]=>\n    array(2) {\n      [0]=>\n      string(3) \"asd\"\n      [1]=>\n      string(3) \"bcx\"\n    }\n  }\n}\nand this php https://github.com/Izopi4a/zephir_problem/blob/master/php/run.php\n. gdb apache2 i guess ? output is:\n```\n(gdb) run -X\nStarting program: /usr/sbin/apache2 -X\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[Tue Apr 26 14:00:14.295304 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_LOCK_DIR} is not defined\n[Tue Apr 26 14:00:14.295385 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_PID_FILE} is not defined\n[Tue Apr 26 14:00:14.295402 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_RUN_USER} is not defined\n[Tue Apr 26 14:00:14.295411 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_RUN_GROUP} is not defined\n[Tue Apr 26 14:00:14.295436 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_LOG_DIR} is not defined\n[Tue Apr 26 14:00:14.348231 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_RUN_DIR} is not defined\n[Tue Apr 26 14:00:14.348937 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_LOG_DIR} is not defined\n[Tue Apr 26 14:00:14.348964 2016] [core:warn] [pid 27319] AH00111: Config variable ${APACHE_LOG_DIR} is not defined\nAH00526: Syntax error on line 74 of /etc/apache2/apache2.conf:\nInvalid Mutex directory in argument file:${APACHE_LOCK_DIR}\n[Inferior 1 (process 27319) exited with code 01]\n```\nnot your code also doesnt work ... you broke mine aswell :D\n. if i type source /etc/apache2/envvars in terminal. Then gdb apache2, then run -X browser is fine and output in terminal is :\n```\nroot@server1:/var/www/xxxxxxxxxx/public (master)$> gdb apache2\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\nhttp://www.gnu.org/software/gdb/bugs/.\nFind the GDB manual and other documentation resources online at:\nhttp://www.gnu.org/software/gdb/documentation/.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from apache2...(no debugging symbols found)...done.\n(gdb) run -X\nStarting program: /usr/sbin/apache2 -X\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nhttpd (pid 27219) already running\n[Inferior 1 (process 27335) exited normally]\n(gdb)\n(gdb)\n(gdb)\n(gdb) run -X\nStarting program: /usr/sbin/apache2 -X\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nhttpd (pid 27219) already running\n[Inferior 1 (process 27339) exited normally]\n(gdb) run -X\nStarting program: /usr/sbin/apache2 -X\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nhttpd (pid 27219) already running\n[Inferior 1 (process 27344) exited normally]\n(gdb) run -X\nStarting program: /usr/sbin/apache2 -X\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nhttpd (pid 27219) already running\n[Inferior 1 (process 27353) exited normally]\n(gdb)\n```\n. i dont think my details are worth it:\n```\n(gdb) bt full\n0  0x00007ffff724e110 in __poll_nocancel () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n1  0x00007ffff776823b in apr_wait_for_io_or_timeout () from /usr/lib/x86_64-linux-gnu/libapr-1.so.0\nNo symbol table info available.\n2  0x00007ffff776203a in apr_socket_recv () from /usr/lib/x86_64-linux-gnu/libapr-1.so.0\nNo symbol table info available.\n3  0x00007ffff797fb71 in ?? () from /usr/lib/x86_64-linux-gnu/libaprutil-1.so.0\nNo symbol table info available.\n4  0x00007ffff797e196 in apr_brigade_split_line () from /usr/lib/x86_64-linux-gnu/libaprutil-1.so.0\nNo symbol table info available.\n5  0x00005555555a6014 in ap_core_input_filter ()\nNo symbol table info available.\n6  0x00005555555c8fda in ?? ()\nNo symbol table info available.\n7  0x00005555555954f4 in ap_rgetline_core ()\nNo symbol table info available.\n8  0x0000555555597737 in ap_read_request ()\nNo symbol table info available.\n9  0x00005555555bd3fe in ?? ()\nNo symbol table info available.\n10 0x00005555555b4220 in ap_run_process_connection ()\nNo symbol table info available.\n11 0x00007ffff485f767 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\nNo symbol table info available.\n12 0x00007ffff485f96c in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\nNo symbol table info available.\n13 0x00007ffff48606b1 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\nNo symbol table info available.\n14 0x00005555555918ae in ap_run_mpm ()\nNo symbol table info available.\n15 0x000055555558b046 in main ()\nNo symbol table info available.\n```\n. just to be sum it up, @andresgutierrez this repo here creates seg fault for us 100% of the time.\nhttps://github.com/Izopi4a/zephir_problem\nthrere is a php folder with run.php file\n. omw\n. oh yea. This one seems to be fixed.\nPhalcon still doesnt work, but tomorrow i will dig to see what's going on.\nThank you @sergeyklay and @andresgutierrez :heart: \nman.... i was looking at this piece of code, it was one of things i could google and still failed to see it... man I suck ... \nHave a wonderful evening guys!\n. well next is :\n``\nCore was generated by/opt/php-7004/bin/php-cgi'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n0  zend_hash_index_exists (ht=0x0, h=0) at /home/izopi4a/php-7.0.4/Zend/zend_hash.c:2012\n2012            if (ht->u.flags & HASH_FLAG_PACKED) {\n(gdb)\n```\n. yes i will dig more tomorrow, definatly a different issue. Sorry i just wanted to say in case someone can see what's wrong right away.  My bad.\n. by 0 skill what's so ever, maybe \nhttps://github.com/phalcon/zephir/blob/afa8f618f713e55fa3cf9a28bace2cc046c3fd8d/kernels/ZendEngine3/array.c#L170\nshould become \ncase IS_STRING:\n       if (zend_symtable_exists(h, Z_STR_P(index))) {\n              if (zend_symtable_exists_ind(h, Z_STR_P(index))) {\n                   RETURN SUCCESS ; // ?\n              }\n      RETURN FAILURE; // ?\nit doesn even uses zend_hash_index_exists... nah nevermind i dont know. Hopefully someone can fix the other seg fault ...\n. the test i provided its working, however in my real case my code looks like this:\n```\nprivate function _castString(value){\n    let value = str_replace([\"\\\\\", \"\\\"\", \"'\"], \"\", value);\n\n    let value = filter_var(value, FILTER_SANITIZE_STRING);\n    return trim(stripcslashes(strip_tags(value)));\n}\n\n```\nin this case i get:\n```\n/home/izopi4a/test_zephir/test/ext/test/test.zep.c: In function \u2018zim_Test_Test_koko\u2019:\n/home/izopi4a/test_zephir/test/ext/test/test.zep.c:72:2: error: incompatible type for argument 1 of \u2018zephir_stripcslashes\u2019\n  zephir_stripcslashes(_0, &_4 TSRMLS_CC);\n  ^\nIn file included from /home/izopi4a/test_zephir/test/ext/test/test.zep.c:16:0:\n./kernel/string.h:82:6: note: expected \u2018struct zval \u2019 but argument is of type \u2018zval\u2019\n void zephir_stripcslashes(zval return_value, zval str);\n      ^\nmake:  [test/test.lo] Error 1\n/home/izopi4a/test_zephir/test/ext/test/test.zep.c: In function \u2018zim_Test_Test_koko\u2019:\n/home/izopi4a/test_zephir/test/ext/test/test.zep.c:72:2: error: incompatible type for argument 1 of \u2018zephir_stripcslashes\u2019\n  zephir_stripcslashes(_0, &_4 TSRMLS_CC);\n  ^\nIn file included from /home/izopi4a/test_zephir/test/ext/test/test.zep.c:16:0:\n./kernel/string.h:82:6: note: expected \u2018struct zval \u2019 but argument is of type \u2018zval\u2019\n void zephir_stripcslashes(zval return_value, zval str);\n      ^\nmake:  [test/test.lo] Error 1\n```\n. omw\n. @ovr \n. I am not sure its a phalcon issue thats why I opened it here. \nif I do \ncd zephir;\ngit checkout master\ngit pull origin master\nand compile my shop extension i get the validation error.\nHowever ... If I do \ncd zephir\ngit checkout 58d81e22e88a8959a8ea0bf0ec32df2958a05116\nwhich is this https://github.com/phalcon/zephir/commit/58d81e22e88a8959a8ea0bf0ec32df2958a05116 and i compile again. Its working. Without touching phalcon in any way. \nWhat do you think ? is It a phlaon or zephir issue :)\n. seems fine with latest 3.0.x branch in Phalcon.\nGuess you were right ( as usual )  @sergeyklay  :D\n. Yes i know, i was just wondering if its like ~30 mins to be implemented, cuz its nice :D . Its not big deal its just nice. \nBut if Andress / Steffengy says its pointless we can close it.\n. the other nice feature I miss is \n$data = ( new MyClass() ) -> getData();\n:D . But i guess its too much to be implemented.\n. http://sandbox.onlinephpfunctions.com/code/cadf7fff7b61d2f7f3d61a48087afc5b783447a8\nguess nested short if isnt perfect ? \n. sorry i suck with unit tests, if someone can tell me what is wrong with Travis i would be grateful...\n. you cant. I use public static instead\n. i suggest dropping  5.4 and 5.5 support \nhttp://php.net/supported-versions.php. i am used to see what's the default parameter, but if you agree i will change it back to array\n. ",
    "gtux": "+1\n. I do not test it, but I think is because the string for search are escaped, change it to:\nzephir\nlet search = [\n            \"/\\\\>\\\\r?\\\\n\\\\s*(\\\\r?\\\\n)?/\",  // strip whitespaces after tags, except space\n            \"/[^\\\\S ]+\\\\</s\",  // strip whitespaces before tags, except space\n            \"/(\\\\s)+/s\"       // shorten multiple whitespace sequences\n        ];\n        let replace = [\n            \">\",\n            \"<\",\n            \"\\\\\\\\1\"\n        ];\n. ",
    "kuzmichus": "+1\n. +1\n. ",
    "Jurigag": "+1\n. I will try to add trait support for PHP only, support for zephir itself will be too hard for me i guess.\n. But the problem with traits is that internal traits started working just from latest php 7.0.12 for php 7, didn't check php 5 yet.\nSo currently if traits would be added then in php 7 when using in zephir they would work for 7.0.0, but using them in php is working from 7.0.12\n. Because it was mainly done for writing phalcon and its features were driven by phalcon development.. Exactly. If not added references directly in zephir at least yet i would like see support for something like this code maybe earlier if there is less problem:\n```php\nclass MyValidation extends \\Phalcon\\Validation\n{\n    public function beforeValidation(&$data, $entity, $messages)\n    {\n        $data['test'] = 'asdasdasd';\n    }\n}\n$validation = new MyValidation();\n$validation->add('test', new \\Phalcon\\Validation\\Validator\\PresenceOf());\nvar_dump($validation->validate(['asd' => 'xyz']));\n```\nvalidate method executes beforeValidation and further checks data variable, with this code data is just becoming unknown type.. Anyway idea of runtime and writing zephir code in zephir i think was dropped but not sure about it, compilation of this runtime think is not possible atm i last checked.. Yea bottleneck is io for sure. But still, it's still faster than laravel/symfony in real application even with database.. We need to consider two things that implementing trait for being used for PHP can be sone really east, just pretty much this PR + a few small changes in Library so trait keyword will be recognized and correctly compiled as trait - the biggest issue is that INTERNAL trait itself in php 7 is supported from something like php 7.0.11 and later as i checked - otherwise there is just seg fault, it's php issue and it was fixed on 7.0.11.\nNot sure about php 5, it's possible that same thing is happening.\nBut if we would like to have trait working within zephir itself - there will be much more work to do, because C doesn't have things like traits - we would need to somehow copy methods, headers etc, not sure exactly.. I agree, anyway i think we don't need trait in zephir itself, and implementing them for PHP will be easy job - but as i wrote - the problem is php support for internal trait, the only way i see here is to throw exception traits are not supported on php 7.0.0-7.0.10. @steffengy\nCould this be fixed/implemented ?\nI actually need this feature to add some new feature to phalcon.\n. Well get_object_vars don't work in my case :P But i used ArrayObject.\n. @steffengy that would be nice to have though.\nJust bumping\n. Well there is related phalcon issue to which requires this fix/feature to be implemented.. Could this be somehow implemented @sjinks ? Lately i added factories to phalcon so for example we can do something like:\n```php\nuse Phalcon\\Db\\Adapter\\Pdo\\Factory;\n$config = new Phalcon\\Config\\Ini('config.ini');\n$di->setShared('db', Factory::load($config->database));\n```\nBut obviously on this point it will create database adapter object, i just wonder if this could be implemented so i could add some method like loadAsCallback which will simply be:\npublic static function loadAsClosure(options) \n{\n    return function() use (options) {\n        return Factory::load(options);\n    }\n}\nOr there is some other workaround for this? Is something like this gonna work:\n```\npublic static function loadAsClosure(options) \n{\n    var f;\nlet this->options = options;\n\nlet f = function() {\n    return Factory::load(this->options);\n}\n\nf->bindTo(this);\n\nreturn f;\n\n}\n```\n?\nWell already can tell it won't work.. Well PHP7 finally realased, i hope you will work now more on Zephir and phalcon to be avilable on php7 too :).\n. Could it be possible to introduce internal classes? @andresgutierrez . But what he talks about here @sergeyklay that else if condition shouldn't be executed at all if first condition is true. Just method is not ending after return point. Simple as that.. Yea i just figure it out i can just use ReflectionFunction\n. Why exactly this is still not merged ?\n. @andresgutierrez @sergeyklay Well asking above question again i guess.. Yea but THIS IS PR, not issue meaning implemented by @mruz, so why not merge it?. Oh, okay.. Sholdn't we use:\nzephir build --backend=ZendEngine3\nfor php 7 ? Or zephir already figure it out ? Beacause in phalcon you have to use it to compile 2.1.x for php7.\n. > Trying with master branch too\n. Yes, it's working, test in Phalcon Phalcon\\Config\\Ini(which is using method_exists)::toArray() now is passing\n. On php7 i have errors too.\n. Well not working :x To be sure i mean zephir/runtime. To have zephir working as JIT runtime.\n. Closing for now, hope in some day we will get it working. Also are you still gonna work on it if php will release JIT ? I guess then there will be almost no point creating runtime/JIT(i don't know if they are the same) for zephir ?\n. Well zephir is not support string templates from php.\nhttp://php.net/manual/en/language.types.string.php#language.types.string.parsing.complex\n. @sergeyklay yea i know but:\nClassName::SOMETHING it's working as array key. Cant compiler figure out in which class is self called ?\n. I had to do fullclean to make it working cuz i forget about uses.\n. Well. I will check when having a time. I think i checked it on php 5.6. I think its for loop problem. Beacause get_object_vars return same thing in all php versions both in zephir and php user land.\n. Yea i wonder too @steffengy @andresgutierrez it's a bug, right ?\n. As i remember before loop types are fine, as in php, it's beacause key is var type, if you will make it as int then it will work as it should be. But in php 5.x it was working fine(right types).\n. Yea but it should be integer to make it work. On php 7 there is string returned, on php 5 integer. Maybe it's just not casted on php7.\n. Yea but it looks like ? That numeric string in phalcon php5 are casted to integer, and on phalcon php7 it doesn't that's why this https://github.com/phalcon/cphalcon/blob/master/phalcon/config.zep#L238 doesn't work here.\nNot sure how i should call this issue though.\n. Im not sure if it's about tests, more likely phalcon code.\n. It needs to be fixed somewhere in C i guess ? I just reported the issue. Don't know how to fix it. I would do PR if i knew.\n. @ulfims you checked it ? Is it fixing an issue ?\nStill for me it's a bug, it's working fine on php 5.x\n. And it's not throwing exception ?\nStill it's bug and issue. Better to fix this in zephir than changing it everywhere.\n. Beacause it just works how it should be. Zephir as i know was developed in way that you don't need to put unnecessary brackets in if conditions for example. I guess maybe php itself changed something, i don't know.\n. @ulfims \nI guess it's not working beacause compileAlways is passed from php.\n. Also as i wrote if you change type of dataBoolean to bool and cast type of options[\"compileAlways\"] to bool in zephir it's working fine.\n. I just posted it:\n``` php\nuse Phalcon\\Mvc\\View;\n$di = new \\Phalcon\\Di\\FactoryDefault();\n$di->set('view',function(){\n    $view=new \\Phalcon\\Mvc\\View\\Simple;\n    $view->registerEngines([\n        '.volt'=>'Phalcon\\Mvc\\View\\Engine\\Volt' // this will produce error beacause it will be passed here as string https://github.com/phalcon/cphalcon/blob/2.1.x/phalcon/di.zep#L235(name parameter)\n    ]);\n    return $view;\n});\n```\n. Something like this maybe ?:\n```\nnamespace Test;\nclass Test\n{\n    public test;\n    public function __construct(string test)\n    {\n        let this->test = test;\n    }\npublic static function test()\n{\n     return create_instance_params(\"Test\\\\Test\",[\"test\"]);\n}\n\n}\n```\nAnd then in php:\nphp\nuse Test\\Test;\n$test=Test::test();\n. @andresgutierrez well this code above works, then i guess maybe its some parameters or __construct in phalcon ? Not sure.\nWell i didn't have crash dump on php debug version but managed to get it from \ngdb apache2\nrun -X\n```\n0  0x00007fe5c55d8ddd in zval_refcount_p (pz=0x7fff809459e0) at /root/.phpbrew/php/7.0.5-debug/include/php/Zend/zend_types.h:812\n812             return GC_REFCOUNT(Z_COUNTED_P(pz));\n(gdb) bt\n0  0x00007fe5c55d8ddd in zval_refcount_p (pz=0x7fff809459e0) at /root/.phpbrew/php/7.0.5-debug/include/php/Zend/zend_types.h:812\n1  0x00007fe5c55d9433 in zephir_memory_restore_stack_common (g=0x7fe5ccfcdca0 ) at /root/2.1.x-orig/ext/kernel/memory.c:131\n2  0x00007fe5c55d990d in zephir_memory_restore_stack (func=0x0) at /root/2.1.x-orig/ext/kernel/memory.c:229\n3  0x00007fe5c57d31b6 in zim_Phalcon_Di_Service_resolve (execute_data=0x7fe5cd2131a0, return_value=0x7fff809463d0)\nat /root/2.1.x-orig/ext/phalcon/di/service.zep.c:342\n\n4  0x00007fe5c55ec44e in zephir_call_function_opt (fci=0x7fff80946110, fci_cache=0x7fff809460e0, info=0x7fff809461f0, params=0x7fff80946460)\nat /root/2.1.x-orig/ext/kernel/extended/fcall.c:1150\n\n5  0x00007fe5c55e6bae in zephir_call_user_function (object_pp=0x7fff809463b0, obj_ce=0x7fe5dac1ac70, type=zephir_fcall_method,\nfunction_name=0x0, retval_ptr=0x7fff809463d0, cache_entry=0x0, cache_slot=0, param_count=2, params=0x7fff80946460, info=0x7fff809461f0)\nat /root/2.1.x-orig/ext/kernel/fcall.c:453\n\n6  0x00007fe5c55e7372 in zephir_call_class_method_aparams (return_value_ptr=0x7fff809463d0, ce=0x7fe5dac1ac70, type=zephir_fcall_method,\nobject=0x7fff809463b0, method_name=0x7fe5c5bd1b67 \"resolve\", method_len=7, cache_entry=0x0, cache_slot=0, param_count=2, \nparams=0x7fff80946460) at /root/2.1.x-orig/ext/kernel/fcall.c:653\n\n7  0x00007fe5c56710ab in zim_Phalcon_Di_get (execute_data=0x7fe5cd213130, return_value=0x7fe5cd213100)\nat /root/2.1.x-orig/ext/phalcon/di.zep.c:519\n\n8  0x00007fe5d452efaa in ZEND_DO_FCALL_SPEC_HANDLER () at /root/.phpbrew/build/7.0.5-debug/Zend/zend_vm_execute.h:842\n9  0x00007fe5d452de2c in execute_ex (ex=0x7fe5cd213030) at /root/.phpbrew/build/7.0.5-debug/Zend/zend_vm_execute.h:414\n10 0x00007fe5d452df3e in zend_execute (op_array=0x7fe5cd276000, return_value=0x0)\nat /root/.phpbrew/build/7.0.5-debug/Zend/zend_vm_execute.h:458\n\n11 0x00007fe5d44d2afe in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /root/.phpbrew/build/7.0.5-debug/Zend/zend.c:1427\n12 0x00007fe5d443fd69 in php_execute_script (primary_file=0x7fff809488f0) at /root/.phpbrew/build/7.0.5-debug/main/main.c:2487\n13 0x00007fe5d459280d in php_handler (r=0x7fe5d8b5d0a0) at /root/.phpbrew/build/7.0.5-debug/sapi/apache2handler/sapi_apache2.c:678\n14 0x00007fe5d8a57be0 in ap_run_handler ()\n15 0x00007fe5d8a58129 in ap_invoke_handler ()\n16 0x00007fe5d8a6d6ca in ap_process_async_request ()\n17 0x00007fe5d8a6d9a4 in ap_process_request ()\n18 0x00007fe5d8a6a442 in ?? ()\n19 0x00007fe5d8a61220 in ap_run_process_connection ()\n20 0x00007fe5d5092767 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\n21 0x00007fe5d50929a6 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\n22 0x00007fe5d5092a06 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\n23 0x00007fe5d50936e0 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so\n24 0x00007fe5d8a3e8ae in ap_run_mpm ()\n25 0x00007fe5d8a38046 in main ()\n```\nAlso i got it only with export USE_ZEND_ALLOC=0 otherwise blank page. I don't know what's going on, maybe it's some phalcon problem in code.\n. @andresgutierrez \nAlso i wonder if there is any way to compile phalcon and/or zephir with debugging symbols ? So it will tell lines etc ?\n. @andresgutierrez \nIt's weird. I only manage to get same stack from original post only on non-debug version. ~~Also it's generated only as crash dump. If i try to gdb apache2 and then run-X then there is no stack on non-debug but there is stack on debug version which i posted above.~~\nWell actually i have original stack using both gdb apache2 and crash dump. But on debug version i have only other stack.\nAlso i mean this problem from original post. Don't know how to reproduce it on non-phalcon.\n. I updated stack from debug version with debugging symbols from phalcon.\n. Oh. You have to render something. I forgot about this ! Sorry !\nphp\n$view = $di->get('view');\necho $view->render('test.volt');\ntest.volt:\nasdasdasdasdas\nWell i just added in Phalcon\\Mvc\\View\\Engine::__construct \nvar_dump(view);\n        var_dump(dependencyInjector);\n        die();\nAnd the result is:\nhttp://pastebin.com/SaMEF5eQ\n~~So there is no view object and there is unexpected UNKOWN:0 on the end.~~\nActually view is this first object and for some reason its type of Phalcon\\Di\\FactoryDefault, UNKOWN:0 is dependencyInjector. What's going on ? Shouldn't it throw some exception from zephir beacause of <ViewBaseInterface> view ?\n. It doesn't work for me or many more people. And after changing class name as string function which return new volt object it works. So don't know what's going on. I justed wroted above what is view and dependencyInjector in __construct method.\nI have:\n```\nPhalcon 2.1.x\nZephir 0.9.2a\nPHP API => 20151012\nPHP Extension => 20151012\nZend Extension => 320151012\nZend Extension Build => API320151012,NTS\nPHP Extension Build => API20151012,NTS\nDebug Build => no\nThread Safety => disabled\nZend Signal Handling => disabled\nZend Memory Manager => disabled\nZend Multibyte Support => provided by mbstring\nIPv6 Support => enabled\nDTrace Support => disabled\nRegistered PHP Streams => https, ftps, compress.zlib, compress.bzip2, php, file, glob, data, http, ftp, phar, zip\nRegistered Stream Socket Transports => tcp, udp, unix, udg, ssl, sslv3, tls, tlsv1.0, tlsv1.1, tlsv1.2\nRegistered Stream Filters => zlib., bzip2., mcrypt., mdecrypt., string.rot13, string.toupper, string.tolower, string.strip_tags, convert.*, \nconsumed, dechunk\nThis program makes use of the Zend Scripting Language Engine:\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\nExtensions\nCore, date, libxml, openssl, pcre, sqlite3, zlib, bcmath, bz2, calendar, ctype, dom, fileinfo, filter, gettext, hash, json, mbstring, mcrypt, SP\nL, session, pcntl, standard, PDO, mysqlnd, pdo_pgsql, pdo_sqlite, pgsql, Phar, posix, readline, Reflection, pdo_mysql, shmop, SimpleXML, sockets\n, mysqli, sysvmsg, sysvsem, sysvshm, tokenizer, xml, xmlreader, xmlwriter, xsl, zip, test, phalcon\nDatabase Extensions\nsqlite3\nPDO\nmysqlnd\npdo_pgsql\npdo_sqlite\npgsql\npdo_mysql\nmysqli\n```\n. Yes, i just compiled phalcon again. And yes. I have same result as you but view is not rendered and crash dump is generated.\n. Also what i wrote here:\nhttps://github.com/phalcon/zephir/issues/1218#issuecomment-214096412\nIs still the same on newest zephir, view is di, and di is UNKOWN:0. Looks like parameters are passed somehow wrong. At least on Ubuntu(?).\nThere are parameters which are passed here - https://github.com/phalcon/cphalcon/blob/2.1.x/phalcon/di.zep#L235\nhttp://pastebin.com/DVBnK9EL\nAnd as i wrote above there are value of those parameters in Phalcon\\Mvc\\View\\Engine:__construct() https://github.com/phalcon/cphalcon/blob/2.1.x/phalcon/mvc/view/engine.zep#L40 method - http://pastebin.com/SaMEF5eQ\nSomething is not right, at least for me. @andresgutierrez \nI don't know, maybe it's right, i will check it later on php 5.6 if it returns same thing. Now im going sleeping cuz i already spend much time.\nBut did you even have view rendered ? Beacause var_dump($view) for me after render is working too but view is not rendered and crash dump is produced.\nI will check again soon on updated zephir.\nEDIT: Still the same problem\nThought that newest commit on zephr with builddev and debug version will show something more, but stack i same as above.\n. Checked it on php 5.6.19 - \nhttp://pastebin.com/9Yse8KCa\nSo it looks like it should be\n. How about differ between debug and non-debug version ? It's normal i guess ? On debug version this problem is \"detected\" earlier but root is the same ?\nYea they are invalid beacause i guess beacause its looking for types in __construct and they obviously wrong beacause as view we got Di, as di we got UNKOWN:0 as i wrote above. I guess this UNKOWN:0 is causing segfault actually.\nThis create_instance_params is passing parameters to construct method in some kind of wrong way beacause it's incrementing their indexes by 1(looks like that).\nBut i don't have any idea why sample without phalcon support works then.\n. Still the same for me. The result is same as i wrote above(view is di, di is UNKOWN:0) in __construct method of engine.\n. There you go:\nabstractexample.zep\n``` zephir\nnamespace Test;\nuse ArrayObject;\nabstract class AbstractExample extends Extending\n{\n    public test1;\n    public function __construct(<\\stdclass> test1, test2) // wrong types will cause seg fault\n    {\n        var_dump(test1); // this will dump test2\n        var_dump(test2); // this will dump null\n        let this->test1 = test1;\n        let this->test2 = test2;\n    }\n}\n```\nextending.zep\n``` zephir\nnamespace Test;\nabstract class Extending\n{\n    public test2;\n}\n```\ntest.zep\n``` zephir\nnamespace Test;\nclass Test extends AbstractExample\n{\n    public static function test2(<\\stdclass> test, <\\ArrayObject> test2)\n    {\n        var parameters, name, obj;\n        let parameters = [test, test2];\n        let name = \"Test\\Test\";\n        let obj = create_instance_params(name,parameters);\n        return obj;\n    }\n}\n```\nand in php:\n``` php\nuse Test\\Test;\n$test1 = new stdClass();\n$test1->a = \"asd\";\n$test1->b = \"xyz\";\n$test2 = new ArrayObject(['asd','bcx']);\n$test3 = Test::test2($test1,$test2);\nvar_dump($test3);\n```\nvar_dump($test3) will work.  So it's the same case this view that you wrote that you can var_dump it(me too) but before it if i do render it doesn't works. Don't know why in this case there is null, not UNKOWN:0. Also i can tell you if i added some function to AbstractExample and call it like:\n$test3->something() it works so it must be crashing after some time maybe ?\n. let obj = create_instance_params(name, [\"aaaa\",\"bbbbb\"]);\nDid you have crash dump in this case ? Beacause i don't have crash too(sometimes i have) but i always have crash dump.\n. I don't mean crash. You can have crash dump generated even if it's not crashing. I always have crash dump no matter if it's crash or don't.\nThere shouldn't be crash. Zephir should tell you that you pass wrong parameters to __construct method. Crash is happening beacause parameters are passed in wrong order i think.\nWhat im guessing if you would try to do [1, 2, 3] it may works but it's only a guess.\n. So it's still generated ? Or you mean when you try [1, 2, 3] ?\n. So you sure you don't have dump when let obj = create_instance_params(name, [\"aaaa\",\"bbbbb\"]); ? Try to refresh it over and over - after this it was always generating for me.\nAlso try [1, 2 ,3] it perhaps would work. Then we would know \"for sure\" that's the problem is just order of passing parameters and just ignoring the first one.\n. But what var_dumps returning though when [1,2,3] ? Okay then i don't know why strings doing core dump.\nWhat's happening if you use objects and the same code from my examples ?\n. I mean what's the output when you run it with [1,2,3]\n. Okay. Well maybe it's not calling any method. I don't know.\n. Well i already posted classes above. You have crashes on original code i posted too ?\n. I mean ORIGINAL code. Not with change parameters.\n```\nnamespace Test;\nclass Test extends AbstractExample\n{\n    public static function test2(<\\stdclass> test, <\\ArrayObject> test2)\n    {\n        var parameters, name, obj;\n        let parameters = [test, test2];\n        let name = \"Test\\Test\";\n        let obj = create_instance_params(name,parameters);\n        return obj;\n    }\n}\n```\n```\nuse Test\\Test;\n$test1 = new stdClass();\n$test1->a = \"asd\";\n$test1->b = \"xyz\";\n$test2 = new ArrayObject(['asd','bcx']);\n$test3 = Test::test2($test1,$test2);\nvar_dump($test3);\n```\n. I don't mean crashes. I mean if you have crash dumps ? I don't have crashes on this code but i have crash dumps. Try to run it like this if you use apache:\ngdb apache\nrun -X\nAnd then run this code in your web browser.\n. Oh i forgot that you need to do source /etc/apache2/envvars first before this\n. But you have to stop already running apache first and then run code in browser. And check again all your codes. Because i have seg fault dumps in all cases and not always crashes\n. Seg fault is created even if i sue just original code i posted here.\n. Oh well i will then check tests on phalcon and see how it's going on. Thanks for fix !\n. @steffengy well yea it's useless in this form. But perhaps full stack trace and lines you can check code if it's working propely for 100% which in this case create_instance_params was just wrong.\n. @Izopi4a @steffengy @andresgutierrez \nI don't know what's going on, i have this zend_hash_index_exists crash too but only on non-debug version. When using debug version(when actually builddev) i don't have crash. I will check that i have this problem on debug version with just build. Can code generated on builddev differ from build ?\n. @andresgutierrez Yea you right. I created a issue. For now is with phalcon code to reproduce it. When i have time i will check is out deeper and check what's actually causing problem and try to reproduce it without phalcon.\n. I thought its zephir problem beacause last call is zephir_call_user_function\nWrite bt after run index.php and copy-paste it on pastebin maybe\n@AniaSoft\n. @steffengy he just have to post whole backtrace using bt and some short script to reproduce the problem but the same code works on php 5, so i guess it's another zephir related problem with php 7 @AniaSoft\n. He posted full stack and it's problem with di. Can your post some example code so I can this on debug version? @AniaSoft\n. Also I'm not sure why we should post it on phalcon. Last call it's zephir function, I could possibly create some code in zephir which will produce same stack without using any phalcon classes, it can't be fix in phalcon until using reflection classes etc but that will be workaround and it's need to be fixed in zephir.\n. So I have to create the code in zephir without using phalcon classes which will produce the same stack and then you could possibly look into it? I don't get it.\n. Okay, so there is context why it's happening:\nhttps://github.com/phalcon/cphalcon/issues/11583#issuecomment-200397410\nZephir have problems when creating instance of object when he has class passed as string. This function is called here in phalcon: https://github.com/phalcon/cphalcon/blob/2.1.x/phalcon/di.zep#L235\nExactly this line is producing a problem:\n'.phtml' => 'Phalcon\\Mvc\\View\\Engine\\Php'\nThis issue is related to https://github.com/phalcon/zephir/issues/1218 - it's the same problem, i posted there backtrace but it's deeper, don't know why.\nThe problem is - op didndt provide full bt log and script to reproduce a problem. If you would see it then i guess you would close it beacause it's the same issue i already posted.\nSorry for this misunderstanding, you are doing great job @steffengy \n. @andresgutierrez look on the other i posted here too, beacause they can occur in many places too :)\n. I already had it. Phalcon\\Firewall\\AdapterInterface is interface which Phalcon\\Firewall\\Adapter implements. And somewhere in code i want type hint Phalcon\\Annotations\\AdapterInterface but zephir don't let me do it any way.\n. It's pretty much the same issue i reported. It's similar, i think one issue is enough, there are definitely some problems with typeof.\n. Closuers in php-zephir don't work good. You better wrote themself. As you see in in arrays.zep you have:\nArrayscall_skipClosureOne\nBut php-zephir generated Arrayscall_skipClosureZero\nAlso most of the times php-zephir generate wrong __invoke methods with wrong body of method. In this case it looks fine.\n. What you mean ? Just change Arrayscall_skipClosureOne to Arrayscall_skipClosureZero and it should work.\nWhat error you have after changing it ?\n. Yes you uploaded Arrayscall_skipClosureZero but in arrays.zep you have:\nlet checks =  new Arrayscall_skipClosureOne();\nThat's why there is error, try to changing Arrayscall_skipClosureOne to Arrayscall_skipClosureZero and do zephir fullclean and zephir build.\n. Next time try to use https://forum.zephir-lang.com/\n. Why just not put zephir_parser.so into extensions folder in php ?\n. Just install -c should do it imho and create .ini file and that's it.\n. get all the properties of an object It's returning properties of an object depends on the scope. If for example you gonna call it outside of object then it should return only public fields what it's doing in this case. But in your case, yea, it should return all fields.\n. @sjinks could you look into this? What is weird on php 7.1.0 it works correctly. Though i didn't check if for 100% correctly like call get_object_vars in other class scope for other object.. Related https://forum.phalconphp.com/discussion/16527/toarray-method#C49535. I don't know why all of you are writeing size od debugged version of extensions ? You shouldn't never use debugged php and phalcon on production enviroment and for me it's obvious. Non debug version is 4.6 mb.\n. Oh okay. Then it's great idea to refractor this, beacause it can be tough sometimes to compile phalcon on vps with 512 mb ram and without ability to create swap.\n. We need to do it where ? Just zephir root/parser/parser ? And then just zephir build as always ?\n. I guess we have to tell phalcon to use php7 files the same way ? But how exactly ?\nWell as i see is just working as it is.\n. Well already tested it and if i delete parser.php5 or parser.php7 from phalcon it causing error so i guess is just working.\nBut there are still seg fault on phql parser, hope it will be fixed soon.\n. @andresgutierrez \nOkay. So this is phalcon related for 100% ? Then im closing issue for now when i will check out that's it surely phql parser.\n. Okay. If someone will reproduce it without relaying on phalcon then mention me here and i will reopen issue. Also mention me in commit with parsers done so i can run tests and check them if there is any problem further.\n. Okay did some simple digging. Here https://github.com/phalcon/cphalcon/blob/2.1.x/ext/phalcon/mvc/model/query/parser.c#L303 list has 0 elements on php 7.0.5 and 2 on 5.6.19. So im guessing there is some problem with phql_ https://github.com/phalcon/cphalcon/blob/2.1.x/ext/phalcon/mvc/model/query/parser.c#L2789 or phql_alloc https://github.com/phalcon/cphalcon/blob/2.1.x/ext/phalcon/mvc/model/query/parser.c#L1141 Don't know c enough to figure out what is going on.\nWhat you mean porting parsers to a new structure ? You mean to zephir ? @andresgutierrez\nSome fix would be nice until it will be realased.\n. So i would need to merge php7-parsers and 2.1.x and it could possibly work ? Or it's already 2.1.x base branch ?\n. Okay then. I will be waiting for it to check if it fix current problems(i guess yes)\nWell this is refractor only ? Or something iis broken in current phql parser for php7 ?\n. @andresgutierrez \nAlso i have a question are those new parsers are gonna fix problems with volt setVar etc in php7 ? Beacause right now to access vars in volt template in view we have to access view object like {{ view.someVar }}\n. So it should be next in thing in the list after those parsers for php7 i think because it's pretty much crucial option, i can't help though because don't know c.\n. @andresgutierrez \nJust info - i checked latest php7-parsers, saw you did something with phql - but the seg fault is still the same.\n. You sure you have php7-dev installed ?\n. Im guessing that all you mention here can be just done on compiling code from zephir to c, like parsing this correctly. But is it worth it really to do it ?\n. I think you need to do var matches; before preg_match ?\n. Also look on this too because this is try/catch/exception handling related too - https://github.com/phalcon/zephir/issues/1336\n. @virgofx \nWell not sure if it's related But let's assume i have something like:\nlet returnedValue = null;\ntry {\n    let returnedValue = realHandler->callMethod(methodName, params);\ncatch {\n// do something with returnedValue\n}\nWhen executing callMethod the exception can be thrown, and it's causing seg fault on php 5.x i guess it's related somehow. I just needed to add another variable, where i save result of callMethod and then i set it, hacky and workaround but works\n. @sjinks i think this should be on some priority right now\nI will create some test when have time.. Isn't this more like a bug in stubs generator ?\n. Somthing is broken again, see:\nhttps://github.com/phalcon/phalcon-devtools/blob/master/ide/stubs/Phalcon/mvc/Model.php#L437\nJust Resultset is returned, but from wrong namespace(Phalcon\\Mvc\\Model).\nhttps://github.com/phalcon/phalcon-devtools/blob/2.1.x/ide/stubs/Phalcon/mvc/Model.php#L369 in 2.1.x stubs which was generated previously this works fine.\nThough this https://github.com/phalcon/phalcon-devtools/blob/master/ide/stubs/Phalcon/db/adapter/pdo/Mysql.php#L75 is correct one now. Like something fixed but other problem now.. I don't see a commit fixing this in zephir. I used latest zephir for compiling. Did you even checked my repo ?\n. But i don't see in your code multicatch in zephir anywhere ? Will check fi adding it will fix this issue but i doubt.\nAlso did you even read issue ? Check my code first please, it's working fine on php5, it's happening on php7, where your repo is fixing php5 related issues(i never had any problem with dispatcher, catching exceptions etc on php 7)\n. Well actually it looks like it's fixing a issue, not sure why...\nStill something is wrong in zephir i think.\n. Okay. I know what is happening. Just finished in dispatcher is not false. And instead of continue go execution is going on.\nzep\n catch \\Error, e {\n    if this->{\"_handleError\"}(e) === false {\n        if this->_finished === false {\n            continue;\n        }\n    } else {\n        throw e;\n    }\n} catch \\Throwable, e {\n    if this->{\"_handleThrowable\"}(e) === false {\n        if this->_finished === false {\n            continue;\n        }\n    } else {\n        throw e;\n    }\n } catch \\Exception, e {\n    if this->{\"_handleException\"}(e) === false {\n        if this->_finished === false {\n            continue;\n        }\n    } else {\n        throw e;\n    }\n}\nThis is generated like:\nc\nZVAL_OBJ(&e, EG(exception));\nZ_ADDREF_P(&e);\nif (zephir_instance_of_ev(&e, zephir_get_internal_ce(SL(\"error\")) TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_74$$47, this_ptr, \"_handleerror\", &_75, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_74$$47)) {\n        zephir_read_property(&_76$$48, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_76$$48)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 607 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nZVAL_OBJ(&e, EG(exception));\nZ_ADDREF_P(&e);\nif (zephir_is_instance_of(&e, SL(\"Throwable\") TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_77$$51, this_ptr, \"_handlethrowable\", &_78, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_77$$51)) {\n        zephir_read_property(&_79$$52, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_79$$52)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 615 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nZVAL_OBJ(&e, EG(exception));\nZ_ADDREF_P(&e);\nif (zephir_instance_of_ev(&e, zend_exception_get_default(TSRMLS_C) TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_80$$55, this_ptr, \"_handleexception\", &_81, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_80$$55)) {\n        zephir_read_property(&_82$$56, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_82$$56)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 623 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nShouldn't be it something like:\nc\nZVAL_OBJ(&e, EG(exception));\nZ_ADDREF_P(&e);\nif (zephir_instance_of_ev(&e, zephir_get_internal_ce(SL(\"error\")) TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_74$$47, this_ptr, \"_handleerror\", &_75, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_74$$47)) {\n        zephir_read_property(&_76$$48, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_76$$48)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 607 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nelse if (zephir_is_instance_of(&e, SL(\"Throwable\") TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_77$$51, this_ptr, \"_handlethrowable\", &_78, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_77$$51)) {\n        zephir_read_property(&_79$$52, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_79$$52)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 615 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nelse if (zephir_instance_of_ev(&e, zend_exception_get_default(TSRMLS_C) TSRMLS_CC)) {\n    zend_clear_exception(TSRMLS_C);\n    ZEPHIR_CALL_METHOD(&_80$$55, this_ptr, \"_handleexception\", &_81, 0, &e);\n    zephir_check_call_status();\n    if (ZEPHIR_IS_FALSE_IDENTICAL(&_80$$55)) {\n        zephir_read_property(&_82$$56, this_ptr, SL(\"_finished\"), PH_NOISY_CC | PH_READONLY);\n        if (ZEPHIR_IS_FALSE_IDENTICAL(&_82$$56)) {\n            continue;\n        }\n    } else {\n        zephir_throw_exception_debug(&e, \"phalcon/dispatcher.zep\", 623 TSRMLS_CC);\n        ZEPHIR_MM_RESTORE();\n        return;\n    }\n}\nOr im wrong ? If exception is caught in one catch block it shouldn't be caught in other.\n. I can confirm that this change what i made fix a issue.\n. Well i could fix this but i don't know how to rewirte current TryCatchStatement.php to handle https://github.com/phalcon/zephir/blob/master/test/trytest.zep#L67 this case @andresgutierrez \nIt should like checkif(excpetion instanceof RuntimeException || exception instanceof Exception) in c statement(this is just pseudocode). And execute what is in catch block. Right now there are just two seperated if statements.\n. @sjinks i think this should be on some priority right now so we could introduce catching Throwable\\Error in phalcon and events like beforeThrowable, beforeError\nI will create some test when have time.. Thanky you :). Managed to fix ZE2, but don't know about ZE3 - i mean i can fix it in certain place but then seg fault in other.\n. Yes. I was trying to fix it. Here - https://github.com/phalcon/zephir/blob/master/kernels/ZendEngine3/object.c#L1205 i changed it to something like this:\n```\nint param_count = zend_hash_num_elements(Z_ARRVAL_P(params));\n        zval static_params[10];\n        zval params_ptr, *params_arr = NULL;\n    if (param_count > 0) {\n        zval *item;\n        int i = 0;\n\n        if (likely(param_count) <= 10) {\n            params_ptr = static_params;\n        } else {\n            params_arr = emalloc(param_count * sizeof(zval*));\n            params_ptr = params_arr;\n        }\n\n        ZEND_HASH_FOREACH_VAL(Z_ARRVAL_P(params), item) {\n            ZVAL_COPY(&params_ptr[i], item);\n            i++;\n        } ZEND_HASH_FOREACH_END();\n\n```\nBut there is other problem:\n```\n0  0x00007fffe948a7fc in zval_get_type (pz=0x7fff00000c08) at /root/.phpbrew/php/7.0.5-debug/include/php/Zend/zend_types.h:327\n1  0x00007fffe948edd1 in zephir_call_function_opt (fci=0x7fffffff9890, fci_cache=0x7fffffff9860, info=0x7fffffff9970, params=0x7fffffff9a60) at /root/3.0.x-orig/ext/kernel/extended/fcall.c:1159\n2  0x00007fffe9489974 in zephir_call_user_function (object_pp=0x7fffffff9d80, obj_ce=0x7ffff1607ec8, type=zephir_fcall_method, function_name=0x0, retval_ptr=0x7fffffff9960, cache_entry=0x0,\n```\nhttps://github.com/phalcon/zephir/blob/master/kernels/ZendEngine3/extended/fcall.c#L1159\nI don't know C enough, just was trying to do some obvious things, tried to make it similar like other php 7 c code i found somewhere but this 1159 line is no go for me.\nWithout any changes the seg fault looks like this both extension and php as dev:\n```\n0  0x0000555555be2568 in ?? ()\n1  0x0000555555be2588 in ?? ()\n2  0x0000555555be25a8 in ?? ()\n3  0x0000555555be25c8 in ?? ()\n4  0x00007fffffffaca0 in ?? ()\n5  0x00007fffffffb1a0 in ?? ()\n6  0x00007ffff7e111c0 in ?? ()\n7  0x0000555555bdfd98 in ?? ()\n8  0x0000000000000207 in ?? ()\n9  0x00007fff00000c08 in ?? ()\n10 0x00007ffff390a748 in zend_ast_get_lineno (ast=0xc08) at /root/.phpbrew/build/7.0.5-debug/Zend/zend_ast.h:240\n``\n. @sjinks could you check it out if you would have time?. In ZE2 i fixed it, it's only in ZE3.. Added test for this issue here - https://github.com/phalcon/zephir/pull/1427. @sjinks could this be somehow solved? I guess it could potentially add big overhead so i think the best options would be something likezephir buildtestor something like this so any calls to php functions would work with namespace fallback policy? It could make possible to provide better tests coverage for phalcon.. I just though that we could somehow intercept function calls in zephir(like xdebug is doing?) and check if in our active namespace we have same function defined and call it instead calling one from the global. I know this will add overhead that's why i was asking from some special option to compile likezephir buildtest. Oh okay then, too bad, then i guess i can close it :C. @sergeyklay . This should work. Just perhaps get is keyword in zephir for generating getters and this is why it's not working. Try$get`\n. Change any method in phalcon to internal and zephir build it.. Well, it's something phalcon related, i checked on php 7 some more simplifed code and works fine, closing for now until i get script to reproduce.. Post some code to reproduce issue without phalcon.. I can confirm this is really a bug. Needs to be fixed for phalcon.\nThough i think the root of the problem is the same/similar as here - https://github.com/phalcon/zephir/issues/1392\n@sergeyklay @andresgutierrez @rafmichalak84 @dreamsxin . It still shows, it just depends if this is zephir related syntax error(then there will be no line error cuz of limits of parser) or some other error(which will be shown). Cannot parse file is syntax error, like it's lemon error which is not providing(or not returning in zephir) a way to get why exactly file was not parsed.. Well will check tomorrow in work, build it with this fix and check all tests.. Well it could be good to test also all phalcon tests with this fix.. For me it seems like php problem cuz:\nError: Cannot access protected property PHPUnit_Framework_Constraint_IsEqual::$exporter\nIs not zephir or phalcon thing.\nError: Cannot instantiate abstract class Phalcon\\Mvc\\Model\nI already created issue about this.. Yea gl with that. Im not even sure this is zephir problem tbh cuz \nError: Cannot access protected property PHPUnit_Framework_Constraint_IsEqual::$exporter doesn't happens on first occurence or first test. It happens on xxx occurence. Like few tests before this it's used without any problems.\nThough it happens each time in same test on same line which is weird.. It's happening for phalcon tests. Not zephir tests. You have to clone his repo, checkout fix-php7.1 compile phalcon using his zephir witch changes and run phalcon tests.. But it's for some reason - i guess it's debugging co you can compile zephir extension with debugging symbols and have more information than we would just have all zend calls.. Still - it should be fixed on zephir side. Just use #if #elif #else #endif to have code base for php 7.1, 7.0 and 5.6, it's obvious i think.. @rafmichalak84 just as soon as you will fix any kind of issue like this visibility thing or maybe https://github.com/phalcon/zephir/issues/1392 then mention me so i can compile zephir and check all phalcon tests again.. Yea i know about this problem, i created issue, not sure if it's this pr or just zephir master even has this problem? Didn't check this.\nStill zephir tests are zephir tests, phalcon tests are covering MUCH MORE zephir stuff. Like i mean if this is fixed - https://github.com/phalcon/zephir/pull/1390#issuecomment-277809280\nAlso what's going with php 7.0 tests? Not green.. Okay, let me pull changes and i will check phalcon tests.. Oh right there is zephir_get_called_class seg fault, you wrote it above, then i wait for fix for this, let me know when you will handle this.. http://pastebin.com/XqvpwNGL\nDidn't have this a few commits earlier on this PR, there were just https://github.com/phalcon/zephir/issues/1392 this problem.. No problem. We still need to wait for @andresgutierrez to review this or someone else.. It can't be cuz it's not making phalcon work with php 7.1 fully @andresgutierrez . @rafmichalak84 @dreamsxin \nThere is issue when calling static method from non-static method:\n```zep\nclass Test2\n{\n    public function testCalled()\n    {\n    self::testCalled3();\n}\n\npublic static function testCalled2()\n{\n    self::testCalled3();\n}\n\nprotected static function testCalled3()\n{\n    var_dump(get_called_class());\n}\n\n}\n```\nAnd basically:\n$test = new Test();\n$test->testCalled2(); // works fine\n$test->testCalled(); // seg fault\nJust some scope issue, idk really, before this PR it's broken even more :(\nJust let's move to https://github.com/phalcon/zephir/issues/1392. What is this appveyor error? @sergeyklay . As I see we use current_execute_data in php src there is execute_data used, is there any difference? Are those same stuff? @andresgutierrez @steffengy . https://github.com/phalcon/zephir/pull/1390 perhaps this changes are causing the problem cuz i checked on this zephir.. Well the problem now is that it seg faults on such code:\n```zep\nclass Test2\n{\n    public function testCalled()\n    {\n    self::testCalled3();\n}\n\npublic static function testCalled2()\n{\n    self::testCalled3();\n}\n\nprotected static function testCalled3()\n{\n    var_dump(get_called_class());\n}\n\n}\n```\nphp\n$test = new Test3\\Test();\n$test->testCalled2();\n$test->testCalled();\nFirst call works, but second seg fault.\nI think problem is in zephir_call_user_function or zephir_call_function_opt\n. Sure, but i don't think ti's a solution really.. It's defintely not a problem with get_called_class itself because it works overall, it just happens only when there is call from non-static method to static method. Something happens with scope.. https://github.com/sergeyklay/issue1394/pull/3#issuecomment-287605361\nManaged to fix some issues, right now only one things happens there.. This is https://github.com/phalcon/zephir-website issue. This will call function with name predicate. Maybe he needs {predicate}(value) https://docs.zephir-lang.com/en/latest/functions.html. Well ArrayAccess interface doesn't work at all in zephir-land. Even isset or array[\"index\"] when array is object implementing ArrayAcces doesn't work:\ntest.zep:\n```zep\nnamespace Arraytest;\nclass Test implements \\ArrayAccess\n{\n    protected test;\npublic function __construct() {\n    let this->test = [\n        \"one\":1,\n        \"two\":2,\n        \"three\":3\n    ];\n}\n\npublic function offsetSet(offset, value)\n{\n    if is_null(offset) {\n        let this->test[] = value;\n    } else {\n        let this->test[offset] = value;\n    }\n}\n\npublic function offsetExists(offset) {\n    return isset this->test[offset];\n}\n\npublic function offsetUnset(offset) {\n    unset this->test[offset];\n}\n\npublic function offsetGet(offset) {\n    return isset this->test[offset] ? this->test[offset] : null;\n}\n\n}\n```\ntest2.zep:\n```\nnamespace Arraytest;\nclass Test2\n{\n    public static function test()\n    {\n        var test;\n    let test = new Test();\n    var_dump(isset test[\"one\"]);\n    var_dump(test[\"one\"]);\n}\n\n}\n```\ntest.php:\n```\nuse Arraytest\\Test2;\nuse Arraytest\\Test;\nTest2::test();\n$test = new Test();\nvar_dump(isset($test[\"one\"]));\nvar_dump($test[\"one\"]);\n```\nReturns:\n\nbool(false)\nPHP Notice:  Cannot use a scalar value as an array in arraytest/test2.zep on line 11 in /root/test.php on line\n 5\nNotice: Cannot use a scalar value as an array in arraytest/test2.zep on line 11 in /root/test.php on line 5\nNULL\nbool(true)\nint(1). Looks like https://github.com/phalcon/zephir/issues/1061 this issue was related but code to reproduce got deleted.. I think this is really bad. Just use hasManyToMany.. Also this is phalcon issue. https://github.com/phalcon/cphalcon. What does this mean? We would need to create some weird empty array or pass view params with this require?. Oh okay i understand. But then what with calling $this->xyz in such file if it's required in some class? Will this still work?. Well version_compare is stupid idea. I think it should be something like(pseudocode):\n\n```c\nif(id is int) {\nreturn PHP_VERSION_ID  == id\n}\nif(id is string && strlen(id) == 1) {\n    return PHP_MAJOR_VERSION == id;\n}\nif(id contains one dot) {\n    return PHP_MAJOR_VESION.\".\".PHP_MINOR_VERSION == id;\n}\nif(id contains two dot) {\n    return PHP_VERSION == id;\n}\n``. To make it work how it supposed to be? Right now is_php_version doesn't work how it should be. In phalcon code there wasis_php_version(\"5\")` which obviously wasn't working.. Yes, it's zephir bug, but it means that is_php_version needs to be updated to work correctly like i wrote above for example. It's defintely zephir bug, just current code for this function is like this:\n```\ndefine zephir_is_php_version(id) (PHP_VERSION_ID / 10 == id / 10 ?  1 : 0)\n``. Yes but in phalcon it was used likeis_php_version(\"5\")`. Also it's not fixing everything, there are still issues in phalcon tests. I need to investigate it more, maybe somewhere else more changes . Well after all changes it would be nice to at least test it on php7 with those changes performance if it's affected by any way.. https://github.com/phalcon/zephir/issues/1339 could you add some test for this?. Those changes are causing some pdo-related weird issues:\nhttps://travis-ci.org/phalcon/cphalcon/jobs/214812313\nhttps://travis-ci.org/phalcon/cphalcon/jobs/214812314\nLike object with PDO connection is never destroyed - causing pdo connection to stay for all the time. Any idea? @sjinks . On sqlite it's locked error - i guess the same problem like number of connections, on mysql it hits later this error on running codeception tests. It's exactly happening after this PR.. Let's go there - https://github.com/phalcon/zephir/issues/1417. Not sure why in travis okay, on ZE3 the check for those references was commented in zephir ZE3 for some reason - https://github.com/phalcon/zephir/pull/1415/files#diff-79d6f1266299a0ab0de6a3bb7b89f4c5L106, since we changed to ZEND things now we got error.\n@sergeyklay . Is #1419 supposed to fix this issue with pdo stuff too? @sjinks Like both issues like mine and klay or aim only for one of them?. Fixed in master. I think so.. Well actually [PHPUnit_Framework_Exception] Access to undefined property _macros is not expected, it's old issue that was already on php 7 but it was fixed as i remember. Cannot call func_get_arg() dynamically is exepcted. Benstalk errors idk why happens, will need to check.. Well i think best will be something like zephir_func_get_arg(int). Well for func_get_arg _zend_get_parameters_array_ex can't be replacement i think cuz it will return all parameters, i think the best will be if we will create our own func_get_arg version which will be similar php built-in.. @sjinks any idea why this works on clang and not gcc?\nPing me here if you would manage to fix something so i will pull changes.. Bad permissions for mapped region at address 0xFFFFFFFF00000C08 i guess on clang this permissions are ignored and causing it to work or what?. @sjinks well this is correctly creating same issue as in phalcon repository, though for some reason error message is different than in phalcon though i tried to make a same code.\nFor first i thought maybe someVariable needed to be initialized with empty array, like in phalcon repository in plain php there were some error when tried adding new array elementy to property defined as string and i thought it was related but it's not a caused, even when change someVariable to something like protected someVariable = []; problem still happens.. @sjinks just to make sure - i checked the similar code with plain php and it works fine without issue so it's not some php 7.1 change. Okay, just phalcon already doesn't support php 5.4 and 5.5 but fine.. Oh right, okay, in phalcon 4 we should drop php 5 at all.. I agree, i just wonder what exactly was changed that for php 7.1 somehow it works, i guess latest ZE3 changes in zephir, but shouldn't it affect php 7 too? Or those changes were done only for php 7.1?. Oh okay, then i guess that's why.. So this \"bug\" happens only for php 5.x now? We could add ZendEngine2 label then.. Well thanks for explaining.. Well IN ZE2 this fix - https://github.com/phalcon/zephir/pull/1342/files#diff-a10f1751cb10ff71867e53250b0acb36L1560 fixed an issue anyway\nSo maybe you need to revert it @sjinks . Yea sure, will try to reproduce it.. Well on the code from this PR i have warning:\nPHP Warning:  Invalid arguments supplied for explode()\nWhen _delimited is changed to non-static then works fine, but don't have seg fault, hmmmm. Maybe there is somehow no warning and for some weird reason seg fault is detected in next line? I don't know really why this happens.. Well i created seperated issue - https://github.com/phalcon/zephir/issues/1446 cuz it doesn't looks like related to this, maybe it's somehow causing this issue, idk.. Well code in this PR is changed but yea, will check it in free time.. That's correct. From php 7 or 7.1 you can't use extract etc functions dynamically(in our case use zend_call_function to call them), we need to write extract optimizer(and other optimizers) like lately we wrote func_get_args, func_num_args and func_get_arg optimizers\nhttps://wiki.php.net/rfc/forbid_dynamic_scope_introspection. Yea worked but it wasn't correct anyway :) It's just how php works right now and zephir was ignoring it, we removed extended things from ZE3 and now we uses zend_call_function. It might be parser issue though @sjinks @sergeyklay not sure about this. This issue as i remember mostly happens because of code generation, each catch block is just generated as if when they should be imho if elseif @sjinks . Hmmm then i think maybe we could do some optimizers anyway telling that it's not supported in zephir with reason why, cuz maybe it's not so obvious really(like it doesn't have to be dynamic call but still not working).. Maybe? @sergeyklay what you think?. Also im not sure, but the same problem exists on ZE2 too, right?. Okay then, i agree.. Im just wondering - could we possibly somehow add tests for runtime when and if this will be finished?. Also is it even worth to trying to do this runtime thing with JIT coming to php? I mean will there be any performance reason to use it, or just for fun?\nTo be honest i think better would be for zephir/phalcon right now to focus on new features/performance/bug fixes in zephir/phalcon itself.. How about php 7 or 5.6?. Well as i remember klay said we will drop php 5 fully when phalcon 4 is released.. +1. Im guessing, tomorrow i will check this on phalcon if it will work too. Also is there any test for this? Cuz don't sure.. I'm guessing that we could partially improve it by changing some method in phalcon to internal, it shouldn't be affected by those changes, right? I would like even to suggest maybe something like change internal to allow it with combination of protected like:\nprotected internal function xyz()\nAnd add zephir buildinternal - when build like this, then xyz method will be only internal.\n@sjinks . PHP 7, will check it on php 7.1. It's 0.9.6 tag.\n$this->x += 2\ndoesn't run on it, so keep this in mind.. https://github.com/phalcon/zephir/commits/0.9.6 https://github.com/phalcon/zephir/commit/72dbb2063e835ffa860dcf235dcbf6ec0f821fa5. Well i can live with that difference, still big improvement. If it doesn't create any issues or problems i think we can merge it and maybe release new tag?\nIm guessing that we will see in travis ci how faster tests will finish with this change.. @sergeyklay @sjinks don't forget about release, it could be good, at least phalcon in travis using latest stable now(release), right?. Okay then.. @sjinks this should be reopened or not? The problem is still there and we need to find why tests failed after merging right? Or you did this already?. Yea but fix was reverted after all or you readded it in some PR?. https://github.com/phalcon/zephir/commit/d90e076eeae0457923a075f454ba86a5edaefebe here is something - well let me just test and check it.. Well on latest zephir i got result like this:\n```\nempty for in range 0.049\n$x = $this->x      0.273\n$this->x = 0       0.267\nself::a = 0        0.229\n$this->x++         0.553\n$this->x--         0.550\nisset($this->x)    0.115\nisset(self::A)     0.049\nempty($this->x)    0.306\nempty(self::a)     0.254\n$this->f()         9.321\nself::f()          9.848\nself::f() -> true  9.699\n$x = Foo::TEST     0.053\n\nTotal             31.566\n```\n:C\nSo i guess we need to go back to this fix and find out why it was broken you reverted it here - https://github.com/phalcon/zephir/commit/5f18566712c677187bea07626a856457c2a0ded1. Im running benchmark myself.. What php version? On 7.0.13 i have this 9 second result for some reason, opcache.enable_cli = 1 i added. Oh sry, my mistake, forgot to disable xdebug:\n```\nBenchmark Zephir 0.9.7\nempty for in range 0.051\n$x = $this->x      0.280\n$this->x = 0       0.277\nself::a = 0        0.317\n$this->x += 2      0.543\n$this->x++         0.579\n$this->x--         0.561\nisset($this->x)    0.118\nisset(self::A)     0.051\nempty($this->x)    0.345\nempty(self::a)     0.258\n$this->f()         0.731\nself::f()          0.827\nself::f() -> true  0.924\n$x = Foo::TEST     0.055\n\nTotal              5.917\n```\nLooks like fixed. Slightly slower than 0.9.6 but so many fixes. Sorry for my mistake :C. Though in https://github.com/phalcon/zephir/pull/1509 https://github.com/phalcon/zephir/issues/1507#issuecomment-294210334 it was faster, not everything from there you finally added? Or some other fix from somewhere make it worse.. Well at least it's better than it was before because almost 9x times performance degrndation in OP was kind of big, with around ~3 times i can live.\nAlso why now \n$this->f()         0.731\nself::f()          0.827\nself::f() -> true  0.924\nThis differ much? Previously(0.9.6) it was almost on same performance level.. Im just doing zephir build in zephir directory.. Yea, small difference:\nempty for in range 0.054\n$x = $this->x      0.271\n$this->x = 0       0.276\nself::a = 0        0.310\n$this->x += 2      0.539\n$this->x++         0.557\n$this->x--         0.553\nisset($this->x)    0.114\nisset(self::A)     0.049\nempty($this->x)    0.323\nempty(self::a)     0.268\n$this->f()         0.785\nself::f()          0.795\nself::f() -> true  0.824\n$x = Foo::TEST     0.064\nChcked it more times and pretty much now on similar level those calls.. On latest zephir is someone intersted with latest PR https://github.com/phalcon/zephir/pull/1529 result is:\n```\nBenchmark Zephir 0.9.7\nempty for in range 0.047\n$x = $this->x      0.269\n$this->x = 0       0.263\nself::a = 0        0.229\n$this->x += 2      0.545\n$this->x++         0.540\n$this->x--         0.548\nisset($this->x)    0.111\nisset(self::A)     0.048\nempty($this->x)    0.315\nempty(self::a)     0.238\n$this->f()         0.361\nself::f()          0.361\nself::f() -> true  0.366\n$x = Foo::TEST     0.052\n\nTotal              4.293\n```\nSo pretty much second difference but many fixes on latest zephir compared to 0.9.6-dev. Will check it in free time when home . right now it is quite low-level and is for manual use only.\nWill be a problem to make it not manual use? Like automatically used when possible?. As i understand this is seperated thing from fix here - https://github.com/phalcon/zephir/pull/1509/files ? Or i miss something?. It could be nice to have such a thing. If there are cases where we could make it used by default.\nTbh im not sure what exactly is cached etc stuff, i think like for example in phalcon this would be uselss to add this, i guess the code itself in most of methods is costing more time than calling them.\nThough difference on this example of microbench is pretty huge. If you could somehow think a way in compiler to figure out if method call can be fcall optimized or not this could be awesome, because changing code of phalcon will be just huge work, and second code will look worse and not everyone will understand why we use it like this.. Could it speed up recursive method calling? Like for example this topic on forum - https://forum.phalconphp.com/discussion/15947/acl-increase-speed i have other to solve it, just by adding getters and setters so people can just use some cache to set and remove addRole etc stuff. Well actually we need to make somehow a nice way to make it default way to call methods, functions etc because currently zephir is around 3 times slower than PHP 7.2 in method calling etc. I would propose somehow to cache all those fcall infos and reuse them, maybe even between requests if somehow possible.. I think on some point we should focus on this @sergeyklay just test this https://github.com/phalcon/zephir/blob/development/unit-tests/microbench.php between zephir + php 5.6/7.0./7.1/7.2 and implement this in plain php 5.6/7.0/7.1/7.2 you will notice that results for zephir method calling are kind of really meh, because of no fast call. Not sure if im correct but i think it was here on some point? But it was introducing issues, i guess we need to work on this for performance.. @dreamsxin Could you look into this somehow and check out what could we do here?. Yea but it's too complicated to do it in zephir code.. Well at least implementing it as low-level API could be fine, to add it in most of the areas where we can achieve actual performance boost, i guess mostly with same method called multiple times.\nThough im still wondering how much it would affect performance, like searching all those hashes vs calling it typically.. ```\n1  Phalcon\\Mvc\\Model\\Binder->__construct\n2  Phalcon\\Mvc\\Model\\Query\\Builder->getPhql\n3  Phalcon\\Mvc\\Model\\Query\\Builder->getQuery\n4  Phalcon\\Mvc\\Model::findFirst\n5  Phalcon\\Mvc\\Model\\Binder->getParamsFromReflection\n6  Phalcon\\Mvc\\Model\\Binder->bindToHandler\n7  Phalcon\\Dispatcher->_dispatch\n8  /home/travis/build/phalcon/cphalcon/tests/integration/Mvc/Model/BinderCest.php:891\n9  /home/travis/build/phalcon/cphalcon/tests/integration/Mvc/Model/BinderCest.php:837\n10 Phalcon\\Test\\Integration\\Mvc\\Model\\BinderCest->testDispatcherSingleBindingNoCache\n```\nThis one looks like some scope issue, there is get_called_class in findFirst for some reason it returns Phalcon\\Mvc\\Model\\Binder(where findFirst is called)\nIdk about other problems there.. This looks like a bit more changes than you wrote in patch, hope it won't break anything and improve speed even more.. Well im home already, will check it out tomorrow when will be in work.. Well and orginally without this pr what were your result?. Well then nice, i will check tomorrow cuz im on other pc without vagrant or docker and would need to install everything and im too lazy for today to do this.. ```\n$this->f()         0.635\nself::f()          0.739\nself::f() -> true  0.746\n\nTotal              5.285\n```\nYea, nice now. Without this:\n```\n$this->f()         0.731\nself::f()          0.827\nself::f() -> true  0.924\n\nTotal              5.917\n.\n$this->f()         0.260\nself::f()          0.266\nself::f() -> true  0.262\n. Yea it is :C if you will be able to do anything that it would be great, but still - it's better than before, before. More than 2 weeks ago it was 9x difference..\n$this->f()         0.361\nself::f()          0.361\nself::f() -> true  0.366\n```\nSuch a small change and such a boost ;o. Add that this happens only on php apache module, on cli or fpm it works fine and without issues.. @sergeyklay i saw you are doing some tests with this, are you sure you are doing it on TS php? Beacause as i remember this is main issue, but not sure.. @stijn1989 just read previous posts, it's because your php is working as thread safety extension. @sergeyklay wants to solve it so have fingers crossed.. Don't merge it, trying to reproduce issue. @sergeyklay i just tried to reproduce it to be similar to Phalcon\\Mvc\\Collection::getReservedAttributes(), now this PR should trigger problem.. @sjinks \nThere is some weird issue that when extend zephir class in php then something weird happens to static properties, like value of them is lost or they are even lost at all.\nWhen i added var_dump it returns &NULL. @sjinks Any idea ?. After trying to find root of it i reproduced it in php without zephir so i guess this is php bug, reported it already. For phalcon i will just change affected code.. They wrote it's not a bug so we should use ZVAL_DEREF somewhere.. https://bugs.php.net/bug.php?id=74648. And can you post php code to reproduce?. @niden . Any script to reproduce? I just simply did:\nvar_dump(function_exists(\"substr\"));\nIn zephir\nAnd it correctly returns true on php 5.6,7.0,7.1. Post code to reproduce this without phalcon dependency. . Well actually it's not get_object_vars problem itself, it's some scope issue @sjinks . Oh it's duplicate of https://github.com/phalcon/zephir/issues/1245. Any idea why globals_set not working? @sergeyklay @sjinks . Oh nice, that's good that it's solved finally.. new stdClass() use https://forum.zephir-lang.com for questions. https://forum.zephir-lang.com use forum for questions. https://forum.zephir-lang.com use forum for questions. Oh right, i thought that in phalcon dispatcher there is just somewhere controller class, there is not, let me update.. There are exactly 3rd party projects which do this. The problem is zephir isn't 1:1 php. For example anynomous functions can't be written in zephir easily(we need separated class for it etc). Or there is no use keyword etc. For example there is this - https://github.com/fezfez/php-to-zephir. Well we could focus on it some day, yea, but still, it won't be 1:1, not all functionallity will be working, like references or use keyword etc. Those are not possible in zephir atm, so we would need some brilliant workaround cuz i think it's somehow possible to refactor code to not use references or use keyword.. Disable xdebug.. What you mean? From latest zephir it's organized - if you try access non existing super global then fatal error is thrown.. It should be _GLOBALS i think.. Well tests are passing, you need to test it on TS php i think.\nFailed travis are because of valgrind, not sure if related or not.. You need zephir parser https://github.com/phalcon/php-zephir-parser first to install and add it as extension to php.\nTo have just C source you need to do zephir generate after installing both zephir parser and zephir.\nZephir parser is just parser. It doesn't generate C code. This repo does that.. https://github.com/phalcon/zephir/blob/development/WINDOWS.md\nDid you even care to read?. What you mean by windows binary? There is no binary of zephir at all. It's php code only + c code which is included in every extension(kernel) - this repo  + parser - zephir-praser repo.\nNot sure what you mean by binary.. First of all - zephir doesn't support references. So your code is kind of useless anyway atm.. This is really strange, when removing 0 it works.. @AlexNDRmac any progress ?. Not sure, but maybe it's about cli?. Maybe you have for some reason enable_post_data_reading set to 0?. You need to provide valgrind log from php-dev and zephir extension build using zephir builddev.. You need to install php5-dev package. As you can see:\nconfigure: error: Cannot find php-config. Please use --with-php-config=PATH\nCompiling...\nsh: 1: php-config: not found\nThe path you provided for php-config is wrong. Or well you missed = - sudo zephir build --with-php-config=/usr/local/php/bin/php-config. Well i think if we could use something from PHP CORE - then let's use it, less chances that something will go wrong. But still, other features which zephir are offering but are absent in PHP are still nice addition.. Then we need to revert it really because it's causing a lot of problems, i've seen the same issues on phalcon repository i think.. Zephir is not faster than php. Doing md5 on php always will be faster than doing md5 on zephir - simply because for example on zephir you need to create class, where on php not.\nYou need to make sure that you are actually checking result of this md5(like time to do it inside zephir method, not in php code where you do something like:\nphp\n$x = new ZephirTest();\n$startTime = microtime();\nfor{$i = 0; $i++; $i < 999999) {\n    $x->md5();\n}\n...\nIf you compare code like this to just php alone md5 than you will obviously will end in much worse performance because php needs to call method. To reproduce it fully you should create class in php with proper method and do it the same way like for zephir.\nNot sure what's your case, but using zephir just to do md5 is out of any point. Zephir is for writing big extensions with many operations, like for example phalcon framework..  ? I don't understand, you can use preg_match. https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/router.zep#L451. I just linked you to the same usage of preg_match like in php in phalcon. Not sure what other problems you have.. Why exactly change this to zend stuff? Isn't better to fix broken zephir code?. Why exactly change this to zend stuff? Isn't better to fix broken zephir code?. Again. Why exactly change to zend stuff? Isn't better to fix zephir related stuff?. Just in php 7.1 you can't use code I just changed it to this, check difference between those functions in php 7 and 7.1. Well it's like this on phalcon repo and it's working well.. Well IN ZE2 this fix - https://github.com/phalcon/zephir/pull/1342/files#diff-a10f1751cb10ff71867e53250b0acb36L1560 fixed an issue anyway\nSo maybe you need to revert it. Yea sure, will fix it. You mean make it string and <\\Exception> type and intention above?. Well it's actually from my PR, you posted me this on slack so i changed :D. Well, the best would be somehow to introduce elseif somehow obviously.. https://github.com/phalcon/zephir/blob/master/test/exceptions.zep#L8 this is this eight line though as i see there in code maybe you are correct, it should be most likely https://github.com/phalcon/zephir/blob/master/test/exceptions.zep#L80 ?. Oh well my mistake, just replace ob_get_contents() with ob_get_clean(). Oh okay. If there is difference then okay.. php\nif (!in_array($variable->getName(), ['this_ptr', 'return_value', 'return_value_ptr'])) {\n?. So shouldn't this ZEPHIR_ZEND_CALL_FUNCTION_WRAPPER be removed or it's used somewhere else?. ",
    "ZanderBrown": "2018 Calling. ",
    "marcus-sa": "I feel like this language lacks... everything. ",
    "noodlehaus": "+1 would really be great if we could get this.\n. ",
    "ThanhNhan2103": "I don't know format code. My enviroment (Centos 6.5 on Hyper-V on window 8, zephir version 0.4.6a, php 5.5.6, gcc version 4.4.7)\n. hi hylent,\nI replace \"\\\" to \"\\\" but  console output: warning: unknow escape sequence '\\w'\nIn your code, variable had declared\nP/s: This code in php is run well\n. @nkt, @hylent \nTks so much! I replace \"\\\" to \"\\\" and success\nBut I have another function below\n``` php\npublic static function autoLink(string input) -> string\n{\n    var output = \"\";\n// original php code\n// $output = preg_replace(\"/(http|https|ftp)://([a-z0-9\\-\\./]+))/\", \"<a href=\\\"\\\\0\\\">\\\\0</a>\", $input);\n// $output = preg_replace(\"/(([a-z0-9\\-\\.]+)@([a-z0-9\\-\\.]+)\\.([a-z0-9]+))/\", \"<a href=\\\"mailto:\\\\0\\\">\\\\0</a>\", $output);\n\n// zephir code\nlet output = preg_replace(\"/(http|https|ftp):\\\\/\\\\/([a-z0-9\\\\-\\\\.\\\\/]+))/\", \"<a href=\\\"\\0\\\">\\0</a>\", input);\nlet output = preg_replace(\"/(([a-z0-9\\\\-\\\\.]+)@([a-z0-9\\\\-\\\\.]+)\\\\.([a-z0-9]+))/\", \"<a href=\\\"mailto:\\\\0\\\">\\\\0</a>\", output);\n\nreturn output;\n\n}\n```\nI had builded success, and I test this function with code in test.php file:\n``` php\n<?php\necho Mylib\\Helper::autoLink('http://example.com');\n?>\n```\nOutput: Compilation failed: unmatched parentheses at offset 38 in test.php on line 3\nWhat problem with below code ?\n. ",
    "merlinyang521": "Not,Phpinfo() sections can not be set in php.ini,set example:\nphalcon.db.escape_identifiers default is On,  edit php.ini can set phalcon.db.escape_identifiers = Off\n;php.ini\n[phalcon]\nphalcon.db.escape_identifiers = Off\nAlso,use phalcon 1.3.2,i can get the directives by php code:\n<?php\n$directives  = ini_get_all('phalcon');\nprint_r($directives);\n?>\nuse phalcon 2.0.0,i can not get it.\n. Oh!I want to achieve this function,Zephir can support it?\n. Understand, thank you!\n. ",
    "cdekok": "Ah thank you :+1: perhaps there should be section in the docs for this or i overlooked it.\n. ah i missed it :)\n. can it not type check what the var is before doing anything with it ?\n. mmm but it defenitly seems like a bug to me it is not even possible to iterate over it:\nfor route in this->routes->getArrayCopy() {\nThis is the only way to get it working now.\n. Ok if it is documented and expected behavior I think we can close this issue.\n. ",
    "pgaultier": "Well, you can see a use case here https://github.com/yiisoft/yii2/blob/master/framework/base/ErrorException.php\nIn this case if xdebug extension is available the stack trace is enhanced\n. Well, this is annoying but I was totally wrong.\nThis pull request is not valid\nThank you for your time\n. ",
    "carvajaldiazeduar": "I agree with your approach but there is only one problem to solve. Using ref eliminates the ability to filter, validate or use a specific static data type for the parameter. If I want a variable be a reference to a type integer there would be no chance to do that.\nI propose the following syntax to at least allow variables to be filtered or validated according to certain type:\n``` javascript\nfunction someMethod(ref:int a)\n{\n    let a = intval(a); //implicit type conversion by Zephir\n}\nfunction someMethod(ref:int! a)\n{\n    if (typeof a != \"int\") //throw exception if the variable does not match the type\n}\n$a = 7;\nsomeMethod($a); //  pass addr of $a\n```\nThis syntax could be also used to validate regular dynamic variables:\n``` javascript\nfunction someMethod(var:int! a) // variable is dynamic but type passed must be int\n{\n}\nfunction someMethod(var:array a) // variable is dynamic but type passed must be converted to array\n{\n}\n``\n. I think ifzephir buildpgo`would be available it would be nice\n. +1\n. I like this PR\n. ",
    "wicaksono": "I vote B,\nI think it's cool if we are allowed to write some raw c code inside zephir, just like c allow programmers to write inline asm\n. ",
    "baszczewski": "Hello. I would like to admit, that references is most needed functionality to implement in Zephir. Is there any progress?\n. @ovr @andresgutierrez \nIs there any problems with this traits implementation?\n. Use keyword is extremely useful. It allow us to inherit variables from the parent scope. Is there any plans to support it?\n. In my opinion you can abandon support to old php version and make more efforts to support PHP 7. Everyone who will use Zephir, probably can install new php version to.\n. @ovr @andresgutierrez \nI will be grateful for review.\n. @ovr ping\n. @steffengy I think we should come back to previous implementation which works. This is critical stuff.\n. @steffengy Awesome. Thank You. I really appreciate your hard work.\n. ",
    "valVk": "I want to believe that this issue will be solved\nB option is nice\n. Can confirm that.\nif !suppress_error && !this->silence_connection_warning {\n            try {\n                let con = new \\Pdo(dsn);\n            } catch \\PDOException, e {\n                trigger_error(\"connection error\", E_USER_WARNING);\n            }\n        } else {\n            try {\n                let con = new \\Pdo(dsn);\n            } catch \\PDOException, e {\n                throw new ConnectionException(e->getMessage());\n            }\n        }\nlog\n/work/zephir-projects/foolzc/ext/foolzc/sphinxql/drivers/pdoconnection.zep.c: In function 'zim_FoolzC_SphinxQL_Drivers_PdoConnection_connect':\n/work/zephir-projects/foolzc/ext/foolzc/sphinxql/drivers/pdoconnection.zep.c:352:3: error: duplicate label 'try_end_1'\n   try_end_1:\n   ^\n/work/zephir-projects/foolzc/ext/foolzc/sphinxql/drivers/pdoconnection.zep.c:329:3: note: previous definition of 'try_end_1' was here\n   try_end_1:\n   ^\npdoconnection.zep.c\n```\nif (_6) {\n    /* try_start_1: */\n\n        ZEPHIR_INIT_NVAR(con);\n        object_init_ex(con, php_pdo_get_dbh_ce());\n        ZEPHIR_CALL_METHOD(NULL, con, \"__construct\", NULL, dsn);\n        zephir_check_call_status_or_jump(try_end_1);\n\n    try_end_1:\n\n    if (EG(exception)) {\n        ZEPHIR_CPY_WRT(e, EG(exception));\n        if (zephir_instance_of_ev(e, php_pdo_get_exception() TSRMLS_CC)) {\n            zend_clear_exception(TSRMLS_C);\n            ZEPHIR_SINIT_VAR(_8);\n            ZVAL_STRING(&_8, \"connection error\", 0);\n            ZEPHIR_SINIT_VAR(_9);\n            ZVAL_LONG(&_9, 512);\n            ZEPHIR_CALL_FUNCTION(NULL, \"trigger_error\", &_10, &_8, &_9);\n            zephir_check_call_status();\n        }\n    }\n} else {\n\n    /* try_start_1: */\n\n        ZEPHIR_INIT_NVAR(con);\n        object_init_ex(con, php_pdo_get_dbh_ce());\n        ZEPHIR_CALL_METHOD(NULL, con, \"__construct\", NULL, dsn);\n        zephir_check_call_status_or_jump(try_end_1);\n\n    try_end_1:\n\n    if (EG(exception)) {\n        ZEPHIR_CPY_WRT(e, EG(exception));\n        if (zephir_instance_of_ev(e, php_pdo_get_exception() TSRMLS_CC)) {\n            zend_clear_exception(TSRMLS_C);\n            ZEPHIR_INIT_VAR(_11);\n            object_init_ex(_11, foolzc_sphinxql_exception_connectionexception_ce);\n            ZEPHIR_CALL_METHOD(&_12, e, \"getmessage\", NULL);\n            zephir_check_call_status();\n            ZEPHIR_CALL_METHOD(NULL, _11, \"__construct\", NULL, _12);\n            zephir_check_call_status();\n            zephir_throw_exception_debug(_11, \"foolzc/sphinxql/drivers/pdoconnection.zep\", 162 TSRMLS_CC);\n            ZEPHIR_MM_RESTORE();\n            return;\n        }\n    }\n}\n\n```\nseems that we can use only 1 try/catch in single method. becase there is no incremental for aliases.\n. As temporary solution suggest use only one try/catch per method. If you need use two and more than move all others try/catch blocks to the additional methods.\n. thanks\n. There is one possible workaround until patch\n``` php\n    public static function cast()\n    {\n        int i;\n        var r;\n        let r = \"10\";\n        let i = r;\n        var_dump(i); //int(10)\n    }\n```\n. Thanks\n. Hi.\nProbably in tame when I got this issue my zephir wasn't up to date. Sorry about that.\nNow with Zephir version 0.6.1a everything works fine\nThe result string after str_replace looks like expected: string(23) \"mystringwith[^/]+inside\"\nThanks.\n. Thanks.\n. how could we convert that syntax to the correct one?\nFor example I have this\n``` php\nclass Functional {\npublic static function array_map_recursive(callback, value) \n{\n    if (is_array(value)) {\n        return array_map(function(value) use (callback) { return array_map_recursive(callback, value); }, value);\n    }\n    return call_user_func(callback, value);\n}\n\npublic static function test_rec (item) \n{\n    return item . \" +1\";\n}\n\n}\n```\nThanks.\n. Thanks  a lot.\nWhere can I find it in documentation?\nHow you called it in term of Zephir?\nThanks again.\n. Is that Local Symbol Table?\n. Sure I will do that. Thanks for your help.\n. @andresgutierrez thanks\n. Thanks\n. ping @Stormwing\nMaybe this one will help you.\n``` php\nnamespace Utils;\nclass SomeClass {\n     public function getClassName()\n     {\n        var className = \"NotExists\";\n        return {className}::method();\n     }\n}\n```\n``` php\n!/usr/bin/env php\n<?php\nclass NotExists\n{\n    public static function method()\n    {\n        return \"Hello from big Hangout\";\n    }\n}\n$a = new \\Utils\\SomeClass(); \nvar_dump($a->getClassName());\n```\n. Hey, how interface can implement another interface?\nprobably you want to do something like that?\n``` php\nnamespace Utils;\ninterface SomeInterface {\n     public function setMyArray(array! myArray);\n     public function getMyArray() -> array;\n}\n```\n``` php\nnamespace Utils;\nclass SomeClass implements SomeInterface {\n    private a;\n public function setMyArray(array! myArray)\n {\n    let this->a = myArray;\n }\n public function getMyArray()\n {\n    return this->a;\n }\n\n}\n```\n``` php\nphp\n\n<p$a = new \\Utils\\SomeClass(); \n$a->setMyArray(['a']); \n//$a->setMyArray('a'); do nothing\nvar_dump($a->getMyArray());\narray(1) {\n  [0] =>\n  string(1) \"a\"\n}\n```\n. Redis is enemy (\nAs reference https://github.com/phalcon/cphalcon/issues/10016\n. Thanks for pointing.\nin my case I did smth like that\nwhile i < length {\n        let r[] = mb_substr(value, i, limit, charset);\n        let i += limit;\n    }\n. Will it be supported or I have to find a way out?\n. ```\nrock@radxa:~/cphalcon/zephir$ ./bin/zephir compile\nzephir_parser extension not loaded, compiling it\nParser statistics: 127 terminals, 99 nonterminals, 459 rules\n                   947 states, 0 parser table entries, 0 conflicts\nmake:  No rule to make target 'clean'.  Stop.\nPreparing for parser compilation...\nCompiling the parser...\n/home/rock/cphalcon/zephir/parser/parser/parser.c: In function 'yy_reduce':\n/home/rock/cphalcon/zephir/parser/parser/parser.c:8763:2: warning: passing argument 2 of 'xx_ret_scall' from incompatible pointer type [enabled by default]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-6].minor.yy0, 1, yymsp[-3].minor.yy0, NULL, status->scanner_state);\n  ^\n/home/rock/cphalcon/zephir/parser/parser/parser.c:1189:14: note: expected 'char ' but argument is of type 'struct xx_parser_token '\n static zval xx_ret_scall(int dynamic_class, char class_name, int dynamic_method, xx_parser_token M, zval parameters, xx_scanner_state state)\n              ^\n/home/rock/cphalcon/zephir/parser/parser/parser.c:8775:2: warning: passing argument 2 of 'xx_ret_scall' from incompatible pointer type [enabled by default]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-7].minor.yy0, 1, yymsp[-4].minor.yy0, yymsp[-1].minor.yy132, status->scanner_state);\n  ^\n/home/rock/cphalcon/zephir/parser/parser/parser.c:1189:14: note: expected 'char ' but argument is of type 'struct xx_parser_token '\n static zval xx_ret_scall(int dynamic_class, char class_name, int dynamic_method, xx_parser_token M, zval parameters, xx_scanner_state state)\n              ^\nIn file included from /usr/include/string.h:634:0,\n                 from /usr/include/php5/main/php_config.h:2525,\n                 from /usr/include/php5/main/php.h:34,\n                 from /home/rock/cphalcon/zephir/parser/parser/parser.c:9:\n/home/rock/cphalcon/zephir/parser/parser/parser.c: At top level:\n/home/rock/cphalcon/zephir/parser/parser/parser.c:9257:7: error: expected identifier or '(' before 'extension'\n char strndup(const char *s, size_t len)\n       ^\n/home/rock/cphalcon/zephir/parser/parser/parser.c: In function 'xx_parse_program':\n/home/rock/cphalcon/zephir/parser/parser/parser.c:9350:3: warning: return makes pointer from integer without a cast [enabled by default]\n   return SUCCESS;\n   ^\nmake:  [parser/parser.lo] Error 1\nmake: ** Waiting for unfinished jobs....\n/home/rock/cphalcon/zephir/parser/parser/scanner.c: In function 'xx_get_token':\n/home/rock/cphalcon/zephir/parser/parser/scanner.c:1274:4: warning: incompatible implicit declaration of built-in function 'free' [enabled by default]\n    free(token->value);\n    ^\nlibtool: compile:  gcc -I. -I/home/rock/cphalcon/zephir/parser -DPHP_ATOM_INC -I/home/rock/cphalcon/zephir/parser/include -I/home/rock/cphalcon/zephir/parser/main -I/home/rock/cphalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_CONFIG_H -g -O2 -c /home/rock/cphalcon/zephir/parser/parser/parser.c  -fPIC -DPIC -o parser/.libs/parser.o\nlibtool: compile:  gcc -I. -I/home/rock/cphalcon/zephir/parser -DPHP_ATOM_INC -I/home/rock/cphalcon/zephir/parser/include -I/home/rock/cphalcon/zephir/parser/main -I/home/rock/cphalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_CONFIG_H -g -O2 -c /home/rock/cphalcon/zephir/parser/zephir_parser.c  -fPIC -DPIC -o .libs/zephir_parser.o\nMakefile:183: recipe for target 'parser/parser.lo' failed\nlibtool: compile:  gcc -I. -I/home/rock/cphalcon/zephir/parser -DPHP_ATOM_INC -I/home/rock/cphalcon/zephir/parser/include -I/home/rock/cphalcon/zephir/parser/main -I/home/rock/cphalcon/zephir/parser -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_CONFIG_H -g -O2 -c /home/rock/cphalcon/zephir/parser/parser/scanner.c  -fPIC -DPIC -o parser/.libs/scanner.o\nPHP Warning:  copy(modules/zephir_parser.so): failed to open stream: No such file or directory in /home/rock/cphalcon/zephir/Library/Compiler.php on line 251\nZephir\\Exception: The zephir parser extension could not be found or compiled!\nat Library/Compiler.php(256)\n0 Library/Compiler.php(269): Zephir\\Compiler->compileParser()\n1 Library/Compiler.php(328): Zephir\\Compiler->preCompile('test/arithmetic...')\n2 Library/Compiler.php(872): Zephir\\Compiler->recursivePreCompile('test')\n3 Library/Compiler.php(1076): Zephir\\Compiler->generate(Object(Zephir\\Commands\\CommandCompile))\n4 Library/Commands/CommandAbstract.php(108): Zephir\\Compiler->compile(Object(Zephir\\Commands\\CommandCompile))\n5 Library/Bootstrap.php(200): Zephir\\Commands\\CommandAbstract->execute(Object(Zephir\\Config), Object(Zephir\\Logger))\n6 compiler.php(21): Zephir\\Bootstrap::boot()\n7 {main}\n```\njfy\nthis g++-4.8-arm-linux-gnueabihf was used when Phalcon extension was compiled\nP.S.\nThe same version of Zephir was successful compiled at my notebook. But at Radxa Rock plate it fails.\nP.P.S I even can provide you an access to my RadxaRock just to try find a reason of that issue.\n. @steffengy \nFrom my side:\n- Zephir was compiled.\n- Phalcon was compiled using Zephir.\nThanks. Now you can say for 100% sure that it works even at ARM processors.\nI'm using radxa rock pro.\n. @mruz\nI've removed all untracked files in the parser directory. Did git checkout . -- and after that I've pulled the latest changes from master.\nAll this allow me to compile zephir extension and phalcon through zephir.\nAlso i think will be helpfull if you provide a bit more information about your environment.\nRegards.\n. Hmmm... did you remove composer.lock? Because this file can freeze version.\nAnyway I did git clone from this repository maybe this is the difference.\nIn my case I've checked this fix at my ARM web server and laptop all looks good.\nRegards.\n. @mruz \nPlease try do next.\n1. remove all untracked files from repository zephir git clean -f\n2. do git checkout -- .\n3. execute ./zephir/bin compile\nI've just checked. That this file parser/parser/parser.c:9258 can be without lines provided by @steffengy \nmaybe you've executed this command ./zephir/bin compile with sudo and now it's not refresh due to permissions \n. ",
    "tyurderi": "Something new? You know, that we all want this problem solved. @andresgutierrez \n. ",
    "lucups": "How is everything going ?\n. ",
    "joeyhub": "I'm not sure the problem can be solved well with a basic syntactical design. There are some core elements of the framework that could benefit review. It might not be a good idea to bolt this kind of feature on while the codebase is still unstable not only in terms of being an early version but also in terms of specification and design.\nPhalcon was created to provide a fast framework for PHP. It gave performance at the cost of some flexibility and it only removed overhead around applications. Many people have particular bottlenecks in their own plain PHP code that are slow. Otherwise even plain PHP might be fast enough especially as there are many strategies for scaling it and making performance less important as long as latency is below a certain amount. The key here is that performance was the objective for phalcon. This is its selling point.\nI assume that the problem at that time is that people who knew C and what they were doing wanted to make something that would let them be more productive but without significantly compromising the performance gains they sought out to make. We already have a slow but safe wrapper for C - PHP. With this tool creating a richer framework that could be more quickly altered is one benefit but it doesn't get around the fact that it is still optimising around others' code and if your code is slow it wont help. The drift starts here because the tool becomes targets at others. Here you have two things that conflict and you have to make some decisions what to stick to. I still think that performance over foolproofing comes first and foremost as this was as far as I can see always the original driving force for Phalon/Zephir.\nI've written a few PHP extensions and I can understand the original idea behind behind zephir somewhat intimately. The PHP internals tend to change and are particularly complex (owing a lot to a lack of thorough documentation). A lot of us straight convert our PHP into C and optimise when we find a bottleneck or a hotspot. This is extremely tedious and if you do it a lot sooner or later you will end up building your own tools for it.\nI've always wanted something that would convert PHP straight to it's equivalent C because basically that's what PHP does as a C wrapper and a language based in C at runtime. There is phpc but this is unmaintained and in a woeful condition. I also could not make heads or tails of the C it produced. The PHP syntax is a bit over expressive for many purposes and not really properly designed so a new syntax and parser as we see in zephir makes sense. However this should to be a full well crafted parser that builds an AST and can handle recursion automatically so any expression just works (like with Javascript) otherwise it doesn't make much sense.\nThe issue I have with Zephir on this front is that is deviates away from basics with memory management in an attempt to provide perfect safety and turns away from being a tool for experts. At least this is in my opinion, I have not investigated deeply to confirm this. In my opinion it might be better to leave more aspects of memory management to the user and zephir should not be reinventing the wheel. Instead it might provide warnings or static analysis to help the users. This would make zephir something that stands out from the crowd and does things differently. Also from this position it will be easier to gain metrics and information to make parsing, compilation and static analysis better able to detect potential issues making it easier to progressively improve the memory management situation without impacting performance. This would simplify zephir greatly and keep it on it's original path. I can create extensions easily with zephir. I can't good high performing extensions with it by a long shot. For me this comes down largely to an attempt to automatically manage memory and basically try to do too much of the programmers work for them, at least in what I have seen thus far and from my perspective as an advanced programmer.\nVersus allowing any PHP developer to create extensions or and any C/PHP developer that knows what they are doing to create extensions I would prefer the latter. We already have PHP-CPP, PHP 5.7 and Hack. v8 extensions suffer a similar fate where they are so high level with a lack of internals access that code is often slower in C++ extensions than in native JS (both are still sometimes 10 times slower or more than PHP-C). Not to mention other languages people could migrate to. None of these give the consistent speed improvements you get with C. If I wanted an \"easy\" way to make a small performance improvement I would use one of the more stable options (hiphop). I see the potential in zephir to make huge performance improvements at a low cost. Sometimes you might get lucky but time after time I implement an extension in C and it is faster than the other solutions from two times to over ten times. zephir is close to offering close to the same performance gains in principle that PHP-C can achieve but if it continues down the current path I have doubts that it will achieve such performance.\nPerhaps it could be possible to make a memory manager that works and allows zephir to offer comparable performance to handwritten C but I am skeptical and know that complex automatic memory management is a lot harder to implement. Personally I would rather sacrifice some safety for massive performance gains. This is also effort that could be better spent in other areas.\n\nZephir currently maps dynamic/variant polymorphic values to zval structures, this structure looks like\n\nIf this changes, I suspect it will make zephir slower in certain cases unless phalcon manages to create something amazing. The same problem already exists in PHP-CPP. This will turn it into an inner platform with layers of wrapping and overhead that might prove difficult to optimise.\nI believe that zephir would best fill a strong use case if it stuck to producing as raw PHP C as possible for extensions while avoiding adding any kind of auxiliary automatic functionality to wrapper/helper functions and macros. It is alpha and early days so the best time to consider these things and the direction to be taken. Currently it is very far from improving performance. I can understand stability problems with an alpha release but if this were sticking to producing equivalent C I strongly doubt it would have the severe performance issues it currently has so easily. I find that it performs exponentially slower and slower so a task that takes PHP 15 seconds takes zephir two hours.\nThe choice is between making something that anyone including your uncle can use or making a top performance framework. If the library does not offer worthwhile performance gains against competitors if asked about zephir and what it is good for my answer will be that it isn't worth it. All that wrapping for management is making it much harder for me to fix bugs or improve performance as well as to find possible bugs in the output that I might report. This is adding hundreds or thousands of lines of code to solve a problem for everyone and every conceivable case that a programmer can solve themselves for each their own cases with a few lines of code here or there and a basic knowledge of memory leak related issues. PHP lets you make memory leaks in many ways. It is a problem that might be better solved with education. I really doubt that much can easily beat native PHP-C without a huge effort. On that front, it would be nice to know what zephir plans or ideas are for adding custom C, integrating with other hand written C extensions, etc.\nBack onto the subject of references...\nI usually don't have a problem using a zval pointer everytime. Occasionally I pass a pointer pointer internally when I want to do something such as initialize a zval on demand. If something goes wrong later I will rid myself of if it isn't NULL.\nIf I declare a zval on the stack this is usually an optimisation for a temporary variable (business as usual). It is rare that I do that.\nPHP appears to be trying to do away with pass by reference but this is still a bit of a problem for passing variables. To move on with this the PHP way of doing things should be studied. For example, does changing a zval (value or type), create an entire new _zval_struct or only changes the value. I don't know this intimately.\nI think everything should be \"by reference\" unless deliberately copied/separated or implicitly by operation where it makes sense to do so and that only the value should change rather than adding references ontop of something that internally already uses a referential system. If some rules are laid out this becomes easier.\nI'm sure that if it worked like that I wouldn't have this:\n\nI'm not sure that there is a real value in passing by reference in PHP to a C function or method. I don't see a case in that scope where an unitialized zval would be passed. All it will allow is something such as if you pass the reference to the zval in $a[0] you can change it to point to the value in $a[1] which is some potentially bizarre behaviour and might lead to even more questionable or exotic code than just zval pointers. ** seems largely redundant.\nI don't know enough yet about what zephir is trying to do internally and exactly what is needed to move in this direction but hope this will generate a new look at it. With PHP7 coming out, which will later lead on to providing JIT and other features I think zephir will have to provide a serious performance edge to compete and remain relevant in the performance arena.\n. Sorry about that. I was being a bit lazy and edited them in github. I didn't plan to make changes so quickly when I started examining the code so never checked out. Though practice wise if there was more de-duplication it might be less of an issue. I'm not sure why the same routine is duplicated in so many places. I'm not sure how to squash but it can't be that difficult, if I find the time. If it looks like I'm going to make more fixes I'll checkout a copy.\n. That was relatively painless. Enjoy.\n. I'm not 100% sure if this is the cause of the memory leak but it would be great to get rid of it/eliminate it.\nThere is definitely a memory leak somewhere because I'm running the same deterministic function over and over with the same data with it using 6536 bytes more every time. The same in PHP has a delta of 0 bytes.\nWhere ever that memory leak is, the memory is getting freed somewhere when PHP shuts down and I can't find it in the framestack either.\nI have a little malloc hook that captures all mallocs, reallocs, frees, etc then detects unfreed memory and links it to a stack trace. This memory leak is hiding really well but at least it is picked up by emalloc so there is some hope.\nI've tried with out ZEPHIR_RELEASE and the memory leak is on another line.\nzephir_fcall_cache_entry *cache_entry_temp = malloc(sizeof(zephir_fcall_cache_entry));\nThe reason I'm skeptical of this in fcall is because it is caching multiple times for a recursive function then persisting that and sticking around after a function exit. I see it repeated twice for what looks like the same stacktrace and not much obvious pattern to it. The mallocs however are not enough to account for more than 10%-20% of the leak.\nAt this point I'm probably going to have to start knocking blocks out to see what stops or reduces the leak.\n. I did generate then make clean and make, php -dextension=pathtobuiltext. Added -g to the Makefile. It's 0.8 from composer.\nI don't understand what debug or production build means. There is only builddev as an alternative which doesn't work so I never touched it. Do you mean -DZEPHIR_RELEASE? I have activated that.\nIt will take a while for me to find a code sample because this is not a trivial algorithm.\n. That's subtle/indirect. There is definitely a memleak somewhere. I'll update this when I have pinned it down further.\n. Pinned it down:\n```\npublic function pipe_delimited_str_to_int_arr(var value)\n{\n    var i, v;\n    let value = explode(\"|\", value);\nfor i, v in value\n{\n    let value[i] = (int)v;\n}\n\nreturn value;\n\n}\n```\npipe_delimited_str_to_int_arr(\"1|2|3\")\nDoesn't leak if I do:\n```\npublic function pipe_delimited_str_to_int_arr(var value)\n{\n    var v, out = [];\n    let value = explode(\"|\", value);\nfor v in value\n{\n    let out[] = (int)v;\n}\n\nreturn out;\n\n}\n```\nNo more red herrings.\n. I'm not entirely convinced that there isn't still a memory leak in fcall or somewhere else in the kernel. I'm getting an odd small memory leak. It tends to become more prominent with many more iterations but seems to be something like logn in terms of size increase of the leaks memory each run.\nAfter knocking out bits of code all I can find is that it appears to be related more to how often functions are called than to any particular data.\nIt might be 24 bits and appears to normalise after a while. Sometimes the delta is negative and sometimes positive (it should always be 0, more is a leak, less means something unusual is happening that defers cleanup).\nI've seen some indication that it might normalise over time as though slots are being filled and it happens on a miss but it is hard to confirm this.\nIt's a shame, apart from the memory leaks and having to manually pass by reference zephir is working fine.\nDoes zephir come with any functions to dump it's managed memory?\n. Try it now.\nIt's an object call on an instance.\n. That's the two main points dealt with, work around and cause found.\nI find that USE_ZEND_ALLOC=0 is particularly useful not only with valgrind but with custom tools as well using mcheck or malloc hooks. debug_zval_dump is useful particularly when playing around with pointers.\nThe other weird memory leak I had was related to pointers and me not immediately noticing that while in one or two places places zephir separates zvals where it is extremely bad for performance, in other places it preserves references more than you might expect.\nThis is related to the quirk where in zephir calling array_pop wont COW the array and will change the original array passed up the callstack. PHP will not do that. In zephir with that type of issue you will end up with things referenced higher in the callstack than you expected when that happens.\nA useful guard for anyone deliberately culling the COWs is to guard all inputs in a prototype test case with unserialize(serialize($var)).\nI hope to have an impressive benchmark soon now the memory leaks appear to be clear.\n. No rush :). Dumping some useful tips in case anyone else has similar difficulties.\n. ",
    "mervick": "@dahweng your function does nothing\nphp\nfunction refValue($val) {\n    $ref = &$val;\n    return $ref;\n}\nfunction inc($x) {\n    $x++;\n}\n$y = 0;\ninc(refValue($y));\necho $y; // still 0\n. @fezfez I use my own function for this (it works on php5.6):\ncreate ext/zval_ref.c\n```c\nifdef HAVE_CONFIG_H\ninclude \"config.h\"\nendif\ninclude \ninclude \"php.h\"\ninclude \"php_ext.h\"\ninclude \"php_main.h\"\ninclude \"ext.h\"\ninclude \"kernel/main.h\"\ninclude \"kernel/exit.h\"\ninclude \ninclude \ninclude \"zval_ref.h\"\nvoid ZVAL_REF(zval dst, zval src)\n{\n    int refcount__gc = dst->refcount__gc;\n    dst->refcount__gc = 1;\nzval_ptr_dtor(&dst);\nMAKE_STD_ZVAL(dst);\n\nZVAL_ZVAL(dst, src, 1, 0);\ndst->refcount__gc = refcount__gc;\n\n}\n```\next/zval_ref.h\n```h\nifndef ZVAL_REF_H\ndefine ZVAL_REF_H\ninclude \ninclude \nvoid ZVAL_REF(zval dst, zval src);\nendif\n```\next/optimizers/ZvalRefOptimizer.php\n```php\n<?php\nnamespace Zephir\\Optimizers\\FunctionCall;\nuse Zephir\\Call;\nuse Zephir\\CompilationContext;\nuse Zephir\\CompiledExpression;\nuse Zephir\\CompilerException;\nuse Zephir\\Optimizers\\OptimizerAbstract;\nclass ZvalRefOptimizer extends OptimizerAbstract\n{\n    public function optimize(array $expression, Call $call, CompilationContext $context)\n    {\n        $context->headersManager->add('utils/zval_ref');\n        if (count($expression['parameters']) != 2) {\n            throw new CompilerException(\"'zval_ref' requires two parameter\", $expression);\n        }\n        $resolvedParams = $call->getReadOnlyResolvedParams($expression['parameters'], $context, $expression);\n        $context->codePrinter->output(\n            sprintf('ZVAL_REF(%s, %s);', $resolvedParams[0], $resolvedParams[1])\n        );\n        return new CompiledExpression('null', null, $expression);\n    }\n}\n```\nin your config.json add lines:\n```json\n\"optimizer-dirs\": [\n    \"ext/optimizers\"\n],\n\"extra-sources\": [\n    \"zval_ref.c\"\n]\n\n```\nAfter that in your zephir code you can use references, \nbut unlike php you must be sure that reference variable passed to method, \nexample:\n```php\npublic function awesomeMethod(/ reference, without type! / ref = \"undefined\")\n{\n    var hello;\n    let hello = \"Hello World\";\nif ref !== \"undefined\" {\n    zval_ref(ref, hello);\n}\n\n}\nusagezep\n   var ref;\n   let ref = null; / important to set some value /\n   obj->awesomeMethod(ref);\n   echo ref; / output: \"Hello World\" /\n```. @fezfez cause it works only under certain conditions (indicated above). @sergeyklay I guess I can\n. Removed static method, uses compilation context\n. If class not found in any path, when throws exception:\nReflectionException: Class {classname} does not exist\n in {path}/{filename}.zep on line {line}\n\n. Yes, in php it will work\n``` php\n<?php\nclass A {\n    public function __construct() {\n        echo \"Yes it works\\n\";\n    }\n}\nclass B extends A {\n    public function __construct() {\n        call_user_func(['parent', '__construct']);\n    }\n}\nnew B();\n```\n. php 5.6.27-1+deb.sury.org~xenial+1\nubuntu 16.04\n. a.zep\n```\nnamespace test;\nclass A {\n    public function __construct() {\n        echo \"Want to work in zephir\\n\";\n    }\n}\n```\nb.zep\n```\nnamespace test;\nclass B extends A {\n    public function __construct() {\n        call_user_func([\"parent\", \"__construct\"]);\n    }\n}\n```\ntest.php\n``` php\n<?php\nnew \\test\\B();\n``\n. The same error when useself` scope\nWarning: call_user_func() expects parameter 1 to be a valid callback, cannot access self:: when no class scope is active in ...\nscript to reproduce:\nc.zep\n``` php\nnamespace test;\nclass C {\n    public static function staticMethod() {\n        echo \"Hello from static method\\n\";\n    }\npublic static function test() {\n    call_user_func([\"self\", \"staticMethod\"]);\n}\n\n}\n```\ntest.php\n``` php\n<?php\n\\test\\C::test();\n```\nWorking example in php:\n``` php\n<?php\nclass C {\n    public static function staticMethod() {\n        echo \"Hello from static method\\n\";\n    }\npublic static function test() {\n    call_user_func([\"self\", \"staticMethod\"]);\n}\n\n}\nC::test();\n```\n. ",
    "rzajac": "Done\n. Didn't set my vim on the server :)\n. ",
    "gouchaoer": "php7 is improving, especcialy on performance(jit will merge into master soon) and static type(we now have scalar typehint in function parameter). it has prooved that in a normal application(the opened issue) zephir has the same performance as php. i can not see any advantage on using zephir to write zephir. zephir is not a meta-language of php(you can not translate it into php) but they all run on php runtime. i think zephir should keep close to php, be able to utilize php's libs and make up drawbacks of php, not stay away from php.. today i want to express the reason why zephir is not faster in real application.\nzephir is a great work and so does phalcon. it is fsatest in hello-workd benchmark. but hello-world benchmark has no io(redis/mysql...), the php-fpm is always eat 100% cpu and no blocking. this is not true. in real-world application, php-fpm is always blocking at io. the cpu is costed in switching from php-fpm to php-fpm, so zephir/php act the same. bottleneck is io.\nreactphp/swoole/workerman is async io framework and can solve this problem. but async callback is a hell. some framework use yield to implement a semi-coroutine like js's koa. they have great performance in real world applications. but semi-coroutine is not as easy as blocking php-fpm apps. so swoole2 implement php's own coroutine and now we can write io heavy real world apps like go.\nhope to help you. did you run a flame graph to detect what's the bottleneck?\nopenresty community heavily utilize flame graph to detect what exeactly the line of code cause the bottleneck and fix it.. @zhiephie \nhey, I also run into this problem\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(13): warning C4013: 'MAKE_STD_ZVAL' un\ndefined; assuming extern returning int\nmy environment is win7, php7.0.12, vs2015...\nhow do you solve the problem?. @zhiephie it works!!!\n@sergeyklay please try to change the build_win32 to automatically decide which php version to use. thx.. \u4f60\u53ef\u4ee5\u770b\u770b\u5b98\u65b9\u7684windows\u4e0b\u5b89\u88c5zephir\u7684\u6559\u7a0b\uff0cphp5.x\u548cphp7\u5728windows\u4e0b\u7684\u7f16\u8bd1\u73af\u5883\u662f\u4e0d\u4e00\u6837\u7684\uff0c5.x\u7684\u65e9\u5c31\u6709\u4eba\u6253\u901a\u4e86\u3002php7\u7684\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u6559\u7a0b\uff1ahttp://qsalg.com/?p=549. ",
    "danhunsaker": "This isn't to say ZendEngine backends will go away. That wouldn't serve any purpose, here. Instead, the proposed new backend would be an additional one. (For those who didn't catch that above...). Composer requirements include a way to require extensions. Just adding ext-zephir_parser will remind users to install the extension if they haven't already.\nAs for the install script we use in test environments, moving that to a different repo would be more maintainable, for sure. Then we just change the test code to grab the latest install script from GitHub (stable branch, of course) before running it as we're already doing now. For best results, move that install script into phalcon/php-zephir-parser itself, so it changes at the same time as the actual extension we're installing.. Two things about your regex. One, the {1} is superfluous - regular expressions already match only a single character (well, byte, in this case) unless told to match more. If you like it for clarity, that's fine, but it doesn't do anything functional at all. Second, though, is more important. The , in your [] character set doesn't have a syntactical purpose - it will be matched literally, meaning the strings 0, 1, and , will all match. You probably want to remove that. \nI'm also not sure it actually addresses the original use case, and the overhead of compiling and evaluating a regular expression... It's not the greatest, as you said. \ud83d\ude05. I'll be submitting a fix for this soon. What's going on is you're somehow loading the compiler twice (at least), and it's using a require where it should be a require_once. I'm not sure how this would come about in a regular zephir build, but with any luck it should be fixed fairly soon.. ~~Actually, no, I looked at what Zephir's doing with version number checks, and it doesn't actually use a regex in the first place. Otherwise I'd've changed that, already, too.~~\nSomehow missed that the optimizer had some of the version checking logic in it. Applied the regex to it, as well.. I'll use your examples and try to explain from there.\nThe proposed feature I've been building uses ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX, when applicable, to tell PHP this method returns a string in all three of these cases:\nzephir\npublic function hello (name) -> string {\n    return \"Hello \" . name;\n}\nIt then, additionally, uses ZEND_ARG_TYPE_INFO to tell PHP this method expects a string argument in this case:\nzephir\npublic function hello (string name) -> string {\n    return \"Hello \" . name;\n}\nThe current issue comes along in this case:\nzephir\npublic function hello (string! name) -> string {\n    return \"Hello \" . name;\n}\nShould we still use ZEND_ARG_TYPE_INFO in this case? If we do, PHP will automatically cast the input to a string before we even see it, making the ! irrelevant, as the code Zephir generates will never actually receive anything other than a string value. To illustrate this another way, here's the result of running the current test suite against my new feature branch:\n```\nThere were 6 failures:\n1) Extension\\MCallTest::testOptionalParameterBooleanException\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\n2) Extension\\Oo\\OoParamsTest::testSetStrictAgeException1\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\n3) Extension\\Oo\\OoParamsTest::testSetStrictAgeException2\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\n4) Extension\\Oo\\OoParamsTest::testSetStrictAverageException1\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\n5) Extension\\Oo\\OoParamsTest::testSetStrictAverageException2\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\n6) Extension\\Oo\\OoParamsTest::testSetStrictNameException\nFailed asserting that exception of type \"\\InvalidArgumentException\" is thrown.\nIf we don't use `ZEND_ARG_TYPE_INFO`, however, then users won't be able to extend the class with something like the following:php\npublic function hello(string $name): string {\n    return parent::hello($name) . \", how are you?\";\n}\n``\nIn this case, PHP complains that methodhello(string $name): stringneeds to match the signature ofhello($name): string. Which is the specific issue I'm hoping to resolve by adding these type hints in the first place: I want my child classes in PHP to properly specify what types they support for arguments and return values. At the moment, I have to usehello($name)as the full signature, rather thanhello(string $name): string` as I'd prefer.\nAnyway, as far as this issue is concerned, the problem is in how to handle Zephir's strictly typed method arguments. Using ZEND_ARG_TYPE_INFO lets child classes specify they want string values to be passed in, but also lets PHP automatically cast other values to strings before Zephir ever sees them, preventing the strictness checks from actually doing anything. Hopefully that makes things clearer?. I see I wasn't quite clear enough. ZEND_ARG_TYPE_INFO is what I'm adding in my proposed feature (#1658), because it's not already in place.\nThe question here is whether to use ZEND_ARG_TYPE_INFO when the Zephir type is strict, allowing PHP to coerce the value to the desired type just as it would with a non-strict type hint? Or to continue to use ZEND_ARG_INFO instead, for strict types, so that PHP doesn't see the type hint at all, but Zephir gets the original value in its original type, and can handle it as it currently does?\nOr am I misunderstanding you, now, and you're saying that Zephir's strict argument types are only intended to provide strict typing for PHP 5, so we don't actually need to treat them any differently than non-strict types in PHP 7?. OK, so I'll have Zephir use ZEND_ARG_TYPE_INFO for strict types as well as regular ones, and leave everything else alone so that Zephir can still handle strictness for Zephir-to-Zephir calls.\nAt the moment, I have it telling PHP that a value IS_LONG when it's an int-compatible type, IS_DOUBLE for double-compatible types, etc, so that's how we're handling types that aren't in ZE.\nI'll need to adjust the tests to account for the new type handling, but I do think it'll be a backwards-incompatible change, so we may want to bump the version up to 0.11 once it's merged.. All tests passing, so looks good. Unless there are further comments/objections, I think we can merge that and close this. :slightly_smiling_face: . Yeah, PHP requires consistent type hints between classes and their parent classes/interfaces. Which means Phalcon will need to be updated to address those inconsistencies.. Discussion of the failed checks, and how to handle them properly, was started in #1656 before this WIP was submitted for reference.. OK, should be ready to go. The most recent change was to start using the PHP version to detect whether we have support for strict typing or not, and adjusting the expected exception accordingly. With declare(strict_types=1) in the files where strict type checks are appropriate, PHP throws TypeError before we see values passed to Zephir code. Otherwise, PHP coerces values to the expected type automatically, also before we see them. PHP 5.x doesn't support strict typing in any of its incarnations, nor does it support type hinting in the first place, so Zephir code will compile to the same C code as before, with ZE2.. Oops. Yeah, that would certainly cause issues. Time to decide how to handle this one.\n\nForbid using that variable name, as a reserved keyword.\nDetect variables with that name, and rename them internally.\nThrow a warning that there's a conflict there, but allow it anyway, in case the user knows the value's purpose and wants to take advantage of it being exposed.\nSome combination of those, probably selected via configuration of some kind.\n\nThanks for the heads up! . Variadic arguments aren't supported, yet.. The two aren't related. Sorry I haven't had a chance to look into this one more closely, yet, but it's related to how we're handling type hinting in 0.11.0.. Hmm. We may have classified all-uppercase names as reserved for constants. If that's the case, this is expected behavior, but should be documented.... Compiled logic is faster than interpreted, so complex logic is generally considerably faster with Zephir.\nThat said, anything that calls into PHP functions/methods, even if they are provided by other compiled code, has to go through the same access process as the interpreted PHP, which can end up being slightly slower as values are translated between contexts. This is where Optimizers come in. When defined, an Optimizer overrides the call into PHP itself, allowing you to directly call compiled code without passing into and back out of the PHP interpreter (and then back in and out again with the return value). Essentially, an Optimizer takes Zephir code and outputs the corresponding C code, so all you need to do is define an Optimizer for md5() that outputs a call into a C function for that calculation, rather than the PHP function. Rerun your benchmarks with that in place, and you should see much better results.\nI'd love to take a look at your benchmarks, by the way. Possibly even add them to the actual test suite for Zephir itself.. This is also true, yeah.. You have full access to any PHP function you need/like. There's additional overhead involved, but Zephir will automatically call into PHP to use them.. Yes. You can use any PHP function you like. So just use PHP's preg_match.. We only see part of the implementation of A, and none of B, so it's difficult to say where the problem is being introduced. Can you provide a more complete example?. Not certain I properly understand this question. What I'm seeing, here, is that you want to replace functions provided elsewhere in PHP with your own, or at least be able to intercept calls to those functions to do other things instead/before/after?\nI'm not sure whether that's possible.... I don't believe we do. We might be able to look into it at some point, though, or perhaps someone enterprising could pick up runkit maintenance.. That works for extensions, but not so much for interfaces otherwise defined in PHP userspace.\nUnfortunately, as Zephir is compiled, it can't support implementing or extending interfaces or classes that aren't also available from the C side of things (that is, other extensions). Same goes for traits, for the same reasons. Compiled code can't be partially built from interpreted code.\nThe fact that compiled code can call interpreted code makes this distinction harder to see, I suspect, but the things an extension calls aren't part of the extension itself, so the distinction is still there.\nHopefully that helps answer your original question, while @sergeyklay's PR should help with your specific use case by providing a workaround.. Following the old install instructions would do this. Running the install script without first running composer install, specifically, would do this. It might be helpful to add the composer install step to the install script itself?. You won't be able to build extensions on secured systems, which are generally production systems anyway and should never be used for high load operations that aren't part of normal function.\nIn other words, the computer you're running this on is set up to disable certain functions that Zephir needs to do its thing. You'll need to re-enable them, but if you're building on a system used to host content on the wider Internet, that's a really bad idea, and you should use a different machine instead. Possibly a virtual machine on your own computer.. The only version really tying our hands is 5.6, right now.. Sure can. So can 7.3, if you like. The list of supported versions is available in the documentation, or you can peek at the .travis.yml to see which versions we're testing against at any given release.. If you look closer at the error message, you'll see that it's coming from PHP, not Zephir itself. This is a restriction that PHP places on things. We can't relax it or remove it.\nThat said, are you running a custom compile of Phalcon built with Zephir 0.11.x? Because that's unsupported entirely - Phalcon should always be built with Zephir 0.10.x.. That's something to bring up in the Phalcon repo.. I'm only on the Zephir team. I have nothing to do with Phalcon, generally. All I know is that odd numbered minor versions are intended to be unstable dev versions, while even numbered minor versions are intended to be stable and usable. Much like the Linux kernel back in the 2.x days (if not since).. Closing this since it's pointing to the wrong branch.. We should probably adjust the 0.10 docs to specify the 0.10.x branch when cloning, to avoid this kind of issue in future versions. Do the same in 0.11's docs, while we're at it?. Line 404? I think it's lying. I can't find that line anywhere... \ud83d\ude1c. The docs need updating, for sure. Zephir is now installed using Composer, or by grabbing the latest PHAR from GitHub.\nNote, however, that Windows 7 may not be supported properly.. How do I put this without being rude ....\nWindows 7 is very old, and isn't supported by most software released in the last few years, including PHP itself. It will stop receiving security updates in less than a year (though, to be fair, only just less). It's a good idea to move to something else, be it Windows 10, Linux, or something else entirely, just in general, not just for Zephir support.\nWill it work for now? Most likely. But you're on your own if it doesn't, just as you would be for any other project.. I stand corrected on PHP's support status, though I'll point out that Windows has always been a second-class citizen with PHP support, no matter the version.\nThat said, it's still dangerously close to EOL, and the support overhead is excessive for a project with a team this small. So we won't be able to help much with Win7-specific issues. That's my entire point, there.\nI agree, all that said, that my responses have been antagonistic, and I'll need to address that.. Pretty sure this is tied to the fact Travis only provides ZTS versions of PHP, which aren't exactly stable, still. Hence why none of the major distros ship it, preferring the non-thread-safe (NTS) builds instead. I'm guessing this isn't an issue you see locally? . Then yeah, it's almost certainly a ZTS bug.. Build it ourselves, and yes, respectively.. Seems like the kind of thing we'd want to detect during generate, so we can either optimize the code we generate to skip handling values that aren't used, or to at least warn the dev that they need to use such variables in order to prevent runtime crashes. I'd probably do both, personally.. The latest version of Zephir is installed via Composer, or by downloading the .phar from the GitHub Releases page. The install script has been removed.\nWe're still going through all the documentation to update it with all the changes we've made recently.. Not sure this actually addresses the issue in #1660... The variable's type doesn't need to be overridden; its name does. This code should still have the same issue originally reported, or at least a similar one - that we're dealing with a variable whose name is already in use within the code we generate, conflicting with the variable of the same name in the developer's code. Replacing the actual return type with variable masks the actual itself and prevents type hinting from working properly.. I'm not aware of any reason we'd want to allow access to the underlying Zephir kernel C constructs directly, nor what benefit that would provide. In any case, changing the variable's type is not the correct answer, as it violates the type strictness guarantees. Transparently changing the variable's C representation (say, with a prefix) to prevent collisions with Zephir-defined values is safe and correct.. Isn't there a more recent Phalcon that's actually 7.3 compatible?. Ah. Must be crossing projects in my head.\nCarry on!. Interesting that they say that. A change to dl() was just made in 7.2 to allow extensions to be loaded by extension name rather than filename. Hardly an expected behavior for a deprecated feature.\nIt's needed to be able to load the extension without using an ini file change. More on that below.. These are not treated as strings, without the quotes, and are in fact treated as floats. Type juggling allows this to sometimes work as expected, but I don't like to rely on it, given the way floats handle rounding and often even formatting (I've encountered errors where 2.2 becomes '2.200000', for example, which of course doesn't match as expected for a version number, as it isn't a float at all). I recognize it's a preference thing, though, so I can revert that if we'd prefer to just leave it alone.. Ugh. Ok. PHPUnit itself is inconsistent on this one.\nI changed it because I was seeing the opposite error on my system (and in Travis, for 5.6+ - see https://travis-ci.org/phalcon/zephir/jobs/387590228#L2107, for example), where the method in question does not have the type hint, and PHP is complaining that the child class does. Since it's more correct for child classes to relax type restrictions than to be more strict about them (a change in 7.1 or 7.2, if I remember correctly, made this explicit by removing the error messages for that case), I think the revision is the more correct one, but we might be able to figure out another approach that lets the class support both parents, somehow.... The current (unpatched) approach already uses a separate ini file (though admittedly I ~~commented that part out~~ removed that part, above) and a change to the core ini (the line we're discussing here) to make things function as needed for these tests. This approach is very inflexible and non-portable.\nWhat I mean, here, is that the current approach requires changes to the system-wide configuration of PHP itself, something which isn't always desirable, or in some cases even possible. This prevents running tests locally, meaning Travis becomes the only testing platform available, and every change will likely result in several test runs to resolve any problems. Alternately, users who contribute to Zephir dev will need to have the test extension loaded across their entire system, at least for the duration of tests, and are responsible for remembering to add and/or remove this entry every time manually.\nThe primary purpose of this PR is to remove any need to modify the ini files at all to successfully run tests. One option is to load the extension directly via the CLI, using php -d 'extension=test' ./unit-test/phpunit ..., but this approach actually leads to memory leaks that cause Valgrind to fail the tests. So I've opted for the alternative where the test bootstraps load the extension themselves, assuming it isn't loaded already, which works perfectly in every case, and allows tests to be run locally as well. (The PHPUnit docs say that it supports the -d option to its CLI command, but I wasn't able to get that working in any way, so here we are.). I just realized I was responding to the error message rather than the actual changes being flagged. My above comment applies to a change in the Issue1404Test class itself, wherein I dropped the type hint. That, ultimately, is the actual cause of the error message above.\nWhat's going on here is that I moved the \"use PHPUnit 5.7 if we're not using PHP 5.5\" logic to Composer's realm of responsibility, by adjusting the version requirement in composer.json to allow 4.8 or 5.7, as appropriate. Since 5.7 doesn't support PHP 5.5, but does support 5.6 and 7.x, Composer automatically installs 4.8 for PHP 5.5, and 5.7 for all the others. No shell commands required.\n~~I probably ought to remove those lines rather than comment them out, though.~~ Removed in most recent amendment.. As to the inheritance error (which we now only get in 5.5, instead of 5.6, 7.0, 7.1, and 7.2), I'll see what I can figure out.. Hmmm. None of the approaches I can think of to conditionally define this method are working. I tried:\n- dropping it into a trait, and then defining that trait based on the PHP version; PHPCS complained about putting the trait into the same file as the class\n- dropping the trait into a separate file; PHPCS complained that the keyword trait appeared twice, and only one trait/class/interface should be defined per file (which is fair enough)\n- a trait file for the autoloader that requires the correct actual trait file depending on PHP version; the require statements seem to not be executed, so the trait is never actually defined before it gets used\n- attempting to override the method in __construct; just doesn't do anything\nI might be able to get away with manually requireing the appropriate trait file manually instead of relying on the autoloader.. OK, that worked. This message should be gone.. Hmm. fair point. I'll need to take a peek at the other test I pulled this block from and adjust it, too.. This is addressed. Now handling the other issues that are preventing this WIP from becoming a true PR.. Probably want to step over :INTERNAL if :RUN was reached?. s/.c/.h/. s/.c/.h/. s/.c/.h/. s/.c/.h/. s/.c/.h/. s/.c/.h/. Why are we changing the CoC? Especially in this PR.... strtolower() is extraneous with a case-insensitive check.. This stupid thing put the comment in the wrong part of the code. This specific line is perfectly fine (though I'm of a mind to use -1 <= instead of 0 ===).. This is the change I meant when I said strtolower() is extraneous.. ",
    "skollro": "Looks very nice!\nThere are only 3 instead of 4 spaces in front of $cast\n/home/travis/build/phalcon/zephir/Library/Stubs/Generator.php:224:24: error - Line indented incorrectly; expected at least 24 spaces, found 23\n/home/travis/build/phalcon/zephir/Library/Stubs/Generator.php:226:24: error - Line indented incorrectly; expected at least 24 spaces, found 23\n. I hope these changes are merged soon ;)\n. ",
    "cyrrill": "previous installation of json-c seemed to work fine, or at least reported no errors.\nI am unable to install Zephir at all, please advise.\n. Thanks! That worked. I really thought that doc said \"install-c\" without the space, like the json package. : )   If that-c option is required, what about just making it an implicit option? \n. That makes sense, thanks again.\n. ",
    "yuanjiong199": "sorry\uff0c It should be zephir ,i write wrong\n. my system is CentOS 6.2 64bit\n. yes. However, I later found the reason.Because the php.ini file of the open_basedir and disable_functions options configuration leads.\nthks\n. yes. However, I later found the reason.Because the php.ini file of the open_basedir and disable_functions options configuration leads.\nthks\n. ",
    "chrismervyn": "Could you elaborate a little on what does \"all\" stand for, in terms of .so only?\n. Awesome! So the actual OS version of the Linux distro doesn't matter eh?\nNice! If turns out to be correct then I would remain grateful:) Cheer!\nThanks and Regards,\nChristian M. Raymonds\n\"Life is a competition to become the criminal rather than the victim!\"\nOn Sat, Nov 22, 2014 at 11:20 AM, YIN ZHEN HAI notifications@github.com\nwrote:\n\nWe build .so libs for PHP-5.{3,4,5,6} x86_64 with gcc, these .so libs can\nfit almost all kind of Linux distributions. It's our customer that choose\nwhich PHP version he use.\n@chrismervyn https://github.com/chrismervyn\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/issues/646#issuecomment-64070399.\n. \n",
    "wskdf": "I tried uncomment and comment line \n//return new CompiledExpression('null', null, $expression);\nbut still not work :(\n. This is BUG???\n. This issue still not fix :'(\n. Cool,,,\nBut that's token for compile. Not for generate zephir code to C.\n. I'm sorry if you don't understand my english :(\nI mean when use token #ifdef or #ifndef (or whatever) and run command\n$ zephir generate\nZephir token will evaluate and generate/not to C code.\nThat's different with C token\n```\n%{\nifdef TOKEN_NAME\nendif\n}%\n```\nThat will evaluate when run command \n$ zephir compile\nor execute script\n```\n./ext/install\n```\nSo, What I need is Generate token. Not Compile token.\n. if is_null(expires) {\n. Same to same\n[Mon Apr 20 13:05:02 2015] [error] [client 127.0.0.1] PHP Fatal error:  Uncaught exception 'RuntimeException' with message 'Call to undefined method Nasi::test(), did you mean 'test'?'\nzephir version\n0.6.2a\ngit log\ncommit 941cd3ea858ba78aeafe7169cf222b83f53641a2\nMerge: 95cccb1 80eea0b\nAuthor: Andres Gutierrez gutierrezandresfelipe@gmail.com\nDate:   Sun Apr 19 10:20:14 2015 -0500\n. PHP 5.3.10-1ubuntu3.17 with Suhosin-Patch (cli) (built: Mar 17 2015 12:00:21) \n. Recently installed. But still get error\nPHP Fatal error:  Class 'Zephir\\Optimizers\\FunctionCall\\CompiledExpression' not found in /home/wskdf/coba/optimizers/TahedeTesOptimizer.php on line 32\nreturn new CompiledExpression(\"double\", \"my_tahede_tes(\" . $resolvedParams[0] . \")\", $expression);\nThe code from zephir manual, I only replace function name.\n. Generate and compile success, but extension not work\n/usr/sbin/apache2: symbol lookup error: /usr/lib/php5/20090626/coba.so: undefined symbol: my_tahede_tes\nI'm not must use \"my_calculate_pi\" right?\n. I did.\nBut solved now. Run zephir fullclean and generate again,,,,\nThank's\n. When I compile in Linux is fine, but in Windows is not.\nThis is my basefs.zep. \n``` PHP\nnamespace Tumbihe\\Fs;\nabstract class BaseFs\n{\n    protected _last_error;\nprotected function _calc_size(var size, boolean! _string=TRUE) -> double|string\n{\n    var prefix, factor;\n\n    if _string === TRUE {\n\n        if size < 0 {\n            return \"NaN\";\n        }\n\n        //http://jeffreysambells.com/2012/10/25/human-readable-filesize-php\n        let prefix = [\"B\",\"kB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"],\n            factor = floor((strlen(size) - 1) / 3);\n\n        return sprintf(\"%.1f\", size / pow(1000, factor)) . \" \" . prefix[factor];\n\n    }\n\n    return size;\n}\n\n}\n```\nthere are to be improved?\n. Yup\nEntire ext folder. after run `zephir fullclean``\n. Generate with version 0.6.2a. \nWork fine on windows now.... (y)\n. ",
    "RickyGit": "Anyone can help to implement globals_set() ?\nIt will fix phalcon/cphalcon#2979\nThanks\n. ",
    "dryyun": "it fixed? I had this problem.\n. ",
    "yejune": "thank you\n. ",
    "7thcubic": "https://gist.github.com/7thcubic/0e8f7d864180e03def6d\nI altered the code. it should add the .so/dll into the php.ini, havent tested it yet for linux, but on windows  if the phalcon is not loaded in php extentsion it will copy the file over and add it to the php.ini.\nI havent figure out a way to unload it first, since i do not know how the flow of things is like. but it works perfectly on windows.\nLink the php path to the php your webserver uses, eg. wamp and it will look for it\n. edit. i was wrong. vs2012 doesnt support c99. gg windows user. need to use vs2013 vc12 i guess or use make, or edit those 2 files, or fix zephir please. \n. ",
    "alanwillms": "@nazar-pc how did you solve this?\n. @phalcon What if I am converting part of an existing package for optimization purposes? I would have to change my entire package to follow Zephir namespace name convention. I think this is still a valid issue.\n. @andresgutierrez I don't know C enough to do that. Can you reopen this issue so that it becomes visible for someone willing to solve it? :blush: \n. ",
    "kais92": "```\nnamespace Zephirbugs;\nclass test {\nprivate a;\nprivate b;\n\npublic function __construct (a, b){\n    let this->a = a;\n    let this->b = b;\n}\n\npublic function test1 (){\n    let this->a -= this->b;\n    echo this->a.\"\\n\";\n}\n\npublic function test2 (){\nlet this->a = this->a - this->b;\necho this->a.\"\\n\";\n}\n\n}\n//in php file\nuse Zephirbugs\\test;\n$a = new test (3,1);\n$a->test1(); //echo 1 expected 2\n$b = new test (3,1);\n$b->test2(); //echo 2 as expected\n```\n. ",
    "picasso250": "It is not in the document\n. ",
    "tirnak": "I don't quite understand the issue.\n``` php\nnamespace Utils;\nclass Greeting\n{\n    public static function say()\n    {\n        var x;\n        let x = true ? \"true\" : \"false\";\n        echo x;\n    }\n}\n```\nworks as expected. And        \nphp\n        var var2, var3;\n        let var2 = [\"asd\",\"qwe\"];\n        let var3 = explode(\"1\", \"asd1qwer1swder1\");\n        echo var3[0];\nalso gives nice output.\nNo problem with next one:\nphp\n        var x,y;\n        let x = explode(\"1\", \"qwe1asd\");\n        let y = isset x[2] ? x[2] : \"\\n\";\n        echo y;\nWhereas,\nphp\nexplode(\"delimiter\", isset(var2[1]) ? var2[1] : \"\");\nhere it seems like you are trying to separate boolean value by string value.\nMy guess is that just shouldn't work that way. \nBut ternary operator works as expected.\n. ",
    "brainformatik": "@nkt \nnot working c code:\n``` c\nPHP_METHOD(Phalcon_Http_Request, getContentType) {\n    zval *contentType, *_SERVER;\n\n    ZEPHIR_MM_GROW();\n\n    zephir_get_global(&_SERVER, SS(\"_SERVER\") TSRMLS_CC);\n    ZEPHIR_OBS_VAR(contentType);\n    if (zephir_array_isset_string_fetch(&contentType, _SERVER, SS(\"CONTENT_TYPE\"), 1 TSRMLS_CC)) {\n            RETURN_CTOR(contentType);\n    } else if (zephir_array_isset_string_fetch(&contentType, _SERVER, SS(\"HTTP_CONTENT_TYPE\"), 0 TSRMLS_CC)) {\n            RETURN_CTOR(contentType);\n    }\n    RETURN_MM_NULL();\n\n}\n```\nworking c code:\n``` c\nPHP_METHOD(Phalcon_Http_Request, getContentType) {\n    zval *contentType = NULL, *_SERVER;\n\n    ZEPHIR_MM_GROW();\n\n    ZEPHIR_OBS_VAR(contentType);\n    zephir_get_global(&_SERVER, SS(\"_SERVER\") TSRMLS_CC);\n    if (zephir_array_isset_string_fetch(&contentType, _SERVER, SS(\"CONTENT_TYPE\"), 0 TSRMLS_CC)) {\n            RETURN_CCTOR(contentType);\n    } else {\n            ZEPHIR_OBS_NVAR(contentType);\n            if (zephir_array_isset_string_fetch(&contentType, _SERVER, SS(\"HTTP_CONTENT_TYPE\"), 0 TSRMLS_CC)) {\n                    RETURN_CCTOR(contentType);\n            }\n    }\n    RETURN_MM_NULL();\n\n}\n```\nhow to reproduce:\nphp\n$_SERVER['CONTENT_TYPE'] = 'application/soap+xml';\nprint_r($app->request->getContentType());\nprint_r($app->request->getContentType()); // -> here segmentation fault\n. ",
    "dgafka": "True, I did compile it with default options. I didn't found any information about production compiling in zephir documentation. I will try this at the evening and let you know, if it helped ;)\nThanks for fast response @ovr :)\n. @ovr I just tested it in production mode and seems like times for zephir are similar to PHP 5.4 for me. You think is it fault of bad performance in some places in zephir, @ovr ? Because it isn't just me, your results shows the same.  \nTbh I don't see any kind of advantage over clean PHP now. That's pretty bad. \n. ",
    "rvanvelzen": "Just grabbed the latest release, and this issue still exists.\n. ",
    "guiwoda": "@ovr The tutorial says:\n\nThe code for this class must be placed in \u201cutils/utils/greeting.zep\u201d:\n\nAnd so I did. You mean it should be in utils/greeting.zep?\n. Oh god, now I am embarrased. I had utils/utils/utils...\nIt is confusing tho, but I could've seen that before bugging you guys. Sorry about that!\n. ",
    "astorm": "@guiwoda if it sooths your ego two plus years later, I just did the same thing. Thanks for posting this :). ",
    "maciejmrozinski": "@ovr what is the status of this PR? I would love to see traits landed in Zephir :). @Jurigag I think that traits implemented in PHP part will be enough for 99% of use cases and most of people using Zephir will be satisfied.. Thx, I can wait for commited fix :). ",
    "olivier-monaco": "https://github.com/phalcon/zephir/blob/master/ext/kernel/array.c#L1308\nThe fetched array is updated, not the current one.\n. Hum hum, I will try... but for the moment, composer did not install phpunit (missing \"phpunit/phpunit\" in require-dev) and now:\n\nPHP Fatal error:  Class 'Test\\Arithmetic' not found in /volumes/vg1-data/Web/vhosts/phalcon2/zephir/unit-tests/Extension/ArithmeticTest.php on line 28\n\n. And now one test fails because of:\n\nPHP Fatal error:  Class 'Test\\ExitDie' not found in /volumes/vg1-data/Web/vhosts/phalcon2/zephir/unit-tests/Extension/fixtures/exit.php on line 3\n\n. I still have issue with Test\\ExitDie but my tests work fine.\n. Done.\n. ",
    "imadige": "thanks\n. thx :)\nini_set(\"memory_limit\", -1);\n. let rii = new \\RecursiveIteratorIterator(new \\RecursiveDirectoryIterator(self::dir_search));\nlet rii=iterator_to_array(rii);\n. http://php.net/manual/en/function.str-replace.php\nphp\n// Provides: <body text='black'\n$bodytag = str_replace(\"%body%\", \"black\", \"\");\n\n// Provides: Hll Wrld f PHP\n$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n$onlyconsonants = str_replace($vowels, \"\", \"Hello World of PHP\");\n// Provides: You should eat pizza, beer, and ice cream every day\n$phrase  = \"You should eat fruits, vegetables, and fiber every day.\";\n$healthy = array(\"fruits\", \"vegetables\", \"fiber\");\n$yummy   = array(\"pizza\", \"beer\", \"ice cream\");\n$newphrase = str_replace($healthy, $yummy, $phrase);\n// Provides: 2\n$str = str_replace(\"ll\", \"\", \"good golly miss molly!\", $count);\necho $count;\n?>\n. ",
    "oNguyenTienManh": "Compile-error.log \n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c: In function 'zim_Libtools_Testconstruct':\n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c:61:3: error: duplicate label 'tryend_1'\n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c:44:3: note: previous definition of 'try_end_1' was here\nmake: *** [libtools/test.lo] Error 1\n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c: In function 'zim_Libtools_Test_construct':\n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c:61:3: error: duplicate label 'try_end_1'\n/media/DataExt4/Working/libtools/ext/libtools/test.zep.c:44:3: note: previous definition of 'try_end_1' was here\nmake: *** [libtools/test.lo] Error 1\n. i known, but normal it must go to catch block and program did't interrupt\n. ",
    "silverkorn": "Great! Thanks for the confirmation.\n. ",
    "masums": "I have tried to compile using PHP 7 but shows following error.\nZVAL_STRING takes parameter 2 but 3 passed.\nphp info\nPHP 7.0.0RC5 (cli) (built: Oct 25 2015 17:36:08) ( NTS )\nCopyright (c) 1997-2015 The PHP Group\nZend Engine v3.0.0-dev, Copyright (c) 1998-2015 Zend Technologies\n. I have compiled at RedHat Linux terminal where PHP 7 RC5 was installed.\nOn Sat, Oct 31, 2015 at 12:58 AM, Andy Gutierrez notifications@github.com\nwrote:\n\n@masums https://github.com/masums Are you compiling a custom Zephir\nproject?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/issues/756#issuecomment-152617085.\n\n\nMd. Rashidul Hasan Masum http://masums.com\nSoftware Architect\nOnnoRokom Software Ltd. http://onnorokomsoftware.com\nMobile: 88018 11 41 95 57\n. ",
    "r3ndyipb": "i have same issue with @masums \nconfigure: error: in `/root/cphalcon/ext':\nconfigure: error: C compiler cannot create executables\ni use centos 7 and php 7 RC5\n. sory i forget install make and gcc :D \nbut i found this error when i do this\ngit clone http://github.com/phalcon/cphalcon\ngit checkout 2.0.x\ncd ext\nsudo ./install\nerror :\nlibtool: compile:  gcc -I. -I/root/cphalcon/ext -DPHP_ATOM_INC -I/root/cphalcon/ext/include -I/root/cphalcon/ext/main -I/root/cphalcon/ext -I/usr/include/php -I/usr/include/php/main -I/usr/include/php/TSRM -I/usr/include/php/Zend -I/usr/include/php/ext -I/usr/include/php/ext/date/lib -DHAVE_CONFIG_H -O2 -Wall -fvisibility=hidden -flto -DZEPHIR_RELEASE=1 -c /root/cphalcon/ext/phalcon.c  -fPIC -DPIC -o .libs/phalcon.o\nIn file included from /root/cphalcon/ext/phalcon.h:15:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator.zep.h:12:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:125:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/assets/collection.zep.h:41:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Assets_Collection(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:223:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/http/response/headers.zep.h:14:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Http_Response_Headers(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:288:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/email.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Email(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:289:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/exclusionin.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Exclusionin(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:290:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/inclusionin.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Inclusionin(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:291:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/ip.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Ip(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:292:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/numericality.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Numericality(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:293:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/presenceof.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_PresenceOf(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:294:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/regex.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Regex(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:295:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/stringlength.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_StringLength(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:296:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/uniqueness.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Uniqueness(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:297:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/url.zep.h:7:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Url(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.h:336:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/translate/adapter/csv.zep.h:10:1: error: unknown type name 'zend_object_value'\n static zend_object_value zephir_init_properties_Phalcon_Translate_Adapter_Csv(zend_class_entry class_type TSRMLS_DC);\n ^\nIn file included from /root/cphalcon/ext/phalcon.c:24:0:\n/root/cphalcon/ext/kernel/main.h: In function 'zephir_maybe_separate_zval':\n/root/cphalcon/ext/kernel/main.h:91:2: warning: implicit declaration of function 'Z_REFCOUNT_PP' [-Wimplicit-function-declaration]\n  if (Z_REFCOUNT_PP(z) > 1 && !Z_ISREF_PP(z)) {\n  ^\n/root/cphalcon/ext/kernel/main.h:91:2: warning: implicit declaration of function 'Z_ISREF_PP' [-Wimplicit-function-declaration]\n/root/cphalcon/ext/kernel/main.h:94:3: warning: implicit declaration of function 'ALLOC_ZVAL' [-Wimplicit-function-declaration]\n   ALLOC_ZVAL(new_zv);\n   ^\n/root/cphalcon/ext/kernel/main.h:95:3: warning: implicit declaration of function 'Z_UNSET_ISREF_P' [-Wimplicit-function-declaration]\n   INIT_PZVAL_COPY(new_zv, z);\n   ^\nIn file included from /root/cphalcon/ext/phalcon.c:25:0:\n/root/cphalcon/ext/kernel/fcall.h: In function 'zephir_return_call_function':\n/root/cphalcon/ext/kernel/fcall.h:586:3: warning: passing argument 1 of '_zval_ptr_dtor' from incompatible pointer type [enabled by default]\n   zval_ptr_dtor(return_value_ptr);\n   ^\nIn file included from /usr/include/php/Zend/zend.h:39:0,\n                 from /usr/include/php/main/php.h:35,\n                 from /root/cphalcon/ext/phalcon.c:8:\n/usr/include/php/Zend/zend_variables.h:112:15: note: expected 'struct zval ' but argument is of type 'struct zval '\n ZEND_API void zval_ptr_dtor(zval _zval_ptr ZEND_FILE_LINE_DC);\n               ^\nIn file included from /root/cphalcon/ext/phalcon.c:25:0:\n/root/cphalcon/ext/kernel/fcall.h:594:4: warning: implicit declaration of function 'ALLOC_INIT_ZVAL' [-Wimplicit-function-declaration]\n    ALLOC_INIT_ZVAL(_return_value_ptr);\n    ^\n/root/cphalcon/ext/kernel/fcall.h:601:3: warning: implicit declaration of function 'COPY_PZVAL_TO_ZVAL' [-Wimplicit-function-declaration]\n   COPY_PZVAL_TO_ZVAL(_return_value, rv);\n   ^\n/root/cphalcon/ext/kernel/fcall.h: In function 'zephir_return_call_zval_function':\n/root/cphalcon/ext/kernel/fcall.h:623:3: warning: passing argument 1 of '_zval_ptr_dtor' from incompatible pointer type [enabled by default]\n   zval_ptr_dtor(return_value_ptr);\n   ^\nIn file included from /usr/include/php/Zend/zend.h:39:0,\n                 from /usr/include/php/main/php.h:35,\n                 from /root/cphalcon/ext/phalcon.c:8:\n/usr/include/php/Zend/zend_variables.h:112:15: note: expected 'struct zval ' but argument is of type 'struct zval '\n ZEND_API void zval_ptr_dtor(zval _zval_ptr ZEND_FILE_LINE_DC);\n               ^\nIn file included from /root/cphalcon/ext/phalcon.c:25:0:\n/root/cphalcon/ext/kernel/fcall.h: In function 'zephir_return_call_class_method':\n/root/cphalcon/ext/kernel/fcall.h:664:3: warning: passing argument 1 of '_zval_ptr_dtor' from incompatible pointer type [enabled by default]\n   zval_ptr_dtor(return_value_ptr);\n   ^\nIn file included from /usr/include/php/Zend/zend.h:39:0,\n                 from /usr/include/php/main/php.h:35,\n                 from /root/cphalcon/ext/phalcon.c:8:\n/usr/include/php/Zend/zend_variables.h:112:15: note: expected 'struct zval ' but argument is of type 'struct zval '\n ZEND_API void zval_ptr_dtor(zval _zval_ptr ZEND_FILE_LINE_DC);\n               ^\nIn file included from /root/cphalcon/ext/phalcon.h:15:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon.c: At top level:\n/root/cphalcon/ext/phalcon/mvc/model/validator.zep.h:12:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:125:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/assets/collection.zep.h:41:26: warning: 'zephir_init_properties_Phalcon_Assets_Collection' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Assets_Collection(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:223:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/http/response/headers.zep.h:14:26: warning: 'zephir_init_properties_Phalcon_Http_Response_Headers' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Http_Response_Headers(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:288:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/email.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Email' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Email(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:289:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/exclusionin.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Exclusionin' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Exclusionin(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:290:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/inclusionin.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Inclusionin' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Inclusionin(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:291:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/ip.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Ip' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Ip(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:292:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/numericality.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Numericality' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Numericality(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:293:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/presenceof.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_PresenceOf' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_PresenceOf(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:294:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/regex.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Regex' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Regex(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:295:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/stringlength.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_StringLength' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_StringLength(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:296:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/uniqueness.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Uniqueness' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Uniqueness(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:297:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/mvc/model/validator/url.zep.h:7:26: warning: 'zephir_init_properties_Phalcon_Mvc_Model_Validator_Url' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Mvc_Model_Validator_Url(zend_class_entry class_type TSRMLS_DC);\n                          ^\nIn file included from /root/cphalcon/ext/phalcon.h:336:0,\n                 from /root/cphalcon/ext/phalcon.c:15:\n/root/cphalcon/ext/phalcon/translate/adapter/csv.zep.h:10:26: warning: 'zephir_init_properties_Phalcon_Translate_Adapter_Csv' declared 'static' but never defined [-Wunused-function]\n static zend_object_value zephir_init_properties_Phalcon_Translate_Adapter_Csv(zend_class_entry class_type TSRMLS_DC);\n                          ^\nmake: ** [phalcon.lo] Error 1\n. hahaha.. i just curious with php7 performance combine with phalcon..\n. ",
    "dkraczkowski": "Thanks:)\n. ",
    "buildsufai": "@steffengy \nok,thankyou ,seem like only the way....\n. ",
    "BonnieDoug": "All I've done is follow the steps as described here https://github.com/phalcon/zephir/blob/master/WINDOWS.md except for the setx commands were failing with a \"WARNING: The data being saved is truncated to 1024 characters.\" error, so I set them manually in System/Advanced System Settings/Environmental Variables/Path\nBefore you look any further I've just noticed \"Thread Saftey: Enabled\" in my info.php ... Balls, and now I've checked Xampp don't appear to acxtually make NTS version. I'll remove Xampp and install php the old fashioned way see if it fixes stuff before I waste any more of your time. \n. I've not modified the code in anyway yet, all I've done is clone the current repo from github. I'm only trying to test phalcon 2 at the moment.\n. Have removed the thread safe xampp 5.5 PHP in favour of 5.6 nts updated PHP dev tools for 5.6 but still have the same error regarding incorrect syntax on line 7 \n. Is there anything I can do to get around this (without installing Linux) ?\n. Think I'll try the last option :-) will forking your repo and trying to build it succeed do you think.\nOn a side note, is there a reason why 2.0 dlls aren't simply downloadable like the 1.3.* are? Is it an effort to push all phalcon devs to dabble in zephir?\n. +1 will give it a go tonight :-)\nRegarding the build process outlined in the Windows.md , should we not be building the parser before trying to build Zephir?\n. Ah, I get it. Still learning the ropes here, think I've been a bit spoilt in the past with symfony holding your hand every step of the way (at the expense of speed). Just bought \"head first : C\" so hopefully I'll get a bit more adept and actually contribute rather than leeching :-) \n. ",
    "rdjpg": "$ valgrind php index.php\n==8217== Memcheck, a memory error detector\n==8217== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.\n==8217== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info\n==8217== Command: php index.php\n==8217== \nPHP Warning:  Invalid arguments supplied for strpos() in /home/rdjpg/public_html/roda/index.php on line 30\nPHP Warning:  Invalid arguments supplied for strpos() in /home/rdjpg/public_html/roda/index.php on line 30\nTEST PAGE==8217== \n==8217== HEAP SUMMARY:\n==8217==     in use at exit: 74,650 bytes in 215 blocks\n==8217==   total heap usage: 32,877 allocs, 32,662 frees, 5,697,739 bytes allocated\n==8217== \n==8217== LEAK SUMMARY:\n==8217==    definitely lost: 6,906 bytes in 9 blocks\n==8217==    indirectly lost: 8,610 bytes in 12 blocks\n==8217==      possibly lost: 0 bytes in 0 blocks\n==8217==    still reachable: 59,134 bytes in 194 blocks\n==8217==         suppressed: 0 bytes in 0 blocks\n==8217== Rerun with --leak-check=full to see details of leaked memory\n==8217== \n==8217== For counts of detected and suppressed errors, rerun with: -v\n==8217== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n\nbtw, \"zend_mm_heap corrupted\" not always show in every request. but sometimes,,,\n. php 5.3 :'(\n\nBtw, what last zephir version still compatible with php 5.3 ?\n. Well, I just try php 5.5. And generate my zephir code with version 0.8.0a.\nBut, my code can't compile for php 7.0.1. \nZephir still not ready for php 7?\n. ",
    "Niko9911": "@ovr Is this implemented yet?. ",
    "tmihalik": "Undefined variables:\n$completeName:\nhttps://github.com/phalcon/zephir/blob/master/Library/FunctionDefinition.php#L1689\n$compilationContext:\nhttps://github.com/phalcon/zephir/blob/master/Library/Compiler.php#L1786\n. really, sorry\n. ",
    "hdl-helsinki": "ping @ovr. ",
    "KonstantinKuklin": "@Green-Cat Do you plan to support generators and coroutines?\n. ",
    "kristoftorfs": "Is there any news on this issue yet? I'm currently doing a rather large project in Phalcon, but would like to use Zephir instead of PHP for development. However, this is kind of a major issue (for me personally).\n. ",
    "dkeepersun": "yeah ,its really useful  .  so many closure i use in my project.  its will be very important feature!\n. ",
    "kran": "use bindTo to solve this: \n```\nvar dummy;\nlet dummy = new \\stdClass();\nlet dummy->foo = \"some variable\";\n(function(){\n    var dummy = <\\stdClass> this;\n    echo dummy->foo;\n})->bindTo(dummy);\n```. ",
    "KorsaR-ZN": "Thanks!\n. @akaNightmare You can emulate this with help of is_callable()\n. :+1: \n. @andresgutierrez \nOnly such a solution?\nif isset definition[\"limit\"] && !empty definition[\"limit\"] {\n.... expr if the key exists and is not empty ....\n}\nP.S\nI think all the same empty should not throw \"Notice: undefined index...\"\n. @nkt Your example gives a warning and in the case Zephir is fatal error\nI think that if Zephir is a meta-language, it is possible to solve syntax and optimization at compile time, example:\nCase 1\nBefore optimization before compiling\n```\n....\npublic function some(string! a, string! b, int c, ...)\n....\n```\nAfter optimization\n```\n....\npublic function some()\n{\n   var a, b, c;\nlet a = func_get_arg(0),\n       b = func_get_arg(1),\n       c = (int) func_get_arg(2); // transparently convert\n if (!is_string(b)) {\n     // error\n }\n\n if (!is_string(a)) {\n     // error\n }\n\n....\n}\n....\n```\nCase 2\nBefore optimization before compiling\n```\n....\npublic function some(string! a, string! b, int c, ...args)\n....\n```\nAfter optimization\n```\n....\npublic function some()\n{\n   var a, b, c, args;\nlet a    = func_get_arg(0),\n       b    = func_get_arg(1),\n       c    = (int) func_get_arg(2); // transparently convert\n       args = array_slice(func_get_args(), 3);\n if (!is_string(b)) {\n     // error\n }\n\n if (!is_string(a)) {\n     // error\n }\n\n....\n}\n....\n```\n@andresgutierrez What do you think about this?\n. @andresgutierrez Thanks!\nI did so when transfer class from the incubator to core, see https://github.com/phalcon/cphalcon/pull/10572\n. @ovr, Yes, one minute\n. @ovr maybe need rebase?\n. @sergeyklay fixed. Please close)\n. @sergeyklay oh... sorry. it has not been fixed\n. @steffengy added tests\n. :+1: \n. ref #1100\n. ",
    "akaNightmare": "@KorsaR-ZN, I know i can, but closure it's PHP type too, and would be better implement it to zephir\n. my fail)\n. ",
    "kjdev": "If you specify a disable orno the --prototypes in zephir options, ZEPHIRPATH  . 'protetypes have to avoid loading.\n. Don't want to load the Class that are defined in the protetypes. (Library/Compiler.php:L.780)\nIt's an error if you attempt to use other than those defined here.\n771: if (is_dir(ZEPHIRPATH . 'prototypes') && is_readable(ZEPHIRPATH . 'prototypes')) {\n772:     /**\n773:      * Load additional extension prototypes\n774:      * @var $file \\DirectoryIterator\n775:      */\n776:     foreach (new \\DirectoryIterator(ZEPHIRPATH . 'prototypes') as $file) {\n777:         if (!$file->isDir()) {\n778:             $extension = str_replace('.php', '', $file);\n779:             if (!extension_loaded($extension)) {\n780:                 require $file->getRealPath();\n781:             }\n782:         }\n783:     }\n784: }\n. - prototypes implementation of incomplete (not exhaustive)\n- to match the expansion of the update must be maintained\nWe can not build in the incomplete implementation when the zephir you tried to use other than phalcon is troubled.\n. @andresgutierrez It has confirmed that to ignore the prototype if the extension is loaded.\nBuild in some way at this time is we would like to avoid to stop even if in the build environment is not installed the extension.\n. It will cancel because the implementation was wrong.\n. ",
    "wartodolin": "no answer till now ?\n. ",
    "AKermodeBear": "Howdy,\nThe compiler will produce an error like this:\n```\nZephir\\CompilerException: Class name: MyClass does not exist in /home/bear/repos/zephir-sandbox/test/test/Test.zep on line 6\n      return \\MyClass::method();\n    ---------------------------^\n\n```\n. ",
    "SidRoberts": "Hopefully #899 should have fixed this. Can you try again with the latest commit on master?\n. Phalcon no longer passes in Travis due to json-c not being installed properly and the only thing I can think of is that Travis blocks sudo commands under the new infrastructure - meaning sudo make install won't run.\nShould we force people to run sudo ./install-json or create ./install-json-nosudo?\n. It is the problem, see https://github.com/phalcon/cphalcon/pull/10667.\n. Fair enough. :smile: \n. \"delimeter\" should be \"delimiter\".\n. ",
    "maxgalbu": "Works for me, what is the output for php -i | grep dom?\nLinux developer3 3.13.0-37-generic #64-Ubuntu SMP Mon Sep 22 21:28:38 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\ngcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1)\n. ",
    "finchcn": "I used zephir to build phalcon with php7, zend_uint and zval_object_value are not supported now, please change they to zend_ulong and zval_object.\n. @steffengy \nzen_uint is used in zephir/kernels/ZendEngine3/globals.h line 61.\nzend_object_value is used in zephir/Library/ClassDefinition.php\n. ",
    "GreenRover": "Hello, is there any progress for PHP7 support in zephir?\nAny beta or stuff that can be tested?\n. ",
    "ifehrim": "./kernel/main.h:117:3: note: in expansion of macro \u2018INIT_PZVAL_COPY\u2019\n   INIT_PZVAL_COPY(new_zv, *z);\n   ^\nInstalling...\nInternal extension compilation failed. Check compile-errors.log for more information\ni try php5.6 version of zephir build  but sitil problem. i try php7.0 version of zephir build is success. ",
    "pasmanp": "this only apply to php 5.6.x ?\n. ",
    "dewid1985": "Install Zephir OpenSuse 13.2\n```bash\nzypper install gcc make re2c php5 php5-json php5-devel\ncd /opt\ngit clone https://github.com/phalcon/zephir\ncd zephir\n./install-json\n./install -c\ncd ..\nmkdir newproject\ncd newproject\nzephir init utils\ncreate files .zep in the directory utils\n..\n..\nzephir build\necho extension=utils.so >> /etc/php5/conf.d/utils.so\nsystemctl restart apache2.service\n```. ",
    "shanghaiyangming": "no person to answer this question......\n. yes~ mongo extension is 1.6.8\n. Thank you so much~ it\u2019s work fine~\n. i do this things, but it not work\nlet this->_expire = ini_get(\"max_execution_time\"); // it's ok\nlet config = ini_get(\"my.utils.lock.memcached\");// it's bad\n. ",
    "AlloVince": "Thank you.  it will be better if the compiler could tell which line has problem :)\n. ",
    "anhchienhoang": "As checked the Zephir code:\n```\n        public function appendMessage( message) -> \n        {\n                var messages;\n            let messages = this->_messages;\n            if typeof messages != \"object\" {\n                    let this->_messages = new Group();\n            }\n            messages->appendMessage(message);\n            return this;\n    }\n\n```\nIn case of messages is not an object it will initialize a new group object but doesn't set to messages but this->_messages\n. Actually, we (the community) are using this function very commonly. It should be fixed asap.\nThanks.\n. ",
    "leo108": "Is it possible to support string value?\n. ",
    "ivyhjk": "Hi, Zephir version 0.6.3a\n. ",
    "mattvb91": "wow! So for example if you are trying to trace certain values getting passed around the code what is your method of doing that?\n. Thanks for the input guys. Will take a bit of getting used to compile/run/see exception but I think ill manage.\n. ",
    "kinosang": "@dreamsxin  got it. thx.\n. ",
    "munggruel": "The reason\uff1a\n1.the default namespace \u2018\u2019 has better performance\n2.Reduce the complexity of use \nYou must be declared in each file : use  XXXX\\XXXX\\Class;\nUtil(keep it simple and stupid)  versus XXXX\\XXX\\XXX\\Util (Too complicated)\n. ``` php\nnamespace ns{\n    function aa()\n    {\n    }\n}\nnamespace{\n    function getMsecTime()\n    {\n        $arr = explode( ' ', microtime() );\n        return $arr[0] + $arr[1];\n    }\n    function aa()\n    {\n    }\n    $start = getMsecTime();\n    for ($i = 0; $i < 100000; $i++) {\n       aa();\n    }\n    echo \"Running Time:\", getMsecTime() - $start, \"\\n\";\n    //Running Time:0.28701591491699\n$start = getMsecTime();\nfor ($i = 0; $i < 100000; $i++) {\n    ns\\aa();\n}\necho \"Running Time:\", getMsecTime() - $start, \"\\n\";\n//Running Time:0.3240180015564\n\n}\n```\n. Now I write my php framework, I use AOP implement plugin \nplugin use  XXXX\\XXXX\\Util  too complicated\nso I have to use :\nclass Util extends XXXX\\XXXX\\Util {}\n. Yes\uff0cZend Optimizer enable \nBut how can I \nuse XXX\\XXX\\Util; as Global\n. for example, I have a file \n_part_footer.tpl\n\n{hook friendly_link/friendly_link.tpl}\n\nhook fille friendly_link.tpl:\n{{if isset($LinksList) && XXXX\\XXXX\\Utils::getClient() == ''}}\n    \n....\n{{/if}}\nXXXX\\XXXX\\Utils::getClient() too long to  remember for someone who want to develop a plugin\n. ",
    "guweigang": "@hylent that works,,,  but what is the problem with let {\"foo\"}=\"foo\"  ?\n. @andresgutierrez You mean let {\"foo\"}=\"foo\"; create variable in the top scope ?\n. ",
    "michealzh": "That is to say unless the C code I can't validate it in zephir code by PHP style?\n. Thanks a lot,I will try your solution.\n. Maybe there is no solution for this.\n. ",
    "lolo32": "I post a merge request #1059 to solve this problem.\n. ",
    "lajosbencz": "I've just stumbled upon the same issue today, updated to the development branch and now compilation succeeds!\n. ",
    "Xon": "@steffengy cheers, that fixed it.\n. ",
    "Andrew-Shook": "I don't think this should be marked as a bug. If you tried to compare a string using that syntax in C or C++ you would receive an compiler error as well. While Zephir looks like PHP, I've alway thought of it as C in a nice PHPish wrapper. I could be wrong it that assumption.\n. ",
    "mateusdemboski": "Work now, tks! =D\n. ok, tnks!\nExists a list of reserved variables in zephir? I didn't find on documentation... =/\n. ",
    "nekulin": "I don't want to use the links and I don't want array! changed params\n. I shouldn't get NULL I had to get array(1) { [\"test\"]=> int(123) }\n. I use the stable version Powered by Zephir  Version 0.7.1b \n. You have not managed to reproduce the bug ? Or is it fixed in the development branch ?\n. I compiled a version with development, the problem remained and the version has not changed, also 0.7.1 b\n. PHP 5.5.28\n. string filtered;\narray sanitize;\n. zephir version - Sie welche Version ?\n. ",
    "GavinMcL": "Hi looks good I'm seeing correct camel case in the getters/setters now for camel case table field names.\nI've just noticed the classname (and therefore php file name), is also being created in title case when the table name is camel case - e.g for a table profileAddress, I get Profileaddress.php with a class Profileaddress - can this be fixed in the same issue as I guess it must use similar camelize function?\n. ok thanks\n. ",
    "skmail": "syntax error .. , it's just  a sample !\n. The following example from Phalcon docs to activate Volt template engine , written in PHP \n```\nuse Phalcon\\Mvc\\View;\n// Register Volt as template engine with an anonymous function\n$di->set('view', function () {\n$view = new View();\n\n$view->setViewsDir('../app/views/');\n\n$view->registerEngines(array(\n    \".volt\" => function ($view, $di) {\n        $volt = new Volt($view, $di);\n\n        // Set some options here\n\n        return $volt;\n    }\n));\n\nreturn $view;\n\n});\n```\nI'm trying to do something similar  in Zephir  instead of PHP. Can I?\nI know that i can  register another service  for Volt engine and then assign the service as string, but what about the nested closures? i think it's a basics.\nRegards\n. ",
    "Ultimater": "In my opinion, the only concern here is the PHP Notices. In production you'd simply disable them anyways. But nobody wants a PHP extension throwing notices. Honestly, let people write better zephir code so no notices are generated in the first place. Alternatively, it wouldn't be a breaking change if we simply revised the way zephir handles elseif to do such in a safer fashion so it doesn't throw notices in the first place. In PHP there exists a @ for silencing such things. Perhaps there's a way we could use it from elseif?. ",
    "Yahasana": "Hello reviewers, where r u. ",
    "sandrokeil": "Are there any news for this?. ping @sergeyklay ;-). I see, it's not trivial. I'm only asking because I write a PHP to Zephir converter. I will solve it with the curent syntax. So no hurry.. You have to use a for statement.. ",
    "hellobbq": "no error reported when build\n. @phalcon  have you tried Test::damnit()?\neven other string indexs to this problem.\nexample:\n``` zephir\nstatic public function damnit() {\n    array arr = [];\n    let arr[0] = [];\n    let arr[0][\"i\"] = 0;\n    let arr[0][\"missing\"] = 0;\n    let arr[0][\"you\"] = 0;\n    let arr[0][\"so\"] = 0;\n    let arr[0][\"much\"] = 0;\n    var ch,k;\n    int i = 10;\nfor k,ch in arr[0] {\n    if ch > 0 {\n        continue;\n    }\n\n    let arr[0][k] = i;\n    let i += 10;\n}\n\nreturn arr;\n\n}\n```\nthe return is\ni => 10\nmissing => 20\nyou -> 0\nso -> 0\nmuch ->30\n. @phalcon \nalso i tried lastest master version, 0.9a-dev\ncode bellow runs ok:\nzephir\nlet _arr = [ array_fill_keys(arr[\"\"],0) ];\nlet fp = fopen(file, \"w\");\nbut:\n``` zephir\n    static public function whatHappend(file) {\n        array arr = [];\n        var data,fp;\n        let arr[\"\"] = [];\n        let arr[\"\"][\"next\"] = [\"i\",\"miss\",\"you\",\"so\",\"much\"];\n    let data = array_fill_keys(arr[\"\"][\"next\"], 0);\n    var_dump(data);\n    let fp = fopen(file, \"w\");\n    var_dump(data);\n    return data;\n}\n\n```\nphp\nvar_dump(Test::whatHappend(__DIR__ . '/file.txt'));\nruns:\narray (5) (\n    [i] => 0\n    [miss] => 0\n    [you] => 0\n    [so] => 0\n    [much] => 0\n)\narray (5) (\n    [i] => \"w\"\n    [miss] => \"w\"\n    [you] => \"w\"\n    [so] => \"w\"\n    [much] => \"w\"\n)\nand the return is:\narray (5) (\n    [i] => null\n    [miss] => null\n    [you] => null\n    [so] => null\n    [much] => null\n)\n. @andresgutierrez  thanks,working ok\n. code example like:\n``` zephir\nclass Test\n{\n    static protected function _myMap(array matches){\n        return matches[0];\n    }\nstatic public function  run(string str){\n    string regex;\n    let regex = \"/[a-z0-9]/\";\n    return preg_replace_callback(regex, \"self::_myMap\", str);\n}\n\n}\n```\n. @fezfez change \"string\" to \"var\",the problem still running php scripts\n. @steffengy \nmy case needs:\nreturn preg_replace_callback(regex, function (array matches) use (something) {\n            return sprintf(something,matches[0]);\n        }, str);\nbut not support the \"use\".\nso, i do as your said, changing \"static::...\" and set \"public\",working well.\nthank you very much\n. @steffengy sorry, @ wrong name,thanks a lot\n. @danhunsaker i found this issues: https://github.com/phalcon/zephir/issues/457\nany solution?. ",
    "lperpeng": "I have solved it. thank u.\n. ",
    "WalterShe": "I must praise you in Chinese. \n\u5e05\u5446\u4e86\uff0c\u9177\u6bd9\u4e86!\u679c\u7136\u5f88\u5c4c\uff01\nIt mean that \"Awesome, really good Kubi!\"\n. ",
    "chet0xhenry": "So I don't think the exit code can be relied on the way it was.  This commit uses the output from the version, which should be more reliable.  The old version breaks on centos7.\n. ",
    "fanybook": "use your code (php7)\nwhen is start apache, has a PHP Warning\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/php/lib/php/extensions/no-debug-non-zts-20151012/ice.so' - /usr/local/php/lib/php/extensions/no-debug-non-zts-20151012/ice.so: undefined symbol: zend_std_call_user_call in Unknown on line 0\n. my php's version is 7.0\nwhen build\nCompiling the parser...\n/zephir/parser/parser/parser.c: In function 'yy_reduce':\n/zephir/parser/parser/parser.c:8763:2: warning: passing argument 2 of 'xx_ret_scall' from incompatible pointer type [enabled by default]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-6].minor.yy0, 1, yymsp[-3].minor.yy0, NULL, status->scanner_state);\n  ^\n/zephir/parser/parser/parser.c:1189:14: note: expected 'char *' but argument is of type 'struct xx_parser_token *'\n static zval *xx_ret_scall(int dynamic_class, char *class_name, int dynamic_method, xx_parser_token *M, zval *parameters, xx_scanner_state *state)\n              ^\n/zephir/parser/parser/parser.c:8775:2: warning: passing argument 2 of 'xx_ret_scall' from incompatible pointer type [enabled by default]\n  yygotominor.yy132 = xx_ret_scall(0, yymsp[-7].minor.yy0, 1, yymsp[-4].minor.yy0, yymsp[-1].minor.yy132, status->scanner_state);\n  ^\n/zephir/parser/parser/parser.c:1189:14: note: expected 'char *' but argument is of type 'struct xx_parser_token *'\n static zval *xx_ret_scall(int dynamic_class, char *class_name, int dynamic_method, xx_parser_token *M, zval *parameters, xx_scanner_state *state)\n              ^\n/zephir/parser/parser/parser.c: In function 'xx_parse_program':\n/zephir/parser/parser/parser.c:9352:3: warning: return makes pointer from integer without a cast [enabled by default]\n   return SUCCESS;\n   ^\n/zephir/parser/parser/scanner.c: In function 'xx_get_token':\n/zephir/parser/parser/scanner.c:1274:4: warning: incompatible implicit declaration of built-in function 'free' [enabled by default]\n    free(token->value);\n    ^\n. https://github.com/phalcon/zephir/issues/1140\ni build #1140 's code, has a same PHP Warning\nPHP Warning: PHP Startup: Unable to load dynamic library '/usr/local/php/lib/php/extensions/no-debug-non-zts-20151012/ice.so' - /usr/local/php/lib/php/extensions/no-debug-non-zts-20151012/ice.so: undefined symbol: zend_std_call_user_call in Unknown on line 0\n. ",
    "kylekatarnls": "Hi, Do the doc shouldn't be updated: http://docs.zephir-lang.com/en/latest/install.html\n. It seems not on Travis, this is a PHP 5.4 test:\nhttps://travis-ci.org/kylekatarnls/csrfprotect/jobs/113890846\n. Oh thanks, I tried many things and forget to remove that. I try to cleanup a bit the travis script.\n. ",
    "mahmoud-eskandari": "GLIBC_2.14 not published for CentOs 6.6!!!\nAnd Exported zephir extension required it!\nzephir not have active Forum , I have many Problems by it.\n. OK!\nSo I compile zephir extension in Older Linux distribution, glibc<2.14 for older  Linux distribution,And compile it in new  Linux distribution For new machines!\nI am able to install re2c but zephir Show many Errors:\ninstall zephir. Install? And When i Send Y or y\n...\n**parser.c:8462: error: YYMINORTYPE has no member named yy383 parser.c:8462: error: YYMINORTYPE has no member named yy383 parser.c:8679: error: xxparserstatus has no member named scanner_state parser.c:8870: error: YYMINORTYPE has no member named yy383 parser.c:8870: error: YYMINORTYPE has no member named yy383 parser.c:8870: error: xx_parser_status has no \n...\n. Can i compile Code in php 7?\nIs this Possible Now?\n. I installed all dependencies attention to \nhttps://github.com/phalcon/zephir/blob/master/WINDOWS.md\nF:\\mnbox>zephir build\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstallation is not implemented for windows yet! Aborting!\nWhen i try to zephir build\nthe ext/configure.js\nopening in visual studio...\nis a video for Zephir Windows Installing and Building ?. ",
    "zinovyev": "Thanks!\n. ",
    "rkyoku": "I installed Bison (because of the line \"ERROR: bison is required\"), added it to the path, and launched the build again (which I knew would fail because of other errors, but anyway), and I got this:\n\nD:\\wamp\\www\\zephir\\parser\\parser>type base.c  1>>parser.c\nPreparing for parser compilation...\nCompiling the parser...\nMicrosoft (R) Program Maintenance Utility Version 14.00.23506.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe\"' : return code '0x2'\nStop.\n\"cl.exe\" /D COMPILE_DL_ZEPHIR_PARSER /D ZEPHIR_PARSER_EXPORTS=1 -ID:\\wamp\\www\\zephir\\parser /nologo /I D:\\wamp\\bin\\php\\php7_nts\\devpack/include /I D:\\wamp\\bin\\php\\php7_nts\\devpack/include/main /I D:\\wamp\\bin\\php\\php7_nts\\devpack/include/Zend /I D:\\wamp\\bin\\php\\php7_nts\\devpack/include/TSRM /I D:\\wamp\\bin\\php\\php7_nts\\devpack/include/ext /D _WINDOWS /D ZEND_WIN32=1 /D PHP_WIN32=1 /D WIN32 /D _MBCS /W3 /FD /wd4996 /D_USE_32BIT_TIME_T=1 /guard:cf /MP /LD /MD /W3 /Ox /D NDebug /D NDEBUG /D ZEND_WIN32_FORCE_INLINE /GF /D ZEND_DEBUG=0 /D ZTS=1 /I \"D:\\wamp\\www\\zephir\\parser\\no\\include\" /FoD:\\wamp\\www\\zephir\\parser\\Release_TS\\wamp\\www\\zephir\\parser\\ /FpD:\\wamp\\www\\zephir\\parser\\Release_TS\\wamp\\www\\zephir\\parser\\ /FRD:\\wamp\\www\\zephir\\parser\\Release_TS\\wamp\\www\\zephir\\parser\\ /FdD:\\wamp\\www\\zephir\\parser\\Release_TS\\wamp\\www\\zephir\\parser\\ /c D:\\wamp\\www\\zephir\\parser\\zephir_parser.c zephir_parser.c\nC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\vcruntime_new_debug.h(10): fatal error C1083: Cannot open include file: 'vcruntime_new.h': No such file or directory\nPHP Warning:  copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nWarning: copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n\nI don't know what more I could do right now...\n. No sorry, I did all this:\n\nD:\\dev\\PHP\\Ext\\test>echo %php_sdk%\nL:\\Software\\PHP_SDK_20110915\n\nAs it is explained in the docs:\n\nsetx php_sdk \"c:\\path-to-php-sdk\"\n\nAnd I also copied re2c in 2 directories just to be sure.\nBut maybe it should be \"path-to-sdk/bin\" instead, now that you point me in that direction?\nI'll try that\n. I confirm that I have the exact same errors when I set php_sdk to \"path-to-sdk/bin\" instead of just \"path-to-sdk\", or even when I leave this environment variable as it was (\"path-to-sdk\") and add to path the \"path-to-sdk/bin\" directory.\n. Yes, as I said that is exactly how it was when I posted my issue. I don't know why Zephir did not find Bison. And I indeed copied re2c.exe in parser/parser/ folder.\nAny other idea I should try? Like what is this \"c2\" that cannot be executed? What is this missing header file (vcruntime_new.h) that the compiler did not find? It tried to Google it but to no avail.\n. I had 3 or 4 versions of VS installed, but I uninstalled most of them and reinstalled completely VS 2015, and I even used the \"repair\" feature to make sure it was ok. I had a message about the redistributables being already installed blablabla but other than that it went smooth.\nI am also using the developer command line tool of VS 2015, as specified in the Zephir doc\n. You don't know what \"c2\" is? I will try to uninstall everything and reinstall again..\n. I uninstalled and reinstalled everything, and after multiple warnings, I got errors during link. It also complains (but it's only a warning) that library machine type x64 conflicts with target machine type x86:\n\nCreating library D:\\wamp\\www\\zephir\\parser\\Release_TS\\php_zephir_parser.lib and object D:\\wamp\\www\\zephir\\parser\\Rele\nase_TS\\php_zephir_parser.exp\nzephir_parser.obj : error LNK2019: unresolved external symbol __imp__efree@@4 referenced in function _zif_zephir_parse_file\nparser.obj : error LNK2001: unresolved external symbol __imp__efree@@4\nzephir_parser.obj : error LNK2019: unresolved external symbol __imp__zend_parse_parameters referenced in function _zif_zephir_parse_file\nzephir_parser.obj : error LNK2019: unresolved external symbol __imp__php_info_print_table_header referenced in function _zm_info_zephir_parser\nzephir_parser.obj : error LNK2019: unresolved external symbol __imp__php_info_print_table_start referenced in function _zm_info_zephir_parser\nzephir_parser.obj : error LNK2019: unresolved external symbol __imp__php_info_print_table_end referenced in function _zm_info_zephir_parser\nparser.obj : error LNK2019: unresolved external symbol __imp__emalloc@@4 referenced in function _zend_string_alloc\nparser.obj : error LNK2019: unresolved external symbol __imp_zendmalloc referenced in function _zend_string_alloc\nparser.obj : error LNK2019: unresolved external symbol imp__zend_hash_str_add@@16 referenced in function _parser_add_str\nparser.obj : error LNK2019: unresolved external symbol __impzvalptr_dtor referenced in function _yy_destructor\nparser.obj : error LNK2019: unresolved external symbol imparrayinit referenced in function _parser_array_init\nparser.obj : error LNK2019: unresolved external symbol imp__add_next_index_zval referenced in function _parser_array_append\nparser.obj : error LNK2019: unresolved external symbol __imp__php_sprintf referenced in function _xx_parse_program\nD:\\wamp\\bin\\php\\php7_nts\\devpack\\lib\\php7ts.lib : warning LNK4272: library machine type 'x64' conflicts with target machine type 'X86'\nD:\\wamp\\www\\zephir\\parser\\Release_TS\\php_zephir_parser.dll : fatal error LNK1120: 12 unresolved externals\nPHP Warning:  copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nWarning: copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n\nDo you have any idea what these linker errors are caused by?\n. So if I use PHP 5.6 it should work? And then I should wait just a bit for PHP 7 (which is very new, I admit) to be supported?\nOr should I forget about building my lib on Windows, and focus on Ubuntu only? (even with PHP 7)\nAs I develop on Windows, I would really like being able to compile on Windows, I won't hide it :)\n. Mmmmh I don't think I have that CMD you are talking about. I only have the x86 one (\"VS2015 x86 Native Tools Command Prompt\"). I tried to duplicate it and change the command arguments to make it use x64, but it failed badly :)\nI then tried the \"VS2015 x86 x64 Cross Tools Command Prompt\", and I got \"zephir_parser build complete\" and I thought that was good, but just below it complained it could not find \"php_zephir_parser.dll\" (but wait to see below!)\n\nCreating library D:\\wamp\\www\\zephir\\parser\\x64\\Release_TS\\php_zephir_parser.lib and object D:\\wamp\\www\\zephir\\parser\\x64\\Release_TS\\php_zephir_parser.exp\nEXT zephir_parser build complete\nPHP Warning:  copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nWarning: copy(Release_TS/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\wamp\\www\\zephir\\Library\\Compiler.php on line 233\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n\nBut then I found out that in the zephir/parser dir, I have two directories: Release_TS, and x64. And the x64 folder contains another Release_TS folder, with the php_zephir_parser.dll inside!! :) :) :)\nI don't understand why it did not find it. I will try to manually put in inside my php ext directory, and check if it works, and keep you posted.\n. Okay yes, it ran this command:\n\nD:\\wamp\\bin\\php\\php7_nts\\php.exe -dextension=\"D:\\wamp\\www\\zephir\\Library..\\parser\\php_zephir_parser.dll\" D:\\wamp\\www\\zephir\\bin..\\compiler.php build --parser-compiled\n\nBut I got:\n\nPHP Warning:  PHP Startup: Unable to load dynamic library 'D:\\wamp\\www\\zephir\\Library..\\parser\\php_zephir_parser.dll' - Le module sp\u00dacifi\u00da est introuvable.\n in Unknown on line 0\n\nProblem is PHP complained it could not find php7ts.dll (inside a Windows alert), which makes no sense actually because as you can see it really is PHP NTS that I configured, as stated in the docs.\nHere is the php -v output (which also complained from php7ts.dll being missing):\n\nPHP 7.0.1 (cli) (built: Dec 16 2015 13:32:58) ( NTS )\n\nThen I tried to copy php7ts.dll from another directory when I have extracted PHP 7 TS files, and tried another php -v (this time it did not complain about missing dll):\n\nPHP Warning:  PHP Startup: zephir_parser: Unable to initialize module\nModule compiled with build ID=API20151012,TS,VC14\nPHP    compiled with build ID=API20151012,NTS,VC14\nThese options need to match\nin Unknown on line 0\n\nThis is weird, right? Should I try with TS version only?\n. I succeeded building the parser using the x86 version of PHP 7, and only when using the console named \"VS2015 x86 Native Tools\".\nIt did not copy properly the generated dll to the PHP \"ext\" folder, but doing so manually worked fine, and now I just have to grasp some notions of Zephir while waiting for the x64 version to build ;)\nLet me know if I can help!\n. ",
    "Dev2-PracticeProvider": "Hi @steffengy \nI am trying to build ext on windows 8 x64 PHP 5.6.19 but no luck\nI followed all these steps https://github.com/phalcon/zephir/blob/master/WINDOWS.md\nI have used all three command line tools\n- VC2012 x86 Native Tools\n- VC2012 x64 Cross Tools\n- Developer command prompt\nGetting following error\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\n\\VC\\BIN\\cl.exe\"' : return code '0x2'\nPlease guide me what I am doing wrong\nThanks\n. OK I will try with PHP7 \nThanks\n. Hi @steffengy \nI tried on Windows 8 64 bit with both php7 x86 and x64\nI was not able to compile parser using php7 x64\nI was able to compile parser using php7 x84 also extension was translated to c as well\nThe error I got \"Installation is not implemented for windows yet! Aborting!\" and no dll file for that extension\ndo we have to compile extension manually on windows?\n. @steffengy there is only one directory \"Release\" inside ext directory\nPlease see attached compile logs\ncompile-error.log.txt\ncompile.log.txt\n. @steffengy no luck yet\nIf I use PHP7 x64 I am not able to compile parser but with PHP7 x86\nI am using VS 2015 community edition\nPHP7 x86 and devpack for x86\nRegarding dependencies I am little confuse I downloaded deps for php7 x86 and placed according to directory structure mentioned in https://wiki.php.net/internals/windows/stepbystepbuild\nThen ran form ext directory \"zephir build\" no luck :( what I am doing wrong?\n. @steffengy compiler-error.log has following error\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\link.exe\"' : return code '0x460'\n. compile.log\nC:\\Users\\jwc\\Projects\\hello\\ext\\Release\\\\array.obj : warning LNK4042: object specified more than once; extras ignored\nC:\\Users\\jwc\\Projects\\hello\\ext\\Release\\\\fcall.obj : warning LNK4042: object specified more than once; extras ignored\n   Creating library C:\\Users\\jwc\\Projects\\hello\\ext\\Release\\php_hello.lib and object C:\\Users\\jwc\\Projects\\hello\\ext\\Release\\php_hello.exp\nfcall.obj : error LNK2019: unresolved external symbol _zephir_call_function_opt referenced in function _zephir_call_user_function\nC:\\Users\\jwc\\Projects\\hello\\ext\\Release\\php_hello.dll : fatal error LNK1120: 1 unresolved externals\n. @steffengy as mentioned in other thread\nIf I comment line 453 and remove EXPECTED(status != FAILURE) && on line 458 from ext\\kernel\\fcall.c then it generates dll\nAny idea?\n. @steffengy if I follow instructions here https://github.com/phalcon/zephir/issues/1202#issuecomment-204900149 then also dll builds\nIf I can do any thing to make this work in windows I will be happy to contribute please let me know if I can do any thing\nThanks\n. @steffengy with latest update I confirm now dll is generated but inside ext/Release \"User\" directory created with complete path to 'ext' directory C:\\Users\\jwc\\Projects\\app\\ext\\Release\\Users\\jwc\\Projects\\app\\ext is it normal?\n. ",
    "umermalik129": "@steffengy I was able to fix this please review the fix https://github.com/practiceprovider/zephir/commit/7267a1d7a47a0dfae2cf2d7a009acb0b71a9f5e0 \nI tested after this fix works fine \n. @steffengy I am able to fix path issue without modifying the PHPIZE code please see here https://github.com/practiceprovider/zephir/commit/6b26d1652440a6c7a51d4563e93b064dd90d0341\nwe only need to change paths inside config.w32 file and configure.js related changes inside Library/Compiler.php commented out for now\nI have tested it and working, please let me know if it make sense for both PHPIZE mode and compiling statically\n. Oh I replaced \"%PROJECT_LOWER%\" unintentionally as I was testing in configure.js and copied sources lines without changing app to %PROJECT_LOWER% now I change it back to %PROJECT_LOWER%  \nI am looking at \"EXTRA_FILES/COMPILED_FILES\" now\n. @steffengy have a look now I also cleaned up PHPIZE related code inside Compiler https://github.com/practiceprovider/zephir/commit/776c537f1e1ad15f5d697c405dd67ce30c1d22d3\n. @steffengy I have tested it with PHPIZE I will let you know after testing static builds\nFor static builds I have to copy app/ext directory to php_src/ext without Release directory inside ext?\n. @steffengy I was able to compile ext/app with php src code successfully here is pull request\nhttps://github.com/phalcon/zephir/pull/1234\n. @steffengy where code is breaking? I will try to fix it\n. @steffengy what is this fatal error? \"Fatal error: Class 'Test\\Arithmetic' not found in C:\\projects\\zephir\\unit-tests\\Extension\\ArithmeticTest.php on line 28\"\n. To test the code after changing I have to create PR or there is other way? I don't want to setup own CI server\n. @steffengy I reverted processAddSources related changes and now the build is successful \nI think we only need to change the paths that will go inside release directory\n. @steffengy will it work?\n. You mean Travis CI? appveyor builds successfully and I think it is related to windows build\n. ",
    "jenalgit": "i have error compile zephir on windows 7 64bit php 7.1 nts 64 this output :\n```\nD:\\zeppro\\util>zephir build\nzephir_parser extension not loaded, compiling it\n'cl' is not recognized as an internal or external command,\noperable program or batch file.\n'lemon' is not recognized as an internal or external command,\noperable program or batch file.\nD:\\zephir\\parser\\parser>REM Build Lemon\nD:\\zephir\\parser\\parser>cl lemon.c\nD:\\zephir\\parser\\parser>del parser.c parser.h scanner.c\nD:\\zephir\\parser\\parser>re2c -o scanner.c scanner.re\nD:\\zephir\\parser\\parser>lemon -s parser.php5.lemon\nD:\\zephir\\parser\\parser>type parser.php5.c  1>parser.c\nD:\\zephir\\parser\\parser>type base.c  1>>parser.c\nPreparing for parser compilation...\nCompiling the parser...\nMicrosoft (R) Program Maintenance Utility Version 14.00.24210.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\nNMAKE : fatal error U1064: MAKEFILE not found and no target specified\nStop.\nPHP Warning:  copy(Release/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\zephir\\Library\\Compiler.php on line 256\nWarning: copy(Release/php_zephir_parser.dll): failed to open stream: No such file or directory in D:\\zephir\\Library\\Compiler.php on line 256\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n```\n\ncompile-errors.log.txt\nDoes anyone write e-book or video for tutorial zephir-lang ?\n\n. ",
    "seomixr": "Same issue as @jenalgit . ",
    "mzf": "@jenalgit u need modify VS2015 and add C++. By default install VS2015 has no C++. Have same issue on Win10x64 + PHP7x64\n```\nc: \\ projects \\ helloworld> zephir build\nzephir_parser extension not loaded, compiling it\nOptimizing compiler Microsoft (R) C / C ++ for the x86 version 19.00.24215.1\n(C) Microsoft Corporation (Microsoft Corporation). All rights reserved.\nC: \\ zephir \\ parser \\ parser> REM Build Lemon\nC: \\ zephir \\ parser \\ parser> cl lemon.c\nlemon.c\nlemon.c (1413): warning C4113: \"int (__cdecl ) ()\" is different in the parameter list of the \"int (__cdecl ) (const void , const void )\"\nc: \\ zephir \\ parser \\ parser \\ lemon.c (3130): warning C4715: translate_code: the value returned is not at all the ways of implementation\nMicrosoft (R) Incremental Linker Version 14.00.24215.1\nCopyright (C) Microsoft Corporation. All rights reserved.\n/out:lemon.exe\nlemon.obj\nC: \\ zephir \\ parser \\ parser> del parser.c parser.h scanner.c\nC: \\ zephir \\ parser \\ parser> re2c -o scanner.c scanner.re\nC: \\ zephir \\ parser \\ parser> lemon -s parser.php5.lemon\nParser statistics: 127 terminals, 99 nonterminals, 459 rules\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0947 states, 0 parser table entries, 0 conflicts\nC: \\ zephir \\ parser \\ parser> type parser.php5.c 1> parser.c\nC: \\ zephir \\ parser \\ parser> type base.c 1 >> parser.c\nPreparing for parser compilation ...\nERROR: bison is required\nCompiling the parser ...\n\u2564y\u0454tshser ya\u0401yuu\u0401rr yus\u0451y\u0454tsshtresh ya\u0401yuu\u0401r Microsoft (R), th\u0401\u0451sh 14.00.24210.0\n(C) \u2569yu\u0401yayu\u0401r\u040esh \u2560rsch\u0401yu\u0451yu\u0407\u0404 (Microsoft Corporation). \u252c\u0451h ya\u0401rtr par \u2219 m \u2219 he\u221a.\nNMAKE: fatal error U1077: \"C: \\ Program Files (x86) \\ Microsoft Visual Studio 14.0 \\ VC \\ BIN \\ cl.exe\": tyucht\u0401r \u2219 hee\u221asch yuf \"0x2\"\nStop.\n\"Cl.exe\" / D COMPILE_DL_ZEPHIR_PARSER / D ZEPHIR_PARSER_EXPORTS = 1 -IC: \\ zephir \\ parser / nologo / I c: \\ php-dev / include / I c: \\ php-dev / include / main / I c: \\ php -dev / include / Zend / I c: \\ php-dev / include / TSRM / I c: \\ php-dev / include / ext / D _WINDOWS / D ZEND_WIN32 = 1 / D PHP_WIN32 = 1 / D WIN32 / D _MBCS / W3 / FD / wd4996 / D_USE_32BIT_TIME_T = 1 / guard: cf / MP / LD / MD / W3 / Ox / D NDebug / D NDEBUG / D ZEND_WIN32_FORCE_INLINE / GF / D ZEND_DEBUG = 0 / I \"C: \\ zephir \\ parser \\ no \\ include \"/ FoC: \\ zephir \\ parser \\ Release \\ / fpC: \\ zephir \\ parser \\ Release \\ / FRC: \\ zephir \\ parser \\ Release \\ / FdC: \\ zephir \\ parser \\ Release \\ / c c : \\ zephir \\ parser \\ zephir_parser.c\nzephir_parser.c\nC: \\ zephir \\ parser \\ zephir_parser.c: fatal error C1041: can not open program database C: \\ zephir \\ parser \\ Release \\ vc140.idb; if multiple files CL.EXE writing to the same PDB-file, use the / FS\nWarning: copy (Release / php_zephir_parser.dll): failed to open stream: No such file or directory in C: \\ zephir \\ Library \\ Compiler.php on line 256\nZephir \\ Exception: The zephir parser extension could not be found or compiled!\nc: \\ projects \\ helloworld>\n. 1. I added c:\\php-sdk\\bin (where bison.exe) to PATH and get another error\n2. Changed php5 to php7 in c:\\zephir\\parser\\parser\\build_win32.bat \nAnd get another error\nc: \\ projects \\ helloworld> zephir build\nzephir_parser extension not loaded, compiling it\nOptimizing compiler Microsoft (R) C / C ++ for the x86 version 19.00.24215.1\n(C) Microsoft Corporation (Microsoft Corporation). All rights reserved.\nC: \\ zephir \\ parser \\ parser> REM Build Lemon\nC: \\ zephir \\ parser \\ parser> cl lemon.c\nlemon.c\nlemon.c (1413): warning C4113: \"int (__cdecl ) ()\" is different in the parameter list of the \"int (__cdecl ) (const void , const void )\"\nc: \\ zephir \\ parser \\ parser \\ lemon.c (3130): warning C4715: translate_code: the value returned is not at all the ways of implementation\nMicrosoft (R) Incremental Linker Version 14.00.24215.1\nCopyright (C) Microsoft Corporation. All rights reserved.\n/out:lemon.exe\nlemon.obj\nC: \\ zephir \\ parser \\ parser> del parser.c parser.h scanner.c\nC: \\ zephir \\ parser \\ parser> re2c -o scanner.c scanner.re\nC: \\ zephir \\ parser \\ parser> lemon -s parser.php7.lemon\nParser statistics: 127 terminals, 99 nonterminals, 459 rules\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0947 states, 0 parser table entries, 0 conflicts\nC: \\ zephir \\ parser \\ parser> type parser.php7.c 1> parser.c\nC: \\ zephir \\ parser \\ parser> type base.c 1 >> parser.c\nPreparing for parser compilation ...\nCompiling the parser ...\nUtility service programs Microsoft (R), Version 14.00.24210.0\n(C) Microsoft Corporation (Microsoft Corporation). All rights reserved.\nNMAKE: fatal error U1077: \"C: \\ Program Files (x86) \\ Microsoft Visual Studio 14.0 \\ VC \\ BIN \\ link.exe\": the return code \"0x460\"\nStop.\n\"Cl.exe\" / FI main / config.pickle.h / D COMPILE_DL_ZEPHIR_PARSER / D ZEPHIR_PARSER_EXPORTS = 1 -IC: \\ zephir \\ parser / nologo / I c: \\ php-dev / include / I c: \\ php-dev / include / main / I c: \\ php-dev/include/Zend / I c: \\ php-dev/include/TSRM / I c: \\ php-dev/include/ext / D _WINDOWS / D ZEND_WIN32 = 1 / D PHP_WIN32 = 1 / D WIN32 / D _MBCS / W3 / FD / wd4996 / D_USE_32BIT_TIME_T = 1 / guard: cf / MP / LD / MD / W3 / Ox / D NDebug / D NDEBUG / D ZEND_WIN32_FORCE_INLINE / GF / D ZEND_DEBUG = 0 / I \"C: \\ zephir \\ parser \\ no \\ include\" / FoC: \\ zephir \\ parser \\ Release \\ / fpC: \\ zephir \\ parser \\ Release \\ / FRC: \\ zephir \\ parser \\ Release \\ / FdC: \\ zephir \\ parser \\ Release \\ / c c: \\ zephir \\ parser \\ zephir_parser.c\nzephir_parser.c\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Cl.exe\" / FI main / config.pickle.h / D COMPILE_DL_ZEPHIR_PARSER / D ZEPHIR_PARSER_EXPORTS = 1 -IC: \\ zephir \\ parser / nologo / I c: \\ php-dev / include / I c: \\ php-dev / include / main / I c: \\ php-dev / include / Zend / I c: \\ php-dev / include / TSRM / I c: \\ php-dev / include / ext / D _WINDOWS / D ZEND_WIN32 = 1 / D PHP_WIN32 = 1 / D WIN32 / D _MBCS / W3 / FD / wd4996 / D_USE_32BIT_TIME_T = 1 / guard: cf / MP / LD / MD / W3 / Ox / D NDebug / D NDEBUG / D ZEND_WIN32_FORCE_INLINE / GF / D ZEND_DEBUG = 0 / I \"C: \\ zephir \\ parser \\ no \\ include\" / FoC: \\ zephir \\ parser \\ Release \\ / fpC: \\ zephir \\ parser \\ Release \\ / FRC: \\ zephir \\ parser \\ Release \\ / FdC: \\ zephir \\ parser \\ Release \\ / c c: \\ zephir \\ parser \\ parser \\ parser.c c: \\ zephir \\ parser \\ parser \\ scanner.c\nparser.c\nscanner.c\nscanner.re (30): warning C4101: next: unused local variable (compiled source file C: \\ zephir \\ parser \\ parser \\ scanner.c)\nparser.php7.c (8140): warning C4101: start_lines: unused local variable (compiled source file C: \\ zephir \\ parser \\ parser \\ parser.c)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rc / I c: \\ php-dev / include / n / fo C: \\ zephir \\ parser \\ Release \\ php_zephir_parser.dll.res / d FILE_DESCRIPTION = \"\\\" php_zephir_parser.dll \\ \"\" / d FILE_NAME = \"\\\" php_zephir_parser .dll \\ \"\" / d URL = \"\\\" http: //www.php.net \\ \"\" / d INTERNAL_NAME = \"\\\" ZEPHIR_PARSER extension \\ \"\" / d THANKS_GUYS = \"\\\" \\ \"\" c: \\ php -dev \\ build \\ template.rc\nMicrosoft (R) Windows (R) Resource Compiler Version 6.3.9600.17336\nCopyright (C) Microsoft Corporation. All rights reserved.\nCreate a library of C: \\ zephir \\ parser \\ Release \\ php_zephir_parser.lib and object C: \\ zephir \\ parser \\ Release \\ php_zephir_parser.exp\nzephir_parser.obj: error LNK2019: unresolved external reference to the symbol in __impzvalptr_dtor _zval_get_type function\nparser.obj: error LNK2001: unresolved external symbol \"impzvalptr_dtor\"\nzephir_parser.obj: error LNK2019: unresolved external reference to the symbol in imp__zend_parse_parameters _zval_get_type function\nzephir_parser.obj: error LNK2019: unresolved external reference to the symbol in __imp__php_info_print_table_header _zval_get_type function\nzephir_parser.obj: error LNK2019: unresolved external reference to the symbol in __imp__php_info_print_table_start _zval_get_type function\nzephir_parser.obj: error LNK2019: unresolved external reference to the symbol in __imp__php_info_print_table_end _zval_get_type function\nparser.obj: error LNK2019: unresolved external reference to the symbol __imp__emalloc @@ 4 _zend_string_alloc function\nparser.obj: error LNK2019: unresolved external reference to the symbol __imp__efree @@ 4 _parser_add_str_free function\nscanner.obj: error LNK2001: unresolved external symbol \"__imp__efree @@ 4\"\nparser.obj: error LNK2019: unresolved external reference to the symbol in __imp_zendmalloc _zend_string_alloc function\nparser.obj: error LNK2019: unresolved external reference to the symbol imp__zend_hash_str_add @@ 16 _parser_add_str function\nparser.obj: error LNK2019: unresolved external reference to the symbol __imp___array\n```. Gotcha, i fixed all errors!  How install Zephir on PHP7 x64. ",
    "zico4reel": "ehnm is anyone still interested in the php 5.x fix? cause it kinda worked for me, or everyone has moved to php7 while working with zephir. ",
    "hah-a": "OK! Let's look at a more simple implementations of classes ClassA and ClassB\n```\nnamespace ExtABC;\nclass ClassA\n{\n    public $ID;\npublic function __construct()\n{\n    let $this->ID = \"\";\n}\n\n}\n```\n```\nnamespace ExtABC;\nuse ExtABC\\ClassA;\nclass ClassB\n{\n    public function __construct()\n    {\n        var $objectA;\n        let $objectA = new \\ExtABC\\ClassA();\n        let $objectA->ID = \"objectA\";\n    }\n}\n```\nDuring compilation I get an error\n```\nSyntax error in extabc/classa on line 5\npublic $ID;\n\n------------^\n```\nThat is, the error does not already appear in the class ClassB, but in a class ClassA.\nIt follows from this conclusion: zephir does not accept \"ID\" as the name of the property.\n. Thanks! Can this feature be reflected in the documentation of zephir? This is necessary for a more accurate understanding of the language zephir.\n. ",
    "flyingangel": "Good idea. \nBut \"add\" does the same as \"set\" so there is no use\n\"is\" should only return a boolean not a value : return (bool)[prop] === true\n@sergeyklay . You can try another approach\n<?php\n$foo = \"bar\";\n$test = MyExt::vartest($GLOBALS); // $GLOBALS['foo'] = xx; return $test;\n// and create new var, called $test with some val\necho $foo . $test; // and access to it\n?>. Indeed, var type will pass the compiler.\nJust want to point out that there's a problem when trying to store the uchar or char type in an array as in :\nlet ch = keyspace[nb]; // --> return uchar from string\nlet pieces[] = ch; // --> store uchar\nBut our ch is defined as char so it's probably one of the cause.\nBut if I declare uchar ch; or a cast (uchar) keyspace[nb] the compiler will refuse\nNote that I consider this bug because it forces me to declare var ch; in advance. If you try to store directly in the array without the intermediate step, the compiler will refuse : let pieces[] = keyspace[nb];\nNot a big bug but I suppose for now it's preferably to avoid messing with non PHP-native variable type.\nTicket can be closed but it's good that in the future we more support for type casting between different types : char, uchar, string, boolean\nvar type should be only the last resort, a workaround, when the return type is really unknown (which is unlikely) or mixed\nAlso test if each type is \"storable\" in an array.\n3 test cases in attachment\ntest.txt\n. That could work. Still !! is preferred over empty(empty()). It's also a C implementation. \nAlso when we use an external function in zephir, the compiler force us to use a var type variable\nReturned values by functions can only be assigned to variant variables\nWould be nice to do a cast\nvar bool;\nlet bool = (boolean) externalFunction(); //or use !!\nor direct implementation\nboolean bool;\nlet bool = externalFunction();\nThe aim of zephir is to achieve the maximum speed so little details for the compiler to optimize are important.\nWe can also implement a \"header\" for zephir for hinting. Ex: functions.zh (as Zephir header)\nexternalFunction(string arg1) -> boolean;\nClassname::externalFunction2(object arg1) -> Closure;\nMethod header inside the same class or within the Zephir land should be recognized automatically.. https://github.com/phalcon/zephir-docs/pull/79\nEnglish only atm. ",
    "tabalchi": "Thanks!\n. ",
    "yty9898": "I'm Chinese,  I want to use function instead of use class\n. ",
    "danclive": "@steffengy OK, I have added a line end of the file.\n. ",
    "SerafimArts": "I trying to build extension over clear virtual machine:\n1) Windows 10 x64 Enterprise 2015 LTSB\n2) Zephir release snapshot v0.8\n3) PHP 7.0.4 Non Thread Safe x86\n4) PHP 7 (x86) develpack from http://windows.php.net/downloads/releases and php 7 sdk from http://windows.php.net/downloads/php-sdk/ (with binary tools copied inside sdk path)\n5) VisualStudio 2015 Express with C++ support and Extensibility tools update 1\nAnd i have this error again:\n\nSteps:\n- Install VS2015\n- Restart PC\n- Open Dev Console and running .\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\n- Download PHP 7.0.4 x86 nts to C:\\php7\\..\n- Add to PATH variable\n- Download php sdk to C:\\php7sdk\n- Downalod php sdk binary tools to C:\\php7sdk\n- Add C:\\php7sdk\\bin to PATH variable\n- Download php 7 devel pack to C:\\php7devpack \n- Add PHP_SDK_SCRIPT_PATH, PHP_SDK_BIN_PATH, PHP_SDK_PATH and BISON_SIMPLE variables (see screenshot)\n- Download zephir 0.8 to C:\\zephir\n- Add C:\\zephir\\bin to PATH\n- Create a simple zephir app\n- Open VS Dev Console and run zephir build\n. If i remove this to lines:\n\nBuilding are finished successfully! :dancers: I dont know what this means (because i don know C++ like a pro), but... Jedi Driven Development...\n. ",
    "wxmaper": "This error becouse sources have duplicates: zephir-master\\kernels\\ZendEngine3\\fcall.c and zephir-master\\kernels\\ZendEngine3\\extended\\fcall.c. Its creating one .obj file named as fcall.obj\n\nNMAKE : warning U4004: too many rules for target 'ext\\Release_TS\\fcall.obj'\nNMAKE : fatal error U1077...\n\nI'm rename _zephir-master\\kernels\\ZendEngine3\\extended_fcall.c and _zephir-master\\kernels\\ZendEngine3\\extended_array.c to \n_zephir-master\\kernels\\ZendEngine3\\extended_efcall.c and _zephir-master\\kernels\\ZendEngine3\\extended_earray.c\nand has made changes to a two files:\ntemplates\\ZendEngine3\\config.m4 at line 12\nand templates\\ZendEngine3\\config.w32 at line 6\n(rename extended\\fcall.c to extended\\efcall.c etc.)\n. ",
    "JCMais": "What is the status here?\n. ",
    "kastnermario": "Same problem here. How to fix this issue? Zephir is the latest available. Phalcon is build with the 2.1.x branch.\n. ",
    "ulfims": "On File: phalcon/mvc/view/engine/volt/compiler.zep, line: 2407:\nif typeof compileAlways != \"boolean\" {\n                                        throw new Exception(\"'compileAlways' must be a bool value\");\n                                }\nShould be:\nif  (typeof compileAlways)  != \"boolean\" {\n                                        throw new Exception(\"'compileAlways' must be a bool value\");\n                                }\n. I've checked and compiled on:\nUbuntu 15.10 64-bit\nphp 7 version: PHP Version 7.0.4-7+deb.sury.org~wily+2\nZephir: Zephir version 0.9.2a-dev\n. @Jurigag Agree with you. since more syntax similar with this issue.\nBut  my question:\nWhy its work on Phalcon branch master on php 5.6  with original code (without my correction) and same zephir version:?\n. maybe. Don't know  too\n. @Jurigag  I try to make a simple code:\n```\n            var dataBoolean=true;\n            if typeof dataBoolean != \"boolean\" {\n                    echo \"Not Boolean\";\n            }else{\n                    echo \"Boolean\";\n            }\n\n```\nit works perfect using PHP7\nStrange\n. @Jurigag \nI mad a simple class on zephir:\n```\nnamespace Coba;\nclass Data{\n        public function setOptions(array options)\n        {\n            var dataBoolean;\n            let dataBoolean=options[\"compileAlways\"];\n            return  typeof dataBoolean == \"boolean\" ;\n    }\n\n}\n```\nThe class called from PHP:\n```\n<?php\n$data=new Coba\\Data();\nif($data->setOptions([\"compileAlways\"=> true])){\n        echo \"Boolean\";\n}\nelse{\n        echo \"Not Boolean\";\n}\n```\nThe result: \"Boolean\";\nAny idea?\n. @Jurigag I think its bug on Zephir.\nI mad two code with expected result should same, but failed on checking like in phalcon script.\nScript 1:\nResult: Ok\n```\nnamespace Coba;\nclass Data{\n        public function setOptions(array options)\n        {\n            var dataBoolean;\n            let dataBoolean=options[\"compileAlways\"];\n            echo \"Coba\"; \n            if  typeof dataBoolean == \"boolean\" {\n                    return true;\n            }\n            else {\n                    return false;\n            }\n    }\n\n}\n```\nScript 2:\nResult: Not Ok\n```\nnamespace Coba;\nclass Data{\n        public function setOptions(array options)\n        {\n            var dataBoolean;\n            let dataBoolean=options[\"compileAlways\"];\n            echo \"Coba1\";\n            if  typeof dataBoolean != \"boolean\" {\n                    return false;\n            }\n            else {\n                    return true;\n            }\n    }\n\n}\n```\nPHP Script:\n```\n<?php\n$data=new Coba\\Data();\nif($data->setOptions([\"compileAlways\"=> true])){\n        echo \"Boolean\";\n}\nelse{\n        echo \"Not Boolean\";\n```\nWith same PHP file, the result on Zephir class is different. \nI think Zephir has problem with checking command:\nif typeof variable != \"boolean\" {\n}\nBut its ok on: \n```\nif typeof variable == \"boolean\" {\n}\n```\n. ",
    "petru80": "I have posted in phalcon before but someone informed me that is a zephir bug and I should post here.\n. Ok, I will try to investigate more this issue and come back with detailed infomations. Thank you!\n. Means that I can post back this problem to phalcon bug report?\n. I have posted the issue in phalcon bug report. I also have posted there the whole backtrace using bt.\n. Seg fault occurs when this code is executed:\n```\nuse Phalcon\\Cache\\Frontend\\Data;\nuse Phalcon\\Cache\\Backend\\Redis as RedisCache;\n$di->set('cache', function () {\n    $frontCache = new Data(array(\n        \"lifetime\" => 86400\n    ));\n    return new RedisCache($frontCache, array(\n        'host' => '127.0.0.1',\n        'port' => 6379\n    ));\n});\n```\n. ",
    "ganeshkbhat": "Worked. Reinstalled Apache and created new service. Closing this issue.\n. I have attached the .zep files and the php used to convert. I am using php-zephir but this is a simple code that should do fine. It uses invoke php method during conversion of callbacks. Please check the zip. When I do the build following is the message I get. I have attached the generated config.json as well. \nYou can skip the compiling error, I am able to compile the extension. I am able to compile manually with my build environment for PHP. But it does not work with the callback (Cb specified within the file). I have to manually give the Cb reference from external by using manual paths to callbacks in extension say for example 'Arrays\\arrays::anyCb' in this case.\n```\nC:\\php2z\\converted\\Arrays>zephir build\nWarning: Class \"Arrays\\Arrayscall_skipClosureOne\" does not exist at compile time in C:\\php2z\\converted\\Arrays\\arrays\\arrays.zep on 37 [nonexistent-class]\n                let checks =  new Arrayscall_skipClosureOne();\n    ---------------------------------------------------------^\n\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstallation is not implemented for windows yet! Aborting!\n```\narrays.zip\narrays-PHP.zip\n. I tried. The only option was create a callback function within the Arrays class. But again, I am not able to reference it within the class in a pre-written function. I have to reference the callback or pass it manually as callable function name string in PHP and does not work in Zephir or extension. Thats the reason for the issue. Its not PHP-Zephir but Zephir compilation.\n. Same error. Arrayscall_skipClosureOne or Arrayscall_skipClosureZero does not work. The sample I uploaded has Arrayscall_skipClosureZero anyways. I stopped using an inbuilt callback definition and created a seperate functionCb within Arrays to reference. And even that does not work. Compiles the extension with the same error. Other functions not using these definitions work.\n. php-zephir generate wrong __invoke methods with wrong body of method True. Yeeeeah...worked now. Did not notice that. Thanks for pointing out. I though I am loosing out on callbacks which I have loads to come.\n. Sure thanks.\n. ",
    "Fenikkusu": "I was on the development branch, so that was part of the issue. Went back to master and the version is registering correctly. However, PHP is failing with 'unable to load library...Symbol not found: _zval_used_for_init'\n. May of figured out what is going on. I sym linked the /usr/bin/php to PHP 7. I didn't do the same for the php-config and phpize apps, so they are still 5.4 it looks like. Will fix that and then try again.\n. Resolved/Closing. I used macports to install php 7. This didn't update the phpize/php-config software, so I tried http://php-osx.liip.ch/ to upgrade php instead. This also upgraded the phpize correctly. After that, I added the new php7 install to $PATH and it ran correctly.\n. Forgot To Mention, It's The zend-extension branch.\n. This occurred for https://github.com/twistersfury/cphalcon/tree/3.2.x-php-functions. Patch Below.\n```diff\nIndex: phalcon/mvc/view/engine/volt/compiler.zep\nIDEA additional info:\nSubsystem: com.intellij.openapi.diff.impl.patch.CharsetEP\n<+>UTF-8\n===================================================================\n--- phalcon/mvc/view/engine/volt/compiler.zep   (date 1495755658000)\n+++ phalcon/mvc/view/engine/volt/compiler.zep   (revision )\n@@ -2684,7 +2684,7 @@\n    for functionName in configOptions {\n        if !this->hasFunction(functionName) {\n\n\nif !call_user_func(\"function_exists\", functionName) {\nif !function_exists(functionName) {\n                    throw new Exception(functionName . \" does not exist\");\n                }\n\n```\nAfter compiling phalcon (./vendor/bin/zephir build --buildEngine=ZendEngine3), running ./vendor/bin/codecept run unit Mvc/View/Engine/Volt/CompilerTest.php will result in \n```\nThere were 2 errors:\n\n1) CompilerTest: Volt php functions | php native functions should work\n Test  tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:testVoltPhpFunctions | PHP Native Functions Should Work\n[Phalcon\\Mvc\\View\\Engine\\Volt\\Exception] zend_version does not exist  \n1  Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler->addPhpFunctions\n2  Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler->_compileSource\n3  /Users/fenikkusu/Documents/workspace/cphalcon/tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:1275\n4  Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt\\CompilerTest->Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt{closure}\n5  /Users/fenikkusu/Documents/workspace/cphalcon/tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:1279\n6  Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt\\CompilerTest->testVoltPhpFunctions\n\n2) CompilerTest: Volt php functions array | php include array of functions should work\n Test  tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:testVoltPhpFunctionsArray | PHP Include Array Of Functions Should Work\n[Phalcon\\Mvc\\View\\Engine\\Volt\\Exception] substr does not exist  \n1  Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler->addPhpFunctions\n2  Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler->_compileSource\n3  /Users/fenikkusu/Documents/workspace/cphalcon/tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:1294\n4  Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt\\CompilerTest->Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt{closure}\n5  /Users/fenikkusu/Documents/workspace/cphalcon/tests/unit/Mvc/View/Engine/Volt/CompilerTest.php:1298\n6  Phalcon\\Test\\Unit\\Mvc\\View\\Engine\\Volt\\CompilerTest->testVoltPhpFunctionsArray\nFAILURES!\nTests: 18, Assertions: 382, Errors: 2.\n```\nRunning the code without the given patch runs correctly without errors. One thing I likely should note, I'm running this using ZendEngine3. I've not tried without.. ",
    "crocodile2u": "Anybody interested in this? It's quite an error, to be honest, and this fix made my life easier.\n. Did someone have a chance to take a look into this issue?\n. Please take a look at pull request #1231 . While not a blocker, it is still an issue and the fix is pretty much straightforward.\n. If you have switched PHP version from php-7 to php-5.X or vice versa, you'll have to delete /home/zephir/parser/zephir_parser.so. My guess would be that it was compiled with a different version of PHP than the one you are using now.\n. ",
    "surjit": "ok thanks, I will try it\n. ``` zephir\n/\n * Handlebars\n \n * @category  Xamin\n * @package   Handlebars\n * @author    fzerorubigd fzerorubigd@gmail.com\n * @author    Behrooz Shabani everplays@gmail.com\n * @author    Mardix https://github.com/mardix\n * @copyright 2012 (c) ParsPooyesh Co\n * @copyright 2013 (c) Behrooz Shabani\n * @copyright 2014 (c) Mardix\n * @license   MIT\n * @link      http://voodoophp.org/docs/handlebars\n /\nnamespace Handlebars;\nuse Handlebars\\Loader\\StringLoader;\nuse Handlebars\\Cache\\Dummy;\nuse InvalidArgumentException;\nclass Handlebars\n{\n    protected static instance = null;\n    const VERSION = \"2.2\";\nprotected myTokenizer;\n\nprotected parser;\n\nprotected helpers;\n\nprotected loader;\n\nprotected partialsLoader;\n\nprotected cache;\n\nprotected escape = \"htmlspecialchars\";\n\nprotected escapeArgs = [ENT_COMPAT, \"UTF-8\"];\nprotected aliases = [];\n\npublic function __construct(array options = []) -> void\n{\n    if isset options[\"helpers\"] {\n        this->setHelpers(options[\"helpers\"]);\n    }\n    if isset options[\"loader\"] {\n        this->setLoader(options[\"loader\"]);\n    }\n    if isset options[\"partials_loader\"] {\n        this->setPartialsLoader(options[\"partials_loader\"]);\n    }\n    if isset options[\"cache\"] {\n        this->setCache(options[\"cache\"]);\n    }\n    if isset options[\"escape\"] {\n        if !(is_callable(options[\"escape\"])) {\n            throw new InvalidArgumentException(\"Handlebars Constructor \\\"escape\\\" option must be callable\");\n        }\n        let this->escape = options[\"escape\"];\n    }\n    if isset options[\"escapeArgs\"] {\n        if !(is_array(options[\"escapeArgs\"])) {\n            let options[\"escapeArgs\"] =  [options[\"escapeArgs\"]];\n        }\n        let this->escapeArgs = options[\"escapeArgs\"];\n    }\n    if isset options[\"partials_alias\"] && is_array(options[\"partials_alias\"]) {\n        let this->aliases = options[\"partials_alias\"];\n    }\n}\n\n/**\n * Shortcut 'render' invocation.\n *\n * Equivalent to calling `$handlebars->loadTemplate($template)->render($data);`\n *\n * @param string $template template name\n * @param mixed  $data     data to use as context\n * @return string Rendered template\n */\npublic function render(string template, data) -> string\n{\n    return this->loadTemplate(template)->render(data);\n}\n\n\npublic static function factory(array options = []) -> <Handlebars>\n{\n    if !(self::instance) {\n        let self::instance =  new self(options);\n    }\n    return self::instance;\n}\n\n/**\n * To invoke when this object is called as a function\n *\n * @param string $template template name\n * @param mixed  $data     data to use as context\n * @return string Rendered template\n */\npublic function __invoke(string template, data) -> string\n{\n    return this->render(template, data);\n}\n\n/**\n * Set helpers for current enfine\n *\n * @param Helpers $helpers handlebars helper\n *\n * @return void\n */\npublic function setHelpers(<Helpers> helpers)\n{\n    let this->helpers = helpers;\n}\n\n/**\n * Get helpers, or create new one if ther is no helper\n *\n * @return Helpers\n */\npublic function getHelpers() -> <Helpers>\n{\n    if !(isset this->helpers) {\n        let this->helpers =  new Helpers();\n    }\n    return this->helpers;\n}\n\n/**\n * Add a new helper.\n *\n * @param string $name   helper name\n * @param mixed  $helper helper callable\n *\n * @return void\n */\npublic function addHelper(string name, helper)\n{\n    this->getHelpers()->add(name, helper);\n}\n\n/**\n * Get a helper by name.\n *\n * @param string $name helper name\n * @return callable Helper\n */\npublic function getHelper(string name)\n{\n    return this->getHelpers()->__get(name);\n}\n\n/**\n * Check whether this instance has a helper.\n *\n * @param string $name helper name\n * @return boolean True if the helper is present\n */\npublic function hasHelper(string name) -> boolean\n{\n    return this->getHelpers()->has(name);\n}\n\n/**\n * Remove a helper by name.\n *\n * @param string $name helper name\n * @return void\n */\npublic function removeHelper(string name)\n{\n    this->getHelpers()->remove(name);\n}\n\n/**\n * Set current loader\n *\n * @param Loader $loader handlebars loader\n * @return void\n */\npublic function setLoader(<Loader> loader)\n{\n    let this->loader = loader;\n}\n\n/**\n * get current loader\n *\n * @return Loader\n */\npublic function getLoader() -> <Loader>\n{\n    if !(isset this->loader) {\n        let this->loader =  new StringLoader();\n    }\n    return this->loader;\n}\n\n/**\n * Set current partials loader\n *\n * @param Loader $loader handlebars loader\n * @return void\n */\npublic function setPartialsLoader(<Loader> loader)\n{\n    let this->partialsLoader = loader;\n}\n\n/**\n * get current partials loader\n *\n * @return Loader\n */\npublic function getPartialsLoader() -> <Loader>\n{\n    if !(isset this->partialsLoader) {\n        let this->partialsLoader =  new StringLoader();\n    }\n    return this->partialsLoader;\n}\n\n/**\n * Set cache  for current engine\n *\n * @param Cache $cache handlebars cache\n * @return void\n */\npublic function setCache(<Cache> cache)\n{\n    let this->cache = cache;\n}\n\n/**\n * Get cache\n *\n * @return Cache\n */\npublic function getCache() -> <Cache>\n{\n    if !(isset this->cache) {\n        let this->cache =  new Dummy();\n    }\n    return this->cache;\n}\n\n/**\n * Get current escape function\n *\n * @return callable\n */\npublic function getEscape()\n{\n    return this->escape;\n}\n\n/**\n * Set current escape function\n *\n * @param callable $escape function\n * @throws \\InvalidArgumentException\n * @return void\n */\npublic function setEscape(escape)\n{\n    if !(is_callable(escape)) {\n        throw new InvalidArgumentException(\"Escape function must be a callable\");\n    }\n    let this->escape = escape;\n}\n\n/**\n * Get current escape function\n *\n * @return array\n */\npublic function getEscapeArgs() -> array\n{\n    return this->escapeArgs;\n}\n\n/**\n * Set current escape function\n *\n * @param array $escapeArgs arguments to pass as extra arg to function\n * @return void\n */\npublic function setEscapeArgs(array escapeArgs)\n{\n    if !(is_array(escapeArgs)) {\n        let escapeArgs =  [escapeArgs];\n    }\n    let this->escapeArgs = escapeArgs;\n}\n\n/**\n * Set the Handlebars myTokenizer instance.\n *\n * @param myTokenizer $myTokenizer myTokenizer\n * @return void\n */\npublic function setTokenizer(<Tokenizer> myTokenizer)\n{\n    let this->myTokenizer = myTokenizer;\n}\n\n/**\n * Get the current Handlebars Tokenizer instance.\n *\n * If no Tokenizer instance has been explicitly specified, this method will\n * instantiate and return a new one.\n *\n * @return Tokenizer\n */\npublic function getTokenizer() -> <Tokenizer>\n{\n    if !(isset this->myTokenizer) {\n        let this->myTokenizer =  new Tokenizer();\n    }\n    return this->myTokenizer;\n}\n\n/**\n * Set the Handlebars Parser instance.\n *\n * @param Parser $parser parser object\n * @return void\n */\npublic function setParser(<Parser> parser)\n{\n    let this->parser = parser;\n}\n\n/**\n * Get the current Handlebars Parser instance.\n *\n * If no Parser instance has been explicitly specified, this method will\n * instantiate and return a new one.\n *\n * @return Parser\n */\npublic function getParser() -> <Parser>\n{\n    if !(isset this->parser) {\n        let this->parser =  new Parser();\n    }\n    return this->parser;\n}\n\n/**\n * Load a template by name with current template loader\n *\n * @param string $name template name\n *\n * @return Template\n */\npublic function loadTemplate(string name) -> <Template>\n{\n    var source, tree;\n\n    let source =  this->getLoader()->load(name);\n    let tree =  this->tokenize(source);\n    return new Template(this, tree, source);\n}\n\n/**\n * Load a partial by name with current partial loader\n *\n * @param string $name partial name\n *\n * @return Template\n */\npublic function loadPartial(string name) -> <Template>\n{\n    var source, tree;\n\n    if isset this->aliases[name] {\n        let name = this->aliases[name];\n    }\n    let source =  this->getPartialsLoader()->load(name);\n    let tree =  this->tokenize(source);\n    return new Template(this, tree, source);\n}\n\n/**\n * Register partial alias\n *\n * @param string $alias   Partial alias\n * @param string $content The real value\n * @return void\n */\npublic function registerPartial(string alias, string content)\n{\n    let this->aliases[alias] = content;\n}\n\n/**\n * Un-register partial alias\n *\n * @param string $alias Partial alias\n * @return void\n */\npublic function unRegisterPartial(string alias)\n{\n    if isset this->aliases[alias] {\n        unset this->aliases[alias];\n\n    }\n}\n\n/**\n * Load string into a template object\n *\n * @param string $source string to load\n * @return Template\n */\npublic function loadString(string source) -> <Template>\n{\n    var tree;\n\n    let tree =  this->tokenize(source);\n    return new Template(this, tree, source);\n}\n\n/**\n * try to tokenize source, or get them from cache if available\n *\n * @param string $source handlebars source code\n * @return array handlebars parsed data into array\n */\nprotected function tokenize(string source) -> array\n{\n    var hash, tree, tokens;\n\n    let hash =  md5(sprintf(\"version: %s, data : %s\", self::VERSION, source));\n    let tree =  this->getCache()->get(hash);\n    if tree === false {\n        let tokens =  this->getTokenizer()->scan(source);\n        let tree =  this->getParser()->parse(tokens);\n        this->getCache()->set(hash, tree);\n    }\n    return tree;\n}\n\n}\n. zephir\nprotected static instance = null;\nconst VERSION = \"2.2\";\nprotected myTokenizer, parser, helpers, loader, partialsLoader, cache;\nprotected escape = \"htmlspecialchars\";\nprotected escapeArgs = [ENT_COMPAT, \"UTF-8\"];\nprotected aliases = [];\n```\nlike this if not, please give me example\n. ```\nZEND_FUNCTION(p)\n{\n  zval* arr;\nif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"z\", &arr) == FAILURE)\n    return;\nzend_print_zval(arr, 0);\n}\n```\nif you expecting array return then read this\nhttp://docstore.mik.ua/orelly/webprog/php/ch14_08.htm\nit nicely explain, how to do so\n. my goal is to execute php script code from string\n. please give me example, i'm new to c code\n. or how to call exiting evalCode in c \n. I lost that code, I will reopen the issue, if able reproduce\n. I got it fixed. \nline this -> # Adding user \n. (gdb) run /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\nStarting program: /usr/bin/php php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCould not open input file: php\nInferior 1 (process 39989) exited with code 01\nany other way\n(gdb) run /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\nStarting program: /usr/bin/php /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nParse error: syntax error, unexpected '@' in /usr/bin/php on line 1159\n[Inferior 1 (process 40007) exited with code 0377]\n. root@ubuntu:/home/app# gdb php\nGNU gdb (Ubuntu 7.11-0ubuntu1) 7.11\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\nhttp://www.gnu.org/software/gdb/bugs/.\nFind the GDB manual and other documentation resources online at:\nhttp://www.gnu.org/software/gdb/documentation/.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from php...done.\n(gdb) run /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\nStarting program: /usr/bin/php /usr/bin/php -d safe_mode=Off -d enable_dl=On /home/zephir/compiler.php $\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nParse error: syntax error, unexpected '@' in /usr/bin/php on line 1159\nInferior 1 (process 84769) exited with code 0377 bt\nNo stack.\n. it seems like php gd library is not compiled if build from source otherwise sudo yum install php-gd\n. I resolved it, renaming object  to objecte \n. ",
    "joyider": "Confirmed :)\n. ",
    "virgofx": "Looks good, thanks :+1: \n. My personal opinion is that the character mask is more appropriate than the alt variable, provided that strchr is fast enough to not impact performance.\nAlso can we update the public API on the Phalcon\\Text to include the extra parameters in docblock?\n. For reference, generated C code is attached below. The error occurs initializing the subsequent catch status variable ZEPHIR_INIT_NVAR(status);\n``` c\nPHP_METHOD(Tester, testMemoryException) {\nzval *e = NULL, *status = NULL, _0 = zval_used_for_init, *_2$$4 = NULL, _3$$4;\nint ZEPHIR_LAST_CALL_STATUS;\nzephir_fcall_cache_entry *_1 = NULL;\n\nZEPHIR_MM_GROW();\n\nZEPHIR_SINIT_VAR(_0);\nZVAL_STRING(&_0, \">>> dispatchTest()\\n\", 0);\nZEPHIR_CALL_FUNCTION(NULL, \"printf\", &_1, 73, &_0);\nzephir_check_call_status();\n\n/* try_start_1: */\n\n    ZEPHIR_CALL_METHOD(&status, this_ptr, \"donoopexception\", NULL, 74);\n    zephir_check_call_status_or_jump(try_end_1);\n\ntry_end_1:\n\nif (EG(exception)) {\n    ZEPHIR_CPY_WRT(e, EG(exception));\n    if (zephir_instance_of_ev(e, zend_exception_get_default(TSRMLS_C) TSRMLS_CC)) {\n        zend_clear_exception(TSRMLS_C);\n        ZEPHIR_CALL_METHOD(&_2$$4, e, \"getmessage\", NULL, 0);\n        zephir_check_call_status();\n        ZEPHIR_SINIT_VAR(_3$$4);\n        ZVAL_STRING(&_3$$4, \">>> Caught exception: %s\\n\", 0);\n        ZEPHIR_CALL_FUNCTION(NULL, \"printf\", &_1, 73, &_3$$4, _2$$4);\n        zephir_check_call_status();\n        ZEPHIR_INIT_NVAR(status);\n        ZVAL_STRING(status, \"woop\", 1);\n    }\n}\nZEPHIR_SINIT_NVAR(_0);\nZVAL_STRING(&_0, \">>> after dispatchTest() (Should not get here in debug mode)\\n\", 0);\nZEPHIR_CALL_FUNCTION(NULL, \"printf\", &_1, 73, &_0);\nzephir_check_call_status();\nZEPHIR_MM_RESTORE();\n\n}\nPHP_METHOD(Tester, doNoopException) {\nzval _0;\nint ZEPHIR_LAST_CALL_STATUS;\n\nZEPHIR_MM_GROW();\n\nZEPHIR_SINIT_VAR(_0);\nZVAL_STRING(&_0, \">>> doNoopException()\\n\", 0);\nZEPHIR_CALL_FUNCTION(NULL, \"printf\", NULL, 73, &_0);\nzephir_check_call_status();\nZEPHIR_THROW_EXCEPTION_DEBUG_STR(zend_exception_get_default(TSRMLS_C), \"I am exception\", \"phalcon/tester.zep\", 54);\nreturn;\n\n}\n```\n. @andresgutierrez Do you have quick second to look and see ? Should be quick fix with the full traces shown. I can help test as well.\n. Yeah, it should be null but somehow not getting set or not sure ... If you have a test blub, I can quickly compile to test fix.\n. @andresgutierrez Any chance you can take a look at this again as it's blocking extended try/catch logic in Dispatcher fixes for 3.0.2 Phalcon :)\n. ping @andresgutierrez \n. Yep, thats exactly the issue @Jurigag . Hopefully @andresgutierrez has more time next week to look at this!  \nThat is what's causing funky segfaults on my PR in the build\n. ping @andresgutierrez Can you take a look?\n. @sjinks Thanks you are the man!. This is being fixed in Zephir and the new Dispatcher code with all new tests.\nhttps://github.com/virgofx/cphalcon/commits/3.0.x\n. Fix is in Zephir land but my tests include check for this, which are confirmed fixed, and referenced in one of the corresponding issues slated for inclusion in 3.0.2\n. Awesome, finally a unit test that shows the issue!. @sjinks Could this be related to #1325? or will it fix it?. Eeek. Definitely :+1:\n. Maybe spell as \"delimeter\" as well on line 84.\n. ",
    "toddlxt": "@andresgutierrez Successfully compiled cpahlcon 2.1.x using the latest master. Thank you very much!\n. @mruz That's true. When I saw \"Phalcon 2.1.x has beta PHP7 support\", I couldn't wait to download and compile 2.1.x. However, php crashed and nginx returned 502 page when I used Models or PHQL to retrieve data from Mysql (\\mysqli worked fine, and the same code worked fine with 2.0.10). I still feel very excited about the coming PHP7 support, though. I admire the authors of Phalcon and Zephir, and believe they will resolve these bugs soon. I know phalcon 2.1.x is a beta version, and I'm willing to test it and submit issues to help improve Phalcon.\n. ",
    "xEsk": "Some news about this issue?\n. php\nclass Test1\n{\n    public static function foo()\n    {\n        return \"hello\";\n    }\n}\nSimple test code:\nphp\nvar aClass = \"Test1\";\nvar method = \"foo\";\necho {aClass}::{method}();. Great! Good job! :). ",
    "lsave": "is there any further plan for this?\n. ",
    "mdular": "+2 for speed :)\n. ",
    "Handyman": "Still getting the same error, only in the new directory.\nThe problem is, installing Zephir doens't create the zephir/parser/libtool.\nI looked manually, and it is not there, which is why even running this under sudo doesn't work.\n. ",
    "chilimatic": "I had to compile the zephir-parser, (which failed) but the parser-tools libs where created so I could at least compile phalcon.\n. @sergeyklay \nactually I fixed it. but still i had to compile the parser for phalcon to work\nkernel + distro\nbash\nLinux tuxis-world 4.4.0-22-generic #39-Ubuntu SMP Thu May 5 16:53:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Lin\nUbuntu 16/04\nphp version \nbash\nphp -v \nPHP 7.0.4-7ubuntu2 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies\n    with Xdebug v2.4.0, Copyright (c) 2002-2016, by Derick Rethans\nzephir & cphalcon are just cloned\nbash\ngit status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n``` bash\ncd ~/build/zephir/parser\n./configure\nchecking for grep that handles long lines and -e... /bin/grep\nchecking for egrep... /bin/grep -E\nchecking for a sed that does not truncate output... /bin/sed\nchecking for cc... cc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether cc accepts -g... yes\nchecking for cc option to accept ISO C89... none needed\nchecking how to run the C preprocessor... cc -E\nchecking for icc... no\nchecking for suncc... no\nchecking whether cc understands -c and -o together... yes\nchecking for system library directory... lib\nchecking if compiler supports -R... no\nchecking if compiler supports -Wl,-rpath,... yes\nchecking build system type... x86_64-pc-linux-gnu\nchecking host system type... x86_64-pc-linux-gnu\nchecking target system type... x86_64-pc-linux-gnu\nchecking for PHP prefix... /usr\nchecking for PHP includes... -I/usr/include/php/20151012 -I/usr/include/php/20151012/main -I/usr/include/php/20151012/TSRM -I/usr/include/php/20151012/Zend -I/usr/include/php/20151012/ext -I/usr/include/php/20151012/ext/date/lib\nchecking for PHP extension directory... /usr/lib/php/20151012\nchecking for PHP installed headers prefix... /usr/include/php/20151012\nchecking if debug is enabled... no\nchecking if zts is enabled... no\nchecking for re2c... re2c\nchecking for re2c version... 0.16 (ok)\nchecking for gawk... no\nchecking for nawk... nawk\nchecking if nawk is broken... no\nchecking whether to enable zephir_parser... yes, shared\nchecking how to print strings... printf\nchecking for a sed that does not truncate output... (cached) /bin/sed\nchecking for fgrep... /bin/grep -F\nchecking for ld used by cc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 1572864\nchecking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\nchecking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... printf %s\\n\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking for gawk... (cached) nawk\nchecking command to parse /usr/bin/nm -B output from cc object... ok\nchecking for sysroot... no\nchecking for a working dd... /bin/dd\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\nchecking for mt... mt\nchecking if mt is a manifest tool... no\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if cc supports -fno-rtti -fno-exceptions... no\nchecking for cc option to produce PIC... -fPIC -DPIC\nchecking if cc PIC flag -fPIC -DPIC works... yes\nchecking if cc static flag -static works... yes\nchecking if cc supports -c -o file.o... yes\nchecking if cc supports -c -o file.o... (cached) yes\nchecking whether the cc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... no\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... no\nconfigure: creating ./config.status\nconfig.status: creating config.h\nconfig.status: config.h is unchanged\nconfig.status: executing libtool commands\n```\nbash\nsudo make install\nInstalling shared extensions:     /usr/lib/php/20151012/\nafter that it worked\n```\nsudo zephir build \u2014backend=ZendEngine3\nWarning: Variable \"_SESSION\" assigned but not used in Phalcon\\Session\\Adapter::remove in /home/j/build/cphalcon/phalcon/session/adapter.zep on 204 [unused-variable]\n }\n-^\n\nWarning: Variable \"beforeLine\" assigned but not used in Phalcon\\Debug::showTraceItem in /home/j/build/cphalcon/phalcon/debug.zep on 339 [unused-variable]\n   beforeLine, firstLine, afterLine, lastLine, i, linePosition, currentLine;\n-------------^\n\nWarning: Class \"Phalcon\\Mvc\\Group\" does not exist at compile time in /home/j/build/cphalcon/phalcon/mvc/model.zep on 1397 [nonexistent-class]\n   messages->rewind();\n---------------------^\n\nWarning: Class \"Phalcon\\Mvc\\Group\" does not exist at compile time in /home/j/build/cphalcon/phalcon/mvc/model.zep on 1400 [nonexistent-class]\n   while messages->valid() {\n---------------------------^\n\nWarning: Class \"Phalcon\\Mvc\\Group\" does not exist at compile time in /home/j/build/cphalcon/phalcon/mvc/model.zep on 1402 [nonexistent-class]\n    let message = messages->current();\n-------------------------------------^\n\nWarning: Class \"Phalcon\\Mvc\\Group\" does not exist at compile time in /home/j/build/cphalcon/phalcon/mvc/model.zep on 1412 [nonexistent-class]\n    messages->next();\n--------------------^\n\nWarning: Function \"\\sodium\\randombytes_buf\" does not exist at compile time in /home/j/build/cphalcon/phalcon/security/random.zep on 124 [nonexistent-function]\n   return \\\\Sodium\\\\randombytes_buf(len);\n----------------------------------------^\n\nWarning: Function \"\\sodium\\randombytes_uniform\" does not exist at compile time in /home/j/build/cphalcon/phalcon/security/random.zep on 320 [nonexistent-function]\n   return \\\\Sodium\\\\randombytes_uniform(len) + 1;\n---------------------------------------------^\n\nCompiling...\nInstalling...\nExtension installed!\nDon't forget to restart your web server\n```\nI'm just guessing so correct me if I'm wrong, but since the normal clone of the zephir repos does not contain the compiled parser packages and the \"install script\" only copies the static compiled zephir bin to /usr/local/bin or something similar.\nThe compilation process of cphalcon with zephir than tries to link a the missing parser module which results in the reported error. \nThis is just guess work based on my observations. but if you download a clean ubuntu vagrant install the needed dependencies and just clone zephir + cphalcon -> trigger the zephir install script and try to compile cphalcon. I guess you can reproduce that issue. \nI don't have time otherwise I would actually try it.\n. shouldn't it be \nif ($parameters !== null && count($parameters)) {\notherwise you could just use \nif ($parameters) {\nwould be less opcode operations and would have the complete same result. . @chrysanthemum sorry I assumed an overloaded array. I will make sure to read up next time :). ",
    "kcloze": "it's ok,libtool version made this wrong, close it.\n. ",
    "hervems": "For appveyor build, I think the problem is that PHP_EOL is not \\r\\n\nwhile the var_dump uses a correct end of line (\"\\r\\n\").\nI can try to do a hack, but I can't test the result because I don't have Microsoft Visual Studio Compiler (cl.exe). Do you have any idea to have a environment in local?\n. All builds are ok (travis + appveyor).\nBy my side, I tested on Windows 7 with Visual Studio 11.\n. Because, in PHP 7.0.X, it's deprecated\n/* PHP-7 doesn't support symbol_table substitution for functions */\nZEND_ASSERT(fci->symbol_table == NULL);\nand in PHP 7.1.X (see master of PHP, it's deleted), see :\nzend_API.h :\ntypedef struct _zend_fcall_info {\n    size_t size;\n    zval function_name;\n    zval retval;\n    zval params;\n    zend_object *object;\n    zend_bool no_separation;\n    uint32_t param_count;\n} zend_fcall_info;\nso, it's not necessary to use it.\nI saw in Zephir, no impact to delete this line and to set call->symbol_table\n= NULL in \"\nextended/fcall.c\".\n2016-05-05 12:43 GMT+02:00 Steffen Butzer notifications@github.com:\n\nIn kernels/ZendEngine3/fcall.c\nhttps://github.com/phalcon/zephir/pull/1227#discussion_r62171992:\n\n@@ -420,7 +420,6 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n    fci.params         = NULL;\n    //fci.params: Passed as separate parameter to prevent the need to convert zval  to zval *\n    fci.no_separation  = 1;\n-   fci.symbol_table   = NULL;\n\nis there any reason you removed this line?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/pull/1227/files/c2d15c599eeeff207834c732d7c7cd6a79d2331a#r62171992\n. If you follow the execution path after the line :\n\nfci.symbol_table = null in zephir_call_user_function\nthe unique usage of fci->symbol_table is in extended/fcall.c, line 144.\nwe never go into the code of PHP in this context, so why initialize an\nattribut when it's not used.\nSo I'm agree I can add a :\nif PHP_VERSION_ID < 70100\n...\nendif\nto be more secure.\n2016-05-07 1:56 GMT+02:00 Steffen Butzer notifications@github.com:\n\nIn kernels/ZendEngine3/fcall.c\nhttps://github.com/phalcon/zephir/pull/1227#discussion_r62405609:\n\n@@ -420,7 +420,6 @@ int zephir_call_user_function(zval object_pp, zend_class_entry obj_ce, zephir_\n    fci.params         = NULL;\n    //fci.params: Passed as separate parameter to prevent the need to convert zval  to zval *\n    fci.no_separation  = 1;\n-   fci.symbol_table   = NULL;\n\nJust because you saw no impact it doesn't mean there won't be one.\nRemoving that would be ok if there was no version using it.\nEven your own code example shows why it's not a good idea:\nZEND_ASSERT(fci->symbol_table == NULL); might fail since ->symbol_table\nmight be initialized to a not-null value (due to not-zeroed memory\nallocation).\nSo we'll have to introduce ifdef's for 7.1.X here.\n(since that won't land in PHP7.0.X exactly for that\nbackwards-compatibility argument above)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/phalcon/zephir/pull/1227/files/c2d15c599eeeff207834c732d7c7cd6a79d2331a#r62405609\n. \n",
    "xuanskyer": "@sergeyklay  how to solve ?\n. @Jurigag thanks!\nI solved it use a dynamic manner .\nI 'll try your method\n. ",
    "lscgzwd": "yes, I clone zephir  just four hours ago(2016-07-03 12:00:00 UTC).\n[root@localhost zephir]# git pull\nAlready up-to-date.\n[root@localhost zephir]# git status\n~ On branch master\nzephir\nif ($compilationContext->config->get('check-invalid-reads', 'optimizations')) {\n    switch ($variable->getType()) {\n        case 'variable':\n        case 'string':\n        case 'array':\n            if (!$variable->isLocalOnly()) {\n                $variable->setMustInitNull(true);\n                $compilationContext->codePrinter->output('ZEPHIR_CHECK_POINTER(' . $variable->getName() . ');');\n        }\n        break;\n    }\n}\nI can see that the check work when check-invalid-reads set to true, I just turn check-invalid-reads to false, it works ok.\n. ",
    "danielspk": "As I can provide a reference to the class the compiler?\n. This is the public repository: https://github.com/danielspk/TornadoHttpZephir\nRun test: php test/index.php\nThank.\n. Thanks, the error was fixed.\n. ",
    "amichelins": "I am tring to compile de Zephir extension to solve :\nD:\\Zephir_ext\\sriutl\\sriutl>zephir build\nZephir\\Exception: Extension namespace cannot be loaded --> this\n. ",
    "alisovpv": "compile-errors.log\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c: In function \u2018zim_Phalcon_Annotations_Reader_parse\u2019:\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:91:55: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n   ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(classAnnotations, &comment, &0$$3, &_1$$3 TSRMLS_CC);\n                                                       ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:115:57: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n     ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(propertyAnnotations, &comment, &_3$$7, &_4$$7 TSRMLS_CC);\n                                                         ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct _zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:147:57: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n     ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(methodAnnotations, &comment, &_7$$12, &_8$$12 TSRMLS_CC);\n                                                         ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct _zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\nmake: _* [phalcon/annotations/reader.lo] \u041e\u0448\u0438\u0431\u043a\u0430 1\nmake: * \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u0439\u2026\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c: In function \u2018zim_Phalcon_Annotations_Reader_parse\u2019:\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:91:55: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n   ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(classAnnotations, &comment, &0$$3, &_1$$3 TSRMLS_CC);\n                                                       ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct _zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:115:57: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n     ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(propertyAnnotations, &comment, &_3$$7, &_4$$7 TSRMLS_CC);\n                                                         ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct _zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\n/home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:147:57: error: incompatible type for argument 1 of \u2018phannot_parse_annotations\u2019\n     ZEPHIR_LAST_CALL_STATUS = phannot_parse_annotations(methodAnnotations, &comment, &_7$$12, &_8$$12 TSRMLS_CC);\n                                                         ^\nIn file included from /home/fix/cphalcon/ext/phalcon/annotations/reader.zep.c:22:0:\n./phalcon/annotations/annot.h:44:5: note: expected \u2018zval * {aka struct _zval_struct }\u2019 but argument is of type \u2018zval {aka struct _zval_struct}\u2019\n int phannot_parse_annotations(zval result, zval comment, zval file_path, zval line TSRMLS_DC);\n     ^\nmake: * [phalcon/annotations/reader.lo] \u041e\u0448\u0438\u0431\u043a\u0430 1\n`\n. \u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u044f \u043d\u0435 \u043f\u043e\u0439\u043c\u0443 \u043e \u043a\u0430\u043a\u043e\u043c \u043a\u043e\u0434\u0435 \u0432\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0435. \u042f \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b  Zephir, \u0441\u043a\u0430\u0447\u0430\u043b (git clone) Phalcon \u0438 \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0435\u0433\u043e \u0438\u043d\u0441\u0442\u0430\u043b\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \ngoogle translate \n\nSorry, I do not understand what kind of code you are talking about. I just found Zephir, downloaded (git clone) Phalcon and try to install it.\n. Extension instaled!\nThank you so much!\n. \n",
    "niel": "I've only compiled against PHP 7.0 so have no idea if this affects 5.6 or other version users.\nEDIT\nShould have mentioned using: Zephir version 0.9.3a-dev-e716dbe641\n. I'd appreciate some direction on how to create a unit test for this.\n. the extension?\n. contents of ext/test/testord.zep.c (or did you want some other file?)\n``` c\nifdef HAVE_CONFIG_H\ninclude \"../ext_config.h\"\nendif\ninclude \ninclude \"../php_ext.h\"\ninclude \"../ext.h\"\ninclude \ninclude \ninclude \ninclude \"kernel/main.h\"\ninclude \"kernel/memory.h\"\ninclude \"kernel/string.h\"\ninclude \"kernel/fcall.h\"\nZEPHIR_INIT_CLASS(Test_testord) {\nZEPHIR_REGISTER_CLASS(Test, testord, test, testord, test_testord_method_entry, 0);\n\nreturn SUCCESS;\n\n}\nPHP_METHOD(Test_testord, test) {\nzval _0, _1$$3, _2$$3, _3$$3, _4$$3, _6$$3, _8$$3;\nzval text;\nchar testChar = 0;\nint ZEPHIR_LAST_CALL_STATUS, index;\nzephir_fcall_cache_entry *_5 = NULL, *_7 = NULL;\nZEPHIR_INIT_THIS();\n\nZVAL_UNDEF(&text);\nZVAL_UNDEF(&_0);\nZVAL_UNDEF(&_1$$3);\nZVAL_UNDEF(&_2$$3);\nZVAL_UNDEF(&_3$$3);\nZVAL_UNDEF(&_4$$3);\nZVAL_UNDEF(&_6$$3);\nZVAL_UNDEF(&_8$$3);\n\nZEPHIR_MM_GROW();\n\nindex = 0;\nZEPHIR_INIT_VAR(&text);\nZVAL_STRING(&text, \"The quick red fox jumped over the lazy brown dog.\");\nwhile (1) {\n    if (!(index < zephir_fast_strlen_ev(&text))) {\n        break;\n    }\n    testChar = ZEPHIR_STRING_OFFSET(&text, index);\n    testChar = testChar;\n    ZEPHIR_INIT_NVAR(&_2$$3);\n    ZVAL_STRING(&_2$$3, \"%X\");\n    ZVAL_LONG(&_3$$3, testChar);\n    ZEPHIR_CALL_FUNCTION(&_4$$3, \"sprintf\", &_5, 1, &_2$$3, &_3$$3);\n    zephir_check_call_status();\n    zend_print_zval(&_4$$3, 0);\n    php_printf(\"%s\", \" \");\n    ZVAL_LONG(&_3$$3, testChar);\n    ZEPHIR_CALL_FUNCTION(&_6$$3, \"ord\", &_7, 2, &_3$$3);\n    zephir_check_call_status();\n    ZEPHIR_INIT_NVAR(&_2$$3);\n    ZVAL_STRING(&_2$$3, \"%02x\");\n    ZEPHIR_CALL_FUNCTION(&_8$$3, \"sprintf\", &_5, 1, &_2$$3, &_6$$3);\n    zephir_check_call_status();\n    zend_print_zval(&_8$$3, 0);\n    ZEPHIR_INIT_NVAR(&_2$$3);\n    ZEPHIR_GET_CONSTANT(&_2$$3, \"PHP_EOL\");\n    zend_print_zval(&_2$$3, 0);\n    index++;\n}\nZEPHIR_MM_RESTORE();\n\n}\n```\n. Yes. I don't understand what point you are trying to make. The ord() function returns an integer, which is then printed using sprintf to output hexadecimal value to compare. char-toHex() shows the correct hex value, the sprintf of the ord() does not. This is because ord() is returning the incorrect integer value.\nThe test script does it this way because char->toHex() is the simplest way to get the value of the char variable, and the ord() returned value needs to be converted to hex for comparison.\n. Damnit. This is a pretty big gotcha, but thanks for the clarification.\n. Thanks\n. I understand what is happening. I was reporting it as an issue because it isn't emulating the behaviour of C's char as expected.. ",
    "layershifter": "Are there any chance to get solution on this issue?\n. bash\n$ zephir version\n0.9.5a-dev\n\nbash\n$ php -m | grep tests\n```bash\nEmpty output, extension is not loaded.\n```\n\nbash\n$ cat /etc/php/7.0/mods-available/dom.ini\nextension=dom.so\nextension=tests.so\n\nbash\n$ php -m | grep tests\ntests # Now is loaded.\n\nbash\n$ php test.php\nPHP Warning:  Couldn't fetch Tests\\Element. Node no longer exists in /home/alexander/PhpstormProjects/zep-test/test.php on line 12\nPHP Stack trace:\nPHP   1. {main}() /home/alexander/PhpstormProjects/zep-test/test.php:0\nPHP Notice:  Undefined property: Tests\\Element::$nodeName in /home/alexander/PhpstormProjects/zep-test/test.php on line 12\nPHP Stack trace:\nPHP   1. {main}() /home/alexander/PhpstormProjects/zep-test/test.php:0\n/home/alexander/PhpstormProjects/zep-test/test.php:12:\nclass Tests\\Element#4 (1) {\n  public $test =>\n  NULL\n}\n/home/alexander/PhpstormProjects/zep-test/test.php:12:\nNULL\n\nProblem is still there, proposed solution is wrong. Looks that issue must be reopened.. Same issue on PHP 7.1.0RC6. Even if tests module will be last. . ",
    "ultralamer": "It works. Greate thanks!\n. ",
    "cyberhck": "Sorry, my bad! I had the directory structure wrong. If there is someone who is facing same issue, check your class name, namespace and directory name, it's probably because of naming issue\n. ",
    "allflame": "@andresgutierrez \nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model/resultset/simple.zep#L204\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model.zep#L3630\n. ",
    "jockchou": "{func}();\nit work! \n. Sometime, The Zephir Compiler did't tell me what's wrong with my code, which line wrong?\nJust say \"Zephir\\Exception: Cannot parse file\".\nI Must read my code line by line.\n. ```\nnamespace Snail\\Mvc;\nuse Snail\\Mvc\\Route\\Route;\nclass Router implements RouterInterface\n{\n    protected routes = [];\n    protected matchedRoute;\npublic function getMatchedRoute() {\n    return this->matchedRoute;\n}\n\npublic function add(string path = null, var httpMethods = null, int position = self::POSITION_LAST) -> <RouteInterface>\n{\n    var route;\n\n    let route = new Route(path, httpMethods);\n\n    if position == self::POSITION_FIRST {\n        let this->routes[] = route;\n    } elseif position == self::POSITION_LAST {\n        let this->routes = array_merge([route], this->routes);\n    } else {\n        throw new \\Exception(\"Invalid route position\");\n    }\n\n    return route;\n}\n\nprivate function checkMethod(var reqMethod, array methods) -> boolean\n{\n    if count(methods) > 0 && methods[0] === \"*\" {\n        return true;\n    } else {\n        return in_array(reqMethod, methods);\n    }\n}\n\npublic function handleRequest(<ApplicationInterface> application) {\n    var route, methods, path, handler, routeFound = false;\n    var pathInfo = _SERVER[\"PATH_INFO\"];\n    var reqMethod = _SERVER[\"REQUEST_METHOD\"];\n\n    for route in this->routes {\n        let methods = route->getHttpMethods();\n        let path = route->getPath();\n        if this->checkMethod(reqMethod, methods) && pathInfo === path {\n            let this->matchedRoute = route;\n            let routeFound = true;\n            //========================here======================\n    //routeFound = true; //I forget write 'let'\n            //========================here======================\n            break;\n        }\n    }\n\n    if routeFound {\n        let handler = this->matchedRoute->getHandler();\n        if is_callable(handler) {\n            return {handler}(application);\n        } else {\n            throw new \\Exception(\"Invalid callable handler\");\n        }\n    }\n    return false;\n}\n\n}\n```\nIf I write let routeFound = true; ->  routeFound = true;\nI forget let keyword.\n[root@centos Snail]# ./build.sh \nPHP Warning:  json_encode(): type is unsupported, encoded as null in /usr/local/src/zephir/Library/CompilerFile.php on line 178\nZephir\\Exception: Cannot parse file: /home/deploy/gitroot/Snail/snail/mvc/router.zep\nHow can I know that I forget write let, The Compiler tell nothing about this, Just output:\nZephir\\Exception: Cannot parse file\nIt's hard to locate where my code went wrong.\nMy code is Here:\nhttps://github.com/jockchou/Snail/blob/master/snail/mvc/router.zep\n. Yes. This is the first time I use Zephir. I written some code https://github.com/jockchou/Snail\nI found it's difficult to debug, It takes me a long time to debug.\n. var matches=null;//ok\nvar matches;//error\n. let clode = (int) code;\nIt not work.\n. ```\n public function withStatus(int code, string reasonPhrase = \"\")\n    {\n        var cloneObj;\n        let code = this->filterStatus(code);\n    if !is_string(reasonPhrase) && !method_exists(reasonPhrase, \"__toString\") {\n        throw new \\InvalidArgumentException(\"ReasonPhrase must be a string\");\n    }\n\n\n    let cloneObj = clone this;\n    let cloneObj->status = code;\n    let code =  (int)code;\n\n    if reasonPhrase === \"\" && isset self::messages[code] {\n        let reasonPhrase = self::messages[code];\n    }\n\n    if reasonPhrase === \"\" {\n        throw new \\InvalidArgumentException(\"ReasonPhrase must be supplied for this code\");\n    }\n\n    let cloneObj->reasonPhrase = reasonPhrase;\n\n    return cloneObj;\n}\n\n```\n```\n[root@centos SnailHttp]# zephir build\nZephir\\CompilerException: Cannot use variable: string to assign array index in /home/deploy/Git/SnailHttp/snailhttp/Response.zep on line 115\n            let reasonPhrase = self::messages[code];\n---------------------------------------------------^\n\n.\n    public function withStatus(int code, string reasonPhrase = \"\")\n    {\n        let reasonPhrase = self::messages[code];\n    }\n```\nI change my function simple.It Compile Exception also....\n```\nZephir\\CompilerException: Cannot use variable: string to assign array index in /home/deploy/Git/SnailHttp/snailhttp/Response.zep on line 102\n        let reasonPhrase = self::messages[code];\n-----------------------------------------------^\n\n```\nwhy????\n. Yes, It's ok\u3002\n. ```\n[root@centos SnailHttp]# zephir build\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib64/php/modules/snailhttp.so' - /usr/lib64/php/modules/snailhttp.so: undefined symbol: php_json_decode_ex in Unknown on line 0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib64/php/modules/snailhttp.so' - /usr/lib64/php/modules/snailhttp.so: undefined symbol: php_json_decode_ex in Unknown on line 0\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nExtension installed!\nAdd extension=snailhttp.so to your php.ini\nDon't forget to restart your web server\n```\nBut there is a PHP Warning when I add .so to php.ini\n. ```\n[root@centos SnailHttp]# zephir build\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib64/php/modules/snailhttp.so' - /usr/lib64/php/modules/snailhttp.so: undefined symbol: php_json_decode_ex in Unknown on line 0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib64/php/modules/snailhttp.so' - /usr/lib64/php/modules/snailhttp.so: undefined symbol: php_json_decode_ex in Unknown on line 0\n```\nso I add extension=json.so to php.ini\nthen;\n```\n[root@centos SnailHttp]# php -m\nPHP Warning:  Module 'json' already loaded in Unknown on line 0\n```\nso I remove extension=json.so int /etc/php.d/json.ini\nit's ok.\n. ",
    "vovagp": "@sergeyklay problem with exception message\n@jockchou you can change path/to/zephir/parser/parser/parser.c line\nif (parser_status->status != XX_PARSING_OK) {\nto\nif (parser_status->status != XX_PARSING_OK) {\n    ZVAL_ZVAL(return_value, &parser_status->ret, 1, 1);\nthen recompile shared library and output will be more informative\n```\nvovagp@debian:/tmp/Snail-master$ ./build.sh \nZephir\\ParseException: Syntax error in /tmp/Snail-master/snail/mvc/router.zep on line 62\n                routeFound = true;\n---------------------------^\n\n```\n. ",
    "Johngtrs": "I solved this error with : \napt-get install php5.6-xml\nBut I don't know if it's the good way.\n. ",
    "RogerWaters": "+1\n. ",
    "josh4trunks": "I had a possible idea to tackle the sudo point. Maybe we could do a check on the current UID and only  use sudo if it is not '0'?\n. Is there any reason https://github.com/phalcon/zephir/blob/master/Library/Compiler.php and https://github.com/phalcon/zephir/blob/master/parser/parser/build_linux.sh have gcc / CC=\"gcc\" instead of cc?\n. Any word on the the need for GCC?\nIt would be great to get this working by the next zephir release. That way we could add a stable version to the ports tree. See the request here https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=211144\n. I submitted the port for review and no FreeBSD ports reviewer has looked at it =\\\nI could try authoring a new bug report (since I did not start that one) maybe that would get more attention.. To note, I have not had a chance to test this. I'm just making the changes based on documentation.\nI can test this on FreeBSD soon, it would also be good if we could get this tested on Linux.\n. Ok, tested this as working on FreeBSD. Do you mind testing on linux?\n. @sergeyklay this is ready for testing. do you mind reviewing and commenting?\nThanks\n. I saw you previous comment about $(which sh) and that worked for me as well. I guess you could also just start the script with #!/usr/bin/env sh to use the environment default.\nEither way, these changes work well in my testing.\n. Anything else needed for this to be merged?\n. nice, thank you\n. I think the issue was, if $1 was empty, test ignored it and saw -a as the first argument. Your solution, or using parenthesis would fix this.\n. this works for me on FreeBSD\n. I don't think /bin/sh matters here. What matters is I changed it to [ which is the same as executing test. Here's the documentation for test on FreeBSD.\nhttps://www.freebsd.org/cgi/man.cgi?test\nI would think it work the same on any system because I see the mention of POSIX, but then I noticed this sentence...\n\"In particular, only expressions containing -a, -o, ( or ) can be ambiguous.\"\nI can check this on my arch linux system at home. I wonder if this is what I should be checking as well.\nhttps://linux.die.net/man/1/test\n. just a guess, but maybe your version of test has some of those variables empty and is essentially running test -a\nmaybe adding a ' around each variable would work for you?\nif [ '$1' -a '$2' -a '$3' -a '$1' = \"-c\" ]; then\nI haven't had a chance to check this yet though\n. ",
    "temuri416": "Thanks, @sjinks!. Having removed dbg:\n``bash\n[root@d7 corefiles]# gdb /usr/sbin/php-fpm core.php-fpm.1508775379.3348\nGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-100.el7\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /usr/sbin/php-fpm...Reading symbols from /usr/lib/debug/usr/sbin/php-fpm.debug...done.\ndone.\n[New LWP 3348]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\nCore was generated byphp-fpm: pool www                                             '.\nProgram terminated with signal 11, Segmentation fault.\n0  0x00007f87ebb31d08 in zephir_create_instance.constprop.179 () from /usr/lib64/php/modules/phalcon.so\n(gdb) bt\n0  0x00007f87ebb31d08 in zephir_create_instance.constprop.179 () from /usr/lib64/php/modules/phalcon.so\n1  0x00007f87ebc715b6 in zim_Phalcon_Di_get () from /usr/lib64/php/modules/phalcon.so\n2  0x00005557e4d46b89 in zend_call_function (fci=0x7ffeca0a5eb0, fci_cache=0x7ffeca0a5e80) at /usr/src/debug/php-7.1.10/Zend/zend_execute_API.c:869\n3  0x00007f87ebb25061 in zephir_call_user_function () from /usr/lib64/php/modules/phalcon.so\n4  0x00007f87ebb258ca in zephir_call_class_method_aparams.part.33 () from /usr/lib64/php/modules/phalcon.so\n5  0x00007f87ebd65b7f in zim_Phalcon_Mvc_Application_handle () from /usr/lib64/php/modules/phalcon.so\n6  0x00005557e4df00fc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/debug/php-7.1.10/Zend/zend_vm_execute.h:970\n7  0x00005557e4d9e24b in execute_ex (ex=) at /usr/src/debug/php-7.1.10/Zend/zend_vm_execute.h:429\n8  0x00005557e4df1f04 in zend_execute (op_array=0x7f87f7874000, op_array@entry=0x7f87f7886620, return_value=return_value@entry=0x7f87f7814030)\nat /usr/src/debug/php-7.1.10/Zend/zend_vm_execute.h:474\n\n9  0x00005557e4d568b3 in zend_execute_scripts (type=type@entry=8, retval=0x7f87f7814030, retval@entry=0x0, file_count=file_count@entry=3)\nat /usr/src/debug/php-7.1.10/Zend/zend.c:1480\n\n10 0x00005557e4cf3de8 in php_execute_script (primary_file=primary_file@entry=0x7ffeca0a89e0) at /usr/src/debug/php-7.1.10/main/main.c:2552\n11 0x00005557e4b8d474 in main (argc=, argv=) at /usr/src/debug/php-7.1.10/sapi/fpm/fpm/fpm_main.c:1966\n(gdb)\n``. What's crazy is that I've been seeing segfaults much deeper in the execution stack - insideafterDispatch` handlers.\nI've been debugging those calls dozens of times, and then suddenly I started getting segfaults that early in the execution.\n@sergeyklay Any thoughts?. Can we chat somewhere or exchange emails?. sent to your @phalconphp.com box.. ",
    "andrew-demb": "When can you accept this PR?\nThe problem to be solved by this PR, breaks our application.\n. @andresgutierrez\n. ",
    "Zaszczyk": "@andresgutierrez @steffengy is it possible to fix it? because it stops to migrate to php7 with Phalcon\n. ",
    "remicollet": "Thanks\n. BTW:\n\nLibrary/Compiler.php => const VERSION = '0.9.4a-dev';\nparser/php_zephir_parser.h => :#define PHP_ZEPHIR_PARSER_VERSION \"0.1.0\" \n. Notice: a new release will be very welcome, so we can build phalcon \"tagged\" version using \"zephir\" tagged version. Thanks. Also bad with 0.11.4: \n\nhttps://github.com/phalcon/zephir/blob/0.11.4/Library/Zephir.php#L21\nSo, tag is not correct. Notice the phar reports\nZephir 0.11.4-eb5db1a\nWhen 0.11.4 tag point to d0a6a8af0b78240a0f3e1f05d39baf73699a5570\n. ",
    "kristofferingemansson": "Should indent_style really be changed from 'space' to 'tab'?. Ok! I thought the space-indentation from the PSR-2 coding style recommendation in zephir/CONTRIBUTING.md also affected zep-files.. ",
    "zhiephie": "Okay, phpize not issue now, but new problem it\n```\nC:\\zephir\\parser\\parser>type base.c  1>>parser.c\nPreparing for parser compilation...\nCompiling the parser...\nMicrosoft (R) Program Maintenance Utility Version 14.00.24210.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\nNMAKE : fatal error U1077: '\"C:\\Program Files\\Microsoft Visual Studio 14.0\\VC\\BI\nN\\cl.exe\"' : return code '0x2'\nStop.\n    \"cl.exe\" /D COMPILE_DL_ZEPHIR_PARSER /D ZEPHIR_PARSER_EXPORTS=1 -IC:\\zep\n\nhir\\parser /nologo /I c:\\php_devpack/include /I c:\\php_devpack/include/main /I c\n:\\php_devpack/include/Zend /I c:\\php_devpack/include/TSRM /I c:\\php_devpack/incl\nude/ext /D _WINDOWS /D ZEND_WIN32=1 /D PHP_WIN32=1 /D WIN32 /D _MBCS /W3 /FD /wd\n4996 /D_USE_32BIT_TIME_T=1 /guard:cf /MP /LD /MD /W3 /Ox /D NDebug /D NDEBUG /D\nZEND_WIN32_FORCE_INLINE /GF /D ZEND_DEBUG=0 /I \"C:\\zephir\\parser\\no\\include\" /Fo\nC:\\zephir\\parser\\Release\\ /FpC:\\zephir\\parser\\Release\\ /FRC:\\zephir\\parser\\Rel\nease\\ /FdC:\\zephir\\parser\\Release\\ /c C:\\zephir\\parser\\zephir_parser.c\nzephir_parser.c\n        \"cl.exe\" /D COMPILE_DL_ZEPHIR_PARSER /D ZEPHIR_PARSER_EXPORTS=1 -IC:\\zep\nhir\\parser /nologo /I c:\\php_devpack/include /I c:\\php_devpack/include/main /I c\n:\\php_devpack/include/Zend /I c:\\php_devpack/include/TSRM /I c:\\php_devpack/incl\nude/ext /D _WINDOWS /D ZEND_WIN32=1 /D PHP_WIN32=1 /D WIN32 /D _MBCS /W3 /FD /wd\n4996 /D_USE_32BIT_TIME_T=1 /guard:cf /MP /LD /MD /W3 /Ox /D NDebug /D NDEBUG /D\nZEND_WIN32_FORCE_INLINE /GF /D ZEND_DEBUG=0 /I \"C:\\zephir\\parser\\no\\include\" /Fo\nC:\\zephir\\parser\\Release\\ /FpC:\\zephir\\parser\\Release\\ /FRC:\\zephir\\parser\\Rel\nease\\ /FdC:\\zephir\\parser\\Release\\ /c C:\\zephir\\parser\\parser\\parser.c C:\\zeph\nir\\parser\\parser\\scanner.c\nparser.c\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(13): warning C4013: 'MAKE_STD_ZVAL' un\ndefined; assuming extern returning int\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(21): warning C4002: too many actual pa\nrameters for macro 'ZVAL_STRING'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(22): warning C4002: too many actual pa\nrameters for macro 'zend_hash_add'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(22): warning C4090: 'function': differ\nent 'const' qualifiers\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(22): warning C4047: 'function': 'zval\n' differs in levels of indirection from 'std::size_t'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(22): warning C4024: '_zend_hash_add':\ndifferent types for formal and actual parameter 3\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(28): warning C4002: too many actual pa\nrameters for macro 'ZVAL_STRING'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(29): warning C4002: too many actual pa\nrameters for macro 'zend_hash_add'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(29): warning C4090: 'function': differ\nent 'const' qualifiers\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(29): warning C4047: 'function': 'zval\n' differs in levels of indirection from 'std::size_t'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(29): warning C4024: '_zend_hash_add':\ndifferent types for formal and actual parameter 3\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(37): warning C4002: too many actual pa\nrameters for macro 'zend_hash_add'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(37): warning C4090: 'function': differ\nent 'const' qualifiers\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(37): warning C4047: 'function': 'zval\n' differs in levels of indirection from 'std::size_t'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(37): warning C4024: '_zend_hash_add':\ndifferent types for formal and actual parameter 3\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(41): warning C4002: too many actual pa\nrameters for macro 'zend_hash_add'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(41): warning C4090: 'function': differ\nent 'const' qualifiers\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(41): warning C4047: 'function': 'zval\n' differs in levels of indirection from 'std::size_t'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(41): warning C4024: '_zend_hash_add':\ndifferent types for formal and actual parameter 3\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(50): warning C4013: 'ALLOC_INIT_ZVAL'\nundefined; assuming extern returning int\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(51): warning C4002: too many actual pa\nrameters for macro 'ZVAL_STRING'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(587): warning C4047: 'function': 'Hash\nPosition ' differs in levels of indirection from 'void '\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(587): warning C4024: 'zend_hash_get_cu\nrrent_data_ex': different types for formal and actual parameter 2\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(587): warning C4020: 'zend_hash_get_cu\nrrent_data_ex': too many actual parameters\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(587): warning C4047: '==': 'zval ' di\nffers in levels of indirection from 'int'\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(588): warning C4013: 'Z_ADDREF_PP' und\nefined; assuming extern returning int\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(592): warning C4047: 'function': 'zval\n ' differs in levels of indirection from 'zval '\nc:\\zephir\\parser\\parser\\parser.php5.inc.h(592): warning C4024: '_zval_ptr_dtor':\n different types for formal and actual parameter 1\nparser.php5.lemon(93): error C2440: '=': cannot convert from 'zval ' to 'zval'\nparser.php5.lemon(80): error C2440: '=': cannot convert from 'zval *' to 'zval'\nscanner.c\nscanner.re(30): warning C4101: 'next': unreferenced local variable\nGenerating Code...\nPHP Warning:  copy(Release/php_zephir_parser.dll): failed to open stream: No suc\nh file or directory in C:\\zephir\\Library\\Compiler.php on line 256\nWarning: copy(Release/php_zephir_parser.dll): failed to open stream: No such fil\ne or directory in C:\\zephir\\Library\\Compiler.php on line 256\nZephir\\Exception: The zephir parser extension could not be found or compiled!\n```\n@sergeyklay Did you know this problem?\n. Not, I'm use PHP 7, but zephir detected PHP 5\n```\nc:\\compiler\\utils>php -v\nPHP 7.0.13 (cli) (built: Nov  8 2016 13:45:26) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\nc:\\compiler\\utils>\n`. Many Thanks @sergeyklay, Work it!. Configure in DIRzephir\\parser\\parser\\build_win32.bat``\nedit \nlemon -s parser.php7.lemon\ntype parser.php7.c > parser.c. Thanks for replay @sergeyklay, but error message : Operator 'concat-assign' is not supported for variable type: unchar let randomString .= characters[(int) idx];. Ahay, Thanks @sergeyklay, work, I change type randomString to string.. Work it, thanks @dreamsxin, can i close this issue?. Closed https://github.com/phalcon/zephir/pull/1454. ",
    "mbrostami": "Hmmm, I figured out that .htaccess causes this, not zephir :(. ",
    "tanboname": "zephir:\n```zep\nnamespace Xy;\nclass Sdk\n{\n    public static function func()\n    {\n    }\npublic static function func1()\n{\n    self::func();\n}\n\n}\n```\nphp:\nphp\nXy\\Sdk::func(); // ok\nXy\\Sdk::func1(); // error. ",
    "rochael": "I have the same problem, \nMacOS 10.12\nphp 7.1\nlastest zephir\n```zep\nnamespace Utils;\nclass Test{\n    public static function func1 () -> void\n    {\n}\n\n\npublic static function fun () -> void\n{\n    self::func1();\n}\n\n}\n```\nUtils\\Test::fun();\nPHP Fatal error:  Uncaught RuntimeException: Call to undefined method self::func1(), did you mean 'undefined'? in /Volumes/Transcend/Dev/php-ext-project/utils/test.php:. ",
    "Veon": "let... i forgot let. ",
    "anthony-hz": "is php 7.0.5 and ubuntu 14.04.5  X64. ",
    "yingshancool": "thank you!. ",
    "CrazyWorkers": "I was configured in accordance with the configuration of the  zephir in windows, when I use VS 2015 to develop a dynamic link library php 5.5.38, the problem arises. Is it necessary to use VS 2012 to develop php 5.5.38 dynamic link library?. ",
    "rafmichalak84": "I created a patch for Zephir after which phalcon is compile and run for php7.1.1\nplease for feedback. There is one test with PHP warning\nArithmeticTest.php\nline:264 $this->assertSame($this->class->letStatementVarMinus(\"\"), -\"\");\nleft side and right side is OK, return int(0)\nbut PHP warning create error in test\nwhen error_reporting set to 0, all PASS\n. Yes all zephir unit tests is 100% OK\nTomorrow I check phalcon tests. Status\nthere is one in my opinion important bug when static method in class one call another static method in class two then throw Exception call to undefined method\nNow I look in gdb for scope calls\nrest is fine\n\nHowever, multiple static calls inside the class\n```\nclass class2 {\n        public static function _call3() -> string {\n                return \"1234-5678\";\n        }\n    public static function _call2() -> string {\n            return self::_call3();\n    }\n\n    public static function call1() -> string {\n            return self::_call2();\n    }\n\n}\n\n<?php\nvar_dump(\\Comtest\\Class2::call1());\n\nPHP Fatal error:  Uncaught RuntimeException: Call to undefined method self::_call3(), did you mean 'undefined'? in /home/raf/comtest/test.php:3\nStack trace:\n0 [internal function]: Comtest\\class2::_call2()\n1 /home/raf/comtest/test.php(3): Comtest\\class2::call1()\n2 {main}\nthrown in /home/raf/comtest/test.php on line 3\n```. The current result\nIn some cases (i think when set scope) is don't access in object to private method (sometimes not always)\nWhen I find it in gdb i check scope setting.\nError 1,2,4 is the same\nThere were 4 errors:\n1) DispatcherMvcEventsTest::testEvents\nError: Cannot access protected property PHPUnit_Framework_Constraint_IsEqual::$exporter\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/DispatcherMvcEventsTest.php:74\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/DispatcherMvcEventsTest.php:205\n2) DispatcherMvcEventsTest::testBeforeExceptionEvent\nError: Cannot access protected property PHPUnit_Framework_Constraint_IsEqual::$exporter\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/DispatcherMvcEventsTest.php:74\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/DispatcherMvcEventsTest.php:295\n3) ModelsCalculationsTest::testCalculationsMysql\nError: Cannot instantiate abstract class Phalcon\\Mvc\\Model\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ModelsCalculationsTest.php:131\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ModelsCalculationsTest.php:77\n4) ViewEnginesVoltTest::testVoltEngineBuiltInFunctions\nError: Cannot access private property SomeObject::$_data\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ViewEnginesVoltTest.php:44\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/views/test11/index.volt.php:2\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ViewEnginesVoltTest.php:195\nERRORS!\nTests: 132, Assertions: 7726, Errors: 4, Skipped: 11.\n. Yes of course I merge to one\nCurrently I looking for line where zephir include php from outside and lossing (scope to object) property access visibility.\nCannot access to private or propetected property. This is very imortant because programmers usually use this access modifires. I want to spend all weekend and i think find it ;-). OK I see\nin some place is losing call(ing/ed) scope and reference only / (empty class and namespace)\n\nOK thanks @dreamsxin but I have the same error, please check on your version maybe we have different code modification\n```\nnamespace Comtest;\nclass class3 {\n        public static function call2() {\n                var className, fullClassName;\n                let className = get_called_class();\n                let fullClassName = \"\\\" . className;\n                return new {fullClassName}();\n        }\n    public static function call1() {\n            var o;\n            let o = \\Comtest\\Class3::call2();\n            return o;\n    }\n\n}\nand test\nvar_dump(\\Comtest\\Class3::call2());\nvar_dump(\\Comtest\\Class3::call1());\nI have\nobject(Comtest\\class3)#1 (0) {\n}\nPHP Fatal error:  Class '\\' not found in /home/rafal/NetBeansProjects/x/comtest/test.php on line 10\nFatal error: Class '\\' not found in /home/rafal/NetBeansProjects/x/comtest/test.php on line 10\n```\nIn the place when I add your code\nfcic.called_scope =  obj_ce ?  obj_ce : Z_OBJCE(EG(current_execute_data)->This);\nI checked by gdb and my obj_ce and Z_OBJCE return empty object . @dreamsxin thanks a lot\nwhen I use your version I have\nin zephir unit-test 100% pass\nin phalcon unit-test segmentation fault\nsomething goes wrong\nbut after comment line\nfcic.called_scope = obj_ce ? obj_ce : Z_OBJCE(EG(current_execute_data)->This);\nI have a lot Phalcon\\Mvc\\Model\\Exception: Model 'Phalcon\\Mvc\\Model' could not be loaded. @dreamsxin \nI find one solution to \"Class '\\' not found\"\n```diff\nextended/fcall.c ~line1200\n+       if(fci_cache->object) {\n+             Z_OBJ(call->This) = fci_cache->object;\n+       }\n    if (UNEXPECTED(func->op_array.fn_flags & ZEND_ACC_CLOSURE)) {\n        ZEND_ASSERT(GC_TYPE((zend_object)func->op_array.prototype) == IS_OBJECT);\n        GC_REFCOUNT((zend_object)func->op_array.prototype)++;\n        ZEND_ADD_CALL_FLAG(call, ZEND_CALL_CLOSURE);\n    }\nif (func->type == ZEND_USER_FUNCTION) {\n\n```\nAt this moment I have all pass zephir unit-tests and most phalcon\n```\nF.FF.SS....SSSSS....S......................................EEE.  63 / 129 ( 48%)\n.....WF.F.....EEF.EEEEF.F...F.FF...F.F...F.......E.....SSS..... 126 / 129 ( 97%)\n...                                                             129 / 129 (100%)\ntop errors\n1) ModelsCriteriaTest::testModelsMysql\nPhalcon\\Mvc\\Model\\Exception: At least one model is required to build the query\n6) ModelsRelationsTest::testModelsMysql\nBadMethodCallException: Wrong number of parameters\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ModelsRelationsTest.php:146\n/home/rafal/NetBeansProjects/cphalcon/unit-tests/ModelsRelationsTest.php:75\n```\n. @Jurigag Zephir all tests are green, there is one leak: example in test of the foreign keys in phalcon\nand in function zephir_get_called_class\ncalled_scope->name has \"Cannot access memory at address\" like a not assigned reference\ncall_stack\nPhalcon_Mvc_Model__groupResult\nPhalcon_Mvc_Model_count\nPhalcon_Mvc_Model__checkForeignKeysRestrict\nPhalcon_Mvc_Model__preSave\nPhalcon_Mvc_Model_save\nexample in file\na.php.txt\n. @Jurigag \nI enabled old code for 7.0 and new for 7.1 by #if and all zephir tests now are OK\n. Give me your coredump ;-) it's very helpfull to fix it. Now I must for 3-5 days forget this fix\nToday I found some interesting moments which I think are the key\nwhen I change fci_cache->object to fci->object in extended/fcall.c line\ncall = zend_vm_stack_push_call_frame(ZEND_CALL_TOP_FUNCTION, func, fci->param_count, fci_cache->called_scope, fci_cache->object);\nsome tests are changed from Error to OK and from OK to Error\nMy favorite tests to check are ModelsForeignKeysTest and FormsTest\nSegmentationFault are on get_called_class is because when get EG(current_execute_data)->This have problem with scope name (zend_string*) to not assigned in memory\nThis error is not always\nexample i get this when Phalcon\\Di->set\nWhere should pay attention\n->This and EG(current_execute_data). Hi, I checked 10minutes ago and with latest version everything works great.\nPHP 7.1.3 (cli) (built: Mar 31 2017 22:05:21) ( ZTS DEBUG )\nZephir 0.9.6a-dev-3ea0e94d8e\nPlease checked again and I will be waiting for feedback.\nmy test case\n```\n<?php\nvar_dump(new \\Utils\\Test());\nvar_dump(\\Utils\\Test::A);\nvar_dump(\\Utils\\Test::B);\n```. OK you right. Yes you right. ",
    "therosco": "Any progress?. ",
    "xqkeji": "very sorry, I find that it is my function error. . very sorry, I find that it is my function error. \n. zephir_read_static_property_ce(&di, xqkeji_di_ce, SL(\"_default\"), PH_NOISY_CC);\nDoes php7 do not need TSRMLS_CC. As long as the load is high, will appear \"Access to undeclared static property\"\u3002\n. @sergeyklay \nI  test it, the error still exists.. @sergeyklay \nMy test code was wrong, sorry, the problem is there.. I found the 'https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/view.zep' the number ocde 1060 that the same can not identify the php array.\nI must add code\nzep\npublic function partial(string! partialPath, var params = null)\n{\n                if !empty params\n        {\n            let params=json_decode(json_encode(params),1);\n        }\nphp7.0.15 nts\nzephir 0.10.6\nwin 10. @sergeyklay \nthe zephir forum can't login.\nthe Phalcon forum cat't start a new dicussion.\nWhen you are convenient, conifrm it.. ",
    "tobeorla": "https://github.com/phalcon/zephir-website/issues/9. ",
    "chenyanginchina": "yes,two different extensions. ",
    "pakey": "the log file is empty. ",
    "wolftankk": "json\n{\n        \"http_address\" : {\n            \"type\" : \"string\",\n            \"default\" : \"127.0.0.1\"\n        },\n        \"http_token\" : {\n            \"type\" : \"string\",\n            \"default\" : \"\"\n        },\n        \"http_auth\" : {\n            \"type\" : \"string\",\n            \"default\" : \"\"\n        },\n        \"use_ssl\" : {\n            \"type\" : \"bool\",\n            \"default\" : false,\n            \"ini-entry\" : {\n                \"type\" : \"bool\",\n                \"name\" : \"use_ssl\"\n            }\n        },\n        \"enable_ssl_verify\" : {\n            \"type\" : \"bool\",\n            \"default\" : true,\n            \"ini-entry\" : {\n                \"type\" : \"bool\",\n                \"name\" : \"enable_ssl_verify\"\n            }\n        }\n}. ",
    "aiddroid": "In Zephir, extension globals are restricted to simple scalar types like int/bool/double/char, etc. Complex types such as string/arrays/objects/resources aren\u2019t allowed here.\nsee the doc https://docs.zephir-lang.com/en/latest/globals.html. ",
    "jianzhiyao": ": )\nZephir is very good!. ",
    "hakimio": "@sjinks It's rather important that you take a look at this bug as soon as possible, because it prevents usage of thread-safe extension on any platform, not only windows. So, it's no longer possible to use phalcon with pthreads and similar stuff which actually requires thread safety.. @mattratcliffe86 Use nginx + php-fpm instead of Apache. There are some issues with thread safety of the extension.\nhttps://www.progressivethink.in/on/administration/and/setup-nginx-and-php-on-windows/\nhttps://docs.phalconphp.com/en/latest/webserver-setup#nginx. @mattratcliffe86 It's effecting both windows and linux thread-safe extensions.. @Pilsenerek \nIts's an old well-known issue. See the following: https://github.com/phalcon/cphalcon/issues/12056\n. @sergeyklay It's rather easy to reproduce the issue. You just need to run phalcon Thread-Safe extension with Apache on Windows (some people reported the issue on Linux as well but I've never tried running Phalcon TS on Linux personally) and then just make a large number of parallel requests (shouldn't need more than a 100) to a single end-point which does some simulated work (\"usleep(100000)\" should work just fine).. Maybe then create a simple Zephir extension, compile it with TS and use pthreads to check if it is actually thread safe?. @afbora Well, nobody said the bug was fixed, did they?. @dreamsxin you should be able to reproduce the issue with TS php-cli as well.. @dreamsxin Have you tried to run Phalcon CLI TS with pthreads / multiple threads?. @CameronHall it has to be multi-threaded app, because the issue is with thread-safety.. @Jurigag Can you link here the bug which you opened upstream?. ",
    "afbora": "I got this error on Phalcon 3.2.0 today.\nIts gone when i refresh the page \ud83d\ude15 . I have still the issue on Phalcon version 3.4.1 \ud83d\udc1b . @hakimio I know it's not fixed. I just wrote it to keep it up to date \ud83d\udc4d . ",
    "mattratcliffe86": "Hey guys, what was the outcome to this bug?\nI'm encountering the same issue on Windows and Apache 2.4 running PHP 7.1.1 and Phalcon 3.2.4. @hakimio Thanks for that.\nSo this is specifically affecting the thread safe extension for Apache, just on Windows or is it Linux too?. @sergeyklay \nQuick and dirty way to reproduce the error...\nptest.zip\nI've created a controller 'reload' which just reloads the page a given number of times and increments the value in the url segment by 1 each time. I'm redirecting, which is what I did when I first encountered the problem. Same thing occurs when you use $response->redirect() (\\Phalcon\\Http\\Response) or the native header() function in PHP.\nPHP Fatal error:  Uncaught Error: Access to undeclared static property Phalcon\\Di::$_default in index.php on line 10\nLine 10 happens to be $di = new FactoryDefault();. ",
    "Pilsenerek": "I have the same problem:\nPhalcon 3.3.1\nSystem Win7\nPHP:\n- version 7.2\n- tread safe enabled\n- architecture x86\n- compiler MSVC15\nIt occurs especially when there are many requests in the same time or fast one by one in row.. ",
    "stijn1989": "I still have this error (Phalcon 3.3.2 with PHP7.2) when the app performs two ajax requests at the same time. If I perform the first ajax call and 500ms later I call the second ajax, it works.. ",
    "ismail0234": "Is there a valid solution?. ",
    "CameronHall": "@dreamsxin I managed to produce a dump. That's a pretty version produced by DebugDiag Analysis 2  that you'll need to open with a browser. \nIf you need the .dmp let me know on Discord.. No worries. If you're okay with the HTML files from DebugDiag, I can generate them for the other dumps I send to you via email.. I sent @dreamsxin the dumps. I also sent him this stack trace.\nKERNELBASE!wil::details::DebugBreak+2     \nphp7ts_debug!zend_output_debug_string+a1 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1445]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1445\nphp7ts_debug!php_error_cb+1027 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\main\\main.c @ 1218]     c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\main\\main.c @ 1218\nphp7ts_debug!soap_error_handler+21c [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\ext\\soap\\soap.c @ 2129 + 3c]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\ext\\soap\\soap.c @ 2129 + 3c\nphp7ts_debug!zend_error_va_list+57c [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1221 + 32]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1221 + 32\nphp7ts_debug!zend_error_noreturn+48 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1343]    c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1343\nphp7ts_debug!zend_timeout+bd [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 1162]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 1162\nphp7ts_debug!zend_interrupt_helper_SPEC+97 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 2076 + 7]      c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 2076 + 7\nphp7ts_debug!ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER+2b4 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 596 + 5c]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 596 + 5c\nphp7ts_debug!execute_ex+8d [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 59739 + f]     c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 59739 + f\nphp7ts_debug!zend_call_function+f1c [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 821]     c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 821\nphp7ts_debug!zephir_call_user_func_array_noex+160 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8576]   c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8576\nphp7ts_debug!zephir_call_user_func_array+45 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 2856 + 14]    c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 2856 + 14\nphp7ts_debug!zim_Phalcon_Dispatcher_callActionMethod+570 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 18413 + 17]      c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 18413 + 17\nphp7ts_debug!zend_call_function+108b [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 835]    c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 835\nphp7ts_debug!zephir_call_user_function+6b2 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8380 + 12]     c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8380 + 12\nphp7ts_debug!zephir_call_class_method_aparams+159 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8516 + 5f]      c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8516 + 5f\nphp7ts_debug!zim_Phalcon_Dispatcher_dispatch+6f66 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 18083 + 14a]    c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 18083 + 14a\nphp7ts_debug!zend_call_function+108b [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 835]    c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_execute_api.c @ 835\nphp7ts_debug!zephir_call_user_function+6b2 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8380 + 12]     c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8380 + 12\nphp7ts_debug!zephir_call_class_method_aparams+159 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8516 + 5f]      c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 8516 + 5f\nphp7ts_debug!zim_Phalcon_Mvc_Application_handle+4f17 [c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 84599 + 113]     c:\\php-sdk\\phpmaster\\vc15\\x64\\pecl\\phalcon\\phalcon.zep.c @ 84599 + 113\nphp7ts_debug!ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER+3e3 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 1033]     c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 1033\nphp7ts_debug!execute_ex+8d [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 59739 + f]     c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 59739 + f\nphp7ts_debug!zend_execute+1eb [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 63777]      c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend_vm_execute.h @ 63777\nphp7ts_debug!zend_execute_scripts+10f [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1497]      c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\zend\\zend.c @ 1497\nphp7ts_debug!php_execute_script+7d5 [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\main\\main.c @ 2590 + 2e]   c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\main\\main.c @ 2590 + 2e\nphp7apache2_4!php_handler+83c [c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\sapi\\apache2handler\\sapi_apache2.c @ 702]    c:\\php-sdk\\phpmaster\\vc15\\x64\\php-src\\sapi\\apache2handler\\sapi_apache2.c @ 702\nlibhttpd!ap_run_handler+35    \nlibhttpd!ap_invoke_handler+10f    \nlibhttpd!ap_internal_redirect+36      \nmod_rewrite+545d      \nlibhttpd!ap_run_handler+35    \nlibhttpd!ap_invoke_handler+10f    \nlibhttpd!ap_internal_redirect_handler+29a     \nlibhttpd!ap_process_request+f     \nlibhttpd!ap_byterange_filter+1581     \nlibhttpd!ap_run_process_connection+35     \nlibhttpd!ap_process_connection+45     \nlibhttpd!ap_run_generate_log_id+3da0      \nkernel32!BaseThreadInitThunk+14   \nntdll!RtlUserThreadStart+21. @hakimio I've just tested this myself on PHP 7.3 CLI TS on Apline Linux and can confirm (not with pthreads) that the issue is not reproducible. If you're interested in how I tested let me know and I'll create a repo.\nRight now, I'm creating a Windows 10 VM on Azure for @dreamsxin to play with.. That would make sense. Apache would typically do that for us... does\nsomeone have a sample multi-threaded app?\nOn Wed, 20 Mar 2019 at 12:29 am, Tomas Rimkus notifications@github.com\nwrote:\n\n@CameronHall https://github.com/CameronHall it has to be multi-threaded\napp, because the issue is with thread-safety.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/phalcon/zephir/issues/1530#issuecomment-474368796,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG-ifdzc-HPvHBrecE0EwYOBIsn88vBpks5vYOYggaJpZM4NNno6\n.\n. I'll provide you with a copy the next time I hit the error.. Here you go.\n```\n/app $ zephir fullclean\n\nIn Local.php line 404:\n[ErrorException]\n  rmdir(/app/.zephir/a5d572c9446be2a0/cache/IR): Directory not empty\nException trace:\n () at phar:///opt/gonano/bin/zephir/vendor/league/flysystem/src/Adapter/Local.php:404\n Zephir{closure}() at n/a:n/a\n rmdir() at phar:///opt/gonano/bin/zephir/vendor/league/flysystem/src/Adapter/Local.php:404\n League\\Flysystem\\Adapter\\Local->deleteDir() at phar:///opt/gonano/bin/zephir/vendor/league/flysystem/src/Filesystem.php:251\n League\\Flysystem\\Filesystem->deleteDir() at phar:///opt/gonano/bin/zephir/Library/FileSystem/HardDisk.php:249\n Zephir\\FileSystem\\HardDisk->clean() at phar:///opt/gonano/bin/zephir/Library/Console/Command/FullCleanCommand.php:45\n Zephir\\Console\\Command\\FullCleanCommand->execute() at phar:///opt/gonano/bin/zephir/vendor/symfony/console/Command/Command.php:255\n Symfony\\Component\\Console\\Command\\Command->run() at phar:///opt/gonano/bin/zephir/vendor/symfony/console/Application.php:953\n Symfony\\Component\\Console\\Application->doRunCommand() at phar:///opt/gonano/bin/zephir/vendor/symfony/console/Application.php:248\n Symfony\\Component\\Console\\Application->doRun() at phar:///opt/gonano/bin/zephir/Library/Console/Application.php:92\n Zephir\\Console\\Application->doRun() at phar:///opt/gonano/bin/zephir/vendor/symfony/console/Application.php:148\n Symfony\\Component\\Console\\Application->run() at phar:///opt/gonano/bin/zephir/zephir:21\n require() at /opt/gonano/bin/zephir:17\nfullclean\n```\na5d572c9446be2a0.zip\n. Looks like https://github.com/phalcon/zephir/issues/1400 is related.. @danhunsaker that would be 3.4.3 if I'm not mistaken.. ",
    "sarwarcse": "@sergeyklay , Thanks for your comment. Zephir Version is : 0.9.7-edf9433136.\nI really stack now, the same generated .so file worked in another same configuration sever. I have generated this server and worked in another server not this server, I don't know why.\n. ",
    "Clinton100": "So there is actually no way to solve the problem??. ",
    "sandeep048": "can I link php_soap.so library while compiling this zephir extension? . ",
    "shootzy": "@sergeyklay \n```\nPHP 7.1.7 (cli) (built: Jul  7 2017 17:21:59) ( NTS )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies\nZephir version 0.9.10-d6f3deed23\nLinux desktop 4.9.37-1-MANJARO #1 SMP PREEMPT Thu Jul 13 06:40:16 UTC 2017 x86_64 GNU/Linux\nManjaro Lunix\nphp 5 machine\nPHP 5.6.30-0+deb8u1 (cli) (built: Feb  8 2017 08:50:21) \nCopyright (c) 1997-2016 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies\nZephir version 0.9.10-d6f3deed23\nLinux 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2 (2017-04-30) x86_64 GNU/Linux\nDebian 8.8\n```\n. ",
    "marcelto": "I have this same issue running PHP 7.2.7 nts, Windows 10 x64, zephir 0.10.10, Visual Studio 2017.. Got past this with the following https://www.winhelponline.com/blog/error-there-is-no-script-engine-for-file-extension-when-running-js-files/.  Ran into bison is required error only becuase I forgot to run %PHP_SDK%\\bin\\phpsdk_setvars.  Afterwards the dll generated. . @mixinix check for Windows settings and ensure .js files are set to open with the Microsoft Windows Based Script Host.  I did this prior to running the registry fix.  Also, since this is Windows we're talking about, rebooting after your changes may not be a bad idea.. ",
    "mixinix": "I have this same problem. @marcelto 's solution doesn't work for me. Makefile still not found. I hope this error is last.. ",
    "maybeTomorrow": "\norder.zep.obj : error LNK2001: unresolved external symbol  zephir_less_double\nin order.zep.c\n\nc\nif (ZEPHIR_LT_DOUBLE(&_8$$4, total_amount$$4)) {\n            .....\n}. and this in operators.h\n```c\ndefine ZEPHIR_LT_DOUBLE(op1, op2)  ((Z_TYPE_P(op1) == IS_DOUBLE && Z_DVAL_P(op1) < op2) || zephir_less_double(op1, op2))\ndefine ZEPHIR_GT(op1, op2)       zephir_greater(op1, op2)\ndefine ZEPHIR_GT_LONG(op1, op2)  ((Z_TYPE_P(op1) == IS_LONG && Z_LVAL_P(op1) > op2) || zephir_greater_long(op1, op2))\ndefine ZEPHIR_GT_DOUBLE(op1, op2)  ((Z_TYPE_P(op1) == IS_DOUBLE && Z_DVAL_P(op1) > op2) || zephir_greater_double(op1, op2))\n``.zephir_less_doubleis undefined inoperators.c. alsozephir_greater_double`. this is the problem. maybe i complier too many files ,about 200+ . but the so file only 8mb in unix \nstep1 :zephir generate utils\nstep2:copy ext to  php source file/ext/utils\nstep3:configure --disable-all --enable-cli --enable-utils --disable-zts &&nmake\n. ",
    "Tinywan": "@sergeyklay now Ok ,but cphalcon not build\n+  PHP Version \uff1a 7.1.8\n+ https://github.com/phalcon/cphalcon/issues/12476. Installl \nbash\nsudo apt-get install php7.0-dev gcc make re2c autoconf. @sjinks \n+  XML Parser extension  has install\nlibXML support | active\n-- | --\nlibXML Compiled Version | 2.9.1\nlibXML Loaded Version | 20901\nlibXML streams | enabled\n+  php cli\n```\nwww@ubuntu1:~/phalcon-zephir/cphalcon$ php -v\nPHP 7.0.22-2+ubuntu14.04.1+deb.sury.org+4 (cli) (built: Aug  4 2017 14:36:28) ( NTS )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.0.22-2+ubuntu14.04.1+deb.sury.org+4, Copyright (c) 1999-2017, by Zend Technologies\nwww@ubuntu1:~/phalcon-zephir/cphalcon$ php -m\n[PHP Modules]\ncalendar\nCore\nctype\ndate\nexif\nfileinfo\nfilter\nftp\ngettext\nhash\niconv\njson\nlibxml\nopenssl\npcntl\npcre\nPDO\nPhar\nposix\nreadline\nReflection\nsession\nshmop\nsockets\nSPL\nstandard\nsysvmsg\nsysvsem\nsysvshm\ntokenizer\nZend OPcache\nzlib\n[Zend Modules]\nZend OPcache\n. @sjinks @sergeyklay  Thanks, it is OK! \n+  `sudo apt-get install php7.0-xml`\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nExtension installed!\nAdd extension=phalcon.so to your php.ini\nDon't forget to restart your web server\n``\n. @Jurigag Thanks , It is OK!.sudo ln -s /opt/php-7.0.9/bin/php /usr/bin/php`. ",
    "malios": "I get similar compiler error for div-assign.\nCode:\nzep\n    public function div(int num)\n    {\n        var a;\n        let a = 42;\n        let a /= num;\n        return a;\n    }\nThe code compiles if I replace variable num with a constant number.\nzep\n        var a;\n        let a = 42;\n        let a /= 7;\n        return a;. ",
    "ninjapanzer": "I believe @erickmajor is asking for a trans-pilation or conversion option. PHP -> Zephir\nSo that an existing PHP lib can be parsed and converted to Zephir automatically. I know I would personally like this functionality.. ",
    "erickmajor": "Hello @sergeyklay and @ninjapanzer,\nI apologize for the delay.\nThat's exactly what the @ninjapanzer said: I would like to get a code written in PHP and convert it to Zephir. In my case, I would like to convert a class with the namespaces feature, since it is mandatory for Zephir functionality.. Thanks for the reply @Jurigag.\nNot how to incorporate the @fezfez solution into zephir-cli?. ",
    "rodriguescr": "Hi,\nest-gnote extension # apt version autotools-dev\n20150820.1\nest-gnote extension # apt version automake\n1:1.15-4ubuntu1\n. Hi,\nThere's the output of the linux machine:\nest-gnote gabriel # apt install gcc make autoconf automake pkg-config\nLendo listas de pacotes... Pronto\nConstruindo \u00e1rvore de depend\u00eancias     \nLendo informa\u00e7\u00e3o de estado... Pronto\nautoconf is already the newest version (2.69-9).\nautomake is already the newest version (1:1.15-4ubuntu1).\ngcc is already the newest version (4:5.3.1-1ubuntu1).\nmake is already the newest version (4.1-6).\npkg-config is already the newest version (0.29.1-0ubuntu1).\n0 pacotes atualizados, 0 pacotes novos instalados, 0 a serem removidos e 0 n\u00e3o atualizados.\nAll of the dependencies are met and the packages updated.\n. PHP 7.0.22-0ubuntu0.16.04.1 (cli) ( NTS )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.0.22-0ubuntu0.16.04.1, Copyright (c) 1999-2017, by Zend Technologies. I'm using this directly in my Linux Desktop, if you want to, i can make a Skype or Teamviewer session with you to check.\nSkype: gabriel_rodrigues1\nEmail: gabriel@modulotrestecnologia.com.br\nThx in advance.\n. ",
    "JABirchall": "Sorry, didnt know, you CONTRIBUTING.md says to target it to master.. ",
    "wisegoodvin": "Really? I've got parser exception Zephir\\Parser\\ParseException: Syntax error in D:\\php\\zephir\\myext\\app.zep on line 4 when i try to compile this:\nzephir\nnamespace Foo;\nclass App {\n    public static function test(var val) {\n        let GLOBALS[\"key\"] = val;\n    }\n}\nI think this is another error.\nMy system:\nOS: Windows 7 x64\nPHP: 7.1.6 x64\nZephir: 0.9.11 (git cloned 2017-09-21 from development branch)\nZephir parser: 1.0.3\nVS: 2015 (cl.exe version 19.00.23918, link.exe version 14.00.23918.0). The same error - parser. Ok, I probably did not wrote correctly:\nWhat about access to Zend global symtable? Where PHP store their \"global\" variables.\nExample:\nindex.php (main web server page)\nphp\n<?php\n$foo = \"bar\";\nMyExt::vartest(); // in that method i need to change $foo variable\n// and create new var, called $test with some val\necho $foo . $test; // and access to it\n?>\nBut now in zephir i can't do this.\nLater I will try to publish a snippet of the php extension code that it does.\n\u0415\u0441\u043b\u0438 \u043e\u043f\u044f\u0442\u044c \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u0432\u044b\u0440\u0430\u0437\u0438\u043b\u0441\u044f - \u043c\u043e\u0433\u0443 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c.. ",
    "codecov[bot]": "Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (master@312fa08). Click here to learn what that means.\nThe diff coverage is 12%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1586   +/-\n========================================\n  Coverage          ?   0.87%         \n========================================\n  Files             ?     326         \n  Lines             ?   27644         \n  Branches          ?       0         \n========================================\n  Hits              ?     241         \n  Misses            ?   27403         \n  Partials          ?       0\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Library/Operators/Other/ConcatOperator.php | 0% <\u00f8> (\u00f8) | |\n| Library/Variable.php | 0% <0%> (\u00f8) | |\n| Library/Expression.php | 0% <0%> (\u00f8) | |\n| Library/Operators/Other/TypeHintOperator.php | 0% <0%> (\u00f8) | |\n| Library/Bootstrap.php | 0% <0%> (\u00f8) | |\n| Library/Statements/DeclareStatement.php | 0% <0%> (\u00f8) | |\n| Library/Backends/ZendEngine3/Backend.php | 0% <0%> (\u00f8) | |\n| Library/SymbolTable.php | 0% <0%> (\u00f8) | |\n| Library/Utils.php | 11.88% <46.15%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 312fa08...4fc11db. Read the comment docs.\n. # Codecov Report\nMerging #1587 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1587      +/-\n=========================================\n- Coverage    0.87%   0.87%   -0.01%   \n=========================================\n  Files         326     326            \n  Lines       27644   27654      +10   \n=========================================\n  Hits          241     241            \n- Misses      27403   27413      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ression/Builder/Statements/CallMethodStatement.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ibrary/Optimizers/FunctionCall/IntvalOptimizer.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Operators/Other/IssetOperator.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Backends/ZendEngine3/StringsManager.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Builder/LiteralBuilder.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Operators/Other/NewInstanceOperator.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Compiler/CompilerException.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Optimizers/FunctionCall/RoundOptimizer.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ptimizers/FunctionCall/GetCalledClassOptimizer.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Operators/Unary/MinusOperator.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 306 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 88196f3...6bb2732. Read the comment docs.\n. # Codecov Report\nMerging #1589 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster   #1589   +/-\n======================================\n  Coverage    0.87%   0.87%         \n======================================\n  Files         326     326         \n  Lines       27654   27654         \n======================================\n  Hits          241     241         \n  Misses      27413   27413\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Library/Compiler.php | 1.78% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7f47512...6dbeede. Read the comment docs.\n. # Codecov Report\nMerging #1600 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1600      +/-\n=========================================\n+ Coverage    0.87%   0.87%   +<.01%   \n=========================================\n  Files         326     326            \n  Lines       27654   27651       -3   \n=========================================\n  Hits          241     241            \n+ Misses      27413   27410       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Library/Operators/BaseOperator.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Expression/StaticPropertyAccess.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/BranchManager.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Optimizers/MathOptimizer.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Commands/CommandAbstract.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/ClassMethod.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Commands/CommandInitialize.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Commands/CommandBuildDev.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Variable.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Backends/ZendEngine3/Backend.php | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 11e3984...d10b3c1. Read the comment docs.\n. # Codecov Report\nMerging #1603 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1603      +/-\n=========================================\n- Coverage    0.87%   0.87%   -0.01%   \n=========================================\n  Files         326     327       +1   \n  Lines       27651   27691      +40   \n=========================================\n  Hits          241     241            \n- Misses      27410   27450      +40\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Library/CompiledExpression.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Statements/StatementAbstract.php | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Compiler.php | 1.78% <\u00f8> (\u00f8) | :arrow_up: |\n| Library/Compiler/IllegalOperationException.php | 0% <0%> (\u00f8) | |\n| Library/Branch.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Statements/Let/StaticProperty.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Variable.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Statements/Let/Variable.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/SymbolTable.php | 0% <0%> (\u00f8) | :arrow_up: |\n| Library/Passes/StaticTypeInference.php | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 04eb328...6b069ad. Read the comment docs.\n. # Codecov Report\nMerging #1665 into master will increase coverage by 13.41%.\nThe diff coverage is 78.3%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #1665       +/-\n=============================================\n+ Coverage      2.64%   16.06%   +13.41%   \n- Complexity     8029     8140      +111   \n=============================================\n  Files           327      327             \n  Lines         22092    22201      +109   \n=============================================\n+ Hits            584     3566     +2982   \n+ Misses        21508    18635     -2873\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Stubs/Generator.php | 0% <0%> (\u00f8) | 64 <0> (+18) | :arrow_up: |\n| .../Optimizers/FunctionCall/IsPhpVersionOptimizer.php | 0% <0%> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinition.php | 33.33% <96.05%> (+30.19%) | 319 <0> (+49) | :arrow_up: |\n| Library/Compiler.php | 53.49% <96.87%> (+30.01%) | 367 <0> (+44) | :arrow_up: |\n| Library/CommandArgumentParser.php | 0% <0%> (\u00f8) | 24% <0%> (\u00f8) | :arrow_down: |\n| Library/Commands/CommandGenerate.php | 0% <0%> (\u00f8) | 3% <0%> (\u00f8) | :arrow_down: |\n| Library/FunctionCall.php | 0.66% <0%> (+0.66%) | 107% <0%> (\u00f8) | :arrow_down: |\n| Library/Utils.php | 16.81% <0%> (+0.88%) | 46% <0%> (\u00f8) | :arrow_down: |\n| Library/Config.php | 55.17% <0%> (+1.14%) | 40% <0%> (\u00f8) | :arrow_down: |\n| Library/Commands/Manager.php | 2.81% <0%> (+2.81%) | 25% <0%> (\u00f8) | :arrow_down: |\n| ... and 44 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d7afdc0...ea79bd7. Read the comment docs.\n. # Codecov Report\nMerging #1666 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1666   +/-\n========================================\n  Coverage      2.64%   2.64%         \n  Complexity     8029    8029         \n========================================\n  Files           327     327         \n  Lines         22092   22092         \n========================================\n  Hits            584     584         \n  Misses        21508   21508\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Compiler.php | 23.48% <\u00f8> (\u00f8) | 323 <0> (\u00f8) | :arrow_down: |\n| .../Optimizers/FunctionCall/IsPhpVersionOptimizer.php | 0% <0%> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d1b4cc6...8d88ada. Read the comment docs.\n. # Codecov Report\nMerging #1679 into development will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1679      +/-\n=================================================\n- Coverage          20.04%   20.04%   -0.01%   \n  Complexity          8140     8140            \n=================================================\n  Files                334      334            \n  Lines              25484    25484            \n=================================================\n- Hits                5108     5107       -1   \n- Misses             20376    20377       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Passes/CallGathererPass.php | 37.2% <\u00f8> (\u00f8) | 146 <0> (\u00f8) | :arrow_down: |\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| Library/CompiledExpression.php | 22.22% <\u00f8> (\u00f8) | 23 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinitionRuntime.php | 50% <\u00f8> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| .../Statements/Let/ObjectPropertyArrayIndexAppend.php | 0% <\u00f8> (\u00f8) | 18 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/GetCalledClassOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/DeclareStatement.php | 71.11% <\u00f8> (\u00f8) | 17 <0> (\u00f8) | :arrow_down: |\n| Library/Variable.php | 43.32% <\u00f8> (\u00f8) | 152 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/StrtoupperOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Passes/MutateGathererPass.php | 0% <\u00f8> (\u00f8) | 144 <0> (\u00f8) | :arrow_down: |\n| ... and 225 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a81b41b...6f9d049. Read the comment docs.\n. # Codecov Report\nMerging #1681 into development will increase coverage by 1.54%.\nThe diff coverage is 82.63%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1681      +/-\n=================================================\n+ Coverage          20.04%   21.58%   +1.54%   \n- Complexity          8140     8158      +18   \n=================================================\n  Files                334      334            \n  Lines              25484    25579      +95   \n=================================================\n+ Hits                5107     5520     +413   \n+ Misses             20377    20059     -318\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Backends/ZendEngine2/Backend.php | 14.39% <\u00f8> (\u00f8) | 370 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine3/Backend.php | 16.01% <\u00f8> (\u00f8) | 192 <0> (\u00f8) | :arrow_down: |\n| Library/BaseBackend.php | 57.89% <\u00f8> (\u00f8) | 9 <0> (\u00f8) | :arrow_down: |\n| Library/Call.php | 3.58% <\u00f8> (\u00f8) | 120 <0> (\u00f8) | :arrow_down: |\n| Library/Compiler.php | 52.98% <100%> (+0.11%) | 367 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinition.php | 37.28% <78.26%> (+4.19%) | 319 <0> (\u00f8) | :arrow_down: |\n| Library/CompilerFile.php | 58.84% <80%> (+12.51%) | 150 <5> (+1) | :arrow_up: |\n| Library/ClassMethod.php | 48.29% <85.71%> (+1.41%) | 366 <27> (+17) | :arrow_up: |\n| Library/Passes/StaticTypeInference.php | 36.11% <0%> (+0.53%) | 222% <0%> (\u00f8) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 73caa77...ac6650e. Read the comment docs.\n. # Codecov Report\nMerging #1683 into development will decrease coverage by 3.2%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1683      +/-\n=================================================\n- Coverage          21.57%   18.37%   -3.21%   \n  Complexity          8158     8158            \n=================================================\n  Files                334      328       -6   \n  Lines              25579    23307    -2272   \n=================================================\n- Hits                5518     4282    -1236   \n+ Misses             20061    19025    -1036\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 196905d...172d97f. Read the comment docs.\n. # Codecov Report\nMerging #1685 into development will decrease coverage by 0.11%.\nThe diff coverage is 88.63%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1685      +/-\n=================================================\n- Coverage          18.37%   18.25%   -0.12%   \n+ Complexity          8158     8105      -53   \n=================================================\n  Files                328      329       +1   \n  Lines              23307    23263      -44   \n=================================================\n- Hits                4282     4247      -35   \n+ Misses             19025    19016       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Utils.php | 35.45% <\u00f8> (\u00f8) | 46 <0> (\u00f8) | :arrow_down: |\n| Library/Stubs/Generator.php | 0% <0%> (\u00f8) | 65 <0> (+1) | :arrow_up: |\n| ...perators/Arithmetical/ArithmeticalBaseOperator.php | 0% <0%> (\u00f8) | 156 <0> (\u00f8) | :arrow_down: |\n| Library/ClassMethod.php | 48.35% <100%> (+0.05%) | 367 <0> (+1) | :arrow_up: |\n| Library/ClassDefinition.php | 28.07% <100%> (-9.21%) | 269 <0> (-50) | |\n| Library/Compiler.php | 48.69% <100%> (-4.29%) | 317 <0> (-50) | |\n| Library/ArgInfoDefinition.php | 90.3% <90.3%> (\u00f8) | 45 <45> (?) | |\n| Library/Logger.php | 15.15% <0%> (-6.07%) | 13% <0%> (\u00f8) | |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 28cde21...77c63f4. Read the comment docs.\n. # Codecov Report\nMerging #1687 into development will decrease coverage by 0.09%.\nThe diff coverage is n/a.\n\n\n```diff\n@@               Coverage Diff                @@\ndevelopment    #1687     +/-\n================================================\n- Coverage          18.25%   18.16%   -0.1%   \n+ Complexity          8105     8101      -4   \n================================================\n  Files                329      329           \n  Lines              23263    22950    -313   \n================================================\n- Hits                4247     4169     -78   \n+ Misses             19016    18781    -235\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Statements/EchoStatement.php | 59.64% <0%> (-1.76%) | 20% <0%> (\u00f8) | |\n| Library/Operators/BaseOperator.php | 23.88% <0%> (-1.5%) | 26% <0%> (\u00f8) | |\n| Library/Statements/LetStatement.php | 32.59% <0%> (-1.49%) | 45% <0%> (\u00f8) | |\n| Library/CodePrinter.php | 53.33% <0%> (-1.34%) | 23% <0%> (\u00f8) | |\n| Library/Cache/MethodCache.php | 20.68% <0%> (-1.15%) | 45% <0%> (\u00f8) | |\n| Library/Documentation/DocblockParser.php | 88.88% <0%> (-1.02%) | 41% <0%> (\u00f8) | |\n| Library/MethodCall.php | 22.35% <0%> (-0.93%) | 152% <0%> (\u00f8) | |\n| Library/Statements/DeclareStatement.php | 70.45% <0%> (-0.66%) | 17% <0%> (\u00f8) | |\n| Library/Statements/ReturnStatement.php | 66.01% <0%> (-0.66%) | 68% <0%> (\u00f8) | |\n| Library/ClassProperty.php | 29% <0%> (-0.56%) | 73% <0%> (\u00f8) | |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b9a8934...fd512b1. Read the comment docs.\n. # Codecov Report\nMerging #1688 into development will decrease coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1688      +/-\n=================================================\n- Coverage          18.25%   18.17%   -0.08%   \n  Complexity          8105     8105            \n=================================================\n  Files                329      329            \n  Lines              23263    23263            \n=================================================\n- Hits                4247     4229      -18   \n- Misses             19016    19034      +18\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Statements/DeclareStatement.php | 68.88% <0%> (-2.23%) | 17% <0%> (\u00f8) | |\n| Library/Stubs/MethodDocBlock.php | 65.62% <0%> (-1.05%) | 41% <0%> (\u00f8) | |\n| Library/Documentation/DocblockParser.php | 88.99% <0%> (-0.92%) | 41% <0%> (\u00f8) | |\n| Library/Utils.php | 34.54% <0%> (-0.91%) | 46% <0%> (\u00f8) | |\n| Library/ClassMethod.php | 47.62% <0%> (-0.73%) | 367% <0%> (\u00f8) | |\n| Library/ClassProperty.php | 29.06% <0%> (-0.5%) | 73% <0%> (\u00f8) | |\n| Library/Backends/ZendEngine3/Backend.php | 15.58% <0%> (-0.44%) | 192% <0%> (\u00f8) | |\n| Library/Expression.php | 20.14% <0%> (-0.37%) | 96% <0%> (\u00f8) | |\n| Library/Backends/ZendEngine2/Backend.php | 14.17% <0%> (-0.22%) | 370% <0%> (\u00f8) | |\n| Library/Statements/Let/Variable.php | 5.76% <0%> (-0.11%) | 254% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d7f39d...1ea83a9. Read the comment docs.\n. # Codecov Report\nMerging #1689 into development will increase coverage by 20.44%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                 @@\ndevelopment    #1689       +/-\n==================================================\n+ Coverage          18.25%   38.69%   +20.44%   \n==================================================\n  Files                329        1      -328   \n  Lines              23263      783    -22480   \n==================================================\n- Hits                4247      303     -3944   \n+ Misses             19016      480    -18536\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Passes/CallGathererPass.php | | | |\n| Library/Statements/UnsetStatement.php | | | |\n| Library/ClassConstant.php | | | |\n| Library/ClassDefinitionRuntime.php | | | |\n| ...rary/Documentation/Annotation/ReturnAnnotation.php | | | |\n| Library/Optimizers/FunctionCall/Crc32Optimizer.php | | | |\n| Library/Expression/ClosureArrow.php | | | |\n| ...ibrary/Optimizers/FunctionCall/IsBoolOptimizer.php | | | |\n| ...ry/Optimizers/FunctionCall/GetNsClassOptimizer.php | | | |\n| ...ry/Optimizers/FunctionCall/StrtoupperOptimizer.php | | | |\n| ... and 318 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3d6feb1...3b7332d. Read the comment docs.\n. # Codecov Report\nMerging #1691 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1691   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 726763f...250c152. Read the comment docs.\n. # Codecov Report\nMerging #1692 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1692   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b453b4d...3d66eb6. Read the comment docs.\n. # Codecov Report\nMerging #1693 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1693   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3e6a5d...a243855. Read the comment docs.\n. # Codecov Report\nMerging #1694 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1694   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 942462e...c93933b. Read the comment docs.\n. # Codecov Report\nMerging #1695 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1695   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9a99ea9...9239d4e. Read the comment docs.\n. # Codecov Report\nMerging #1696 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1696   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0fc40ac...90f967a. Read the comment docs.\n. # Codecov Report\nMerging #1698 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1698   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b5fa3b...9d0d606. Read the comment docs.\n. # Codecov Report\nMerging #1699 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1699   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f4463ab...42e3b78. Read the comment docs.\n. # Codecov Report\nMerging #1700 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1700   +/-\n============================================\n  Coverage        38.69%   38.69%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               303      303         \n  Misses             480      480\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 962eaf3...0a97042. Read the comment docs.\n. # Codecov Report\nMerging #1707 into development will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1707      +/-\n=================================================\n- Coverage          20.15%   20.15%   -0.01%   \n  Complexity          8116     8116            \n=================================================\n  Files                336      336            \n  Lines              23531    23533       +2   \n=================================================\n  Hits                4743     4743            \n- Misses             18788    18790       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/ClassMethod.php | 48.43% <0%> (-0.1%) | 371 <0> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f1d9fec...38a58b3. Read the comment docs.\n. # Codecov Report\nMerging #1710 into development will decrease coverage by 0.25%.\nThe diff coverage is 10.77%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1710      +/-\n=================================================\n- Coverage          20.38%   20.13%   -0.26%   \n- Complexity          8131     8134       +3   \n=================================================\n  Files                337      337            \n  Lines              23277    23557     +280   \n=================================================\n- Hits                4745     4743       -2   \n- Misses             18532    18814     +282\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Environment.php | 52.45% <\u00f8> (-2.72%) | 28 <0> (\u00f8) | |\n| Library/Statements/UnsetStatement.php | 0% <0%> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| Library/Code/Builder/Struct.php | 0% <0%> (\u00f8) | 36 <0> (\u00f8) | :arrow_down: |\n| ...ibrary/Operators/Other/NewInstanceTypeOperator.php | 0% <0%> (\u00f8) | 5 <0> (+1) | :arrow_up: |\n| Library/Expression/PropertyAccess.php | 0% <0%> (\u00f8) | 37 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/WhileStatement.php | 0% <0%> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| Library/Operators/Arithmetical/DivOperator.php | 0% <0%> (\u00f8) | 130 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/IfStatement.php | 0% <0%> (\u00f8) | 19 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/TryCatchStatement.php | 0% <0%> (\u00f8) | 10 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/RequireStatement.php | 0% <0%> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n| ... and 86 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10a047d...22dfdf0. Read the comment docs.\n. # Codecov Report\nMerging #1711 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1711   +/-\n==============================================\n  Coverage          20.13%   20.13%         \n  Complexity          8134     8134         \n==============================================\n  Files                337      337         \n  Lines              23557    23557         \n==============================================\n  Hits                4743     4743         \n  Misses             18814    18814\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dd63df1...e40acbf. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@ab3551d). Click here to learn what that means.\nThe diff coverage is 41.32%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1712   +/-\n=========================================\n  Coverage          ?   20.13%         \n  Complexity        ?     8134         \n=========================================\n  Files             ?      337         \n  Lines             ?    23557         \n  Branches          ?        0         \n=========================================\n  Hits              ?     4743         \n  Misses            ?    18814         \n  Partials          ?        0\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (?) | |\n| Library/ClassDefinitionRuntime.php | 50% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| ...rary/Documentation/Annotation/ReturnAnnotation.php | 0% <\u00f8> (\u00f8) | 6 <0> (?) | |\n| .../Optimizers/FunctionCall/StripslashesOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (?) | |\n| Library/Optimizers/FunctionCall/Crc32Optimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (?) | |\n| ...ry/Optimizers/FunctionCall/GetNsClassOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (?) | |\n| ...ibrary/Builder/Operators/BinaryOperatorBuilder.php | 0% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| Library/Optimizers/FunctionCall/FeofOptimizer.php | 0% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| Library/Builder/LiteralBuilder.php | 0% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| ...ary/Optimizers/FunctionCall/FilemtimeOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (?) | |\n| ... and 238 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ab3551d...882d979. Read the comment docs.\n. # Codecov Report\nMerging #1715 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1715   +/-\n==============================================\n  Coverage          20.13%   20.13%         \n  Complexity          8134     8134         \n==============================================\n  Files                337      337         \n  Lines              23557    23557         \n==============================================\n  Hits                4743     4743         \n  Misses             18814    18814\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Version.php | 82.35% <\u00f8> (\u00f8) | 8 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 882d979...01c6ede. Read the comment docs.\n. # Codecov Report\nMerging #1717 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1717   +/-\n==============================================\n  Coverage          20.13%   20.13%         \n  Complexity          8134     8134         \n==============================================\n  Files                337      337         \n  Lines              23557    23557         \n==============================================\n  Hits                4743     4743         \n  Misses             18814    18814\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 116798e...ee87ecc. Read the comment docs.\n. # Codecov Report\nMerging #1718 into development will decrease coverage by 0.01%.\nThe diff coverage is 60%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1718      +/-\n=================================================\n- Coverage          20.13%   20.12%   -0.02%   \n+ Complexity          8134     8133       -1   \n=================================================\n  Files                337      337            \n  Lines              23557    23554       -3   \n=================================================\n- Hits                4743     4740       -3   \n  Misses             18814    18814\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Environment.php | 50% <60%> (-2.46%) | 27 <0> (-1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0437bd0...8c5932b. Read the comment docs.\n. # Codecov Report\nMerging #1719 into master will decrease coverage by 0.01%.\nThe diff coverage is 60%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1719      +/-\n============================================\n- Coverage     20.13%   20.12%   -0.02%   \n+ Complexity     8134     8133       -1   \n============================================\n  Files           337      337            \n  Lines         23557    23554       -3   \n============================================\n- Hits           4743     4740       -3   \n  Misses        18814    18814\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Version.php | 82.35% <\u00f8> (\u00f8) | 8 <0> (\u00f8) | :arrow_down: |\n| Library/Environment.php | 50% <60%> (-2.46%) | 27 <0> (-1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e96dde7...b611a1f. Read the comment docs.\n. # Codecov Report\nMerging #1722 into development will increase coverage by 18.44%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                 @@\ndevelopment    #1722       +/-\n==================================================\n+ Coverage          20.12%   38.56%   +18.44%   \n==================================================\n  Files                337        1      -336   \n  Lines              23554      783    -22771   \n==================================================\n- Hits                4740      302     -4438   \n+ Misses             18814      481    -18333\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| kernels/ZendEngine2/extended/fcall.c | 38.56% <0%> (-0.13%) | 0% <0%> (\u00f8) | |\n| Library/Passes/CallGathererPass.php | | | |\n| Library/Statements/UnsetStatement.php | | | |\n| Library/ClassConstant.php | | | |\n| Library/ClassDefinitionRuntime.php | | | |\n| ...rary/Documentation/Annotation/ReturnAnnotation.php | | | |\n| Library/Optimizers/FunctionCall/Crc32Optimizer.php | | | |\n| Library/Expression/ClosureArrow.php | | | |\n| ...ibrary/Optimizers/FunctionCall/IsBoolOptimizer.php | | | |\n| ...ry/Optimizers/FunctionCall/StrtoupperOptimizer.php | | | |\n| ... and 297 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b611a1f...5bccff1. Read the comment docs.\n. # Codecov Report\nMerging #1723 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\ndevelopment    #1723   +/-\n============================================\n  Coverage        38.56%   38.56%         \n============================================\n  Files                1        1         \n  Lines              783      783         \n============================================\n  Hits               302      302         \n  Misses             481      481\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ce3232f...e2305f9. Read the comment docs.\n. # Codecov Report\nMerging #1729 into development will increase coverage by 0.64%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1729      +/-\n=================================================\n+ Coverage           19.6%   20.24%   +0.64%   \n  Complexity          8053     8053            \n=================================================\n  Files                331      332       +1   \n  Lines              22367    23150     +783   \n=================================================\n+ Hits                4384     4687     +303   \n- Misses             17983    18463     +480\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| kernels/ZendEngine2/extended/fcall.c | 38.69% <0%> (\u00f8) | 0% <0%> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c0e7f02...9908452. Read the comment docs.\n. # Codecov Report\nMerging #1730 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1730   +/-\n==============================================\n  Coverage          20.24%   20.24%         \n  Complexity          8053     8053         \n==============================================\n  Files                332      332         \n  Lines              23150    23150         \n==============================================\n  Hits                4687     4687         \n  Misses             18463    18463\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 49b8509...2f1d984. Read the comment docs.\n. # Codecov Report\nMerging #1731 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1731   +/-\n==============================================\n  Coverage          20.24%   20.24%         \n  Complexity          8053     8053         \n==============================================\n  Files                332      332         \n  Lines              23150    23150         \n==============================================\n  Hits                4687     4687         \n  Misses             18463    18463\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 994e8ae...6b28486. Read the comment docs.\n. # Codecov Report\nMerging #1732 into development will increase coverage by 21.04%.\nThe diff coverage is 56.05%.\n\n\n```diff\n@@                Coverage Diff                 @@\ndevelopment    #1732       +/-\n==================================================\n+ Coverage          20.24%   41.29%   +21.04%   \n  Complexity          8053     8053             \n==================================================\n  Files                332      531      +199   \n  Lines              23150    42734    +19584   \n==================================================\n+ Hits                4687    17645    +12958   \n- Misses             18463    25089     +6626\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test/oo/constantsinterface.zep.c | 25% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/oo/propertyaccess.zep.c | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/logical.zep.c | 2.43% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/methodargs.zep.c | 95.5% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/geometry.zep.c | 4.1% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/exitdie.zep.c | 55.55% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/concat.zep.c | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/compare.zep.c | 95.45% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/oo/oodynamica.zep.c | 94.73% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ext/test/bitwise.zep.c | 96.98% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ... and 389 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1ac5bd2...dbcf1f7. Read the comment docs.\n. # Codecov Report\nMerging #1735 into development will increase coverage by 0.03%.\nThe diff coverage is 59.32%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1735      +/-\n=================================================\n+ Coverage          41.29%   41.32%   +0.03%   \n+ Complexity          8053     8035      -18   \n=================================================\n  Files                531      531            \n  Lines              42734    42680      -54   \n=================================================\n- Hits               17645    17639       -6   \n+ Misses             25089    25041      -48\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Di/ContainerAwareTrait.php | 70% <\u00f8> (-20%) | 11 <0> (\u00f8) | |\n| Library/Providers/BackendProvider.php | 94.73% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| Library/Command/CleanCommand.php | 0% <0%> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/Command/FullCLeanCommand.php | 0% <0%> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/Providers/FileSystemProvider.php | 100% <100%> (\u00f8) | 2 <2> (?) | |\n| Library/ServiceRegistrator.php | 82.22% <100%> (+0.4%) | 18 <0> (\u00f8) | :arrow_down: |\n| Library/Application.php | 37.03% <33.33%> (-1.86%) | 22 <0> (\u00f8) | |\n| Library/FileSystem/HardDisk.php | 50% <39.53%> (-10%) | 23 <9> (+3) | |\n| Library/CompilerFile.php | 62.82% <47.61%> (-0.84%) | 151 <0> (+1) | |\n| Library/Compiler.php | 60.55% <81.57%> (-0.04%) | 291 <0> (-3) | |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d0b5613...3d05c28. Read the comment docs.\n. # Codecov Report\nMerging #1736 into development will decrease coverage by 0.01%.\nThe diff coverage is 2.12%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1736      +/-\n=================================================\n- Coverage          41.32%   41.31%   -0.02%   \n- Complexity          8035     8042       +7   \n=================================================\n  Files                531      531            \n  Lines              42680    42699      +19   \n=================================================\n  Hits               17639    17639            \n- Misses             25041    25060      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Statements/UnsetStatement.php | 0% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| Library/Operators/Bitwise/BitwiseBaseOperator.php | 0% <\u00f8> (\u00f8) | 144 <0> (\u00f8) | :arrow_down: |\n| .../Statements/Let/ObjectPropertyArrayIndexAppend.php | 0% <\u00f8> (\u00f8) | 18 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/GetCalledClassOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Expression/ClosureArrow.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| ...ibrary/Statements/Let/ObjectPropertyArrayIndex.php | 0% <\u00f8> (\u00f8) | 64 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/StrtoupperOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Optimizers/FunctionCall/LdexpOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...ary/Optimizers/FunctionCall/FilemtimeOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| ... and 158 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dd2423b...8ba7f72. Read the comment docs.\n. # Codecov Report\nMerging #1737 into master will increase coverage by 21.18%.\nThe diff coverage is 50.23%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #1737       +/-\n=============================================\n+ Coverage     20.12%   41.31%   +21.18%   \n+ Complexity     8133     8042       -91   \n=============================================\n  Files           337      531      +194   \n  Lines         23554    42699    +19145   \n=============================================\n+ Hits           4740    17639    +12899   \n- Misses        18814    25060     +6246\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Statements/UnsetStatement.php | 0% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| .../Statements/Let/ObjectPropertyArrayIndexAppend.php | 0% <\u00f8> (\u00f8) | 18 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/GetCalledClassOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine2/Backend.php | 16.9% <\u00f8> (+0.61%) | 370 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/DeclareStatement.php | 74.41% <\u00f8> (+3.3%) | 17 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/StrtoupperOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/LoopStatement.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| ...ary/Optimizers/FunctionCall/FilemtimeOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/TryCatchStatement.php | 0% <\u00f8> (\u00f8) | 10 <0> (\u00f8) | :arrow_down: |\n| ... and 476 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 97aba27...9e26c5c. Read the comment docs.\n. # Codecov Report\nMerging #1738 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1738   +/-\n==============================================\n  Coverage          41.31%   41.31%         \n  Complexity          8042     8042         \n==============================================\n  Files                531      531         \n  Lines              42699    42699         \n==============================================\n  Hits               17639    17639         \n  Misses             25060    25060\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9e26c5c...0f64eac. Read the comment docs.\n. # Codecov Report\nMerging #1739 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1739   +/-\n==============================================\n  Coverage          41.31%   41.31%         \n  Complexity          8042     8042         \n==============================================\n  Files                531      531         \n  Lines              42699    42699         \n==============================================\n  Hits               17639    17639         \n  Misses             25060    25060\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d0a6a8a...2c87545. Read the comment docs.\n. # Codecov Report\nMerging #1741 into development will increase coverage by 0.11%.\nThe diff coverage is 77.35%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1741      +/-\n=================================================\n+ Coverage          41.31%   41.42%   +0.11%   \n  Complexity          8042     8042            \n=================================================\n  Files                531      531            \n  Lines              42699    42745      +46   \n=================================================\n+ Hits               17639    17708      +69   \n+ Misses             25060    25037      -23\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/kernel/memory.c | 60.16% <61.53%> (+13.77%) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/requires.zep.c | 79.26% <82.5%> (+4.8%) | 0 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9dd1737...7247f30. Read the comment docs.\n. # Codecov Report\nMerging #1743 into master will increase coverage by 0.11%.\nThe diff coverage is 77.35%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1743      +/-\n============================================\n+ Coverage     41.31%   41.42%   +0.11%   \n  Complexity     8042     8042            \n============================================\n  Files           531      531            \n  Lines         42699    42745      +46   \n============================================\n+ Hits          17639    17708      +69   \n+ Misses        25060    25037      -23\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/kernel/memory.c | 60.16% <61.53%> (+13.77%) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/requires.zep.c | 79.26% <82.5%> (+4.8%) | 0 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb5db1a...2a3b7a7. Read the comment docs.\n. # Codecov Report\nMerging #1744 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1744   +/-\n=========================================\n  Coverage     41.42%   41.42%         \n  Complexity     8042     8042         \n=========================================\n  Files           531      531         \n  Lines         42745    42745         \n=========================================\n  Hits          17708    17708         \n  Misses        25037    25037\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4d89ea2...58a2557. Read the comment docs.\n. # Codecov Report\nMerging #1746 into development will increase coverage by 0.07%.\nThe diff coverage is 64.38%.\n\n\n```diff\n@@               Coverage Diff                @@\ndevelopment   #1746      +/-\n================================================\n+ Coverage          41.42%   41.5%   +0.07%   \n- Complexity          8042    8044       +2   \n================================================\n  Files                531     531            \n  Lines              42745   42796      +51   \n================================================\n+ Hits               17708   17761      +53   \n+ Misses             25037   25035       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ary/Optimizers/FunctionCall/PregMatchOptimizer.php | 34.83% <\u00f8> (\u00f8) | 26 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/FuncGetArgOptimizer.php | 0% <0%> (\u00f8) | 8 <0> (+2) | :arrow_up: |\n| ext/test/fcall.zep.c | 58.44% <100%> (+6.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/kernel/main.c | 64.62% <70%> (+5.93%) | 0 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d6e6628...ded24a3. Read the comment docs.\n. # Codecov Report\nMerging #1747 into development will decrease coverage by 0.05%.\nThe diff coverage is 18.52%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1747      +/-\n=================================================\n- Coverage           41.5%   41.44%   -0.06%   \n- Complexity          8044     8045       +1   \n=================================================\n  Files                531      531            \n  Lines              42796    42854      +58   \n=================================================\n  Hits               17761    17761            \n- Misses             25035    25093      +58\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinitionRuntime.php | 50% <\u00f8> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| Library/Optimizers/FunctionCall/FeofOptimizer.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/Detectors/ReadDetector.php | 36% <\u00f8> (\u00f8) | 19 <0> (\u00f8) | :arrow_down: |\n| ...brary/Expression/Builder/Operators/RawOperator.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/GlobalsGetOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/ArrayKeyExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/CacheManager.php | 55.55% <\u00f8> (\u00f8) | 9 <0> (\u00f8) | :arrow_down: |\n| ...timizers/FunctionCall/InterfaceExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| ...ry/Optimizers/FunctionCall/IsResourceOptimizer.php | 0% <\u00f8> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n| ... and 278 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 488de11...56eff34. Read the comment docs.\n. # Codecov Report\nMerging #1748 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1748   +/-\n==============================================\n  Coverage          41.44%   41.44%         \n  Complexity          8045     8045         \n==============================================\n  Files                531      531         \n  Lines              42854    42854         \n==============================================\n  Hits               17761    17761         \n  Misses             25093    25093\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/kernel/require.h | 100% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b08bbf7...25faabb. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (development@c8aaef5). Click here to learn what that means.\nThe diff coverage is 46.15%.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1753   +/-\n==============================================\n  Coverage               ?   41.44%         \n  Complexity             ?     8046         \n==============================================\n  Files                  ?      531         \n  Lines                  ?    42879         \n  Branches               ?        0         \n==============================================\n  Hits                   ?    17773         \n  Misses                 ?    25106         \n  Partials               ?        0\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Exception/ParseException.php | 0% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| Library/Compiler.php | 60.61% <\u00f8> (\u00f8) | 293 <0> (?) | |\n| Library/Parser/Manager.php | 53.33% <0%> (\u00f8) | 8 <0> (?) | |\n| Library/CompilerFile.php | 61.99% <40.9%> (\u00f8) | 152 <0> (?) | |\n| Library/Parser.php | 76.92% <85.71%> (\u00f8) | 8 <5> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c8aaef5...3944341. Read the comment docs.\n. # Codecov Report\nMerging #1754 into development will increase coverage by 0.24%.\nThe diff coverage is 48.38%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1754      +/-\n=================================================\n+ Coverage          41.44%   41.69%   +0.24%   \n+ Complexity          8046     8045       -1   \n=================================================\n  Files                531      533       +2   \n  Lines              42879    42867      -12   \n=================================================\n+ Hits               17773    17874     +101   \n+ Misses             25106    24993     -113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Console/Command/ApiCommand.php | 66.66% <\u00f8> (\u00f8) | 8 <0> (?) | |\n| Library/Console/Command/InstallCommand.php | 28.57% <\u00f8> (\u00f8) | 7 <0> (?) | |\n| ...rary/Console/Command/DevelopmentModeAwareTrait.php | 100% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| Library/Console/Command/StubsCommand.php | 76.92% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| Library/Console/Command/ZflagsAwareTrait.php | 100% <\u00f8> (\u00f8) | 1 <0> (?) | |\n| Library/Console/Command/GenerateCommand.php | 76.92% <\u00f8> (\u00f8) | 2 <0> (?) | |\n| Library/Console/Command/CleanCommand.php | 33.33% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| Library/Console/Command/FullCLeanCommand.php | 25% <\u00f8> (\u00f8) | 3 <0> (?) | |\n| Library/Console/Command/InitCommand.php | 24.52% <\u00f8> (\u00f8) | 21 <0> (?) | |\n| Library/Console/Command/BuildCommand.php | 63.63% <\u00f8> (\u00f8) | 4 <0> (?) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 89c35c3...10bbbe8. Read the comment docs.\n. # Codecov Report\nMerging #1755 into development will increase coverage by 0.87%.\nThe diff coverage is 46.46%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1755      +/-\n=================================================\n+ Coverage          41.69%   42.57%   +0.87%   \n+ Complexity          8045     8015      -30   \n=================================================\n  Files                533      528       -5   \n  Lines              42867    42000     -867   \n=================================================\n+ Hits               17874    17880       +6   \n+ Misses             24993    24120     -873\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/CompilationContext.php | 100% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/Logger.php | 0% <\u00f8> (-25%) | 13 <0> (\u00f8) | |\n| ext/kernel/require.h | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/Parser/Parser.php | 76.92% <\u00f8> (\u00f8) | 8 <0> (?) | |\n| Library/ClassDefinition.php | 28.85% <\u00f8> (\u00f8) | 270 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/UnsetStatement.php | 0% <0%> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| Library/Expression/ClosureArrow.php | 0% <0%> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/AliasManager.php | 18.18% <0%> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/Let/ObjectDynamicProperty.php | 0% <0%> (\u00f8) | 29 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/Let/VariableAppend.php | 0% <0%> (\u00f8) | 27 <0> (\u00f8) | :arrow_down: |\n| ... and 212 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f442788...217bdea. Read the comment docs.\n. # Codecov Report\nMerging #1757 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1757   +/-\n==============================================\n  Coverage          42.57%   42.57%         \n  Complexity          8015     8015         \n==============================================\n  Files                528      528         \n  Lines              42000    42000         \n==============================================\n  Hits               17880    17880         \n  Misses             24120    24120\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2db6155...81e8c1e. Read the comment docs.\n. # Codecov Report\nMerging #1759 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1759   +/-\n==============================================\n  Coverage          42.57%   42.57%         \n  Complexity          8015     8015         \n==============================================\n  Files                528      528         \n  Lines              42000    42000         \n==============================================\n  Hits               17880    17880         \n  Misses             24120    24120\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b3a8511...1824bf5. Read the comment docs.\n. # Codecov Report\nMerging #1761 into development will increase coverage by 0.06%.\nThe diff coverage is 55.73%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1761      +/-\n=================================================\n+ Coverage          42.57%   42.63%   +0.06%   \n  Complexity          8015     8015            \n=================================================\n  Files                528      528            \n  Lines              42000    42032      +32   \n=================================================\n+ Hits               17880    17922      +42   \n+ Misses             24120    24110      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Backends/ZendEngine2/Backend.php | 16.79% <0%> (-0.08%) | 370 <0> (\u00f8) | |\n| ext/test/requires.zep.c | 79.26% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/oo/dynamicprop.zep.c | 79.31% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/compare.zep.c | 95.45% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/vars.zep.c | 89.13% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/exception.zep.c | 16.66% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/statements.zep.c | 75.13% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/methodargs.zep.c | 95.5% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/ArgInfoDefinition.php | 94.38% <100%> (+0.63%) | 46 <0> (\u00f8) | :arrow_down: |\n| ext/test/mcall.zep.c | 63.34% <33.33%> (+0.45%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e2689be...505836f. Read the comment docs.\n. # Codecov Report\nMerging #1763 into development will decrease coverage by <.01%.\nThe diff coverage is 12.24%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1763      +/-\n=================================================\n- Coverage          42.63%   42.63%   -0.01%   \n- Complexity          8015     8018       +3   \n=================================================\n  Files                528      528            \n  Lines              42032    42049      +17   \n=================================================\n+ Hits               17922    17928       +6   \n- Misses             24110    24121      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Logger/Formatter/CompilerFormatter.php | 12.24% <12.24%> (\u00f8) | 16 <16> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 86ccc38...4c435a6. Read the comment docs.\n. # Codecov Report\nMerging #1767 into master will increase coverage by 1.2%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1767     +/-\n===========================================\n+ Coverage     41.42%   42.63%   +1.2%   \n+ Complexity     8042     8018     -24   \n===========================================\n  Files           531      528      -3   \n  Lines         42745    42049    -696   \n===========================================\n+ Hits          17708    17928    +220   \n+ Misses        25037    24121    -916\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...y/Optimizers/FunctionCall/ClassExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinitionRuntime.php | 50% <\u00f8> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| Library/Optimizers/FunctionCall/FeofOptimizer.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| ...ary/Optimizers/FunctionCall/FilemtimeOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| Library/Operators/Unary/MinusOperator.php | 0% <\u00f8> (\u00f8) | 14 <0> (\u00f8) | :arrow_down: |\n| ...brary/Expression/Builder/Operators/RawOperator.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Operators/Other/TernaryOperator.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...timizers/FunctionCall/FilePutContentsOptimizer.php | 0% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/GetDefinedVarsOptimizer.php | 0% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/ArrayKeyExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| ... and 478 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d6e6628...2165e4b. Read the comment docs.\n. # Codecov Report\nMerging #1769 into development will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1769      +/-\n=================================================\n+ Coverage          42.63%   42.68%   +0.04%   \n  Complexity          8018     8018            \n=================================================\n  Files                528      528            \n  Lines              42049    42049            \n=================================================\n+ Hits               17928    17949      +21   \n+ Misses             24121    24100      -21\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Passes/StaticTypeInference.php | 38.09% <0%> (+0.28%) | 222% <0%> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine2/Backend.php | 17.46% <0%> (+0.66%) | 370% <0%> (\u00f8) | :arrow_down: |\n| Library/Statements/ReturnStatement.php | 76.19% <0%> (+2.04%) | 68% <0%> (\u00f8) | :arrow_down: |\n| Library/Expression.php | 25.27% <0%> (+4.08%) | 96% <0%> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2165e4b...fc32a1b. Read the comment docs.\n. # Codecov Report\nMerging #1770 into development will increase coverage by 0.44%.\nThe diff coverage is 25.92%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1770      +/-\n=================================================\n+ Coverage          42.68%   43.12%   +0.44%   \n- Complexity          8018     8019       +1   \n=================================================\n  Files                528      528            \n  Lines              42049    42081      +32   \n=================================================\n+ Hits               17949    18149     +200   \n+ Misses             24100    23932     -168\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/CompilerFile.php | 64.2% <\u00f8> (+3.11%) | 154 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinition.php | 46.84% <19.04%> (+17.99%) | 271 <0> (+1) | :arrow_up: |\n| Library/Compiler.php | 61.48% <50%> (+0.97%) | 293 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine3/Backend.php | 18.45% <0%> (+0.45%) | 192% <0%> (\u00f8) | :arrow_down: |\n| Library/ClassMethod.php | 50.16% <0%> (+0.64%) | 371% <0%> (\u00f8) | :arrow_down: |\n| Library/CodePrinter.php | 54.16% <0%> (+1.38%) | 23% <0%> (\u00f8) | :arrow_down: |\n| Library/functions.php | 43.95% <0%> (+2.19%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aeeebf5...06ffbfa. Read the comment docs.\n. # Codecov Report\nMerging #1771 into development will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1771   +/-\n==============================================\n  Coverage          43.12%   43.12%         \n  Complexity          8019     8019         \n==============================================\n  Files                528      528         \n  Lines              42081    42081         \n==============================================\n  Hits               18149    18149         \n  Misses             23932    23932\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2382e2f...a879d04. Read the comment docs.\n. # Codecov Report\nMerging #1772 into development will increase coverage by 0.03%.\nThe diff coverage is 73.07%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1772      +/-\n=================================================\n+ Coverage          43.12%   43.16%   +0.03%   \n+ Complexity          8019     8010       -9   \n=================================================\n  Files                528      527       -1   \n  Lines              42081    42064      -17   \n=================================================\n+ Hits               18149    18156       +7   \n+ Misses             23932    23908      -24\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Compiler.php | 61.57% <73.07%> (+0.08%) | 297 <8> (+4) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5d79237...d4e7944. Read the comment docs.\n. # Codecov Report\nMerging #1773 into master will increase coverage by 0.52%.\nThe diff coverage is 41.25%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1773      +/-\n============================================\n+ Coverage     42.63%   43.16%   +0.52%   \n+ Complexity     8018     8010       -8   \n============================================\n  Files           528      527       -1   \n  Lines         42049    42064      +15   \n============================================\n+ Hits          17928    18156     +228   \n+ Misses        24121    23908     -213\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/CompilerFile.php | 64.2% <\u00f8> (+3.11%) | 154 <0> (\u00f8) | :arrow_down: |\n| Library/ClassDefinition.php | 46.84% <19.04%> (+17.99%) | 271 <0> (+1) | :arrow_up: |\n| Library/Compiler.php | 61.57% <65.78%> (+1.06%) | 297 <8> (+4) | :arrow_up: |\n| Library/Passes/StaticTypeInference.php | 38.09% <0%> (+0.28%) | 222% <0%> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine3/Backend.php | 18.45% <0%> (+0.45%) | 192% <0%> (\u00f8) | :arrow_down: |\n| Library/ClassMethod.php | 50.16% <0%> (+0.64%) | 371% <0%> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine2/Backend.php | 17.46% <0%> (+0.66%) | 370% <0%> (\u00f8) | :arrow_down: |\n| Library/CodePrinter.php | 54.16% <0%> (+1.38%) | 23% <0%> (\u00f8) | :arrow_down: |\n| Library/Statements/ReturnStatement.php | 76.19% <0%> (+2.04%) | 68% <0%> (\u00f8) | :arrow_down: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 641bd98...662dd9c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (development@de96377). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1777   +/-\n==============================================\n  Coverage               ?   43.16%         \n  Complexity             ?     8010         \n==============================================\n  Files                  ?      527         \n  Lines                  ?    42064         \n  Branches               ?        0         \n==============================================\n  Hits                   ?    18156         \n  Misses                 ?    23908         \n  Partials               ?        0\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de96377...b661643. Read the comment docs.\n. # Codecov Report\nMerging #1780 into development will decrease coverage by 0.03%.\nThe diff coverage is 3.92%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1780      +/-\n=================================================\n- Coverage          43.16%   43.12%   -0.04%   \n- Complexity          8010     8017       +7   \n=================================================\n  Files                527      527            \n  Lines              42064    42100      +36   \n=================================================\n  Hits               18156    18156            \n- Misses             23908    23944      +36\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Logger/Formatter/CompilerFormatter.php | 9.37% <0%> (-2.87%) | 22 <9> (+6) | |\n| Library/ClassDefinition.php | 46.84% <0%> (\u00f8) | 271 <0> (\u00f8) | :arrow_down: |\n| Library/Expression/StaticConstantAccess.php | 0% <0%> (\u00f8) | 24 <0> (\u00f8) | :arrow_down: |\n| Library/Console/Command/BuildCommand.php | 68% <100%> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Compiler.php | 61.38% <16.66%> (-0.2%) | 298 <0> (+1) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 061442d...0a7484c. Read the comment docs.\n. # Codecov Report\nMerging #1782 into development will decrease coverage by 0.01%.\nThe diff coverage is 11.42%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1782      +/-\n=================================================\n- Coverage          43.12%   43.11%   -0.02%   \n- Complexity          8017     8023       +6   \n=================================================\n  Files                527      527            \n  Lines              42100    42122      +22   \n=================================================\n+ Hits               18156    18159       +3   \n- Misses             23944    23963      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Console/Command/CleanCommand.php | 23.07% <0%> (-26.93%) | 7 <0> (+3) | |\n| Library/FileSystem/HardDisk.php | 54.66% <100%> (+3.98%) | 31 <0> (+1) | :arrow_up: |\n| Library/Console/Command/FullCleanCommand.php | 23.8% <6.66%> (-16.2%) | 6 <1> (+2) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b588dd9...dc723a2. Read the comment docs.\n. # Codecov Report\nMerging #1786 into development will decrease coverage by 0.01%.\nThe diff coverage is 55.11%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1786      +/-\n=================================================\n- Coverage          43.11%   43.09%   -0.02%   \n- Complexity          8023     8033      +10   \n=================================================\n  Files                527      528       +1   \n  Lines              42122    42174      +52   \n=================================================\n+ Hits               18159    18176      +17   \n- Misses             23963    23998      +35\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Exception/InvalidTypeException.php | 0% <0%> (\u00f8) | 1 <1> (?) | |\n| Library/Console/Command/GenerateCommand.php | 51.61% <0%> (-32.6%) | 6 <0> (+2) | |\n| Library/Operators/Other/RangeInclusiveOperator.php | 0% <0%> (\u00f8) | 3 <0> (\u00f8) | :arrow_down: |\n| Library/ClassProperty.php | 34.02% <50%> (\u00f8) | 73 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/ReturnStatement.php | 70.87% <65.38%> (-5.32%) | 75 <0> (+7) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7daf60...187f470. Read the comment docs.\n. # Codecov Report\nMerging #1787 into development will decrease coverage by 0.12%.\nThe diff coverage is 17.97%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1787      +/-\n=================================================\n- Coverage          43.09%   42.97%   -0.13%   \n- Complexity          8033     8034       +1   \n=================================================\n  Files                528      528            \n  Lines              42174    42319     +145   \n=================================================\n+ Hits               18176    18187      +11   \n- Misses             23998    24132     +134\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Call.php | 3.54% <0%> (-0.09%) | 120 <0> (\u00f8) | |\n| Library/StaticCall.php | 0% <0%> (\u00f8) | 120 <16> (\u00f8) | :arrow_down: |\n| Library/Expression/StaticConstantAccess.php | 0% <0%> (\u00f8) | 24 <0> (\u00f8) | :arrow_down: |\n| Library/ClassMethod.php | 50.1% <0%> (-0.06%) | 372 <0> (+1) | |\n| Library/CompilerFile.php | 64.2% <100%> (\u00f8) | 154 <13> (\u00f8) | :arrow_down: |\n| Library/ArgInfoDefinition.php | 94.38% <100%> (\u00f8) | 46 <0> (\u00f8) | :arrow_down: |\n| Library/FunctionDefinition.php | 75.67% <100%> (\u00f8) | 16 <8> (\u00f8) | :arrow_down: |\n| Library/MethodCall.php | 18.58% <8.62%> (-4.38%) | 152 <0> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4c62711...5c326a4. Read the comment docs.\n. # Codecov Report\nMerging #1788 into development will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1788      +/-\n=================================================\n- Coverage          42.97%   42.97%   -0.01%   \n  Complexity          8034     8034            \n=================================================\n  Files                528      528            \n  Lines              42319    42321       +2   \n=================================================\n  Hits               18187    18187            \n- Misses             24132    24134       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Types/AbstractType.php | 0% <0%> (\u00f8) | 10 <8> (\u00f8) | :arrow_down: |\n| Library/Types/IntType.php | 0% <0%> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n| Library/Types/DoubleType.php | 0% <0%> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n| Library/Types/CharType.php | 0% <0%> (\u00f8) | 2 <0> (\u00f8) | :arrow_down: |\n| Library/Types/StringType.php | 0% <0%> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n| Library/Types/ArrayType.php | 0% <0%> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| Library/Types/IstringType.php | 0% <0%> (\u00f8) | 1 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b57940a...c778d96. Read the comment docs.\n. # Codecov Report\nMerging #1789 into development will increase coverage by 0.25%.\nThe diff coverage is 94.27%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1789      +/-\n=================================================\n+ Coverage          42.97%   43.22%   +0.25%   \n- Complexity          8034     8144     +110   \n=================================================\n  Files                528      548      +20   \n  Lines              42327    42534     +207   \n=================================================\n+ Hits               18188    18385     +197   \n- Misses             24139    24149      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/FunctionLike/ReturnType/Plus.php | 0% <0%> (\u00f8) | 3 <3> (?) | |\n| ...ctionLike/ReturnType/Specification/IsAnnotated.php | 0% <0%> (\u00f8) | 1 <1> (?) | |\n| Library/FunctionLike/ReturnType/Not.php | 100% <100%> (\u00f8) | 2 <2> (?) | |\n| ...y/FunctionLike/ReturnType/Specification/IsReal.php | 100% <100%> (\u00f8) | 1 <1> (?) | |\n| Library/FunctionLike/ReturnType/RealType.php | 100% <100%> (\u00f8) | 8 <8> (?) | |\n| ...y/FunctionLike/ReturnType/Specification/IsVoid.php | 100% <100%> (\u00f8) | 2 <2> (?) | |\n| Library/FunctionLike/ReturnType/CastHint.php | 100% <100%> (\u00f8) | 8 <8> (?) | |\n| ...nctionLike/ReturnType/Specification/ObjectLike.php | 100% <100%> (\u00f8) | 3 <3> (?) | |\n| ...ionLike/ReturnType/Specification/IntCompatible.php | 100% <100%> (\u00f8) | 8 <8> (?) | |\n| ...tionLike/ReturnType/Specification/IsCollection.php | 100% <100%> (\u00f8) | 2 <2> (?) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ad0ee68...77f0bc2. Read the comment docs.\n. # Codecov Report\nMerging #1795 into master will decrease coverage by 0.19%.\nThe diff coverage is 28.46%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1795     +/-\n===========================================\n- Coverage     43.16%   42.97%   -0.2%   \n- Complexity     8010     8034     +24   \n===========================================\n  Files           527      528      +1   \n  Lines         42064    42327    +263   \n===========================================\n+ Hits          18156    18188     +32   \n- Misses        23908    24139    +231\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ibrary/Optimizers/FunctionCall/MemstrOptimizer.php | 0% <\u00f8> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine2/Backend.php | 17.46% <\u00f8> (\u00f8) | 370 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine2/StringsManager.php | 93.75% <\u00f8> (\u00f8) | 11 <0> (\u00f8) | :arrow_down: |\n| .../Optimizers/FunctionCall/MethodExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| Library/Passes/StaticTypeInference.php | 38.09% <\u00f8> (\u00f8) | 222 <0> (\u00f8) | :arrow_down: |\n| ...brary/Optimizers/FunctionCall/ImplodeOptimizer.php | 0% <\u00f8> (\u00f8) | 7 <0> (\u00f8) | :arrow_down: |\n| Library/Backends/ZendEngine3/Backend.php | 18.45% <\u00f8> (\u00f8) | 192 <0> (\u00f8) | :arrow_down: |\n| ...ibrary/Statements/Let/StaticPropertyArrayIndex.php | 0% <\u00f8> (\u00f8) | 20 <0> (\u00f8) | :arrow_down: |\n| ...ptimizers/FunctionCall/FunctionExistsOptimizer.php | 0% <\u00f8> (\u00f8) | 6 <0> (\u00f8) | :arrow_down: |\n| Library/Statements/Let/StaticProperty.php | 0% <\u00f8> (\u00f8) | 53 <0> (\u00f8) | :arrow_down: |\n| ... and 53 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4495e75...ad0ee68. Read the comment docs.\n. # Codecov Report\nMerging #1800 into development will decrease coverage by <.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1800      +/-\n=================================================\n- Coverage          43.22%   43.22%   -0.01%   \n  Complexity          8144     8144            \n=================================================\n  Files                548      548            \n  Lines              42534    42532       -2   \n=================================================\n- Hits               18385    18384       -1   \n+ Misses             24149    24148       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Compiler.php | 61.38% <100%> (\u00f8) | 298 <0> (\u00f8) | :arrow_down: |\n| Library/functions.php | 43.82% <50%> (-0.14%) | 0 <0> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2ff34db...47c0c44. Read the comment docs.\n. # Codecov Report\nMerging #1809 into development will increase coverage by 0.06%.\nThe diff coverage is 65.48%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1809      +/-\n=================================================\n+ Coverage          43.22%   43.28%   +0.06%   \n  Complexity          8144     8144            \n=================================================\n  Files                548      548            \n  Lines              42532    42542      +10   \n=================================================\n+ Hits               18383    18416      +33   \n+ Misses             24149    24126      -23\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test/optimizers/strreplace.zep.c | 17.12% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/fibonnaci.zep.c | 66.92% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/factorial.zep.c | 7.14% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/assign.zep.c | 43.32% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/spectralnorm.zep.c | 1.25% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/Compiler.php | 61.38% <0%> (\u00f8) | 298 <0> (\u00f8) | :arrow_down: |\n| Library/Code/Builder/Struct.php | 0% <0%> (\u00f8) | 36 <0> (\u00f8) | :arrow_down: |\n| ext/test/resourcetest.zep.c | 78.84% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/range.zep.c | 10.34% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/quantum.zep.c | 1.79% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0f03447...848a22c. Read the comment docs.\n. # Codecov Report\nMerging #1810 into development will increase coverage by 0.1%.\nThe diff coverage is 51.57%.\n\n\n```diff\n@@               Coverage Diff                @@\ndevelopment    #1810     +/-\n================================================\n+ Coverage          33.18%   33.29%   +0.1%   \n- Complexity          8143     8165     +22   \n================================================\n  Files                550      552      +2   \n  Lines              41606    41712    +106   \n================================================\n+ Hits               13807    13888     +81   \n- Misses             27799    27824     +25\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test/optimizers/strreplace.zep.c | 17.12% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/fibonnaci.zep.c | 66.92% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/resourcetest.zep.c | 78.84% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/factorial.zep.c | 7.14% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/Console/Command/CompileCommand.php | 0% <0%> (\u00f8) | 6 <0> (+1) | :arrow_up: |\n| ext/test/spectralnorm.zep.c | 1.25% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/CompilerFile.php | 7.97% <0%> (\u00f8) | 154 <0> (\u00f8) | :arrow_down: |\n| ext/test/functional.zep.c | 10% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/range.zep.c | 10.34% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/quantum.zep.c | 1.79% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ad604a2...eff6302. Read the comment docs.\n. # Codecov Report\nMerging #1815 into development will increase coverage by 0.06%.\nThe diff coverage is 96%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1815      +/-\n=================================================\n+ Coverage          43.22%   43.28%   +0.06%   \n  Complexity          8144     8144            \n=================================================\n  Files                548      548            \n  Lines              42532    42542      +10   \n=================================================\n+ Hits               18383    18416      +33   \n+ Misses             24149    24126      -23\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Code/Builder/Struct.php | 0% <0%> (\u00f8) | 36 <0> (\u00f8) | :arrow_down: |\n| Library/Compiler.php | 61.38% <0%> (\u00f8) | 298 <0> (\u00f8) | :arrow_down: |\n| ext/test.c | 100% <100%> (+9.28%) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/globals.zep.c | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/Config.php | 76.04% <0%> (+1.04%) | 42% <0%> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7db702f...33fe9ed. Read the comment docs.\n. # Codecov Report\nMerging #1816 into development will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@                Coverage Diff                @@\ndevelopment    #1816      +/-\n=================================================\n+ Coverage          43.28%   43.35%   +0.06%   \n  Complexity          8145     8145            \n=================================================\n  Files                548      550       +2   \n  Lines              42545    42583      +38   \n=================================================\n+ Hits               18416    18460      +44   \n+ Misses             24129    24123       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test.c | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/mcalldynamic.zep.c | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/mcall/caller.zep.c | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ext/test/10__closure.zep.c | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ext/kernel/object.c | 45.96% <0%> (+1.05%) | 0% <0%> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb6d407...3296115. Read the comment docs.\n. # Codecov Report\nMerging #1817 into development will not change coverage.\nThe diff coverage is 95.83%.\n\n\n```diff\n@@              Coverage Diff               @@\ndevelopment    #1817   +/-\n==============================================\n  Coverage          43.36%   43.36%         \n  Complexity          8143     8143         \n==============================================\n  Files                550      550         \n  Lines              42604    42604         \n==============================================\n  Hits               18477    18477         \n  Misses             24127    24127\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test/fetchtest.zep.c | 40.15% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/assign.zep.c | 43.4% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/globals/session/base.zep.c | 98.55% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/globals/env.zep.c | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/globals/post.zep.c | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/router.zep.c | 40.26% <75%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/kernel/main.c | 65.25% <90%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a5dcb6...4b39b83. Read the comment docs.\n. # Codecov Report\nMerging #1820 into development will decrease coverage by 10.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                Coverage Diff                 @@\ndevelopment    #1820       +/-\n==================================================\n- Coverage          43.36%   33.21%   -10.16%   \n  Complexity          8143     8143             \n==================================================\n  Files                550      550             \n  Lines              42604    41525     -1079   \n==================================================\n- Hits               18477    13792     -4685   \n- Misses             24127    27733     +3606\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Console/Command/ZflagsAwareTrait.php | 0% <0%> (-100%) | 1% <0%> (\u00f8) | |\n| Library/Console/Command/CompileCommand.php | 0% <0%> (-100%) | 5% <0%> (\u00f8) | |\n| ...rary/Console/Command/DevelopmentModeAwareTrait.php | 0% <0%> (-100%) | 3% <0%> (\u00f8) | |\n| Library/CompilationContext.php | 0% <0%> (-100%) | 3% <0%> (\u00f8) | |\n| Library/Variable/Globals.php | 0% <0%> (-100%) | 1% <0%> (\u00f8) | |\n| Library/ArgInfoDefinition.php | 0% <0%> (-94.39%) | 46% <0%> (\u00f8) | |\n| Library/Backends/ZendEngine2/StringsManager.php | 0% <0%> (-93.75%) | 11% <0%> (\u00f8) | |\n| Library/Backends/ZendEngine3/StringsManager.php | 0% <0%> (-93.69%) | 11% <0%> (\u00f8) | |\n| Library/BranchManager.php | 0% <0%> (-91.31%) | 8% <0%> (\u00f8) | |\n| Library/Documentation/DocblockParser.php | 0% <0%> (-91.09%) | 41% <0%> (\u00f8) | |\n| ... and 78 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5317929...a1da30f. Read the comment docs.\n. # Codecov Report\nMerging #1821 into master will decrease coverage by 9.67%.\nThe diff coverage is 68.8%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1821      +/-\n============================================\n- Coverage     42.97%   33.29%   -9.68%   \n- Complexity     8034     8165     +131   \n============================================\n  Files           528      552      +24   \n  Lines         42327    41712     -615   \n============================================\n- Hits          18188    13888    -4300   \n- Misses        24139    27824    +3685\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ext/test/quantum.zep.c | 1.79% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| Library/FunctionLike/ReturnType/Plus.php | 0% <0%> (\u00f8) | 3 <3> (?) | |\n| Library/Stubs/Generator.php | 0% <0%> (\u00f8) | 65 <0> (\u00f8) | :arrow_down: |\n| Library/Console/Command/CompileCommand.php | 0% <0%> (-100%) | 6 <0> (+1) | |\n| Library/Logger/Formatter/CompilerFormatter.php | 4.68% <0%> (-4.69%) | 22 <0> (\u00f8) | |\n| Library/FunctionDefinition.php | 0% <0%> (-75.68%) | 9 <0> (-7) | |\n| ext/test/functional.zep.c | 10% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/resourcetest.zep.c | 78.84% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/range.zep.c | 10.34% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ext/test/builtin/arraymethods.zep.c | 4.61% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 187 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 209fe3f...3a98844. Read the comment docs.\n. # Codecov Report\nMerging #1826 into master will decrease coverage by 0.25%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #1826      +/-\n============================================\n- Coverage     33.29%   33.03%   -0.26%   \n- Complexity     8165     8189      +24   \n============================================\n  Files           552      552            \n  Lines         41712    42327     +615   \n============================================\n+ Hits          13888    13984      +96   \n- Misses        27824    28343     +519\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Variable.php | 0% <0%> (\u00f8) | 153 <1> (+1) | :arrow_up: |\n| Library/Backends/ZendEngine3/Backend.php | 1.22% <0%> (-0.14%) | 200 <5> (+10) | |\n| Library/Backends/ZendEngine2/Backend.php | 0% <0%> (\u00f8) | 378 <0> (+8) | :arrow_up: |\n| Library/Expression/NativeArray.php | 0% <0%> (\u00f8) | 105 <0> (+5) | :arrow_up: |\n| ext/test/functionexists.zep.c | 82.66% <0%> (-17.34%) | 0% <0%> (\u00f8) | |\n| ext/test/globals/session/base.zep.c | 83.33% <0%> (-15.22%) | 0% <0%> (\u00f8) | |\n| ext/test/oo.zep.c | 86.05% <0%> (-11.7%) | 0% <0%> (\u00f8) | |\n| ext/test/requires.zep.c | 68% <0%> (-11.27%) | 0% <0%> (\u00f8) | |\n| ext/test/regexdna.zep.c | 90.37% <0%> (-9.63%) | 0% <0%> (\u00f8) | |\n| ext/test/router.zep.c | 31.79% <0%> (-8.47%) | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e5e7ff8...b661a58. Read the comment docs.\n. # Codecov Report\nMerging #1829 into development will increase coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@               Coverage Diff                @@\ndevelopment   #1829      +/-\n================================================\n+ Coverage          33.03%   33.1%   +0.06%   \n- Complexity          8189    8191       +2   \n================================================\n  Files                552     552            \n  Lines              42327   42359      +32   \n================================================\n+ Hits               13984   14024      +40   \n+ Misses             28343   28335       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| Library/Operators/Other/InstanceOfOperator.php | 0% <0%> (\u00f8) | 20 <2> (+2) | :arrow_up: |\n| ext/kernel/object.c | 47.93% <0%> (+1.65%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ext/test/instanceoff.zep.c | 92.4% <0%> (+15.93%) | 0% <0%> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d6861da...9bb7296. Read the comment docs.\n. \n",
    "Fisiu": "@sergeyklay \nre2c-1.0.2. ",
    "Jammmmm": "As I said, I've added the extension to PHP, and I've tested to ensure that works fine (zephir_parse_file () works).\nI don't have a \"zephir\" command though, which is why I was asking if a prebuilt Windows binary exists.\nIs the only way to get this command to build php-zephir-parser from scratch?\nAlternatively, and probably a better option, is there a function in the PHP extension to generate the C source? eg. zephir_generate_c () ?. I did read. The page details how to build the binary, hence why I asked \"are there prebuilt Windows binaries available\"\nSo no prebuilt Windows binary exists. Gotcha.. \"zephir generate\" implies there's a command involved, which is why I initially thought it would need to be built.\nI've checked the repo and have found a \"bin\" directory that contains \"zephir\" and \"zephir.bat\". I didn't know that zephir was not something that needed to be built, but instead was interpreted itself.\nSorry for the confusion.. ",
    "3amprogrammer": "No, I haven't. I'll try it out and let you know. Probably on Monday as I have busy weekend.. ",
    "stamster": "You have xdebug. Have you tried to disable it to see if the problem persists?\n. ",
    "vmohanraaj": "Thank God and @sergeyklay. \nBefore that I got \n admin@ubuntu:~$ php --ri \"Zephir Parser\"\nExtension 'Zephir Parser' not present.\nNow added the line\n ini\n[Zephir Parser]\nextension=zephir_parser.so\nto /etc/php/7.0/cli/php.ini. \nIts now working. \nYou saved me lot.\nHappy Zephir coding.\nThis answer will definitely helpful to many people in world for those who are all facing same kind of issue.. ",
    "chrysanthemum": "like this in \"fcall.zep\" file\n```zep\nfunction fun1()  //  has not parameter\n{\n    echo \"someting\";\n}\nclass Fcall\n{\n... \n```. @sergeyklay thinks for your help!  is it correct now?. @chilimatic I was almost mistaken by you. $parameters->getParameters() Be sure to execute this method.. ",
    "zacek": "I've added workaround for \\Phalcon\\Mvc\\View\\Engine\\Volt to https://github.com/phalcon/cphalcon/issues/12176. This defect affects the Phalcon volt template engine - variables assigned in the template, e.g.\n$this->view->param = 'value';\noverwrite local $param variable when the page gets rendered.\nAs this defect seems to be quite difficult to fix I've published my workaround in the related defect for those who need the fix ASAP. The fix is just to move the problematic code (method render()) from Volt class in zephir to PHP. This seems to work properly. So whoever needs to use the volt templating and cannot wait for the fix can simply extend the Volt class as proposed in the workaround and use the extended class.. the code of the extended class is in my last comment to this defect: phalcon/cphalcon#12176\nI've mentioned it here just for completeness as this defect (in zephir) is the root cause of the problem in the Volt class (in cphalcon).. ",
    "AlexNDRmac": "Yes... I have some little progress. Now I trying to implement symbol table.. Regexp modification in Issue1404 also must be added into Zephir Lang Core. @sergeyklay - if it better, Ill add modified Regexp into Core before this pull.. cc @dreamsxin Now you can see what I meant when told about fix inLibrary/Compiler.phpThere is Test with Expected result, so we can use it as target point.\nTravis failed buld: https://travis-ci.org/phalcon/zephir/jobs/495101242. @dreamsxin you were right :)  I did't do the tests correctly. Thank you for your participation.. This is not fixes #1604. Because its not about how ini Entry pass toCompiler. Issue #1604 - more wider then just fix PHP code as Compiler pre-processes. This issue requires some changes in C-code generation. So, if you will test your code changes, you can see that duplicates of namespaces are still present inphpinfo()as in CLI output and as in HTML output.. As I said... for this issue we need change C-code generation also. I tested fix such as you provided and saw that some variables aren't show inphpinfo()`.\nFor example: /ext/test.c\nc\nPHP_INI_BEGIN()\n    STD_PHP_INI_BOOLEAN(\"test.test.my_setting_1\", \"0\", PHP_INI_ALL, OnUpdateBool, test.my_setting_1, zend_test_globals, test_globals)\n    ...\nPHP_INI_END(). Everything fixed. ",
    "ger-hard": "I (already) found the solution in the \nLibrary/Exception/ExceptionExtraAwareTrait.php on line 48.  \n    $extra = $this->getExtra();\n\nI replaced that line with:\n   $extra = $this->getExtra();\n\n    if( !isset( $extra['file'] ) && isset($extra['expr'] ) )\n    {\n        $extra = $extra['expr'];\n    }\n\nThe $this->getExtra() structure in the Exception thrown in line 1440 of Library/Backends/ZendEngine2/Backend.php\nhas an key 'expr' with the data which was required to format the proper error message.\nAfter that I (re)install the compiler and when I ran the zephir build, I got an proper message with in which zep file and line the concat error was. \nHopes this helps to make the zephir build a little little bit better :)\nAnd thanks to the Zephir team for the good work!\n. ",
    "C0DE8": "I got this error too:\n```zephir\n$ zephir -vvv build\n[ERROR] Unknown type: concat\n```\nclass (with ERROR):\n```zephir\nnamespace Test;\nclass Foo\n{\n    public function getFoo(string a, string b) -> string\n    {\n        var half     = floor(strlen(b) / 2);\n    // it seems that this line cause the error; but why?\n    var combined = a . substr(b, 0, half) . a . substr(b, half + 1) . a;\n\n    // do stuff\n\n    return combined;\n}\n\n}\n```\nclass (without error):\n```zephir\nnamespace Test;\nclass Foo\n{\n    public function getFoo(string a, string b) -> string\n    {\n        var half     = floor(strlen(b) / 2);\n    // do stuff with \"combined\n\n    return a . substr(b, 0, half) . a . substr(b, half + 1) . a;\n}\n\n}\n```\nI need to combine the strings first and then do stuff with it, before returning it.\nWhats wrong?. So I've got a solution  :-)\n```zephir\nnamespace Test;\nclass Foo\n{\n    public function getFoo(string a, string b) -> string\n    {\n        var half     = floor(strlen(b) / 2);\n    // it seems that in variable initialization you could not concatenate strings directly\n    var combined = \"\";\n\n    // on mutating variable, there is no problem\n    let combined = a . substr(b, 0, half) . a . substr(b, half + 1) . a;\n\n    // do stuff\n\n    return combined;\n}\n\n}\n```. ",
    "ankitmlive": "I have find a solution for this,may be it not the best but working for me for php extension.\nI am taking all my boolean variable as var  and then using regex for checking it.\n```\nvar status; //define\nif  preg_match(\"/^[0,1]{1}$/\", status)\n {\n                // your code goes here.. only will pass 0 or 1\n }\n```\n. ",
    "symfonyluxury": "just the same to official sample code ....\nzephir:\n````\nnamespace Utils;\nclass Greeting\n{\npublic static function say()\n{\n    echo \"hello world!\";\n}\n\n}\n`\n**php**\n<?php\necho Utils\\Greeting::say(), \"\\n\";\nyes, I've tested in PHP7.2, its fine,theres no memory problem\n. its standard code, i guess hard to determine, would you suggest me some tool to detect the memory leak?. here it is:\n==26661== Memcheck, a memory error detector\n==26661== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==26661== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==26661== Command: /usr/local/data/php/sbin/php-fpm --daemonize --fpm-config /usr/local/data/php/etc/php-fpm.conf --pid /usr/local/data/php/var/run/php-fpm.pid\n==26661== Parent PID: 26660\n==26661== \n==26661== \n==26661== HEAP SUMMARY:\n==26661==     in use at exit: 622,505 bytes in 135 blocks\n==26661==   total heap usage: 27,010 allocs, 26,875 frees, 5,081,459 bytes allocated\n==26661== \n==26661== 24 bytes in 1 blocks are definitely lost in loss record 35 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3DF77F: ???\n==26661==    by 0xB3B5828: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 680 (24 direct, 656 indirect) bytes in 1 blocks are definitely lost in loss record 96 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E0DB9: ???\n==26661==    by 0xB3C1A28: ???\n==26661==    by 0xB3B5836: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 680 (24 direct, 656 indirect) bytes in 1 blocks are definitely lost in loss record 97 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E0DB9: ???\n==26661==    by 0xB3C6E08: ???\n==26661==    by 0xB3B5844: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 680 (24 direct, 656 indirect) bytes in 1 blocks are definitely lost in loss record 98 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E0DB9: ???\n==26661==    by 0xB3C6E25: ???\n==26661==    by 0xB3B5844: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 2,080 (32 direct, 2,048 indirect) bytes in 1 blocks are definitely lost in loss record 105 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E3639: ???\n==26661==    by 0xB3D2C7E: ???\n==26661==    by 0xB3B583D: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 8,224 (32 direct, 8,192 indirect) bytes in 1 blocks are definitely lost in loss record 110 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E3639: ???\n==26661==    by 0xB3DF577: ???\n==26661==    by 0xB3B5828: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 65,568 (32 direct, 65,536 indirect) bytes in 1 blocks are definitely lost in loss record 112 of 113\n==26661==    at 0x4C281BA: malloc (vg_replace_malloc.c:298)\n==26661==    by 0xB3E3639: ???\n==26661==    by 0xB3D2C64: ???\n==26661==    by 0xB3B583D: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== 524,288 bytes in 1 blocks are definitely lost in loss record 113 of 113\n==26661==    at 0x4C26F1F: calloc (vg_replace_malloc.c:710)\n==26661==    by 0xB3B5908: ???\n==26661==    by 0x838313: zend_startup_module_ex (zend_API.c:1797)\n==26661==    by 0x8383C8: zend_startup_module_int (zend_API.c:1810)\n==26661==    by 0x841B92: zend_hash_apply (zend_hash.c:641)\n==26661==    by 0x83B8B9: zend_startup_modules (zend_API.c:1930)\n==26661==    by 0x7D4744: php_module_startup (main.c:2323)\n==26661==    by 0x8E2104: php_cgi_startup (fpm_main.c:865)\n==26661==    by 0x8E2923: main (fpm_main.c:1832)\n==26661== \n==26661== LEAK SUMMARY:\n==26661==    definitely lost: 524,480 bytes in 8 blocks\n==26661==    indirectly lost: 77,744 bytes in 12 blocks\n==26661==      possibly lost: 0 bytes in 0 blocks\n==26661==    still reachable: 20,281 bytes in 115 blocks\n==26661==         suppressed: 0 bytes in 0 blocks\n==26661== Reachable blocks (those to which a pointer was found) are not shown.\n==26661== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==26661== \n==26661== For counts of detected and suppressed errors, rerun with: -v\n==26661== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 4 from 4)\n```\n==26663== Memcheck, a memory error detector\n==26663== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==26663== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==26663== Command: /usr/local/data/php/sbin/php-fpm --daemonize --fpm-config /usr/local/data/php/etc/php-fpm.conf --pid /usr/local/data/php/var/run/php-fpm.pid\n==26663== Parent PID: 26662\n==26663== \n==26663== \n==26663== Process terminating with default action of signal 15 (SIGTERM)\n==26663==    at 0x7A024E0: __accept_nocancel (in /lib64/libc-2.12.so)\n==26663==    by 0x8DAAD5: fcgi_accept_request (fastcgi.c:852)\n==26663==    by 0x8E2AB4: main (fpm_main.c:1916)\n==26663== \n==26663== HEAP SUMMARY:\n==26663==     in use at exit: 4,928,557 bytes in 25,588 blocks\n==26663==   total heap usage: 27,339 allocs, 1,751 frees, 5,122,390 bytes allocated\n==26663==\nany clue? \"definitely\" is that mean memory leak?\n. i guess theres some problem in startup / module init stage:\n==14139== 1,600 bytes in 25 blocks are definitely lost in loss record 3 of 3\n==14139==    at 0x4C27A2E: malloc (vg_replace_malloc.c:270)\n==14139==    by 0x6B1C40: _safe_malloc (zend_alloc.h:97)\n==14139==    by 0xCCFE516: ???\n==14139==    by 0xCCFCC57: ???\n==14139==    by 0x6DCE9F: zend_activate_modules (zend_API.c:2459)\n==14139==    by 0x6788B9: php_request_startup (main.c:1686)\n==14139==    by 0x77F1AD: do_cli (php_cli.c:969)\n==14139==    by 0x77FF77: main (php_cli.c:1382)\nwhen I comment zephir extension (mention above,but remain zephir_parser.so),theres no memory leak report. ",
    "zhangyaohui1986": "I found the compiler.php  on line: 862\n```\n$extension = str_replace('.php', '', $file);\n    if (!extension_loaded($extension)) {\n            require $file->getRealPath();             \n    }\n````\nwhen i change require  to require_once,it is not working. so i check my php extension,\nphp -m | grep phalcon\nphalcon7\nIt is phalcon7 but not phalcon ,it is so confusing ... @danhunsaker ,shout it be a bug to fix?. ",
    "huangjuyuan": "Hi\uff0c thanks for you reply.\nindeed\uff0cmy php-config is in /usr/local/php/bin/php-config really, but use sudo zephir build --with-php-config=/usr/local/php/bin/php-config does not work.\nBut I when use ln\nsudo ln -sf /usr/local/php/bin/php-config /usr/bin/php-config\nsudo zephir build\nIt compile success.\nPreparing for PHP compilation...\nPreparing configuration file...\nCompiling...\nInstalling...\nExtension installed!\nAdd extension=utils.so to your php.ini\nDon't forget to restart your web server\nthanks for your reply, and it solve my problem.\n\u03c6(\u2267\u03c9\u2266*)\u266a . ",
    "piotrkardasz": "Thanks for reply I'm trying to build optimizer like in docs. \nBut while i trying do that php while parse test.php crash\nPlease, Could You look at \nhttps://github.com/piotrkardasz/zaphirsimple.git\nPHP 7.1.19 (cli) ( NTS MSVC14 (Visual C++ 2015) x64 )@W10\ntest.php throw this or crash it look like variable overflow problem?\nstart\n0\n-685785296\nend\n. ",
    "jgmdev": "I think the best option would be the second one \"Detect variables with that name, and rename them internally.\". ",
    "mikachou": "I forgot to precise : the same error message is displayed with error : \nSyntax error in xxx/yyy on line zzz\nclass RBF\n--------^. ",
    "navisoft": "@streetlist I don't see any equivalent of preg_match function. Using it like PHP function.. The class B is same the class A. I just updated the question.. ",
    "phith0n": "Yes, your understanding is correct.\nWith this feature, I can modify the built-in function, extend the web application without editing the php code.\nI see that there was a extension runkit, supported this feature: http://php.net/manual/en/function.runkit-function-redefine.php\nBut it is no longer maintained, so I want to know if you support it.. ",
    "fire-falcon": "@sergeyklay  This is my full log from compile_errors.log file:\nfull log\n. @sergeyklay  config is here. ",
    "zuozhehao": "@sergeyklay . ",
    "nawawi": "\n@nawawi We don't add changes directly to stable branches or master. Could you please send this PR to the 0.10.x branch? I'll cherry-pick it to all required branches later. Also could you provide a small test which covers your changes.\n\nok. noted.. ",
    "benant": "@sergeyklay It works perfectly. Thanks.. ",
    "dly667": "thanks. ",
    "phalcorine": "For question 5 @travis-fyf , you could check out this link: https://docs.zephir-lang.com/. ",
    "RikudouSage": "For example, let's say I have a class named BigNumber for working with large numbers.\nRight now I would need to define methods for additions etc. and use them like this:\n```php\n<?php\n$bigNumber = new BigNumber(10);\n$anotherBigNumber = new BigNumber(10);\n$bigNumber->add($anotherBigNumber); // BigNumber instance with value 20\n$bigNumber->sub($anotherBigNumber); // BigNumber instance with value 0\n// etc.\n```\nWhat I would like to achieve is skip the method call and work with the objects like this:\n```php\n<?php\n$bigNumber = new BigNumber(10);\n$anotherBigNumber = new BigNumber(10);\n$result = $bigNumber + $anotherBigNumber; // BigNumber instance with value 20\n$result = $bigNumber * $anotherBigNumber; // BigNumber instance with value 100\n```\n. ",
    "npfedwards": "Ok some more info\n\nphalcon\nWeb framework delivered as a C-extension for PHP\nphalcon => enabled\nAuthor => Phalcon Team and contributors\nVersion => 3.4.2\nBuild Date => Jan 10 2019 16:45:55\nPowered by Zephir => Version 0.10.14-975ad02db4\nDirective => Local Value => Master Value\nphalcon.db.escape_identifiers => On => On\nphalcon.db.force_casting => Off => Off\nphalcon.orm.cast_on_hydrate => Off => Off\nphalcon.orm.column_renaming => On => On\nphalcon.orm.disable_assign_setters => Off => Off\nphalcon.orm.enable_implicit_joins => On => On\nphalcon.orm.enable_literals => On => On\nphalcon.orm.events => On => On\nphalcon.orm.exception_on_failed_save => Off => Off\nphalcon.orm.ignore_unknown_columns => Off => Off\nphalcon.orm.late_state_binding => Off => Off\nphalcon.orm.not_null_validations => On => On\nphalcon.orm.update_snapshot_on_save => On => On\nphalcon.orm.virtual_foreign_keys => On => On\n\nphp_2019-01-10-164740_Protectorate-of-Grayson.txt\n. Pretty sure it's the first test that loads anything Phalcon.. @sergeyklay Zephir version is above. I'll get on reproducible test case.. @sergeyklay First instantiation of an incubator MongoCollection. Phalcon\\Mvc\\Model does not cause the segfault. https://gist.github.com/npfedwards/df01da6507e127304a41d93ec253af6b. ",
    "zachleigh": "Having the same problem.\nPHP Version: 7.2.12\nPhalcon: Version 3.4.1\nZephir Version: 0.10.10-d1b4cc68d9\nPHPUnit Version: 7.5.2\nFull bt:\n```\n0  0x00007f47eda9be7a in zephir_array_update_zval () from /usr/local/lib/php/extensions/no-debug-non-zts-20170718/phalcon.so\n1  0x00007f47edb2fd40 in zim_Phalcon_Session_Adapter_set () from /usr/local/lib/php/extensions/no-debug-non-zts-20170718/phalcon.so\n2  0x00007f47eebccc15 in xdebug_execute_internal (current_execute_data=0x7f47eee22440, return_value=0x7ffc1b0b6910) at /tmp/pear/temp/xdebug/xdebug.c:2021\n3  0x000000000093cbaf in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:909\n4  execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n5  0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee22390) at /tmp/pear/temp/xdebug/xdebug.c:1912\n6  0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n7  execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n8  0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee21f70) at /tmp/pear/temp/xdebug/xdebug.c:1912\n9  0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n10 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n11 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee21e30) at /tmp/pear/temp/xdebug/xdebug.c:1912\n12 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n13 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n14 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee21990) at /tmp/pear/temp/xdebug/xdebug.c:1912\n15 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n16 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n17 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee21220) at /tmp/pear/temp/xdebug/xdebug.c:1912\n18 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n19 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n20 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee201d0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n21 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n22 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n23 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1f6b0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n24 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n25 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n26 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1f150) at /tmp/pear/temp/xdebug/xdebug.c:1912\n27 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n28 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n29 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1eeb0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n30 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n31 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n32 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1ed20) at /tmp/pear/temp/xdebug/xdebug.c:1912\n33 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n34 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n35 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1eba0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n36 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n37 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n38 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1e790) at /tmp/pear/temp/xdebug/xdebug.c:1912\n39 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n40 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n41 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1d820) at /tmp/pear/temp/xdebug/xdebug.c:1912\n42 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n43 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n44 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1d4b0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n45 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n46 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n47 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1d150) at /tmp/pear/temp/xdebug/xdebug.c:1912\n48 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n49 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n50 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1cb50) at /tmp/pear/temp/xdebug/xdebug.c:1912\n51 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n52 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n53 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1c6a0) at /tmp/pear/temp/xdebug/xdebug.c:1912\n54 0x000000000093d8ec in ZEND_DO_FCALL_SPEC_RETVAL_USED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:1013\n55 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59768\n56 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1c590) at /tmp/pear/temp/xdebug/xdebug.c:1912\n57 0x000000000093cdcc in ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER () at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:888\n58 execute_ex (ex=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:59765\n59 0x00007f47eebcbf21 in xdebug_execute_ex (execute_data=0x7f47eee1c030) at /tmp/pear/temp/xdebug/xdebug.c:1912\n60 0x000000000093f1ce in zend_execute (op_array=op_array@entry=0x7f47eee7d2a0, return_value=return_value@entry=0x0) at /usr/src/php-7.2.12/Zend/zend_vm_execute.h:63776\n61 0x000000000088d813 in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x0, file_count=file_count@entry=3) at /usr/src/php-7.2.12/Zend/zend.c:1502\n62 0x0000000000828cd0 in php_execute_script (primary_file=primary_file@entry=0x7ffc1b0ba3d0) at /usr/src/php-7.2.12/main/main.c:2590\n63 0x00000000009415a9 in do_cli (argc=5, argv=0x2018060) at /usr/src/php-7.2.12/sapi/cli/php_cli.c:1011\n64 0x000000000044863c in main (argc=5, argv=0x2018060) at /usr/src/php-7.2.12/sapi/cli/php_cli.c:1404\n```\n. ",
    "dongasai": "In the rule of \"https://github.com/phalcon/cphalcon/blob/master/.gitignore\" \"ext/kernel, .zep.c, .zep.h\" file is to join a version control, but in the \"https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md\" is not allowed in the version control . ",
    "chang-zhao": "Make a checklist as a part of the development process. Like,\n333. Create the release.\n334. Update docs...\nFor now, I would like to know exactly:\n\nIs Wndows 7 supported properly?\nOr should I use Linux?\n\nOtherwise I shouldn't waste my time.\nThank you.. That is not so. Windows 7 is being supported by the latest PHP.\nhttps://secure.php.net/manual/en/install.windows.requirements.php\nAnyway, with your attitude Zephir seems not worth trying.\nGoodbye.. People might try the software on their desktop OS, and then recompile it on Linux for production. So there is no issue, Windows 7 or not.\nAs for support, I have no idea what special support it would need.\nAnyway, the documentation is messed up, the installation procedure is messed up. First I had to installl MinGW, then it appears it doesn't have the necessary commands, so I had to install MSYS, then it was 32-bit and something not worked, so I had to reinstall MSYS2 with its own connection to MinGW. All that required hours of surfing the internet, as search engines didn't give any ready step-by-step up-to-date instruction. At last, I managed to install re2c and the Zephir parser. Then I had to install VS - who knows which: 2012, 2015, 2017..? I went for 2017, as I need PHP7... I even tried Composer, but when it said my PHP doesnt have GMP extension, and I found no ready dll for it, that was it for me. I can imagine that compiling (first time in my life) a PHP extension for Windows would be just another step in who knows how long procedure of getting Zephir, but I give up.\nWith such docs, installation procedures, developers attitude - I decided Zephir, even though looking super interesting, might be just a huge waste of time with unclear benefits. I better put my efforts in actual development of my software, like before, for now, putting such experiments aside.. ",
    "ruudboon": "Is there a workaround to run Travis non-thread-safe so it's not blocking development? \n@danhunsaker I see your pull here (https://github.com/travis-ci/php-src-builder/pull/24) is this something we have to wait for to get integrated? . ",
    "pejman-hkh": "```php\n<?php\nclass Singleton {\nprivate static $Classes;\n\npublic static function __callStatic($method, $args) {\n    $className = get_called_class();\n\n    return call_user_func_array( array( self::$Classes[ $className ] = @self::$Classes[ $className ]?:( class_exists( $className ) ? new $className() : false ), $method ), $args );\n}\n\n}\nclass Test extends Singleton {\n    protected function Test1() {\n        echo \"Test1\";\n    }\n}\nTest::Test1();\n```. ",
    "ViltusVilks": "Yes, it will be very good, because yield also should be somehow implemented.. Already mentioned in discord - isbool isstring etc macros also can be added.\nif isset X && typeof X === T currently using a lot of in param check.. You can use regular PHP ext constants, i.e. defined in .zep files.. ",
    "dvil88": "I think this is worse than only an array_shift failure. I've wrote some tests and the behavior is totally unexpected:\nZephir:\n```\nnamespace Fail2;\nclass fail2{\n    public dataArray1 = [\n        \"header 1\",\n        \"header 2\",\n        \"header 3\",\n        \"data 1\",\n        \"data 2\",\n        \"data 3\",\n        \"data 4\",\n        \"data 5\",\n        \"data 6\",\n        \"data 7\",\n        \"data 8\"\n    ];\n    protected dataArray2 = [];\n    private dataArray3 = [];\npublic function runTest1(){\n    var info;\n    var headers;\n\n    print_r(this->dataArray1);\n\n    let headers = [];\n    while( true ){\n        let info = array_shift(this->dataArray1);\n\n        if( stripos(info, \"header\") !== false ){\n            let headers[] = info;\n            continue;\n        } else {\n            array_unshift(this->dataArray1, info);\n            break;\n        }\n    }\n\n    print_r(headers);\n    print_r(this->dataArray1);\n}\n\npublic function runTest2(){\n    var info2;\n    var headers2;\n\n    print_r(this->dataArray2);\n\n    let headers2 = [];\n    while( true ){\n        let info2 = array_shift(this->dataArray2);\n\n        if( stripos(info2, \"header\") !== false ){\n            let headers2[] = info2;\n            continue;\n        } else {\n            array_unshift(this->dataArray2, info2);\n            break;\n        }\n    }\n\n    print_r(headers2);\n    print_r(this->dataArray2);\n}\n\npublic function runTest3(){\n    var info3;\n    var headers3;\n\n    print_r(this->dataArray3);\n\n    let headers3 = [];\n    while( true ){\n        let info3 = array_shift(this->dataArray3);\n\n        if( stripos(info3, \"header\") !== false ){\n            let headers3[] = info3;\n            continue;\n        } else {\n            array_unshift(this->dataArray3, info3);\n            break;\n        }\n    }\n\n    print_r(headers3);\n    print_r(this->dataArray3);\n}\n\npublic function setDataArray2(data){\n    let this->dataArray2 = data;\n}\n\npublic function setDataArray3(data){\n    let this->dataArray3 = data;\n}\n\n}\n```\nPHP test code 1:\n```\n<?php\n$dataArray1 = [\n    \"header 1\",\n    \"header 2\",\n    \"header 3\",\n    \"data 1\",\n    \"data 2\",\n    \"data 3\",\n    \"data 4\",\n    \"data 5\",\n    \"data 6\",\n    \"data 7\",\n    \"data 8\"\n];\n$_fail = new Fail2\\fail2();\n$_fail->dataArray = $dataArray;\n$_fail->setDataArray2($dataArray);\n$_fail->setDataArray3($dataArray);\necho PHP_EOL.PHP_EOL.'Test 1 :: Public'.PHP_EOL;\n$_fail->runTest1();\necho PHP_EOL.PHP_EOL.'Test 2 :: setDataArray Protected'.PHP_EOL;\n$_fail->runTest2();\necho PHP_EOL.PHP_EOL.'Test 3 :: setDataArray Private'.PHP_EOL;\n$_fail->runTest3();\n```\nResult:\n```\nTest 1 :: Public\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n    [3] => data 1\n    [4] => data 2\n    [5] => data 3\n    [6] => data 4\n    [7] => data 5\n    [8] => data 6\n    [9] => data 7\n    [10] => data 8\n)\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\nTest 2 :: setDataArray Protected\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n    [3] => data 1\n    [4] => data 2\n    [5] => data 3\n    [6] => data 4\n    [7] => data 5\n    [8] => data 6\n    [9] => data 7\n    [10] => data 8\n)\nArray\n(\n    [0] => header 1\n    [1] => header 1\n    [2] => header 1\n    [3] => header 1\n    [4] => header 1\n    [5] => header 2\n    [6] => header 3\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\nTest 3 :: setDataArray Private\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\nArray\n(\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\n```\nPHP test code 2:\n```\n<?php\n$dataArray1 = [\n    \"header 1\",\n    \"header 2\",\n    \"header 3\",\n    \"data 1\",\n    \"data 2\",\n    \"data 3\",\n    \"data 4\",\n    \"data 5\",\n    \"data 6\",\n    \"data 7\",\n    \"data 8\"\n];\n$dataArray2 = [\n    \"header 1\",\n    \"header 2\",\n    \"header 3\",\n    \"data 1\",\n    \"data 2\",\n    \"data 3\",\n    \"data 4\",\n    \"data 5\",\n    \"data 6\",\n    \"data 7\",\n    \"data 8\"\n];\n$dataArray3 = [\n    \"header 1\",\n    \"header 2\",\n    \"header 3\",\n    \"data 1\",\n    \"data 2\",\n    \"data 3\",\n    \"data 4\",\n    \"data 5\",\n    \"data 6\",\n    \"data 7\",\n    \"data 8\"\n];\n$_fail = new Fail2\\fail2();\n$_fail->dataArray = $dataArray1;\n$_fail->setDataArray2($dataArray2);\n$_fail->setDataArray3($dataArray3);\necho PHP_EOL.PHP_EOL.'Test 1 :: Public'.PHP_EOL;\n$_fail->runTest1();\necho PHP_EOL.PHP_EOL.'Test 2 :: setDataArray Protected'.PHP_EOL;\n$_fail->runTest2();\necho PHP_EOL.PHP_EOL.'Test 3 :: setDataArray Private'.PHP_EOL;\n$_fail->runTest3();\n```\nResult:\n```\nTest 1 :: Public\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n    [3] => data 1\n    [4] => data 2\n    [5] => data 3\n    [6] => data 4\n    [7] => data 5\n    [8] => data 6\n    [9] => data 7\n    [10] => data 8\n)\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\nTest 2 :: setDataArray Protected\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n    [3] => data 1\n    [4] => data 2\n    [5] => data 3\n    [6] => data 4\n    [7] => data 5\n    [8] => data 6\n    [9] => data 7\n    [10] => data 8\n)\nArray\n(\n    [0] => header 1\n    [1] => header 1\n    [2] => header 1\n    [3] => header 2\n    [4] => header 3\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\nTest 3 :: setDataArray Private\nArray\n(\n    [0] => header 1\n    [1] => header 2\n    [2] => header 3\n    [3] => data 1\n    [4] => data 2\n    [5] => data 3\n    [6] => data 4\n    [7] => data 5\n    [8] => data 6\n    [9] => data 7\n    [10] => data 8\n)\nArray\n(\n    [0] => header 1\n    [1] => header 1\n    [2] => header 1\n    [3] => header 2\n    [4] => header 3\n)\nArray\n(\n    [0] => data 1\n    [1] => data 2\n    [2] => data 3\n    [3] => data 4\n    [4] => data 5\n    [5] => data 6\n    [6] => data 7\n    [7] => data 8\n)\n```\nEquivalent class in PHP:\n```\n<?php\nclass fail2{\n    public $dataArray1 = [\n        \"header 1\",\n        \"header 2\",\n        \"header 3\",\n        \"data 1\",\n        \"data 2\",\n        \"data 3\",\n        \"data 4\",\n        \"data 5\",\n        \"data 6\",\n        \"data 7\",\n        \"data 8\"\n    ];\n    protected $dataArray2 = [];\n    private $dataArray3 = [];\npublic function runTest1(){\n    print_r($this->dataArray1);\n\n    $headers = [];\n    while( true ){\n        $info = array_shift($this->dataArray1);\n\n        if( stripos($info, \"header\") !== false ){\n            $headers[] = $info;\n            continue;\n        } else {\n            array_unshift($this->dataArray1, $info);\n            break;\n        }\n    }\n\n    print_r($headers);\n    print_r($this->dataArray1);\n}\n\npublic function runTest2(){\n    print_r($this->dataArray2);\n\n    $headers2 = [];\n    while( true ){\n        $info2 = array_shift($this->dataArray2);\n\n        if( stripos($info2, \"header\") !== false ){\n            $headers2[] = $info2;\n            continue;\n        } else {\n            array_unshift($this->dataArray2, $info2);\n            break;\n        }\n    }\n\n    print_r($headers2);\n    print_r($this->dataArray2);\n}\n\npublic function runTest3(){\n    print_r($this->dataArray3);\n\n    $headers3 = [];\n    while( true ){\n        $info3 = array_shift($this->dataArray3);\n\n        if( stripos($info3, \"header\") !== false ){\n            $headers3[] = $info3;\n            continue;\n        } else {\n            array_unshift($this->dataArray3, $info3);\n            break;\n        }\n    }\n\n    print_r($headers3);\n    print_r($this->dataArray3);\n}\n\npublic function setDataArray2($data){\n    $this->dataArray2 = $data;\n}\n\npublic function setDataArray3($data){\n    $this->dataArray3 = $data;\n}\n\n}\n```\nThis class is working perfectly with test 1 and 2:\nTest 1 result: https://3v4l.org/In9J8\nTest 2 result: https://3v4l.org/ZU2C5\nPHP Version: 7.3.3\nZephir version: 0.11.11\nPHP API: 20180731\n. ",
    "Nitpick-CI": "Expected 0 spaces before closing bracket; newline found. Multi-line function call not indented correctly; expected 4 spaces but found 8. Multi-line function call not indented correctly; expected 4 spaces but found 8. Only one argument is allowed per line in a multi-line function call. Empty lines are not allowed in multi-line function calls. Line indented incorrectly; expected 0 spaces, found 4. Each interface must be in a file by itself. Each interface must be in a file by itself. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. Spaces must be used to indent lines; tabs are not allowed. ",
    "Jeckerson": "suggestion\n    public function testInstanceOf5(var a) -> bool. suggestion\n    public function testInstanceOf1() -> bool. "
}